
5dd566d349a0718dcc514094de7384c369f66cb593fdcc395d1df0248d59848f.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rbx
   140001002:	push   rsi
   140001003:	push   rdi
   140001004:	sub    rsp,0x70
   140001008:	mov    rsi,rcx
   14000100b:	lea    rcx,[rsp+0x40]
   140001010:	call   QWORD PTR [rip+0x1552a]        # 0x140016540
   140001016:	or     rcx,0xffffffffffffffff
   14000101a:	xor    eax,eax
   14000101c:	lea    rdx,[rip+0x15b39]        # 0x140016b5c
   140001023:	mov    QWORD PTR [rsp+0x38],rdx
   140001028:	mov    rdi,rdx
   14000102b:	lea    rdx,[rip+0x15b26]        # 0x140016b58
   140001032:	repnz scas al,BYTE PTR es:[rdi]
   140001034:	mov    rdi,rdx
   140001037:	not    rcx
   14000103a:	dec    rcx
   14000103d:	mov    DWORD PTR [rsp+0x30],ecx
   140001041:	or     rcx,0xffffffffffffffff
   140001045:	repnz scas al,BYTE PTR es:[rdi]
   140001047:	lea    rdi,[rip+0x15b02]        # 0x140016b50
   14000104e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140001053:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140001059:	not    rcx
   14000105c:	mov    QWORD PTR [rsp+0x38],rdx
   140001061:	dec    rcx
   140001064:	mov    DWORD PTR [rsp+0x30],ecx
   140001068:	or     rcx,0xffffffffffffffff
   14000106c:	repnz scas al,BYTE PTR es:[rdi]
   14000106e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140001073:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140001079:	not    rcx
   14000107c:	lea    rdx,[rcx-0x1]
   140001080:	lea    rcx,[rip+0x15ac9]        # 0x140016b50
   140001087:	call   QWORD PTR [rip+0x15843]        # 0x1400168d0
   14000108d:	lea    rcx,[rsp+0x90]
   140001095:	mov    dl,0x20
   140001097:	mov    QWORD PTR [rsp+0x30],rax
   14000109c:	call   QWORD PTR [rip+0x15876]        # 0x140016918
   1400010a2:	lea    rcx,[rsp+0xa0]
   1400010aa:	mov    dl,0x22
   1400010ac:	mov    rbx,rax
   1400010af:	call   QWORD PTR [rip+0x15863]        # 0x140016918
   1400010b5:	lea    rcx,[rsp+0xa8]
   1400010bd:	mov    dl,0x5c
   1400010bf:	mov    rdi,rax
   1400010c2:	call   QWORD PTR [rip+0x15850]        # 0x140016918
   1400010c8:	lea    r8,[rsp+0x50]
   1400010cd:	movzx  edx,WORD PTR [rax]
   1400010d0:	lea    rcx,[rsp+0x40]
   1400010d5:	mov    r9d,0x1
   1400010db:	call   QWORD PTR [rip+0x157f7]        # 0x1400168d8
   1400010e1:	movzx  edx,WORD PTR [rdi]
   1400010e4:	lea    r8,[rsp+0x60]
   1400010e9:	mov    rcx,rax
   1400010ec:	mov    r9d,0x1
   1400010f2:	call   QWORD PTR [rip+0x157e0]        # 0x1400168d8
   1400010f8:	lea    rcx,[rsp+0x30]
   1400010fd:	xor    r9d,r9d
   140001100:	mov    r8,rax
   140001103:	movzx  eax,WORD PTR [rbx]
   140001106:	mov    rdx,rsi
   140001109:	mov    WORD PTR [rsp+0x20],ax
   14000110e:	call   QWORD PTR [rip+0x157cc]        # 0x1400168e0
   140001114:	lea    rcx,[rsp+0x30]
   140001119:	call   QWORD PTR [rip+0x15819]        # 0x140016938
   14000111f:	lea    rcx,[rsp+0x40]
   140001124:	call   QWORD PTR [rip+0x1580e]        # 0x140016938
   14000112a:	mov    rax,rsi
   14000112d:	add    rsp,0x70
   140001131:	pop    rdi
   140001132:	pop    rsi
   140001133:	pop    rbx
   140001134:	ret    
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	mov    QWORD PTR [rsp+0x8],rbx
   140001145:	push   rdi
   140001146:	sub    rsp,0x30
   14000114a:	mov    rbx,rcx
   14000114d:	or     rcx,0xffffffffffffffff
   140001151:	lea    rdx,[rip+0x15a48]        # 0x140016ba0
   140001158:	mov    QWORD PTR [rsp+0x28],rdx
   14000115d:	mov    rdi,rdx
   140001160:	xor    eax,eax
   140001162:	repnz scas al,BYTE PTR es:[rdi]
   140001164:	lea    rdx,[rsp+0x20]
   140001169:	not    rcx
   14000116c:	dec    rcx
   14000116f:	mov    DWORD PTR [rsp+0x20],ecx
   140001173:	lea    rcx,[rsp+0x48]
   140001178:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000117d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001183:	call   QWORD PTR [rip+0x15087]        # 0x140016210
   140001189:	mov    rcx,QWORD PTR [rbx]
   14000118c:	lea    rdx,[rsp+0x48]
   140001191:	call   0x140014230
   140001196:	lea    rcx,[rsp+0x48]
   14000119b:	call   QWORD PTR [rip+0x15797]        # 0x140016938
   1400011a1:	or     rcx,0xffffffffffffffff
   1400011a5:	lea    rdx,[rip+0x159e4]        # 0x140016b90
   1400011ac:	mov    QWORD PTR [rsp+0x28],rdx
   1400011b1:	mov    rdi,rdx
   1400011b4:	xor    eax,eax
   1400011b6:	repnz scas al,BYTE PTR es:[rdi]
   1400011b8:	lea    rdx,[rsp+0x20]
   1400011bd:	not    rcx
   1400011c0:	dec    rcx
   1400011c3:	mov    DWORD PTR [rsp+0x20],ecx
   1400011c7:	lea    rcx,[rsp+0x50]
   1400011cc:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400011d1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400011d7:	call   QWORD PTR [rip+0x15033]        # 0x140016210
   1400011dd:	or     rcx,0xffffffffffffffff
   1400011e1:	lea    rdx,[rip+0x1599c]        # 0x140016b84
   1400011e8:	xor    eax,eax
   1400011ea:	mov    QWORD PTR [rsp+0x28],rdx
   1400011ef:	mov    rdi,rdx
   1400011f2:	lea    rdx,[rsp+0x20]
   1400011f7:	repnz scas al,BYTE PTR es:[rdi]
   1400011f9:	not    rcx
   1400011fc:	dec    rcx
   1400011ff:	mov    DWORD PTR [rsp+0x20],ecx
   140001203:	lea    rcx,[rsp+0x48]
   140001208:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000120d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001213:	call   QWORD PTR [rip+0x14ff7]        # 0x140016210
   140001219:	lea    rdx,[rsp+0x50]
   14000121e:	lea    rcx,[rsp+0x58]
   140001223:	call   0x140001000
   140001228:	mov    rcx,QWORD PTR [rbx]
   14000122b:	lea    rdx,[rsp+0x48]
   140001230:	mov    r8,rax
   140001233:	call   0x140014b80
   140001238:	lea    rcx,[rsp+0x58]
   14000123d:	call   QWORD PTR [rip+0x156f5]        # 0x140016938
   140001243:	lea    rcx,[rsp+0x48]
   140001248:	call   QWORD PTR [rip+0x156ea]        # 0x140016938
   14000124e:	lea    rcx,[rsp+0x50]
   140001253:	call   QWORD PTR [rip+0x156df]        # 0x140016938
   140001259:	or     rcx,0xffffffffffffffff
   14000125d:	lea    rdx,[rip+0x1590c]        # 0x140016b70
   140001264:	mov    QWORD PTR [rsp+0x28],rdx
   140001269:	mov    rdi,rdx
   14000126c:	xor    eax,eax
   14000126e:	repnz scas al,BYTE PTR es:[rdi]
   140001270:	lea    rdx,[rsp+0x20]
   140001275:	not    rcx
   140001278:	dec    rcx
   14000127b:	mov    DWORD PTR [rsp+0x20],ecx
   14000127f:	lea    rcx,[rsp+0x50]
   140001284:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140001289:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000128f:	call   QWORD PTR [rip+0x14f7b]        # 0x140016210
   140001295:	or     rcx,0xffffffffffffffff
   140001299:	lea    rdx,[rip+0x158c0]        # 0x140016b60
   1400012a0:	xor    eax,eax
   1400012a2:	mov    rdi,rdx
   1400012a5:	repnz scas al,BYTE PTR es:[rdi]
   1400012a7:	not    rcx
   1400012aa:	mov    QWORD PTR [rsp+0x28],rdx
   1400012af:	dec    rcx
   1400012b2:	lea    rdx,[rsp+0x20]
   1400012b7:	mov    DWORD PTR [rsp+0x20],ecx
   1400012bb:	lea    rcx,[rsp+0x48]
   1400012c0:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400012c5:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400012cb:	call   QWORD PTR [rip+0x14f3f]        # 0x140016210
   1400012d1:	lea    rdx,[rsp+0x50]
   1400012d6:	lea    rcx,[rsp+0x58]
   1400012db:	call   0x140001000
   1400012e0:	mov    rcx,QWORD PTR [rbx]
   1400012e3:	lea    rdx,[rsp+0x48]
   1400012e8:	mov    r8,rax
   1400012eb:	call   0x140014b80
   1400012f0:	lea    rcx,[rsp+0x58]
   1400012f5:	call   QWORD PTR [rip+0x1563d]        # 0x140016938
   1400012fb:	lea    rcx,[rsp+0x48]
   140001300:	call   QWORD PTR [rip+0x15632]        # 0x140016938
   140001306:	lea    rcx,[rsp+0x50]
   14000130b:	call   QWORD PTR [rip+0x15627]        # 0x140016938
   140001311:	mov    rcx,QWORD PTR [rbx]
   140001314:	mov    rbx,QWORD PTR [rsp+0x40]
   140001319:	add    rsp,0x30
   14000131d:	pop    rdi
   14000131e:	jmp    0x140014320
   140001323:	int3   
   140001324:	int3   
   140001325:	int3   
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	cmp    rdx,r8
   140001333:	je     0x14000137d
   140001335:	mov    QWORD PTR [rsp+0x8],rbx
   14000133a:	mov    QWORD PTR [rsp+0x10],rsi
   14000133f:	push   rdi
   140001340:	sub    rsp,0x20
   140001344:	mov    rdi,r9
   140001347:	mov    rsi,r8
   14000134a:	mov    rbx,rdx
   14000134d:	nop    DWORD PTR [rax]
   140001350:	test   rbx,rbx
   140001353:	je     0x140001361
   140001355:	mov    rdx,rdi
   140001358:	mov    rcx,rbx
   14000135b:	call   QWORD PTR [rip+0x151df]        # 0x140016540
   140001361:	add    rbx,0x8
   140001365:	add    rdi,0x8
   140001369:	cmp    rbx,rsi
   14000136c:	jne    0x140001350
   14000136e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001373:	mov    rsi,QWORD PTR [rsp+0x38]
   140001378:	add    rsp,0x20
   14000137c:	pop    rdi
   14000137d:	repz ret 
   14000137f:	int3   
   140001380:	sub    rsp,0x28
   140001384:	mov    r8,rdx
   140001387:	test   rdx,rdx
   14000138a:	je     0x1400013a7
   14000138c:	mov    eax,DWORD PTR [rcx+0x8]
   14000138f:	mov    QWORD PTR [rdx],0x0
   140001396:	mov    DWORD PTR [rdx+0x8],eax
   140001399:	lea    rdx,[rcx+0x10]
   14000139d:	lea    rcx,[r8+0x10]
   1400013a1:	call   QWORD PTR [rip+0x15199]        # 0x140016540
   1400013a7:	add    rsp,0x28
   1400013ab:	ret    
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	test   rdx,rdx
   1400013b3:	je     0x1400013ce
   1400013b5:	mov    eax,DWORD PTR [rcx+0x8]
   1400013b8:	mov    QWORD PTR [rdx],0x0
   1400013bf:	mov    DWORD PTR [rdx+0x8],eax
   1400013c2:	mov    eax,DWORD PTR [rcx+0xc]
   1400013c5:	mov    DWORD PTR [rdx+0xc],eax
   1400013c8:	mov    eax,DWORD PTR [rcx+0x10]
   1400013cb:	mov    DWORD PTR [rdx+0x10],eax
   1400013ce:	repz ret 
   1400013d0:	test   rdx,rdx
   1400013d3:	je     0x140001418
   1400013d5:	mov    QWORD PTR [rsp+0x8],rbx
   1400013da:	push   rdi
   1400013db:	sub    rsp,0x20
   1400013df:	mov    eax,DWORD PTR [rcx+0x8]
   1400013e2:	mov    rbx,rdx
   1400013e5:	mov    QWORD PTR [rdx],0x0
   1400013ec:	mov    DWORD PTR [rdx+0x8],eax
   1400013ef:	lea    rdx,[rcx+0x10]
   1400013f3:	mov    rdi,rcx
   1400013f6:	lea    rcx,[rbx+0x10]
   1400013fa:	call   QWORD PTR [rip+0x14e90]        # 0x140016290
   140001400:	lea    rdx,[rdi+0x18]
   140001404:	lea    rcx,[rbx+0x18]
   140001408:	call   QWORD PTR [rip+0x14e82]        # 0x140016290
   14000140e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001413:	add    rsp,0x20
   140001417:	pop    rdi
   140001418:	repz ret 
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	sub    rsp,0x28
   140001424:	mov    r8,rdx
   140001427:	test   rdx,rdx
   14000142a:	je     0x14000144f
   14000142c:	mov    eax,DWORD PTR [rcx+0x8]
   14000142f:	mov    QWORD PTR [rdx],0x0
   140001436:	mov    DWORD PTR [rdx+0x8],eax
   140001439:	mov    rax,QWORD PTR [rcx+0x10]
   14000143d:	mov    QWORD PTR [rdx+0x10],rax
   140001441:	lea    rdx,[rcx+0x18]
   140001445:	lea    rcx,[r8+0x18]
   140001449:	call   QWORD PTR [rip+0x14e41]        # 0x140016290
   14000144f:	add    rsp,0x28
   140001453:	ret    
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	mov    r8,rdx
   140001467:	test   rdx,rdx
   14000146a:	je     0x140001487
   14000146c:	mov    eax,DWORD PTR [rcx+0x8]
   14000146f:	mov    QWORD PTR [rdx],0x0
   140001476:	mov    DWORD PTR [rdx+0x8],eax
   140001479:	lea    rdx,[rcx+0x10]
   14000147d:	lea    rcx,[r8+0x10]
   140001481:	call   QWORD PTR [rip+0x14e09]        # 0x140016290
   140001487:	add    rsp,0x28
   14000148b:	ret    
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	test   rdx,rdx
   140001493:	je     0x1400014d2
   140001495:	mov    QWORD PTR [rsp+0x8],rbx
   14000149a:	push   rdi
   14000149b:	sub    rsp,0x20
   14000149f:	mov    eax,DWORD PTR [rcx+0x8]
   1400014a2:	mov    rbx,rdx
   1400014a5:	mov    QWORD PTR [rdx],0x0
   1400014ac:	mov    DWORD PTR [rdx+0x8],eax
   1400014af:	lea    rdx,[rcx+0x10]
   1400014b3:	mov    rdi,rcx
   1400014b6:	lea    rcx,[rbx+0x10]
   1400014ba:	call   QWORD PTR [rip+0x14dd0]        # 0x140016290
   1400014c0:	mov    r11d,DWORD PTR [rdi+0x18]
   1400014c4:	mov    DWORD PTR [rbx+0x18],r11d
   1400014c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014cd:	add    rsp,0x20
   1400014d1:	pop    rdi
   1400014d2:	repz ret 
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	test   rdx,rdx
   1400014e3:	je     0x140001522
   1400014e5:	mov    QWORD PTR [rsp+0x8],rbx
   1400014ea:	push   rdi
   1400014eb:	sub    rsp,0x20
   1400014ef:	mov    eax,DWORD PTR [rcx+0x8]
   1400014f2:	mov    rbx,rdx
   1400014f5:	mov    QWORD PTR [rdx],0x0
   1400014fc:	mov    DWORD PTR [rdx+0x8],eax
   1400014ff:	lea    rdx,[rcx+0x10]
   140001503:	mov    rdi,rcx
   140001506:	lea    rcx,[rbx+0x10]
   14000150a:	call   QWORD PTR [rip+0x15030]        # 0x140016540
   140001510:	mov    r11,QWORD PTR [rdi+0x18]
   140001514:	mov    QWORD PTR [rbx+0x18],r11
   140001518:	mov    rbx,QWORD PTR [rsp+0x30]
   14000151d:	add    rsp,0x20
   140001521:	pop    rdi
   140001522:	repz ret 
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	cmp    rdx,r8
   140001533:	je     0x1400015be
   140001539:	mov    QWORD PTR [rsp+0x18],rbp
   14000153e:	mov    QWORD PTR [rsp+0x20],rdi
   140001543:	push   r12
   140001545:	sub    rsp,0x20
   140001549:	mov    QWORD PTR [rsp+0x30],rbx
   14000154e:	mov    rbp,r9
   140001551:	mov    r12,r8
   140001554:	mov    QWORD PTR [rsp+0x38],rsi
   140001559:	mov    rdi,rdx
   14000155c:	nop    DWORD PTR [rax+0x0]
   140001560:	mov    ecx,0x10
   140001565:	call   0x140015090
   14000156a:	mov    rsi,rax
   14000156d:	test   rax,rax
   140001570:	je     0x140001592
   140001572:	mov    rbx,QWORD PTR [rbp+0x0]
   140001576:	mov    rcx,rax
   140001579:	mov    rdx,rbx
   14000157c:	call   QWORD PTR [rip+0x14fbe]        # 0x140016540
   140001582:	lea    rdx,[rbx+0x8]
   140001586:	lea    rcx,[rsi+0x8]
   14000158a:	call   QWORD PTR [rip+0x14fb0]        # 0x140016540
   140001590:	jmp    0x140001594
   140001592:	xor    esi,esi
   140001594:	mov    QWORD PTR [rdi],rsi
   140001597:	add    rdi,0x8
   14000159b:	add    rbp,0x8
   14000159f:	cmp    rdi,r12
   1400015a2:	jne    0x140001560
   1400015a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015ae:	mov    rbp,QWORD PTR [rsp+0x40]
   1400015b3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400015b8:	add    rsp,0x20
   1400015bc:	pop    r12
   1400015be:	repz ret 
   1400015c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015ca:	push   rdi
   1400015cb:	sub    rsp,0x30
   1400015cf:	xor    r9d,r9d
   1400015d2:	mov    rsi,rdx
   1400015d5:	mov    rdi,rcx
   1400015d8:	lea    edx,[r9+0x28]
   1400015dc:	lea    r8d,[r9+0x8]
   1400015e0:	mov    rcx,rsi
   1400015e3:	mov    BYTE PTR [rsp+0x20],0x0
   1400015e8:	call   QWORD PTR [rip+0x14c72]        # 0x140016260
   1400015ee:	lea    rcx,[rax+0x18]
   1400015f2:	mov    rbx,rax
   1400015f5:	test   rcx,rcx
   1400015f8:	je     0x140001604
   1400015fa:	lea    rdx,[rdi+0x18]
   1400015fe:	call   QWORD PTR [rip+0x14f3c]        # 0x140016540
   140001604:	lea    rax,[rbx+0x20]
   140001608:	test   rax,rax
   14000160b:	je     0x140001614
   14000160d:	mov    rcx,QWORD PTR [rdi+0x20]
   140001611:	mov    QWORD PTR [rax],rcx
   140001614:	test   BYTE PTR [rdi],0x1
   140001617:	je     0x14000161f
   140001619:	or     QWORD PTR [rbx],0x1
   14000161d:	jmp    0x140001623
   14000161f:	and    QWORD PTR [rbx],0xfffffffffffffffe
   140001623:	mov    rcx,QWORD PTR [rdi+0x8]
   140001627:	test   rcx,rcx
   14000162a:	je     0x140001641
   14000162c:	mov    rdx,rsi
   14000162f:	call   0x1400015c0
   140001634:	mov    QWORD PTR [rbx+0x8],rax
   140001638:	and    QWORD PTR [rax],0x3
   14000163c:	or     QWORD PTR [rax],rbx
   14000163f:	jmp    0x140001649
   140001641:	mov    QWORD PTR [rbx+0x8],0x0
   140001649:	mov    rcx,QWORD PTR [rdi+0x10]
   14000164d:	test   rcx,rcx
   140001650:	je     0x140001678
   140001652:	mov    rdx,rsi
   140001655:	call   0x1400015c0
   14000165a:	mov    QWORD PTR [rbx+0x10],rax
   14000165e:	and    QWORD PTR [rax],0x3
   140001662:	or     QWORD PTR [rax],rbx
   140001665:	mov    rax,rbx
   140001668:	mov    rbx,QWORD PTR [rsp+0x40]
   14000166d:	mov    rsi,QWORD PTR [rsp+0x48]
   140001672:	add    rsp,0x30
   140001676:	pop    rdi
   140001677:	ret    
   140001678:	mov    rsi,QWORD PTR [rsp+0x48]
   14000167d:	mov    QWORD PTR [rbx+0x10],0x0
   140001685:	mov    rax,rbx
   140001688:	mov    rbx,QWORD PTR [rsp+0x40]
   14000168d:	add    rsp,0x30
   140001691:	pop    rdi
   140001692:	ret    
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    rax,rsp
   1400016a3:	mov    QWORD PTR [rax+0x8],rcx
   1400016a7:	push   r12
   1400016a9:	push   r13
   1400016ab:	push   r14
   1400016ad:	sub    rsp,0x50
   1400016b1:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400016ba:	mov    QWORD PTR [rax+0x10],rbx
   1400016be:	mov    QWORD PTR [rax+0x18],rsi
   1400016c2:	mov    QWORD PTR [rax+0x20],rdi
   1400016c6:	mov    r14,rdx
   1400016c9:	mov    rsi,rcx
   1400016cc:	xor    ebx,ebx
   1400016ce:	mov    DWORD PTR [rax-0x48],ebx
   1400016d1:	xor    eax,eax
   1400016d3:	or     rcx,0xffffffffffffffff
   1400016d7:	mov    rdi,rdx
   1400016da:	repnz scas al,BYTE PTR es:[rdi]
   1400016dc:	not    rcx
   1400016df:	lea    r13,[rcx-0x1]
   1400016e3:	mov    rax,QWORD PTR [rsi]
   1400016e6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016ea:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400016ef:	test   rdi,rdi
   1400016f2:	jle    0x1400016fe
   1400016f4:	cmp    rdi,r13
   1400016f7:	jle    0x1400016fe
   1400016f9:	sub    rdi,r13
   1400016fc:	jmp    0x140001700
   1400016fe:	xor    edi,edi
   140001700:	mov    r12,rsi
   140001703:	mov    QWORD PTR [rsp+0x38],rsi
   140001708:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000170d:	test   rcx,rcx
   140001710:	je     0x14000171c
   140001712:	add    rcx,0x8
   140001716:	call   QWORD PTR [rip+0x149b4]        # 0x1400160d0
   14000171c:	mov    rax,QWORD PTR [rsi]
   14000171f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001723:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001727:	jne    0x140001739
   140001729:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000172e:	test   rcx,rcx
   140001731:	je     0x140001739
   140001733:	call   QWORD PTR [rip+0x14987]        # 0x1400160c0
   140001739:	mov    rax,QWORD PTR [rsi]
   14000173c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001740:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001744:	sete   al
   140001747:	test   al,al
   140001749:	jne    0x140001755
   14000174b:	mov    ebx,0x4
   140001750:	jmp    0x140001824
   140001755:	mov    rax,QWORD PTR [rsi]
   140001758:	movsxd rcx,DWORD PTR [rax+0x4]
   14000175c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001760:	and    eax,0x1c0
   140001765:	cmp    eax,0x40
   140001768:	je     0x1400017a8
   14000176a:	nop    WORD PTR [rax+rax*1+0x0]
   140001770:	test   rdi,rdi
   140001773:	jle    0x1400017a4
   140001775:	mov    rax,QWORD PTR [rsi]
   140001778:	movsxd rcx,DWORD PTR [rax+0x4]
   14000177c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001781:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001786:	call   QWORD PTR [rip+0x148fc]        # 0x140016088
   14000178c:	cmp    eax,0xffffffff
   14000178f:	jne    0x14000179a
   140001791:	or     ebx,0x4
   140001794:	mov    DWORD PTR [rsp+0x20],ebx
   140001798:	jmp    0x1400017a4
   14000179a:	dec    rdi
   14000179d:	mov    QWORD PTR [rsp+0x28],rdi
   1400017a2:	jmp    0x140001770
   1400017a4:	test   ebx,ebx
   1400017a6:	jne    0x140001804
   1400017a8:	mov    rax,QWORD PTR [rsi]
   1400017ab:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017af:	mov    r8,r13
   1400017b2:	mov    rdx,r14
   1400017b5:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400017ba:	call   QWORD PTR [rip+0x148d0]        # 0x140016090
   1400017c0:	cmp    rax,r13
   1400017c3:	je     0x1400017d0
   1400017c5:	mov    ebx,0x4
   1400017ca:	mov    DWORD PTR [rsp+0x20],ebx
   1400017ce:	jmp    0x140001804
   1400017d0:	test   rdi,rdi
   1400017d3:	jle    0x140001804
   1400017d5:	mov    rax,QWORD PTR [rsi]
   1400017d8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017dc:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400017e1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400017e6:	call   QWORD PTR [rip+0x1489c]        # 0x140016088
   1400017ec:	cmp    eax,0xffffffff
   1400017ef:	jne    0x1400017fa
   1400017f1:	or     ebx,0x4
   1400017f4:	mov    DWORD PTR [rsp+0x20],ebx
   1400017f8:	jmp    0x140001804
   1400017fa:	dec    rdi
   1400017fd:	mov    QWORD PTR [rsp+0x28],rdi
   140001802:	jmp    0x1400017d0
   140001804:	mov    rax,QWORD PTR [rsi]
   140001807:	movsxd rcx,DWORD PTR [rax+0x4]
   14000180b:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001814:	jmp    0x140001824
   140001816:	mov    rsi,QWORD PTR [rsp+0x70]
   14000181b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000181f:	mov    r12,QWORD PTR [rsp+0x38]
   140001824:	mov    rax,QWORD PTR [rsi]
   140001827:	movsxd rcx,DWORD PTR [rax+0x4]
   14000182b:	add    rcx,rsi
   14000182e:	xor    r8d,r8d
   140001831:	mov    edx,ebx
   140001833:	call   QWORD PTR [rip+0x1485f]        # 0x140016098
   140001839:	call   QWORD PTR [rip+0x14871]        # 0x1400160b0
   14000183f:	test   al,al
   140001841:	jne    0x14000184c
   140001843:	mov    rcx,r12
   140001846:	call   QWORD PTR [rip+0x1486c]        # 0x1400160b8
   14000184c:	mov    rax,QWORD PTR [r12]
   140001850:	movsxd rcx,DWORD PTR [rax+0x4]
   140001854:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001859:	test   rcx,rcx
   14000185c:	je     0x14000186d
   14000185e:	add    rcx,0x8
   140001862:	call   QWORD PTR [rip+0x14860]        # 0x1400160c8
   140001868:	mov    rax,rsi
   14000186b:	jmp    0x140001870
   14000186d:	mov    rax,rsi
   140001870:	lea    r11,[rsp+0x50]
   140001875:	mov    rbx,QWORD PTR [r11+0x28]
   140001879:	mov    rsi,QWORD PTR [r11+0x30]
   14000187d:	mov    rdi,QWORD PTR [r11+0x38]
   140001881:	mov    rsp,r11
   140001884:	pop    r14
   140001886:	pop    r13
   140001888:	pop    r12
   14000188a:	ret    
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    rax,rsp
   140001893:	mov    QWORD PTR [rax+0x8],rcx
   140001897:	push   r12
   140001899:	push   r13
   14000189b:	push   r14
   14000189d:	sub    rsp,0x50
   1400018a1:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400018aa:	mov    QWORD PTR [rax+0x10],rbx
   1400018ae:	mov    QWORD PTR [rax+0x18],rsi
   1400018b2:	mov    QWORD PTR [rax+0x20],rdi
   1400018b6:	movzx  r14d,dl
   1400018ba:	mov    rdi,rcx
   1400018bd:	xor    esi,esi
   1400018bf:	mov    DWORD PTR [rax-0x48],esi
   1400018c2:	mov    r13,rcx
   1400018c5:	mov    QWORD PTR [rsp+0x38],rcx
   1400018ca:	mov    rax,QWORD PTR [rcx]
   1400018cd:	movsxd r8,DWORD PTR [rax+0x4]
   1400018d1:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400018d6:	test   rcx,rcx
   1400018d9:	je     0x1400018e5
   1400018db:	add    rcx,0x8
   1400018df:	call   QWORD PTR [rip+0x147eb]        # 0x1400160d0
   1400018e5:	mov    rax,QWORD PTR [rdi]
   1400018e8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018ec:	cmp    DWORD PTR [rcx+rdi*1+0x10],esi
   1400018f0:	jne    0x140001902
   1400018f2:	mov    rcx,QWORD PTR [rcx+rdi*1+0x50]
   1400018f7:	test   rcx,rcx
   1400018fa:	je     0x140001902
   1400018fc:	call   QWORD PTR [rip+0x147be]        # 0x1400160c0
   140001902:	mov    rax,QWORD PTR [rdi]
   140001905:	movsxd rbx,DWORD PTR [rax+0x4]
   140001909:	cmp    DWORD PTR [rbx+rdi*1+0x10],esi
   14000190d:	sete   al
   140001910:	test   al,al
   140001912:	je     0x1400019ea
   140001918:	mov    rbx,QWORD PTR [rbx+rdi*1+0x28]
   14000191d:	cmp    rbx,0x1
   140001921:	jg     0x140001927
   140001923:	xor    ebx,ebx
   140001925:	jmp    0x14000192a
   140001927:	dec    rbx
   14000192a:	mov    rax,QWORD PTR [rdi]
   14000192d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001931:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140001935:	and    eax,0x1c0
   14000193a:	cmp    eax,0x40
   14000193d:	je     0x14000197e
   14000193f:	mov    r12d,0x4
   140001945:	test   esi,esi
   140001947:	jne    0x1400019da
   14000194d:	test   rbx,rbx
   140001950:	jle    0x140001984
   140001952:	mov    rax,QWORD PTR [rdi]
   140001955:	movsxd rcx,DWORD PTR [rax+0x4]
   140001959:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   14000195e:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001963:	call   QWORD PTR [rip+0x1471f]        # 0x140016088
   140001969:	cmp    eax,0xffffffff
   14000196c:	cmove  esi,r12d
   140001970:	mov    DWORD PTR [rsp+0x20],esi
   140001974:	dec    rbx
   140001977:	mov    QWORD PTR [rsp+0x28],rbx
   14000197c:	jmp    0x140001945
   14000197e:	mov    r12d,0x4
   140001984:	mov    rax,QWORD PTR [rdi]
   140001987:	movsxd rcx,DWORD PTR [rax+0x4]
   14000198b:	movzx  edx,r14b
   14000198f:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001994:	call   QWORD PTR [rip+0x146ee]        # 0x140016088
   14000199a:	cmp    eax,0xffffffff
   14000199d:	cmove  esi,r12d
   1400019a1:	mov    DWORD PTR [rsp+0x20],esi
   1400019a5:	test   esi,esi
   1400019a7:	jne    0x1400019da
   1400019a9:	test   rbx,rbx
   1400019ac:	jle    0x1400019da
   1400019ae:	mov    rax,QWORD PTR [rdi]
   1400019b1:	movsxd rcx,DWORD PTR [rax+0x4]
   1400019b5:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   1400019ba:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400019bf:	call   QWORD PTR [rip+0x146c3]        # 0x140016088
   1400019c5:	cmp    eax,0xffffffff
   1400019c8:	cmove  esi,r12d
   1400019cc:	mov    DWORD PTR [rsp+0x20],esi
   1400019d0:	dec    rbx
   1400019d3:	mov    QWORD PTR [rsp+0x28],rbx
   1400019d8:	jmp    0x1400019a5
   1400019da:	jmp    0x1400019ea
   1400019dc:	mov    rdi,QWORD PTR [rsp+0x70]
   1400019e1:	mov    esi,DWORD PTR [rsp+0x20]
   1400019e5:	mov    r13,QWORD PTR [rsp+0x38]
   1400019ea:	mov    rax,QWORD PTR [rdi]
   1400019ed:	movsxd rcx,DWORD PTR [rax+0x4]
   1400019f1:	mov    QWORD PTR [rcx+rdi*1+0x28],0x0
   1400019fa:	mov    rax,QWORD PTR [rdi]
   1400019fd:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a01:	add    rcx,rdi
   140001a04:	xor    r8d,r8d
   140001a07:	mov    edx,esi
   140001a09:	call   QWORD PTR [rip+0x14689]        # 0x140016098
   140001a0f:	call   QWORD PTR [rip+0x1469b]        # 0x1400160b0
   140001a15:	test   al,al
   140001a17:	jne    0x140001a22
   140001a19:	mov    rcx,r13
   140001a1c:	call   QWORD PTR [rip+0x14696]        # 0x1400160b8
   140001a22:	mov    rax,QWORD PTR [r13+0x0]
   140001a26:	movsxd rcx,DWORD PTR [rax+0x4]
   140001a2a:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   140001a2f:	test   rcx,rcx
   140001a32:	je     0x140001a43
   140001a34:	add    rcx,0x8
   140001a38:	call   QWORD PTR [rip+0x1468a]        # 0x1400160c8
   140001a3e:	mov    rax,rdi
   140001a41:	jmp    0x140001a46
   140001a43:	mov    rax,rdi
   140001a46:	lea    r11,[rsp+0x50]
   140001a4b:	mov    rbx,QWORD PTR [r11+0x28]
   140001a4f:	mov    rsi,QWORD PTR [r11+0x30]
   140001a53:	mov    rdi,QWORD PTR [r11+0x38]
   140001a57:	mov    rsp,r11
   140001a5a:	pop    r14
   140001a5c:	pop    r13
   140001a5e:	pop    r12
   140001a60:	ret    
   140001a61:	int3   
   140001a62:	int3   
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    rax,rsp
   140001a73:	mov    QWORD PTR [rax+0x8],rcx
   140001a77:	push   rdi
   140001a78:	push   r12
   140001a7a:	push   r13
   140001a7c:	push   r14
   140001a7e:	push   r15
   140001a80:	sub    rsp,0x50
   140001a84:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001a8d:	mov    QWORD PTR [rax+0x10],rbx
   140001a91:	mov    QWORD PTR [rax+0x18],rsi
   140001a95:	mov    r15,rdx
   140001a98:	mov    rsi,rcx
   140001a9b:	xor    ebx,ebx
   140001a9d:	mov    DWORD PTR [rax-0x58],ebx
   140001aa0:	xor    eax,eax
   140001aa2:	or     rcx,0xffffffffffffffff
   140001aa6:	mov    rdi,rdx
   140001aa9:	repnz scas ax,WORD PTR es:[rdi]
   140001aac:	not    rcx
   140001aaf:	lea    r14,[rcx-0x1]
   140001ab3:	mov    rax,QWORD PTR [rsi]
   140001ab6:	movsxd rcx,DWORD PTR [rax+0x4]
   140001aba:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001abf:	test   rdi,rdi
   140001ac2:	jle    0x140001ace
   140001ac4:	cmp    rdi,r14
   140001ac7:	jle    0x140001ace
   140001ac9:	sub    rdi,r14
   140001acc:	jmp    0x140001ad0
   140001ace:	xor    edi,edi
   140001ad0:	mov    r12,rsi
   140001ad3:	mov    QWORD PTR [rsp+0x38],rsi
   140001ad8:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001add:	test   rcx,rcx
   140001ae0:	je     0x140001aec
   140001ae2:	add    rcx,0x8
   140001ae6:	call   QWORD PTR [rip+0x145e4]        # 0x1400160d0
   140001aec:	mov    rax,QWORD PTR [rsi]
   140001aef:	movsxd rcx,DWORD PTR [rax+0x4]
   140001af3:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001af7:	jne    0x140001b09
   140001af9:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140001afe:	test   rcx,rcx
   140001b01:	je     0x140001b09
   140001b03:	call   QWORD PTR [rip+0x1459f]        # 0x1400160a8
   140001b09:	mov    rax,QWORD PTR [rsi]
   140001b0c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b10:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001b14:	sete   al
   140001b17:	test   al,al
   140001b19:	jne    0x140001b25
   140001b1b:	mov    ebx,0x4
   140001b20:	jmp    0x140001c08
   140001b25:	mov    rax,QWORD PTR [rsi]
   140001b28:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b2c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001b30:	and    eax,0x1c0
   140001b35:	cmp    eax,0x40
   140001b38:	je     0x140001b7b
   140001b3a:	mov    r13d,0xffff
   140001b40:	test   rdi,rdi
   140001b43:	jle    0x140001b75
   140001b45:	mov    rax,QWORD PTR [rsi]
   140001b48:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b4c:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   140001b51:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001b56:	call   QWORD PTR [rip+0x14514]        # 0x140016070
   140001b5c:	cmp    r13w,ax
   140001b60:	jne    0x140001b6b
   140001b62:	or     ebx,0x4
   140001b65:	mov    DWORD PTR [rsp+0x20],ebx
   140001b69:	jmp    0x140001b75
   140001b6b:	dec    rdi
   140001b6e:	mov    QWORD PTR [rsp+0x28],rdi
   140001b73:	jmp    0x140001b40
   140001b75:	test   ebx,ebx
   140001b77:	jne    0x140001be5
   140001b79:	jmp    0x140001b81
   140001b7b:	mov    r13d,0xffff
   140001b81:	mov    rax,QWORD PTR [rsi]
   140001b84:	movsxd rcx,DWORD PTR [rax+0x4]
   140001b88:	mov    r8,r14
   140001b8b:	mov    rdx,r15
   140001b8e:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001b93:	call   QWORD PTR [rip+0x144df]        # 0x140016078
   140001b99:	cmp    rax,r14
   140001b9c:	je     0x140001bb0
   140001b9e:	mov    ebx,0x4
   140001ba3:	mov    DWORD PTR [rsp+0x20],ebx
   140001ba7:	jmp    0x140001be5
   140001ba9:	nop    DWORD PTR [rax+0x0]
   140001bb0:	test   rdi,rdi
   140001bb3:	jle    0x140001be5
   140001bb5:	mov    rax,QWORD PTR [rsi]
   140001bb8:	movsxd rcx,DWORD PTR [rax+0x4]
   140001bbc:	movzx  edx,WORD PTR [rcx+rsi*1+0x58]
   140001bc1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001bc6:	call   QWORD PTR [rip+0x144a4]        # 0x140016070
   140001bcc:	cmp    r13w,ax
   140001bd0:	jne    0x140001bdb
   140001bd2:	or     ebx,0x4
   140001bd5:	mov    DWORD PTR [rsp+0x20],ebx
   140001bd9:	jmp    0x140001be5
   140001bdb:	dec    rdi
   140001bde:	mov    QWORD PTR [rsp+0x28],rdi
   140001be3:	jmp    0x140001bb0
   140001be5:	mov    rax,QWORD PTR [rsi]
   140001be8:	movsxd rcx,DWORD PTR [rax+0x4]
   140001bec:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001bf5:	jmp    0x140001c08
   140001bf7:	mov    rsi,QWORD PTR [rsp+0x80]
   140001bff:	mov    ebx,DWORD PTR [rsp+0x20]
   140001c03:	mov    r12,QWORD PTR [rsp+0x38]
   140001c08:	mov    rax,QWORD PTR [rsi]
   140001c0b:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c0f:	add    rcx,rsi
   140001c12:	xor    r8d,r8d
   140001c15:	mov    edx,ebx
   140001c17:	call   QWORD PTR [rip+0x14463]        # 0x140016080
   140001c1d:	call   QWORD PTR [rip+0x1448d]        # 0x1400160b0
   140001c23:	test   al,al
   140001c25:	jne    0x140001c30
   140001c27:	mov    rcx,r12
   140001c2a:	call   QWORD PTR [rip+0x14470]        # 0x1400160a0
   140001c30:	mov    rax,QWORD PTR [r12]
   140001c34:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c38:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001c3d:	test   rcx,rcx
   140001c40:	je     0x140001c51
   140001c42:	add    rcx,0x8
   140001c46:	call   QWORD PTR [rip+0x1447c]        # 0x1400160c8
   140001c4c:	mov    rax,rsi
   140001c4f:	jmp    0x140001c54
   140001c51:	mov    rax,rsi
   140001c54:	lea    r11,[rsp+0x50]
   140001c59:	mov    rbx,QWORD PTR [r11+0x38]
   140001c5d:	mov    rsi,QWORD PTR [r11+0x40]
   140001c61:	mov    rsp,r11
   140001c64:	pop    r15
   140001c66:	pop    r14
   140001c68:	pop    r13
   140001c6a:	pop    r12
   140001c6c:	pop    rdi
   140001c6d:	ret    
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	test   rdx,rdx
   140001c73:	je     0x140001c8a
   140001c75:	mov    eax,DWORD PTR [rcx+0x8]
   140001c78:	mov    QWORD PTR [rdx],0x0
   140001c7f:	mov    DWORD PTR [rdx+0x8],eax
   140001c82:	mov    rax,QWORD PTR [rcx+0x10]
   140001c86:	mov    QWORD PTR [rdx+0x10],rax
   140001c8a:	repz ret 
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    QWORD PTR [rsp+0x8],rbx
   140001c95:	mov    QWORD PTR [rsp+0x10],rbp
   140001c9a:	mov    QWORD PTR [rsp+0x18],rsi
   140001c9f:	push   rdi
   140001ca0:	push   r12
   140001ca2:	push   r13
   140001ca4:	sub    rsp,0x20
   140001ca8:	mov    rsi,rcx
   140001cab:	mov    rcx,QWORD PTR [rcx]
   140001cae:	mov    r13d,edx
   140001cb1:	mov    edx,0x8
   140001cb6:	mov    rbp,r9
   140001cb9:	mov    r12,r8
   140001cbc:	call   QWORD PTR [rip+0x145ee]        # 0x1400162b0
   140001cc2:	mov    rdi,QWORD PTR [rsp+0x60]
   140001cc7:	mov    rbx,rax
   140001cca:	test   rax,rax
   140001ccd:	je     0x140001cf5
   140001ccf:	mov    rax,QWORD PTR [rdi]
   140001cd2:	lea    rcx,[rbx+0x10]
   140001cd6:	mov    rdx,r12
   140001cd9:	mov    QWORD PTR [rbx],rax
   140001cdc:	mov    DWORD PTR [rbx+0x8],r13d
   140001ce0:	call   QWORD PTR [rip+0x145aa]        # 0x140016290
   140001ce6:	lea    rcx,[rbx+0x18]
   140001cea:	mov    rdx,rbp
   140001ced:	call   QWORD PTR [rip+0x1459d]        # 0x140016290
   140001cf3:	jmp    0x140001cf7
   140001cf5:	xor    ebx,ebx
   140001cf7:	mov    rbp,QWORD PTR [rsp+0x48]
   140001cfc:	mov    QWORD PTR [rdi],rbx
   140001cff:	mov    rcx,QWORD PTR [rsi]
   140001d02:	mov    rsi,QWORD PTR [rsp+0x50]
   140001d07:	inc    DWORD PTR [rcx+0x14]
   140001d0a:	mov    rax,rbx
   140001d0d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001d12:	add    rsp,0x20
   140001d16:	pop    r13
   140001d18:	pop    r12
   140001d1a:	pop    rdi
   140001d1b:	ret    
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	mov    QWORD PTR [rsp+0x8],rbx
   140001d25:	mov    QWORD PTR [rsp+0x10],rbp
   140001d2a:	mov    QWORD PTR [rsp+0x18],rsi
   140001d2f:	push   rdi
   140001d30:	push   r12
   140001d32:	push   r13
   140001d34:	sub    rsp,0x20
   140001d38:	mov    rsi,rcx
   140001d3b:	mov    rcx,QWORD PTR [rcx]
   140001d3e:	mov    r13d,edx
   140001d41:	mov    edx,0x8
   140001d46:	mov    rbp,r9
   140001d49:	mov    r12,r8
   140001d4c:	call   QWORD PTR [rip+0x1455e]        # 0x1400162b0
   140001d52:	mov    rdi,QWORD PTR [rsp+0x60]
   140001d57:	mov    rbx,rax
   140001d5a:	test   rax,rax
   140001d5d:	je     0x140001d80
   140001d5f:	mov    rax,QWORD PTR [rdi]
   140001d62:	mov    DWORD PTR [rbx+0x8],r13d
   140001d66:	lea    rcx,[rbx+0x18]
   140001d6a:	mov    QWORD PTR [rbx],rax
   140001d6d:	mov    rax,QWORD PTR [r12]
   140001d71:	mov    rdx,rbp
   140001d74:	mov    QWORD PTR [rbx+0x10],rax
   140001d78:	call   QWORD PTR [rip+0x14512]        # 0x140016290
   140001d7e:	jmp    0x140001d82
   140001d80:	xor    ebx,ebx
   140001d82:	mov    rbp,QWORD PTR [rsp+0x48]
   140001d87:	mov    QWORD PTR [rdi],rbx
   140001d8a:	mov    rcx,QWORD PTR [rsi]
   140001d8d:	mov    rsi,QWORD PTR [rsp+0x50]
   140001d92:	inc    DWORD PTR [rcx+0x14]
   140001d95:	mov    rax,rbx
   140001d98:	mov    rbx,QWORD PTR [rsp+0x40]
   140001d9d:	add    rsp,0x20
   140001da1:	pop    r13
   140001da3:	pop    r12
   140001da5:	pop    rdi
   140001da6:	ret    
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    QWORD PTR [rsp+0x10],rbx
   140001db5:	mov    QWORD PTR [rsp+0x18],rbp
   140001dba:	push   rsi
   140001dbb:	sub    rsp,0x20
   140001dbf:	movsxd rax,DWORD PTR [rdx+0xc]
   140001dc3:	mov    rbp,rdx
   140001dc6:	lea    rbx,[rdx+rax*8+0x10]
   140001dcb:	movsxd rax,DWORD PTR [rdx+0x8]
   140001dcf:	lea    rsi,[rdx+rax*8+0x10]
   140001dd4:	cmp    rsi,rbx
   140001dd7:	je     0x140001e12
   140001dd9:	mov    QWORD PTR [rsp+0x30],rdi
   140001dde:	xchg   ax,ax
   140001de0:	mov    rdi,QWORD PTR [rbx-0x8]
   140001de4:	sub    rbx,0x8
   140001de8:	test   rdi,rdi
   140001deb:	je     0x140001e08
   140001ded:	lea    rcx,[rdi+0x8]
   140001df1:	call   QWORD PTR [rip+0x14b41]        # 0x140016938
   140001df7:	mov    rcx,rdi
   140001dfa:	call   QWORD PTR [rip+0x14b38]        # 0x140016938
   140001e00:	mov    rcx,rdi
   140001e03:	call   0x14001508a
   140001e08:	cmp    rbx,rsi
   140001e0b:	jne    0x140001de0
   140001e0d:	mov    rdi,QWORD PTR [rsp+0x30]
   140001e12:	mov    rcx,rbp
   140001e15:	mov    rbx,QWORD PTR [rsp+0x38]
   140001e1a:	mov    rbp,QWORD PTR [rsp+0x40]
   140001e1f:	add    rsp,0x20
   140001e23:	pop    rsi
   140001e24:	rex.W jmp QWORD PTR [rip+0x1447d]        # 0x1400162a8
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	rex push rbp
   140001e32:	push   r12
   140001e34:	push   r13
   140001e36:	sub    rsp,0x20
   140001e3a:	mov    r12d,r8d
   140001e3d:	mov    r8,QWORD PTR [rcx]
   140001e40:	mov    rbp,rcx
   140001e43:	mov    ecx,DWORD PTR [r8+0x20]
   140001e47:	mov    r13,rdx
   140001e4a:	test   ecx,ecx
   140001e4c:	je     0x140001efb
   140001e52:	xor    edx,edx
   140001e54:	mov    eax,r12d
   140001e57:	mov    QWORD PTR [rsp+0x48],rsi
   140001e5c:	div    ecx
   140001e5e:	mov    rax,QWORD PTR [r8+0x8]
   140001e62:	lea    rsi,[rax+rdx*8]
   140001e66:	mov    rax,QWORD PTR [rax+rdx*8]
   140001e6a:	cmp    rax,r8
   140001e6d:	je     0x140001ee9
   140001e6f:	mov    QWORD PTR [rsp+0x40],rbx
   140001e74:	mov    QWORD PTR [rsp+0x50],rdi
   140001e79:	nop    DWORD PTR [rax+0x0]
   140001e80:	cmp    r12d,DWORD PTR [rax+0x8]
   140001e84:	jne    0x140001ec1
   140001e86:	lea    rcx,[rax+0x10]
   140001e8a:	mov    rax,QWORD PTR [r13+0x0]
   140001e8e:	movsxd rdx,DWORD PTR [rax+0x4]
   140001e92:	mov    rax,QWORD PTR [rcx]
   140001e95:	cmp    edx,DWORD PTR [rax+0x4]
   140001e98:	jne    0x140001ec1
   140001e9a:	mov    rdi,rdx
   140001e9d:	call   QWORD PTR [rip+0x14aad]        # 0x140016950
   140001ea3:	mov    rcx,r13
   140001ea6:	mov    rbx,rax
   140001ea9:	call   QWORD PTR [rip+0x14aa1]        # 0x140016950
   140001eaf:	mov    r8,rdi
   140001eb2:	mov    rcx,rax
   140001eb5:	mov    rdx,rbx
   140001eb8:	call   0x14001507e
   140001ebd:	test   eax,eax
   140001ebf:	je     0x140001ecd
   140001ec1:	mov    rsi,QWORD PTR [rsi]
   140001ec4:	mov    rax,QWORD PTR [rsi]
   140001ec7:	cmp    rax,QWORD PTR [rbp+0x0]
   140001ecb:	jne    0x140001e80
   140001ecd:	mov    rbx,QWORD PTR [rsp+0x40]
   140001ed2:	mov    rdi,QWORD PTR [rsp+0x50]
   140001ed7:	mov    rax,rsi
   140001eda:	mov    rsi,QWORD PTR [rsp+0x48]
   140001edf:	add    rsp,0x20
   140001ee3:	pop    r13
   140001ee5:	pop    r12
   140001ee7:	pop    rbp
   140001ee8:	ret    
   140001ee9:	mov    rax,rsi
   140001eec:	mov    rsi,QWORD PTR [rsp+0x48]
   140001ef1:	add    rsp,0x20
   140001ef5:	pop    r13
   140001ef7:	pop    r12
   140001ef9:	pop    rbp
   140001efa:	ret    
   140001efb:	mov    rax,rbp
   140001efe:	add    rsp,0x20
   140001f02:	pop    r13
   140001f04:	pop    r12
   140001f06:	pop    rbp
   140001f07:	ret    
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    QWORD PTR [rsp+0x10],rbp
   140001f15:	mov    QWORD PTR [rsp+0x18],rsi
   140001f1a:	push   rdi
   140001f1b:	sub    rsp,0x20
   140001f1f:	mov    esi,r8d
   140001f22:	mov    r8,QWORD PTR [rcx]
   140001f25:	mov    rdi,rcx
   140001f28:	mov    ecx,DWORD PTR [r8+0x20]
   140001f2c:	mov    rbp,rdx
   140001f2f:	test   ecx,ecx
   140001f31:	je     0x140001f89
   140001f33:	xor    edx,edx
   140001f35:	mov    eax,esi
   140001f37:	mov    QWORD PTR [rsp+0x30],rbx
   140001f3c:	div    ecx
   140001f3e:	mov    rax,QWORD PTR [r8+0x8]
   140001f42:	lea    rbx,[rax+rdx*8]
   140001f46:	mov    rax,QWORD PTR [rax+rdx*8]
   140001f4a:	cmp    rax,r8
   140001f4d:	je     0x140001f71
   140001f4f:	nop
   140001f50:	cmp    esi,DWORD PTR [rax+0x8]
   140001f53:	jne    0x140001f66
   140001f55:	lea    rdx,[rax+0x10]
   140001f59:	mov    rcx,rbp
   140001f5c:	call   QWORD PTR [rip+0x149de]        # 0x140016940
   140001f62:	test   al,al
   140001f64:	jne    0x140001f71
   140001f66:	mov    rbx,QWORD PTR [rbx]
   140001f69:	mov    rax,QWORD PTR [rbx]
   140001f6c:	cmp    rax,QWORD PTR [rdi]
   140001f6f:	jne    0x140001f50
   140001f71:	mov    rax,rbx
   140001f74:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f79:	mov    rbp,QWORD PTR [rsp+0x38]
   140001f7e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001f83:	add    rsp,0x20
   140001f87:	pop    rdi
   140001f88:	ret    
   140001f89:	mov    rbp,QWORD PTR [rsp+0x38]
   140001f8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001f93:	mov    rax,rdi
   140001f96:	add    rsp,0x20
   140001f9a:	pop    rdi
   140001f9b:	ret    
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fa5:	mov    QWORD PTR [rsp+0x10],rsi
   140001faa:	push   rdi
   140001fab:	sub    rsp,0x20
   140001faf:	mov    rbx,rdx
   140001fb2:	mov    rdx,QWORD PTR [rcx]
   140001fb5:	mov    rdi,rcx
   140001fb8:	mov    rcx,QWORD PTR [rbx]
   140001fbb:	mov    rsi,r8
   140001fbe:	call   QWORD PTR [rip+0x142ac]        # 0x140016270
   140001fc4:	test   al,al
   140001fc6:	je     0x140001fd4
   140001fc8:	mov    rdx,QWORD PTR [rdi]
   140001fcb:	mov    rcx,QWORD PTR [rbx]
   140001fce:	call   QWORD PTR [rip+0x1494c]        # 0x140016920
   140001fd4:	mov    rdx,QWORD PTR [rbx]
   140001fd7:	mov    rcx,QWORD PTR [rsi]
   140001fda:	call   QWORD PTR [rip+0x14290]        # 0x140016270
   140001fe0:	test   al,al
   140001fe2:	je     0x140001ff0
   140001fe4:	mov    rdx,QWORD PTR [rbx]
   140001fe7:	mov    rcx,QWORD PTR [rsi]
   140001fea:	call   QWORD PTR [rip+0x14930]        # 0x140016920
   140001ff0:	mov    rdx,QWORD PTR [rdi]
   140001ff3:	mov    rcx,QWORD PTR [rbx]
   140001ff6:	call   QWORD PTR [rip+0x14274]        # 0x140016270
   140001ffc:	test   al,al
   140001ffe:	je     0x14000200c
   140002000:	mov    rdx,QWORD PTR [rdi]
   140002003:	mov    rcx,QWORD PTR [rbx]
   140002006:	call   QWORD PTR [rip+0x14914]        # 0x140016920
   14000200c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002011:	mov    rsi,QWORD PTR [rsp+0x38]
   140002016:	add    rsp,0x20
   14000201a:	pop    rdi
   14000201b:	ret    
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    QWORD PTR [rsp+0x8],rbx
   140002025:	mov    QWORD PTR [rsp+0x10],rbp
   14000202a:	mov    QWORD PTR [rsp+0x18],rsi
   14000202f:	mov    QWORD PTR [rsp+0x20],rdi
   140002034:	push   r12
   140002036:	sub    rsp,0x20
   14000203a:	mov    rbp,rdx
   14000203d:	lea    rax,[rdx-0x1]
   140002041:	mov    rsi,r9
   140002044:	cqo    
   140002046:	mov    r12,r8
   140002049:	mov    rbx,rcx
   14000204c:	sub    rax,rdx
   14000204f:	sar    rax,1
   140002052:	cmp    r8,rbp
   140002055:	mov    rdi,rax
   140002058:	jge    0x14000209c
   14000205a:	nop    WORD PTR [rax+rax*1+0x0]
   140002060:	mov    r8,QWORD PTR [rbx]
   140002063:	mov    rdx,rsi
   140002066:	lea    rcx,[r8+rdi*8]
   14000206a:	call   QWORD PTR [rip+0x14200]        # 0x140016270
   140002070:	test   al,al
   140002072:	je     0x14000209c
   140002074:	mov    rax,QWORD PTR [rbx]
   140002077:	lea    rdx,[rax+rdi*8]
   14000207b:	lea    rcx,[rax+rbp*8]
   14000207f:	call   QWORD PTR [rip+0x14183]        # 0x140016208
   140002085:	lea    rax,[rdi-0x1]
   140002089:	mov    rbp,rdi
   14000208c:	cqo    
   14000208e:	sub    rax,rdx
   140002091:	sar    rax,1
   140002094:	cmp    r12,rbp
   140002097:	mov    rdi,rax
   14000209a:	jl     0x140002060
   14000209c:	mov    rax,QWORD PTR [rbx]
   14000209f:	mov    rdx,rsi
   1400020a2:	lea    rcx,[rax+rbp*8]
   1400020a6:	call   QWORD PTR [rip+0x1415c]        # 0x140016208
   1400020ac:	mov    rcx,rsi
   1400020af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020b4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400020b9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400020be:	mov    rdi,QWORD PTR [rsp+0x48]
   1400020c3:	add    rsp,0x20
   1400020c7:	pop    r12
   1400020c9:	rex.W jmp QWORD PTR [rip+0x14868]        # 0x140016938
   1400020d0:	rex push rbx
   1400020d2:	sub    rsp,0x20
   1400020d6:	mov    rbx,QWORD PTR [rip+0x13ffb]        # 0x1400160d8
   1400020dd:	mov    rcx,r8
   1400020e0:	call   QWORD PTR [rip+0x141e2]        # 0x1400162c8
   1400020e6:	mov    rcx,rbx
   1400020e9:	mov    rdx,rax
   1400020ec:	call   0x140001a70
   1400020f1:	mov    rdx,QWORD PTR [rip+0x13f50]        # 0x140016048
   1400020f8:	mov    rcx,rbx
   1400020fb:	add    rsp,0x20
   1400020ff:	pop    rbx
   140002100:	rex.W jmp QWORD PTR [rip+0x13f49]        # 0x140016050
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	rex push rbx
   140002112:	sub    rsp,0x20
   140002116:	mov    rbx,rcx
   140002119:	nop    DWORD PTR [rax+0x0]
   140002120:	lea    rcx,[rbx+0x18]
   140002124:	call   QWORD PTR [rip+0x1480e]        # 0x140016938
   14000212a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000212e:	test   rcx,rcx
   140002131:	je     0x140002138
   140002133:	call   0x140002110
   140002138:	mov    rbx,QWORD PTR [rbx+0x10]
   14000213c:	test   rbx,rbx
   14000213f:	jne    0x140002120
   140002141:	add    rsp,0x20
   140002145:	pop    rbx
   140002146:	ret    
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	mov    QWORD PTR [rsp+0x10],rbx
   140002155:	mov    QWORD PTR [rsp+0x18],rbp
   14000215a:	push   rsi
   14000215b:	push   rdi
   14000215c:	push   r12
   14000215e:	sub    rsp,0x20
   140002162:	mov    rax,QWORD PTR [rcx]
   140002165:	mov    r12,rdx
   140002168:	mov    rsi,rcx
   14000216b:	mov    r8,QWORD PTR [rax]
   14000216e:	mov    rcx,r12
   140002171:	mov    ebp,DWORD PTR [r8+0x4]
   140002175:	xor    r8d,r8d
   140002178:	add    ebp,0x15
   14000217b:	mov    edx,ebp
   14000217d:	call   QWORD PTR [rip+0x1411d]        # 0x1400162a0
   140002183:	mov    rcx,r12
   140002186:	call   QWORD PTR [rip+0x1477c]        # 0x140016908
   14000218c:	mov    rcx,QWORD PTR [rsi]
   14000218f:	mov    QWORD PTR [rsp+0x40],rax
   140002194:	mov    rdx,QWORD PTR [rcx]
   140002197:	mov    rdi,rax
   14000219a:	movsxd rbx,DWORD PTR [rdx+0x4]
   14000219e:	add    rbx,rbx
   1400021a1:	call   QWORD PTR [rip+0x14761]        # 0x140016908
   1400021a7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400021ac:	mov    rdx,rax
   1400021af:	mov    r8,rbx
   1400021b2:	call   0x140015084
   1400021b7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400021bb:	add    QWORD PTR [rsp+0x40],rbx
   1400021c0:	lea    r8,[rsp+0x40]
   1400021c5:	mov    edx,0x15
   1400021ca:	call   QWORD PTR [rip+0x140b0]        # 0x140016280
   1400021d0:	mov    r11,QWORD PTR [rsp+0x40]
   1400021d5:	movsxd rax,ebp
   1400021d8:	sub    r11,rdi
   1400021db:	sar    r11,1
   1400021de:	cmp    rax,r11
   1400021e1:	je     0x1400021ef
   1400021e3:	mov    edx,r11d
   1400021e6:	mov    rcx,r12
   1400021e9:	call   QWORD PTR [rip+0x140e1]        # 0x1400162d0
   1400021ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400021f4:	mov    rbp,QWORD PTR [rsp+0x50]
   1400021f9:	mov    rax,r12
   1400021fc:	add    rsp,0x20
   140002200:	pop    r12
   140002202:	pop    rdi
   140002203:	pop    rsi
   140002204:	ret    
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	mov    QWORD PTR [rsp+0x10],rbx
   140002215:	mov    QWORD PTR [rsp+0x18],rbp
   14000221a:	push   rsi
   14000221b:	push   rdi
   14000221c:	push   r12
   14000221e:	sub    rsp,0x20
   140002222:	mov    rax,QWORD PTR [rcx]
   140002225:	mov    r12,rdx
   140002228:	mov    rsi,rcx
   14000222b:	mov    r8,QWORD PTR [rax]
   14000222e:	mov    rcx,r12
   140002231:	mov    ebp,DWORD PTR [r8+0x4]
   140002235:	xor    r8d,r8d
   140002238:	add    ebp,0xd
   14000223b:	mov    edx,ebp
   14000223d:	call   QWORD PTR [rip+0x1405d]        # 0x1400162a0
   140002243:	mov    rcx,r12
   140002246:	call   QWORD PTR [rip+0x146bc]        # 0x140016908
   14000224c:	mov    rcx,QWORD PTR [rsi]
   14000224f:	mov    QWORD PTR [rsp+0x40],rax
   140002254:	mov    rdx,QWORD PTR [rcx]
   140002257:	mov    rdi,rax
   14000225a:	movsxd rbx,DWORD PTR [rdx+0x4]
   14000225e:	add    rbx,rbx
   140002261:	call   QWORD PTR [rip+0x146a1]        # 0x140016908
   140002267:	mov    rcx,QWORD PTR [rsp+0x40]
   14000226c:	mov    rdx,rax
   14000226f:	mov    r8,rbx
   140002272:	call   0x140015084
   140002277:	mov    rcx,QWORD PTR [rsi+0x8]
   14000227b:	add    QWORD PTR [rsp+0x40],rbx
   140002280:	lea    r8,[rsp+0x40]
   140002285:	mov    edx,0xd
   14000228a:	call   QWORD PTR [rip+0x13ff0]        # 0x140016280
   140002290:	mov    r11,QWORD PTR [rsp+0x40]
   140002295:	movsxd rax,ebp
   140002298:	sub    r11,rdi
   14000229b:	sar    r11,1
   14000229e:	cmp    rax,r11
   1400022a1:	je     0x1400022af
   1400022a3:	mov    edx,r11d
   1400022a6:	mov    rcx,r12
   1400022a9:	call   QWORD PTR [rip+0x14021]        # 0x1400162d0
   1400022af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400022b4:	mov    rbp,QWORD PTR [rsp+0x50]
   1400022b9:	mov    rax,r12
   1400022bc:	add    rsp,0x20
   1400022c0:	pop    r12
   1400022c2:	pop    rdi
   1400022c3:	pop    rsi
   1400022c4:	ret    
   1400022c5:	int3   
   1400022c6:	int3   
   1400022c7:	int3   
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	add    rcx,0x10
   1400022d4:	rex.W jmp QWORD PTR [rip+0x1465d]        # 0x140016938
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	rex push rbx
   1400022e2:	sub    rsp,0x20
   1400022e6:	mov    rbx,rcx
   1400022e9:	add    rcx,0x18
   1400022ed:	call   QWORD PTR [rip+0x13f85]        # 0x140016278
   1400022f3:	lea    rcx,[rbx+0x10]
   1400022f7:	add    rsp,0x20
   1400022fb:	pop    rbx
   1400022fc:	rex.W jmp QWORD PTR [rip+0x13f75]        # 0x140016278
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	add    rcx,0x18
   140002314:	rex.W jmp QWORD PTR [rip+0x13f5d]        # 0x140016278
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	add    rcx,0x10
   140002324:	rex.W jmp QWORD PTR [rip+0x13f4d]        # 0x140016278
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    r11,rsp
   140002333:	push   rbp
   140002334:	push   rsi
   140002335:	push   r12
   140002337:	sub    rsp,0x30
   14000233b:	mov    rax,QWORD PTR [r8]
   14000233e:	mov    r9,QWORD PTR [rcx]
   140002341:	mov    rbp,r8
   140002344:	mov    r10,rax
   140002347:	mov    rsi,rdx
   14000234a:	mov    r12,rcx
   14000234d:	sub    r10,r9
   140002350:	sar    r10,0x3
   140002354:	cmp    r10d,0x28
   140002358:	jle    0x140002454
   14000235e:	sub    rax,r9
   140002361:	mov    QWORD PTR [r11-0x20],rbx
   140002365:	mov    QWORD PTR [r11-0x28],rdi
   140002369:	sar    rax,0x3
   14000236d:	lea    r8,[r11+0x8]
   140002371:	mov    QWORD PTR [r11+0x20],r9
   140002375:	inc    eax
   140002377:	cdq    
   140002378:	and    edx,0x7
   14000237b:	add    eax,edx
   14000237d:	lea    rdx,[r11+0x18]
   140002381:	sar    eax,0x3
   140002384:	movsxd rcx,eax
   140002387:	mov    rbx,rcx
   14000238a:	lea    rdi,[rcx*8+0x0]
   140002392:	shl    rbx,0x4
   140002396:	lea    rcx,[r11+0x20]
   14000239a:	lea    rax,[rbx+r9*1]
   14000239e:	mov    QWORD PTR [r11+0x8],rax
   1400023a2:	lea    rax,[rdi+r9*1]
   1400023a6:	mov    QWORD PTR [r11+0x18],rax
   1400023aa:	call   0x140001fa0
   1400023af:	mov    r11,QWORD PTR [rsi]
   1400023b2:	lea    rax,[r11+rdi*1]
   1400023b6:	mov    QWORD PTR [rsp+0x60],r11
   1400023bb:	sub    r11,rdi
   1400023be:	lea    r8,[rsp+0x50]
   1400023c3:	lea    rdx,[rsp+0x60]
   1400023c8:	lea    rcx,[rsp+0x68]
   1400023cd:	mov    QWORD PTR [rsp+0x50],rax
   1400023d2:	mov    QWORD PTR [rsp+0x68],r11
   1400023d7:	call   0x140001fa0
   1400023dc:	mov    r11,QWORD PTR [rbp+0x0]
   1400023e0:	lea    r8,[rsp+0x50]
   1400023e5:	lea    rdx,[rsp+0x60]
   1400023ea:	mov    rax,r11
   1400023ed:	mov    QWORD PTR [rsp+0x50],r11
   1400023f2:	sub    r11,rbx
   1400023f5:	sub    rax,rdi
   1400023f8:	lea    rcx,[rsp+0x68]
   1400023fd:	mov    QWORD PTR [rsp+0x68],r11
   140002402:	mov    QWORD PTR [rsp+0x60],rax
   140002407:	call   0x140001fa0
   14000240c:	mov    rax,QWORD PTR [rsi]
   14000240f:	mov    r11,QWORD PTR [rbp+0x0]
   140002413:	mov    QWORD PTR [rsp+0x60],rax
   140002418:	mov    rax,QWORD PTR [r12]
   14000241c:	lea    rcx,[rdi+rax*1]
   140002420:	sub    r11,rdi
   140002423:	lea    r8,[rsp+0x50]
   140002428:	mov    QWORD PTR [rsp+0x68],rcx
   14000242d:	lea    rcx,[rsp+0x68]
   140002432:	lea    rdx,[rsp+0x60]
   140002437:	mov    QWORD PTR [rsp+0x50],r11
   14000243c:	call   0x140001fa0
   140002441:	mov    rdi,QWORD PTR [rsp+0x20]
   140002446:	mov    rbx,QWORD PTR [rsp+0x28]
   14000244b:	add    rsp,0x30
   14000244f:	pop    r12
   140002451:	pop    rsi
   140002452:	pop    rbp
   140002453:	ret    
   140002454:	mov    QWORD PTR [rsp+0x50],rax
   140002459:	mov    rax,QWORD PTR [rdx]
   14000245c:	lea    r8,[rsp+0x50]
   140002461:	lea    rdx,[rsp+0x60]
   140002466:	lea    rcx,[rsp+0x68]
   14000246b:	mov    QWORD PTR [rsp+0x68],r9
   140002470:	mov    QWORD PTR [rsp+0x60],rax
   140002475:	call   0x140001fa0
   14000247a:	add    rsp,0x30
   14000247e:	pop    r12
   140002480:	pop    rsi
   140002481:	pop    rbp
   140002482:	ret    
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    QWORD PTR [rsp+0x18],rbx
   140002495:	push   rbp
   140002496:	push   rsi
   140002497:	push   rdi
   140002498:	push   r12
   14000249a:	push   r13
   14000249c:	sub    rsp,0x20
   1400024a0:	lea    rbx,[rdx+rdx*1+0x2]
   1400024a5:	mov    r12,r9
   1400024a8:	mov    rdi,r8
   1400024ab:	cmp    rbx,r8
   1400024ae:	mov    rbp,rdx
   1400024b1:	mov    rsi,rcx
   1400024b4:	mov    r13,rdx
   1400024b7:	jge    0x1400024f6
   1400024b9:	nop    DWORD PTR [rax+0x0]
   1400024c0:	mov    rax,QWORD PTR [rsi]
   1400024c3:	lea    rcx,[rax+rbx*8]
   1400024c7:	lea    rdx,[rcx-0x8]
   1400024cb:	call   QWORD PTR [rip+0x13d9f]        # 0x140016270
   1400024d1:	test   al,al
   1400024d3:	je     0x1400024d8
   1400024d5:	dec    rbx
   1400024d8:	mov    rax,QWORD PTR [rsi]
   1400024db:	lea    rdx,[rax+rbx*8]
   1400024df:	lea    rcx,[rax+rbp*8]
   1400024e3:	call   QWORD PTR [rip+0x13d1f]        # 0x140016208
   1400024e9:	mov    rbp,rbx
   1400024ec:	lea    rbx,[rbx+rbx*1+0x2]
   1400024f1:	cmp    rbx,rdi
   1400024f4:	jl     0x1400024c0
   1400024f6:	cmp    rbx,rdi
   1400024f9:	jne    0x140002511
   1400024fb:	mov    rax,QWORD PTR [rsi]
   1400024fe:	lea    rdx,[rax+rdi*8-0x8]
   140002503:	lea    rcx,[rax+rbp*8]
   140002507:	call   QWORD PTR [rip+0x13cfb]        # 0x140016208
   14000250d:	lea    rbp,[rdi-0x1]
   140002511:	mov    rax,QWORD PTR [rsi]
   140002514:	lea    rcx,[rsp+0x58]
   140002519:	mov    rdx,r12
   14000251c:	mov    QWORD PTR [rsp+0x50],rax
   140002521:	call   QWORD PTR [rip+0x14019]        # 0x140016540
   140002527:	lea    rcx,[rsp+0x50]
   14000252c:	mov    r8,r13
   14000252f:	mov    rdx,rbp
   140002532:	mov    r9,rax
   140002535:	call   0x140002020
   14000253a:	mov    rcx,r12
   14000253d:	mov    rbx,QWORD PTR [rsp+0x60]
   140002542:	add    rsp,0x20
   140002546:	pop    r13
   140002548:	pop    r12
   14000254a:	pop    rdi
   14000254b:	pop    rsi
   14000254c:	pop    rbp
   14000254d:	rex.W jmp QWORD PTR [rip+0x143e4]        # 0x140016938
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    QWORD PTR [rsp+0x18],rbx
   140002565:	push   rbp
   140002566:	push   rsi
   140002567:	push   rdi
   140002568:	push   r12
   14000256a:	push   r13
   14000256c:	sub    rsp,0x40
   140002570:	mov    rax,QWORD PTR [rcx+0x8]
   140002574:	lea    rbp,[rcx+0x8]
   140002578:	mov    r12,rdx
   14000257b:	mov    edx,DWORD PTR [rax+0x4]
   14000257e:	mov    rsi,r8
   140002581:	lea    rcx,[rsp+0x78]
   140002586:	xor    r8d,r8d
   140002589:	inc    edx
   14000258b:	mov    r13d,r9d
   14000258e:	call   QWORD PTR [rip+0x13d0c]        # 0x1400162a0
   140002594:	lea    rcx,[rsp+0x78]
   140002599:	call   QWORD PTR [rip+0x14369]        # 0x140016908
   14000259f:	mov    rcx,QWORD PTR [rbp+0x0]
   1400025a3:	movsxd rdi,DWORD PTR [rcx+0x4]
   1400025a7:	mov    rcx,rbp
   1400025aa:	mov    rbx,rax
   1400025ad:	add    rdi,rdi
   1400025b0:	call   QWORD PTR [rip+0x14352]        # 0x140016908
   1400025b6:	mov    r8,rdi
   1400025b9:	mov    rdx,rax
   1400025bc:	mov    rcx,rbx
   1400025bf:	call   0x140015084
   1400025c4:	lea    rcx,[rsp+0x70]
   1400025c9:	mov    dl,0x2f
   1400025cb:	call   QWORD PTR [rip+0x14347]        # 0x140016918
   1400025d1:	movzx  edx,WORD PTR [rsp+0x70]
   1400025d6:	mov    r8d,0x1
   1400025dc:	mov    WORD PTR [rbx+rdi*1],dx
   1400025e0:	lea    rdx,[rsp+0x78]
   1400025e5:	mov    rcx,rsi
   1400025e8:	call   QWORD PTR [rip+0x13d1a]        # 0x140016308
   1400025ee:	lea    rcx,[rsp+0x78]
   1400025f3:	movzx  edi,al
   1400025f6:	call   QWORD PTR [rip+0x1433c]        # 0x140016938
   1400025fc:	test   dil,dil
   1400025ff:	je     0x140002617
   140002601:	mov    rax,QWORD PTR [rbp+0x0]
   140002605:	xor    edx,edx
   140002607:	mov    rcx,rsi
   14000260a:	mov    r8d,DWORD PTR [rax+0x4]
   14000260e:	inc    r8d
   140002611:	call   QWORD PTR [rip+0x13ce9]        # 0x140016300
   140002617:	or     rcx,0xffffffffffffffff
   14000261b:	xor    eax,eax
   14000261d:	lea    rdi,[rip+0x14780]        # 0x140016da4
   140002624:	repnz scas al,BYTE PTR es:[rdi]
   140002626:	not    rcx
   140002629:	lea    rdx,[rcx-0x1]
   14000262d:	lea    rcx,[rip+0x14770]        # 0x140016da4
   140002634:	call   QWORD PTR [rip+0x14296]        # 0x1400168d0
   14000263a:	lea    rdx,[rsp+0x70]
   14000263f:	mov    r8d,0x1
   140002645:	mov    rcx,rsi
   140002648:	mov    QWORD PTR [rsp+0x70],rax
   14000264d:	call   QWORD PTR [rip+0x13cb5]        # 0x140016308
   140002653:	lea    rcx,[rsp+0x70]
   140002658:	movzx  edi,al
   14000265b:	call   QWORD PTR [rip+0x142d7]        # 0x140016938
   140002661:	test   dil,dil
   140002664:	je     0x140002675
   140002666:	xor    edx,edx
   140002668:	mov    rcx,rsi
   14000266b:	lea    r8d,[rdx+0x2]
   14000266f:	call   QWORD PTR [rip+0x13c8b]        # 0x140016300
   140002675:	lea    rcx,[rsp+0x70]
   14000267a:	mov    dl,0x2f
   14000267c:	call   QWORD PTR [rip+0x14296]        # 0x140016918
   140002682:	mov    r8d,0x1
   140002688:	mov    rcx,rsi
   14000268b:	movzx  edx,WORD PTR [rax]
   14000268e:	call   QWORD PTR [rip+0x13c64]        # 0x1400162f8
   140002694:	test   al,al
   140002696:	je     0x1400026a7
   140002698:	xor    edx,edx
   14000269a:	mov    rcx,rsi
   14000269d:	lea    r8d,[rdx+0x1]
   1400026a1:	call   QWORD PTR [rip+0x13c59]        # 0x140016300
   1400026a7:	or     rcx,0xffffffffffffffff
   1400026ab:	xor    eax,eax
   1400026ad:	lea    rdi,[rip+0x146e4]        # 0x140016d98
   1400026b4:	repnz scas al,BYTE PTR es:[rdi]
   1400026b6:	not    rcx
   1400026b9:	lea    rdx,[rcx-0x1]
   1400026bd:	lea    rcx,[rip+0x146d4]        # 0x140016d98
   1400026c4:	call   QWORD PTR [rip+0x14206]        # 0x1400168d0
   1400026ca:	mov    edx,DWORD PTR [rsp+0x90]
   1400026d1:	lea    rcx,[rsp+0x38]
   1400026d6:	mov    r8d,0xa
   1400026dc:	mov    QWORD PTR [rsp+0x70],rax
   1400026e1:	call   QWORD PTR [rip+0x13c09]        # 0x1400162f0
   1400026e7:	lea    rcx,[rsp+0x30]
   1400026ec:	mov    r8d,0xa
   1400026f2:	mov    edx,r13d
   1400026f5:	mov    rdi,rax
   1400026f8:	call   QWORD PTR [rip+0x13bf2]        # 0x1400162f0
   1400026fe:	lea    rdx,[rsp+0x78]
   140002703:	lea    rcx,[rsp+0x70]
   140002708:	mov    r8,rsi
   14000270b:	mov    r9,rax
   14000270e:	mov    QWORD PTR [rsp+0x20],rdi
   140002713:	call   QWORD PTR [rip+0x13bcf]        # 0x1400162e8
   140002719:	mov    rcx,r12
   14000271c:	mov    rdx,rax
   14000271f:	call   0x140001000
   140002724:	lea    rcx,[rsp+0x78]
   140002729:	call   QWORD PTR [rip+0x14209]        # 0x140016938
   14000272f:	lea    rcx,[rsp+0x70]
   140002734:	call   QWORD PTR [rip+0x141fe]        # 0x140016938
   14000273a:	lea    rcx,[rsp+0x30]
   14000273f:	call   QWORD PTR [rip+0x141f3]        # 0x140016938
   140002745:	lea    rcx,[rsp+0x38]
   14000274a:	call   QWORD PTR [rip+0x141e8]        # 0x140016938
   140002750:	mov    rcx,rsi
   140002753:	call   QWORD PTR [rip+0x141df]        # 0x140016938
   140002759:	mov    rbx,QWORD PTR [rsp+0x80]
   140002761:	mov    rax,r12
   140002764:	add    rsp,0x40
   140002768:	pop    r13
   14000276a:	pop    r12
   14000276c:	pop    rdi
   14000276d:	pop    rsi
   14000276e:	pop    rbp
   14000276f:	ret    
   140002770:	mov    QWORD PTR [rsp+0x8],rbx
   140002775:	push   rdi
   140002776:	sub    rsp,0x20
   14000277a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000277e:	mov    rbx,rcx
   140002781:	test   rdi,rdi
   140002784:	je     0x1400027bf
   140002786:	lea    rcx,[rdi+0x18]
   14000278a:	call   QWORD PTR [rip+0x141a8]        # 0x140016938
   140002790:	mov    rcx,QWORD PTR [rdi+0x8]
   140002794:	test   rcx,rcx
   140002797:	je     0x14000279e
   140002799:	call   0x140002110
   14000279e:	mov    rcx,QWORD PTR [rdi+0x10]
   1400027a2:	test   rcx,rcx
   1400027a5:	je     0x1400027ac
   1400027a7:	call   0x140002110
   1400027ac:	mov    rdx,QWORD PTR [rbx+0x10]
   1400027b0:	mov    r8d,0x8
   1400027b6:	mov    rcx,rbx
   1400027b9:	call   QWORD PTR [rip+0x13b59]        # 0x140016318
   1400027bf:	mov    rcx,rbx
   1400027c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027c7:	add    rsp,0x20
   1400027cb:	pop    rdi
   1400027cc:	rex.W jmp QWORD PTR [rip+0x13b3d]        # 0x140016310
   1400027d3:	int3   
   1400027d4:	int3   
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	sub    rsp,0x28
   1400027e4:	mov    rdx,QWORD PTR [rcx]
   1400027e7:	mov    eax,DWORD PTR [rdx]
   1400027e9:	test   eax,eax
   1400027eb:	je     0x1400027fd
   1400027ed:	cmp    eax,0xffffffff
   1400027f0:	je     0x14000285a
   1400027f2:	lock add DWORD PTR [rdx],0xffffffff
   1400027f6:	setne  al
   1400027f9:	test   al,al
   1400027fb:	jne    0x14000285a
   1400027fd:	mov    QWORD PTR [rsp+0x30],rbx
   140002802:	mov    QWORD PTR [rsp+0x38],rsi
   140002807:	mov    rsi,QWORD PTR [rcx]
   14000280a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000280e:	mov    QWORD PTR [rsp+0x20],rdi
   140002813:	lea    rbx,[rsi+rax*8+0x10]
   140002818:	movsxd rax,DWORD PTR [rsi+0x8]
   14000281c:	lea    rdi,[rsi+rax*8+0x10]
   140002821:	cmp    rdi,rbx
   140002824:	je     0x140002842
   140002826:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002830:	sub    rbx,0x8
   140002834:	mov    rcx,rbx
   140002837:	call   QWORD PTR [rip+0x13a3b]        # 0x140016278
   14000283d:	cmp    rbx,rdi
   140002840:	jne    0x140002830
   140002842:	mov    rcx,rsi
   140002845:	call   QWORD PTR [rip+0x13a5d]        # 0x1400162a8
   14000284b:	mov    rdi,QWORD PTR [rsp+0x20]
   140002850:	mov    rsi,QWORD PTR [rsp+0x38]
   140002855:	mov    rbx,QWORD PTR [rsp+0x30]
   14000285a:	add    rsp,0x28
   14000285e:	ret    
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x18],rbx
   140002865:	push   rsi
   140002866:	sub    rsp,0x20
   14000286a:	mov    rax,QWORD PTR [rdx]
   14000286d:	mov    rsi,rcx
   140002870:	mov    rbx,rdx
   140002873:	mov    QWORD PTR [rcx],rax
   140002876:	mov    ecx,DWORD PTR [rax]
   140002878:	test   ecx,ecx
   14000287a:	je     0x140002893
   14000287c:	cmp    ecx,0xffffffff
   14000287f:	je     0x1400028f8
   140002881:	lock add DWORD PTR [rax],0x1
   140002885:	mov    rax,rsi
   140002888:	mov    rbx,QWORD PTR [rsp+0x40]
   14000288d:	add    rsp,0x20
   140002891:	pop    rsi
   140002892:	ret    
   140002893:	mov    edx,DWORD PTR [rax+0x4]
   140002896:	mov    rcx,rsi
   140002899:	mov    QWORD PTR [rsp+0x30],rbp
   14000289e:	mov    QWORD PTR [rsp+0x38],rdi
   1400028a3:	call   QWORD PTR [rip+0x13a77]        # 0x140016320
   1400028a9:	mov    r11,QWORD PTR [rsi]
   1400028ac:	mov    rcx,QWORD PTR [rbx]
   1400028af:	movsxd rax,DWORD PTR [r11+0xc]
   1400028b3:	lea    rbp,[r11+rax*8+0x10]
   1400028b8:	movsxd rax,DWORD PTR [rcx+0x8]
   1400028bc:	lea    rdi,[rcx+rax*8+0x10]
   1400028c1:	movsxd rax,DWORD PTR [r11+0x8]
   1400028c5:	lea    rbx,[r11+rax*8+0x10]
   1400028ca:	cmp    rbx,rbp
   1400028cd:	je     0x1400028ee
   1400028cf:	nop
   1400028d0:	test   rbx,rbx
   1400028d3:	je     0x1400028e1
   1400028d5:	mov    rdx,rdi
   1400028d8:	mov    rcx,rbx
   1400028db:	call   QWORD PTR [rip+0x13c5f]        # 0x140016540
   1400028e1:	add    rbx,0x8
   1400028e5:	add    rdi,0x8
   1400028e9:	cmp    rbx,rbp
   1400028ec:	jne    0x1400028d0
   1400028ee:	mov    rbp,QWORD PTR [rsp+0x30]
   1400028f3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400028f8:	mov    rax,rsi
   1400028fb:	mov    rbx,QWORD PTR [rsp+0x40]
   140002900:	add    rsp,0x20
   140002904:	pop    rsi
   140002905:	ret    
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	sub    rsp,0x28
   140002914:	mov    rdx,QWORD PTR [rcx]
   140002917:	mov    eax,DWORD PTR [rdx]
   140002919:	test   eax,eax
   14000291b:	je     0x14000292d
   14000291d:	cmp    eax,0xffffffff
   140002920:	je     0x14000298a
   140002922:	lock add DWORD PTR [rdx],0xffffffff
   140002926:	setne  al
   140002929:	test   al,al
   14000292b:	jne    0x14000298a
   14000292d:	mov    QWORD PTR [rsp+0x30],rbx
   140002932:	mov    QWORD PTR [rsp+0x38],rsi
   140002937:	mov    rsi,QWORD PTR [rcx]
   14000293a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000293e:	mov    QWORD PTR [rsp+0x20],rdi
   140002943:	lea    rbx,[rsi+rax*8+0x10]
   140002948:	movsxd rax,DWORD PTR [rsi+0x8]
   14000294c:	lea    rdi,[rsi+rax*8+0x10]
   140002951:	cmp    rdi,rbx
   140002954:	je     0x140002972
   140002956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002960:	sub    rbx,0x8
   140002964:	mov    rcx,rbx
   140002967:	call   QWORD PTR [rip+0x13fcb]        # 0x140016938
   14000296d:	cmp    rbx,rdi
   140002970:	jne    0x140002960
   140002972:	mov    rcx,rsi
   140002975:	call   QWORD PTR [rip+0x1392d]        # 0x1400162a8
   14000297b:	mov    rdi,QWORD PTR [rsp+0x20]
   140002980:	mov    rsi,QWORD PTR [rsp+0x38]
   140002985:	mov    rbx,QWORD PTR [rsp+0x30]
   14000298a:	add    rsp,0x28
   14000298e:	ret    
   14000298f:	int3   
   140002990:	rex push rsi
   140002992:	sub    rsp,0x20
   140002996:	mov    rax,QWORD PTR [rdx]
   140002999:	mov    rsi,rcx
   14000299c:	cmp    QWORD PTR [rcx],rax
   14000299f:	je     0x140002a52
   1400029a5:	lea    rcx,[rsp+0x30]
   1400029aa:	mov    QWORD PTR [rsp+0x48],rdi
   1400029af:	call   0x140002860
   1400029b4:	lea    r11,[rsp+0x30]
   1400029b9:	cmp    r11,rsi
   1400029bc:	je     0x1400029d0
   1400029be:	mov    rax,QWORD PTR [rsp+0x30]
   1400029c3:	mov    rdi,QWORD PTR [rsi]
   1400029c6:	mov    QWORD PTR [rsp+0x30],rdi
   1400029cb:	mov    QWORD PTR [rsi],rax
   1400029ce:	jmp    0x1400029d5
   1400029d0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400029d5:	mov    eax,DWORD PTR [rdi]
   1400029d7:	test   eax,eax
   1400029d9:	je     0x1400029f0
   1400029db:	cmp    eax,0xffffffff
   1400029de:	je     0x140002a44
   1400029e0:	lock add DWORD PTR [rdi],0xffffffff
   1400029e4:	setne  al
   1400029e7:	test   al,al
   1400029e9:	jne    0x140002a44
   1400029eb:	mov    rdi,QWORD PTR [rsp+0x30]
   1400029f0:	movsxd rax,DWORD PTR [rdi+0xc]
   1400029f4:	mov    QWORD PTR [rsp+0x38],rbx
   1400029f9:	mov    QWORD PTR [rsp+0x40],rbp
   1400029fe:	lea    rbx,[rdi+rax*8+0x10]
   140002a03:	movsxd rax,DWORD PTR [rdi+0x8]
   140002a07:	lea    rbp,[rdi+rax*8+0x10]
   140002a0c:	cmp    rbp,rbx
   140002a0f:	je     0x140002a23
   140002a11:	sub    rbx,0x8
   140002a15:	mov    rcx,rbx
   140002a18:	call   QWORD PTR [rip+0x13f1a]        # 0x140016938
   140002a1e:	cmp    rbx,rbp
   140002a21:	jne    0x140002a11
   140002a23:	mov    rcx,rdi
   140002a26:	call   QWORD PTR [rip+0x1387c]        # 0x1400162a8
   140002a2c:	mov    rbp,QWORD PTR [rsp+0x40]
   140002a31:	mov    rbx,QWORD PTR [rsp+0x38]
   140002a36:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a3b:	mov    rax,rsi
   140002a3e:	add    rsp,0x20
   140002a42:	pop    rsi
   140002a43:	ret    
   140002a44:	mov    rax,rsi
   140002a47:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a4c:	add    rsp,0x20
   140002a50:	pop    rsi
   140002a51:	ret    
   140002a52:	mov    rax,rcx
   140002a55:	add    rsp,0x20
   140002a59:	pop    rsi
   140002a5a:	ret    
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	sub    rsp,0x28
   140002a64:	mov    rdx,QWORD PTR [rcx]
   140002a67:	mov    eax,DWORD PTR [rdx]
   140002a69:	test   eax,eax
   140002a6b:	je     0x140002a7d
   140002a6d:	cmp    eax,0xffffffff
   140002a70:	je     0x140002ada
   140002a72:	lock add DWORD PTR [rdx],0xffffffff
   140002a76:	setne  al
   140002a79:	test   al,al
   140002a7b:	jne    0x140002ada
   140002a7d:	mov    QWORD PTR [rsp+0x30],rbx
   140002a82:	mov    QWORD PTR [rsp+0x38],rsi
   140002a87:	mov    rsi,QWORD PTR [rcx]
   140002a8a:	movsxd rax,DWORD PTR [rsi+0xc]
   140002a8e:	mov    QWORD PTR [rsp+0x20],rdi
   140002a93:	lea    rbx,[rsi+rax*8+0x10]
   140002a98:	movsxd rax,DWORD PTR [rsi+0x8]
   140002a9c:	lea    rdi,[rsi+rax*8+0x10]
   140002aa1:	cmp    rdi,rbx
   140002aa4:	je     0x140002ac2
   140002aa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002ab0:	sub    rbx,0x8
   140002ab4:	mov    rcx,rbx
   140002ab7:	call   QWORD PTR [rip+0x13fe3]        # 0x140016aa0
   140002abd:	cmp    rbx,rdi
   140002ac0:	jne    0x140002ab0
   140002ac2:	mov    rcx,rsi
   140002ac5:	call   QWORD PTR [rip+0x137dd]        # 0x1400162a8
   140002acb:	mov    rdi,QWORD PTR [rsp+0x20]
   140002ad0:	mov    rsi,QWORD PTR [rsp+0x38]
   140002ad5:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ada:	add    rsp,0x28
   140002ade:	ret    
   140002adf:	int3   
   140002ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ae5:	push   rdi
   140002ae6:	sub    rsp,0x30
   140002aea:	mov    rbx,rcx
   140002aed:	mov    rcx,QWORD PTR [rcx]
   140002af0:	lea    r8,[rip+0x11169]        # 0x140013c60
   140002af7:	lea    rdx,[rip+0xfffffffffffff172]        # 0x140001c70
   140002afe:	mov    r9d,0x18
   140002b04:	mov    DWORD PTR [rsp+0x20],0x8
   140002b0c:	call   QWORD PTR [rip+0x13816]        # 0x140016328
   140002b12:	mov    rdi,rax
   140002b15:	mov    rax,QWORD PTR [rbx]
   140002b18:	mov    ecx,DWORD PTR [rax+0x10]
   140002b1b:	test   ecx,ecx
   140002b1d:	je     0x140002b30
   140002b1f:	cmp    ecx,0xffffffff
   140002b22:	je     0x140002b40
   140002b24:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002b29:	setne  al
   140002b2c:	test   al,al
   140002b2e:	jne    0x140002b40
   140002b30:	mov    rcx,QWORD PTR [rbx]
   140002b33:	lea    rdx,[rip+0x11126]        # 0x140013c60
   140002b3a:	call   QWORD PTR [rip+0x13758]        # 0x140016298
   140002b40:	mov    QWORD PTR [rbx],rdi
   140002b43:	mov    rbx,QWORD PTR [rsp+0x40]
   140002b48:	add    rsp,0x30
   140002b4c:	pop    rdi
   140002b4d:	ret    
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	mov    QWORD PTR [rsp+0x18],rbx
   140002b55:	push   rsi
   140002b56:	sub    rsp,0x20
   140002b5a:	mov    rax,QWORD PTR [rdx]
   140002b5d:	mov    rsi,rcx
   140002b60:	mov    rbx,rdx
   140002b63:	mov    QWORD PTR [rcx],rax
   140002b66:	mov    ecx,DWORD PTR [rax]
   140002b68:	test   ecx,ecx
   140002b6a:	je     0x140002b83
   140002b6c:	cmp    ecx,0xffffffff
   140002b6f:	je     0x140002be8
   140002b71:	lock add DWORD PTR [rax],0x1
   140002b75:	mov    rax,rsi
   140002b78:	mov    rbx,QWORD PTR [rsp+0x40]
   140002b7d:	add    rsp,0x20
   140002b81:	pop    rsi
   140002b82:	ret    
   140002b83:	mov    edx,DWORD PTR [rax+0x4]
   140002b86:	mov    rcx,rsi
   140002b89:	mov    QWORD PTR [rsp+0x30],rbp
   140002b8e:	mov    QWORD PTR [rsp+0x38],rdi
   140002b93:	call   QWORD PTR [rip+0x13787]        # 0x140016320
   140002b99:	mov    r11,QWORD PTR [rsi]
   140002b9c:	mov    rcx,QWORD PTR [rbx]
   140002b9f:	movsxd rax,DWORD PTR [r11+0xc]
   140002ba3:	lea    rbp,[r11+rax*8+0x10]
   140002ba8:	movsxd rax,DWORD PTR [rcx+0x8]
   140002bac:	lea    rdi,[rcx+rax*8+0x10]
   140002bb1:	movsxd rax,DWORD PTR [r11+0x8]
   140002bb5:	lea    rbx,[r11+rax*8+0x10]
   140002bba:	cmp    rbx,rbp
   140002bbd:	je     0x140002bde
   140002bbf:	nop
   140002bc0:	test   rbx,rbx
   140002bc3:	je     0x140002bd1
   140002bc5:	mov    rdx,rdi
   140002bc8:	mov    rcx,rbx
   140002bcb:	call   QWORD PTR [rip+0x136bf]        # 0x140016290
   140002bd1:	add    rbx,0x8
   140002bd5:	add    rdi,0x8
   140002bd9:	cmp    rbx,rbp
   140002bdc:	jne    0x140002bc0
   140002bde:	mov    rbp,QWORD PTR [rsp+0x30]
   140002be3:	mov    rdi,QWORD PTR [rsp+0x38]
   140002be8:	mov    rax,rsi
   140002beb:	mov    rbx,QWORD PTR [rsp+0x40]
   140002bf0:	add    rsp,0x20
   140002bf4:	pop    rsi
   140002bf5:	ret    
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    QWORD PTR [rsp+0x8],rbx
   140002c05:	mov    QWORD PTR [rsp+0x18],rbp
   140002c0a:	mov    DWORD PTR [rsp+0x10],edx
   140002c0e:	push   rsi
   140002c0f:	push   rdi
   140002c10:	push   r12
   140002c12:	push   r13
   140002c14:	push   r14
   140002c16:	sub    rsp,0x20
   140002c1a:	mov    rdx,QWORD PTR [rcx]
   140002c1d:	movsxd r13,r8d
   140002c20:	mov    r12,rcx
   140002c23:	movsxd rax,DWORD PTR [rdx+0x8]
   140002c27:	mov    r8d,r13d
   140002c2a:	lea    r14,[rdx+rax*8+0x10]
   140002c2f:	lea    rdx,[rsp+0x58]
   140002c34:	call   QWORD PTR [rip+0x136fe]        # 0x140016338
   140002c3a:	mov    r10,QWORD PTR [r12]
   140002c3e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002c43:	movsxd r9,DWORD PTR [r10+0x8]
   140002c47:	mov    rsi,rax
   140002c4a:	mov    rdi,r14
   140002c4d:	add    rdx,r9
   140002c50:	lea    rbx,[r10+r9*8+0x10]
   140002c55:	lea    rbp,[r10+rdx*8+0x10]
   140002c5a:	cmp    rbx,rbp
   140002c5d:	je     0x140002c7e
   140002c5f:	nop
   140002c60:	test   rbx,rbx
   140002c63:	je     0x140002c71
   140002c65:	mov    rdx,rdi
   140002c68:	mov    rcx,rbx
   140002c6b:	call   QWORD PTR [rip+0x138cf]        # 0x140016540
   140002c71:	add    rbx,0x8
   140002c75:	add    rdi,0x8
   140002c79:	cmp    rbx,rbp
   140002c7c:	jne    0x140002c60
   140002c7e:	mov    r8,QWORD PTR [r12]
   140002c82:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002c87:	movsxd rcx,DWORD PTR [r8+0x8]
   140002c8b:	movsxd rax,DWORD PTR [r8+0xc]
   140002c8f:	lea    rdi,[r14+rdx*8]
   140002c93:	add    rcx,rdx
   140002c96:	lea    rbp,[r8+rax*8+0x10]
   140002c9b:	add    rcx,r13
   140002c9e:	lea    rbx,[r8+rcx*8+0x10]
   140002ca3:	cmp    rbx,rbp
   140002ca6:	je     0x140002cc6
   140002ca8:	test   rbx,rbx
   140002cab:	je     0x140002cb9
   140002cad:	mov    rdx,rdi
   140002cb0:	mov    rcx,rbx
   140002cb3:	call   QWORD PTR [rip+0x13887]        # 0x140016540
   140002cb9:	add    rbx,0x8
   140002cbd:	add    rdi,0x8
   140002cc1:	cmp    rbx,rbp
   140002cc4:	jne    0x140002ca8
   140002cc6:	mov    eax,DWORD PTR [rsi]
   140002cc8:	test   eax,eax
   140002cca:	je     0x140002cdc
   140002ccc:	cmp    eax,0xffffffff
   140002ccf:	je     0x140002d0e
   140002cd1:	lock add DWORD PTR [rsi],0xffffffff
   140002cd5:	setne  al
   140002cd8:	test   al,al
   140002cda:	jne    0x140002d0e
   140002cdc:	movsxd rax,DWORD PTR [rsi+0xc]
   140002ce0:	lea    rbx,[rsi+rax*8+0x10]
   140002ce5:	movsxd rax,DWORD PTR [rsi+0x8]
   140002ce9:	lea    rdi,[rsi+rax*8+0x10]
   140002cee:	cmp    rdi,rbx
   140002cf1:	je     0x140002d05
   140002cf3:	sub    rbx,0x8
   140002cf7:	mov    rcx,rbx
   140002cfa:	call   QWORD PTR [rip+0x13c38]        # 0x140016938
   140002d00:	cmp    rbx,rdi
   140002d03:	jne    0x140002cf3
   140002d05:	mov    rcx,rsi
   140002d08:	call   QWORD PTR [rip+0x1359a]        # 0x1400162a8
   140002d0e:	mov    rdx,QWORD PTR [r12]
   140002d12:	movsxd rax,DWORD PTR [rsp+0x58]
   140002d17:	mov    rbx,QWORD PTR [rsp+0x50]
   140002d1c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002d20:	mov    rbp,QWORD PTR [rsp+0x60]
   140002d25:	add    rcx,rax
   140002d28:	lea    rax,[rdx+rcx*8+0x10]
   140002d2d:	add    rsp,0x20
   140002d31:	pop    r14
   140002d33:	pop    r13
   140002d35:	pop    r12
   140002d37:	pop    rdi
   140002d38:	pop    rsi
   140002d39:	ret    
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    QWORD PTR [rsp+0x8],rbx
   140002d45:	mov    QWORD PTR [rsp+0x10],rbp
   140002d4a:	mov    QWORD PTR [rsp+0x18],rsi
   140002d4f:	push   rdi
   140002d50:	sub    rsp,0x20
   140002d54:	mov    r8,QWORD PTR [rcx]
   140002d57:	mov    rbx,rcx
   140002d5a:	movsxd rax,DWORD PTR [r8+0x8]
   140002d5e:	lea    rdi,[r8+rax*8+0x10]
   140002d63:	call   QWORD PTR [rip+0x135b7]        # 0x140016320
   140002d69:	mov    rdx,QWORD PTR [rbx]
   140002d6c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002d70:	mov    rsi,rax
   140002d73:	lea    rbp,[rdx+rcx*8+0x10]
   140002d78:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002d7c:	lea    rbx,[rdx+rcx*8+0x10]
   140002d81:	cmp    rbx,rbp
   140002d84:	je     0x140002da4
   140002d86:	test   rbx,rbx
   140002d89:	je     0x140002d97
   140002d8b:	mov    rdx,rdi
   140002d8e:	mov    rcx,rbx
   140002d91:	call   QWORD PTR [rip+0x137a9]        # 0x140016540
   140002d97:	add    rbx,0x8
   140002d9b:	add    rdi,0x8
   140002d9f:	cmp    rbx,rbp
   140002da2:	jne    0x140002d86
   140002da4:	mov    eax,DWORD PTR [rsi]
   140002da6:	test   eax,eax
   140002da8:	je     0x140002dba
   140002daa:	cmp    eax,0xffffffff
   140002dad:	je     0x140002dec
   140002daf:	lock add DWORD PTR [rsi],0xffffffff
   140002db3:	setne  al
   140002db6:	test   al,al
   140002db8:	jne    0x140002dec
   140002dba:	movsxd rax,DWORD PTR [rsi+0xc]
   140002dbe:	lea    rbx,[rsi+rax*8+0x10]
   140002dc3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002dc7:	lea    rdi,[rsi+rax*8+0x10]
   140002dcc:	cmp    rdi,rbx
   140002dcf:	je     0x140002de3
   140002dd1:	sub    rbx,0x8
   140002dd5:	mov    rcx,rbx
   140002dd8:	call   QWORD PTR [rip+0x13b5a]        # 0x140016938
   140002dde:	cmp    rbx,rdi
   140002de1:	jne    0x140002dd1
   140002de3:	mov    rcx,rsi
   140002de6:	call   QWORD PTR [rip+0x134bc]        # 0x1400162a8
   140002dec:	mov    rbx,QWORD PTR [rsp+0x30]
   140002df1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002df6:	mov    rsi,QWORD PTR [rsp+0x40]
   140002dfb:	add    rsp,0x20
   140002dff:	pop    rdi
   140002e00:	ret    
   140002e01:	int3   
   140002e02:	int3   
   140002e03:	int3   
   140002e04:	int3   
   140002e05:	int3   
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    QWORD PTR [rsp+0x8],rbx
   140002e15:	push   rdi
   140002e16:	sub    rsp,0x30
   140002e1a:	mov    rbx,rcx
   140002e1d:	mov    rcx,QWORD PTR [rcx]
   140002e20:	lea    r8,[rip+0x10e39]        # 0x140013c60
   140002e27:	lea    rdx,[rip+0xffffffffffffe582]        # 0x1400013b0
   140002e2e:	mov    r9d,0x18
   140002e34:	mov    DWORD PTR [rsp+0x20],0x8
   140002e3c:	call   QWORD PTR [rip+0x134e6]        # 0x140016328
   140002e42:	mov    rdi,rax
   140002e45:	mov    rax,QWORD PTR [rbx]
   140002e48:	mov    ecx,DWORD PTR [rax+0x10]
   140002e4b:	test   ecx,ecx
   140002e4d:	je     0x140002e60
   140002e4f:	cmp    ecx,0xffffffff
   140002e52:	je     0x140002e70
   140002e54:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002e59:	setne  al
   140002e5c:	test   al,al
   140002e5e:	jne    0x140002e70
   140002e60:	mov    rcx,QWORD PTR [rbx]
   140002e63:	lea    rdx,[rip+0x10df6]        # 0x140013c60
   140002e6a:	call   QWORD PTR [rip+0x13428]        # 0x140016298
   140002e70:	mov    QWORD PTR [rbx],rdi
   140002e73:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e78:	add    rsp,0x30
   140002e7c:	pop    rdi
   140002e7d:	ret    
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rsp+0x18],rbx
   140002e85:	push   rsi
   140002e86:	sub    rsp,0x20
   140002e8a:	mov    rax,QWORD PTR [rdx]
   140002e8d:	mov    rsi,rcx
   140002e90:	mov    rbx,rdx
   140002e93:	mov    QWORD PTR [rcx],rax
   140002e96:	mov    ecx,DWORD PTR [rax]
   140002e98:	test   ecx,ecx
   140002e9a:	je     0x140002eb3
   140002e9c:	cmp    ecx,0xffffffff
   140002e9f:	je     0x140002f18
   140002ea1:	lock add DWORD PTR [rax],0x1
   140002ea5:	mov    rax,rsi
   140002ea8:	mov    rbx,QWORD PTR [rsp+0x40]
   140002ead:	add    rsp,0x20
   140002eb1:	pop    rsi
   140002eb2:	ret    
   140002eb3:	mov    edx,DWORD PTR [rax+0x4]
   140002eb6:	mov    rcx,rsi
   140002eb9:	mov    QWORD PTR [rsp+0x30],rbp
   140002ebe:	mov    QWORD PTR [rsp+0x38],rdi
   140002ec3:	call   QWORD PTR [rip+0x13457]        # 0x140016320
   140002ec9:	mov    r11,QWORD PTR [rsi]
   140002ecc:	mov    rcx,QWORD PTR [rbx]
   140002ecf:	movsxd rax,DWORD PTR [r11+0xc]
   140002ed3:	lea    rbp,[r11+rax*8+0x10]
   140002ed8:	movsxd rax,DWORD PTR [rcx+0x8]
   140002edc:	lea    rdi,[rcx+rax*8+0x10]
   140002ee1:	movsxd rax,DWORD PTR [r11+0x8]
   140002ee5:	lea    rbx,[r11+rax*8+0x10]
   140002eea:	cmp    rbx,rbp
   140002eed:	je     0x140002f0e
   140002eef:	nop
   140002ef0:	test   rbx,rbx
   140002ef3:	je     0x140002f01
   140002ef5:	mov    rdx,rdi
   140002ef8:	mov    rcx,rbx
   140002efb:	call   QWORD PTR [rip+0x13b97]        # 0x140016a98
   140002f01:	add    rbx,0x8
   140002f05:	add    rdi,0x8
   140002f09:	cmp    rbx,rbp
   140002f0c:	jne    0x140002ef0
   140002f0e:	mov    rbp,QWORD PTR [rsp+0x30]
   140002f13:	mov    rdi,QWORD PTR [rsp+0x38]
   140002f18:	mov    rax,rsi
   140002f1b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f20:	add    rsp,0x20
   140002f24:	pop    rsi
   140002f25:	ret    
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	mov    QWORD PTR [rsp+0x8],rbx
   140002f35:	push   rdi
   140002f36:	sub    rsp,0x30
   140002f3a:	mov    rbx,rcx
   140002f3d:	mov    rcx,QWORD PTR [rcx]
   140002f40:	lea    r8,[rip+0xfffffffffffff399]        # 0x1400022e0
   140002f47:	lea    rdx,[rip+0xffffffffffffe482]        # 0x1400013d0
   140002f4e:	mov    r9d,0x20
   140002f54:	mov    DWORD PTR [rsp+0x20],0x8
   140002f5c:	call   QWORD PTR [rip+0x133c6]        # 0x140016328
   140002f62:	mov    rdi,rax
   140002f65:	mov    rax,QWORD PTR [rbx]
   140002f68:	mov    ecx,DWORD PTR [rax+0x10]
   140002f6b:	test   ecx,ecx
   140002f6d:	je     0x140002f80
   140002f6f:	cmp    ecx,0xffffffff
   140002f72:	je     0x140002f90
   140002f74:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002f79:	setne  al
   140002f7c:	test   al,al
   140002f7e:	jne    0x140002f90
   140002f80:	mov    rcx,QWORD PTR [rbx]
   140002f83:	lea    rdx,[rip+0xfffffffffffff356]        # 0x1400022e0
   140002f8a:	call   QWORD PTR [rip+0x13308]        # 0x140016298
   140002f90:	mov    QWORD PTR [rbx],rdi
   140002f93:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f98:	add    rsp,0x30
   140002f9c:	pop    rdi
   140002f9d:	ret    
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fa5:	push   rdi
   140002fa6:	sub    rsp,0x30
   140002faa:	mov    rbx,rcx
   140002fad:	mov    rcx,QWORD PTR [rcx]
   140002fb0:	lea    r8,[rip+0xfffffffffffff359]        # 0x140002310
   140002fb7:	lea    rdx,[rip+0xffffffffffffe462]        # 0x140001420
   140002fbe:	mov    r9d,0x20
   140002fc4:	mov    DWORD PTR [rsp+0x20],0x8
   140002fcc:	call   QWORD PTR [rip+0x13356]        # 0x140016328
   140002fd2:	mov    rdi,rax
   140002fd5:	mov    rax,QWORD PTR [rbx]
   140002fd8:	mov    ecx,DWORD PTR [rax+0x10]
   140002fdb:	test   ecx,ecx
   140002fdd:	je     0x140002ff0
   140002fdf:	cmp    ecx,0xffffffff
   140002fe2:	je     0x140003000
   140002fe4:	lock add DWORD PTR [rax+0x10],0xffffffff
   140002fe9:	setne  al
   140002fec:	test   al,al
   140002fee:	jne    0x140003000
   140002ff0:	mov    rcx,QWORD PTR [rbx]
   140002ff3:	lea    rdx,[rip+0xfffffffffffff316]        # 0x140002310
   140002ffa:	call   QWORD PTR [rip+0x13298]        # 0x140016298
   140003000:	mov    QWORD PTR [rbx],rdi
   140003003:	mov    rbx,QWORD PTR [rsp+0x40]
   140003008:	add    rsp,0x30
   14000300c:	pop    rdi
   14000300d:	ret    
   14000300e:	int3   
   14000300f:	int3   
   140003010:	mov    QWORD PTR [rsp+0x8],rbx
   140003015:	push   rdi
   140003016:	sub    rsp,0x20
   14000301a:	mov    rax,QWORD PTR [rdx]
   14000301d:	mov    rbx,rcx
   140003020:	mov    rdi,rdx
   140003023:	mov    QWORD PTR [rcx],rax
   140003026:	mov    ecx,DWORD PTR [rax]
   140003028:	test   ecx,ecx
   14000302a:	je     0x140003043
   14000302c:	cmp    ecx,0xffffffff
   14000302f:	je     0x14000308a
   140003031:	lock add DWORD PTR [rax],0x1
   140003035:	mov    rax,rbx
   140003038:	mov    rbx,QWORD PTR [rsp+0x30]
   14000303d:	add    rsp,0x20
   140003041:	pop    rdi
   140003042:	ret    
   140003043:	mov    edx,DWORD PTR [rax+0x4]
   140003046:	mov    rcx,rbx
   140003049:	call   QWORD PTR [rip+0x132d1]        # 0x140016320
   14000304f:	mov    r11,QWORD PTR [rbx]
   140003052:	mov    rcx,QWORD PTR [rdi]
   140003055:	movsxd rax,DWORD PTR [r11+0xc]
   140003059:	lea    r8,[r11+rax*8+0x10]
   14000305e:	movsxd rax,DWORD PTR [rcx+0x8]
   140003062:	lea    rdx,[rcx+rax*8+0x10]
   140003067:	movsxd rax,DWORD PTR [r11+0x8]
   14000306b:	lea    rcx,[r11+rax*8+0x10]
   140003070:	cmp    rdx,rcx
   140003073:	je     0x14000308a
   140003075:	sub    r8,rcx
   140003078:	sar    r8,0x3
   14000307c:	test   r8,r8
   14000307f:	jle    0x14000308a
   140003081:	shl    r8,0x3
   140003085:	call   0x140015084
   14000308a:	mov    rax,rbx
   14000308d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003092:	add    rsp,0x20
   140003096:	pop    rdi
   140003097:	ret    
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030a5:	push   rdi
   1400030a6:	sub    rsp,0x30
   1400030aa:	mov    rbx,rcx
   1400030ad:	mov    rcx,QWORD PTR [rcx]
   1400030b0:	lea    r8,[rip+0xfffffffffffff269]        # 0x140002320
   1400030b7:	lea    rdx,[rip+0xffffffffffffe3a2]        # 0x140001460
   1400030be:	mov    r9d,0x18
   1400030c4:	mov    DWORD PTR [rsp+0x20],0x8
   1400030cc:	call   QWORD PTR [rip+0x13256]        # 0x140016328
   1400030d2:	mov    rdi,rax
   1400030d5:	mov    rax,QWORD PTR [rbx]
   1400030d8:	mov    ecx,DWORD PTR [rax+0x10]
   1400030db:	test   ecx,ecx
   1400030dd:	je     0x1400030f0
   1400030df:	cmp    ecx,0xffffffff
   1400030e2:	je     0x140003100
   1400030e4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400030e9:	setne  al
   1400030ec:	test   al,al
   1400030ee:	jne    0x140003100
   1400030f0:	mov    rcx,QWORD PTR [rbx]
   1400030f3:	lea    rdx,[rip+0xfffffffffffff226]        # 0x140002320
   1400030fa:	call   QWORD PTR [rip+0x13198]        # 0x140016298
   140003100:	mov    QWORD PTR [rbx],rdi
   140003103:	mov    rbx,QWORD PTR [rsp+0x40]
   140003108:	add    rsp,0x30
   14000310c:	pop    rdi
   14000310d:	ret    
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    QWORD PTR [rsp+0x8],rbx
   140003115:	push   rdi
   140003116:	sub    rsp,0x30
   14000311a:	mov    rbx,rcx
   14000311d:	mov    rcx,QWORD PTR [rcx]
   140003120:	lea    r8,[rip+0xfffffffffffff1f9]        # 0x140002320
   140003127:	lea    rdx,[rip+0xffffffffffffe362]        # 0x140001490
   14000312e:	mov    r9d,0x20
   140003134:	mov    DWORD PTR [rsp+0x20],0x8
   14000313c:	call   QWORD PTR [rip+0x131e6]        # 0x140016328
   140003142:	mov    rdi,rax
   140003145:	mov    rax,QWORD PTR [rbx]
   140003148:	mov    ecx,DWORD PTR [rax+0x10]
   14000314b:	test   ecx,ecx
   14000314d:	je     0x140003160
   14000314f:	cmp    ecx,0xffffffff
   140003152:	je     0x140003170
   140003154:	lock add DWORD PTR [rax+0x10],0xffffffff
   140003159:	setne  al
   14000315c:	test   al,al
   14000315e:	jne    0x140003170
   140003160:	mov    rcx,QWORD PTR [rbx]
   140003163:	lea    rdx,[rip+0xfffffffffffff1b6]        # 0x140002320
   14000316a:	call   QWORD PTR [rip+0x13128]        # 0x140016298
   140003170:	mov    QWORD PTR [rbx],rdi
   140003173:	mov    rbx,QWORD PTR [rsp+0x40]
   140003178:	add    rsp,0x30
   14000317c:	pop    rdi
   14000317d:	ret    
   14000317e:	int3   
   14000317f:	int3   
   140003180:	mov    QWORD PTR [rsp+0x8],rbx
   140003185:	mov    QWORD PTR [rsp+0x18],rbp
   14000318a:	mov    QWORD PTR [rsp+0x20],rsi
   14000318f:	mov    DWORD PTR [rsp+0x10],edx
   140003193:	push   rdi
   140003194:	sub    rsp,0x20
   140003198:	mov    rdx,QWORD PTR [rcx]
   14000319b:	movsxd rbp,r8d
   14000319e:	mov    rdi,rcx
   1400031a1:	movsxd rax,DWORD PTR [rdx+0x8]
   1400031a5:	mov    r8d,ebp
   1400031a8:	lea    rsi,[rdx+rax*8+0x10]
   1400031ad:	lea    rdx,[rsp+0x38]
   1400031b2:	call   QWORD PTR [rip+0x13180]        # 0x140016338
   1400031b8:	mov    r10,QWORD PTR [rdi]
   1400031bb:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400031c0:	movsxd r9,DWORD PTR [r10+0x8]
   1400031c4:	mov    rbx,rax
   1400031c7:	add    rdx,r9
   1400031ca:	lea    rcx,[r10+r9*8+0x10]
   1400031cf:	lea    r8,[r10+rdx*8+0x10]
   1400031d4:	cmp    rsi,rcx
   1400031d7:	je     0x1400031f1
   1400031d9:	sub    r8,rcx
   1400031dc:	sar    r8,0x3
   1400031e0:	test   r8,r8
   1400031e3:	jle    0x1400031f1
   1400031e5:	shl    r8,0x3
   1400031e9:	mov    rdx,rsi
   1400031ec:	call   0x140015084
   1400031f1:	mov    r8,QWORD PTR [rdi]
   1400031f4:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400031f9:	movsxd rcx,DWORD PTR [r8+0x8]
   1400031fd:	movsxd rax,DWORD PTR [r8+0xc]
   140003201:	lea    r10,[rsi+rdx*8]
   140003205:	add    rcx,rdx
   140003208:	lea    r9,[r8+rax*8+0x10]
   14000320d:	add    rcx,rbp
   140003210:	lea    rcx,[r8+rcx*8+0x10]
   140003215:	cmp    r10,rcx
   140003218:	je     0x140003236
   14000321a:	sub    r9,rcx
   14000321d:	sar    r9,0x3
   140003221:	test   r9,r9
   140003224:	jle    0x140003236
   140003226:	lea    r8,[r9*8+0x0]
   14000322e:	mov    rdx,r10
   140003231:	call   0x140015084
   140003236:	mov    eax,DWORD PTR [rbx]
   140003238:	test   eax,eax
   14000323a:	je     0x14000324c
   14000323c:	cmp    eax,0xffffffff
   14000323f:	je     0x140003255
   140003241:	lock add DWORD PTR [rbx],0xffffffff
   140003245:	setne  al
   140003248:	test   al,al
   14000324a:	jne    0x140003255
   14000324c:	mov    rcx,rbx
   14000324f:	call   QWORD PTR [rip+0x13053]        # 0x1400162a8
   140003255:	mov    rdx,QWORD PTR [rdi]
   140003258:	movsxd rax,DWORD PTR [rsp+0x38]
   14000325d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003262:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003266:	mov    rbp,QWORD PTR [rsp+0x40]
   14000326b:	mov    rsi,QWORD PTR [rsp+0x48]
   140003270:	add    rcx,rax
   140003273:	lea    rax,[rdx+rcx*8+0x10]
   140003278:	add    rsp,0x20
   14000327c:	pop    rdi
   14000327d:	ret    
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    QWORD PTR [rsp+0x8],rbx
   140003285:	push   rdi
   140003286:	sub    rsp,0x30
   14000328a:	mov    rbx,rcx
   14000328d:	mov    rcx,QWORD PTR [rcx]
   140003290:	lea    r8,[rip+0xfffffffffffff039]        # 0x1400022d0
   140003297:	lea    rdx,[rip+0xffffffffffffe242]        # 0x1400014e0
   14000329e:	mov    r9d,0x20
   1400032a4:	mov    DWORD PTR [rsp+0x20],0x8
   1400032ac:	call   QWORD PTR [rip+0x13076]        # 0x140016328
   1400032b2:	mov    rdi,rax
   1400032b5:	mov    rax,QWORD PTR [rbx]
   1400032b8:	mov    ecx,DWORD PTR [rax+0x10]
   1400032bb:	test   ecx,ecx
   1400032bd:	je     0x1400032d0
   1400032bf:	cmp    ecx,0xffffffff
   1400032c2:	je     0x1400032e0
   1400032c4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400032c9:	setne  al
   1400032cc:	test   al,al
   1400032ce:	jne    0x1400032e0
   1400032d0:	mov    rcx,QWORD PTR [rbx]
   1400032d3:	lea    rdx,[rip+0xffffffffffffeff6]        # 0x1400022d0
   1400032da:	call   QWORD PTR [rip+0x12fb8]        # 0x140016298
   1400032e0:	mov    QWORD PTR [rbx],rdi
   1400032e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032e8:	add    rsp,0x30
   1400032ec:	pop    rdi
   1400032ed:	ret    
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400032fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400032ff:	mov    DWORD PTR [rsp+0x10],edx
   140003303:	push   rdi
   140003304:	sub    rsp,0x20
   140003308:	mov    rdx,QWORD PTR [rcx]
   14000330b:	movsxd rdi,r8d
   14000330e:	mov    rbp,rcx
   140003311:	movsxd rax,DWORD PTR [rdx+0x8]
   140003315:	mov    r8d,edi
   140003318:	lea    rbx,[rdx+rax*8+0x10]
   14000331d:	lea    rdx,[rsp+0x38]
   140003322:	call   QWORD PTR [rip+0x13010]        # 0x140016338
   140003328:	mov    r10,QWORD PTR [rbp+0x0]
   14000332c:	movsxd rdx,DWORD PTR [rsp+0x38]
   140003331:	movsxd r9,DWORD PTR [r10+0x8]
   140003335:	mov    rcx,rbp
   140003338:	mov    rsi,rax
   14000333b:	add    rdx,r9
   14000333e:	lea    r8,[r10+rdx*8+0x10]
   140003343:	lea    rdx,[r10+r9*8+0x10]
   140003348:	mov    r9,rbx
   14000334b:	call   0x140001530
   140003350:	mov    rdx,QWORD PTR [rbp+0x0]
   140003354:	movsxd r11,DWORD PTR [rsp+0x38]
   140003359:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000335d:	lea    r9,[rbx+r11*8]
   140003361:	lea    r8,[rdx+rcx*8+0x10]
   140003366:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000336a:	add    rcx,r11
   14000336d:	add    rcx,rdi
   140003370:	lea    rdx,[rdx+rcx*8+0x10]
   140003375:	mov    rcx,rbp
   140003378:	call   0x140001530
   14000337d:	mov    r11d,DWORD PTR [rsi]
   140003380:	test   r11d,r11d
   140003383:	je     0x140003396
   140003385:	cmp    r11d,0xffffffff
   140003389:	je     0x1400033a1
   14000338b:	lock add DWORD PTR [rsi],0xffffffff
   14000338f:	setne  al
   140003392:	test   al,al
   140003394:	jne    0x1400033a1
   140003396:	mov    rdx,rsi
   140003399:	mov    rcx,rbp
   14000339c:	call   0x140001db0
   1400033a1:	mov    rdx,QWORD PTR [rbp+0x0]
   1400033a5:	movsxd rax,DWORD PTR [rsp+0x38]
   1400033aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033af:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400033b3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400033b8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400033bd:	add    rcx,rax
   1400033c0:	lea    rax,[rdx+rcx*8+0x10]
   1400033c5:	add    rsp,0x20
   1400033c9:	pop    rdi
   1400033ca:	ret    
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033d5:	push   rdi
   1400033d6:	sub    rsp,0x20
   1400033da:	mov    rbx,rcx
   1400033dd:	call   QWORD PTR [rip+0x12ea5]        # 0x140016288
   1400033e3:	mov    rdx,QWORD PTR [rbx]
   1400033e6:	mov    rcx,QWORD PTR [rdx+0x10]
   1400033ea:	mov    rdi,rax
   1400033ed:	test   rcx,rcx
   1400033f0:	je     0x140003409
   1400033f2:	mov    rdx,rax
   1400033f5:	call   0x1400015c0
   1400033fa:	lea    rcx,[rdi+0x8]
   1400033fe:	mov    QWORD PTR [rdi+0x10],rax
   140003402:	and    QWORD PTR [rax],0x3
   140003406:	or     QWORD PTR [rax],rcx
   140003409:	mov    rcx,QWORD PTR [rbx]
   14000340c:	mov    eax,DWORD PTR [rcx]
   14000340e:	test   eax,eax
   140003410:	je     0x140003422
   140003412:	cmp    eax,0xffffffff
   140003415:	je     0x14000342a
   140003417:	lock add DWORD PTR [rcx],0xffffffff
   14000341b:	setne  al
   14000341e:	test   al,al
   140003420:	jne    0x14000342a
   140003422:	mov    rcx,QWORD PTR [rbx]
   140003425:	call   0x140002770
   14000342a:	mov    rcx,rdi
   14000342d:	mov    QWORD PTR [rbx],rdi
   140003430:	mov    rbx,QWORD PTR [rsp+0x30]
   140003435:	add    rsp,0x20
   140003439:	pop    rdi
   14000343a:	rex.W jmp QWORD PTR [rip+0x12eff]        # 0x140016340
   140003441:	int3   
   140003442:	int3   
   140003443:	int3   
   140003444:	int3   
   140003445:	int3   
   140003446:	int3   
   140003447:	int3   
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	mov    QWORD PTR [rsp+0x8],rbx
   140003455:	mov    QWORD PTR [rsp+0x18],rbp
   14000345a:	mov    DWORD PTR [rsp+0x10],edx
   14000345e:	push   rsi
   14000345f:	push   rdi
   140003460:	push   r12
   140003462:	push   r13
   140003464:	push   r14
   140003466:	sub    rsp,0x20
   14000346a:	mov    rdx,QWORD PTR [rcx]
   14000346d:	movsxd r13,r8d
   140003470:	mov    r12,rcx
   140003473:	movsxd rax,DWORD PTR [rdx+0x8]
   140003477:	mov    r8d,r13d
   14000347a:	lea    r14,[rdx+rax*8+0x10]
   14000347f:	lea    rdx,[rsp+0x58]
   140003484:	call   QWORD PTR [rip+0x12eae]        # 0x140016338
   14000348a:	mov    r10,QWORD PTR [r12]
   14000348e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003493:	movsxd r9,DWORD PTR [r10+0x8]
   140003497:	mov    rsi,rax
   14000349a:	mov    rdi,r14
   14000349d:	add    rdx,r9
   1400034a0:	lea    rbx,[r10+r9*8+0x10]
   1400034a5:	lea    rbp,[r10+rdx*8+0x10]
   1400034aa:	cmp    rbx,rbp
   1400034ad:	je     0x1400034ce
   1400034af:	nop
   1400034b0:	test   rbx,rbx
   1400034b3:	je     0x1400034c1
   1400034b5:	mov    rdx,rdi
   1400034b8:	mov    rcx,rbx
   1400034bb:	call   QWORD PTR [rip+0x12dcf]        # 0x140016290
   1400034c1:	add    rbx,0x8
   1400034c5:	add    rdi,0x8
   1400034c9:	cmp    rbx,rbp
   1400034cc:	jne    0x1400034b0
   1400034ce:	mov    r8,QWORD PTR [r12]
   1400034d2:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400034d7:	movsxd rcx,DWORD PTR [r8+0x8]
   1400034db:	movsxd rax,DWORD PTR [r8+0xc]
   1400034df:	lea    rdi,[r14+rdx*8]
   1400034e3:	add    rcx,rdx
   1400034e6:	lea    rbp,[r8+rax*8+0x10]
   1400034eb:	add    rcx,r13
   1400034ee:	lea    rbx,[r8+rcx*8+0x10]
   1400034f3:	cmp    rbx,rbp
   1400034f6:	je     0x140003516
   1400034f8:	test   rbx,rbx
   1400034fb:	je     0x140003509
   1400034fd:	mov    rdx,rdi
   140003500:	mov    rcx,rbx
   140003503:	call   QWORD PTR [rip+0x12d87]        # 0x140016290
   140003509:	add    rbx,0x8
   14000350d:	add    rdi,0x8
   140003511:	cmp    rbx,rbp
   140003514:	jne    0x1400034f8
   140003516:	mov    eax,DWORD PTR [rsi]
   140003518:	test   eax,eax
   14000351a:	je     0x14000352c
   14000351c:	cmp    eax,0xffffffff
   14000351f:	je     0x14000355e
   140003521:	lock add DWORD PTR [rsi],0xffffffff
   140003525:	setne  al
   140003528:	test   al,al
   14000352a:	jne    0x14000355e
   14000352c:	movsxd rax,DWORD PTR [rsi+0xc]
   140003530:	lea    rbx,[rsi+rax*8+0x10]
   140003535:	movsxd rax,DWORD PTR [rsi+0x8]
   140003539:	lea    rdi,[rsi+rax*8+0x10]
   14000353e:	cmp    rdi,rbx
   140003541:	je     0x140003555
   140003543:	sub    rbx,0x8
   140003547:	mov    rcx,rbx
   14000354a:	call   QWORD PTR [rip+0x12d28]        # 0x140016278
   140003550:	cmp    rbx,rdi
   140003553:	jne    0x140003543
   140003555:	mov    rcx,rsi
   140003558:	call   QWORD PTR [rip+0x12d4a]        # 0x1400162a8
   14000355e:	mov    rdx,QWORD PTR [r12]
   140003562:	movsxd rax,DWORD PTR [rsp+0x58]
   140003567:	mov    rbx,QWORD PTR [rsp+0x50]
   14000356c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003570:	mov    rbp,QWORD PTR [rsp+0x60]
   140003575:	add    rcx,rax
   140003578:	lea    rax,[rdx+rcx*8+0x10]
   14000357d:	add    rsp,0x20
   140003581:	pop    r14
   140003583:	pop    r13
   140003585:	pop    r12
   140003587:	pop    rdi
   140003588:	pop    rsi
   140003589:	ret    
   14000358a:	int3   
   14000358b:	int3   
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	mov    QWORD PTR [rsp+0x8],rbx
   140003595:	mov    QWORD PTR [rsp+0x10],rbp
   14000359a:	mov    QWORD PTR [rsp+0x18],rsi
   14000359f:	push   rdi
   1400035a0:	sub    rsp,0x20
   1400035a4:	mov    r8,QWORD PTR [rcx]
   1400035a7:	mov    rbx,rcx
   1400035aa:	movsxd rax,DWORD PTR [r8+0x8]
   1400035ae:	lea    rdi,[r8+rax*8+0x10]
   1400035b3:	call   QWORD PTR [rip+0x12d67]        # 0x140016320
   1400035b9:	mov    rdx,QWORD PTR [rbx]
   1400035bc:	movsxd rcx,DWORD PTR [rdx+0xc]
   1400035c0:	mov    rsi,rax
   1400035c3:	lea    rbp,[rdx+rcx*8+0x10]
   1400035c8:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400035cc:	lea    rbx,[rdx+rcx*8+0x10]
   1400035d1:	cmp    rbx,rbp
   1400035d4:	je     0x1400035f4
   1400035d6:	test   rbx,rbx
   1400035d9:	je     0x1400035e7
   1400035db:	mov    rdx,rdi
   1400035de:	mov    rcx,rbx
   1400035e1:	call   QWORD PTR [rip+0x12ca9]        # 0x140016290
   1400035e7:	add    rbx,0x8
   1400035eb:	add    rdi,0x8
   1400035ef:	cmp    rbx,rbp
   1400035f2:	jne    0x1400035d6
   1400035f4:	mov    eax,DWORD PTR [rsi]
   1400035f6:	test   eax,eax
   1400035f8:	je     0x14000360a
   1400035fa:	cmp    eax,0xffffffff
   1400035fd:	je     0x14000363c
   1400035ff:	lock add DWORD PTR [rsi],0xffffffff
   140003603:	setne  al
   140003606:	test   al,al
   140003608:	jne    0x14000363c
   14000360a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000360e:	lea    rbx,[rsi+rax*8+0x10]
   140003613:	movsxd rax,DWORD PTR [rsi+0x8]
   140003617:	lea    rdi,[rsi+rax*8+0x10]
   14000361c:	cmp    rdi,rbx
   14000361f:	je     0x140003633
   140003621:	sub    rbx,0x8
   140003625:	mov    rcx,rbx
   140003628:	call   QWORD PTR [rip+0x12c4a]        # 0x140016278
   14000362e:	cmp    rbx,rdi
   140003631:	jne    0x140003621
   140003633:	mov    rcx,rsi
   140003636:	call   QWORD PTR [rip+0x12c6c]        # 0x1400162a8
   14000363c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003641:	mov    rbp,QWORD PTR [rsp+0x38]
   140003646:	mov    rsi,QWORD PTR [rsp+0x40]
   14000364b:	add    rsp,0x20
   14000364f:	pop    rdi
   140003650:	ret    
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    r11,rsp
   140003663:	mov    QWORD PTR [r11+0x20],rbx
   140003667:	push   rbp
   140003668:	push   rsi
   140003669:	push   rdi
   14000366a:	push   r12
   14000366c:	push   r13
   14000366e:	push   r14
   140003670:	push   r15
   140003672:	sub    rsp,0x20
   140003676:	mov    r9,QWORD PTR [rdx]
   140003679:	mov    r10,QWORD PTR [r8]
   14000367c:	mov    r14,rdx
   14000367f:	mov    rax,r10
   140003682:	mov    r13,r8
   140003685:	mov    r15,rcx
   140003688:	sub    rax,r9
   14000368b:	lea    r8,[r11+0x8]
   14000368f:	lea    rcx,[r11+0x18]
   140003693:	sar    rax,0x3
   140003697:	mov    QWORD PTR [r11+0x18],r9
   14000369b:	cdq    
   14000369c:	sub    eax,edx
   14000369e:	sar    eax,1
   1400036a0:	movsxd rdx,eax
   1400036a3:	lea    rax,[r10-0x8]
   1400036a7:	lea    rbx,[r9+rdx*8]
   1400036ab:	lea    rdx,[r11+0x10]
   1400036af:	mov    QWORD PTR [r11+0x8],rax
   1400036b3:	mov    QWORD PTR [r11+0x10],rbx
   1400036b7:	call   0x140002330
   1400036bc:	lea    rbp,[rbx+0x8]
   1400036c0:	cmp    QWORD PTR [r14],rbx
   1400036c3:	jae    0x1400036fc
   1400036c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400036d0:	lea    rdi,[rbx-0x8]
   1400036d4:	mov    rdx,rbx
   1400036d7:	mov    rcx,rdi
   1400036da:	call   QWORD PTR [rip+0x12b90]        # 0x140016270
   1400036e0:	test   al,al
   1400036e2:	jne    0x1400036fc
   1400036e4:	mov    rdx,rdi
   1400036e7:	mov    rcx,rbx
   1400036ea:	call   QWORD PTR [rip+0x12b80]        # 0x140016270
   1400036f0:	test   al,al
   1400036f2:	jne    0x1400036fc
   1400036f4:	mov    rbx,rdi
   1400036f7:	cmp    QWORD PTR [r14],rdi
   1400036fa:	jb     0x1400036d0
   1400036fc:	cmp    rbp,QWORD PTR [r13+0x0]
   140003700:	jae    0x14000372c
   140003702:	mov    rdx,rbx
   140003705:	mov    rcx,rbp
   140003708:	call   QWORD PTR [rip+0x12b62]        # 0x140016270
   14000370e:	test   al,al
   140003710:	jne    0x14000372c
   140003712:	mov    rdx,rbp
   140003715:	mov    rcx,rbx
   140003718:	call   QWORD PTR [rip+0x12b52]        # 0x140016270
   14000371e:	test   al,al
   140003720:	jne    0x14000372c
   140003722:	add    rbp,0x8
   140003726:	cmp    rbp,QWORD PTR [r13+0x0]
   14000372a:	jb     0x140003702
   14000372c:	mov    rdi,rbp
   14000372f:	mov    rsi,rbx
   140003732:	cmp    rdi,QWORD PTR [r13+0x0]
   140003736:	jae    0x14000377a
   140003738:	nop    DWORD PTR [rax+rax*1+0x0]
   140003740:	mov    rdx,rdi
   140003743:	mov    rcx,rbx
   140003746:	call   QWORD PTR [rip+0x12b24]        # 0x140016270
   14000374c:	test   al,al
   14000374e:	jne    0x140003770
   140003750:	mov    rdx,rbx
   140003753:	mov    rcx,rdi
   140003756:	call   QWORD PTR [rip+0x12b14]        # 0x140016270
   14000375c:	test   al,al
   14000375e:	jne    0x14000377a
   140003760:	mov    rcx,rbp
   140003763:	mov    rdx,rdi
   140003766:	add    rbp,0x8
   14000376a:	call   QWORD PTR [rip+0x131b0]        # 0x140016920
   140003770:	add    rdi,0x8
   140003774:	cmp    rdi,QWORD PTR [r13+0x0]
   140003778:	jb     0x140003740
   14000377a:	cmp    QWORD PTR [r14],rsi
   14000377d:	jae    0x1400037c0
   14000377f:	lea    r12,[rsi-0x8]
   140003783:	mov    rdx,rbx
   140003786:	mov    rcx,r12
   140003789:	call   QWORD PTR [rip+0x12ae1]        # 0x140016270
   14000378f:	test   al,al
   140003791:	jne    0x1400037b3
   140003793:	mov    rdx,r12
   140003796:	mov    rcx,rbx
   140003799:	call   QWORD PTR [rip+0x12ad1]        # 0x140016270
   14000379f:	test   al,al
   1400037a1:	jne    0x1400037c0
   1400037a3:	sub    rbx,0x8
   1400037a7:	mov    rdx,r12
   1400037aa:	mov    rcx,rbx
   1400037ad:	call   QWORD PTR [rip+0x1316d]        # 0x140016920
   1400037b3:	sub    rsi,0x8
   1400037b7:	sub    r12,0x8
   1400037bb:	cmp    QWORD PTR [r14],rsi
   1400037be:	jb     0x140003783
   1400037c0:	mov    rax,QWORD PTR [r14]
   1400037c3:	cmp    rsi,rax
   1400037c6:	jne    0x140003801
   1400037c8:	cmp    rdi,QWORD PTR [r13+0x0]
   1400037cc:	je     0x14000384a
   1400037ce:	cmp    rsi,rax
   1400037d1:	jne    0x140003801
   1400037d3:	cmp    rbp,rdi
   1400037d6:	je     0x1400037e4
   1400037d8:	mov    rdx,rbp
   1400037db:	mov    rcx,rbx
   1400037de:	call   QWORD PTR [rip+0x1313c]        # 0x140016920
   1400037e4:	mov    rdx,rdi
   1400037e7:	mov    rcx,rbx
   1400037ea:	add    rbp,0x8
   1400037ee:	add    rdi,0x8
   1400037f2:	add    rbx,0x8
   1400037f6:	call   QWORD PTR [rip+0x13124]        # 0x140016920
   1400037fc:	jmp    0x140003732
   140003801:	sub    rsi,0x8
   140003805:	cmp    rdi,QWORD PTR [r13+0x0]
   140003809:	jne    0x140003835
   14000380b:	sub    rbx,0x8
   14000380f:	cmp    rsi,rbx
   140003812:	je     0x140003820
   140003814:	mov    rdx,rbx
   140003817:	mov    rcx,rsi
   14000381a:	call   QWORD PTR [rip+0x13100]        # 0x140016920
   140003820:	sub    rbp,0x8
   140003824:	mov    rcx,rbx
   140003827:	mov    rdx,rbp
   14000382a:	call   QWORD PTR [rip+0x130f0]        # 0x140016920
   140003830:	jmp    0x140003732
   140003835:	mov    rcx,rdi
   140003838:	mov    rdx,rsi
   14000383b:	add    rdi,0x8
   14000383f:	call   QWORD PTR [rip+0x130db]        # 0x140016920
   140003845:	jmp    0x140003732
   14000384a:	mov    QWORD PTR [r15],rbx
   14000384d:	mov    rbx,QWORD PTR [rsp+0x78]
   140003852:	mov    rax,r15
   140003855:	mov    QWORD PTR [r15+0x8],rbp
   140003859:	add    rsp,0x20
   14000385d:	pop    r15
   14000385f:	pop    r14
   140003861:	pop    r13
   140003863:	pop    r12
   140003865:	pop    rdi
   140003866:	pop    rsi
   140003867:	pop    rbp
   140003868:	ret    
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x18],rbx
   140003875:	mov    QWORD PTR [rsp+0x20],rsi
   14000387a:	push   rdi
   14000387b:	sub    rsp,0x20
   14000387f:	mov    rax,QWORD PTR [rdx]
   140003882:	mov    rdi,rcx
   140003885:	sub    rax,QWORD PTR [rcx]
   140003888:	sar    rax,0x3
   14000388c:	movsxd rsi,eax
   14000388f:	mov    rax,rsi
   140003892:	cqo    
   140003894:	sub    rax,rdx
   140003897:	sar    rax,1
   14000389a:	mov    rbx,rax
   14000389d:	test   rax,rax
   1400038a0:	jle    0x1400038e2
   1400038a2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400038b0:	mov    rcx,QWORD PTR [rdi]
   1400038b3:	dec    rbx
   1400038b6:	lea    rdx,[rcx+rbx*8]
   1400038ba:	mov    QWORD PTR [rsp+0x30],rcx
   1400038bf:	lea    rcx,[rsp+0x38]
   1400038c4:	call   QWORD PTR [rip+0x12c76]        # 0x140016540
   1400038ca:	lea    rcx,[rsp+0x30]
   1400038cf:	mov    r8,rsi
   1400038d2:	mov    r9,rax
   1400038d5:	mov    rdx,rbx
   1400038d8:	call   0x140002490
   1400038dd:	test   rbx,rbx
   1400038e0:	jg     0x1400038b0
   1400038e2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400038e7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400038ec:	add    rsp,0x20
   1400038f0:	pop    rdi
   1400038f1:	ret    
   1400038f2:	int3   
   1400038f3:	int3   
   1400038f4:	int3   
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	int3   
   1400038f9:	int3   
   1400038fa:	int3   
   1400038fb:	int3   
   1400038fc:	int3   
   1400038fd:	int3   
   1400038fe:	int3   
   1400038ff:	int3   
   140003900:	mov    QWORD PTR [rsp+0x8],rbx
   140003905:	mov    QWORD PTR [rsp+0x10],rsi
   14000390a:	push   rdi
   14000390b:	sub    rsp,0x20
   14000390f:	mov    eax,DWORD PTR [rip+0x197eb]        # 0x14001d100
   140003915:	mov    rdi,r8
   140003918:	mov    rsi,rdx
   14000391b:	mov    rbx,rcx
   14000391e:	test   al,0x1
   140003920:	jne    0x14000394f
   140003922:	or     eax,0x1
   140003925:	lea    rdx,[rip+0x1347c]        # 0x140016da8
   14000392c:	lea    rcx,[rip+0x197c5]        # 0x14001d0f8
   140003933:	or     r8d,0xffffffff
   140003937:	mov    DWORD PTR [rip+0x197c3],eax        # 0x14001d100
   14000393d:	call   QWORD PTR [rip+0x12a2d]        # 0x140016370
   140003943:	lea    rcx,[rip+0x12166]        # 0x140015ab0
   14000394a:	call   0x14001514c
   14000394f:	mov    dl,0x2a
   140003951:	mov    rcx,rbx
   140003954:	call   QWORD PTR [rip+0x12a0e]        # 0x140016368
   14000395a:	mov    rcx,rbx
   14000395d:	test   al,al
   14000395f:	je     0x140003974
   140003961:	mov    BYTE PTR [rdi],0x1
   140003964:	mov    rax,QWORD PTR [rbx]
   140003967:	mov    edx,DWORD PTR [rax+0x4]
   14000396a:	dec    edx
   14000396c:	call   QWORD PTR [rip+0x129ee]        # 0x140016360
   140003972:	jmp    0x1400039cd
   140003974:	lea    rdx,[rip+0x1977d]        # 0x14001d0f8
   14000397b:	call   QWORD PTR [rip+0x129d7]        # 0x140016358
   140003981:	test   al,al
   140003983:	je     0x1400039db
   140003985:	mov    BYTE PTR [rsi],0x1
   140003988:	mov    rax,QWORD PTR [rbx]
   14000398b:	mov    rcx,rbx
   14000398e:	mov    edx,DWORD PTR [rax+0x4]
   140003991:	dec    edx
   140003993:	call   QWORD PTR [rip+0x129c7]        # 0x140016360
   140003999:	mov    r11,QWORD PTR [rip+0x19758]        # 0x14001d0f8
   1400039a0:	lea    rdx,[rsp+0x48]
   1400039a5:	mov    r8d,DWORD PTR [r11+0x4]
   1400039a9:	or     r9d,0xffffffff
   1400039ad:	mov    rcx,rbx
   1400039b0:	call   QWORD PTR [rip+0x1299a]        # 0x140016350
   1400039b6:	mov    rcx,rbx
   1400039b9:	mov    rdx,rax
   1400039bc:	call   QWORD PTR [rip+0x12986]        # 0x140016348
   1400039c2:	lea    rcx,[rsp+0x48]
   1400039c7:	call   QWORD PTR [rip+0x128ab]        # 0x140016278
   1400039cd:	mov    r8,rdi
   1400039d0:	mov    rdx,rsi
   1400039d3:	mov    rcx,rbx
   1400039d6:	call   0x140003900
   1400039db:	mov    rax,QWORD PTR [rip+0x196fe]        # 0x14001d0e0
   1400039e2:	cmp    DWORD PTR [rax+0x14],0x0
   1400039e6:	je     0x140003a21
   1400039e8:	xor    r8d,r8d
   1400039eb:	cmp    DWORD PTR [rax+0x20],r8d
   1400039ef:	je     0x140003a00
   1400039f1:	mov    edx,DWORD PTR [rax+0x24]
   1400039f4:	mov    rcx,rbx
   1400039f7:	call   QWORD PTR [rip+0x128e3]        # 0x1400162e0
   1400039fd:	mov    r8d,eax
   140003a00:	lea    rcx,[rip+0x196d9]        # 0x14001d0e0
   140003a07:	mov    rdx,rbx
   140003a0a:	call   0x140001e30
   140003a0f:	mov    rdx,QWORD PTR [rax]
   140003a12:	cmp    rdx,QWORD PTR [rip+0x196c7]        # 0x14001d0e0
   140003a19:	je     0x140003a21
   140003a1b:	add    rdx,0x18
   140003a1f:	jmp    0x140003a24
   140003a21:	mov    rdx,rbx
   140003a24:	lea    rcx,[rsp+0x48]
   140003a29:	call   QWORD PTR [rip+0x12861]        # 0x140016290
   140003a2f:	lea    rdx,[rsp+0x48]
   140003a34:	mov    rcx,rbx
   140003a37:	call   QWORD PTR [rip+0x1290b]        # 0x140016348
   140003a3d:	lea    rcx,[rsp+0x48]
   140003a42:	call   QWORD PTR [rip+0x12830]        # 0x140016278
   140003a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a52:	add    rsp,0x20
   140003a56:	pop    rdi
   140003a57:	ret    
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	mov    rax,rsp
   140003a63:	mov    QWORD PTR [rax+0x8],rbx
   140003a67:	mov    QWORD PTR [rax+0x10],rbp
   140003a6b:	push   rsi
   140003a6c:	push   rdi
   140003a6d:	push   r12
   140003a6f:	sub    rsp,0x50
   140003a73:	mov    rsi,rdx
   140003a76:	movzx  ebx,r8b
   140003a7a:	mov    rbp,rcx
   140003a7d:	lea    r8,[rax+0x20]
   140003a81:	lea    rdx,[rax+0x18]
   140003a85:	mov    rcx,rsi
   140003a88:	mov    BYTE PTR [rax+0x18],0x0
   140003a8c:	mov    BYTE PTR [rax+0x20],0x0
   140003a90:	call   0x140003900
   140003a95:	lea    rcx,[rsp+0x28]
   140003a9a:	mov    rdx,rsi
   140003a9d:	call   QWORD PTR [rip+0x128d5]        # 0x140016378
   140003aa3:	or     rcx,0xffffffffffffffff
   140003aa7:	lea    rdx,[rip+0x1333e]        # 0x140016dec
   140003aae:	mov    QWORD PTR [rsp+0x48],rdx
   140003ab3:	mov    rdi,rdx
   140003ab6:	xor    eax,eax
   140003ab8:	repnz scas al,BYTE PTR es:[rdi]
   140003aba:	lea    rdx,[rsp+0x40]
   140003abf:	not    rcx
   140003ac2:	dec    rcx
   140003ac5:	mov    DWORD PTR [rsp+0x40],ecx
   140003ac9:	lea    rcx,[rsp+0x20]
   140003ace:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003ad3:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003ad9:	call   QWORD PTR [rip+0x12731]        # 0x140016210
   140003adf:	lea    rdx,[rsp+0x28]
   140003ae4:	lea    rcx,[rsp+0x30]
   140003ae9:	call   0x140001000
   140003aee:	mov    rcx,QWORD PTR [rbp+0x0]
   140003af2:	lea    rdx,[rsp+0x20]
   140003af7:	mov    r8,rax
   140003afa:	call   0x140014b80
   140003aff:	lea    rcx,[rsp+0x30]
   140003b04:	call   QWORD PTR [rip+0x12e2e]        # 0x140016938
   140003b0a:	lea    rcx,[rsp+0x20]
   140003b0f:	call   QWORD PTR [rip+0x12e23]        # 0x140016938
   140003b15:	lea    rcx,[rsp+0x28]
   140003b1a:	call   QWORD PTR [rip+0x12e18]        # 0x140016938
   140003b20:	cmp    BYTE PTR [rsp+0x80],0x0
   140003b28:	lea    r12,[rip+0x132b5]        # 0x140016de4
   140003b2f:	je     0x140003bcf
   140003b35:	or     rcx,0xffffffffffffffff
   140003b39:	mov    QWORD PTR [rsp+0x48],r12
   140003b3e:	xor    eax,eax
   140003b40:	mov    rdi,r12
   140003b43:	lea    rdx,[rsp+0x40]
   140003b48:	repnz scas al,BYTE PTR es:[rdi]
   140003b4a:	not    rcx
   140003b4d:	dec    rcx
   140003b50:	mov    DWORD PTR [rsp+0x40],ecx
   140003b54:	lea    rcx,[rsp+0x20]
   140003b59:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003b5e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003b64:	call   QWORD PTR [rip+0x126a6]        # 0x140016210
   140003b6a:	or     rcx,0xffffffffffffffff
   140003b6e:	lea    rdx,[rip+0x13267]        # 0x140016ddc
   140003b75:	xor    eax,eax
   140003b77:	mov    QWORD PTR [rsp+0x48],rdx
   140003b7c:	mov    rdi,rdx
   140003b7f:	lea    rdx,[rsp+0x40]
   140003b84:	repnz scas al,BYTE PTR es:[rdi]
   140003b86:	not    rcx
   140003b89:	dec    rcx
   140003b8c:	mov    DWORD PTR [rsp+0x40],ecx
   140003b90:	lea    rcx,[rsp+0x28]
   140003b95:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003b9a:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003ba0:	call   QWORD PTR [rip+0x1266a]        # 0x140016210
   140003ba6:	mov    rcx,QWORD PTR [rbp+0x0]
   140003baa:	lea    r8,[rsp+0x20]
   140003baf:	lea    rdx,[rsp+0x28]
   140003bb4:	call   0x140014b80
   140003bb9:	lea    rcx,[rsp+0x28]
   140003bbe:	call   QWORD PTR [rip+0x12d74]        # 0x140016938
   140003bc4:	lea    rcx,[rsp+0x20]
   140003bc9:	call   QWORD PTR [rip+0x12d69]        # 0x140016938
   140003bcf:	test   bl,bl
   140003bd1:	jne    0x140003c71
   140003bd7:	or     rcx,0xffffffffffffffff
   140003bdb:	mov    QWORD PTR [rsp+0x48],r12
   140003be0:	xor    eax,eax
   140003be2:	mov    rdi,r12
   140003be5:	lea    rdx,[rsp+0x40]
   140003bea:	repnz scas al,BYTE PTR es:[rdi]
   140003bec:	not    rcx
   140003bef:	dec    rcx
   140003bf2:	mov    DWORD PTR [rsp+0x40],ecx
   140003bf6:	lea    rcx,[rsp+0x20]
   140003bfb:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003c00:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003c06:	call   QWORD PTR [rip+0x12604]        # 0x140016210
   140003c0c:	or     rcx,0xffffffffffffffff
   140003c10:	lea    rdx,[rip+0x131b9]        # 0x140016dd0
   140003c17:	xor    eax,eax
   140003c19:	mov    QWORD PTR [rsp+0x48],rdx
   140003c1e:	mov    rdi,rdx
   140003c21:	lea    rdx,[rsp+0x40]
   140003c26:	repnz scas al,BYTE PTR es:[rdi]
   140003c28:	not    rcx
   140003c2b:	dec    rcx
   140003c2e:	mov    DWORD PTR [rsp+0x40],ecx
   140003c32:	lea    rcx,[rsp+0x28]
   140003c37:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003c3c:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003c42:	call   QWORD PTR [rip+0x125c8]        # 0x140016210
   140003c48:	mov    rcx,QWORD PTR [rbp+0x0]
   140003c4c:	lea    r8,[rsp+0x20]
   140003c51:	lea    rdx,[rsp+0x28]
   140003c56:	call   0x140014b80
   140003c5b:	lea    rcx,[rsp+0x28]
   140003c60:	call   QWORD PTR [rip+0x12cd2]        # 0x140016938
   140003c66:	lea    rcx,[rsp+0x20]
   140003c6b:	call   QWORD PTR [rip+0x12cc7]        # 0x140016938
   140003c71:	cmp    BYTE PTR [rsp+0x88],0x0
   140003c79:	je     0x140003d19
   140003c7f:	or     rcx,0xffffffffffffffff
   140003c83:	mov    QWORD PTR [rsp+0x48],r12
   140003c88:	xor    eax,eax
   140003c8a:	mov    rdi,r12
   140003c8d:	lea    rdx,[rsp+0x40]
   140003c92:	repnz scas al,BYTE PTR es:[rdi]
   140003c94:	not    rcx
   140003c97:	dec    rcx
   140003c9a:	mov    DWORD PTR [rsp+0x40],ecx
   140003c9e:	lea    rcx,[rsp+0x20]
   140003ca3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003ca8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003cae:	call   QWORD PTR [rip+0x1255c]        # 0x140016210
   140003cb4:	or     rcx,0xffffffffffffffff
   140003cb8:	lea    rdx,[rip+0x13101]        # 0x140016dc0
   140003cbf:	xor    eax,eax
   140003cc1:	mov    QWORD PTR [rsp+0x48],rdx
   140003cc6:	mov    rdi,rdx
   140003cc9:	lea    rdx,[rsp+0x40]
   140003cce:	repnz scas al,BYTE PTR es:[rdi]
   140003cd0:	not    rcx
   140003cd3:	dec    rcx
   140003cd6:	mov    DWORD PTR [rsp+0x40],ecx
   140003cda:	lea    rcx,[rsp+0x28]
   140003cdf:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003ce4:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140003cea:	call   QWORD PTR [rip+0x12520]        # 0x140016210
   140003cf0:	mov    rcx,QWORD PTR [rbp+0x0]
   140003cf4:	lea    r8,[rsp+0x20]
   140003cf9:	lea    rdx,[rsp+0x28]
   140003cfe:	call   0x140014b80
   140003d03:	lea    rcx,[rsp+0x28]
   140003d08:	call   QWORD PTR [rip+0x12c2a]        # 0x140016938
   140003d0e:	lea    rcx,[rsp+0x20]
   140003d13:	call   QWORD PTR [rip+0x12c1f]        # 0x140016938
   140003d19:	mov    rcx,rsi
   140003d1c:	call   QWORD PTR [rip+0x12556]        # 0x140016278
   140003d22:	mov    rbx,QWORD PTR [rsp+0x70]
   140003d27:	mov    rbp,QWORD PTR [rsp+0x78]
   140003d2c:	add    rsp,0x50
   140003d30:	pop    r12
   140003d32:	pop    rdi
   140003d33:	pop    rsi
   140003d34:	ret    
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    QWORD PTR [rsp+0x10],rbx
   140003d45:	push   rdi
   140003d46:	sub    rsp,0x20
   140003d4a:	mov    rax,QWORD PTR [rcx]
   140003d4d:	mov    rdi,rdx
   140003d50:	mov    rbx,rcx
   140003d53:	mov    r8d,DWORD PTR [rax]
   140003d56:	cmp    r8d,0x1
   140003d5a:	je     0x140003d8d
   140003d5c:	test   r8d,r8d
   140003d5f:	je     0x140003d8d
   140003d61:	mov    edx,0x7fffffff
   140003d66:	mov    r8d,0x1
   140003d6c:	call   0x140002c00
   140003d71:	test   rax,rax
   140003d74:	je     0x140003da9
   140003d76:	mov    rdx,rdi
   140003d79:	mov    rcx,rax
   140003d7c:	mov    rbx,QWORD PTR [rsp+0x38]
   140003d81:	add    rsp,0x20
   140003d85:	pop    rdi
   140003d86:	rex.W jmp QWORD PTR [rip+0x127b3]        # 0x140016540
   140003d8d:	lea    rcx,[rsp+0x30]
   140003d92:	call   QWORD PTR [rip+0x127a8]        # 0x140016540
   140003d98:	mov    rcx,rbx
   140003d9b:	call   QWORD PTR [rip+0x125df]        # 0x140016380
   140003da1:	mov    rcx,QWORD PTR [rsp+0x30]
   140003da6:	mov    QWORD PTR [rax],rcx
   140003da9:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dae:	add    rsp,0x20
   140003db2:	pop    rdi
   140003db3:	ret    
   140003db4:	int3   
   140003db5:	int3   
   140003db6:	int3   
   140003db7:	int3   
   140003db8:	int3   
   140003db9:	int3   
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003dc5:	push   rdi
   140003dc6:	sub    rsp,0x20
   140003dca:	mov    rax,QWORD PTR [rdx]
   140003dcd:	mov    rdi,rdx
   140003dd0:	mov    rbx,rcx
   140003dd3:	mov    r8d,DWORD PTR [rax+0xc]
   140003dd7:	mov    edx,DWORD PTR [rax+0x8]
   140003dda:	cmp    r8d,edx
   140003ddd:	je     0x140003e52
   140003ddf:	mov    rcx,QWORD PTR [rcx]
   140003de2:	mov    eax,DWORD PTR [rcx+0x8]
   140003de5:	cmp    DWORD PTR [rcx+0xc],eax
   140003de8:	jne    0x140003e03
   140003dea:	mov    rdx,rdi
   140003ded:	mov    rcx,rbx
   140003df0:	call   0x140002990
   140003df5:	mov    rax,rbx
   140003df8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003dfd:	add    rsp,0x20
   140003e01:	pop    rdi
   140003e02:	ret    
   140003e03:	mov    eax,DWORD PTR [rcx]
   140003e05:	cmp    eax,0x1
   140003e08:	je     0x140003e20
   140003e0a:	test   eax,eax
   140003e0c:	je     0x140003e20
   140003e0e:	sub    r8d,edx
   140003e11:	mov    rcx,rbx
   140003e14:	mov    edx,0x7fffffff
   140003e19:	call   0x140002c00
   140003e1e:	jmp    0x140003e2c
   140003e20:	mov    rdx,rdi
   140003e23:	mov    rcx,rbx
   140003e26:	call   QWORD PTR [rip+0x1255c]        # 0x140016388
   140003e2c:	mov    rcx,QWORD PTR [rdi]
   140003e2f:	mov    rdx,QWORD PTR [rbx]
   140003e32:	mov    r11,rax
   140003e35:	movsxd rax,DWORD PTR [rcx+0x8]
   140003e39:	lea    r9,[rcx+rax*8+0x10]
   140003e3e:	movsxd rax,DWORD PTR [rdx+0xc]
   140003e42:	mov    rcx,rbx
   140003e45:	lea    r8,[rdx+rax*8+0x10]
   140003e4a:	mov    rdx,r11
   140003e4d:	call   0x140001330
   140003e52:	mov    rax,rbx
   140003e55:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e5a:	add    rsp,0x20
   140003e5e:	pop    rdi
   140003e5f:	ret    
   140003e60:	mov    QWORD PTR [rsp+0x20],rbx
   140003e65:	push   rsi
   140003e66:	sub    rsp,0x20
   140003e6a:	mov    rax,QWORD PTR [rcx]
   140003e6d:	mov    rbx,rdx
   140003e70:	mov    rsi,rcx
   140003e73:	cmp    DWORD PTR [rax+0x14],0x0
   140003e77:	jne    0x140003e86
   140003e79:	xor    eax,eax
   140003e7b:	mov    rbx,QWORD PTR [rsp+0x48]
   140003e80:	add    rsp,0x20
   140003e84:	pop    rsi
   140003e85:	ret    
   140003e86:	mov    eax,DWORD PTR [rax+0x10]
   140003e89:	mov    QWORD PTR [rsp+0x38],rdi
   140003e8e:	mov    QWORD PTR [rsp+0x40],r12
   140003e93:	cmp    eax,0x1
   140003e96:	je     0x140003ea1
   140003e98:	test   eax,eax
   140003e9a:	je     0x140003ea1
   140003e9c:	call   0x140002ae0
   140003ea1:	mov    r9,QWORD PTR [rsi]
   140003ea4:	xor    r8d,r8d
   140003ea7:	mov    ecx,DWORD PTR [r9+0x20]
   140003eab:	mov    r12d,DWORD PTR [r9+0x14]
   140003eaf:	test   ecx,ecx
   140003eb1:	je     0x140003ec4
   140003eb3:	mov    rax,QWORD PTR [rbx]
   140003eb6:	mov    r8,rax
   140003eb9:	shr    r8,0x1f
   140003ebd:	xor    r8d,DWORD PTR [r9+0x24]
   140003ec1:	xor    r8d,eax
   140003ec4:	test   ecx,ecx
   140003ec6:	je     0x140003efc
   140003ec8:	xor    edx,edx
   140003eca:	mov    eax,r8d
   140003ecd:	div    ecx
   140003ecf:	mov    rax,QWORD PTR [r9+0x8]
   140003ed3:	mov    rcx,QWORD PTR [rax+rdx*8]
   140003ed7:	lea    rdi,[rax+rdx*8]
   140003edb:	cmp    rcx,r9
   140003ede:	je     0x140003eff
   140003ee0:	cmp    r8d,DWORD PTR [rcx+0x8]
   140003ee4:	jne    0x140003eef
   140003ee6:	mov    rax,QWORD PTR [rcx+0x10]
   140003eea:	cmp    QWORD PTR [rbx],rax
   140003eed:	je     0x140003eff
   140003eef:	mov    rdi,rcx
   140003ef2:	mov    rcx,QWORD PTR [rcx]
   140003ef5:	cmp    rcx,r9
   140003ef8:	jne    0x140003ee0
   140003efa:	jmp    0x140003eff
   140003efc:	mov    rdi,rsi
   140003eff:	cmp    QWORD PTR [rdi],r9
   140003f02:	je     0x140003f52
   140003f04:	mov    QWORD PTR [rsp+0x30],rbp
   140003f09:	nop    DWORD PTR [rax+0x0]
   140003f10:	mov    rdx,QWORD PTR [rdi]
   140003f13:	mov    rcx,QWORD PTR [rsi]
   140003f16:	mov    rbx,QWORD PTR [rdx]
   140003f19:	cmp    rbx,rcx
   140003f1c:	je     0x140003f2d
   140003f1e:	mov    rax,QWORD PTR [rdx+0x10]
   140003f22:	cmp    QWORD PTR [rbx+0x10],rax
   140003f26:	jne    0x140003f2d
   140003f28:	mov    bpl,0x1
   140003f2b:	jmp    0x140003f30
   140003f2d:	xor    bpl,bpl
   140003f30:	call   QWORD PTR [rip+0x12382]        # 0x1400162b8
   140003f36:	mov    QWORD PTR [rdi],rbx
   140003f39:	mov    rcx,QWORD PTR [rsi]
   140003f3c:	dec    DWORD PTR [rcx+0x14]
   140003f3f:	test   bpl,bpl
   140003f42:	jne    0x140003f10
   140003f44:	mov    rcx,QWORD PTR [rsi]
   140003f47:	call   QWORD PTR [rip+0x12443]        # 0x140016390
   140003f4d:	mov    rbp,QWORD PTR [rsp+0x30]
   140003f52:	mov    rcx,QWORD PTR [rsi]
   140003f55:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f5a:	mov    rbx,QWORD PTR [rsp+0x48]
   140003f5f:	sub    r12d,DWORD PTR [rcx+0x14]
   140003f63:	mov    eax,r12d
   140003f66:	mov    r12,QWORD PTR [rsp+0x40]
   140003f6b:	add    rsp,0x20
   140003f6f:	pop    rsi
   140003f70:	ret    
   140003f71:	int3   
   140003f72:	int3   
   140003f73:	int3   
   140003f74:	int3   
   140003f75:	int3   
   140003f76:	int3   
   140003f77:	int3   
   140003f78:	int3   
   140003f79:	int3   
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    QWORD PTR [rsp+0x8],rbx
   140003f85:	mov    QWORD PTR [rsp+0x10],rbp
   140003f8a:	mov    QWORD PTR [rsp+0x18],rsi
   140003f8f:	mov    QWORD PTR [rsp+0x20],rdi
   140003f94:	push   r12
   140003f96:	sub    rsp,0x20
   140003f9a:	mov    rax,QWORD PTR [rcx]
   140003f9d:	mov    r12,r8
   140003fa0:	mov    rbp,rdx
   140003fa3:	mov    r9d,DWORD PTR [rax+0x10]
   140003fa7:	mov    rsi,rcx
   140003faa:	cmp    r9d,0x1
   140003fae:	je     0x140003fba
   140003fb0:	test   r9d,r9d
   140003fb3:	je     0x140003fba
   140003fb5:	call   0x140002ae0
   140003fba:	mov    r9,QWORD PTR [r12]
   140003fbe:	mov    r8,QWORD PTR [rsi]
   140003fc1:	mov    ecx,DWORD PTR [r8+0x20]
   140003fc5:	mov    rdi,r9
   140003fc8:	shr    rdi,0x1f
   140003fcc:	xor    edi,DWORD PTR [r8+0x24]
   140003fd0:	xor    edi,r9d
   140003fd3:	test   ecx,ecx
   140003fd5:	je     0x140004008
   140003fd7:	xor    edx,edx
   140003fd9:	mov    eax,edi
   140003fdb:	div    ecx
   140003fdd:	mov    rax,QWORD PTR [r8+0x8]
   140003fe1:	lea    rbx,[rax+rdx*8]
   140003fe5:	mov    rax,QWORD PTR [rax+rdx*8]
   140003fe9:	cmp    rax,r8
   140003fec:	je     0x14000400b
   140003fee:	xchg   ax,ax
   140003ff0:	cmp    edi,DWORD PTR [rax+0x8]
   140003ff3:	jne    0x140003ffb
   140003ff5:	cmp    r9,QWORD PTR [rax+0x10]
   140003ff9:	je     0x14000400b
   140003ffb:	mov    rbx,rax
   140003ffe:	mov    rax,QWORD PTR [rax]
   140004001:	cmp    rax,r8
   140004004:	jne    0x140003ff0
   140004006:	jmp    0x14000400b
   140004008:	mov    rbx,rsi
   14000400b:	mov    rax,QWORD PTR [rbx]
   14000400e:	cmp    rax,r8
   140004011:	jne    0x1400040c9
   140004017:	cmp    DWORD PTR [r8+0x14],ecx
   14000401b:	jl     0x140004081
   14000401d:	movsx  edx,WORD PTR [r8+0x1e]
   140004022:	mov    rcx,r8
   140004025:	inc    edx
   140004027:	call   QWORD PTR [rip+0x1236b]        # 0x140016398
   14000402d:	mov    r11,QWORD PTR [r12]
   140004031:	mov    r8,QWORD PTR [rsi]
   140004034:	mov    ecx,DWORD PTR [r8+0x20]
   140004038:	mov    r9,r11
   14000403b:	shr    r9,0x1f
   14000403f:	xor    r9d,DWORD PTR [r8+0x24]
   140004043:	xor    r9d,r11d
   140004046:	mov    edi,r9d
   140004049:	test   ecx,ecx
   14000404b:	je     0x14000407e
   14000404d:	xor    edx,edx
   14000404f:	mov    eax,r9d
   140004052:	div    ecx
   140004054:	mov    rax,QWORD PTR [r8+0x8]
   140004058:	lea    rbx,[rax+rdx*8]
   14000405c:	mov    rax,QWORD PTR [rax+rdx*8]
   140004060:	cmp    rax,r8
   140004063:	je     0x140004081
   140004065:	cmp    r9d,DWORD PTR [rax+0x8]
   140004069:	jne    0x140004071
   14000406b:	cmp    r11,QWORD PTR [rax+0x10]
   14000406f:	je     0x140004081
   140004071:	mov    rbx,rax
   140004074:	mov    rax,QWORD PTR [rax]
   140004077:	cmp    rax,r8
   14000407a:	jne    0x140004065
   14000407c:	jmp    0x140004081
   14000407e:	mov    rbx,rsi
   140004081:	mov    edx,0x8
   140004086:	mov    rcx,r8
   140004089:	call   QWORD PTR [rip+0x12221]        # 0x1400162b0
   14000408f:	mov    r11,rax
   140004092:	test   rax,rax
   140004095:	je     0x1400040b7
   140004097:	mov    rcx,QWORD PTR [rbx]
   14000409a:	mov    DWORD PTR [rax+0x8],edi
   14000409d:	mov    QWORD PTR [rbp+0x0],r11
   1400040a1:	mov    QWORD PTR [rax],rcx
   1400040a4:	mov    rcx,QWORD PTR [r12]
   1400040a8:	mov    QWORD PTR [rax+0x10],rcx
   1400040ac:	mov    QWORD PTR [rbx],rax
   1400040af:	mov    rax,QWORD PTR [rsi]
   1400040b2:	inc    DWORD PTR [rax+0x14]
   1400040b5:	jmp    0x1400040cd
   1400040b7:	xor    r11d,r11d
   1400040ba:	mov    QWORD PTR [rbx],r11
   1400040bd:	mov    rax,QWORD PTR [rsi]
   1400040c0:	mov    QWORD PTR [rbp+0x0],r11
   1400040c4:	inc    DWORD PTR [rax+0x14]
   1400040c7:	jmp    0x1400040cd
   1400040c9:	mov    QWORD PTR [rbp+0x0],rax
   1400040cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040d2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400040d7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400040dc:	mov    rax,rbp
   1400040df:	mov    rbp,QWORD PTR [rsp+0x38]
   1400040e4:	add    rsp,0x20
   1400040e8:	pop    r12
   1400040ea:	ret    
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400040f5:	push   rdi
   1400040f6:	sub    rsp,0x20
   1400040fa:	mov    rax,QWORD PTR [rcx]
   1400040fd:	mov    rdi,rdx
   140004100:	mov    rbx,rcx
   140004103:	mov    r8d,DWORD PTR [rax]
   140004106:	cmp    r8d,0x1
   14000410a:	je     0x14000413d
   14000410c:	test   r8d,r8d
   14000410f:	je     0x14000413d
   140004111:	mov    edx,0x7fffffff
   140004116:	mov    r8d,0x1
   14000411c:	call   0x140003450
   140004121:	test   rax,rax
   140004124:	je     0x140004159
   140004126:	mov    rdx,rdi
   140004129:	mov    rcx,rax
   14000412c:	mov    rbx,QWORD PTR [rsp+0x38]
   140004131:	add    rsp,0x20
   140004135:	pop    rdi
   140004136:	rex.W jmp QWORD PTR [rip+0x12153]        # 0x140016290
   14000413d:	lea    rcx,[rsp+0x30]
   140004142:	call   QWORD PTR [rip+0x12148]        # 0x140016290
   140004148:	mov    rcx,rbx
   14000414b:	call   QWORD PTR [rip+0x1222f]        # 0x140016380
   140004151:	mov    rcx,QWORD PTR [rsp+0x30]
   140004156:	mov    QWORD PTR [rax],rcx
   140004159:	mov    rbx,QWORD PTR [rsp+0x38]
   14000415e:	add    rsp,0x20
   140004162:	pop    rdi
   140004163:	ret    
   140004164:	int3   
   140004165:	int3   
   140004166:	int3   
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	rex push rdi
   140004172:	push   r13
   140004174:	push   r14
   140004176:	sub    rsp,0x30
   14000417a:	mov    rdi,QWORD PTR [rcx]
   14000417d:	mov    rax,QWORD PTR [rdx]
   140004180:	mov    r14,rdx
   140004183:	mov    r13,rcx
   140004186:	cmp    rdi,rax
   140004189:	je     0x140004285
   14000418f:	add    rdi,0x8
   140004193:	cmp    rdi,rax
   140004196:	je     0x140004285
   14000419c:	mov    QWORD PTR [rsp+0x58],rbx
   1400041a1:	mov    QWORD PTR [rsp+0x60],rbp
   1400041a6:	mov    QWORD PTR [rsp+0x28],rsi
   1400041ab:	mov    QWORD PTR [rsp+0x20],r12
   1400041b0:	lea    r12,[rdi+0x8]
   1400041b4:	lea    rcx,[rsp+0x50]
   1400041b9:	mov    rdx,rdi
   1400041bc:	mov    rsi,rdi
   1400041bf:	call   QWORD PTR [rip+0x1237b]        # 0x140016540
   1400041c5:	mov    rdx,QWORD PTR [r13+0x0]
   1400041c9:	lea    rcx,[rsp+0x50]
   1400041ce:	call   QWORD PTR [rip+0x1209c]        # 0x140016270
   1400041d4:	test   al,al
   1400041d6:	je     0x140004217
   1400041d8:	mov    rsi,QWORD PTR [r13+0x0]
   1400041dc:	mov    rbx,rdi
   1400041df:	cmp    rsi,rdi
   1400041e2:	je     0x140004206
   1400041e4:	mov    rbp,r12
   1400041e7:	sub    rbp,rdi
   1400041ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400041f0:	sub    rbx,0x8
   1400041f4:	mov    rdx,rbx
   1400041f7:	lea    rcx,[rbx+rbp*1]
   1400041fb:	call   QWORD PTR [rip+0x12007]        # 0x140016208
   140004201:	cmp    rbx,rsi
   140004204:	jne    0x1400041f0
   140004206:	mov    rcx,QWORD PTR [r13+0x0]
   14000420a:	lea    rdx,[rsp+0x50]
   14000420f:	call   QWORD PTR [rip+0x11ff3]        # 0x140016208
   140004215:	jmp    0x140004255
   140004217:	mov    rbx,rdi
   14000421a:	nop    WORD PTR [rax+rax*1+0x0]
   140004220:	sub    rbx,0x8
   140004224:	lea    rcx,[rsp+0x50]
   140004229:	mov    rdx,rbx
   14000422c:	call   QWORD PTR [rip+0x1203e]        # 0x140016270
   140004232:	test   al,al
   140004234:	je     0x140004247
   140004236:	mov    rdx,rbx
   140004239:	mov    rcx,rsi
   14000423c:	call   QWORD PTR [rip+0x11fc6]        # 0x140016208
   140004242:	mov    rsi,rbx
   140004245:	jmp    0x140004220
   140004247:	lea    rdx,[rsp+0x50]
   14000424c:	mov    rcx,rsi
   14000424f:	call   QWORD PTR [rip+0x11fb3]        # 0x140016208
   140004255:	lea    rcx,[rsp+0x50]
   14000425a:	call   QWORD PTR [rip+0x126d8]        # 0x140016938
   140004260:	add    rdi,0x8
   140004264:	add    r12,0x8
   140004268:	cmp    rdi,QWORD PTR [r14]
   14000426b:	jne    0x1400041b4
   140004271:	mov    r12,QWORD PTR [rsp+0x20]
   140004276:	mov    rsi,QWORD PTR [rsp+0x28]
   14000427b:	mov    rbp,QWORD PTR [rsp+0x60]
   140004280:	mov    rbx,QWORD PTR [rsp+0x58]
   140004285:	add    rsp,0x30
   140004289:	pop    r14
   14000428b:	pop    r13
   14000428d:	pop    rdi
   14000428e:	ret    
   14000428f:	int3   
   140004290:	mov    QWORD PTR [rsp+0x18],rbx
   140004295:	mov    QWORD PTR [rsp+0x20],r9
   14000429a:	mov    QWORD PTR [rsp+0x10],rdx
   14000429f:	mov    QWORD PTR [rsp+0x8],rcx
   1400042a4:	push   rbp
   1400042a5:	push   rsi
   1400042a6:	push   rdi
   1400042a7:	sub    rsp,0x40
   1400042ab:	mov    rcx,rdx
   1400042ae:	mov    rbx,r9
   1400042b1:	mov    rdi,r8
   1400042b4:	mov    rsi,rdx
   1400042b7:	call   QWORD PTR [rip+0x11f43]        # 0x140016200
   1400042bd:	mov    rcx,rdi
   1400042c0:	call   QWORD PTR [rip+0x120f2]        # 0x1400163b8
   1400042c6:	lea    rcx,[rsp+0x30]
   1400042cb:	or     r8d,0xffffffff
   1400042cf:	mov    rdx,rax
   1400042d2:	call   QWORD PTR [rip+0x12098]        # 0x140016370
   1400042d8:	mov    rdx,QWORD PTR [rbx]
   1400042db:	xor    ebp,ebp
   1400042dd:	mov    eax,ebp
   1400042df:	cmp    DWORD PTR [rdx+0x20],eax
   1400042e2:	je     0x1400042f2
   1400042e4:	mov    edx,DWORD PTR [rdx+0x24]
   1400042e7:	lea    rcx,[rsp+0x30]
   1400042ec:	call   QWORD PTR [rip+0x11fee]        # 0x1400162e0
   1400042f2:	lea    rdx,[rsp+0x30]
   1400042f7:	mov    r8d,eax
   1400042fa:	mov    rcx,rbx
   1400042fd:	call   0x140001e30
   140004302:	mov    rcx,QWORD PTR [rbx]
   140004305:	cmp    QWORD PTR [rax],rcx
   140004308:	lea    rcx,[rsp+0x30]
   14000430d:	sete   bl
   140004310:	call   QWORD PTR [rip+0x11f62]        # 0x140016278
   140004316:	test   bl,bl
   140004318:	je     0x1400043fa
   14000431e:	mov    rax,QWORD PTR [rdi+0x10]
   140004322:	mov    rbx,QWORD PTR [rsp+0x80]
   14000432a:	test   BYTE PTR [rax+0x30],0x1
   14000432e:	jne    0x140004392
   140004330:	test   rbx,rbx
   140004333:	je     0x140004392
   140004335:	mov    r8,QWORD PTR [rbx]
   140004338:	movsxd rax,DWORD PTR [r8+0x8]
   14000433c:	lea    rcx,[r8+rax*8+0x10]
   140004341:	movsxd rax,DWORD PTR [r8+0xc]
   140004345:	lea    rdx,[r8+rax*8+0x10]
   14000434a:	cmp    rcx,rdx
   14000434d:	je     0x140004365
   14000434f:	nop
   140004350:	cmp    QWORD PTR [rcx],rdi
   140004353:	je     0x140004360
   140004355:	add    rcx,0x8
   140004359:	cmp    rcx,rdx
   14000435c:	jne    0x140004350
   14000435e:	jmp    0x140004365
   140004360:	cmp    rcx,rdx
   140004363:	jne    0x140004392
   140004365:	mov    eax,DWORD PTR [r8]
   140004368:	cmp    eax,0x1
   14000436b:	je     0x140004386
   14000436d:	test   eax,eax
   14000436f:	je     0x140004386
   140004371:	mov    edx,0x7fffffff
   140004376:	mov    r8d,0x1
   14000437c:	mov    rcx,rbx
   14000437f:	call   0x140003180
   140004384:	jmp    0x14000438f
   140004386:	mov    rcx,rbx
   140004389:	call   QWORD PTR [rip+0x11ff1]        # 0x140016380
   14000438f:	mov    QWORD PTR [rax],rdi
   140004392:	mov    r8,QWORD PTR [rdi]
   140004395:	test   r8,r8
   140004398:	jne    0x1400043ba
   14000439a:	lea    rdx,[rip+0x12a57]        # 0x140016df8
   1400043a1:	mov    rcx,rsi
   1400043a4:	call   QWORD PTR [rip+0x12006]        # 0x1400163b0
   1400043aa:	mov    rax,rsi
   1400043ad:	mov    rbx,QWORD PTR [rsp+0x70]
   1400043b2:	add    rsp,0x40
   1400043b6:	pop    rdi
   1400043b7:	pop    rsi
   1400043b8:	pop    rbp
   1400043b9:	ret    
   1400043ba:	mov    r9,QWORD PTR [rsp+0x78]
   1400043bf:	mov    rcx,QWORD PTR [rsp+0x60]
   1400043c4:	lea    rdx,[rsp+0x78]
   1400043c9:	mov    QWORD PTR [rsp+0x20],rbx
   1400043ce:	call   0x140004290
   1400043d3:	mov    rcx,rsi
   1400043d6:	mov    rdx,rax
   1400043d9:	call   QWORD PTR [rip+0x11e29]        # 0x140016208
   1400043df:	lea    rcx,[rsp+0x78]
   1400043e4:	call   QWORD PTR [rip+0x1254e]        # 0x140016938
   1400043ea:	mov    rax,rsi
   1400043ed:	mov    rbx,QWORD PTR [rsp+0x70]
   1400043f2:	add    rsp,0x40
   1400043f6:	pop    rdi
   1400043f7:	pop    rsi
   1400043f8:	pop    rbp
   1400043f9:	ret    
   1400043fa:	mov    rcx,rdi
   1400043fd:	call   QWORD PTR [rip+0x11fb5]        # 0x1400163b8
   140004403:	lea    rcx,[rsp+0x78]
   140004408:	or     r8d,0xffffffff
   14000440c:	mov    rdx,rax
   14000440f:	call   QWORD PTR [rip+0x11f5b]        # 0x140016370
   140004415:	mov    r11,QWORD PTR [rip+0x18cc4]        # 0x14001d0e0
   14000441c:	cmp    DWORD PTR [r11+0x14],ebp
   140004420:	je     0x1400044cf
   140004426:	cmp    DWORD PTR [r11+0x20],ebp
   14000442a:	je     0x140004444
   14000442c:	mov    edx,DWORD PTR [r11+0x24]
   140004430:	lea    rcx,[rsp+0x78]
   140004435:	call   QWORD PTR [rip+0x11ea5]        # 0x1400162e0
   14000443b:	mov    r11,QWORD PTR [rip+0x18c9e]        # 0x14001d0e0
   140004442:	mov    ebp,eax
   140004444:	mov    ecx,DWORD PTR [r11+0x20]
   140004448:	test   ecx,ecx
   14000444a:	je     0x1400044ba
   14000444c:	xor    edx,edx
   14000444e:	mov    eax,ebp
   140004450:	div    ecx
   140004452:	mov    rcx,QWORD PTR [r11+0x8]
   140004456:	lea    rsi,[rcx+rdx*8]
   14000445a:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14000445e:	cmp    rcx,r11
   140004461:	je     0x1400044c1
   140004463:	cmp    ebp,DWORD PTR [rcx+0x8]
   140004466:	jne    0x1400044ad
   140004468:	mov    rax,QWORD PTR [rsp+0x78]
   14000446d:	add    rcx,0x10
   140004471:	movsxd rdx,DWORD PTR [rax+0x4]
   140004475:	mov    rax,QWORD PTR [rcx]
   140004478:	cmp    edx,DWORD PTR [rax+0x4]
   14000447b:	jne    0x1400044ad
   14000447d:	mov    rdi,rdx
   140004480:	call   QWORD PTR [rip+0x124ca]        # 0x140016950
   140004486:	lea    rcx,[rsp+0x78]
   14000448b:	mov    rbx,rax
   14000448e:	call   QWORD PTR [rip+0x124bc]        # 0x140016950
   140004494:	mov    r8,rdi
   140004497:	mov    rcx,rax
   14000449a:	mov    rdx,rbx
   14000449d:	call   0x14001507e
   1400044a2:	mov    r11,QWORD PTR [rip+0x18c37]        # 0x14001d0e0
   1400044a9:	test   eax,eax
   1400044ab:	je     0x1400044c1
   1400044ad:	mov    rsi,QWORD PTR [rsi]
   1400044b0:	mov    rcx,QWORD PTR [rsi]
   1400044b3:	cmp    rcx,r11
   1400044b6:	jne    0x140004463
   1400044b8:	jmp    0x1400044c1
   1400044ba:	lea    rsi,[rip+0x18c1f]        # 0x14001d0e0
   1400044c1:	mov    rdx,QWORD PTR [rsi]
   1400044c4:	cmp    rdx,r11
   1400044c7:	je     0x1400044cf
   1400044c9:	add    rdx,0x18
   1400044cd:	jmp    0x1400044d4
   1400044cf:	lea    rdx,[rsp+0x78]
   1400044d4:	lea    rcx,[rsp+0x30]
   1400044d9:	call   QWORD PTR [rip+0x11db1]        # 0x140016290
   1400044df:	mov    rbx,QWORD PTR [rsp+0x68]
   1400044e4:	lea    rdx,[rsp+0x30]
   1400044e9:	mov    rcx,rbx
   1400044ec:	call   QWORD PTR [rip+0x11eb6]        # 0x1400163a8
   1400044f2:	lea    rcx,[rsp+0x30]
   1400044f7:	call   QWORD PTR [rip+0x11d7b]        # 0x140016278
   1400044fd:	lea    rcx,[rsp+0x78]
   140004502:	call   QWORD PTR [rip+0x11d70]        # 0x140016278
   140004508:	mov    rax,rbx
   14000450b:	mov    rbx,QWORD PTR [rsp+0x70]
   140004510:	add    rsp,0x40
   140004514:	pop    rdi
   140004515:	pop    rsi
   140004516:	pop    rbp
   140004517:	ret    
   140004518:	int3   
   140004519:	int3   
   14000451a:	int3   
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    r11,rsp
   140004523:	mov    QWORD PTR [r11+0x10],rdx
   140004527:	mov    QWORD PTR [r11+0x8],rcx
   14000452b:	push   rbx
   14000452c:	push   rbp
   14000452d:	push   rsi
   14000452e:	push   rdi
   14000452f:	push   r14
   140004531:	sub    rsp,0xd0
   140004538:	mov    rbp,rcx
   14000453b:	mov    rsi,rdx
   14000453e:	lea    rdx,[rip+0x128c3]        # 0x140016e08
   140004545:	mov    rdi,rdx
   140004548:	mov    QWORD PTR [rsp+0x28],rdx
   14000454d:	xor    eax,eax
   14000454f:	or     r14,0xffffffffffffffff
   140004553:	lea    rdx,[r11-0x68]
   140004557:	mov    QWORD PTR [r11-0x40],r15
   14000455b:	mov    rcx,r14
   14000455e:	repnz scas al,BYTE PTR es:[rdi]
   140004560:	not    rcx
   140004563:	dec    rcx
   140004566:	mov    DWORD PTR [rsp+0x20],ecx
   14000456a:	lea    rcx,[r11+0x20]
   14000456e:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140004573:	movdqa XMMWORD PTR [r11-0x68],xmm0
   140004579:	call   QWORD PTR [rip+0x11c91]        # 0x140016210
   14000457f:	mov    rcx,QWORD PTR [rbp+0x0]
   140004583:	lea    rdx,[rsp+0x118]
   14000458b:	call   0x140014230
   140004590:	lea    rcx,[rsp+0x118]
   140004598:	call   QWORD PTR [rip+0x1239a]        # 0x140016938
   14000459e:	lea    rdx,[rip+0x125df]        # 0x140016b84
   1400045a5:	xor    eax,eax
   1400045a7:	mov    rdi,rdx
   1400045aa:	mov    QWORD PTR [rsp+0x28],rdx
   1400045af:	mov    rcx,r14
   1400045b2:	repnz scas al,BYTE PTR es:[rdi]
   1400045b4:	lea    rdx,[rsp+0x80]
   1400045bc:	not    rcx
   1400045bf:	dec    rcx
   1400045c2:	mov    DWORD PTR [rsp+0x20],ecx
   1400045c6:	lea    rcx,[rsp+0x38]
   1400045cb:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400045d0:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   1400045d9:	call   QWORD PTR [rip+0x11c31]        # 0x140016210
   1400045df:	mov    rcx,rsi
   1400045e2:	call   QWORD PTR [rip+0x11df0]        # 0x1400163d8
   1400045e8:	lea    rcx,[rsp+0x48]
   1400045ed:	mov    r8d,r14d
   1400045f0:	mov    rdx,rax
   1400045f3:	call   QWORD PTR [rip+0x1232f]        # 0x140016928
   1400045f9:	lea    rcx,[rsp+0x58]
   1400045fe:	mov    rdx,rax
   140004601:	call   0x140001000
   140004606:	mov    rcx,QWORD PTR [rbp+0x0]
   14000460a:	lea    rdx,[rsp+0x38]
   14000460f:	mov    r8,rax
   140004612:	call   0x140014b80
   140004617:	lea    rcx,[rsp+0x58]
   14000461c:	call   QWORD PTR [rip+0x12316]        # 0x140016938
   140004622:	lea    rcx,[rsp+0x48]
   140004627:	call   QWORD PTR [rip+0x1230b]        # 0x140016938
   14000462d:	lea    rcx,[rsp+0x38]
   140004632:	call   QWORD PTR [rip+0x12300]        # 0x140016938
   140004638:	mov    rdx,QWORD PTR [rip+0x11be1]        # 0x140016220
   14000463f:	mov    rcx,rsi
   140004642:	mov    QWORD PTR [rsp+0x110],rdx
   14000464a:	call   QWORD PTR [rip+0x11d80]        # 0x1400163d0
   140004650:	mov    rcx,QWORD PTR [rsp+0x110]
   140004658:	cmp    DWORD PTR [rcx+0x4],eax
   14000465b:	mov    r15d,eax
   14000465e:	jge    0x1400047d4
   140004664:	mov    edx,DWORD PTR [rcx]
   140004666:	cmp    edx,0x1
   140004669:	je     0x140004798
   14000466f:	test   edx,edx
   140004671:	je     0x140004798
   140004677:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000467b:	mov    QWORD PTR [rsp+0xc8],r12
   140004683:	mov    QWORD PTR [rsp+0xc0],r13
   14000468b:	lea    rbp,[rcx+rdx*8+0x10]
   140004690:	lea    rcx,[rsp+0x110]
   140004698:	mov    edx,eax
   14000469a:	call   QWORD PTR [rip+0x11c80]        # 0x140016320
   1400046a0:	mov    rcx,QWORD PTR [rsp+0x110]
   1400046a8:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400046ac:	mov    r12,rax
   1400046af:	lea    r13,[rcx+rdx*8+0x10]
   1400046b4:	movsxd rdx,DWORD PTR [rcx+0x8]
   1400046b8:	lea    rsi,[rcx+rdx*8+0x10]
   1400046bd:	cmp    rsi,r13
   1400046c0:	je     0x140004706
   1400046c2:	mov    ecx,0x10
   1400046c7:	call   0x140015090
   1400046cc:	mov    rbx,rax
   1400046cf:	test   rax,rax
   1400046d2:	je     0x1400046f4
   1400046d4:	mov    rdi,QWORD PTR [rbp+0x0]
   1400046d8:	mov    rcx,rax
   1400046db:	mov    rdx,rdi
   1400046de:	call   QWORD PTR [rip+0x11e5c]        # 0x140016540
   1400046e4:	lea    rdx,[rdi+0x8]
   1400046e8:	lea    rcx,[rbx+0x8]
   1400046ec:	call   QWORD PTR [rip+0x11e4e]        # 0x140016540
   1400046f2:	jmp    0x1400046f6
   1400046f4:	xor    ebx,ebx
   1400046f6:	mov    QWORD PTR [rsi],rbx
   1400046f9:	add    rsi,0x8
   1400046fd:	add    rbp,0x8
   140004701:	cmp    rsi,r13
   140004704:	jne    0x1400046c2
   140004706:	mov    eax,DWORD PTR [r12]
   14000470a:	mov    r13,QWORD PTR [rsp+0xc0]
   140004712:	test   eax,eax
   140004714:	je     0x140004736
   140004716:	cmp    eax,0xffffffff
   140004719:	je     0x1400047aa
   14000471f:	mov    eax,r14d
   140004722:	lock xadd DWORD PTR [r12],eax
   140004728:	add    eax,0xffffffff
   14000472b:	setne  al
   14000472e:	test   al,al
   140004730:	jne    0x1400047bc
   140004736:	movsxd rax,DWORD PTR [r12+0xc]
   14000473b:	lea    rbx,[r12+rax*8+0x10]
   140004740:	movsxd rax,DWORD PTR [r12+0x8]
   140004745:	lea    rsi,[r12+rax*8+0x10]
   14000474a:	cmp    rsi,rbx
   14000474d:	je     0x14000477d
   14000474f:	nop
   140004750:	mov    rdi,QWORD PTR [rbx-0x8]
   140004754:	sub    rbx,0x8
   140004758:	test   rdi,rdi
   14000475b:	je     0x140004778
   14000475d:	lea    rcx,[rdi+0x8]
   140004761:	call   QWORD PTR [rip+0x121d1]        # 0x140016938
   140004767:	mov    rcx,rdi
   14000476a:	call   QWORD PTR [rip+0x121c8]        # 0x140016938
   140004770:	mov    rcx,rdi
   140004773:	call   0x14001508a
   140004778:	cmp    rbx,rsi
   14000477b:	jne    0x140004750
   14000477d:	mov    rcx,r12
   140004780:	call   QWORD PTR [rip+0x11b22]        # 0x1400162a8
   140004786:	mov    rsi,QWORD PTR [rsp+0x108]
   14000478e:	mov    rbp,QWORD PTR [rsp+0x100]
   140004796:	jmp    0x1400047cc
   140004798:	lea    rcx,[rsp+0x110]
   1400047a0:	mov    edx,eax
   1400047a2:	call   QWORD PTR [rip+0x11bf8]        # 0x1400163a0
   1400047a8:	jmp    0x1400047d4
   1400047aa:	mov    rsi,QWORD PTR [rsp+0x108]
   1400047b2:	mov    rbp,QWORD PTR [rsp+0x100]
   1400047ba:	jmp    0x1400047cc
   1400047bc:	mov    rsi,QWORD PTR [rsp+0x108]
   1400047c4:	mov    rbp,QWORD PTR [rsp+0x100]
   1400047cc:	mov    r12,QWORD PTR [rsp+0xc8]
   1400047d4:	xor    ebx,ebx
   1400047d6:	test   r15d,r15d
   1400047d9:	jle    0x140004940
   1400047df:	nop
   1400047e0:	mov    edx,ebx
   1400047e2:	mov    rcx,rsi
   1400047e5:	call   QWORD PTR [rip+0x11bdd]        # 0x1400163c8
   1400047eb:	lea    rcx,[rsp+0x50]
   1400047f0:	mov    r8d,0xa
   1400047f6:	mov    edx,eax
   1400047f8:	call   QWORD PTR [rip+0x11af2]        # 0x1400162f0
   1400047fe:	mov    edx,ebx
   140004800:	mov    rcx,rsi
   140004803:	mov    rdi,rax
   140004806:	call   QWORD PTR [rip+0x11bb4]        # 0x1400163c0
   14000480c:	lea    rcx,[rsp+0x40]
   140004811:	mov    rdx,rax
   140004814:	mov    r8d,r14d
   140004817:	call   QWORD PTR [rip+0x1210b]        # 0x140016928
   14000481d:	lea    rcx,[rsp+0x60]
   140004822:	mov    rdx,rax
   140004825:	call   0x140001000
   14000482a:	lea    rcx,[rsp+0x20]
   14000482f:	mov    rdx,rax
   140004832:	call   QWORD PTR [rip+0x11d08]        # 0x140016540
   140004838:	lea    rcx,[rsp+0x28]
   14000483d:	mov    rdx,rdi
   140004840:	call   QWORD PTR [rip+0x11cfa]        # 0x140016540
   140004846:	mov    rdx,QWORD PTR [rsp+0x110]
   14000484e:	mov    eax,DWORD PTR [rdx]
   140004850:	cmp    eax,0x1
   140004853:	je     0x1400048af
   140004855:	test   eax,eax
   140004857:	je     0x1400048af
   140004859:	lea    rcx,[rsp+0x110]
   140004861:	mov    edx,0x7fffffff
   140004866:	mov    r8d,0x1
   14000486c:	call   0x1400032f0
   140004871:	mov    ecx,0x10
   140004876:	mov    rsi,rax
   140004879:	call   0x140015090
   14000487e:	mov    rdi,rax
   140004881:	test   rax,rax
   140004884:	je     0x1400048a8
   140004886:	lea    rdx,[rsp+0x20]
   14000488b:	mov    rcx,rax
   14000488e:	call   QWORD PTR [rip+0x11cac]        # 0x140016540
   140004894:	lea    rcx,[rdi+0x8]
   140004898:	lea    rdx,[rsp+0x28]
   14000489d:	call   QWORD PTR [rip+0x11c9d]        # 0x140016540
   1400048a3:	mov    QWORD PTR [rsi],rdi
   1400048a6:	jmp    0x1400048f6
   1400048a8:	xor    edi,edi
   1400048aa:	mov    QWORD PTR [rsi],rdi
   1400048ad:	jmp    0x1400048f6
   1400048af:	lea    rcx,[rsp+0x110]
   1400048b7:	call   QWORD PTR [rip+0x11ac3]        # 0x140016380
   1400048bd:	mov    ecx,0x10
   1400048c2:	mov    rsi,rax
   1400048c5:	call   0x140015090
   1400048ca:	mov    rdi,rax
   1400048cd:	test   rax,rax
   1400048d0:	je     0x1400048f1
   1400048d2:	lea    rdx,[rsp+0x20]
   1400048d7:	mov    rcx,rax
   1400048da:	call   QWORD PTR [rip+0x11c60]        # 0x140016540
   1400048e0:	lea    rcx,[rdi+0x8]
   1400048e4:	lea    rdx,[rsp+0x28]
   1400048e9:	call   QWORD PTR [rip+0x11c51]        # 0x140016540
   1400048ef:	jmp    0x1400048f3
   1400048f1:	xor    edi,edi
   1400048f3:	mov    QWORD PTR [rsi],rdi
   1400048f6:	lea    rcx,[rsp+0x28]
   1400048fb:	call   QWORD PTR [rip+0x12037]        # 0x140016938
   140004901:	lea    rcx,[rsp+0x20]
   140004906:	call   QWORD PTR [rip+0x1202c]        # 0x140016938
   14000490c:	lea    rcx,[rsp+0x60]
   140004911:	call   QWORD PTR [rip+0x12021]        # 0x140016938
   140004917:	lea    rcx,[rsp+0x40]
   14000491c:	call   QWORD PTR [rip+0x12016]        # 0x140016938
   140004922:	lea    rcx,[rsp+0x50]
   140004927:	call   QWORD PTR [rip+0x1200b]        # 0x140016938
   14000492d:	mov    rsi,QWORD PTR [rsp+0x108]
   140004935:	inc    ebx
   140004937:	cmp    ebx,r15d
   14000493a:	jl     0x1400047e0
   140004940:	lea    rdx,[rip+0x124b9]        # 0x140016e00
   140004947:	xor    eax,eax
   140004949:	mov    rcx,r14
   14000494c:	mov    rdi,rdx
   14000494f:	mov    QWORD PTR [rsp+0x78],rdx
   140004954:	lea    rdx,[rsp+0xa0]
   14000495c:	repnz scas al,BYTE PTR es:[rdi]
   14000495e:	not    rcx
   140004961:	dec    rcx
   140004964:	mov    DWORD PTR [rsp+0x70],ecx
   140004968:	lea    rcx,[rsp+0x30]
   14000496d:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140004972:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000497b:	call   QWORD PTR [rip+0x1188f]        # 0x140016210
   140004981:	mov    rcx,QWORD PTR [rbp+0x0]
   140004985:	lea    r8,[rsp+0x110]
   14000498d:	lea    rdx,[rsp+0x30]
   140004992:	call   0x1400148c0
   140004997:	lea    rcx,[rsp+0x30]
   14000499c:	call   QWORD PTR [rip+0x11f96]        # 0x140016938
   1400049a2:	mov    rcx,QWORD PTR [rbp+0x0]
   1400049a6:	call   0x140014320
   1400049ab:	mov    rsi,QWORD PTR [rsp+0x110]
   1400049b3:	mov    r15,QWORD PTR [rsp+0xb8]
   1400049bb:	mov    eax,DWORD PTR [rsi]
   1400049bd:	test   eax,eax
   1400049bf:	je     0x1400049de
   1400049c1:	cmp    eax,0xffffffff
   1400049c4:	je     0x140004a36
   1400049c6:	lock xadd DWORD PTR [rsi],r14d
   1400049cb:	add    r14d,0xffffffff
   1400049cf:	setne  al
   1400049d2:	test   al,al
   1400049d4:	jne    0x140004a36
   1400049d6:	mov    rsi,QWORD PTR [rsp+0x110]
   1400049de:	movsxd rax,DWORD PTR [rsi+0xc]
   1400049e2:	lea    rbx,[rsi+rax*8+0x10]
   1400049e7:	movsxd rax,DWORD PTR [rsi+0x8]
   1400049eb:	lea    rbp,[rsi+rax*8+0x10]
   1400049f0:	cmp    rbp,rbx
   1400049f3:	je     0x140004a2d
   1400049f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004a00:	mov    rdi,QWORD PTR [rbx-0x8]
   140004a04:	sub    rbx,0x8
   140004a08:	test   rdi,rdi
   140004a0b:	je     0x140004a28
   140004a0d:	lea    rcx,[rdi+0x8]
   140004a11:	call   QWORD PTR [rip+0x11f21]        # 0x140016938
   140004a17:	mov    rcx,rdi
   140004a1a:	call   QWORD PTR [rip+0x11f18]        # 0x140016938
   140004a20:	mov    rcx,rdi
   140004a23:	call   0x14001508a
   140004a28:	cmp    rbx,rbp
   140004a2b:	jne    0x140004a00
   140004a2d:	mov    rcx,rsi
   140004a30:	call   QWORD PTR [rip+0x11872]        # 0x1400162a8
   140004a36:	add    rsp,0xd0
   140004a3d:	pop    r14
   140004a3f:	pop    rdi
   140004a40:	pop    rsi
   140004a41:	pop    rbp
   140004a42:	pop    rbx
   140004a43:	ret    
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    DWORD PTR [rsp+0x20],r9d
   140004a55:	mov    DWORD PTR [rsp+0x18],r8d
   140004a5a:	push   rbx
   140004a5b:	push   rsi
   140004a5c:	sub    rsp,0x28
   140004a60:	mov    rax,QWORD PTR [rcx]
   140004a63:	mov    rbx,rcx
   140004a66:	mov    rsi,rdx
   140004a69:	mov    ecx,DWORD PTR [rax+0xc]
   140004a6c:	lea    r8,[rsp+0x58]
   140004a71:	lea    rdx,[rsp+0x50]
   140004a76:	sub    ecx,DWORD PTR [rax+0x8]
   140004a79:	call   QWORD PTR [rip+0x11961]        # 0x1400163e0
   140004a7f:	test   eax,eax
   140004a81:	js     0x140004ab6
   140004a83:	cmp    eax,0x1
   140004a86:	jle    0x140004aa2
   140004a88:	cmp    eax,0x2
   140004a8b:	jne    0x140004ab6
   140004a8d:	mov    rdx,rbx
   140004a90:	mov    rcx,rsi
   140004a93:	call   0x140002860
   140004a98:	mov    rax,rsi
   140004a9b:	add    rsp,0x28
   140004a9f:	pop    rsi
   140004aa0:	pop    rbx
   140004aa1:	ret    
   140004aa2:	mov    rax,QWORD PTR [rip+0x11777]        # 0x140016220
   140004aa9:	mov    QWORD PTR [rsi],rax
   140004aac:	mov    rax,rsi
   140004aaf:	add    rsp,0x28
   140004ab3:	pop    rsi
   140004ab4:	pop    rbx
   140004ab5:	ret    
   140004ab6:	mov    ecx,DWORD PTR [rsp+0x58]
   140004aba:	mov    rax,QWORD PTR [rip+0x1175f]        # 0x140016220
   140004ac1:	mov    QWORD PTR [rsp+0x48],rbp
   140004ac6:	mov    QWORD PTR [rsp+0x20],rdi
   140004acb:	mov    QWORD PTR [rsp+0x40],rax
   140004ad0:	test   ecx,ecx
   140004ad2:	jg     0x140004b47
   140004ad4:	lea    rdx,[rsp+0x40]
   140004ad9:	mov    rcx,rsi
   140004adc:	call   0x140002860
   140004ae1:	mov    rdi,QWORD PTR [rsp+0x40]
   140004ae6:	mov    eax,DWORD PTR [rdi]
   140004ae8:	test   eax,eax
   140004aea:	je     0x140004b09
   140004aec:	cmp    eax,0xffffffff
   140004aef:	je     0x140004c3b
   140004af5:	lock add DWORD PTR [rdi],0xffffffff
   140004af9:	setne  al
   140004afc:	test   al,al
   140004afe:	jne    0x140004c3b
   140004b04:	mov    rdi,QWORD PTR [rsp+0x40]
   140004b09:	movsxd rax,DWORD PTR [rdi+0xc]
   140004b0d:	lea    rbx,[rdi+rax*8+0x10]
   140004b12:	movsxd rax,DWORD PTR [rdi+0x8]
   140004b16:	lea    rbp,[rdi+rax*8+0x10]
   140004b1b:	cmp    rbp,rbx
   140004b1e:	je     0x140004c32
   140004b24:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004b30:	sub    rbx,0x8
   140004b34:	mov    rcx,rbx
   140004b37:	call   QWORD PTR [rip+0x11dfb]        # 0x140016938
   140004b3d:	cmp    rbx,rbp
   140004b40:	jne    0x140004b30
   140004b42:	jmp    0x140004c32
   140004b47:	cmp    DWORD PTR [rax+0x4],ecx
   140004b4a:	jge    0x140004b84
   140004b4c:	mov    edx,DWORD PTR [rax]
   140004b4e:	cmp    edx,0x1
   140004b51:	je     0x140004b6e
   140004b53:	test   edx,edx
   140004b55:	je     0x140004b6e
   140004b57:	mov    edx,ecx
   140004b59:	lea    rcx,[rsp+0x40]
   140004b5e:	call   0x140002d40
   140004b63:	mov    ecx,DWORD PTR [rsp+0x58]
   140004b67:	mov    rax,QWORD PTR [rsp+0x40]
   140004b6c:	jmp    0x140004b84
   140004b6e:	mov    edx,ecx
   140004b70:	lea    rcx,[rsp+0x40]
   140004b75:	call   QWORD PTR [rip+0x11825]        # 0x1400163a0
   140004b7b:	mov    ecx,DWORD PTR [rsp+0x58]
   140004b7f:	mov    rax,QWORD PTR [rsp+0x40]
   140004b84:	mov    DWORD PTR [rax+0xc],ecx
   140004b87:	mov    rax,QWORD PTR [rsp+0x40]
   140004b8c:	mov    r8,QWORD PTR [rbx]
   140004b8f:	movsxd rcx,DWORD PTR [rsp+0x58]
   140004b94:	movsxd rdx,DWORD PTR [r8+0x8]
   140004b98:	lea    rbp,[rax+rcx*8+0x10]
   140004b9d:	movsxd rcx,DWORD PTR [rsp+0x50]
   140004ba2:	add    rdx,rcx
   140004ba5:	movsxd rcx,DWORD PTR [rax+0x8]
   140004ba9:	lea    rbx,[rax+rcx*8+0x10]
   140004bae:	lea    rdi,[r8+rdx*8+0x10]
   140004bb3:	cmp    rbx,rbp
   140004bb6:	je     0x140004bd6
   140004bb8:	test   rbx,rbx
   140004bbb:	je     0x140004bc9
   140004bbd:	mov    rdx,rdi
   140004bc0:	mov    rcx,rbx
   140004bc3:	call   QWORD PTR [rip+0x11977]        # 0x140016540
   140004bc9:	add    rbx,0x8
   140004bcd:	add    rdi,0x8
   140004bd1:	cmp    rbx,rbp
   140004bd4:	jne    0x140004bb8
   140004bd6:	lea    rdx,[rsp+0x40]
   140004bdb:	mov    rcx,rsi
   140004bde:	call   0x140002860
   140004be3:	mov    rdi,QWORD PTR [rsp+0x40]
   140004be8:	mov    eax,DWORD PTR [rdi]
   140004bea:	test   eax,eax
   140004bec:	je     0x140004c03
   140004bee:	cmp    eax,0xffffffff
   140004bf1:	je     0x140004c3b
   140004bf3:	lock add DWORD PTR [rdi],0xffffffff
   140004bf7:	setne  al
   140004bfa:	test   al,al
   140004bfc:	jne    0x140004c3b
   140004bfe:	mov    rdi,QWORD PTR [rsp+0x40]
   140004c03:	movsxd rax,DWORD PTR [rdi+0xc]
   140004c07:	lea    rbx,[rdi+rax*8+0x10]
   140004c0c:	movsxd rax,DWORD PTR [rdi+0x8]
   140004c10:	lea    rbp,[rdi+rax*8+0x10]
   140004c15:	cmp    rbp,rbx
   140004c18:	je     0x140004c32
   140004c1a:	nop    WORD PTR [rax+rax*1+0x0]
   140004c20:	sub    rbx,0x8
   140004c24:	mov    rcx,rbx
   140004c27:	call   QWORD PTR [rip+0x11d0b]        # 0x140016938
   140004c2d:	cmp    rbx,rbp
   140004c30:	jne    0x140004c20
   140004c32:	mov    rcx,rdi
   140004c35:	call   QWORD PTR [rip+0x1166d]        # 0x1400162a8
   140004c3b:	mov    rbp,QWORD PTR [rsp+0x48]
   140004c40:	mov    rdi,QWORD PTR [rsp+0x20]
   140004c45:	mov    rax,rsi
   140004c48:	add    rsp,0x28
   140004c4c:	pop    rsi
   140004c4d:	pop    rbx
   140004c4e:	ret    
   140004c4f:	int3   
   140004c50:	mov    QWORD PTR [rsp+0x8],rbx
   140004c55:	mov    QWORD PTR [rsp+0x10],rbp
   140004c5a:	mov    QWORD PTR [rsp+0x18],rsi
   140004c5f:	push   rdi
   140004c60:	sub    rsp,0x20
   140004c64:	mov    rax,QWORD PTR [rcx]
   140004c67:	mov    rsi,rcx
   140004c6a:	mov    rbp,rdx
   140004c6d:	mov    ecx,DWORD PTR [rax+0x10]
   140004c70:	cmp    ecx,0x1
   140004c73:	je     0x140004c81
   140004c75:	test   ecx,ecx
   140004c77:	je     0x140004c81
   140004c79:	mov    rcx,rsi
   140004c7c:	call   0x140002e10
   140004c81:	mov    r8,QWORD PTR [rsi]
   140004c84:	mov    r9d,DWORD PTR [rbp+0x0]
   140004c88:	mov    edi,DWORD PTR [r8+0x24]
   140004c8c:	mov    ecx,DWORD PTR [r8+0x20]
   140004c90:	xor    edi,r9d
   140004c93:	test   ecx,ecx
   140004c95:	je     0x140004cc8
   140004c97:	xor    edx,edx
   140004c99:	mov    eax,edi
   140004c9b:	div    ecx
   140004c9d:	mov    rax,QWORD PTR [r8+0x8]
   140004ca1:	lea    rbx,[rax+rdx*8]
   140004ca5:	mov    rax,QWORD PTR [rax+rdx*8]
   140004ca9:	cmp    rax,r8
   140004cac:	je     0x140004ccb
   140004cae:	xchg   ax,ax
   140004cb0:	cmp    edi,DWORD PTR [rax+0x8]
   140004cb3:	jne    0x140004cbb
   140004cb5:	cmp    r9d,DWORD PTR [rax+0xc]
   140004cb9:	je     0x140004ccb
   140004cbb:	mov    rbx,rax
   140004cbe:	mov    rax,QWORD PTR [rax]
   140004cc1:	cmp    rax,r8
   140004cc4:	jne    0x140004cb0
   140004cc6:	jmp    0x140004ccb
   140004cc8:	mov    rbx,rsi
   140004ccb:	mov    rax,QWORD PTR [rbx]
   140004cce:	cmp    rax,r8
   140004cd1:	jne    0x140004d88
   140004cd7:	cmp    DWORD PTR [r8+0x14],ecx
   140004cdb:	jl     0x140004d3b
   140004cdd:	movsx  edx,WORD PTR [r8+0x1e]
   140004ce2:	mov    rcx,r8
   140004ce5:	inc    edx
   140004ce7:	call   QWORD PTR [rip+0x116ab]        # 0x140016398
   140004ced:	mov    r8,QWORD PTR [rsi]
   140004cf0:	mov    r9d,DWORD PTR [rbp+0x0]
   140004cf4:	mov    edi,DWORD PTR [r8+0x24]
   140004cf8:	mov    ecx,DWORD PTR [r8+0x20]
   140004cfc:	xor    edi,r9d
   140004cff:	test   ecx,ecx
   140004d01:	je     0x140004d38
   140004d03:	xor    edx,edx
   140004d05:	mov    eax,edi
   140004d07:	div    ecx
   140004d09:	mov    rax,QWORD PTR [r8+0x8]
   140004d0d:	lea    rbx,[rax+rdx*8]
   140004d11:	mov    rax,QWORD PTR [rax+rdx*8]
   140004d15:	cmp    rax,r8
   140004d18:	je     0x140004d3b
   140004d1a:	nop    WORD PTR [rax+rax*1+0x0]
   140004d20:	cmp    edi,DWORD PTR [rax+0x8]
   140004d23:	jne    0x140004d2b
   140004d25:	cmp    r9d,DWORD PTR [rax+0xc]
   140004d29:	je     0x140004d3b
   140004d2b:	mov    rbx,rax
   140004d2e:	mov    rax,QWORD PTR [rax]
   140004d31:	cmp    rax,r8
   140004d34:	jne    0x140004d20
   140004d36:	jmp    0x140004d3b
   140004d38:	mov    rbx,rsi
   140004d3b:	mov    edx,0x8
   140004d40:	mov    rcx,r8
   140004d43:	call   QWORD PTR [rip+0x11567]        # 0x1400162b0
   140004d49:	mov    r11,rax
   140004d4c:	test   rax,rax
   140004d4f:	je     0x140004d76
   140004d51:	mov    rcx,QWORD PTR [rbx]
   140004d54:	mov    DWORD PTR [rax+0x8],edi
   140004d57:	mov    QWORD PTR [rax],rcx
   140004d5a:	mov    ecx,DWORD PTR [rbp+0x0]
   140004d5d:	mov    DWORD PTR [rax+0x10],0x0
   140004d64:	mov    DWORD PTR [rax+0xc],ecx
   140004d67:	mov    QWORD PTR [rbx],rax
   140004d6a:	mov    rax,QWORD PTR [rsi]
   140004d6d:	inc    DWORD PTR [rax+0x14]
   140004d70:	lea    rax,[r11+0x10]
   140004d74:	jmp    0x140004d8c
   140004d76:	xor    r11d,r11d
   140004d79:	mov    QWORD PTR [rbx],r11
   140004d7c:	mov    rax,QWORD PTR [rsi]
   140004d7f:	inc    DWORD PTR [rax+0x14]
   140004d82:	lea    rax,[r11+0x10]
   140004d86:	jmp    0x140004d8c
   140004d88:	add    rax,0x10
   140004d8c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d91:	mov    rbp,QWORD PTR [rsp+0x38]
   140004d96:	mov    rsi,QWORD PTR [rsp+0x40]
   140004d9b:	add    rsp,0x20
   140004d9f:	pop    rdi
   140004da0:	ret    
   140004da1:	int3   
   140004da2:	int3   
   140004da3:	int3   
   140004da4:	int3   
   140004da5:	int3   
   140004da6:	int3   
   140004da7:	int3   
   140004da8:	int3   
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	mov    QWORD PTR [rsp+0x8],rbx
   140004db5:	mov    QWORD PTR [rsp+0x10],rbp
   140004dba:	mov    QWORD PTR [rsp+0x18],rsi
   140004dbf:	push   rdi
   140004dc0:	push   r12
   140004dc2:	push   r13
   140004dc4:	sub    rsp,0x30
   140004dc8:	mov    rax,QWORD PTR [rcx]
   140004dcb:	mov    rbx,rcx
   140004dce:	mov    rbp,r9
   140004dd1:	mov    ecx,DWORD PTR [rax+0x10]
   140004dd4:	mov    r12,r8
   140004dd7:	mov    rdi,rdx
   140004dda:	cmp    ecx,0x1
   140004ddd:	je     0x140004deb
   140004ddf:	test   ecx,ecx
   140004de1:	je     0x140004deb
   140004de3:	mov    rcx,rbx
   140004de6:	call   0x140002f30
   140004deb:	mov    rax,QWORD PTR [rbx]
   140004dee:	mov    rcx,r12
   140004df1:	mov    edx,DWORD PTR [rax+0x24]
   140004df4:	call   QWORD PTR [rip+0x114e6]        # 0x1400162e0
   140004dfa:	mov    rdx,r12
   140004dfd:	mov    rcx,rbx
   140004e00:	mov    r8d,eax
   140004e03:	mov    r13d,eax
   140004e06:	call   0x140001e30
   140004e0b:	mov    rcx,QWORD PTR [rbx]
   140004e0e:	mov    rsi,rax
   140004e11:	mov    rax,QWORD PTR [rax]
   140004e14:	cmp    rax,rcx
   140004e17:	jne    0x140004e6c
   140004e19:	mov    edx,DWORD PTR [rcx+0x20]
   140004e1c:	cmp    DWORD PTR [rcx+0x14],edx
   140004e1f:	jl     0x140004e51
   140004e21:	movsx  edx,WORD PTR [rcx+0x1e]
   140004e25:	inc    edx
   140004e27:	call   QWORD PTR [rip+0x1156b]        # 0x140016398
   140004e2d:	mov    r11,QWORD PTR [rbx]
   140004e30:	mov    rcx,r12
   140004e33:	mov    edx,DWORD PTR [r11+0x24]
   140004e37:	call   QWORD PTR [rip+0x114a3]        # 0x1400162e0
   140004e3d:	mov    rdx,r12
   140004e40:	mov    rcx,rbx
   140004e43:	mov    r8d,eax
   140004e46:	mov    r13d,eax
   140004e49:	call   0x140001e30
   140004e4e:	mov    rsi,rax
   140004e51:	mov    r9,rbp
   140004e54:	mov    r8,r12
   140004e57:	mov    edx,r13d
   140004e5a:	mov    rcx,rbx
   140004e5d:	mov    QWORD PTR [rsp+0x20],rsi
   140004e62:	call   0x140001c90
   140004e67:	mov    QWORD PTR [rdi],rax
   140004e6a:	jmp    0x140004e7f
   140004e6c:	lea    rcx,[rax+0x18]
   140004e70:	mov    rdx,rbp
   140004e73:	call   QWORD PTR [rip+0x114cf]        # 0x140016348
   140004e79:	mov    r11,QWORD PTR [rsi]
   140004e7c:	mov    QWORD PTR [rdi],r11
   140004e7f:	mov    rbx,QWORD PTR [rsp+0x50]
   140004e84:	mov    rbp,QWORD PTR [rsp+0x58]
   140004e89:	mov    rsi,QWORD PTR [rsp+0x60]
   140004e8e:	mov    rax,rdi
   140004e91:	add    rsp,0x30
   140004e95:	pop    r13
   140004e97:	pop    r12
   140004e99:	pop    rdi
   140004e9a:	ret    
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ea5:	mov    QWORD PTR [rsp+0x10],rbp
   140004eaa:	mov    QWORD PTR [rsp+0x18],rsi
   140004eaf:	mov    QWORD PTR [rsp+0x20],rdi
   140004eb4:	push   r12
   140004eb6:	sub    rsp,0x30
   140004eba:	mov    rax,QWORD PTR [rcx]
   140004ebd:	mov    rbp,r9
   140004ec0:	mov    r12,r8
   140004ec3:	mov    r10d,DWORD PTR [rax+0x10]
   140004ec7:	mov    rsi,rdx
   140004eca:	mov    rdi,rcx
   140004ecd:	cmp    r10d,0x1
   140004ed1:	je     0x140004edd
   140004ed3:	test   r10d,r10d
   140004ed6:	je     0x140004edd
   140004ed8:	call   0x140002fa0
   140004edd:	mov    r9,QWORD PTR [r12]
   140004ee1:	mov    r8,QWORD PTR [rdi]
   140004ee4:	mov    ecx,DWORD PTR [r8+0x20]
   140004ee8:	mov    r10,r9
   140004eeb:	shr    r10,0x1f
   140004eef:	xor    r10d,DWORD PTR [r8+0x24]
   140004ef3:	xor    r10d,r9d
   140004ef6:	test   ecx,ecx
   140004ef8:	je     0x140004f2b
   140004efa:	xor    edx,edx
   140004efc:	mov    eax,r10d
   140004eff:	div    ecx
   140004f01:	mov    rax,QWORD PTR [r8+0x8]
   140004f05:	lea    rbx,[rax+rdx*8]
   140004f09:	mov    rax,QWORD PTR [rax+rdx*8]
   140004f0d:	cmp    rax,r8
   140004f10:	je     0x140004f2e
   140004f12:	cmp    r10d,DWORD PTR [rax+0x8]
   140004f16:	jne    0x140004f1e
   140004f18:	cmp    r9,QWORD PTR [rax+0x10]
   140004f1c:	je     0x140004f2e
   140004f1e:	mov    rbx,rax
   140004f21:	mov    rax,QWORD PTR [rax]
   140004f24:	cmp    rax,r8
   140004f27:	jne    0x140004f12
   140004f29:	jmp    0x140004f2e
   140004f2b:	mov    rbx,rdi
   140004f2e:	mov    rcx,QWORD PTR [rbx]
   140004f31:	cmp    rcx,r8
   140004f34:	jne    0x140004fc7
   140004f3a:	mov    eax,DWORD PTR [r8+0x20]
   140004f3e:	cmp    DWORD PTR [r8+0x14],eax
   140004f42:	jl     0x140004fac
   140004f44:	movsx  edx,WORD PTR [r8+0x1e]
   140004f49:	mov    rcx,r8
   140004f4c:	inc    edx
   140004f4e:	call   QWORD PTR [rip+0x11444]        # 0x140016398
   140004f54:	mov    r11,QWORD PTR [r12]
   140004f58:	mov    r9,QWORD PTR [rdi]
   140004f5b:	mov    ecx,DWORD PTR [r9+0x20]
   140004f5f:	mov    r8,r11
   140004f62:	shr    r8,0x1f
   140004f66:	xor    r8d,DWORD PTR [r9+0x24]
   140004f6a:	xor    r8d,r11d
   140004f6d:	mov    r10d,r8d
   140004f70:	test   ecx,ecx
   140004f72:	je     0x140004fa9
   140004f74:	xor    edx,edx
   140004f76:	mov    eax,r8d
   140004f79:	div    ecx
   140004f7b:	mov    rax,QWORD PTR [r9+0x8]
   140004f7f:	lea    rbx,[rax+rdx*8]
   140004f83:	mov    rax,QWORD PTR [rax+rdx*8]
   140004f87:	cmp    rax,r9
   140004f8a:	je     0x140004fac
   140004f8c:	nop    DWORD PTR [rax+0x0]
   140004f90:	cmp    r8d,DWORD PTR [rax+0x8]
   140004f94:	jne    0x140004f9c
   140004f96:	cmp    r11,QWORD PTR [rax+0x10]
   140004f9a:	je     0x140004fac
   140004f9c:	mov    rbx,rax
   140004f9f:	mov    rax,QWORD PTR [rax]
   140004fa2:	cmp    rax,r9
   140004fa5:	jne    0x140004f90
   140004fa7:	jmp    0x140004fac
   140004fa9:	mov    rbx,rdi
   140004fac:	mov    r9,rbp
   140004faf:	mov    r8,r12
   140004fb2:	mov    edx,r10d
   140004fb5:	mov    rcx,rdi
   140004fb8:	mov    QWORD PTR [rsp+0x20],rbx
   140004fbd:	call   0x140001d20
   140004fc2:	mov    QWORD PTR [rsi],rax
   140004fc5:	jmp    0x140004fda
   140004fc7:	add    rcx,0x18
   140004fcb:	mov    rdx,rbp
   140004fce:	call   QWORD PTR [rip+0x11374]        # 0x140016348
   140004fd4:	mov    r11,QWORD PTR [rbx]
   140004fd7:	mov    QWORD PTR [rsi],r11
   140004fda:	mov    rbx,QWORD PTR [rsp+0x40]
   140004fdf:	mov    rbp,QWORD PTR [rsp+0x48]
   140004fe4:	mov    rdi,QWORD PTR [rsp+0x58]
   140004fe9:	mov    rax,rsi
   140004fec:	mov    rsi,QWORD PTR [rsp+0x50]
   140004ff1:	add    rsp,0x30
   140004ff5:	pop    r12
   140004ff7:	ret    
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	mov    QWORD PTR [rsp+0x10],rbp
   140005005:	mov    QWORD PTR [rsp+0x18],rsi
   14000500a:	mov    QWORD PTR [rsp+0x20],rdi
   14000500f:	push   r12
   140005011:	sub    rsp,0x20
   140005015:	mov    rax,QWORD PTR [rcx]
   140005018:	mov    rdi,rcx
   14000501b:	mov    rsi,rdx
   14000501e:	mov    ecx,DWORD PTR [rax+0x10]
   140005021:	cmp    ecx,0x1
   140005024:	je     0x140005032
   140005026:	test   ecx,ecx
   140005028:	je     0x140005032
   14000502a:	mov    rcx,rdi
   14000502d:	call   0x140003110
   140005032:	mov    rax,QWORD PTR [rdi]
   140005035:	mov    rcx,rsi
   140005038:	mov    edx,DWORD PTR [rax+0x24]
   14000503b:	call   QWORD PTR [rip+0x1129f]        # 0x1400162e0
   140005041:	mov    rdx,rsi
   140005044:	mov    rcx,rdi
   140005047:	mov    r8d,eax
   14000504a:	mov    r12d,eax
   14000504d:	call   0x140001e30
   140005052:	mov    rcx,QWORD PTR [rdi]
   140005055:	mov    rbp,rax
   140005058:	mov    rax,QWORD PTR [rax]
   14000505b:	cmp    rax,rcx
   14000505e:	jne    0x1400050ef
   140005064:	mov    edx,DWORD PTR [rcx+0x20]
   140005067:	mov    QWORD PTR [rsp+0x30],rbx
   14000506c:	cmp    DWORD PTR [rcx+0x14],edx
   14000506f:	jl     0x1400050a1
   140005071:	movsx  edx,WORD PTR [rcx+0x1e]
   140005075:	inc    edx
   140005077:	call   QWORD PTR [rip+0x1131b]        # 0x140016398
   14000507d:	mov    r11,QWORD PTR [rdi]
   140005080:	mov    rcx,rsi
   140005083:	mov    edx,DWORD PTR [r11+0x24]
   140005087:	call   QWORD PTR [rip+0x11253]        # 0x1400162e0
   14000508d:	mov    rdx,rsi
   140005090:	mov    rcx,rdi
   140005093:	mov    r8d,eax
   140005096:	mov    r12d,eax
   140005099:	call   0x140001e30
   14000509e:	mov    rbp,rax
   1400050a1:	mov    rcx,QWORD PTR [rdi]
   1400050a4:	mov    edx,0x8
   1400050a9:	call   QWORD PTR [rip+0x11201]        # 0x1400162b0
   1400050af:	mov    rbx,rax
   1400050b2:	test   rax,rax
   1400050b5:	je     0x1400050d8
   1400050b7:	mov    rcx,QWORD PTR [rbp+0x0]
   1400050bb:	mov    rdx,rsi
   1400050be:	mov    DWORD PTR [rax+0x8],r12d
   1400050c2:	mov    QWORD PTR [rax],rcx
   1400050c5:	lea    rcx,[rax+0x10]
   1400050c9:	call   QWORD PTR [rip+0x111c1]        # 0x140016290
   1400050cf:	mov    DWORD PTR [rbx+0x18],0x0
   1400050d6:	jmp    0x1400050da
   1400050d8:	xor    ebx,ebx
   1400050da:	mov    QWORD PTR [rbp+0x0],rbx
   1400050de:	mov    rax,QWORD PTR [rdi]
   1400050e1:	inc    DWORD PTR [rax+0x14]
   1400050e4:	lea    rax,[rbx+0x18]
   1400050e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050ed:	jmp    0x1400050f3
   1400050ef:	add    rax,0x18
   1400050f3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400050f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400050fd:	mov    rdi,QWORD PTR [rsp+0x48]
   140005102:	add    rsp,0x20
   140005106:	pop    r12
   140005108:	ret    
   140005109:	int3   
   14000510a:	int3   
   14000510b:	int3   
   14000510c:	int3   
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	mov    QWORD PTR [rsp+0x10],rbp
   140005115:	mov    QWORD PTR [rsp+0x18],rsi
   14000511a:	mov    QWORD PTR [rsp+0x20],rdi
   14000511f:	push   r12
   140005121:	sub    rsp,0x20
   140005125:	mov    rax,QWORD PTR [rcx]
   140005128:	mov    rdi,rcx
   14000512b:	mov    rsi,rdx
   14000512e:	mov    ecx,DWORD PTR [rax+0x10]
   140005131:	cmp    ecx,0x1
   140005134:	je     0x140005142
   140005136:	test   ecx,ecx
   140005138:	je     0x140005142
   14000513a:	mov    rcx,rdi
   14000513d:	call   0x140003280
   140005142:	mov    rax,QWORD PTR [rdi]
   140005145:	mov    rcx,rsi
   140005148:	mov    edx,DWORD PTR [rax+0x24]
   14000514b:	call   QWORD PTR [rip+0x11187]        # 0x1400162d8
   140005151:	mov    rdx,rsi
   140005154:	mov    rcx,rdi
   140005157:	mov    r8d,eax
   14000515a:	mov    r12d,eax
   14000515d:	call   0x140001f10
   140005162:	mov    rcx,QWORD PTR [rdi]
   140005165:	mov    rbp,rax
   140005168:	mov    rax,QWORD PTR [rax]
   14000516b:	cmp    rax,rcx
   14000516e:	jne    0x140005200
   140005174:	mov    edx,DWORD PTR [rcx+0x20]
   140005177:	mov    QWORD PTR [rsp+0x30],rbx
   14000517c:	cmp    DWORD PTR [rcx+0x14],edx
   14000517f:	jl     0x1400051b1
   140005181:	movsx  edx,WORD PTR [rcx+0x1e]
   140005185:	inc    edx
   140005187:	call   QWORD PTR [rip+0x1120b]        # 0x140016398
   14000518d:	mov    r11,QWORD PTR [rdi]
   140005190:	mov    rcx,rsi
   140005193:	mov    edx,DWORD PTR [r11+0x24]
   140005197:	call   QWORD PTR [rip+0x1113b]        # 0x1400162d8
   14000519d:	mov    rdx,rsi
   1400051a0:	mov    rcx,rdi
   1400051a3:	mov    r8d,eax
   1400051a6:	mov    r12d,eax
   1400051a9:	call   0x140001f10
   1400051ae:	mov    rbp,rax
   1400051b1:	mov    rcx,QWORD PTR [rdi]
   1400051b4:	mov    edx,0x8
   1400051b9:	call   QWORD PTR [rip+0x110f1]        # 0x1400162b0
   1400051bf:	mov    rbx,rax
   1400051c2:	test   rax,rax
   1400051c5:	je     0x1400051e9
   1400051c7:	mov    rcx,QWORD PTR [rbp+0x0]
   1400051cb:	mov    rdx,rsi
   1400051ce:	mov    DWORD PTR [rax+0x8],r12d
   1400051d2:	mov    QWORD PTR [rax],rcx
   1400051d5:	lea    rcx,[rax+0x10]
   1400051d9:	call   QWORD PTR [rip+0x11361]        # 0x140016540
   1400051df:	mov    QWORD PTR [rbx+0x18],0x0
   1400051e7:	jmp    0x1400051eb
   1400051e9:	xor    ebx,ebx
   1400051eb:	mov    QWORD PTR [rbp+0x0],rbx
   1400051ef:	mov    rax,QWORD PTR [rdi]
   1400051f2:	inc    DWORD PTR [rax+0x14]
   1400051f5:	lea    rax,[rbx+0x18]
   1400051f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051fe:	jmp    0x140005204
   140005200:	add    rax,0x18
   140005204:	mov    rbp,QWORD PTR [rsp+0x38]
   140005209:	mov    rsi,QWORD PTR [rsp+0x40]
   14000520e:	mov    rdi,QWORD PTR [rsp+0x48]
   140005213:	add    rsp,0x20
   140005217:	pop    r12
   140005219:	ret    
   14000521a:	int3   
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	mov    QWORD PTR [rsp+0x8],rbx
   140005225:	mov    QWORD PTR [rsp+0x10],rbp
   14000522a:	mov    QWORD PTR [rsp+0x18],rsi
   14000522f:	push   rdi
   140005230:	push   r12
   140005232:	push   r13
   140005234:	push   r14
   140005236:	push   r15
   140005238:	sub    rsp,0x30
   14000523c:	mov    rax,QWORD PTR [rcx]
   14000523f:	mov    rbp,rdx
   140005242:	mov    r15,r9
   140005245:	mov    edx,DWORD PTR [rax]
   140005247:	mov    r12,r8
   14000524a:	mov    r14,rcx
   14000524d:	cmp    edx,0x1
   140005250:	je     0x14000525b
   140005252:	test   edx,edx
   140005254:	je     0x14000525b
   140005256:	call   0x1400033d0
   14000525b:	mov    rax,QWORD PTR [r14]
   14000525e:	xor    esi,esi
   140005260:	mov    dil,0x1
   140005263:	mov    rbx,QWORD PTR [rax+0x10]
   140005267:	lea    r13,[rax+0x8]
   14000526b:	test   rbx,rbx
   14000526e:	je     0x1400052bf
   140005270:	lea    rcx,[rbx+0x18]
   140005274:	mov    rdx,r12
   140005277:	mov    r13,rbx
   14000527a:	call   QWORD PTR [rip+0x10ff0]        # 0x140016270
   140005280:	test   al,al
   140005282:	jne    0x140005290
   140005284:	mov    rsi,rbx
   140005287:	mov    rbx,QWORD PTR [rbx+0x8]
   14000528b:	mov    dil,0x1
   14000528e:	jmp    0x140005297
   140005290:	mov    rbx,QWORD PTR [rbx+0x10]
   140005294:	xor    dil,dil
   140005297:	test   rbx,rbx
   14000529a:	jne    0x140005270
   14000529c:	test   rsi,rsi
   14000529f:	je     0x1400052bf
   1400052a1:	lea    rdx,[rsi+0x18]
   1400052a5:	mov    rcx,r12
   1400052a8:	call   QWORD PTR [rip+0x10fc2]        # 0x140016270
   1400052ae:	test   al,al
   1400052b0:	jne    0x1400052bf
   1400052b2:	mov    rax,QWORD PTR [r15]
   1400052b5:	mov    QWORD PTR [rbp+0x0],rsi
   1400052b9:	mov    QWORD PTR [rsi+0x20],rax
   1400052bd:	jmp    0x140005301
   1400052bf:	mov    rcx,QWORD PTR [r14]
   1400052c2:	mov    edx,0x28
   1400052c7:	mov    r9,r13
   1400052ca:	lea    r8d,[rdx-0x20]
   1400052ce:	mov    BYTE PTR [rsp+0x20],dil
   1400052d3:	call   QWORD PTR [rip+0x10f87]        # 0x140016260
   1400052d9:	mov    rbx,rax
   1400052dc:	lea    rcx,[rax+0x18]
   1400052e0:	test   rcx,rcx
   1400052e3:	je     0x1400052ee
   1400052e5:	mov    rdx,r12
   1400052e8:	call   QWORD PTR [rip+0x11252]        # 0x140016540
   1400052ee:	lea    rdx,[rbx+0x20]
   1400052f2:	test   rdx,rdx
   1400052f5:	je     0x1400052fd
   1400052f7:	mov    rcx,QWORD PTR [r15]
   1400052fa:	mov    QWORD PTR [rdx],rcx
   1400052fd:	mov    QWORD PTR [rbp+0x0],rbx
   140005301:	mov    rbx,QWORD PTR [rsp+0x60]
   140005306:	mov    rsi,QWORD PTR [rsp+0x70]
   14000530b:	mov    rax,rbp
   14000530e:	mov    rbp,QWORD PTR [rsp+0x68]
   140005313:	add    rsp,0x30
   140005317:	pop    r15
   140005319:	pop    r14
   14000531b:	pop    r13
   14000531d:	pop    r12
   14000531f:	pop    rdi
   140005320:	ret    
   140005321:	int3   
   140005322:	int3   
   140005323:	int3   
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	int3   
   140005328:	int3   
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	rex push rbx
   140005332:	sub    rsp,0x20
   140005336:	mov    rax,QWORD PTR [rdx]
   140005339:	mov    rbx,rcx
   14000533c:	mov    QWORD PTR [rcx],rax
   14000533f:	mov    ecx,DWORD PTR [rax+0x10]
   140005342:	test   ecx,ecx
   140005344:	je     0x140005350
   140005346:	cmp    ecx,0xffffffff
   140005349:	je     0x140005350
   14000534b:	lock add DWORD PTR [rax+0x10],0x1
   140005350:	mov    rax,QWORD PTR [rbx]
   140005353:	test   BYTE PTR [rax+0x28],0x1
   140005357:	jne    0x14000536d
   140005359:	mov    eax,DWORD PTR [rax+0x10]
   14000535c:	cmp    eax,0x1
   14000535f:	je     0x14000536d
   140005361:	test   eax,eax
   140005363:	je     0x14000536d
   140005365:	mov    rcx,rbx
   140005368:	call   0x140002ae0
   14000536d:	mov    rax,rbx
   140005370:	add    rsp,0x20
   140005374:	pop    rbx
   140005375:	ret    
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	rex push rbx
   140005382:	sub    rsp,0x20
   140005386:	mov    rbx,rcx
   140005389:	mov    rcx,QWORD PTR [rcx+0x18]
   14000538d:	mov    eax,DWORD PTR [rcx+0x10]
   140005390:	test   eax,eax
   140005392:	je     0x1400053a5
   140005394:	cmp    eax,0xffffffff
   140005397:	je     0x1400053b6
   140005399:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000539e:	setne  al
   1400053a1:	test   al,al
   1400053a3:	jne    0x1400053b6
   1400053a5:	mov    rcx,QWORD PTR [rbx+0x18]
   1400053a9:	lea    rdx,[rip+0xe8b0]        # 0x140013c60
   1400053b0:	call   QWORD PTR [rip+0x10ee2]        # 0x140016298
   1400053b6:	lea    rcx,[rbx+0x10]
   1400053ba:	add    rsp,0x20
   1400053be:	pop    rbx
   1400053bf:	rex.W jmp QWORD PTR [rip+0x10eb2]        # 0x140016278
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	test   rdx,rdx
   1400053d3:	je     0x140005440
   1400053d5:	mov    QWORD PTR [rsp+0x8],rbx
   1400053da:	push   rdi
   1400053db:	sub    rsp,0x20
   1400053df:	mov    eax,DWORD PTR [rcx+0x8]
   1400053e2:	mov    rbx,rdx
   1400053e5:	mov    QWORD PTR [rdx],0x0
   1400053ec:	mov    DWORD PTR [rdx+0x8],eax
   1400053ef:	lea    rdx,[rcx+0x10]
   1400053f3:	mov    rdi,rcx
   1400053f6:	lea    rcx,[rbx+0x10]
   1400053fa:	call   QWORD PTR [rip+0x10e90]        # 0x140016290
   140005400:	mov    rax,QWORD PTR [rdi+0x18]
   140005404:	lea    rcx,[rbx+0x18]
   140005408:	mov    QWORD PTR [rcx],rax
   14000540b:	mov    edx,DWORD PTR [rax+0x10]
   14000540e:	test   edx,edx
   140005410:	je     0x14000541c
   140005412:	cmp    edx,0xffffffff
   140005415:	je     0x14000541c
   140005417:	lock add DWORD PTR [rax+0x10],0x1
   14000541c:	mov    rax,QWORD PTR [rcx]
   14000541f:	test   BYTE PTR [rax+0x28],0x1
   140005423:	jne    0x140005436
   140005425:	mov    eax,DWORD PTR [rax+0x10]
   140005428:	cmp    eax,0x1
   14000542b:	je     0x140005436
   14000542d:	test   eax,eax
   14000542f:	je     0x140005436
   140005431:	call   0x140002ae0
   140005436:	mov    rbx,QWORD PTR [rsp+0x30]
   14000543b:	add    rsp,0x20
   14000543f:	pop    rdi
   140005440:	repz ret 
   140005442:	int3   
   140005443:	int3   
   140005444:	int3   
   140005445:	int3   
   140005446:	int3   
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	mov    QWORD PTR [rsp+0x8],rbx
   140005455:	mov    QWORD PTR [rsp+0x10],rsi
   14000545a:	push   rdi
   14000545b:	sub    rsp,0x30
   14000545f:	xor    r9d,r9d
   140005462:	mov    rsi,rdx
   140005465:	mov    rdi,rcx
   140005468:	lea    edx,[r9+0x28]
   14000546c:	lea    r8d,[r9+0x8]
   140005470:	mov    rcx,rsi
   140005473:	mov    BYTE PTR [rsp+0x20],0x0
   140005478:	call   QWORD PTR [rip+0x10de2]        # 0x140016260
   14000547e:	lea    rcx,[rax+0x18]
   140005482:	mov    rbx,rax
   140005485:	test   rcx,rcx
   140005488:	je     0x140005494
   14000548a:	lea    rdx,[rdi+0x18]
   14000548e:	call   QWORD PTR [rip+0x110ac]        # 0x140016540
   140005494:	lea    rcx,[rbx+0x20]
   140005498:	test   rcx,rcx
   14000549b:	je     0x1400054a6
   14000549d:	lea    rdx,[rdi+0x20]
   1400054a1:	call   0x140005330
   1400054a6:	test   BYTE PTR [rdi],0x1
   1400054a9:	je     0x1400054b1
   1400054ab:	or     QWORD PTR [rbx],0x1
   1400054af:	jmp    0x1400054b5
   1400054b1:	and    QWORD PTR [rbx],0xfffffffffffffffe
   1400054b5:	mov    rcx,QWORD PTR [rdi+0x8]
   1400054b9:	test   rcx,rcx
   1400054bc:	je     0x1400054d3
   1400054be:	mov    rdx,rsi
   1400054c1:	call   0x140005450
   1400054c6:	mov    QWORD PTR [rbx+0x8],rax
   1400054ca:	and    QWORD PTR [rax],0x3
   1400054ce:	or     QWORD PTR [rax],rbx
   1400054d1:	jmp    0x1400054db
   1400054d3:	mov    QWORD PTR [rbx+0x8],0x0
   1400054db:	mov    rcx,QWORD PTR [rdi+0x10]
   1400054df:	test   rcx,rcx
   1400054e2:	je     0x14000550a
   1400054e4:	mov    rdx,rsi
   1400054e7:	call   0x140005450
   1400054ec:	mov    QWORD PTR [rbx+0x10],rax
   1400054f0:	and    QWORD PTR [rax],0x3
   1400054f4:	or     QWORD PTR [rax],rbx
   1400054f7:	mov    rax,rbx
   1400054fa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400054ff:	mov    rsi,QWORD PTR [rsp+0x48]
   140005504:	add    rsp,0x30
   140005508:	pop    rdi
   140005509:	ret    
   14000550a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000550f:	mov    QWORD PTR [rbx+0x10],0x0
   140005517:	mov    rax,rbx
   14000551a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000551f:	add    rsp,0x30
   140005523:	pop    rdi
   140005524:	ret    
   140005525:	int3   
   140005526:	int3   
   140005527:	int3   
   140005528:	int3   
   140005529:	int3   
   14000552a:	int3   
   14000552b:	int3   
   14000552c:	int3   
   14000552d:	int3   
   14000552e:	int3   
   14000552f:	int3   
   140005530:	test   rdx,rdx
   140005533:	je     0x1400055a0
   140005535:	mov    QWORD PTR [rsp+0x8],rbx
   14000553a:	push   rdi
   14000553b:	sub    rsp,0x20
   14000553f:	mov    eax,DWORD PTR [rcx+0x8]
   140005542:	mov    rbx,rdx
   140005545:	mov    QWORD PTR [rdx],0x0
   14000554c:	mov    DWORD PTR [rdx+0x8],eax
   14000554f:	lea    rdx,[rcx+0x10]
   140005553:	mov    rdi,rcx
   140005556:	lea    rcx,[rbx+0x10]
   14000555a:	call   QWORD PTR [rip+0x10d30]        # 0x140016290
   140005560:	mov    rax,QWORD PTR [rdi+0x18]
   140005564:	lea    rcx,[rbx+0x18]
   140005568:	mov    QWORD PTR [rcx],rax
   14000556b:	mov    edx,DWORD PTR [rax+0x10]
   14000556e:	test   edx,edx
   140005570:	je     0x14000557c
   140005572:	cmp    edx,0xffffffff
   140005575:	je     0x14000557c
   140005577:	lock add DWORD PTR [rax+0x10],0x1
   14000557c:	mov    rax,QWORD PTR [rcx]
   14000557f:	test   BYTE PTR [rax+0x28],0x1
   140005583:	jne    0x140005596
   140005585:	mov    eax,DWORD PTR [rax+0x10]
   140005588:	cmp    eax,0x1
   14000558b:	je     0x140005596
   14000558d:	test   eax,eax
   14000558f:	je     0x140005596
   140005591:	call   0x140002e10
   140005596:	mov    rbx,QWORD PTR [rsp+0x30]
   14000559b:	add    rsp,0x20
   14000559f:	pop    rdi
   1400055a0:	repz ret 
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	int3   
   1400055a5:	int3   
   1400055a6:	int3   
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	int3   
   1400055ad:	int3   
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	rex push rbp
   1400055b2:	push   rdi
   1400055b3:	push   r12
   1400055b5:	sub    rsp,0x30
   1400055b9:	mov    rdi,QWORD PTR [rcx]
   1400055bc:	mov    rax,QWORD PTR [rdx]
   1400055bf:	mov    rbp,rdx
   1400055c2:	sub    rax,rdi
   1400055c5:	mov    r12,rcx
   1400055c8:	sar    rax,0x3
   1400055cc:	cmp    eax,0x1
   1400055cf:	jle    0x140005670
   1400055d5:	mov    QWORD PTR [rsp+0x28],rbx
   1400055da:	mov    QWORD PTR [rsp+0x20],rsi
   1400055df:	nop
   1400055e0:	mov    rbx,QWORD PTR [rbp+0x0]
   1400055e4:	mov    rax,rbx
   1400055e7:	sub    rax,rdi
   1400055ea:	sar    rax,0x3
   1400055ee:	cmp    eax,0x1
   1400055f1:	jle    0x140005649
   1400055f3:	add    rbx,0xfffffffffffffff8
   1400055f7:	lea    rcx,[rsp+0x58]
   1400055fc:	mov    rdx,rbx
   1400055ff:	call   QWORD PTR [rip+0x10f3b]        # 0x140016540
   140005605:	mov    rdx,rdi
   140005608:	mov    rcx,rbx
   14000560b:	mov    rsi,rax
   14000560e:	call   QWORD PTR [rip+0x10bf4]        # 0x140016208
   140005614:	lea    rcx,[rsp+0x60]
   140005619:	mov    rdx,rsi
   14000561c:	mov    QWORD PTR [rsp+0x50],rdi
   140005621:	call   QWORD PTR [rip+0x10f19]        # 0x140016540
   140005627:	sub    rbx,rdi
   14000562a:	lea    rcx,[rsp+0x50]
   14000562f:	sar    rbx,0x3
   140005633:	xor    edx,edx
   140005635:	mov    r9,rax
   140005638:	movsxd r8,ebx
   14000563b:	call   0x140002490
   140005640:	mov    rcx,rsi
   140005643:	call   QWORD PTR [rip+0x112ef]        # 0x140016938
   140005649:	add    QWORD PTR [rbp+0x0],0xfffffffffffffff8
   14000564e:	mov    rdi,QWORD PTR [r12]
   140005652:	mov    rax,QWORD PTR [rbp+0x0]
   140005656:	sub    rax,rdi
   140005659:	sar    rax,0x3
   14000565d:	cmp    eax,0x1
   140005660:	jg     0x1400055e0
   140005666:	mov    rsi,QWORD PTR [rsp+0x20]
   14000566b:	mov    rbx,QWORD PTR [rsp+0x28]
   140005670:	add    rsp,0x30
   140005674:	pop    r12
   140005676:	pop    rdi
   140005677:	pop    rbp
   140005678:	ret    
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	test   rcx,rcx
   140005683:	je     0x14000573c
   140005689:	mov    QWORD PTR [rsp+0x10],rbx
   14000568e:	mov    QWORD PTR [rsp+0x8],rcx
   140005693:	push   rdi
   140005694:	sub    rsp,0x30
   140005698:	mov    rdi,rdx
   14000569b:	mov    rbx,rcx
   14000569e:	xchg   ax,ax
   1400056a0:	mov    r10,QWORD PTR [rdi]
   1400056a3:	xor    r9d,r9d
   1400056a6:	mov    ecx,DWORD PTR [r10+0x20]
   1400056aa:	test   ecx,ecx
   1400056ac:	je     0x1400056f0
   1400056ae:	mov    r9,rbx
   1400056b1:	shr    r9,0x1f
   1400056b5:	xor    r9d,DWORD PTR [r10+0x24]
   1400056b9:	xor    r9d,ebx
   1400056bc:	test   ecx,ecx
   1400056be:	je     0x1400056f0
   1400056c0:	xor    edx,edx
   1400056c2:	mov    eax,r9d
   1400056c5:	div    ecx
   1400056c7:	mov    rax,QWORD PTR [r10+0x8]
   1400056cb:	lea    rdx,[rax+rdx*8]
   1400056cf:	mov    rax,QWORD PTR [rdx]
   1400056d2:	cmp    rax,r10
   1400056d5:	je     0x1400056f3
   1400056d7:	cmp    r9d,DWORD PTR [rax+0x8]
   1400056db:	jne    0x1400056e3
   1400056dd:	cmp    rbx,QWORD PTR [rax+0x10]
   1400056e1:	je     0x1400056f3
   1400056e3:	mov    rdx,rax
   1400056e6:	mov    rax,QWORD PTR [rax]
   1400056e9:	cmp    rax,r10
   1400056ec:	jne    0x1400056d7
   1400056ee:	jmp    0x1400056f3
   1400056f0:	mov    rdx,rdi
   1400056f3:	cmp    QWORD PTR [rdx],r10
   1400056f6:	jne    0x140005732
   1400056f8:	test   r8b,r8b
   1400056fb:	jne    0x140005707
   1400056fd:	mov    rax,QWORD PTR [rbx+0x10]
   140005701:	test   BYTE PTR [rax+0x30],0x1
   140005705:	jne    0x14000571e
   140005707:	lea    r9,[rsp+0x58]
   14000570c:	lea    r8,[rsp+0x40]
   140005711:	lea    rdx,[rsp+0x20]
   140005716:	mov    rcx,rdi
   140005719:	call   0x140003f80
   14000571e:	mov    rbx,QWORD PTR [rbx]
   140005721:	xor    r8b,r8b
   140005724:	mov    QWORD PTR [rsp+0x40],rbx
   140005729:	test   rbx,rbx
   14000572c:	jne    0x1400056a0
   140005732:	mov    rbx,QWORD PTR [rsp+0x48]
   140005737:	add    rsp,0x30
   14000573b:	pop    rdi
   14000573c:	repz ret 
   14000573e:	int3   
   14000573f:	int3   
   140005740:	test   rcx,rcx
   140005743:	je     0x140005b8d
   140005749:	mov    rax,rsp
   14000574c:	mov    QWORD PTR [rax+0x8],rcx
   140005750:	push   rbp
   140005751:	sub    rsp,0x90
   140005758:	mov    QWORD PTR [rax+0x10],rbx
   14000575c:	mov    QWORD PTR [rax-0x10],rsi
   140005760:	mov    QWORD PTR [rax-0x18],rdi
   140005764:	mov    rax,QWORD PTR [rcx]
   140005767:	mov    rbp,rdx
   14000576a:	call   QWORD PTR [rax]
   14000576c:	cmp    BYTE PTR [rip+0x1794d],0x0        # 0x14001d0c0
   140005773:	mov    rbx,rax
   140005776:	je     0x140005822
   14000577c:	mov    rcx,rax
   14000577f:	call   QWORD PTR [rip+0x10c33]        # 0x1400163b8
   140005785:	mov    r11,rax
   140005788:	test   rax,rax
   14000578b:	je     0x1400057a0
   14000578d:	or     rcx,0xffffffffffffffff
   140005791:	xor    eax,eax
   140005793:	mov    rdi,r11
   140005796:	repnz scas al,BYTE PTR es:[rdi]
   140005798:	not    rcx
   14000579b:	dec    rcx
   14000579e:	jmp    0x1400057a3
   1400057a0:	or     ecx,0xffffffff
   1400057a3:	mov    edx,ecx
   1400057a5:	mov    rcx,r11
   1400057a8:	call   QWORD PTR [rip+0x11122]        # 0x1400168d0
   1400057ae:	lea    rdx,[rsp+0xb8]
   1400057b6:	lea    rcx,[rsp+0xb0]
   1400057be:	mov    QWORD PTR [rsp+0xb0],rax
   1400057c6:	call   QWORD PTR [rip+0x10af4]        # 0x1400162c0
   1400057cc:	mov    rcx,rax
   1400057cf:	call   QWORD PTR [rip+0x1117b]        # 0x140016950
   1400057d5:	mov    rcx,QWORD PTR [rip+0x1087c]        # 0x140016058
   1400057dc:	lea    rdx,[rip+0x1164d]        # 0x140016e30
   1400057e3:	mov    rdi,rax
   1400057e6:	call   0x1400016a0
   1400057eb:	mov    rdx,rdi
   1400057ee:	mov    rcx,rax
   1400057f1:	call   0x1400016a0
   1400057f6:	mov    rdx,QWORD PTR [rip+0x10863]        # 0x140016060
   1400057fd:	mov    rcx,rax
   140005800:	call   QWORD PTR [rip+0x10862]        # 0x140016068
   140005806:	lea    rcx,[rsp+0xb8]
   14000580e:	call   QWORD PTR [rip+0x10a64]        # 0x140016278
   140005814:	lea    rcx,[rsp+0xb0]
   14000581c:	call   QWORD PTR [rip+0x11116]        # 0x140016938
   140005822:	mov    QWORD PTR [rsp+0xb8],rbx
   14000582a:	test   rbx,rbx
   14000582d:	je     0x1400058c0
   140005833:	mov    r8,QWORD PTR [rbp+0x0]
   140005837:	xor    edi,edi
   140005839:	mov    ecx,DWORD PTR [r8+0x20]
   14000583d:	test   ecx,ecx
   14000583f:	je     0x14000584e
   140005841:	mov    rdi,rbx
   140005844:	shr    rdi,0x1f
   140005848:	xor    edi,DWORD PTR [r8+0x24]
   14000584c:	xor    edi,ebx
   14000584e:	test   ecx,ecx
   140005850:	je     0x140005880
   140005852:	xor    edx,edx
   140005854:	mov    eax,edi
   140005856:	div    ecx
   140005858:	mov    rax,QWORD PTR [r8+0x8]
   14000585c:	lea    rdx,[rax+rdx*8]
   140005860:	mov    rax,QWORD PTR [rdx]
   140005863:	cmp    rax,r8
   140005866:	je     0x140005883
   140005868:	cmp    edi,DWORD PTR [rax+0x8]
   14000586b:	jne    0x140005873
   14000586d:	cmp    rbx,QWORD PTR [rax+0x10]
   140005871:	je     0x140005883
   140005873:	mov    rdx,rax
   140005876:	mov    rax,QWORD PTR [rax]
   140005879:	cmp    rax,r8
   14000587c:	jne    0x140005868
   14000587e:	jmp    0x140005883
   140005880:	mov    rdx,rbp
   140005883:	cmp    QWORD PTR [rdx],r8
   140005886:	jne    0x1400058c0
   140005888:	mov    rax,QWORD PTR [rbx+0x10]
   14000588c:	test   BYTE PTR [rax+0x30],0x1
   140005890:	jne    0x1400058b2
   140005892:	lea    r9,[rsp+0xb0]
   14000589a:	lea    r8,[rsp+0xb8]
   1400058a2:	lea    rdx,[rsp+0xb0]
   1400058aa:	mov    rcx,rbp
   1400058ad:	call   0x140003f80
   1400058b2:	mov    rcx,QWORD PTR [rbx]
   1400058b5:	xor    r8d,r8d
   1400058b8:	mov    rdx,rbp
   1400058bb:	call   0x140005680
   1400058c0:	mov    rcx,rbx
   1400058c3:	xor    esi,esi
   1400058c5:	call   QWORD PTR [rip+0x10b55]        # 0x140016420
   1400058cb:	test   eax,eax
   1400058cd:	jle    0x140005b6d
   1400058d3:	lea    rdx,[rsp+0x58]
   1400058d8:	mov    r8d,esi
   1400058db:	mov    rcx,rbx
   1400058de:	call   QWORD PTR [rip+0x10b34]        # 0x140016418
   1400058e4:	lea    rcx,[rsp+0x58]
   1400058e9:	call   QWORD PTR [rip+0x10b21]        # 0x140016410
   1400058ef:	mov    ecx,eax
   1400058f1:	call   QWORD PTR [rip+0x11191]        # 0x140016a88
   1400058f7:	test   al,al
   1400058f9:	je     0x140005b5a
   1400058ff:	cmp    BYTE PTR [rip+0x177ba],0x0        # 0x14001d0c0
   140005906:	je     0x1400059ae
   14000590c:	lea    rcx,[rsp+0x58]
   140005911:	call   QWORD PTR [rip+0x10af1]        # 0x140016408
   140005917:	mov    r11,rax
   14000591a:	test   rax,rax
   14000591d:	je     0x140005932
   14000591f:	or     rcx,0xffffffffffffffff
   140005923:	xor    eax,eax
   140005925:	mov    rdi,r11
   140005928:	repnz scas al,BYTE PTR es:[rdi]
   14000592a:	not    rcx
   14000592d:	dec    rcx
   140005930:	jmp    0x140005935
   140005932:	or     ecx,0xffffffff
   140005935:	mov    edx,ecx
   140005937:	mov    rcx,r11
   14000593a:	call   QWORD PTR [rip+0x10f90]        # 0x1400168d0
   140005940:	lea    rdx,[rsp+0x30]
   140005945:	lea    rcx,[rsp+0xb0]
   14000594d:	mov    QWORD PTR [rsp+0xb0],rax
   140005955:	call   QWORD PTR [rip+0x10965]        # 0x1400162c0
   14000595b:	mov    rcx,rax
   14000595e:	call   QWORD PTR [rip+0x10fec]        # 0x140016950
   140005964:	mov    rcx,QWORD PTR [rip+0x106ed]        # 0x140016058
   14000596b:	lea    rdx,[rip+0x114a6]        # 0x140016e18
   140005972:	mov    rdi,rax
   140005975:	call   0x1400016a0
   14000597a:	mov    rdx,rdi
   14000597d:	mov    rcx,rax
   140005980:	call   0x1400016a0
   140005985:	mov    rdx,QWORD PTR [rip+0x106d4]        # 0x140016060
   14000598c:	mov    rcx,rax
   14000598f:	call   QWORD PTR [rip+0x106d3]        # 0x140016068
   140005995:	lea    rcx,[rsp+0x30]
   14000599a:	call   QWORD PTR [rip+0x108d8]        # 0x140016278
   1400059a0:	lea    rcx,[rsp+0xb0]
   1400059a8:	call   QWORD PTR [rip+0x10f8a]        # 0x140016938
   1400059ae:	lea    rcx,[rsp+0x58]
   1400059b3:	call   QWORD PTR [rip+0x10a4f]        # 0x140016408
   1400059b9:	mov    r11,rax
   1400059bc:	test   rax,rax
   1400059bf:	je     0x1400059d4
   1400059c1:	or     rcx,0xffffffffffffffff
   1400059c5:	xor    eax,eax
   1400059c7:	mov    rdi,r11
   1400059ca:	repnz scas al,BYTE PTR es:[rdi]
   1400059cc:	not    rcx
   1400059cf:	dec    rcx
   1400059d2:	jmp    0x1400059d7
   1400059d4:	or     ecx,0xffffffff
   1400059d7:	mov    edx,ecx
   1400059d9:	mov    rcx,r11
   1400059dc:	call   QWORD PTR [rip+0x10eee]        # 0x1400168d0
   1400059e2:	mov    rcx,rbx
   1400059e5:	mov    QWORD PTR [rsp+0x28],rax
   1400059ea:	call   QWORD PTR [rip+0x109c8]        # 0x1400163b8
   1400059f0:	mov    r11,rax
   1400059f3:	test   rax,rax
   1400059f6:	je     0x140005a0b
   1400059f8:	or     rcx,0xffffffffffffffff
   1400059fc:	xor    eax,eax
   1400059fe:	mov    rdi,r11
   140005a01:	repnz scas al,BYTE PTR es:[rdi]
   140005a03:	not    rcx
   140005a06:	dec    rcx
   140005a09:	jmp    0x140005a0e
   140005a0b:	or     ecx,0xffffffff
   140005a0e:	mov    edx,ecx
   140005a10:	mov    rcx,r11
   140005a13:	call   QWORD PTR [rip+0x10eb7]        # 0x1400168d0
   140005a19:	or     rcx,0xffffffffffffffff
   140005a1d:	lea    rdi,[rip+0x113ec]        # 0x140016e10
   140005a24:	mov    QWORD PTR [rsp+0x20],rax
   140005a29:	xor    eax,eax
   140005a2b:	repnz scas al,BYTE PTR es:[rdi]
   140005a2d:	not    rcx
   140005a30:	lea    rdx,[rcx-0x1]
   140005a34:	lea    rcx,[rip+0x113d5]        # 0x140016e10
   140005a3b:	call   QWORD PTR [rip+0x10e8f]        # 0x1400168d0
   140005a41:	lea    r9,[rsp+0x28]
   140005a46:	lea    r8,[rsp+0x20]
   140005a4b:	lea    rdx,[rsp+0x38]
   140005a50:	lea    rcx,[rsp+0xb8]
   140005a58:	mov    QWORD PTR [rsp+0xb8],rax
   140005a60:	call   QWORD PTR [rip+0x1099a]        # 0x140016400
   140005a66:	lea    rcx,[rip+0x1765b]        # 0x14001d0c8
   140005a6d:	mov    rdx,rax
   140005a70:	call   QWORD PTR [rip+0x10792]        # 0x140016208
   140005a76:	lea    rcx,[rsp+0x38]
   140005a7b:	call   QWORD PTR [rip+0x10eb7]        # 0x140016938
   140005a81:	lea    rcx,[rsp+0xb8]
   140005a89:	call   QWORD PTR [rip+0x10ea9]        # 0x140016938
   140005a8f:	lea    rcx,[rsp+0x20]
   140005a94:	call   QWORD PTR [rip+0x10e9e]        # 0x140016938
   140005a9a:	lea    rcx,[rsp+0x28]
   140005a9f:	call   QWORD PTR [rip+0x10e93]        # 0x140016938
   140005aa5:	mov    r8,QWORD PTR [rsp+0xa0]
   140005aad:	lea    rdx,[rsp+0x48]
   140005ab2:	lea    rcx,[rsp+0x58]
   140005ab7:	call   QWORD PTR [rip+0x1093b]        # 0x1400163f8
   140005abd:	xor    edx,edx
   140005abf:	mov    rcx,rax
   140005ac2:	call   QWORD PTR [rip+0x10fc8]        # 0x140016a90
   140005ac8:	lea    rcx,[rsp+0x48]
   140005acd:	mov    rdi,rax
   140005ad0:	mov    QWORD PTR [rsp+0x40],rax
   140005ad5:	call   QWORD PTR [rip+0x10915]        # 0x1400163f0
   140005adb:	test   rdi,rdi
   140005ade:	je     0x140005b4d
   140005ae0:	mov    rdx,QWORD PTR [rdi]
   140005ae3:	mov    rcx,rdi
   140005ae6:	call   QWORD PTR [rdx]
   140005ae8:	mov    r8,QWORD PTR [rbp+0x0]
   140005aec:	xor    edi,edi
   140005aee:	mov    ecx,DWORD PTR [r8+0x20]
   140005af2:	mov    r11,rax
   140005af5:	test   ecx,ecx
   140005af7:	je     0x140005b06
   140005af9:	mov    rdi,rax
   140005afc:	shr    rdi,0x1f
   140005b00:	xor    edi,DWORD PTR [r8+0x24]
   140005b04:	xor    edi,eax
   140005b06:	test   ecx,ecx
   140005b08:	je     0x140005b38
   140005b0a:	xor    edx,edx
   140005b0c:	mov    eax,edi
   140005b0e:	div    ecx
   140005b10:	mov    rax,QWORD PTR [r8+0x8]
   140005b14:	lea    rdx,[rax+rdx*8]
   140005b18:	mov    rax,QWORD PTR [rdx]
   140005b1b:	cmp    rax,r8
   140005b1e:	je     0x140005b3b
   140005b20:	cmp    edi,DWORD PTR [rax+0x8]
   140005b23:	jne    0x140005b2b
   140005b25:	cmp    r11,QWORD PTR [rax+0x10]
   140005b29:	je     0x140005b3b
   140005b2b:	mov    rdx,rax
   140005b2e:	mov    rax,QWORD PTR [rax]
   140005b31:	cmp    rax,r8
   140005b34:	jne    0x140005b20
   140005b36:	jmp    0x140005b3b
   140005b38:	mov    rdx,rbp
   140005b3b:	cmp    QWORD PTR [rdx],r8
   140005b3e:	jne    0x140005b4d
   140005b40:	mov    rcx,QWORD PTR [rsp+0x40]
   140005b45:	mov    rdx,rbp
   140005b48:	call   0x140005740
   140005b4d:	lea    rcx,[rip+0x17574]        # 0x14001d0c8
   140005b54:	call   QWORD PTR [rip+0x1088e]        # 0x1400163e8
   140005b5a:	mov    rcx,rbx
   140005b5d:	inc    esi
   140005b5f:	call   QWORD PTR [rip+0x108bb]        # 0x140016420
   140005b65:	cmp    esi,eax
   140005b67:	jl     0x1400058d3
   140005b6d:	mov    rsi,QWORD PTR [rsp+0x88]
   140005b75:	mov    rbx,QWORD PTR [rsp+0xa8]
   140005b7d:	mov    rdi,QWORD PTR [rsp+0x80]
   140005b85:	add    rsp,0x90
   140005b8c:	pop    rbp
   140005b8d:	repz ret 
   140005b8f:	int3   
   140005b90:	mov    QWORD PTR [rsp+0x8],rbx
   140005b95:	mov    QWORD PTR [rsp+0x10],rbp
   140005b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140005b9f:	push   rdi
   140005ba0:	sub    rsp,0x30
   140005ba4:	mov    rbp,rcx
   140005ba7:	mov    rcx,rdx
   140005baa:	mov    rdi,r8
   140005bad:	mov    rsi,rdx
   140005bb0:	call   QWORD PTR [rip+0x10eba]        # 0x140016a70
   140005bb6:	mov    rcx,rsi
   140005bb9:	movzx  ebx,al
   140005bbc:	call   QWORD PTR [rip+0x10eb6]        # 0x140016a78
   140005bc2:	movzx  r8d,bl
   140005bc6:	mov    rcx,rax
   140005bc9:	mov    rdx,rdi
   140005bcc:	call   0x140005680
   140005bd1:	mov    rdx,rbp
   140005bd4:	mov    rcx,rsi
   140005bd7:	call   QWORD PTR [rip+0x10ea3]        # 0x140016a80
   140005bdd:	test   rax,rax
   140005be0:	je     0x140005c90
   140005be6:	mov    rdx,rbp
   140005be9:	mov    rcx,rsi
   140005bec:	call   QWORD PTR [rip+0x10e8e]        # 0x140016a80
   140005bf2:	mov    rbx,rax
   140005bf5:	mov    QWORD PTR [rsp+0x20],rax
   140005bfa:	test   rax,rax
   140005bfd:	je     0x140005c90
   140005c03:	mov    r9,QWORD PTR [rdi]
   140005c06:	xor    r8d,r8d
   140005c09:	mov    ecx,DWORD PTR [r9+0x20]
   140005c0d:	test   ecx,ecx
   140005c0f:	je     0x140005c59
   140005c11:	mov    r8,rax
   140005c14:	shr    r8,0x1f
   140005c18:	xor    r8d,DWORD PTR [r9+0x24]
   140005c1c:	xor    r8d,eax
   140005c1f:	test   ecx,ecx
   140005c21:	je     0x140005c59
   140005c23:	xor    edx,edx
   140005c25:	mov    eax,r8d
   140005c28:	div    ecx
   140005c2a:	mov    rax,QWORD PTR [r9+0x8]
   140005c2e:	lea    rdx,[rax+rdx*8]
   140005c32:	mov    rax,QWORD PTR [rdx]
   140005c35:	cmp    rax,r9
   140005c38:	je     0x140005c5c
   140005c3a:	nop    WORD PTR [rax+rax*1+0x0]
   140005c40:	cmp    r8d,DWORD PTR [rax+0x8]
   140005c44:	jne    0x140005c4c
   140005c46:	cmp    rbx,QWORD PTR [rax+0x10]
   140005c4a:	je     0x140005c5c
   140005c4c:	mov    rdx,rax
   140005c4f:	mov    rax,QWORD PTR [rax]
   140005c52:	cmp    rax,r9
   140005c55:	jne    0x140005c40
   140005c57:	jmp    0x140005c5c
   140005c59:	mov    rdx,rdi
   140005c5c:	cmp    QWORD PTR [rdx],r9
   140005c5f:	jne    0x140005c90
   140005c61:	mov    rax,QWORD PTR [rbx+0x10]
   140005c65:	test   BYTE PTR [rax+0x30],0x1
   140005c69:	jne    0x140005c82
   140005c6b:	lea    r9,[rsp+0x58]
   140005c70:	lea    r8,[rsp+0x20]
   140005c75:	lea    rdx,[rsp+0x58]
   140005c7a:	mov    rcx,rdi
   140005c7d:	call   0x140003f80
   140005c82:	mov    rcx,QWORD PTR [rbx]
   140005c85:	xor    r8d,r8d
   140005c88:	mov    rdx,rdi
   140005c8b:	call   0x140005680
   140005c90:	mov    rbx,QWORD PTR [rsp+0x40]
   140005c95:	mov    rbp,QWORD PTR [rsp+0x48]
   140005c9a:	mov    rsi,QWORD PTR [rsp+0x50]
   140005c9f:	add    rsp,0x30
   140005ca3:	pop    rdi
   140005ca4:	ret    
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	int3   
   140005ca9:	int3   
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	int3   
   140005cad:	int3   
   140005cae:	int3   
   140005caf:	int3   
   140005cb0:	mov    QWORD PTR [rsp+0x10],rdx
   140005cb5:	mov    QWORD PTR [rsp+0x8],rcx
   140005cba:	push   rbx
   140005cbb:	push   rsi
   140005cbc:	push   rdi
   140005cbd:	sub    rsp,0x30
   140005cc1:	mov    rdi,rcx
   140005cc4:	mov    rcx,rdx
   140005cc7:	mov    rbx,rdx
   140005cca:	call   QWORD PTR [rip+0x106e8]        # 0x1400163b8
   140005cd0:	lea    rcx,[rsp+0x60]
   140005cd5:	or     r8d,0xffffffff
   140005cd9:	mov    rdx,rax
   140005cdc:	call   QWORD PTR [rip+0x1068e]        # 0x140016370
   140005ce2:	mov    r11,QWORD PTR [rsp+0x60]
   140005ce7:	cmp    DWORD PTR [r11+0x4],0x0
   140005cec:	je     0x140005dde
   140005cf2:	mov    r8,QWORD PTR [rip+0x173e7]        # 0x14001d0e0
   140005cf9:	cmp    DWORD PTR [r8+0x14],0x0
   140005cfe:	je     0x140005fa0
   140005d04:	xor    esi,esi
   140005d06:	mov    QWORD PTR [rsp+0x28],rbp
   140005d0b:	cmp    DWORD PTR [r8+0x20],esi
   140005d0f:	je     0x140005d29
   140005d11:	mov    edx,DWORD PTR [r8+0x24]
   140005d15:	lea    rcx,[rsp+0x60]
   140005d1a:	call   QWORD PTR [rip+0x105c0]        # 0x1400162e0
   140005d20:	mov    r8,QWORD PTR [rip+0x173b9]        # 0x14001d0e0
   140005d27:	mov    esi,eax
   140005d29:	mov    ecx,DWORD PTR [r8+0x20]
   140005d2d:	test   ecx,ecx
   140005d2f:	je     0x140005dbc
   140005d35:	xor    edx,edx
   140005d37:	mov    eax,esi
   140005d39:	div    ecx
   140005d3b:	mov    rax,QWORD PTR [r8+0x8]
   140005d3f:	lea    rbp,[rax+rdx*8]
   140005d43:	mov    rax,QWORD PTR [rax+rdx*8]
   140005d47:	cmp    rax,r8
   140005d4a:	je     0x140005dc3
   140005d4c:	nop    DWORD PTR [rax+0x0]
   140005d50:	cmp    esi,DWORD PTR [rax+0x8]
   140005d53:	jne    0x140005d9a
   140005d55:	lea    rcx,[rax+0x10]
   140005d59:	mov    rax,QWORD PTR [rsp+0x60]
   140005d5e:	movsxd rdx,DWORD PTR [rax+0x4]
   140005d62:	mov    rax,QWORD PTR [rcx]
   140005d65:	cmp    edx,DWORD PTR [rax+0x4]
   140005d68:	jne    0x140005d9a
   140005d6a:	mov    rdi,rdx
   140005d6d:	call   QWORD PTR [rip+0x10bdd]        # 0x140016950
   140005d73:	lea    rcx,[rsp+0x60]
   140005d78:	mov    rbx,rax
   140005d7b:	call   QWORD PTR [rip+0x10bcf]        # 0x140016950
   140005d81:	mov    r8,rdi
   140005d84:	mov    rcx,rax
   140005d87:	mov    rdx,rbx
   140005d8a:	call   0x14001507e
   140005d8f:	test   eax,eax
   140005d91:	je     0x140005dae
   140005d93:	mov    r8,QWORD PTR [rip+0x17346]        # 0x14001d0e0
   140005d9a:	mov    rbp,QWORD PTR [rbp+0x0]
   140005d9e:	mov    rax,QWORD PTR [rbp+0x0]
   140005da2:	cmp    rax,r8
   140005da5:	jne    0x140005d50
   140005da7:	mov    rdi,QWORD PTR [rsp+0x50]
   140005dac:	jmp    0x140005dc3
   140005dae:	mov    r8,QWORD PTR [rip+0x1732b]        # 0x14001d0e0
   140005db5:	mov    rdi,QWORD PTR [rsp+0x50]
   140005dba:	jmp    0x140005dc3
   140005dbc:	lea    rbp,[rip+0x1731d]        # 0x14001d0e0
   140005dc3:	mov    rdx,QWORD PTR [rbp+0x0]
   140005dc7:	mov    rbp,QWORD PTR [rsp+0x28]
   140005dcc:	cmp    rdx,r8
   140005dcf:	je     0x140005fa0
   140005dd5:	add    rdx,0x18
   140005dd9:	jmp    0x140005fa5
   140005dde:	cmp    QWORD PTR [rbx],0x0
   140005de2:	je     0x140005e21
   140005de4:	mov    rdx,QWORD PTR [rbx]
   140005de7:	lea    rcx,[rsp+0x68]
   140005dec:	call   0x140005cb0
   140005df1:	lea    rcx,[rsp+0x60]
   140005df6:	mov    rdx,rax
   140005df9:	call   QWORD PTR [rip+0x10549]        # 0x140016348
   140005dff:	lea    rcx,[rsp+0x68]
   140005e04:	call   QWORD PTR [rip+0x1046e]        # 0x140016278
   140005e0a:	lea    rdx,[rip+0x11097]        # 0x140016ea8
   140005e11:	lea    rcx,[rsp+0x60]
   140005e16:	call   QWORD PTR [rip+0x1061c]        # 0x140016438
   140005e1c:	jmp    0x140005fa0
   140005e21:	mov    eax,DWORD PTR [rip+0x172e9]        # 0x14001d110
   140005e27:	test   al,0x1
   140005e29:	jne    0x140005e4e
   140005e2b:	or     eax,0x1
   140005e2e:	lea    rcx,[rip+0xfccb]        # 0x140015b00
   140005e35:	mov    DWORD PTR [rip+0x172d5],eax        # 0x14001d110
   140005e3b:	mov    rax,QWORD PTR [rip+0x103e6]        # 0x140016228
   140005e42:	mov    QWORD PTR [rip+0x172bf],rax        # 0x14001d108
   140005e49:	call   0x14001514c
   140005e4e:	mov    rcx,QWORD PTR [rip+0x172b3]        # 0x14001d108
   140005e55:	cmp    DWORD PTR [rcx+0x14],0x0
   140005e59:	je     0x140005ec8
   140005e5b:	mov    r8d,DWORD PTR [rcx+0x20]
   140005e5f:	xor    esi,esi
   140005e61:	test   r8d,r8d
   140005e64:	je     0x140005e72
   140005e66:	mov    rsi,rbx
   140005e69:	shr    rsi,0x1f
   140005e6d:	xor    esi,DWORD PTR [rcx+0x24]
   140005e70:	xor    esi,ebx
   140005e72:	test   r8d,r8d
   140005e75:	je     0x140005ea8
   140005e77:	xor    edx,edx
   140005e79:	mov    eax,esi
   140005e7b:	div    r8d
   140005e7e:	mov    rax,QWORD PTR [rcx+0x8]
   140005e82:	lea    rdx,[rax+rdx*8]
   140005e86:	mov    rax,QWORD PTR [rdx]
   140005e89:	cmp    rax,rcx
   140005e8c:	je     0x140005eaf
   140005e8e:	xchg   ax,ax
   140005e90:	cmp    esi,DWORD PTR [rax+0x8]
   140005e93:	jne    0x140005e9b
   140005e95:	cmp    rbx,QWORD PTR [rax+0x10]
   140005e99:	je     0x140005eaf
   140005e9b:	mov    rdx,rax
   140005e9e:	mov    rax,QWORD PTR [rax]
   140005ea1:	cmp    rax,rcx
   140005ea4:	jne    0x140005e90
   140005ea6:	jmp    0x140005eaf
   140005ea8:	lea    rdx,[rip+0x17259]        # 0x14001d108
   140005eaf:	mov    rdx,QWORD PTR [rdx]
   140005eb2:	cmp    rdx,rcx
   140005eb5:	je     0x140005ec8
   140005eb7:	lea    rcx,[rsp+0x68]
   140005ebc:	add    rdx,0x18
   140005ec0:	call   QWORD PTR [rip+0x103ca]        # 0x140016290
   140005ec6:	jmp    0x140005ed3
   140005ec8:	lea    rcx,[rsp+0x68]
   140005ecd:	call   QWORD PTR [rip+0x1045d]        # 0x140016330
   140005ed3:	lea    rdx,[rsp+0x68]
   140005ed8:	lea    rcx,[rsp+0x60]
   140005edd:	call   QWORD PTR [rip+0x10465]        # 0x140016348
   140005ee3:	lea    rcx,[rsp+0x68]
   140005ee8:	call   QWORD PTR [rip+0x1038a]        # 0x140016278
   140005eee:	mov    r11,QWORD PTR [rsp+0x60]
   140005ef3:	cmp    DWORD PTR [r11+0x4],0x0
   140005ef8:	jne    0x140005fa0
   140005efe:	mov    rcx,QWORD PTR [rip+0x10153]        # 0x140016058
   140005f05:	lea    rdx,[rip+0x10f54]        # 0x140016e60
   140005f0c:	call   0x1400016a0
   140005f11:	mov    rdx,QWORD PTR [rip+0x10148]        # 0x140016060
   140005f18:	mov    rcx,rax
   140005f1b:	call   QWORD PTR [rip+0x10147]        # 0x140016068
   140005f21:	lea    rdx,[rip+0x10f20]        # 0x140016e48
   140005f28:	lea    rcx,[rsp+0x68]
   140005f2d:	or     r8d,0xffffffff
   140005f31:	call   QWORD PTR [rip+0x10439]        # 0x140016370
   140005f37:	lea    rcx,[rsp+0x60]
   140005f3c:	mov    rdx,rax
   140005f3f:	call   QWORD PTR [rip+0x10403]        # 0x140016348
   140005f45:	lea    rcx,[rsp+0x68]
   140005f4a:	call   QWORD PTR [rip+0x10328]        # 0x140016278
   140005f50:	mov    r11,QWORD PTR [rip+0x171b1]        # 0x14001d108
   140005f57:	lea    rcx,[rsp+0x68]
   140005f5c:	mov    edx,DWORD PTR [r11+0x14]
   140005f60:	mov    r8d,0xa
   140005f66:	call   QWORD PTR [rip+0x104c4]        # 0x140016430
   140005f6c:	lea    rcx,[rsp+0x60]
   140005f71:	mov    rdx,rax
   140005f74:	call   QWORD PTR [rip+0x104ae]        # 0x140016428
   140005f7a:	lea    rcx,[rsp+0x68]
   140005f7f:	call   QWORD PTR [rip+0x102f3]        # 0x140016278
   140005f85:	lea    r9,[rsp+0x60]
   140005f8a:	lea    r8,[rsp+0x58]
   140005f8f:	lea    rdx,[rsp+0x68]
   140005f94:	lea    rcx,[rip+0x1716d]        # 0x14001d108
   140005f9b:	call   0x140004ea0
   140005fa0:	lea    rdx,[rsp+0x60]
   140005fa5:	mov    rcx,rdi
   140005fa8:	call   QWORD PTR [rip+0x102e2]        # 0x140016290
   140005fae:	lea    rcx,[rsp+0x60]
   140005fb3:	call   QWORD PTR [rip+0x102bf]        # 0x140016278
   140005fb9:	mov    rax,rdi
   140005fbc:	add    rsp,0x30
   140005fc0:	pop    rdi
   140005fc1:	pop    rsi
   140005fc2:	pop    rbx
   140005fc3:	ret    
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fd5:	mov    QWORD PTR [rsp+0x10],rbp
   140005fda:	mov    QWORD PTR [rsp+0x18],rsi
   140005fdf:	push   rdi
   140005fe0:	sub    rsp,0x20
   140005fe4:	mov    rax,QWORD PTR [rcx]
   140005fe7:	xor    ebx,ebx
   140005fe9:	mov    ebp,r8d
   140005fec:	mov    rdi,rdx
   140005fef:	mov    rsi,rcx
   140005ff2:	mov    r8d,ebx
   140005ff5:	cmp    DWORD PTR [rax+0x20],ebx
   140005ff8:	je     0x140006009
   140005ffa:	mov    edx,DWORD PTR [rax+0x24]
   140005ffd:	mov    rcx,rdi
   140006000:	call   QWORD PTR [rip+0x102da]        # 0x1400162e0
   140006006:	mov    r8d,eax
   140006009:	mov    rdx,rdi
   14000600c:	mov    rcx,rsi
   14000600f:	call   0x140001e30
   140006014:	mov    rcx,QWORD PTR [rsi]
   140006017:	cmp    QWORD PTR [rax],rcx
   14000601a:	je     0x140006055
   14000601c:	cmp    DWORD PTR [rcx+0x14],ebx
   14000601f:	je     0x14000604d
   140006021:	mov    eax,ebx
   140006023:	cmp    DWORD PTR [rcx+0x20],ebx
   140006026:	je     0x140006034
   140006028:	mov    edx,DWORD PTR [rcx+0x24]
   14000602b:	mov    rcx,rdi
   14000602e:	call   QWORD PTR [rip+0x102ac]        # 0x1400162e0
   140006034:	mov    r8d,eax
   140006037:	mov    rdx,rdi
   14000603a:	mov    rcx,rsi
   14000603d:	call   0x140001e30
   140006042:	mov    rcx,QWORD PTR [rax]
   140006045:	cmp    rcx,QWORD PTR [rsi]
   140006048:	je     0x14000604d
   14000604a:	mov    ebx,DWORD PTR [rcx+0x18]
   14000604d:	cmp    ebx,ebp
   14000604f:	jg     0x140006055
   140006051:	mov    al,0x1
   140006053:	jmp    0x140006064
   140006055:	mov    rdx,rdi
   140006058:	mov    rcx,rsi
   14000605b:	call   0x140005000
   140006060:	mov    DWORD PTR [rax],ebp
   140006062:	xor    al,al
   140006064:	mov    rbx,QWORD PTR [rsp+0x30]
   140006069:	mov    rbp,QWORD PTR [rsp+0x38]
   14000606e:	mov    rsi,QWORD PTR [rsp+0x40]
   140006073:	add    rsp,0x20
   140006077:	pop    rdi
   140006078:	ret    
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	mov    QWORD PTR [rsp+0x8],rbx
   140006085:	push   rbp
   140006086:	push   rsi
   140006087:	push   rdi
   140006088:	sub    rsp,0x50
   14000608c:	mov    rsi,rcx
   14000608f:	mov    rcx,rdx
   140006092:	mov    rdi,r8
   140006095:	mov    rbx,rdx
   140006098:	call   QWORD PTR [rip+0x103b2]        # 0x140016450
   14000609e:	mov    rcx,rbx
   1400060a1:	mov    ebp,eax
   1400060a3:	call   QWORD PTR [rip+0x1035f]        # 0x140016408
   1400060a9:	lea    rcx,[rsp+0x80]
   1400060b1:	mov    rdx,rax
   1400060b4:	or     r8d,0xffffffff
   1400060b8:	call   QWORD PTR [rip+0x102b2]        # 0x140016370
   1400060be:	test   rdi,rdi
   1400060c1:	je     0x1400060de
   1400060c3:	lea    rdx,[rsp+0x80]
   1400060cb:	mov    r8d,ebp
   1400060ce:	mov    rcx,rdi
   1400060d1:	call   0x140005fd0
   1400060d6:	test   al,al
   1400060d8:	jne    0x140006288
   1400060de:	or     rcx,0xffffffffffffffff
   1400060e2:	xor    eax,eax
   1400060e4:	lea    rdi,[rip+0x10ddd]        # 0x140016ec8
   1400060eb:	repnz scas al,BYTE PTR es:[rdi]
   1400060ed:	not    rcx
   1400060f0:	lea    rdx,[rcx-0x1]
   1400060f4:	lea    rcx,[rip+0x10dcd]        # 0x140016ec8
   1400060fb:	call   QWORD PTR [rip+0x107cf]        # 0x1400168d0
   140006101:	mov    rcx,QWORD PTR [rsi]
   140006104:	lea    rdx,[rsp+0x88]
   14000610c:	mov    QWORD PTR [rsp+0x88],rax
   140006114:	call   0x140014230
   140006119:	lea    rcx,[rsp+0x88]
   140006121:	call   QWORD PTR [rip+0x10811]        # 0x140016938
   140006127:	or     rcx,0xffffffffffffffff
   14000612b:	lea    rdx,[rip+0x10a52]        # 0x140016b84
   140006132:	mov    rdi,rdx
   140006135:	mov    QWORD PTR [rsp+0x38],rdx
   14000613a:	xor    eax,eax
   14000613c:	repnz scas al,BYTE PTR es:[rdi]
   14000613e:	lea    rdx,[rsp+0x40]
   140006143:	not    rcx
   140006146:	dec    rcx
   140006149:	mov    DWORD PTR [rsp+0x30],ecx
   14000614d:	lea    rcx,[rsp+0x88]
   140006155:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000615a:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140006160:	call   QWORD PTR [rip+0x100aa]        # 0x140016210
   140006166:	mov    rcx,rbx
   140006169:	call   QWORD PTR [rip+0x10299]        # 0x140016408
   14000616f:	lea    rcx,[rsp+0x30]
   140006174:	or     r8d,0xffffffff
   140006178:	mov    rdx,rax
   14000617b:	call   QWORD PTR [rip+0x107a7]        # 0x140016928
   140006181:	lea    rcx,[rsp+0x20]
   140006186:	mov    rdx,rax
   140006189:	call   0x140001000
   14000618e:	mov    rcx,QWORD PTR [rsi]
   140006191:	lea    rdx,[rsp+0x88]
   140006199:	mov    r8,rax
   14000619c:	call   0x140014b80
   1400061a1:	lea    rcx,[rsp+0x20]
   1400061a6:	call   QWORD PTR [rip+0x1078c]        # 0x140016938
   1400061ac:	lea    rcx,[rsp+0x30]
   1400061b1:	call   QWORD PTR [rip+0x10781]        # 0x140016938
   1400061b7:	lea    rcx,[rsp+0x88]
   1400061bf:	call   QWORD PTR [rip+0x10773]        # 0x140016938
   1400061c5:	test   ebp,ebp
   1400061c7:	je     0x140006247
   1400061c9:	or     rcx,0xffffffffffffffff
   1400061cd:	lea    rdx,[rip+0x10ce4]        # 0x140016eb8
   1400061d4:	xor    eax,eax
   1400061d6:	mov    rdi,rdx
   1400061d9:	mov    QWORD PTR [rsp+0x38],rdx
   1400061de:	lea    rdx,[rsp+0x40]
   1400061e3:	repnz scas al,BYTE PTR es:[rdi]
   1400061e5:	not    rcx
   1400061e8:	dec    rcx
   1400061eb:	mov    DWORD PTR [rsp+0x30],ecx
   1400061ef:	lea    rcx,[rsp+0x88]
   1400061f7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400061fc:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140006202:	call   QWORD PTR [rip+0x10008]        # 0x140016210
   140006208:	lea    rcx,[rsp+0x30]
   14000620d:	mov    r8d,0xa
   140006213:	mov    edx,ebp
   140006215:	call   QWORD PTR [rip+0x100d5]        # 0x1400162f0
   14000621b:	mov    rcx,QWORD PTR [rsi]
   14000621e:	lea    rdx,[rsp+0x88]
   140006226:	mov    r8,rax
   140006229:	call   0x140014b80
   14000622e:	lea    rcx,[rsp+0x30]
   140006233:	call   QWORD PTR [rip+0x106ff]        # 0x140016938
   140006239:	lea    rcx,[rsp+0x88]
   140006241:	call   QWORD PTR [rip+0x106f1]        # 0x140016938
   140006247:	mov    rcx,rbx
   14000624a:	call   QWORD PTR [rip+0x101f8]        # 0x140016448
   140006250:	mov    rcx,rbx
   140006253:	movzx  edi,al
   140006256:	call   QWORD PTR [rip+0x101e4]        # 0x140016440
   14000625c:	lea    rcx,[rsp+0x88]
   140006264:	mov    rdx,rax
   140006267:	or     r8d,0xffffffff
   14000626b:	call   QWORD PTR [rip+0x100ff]        # 0x140016370
   140006271:	movzx  r8d,dil
   140006275:	mov    rcx,rsi
   140006278:	mov    rdx,rax
   14000627b:	call   0x140003a60
   140006280:	mov    rcx,QWORD PTR [rsi]
   140006283:	call   0x140014320
   140006288:	lea    rcx,[rsp+0x80]
   140006290:	call   QWORD PTR [rip+0xffe2]        # 0x140016278
   140006296:	mov    rbx,QWORD PTR [rsp+0x70]
   14000629b:	add    rsp,0x50
   14000629f:	pop    rdi
   1400062a0:	pop    rsi
   1400062a1:	pop    rbp
   1400062a2:	ret    
   1400062a3:	int3   
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	int3   
   1400062a9:	int3   
   1400062aa:	int3   
   1400062ab:	int3   
   1400062ac:	int3   
   1400062ad:	int3   
   1400062ae:	int3   
   1400062af:	int3   
   1400062b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400062ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400062bf:	push   rdi
   1400062c0:	push   r12
   1400062c2:	push   r13
   1400062c4:	push   r14
   1400062c6:	push   r15
   1400062c8:	sub    rsp,0x390
   1400062cf:	xor    esi,esi
   1400062d1:	mov    r14,r9
   1400062d4:	mov    r13,r8
   1400062d7:	mov    DWORD PTR [rsp+0x48],esi
   1400062db:	mov    r12,rdx
   1400062de:	mov    r15,rcx
   1400062e1:	cmp    BYTE PTR [rip+0x16dd8],sil        # 0x14001d0c0
   1400062e8:	je     0x14000652f
   1400062ee:	mov    rdx,rcx
   1400062f1:	lea    rcx,[rsp+0x110]
   1400062f9:	call   QWORD PTR [rip+0x10241]        # 0x140016540
   1400062ff:	lea    rdx,[rsp+0x120]
   140006307:	mov    rcx,rax
   14000630a:	call   QWORD PTR [rip+0xffb0]        # 0x1400162c0
   140006310:	mov    rcx,rax
   140006313:	call   QWORD PTR [rip+0x10637]        # 0x140016950
   140006319:	mov    rcx,QWORD PTR [rip+0xfd38]        # 0x140016058
   140006320:	lea    rdx,[rip+0x10c79]        # 0x140016fa0
   140006327:	mov    rdi,rax
   14000632a:	call   0x1400016a0
   14000632f:	mov    rdx,rdi
   140006332:	mov    rcx,rax
   140006335:	call   0x1400016a0
   14000633a:	lea    rdx,[rip+0x10c4f]        # 0x140016f90
   140006341:	mov    rcx,rax
   140006344:	call   0x1400016a0
   140006349:	lea    rcx,[rsp+0x120]
   140006351:	call   QWORD PTR [rip+0xff21]        # 0x140016278
   140006357:	lea    rcx,[rsp+0x110]
   14000635f:	call   QWORD PTR [rip+0x105d3]        # 0x140016938
   140006365:	mov    r11,QWORD PTR [r14]
   140006368:	mov    QWORD PTR [rsp+0xa0],r11
   140006370:	mov    eax,DWORD PTR [r11]
   140006373:	test   eax,eax
   140006375:	je     0x140006383
   140006377:	cmp    eax,0xffffffff
   14000637a:	je     0x1400063e6
   14000637c:	lock add DWORD PTR [r11],0x1
   140006381:	jmp    0x1400063de
   140006383:	mov    edx,DWORD PTR [r11+0x4]
   140006387:	lea    rcx,[rsp+0xa0]
   14000638f:	call   QWORD PTR [rip+0xff8b]        # 0x140016320
   140006395:	mov    r11,QWORD PTR [rsp+0xa0]
   14000639d:	mov    rdx,QWORD PTR [r14]
   1400063a0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400063a4:	lea    rbx,[rdx+rax*8+0x10]
   1400063a9:	movsxd rax,DWORD PTR [r11+0xc]
   1400063ad:	lea    rbp,[r11+rax*8+0x10]
   1400063b2:	movsxd rax,DWORD PTR [r11+0x8]
   1400063b6:	lea    rdi,[r11+rax*8+0x10]
   1400063bb:	cmp    rdi,rbp
   1400063be:	je     0x1400063e6
   1400063c0:	test   rdi,rdi
   1400063c3:	je     0x1400063d1
   1400063c5:	mov    rdx,rbx
   1400063c8:	mov    rcx,rdi
   1400063cb:	call   QWORD PTR [rip+0x1016f]        # 0x140016540
   1400063d1:	add    rdi,0x8
   1400063d5:	add    rbx,0x8
   1400063d9:	cmp    rdi,rbp
   1400063dc:	jne    0x1400063c0
   1400063de:	mov    r11,QWORD PTR [rsp+0xa0]
   1400063e6:	mov    DWORD PTR [rsp+0xa8],esi
   1400063ed:	movsxd rax,DWORD PTR [r11+0x8]
   1400063f1:	lea    rbx,[r11+rax*8+0x10]
   1400063f6:	mov    QWORD PTR [rsp+0xb0],rbx
   1400063fe:	movsxd rax,DWORD PTR [r11+0xc]
   140006402:	lea    rcx,[r11+rax*8+0x10]
   140006407:	mov    QWORD PTR [rsp+0xb8],rcx
   14000640f:	nop
   140006410:	mov    eax,0x1
   140006415:	mov    DWORD PTR [rsp+0xa8],eax
   14000641c:	cmp    rbx,rcx
   14000641f:	je     0x1400064bf
   140006425:	test   eax,eax
   140006427:	je     0x14000649e
   140006429:	lea    rcx,[rsp+0x1d0]
   140006431:	mov    rdx,rbx
   140006434:	call   QWORD PTR [rip+0x10106]        # 0x140016540
   14000643a:	lea    rdx,[rsp+0x1c0]
   140006442:	mov    rcx,rax
   140006445:	call   QWORD PTR [rip+0xfe75]        # 0x1400162c0
   14000644b:	mov    rcx,rax
   14000644e:	call   QWORD PTR [rip+0x104fc]        # 0x140016950
   140006454:	mov    rcx,QWORD PTR [rip+0xfbfd]        # 0x140016058
   14000645b:	mov    dl,0x20
   14000645d:	mov    rdi,rax
   140006460:	call   0x140001890
   140006465:	mov    rdx,rdi
   140006468:	mov    rcx,rax
   14000646b:	call   0x1400016a0
   140006470:	lea    rcx,[rsp+0x1c0]
   140006478:	call   QWORD PTR [rip+0xfdfa]        # 0x140016278
   14000647e:	lea    rcx,[rsp+0x1d0]
   140006486:	call   QWORD PTR [rip+0x104ac]        # 0x140016938
   14000648c:	mov    eax,DWORD PTR [rsp+0xa8]
   140006493:	dec    eax
   140006495:	mov    DWORD PTR [rsp+0xa8],eax
   14000649c:	jmp    0x140006425
   14000649e:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400064a6:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400064ae:	add    rbx,0x8
   1400064b2:	mov    QWORD PTR [rsp+0xb0],rbx
   1400064ba:	jmp    0x140006410
   1400064bf:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400064c7:	mov    eax,DWORD PTR [rbx]
   1400064c9:	test   eax,eax
   1400064cb:	je     0x1400064e5
   1400064cd:	cmp    eax,0xffffffff
   1400064d0:	je     0x14000651b
   1400064d2:	lock add DWORD PTR [rbx],0xffffffff
   1400064d6:	setne  al
   1400064d9:	test   al,al
   1400064db:	jne    0x14000651b
   1400064dd:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400064e5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400064e9:	lea    rdi,[rbx+rax*8+0x10]
   1400064ee:	movsxd rax,DWORD PTR [rbx+0x8]
   1400064f2:	lea    rbp,[rbx+rax*8+0x10]
   1400064f7:	cmp    rbp,rdi
   1400064fa:	je     0x140006512
   1400064fc:	nop    DWORD PTR [rax+0x0]
   140006500:	sub    rdi,0x8
   140006504:	mov    rcx,rdi
   140006507:	call   QWORD PTR [rip+0x1042b]        # 0x140016938
   14000650d:	cmp    rdi,rbp
   140006510:	jne    0x140006500
   140006512:	mov    rcx,rbx
   140006515:	call   QWORD PTR [rip+0xfd8d]        # 0x1400162a8
   14000651b:	mov    rdx,QWORD PTR [rip+0xfb3e]        # 0x140016060
   140006522:	mov    rcx,QWORD PTR [rip+0xfb2f]        # 0x140016058
   140006529:	call   QWORD PTR [rip+0xfb39]        # 0x140016068
   14000652f:	lea    r8,[rsp+0x58]
   140006534:	lea    rcx,[rsp+0x50]
   140006539:	mov    rdx,r12
   14000653c:	mov    DWORD PTR [rsp+0x5c],esi
   140006540:	call   QWORD PTR [rip+0xff7a]        # 0x1400164c0
   140006546:	cmp    DWORD PTR [rsp+0x5c],esi
   14000654a:	je     0x140006620
   140006550:	lea    rdx,[rsp+0x1e0]
   140006558:	lea    rcx,[rsp+0x58]
   14000655d:	call   QWORD PTR [rip+0x103fd]        # 0x140016960
   140006563:	lea    rdx,[rsp+0x360]
   14000656b:	mov    rcx,rax
   14000656e:	call   QWORD PTR [rip+0xff3c]        # 0x1400164b0
   140006574:	lea    rdx,[rsp+0x310]
   14000657c:	mov    rcx,r15
   14000657f:	mov    rbx,rax
   140006582:	call   QWORD PTR [rip+0xff28]        # 0x1400164b0
   140006588:	mov    rcx,QWORD PTR [rip+0xfac9]        # 0x140016058
   14000658f:	lea    rdx,[rip+0x109d2]        # 0x140016f68
   140006596:	mov    rdi,rax
   140006599:	call   0x1400016a0
   14000659e:	mov    rdx,rdi
   1400065a1:	mov    rcx,rax
   1400065a4:	call   QWORD PTR [rip+0xfb46]        # 0x1400160f0
   1400065aa:	lea    rdx,[rip+0x109af]        # 0x140016f60
   1400065b1:	mov    rcx,rax
   1400065b4:	call   0x1400016a0
   1400065b9:	mov    rdx,rbx
   1400065bc:	mov    rcx,rax
   1400065bf:	call   QWORD PTR [rip+0xfb2b]        # 0x1400160f0
   1400065c5:	lea    rdx,[rip+0x1098c]        # 0x140016f58
   1400065cc:	mov    rcx,rax
   1400065cf:	call   0x1400016a0
   1400065d4:	mov    edx,DWORD PTR [rsp+0x58]
   1400065d8:	mov    rcx,rax
   1400065db:	call   QWORD PTR [rip+0xfb07]        # 0x1400160e8
   1400065e1:	mov    rdx,QWORD PTR [rip+0xfa78]        # 0x140016060
   1400065e8:	mov    rcx,rax
   1400065eb:	call   QWORD PTR [rip+0xfa77]        # 0x140016068
   1400065f1:	lea    rcx,[rsp+0x310]
   1400065f9:	call   QWORD PTR [rip+0xfae1]        # 0x1400160e0
   1400065ff:	lea    rcx,[rsp+0x360]
   140006607:	call   QWORD PTR [rip+0xfad3]        # 0x1400160e0
   14000660d:	lea    rcx,[rsp+0x1e0]
   140006615:	call   QWORD PTR [rip+0x1031d]        # 0x140016938
   14000661b:	jmp    0x140007317
   140006620:	lea    rcx,[rsp+0x50]
   140006625:	call   QWORD PTR [rip+0xfe7d]        # 0x1400164a8
   14000662b:	test   al,al
   14000662d:	je     0x1400072b7
   140006633:	mov    rax,QWORD PTR [rip+0xfbe6]        # 0x140016220
   14000663a:	lea    rdx,[rip+0x10543]        # 0x140016b84
   140006641:	lea    rcx,[rsp+0x1b0]
   140006649:	mov    r8d,0x4
   14000664f:	mov    QWORD PTR [rsp+0x28],rax
   140006654:	call   QWORD PTR [rip+0x102ce]        # 0x140016928
   14000665a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000665f:	mov    edx,DWORD PTR [rcx]
   140006661:	mov    rdi,rax
   140006664:	cmp    edx,0x1
   140006667:	je     0x140006695
   140006669:	test   edx,edx
   14000666b:	je     0x140006695
   14000666d:	lea    rcx,[rsp+0x28]
   140006672:	mov    edx,0x7fffffff
   140006677:	mov    r8d,0x1
   14000667d:	call   0x140002c00
   140006682:	test   rax,rax
   140006685:	je     0x1400066bc
   140006687:	mov    rdx,rdi
   14000668a:	mov    rcx,rax
   14000668d:	call   QWORD PTR [rip+0xfead]        # 0x140016540
   140006693:	jmp    0x1400066bc
   140006695:	lea    rcx,[rsp+0x128]
   14000669d:	mov    rdx,rax
   1400066a0:	call   QWORD PTR [rip+0xfe9a]        # 0x140016540
   1400066a6:	lea    rcx,[rsp+0x28]
   1400066ab:	call   QWORD PTR [rip+0xfccf]        # 0x140016380
   1400066b1:	mov    rcx,QWORD PTR [rsp+0x128]
   1400066b9:	mov    QWORD PTR [rax],rcx
   1400066bc:	lea    rdx,[rip+0x10729]        # 0x140016dec
   1400066c3:	lea    rcx,[rsp+0x188]
   1400066cb:	mov    r8d,0x4
   1400066d1:	call   QWORD PTR [rip+0x10251]        # 0x140016928
   1400066d7:	mov    rcx,QWORD PTR [rsp+0x28]
   1400066dc:	mov    edx,DWORD PTR [rcx]
   1400066de:	mov    rdi,rax
   1400066e1:	cmp    edx,0x1
   1400066e4:	je     0x140006712
   1400066e6:	test   edx,edx
   1400066e8:	je     0x140006712
   1400066ea:	lea    rcx,[rsp+0x28]
   1400066ef:	mov    edx,0x7fffffff
   1400066f4:	mov    r8d,0x1
   1400066fa:	call   0x140002c00
   1400066ff:	test   rax,rax
   140006702:	je     0x140006739
   140006704:	mov    rdx,rdi
   140006707:	mov    rcx,rax
   14000670a:	call   QWORD PTR [rip+0xfe30]        # 0x140016540
   140006710:	jmp    0x140006739
   140006712:	lea    rcx,[rsp+0x118]
   14000671a:	mov    rdx,rax
   14000671d:	call   QWORD PTR [rip+0xfe1d]        # 0x140016540
   140006723:	lea    rcx,[rsp+0x28]
   140006728:	call   QWORD PTR [rip+0xfc52]        # 0x140016380
   14000672e:	mov    rcx,QWORD PTR [rsp+0x118]
   140006736:	mov    QWORD PTR [rax],rcx
   140006739:	lea    rdx,[rip+0x10810]        # 0x140016f50
   140006740:	lea    rcx,[rsp+0x138]
   140006748:	mov    r8d,0x7
   14000674e:	call   QWORD PTR [rip+0x101d4]        # 0x140016928
   140006754:	mov    rcx,QWORD PTR [rsp+0x28]
   140006759:	mov    edx,DWORD PTR [rcx]
   14000675b:	mov    rdi,rax
   14000675e:	cmp    edx,0x1
   140006761:	je     0x14000678f
   140006763:	test   edx,edx
   140006765:	je     0x14000678f
   140006767:	lea    rcx,[rsp+0x28]
   14000676c:	mov    edx,0x7fffffff
   140006771:	mov    r8d,0x1
   140006777:	call   0x140002c00
   14000677c:	test   rax,rax
   14000677f:	je     0x1400067b6
   140006781:	mov    rdx,rdi
   140006784:	mov    rcx,rax
   140006787:	call   QWORD PTR [rip+0xfdb3]        # 0x140016540
   14000678d:	jmp    0x1400067b6
   14000678f:	lea    rcx,[rsp+0x1a0]
   140006797:	mov    rdx,rax
   14000679a:	call   QWORD PTR [rip+0xfda0]        # 0x140016540
   1400067a0:	lea    rcx,[rsp+0x28]
   1400067a5:	call   QWORD PTR [rip+0xfbd5]        # 0x140016380
   1400067ab:	mov    rcx,QWORD PTR [rsp+0x1a0]
   1400067b3:	mov    QWORD PTR [rax],rcx
   1400067b6:	mov    rbx,QWORD PTR [rsp+0x28]
   1400067bb:	mov    QWORD PTR [rsp+0x40],rbx
   1400067c0:	mov    eax,DWORD PTR [rbx]
   1400067c2:	test   eax,eax
   1400067c4:	je     0x1400067d1
   1400067c6:	cmp    eax,0xffffffff
   1400067c9:	je     0x140006833
   1400067cb:	lock add DWORD PTR [rbx],0x1
   1400067cf:	jmp    0x14000682e
   1400067d1:	mov    edx,DWORD PTR [rbx+0x4]
   1400067d4:	lea    rcx,[rsp+0x40]
   1400067d9:	call   QWORD PTR [rip+0xfb41]        # 0x140016320
   1400067df:	mov    rbx,QWORD PTR [rsp+0x28]
   1400067e4:	movsxd rax,DWORD PTR [rbx+0x8]
   1400067e8:	lea    rbp,[rbx+rax*8+0x10]
   1400067ed:	mov    rax,QWORD PTR [rsp+0x40]
   1400067f2:	movsxd rcx,DWORD PTR [rax+0xc]
   1400067f6:	lea    r12,[rax+rcx*8+0x10]
   1400067fb:	movsxd rcx,DWORD PTR [rax+0x8]
   1400067ff:	lea    rdi,[rax+rcx*8+0x10]
   140006804:	cmp    rdi,r12
   140006807:	je     0x140006833
   140006809:	nop    DWORD PTR [rax+0x0]
   140006810:	test   rdi,rdi
   140006813:	je     0x140006821
   140006815:	mov    rdx,rbp
   140006818:	mov    rcx,rdi
   14000681b:	call   QWORD PTR [rip+0xfd1f]        # 0x140016540
   140006821:	add    rdi,0x8
   140006825:	add    rbp,0x8
   140006829:	cmp    rdi,r12
   14000682c:	jne    0x140006810
   14000682e:	mov    rbx,QWORD PTR [rsp+0x28]
   140006833:	mov    eax,DWORD PTR [rbx]
   140006835:	test   eax,eax
   140006837:	je     0x14000684e
   140006839:	cmp    eax,0xffffffff
   14000683c:	je     0x14000688b
   14000683e:	lock add DWORD PTR [rbx],0xffffffff
   140006842:	setne  al
   140006845:	test   al,al
   140006847:	jne    0x14000688b
   140006849:	mov    rbx,QWORD PTR [rsp+0x28]
   14000684e:	movsxd rax,DWORD PTR [rbx+0xc]
   140006852:	lea    rdi,[rbx+rax*8+0x10]
   140006857:	movsxd rax,DWORD PTR [rbx+0x8]
   14000685b:	lea    rbp,[rbx+rax*8+0x10]
   140006860:	cmp    rbp,rdi
   140006863:	je     0x140006882
   140006865:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006870:	sub    rdi,0x8
   140006874:	mov    rcx,rdi
   140006877:	call   QWORD PTR [rip+0x100bb]        # 0x140016938
   14000687d:	cmp    rdi,rbp
   140006880:	jne    0x140006870
   140006882:	mov    rcx,rbx
   140006885:	call   QWORD PTR [rip+0xfa1d]        # 0x1400162a8
   14000688b:	lea    rcx,[rsp+0x1b0]
   140006893:	call   QWORD PTR [rip+0x1009f]        # 0x140016938
   140006899:	lea    rcx,[rsp+0x188]
   1400068a1:	call   QWORD PTR [rip+0x10091]        # 0x140016938
   1400068a7:	lea    rcx,[rsp+0x138]
   1400068af:	call   QWORD PTR [rip+0x10083]        # 0x140016938
   1400068b5:	lea    rdx,[rsp+0x230]
   1400068bd:	lea    rcx,[rsp+0x50]
   1400068c2:	call   QWORD PTR [rip+0xfbd8]        # 0x1400164a0
   1400068c8:	lea    rcx,[rsp+0xd0]
   1400068d0:	mov    rdx,rax
   1400068d3:	call   QWORD PTR [rip+0xf97f]        # 0x140016258
   1400068d9:	lea    rdx,[rsp+0xe8]
   1400068e1:	lea    rcx,[rsp+0xd0]
   1400068e9:	mov    DWORD PTR [rsp+0xe0],esi
   1400068f0:	call   QWORD PTR [rip+0xf95a]        # 0x140016250
   1400068f6:	lea    rdx,[rsp+0xf8]
   1400068fe:	lea    rcx,[rsp+0xd0]
   140006906:	call   QWORD PTR [rip+0xf93c]        # 0x140016248
   14000690c:	lea    rcx,[rsp+0x230]
   140006914:	call   QWORD PTR [rip+0xf8fe]        # 0x140016218
   14000691a:	lea    r12,[rip+0x10627]        # 0x140016f48
   140006921:	mov    eax,DWORD PTR [rsp+0xe0]
   140006928:	mov    ecx,eax
   14000692a:	inc    eax
   14000692c:	mov    DWORD PTR [rsp+0xe0],eax
   140006933:	test   ecx,ecx
   140006935:	jne    0x14000694c
   140006937:	mov    eax,DWORD PTR [rsp+0x100]
   14000693e:	cmp    DWORD PTR [rsp+0xf0],eax
   140006945:	je     0x14000694c
   140006947:	mov    dil,0x1
   14000694a:	jmp    0x14000694f
   14000694c:	xor    dil,dil
   14000694f:	test   sil,0x2
   140006953:	je     0x140006966
   140006955:	lea    rcx,[rsp+0x2d0]
   14000695d:	and    esi,0xfffffffd
   140006960:	call   QWORD PTR [rip+0xf8b2]        # 0x140016218
   140006966:	test   dil,dil
   140006969:	je     0x140007171
   14000696f:	mov    r8d,DWORD PTR [rsp+0xf0]
   140006977:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000697f:	lea    rdx,[rsp+0x200]
   140006987:	call   QWORD PTR [rip+0xff5b]        # 0x1400168e8
   14000698d:	test   sil,0x4
   140006991:	je     0x1400069b0
   140006993:	and    esi,0xfffffffb
   140006996:	lea    rcx,[rsp+0x300]
   14000699e:	call   QWORD PTR [rip+0xf874]        # 0x140016218
   1400069a4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400069b0:	mov    edi,DWORD PTR [rsp+0xe0]
   1400069b7:	test   sil,0x10
   1400069bb:	je     0x1400069ce
   1400069bd:	lea    rcx,[rsp+0x2c0]
   1400069c5:	and    esi,0xffffffef
   1400069c8:	call   QWORD PTR [rip+0xf84a]        # 0x140016218
   1400069ce:	lea    rcx,[rsp+0x200]
   1400069d6:	test   edi,edi
   1400069d8:	je     0x140007144
   1400069de:	call   QWORD PTR [rip+0xfab4]        # 0x140016498
   1400069e4:	cmp    eax,0x5
   1400069e7:	jne    0x140007123
   1400069ed:	lea    rdx,[rsp+0x60]
   1400069f2:	lea    rcx,[rsp+0x200]
   1400069fa:	call   QWORD PTR [rip+0xfa90]        # 0x140016490
   140006a00:	mov    rcx,QWORD PTR [rsp+0x40]
   140006a05:	mov    QWORD PTR [rsp+0x80],rcx
   140006a0d:	mov    eax,DWORD PTR [rcx]
   140006a0f:	test   eax,eax
   140006a11:	je     0x140006a1e
   140006a13:	cmp    eax,0xffffffff
   140006a16:	je     0x140006a86
   140006a18:	lock add DWORD PTR [rcx],0x1
   140006a1c:	jmp    0x140006a7e
   140006a1e:	mov    edx,DWORD PTR [rcx+0x4]
   140006a21:	lea    rcx,[rsp+0x80]
   140006a29:	call   QWORD PTR [rip+0xf8f1]        # 0x140016320
   140006a2f:	mov    rcx,QWORD PTR [rsp+0x80]
   140006a37:	mov    rdx,QWORD PTR [rsp+0x40]
   140006a3c:	movsxd rax,DWORD PTR [rdx+0x8]
   140006a40:	lea    rbx,[rdx+rax*8+0x10]
   140006a45:	movsxd rax,DWORD PTR [rcx+0xc]
   140006a49:	lea    rbp,[rcx+rax*8+0x10]
   140006a4e:	movsxd rax,DWORD PTR [rcx+0x8]
   140006a52:	lea    rdi,[rcx+rax*8+0x10]
   140006a57:	cmp    rdi,rbp
   140006a5a:	je     0x140006a86
   140006a5c:	nop    DWORD PTR [rax+0x0]
   140006a60:	test   rdi,rdi
   140006a63:	je     0x140006a71
   140006a65:	mov    rdx,rbx
   140006a68:	mov    rcx,rdi
   140006a6b:	call   QWORD PTR [rip+0xfacf]        # 0x140016540
   140006a71:	add    rdi,0x8
   140006a75:	add    rbx,0x8
   140006a79:	cmp    rdi,rbp
   140006a7c:	jne    0x140006a60
   140006a7e:	mov    rcx,QWORD PTR [rsp+0x80]
   140006a86:	mov    DWORD PTR [rsp+0x88],0x0
   140006a91:	movsxd rax,DWORD PTR [rcx+0x8]
   140006a95:	lea    rdi,[rcx+rax*8+0x10]
   140006a9a:	mov    QWORD PTR [rsp+0x90],rdi
   140006aa2:	movsxd rax,DWORD PTR [rcx+0xc]
   140006aa6:	lea    rdx,[rcx+rax*8+0x10]
   140006aab:	mov    QWORD PTR [rsp+0x98],rdx
   140006ab3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006ac0:	mov    eax,0x1
   140006ac5:	mov    DWORD PTR [rsp+0x88],eax
   140006acc:	cmp    rdi,rdx
   140006acf:	je     0x140006b57
   140006ad5:	test   eax,eax
   140006ad7:	je     0x140006b36
   140006ad9:	lea    rcx,[rsp+0x60]
   140006ade:	mov    rdx,rdi
   140006ae1:	call   QWORD PTR [rip+0xf9a1]        # 0x140016488
   140006ae7:	test   al,al
   140006ae9:	je     0x140006b0d
   140006aeb:	lea    rdx,[rsp+0x278]
   140006af3:	lea    rcx,[rsp+0x60]
   140006af8:	mov    r8,rdi
   140006afb:	or     esi,0x20
   140006afe:	call   QWORD PTR [rip+0xf97c]        # 0x140016480
   140006b04:	mov    rcx,rax
   140006b07:	call   QWORD PTR [rip+0xf98b]        # 0x140016498
   140006b0d:	test   sil,0x20
   140006b11:	je     0x140006b24
   140006b13:	lea    rcx,[rsp+0x278]
   140006b1b:	and    esi,0xffffffdf
   140006b1e:	call   QWORD PTR [rip+0xf954]        # 0x140016478
   140006b24:	mov    eax,DWORD PTR [rsp+0x88]
   140006b2b:	dec    eax
   140006b2d:	mov    DWORD PTR [rsp+0x88],eax
   140006b34:	jmp    0x140006ad5
   140006b36:	mov    rdi,QWORD PTR [rsp+0x90]
   140006b3e:	mov    rdx,QWORD PTR [rsp+0x98]
   140006b46:	add    rdi,0x8
   140006b4a:	mov    QWORD PTR [rsp+0x90],rdi
   140006b52:	jmp    0x140006ac0
   140006b57:	mov    rbx,QWORD PTR [rsp+0x80]
   140006b5f:	mov    eax,DWORD PTR [rbx]
   140006b61:	test   eax,eax
   140006b63:	je     0x140006b7d
   140006b65:	cmp    eax,0xffffffff
   140006b68:	je     0x140006bbb
   140006b6a:	lock add DWORD PTR [rbx],0xffffffff
   140006b6e:	setne  al
   140006b71:	test   al,al
   140006b73:	jne    0x140006bbb
   140006b75:	mov    rbx,QWORD PTR [rsp+0x80]
   140006b7d:	movsxd rax,DWORD PTR [rbx+0xc]
   140006b81:	lea    rdi,[rbx+rax*8+0x10]
   140006b86:	movsxd rax,DWORD PTR [rbx+0x8]
   140006b8a:	lea    rbp,[rbx+rax*8+0x10]
   140006b8f:	cmp    rbp,rdi
   140006b92:	je     0x140006bb2
   140006b94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006ba0:	sub    rdi,0x8
   140006ba4:	mov    rcx,rdi
   140006ba7:	call   QWORD PTR [rip+0xfd8b]        # 0x140016938
   140006bad:	cmp    rdi,rbp
   140006bb0:	jne    0x140006ba0
   140006bb2:	mov    rcx,rbx
   140006bb5:	call   QWORD PTR [rip+0xf6ed]        # 0x1400162a8
   140006bbb:	or     rcx,0xffffffffffffffff
   140006bbf:	lea    rbx,[rip+0x10376]        # 0x140016f3c
   140006bc6:	xor    eax,eax
   140006bc8:	mov    rdi,rbx
   140006bcb:	mov    QWORD PTR [rsp+0x1f8],rbx
   140006bd3:	repnz scas al,BYTE PTR es:[rdi]
   140006bd5:	not    rcx
   140006bd8:	dec    rcx
   140006bdb:	mov    DWORD PTR [rsp+0x1f0],ecx
   140006be2:	lea    rcx,[rsp+0x198]
   140006bea:	call   QWORD PTR [rip+0xf610]        # 0x140016200
   140006bf0:	lea    rdx,[rip+0x101f5]        # 0x140016dec
   140006bf7:	lea    rcx,[rsp+0x148]
   140006bff:	mov    r8d,0x4
   140006c05:	mov    rdi,rax
   140006c08:	call   QWORD PTR [rip+0xfd1a]        # 0x140016928
   140006c0e:	lea    rdx,[rsp+0x260]
   140006c16:	lea    rcx,[rsp+0x60]
   140006c1b:	mov    r8,rax
   140006c1e:	call   QWORD PTR [rip+0xf85c]        # 0x140016480
   140006c24:	lea    rdx,[rsp+0x1b8]
   140006c2c:	mov    r8,rdi
   140006c2f:	mov    rcx,rax
   140006c32:	call   QWORD PTR [rip+0xf838]        # 0x140016470
   140006c38:	lea    rdx,[rsp+0x250]
   140006c40:	movaps xmm0,XMMWORD PTR [rsp+0x1f0]
   140006c48:	mov    rcx,rax
   140006c4b:	movdqa XMMWORD PTR [rsp+0x250],xmm0
   140006c54:	call   QWORD PTR [rip+0xfcd6]        # 0x140016930
   140006c5a:	lea    rcx,[rsp+0x1b8]
   140006c62:	test   al,al
   140006c64:	sete   dil
   140006c68:	call   QWORD PTR [rip+0xfcca]        # 0x140016938
   140006c6e:	lea    rcx,[rsp+0x260]
   140006c76:	call   QWORD PTR [rip+0xf7fc]        # 0x140016478
   140006c7c:	lea    rcx,[rsp+0x148]
   140006c84:	call   QWORD PTR [rip+0xfcae]        # 0x140016938
   140006c8a:	lea    rcx,[rsp+0x198]
   140006c92:	call   QWORD PTR [rip+0xfca0]        # 0x140016938
   140006c98:	test   dil,dil
   140006c9b:	jne    0x140007118
   140006ca1:	lea    rcx,[rsp+0x1d8]
   140006ca9:	call   QWORD PTR [rip+0xf551]        # 0x140016200
   140006caf:	lea    rdx,[rip+0xfece]        # 0x140016b84
   140006cb6:	lea    rcx,[rsp+0x158]
   140006cbe:	mov    r8d,0x4
   140006cc4:	mov    rdi,rax
   140006cc7:	call   QWORD PTR [rip+0xfc5b]        # 0x140016928
   140006ccd:	lea    rdx,[rsp+0x2a8]
   140006cd5:	lea    rcx,[rsp+0x60]
   140006cda:	mov    r8,rax
   140006cdd:	call   QWORD PTR [rip+0xf79d]        # 0x140016480
   140006ce3:	lea    rdx,[rsp+0x30]
   140006ce8:	mov    r8,rdi
   140006ceb:	mov    rcx,rax
   140006cee:	call   QWORD PTR [rip+0xf77c]        # 0x140016470
   140006cf4:	lea    rcx,[rsp+0x2a8]
   140006cfc:	call   QWORD PTR [rip+0xf776]        # 0x140016478
   140006d02:	lea    rcx,[rsp+0x158]
   140006d0a:	call   QWORD PTR [rip+0xfc28]        # 0x140016938
   140006d10:	lea    rcx,[rsp+0x1d8]
   140006d18:	call   QWORD PTR [rip+0xfc1a]        # 0x140016938
   140006d1e:	lea    rcx,[rsp+0x1a8]
   140006d26:	call   QWORD PTR [rip+0xf4d4]        # 0x140016200
   140006d2c:	lea    rdx,[rip+0x1021d]        # 0x140016f50
   140006d33:	lea    rcx,[rsp+0x168]
   140006d3b:	mov    r8d,0x7
   140006d41:	mov    rdi,rax
   140006d44:	call   QWORD PTR [rip+0xfbde]        # 0x140016928
   140006d4a:	lea    rdx,[rsp+0x290]
   140006d52:	lea    rcx,[rsp+0x60]
   140006d57:	mov    r8,rax
   140006d5a:	call   QWORD PTR [rip+0xf720]        # 0x140016480
   140006d60:	lea    rdx,[rsp+0x38]
   140006d65:	mov    r8,rdi
   140006d68:	mov    rcx,rax
   140006d6b:	call   QWORD PTR [rip+0xf6ff]        # 0x140016470
   140006d71:	lea    rcx,[rsp+0x290]
   140006d79:	call   QWORD PTR [rip+0xf6f9]        # 0x140016478
   140006d7f:	lea    rcx,[rsp+0x168]
   140006d87:	call   QWORD PTR [rip+0xfbab]        # 0x140016938
   140006d8d:	lea    rcx,[rsp+0x1a8]
   140006d95:	call   QWORD PTR [rip+0xfb9d]        # 0x140016938
   140006d9b:	mov    rdx,QWORD PTR [rsp+0x30]
   140006da0:	cmp    DWORD PTR [rdx+0x4],0x0
   140006da4:	je     0x140007102
   140006daa:	lea    rdx,[rsp+0x30]
   140006daf:	mov    r8d,0x1
   140006db5:	mov    rcx,r14
   140006db8:	call   QWORD PTR [rip+0xfb32]        # 0x1400168f0
   140006dbe:	test   al,al
   140006dc0:	jne    0x140007102
   140006dc6:	mov    rax,QWORD PTR [rsp+0x38]
   140006dcb:	cmp    DWORD PTR [rax+0x4],0x0
   140006dcf:	je     0x140007102
   140006dd5:	or     rcx,0xffffffffffffffff
   140006dd9:	xor    eax,eax
   140006ddb:	mov    rdi,r12
   140006dde:	repnz scas al,BYTE PTR es:[rdi]
   140006de0:	mov    QWORD PTR [rsp+0xc8],r12
   140006de8:	lea    rdx,[rsp+0x240]
   140006df0:	not    rcx
   140006df3:	lea    r8d,[rax+0x1]
   140006df7:	dec    rcx
   140006dfa:	mov    DWORD PTR [rsp+0xc0],ecx
   140006e01:	lea    rcx,[rsp+0x30]
   140006e06:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140006e0e:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   140006e17:	call   QWORD PTR [rip+0xf64b]        # 0x140016468
   140006e1d:	test   al,al
   140006e1f:	je     0x140006f11
   140006e25:	cmp    BYTE PTR [rip+0x16294],0x0        # 0x14001d0c0
   140006e2c:	je     0x140007102
   140006e32:	lea    rdx,[rsp+0x38]
   140006e37:	lea    rcx,[rsp+0x130]
   140006e3f:	call   QWORD PTR [rip+0xf6fb]        # 0x140016540
   140006e45:	lea    rdx,[rsp+0x108]
   140006e4d:	mov    rcx,rax
   140006e50:	call   QWORD PTR [rip+0xf46a]        # 0x1400162c0
   140006e56:	mov    rcx,rax
   140006e59:	call   QWORD PTR [rip+0xfaf1]        # 0x140016950
   140006e5f:	lea    rdx,[rsp+0x30]
   140006e64:	lea    rcx,[rsp+0x1c8]
   140006e6c:	mov    rbx,rax
   140006e6f:	call   QWORD PTR [rip+0xf6cb]        # 0x140016540
   140006e75:	lea    rdx,[rsp+0x178]
   140006e7d:	mov    rcx,rax
   140006e80:	call   QWORD PTR [rip+0xf43a]        # 0x1400162c0
   140006e86:	mov    rcx,rax
   140006e89:	call   QWORD PTR [rip+0xfac1]        # 0x140016950
   140006e8f:	mov    rcx,QWORD PTR [rip+0xf1c2]        # 0x140016058
   140006e96:	lea    rdx,[rip+0x10083]        # 0x140016f20
   140006e9d:	mov    rdi,rax
   140006ea0:	call   0x1400016a0
   140006ea5:	mov    rdx,rdi
   140006ea8:	mov    rcx,rax
   140006eab:	call   0x1400016a0
   140006eb0:	lea    rdx,[rip+0x10061]        # 0x140016f18
   140006eb7:	mov    rcx,rax
   140006eba:	call   0x1400016a0
   140006ebf:	mov    rdx,rbx
   140006ec2:	mov    rcx,rax
   140006ec5:	call   0x1400016a0
   140006eca:	mov    rdx,QWORD PTR [rip+0xf18f]        # 0x140016060
   140006ed1:	mov    rcx,rax
   140006ed4:	call   QWORD PTR [rip+0xf18e]        # 0x140016068
   140006eda:	lea    rcx,[rsp+0x178]
   140006ee2:	call   QWORD PTR [rip+0xf390]        # 0x140016278
   140006ee8:	lea    rcx,[rsp+0x1c8]
   140006ef0:	call   QWORD PTR [rip+0xfa42]        # 0x140016938
   140006ef6:	lea    rcx,[rsp+0x108]
   140006efe:	call   QWORD PTR [rip+0xf374]        # 0x140016278
   140006f04:	lea    rcx,[rsp+0x130]
   140006f0c:	jmp    0x1400070fc
   140006f11:	cmp    BYTE PTR [rip+0x161a8],0x0        # 0x14001d0c0
   140006f18:	je     0x140006ffe
   140006f1e:	lea    rdx,[rsp+0x38]
   140006f23:	lea    rcx,[rsp+0x170]
   140006f2b:	call   QWORD PTR [rip+0xf60f]        # 0x140016540
   140006f31:	lea    rdx,[rsp+0x160]
   140006f39:	mov    rcx,rax
   140006f3c:	call   QWORD PTR [rip+0xf37e]        # 0x1400162c0
   140006f42:	mov    rcx,rax
   140006f45:	call   QWORD PTR [rip+0xfa05]        # 0x140016950
   140006f4b:	lea    rdx,[rsp+0x30]
   140006f50:	lea    rcx,[rsp+0x150]
   140006f58:	mov    rbx,rax
   140006f5b:	call   QWORD PTR [rip+0xf5df]        # 0x140016540
   140006f61:	lea    rdx,[rsp+0x140]
   140006f69:	mov    rcx,rax
   140006f6c:	call   QWORD PTR [rip+0xf34e]        # 0x1400162c0
   140006f72:	mov    rcx,rax
   140006f75:	call   QWORD PTR [rip+0xf9d5]        # 0x140016950
   140006f7b:	mov    rcx,QWORD PTR [rip+0xf0d6]        # 0x140016058
   140006f82:	lea    rdx,[rip+0xff77]        # 0x140016f00
   140006f89:	mov    rdi,rax
   140006f8c:	call   0x1400016a0
   140006f91:	mov    rdx,rdi
   140006f94:	mov    rcx,rax
   140006f97:	call   0x1400016a0
   140006f9c:	lea    rdx,[rip+0xff75]        # 0x140016f18
   140006fa3:	mov    rcx,rax
   140006fa6:	call   0x1400016a0
   140006fab:	mov    rdx,rbx
   140006fae:	mov    rcx,rax
   140006fb1:	call   0x1400016a0
   140006fb6:	mov    rdx,QWORD PTR [rip+0xf0a3]        # 0x140016060
   140006fbd:	mov    rcx,rax
   140006fc0:	call   QWORD PTR [rip+0xf0a2]        # 0x140016068
   140006fc6:	lea    rcx,[rsp+0x140]
   140006fce:	call   QWORD PTR [rip+0xf2a4]        # 0x140016278
   140006fd4:	lea    rcx,[rsp+0x150]
   140006fdc:	call   QWORD PTR [rip+0xf956]        # 0x140016938
   140006fe2:	lea    rcx,[rsp+0x160]
   140006fea:	call   QWORD PTR [rip+0xf288]        # 0x140016278
   140006ff0:	lea    rcx,[rsp+0x170]
   140006ff8:	call   QWORD PTR [rip+0xf93a]        # 0x140016938
   140006ffe:	mov    rax,QWORD PTR [rsp+0x30]
   140007003:	mov    BYTE PTR [rsp+0x20],0x20
   140007008:	xor    r8d,r8d
   14000700b:	mov    edx,DWORD PTR [rax+0x4]
   14000700e:	mov    rax,QWORD PTR [rsp+0x38]
   140007013:	mov    ecx,DWORD PTR [rax+0x4]
   140007016:	lea    edx,[rcx+rdx*1+0x1]
   14000701a:	lea    rcx,[rsp+0x70]
   14000701f:	call   QWORD PTR [rip+0xf27b]        # 0x1400162a0
   140007025:	lea    rcx,[rsp+0x70]
   14000702a:	call   QWORD PTR [rip+0xf8d8]        # 0x140016908
   140007030:	mov    rcx,QWORD PTR [rsp+0x30]
   140007035:	movsxd rdi,DWORD PTR [rcx+0x4]
   140007039:	lea    rcx,[rsp+0x30]
   14000703e:	mov    rbx,rax
   140007041:	add    rdi,rdi
   140007044:	call   QWORD PTR [rip+0xf8be]        # 0x140016908
   14000704a:	mov    r8,rdi
   14000704d:	mov    rdx,rax
   140007050:	mov    rcx,rbx
   140007053:	call   0x140015084
   140007058:	movzx  edx,BYTE PTR [rsp+0x20]
   14000705d:	lea    rcx,[rsp+0x48]
   140007062:	add    rbx,rdi
   140007065:	call   QWORD PTR [rip+0xf8ad]        # 0x140016918
   14000706b:	movzx  edx,WORD PTR [rsp+0x48]
   140007070:	mov    WORD PTR [rbx],dx
   140007073:	mov    rax,QWORD PTR [rsp+0x38]
   140007078:	lea    rcx,[rsp+0x38]
   14000707d:	movsxd rdi,DWORD PTR [rax+0x4]
   140007081:	add    rdi,rdi
   140007084:	call   QWORD PTR [rip+0xf87e]        # 0x140016908
   14000708a:	lea    rcx,[rbx+0x2]
   14000708e:	mov    rdx,rax
   140007091:	mov    r8,rdi
   140007094:	call   0x140015084
   140007099:	mov    rax,QWORD PTR [r13+0x0]
   14000709d:	mov    ecx,DWORD PTR [rax]
   14000709f:	cmp    ecx,0x1
   1400070a2:	je     0x1400070d0
   1400070a4:	test   ecx,ecx
   1400070a6:	je     0x1400070d0
   1400070a8:	mov    edx,0x7fffffff
   1400070ad:	mov    r8d,0x1
   1400070b3:	mov    rcx,r13
   1400070b6:	call   0x140002c00
   1400070bb:	test   rax,rax
   1400070be:	je     0x1400070f7
   1400070c0:	lea    rdx,[rsp+0x70]
   1400070c5:	mov    rcx,rax
   1400070c8:	call   QWORD PTR [rip+0xf472]        # 0x140016540
   1400070ce:	jmp    0x1400070f7
   1400070d0:	lea    rdx,[rsp+0x70]
   1400070d5:	lea    rcx,[rsp+0x180]
   1400070dd:	call   QWORD PTR [rip+0xf45d]        # 0x140016540
   1400070e3:	mov    rcx,r13
   1400070e6:	call   QWORD PTR [rip+0xf294]        # 0x140016380
   1400070ec:	mov    rcx,QWORD PTR [rsp+0x180]
   1400070f4:	mov    QWORD PTR [rax],rcx
   1400070f7:	lea    rcx,[rsp+0x70]
   1400070fc:	call   QWORD PTR [rip+0xf836]        # 0x140016938
   140007102:	lea    rcx,[rsp+0x38]
   140007107:	call   QWORD PTR [rip+0xf82b]        # 0x140016938
   14000710d:	lea    rcx,[rsp+0x30]
   140007112:	call   QWORD PTR [rip+0xf820]        # 0x140016938
   140007118:	lea    rcx,[rsp+0x60]
   14000711d:	call   QWORD PTR [rip+0xf33d]        # 0x140016460
   140007123:	dec    DWORD PTR [rsp+0xe0]
   14000712a:	test   sil,0x8
   14000712e:	je     0x1400069b0
   140007134:	and    esi,0xfffffff7
   140007137:	lea    rcx,[rsp+0x2e0]
   14000713f:	jmp    0x14000699e
   140007144:	call   QWORD PTR [rip+0xf32e]        # 0x140016478
   14000714a:	inc    DWORD PTR [rsp+0xf0]
   140007151:	test   sil,0x1
   140007155:	je     0x140006921
   14000715b:	lea    rcx,[rsp+0x2f0]
   140007163:	and    esi,0xfffffffe
   140007166:	call   QWORD PTR [rip+0xf0ac]        # 0x140016218
   14000716c:	jmp    0x140006921
   140007171:	lea    rcx,[rsp+0xd0]
   140007179:	call   QWORD PTR [rip+0xf099]        # 0x140016218
   14000717f:	mov    rbx,QWORD PTR [rsp+0x40]
   140007184:	mov    eax,DWORD PTR [rbx]
   140007186:	test   eax,eax
   140007188:	je     0x14000719f
   14000718a:	cmp    eax,0xffffffff
   14000718d:	je     0x1400071db
   14000718f:	lock add DWORD PTR [rbx],0xffffffff
   140007193:	setne  al
   140007196:	test   al,al
   140007198:	jne    0x1400071db
   14000719a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000719f:	movsxd rax,DWORD PTR [rbx+0xc]
   1400071a3:	lea    rdi,[rbx+rax*8+0x10]
   1400071a8:	movsxd rax,DWORD PTR [rbx+0x8]
   1400071ac:	lea    rsi,[rbx+rax*8+0x10]
   1400071b1:	cmp    rsi,rdi
   1400071b4:	je     0x1400071d2
   1400071b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400071c0:	sub    rdi,0x8
   1400071c4:	mov    rcx,rdi
   1400071c7:	call   QWORD PTR [rip+0xf76b]        # 0x140016938
   1400071cd:	cmp    rdi,rsi
   1400071d0:	jne    0x1400071c0
   1400071d2:	mov    rcx,rbx
   1400071d5:	call   QWORD PTR [rip+0xf0cd]        # 0x1400162a8
   1400071db:	mov    rdx,QWORD PTR [r13+0x0]
   1400071df:	mov    eax,DWORD PTR [rdx+0x8]
   1400071e2:	cmp    DWORD PTR [rdx+0xc],eax
   1400071e5:	jne    0x14000729f
   1400071eb:	or     rcx,0xffffffffffffffff
   1400071ef:	lea    rdx,[rip+0xfcfa]        # 0x140016ef0
   1400071f6:	xor    eax,eax
   1400071f8:	mov    rdi,rdx
   1400071fb:	mov    QWORD PTR [rsp+0xc8],rdx
   140007203:	lea    rdx,[rsp+0x220]
   14000720b:	repnz scas al,BYTE PTR es:[rdi]
   14000720d:	not    rcx
   140007210:	dec    rcx
   140007213:	mov    DWORD PTR [rsp+0xc0],ecx
   14000721a:	lea    rcx,[rsp+0x78]
   14000721f:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140007227:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   140007230:	call   QWORD PTR [rip+0xefda]        # 0x140016210
   140007236:	mov    rcx,QWORD PTR [r13+0x0]
   14000723a:	mov    eax,DWORD PTR [rcx]
   14000723c:	cmp    eax,0x1
   14000723f:	je     0x14000726d
   140007241:	test   eax,eax
   140007243:	je     0x14000726d
   140007245:	mov    edx,0x7fffffff
   14000724a:	mov    r8d,0x1
   140007250:	mov    rcx,r13
   140007253:	call   0x140002c00
   140007258:	test   rax,rax
   14000725b:	je     0x140007294
   14000725d:	lea    rdx,[rsp+0x78]
   140007262:	mov    rcx,rax
   140007265:	call   QWORD PTR [rip+0xf2d5]        # 0x140016540
   14000726b:	jmp    0x140007294
   14000726d:	lea    rdx,[rsp+0x78]
   140007272:	lea    rcx,[rsp+0x190]
   14000727a:	call   QWORD PTR [rip+0xf2c0]        # 0x140016540
   140007280:	mov    rcx,r13
   140007283:	call   QWORD PTR [rip+0xf0f7]        # 0x140016380
   140007289:	mov    rcx,QWORD PTR [rsp+0x190]
   140007291:	mov    QWORD PTR [rax],rcx
   140007294:	lea    rcx,[rsp+0x78]
   140007299:	call   QWORD PTR [rip+0xf699]        # 0x140016938
   14000729f:	lea    rcx,[rsp+0x50]
   1400072a4:	call   QWORD PTR [rip+0xf1ae]        # 0x140016458
   1400072aa:	mov    rcx,r15
   1400072ad:	call   QWORD PTR [rip+0xf685]        # 0x140016938
   1400072b3:	mov    al,0x1
   1400072b5:	jmp    0x14000732d
   1400072b7:	lea    rdx,[rsp+0x338]
   1400072bf:	mov    rcx,r15
   1400072c2:	call   QWORD PTR [rip+0xf1e8]        # 0x1400164b0
   1400072c8:	mov    rcx,QWORD PTR [rip+0xed89]        # 0x140016058
   1400072cf:	lea    rdx,[rip+0xfc92]        # 0x140016f68
   1400072d6:	mov    rdi,rax
   1400072d9:	call   0x1400016a0
   1400072de:	mov    rdx,rdi
   1400072e1:	mov    rcx,rax
   1400072e4:	call   QWORD PTR [rip+0xee06]        # 0x1400160f0
   1400072ea:	lea    rdx,[rip+0xfbe7]        # 0x140016ed8
   1400072f1:	mov    rcx,rax
   1400072f4:	call   0x1400016a0
   1400072f9:	mov    rdx,QWORD PTR [rip+0xed60]        # 0x140016060
   140007300:	mov    rcx,rax
   140007303:	call   QWORD PTR [rip+0xed5f]        # 0x140016068
   140007309:	lea    rcx,[rsp+0x338]
   140007311:	call   QWORD PTR [rip+0xedc9]        # 0x1400160e0
   140007317:	lea    rcx,[rsp+0x50]
   14000731c:	call   QWORD PTR [rip+0xf136]        # 0x140016458
   140007322:	mov    rcx,r15
   140007325:	call   QWORD PTR [rip+0xf60d]        # 0x140016938
   14000732b:	xor    al,al
   14000732d:	lea    r11,[rsp+0x390]
   140007335:	mov    rbx,QWORD PTR [r11+0x30]
   140007339:	mov    rbp,QWORD PTR [r11+0x38]
   14000733d:	mov    rsi,QWORD PTR [r11+0x40]
   140007341:	mov    rsp,r11
   140007344:	pop    r15
   140007346:	pop    r14
   140007348:	pop    r13
   14000734a:	pop    r12
   14000734c:	pop    rdi
   14000734d:	ret    
   14000734e:	int3   
   14000734f:	int3   
   140007350:	mov    QWORD PTR [rsp+0x8],rbx
   140007355:	mov    QWORD PTR [rsp+0x10],rsi
   14000735a:	push   rdi
   14000735b:	sub    rsp,0x90
   140007362:	mov    rdi,r8
   140007365:	mov    rsi,rdx
   140007368:	mov    rbx,rcx
   14000736b:	call   QWORD PTR [rip+0xf17f]        # 0x1400164f0
   140007371:	test   al,al
   140007373:	jne    0x1400073c7
   140007375:	lea    rdx,[rsp+0x38]
   14000737a:	mov    rcx,rbx
   14000737d:	call   QWORD PTR [rip+0xf12d]        # 0x1400164b0
   140007383:	mov    rcx,QWORD PTR [rip+0xecce]        # 0x140016058
   14000738a:	lea    rdx,[rip+0xfc1f]        # 0x140016fb0
   140007391:	mov    rbx,rax
   140007394:	call   0x1400016a0
   140007399:	mov    rdx,rbx
   14000739c:	mov    rcx,rax
   14000739f:	call   QWORD PTR [rip+0xed4b]        # 0x1400160f0
   1400073a5:	mov    rdx,QWORD PTR [rip+0xecb4]        # 0x140016060
   1400073ac:	mov    rcx,rax
   1400073af:	call   QWORD PTR [rip+0xecb3]        # 0x140016068
   1400073b5:	lea    rcx,[rsp+0x38]
   1400073ba:	call   QWORD PTR [rip+0xed20]        # 0x1400160e0
   1400073c0:	xor    al,al
   1400073c2:	jmp    0x1400074e9
   1400073c7:	lea    rcx,[rsp+0x28]
   1400073cc:	mov    rdx,rbx
   1400073cf:	call   QWORD PTR [rip+0xf113]        # 0x1400164e8
   1400073d5:	lea    rcx,[rsp+0x28]
   1400073da:	mov    edx,0x1
   1400073df:	call   QWORD PTR [rip+0xf0fb]        # 0x1400164e0
   1400073e5:	lea    rcx,[rsp+0x28]
   1400073ea:	test   al,al
   1400073ec:	jne    0x140007499
   1400073f2:	lea    rdx,[rsp+0x20]
   1400073f7:	call   QWORD PTR [rip+0xf0db]        # 0x1400164d8
   1400073fd:	lea    rdx,[rsp+0x60]
   140007402:	mov    rcx,rax
   140007405:	call   QWORD PTR [rip+0xf0a5]        # 0x1400164b0
   14000740b:	lea    rdx,[rsp+0x38]
   140007410:	mov    rcx,rbx
   140007413:	mov    rdi,rax
   140007416:	call   QWORD PTR [rip+0xf094]        # 0x1400164b0
   14000741c:	mov    rcx,QWORD PTR [rip+0xec35]        # 0x140016058
   140007423:	lea    rdx,[rip+0xfb86]        # 0x140016fb0
   14000742a:	mov    rbx,rax
   14000742d:	call   0x1400016a0
   140007432:	mov    rdx,rbx
   140007435:	mov    rcx,rax
   140007438:	call   QWORD PTR [rip+0xecb2]        # 0x1400160f0
   14000743e:	lea    rdx,[rip+0xfb67]        # 0x140016fac
   140007445:	mov    rcx,rax
   140007448:	call   0x1400016a0
   14000744d:	mov    rdx,rdi
   140007450:	mov    rcx,rax
   140007453:	call   QWORD PTR [rip+0xec97]        # 0x1400160f0
   140007459:	mov    rdx,QWORD PTR [rip+0xec00]        # 0x140016060
   140007460:	mov    rcx,rax
   140007463:	call   QWORD PTR [rip+0xebff]        # 0x140016068
   140007469:	lea    rcx,[rsp+0x38]
   14000746e:	call   QWORD PTR [rip+0xec6c]        # 0x1400160e0
   140007474:	lea    rcx,[rsp+0x60]
   140007479:	call   QWORD PTR [rip+0xec61]        # 0x1400160e0
   14000747f:	lea    rcx,[rsp+0x20]
   140007484:	call   QWORD PTR [rip+0xf4ae]        # 0x140016938
   14000748a:	lea    rcx,[rsp+0x28]
   14000748f:	call   QWORD PTR [rip+0xf03b]        # 0x1400164d0
   140007495:	xor    al,al
   140007497:	jmp    0x1400074e9
   140007499:	lea    rdx,[rsp+0xb8]
   1400074a1:	call   QWORD PTR [rip+0xf021]        # 0x1400164c8
   1400074a7:	lea    rcx,[rsp+0x20]
   1400074ac:	mov    rdx,rbx
   1400074af:	call   QWORD PTR [rip+0xf08b]        # 0x140016540
   1400074b5:	lea    rdx,[rsp+0xb8]
   1400074bd:	mov    r9,rdi
   1400074c0:	mov    rcx,rax
   1400074c3:	mov    r8,rsi
   1400074c6:	call   0x1400062b0
   1400074cb:	lea    rcx,[rsp+0xb8]
   1400074d3:	movzx  ebx,al
   1400074d6:	call   QWORD PTR [rip+0xed9c]        # 0x140016278
   1400074dc:	lea    rcx,[rsp+0x28]
   1400074e1:	call   QWORD PTR [rip+0xefe9]        # 0x1400164d0
   1400074e7:	mov    al,bl
   1400074e9:	lea    r11,[rsp+0x90]
   1400074f1:	mov    rbx,QWORD PTR [r11+0x10]
   1400074f5:	mov    rsi,QWORD PTR [r11+0x18]
   1400074f9:	mov    rsp,r11
   1400074fc:	pop    rdi
   1400074fd:	ret    
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	mov    QWORD PTR [rsp+0x8],rbx
   140007505:	mov    QWORD PTR [rsp+0x20],r9
   14000750a:	mov    QWORD PTR [rsp+0x18],r8
   14000750f:	mov    QWORD PTR [rsp+0x10],rdx
   140007514:	push   rbp
   140007515:	push   rsi
   140007516:	push   rdi
   140007517:	push   r12
   140007519:	push   r13
   14000751b:	push   r14
   14000751d:	push   r15
   14000751f:	sub    rsp,0x220
   140007526:	mov    r14,rcx
   140007529:	lea    rcx,[rsp+0x140]
   140007531:	xor    ebp,ebp
   140007533:	mov    DWORD PTR [rsp+0x88],ebp
   14000753a:	call   QWORD PTR [rip+0xf038]        # 0x140016578
   140007540:	lea    rcx,[rsp+0x48]
   140007545:	mov    rdx,rax
   140007548:	call   QWORD PTR [rip+0xf022]        # 0x140016570
   14000754e:	lea    rcx,[rsp+0x140]
   140007556:	call   QWORD PTR [rip+0xf3dc]        # 0x140016938
   14000755c:	xor    eax,eax
   14000755e:	or     r12,0xffffffffffffffff
   140007562:	lea    rdi,[rip+0xfb1f]        # 0x140017088
   140007569:	mov    rcx,r12
   14000756c:	lea    rdx,[rsp+0x158]
   140007574:	repnz scas al,BYTE PTR es:[rdi]
   140007576:	not    rcx
   140007579:	dec    rcx
   14000757c:	mov    rbx,rcx
   14000757f:	mov    DWORD PTR [rsp+0x210],ecx
   140007586:	lea    rcx,[rsp+0x48]
   14000758b:	call   QWORD PTR [rip+0xefd7]        # 0x140016568
   140007591:	lea    rcx,[rsp+0xc8]
   140007599:	xor    r8d,r8d
   14000759c:	mov    rdx,QWORD PTR [rax]
   14000759f:	mov    rsi,rax
   1400075a2:	mov    edx,DWORD PTR [rdx+0x4]
   1400075a5:	add    edx,ebx
   1400075a7:	call   QWORD PTR [rip+0xecf3]        # 0x1400162a0
   1400075ad:	lea    rcx,[rsp+0xc8]
   1400075b5:	call   QWORD PTR [rip+0xf34d]        # 0x140016908
   1400075bb:	lea    rcx,[rip+0xfac6]        # 0x140017088
   1400075c2:	mov    edx,ebx
   1400075c4:	mov    r8,rax
   1400075c7:	mov    rdi,rax
   1400075ca:	call   QWORD PTR [rip+0xf340]        # 0x140016910
   1400075d0:	mov    rax,QWORD PTR [rsi]
   1400075d3:	movsxd rdx,ebx
   1400075d6:	lea    rbx,[rdi+rdx*2]
   1400075da:	movsxd rdi,DWORD PTR [rax+0x4]
   1400075de:	mov    rcx,rsi
   1400075e1:	add    rdi,rdi
   1400075e4:	call   QWORD PTR [rip+0xf31e]        # 0x140016908
   1400075ea:	mov    r8,rdi
   1400075ed:	mov    rdx,rax
   1400075f0:	mov    rcx,rbx
   1400075f3:	call   0x140015084
   1400075f8:	lea    rdx,[rsp+0x148]
   140007600:	lea    rcx,[rsp+0x48]
   140007605:	call   QWORD PTR [rip+0xef55]        # 0x140016560
   14000760b:	lea    r8,[rsp+0xc8]
   140007613:	lea    rdx,[rsp+0x40]
   140007618:	mov    rcx,rax
   14000761b:	call   QWORD PTR [rip+0xef37]        # 0x140016558
   140007621:	lea    rcx,[rsp+0x148]
   140007629:	call   QWORD PTR [rip+0xef21]        # 0x140016550
   14000762f:	lea    rcx,[rsp+0xc8]
   140007637:	call   QWORD PTR [rip+0xf2fb]        # 0x140016938
   14000763d:	lea    rcx,[rsp+0x158]
   140007645:	call   QWORD PTR [rip+0xf2ed]        # 0x140016938
   14000764b:	lea    rdx,[rip+0xfa32]        # 0x140017084
   140007652:	xor    eax,eax
   140007654:	mov    rdi,rdx
   140007657:	mov    QWORD PTR [rsp+0xd8],rdx
   14000765f:	mov    rcx,r12
   140007662:	repnz scas al,BYTE PTR es:[rdi]
   140007664:	lea    rdx,[rsp+0x1d0]
   14000766c:	not    rcx
   14000766f:	dec    rcx
   140007672:	mov    DWORD PTR [rsp+0xd0],ecx
   140007679:	lea    rcx,[rsp+0x80]
   140007681:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140007689:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   140007692:	call   QWORD PTR [rip+0xeb78]        # 0x140016210
   140007698:	xor    eax,eax
   14000769a:	lea    rdx,[rip+0xf9d7]        # 0x140017078
   1400076a1:	mov    rcx,r12
   1400076a4:	mov    rdi,rdx
   1400076a7:	repnz scas al,BYTE PTR es:[rdi]
   1400076a9:	not    rcx
   1400076ac:	dec    rcx
   1400076af:	mov    DWORD PTR [rsp+0xd0],ecx
   1400076b6:	mov    QWORD PTR [rsp+0xd8],rdx
   1400076be:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   1400076c6:	lea    rdx,[rsp+0x1e0]
   1400076ce:	lea    rcx,[rsp+0xc0]
   1400076d6:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   1400076df:	call   QWORD PTR [rip+0xeb2b]        # 0x140016210
   1400076e5:	mov    rdx,QWORD PTR [rip+0xeb34]        # 0x140016220
   1400076ec:	mov    QWORD PTR [rsp+0x28],rdx
   1400076f1:	mov    eax,DWORD PTR [rdx]
   1400076f3:	cmp    eax,0x1
   1400076f6:	je     0x140007727
   1400076f8:	test   eax,eax
   1400076fa:	je     0x140007727
   1400076fc:	lea    r8d,[rbp+0x1]
   140007700:	lea    rcx,[rsp+0x28]
   140007705:	mov    edx,0x7fffffff
   14000770a:	call   0x140002c00
   14000770f:	test   rax,rax
   140007712:	je     0x140007753
   140007714:	lea    rdx,[rsp+0xc0]
   14000771c:	mov    rcx,rax
   14000771f:	call   QWORD PTR [rip+0xee1b]        # 0x140016540
   140007725:	jmp    0x140007753
   140007727:	lea    rdx,[rsp+0xc0]
   14000772f:	lea    rcx,[rsp+0x168]
   140007737:	call   QWORD PTR [rip+0xee03]        # 0x140016540
   14000773d:	lea    rcx,[rsp+0x28]
   140007742:	call   QWORD PTR [rip+0xec38]        # 0x140016380
   140007748:	mov    rcx,QWORD PTR [rsp+0x168]
   140007750:	mov    QWORD PTR [rax],rcx
   140007753:	mov    rax,QWORD PTR [rsp+0x28]
   140007758:	mov    ecx,DWORD PTR [rax]
   14000775a:	cmp    ecx,0x1
   14000775d:	je     0x140007790
   14000775f:	test   ecx,ecx
   140007761:	je     0x140007790
   140007763:	lea    rcx,[rsp+0x28]
   140007768:	mov    edx,0x7fffffff
   14000776d:	mov    r8d,0x1
   140007773:	call   0x140002c00
   140007778:	test   rax,rax
   14000777b:	je     0x1400077bc
   14000777d:	lea    rdx,[rsp+0x80]
   140007785:	mov    rcx,rax
   140007788:	call   QWORD PTR [rip+0xedb2]        # 0x140016540
   14000778e:	jmp    0x1400077bc
   140007790:	lea    rdx,[rsp+0x80]
   140007798:	lea    rcx,[rsp+0x1b0]
   1400077a0:	call   QWORD PTR [rip+0xed9a]        # 0x140016540
   1400077a6:	lea    rcx,[rsp+0x28]
   1400077ab:	call   QWORD PTR [rip+0xebcf]        # 0x140016380
   1400077b1:	mov    rcx,QWORD PTR [rsp+0x1b0]
   1400077b9:	mov    QWORD PTR [rax],rcx
   1400077bc:	mov    rbx,QWORD PTR [rsp+0x28]
   1400077c1:	mov    QWORD PTR [rsp+0x20],rbx
   1400077c6:	mov    eax,DWORD PTR [rbx]
   1400077c8:	test   eax,eax
   1400077ca:	je     0x1400077d7
   1400077cc:	cmp    eax,0xffffffff
   1400077cf:	je     0x140007833
   1400077d1:	lock add DWORD PTR [rbx],0x1
   1400077d5:	jmp    0x14000782e
   1400077d7:	mov    edx,DWORD PTR [rbx+0x4]
   1400077da:	lea    rcx,[rsp+0x20]
   1400077df:	call   QWORD PTR [rip+0xeb3b]        # 0x140016320
   1400077e5:	mov    rdx,QWORD PTR [rsp+0x20]
   1400077ea:	mov    rbx,QWORD PTR [rsp+0x28]
   1400077ef:	movsxd rax,DWORD PTR [rdx+0xc]
   1400077f3:	lea    r13,[rdx+rax*8+0x10]
   1400077f8:	movsxd rax,DWORD PTR [rbx+0x8]
   1400077fc:	lea    rsi,[rbx+rax*8+0x10]
   140007801:	movsxd rax,DWORD PTR [rdx+0x8]
   140007805:	lea    rdi,[rdx+rax*8+0x10]
   14000780a:	cmp    rdi,r13
   14000780d:	je     0x140007833
   14000780f:	nop
   140007810:	test   rdi,rdi
   140007813:	je     0x140007821
   140007815:	mov    rdx,rsi
   140007818:	mov    rcx,rdi
   14000781b:	call   QWORD PTR [rip+0xed1f]        # 0x140016540
   140007821:	add    rdi,0x8
   140007825:	add    rsi,0x8
   140007829:	cmp    rdi,r13
   14000782c:	jne    0x140007810
   14000782e:	mov    rbx,QWORD PTR [rsp+0x28]
   140007833:	mov    eax,DWORD PTR [rbx]
   140007835:	test   eax,eax
   140007837:	je     0x140007854
   140007839:	cmp    eax,0xffffffff
   14000783c:	je     0x14000788b
   14000783e:	mov    eax,r12d
   140007841:	lock xadd DWORD PTR [rbx],eax
   140007845:	add    eax,0xffffffff
   140007848:	setne  al
   14000784b:	test   al,al
   14000784d:	jne    0x14000788b
   14000784f:	mov    rbx,QWORD PTR [rsp+0x28]
   140007854:	movsxd rax,DWORD PTR [rbx+0xc]
   140007858:	lea    rdi,[rbx+rax*8+0x10]
   14000785d:	movsxd rax,DWORD PTR [rbx+0x8]
   140007861:	lea    rsi,[rbx+rax*8+0x10]
   140007866:	cmp    rsi,rdi
   140007869:	je     0x140007882
   14000786b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007870:	sub    rdi,0x8
   140007874:	mov    rcx,rdi
   140007877:	call   QWORD PTR [rip+0xf0bb]        # 0x140016938
   14000787d:	cmp    rdi,rsi
   140007880:	jne    0x140007870
   140007882:	mov    rcx,rbx
   140007885:	call   QWORD PTR [rip+0xea1d]        # 0x1400162a8
   14000788b:	lea    rcx,[rsp+0xc0]
   140007893:	call   QWORD PTR [rip+0xf09f]        # 0x140016938
   140007899:	lea    rcx,[rsp+0x80]
   1400078a1:	call   QWORD PTR [rip+0xf091]        # 0x140016938
   1400078a7:	lea    rdx,[rsp+0x120]
   1400078af:	mov    rcx,r14
   1400078b2:	call   QWORD PTR [rip+0xf1b0]        # 0x140016a68
   1400078b8:	mov    rdi,rax
   1400078bb:	mov    rdx,QWORD PTR [rax]
   1400078be:	mov    QWORD PTR [rsp+0x58],rdx
   1400078c3:	mov    ecx,DWORD PTR [rdx]
   1400078c5:	test   ecx,ecx
   1400078c7:	je     0x1400078d4
   1400078c9:	cmp    ecx,0xffffffff
   1400078cc:	je     0x140007933
   1400078ce:	lock add DWORD PTR [rdx],0x1
   1400078d2:	jmp    0x14000792e
   1400078d4:	mov    edx,DWORD PTR [rdx+0x4]
   1400078d7:	lea    rcx,[rsp+0x58]
   1400078dc:	call   QWORD PTR [rip+0xea3e]        # 0x140016320
   1400078e2:	mov    rdx,QWORD PTR [rsp+0x58]
   1400078e7:	mov    rcx,QWORD PTR [rdi]
   1400078ea:	movsxd rax,DWORD PTR [rdx+0xc]
   1400078ee:	lea    rsi,[rdx+rax*8+0x10]
   1400078f3:	movsxd rax,DWORD PTR [rcx+0x8]
   1400078f7:	lea    rbx,[rcx+rax*8+0x10]
   1400078fc:	movsxd rax,DWORD PTR [rdx+0x8]
   140007900:	lea    rdi,[rdx+rax*8+0x10]
   140007905:	cmp    rdi,rsi
   140007908:	je     0x140007933
   14000790a:	nop    WORD PTR [rax+rax*1+0x0]
   140007910:	test   rdi,rdi
   140007913:	je     0x140007921
   140007915:	mov    rdx,rbx
   140007918:	mov    rcx,rdi
   14000791b:	call   QWORD PTR [rip+0xec1f]        # 0x140016540
   140007921:	add    rdi,0x8
   140007925:	add    rbx,0x8
   140007929:	cmp    rdi,rsi
   14000792c:	jne    0x140007910
   14000792e:	mov    rdx,QWORD PTR [rsp+0x58]
   140007933:	mov    rbx,QWORD PTR [rsp+0x120]
   14000793b:	mov    DWORD PTR [rsp+0x60],ebp
   14000793f:	movsxd rax,DWORD PTR [rdx+0x8]
   140007943:	lea    rcx,[rdx+rax*8+0x10]
   140007948:	mov    QWORD PTR [rsp+0x68],rcx
   14000794d:	movsxd rax,DWORD PTR [rdx+0xc]
   140007951:	lea    rcx,[rdx+rax*8+0x10]
   140007956:	mov    QWORD PTR [rsp+0x70],rcx
   14000795b:	mov    eax,DWORD PTR [rbx]
   14000795d:	test   eax,eax
   14000795f:	je     0x14000797f
   140007961:	cmp    eax,0xffffffff
   140007964:	je     0x1400079bb
   140007966:	mov    eax,r12d
   140007969:	lock xadd DWORD PTR [rbx],eax
   14000796d:	add    eax,0xffffffff
   140007970:	setne  al
   140007973:	test   al,al
   140007975:	jne    0x1400079bb
   140007977:	mov    rbx,QWORD PTR [rsp+0x120]
   14000797f:	movsxd rax,DWORD PTR [rbx+0xc]
   140007983:	lea    rdi,[rbx+rax*8+0x10]
   140007988:	movsxd rax,DWORD PTR [rbx+0x8]
   14000798c:	lea    rsi,[rbx+rax*8+0x10]
   140007991:	cmp    rsi,rdi
   140007994:	je     0x1400079b2
   140007996:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400079a0:	sub    rdi,0x8
   1400079a4:	mov    rcx,rdi
   1400079a7:	call   QWORD PTR [rip+0xef8b]        # 0x140016938
   1400079ad:	cmp    rdi,rsi
   1400079b0:	jne    0x1400079a0
   1400079b2:	mov    rcx,rbx
   1400079b5:	call   QWORD PTR [rip+0xe8ed]        # 0x1400162a8
   1400079bb:	lea    r15,[rip+0xf6a6]        # 0x140017068
   1400079c2:	mov    eax,DWORD PTR [rsp+0x60]
   1400079c6:	inc    DWORD PTR [rsp+0x60]
   1400079ca:	test   eax,eax
   1400079cc:	jne    0x1400079df
   1400079ce:	mov    rax,QWORD PTR [rsp+0x70]
   1400079d3:	cmp    QWORD PTR [rsp+0x68],rax
   1400079d8:	je     0x1400079df
   1400079da:	mov    r13b,0x1
   1400079dd:	jmp    0x1400079e2
   1400079df:	xor    r13b,r13b
   1400079e2:	test   bpl,0x2
   1400079e6:	je     0x140007a4b
   1400079e8:	mov    rbx,QWORD PTR [rsp+0x1c0]
   1400079f0:	and    ebp,0xfffffffd
   1400079f3:	mov    eax,DWORD PTR [rbx]
   1400079f5:	test   eax,eax
   1400079f7:	je     0x140007a17
   1400079f9:	cmp    eax,0xffffffff
   1400079fc:	je     0x140007a4b
   1400079fe:	mov    eax,r12d
   140007a01:	lock xadd DWORD PTR [rbx],eax
   140007a05:	add    eax,0xffffffff
   140007a08:	setne  al
   140007a0b:	test   al,al
   140007a0d:	jne    0x140007a4b
   140007a0f:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140007a17:	movsxd rax,DWORD PTR [rbx+0xc]
   140007a1b:	lea    rdi,[rbx+rax*8+0x10]
   140007a20:	movsxd rax,DWORD PTR [rbx+0x8]
   140007a24:	lea    rsi,[rbx+rax*8+0x10]
   140007a29:	cmp    rsi,rdi
   140007a2c:	je     0x140007a42
   140007a2e:	xchg   ax,ax
   140007a30:	sub    rdi,0x8
   140007a34:	mov    rcx,rdi
   140007a37:	call   QWORD PTR [rip+0xeefb]        # 0x140016938
   140007a3d:	cmp    rdi,rsi
   140007a40:	jne    0x140007a30
   140007a42:	mov    rcx,rbx
   140007a45:	call   QWORD PTR [rip+0xe85d]        # 0x1400162a8
   140007a4b:	test   r13b,r13b
   140007a4e:	je     0x140007d60
   140007a54:	mov    r14,QWORD PTR [rsp+0x68]
   140007a59:	test   bpl,0x4
   140007a5d:	je     0x140007ad0
   140007a5f:	mov    rbx,QWORD PTR [rsp+0x1b8]
   140007a67:	and    ebp,0xfffffffb
   140007a6a:	mov    eax,DWORD PTR [rbx]
   140007a6c:	test   eax,eax
   140007a6e:	je     0x140007a8e
   140007a70:	cmp    eax,0xffffffff
   140007a73:	je     0x140007ad0
   140007a75:	mov    eax,r12d
   140007a78:	lock xadd DWORD PTR [rbx],eax
   140007a7c:	add    eax,0xffffffff
   140007a7f:	setne  al
   140007a82:	test   al,al
   140007a84:	jne    0x140007ad0
   140007a86:	mov    rbx,QWORD PTR [rsp+0x1b8]
   140007a8e:	movsxd rax,DWORD PTR [rbx+0xc]
   140007a92:	lea    rdi,[rbx+rax*8+0x10]
   140007a97:	movsxd rax,DWORD PTR [rbx+0x8]
   140007a9b:	lea    rsi,[rbx+rax*8+0x10]
   140007aa0:	cmp    rsi,rdi
   140007aa3:	je     0x140007ac2
   140007aa5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007ab0:	sub    rdi,0x8
   140007ab4:	mov    rcx,rdi
   140007ab7:	call   QWORD PTR [rip+0xee7b]        # 0x140016938
   140007abd:	cmp    rdi,rsi
   140007ac0:	jne    0x140007ab0
   140007ac2:	mov    rcx,rbx
   140007ac5:	call   QWORD PTR [rip+0xe7dd]        # 0x1400162a8
   140007acb:	nop    DWORD PTR [rax+rax*1+0x0]
   140007ad0:	mov    r13d,DWORD PTR [rsp+0x60]
   140007ad5:	test   bpl,0x10
   140007ad9:	je     0x140007b3c
   140007adb:	mov    rbx,QWORD PTR [rsp+0x1a8]
   140007ae3:	and    ebp,0xffffffef
   140007ae6:	mov    eax,DWORD PTR [rbx]
   140007ae8:	test   eax,eax
   140007aea:	je     0x140007b02
   140007aec:	cmp    eax,0xffffffff
   140007aef:	je     0x140007b3c
   140007af1:	mov    eax,r12d
   140007af4:	lock xadd DWORD PTR [rbx],eax
   140007af8:	add    eax,0xffffffff
   140007afb:	setne  al
   140007afe:	test   al,al
   140007b00:	jne    0x140007b3c
   140007b02:	mov    rbx,QWORD PTR [rsp+0x1a8]
   140007b0a:	movsxd rax,DWORD PTR [rbx+0xc]
   140007b0e:	lea    rdi,[rbx+rax*8+0x10]
   140007b13:	movsxd rax,DWORD PTR [rbx+0x8]
   140007b17:	lea    rsi,[rbx+rax*8+0x10]
   140007b1c:	cmp    rsi,rdi
   140007b1f:	je     0x140007b33
   140007b21:	sub    rdi,0x8
   140007b25:	mov    rcx,rdi
   140007b28:	call   QWORD PTR [rip+0xee0a]        # 0x140016938
   140007b2e:	cmp    rdi,rsi
   140007b31:	jne    0x140007b21
   140007b33:	mov    rcx,rbx
   140007b36:	call   QWORD PTR [rip+0xe76c]        # 0x1400162a8
   140007b3c:	test   r13d,r13d
   140007b3f:	je     0x140007cd8
   140007b45:	xor    eax,eax
   140007b47:	mov    rcx,r12
   140007b4a:	mov    rdi,r15
   140007b4d:	repnz scas al,BYTE PTR es:[rdi]
   140007b4f:	mov    QWORD PTR [rsp+0x118],r15
   140007b57:	lea    rdx,[rsp+0x1f0]
   140007b5f:	not    rcx
   140007b62:	dec    rcx
   140007b65:	mov    DWORD PTR [rsp+0x110],ecx
   140007b6c:	lea    rcx,[rsp+0x90]
   140007b74:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140007b7c:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   140007b85:	call   QWORD PTR [rip+0xe685]        # 0x140016210
   140007b8b:	mov    rdx,QWORD PTR [rsp+0x20]
   140007b90:	mov    eax,DWORD PTR [rdx]
   140007b92:	cmp    eax,0x1
   140007b95:	je     0x140007bc8
   140007b97:	test   eax,eax
   140007b99:	je     0x140007bc8
   140007b9b:	lea    rcx,[rsp+0x20]
   140007ba0:	mov    edx,0x7fffffff
   140007ba5:	mov    r8d,0x1
   140007bab:	call   0x140002c00
   140007bb0:	test   rax,rax
   140007bb3:	je     0x140007bf4
   140007bb5:	lea    rdx,[rsp+0x90]
   140007bbd:	mov    rcx,rax
   140007bc0:	call   QWORD PTR [rip+0xe97a]        # 0x140016540
   140007bc6:	jmp    0x140007bf4
   140007bc8:	lea    rdx,[rsp+0x90]
   140007bd0:	lea    rcx,[rsp+0x128]
   140007bd8:	call   QWORD PTR [rip+0xe962]        # 0x140016540
   140007bde:	lea    rcx,[rsp+0x20]
   140007be3:	call   QWORD PTR [rip+0xe797]        # 0x140016380
   140007be9:	mov    rcx,QWORD PTR [rsp+0x128]
   140007bf1:	mov    QWORD PTR [rax],rcx
   140007bf4:	mov    rax,QWORD PTR [rsp+0x20]
   140007bf9:	mov    ecx,DWORD PTR [rax]
   140007bfb:	cmp    ecx,0x1
   140007bfe:	je     0x140007c2c
   140007c00:	test   ecx,ecx
   140007c02:	je     0x140007c2c
   140007c04:	lea    rcx,[rsp+0x20]
   140007c09:	mov    edx,0x7fffffff
   140007c0e:	mov    r8d,0x1
   140007c14:	call   0x140002c00
   140007c19:	test   rax,rax
   140007c1c:	je     0x140007c53
   140007c1e:	mov    rdx,r14
   140007c21:	mov    rcx,rax
   140007c24:	call   QWORD PTR [rip+0xe916]        # 0x140016540
   140007c2a:	jmp    0x140007c53
   140007c2c:	lea    rcx,[rsp+0x198]
   140007c34:	mov    rdx,r14
   140007c37:	call   QWORD PTR [rip+0xe903]        # 0x140016540
   140007c3d:	lea    rcx,[rsp+0x20]
   140007c42:	call   QWORD PTR [rip+0xe738]        # 0x140016380
   140007c48:	mov    rcx,QWORD PTR [rsp+0x198]
   140007c50:	mov    QWORD PTR [rax],rcx
   140007c53:	lea    rcx,[rsp+0x90]
   140007c5b:	call   QWORD PTR [rip+0xecd7]        # 0x140016938
   140007c61:	dec    DWORD PTR [rsp+0x60]
   140007c65:	test   bpl,0x8
   140007c69:	je     0x140007ad0
   140007c6f:	mov    rbx,QWORD PTR [rsp+0x150]
   140007c77:	and    ebp,0xfffffff7
   140007c7a:	mov    eax,DWORD PTR [rbx]
   140007c7c:	test   eax,eax
   140007c7e:	je     0x140007c9e
   140007c80:	cmp    eax,0xffffffff
   140007c83:	je     0x140007ad0
   140007c89:	mov    eax,r12d
   140007c8c:	lock xadd DWORD PTR [rbx],eax
   140007c90:	add    eax,0xffffffff
   140007c93:	setne  al
   140007c96:	test   al,al
   140007c98:	jne    0x140007ad0
   140007c9e:	mov    rbx,QWORD PTR [rsp+0x150]
   140007ca6:	movsxd rax,DWORD PTR [rbx+0xc]
   140007caa:	lea    rdi,[rbx+rax*8+0x10]
   140007caf:	movsxd rax,DWORD PTR [rbx+0x8]
   140007cb3:	lea    rsi,[rbx+rax*8+0x10]
   140007cb8:	cmp    rsi,rdi
   140007cbb:	je     0x140007ac2
   140007cc1:	sub    rdi,0x8
   140007cc5:	mov    rcx,rdi
   140007cc8:	call   QWORD PTR [rip+0xec6a]        # 0x140016938
   140007cce:	cmp    rdi,rsi
   140007cd1:	jne    0x140007cc1
   140007cd3:	jmp    0x140007ac2
   140007cd8:	add    QWORD PTR [rsp+0x68],0x8
   140007cde:	test   bpl,0x1
   140007ce2:	je     0x1400079c2
   140007ce8:	mov    rbx,QWORD PTR [rsp+0x178]
   140007cf0:	and    ebp,0xfffffffe
   140007cf3:	mov    eax,DWORD PTR [rbx]
   140007cf5:	test   eax,eax
   140007cf7:	je     0x140007d1f
   140007cf9:	cmp    eax,0xffffffff
   140007cfc:	je     0x1400079c2
   140007d02:	mov    eax,r12d
   140007d05:	lock xadd DWORD PTR [rbx],eax
   140007d09:	add    eax,0xffffffff
   140007d0c:	setne  al
   140007d0f:	test   al,al
   140007d11:	jne    0x1400079c2
   140007d17:	mov    rbx,QWORD PTR [rsp+0x178]
   140007d1f:	movsxd rax,DWORD PTR [rbx+0xc]
   140007d23:	lea    rdi,[rbx+rax*8+0x10]
   140007d28:	movsxd rax,DWORD PTR [rbx+0x8]
   140007d2c:	lea    rsi,[rbx+rax*8+0x10]
   140007d31:	cmp    rsi,rdi
   140007d34:	je     0x140007d52
   140007d36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007d40:	sub    rdi,0x8
   140007d44:	mov    rcx,rdi
   140007d47:	call   QWORD PTR [rip+0xebeb]        # 0x140016938
   140007d4d:	cmp    rdi,rsi
   140007d50:	jne    0x140007d40
   140007d52:	mov    rcx,rbx
   140007d55:	call   QWORD PTR [rip+0xe54d]        # 0x1400162a8
   140007d5b:	jmp    0x1400079c2
   140007d60:	mov    rbx,QWORD PTR [rsp+0x58]
   140007d65:	mov    r15,QWORD PTR [rsp+0x268]
   140007d6d:	mov    eax,DWORD PTR [rbx]
   140007d6f:	test   eax,eax
   140007d71:	je     0x140007d8e
   140007d73:	cmp    eax,0xffffffff
   140007d76:	je     0x140007dcb
   140007d78:	mov    eax,r12d
   140007d7b:	lock xadd DWORD PTR [rbx],eax
   140007d7f:	add    eax,0xffffffff
   140007d82:	setne  al
   140007d85:	test   al,al
   140007d87:	jne    0x140007dcb
   140007d89:	mov    rbx,QWORD PTR [rsp+0x58]
   140007d8e:	movsxd rax,DWORD PTR [rbx+0xc]
   140007d92:	lea    rdi,[rbx+rax*8+0x10]
   140007d97:	movsxd rax,DWORD PTR [rbx+0x8]
   140007d9b:	lea    rsi,[rbx+rax*8+0x10]
   140007da0:	cmp    rsi,rdi
   140007da3:	je     0x140007dc2
   140007da5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007db0:	sub    rdi,0x8
   140007db4:	mov    rcx,rdi
   140007db7:	call   QWORD PTR [rip+0xeb7b]        # 0x140016938
   140007dbd:	cmp    rdi,rsi
   140007dc0:	jne    0x140007db0
   140007dc2:	mov    rcx,rbx
   140007dc5:	call   QWORD PTR [rip+0xe4dd]        # 0x1400162a8
   140007dcb:	lea    rcx,[rsp+0x30]
   140007dd0:	xor    edx,edx
   140007dd2:	call   QWORD PTR [rip+0xe770]        # 0x140016548
   140007dd8:	lea    r8,[rsp+0x20]
   140007ddd:	lea    rdx,[rsp+0x40]
   140007de2:	lea    rcx,[rsp+0x30]
   140007de7:	mov    r9d,0x3
   140007ded:	mov    DWORD PTR [rsp+0x88],0x3
   140007df8:	call   QWORD PTR [rip+0xeb5a]        # 0x140016958
   140007dfe:	lea    rcx,[rsp+0x30]
   140007e03:	mov    edx,0x7530
   140007e08:	call   QWORD PTR [rip+0xe72a]        # 0x140016538
   140007e0e:	lea    rcx,[rsp+0x30]
   140007e13:	test   al,al
   140007e15:	jne    0x140007e98
   140007e1b:	call   QWORD PTR [rip+0xe70f]        # 0x140016530
   140007e21:	mov    rbx,QWORD PTR [rsp+0x20]
   140007e26:	mov    eax,DWORD PTR [rbx]
   140007e28:	test   eax,eax
   140007e2a:	je     0x140007e46
   140007e2c:	cmp    eax,0xffffffff
   140007e2f:	je     0x140007e7b
   140007e31:	lock xadd DWORD PTR [rbx],r12d
   140007e36:	add    r12d,0xffffffff
   140007e3a:	setne  al
   140007e3d:	test   al,al
   140007e3f:	jne    0x140007e7b
   140007e41:	mov    rbx,QWORD PTR [rsp+0x20]
   140007e46:	movsxd rax,DWORD PTR [rbx+0xc]
   140007e4a:	lea    rdi,[rbx+rax*8+0x10]
   140007e4f:	movsxd rax,DWORD PTR [rbx+0x8]
   140007e53:	lea    rsi,[rbx+rax*8+0x10]
   140007e58:	cmp    rsi,rdi
   140007e5b:	je     0x140007e72
   140007e5d:	nop    DWORD PTR [rax]
   140007e60:	sub    rdi,0x8
   140007e64:	mov    rcx,rdi
   140007e67:	call   QWORD PTR [rip+0xeacb]        # 0x140016938
   140007e6d:	cmp    rdi,rsi
   140007e70:	jne    0x140007e60
   140007e72:	mov    rcx,rbx
   140007e75:	call   QWORD PTR [rip+0xe42d]        # 0x1400162a8
   140007e7b:	lea    rcx,[rsp+0x40]
   140007e80:	call   QWORD PTR [rip+0xeab2]        # 0x140016938
   140007e86:	lea    rcx,[rsp+0x48]
   140007e8b:	call   QWORD PTR [rip+0xe697]        # 0x140016528
   140007e91:	xor    al,al
   140007e93:	jmp    0x14000851e
   140007e98:	lea    rdx,[rip+0xf1c1]        # 0x140017060
   140007e9f:	call   QWORD PTR [rip+0xe67b]        # 0x140016520
   140007ea5:	lea    rdx,[rsp+0x160]
   140007ead:	mov    rcx,r15
   140007eb0:	call   QWORD PTR [rip+0xe662]        # 0x140016518
   140007eb6:	lea    rcx,[rsp+0x30]
   140007ebb:	mov    rdx,rax
   140007ebe:	call   QWORD PTR [rip+0xe64c]        # 0x140016510
   140007ec4:	lea    rcx,[rsp+0x160]
   140007ecc:	call   QWORD PTR [rip+0xe3a6]        # 0x140016278
   140007ed2:	lea    rdx,[rip+0xf03f]        # 0x140016f18
   140007ed9:	lea    rcx,[rsp+0x30]
   140007ede:	call   QWORD PTR [rip+0xe63c]        # 0x140016520
   140007ee4:	mov    rcx,QWORD PTR [rsp+0x270]
   140007eec:	lea    rdx,[rsp+0x180]
   140007ef4:	call   QWORD PTR [rip+0xe61e]        # 0x140016518
   140007efa:	lea    rcx,[rsp+0x30]
   140007eff:	mov    rdx,rax
   140007f02:	call   QWORD PTR [rip+0xe608]        # 0x140016510
   140007f08:	lea    rcx,[rsp+0x180]
   140007f10:	call   QWORD PTR [rip+0xe362]        # 0x140016278
   140007f16:	lea    rdx,[rip+0xf133]        # 0x140017050
   140007f1d:	lea    rcx,[rsp+0x30]
   140007f22:	call   QWORD PTR [rip+0xe5f8]        # 0x140016520
   140007f28:	lea    rcx,[rsp+0x30]
   140007f2d:	call   QWORD PTR [rip+0xe5d5]        # 0x140016508
   140007f33:	lea    rcx,[rsp+0x30]
   140007f38:	mov    edx,0x7530
   140007f3d:	call   QWORD PTR [rip+0xe5bd]        # 0x140016500
   140007f43:	test   al,al
   140007f45:	jne    0x140008207
   140007f4b:	lea    rdx,[rsp+0x40]
   140007f50:	lea    rcx,[rsp+0x190]
   140007f58:	call   QWORD PTR [rip+0xe5e2]        # 0x140016540
   140007f5e:	lea    rdx,[rsp+0x170]
   140007f66:	mov    rcx,rax
   140007f69:	call   QWORD PTR [rip+0xe351]        # 0x1400162c0
   140007f6f:	mov    rcx,rax
   140007f72:	call   QWORD PTR [rip+0xe9d8]        # 0x140016950
   140007f78:	mov    rcx,QWORD PTR [rip+0xe0d9]        # 0x140016058
   140007f7f:	lea    rdx,[rip+0xf0b2]        # 0x140017038
   140007f86:	mov    rdi,rax
   140007f89:	call   0x1400016a0
   140007f8e:	mov    rdx,rdi
   140007f91:	mov    rcx,rax
   140007f94:	call   0x1400016a0
   140007f99:	lea    rcx,[rsp+0x170]
   140007fa1:	call   QWORD PTR [rip+0xe2d1]        # 0x140016278
   140007fa7:	lea    rcx,[rsp+0x190]
   140007faf:	call   QWORD PTR [rip+0xe983]        # 0x140016938
   140007fb5:	mov    r11,QWORD PTR [rsp+0x20]
   140007fba:	mov    QWORD PTR [rsp+0x98],r11
   140007fc2:	mov    eax,DWORD PTR [r11]
   140007fc5:	test   eax,eax
   140007fc7:	je     0x140007fd5
   140007fc9:	cmp    eax,0xffffffff
   140007fcc:	je     0x14000803a
   140007fce:	lock add DWORD PTR [r11],0x1
   140007fd3:	jmp    0x140008032
   140007fd5:	mov    edx,DWORD PTR [r11+0x4]
   140007fd9:	lea    rcx,[rsp+0x98]
   140007fe1:	call   QWORD PTR [rip+0xe339]        # 0x140016320
   140007fe7:	mov    r11,QWORD PTR [rsp+0x98]
   140007fef:	movsxd rax,DWORD PTR [r11+0xc]
   140007ff3:	lea    rsi,[r11+rax*8+0x10]
   140007ff8:	mov    rax,QWORD PTR [rsp+0x20]
   140007ffd:	movsxd rcx,DWORD PTR [rax+0x8]
   140008001:	lea    rbx,[rax+rcx*8+0x10]
   140008006:	movsxd rax,DWORD PTR [r11+0x8]
   14000800a:	lea    rdi,[r11+rax*8+0x10]
   14000800f:	cmp    rdi,rsi
   140008012:	je     0x14000803a
   140008014:	test   rdi,rdi
   140008017:	je     0x140008025
   140008019:	mov    rdx,rbx
   14000801c:	mov    rcx,rdi
   14000801f:	call   QWORD PTR [rip+0xe51b]        # 0x140016540
   140008025:	add    rdi,0x8
   140008029:	add    rbx,0x8
   14000802d:	cmp    rdi,rsi
   140008030:	jne    0x140008014
   140008032:	mov    r11,QWORD PTR [rsp+0x98]
   14000803a:	mov    DWORD PTR [rsp+0xa0],0x0
   140008045:	movsxd rax,DWORD PTR [r11+0x8]
   140008049:	lea    rbx,[r11+rax*8+0x10]
   14000804e:	mov    QWORD PTR [rsp+0xa8],rbx
   140008056:	movsxd rax,DWORD PTR [r11+0xc]
   14000805a:	lea    rcx,[r11+rax*8+0x10]
   14000805f:	mov    QWORD PTR [rsp+0xb0],rcx
   140008067:	nop    WORD PTR [rax+rax*1+0x0]
   140008070:	mov    eax,0x1
   140008075:	mov    DWORD PTR [rsp+0xa0],eax
   14000807c:	cmp    rbx,rcx
   14000807f:	je     0x14000811f
   140008085:	test   eax,eax
   140008087:	je     0x1400080fe
   140008089:	lea    rcx,[rsp+0x188]
   140008091:	mov    rdx,rbx
   140008094:	call   QWORD PTR [rip+0xe4a6]        # 0x140016540
   14000809a:	lea    rdx,[rsp+0x1a0]
   1400080a2:	mov    rcx,rax
   1400080a5:	call   QWORD PTR [rip+0xe215]        # 0x1400162c0
   1400080ab:	mov    rcx,rax
   1400080ae:	call   QWORD PTR [rip+0xe89c]        # 0x140016950
   1400080b4:	mov    rcx,QWORD PTR [rip+0xdf9d]        # 0x140016058
   1400080bb:	mov    dl,0x20
   1400080bd:	mov    rdi,rax
   1400080c0:	call   0x140001890
   1400080c5:	mov    rdx,rdi
   1400080c8:	mov    rcx,rax
   1400080cb:	call   0x1400016a0
   1400080d0:	lea    rcx,[rsp+0x1a0]
   1400080d8:	call   QWORD PTR [rip+0xe19a]        # 0x140016278
   1400080de:	lea    rcx,[rsp+0x188]
   1400080e6:	call   QWORD PTR [rip+0xe84c]        # 0x140016938
   1400080ec:	mov    eax,DWORD PTR [rsp+0xa0]
   1400080f3:	dec    eax
   1400080f5:	mov    DWORD PTR [rsp+0xa0],eax
   1400080fc:	jmp    0x140008085
   1400080fe:	mov    rbx,QWORD PTR [rsp+0xa8]
   140008106:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000810e:	add    rbx,0x8
   140008112:	mov    QWORD PTR [rsp+0xa8],rbx
   14000811a:	jmp    0x140008070
   14000811f:	mov    rbx,QWORD PTR [rsp+0x98]
   140008127:	mov    eax,DWORD PTR [rbx]
   140008129:	test   eax,eax
   14000812b:	je     0x14000814b
   14000812d:	cmp    eax,0xffffffff
   140008130:	je     0x14000817d
   140008132:	mov    eax,r12d
   140008135:	lock xadd DWORD PTR [rbx],eax
   140008139:	add    eax,0xffffffff
   14000813c:	setne  al
   14000813f:	test   al,al
   140008141:	jne    0x14000817d
   140008143:	mov    rbx,QWORD PTR [rsp+0x98]
   14000814b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000814f:	lea    rdi,[rbx+rax*8+0x10]
   140008154:	movsxd rax,DWORD PTR [rbx+0x8]
   140008158:	lea    rsi,[rbx+rax*8+0x10]
   14000815d:	cmp    rsi,rdi
   140008160:	je     0x140008174
   140008162:	sub    rdi,0x8
   140008166:	mov    rcx,rdi
   140008169:	call   QWORD PTR [rip+0xe7c9]        # 0x140016938
   14000816f:	cmp    rdi,rsi
   140008172:	jne    0x140008162
   140008174:	mov    rcx,rbx
   140008177:	call   QWORD PTR [rip+0xe12b]        # 0x1400162a8
   14000817d:	mov    rdx,QWORD PTR [rip+0xdedc]        # 0x140016060
   140008184:	mov    rcx,QWORD PTR [rip+0xdecd]        # 0x140016058
   14000818b:	call   QWORD PTR [rip+0xded7]        # 0x140016068
   140008191:	lea    rcx,[rsp+0x30]
   140008196:	call   QWORD PTR [rip+0xe394]        # 0x140016530
   14000819c:	mov    rbx,QWORD PTR [rsp+0x20]
   1400081a1:	mov    eax,DWORD PTR [rbx]
   1400081a3:	test   eax,eax
   1400081a5:	je     0x1400081c9
   1400081a7:	cmp    eax,0xffffffff
   1400081aa:	je     0x140007e7b
   1400081b0:	lock xadd DWORD PTR [rbx],r12d
   1400081b5:	add    r12d,0xffffffff
   1400081b9:	setne  al
   1400081bc:	test   al,al
   1400081be:	jne    0x140007e7b
   1400081c4:	mov    rbx,QWORD PTR [rsp+0x20]
   1400081c9:	movsxd rax,DWORD PTR [rbx+0xc]
   1400081cd:	lea    rdi,[rbx+rax*8+0x10]
   1400081d2:	movsxd rax,DWORD PTR [rbx+0x8]
   1400081d6:	lea    rsi,[rbx+rax*8+0x10]
   1400081db:	cmp    rsi,rdi
   1400081de:	je     0x140007e72
   1400081e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400081f0:	sub    rdi,0x8
   1400081f4:	mov    rcx,rdi
   1400081f7:	call   QWORD PTR [rip+0xe73b]        # 0x140016938
   1400081fd:	cmp    rdi,rsi
   140008200:	jne    0x1400081f0
   140008202:	jmp    0x140007e72
   140008207:	lea    rdx,[rsp+0xb8]
   14000820f:	lea    rcx,[rsp+0x30]
   140008214:	call   QWORD PTR [rip+0xe2de]        # 0x1400164f8
   14000821a:	xor    eax,eax
   14000821c:	lea    rdx,[rip+0xedf5]        # 0x140017018
   140008223:	mov    rdi,rdx
   140008226:	mov    rcx,r12
   140008229:	mov    QWORD PTR [rsp+0x118],rdx
   140008231:	repnz scas al,BYTE PTR es:[rdi]
   140008233:	mov    rax,QWORD PTR [rip+0xdfe6]        # 0x140016220
   14000823a:	not    rcx
   14000823d:	mov    QWORD PTR [rsp+0x78],rax
   140008242:	dec    rcx
   140008245:	mov    DWORD PTR [rsp+0x110],ecx
   14000824c:	mov    ecx,DWORD PTR [rax]
   14000824e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140008256:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   14000825f:	cmp    ecx,0x1
   140008262:	je     0x140008290
   140008264:	test   ecx,ecx
   140008266:	je     0x140008290
   140008268:	lea    rcx,[rsp+0x78]
   14000826d:	mov    edx,0x7fffffff
   140008272:	mov    r8d,0x1
   140008278:	call   0x140002c00
   14000827d:	test   rax,rax
   140008280:	je     0x1400082b7
   140008282:	mov    rdx,r15
   140008285:	mov    rcx,rax
   140008288:	call   QWORD PTR [rip+0xe2b2]        # 0x140016540
   14000828e:	jmp    0x1400082b7
   140008290:	lea    rcx,[rsp+0x130]
   140008298:	mov    rdx,r15
   14000829b:	call   QWORD PTR [rip+0xe29f]        # 0x140016540
   1400082a1:	lea    rcx,[rsp+0x78]
   1400082a6:	call   QWORD PTR [rip+0xe0d4]        # 0x140016380
   1400082ac:	mov    rcx,QWORD PTR [rsp+0x130]
   1400082b4:	mov    QWORD PTR [rax],rcx
   1400082b7:	lea    rdx,[rsp+0x200]
   1400082bf:	lea    rcx,[rsp+0xd0]
   1400082c7:	call   QWORD PTR [rip+0xdf43]        # 0x140016210
   1400082cd:	mov    rsi,QWORD PTR [rsp+0x278]
   1400082d5:	lea    r9,[rsp+0x78]
   1400082da:	lea    rdx,[rsp+0xb8]
   1400082e2:	mov    r8,rsi
   1400082e5:	mov    rcx,rax
   1400082e8:	call   0x1400062b0
   1400082ed:	lea    rcx,[rsp+0x78]
   1400082f2:	test   al,al
   1400082f4:	sete   dil
   1400082f8:	call   0x140002910
   1400082fd:	test   dil,dil
   140008300:	je     0x14000834d
   140008302:	mov    rcx,QWORD PTR [rip+0xdd4f]        # 0x140016058
   140008309:	lea    rdx,[rip+0xecd8]        # 0x140016fe8
   140008310:	call   0x1400016a0
   140008315:	mov    rdx,QWORD PTR [rip+0xdd44]        # 0x140016060
   14000831c:	mov    rcx,rax
   14000831f:	call   QWORD PTR [rip+0xdd43]        # 0x140016068
   140008325:	lea    rcx,[rsp+0xb8]
   14000832d:	call   QWORD PTR [rip+0xdf45]        # 0x140016278
   140008333:	lea    rcx,[rsp+0x30]
   140008338:	call   QWORD PTR [rip+0xe1f2]        # 0x140016530
   14000833e:	lea    rcx,[rsp+0x20]
   140008343:	call   0x140002910
   140008348:	jmp    0x140007e7b
   14000834d:	mov    rax,QWORD PTR [rip+0xdecc]        # 0x140016220
   140008354:	lea    rcx,[rsp+0xe0]
   14000835c:	mov    rdx,rsi
   14000835f:	mov    QWORD PTR [rsp+0x50],rax
   140008364:	call   0x140002860
   140008369:	mov    rcx,QWORD PTR [rsp+0xe0]
   140008371:	mov    DWORD PTR [rsp+0xe8],0x0
   14000837c:	movsxd rax,DWORD PTR [rcx+0x8]
   140008380:	lea    rbx,[rcx+rax*8+0x10]
   140008385:	mov    QWORD PTR [rsp+0xf0],rbx
   14000838d:	movsxd rax,DWORD PTR [rcx+0xc]
   140008391:	lea    rdx,[rcx+rax*8+0x10]
   140008396:	mov    QWORD PTR [rsp+0xf8],rdx
   14000839e:	xchg   ax,ax
   1400083a0:	mov    eax,0x1
   1400083a5:	mov    DWORD PTR [rsp+0xe8],eax
   1400083ac:	cmp    rbx,rdx
   1400083af:	je     0x1400084bf
   1400083b5:	test   eax,eax
   1400083b7:	je     0x14000849e
   1400083bd:	xor    eax,eax
   1400083bf:	lea    rdi,[rip+0xec0a]        # 0x140016fd0
   1400083c6:	mov    rcx,r12
   1400083c9:	repnz scas al,BYTE PTR es:[rdi]
   1400083cb:	not    rcx
   1400083ce:	lea    rdx,[rcx-0x1]
   1400083d2:	lea    rcx,[rip+0xebf7]        # 0x140016fd0
   1400083d9:	call   QWORD PTR [rip+0xe4f1]        # 0x1400168d0
   1400083df:	lea    rdx,[rsp+0x100]
   1400083e7:	mov    r8d,0x1
   1400083ed:	mov    rcx,rbx
   1400083f0:	mov    QWORD PTR [rsp+0x100],rax
   1400083f8:	call   QWORD PTR [rip+0xdf0a]        # 0x140016308
   1400083fe:	lea    rcx,[rsp+0x100]
   140008406:	test   al,al
   140008408:	sete   dil
   14000840c:	call   QWORD PTR [rip+0xe526]        # 0x140016938
   140008412:	test   dil,dil
   140008415:	je     0x140008489
   140008417:	mov    rax,QWORD PTR [rsp+0x50]
   14000841c:	mov    ecx,DWORD PTR [rax]
   14000841e:	cmp    ecx,0x1
   140008421:	je     0x140008462
   140008423:	test   ecx,ecx
   140008425:	je     0x140008462
   140008427:	lea    rcx,[rsp+0x50]
   14000842c:	mov    edx,0x7fffffff
   140008431:	mov    r8d,0x1
   140008437:	call   0x140002c00
   14000843c:	test   rax,rax
   14000843f:	je     0x140008489
   140008441:	mov    rdx,rbx
   140008444:	mov    rcx,rax
   140008447:	call   QWORD PTR [rip+0xe0f3]        # 0x140016540
   14000844d:	mov    eax,DWORD PTR [rsp+0xe8]
   140008454:	dec    eax
   140008456:	mov    DWORD PTR [rsp+0xe8],eax
   14000845d:	jmp    0x1400083b5
   140008462:	lea    rcx,[rsp+0x138]
   14000846a:	mov    rdx,rbx
   14000846d:	call   QWORD PTR [rip+0xe0cd]        # 0x140016540
   140008473:	lea    rcx,[rsp+0x50]
   140008478:	call   QWORD PTR [rip+0xdf02]        # 0x140016380
   14000847e:	mov    rcx,QWORD PTR [rsp+0x138]
   140008486:	mov    QWORD PTR [rax],rcx
   140008489:	mov    eax,DWORD PTR [rsp+0xe8]
   140008490:	dec    eax
   140008492:	mov    DWORD PTR [rsp+0xe8],eax
   140008499:	jmp    0x1400083b5
   14000849e:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400084a6:	mov    rdx,QWORD PTR [rsp+0xf8]
   1400084ae:	add    rbx,0x8
   1400084b2:	mov    QWORD PTR [rsp+0xf0],rbx
   1400084ba:	jmp    0x1400083a0
   1400084bf:	lea    rcx,[rsp+0xe0]
   1400084c7:	call   0x140002910
   1400084cc:	lea    rdx,[rsp+0x50]
   1400084d1:	mov    rcx,rsi
   1400084d4:	call   0x140002990
   1400084d9:	lea    rcx,[rsp+0x50]
   1400084de:	call   0x140002910
   1400084e3:	lea    rcx,[rsp+0xb8]
   1400084eb:	call   QWORD PTR [rip+0xdd87]        # 0x140016278
   1400084f1:	lea    rcx,[rsp+0x30]
   1400084f6:	call   QWORD PTR [rip+0xe034]        # 0x140016530
   1400084fc:	lea    rcx,[rsp+0x20]
   140008501:	call   0x140002910
   140008506:	lea    rcx,[rsp+0x40]
   14000850b:	call   QWORD PTR [rip+0xe427]        # 0x140016938
   140008511:	lea    rcx,[rsp+0x48]
   140008516:	call   QWORD PTR [rip+0xe00c]        # 0x140016528
   14000851c:	mov    al,0x1
   14000851e:	mov    rbx,QWORD PTR [rsp+0x260]
   140008526:	add    rsp,0x220
   14000852d:	pop    r15
   14000852f:	pop    r14
   140008531:	pop    r13
   140008533:	pop    r12
   140008535:	pop    rdi
   140008536:	pop    rsi
   140008537:	pop    rbp
   140008538:	ret    
   140008539:	int3   
   14000853a:	int3   
   14000853b:	int3   
   14000853c:	int3   
   14000853d:	int3   
   14000853e:	int3   
   14000853f:	int3   
   140008540:	mov    QWORD PTR [rsp+0x10],rbp
   140008545:	mov    QWORD PTR [rsp+0x18],rsi
   14000854a:	push   rdi
   14000854b:	push   r12
   14000854d:	push   r13
   14000854f:	sub    rsp,0x20
   140008553:	mov    rax,QWORD PTR [rcx]
   140008556:	mov    rdi,rcx
   140008559:	mov    r12,r8
   14000855c:	mov    ecx,DWORD PTR [rax+0x10]
   14000855f:	mov    rsi,rdx
   140008562:	cmp    ecx,0x1
   140008565:	je     0x140008573
   140008567:	test   ecx,ecx
   140008569:	je     0x140008573
   14000856b:	mov    rcx,rdi
   14000856e:	call   0x1400030a0
   140008573:	mov    rax,QWORD PTR [rdi]
   140008576:	mov    rcx,r12
   140008579:	mov    edx,DWORD PTR [rax+0x24]
   14000857c:	call   QWORD PTR [rip+0xdd5e]        # 0x1400162e0
   140008582:	mov    rdx,r12
   140008585:	mov    rcx,rdi
   140008588:	mov    r8d,eax
   14000858b:	mov    r13d,eax
   14000858e:	call   0x140001e30
   140008593:	mov    rcx,QWORD PTR [rdi]
   140008596:	mov    rdx,QWORD PTR [rax]
   140008599:	mov    rbp,rax
   14000859c:	cmp    rdx,rcx
   14000859f:	jne    0x140008628
   1400085a5:	mov    edx,DWORD PTR [rcx+0x20]
   1400085a8:	mov    QWORD PTR [rsp+0x40],rbx
   1400085ad:	cmp    DWORD PTR [rcx+0x14],edx
   1400085b0:	jl     0x1400085e2
   1400085b2:	movsx  edx,WORD PTR [rcx+0x1e]
   1400085b6:	inc    edx
   1400085b8:	call   QWORD PTR [rip+0xddda]        # 0x140016398
   1400085be:	mov    r11,QWORD PTR [rdi]
   1400085c1:	mov    rcx,r12
   1400085c4:	mov    edx,DWORD PTR [r11+0x24]
   1400085c8:	call   QWORD PTR [rip+0xdd12]        # 0x1400162e0
   1400085ce:	mov    rdx,r12
   1400085d1:	mov    rcx,rdi
   1400085d4:	mov    r8d,eax
   1400085d7:	mov    r13d,eax
   1400085da:	call   0x140001e30
   1400085df:	mov    rbp,rax
   1400085e2:	mov    rcx,QWORD PTR [rdi]
   1400085e5:	mov    edx,0x8
   1400085ea:	call   QWORD PTR [rip+0xdcc0]        # 0x1400162b0
   1400085f0:	mov    rbx,rax
   1400085f3:	test   rax,rax
   1400085f6:	je     0x140008612
   1400085f8:	mov    rax,QWORD PTR [rbp+0x0]
   1400085fc:	lea    rcx,[rbx+0x10]
   140008600:	mov    rdx,r12
   140008603:	mov    QWORD PTR [rbx],rax
   140008606:	mov    DWORD PTR [rbx+0x8],r13d
   14000860a:	call   QWORD PTR [rip+0xdc80]        # 0x140016290
   140008610:	jmp    0x140008614
   140008612:	xor    ebx,ebx
   140008614:	mov    QWORD PTR [rbp+0x0],rbx
   140008618:	mov    rax,QWORD PTR [rdi]
   14000861b:	mov    QWORD PTR [rsi],rbx
   14000861e:	inc    DWORD PTR [rax+0x14]
   140008621:	mov    rbx,QWORD PTR [rsp+0x40]
   140008626:	jmp    0x14000862b
   140008628:	mov    QWORD PTR [rsi],rdx
   14000862b:	mov    rbp,QWORD PTR [rsp+0x48]
   140008630:	mov    rax,rsi
   140008633:	mov    rsi,QWORD PTR [rsp+0x50]
   140008638:	add    rsp,0x20
   14000863c:	pop    r13
   14000863e:	pop    r12
   140008640:	pop    rdi
   140008641:	ret    
   140008642:	int3   
   140008643:	int3   
   140008644:	int3   
   140008645:	int3   
   140008646:	int3   
   140008647:	int3   
   140008648:	int3   
   140008649:	int3   
   14000864a:	int3   
   14000864b:	int3   
   14000864c:	int3   
   14000864d:	int3   
   14000864e:	int3   
   14000864f:	int3   
   140008650:	rex push rbx
   140008652:	sub    rsp,0x20
   140008656:	mov    rbx,rcx
   140008659:	nop    DWORD PTR [rax+0x0]
   140008660:	lea    rcx,[rbx+0x18]
   140008664:	call   QWORD PTR [rip+0xe2ce]        # 0x140016938
   14000866a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000866e:	mov    eax,DWORD PTR [rcx+0x10]
   140008671:	test   eax,eax
   140008673:	je     0x140008686
   140008675:	cmp    eax,0xffffffff
   140008678:	je     0x140008697
   14000867a:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000867f:	setne  al
   140008682:	test   al,al
   140008684:	jne    0x140008697
   140008686:	mov    rcx,QWORD PTR [rbx+0x20]
   14000868a:	lea    rdx,[rip+0xb5cf]        # 0x140013c60
   140008691:	call   QWORD PTR [rip+0xdc01]        # 0x140016298
   140008697:	mov    rcx,QWORD PTR [rbx+0x8]
   14000869b:	test   rcx,rcx
   14000869e:	je     0x1400086a5
   1400086a0:	call   0x140008650
   1400086a5:	mov    rbx,QWORD PTR [rbx+0x10]
   1400086a9:	test   rbx,rbx
   1400086ac:	jne    0x140008660
   1400086ae:	add    rsp,0x20
   1400086b2:	pop    rbx
   1400086b3:	ret    
   1400086b4:	int3   
   1400086b5:	int3   
   1400086b6:	int3   
   1400086b7:	int3   
   1400086b8:	int3   
   1400086b9:	int3   
   1400086ba:	int3   
   1400086bb:	int3   
   1400086bc:	int3   
   1400086bd:	int3   
   1400086be:	int3   
   1400086bf:	int3   
   1400086c0:	rex push rdi
   1400086c2:	push   r12
   1400086c4:	push   r13
   1400086c6:	sub    rsp,0x30
   1400086ca:	mov    rdi,QWORD PTR [rcx]
   1400086cd:	mov    QWORD PTR [rsp+0x58],rbx
   1400086d2:	mov    QWORD PTR [rsp+0x68],rsi
   1400086d7:	mov    eax,DWORD PTR [rdi+0x10]
   1400086da:	mov    rsi,rdx
   1400086dd:	mov    r12,rcx
   1400086e0:	test   eax,eax
   1400086e2:	je     0x1400086ee
   1400086e4:	cmp    eax,0xffffffff
   1400086e7:	je     0x1400086ee
   1400086e9:	lock add DWORD PTR [rdi+0x10],0x1
   1400086ee:	test   BYTE PTR [rdi+0x28],0x1
   1400086f2:	jne    0x140008753
   1400086f4:	mov    eax,DWORD PTR [rdi+0x10]
   1400086f7:	cmp    eax,0x1
   1400086fa:	je     0x140008753
   1400086fc:	test   eax,eax
   1400086fe:	je     0x140008753
   140008700:	lea    r8,[rip+0xb559]        # 0x140013c60
   140008707:	lea    rdx,[rip+0xffffffffffff9562]        # 0x140001c70
   14000870e:	mov    r9d,0x18
   140008714:	mov    rcx,rdi
   140008717:	mov    DWORD PTR [rsp+0x20],0x8
   14000871f:	call   QWORD PTR [rip+0xdc03]        # 0x140016328
   140008725:	mov    ecx,DWORD PTR [rdi+0x10]
   140008728:	mov    rbx,rax
   14000872b:	test   ecx,ecx
   14000872d:	je     0x140008740
   14000872f:	cmp    ecx,0xffffffff
   140008732:	je     0x140008750
   140008734:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140008739:	setne  cl
   14000873c:	test   cl,cl
   14000873e:	jne    0x140008750
   140008740:	lea    rdx,[rip+0xb519]        # 0x140013c60
   140008747:	mov    rcx,rdi
   14000874a:	call   QWORD PTR [rip+0xdb48]        # 0x140016298
   140008750:	mov    rdi,rbx
   140008753:	mov    rbx,QWORD PTR [rsi]
   140008756:	mov    eax,DWORD PTR [rbx+0x10]
   140008759:	mov    QWORD PTR [rsp+0x50],rbx
   14000875e:	lea    rsi,[rbx+0x10]
   140008762:	test   eax,eax
   140008764:	je     0x140008774
   140008766:	cmp    eax,0xffffffff
   140008769:	je     0x140008774
   14000876b:	lock add DWORD PTR [rsi],0x1
   14000876f:	mov    rbx,QWORD PTR [rsp+0x50]
   140008774:	test   BYTE PTR [rbx+0x28],0x1
   140008778:	jne    0x1400087ea
   14000877a:	mov    eax,DWORD PTR [rsi]
   14000877c:	cmp    eax,0x1
   14000877f:	je     0x1400087ea
   140008781:	test   eax,eax
   140008783:	je     0x1400087ea
   140008785:	lea    r8,[rip+0xb4d4]        # 0x140013c60
   14000878c:	lea    rdx,[rip+0xffffffffffff94dd]        # 0x140001c70
   140008793:	mov    r9d,0x18
   140008799:	mov    rcx,rbx
   14000879c:	mov    QWORD PTR [rsp+0x60],rbp
   1400087a1:	mov    DWORD PTR [rsp+0x20],0x8
   1400087a9:	call   QWORD PTR [rip+0xdb79]        # 0x140016328
   1400087af:	mov    ecx,DWORD PTR [rsi]
   1400087b1:	mov    rbp,rax
   1400087b4:	test   ecx,ecx
   1400087b6:	je     0x1400087cd
   1400087b8:	cmp    ecx,0xffffffff
   1400087bb:	je     0x1400087dd
   1400087bd:	lock add DWORD PTR [rsi],0xffffffff
   1400087c1:	setne  cl
   1400087c4:	test   cl,cl
   1400087c6:	jne    0x1400087dd
   1400087c8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400087cd:	lea    rdx,[rip+0xb48c]        # 0x140013c60
   1400087d4:	mov    rcx,rbx
   1400087d7:	call   QWORD PTR [rip+0xdabb]        # 0x140016298
   1400087dd:	mov    rbx,rbp
   1400087e0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400087e5:	mov    QWORD PTR [rsp+0x50],rbx
   1400087ea:	mov    rcx,rdi
   1400087ed:	mov    rsi,rdi
   1400087f0:	call   QWORD PTR [rip+0xdd8a]        # 0x140016580
   1400087f6:	cmp    rdi,rax
   1400087f9:	je     0x140008876
   1400087fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140008800:	mov    rcx,rsi
   140008803:	call   QWORD PTR [rip+0xda5f]        # 0x140016268
   140008809:	mov    ecx,DWORD PTR [rbx+0x20]
   14000880c:	mov    rsi,rax
   14000880f:	test   ecx,ecx
   140008811:	je     0x140008868
   140008813:	mov    r10,QWORD PTR [rax+0x10]
   140008817:	xor    edx,edx
   140008819:	mov    r9,r10
   14000881c:	shr    r9,0x1f
   140008820:	xor    r9d,DWORD PTR [rbx+0x24]
   140008824:	xor    r9d,r10d
   140008827:	mov    eax,r9d
   14000882a:	div    ecx
   14000882c:	mov    rax,QWORD PTR [rbx+0x8]
   140008830:	lea    r8,[rax+rdx*8]
   140008834:	mov    rax,QWORD PTR [rax+rdx*8]
   140008838:	cmp    rax,rbx
   14000883b:	je     0x140008857
   14000883d:	nop    DWORD PTR [rax]
   140008840:	cmp    r9d,DWORD PTR [rax+0x8]
   140008844:	jne    0x14000884c
   140008846:	cmp    r10,QWORD PTR [rax+0x10]
   14000884a:	je     0x140008857
   14000884c:	mov    r8,rax
   14000884f:	mov    rax,QWORD PTR [rax]
   140008852:	cmp    rax,rbx
   140008855:	jne    0x140008840
   140008857:	cmp    QWORD PTR [r8],rbx
   14000885a:	je     0x140008868
   14000885c:	lea    rdx,[rsi+0x10]
   140008860:	mov    rcx,r12
   140008863:	call   0x140003e60
   140008868:	mov    rcx,rdi
   14000886b:	call   QWORD PTR [rip+0xdd0f]        # 0x140016580
   140008871:	cmp    rsi,rax
   140008874:	jne    0x140008800
   140008876:	mov    eax,DWORD PTR [rbx+0x10]
   140008879:	mov    rsi,QWORD PTR [rsp+0x68]
   14000887e:	test   eax,eax
   140008880:	je     0x140008898
   140008882:	cmp    eax,0xffffffff
   140008885:	je     0x1400088a8
   140008887:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000888c:	setne  al
   14000888f:	test   al,al
   140008891:	jne    0x1400088a8
   140008893:	mov    rbx,QWORD PTR [rsp+0x50]
   140008898:	lea    rdx,[rip+0xb3c1]        # 0x140013c60
   14000889f:	mov    rcx,rbx
   1400088a2:	call   QWORD PTR [rip+0xd9f0]        # 0x140016298
   1400088a8:	mov    eax,DWORD PTR [rdi+0x10]
   1400088ab:	mov    rbx,QWORD PTR [rsp+0x58]
   1400088b0:	test   eax,eax
   1400088b2:	je     0x1400088c5
   1400088b4:	cmp    eax,0xffffffff
   1400088b7:	je     0x1400088d5
   1400088b9:	lock add DWORD PTR [rdi+0x10],0xffffffff
   1400088be:	setne  al
   1400088c1:	test   al,al
   1400088c3:	jne    0x1400088d5
   1400088c5:	lea    rdx,[rip+0xb394]        # 0x140013c60
   1400088cc:	mov    rcx,rdi
   1400088cf:	call   QWORD PTR [rip+0xd9c3]        # 0x140016298
   1400088d5:	mov    rax,r12
   1400088d8:	add    rsp,0x30
   1400088dc:	pop    r13
   1400088de:	pop    r12
   1400088e0:	pop    rdi
   1400088e1:	ret    
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	int3   
   1400088e7:	int3   
   1400088e8:	int3   
   1400088e9:	int3   
   1400088ea:	int3   
   1400088eb:	int3   
   1400088ec:	int3   
   1400088ed:	int3   
   1400088ee:	int3   
   1400088ef:	int3   
   1400088f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400088f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400088fa:	push   rdi
   1400088fb:	sub    rsp,0x20
   1400088ff:	mov    rax,QWORD PTR [rcx]
   140008902:	mov    rsi,r8
   140008905:	mov    rbx,rdx
   140008908:	cmp    DWORD PTR [rax+0x14],0x0
   14000890c:	mov    rdi,rcx
   14000890f:	je     0x140008984
   140008911:	xor    r8d,r8d
   140008914:	cmp    DWORD PTR [rax+0x20],r8d
   140008918:	je     0x140008929
   14000891a:	mov    edx,DWORD PTR [rax+0x24]
   14000891d:	mov    rcx,rsi
   140008920:	call   QWORD PTR [rip+0xd9ba]        # 0x1400162e0
   140008926:	mov    r8d,eax
   140008929:	mov    rdx,rsi
   14000892c:	mov    rcx,rdi
   14000892f:	call   0x140001e30
   140008934:	mov    rax,QWORD PTR [rax]
   140008937:	cmp    rax,QWORD PTR [rdi]
   14000893a:	je     0x140008984
   14000893c:	mov    rax,QWORD PTR [rax+0x18]
   140008940:	mov    QWORD PTR [rbx],rax
   140008943:	mov    ecx,DWORD PTR [rax+0x10]
   140008946:	test   ecx,ecx
   140008948:	je     0x140008954
   14000894a:	cmp    ecx,0xffffffff
   14000894d:	je     0x140008954
   14000894f:	lock add DWORD PTR [rax+0x10],0x1
   140008954:	mov    rax,QWORD PTR [rbx]
   140008957:	test   BYTE PTR [rax+0x28],0x1
   14000895b:	jne    0x14000898e
   14000895d:	mov    eax,DWORD PTR [rax+0x10]
   140008960:	cmp    eax,0x1
   140008963:	je     0x14000898e
   140008965:	test   eax,eax
   140008967:	je     0x14000898e
   140008969:	mov    rcx,rbx
   14000896c:	call   0x140002ae0
   140008971:	mov    rax,rbx
   140008974:	mov    rbx,QWORD PTR [rsp+0x30]
   140008979:	mov    rsi,QWORD PTR [rsp+0x38]
   14000897e:	add    rsp,0x20
   140008982:	pop    rdi
   140008983:	ret    
   140008984:	mov    rax,QWORD PTR [rip+0xd89d]        # 0x140016228
   14000898b:	mov    QWORD PTR [rbx],rax
   14000898e:	mov    rsi,QWORD PTR [rsp+0x38]
   140008993:	mov    rax,rbx
   140008996:	mov    rbx,QWORD PTR [rsp+0x30]
   14000899b:	add    rsp,0x20
   14000899f:	pop    rdi
   1400089a0:	ret    
   1400089a1:	int3   
   1400089a2:	int3   
   1400089a3:	int3   
   1400089a4:	int3   
   1400089a5:	int3   
   1400089a6:	int3   
   1400089a7:	int3   
   1400089a8:	int3   
   1400089a9:	int3   
   1400089aa:	int3   
   1400089ab:	int3   
   1400089ac:	int3   
   1400089ad:	int3   
   1400089ae:	int3   
   1400089af:	int3   
   1400089b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400089ba:	push   rdi
   1400089bb:	sub    rsp,0x20
   1400089bf:	mov    rax,QWORD PTR [rcx]
   1400089c2:	mov    rsi,r8
   1400089c5:	mov    rbx,rdx
   1400089c8:	cmp    DWORD PTR [rax+0x14],0x0
   1400089cc:	mov    rdi,rcx
   1400089cf:	je     0x140008a44
   1400089d1:	xor    r8d,r8d
   1400089d4:	cmp    DWORD PTR [rax+0x20],r8d
   1400089d8:	je     0x1400089e9
   1400089da:	mov    edx,DWORD PTR [rax+0x24]
   1400089dd:	mov    rcx,rsi
   1400089e0:	call   QWORD PTR [rip+0xd8fa]        # 0x1400162e0
   1400089e6:	mov    r8d,eax
   1400089e9:	mov    rdx,rsi
   1400089ec:	mov    rcx,rdi
   1400089ef:	call   0x140001e30
   1400089f4:	mov    rax,QWORD PTR [rax]
   1400089f7:	cmp    rax,QWORD PTR [rdi]
   1400089fa:	je     0x140008a44
   1400089fc:	mov    rax,QWORD PTR [rax+0x18]
   140008a00:	mov    QWORD PTR [rbx],rax
   140008a03:	mov    ecx,DWORD PTR [rax+0x10]
   140008a06:	test   ecx,ecx
   140008a08:	je     0x140008a14
   140008a0a:	cmp    ecx,0xffffffff
   140008a0d:	je     0x140008a14
   140008a0f:	lock add DWORD PTR [rax+0x10],0x1
   140008a14:	mov    rax,QWORD PTR [rbx]
   140008a17:	test   BYTE PTR [rax+0x28],0x1
   140008a1b:	jne    0x140008a4e
   140008a1d:	mov    eax,DWORD PTR [rax+0x10]
   140008a20:	cmp    eax,0x1
   140008a23:	je     0x140008a4e
   140008a25:	test   eax,eax
   140008a27:	je     0x140008a4e
   140008a29:	mov    rcx,rbx
   140008a2c:	call   0x140002e10
   140008a31:	mov    rax,rbx
   140008a34:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a39:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a3e:	add    rsp,0x20
   140008a42:	pop    rdi
   140008a43:	ret    
   140008a44:	mov    rax,QWORD PTR [rip+0xd7dd]        # 0x140016228
   140008a4b:	mov    QWORD PTR [rbx],rax
   140008a4e:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a53:	mov    rax,rbx
   140008a56:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a5b:	add    rsp,0x20
   140008a5f:	pop    rdi
   140008a60:	ret    
   140008a61:	int3   
   140008a62:	int3   
   140008a63:	int3   
   140008a64:	int3   
   140008a65:	int3   
   140008a66:	int3   
   140008a67:	int3   
   140008a68:	int3   
   140008a69:	int3   
   140008a6a:	int3   
   140008a6b:	int3   
   140008a6c:	int3   
   140008a6d:	int3   
   140008a6e:	int3   
   140008a6f:	int3   
   140008a70:	mov    QWORD PTR [rsp+0x8],rbx
   140008a75:	mov    QWORD PTR [rsp+0x10],rbp
   140008a7a:	mov    QWORD PTR [rsp+0x18],rsi
   140008a7f:	push   rdi
   140008a80:	push   r12
   140008a82:	push   r13
   140008a84:	sub    rsp,0x20
   140008a88:	mov    rsi,rcx
   140008a8b:	mov    rcx,QWORD PTR [rcx]
   140008a8e:	mov    r13d,edx
   140008a91:	mov    edx,0x8
   140008a96:	mov    rbp,r9
   140008a99:	mov    r12,r8
   140008a9c:	call   QWORD PTR [rip+0xd80e]        # 0x1400162b0
   140008aa2:	mov    rdi,QWORD PTR [rsp+0x60]
   140008aa7:	mov    rbx,rax
   140008aaa:	test   rax,rax
   140008aad:	je     0x140008afe
   140008aaf:	mov    rax,QWORD PTR [rdi]
   140008ab2:	lea    rcx,[rbx+0x10]
   140008ab6:	mov    rdx,r12
   140008ab9:	mov    QWORD PTR [rbx],rax
   140008abc:	mov    DWORD PTR [rbx+0x8],r13d
   140008ac0:	call   QWORD PTR [rip+0xd7ca]        # 0x140016290
   140008ac6:	mov    rax,QWORD PTR [rbp+0x0]
   140008aca:	lea    rcx,[rbx+0x18]
   140008ace:	mov    QWORD PTR [rcx],rax
   140008ad1:	mov    edx,DWORD PTR [rax+0x10]
   140008ad4:	test   edx,edx
   140008ad6:	je     0x140008ae2
   140008ad8:	cmp    edx,0xffffffff
   140008adb:	je     0x140008ae2
   140008add:	lock add DWORD PTR [rax+0x10],0x1
   140008ae2:	mov    rax,QWORD PTR [rcx]
   140008ae5:	test   BYTE PTR [rax+0x28],0x1
   140008ae9:	jne    0x140008b00
   140008aeb:	mov    eax,DWORD PTR [rax+0x10]
   140008aee:	cmp    eax,0x1
   140008af1:	je     0x140008b00
   140008af3:	test   eax,eax
   140008af5:	je     0x140008b00
   140008af7:	call   0x140002ae0
   140008afc:	jmp    0x140008b00
   140008afe:	xor    ebx,ebx
   140008b00:	mov    rbp,QWORD PTR [rsp+0x48]
   140008b05:	mov    QWORD PTR [rdi],rbx
   140008b08:	mov    rcx,QWORD PTR [rsi]
   140008b0b:	mov    rsi,QWORD PTR [rsp+0x50]
   140008b10:	inc    DWORD PTR [rcx+0x14]
   140008b13:	mov    rax,rbx
   140008b16:	mov    rbx,QWORD PTR [rsp+0x40]
   140008b1b:	add    rsp,0x20
   140008b1f:	pop    r13
   140008b21:	pop    r12
   140008b23:	pop    rdi
   140008b24:	ret    
   140008b25:	int3   
   140008b26:	int3   
   140008b27:	int3   
   140008b28:	int3   
   140008b29:	int3   
   140008b2a:	int3   
   140008b2b:	int3   
   140008b2c:	int3   
   140008b2d:	int3   
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	mov    QWORD PTR [rsp+0x8],rbx
   140008b35:	push   rdi
   140008b36:	sub    rsp,0x30
   140008b3a:	mov    rbx,rcx
   140008b3d:	mov    rcx,QWORD PTR [rcx]
   140008b40:	lea    r8,[rip+0xffffffffffffc839]        # 0x140005380
   140008b47:	lea    rdx,[rip+0xffffffffffffc9e2]        # 0x140005530
   140008b4e:	mov    r9d,0x20
   140008b54:	mov    DWORD PTR [rsp+0x20],0x8
   140008b5c:	call   QWORD PTR [rip+0xd7c6]        # 0x140016328
   140008b62:	mov    rdi,rax
   140008b65:	mov    rax,QWORD PTR [rbx]
   140008b68:	mov    ecx,DWORD PTR [rax+0x10]
   140008b6b:	test   ecx,ecx
   140008b6d:	je     0x140008b80
   140008b6f:	cmp    ecx,0xffffffff
   140008b72:	je     0x140008b90
   140008b74:	lock add DWORD PTR [rax+0x10],0xffffffff
   140008b79:	setne  al
   140008b7c:	test   al,al
   140008b7e:	jne    0x140008b90
   140008b80:	mov    rcx,QWORD PTR [rbx]
   140008b83:	lea    rdx,[rip+0xffffffffffffc7f6]        # 0x140005380
   140008b8a:	call   QWORD PTR [rip+0xd708]        # 0x140016298
   140008b90:	mov    QWORD PTR [rbx],rdi
   140008b93:	mov    rbx,QWORD PTR [rsp+0x40]
   140008b98:	add    rsp,0x30
   140008b9c:	pop    rdi
   140008b9d:	ret    
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ba5:	mov    QWORD PTR [rsp+0x10],rbp
   140008baa:	mov    QWORD PTR [rsp+0x18],rsi
   140008baf:	push   rdi
   140008bb0:	push   r12
   140008bb2:	push   r13
   140008bb4:	sub    rsp,0x20
   140008bb8:	mov    rsi,rcx
   140008bbb:	mov    rcx,QWORD PTR [rcx]
   140008bbe:	mov    r13d,edx
   140008bc1:	mov    edx,0x8
   140008bc6:	mov    rbp,r9
   140008bc9:	mov    r12,r8
   140008bcc:	call   QWORD PTR [rip+0xd6de]        # 0x1400162b0
   140008bd2:	mov    rdi,QWORD PTR [rsp+0x60]
   140008bd7:	mov    rbx,rax
   140008bda:	test   rax,rax
   140008bdd:	je     0x140008c2e
   140008bdf:	mov    rax,QWORD PTR [rdi]
   140008be2:	lea    rcx,[rbx+0x10]
   140008be6:	mov    rdx,r12
   140008be9:	mov    QWORD PTR [rbx],rax
   140008bec:	mov    DWORD PTR [rbx+0x8],r13d
   140008bf0:	call   QWORD PTR [rip+0xd69a]        # 0x140016290
   140008bf6:	mov    rax,QWORD PTR [rbp+0x0]
   140008bfa:	lea    rcx,[rbx+0x18]
   140008bfe:	mov    QWORD PTR [rcx],rax
   140008c01:	mov    edx,DWORD PTR [rax+0x10]
   140008c04:	test   edx,edx
   140008c06:	je     0x140008c12
   140008c08:	cmp    edx,0xffffffff
   140008c0b:	je     0x140008c12
   140008c0d:	lock add DWORD PTR [rax+0x10],0x1
   140008c12:	mov    rax,QWORD PTR [rcx]
   140008c15:	test   BYTE PTR [rax+0x28],0x1
   140008c19:	jne    0x140008c30
   140008c1b:	mov    eax,DWORD PTR [rax+0x10]
   140008c1e:	cmp    eax,0x1
   140008c21:	je     0x140008c30
   140008c23:	test   eax,eax
   140008c25:	je     0x140008c30
   140008c27:	call   0x140002e10
   140008c2c:	jmp    0x140008c30
   140008c2e:	xor    ebx,ebx
   140008c30:	mov    rbp,QWORD PTR [rsp+0x48]
   140008c35:	mov    QWORD PTR [rdi],rbx
   140008c38:	mov    rcx,QWORD PTR [rsi]
   140008c3b:	mov    rsi,QWORD PTR [rsp+0x50]
   140008c40:	inc    DWORD PTR [rcx+0x14]
   140008c43:	mov    rax,rbx
   140008c46:	mov    rbx,QWORD PTR [rsp+0x40]
   140008c4b:	add    rsp,0x20
   140008c4f:	pop    r13
   140008c51:	pop    r12
   140008c53:	pop    rdi
   140008c54:	ret    
   140008c55:	int3   
   140008c56:	int3   
   140008c57:	int3   
   140008c58:	int3   
   140008c59:	int3   
   140008c5a:	int3   
   140008c5b:	int3   
   140008c5c:	int3   
   140008c5d:	int3   
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	test   rdx,rdx
   140008c63:	je     0x140008cd0
   140008c65:	mov    QWORD PTR [rsp+0x8],rbx
   140008c6a:	push   rdi
   140008c6b:	sub    rsp,0x20
   140008c6f:	mov    eax,DWORD PTR [rcx+0x8]
   140008c72:	mov    rbx,rdx
   140008c75:	mov    QWORD PTR [rdx],0x0
   140008c7c:	mov    DWORD PTR [rdx+0x8],eax
   140008c7f:	lea    rdx,[rcx+0x10]
   140008c83:	mov    rdi,rcx
   140008c86:	lea    rcx,[rbx+0x10]
   140008c8a:	call   QWORD PTR [rip+0xd600]        # 0x140016290
   140008c90:	mov    rax,QWORD PTR [rdi+0x18]
   140008c94:	lea    rcx,[rbx+0x18]
   140008c98:	mov    QWORD PTR [rcx],rax
   140008c9b:	mov    edx,DWORD PTR [rax+0x10]
   140008c9e:	test   edx,edx
   140008ca0:	je     0x140008cac
   140008ca2:	cmp    edx,0xffffffff
   140008ca5:	je     0x140008cac
   140008ca7:	lock add DWORD PTR [rax+0x10],0x1
   140008cac:	mov    rax,QWORD PTR [rcx]
   140008caf:	test   BYTE PTR [rax+0x28],0x1
   140008cb3:	jne    0x140008cc6
   140008cb5:	mov    eax,DWORD PTR [rax+0x10]
   140008cb8:	cmp    eax,0x1
   140008cbb:	je     0x140008cc6
   140008cbd:	test   eax,eax
   140008cbf:	je     0x140008cc6
   140008cc1:	call   0x1400030a0
   140008cc6:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ccb:	add    rsp,0x20
   140008ccf:	pop    rdi
   140008cd0:	repz ret 
   140008cd2:	int3   
   140008cd3:	int3   
   140008cd4:	int3   
   140008cd5:	int3   
   140008cd6:	int3   
   140008cd7:	int3   
   140008cd8:	int3   
   140008cd9:	int3   
   140008cda:	int3   
   140008cdb:	int3   
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	rex push rbp
   140008ce2:	sub    rsp,0xe0
   140008ce9:	mov    rdx,QWORD PTR [rcx]
   140008cec:	mov    rbp,rcx
   140008cef:	mov    eax,DWORD PTR [rdx+0x8]
   140008cf2:	cmp    DWORD PTR [rdx+0xc],eax
   140008cf5:	jne    0x140008d02
   140008cf7:	xor    al,al
   140008cf9:	add    rsp,0xe0
   140008d00:	pop    rbp
   140008d01:	ret    
   140008d02:	mov    QWORD PTR [rsp+0xd8],rbx
   140008d0a:	mov    edx,0x1
   140008d0f:	mov    QWORD PTR [rsp+0xb8],r13
   140008d17:	mov    QWORD PTR [rsp+0xb0],r14
   140008d1f:	call   QWORD PTR [rip+0xdbdb]        # 0x140016900
   140008d25:	mov    rcx,QWORD PTR [rbp+0x0]
   140008d29:	mov    eax,DWORD PTR [rcx]
   140008d2b:	cmp    eax,0x1
   140008d2e:	je     0x140008d3f
   140008d30:	test   eax,eax
   140008d32:	je     0x140008d3f
   140008d34:	mov    edx,DWORD PTR [rcx+0x4]
   140008d37:	mov    rcx,rbp
   140008d3a:	call   0x140002d40
   140008d3f:	mov    rcx,QWORD PTR [rbp+0x0]
   140008d43:	mov    dl,0x20
   140008d45:	mov    QWORD PTR [rsp+0xd0],rsi
   140008d4d:	movsxd rax,DWORD PTR [rcx+0x8]
   140008d51:	mov    QWORD PTR [rsp+0xc8],rdi
   140008d59:	lea    rbx,[rcx+rax*8+0x10]
   140008d5e:	lea    rcx,[rsp+0xf8]
   140008d66:	call   QWORD PTR [rip+0xdbac]        # 0x140016918
   140008d6c:	lea    rdx,[rsp+0x30]
   140008d71:	xor    r9d,r9d
   140008d74:	movzx  r8d,WORD PTR [rax]
   140008d78:	mov    rcx,rbx
   140008d7b:	mov    DWORD PTR [rsp+0x20],0x1
   140008d83:	call   QWORD PTR [rip+0xd807]        # 0x140016590
   140008d89:	mov    rdx,QWORD PTR [rbp+0x0]
   140008d8d:	mov    ebx,0x1
   140008d92:	mov    eax,DWORD PTR [rdx+0xc]
   140008d95:	xor    r13d,r13d
   140008d98:	mov    DWORD PTR [rsp+0x60],ebx
   140008d9c:	sub    eax,DWORD PTR [rdx+0x8]
   140008d9f:	cmp    eax,ebx
   140008da1:	jle    0x1400094b4
   140008da7:	mov    QWORD PTR [rsp+0xc0],r12
   140008daf:	mov    QWORD PTR [rsp+0xa8],r15
   140008db7:	nop    WORD PTR [rax+rax*1+0x0]
   140008dc0:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008dc4:	movsxd rax,ebx
   140008dc7:	add    rcx,rax
   140008dca:	lea    rdx,[rdx+rcx*8+0x10]
   140008dcf:	lea    rcx,[rsp+0x58]
   140008dd4:	call   QWORD PTR [rip+0xd766]        # 0x140016540
   140008dda:	lea    rcx,[rsp+0x100]
   140008de2:	mov    dl,0x20
   140008de4:	call   QWORD PTR [rip+0xdb2e]        # 0x140016918
   140008dea:	lea    rdx,[rsp+0x38]
   140008def:	lea    rcx,[rsp+0x58]
   140008df4:	movzx  r8d,WORD PTR [rax]
   140008df8:	xor    r9d,r9d
   140008dfb:	mov    DWORD PTR [rsp+0x20],0x1
   140008e03:	call   QWORD PTR [rip+0xd787]        # 0x140016590
   140008e09:	mov    r11,QWORD PTR [rsp+0x30]
   140008e0e:	mov    eax,DWORD PTR [r11]
   140008e11:	cmp    eax,0x1
   140008e14:	je     0x140008e2d
   140008e16:	test   eax,eax
   140008e18:	je     0x140008e2d
   140008e1a:	mov    edx,DWORD PTR [r11+0x4]
   140008e1e:	lea    rcx,[rsp+0x30]
   140008e23:	call   0x140002d40
   140008e28:	mov    r11,QWORD PTR [rsp+0x30]
   140008e2d:	movsxd rax,DWORD PTR [r11+0x8]
   140008e31:	lea    rdx,[r11+rax*8+0x10]
   140008e36:	mov    rax,QWORD PTR [rsp+0x38]
   140008e3b:	movsxd rcx,DWORD PTR [rax+0x8]
   140008e3f:	lea    rcx,[rax+rcx*8+0x10]
   140008e44:	call   QWORD PTR [rip+0xdaf6]        # 0x140016940
   140008e4a:	test   al,al
   140008e4c:	jne    0x140008f96
   140008e52:	inc    r13d
   140008e55:	cmp    r13d,ebx
   140008e58:	je     0x140008e92
   140008e5a:	mov    rcx,QWORD PTR [rbp+0x0]
   140008e5e:	mov    eax,DWORD PTR [rcx]
   140008e60:	cmp    eax,0x1
   140008e63:	je     0x140008e74
   140008e65:	test   eax,eax
   140008e67:	je     0x140008e74
   140008e69:	mov    edx,DWORD PTR [rcx+0x4]
   140008e6c:	mov    rcx,rbp
   140008e6f:	call   0x140002d40
   140008e74:	mov    rdx,QWORD PTR [rbp+0x0]
   140008e78:	movsxd rax,r13d
   140008e7b:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008e7f:	add    rcx,rax
   140008e82:	lea    rcx,[rdx+rcx*8+0x10]
   140008e87:	lea    rdx,[rsp+0x58]
   140008e8c:	call   QWORD PTR [rip+0xd376]        # 0x140016208
   140008e92:	mov    rbx,QWORD PTR [rsp+0x38]
   140008e97:	cmp    QWORD PTR [rsp+0x30],rbx
   140008e9c:	je     0x140009430
   140008ea2:	mov    QWORD PTR [rsp+0x50],rbx
   140008ea7:	mov    eax,DWORD PTR [rbx]
   140008ea9:	mov    rcx,rbx
   140008eac:	test   eax,eax
   140008eae:	je     0x140008ec5
   140008eb0:	cmp    eax,0xffffffff
   140008eb3:	je     0x140008f28
   140008eb5:	lock add DWORD PTR [rbx],0x1
   140008eb9:	mov    rbx,QWORD PTR [rsp+0x38]
   140008ebe:	mov    rcx,QWORD PTR [rsp+0x50]
   140008ec3:	jmp    0x140008f28
   140008ec5:	mov    edx,DWORD PTR [rbx+0x4]
   140008ec8:	lea    rcx,[rsp+0x50]
   140008ecd:	call   QWORD PTR [rip+0xd44d]        # 0x140016320
   140008ed3:	mov    rcx,QWORD PTR [rsp+0x50]
   140008ed8:	mov    rbx,QWORD PTR [rsp+0x38]
   140008edd:	movsxd rax,DWORD PTR [rcx+0xc]
   140008ee1:	lea    r12,[rcx+rax*8+0x10]
   140008ee6:	movsxd rax,DWORD PTR [rbx+0x8]
   140008eea:	lea    rsi,[rbx+rax*8+0x10]
   140008eef:	movsxd rax,DWORD PTR [rcx+0x8]
   140008ef3:	lea    rdi,[rcx+rax*8+0x10]
   140008ef8:	cmp    rdi,r12
   140008efb:	je     0x140008f28
   140008efd:	nop    DWORD PTR [rax]
   140008f00:	test   rdi,rdi
   140008f03:	je     0x140008f11
   140008f05:	mov    rdx,rsi
   140008f08:	mov    rcx,rdi
   140008f0b:	call   QWORD PTR [rip+0xd62f]        # 0x140016540
   140008f11:	add    rdi,0x8
   140008f15:	add    rsi,0x8
   140008f19:	cmp    rdi,r12
   140008f1c:	jne    0x140008f00
   140008f1e:	mov    rbx,QWORD PTR [rsp+0x38]
   140008f23:	mov    rcx,QWORD PTR [rsp+0x50]
   140008f28:	mov    rdi,QWORD PTR [rsp+0x30]
   140008f2d:	mov    QWORD PTR [rsp+0x30],rcx
   140008f32:	mov    QWORD PTR [rsp+0x50],rdi
   140008f37:	mov    eax,DWORD PTR [rdi]
   140008f39:	test   eax,eax
   140008f3b:	je     0x140008f5a
   140008f3d:	cmp    eax,0xffffffff
   140008f40:	je     0x140009430
   140008f46:	lock add DWORD PTR [rdi],0xffffffff
   140008f4a:	setne  al
   140008f4d:	test   al,al
   140008f4f:	jne    0x140009591
   140008f55:	mov    rdi,QWORD PTR [rsp+0x50]
   140008f5a:	movsxd rax,DWORD PTR [rdi+0xc]
   140008f5e:	lea    rbx,[rdi+rax*8+0x10]
   140008f63:	movsxd rax,DWORD PTR [rdi+0x8]
   140008f67:	lea    rsi,[rdi+rax*8+0x10]
   140008f6c:	cmp    rsi,rbx
   140008f6f:	je     0x140008f83
   140008f71:	sub    rbx,0x8
   140008f75:	mov    rcx,rbx
   140008f78:	call   QWORD PTR [rip+0xd9ba]        # 0x140016938
   140008f7e:	cmp    rbx,rsi
   140008f81:	jne    0x140008f71
   140008f83:	mov    rcx,rdi
   140008f86:	call   QWORD PTR [rip+0xd31c]        # 0x1400162a8
   140008f8c:	mov    rbx,QWORD PTR [rsp+0x38]
   140008f91:	jmp    0x140009430
   140008f96:	mov    rax,QWORD PTR [rsp+0x30]
   140008f9b:	mov    ecx,DWORD PTR [rax]
   140008f9d:	cmp    ecx,0x1
   140008fa0:	je     0x140008fb8
   140008fa2:	test   ecx,ecx
   140008fa4:	je     0x140008fb8
   140008fa6:	mov    edx,DWORD PTR [rax+0x4]
   140008fa9:	lea    rcx,[rsp+0x30]
   140008fae:	call   0x140002d40
   140008fb3:	mov    rax,QWORD PTR [rsp+0x30]
   140008fb8:	movsxd rcx,DWORD PTR [rax+0xc]
   140008fbc:	mov    dl,0x2e
   140008fbe:	lea    rbx,[rax+rcx*8+0x8]
   140008fc3:	lea    rcx,[rsp+0x108]
   140008fcb:	call   QWORD PTR [rip+0xd947]        # 0x140016918
   140008fd1:	lea    rdx,[rsp+0x48]
   140008fd6:	xor    r9d,r9d
   140008fd9:	movzx  r8d,WORD PTR [rax]
   140008fdd:	mov    rcx,rbx
   140008fe0:	mov    DWORD PTR [rsp+0x20],0x1
   140008fe8:	call   QWORD PTR [rip+0xd5a2]        # 0x140016590
   140008fee:	mov    rax,QWORD PTR [rsp+0x38]
   140008ff3:	movsxd r8,DWORD PTR [rax+0x8]
   140008ff7:	mov    ecx,DWORD PTR [rax+0xc]
   140008ffa:	sub    ecx,r8d
   140008ffd:	dec    ecx
   140008fff:	movsxd rdx,ecx
   140009002:	lea    rcx,[rsp+0x64]
   140009007:	add    rdx,r8
   14000900a:	lea    rbx,[rax+rdx*8+0x10]
   14000900f:	mov    dl,0x2e
   140009011:	call   QWORD PTR [rip+0xd901]        # 0x140016918
   140009017:	lea    rdx,[rsp+0x40]
   14000901c:	xor    r9d,r9d
   14000901f:	movzx  r8d,WORD PTR [rax]
   140009023:	mov    rcx,rbx
   140009026:	mov    DWORD PTR [rsp+0x20],0x1
   14000902e:	call   QWORD PTR [rip+0xd55c]        # 0x140016590
   140009034:	mov    r11,QWORD PTR [rsp+0x48]
   140009039:	mov    eax,DWORD PTR [r11]
   14000903c:	cmp    eax,0x1
   14000903f:	je     0x140009058
   140009041:	test   eax,eax
   140009043:	je     0x140009058
   140009045:	mov    edx,DWORD PTR [r11+0x4]
   140009049:	lea    rcx,[rsp+0x48]
   14000904e:	call   0x140002d40
   140009053:	mov    r11,QWORD PTR [rsp+0x48]
   140009058:	movsxd rax,DWORD PTR [r11+0x8]
   14000905c:	lea    rdx,[rsp+0xf0]
   140009064:	mov    r8d,0xa
   14000906a:	lea    rcx,[r11+rax*8+0x10]
   14000906f:	call   QWORD PTR [rip+0xd513]        # 0x140016588
   140009075:	mov    rcx,QWORD PTR [rsp+0x40]
   14000907a:	mov    edx,DWORD PTR [rcx]
   14000907c:	mov    r15d,eax
   14000907f:	cmp    edx,0x1
   140009082:	je     0x14000909a
   140009084:	test   edx,edx
   140009086:	je     0x14000909a
   140009088:	mov    edx,DWORD PTR [rcx+0x4]
   14000908b:	lea    rcx,[rsp+0x40]
   140009090:	call   0x140002d40
   140009095:	mov    rcx,QWORD PTR [rsp+0x40]
   14000909a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000909e:	lea    rdx,[rsp+0xf0]
   1400090a6:	mov    r8d,0xa
   1400090ac:	lea    rcx,[rcx+rax*8+0x10]
   1400090b1:	call   QWORD PTR [rip+0xd4d1]        # 0x140016588
   1400090b7:	mov    r12d,eax
   1400090ba:	cmp    r15d,eax
   1400090bd:	je     0x1400092b9
   1400090c3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400090c8:	movsxd r9,DWORD PTR [rcx+0x8]
   1400090cc:	mov    edx,DWORD PTR [rcx+0xc]
   1400090cf:	sub    edx,r9d
   1400090d2:	dec    edx
   1400090d4:	movsxd r8,edx
   1400090d7:	add    r8,r9
   1400090da:	lea    rsi,[rcx+r8*8+0x10]
   1400090df:	mov    rcx,QWORD PTR [rsp+0x30]
   1400090e4:	mov    eax,DWORD PTR [rcx]
   1400090e6:	cmp    eax,0x1
   1400090e9:	je     0x140009101
   1400090eb:	test   eax,eax
   1400090ed:	je     0x140009101
   1400090ef:	mov    edx,DWORD PTR [rcx+0x4]
   1400090f2:	lea    rcx,[rsp+0x30]
   1400090f7:	call   0x140002d40
   1400090fc:	mov    rcx,QWORD PTR [rsp+0x30]
   140009101:	movsxd rax,DWORD PTR [rcx+0xc]
   140009105:	lea    rdi,[rcx+rax*8+0x8]
   14000910a:	mov    eax,DWORD PTR [rcx]
   14000910c:	cmp    eax,0x1
   14000910f:	je     0x140009127
   140009111:	test   eax,eax
   140009113:	je     0x140009127
   140009115:	mov    edx,DWORD PTR [rcx+0x4]
   140009118:	lea    rcx,[rsp+0x30]
   14000911d:	call   0x140002d40
   140009122:	mov    rcx,QWORD PTR [rsp+0x30]
   140009127:	movsxd rax,DWORD PTR [rcx+0x8]
   14000912b:	mov    rdx,rsi
   14000912e:	lea    rbx,[rcx+rax*8+0x10]
   140009133:	lea    rcx,[rsp+0x98]
   14000913b:	call   QWORD PTR [rip+0xd3ff]        # 0x140016540
   140009141:	lea    rdx,[rsp+0x88]
   140009149:	mov    rcx,rax
   14000914c:	call   QWORD PTR [rip+0xd16e]        # 0x1400162c0
   140009152:	mov    rcx,rax
   140009155:	call   QWORD PTR [rip+0xd7f5]        # 0x140016950
   14000915b:	lea    rcx,[rsp+0x78]
   140009160:	mov    rdx,rdi
   140009163:	mov    rsi,rax
   140009166:	call   QWORD PTR [rip+0xd3d4]        # 0x140016540
   14000916c:	lea    rdx,[rsp+0x90]
   140009174:	mov    rcx,rax
   140009177:	call   QWORD PTR [rip+0xd143]        # 0x1400162c0
   14000917d:	mov    rcx,rax
   140009180:	call   QWORD PTR [rip+0xd7ca]        # 0x140016950
   140009186:	lea    rcx,[rsp+0x70]
   14000918b:	mov    rdx,rbx
   14000918e:	mov    rdi,rax
   140009191:	call   QWORD PTR [rip+0xd3a9]        # 0x140016540
   140009197:	lea    rdx,[rsp+0x80]
   14000919f:	mov    rcx,rax
   1400091a2:	call   QWORD PTR [rip+0xd118]        # 0x1400162c0
   1400091a8:	mov    rcx,rax
   1400091ab:	call   QWORD PTR [rip+0xd79f]        # 0x140016950
   1400091b1:	mov    rcx,QWORD PTR [rip+0xcea0]        # 0x140016058
   1400091b8:	lea    rdx,[rip+0xdf41]        # 0x140017100
   1400091bf:	mov    rbx,rax
   1400091c2:	call   0x1400016a0
   1400091c7:	mov    rdx,rbx
   1400091ca:	mov    rcx,rax
   1400091cd:	call   0x1400016a0
   1400091d2:	lea    rdx,[rip+0xdf07]        # 0x1400170e0
   1400091d9:	mov    rcx,rax
   1400091dc:	call   0x1400016a0
   1400091e1:	mov    rdx,rdi
   1400091e4:	mov    rcx,rax
   1400091e7:	call   0x1400016a0
   1400091ec:	lea    rdx,[rip+0xdee1]        # 0x1400170d4
   1400091f3:	mov    rcx,rax
   1400091f6:	call   0x1400016a0
   1400091fb:	mov    rdx,rsi
   1400091fe:	mov    rcx,rax
   140009201:	call   0x1400016a0
   140009206:	lea    rdx,[rip+0xde93]        # 0x1400170a0
   14000920d:	mov    rcx,rax
   140009210:	call   0x1400016a0
   140009215:	mov    rdx,QWORD PTR [rip+0xce44]        # 0x140016060
   14000921c:	mov    rcx,rax
   14000921f:	call   QWORD PTR [rip+0xce43]        # 0x140016068
   140009225:	lea    rcx,[rsp+0x80]
   14000922d:	call   QWORD PTR [rip+0xd045]        # 0x140016278
   140009233:	lea    rcx,[rsp+0x70]
   140009238:	call   QWORD PTR [rip+0xd6fa]        # 0x140016938
   14000923e:	lea    rcx,[rsp+0x90]
   140009246:	call   QWORD PTR [rip+0xd02c]        # 0x140016278
   14000924c:	lea    rcx,[rsp+0x78]
   140009251:	call   QWORD PTR [rip+0xd6e1]        # 0x140016938
   140009257:	lea    rcx,[rsp+0x88]
   14000925f:	call   QWORD PTR [rip+0xd013]        # 0x140016278
   140009265:	lea    rcx,[rsp+0x98]
   14000926d:	call   QWORD PTR [rip+0xd6c5]        # 0x140016938
   140009273:	cmp    r15d,r12d
   140009276:	jge    0x140009375
   14000927c:	mov    rcx,QWORD PTR [rbp+0x0]
   140009280:	mov    eax,DWORD PTR [rcx]
   140009282:	cmp    eax,0x1
   140009285:	je     0x140009296
   140009287:	test   eax,eax
   140009289:	je     0x140009296
   14000928b:	mov    edx,DWORD PTR [rcx+0x4]
   14000928e:	mov    rcx,rbp
   140009291:	call   0x140002d40
   140009296:	mov    rdx,QWORD PTR [rbp+0x0]
   14000929a:	movsxd rax,r13d
   14000929d:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400092a1:	add    rcx,rax
   1400092a4:	lea    rcx,[rdx+rcx*8+0x10]
   1400092a9:	lea    rdx,[rsp+0x58]
   1400092ae:	call   QWORD PTR [rip+0xcf54]        # 0x140016208
   1400092b4:	jmp    0x140009375
   1400092b9:	mov    rax,QWORD PTR [rsp+0x48]
   1400092be:	mov    ecx,DWORD PTR [rax]
   1400092c0:	cmp    ecx,0x1
   1400092c3:	je     0x1400092db
   1400092c5:	test   ecx,ecx
   1400092c7:	je     0x1400092db
   1400092c9:	mov    edx,DWORD PTR [rax+0x4]
   1400092cc:	lea    rcx,[rsp+0x48]
   1400092d1:	call   0x140002d40
   1400092d6:	mov    rax,QWORD PTR [rsp+0x48]
   1400092db:	movsxd rcx,DWORD PTR [rax+0xc]
   1400092df:	lea    rdx,[rsp+0xf0]
   1400092e7:	mov    r8d,0xa
   1400092ed:	lea    rcx,[rax+rcx*8+0x8]
   1400092f2:	call   QWORD PTR [rip+0xd290]        # 0x140016588
   1400092f8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400092fd:	mov    edx,DWORD PTR [rcx]
   1400092ff:	mov    ebx,eax
   140009301:	cmp    edx,0x1
   140009304:	je     0x14000931c
   140009306:	test   edx,edx
   140009308:	je     0x14000931c
   14000930a:	mov    edx,DWORD PTR [rcx+0x4]
   14000930d:	lea    rcx,[rsp+0x40]
   140009312:	call   0x140002d40
   140009317:	mov    rcx,QWORD PTR [rsp+0x40]
   14000931c:	movsxd rax,DWORD PTR [rcx+0xc]
   140009320:	lea    rdx,[rsp+0xf0]
   140009328:	mov    r8d,0xa
   14000932e:	lea    rcx,[rcx+rax*8+0x8]
   140009333:	call   QWORD PTR [rip+0xd24f]        # 0x140016588
   140009339:	cmp    ebx,eax
   14000933b:	jge    0x140009375
   14000933d:	mov    rcx,QWORD PTR [rbp+0x0]
   140009341:	mov    eax,DWORD PTR [rcx]
   140009343:	cmp    eax,0x1
   140009346:	je     0x140009357
   140009348:	test   eax,eax
   14000934a:	je     0x140009357
   14000934c:	mov    edx,DWORD PTR [rcx+0x4]
   14000934f:	mov    rcx,rbp
   140009352:	call   0x140002d40
   140009357:	mov    rdx,QWORD PTR [rbp+0x0]
   14000935b:	movsxd rax,r13d
   14000935e:	movsxd rcx,DWORD PTR [rdx+0x8]
   140009362:	add    rcx,rax
   140009365:	lea    rcx,[rdx+rcx*8+0x10]
   14000936a:	lea    rdx,[rsp+0x58]
   14000936f:	call   QWORD PTR [rip+0xce93]        # 0x140016208
   140009375:	mov    rdi,QWORD PTR [rsp+0x40]
   14000937a:	mov    eax,DWORD PTR [rdi]
   14000937c:	test   eax,eax
   14000937e:	je     0x140009395
   140009380:	cmp    eax,0xffffffff
   140009383:	je     0x1400093cb
   140009385:	lock add DWORD PTR [rdi],0xffffffff
   140009389:	setne  al
   14000938c:	test   al,al
   14000938e:	jne    0x1400093cb
   140009390:	mov    rdi,QWORD PTR [rsp+0x40]
   140009395:	movsxd rax,DWORD PTR [rdi+0xc]
   140009399:	lea    rbx,[rdi+rax*8+0x10]
   14000939e:	movsxd rax,DWORD PTR [rdi+0x8]
   1400093a2:	lea    rsi,[rdi+rax*8+0x10]
   1400093a7:	cmp    rsi,rbx
   1400093aa:	je     0x1400093c2
   1400093ac:	nop    DWORD PTR [rax+0x0]
   1400093b0:	sub    rbx,0x8
   1400093b4:	mov    rcx,rbx
   1400093b7:	call   QWORD PTR [rip+0xd57b]        # 0x140016938
   1400093bd:	cmp    rbx,rsi
   1400093c0:	jne    0x1400093b0
   1400093c2:	mov    rcx,rdi
   1400093c5:	call   QWORD PTR [rip+0xcedd]        # 0x1400162a8
   1400093cb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400093d0:	mov    eax,DWORD PTR [rdi]
   1400093d2:	test   eax,eax
   1400093d4:	je     0x1400093f3
   1400093d6:	cmp    eax,0xffffffff
   1400093d9:	je     0x140009591
   1400093df:	lock add DWORD PTR [rdi],0xffffffff
   1400093e3:	setne  al
   1400093e6:	test   al,al
   1400093e8:	jne    0x140009591
   1400093ee:	mov    rdi,QWORD PTR [rsp+0x48]
   1400093f3:	movsxd rax,DWORD PTR [rdi+0xc]
   1400093f7:	lea    rbx,[rdi+rax*8+0x10]
   1400093fc:	movsxd rax,DWORD PTR [rdi+0x8]
   140009400:	lea    rsi,[rdi+rax*8+0x10]
   140009405:	cmp    rsi,rbx
   140009408:	je     0x140009422
   14000940a:	nop    WORD PTR [rax+rax*1+0x0]
   140009410:	sub    rbx,0x8
   140009414:	mov    rcx,rbx
   140009417:	call   QWORD PTR [rip+0xd51b]        # 0x140016938
   14000941d:	cmp    rbx,rsi
   140009420:	jne    0x140009410
   140009422:	mov    rcx,rdi
   140009425:	call   QWORD PTR [rip+0xce7d]        # 0x1400162a8
   14000942b:	mov    rbx,QWORD PTR [rsp+0x38]
   140009430:	mov    eax,DWORD PTR [rbx]
   140009432:	test   eax,eax
   140009434:	je     0x14000944b
   140009436:	cmp    eax,0xffffffff
   140009439:	je     0x14000947d
   14000943b:	lock add DWORD PTR [rbx],0xffffffff
   14000943f:	setne  al
   140009442:	test   al,al
   140009444:	jne    0x14000947d
   140009446:	mov    rbx,QWORD PTR [rsp+0x38]
   14000944b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000944f:	lea    rdi,[rbx+rax*8+0x10]
   140009454:	movsxd rax,DWORD PTR [rbx+0x8]
   140009458:	lea    rsi,[rbx+rax*8+0x10]
   14000945d:	cmp    rsi,rdi
   140009460:	je     0x140009474
   140009462:	sub    rdi,0x8
   140009466:	mov    rcx,rdi
   140009469:	call   QWORD PTR [rip+0xd4c9]        # 0x140016938
   14000946f:	cmp    rdi,rsi
   140009472:	jne    0x140009462
   140009474:	mov    rcx,rbx
   140009477:	call   QWORD PTR [rip+0xce2b]        # 0x1400162a8
   14000947d:	lea    rcx,[rsp+0x58]
   140009482:	call   QWORD PTR [rip+0xd4b0]        # 0x140016938
   140009488:	mov    rdx,QWORD PTR [rbp+0x0]
   14000948c:	mov    ebx,DWORD PTR [rsp+0x60]
   140009490:	mov    eax,DWORD PTR [rdx+0xc]
   140009493:	inc    ebx
   140009495:	sub    eax,DWORD PTR [rdx+0x8]
   140009498:	mov    DWORD PTR [rsp+0x60],ebx
   14000949c:	cmp    ebx,eax
   14000949e:	jl     0x140008dc0
   1400094a4:	mov    r15,QWORD PTR [rsp+0xa8]
   1400094ac:	mov    r12,QWORD PTR [rsp+0xc0]
   1400094b4:	mov    rax,QWORD PTR [rbp+0x0]
   1400094b8:	inc    r13d
   1400094bb:	mov    ecx,DWORD PTR [rax+0xc]
   1400094be:	sub    ecx,DWORD PTR [rax+0x8]
   1400094c1:	cmp    r13d,ecx
   1400094c4:	jge    0x14000959b
   1400094ca:	lea    rdx,[rsp+0x68]
   1400094cf:	mov    r9d,r13d
   1400094d2:	xor    r8d,r8d
   1400094d5:	mov    rcx,rbp
   1400094d8:	call   0x140004a50
   1400094dd:	mov    rcx,rbp
   1400094e0:	mov    rdx,rax
   1400094e3:	call   0x140002990
   1400094e8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400094ed:	mov    eax,DWORD PTR [rdi]
   1400094ef:	test   eax,eax
   1400094f1:	je     0x140009508
   1400094f3:	cmp    eax,0xffffffff
   1400094f6:	je     0x14000953b
   1400094f8:	lock add DWORD PTR [rdi],0xffffffff
   1400094fc:	setne  al
   1400094ff:	test   al,al
   140009501:	jne    0x14000953b
   140009503:	mov    rdi,QWORD PTR [rsp+0x68]
   140009508:	movsxd rax,DWORD PTR [rdi+0xc]
   14000950c:	lea    rbx,[rdi+rax*8+0x10]
   140009511:	movsxd rax,DWORD PTR [rdi+0x8]
   140009515:	lea    rsi,[rdi+rax*8+0x10]
   14000951a:	cmp    rsi,rbx
   14000951d:	je     0x140009532
   14000951f:	nop
   140009520:	sub    rbx,0x8
   140009524:	mov    rcx,rbx
   140009527:	call   QWORD PTR [rip+0xd40b]        # 0x140016938
   14000952d:	cmp    rbx,rsi
   140009530:	jne    0x140009520
   140009532:	mov    rcx,rdi
   140009535:	call   QWORD PTR [rip+0xcd6d]        # 0x1400162a8
   14000953b:	mov    rdi,QWORD PTR [rsp+0x30]
   140009540:	mov    eax,DWORD PTR [rdi]
   140009542:	test   eax,eax
   140009544:	je     0x14000955b
   140009546:	cmp    eax,0xffffffff
   140009549:	je     0x14000958d
   14000954b:	lock add DWORD PTR [rdi],0xffffffff
   14000954f:	setne  al
   140009552:	test   al,al
   140009554:	jne    0x14000958d
   140009556:	mov    rdi,QWORD PTR [rsp+0x30]
   14000955b:	movsxd rax,DWORD PTR [rdi+0xc]
   14000955f:	lea    rbx,[rdi+rax*8+0x10]
   140009564:	movsxd rax,DWORD PTR [rdi+0x8]
   140009568:	lea    rsi,[rdi+rax*8+0x10]
   14000956d:	cmp    rsi,rbx
   140009570:	je     0x140009584
   140009572:	sub    rbx,0x8
   140009576:	mov    rcx,rbx
   140009579:	call   QWORD PTR [rip+0xd3b9]        # 0x140016938
   14000957f:	cmp    rbx,rsi
   140009582:	jne    0x140009572
   140009584:	mov    rcx,rdi
   140009587:	call   QWORD PTR [rip+0xcd1b]        # 0x1400162a8
   14000958d:	mov    al,0x1
   14000958f:	jmp    0x1400095ef
   140009591:	mov    rbx,QWORD PTR [rsp+0x38]
   140009596:	jmp    0x140009430
   14000959b:	mov    rdi,QWORD PTR [rsp+0x30]
   1400095a0:	mov    eax,DWORD PTR [rdi]
   1400095a2:	test   eax,eax
   1400095a4:	je     0x1400095bb
   1400095a6:	cmp    eax,0xffffffff
   1400095a9:	je     0x1400095ed
   1400095ab:	lock add DWORD PTR [rdi],0xffffffff
   1400095af:	setne  al
   1400095b2:	test   al,al
   1400095b4:	jne    0x1400095ed
   1400095b6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400095bb:	movsxd rax,DWORD PTR [rdi+0xc]
   1400095bf:	lea    rbx,[rdi+rax*8+0x10]
   1400095c4:	movsxd rax,DWORD PTR [rdi+0x8]
   1400095c8:	lea    rsi,[rdi+rax*8+0x10]
   1400095cd:	cmp    rsi,rbx
   1400095d0:	je     0x1400095e4
   1400095d2:	sub    rbx,0x8
   1400095d6:	mov    rcx,rbx
   1400095d9:	call   QWORD PTR [rip+0xd359]        # 0x140016938
   1400095df:	cmp    rbx,rsi
   1400095e2:	jne    0x1400095d2
   1400095e4:	mov    rcx,rdi
   1400095e7:	call   QWORD PTR [rip+0xccbb]        # 0x1400162a8
   1400095ed:	xor    al,al
   1400095ef:	mov    rdi,QWORD PTR [rsp+0xc8]
   1400095f7:	mov    rsi,QWORD PTR [rsp+0xd0]
   1400095ff:	mov    r13,QWORD PTR [rsp+0xb8]
   140009607:	mov    rbx,QWORD PTR [rsp+0xd8]
   14000960f:	mov    r14,QWORD PTR [rsp+0xb0]
   140009617:	add    rsp,0xe0
   14000961e:	pop    rbp
   14000961f:	ret    
   140009620:	mov    QWORD PTR [rsp+0x8],rbx
   140009625:	mov    QWORD PTR [rsp+0x10],rsi
   14000962a:	push   rdi
   14000962b:	sub    rsp,0x20
   14000962f:	mov    rax,QWORD PTR [rcx]
   140009632:	mov    rsi,r8
   140009635:	mov    rbx,rdx
   140009638:	cmp    DWORD PTR [rax+0x14],0x0
   14000963c:	mov    rdi,rcx
   14000963f:	je     0x1400096b4
   140009641:	xor    r8d,r8d
   140009644:	cmp    DWORD PTR [rax+0x20],r8d
   140009648:	je     0x140009659
   14000964a:	mov    edx,DWORD PTR [rax+0x24]
   14000964d:	mov    rcx,rsi
   140009650:	call   QWORD PTR [rip+0xcc8a]        # 0x1400162e0
   140009656:	mov    r8d,eax
   140009659:	mov    rdx,rsi
   14000965c:	mov    rcx,rdi
   14000965f:	call   0x140001e30
   140009664:	mov    rax,QWORD PTR [rax]
   140009667:	cmp    rax,QWORD PTR [rdi]
   14000966a:	je     0x1400096b4
   14000966c:	mov    rax,QWORD PTR [rax+0x18]
   140009670:	mov    QWORD PTR [rbx],rax
   140009673:	mov    ecx,DWORD PTR [rax+0x10]
   140009676:	test   ecx,ecx
   140009678:	je     0x140009684
   14000967a:	cmp    ecx,0xffffffff
   14000967d:	je     0x140009684
   14000967f:	lock add DWORD PTR [rax+0x10],0x1
   140009684:	mov    rax,QWORD PTR [rbx]
   140009687:	test   BYTE PTR [rax+0x28],0x1
   14000968b:	jne    0x1400096be
   14000968d:	mov    eax,DWORD PTR [rax+0x10]
   140009690:	cmp    eax,0x1
   140009693:	je     0x1400096be
   140009695:	test   eax,eax
   140009697:	je     0x1400096be
   140009699:	mov    rcx,rbx
   14000969c:	call   0x1400030a0
   1400096a1:	mov    rax,rbx
   1400096a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096a9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096ae:	add    rsp,0x20
   1400096b2:	pop    rdi
   1400096b3:	ret    
   1400096b4:	mov    rax,QWORD PTR [rip+0xcb6d]        # 0x140016228
   1400096bb:	mov    QWORD PTR [rbx],rax
   1400096be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096c3:	mov    rax,rbx
   1400096c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096cb:	add    rsp,0x20
   1400096cf:	pop    rdi
   1400096d0:	ret    
   1400096d1:	int3   
   1400096d2:	int3   
   1400096d3:	int3   
   1400096d4:	int3   
   1400096d5:	int3   
   1400096d6:	int3   
   1400096d7:	int3   
   1400096d8:	int3   
   1400096d9:	int3   
   1400096da:	int3   
   1400096db:	int3   
   1400096dc:	int3   
   1400096dd:	int3   
   1400096de:	int3   
   1400096df:	int3   
   1400096e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400096e5:	push   rdi
   1400096e6:	sub    rsp,0x30
   1400096ea:	mov    rbx,rcx
   1400096ed:	mov    rcx,QWORD PTR [rcx]
   1400096f0:	lea    r8,[rip+0xffffffffffffbc89]        # 0x140005380
   1400096f7:	lea    rdx,[rip+0xffffffffffffbcd2]        # 0x1400053d0
   1400096fe:	mov    r9d,0x20
   140009704:	mov    DWORD PTR [rsp+0x20],0x8
   14000970c:	call   QWORD PTR [rip+0xcc16]        # 0x140016328
   140009712:	mov    rdi,rax
   140009715:	mov    rax,QWORD PTR [rbx]
   140009718:	mov    ecx,DWORD PTR [rax+0x10]
   14000971b:	test   ecx,ecx
   14000971d:	je     0x140009730
   14000971f:	cmp    ecx,0xffffffff
   140009722:	je     0x140009740
   140009724:	lock add DWORD PTR [rax+0x10],0xffffffff
   140009729:	setne  al
   14000972c:	test   al,al
   14000972e:	jne    0x140009740
   140009730:	mov    rcx,QWORD PTR [rbx]
   140009733:	lea    rdx,[rip+0xffffffffffffbc46]        # 0x140005380
   14000973a:	call   QWORD PTR [rip+0xcb58]        # 0x140016298
   140009740:	mov    QWORD PTR [rbx],rdi
   140009743:	mov    rbx,QWORD PTR [rsp+0x40]
   140009748:	add    rsp,0x30
   14000974c:	pop    rdi
   14000974d:	ret    
   14000974e:	int3   
   14000974f:	int3   
   140009750:	mov    QWORD PTR [rsp+0x8],rbx
   140009755:	mov    QWORD PTR [rsp+0x10],rbp
   14000975a:	mov    QWORD PTR [rsp+0x18],rsi
   14000975f:	push   rdi
   140009760:	push   r12
   140009762:	push   r13
   140009764:	sub    rsp,0x20
   140009768:	mov    rsi,rcx
   14000976b:	mov    rcx,QWORD PTR [rcx]
   14000976e:	mov    r13d,edx
   140009771:	mov    edx,0x8
   140009776:	mov    rbp,r9
   140009779:	mov    r12,r8
   14000977c:	call   QWORD PTR [rip+0xcb2e]        # 0x1400162b0
   140009782:	mov    rdi,QWORD PTR [rsp+0x60]
   140009787:	mov    rbx,rax
   14000978a:	test   rax,rax
   14000978d:	je     0x1400097de
   14000978f:	mov    rax,QWORD PTR [rdi]
   140009792:	lea    rcx,[rbx+0x10]
   140009796:	mov    rdx,r12
   140009799:	mov    QWORD PTR [rbx],rax
   14000979c:	mov    DWORD PTR [rbx+0x8],r13d
   1400097a0:	call   QWORD PTR [rip+0xcaea]        # 0x140016290
   1400097a6:	mov    rax,QWORD PTR [rbp+0x0]
   1400097aa:	lea    rcx,[rbx+0x18]
   1400097ae:	mov    QWORD PTR [rcx],rax
   1400097b1:	mov    edx,DWORD PTR [rax+0x10]
   1400097b4:	test   edx,edx
   1400097b6:	je     0x1400097c2
   1400097b8:	cmp    edx,0xffffffff
   1400097bb:	je     0x1400097c2
   1400097bd:	lock add DWORD PTR [rax+0x10],0x1
   1400097c2:	mov    rax,QWORD PTR [rcx]
   1400097c5:	test   BYTE PTR [rax+0x28],0x1
   1400097c9:	jne    0x1400097e0
   1400097cb:	mov    eax,DWORD PTR [rax+0x10]
   1400097ce:	cmp    eax,0x1
   1400097d1:	je     0x1400097e0
   1400097d3:	test   eax,eax
   1400097d5:	je     0x1400097e0
   1400097d7:	call   0x1400030a0
   1400097dc:	jmp    0x1400097e0
   1400097de:	xor    ebx,ebx
   1400097e0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400097e5:	mov    QWORD PTR [rdi],rbx
   1400097e8:	mov    rcx,QWORD PTR [rsi]
   1400097eb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400097f0:	inc    DWORD PTR [rcx+0x14]
   1400097f3:	mov    rax,rbx
   1400097f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400097fb:	add    rsp,0x20
   1400097ff:	pop    r13
   140009801:	pop    r12
   140009803:	pop    rdi
   140009804:	ret    
   140009805:	int3   
   140009806:	int3   
   140009807:	int3   
   140009808:	int3   
   140009809:	int3   
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	rex push rbx
   140009812:	sub    rsp,0x20
   140009816:	mov    rbx,rcx
   140009819:	mov    rcx,QWORD PTR [rcx+0x18]
   14000981d:	mov    eax,DWORD PTR [rcx+0x10]
   140009820:	test   eax,eax
   140009822:	je     0x140009835
   140009824:	cmp    eax,0xffffffff
   140009827:	je     0x140009846
   140009829:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000982e:	setne  al
   140009831:	test   al,al
   140009833:	jne    0x140009846
   140009835:	mov    rcx,QWORD PTR [rbx+0x18]
   140009839:	lea    rdx,[rip+0xffffffffffff8ae0]        # 0x140002320
   140009840:	call   QWORD PTR [rip+0xca52]        # 0x140016298
   140009846:	lea    rcx,[rbx+0x10]
   14000984a:	add    rsp,0x20
   14000984e:	pop    rbx
   14000984f:	rex.W jmp QWORD PTR [rip+0xca22]        # 0x140016278
   140009856:	int3   
   140009857:	int3   
   140009858:	int3   
   140009859:	int3   
   14000985a:	int3   
   14000985b:	int3   
   14000985c:	int3   
   14000985d:	int3   
   14000985e:	int3   
   14000985f:	int3   
   140009860:	mov    QWORD PTR [rsp+0x18],rbx
   140009865:	mov    QWORD PTR [rsp+0x8],rcx
   14000986a:	push   rbp
   14000986b:	push   rsi
   14000986c:	push   rdi
   14000986d:	sub    rsp,0x30
   140009871:	mov    rax,QWORD PTR [rdx]
   140009874:	mov    esi,r8d
   140009877:	mov    rbp,rdx
   14000987a:	sub    rax,QWORD PTR [rcx]
   14000987d:	mov    rbx,rcx
   140009880:	sar    rax,0x3
   140009884:	cmp    eax,0x20
   140009887:	jle    0x14000994b
   14000988d:	nop    DWORD PTR [rax]
   140009890:	test   esi,esi
   140009892:	jle    0x140009980
   140009898:	mov    rax,QWORD PTR [rbp+0x0]
   14000989c:	lea    r8,[rsp+0x58]
   1400098a1:	lea    rdx,[rsp+0x68]
   1400098a6:	mov    QWORD PTR [rsp+0x58],rax
   1400098ab:	mov    rax,QWORD PTR [rbx]
   1400098ae:	lea    rcx,[rsp+0x20]
   1400098b3:	mov    QWORD PTR [rsp+0x68],rax
   1400098b8:	call   0x140003660
   1400098bd:	mov    r8,QWORD PTR [rbp+0x0]
   1400098c1:	mov    rdi,QWORD PTR [rsp+0x20]
   1400098c6:	mov    eax,esi
   1400098c8:	cdq    
   1400098c9:	mov    rcx,rdi
   1400098cc:	sub    eax,edx
   1400098ce:	sar    eax,1
   1400098d0:	mov    esi,eax
   1400098d2:	cdq    
   1400098d3:	sub    eax,edx
   1400098d5:	mov    rdx,r8
   1400098d8:	sar    eax,1
   1400098da:	add    esi,eax
   1400098dc:	mov    rax,QWORD PTR [rbx]
   1400098df:	mov    rbx,QWORD PTR [rsp+0x28]
   1400098e4:	sub    rdx,rbx
   1400098e7:	sub    rcx,rax
   1400098ea:	sar    rdx,0x3
   1400098ee:	sar    rcx,0x3
   1400098f2:	cmp    ecx,edx
   1400098f4:	lea    rdx,[rsp+0x58]
   1400098f9:	lea    rcx,[rsp+0x68]
   1400098fe:	jge    0x14000991c
   140009900:	mov    r8d,esi
   140009903:	mov    QWORD PTR [rsp+0x58],rdi
   140009908:	mov    QWORD PTR [rsp+0x68],rax
   14000990d:	call   0x140009860
   140009912:	mov    r11,QWORD PTR [rsp+0x50]
   140009917:	mov    QWORD PTR [r11],rbx
   14000991a:	jmp    0x140009932
   14000991c:	mov    QWORD PTR [rsp+0x58],r8
   140009921:	mov    r8d,esi
   140009924:	mov    QWORD PTR [rsp+0x68],rbx
   140009929:	call   0x140009860
   14000992e:	mov    QWORD PTR [rbp+0x0],rdi
   140009932:	mov    rbx,QWORD PTR [rsp+0x50]
   140009937:	mov    rax,QWORD PTR [rbp+0x0]
   14000993b:	sub    rax,QWORD PTR [rbx]
   14000993e:	sar    rax,0x3
   140009942:	cmp    eax,0x20
   140009945:	jg     0x140009890
   14000994b:	cmp    eax,0x1
   14000994e:	jle    0x140009973
   140009950:	mov    rcx,QWORD PTR [rbx]
   140009953:	mov    rax,QWORD PTR [rbp+0x0]
   140009957:	lea    rdx,[rsp+0x50]
   14000995c:	mov    QWORD PTR [rsp+0x58],rcx
   140009961:	lea    rcx,[rsp+0x58]
   140009966:	xor    r8d,r8d
   140009969:	mov    QWORD PTR [rsp+0x50],rax
   14000996e:	call   0x140004170
   140009973:	mov    rbx,QWORD PTR [rsp+0x60]
   140009978:	add    rsp,0x30
   14000997c:	pop    rdi
   14000997d:	pop    rsi
   14000997e:	pop    rbp
   14000997f:	ret    
   140009980:	cmp    eax,0x20
   140009983:	jle    0x14000994b
   140009985:	mov    rax,QWORD PTR [rbp+0x0]
   140009989:	mov    rcx,QWORD PTR [rbx]
   14000998c:	mov    rdx,rax
   14000998f:	sub    rdx,rcx
   140009992:	sar    rdx,0x3
   140009996:	cmp    edx,0x1
   140009999:	jle    0x1400099ba
   14000999b:	mov    QWORD PTR [rsp+0x58],rcx
   1400099a0:	lea    rdx,[rsp+0x50]
   1400099a5:	lea    rcx,[rsp+0x58]
   1400099aa:	xor    r9d,r9d
   1400099ad:	xor    r8d,r8d
   1400099b0:	mov    QWORD PTR [rsp+0x50],rax
   1400099b5:	call   0x140003870
   1400099ba:	mov    rcx,QWORD PTR [rbx]
   1400099bd:	mov    rax,QWORD PTR [rbp+0x0]
   1400099c1:	lea    rdx,[rsp+0x50]
   1400099c6:	mov    QWORD PTR [rsp+0x58],rcx
   1400099cb:	lea    rcx,[rsp+0x58]
   1400099d0:	mov    QWORD PTR [rsp+0x50],rax
   1400099d5:	call   0x1400055b0
   1400099da:	mov    rbx,QWORD PTR [rsp+0x60]
   1400099df:	add    rsp,0x30
   1400099e3:	pop    rdi
   1400099e4:	pop    rsi
   1400099e5:	pop    rbp
   1400099e6:	ret    
   1400099e7:	int3   
   1400099e8:	int3   
   1400099e9:	int3   
   1400099ea:	int3   
   1400099eb:	int3   
   1400099ec:	int3   
   1400099ed:	int3   
   1400099ee:	int3   
   1400099ef:	int3   
   1400099f0:	rex push rbp
   1400099f2:	push   rsi
   1400099f3:	push   rdi
   1400099f4:	sub    rsp,0x30
   1400099f8:	mov    rax,QWORD PTR [rcx]
   1400099fb:	mov    rdi,rcx
   1400099fe:	mov    rsi,rdx
   140009a01:	mov    ecx,DWORD PTR [rax+0x10]
   140009a04:	cmp    ecx,0x1
   140009a07:	je     0x140009a15
   140009a09:	test   ecx,ecx
   140009a0b:	je     0x140009a15
   140009a0d:	mov    rcx,rdi
   140009a10:	call   0x140008b30
   140009a15:	mov    rax,QWORD PTR [rdi]
   140009a18:	mov    rcx,rsi
   140009a1b:	mov    edx,DWORD PTR [rax+0x24]
   140009a1e:	call   QWORD PTR [rip+0xc8bc]        # 0x1400162e0
   140009a24:	mov    rdx,rsi
   140009a27:	mov    rcx,rdi
   140009a2a:	mov    r8d,eax
   140009a2d:	mov    ebp,eax
   140009a2f:	mov    DWORD PTR [rsp+0x50],eax
   140009a33:	call   0x140001e30
   140009a38:	mov    rcx,QWORD PTR [rdi]
   140009a3b:	mov    r11,rax
   140009a3e:	mov    rax,QWORD PTR [rax]
   140009a41:	cmp    rax,rcx
   140009a44:	jne    0x140009aee
   140009a4a:	mov    edx,DWORD PTR [rcx+0x20]
   140009a4d:	mov    QWORD PTR [rsp+0x58],rbx
   140009a52:	cmp    DWORD PTR [rcx+0x14],edx
   140009a55:	jl     0x140009a8a
   140009a57:	movsx  edx,WORD PTR [rcx+0x1e]
   140009a5b:	inc    edx
   140009a5d:	call   QWORD PTR [rip+0xc935]        # 0x140016398
   140009a63:	mov    r11,QWORD PTR [rdi]
   140009a66:	mov    rcx,rsi
   140009a69:	mov    edx,DWORD PTR [r11+0x24]
   140009a6d:	call   QWORD PTR [rip+0xc86d]        # 0x1400162e0
   140009a73:	mov    rdx,rsi
   140009a76:	mov    rcx,rdi
   140009a79:	mov    r8d,eax
   140009a7c:	mov    ebp,eax
   140009a7e:	mov    DWORD PTR [rsp+0x50],eax
   140009a82:	call   0x140001e30
   140009a87:	mov    r11,rax
   140009a8a:	mov    rbx,QWORD PTR [rip+0xc797]        # 0x140016228
   140009a91:	lea    r9,[rsp+0x60]
   140009a96:	mov    r8,rsi
   140009a99:	mov    edx,ebp
   140009a9b:	mov    rcx,rdi
   140009a9e:	mov    QWORD PTR [rsp+0x20],r11
   140009aa3:	mov    QWORD PTR [rsp+0x60],rbx
   140009aa8:	call   0x140008ba0
   140009aad:	mov    rdi,rax
   140009ab0:	mov    eax,DWORD PTR [rbx+0x10]
   140009ab3:	test   eax,eax
   140009ab5:	je     0x140009acd
   140009ab7:	cmp    eax,0xffffffff
   140009aba:	je     0x140009add
   140009abc:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140009ac1:	setne  cl
   140009ac4:	test   cl,cl
   140009ac6:	jne    0x140009add
   140009ac8:	mov    rbx,QWORD PTR [rsp+0x60]
   140009acd:	lea    rdx,[rip+0xa18c]        # 0x140013c60
   140009ad4:	mov    rcx,rbx
   140009ad7:	call   QWORD PTR [rip+0xc7bb]        # 0x140016298
   140009add:	lea    rax,[rdi+0x18]
   140009ae1:	mov    rbx,QWORD PTR [rsp+0x58]
   140009ae6:	add    rsp,0x30
   140009aea:	pop    rdi
   140009aeb:	pop    rsi
   140009aec:	pop    rbp
   140009aed:	ret    
   140009aee:	add    rax,0x18
   140009af2:	add    rsp,0x30
   140009af6:	pop    rdi
   140009af7:	pop    rsi
   140009af8:	pop    rbp
   140009af9:	ret    
   140009afa:	int3   
   140009afb:	int3   
   140009afc:	int3   
   140009afd:	int3   
   140009afe:	int3   
   140009aff:	int3   
   140009b00:	mov    QWORD PTR [rsp+0x8],rbx
   140009b05:	push   rdi
   140009b06:	sub    rsp,0x30
   140009b0a:	mov    rbx,rcx
   140009b0d:	mov    rcx,QWORD PTR [rcx]
   140009b10:	lea    r8,[rip+0xfffffffffffffcf9]        # 0x140009810
   140009b17:	lea    rdx,[rip+0xfffffffffffff142]        # 0x140008c60
   140009b1e:	mov    r9d,0x20
   140009b24:	mov    DWORD PTR [rsp+0x20],0x8
   140009b2c:	call   QWORD PTR [rip+0xc7f6]        # 0x140016328
   140009b32:	mov    rdi,rax
   140009b35:	mov    rax,QWORD PTR [rbx]
   140009b38:	mov    ecx,DWORD PTR [rax+0x10]
   140009b3b:	test   ecx,ecx
   140009b3d:	je     0x140009b50
   140009b3f:	cmp    ecx,0xffffffff
   140009b42:	je     0x140009b60
   140009b44:	lock add DWORD PTR [rax+0x10],0xffffffff
   140009b49:	setne  al
   140009b4c:	test   al,al
   140009b4e:	jne    0x140009b60
   140009b50:	mov    rcx,QWORD PTR [rbx]
   140009b53:	lea    rdx,[rip+0xfffffffffffffcb6]        # 0x140009810
   140009b5a:	call   QWORD PTR [rip+0xc738]        # 0x140016298
   140009b60:	mov    QWORD PTR [rbx],rdi
   140009b63:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b68:	add    rsp,0x30
   140009b6c:	pop    rdi
   140009b6d:	ret    
   140009b6e:	int3   
   140009b6f:	int3   
   140009b70:	mov    DWORD PTR [rsp+0x18],r8d
   140009b75:	push   rbx
   140009b76:	push   rbp
   140009b77:	push   rdi
   140009b78:	push   r12
   140009b7a:	push   r13
   140009b7c:	sub    rsp,0x20
   140009b80:	lea    rbp,[rcx+0x8]
   140009b84:	xor    edi,edi
   140009b86:	mov    r13d,r9d
   140009b89:	mov    rcx,QWORD PTR [rbp+0x0]
   140009b8d:	mov    eax,edi
   140009b8f:	mov    ebx,r8d
   140009b92:	mov    r12,rdx
   140009b95:	cmp    DWORD PTR [rcx+0x20],eax
   140009b98:	je     0x140009ba6
   140009b9a:	mov    edx,DWORD PTR [rcx+0x24]
   140009b9d:	mov    rcx,r12
   140009ba0:	call   QWORD PTR [rip+0xc73a]        # 0x1400162e0
   140009ba6:	mov    r8d,eax
   140009ba9:	mov    rdx,r12
   140009bac:	mov    rcx,rbp
   140009baf:	mov    QWORD PTR [rsp+0x58],rsi
   140009bb4:	call   0x140001e30
   140009bb9:	mov    rcx,QWORD PTR [rbp+0x0]
   140009bbd:	cmp    QWORD PTR [rax],rcx
   140009bc0:	je     0x140009ce3
   140009bc6:	lea    rdx,[rsp+0x50]
   140009bcb:	mov    r8,r12
   140009bce:	mov    rcx,rbp
   140009bd1:	call   0x1400089b0
   140009bd6:	mov    rcx,QWORD PTR [rsp+0x50]
   140009bdb:	mov    r11d,edi
   140009bde:	mov    r10d,DWORD PTR [rcx+0x20]
   140009be2:	test   r10d,r10d
   140009be5:	je     0x140009bee
   140009be7:	mov    r11d,DWORD PTR [rcx+0x24]
   140009beb:	xor    r11d,ebx
   140009bee:	test   r10d,r10d
   140009bf1:	je     0x140009cb9
   140009bf7:	mov    rsi,QWORD PTR [rcx+0x8]
   140009bfb:	xor    edx,edx
   140009bfd:	mov    eax,r11d
   140009c00:	div    r10d
   140009c03:	mov    rax,QWORD PTR [rsi+rdx*8]
   140009c07:	lea    rdx,[rsi+rdx*8]
   140009c0b:	cmp    rax,rcx
   140009c0e:	je     0x140009c26
   140009c10:	cmp    r11d,DWORD PTR [rax+0x8]
   140009c14:	jne    0x140009c1b
   140009c16:	cmp    ebx,DWORD PTR [rax+0xc]
   140009c19:	je     0x140009c26
   140009c1b:	mov    rdx,rax
   140009c1e:	mov    rax,QWORD PTR [rax]
   140009c21:	cmp    rax,rcx
   140009c24:	jne    0x140009c10
   140009c26:	cmp    QWORD PTR [rdx],rcx
   140009c29:	je     0x140009cb9
   140009c2f:	cmp    DWORD PTR [rcx+0x14],edi
   140009c32:	je     0x140009c71
   140009c34:	mov    r9d,DWORD PTR [rcx+0x24]
   140009c38:	xor    edx,edx
   140009c3a:	xor    r9d,ebx
   140009c3d:	mov    eax,r9d
   140009c40:	div    r10d
   140009c43:	mov    rax,QWORD PTR [rsi+rdx*8]
   140009c47:	lea    rdx,[rsi+rdx*8]
   140009c4b:	cmp    rax,rcx
   140009c4e:	je     0x140009c66
   140009c50:	cmp    r9d,DWORD PTR [rax+0x8]
   140009c54:	jne    0x140009c5b
   140009c56:	cmp    ebx,DWORD PTR [rax+0xc]
   140009c59:	je     0x140009c66
   140009c5b:	mov    rdx,rax
   140009c5e:	mov    rax,QWORD PTR [rax]
   140009c61:	cmp    rax,rcx
   140009c64:	jne    0x140009c50
   140009c66:	mov    rax,QWORD PTR [rdx]
   140009c69:	cmp    rax,rcx
   140009c6c:	je     0x140009c71
   140009c6e:	mov    edi,DWORD PTR [rax+0x10]
   140009c71:	cmp    edi,r13d
   140009c74:	jg     0x140009cb9
   140009c76:	mov    eax,DWORD PTR [rcx+0x10]
   140009c79:	test   eax,eax
   140009c7b:	je     0x140009c99
   140009c7d:	cmp    eax,0xffffffff
   140009c80:	je     0x140009ca6
   140009c82:	or     eax,0xffffffff
   140009c85:	lock xadd DWORD PTR [rcx+0x10],eax
   140009c8a:	add    eax,0xffffffff
   140009c8d:	setne  al
   140009c90:	test   al,al
   140009c92:	jne    0x140009ca6
   140009c94:	mov    rcx,QWORD PTR [rsp+0x50]
   140009c99:	lea    rdx,[rip+0x9fc0]        # 0x140013c60
   140009ca0:	call   QWORD PTR [rip+0xc5f2]        # 0x140016298
   140009ca6:	mov    al,0x1
   140009ca8:	mov    rsi,QWORD PTR [rsp+0x58]
   140009cad:	add    rsp,0x20
   140009cb1:	pop    r13
   140009cb3:	pop    r12
   140009cb5:	pop    rdi
   140009cb6:	pop    rbp
   140009cb7:	pop    rbx
   140009cb8:	ret    
   140009cb9:	mov    eax,DWORD PTR [rcx+0x10]
   140009cbc:	test   eax,eax
   140009cbe:	je     0x140009cd6
   140009cc0:	cmp    eax,0xffffffff
   140009cc3:	je     0x140009ce3
   140009cc5:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140009cca:	setne  al
   140009ccd:	test   al,al
   140009ccf:	jne    0x140009ce3
   140009cd1:	mov    rcx,QWORD PTR [rsp+0x50]
   140009cd6:	lea    rdx,[rip+0x9f83]        # 0x140013c60
   140009cdd:	call   QWORD PTR [rip+0xc5b5]        # 0x140016298
   140009ce3:	mov    rdx,r12
   140009ce6:	mov    rcx,rbp
   140009ce9:	call   0x1400099f0
   140009cee:	lea    rdx,[rsp+0x60]
   140009cf3:	mov    rcx,rax
   140009cf6:	call   0x140004c50
   140009cfb:	mov    rsi,QWORD PTR [rsp+0x58]
   140009d00:	mov    DWORD PTR [rax],r13d
   140009d03:	xor    al,al
   140009d05:	add    rsp,0x20
   140009d09:	pop    r13
   140009d0b:	pop    r12
   140009d0d:	pop    rdi
   140009d0e:	pop    rbp
   140009d0f:	pop    rbx
   140009d10:	ret    
   140009d11:	int3   
   140009d12:	int3   
   140009d13:	int3   
   140009d14:	int3   
   140009d15:	int3   
   140009d16:	int3   
   140009d17:	int3   
   140009d18:	int3   
   140009d19:	int3   
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	int3   
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	mov    QWORD PTR [rsp+0x8],rcx
   140009d25:	push   r12
   140009d27:	push   r13
   140009d29:	push   r14
   140009d2b:	push   r15
   140009d2d:	sub    rsp,0x1b8
   140009d34:	xor    r14d,r14d
   140009d37:	mov    rcx,rdx
   140009d3a:	mov    r15,r9
   140009d3d:	mov    r12,r8
   140009d40:	mov    r13,rdx
   140009d43:	mov    DWORD PTR [rsp+0x30],r14d
   140009d48:	call   QWORD PTR [rip+0xc87a]        # 0x1400165c8
   140009d4e:	cmp    eax,0x1
   140009d51:	jne    0x140009d67
   140009d53:	mov    rcx,r13
   140009d56:	call   QWORD PTR [rip+0xc864]        # 0x1400165c0
   140009d5c:	cmp    eax,0x2
   140009d5f:	jne    0x14000a6e6
   140009d65:	jmp    0x140009d79
   140009d67:	mov    rcx,r13
   140009d6a:	call   QWORD PTR [rip+0xc850]        # 0x1400165c0
   140009d70:	cmp    eax,0x2
   140009d73:	jne    0x14000a6e6
   140009d79:	mov    QWORD PTR [rsp+0x1e8],rbx
   140009d81:	mov    QWORD PTR [rsp+0x1f0],rbp
   140009d89:	lea    rdx,[rsp+0x38]
   140009d8e:	mov    rcx,r13
   140009d91:	mov    QWORD PTR [rsp+0x1f8],rsi
   140009d99:	mov    QWORD PTR [rsp+0x1b0],rdi
   140009da1:	call   QWORD PTR [rip+0xc811]        # 0x1400165b8
   140009da7:	mov    rcx,r13
   140009daa:	call   QWORD PTR [rip+0xc800]        # 0x1400165b0
   140009db0:	lea    rcx,[rsp+0x40]
   140009db5:	or     r8d,0xffffffff
   140009db9:	mov    rdx,rax
   140009dbc:	call   QWORD PTR [rip+0xc5ae]        # 0x140016370
   140009dc2:	mov    rcx,QWORD PTR [rip+0x13317]        # 0x14001d0e0
   140009dc9:	cmp    DWORD PTR [rcx+0x14],r14d
   140009dcd:	je     0x140009e94
   140009dd3:	mov    ebp,r14d
   140009dd6:	cmp    DWORD PTR [rcx+0x20],r14d
   140009dda:	je     0x140009df3
   140009ddc:	mov    edx,DWORD PTR [rcx+0x24]
   140009ddf:	lea    rcx,[rsp+0x40]
   140009de4:	call   QWORD PTR [rip+0xc4f6]        # 0x1400162e0
   140009dea:	mov    rcx,QWORD PTR [rip+0x132ef]        # 0x14001d0e0
   140009df1:	mov    ebp,eax
   140009df3:	mov    edi,DWORD PTR [rcx+0x20]
   140009df6:	test   edi,edi
   140009df8:	je     0x140009e74
   140009dfa:	xor    edx,edx
   140009dfc:	mov    eax,ebp
   140009dfe:	div    edi
   140009e00:	mov    eax,edx
   140009e02:	mov    rdx,QWORD PTR [rcx+0x8]
   140009e06:	lea    rsi,[rdx+rax*8]
   140009e0a:	mov    rdx,QWORD PTR [rdx+rax*8]
   140009e0e:	cmp    rdx,rcx
   140009e11:	je     0x140009e7b
   140009e13:	cmp    ebp,DWORD PTR [rdx+0x8]
   140009e16:	jne    0x140009e5e
   140009e18:	mov    rax,QWORD PTR [rsp+0x40]
   140009e1d:	movsxd rdi,DWORD PTR [rax+0x4]
   140009e21:	mov    rax,QWORD PTR [rdx+0x10]
   140009e25:	cmp    edi,DWORD PTR [rax+0x4]
   140009e28:	jne    0x140009e5e
   140009e2a:	lea    rcx,[rdx+0x10]
   140009e2e:	mov    rbx,rdi
   140009e31:	call   QWORD PTR [rip+0xcb19]        # 0x140016950
   140009e37:	lea    rcx,[rsp+0x40]
   140009e3c:	mov    rdi,rax
   140009e3f:	call   QWORD PTR [rip+0xcb0b]        # 0x140016950
   140009e45:	mov    r8,rbx
   140009e48:	mov    rcx,rax
   140009e4b:	mov    rdx,rdi
   140009e4e:	call   0x14001507e
   140009e53:	test   eax,eax
   140009e55:	je     0x140009e6b
   140009e57:	mov    rcx,QWORD PTR [rip+0x13282]        # 0x14001d0e0
   140009e5e:	mov    rsi,QWORD PTR [rsi]
   140009e61:	mov    rdx,QWORD PTR [rsi]
   140009e64:	cmp    rdx,rcx
   140009e67:	jne    0x140009e13
   140009e69:	jmp    0x140009e7b
   140009e6b:	mov    rcx,QWORD PTR [rip+0x1326e]        # 0x14001d0e0
   140009e72:	jmp    0x140009e7b
   140009e74:	lea    rsi,[rip+0x13265]        # 0x14001d0e0
   140009e7b:	mov    rdx,QWORD PTR [rsi]
   140009e7e:	cmp    rdx,rcx
   140009e81:	je     0x140009e94
   140009e83:	lea    rcx,[rsp+0x48]
   140009e88:	add    rdx,0x18
   140009e8c:	call   QWORD PTR [rip+0xc3fe]        # 0x140016290
   140009e92:	jmp    0x140009ea4
   140009e94:	lea    rdx,[rsp+0x40]
   140009e99:	lea    rcx,[rsp+0x48]
   140009e9e:	call   QWORD PTR [rip+0xc3ec]        # 0x140016290
   140009ea4:	lea    rdx,[rsp+0x48]
   140009ea9:	lea    rcx,[rsp+0x30]
   140009eae:	call   QWORD PTR [rip+0xc4c4]        # 0x140016378
   140009eb4:	lea    rcx,[rsp+0x48]
   140009eb9:	call   QWORD PTR [rip+0xc3b9]        # 0x140016278
   140009ebf:	lea    rcx,[rsp+0x40]
   140009ec4:	call   QWORD PTR [rip+0xc3ae]        # 0x140016278
   140009eca:	lea    rdx,[rsp+0x38]
   140009ecf:	lea    rcx,[rsp+0x58]
   140009ed4:	call   QWORD PTR [rip+0xc49e]        # 0x140016378
   140009eda:	mov    rax,QWORD PTR [r12]
   140009ede:	mov    ebx,r14d
   140009ee1:	mov    esi,0x1
   140009ee6:	cmp    DWORD PTR [rax+0x20],ebx
   140009ee9:	je     0x140009efb
   140009eeb:	mov    edx,DWORD PTR [rax+0x24]
   140009eee:	lea    rcx,[rsp+0x58]
   140009ef3:	call   QWORD PTR [rip+0xc3df]        # 0x1400162d8
   140009ef9:	mov    ebx,eax
   140009efb:	mov    r8,QWORD PTR [r12]
   140009eff:	mov    ecx,DWORD PTR [r8+0x20]
   140009f03:	test   ecx,ecx
   140009f05:	je     0x140009f46
   140009f07:	xor    edx,edx
   140009f09:	mov    eax,ebx
   140009f0b:	div    ecx
   140009f0d:	mov    rcx,QWORD PTR [r8+0x8]
   140009f11:	lea    rdi,[rcx+rdx*8]
   140009f15:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140009f19:	cmp    rcx,r8
   140009f1c:	je     0x140009f49
   140009f1e:	xchg   ax,ax
   140009f20:	cmp    ebx,DWORD PTR [rcx+0x8]
   140009f23:	jne    0x140009f38
   140009f25:	lea    rdx,[rcx+0x10]
   140009f29:	lea    rcx,[rsp+0x58]
   140009f2e:	call   QWORD PTR [rip+0xca0c]        # 0x140016940
   140009f34:	test   al,al
   140009f36:	jne    0x140009f49
   140009f38:	mov    rdi,QWORD PTR [rdi]
   140009f3b:	mov    rcx,QWORD PTR [rdi]
   140009f3e:	cmp    rcx,QWORD PTR [r12]
   140009f42:	jne    0x140009f20
   140009f44:	jmp    0x140009f49
   140009f46:	mov    rdi,r12
   140009f49:	mov    rax,QWORD PTR [r12]
   140009f4d:	lea    rbp,[rip+0xd1e0]        # 0x140017134
   140009f54:	cmp    QWORD PTR [rdi],rax
   140009f57:	je     0x140009fe5
   140009f5d:	mov    rcx,r13
   140009f60:	call   QWORD PTR [rip+0xc642]        # 0x1400165a8
   140009f66:	test   eax,eax
   140009f68:	jne    0x140009fe5
   140009f6a:	mov    rcx,r13
   140009f6d:	call   QWORD PTR [rip+0xc655]        # 0x1400165c8
   140009f73:	cmp    eax,esi
   140009f75:	jne    0x140009fe5
   140009f77:	lea    rdx,[rsp+0xa0]
   140009f7f:	mov    rcx,r13
   140009f82:	mov    esi,0x3
   140009f87:	call   QWORD PTR [rip+0xc613]        # 0x1400165a0
   140009f8d:	mov    rcx,QWORD PTR [rax]
   140009f90:	mov    eax,DWORD PTR [rcx+0x8]
   140009f93:	cmp    DWORD PTR [rcx+0xc],eax
   140009f96:	jne    0x140009fe5
   140009f98:	or     rcx,0xffffffffffffffff
   140009f9c:	xor    eax,eax
   140009f9e:	mov    rdi,rbp
   140009fa1:	repnz scas al,BYTE PTR es:[rdi]
   140009fa3:	mov    QWORD PTR [rsp+0xe8],rbp
   140009fab:	lea    rdx,[rsp+0x170]
   140009fb3:	not    rcx
   140009fb6:	dec    rcx
   140009fb9:	mov    DWORD PTR [rsp+0xe0],ecx
   140009fc0:	lea    rcx,[rsp+0x30]
   140009fc5:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   140009fcd:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   140009fd6:	call   QWORD PTR [rip+0xc954]        # 0x140016930
   140009fdc:	test   al,al
   140009fde:	je     0x140009fe5
   140009fe0:	mov    r12b,0x1
   140009fe3:	jmp    0x140009fe8
   140009fe5:	xor    r12b,r12b
   140009fe8:	test   sil,0x2
   140009fec:	je     0x14000a052
   140009fee:	mov    rbx,QWORD PTR [rsp+0xa0]
   140009ff6:	and    esi,0xfffffffd
   140009ff9:	mov    eax,DWORD PTR [rbx]
   140009ffb:	test   eax,eax
   140009ffd:	je     0x14000a017
   140009fff:	cmp    eax,0xffffffff
   14000a002:	je     0x14000a052
   14000a004:	lock add DWORD PTR [rbx],0xffffffff
   14000a008:	setne  al
   14000a00b:	test   al,al
   14000a00d:	jne    0x14000a052
   14000a00f:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000a017:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a01b:	lea    rdi,[rbx+rax*8+0x10]
   14000a020:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a024:	lea    rbp,[rbx+rax*8+0x10]
   14000a029:	cmp    rbp,rdi
   14000a02c:	je     0x14000a042
   14000a02e:	xchg   ax,ax
   14000a030:	sub    rdi,0x8
   14000a034:	mov    rcx,rdi
   14000a037:	call   QWORD PTR [rip+0xc23b]        # 0x140016278
   14000a03d:	cmp    rdi,rbp
   14000a040:	jne    0x14000a030
   14000a042:	mov    rcx,rbx
   14000a045:	call   QWORD PTR [rip+0xc25d]        # 0x1400162a8
   14000a04b:	lea    rbp,[rip+0xd0e2]        # 0x140017134
   14000a052:	test   sil,0x1
   14000a056:	je     0x14000a066
   14000a058:	lea    rcx,[rsp+0x58]
   14000a05d:	and    esi,0xfffffffe
   14000a060:	call   QWORD PTR [rip+0xc8d2]        # 0x140016938
   14000a066:	test   r12b,r12b
   14000a069:	jne    0x14000a6b0
   14000a06f:	mov    rcx,r13
   14000a072:	call   QWORD PTR [rip+0xc530]        # 0x1400165a8
   14000a078:	mov    ebx,eax
   14000a07a:	test   r15,r15
   14000a07d:	je     0x14000a0b7
   14000a07f:	lea    rdx,[rsp+0x100]
   14000a087:	mov    rcx,r13
   14000a08a:	or     esi,0x4
   14000a08d:	call   QWORD PTR [rip+0xc50d]        # 0x1400165a0
   14000a093:	lea    rdx,[rsp+0x38]
   14000a098:	mov    r9d,ebx
   14000a09b:	mov    rcx,QWORD PTR [rax]
   14000a09e:	mov    r8d,DWORD PTR [rcx+0xc]
   14000a0a2:	sub    r8d,DWORD PTR [rcx+0x8]
   14000a0a6:	mov    rcx,r15
   14000a0a9:	call   0x140009b70
   14000a0ae:	test   al,al
   14000a0b0:	je     0x14000a0b7
   14000a0b2:	mov    dil,0x1
   14000a0b5:	jmp    0x14000a0ba
   14000a0b7:	xor    dil,dil
   14000a0ba:	test   sil,0x4
   14000a0be:	je     0x14000a0cd
   14000a0c0:	lea    rcx,[rsp+0x100]
   14000a0c8:	call   0x1400027e0
   14000a0cd:	test   dil,dil
   14000a0d0:	jne    0x14000a6b0
   14000a0d6:	mov    rcx,r13
   14000a0d9:	call   QWORD PTR [rip+0xc4e9]        # 0x1400165c8
   14000a0df:	cmp    eax,0x1
   14000a0e2:	jne    0x14000a152
   14000a0e4:	or     rcx,0xffffffffffffffff
   14000a0e8:	lea    rdx,[rip+0xd03d]        # 0x14001712c
   14000a0ef:	xor    eax,eax
   14000a0f1:	mov    rdi,rdx
   14000a0f4:	mov    QWORD PTR [rsp+0x28],rdx
   14000a0f9:	lea    rdx,[rsp+0x120]
   14000a101:	repnz scas al,BYTE PTR es:[rdi]
   14000a103:	not    rcx
   14000a106:	dec    rcx
   14000a109:	mov    DWORD PTR [rsp+0x20],ecx
   14000a10d:	lea    rcx,[rsp+0x98]
   14000a115:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a11a:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000a123:	call   QWORD PTR [rip+0xc0e7]        # 0x140016210
   14000a129:	mov    r12,QWORD PTR [rsp+0x1e0]
   14000a131:	mov    rcx,QWORD PTR [r12]
   14000a135:	lea    rdx,[rsp+0x98]
   14000a13d:	call   0x140014230
   14000a142:	lea    rcx,[rsp+0x98]
   14000a14a:	call   QWORD PTR [rip+0xc7e8]        # 0x140016938
   14000a150:	jmp    0x14000a1be
   14000a152:	or     rcx,0xffffffffffffffff
   14000a156:	lea    rdx,[rip+0xcfc7]        # 0x140017124
   14000a15d:	xor    eax,eax
   14000a15f:	mov    rdi,rdx
   14000a162:	mov    QWORD PTR [rsp+0x28],rdx
   14000a167:	lea    rdx,[rsp+0x150]
   14000a16f:	repnz scas al,BYTE PTR es:[rdi]
   14000a171:	not    rcx
   14000a174:	dec    rcx
   14000a177:	mov    DWORD PTR [rsp+0x20],ecx
   14000a17b:	lea    rcx,[rsp+0xc0]
   14000a183:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a188:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000a191:	call   QWORD PTR [rip+0xc079]        # 0x140016210
   14000a197:	mov    r12,QWORD PTR [rsp+0x1e0]
   14000a19f:	mov    rcx,QWORD PTR [r12]
   14000a1a3:	lea    rdx,[rsp+0xc0]
   14000a1ab:	call   0x140014230
   14000a1b0:	lea    rcx,[rsp+0xc0]
   14000a1b8:	call   QWORD PTR [rip+0xc77a]        # 0x140016938
   14000a1be:	lea    rdx,[rsp+0x38]
   14000a1c3:	lea    rcx,[rsp+0xb8]
   14000a1cb:	call   QWORD PTR [rip+0xc1a7]        # 0x140016378
   14000a1d1:	or     rcx,0xffffffffffffffff
   14000a1d5:	lea    rdx,[rip+0xc9a8]        # 0x140016b84
   14000a1dc:	mov    rdi,rdx
   14000a1df:	mov    QWORD PTR [rsp+0x28],rdx
   14000a1e4:	xor    eax,eax
   14000a1e6:	repnz scas al,BYTE PTR es:[rdi]
   14000a1e8:	lea    rdx,[rsp+0x190]
   14000a1f0:	not    rcx
   14000a1f3:	dec    rcx
   14000a1f6:	mov    DWORD PTR [rsp+0x20],ecx
   14000a1fa:	lea    rcx,[rsp+0x78]
   14000a1ff:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a204:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14000a20d:	call   QWORD PTR [rip+0xbffd]        # 0x140016210
   14000a213:	lea    rdx,[rsp+0xb8]
   14000a21b:	lea    rcx,[rsp+0xf8]
   14000a223:	call   0x140001000
   14000a228:	mov    rcx,QWORD PTR [r12]
   14000a22c:	lea    rdx,[rsp+0x78]
   14000a231:	mov    r8,rax
   14000a234:	call   0x140014b80
   14000a239:	lea    rcx,[rsp+0xf8]
   14000a241:	call   QWORD PTR [rip+0xc6f1]        # 0x140016938
   14000a247:	lea    rcx,[rsp+0x78]
   14000a24c:	call   QWORD PTR [rip+0xc6e6]        # 0x140016938
   14000a252:	lea    rcx,[rsp+0xb8]
   14000a25a:	call   QWORD PTR [rip+0xc6d8]        # 0x140016938
   14000a260:	test   ebx,ebx
   14000a262:	je     0x14000a2f3
   14000a268:	or     rcx,0xffffffffffffffff
   14000a26c:	lea    rdx,[rip+0xcc45]        # 0x140016eb8
   14000a273:	xor    eax,eax
   14000a275:	mov    rdi,rdx
   14000a278:	mov    QWORD PTR [rsp+0x28],rdx
   14000a27d:	lea    rdx,[rsp+0x130]
   14000a285:	repnz scas al,BYTE PTR es:[rdi]
   14000a287:	not    rcx
   14000a28a:	dec    rcx
   14000a28d:	mov    DWORD PTR [rsp+0x20],ecx
   14000a291:	lea    rcx,[rsp+0x88]
   14000a299:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a29e:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000a2a7:	call   QWORD PTR [rip+0xbf63]        # 0x140016210
   14000a2ad:	lea    rcx,[rsp+0xc8]
   14000a2b5:	mov    r8d,0xa
   14000a2bb:	mov    edx,ebx
   14000a2bd:	call   QWORD PTR [rip+0xc02d]        # 0x1400162f0
   14000a2c3:	mov    rcx,QWORD PTR [r12]
   14000a2c7:	lea    rdx,[rsp+0x88]
   14000a2cf:	mov    r8,rax
   14000a2d2:	call   0x140014b80
   14000a2d7:	lea    rcx,[rsp+0xc8]
   14000a2df:	call   QWORD PTR [rip+0xc653]        # 0x140016938
   14000a2e5:	lea    rcx,[rsp+0x88]
   14000a2ed:	call   QWORD PTR [rip+0xc645]        # 0x140016938
   14000a2f3:	or     rcx,0xffffffffffffffff
   14000a2f7:	xor    eax,eax
   14000a2f9:	mov    rdi,rbp
   14000a2fc:	repnz scas al,BYTE PTR es:[rdi]
   14000a2fe:	mov    QWORD PTR [rsp+0x28],rbp
   14000a303:	lea    rdx,[rsp+0x140]
   14000a30b:	not    rcx
   14000a30e:	dec    rcx
   14000a311:	mov    DWORD PTR [rsp+0x20],ecx
   14000a315:	lea    rcx,[rsp+0x30]
   14000a31a:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a31f:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000a328:	call   QWORD PTR [rip+0xc602]        # 0x140016930
   14000a32e:	test   al,al
   14000a330:	jne    0x14000a3bd
   14000a336:	or     rcx,0xffffffffffffffff
   14000a33a:	lea    rdx,[rip+0xcaab]        # 0x140016dec
   14000a341:	xor    eax,eax
   14000a343:	mov    rdi,rdx
   14000a346:	mov    QWORD PTR [rsp+0x28],rdx
   14000a34b:	lea    rdx,[rsp+0x160]
   14000a353:	repnz scas al,BYTE PTR es:[rdi]
   14000a355:	not    rcx
   14000a358:	dec    rcx
   14000a35b:	mov    DWORD PTR [rsp+0x20],ecx
   14000a35f:	lea    rcx,[rsp+0xa8]
   14000a367:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a36c:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   14000a375:	call   QWORD PTR [rip+0xbe95]        # 0x140016210
   14000a37b:	lea    rdx,[rsp+0x30]
   14000a380:	lea    rcx,[rsp+0xf0]
   14000a388:	call   0x140001000
   14000a38d:	mov    rcx,QWORD PTR [r12]
   14000a391:	lea    rdx,[rsp+0xa8]
   14000a399:	mov    r8,rax
   14000a39c:	call   0x140014b80
   14000a3a1:	lea    rcx,[rsp+0xf0]
   14000a3a9:	call   QWORD PTR [rip+0xc589]        # 0x140016938
   14000a3af:	lea    rcx,[rsp+0xa8]
   14000a3b7:	call   QWORD PTR [rip+0xc57b]        # 0x140016938
   14000a3bd:	lea    r15,[rip+0xcd54]        # 0x140017118
   14000a3c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3d0:	lea    rdx,[rsp+0x68]
   14000a3d5:	mov    rcx,r13
   14000a3d8:	call   QWORD PTR [rip+0xc1ba]        # 0x140016598
   14000a3de:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a3e3:	mov    rcx,QWORD PTR [rax]
   14000a3e6:	mov    eax,DWORD PTR [rcx+0xc]
   14000a3e9:	sub    eax,DWORD PTR [rcx+0x8]
   14000a3ec:	cmp    r14d,eax
   14000a3ef:	mov    eax,DWORD PTR [rbx]
   14000a3f1:	setl   bpl
   14000a3f5:	test   eax,eax
   14000a3f7:	je     0x14000a40e
   14000a3f9:	cmp    eax,0xffffffff
   14000a3fc:	je     0x14000a44b
   14000a3fe:	lock add DWORD PTR [rbx],0xffffffff
   14000a402:	setne  al
   14000a405:	test   al,al
   14000a407:	jne    0x14000a44b
   14000a409:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a40e:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a412:	lea    rdi,[rbx+rax*8+0x10]
   14000a417:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a41b:	lea    rsi,[rbx+rax*8+0x10]
   14000a420:	cmp    rsi,rdi
   14000a423:	je     0x14000a442
   14000a425:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a430:	sub    rdi,0x8
   14000a434:	mov    rcx,rdi
   14000a437:	call   QWORD PTR [rip+0xbe3b]        # 0x140016278
   14000a43d:	cmp    rdi,rsi
   14000a440:	jne    0x14000a430
   14000a442:	mov    rcx,rbx
   14000a445:	call   QWORD PTR [rip+0xbe5d]        # 0x1400162a8
   14000a44b:	test   bpl,bpl
   14000a44e:	je     0x14000a6a7
   14000a454:	lea    rdx,[rsp+0x70]
   14000a459:	mov    rcx,r13
   14000a45c:	call   QWORD PTR [rip+0xc13e]        # 0x1400165a0
   14000a462:	movsxd rbp,r14d
   14000a465:	mov    rcx,QWORD PTR [rax]
   14000a468:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a46c:	add    rax,rbp
   14000a46f:	lea    rdx,[rcx+rax*8+0x10]
   14000a474:	lea    rcx,[rsp+0x50]
   14000a479:	call   QWORD PTR [rip+0xbe11]        # 0x140016290
   14000a47f:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a484:	mov    eax,DWORD PTR [rbx]
   14000a486:	test   eax,eax
   14000a488:	je     0x14000a49f
   14000a48a:	cmp    eax,0xffffffff
   14000a48d:	je     0x14000a4db
   14000a48f:	lock add DWORD PTR [rbx],0xffffffff
   14000a493:	setne  al
   14000a496:	test   al,al
   14000a498:	jne    0x14000a4db
   14000a49a:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a49f:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a4a3:	lea    rdi,[rbx+rax*8+0x10]
   14000a4a8:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a4ac:	lea    rsi,[rbx+rax*8+0x10]
   14000a4b1:	cmp    rsi,rdi
   14000a4b4:	je     0x14000a4d2
   14000a4b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a4c0:	sub    rdi,0x8
   14000a4c4:	mov    rcx,rdi
   14000a4c7:	call   QWORD PTR [rip+0xbdab]        # 0x140016278
   14000a4cd:	cmp    rdi,rsi
   14000a4d0:	jne    0x14000a4c0
   14000a4d2:	mov    rcx,rbx
   14000a4d5:	call   QWORD PTR [rip+0xbdcd]        # 0x1400162a8
   14000a4db:	or     rcx,0xffffffffffffffff
   14000a4df:	xor    eax,eax
   14000a4e1:	mov    rdi,r15
   14000a4e4:	repnz scas al,BYTE PTR es:[rdi]
   14000a4e6:	mov    QWORD PTR [rsp+0x28],r15
   14000a4eb:	lea    rdx,[rsp+0x180]
   14000a4f3:	not    rcx
   14000a4f6:	dec    rcx
   14000a4f9:	mov    DWORD PTR [rsp+0x20],ecx
   14000a4fd:	lea    rcx,[rsp+0x80]
   14000a505:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000a50a:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14000a513:	call   QWORD PTR [rip+0xbcf7]        # 0x140016210
   14000a519:	mov    rcx,QWORD PTR [r12]
   14000a51d:	lea    rdx,[rsp+0x80]
   14000a525:	call   0x140014230
   14000a52a:	lea    rcx,[rsp+0x80]
   14000a532:	call   QWORD PTR [rip+0xc400]        # 0x140016938
   14000a538:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a53d:	cmp    DWORD PTR [rdx+0x4],0x0
   14000a541:	je     0x14000a5f2
   14000a547:	lea    rdx,[rsp+0x50]
   14000a54c:	lea    rcx,[rsp+0x60]
   14000a551:	call   QWORD PTR [rip+0xbe21]        # 0x140016378
   14000a557:	or     rcx,0xffffffffffffffff
   14000a55b:	lea    rdx,[rip+0xc622]        # 0x140016b84
   14000a562:	mov    rdi,rdx
   14000a565:	mov    QWORD PTR [rsp+0x118],rdx
   14000a56d:	xor    eax,eax
   14000a56f:	repnz scas al,BYTE PTR es:[rdi]
   14000a571:	lea    rdx,[rsp+0x1a0]
   14000a579:	not    rcx
   14000a57c:	dec    rcx
   14000a57f:	mov    DWORD PTR [rsp+0x110],ecx
   14000a586:	lea    rcx,[rsp+0x90]
   14000a58e:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14000a596:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14000a59f:	call   QWORD PTR [rip+0xbc6b]        # 0x140016210
   14000a5a5:	lea    rdx,[rsp+0x60]
   14000a5aa:	lea    rcx,[rsp+0xd0]
   14000a5b2:	call   0x140001000
   14000a5b7:	mov    rcx,QWORD PTR [r12]
   14000a5bb:	lea    rdx,[rsp+0x90]
   14000a5c3:	mov    r8,rax
   14000a5c6:	call   0x140014b80
   14000a5cb:	lea    rcx,[rsp+0xd0]
   14000a5d3:	call   QWORD PTR [rip+0xc35f]        # 0x140016938
   14000a5d9:	lea    rcx,[rsp+0x90]
   14000a5e1:	call   QWORD PTR [rip+0xc351]        # 0x140016938
   14000a5e7:	lea    rcx,[rsp+0x60]
   14000a5ec:	call   QWORD PTR [rip+0xc346]        # 0x140016938
   14000a5f2:	lea    rdx,[rsp+0xb0]
   14000a5fa:	mov    rcx,r13
   14000a5fd:	call   QWORD PTR [rip+0xbf95]        # 0x140016598
   14000a603:	mov    rcx,QWORD PTR [rax]
   14000a606:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a60a:	add    rax,rbp
   14000a60d:	lea    rdx,[rcx+rax*8+0x10]
   14000a612:	lea    rcx,[rsp+0xe0]
   14000a61a:	call   QWORD PTR [rip+0xbc70]        # 0x140016290
   14000a620:	mov    r8b,0x1
   14000a623:	mov    rcx,r12
   14000a626:	mov    rdx,rax
   14000a629:	call   0x140003a60
   14000a62e:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000a636:	mov    eax,DWORD PTR [rbx]
   14000a638:	test   eax,eax
   14000a63a:	je     0x14000a654
   14000a63c:	cmp    eax,0xffffffff
   14000a63f:	je     0x14000a68b
   14000a641:	lock add DWORD PTR [rbx],0xffffffff
   14000a645:	setne  al
   14000a648:	test   al,al
   14000a64a:	jne    0x14000a68b
   14000a64c:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000a654:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a658:	lea    rdi,[rbx+rax*8+0x10]
   14000a65d:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a661:	lea    rsi,[rbx+rax*8+0x10]
   14000a666:	cmp    rsi,rdi
   14000a669:	je     0x14000a682
   14000a66b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a670:	sub    rdi,0x8
   14000a674:	mov    rcx,rdi
   14000a677:	call   QWORD PTR [rip+0xbbfb]        # 0x140016278
   14000a67d:	cmp    rdi,rsi
   14000a680:	jne    0x14000a670
   14000a682:	mov    rcx,rbx
   14000a685:	call   QWORD PTR [rip+0xbc1d]        # 0x1400162a8
   14000a68b:	mov    rcx,QWORD PTR [r12]
   14000a68f:	call   0x140014320
   14000a694:	lea    rcx,[rsp+0x50]
   14000a699:	call   QWORD PTR [rip+0xbbd9]        # 0x140016278
   14000a69f:	inc    r14d
   14000a6a2:	jmp    0x14000a3d0
   14000a6a7:	mov    rcx,QWORD PTR [r12]
   14000a6ab:	call   0x140014320
   14000a6b0:	lea    rcx,[rsp+0x30]
   14000a6b5:	call   QWORD PTR [rip+0xc27d]        # 0x140016938
   14000a6bb:	lea    rcx,[rsp+0x38]
   14000a6c0:	call   QWORD PTR [rip+0xbbb2]        # 0x140016278
   14000a6c6:	mov    rsi,QWORD PTR [rsp+0x1f8]
   14000a6ce:	mov    rbp,QWORD PTR [rsp+0x1f0]
   14000a6d6:	mov    rbx,QWORD PTR [rsp+0x1e8]
   14000a6de:	mov    rdi,QWORD PTR [rsp+0x1b0]
   14000a6e6:	add    rsp,0x1b8
   14000a6ed:	pop    r15
   14000a6ef:	pop    r14
   14000a6f1:	pop    r13
   14000a6f3:	pop    r12
   14000a6f5:	ret    
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	int3   
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	rex push rbp
   14000a702:	push   rsi
   14000a703:	push   rdi
   14000a704:	sub    rsp,0x30
   14000a708:	mov    rax,QWORD PTR [rcx]
   14000a70b:	mov    rdi,rcx
   14000a70e:	mov    rsi,rdx
   14000a711:	mov    ecx,DWORD PTR [rax+0x10]
   14000a714:	cmp    ecx,0x1
   14000a717:	je     0x14000a725
   14000a719:	test   ecx,ecx
   14000a71b:	je     0x14000a725
   14000a71d:	mov    rcx,rdi
   14000a720:	call   0x1400096e0
   14000a725:	mov    rax,QWORD PTR [rdi]
   14000a728:	mov    rcx,rsi
   14000a72b:	mov    edx,DWORD PTR [rax+0x24]
   14000a72e:	call   QWORD PTR [rip+0xbbac]        # 0x1400162e0
   14000a734:	mov    rdx,rsi
   14000a737:	mov    rcx,rdi
   14000a73a:	mov    r8d,eax
   14000a73d:	mov    ebp,eax
   14000a73f:	mov    DWORD PTR [rsp+0x50],eax
   14000a743:	call   0x140001e30
   14000a748:	mov    rcx,QWORD PTR [rdi]
   14000a74b:	mov    r11,rax
   14000a74e:	mov    rax,QWORD PTR [rax]
   14000a751:	cmp    rax,rcx
   14000a754:	jne    0x14000a7fe
   14000a75a:	mov    edx,DWORD PTR [rcx+0x20]
   14000a75d:	mov    QWORD PTR [rsp+0x58],rbx
   14000a762:	cmp    DWORD PTR [rcx+0x14],edx
   14000a765:	jl     0x14000a79a
   14000a767:	movsx  edx,WORD PTR [rcx+0x1e]
   14000a76b:	inc    edx
   14000a76d:	call   QWORD PTR [rip+0xbc25]        # 0x140016398
   14000a773:	mov    r11,QWORD PTR [rdi]
   14000a776:	mov    rcx,rsi
   14000a779:	mov    edx,DWORD PTR [r11+0x24]
   14000a77d:	call   QWORD PTR [rip+0xbb5d]        # 0x1400162e0
   14000a783:	mov    rdx,rsi
   14000a786:	mov    rcx,rdi
   14000a789:	mov    r8d,eax
   14000a78c:	mov    ebp,eax
   14000a78e:	mov    DWORD PTR [rsp+0x50],eax
   14000a792:	call   0x140001e30
   14000a797:	mov    r11,rax
   14000a79a:	mov    rbx,QWORD PTR [rip+0xba87]        # 0x140016228
   14000a7a1:	lea    r9,[rsp+0x60]
   14000a7a6:	mov    r8,rsi
   14000a7a9:	mov    edx,ebp
   14000a7ab:	mov    rcx,rdi
   14000a7ae:	mov    QWORD PTR [rsp+0x20],r11
   14000a7b3:	mov    QWORD PTR [rsp+0x60],rbx
   14000a7b8:	call   0x140008a70
   14000a7bd:	mov    rdi,rax
   14000a7c0:	mov    eax,DWORD PTR [rbx+0x10]
   14000a7c3:	test   eax,eax
   14000a7c5:	je     0x14000a7dd
   14000a7c7:	cmp    eax,0xffffffff
   14000a7ca:	je     0x14000a7ed
   14000a7cc:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000a7d1:	setne  cl
   14000a7d4:	test   cl,cl
   14000a7d6:	jne    0x14000a7ed
   14000a7d8:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a7dd:	lea    rdx,[rip+0x947c]        # 0x140013c60
   14000a7e4:	mov    rcx,rbx
   14000a7e7:	call   QWORD PTR [rip+0xbaab]        # 0x140016298
   14000a7ed:	lea    rax,[rdi+0x18]
   14000a7f1:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a7f6:	add    rsp,0x30
   14000a7fa:	pop    rdi
   14000a7fb:	pop    rsi
   14000a7fc:	pop    rbp
   14000a7fd:	ret    
   14000a7fe:	add    rax,0x18
   14000a802:	add    rsp,0x30
   14000a806:	pop    rdi
   14000a807:	pop    rsi
   14000a808:	pop    rbp
   14000a809:	ret    
   14000a80a:	int3   
   14000a80b:	int3   
   14000a80c:	int3   
   14000a80d:	int3   
   14000a80e:	int3   
   14000a80f:	int3   
   14000a810:	mov    QWORD PTR [rsp+0x10],rdx
   14000a815:	mov    QWORD PTR [rsp+0x8],rcx
   14000a81a:	push   rbx
   14000a81b:	push   rbp
   14000a81c:	push   rsi
   14000a81d:	push   rdi
   14000a81e:	push   r12
   14000a820:	push   r13
   14000a822:	push   r14
   14000a824:	push   r15
   14000a826:	sub    rsp,0x98
   14000a82d:	mov    rsi,rcx
   14000a830:	lea    rcx,[rsp+0x50]
   14000a835:	xor    r14d,r14d
   14000a838:	mov    rdi,rdx
   14000a83b:	mov    DWORD PTR [rsp+0xf0],r14d
   14000a843:	call   QWORD PTR [rip+0xc207]        # 0x140016a50
   14000a849:	mov    rdx,QWORD PTR [rax]
   14000a84c:	mov    rbx,rax
   14000a84f:	mov    QWORD PTR [rsp+0x30],rdx
   14000a854:	mov    r8d,DWORD PTR [rdx]
   14000a857:	test   r8d,r8d
   14000a85a:	je     0x14000a868
   14000a85c:	cmp    r8d,0xffffffff
   14000a860:	je     0x14000a8bb
   14000a862:	lock add DWORD PTR [rdx],0x1
   14000a866:	jmp    0x14000a8b6
   14000a868:	mov    edx,DWORD PTR [rdx+0x4]
   14000a86b:	lea    rcx,[rsp+0x30]
   14000a870:	call   QWORD PTR [rip+0xbaaa]        # 0x140016320
   14000a876:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a87b:	mov    rcx,QWORD PTR [rbx]
   14000a87e:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a882:	lea    r8,[rdx+rax*8+0x10]
   14000a887:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a88b:	lea    r9,[rcx+rax*8+0x10]
   14000a890:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a894:	lea    rcx,[rdx+rax*8+0x10]
   14000a899:	cmp    r9,rcx
   14000a89c:	je     0x14000a8bb
   14000a89e:	sub    r8,rcx
   14000a8a1:	sar    r8,0x3
   14000a8a5:	test   r8,r8
   14000a8a8:	jle    0x14000a8bb
   14000a8aa:	shl    r8,0x3
   14000a8ae:	mov    rdx,r9
   14000a8b1:	call   0x140015084
   14000a8b6:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a8bb:	mov    DWORD PTR [rsp+0x38],r14d
   14000a8c0:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a8c4:	lea    rcx,[rdx+rax*8+0x10]
   14000a8c9:	mov    QWORD PTR [rsp+0x40],rcx
   14000a8ce:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a8d2:	lea    rcx,[rdx+rax*8+0x10]
   14000a8d7:	mov    QWORD PTR [rsp+0x48],rcx
   14000a8dc:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a8e1:	mov    eax,DWORD PTR [rcx]
   14000a8e3:	test   eax,eax
   14000a8e5:	je     0x14000a8fc
   14000a8e7:	cmp    eax,0xffffffff
   14000a8ea:	je     0x14000a902
   14000a8ec:	lock add DWORD PTR [rcx],0xffffffff
   14000a8f0:	setne  al
   14000a8f3:	test   al,al
   14000a8f5:	jne    0x14000a902
   14000a8f7:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a8fc:	call   QWORD PTR [rip+0xb9a6]        # 0x1400162a8
   14000a902:	mov    eax,DWORD PTR [rsp+0x38]
   14000a906:	inc    DWORD PTR [rsp+0x38]
   14000a90a:	test   eax,eax
   14000a90c:	jne    0x14000a91e
   14000a90e:	mov    rax,QWORD PTR [rsp+0x48]
   14000a913:	cmp    QWORD PTR [rsp+0x40],rax
   14000a918:	je     0x14000a91e
   14000a91a:	mov    bl,0x1
   14000a91c:	jmp    0x14000a920
   14000a91e:	xor    bl,bl
   14000a920:	test   r14b,0x2
   14000a924:	je     0x14000a950
   14000a926:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a92b:	and    r14d,0xfffffffd
   14000a92f:	mov    eax,DWORD PTR [rcx]
   14000a931:	test   eax,eax
   14000a933:	je     0x14000a94a
   14000a935:	cmp    eax,0xffffffff
   14000a938:	je     0x14000a950
   14000a93a:	lock add DWORD PTR [rcx],0xffffffff
   14000a93e:	setne  al
   14000a941:	test   al,al
   14000a943:	jne    0x14000a950
   14000a945:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a94a:	call   QWORD PTR [rip+0xb958]        # 0x1400162a8
   14000a950:	test   bl,bl
   14000a952:	je     0x14000ae49
   14000a958:	mov    rax,QWORD PTR [rsp+0x40]
   14000a95d:	mov    rcx,QWORD PTR [rax]
   14000a960:	mov    QWORD PTR [rsp+0xf8],rcx
   14000a968:	test   r14b,0x4
   14000a96c:	je     0x14000a9a0
   14000a96e:	mov    rcx,QWORD PTR [rsp+0x78]
   14000a973:	and    r14d,0xfffffffb
   14000a977:	mov    eax,DWORD PTR [rcx]
   14000a979:	test   eax,eax
   14000a97b:	je     0x14000a992
   14000a97d:	cmp    eax,0xffffffff
   14000a980:	je     0x14000a9a0
   14000a982:	lock add DWORD PTR [rcx],0xffffffff
   14000a986:	setne  al
   14000a989:	test   al,al
   14000a98b:	jne    0x14000a9a0
   14000a98d:	mov    rcx,QWORD PTR [rsp+0x78]
   14000a992:	call   QWORD PTR [rip+0xb910]        # 0x1400162a8
   14000a998:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a9a0:	mov    ebx,DWORD PTR [rsp+0x38]
   14000a9a4:	test   r14b,0x10
   14000a9a8:	je     0x14000a9da
   14000a9aa:	mov    rax,QWORD PTR [rsp+0x80]
   14000a9b2:	and    r14d,0xffffffef
   14000a9b6:	mov    ecx,DWORD PTR [rax]
   14000a9b8:	test   ecx,ecx
   14000a9ba:	je     0x14000a9cc
   14000a9bc:	cmp    ecx,0xffffffff
   14000a9bf:	je     0x14000a9da
   14000a9c1:	lock add DWORD PTR [rax],0xffffffff
   14000a9c5:	setne  al
   14000a9c8:	test   al,al
   14000a9ca:	jne    0x14000a9da
   14000a9cc:	mov    rcx,QWORD PTR [rsp+0x80]
   14000a9d4:	call   QWORD PTR [rip+0xb8ce]        # 0x1400162a8
   14000a9da:	test   ebx,ebx
   14000a9dc:	je     0x14000ae04
   14000a9e2:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000a9ea:	call   QWORD PTR [rip+0xc088]        # 0x140016a78
   14000a9f0:	mov    r9,QWORD PTR [rdi]
   14000a9f3:	xor    r8d,r8d
   14000a9f6:	mov    ecx,DWORD PTR [r9+0x20]
   14000a9fa:	mov    r11,rax
   14000a9fd:	test   ecx,ecx
   14000a9ff:	je     0x14000aa49
   14000aa01:	mov    r8,rax
   14000aa04:	shr    r8,0x1f
   14000aa08:	xor    r8d,DWORD PTR [r9+0x24]
   14000aa0c:	xor    r8d,eax
   14000aa0f:	test   ecx,ecx
   14000aa11:	je     0x14000aa49
   14000aa13:	xor    edx,edx
   14000aa15:	mov    eax,r8d
   14000aa18:	div    ecx
   14000aa1a:	mov    rax,QWORD PTR [r9+0x8]
   14000aa1e:	lea    rdx,[rax+rdx*8]
   14000aa22:	mov    rax,QWORD PTR [rdx]
   14000aa25:	cmp    rax,r9
   14000aa28:	je     0x14000aa4c
   14000aa2a:	nop    WORD PTR [rax+rax*1+0x0]
   14000aa30:	cmp    r8d,DWORD PTR [rax+0x8]
   14000aa34:	jne    0x14000aa3c
   14000aa36:	cmp    r11,QWORD PTR [rax+0x10]
   14000aa3a:	je     0x14000aa4c
   14000aa3c:	mov    rdx,rax
   14000aa3f:	mov    rax,QWORD PTR [rax]
   14000aa42:	cmp    rax,r9
   14000aa45:	jne    0x14000aa30
   14000aa47:	jmp    0x14000aa4c
   14000aa49:	mov    rdx,rdi
   14000aa4c:	cmp    QWORD PTR [rdx],r9
   14000aa4f:	jne    0x14000adc5
   14000aa55:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000aa5d:	mov    rcx,rbx
   14000aa60:	call   QWORD PTR [rip+0xbff2]        # 0x140016a58
   14000aa66:	test   al,al
   14000aa68:	jne    0x14000aa7d
   14000aa6a:	mov    r8,rdi
   14000aa6d:	mov    rdx,rbx
   14000aa70:	mov    rcx,rsi
   14000aa73:	call   0x140005b90
   14000aa78:	jmp    0x14000adc5
   14000aa7d:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000aa85:	call   QWORD PTR [rip+0xbfd5]        # 0x140016a60
   14000aa8b:	mov    rcx,QWORD PTR [rip+0x12656]        # 0x14001d0e8
   14000aa92:	mov    edx,DWORD PTR [rcx]
   14000aa94:	mov    r13,rax
   14000aa97:	cmp    edx,0x1
   14000aa9a:	je     0x14000ab3d
   14000aaa0:	test   edx,edx
   14000aaa2:	je     0x14000ab3d
   14000aaa8:	call   QWORD PTR [rip+0xb7da]        # 0x140016288
   14000aaae:	mov    rbx,QWORD PTR [rip+0x12633]        # 0x14001d0e8
   14000aab5:	mov    rcx,QWORD PTR [rbx+0x10]
   14000aab9:	mov    rdi,rax
   14000aabc:	test   rcx,rcx
   14000aabf:	je     0x14000aadf
   14000aac1:	mov    rdx,rax
   14000aac4:	call   0x140005450
   14000aac9:	lea    rcx,[rdi+0x8]
   14000aacd:	mov    QWORD PTR [rdi+0x10],rax
   14000aad1:	and    QWORD PTR [rax],0x3
   14000aad5:	or     QWORD PTR [rax],rcx
   14000aad8:	mov    rbx,QWORD PTR [rip+0x12609]        # 0x14001d0e8
   14000aadf:	mov    eax,DWORD PTR [rbx]
   14000aae1:	test   eax,eax
   14000aae3:	je     0x14000aafc
   14000aae5:	cmp    eax,0xffffffff
   14000aae8:	je     0x14000ab26
   14000aaea:	lock add DWORD PTR [rbx],0xffffffff
   14000aaee:	setne  al
   14000aaf1:	test   al,al
   14000aaf3:	jne    0x14000ab26
   14000aaf5:	mov    rbx,QWORD PTR [rip+0x125ec]        # 0x14001d0e8
   14000aafc:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ab00:	test   rcx,rcx
   14000ab03:	je     0x14000ab1d
   14000ab05:	call   0x140008650
   14000ab0a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ab0e:	mov    r8d,0x8
   14000ab14:	mov    rcx,rbx
   14000ab17:	call   QWORD PTR [rip+0xb7fb]        # 0x140016318
   14000ab1d:	mov    rcx,rbx
   14000ab20:	call   QWORD PTR [rip+0xb7ea]        # 0x140016310
   14000ab26:	mov    rcx,rdi
   14000ab29:	mov    QWORD PTR [rip+0x125b8],rdi        # 0x14001d0e8
   14000ab30:	call   QWORD PTR [rip+0xb80a]        # 0x140016340
   14000ab36:	mov    rcx,QWORD PTR [rip+0x125ab]        # 0x14001d0e8
   14000ab3d:	mov    rbx,QWORD PTR [rcx+0x10]
   14000ab41:	test   rbx,rbx
   14000ab44:	je     0x14000ab99
   14000ab46:	xor    edi,edi
   14000ab48:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ab50:	lea    rcx,[rbx+0x18]
   14000ab54:	mov    rdx,r13
   14000ab57:	call   QWORD PTR [rip+0xb713]        # 0x140016270
   14000ab5d:	test   al,al
   14000ab5f:	jne    0x14000ab6a
   14000ab61:	mov    rdi,rbx
   14000ab64:	mov    rbx,QWORD PTR [rbx+0x8]
   14000ab68:	jmp    0x14000ab6e
   14000ab6a:	mov    rbx,QWORD PTR [rbx+0x10]
   14000ab6e:	test   rbx,rbx
   14000ab71:	jne    0x14000ab50
   14000ab73:	test   rdi,rdi
   14000ab76:	je     0x14000ab92
   14000ab78:	lea    rdx,[rdi+0x18]
   14000ab7c:	mov    rcx,r13
   14000ab7f:	call   QWORD PTR [rip+0xb6eb]        # 0x140016270
   14000ab85:	test   al,al
   14000ab87:	jne    0x14000ab92
   14000ab89:	lea    rbx,[rdi+0x20]
   14000ab8d:	jmp    0x14000ad9d
   14000ab92:	mov    rcx,QWORD PTR [rip+0x1254f]        # 0x14001d0e8
   14000ab99:	mov    eax,DWORD PTR [rcx]
   14000ab9b:	mov    rdi,QWORD PTR [rip+0xb686]        # 0x140016228
   14000aba2:	cmp    eax,0x1
   14000aba5:	je     0x14000ac48
   14000abab:	test   eax,eax
   14000abad:	je     0x14000ac48
   14000abb3:	call   QWORD PTR [rip+0xb6cf]        # 0x140016288
   14000abb9:	mov    rbx,QWORD PTR [rip+0x12528]        # 0x14001d0e8
   14000abc0:	mov    rcx,QWORD PTR [rbx+0x10]
   14000abc4:	mov    rsi,rax
   14000abc7:	test   rcx,rcx
   14000abca:	je     0x14000abea
   14000abcc:	mov    rdx,rax
   14000abcf:	call   0x140005450
   14000abd4:	lea    rcx,[rsi+0x8]
   14000abd8:	mov    QWORD PTR [rsi+0x10],rax
   14000abdc:	and    QWORD PTR [rax],0x3
   14000abe0:	or     QWORD PTR [rax],rcx
   14000abe3:	mov    rbx,QWORD PTR [rip+0x124fe]        # 0x14001d0e8
   14000abea:	mov    eax,DWORD PTR [rbx]
   14000abec:	test   eax,eax
   14000abee:	je     0x14000ac07
   14000abf0:	cmp    eax,0xffffffff
   14000abf3:	je     0x14000ac31
   14000abf5:	lock add DWORD PTR [rbx],0xffffffff
   14000abf9:	setne  al
   14000abfc:	test   al,al
   14000abfe:	jne    0x14000ac31
   14000ac00:	mov    rbx,QWORD PTR [rip+0x124e1]        # 0x14001d0e8
   14000ac07:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ac0b:	test   rcx,rcx
   14000ac0e:	je     0x14000ac28
   14000ac10:	call   0x140008650
   14000ac15:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ac19:	mov    r8d,0x8
   14000ac1f:	mov    rcx,rbx
   14000ac22:	call   QWORD PTR [rip+0xb6f0]        # 0x140016318
   14000ac28:	mov    rcx,rbx
   14000ac2b:	call   QWORD PTR [rip+0xb6df]        # 0x140016310
   14000ac31:	mov    rcx,rsi
   14000ac34:	mov    QWORD PTR [rip+0x124ad],rsi        # 0x14001d0e8
   14000ac3b:	call   QWORD PTR [rip+0xb6ff]        # 0x140016340
   14000ac41:	mov    rcx,QWORD PTR [rip+0x124a0]        # 0x14001d0e8
   14000ac48:	mov    rsi,QWORD PTR [rcx+0x10]
   14000ac4c:	xor    ebx,ebx
   14000ac4e:	lea    r12,[rcx+0x8]
   14000ac52:	mov    bpl,0x1
   14000ac55:	test   rsi,rsi
   14000ac58:	je     0x14000ad01
   14000ac5e:	xchg   ax,ax
   14000ac60:	lea    rcx,[rsi+0x18]
   14000ac64:	mov    rdx,r13
   14000ac67:	mov    r12,rsi
   14000ac6a:	call   QWORD PTR [rip+0xb600]        # 0x140016270
   14000ac70:	test   al,al
   14000ac72:	jne    0x14000ac80
   14000ac74:	mov    rbx,rsi
   14000ac77:	mov    rsi,QWORD PTR [rsi+0x8]
   14000ac7b:	mov    bpl,0x1
   14000ac7e:	jmp    0x14000ac87
   14000ac80:	mov    rsi,QWORD PTR [rsi+0x10]
   14000ac84:	xor    bpl,bpl
   14000ac87:	test   rsi,rsi
   14000ac8a:	jne    0x14000ac60
   14000ac8c:	test   rbx,rbx
   14000ac8f:	je     0x14000acfa
   14000ac91:	lea    rdx,[rbx+0x18]
   14000ac95:	mov    rcx,r13
   14000ac98:	call   QWORD PTR [rip+0xb5d2]        # 0x140016270
   14000ac9e:	test   al,al
   14000aca0:	jne    0x14000acfa
   14000aca2:	cmp    QWORD PTR [rbx+0x20],rdi
   14000aca6:	je     0x14000ad64
   14000acac:	mov    eax,DWORD PTR [rdi+0x10]
   14000acaf:	test   eax,eax
   14000acb1:	je     0x14000acbd
   14000acb3:	cmp    eax,0xffffffff
   14000acb6:	je     0x14000acbd
   14000acb8:	lock add DWORD PTR [rdi+0x10],0x1
   14000acbd:	mov    rcx,QWORD PTR [rbx+0x20]
   14000acc1:	mov    eax,DWORD PTR [rcx+0x10]
   14000acc4:	test   eax,eax
   14000acc6:	je     0x14000acd9
   14000acc8:	cmp    eax,0xffffffff
   14000accb:	je     0x14000acea
   14000accd:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000acd2:	setne  al
   14000acd5:	test   al,al
   14000acd7:	jne    0x14000acea
   14000acd9:	mov    rcx,QWORD PTR [rbx+0x20]
   14000acdd:	lea    rdx,[rip+0x8f7c]        # 0x140013c60
   14000ace4:	call   QWORD PTR [rip+0xb5ae]        # 0x140016298
   14000acea:	mov    QWORD PTR [rbx+0x20],rdi
   14000acee:	test   BYTE PTR [rdi+0x28],0x1
   14000acf2:	jne    0x14000ad64
   14000acf4:	lea    rcx,[rbx+0x20]
   14000acf8:	jmp    0x14000ad5f
   14000acfa:	mov    rcx,QWORD PTR [rip+0x123e7]        # 0x14001d0e8
   14000ad01:	mov    edx,0x28
   14000ad06:	mov    r9,r12
   14000ad09:	mov    BYTE PTR [rsp+0x20],bpl
   14000ad0e:	lea    r8d,[rdx-0x20]
   14000ad12:	call   QWORD PTR [rip+0xb548]        # 0x140016260
   14000ad18:	mov    rbx,rax
   14000ad1b:	lea    rcx,[rax+0x18]
   14000ad1f:	test   rcx,rcx
   14000ad22:	je     0x14000ad2d
   14000ad24:	mov    rdx,r13
   14000ad27:	call   QWORD PTR [rip+0xb813]        # 0x140016540
   14000ad2d:	lea    rcx,[rbx+0x20]
   14000ad31:	test   rcx,rcx
   14000ad34:	je     0x14000ad64
   14000ad36:	mov    QWORD PTR [rcx],rdi
   14000ad39:	mov    eax,DWORD PTR [rdi+0x10]
   14000ad3c:	test   eax,eax
   14000ad3e:	je     0x14000ad4a
   14000ad40:	cmp    eax,0xffffffff
   14000ad43:	je     0x14000ad4a
   14000ad45:	lock add DWORD PTR [rdi+0x10],0x1
   14000ad4a:	mov    rax,QWORD PTR [rcx]
   14000ad4d:	test   BYTE PTR [rax+0x28],0x1
   14000ad51:	jne    0x14000ad64
   14000ad53:	mov    eax,DWORD PTR [rax+0x10]
   14000ad56:	cmp    eax,0x1
   14000ad59:	je     0x14000ad64
   14000ad5b:	test   eax,eax
   14000ad5d:	je     0x14000ad64
   14000ad5f:	call   0x140002ae0
   14000ad64:	mov    eax,DWORD PTR [rdi+0x10]
   14000ad67:	mov    QWORD PTR [rsp+0x58],rbx
   14000ad6c:	add    rbx,0x20
   14000ad70:	test   eax,eax
   14000ad72:	je     0x14000ad85
   14000ad74:	cmp    eax,0xffffffff
   14000ad77:	je     0x14000ad95
   14000ad79:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000ad7e:	setne  al
   14000ad81:	test   al,al
   14000ad83:	jne    0x14000ad95
   14000ad85:	lea    rdx,[rip+0x8ed4]        # 0x140013c60
   14000ad8c:	mov    rcx,rdi
   14000ad8f:	call   QWORD PTR [rip+0xb503]        # 0x140016298
   14000ad95:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000ad9d:	lea    r9,[rsp+0xf0]
   14000ada5:	lea    r8,[rsp+0xf8]
   14000adad:	lea    rdx,[rsp+0x88]
   14000adb5:	mov    rcx,rbx
   14000adb8:	call   0x140003f80
   14000adbd:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000adc5:	dec    DWORD PTR [rsp+0x38]
   14000adc9:	test   r14b,0x8
   14000adcd:	je     0x14000a9a0
   14000add3:	mov    rax,QWORD PTR [rsp+0x60]
   14000add8:	and    r14d,0xfffffff7
   14000addc:	mov    ecx,DWORD PTR [rax]
   14000adde:	test   ecx,ecx
   14000ade0:	je     0x14000adfa
   14000ade2:	cmp    ecx,0xffffffff
   14000ade5:	je     0x14000a9a0
   14000adeb:	lock add DWORD PTR [rax],0xffffffff
   14000adef:	setne  al
   14000adf2:	test   al,al
   14000adf4:	jne    0x14000a9a0
   14000adfa:	mov    rcx,QWORD PTR [rsp+0x60]
   14000adff:	jmp    0x14000a992
   14000ae04:	add    QWORD PTR [rsp+0x40],0x8
   14000ae0a:	test   r14b,0x1
   14000ae0e:	je     0x14000a902
   14000ae14:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ae19:	and    r14d,0xfffffffe
   14000ae1d:	mov    eax,DWORD PTR [rcx]
   14000ae1f:	test   eax,eax
   14000ae21:	je     0x14000a8fc
   14000ae27:	cmp    eax,0xffffffff
   14000ae2a:	je     0x14000a902
   14000ae30:	lock add DWORD PTR [rcx],0xffffffff
   14000ae34:	setne  al
   14000ae37:	test   al,al
   14000ae39:	jne    0x14000a902
   14000ae3f:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ae44:	jmp    0x14000a8fc
   14000ae49:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ae4e:	mov    eax,DWORD PTR [rcx]
   14000ae50:	test   eax,eax
   14000ae52:	je     0x14000ae69
   14000ae54:	cmp    eax,0xffffffff
   14000ae57:	je     0x14000ae6f
   14000ae59:	lock add DWORD PTR [rcx],0xffffffff
   14000ae5d:	setne  al
   14000ae60:	test   al,al
   14000ae62:	jne    0x14000ae6f
   14000ae64:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ae69:	call   QWORD PTR [rip+0xb439]        # 0x1400162a8
   14000ae6f:	add    rsp,0x98
   14000ae76:	pop    r15
   14000ae78:	pop    r14
   14000ae7a:	pop    r13
   14000ae7c:	pop    r12
   14000ae7e:	pop    rdi
   14000ae7f:	pop    rsi
   14000ae80:	pop    rbp
   14000ae81:	pop    rbx
   14000ae82:	ret    
   14000ae83:	int3   
   14000ae84:	int3   
   14000ae85:	int3   
   14000ae86:	int3   
   14000ae87:	int3   
   14000ae88:	int3   
   14000ae89:	int3   
   14000ae8a:	int3   
   14000ae8b:	int3   
   14000ae8c:	int3   
   14000ae8d:	int3   
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	mov    rax,rsp
   14000ae93:	mov    QWORD PTR [rax+0x8],rcx
   14000ae97:	push   rbx
   14000ae98:	push   r15
   14000ae9a:	sub    rsp,0x288
   14000aea1:	mov    QWORD PTR [rax+0x18],rbp
   14000aea5:	mov    QWORD PTR [rax-0x18],rsi
   14000aea9:	mov    QWORD PTR [rax-0x20],rdi
   14000aead:	mov    QWORD PTR [rax-0x28],r12
   14000aeb1:	mov    QWORD PTR [rax-0x30],r13
   14000aeb5:	mov    r12,rcx
   14000aeb8:	mov    QWORD PTR [rax-0x38],r14
   14000aebc:	xor    esi,esi
   14000aebe:	mov    rcx,rdx
   14000aec1:	mov    DWORD PTR [rsp+0x2a8],esi
   14000aec8:	mov    rbx,QWORD PTR [rip+0xb359]        # 0x140016228
   14000aecf:	mov    r14,r8
   14000aed2:	mov    QWORD PTR [rsp+0x40],rbx
   14000aed7:	mov    r13,rdx
   14000aeda:	call   QWORD PTR [rip+0xb720]        # 0x140016600
   14000aee0:	mov    rcx,r13
   14000aee3:	mov    edi,eax
   14000aee5:	mov    DWORD PTR [rsp+0x2b8],eax
   14000aeec:	call   QWORD PTR [rip+0xb52e]        # 0x140016420
   14000aef2:	or     r15,0xffffffffffffffff
   14000aef6:	cmp    edi,eax
   14000aef8:	jge    0x14000b1d7
   14000aefe:	xchg   ax,ax
   14000af00:	lea    rdx,[rsp+0x150]
   14000af08:	mov    r8d,edi
   14000af0b:	mov    rcx,r13
   14000af0e:	call   QWORD PTR [rip+0xb504]        # 0x140016418
   14000af14:	lea    rdx,[rsp+0x150]
   14000af1c:	mov    r8,r14
   14000af1f:	mov    rcx,r12
   14000af22:	call   0x140006080
   14000af27:	test   r14,r14
   14000af2a:	je     0x14000af8d
   14000af2c:	lea    rcx,[rsp+0x150]
   14000af34:	call   QWORD PTR [rip+0xb516]        # 0x140016450
   14000af3a:	lea    rcx,[rsp+0x150]
   14000af42:	mov    edi,eax
   14000af44:	call   QWORD PTR [rip+0xb4be]        # 0x140016408
   14000af4a:	lea    rcx,[rsp+0x138]
   14000af52:	mov    rdx,rax
   14000af55:	mov    r8d,r15d
   14000af58:	call   QWORD PTR [rip+0xb412]        # 0x140016370
   14000af5e:	lea    rdx,[rip+0xc243]        # 0x1400171a8
   14000af65:	mov    rcx,rax
   14000af68:	call   QWORD PTR [rip+0xb4ca]        # 0x140016438
   14000af6e:	mov    r9d,edi
   14000af71:	xor    r8d,r8d
   14000af74:	mov    rdx,rax
   14000af77:	mov    rcx,r14
   14000af7a:	call   0x140009b70
   14000af7f:	lea    rcx,[rsp+0x138]
   14000af87:	call   QWORD PTR [rip+0xb2eb]        # 0x140016278
   14000af8d:	xor    eax,eax
   14000af8f:	lea    rdi,[rip+0xc202]        # 0x140017198
   14000af96:	mov    rcx,r15
   14000af99:	repnz scas al,BYTE PTR es:[rdi]
   14000af9b:	not    rcx
   14000af9e:	lea    rdx,[rcx-0x1]
   14000afa2:	lea    rcx,[rip+0xc1ef]        # 0x140017198
   14000afa9:	call   QWORD PTR [rip+0xb921]        # 0x1400168d0
   14000afaf:	lea    rcx,[rsp+0x2a8]
   14000afb7:	mov    dl,0x20
   14000afb9:	mov    QWORD PTR [rsp+0xc0],rax
   14000afc1:	call   QWORD PTR [rip+0xb951]        # 0x140016918
   14000afc7:	lea    rcx,[rsp+0x150]
   14000afcf:	mov    rdi,rax
   14000afd2:	call   QWORD PTR [rip+0xb430]        # 0x140016408
   14000afd8:	lea    rcx,[rsp+0xe8]
   14000afe0:	mov    rdx,rax
   14000afe3:	mov    r8d,r15d
   14000afe6:	call   QWORD PTR [rip+0xb93c]        # 0x140016928
   14000afec:	lea    rdx,[rsp+0x130]
   14000aff4:	lea    rcx,[rsp+0xc0]
   14000affc:	mov    r8,rax
   14000afff:	movzx  eax,WORD PTR [rdi]
   14000b002:	xor    r9d,r9d
   14000b005:	mov    WORD PTR [rsp+0x20],ax
   14000b00a:	call   QWORD PTR [rip+0xb8d0]        # 0x1400168e0
   14000b010:	mov    r12,rax
   14000b013:	mov    eax,DWORD PTR [rbx+0x10]
   14000b016:	cmp    eax,0x1
   14000b019:	je     0x14000b082
   14000b01b:	test   eax,eax
   14000b01d:	je     0x14000b082
   14000b01f:	lea    r8,[rip+0xffffffffffff72aa]        # 0x1400022d0
   14000b026:	lea    rdx,[rip+0xffffffffffff6353]        # 0x140001380
   14000b02d:	mov    r9d,0x18
   14000b033:	mov    rcx,rbx
   14000b036:	mov    DWORD PTR [rsp+0x20],0x8
   14000b03e:	call   QWORD PTR [rip+0xb2e4]        # 0x140016328
   14000b044:	mov    ecx,DWORD PTR [rbx+0x10]
   14000b047:	mov    rdi,rax
   14000b04a:	test   ecx,ecx
   14000b04c:	je     0x14000b06a
   14000b04e:	cmp    ecx,0xffffffff
   14000b051:	je     0x14000b07a
   14000b053:	mov    ecx,r15d
   14000b056:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000b05b:	add    ecx,0xffffffff
   14000b05e:	setne  cl
   14000b061:	test   cl,cl
   14000b063:	jne    0x14000b07a
   14000b065:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b06a:	lea    rdx,[rip+0xffffffffffff725f]        # 0x1400022d0
   14000b071:	mov    rcx,rbx
   14000b074:	call   QWORD PTR [rip+0xb21e]        # 0x140016298
   14000b07a:	mov    rbx,rdi
   14000b07d:	mov    QWORD PTR [rsp+0x40],rbx
   14000b082:	mov    edx,DWORD PTR [rbx+0x24]
   14000b085:	mov    rcx,r12
   14000b088:	call   QWORD PTR [rip+0xb24a]        # 0x1400162d8
   14000b08e:	mov    ecx,DWORD PTR [rbx+0x20]
   14000b091:	mov    ebp,eax
   14000b093:	mov    DWORD PTR [rsp+0x50],eax
   14000b097:	test   ecx,ecx
   14000b099:	je     0x14000b0d3
   14000b09b:	xor    edx,edx
   14000b09d:	div    ecx
   14000b09f:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b0a3:	lea    rdi,[rcx+rdx*8]
   14000b0a7:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14000b0ab:	cmp    rcx,rbx
   14000b0ae:	je     0x14000b0d8
   14000b0b0:	cmp    ebp,DWORD PTR [rcx+0x8]
   14000b0b3:	jne    0x14000b0c6
   14000b0b5:	lea    rdx,[rcx+0x10]
   14000b0b9:	mov    rcx,r12
   14000b0bc:	call   QWORD PTR [rip+0xb87e]        # 0x140016940
   14000b0c2:	test   al,al
   14000b0c4:	jne    0x14000b0d8
   14000b0c6:	mov    rdi,QWORD PTR [rdi]
   14000b0c9:	mov    rcx,QWORD PTR [rdi]
   14000b0cc:	cmp    rcx,rbx
   14000b0cf:	jne    0x14000b0b0
   14000b0d1:	jmp    0x14000b0d8
   14000b0d3:	lea    rdi,[rsp+0x40]
   14000b0d8:	cmp    QWORD PTR [rdi],rbx
   14000b0db:	jne    0x14000b184
   14000b0e1:	mov    rcx,rbx
   14000b0e4:	call   QWORD PTR [rip+0xb50e]        # 0x1400165f8
   14000b0ea:	test   al,al
   14000b0ec:	je     0x14000b148
   14000b0ee:	mov    edx,DWORD PTR [rbx+0x24]
   14000b0f1:	mov    rcx,r12
   14000b0f4:	call   QWORD PTR [rip+0xb1de]        # 0x1400162d8
   14000b0fa:	mov    ecx,DWORD PTR [rbx+0x20]
   14000b0fd:	mov    ebp,eax
   14000b0ff:	mov    DWORD PTR [rsp+0x50],eax
   14000b103:	test   ecx,ecx
   14000b105:	je     0x14000b143
   14000b107:	xor    edx,edx
   14000b109:	div    ecx
   14000b10b:	mov    rax,QWORD PTR [rbx+0x8]
   14000b10f:	lea    rdi,[rax+rdx*8]
   14000b113:	mov    rax,QWORD PTR [rax+rdx*8]
   14000b117:	cmp    rax,rbx
   14000b11a:	je     0x14000b148
   14000b11c:	nop    DWORD PTR [rax+0x0]
   14000b120:	cmp    ebp,DWORD PTR [rax+0x8]
   14000b123:	jne    0x14000b136
   14000b125:	lea    rdx,[rax+0x10]
   14000b129:	mov    rcx,r12
   14000b12c:	call   QWORD PTR [rip+0xb80e]        # 0x140016940
   14000b132:	test   al,al
   14000b134:	jne    0x14000b148
   14000b136:	mov    rdi,QWORD PTR [rdi]
   14000b139:	mov    rax,QWORD PTR [rdi]
   14000b13c:	cmp    rax,rbx
   14000b13f:	jne    0x14000b120
   14000b141:	jmp    0x14000b148
   14000b143:	lea    rdi,[rsp+0x40]
   14000b148:	mov    edx,0x8
   14000b14d:	mov    rcx,rbx
   14000b150:	call   QWORD PTR [rip+0xb15a]        # 0x1400162b0
   14000b156:	mov    rbx,rax
   14000b159:	test   rax,rax
   14000b15c:	je     0x14000b176
   14000b15e:	mov    rcx,QWORD PTR [rdi]
   14000b161:	mov    rdx,r12
   14000b164:	mov    DWORD PTR [rax+0x8],ebp
   14000b167:	mov    QWORD PTR [rax],rcx
   14000b16a:	lea    rcx,[rax+0x10]
   14000b16e:	call   QWORD PTR [rip+0xb3cc]        # 0x140016540
   14000b174:	jmp    0x14000b179
   14000b176:	mov    rbx,rsi
   14000b179:	mov    QWORD PTR [rdi],rbx
   14000b17c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b181:	inc    DWORD PTR [rbx+0x14]
   14000b184:	lea    rcx,[rsp+0x130]
   14000b18c:	call   QWORD PTR [rip+0xb7a6]        # 0x140016938
   14000b192:	lea    rcx,[rsp+0xc0]
   14000b19a:	call   QWORD PTR [rip+0xb798]        # 0x140016938
   14000b1a0:	lea    rcx,[rsp+0xe8]
   14000b1a8:	call   QWORD PTR [rip+0xb78a]        # 0x140016938
   14000b1ae:	mov    edi,DWORD PTR [rsp+0x2b8]
   14000b1b5:	mov    rcx,r13
   14000b1b8:	inc    edi
   14000b1ba:	mov    DWORD PTR [rsp+0x2b8],edi
   14000b1c1:	call   QWORD PTR [rip+0xb259]        # 0x140016420
   14000b1c7:	mov    r12,QWORD PTR [rsp+0x2a0]
   14000b1cf:	cmp    edi,eax
   14000b1d1:	jl     0x14000af00
   14000b1d7:	cmp    r13,QWORD PTR [rip+0xb412]        # 0x1400165f0
   14000b1de:	jne    0x14000ba8f
   14000b1e4:	mov    rcx,r13
   14000b1e7:	call   QWORD PTR [rip+0xb3fb]        # 0x1400165e8
   14000b1ed:	mov    rcx,r13
   14000b1f0:	mov    ebp,eax
   14000b1f2:	call   QWORD PTR [rip+0xb3e8]        # 0x1400165e0
   14000b1f8:	cmp    ebp,eax
   14000b1fa:	jge    0x14000b3d6
   14000b200:	lea    rdx,[rsp+0x140]
   14000b208:	mov    r8d,ebp
   14000b20b:	mov    rcx,r13
   14000b20e:	call   QWORD PTR [rip+0xb3c4]        # 0x1400165d8
   14000b214:	lea    rdx,[rsp+0x48]
   14000b219:	lea    rcx,[rsp+0x140]
   14000b221:	call   QWORD PTR [rip+0xb3a9]        # 0x1400165d0
   14000b227:	lea    rdx,[rip+0xbf52]        # 0x140017180
   14000b22e:	lea    rcx,[rsp+0xf8]
   14000b236:	mov    r8d,0x13
   14000b23c:	or     esi,0x1
   14000b23f:	call   QWORD PTR [rip+0xb12b]        # 0x140016370
   14000b245:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b24a:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000b24e:	mov    rcx,QWORD PTR [rax]
   14000b251:	cmp    edx,DWORD PTR [rcx+0x4]
   14000b254:	jne    0x14000b286
   14000b256:	mov    rcx,rax
   14000b259:	mov    rbx,rdx
   14000b25c:	call   QWORD PTR [rip+0xb6ee]        # 0x140016950
   14000b262:	lea    rcx,[rsp+0x48]
   14000b267:	mov    rdi,rax
   14000b26a:	call   QWORD PTR [rip+0xb6e0]        # 0x140016950
   14000b270:	mov    r8,rbx
   14000b273:	mov    rcx,rax
   14000b276:	mov    rdx,rdi
   14000b279:	call   0x14001507e
   14000b27e:	test   eax,eax
   14000b280:	je     0x14000b33c
   14000b286:	lea    rdx,[rip+0xbee3]        # 0x140017170
   14000b28d:	lea    rcx,[rsp+0x118]
   14000b295:	mov    r8d,0xb
   14000b29b:	or     esi,0x2
   14000b29e:	call   QWORD PTR [rip+0xb0cc]        # 0x140016370
   14000b2a4:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b2a9:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000b2ad:	mov    rcx,QWORD PTR [rax]
   14000b2b0:	cmp    edx,DWORD PTR [rcx+0x4]
   14000b2b3:	jne    0x14000b2e1
   14000b2b5:	mov    rcx,rax
   14000b2b8:	mov    rbx,rdx
   14000b2bb:	call   QWORD PTR [rip+0xb68f]        # 0x140016950
   14000b2c1:	lea    rcx,[rsp+0x48]
   14000b2c6:	mov    rdi,rax
   14000b2c9:	call   QWORD PTR [rip+0xb681]        # 0x140016950
   14000b2cf:	mov    r8,rbx
   14000b2d2:	mov    rcx,rax
   14000b2d5:	mov    rdx,rdi
   14000b2d8:	call   0x14001507e
   14000b2dd:	test   eax,eax
   14000b2df:	je     0x14000b33c
   14000b2e1:	lea    rdx,[rip+0xbe78]        # 0x140017160
   14000b2e8:	lea    rcx,[rsp+0xe0]
   14000b2f0:	mov    r8d,0xd
   14000b2f6:	or     esi,0x4
   14000b2f9:	call   QWORD PTR [rip+0xb071]        # 0x140016370
   14000b2ff:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b304:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000b308:	mov    rcx,QWORD PTR [rax]
   14000b30b:	cmp    edx,DWORD PTR [rcx+0x4]
   14000b30e:	jne    0x14000b341
   14000b310:	mov    rcx,rax
   14000b313:	mov    rbx,rdx
   14000b316:	call   QWORD PTR [rip+0xb634]        # 0x140016950
   14000b31c:	lea    rcx,[rsp+0x48]
   14000b321:	mov    rdi,rax
   14000b324:	call   QWORD PTR [rip+0xb626]        # 0x140016950
   14000b32a:	mov    r8,rbx
   14000b32d:	mov    rcx,rax
   14000b330:	mov    rdx,rdi
   14000b333:	call   0x14001507e
   14000b338:	test   eax,eax
   14000b33a:	jne    0x14000b341
   14000b33c:	mov    dil,0x1
   14000b33f:	jmp    0x14000b344
   14000b341:	xor    dil,dil
   14000b344:	test   sil,0x4
   14000b348:	je     0x14000b35b
   14000b34a:	lea    rcx,[rsp+0xe0]
   14000b352:	and    esi,0xfffffffb
   14000b355:	call   QWORD PTR [rip+0xaf1d]        # 0x140016278
   14000b35b:	test   sil,0x2
   14000b35f:	je     0x14000b372
   14000b361:	lea    rcx,[rsp+0x118]
   14000b369:	and    esi,0xfffffffd
   14000b36c:	call   QWORD PTR [rip+0xaf06]        # 0x140016278
   14000b372:	test   sil,0x1
   14000b376:	je     0x14000b389
   14000b378:	lea    rcx,[rsp+0xf8]
   14000b380:	and    esi,0xfffffffe
   14000b383:	call   QWORD PTR [rip+0xaeef]        # 0x140016278
   14000b389:	test   dil,dil
   14000b38c:	je     0x14000b39b
   14000b38e:	lea    rcx,[rsp+0x48]
   14000b393:	call   QWORD PTR [rip+0xaedf]        # 0x140016278
   14000b399:	jmp    0x14000b3be
   14000b39b:	lea    r8,[rsp+0x40]
   14000b3a0:	lea    rdx,[rsp+0x140]
   14000b3a8:	mov    r9,r14
   14000b3ab:	mov    rcx,r12
   14000b3ae:	call   0x140009d20
   14000b3b3:	lea    rcx,[rsp+0x48]
   14000b3b8:	call   QWORD PTR [rip+0xaeba]        # 0x140016278
   14000b3be:	mov    rcx,r13
   14000b3c1:	inc    ebp
   14000b3c3:	call   QWORD PTR [rip+0xb217]        # 0x1400165e0
   14000b3c9:	cmp    ebp,eax
   14000b3cb:	jl     0x14000b200
   14000b3d1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b3d6:	lea    rbp,[rip+0xbd73]        # 0x140017150
   14000b3dd:	test   r14,r14
   14000b3e0:	je     0x14000b413
   14000b3e2:	lea    rcx,[rsp+0xd0]
   14000b3ea:	mov    r8d,r15d
   14000b3ed:	mov    rdx,rbp
   14000b3f0:	or     esi,0x8
   14000b3f3:	call   QWORD PTR [rip+0xaf77]        # 0x140016370
   14000b3f9:	xor    r9d,r9d
   14000b3fc:	xor    r8d,r8d
   14000b3ff:	mov    rcx,r14
   14000b402:	mov    rdx,rax
   14000b405:	call   0x140009b70
   14000b40a:	test   al,al
   14000b40c:	je     0x14000b413
   14000b40e:	xor    dil,dil
   14000b411:	jmp    0x14000b416
   14000b413:	mov    dil,0x1
   14000b416:	test   sil,0x8
   14000b41a:	je     0x14000b42d
   14000b41c:	lea    rcx,[rsp+0xd0]
   14000b424:	and    esi,0xfffffff7
   14000b427:	call   QWORD PTR [rip+0xae4b]        # 0x140016278
   14000b42d:	lea    rdx,[rip+0xbcf0]        # 0x140017124
   14000b434:	lea    r13,[rip+0xb749]        # 0x140016b84
   14000b43b:	test   dil,dil
   14000b43e:	je     0x14000b56d
   14000b444:	mov    rdi,rdx
   14000b447:	mov    QWORD PTR [rsp+0x38],rdx
   14000b44c:	xor    eax,eax
   14000b44e:	mov    rcx,r15
   14000b451:	lea    rdx,[rsp+0x170]
   14000b459:	repnz scas al,BYTE PTR es:[rdi]
   14000b45b:	not    rcx
   14000b45e:	dec    rcx
   14000b461:	mov    DWORD PTR [rsp+0x30],ecx
   14000b465:	lea    rcx,[rsp+0xc8]
   14000b46d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b472:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   14000b47b:	call   QWORD PTR [rip+0xad8f]        # 0x140016210
   14000b481:	mov    rcx,QWORD PTR [r12]
   14000b485:	lea    rdx,[rsp+0xc8]
   14000b48d:	call   0x140014230
   14000b492:	lea    rcx,[rsp+0xc8]
   14000b49a:	call   QWORD PTR [rip+0xb498]        # 0x140016938
   14000b4a0:	xor    eax,eax
   14000b4a2:	mov    rcx,r15
   14000b4a5:	mov    rdi,rbp
   14000b4a8:	mov    QWORD PTR [rsp+0x38],rbp
   14000b4ad:	lea    rdx,[rsp+0x230]
   14000b4b5:	repnz scas al,BYTE PTR es:[rdi]
   14000b4b7:	not    rcx
   14000b4ba:	dec    rcx
   14000b4bd:	mov    DWORD PTR [rsp+0x30],ecx
   14000b4c1:	lea    rcx,[rsp+0x70]
   14000b4c6:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b4cb:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   14000b4d4:	call   QWORD PTR [rip+0xad36]        # 0x140016210
   14000b4da:	xor    eax,eax
   14000b4dc:	mov    rcx,r15
   14000b4df:	mov    rdi,r13
   14000b4e2:	mov    QWORD PTR [rsp+0x38],r13
   14000b4e7:	repnz scas al,BYTE PTR es:[rdi]
   14000b4e9:	lea    rdx,[rsp+0x220]
   14000b4f1:	not    rcx
   14000b4f4:	dec    rcx
   14000b4f7:	mov    DWORD PTR [rsp+0x30],ecx
   14000b4fb:	lea    rcx,[rsp+0xb0]
   14000b503:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b508:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   14000b511:	call   QWORD PTR [rip+0xacf9]        # 0x140016210
   14000b517:	lea    rdx,[rsp+0x70]
   14000b51c:	lea    rcx,[rsp+0x108]
   14000b524:	call   0x140001000
   14000b529:	mov    rcx,QWORD PTR [r12]
   14000b52d:	lea    rdx,[rsp+0xb0]
   14000b535:	mov    r8,rax
   14000b538:	call   0x140014b80
   14000b53d:	lea    rcx,[rsp+0x108]
   14000b545:	call   QWORD PTR [rip+0xb3ed]        # 0x140016938
   14000b54b:	lea    rcx,[rsp+0xb0]
   14000b553:	call   QWORD PTR [rip+0xb3df]        # 0x140016938
   14000b559:	lea    rcx,[rsp+0x70]
   14000b55e:	call   QWORD PTR [rip+0xb3d4]        # 0x140016938
   14000b564:	mov    rcx,QWORD PTR [r12]
   14000b568:	call   0x140014320
   14000b56d:	lea    rbp,[rip+0xbbd4]        # 0x140017148
   14000b574:	test   r14,r14
   14000b577:	je     0x14000b5aa
   14000b579:	lea    rcx,[rsp+0x128]
   14000b581:	mov    r8d,r15d
   14000b584:	mov    rdx,rbp
   14000b587:	or     esi,0x10
   14000b58a:	call   QWORD PTR [rip+0xade0]        # 0x140016370
   14000b590:	xor    r9d,r9d
   14000b593:	xor    r8d,r8d
   14000b596:	mov    rcx,r14
   14000b599:	mov    rdx,rax
   14000b59c:	call   0x140009b70
   14000b5a1:	test   al,al
   14000b5a3:	je     0x14000b5aa
   14000b5a5:	xor    dil,dil
   14000b5a8:	jmp    0x14000b5ad
   14000b5aa:	mov    dil,0x1
   14000b5ad:	test   sil,0x10
   14000b5b1:	je     0x14000b5c4
   14000b5b3:	lea    rcx,[rsp+0x128]
   14000b5bb:	and    esi,0xffffffef
   14000b5be:	call   QWORD PTR [rip+0xacb4]        # 0x140016278
   14000b5c4:	test   dil,dil
   14000b5c7:	je     0x14000b6fd
   14000b5cd:	lea    rdx,[rip+0xbb50]        # 0x140017124
   14000b5d4:	xor    eax,eax
   14000b5d6:	mov    rcx,r15
   14000b5d9:	mov    rdi,rdx
   14000b5dc:	mov    QWORD PTR [rsp+0x38],rdx
   14000b5e1:	lea    rdx,[rsp+0x1a0]
   14000b5e9:	repnz scas al,BYTE PTR es:[rdi]
   14000b5eb:	not    rcx
   14000b5ee:	dec    rcx
   14000b5f1:	mov    DWORD PTR [rsp+0x30],ecx
   14000b5f5:	lea    rcx,[rsp+0xa0]
   14000b5fd:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b602:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14000b60b:	call   QWORD PTR [rip+0xabff]        # 0x140016210
   14000b611:	mov    rcx,QWORD PTR [r12]
   14000b615:	lea    rdx,[rsp+0xa0]
   14000b61d:	call   0x140014230
   14000b622:	lea    rcx,[rsp+0xa0]
   14000b62a:	call   QWORD PTR [rip+0xb308]        # 0x140016938
   14000b630:	xor    eax,eax
   14000b632:	mov    rcx,r15
   14000b635:	mov    rdi,rbp
   14000b638:	mov    QWORD PTR [rsp+0x38],rbp
   14000b63d:	lea    rdx,[rsp+0x200]
   14000b645:	repnz scas al,BYTE PTR es:[rdi]
   14000b647:	not    rcx
   14000b64a:	dec    rcx
   14000b64d:	mov    DWORD PTR [rsp+0x30],ecx
   14000b651:	lea    rcx,[rsp+0x58]
   14000b656:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b65b:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   14000b664:	call   QWORD PTR [rip+0xaba6]        # 0x140016210
   14000b66a:	xor    eax,eax
   14000b66c:	mov    rcx,r15
   14000b66f:	mov    rdi,r13
   14000b672:	mov    QWORD PTR [rsp+0x38],r13
   14000b677:	repnz scas al,BYTE PTR es:[rdi]
   14000b679:	lea    rdx,[rsp+0x1c0]
   14000b681:	not    rcx
   14000b684:	dec    rcx
   14000b687:	mov    DWORD PTR [rsp+0x30],ecx
   14000b68b:	lea    rcx,[rsp+0x80]
   14000b693:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b698:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   14000b6a1:	call   QWORD PTR [rip+0xab69]        # 0x140016210
   14000b6a7:	lea    rdx,[rsp+0x58]
   14000b6ac:	lea    rcx,[rsp+0xd8]
   14000b6b4:	call   0x140001000
   14000b6b9:	mov    rcx,QWORD PTR [r12]
   14000b6bd:	lea    rdx,[rsp+0x80]
   14000b6c5:	mov    r8,rax
   14000b6c8:	call   0x140014b80
   14000b6cd:	lea    rcx,[rsp+0xd8]
   14000b6d5:	call   QWORD PTR [rip+0xb25d]        # 0x140016938
   14000b6db:	lea    rcx,[rsp+0x80]
   14000b6e3:	call   QWORD PTR [rip+0xb24f]        # 0x140016938
   14000b6e9:	lea    rcx,[rsp+0x58]
   14000b6ee:	call   QWORD PTR [rip+0xb244]        # 0x140016938
   14000b6f4:	mov    rcx,QWORD PTR [r12]
   14000b6f8:	call   0x140014320
   14000b6fd:	test   r14,r14
   14000b700:	je     0x14000b734
   14000b702:	lea    rcx,[rsp+0xf0]
   14000b70a:	mov    r8d,r15d
   14000b70d:	mov    rdx,rbp
   14000b710:	or     esi,0x20
   14000b713:	call   QWORD PTR [rip+0xac57]        # 0x140016370
   14000b719:	xor    r9d,r9d
   14000b71c:	lea    r8d,[r9+0x1]
   14000b720:	mov    rdx,rax
   14000b723:	mov    rcx,r14
   14000b726:	call   0x140009b70
   14000b72b:	test   al,al
   14000b72d:	je     0x14000b734
   14000b72f:	xor    dil,dil
   14000b732:	jmp    0x14000b737
   14000b734:	mov    dil,0x1
   14000b737:	test   sil,0x20
   14000b73b:	je     0x14000b74b
   14000b73d:	lea    rcx,[rsp+0xf0]
   14000b745:	call   QWORD PTR [rip+0xab2d]        # 0x140016278
   14000b74b:	test   dil,dil
   14000b74e:	je     0x14000baeb
   14000b754:	lea    rdx,[rip+0xb9c9]        # 0x140017124
   14000b75b:	xor    eax,eax
   14000b75d:	mov    rcx,r15
   14000b760:	mov    rdi,rdx
   14000b763:	mov    QWORD PTR [rsp+0x38],rdx
   14000b768:	lea    rdx,[rsp+0x240]
   14000b770:	repnz scas al,BYTE PTR es:[rdi]
   14000b772:	not    rcx
   14000b775:	dec    rcx
   14000b778:	mov    DWORD PTR [rsp+0x30],ecx
   14000b77c:	lea    rcx,[rsp+0x90]
   14000b784:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b789:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   14000b792:	call   QWORD PTR [rip+0xaa78]        # 0x140016210
   14000b798:	mov    rcx,QWORD PTR [r12]
   14000b79c:	lea    rdx,[rsp+0x90]
   14000b7a4:	call   0x140014230
   14000b7a9:	lea    rcx,[rsp+0x90]
   14000b7b1:	call   QWORD PTR [rip+0xb181]        # 0x140016938
   14000b7b7:	xor    eax,eax
   14000b7b9:	mov    rcx,r15
   14000b7bc:	mov    rdi,rbp
   14000b7bf:	mov    QWORD PTR [rsp+0x38],rbp
   14000b7c4:	lea    rdx,[rsp+0x1e0]
   14000b7cc:	repnz scas al,BYTE PTR es:[rdi]
   14000b7ce:	not    rcx
   14000b7d1:	dec    rcx
   14000b7d4:	mov    DWORD PTR [rsp+0x30],ecx
   14000b7d8:	lea    rcx,[rsp+0x68]
   14000b7dd:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b7e2:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   14000b7eb:	call   QWORD PTR [rip+0xaa1f]        # 0x140016210
   14000b7f1:	xor    eax,eax
   14000b7f3:	mov    rcx,r15
   14000b7f6:	mov    rdi,r13
   14000b7f9:	mov    QWORD PTR [rsp+0x38],r13
   14000b7fe:	repnz scas al,BYTE PTR es:[rdi]
   14000b800:	lea    rdx,[rsp+0x180]
   14000b808:	not    rcx
   14000b80b:	dec    rcx
   14000b80e:	mov    DWORD PTR [rsp+0x30],ecx
   14000b812:	lea    rcx,[rsp+0x60]
   14000b817:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b81c:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14000b825:	call   QWORD PTR [rip+0xa9e5]        # 0x140016210
   14000b82b:	lea    rdx,[rsp+0x68]
   14000b830:	lea    rcx,[rsp+0x100]
   14000b838:	call   0x140001000
   14000b83d:	mov    rcx,QWORD PTR [r12]
   14000b841:	lea    rdx,[rsp+0x60]
   14000b846:	mov    r8,rax
   14000b849:	call   0x140014b80
   14000b84e:	lea    rcx,[rsp+0x100]
   14000b856:	call   QWORD PTR [rip+0xb0dc]        # 0x140016938
   14000b85c:	lea    rcx,[rsp+0x60]
   14000b861:	call   QWORD PTR [rip+0xb0d1]        # 0x140016938
   14000b867:	lea    rcx,[rsp+0x68]
   14000b86c:	call   QWORD PTR [rip+0xb0c6]        # 0x140016938
   14000b872:	lea    rdx,[rip+0xb89f]        # 0x140017118
   14000b879:	xor    eax,eax
   14000b87b:	mov    rdi,rdx
   14000b87e:	mov    QWORD PTR [rsp+0x38],rdx
   14000b883:	mov    rcx,r15
   14000b886:	repnz scas al,BYTE PTR es:[rdi]
   14000b888:	lea    rdx,[rsp+0x190]
   14000b890:	not    rcx
   14000b893:	dec    rcx
   14000b896:	mov    DWORD PTR [rsp+0x30],ecx
   14000b89a:	lea    rcx,[rsp+0x78]
   14000b89f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b8a4:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14000b8ad:	call   QWORD PTR [rip+0xa95d]        # 0x140016210
   14000b8b3:	mov    rcx,QWORD PTR [r12]
   14000b8b7:	lea    rdx,[rsp+0x78]
   14000b8bc:	call   0x140014230
   14000b8c1:	lea    rcx,[rsp+0x78]
   14000b8c6:	call   QWORD PTR [rip+0xb06c]        # 0x140016938
   14000b8cc:	lea    rdx,[rip+0xb86d]        # 0x140017140
   14000b8d3:	xor    eax,eax
   14000b8d5:	mov    rdi,rdx
   14000b8d8:	mov    rcx,r15
   14000b8db:	repnz scas al,BYTE PTR es:[rdi]
   14000b8dd:	mov    QWORD PTR [rsp+0x38],rdx
   14000b8e2:	lea    rdx,[rsp+0x1b0]
   14000b8ea:	not    rcx
   14000b8ed:	dec    rcx
   14000b8f0:	mov    DWORD PTR [rsp+0x30],ecx
   14000b8f4:	lea    rcx,[rsp+0x98]
   14000b8fc:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b901:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14000b90a:	call   QWORD PTR [rip+0xa900]        # 0x140016210
   14000b910:	xor    eax,eax
   14000b912:	mov    rcx,r15
   14000b915:	mov    rdi,r13
   14000b918:	mov    QWORD PTR [rsp+0x38],r13
   14000b91d:	repnz scas al,BYTE PTR es:[rdi]
   14000b91f:	lea    rdx,[rsp+0x1d0]
   14000b927:	not    rcx
   14000b92a:	dec    rcx
   14000b92d:	mov    DWORD PTR [rsp+0x30],ecx
   14000b931:	lea    rcx,[rsp+0x88]
   14000b939:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b93e:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   14000b947:	call   QWORD PTR [rip+0xa8c3]        # 0x140016210
   14000b94d:	lea    rdx,[rsp+0x98]
   14000b955:	lea    rcx,[rsp+0x110]
   14000b95d:	call   0x140001000
   14000b962:	mov    rcx,QWORD PTR [r12]
   14000b966:	lea    rdx,[rsp+0x88]
   14000b96e:	mov    r8,rax
   14000b971:	call   0x140014b80
   14000b976:	lea    rcx,[rsp+0x110]
   14000b97e:	call   QWORD PTR [rip+0xafb4]        # 0x140016938
   14000b984:	lea    rcx,[rsp+0x88]
   14000b98c:	call   QWORD PTR [rip+0xafa6]        # 0x140016938
   14000b992:	lea    rcx,[rsp+0x98]
   14000b99a:	call   QWORD PTR [rip+0xaf98]        # 0x140016938
   14000b9a0:	lea    rdx,[rip+0xb795]        # 0x14001713c
   14000b9a7:	xor    eax,eax
   14000b9a9:	mov    rdi,rdx
   14000b9ac:	mov    QWORD PTR [rsp+0x38],rdx
   14000b9b1:	mov    rcx,r15
   14000b9b4:	repnz scas al,BYTE PTR es:[rdi]
   14000b9b6:	lea    rdx,[rsp+0x1f0]
   14000b9be:	not    rcx
   14000b9c1:	dec    rcx
   14000b9c4:	mov    DWORD PTR [rsp+0x30],ecx
   14000b9c8:	lea    rcx,[rsp+0xb8]
   14000b9d0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b9d5:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   14000b9de:	call   QWORD PTR [rip+0xa82c]        # 0x140016210
   14000b9e4:	lea    rdx,[rip+0xb401]        # 0x140016dec
   14000b9eb:	mov    rdi,rdx
   14000b9ee:	mov    QWORD PTR [rsp+0x38],rdx
   14000b9f3:	xor    eax,eax
   14000b9f5:	mov    rcx,r15
   14000b9f8:	lea    rdx,[rsp+0x210]
   14000ba00:	repnz scas al,BYTE PTR es:[rdi]
   14000ba02:	not    rcx
   14000ba05:	dec    rcx
   14000ba08:	mov    DWORD PTR [rsp+0x30],ecx
   14000ba0c:	lea    rcx,[rsp+0xa8]
   14000ba14:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000ba19:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   14000ba22:	call   QWORD PTR [rip+0xa7e8]        # 0x140016210
   14000ba28:	lea    rdx,[rsp+0xb8]
   14000ba30:	lea    rcx,[rsp+0x120]
   14000ba38:	call   0x140001000
   14000ba3d:	mov    rcx,QWORD PTR [r12]
   14000ba41:	lea    rdx,[rsp+0xa8]
   14000ba49:	mov    r8,rax
   14000ba4c:	call   0x140014b80
   14000ba51:	lea    rcx,[rsp+0x120]
   14000ba59:	call   QWORD PTR [rip+0xaed9]        # 0x140016938
   14000ba5f:	lea    rcx,[rsp+0xa8]
   14000ba67:	call   QWORD PTR [rip+0xaecb]        # 0x140016938
   14000ba6d:	lea    rcx,[rsp+0xb8]
   14000ba75:	call   QWORD PTR [rip+0xaebd]        # 0x140016938
   14000ba7b:	mov    rcx,QWORD PTR [r12]
   14000ba7f:	call   0x140014320
   14000ba84:	mov    rcx,QWORD PTR [r12]
   14000ba88:	call   0x140014320
   14000ba8d:	jmp    0x14000baeb
   14000ba8f:	mov    rcx,r13
   14000ba92:	call   QWORD PTR [rip+0xab50]        # 0x1400165e8
   14000ba98:	mov    rcx,r13
   14000ba9b:	mov    edi,eax
   14000ba9d:	call   QWORD PTR [rip+0xab3d]        # 0x1400165e0
   14000baa3:	cmp    edi,eax
   14000baa5:	jge    0x14000baeb
   14000baa7:	nop    WORD PTR [rax+rax*1+0x0]
   14000bab0:	lea    rdx,[rsp+0x250]
   14000bab8:	mov    r8d,edi
   14000babb:	mov    rcx,r13
   14000babe:	call   QWORD PTR [rip+0xab14]        # 0x1400165d8
   14000bac4:	lea    r8,[rsp+0x40]
   14000bac9:	mov    r9,r14
   14000bacc:	mov    rdx,rax
   14000bacf:	mov    rcx,r12
   14000bad2:	call   0x140009d20
   14000bad7:	mov    rcx,r13
   14000bada:	inc    edi
   14000badc:	call   QWORD PTR [rip+0xaafe]        # 0x1400165e0
   14000bae2:	cmp    edi,eax
   14000bae4:	jl     0x14000bab0
   14000bae6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000baeb:	mov    eax,DWORD PTR [rbx+0x10]
   14000baee:	mov    r14,QWORD PTR [rsp+0x260]
   14000baf6:	mov    r13,QWORD PTR [rsp+0x268]
   14000bafe:	mov    r12,QWORD PTR [rsp+0x270]
   14000bb06:	mov    rdi,QWORD PTR [rsp+0x278]
   14000bb0e:	mov    rsi,QWORD PTR [rsp+0x280]
   14000bb16:	mov    rbp,QWORD PTR [rsp+0x2b0]
   14000bb1e:	test   eax,eax
   14000bb20:	je     0x14000bb3d
   14000bb22:	cmp    eax,0xffffffff
   14000bb25:	je     0x14000bb4d
   14000bb27:	lock xadd DWORD PTR [rbx+0x10],r15d
   14000bb2d:	add    r15d,0xffffffff
   14000bb31:	setne  al
   14000bb34:	test   al,al
   14000bb36:	jne    0x14000bb4d
   14000bb38:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bb3d:	lea    rdx,[rip+0xffffffffffff678c]        # 0x1400022d0
   14000bb44:	mov    rcx,rbx
   14000bb47:	call   QWORD PTR [rip+0xa74b]        # 0x140016298
   14000bb4d:	add    rsp,0x288
   14000bb54:	pop    r15
   14000bb56:	pop    rbx
   14000bb57:	ret    
   14000bb58:	int3   
   14000bb59:	int3   
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    QWORD PTR [rsp+0x18],rbx
   14000bb65:	mov    QWORD PTR [rsp+0x20],rsi
   14000bb6a:	push   rdi
   14000bb6b:	push   r12
   14000bb6d:	push   r13
   14000bb6f:	sub    rsp,0x240
   14000bb76:	mov    rdi,rdx
   14000bb79:	mov    rsi,rcx
   14000bb7c:	lea    rdx,[rsp+0x118]
   14000bb84:	mov    rcx,r8
   14000bb87:	mov    r12,r9
   14000bb8a:	mov    r13,r8
   14000bb8d:	call   QWORD PTR [rip+0xae6d]        # 0x140016a00
   14000bb93:	lea    rcx,[rsp+0x90]
   14000bb9b:	xor    r9d,r9d
   14000bb9e:	mov    r8,rax
   14000bba1:	mov    rdx,rdi
   14000bba4:	call   QWORD PTR [rip+0xae5e]        # 0x140016a08
   14000bbaa:	lea    rcx,[rsp+0x118]
   14000bbb2:	call   QWORD PTR [rip+0xaa70]        # 0x140016628
   14000bbb8:	lea    rcx,[rsp+0x90]
   14000bbc0:	call   QWORD PTR [rip+0xae4a]        # 0x140016a10
   14000bbc6:	test   al,al
   14000bbc8:	jne    0x14000bc9d
   14000bbce:	lea    rdx,[rsp+0x120]
   14000bbd6:	lea    rcx,[rsp+0x90]
   14000bbde:	call   QWORD PTR [rip+0xaed4]        # 0x140016ab8
   14000bbe4:	lea    rdx,[rsp+0x210]
   14000bbec:	mov    rcx,rax
   14000bbef:	call   QWORD PTR [rip+0xa8bb]        # 0x1400164b0
   14000bbf5:	mov    rcx,r13
   14000bbf8:	mov    rbx,rax
   14000bbfb:	call   QWORD PTR [rip+0xae5f]        # 0x140016a60
   14000bc01:	lea    rdx,[rsp+0x1e8]
   14000bc09:	mov    rcx,rax
   14000bc0c:	call   QWORD PTR [rip+0xa89e]        # 0x1400164b0
   14000bc12:	mov    rcx,QWORD PTR [rip+0xa43f]        # 0x140016058
   14000bc19:	lea    rdx,[rip+0xb608]        # 0x140017228
   14000bc20:	mov    rdi,rax
   14000bc23:	call   0x1400016a0
   14000bc28:	mov    rdx,rdi
   14000bc2b:	mov    rcx,rax
   14000bc2e:	call   QWORD PTR [rip+0xa4bc]        # 0x1400160f0
   14000bc34:	mov    rdx,QWORD PTR [rip+0xa425]        # 0x140016060
   14000bc3b:	mov    rcx,rax
   14000bc3e:	call   QWORD PTR [rip+0xa424]        # 0x140016068
   14000bc44:	mov    rdx,rbx
   14000bc47:	mov    rcx,rax
   14000bc4a:	call   QWORD PTR [rip+0xa4a0]        # 0x1400160f0
   14000bc50:	mov    rdx,QWORD PTR [rip+0xa409]        # 0x140016060
   14000bc57:	mov    rcx,rax
   14000bc5a:	call   QWORD PTR [rip+0xa408]        # 0x140016068
   14000bc60:	lea    rcx,[rsp+0x1e8]
   14000bc68:	call   QWORD PTR [rip+0xa472]        # 0x1400160e0
   14000bc6e:	lea    rcx,[rsp+0x210]
   14000bc76:	call   QWORD PTR [rip+0xa464]        # 0x1400160e0
   14000bc7c:	lea    rcx,[rsp+0x120]
   14000bc84:	call   QWORD PTR [rip+0xacae]        # 0x140016938
   14000bc8a:	lea    rcx,[rsp+0x90]
   14000bc92:	call   QWORD PTR [rip+0xad88]        # 0x140016a20
   14000bc98:	jmp    0x14000c5f6
   14000bc9d:	lea    rcx,[rsp+0x90]
   14000bca5:	xor    edx,edx
   14000bca7:	call   QWORD PTR [rip+0xad7b]        # 0x140016a28
   14000bcad:	mov    rbx,rax
   14000bcb0:	test   rax,rax
   14000bcb3:	je     0x14000bc8a
   14000bcb5:	mov    QWORD PTR [rsp+0x260],rbp
   14000bcbd:	xor    eax,eax
   14000bcbf:	or     rbp,0xffffffffffffffff
   14000bcc3:	lea    rdi,[rip+0xaed6]        # 0x140016ba0
   14000bcca:	mov    rcx,rbp
   14000bccd:	mov    QWORD PTR [rsp+0x268],r14
   14000bcd5:	repnz scas al,BYTE PTR es:[rdi]
   14000bcd7:	not    rcx
   14000bcda:	lea    rdx,[rcx-0x1]
   14000bcde:	lea    rcx,[rip+0xaebb]        # 0x140016ba0
   14000bce5:	call   QWORD PTR [rip+0xabe5]        # 0x1400168d0
   14000bceb:	mov    rcx,QWORD PTR [rsi]
   14000bcee:	lea    rdx,[rsp+0xb0]
   14000bcf6:	mov    QWORD PTR [rsp+0xb0],rax
   14000bcfe:	call   0x140014230
   14000bd03:	lea    rcx,[rsp+0xb0]
   14000bd0b:	call   QWORD PTR [rip+0xac27]        # 0x140016938
   14000bd11:	mov    rdx,QWORD PTR [rbx]
   14000bd14:	mov    rcx,rbx
   14000bd17:	call   QWORD PTR [rdx]
   14000bd19:	mov    rcx,QWORD PTR [rip+0xa500]        # 0x140016220
   14000bd20:	lea    rdx,[rsp+0xb8]
   14000bd28:	mov    QWORD PTR [rsp+0x50],rcx
   14000bd2d:	mov    rcx,QWORD PTR [rip+0xa4f4]        # 0x140016228
   14000bd34:	mov    r14,rax
   14000bd37:	lea    rax,[rsp+0x50]
   14000bd3c:	mov    QWORD PTR [rsp+0x80],rcx
   14000bd44:	mov    QWORD PTR [rsp+0x88],rcx
   14000bd4c:	mov    rcx,rsi
   14000bd4f:	mov    r9,r12
   14000bd52:	mov    r8,r14
   14000bd55:	mov    QWORD PTR [rsp+0x20],rax
   14000bd5a:	call   0x140004290
   14000bd5f:	lea    rdx,[rip+0xadfa]        # 0x140016b60
   14000bd66:	mov    rdi,rdx
   14000bd69:	mov    QWORD PTR [rsp+0x38],rdx
   14000bd6e:	xor    eax,eax
   14000bd70:	mov    rcx,rbp
   14000bd73:	lea    rdx,[rsp+0x1c0]
   14000bd7b:	repnz scas al,BYTE PTR es:[rdi]
   14000bd7d:	not    rcx
   14000bd80:	dec    rcx
   14000bd83:	mov    DWORD PTR [rsp+0x30],ecx
   14000bd87:	lea    rcx,[rsp+0xc8]
   14000bd8f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000bd94:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   14000bd9d:	call   QWORD PTR [rip+0xa46d]        # 0x140016210
   14000bda3:	lea    rdx,[rsp+0xb8]
   14000bdab:	lea    rcx,[rsp+0x108]
   14000bdb3:	call   0x140001000
   14000bdb8:	mov    rcx,QWORD PTR [rsi]
   14000bdbb:	lea    rdx,[rsp+0xc8]
   14000bdc3:	mov    r8,rax
   14000bdc6:	call   0x140014b80
   14000bdcb:	lea    rcx,[rsp+0x108]
   14000bdd3:	call   QWORD PTR [rip+0xab5f]        # 0x140016938
   14000bdd9:	lea    rcx,[rsp+0xc8]
   14000bde1:	call   QWORD PTR [rip+0xab51]        # 0x140016938
   14000bde7:	mov    rcx,r13
   14000bdea:	call   QWORD PTR [rip+0xac40]        # 0x140016a30
   14000bdf0:	lea    rcx,[rsp+0xa8]
   14000bdf8:	mov    rdx,rax
   14000bdfb:	call   QWORD PTR [rip+0xa73f]        # 0x140016540
   14000be01:	mov    rcx,r13
   14000be04:	call   QWORD PTR [rip+0xac2e]        # 0x140016a38
   14000be0a:	mov    rcx,r13
   14000be0d:	mov    ebx,eax
   14000be0f:	call   QWORD PTR [rip+0xac2b]        # 0x140016a40
   14000be15:	lea    rdx,[rsp+0xa8]
   14000be1d:	lea    rcx,[rsp+0x1e0]
   14000be25:	mov    edi,eax
   14000be27:	call   QWORD PTR [rip+0xa713]        # 0x140016540
   14000be2d:	lea    rdx,[rsp+0x58]
   14000be32:	mov    r9d,edi
   14000be35:	mov    rcx,rsi
   14000be38:	mov    r8,rax
   14000be3b:	mov    DWORD PTR [rsp+0x20],ebx
   14000be3f:	call   0x140002560
   14000be44:	xor    eax,eax
   14000be46:	mov    rcx,rbp
   14000be49:	lea    rdx,[rip+0xad34]        # 0x140016b84
   14000be50:	mov    rdi,rdx
   14000be53:	mov    QWORD PTR [rsp+0x38],rdx
   14000be58:	lea    rdx,[rsp+0x170]
   14000be60:	repnz scas al,BYTE PTR es:[rdi]
   14000be62:	not    rcx
   14000be65:	dec    rcx
   14000be68:	mov    DWORD PTR [rsp+0x30],ecx
   14000be6c:	lea    rcx,[rsp+0xd8]
   14000be74:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000be79:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   14000be82:	call   QWORD PTR [rip+0xa388]        # 0x140016210
   14000be88:	mov    rcx,QWORD PTR [rsi]
   14000be8b:	lea    r8,[rsp+0x58]
   14000be90:	lea    rdx,[rsp+0xd8]
   14000be98:	call   0x140014b80
   14000be9d:	lea    rcx,[rsp+0xd8]
   14000bea5:	call   QWORD PTR [rip+0xaa8d]        # 0x140016938
   14000beab:	lea    rdx,[rip+0xb36e]        # 0x140017220
   14000beb2:	xor    eax,eax
   14000beb4:	mov    rdi,rdx
   14000beb7:	mov    QWORD PTR [rsp+0x38],rdx
   14000bebc:	mov    rcx,rbp
   14000bebf:	repnz scas al,BYTE PTR es:[rdi]
   14000bec1:	lea    rdx,[rsp+0x150]
   14000bec9:	not    rcx
   14000becc:	dec    rcx
   14000becf:	mov    DWORD PTR [rsp+0x30],ecx
   14000bed3:	lea    rcx,[rsp+0xe8]
   14000bedb:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000bee0:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000bee9:	call   QWORD PTR [rip+0xa321]        # 0x140016210
   14000beef:	mov    rdx,QWORD PTR [rip+0xa32a]        # 0x140016220
   14000bef6:	mov    QWORD PTR [rsp+0x48],rdx
   14000befb:	mov    eax,DWORD PTR [rdx]
   14000befd:	cmp    eax,0x1
   14000bf00:	je     0x14000bf2e
   14000bf02:	test   eax,eax
   14000bf04:	je     0x14000bf2e
   14000bf06:	lea    r8d,[rbp+0x2]
   14000bf0a:	lea    rcx,[rsp+0x48]
   14000bf0f:	mov    edx,0x7fffffff
   14000bf14:	call   0x140002c00
   14000bf19:	test   rax,rax
   14000bf1c:	je     0x14000bf57
   14000bf1e:	lea    rdx,[rsp+0x58]
   14000bf23:	mov    rcx,rax
   14000bf26:	call   QWORD PTR [rip+0xa614]        # 0x140016540
   14000bf2c:	jmp    0x14000bf57
   14000bf2e:	lea    rdx,[rsp+0x58]
   14000bf33:	lea    rcx,[rsp+0x100]
   14000bf3b:	call   QWORD PTR [rip+0xa5ff]        # 0x140016540
   14000bf41:	lea    rcx,[rsp+0x48]
   14000bf46:	call   QWORD PTR [rip+0xa434]        # 0x140016380
   14000bf4c:	mov    rcx,QWORD PTR [rsp+0x100]
   14000bf54:	mov    QWORD PTR [rax],rcx
   14000bf57:	mov    rcx,QWORD PTR [rsi]
   14000bf5a:	lea    r8,[rsp+0x48]
   14000bf5f:	lea    rdx,[rsp+0xe8]
   14000bf67:	call   0x140014480
   14000bf6c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bf71:	mov    eax,DWORD PTR [rbx]
   14000bf73:	test   eax,eax
   14000bf75:	je     0x14000bf91
   14000bf77:	cmp    eax,0xffffffff
   14000bf7a:	je     0x14000bfcb
   14000bf7c:	mov    eax,ebp
   14000bf7e:	lock xadd DWORD PTR [rbx],eax
   14000bf82:	add    eax,0xffffffff
   14000bf85:	setne  al
   14000bf88:	test   al,al
   14000bf8a:	jne    0x14000bfcb
   14000bf8c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bf91:	movsxd rax,DWORD PTR [rbx+0xc]
   14000bf95:	lea    rdi,[rbx+rax*8+0x10]
   14000bf9a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000bf9e:	lea    r12,[rbx+rax*8+0x10]
   14000bfa3:	cmp    r12,rdi
   14000bfa6:	je     0x14000bfc2
   14000bfa8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bfb0:	sub    rdi,0x8
   14000bfb4:	mov    rcx,rdi
   14000bfb7:	call   QWORD PTR [rip+0xa97b]        # 0x140016938
   14000bfbd:	cmp    rdi,r12
   14000bfc0:	jne    0x14000bfb0
   14000bfc2:	mov    rcx,rbx
   14000bfc5:	call   QWORD PTR [rip+0xa2dd]        # 0x1400162a8
   14000bfcb:	lea    rcx,[rsp+0xe8]
   14000bfd3:	call   QWORD PTR [rip+0xa95f]        # 0x140016938
   14000bfd9:	lea    rdx,[rip+0xb220]        # 0x140017200
   14000bfe0:	xor    eax,eax
   14000bfe2:	mov    rdi,rdx
   14000bfe5:	mov    QWORD PTR [rsp+0x38],rdx
   14000bfea:	mov    rcx,rbp
   14000bfed:	repnz scas al,BYTE PTR es:[rdi]
   14000bfef:	lea    rdx,[rsp+0x190]
   14000bff7:	not    rcx
   14000bffa:	dec    rcx
   14000bffd:	mov    DWORD PTR [rsp+0x30],ecx
   14000c001:	lea    rcx,[rsp+0xf8]
   14000c009:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c00e:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14000c017:	call   QWORD PTR [rip+0xa1f3]        # 0x140016210
   14000c01d:	mov    rdx,QWORD PTR [rip+0xa1fc]        # 0x140016220
   14000c024:	mov    rcx,r13
   14000c027:	mov    QWORD PTR [rsp+0x40],rdx
   14000c02c:	call   QWORD PTR [rip+0xaa06]        # 0x140016a38
   14000c032:	lea    rcx,[rsp+0x128]
   14000c03a:	mov    r8d,0xa
   14000c040:	mov    edx,eax
   14000c042:	call   QWORD PTR [rip+0xa2a8]        # 0x1400162f0
   14000c048:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c04d:	mov    rdi,rax
   14000c050:	mov    eax,DWORD PTR [rcx]
   14000c052:	cmp    eax,0x1
   14000c055:	je     0x14000c083
   14000c057:	test   eax,eax
   14000c059:	je     0x14000c083
   14000c05b:	lea    rcx,[rsp+0x40]
   14000c060:	mov    edx,0x7fffffff
   14000c065:	mov    r8d,0x1
   14000c06b:	call   0x140002c00
   14000c070:	test   rax,rax
   14000c073:	je     0x14000c0aa
   14000c075:	mov    rdx,rdi
   14000c078:	mov    rcx,rax
   14000c07b:	call   QWORD PTR [rip+0xa4bf]        # 0x140016540
   14000c081:	jmp    0x14000c0aa
   14000c083:	lea    rcx,[rsp+0x110]
   14000c08b:	mov    rdx,rdi
   14000c08e:	call   QWORD PTR [rip+0xa4ac]        # 0x140016540
   14000c094:	lea    rcx,[rsp+0x40]
   14000c099:	call   QWORD PTR [rip+0xa2e1]        # 0x140016380
   14000c09f:	mov    rcx,QWORD PTR [rsp+0x110]
   14000c0a7:	mov    QWORD PTR [rax],rcx
   14000c0aa:	mov    rcx,QWORD PTR [rsi]
   14000c0ad:	lea    r8,[rsp+0x40]
   14000c0b2:	lea    rdx,[rsp+0xf8]
   14000c0ba:	call   0x140014480
   14000c0bf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c0c4:	mov    eax,DWORD PTR [rbx]
   14000c0c6:	test   eax,eax
   14000c0c8:	je     0x14000c0e4
   14000c0ca:	cmp    eax,0xffffffff
   14000c0cd:	je     0x14000c11b
   14000c0cf:	mov    eax,ebp
   14000c0d1:	lock xadd DWORD PTR [rbx],eax
   14000c0d5:	add    eax,0xffffffff
   14000c0d8:	setne  al
   14000c0db:	test   al,al
   14000c0dd:	jne    0x14000c11b
   14000c0df:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c0e4:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c0e8:	lea    rdi,[rbx+rax*8+0x10]
   14000c0ed:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c0f1:	lea    r12,[rbx+rax*8+0x10]
   14000c0f6:	cmp    r12,rdi
   14000c0f9:	je     0x14000c112
   14000c0fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c100:	sub    rdi,0x8
   14000c104:	mov    rcx,rdi
   14000c107:	call   QWORD PTR [rip+0xa82b]        # 0x140016938
   14000c10d:	cmp    rdi,r12
   14000c110:	jne    0x14000c100
   14000c112:	mov    rcx,rbx
   14000c115:	call   QWORD PTR [rip+0xa18d]        # 0x1400162a8
   14000c11b:	lea    rcx,[rsp+0x128]
   14000c123:	call   QWORD PTR [rip+0xa80f]        # 0x140016938
   14000c129:	lea    rcx,[rsp+0xf8]
   14000c131:	call   QWORD PTR [rip+0xa801]        # 0x140016938
   14000c137:	lea    rdx,[rip+0xb0b2]        # 0x1400171f0
   14000c13e:	xor    eax,eax
   14000c140:	mov    rdi,rdx
   14000c143:	mov    QWORD PTR [rsp+0x38],rdx
   14000c148:	mov    rcx,rbp
   14000c14b:	repnz scas al,BYTE PTR es:[rdi]
   14000c14d:	lea    rdx,[rsp+0x1d0]
   14000c155:	not    rcx
   14000c158:	dec    rcx
   14000c15b:	mov    DWORD PTR [rsp+0x30],ecx
   14000c15f:	lea    rcx,[rsp+0xa0]
   14000c167:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c16c:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   14000c175:	call   QWORD PTR [rip+0xa095]        # 0x140016210
   14000c17b:	mov    rcx,QWORD PTR [rsi]
   14000c17e:	lea    rdx,[rsp+0xa0]
   14000c186:	mov    r8b,0x1
   14000c189:	call   0x140014c40
   14000c18e:	lea    rcx,[rsp+0xa0]
   14000c196:	call   QWORD PTR [rip+0xa79c]        # 0x140016938
   14000c19c:	mov    rcx,r13
   14000c19f:	call   QWORD PTR [rip+0xa8a3]        # 0x140016a48
   14000c1a5:	test   al,al
   14000c1a7:	je     0x14000c277
   14000c1ad:	lea    rdx,[rip+0xb02c]        # 0x1400171e0
   14000c1b4:	xor    eax,eax
   14000c1b6:	mov    rcx,rbp
   14000c1b9:	mov    rdi,rdx
   14000c1bc:	mov    QWORD PTR [rsp+0x38],rdx
   14000c1c1:	lea    rdx,[rsp+0x1b0]
   14000c1c9:	repnz scas al,BYTE PTR es:[rdi]
   14000c1cb:	not    rcx
   14000c1ce:	dec    rcx
   14000c1d1:	mov    DWORD PTR [rsp+0x30],ecx
   14000c1d5:	lea    rcx,[rsp+0xf0]
   14000c1dd:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c1e2:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14000c1eb:	call   QWORD PTR [rip+0xa01f]        # 0x140016210
   14000c1f1:	mov    rcx,QWORD PTR [rsi]
   14000c1f4:	lea    rdx,[rsp+0xf0]
   14000c1fc:	xor    r8d,r8d
   14000c1ff:	call   0x140014c40
   14000c204:	lea    rcx,[rsp+0xf0]
   14000c20c:	call   QWORD PTR [rip+0xa726]        # 0x140016938
   14000c212:	lea    rdx,[rip+0xafb7]        # 0x1400171d0
   14000c219:	xor    eax,eax
   14000c21b:	mov    rdi,rdx
   14000c21e:	mov    QWORD PTR [rsp+0x38],rdx
   14000c223:	mov    rcx,rbp
   14000c226:	repnz scas al,BYTE PTR es:[rdi]
   14000c228:	lea    rdx,[rsp+0x160]
   14000c230:	not    rcx
   14000c233:	dec    rcx
   14000c236:	mov    DWORD PTR [rsp+0x30],ecx
   14000c23a:	lea    rcx,[rsp+0xc0]
   14000c242:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c247:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   14000c250:	call   QWORD PTR [rip+0x9fba]        # 0x140016210
   14000c256:	mov    rcx,QWORD PTR [rsi]
   14000c259:	lea    rdx,[rsp+0xc0]
   14000c261:	mov    r8b,0x1
   14000c264:	call   0x140014c40
   14000c269:	lea    rcx,[rsp+0xc0]
   14000c271:	call   QWORD PTR [rip+0xa6c1]        # 0x140016938
   14000c277:	mov    rcx,r14
   14000c27a:	call   QWORD PTR [rip+0xa3a0]        # 0x140016620
   14000c280:	xor    r13d,r13d
   14000c283:	mov    ebx,eax
   14000c285:	sub    ebx,0x1
   14000c288:	js     0x14000c3f9
   14000c28e:	xchg   ax,ax
   14000c290:	lea    rdx,[rsp+0x138]
   14000c298:	mov    r8d,ebx
   14000c29b:	mov    rcx,r14
   14000c29e:	call   QWORD PTR [rip+0xa374]        # 0x140016618
   14000c2a4:	xor    eax,eax
   14000c2a6:	lea    rdi,[rip+0xaf13]        # 0x1400171c0
   14000c2ad:	mov    rcx,rbp
   14000c2b0:	repnz scas al,BYTE PTR es:[rdi]
   14000c2b2:	not    rcx
   14000c2b5:	lea    r12,[rcx-0x1]
   14000c2b9:	lea    rcx,[rsp+0x138]
   14000c2c1:	call   QWORD PTR [rip+0xa349]        # 0x140016610
   14000c2c7:	mov    r11,rax
   14000c2ca:	test   rax,rax
   14000c2cd:	je     0x14000c2e1
   14000c2cf:	xor    eax,eax
   14000c2d1:	mov    rcx,rbp
   14000c2d4:	mov    rdi,r11
   14000c2d7:	repnz scas al,BYTE PTR es:[rdi]
   14000c2d9:	not    rcx
   14000c2dc:	dec    rcx
   14000c2df:	jmp    0x14000c2e4
   14000c2e1:	mov    ecx,r13d
   14000c2e4:	cmp    ecx,r12d
   14000c2e7:	jne    0x14000c2ff
   14000c2e9:	movsxd r8,ecx
   14000c2ec:	lea    rdx,[rip+0xaecd]        # 0x1400171c0
   14000c2f3:	mov    rcx,r11
   14000c2f6:	call   0x14001507e
   14000c2fb:	test   eax,eax
   14000c2fd:	je     0x14000c309
   14000c2ff:	sub    ebx,0x1
   14000c302:	jns    0x14000c290
   14000c304:	jmp    0x14000c3f9
   14000c309:	lea    rcx,[rsp+0x138]
   14000c311:	call   QWORD PTR [rip+0xa2f1]        # 0x140016608
   14000c317:	mov    r11,rax
   14000c31a:	test   rax,rax
   14000c31d:	je     0x14000c335
   14000c31f:	xor    eax,eax
   14000c321:	mov    rcx,rbp
   14000c324:	mov    rdi,r11
   14000c327:	repnz scas al,BYTE PTR es:[rdi]
   14000c329:	not    rcx
   14000c32c:	dec    rcx
   14000c32f:	mov    DWORD PTR [rsp+0x30],ecx
   14000c333:	jmp    0x14000c33a
   14000c335:	mov    DWORD PTR [rsp+0x30],r13d
   14000c33a:	mov    QWORD PTR [rsp+0x38],r11
   14000c33f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c344:	lea    rdx,[rsp+0x180]
   14000c34c:	lea    rcx,[rsp+0xd0]
   14000c354:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14000c35d:	call   QWORD PTR [rip+0x9ead]        # 0x140016210
   14000c363:	lea    rdx,[rip+0xae46]        # 0x1400171b0
   14000c36a:	xor    eax,eax
   14000c36c:	mov    rdi,rdx
   14000c36f:	mov    QWORD PTR [rsp+0x38],rdx
   14000c374:	mov    rcx,rbp
   14000c377:	repnz scas al,BYTE PTR es:[rdi]
   14000c379:	lea    rdx,[rsp+0x1a0]
   14000c381:	not    rcx
   14000c384:	dec    rcx
   14000c387:	mov    DWORD PTR [rsp+0x30],ecx
   14000c38b:	lea    rcx,[rsp+0xe0]
   14000c393:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000c398:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14000c3a1:	call   QWORD PTR [rip+0x9e69]        # 0x140016210
   14000c3a7:	lea    rdx,[rsp+0xd0]
   14000c3af:	lea    rcx,[rsp+0x130]
   14000c3b7:	call   0x140001000
   14000c3bc:	mov    rcx,QWORD PTR [rsi]
   14000c3bf:	lea    rdx,[rsp+0xe0]
   14000c3c7:	mov    r8,rax
   14000c3ca:	call   0x140014b80
   14000c3cf:	lea    rcx,[rsp+0x130]
   14000c3d7:	call   QWORD PTR [rip+0xa55b]        # 0x140016938
   14000c3dd:	lea    rcx,[rsp+0xe0]
   14000c3e5:	call   QWORD PTR [rip+0xa54d]        # 0x140016938
   14000c3eb:	lea    rcx,[rsp+0xd0]
   14000c3f3:	call   QWORD PTR [rip+0xa53f]        # 0x140016938
   14000c3f9:	mov    rdx,QWORD PTR [rsp+0x50]
   14000c3fe:	mov    r14,QWORD PTR [rsp+0x268]
   14000c406:	mov    QWORD PTR [rsp+0x60],rdx
   14000c40b:	mov    eax,DWORD PTR [rdx]
   14000c40d:	test   eax,eax
   14000c40f:	je     0x14000c421
   14000c411:	cmp    eax,0xffffffff
   14000c414:	je     0x14000c476
   14000c416:	lock add DWORD PTR [rdx],0x1
   14000c41a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c41f:	jmp    0x14000c476
   14000c421:	mov    edx,DWORD PTR [rdx+0x4]
   14000c424:	lea    rcx,[rsp+0x60]
   14000c429:	call   QWORD PTR [rip+0x9ef1]        # 0x140016320
   14000c42f:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c434:	movsxd rax,DWORD PTR [rdx+0xc]
   14000c438:	lea    r8,[rdx+rax*8+0x10]
   14000c43d:	mov    rax,QWORD PTR [rsp+0x50]
   14000c442:	movsxd rcx,DWORD PTR [rax+0x8]
   14000c446:	lea    rdi,[rax+rcx*8+0x10]
   14000c44b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c44f:	lea    rcx,[rdx+rax*8+0x10]
   14000c454:	cmp    rdi,rcx
   14000c457:	je     0x14000c476
   14000c459:	sub    r8,rcx
   14000c45c:	sar    r8,0x3
   14000c460:	test   r8,r8
   14000c463:	jle    0x14000c476
   14000c465:	shl    r8,0x3
   14000c469:	mov    rdx,rdi
   14000c46c:	call   0x140015084
   14000c471:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c476:	mov    DWORD PTR [rsp+0x68],r13d
   14000c47b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c47f:	lea    rcx,[rdx+rax*8+0x10]
   14000c484:	mov    QWORD PTR [rsp+0x70],rcx
   14000c489:	movsxd rax,DWORD PTR [rdx+0xc]
   14000c48d:	lea    rdx,[rdx+rax*8+0x10]
   14000c492:	mov    QWORD PTR [rsp+0x78],rdx
   14000c497:	nop    WORD PTR [rax+rax*1+0x0]
   14000c4a0:	mov    eax,0x1
   14000c4a5:	mov    DWORD PTR [rsp+0x68],eax
   14000c4a9:	cmp    rcx,rdx
   14000c4ac:	je     0x14000c4e9
   14000c4ae:	mov    rdi,QWORD PTR [rcx]
   14000c4b1:	test   eax,eax
   14000c4b3:	je     0x14000c4d4
   14000c4b5:	lea    r8,[rsp+0x80]
   14000c4bd:	mov    rdx,rdi
   14000c4c0:	mov    rcx,rsi
   14000c4c3:	call   0x14000ae90
   14000c4c8:	mov    eax,DWORD PTR [rsp+0x68]
   14000c4cc:	dec    eax
   14000c4ce:	mov    DWORD PTR [rsp+0x68],eax
   14000c4d2:	jmp    0x14000c4b1
   14000c4d4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000c4d9:	mov    rdx,QWORD PTR [rsp+0x78]
   14000c4de:	add    rcx,0x8
   14000c4e2:	mov    QWORD PTR [rsp+0x70],rcx
   14000c4e7:	jmp    0x14000c4a0
   14000c4e9:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c4ee:	mov    eax,DWORD PTR [rcx]
   14000c4f0:	test   eax,eax
   14000c4f2:	je     0x14000c50e
   14000c4f4:	cmp    eax,0xffffffff
   14000c4f7:	je     0x14000c514
   14000c4f9:	mov    eax,ebp
   14000c4fb:	lock xadd DWORD PTR [rcx],eax
   14000c4ff:	add    eax,0xffffffff
   14000c502:	setne  al
   14000c505:	test   al,al
   14000c507:	jne    0x14000c514
   14000c509:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c50e:	call   QWORD PTR [rip+0x9d94]        # 0x1400162a8
   14000c514:	mov    rcx,QWORD PTR [rsi]
   14000c517:	call   0x140014320
   14000c51c:	lea    rcx,[rsp+0x58]
   14000c521:	call   QWORD PTR [rip+0xa411]        # 0x140016938
   14000c527:	lea    rcx,[rsp+0xa8]
   14000c52f:	call   QWORD PTR [rip+0xa403]        # 0x140016938
   14000c535:	lea    rcx,[rsp+0xb8]
   14000c53d:	call   QWORD PTR [rip+0xa3f5]        # 0x140016938
   14000c543:	mov    rcx,QWORD PTR [rsp+0x88]
   14000c54b:	mov    eax,DWORD PTR [rcx+0x10]
   14000c54e:	test   eax,eax
   14000c550:	je     0x14000c570
   14000c552:	cmp    eax,0xffffffff
   14000c555:	je     0x14000c57d
   14000c557:	mov    eax,ebp
   14000c559:	lock xadd DWORD PTR [rcx+0x10],eax
   14000c55e:	add    eax,0xffffffff
   14000c561:	setne  al
   14000c564:	test   al,al
   14000c566:	jne    0x14000c57d
   14000c568:	mov    rcx,QWORD PTR [rsp+0x88]
   14000c570:	lea    rdx,[rip+0xffffffffffff8e09]        # 0x140005380
   14000c577:	call   QWORD PTR [rip+0x9d1b]        # 0x140016298
   14000c57d:	mov    rcx,QWORD PTR [rsp+0x80]
   14000c585:	mov    eax,DWORD PTR [rcx+0x10]
   14000c588:	test   eax,eax
   14000c58a:	je     0x14000c5aa
   14000c58c:	cmp    eax,0xffffffff
   14000c58f:	je     0x14000c5b7
   14000c591:	mov    eax,ebp
   14000c593:	lock xadd DWORD PTR [rcx+0x10],eax
   14000c598:	add    eax,0xffffffff
   14000c59b:	setne  al
   14000c59e:	test   al,al
   14000c5a0:	jne    0x14000c5b7
   14000c5a2:	mov    rcx,QWORD PTR [rsp+0x80]
   14000c5aa:	lea    rdx,[rip+0xffffffffffff5d6f]        # 0x140002320
   14000c5b1:	call   QWORD PTR [rip+0x9ce1]        # 0x140016298
   14000c5b7:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c5bc:	mov    eax,DWORD PTR [rcx]
   14000c5be:	test   eax,eax
   14000c5c0:	je     0x14000c5da
   14000c5c2:	cmp    eax,0xffffffff
   14000c5c5:	je     0x14000c5e0
   14000c5c7:	lock xadd DWORD PTR [rcx],ebp
   14000c5cb:	add    ebp,0xffffffff
   14000c5ce:	setne  al
   14000c5d1:	test   al,al
   14000c5d3:	jne    0x14000c5e0
   14000c5d5:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c5da:	call   QWORD PTR [rip+0x9cc8]        # 0x1400162a8
   14000c5e0:	lea    rcx,[rsp+0x90]
   14000c5e8:	call   QWORD PTR [rip+0xa432]        # 0x140016a20
   14000c5ee:	mov    rbp,QWORD PTR [rsp+0x260]
   14000c5f6:	lea    r11,[rsp+0x240]
   14000c5fe:	mov    rbx,QWORD PTR [r11+0x30]
   14000c602:	mov    rsi,QWORD PTR [r11+0x38]
   14000c606:	mov    rsp,r11
   14000c609:	pop    r13
   14000c60b:	pop    r12
   14000c60d:	pop    rdi
   14000c60e:	ret    
   14000c60f:	int3   
   14000c610:	mov    rax,rsp
   14000c613:	mov    BYTE PTR [rax+0x20],r9b
   14000c617:	mov    QWORD PTR [rax+0x18],r8
   14000c61b:	mov    QWORD PTR [rax+0x10],rdx
   14000c61f:	push   rbx
   14000c620:	push   r14
   14000c622:	sub    rsp,0x288
   14000c629:	mov    QWORD PTR [rax-0x18],rsi
   14000c62d:	mov    QWORD PTR [rax-0x20],rdi
   14000c631:	mov    QWORD PTR [rax-0x30],r13
   14000c635:	mov    QWORD PTR [rax-0x38],r15
   14000c639:	mov    r15,rcx
   14000c63c:	xor    eax,eax
   14000c63e:	or     r14,0xffffffffffffffff
   14000c642:	lea    rdi,[rip+0xa557]        # 0x140016ba0
   14000c649:	mov    r13,r8
   14000c64c:	mov    rcx,r14
   14000c64f:	repnz scas al,BYTE PTR es:[rdi]
   14000c651:	not    rcx
   14000c654:	lea    rdx,[rcx-0x1]
   14000c658:	lea    rcx,[rip+0xa541]        # 0x140016ba0
   14000c65f:	call   QWORD PTR [rip+0xa26b]        # 0x1400168d0
   14000c665:	mov    rcx,QWORD PTR [r15]
   14000c668:	lea    rdx,[rsp+0xf8]
   14000c670:	mov    QWORD PTR [rsp+0xf8],rax
   14000c678:	call   0x140014230
   14000c67d:	lea    rcx,[rsp+0xf8]
   14000c685:	call   QWORD PTR [rip+0xa2ad]        # 0x140016938
   14000c68b:	lea    rcx,[rsp+0xe8]
   14000c693:	mov    rdx,r13
   14000c696:	call   0x140005cb0
   14000c69b:	lea    rdx,[rsp+0xe8]
   14000c6a3:	lea    rcx,[rsp+0x130]
   14000c6ab:	call   QWORD PTR [rip+0x9cc7]        # 0x140016378
   14000c6b1:	lea    rdx,[rip+0xa4cc]        # 0x140016b84
   14000c6b8:	xor    eax,eax
   14000c6ba:	mov    rdi,rdx
   14000c6bd:	mov    QWORD PTR [rsp+0x78],rdx
   14000c6c2:	mov    rcx,r14
   14000c6c5:	repnz scas al,BYTE PTR es:[rdi]
   14000c6c7:	lea    rdx,[rsp+0x1b0]
   14000c6cf:	not    rcx
   14000c6d2:	dec    rcx
   14000c6d5:	mov    DWORD PTR [rsp+0x70],ecx
   14000c6d9:	lea    rcx,[rsp+0x108]
   14000c6e1:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c6e6:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14000c6ef:	call   QWORD PTR [rip+0x9b1b]        # 0x140016210
   14000c6f5:	lea    rdx,[rsp+0x130]
   14000c6fd:	lea    rcx,[rsp+0x188]
   14000c705:	call   0x140001000
   14000c70a:	mov    rcx,QWORD PTR [r15]
   14000c70d:	lea    rdx,[rsp+0x108]
   14000c715:	mov    r8,rax
   14000c718:	call   0x140014b80
   14000c71d:	lea    rcx,[rsp+0x188]
   14000c725:	call   QWORD PTR [rip+0xa20d]        # 0x140016938
   14000c72b:	lea    rcx,[rsp+0x108]
   14000c733:	call   QWORD PTR [rip+0xa1ff]        # 0x140016938
   14000c739:	lea    rcx,[rsp+0x130]
   14000c741:	call   QWORD PTR [rip+0xa1f1]        # 0x140016938
   14000c747:	mov    rcx,r13
   14000c74a:	call   QWORD PTR [rip+0x9ed0]        # 0x140016620
   14000c750:	mov    ebx,eax
   14000c752:	sub    ebx,0x1
   14000c755:	js     0x14000c8ca
   14000c75b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c760:	lea    rdx,[rsp+0x1a0]
   14000c768:	mov    r8d,ebx
   14000c76b:	mov    rcx,r13
   14000c76e:	call   QWORD PTR [rip+0x9ea4]        # 0x140016618
   14000c774:	xor    eax,eax
   14000c776:	lea    rdi,[rip+0xaa43]        # 0x1400171c0
   14000c77d:	mov    rcx,r14
   14000c780:	repnz scas al,BYTE PTR es:[rdi]
   14000c782:	not    rcx
   14000c785:	lea    rsi,[rcx-0x1]
   14000c789:	lea    rcx,[rsp+0x1a0]
   14000c791:	call   QWORD PTR [rip+0x9e79]        # 0x140016610
   14000c797:	mov    r11,rax
   14000c79a:	test   rax,rax
   14000c79d:	je     0x14000c7b1
   14000c79f:	xor    eax,eax
   14000c7a1:	mov    rcx,r14
   14000c7a4:	mov    rdi,r11
   14000c7a7:	repnz scas al,BYTE PTR es:[rdi]
   14000c7a9:	not    rcx
   14000c7ac:	dec    rcx
   14000c7af:	jmp    0x14000c7b3
   14000c7b1:	xor    ecx,ecx
   14000c7b3:	cmp    ecx,esi
   14000c7b5:	jne    0x14000c7cd
   14000c7b7:	movsxd r8,ecx
   14000c7ba:	lea    rdx,[rip+0xa9ff]        # 0x1400171c0
   14000c7c1:	mov    rcx,r11
   14000c7c4:	call   0x14001507e
   14000c7c9:	test   eax,eax
   14000c7cb:	je     0x14000c7d7
   14000c7cd:	sub    ebx,0x1
   14000c7d0:	jns    0x14000c760
   14000c7d2:	jmp    0x14000c8ca
   14000c7d7:	lea    rcx,[rsp+0x1a0]
   14000c7df:	call   QWORD PTR [rip+0x9e23]        # 0x140016608
   14000c7e5:	mov    r11,rax
   14000c7e8:	test   rax,rax
   14000c7eb:	je     0x14000c803
   14000c7ed:	xor    eax,eax
   14000c7ef:	mov    rcx,r14
   14000c7f2:	mov    rdi,r11
   14000c7f5:	repnz scas al,BYTE PTR es:[rdi]
   14000c7f7:	not    rcx
   14000c7fa:	dec    rcx
   14000c7fd:	mov    DWORD PTR [rsp+0x70],ecx
   14000c801:	jmp    0x14000c80b
   14000c803:	mov    DWORD PTR [rsp+0x70],0x0
   14000c80b:	mov    QWORD PTR [rsp+0x78],r11
   14000c810:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c815:	lea    rdx,[rsp+0x230]
   14000c81d:	lea    rcx,[rsp+0xc0]
   14000c825:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   14000c82e:	call   QWORD PTR [rip+0x99dc]        # 0x140016210
   14000c834:	lea    rdx,[rip+0xa975]        # 0x1400171b0
   14000c83b:	xor    eax,eax
   14000c83d:	mov    rdi,rdx
   14000c840:	mov    QWORD PTR [rsp+0x78],rdx
   14000c845:	mov    rcx,r14
   14000c848:	repnz scas al,BYTE PTR es:[rdi]
   14000c84a:	lea    rdx,[rsp+0x210]
   14000c852:	not    rcx
   14000c855:	dec    rcx
   14000c858:	mov    DWORD PTR [rsp+0x70],ecx
   14000c85c:	lea    rcx,[rsp+0x140]
   14000c864:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c869:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   14000c872:	call   QWORD PTR [rip+0x9998]        # 0x140016210
   14000c878:	lea    rdx,[rsp+0xc0]
   14000c880:	lea    rcx,[rsp+0x160]
   14000c888:	call   0x140001000
   14000c88d:	mov    rcx,QWORD PTR [r15]
   14000c890:	lea    rdx,[rsp+0x140]
   14000c898:	mov    r8,rax
   14000c89b:	call   0x140014b80
   14000c8a0:	lea    rcx,[rsp+0x160]
   14000c8a8:	call   QWORD PTR [rip+0xa08a]        # 0x140016938
   14000c8ae:	lea    rcx,[rsp+0x140]
   14000c8b6:	call   QWORD PTR [rip+0xa07c]        # 0x140016938
   14000c8bc:	lea    rcx,[rsp+0xc0]
   14000c8c4:	call   QWORD PTR [rip+0xa06e]        # 0x140016938
   14000c8ca:	mov    rdx,QWORD PTR [r13+0x0]
   14000c8ce:	test   rdx,rdx
   14000c8d1:	je     0x14000c999
   14000c8d7:	lea    rcx,[rsp+0x190]
   14000c8df:	call   0x140005cb0
   14000c8e4:	lea    rcx,[rsp+0xd0]
   14000c8ec:	mov    rdx,rax
   14000c8ef:	call   QWORD PTR [rip+0x9a83]        # 0x140016378
   14000c8f5:	lea    rdx,[rip+0xa264]        # 0x140016b60
   14000c8fc:	xor    eax,eax
   14000c8fe:	mov    rdi,rdx
   14000c901:	mov    QWORD PTR [rsp+0x78],rdx
   14000c906:	mov    rcx,r14
   14000c909:	repnz scas al,BYTE PTR es:[rdi]
   14000c90b:	lea    rdx,[rsp+0x1e0]
   14000c913:	not    rcx
   14000c916:	dec    rcx
   14000c919:	mov    DWORD PTR [rsp+0x70],ecx
   14000c91d:	lea    rcx,[rsp+0xb0]
   14000c925:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000c92a:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   14000c933:	call   QWORD PTR [rip+0x98d7]        # 0x140016210
   14000c939:	lea    rdx,[rsp+0xd0]
   14000c941:	lea    rcx,[rsp+0x148]
   14000c949:	call   0x140001000
   14000c94e:	mov    rcx,QWORD PTR [r15]
   14000c951:	lea    rdx,[rsp+0xb0]
   14000c959:	mov    r8,rax
   14000c95c:	call   0x140014b80
   14000c961:	lea    rcx,[rsp+0x148]
   14000c969:	call   QWORD PTR [rip+0x9fc9]        # 0x140016938
   14000c96f:	lea    rcx,[rsp+0xb0]
   14000c977:	call   QWORD PTR [rip+0x9fbb]        # 0x140016938
   14000c97d:	lea    rcx,[rsp+0xd0]
   14000c985:	call   QWORD PTR [rip+0x9fad]        # 0x140016938
   14000c98b:	lea    rcx,[rsp+0x190]
   14000c993:	call   QWORD PTR [rip+0x98df]        # 0x140016278
   14000c999:	mov    rcx,r13
   14000c99c:	mov    QWORD PTR [rsp+0x2a0],rbp
   14000c9a4:	call   QWORD PTR [rip+0x9a0e]        # 0x1400163b8
   14000c9aa:	lea    rcx,[rsp+0x80]
   14000c9b2:	mov    r8d,r14d
   14000c9b5:	mov    rdx,rax
   14000c9b8:	call   QWORD PTR [rip+0x99b2]        # 0x140016370
   14000c9be:	mov    rcx,QWORD PTR [rip+0x1070b]        # 0x14001d0d0
   14000c9c5:	cmp    DWORD PTR [rcx+0x14],0x0
   14000c9c9:	je     0x14000cb10
   14000c9cf:	xor    ebp,ebp
   14000c9d1:	cmp    DWORD PTR [rcx+0x20],ebp
   14000c9d4:	je     0x14000c9f0
   14000c9d6:	mov    edx,DWORD PTR [rcx+0x24]
   14000c9d9:	lea    rcx,[rsp+0x80]
   14000c9e1:	call   QWORD PTR [rip+0x98f9]        # 0x1400162e0
   14000c9e7:	mov    rcx,QWORD PTR [rip+0x106e2]        # 0x14001d0d0
   14000c9ee:	mov    ebp,eax
   14000c9f0:	mov    edi,DWORD PTR [rcx+0x20]
   14000c9f3:	test   edi,edi
   14000c9f5:	je     0x14000ca7b
   14000c9fb:	xor    edx,edx
   14000c9fd:	mov    eax,ebp
   14000c9ff:	div    edi
   14000ca01:	mov    eax,edx
   14000ca03:	mov    rdx,QWORD PTR [rcx+0x8]
   14000ca07:	lea    rsi,[rdx+rax*8]
   14000ca0b:	mov    rdx,QWORD PTR [rdx+rax*8]
   14000ca0f:	cmp    rdx,rcx
   14000ca12:	je     0x14000ca82
   14000ca14:	cmp    ebp,DWORD PTR [rdx+0x8]
   14000ca17:	jne    0x14000ca65
   14000ca19:	mov    rax,QWORD PTR [rsp+0x80]
   14000ca21:	movsxd rdi,DWORD PTR [rax+0x4]
   14000ca25:	mov    rax,QWORD PTR [rdx+0x10]
   14000ca29:	cmp    edi,DWORD PTR [rax+0x4]
   14000ca2c:	jne    0x14000ca65
   14000ca2e:	lea    rcx,[rdx+0x10]
   14000ca32:	mov    rbx,rdi
   14000ca35:	call   QWORD PTR [rip+0x9f15]        # 0x140016950
   14000ca3b:	lea    rcx,[rsp+0x80]
   14000ca43:	mov    rdi,rax
   14000ca46:	call   QWORD PTR [rip+0x9f04]        # 0x140016950
   14000ca4c:	mov    r8,rbx
   14000ca4f:	mov    rcx,rax
   14000ca52:	mov    rdx,rdi
   14000ca55:	call   0x14001507e
   14000ca5a:	test   eax,eax
   14000ca5c:	je     0x14000ca72
   14000ca5e:	mov    rcx,QWORD PTR [rip+0x1066b]        # 0x14001d0d0
   14000ca65:	mov    rsi,QWORD PTR [rsi]
   14000ca68:	mov    rdx,QWORD PTR [rsi]
   14000ca6b:	cmp    rdx,rcx
   14000ca6e:	jne    0x14000ca14
   14000ca70:	jmp    0x14000ca82
   14000ca72:	mov    rcx,QWORD PTR [rip+0x10657]        # 0x14001d0d0
   14000ca79:	jmp    0x14000ca82
   14000ca7b:	lea    rsi,[rip+0x1064e]        # 0x14001d0d0
   14000ca82:	mov    rbx,QWORD PTR [rsi]
   14000ca85:	cmp    rbx,rcx
   14000ca88:	je     0x14000cb10
   14000ca8e:	mov    rbx,QWORD PTR [rbx+0x18]
   14000ca92:	mov    eax,DWORD PTR [rbx+0x10]
   14000ca95:	test   eax,eax
   14000ca97:	je     0x14000caa3
   14000ca99:	cmp    eax,0xffffffff
   14000ca9c:	je     0x14000caa3
   14000ca9e:	lock add DWORD PTR [rbx+0x10],0x1
   14000caa3:	test   BYTE PTR [rbx+0x28],0x1
   14000caa7:	jne    0x14000cb17
   14000caa9:	mov    eax,DWORD PTR [rbx+0x10]
   14000caac:	cmp    eax,0x1
   14000caaf:	je     0x14000cb17
   14000cab1:	test   eax,eax
   14000cab3:	je     0x14000cb17
   14000cab5:	lea    r8,[rip+0x71a4]        # 0x140013c60
   14000cabc:	lea    rdx,[rip+0xffffffffffff51ad]        # 0x140001c70
   14000cac3:	mov    r9d,0x18
   14000cac9:	mov    rcx,rbx
   14000cacc:	mov    DWORD PTR [rsp+0x20],0x8
   14000cad4:	call   QWORD PTR [rip+0x984e]        # 0x140016328
   14000cada:	mov    ecx,DWORD PTR [rbx+0x10]
   14000cadd:	mov    rdi,rax
   14000cae0:	test   ecx,ecx
   14000cae2:	je     0x14000cafb
   14000cae4:	cmp    ecx,0xffffffff
   14000cae7:	je     0x14000cb0b
   14000cae9:	mov    ecx,r14d
   14000caec:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000caf1:	add    ecx,0xffffffff
   14000caf4:	setne  cl
   14000caf7:	test   cl,cl
   14000caf9:	jne    0x14000cb0b
   14000cafb:	lea    rdx,[rip+0x715e]        # 0x140013c60
   14000cb02:	mov    rcx,rbx
   14000cb05:	call   QWORD PTR [rip+0x978d]        # 0x140016298
   14000cb0b:	mov    rbx,rdi
   14000cb0e:	jmp    0x14000cb17
   14000cb10:	mov    rbx,QWORD PTR [rip+0x9711]        # 0x140016228
   14000cb17:	lea    rcx,[rsp+0x80]
   14000cb1f:	call   QWORD PTR [rip+0x9753]        # 0x140016278
   14000cb25:	cmp    DWORD PTR [rbx+0x14],0x0
   14000cb29:	je     0x14000d960
   14000cb2f:	mov    rax,QWORD PTR [rip+0x96f2]        # 0x140016228
   14000cb36:	mov    QWORD PTR [rsp+0x270],r12
   14000cb3e:	mov    rdi,rbx
   14000cb41:	mov    QWORD PTR [rsp+0x30],rax
   14000cb46:	mov    eax,DWORD PTR [rbx+0x10]
   14000cb49:	mov    QWORD PTR [rsp+0x110],rbx
   14000cb51:	test   eax,eax
   14000cb53:	je     0x14000cb67
   14000cb55:	cmp    eax,0xffffffff
   14000cb58:	je     0x14000cb67
   14000cb5a:	lock add DWORD PTR [rbx+0x10],0x1
   14000cb5f:	mov    rdi,QWORD PTR [rsp+0x110]
   14000cb67:	test   BYTE PTR [rbx+0x28],0x1
   14000cb6b:	jne    0x14000cbd7
   14000cb6d:	mov    eax,DWORD PTR [rbx+0x10]
   14000cb70:	cmp    eax,0x1
   14000cb73:	je     0x14000cbd7
   14000cb75:	test   eax,eax
   14000cb77:	je     0x14000cbd7
   14000cb79:	lea    r8,[rip+0x70e0]        # 0x140013c60
   14000cb80:	lea    rdx,[rip+0xffffffffffff50e9]        # 0x140001c70
   14000cb87:	mov    r9d,0x18
   14000cb8d:	mov    rcx,rbx
   14000cb90:	mov    DWORD PTR [rsp+0x20],0x8
   14000cb98:	call   QWORD PTR [rip+0x978a]        # 0x140016328
   14000cb9e:	mov    rdi,rax
   14000cba1:	mov    eax,DWORD PTR [rbx+0x10]
   14000cba4:	test   eax,eax
   14000cba6:	je     0x14000cbbf
   14000cba8:	cmp    eax,0xffffffff
   14000cbab:	je     0x14000cbcf
   14000cbad:	mov    eax,r14d
   14000cbb0:	lock xadd DWORD PTR [rbx+0x10],eax
   14000cbb5:	add    eax,0xffffffff
   14000cbb8:	setne  al
   14000cbbb:	test   al,al
   14000cbbd:	jne    0x14000cbcf
   14000cbbf:	lea    rdx,[rip+0x709a]        # 0x140013c60
   14000cbc6:	mov    rcx,rbx
   14000cbc9:	call   QWORD PTR [rip+0x96c9]        # 0x140016298
   14000cbcf:	mov    QWORD PTR [rsp+0x110],rdi
   14000cbd7:	mov    rcx,rdi
   14000cbda:	call   QWORD PTR [rip+0x99a0]        # 0x140016580
   14000cbe0:	mov    QWORD PTR [rsp+0x120],rax
   14000cbe8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cbf0:	mov    r12d,0x1
   14000cbf6:	mov    DWORD PTR [rsp+0x118],r12d
   14000cbfe:	cmp    rax,rdi
   14000cc01:	je     0x14000ce7d
   14000cc07:	mov    r13,QWORD PTR [rax+0x10]
   14000cc0b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cc10:	test   r12d,r12d
   14000cc13:	je     0x14000ce5a
   14000cc19:	mov    rcx,r13
   14000cc1c:	call   QWORD PTR [rip+0x9e16]        # 0x140016a38
   14000cc22:	mov    rcx,r13
   14000cc25:	mov    esi,eax
   14000cc27:	call   QWORD PTR [rip+0x9e13]        # 0x140016a40
   14000cc2d:	mov    rcx,r13
   14000cc30:	mov    edi,eax
   14000cc32:	call   QWORD PTR [rip+0x9df8]        # 0x140016a30
   14000cc38:	lea    rcx,[rsp+0x240]
   14000cc40:	mov    rdx,rax
   14000cc43:	call   QWORD PTR [rip+0x98f7]        # 0x140016540
   14000cc49:	lea    rdx,[rsp+0x60]
   14000cc4e:	mov    r9d,edi
   14000cc51:	mov    rcx,r15
   14000cc54:	mov    r8,rax
   14000cc57:	mov    DWORD PTR [rsp+0x20],esi
   14000cc5b:	call   0x140002560
   14000cc60:	mov    rdi,QWORD PTR [rsp+0x30]
   14000cc65:	mov    eax,DWORD PTR [rdi+0x10]
   14000cc68:	cmp    eax,0x1
   14000cc6b:	je     0x14000ccdf
   14000cc6d:	test   eax,eax
   14000cc6f:	je     0x14000ccdf
   14000cc71:	lea    r8,[rip+0xffffffffffff5658]        # 0x1400022d0
   14000cc78:	lea    rdx,[rip+0xffffffffffff4861]        # 0x1400014e0
   14000cc7f:	mov    r9d,0x20
   14000cc85:	mov    rcx,rdi
   14000cc88:	mov    DWORD PTR [rsp+0x20],0x8
   14000cc90:	call   QWORD PTR [rip+0x9692]        # 0x140016328
   14000cc96:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cc9b:	mov    rdi,rax
   14000cc9e:	mov    eax,DWORD PTR [rcx+0x10]
   14000cca1:	test   eax,eax
   14000cca3:	je     0x14000cccd
   14000cca5:	cmp    eax,0xffffffff
   14000cca8:	je     0x14000ccda
   14000ccaa:	mov    eax,r14d
   14000ccad:	lock xadd DWORD PTR [rcx+0x10],eax
   14000ccb2:	add    eax,0xffffffff
   14000ccb5:	setne  al
   14000ccb8:	test   al,al
   14000ccba:	jne    0x14000cd4a
   14000ccc0:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ccc5:	mov    r12d,DWORD PTR [rsp+0x118]
   14000cccd:	lea    rdx,[rip+0xffffffffffff55fc]        # 0x1400022d0
   14000ccd4:	call   QWORD PTR [rip+0x95be]        # 0x140016298
   14000ccda:	mov    QWORD PTR [rsp+0x30],rdi
   14000ccdf:	mov    edx,DWORD PTR [rdi+0x24]
   14000cce2:	lea    rcx,[rsp+0x60]
   14000cce7:	call   QWORD PTR [rip+0x95eb]        # 0x1400162d8
   14000cced:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ccf2:	mov    edi,DWORD PTR [rcx+0x20]
   14000ccf5:	mov    esi,eax
   14000ccf7:	mov    DWORD PTR [rsp+0x88],eax
   14000ccfe:	test   edi,edi
   14000cd00:	je     0x14000cd5b
   14000cd02:	xor    edx,edx
   14000cd04:	div    edi
   14000cd06:	mov    eax,edx
   14000cd08:	mov    rdx,QWORD PTR [rcx+0x8]
   14000cd0c:	lea    rdi,[rdx+rax*8]
   14000cd10:	mov    rdx,QWORD PTR [rdx+rax*8]
   14000cd14:	cmp    rdx,rcx
   14000cd17:	je     0x14000cd60
   14000cd19:	nop    DWORD PTR [rax+0x0]
   14000cd20:	cmp    esi,DWORD PTR [rdx+0x8]
   14000cd23:	jne    0x14000cd3d
   14000cd25:	lea    rcx,[rsp+0x60]
   14000cd2a:	add    rdx,0x10
   14000cd2e:	call   QWORD PTR [rip+0x9c0c]        # 0x140016940
   14000cd34:	test   al,al
   14000cd36:	jne    0x14000cd54
   14000cd38:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cd3d:	mov    rdi,QWORD PTR [rdi]
   14000cd40:	mov    rdx,QWORD PTR [rdi]
   14000cd43:	cmp    rdx,rcx
   14000cd46:	jne    0x14000cd20
   14000cd48:	jmp    0x14000cd60
   14000cd4a:	mov    r12d,DWORD PTR [rsp+0x118]
   14000cd52:	jmp    0x14000ccda
   14000cd54:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cd59:	jmp    0x14000cd60
   14000cd5b:	lea    rdi,[rsp+0x30]
   14000cd60:	mov    rax,QWORD PTR [rdi]
   14000cd63:	cmp    rax,rcx
   14000cd66:	jne    0x14000ce3b
   14000cd6c:	call   QWORD PTR [rip+0x9886]        # 0x1400165f8
   14000cd72:	test   al,al
   14000cd74:	je     0x14000cdeb
   14000cd76:	mov    rax,QWORD PTR [rsp+0x30]
   14000cd7b:	lea    rcx,[rsp+0x60]
   14000cd80:	mov    edx,DWORD PTR [rax+0x24]
   14000cd83:	call   QWORD PTR [rip+0x954f]        # 0x1400162d8
   14000cd89:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cd8e:	mov    edi,DWORD PTR [rcx+0x20]
   14000cd91:	mov    esi,eax
   14000cd93:	mov    DWORD PTR [rsp+0x88],eax
   14000cd9a:	test   edi,edi
   14000cd9c:	je     0x14000cde4
   14000cd9e:	xor    edx,edx
   14000cda0:	div    edi
   14000cda2:	mov    rax,QWORD PTR [rcx+0x8]
   14000cda6:	lea    rdi,[rax+rdx*8]
   14000cdaa:	mov    rax,QWORD PTR [rax+rdx*8]
   14000cdae:	cmp    rax,rcx
   14000cdb1:	je     0x14000cdf0
   14000cdb3:	cmp    esi,DWORD PTR [rax+0x8]
   14000cdb6:	jne    0x14000cdd0
   14000cdb8:	lea    rdx,[rax+0x10]
   14000cdbc:	lea    rcx,[rsp+0x60]
   14000cdc1:	call   QWORD PTR [rip+0x9b79]        # 0x140016940
   14000cdc7:	test   al,al
   14000cdc9:	jne    0x14000cddd
   14000cdcb:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cdd0:	mov    rdi,QWORD PTR [rdi]
   14000cdd3:	mov    rax,QWORD PTR [rdi]
   14000cdd6:	cmp    rax,rcx
   14000cdd9:	jne    0x14000cdb3
   14000cddb:	jmp    0x14000cdf0
   14000cddd:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cde2:	jmp    0x14000cdf0
   14000cde4:	lea    rdi,[rsp+0x30]
   14000cde9:	jmp    0x14000cdf0
   14000cdeb:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cdf0:	mov    edx,0x8
   14000cdf5:	call   QWORD PTR [rip+0x94b5]        # 0x1400162b0
   14000cdfb:	mov    rbp,rax
   14000cdfe:	test   rax,rax
   14000ce01:	je     0x14000ce2c
   14000ce03:	mov    rcx,QWORD PTR [rdi]
   14000ce06:	lea    rdx,[rsp+0x60]
   14000ce0b:	mov    DWORD PTR [rax+0x8],esi
   14000ce0e:	mov    QWORD PTR [rax],rcx
   14000ce11:	lea    rcx,[rax+0x10]
   14000ce15:	call   QWORD PTR [rip+0x9725]        # 0x140016540
   14000ce1b:	mov    QWORD PTR [rbp+0x18],r13
   14000ce1f:	mov    QWORD PTR [rdi],rbp
   14000ce22:	mov    rax,QWORD PTR [rsp+0x30]
   14000ce27:	inc    DWORD PTR [rax+0x14]
   14000ce2a:	jmp    0x14000ce3f
   14000ce2c:	xor    ebp,ebp
   14000ce2e:	mov    QWORD PTR [rdi],rbp
   14000ce31:	mov    rax,QWORD PTR [rsp+0x30]
   14000ce36:	inc    DWORD PTR [rax+0x14]
   14000ce39:	jmp    0x14000ce3f
   14000ce3b:	mov    QWORD PTR [rax+0x18],r13
   14000ce3f:	lea    rcx,[rsp+0x60]
   14000ce44:	call   QWORD PTR [rip+0x9aee]        # 0x140016938
   14000ce4a:	dec    r12d
   14000ce4d:	mov    DWORD PTR [rsp+0x118],r12d
   14000ce55:	jmp    0x14000cc10
   14000ce5a:	mov    rcx,QWORD PTR [rsp+0x120]
   14000ce62:	call   QWORD PTR [rip+0x93d0]        # 0x140016238
   14000ce68:	mov    rdi,QWORD PTR [rsp+0x110]
   14000ce70:	mov    QWORD PTR [rsp+0x120],rax
   14000ce78:	jmp    0x14000cbf0
   14000ce7d:	mov    eax,DWORD PTR [rdi+0x10]
   14000ce80:	test   eax,eax
   14000ce82:	je     0x14000cea3
   14000ce84:	cmp    eax,0xffffffff
   14000ce87:	je     0x14000ceb3
   14000ce89:	mov    eax,r14d
   14000ce8c:	lock xadd DWORD PTR [rdi+0x10],eax
   14000ce91:	add    eax,0xffffffff
   14000ce94:	setne  al
   14000ce97:	test   al,al
   14000ce99:	jne    0x14000ceb3
   14000ce9b:	mov    rdi,QWORD PTR [rsp+0x110]
   14000cea3:	lea    rdx,[rip+0x6db6]        # 0x140013c60
   14000ceaa:	mov    rcx,rdi
   14000cead:	call   QWORD PTR [rip+0x93e5]        # 0x140016298
   14000ceb3:	mov    rcx,QWORD PTR [rip+0x9366]        # 0x140016220
   14000ceba:	mov    rax,QWORD PTR [rsp+0x30]
   14000cebf:	mov    QWORD PTR [rsp+0x40],rcx
   14000cec4:	mov    edx,DWORD PTR [rax+0x14]
   14000cec7:	cmp    DWORD PTR [rcx+0x4],edx
   14000ceca:	jge    0x14000cf98
   14000ced0:	mov    eax,DWORD PTR [rcx]
   14000ced2:	cmp    eax,r12d
   14000ced5:	je     0x14000cf8d
   14000cedb:	test   eax,eax
   14000cedd:	je     0x14000cf8d
   14000cee3:	movsxd rax,DWORD PTR [rcx+0x8]
   14000cee7:	lea    rsi,[rcx+rax*8+0x10]
   14000ceec:	lea    rcx,[rsp+0x40]
   14000cef1:	call   QWORD PTR [rip+0x9429]        # 0x140016320
   14000cef7:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cefc:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000cf00:	mov    rbp,rax
   14000cf03:	lea    r12,[rcx+rdx*8+0x10]
   14000cf08:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000cf0c:	lea    rdi,[rcx+rdx*8+0x10]
   14000cf11:	cmp    rdi,r12
   14000cf14:	je     0x14000cf34
   14000cf16:	test   rdi,rdi
   14000cf19:	je     0x14000cf27
   14000cf1b:	mov    rdx,rsi
   14000cf1e:	mov    rcx,rdi
   14000cf21:	call   QWORD PTR [rip+0x9619]        # 0x140016540
   14000cf27:	add    rdi,0x8
   14000cf2b:	add    rsi,0x8
   14000cf2f:	cmp    rdi,r12
   14000cf32:	jne    0x14000cf16
   14000cf34:	mov    eax,DWORD PTR [rbp+0x0]
   14000cf37:	test   eax,eax
   14000cf39:	je     0x14000cf52
   14000cf3b:	cmp    eax,0xffffffff
   14000cf3e:	je     0x14000cf98
   14000cf40:	mov    eax,r14d
   14000cf43:	lock xadd DWORD PTR [rbp+0x0],eax
   14000cf48:	add    eax,0xffffffff
   14000cf4b:	setne  al
   14000cf4e:	test   al,al
   14000cf50:	jne    0x14000cf98
   14000cf52:	movsxd rax,DWORD PTR [rbp+0xc]
   14000cf56:	lea    rdi,[rbp+rax*8+0x10]
   14000cf5b:	movsxd rax,DWORD PTR [rbp+0x8]
   14000cf5f:	lea    rsi,[rbp+rax*8+0x10]
   14000cf64:	cmp    rsi,rdi
   14000cf67:	je     0x14000cf82
   14000cf69:	nop    DWORD PTR [rax+0x0]
   14000cf70:	sub    rdi,0x8
   14000cf74:	mov    rcx,rdi
   14000cf77:	call   QWORD PTR [rip+0x99bb]        # 0x140016938
   14000cf7d:	cmp    rdi,rsi
   14000cf80:	jne    0x14000cf70
   14000cf82:	mov    rcx,rbp
   14000cf85:	call   QWORD PTR [rip+0x931d]        # 0x1400162a8
   14000cf8b:	jmp    0x14000cf98
   14000cf8d:	lea    rcx,[rsp+0x40]
   14000cf92:	call   QWORD PTR [rip+0x9408]        # 0x1400163a0
   14000cf98:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cf9d:	call   QWORD PTR [rip+0x95dd]        # 0x140016580
   14000cfa3:	mov    rdi,rax
   14000cfa6:	cmp    rax,QWORD PTR [rsp+0x30]
   14000cfab:	je     0x14000d024
   14000cfad:	nop    DWORD PTR [rax]
   14000cfb0:	mov    rax,QWORD PTR [rsp+0x40]
   14000cfb5:	mov    ecx,DWORD PTR [rax]
   14000cfb7:	cmp    ecx,0x1
   14000cfba:	je     0x14000cfe9
   14000cfbc:	test   ecx,ecx
   14000cfbe:	je     0x14000cfe9
   14000cfc0:	lea    rcx,[rsp+0x40]
   14000cfc5:	mov    edx,0x7fffffff
   14000cfca:	mov    r8d,0x1
   14000cfd0:	call   0x140002c00
   14000cfd5:	test   rax,rax
   14000cfd8:	je     0x14000d011
   14000cfda:	lea    rdx,[rdi+0x10]
   14000cfde:	mov    rcx,rax
   14000cfe1:	call   QWORD PTR [rip+0x9559]        # 0x140016540
   14000cfe7:	jmp    0x14000d011
   14000cfe9:	lea    rdx,[rdi+0x10]
   14000cfed:	lea    rcx,[rsp+0x158]
   14000cff5:	call   QWORD PTR [rip+0x9545]        # 0x140016540
   14000cffb:	lea    rcx,[rsp+0x40]
   14000d000:	call   QWORD PTR [rip+0x937a]        # 0x140016380
   14000d006:	mov    rcx,QWORD PTR [rsp+0x158]
   14000d00e:	mov    QWORD PTR [rax],rcx
   14000d011:	mov    rcx,rdi
   14000d014:	call   QWORD PTR [rip+0x921e]        # 0x140016238
   14000d01a:	mov    rdi,rax
   14000d01d:	cmp    rax,QWORD PTR [rsp+0x30]
   14000d022:	jne    0x14000cfb0
   14000d024:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d029:	mov    rax,rsi
   14000d02c:	mov    QWORD PTR [rsp+0x38],rax
   14000d031:	mov    ecx,DWORD PTR [rsi]
   14000d033:	test   ecx,ecx
   14000d035:	je     0x14000d04c
   14000d037:	cmp    ecx,0xffffffff
   14000d03a:	je     0x14000d0ac
   14000d03c:	lock add DWORD PTR [rsi],0x1
   14000d040:	mov    rax,QWORD PTR [rsp+0x38]
   14000d045:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d04a:	jmp    0x14000d0ac
   14000d04c:	mov    edx,DWORD PTR [rsi+0x4]
   14000d04f:	lea    rcx,[rsp+0x38]
   14000d054:	call   QWORD PTR [rip+0x92c6]        # 0x140016320
   14000d05a:	mov    rax,QWORD PTR [rsp+0x38]
   14000d05f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d064:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d068:	lea    r12,[rax+rcx*8+0x10]
   14000d06d:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d071:	lea    rbp,[rsi+rcx*8+0x10]
   14000d076:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d07a:	lea    rdi,[rax+rcx*8+0x10]
   14000d07f:	cmp    rdi,r12
   14000d082:	je     0x14000d0ac
   14000d084:	test   rdi,rdi
   14000d087:	je     0x14000d095
   14000d089:	mov    rdx,rbp
   14000d08c:	mov    rcx,rdi
   14000d08f:	call   QWORD PTR [rip+0x94ab]        # 0x140016540
   14000d095:	add    rdi,0x8
   14000d099:	add    rbp,0x8
   14000d09d:	cmp    rdi,r12
   14000d0a0:	jne    0x14000d084
   14000d0a2:	mov    rax,QWORD PTR [rsp+0x38]
   14000d0a7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d0ac:	mov    ecx,DWORD PTR [rsi]
   14000d0ae:	test   ecx,ecx
   14000d0b0:	je     0x14000d0d1
   14000d0b2:	cmp    ecx,0xffffffff
   14000d0b5:	je     0x14000d110
   14000d0b7:	mov    eax,r14d
   14000d0ba:	lock xadd DWORD PTR [rsi],eax
   14000d0be:	add    eax,0xffffffff
   14000d0c1:	setne  al
   14000d0c4:	test   al,al
   14000d0c6:	jne    0x14000d1a8
   14000d0cc:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d0d1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000d0d5:	lea    rdi,[rsi+rax*8+0x10]
   14000d0da:	movsxd rax,DWORD PTR [rsi+0x8]
   14000d0de:	lea    rbp,[rsi+rax*8+0x10]
   14000d0e3:	cmp    rbp,rdi
   14000d0e6:	je     0x14000d102
   14000d0e8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d0f0:	sub    rdi,0x8
   14000d0f4:	mov    rcx,rdi
   14000d0f7:	call   QWORD PTR [rip+0x983b]        # 0x140016938
   14000d0fd:	cmp    rdi,rbp
   14000d100:	jne    0x14000d0f0
   14000d102:	mov    rcx,rsi
   14000d105:	call   QWORD PTR [rip+0x919d]        # 0x1400162a8
   14000d10b:	mov    rax,QWORD PTR [rsp+0x38]
   14000d110:	mov    ecx,DWORD PTR [rax]
   14000d112:	cmp    ecx,0x1
   14000d115:	je     0x14000d1f0
   14000d11b:	test   ecx,ecx
   14000d11d:	je     0x14000d1f0
   14000d123:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d127:	mov    edx,DWORD PTR [rax+0x4]
   14000d12a:	lea    rsi,[rax+rcx*8+0x10]
   14000d12f:	lea    rcx,[rsp+0x38]
   14000d134:	call   QWORD PTR [rip+0x91e6]        # 0x140016320
   14000d13a:	mov    rbp,rax
   14000d13d:	mov    rax,QWORD PTR [rsp+0x38]
   14000d142:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d146:	lea    r12,[rax+rcx*8+0x10]
   14000d14b:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d14f:	lea    rdi,[rax+rcx*8+0x10]
   14000d154:	cmp    rdi,r12
   14000d157:	je     0x14000d183
   14000d159:	nop    DWORD PTR [rax+0x0]
   14000d160:	test   rdi,rdi
   14000d163:	je     0x14000d171
   14000d165:	mov    rdx,rsi
   14000d168:	mov    rcx,rdi
   14000d16b:	call   QWORD PTR [rip+0x93cf]        # 0x140016540
   14000d171:	add    rdi,0x8
   14000d175:	add    rsi,0x8
   14000d179:	cmp    rdi,r12
   14000d17c:	jne    0x14000d160
   14000d17e:	mov    rax,QWORD PTR [rsp+0x38]
   14000d183:	mov    ecx,DWORD PTR [rbp+0x0]
   14000d186:	test   ecx,ecx
   14000d188:	je     0x14000d1b2
   14000d18a:	cmp    ecx,0xffffffff
   14000d18d:	je     0x14000d1f0
   14000d18f:	mov    eax,r14d
   14000d192:	lock xadd DWORD PTR [rbp+0x0],eax
   14000d197:	add    eax,0xffffffff
   14000d19a:	setne  al
   14000d19d:	test   al,al
   14000d19f:	je     0x14000d1b2
   14000d1a1:	mov    rax,QWORD PTR [rsp+0x38]
   14000d1a6:	jmp    0x14000d1f0
   14000d1a8:	mov    rax,QWORD PTR [rsp+0x38]
   14000d1ad:	jmp    0x14000d110
   14000d1b2:	movsxd rax,DWORD PTR [rbp+0xc]
   14000d1b6:	lea    rdi,[rbp+rax*8+0x10]
   14000d1bb:	movsxd rax,DWORD PTR [rbp+0x8]
   14000d1bf:	lea    rsi,[rbp+rax*8+0x10]
   14000d1c4:	cmp    rsi,rdi
   14000d1c7:	je     0x14000d1e2
   14000d1c9:	nop    DWORD PTR [rax+0x0]
   14000d1d0:	sub    rdi,0x8
   14000d1d4:	mov    rcx,rdi
   14000d1d7:	call   QWORD PTR [rip+0x975b]        # 0x140016938
   14000d1dd:	cmp    rdi,rsi
   14000d1e0:	jne    0x14000d1d0
   14000d1e2:	mov    rcx,rbp
   14000d1e5:	call   QWORD PTR [rip+0x90bd]        # 0x1400162a8
   14000d1eb:	mov    rax,QWORD PTR [rsp+0x38]
   14000d1f0:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d1f4:	lea    rdi,[rax+rcx*8+0x10]
   14000d1f9:	mov    ecx,DWORD PTR [rax]
   14000d1fb:	mov    QWORD PTR [rsp+0x100],rdi
   14000d203:	cmp    ecx,0x1
   14000d206:	je     0x14000d2e0
   14000d20c:	test   ecx,ecx
   14000d20e:	je     0x14000d2e0
   14000d214:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d218:	mov    edx,DWORD PTR [rax+0x4]
   14000d21b:	lea    rbp,[rax+rcx*8+0x10]
   14000d220:	lea    rcx,[rsp+0x38]
   14000d225:	call   QWORD PTR [rip+0x90f5]        # 0x140016320
   14000d22b:	mov    r12,rax
   14000d22e:	mov    rax,QWORD PTR [rsp+0x38]
   14000d233:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d237:	lea    r13,[rax+rcx*8+0x10]
   14000d23c:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d240:	lea    rsi,[rax+rcx*8+0x10]
   14000d245:	cmp    rsi,r13
   14000d248:	je     0x14000d273
   14000d24a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d250:	test   rsi,rsi
   14000d253:	je     0x14000d261
   14000d255:	mov    rdx,rbp
   14000d258:	mov    rcx,rsi
   14000d25b:	call   QWORD PTR [rip+0x92df]        # 0x140016540
   14000d261:	add    rsi,0x8
   14000d265:	add    rbp,0x8
   14000d269:	cmp    rsi,r13
   14000d26c:	jne    0x14000d250
   14000d26e:	mov    rax,QWORD PTR [rsp+0x38]
   14000d273:	mov    ecx,DWORD PTR [r12]
   14000d277:	test   ecx,ecx
   14000d279:	je     0x14000d29f
   14000d27b:	cmp    ecx,0xffffffff
   14000d27e:	je     0x14000d2e0
   14000d280:	mov    eax,r14d
   14000d283:	lock xadd DWORD PTR [r12],eax
   14000d289:	add    eax,0xffffffff
   14000d28c:	setne  al
   14000d28f:	test   al,al
   14000d291:	jne    0x14000d4a0
   14000d297:	mov    rdi,QWORD PTR [rsp+0x100]
   14000d29f:	movsxd rax,DWORD PTR [r12+0xc]
   14000d2a4:	lea    rsi,[r12+rax*8+0x10]
   14000d2a9:	movsxd rax,DWORD PTR [r12+0x8]
   14000d2ae:	lea    rbp,[r12+rax*8+0x10]
   14000d2b3:	cmp    rbp,rsi
   14000d2b6:	je     0x14000d2d2
   14000d2b8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d2c0:	sub    rsi,0x8
   14000d2c4:	mov    rcx,rsi
   14000d2c7:	call   QWORD PTR [rip+0x966b]        # 0x140016938
   14000d2cd:	cmp    rsi,rbp
   14000d2d0:	jne    0x14000d2c0
   14000d2d2:	mov    rcx,r12
   14000d2d5:	call   QWORD PTR [rip+0x8fcd]        # 0x1400162a8
   14000d2db:	mov    rax,QWORD PTR [rsp+0x38]
   14000d2e0:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d2e4:	mov    QWORD PTR [rsp+0x198],rdi
   14000d2ec:	lea    rdx,[rsp+0x198]
   14000d2f4:	lea    rax,[rax+rcx*8+0x10]
   14000d2f9:	lea    rcx,[rsp+0x180]
   14000d301:	sub    rdi,rax
   14000d304:	mov    QWORD PTR [rsp+0x70],rax
   14000d309:	mov    QWORD PTR [rsp+0x180],rax
   14000d311:	sar    rdi,0x3
   14000d315:	mov    r8d,edi
   14000d318:	call   0x140009860
   14000d31d:	lea    rdx,[rip+0x9efc]        # 0x140017220
   14000d324:	xor    eax,eax
   14000d326:	mov    rdi,rdx
   14000d329:	mov    QWORD PTR [rsp+0x58],rdx
   14000d32e:	mov    rcx,r14
   14000d331:	repnz scas al,BYTE PTR es:[rdi]
   14000d333:	lea    rdx,[rsp+0x220]
   14000d33b:	not    rcx
   14000d33e:	dec    rcx
   14000d341:	mov    DWORD PTR [rsp+0x50],ecx
   14000d345:	lea    rcx,[rsp+0xe0]
   14000d34d:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000d352:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   14000d35b:	call   QWORD PTR [rip+0x8eaf]        # 0x140016210
   14000d361:	mov    rcx,QWORD PTR [r15]
   14000d364:	lea    r8,[rsp+0x38]
   14000d369:	lea    rdx,[rsp+0xe0]
   14000d371:	call   0x140014480
   14000d376:	lea    rcx,[rsp+0xe0]
   14000d37e:	call   QWORD PTR [rip+0x95b4]        # 0x140016938
   14000d384:	cmp    BYTE PTR [rsp+0x2b8],0x0
   14000d38c:	mov    r12,QWORD PTR [rsp+0x270]
   14000d394:	je     0x14000d3fb
   14000d396:	lea    rdx,[rip+0x9e43]        # 0x1400171e0
   14000d39d:	xor    eax,eax
   14000d39f:	mov    rcx,r14
   14000d3a2:	mov    rdi,rdx
   14000d3a5:	mov    QWORD PTR [rsp+0x58],rdx
   14000d3aa:	lea    rdx,[rsp+0x200]
   14000d3b2:	repnz scas al,BYTE PTR es:[rdi]
   14000d3b4:	not    rcx
   14000d3b7:	dec    rcx
   14000d3ba:	mov    DWORD PTR [rsp+0x50],ecx
   14000d3be:	lea    rcx,[rsp+0x138]
   14000d3c6:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000d3cb:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   14000d3d4:	call   QWORD PTR [rip+0x8e36]        # 0x140016210
   14000d3da:	mov    rcx,QWORD PTR [r15]
   14000d3dd:	lea    rdx,[rsp+0x138]
   14000d3e5:	xor    r8d,r8d
   14000d3e8:	call   0x140014c40
   14000d3ed:	lea    rcx,[rsp+0x138]
   14000d3f5:	call   QWORD PTR [rip+0x953d]        # 0x140016938
   14000d3fb:	cmp    BYTE PTR [rsp+0x2c0],0x0
   14000d403:	je     0x14000d46a
   14000d405:	lea    rdx,[rip+0x9dc4]        # 0x1400171d0
   14000d40c:	xor    eax,eax
   14000d40e:	mov    rcx,r14
   14000d411:	mov    rdi,rdx
   14000d414:	mov    QWORD PTR [rsp+0x58],rdx
   14000d419:	lea    rdx,[rsp+0x1c0]
   14000d421:	repnz scas al,BYTE PTR es:[rdi]
   14000d423:	not    rcx
   14000d426:	dec    rcx
   14000d429:	mov    DWORD PTR [rsp+0x50],ecx
   14000d42d:	lea    rcx,[rsp+0xf0]
   14000d435:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000d43a:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   14000d443:	call   QWORD PTR [rip+0x8dc7]        # 0x140016210
   14000d449:	mov    rcx,QWORD PTR [r15]
   14000d44c:	lea    rdx,[rsp+0xf0]
   14000d454:	mov    r8b,0x1
   14000d457:	call   0x140014c40
   14000d45c:	lea    rcx,[rsp+0xf0]
   14000d464:	call   QWORD PTR [rip+0x94ce]        # 0x140016938
   14000d46a:	mov    rax,QWORD PTR [rip+0x8daf]        # 0x140016220
   14000d471:	mov    rdx,QWORD PTR [rsp+0x38]
   14000d476:	mov    QWORD PTR [rsp+0x68],rax
   14000d47b:	mov    QWORD PTR [rsp+0x90],rdx
   14000d483:	mov    eax,DWORD PTR [rdx]
   14000d485:	test   eax,eax
   14000d487:	je     0x14000d4b2
   14000d489:	cmp    eax,0xffffffff
   14000d48c:	je     0x14000d516
   14000d492:	lock add DWORD PTR [rdx],0x1
   14000d496:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d49e:	jmp    0x14000d516
   14000d4a0:	mov    rax,QWORD PTR [rsp+0x38]
   14000d4a5:	mov    rdi,QWORD PTR [rsp+0x100]
   14000d4ad:	jmp    0x14000d2e0
   14000d4b2:	mov    edx,DWORD PTR [rdx+0x4]
   14000d4b5:	lea    rcx,[rsp+0x90]
   14000d4bd:	call   QWORD PTR [rip+0x8e5d]        # 0x140016320
   14000d4c3:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d4cb:	movsxd rax,DWORD PTR [rdx+0xc]
   14000d4cf:	lea    rbp,[rdx+rax*8+0x10]
   14000d4d4:	mov    rax,QWORD PTR [rsp+0x38]
   14000d4d9:	movsxd rcx,DWORD PTR [rax+0x8]
   14000d4dd:	lea    rsi,[rax+rcx*8+0x10]
   14000d4e2:	movsxd rax,DWORD PTR [rdx+0x8]
   14000d4e6:	lea    rdi,[rdx+rax*8+0x10]
   14000d4eb:	cmp    rdi,rbp
   14000d4ee:	je     0x14000d516
   14000d4f0:	test   rdi,rdi
   14000d4f3:	je     0x14000d501
   14000d4f5:	mov    rdx,rsi
   14000d4f8:	mov    rcx,rdi
   14000d4fb:	call   QWORD PTR [rip+0x903f]        # 0x140016540
   14000d501:	add    rdi,0x8
   14000d505:	add    rsi,0x8
   14000d509:	cmp    rdi,rbp
   14000d50c:	jne    0x14000d4f0
   14000d50e:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d516:	mov    DWORD PTR [rsp+0x98],0x0
   14000d521:	movsxd rax,DWORD PTR [rdx+0x8]
   14000d525:	lea    rsi,[rdx+rax*8+0x10]
   14000d52a:	mov    QWORD PTR [rsp+0xa0],rsi
   14000d532:	movsxd rax,DWORD PTR [rdx+0xc]
   14000d536:	lea    rcx,[rdx+rax*8+0x10]
   14000d53b:	mov    QWORD PTR [rsp+0xa8],rcx
   14000d543:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d550:	mov    eax,0x1
   14000d555:	mov    DWORD PTR [rsp+0x98],eax
   14000d55c:	cmp    rsi,rcx
   14000d55f:	je     0x14000d63f
   14000d565:	test   eax,eax
   14000d567:	je     0x14000d61e
   14000d56d:	lea    rcx,[rsp+0x30]
   14000d572:	mov    rdx,rsi
   14000d575:	call   0x140005110
   14000d57a:	mov    rcx,QWORD PTR [rax]
   14000d57d:	call   QWORD PTR [rip+0x9475]        # 0x1400169f8
   14000d583:	lea    rcx,[rsp+0x170]
   14000d58b:	mov    r8d,0xa
   14000d591:	mov    edx,eax
   14000d593:	call   QWORD PTR [rip+0x8d57]        # 0x1400162f0
   14000d599:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d59e:	mov    rdi,rax
   14000d5a1:	mov    eax,DWORD PTR [rcx]
   14000d5a3:	cmp    eax,0x1
   14000d5a6:	je     0x14000d5d4
   14000d5a8:	test   eax,eax
   14000d5aa:	je     0x14000d5d4
   14000d5ac:	lea    rcx,[rsp+0x68]
   14000d5b1:	mov    edx,0x7fffffff
   14000d5b6:	mov    r8d,0x1
   14000d5bc:	call   0x140002c00
   14000d5c1:	test   rax,rax
   14000d5c4:	je     0x14000d5fb
   14000d5c6:	mov    rdx,rdi
   14000d5c9:	mov    rcx,rax
   14000d5cc:	call   QWORD PTR [rip+0x8f6e]        # 0x140016540
   14000d5d2:	jmp    0x14000d5fb
   14000d5d4:	lea    rcx,[rsp+0x168]
   14000d5dc:	mov    rdx,rdi
   14000d5df:	call   QWORD PTR [rip+0x8f5b]        # 0x140016540
   14000d5e5:	lea    rcx,[rsp+0x68]
   14000d5ea:	call   QWORD PTR [rip+0x8d90]        # 0x140016380
   14000d5f0:	mov    rcx,QWORD PTR [rsp+0x168]
   14000d5f8:	mov    QWORD PTR [rax],rcx
   14000d5fb:	lea    rcx,[rsp+0x170]
   14000d603:	call   QWORD PTR [rip+0x932f]        # 0x140016938
   14000d609:	mov    eax,DWORD PTR [rsp+0x98]
   14000d610:	dec    eax
   14000d612:	mov    DWORD PTR [rsp+0x98],eax
   14000d619:	jmp    0x14000d565
   14000d61e:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000d626:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000d62e:	add    rsi,0x8
   14000d632:	mov    QWORD PTR [rsp+0xa0],rsi
   14000d63a:	jmp    0x14000d550
   14000d63f:	mov    rsi,QWORD PTR [rsp+0x90]
   14000d647:	mov    eax,DWORD PTR [rsi]
   14000d649:	test   eax,eax
   14000d64b:	je     0x14000d66b
   14000d64d:	cmp    eax,0xffffffff
   14000d650:	je     0x14000d69d
   14000d652:	mov    eax,r14d
   14000d655:	lock xadd DWORD PTR [rsi],eax
   14000d659:	add    eax,0xffffffff
   14000d65c:	setne  al
   14000d65f:	test   al,al
   14000d661:	jne    0x14000d69d
   14000d663:	mov    rsi,QWORD PTR [rsp+0x90]
   14000d66b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000d66f:	lea    rdi,[rsi+rax*8+0x10]
   14000d674:	movsxd rax,DWORD PTR [rsi+0x8]
   14000d678:	lea    rbp,[rsi+rax*8+0x10]
   14000d67d:	cmp    rbp,rdi
   14000d680:	je     0x14000d694
   14000d682:	sub    rdi,0x8
   14000d686:	mov    rcx,rdi
   14000d689:	call   QWORD PTR [rip+0x92a9]        # 0x140016938
   14000d68f:	cmp    rdi,rbp
   14000d692:	jne    0x14000d682
   14000d694:	mov    rcx,rsi
   14000d697:	call   QWORD PTR [rip+0x8c0b]        # 0x1400162a8
   14000d69d:	lea    rdx,[rip+0x9b5c]        # 0x140017200
   14000d6a4:	xor    eax,eax
   14000d6a6:	mov    rcx,r14
   14000d6a9:	mov    rdi,rdx
   14000d6ac:	mov    QWORD PTR [rsp+0x58],rdx
   14000d6b1:	lea    rdx,[rsp+0x1d0]
   14000d6b9:	repnz scas al,BYTE PTR es:[rdi]
   14000d6bb:	not    rcx
   14000d6be:	dec    rcx
   14000d6c1:	mov    DWORD PTR [rsp+0x50],ecx
   14000d6c5:	lea    rcx,[rsp+0xb8]
   14000d6cd:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000d6d2:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   14000d6db:	call   QWORD PTR [rip+0x8b2f]        # 0x140016210
   14000d6e1:	mov    rcx,QWORD PTR [r15]
   14000d6e4:	lea    r8,[rsp+0x68]
   14000d6e9:	lea    rdx,[rsp+0xb8]
   14000d6f1:	call   0x140014480
   14000d6f6:	lea    rcx,[rsp+0xb8]
   14000d6fe:	call   QWORD PTR [rip+0x9234]        # 0x140016938
   14000d704:	mov    ecx,DWORD PTR [rbx+0x10]
   14000d707:	cmp    ecx,0x1
   14000d70a:	je     0x14000d769
   14000d70c:	test   ecx,ecx
   14000d70e:	je     0x14000d769
   14000d710:	lea    r8,[rip+0x6549]        # 0x140013c60
   14000d717:	lea    rdx,[rip+0xffffffffffff4552]        # 0x140001c70
   14000d71e:	mov    r9d,0x18
   14000d724:	mov    rcx,rbx
   14000d727:	mov    DWORD PTR [rsp+0x20],0x8
   14000d72f:	call   QWORD PTR [rip+0x8bf3]        # 0x140016328
   14000d735:	mov    ecx,DWORD PTR [rbx+0x10]
   14000d738:	mov    rdi,rax
   14000d73b:	test   ecx,ecx
   14000d73d:	je     0x14000d756
   14000d73f:	cmp    ecx,0xffffffff
   14000d742:	je     0x14000d766
   14000d744:	mov    ecx,r14d
   14000d747:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000d74c:	add    ecx,0xffffffff
   14000d74f:	setne  cl
   14000d752:	test   cl,cl
   14000d754:	jne    0x14000d766
   14000d756:	lea    rdx,[rip+0x6503]        # 0x140013c60
   14000d75d:	mov    rcx,rbx
   14000d760:	call   QWORD PTR [rip+0x8b32]        # 0x140016298
   14000d766:	mov    rbx,rdi
   14000d769:	mov    rcx,rbx
   14000d76c:	call   QWORD PTR [rip+0x8e0e]        # 0x140016580
   14000d772:	mov    rdx,QWORD PTR [rsp+0x2a8]
   14000d77a:	mov    rcx,QWORD PTR [rax+0x10]
   14000d77e:	call   QWORD PTR [rip+0x92fc]        # 0x140016a80
   14000d784:	test   rax,rax
   14000d787:	je     0x14000d865
   14000d78d:	mov    r13,QWORD PTR [rsp+0x2b0]
   14000d795:	cmp    rax,r13
   14000d798:	je     0x14000d86d
   14000d79e:	lea    rcx,[rsp+0x150]
   14000d7a6:	mov    rdx,rax
   14000d7a9:	call   0x140005cb0
   14000d7ae:	lea    rcx,[rsp+0xd8]
   14000d7b6:	mov    rdx,rax
   14000d7b9:	call   QWORD PTR [rip+0x8bb9]        # 0x140016378
   14000d7bf:	lea    rdx,[rip+0x9a82]        # 0x140017248
   14000d7c6:	xor    eax,eax
   14000d7c8:	mov    rdi,rdx
   14000d7cb:	mov    QWORD PTR [rsp+0x58],rdx
   14000d7d0:	mov    rcx,r14
   14000d7d3:	repnz scas al,BYTE PTR es:[rdi]
   14000d7d5:	lea    rdx,[rsp+0x1f0]
   14000d7dd:	not    rcx
   14000d7e0:	dec    rcx
   14000d7e3:	mov    DWORD PTR [rsp+0x50],ecx
   14000d7e7:	lea    rcx,[rsp+0xc8]
   14000d7ef:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000d7f4:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   14000d7fd:	call   QWORD PTR [rip+0x8a0d]        # 0x140016210
   14000d803:	lea    rdx,[rsp+0xd8]
   14000d80b:	lea    rcx,[rsp+0x178]
   14000d813:	call   0x140001000
   14000d818:	mov    rcx,QWORD PTR [r15]
   14000d81b:	lea    rdx,[rsp+0xc8]
   14000d823:	mov    r8,rax
   14000d826:	call   0x140014b80
   14000d82b:	lea    rcx,[rsp+0x178]
   14000d833:	call   QWORD PTR [rip+0x90ff]        # 0x140016938
   14000d839:	lea    rcx,[rsp+0xc8]
   14000d841:	call   QWORD PTR [rip+0x90f1]        # 0x140016938
   14000d847:	lea    rcx,[rsp+0xd8]
   14000d84f:	call   QWORD PTR [rip+0x90e3]        # 0x140016938
   14000d855:	lea    rcx,[rsp+0x150]
   14000d85d:	call   QWORD PTR [rip+0x8a15]        # 0x140016278
   14000d863:	jmp    0x14000d86d
   14000d865:	mov    r13,QWORD PTR [rsp+0x2b0]
   14000d86d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d872:	mov    eax,DWORD PTR [rsi]
   14000d874:	test   eax,eax
   14000d876:	je     0x14000d893
   14000d878:	cmp    eax,0xffffffff
   14000d87b:	je     0x14000d8cb
   14000d87d:	mov    eax,r14d
   14000d880:	lock xadd DWORD PTR [rsi],eax
   14000d884:	add    eax,0xffffffff
   14000d887:	setne  al
   14000d88a:	test   al,al
   14000d88c:	jne    0x14000d8cb
   14000d88e:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d893:	movsxd rax,DWORD PTR [rsi+0xc]
   14000d897:	lea    rdi,[rsi+rax*8+0x10]
   14000d89c:	movsxd rax,DWORD PTR [rsi+0x8]
   14000d8a0:	lea    rbp,[rsi+rax*8+0x10]
   14000d8a5:	cmp    rbp,rdi
   14000d8a8:	je     0x14000d8c2
   14000d8aa:	nop    WORD PTR [rax+rax*1+0x0]
   14000d8b0:	sub    rdi,0x8
   14000d8b4:	mov    rcx,rdi
   14000d8b7:	call   QWORD PTR [rip+0x907b]        # 0x140016938
   14000d8bd:	cmp    rdi,rbp
   14000d8c0:	jne    0x14000d8b0
   14000d8c2:	mov    rcx,rsi
   14000d8c5:	call   QWORD PTR [rip+0x89dd]        # 0x1400162a8
   14000d8cb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d8d0:	mov    eax,DWORD PTR [rsi]
   14000d8d2:	test   eax,eax
   14000d8d4:	je     0x14000d8f1
   14000d8d6:	cmp    eax,0xffffffff
   14000d8d9:	je     0x14000d92b
   14000d8db:	mov    eax,r14d
   14000d8de:	lock xadd DWORD PTR [rsi],eax
   14000d8e2:	add    eax,0xffffffff
   14000d8e5:	setne  al
   14000d8e8:	test   al,al
   14000d8ea:	jne    0x14000d92b
   14000d8ec:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d8f1:	movsxd rax,DWORD PTR [rsi+0xc]
   14000d8f5:	lea    rdi,[rsi+rax*8+0x10]
   14000d8fa:	movsxd rax,DWORD PTR [rsi+0x8]
   14000d8fe:	lea    rbp,[rsi+rax*8+0x10]
   14000d903:	cmp    rbp,rdi
   14000d906:	je     0x14000d922
   14000d908:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d910:	sub    rdi,0x8
   14000d914:	mov    rcx,rdi
   14000d917:	call   QWORD PTR [rip+0x901b]        # 0x140016938
   14000d91d:	cmp    rdi,rbp
   14000d920:	jne    0x14000d910
   14000d922:	mov    rcx,rsi
   14000d925:	call   QWORD PTR [rip+0x897d]        # 0x1400162a8
   14000d92b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d930:	mov    eax,DWORD PTR [rcx+0x10]
   14000d933:	test   eax,eax
   14000d935:	je     0x14000d953
   14000d937:	cmp    eax,0xffffffff
   14000d93a:	je     0x14000d960
   14000d93c:	mov    eax,r14d
   14000d93f:	lock xadd DWORD PTR [rcx+0x10],eax
   14000d944:	add    eax,0xffffffff
   14000d947:	setne  al
   14000d94a:	test   al,al
   14000d94c:	jne    0x14000d960
   14000d94e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d953:	lea    rdx,[rip+0xffffffffffff4976]        # 0x1400022d0
   14000d95a:	call   QWORD PTR [rip+0x8938]        # 0x140016298
   14000d960:	mov    rcx,r13
   14000d963:	call   QWORD PTR [rip+0x8cd7]        # 0x140016640
   14000d969:	mov    rcx,r13
   14000d96c:	mov    edi,eax
   14000d96e:	call   QWORD PTR [rip+0x8cc4]        # 0x140016638
   14000d974:	mov    rsi,QWORD PTR [rsp+0x280]
   14000d97c:	cmp    edi,eax
   14000d97e:	mov    rbp,QWORD PTR [rsp+0x2a0]
   14000d986:	jge    0x14000d9be
   14000d988:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d990:	lea    rdx,[rsp+0x248]
   14000d998:	mov    r8d,edi
   14000d99b:	mov    rcx,r13
   14000d99e:	call   QWORD PTR [rip+0x8c8c]        # 0x140016630
   14000d9a4:	mov    rcx,r15
   14000d9a7:	mov    rdx,rax
   14000d9aa:	call   0x140004520
   14000d9af:	mov    rcx,r13
   14000d9b2:	inc    edi
   14000d9b4:	call   QWORD PTR [rip+0x8c7e]        # 0x140016638
   14000d9ba:	cmp    edi,eax
   14000d9bc:	jl     0x14000d990
   14000d9be:	xor    r8d,r8d
   14000d9c1:	mov    rdx,r13
   14000d9c4:	mov    rcx,r15
   14000d9c7:	call   0x14000ae90
   14000d9cc:	mov    rcx,QWORD PTR [r15]
   14000d9cf:	call   0x140014320
   14000d9d4:	mov    eax,DWORD PTR [rbx+0x10]
   14000d9d7:	mov    r15,QWORD PTR [rsp+0x260]
   14000d9df:	mov    r13,QWORD PTR [rsp+0x268]
   14000d9e7:	mov    rdi,QWORD PTR [rsp+0x278]
   14000d9ef:	test   eax,eax
   14000d9f1:	je     0x14000da09
   14000d9f3:	cmp    eax,0xffffffff
   14000d9f6:	je     0x14000da19
   14000d9f8:	lock xadd DWORD PTR [rbx+0x10],r14d
   14000d9fe:	add    r14d,0xffffffff
   14000da02:	setne  al
   14000da05:	test   al,al
   14000da07:	jne    0x14000da19
   14000da09:	lea    rdx,[rip+0x6250]        # 0x140013c60
   14000da10:	mov    rcx,rbx
   14000da13:	call   QWORD PTR [rip+0x887f]        # 0x140016298
   14000da19:	lea    rcx,[rsp+0xe8]
   14000da21:	call   QWORD PTR [rip+0x8851]        # 0x140016278
   14000da27:	add    rsp,0x288
   14000da2e:	pop    r14
   14000da30:	pop    rbx
   14000da31:	ret    
   14000da32:	int3   
   14000da33:	int3   
   14000da34:	int3   
   14000da35:	int3   
   14000da36:	int3   
   14000da37:	int3   
   14000da38:	int3   
   14000da39:	int3   
   14000da3a:	int3   
   14000da3b:	int3   
   14000da3c:	int3   
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	rex push rbp
   14000da42:	push   rsi
   14000da43:	push   rdi
   14000da44:	sub    rsp,0x30
   14000da48:	mov    rax,QWORD PTR [rcx]
   14000da4b:	mov    rdi,rcx
   14000da4e:	mov    rsi,rdx
   14000da51:	mov    ecx,DWORD PTR [rax+0x10]
   14000da54:	cmp    ecx,0x1
   14000da57:	je     0x14000da65
   14000da59:	test   ecx,ecx
   14000da5b:	je     0x14000da65
   14000da5d:	mov    rcx,rdi
   14000da60:	call   0x140009b00
   14000da65:	mov    rax,QWORD PTR [rdi]
   14000da68:	mov    rcx,rsi
   14000da6b:	mov    edx,DWORD PTR [rax+0x24]
   14000da6e:	call   QWORD PTR [rip+0x886c]        # 0x1400162e0
   14000da74:	mov    rdx,rsi
   14000da77:	mov    rcx,rdi
   14000da7a:	mov    r8d,eax
   14000da7d:	mov    ebp,eax
   14000da7f:	mov    DWORD PTR [rsp+0x50],eax
   14000da83:	call   0x140001e30
   14000da88:	mov    rcx,QWORD PTR [rdi]
   14000da8b:	mov    r11,rax
   14000da8e:	mov    rax,QWORD PTR [rax]
   14000da91:	cmp    rax,rcx
   14000da94:	jne    0x14000db3e
   14000da9a:	mov    edx,DWORD PTR [rcx+0x20]
   14000da9d:	mov    QWORD PTR [rsp+0x58],rbx
   14000daa2:	cmp    DWORD PTR [rcx+0x14],edx
   14000daa5:	jl     0x14000dada
   14000daa7:	movsx  edx,WORD PTR [rcx+0x1e]
   14000daab:	inc    edx
   14000daad:	call   QWORD PTR [rip+0x88e5]        # 0x140016398
   14000dab3:	mov    r11,QWORD PTR [rdi]
   14000dab6:	mov    rcx,rsi
   14000dab9:	mov    edx,DWORD PTR [r11+0x24]
   14000dabd:	call   QWORD PTR [rip+0x881d]        # 0x1400162e0
   14000dac3:	mov    rdx,rsi
   14000dac6:	mov    rcx,rdi
   14000dac9:	mov    r8d,eax
   14000dacc:	mov    ebp,eax
   14000dace:	mov    DWORD PTR [rsp+0x50],eax
   14000dad2:	call   0x140001e30
   14000dad7:	mov    r11,rax
   14000dada:	mov    rbx,QWORD PTR [rip+0x8747]        # 0x140016228
   14000dae1:	lea    r9,[rsp+0x60]
   14000dae6:	mov    r8,rsi
   14000dae9:	mov    edx,ebp
   14000daeb:	mov    rcx,rdi
   14000daee:	mov    QWORD PTR [rsp+0x20],r11
   14000daf3:	mov    QWORD PTR [rsp+0x60],rbx
   14000daf8:	call   0x140009750
   14000dafd:	mov    rdi,rax
   14000db00:	mov    eax,DWORD PTR [rbx+0x10]
   14000db03:	test   eax,eax
   14000db05:	je     0x14000db1d
   14000db07:	cmp    eax,0xffffffff
   14000db0a:	je     0x14000db2d
   14000db0c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000db11:	setne  cl
   14000db14:	test   cl,cl
   14000db16:	jne    0x14000db2d
   14000db18:	mov    rbx,QWORD PTR [rsp+0x60]
   14000db1d:	lea    rdx,[rip+0xffffffffffff47fc]        # 0x140002320
   14000db24:	mov    rcx,rbx
   14000db27:	call   QWORD PTR [rip+0x876b]        # 0x140016298
   14000db2d:	lea    rax,[rdi+0x18]
   14000db31:	mov    rbx,QWORD PTR [rsp+0x58]
   14000db36:	add    rsp,0x30
   14000db3a:	pop    rdi
   14000db3b:	pop    rsi
   14000db3c:	pop    rbp
   14000db3d:	ret    
   14000db3e:	add    rax,0x18
   14000db42:	add    rsp,0x30
   14000db46:	pop    rdi
   14000db47:	pop    rsi
   14000db48:	pop    rbp
   14000db49:	ret    
   14000db4a:	int3   
   14000db4b:	int3   
   14000db4c:	int3   
   14000db4d:	int3   
   14000db4e:	int3   
   14000db4f:	int3   
   14000db50:	mov    r11,rsp
   14000db53:	mov    QWORD PTR [r11+0x20],rbx
   14000db57:	mov    QWORD PTR [r11+0x18],r8
   14000db5b:	mov    QWORD PTR [r11+0x10],rdx
   14000db5f:	mov    QWORD PTR [r11+0x8],rcx
   14000db63:	push   rbp
   14000db64:	push   rsi
   14000db65:	push   rdi
   14000db66:	push   r12
   14000db68:	push   r13
   14000db6a:	push   r14
   14000db6c:	push   r15
   14000db6e:	sub    rsp,0x320
   14000db75:	mov    rax,QWORD PTR [rip+0x86ac]        # 0x140016228
   14000db7c:	mov    r15,r9
   14000db7f:	mov    rdi,r8
   14000db82:	mov    QWORD PTR [rcx],rax
   14000db85:	mov    rax,QWORD PTR [rip+0x892c]        # 0x1400164b8
   14000db8c:	lea    r9,[rsp+0x6d]
   14000db91:	lea    r8,[r11-0x198]
   14000db98:	lea    rdx,[r11-0x70]
   14000db9c:	xor    r14d,r14d
   14000db9f:	mov    QWORD PTR [r11-0x198],rax
   14000dba6:	mov    r12,rcx
   14000dba9:	mov    DWORD PTR [rsp+0x30],r14d
   14000dbae:	call   0x140003f80
   14000dbb3:	mov    r11,QWORD PTR [rip+0x866e]        # 0x140016228
   14000dbba:	lea    rcx,[rsp+0x108]
   14000dbc2:	mov    QWORD PTR [rsp+0x50],r11
   14000dbc7:	call   QWORD PTR [rip+0x8deb]        # 0x1400169b8
   14000dbcd:	mov    rdx,QWORD PTR [rax]
   14000dbd0:	mov    rbx,rax
   14000dbd3:	mov    QWORD PTR [rsp+0x80],rdx
   14000dbdb:	mov    ecx,DWORD PTR [rdx]
   14000dbdd:	test   ecx,ecx
   14000dbdf:	je     0x14000dbec
   14000dbe1:	cmp    ecx,0xffffffff
   14000dbe4:	je     0x14000dc48
   14000dbe6:	lock add DWORD PTR [rdx],0x1
   14000dbea:	jmp    0x14000dc40
   14000dbec:	mov    edx,DWORD PTR [rdx+0x4]
   14000dbef:	lea    rcx,[rsp+0x80]
   14000dbf7:	call   QWORD PTR [rip+0x8723]        # 0x140016320
   14000dbfd:	mov    rdx,QWORD PTR [rsp+0x80]
   14000dc05:	mov    r11,QWORD PTR [rbx]
   14000dc08:	movsxd rax,DWORD PTR [r11+0x8]
   14000dc0c:	lea    r9,[r11+rax*8+0x10]
   14000dc11:	movsxd rax,DWORD PTR [rdx+0xc]
   14000dc15:	lea    r8,[rdx+rax*8+0x10]
   14000dc1a:	movsxd rax,DWORD PTR [rdx+0x8]
   14000dc1e:	lea    rcx,[rdx+rax*8+0x10]
   14000dc23:	cmp    r9,rcx
   14000dc26:	je     0x14000dc48
   14000dc28:	sub    r8,rcx
   14000dc2b:	sar    r8,0x3
   14000dc2f:	test   r8,r8
   14000dc32:	jle    0x14000dc48
   14000dc34:	shl    r8,0x3
   14000dc38:	mov    rdx,r9
   14000dc3b:	call   0x140015084
   14000dc40:	mov    rdx,QWORD PTR [rsp+0x80]
   14000dc48:	mov    DWORD PTR [rsp+0x88],r14d
   14000dc50:	movsxd rax,DWORD PTR [rdx+0x8]
   14000dc54:	or     r13d,0xffffffff
   14000dc58:	lea    rcx,[rdx+rax*8+0x10]
   14000dc5d:	mov    QWORD PTR [rsp+0x90],rcx
   14000dc65:	movsxd rax,DWORD PTR [rdx+0xc]
   14000dc69:	lea    rcx,[rdx+rax*8+0x10]
   14000dc6e:	mov    QWORD PTR [rsp+0x98],rcx
   14000dc76:	mov    rcx,QWORD PTR [rsp+0x108]
   14000dc7e:	mov    eax,DWORD PTR [rcx]
   14000dc80:	test   eax,eax
   14000dc82:	je     0x14000dc9c
   14000dc84:	cmp    eax,r13d
   14000dc87:	je     0x14000dcb0
   14000dc89:	lock add DWORD PTR [rcx],r13d
   14000dc8d:	setne  al
   14000dc90:	test   al,al
   14000dc92:	jne    0x14000dcb0
   14000dc94:	mov    rcx,QWORD PTR [rsp+0x108]
   14000dc9c:	call   QWORD PTR [rip+0x8606]        # 0x1400162a8
   14000dca2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000dcb0:	mov    eax,DWORD PTR [rsp+0x88]
   14000dcb7:	inc    DWORD PTR [rsp+0x88]
   14000dcbe:	test   eax,eax
   14000dcc0:	jne    0x14000dcd8
   14000dcc2:	mov    rax,QWORD PTR [rsp+0x98]
   14000dcca:	cmp    QWORD PTR [rsp+0x90],rax
   14000dcd2:	je     0x14000dcd8
   14000dcd4:	mov    bl,0x1
   14000dcd6:	jmp    0x14000dcda
   14000dcd8:	xor    bl,bl
   14000dcda:	test   r14b,0x2
   14000dcde:	je     0x14000dd15
   14000dce0:	mov    rcx,QWORD PTR [rsp+0x290]
   14000dce8:	and    r14d,0xfffffffd
   14000dcec:	mov    eax,DWORD PTR [rcx]
   14000dcee:	mov    DWORD PTR [rsp+0x30],r14d
   14000dcf3:	test   eax,eax
   14000dcf5:	je     0x14000dd0f
   14000dcf7:	cmp    eax,0xffffffff
   14000dcfa:	je     0x14000dd15
   14000dcfc:	lock add DWORD PTR [rcx],0xffffffff
   14000dd00:	setne  al
   14000dd03:	test   al,al
   14000dd05:	jne    0x14000dd15
   14000dd07:	mov    rcx,QWORD PTR [rsp+0x290]
   14000dd0f:	call   QWORD PTR [rip+0x8593]        # 0x1400162a8
   14000dd15:	test   bl,bl
   14000dd17:	je     0x14000e705
   14000dd1d:	mov    rax,QWORD PTR [rsp+0x90]
   14000dd25:	mov    rcx,QWORD PTR [rax]
   14000dd28:	mov    QWORD PTR [rsp+0x48],rcx
   14000dd2d:	test   r14b,0x4
   14000dd31:	je     0x14000dd70
   14000dd33:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14000dd3b:	and    r14d,0xfffffffb
   14000dd3f:	mov    eax,DWORD PTR [rcx]
   14000dd41:	mov    DWORD PTR [rsp+0x30],r14d
   14000dd46:	test   eax,eax
   14000dd48:	je     0x14000dd62
   14000dd4a:	cmp    eax,0xffffffff
   14000dd4d:	je     0x14000dd70
   14000dd4f:	lock add DWORD PTR [rcx],0xffffffff
   14000dd53:	setne  al
   14000dd56:	test   al,al
   14000dd58:	jne    0x14000dd70
   14000dd5a:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14000dd62:	call   QWORD PTR [rip+0x8540]        # 0x1400162a8
   14000dd68:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dd70:	mov    ebx,DWORD PTR [rsp+0x88]
   14000dd77:	test   r14b,0x10
   14000dd7b:	je     0x14000ddb2
   14000dd7d:	mov    rax,QWORD PTR [rsp+0x2b0]
   14000dd85:	and    r14d,0xffffffef
   14000dd89:	mov    ecx,DWORD PTR [rax]
   14000dd8b:	mov    DWORD PTR [rsp+0x30],r14d
   14000dd90:	test   ecx,ecx
   14000dd92:	je     0x14000dda4
   14000dd94:	cmp    ecx,0xffffffff
   14000dd97:	je     0x14000ddb2
   14000dd99:	lock add DWORD PTR [rax],0xffffffff
   14000dd9d:	setne  al
   14000dda0:	test   al,al
   14000dda2:	jne    0x14000ddb2
   14000dda4:	mov    rcx,QWORD PTR [rsp+0x2b0]
   14000ddac:	call   QWORD PTR [rip+0x84f6]        # 0x1400162a8
   14000ddb2:	test   ebx,ebx
   14000ddb4:	je     0x14000e6b2
   14000ddba:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ddbf:	mov    rcx,rbx
   14000ddc2:	call   QWORD PTR [rip+0x8bf8]        # 0x1400169c0
   14000ddc8:	test   al,al
   14000ddca:	jne    0x14000ddfa
   14000ddcc:	mov    rcx,rbx
   14000ddcf:	call   QWORD PTR [rip+0x8ca3]        # 0x140016a78
   14000ddd5:	lea    r9,[rsp+0x6a]
   14000ddda:	lea    r8,[rsp+0x2c0]
   14000dde2:	lea    rdx,[rsp+0x310]
   14000ddea:	mov    rcx,rdi
   14000dded:	mov    QWORD PTR [rsp+0x2c0],rax
   14000ddf5:	call   0x140003f80
   14000ddfa:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ddff:	mov    rcx,rbx
   14000de02:	call   QWORD PTR [rip+0x8c40]        # 0x140016a48
   14000de08:	test   al,al
   14000de0a:	je     0x14000de3a
   14000de0c:	mov    rcx,rbx
   14000de0f:	call   QWORD PTR [rip+0x8c63]        # 0x140016a78
   14000de15:	lea    r9,[rsp+0x6b]
   14000de1a:	lea    r8,[rsp+0x258]
   14000de22:	lea    rdx,[rsp+0x2f8]
   14000de2a:	mov    rcx,r15
   14000de2d:	mov    QWORD PTR [rsp+0x258],rax
   14000de35:	call   0x140003f80
   14000de3a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de3f:	mov    rcx,rbx
   14000de42:	call   QWORD PTR [rip+0x8c10]        # 0x140016a58
   14000de48:	test   al,al
   14000de4a:	jne    0x14000e2be
   14000de50:	mov    rcx,rbx
   14000de53:	call   QWORD PTR [rip+0x8c1f]        # 0x140016a78
   14000de59:	mov    rcx,rax
   14000de5c:	call   QWORD PTR [rip+0x8556]        # 0x1400163b8
   14000de62:	lea    rcx,[rsp+0x60]
   14000de67:	mov    r8d,r13d
   14000de6a:	mov    rdx,rax
   14000de6d:	call   QWORD PTR [rip+0x84fd]        # 0x140016370
   14000de73:	mov    rbx,QWORD PTR [rip+0xf256]        # 0x14001d0d0
   14000de7a:	mov    eax,DWORD PTR [rbx+0x10]
   14000de7d:	cmp    eax,0x1
   14000de80:	je     0x14000dee8
   14000de82:	test   eax,eax
   14000de84:	je     0x14000dee8
   14000de86:	lea    r8,[rip+0xffffffffffff74f3]        # 0x140005380
   14000de8d:	lea    rdx,[rip+0xffffffffffff753c]        # 0x1400053d0
   14000de94:	mov    r9d,0x20
   14000de9a:	mov    rcx,rbx
   14000de9d:	mov    DWORD PTR [rsp+0x20],0x8
   14000dea5:	call   QWORD PTR [rip+0x847d]        # 0x140016328
   14000deab:	mov    rcx,QWORD PTR [rip+0xf21e]        # 0x14001d0d0
   14000deb2:	mov    rbx,rax
   14000deb5:	mov    eax,DWORD PTR [rcx+0x10]
   14000deb8:	test   eax,eax
   14000deba:	je     0x14000ded4
   14000debc:	cmp    eax,0xffffffff
   14000debf:	je     0x14000dee1
   14000dec1:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000dec6:	setne  al
   14000dec9:	test   al,al
   14000decb:	jne    0x14000dee1
   14000decd:	mov    rcx,QWORD PTR [rip+0xf1fc]        # 0x14001d0d0
   14000ded4:	lea    rdx,[rip+0xffffffffffff74a5]        # 0x140005380
   14000dedb:	call   QWORD PTR [rip+0x83b7]        # 0x140016298
   14000dee1:	mov    QWORD PTR [rip+0xf1e8],rbx        # 0x14001d0d0
   14000dee8:	mov    edx,DWORD PTR [rbx+0x24]
   14000deeb:	lea    rcx,[rsp+0x60]
   14000def0:	call   QWORD PTR [rip+0x83ea]        # 0x1400162e0
   14000def6:	mov    rcx,QWORD PTR [rip+0xf1d3]        # 0x14001d0d0
   14000defd:	mov    r8d,DWORD PTR [rcx+0x20]
   14000df01:	mov    ebp,eax
   14000df03:	mov    DWORD PTR [rsp+0xec],eax
   14000df0a:	test   r8d,r8d
   14000df0d:	je     0x14000df81
   14000df0f:	xor    edx,edx
   14000df11:	div    r8d
   14000df14:	mov    r8d,edx
   14000df17:	mov    rdx,QWORD PTR [rcx+0x8]
   14000df1b:	lea    rsi,[rdx+r8*8]
   14000df1f:	mov    rdx,QWORD PTR [rdx+r8*8]
   14000df23:	cmp    rdx,rcx
   14000df26:	je     0x14000df88
   14000df28:	cmp    ebp,DWORD PTR [rdx+0x8]
   14000df2b:	jne    0x14000df74
   14000df2d:	mov    rax,QWORD PTR [rsp+0x60]
   14000df32:	movsxd r8,DWORD PTR [rax+0x4]
   14000df36:	mov    rax,QWORD PTR [rdx+0x10]
   14000df3a:	cmp    r8d,DWORD PTR [rax+0x4]
   14000df3e:	jne    0x14000df74
   14000df40:	lea    rcx,[rdx+0x10]
   14000df44:	mov    rdi,r8
   14000df47:	call   QWORD PTR [rip+0x8a03]        # 0x140016950
   14000df4d:	lea    rcx,[rsp+0x60]
   14000df52:	mov    rbx,rax
   14000df55:	call   QWORD PTR [rip+0x89f5]        # 0x140016950
   14000df5b:	mov    r8,rdi
   14000df5e:	mov    rcx,rax
   14000df61:	mov    rdx,rbx
   14000df64:	call   0x14001507e
   14000df69:	mov    rcx,QWORD PTR [rip+0xf160]        # 0x14001d0d0
   14000df70:	test   eax,eax
   14000df72:	je     0x14000df88
   14000df74:	mov    rsi,QWORD PTR [rsi]
   14000df77:	mov    rdx,QWORD PTR [rsi]
   14000df7a:	cmp    rdx,rcx
   14000df7d:	jne    0x14000df28
   14000df7f:	jmp    0x14000df88
   14000df81:	lea    rsi,[rip+0xf148]        # 0x14001d0d0
   14000df88:	mov    rax,QWORD PTR [rsi]
   14000df8b:	cmp    rax,rcx
   14000df8e:	jne    0x14000e0f4
   14000df94:	call   QWORD PTR [rip+0x865e]        # 0x1400165f8
   14000df9a:	test   al,al
   14000df9c:	je     0x14000e04a
   14000dfa2:	mov    rax,QWORD PTR [rip+0xf127]        # 0x14001d0d0
   14000dfa9:	lea    rcx,[rsp+0x60]
   14000dfae:	mov    edx,DWORD PTR [rax+0x24]
   14000dfb1:	call   QWORD PTR [rip+0x8329]        # 0x1400162e0
   14000dfb7:	mov    rcx,QWORD PTR [rip+0xf112]        # 0x14001d0d0
   14000dfbe:	mov    r8d,DWORD PTR [rcx+0x20]
   14000dfc2:	mov    ebp,eax
   14000dfc4:	mov    DWORD PTR [rsp+0xec],eax
   14000dfcb:	test   r8d,r8d
   14000dfce:	je     0x14000e041
   14000dfd0:	xor    edx,edx
   14000dfd2:	div    r8d
   14000dfd5:	mov    rax,QWORD PTR [rcx+0x8]
   14000dfd9:	lea    rsi,[rax+rdx*8]
   14000dfdd:	mov    rax,QWORD PTR [rax+rdx*8]
   14000dfe1:	cmp    rax,rcx
   14000dfe4:	je     0x14000e051
   14000dfe6:	cmp    ebp,DWORD PTR [rax+0x8]
   14000dfe9:	jne    0x14000e034
   14000dfeb:	lea    rdx,[rax+0x10]
   14000dfef:	mov    rax,QWORD PTR [rsp+0x60]
   14000dff4:	movsxd r8,DWORD PTR [rax+0x4]
   14000dff8:	mov    rax,QWORD PTR [rdx]
   14000dffb:	cmp    r8d,DWORD PTR [rax+0x4]
   14000dfff:	jne    0x14000e034
   14000e001:	mov    rcx,rdx
   14000e004:	mov    rdi,r8
   14000e007:	call   QWORD PTR [rip+0x8943]        # 0x140016950
   14000e00d:	lea    rcx,[rsp+0x60]
   14000e012:	mov    rbx,rax
   14000e015:	call   QWORD PTR [rip+0x8935]        # 0x140016950
   14000e01b:	mov    r8,rdi
   14000e01e:	mov    rcx,rax
   14000e021:	mov    rdx,rbx
   14000e024:	call   0x14001507e
   14000e029:	mov    rcx,QWORD PTR [rip+0xf0a0]        # 0x14001d0d0
   14000e030:	test   eax,eax
   14000e032:	je     0x14000e051
   14000e034:	mov    rsi,QWORD PTR [rsi]
   14000e037:	mov    rax,QWORD PTR [rsi]
   14000e03a:	cmp    rax,rcx
   14000e03d:	jne    0x14000dfe6
   14000e03f:	jmp    0x14000e051
   14000e041:	lea    rsi,[rip+0xf088]        # 0x14001d0d0
   14000e048:	jmp    0x14000e051
   14000e04a:	mov    rcx,QWORD PTR [rip+0xf07f]        # 0x14001d0d0
   14000e051:	mov    rbx,QWORD PTR [rip+0x81d0]        # 0x140016228
   14000e058:	mov    edx,0x8
   14000e05d:	call   QWORD PTR [rip+0x824d]        # 0x1400162b0
   14000e063:	mov    rdi,rax
   14000e066:	test   rax,rax
   14000e069:	je     0x14000e0b7
   14000e06b:	mov    rcx,QWORD PTR [rsi]
   14000e06e:	lea    rdx,[rsp+0x60]
   14000e073:	mov    DWORD PTR [rax+0x8],ebp
   14000e076:	mov    QWORD PTR [rax],rcx
   14000e079:	lea    rcx,[rax+0x10]
   14000e07d:	call   QWORD PTR [rip+0x820d]        # 0x140016290
   14000e083:	lea    rcx,[rdi+0x18]
   14000e087:	mov    QWORD PTR [rcx],rbx
   14000e08a:	mov    eax,DWORD PTR [rbx+0x10]
   14000e08d:	test   eax,eax
   14000e08f:	je     0x14000e09b
   14000e091:	cmp    eax,0xffffffff
   14000e094:	je     0x14000e09b
   14000e096:	lock add DWORD PTR [rbx+0x10],0x1
   14000e09b:	mov    rax,QWORD PTR [rcx]
   14000e09e:	test   BYTE PTR [rax+0x28],0x1
   14000e0a2:	jne    0x14000e0b9
   14000e0a4:	mov    eax,DWORD PTR [rax+0x10]
   14000e0a7:	cmp    eax,0x1
   14000e0aa:	je     0x14000e0b9
   14000e0ac:	test   eax,eax
   14000e0ae:	je     0x14000e0b9
   14000e0b0:	call   0x140002ae0
   14000e0b5:	jmp    0x14000e0b9
   14000e0b7:	xor    edi,edi
   14000e0b9:	mov    QWORD PTR [rsi],rdi
   14000e0bc:	mov    rax,QWORD PTR [rip+0xf00d]        # 0x14001d0d0
   14000e0c3:	add    rdi,0x18
   14000e0c7:	inc    DWORD PTR [rax+0x14]
   14000e0ca:	mov    eax,DWORD PTR [rbx+0x10]
   14000e0cd:	test   eax,eax
   14000e0cf:	je     0x14000e0e2
   14000e0d1:	cmp    eax,0xffffffff
   14000e0d4:	je     0x14000e0f8
   14000e0d6:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000e0db:	setne  al
   14000e0de:	test   al,al
   14000e0e0:	jne    0x14000e0f8
   14000e0e2:	lea    rdx,[rip+0x5b77]        # 0x140013c60
   14000e0e9:	mov    rcx,rbx
   14000e0ec:	call   QWORD PTR [rip+0x81a6]        # 0x140016298
   14000e0f2:	jmp    0x14000e0f8
   14000e0f4:	lea    rdi,[rax+0x18]
   14000e0f8:	lea    r9,[rsp+0x69]
   14000e0fd:	lea    r8,[rsp+0x48]
   14000e102:	lea    rdx,[rsp+0x308]
   14000e10a:	mov    rcx,rdi
   14000e10d:	call   0x140003f80
   14000e112:	lea    rcx,[rsp+0x60]
   14000e117:	call   QWORD PTR [rip+0x815b]        # 0x140016278
   14000e11d:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e122:	mov    rcx,rbx
   14000e125:	call   QWORD PTR [rip+0x8945]        # 0x140016a70
   14000e12b:	test   al,al
   14000e12d:	je     0x14000e29b
   14000e133:	mov    rcx,rbx
   14000e136:	call   QWORD PTR [rip+0x893c]        # 0x140016a78
   14000e13c:	mov    rcx,rax
   14000e13f:	call   QWORD PTR [rip+0x8273]        # 0x1400163b8
   14000e145:	lea    rcx,[rsp+0x70]
   14000e14a:	mov    r8d,r13d
   14000e14d:	mov    rdx,rax
   14000e150:	call   QWORD PTR [rip+0x821a]        # 0x140016370
   14000e156:	lea    rdx,[rsp+0x160]
   14000e15e:	mov    rcx,rbx
   14000e161:	call   QWORD PTR [rip+0x8861]        # 0x1400169c8
   14000e167:	lea    rcx,[rsp+0x50]
   14000e16c:	mov    rdx,rax
   14000e16f:	call   0x14000da40
   14000e174:	mov    rbx,rax
   14000e177:	mov    rcx,QWORD PTR [rax]
   14000e17a:	mov    eax,DWORD PTR [rcx+0x10]
   14000e17d:	cmp    eax,0x1
   14000e180:	je     0x14000e1d9
   14000e182:	test   eax,eax
   14000e184:	je     0x14000e1d9
   14000e186:	lea    r8,[rip+0xffffffffffff4193]        # 0x140002320
   14000e18d:	lea    rdx,[rip+0xffffffffffff32cc]        # 0x140001460
   14000e194:	mov    r9d,0x18
   14000e19a:	mov    DWORD PTR [rsp+0x20],0x8
   14000e1a2:	call   QWORD PTR [rip+0x8180]        # 0x140016328
   14000e1a8:	mov    rdx,QWORD PTR [rbx]
   14000e1ab:	mov    ecx,DWORD PTR [rdx+0x10]
   14000e1ae:	mov    rdi,rax
   14000e1b1:	test   ecx,ecx
   14000e1b3:	je     0x14000e1c6
   14000e1b5:	cmp    ecx,0xffffffff
   14000e1b8:	je     0x14000e1d6
   14000e1ba:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000e1bf:	setne  al
   14000e1c2:	test   al,al
   14000e1c4:	jne    0x14000e1d6
   14000e1c6:	mov    rcx,QWORD PTR [rbx]
   14000e1c9:	lea    rdx,[rip+0xffffffffffff4150]        # 0x140002320
   14000e1d0:	call   QWORD PTR [rip+0x80c2]        # 0x140016298
   14000e1d6:	mov    QWORD PTR [rbx],rdi
   14000e1d9:	mov    rax,QWORD PTR [rbx]
   14000e1dc:	lea    rcx,[rsp+0x70]
   14000e1e1:	mov    edx,DWORD PTR [rax+0x24]
   14000e1e4:	call   QWORD PTR [rip+0x80f6]        # 0x1400162e0
   14000e1ea:	lea    rdx,[rsp+0x70]
   14000e1ef:	mov    rcx,rbx
   14000e1f2:	mov    r8d,eax
   14000e1f5:	mov    esi,eax
   14000e1f7:	mov    DWORD PTR [rsp+0xf0],eax
   14000e1fe:	call   0x140001e30
   14000e203:	mov    rcx,QWORD PTR [rbx]
   14000e206:	mov    rbp,rax
   14000e209:	cmp    QWORD PTR [rax],rcx
   14000e20c:	jne    0x14000e282
   14000e20e:	call   QWORD PTR [rip+0x83e4]        # 0x1400165f8
   14000e214:	test   al,al
   14000e216:	je     0x14000e245
   14000e218:	mov    rax,QWORD PTR [rbx]
   14000e21b:	lea    rcx,[rsp+0x70]
   14000e220:	mov    edx,DWORD PTR [rax+0x24]
   14000e223:	call   QWORD PTR [rip+0x80b7]        # 0x1400162e0
   14000e229:	lea    rdx,[rsp+0x70]
   14000e22e:	mov    rcx,rbx
   14000e231:	mov    r8d,eax
   14000e234:	mov    esi,eax
   14000e236:	mov    DWORD PTR [rsp+0xf0],eax
   14000e23d:	call   0x140001e30
   14000e242:	mov    rbp,rax
   14000e245:	mov    rcx,QWORD PTR [rbx]
   14000e248:	mov    edx,0x8
   14000e24d:	call   QWORD PTR [rip+0x805d]        # 0x1400162b0
   14000e253:	mov    rdi,rax
   14000e256:	test   rax,rax
   14000e259:	je     0x14000e276
   14000e25b:	mov    rcx,QWORD PTR [rbp+0x0]
   14000e25f:	lea    rdx,[rsp+0x70]
   14000e264:	mov    DWORD PTR [rax+0x8],esi
   14000e267:	mov    QWORD PTR [rax],rcx
   14000e26a:	lea    rcx,[rax+0x10]
   14000e26e:	call   QWORD PTR [rip+0x801c]        # 0x140016290
   14000e274:	jmp    0x14000e278
   14000e276:	xor    edi,edi
   14000e278:	mov    QWORD PTR [rbp+0x0],rdi
   14000e27c:	mov    rax,QWORD PTR [rbx]
   14000e27f:	inc    DWORD PTR [rax+0x14]
   14000e282:	lea    rcx,[rsp+0x160]
   14000e28a:	call   QWORD PTR [rip+0x7fe8]        # 0x140016278
   14000e290:	lea    rcx,[rsp+0x70]
   14000e295:	call   QWORD PTR [rip+0x7fdd]        # 0x140016278
   14000e29b:	mov    rcx,QWORD PTR [rsp+0x368]
   14000e2a3:	call   QWORD PTR [rip+0x8727]        # 0x1400169d0
   14000e2a9:	mov    rdx,QWORD PTR [rsp+0x48]
   14000e2ae:	mov    r8,r12
   14000e2b1:	mov    rcx,rax
   14000e2b4:	call   0x140005b90
   14000e2b9:	jmp    0x14000e64f
   14000e2be:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e2c3:	call   QWORD PTR [rip+0x8797]        # 0x140016a60
   14000e2c9:	mov    rcx,QWORD PTR [rip+0xee18]        # 0x14001d0e8
   14000e2d0:	mov    r12,rax
   14000e2d3:	mov    eax,DWORD PTR [rcx]
   14000e2d5:	cmp    eax,0x1
   14000e2d8:	je     0x14000e3cd
   14000e2de:	test   eax,eax
   14000e2e0:	je     0x14000e3cd
   14000e2e6:	call   QWORD PTR [rip+0x7f9c]        # 0x140016288
   14000e2ec:	mov    rbx,QWORD PTR [rip+0xedf5]        # 0x14001d0e8
   14000e2f3:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e2f7:	mov    rsi,rax
   14000e2fa:	test   rcx,rcx
   14000e2fd:	je     0x14000e31d
   14000e2ff:	mov    rdx,rax
   14000e302:	call   0x140005450
   14000e307:	lea    rcx,[rsi+0x8]
   14000e30b:	mov    QWORD PTR [rsi+0x10],rax
   14000e30f:	and    QWORD PTR [rax],0x3
   14000e313:	or     QWORD PTR [rax],rcx
   14000e316:	mov    rbx,QWORD PTR [rip+0xedcb]        # 0x14001d0e8
   14000e31d:	mov    eax,DWORD PTR [rbx]
   14000e31f:	test   eax,eax
   14000e321:	je     0x14000e33e
   14000e323:	cmp    eax,0xffffffff
   14000e326:	je     0x14000e3b6
   14000e32c:	lock add DWORD PTR [rbx],0xffffffff
   14000e330:	setne  al
   14000e333:	test   al,al
   14000e335:	jne    0x14000e3b6
   14000e337:	mov    rbx,QWORD PTR [rip+0xedaa]        # 0x14001d0e8
   14000e33e:	mov    rdi,QWORD PTR [rbx+0x10]
   14000e342:	test   rdi,rdi
   14000e345:	je     0x14000e3ad
   14000e347:	lea    rcx,[rdi+0x18]
   14000e34b:	call   QWORD PTR [rip+0x85e7]        # 0x140016938
   14000e351:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e355:	mov    eax,DWORD PTR [rcx+0x10]
   14000e358:	test   eax,eax
   14000e35a:	je     0x14000e36d
   14000e35c:	cmp    eax,0xffffffff
   14000e35f:	je     0x14000e37e
   14000e361:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000e366:	setne  al
   14000e369:	test   al,al
   14000e36b:	jne    0x14000e37e
   14000e36d:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e371:	lea    rdx,[rip+0x58e8]        # 0x140013c60
   14000e378:	call   QWORD PTR [rip+0x7f1a]        # 0x140016298
   14000e37e:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e382:	test   rcx,rcx
   14000e385:	je     0x14000e38c
   14000e387:	call   0x140008650
   14000e38c:	mov    rcx,QWORD PTR [rdi+0x10]
   14000e390:	test   rcx,rcx
   14000e393:	je     0x14000e39a
   14000e395:	call   0x140008650
   14000e39a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000e39e:	mov    r8d,0x8
   14000e3a4:	mov    rcx,rbx
   14000e3a7:	call   QWORD PTR [rip+0x7f6b]        # 0x140016318
   14000e3ad:	mov    rcx,rbx
   14000e3b0:	call   QWORD PTR [rip+0x7f5a]        # 0x140016310
   14000e3b6:	mov    rcx,rsi
   14000e3b9:	mov    QWORD PTR [rip+0xed28],rsi        # 0x14001d0e8
   14000e3c0:	call   QWORD PTR [rip+0x7f7a]        # 0x140016340
   14000e3c6:	mov    rcx,QWORD PTR [rip+0xed1b]        # 0x14001d0e8
   14000e3cd:	mov    rbx,QWORD PTR [rcx+0x10]
   14000e3d1:	test   rbx,rbx
   14000e3d4:	je     0x14000e429
   14000e3d6:	xor    edi,edi
   14000e3d8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e3e0:	lea    rcx,[rbx+0x18]
   14000e3e4:	mov    rdx,r12
   14000e3e7:	call   QWORD PTR [rip+0x7e83]        # 0x140016270
   14000e3ed:	test   al,al
   14000e3ef:	jne    0x14000e3fa
   14000e3f1:	mov    rdi,rbx
   14000e3f4:	mov    rbx,QWORD PTR [rbx+0x8]
   14000e3f8:	jmp    0x14000e3fe
   14000e3fa:	mov    rbx,QWORD PTR [rbx+0x10]
   14000e3fe:	test   rbx,rbx
   14000e401:	jne    0x14000e3e0
   14000e403:	test   rdi,rdi
   14000e406:	je     0x14000e422
   14000e408:	lea    rdx,[rdi+0x18]
   14000e40c:	mov    rcx,r12
   14000e40f:	call   QWORD PTR [rip+0x7e5b]        # 0x140016270
   14000e415:	test   al,al
   14000e417:	jne    0x14000e422
   14000e419:	add    rdi,0x20
   14000e41d:	jmp    0x14000e62d
   14000e422:	mov    rcx,QWORD PTR [rip+0xecbf]        # 0x14001d0e8
   14000e429:	mov    eax,DWORD PTR [rcx]
   14000e42b:	mov    rbx,QWORD PTR [rip+0x7df6]        # 0x140016228
   14000e432:	cmp    eax,0x1
   14000e435:	je     0x14000e4d8
   14000e43b:	test   eax,eax
   14000e43d:	je     0x14000e4d8
   14000e443:	call   QWORD PTR [rip+0x7e3f]        # 0x140016288
   14000e449:	mov    rdi,QWORD PTR [rip+0xec98]        # 0x14001d0e8
   14000e450:	mov    rcx,QWORD PTR [rdi+0x10]
   14000e454:	mov    rsi,rax
   14000e457:	test   rcx,rcx
   14000e45a:	je     0x14000e47a
   14000e45c:	mov    rdx,rax
   14000e45f:	call   0x140005450
   14000e464:	lea    rcx,[rsi+0x8]
   14000e468:	mov    QWORD PTR [rsi+0x10],rax
   14000e46c:	and    QWORD PTR [rax],0x3
   14000e470:	or     QWORD PTR [rax],rcx
   14000e473:	mov    rdi,QWORD PTR [rip+0xec6e]        # 0x14001d0e8
   14000e47a:	mov    eax,DWORD PTR [rdi]
   14000e47c:	test   eax,eax
   14000e47e:	je     0x14000e497
   14000e480:	cmp    eax,0xffffffff
   14000e483:	je     0x14000e4c1
   14000e485:	lock add DWORD PTR [rdi],0xffffffff
   14000e489:	setne  al
   14000e48c:	test   al,al
   14000e48e:	jne    0x14000e4c1
   14000e490:	mov    rdi,QWORD PTR [rip+0xec51]        # 0x14001d0e8
   14000e497:	mov    rcx,QWORD PTR [rdi+0x10]
   14000e49b:	test   rcx,rcx
   14000e49e:	je     0x14000e4b8
   14000e4a0:	call   0x140008650
   14000e4a5:	mov    rdx,QWORD PTR [rdi+0x10]
   14000e4a9:	mov    r8d,0x8
   14000e4af:	mov    rcx,rdi
   14000e4b2:	call   QWORD PTR [rip+0x7e60]        # 0x140016318
   14000e4b8:	mov    rcx,rdi
   14000e4bb:	call   QWORD PTR [rip+0x7e4f]        # 0x140016310
   14000e4c1:	mov    rcx,rsi
   14000e4c4:	mov    QWORD PTR [rip+0xec1d],rsi        # 0x14001d0e8
   14000e4cb:	call   QWORD PTR [rip+0x7e6f]        # 0x140016340
   14000e4d1:	mov    rcx,QWORD PTR [rip+0xec10]        # 0x14001d0e8
   14000e4d8:	mov    rsi,QWORD PTR [rcx+0x10]
   14000e4dc:	xor    edi,edi
   14000e4de:	lea    r14,[rcx+0x8]
   14000e4e2:	mov    bpl,0x1
   14000e4e5:	test   rsi,rsi
   14000e4e8:	je     0x14000e591
   14000e4ee:	xchg   ax,ax
   14000e4f0:	lea    rcx,[rsi+0x18]
   14000e4f4:	mov    rdx,r12
   14000e4f7:	mov    r14,rsi
   14000e4fa:	call   QWORD PTR [rip+0x7d70]        # 0x140016270
   14000e500:	test   al,al
   14000e502:	jne    0x14000e510
   14000e504:	mov    rdi,rsi
   14000e507:	mov    rsi,QWORD PTR [rsi+0x8]
   14000e50b:	mov    bpl,0x1
   14000e50e:	jmp    0x14000e517
   14000e510:	mov    rsi,QWORD PTR [rsi+0x10]
   14000e514:	xor    bpl,bpl
   14000e517:	test   rsi,rsi
   14000e51a:	jne    0x14000e4f0
   14000e51c:	test   rdi,rdi
   14000e51f:	je     0x14000e58a
   14000e521:	lea    rdx,[rdi+0x18]
   14000e525:	mov    rcx,r12
   14000e528:	call   QWORD PTR [rip+0x7d42]        # 0x140016270
   14000e52e:	test   al,al
   14000e530:	jne    0x14000e58a
   14000e532:	cmp    QWORD PTR [rdi+0x20],rbx
   14000e536:	je     0x14000e5f4
   14000e53c:	mov    eax,DWORD PTR [rbx+0x10]
   14000e53f:	test   eax,eax
   14000e541:	je     0x14000e54d
   14000e543:	cmp    eax,0xffffffff
   14000e546:	je     0x14000e54d
   14000e548:	lock add DWORD PTR [rbx+0x10],0x1
   14000e54d:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e551:	mov    eax,DWORD PTR [rcx+0x10]
   14000e554:	test   eax,eax
   14000e556:	je     0x14000e569
   14000e558:	cmp    eax,0xffffffff
   14000e55b:	je     0x14000e57a
   14000e55d:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000e562:	setne  al
   14000e565:	test   al,al
   14000e567:	jne    0x14000e57a
   14000e569:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e56d:	lea    rdx,[rip+0x56ec]        # 0x140013c60
   14000e574:	call   QWORD PTR [rip+0x7d1e]        # 0x140016298
   14000e57a:	mov    QWORD PTR [rdi+0x20],rbx
   14000e57e:	test   BYTE PTR [rbx+0x28],0x1
   14000e582:	jne    0x14000e5f4
   14000e584:	lea    rcx,[rdi+0x20]
   14000e588:	jmp    0x14000e5ef
   14000e58a:	mov    rcx,QWORD PTR [rip+0xeb57]        # 0x14001d0e8
   14000e591:	mov    edx,0x28
   14000e596:	mov    r9,r14
   14000e599:	mov    BYTE PTR [rsp+0x20],bpl
   14000e59e:	lea    r8d,[rdx-0x20]
   14000e5a2:	call   QWORD PTR [rip+0x7cb8]        # 0x140016260
   14000e5a8:	mov    rdi,rax
   14000e5ab:	lea    rcx,[rax+0x18]
   14000e5af:	test   rcx,rcx
   14000e5b2:	je     0x14000e5bd
   14000e5b4:	mov    rdx,r12
   14000e5b7:	call   QWORD PTR [rip+0x7f83]        # 0x140016540
   14000e5bd:	lea    rcx,[rdi+0x20]
   14000e5c1:	test   rcx,rcx
   14000e5c4:	je     0x14000e5f4
   14000e5c6:	mov    QWORD PTR [rcx],rbx
   14000e5c9:	mov    eax,DWORD PTR [rbx+0x10]
   14000e5cc:	test   eax,eax
   14000e5ce:	je     0x14000e5da
   14000e5d0:	cmp    eax,0xffffffff
   14000e5d3:	je     0x14000e5da
   14000e5d5:	lock add DWORD PTR [rbx+0x10],0x1
   14000e5da:	mov    rax,QWORD PTR [rcx]
   14000e5dd:	test   BYTE PTR [rax+0x28],0x1
   14000e5e1:	jne    0x14000e5f4
   14000e5e3:	mov    eax,DWORD PTR [rax+0x10]
   14000e5e6:	cmp    eax,0x1
   14000e5e9:	je     0x14000e5f4
   14000e5eb:	test   eax,eax
   14000e5ed:	je     0x14000e5f4
   14000e5ef:	call   0x140002ae0
   14000e5f4:	mov    eax,DWORD PTR [rbx+0x10]
   14000e5f7:	mov    QWORD PTR [rsp+0x230],rdi
   14000e5ff:	add    rdi,0x20
   14000e603:	test   eax,eax
   14000e605:	je     0x14000e618
   14000e607:	cmp    eax,0xffffffff
   14000e60a:	je     0x14000e628
   14000e60c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000e611:	setne  al
   14000e614:	test   al,al
   14000e616:	jne    0x14000e628
   14000e618:	lea    rdx,[rip+0x5641]        # 0x140013c60
   14000e61f:	mov    rcx,rbx
   14000e622:	call   QWORD PTR [rip+0x7c70]        # 0x140016298
   14000e628:	mov    r14d,DWORD PTR [rsp+0x30]
   14000e62d:	lea    r9,[rsp+0x68]
   14000e632:	lea    r8,[rsp+0x48]
   14000e637:	lea    rdx,[rsp+0x2f0]
   14000e63f:	mov    rcx,rdi
   14000e642:	call   0x140003f80
   14000e647:	mov    r12,QWORD PTR [rsp+0x360]
   14000e64f:	dec    DWORD PTR [rsp+0x88]
   14000e656:	mov    rdi,QWORD PTR [rsp+0x370]
   14000e65e:	test   r14b,0x8
   14000e662:	je     0x14000dd70
   14000e668:	mov    rax,QWORD PTR [rsp+0x170]
   14000e670:	and    r14d,0xfffffff7
   14000e674:	mov    ecx,DWORD PTR [rax]
   14000e676:	mov    DWORD PTR [rsp+0x30],r14d
   14000e67b:	test   ecx,ecx
   14000e67d:	je     0x14000e697
   14000e67f:	cmp    ecx,0xffffffff
   14000e682:	je     0x14000dd70
   14000e688:	lock add DWORD PTR [rax],0xffffffff
   14000e68c:	setne  al
   14000e68f:	test   al,al
   14000e691:	jne    0x14000dd70
   14000e697:	mov    rcx,QWORD PTR [rsp+0x170]
   14000e69f:	call   QWORD PTR [rip+0x7c03]        # 0x1400162a8
   14000e6a5:	mov    rdi,QWORD PTR [rsp+0x370]
   14000e6ad:	jmp    0x14000dd70
   14000e6b2:	add    QWORD PTR [rsp+0x90],0x8
   14000e6bb:	test   r14b,0x1
   14000e6bf:	je     0x14000dcb0
   14000e6c5:	mov    rcx,QWORD PTR [rsp+0x260]
   14000e6cd:	and    r14d,0xfffffffe
   14000e6d1:	mov    eax,DWORD PTR [rcx]
   14000e6d3:	mov    DWORD PTR [rsp+0x30],r14d
   14000e6d8:	test   eax,eax
   14000e6da:	je     0x14000dc9c
   14000e6e0:	cmp    eax,0xffffffff
   14000e6e3:	je     0x14000dcb0
   14000e6e9:	lock add DWORD PTR [rcx],0xffffffff
   14000e6ed:	setne  al
   14000e6f0:	test   al,al
   14000e6f2:	jne    0x14000dcb0
   14000e6f8:	mov    rcx,QWORD PTR [rsp+0x260]
   14000e700:	jmp    0x14000dc9c
   14000e705:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e70d:	mov    eax,DWORD PTR [rcx]
   14000e70f:	test   eax,eax
   14000e711:	je     0x14000e72b
   14000e713:	cmp    eax,0xffffffff
   14000e716:	je     0x14000e731
   14000e718:	lock add DWORD PTR [rcx],0xffffffff
   14000e71c:	setne  al
   14000e71f:	test   al,al
   14000e721:	jne    0x14000e731
   14000e723:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e72b:	call   QWORD PTR [rip+0x7b77]        # 0x1400162a8
   14000e731:	mov    rcx,QWORD PTR [rip+0x7ae8]        # 0x140016220
   14000e738:	mov    rax,QWORD PTR [rsp+0x50]
   14000e73d:	mov    QWORD PTR [rsp+0x40],rcx
   14000e742:	mov    edx,DWORD PTR [rax+0x14]
   14000e745:	cmp    DWORD PTR [rcx+0x4],edx
   14000e748:	jge    0x14000e76c
   14000e74a:	mov    eax,DWORD PTR [rcx]
   14000e74c:	cmp    eax,0x1
   14000e74f:	je     0x14000e761
   14000e751:	test   eax,eax
   14000e753:	je     0x14000e761
   14000e755:	lea    rcx,[rsp+0x40]
   14000e75a:	call   0x140003590
   14000e75f:	jmp    0x14000e76c
   14000e761:	lea    rcx,[rsp+0x40]
   14000e766:	call   QWORD PTR [rip+0x7c34]        # 0x1400163a0
   14000e76c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000e771:	call   QWORD PTR [rip+0x7e09]        # 0x140016580
   14000e777:	mov    rbx,rax
   14000e77a:	cmp    rax,QWORD PTR [rsp+0x50]
   14000e77f:	je     0x14000e7f5
   14000e781:	mov    rax,QWORD PTR [rsp+0x40]
   14000e786:	mov    ecx,DWORD PTR [rax]
   14000e788:	cmp    ecx,0x1
   14000e78b:	je     0x14000e7ba
   14000e78d:	test   ecx,ecx
   14000e78f:	je     0x14000e7ba
   14000e791:	lea    rcx,[rsp+0x40]
   14000e796:	mov    edx,0x7fffffff
   14000e79b:	mov    r8d,0x1
   14000e7a1:	call   0x140003450
   14000e7a6:	test   rax,rax
   14000e7a9:	je     0x14000e7e2
   14000e7ab:	lea    rdx,[rbx+0x10]
   14000e7af:	mov    rcx,rax
   14000e7b2:	call   QWORD PTR [rip+0x7ad8]        # 0x140016290
   14000e7b8:	jmp    0x14000e7e2
   14000e7ba:	lea    rdx,[rbx+0x10]
   14000e7be:	lea    rcx,[rsp+0x180]
   14000e7c6:	call   QWORD PTR [rip+0x7ac4]        # 0x140016290
   14000e7cc:	lea    rcx,[rsp+0x40]
   14000e7d1:	call   QWORD PTR [rip+0x7ba9]        # 0x140016380
   14000e7d7:	mov    rcx,QWORD PTR [rsp+0x180]
   14000e7df:	mov    QWORD PTR [rax],rcx
   14000e7e2:	mov    rcx,rbx
   14000e7e5:	call   QWORD PTR [rip+0x7a4d]        # 0x140016238
   14000e7eb:	mov    rbx,rax
   14000e7ee:	cmp    rax,QWORD PTR [rsp+0x50]
   14000e7f3:	jne    0x14000e781
   14000e7f5:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e7fa:	mov    rdx,rdi
   14000e7fd:	mov    QWORD PTR [rsp+0xa8],rdx
   14000e805:	mov    eax,DWORD PTR [rdi]
   14000e807:	test   eax,eax
   14000e809:	je     0x14000e816
   14000e80b:	cmp    eax,0xffffffff
   14000e80e:	je     0x14000e87f
   14000e810:	lock add DWORD PTR [rdi],0x1
   14000e814:	jmp    0x14000e872
   14000e816:	mov    edx,DWORD PTR [rdi+0x4]
   14000e819:	lea    rcx,[rsp+0xa8]
   14000e821:	call   QWORD PTR [rip+0x7af9]        # 0x140016320
   14000e827:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000e82f:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e834:	movsxd rax,DWORD PTR [rdi+0x8]
   14000e838:	lea    rsi,[rdi+rax*8+0x10]
   14000e83d:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e841:	lea    rbp,[rdx+rax*8+0x10]
   14000e846:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e84a:	lea    rbx,[rdx+rax*8+0x10]
   14000e84f:	cmp    rbx,rbp
   14000e852:	je     0x14000e87f
   14000e854:	test   rbx,rbx
   14000e857:	je     0x14000e865
   14000e859:	mov    rdx,rsi
   14000e85c:	mov    rcx,rbx
   14000e85f:	call   QWORD PTR [rip+0x7a2b]        # 0x140016290
   14000e865:	add    rbx,0x8
   14000e869:	add    rsi,0x8
   14000e86d:	cmp    rbx,rbp
   14000e870:	jne    0x14000e854
   14000e872:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000e87a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e87f:	mov    DWORD PTR [rsp+0xb0],0x0
   14000e88a:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e88e:	lea    rcx,[rdx+rax*8+0x10]
   14000e893:	mov    QWORD PTR [rsp+0xb8],rcx
   14000e89b:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e89f:	lea    rcx,[rdx+rax*8+0x10]
   14000e8a4:	mov    QWORD PTR [rsp+0xc0],rcx
   14000e8ac:	mov    eax,DWORD PTR [rdi]
   14000e8ae:	test   eax,eax
   14000e8b0:	je     0x14000e8c7
   14000e8b2:	cmp    eax,0xffffffff
   14000e8b5:	je     0x14000e900
   14000e8b7:	lock add DWORD PTR [rdi],0xffffffff
   14000e8bb:	setne  al
   14000e8be:	test   al,al
   14000e8c0:	jne    0x14000e900
   14000e8c2:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e8c7:	movsxd rax,DWORD PTR [rdi+0xc]
   14000e8cb:	lea    rbx,[rdi+rax*8+0x10]
   14000e8d0:	movsxd rax,DWORD PTR [rdi+0x8]
   14000e8d4:	lea    rsi,[rdi+rax*8+0x10]
   14000e8d9:	cmp    rsi,rbx
   14000e8dc:	je     0x14000e8f2
   14000e8de:	xchg   ax,ax
   14000e8e0:	sub    rbx,0x8
   14000e8e4:	mov    rcx,rbx
   14000e8e7:	call   QWORD PTR [rip+0x798b]        # 0x140016278
   14000e8ed:	cmp    rbx,rsi
   14000e8f0:	jne    0x14000e8e0
   14000e8f2:	mov    rcx,rdi
   14000e8f5:	call   QWORD PTR [rip+0x79ad]        # 0x1400162a8
   14000e8fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e900:	mov    eax,DWORD PTR [rsp+0xb0]
   14000e907:	inc    DWORD PTR [rsp+0xb0]
   14000e90e:	test   eax,eax
   14000e910:	jne    0x14000e929
   14000e912:	mov    rax,QWORD PTR [rsp+0xc0]
   14000e91a:	cmp    QWORD PTR [rsp+0xb8],rax
   14000e922:	je     0x14000e929
   14000e924:	mov    bpl,0x1
   14000e927:	jmp    0x14000e92c
   14000e929:	xor    bpl,bpl
   14000e92c:	test   r14b,0x40
   14000e930:	je     0x14000e99b
   14000e932:	mov    rdi,QWORD PTR [rsp+0x240]
   14000e93a:	and    r14d,0xffffffbf
   14000e93e:	mov    eax,DWORD PTR [rdi]
   14000e940:	mov    DWORD PTR [rsp+0x30],r14d
   14000e945:	test   eax,eax
   14000e947:	je     0x14000e967
   14000e949:	cmp    eax,0xffffffff
   14000e94c:	je     0x14000e99b
   14000e94e:	mov    eax,r13d
   14000e951:	lock xadd DWORD PTR [rdi],eax
   14000e955:	add    eax,0xffffffff
   14000e958:	setne  al
   14000e95b:	test   al,al
   14000e95d:	jne    0x14000e99b
   14000e95f:	mov    rdi,QWORD PTR [rsp+0x240]
   14000e967:	movsxd rax,DWORD PTR [rdi+0xc]
   14000e96b:	lea    rbx,[rdi+rax*8+0x10]
   14000e970:	movsxd rax,DWORD PTR [rdi+0x8]
   14000e974:	lea    rsi,[rdi+rax*8+0x10]
   14000e979:	cmp    rsi,rbx
   14000e97c:	je     0x14000e992
   14000e97e:	xchg   ax,ax
   14000e980:	sub    rbx,0x8
   14000e984:	mov    rcx,rbx
   14000e987:	call   QWORD PTR [rip+0x78eb]        # 0x140016278
   14000e98d:	cmp    rbx,rsi
   14000e990:	jne    0x14000e980
   14000e992:	mov    rcx,rdi
   14000e995:	call   QWORD PTR [rip+0x790d]        # 0x1400162a8
   14000e99b:	test   bpl,bpl
   14000e99e:	je     0x14000f309
   14000e9a4:	mov    r12,QWORD PTR [rsp+0xb8]
   14000e9ac:	mov    QWORD PTR [rsp+0x280],r12
   14000e9b4:	test   r14b,r14b
   14000e9b7:	jns    0x14000ea30
   14000e9b9:	mov    rdi,QWORD PTR [rsp+0x190]
   14000e9c1:	btr    r14d,0x7
   14000e9c6:	mov    eax,DWORD PTR [rdi]
   14000e9c8:	mov    DWORD PTR [rsp+0x30],r14d
   14000e9cd:	test   eax,eax
   14000e9cf:	je     0x14000e9ef
   14000e9d1:	cmp    eax,0xffffffff
   14000e9d4:	je     0x14000ea30
   14000e9d6:	mov    eax,r13d
   14000e9d9:	lock xadd DWORD PTR [rdi],eax
   14000e9dd:	add    eax,0xffffffff
   14000e9e0:	setne  al
   14000e9e3:	test   al,al
   14000e9e5:	jne    0x14000ea30
   14000e9e7:	mov    rdi,QWORD PTR [rsp+0x190]
   14000e9ef:	movsxd rax,DWORD PTR [rdi+0xc]
   14000e9f3:	lea    rbx,[rdi+rax*8+0x10]
   14000e9f8:	movsxd rax,DWORD PTR [rdi+0x8]
   14000e9fc:	lea    rsi,[rdi+rax*8+0x10]
   14000ea01:	cmp    rsi,rbx
   14000ea04:	je     0x14000ea22
   14000ea06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ea10:	sub    rbx,0x8
   14000ea14:	mov    rcx,rbx
   14000ea17:	call   QWORD PTR [rip+0x785b]        # 0x140016278
   14000ea1d:	cmp    rbx,rsi
   14000ea20:	jne    0x14000ea10
   14000ea22:	mov    rcx,rdi
   14000ea25:	call   QWORD PTR [rip+0x787d]        # 0x1400162a8
   14000ea2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ea30:	bt     r14d,0x9
   14000ea35:	mov    ebp,DWORD PTR [rsp+0xb0]
   14000ea3c:	jae    0x14000eaab
   14000ea3e:	mov    rdi,QWORD PTR [rsp+0x270]
   14000ea46:	btr    r14d,0x9
   14000ea4b:	mov    eax,DWORD PTR [rdi]
   14000ea4d:	mov    DWORD PTR [rsp+0x30],r14d
   14000ea52:	test   eax,eax
   14000ea54:	je     0x14000ea6c
   14000ea56:	cmp    eax,0xffffffff
   14000ea59:	je     0x14000eaab
   14000ea5b:	mov    eax,r13d
   14000ea5e:	lock xadd DWORD PTR [rdi],eax
   14000ea62:	add    eax,0xffffffff
   14000ea65:	setne  al
   14000ea68:	test   al,al
   14000ea6a:	jne    0x14000eaab
   14000ea6c:	mov    rdi,QWORD PTR [rsp+0x270]
   14000ea74:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ea78:	lea    rbx,[rdi+rax*8+0x10]
   14000ea7d:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ea81:	lea    rsi,[rdi+rax*8+0x10]
   14000ea86:	cmp    rsi,rbx
   14000ea89:	je     0x14000eaa2
   14000ea8b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ea90:	sub    rbx,0x8
   14000ea94:	mov    rcx,rbx
   14000ea97:	call   QWORD PTR [rip+0x77db]        # 0x140016278
   14000ea9d:	cmp    rbx,rsi
   14000eaa0:	jne    0x14000ea90
   14000eaa2:	mov    rcx,rdi
   14000eaa5:	call   QWORD PTR [rip+0x77fd]        # 0x1400162a8
   14000eaab:	test   ebp,ebp
   14000eaad:	je     0x14000f287
   14000eab3:	mov    rax,QWORD PTR [rip+0xe616]        # 0x14001d0d0
   14000eaba:	cmp    DWORD PTR [rax+0x14],0x0
   14000eabe:	je     0x14000eb7d
   14000eac4:	xor    r8d,r8d
   14000eac7:	cmp    DWORD PTR [rax+0x20],r8d
   14000eacb:	je     0x14000eadc
   14000eacd:	mov    edx,DWORD PTR [rax+0x24]
   14000ead0:	mov    rcx,r12
   14000ead3:	call   QWORD PTR [rip+0x7807]        # 0x1400162e0
   14000ead9:	mov    r8d,eax
   14000eadc:	lea    rcx,[rip+0xe5ed]        # 0x14001d0d0
   14000eae3:	mov    rdx,r12
   14000eae6:	call   0x140001e30
   14000eaeb:	mov    rdi,QWORD PTR [rax]
   14000eaee:	cmp    rdi,QWORD PTR [rip+0xe5db]        # 0x14001d0d0
   14000eaf5:	je     0x14000eb7d
   14000eafb:	mov    rdi,QWORD PTR [rdi+0x18]
   14000eaff:	mov    eax,DWORD PTR [rdi+0x10]
   14000eb02:	test   eax,eax
   14000eb04:	je     0x14000eb10
   14000eb06:	cmp    eax,0xffffffff
   14000eb09:	je     0x14000eb10
   14000eb0b:	lock add DWORD PTR [rdi+0x10],0x1
   14000eb10:	test   BYTE PTR [rdi+0x28],0x1
   14000eb14:	jne    0x14000eb84
   14000eb16:	mov    eax,DWORD PTR [rdi+0x10]
   14000eb19:	cmp    eax,0x1
   14000eb1c:	je     0x14000eb84
   14000eb1e:	test   eax,eax
   14000eb20:	je     0x14000eb84
   14000eb22:	lea    r8,[rip+0x5137]        # 0x140013c60
   14000eb29:	lea    rdx,[rip+0xffffffffffff3140]        # 0x140001c70
   14000eb30:	mov    r9d,0x18
   14000eb36:	mov    rcx,rdi
   14000eb39:	mov    DWORD PTR [rsp+0x20],0x8
   14000eb41:	call   QWORD PTR [rip+0x77e1]        # 0x140016328
   14000eb47:	mov    ecx,DWORD PTR [rdi+0x10]
   14000eb4a:	mov    rbx,rax
   14000eb4d:	test   ecx,ecx
   14000eb4f:	je     0x14000eb68
   14000eb51:	cmp    ecx,0xffffffff
   14000eb54:	je     0x14000eb78
   14000eb56:	mov    ecx,r13d
   14000eb59:	lock xadd DWORD PTR [rdi+0x10],ecx
   14000eb5e:	add    ecx,0xffffffff
   14000eb61:	setne  cl
   14000eb64:	test   cl,cl
   14000eb66:	jne    0x14000eb78
   14000eb68:	lea    rdx,[rip+0x50f1]        # 0x140013c60
   14000eb6f:	mov    rcx,rdi
   14000eb72:	call   QWORD PTR [rip+0x7720]        # 0x140016298
   14000eb78:	mov    rdi,rbx
   14000eb7b:	jmp    0x14000eb84
   14000eb7d:	mov    rdi,QWORD PTR [rip+0x76a4]        # 0x140016228
   14000eb84:	lea    rdx,[rsp+0xa0]
   14000eb8c:	lea    rcx,[rsp+0x50]
   14000eb91:	mov    r8,r12
   14000eb94:	call   0x140009620
   14000eb99:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000eba1:	mov    eax,DWORD PTR [rbx+0x10]
   14000eba4:	lea    rbp,[rbx+0x10]
   14000eba8:	mov    rsi,rbx
   14000ebab:	mov    QWORD PTR [rsp+0x130],rbx
   14000ebb3:	mov    QWORD PTR [rsp+0x1b0],rbp
   14000ebbb:	test   eax,eax
   14000ebbd:	je     0x14000ebd9
   14000ebbf:	cmp    eax,0xffffffff
   14000ebc2:	je     0x14000ebd9
   14000ebc4:	lock add DWORD PTR [rbp+0x0],0x1
   14000ebc9:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000ebd1:	mov    rsi,QWORD PTR [rsp+0x130]
   14000ebd9:	test   BYTE PTR [rbx+0x28],0x1
   14000ebdd:	jne    0x14000ec51
   14000ebdf:	mov    eax,DWORD PTR [rbp+0x0]
   14000ebe2:	cmp    eax,0x1
   14000ebe5:	je     0x14000ec51
   14000ebe7:	test   eax,eax
   14000ebe9:	je     0x14000ec51
   14000ebeb:	lea    r8,[rip+0xffffffffffff372e]        # 0x140002320
   14000ebf2:	lea    rdx,[rip+0xffffffffffff2867]        # 0x140001460
   14000ebf9:	mov    r9d,0x18
   14000ebff:	mov    rcx,rbx
   14000ec02:	mov    DWORD PTR [rsp+0x20],0x8
   14000ec0a:	call   QWORD PTR [rip+0x7718]        # 0x140016328
   14000ec10:	mov    rsi,rax
   14000ec13:	mov    eax,DWORD PTR [rbp+0x0]
   14000ec16:	test   eax,eax
   14000ec18:	je     0x14000ec39
   14000ec1a:	cmp    eax,0xffffffff
   14000ec1d:	je     0x14000ec49
   14000ec1f:	mov    eax,r13d
   14000ec22:	lock xadd DWORD PTR [rbp+0x0],eax
   14000ec27:	add    eax,0xffffffff
   14000ec2a:	setne  al
   14000ec2d:	test   al,al
   14000ec2f:	jne    0x14000ec49
   14000ec31:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000ec39:	lea    rdx,[rip+0xffffffffffff36e0]        # 0x140002320
   14000ec40:	mov    rcx,rbx
   14000ec43:	call   QWORD PTR [rip+0x764f]        # 0x140016298
   14000ec49:	mov    QWORD PTR [rsp+0x130],rsi
   14000ec51:	mov    rcx,rsi
   14000ec54:	call   QWORD PTR [rip+0x7926]        # 0x140016580
   14000ec5a:	mov    ecx,0x1
   14000ec5f:	mov    QWORD PTR [rsp+0x140],rax
   14000ec67:	mov    DWORD PTR [rsp+0x138],ecx
   14000ec6e:	cmp    rax,rsi
   14000ec71:	je     0x14000f0e6
   14000ec77:	add    rax,0x10
   14000ec7b:	mov    QWORD PTR [rsp+0x1a0],rax
   14000ec83:	test   ecx,ecx
   14000ec85:	je     0x14000f0cb
   14000ec8b:	lea    rdx,[rsp+0x78]
   14000ec90:	lea    rcx,[rip+0xe439]        # 0x14001d0d0
   14000ec97:	mov    r8,rax
   14000ec9a:	call   0x1400088f0
   14000ec9f:	mov    eax,DWORD PTR [rdi+0x10]
   14000eca2:	mov    r11,QWORD PTR [rip+0x757f]        # 0x140016228
   14000eca9:	mov    rbx,rdi
   14000ecac:	mov    QWORD PTR [rsp+0x58],r11
   14000ecb1:	mov    QWORD PTR [rsp+0x110],rbx
   14000ecb9:	test   eax,eax
   14000ecbb:	je     0x14000eccf
   14000ecbd:	cmp    eax,0xffffffff
   14000ecc0:	je     0x14000eccf
   14000ecc2:	lock add DWORD PTR [rdi+0x10],0x1
   14000ecc7:	mov    rbx,QWORD PTR [rsp+0x110]
   14000eccf:	test   BYTE PTR [rdi+0x28],0x1
   14000ecd3:	jne    0x14000ed3f
   14000ecd5:	mov    eax,DWORD PTR [rdi+0x10]
   14000ecd8:	cmp    eax,0x1
   14000ecdb:	je     0x14000ed3f
   14000ecdd:	test   eax,eax
   14000ecdf:	je     0x14000ed3f
   14000ece1:	lea    r8,[rip+0x4f78]        # 0x140013c60
   14000ece8:	lea    rdx,[rip+0xffffffffffff2f81]        # 0x140001c70
   14000ecef:	mov    r9d,0x18
   14000ecf5:	mov    rcx,rdi
   14000ecf8:	mov    DWORD PTR [rsp+0x20],0x8
   14000ed00:	call   QWORD PTR [rip+0x7622]        # 0x140016328
   14000ed06:	mov    rbx,rax
   14000ed09:	mov    eax,DWORD PTR [rdi+0x10]
   14000ed0c:	test   eax,eax
   14000ed0e:	je     0x14000ed27
   14000ed10:	cmp    eax,0xffffffff
   14000ed13:	je     0x14000ed37
   14000ed15:	mov    eax,r13d
   14000ed18:	lock xadd DWORD PTR [rdi+0x10],eax
   14000ed1d:	add    eax,0xffffffff
   14000ed20:	setne  al
   14000ed23:	test   al,al
   14000ed25:	jne    0x14000ed37
   14000ed27:	lea    rdx,[rip+0x4f32]        # 0x140013c60
   14000ed2e:	mov    rcx,rdi
   14000ed31:	call   QWORD PTR [rip+0x7561]        # 0x140016298
   14000ed37:	mov    QWORD PTR [rsp+0x110],rbx
   14000ed3f:	mov    rcx,rbx
   14000ed42:	call   QWORD PTR [rip+0x7838]        # 0x140016580
   14000ed48:	mov    QWORD PTR [rsp+0x120],rax
   14000ed50:	mov    DWORD PTR [rsp+0x118],0x1
   14000ed5b:	cmp    rax,rbx
   14000ed5e:	je     0x14000ef54
   14000ed64:	mov    rax,QWORD PTR [rax+0x10]
   14000ed68:	mov    QWORD PTR [rsp+0xf8],rax
   14000ed70:	cmp    DWORD PTR [rsp+0x118],0x0
   14000ed78:	je     0x14000ef39
   14000ed7e:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ed83:	xor    r15b,r15b
   14000ed86:	mov    eax,DWORD PTR [rcx+0x10]
   14000ed89:	lea    rbx,[rcx+0x10]
   14000ed8d:	mov    rsi,rcx
   14000ed90:	mov    QWORD PTR [rsp+0x2c8],rcx
   14000ed98:	test   eax,eax
   14000ed9a:	je     0x14000edad
   14000ed9c:	cmp    eax,0xffffffff
   14000ed9f:	je     0x14000edad
   14000eda1:	lock add DWORD PTR [rbx],0x1
   14000eda5:	mov    rsi,QWORD PTR [rsp+0x2c8]
   14000edad:	mov    rcx,QWORD PTR [rsp+0x78]
   14000edb2:	test   BYTE PTR [rcx+0x28],0x1
   14000edb6:	jne    0x14000ee1e
   14000edb8:	mov    eax,DWORD PTR [rbx]
   14000edba:	cmp    eax,0x1
   14000edbd:	je     0x14000ee1e
   14000edbf:	test   eax,eax
   14000edc1:	je     0x14000ee1e
   14000edc3:	lea    r8,[rip+0x4e96]        # 0x140013c60
   14000edca:	lea    rdx,[rip+0xffffffffffff2e9f]        # 0x140001c70
   14000edd1:	mov    r9d,0x18
   14000edd7:	mov    DWORD PTR [rsp+0x20],0x8
   14000eddf:	call   QWORD PTR [rip+0x7543]        # 0x140016328
   14000ede5:	mov    rsi,rax
   14000ede8:	mov    eax,DWORD PTR [rbx]
   14000edea:	test   eax,eax
   14000edec:	je     0x14000ee04
   14000edee:	cmp    eax,0xffffffff
   14000edf1:	je     0x14000ee16
   14000edf3:	mov    eax,r13d
   14000edf6:	lock xadd DWORD PTR [rbx],eax
   14000edfa:	add    eax,0xffffffff
   14000edfd:	setne  al
   14000ee00:	test   al,al
   14000ee02:	jne    0x14000ee16
   14000ee04:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ee09:	lea    rdx,[rip+0x4e50]        # 0x140013c60
   14000ee10:	call   QWORD PTR [rip+0x7482]        # 0x140016298
   14000ee16:	mov    QWORD PTR [rsp+0x2c8],rsi
   14000ee1e:	mov    rcx,rsi
   14000ee21:	xor    ebp,ebp
   14000ee23:	call   QWORD PTR [rip+0x7757]        # 0x140016580
   14000ee29:	mov    QWORD PTR [rsp+0x2d8],rax
   14000ee31:	mov    ecx,ebp
   14000ee33:	inc    ebp
   14000ee35:	mov    r12,rax
   14000ee38:	test   ecx,ecx
   14000ee3a:	jne    0x14000eec6
   14000ee40:	cmp    rax,rsi
   14000ee43:	je     0x14000eec6
   14000ee49:	mov    r13,QWORD PTR [rax+0x10]
   14000ee4d:	nop    DWORD PTR [rax]
   14000ee50:	test   ebp,ebp
   14000ee52:	je     0x14000eeb8
   14000ee54:	mov    rcx,r13
   14000ee57:	call   QWORD PTR [rip+0x7bd3]        # 0x140016a30
   14000ee5d:	mov    r14,QWORD PTR [rsp+0xf8]
   14000ee65:	mov    rcx,r14
   14000ee68:	mov    rbx,rax
   14000ee6b:	call   QWORD PTR [rip+0x7bbf]        # 0x140016a30
   14000ee71:	mov    rdx,rbx
   14000ee74:	mov    rcx,rax
   14000ee77:	call   QWORD PTR [rip+0x7ac3]        # 0x140016940
   14000ee7d:	test   al,al
   14000ee7f:	je     0x14000eeb1
   14000ee81:	mov    rcx,r13
   14000ee84:	call   QWORD PTR [rip+0x7bb6]        # 0x140016a40
   14000ee8a:	mov    rcx,r14
   14000ee8d:	mov    ebx,eax
   14000ee8f:	call   QWORD PTR [rip+0x7bab]        # 0x140016a40
   14000ee95:	cmp    eax,ebx
   14000ee97:	jne    0x14000eeb1
   14000ee99:	mov    rcx,r13
   14000ee9c:	call   QWORD PTR [rip+0x7b96]        # 0x140016a38
   14000eea2:	mov    rcx,r14
   14000eea5:	mov    ebx,eax
   14000eea7:	call   QWORD PTR [rip+0x7b8b]        # 0x140016a38
   14000eead:	cmp    eax,ebx
   14000eeaf:	je     0x14000eeb5
   14000eeb1:	dec    ebp
   14000eeb3:	jmp    0x14000ee50
   14000eeb5:	mov    r15b,0x1
   14000eeb8:	mov    rcx,r12
   14000eebb:	call   QWORD PTR [rip+0x7377]        # 0x140016238
   14000eec1:	jmp    0x14000ee31
   14000eec6:	mov    eax,DWORD PTR [rsi+0x10]
   14000eec9:	or     r13d,0xffffffff
   14000eecd:	mov    DWORD PTR [rsp+0x2d0],ebp
   14000eed4:	mov    QWORD PTR [rsp+0x2d8],r12
   14000eedc:	test   eax,eax
   14000eede:	je     0x14000eef9
   14000eee0:	cmp    eax,r13d
   14000eee3:	je     0x14000ef09
   14000eee5:	lock add DWORD PTR [rsi+0x10],r13d
   14000eeea:	setne  al
   14000eeed:	test   al,al
   14000eeef:	jne    0x14000ef09
   14000eef1:	mov    rsi,QWORD PTR [rsp+0x2c8]
   14000eef9:	lea    rdx,[rip+0x4d60]        # 0x140013c60
   14000ef00:	mov    rcx,rsi
   14000ef03:	call   QWORD PTR [rip+0x738f]        # 0x140016298
   14000ef09:	test   r15b,r15b
   14000ef0c:	jne    0x14000ef2d
   14000ef0e:	lea    r9,[rsp+0x6c]
   14000ef13:	lea    r8,[rsp+0xf8]
   14000ef1b:	lea    rdx,[rsp+0x300]
   14000ef23:	lea    rcx,[rsp+0x58]
   14000ef28:	call   0x140003f80
   14000ef2d:	dec    DWORD PTR [rsp+0x118]
   14000ef34:	jmp    0x14000ed70
   14000ef39:	mov    rcx,QWORD PTR [rsp+0x120]
   14000ef41:	call   QWORD PTR [rip+0x72f1]        # 0x140016238
   14000ef47:	mov    rbx,QWORD PTR [rsp+0x110]
   14000ef4f:	jmp    0x14000ed48
   14000ef54:	mov    eax,DWORD PTR [rbx+0x10]
   14000ef57:	test   eax,eax
   14000ef59:	je     0x14000ef7a
   14000ef5b:	cmp    eax,0xffffffff
   14000ef5e:	je     0x14000ef8a
   14000ef60:	mov    eax,r13d
   14000ef63:	lock xadd DWORD PTR [rbx+0x10],eax
   14000ef68:	add    eax,0xffffffff
   14000ef6b:	setne  al
   14000ef6e:	test   al,al
   14000ef70:	jne    0x14000ef8a
   14000ef72:	mov    rbx,QWORD PTR [rsp+0x110]
   14000ef7a:	lea    rdx,[rip+0x4cdf]        # 0x140013c60
   14000ef81:	mov    rcx,rbx
   14000ef84:	call   QWORD PTR [rip+0x730e]        # 0x140016298
   14000ef8a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000ef8f:	cmp    rdi,rbx
   14000ef92:	je     0x14000f046
   14000ef98:	mov    eax,DWORD PTR [rbx+0x10]
   14000ef9b:	lea    rsi,[rbx+0x10]
   14000ef9f:	test   eax,eax
   14000efa1:	je     0x14000efb1
   14000efa3:	cmp    eax,0xffffffff
   14000efa6:	je     0x14000efb1
   14000efa8:	lock add DWORD PTR [rsi],0x1
   14000efac:	mov    rbx,QWORD PTR [rsp+0x58]
   14000efb1:	mov    eax,DWORD PTR [rdi+0x10]
   14000efb4:	test   eax,eax
   14000efb6:	je     0x14000efd4
   14000efb8:	cmp    eax,0xffffffff
   14000efbb:	je     0x14000efe4
   14000efbd:	mov    eax,r13d
   14000efc0:	lock xadd DWORD PTR [rdi+0x10],eax
   14000efc5:	mov    rbx,QWORD PTR [rsp+0x58]
   14000efca:	add    eax,0xffffffff
   14000efcd:	setne  al
   14000efd0:	test   al,al
   14000efd2:	jne    0x14000efe4
   14000efd4:	lea    rdx,[rip+0x4c85]        # 0x140013c60
   14000efdb:	mov    rcx,rdi
   14000efde:	call   QWORD PTR [rip+0x72b4]        # 0x140016298
   14000efe4:	test   BYTE PTR [rbx+0x28],0x1
   14000efe8:	mov    rdi,rbx
   14000efeb:	jne    0x14000f046
   14000efed:	lea    r8,[rip+0x4c6c]        # 0x140013c60
   14000eff4:	lea    rdx,[rip+0xffffffffffff2c75]        # 0x140001c70
   14000effb:	mov    r9d,0x18
   14000f001:	mov    rcx,rbx
   14000f004:	mov    DWORD PTR [rsp+0x20],0x8
   14000f00c:	call   QWORD PTR [rip+0x7316]        # 0x140016328
   14000f012:	mov    rdi,rax
   14000f015:	mov    eax,DWORD PTR [rsi]
   14000f017:	test   eax,eax
   14000f019:	je     0x14000f036
   14000f01b:	cmp    eax,0xffffffff
   14000f01e:	je     0x14000f046
   14000f020:	mov    eax,r13d
   14000f023:	lock xadd DWORD PTR [rsi],eax
   14000f027:	mov    rbx,QWORD PTR [rsp+0x58]
   14000f02c:	add    eax,0xffffffff
   14000f02f:	setne  al
   14000f032:	test   al,al
   14000f034:	jne    0x14000f046
   14000f036:	lea    rdx,[rip+0x4c23]        # 0x140013c60
   14000f03d:	mov    rcx,rbx
   14000f040:	call   QWORD PTR [rip+0x7252]        # 0x140016298
   14000f046:	mov    eax,DWORD PTR [rbx+0x10]
   14000f049:	test   eax,eax
   14000f04b:	je     0x14000f069
   14000f04d:	cmp    eax,0xffffffff
   14000f050:	je     0x14000f079
   14000f052:	mov    eax,r13d
   14000f055:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f05a:	add    eax,0xffffffff
   14000f05d:	setne  al
   14000f060:	test   al,al
   14000f062:	jne    0x14000f079
   14000f064:	mov    rbx,QWORD PTR [rsp+0x58]
   14000f069:	lea    rdx,[rip+0x4bf0]        # 0x140013c60
   14000f070:	mov    rcx,rbx
   14000f073:	call   QWORD PTR [rip+0x721f]        # 0x140016298
   14000f079:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f07e:	mov    eax,DWORD PTR [rcx+0x10]
   14000f081:	test   eax,eax
   14000f083:	je     0x14000f09c
   14000f085:	cmp    eax,0xffffffff
   14000f088:	je     0x14000f0ae
   14000f08a:	mov    eax,r13d
   14000f08d:	lock xadd DWORD PTR [rcx+0x10],eax
   14000f092:	add    eax,0xffffffff
   14000f095:	setne  al
   14000f098:	test   al,al
   14000f09a:	jne    0x14000f0ae
   14000f09c:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f0a1:	lea    rdx,[rip+0x4bb8]        # 0x140013c60
   14000f0a8:	call   QWORD PTR [rip+0x71ea]        # 0x140016298
   14000f0ae:	mov    ecx,DWORD PTR [rsp+0x138]
   14000f0b5:	mov    rax,QWORD PTR [rsp+0x1a0]
   14000f0bd:	dec    ecx
   14000f0bf:	mov    DWORD PTR [rsp+0x138],ecx
   14000f0c6:	jmp    0x14000ec83
   14000f0cb:	mov    rcx,QWORD PTR [rsp+0x140]
   14000f0d3:	call   QWORD PTR [rip+0x715f]        # 0x140016238
   14000f0d9:	mov    rsi,QWORD PTR [rsp+0x130]
   14000f0e1:	jmp    0x14000ec5a
   14000f0e6:	mov    eax,DWORD PTR [rsi+0x10]
   14000f0e9:	test   eax,eax
   14000f0eb:	je     0x14000f10c
   14000f0ed:	cmp    eax,0xffffffff
   14000f0f0:	je     0x14000f11c
   14000f0f2:	mov    eax,r13d
   14000f0f5:	lock xadd DWORD PTR [rsi+0x10],eax
   14000f0fa:	add    eax,0xffffffff
   14000f0fd:	setne  al
   14000f100:	test   al,al
   14000f102:	jne    0x14000f11c
   14000f104:	mov    rsi,QWORD PTR [rsp+0x130]
   14000f10c:	lea    rdx,[rip+0xffffffffffff320d]        # 0x140002320
   14000f113:	mov    rcx,rsi
   14000f116:	call   QWORD PTR [rip+0x717c]        # 0x140016298
   14000f11c:	mov    r12,QWORD PTR [rsp+0x280]
   14000f124:	lea    rcx,[rip+0xdfa5]        # 0x14001d0d0
   14000f12b:	mov    rdx,r12
   14000f12e:	call   0x14000a700
   14000f133:	mov    rbx,rax
   14000f136:	cmp    QWORD PTR [rax],rdi
   14000f139:	je     0x14000f18e
   14000f13b:	mov    eax,DWORD PTR [rdi+0x10]
   14000f13e:	test   eax,eax
   14000f140:	je     0x14000f14c
   14000f142:	cmp    eax,0xffffffff
   14000f145:	je     0x14000f14c
   14000f147:	lock add DWORD PTR [rdi+0x10],0x1
   14000f14c:	mov    rcx,QWORD PTR [rbx]
   14000f14f:	mov    eax,DWORD PTR [rcx+0x10]
   14000f152:	test   eax,eax
   14000f154:	je     0x14000f16d
   14000f156:	cmp    eax,0xffffffff
   14000f159:	je     0x14000f17d
   14000f15b:	mov    eax,r13d
   14000f15e:	lock xadd DWORD PTR [rcx+0x10],eax
   14000f163:	add    eax,0xffffffff
   14000f166:	setne  al
   14000f169:	test   al,al
   14000f16b:	jne    0x14000f17d
   14000f16d:	mov    rcx,QWORD PTR [rbx]
   14000f170:	lea    rdx,[rip+0x4ae9]        # 0x140013c60
   14000f177:	call   QWORD PTR [rip+0x711b]        # 0x140016298
   14000f17d:	mov    QWORD PTR [rbx],rdi
   14000f180:	test   BYTE PTR [rdi+0x28],0x1
   14000f184:	jne    0x14000f18e
   14000f186:	mov    rcx,rbx
   14000f189:	call   0x140002ae0
   14000f18e:	mov    rbp,QWORD PTR [rsp+0x1b0]
   14000f196:	mov    eax,DWORD PTR [rbp+0x0]
   14000f199:	test   eax,eax
   14000f19b:	je     0x14000f1b4
   14000f19d:	cmp    eax,0xffffffff
   14000f1a0:	je     0x14000f1c9
   14000f1a2:	mov    eax,r13d
   14000f1a5:	lock xadd DWORD PTR [rbp+0x0],eax
   14000f1aa:	add    eax,0xffffffff
   14000f1ad:	setne  al
   14000f1b0:	test   al,al
   14000f1b2:	jne    0x14000f1c9
   14000f1b4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000f1bc:	lea    rdx,[rip+0xffffffffffff315d]        # 0x140002320
   14000f1c3:	call   QWORD PTR [rip+0x70cf]        # 0x140016298
   14000f1c9:	mov    eax,DWORD PTR [rdi+0x10]
   14000f1cc:	test   eax,eax
   14000f1ce:	je     0x14000f1e7
   14000f1d0:	cmp    eax,0xffffffff
   14000f1d3:	je     0x14000f1f7
   14000f1d5:	mov    eax,r13d
   14000f1d8:	lock xadd DWORD PTR [rdi+0x10],eax
   14000f1dd:	add    eax,0xffffffff
   14000f1e0:	setne  al
   14000f1e3:	test   al,al
   14000f1e5:	jne    0x14000f1f7
   14000f1e7:	lea    rdx,[rip+0x4a72]        # 0x140013c60
   14000f1ee:	mov    rcx,rdi
   14000f1f1:	call   QWORD PTR [rip+0x70a1]        # 0x140016298
   14000f1f7:	mov    r14d,DWORD PTR [rsp+0x30]
   14000f1fc:	dec    DWORD PTR [rsp+0xb0]
   14000f203:	bt     r14d,0x8
   14000f208:	jae    0x14000ea30
   14000f20e:	mov    rdi,QWORD PTR [rsp+0x250]
   14000f216:	btr    r14d,0x8
   14000f21b:	mov    eax,DWORD PTR [rdi]
   14000f21d:	mov    DWORD PTR [rsp+0x30],r14d
   14000f222:	test   eax,eax
   14000f224:	je     0x14000f24c
   14000f226:	cmp    eax,0xffffffff
   14000f229:	je     0x14000ea30
   14000f22f:	mov    eax,r13d
   14000f232:	lock xadd DWORD PTR [rdi],eax
   14000f236:	add    eax,0xffffffff
   14000f239:	setne  al
   14000f23c:	test   al,al
   14000f23e:	jne    0x14000ea30
   14000f244:	mov    rdi,QWORD PTR [rsp+0x250]
   14000f24c:	movsxd rax,DWORD PTR [rdi+0xc]
   14000f250:	lea    rbx,[rdi+rax*8+0x10]
   14000f255:	movsxd rax,DWORD PTR [rdi+0x8]
   14000f259:	lea    rsi,[rdi+rax*8+0x10]
   14000f25e:	cmp    rsi,rbx
   14000f261:	je     0x14000ea22
   14000f267:	nop    WORD PTR [rax+rax*1+0x0]
   14000f270:	sub    rbx,0x8
   14000f274:	mov    rcx,rbx
   14000f277:	call   QWORD PTR [rip+0x6ffb]        # 0x140016278
   14000f27d:	cmp    rbx,rsi
   14000f280:	jne    0x14000f270
   14000f282:	jmp    0x14000ea22
   14000f287:	add    QWORD PTR [rsp+0xb8],0x8
   14000f290:	test   r14b,0x20
   14000f294:	je     0x14000e900
   14000f29a:	mov    rdi,QWORD PTR [rsp+0x150]
   14000f2a2:	and    r14d,0xffffffdf
   14000f2a6:	mov    eax,DWORD PTR [rdi]
   14000f2a8:	mov    DWORD PTR [rsp+0x30],r14d
   14000f2ad:	test   eax,eax
   14000f2af:	je     0x14000f2d7
   14000f2b1:	cmp    eax,0xffffffff
   14000f2b4:	je     0x14000e900
   14000f2ba:	mov    eax,r13d
   14000f2bd:	lock xadd DWORD PTR [rdi],eax
   14000f2c1:	add    eax,0xffffffff
   14000f2c4:	setne  al
   14000f2c7:	test   al,al
   14000f2c9:	jne    0x14000e900
   14000f2cf:	mov    rdi,QWORD PTR [rsp+0x150]
   14000f2d7:	movsxd rax,DWORD PTR [rdi+0xc]
   14000f2db:	lea    rbx,[rdi+rax*8+0x10]
   14000f2e0:	movsxd rax,DWORD PTR [rdi+0x8]
   14000f2e4:	lea    rsi,[rdi+rax*8+0x10]
   14000f2e9:	cmp    rsi,rbx
   14000f2ec:	je     0x14000e8f2
   14000f2f2:	sub    rbx,0x8
   14000f2f6:	mov    rcx,rbx
   14000f2f9:	call   QWORD PTR [rip+0x6f79]        # 0x140016278
   14000f2ff:	cmp    rbx,rsi
   14000f302:	jne    0x14000f2f2
   14000f304:	jmp    0x14000e8f2
   14000f309:	lea    rcx,[rsp+0xa8]
   14000f311:	call   0x1400027e0
   14000f316:	cmp    BYTE PTR [rip+0xdceb],0x0        # 0x14001d008
   14000f31d:	je     0x14000fc4d
   14000f323:	lea    rcx,[rsp+0x100]
   14000f32b:	call   QWORD PTR [rip+0x7687]        # 0x1400169b8
   14000f331:	lea    rcx,[rsp+0xc8]
   14000f339:	mov    rdx,rax
   14000f33c:	call   0x140003010
   14000f341:	lea    rcx,[rsp+0xc8]
   14000f349:	mov    DWORD PTR [rsp+0xd0],0x0
   14000f354:	call   QWORD PTR [rip+0x731e]        # 0x140016678
   14000f35a:	lea    rcx,[rsp+0xc8]
   14000f362:	mov    QWORD PTR [rsp+0xd8],rax
   14000f36a:	call   QWORD PTR [rip+0x7300]        # 0x140016670
   14000f370:	mov    rcx,QWORD PTR [rsp+0x100]
   14000f378:	mov    QWORD PTR [rsp+0xe0],rax
   14000f380:	mov    eax,DWORD PTR [rcx]
   14000f382:	test   eax,eax
   14000f384:	je     0x14000f3a4
   14000f386:	cmp    eax,0xffffffff
   14000f389:	je     0x14000f3aa
   14000f38b:	mov    eax,r13d
   14000f38e:	lock xadd DWORD PTR [rcx],eax
   14000f392:	add    eax,0xffffffff
   14000f395:	setne  al
   14000f398:	test   al,al
   14000f39a:	jne    0x14000f3aa
   14000f39c:	mov    rcx,QWORD PTR [rsp+0x100]
   14000f3a4:	call   QWORD PTR [rip+0x6efe]        # 0x1400162a8
   14000f3aa:	mov    r12,QWORD PTR [rsp+0x380]
   14000f3b2:	mov    r15,QWORD PTR [rsp+0x360]
   14000f3ba:	nop    WORD PTR [rax+rax*1+0x0]
   14000f3c0:	mov    eax,DWORD PTR [rsp+0xd0]
   14000f3c7:	inc    DWORD PTR [rsp+0xd0]
   14000f3ce:	test   eax,eax
   14000f3d0:	jne    0x14000f3e8
   14000f3d2:	mov    rax,QWORD PTR [rsp+0xe0]
   14000f3da:	cmp    QWORD PTR [rsp+0xd8],rax
   14000f3e2:	je     0x14000f3e8
   14000f3e4:	mov    bl,0x1
   14000f3e6:	jmp    0x14000f3ea
   14000f3e8:	xor    bl,bl
   14000f3ea:	bt     r14d,0xb
   14000f3ef:	jae    0x14000f428
   14000f3f1:	mov    rcx,QWORD PTR [rsp+0x2a8]
   14000f3f9:	btr    r14d,0xb
   14000f3fe:	mov    eax,DWORD PTR [rcx]
   14000f400:	test   eax,eax
   14000f402:	je     0x14000f422
   14000f404:	cmp    eax,0xffffffff
   14000f407:	je     0x14000f428
   14000f409:	mov    eax,r13d
   14000f40c:	lock xadd DWORD PTR [rcx],eax
   14000f410:	add    eax,0xffffffff
   14000f413:	setne  al
   14000f416:	test   al,al
   14000f418:	jne    0x14000f428
   14000f41a:	mov    rcx,QWORD PTR [rsp+0x2a8]
   14000f422:	call   QWORD PTR [rip+0x6e80]        # 0x1400162a8
   14000f428:	test   bl,bl
   14000f42a:	je     0x14000fc1b
   14000f430:	bt     r14d,0xc
   14000f435:	mov    rax,QWORD PTR [rsp+0xd8]
   14000f43d:	mov    rsi,QWORD PTR [rax]
   14000f440:	jae    0x14000f480
   14000f442:	mov    rcx,QWORD PTR [rsp+0x1d0]
   14000f44a:	btr    r14d,0xc
   14000f44f:	mov    eax,DWORD PTR [rcx]
   14000f451:	test   eax,eax
   14000f453:	je     0x14000f473
   14000f455:	cmp    eax,0xffffffff
   14000f458:	je     0x14000f480
   14000f45a:	mov    eax,r13d
   14000f45d:	lock xadd DWORD PTR [rcx],eax
   14000f461:	add    eax,0xffffffff
   14000f464:	setne  al
   14000f467:	test   al,al
   14000f469:	jne    0x14000f480
   14000f46b:	mov    rcx,QWORD PTR [rsp+0x1d0]
   14000f473:	call   QWORD PTR [rip+0x6e2f]        # 0x1400162a8
   14000f479:	nop    DWORD PTR [rax+0x0]
   14000f480:	bt     r14d,0xe
   14000f485:	mov    ebx,DWORD PTR [rsp+0xd0]
   14000f48c:	jae    0x14000f4c5
   14000f48e:	mov    rax,QWORD PTR [rsp+0x268]
   14000f496:	btr    r14d,0xe
   14000f49b:	mov    ecx,DWORD PTR [rax]
   14000f49d:	test   ecx,ecx
   14000f49f:	je     0x14000f4b7
   14000f4a1:	cmp    ecx,0xffffffff
   14000f4a4:	je     0x14000f4c5
   14000f4a6:	mov    ecx,r13d
   14000f4a9:	lock xadd DWORD PTR [rax],ecx
   14000f4ad:	add    ecx,0xffffffff
   14000f4b0:	setne  al
   14000f4b3:	test   al,al
   14000f4b5:	jne    0x14000f4c5
   14000f4b7:	mov    rcx,QWORD PTR [rsp+0x268]
   14000f4bf:	call   QWORD PTR [rip+0x6de3]        # 0x1400162a8
   14000f4c5:	test   ebx,ebx
   14000f4c7:	je     0x14000fbc3
   14000f4cd:	mov    rcx,r12
   14000f4d0:	call   QWORD PTR [rip+0x71a2]        # 0x140016678
   14000f4d6:	mov    rcx,r12
   14000f4d9:	mov    rbx,rax
   14000f4dc:	call   QWORD PTR [rip+0x718e]        # 0x140016670
   14000f4e2:	cmp    rbx,rax
   14000f4e5:	je     0x14000f500
   14000f4e7:	cmp    QWORD PTR [rbx],rsi
   14000f4ea:	je     0x14000f4f7
   14000f4ec:	add    rbx,0x8
   14000f4f0:	cmp    rbx,rax
   14000f4f3:	jne    0x14000f4e7
   14000f4f5:	jmp    0x14000f500
   14000f4f7:	cmp    rbx,rax
   14000f4fa:	jne    0x14000fb73
   14000f500:	mov    rcx,rsi
   14000f503:	call   QWORD PTR [rip+0x7567]        # 0x140016a70
   14000f509:	test   al,al
   14000f50b:	jne    0x14000fb73
   14000f511:	mov    rcx,rsi
   14000f514:	call   QWORD PTR [rip+0x74a6]        # 0x1400169c0
   14000f51a:	test   al,al
   14000f51c:	je     0x14000fb73
   14000f522:	lea    rdx,[rsp+0x1e0]
   14000f52a:	mov    rcx,rsi
   14000f52d:	call   QWORD PTR [rip+0x7495]        # 0x1400169c8
   14000f533:	lea    rdx,[rip+0x7dce]        # 0x140017308
   14000f53a:	mov    rcx,rax
   14000f53d:	call   QWORD PTR [rip+0x7405]        # 0x140016948
   14000f543:	lea    rcx,[rsp+0x1e0]
   14000f54b:	test   eax,eax
   14000f54d:	sete   bl
   14000f550:	call   QWORD PTR [rip+0x6d22]        # 0x140016278
   14000f556:	test   bl,bl
   14000f558:	jne    0x14000fb73
   14000f55e:	mov    rcx,rsi
   14000f561:	call   QWORD PTR [rip+0x74c9]        # 0x140016a30
   14000f567:	lea    rcx,[rsp+0x38]
   14000f56c:	mov    rdx,rax
   14000f56f:	call   QWORD PTR [rip+0x6fcb]        # 0x140016540
   14000f575:	lea    rcx,[rsp+0xe8]
   14000f57d:	mov    dl,0x2f
   14000f57f:	call   QWORD PTR [rip+0x7393]        # 0x140016918
   14000f585:	lea    rcx,[rsp+0x38]
   14000f58a:	mov    r9d,0x1
   14000f590:	movzx  edx,WORD PTR [rax]
   14000f593:	mov    r8d,r13d
   14000f596:	call   QWORD PTR [rip+0x70cc]        # 0x140016668
   14000f59c:	lea    rdx,[rsp+0x298]
   14000f5a4:	lea    rcx,[rsp+0x38]
   14000f5a9:	lea    r8d,[rax+0x1]
   14000f5ad:	mov    r9d,r13d
   14000f5b0:	call   QWORD PTR [rip+0x70aa]        # 0x140016660
   14000f5b6:	lea    rcx,[rsp+0x38]
   14000f5bb:	mov    rdx,rax
   14000f5be:	call   QWORD PTR [rip+0x6c44]        # 0x140016208
   14000f5c4:	lea    rcx,[rsp+0x298]
   14000f5cc:	call   QWORD PTR [rip+0x7366]        # 0x140016938
   14000f5d2:	lea    rcx,[rsp+0x38]
   14000f5d7:	call   QWORD PTR [rip+0x707b]        # 0x140016658
   14000f5dd:	test   al,al
   14000f5df:	jne    0x14000fb68
   14000f5e5:	lea    rdx,[rsp+0x38]
   14000f5ea:	lea    rcx,[rip+0xdaff]        # 0x14001d0f0
   14000f5f1:	call   QWORD PTR [rip+0x6c11]        # 0x140016208
   14000f5f7:	mov    rcx,rsi
   14000f5fa:	call   QWORD PTR [rip+0x7448]        # 0x140016a48
   14000f600:	test   al,al
   14000f602:	je     0x14000f884
   14000f608:	mov    rcx,rsi
   14000f60b:	call   QWORD PTR [rip+0x73c7]        # 0x1400169d8
   14000f611:	mov    rbp,rax
   14000f614:	test   rax,rax
   14000f617:	jne    0x14000f73d
   14000f61d:	lea    rdx,[rsp+0x210]
   14000f625:	mov    rcx,rsi
   14000f628:	call   QWORD PTR [rip+0x739a]        # 0x1400169c8
   14000f62e:	lea    rcx,[rsp+0x2b8]
   14000f636:	mov    rdx,rax
   14000f639:	call   QWORD PTR [rip+0x7011]        # 0x140016650
   14000f63f:	lea    rdx,[rsp+0x200]
   14000f647:	mov    rcx,rax
   14000f64a:	call   QWORD PTR [rip+0x6c70]        # 0x1400162c0
   14000f650:	mov    rcx,rax
   14000f653:	call   QWORD PTR [rip+0x72f7]        # 0x140016950
   14000f659:	lea    rdx,[rsp+0x38]
   14000f65e:	lea    rcx,[rsp+0x278]
   14000f666:	mov    rdi,rax
   14000f669:	call   QWORD PTR [rip+0x6ed1]        # 0x140016540
   14000f66f:	lea    rdx,[rsp+0x1f0]
   14000f677:	mov    rcx,rax
   14000f67a:	call   QWORD PTR [rip+0x6c40]        # 0x1400162c0
   14000f680:	mov    rcx,rax
   14000f683:	call   QWORD PTR [rip+0x72c7]        # 0x140016950
   14000f689:	mov    rcx,QWORD PTR [rip+0x69c8]        # 0x140016058
   14000f690:	lea    rdx,[rip+0x7c59]        # 0x1400172f0
   14000f697:	mov    rbx,rax
   14000f69a:	call   0x1400016a0
   14000f69f:	mov    rdx,rbx
   14000f6a2:	mov    rcx,rax
   14000f6a5:	call   0x1400016a0
   14000f6aa:	lea    rdx,[rip+0x7c3b]        # 0x1400172ec
   14000f6b1:	mov    rcx,rax
   14000f6b4:	call   0x1400016a0
   14000f6b9:	mov    rdx,rdi
   14000f6bc:	mov    rcx,rax
   14000f6bf:	call   0x1400016a0
   14000f6c4:	lea    rdx,[rip+0x7c1d]        # 0x1400172e8
   14000f6cb:	mov    rcx,rax
   14000f6ce:	call   0x1400016a0
   14000f6d3:	lea    rdx,[rip+0x7bde]        # 0x1400172b8
   14000f6da:	mov    rcx,rax
   14000f6dd:	call   0x1400016a0
   14000f6e2:	mov    rdx,QWORD PTR [rip+0x6977]        # 0x140016060
   14000f6e9:	mov    rcx,rax
   14000f6ec:	call   QWORD PTR [rip+0x6976]        # 0x140016068
   14000f6f2:	lea    rcx,[rsp+0x1f0]
   14000f6fa:	call   QWORD PTR [rip+0x6b78]        # 0x140016278
   14000f700:	lea    rcx,[rsp+0x278]
   14000f708:	call   QWORD PTR [rip+0x722a]        # 0x140016938
   14000f70e:	lea    rcx,[rsp+0x200]
   14000f716:	call   QWORD PTR [rip+0x6b5c]        # 0x140016278
   14000f71c:	lea    rcx,[rsp+0x2b8]
   14000f724:	call   QWORD PTR [rip+0x720e]        # 0x140016938
   14000f72a:	lea    rcx,[rsp+0x210]
   14000f732:	call   QWORD PTR [rip+0x6b40]        # 0x140016278
   14000f738:	jmp    0x14000fb68
   14000f73d:	cmp    QWORD PTR [rax+0x8],0x0
   14000f742:	je     0x14000f872
   14000f748:	cmp    BYTE PTR [rip+0xd971],0x0        # 0x14001d0c0
   14000f74f:	je     0x14000f843
   14000f755:	lea    rdx,[rax+0x18]
   14000f759:	lea    rcx,[rsp+0x158]
   14000f761:	call   QWORD PTR [rip+0x6dd9]        # 0x140016540
   14000f767:	lea    rdx,[rsp+0x248]
   14000f76f:	mov    rcx,rax
   14000f772:	call   QWORD PTR [rip+0x6b48]        # 0x1400162c0
   14000f778:	mov    rcx,rax
   14000f77b:	call   QWORD PTR [rip+0x71cf]        # 0x140016950
   14000f781:	lea    rdx,[rsp+0x38]
   14000f786:	lea    rcx,[rsp+0x220]
   14000f78e:	mov    rdi,rax
   14000f791:	call   QWORD PTR [rip+0x6da9]        # 0x140016540
   14000f797:	lea    rdx,[rsp+0x288]
   14000f79f:	mov    rcx,rax
   14000f7a2:	call   QWORD PTR [rip+0x6b18]        # 0x1400162c0
   14000f7a8:	mov    rcx,rax
   14000f7ab:	call   QWORD PTR [rip+0x719f]        # 0x140016950
   14000f7b1:	mov    rcx,QWORD PTR [rip+0x68a0]        # 0x140016058
   14000f7b8:	lea    rdx,[rip+0x7ad9]        # 0x140017298
   14000f7bf:	mov    rbx,rax
   14000f7c2:	call   0x1400016a0
   14000f7c7:	mov    rdx,rbx
   14000f7ca:	mov    rcx,rax
   14000f7cd:	call   0x1400016a0
   14000f7d2:	lea    rdx,[rip+0x7abb]        # 0x140017294
   14000f7d9:	mov    rcx,rax
   14000f7dc:	call   0x1400016a0
   14000f7e1:	mov    rdx,rdi
   14000f7e4:	mov    rcx,rax
   14000f7e7:	call   0x1400016a0
   14000f7ec:	lea    rdx,[rip+0x7af5]        # 0x1400172e8
   14000f7f3:	mov    rcx,rax
   14000f7f6:	call   0x1400016a0
   14000f7fb:	mov    rdx,QWORD PTR [rip+0x685e]        # 0x140016060
   14000f802:	mov    rcx,rax
   14000f805:	call   QWORD PTR [rip+0x685d]        # 0x140016068
   14000f80b:	lea    rcx,[rsp+0x288]
   14000f813:	call   QWORD PTR [rip+0x6a5f]        # 0x140016278
   14000f819:	lea    rcx,[rsp+0x220]
   14000f821:	call   QWORD PTR [rip+0x7111]        # 0x140016938
   14000f827:	lea    rcx,[rsp+0x248]
   14000f82f:	call   QWORD PTR [rip+0x6a43]        # 0x140016278
   14000f835:	lea    rcx,[rsp+0x158]
   14000f83d:	call   QWORD PTR [rip+0x70f5]        # 0x140016938
   14000f843:	mov    rbx,QWORD PTR [rsp+0x368]
   14000f84b:	mov    rcx,rbp
   14000f84e:	mov    rdx,rbx
   14000f851:	call   QWORD PTR [rip+0x7189]        # 0x1400169e0
   14000f857:	mov    rdx,r15
   14000f85a:	xor    ecx,ecx
   14000f85c:	call   0x140005740
   14000f861:	mov    rdx,rbx
   14000f864:	mov    rcx,rbp
   14000f867:	call   QWORD PTR [rip+0x717b]        # 0x1400169e8
   14000f86d:	jmp    0x14000f9a6
   14000f872:	lea    rcx,[rip+0xd877]        # 0x14001d0f0
   14000f879:	call   QWORD PTR [rip+0x6b69]        # 0x1400163e8
   14000f87f:	jmp    0x14000fb68
   14000f884:	cmp    BYTE PTR [rip+0xd835],0x0        # 0x14001d0c0
   14000f88b:	je     0x14000f99d
   14000f891:	lea    rdx,[rsp+0x1a8]
   14000f899:	mov    rcx,rsi
   14000f89c:	call   QWORD PTR [rip+0x7126]        # 0x1400169c8
   14000f8a2:	lea    rcx,[rsp+0x198]
   14000f8aa:	mov    rdx,rax
   14000f8ad:	call   QWORD PTR [rip+0x6d9d]        # 0x140016650
   14000f8b3:	lea    rdx,[rsp+0x188]
   14000f8bb:	mov    rcx,rax
   14000f8be:	call   QWORD PTR [rip+0x69fc]        # 0x1400162c0
   14000f8c4:	mov    rcx,rax
   14000f8c7:	call   QWORD PTR [rip+0x7083]        # 0x140016950
   14000f8cd:	lea    rdx,[rsp+0x38]
   14000f8d2:	lea    rcx,[rsp+0x178]
   14000f8da:	mov    rdi,rax
   14000f8dd:	call   QWORD PTR [rip+0x6c5d]        # 0x140016540
   14000f8e3:	lea    rdx,[rsp+0x168]
   14000f8eb:	mov    rcx,rax
   14000f8ee:	call   QWORD PTR [rip+0x69cc]        # 0x1400162c0
   14000f8f4:	mov    rcx,rax
   14000f8f7:	call   QWORD PTR [rip+0x7053]        # 0x140016950
   14000f8fd:	mov    rcx,QWORD PTR [rip+0x6754]        # 0x140016058
   14000f904:	lea    rdx,[rip+0x796d]        # 0x140017278
   14000f90b:	mov    rbx,rax
   14000f90e:	call   0x1400016a0
   14000f913:	mov    rdx,rbx
   14000f916:	mov    rcx,rax
   14000f919:	call   0x1400016a0
   14000f91e:	lea    rdx,[rip+0x796f]        # 0x140017294
   14000f925:	mov    rcx,rax
   14000f928:	call   0x1400016a0
   14000f92d:	mov    rdx,rdi
   14000f930:	mov    rcx,rax
   14000f933:	call   0x1400016a0
   14000f938:	lea    rdx,[rip+0x79a9]        # 0x1400172e8
   14000f93f:	mov    rcx,rax
   14000f942:	call   0x1400016a0
   14000f947:	mov    rdx,QWORD PTR [rip+0x6712]        # 0x140016060
   14000f94e:	mov    rcx,rax
   14000f951:	call   QWORD PTR [rip+0x6711]        # 0x140016068
   14000f957:	lea    rcx,[rsp+0x168]
   14000f95f:	call   QWORD PTR [rip+0x6913]        # 0x140016278
   14000f965:	lea    rcx,[rsp+0x178]
   14000f96d:	call   QWORD PTR [rip+0x6fc5]        # 0x140016938
   14000f973:	lea    rcx,[rsp+0x188]
   14000f97b:	call   QWORD PTR [rip+0x68f7]        # 0x140016278
   14000f981:	lea    rcx,[rsp+0x198]
   14000f989:	call   QWORD PTR [rip+0x6fa9]        # 0x140016938
   14000f98f:	lea    rcx,[rsp+0x1a8]
   14000f997:	call   QWORD PTR [rip+0x68db]        # 0x140016278
   14000f99d:	mov    rcx,rsi
   14000f9a0:	call   QWORD PTR [rip+0x704a]        # 0x1400169f0
   14000f9a6:	lea    rcx,[rip+0xd743]        # 0x14001d0f0
   14000f9ad:	mov    rbp,rax
   14000f9b0:	call   QWORD PTR [rip+0x6a32]        # 0x1400163e8
   14000f9b6:	test   rbp,rbp
   14000f9b9:	je     0x14000faee
   14000f9bf:	cmp    BYTE PTR [rip+0xd6fa],0x0        # 0x14001d0c0
   14000f9c6:	je     0x14000fad8
   14000f9cc:	lea    rdx,[rsp+0x1f8]
   14000f9d4:	mov    rcx,rsi
   14000f9d7:	call   QWORD PTR [rip+0x6feb]        # 0x1400169c8
   14000f9dd:	lea    rcx,[rsp+0x1e8]
   14000f9e5:	mov    rdx,rax
   14000f9e8:	call   QWORD PTR [rip+0x6c62]        # 0x140016650
   14000f9ee:	lea    rdx,[rsp+0x1d8]
   14000f9f6:	mov    rcx,rax
   14000f9f9:	call   QWORD PTR [rip+0x68c1]        # 0x1400162c0
   14000f9ff:	mov    rcx,rax
   14000fa02:	call   QWORD PTR [rip+0x6f48]        # 0x140016950
   14000fa08:	lea    rdx,[rsp+0x38]
   14000fa0d:	lea    rcx,[rsp+0x1c8]
   14000fa15:	mov    rdi,rax
   14000fa18:	call   QWORD PTR [rip+0x6b22]        # 0x140016540
   14000fa1e:	lea    rdx,[rsp+0x1b8]
   14000fa26:	mov    rcx,rax
   14000fa29:	call   QWORD PTR [rip+0x6891]        # 0x1400162c0
   14000fa2f:	mov    rcx,rax
   14000fa32:	call   QWORD PTR [rip+0x6f18]        # 0x140016950
   14000fa38:	mov    rcx,QWORD PTR [rip+0x6619]        # 0x140016058
   14000fa3f:	lea    rdx,[rip+0x7826]        # 0x14001726c
   14000fa46:	mov    rbx,rax
   14000fa49:	call   0x1400016a0
   14000fa4e:	mov    rdx,rbx
   14000fa51:	mov    rcx,rax
   14000fa54:	call   0x1400016a0
   14000fa59:	lea    rdx,[rip+0x7834]        # 0x140017294
   14000fa60:	mov    rcx,rax
   14000fa63:	call   0x1400016a0
   14000fa68:	mov    rdx,rdi
   14000fa6b:	mov    rcx,rax
   14000fa6e:	call   0x1400016a0
   14000fa73:	lea    rdx,[rip+0x786e]        # 0x1400172e8
   14000fa7a:	mov    rcx,rax
   14000fa7d:	call   0x1400016a0
   14000fa82:	mov    rdx,QWORD PTR [rip+0x65d7]        # 0x140016060
   14000fa89:	mov    rcx,rax
   14000fa8c:	call   QWORD PTR [rip+0x65d6]        # 0x140016068
   14000fa92:	lea    rcx,[rsp+0x1b8]
   14000fa9a:	call   QWORD PTR [rip+0x67d8]        # 0x140016278
   14000faa0:	lea    rcx,[rsp+0x1c8]
   14000faa8:	call   QWORD PTR [rip+0x6e8a]        # 0x140016938
   14000faae:	lea    rcx,[rsp+0x1d8]
   14000fab6:	call   QWORD PTR [rip+0x67bc]        # 0x140016278
   14000fabc:	lea    rcx,[rsp+0x1e8]
   14000fac4:	call   QWORD PTR [rip+0x6e6e]        # 0x140016938
   14000faca:	lea    rcx,[rsp+0x1f8]
   14000fad2:	call   QWORD PTR [rip+0x67a0]        # 0x140016278
   14000fad8:	mov    rdx,r15
   14000fadb:	mov    rcx,rbp
   14000fade:	call   0x140005740
   14000fae3:	mov    rcx,rbp
   14000fae6:	call   QWORD PTR [rip+0x6b5c]        # 0x140016648
   14000faec:	jmp    0x14000fb68
   14000faee:	lea    rdx,[rsp+0x38]
   14000faf3:	lea    rcx,[rsp+0x218]
   14000fafb:	call   QWORD PTR [rip+0x6a3f]        # 0x140016540
   14000fb01:	lea    rdx,[rsp+0x208]
   14000fb09:	mov    rcx,rax
   14000fb0c:	call   QWORD PTR [rip+0x67ae]        # 0x1400162c0
   14000fb12:	mov    rcx,rax
   14000fb15:	call   QWORD PTR [rip+0x6e35]        # 0x140016950
   14000fb1b:	mov    rcx,QWORD PTR [rip+0x6536]        # 0x140016058
   14000fb22:	lea    rdx,[rip+0x772f]        # 0x140017258
   14000fb29:	mov    rbx,rax
   14000fb2c:	call   0x1400016a0
   14000fb31:	mov    rdx,rbx
   14000fb34:	mov    rcx,rax
   14000fb37:	call   0x1400016a0
   14000fb3c:	mov    rdx,QWORD PTR [rip+0x651d]        # 0x140016060
   14000fb43:	mov    rcx,rax
   14000fb46:	call   QWORD PTR [rip+0x651c]        # 0x140016068
   14000fb4c:	lea    rcx,[rsp+0x208]
   14000fb54:	call   QWORD PTR [rip+0x671e]        # 0x140016278
   14000fb5a:	lea    rcx,[rsp+0x218]
   14000fb62:	call   QWORD PTR [rip+0x6dd0]        # 0x140016938
   14000fb68:	lea    rcx,[rsp+0x38]
   14000fb6d:	call   QWORD PTR [rip+0x6dc5]        # 0x140016938
   14000fb73:	dec    DWORD PTR [rsp+0xd0]
   14000fb7a:	bt     r14d,0xd
   14000fb7f:	jae    0x14000f480
   14000fb85:	mov    rax,QWORD PTR [rsp+0x228]
   14000fb8d:	btr    r14d,0xd
   14000fb92:	mov    ecx,DWORD PTR [rax]
   14000fb94:	test   ecx,ecx
   14000fb96:	je     0x14000fbb6
   14000fb98:	cmp    ecx,0xffffffff
   14000fb9b:	je     0x14000f480
   14000fba1:	mov    ecx,r13d
   14000fba4:	lock xadd DWORD PTR [rax],ecx
   14000fba8:	add    ecx,0xffffffff
   14000fbab:	setne  al
   14000fbae:	test   al,al
   14000fbb0:	jne    0x14000f480
   14000fbb6:	mov    rcx,QWORD PTR [rsp+0x228]
   14000fbbe:	jmp    0x14000f473
   14000fbc3:	add    QWORD PTR [rsp+0xd8],0x8
   14000fbcc:	bt     r14d,0xa
   14000fbd1:	jae    0x14000f3c0
   14000fbd7:	mov    rcx,QWORD PTR [rsp+0x238]
   14000fbdf:	btr    r14d,0xa
   14000fbe4:	mov    eax,DWORD PTR [rcx]
   14000fbe6:	test   eax,eax
   14000fbe8:	je     0x14000fc10
   14000fbea:	cmp    eax,0xffffffff
   14000fbed:	je     0x14000f3c0
   14000fbf3:	mov    eax,r13d
   14000fbf6:	lock xadd DWORD PTR [rcx],eax
   14000fbfa:	add    eax,0xffffffff
   14000fbfd:	setne  al
   14000fc00:	test   al,al
   14000fc02:	jne    0x14000f3c0
   14000fc08:	mov    rcx,QWORD PTR [rsp+0x238]
   14000fc10:	call   QWORD PTR [rip+0x6692]        # 0x1400162a8
   14000fc16:	jmp    0x14000f3c0
   14000fc1b:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000fc23:	mov    eax,DWORD PTR [rcx]
   14000fc25:	test   eax,eax
   14000fc27:	je     0x14000fc47
   14000fc29:	cmp    eax,0xffffffff
   14000fc2c:	je     0x14000fc4d
   14000fc2e:	mov    eax,r13d
   14000fc31:	lock xadd DWORD PTR [rcx],eax
   14000fc35:	add    eax,0xffffffff
   14000fc38:	setne  al
   14000fc3b:	test   al,al
   14000fc3d:	jne    0x14000fc4d
   14000fc3f:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000fc47:	call   QWORD PTR [rip+0x665b]        # 0x1400162a8
   14000fc4d:	mov    rcx,QWORD PTR [rsp+0x368]
   14000fc55:	call   QWORD PTR [rip+0x6d75]        # 0x1400169d0
   14000fc5b:	mov    r12,QWORD PTR [rsp+0x360]
   14000fc63:	mov    rdx,r12
   14000fc66:	mov    rcx,rax
   14000fc69:	call   0x14000a810
   14000fc6e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000fc73:	mov    eax,DWORD PTR [rcx+0x10]
   14000fc76:	test   eax,eax
   14000fc78:	je     0x14000fc95
   14000fc7a:	cmp    eax,0xffffffff
   14000fc7d:	je     0x14000fca2
   14000fc7f:	lock xadd DWORD PTR [rcx+0x10],r13d
   14000fc85:	add    r13d,0xffffffff
   14000fc89:	setne  al
   14000fc8c:	test   al,al
   14000fc8e:	jne    0x14000fca2
   14000fc90:	mov    rcx,QWORD PTR [rsp+0x50]
   14000fc95:	lea    rdx,[rip+0xffffffffffff9b74]        # 0x140009810
   14000fc9c:	call   QWORD PTR [rip+0x65f6]        # 0x140016298
   14000fca2:	mov    rax,r12
   14000fca5:	mov    rbx,QWORD PTR [rsp+0x378]
   14000fcad:	add    rsp,0x320
   14000fcb4:	pop    r15
   14000fcb6:	pop    r14
   14000fcb8:	pop    r13
   14000fcba:	pop    r12
   14000fcbc:	pop    rdi
   14000fcbd:	pop    rsi
   14000fcbe:	pop    rbp
   14000fcbf:	ret    
   14000fcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000fcc5:	mov    QWORD PTR [rsp+0x10],rbp
   14000fcca:	mov    QWORD PTR [rsp+0x18],rsi
   14000fccf:	push   rdi
   14000fcd0:	push   r12
   14000fcd2:	push   r13
   14000fcd4:	push   r14
   14000fcd6:	push   r15
   14000fcd8:	sub    rsp,0x50
   14000fcdc:	mov    rdi,QWORD PTR [r8]
   14000fcdf:	mov    r12,r9
   14000fce2:	mov    r13,rdx
   14000fce5:	mov    eax,DWORD PTR [rdi+0x10]
   14000fce8:	lea    rbx,[rdi+0x10]
   14000fcec:	mov    r14,rcx
   14000fcef:	mov    QWORD PTR [rsp+0x30],rdi
   14000fcf4:	test   eax,eax
   14000fcf6:	je     0x14000fd06
   14000fcf8:	cmp    eax,0xffffffff
   14000fcfb:	je     0x14000fd06
   14000fcfd:	lock add DWORD PTR [rbx],0x1
   14000fd01:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fd06:	test   BYTE PTR [rdi+0x28],0x1
   14000fd0a:	jne    0x14000fd72
   14000fd0c:	mov    eax,DWORD PTR [rbx]
   14000fd0e:	cmp    eax,0x1
   14000fd11:	je     0x14000fd72
   14000fd13:	test   eax,eax
   14000fd15:	je     0x14000fd72
   14000fd17:	lea    r8,[rip+0x3f42]        # 0x140013c60
   14000fd1e:	lea    rdx,[rip+0xffffffffffff1f4b]        # 0x140001c70
   14000fd25:	mov    r9d,0x18
   14000fd2b:	mov    rcx,rdi
   14000fd2e:	mov    DWORD PTR [rsp+0x20],0x8
   14000fd36:	call   QWORD PTR [rip+0x65ec]        # 0x140016328
   14000fd3c:	mov    ecx,DWORD PTR [rbx]
   14000fd3e:	mov    rsi,rax
   14000fd41:	test   ecx,ecx
   14000fd43:	je     0x14000fd5a
   14000fd45:	cmp    ecx,0xffffffff
   14000fd48:	je     0x14000fd6a
   14000fd4a:	lock add DWORD PTR [rbx],0xffffffff
   14000fd4e:	setne  cl
   14000fd51:	test   cl,cl
   14000fd53:	jne    0x14000fd6a
   14000fd55:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fd5a:	lea    rdx,[rip+0x3eff]        # 0x140013c60
   14000fd61:	mov    rcx,rdi
   14000fd64:	call   QWORD PTR [rip+0x652e]        # 0x140016298
   14000fd6a:	mov    rdi,rsi
   14000fd6d:	mov    QWORD PTR [rsp+0x30],rsi
   14000fd72:	mov    rcx,rdi
   14000fd75:	call   QWORD PTR [rip+0x6805]        # 0x140016580
   14000fd7b:	mov    QWORD PTR [rsp+0x40],rax
   14000fd80:	mov    ebx,0x1
   14000fd85:	mov    rsi,rax
   14000fd88:	mov    DWORD PTR [rsp+0x38],ebx
   14000fd8c:	cmp    rax,rdi
   14000fd8f:	je     0x14000fdb9
   14000fd91:	mov    rbp,QWORD PTR [rax+0x10]
   14000fd95:	test   ebx,ebx
   14000fd97:	je     0x14000fdae
   14000fd99:	mov    r9,r12
   14000fd9c:	mov    r8,rbp
   14000fd9f:	mov    rdx,r13
   14000fda2:	mov    rcx,r14
   14000fda5:	call   0x14000bb60
   14000fdaa:	dec    ebx
   14000fdac:	jmp    0x14000fd95
   14000fdae:	mov    rcx,rsi
   14000fdb1:	call   QWORD PTR [rip+0x6481]        # 0x140016238
   14000fdb7:	jmp    0x14000fd80
   14000fdb9:	mov    eax,DWORD PTR [rdi+0x10]
   14000fdbc:	mov    QWORD PTR [rsp+0x40],rsi
   14000fdc1:	test   eax,eax
   14000fdc3:	je     0x14000fddb
   14000fdc5:	cmp    eax,0xffffffff
   14000fdc8:	je     0x14000fdeb
   14000fdca:	lock add DWORD PTR [rdi+0x10],0xffffffff
   14000fdcf:	setne  al
   14000fdd2:	test   al,al
   14000fdd4:	jne    0x14000fdeb
   14000fdd6:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fddb:	lea    rdx,[rip+0x3e7e]        # 0x140013c60
   14000fde2:	mov    rcx,rdi
   14000fde5:	call   QWORD PTR [rip+0x64ad]        # 0x140016298
   14000fdeb:	lea    r11,[rsp+0x50]
   14000fdf0:	mov    rbx,QWORD PTR [r11+0x30]
   14000fdf4:	mov    rbp,QWORD PTR [r11+0x38]
   14000fdf8:	mov    rsi,QWORD PTR [r11+0x40]
   14000fdfc:	mov    rsp,r11
   14000fdff:	pop    r15
   14000fe01:	pop    r14
   14000fe03:	pop    r13
   14000fe05:	pop    r12
   14000fe07:	pop    rdi
   14000fe08:	ret    
   14000fe09:	int3   
   14000fe0a:	int3   
   14000fe0b:	int3   
   14000fe0c:	int3   
   14000fe0d:	int3   
   14000fe0e:	int3   
   14000fe0f:	int3   
   14000fe10:	mov    QWORD PTR [rsp+0x10],rbx
   14000fe15:	mov    DWORD PTR [rsp+0x8],ecx
   14000fe19:	push   rbp
   14000fe1a:	push   rsi
   14000fe1b:	push   rdi
   14000fe1c:	push   r12
   14000fe1e:	push   r13
   14000fe20:	push   r14
   14000fe22:	push   r15
   14000fe24:	sub    rsp,0x930
   14000fe2b:	xor    esi,esi
   14000fe2d:	mov    r14,rdx
   14000fe30:	lea    ecx,[rsi+0x2]
   14000fe33:	mov    r12d,esi
   14000fe36:	mov    DWORD PTR [rsp+0x980],esi
   14000fe3d:	call   QWORD PTR [rip+0x61f5]        # 0x140016038
   14000fe43:	lea    rcx,[rip+0xffffffffffff2286]        # 0x1400020d0
   14000fe4a:	call   QWORD PTR [rip+0x6958]        # 0x1400167a8
   14000fe50:	mov    ebx,0x1
   14000fe55:	or     r13,0xffffffffffffffff
   14000fe59:	cmp    DWORD PTR [rsp+0x970],ebx
   14000fe60:	lea    rbp,[rip+0x78b9]        # 0x140017720
   14000fe67:	lea    r15,[rip+0x789a]        # 0x140017708
   14000fe6e:	jle    0x14000ff27
   14000fe74:	lea    rdi,[r14+0x8]
   14000fe78:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fe80:	mov    rdx,QWORD PTR [rdi]
   14000fe83:	lea    rcx,[rsp+0x508]
   14000fe8b:	mov    r8d,r13d
   14000fe8e:	or     r12d,0x1
   14000fe92:	call   QWORD PTR [rip+0x6908]        # 0x1400167a0
   14000fe98:	mov    rdx,rbp
   14000fe9b:	mov    rcx,rax
   14000fe9e:	call   QWORD PTR [rip+0x68f4]        # 0x140016798
   14000fea4:	test   al,al
   14000fea6:	jne    0x14000fed5
   14000fea8:	mov    rdx,QWORD PTR [rdi]
   14000feab:	lea    rcx,[rsp+0x4f8]
   14000feb3:	mov    r8d,r13d
   14000feb6:	or     r12d,0x2
   14000feba:	call   QWORD PTR [rip+0x68e0]        # 0x1400167a0
   14000fec0:	mov    rdx,r15
   14000fec3:	mov    rcx,rax
   14000fec6:	call   QWORD PTR [rip+0x68cc]        # 0x140016798
   14000fecc:	test   al,al
   14000fece:	jne    0x14000fed5
   14000fed0:	xor    bpl,bpl
   14000fed3:	jmp    0x14000fed8
   14000fed5:	mov    bpl,0x1
   14000fed8:	test   r12b,0x2
   14000fedc:	je     0x14000fef0
   14000fede:	lea    rcx,[rsp+0x4f8]
   14000fee6:	and    r12d,0xfffffffd
   14000feea:	call   QWORD PTR [rip+0x6a48]        # 0x140016938
   14000fef0:	test   r12b,0x1
   14000fef4:	je     0x14000ff08
   14000fef6:	lea    rcx,[rsp+0x508]
   14000fefe:	and    r12d,0xfffffffe
   14000ff02:	call   QWORD PTR [rip+0x6a30]        # 0x140016938
   14000ff08:	test   bpl,bpl
   14000ff0b:	jne    0x14000ff60
   14000ff0d:	inc    ebx
   14000ff0f:	add    rdi,0x8
   14000ff13:	lea    rbp,[rip+0x7806]        # 0x140017720
   14000ff1a:	cmp    ebx,DWORD PTR [rsp+0x970]
   14000ff21:	jl     0x14000fe80
   14000ff27:	lea    rdx,[rip+0x77d2]        # 0x140017700
   14000ff2e:	lea    rcx,[rsp+0x518]
   14000ff36:	mov    r8d,0x7
   14000ff3c:	call   QWORD PTR [rip+0x642e]        # 0x140016370
   14000ff42:	lea    rcx,[rip+0x77a7]        # 0x1400176f0
   14000ff49:	mov    rdx,rax
   14000ff4c:	call   QWORD PTR [rip+0x683e]        # 0x140016790
   14000ff52:	lea    rcx,[rsp+0x518]
   14000ff5a:	call   QWORD PTR [rip+0x6318]        # 0x140016278
   14000ff60:	lea    rdx,[rsp+0x970]
   14000ff68:	lea    rcx,[rsp+0x100]
   14000ff70:	mov    r9d,0x50602
   14000ff76:	mov    r8,r14
   14000ff79:	call   QWORD PTR [rip+0x69f9]        # 0x140016978
   14000ff7f:	lea    rcx,[rsp+0x40]
   14000ff84:	call   QWORD PTR [rip+0x67fe]        # 0x140016788
   14000ff8a:	lea    rcx,[rsp+0x640]
   14000ff92:	call   QWORD PTR [rip+0x65e0]        # 0x140016578
   14000ff98:	lea    rcx,[rsp+0x528]
   14000ffa0:	mov    rdx,rax
   14000ffa3:	call   QWORD PTR [rip+0x65c7]        # 0x140016570
   14000ffa9:	lea    rdx,[rsp+0x80]
   14000ffb1:	mov    rcx,rax
   14000ffb4:	call   QWORD PTR [rip+0x67c6]        # 0x140016780
   14000ffba:	lea    rcx,[rsp+0x528]
   14000ffc2:	call   QWORD PTR [rip+0x6560]        # 0x140016528
   14000ffc8:	lea    rcx,[rsp+0x640]
   14000ffd0:	call   QWORD PTR [rip+0x6962]        # 0x140016938
   14000ffd6:	mov    rdx,QWORD PTR [rsp+0x40]
   14000ffdb:	mov    eax,DWORD PTR [rdx+0xc]
   14000ffde:	sub    eax,DWORD PTR [rdx+0x8]
   14000ffe1:	cmp    eax,0x2
   14000ffe4:	jge    0x140010133
   14000ffea:	xor    eax,eax
   14000ffec:	lea    rdi,[rip+0x6c3d]        # 0x140016c30
   14000fff3:	mov    rcx,r13
   14000fff6:	repnz scas al,BYTE PTR es:[rdi]
   14000fff8:	not    rcx
   14000fffb:	lea    rdx,[rcx-0x1]
   14000ffff:	lea    rcx,[rip+0x6c2a]        # 0x140016c30
   140010006:	call   QWORD PTR [rip+0x68c4]        # 0x1400168d0
   14001000c:	lea    rcx,[rsp+0x1d8]
   140010014:	mov    dl,0x20
   140010016:	mov    QWORD PTR [rsp+0x2e8],rax
   14001001e:	call   QWORD PTR [rip+0x68f4]        # 0x140016918
   140010024:	lea    r8,[rsp+0x80]
   14001002c:	movzx  eax,WORD PTR [rax]
   14001002f:	lea    rdx,[rsp+0x660]
   140010037:	lea    rcx,[rsp+0x2e8]
   14001003f:	xor    r9d,r9d
   140010042:	mov    WORD PTR [rsp+0x20],ax
   140010047:	call   QWORD PTR [rip+0x6893]        # 0x1400168e0
   14001004d:	lea    rdx,[rsp+0x650]
   140010055:	mov    rcx,rax
   140010058:	call   QWORD PTR [rip+0x6262]        # 0x1400162c0
   14001005e:	mov    rcx,rax
   140010061:	call   QWORD PTR [rip+0x68e9]        # 0x140016950
   140010067:	mov    rcx,QWORD PTR [rip+0x5fea]        # 0x140016058
   14001006e:	mov    rdx,rax
   140010071:	call   0x1400016a0
   140010076:	mov    rdx,QWORD PTR [rip+0x5fe3]        # 0x140016060
   14001007d:	mov    rcx,rax
   140010080:	call   QWORD PTR [rip+0x5fe2]        # 0x140016068
   140010086:	lea    rcx,[rsp+0x650]
   14001008e:	call   QWORD PTR [rip+0x61e4]        # 0x140016278
   140010094:	lea    rcx,[rsp+0x660]
   14001009c:	call   QWORD PTR [rip+0x6896]        # 0x140016938
   1400100a2:	lea    rcx,[rsp+0x2e8]
   1400100aa:	call   QWORD PTR [rip+0x6888]        # 0x140016938
   1400100b0:	lea    rcx,[rsp+0x80]
   1400100b8:	call   QWORD PTR [rip+0x687a]        # 0x140016938
   1400100be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400100c3:	mov    eax,DWORD PTR [rbx]
   1400100c5:	test   eax,eax
   1400100c7:	je     0x1400100e3
   1400100c9:	cmp    eax,0xffffffff
   1400100cc:	je     0x14001011b
   1400100ce:	lock xadd DWORD PTR [rbx],r13d
   1400100d3:	add    r13d,0xffffffff
   1400100d7:	setne  al
   1400100da:	test   al,al
   1400100dc:	jne    0x14001011b
   1400100de:	mov    rbx,QWORD PTR [rsp+0x40]
   1400100e3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400100e7:	lea    rdi,[rbx+rax*8+0x10]
   1400100ec:	movsxd rax,DWORD PTR [rbx+0x8]
   1400100f0:	lea    rsi,[rbx+rax*8+0x10]
   1400100f5:	cmp    rsi,rdi
   1400100f8:	je     0x140010112
   1400100fa:	nop    WORD PTR [rax+rax*1+0x0]
   140010100:	sub    rdi,0x8
   140010104:	mov    rcx,rdi
   140010107:	call   QWORD PTR [rip+0x682b]        # 0x140016938
   14001010d:	cmp    rdi,rsi
   140010110:	jne    0x140010100
   140010112:	mov    rcx,rbx
   140010115:	call   QWORD PTR [rip+0x618d]        # 0x1400162a8
   14001011b:	lea    rcx,[rsp+0x100]
   140010123:	call   QWORD PTR [rip+0x6857]        # 0x140016980
   140010129:	mov    eax,0x1
   14001012e:	jmp    0x140013c39
   140010133:	lea    rcx,[rsp+0x58]
   140010138:	call   QWORD PTR [rip+0x60c2]        # 0x140016200
   14001013e:	lea    rcx,[rsp+0x50]
   140010143:	call   QWORD PTR [rip+0x60b7]        # 0x140016200
   140010149:	lea    rcx,[rsp+0x68]
   14001014e:	mov    BYTE PTR [rsp+0x980],0x1
   140010156:	call   QWORD PTR [rip+0x60a4]        # 0x140016200
   14001015c:	lea    rcx,[rsp+0x70]
   140010161:	call   QWORD PTR [rip+0x6099]        # 0x140016200
   140010167:	mov    rcx,QWORD PTR [rsp+0x40]
   14001016c:	mov    rax,QWORD PTR [rip+0x60ad]        # 0x140016220
   140010173:	mov    QWORD PTR [rsp+0x30],rax
   140010178:	mov    edi,DWORD PTR [rcx+0x8]
   14001017b:	mov    edx,DWORD PTR [rcx+0xc]
   14001017e:	sub    edx,edi
   140010180:	mov    r15d,esi
   140010183:	mov    ebp,esi
   140010185:	test   edx,edx
   140010187:	jle    0x140010a4c
   14001018d:	lea    r14,[rip+0x758c]        # 0x140017720
   140010194:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400101a0:	movsxd rax,ebp
   1400101a3:	movsxd rdx,edi
   1400101a6:	add    rdx,rax
   1400101a9:	lea    rbx,[rcx+rdx*8+0x10]
   1400101ae:	lea    rcx,[rsp+0x208]
   1400101b6:	mov    dl,0x2d
   1400101b8:	call   QWORD PTR [rip+0x675a]        # 0x140016918
   1400101be:	mov    r8d,0x1
   1400101c4:	mov    rcx,rbx
   1400101c7:	movzx  edx,WORD PTR [rax]
   1400101ca:	call   QWORD PTR [rip+0x6128]        # 0x1400162f8
   1400101d0:	test   al,al
   1400101d2:	jne    0x14001023f
   1400101d4:	mov    rax,QWORD PTR [rsp+0x30]
   1400101d9:	mov    ecx,DWORD PTR [rax]
   1400101db:	cmp    ecx,0x1
   1400101de:	je     0x140010213
   1400101e0:	test   ecx,ecx
   1400101e2:	je     0x140010213
   1400101e4:	lea    rcx,[rsp+0x30]
   1400101e9:	mov    edx,0x7fffffff
   1400101ee:	mov    r8d,0x1
   1400101f4:	call   0x140002c00
   1400101f9:	test   rax,rax
   1400101fc:	je     0x140010a27
   140010202:	mov    rdx,rbx
   140010205:	mov    rcx,rax
   140010208:	call   QWORD PTR [rip+0x6332]        # 0x140016540
   14001020e:	jmp    0x140010a27
   140010213:	lea    rcx,[rsp+0x680]
   14001021b:	mov    rdx,rbx
   14001021e:	call   QWORD PTR [rip+0x631c]        # 0x140016540
   140010224:	lea    rcx,[rsp+0x30]
   140010229:	call   QWORD PTR [rip+0x6151]        # 0x140016380
   14001022f:	mov    rcx,QWORD PTR [rsp+0x680]
   140010237:	mov    QWORD PTR [rax],rcx
   14001023a:	jmp    0x140010a27
   14001023f:	lea    rdx,[rip+0x749a]        # 0x1400176e0
   140010246:	xor    eax,eax
   140010248:	mov    rcx,r13
   14001024b:	mov    rdi,rdx
   14001024e:	mov    QWORD PTR [rsp+0x148],rdx
   140010256:	lea    rdx,[rsp+0x7c0]
   14001025e:	repnz scas al,BYTE PTR es:[rdi]
   140010260:	not    rcx
   140010263:	dec    rcx
   140010266:	mov    DWORD PTR [rsp+0x140],ecx
   14001026d:	mov    rcx,rbx
   140010270:	movaps xmm0,XMMWORD PTR [rsp+0x140]
   140010278:	movdqa XMMWORD PTR [rsp+0x7c0],xmm0
   140010281:	call   QWORD PTR [rip+0x66a9]        # 0x140016930
   140010287:	test   al,al
   140010289:	jne    0x1400109f9
   14001028f:	lea    rdx,[rip+0x743a]        # 0x1400176d0
   140010296:	xor    eax,eax
   140010298:	mov    rcx,r13
   14001029b:	mov    rdi,rdx
   14001029e:	mov    QWORD PTR [rsp+0x128],rdx
   1400102a6:	lea    rdx,[rsp+0x7d0]
   1400102ae:	repnz scas al,BYTE PTR es:[rdi]
   1400102b0:	not    rcx
   1400102b3:	dec    rcx
   1400102b6:	mov    DWORD PTR [rsp+0x120],ecx
   1400102bd:	mov    rcx,rbx
   1400102c0:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   1400102c8:	movdqa XMMWORD PTR [rsp+0x7d0],xmm0
   1400102d1:	call   QWORD PTR [rip+0x6659]        # 0x140016930
   1400102d7:	test   al,al
   1400102d9:	jne    0x1400109f9
   1400102df:	lea    rdx,[rip+0x73e2]        # 0x1400176c8
   1400102e6:	xor    eax,eax
   1400102e8:	mov    rcx,r13
   1400102eb:	mov    rdi,rdx
   1400102ee:	mov    QWORD PTR [rsp+0x4e8],rdx
   1400102f6:	lea    rdx,[rsp+0x7e0]
   1400102fe:	repnz scas al,BYTE PTR es:[rdi]
   140010300:	not    rcx
   140010303:	dec    rcx
   140010306:	mov    DWORD PTR [rsp+0x4e0],ecx
   14001030d:	mov    rcx,rbx
   140010310:	movaps xmm0,XMMWORD PTR [rsp+0x4e0]
   140010318:	movdqa XMMWORD PTR [rsp+0x7e0],xmm0
   140010321:	call   QWORD PTR [rip+0x6609]        # 0x140016930
   140010327:	test   al,al
   140010329:	jne    0x1400109d4
   14001032f:	lea    rdx,[rip+0x7386]        # 0x1400176bc
   140010336:	xor    eax,eax
   140010338:	mov    rcx,r13
   14001033b:	mov    rdi,rdx
   14001033e:	mov    QWORD PTR [rsp+0x4c8],rdx
   140010346:	lea    rdx,[rsp+0x800]
   14001034e:	repnz scas al,BYTE PTR es:[rdi]
   140010350:	not    rcx
   140010353:	dec    rcx
   140010356:	mov    DWORD PTR [rsp+0x4c0],ecx
   14001035d:	mov    rcx,rbx
   140010360:	movaps xmm0,XMMWORD PTR [rsp+0x4c0]
   140010368:	movdqa XMMWORD PTR [rsp+0x800],xmm0
   140010371:	call   QWORD PTR [rip+0x65b9]        # 0x140016930
   140010377:	test   al,al
   140010379:	jne    0x1400109d4
   14001037f:	lea    rdx,[rip+0x7322]        # 0x1400176a8
   140010386:	xor    eax,eax
   140010388:	mov    rcx,r13
   14001038b:	mov    rdi,rdx
   14001038e:	mov    QWORD PTR [rsp+0x4a8],rdx
   140010396:	lea    rdx,[rsp+0x820]
   14001039e:	repnz scas al,BYTE PTR es:[rdi]
   1400103a0:	not    rcx
   1400103a3:	dec    rcx
   1400103a6:	mov    DWORD PTR [rsp+0x4a0],ecx
   1400103ad:	mov    rcx,rbx
   1400103b0:	movaps xmm0,XMMWORD PTR [rsp+0x4a0]
   1400103b8:	movdqa XMMWORD PTR [rsp+0x820],xmm0
   1400103c1:	call   QWORD PTR [rip+0x6569]        # 0x140016930
   1400103c7:	test   al,al
   1400103c9:	jne    0x1400109ca
   1400103cf:	lea    rdx,[rip+0x72c2]        # 0x140017698
   1400103d6:	xor    eax,eax
   1400103d8:	mov    rcx,r13
   1400103db:	mov    rdi,rdx
   1400103de:	mov    QWORD PTR [rsp+0x488],rdx
   1400103e6:	lea    rdx,[rsp+0x840]
   1400103ee:	repnz scas al,BYTE PTR es:[rdi]
   1400103f0:	not    rcx
   1400103f3:	dec    rcx
   1400103f6:	mov    DWORD PTR [rsp+0x480],ecx
   1400103fd:	mov    rcx,rbx
   140010400:	movaps xmm0,XMMWORD PTR [rsp+0x480]
   140010408:	movdqa XMMWORD PTR [rsp+0x840],xmm0
   140010411:	call   QWORD PTR [rip+0x6519]        # 0x140016930
   140010417:	test   al,al
   140010419:	jne    0x1400109ca
   14001041f:	lea    rdx,[rip+0x725a]        # 0x140017680
   140010426:	xor    eax,eax
   140010428:	mov    rcx,r13
   14001042b:	mov    rdi,rdx
   14001042e:	mov    QWORD PTR [rsp+0x468],rdx
   140010436:	lea    rdx,[rsp+0x860]
   14001043e:	repnz scas al,BYTE PTR es:[rdi]
   140010440:	not    rcx
   140010443:	dec    rcx
   140010446:	mov    DWORD PTR [rsp+0x460],ecx
   14001044d:	mov    rcx,rbx
   140010450:	movaps xmm0,XMMWORD PTR [rsp+0x460]
   140010458:	movdqa XMMWORD PTR [rsp+0x860],xmm0
   140010461:	call   QWORD PTR [rip+0x64c9]        # 0x140016930
   140010467:	test   al,al
   140010469:	jne    0x1400109ca
   14001046f:	lea    rdx,[rip+0x71fa]        # 0x140017670
   140010476:	xor    eax,eax
   140010478:	mov    rcx,r13
   14001047b:	mov    rdi,rdx
   14001047e:	mov    QWORD PTR [rsp+0x448],rdx
   140010486:	lea    rdx,[rsp+0x880]
   14001048e:	repnz scas al,BYTE PTR es:[rdi]
   140010490:	not    rcx
   140010493:	dec    rcx
   140010496:	mov    DWORD PTR [rsp+0x440],ecx
   14001049d:	mov    rcx,rbx
   1400104a0:	movaps xmm0,XMMWORD PTR [rsp+0x440]
   1400104a8:	movdqa XMMWORD PTR [rsp+0x880],xmm0
   1400104b1:	call   QWORD PTR [rip+0x6479]        # 0x140016930
   1400104b7:	test   al,al
   1400104b9:	jne    0x1400109ca
   1400104bf:	lea    rdx,[rip+0x719a]        # 0x140017660
   1400104c6:	xor    eax,eax
   1400104c8:	mov    rcx,r13
   1400104cb:	mov    rdi,rdx
   1400104ce:	mov    QWORD PTR [rsp+0x428],rdx
   1400104d6:	lea    rdx,[rsp+0x8a0]
   1400104de:	repnz scas al,BYTE PTR es:[rdi]
   1400104e0:	not    rcx
   1400104e3:	dec    rcx
   1400104e6:	mov    DWORD PTR [rsp+0x420],ecx
   1400104ed:	mov    rcx,rbx
   1400104f0:	movaps xmm0,XMMWORD PTR [rsp+0x420]
   1400104f8:	movdqa XMMWORD PTR [rsp+0x8a0],xmm0
   140010501:	call   QWORD PTR [rip+0x6429]        # 0x140016930
   140010507:	test   al,al
   140010509:	jne    0x1400109c0
   14001050f:	lea    rdx,[rip+0x713a]        # 0x140017650
   140010516:	xor    eax,eax
   140010518:	mov    rcx,r13
   14001051b:	mov    rdi,rdx
   14001051e:	mov    QWORD PTR [rsp+0x408],rdx
   140010526:	lea    rdx,[rsp+0x8c0]
   14001052e:	repnz scas al,BYTE PTR es:[rdi]
   140010530:	not    rcx
   140010533:	dec    rcx
   140010536:	mov    DWORD PTR [rsp+0x400],ecx
   14001053d:	mov    rcx,rbx
   140010540:	movaps xmm0,XMMWORD PTR [rsp+0x400]
   140010548:	movdqa XMMWORD PTR [rsp+0x8c0],xmm0
   140010551:	call   QWORD PTR [rip+0x63d9]        # 0x140016930
   140010557:	test   al,al
   140010559:	jne    0x1400109c0
   14001055f:	lea    rdx,[rip+0x70da]        # 0x140017640
   140010566:	xor    eax,eax
   140010568:	mov    rcx,r13
   14001056b:	mov    rdi,rdx
   14001056e:	mov    QWORD PTR [rsp+0x3e8],rdx
   140010576:	lea    rdx,[rsp+0x8e0]
   14001057e:	repnz scas al,BYTE PTR es:[rdi]
   140010580:	not    rcx
   140010583:	dec    rcx
   140010586:	mov    DWORD PTR [rsp+0x3e0],ecx
   14001058d:	mov    rcx,rbx
   140010590:	movaps xmm0,XMMWORD PTR [rsp+0x3e0]
   140010598:	movdqa XMMWORD PTR [rsp+0x8e0],xmm0
   1400105a1:	call   QWORD PTR [rip+0x6389]        # 0x140016930
   1400105a7:	test   al,al
   1400105a9:	jne    0x1400109b7
   1400105af:	lea    rdx,[rip+0x707a]        # 0x140017630
   1400105b6:	xor    eax,eax
   1400105b8:	mov    rcx,r13
   1400105bb:	mov    rdi,rdx
   1400105be:	mov    QWORD PTR [rsp+0x3c8],rdx
   1400105c6:	lea    rdx,[rsp+0x900]
   1400105ce:	repnz scas al,BYTE PTR es:[rdi]
   1400105d0:	not    rcx
   1400105d3:	dec    rcx
   1400105d6:	mov    DWORD PTR [rsp+0x3c0],ecx
   1400105dd:	mov    rcx,rbx
   1400105e0:	movaps xmm0,XMMWORD PTR [rsp+0x3c0]
   1400105e8:	movdqa XMMWORD PTR [rsp+0x900],xmm0
   1400105f1:	call   QWORD PTR [rip+0x6339]        # 0x140016930
   1400105f7:	test   al,al
   1400105f9:	jne    0x1400109b7
   1400105ff:	lea    rdx,[rip+0x701e]        # 0x140017624
   140010606:	xor    eax,eax
   140010608:	mov    rcx,r13
   14001060b:	mov    rdi,rdx
   14001060e:	mov    QWORD PTR [rsp+0x3a8],rdx
   140010616:	lea    rdx,[rsp+0x870]
   14001061e:	repnz scas al,BYTE PTR es:[rdi]
   140010620:	not    rcx
   140010623:	dec    rcx
   140010626:	mov    DWORD PTR [rsp+0x3a0],ecx
   14001062d:	mov    rcx,rbx
   140010630:	movaps xmm0,XMMWORD PTR [rsp+0x3a0]
   140010638:	movdqa XMMWORD PTR [rsp+0x870],xmm0
   140010641:	call   QWORD PTR [rip+0x62e9]        # 0x140016930
   140010647:	test   al,al
   140010649:	jne    0x1400109af
   14001064f:	lea    rdx,[rip+0x6fc6]        # 0x14001761c
   140010656:	xor    eax,eax
   140010658:	mov    rcx,r13
   14001065b:	mov    rdi,rdx
   14001065e:	mov    QWORD PTR [rsp+0x388],rdx
   140010666:	lea    rdx,[rsp+0x8f0]
   14001066e:	repnz scas al,BYTE PTR es:[rdi]
   140010670:	not    rcx
   140010673:	dec    rcx
   140010676:	mov    DWORD PTR [rsp+0x380],ecx
   14001067d:	mov    rcx,rbx
   140010680:	movaps xmm0,XMMWORD PTR [rsp+0x380]
   140010688:	movdqa XMMWORD PTR [rsp+0x8f0],xmm0
   140010691:	call   QWORD PTR [rip+0x6299]        # 0x140016930
   140010697:	test   al,al
   140010699:	jne    0x1400109af
   14001069f:	lea    rdx,[rip+0x6f6a]        # 0x140017610
   1400106a6:	xor    eax,eax
   1400106a8:	mov    rcx,r13
   1400106ab:	mov    rdi,rdx
   1400106ae:	mov    QWORD PTR [rsp+0x368],rdx
   1400106b6:	lea    rdx,[rsp+0x920]
   1400106be:	repnz scas al,BYTE PTR es:[rdi]
   1400106c0:	not    rcx
   1400106c3:	dec    rcx
   1400106c6:	mov    DWORD PTR [rsp+0x360],ecx
   1400106cd:	mov    rcx,rbx
   1400106d0:	movaps xmm0,XMMWORD PTR [rsp+0x360]
   1400106d8:	movdqa XMMWORD PTR [rsp+0x920],xmm0
   1400106e1:	call   QWORD PTR [rip+0x6249]        # 0x140016930
   1400106e7:	test   al,al
   1400106e9:	jne    0x1400109a7
   1400106ef:	lea    rdx,[rip+0x6f0a]        # 0x140017600
   1400106f6:	xor    eax,eax
   1400106f8:	mov    rcx,r13
   1400106fb:	mov    rdi,rdx
   1400106fe:	mov    QWORD PTR [rsp+0x348],rdx
   140010706:	lea    rdx,[rsp+0x8d0]
   14001070e:	repnz scas al,BYTE PTR es:[rdi]
   140010710:	not    rcx
   140010713:	dec    rcx
   140010716:	mov    DWORD PTR [rsp+0x340],ecx
   14001071d:	mov    rcx,rbx
   140010720:	movaps xmm0,XMMWORD PTR [rsp+0x340]
   140010728:	movdqa XMMWORD PTR [rsp+0x8d0],xmm0
   140010731:	call   QWORD PTR [rip+0x61f9]        # 0x140016930
   140010737:	test   al,al
   140010739:	jne    0x1400109a7
   14001073f:	lea    rdx,[rip+0x6eb6]        # 0x1400175fc
   140010746:	xor    eax,eax
   140010748:	mov    rcx,r13
   14001074b:	mov    rdi,rdx
   14001074e:	mov    QWORD PTR [rsp+0x328],rdx
   140010756:	lea    rdx,[rsp+0x7f0]
   14001075e:	repnz scas al,BYTE PTR es:[rdi]
   140010760:	not    rcx
   140010763:	dec    rcx
   140010766:	mov    DWORD PTR [rsp+0x320],ecx
   14001076d:	mov    rcx,rbx
   140010770:	movaps xmm0,XMMWORD PTR [rsp+0x320]
   140010778:	movdqa XMMWORD PTR [rsp+0x7f0],xmm0
   140010781:	call   QWORD PTR [rip+0x61a9]        # 0x140016930
   140010787:	test   al,al
   140010789:	je     0x140010797
   14001078b:	mov    BYTE PTR [rip+0xc92e],0x1        # 0x14001d0c0
   140010792:	jmp    0x140010a27
   140010797:	xor    eax,eax
   140010799:	mov    rcx,r13
   14001079c:	mov    rdi,r14
   14001079f:	repnz scas al,BYTE PTR es:[rdi]
   1400107a1:	mov    QWORD PTR [rsp+0x678],r14
   1400107a9:	lea    rdx,[rsp+0x890]
   1400107b1:	not    rcx
   1400107b4:	dec    rcx
   1400107b7:	mov    DWORD PTR [rsp+0x670],ecx
   1400107be:	mov    rcx,rbx
   1400107c1:	movaps xmm0,XMMWORD PTR [rsp+0x670]
   1400107c9:	movdqa XMMWORD PTR [rsp+0x890],xmm0
   1400107d2:	call   QWORD PTR [rip+0x6158]        # 0x140016930
   1400107d8:	test   al,al
   1400107da:	jne    0x140010a27
   1400107e0:	lea    rdx,[rip+0x6f21]        # 0x140017708
   1400107e7:	xor    eax,eax
   1400107e9:	mov    rcx,r13
   1400107ec:	mov    rdi,rdx
   1400107ef:	mov    QWORD PTR [rsp+0x5e8],rdx
   1400107f7:	lea    rdx,[rsp+0x810]
   1400107ff:	repnz scas al,BYTE PTR es:[rdi]
   140010801:	not    rcx
   140010804:	dec    rcx
   140010807:	mov    DWORD PTR [rsp+0x5e0],ecx
   14001080e:	mov    rcx,rbx
   140010811:	movaps xmm0,XMMWORD PTR [rsp+0x5e0]
   140010819:	movdqa XMMWORD PTR [rsp+0x810],xmm0
   140010822:	call   QWORD PTR [rip+0x6108]        # 0x140016930
   140010828:	test   al,al
   14001082a:	jne    0x140010a27
   140010830:	lea    rcx,[rsp+0x6a0]
   140010838:	mov    rdx,rbx
   14001083b:	call   QWORD PTR [rip+0x5cff]        # 0x140016540
   140010841:	lea    rdx,[rsp+0x690]
   140010849:	mov    rcx,rax
   14001084c:	call   QWORD PTR [rip+0x5a6e]        # 0x1400162c0
   140010852:	mov    rcx,rax
   140010855:	call   QWORD PTR [rip+0x60f5]        # 0x140016950
   14001085b:	mov    rcx,QWORD PTR [rip+0x57f6]        # 0x140016058
   140010862:	lea    rdx,[rip+0x6d7f]        # 0x1400175e8
   140010869:	mov    rdi,rax
   14001086c:	call   0x1400016a0
   140010871:	mov    rdx,rdi
   140010874:	mov    rcx,rax
   140010877:	call   0x1400016a0
   14001087c:	mov    rdx,QWORD PTR [rip+0x57dd]        # 0x140016060
   140010883:	mov    rcx,rax
   140010886:	call   QWORD PTR [rip+0x57dc]        # 0x140016068
   14001088c:	lea    rcx,[rsp+0x690]
   140010894:	call   QWORD PTR [rip+0x59de]        # 0x140016278
   14001089a:	lea    rcx,[rsp+0x6a0]
   1400108a2:	call   QWORD PTR [rip+0x6090]        # 0x140016938
   1400108a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400108ad:	mov    eax,DWORD PTR [rbx]
   1400108af:	test   eax,eax
   1400108b1:	je     0x1400108ce
   1400108b3:	cmp    eax,0xffffffff
   1400108b6:	je     0x14001090b
   1400108b8:	mov    eax,r13d
   1400108bb:	lock xadd DWORD PTR [rbx],eax
   1400108bf:	add    eax,0xffffffff
   1400108c2:	setne  al
   1400108c5:	test   al,al
   1400108c7:	jne    0x14001090b
   1400108c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400108ce:	movsxd rax,DWORD PTR [rbx+0xc]
   1400108d2:	lea    rdi,[rbx+rax*8+0x10]
   1400108d7:	movsxd rax,DWORD PTR [rbx+0x8]
   1400108db:	lea    rsi,[rbx+rax*8+0x10]
   1400108e0:	cmp    rsi,rdi
   1400108e3:	je     0x140010902
   1400108e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400108f0:	sub    rdi,0x8
   1400108f4:	mov    rcx,rdi
   1400108f7:	call   QWORD PTR [rip+0x603b]        # 0x140016938
   1400108fd:	cmp    rdi,rsi
   140010900:	jne    0x1400108f0
   140010902:	mov    rcx,rbx
   140010905:	call   QWORD PTR [rip+0x599d]        # 0x1400162a8
   14001090b:	lea    rcx,[rsp+0x70]
   140010910:	call   QWORD PTR [rip+0x6022]        # 0x140016938
   140010916:	lea    rcx,[rsp+0x68]
   14001091b:	call   QWORD PTR [rip+0x6017]        # 0x140016938
   140010921:	lea    rcx,[rsp+0x50]
   140010926:	call   QWORD PTR [rip+0x600c]        # 0x140016938
   14001092c:	lea    rcx,[rsp+0x58]
   140010931:	call   QWORD PTR [rip+0x6001]        # 0x140016938
   140010937:	lea    rcx,[rsp+0x80]
   14001093f:	call   QWORD PTR [rip+0x5ff3]        # 0x140016938
   140010945:	mov    rbx,QWORD PTR [rsp+0x40]
   14001094a:	mov    eax,DWORD PTR [rbx]
   14001094c:	test   eax,eax
   14001094e:	je     0x140010972
   140010950:	cmp    eax,0xffffffff
   140010953:	je     0x14001011b
   140010959:	lock xadd DWORD PTR [rbx],r13d
   14001095e:	add    r13d,0xffffffff
   140010962:	setne  al
   140010965:	test   al,al
   140010967:	jne    0x14001011b
   14001096d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010972:	movsxd rax,DWORD PTR [rbx+0xc]
   140010976:	lea    rdi,[rbx+rax*8+0x10]
   14001097b:	movsxd rax,DWORD PTR [rbx+0x8]
   14001097f:	lea    rsi,[rbx+rax*8+0x10]
   140010984:	cmp    rsi,rdi
   140010987:	je     0x140010112
   14001098d:	nop    DWORD PTR [rax]
   140010990:	sub    rdi,0x8
   140010994:	mov    rcx,rdi
   140010997:	call   QWORD PTR [rip+0x5f9b]        # 0x140016938
   14001099d:	cmp    rdi,rsi
   1400109a0:	jne    0x140010990
   1400109a2:	jmp    0x140010112
   1400109a7:	mov    r15d,0x2
   1400109ad:	jmp    0x140010a27
   1400109af:	mov    r15d,0x1
   1400109b5:	jmp    0x140010a27
   1400109b7:	mov    BYTE PTR [rip+0xc64a],sil        # 0x14001d008
   1400109be:	jmp    0x140010a27
   1400109c0:	mov    BYTE PTR [rsp+0x980],0x1
   1400109c8:	jmp    0x140010a27
   1400109ca:	mov    BYTE PTR [rsp+0x980],sil
   1400109d2:	jmp    0x140010a27
   1400109d4:	mov    rax,QWORD PTR [rsp+0x40]
   1400109d9:	inc    ebp
   1400109db:	movsxd rdx,DWORD PTR [rax+0x8]
   1400109df:	mov    ecx,DWORD PTR [rax+0xc]
   1400109e2:	sub    ecx,edx
   1400109e4:	cmp    ebp,ecx
   1400109e6:	je     0x140010b87
   1400109ec:	movsxd rcx,ebp
   1400109ef:	add    rdx,rcx
   1400109f2:	lea    rcx,[rsp+0x70]
   1400109f7:	jmp    0x140010a1c
   1400109f9:	mov    rax,QWORD PTR [rsp+0x40]
   1400109fe:	inc    ebp
   140010a00:	movsxd rdx,DWORD PTR [rax+0x8]
   140010a04:	mov    ecx,DWORD PTR [rax+0xc]
   140010a07:	sub    ecx,edx
   140010a09:	cmp    ebp,ecx
   140010a0b:	je     0x140010e15
   140010a11:	movsxd rcx,ebp
   140010a14:	add    rdx,rcx
   140010a17:	lea    rcx,[rsp+0x68]
   140010a1c:	lea    rdx,[rax+rdx*8+0x10]
   140010a21:	call   QWORD PTR [rip+0x57e1]        # 0x140016208
   140010a27:	mov    rcx,QWORD PTR [rsp+0x40]
   140010a2c:	inc    ebp
   140010a2e:	mov    edi,DWORD PTR [rcx+0x8]
   140010a31:	mov    eax,DWORD PTR [rcx+0xc]
   140010a34:	sub    eax,edi
   140010a36:	cmp    ebp,eax
   140010a38:	jl     0x1400101a0
   140010a3e:	test   r15d,r15d
   140010a41:	jne    0x140010ca7
   140010a47:	mov    rax,QWORD PTR [rsp+0x30]
   140010a4c:	movsxd rdx,DWORD PTR [rax+0x8]
   140010a50:	mov    ecx,DWORD PTR [rax+0xc]
   140010a53:	sub    ecx,edx
   140010a55:	cmp    ecx,0x3
   140010a58:	je     0x140010f37
   140010a5e:	cmp    ecx,0x4
   140010a61:	je     0x140010f37
   140010a67:	mov    rcx,QWORD PTR [rip+0x55ea]        # 0x140016058
   140010a6e:	lea    rdx,[rip+0x6b43]        # 0x1400175b8
   140010a75:	call   0x1400016a0
   140010a7a:	mov    rdx,QWORD PTR [rip+0x55df]        # 0x140016060
   140010a81:	mov    rcx,rax
   140010a84:	call   QWORD PTR [rip+0x55de]        # 0x140016068
   140010a8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140010a8f:	mov    eax,DWORD PTR [rbx]
   140010a91:	test   eax,eax
   140010a93:	je     0x140010ab0
   140010a95:	cmp    eax,0xffffffff
   140010a98:	je     0x140010aeb
   140010a9a:	mov    eax,r13d
   140010a9d:	lock xadd DWORD PTR [rbx],eax
   140010aa1:	add    eax,0xffffffff
   140010aa4:	setne  al
   140010aa7:	test   al,al
   140010aa9:	jne    0x140010aeb
   140010aab:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ab0:	movsxd rax,DWORD PTR [rbx+0xc]
   140010ab4:	lea    rdi,[rbx+rax*8+0x10]
   140010ab9:	movsxd rax,DWORD PTR [rbx+0x8]
   140010abd:	lea    rsi,[rbx+rax*8+0x10]
   140010ac2:	cmp    rsi,rdi
   140010ac5:	je     0x140010ae2
   140010ac7:	nop    WORD PTR [rax+rax*1+0x0]
   140010ad0:	sub    rdi,0x8
   140010ad4:	mov    rcx,rdi
   140010ad7:	call   QWORD PTR [rip+0x5e5b]        # 0x140016938
   140010add:	cmp    rdi,rsi
   140010ae0:	jne    0x140010ad0
   140010ae2:	mov    rcx,rbx
   140010ae5:	call   QWORD PTR [rip+0x57bd]        # 0x1400162a8
   140010aeb:	lea    rcx,[rsp+0x70]
   140010af0:	call   QWORD PTR [rip+0x5e42]        # 0x140016938
   140010af6:	lea    rcx,[rsp+0x68]
   140010afb:	call   QWORD PTR [rip+0x5e37]        # 0x140016938
   140010b01:	lea    rcx,[rsp+0x50]
   140010b06:	call   QWORD PTR [rip+0x5e2c]        # 0x140016938
   140010b0c:	lea    rcx,[rsp+0x58]
   140010b11:	call   QWORD PTR [rip+0x5e21]        # 0x140016938
   140010b17:	lea    rcx,[rsp+0x80]
   140010b1f:	call   QWORD PTR [rip+0x5e13]        # 0x140016938
   140010b25:	mov    rbx,QWORD PTR [rsp+0x40]
   140010b2a:	mov    eax,DWORD PTR [rbx]
   140010b2c:	test   eax,eax
   140010b2e:	je     0x140010b52
   140010b30:	cmp    eax,0xffffffff
   140010b33:	je     0x14001011b
   140010b39:	lock xadd DWORD PTR [rbx],r13d
   140010b3e:	add    r13d,0xffffffff
   140010b42:	setne  al
   140010b45:	test   al,al
   140010b47:	jne    0x14001011b
   140010b4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010b52:	movsxd rax,DWORD PTR [rbx+0xc]
   140010b56:	lea    rdi,[rbx+rax*8+0x10]
   140010b5b:	movsxd rax,DWORD PTR [rbx+0x8]
   140010b5f:	lea    rsi,[rbx+rax*8+0x10]
   140010b64:	cmp    rsi,rdi
   140010b67:	je     0x140010112
   140010b6d:	nop    DWORD PTR [rax]
   140010b70:	sub    rdi,0x8
   140010b74:	mov    rcx,rdi
   140010b77:	call   QWORD PTR [rip+0x5dbb]        # 0x140016938
   140010b7d:	cmp    rdi,rsi
   140010b80:	jne    0x140010b70
   140010b82:	jmp    0x140010112
   140010b87:	mov    rcx,QWORD PTR [rip+0x54ca]        # 0x140016058
   140010b8e:	lea    rdx,[rip+0x6a0b]        # 0x1400175a0
   140010b95:	call   0x1400016a0
   140010b9a:	mov    rdx,QWORD PTR [rip+0x54bf]        # 0x140016060
   140010ba1:	mov    rcx,rax
   140010ba4:	call   QWORD PTR [rip+0x54be]        # 0x140016068
   140010baa:	mov    rbx,QWORD PTR [rsp+0x30]
   140010baf:	mov    eax,DWORD PTR [rbx]
   140010bb1:	test   eax,eax
   140010bb3:	je     0x140010bd0
   140010bb5:	cmp    eax,0xffffffff
   140010bb8:	je     0x140010c0b
   140010bba:	mov    eax,r13d
   140010bbd:	lock xadd DWORD PTR [rbx],eax
   140010bc1:	add    eax,0xffffffff
   140010bc4:	setne  al
   140010bc7:	test   al,al
   140010bc9:	jne    0x140010c0b
   140010bcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bd0:	movsxd rax,DWORD PTR [rbx+0xc]
   140010bd4:	lea    rdi,[rbx+rax*8+0x10]
   140010bd9:	movsxd rax,DWORD PTR [rbx+0x8]
   140010bdd:	lea    rsi,[rbx+rax*8+0x10]
   140010be2:	cmp    rsi,rdi
   140010be5:	je     0x140010c02
   140010be7:	nop    WORD PTR [rax+rax*1+0x0]
   140010bf0:	sub    rdi,0x8
   140010bf4:	mov    rcx,rdi
   140010bf7:	call   QWORD PTR [rip+0x5d3b]        # 0x140016938
   140010bfd:	cmp    rdi,rsi
   140010c00:	jne    0x140010bf0
   140010c02:	mov    rcx,rbx
   140010c05:	call   QWORD PTR [rip+0x569d]        # 0x1400162a8
   140010c0b:	lea    rcx,[rsp+0x70]
   140010c10:	call   QWORD PTR [rip+0x5d22]        # 0x140016938
   140010c16:	lea    rcx,[rsp+0x68]
   140010c1b:	call   QWORD PTR [rip+0x5d17]        # 0x140016938
   140010c21:	lea    rcx,[rsp+0x50]
   140010c26:	call   QWORD PTR [rip+0x5d0c]        # 0x140016938
   140010c2c:	lea    rcx,[rsp+0x58]
   140010c31:	call   QWORD PTR [rip+0x5d01]        # 0x140016938
   140010c37:	lea    rcx,[rsp+0x80]
   140010c3f:	call   QWORD PTR [rip+0x5cf3]        # 0x140016938
   140010c45:	mov    rbx,QWORD PTR [rsp+0x40]
   140010c4a:	mov    eax,DWORD PTR [rbx]
   140010c4c:	test   eax,eax
   140010c4e:	je     0x140010c72
   140010c50:	cmp    eax,0xffffffff
   140010c53:	je     0x14001011b
   140010c59:	lock xadd DWORD PTR [rbx],r13d
   140010c5e:	add    r13d,0xffffffff
   140010c62:	setne  al
   140010c65:	test   al,al
   140010c67:	jne    0x14001011b
   140010c6d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010c72:	movsxd rax,DWORD PTR [rbx+0xc]
   140010c76:	lea    rdi,[rbx+rax*8+0x10]
   140010c7b:	movsxd rax,DWORD PTR [rbx+0x8]
   140010c7f:	lea    rsi,[rbx+rax*8+0x10]
   140010c84:	cmp    rsi,rdi
   140010c87:	je     0x140010112
   140010c8d:	nop    DWORD PTR [rax]
   140010c90:	sub    rdi,0x8
   140010c94:	mov    rcx,rdi
   140010c97:	call   QWORD PTR [rip+0x5c9b]        # 0x140016938
   140010c9d:	cmp    rdi,rsi
   140010ca0:	jne    0x140010c90
   140010ca2:	jmp    0x140010112
   140010ca7:	cmp    r15d,0x1
   140010cab:	jne    0x140010d6e
   140010cb1:	mov    rax,QWORD PTR [rsp+0x30]
   140010cb6:	mov    ecx,DWORD PTR [rax+0xc]
   140010cb9:	sub    ecx,DWORD PTR [rax+0x8]
   140010cbc:	cmp    ecx,0x2
   140010cbf:	je     0x140010cca
   140010cc1:	cmp    ecx,0x3
   140010cc4:	jne    0x140010d8c
   140010cca:	mov    ecx,DWORD PTR [rax]
   140010ccc:	cmp    ecx,0x1
   140010ccf:	je     0x140010ce7
   140010cd1:	test   ecx,ecx
   140010cd3:	je     0x140010ce7
   140010cd5:	mov    edx,DWORD PTR [rax+0x4]
   140010cd8:	lea    rcx,[rsp+0x30]
   140010cdd:	call   0x140002d40
   140010ce2:	mov    rax,QWORD PTR [rsp+0x30]
   140010ce7:	movsxd rcx,DWORD PTR [rax+0x8]
   140010ceb:	lea    rdx,[rax+rcx*8+0x18]
   140010cf0:	lea    rcx,[rsp+0x6b0]
   140010cf8:	call   QWORD PTR [rip+0x5a7a]        # 0x140016778
   140010cfe:	lea    r14,[rip+0xc3d3]        # 0x14001d0d8
   140010d05:	mov    rdx,rax
   140010d08:	mov    rcx,r14
   140010d0b:	call   QWORD PTR [rip+0x54f7]        # 0x140016208
   140010d11:	lea    rcx,[rsp+0x6b0]
   140010d19:	call   QWORD PTR [rip+0x5c19]        # 0x140016938
   140010d1f:	mov    rdi,QWORD PTR [rsp+0x30]
   140010d24:	mov    eax,DWORD PTR [rdi+0xc]
   140010d27:	sub    eax,DWORD PTR [rdi+0x8]
   140010d2a:	cmp    eax,0x3
   140010d2d:	jne    0x140011148
   140010d33:	mov    eax,DWORD PTR [rdi]
   140010d35:	cmp    eax,0x1
   140010d38:	je     0x140010d50
   140010d3a:	test   eax,eax
   140010d3c:	je     0x140010d50
   140010d3e:	mov    edx,DWORD PTR [rdi+0x4]
   140010d41:	lea    rcx,[rsp+0x30]
   140010d46:	call   0x140002d40
   140010d4b:	mov    rdi,QWORD PTR [rsp+0x30]
   140010d50:	movsxd rax,DWORD PTR [rdi+0x8]
   140010d54:	lea    rcx,[rsp+0x50]
   140010d59:	lea    rdx,[rdi+rax*8+0x20]
   140010d5e:	call   QWORD PTR [rip+0x54a4]        # 0x140016208
   140010d64:	mov    rdi,QWORD PTR [rsp+0x30]
   140010d69:	jmp    0x140011148
   140010d6e:	mov    rdi,QWORD PTR [rsp+0x30]
   140010d73:	cmp    r15d,0x2
   140010d77:	jne    0x140011141
   140010d7d:	mov    eax,DWORD PTR [rdi+0xc]
   140010d80:	sub    eax,DWORD PTR [rdi+0x8]
   140010d83:	cmp    eax,0x1
   140010d86:	je     0x140011141
   140010d8c:	mov    rcx,QWORD PTR [rip+0x52c5]        # 0x140016058
   140010d93:	lea    rdx,[rip+0x681e]        # 0x1400175b8
   140010d9a:	call   0x1400016a0
   140010d9f:	mov    rdx,QWORD PTR [rip+0x52ba]        # 0x140016060
   140010da6:	mov    rcx,rax
   140010da9:	call   QWORD PTR [rip+0x52b9]        # 0x140016068
   140010daf:	lea    rcx,[rsp+0x30]
   140010db4:	call   0x140002910
   140010db9:	lea    rcx,[rsp+0x70]
   140010dbe:	call   QWORD PTR [rip+0x5b74]        # 0x140016938
   140010dc4:	lea    rcx,[rsp+0x68]
   140010dc9:	call   QWORD PTR [rip+0x5b69]        # 0x140016938
   140010dcf:	lea    rcx,[rsp+0x50]
   140010dd4:	call   QWORD PTR [rip+0x5b5e]        # 0x140016938
   140010dda:	lea    rcx,[rsp+0x58]
   140010ddf:	call   QWORD PTR [rip+0x5b53]        # 0x140016938
   140010de5:	lea    rcx,[rsp+0x80]
   140010ded:	call   QWORD PTR [rip+0x5b45]        # 0x140016938
   140010df3:	lea    rcx,[rsp+0x40]
   140010df8:	call   0x140002910
   140010dfd:	lea    rcx,[rsp+0x100]
   140010e05:	call   QWORD PTR [rip+0x5b75]        # 0x140016980
   140010e0b:	mov    eax,0x1
   140010e10:	jmp    0x140013c39
   140010e15:	mov    rcx,QWORD PTR [rip+0x523c]        # 0x140016058
   140010e1c:	lea    rdx,[rip+0x675d]        # 0x140017580
   140010e23:	call   0x1400016a0
   140010e28:	mov    rdx,QWORD PTR [rip+0x5231]        # 0x140016060
   140010e2f:	mov    rcx,rax
   140010e32:	call   QWORD PTR [rip+0x5230]        # 0x140016068
   140010e38:	mov    rbx,QWORD PTR [rsp+0x30]
   140010e3d:	mov    eax,DWORD PTR [rbx]
   140010e3f:	test   eax,eax
   140010e41:	je     0x140010e5e
   140010e43:	cmp    eax,0xffffffff
   140010e46:	je     0x140010e9b
   140010e48:	mov    eax,r13d
   140010e4b:	lock xadd DWORD PTR [rbx],eax
   140010e4f:	add    eax,0xffffffff
   140010e52:	setne  al
   140010e55:	test   al,al
   140010e57:	jne    0x140010e9b
   140010e59:	mov    rbx,QWORD PTR [rsp+0x30]
   140010e5e:	movsxd rax,DWORD PTR [rbx+0xc]
   140010e62:	lea    rdi,[rbx+rax*8+0x10]
   140010e67:	movsxd rax,DWORD PTR [rbx+0x8]
   140010e6b:	lea    rsi,[rbx+rax*8+0x10]
   140010e70:	cmp    rsi,rdi
   140010e73:	je     0x140010e92
   140010e75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140010e80:	sub    rdi,0x8
   140010e84:	mov    rcx,rdi
   140010e87:	call   QWORD PTR [rip+0x5aab]        # 0x140016938
   140010e8d:	cmp    rdi,rsi
   140010e90:	jne    0x140010e80
   140010e92:	mov    rcx,rbx
   140010e95:	call   QWORD PTR [rip+0x540d]        # 0x1400162a8
   140010e9b:	lea    rcx,[rsp+0x70]
   140010ea0:	call   QWORD PTR [rip+0x5a92]        # 0x140016938
   140010ea6:	lea    rcx,[rsp+0x68]
   140010eab:	call   QWORD PTR [rip+0x5a87]        # 0x140016938
   140010eb1:	lea    rcx,[rsp+0x50]
   140010eb6:	call   QWORD PTR [rip+0x5a7c]        # 0x140016938
   140010ebc:	lea    rcx,[rsp+0x58]
   140010ec1:	call   QWORD PTR [rip+0x5a71]        # 0x140016938
   140010ec7:	lea    rcx,[rsp+0x80]
   140010ecf:	call   QWORD PTR [rip+0x5a63]        # 0x140016938
   140010ed5:	mov    rbx,QWORD PTR [rsp+0x40]
   140010eda:	mov    eax,DWORD PTR [rbx]
   140010edc:	test   eax,eax
   140010ede:	je     0x140010f02
   140010ee0:	cmp    eax,0xffffffff
   140010ee3:	je     0x14001011b
   140010ee9:	lock xadd DWORD PTR [rbx],r13d
   140010eee:	add    r13d,0xffffffff
   140010ef2:	setne  al
   140010ef5:	test   al,al
   140010ef7:	jne    0x14001011b
   140010efd:	mov    rbx,QWORD PTR [rsp+0x40]
   140010f02:	movsxd rax,DWORD PTR [rbx+0xc]
   140010f06:	lea    rdi,[rbx+rax*8+0x10]
   140010f0b:	movsxd rax,DWORD PTR [rbx+0x8]
   140010f0f:	lea    rsi,[rbx+rax*8+0x10]
   140010f14:	cmp    rsi,rdi
   140010f17:	je     0x140010112
   140010f1d:	nop    DWORD PTR [rax]
   140010f20:	sub    rdi,0x8
   140010f24:	mov    rcx,rdi
   140010f27:	call   QWORD PTR [rip+0x5a0b]        # 0x140016938
   140010f2d:	cmp    rdi,rsi
   140010f30:	jne    0x140010f20
   140010f32:	jmp    0x140010112
   140010f37:	mov    ecx,DWORD PTR [rax]
   140010f39:	cmp    ecx,0x1
   140010f3c:	je     0x140011000
   140010f42:	test   ecx,ecx
   140010f44:	je     0x140011000
   140010f4a:	lea    rbx,[rax+rdx*8+0x10]
   140010f4f:	mov    edx,DWORD PTR [rax+0x4]
   140010f52:	lea    rcx,[rsp+0x30]
   140010f57:	call   QWORD PTR [rip+0x53c3]        # 0x140016320
   140010f5d:	mov    rbp,rax
   140010f60:	mov    rax,QWORD PTR [rsp+0x30]
   140010f65:	movsxd rcx,DWORD PTR [rax+0xc]
   140010f69:	lea    r14,[rax+rcx*8+0x10]
   140010f6e:	movsxd rcx,DWORD PTR [rax+0x8]
   140010f72:	lea    rdi,[rax+rcx*8+0x10]
   140010f77:	cmp    rdi,r14
   140010f7a:	je     0x140010fa3
   140010f7c:	nop    DWORD PTR [rax+0x0]
   140010f80:	test   rdi,rdi
   140010f83:	je     0x140010f91
   140010f85:	mov    rdx,rbx
   140010f88:	mov    rcx,rdi
   140010f8b:	call   QWORD PTR [rip+0x55af]        # 0x140016540
   140010f91:	add    rdi,0x8
   140010f95:	add    rbx,0x8
   140010f99:	cmp    rdi,r14
   140010f9c:	jne    0x140010f80
   140010f9e:	mov    rax,QWORD PTR [rsp+0x30]
   140010fa3:	mov    ecx,DWORD PTR [rbp+0x0]
   140010fa6:	test   ecx,ecx
   140010fa8:	je     0x140010fc1
   140010faa:	cmp    ecx,0xffffffff
   140010fad:	je     0x140011000
   140010faf:	mov    eax,r13d
   140010fb2:	lock xadd DWORD PTR [rbp+0x0],eax
   140010fb7:	add    eax,0xffffffff
   140010fba:	setne  al
   140010fbd:	test   al,al
   140010fbf:	jne    0x140010ffb
   140010fc1:	movsxd rax,DWORD PTR [rbp+0xc]
   140010fc5:	lea    rdi,[rbp+rax*8+0x10]
   140010fca:	movsxd rax,DWORD PTR [rbp+0x8]
   140010fce:	lea    rbx,[rbp+rax*8+0x10]
   140010fd3:	cmp    rbx,rdi
   140010fd6:	je     0x140010ff2
   140010fd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140010fe0:	sub    rdi,0x8
   140010fe4:	mov    rcx,rdi
   140010fe7:	call   QWORD PTR [rip+0x594b]        # 0x140016938
   140010fed:	cmp    rdi,rbx
   140010ff0:	jne    0x140010fe0
   140010ff2:	mov    rcx,rbp
   140010ff5:	call   QWORD PTR [rip+0x52ad]        # 0x1400162a8
   140010ffb:	mov    rax,QWORD PTR [rsp+0x30]
   140011000:	movsxd rcx,DWORD PTR [rax+0x8]
   140011004:	lea    rdx,[rax+rcx*8+0x18]
   140011009:	lea    rcx,[rsp+0x58]
   14001100e:	call   QWORD PTR [rip+0x51f4]        # 0x140016208
   140011014:	mov    rcx,QWORD PTR [rsp+0x30]
   140011019:	mov    eax,DWORD PTR [rcx]
   14001101b:	cmp    eax,0x1
   14001101e:	je     0x1400110e0
   140011024:	test   eax,eax
   140011026:	je     0x1400110e0
   14001102c:	movsxd rax,DWORD PTR [rcx+0x8]
   140011030:	mov    edx,DWORD PTR [rcx+0x4]
   140011033:	lea    rbx,[rcx+rax*8+0x10]
   140011038:	lea    rcx,[rsp+0x30]
   14001103d:	call   QWORD PTR [rip+0x52dd]        # 0x140016320
   140011043:	mov    rcx,QWORD PTR [rsp+0x30]
   140011048:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001104c:	mov    rbp,rax
   14001104f:	lea    r14,[rcx+rdx*8+0x10]
   140011054:	movsxd rdx,DWORD PTR [rcx+0x8]
   140011058:	lea    rdi,[rcx+rdx*8+0x10]
   14001105d:	cmp    rdi,r14
   140011060:	je     0x140011085
   140011062:	test   rdi,rdi
   140011065:	je     0x140011073
   140011067:	mov    rdx,rbx
   14001106a:	mov    rcx,rdi
   14001106d:	call   QWORD PTR [rip+0x54cd]        # 0x140016540
   140011073:	add    rdi,0x8
   140011077:	add    rbx,0x8
   14001107b:	cmp    rdi,r14
   14001107e:	jne    0x140011062
   140011080:	mov    rcx,QWORD PTR [rsp+0x30]
   140011085:	mov    eax,DWORD PTR [rbp+0x0]
   140011088:	test   eax,eax
   14001108a:	je     0x1400110a3
   14001108c:	cmp    eax,0xffffffff
   14001108f:	je     0x1400110e0
   140011091:	mov    eax,r13d
   140011094:	lock xadd DWORD PTR [rbp+0x0],eax
   140011099:	add    eax,0xffffffff
   14001109c:	setne  al
   14001109f:	test   al,al
   1400110a1:	jne    0x1400110db
   1400110a3:	movsxd rax,DWORD PTR [rbp+0xc]
   1400110a7:	lea    rdi,[rbp+rax*8+0x10]
   1400110ac:	movsxd rax,DWORD PTR [rbp+0x8]
   1400110b0:	lea    rbx,[rbp+rax*8+0x10]
   1400110b5:	cmp    rbx,rdi
   1400110b8:	je     0x1400110d2
   1400110ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400110c0:	sub    rdi,0x8
   1400110c4:	mov    rcx,rdi
   1400110c7:	call   QWORD PTR [rip+0x586b]        # 0x140016938
   1400110cd:	cmp    rdi,rbx
   1400110d0:	jne    0x1400110c0
   1400110d2:	mov    rcx,rbp
   1400110d5:	call   QWORD PTR [rip+0x51cd]        # 0x1400162a8
   1400110db:	mov    rcx,QWORD PTR [rsp+0x30]
   1400110e0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400110e4:	lea    rdx,[rcx+rax*8+0x20]
   1400110e9:	lea    rcx,[rsp+0x50]
   1400110ee:	call   QWORD PTR [rip+0x5114]        # 0x140016208
   1400110f4:	mov    rdi,QWORD PTR [rsp+0x30]
   1400110f9:	mov    eax,DWORD PTR [rdi+0xc]
   1400110fc:	sub    eax,DWORD PTR [rdi+0x8]
   1400110ff:	cmp    eax,0x4
   140011102:	jl     0x140011141
   140011104:	mov    eax,DWORD PTR [rdi]
   140011106:	cmp    eax,0x1
   140011109:	je     0x140011121
   14001110b:	test   eax,eax
   14001110d:	je     0x140011121
   14001110f:	mov    edx,DWORD PTR [rdi+0x4]
   140011112:	lea    rcx,[rsp+0x30]
   140011117:	call   0x140002d40
   14001111c:	mov    rdi,QWORD PTR [rsp+0x30]
   140011121:	movsxd rax,DWORD PTR [rdi+0x8]
   140011125:	lea    r14,[rip+0xbfac]        # 0x14001d0d8
   14001112c:	lea    rdx,[rdi+rax*8+0x28]
   140011131:	mov    rcx,r14
   140011134:	call   QWORD PTR [rip+0x50ce]        # 0x140016208
   14001113a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001113f:	jmp    0x140011148
   140011141:	lea    r14,[rip+0xbf90]        # 0x14001d0d8
   140011148:	mov    eax,DWORD PTR [rdi]
   14001114a:	test   eax,eax
   14001114c:	je     0x140011169
   14001114e:	cmp    eax,0xffffffff
   140011151:	je     0x14001119b
   140011153:	mov    eax,r13d
   140011156:	lock xadd DWORD PTR [rdi],eax
   14001115a:	add    eax,0xffffffff
   14001115d:	setne  al
   140011160:	test   al,al
   140011162:	jne    0x14001119b
   140011164:	mov    rdi,QWORD PTR [rsp+0x30]
   140011169:	movsxd rax,DWORD PTR [rdi+0xc]
   14001116d:	lea    rbx,[rdi+rax*8+0x10]
   140011172:	movsxd rax,DWORD PTR [rdi+0x8]
   140011176:	lea    rbp,[rdi+rax*8+0x10]
   14001117b:	cmp    rbp,rbx
   14001117e:	je     0x140011192
   140011180:	sub    rbx,0x8
   140011184:	mov    rcx,rbx
   140011187:	call   QWORD PTR [rip+0x57ab]        # 0x140016938
   14001118d:	cmp    rbx,rbp
   140011190:	jne    0x140011180
   140011192:	mov    rcx,rdi
   140011195:	call   QWORD PTR [rip+0x510d]        # 0x1400162a8
   14001119b:	lea    rcx,[rsp+0x158]
   1400111a3:	xor    edx,edx
   1400111a5:	call   QWORD PTR [rip+0x5905]        # 0x140016ab0
   1400111ab:	mov    rdx,QWORD PTR [rip+0xbf26]        # 0x14001d0d8
   1400111b2:	cmp    DWORD PTR [rdx+0x4],esi
   1400111b5:	je     0x14001122e
   1400111b7:	lea    rcx,[rsp+0x228]
   1400111bf:	call   QWORD PTR [rip+0x55ab]        # 0x140016770
   1400111c5:	lea    rcx,[rsp+0x228]
   1400111cd:	mov    rdx,r14
   1400111d0:	call   QWORD PTR [rip+0x5592]        # 0x140016768
   1400111d6:	lea    rdx,[rsp+0x330]
   1400111de:	lea    rcx,[rsp+0x228]
   1400111e6:	call   QWORD PTR [rip+0x5574]        # 0x140016760
   1400111ec:	mov    rcx,r14
   1400111ef:	mov    rdx,rax
   1400111f2:	call   QWORD PTR [rip+0x5010]        # 0x140016208
   1400111f8:	lea    rcx,[rsp+0x330]
   140011200:	call   QWORD PTR [rip+0x5732]        # 0x140016938
   140011206:	mov    rcx,r14
   140011209:	call   QWORD PTR [rip+0x5549]        # 0x140016758
   14001120f:	lea    rcx,[rsp+0x158]
   140011217:	mov    rdx,r14
   14001121a:	call   QWORD PTR [rip+0x5888]        # 0x140016aa8
   140011220:	lea    rcx,[rsp+0x228]
   140011228:	call   QWORD PTR [rip+0x5322]        # 0x140016550
   14001122e:	mov    rax,QWORD PTR [rip+0x4feb]        # 0x140016220
   140011235:	lea    rcx,[rsp+0xc0]
   14001123d:	mov    QWORD PTR [rsp+0x98],rax
   140011245:	call   QWORD PTR [rip+0x4fb5]        # 0x140016200
   14001124b:	mov    rdx,QWORD PTR [rsp+0x70]
   140011250:	cmp    DWORD PTR [rdx+0x4],esi
   140011253:	je     0x14001150b
   140011259:	lea    rdx,[rsp+0x70]
   14001125e:	lea    rcx,[rsp+0xb0]
   140011266:	call   0x140014ce0
   14001126b:	mov    rbx,QWORD PTR [rsp+0xb0]
   140011273:	mov    eax,DWORD PTR [rbx+0x8]
   140011276:	cmp    DWORD PTR [rbx+0xc],eax
   140011279:	je     0x1400114af
   14001127f:	xor    eax,eax
   140011281:	lea    rdi,[rip+0x62e0]        # 0x140017568
   140011288:	mov    rcx,r13
   14001128b:	repnz scas al,BYTE PTR es:[rdi]
   14001128d:	not    rcx
   140011290:	lea    rdx,[rcx-0x1]
   140011294:	lea    rcx,[rip+0x62cd]        # 0x140017568
   14001129b:	call   QWORD PTR [rip+0x562f]        # 0x1400168d0
   1400112a1:	lea    rdx,[rsp+0x2c8]
   1400112a9:	lea    rcx,[rsp+0x308]
   1400112b1:	mov    r8d,esi
   1400112b4:	mov    DWORD PTR [rsp+0x470],esi
   1400112bb:	mov    QWORD PTR [rsp+0x2c8],rax
   1400112c3:	call   QWORD PTR [rip+0x5487]        # 0x140016750
   1400112c9:	lea    rcx,[rsp+0x2c8]
   1400112d1:	call   QWORD PTR [rip+0x5661]        # 0x140016938
   1400112d7:	mov    rax,QWORD PTR [rsp+0xb0]
   1400112df:	mov    DWORD PTR [rsp+0x730],esi
   1400112e6:	mov    ecx,DWORD PTR [rax]
   1400112e8:	cmp    ecx,0x1
   1400112eb:	je     0x140011309
   1400112ed:	test   ecx,ecx
   1400112ef:	je     0x140011309
   1400112f1:	mov    edx,DWORD PTR [rax+0x4]
   1400112f4:	lea    rcx,[rsp+0xb0]
   1400112fc:	call   0x140002d40
   140011301:	mov    rax,QWORD PTR [rsp+0xb0]
   140011309:	movsxd rcx,DWORD PTR [rax+0x8]
   14001130d:	lea    rdx,[rsp+0x150]
   140011315:	xor    r9d,r9d
   140011318:	lea    r8,[rax+rcx*8+0x18]
   14001131d:	lea    rcx,[rsp+0x308]
   140011325:	mov    DWORD PTR [rsp+0x28],esi
   140011329:	mov    DWORD PTR [rsp+0x20],esi
   14001132d:	call   QWORD PTR [rip+0x5415]        # 0x140016748
   140011333:	lea    rcx,[rsp+0x150]
   14001133b:	call   QWORD PTR [rip+0x53ff]        # 0x140016740
   140011341:	test   al,al
   140011343:	je     0x140011449
   140011349:	nop    DWORD PTR [rax+0x0]
   140011350:	lea    rdx,[rsp+0x220]
   140011358:	lea    rcx,[rsp+0x150]
   140011360:	call   QWORD PTR [rip+0x53d2]        # 0x140016738
   140011366:	lea    rdx,[rsp+0x6b8]
   14001136e:	lea    rcx,[rsp+0x220]
   140011376:	mov    r8d,0x1
   14001137c:	call   QWORD PTR [rip+0x53ae]        # 0x140016730
   140011382:	lea    rdx,[rsp+0x350]
   14001138a:	lea    rcx,[rsp+0x220]
   140011392:	mov    r8d,0x1
   140011398:	call   QWORD PTR [rip+0x5392]        # 0x140016730
   14001139e:	mov    rcx,QWORD PTR [rsp+0x98]
   1400113a6:	mov    edx,DWORD PTR [rcx]
   1400113a8:	mov    rdi,rax
   1400113ab:	cmp    edx,0x1
   1400113ae:	je     0x1400113df
   1400113b0:	test   edx,edx
   1400113b2:	je     0x1400113df
   1400113b4:	lea    rcx,[rsp+0x98]
   1400113bc:	mov    edx,0x7fffffff
   1400113c1:	mov    r8d,0x1
   1400113c7:	call   0x140002c00
   1400113cc:	test   rax,rax
   1400113cf:	je     0x140011409
   1400113d1:	mov    rdx,rdi
   1400113d4:	mov    rcx,rax
   1400113d7:	call   QWORD PTR [rip+0x5163]        # 0x140016540
   1400113dd:	jmp    0x140011409
   1400113df:	lea    rcx,[rsp+0x5f8]
   1400113e7:	mov    rdx,rax
   1400113ea:	call   QWORD PTR [rip+0x5150]        # 0x140016540
   1400113f0:	lea    rcx,[rsp+0x98]
   1400113f8:	call   QWORD PTR [rip+0x4f82]        # 0x140016380
   1400113fe:	mov    rcx,QWORD PTR [rsp+0x5f8]
   140011406:	mov    QWORD PTR [rax],rcx
   140011409:	lea    rcx,[rsp+0x350]
   140011411:	call   QWORD PTR [rip+0x5521]        # 0x140016938
   140011417:	lea    rcx,[rsp+0x6b8]
   14001141f:	call   QWORD PTR [rip+0x5513]        # 0x140016938
   140011425:	lea    rcx,[rsp+0x220]
   14001142d:	call   QWORD PTR [rip+0x52f5]        # 0x140016728
   140011433:	lea    rcx,[rsp+0x150]
   14001143b:	call   QWORD PTR [rip+0x52ff]        # 0x140016740
   140011441:	test   al,al
   140011443:	jne    0x140011350
   140011449:	mov    rax,QWORD PTR [rsp+0xb0]
   140011451:	mov    ecx,DWORD PTR [rax]
   140011453:	cmp    ecx,0x1
   140011456:	je     0x140011474
   140011458:	test   ecx,ecx
   14001145a:	je     0x140011474
   14001145c:	mov    edx,DWORD PTR [rax+0x4]
   14001145f:	lea    rcx,[rsp+0xb0]
   140011467:	call   0x140002d40
   14001146c:	mov    rax,QWORD PTR [rsp+0xb0]
   140011474:	movsxd rcx,DWORD PTR [rax+0x8]
   140011478:	lea    rdx,[rax+rcx*8+0x20]
   14001147d:	lea    rcx,[rsp+0xc0]
   140011485:	call   QWORD PTR [rip+0x4d7d]        # 0x140016208
   14001148b:	lea    rcx,[rsp+0x150]
   140011493:	call   QWORD PTR [rip+0x5287]        # 0x140016720
   140011499:	lea    rcx,[rsp+0x308]
   1400114a1:	call   QWORD PTR [rip+0x5271]        # 0x140016718
   1400114a7:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400114af:	mov    eax,DWORD PTR [rbx]
   1400114b1:	test   eax,eax
   1400114b3:	je     0x1400114d3
   1400114b5:	cmp    eax,0xffffffff
   1400114b8:	je     0x14001150b
   1400114ba:	mov    eax,r13d
   1400114bd:	lock xadd DWORD PTR [rbx],eax
   1400114c1:	add    eax,0xffffffff
   1400114c4:	setne  al
   1400114c7:	test   al,al
   1400114c9:	jne    0x14001150b
   1400114cb:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400114d3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400114d7:	lea    rdi,[rbx+rax*8+0x10]
   1400114dc:	movsxd rax,DWORD PTR [rbx+0x8]
   1400114e0:	lea    rbp,[rbx+rax*8+0x10]
   1400114e5:	cmp    rbp,rdi
   1400114e8:	je     0x140011502
   1400114ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400114f0:	sub    rdi,0x8
   1400114f4:	mov    rcx,rdi
   1400114f7:	call   QWORD PTR [rip+0x543b]        # 0x140016938
   1400114fd:	cmp    rdi,rbp
   140011500:	jne    0x1400114f0
   140011502:	mov    rcx,rbx
   140011505:	call   QWORD PTR [rip+0x4d9d]        # 0x1400162a8
   14001150b:	mov    rax,QWORD PTR [rsp+0x58]
   140011510:	cmp    DWORD PTR [rax+0x4],esi
   140011513:	je     0x140011524
   140011515:	mov    rax,QWORD PTR [rsp+0x50]
   14001151a:	cmp    DWORD PTR [rax+0x4],esi
   14001151d:	je     0x140011524
   14001151f:	mov    dil,0x1
   140011522:	jmp    0x140011527
   140011524:	xor    dil,dil
   140011527:	mov    rcx,QWORD PTR [rip+0x4cf2]        # 0x140016220
   14001152e:	mov    rax,QWORD PTR [rsp+0x68]
   140011533:	mov    QWORD PTR [rsp+0x78],rcx
   140011538:	cmp    DWORD PTR [rax+0x4],esi
   14001153b:	je     0x1400115f0
   140011541:	mov    QWORD PTR [rsp+0x118],rcx
   140011549:	mov    eax,DWORD PTR [rcx]
   14001154b:	or     r12d,0x4
   14001154f:	cmp    eax,0x1
   140011552:	je     0x140011585
   140011554:	test   eax,eax
   140011556:	je     0x140011585
   140011558:	lea    rcx,[rsp+0x118]
   140011560:	mov    edx,0x7fffffff
   140011565:	mov    r8d,0x1
   14001156b:	call   0x140002c00
   140011570:	test   rax,rax
   140011573:	je     0x1400115b1
   140011575:	lea    rdx,[rsp+0x58]
   14001157a:	mov    rcx,rax
   14001157d:	call   QWORD PTR [rip+0x4fbd]        # 0x140016540
   140011583:	jmp    0x1400115b1
   140011585:	lea    rdx,[rsp+0x58]
   14001158a:	lea    rcx,[rsp+0x370]
   140011592:	call   QWORD PTR [rip+0x4fa8]        # 0x140016540
   140011598:	lea    rcx,[rsp+0x118]
   1400115a0:	call   QWORD PTR [rip+0x4dda]        # 0x140016380
   1400115a6:	mov    rcx,QWORD PTR [rsp+0x370]
   1400115ae:	mov    QWORD PTR [rax],rcx
   1400115b1:	lea    r8,[rsp+0x118]
   1400115b9:	lea    rdx,[rsp+0x78]
   1400115be:	lea    rcx,[rsp+0x68]
   1400115c3:	call   0x140007350
   1400115c8:	test   al,al
   1400115ca:	jne    0x1400115d6
   1400115cc:	test   dil,dil
   1400115cf:	je     0x1400115d6
   1400115d1:	mov    dil,0x1
   1400115d4:	jmp    0x1400115d9
   1400115d6:	xor    dil,dil
   1400115d9:	test   r12b,0x4
   1400115dd:	je     0x1400115f0
   1400115df:	lea    rcx,[rsp+0x118]
   1400115e7:	and    r12d,0xfffffffb
   1400115eb:	call   0x140002910
   1400115f0:	test   dil,dil
   1400115f3:	je     0x140011611
   1400115f5:	lea    r9,[rsp+0x78]
   1400115fa:	lea    r8,[rsp+0x50]
   1400115ff:	lea    rdx,[rsp+0x58]
   140011604:	lea    rcx,[rsp+0x158]
   14001160c:	call   0x140007500
   140011611:	lea    rcx,[rsp+0x78]
   140011616:	call   0x140008ce0
   14001161b:	lea    rcx,[rsp+0x1f8]
   140011623:	mov    dl,0x20
   140011625:	call   QWORD PTR [rip+0x52ed]        # 0x140016918
   14001162b:	lea    rcx,[rsp+0x20e]
   140011633:	mov    dl,0x20
   140011635:	mov    rbx,rax
   140011638:	call   QWORD PTR [rip+0x52da]        # 0x140016918
   14001163e:	lea    rdx,[rip+0x5f0b]        # 0x140017550
   140011645:	lea    rcx,[rsp+0x390]
   14001164d:	mov    r8d,r13d
   140011650:	mov    rdi,rax
   140011653:	call   QWORD PTR [rip+0x50b7]        # 0x140016710
   140011659:	movzx  edx,WORD PTR [rdi]
   14001165c:	xor    r9d,r9d
   14001165f:	mov    WORD PTR [rsp+0x28],dx
   140011664:	lea    rdx,[rsp+0x608]
   14001166c:	lea    r8d,[r9+0x2]
   140011670:	mov    rcx,rax
   140011673:	mov    DWORD PTR [rsp+0x20],0xa
   14001167b:	call   QWORD PTR [rip+0x5087]        # 0x140016708
   140011681:	xor    r9d,r9d
   140011684:	lea    rdx,[rsp+0xb8]
   14001168c:	mov    rcx,rax
   14001168f:	movzx  eax,WORD PTR [rbx]
   140011692:	lea    r8d,[r9+0x2]
   140011696:	mov    WORD PTR [rsp+0x28],ax
   14001169b:	mov    DWORD PTR [rsp+0x20],0xa
   1400116a3:	call   QWORD PTR [rip+0x505f]        # 0x140016708
   1400116a9:	lea    rcx,[rsp+0x608]
   1400116b1:	call   QWORD PTR [rip+0x5281]        # 0x140016938
   1400116b7:	lea    rcx,[rsp+0x390]
   1400116bf:	call   QWORD PTR [rip+0x5273]        # 0x140016938
   1400116c5:	lea    rdx,[rsp+0xd8]
   1400116cd:	lea    rcx,[rsp+0xb8]
   1400116d5:	call   QWORD PTR [rip+0x4e3d]        # 0x140016518
   1400116db:	mov    rdx,QWORD PTR [rsp+0x78]
   1400116e0:	mov    QWORD PTR [rsp+0x190],rdx
   1400116e8:	mov    eax,DWORD PTR [rdx]
   1400116ea:	test   eax,eax
   1400116ec:	je     0x1400116f9
   1400116ee:	cmp    eax,0xffffffff
   1400116f1:	je     0x14001175e
   1400116f3:	lock add DWORD PTR [rdx],0x1
   1400116f7:	jmp    0x14001175e
   1400116f9:	mov    edx,DWORD PTR [rdx+0x4]
   1400116fc:	lea    rcx,[rsp+0x190]
   140011704:	call   QWORD PTR [rip+0x4c16]        # 0x140016320
   14001170a:	mov    rdx,QWORD PTR [rsp+0x78]
   14001170f:	lea    rcx,[rsp+0x190]
   140011717:	movsxd rax,DWORD PTR [rdx+0x8]
   14001171b:	lea    rbx,[rdx+rax*8+0x10]
   140011720:	call   QWORD PTR [rip+0x4f4a]        # 0x140016670
   140011726:	lea    rcx,[rsp+0x190]
   14001172e:	mov    rbp,rax
   140011731:	call   QWORD PTR [rip+0x4f41]        # 0x140016678
   140011737:	mov    rdi,rax
   14001173a:	cmp    rax,rbp
   14001173d:	je     0x14001175e
   14001173f:	nop
   140011740:	test   rdi,rdi
   140011743:	je     0x140011751
   140011745:	mov    rdx,rbx
   140011748:	mov    rcx,rdi
   14001174b:	call   QWORD PTR [rip+0x4def]        # 0x140016540
   140011751:	add    rdi,0x8
   140011755:	add    rbx,0x8
   140011759:	cmp    rdi,rbp
   14001175c:	jne    0x140011740
   14001175e:	lea    rcx,[rsp+0x190]
   140011766:	mov    DWORD PTR [rsp+0x198],esi
   14001176d:	call   QWORD PTR [rip+0x4f05]        # 0x140016678
   140011773:	lea    rcx,[rsp+0x190]
   14001177b:	mov    QWORD PTR [rsp+0x1a0],rax
   140011783:	call   QWORD PTR [rip+0x4ee7]        # 0x140016670
   140011789:	mov    rdi,QWORD PTR [rsp+0x1a0]
   140011791:	mov    edx,DWORD PTR [rsp+0x198]
   140011798:	mov    QWORD PTR [rsp+0x1a8],rax
   1400117a0:	mov    ecx,edx
   1400117a2:	inc    edx
   1400117a4:	mov    DWORD PTR [rsp+0x198],edx
   1400117ab:	test   ecx,ecx
   1400117ad:	jne    0x140011834
   1400117b3:	cmp    rdi,rax
   1400117b6:	je     0x140011834
   1400117b8:	test   edx,edx
   1400117ba:	je     0x140011813
   1400117bc:	lea    rdx,[rip+0x5d7d]        # 0x140017540
   1400117c3:	lea    rcx,[rsp+0xd8]
   1400117cb:	call   QWORD PTR [rip+0x4c67]        # 0x140016438
   1400117d1:	lea    rdx,[rsp+0x688]
   1400117d9:	mov    rcx,rdi
   1400117dc:	call   QWORD PTR [rip+0x4d36]        # 0x140016518
   1400117e2:	lea    rcx,[rsp+0xd8]
   1400117ea:	mov    rdx,rax
   1400117ed:	call   QWORD PTR [rip+0x4c35]        # 0x140016428
   1400117f3:	lea    rcx,[rsp+0x688]
   1400117fb:	call   QWORD PTR [rip+0x4a77]        # 0x140016278
   140011801:	mov    edx,DWORD PTR [rsp+0x198]
   140011808:	dec    edx
   14001180a:	mov    DWORD PTR [rsp+0x198],edx
   140011811:	jmp    0x1400117b8
   140011813:	mov    rdi,QWORD PTR [rsp+0x1a0]
   14001181b:	mov    rax,QWORD PTR [rsp+0x1a8]
   140011823:	add    rdi,0x8
   140011827:	mov    QWORD PTR [rsp+0x1a0],rdi
   14001182f:	jmp    0x1400117a0
   140011834:	lea    rcx,[rsp+0x190]
   14001183c:	call   0x140002910
   140011841:	lea    rdx,[rip+0x5ce8]        # 0x140017530
   140011848:	lea    rcx,[rsp+0xd8]
   140011850:	call   QWORD PTR [rip+0x4be2]        # 0x140016438
   140011856:	lea    rdx,[rsp+0x158]
   14001185e:	lea    rcx,[rsp+0x120]
   140011866:	xor    r8d,r8d
   140011869:	call   QWORD PTR [rip+0x51a9]        # 0x140016a18
   14001186f:	lea    rax,[rip+0x5ca2]        # 0x140017518
   140011876:	lea    rdx,[rsp+0x2d8]
   14001187e:	lea    rcx,[rsp+0x778]
   140011886:	mov    QWORD PTR [rsp+0x780],rax
   14001188e:	mov    QWORD PTR [rsp+0x778],r14
   140011896:	call   0x140002150
   14001189b:	lea    rdx,[rsp+0x2d8]
   1400118a3:	lea    rcx,[rsp+0x3b0]
   1400118ab:	call   QWORD PTR [rip+0x4e4f]        # 0x140016700
   1400118b1:	lea    rdx,[rsp+0xd8]
   1400118b9:	lea    rcx,[rsp+0x120]
   1400118c1:	mov    r8,rax
   1400118c4:	call   QWORD PTR [rip+0x50c6]        # 0x140016990
   1400118ca:	lea    rcx,[rsp+0x3b0]
   1400118d2:	call   QWORD PTR [rip+0x4d50]        # 0x140016628
   1400118d8:	lea    rcx,[rsp+0x2d8]
   1400118e0:	call   QWORD PTR [rip+0x5052]        # 0x140016938
   1400118e6:	lea    rcx,[rsp+0x120]
   1400118ee:	xor    edx,edx
   1400118f0:	call   QWORD PTR [rip+0x5132]        # 0x140016a28
   1400118f6:	lea    rdx,[rsp+0x618]
   1400118fe:	lea    rcx,[rsp+0x120]
   140011906:	call   QWORD PTR [rip+0x508c]        # 0x140016998
   14001190c:	mov    rcx,rax
   14001190f:	call   QWORD PTR [rip+0x4de3]        # 0x1400166f8
   140011915:	lea    rcx,[rsp+0x618]
   14001191d:	test   al,al
   14001191f:	sete   dil
   140011923:	call   0x140002a60
   140011928:	lea    rcx,[rsp+0x120]
   140011930:	test   dil,dil
   140011933:	je     0x140011ba8
   140011939:	lea    rdx,[rsp+0x3d0]
   140011941:	call   QWORD PTR [rip+0x5051]        # 0x140016998
   140011947:	lea    rcx,[rsp+0x1b0]
   14001194f:	mov    rdx,rax
   140011952:	call   0x140002e80
   140011957:	lea    rcx,[rsp+0x1b0]
   14001195f:	mov    DWORD PTR [rsp+0x1b8],esi
   140011966:	call   QWORD PTR [rip+0x4d0c]        # 0x140016678
   14001196c:	lea    rcx,[rsp+0x1b0]
   140011974:	mov    QWORD PTR [rsp+0x1c0],rax
   14001197c:	call   QWORD PTR [rip+0x4cee]        # 0x140016670
   140011982:	lea    rcx,[rsp+0x3d0]
   14001198a:	mov    QWORD PTR [rsp+0x1c8],rax
   140011992:	call   0x140002a60
   140011997:	nop    WORD PTR [rax+rax*1+0x0]
   1400119a0:	mov    eax,DWORD PTR [rsp+0x1b8]
   1400119a7:	inc    DWORD PTR [rsp+0x1b8]
   1400119ae:	test   eax,eax
   1400119b0:	jne    0x1400119c9
   1400119b2:	mov    rax,QWORD PTR [rsp+0x1c8]
   1400119ba:	cmp    QWORD PTR [rsp+0x1c0],rax
   1400119c2:	je     0x1400119c9
   1400119c4:	mov    dil,0x1
   1400119c7:	jmp    0x1400119cc
   1400119c9:	xor    dil,dil
   1400119cc:	test   r12b,0x10
   1400119d0:	je     0x1400119e3
   1400119d2:	lea    rcx,[rsp+0x5e0]
   1400119da:	and    r12d,0xffffffef
   1400119de:	call   0x140002a60
   1400119e3:	test   dil,dil
   1400119e6:	je     0x140011ae2
   1400119ec:	mov    rbx,QWORD PTR [rsp+0x1c0]
   1400119f4:	test   r12b,0x20
   1400119f8:	je     0x140011a10
   1400119fa:	and    r12d,0xffffffdf
   1400119fe:	lea    rcx,[rsp+0x670]
   140011a06:	call   0x140002a60
   140011a0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011a10:	mov    edi,DWORD PTR [rsp+0x1b8]
   140011a17:	test   r12b,r12b
   140011a1a:	jns    0x140011a2e
   140011a1c:	lea    rcx,[rsp+0x320]
   140011a24:	btr    r12d,0x7
   140011a29:	call   0x140002a60
   140011a2e:	test   edi,edi
   140011a30:	je     0x140011abe
   140011a36:	lea    rdx,[rsp+0x3f0]
   140011a3e:	mov    rcx,rbx
   140011a41:	call   QWORD PTR [rip+0x4f59]        # 0x1400169a0
   140011a47:	lea    rdx,[rsp+0x708]
   140011a4f:	mov    rcx,rax
   140011a52:	call   QWORD PTR [rip+0x4868]        # 0x1400162c0
   140011a58:	mov    rcx,rax
   140011a5b:	call   QWORD PTR [rip+0x4eef]        # 0x140016950
   140011a61:	mov    rcx,QWORD PTR [rip+0x45f0]        # 0x140016058
   140011a68:	mov    rdx,rax
   140011a6b:	call   0x1400016a0
   140011a70:	mov    rdx,QWORD PTR [rip+0x45e9]        # 0x140016060
   140011a77:	mov    rcx,rax
   140011a7a:	call   QWORD PTR [rip+0x45e8]        # 0x140016068
   140011a80:	lea    rcx,[rsp+0x708]
   140011a88:	call   QWORD PTR [rip+0x47ea]        # 0x140016278
   140011a8e:	lea    rcx,[rsp+0x3f0]
   140011a96:	call   QWORD PTR [rip+0x4e9c]        # 0x140016938
   140011a9c:	dec    DWORD PTR [rsp+0x1b8]
   140011aa3:	test   r12b,0x40
   140011aa7:	je     0x140011a10
   140011aad:	and    r12d,0xffffffbf
   140011ab1:	lea    rcx,[rsp+0x340]
   140011ab9:	jmp    0x140011a06
   140011abe:	add    QWORD PTR [rsp+0x1c0],0x8
   140011ac7:	test   r12b,0x8
   140011acb:	je     0x1400119a0
   140011ad1:	and    r12d,0xfffffff7
   140011ad5:	lea    rcx,[rsp+0x360]
   140011add:	jmp    0x140011992
   140011ae2:	lea    rcx,[rsp+0x1b0]
   140011aea:	call   0x140002a60
   140011aef:	lea    rcx,[rsp+0x120]
   140011af7:	call   QWORD PTR [rip+0x4f23]        # 0x140016a20
   140011afd:	lea    rcx,[rsp+0xd8]
   140011b05:	call   QWORD PTR [rip+0x476d]        # 0x140016278
   140011b0b:	lea    rcx,[rsp+0xb8]
   140011b13:	call   QWORD PTR [rip+0x4e1f]        # 0x140016938
   140011b19:	lea    rcx,[rsp+0x78]
   140011b1e:	call   0x140002910
   140011b23:	lea    rcx,[rsp+0xc0]
   140011b2b:	call   QWORD PTR [rip+0x4e07]        # 0x140016938
   140011b31:	lea    rcx,[rsp+0x98]
   140011b39:	call   0x140002910
   140011b3e:	lea    rcx,[rsp+0x158]
   140011b46:	call   QWORD PTR [rip+0x4e5c]        # 0x1400169a8
   140011b4c:	lea    rcx,[rsp+0x70]
   140011b51:	call   QWORD PTR [rip+0x4de1]        # 0x140016938
   140011b57:	lea    rcx,[rsp+0x68]
   140011b5c:	call   QWORD PTR [rip+0x4dd6]        # 0x140016938
   140011b62:	lea    rcx,[rsp+0x50]
   140011b67:	call   QWORD PTR [rip+0x4dcb]        # 0x140016938
   140011b6d:	lea    rcx,[rsp+0x58]
   140011b72:	call   QWORD PTR [rip+0x4dc0]        # 0x140016938
   140011b78:	lea    rcx,[rsp+0x80]
   140011b80:	call   QWORD PTR [rip+0x4db2]        # 0x140016938
   140011b86:	lea    rcx,[rsp+0x40]
   140011b8b:	call   0x140002910
   140011b90:	lea    rcx,[rsp+0x100]
   140011b98:	call   QWORD PTR [rip+0x4de2]        # 0x140016980
   140011b9e:	mov    eax,0x3
   140011ba3:	jmp    0x140013c39
   140011ba8:	call   QWORD PTR [rip+0x4e72]        # 0x140016a20
   140011bae:	lea    rcx,[rsp+0xd8]
   140011bb6:	call   QWORD PTR [rip+0x46bc]        # 0x140016278
   140011bbc:	mov    rdx,QWORD PTR [rip+0x4665]        # 0x140016228
   140011bc3:	mov    rax,QWORD PTR [rip+0x4656]        # 0x140016220
   140011bca:	mov    QWORD PTR [rsp+0x1e0],rax
   140011bd2:	mov    QWORD PTR [rsp+0x38],rdx
   140011bd7:	mov    QWORD PTR [rsp+0x48],rdx
   140011bdc:	lea    rax,[rsp+0x1e0]
   140011be4:	lea    r9,[rsp+0x48]
   140011be9:	lea    r8,[rsp+0x38]
   140011bee:	lea    rdx,[rsp+0x158]
   140011bf6:	lea    rcx,[rsp+0x60]
   140011bfb:	mov    QWORD PTR [rsp+0x20],rax
   140011c00:	call   0x14000db50
   140011c05:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011c0d:	mov    eax,DWORD PTR [rcx]
   140011c0f:	test   eax,eax
   140011c11:	je     0x140011c31
   140011c13:	cmp    eax,0xffffffff
   140011c16:	je     0x140011c37
   140011c18:	mov    eax,r13d
   140011c1b:	lock xadd DWORD PTR [rcx],eax
   140011c1f:	add    eax,0xffffffff
   140011c22:	setne  al
   140011c25:	test   al,al
   140011c27:	jne    0x140011c37
   140011c29:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140011c31:	call   QWORD PTR [rip+0x4671]        # 0x1400162a8
   140011c37:	lea    rcx,[rsp+0xa0]
   140011c3f:	call   QWORD PTR [rip+0x4d73]        # 0x1400169b8
   140011c45:	mov    rdx,QWORD PTR [rip+0x4e7c]        # 0x140016ac8
   140011c4c:	lea    r9,[rsp+0xd1]
   140011c54:	mov    QWORD PTR [rsp+0x538],rdx
   140011c5c:	lea    r8,[rsp+0x538]
   140011c64:	lea    rcx,[rsp+0x60]
   140011c69:	lea    rdx,[rsp+0x380]
   140011c71:	call   0x140003f80
   140011c76:	mov    rbx,QWORD PTR [rip+0x45ab]        # 0x140016228
   140011c7d:	mov    QWORD PTR [rsp+0x90],rbx
   140011c85:	mov    QWORD PTR [rsp+0x88],rbx
   140011c8d:	cmp    r15d,0x2
   140011c91:	jne    0x140011e7f
   140011c97:	mov    r15,QWORD PTR [rsp+0x60]
   140011c9c:	mov    eax,DWORD PTR [r15+0x10]
   140011ca0:	mov    QWORD PTR [rsp+0x6c0],r15
   140011ca8:	lea    rdi,[r15+0x10]
   140011cac:	test   eax,eax
   140011cae:	je     0x140011cc1
   140011cb0:	cmp    eax,0xffffffff
   140011cb3:	je     0x140011cc1
   140011cb5:	lock add DWORD PTR [rdi],0x1
   140011cb9:	mov    r15,QWORD PTR [rsp+0x6c0]
   140011cc1:	test   BYTE PTR [r15+0x28],0x1
   140011cc6:	jne    0x140011d3a
   140011cc8:	mov    eax,DWORD PTR [rdi]
   140011cca:	cmp    eax,0x1
   140011ccd:	je     0x140011d3a
   140011ccf:	test   eax,eax
   140011cd1:	je     0x140011d3a
   140011cd3:	lea    r8,[rip+0x1f86]        # 0x140013c60
   140011cda:	lea    rdx,[rip+0xfffffffffffeff8f]        # 0x140001c70
   140011ce1:	mov    r9d,0x18
   140011ce7:	mov    rcx,r15
   140011cea:	mov    DWORD PTR [rsp+0x20],0x8
   140011cf2:	call   QWORD PTR [rip+0x4630]        # 0x140016328
   140011cf8:	mov    ecx,DWORD PTR [rdi]
   140011cfa:	mov    rbx,rax
   140011cfd:	test   ecx,ecx
   140011cff:	je     0x140011d1f
   140011d01:	cmp    ecx,0xffffffff
   140011d04:	je     0x140011d2f
   140011d06:	mov    ecx,r13d
   140011d09:	lock xadd DWORD PTR [rdi],ecx
   140011d0d:	add    ecx,0xffffffff
   140011d10:	setne  cl
   140011d13:	test   cl,cl
   140011d15:	jne    0x140011d2f
   140011d17:	mov    r15,QWORD PTR [rsp+0x6c0]
   140011d1f:	lea    rdx,[rip+0x1f3a]        # 0x140013c60
   140011d26:	mov    rcx,r15
   140011d29:	call   QWORD PTR [rip+0x4569]        # 0x140016298
   140011d2f:	mov    r15,rbx
   140011d32:	mov    QWORD PTR [rsp+0x6c0],rbx
   140011d3a:	mov    rcx,r15
   140011d3d:	mov    ebx,esi
   140011d3f:	call   QWORD PTR [rip+0x483b]        # 0x140016580
   140011d45:	lea    rbp,[rip+0x57c8]        # 0x140017514
   140011d4c:	mov    QWORD PTR [rsp+0x6d0],rax
   140011d54:	mov    ecx,ebx
   140011d56:	inc    ebx
   140011d58:	mov    r14,rax
   140011d5b:	test   ecx,ecx
   140011d5d:	jne    0x140011e2b
   140011d63:	cmp    rax,r15
   140011d66:	je     0x140011e2b
   140011d6c:	mov    r12,QWORD PTR [rax+0x10]
   140011d70:	mov    QWORD PTR [rsp+0x568],r12
   140011d78:	test   ebx,ebx
   140011d7a:	je     0x140011e1d
   140011d80:	xor    eax,eax
   140011d82:	mov    rcx,r13
   140011d85:	mov    rdi,rbp
   140011d88:	repnz scas al,BYTE PTR es:[rdi]
   140011d8a:	mov    QWORD PTR [rsp+0xf8],rbp
   140011d92:	not    rcx
   140011d95:	dec    rcx
   140011d98:	mov    DWORD PTR [rsp+0xf0],ecx
   140011d9f:	mov    rcx,r12
   140011da2:	call   QWORD PTR [rip+0x4610]        # 0x1400163b8
   140011da8:	lea    rcx,[rsp+0x410]
   140011db0:	mov    r8d,r13d
   140011db3:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140011dbb:	movdqa XMMWORD PTR [rsp+0x910],xmm0
   140011dc4:	mov    rdx,rax
   140011dc7:	call   QWORD PTR [rip+0x4b5b]        # 0x140016928
   140011dcd:	lea    rdx,[rsp+0x910]
   140011dd5:	mov    rcx,rax
   140011dd8:	call   QWORD PTR [rip+0x4b52]        # 0x140016930
   140011dde:	lea    rcx,[rsp+0x410]
   140011de6:	movzx  edi,al
   140011de9:	call   QWORD PTR [rip+0x4b49]        # 0x140016938
   140011def:	test   dil,dil
   140011df2:	jne    0x140011df8
   140011df4:	dec    ebx
   140011df6:	jmp    0x140011d78
   140011df8:	lea    r9,[rsp+0xd0]
   140011e00:	lea    r8,[rsp+0x568]
   140011e08:	lea    rdx,[rsp+0x3a0]
   140011e10:	lea    rcx,[rsp+0x88]
   140011e18:	call   0x140003f80
   140011e1d:	mov    rcx,r14
   140011e20:	call   QWORD PTR [rip+0x4412]        # 0x140016238
   140011e26:	jmp    0x140011d54
   140011e2b:	mov    eax,DWORD PTR [r15+0x10]
   140011e2f:	mov    DWORD PTR [rsp+0x6c8],ebx
   140011e36:	mov    QWORD PTR [rsp+0x6d0],r14
   140011e3e:	test   eax,eax
   140011e40:	je     0x140011e6a
   140011e42:	cmp    eax,0xffffffff
   140011e45:	je     0x140013013
   140011e4b:	mov    eax,r13d
   140011e4e:	lock xadd DWORD PTR [r15+0x10],eax
   140011e54:	add    eax,0xffffffff
   140011e57:	setne  al
   140011e5a:	test   al,al
   140011e5c:	jne    0x140013013
   140011e62:	mov    r15,QWORD PTR [rsp+0x6c0]
   140011e6a:	lea    rdx,[rip+0x1def]        # 0x140013c60
   140011e71:	mov    rcx,r15
   140011e74:	call   QWORD PTR [rip+0x441e]        # 0x140016298
   140011e7a:	jmp    0x140013013
   140011e7f:	lea    rdx,[rip+0x5686]        # 0x14001750c
   140011e86:	xor    eax,eax
   140011e88:	mov    rcx,r13
   140011e8b:	mov    rdi,rdx
   140011e8e:	mov    QWORD PTR [rsp+0xf8],rdx
   140011e96:	lea    rdx,[rsp+0x830]
   140011e9e:	repnz scas al,BYTE PTR es:[rdi]
   140011ea0:	not    rcx
   140011ea3:	dec    rcx
   140011ea6:	mov    DWORD PTR [rsp+0xf0],ecx
   140011ead:	lea    rcx,[rsp+0x58]
   140011eb2:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140011eba:	movdqa XMMWORD PTR [rsp+0x830],xmm0
   140011ec3:	call   QWORD PTR [rip+0x4a67]        # 0x140016930
   140011ec9:	test   al,al
   140011ecb:	je     0x140012499
   140011ed1:	lea    rcx,[rsp+0x218]
   140011ed9:	mov    edx,0x2e
   140011ede:	mov    BYTE PTR [rsp+0x988],sil
   140011ee6:	call   QWORD PTR [rip+0x4804]        # 0x1400166f0
   140011eec:	lea    rdx,[rsp+0x430]
   140011ef4:	lea    rcx,[rsp+0x50]
   140011ef9:	movzx  r8d,WORD PTR [rax]
   140011efd:	xor    r9d,r9d
   140011f00:	mov    DWORD PTR [rsp+0x20],0x1
   140011f08:	call   QWORD PTR [rip+0x4682]        # 0x140016590
   140011f0e:	mov    rdi,rax
   140011f11:	mov    rcx,QWORD PTR [rax]
   140011f14:	mov    eax,DWORD PTR [rcx]
   140011f16:	cmp    eax,0x1
   140011f19:	je     0x140011f2a
   140011f1b:	test   eax,eax
   140011f1d:	je     0x140011f2a
   140011f1f:	mov    edx,DWORD PTR [rcx+0x4]
   140011f22:	mov    rcx,rdi
   140011f25:	call   0x140002d40
   140011f2a:	xor    edx,edx
   140011f2c:	mov    rcx,rdi
   140011f2f:	call   QWORD PTR [rip+0x47b3]        # 0x1400166e8
   140011f35:	lea    rdx,[rsp+0x988]
   140011f3d:	mov    r8d,0xa
   140011f43:	mov    rcx,rax
   140011f46:	call   QWORD PTR [rip+0x4794]        # 0x1400166e0
   140011f4c:	lea    rcx,[rsp+0x430]
   140011f54:	mov    edi,eax
   140011f56:	call   0x140002910
   140011f5b:	cmp    BYTE PTR [rsp+0x988],sil
   140011f63:	jne    0x1400121d0
   140011f69:	lea    rdx,[rsp+0x50]
   140011f6e:	lea    rcx,[rsp+0x450]
   140011f76:	call   QWORD PTR [rip+0x45c4]        # 0x140016540
   140011f7c:	lea    rdx,[rsp+0x578]
   140011f84:	mov    rcx,rax
   140011f87:	call   QWORD PTR [rip+0x4333]        # 0x1400162c0
   140011f8d:	mov    rcx,rax
   140011f90:	call   QWORD PTR [rip+0x49ba]        # 0x140016950
   140011f96:	mov    rcx,QWORD PTR [rip+0x40bb]        # 0x140016058
   140011f9d:	lea    rdx,[rip+0x554c]        # 0x1400174f0
   140011fa4:	mov    rdi,rax
   140011fa7:	call   0x1400016a0
   140011fac:	mov    rdx,rdi
   140011faf:	mov    rcx,rax
   140011fb2:	call   0x1400016a0
   140011fb7:	lea    rdx,[rip+0x552a]        # 0x1400174e8
   140011fbe:	mov    rcx,rax
   140011fc1:	call   0x1400016a0
   140011fc6:	mov    rdx,QWORD PTR [rip+0x4093]        # 0x140016060
   140011fcd:	mov    rcx,rax
   140011fd0:	call   QWORD PTR [rip+0x4092]        # 0x140016068
   140011fd6:	lea    rcx,[rsp+0x578]
   140011fde:	call   QWORD PTR [rip+0x4294]        # 0x140016278
   140011fe4:	lea    rcx,[rsp+0x450]
   140011fec:	call   QWORD PTR [rip+0x4946]        # 0x140016938
   140011ff2:	mov    eax,DWORD PTR [rbx+0x10]
   140011ff5:	test   eax,eax
   140011ff7:	je     0x140012018
   140011ff9:	cmp    eax,0xffffffff
   140011ffc:	je     0x140012028
   140011ffe:	mov    eax,r13d
   140012001:	lock xadd DWORD PTR [rbx+0x10],eax
   140012006:	add    eax,0xffffffff
   140012009:	setne  al
   14001200c:	test   al,al
   14001200e:	jne    0x140012028
   140012010:	mov    rbx,QWORD PTR [rsp+0x88]
   140012018:	lea    rdx,[rip+0x1c41]        # 0x140013c60
   14001201f:	mov    rcx,rbx
   140012022:	call   QWORD PTR [rip+0x4270]        # 0x140016298
   140012028:	mov    rcx,QWORD PTR [rsp+0x90]
   140012030:	mov    eax,DWORD PTR [rcx+0x10]
   140012033:	test   eax,eax
   140012035:	je     0x140012056
   140012037:	cmp    eax,0xffffffff
   14001203a:	je     0x140012063
   14001203c:	mov    eax,r13d
   14001203f:	lock xadd DWORD PTR [rcx+0x10],eax
   140012044:	add    eax,0xffffffff
   140012047:	setne  al
   14001204a:	test   al,al
   14001204c:	jne    0x140012063
   14001204e:	mov    rcx,QWORD PTR [rsp+0x90]
   140012056:	lea    rdx,[rip+0xffffffffffff02c3]        # 0x140002320
   14001205d:	call   QWORD PTR [rip+0x4235]        # 0x140016298
   140012063:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001206b:	mov    eax,DWORD PTR [rcx]
   14001206d:	test   eax,eax
   14001206f:	je     0x14001208f
   140012071:	cmp    eax,0xffffffff
   140012074:	je     0x140012095
   140012076:	mov    eax,r13d
   140012079:	lock xadd DWORD PTR [rcx],eax
   14001207d:	add    eax,0xffffffff
   140012080:	setne  al
   140012083:	test   al,al
   140012085:	jne    0x140012095
   140012087:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001208f:	call   QWORD PTR [rip+0x4213]        # 0x1400162a8
   140012095:	mov    rcx,QWORD PTR [rsp+0x60]
   14001209a:	mov    eax,DWORD PTR [rcx+0x10]
   14001209d:	test   eax,eax
   14001209f:	je     0x1400120bd
   1400120a1:	cmp    eax,0xffffffff
   1400120a4:	je     0x1400120ca
   1400120a6:	mov    eax,r13d
   1400120a9:	lock xadd DWORD PTR [rcx+0x10],eax
   1400120ae:	add    eax,0xffffffff
   1400120b1:	setne  al
   1400120b4:	test   al,al
   1400120b6:	jne    0x1400120ca
   1400120b8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400120bd:	lea    rdx,[rip+0x1b9c]        # 0x140013c60
   1400120c4:	call   QWORD PTR [rip+0x41ce]        # 0x140016298
   1400120ca:	mov    rcx,QWORD PTR [rsp+0x48]
   1400120cf:	mov    eax,DWORD PTR [rcx+0x10]
   1400120d2:	test   eax,eax
   1400120d4:	je     0x1400120f2
   1400120d6:	cmp    eax,0xffffffff
   1400120d9:	je     0x1400120ff
   1400120db:	mov    eax,r13d
   1400120de:	lock xadd DWORD PTR [rcx+0x10],eax
   1400120e3:	add    eax,0xffffffff
   1400120e6:	setne  al
   1400120e9:	test   al,al
   1400120eb:	jne    0x1400120ff
   1400120ed:	mov    rcx,QWORD PTR [rsp+0x48]
   1400120f2:	lea    rdx,[rip+0x1b67]        # 0x140013c60
   1400120f9:	call   QWORD PTR [rip+0x4199]        # 0x140016298
   1400120ff:	mov    rcx,QWORD PTR [rsp+0x38]
   140012104:	mov    eax,DWORD PTR [rcx+0x10]
   140012107:	test   eax,eax
   140012109:	je     0x140012126
   14001210b:	cmp    eax,0xffffffff
   14001210e:	je     0x140012133
   140012110:	lock xadd DWORD PTR [rcx+0x10],r13d
   140012116:	add    r13d,0xffffffff
   14001211a:	setne  al
   14001211d:	test   al,al
   14001211f:	jne    0x140012133
   140012121:	mov    rcx,QWORD PTR [rsp+0x38]
   140012126:	lea    rdx,[rip+0x1b33]        # 0x140013c60
   14001212d:	call   QWORD PTR [rip+0x4165]        # 0x140016298
   140012133:	lea    rcx,[rsp+0xb8]
   14001213b:	call   QWORD PTR [rip+0x47f7]        # 0x140016938
   140012141:	lea    rcx,[rsp+0x78]
   140012146:	call   0x140002910
   14001214b:	lea    rcx,[rsp+0xc0]
   140012153:	call   QWORD PTR [rip+0x47df]        # 0x140016938
   140012159:	lea    rcx,[rsp+0x98]
   140012161:	call   0x140002910
   140012166:	lea    rcx,[rsp+0x158]
   14001216e:	call   QWORD PTR [rip+0x4834]        # 0x1400169a8
   140012174:	lea    rcx,[rsp+0x70]
   140012179:	call   QWORD PTR [rip+0x47b9]        # 0x140016938
   14001217f:	lea    rcx,[rsp+0x68]
   140012184:	call   QWORD PTR [rip+0x47ae]        # 0x140016938
   14001218a:	lea    rcx,[rsp+0x50]
   14001218f:	call   QWORD PTR [rip+0x47a3]        # 0x140016938
   140012195:	lea    rcx,[rsp+0x58]
   14001219a:	call   QWORD PTR [rip+0x4798]        # 0x140016938
   1400121a0:	lea    rcx,[rsp+0x80]
   1400121a8:	call   QWORD PTR [rip+0x478a]        # 0x140016938
   1400121ae:	lea    rcx,[rsp+0x40]
   1400121b3:	call   0x140002910
   1400121b8:	lea    rcx,[rsp+0x100]
   1400121c0:	call   QWORD PTR [rip+0x47ba]        # 0x140016980
   1400121c6:	mov    eax,0x1
   1400121cb:	jmp    0x140013c39
   1400121d0:	cmp    edi,0x2
   1400121d3:	je     0x14001227e
   1400121d9:	lea    rdx,[rsp+0x50]
   1400121de:	lea    rcx,[rsp+0x318]
   1400121e6:	call   QWORD PTR [rip+0x4354]        # 0x140016540
   1400121ec:	lea    rdx,[rsp+0x588]
   1400121f4:	mov    rcx,rax
   1400121f7:	call   QWORD PTR [rip+0x40c3]        # 0x1400162c0
   1400121fd:	mov    rcx,rax
   140012200:	call   QWORD PTR [rip+0x474a]        # 0x140016950
   140012206:	mov    rcx,QWORD PTR [rip+0x3e4b]        # 0x140016058
   14001220d:	lea    rdx,[rip+0x52bc]        # 0x1400174d0
   140012214:	mov    rdi,rax
   140012217:	call   0x1400016a0
   14001221c:	mov    rdx,rdi
   14001221f:	mov    rcx,rax
   140012222:	call   0x1400016a0
   140012227:	lea    rdx,[rip+0x527a]        # 0x1400174a8
   14001222e:	mov    rcx,rax
   140012231:	call   0x1400016a0
   140012236:	mov    edx,0x2
   14001223b:	mov    rcx,rax
   14001223e:	call   QWORD PTR [rip+0x3ec4]        # 0x140016108
   140012244:	lea    rdx,[rip+0x529d]        # 0x1400174e8
   14001224b:	mov    rcx,rax
   14001224e:	call   0x1400016a0
   140012253:	mov    rdx,QWORD PTR [rip+0x3e06]        # 0x140016060
   14001225a:	mov    rcx,rax
   14001225d:	call   QWORD PTR [rip+0x3e05]        # 0x140016068
   140012263:	lea    rcx,[rsp+0x588]
   14001226b:	call   QWORD PTR [rip+0x4007]        # 0x140016278
   140012271:	lea    rcx,[rsp+0x318]
   140012279:	jmp    0x140011fec
   14001227e:	mov    r12,QWORD PTR [rsp+0x60]
   140012283:	cmp    rbx,r12
   140012286:	je     0x14001230c
   14001228c:	mov    eax,DWORD PTR [r12+0x10]
   140012291:	mov    rdi,r12
   140012294:	test   eax,eax
   140012296:	je     0x1400122b1
   140012298:	cmp    eax,0xffffffff
   14001229b:	je     0x1400122b1
   14001229d:	lock add DWORD PTR [r12+0x10],0x1
   1400122a4:	mov    r12,QWORD PTR [rsp+0x60]
   1400122a9:	mov    rbx,QWORD PTR [rsp+0x88]
   1400122b1:	mov    eax,DWORD PTR [rbx+0x10]
   1400122b4:	test   eax,eax
   1400122b6:	je     0x1400122d7
   1400122b8:	cmp    eax,0xffffffff
   1400122bb:	je     0x1400122ec
   1400122bd:	mov    eax,r13d
   1400122c0:	lock xadd DWORD PTR [rbx+0x10],eax
   1400122c5:	add    eax,0xffffffff
   1400122c8:	setne  al
   1400122cb:	test   al,al
   1400122cd:	jne    0x1400122e7
   1400122cf:	mov    rbx,QWORD PTR [rsp+0x88]
   1400122d7:	lea    rdx,[rip+0x1982]        # 0x140013c60
   1400122de:	mov    rcx,rbx
   1400122e1:	call   QWORD PTR [rip+0x3fb1]        # 0x140016298
   1400122e7:	mov    r12,QWORD PTR [rsp+0x60]
   1400122ec:	test   BYTE PTR [rdi+0x28],0x1
   1400122f0:	mov    QWORD PTR [rsp+0x88],rdi
   1400122f8:	jne    0x14001230c
   1400122fa:	lea    rcx,[rsp+0x88]
   140012302:	call   0x140002ae0
   140012307:	mov    r12,QWORD PTR [rsp+0x60]
   14001230c:	mov    ecx,DWORD PTR [r12+0x10]
   140012311:	lea    rax,[r12+0x10]
   140012316:	mov    QWORD PTR [rsp+0x6e8],r12
   14001231e:	test   ecx,ecx
   140012320:	je     0x140012333
   140012322:	cmp    ecx,0xffffffff
   140012325:	je     0x140012333
   140012327:	lock add DWORD PTR [rax],0x1
   14001232b:	mov    r12,QWORD PTR [rsp+0x6e8]
   140012333:	test   BYTE PTR [r12+0x28],0x1
   140012339:	jne    0x14001235b
   14001233b:	mov    ecx,DWORD PTR [rax]
   14001233d:	cmp    ecx,0x1
   140012340:	je     0x14001235b
   140012342:	test   ecx,ecx
   140012344:	je     0x14001235b
   140012346:	lea    rcx,[rsp+0x6e8]
   14001234e:	call   0x140002ae0
   140012353:	mov    r12,QWORD PTR [rsp+0x6e8]
   14001235b:	mov    rcx,r12
   14001235e:	mov    ebx,esi
   140012360:	call   QWORD PTR [rip+0x421a]        # 0x140016580
   140012366:	lea    rbp,[rip+0x51a7]        # 0x140017514
   14001236d:	mov    QWORD PTR [rsp+0x6f8],rax
   140012375:	mov    ecx,ebx
   140012377:	inc    ebx
   140012379:	mov    r15,rax
   14001237c:	test   ecx,ecx
   14001237e:	jne    0x140012443
   140012384:	cmp    rax,r12
   140012387:	je     0x140012443
   14001238d:	mov    r14,QWORD PTR [rax+0x10]
   140012391:	mov    QWORD PTR [rsp+0x490],r14
   140012399:	nop    DWORD PTR [rax+0x0]
   1400123a0:	test   ebx,ebx
   1400123a2:	je     0x140012435
   1400123a8:	xor    eax,eax
   1400123aa:	mov    rcx,r13
   1400123ad:	mov    rdi,rbp
   1400123b0:	repnz scas al,BYTE PTR es:[rdi]
   1400123b2:	mov    QWORD PTR [rsp+0xf8],rbp
   1400123ba:	not    rcx
   1400123bd:	dec    rcx
   1400123c0:	mov    DWORD PTR [rsp+0xf0],ecx
   1400123c7:	mov    rcx,r14
   1400123ca:	call   QWORD PTR [rip+0x3fe8]        # 0x1400163b8
   1400123d0:	lea    rcx,[rsp+0x598]
   1400123d8:	mov    r8d,r13d
   1400123db:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   1400123e3:	movdqa XMMWORD PTR [rsp+0x8b0],xmm0
   1400123ec:	mov    rdx,rax
   1400123ef:	call   QWORD PTR [rip+0x4533]        # 0x140016928
   1400123f5:	lea    rdx,[rsp+0x8b0]
   1400123fd:	mov    rcx,rax
   140012400:	call   QWORD PTR [rip+0x452a]        # 0x140016930
   140012406:	lea    rcx,[rsp+0x598]
   14001240e:	movzx  edi,al
   140012411:	call   QWORD PTR [rip+0x4521]        # 0x140016938
   140012417:	test   dil,dil
   14001241a:	jne    0x140012420
   14001241c:	dec    ebx
   14001241e:	jmp    0x1400123a0
   140012420:	lea    rdx,[rsp+0x490]
   140012428:	lea    rcx,[rsp+0x88]
   140012430:	call   0x140003e60
   140012435:	mov    rcx,r15
   140012438:	call   QWORD PTR [rip+0x3dfa]        # 0x140016238
   14001243e:	jmp    0x140012375
   140012443:	mov    eax,DWORD PTR [r12+0x10]
   140012448:	mov    DWORD PTR [rsp+0x6f0],ebx
   14001244f:	mov    QWORD PTR [rsp+0x6f8],r15
   140012457:	test   eax,eax
   140012459:	je     0x140012484
   14001245b:	cmp    eax,0xffffffff
   14001245e:	je     0x140013013
   140012464:	mov    eax,r13d
   140012467:	lock xadd DWORD PTR [r12+0x10],eax
   14001246e:	add    eax,0xffffffff
   140012471:	setne  al
   140012474:	test   al,al
   140012476:	jne    0x140013013
   14001247c:	mov    r12,QWORD PTR [rsp+0x6e8]
   140012484:	lea    rdx,[rip+0x17d5]        # 0x140013c60
   14001248b:	mov    rcx,r12
   14001248e:	call   QWORD PTR [rip+0x3e04]        # 0x140016298
   140012494:	jmp    0x140013013
   140012499:	lea    rcx,[rsp+0xa8]
   1400124a1:	call   QWORD PTR [rip+0x3e89]        # 0x140016330
   1400124a7:	mov    rcx,QWORD PTR [rip+0x4142]        # 0x1400165f0
   1400124ae:	call   QWORD PTR [rip+0x44fc]        # 0x1400169b0
   1400124b4:	mov    rdi,rax
   1400124b7:	test   rax,rax
   1400124ba:	jne    0x140012519
   1400124bc:	mov    rcx,QWORD PTR [rip+0x3b95]        # 0x140016058
   1400124c3:	lea    rdx,[rip+0x4fbe]        # 0x140017488
   1400124ca:	call   0x1400016a0
   1400124cf:	mov    rdx,QWORD PTR [rip+0x3b8a]        # 0x140016060
   1400124d6:	mov    rcx,rax
   1400124d9:	call   QWORD PTR [rip+0x3b89]        # 0x140016068
   1400124df:	lea    rdx,[rsp+0x5a8]
   1400124e7:	lea    rcx,[rsp+0xb8]
   1400124ef:	call   QWORD PTR [rip+0x4023]        # 0x140016518
   1400124f5:	lea    rcx,[rsp+0xa8]
   1400124fd:	mov    rdx,rax
   140012500:	call   QWORD PTR [rip+0x3e42]        # 0x140016348
   140012506:	lea    rcx,[rsp+0x5a8]
   14001250e:	call   QWORD PTR [rip+0x3d64]        # 0x140016278
   140012514:	jmp    0x140012688
   140012519:	mov    rcx,rax
   14001251c:	call   QWORD PTR [rip+0x450e]        # 0x140016a30
   140012522:	lea    rcx,[rsp+0x110]
   14001252a:	mov    rdx,rax
   14001252d:	call   QWORD PTR [rip+0x400d]        # 0x140016540
   140012533:	lea    rcx,[rsp+0x1e8]
   14001253b:	mov    dl,0x2f
   14001253d:	call   QWORD PTR [rip+0x43d5]        # 0x140016918
   140012543:	lea    rcx,[rsp+0x110]
   14001254b:	mov    r9d,0x1
   140012551:	movzx  edx,WORD PTR [rax]
   140012554:	mov    r8d,r13d
   140012557:	call   QWORD PTR [rip+0x410b]        # 0x140016668
   14001255d:	lea    rdx,[rsp+0x4b0]
   140012565:	lea    rcx,[rsp+0x110]
   14001256d:	mov    r9d,eax
   140012570:	xor    r8d,r8d
   140012573:	call   QWORD PTR [rip+0x40e7]        # 0x140016660
   140012579:	lea    rcx,[rsp+0x110]
   140012581:	mov    rdx,rax
   140012584:	call   QWORD PTR [rip+0x3c7e]        # 0x140016208
   14001258a:	lea    rcx,[rsp+0x4b0]
   140012592:	call   QWORD PTR [rip+0x43a0]        # 0x140016938
   140012598:	mov    rcx,rdi
   14001259b:	call   QWORD PTR [rip+0x4497]        # 0x140016a38
   1400125a1:	lea    rcx,[rsp+0x5d8]
   1400125a9:	mov    r8d,0xa
   1400125af:	mov    edx,eax
   1400125b1:	call   QWORD PTR [rip+0x3d39]        # 0x1400162f0
   1400125b7:	mov    rcx,rdi
   1400125ba:	mov    rbp,rax
   1400125bd:	call   QWORD PTR [rip+0x447d]        # 0x140016a40
   1400125c3:	lea    rcx,[rsp+0x4f0]
   1400125cb:	mov    edx,eax
   1400125cd:	mov    r8d,0xa
   1400125d3:	call   QWORD PTR [rip+0x3d17]        # 0x1400162f0
   1400125d9:	lea    rdx,[rip+0x4e98]        # 0x140017478
   1400125e0:	lea    rcx,[rsp+0x5c8]
   1400125e8:	mov    rdi,rax
   1400125eb:	call   QWORD PTR [rip+0x40e7]        # 0x1400166d8
   1400125f1:	lea    r8,[rsp+0x110]
   1400125f9:	lea    rdx,[rsp+0x4d0]
   140012601:	mov    r9,rdi
   140012604:	mov    rcx,rax
   140012607:	mov    QWORD PTR [rsp+0x20],rbp
   14001260c:	call   QWORD PTR [rip+0x3cd6]        # 0x1400162e8
   140012612:	lea    rdx,[rsp+0x5b8]
   14001261a:	mov    rcx,rax
   14001261d:	call   QWORD PTR [rip+0x3ef5]        # 0x140016518
   140012623:	lea    rcx,[rsp+0xa8]
   14001262b:	mov    rdx,rax
   14001262e:	call   QWORD PTR [rip+0x3d14]        # 0x140016348
   140012634:	lea    rcx,[rsp+0x5b8]
   14001263c:	call   QWORD PTR [rip+0x3c36]        # 0x140016278
   140012642:	lea    rcx,[rsp+0x4d0]
   14001264a:	call   QWORD PTR [rip+0x42e8]        # 0x140016938
   140012650:	lea    rcx,[rsp+0x5c8]
   140012658:	call   QWORD PTR [rip+0x42da]        # 0x140016938
   14001265e:	lea    rcx,[rsp+0x4f0]
   140012666:	call   QWORD PTR [rip+0x42cc]        # 0x140016938
   14001266c:	lea    rcx,[rsp+0x5d8]
   140012674:	call   QWORD PTR [rip+0x42be]        # 0x140016938
   14001267a:	lea    rcx,[rsp+0x110]
   140012682:	call   QWORD PTR [rip+0x42b0]        # 0x140016938
   140012688:	lea    rdx,[rsp+0x78]
   14001268d:	lea    rcx,[rsp+0x250]
   140012695:	call   0x140002860
   14001269a:	lea    rcx,[rsp+0x250]
   1400126a2:	mov    DWORD PTR [rsp+0x258],esi
   1400126a9:	call   QWORD PTR [rip+0x3fc9]        # 0x140016678
   1400126af:	lea    rcx,[rsp+0x250]
   1400126b7:	mov    QWORD PTR [rsp+0x260],rax
   1400126bf:	call   QWORD PTR [rip+0x3fab]        # 0x140016670
   1400126c5:	mov    rdi,QWORD PTR [rsp+0x260]
   1400126cd:	mov    edx,DWORD PTR [rsp+0x258]
   1400126d4:	mov    QWORD PTR [rsp+0x268],rax
   1400126dc:	nop    DWORD PTR [rax+0x0]
   1400126e0:	mov    ecx,edx
   1400126e2:	inc    edx
   1400126e4:	mov    DWORD PTR [rsp+0x258],edx
   1400126eb:	test   ecx,ecx
   1400126ed:	jne    0x140012774
   1400126f3:	cmp    rdi,rax
   1400126f6:	je     0x140012774
   1400126f8:	test   edx,edx
   1400126fa:	je     0x140012753
   1400126fc:	lea    rdx,[rip+0x4e3d]        # 0x140017540
   140012703:	lea    rcx,[rsp+0xa8]
   14001270b:	call   QWORD PTR [rip+0x3d27]        # 0x140016438
   140012711:	lea    rdx,[rsp+0x500]
   140012719:	mov    rcx,rdi
   14001271c:	call   QWORD PTR [rip+0x3df6]        # 0x140016518
   140012722:	lea    rcx,[rsp+0xa8]
   14001272a:	mov    rdx,rax
   14001272d:	call   QWORD PTR [rip+0x3cf5]        # 0x140016428
   140012733:	lea    rcx,[rsp+0x500]
   14001273b:	call   QWORD PTR [rip+0x3b37]        # 0x140016278
   140012741:	mov    edx,DWORD PTR [rsp+0x258]
   140012748:	dec    edx
   14001274a:	mov    DWORD PTR [rsp+0x258],edx
   140012751:	jmp    0x1400126f8
   140012753:	mov    rdi,QWORD PTR [rsp+0x260]
   14001275b:	mov    rax,QWORD PTR [rsp+0x268]
   140012763:	add    rdi,0x8
   140012767:	mov    QWORD PTR [rsp+0x260],rdi
   14001276f:	jmp    0x1400126e0
   140012774:	lea    rcx,[rsp+0x250]
   14001277c:	call   0x140002910
   140012781:	cmp    r15d,0x1
   140012785:	je     0x140012802
   140012787:	lea    rdx,[rip+0x4cda]        # 0x140017468
   14001278e:	lea    rcx,[rsp+0x600]
   140012796:	call   QWORD PTR [rip+0x3f3c]        # 0x1400166d8
   14001279c:	lea    r9,[rsp+0x50]
   1400127a1:	lea    r8,[rsp+0x58]
   1400127a6:	lea    rdx,[rsp+0x510]
   1400127ae:	mov    rcx,rax
   1400127b1:	call   QWORD PTR [rip+0x3c49]        # 0x140016400
   1400127b7:	lea    rdx,[rsp+0x5f0]
   1400127bf:	mov    rcx,rax
   1400127c2:	call   QWORD PTR [rip+0x3f08]        # 0x1400166d0
   1400127c8:	lea    rcx,[rsp+0xa8]
   1400127d0:	mov    rdx,rax
   1400127d3:	call   QWORD PTR [rip+0x3eef]        # 0x1400166c8
   1400127d9:	lea    rcx,[rsp+0x5f0]
   1400127e1:	call   QWORD PTR [rip+0x3a91]        # 0x140016278
   1400127e7:	lea    rcx,[rsp+0x510]
   1400127ef:	call   QWORD PTR [rip+0x4143]        # 0x140016938
   1400127f5:	lea    rcx,[rsp+0x600]
   1400127fd:	jmp    0x140012891
   140012802:	lea    rcx,[rsp+0x20a]
   14001280a:	mov    dl,0x20
   14001280c:	call   QWORD PTR [rip+0x4106]        # 0x140016918
   140012812:	lea    rdx,[rip+0x4c3f]        # 0x140017458
   140012819:	lea    rcx,[rsp+0x530]
   140012821:	mov    rdi,rax
   140012824:	call   QWORD PTR [rip+0x3eae]        # 0x1400166d8
   14001282a:	lea    r8,[rsp+0x50]
   14001282f:	mov    rcx,rax
   140012832:	movzx  eax,WORD PTR [rdi]
   140012835:	lea    rdx,[rsp+0x610]
   14001283d:	xor    r9d,r9d
   140012840:	mov    WORD PTR [rsp+0x20],ax
   140012845:	call   QWORD PTR [rip+0x4095]        # 0x1400168e0
   14001284b:	lea    rdx,[rsp+0x520]
   140012853:	mov    rcx,rax
   140012856:	call   QWORD PTR [rip+0x3e74]        # 0x1400166d0
   14001285c:	lea    rcx,[rsp+0xa8]
   140012864:	mov    rdx,rax
   140012867:	call   QWORD PTR [rip+0x3e5b]        # 0x1400166c8
   14001286d:	lea    rcx,[rsp+0x520]
   140012875:	call   QWORD PTR [rip+0x39fd]        # 0x140016278
   14001287b:	lea    rcx,[rsp+0x610]
   140012883:	call   QWORD PTR [rip+0x40af]        # 0x140016938
   140012889:	lea    rcx,[rsp+0x530]
   140012891:	call   QWORD PTR [rip+0x40a1]        # 0x140016938
   140012897:	lea    rdx,[rsp+0xa8]
   14001289f:	lea    rcx,[rsp+0x138]
   1400128a7:	call   QWORD PTR [rip+0x39e3]        # 0x140016290
   1400128ad:	lea    rdx,[rip+0x4c7c]        # 0x140017530
   1400128b4:	lea    rcx,[rsp+0x138]
   1400128bc:	call   QWORD PTR [rip+0x3dfe]        # 0x1400166c0
   1400128c2:	lea    rdx,[rsp+0x158]
   1400128ca:	lea    rcx,[rsp+0x140]
   1400128d2:	xor    r8d,r8d
   1400128d5:	call   QWORD PTR [rip+0x413d]        # 0x140016a18
   1400128db:	lea    rax,[rip+0x4b66]        # 0x140017448
   1400128e2:	lea    rdx,[rsp+0x288]
   1400128ea:	lea    rcx,[rsp+0x7a8]
   1400128f2:	mov    QWORD PTR [rsp+0x7b0],rax
   1400128fa:	mov    QWORD PTR [rsp+0x7a8],r14
   140012902:	call   0x140002210
   140012907:	lea    rdx,[rsp+0x288]
   14001290f:	lea    rcx,[rsp+0x620]
   140012917:	call   QWORD PTR [rip+0x3de3]        # 0x140016700
   14001291d:	lea    rdx,[rsp+0x138]
   140012925:	lea    rcx,[rsp+0x140]
   14001292d:	mov    r8,rax
   140012930:	call   QWORD PTR [rip+0x405a]        # 0x140016990
   140012936:	lea    rcx,[rsp+0x620]
   14001293e:	call   QWORD PTR [rip+0x3ce4]        # 0x140016628
   140012944:	lea    rcx,[rsp+0x288]
   14001294c:	call   QWORD PTR [rip+0x3fe6]        # 0x140016938
   140012952:	lea    rcx,[rsp+0x140]
   14001295a:	xor    edx,edx
   14001295c:	call   QWORD PTR [rip+0x40c6]        # 0x140016a28
   140012962:	lea    rdx,[rsp+0x630]
   14001296a:	lea    rcx,[rsp+0x140]
   140012972:	call   QWORD PTR [rip+0x4020]        # 0x140016998
   140012978:	mov    rcx,rax
   14001297b:	call   QWORD PTR [rip+0x3d77]        # 0x1400166f8
   140012981:	lea    rcx,[rsp+0x630]
   140012989:	test   al,al
   14001298b:	sete   dil
   14001298f:	call   0x140002a60
   140012994:	lea    rcx,[rsp+0x140]
   14001299c:	test   dil,dil
   14001299f:	je     0x140012cdd
   1400129a5:	lea    rdx,[rsp+0x540]
   1400129ad:	call   QWORD PTR [rip+0x3fe5]        # 0x140016998
   1400129b3:	lea    rcx,[rsp+0x170]
   1400129bb:	mov    rdx,rax
   1400129be:	call   0x140002e80
   1400129c3:	lea    rcx,[rsp+0x170]
   1400129cb:	mov    DWORD PTR [rsp+0x178],esi
   1400129d2:	call   QWORD PTR [rip+0x3ca0]        # 0x140016678
   1400129d8:	lea    rcx,[rsp+0x170]
   1400129e0:	mov    QWORD PTR [rsp+0x180],rax
   1400129e8:	call   QWORD PTR [rip+0x3c82]        # 0x140016670
   1400129ee:	lea    rcx,[rsp+0x540]
   1400129f6:	mov    QWORD PTR [rsp+0x188],rax
   1400129fe:	call   0x140002a60
   140012a03:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012a10:	mov    eax,DWORD PTR [rsp+0x178]
   140012a17:	inc    DWORD PTR [rsp+0x178]
   140012a1e:	test   eax,eax
   140012a20:	jne    0x140012a39
   140012a22:	mov    rax,QWORD PTR [rsp+0x188]
   140012a2a:	cmp    QWORD PTR [rsp+0x180],rax
   140012a32:	je     0x140012a39
   140012a34:	mov    dil,0x1
   140012a37:	jmp    0x140012a3c
   140012a39:	xor    dil,dil
   140012a3c:	bt     r12d,0x9
   140012a41:	jae    0x140012a55
   140012a43:	lea    rcx,[rsp+0x3c0]
   140012a4b:	btr    r12d,0x9
   140012a50:	call   0x140002a60
   140012a55:	test   dil,dil
   140012a58:	je     0x140012b58
   140012a5e:	bt     r12d,0xa
   140012a63:	mov    rsi,QWORD PTR [rsp+0x180]
   140012a6b:	jae    0x140012a80
   140012a6d:	btr    r12d,0xa
   140012a72:	lea    rcx,[rsp+0x3e0]
   140012a7a:	call   0x140002a60
   140012a7f:	nop
   140012a80:	bt     r12d,0xc
   140012a85:	mov    edi,DWORD PTR [rsp+0x178]
   140012a8c:	jae    0x140012aa0
   140012a8e:	lea    rcx,[rsp+0x400]
   140012a96:	btr    r12d,0xc
   140012a9b:	call   0x140002a60
   140012aa0:	test   edi,edi
   140012aa2:	je     0x140012b32
   140012aa8:	lea    rdx,[rsp+0x570]
   140012ab0:	mov    rcx,rsi
   140012ab3:	call   QWORD PTR [rip+0x3ee7]        # 0x1400169a0
   140012ab9:	lea    rdx,[rsp+0x628]
   140012ac1:	mov    rcx,rax
   140012ac4:	call   QWORD PTR [rip+0x37f6]        # 0x1400162c0
   140012aca:	mov    rcx,rax
   140012acd:	call   QWORD PTR [rip+0x3e7d]        # 0x140016950
   140012ad3:	mov    rcx,QWORD PTR [rip+0x357e]        # 0x140016058
   140012ada:	mov    rdx,rax
   140012add:	call   0x1400016a0
   140012ae2:	mov    rdx,QWORD PTR [rip+0x3577]        # 0x140016060
   140012ae9:	mov    rcx,rax
   140012aec:	call   QWORD PTR [rip+0x3576]        # 0x140016068
   140012af2:	lea    rcx,[rsp+0x628]
   140012afa:	call   QWORD PTR [rip+0x3778]        # 0x140016278
   140012b00:	lea    rcx,[rsp+0x570]
   140012b08:	call   QWORD PTR [rip+0x3e2a]        # 0x140016938
   140012b0e:	dec    DWORD PTR [rsp+0x178]
   140012b15:	bt     r12d,0xb
   140012b1a:	jae    0x140012a80
   140012b20:	btr    r12d,0xb
   140012b25:	lea    rcx,[rsp+0x420]
   140012b2d:	jmp    0x140012a7a
   140012b32:	add    QWORD PTR [rsp+0x180],0x8
   140012b3b:	bt     r12d,0x8
   140012b40:	jae    0x140012a10
   140012b46:	btr    r12d,0x8
   140012b4b:	lea    rcx,[rsp+0x440]
   140012b53:	jmp    0x1400129fe
   140012b58:	lea    rcx,[rsp+0x170]
   140012b60:	call   0x140002a60
   140012b65:	lea    rcx,[rsp+0x140]
   140012b6d:	call   QWORD PTR [rip+0x3ead]        # 0x140016a20
   140012b73:	lea    rcx,[rsp+0x138]
   140012b7b:	call   QWORD PTR [rip+0x36f7]        # 0x140016278
   140012b81:	lea    rcx,[rsp+0xa8]
   140012b89:	call   QWORD PTR [rip+0x36e9]        # 0x140016278
   140012b8f:	mov    eax,DWORD PTR [rbx+0x10]
   140012b92:	test   eax,eax
   140012b94:	je     0x140012bb5
   140012b96:	cmp    eax,0xffffffff
   140012b99:	je     0x140012bc5
   140012b9b:	mov    eax,r13d
   140012b9e:	lock xadd DWORD PTR [rbx+0x10],eax
   140012ba3:	add    eax,0xffffffff
   140012ba6:	setne  al
   140012ba9:	test   al,al
   140012bab:	jne    0x140012bc5
   140012bad:	mov    rbx,QWORD PTR [rsp+0x88]
   140012bb5:	lea    rdx,[rip+0x10a4]        # 0x140013c60
   140012bbc:	mov    rcx,rbx
   140012bbf:	call   QWORD PTR [rip+0x36d3]        # 0x140016298
   140012bc5:	mov    rcx,QWORD PTR [rsp+0x90]
   140012bcd:	mov    eax,DWORD PTR [rcx+0x10]
   140012bd0:	test   eax,eax
   140012bd2:	je     0x140012bf3
   140012bd4:	cmp    eax,0xffffffff
   140012bd7:	je     0x140012c00
   140012bd9:	mov    eax,r13d
   140012bdc:	lock xadd DWORD PTR [rcx+0x10],eax
   140012be1:	add    eax,0xffffffff
   140012be4:	setne  al
   140012be7:	test   al,al
   140012be9:	jne    0x140012c00
   140012beb:	mov    rcx,QWORD PTR [rsp+0x90]
   140012bf3:	lea    rdx,[rip+0xfffffffffffef726]        # 0x140002320
   140012bfa:	call   QWORD PTR [rip+0x3698]        # 0x140016298
   140012c00:	mov    rcx,QWORD PTR [rsp+0xa0]
   140012c08:	mov    eax,DWORD PTR [rcx]
   140012c0a:	test   eax,eax
   140012c0c:	je     0x140012c2c
   140012c0e:	cmp    eax,0xffffffff
   140012c11:	je     0x140012c32
   140012c13:	mov    eax,r13d
   140012c16:	lock xadd DWORD PTR [rcx],eax
   140012c1a:	add    eax,0xffffffff
   140012c1d:	setne  al
   140012c20:	test   al,al
   140012c22:	jne    0x140012c32
   140012c24:	mov    rcx,QWORD PTR [rsp+0xa0]
   140012c2c:	call   QWORD PTR [rip+0x3676]        # 0x1400162a8
   140012c32:	mov    rcx,QWORD PTR [rsp+0x60]
   140012c37:	mov    eax,DWORD PTR [rcx+0x10]
   140012c3a:	test   eax,eax
   140012c3c:	je     0x140012c5a
   140012c3e:	cmp    eax,0xffffffff
   140012c41:	je     0x140012c67
   140012c43:	mov    eax,r13d
   140012c46:	lock xadd DWORD PTR [rcx+0x10],eax
   140012c4b:	add    eax,0xffffffff
   140012c4e:	setne  al
   140012c51:	test   al,al
   140012c53:	jne    0x140012c67
   140012c55:	mov    rcx,QWORD PTR [rsp+0x60]
   140012c5a:	lea    rdx,[rip+0xfff]        # 0x140013c60
   140012c61:	call   QWORD PTR [rip+0x3631]        # 0x140016298
   140012c67:	mov    rcx,QWORD PTR [rsp+0x48]
   140012c6c:	mov    eax,DWORD PTR [rcx+0x10]
   140012c6f:	test   eax,eax
   140012c71:	je     0x140012c8f
   140012c73:	cmp    eax,0xffffffff
   140012c76:	je     0x140012c9c
   140012c78:	mov    eax,r13d
   140012c7b:	lock xadd DWORD PTR [rcx+0x10],eax
   140012c80:	add    eax,0xffffffff
   140012c83:	setne  al
   140012c86:	test   al,al
   140012c88:	jne    0x140012c9c
   140012c8a:	mov    rcx,QWORD PTR [rsp+0x48]
   140012c8f:	lea    rdx,[rip+0xfca]        # 0x140013c60
   140012c96:	call   QWORD PTR [rip+0x35fc]        # 0x140016298
   140012c9c:	mov    rcx,QWORD PTR [rsp+0x38]
   140012ca1:	mov    eax,DWORD PTR [rcx+0x10]
   140012ca4:	test   eax,eax
   140012ca6:	je     0x140012ccb
   140012ca8:	cmp    eax,0xffffffff
   140012cab:	je     0x140011b0b
   140012cb1:	lock xadd DWORD PTR [rcx+0x10],r13d
   140012cb7:	add    r13d,0xffffffff
   140012cbb:	setne  al
   140012cbe:	test   al,al
   140012cc0:	jne    0x140011b0b
   140012cc6:	mov    rcx,QWORD PTR [rsp+0x38]
   140012ccb:	lea    rdx,[rip+0xf8e]        # 0x140013c60
   140012cd2:	call   QWORD PTR [rip+0x35c0]        # 0x140016298
   140012cd8:	jmp    0x140011b0b
   140012cdd:	call   QWORD PTR [rip+0x3d3d]        # 0x140016a20
   140012ce3:	lea    rcx,[rsp+0x138]
   140012ceb:	call   QWORD PTR [rip+0x3587]        # 0x140016278
   140012cf1:	lea    rdx,[rsp+0xa0]
   140012cf9:	lea    r9,[rsp+0x48]
   140012cfe:	mov    QWORD PTR [rsp+0x20],rdx
   140012d03:	lea    r8,[rsp+0x38]
   140012d08:	lea    rcx,[rsp+0x130]
   140012d10:	lea    rdx,[rsp+0x158]
   140012d18:	call   0x14000db50
   140012d1d:	lea    rdx,[rsp+0x60]
   140012d22:	lea    rcx,[rsp+0x130]
   140012d2a:	call   0x1400086c0
   140012d2f:	mov    r12,QWORD PTR [rsp+0x60]
   140012d34:	mov    ecx,DWORD PTR [r12+0x10]
   140012d39:	lea    rax,[r12+0x10]
   140012d3e:	mov    QWORD PTR [rsp+0x710],r12
   140012d46:	test   ecx,ecx
   140012d48:	je     0x140012d5b
   140012d4a:	cmp    ecx,0xffffffff
   140012d4d:	je     0x140012d5b
   140012d4f:	lock add DWORD PTR [rax],0x1
   140012d53:	mov    r12,QWORD PTR [rsp+0x710]
   140012d5b:	test   BYTE PTR [r12+0x28],0x1
   140012d61:	jne    0x140012d83
   140012d63:	mov    ecx,DWORD PTR [rax]
   140012d65:	cmp    ecx,0x1
   140012d68:	je     0x140012d83
   140012d6a:	test   ecx,ecx
   140012d6c:	je     0x140012d83
   140012d6e:	lea    rcx,[rsp+0x710]
   140012d76:	call   0x140002ae0
   140012d7b:	mov    r12,QWORD PTR [rsp+0x710]
   140012d83:	mov    rcx,r12
   140012d86:	call   QWORD PTR [rip+0x37f4]        # 0x140016580
   140012d8c:	mov    QWORD PTR [rsp+0x720],rax
   140012d94:	mov    edi,0x1
   140012d99:	mov    rbx,rax
   140012d9c:	mov    DWORD PTR [rsp+0x718],edi
   140012da3:	cmp    rax,r12
   140012da6:	je     0x140012e06
   140012da8:	mov    rbp,QWORD PTR [rax+0x10]
   140012dac:	nop    DWORD PTR [rax+0x0]
   140012db0:	test   edi,edi
   140012db2:	je     0x140012dfb
   140012db4:	mov    rcx,rbp
   140012db7:	call   QWORD PTR [rip+0x35fb]        # 0x1400163b8
   140012dbd:	lea    rcx,[rsp+0x698]
   140012dc5:	mov    r8d,r13d
   140012dc8:	mov    rdx,rax
   140012dcb:	call   QWORD PTR [rip+0x359f]        # 0x140016370
   140012dd1:	lea    rdx,[rsp+0x460]
   140012dd9:	lea    rcx,[rsp+0x90]
   140012de1:	mov    r8,rax
   140012de4:	call   0x140008540
   140012de9:	lea    rcx,[rsp+0x698]
   140012df1:	call   QWORD PTR [rip+0x3481]        # 0x140016278
   140012df7:	dec    edi
   140012df9:	jmp    0x140012db0
   140012dfb:	mov    rcx,rbx
   140012dfe:	call   QWORD PTR [rip+0x3434]        # 0x140016238
   140012e04:	jmp    0x140012d94
   140012e06:	mov    eax,DWORD PTR [r12+0x10]
   140012e0b:	mov    QWORD PTR [rsp+0x720],rbx
   140012e13:	test   eax,eax
   140012e15:	je     0x140012e38
   140012e17:	cmp    eax,0xffffffff
   140012e1a:	je     0x140012e48
   140012e1c:	mov    eax,r13d
   140012e1f:	lock xadd DWORD PTR [r12+0x10],eax
   140012e26:	add    eax,0xffffffff
   140012e29:	setne  al
   140012e2c:	test   al,al
   140012e2e:	jne    0x140012e48
   140012e30:	mov    r12,QWORD PTR [rsp+0x710]
   140012e38:	lea    rdx,[rip+0xe21]        # 0x140013c60
   140012e3f:	mov    rcx,r12
   140012e42:	call   QWORD PTR [rip+0x3450]        # 0x140016298
   140012e48:	mov    r14,QWORD PTR [rsp+0x130]
   140012e50:	mov    ecx,DWORD PTR [r14+0x10]
   140012e54:	mov    QWORD PTR [rsp+0x738],r14
   140012e5c:	lea    rax,[r14+0x10]
   140012e60:	test   ecx,ecx
   140012e62:	je     0x140012e74
   140012e64:	cmp    ecx,0xffffffff
   140012e67:	je     0x140012e74
   140012e69:	lock add DWORD PTR [rax],edi
   140012e6c:	mov    r14,QWORD PTR [rsp+0x738]
   140012e74:	test   BYTE PTR [r14+0x28],dil
   140012e78:	jne    0x140012e99
   140012e7a:	mov    ecx,DWORD PTR [rax]
   140012e7c:	cmp    ecx,edi
   140012e7e:	je     0x140012e99
   140012e80:	test   ecx,ecx
   140012e82:	je     0x140012e99
   140012e84:	lea    rcx,[rsp+0x738]
   140012e8c:	call   0x140002ae0
   140012e91:	mov    r14,QWORD PTR [rsp+0x738]
   140012e99:	mov    rcx,r14
   140012e9c:	call   QWORD PTR [rip+0x36de]        # 0x140016580
   140012ea2:	mov    QWORD PTR [rsp+0x748],rax
   140012eaa:	mov    ebx,0x1
   140012eaf:	mov    r12,rax
   140012eb2:	mov    DWORD PTR [rsp+0x740],ebx
   140012eb9:	cmp    rax,r14
   140012ebc:	je     0x140012f8a
   140012ec2:	mov    rbp,QWORD PTR [rax+0x10]
   140012ec6:	mov    QWORD PTR [rsp+0x580],rbp
   140012ece:	xchg   ax,ax
   140012ed0:	test   ebx,ebx
   140012ed2:	je     0x140012f7c
   140012ed8:	mov    rcx,rbp
   140012edb:	call   QWORD PTR [rip+0x34d7]        # 0x1400163b8
   140012ee1:	lea    rcx,[rsp+0x210]
   140012ee9:	mov    r8d,r13d
   140012eec:	mov    rdx,rax
   140012eef:	call   QWORD PTR [rip+0x347b]        # 0x140016370
   140012ef5:	mov    rax,QWORD PTR [rsp+0x90]
   140012efd:	mov    r8d,esi
   140012f00:	cmp    DWORD PTR [rax+0x20],esi
   140012f03:	je     0x140012f19
   140012f05:	mov    edx,DWORD PTR [rax+0x24]
   140012f08:	lea    rcx,[rsp+0x210]
   140012f10:	call   QWORD PTR [rip+0x33ca]        # 0x1400162e0
   140012f16:	mov    r8d,eax
   140012f19:	lea    rdx,[rsp+0x210]
   140012f21:	lea    rcx,[rsp+0x90]
   140012f29:	call   0x140001e30
   140012f2e:	mov    rcx,QWORD PTR [rsp+0x90]
   140012f36:	cmp    QWORD PTR [rax],rcx
   140012f39:	lea    rcx,[rsp+0x210]
   140012f41:	sete   dil
   140012f45:	call   QWORD PTR [rip+0x332d]        # 0x140016278
   140012f4b:	test   dil,dil
   140012f4e:	je     0x140012f75
   140012f50:	lea    r9,[rsp+0xd2]
   140012f58:	lea    r8,[rsp+0x580]
   140012f60:	lea    rdx,[rsp+0x480]
   140012f68:	lea    rcx,[rsp+0x88]
   140012f70:	call   0x140003f80
   140012f75:	dec    ebx
   140012f77:	jmp    0x140012ed0
   140012f7c:	mov    rcx,r12
   140012f7f:	call   QWORD PTR [rip+0x32b3]        # 0x140016238
   140012f85:	jmp    0x140012eaa
   140012f8a:	mov    eax,DWORD PTR [r14+0x10]
   140012f8e:	mov    QWORD PTR [rsp+0x748],r12
   140012f96:	test   eax,eax
   140012f98:	je     0x140012fba
   140012f9a:	cmp    eax,0xffffffff
   140012f9d:	je     0x140012fca
   140012f9f:	mov    eax,r13d
   140012fa2:	lock xadd DWORD PTR [r14+0x10],eax
   140012fa8:	add    eax,0xffffffff
   140012fab:	setne  al
   140012fae:	test   al,al
   140012fb0:	jne    0x140012fca
   140012fb2:	mov    r14,QWORD PTR [rsp+0x738]
   140012fba:	lea    rdx,[rip+0xc9f]        # 0x140013c60
   140012fc1:	mov    rcx,r14
   140012fc4:	call   QWORD PTR [rip+0x32ce]        # 0x140016298
   140012fca:	mov    rcx,QWORD PTR [rsp+0x130]
   140012fd2:	mov    eax,DWORD PTR [rcx+0x10]
   140012fd5:	test   eax,eax
   140012fd7:	je     0x140012ff8
   140012fd9:	cmp    eax,0xffffffff
   140012fdc:	je     0x140013005
   140012fde:	mov    eax,r13d
   140012fe1:	lock xadd DWORD PTR [rcx+0x10],eax
   140012fe6:	add    eax,0xffffffff
   140012fe9:	setne  al
   140012fec:	test   al,al
   140012fee:	jne    0x140013005
   140012ff0:	mov    rcx,QWORD PTR [rsp+0x130]
   140012ff8:	lea    rdx,[rip+0xc61]        # 0x140013c60
   140012fff:	call   QWORD PTR [rip+0x3293]        # 0x140016298
   140013005:	lea    rcx,[rsp+0xa8]
   14001300d:	call   QWORD PTR [rip+0x3265]        # 0x140016278
   140013013:	lea    rdx,[rip+0x4426]        # 0x140017440
   14001301a:	lea    rcx,[rsp+0x2c0]
   140013022:	mov    r8d,r13d
   140013025:	call   QWORD PTR [rip+0x3345]        # 0x140016370
   14001302b:	lea    rdx,[rip+0x4406]        # 0x140017438
   140013032:	lea    rcx,[rsp+0x280]
   14001303a:	mov    r8d,r13d
   14001303d:	call   QWORD PTR [rip+0x332d]        # 0x140016370
   140013043:	lea    r9,[rsp+0x2c0]
   14001304b:	lea    r8,[rsp+0x280]
   140013053:	lea    rdx,[rsp+0x4a0]
   14001305b:	lea    rcx,[rip+0xa07e]        # 0x14001d0e0
   140013062:	call   0x140004db0
   140013067:	lea    rcx,[rsp+0x280]
   14001306f:	call   QWORD PTR [rip+0x3203]        # 0x140016278
   140013075:	lea    rcx,[rsp+0x2c0]
   14001307d:	call   QWORD PTR [rip+0x31f5]        # 0x140016278
   140013083:	lea    rdx,[rip+0x43a2]        # 0x14001742c
   14001308a:	lea    rcx,[rsp+0x2e0]
   140013092:	mov    r8d,r13d
   140013095:	call   QWORD PTR [rip+0x32d5]        # 0x140016370
   14001309b:	lea    rdx,[rip+0x436e]        # 0x140017410
   1400130a2:	lea    rcx,[rsp+0x2d0]
   1400130aa:	mov    r8d,r13d
   1400130ad:	call   QWORD PTR [rip+0x32bd]        # 0x140016370
   1400130b3:	lea    r9,[rsp+0x2e0]
   1400130bb:	lea    r8,[rsp+0x2d0]
   1400130c3:	lea    rdx,[rsp+0x4c0]
   1400130cb:	lea    rcx,[rip+0xa00e]        # 0x14001d0e0
   1400130d2:	call   0x140004db0
   1400130d7:	lea    rcx,[rsp+0x2d0]
   1400130df:	call   QWORD PTR [rip+0x3193]        # 0x140016278
   1400130e5:	lea    rcx,[rsp+0x2e0]
   1400130ed:	call   QWORD PTR [rip+0x3185]        # 0x140016278
   1400130f3:	lea    rcx,[rsp+0x200]
   1400130fb:	call   QWORD PTR [rip+0x322f]        # 0x140016330
   140013101:	lea    rdx,[rsp+0x200]
   140013109:	lea    rcx,[rsp+0x298]
   140013111:	call   0x140013f00
   140013116:	lea    rcx,[rsp+0x298]
   14001311e:	call   0x140013c60
   140013123:	lea    rdx,[rip+0x42d6]        # 0x140017400
   14001312a:	xor    eax,eax
   14001312c:	mov    rdi,rdx
   14001312f:	mov    QWORD PTR [rsp+0xf8],rdx
   140013137:	mov    rcx,r13
   14001313a:	repnz scas al,BYTE PTR es:[rdi]
   14001313c:	lea    rdx,[rsp+0x850]
   140013144:	not    rcx
   140013147:	dec    rcx
   14001314a:	mov    DWORD PTR [rsp+0xf0],ecx
   140013151:	lea    rcx,[rsp+0x2f0]
   140013159:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140013161:	movdqa XMMWORD PTR [rsp+0x850],xmm0
   14001316a:	call   QWORD PTR [rip+0x30a0]        # 0x140016210
   140013170:	lea    rcx,[rsp+0x638]
   140013178:	call   QWORD PTR [rip+0x3082]        # 0x140016200
   14001317e:	mov    r9d,0x2
   140013184:	lea    rdx,[rsp+0x2f0]
   14001318c:	lea    r8d,[r9-0x1]
   140013190:	lea    rcx,[rsp+0x298]
   140013198:	mov    QWORD PTR [rsp+0x20],rax
   14001319d:	call   0x140013c70
   1400131a2:	lea    rcx,[rsp+0x638]
   1400131aa:	call   QWORD PTR [rip+0x3788]        # 0x140016938
   1400131b0:	lea    rcx,[rsp+0x2f0]
   1400131b8:	call   QWORD PTR [rip+0x377a]        # 0x140016938
   1400131be:	lea    rcx,[rsp+0x20c]
   1400131c6:	mov    dl,0x20
   1400131c8:	call   QWORD PTR [rip+0x374a]        # 0x140016918
   1400131ce:	lea    rdx,[rsp+0x5b0]
   1400131d6:	mov    r9d,r13d
   1400131d9:	movzx  ecx,WORD PTR [rax]
   1400131dc:	mov    r8d,0x1
   1400131e2:	mov    WORD PTR [rsp+0xc8],cx
   1400131ea:	lea    rcx,[rsp+0x40]
   1400131ef:	call   0x140004a50
   1400131f4:	mov    r9d,0x1
   1400131fa:	lea    r8,[rsp+0xc8]
   140013202:	mov    rdx,rax
   140013205:	lea    rcx,[rsp+0x300]
   14001320d:	call   QWORD PTR [rip+0x36e5]        # 0x1400168f8
   140013213:	lea    rcx,[rsp+0x40]
   140013218:	xor    edx,edx
   14001321a:	call   QWORD PTR [rip+0x34c8]        # 0x1400166e8
   140013220:	lea    rcx,[rsp+0x648]
   140013228:	mov    rdx,rax
   14001322b:	call   QWORD PTR [rip+0x333f]        # 0x140016570
   140013231:	lea    rdx,[rsp+0x5a0]
   140013239:	mov    rcx,rax
   14001323c:	call   QWORD PTR [rip+0x353e]        # 0x140016780
   140013242:	lea    rdx,[rip+0x4107]        # 0x140017350
   140013249:	lea    rcx,[rsp+0x6e0]
   140013251:	mov    rdi,rax
   140013254:	call   QWORD PTR [rip+0x347e]        # 0x1400166d8
   14001325a:	lea    r9,[rsp+0x300]
   140013262:	lea    rdx,[rsp+0x590]
   14001326a:	mov    r8,rdi
   14001326d:	mov    rcx,rax
   140013270:	call   QWORD PTR [rip+0x318a]        # 0x140016400
   140013276:	lea    rcx,[rsp+0x298]
   14001327e:	mov    rdx,rax
   140013281:	call   0x140014870
   140013286:	lea    rcx,[rsp+0x590]
   14001328e:	call   QWORD PTR [rip+0x36a4]        # 0x140016938
   140013294:	lea    rcx,[rsp+0x6e0]
   14001329c:	call   QWORD PTR [rip+0x3696]        # 0x140016938
   1400132a2:	lea    rcx,[rsp+0x5a0]
   1400132aa:	call   QWORD PTR [rip+0x3688]        # 0x140016938
   1400132b0:	lea    rcx,[rsp+0x648]
   1400132b8:	call   QWORD PTR [rip+0x326a]        # 0x140016528
   1400132be:	lea    rcx,[rsp+0x300]
   1400132c6:	call   QWORD PTR [rip+0x366c]        # 0x140016938
   1400132cc:	lea    rcx,[rsp+0x5b0]
   1400132d4:	call   0x140002910
   1400132d9:	lea    rdx,[rip+0x4060]        # 0x140017340
   1400132e0:	lea    rcx,[rsp+0x310]
   1400132e8:	call   QWORD PTR [rip+0x33ea]        # 0x1400166d8
   1400132ee:	lea    rdx,[rsp+0x310]
   1400132f6:	lea    rcx,[rsp+0x298]
   1400132fe:	call   0x140014230
   140013303:	lea    rcx,[rsp+0x310]
   14001330b:	call   QWORD PTR [rip+0x3627]        # 0x140016938
   140013311:	lea    rcx,[rsp+0x98]
   140013319:	call   QWORD PTR [rip+0x33d9]        # 0x1400166f8
   14001331f:	test   al,al
   140013321:	jne    0x140013335
   140013323:	lea    rdx,[rsp+0x98]
   14001332b:	lea    rcx,[rsp+0x78]
   140013330:	call   0x140003dc0
   140013335:	lea    rcx,[rsp+0x78]
   14001333a:	call   0x140008ce0
   14001333f:	mov    rdx,QWORD PTR [rip+0x2eda]        # 0x140016220
   140013346:	lea    rcx,[rsp+0x230]
   14001334e:	mov    QWORD PTR [rsp+0x1d0],rdx
   140013356:	lea    rdx,[rsp+0x78]
   14001335b:	call   0x140002860
   140013360:	lea    rcx,[rsp+0x230]
   140013368:	mov    DWORD PTR [rsp+0x238],esi
   14001336f:	call   QWORD PTR [rip+0x3303]        # 0x140016678
   140013375:	lea    rcx,[rsp+0x230]
   14001337d:	mov    QWORD PTR [rsp+0x240],rax
   140013385:	call   QWORD PTR [rip+0x32e5]        # 0x140016670
   14001338b:	mov    rdi,QWORD PTR [rsp+0x240]
   140013393:	mov    edx,DWORD PTR [rsp+0x238]
   14001339a:	mov    QWORD PTR [rsp+0x248],rax
   1400133a2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400133b0:	mov    ecx,edx
   1400133b2:	inc    edx
   1400133b4:	mov    DWORD PTR [rsp+0x238],edx
   1400133bb:	test   ecx,ecx
   1400133bd:	jne    0x140013426
   1400133bf:	cmp    rdi,rax
   1400133c2:	je     0x140013426
   1400133c4:	test   edx,edx
   1400133c6:	je     0x140013408
   1400133c8:	lea    rcx,[rsp+0x6a8]
   1400133d0:	mov    rdx,rdi
   1400133d3:	call   0x140001000
   1400133d8:	lea    rcx,[rsp+0x1d0]
   1400133e0:	mov    rdx,rax
   1400133e3:	call   0x140003d40
   1400133e8:	lea    rcx,[rsp+0x6a8]
   1400133f0:	call   QWORD PTR [rip+0x3542]        # 0x140016938
   1400133f6:	mov    edx,DWORD PTR [rsp+0x238]
   1400133fd:	dec    edx
   1400133ff:	mov    DWORD PTR [rsp+0x238],edx
   140013406:	jmp    0x1400133c4
   140013408:	mov    rdi,QWORD PTR [rsp+0x240]
   140013410:	mov    rax,QWORD PTR [rsp+0x248]
   140013418:	add    rdi,0x8
   14001341c:	mov    QWORD PTR [rsp+0x240],rdi
   140013424:	jmp    0x1400133b0
   140013426:	lea    rcx,[rsp+0x230]
   14001342e:	call   0x140002910
   140013433:	lea    rdx,[rip+0x3ef6]        # 0x140017330
   14001343a:	lea    rcx,[rsp+0x290]
   140013442:	call   QWORD PTR [rip+0x3290]        # 0x1400166d8
   140013448:	lea    r8,[rsp+0x1d0]
   140013450:	lea    rdx,[rsp+0x290]
   140013458:	lea    rcx,[rsp+0x298]
   140013460:	call   0x140014480
   140013465:	lea    rcx,[rsp+0x290]
   14001346d:	call   QWORD PTR [rip+0x34c5]        # 0x140016938
   140013473:	mov    r12,QWORD PTR [rsp+0x88]
   14001347b:	mov    rdx,QWORD PTR [rip+0x2dae]        # 0x140016230
   140013482:	mov    eax,DWORD PTR [r12+0x10]
   140013487:	lea    r14,[r12+0x10]
   14001348c:	mov    QWORD PTR [rsp+0xe0],rdx
   140013494:	mov    QWORD PTR [rsp+0x548],r12
   14001349c:	mov    QWORD PTR [rsp+0xf0],r14
   1400134a4:	test   eax,eax
   1400134a6:	je     0x1400134ba
   1400134a8:	cmp    eax,0xffffffff
   1400134ab:	je     0x1400134ba
   1400134ad:	lock add DWORD PTR [r14],0x1
   1400134b2:	mov    r12,QWORD PTR [rsp+0x548]
   1400134ba:	mov    rax,QWORD PTR [rsp+0x88]
   1400134c2:	test   BYTE PTR [rax+0x28],0x1
   1400134c6:	jne    0x1400134e9
   1400134c8:	mov    eax,DWORD PTR [r14]
   1400134cb:	cmp    eax,0x1
   1400134ce:	je     0x1400134e9
   1400134d0:	test   eax,eax
   1400134d2:	je     0x1400134e9
   1400134d4:	lea    rcx,[rsp+0x548]
   1400134dc:	call   0x140002ae0
   1400134e1:	mov    r12,QWORD PTR [rsp+0x548]
   1400134e9:	mov    rcx,r12
   1400134ec:	call   QWORD PTR [rip+0x308e]        # 0x140016580
   1400134f2:	mov    QWORD PTR [rsp+0x558],rax
   1400134fa:	mov    edi,0x1
   1400134ff:	mov    rbp,rax
   140013502:	mov    DWORD PTR [rsp+0x550],edi
   140013509:	cmp    rax,r12
   14001350c:	je     0x140013598
   140013512:	mov    rbx,QWORD PTR [rax+0x10]
   140013516:	mov    QWORD PTR [rsp+0x5c0],rbx
   14001351e:	xchg   ax,ax
   140013520:	test   edi,edi
   140013522:	je     0x14001358a
   140013524:	lea    rcx,[rsp+0x658]
   14001352c:	mov    rdx,rbx
   14001352f:	call   0x140005cb0
   140013534:	lea    rcx,[rsp+0x2f8]
   14001353c:	mov    rdx,rax
   14001353f:	call   QWORD PTR [rip+0x2e33]        # 0x140016378
   140013545:	lea    r9,[rsp+0x5c0]
   14001354d:	lea    r8,[rsp+0x2f8]
   140013555:	lea    rdx,[rsp+0x4e0]
   14001355d:	lea    rcx,[rsp+0xe0]
   140013565:	call   0x140005220
   14001356a:	lea    rcx,[rsp+0x2f8]
   140013572:	call   QWORD PTR [rip+0x33c0]        # 0x140016938
   140013578:	lea    rcx,[rsp+0x658]
   140013580:	call   QWORD PTR [rip+0x2cf2]        # 0x140016278
   140013586:	dec    edi
   140013588:	jmp    0x140013520
   14001358a:	mov    rcx,rbp
   14001358d:	call   QWORD PTR [rip+0x2ca5]        # 0x140016238
   140013593:	jmp    0x1400134fa
   140013598:	mov    eax,DWORD PTR [r12+0x10]
   14001359d:	mov    QWORD PTR [rsp+0x558],rbp
   1400135a5:	test   eax,eax
   1400135a7:	je     0x1400135ca
   1400135a9:	cmp    eax,0xffffffff
   1400135ac:	je     0x1400135da
   1400135ae:	mov    eax,r13d
   1400135b1:	lock xadd DWORD PTR [r12+0x10],eax
   1400135b8:	add    eax,0xffffffff
   1400135bb:	setne  al
   1400135be:	test   al,al
   1400135c0:	jne    0x1400135da
   1400135c2:	mov    r12,QWORD PTR [rsp+0x548]
   1400135ca:	lea    rdx,[rip+0x68f]        # 0x140013c60
   1400135d1:	mov    rcx,r12
   1400135d4:	call   QWORD PTR [rip+0x2cbe]        # 0x140016298
   1400135da:	lea    rax,[rsp+0x298]
   1400135e2:	lea    rcx,[rsp+0x278]
   1400135ea:	mov    QWORD PTR [rsp+0x270],rax
   1400135f2:	call   QWORD PTR [rip+0x2c08]        # 0x140016200
   1400135f8:	cmp    BYTE PTR [rsp+0x980],sil
   140013600:	je     0x140013615
   140013602:	lea    rdx,[rsp+0x58]
   140013607:	lea    rcx,[rsp+0x278]
   14001360f:	call   QWORD PTR [rip+0x2bf3]        # 0x140016208
   140013615:	mov    r12,QWORD PTR [rsp+0xe0]
   14001361d:	mov    eax,DWORD PTR [r12]
   140013621:	test   eax,eax
   140013623:	je     0x14001364c
   140013625:	cmp    eax,0xffffffff
   140013628:	je     0x140013637
   14001362a:	lock add DWORD PTR [r12],edi
   14001362f:	mov    r12,QWORD PTR [rsp+0xe0]
   140013637:	mov    rbp,r12
   14001363a:	mov    QWORD PTR [rsp+0x2b8],r12
   140013642:	mov    QWORD PTR [rsp+0x758],r12
   14001364a:	jmp    0x140013691
   14001364c:	call   QWORD PTR [rip+0x2c36]        # 0x140016288
   140013652:	mov    rcx,QWORD PTR [r12+0x10]
   140013657:	mov    rbp,rax
   14001365a:	mov    QWORD PTR [rsp+0x2b8],rax
   140013662:	mov    QWORD PTR [rsp+0x758],rax
   14001366a:	test   rcx,rcx
   14001366d:	je     0x140013691
   14001366f:	mov    rdx,rax
   140013672:	call   0x1400015c0
   140013677:	lea    rdx,[rbp+0x8]
   14001367b:	mov    rcx,rax
   14001367e:	mov    QWORD PTR [rbp+0x10],rax
   140013682:	call   QWORD PTR [rip+0x3030]        # 0x1400166b8
   140013688:	mov    rcx,rbp
   14001368b:	call   QWORD PTR [rip+0x2caf]        # 0x140016340
   140013691:	cmp    QWORD PTR [rbp+0x10],rsi
   140013695:	je     0x14001369d
   140013697:	mov    rax,QWORD PTR [rbp+0x20]
   14001369b:	jmp    0x1400136a1
   14001369d:	lea    rax,[rbp+0x8]
   1400136a1:	mov    rdi,QWORD PTR [rsp+0x38]
   1400136a6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400136ab:	lea    r13,[rbp+0x8]
   1400136af:	mov    QWORD PTR [rsp+0x770],r13
   1400136b7:	mov    r15d,0x1
   1400136bd:	mov    QWORD PTR [rsp+0x768],rax
   1400136c5:	mov    QWORD PTR [rsp+0x1f0],rax
   1400136cd:	mov    DWORD PTR [rsp+0x760],r15d
   1400136d5:	cmp    rax,r13
   1400136d8:	je     0x1400137f1
   1400136de:	mov    r14,QWORD PTR [rax+0x20]
   1400136e2:	test   r15d,r15d
   1400136e5:	je     0x1400137de
   1400136eb:	mov    ecx,DWORD PTR [rbx+0x20]
   1400136ee:	mov    r8d,esi
   1400136f1:	test   ecx,ecx
   1400136f3:	je     0x140013739
   1400136f5:	mov    r8,r14
   1400136f8:	shr    r8,0x1f
   1400136fc:	xor    r8d,DWORD PTR [rbx+0x24]
   140013700:	xor    r8d,r14d
   140013703:	test   ecx,ecx
   140013705:	je     0x140013739
   140013707:	xor    edx,edx
   140013709:	mov    eax,r8d
   14001370c:	div    ecx
   14001370e:	mov    rax,QWORD PTR [rbx+0x8]
   140013712:	lea    rdx,[rax+rdx*8]
   140013716:	mov    rax,QWORD PTR [rdx]
   140013719:	cmp    rax,rbx
   14001371c:	je     0x14001373e
   14001371e:	xchg   ax,ax
   140013720:	cmp    r8d,DWORD PTR [rax+0x8]
   140013724:	jne    0x14001372c
   140013726:	cmp    r14,QWORD PTR [rax+0x10]
   14001372a:	je     0x14001373e
   14001372c:	mov    rdx,rax
   14001372f:	mov    rax,QWORD PTR [rax]
   140013732:	cmp    rax,rbx
   140013735:	jne    0x140013720
   140013737:	jmp    0x14001373e
   140013739:	lea    rdx,[rsp+0x48]
   14001373e:	cmp    QWORD PTR [rdx],rbx
   140013741:	mov    ecx,DWORD PTR [rdi+0x20]
   140013744:	mov    r8d,esi
   140013747:	setne  BYTE PTR [rsp+0x980]
   14001374f:	test   ecx,ecx
   140013751:	je     0x140013799
   140013753:	mov    r8,r14
   140013756:	shr    r8,0x1f
   14001375a:	xor    r8d,DWORD PTR [rdi+0x24]
   14001375e:	xor    r8d,r14d
   140013761:	test   ecx,ecx
   140013763:	je     0x140013799
   140013765:	xor    edx,edx
   140013767:	mov    eax,r8d
   14001376a:	div    ecx
   14001376c:	mov    rax,QWORD PTR [rdi+0x8]
   140013770:	lea    rdx,[rax+rdx*8]
   140013774:	mov    rax,QWORD PTR [rdx]
   140013777:	cmp    rax,rdi
   14001377a:	je     0x14001379e
   14001377c:	nop    DWORD PTR [rax+0x0]
   140013780:	cmp    r8d,DWORD PTR [rax+0x8]
   140013784:	jne    0x14001378c
   140013786:	cmp    r14,QWORD PTR [rax+0x10]
   14001378a:	je     0x14001379e
   14001378c:	mov    rdx,rax
   14001378f:	mov    rax,QWORD PTR [rax]
   140013792:	cmp    rax,rdi
   140013795:	jne    0x140013780
   140013797:	jmp    0x14001379e
   140013799:	lea    rdx,[rsp+0x38]
   14001379e:	cmp    QWORD PTR [rdx],rdi
   1400137a1:	lea    rcx,[rsp+0x158]
   1400137a9:	setne  bpl
   1400137ad:	call   QWORD PTR [rip+0x321d]        # 0x1400169d0
   1400137b3:	lea    rcx,[rsp+0x270]
   1400137bb:	mov    rdx,rax
   1400137be:	movzx  eax,BYTE PTR [rsp+0x980]
   1400137c6:	movzx  r9d,bpl
   1400137ca:	mov    r8,r14
   1400137cd:	mov    BYTE PTR [rsp+0x20],al
   1400137d1:	call   0x14000c610
   1400137d6:	dec    r15d
   1400137d9:	jmp    0x1400136e2
   1400137de:	mov    rcx,QWORD PTR [rsp+0x1f0]
   1400137e6:	call   QWORD PTR [rip+0x2a54]        # 0x140016240
   1400137ec:	jmp    0x1400136b7
   1400137f1:	mov    rbp,QWORD PTR [rsp+0x2b8]
   1400137f9:	mov    r13,0xffffffffffffffff
   140013800:	mov    eax,DWORD PTR [rbp+0x0]
   140013803:	test   eax,eax
   140013805:	je     0x140013838
   140013807:	cmp    eax,r13d
   14001380a:	je     0x140013840
   14001380c:	mov    eax,r13d
   14001380f:	lock xadd DWORD PTR [rbp+0x0],eax
   140013814:	mov    rdi,QWORD PTR [rsp+0x38]
   140013819:	mov    rbx,QWORD PTR [rsp+0x48]
   14001381e:	mov    r12,QWORD PTR [rsp+0xe0]
   140013826:	add    eax,r13d
   140013829:	setne  al
   14001382c:	test   al,al
   14001382e:	jne    0x140013840
   140013830:	mov    rbp,QWORD PTR [rsp+0x758]
   140013838:	mov    rcx,rbp
   14001383b:	call   0x140002770
   140013840:	mov    rax,QWORD PTR [rip+0x98a1]        # 0x14001d0e8
   140013847:	cmp    QWORD PTR [rax+0x10],rsi
   14001384b:	je     0x140013853
   14001384d:	mov    rbp,QWORD PTR [rax+0x20]
   140013851:	jmp    0x140013857
   140013853:	lea    rbp,[rax+0x8]
   140013857:	add    rax,0x8
   14001385b:	cmp    rbp,rax
   14001385e:	je     0x14001389d
   140013860:	lea    r8,[rbp+0x20]
   140013864:	lea    r9,[rsp+0x90]
   14001386c:	lea    rdx,[rsp+0x158]
   140013874:	lea    rcx,[rsp+0x270]
   14001387c:	call   0x14000fcc0
   140013881:	mov    rcx,rbp
   140013884:	call   QWORD PTR [rip+0x29b6]        # 0x140016240
   14001388a:	mov    rbp,rax
   14001388d:	mov    rax,QWORD PTR [rip+0x9854]        # 0x14001d0e8
   140013894:	add    rax,0x8
   140013898:	cmp    rbp,rax
   14001389b:	jne    0x140013860
   14001389d:	lea    rcx,[rsp+0x58]
   1400138a2:	call   QWORD PTR [rip+0x2db0]        # 0x140016658
   1400138a8:	test   al,al
   1400138aa:	je     0x1400138b9
   1400138ac:	lea    rcx,[rsp+0x270]
   1400138b4:	call   0x140001140
   1400138b9:	lea    rdx,[rsp+0xc0]
   1400138c1:	lea    rcx,[rsp+0x298]
   1400138c9:	call   0x140014870
   1400138ce:	lea    rcx,[rsp+0x298]
   1400138d6:	call   0x140014320
   1400138db:	lea    rcx,[rsp+0x298]
   1400138e3:	call   0x140013c60
   1400138e8:	lea    rcx,[rsp+0x200]
   1400138f0:	call   QWORD PTR [rip+0x305a]        # 0x140016950
   1400138f6:	mov    rcx,QWORD PTR [rip+0x2803]        # 0x140016100
   1400138fd:	mov    rdx,rax
   140013900:	call   0x1400016a0
   140013905:	mov    rdx,QWORD PTR [rip+0x27ec]        # 0x1400160f8
   14001390c:	mov    rcx,rax
   14001390f:	call   QWORD PTR [rip+0x2753]        # 0x140016068
   140013915:	lea    rcx,[rsp+0x788]
   14001391d:	xor    edx,edx
   14001391f:	call   QWORD PTR [rip+0x2d8b]        # 0x1400166b0
   140013925:	lea    rcx,[rsp+0x788]
   14001392d:	movzx  edx,r15b
   140013931:	call   QWORD PTR [rip+0x2d71]        # 0x1400166a8
   140013937:	lea    rcx,[rsp+0x788]
   14001393f:	xor    edx,edx
   140013941:	call   QWORD PTR [rip+0x2d59]        # 0x1400166a0
   140013947:	lea    rax,[rip+0x39da]        # 0x140017328
   14001394e:	lea    r9,[rsp+0x100]
   140013956:	lea    r8,[rip+0x39bb]        # 0x140017318
   14001395d:	lea    rdx,[rsp+0x788]
   140013965:	lea    rcx,[rsp+0x5d0]
   14001396d:	mov    DWORD PTR [rsp+0x28],esi
   140013971:	mov    QWORD PTR [rsp+0x20],rax
   140013976:	call   QWORD PTR [rip+0x2d1c]        # 0x140016698
   14001397c:	lea    rcx,[rsp+0x5d0]
   140013984:	call   QWORD PTR [rip+0x2d06]        # 0x140016690
   14001398a:	lea    rcx,[rsp+0x788]
   140013992:	call   QWORD PTR [rip+0x2cf0]        # 0x140016688
   140013998:	call   QWORD PTR [rip+0x2fd2]        # 0x140016970
   14001399e:	lea    rcx,[rsp+0x788]
   1400139a6:	mov    esi,eax
   1400139a8:	call   QWORD PTR [rip+0x2cd2]        # 0x140016680
   1400139ae:	lea    rcx,[rsp+0x278]
   1400139b6:	call   QWORD PTR [rip+0x2f7c]        # 0x140016938
   1400139bc:	mov    r11d,DWORD PTR [r12]
   1400139c0:	test   r11d,r11d
   1400139c3:	je     0x1400139ef
   1400139c5:	cmp    r11d,r13d
   1400139c8:	je     0x1400139f7
   1400139ca:	mov    ecx,r13d
   1400139cd:	lock xadd DWORD PTR [r12],ecx
   1400139d3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400139d8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400139dd:	add    ecx,r13d
   1400139e0:	setne  al
   1400139e3:	test   al,al
   1400139e5:	jne    0x1400139f7
   1400139e7:	mov    r12,QWORD PTR [rsp+0xe0]
   1400139ef:	mov    rcx,r12
   1400139f2:	call   0x140002770
   1400139f7:	lea    rcx,[rsp+0x1d0]
   1400139ff:	call   0x140002910
   140013a04:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140013a0c:	test   rcx,rcx
   140013a0f:	je     0x140013a1a
   140013a11:	mov    rax,QWORD PTR [rcx]
   140013a14:	mov    edx,r15d
   140013a17:	call   QWORD PTR [rax+0x18]
   140013a1a:	lea    rcx,[rsp+0x2a0]
   140013a22:	call   0x1400027e0
   140013a27:	lea    rcx,[rsp+0x200]
   140013a2f:	call   QWORD PTR [rip+0x2843]        # 0x140016278
   140013a35:	mov    r14,QWORD PTR [rsp+0xf0]
   140013a3d:	mov    eax,DWORD PTR [r14]
   140013a40:	test   eax,eax
   140013a42:	je     0x140013a65
   140013a44:	cmp    eax,r13d
   140013a47:	je     0x140013a7a
   140013a49:	mov    eax,r13d
   140013a4c:	lock xadd DWORD PTR [r14],eax
   140013a51:	mov    rdi,QWORD PTR [rsp+0x38]
   140013a56:	mov    rbx,QWORD PTR [rsp+0x48]
   140013a5b:	add    eax,r13d
   140013a5e:	setne  al
   140013a61:	test   al,al
   140013a63:	jne    0x140013a7a
   140013a65:	mov    rcx,QWORD PTR [rsp+0x88]
   140013a6d:	lea    rdx,[rip+0x1ec]        # 0x140013c60
   140013a74:	call   QWORD PTR [rip+0x281e]        # 0x140016298
   140013a7a:	mov    rcx,QWORD PTR [rsp+0x90]
   140013a82:	mov    eax,DWORD PTR [rcx+0x10]
   140013a85:	test   eax,eax
   140013a87:	je     0x140013ab2
   140013a89:	cmp    eax,r13d
   140013a8c:	je     0x140013abf
   140013a8e:	mov    eax,r13d
   140013a91:	lock xadd DWORD PTR [rcx+0x10],eax
   140013a96:	mov    rdi,QWORD PTR [rsp+0x38]
   140013a9b:	mov    rbx,QWORD PTR [rsp+0x48]
   140013aa0:	add    eax,r13d
   140013aa3:	setne  al
   140013aa6:	test   al,al
   140013aa8:	jne    0x140013abf
   140013aaa:	mov    rcx,QWORD PTR [rsp+0x90]
   140013ab2:	lea    rdx,[rip+0xfffffffffffee867]        # 0x140002320
   140013ab9:	call   QWORD PTR [rip+0x27d9]        # 0x140016298
   140013abf:	mov    rcx,QWORD PTR [rsp+0xa0]
   140013ac7:	mov    eax,DWORD PTR [rcx]
   140013ac9:	test   eax,eax
   140013acb:	je     0x140013af5
   140013acd:	cmp    eax,r13d
   140013ad0:	je     0x140013afb
   140013ad2:	mov    eax,r13d
   140013ad5:	lock xadd DWORD PTR [rcx],eax
   140013ad9:	mov    rdi,QWORD PTR [rsp+0x38]
   140013ade:	mov    rbx,QWORD PTR [rsp+0x48]
   140013ae3:	add    eax,r13d
   140013ae6:	setne  al
   140013ae9:	test   al,al
   140013aeb:	jne    0x140013afb
   140013aed:	mov    rcx,QWORD PTR [rsp+0xa0]
   140013af5:	call   QWORD PTR [rip+0x27ad]        # 0x1400162a8
   140013afb:	mov    rcx,QWORD PTR [rsp+0x60]
   140013b00:	mov    eax,DWORD PTR [rcx+0x10]
   140013b03:	test   eax,eax
   140013b05:	je     0x140013b2d
   140013b07:	cmp    eax,r13d
   140013b0a:	je     0x140013b3a
   140013b0c:	mov    eax,r13d
   140013b0f:	lock xadd DWORD PTR [rcx+0x10],eax
   140013b14:	mov    rdi,QWORD PTR [rsp+0x38]
   140013b19:	mov    rbx,QWORD PTR [rsp+0x48]
   140013b1e:	add    eax,r13d
   140013b21:	setne  al
   140013b24:	test   al,al
   140013b26:	jne    0x140013b3a
   140013b28:	mov    rcx,QWORD PTR [rsp+0x60]
   140013b2d:	lea    rdx,[rip+0x12c]        # 0x140013c60
   140013b34:	call   QWORD PTR [rip+0x275e]        # 0x140016298
   140013b3a:	mov    eax,DWORD PTR [rbx+0x10]
   140013b3d:	test   eax,eax
   140013b3f:	je     0x140013b62
   140013b41:	cmp    eax,r13d
   140013b44:	je     0x140013b72
   140013b46:	mov    eax,r13d
   140013b49:	lock xadd DWORD PTR [rbx+0x10],eax
   140013b4e:	mov    rdi,QWORD PTR [rsp+0x38]
   140013b53:	add    eax,r13d
   140013b56:	setne  al
   140013b59:	test   al,al
   140013b5b:	jne    0x140013b72
   140013b5d:	mov    rbx,QWORD PTR [rsp+0x48]
   140013b62:	lea    rdx,[rip+0xf7]        # 0x140013c60
   140013b69:	mov    rcx,rbx
   140013b6c:	call   QWORD PTR [rip+0x2726]        # 0x140016298
   140013b72:	mov    eax,DWORD PTR [rdi+0x10]
   140013b75:	test   eax,eax
   140013b77:	je     0x140013b94
   140013b79:	cmp    eax,r13d
   140013b7c:	je     0x140013ba4
   140013b7e:	lock xadd DWORD PTR [rdi+0x10],r13d
   140013b84:	add    r13d,0xffffffff
   140013b88:	setne  al
   140013b8b:	test   al,al
   140013b8d:	jne    0x140013ba4
   140013b8f:	mov    rdi,QWORD PTR [rsp+0x38]
   140013b94:	lea    rdx,[rip+0xc5]        # 0x140013c60
   140013b9b:	mov    rcx,rdi
   140013b9e:	call   QWORD PTR [rip+0x26f4]        # 0x140016298
   140013ba4:	lea    rcx,[rsp+0xb8]
   140013bac:	call   QWORD PTR [rip+0x2d86]        # 0x140016938
   140013bb2:	lea    rcx,[rsp+0x78]
   140013bb7:	call   0x140002910
   140013bbc:	lea    rcx,[rsp+0xc0]
   140013bc4:	call   QWORD PTR [rip+0x2d6e]        # 0x140016938
   140013bca:	lea    rcx,[rsp+0x98]
   140013bd2:	call   0x140002910
   140013bd7:	lea    rcx,[rsp+0x158]
   140013bdf:	call   QWORD PTR [rip+0x2dc3]        # 0x1400169a8
   140013be5:	lea    rcx,[rsp+0x70]
   140013bea:	call   QWORD PTR [rip+0x2d48]        # 0x140016938
   140013bf0:	lea    rcx,[rsp+0x68]
   140013bf5:	call   QWORD PTR [rip+0x2d3d]        # 0x140016938
   140013bfb:	lea    rcx,[rsp+0x50]
   140013c00:	call   QWORD PTR [rip+0x2d32]        # 0x140016938
   140013c06:	lea    rcx,[rsp+0x58]
   140013c0b:	call   QWORD PTR [rip+0x2d27]        # 0x140016938
   140013c11:	lea    rcx,[rsp+0x80]
   140013c19:	call   QWORD PTR [rip+0x2d19]        # 0x140016938
   140013c1f:	lea    rcx,[rsp+0x40]
   140013c24:	call   0x140002910
   140013c29:	lea    rcx,[rsp+0x100]
   140013c31:	call   QWORD PTR [rip+0x2d49]        # 0x140016980
   140013c37:	mov    eax,esi
   140013c39:	mov    rbx,QWORD PTR [rsp+0x978]
   140013c41:	add    rsp,0x930
   140013c48:	pop    r15
   140013c4a:	pop    r14
   140013c4c:	pop    r13
   140013c4e:	pop    r12
   140013c50:	pop    rdi
   140013c51:	pop    rsi
   140013c52:	pop    rbp
   140013c53:	ret    
   140013c54:	int3   
   140013c55:	int3   
   140013c56:	int3   
   140013c57:	int3   
   140013c58:	int3   
   140013c59:	int3   
   140013c5a:	int3   
   140013c5b:	int3   
   140013c5c:	int3   
   140013c5d:	int3   
   140013c5e:	int3   
   140013c5f:	int3   
   140013c60:	ret    0x0
   140013c63:	int3   
   140013c64:	int3   
   140013c65:	int3   
   140013c66:	int3   
   140013c67:	int3   
   140013c68:	int3   
   140013c69:	int3   
   140013c6a:	int3   
   140013c6b:	int3   
   140013c6c:	int3   
   140013c6d:	int3   
   140013c6e:	int3   
   140013c6f:	int3   
   140013c70:	mov    QWORD PTR [rsp+0x10],rbx
   140013c75:	mov    QWORD PTR [rsp+0x18],rbp
   140013c7a:	mov    QWORD PTR [rsp+0x20],rsi
   140013c7f:	push   rdi
   140013c80:	push   r12
   140013c82:	push   r13
   140013c84:	sub    rsp,0x50
   140013c88:	mov    r13,rcx
   140013c8b:	or     rcx,0xffffffffffffffff
   140013c8f:	xor    eax,eax
   140013c91:	mov    r12,rdx
   140013c94:	lea    rdi,[rip+0x37dd]        # 0x140017478
   140013c9b:	mov    ebx,r9d
   140013c9e:	repnz scas al,BYTE PTR es:[rdi]
   140013ca0:	mov    ebp,r8d
   140013ca3:	not    rcx
   140013ca6:	lea    rdx,[rcx-0x1]
   140013caa:	lea    rcx,[rip+0x37c7]        # 0x140017478
   140013cb1:	call   QWORD PTR [rip+0x2c19]        # 0x1400168d0
   140013cb7:	mov    rsi,QWORD PTR [r13+0x18]
   140013cbb:	lea    rcx,[rsp+0x48]
   140013cc0:	mov    r8d,0xa
   140013cc6:	mov    edx,ebx
   140013cc8:	mov    QWORD PTR [rsp+0x70],rax
   140013ccd:	call   QWORD PTR [rip+0x261d]        # 0x1400162f0
   140013cd3:	lea    rcx,[rsp+0x40]
   140013cd8:	mov    r8d,0xa
   140013cde:	mov    edx,ebp
   140013ce0:	mov    rdi,rax
   140013ce3:	call   QWORD PTR [rip+0x2607]        # 0x1400162f0
   140013ce9:	lea    rdx,[rsp+0x38]
   140013cee:	lea    rcx,[rsp+0x70]
   140013cf3:	mov    r8,r12
   140013cf6:	mov    r9,rax
   140013cf9:	mov    QWORD PTR [rsp+0x20],rdi
   140013cfe:	call   QWORD PTR [rip+0x25e4]        # 0x1400162e8
   140013d04:	lea    rdx,[rsp+0x30]
   140013d09:	mov    rcx,rax
   140013d0c:	call   QWORD PTR [rip+0x2806]        # 0x140016518
   140013d12:	mov    rcx,rsi
   140013d15:	mov    rdx,rax
   140013d18:	call   QWORD PTR [rip+0x27f2]        # 0x140016510
   140013d1e:	lea    rcx,[rsp+0x30]
   140013d23:	call   QWORD PTR [rip+0x254f]        # 0x140016278
   140013d29:	lea    rcx,[rsp+0x38]
   140013d2e:	call   QWORD PTR [rip+0x2c04]        # 0x140016938
   140013d34:	lea    rcx,[rsp+0x70]
   140013d39:	call   QWORD PTR [rip+0x2bf9]        # 0x140016938
   140013d3f:	lea    rcx,[rsp+0x40]
   140013d44:	call   QWORD PTR [rip+0x2bee]        # 0x140016938
   140013d4a:	lea    rcx,[rsp+0x48]
   140013d4f:	call   QWORD PTR [rip+0x2be3]        # 0x140016938
   140013d55:	mov    rbx,QWORD PTR [rsp+0x90]
   140013d5d:	mov    rax,QWORD PTR [rbx]
   140013d60:	cmp    DWORD PTR [rax+0x4],0x0
   140013d64:	je     0x140013dff
   140013d6a:	or     rcx,0xffffffffffffffff
   140013d6e:	xor    eax,eax
   140013d70:	lea    rdi,[rip+0x39c1]        # 0x140017738
   140013d77:	repnz scas al,BYTE PTR es:[rdi]
   140013d79:	not    rcx
   140013d7c:	lea    rdx,[rcx-0x1]
   140013d80:	lea    rcx,[rip+0x39b1]        # 0x140017738
   140013d87:	call   QWORD PTR [rip+0x2b43]        # 0x1400168d0
   140013d8d:	mov    rdi,QWORD PTR [r13+0x18]
   140013d91:	lea    rcx,[rsp+0x90]
   140013d99:	mov    dl,0x20
   140013d9b:	mov    QWORD PTR [rsp+0x70],rax
   140013da0:	call   QWORD PTR [rip+0x2b72]        # 0x140016918
   140013da6:	lea    rdx,[rsp+0x40]
   140013dab:	lea    rcx,[rsp+0x70]
   140013db0:	movzx  eax,WORD PTR [rax]
   140013db3:	xor    r9d,r9d
   140013db6:	mov    r8,rbx
   140013db9:	mov    WORD PTR [rsp+0x20],ax
   140013dbe:	call   QWORD PTR [rip+0x2b1c]        # 0x1400168e0
   140013dc4:	lea    rdx,[rsp+0x48]
   140013dc9:	mov    rcx,rax
   140013dcc:	call   QWORD PTR [rip+0x2746]        # 0x140016518
   140013dd2:	mov    rcx,rdi
   140013dd5:	mov    rdx,rax
   140013dd8:	call   QWORD PTR [rip+0x2732]        # 0x140016510
   140013dde:	lea    rcx,[rsp+0x48]
   140013de3:	call   QWORD PTR [rip+0x248f]        # 0x140016278
   140013de9:	lea    rcx,[rsp+0x40]
   140013dee:	call   QWORD PTR [rip+0x2b44]        # 0x140016938
   140013df4:	lea    rcx,[rsp+0x70]
   140013df9:	call   QWORD PTR [rip+0x2b39]        # 0x140016938
   140013dff:	mov    rcx,QWORD PTR [r13+0x18]
   140013e03:	lea    rdx,[rip+0x392a]        # 0x140017734
   140013e0a:	lea    r11,[rsp+0x50]
   140013e0f:	mov    rbx,QWORD PTR [r11+0x28]
   140013e13:	mov    rbp,QWORD PTR [r11+0x30]
   140013e17:	mov    rsi,QWORD PTR [r11+0x38]
   140013e1b:	mov    rsp,r11
   140013e1e:	pop    r13
   140013e20:	pop    r12
   140013e22:	pop    rdi
   140013e23:	rex.W jmp QWORD PTR [rip+0x26f6]        # 0x140016520
   140013e2a:	int3   
   140013e2b:	int3   
   140013e2c:	int3   
   140013e2d:	int3   
   140013e2e:	int3   
   140013e2f:	int3   
   140013e30:	rex push rsi
   140013e32:	sub    rsp,0x20
   140013e36:	mov    rax,QWORD PTR [rdx]
   140013e39:	mov    rsi,rcx
   140013e3c:	cmp    QWORD PTR [rcx],rax
   140013e3f:	je     0x140013ef2
   140013e45:	lea    rcx,[rsp+0x30]
   140013e4a:	mov    QWORD PTR [rsp+0x48],rdi
   140013e4f:	call   0x140002b50
   140013e54:	lea    r11,[rsp+0x30]
   140013e59:	cmp    r11,rsi
   140013e5c:	je     0x140013e70
   140013e5e:	mov    rax,QWORD PTR [rsp+0x30]
   140013e63:	mov    rdi,QWORD PTR [rsi]
   140013e66:	mov    QWORD PTR [rsp+0x30],rdi
   140013e6b:	mov    QWORD PTR [rsi],rax
   140013e6e:	jmp    0x140013e75
   140013e70:	mov    rdi,QWORD PTR [rsp+0x30]
   140013e75:	mov    eax,DWORD PTR [rdi]
   140013e77:	test   eax,eax
   140013e79:	je     0x140013e90
   140013e7b:	cmp    eax,0xffffffff
   140013e7e:	je     0x140013ee4
   140013e80:	lock add DWORD PTR [rdi],0xffffffff
   140013e84:	setne  al
   140013e87:	test   al,al
   140013e89:	jne    0x140013ee4
   140013e8b:	mov    rdi,QWORD PTR [rsp+0x30]
   140013e90:	movsxd rax,DWORD PTR [rdi+0xc]
   140013e94:	mov    QWORD PTR [rsp+0x38],rbx
   140013e99:	mov    QWORD PTR [rsp+0x40],rbp
   140013e9e:	lea    rbx,[rdi+rax*8+0x10]
   140013ea3:	movsxd rax,DWORD PTR [rdi+0x8]
   140013ea7:	lea    rbp,[rdi+rax*8+0x10]
   140013eac:	cmp    rbp,rbx
   140013eaf:	je     0x140013ec3
   140013eb1:	sub    rbx,0x8
   140013eb5:	mov    rcx,rbx
   140013eb8:	call   QWORD PTR [rip+0x23ba]        # 0x140016278
   140013ebe:	cmp    rbx,rbp
   140013ec1:	jne    0x140013eb1
   140013ec3:	mov    rcx,rdi
   140013ec6:	call   QWORD PTR [rip+0x23dc]        # 0x1400162a8
   140013ecc:	mov    rbp,QWORD PTR [rsp+0x40]
   140013ed1:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ed6:	mov    rdi,QWORD PTR [rsp+0x48]
   140013edb:	mov    rax,rsi
   140013ede:	add    rsp,0x20
   140013ee2:	pop    rsi
   140013ee3:	ret    
   140013ee4:	mov    rax,rsi
   140013ee7:	mov    rdi,QWORD PTR [rsp+0x48]
   140013eec:	add    rsp,0x20
   140013ef0:	pop    rsi
   140013ef1:	ret    
   140013ef2:	mov    rax,rcx
   140013ef5:	add    rsp,0x20
   140013ef9:	pop    rsi
   140013efa:	ret    
   140013efb:	int3   
   140013efc:	int3   
   140013efd:	int3   
   140013efe:	int3   
   140013eff:	int3   
   140013f00:	mov    QWORD PTR [rsp+0x8],rbx
   140013f05:	mov    QWORD PTR [rsp+0x10],rsi
   140013f0a:	push   rdi
   140013f0b:	sub    rsp,0x20
   140013f0f:	mov    DWORD PTR [rcx],0x0
   140013f15:	mov    rax,QWORD PTR [rip+0x2304]        # 0x140016220
   140013f1c:	mov    rdi,rcx
   140013f1f:	mov    QWORD PTR [rcx+0x8],rax
   140013f23:	mov    DWORD PTR [rcx+0x10],0x0
   140013f2a:	mov    BYTE PTR [rcx+0x14],0x0
   140013f2e:	mov    ecx,0x10
   140013f33:	mov    rsi,rdx
   140013f36:	call   0x140015090
   140013f3b:	mov    rbx,rax
   140013f3e:	test   rax,rax
   140013f41:	je     0x140013f5e
   140013f43:	xor    r8d,r8d
   140013f46:	mov    rdx,rsi
   140013f49:	mov    rcx,rax
   140013f4c:	call   QWORD PTR [rip+0x2866]        # 0x1400167b8
   140013f52:	lea    r11,[rip+0x37ef]        # 0x140017748
   140013f59:	mov    QWORD PTR [rbx],r11
   140013f5c:	jmp    0x140013f60
   140013f5e:	xor    ebx,ebx
   140013f60:	mov    QWORD PTR [rdi+0x18],rbx
   140013f64:	mov    rax,QWORD PTR [rbx]
   140013f67:	mov    edx,0x2
   140013f6c:	mov    rcx,rbx
   140013f6f:	call   QWORD PTR [rax+0x60]
   140013f72:	mov    rbx,QWORD PTR [rsp+0x30]
   140013f77:	mov    rsi,QWORD PTR [rsp+0x38]
   140013f7c:	mov    rax,rdi
   140013f7f:	add    rsp,0x20
   140013f83:	pop    rdi
   140013f84:	ret    
   140013f85:	int3   
   140013f86:	int3   
   140013f87:	int3   
   140013f88:	int3   
   140013f89:	int3   
   140013f8a:	int3   
   140013f8b:	int3   
   140013f8c:	int3   
   140013f8d:	int3   
   140013f8e:	int3   
   140013f8f:	int3   
   140013f90:	mov    QWORD PTR [rsp+0x8],rbx
   140013f95:	push   rdi
   140013f96:	sub    rsp,0x20
   140013f9a:	mov    ebx,edx
   140013f9c:	mov    rdi,rcx
   140013f9f:	call   QWORD PTR [rip+0x28eb]        # 0x140016890
   140013fa5:	test   bl,0x1
   140013fa8:	je     0x140013fb2
   140013faa:	mov    rcx,rdi
   140013fad:	call   0x14001508a
   140013fb2:	mov    rax,rdi
   140013fb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fba:	add    rsp,0x20
   140013fbe:	pop    rdi
   140013fbf:	ret    
   140013fc0:	rex push rbx
   140013fc2:	sub    rsp,0x20
   140013fc6:	mov    rbx,QWORD PTR [rip+0x2253]        # 0x140016220
   140013fcd:	lea    rdx,[rsp+0x38]
   140013fd2:	mov    QWORD PTR [rsp+0x38],rbx
   140013fd7:	call   0x140013e30
   140013fdc:	mov    r11d,DWORD PTR [rbx]
   140013fdf:	test   r11d,r11d
   140013fe2:	je     0x140013ffa
   140013fe4:	cmp    r11d,0xffffffff
   140013fe8:	je     0x140014045
   140013fea:	lock add DWORD PTR [rbx],0xffffffff
   140013fee:	setne  al
   140013ff1:	test   al,al
   140013ff3:	jne    0x140014045
   140013ff5:	mov    rbx,QWORD PTR [rsp+0x38]
   140013ffa:	movsxd rax,DWORD PTR [rbx+0xc]
   140013ffe:	mov    QWORD PTR [rsp+0x30],rsi
   140014003:	mov    QWORD PTR [rsp+0x40],rdi
   140014008:	lea    rdi,[rbx+rax*8+0x10]
   14001400d:	movsxd rax,DWORD PTR [rbx+0x8]
   140014011:	lea    rsi,[rbx+rax*8+0x10]
   140014016:	cmp    rsi,rdi
   140014019:	je     0x140014032
   14001401b:	nop    DWORD PTR [rax+rax*1+0x0]
   140014020:	sub    rdi,0x8
   140014024:	mov    rcx,rdi
   140014027:	call   QWORD PTR [rip+0x224b]        # 0x140016278
   14001402d:	cmp    rdi,rsi
   140014030:	jne    0x140014020
   140014032:	mov    rcx,rbx
   140014035:	call   QWORD PTR [rip+0x226d]        # 0x1400162a8
   14001403b:	mov    rdi,QWORD PTR [rsp+0x40]
   140014040:	mov    rsi,QWORD PTR [rsp+0x30]
   140014045:	add    rsp,0x20
   140014049:	pop    rbx
   14001404a:	ret    
   14001404b:	int3   
   14001404c:	int3   
   14001404d:	int3   
   14001404e:	int3   
   14001404f:	int3   
   140014050:	mov    QWORD PTR [rsp+0x18],rbx
   140014055:	push   rsi
   140014056:	push   rdi
   140014057:	push   r12
   140014059:	sub    rsp,0x40
   14001405d:	cmp    BYTE PTR [rcx+0x14],0x0
   140014061:	mov    rsi,rcx
   140014064:	je     0x140014077
   140014066:	mov    rcx,QWORD PTR [rcx+0x18]
   14001406a:	lea    rdx,[rip+0x36c3]        # 0x140017734
   140014071:	call   QWORD PTR [rip+0x24a9]        # 0x140016520
   140014077:	mov    rdx,QWORD PTR [rsi+0x8]
   14001407b:	mov    QWORD PTR [rsp+0x68],rbp
   140014080:	mov    QWORD PTR [rsp+0x20],rdx
   140014085:	mov    eax,DWORD PTR [rdx]
   140014087:	test   eax,eax
   140014089:	je     0x14001409b
   14001408b:	cmp    eax,0xffffffff
   14001408e:	je     0x1400140f5
   140014090:	lock add DWORD PTR [rdx],0x1
   140014094:	mov    rdx,QWORD PTR [rsp+0x20]
   140014099:	jmp    0x1400140f5
   14001409b:	mov    edx,DWORD PTR [rdx+0x4]
   14001409e:	lea    rcx,[rsp+0x20]
   1400140a3:	call   QWORD PTR [rip+0x2277]        # 0x140016320
   1400140a9:	mov    rdx,QWORD PTR [rsp+0x20]
   1400140ae:	mov    rcx,QWORD PTR [rsi+0x8]
   1400140b2:	movsxd rax,DWORD PTR [rdx+0xc]
   1400140b6:	lea    rbp,[rdx+rax*8+0x10]
   1400140bb:	movsxd rax,DWORD PTR [rcx+0x8]
   1400140bf:	lea    rdi,[rcx+rax*8+0x10]
   1400140c4:	movsxd rax,DWORD PTR [rdx+0x8]
   1400140c8:	lea    rbx,[rdx+rax*8+0x10]
   1400140cd:	cmp    rbx,rbp
   1400140d0:	je     0x1400140f5
   1400140d2:	test   rbx,rbx
   1400140d5:	je     0x1400140e3
   1400140d7:	mov    rdx,rdi
   1400140da:	mov    rcx,rbx
   1400140dd:	call   QWORD PTR [rip+0x21ad]        # 0x140016290
   1400140e3:	add    rbx,0x8
   1400140e7:	add    rdi,0x8
   1400140eb:	cmp    rbx,rbp
   1400140ee:	jne    0x1400140d2
   1400140f0:	mov    rdx,QWORD PTR [rsp+0x20]
   1400140f5:	mov    DWORD PTR [rsp+0x28],0x0
   1400140fd:	movsxd rax,DWORD PTR [rdx+0x8]
   140014101:	lea    rdi,[rdx+rax*8+0x10]
   140014106:	mov    QWORD PTR [rsp+0x30],rdi
   14001410b:	movsxd rax,DWORD PTR [rdx+0xc]
   14001410f:	lea    rcx,[rdx+rax*8+0x10]
   140014114:	mov    QWORD PTR [rsp+0x38],rcx
   140014119:	nop    DWORD PTR [rax+0x0]
   140014120:	mov    eax,0x1
   140014125:	mov    DWORD PTR [rsp+0x28],eax
   140014129:	cmp    rdi,rcx
   14001412c:	je     0x1400141a4
   14001412e:	xchg   ax,ax
   140014130:	test   eax,eax
   140014132:	je     0x14001418c
   140014134:	mov    edx,DWORD PTR [rsi]
   140014136:	mov    rbx,QWORD PTR [rsi+0x18]
   14001413a:	lea    rcx,[rsp+0x60]
   14001413f:	shl    edx,0x2
   140014142:	mov    r8b,0x20
   140014145:	call   QWORD PTR [rip+0x2665]        # 0x1400167b0
   14001414b:	mov    rcx,rbx
   14001414e:	mov    rdx,rax
   140014151:	call   QWORD PTR [rip+0x23b9]        # 0x140016510
   140014157:	lea    rcx,[rsp+0x60]
   14001415c:	call   QWORD PTR [rip+0x2116]        # 0x140016278
   140014162:	mov    rcx,QWORD PTR [rsi+0x18]
   140014166:	mov    rdx,rdi
   140014169:	call   QWORD PTR [rip+0x23a1]        # 0x140016510
   14001416f:	mov    rcx,QWORD PTR [rsi+0x18]
   140014173:	lea    rdx,[rip+0x35ba]        # 0x140017734
   14001417a:	call   QWORD PTR [rip+0x23a0]        # 0x140016520
   140014180:	mov    eax,DWORD PTR [rsp+0x28]
   140014184:	dec    eax
   140014186:	mov    DWORD PTR [rsp+0x28],eax
   14001418a:	jmp    0x140014130
   14001418c:	mov    rdi,QWORD PTR [rsp+0x30]
   140014191:	mov    rcx,QWORD PTR [rsp+0x38]
   140014196:	add    rdi,0x8
   14001419a:	mov    QWORD PTR [rsp+0x30],rdi
   14001419f:	jmp    0x140014120
   1400141a4:	mov    rdi,QWORD PTR [rsp+0x20]
   1400141a9:	mov    eax,DWORD PTR [rdi]
   1400141ab:	test   eax,eax
   1400141ad:	je     0x1400141c4
   1400141af:	cmp    eax,0xffffffff
   1400141b2:	je     0x1400141fb
   1400141b4:	lock add DWORD PTR [rdi],0xffffffff
   1400141b8:	setne  al
   1400141bb:	test   al,al
   1400141bd:	jne    0x1400141fb
   1400141bf:	mov    rdi,QWORD PTR [rsp+0x20]
   1400141c4:	movsxd rax,DWORD PTR [rdi+0xc]
   1400141c8:	lea    rbx,[rdi+rax*8+0x10]
   1400141cd:	movsxd rax,DWORD PTR [rdi+0x8]
   1400141d1:	lea    rbp,[rdi+rax*8+0x10]
   1400141d6:	cmp    rbp,rbx
   1400141d9:	je     0x1400141f2
   1400141db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400141e0:	sub    rbx,0x8
   1400141e4:	mov    rcx,rbx
   1400141e7:	call   QWORD PTR [rip+0x208b]        # 0x140016278
   1400141ed:	cmp    rbx,rbp
   1400141f0:	jne    0x1400141e0
   1400141f2:	mov    rcx,rdi
   1400141f5:	call   QWORD PTR [rip+0x20ad]        # 0x1400162a8
   1400141fb:	lea    rcx,[rsi+0x8]
   1400141ff:	call   0x140013fc0
   140014204:	mov    rbp,QWORD PTR [rsp+0x68]
   140014209:	mov    rbx,QWORD PTR [rsp+0x70]
   14001420e:	mov    DWORD PTR [rsi+0x10],0x0
   140014215:	mov    BYTE PTR [rsi+0x14],0x0
   140014219:	add    rsp,0x40
   14001421d:	pop    r12
   14001421f:	pop    rdi
   140014220:	pop    rsi
   140014221:	ret    
   140014222:	int3   
   140014223:	int3   
   140014224:	int3   
   140014225:	int3   
   140014226:	int3   
   140014227:	int3   
   140014228:	int3   
   140014229:	int3   
   14001422a:	int3   
   14001422b:	int3   
   14001422c:	int3   
   14001422d:	int3   
   14001422e:	int3   
   14001422f:	int3   
   140014230:	rex push rbx
   140014232:	push   rsi
   140014233:	push   rdi
   140014234:	sub    rsp,0x40
   140014238:	mov    rbx,rdx
   14001423b:	mov    rsi,rcx
   14001423e:	call   0x140014050
   140014243:	mov    edx,DWORD PTR [rsi]
   140014245:	mov    rdi,QWORD PTR [rsi+0x18]
   140014249:	lea    rcx,[rsp+0x60]
   14001424e:	shl    edx,0x2
   140014251:	mov    r8b,0x20
   140014254:	call   QWORD PTR [rip+0x2556]        # 0x1400167b0
   14001425a:	mov    rcx,rdi
   14001425d:	mov    rdx,rax
   140014260:	call   QWORD PTR [rip+0x22aa]        # 0x140016510
   140014266:	lea    rcx,[rsp+0x60]
   14001426b:	call   QWORD PTR [rip+0x2007]        # 0x140016278
   140014271:	or     rcx,0xffffffffffffffff
   140014275:	xor    eax,eax
   140014277:	lea    rdi,[rip+0x35a2]        # 0x140017820
   14001427e:	repnz scas al,BYTE PTR es:[rdi]
   140014280:	not    rcx
   140014283:	lea    rdx,[rcx-0x1]
   140014287:	lea    rcx,[rip+0x3592]        # 0x140017820
   14001428e:	call   QWORD PTR [rip+0x263c]        # 0x1400168d0
   140014294:	mov    rdi,QWORD PTR [rsi+0x18]
   140014298:	lea    rcx,[rsp+0x60]
   14001429d:	mov    dl,0x20
   14001429f:	mov    QWORD PTR [rsp+0x70],rax
   1400142a4:	call   QWORD PTR [rip+0x266e]        # 0x140016918
   1400142aa:	lea    rdx,[rsp+0x30]
   1400142af:	lea    rcx,[rsp+0x70]
   1400142b4:	movzx  eax,WORD PTR [rax]
   1400142b7:	xor    r9d,r9d
   1400142ba:	mov    r8,rbx
   1400142bd:	mov    WORD PTR [rsp+0x20],ax
   1400142c2:	call   QWORD PTR [rip+0x2618]        # 0x1400168e0
   1400142c8:	lea    rdx,[rsp+0x78]
   1400142cd:	mov    rcx,rax
   1400142d0:	call   QWORD PTR [rip+0x2242]        # 0x140016518
   1400142d6:	mov    rcx,rdi
   1400142d9:	mov    rdx,rax
   1400142dc:	call   QWORD PTR [rip+0x222e]        # 0x140016510
   1400142e2:	lea    rcx,[rsp+0x78]
   1400142e7:	call   QWORD PTR [rip+0x1f8b]        # 0x140016278
   1400142ed:	lea    rcx,[rsp+0x30]
   1400142f2:	call   QWORD PTR [rip+0x2640]        # 0x140016938
   1400142f8:	lea    rcx,[rsp+0x70]
   1400142fd:	call   QWORD PTR [rip+0x2635]        # 0x140016938
   140014303:	inc    DWORD PTR [rsi]
   140014305:	mov    BYTE PTR [rsi+0x14],0x1
   140014309:	add    rsp,0x40
   14001430d:	pop    rdi
   14001430e:	pop    rsi
   14001430f:	pop    rbx
   140014310:	ret    
   140014311:	int3   
   140014312:	int3   
   140014313:	int3   
   140014314:	int3   
   140014315:	int3   
   140014316:	int3   
   140014317:	int3   
   140014318:	int3   
   140014319:	int3   
   14001431a:	int3   
   14001431b:	int3   
   14001431c:	int3   
   14001431d:	int3   
   14001431e:	int3   
   14001431f:	int3   
   140014320:	mov    QWORD PTR [rsp+0x18],rbx
   140014325:	mov    QWORD PTR [rsp+0x20],rbp
   14001432a:	push   rdi
   14001432b:	sub    rsp,0x20
   14001432f:	cmp    BYTE PTR [rcx+0x14],0x0
   140014333:	mov    rdi,rcx
   140014336:	je     0x140014425
   14001433c:	mov    rdx,QWORD PTR [rcx+0x8]
   140014340:	mov    eax,DWORD PTR [rdx+0x8]
   140014343:	cmp    DWORD PTR [rdx+0xc],eax
   140014346:	je     0x140014425
   14001434c:	dec    DWORD PTR [rcx]
   14001434e:	mov    rax,QWORD PTR [rcx+0x8]
   140014352:	mov    QWORD PTR [rsp+0x38],rsi
   140014357:	mov    ecx,DWORD PTR [rax+0xc]
   14001435a:	xor    esi,esi
   14001435c:	sub    ecx,DWORD PTR [rax+0x8]
   14001435f:	test   ecx,ecx
   140014361:	jle    0x1400143eb
   140014367:	nop    WORD PTR [rax+rax*1+0x0]
   140014370:	mov    rcx,QWORD PTR [rdi+0x18]
   140014374:	lea    rdx,[rip+0x2b9d]        # 0x140016f18
   14001437b:	call   QWORD PTR [rip+0x219f]        # 0x140016520
   140014381:	mov    r8,QWORD PTR [rdi+0x8]
   140014385:	mov    rbx,QWORD PTR [rdi+0x18]
   140014389:	movsxd rdx,DWORD PTR [r8+0x8]
   14001438d:	movsxd rax,esi
   140014390:	add    rdx,rax
   140014393:	lea    rcx,[r8+rdx*8+0x10]
   140014398:	lea    rdx,[rsp+0x30]
   14001439d:	call   QWORD PTR [rip+0x24f5]        # 0x140016898
   1400143a3:	mov    rcx,rbx
   1400143a6:	mov    rdx,rax
   1400143a9:	call   QWORD PTR [rip+0x2161]        # 0x140016510
   1400143af:	lea    rcx,[rsp+0x30]
   1400143b4:	call   QWORD PTR [rip+0x1ebe]        # 0x140016278
   1400143ba:	mov    rax,QWORD PTR [rdi+0x8]
   1400143be:	mov    ecx,DWORD PTR [rax+0xc]
   1400143c1:	sub    ecx,DWORD PTR [rax+0x8]
   1400143c4:	dec    ecx
   1400143c6:	cmp    esi,ecx
   1400143c8:	je     0x1400143db
   1400143ca:	mov    rcx,QWORD PTR [rdi+0x18]
   1400143ce:	lea    rdx,[rip+0x345b]        # 0x140017830
   1400143d5:	call   QWORD PTR [rip+0x2145]        # 0x140016520
   1400143db:	mov    rax,QWORD PTR [rdi+0x8]
   1400143df:	inc    esi
   1400143e1:	mov    edx,DWORD PTR [rax+0xc]
   1400143e4:	sub    edx,DWORD PTR [rax+0x8]
   1400143e7:	cmp    esi,edx
   1400143e9:	jl     0x140014370
   1400143eb:	mov    rcx,QWORD PTR [rdi+0x18]
   1400143ef:	lea    rdx,[rip+0x3436]        # 0x14001782c
   1400143f6:	call   QWORD PTR [rip+0x2124]        # 0x140016520
   1400143fc:	lea    rcx,[rdi+0x8]
   140014400:	call   0x140013fc0
   140014405:	mov    rsi,QWORD PTR [rsp+0x38]
   14001440a:	mov    DWORD PTR [rdi+0x10],0x0
   140014411:	mov    BYTE PTR [rdi+0x14],0x0
   140014415:	mov    rbx,QWORD PTR [rsp+0x40]
   14001441a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001441f:	add    rsp,0x20
   140014423:	pop    rdi
   140014424:	ret    
   140014425:	call   0x140014050
   14001442a:	dec    DWORD PTR [rdi]
   14001442c:	mov    edx,DWORD PTR [rdi]
   14001442e:	mov    rbx,QWORD PTR [rdi+0x18]
   140014432:	lea    rcx,[rsp+0x30]
   140014437:	shl    edx,0x2
   14001443a:	mov    r8b,0x20
   14001443d:	call   QWORD PTR [rip+0x236d]        # 0x1400167b0
   140014443:	mov    rcx,rbx
   140014446:	mov    rdx,rax
   140014449:	call   QWORD PTR [rip+0x20c1]        # 0x140016510
   14001444f:	lea    rcx,[rsp+0x30]
   140014454:	call   QWORD PTR [rip+0x1e1e]        # 0x140016278
   14001445a:	mov    rcx,QWORD PTR [rdi+0x18]
   14001445e:	lea    rdx,[rip+0x33c3]        # 0x140017828
   140014465:	mov    rbx,QWORD PTR [rsp+0x40]
   14001446a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001446f:	add    rsp,0x20
   140014473:	pop    rdi
   140014474:	rex.W jmp QWORD PTR [rip+0x20a5]        # 0x140016520
   14001447b:	int3   
   14001447c:	int3   
   14001447d:	int3   
   14001447e:	int3   
   14001447f:	int3   
   140014480:	rex push rbx
   140014482:	push   rbp
   140014483:	push   rsi
   140014484:	push   rdi
   140014485:	push   r12
   140014487:	push   r13
   140014489:	sub    rsp,0x58
   14001448d:	mov    r12,r8
   140014490:	mov    r13,rdx
   140014493:	mov    rbx,rcx
   140014496:	call   0x140014050
   14001449b:	mov    edx,DWORD PTR [rbx]
   14001449d:	mov    rdi,QWORD PTR [rbx+0x18]
   1400144a1:	lea    rcx,[rsp+0x90]
   1400144a9:	shl    edx,0x2
   1400144ac:	mov    r8b,0x20
   1400144af:	call   QWORD PTR [rip+0x22fb]        # 0x1400167b0
   1400144b5:	mov    rcx,rdi
   1400144b8:	mov    rdx,rax
   1400144bb:	call   QWORD PTR [rip+0x204f]        # 0x140016510
   1400144c1:	lea    rcx,[rsp+0x90]
   1400144c9:	call   QWORD PTR [rip+0x1da9]        # 0x140016278
   1400144cf:	lea    rcx,[rsp+0xa0]
   1400144d7:	call   QWORD PTR [rip+0x1d23]        # 0x140016200
   1400144dd:	or     rcx,0xffffffffffffffff
   1400144e1:	xor    eax,eax
   1400144e3:	lea    rdi,[rip+0x335a]        # 0x140017844
   1400144ea:	repnz scas al,BYTE PTR es:[rdi]
   1400144ec:	not    rcx
   1400144ef:	lea    rdx,[rcx-0x1]
   1400144f3:	lea    rcx,[rip+0x334a]        # 0x140017844
   1400144fa:	call   QWORD PTR [rip+0x23d0]        # 0x1400168d0
   140014500:	lea    rcx,[rsp+0x90]
   140014508:	mov    dl,0x20
   14001450a:	mov    QWORD PTR [rsp+0xa8],rax
   140014512:	call   QWORD PTR [rip+0x2400]        # 0x140016918
   140014518:	lea    rdx,[rsp+0x30]
   14001451d:	movzx  eax,WORD PTR [rax]
   140014520:	lea    rcx,[rsp+0xa8]
   140014528:	xor    r9d,r9d
   14001452b:	mov    r8,r13
   14001452e:	mov    WORD PTR [rsp+0x20],ax
   140014533:	call   QWORD PTR [rip+0x23a7]        # 0x1400168e0
   140014539:	lea    rcx,[rsp+0xa0]
   140014541:	mov    rdx,rax
   140014544:	call   QWORD PTR [rip+0x235e]        # 0x1400168a8
   14001454a:	lea    rcx,[rsp+0x30]
   14001454f:	call   QWORD PTR [rip+0x23e3]        # 0x140016938
   140014555:	lea    rcx,[rsp+0xa8]
   14001455d:	call   QWORD PTR [rip+0x23d5]        # 0x140016938
   140014563:	mov    rdx,QWORD PTR [r12]
   140014567:	xor    ebp,ebp
   140014569:	mov    ecx,DWORD PTR [rdx+0x8]
   14001456c:	mov    eax,DWORD PTR [rdx+0xc]
   14001456f:	mov    esi,ebp
   140014571:	sub    eax,ecx
   140014573:	test   eax,eax
   140014575:	jle    0x14001460b
   14001457b:	mov    QWORD PTR [rsp+0x50],r14
   140014580:	lea    r14,[rip+0x2a25]        # 0x140016fac
   140014587:	nop    WORD PTR [rax+rax*1+0x0]
   140014590:	movsxd rcx,ecx
   140014593:	movsxd rax,esi
   140014596:	add    rcx,rax
   140014599:	lea    rdx,[rdx+rcx*8+0x10]
   14001459e:	lea    rcx,[rsp+0xa0]
   1400145a6:	call   QWORD PTR [rip+0x22fc]        # 0x1400168a8
   1400145ac:	mov    rdx,QWORD PTR [r12]
   1400145b0:	mov    eax,DWORD PTR [rdx+0xc]
   1400145b3:	sub    eax,DWORD PTR [rdx+0x8]
   1400145b6:	dec    eax
   1400145b8:	cmp    esi,eax
   1400145ba:	je     0x1400145f4
   1400145bc:	or     rcx,0xffffffffffffffff
   1400145c0:	xor    eax,eax
   1400145c2:	mov    rdi,r14
   1400145c5:	repnz scas al,BYTE PTR es:[rdi]
   1400145c7:	mov    QWORD PTR [rsp+0x48],r14
   1400145cc:	lea    rdx,[rsp+0x30]
   1400145d1:	not    rcx
   1400145d4:	dec    rcx
   1400145d7:	mov    DWORD PTR [rsp+0x40],ecx
   1400145db:	lea    rcx,[rsp+0xa0]
   1400145e3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400145e8:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400145ee:	call   QWORD PTR [rip+0x22ac]        # 0x1400168a0
   1400145f4:	mov    rdx,QWORD PTR [r12]
   1400145f8:	inc    esi
   1400145fa:	mov    ecx,DWORD PTR [rdx+0x8]
   1400145fd:	mov    eax,DWORD PTR [rdx+0xc]
   140014600:	sub    eax,ecx
   140014602:	cmp    esi,eax
   140014604:	jl     0x140014590
   140014606:	mov    r14,QWORD PTR [rsp+0x50]
   14001460b:	or     rcx,0xffffffffffffffff
   14001460f:	lea    rsi,[rip+0x322a]        # 0x140017840
   140014616:	xor    eax,eax
   140014618:	mov    QWORD PTR [rsp+0x48],rsi
   14001461d:	mov    rdi,rsi
   140014620:	lea    rdx,[rsp+0x40]
   140014625:	repnz scas al,BYTE PTR es:[rdi]
   140014627:	not    rcx
   14001462a:	dec    rcx
   14001462d:	mov    DWORD PTR [rsp+0x40],ecx
   140014631:	lea    rcx,[rsp+0xa0]
   140014639:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001463e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140014644:	call   QWORD PTR [rip+0x2256]        # 0x1400168a0
   14001464a:	mov    rax,QWORD PTR [rsp+0xa0]
   140014652:	mov    ecx,DWORD PTR [rax+0x4]
   140014655:	mov    edx,DWORD PTR [rbx]
   140014657:	lea    eax,[rcx+rdx*4]
   14001465a:	cmp    eax,0x50
   14001465d:	jge    0x140014698
   14001465f:	mov    rdi,QWORD PTR [rbx+0x18]
   140014663:	lea    rdx,[rsp+0x90]
   14001466b:	lea    rcx,[rsp+0xa0]
   140014673:	call   QWORD PTR [rip+0x1e9f]        # 0x140016518
   140014679:	mov    rcx,rdi
   14001467c:	mov    rdx,rax
   14001467f:	call   QWORD PTR [rip+0x1e8b]        # 0x140016510
   140014685:	lea    rcx,[rsp+0x90]
   14001468d:	call   QWORD PTR [rip+0x1be5]        # 0x140016278
   140014693:	jmp    0x14001484e
   140014698:	or     rcx,0xffffffffffffffff
   14001469c:	xor    eax,eax
   14001469e:	lea    rdi,[rip+0x3193]        # 0x140017838
   1400146a5:	repnz scas al,BYTE PTR es:[rdi]
   1400146a7:	not    rcx
   1400146aa:	lea    rdx,[rcx-0x1]
   1400146ae:	lea    rcx,[rip+0x3183]        # 0x140017838
   1400146b5:	call   QWORD PTR [rip+0x2215]        # 0x1400168d0
   1400146bb:	mov    rdi,QWORD PTR [rbx+0x18]
   1400146bf:	lea    rcx,[rsp+0x90]
   1400146c7:	mov    dl,0x20
   1400146c9:	mov    QWORD PTR [rsp+0xa8],rax
   1400146d1:	call   QWORD PTR [rip+0x2241]        # 0x140016918
   1400146d7:	lea    rdx,[rsp+0x40]
   1400146dc:	lea    rcx,[rsp+0xa8]
   1400146e4:	movzx  eax,WORD PTR [rax]
   1400146e7:	xor    r9d,r9d
   1400146ea:	mov    r8,r13
   1400146ed:	mov    WORD PTR [rsp+0x20],ax
   1400146f2:	call   QWORD PTR [rip+0x21e8]        # 0x1400168e0
   1400146f8:	lea    rdx,[rsp+0x30]
   1400146fd:	mov    rcx,rax
   140014700:	call   QWORD PTR [rip+0x1e12]        # 0x140016518
   140014706:	mov    rcx,rdi
   140014709:	mov    rdx,rax
   14001470c:	call   QWORD PTR [rip+0x1dfe]        # 0x140016510
   140014712:	lea    rcx,[rsp+0x30]
   140014717:	call   QWORD PTR [rip+0x1b5b]        # 0x140016278
   14001471d:	lea    rcx,[rsp+0x40]
   140014722:	call   QWORD PTR [rip+0x2210]        # 0x140016938
   140014728:	lea    rcx,[rsp+0xa8]
   140014730:	call   QWORD PTR [rip+0x2202]        # 0x140016938
   140014736:	inc    DWORD PTR [rbx]
   140014738:	mov    rax,QWORD PTR [r12]
   14001473c:	mov    ecx,DWORD PTR [rax+0xc]
   14001473f:	sub    ecx,DWORD PTR [rax+0x8]
   140014742:	test   ecx,ecx
   140014744:	jle    0x14001480b
   14001474a:	nop    WORD PTR [rax+rax*1+0x0]
   140014750:	mov    edx,DWORD PTR [rbx]
   140014752:	mov    rdi,QWORD PTR [rbx+0x18]
   140014756:	lea    rcx,[rsp+0x90]
   14001475e:	shl    edx,0x2
   140014761:	mov    r8b,0x20
   140014764:	call   QWORD PTR [rip+0x2046]        # 0x1400167b0
   14001476a:	mov    rcx,rdi
   14001476d:	mov    rdx,rax
   140014770:	call   QWORD PTR [rip+0x1d9a]        # 0x140016510
   140014776:	lea    rcx,[rsp+0x90]
   14001477e:	call   QWORD PTR [rip+0x1af4]        # 0x140016278
   140014784:	mov    rcx,QWORD PTR [r12]
   140014788:	mov    rdi,QWORD PTR [rbx+0x18]
   14001478c:	movsxd rdx,DWORD PTR [rcx+0x8]
   140014790:	movsxd rax,ebp
   140014793:	add    rdx,rax
   140014796:	lea    rcx,[rcx+rdx*8+0x10]
   14001479b:	lea    rdx,[rsp+0xa8]
   1400147a3:	call   QWORD PTR [rip+0x1d6f]        # 0x140016518
   1400147a9:	mov    rcx,rdi
   1400147ac:	mov    rdx,rax
   1400147af:	call   QWORD PTR [rip+0x1d5b]        # 0x140016510
   1400147b5:	lea    rcx,[rsp+0xa8]
   1400147bd:	call   QWORD PTR [rip+0x1ab5]        # 0x140016278
   1400147c3:	mov    rdx,QWORD PTR [r12]
   1400147c7:	mov    eax,DWORD PTR [rdx+0xc]
   1400147ca:	sub    eax,DWORD PTR [rdx+0x8]
   1400147cd:	dec    eax
   1400147cf:	cmp    ebp,eax
   1400147d1:	je     0x1400147e6
   1400147d3:	mov    rcx,QWORD PTR [rbx+0x18]
   1400147d7:	lea    rdx,[rip+0x3056]        # 0x140017834
   1400147de:	call   QWORD PTR [rip+0x1d3c]        # 0x140016520
   1400147e4:	jmp    0x1400147f7
   1400147e6:	mov    rcx,QWORD PTR [rbx+0x18]
   1400147ea:	lea    rdx,[rip+0x2f43]        # 0x140017734
   1400147f1:	call   QWORD PTR [rip+0x1d29]        # 0x140016520
   1400147f7:	mov    rax,QWORD PTR [r12]
   1400147fb:	inc    ebp
   1400147fd:	mov    ecx,DWORD PTR [rax+0xc]
   140014800:	sub    ecx,DWORD PTR [rax+0x8]
   140014803:	cmp    ebp,ecx
   140014805:	jl     0x140014750
   14001480b:	dec    DWORD PTR [rbx]
   14001480d:	mov    edx,DWORD PTR [rbx]
   14001480f:	mov    rdi,QWORD PTR [rbx+0x18]
   140014813:	lea    rcx,[rsp+0x90]
   14001481b:	shl    edx,0x2
   14001481e:	mov    r8b,0x20
   140014821:	call   QWORD PTR [rip+0x1f89]        # 0x1400167b0
   140014827:	mov    rcx,rdi
   14001482a:	mov    rdx,rax
   14001482d:	call   QWORD PTR [rip+0x1cdd]        # 0x140016510
   140014833:	lea    rcx,[rsp+0x90]
   14001483b:	call   QWORD PTR [rip+0x1a37]        # 0x140016278
   140014841:	mov    rcx,QWORD PTR [rbx+0x18]
   140014845:	mov    rdx,rsi
   140014848:	call   QWORD PTR [rip+0x1cd2]        # 0x140016520
   14001484e:	lea    rcx,[rsp+0xa0]
   140014856:	call   QWORD PTR [rip+0x20dc]        # 0x140016938
   14001485c:	add    rsp,0x58
   140014860:	pop    r13
   140014862:	pop    r12
   140014864:	pop    rdi
   140014865:	pop    rsi
   140014866:	pop    rbp
   140014867:	pop    rbx
   140014868:	ret    
   140014869:	int3   
   14001486a:	int3   
   14001486b:	int3   
   14001486c:	int3   
   14001486d:	int3   
   14001486e:	int3   
   14001486f:	int3   
   140014870:	mov    QWORD PTR [rsp+0x10],rbx
   140014875:	push   rdi
   140014876:	sub    rsp,0x20
   14001487a:	mov    rdi,rdx
   14001487d:	mov    rbx,rcx
   140014880:	call   0x140014050
   140014885:	mov    rbx,QWORD PTR [rbx+0x18]
   140014889:	lea    rdx,[rsp+0x30]
   14001488e:	mov    rcx,rdi
   140014891:	call   QWORD PTR [rip+0x1c81]        # 0x140016518
   140014897:	mov    rcx,rbx
   14001489a:	mov    rdx,rax
   14001489d:	call   QWORD PTR [rip+0x1c6d]        # 0x140016510
   1400148a3:	lea    rcx,[rsp+0x30]
   1400148a8:	call   QWORD PTR [rip+0x19ca]        # 0x140016278
   1400148ae:	mov    rbx,QWORD PTR [rsp+0x38]
   1400148b3:	add    rsp,0x20
   1400148b7:	pop    rdi
   1400148b8:	ret    
   1400148b9:	int3   
   1400148ba:	int3   
   1400148bb:	int3   
   1400148bc:	int3   
   1400148bd:	int3   
   1400148be:	int3   
   1400148bf:	int3   
   1400148c0:	rex push rbx
   1400148c2:	push   rbp
   1400148c3:	push   rsi
   1400148c4:	push   rdi
   1400148c5:	push   r12
   1400148c7:	sub    rsp,0x50
   1400148cb:	mov    r12,r8
   1400148ce:	mov    rbx,rdx
   1400148d1:	mov    rsi,rcx
   1400148d4:	call   0x140014050
   1400148d9:	mov    edx,DWORD PTR [rsi]
   1400148db:	mov    rdi,QWORD PTR [rsi+0x18]
   1400148df:	lea    rcx,[rsp+0x80]
   1400148e7:	shl    edx,0x2
   1400148ea:	mov    r8b,0x20
   1400148ed:	call   QWORD PTR [rip+0x1ebd]        # 0x1400167b0
   1400148f3:	mov    rcx,rdi
   1400148f6:	mov    rdx,rax
   1400148f9:	call   QWORD PTR [rip+0x1c11]        # 0x140016510
   1400148ff:	lea    rcx,[rsp+0x80]
   140014907:	call   QWORD PTR [rip+0x196b]        # 0x140016278
   14001490d:	or     rcx,0xffffffffffffffff
   140014911:	xor    eax,eax
   140014913:	lea    rdi,[rip+0x2f3a]        # 0x140017854
   14001491a:	repnz scas al,BYTE PTR es:[rdi]
   14001491c:	not    rcx
   14001491f:	lea    rdx,[rcx-0x1]
   140014923:	lea    rcx,[rip+0x2f2a]        # 0x140017854
   14001492a:	call   QWORD PTR [rip+0x1fa0]        # 0x1400168d0
   140014930:	mov    rdi,QWORD PTR [rsi+0x18]
   140014934:	lea    rcx,[rsp+0x80]
   14001493c:	mov    dl,0x20
   14001493e:	mov    QWORD PTR [rsp+0x90],rax
   140014946:	call   QWORD PTR [rip+0x1fcc]        # 0x140016918
   14001494c:	lea    rdx,[rsp+0x30]
   140014951:	lea    rcx,[rsp+0x90]
   140014959:	movzx  eax,WORD PTR [rax]
   14001495c:	xor    r9d,r9d
   14001495f:	mov    r8,rbx
   140014962:	mov    WORD PTR [rsp+0x20],ax
   140014967:	call   QWORD PTR [rip+0x1f73]        # 0x1400168e0
   14001496d:	lea    rdx,[rsp+0x98]
   140014975:	mov    rcx,rax
   140014978:	call   QWORD PTR [rip+0x1b9a]        # 0x140016518
   14001497e:	mov    rcx,rdi
   140014981:	mov    rdx,rax
   140014984:	call   QWORD PTR [rip+0x1b86]        # 0x140016510
   14001498a:	lea    rcx,[rsp+0x98]
   140014992:	call   QWORD PTR [rip+0x18e0]        # 0x140016278
   140014998:	lea    rcx,[rsp+0x30]
   14001499d:	call   QWORD PTR [rip+0x1f95]        # 0x140016938
   1400149a3:	lea    rcx,[rsp+0x90]
   1400149ab:	call   QWORD PTR [rip+0x1f87]        # 0x140016938
   1400149b1:	inc    DWORD PTR [rsi]
   1400149b3:	mov    rcx,QWORD PTR [r12]
   1400149b7:	mov    eax,DWORD PTR [rcx+0xc]
   1400149ba:	xor    ebx,ebx
   1400149bc:	sub    eax,DWORD PTR [rcx+0x8]
   1400149bf:	mov    rbp,rbx
   1400149c2:	test   eax,eax
   1400149c4:	jle    0x140014b25
   1400149ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400149d0:	movsxd rdx,DWORD PTR [rcx+0x8]
   1400149d4:	add    rdx,rbp
   1400149d7:	mov    rdx,QWORD PTR [rcx+rdx*8+0x10]
   1400149dc:	lea    rcx,[rsp+0x98]
   1400149e4:	call   QWORD PTR [rip+0x1b56]        # 0x140016540
   1400149ea:	mov    rdx,QWORD PTR [r12]
   1400149ee:	lea    rcx,[rsp+0x90]
   1400149f6:	movsxd rax,DWORD PTR [rdx+0x8]
   1400149fa:	add    rax,rbp
   1400149fd:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   140014a02:	add    rdx,0x8
   140014a06:	call   QWORD PTR [rip+0x1b34]        # 0x140016540
   140014a0c:	mov    edx,DWORD PTR [rsi]
   140014a0e:	mov    rdi,QWORD PTR [rsi+0x18]
   140014a12:	lea    rcx,[rsp+0x30]
   140014a17:	shl    edx,0x2
   140014a1a:	mov    r8b,0x20
   140014a1d:	call   QWORD PTR [rip+0x1d8d]        # 0x1400167b0
   140014a23:	mov    rcx,rdi
   140014a26:	mov    rdx,rax
   140014a29:	call   QWORD PTR [rip+0x1ae1]        # 0x140016510
   140014a2f:	lea    rcx,[rsp+0x30]
   140014a34:	call   QWORD PTR [rip+0x183e]        # 0x140016278
   140014a3a:	or     rcx,0xffffffffffffffff
   140014a3e:	xor    eax,eax
   140014a40:	lea    rdi,[rip+0x2e05]        # 0x14001784c
   140014a47:	repnz scas al,BYTE PTR es:[rdi]
   140014a49:	not    rcx
   140014a4c:	lea    rdx,[rcx-0x1]
   140014a50:	lea    rcx,[rip+0x2df5]        # 0x14001784c
   140014a57:	call   QWORD PTR [rip+0x1e73]        # 0x1400168d0
   140014a5d:	mov    rdi,QWORD PTR [rsi+0x18]
   140014a61:	lea    r9,[rsp+0x90]
   140014a69:	lea    r8,[rsp+0x98]
   140014a71:	lea    rdx,[rsp+0x40]
   140014a76:	lea    rcx,[rsp+0x80]
   140014a7e:	mov    QWORD PTR [rsp+0x80],rax
   140014a86:	call   QWORD PTR [rip+0x1974]        # 0x140016400
   140014a8c:	lea    rdx,[rsp+0x38]
   140014a91:	mov    rcx,rax
   140014a94:	call   QWORD PTR [rip+0x1a7e]        # 0x140016518
   140014a9a:	mov    rcx,rdi
   140014a9d:	mov    rdx,rax
   140014aa0:	call   QWORD PTR [rip+0x1a6a]        # 0x140016510
   140014aa6:	lea    rcx,[rsp+0x38]
   140014aab:	call   QWORD PTR [rip+0x17c7]        # 0x140016278
   140014ab1:	lea    rcx,[rsp+0x40]
   140014ab6:	call   QWORD PTR [rip+0x1e7c]        # 0x140016938
   140014abc:	lea    rcx,[rsp+0x80]
   140014ac4:	call   QWORD PTR [rip+0x1e6e]        # 0x140016938
   140014aca:	mov    rdx,QWORD PTR [r12]
   140014ace:	mov    rcx,QWORD PTR [rsi+0x18]
   140014ad2:	mov    eax,DWORD PTR [rdx+0xc]
   140014ad5:	sub    eax,DWORD PTR [rdx+0x8]
   140014ad8:	lea    rdx,[rip+0x2d55]        # 0x140017834
   140014adf:	dec    eax
   140014ae1:	cmp    ebx,eax
   140014ae3:	jne    0x140014aec
   140014ae5:	lea    rdx,[rip+0x2c48]        # 0x140017734
   140014aec:	call   QWORD PTR [rip+0x1a2e]        # 0x140016520
   140014af2:	lea    rcx,[rsp+0x90]
   140014afa:	call   QWORD PTR [rip+0x1e38]        # 0x140016938
   140014b00:	lea    rcx,[rsp+0x98]
   140014b08:	call   QWORD PTR [rip+0x1e2a]        # 0x140016938
   140014b0e:	mov    rcx,QWORD PTR [r12]
   140014b12:	inc    ebx
   140014b14:	mov    eax,DWORD PTR [rcx+0xc]
   140014b17:	inc    rbp
   140014b1a:	sub    eax,DWORD PTR [rcx+0x8]
   140014b1d:	cmp    ebx,eax
   140014b1f:	jl     0x1400149d0
   140014b25:	dec    DWORD PTR [rsi]
   140014b27:	mov    edx,DWORD PTR [rsi]
   140014b29:	mov    rdi,QWORD PTR [rsi+0x18]
   140014b2d:	lea    rcx,[rsp+0x80]
   140014b35:	shl    edx,0x2
   140014b38:	mov    r8b,0x20
   140014b3b:	call   QWORD PTR [rip+0x1c6f]        # 0x1400167b0
   140014b41:	mov    rcx,rdi
   140014b44:	mov    rdx,rax
   140014b47:	call   QWORD PTR [rip+0x19c3]        # 0x140016510
   140014b4d:	lea    rcx,[rsp+0x80]
   140014b55:	call   QWORD PTR [rip+0x171d]        # 0x140016278
   140014b5b:	mov    rcx,QWORD PTR [rsi+0x18]
   140014b5f:	lea    rdx,[rip+0x2cc2]        # 0x140017828
   140014b66:	add    rsp,0x50
   140014b6a:	pop    r12
   140014b6c:	pop    rdi
   140014b6d:	pop    rsi
   140014b6e:	pop    rbp
   140014b6f:	pop    rbx
   140014b70:	rex.W jmp QWORD PTR [rip+0x19a9]        # 0x140016520
   140014b77:	int3   
   140014b78:	int3   
   140014b79:	int3   
   140014b7a:	int3   
   140014b7b:	int3   
   140014b7c:	int3   
   140014b7d:	int3   
   140014b7e:	int3   
   140014b7f:	int3   
   140014b80:	mov    QWORD PTR [rsp+0x10],rbx
   140014b85:	push   rbp
   140014b86:	push   rsi
   140014b87:	push   rdi
   140014b88:	sub    rsp,0x30
   140014b8c:	mov    rbp,rcx
   140014b8f:	or     rcx,0xffffffffffffffff
   140014b93:	xor    eax,eax
   140014b95:	mov    rsi,rdx
   140014b98:	lea    rdi,[rip+0x2cad]        # 0x14001784c
   140014b9f:	mov    rbx,r8
   140014ba2:	repnz scas al,BYTE PTR es:[rdi]
   140014ba4:	not    rcx
   140014ba7:	lea    rdx,[rcx-0x1]
   140014bab:	lea    rcx,[rip+0x2c9a]        # 0x14001784c
   140014bb2:	call   QWORD PTR [rip+0x1d18]        # 0x1400168d0
   140014bb8:	lea    rdx,[rsp+0x20]
   140014bbd:	lea    rcx,[rsp+0x50]
   140014bc2:	mov    r9,rbx
   140014bc5:	mov    r8,rsi
   140014bc8:	mov    QWORD PTR [rsp+0x50],rax
   140014bcd:	call   QWORD PTR [rip+0x182d]        # 0x140016400
   140014bd3:	lea    rdx,[rsp+0x68]
   140014bd8:	mov    rcx,rax
   140014bdb:	call   QWORD PTR [rip+0x1937]        # 0x140016518
   140014be1:	lea    rcx,[rbp+0x8]
   140014be5:	mov    rdx,rax
   140014be8:	mov    rdi,rax
   140014beb:	call   0x1400040f0
   140014bf0:	mov    rax,QWORD PTR [rdi]
   140014bf3:	mov    ecx,DWORD PTR [rax+0x4]
   140014bf6:	add    DWORD PTR [rbp+0x10],ecx
   140014bf9:	cmp    DWORD PTR [rbp+0x10],0x50
   140014bfd:	jl     0x140014c07
   140014bff:	mov    rcx,rbp
   140014c02:	call   0x140014050
   140014c07:	lea    rcx,[rsp+0x68]
   140014c0c:	call   QWORD PTR [rip+0x1666]        # 0x140016278
   140014c12:	lea    rcx,[rsp+0x20]
   140014c17:	call   QWORD PTR [rip+0x1d1b]        # 0x140016938
   140014c1d:	lea    rcx,[rsp+0x50]
   140014c22:	call   QWORD PTR [rip+0x1d10]        # 0x140016938
   140014c28:	mov    rbx,QWORD PTR [rsp+0x58]
   140014c2d:	add    rsp,0x30
   140014c31:	pop    rdi
   140014c32:	pop    rsi
   140014c33:	pop    rbp
   140014c34:	ret    
   140014c35:	int3   
   140014c36:	int3   
   140014c37:	int3   
   140014c38:	int3   
   140014c39:	int3   
   140014c3a:	int3   
   140014c3b:	int3   
   140014c3c:	int3   
   140014c3d:	int3   
   140014c3e:	int3   
   140014c3f:	int3   
   140014c40:	mov    QWORD PTR [rsp+0x8],rbx
   140014c45:	mov    QWORD PTR [rsp+0x10],rsi
   140014c4a:	push   rdi
   140014c4b:	sub    rsp,0x40
   140014c4f:	mov    rsi,rcx
   140014c52:	xor    eax,eax
   140014c54:	or     rcx,0xffffffffffffffff
   140014c58:	mov    rbx,rdx
   140014c5b:	lea    rdx,[rip+0x2182]        # 0x140016de4
   140014c62:	test   r8b,r8b
   140014c65:	jne    0x140014c6e
   140014c67:	lea    rdx,[rip+0x2bee]        # 0x14001785c
   140014c6e:	mov    rdi,rdx
   140014c71:	mov    QWORD PTR [rsp+0x28],rdx
   140014c76:	lea    rdx,[rsp+0x30]
   140014c7b:	repnz scas al,BYTE PTR es:[rdi]
   140014c7d:	not    rcx
   140014c80:	dec    rcx
   140014c83:	mov    DWORD PTR [rsp+0x20],ecx
   140014c87:	lea    rcx,[rsp+0x20]
   140014c8c:	mov    rax,QWORD PTR [rcx]
   140014c8f:	mov    QWORD PTR [rdx],rax
   140014c92:	mov    rax,QWORD PTR [rcx+0x8]
   140014c96:	lea    rcx,[rsp+0x68]
   140014c9b:	mov    QWORD PTR [rdx+0x8],rax
   140014c9f:	lea    rdx,[rsp+0x30]
   140014ca4:	call   QWORD PTR [rip+0x1566]        # 0x140016210
   140014caa:	lea    r8,[rsp+0x68]
   140014caf:	mov    rdx,rbx
   140014cb2:	mov    rcx,rsi
   140014cb5:	call   0x140014b80
   140014cba:	lea    rcx,[rsp+0x68]
   140014cbf:	call   QWORD PTR [rip+0x1c73]        # 0x140016938
   140014cc5:	mov    rbx,QWORD PTR [rsp+0x50]
   140014cca:	mov    rsi,QWORD PTR [rsp+0x58]
   140014ccf:	add    rsp,0x40
   140014cd3:	pop    rdi
   140014cd4:	ret    
   140014cd5:	int3   
   140014cd6:	int3   
   140014cd7:	int3   
   140014cd8:	int3   
   140014cd9:	int3   
   140014cda:	int3   
   140014cdb:	int3   
   140014cdc:	int3   
   140014cdd:	int3   
   140014cde:	int3   
   140014cdf:	int3   
   140014ce0:	rex push rbp
   140014ce2:	push   rsi
   140014ce3:	push   rdi
   140014ce4:	sub    rsp,0xb0
   140014ceb:	mov    rsi,rcx
   140014cee:	or     rcx,0xffffffffffffffff
   140014cf2:	xor    eax,eax
   140014cf4:	mov    rbp,rdx
   140014cf7:	lea    rdi,[rip+0x2bb2]        # 0x1400178b0
   140014cfe:	repnz scas al,BYTE PTR es:[rdi]
   140014d00:	not    rcx
   140014d03:	lea    rdx,[rcx-0x1]
   140014d07:	lea    rcx,[rip+0x2ba2]        # 0x1400178b0
   140014d0e:	call   QWORD PTR [rip+0x1bbc]        # 0x1400168d0
   140014d14:	lea    rdx,[rsp+0x30]
   140014d19:	lea    rcx,[rsp+0xe0]
   140014d21:	mov    r8d,0x2
   140014d27:	mov    QWORD PTR [rsp+0x30],rax
   140014d2c:	call   QWORD PTR [rip+0x1a1e]        # 0x140016750
   140014d32:	lea    rcx,[rsp+0x30]
   140014d37:	call   QWORD PTR [rip+0x1bfb]        # 0x140016938
   140014d3d:	lea    rcx,[rsp+0x30]
   140014d42:	mov    rdx,rbp
   140014d45:	call   QWORD PTR [rip+0x1825]        # 0x140016570
   140014d4b:	mov    rcx,rax
   140014d4e:	call   QWORD PTR [rip+0x1b74]        # 0x1400168c8
   140014d54:	lea    rcx,[rsp+0x30]
   140014d59:	test   al,al
   140014d5b:	sete   dil
   140014d5f:	call   QWORD PTR [rip+0x17c3]        # 0x140016528
   140014d65:	test   dil,dil
   140014d68:	je     0x140014dc4
   140014d6a:	lea    rdx,[rsp+0x58]
   140014d6f:	mov    rcx,rbp
   140014d72:	call   QWORD PTR [rip+0x1738]        # 0x1400164b0
   140014d78:	mov    rcx,QWORD PTR [rip+0x12d9]        # 0x140016058
   140014d7f:	lea    rdx,[rip+0x2b12]        # 0x140017898
   140014d86:	mov    rdi,rax
   140014d89:	call   0x1400016a0
   140014d8e:	mov    rdx,rdi
   140014d91:	mov    rcx,rax
   140014d94:	call   QWORD PTR [rip+0x1356]        # 0x1400160f0
   140014d9a:	mov    rdx,QWORD PTR [rip+0x12bf]        # 0x140016060
   140014da1:	mov    rcx,rax
   140014da4:	call   QWORD PTR [rip+0x12be]        # 0x140016068
   140014daa:	lea    rcx,[rsp+0x58]
   140014daf:	call   QWORD PTR [rip+0x132b]        # 0x1400160e0
   140014db5:	mov    rdx,QWORD PTR [rip+0x1464]        # 0x140016220
   140014dbc:	mov    QWORD PTR [rsi],rdx
   140014dbf:	jmp    0x140014fc6
   140014dc4:	lea    rcx,[rsp+0x48]
   140014dc9:	mov    rdx,rbp
   140014dcc:	call   QWORD PTR [rip+0x1716]        # 0x1400164e8
   140014dd2:	lea    rcx,[rsp+0x48]
   140014dd7:	mov    edx,0x1
   140014ddc:	call   QWORD PTR [rip+0x16fe]        # 0x1400164e0
   140014de2:	test   al,al
   140014de4:	jne    0x140014ece
   140014dea:	lea    rdx,[rsp+0x30]
   140014def:	lea    rcx,[rsp+0x48]
   140014df4:	mov    QWORD PTR [rsp+0xd0],rbx
   140014dfc:	call   QWORD PTR [rip+0x16d6]        # 0x1400164d8
   140014e02:	lea    rdx,[rsp+0x80]
   140014e0a:	mov    rcx,rax
   140014e0d:	call   QWORD PTR [rip+0x169d]        # 0x1400164b0
   140014e13:	lea    rdx,[rsp+0x58]
   140014e18:	mov    rcx,rbp
   140014e1b:	mov    rbx,rax
   140014e1e:	call   QWORD PTR [rip+0x168c]        # 0x1400164b0
   140014e24:	mov    rcx,QWORD PTR [rip+0x122d]        # 0x140016058
   140014e2b:	lea    rdx,[rip+0x2a4e]        # 0x140017880
   140014e32:	mov    rdi,rax
   140014e35:	call   0x1400016a0
   140014e3a:	mov    rdx,rdi
   140014e3d:	mov    rcx,rax
   140014e40:	call   QWORD PTR [rip+0x12aa]        # 0x1400160f0
   140014e46:	lea    rdx,[rip+0x2a2f]        # 0x14001787c
   140014e4d:	mov    rcx,rax
   140014e50:	call   0x1400016a0
   140014e55:	mov    rdx,rbx
   140014e58:	mov    rcx,rax
   140014e5b:	call   QWORD PTR [rip+0x128f]        # 0x1400160f0
   140014e61:	mov    rdx,QWORD PTR [rip+0x11f8]        # 0x140016060
   140014e68:	mov    rcx,rax
   140014e6b:	call   QWORD PTR [rip+0x11f7]        # 0x140016068
   140014e71:	lea    rcx,[rsp+0x58]
   140014e76:	call   QWORD PTR [rip+0x1264]        # 0x1400160e0
   140014e7c:	lea    rcx,[rsp+0x80]
   140014e84:	call   QWORD PTR [rip+0x1256]        # 0x1400160e0
   140014e8a:	lea    rcx,[rsp+0x30]
   140014e8f:	call   QWORD PTR [rip+0x1aa3]        # 0x140016938
   140014e95:	mov    rdx,QWORD PTR [rip+0x1384]        # 0x140016220
   140014e9c:	lea    rcx,[rsp+0x48]
   140014ea1:	mov    QWORD PTR [rsi],rdx
   140014ea4:	call   QWORD PTR [rip+0x1626]        # 0x1400164d0
   140014eaa:	lea    rcx,[rsp+0xe0]
   140014eb2:	call   QWORD PTR [rip+0x1860]        # 0x140016718
   140014eb8:	mov    rbx,QWORD PTR [rsp+0xd0]
   140014ec0:	mov    rax,rsi
   140014ec3:	add    rsp,0xb0
   140014eca:	pop    rdi
   140014ecb:	pop    rsi
   140014ecc:	pop    rbp
   140014ecd:	ret    
   140014ece:	lea    rdx,[rsp+0x38]
   140014ed3:	lea    rcx,[rsp+0x48]
   140014ed8:	call   QWORD PTR [rip+0x15ea]        # 0x1400164c8
   140014ede:	lea    rdx,[rsp+0x38]
   140014ee3:	lea    rcx,[rsp+0x40]
   140014ee8:	call   QWORD PTR [rip+0x148a]        # 0x140016378
   140014eee:	xor    edx,edx
   140014ef0:	lea    r8,[rsp+0x40]
   140014ef5:	mov    DWORD PTR [rsp+0x28],edx
   140014ef9:	mov    DWORD PTR [rsp+0x20],edx
   140014efd:	lea    rcx,[rsp+0xe0]
   140014f05:	lea    rdx,[rsp+0xe8]
   140014f0d:	xor    r9d,r9d
   140014f10:	call   QWORD PTR [rip+0x19aa]        # 0x1400168c0
   140014f16:	lea    rcx,[rsp+0xe8]
   140014f1e:	call   QWORD PTR [rip+0x1994]        # 0x1400168b8
   140014f24:	cmp    eax,0x2
   140014f27:	je     0x140014f86
   140014f29:	lea    rdx,[rsp+0x80]
   140014f31:	mov    rcx,rbp
   140014f34:	call   QWORD PTR [rip+0x1576]        # 0x1400164b0
   140014f3a:	mov    rcx,QWORD PTR [rip+0x1117]        # 0x140016058
   140014f41:	lea    rdx,[rip+0x2920]        # 0x140017868
   140014f48:	mov    rdi,rax
   140014f4b:	call   0x1400016a0
   140014f50:	mov    rdx,rdi
   140014f53:	mov    rcx,rax
   140014f56:	call   QWORD PTR [rip+0x1194]        # 0x1400160f0
   140014f5c:	mov    rdx,QWORD PTR [rip+0x10fd]        # 0x140016060
   140014f63:	mov    rcx,rax
   140014f66:	call   QWORD PTR [rip+0x10fc]        # 0x140016068
   140014f6c:	lea    rcx,[rsp+0x80]
   140014f74:	call   QWORD PTR [rip+0x1166]        # 0x1400160e0
   140014f7a:	mov    rdx,QWORD PTR [rip+0x129f]        # 0x140016220
   140014f81:	mov    QWORD PTR [rsi],rdx
   140014f84:	jmp    0x140014f97
   140014f86:	lea    rcx,[rsp+0xe8]
   140014f8e:	mov    rdx,rsi
   140014f91:	call   QWORD PTR [rip+0x1919]        # 0x1400168b0
   140014f97:	lea    rcx,[rsp+0xe8]
   140014f9f:	call   QWORD PTR [rip+0x1783]        # 0x140016728
   140014fa5:	lea    rcx,[rsp+0x40]
   140014faa:	call   QWORD PTR [rip+0x1988]        # 0x140016938
   140014fb0:	lea    rcx,[rsp+0x38]
   140014fb5:	call   QWORD PTR [rip+0x12bd]        # 0x140016278
   140014fbb:	lea    rcx,[rsp+0x48]
   140014fc0:	call   QWORD PTR [rip+0x150a]        # 0x1400164d0
   140014fc6:	lea    rcx,[rsp+0xe0]
   140014fce:	call   QWORD PTR [rip+0x1744]        # 0x140016718
   140014fd4:	mov    rax,rsi
   140014fd7:	add    rsp,0xb0
   140014fde:	pop    rdi
   140014fdf:	pop    rsi
   140014fe0:	pop    rbp
   140014fe1:	ret    
   140014fe2:	jmp    QWORD PTR [rip+0x17d8]        # 0x1400167c0
   140014fe8:	jmp    QWORD PTR [rip+0x17da]        # 0x1400167c8
   140014fee:	jmp    QWORD PTR [rip+0x17dc]        # 0x1400167d0
   140014ff4:	jmp    QWORD PTR [rip+0x17de]        # 0x1400167d8
   140014ffa:	jmp    QWORD PTR [rip+0x17e0]        # 0x1400167e0
   140015000:	jmp    QWORD PTR [rip+0x17e2]        # 0x1400167e8
   140015006:	jmp    QWORD PTR [rip+0x17e4]        # 0x1400167f0
   14001500c:	jmp    QWORD PTR [rip+0x17e6]        # 0x1400167f8
   140015012:	jmp    QWORD PTR [rip+0x17e8]        # 0x140016800
   140015018:	jmp    QWORD PTR [rip+0x17ea]        # 0x140016808
   14001501e:	jmp    QWORD PTR [rip+0x17ec]        # 0x140016810
   140015024:	jmp    QWORD PTR [rip+0x17ee]        # 0x140016818
   14001502a:	jmp    QWORD PTR [rip+0x17f0]        # 0x140016820
   140015030:	jmp    QWORD PTR [rip+0x17f2]        # 0x140016828
   140015036:	jmp    QWORD PTR [rip+0x17f4]        # 0x140016830
   14001503c:	jmp    QWORD PTR [rip+0x17f6]        # 0x140016838
   140015042:	jmp    QWORD PTR [rip+0x17f8]        # 0x140016840
   140015048:	jmp    QWORD PTR [rip+0x17fa]        # 0x140016848
   14001504e:	jmp    QWORD PTR [rip+0x17fc]        # 0x140016850
   140015054:	jmp    QWORD PTR [rip+0x17fe]        # 0x140016858
   14001505a:	jmp    QWORD PTR [rip+0x1800]        # 0x140016860
   140015060:	jmp    QWORD PTR [rip+0x1802]        # 0x140016868
   140015066:	jmp    QWORD PTR [rip+0x1804]        # 0x140016870
   14001506c:	jmp    QWORD PTR [rip+0x1806]        # 0x140016878
   140015072:	jmp    QWORD PTR [rip+0x1808]        # 0x140016880
   140015078:	jmp    QWORD PTR [rip+0x180a]        # 0x140016888
   14001507e:	jmp    QWORD PTR [rip+0x10a4]        # 0x140016128
   140015084:	jmp    QWORD PTR [rip+0x1096]        # 0x140016120
   14001508a:	jmp    QWORD PTR [rip+0x1088]        # 0x140016118
   140015090:	jmp    QWORD PTR [rip+0x109a]        # 0x140016130
   140015096:	jmp    QWORD PTR [rip+0x109c]        # 0x140016138
   14001509c:	rex push rbx
   14001509e:	sub    rsp,0x20
   1400150a2:	mov    rbx,rcx
   1400150a5:	mov    rcx,QWORD PTR [rip+0x80c4]        # 0x14001d170
   1400150ac:	call   QWORD PTR [rip+0x112e]        # 0x1400161e0
   1400150b2:	mov    QWORD PTR [rsp+0x38],rax
   1400150b7:	cmp    rax,0xffffffffffffffff
   1400150bb:	jne    0x1400150c8
   1400150bd:	mov    rcx,rbx
   1400150c0:	call   QWORD PTR [rip+0x112a]        # 0x1400161f0
   1400150c6:	jmp    0x140015146
   1400150c8:	mov    ecx,0x8
   1400150cd:	call   0x1400154c4
   1400150d2:	nop
   1400150d3:	mov    rcx,QWORD PTR [rip+0x8096]        # 0x14001d170
   1400150da:	call   QWORD PTR [rip+0x1100]        # 0x1400161e0
   1400150e0:	mov    QWORD PTR [rsp+0x38],rax
   1400150e5:	mov    rcx,QWORD PTR [rip+0x807c]        # 0x14001d168
   1400150ec:	call   QWORD PTR [rip+0x10ee]        # 0x1400161e0
   1400150f2:	mov    QWORD PTR [rsp+0x40],rax
   1400150f7:	mov    rcx,rbx
   1400150fa:	call   QWORD PTR [rip+0x1058]        # 0x140016158
   140015100:	mov    rcx,rax
   140015103:	lea    r8,[rsp+0x40]
   140015108:	lea    rdx,[rsp+0x38]
   14001510d:	call   0x1400154be
   140015112:	mov    rbx,rax
   140015115:	mov    rcx,QWORD PTR [rsp+0x38]
   14001511a:	call   QWORD PTR [rip+0x1038]        # 0x140016158
   140015120:	mov    QWORD PTR [rip+0x8049],rax        # 0x14001d170
   140015127:	mov    rcx,QWORD PTR [rsp+0x40]
   14001512c:	call   QWORD PTR [rip+0x1026]        # 0x140016158
   140015132:	mov    QWORD PTR [rip+0x802f],rax        # 0x14001d168
   140015139:	mov    ecx,0x8
   14001513e:	call   0x1400154b8
   140015143:	mov    rax,rbx
   140015146:	add    rsp,0x20
   14001514a:	pop    rbx
   14001514b:	ret    
   14001514c:	sub    rsp,0x28
   140015150:	call   0x14001509c
   140015155:	neg    rax
   140015158:	sbb    eax,eax
   14001515a:	neg    eax
   14001515c:	dec    eax
   14001515e:	add    rsp,0x28
   140015162:	ret    
   140015163:	int3   
   140015164:	mov    QWORD PTR [rsp+0x8],rbx
   140015169:	mov    QWORD PTR [rsp+0x10],rsi
   14001516e:	push   rdi
   14001516f:	sub    rsp,0x20
   140015173:	mov    esi,edx
   140015175:	mov    rbx,rcx
   140015178:	test   dl,0x2
   14001517b:	je     0x1400151a7
   14001517d:	mov    r8d,DWORD PTR [rcx-0x8]
   140015181:	lea    r9,[rip+0x666]        # 0x1400157ee
   140015188:	mov    edx,0x18
   14001518d:	call   0x140015518
   140015192:	test   sil,0x1
   140015196:	je     0x1400151a1
   140015198:	lea    rcx,[rbx-0x8]
   14001519c:	call   0x14001508a
   1400151a1:	lea    rax,[rbx-0x8]
   1400151a5:	jmp    0x1400151bd
   1400151a7:	call   0x1400157ee
   1400151ac:	test   sil,0x1
   1400151b0:	je     0x1400151ba
   1400151b2:	mov    rcx,rbx
   1400151b5:	call   0x14001508a
   1400151ba:	mov    rax,rbx
   1400151bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400151c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400151c7:	add    rsp,0x20
   1400151cb:	pop    rdi
   1400151cc:	ret    
   1400151cd:	int3   
   1400151ce:	int3   
   1400151cf:	int3   
   1400151d0:	sub    rsp,0x38
   1400151d4:	lea    rcx,[rip+0x439]        # 0x140015614
   1400151db:	call   0x14001514c
   1400151e0:	mov    r11d,DWORD PTR [rip+0x7f61]        # 0x14001d148
   1400151e7:	mov    r9d,DWORD PTR [rip+0x7f56]        # 0x14001d144
   1400151ee:	lea    rax,[rip+0x7f3f]        # 0x14001d134
   1400151f5:	lea    r8,[rip+0x7f24]        # 0x14001d120
   1400151fc:	lea    rdx,[rip+0x7f25]        # 0x14001d128
   140015203:	lea    rcx,[rip+0x7f0e]        # 0x14001d118
   14001520a:	mov    DWORD PTR [rip+0x7f23],r11d        # 0x14001d134
   140015211:	mov    QWORD PTR [rsp+0x20],rax
   140015216:	call   QWORD PTR [rip+0xfb4]        # 0x1400161d0
   14001521c:	mov    DWORD PTR [rip+0x7f0e],eax        # 0x14001d130
   140015222:	test   eax,eax
   140015224:	jns    0x140015230
   140015226:	mov    ecx,0x8
   14001522b:	call   0x1400155d4
   140015230:	add    rsp,0x38
   140015234:	ret    
   140015235:	int3   
   140015236:	int3   
   140015237:	int3   
   140015238:	mov    QWORD PTR [rsp+0x8],rsi
   14001523d:	push   rdi
   14001523e:	sub    rsp,0x20
   140015242:	mov    rax,QWORD PTR gs:0x30
   14001524b:	mov    rdi,QWORD PTR [rax+0x8]
   14001524f:	xor    esi,esi
   140015251:	xor    eax,eax
   140015253:	lock cmpxchg QWORD PTR [rip+0x7efc],rdi        # 0x14001d158
   14001525c:	je     0x140015279
   14001525e:	cmp    rax,rdi
   140015261:	jne    0x14001526c
   140015263:	mov    edi,0x1
   140015268:	mov    esi,edi
   14001526a:	jmp    0x14001527e
   14001526c:	mov    ecx,0x3e8
   140015271:	call   QWORD PTR [rip+0xdb9]        # 0x140016030
   140015277:	jmp    0x140015251
   140015279:	mov    edi,0x1
   14001527e:	mov    eax,DWORD PTR [rip+0x7ed0]        # 0x14001d154
   140015284:	cmp    eax,edi
   140015286:	jne    0x140015294
   140015288:	mov    ecx,0x1f
   14001528d:	call   0x1400155d4
   140015292:	jmp    0x1400152cb
   140015294:	mov    eax,DWORD PTR [rip+0x7eba]        # 0x14001d154
   14001529a:	test   eax,eax
   14001529c:	jne    0x1400152c5
   14001529e:	mov    DWORD PTR [rip+0x7eb0],edi        # 0x14001d154
   1400152a4:	lea    rdx,[rip+0x188d]        # 0x140016b38
   1400152ab:	lea    rcx,[rip+0x186e]        # 0x140016b20
   1400152b2:	call   0x140015728
   1400152b7:	test   eax,eax
   1400152b9:	je     0x1400152cb
   1400152bb:	mov    eax,0xff
   1400152c0:	jmp    0x1400153ad
   1400152c5:	mov    DWORD PTR [rip+0x7e71],edi        # 0x14001d13c
   1400152cb:	mov    eax,DWORD PTR [rip+0x7e83]        # 0x14001d154
   1400152d1:	cmp    eax,edi
   1400152d3:	jne    0x1400152f2
   1400152d5:	lea    rdx,[rip+0x183c]        # 0x140016b18
   1400152dc:	lea    rcx,[rip+0x17f5]        # 0x140016ad8
   1400152e3:	call   0x140015722
   1400152e8:	mov    DWORD PTR [rip+0x7e62],0x2        # 0x14001d154
   1400152f2:	test   esi,esi
   1400152f4:	jne    0x1400152ff
   1400152f6:	xor    eax,eax
   1400152f8:	xchg   QWORD PTR [rip+0x7e59],rax        # 0x14001d158
   1400152ff:	cmp    QWORD PTR [rip+0x7e59],0x0        # 0x14001d160
   140015307:	je     0x140015328
   140015309:	lea    rcx,[rip+0x7e50]        # 0x14001d160
   140015310:	call   0x1400156e0
   140015315:	test   eax,eax
   140015317:	je     0x140015328
   140015319:	xor    r8d,r8d
   14001531c:	lea    edx,[r8+0x2]
   140015320:	xor    ecx,ecx
   140015322:	call   QWORD PTR [rip+0x7e38]        # 0x14001d160
   140015328:	mov    rcx,QWORD PTR [rip+0xe79]        # 0x1400161a8
   14001532f:	mov    rax,QWORD PTR [rip+0x7dea]        # 0x14001d120
   140015336:	mov    QWORD PTR [rcx],rax
   140015339:	mov    r8,QWORD PTR [rip+0x7de0]        # 0x14001d120
   140015340:	mov    rdx,QWORD PTR [rip+0x7de1]        # 0x14001d128
   140015347:	mov    ecx,DWORD PTR [rip+0x7dcb]        # 0x14001d118
   14001534d:	call   0x14000fe10
   140015352:	mov    DWORD PTR [rip+0x7de0],eax        # 0x14001d138
   140015358:	cmp    DWORD PTR [rip+0x7dbd],0x0        # 0x14001d11c
   14001535f:	jne    0x140015369
   140015361:	mov    ecx,eax
   140015363:	call   QWORD PTR [rip+0xe47]        # 0x1400161b0
   140015369:	cmp    DWORD PTR [rip+0x7dcc],0x0        # 0x14001d13c
   140015370:	jne    0x14001537e
   140015372:	call   QWORD PTR [rip+0xe40]        # 0x1400161b8
   140015378:	mov    eax,DWORD PTR [rip+0x7dba]        # 0x14001d138
   14001537e:	jmp    0x1400153ad
   140015380:	mov    DWORD PTR [rip+0x7db2],eax        # 0x14001d138
   140015386:	cmp    DWORD PTR [rip+0x7d8f],0x0        # 0x14001d11c
   14001538d:	jne    0x140015398
   14001538f:	mov    ecx,eax
   140015391:	call   QWORD PTR [rip+0xe29]        # 0x1400161c0
   140015397:	int3   
   140015398:	cmp    DWORD PTR [rip+0x7d9d],0x0        # 0x14001d13c
   14001539f:	jne    0x1400153ad
   1400153a1:	call   QWORD PTR [rip+0xe11]        # 0x1400161b8
   1400153a7:	mov    eax,DWORD PTR [rip+0x7d8b]        # 0x14001d138
   1400153ad:	mov    rsi,QWORD PTR [rsp+0x30]
   1400153b2:	add    rsp,0x20
   1400153b6:	pop    rdi
   1400153b7:	ret    
   1400153b8:	sub    rsp,0x28
   1400153bc:	mov    eax,0x5a4d
   1400153c1:	cmp    WORD PTR [rip+0xfffffffffffeac38],ax        # 0x140000000
   1400153c8:	je     0x1400153ce
   1400153ca:	xor    eax,eax
   1400153cc:	jmp    0x14001541d
   1400153ce:	movsxd rcx,DWORD PTR [rip+0xfffffffffffeac67]        # 0x14000003c
   1400153d5:	lea    rax,[rip+0xfffffffffffeac24]        # 0x140000000
   1400153dc:	add    rcx,rax
   1400153df:	cmp    DWORD PTR [rcx],0x4550
   1400153e5:	jne    0x1400153ca
   1400153e7:	movzx  eax,WORD PTR [rcx+0x18]
   1400153eb:	cmp    eax,0x10b
   1400153f0:	je     0x14001540c
   1400153f2:	cmp    eax,0x20b
   1400153f7:	jne    0x1400153ca
   1400153f9:	xor    eax,eax
   1400153fb:	cmp    DWORD PTR [rcx+0x84],0xe
   140015402:	jbe    0x14001541d
   140015404:	cmp    DWORD PTR [rcx+0xf8],eax
   14001540a:	jmp    0x14001541a
   14001540c:	xor    eax,eax
   14001540e:	cmp    DWORD PTR [rcx+0x74],0xe
   140015412:	jbe    0x14001541d
   140015414:	cmp    DWORD PTR [rcx+0xe8],eax
   14001541a:	setne  al
   14001541d:	mov    ecx,0x1
   140015422:	mov    DWORD PTR [rip+0x7cf4],eax        # 0x14001d11c
   140015428:	call   QWORD PTR [rip+0xd42]        # 0x140016170
   14001542e:	or     rcx,0xffffffffffffffff
   140015432:	call   QWORD PTR [rip+0xd20]        # 0x140016158
   140015438:	mov    rcx,QWORD PTR [rip+0xd39]        # 0x140016178
   14001543f:	mov    QWORD PTR [rip+0x7d22],rax        # 0x14001d168
   140015446:	mov    QWORD PTR [rip+0x7d23],rax        # 0x14001d170
   14001544d:	mov    eax,DWORD PTR [rip+0x7cfd]        # 0x14001d150
   140015453:	mov    DWORD PTR [rcx],eax
   140015455:	mov    rdx,QWORD PTR [rip+0xd24]        # 0x140016180
   14001545c:	mov    eax,DWORD PTR [rip+0x7cea]        # 0x14001d14c
   140015462:	mov    DWORD PTR [rdx],eax
   140015464:	call   0x1400155dc
   140015469:	call   0x140015730
   14001546e:	cmp    DWORD PTR [rip+0x7c37],0x0        # 0x14001d0ac
   140015475:	jne    0x140015484
   140015477:	lea    rcx,[rip+0x2b2]        # 0x140015730
   14001547e:	call   QWORD PTR [rip+0xd04]        # 0x140016188
   140015484:	cmp    DWORD PTR [rip+0x7c1d],0xffffffff        # 0x14001d0a8
   14001548b:	jne    0x140015496
   14001548d:	or     ecx,0xffffffff
   140015490:	call   QWORD PTR [rip+0xcfa]        # 0x140016190
   140015496:	xor    eax,eax
   140015498:	add    rsp,0x28
   14001549c:	ret    
   14001549d:	int3   
   14001549e:	int3   
   14001549f:	int3   
   1400154a0:	sub    rsp,0x28
   1400154a4:	call   0x140015734
   1400154a9:	add    rsp,0x28
   1400154ad:	jmp    0x140015238
   1400154b2:	jmp    QWORD PTR [rip+0xc88]        # 0x140016140
   1400154b8:	jmp    QWORD PTR [rip+0xc8a]        # 0x140016148
   1400154be:	jmp    QWORD PTR [rip+0xc8c]        # 0x140016150
   1400154c4:	jmp    QWORD PTR [rip+0xc96]        # 0x140016160
   1400154ca:	int3   
   1400154cb:	int3   
   1400154cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400154d1:	mov    DWORD PTR [rsp+0x18],r8d
   1400154d6:	mov    QWORD PTR [rsp+0x8],rcx
   1400154db:	push   rsi
   1400154dc:	push   rdi
   1400154dd:	push   r12
   1400154df:	sub    rsp,0x40
   1400154e3:	mov    rsi,r9
   1400154e6:	mov    edi,r8d
   1400154e9:	mov    r12,rdx
   1400154ec:	mov    rbx,rcx
   1400154ef:	sub    edi,0x1
   1400154f2:	mov    DWORD PTR [rsp+0x70],edi
   1400154f6:	js     0x140015507
   1400154f8:	sub    rbx,r12
   1400154fb:	mov    QWORD PTR [rsp+0x60],rbx
   140015500:	mov    rcx,rbx
   140015503:	call   rsi
   140015505:	jmp    0x1400154ef
   140015507:	jmp    0x140015509
   140015509:	mov    rbx,QWORD PTR [rsp+0x68]
   14001550e:	add    rsp,0x40
   140015512:	pop    r12
   140015514:	pop    rdi
   140015515:	pop    rsi
   140015516:	ret    
   140015517:	int3   
   140015518:	mov    rax,rsp
   14001551b:	mov    QWORD PTR [rax+0x20],r9
   14001551f:	mov    DWORD PTR [rax+0x18],r8d
   140015523:	mov    QWORD PTR [rax+0x10],rdx
   140015527:	push   rbx
   140015528:	push   rsi
   140015529:	push   rdi
   14001552a:	push   r12
   14001552c:	sub    rsp,0x38
   140015530:	mov    r12,r9
   140015533:	movsxd rdi,r8d
   140015536:	mov    rsi,rdx
   140015539:	and    DWORD PTR [rax-0x38],0x0
   14001553d:	mov    rbx,rdi
   140015540:	imul   rbx,rdx
   140015544:	add    rbx,rcx
   140015547:	mov    QWORD PTR [rax+0x8],rbx
   14001554b:	sub    edi,0x1
   14001554e:	mov    DWORD PTR [rsp+0x70],edi
   140015552:	js     0x140015564
   140015554:	sub    rbx,rsi
   140015557:	mov    QWORD PTR [rsp+0x60],rbx
   14001555c:	mov    rcx,rbx
   14001555f:	call   r12
   140015562:	jmp    0x14001554b
   140015564:	mov    DWORD PTR [rsp+0x20],0x1
   14001556c:	add    rsp,0x38
   140015570:	pop    r12
   140015572:	pop    rdi
   140015573:	pop    rsi
   140015574:	pop    rbx
   140015575:	ret    
   140015576:	int3   
   140015577:	int3   
   140015578:	sub    rsp,0x28
   14001557c:	mov    rax,QWORD PTR [rcx]
   14001557f:	cmp    DWORD PTR [rax],0xe06d7363
   140015585:	jne    0x1400155b2
   140015587:	cmp    DWORD PTR [rax+0x18],0x4
   14001558b:	jne    0x1400155b2
   14001558d:	mov    eax,DWORD PTR [rax+0x20]
   140015590:	cmp    eax,0x19930520
   140015595:	je     0x1400155ac
   140015597:	cmp    eax,0x19930521
   14001559c:	je     0x1400155ac
   14001559e:	cmp    eax,0x19930522
   1400155a3:	je     0x1400155ac
   1400155a5:	cmp    eax,0x1994000
   1400155aa:	jne    0x1400155b2
   1400155ac:	call   0x1400157e8
   1400155b1:	int3   
   1400155b2:	xor    eax,eax
   1400155b4:	add    rsp,0x28
   1400155b8:	ret    
   1400155b9:	int3   
   1400155ba:	int3   
   1400155bb:	int3   
   1400155bc:	sub    rsp,0x28
   1400155c0:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140015578
   1400155c7:	call   QWORD PTR [rip+0xa5b]        # 0x140016028
   1400155cd:	xor    eax,eax
   1400155cf:	add    rsp,0x28
   1400155d3:	ret    
   1400155d4:	jmp    QWORD PTR [rip+0xbfe]        # 0x1400161d8
   1400155da:	int3   
   1400155db:	int3   
   1400155dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400155e1:	push   rdi
   1400155e2:	sub    rsp,0x20
   1400155e6:	lea    rbx,[rip+0x24cb]        # 0x140017ab8
   1400155ed:	lea    rdi,[rip+0x24c4]        # 0x140017ab8
   1400155f4:	jmp    0x140015604
   1400155f6:	mov    rax,QWORD PTR [rbx]
   1400155f9:	test   rax,rax
   1400155fc:	je     0x140015600
   1400155fe:	call   rax
   140015600:	add    rbx,0x8
   140015604:	cmp    rbx,rdi
   140015607:	jb     0x1400155f6
   140015609:	mov    rbx,QWORD PTR [rsp+0x30]
   14001560e:	add    rsp,0x20
   140015612:	pop    rdi
   140015613:	ret    
   140015614:	mov    QWORD PTR [rsp+0x8],rbx
   140015619:	push   rdi
   14001561a:	sub    rsp,0x20
   14001561e:	lea    rbx,[rip+0x24a3]        # 0x140017ac8
   140015625:	lea    rdi,[rip+0x249c]        # 0x140017ac8
   14001562c:	jmp    0x14001563c
   14001562e:	mov    rax,QWORD PTR [rbx]
   140015631:	test   rax,rax
   140015634:	je     0x140015638
   140015636:	call   rax
   140015638:	add    rbx,0x8
   14001563c:	cmp    rbx,rdi
   14001563f:	jb     0x14001562e
   140015641:	mov    rbx,QWORD PTR [rsp+0x30]
   140015646:	add    rsp,0x20
   14001564a:	pop    rdi
   14001564b:	ret    
   14001564c:	jmp    QWORD PTR [rip+0xb76]        # 0x1400161c8
   140015652:	int3   
   140015653:	int3   
   140015654:	int3   
   140015655:	int3   
   140015656:	int3   
   140015657:	int3   
   140015658:	int3   
   140015659:	int3   
   14001565a:	int3   
   14001565b:	int3   
   14001565c:	int3   
   14001565d:	int3   
   14001565e:	int3   
   14001565f:	int3   
   140015660:	mov    rax,rcx
   140015663:	mov    ecx,0x5a4d
   140015668:	cmp    WORD PTR [rax],cx
   14001566b:	je     0x140015670
   14001566d:	xor    eax,eax
   14001566f:	ret    
   140015670:	movsxd rcx,DWORD PTR [rax+0x3c]
   140015674:	add    rcx,rax
   140015677:	xor    eax,eax
   140015679:	cmp    DWORD PTR [rcx],0x4550
   14001567f:	jne    0x14001568d
   140015681:	mov    edx,0x20b
   140015686:	cmp    WORD PTR [rcx+0x18],dx
   14001568a:	sete   al
   14001568d:	repz ret 
   14001568f:	int3   
   140015690:	movsxd r8,DWORD PTR [rcx+0x3c]
   140015694:	xor    r9d,r9d
   140015697:	mov    r10,rdx
   14001569a:	add    r8,rcx
   14001569d:	movzx  eax,WORD PTR [r8+0x14]
   1400156a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400156a7:	lea    rcx,[rax+r8*1+0x18]
   1400156ac:	test   r11d,r11d
   1400156af:	je     0x1400156cf
   1400156b1:	mov    edx,DWORD PTR [rcx+0xc]
   1400156b4:	cmp    r10,rdx
   1400156b7:	jb     0x1400156c3
   1400156b9:	mov    eax,DWORD PTR [rcx+0x8]
   1400156bc:	add    eax,edx
   1400156be:	cmp    r10,rax
   1400156c1:	jb     0x1400156d2
   1400156c3:	inc    r9d
   1400156c6:	add    rcx,0x28
   1400156ca:	cmp    r9d,r11d
   1400156cd:	jb     0x1400156b1
   1400156cf:	xor    eax,eax
   1400156d1:	ret    
   1400156d2:	mov    rax,rcx
   1400156d5:	ret    
   1400156d6:	int3   
   1400156d7:	int3   
   1400156d8:	int3   
   1400156d9:	int3   
   1400156da:	int3   
   1400156db:	int3   
   1400156dc:	int3   
   1400156dd:	int3   
   1400156de:	int3   
   1400156df:	int3   
   1400156e0:	sub    rsp,0x28
   1400156e4:	mov    r8,rcx
   1400156e7:	lea    r9,[rip+0xfffffffffffea912]        # 0x140000000
   1400156ee:	mov    rcx,r9
   1400156f1:	call   0x140015660
   1400156f6:	test   eax,eax
   1400156f8:	je     0x14001571c
   1400156fa:	sub    r8,r9
   1400156fd:	mov    rdx,r8
   140015700:	mov    rcx,r9
   140015703:	call   0x140015690
   140015708:	test   rax,rax
   14001570b:	je     0x14001571c
   14001570d:	mov    eax,DWORD PTR [rax+0x24]
   140015710:	shr    eax,0x1f
   140015713:	not    eax
   140015715:	and    eax,0x1
   140015718:	jmp    0x14001571c
   14001571a:	xor    eax,eax
   14001571c:	add    rsp,0x28
   140015720:	ret    
   140015721:	int3   
   140015722:	jmp    QWORD PTR [rip+0xa78]        # 0x1400161a0
   140015728:	jmp    QWORD PTR [rip+0xa6a]        # 0x140016198
   14001572e:	int3   
   14001572f:	int3   
   140015730:	xor    eax,eax
   140015732:	ret    
   140015733:	int3   
   140015734:	mov    QWORD PTR [rsp+0x18],rbx
   140015739:	push   rdi
   14001573a:	sub    rsp,0x20
   14001573e:	mov    rax,QWORD PTR [rip+0x796b]        # 0x14001d0b0
   140015745:	and    QWORD PTR [rsp+0x30],0x0
   14001574b:	movabs rdi,0x2b992ddfa232
   140015755:	cmp    rax,rdi
   140015758:	je     0x140015766
   14001575a:	not    rax
   14001575d:	mov    QWORD PTR [rip+0x7954],rax        # 0x14001d0b8
   140015764:	jmp    0x1400157dc
   140015766:	lea    rcx,[rsp+0x30]
   14001576b:	call   QWORD PTR [rip+0x88f]        # 0x140016000
   140015771:	mov    rbx,QWORD PTR [rsp+0x30]
   140015776:	call   QWORD PTR [rip+0x88c]        # 0x140016008
   14001577c:	mov    r11d,eax
   14001577f:	xor    rbx,r11
   140015782:	call   QWORD PTR [rip+0x888]        # 0x140016010
   140015788:	mov    r11d,eax
   14001578b:	xor    rbx,r11
   14001578e:	call   QWORD PTR [rip+0x884]        # 0x140016018
   140015794:	lea    rcx,[rsp+0x38]
   140015799:	mov    r11d,eax
   14001579c:	xor    rbx,r11
   14001579f:	call   QWORD PTR [rip+0x87b]        # 0x140016020
   1400157a5:	mov    r11,QWORD PTR [rsp+0x38]
   1400157aa:	xor    r11,rbx
   1400157ad:	movabs rax,0xffffffffffff
   1400157b7:	and    r11,rax
   1400157ba:	movabs rax,0x2b992ddfa233
   1400157c4:	cmp    r11,rdi
   1400157c7:	cmove  r11,rax
   1400157cb:	mov    QWORD PTR [rip+0x78de],r11        # 0x14001d0b0
   1400157d2:	not    r11
   1400157d5:	mov    QWORD PTR [rip+0x78dc],r11        # 0x14001d0b8
   1400157dc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400157e1:	add    rsp,0x20
   1400157e5:	pop    rdi
   1400157e6:	ret    
   1400157e7:	int3   
   1400157e8:	jmp    QWORD PTR [rip+0x97a]        # 0x140016168
   1400157ee:	jmp    QWORD PTR [rip+0x9f4]        # 0x1400161e8
   1400157f4:	int3   
   1400157f5:	int3   
   1400157f6:	int3   
   1400157f7:	int3   
   1400157f8:	int3   
   1400157f9:	int3   
   1400157fa:	int3   
   1400157fb:	int3   
   1400157fc:	int3   
   1400157fd:	int3   
   1400157fe:	int3   
   1400157ff:	int3   
   140015800:	mov    QWORD PTR [rsp+0x10],rdx
   140015805:	push   rbx
   140015806:	push   rbp
   140015807:	sub    rsp,0x28
   14001580b:	mov    rbp,rdx
   14001580e:	mov    rdx,QWORD PTR [rbp+0x70]
   140015812:	mov    rax,QWORD PTR [rdx]
   140015815:	movsxd rcx,DWORD PTR [rax+0x4]
   140015819:	add    rcx,rdx
   14001581c:	mov    r8b,0x1
   14001581f:	mov    edx,0x4
   140015824:	call   QWORD PTR [rip+0x86e]        # 0x140016098
   14001582a:	nop
   14001582b:	lea    rax,[rip+0xfffffffffffebfe4]        # 0x140001816
   140015832:	jmp    0x140015834
   140015834:	add    rsp,0x28
   140015838:	pop    rbp
   140015839:	pop    rbx
   14001583a:	ret    
   14001583b:	int3   
   14001583c:	int3   
   14001583d:	int3   
   14001583e:	int3   
   14001583f:	int3   
   140015840:	mov    QWORD PTR [rsp+0x10],rdx
   140015845:	push   rbp
   140015846:	push   r12
   140015848:	sub    rsp,0x28
   14001584c:	mov    rbp,rdx
   14001584f:	mov    rdx,QWORD PTR [rbp+0x70]
   140015853:	mov    rax,QWORD PTR [rdx]
   140015856:	movsxd rcx,DWORD PTR [rax+0x4]
   14001585a:	add    rcx,rdx
   14001585d:	mov    r8b,0x1
   140015860:	mov    edx,0x4
   140015865:	call   QWORD PTR [rip+0x82d]        # 0x140016098
   14001586b:	nop
   14001586c:	lea    rax,[rip+0xfffffffffffec169]        # 0x1400019dc
   140015873:	jmp    0x140015875
   140015875:	add    rsp,0x28
   140015879:	pop    r12
   14001587b:	pop    rbp
   14001587c:	ret    
   14001587d:	int3   
   14001587e:	int3   
   14001587f:	int3   
   140015880:	mov    QWORD PTR [rsp+0x10],rdx
   140015885:	push   rbx
   140015886:	push   rbp
   140015887:	sub    rsp,0x28
   14001588b:	mov    rbp,rdx
   14001588e:	mov    rdx,QWORD PTR [rbp+0x80]
   140015895:	mov    rax,QWORD PTR [rdx]
   140015898:	movsxd rcx,DWORD PTR [rax+0x4]
   14001589c:	add    rcx,rdx
   14001589f:	mov    r8b,0x1
   1400158a2:	mov    edx,0x4
   1400158a7:	call   QWORD PTR [rip+0x7d3]        # 0x140016080
   1400158ad:	nop
   1400158ae:	lea    rax,[rip+0xfffffffffffec342]        # 0x140001bf7
   1400158b5:	jmp    0x1400158b7
   1400158b7:	add    rsp,0x28
   1400158bb:	pop    rbp
   1400158bc:	pop    rbx
   1400158bd:	ret    
   1400158be:	int3   
   1400158bf:	rex push rbp
   1400158c1:	sub    rsp,0x20
   1400158c5:	mov    rbp,rdx
   1400158c8:	mov    ecx,0x8
   1400158cd:	call   0x1400154b8
   1400158d2:	add    rsp,0x20
   1400158d6:	pop    rbp
   1400158d7:	ret    
   1400158d8:	rex push rbp
   1400158da:	sub    rsp,0x20
   1400158de:	mov    rbp,rdx
   1400158e1:	mov    rax,QWORD PTR [rcx]
   1400158e4:	mov    rdx,rcx
   1400158e7:	mov    ecx,DWORD PTR [rax]
   1400158e9:	call   0x14001564c
   1400158ee:	add    rsp,0x20
   1400158f2:	pop    rbp
   1400158f3:	ret    
   1400158f4:	rex push rbp
   1400158f6:	sub    rsp,0x20
   1400158fa:	mov    rbp,rdx
   1400158fd:	mov    QWORD PTR [rbp+0x38],rcx
   140015901:	mov    QWORD PTR [rbp+0x28],rcx
   140015905:	mov    rax,QWORD PTR [rbp+0x28]
   140015909:	mov    rcx,QWORD PTR [rax]
   14001590c:	mov    QWORD PTR [rbp+0x30],rcx
   140015910:	mov    rax,QWORD PTR [rbp+0x30]
   140015914:	cmp    DWORD PTR [rax],0xe06d7363
   14001591a:	je     0x140015928
   14001591c:	mov    DWORD PTR [rbp+0x20],0x0
   140015923:	mov    eax,DWORD PTR [rbp+0x20]
   140015926:	jmp    0x14001592d
   140015928:	call   0x1400157e8
   14001592d:	add    rsp,0x20
   140015931:	pop    rbp
   140015932:	ret    
   140015933:	rex push rbp
   140015935:	sub    rsp,0x20
   140015939:	mov    rbp,rdx
   14001593c:	cmp    DWORD PTR [rbp+0x20],0x0
   140015940:	jne    0x140015957
   140015942:	mov    r9,QWORD PTR [rbp+0x78]
   140015946:	mov    r8d,DWORD PTR [rbp+0x70]
   14001594a:	mov    rdx,QWORD PTR [rbp+0x68]
   14001594e:	mov    rcx,QWORD PTR [rbp+0x60]
   140015952:	call   0x1400154cc
   140015957:	add    rsp,0x20
   14001595b:	pop    rbp
   14001595c:	ret    
   14001595d:	int3   
   14001595e:	int3   
   14001595f:	int3   
   140015960:	rex push rbp
   140015962:	sub    rsp,0x20
   140015966:	mov    rbp,rdx
   140015969:	mov    rax,QWORD PTR [rcx]
   14001596c:	xor    ecx,ecx
   14001596e:	cmp    DWORD PTR [rax],0xc0000005
   140015974:	sete   cl
   140015977:	mov    eax,ecx
   140015979:	mov    eax,ecx
   14001597b:	add    rsp,0x20
   14001597f:	pop    rbp
   140015980:	ret    
   140015981:	int3   
   140015982:	int3   
   140015983:	int3   
   140015984:	int3   
   140015985:	int3   
   140015986:	int3   
   140015987:	int3   
   140015988:	int3   
   140015989:	int3   
   14001598a:	int3   
   14001598b:	int3   
   14001598c:	int3   
   14001598d:	int3   
   14001598e:	int3   
   14001598f:	int3   
   140015990:	sub    rsp,0x28
   140015994:	lea    rcx,[rip+0x773d]        # 0x14001d0d8
   14001599b:	call   QWORD PTR [rip+0x85f]        # 0x140016200
   1400159a1:	lea    rcx,[rip+0xd8]        # 0x140015a80
   1400159a8:	add    rsp,0x28
   1400159ac:	jmp    0x14001514c
   1400159b1:	int3   
   1400159b2:	int3   
   1400159b3:	int3   
   1400159b4:	int3   
   1400159b5:	int3   
   1400159b6:	int3   
   1400159b7:	int3   
   1400159b8:	int3   
   1400159b9:	int3   
   1400159ba:	int3   
   1400159bb:	int3   
   1400159bc:	int3   
   1400159bd:	int3   
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	sub    rsp,0x28
   1400159c4:	lea    rcx,[rip+0x76fd]        # 0x14001d0c8
   1400159cb:	call   QWORD PTR [rip+0x82f]        # 0x140016200
   1400159d1:	lea    rcx,[rip+0xb8]        # 0x140015a90
   1400159d8:	add    rsp,0x28
   1400159dc:	jmp    0x14001514c
   1400159e1:	int3   
   1400159e2:	int3   
   1400159e3:	int3   
   1400159e4:	int3   
   1400159e5:	int3   
   1400159e6:	int3   
   1400159e7:	int3   
   1400159e8:	int3   
   1400159e9:	int3   
   1400159ea:	int3   
   1400159eb:	int3   
   1400159ec:	int3   
   1400159ed:	int3   
   1400159ee:	int3   
   1400159ef:	int3   
   1400159f0:	sub    rsp,0x28
   1400159f4:	lea    rcx,[rip+0x76f5]        # 0x14001d0f0
   1400159fb:	call   QWORD PTR [rip+0x7ff]        # 0x140016200
   140015a01:	lea    rcx,[rip+0x98]        # 0x140015aa0
   140015a08:	add    rsp,0x28
   140015a0c:	jmp    0x14001514c
   140015a11:	int3   
   140015a12:	int3   
   140015a13:	int3   
   140015a14:	int3   
   140015a15:	int3   
   140015a16:	int3   
   140015a17:	int3   
   140015a18:	int3   
   140015a19:	int3   
   140015a1a:	int3   
   140015a1b:	int3   
   140015a1c:	int3   
   140015a1d:	int3   
   140015a1e:	int3   
   140015a1f:	int3   
   140015a20:	mov    rax,QWORD PTR [rip+0x801]        # 0x140016228
   140015a27:	lea    rcx,[rip+0x112]        # 0x140015b40
   140015a2e:	mov    QWORD PTR [rip+0x769b],rax        # 0x14001d0d0
   140015a35:	jmp    0x14001514c
   140015a3a:	int3   
   140015a3b:	int3   
   140015a3c:	int3   
   140015a3d:	int3   
   140015a3e:	int3   
   140015a3f:	int3   
   140015a40:	mov    rax,QWORD PTR [rip+0x7e9]        # 0x140016230
   140015a47:	lea    rcx,[rip+0x132]        # 0x140015b80
   140015a4e:	mov    QWORD PTR [rip+0x7693],rax        # 0x14001d0e8
   140015a55:	jmp    0x14001514c
   140015a5a:	int3   
   140015a5b:	int3   
   140015a5c:	int3   
   140015a5d:	int3   
   140015a5e:	int3   
   140015a5f:	int3   
   140015a60:	mov    rax,QWORD PTR [rip+0x7c1]        # 0x140016228
   140015a67:	lea    rcx,[rip+0x52]        # 0x140015ac0
   140015a6e:	mov    QWORD PTR [rip+0x766b],rax        # 0x14001d0e0
   140015a75:	jmp    0x14001514c
   140015a7a:	int3   
   140015a7b:	int3   
   140015a7c:	int3   
   140015a7d:	int3   
   140015a7e:	int3   
   140015a7f:	int3   
   140015a80:	lea    rcx,[rip+0x7651]        # 0x14001d0d8
   140015a87:	rex.W jmp QWORD PTR [rip+0xeaa]        # 0x140016938
   140015a8e:	int3   
   140015a8f:	int3   
   140015a90:	lea    rcx,[rip+0x7631]        # 0x14001d0c8
   140015a97:	rex.W jmp QWORD PTR [rip+0xe9a]        # 0x140016938
   140015a9e:	int3   
   140015a9f:	int3   
   140015aa0:	lea    rcx,[rip+0x7649]        # 0x14001d0f0
   140015aa7:	rex.W jmp QWORD PTR [rip+0xe8a]        # 0x140016938
   140015aae:	int3   
   140015aaf:	int3   
   140015ab0:	lea    rcx,[rip+0x7641]        # 0x14001d0f8
   140015ab7:	rex.W jmp QWORD PTR [rip+0x7ba]        # 0x140016278
   140015abe:	int3   
   140015abf:	int3   
   140015ac0:	sub    rsp,0x28
   140015ac4:	mov    rcx,QWORD PTR [rip+0x7615]        # 0x14001d0e0
   140015acb:	mov    eax,DWORD PTR [rcx+0x10]
   140015ace:	test   eax,eax
   140015ad0:	je     0x140015aea
   140015ad2:	cmp    eax,0xffffffff
   140015ad5:	je     0x140015af7
   140015ad7:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140015adc:	setne  al
   140015adf:	test   al,al
   140015ae1:	jne    0x140015af7
   140015ae3:	mov    rcx,QWORD PTR [rip+0x75f6]        # 0x14001d0e0
   140015aea:	lea    rdx,[rip+0xfffffffffffec7ef]        # 0x1400022e0
   140015af1:	call   QWORD PTR [rip+0x7a1]        # 0x140016298
   140015af7:	add    rsp,0x28
   140015afb:	ret    
   140015afc:	int3   
   140015afd:	int3   
   140015afe:	int3   
   140015aff:	int3   
   140015b00:	sub    rsp,0x28
   140015b04:	mov    rcx,QWORD PTR [rip+0x75fd]        # 0x14001d108
   140015b0b:	mov    eax,DWORD PTR [rcx+0x10]
   140015b0e:	test   eax,eax
   140015b10:	je     0x140015b2a
   140015b12:	cmp    eax,0xffffffff
   140015b15:	je     0x140015b37
   140015b17:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140015b1c:	setne  al
   140015b1f:	test   al,al
   140015b21:	jne    0x140015b37
   140015b23:	mov    rcx,QWORD PTR [rip+0x75de]        # 0x14001d108
   140015b2a:	lea    rdx,[rip+0xfffffffffffec7df]        # 0x140002310
   140015b31:	call   QWORD PTR [rip+0x761]        # 0x140016298
   140015b37:	add    rsp,0x28
   140015b3b:	ret    
   140015b3c:	int3   
   140015b3d:	int3   
   140015b3e:	int3   
   140015b3f:	int3   
   140015b40:	sub    rsp,0x28
   140015b44:	mov    rcx,QWORD PTR [rip+0x7585]        # 0x14001d0d0
   140015b4b:	mov    eax,DWORD PTR [rcx+0x10]
   140015b4e:	test   eax,eax
   140015b50:	je     0x140015b6a
   140015b52:	cmp    eax,0xffffffff
   140015b55:	je     0x140015b77
   140015b57:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140015b5c:	setne  al
   140015b5f:	test   al,al
   140015b61:	jne    0x140015b77
   140015b63:	mov    rcx,QWORD PTR [rip+0x7566]        # 0x14001d0d0
   140015b6a:	lea    rdx,[rip+0xfffffffffffef80f]        # 0x140005380
   140015b71:	call   QWORD PTR [rip+0x721]        # 0x140016298
   140015b77:	add    rsp,0x28
   140015b7b:	ret    
   140015b7c:	int3   
   140015b7d:	int3   
   140015b7e:	int3   
   140015b7f:	int3   
   140015b80:	rex push rbx
   140015b82:	sub    rsp,0x20
   140015b86:	mov    rbx,QWORD PTR [rip+0x755b]        # 0x14001d0e8
   140015b8d:	mov    eax,DWORD PTR [rbx]
   140015b8f:	test   eax,eax
   140015b91:	je     0x140015baa
   140015b93:	cmp    eax,0xffffffff
   140015b96:	je     0x140015bd4
   140015b98:	lock add DWORD PTR [rbx],0xffffffff
   140015b9c:	setne  al
   140015b9f:	test   al,al
   140015ba1:	jne    0x140015bd4
   140015ba3:	mov    rbx,QWORD PTR [rip+0x753e]        # 0x14001d0e8
   140015baa:	mov    rcx,QWORD PTR [rbx+0x10]
   140015bae:	test   rcx,rcx
   140015bb1:	je     0x140015bcb
   140015bb3:	call   0x140008650
   140015bb8:	mov    rdx,QWORD PTR [rbx+0x10]
   140015bbc:	mov    r8d,0x8
   140015bc2:	mov    rcx,rbx
   140015bc5:	call   QWORD PTR [rip+0x74d]        # 0x140016318
   140015bcb:	mov    rcx,rbx
   140015bce:	call   QWORD PTR [rip+0x73c]        # 0x140016310
   140015bd4:	add    rsp,0x20
   140015bd8:	pop    rbx
   140015bd9:	ret    

Disassembly of section .rdata:

0000000140016000 <.rdata>:
   140016000:	sahf   
   140016001:	int    0x1
   140016003:	add    BYTE PTR [rax],al
   140016005:	add    BYTE PTR [rax],al
   140016007:	add    BYTE PTR [rax+0x1cd],cl
   14001600d:	add    BYTE PTR [rax],al
   14001600f:	add    BYTE PTR [rdx-0x33],dh
   140016012:	add    DWORD PTR [rax],eax
   140016014:	add    BYTE PTR [rax],al
   140016016:	add    BYTE PTR [rax],al
   140016018:	(bad)  
   140016019:	int    0x1
   14001601b:	add    BYTE PTR [rax],al
   14001601d:	add    BYTE PTR [rax],al
   14001601f:	add    BYTE PTR [rax-0x33],cl
   140016022:	add    DWORD PTR [rax],eax
   140016024:	add    BYTE PTR [rax],al
   140016026:	add    BYTE PTR [rax],al
   140016028:	sub    cl,ch
   14001602a:	add    DWORD PTR [rax],eax
   14001602c:	add    BYTE PTR [rax],al
   14001602e:	add    BYTE PTR [rax],al
   140016030:	and    cl,ch
   140016032:	add    DWORD PTR [rax],eax
   140016034:	add    BYTE PTR [rax],al
   140016036:	add    BYTE PTR [rax],al
   140016038:	adc    cl,ch
   14001603a:	add    DWORD PTR [rax],eax
	...
   140016048:	mov    eax,0x1c8
   14001604d:	add    BYTE PTR [rax],al
   14001604f:	add    BYTE PTR [rdx-0x38],ah
   140016052:	add    DWORD PTR [rax],eax
   140016054:	add    BYTE PTR [rax],al
   140016056:	add    BYTE PTR [rax],al
   140016058:	es enter 0x1,0x0
   14001605d:	add    BYTE PTR [rax],al
   14001605f:	add    dh,bl
   140016061:	mov    DWORD PTR [rcx],0x0
   140016067:	add    BYTE PTR [rdx+0x1c7],cl
   14001606d:	add    BYTE PTR [rax],al
   14001606f:	add    BYTE PTR [rsi-0x39],al
   140016072:	add    DWORD PTR [rax],eax
   140016074:	add    BYTE PTR [rax],al
   140016076:	add    BYTE PTR [rax],al
   140016078:	cld    
   140016079:	mov    BYTE PTR [rcx],0x0
   14001607c:	add    BYTE PTR [rax],al
   14001607e:	add    BYTE PTR [rax],al
   140016080:	mov    edx,0x1c6
   140016085:	add    BYTE PTR [rax],al
   140016087:	add    BYTE PTR [rax-0x3a],bh
   14001608a:	add    DWORD PTR [rax],eax
   14001608c:	add    BYTE PTR [rax],al
   14001608e:	add    BYTE PTR [rax],al
   140016090:	xor    dh,al
   140016092:	add    DWORD PTR [rax],eax
   140016094:	add    BYTE PTR [rax],al
   140016096:	add    BYTE PTR [rax],al
   140016098:	(bad)
   14001609c:	add    BYTE PTR [rax],al
   14001609e:	add    BYTE PTR [rax],al
   1400160a0:	mov    al,0xc5
   1400160a2:	add    DWORD PTR [rax],eax
   1400160a4:	add    BYTE PTR [rax],al
   1400160a6:	add    BYTE PTR [rax],al
   1400160a8:	push   0xffffffffffffffc5
   1400160aa:	add    DWORD PTR [rax],eax
   1400160ac:	add    BYTE PTR [rax],al
   1400160ae:	add    BYTE PTR [rax],al
   1400160b0:	(bad)
   1400160b4:	add    BYTE PTR [rax],al
   1400160b6:	add    BYTE PTR [rax],al
   1400160b8:	or     al,ch
   1400160ba:	add    DWORD PTR [rax],eax
   1400160bc:	add    BYTE PTR [rax],al
   1400160be:	add    BYTE PTR [rax],al
   1400160c0:	mov    ah,0x1
   1400160c3:	add    BYTE PTR [rax],al
   1400160c5:	add    BYTE PTR [rax],al
   1400160c7:	add    BYTE PTR [rsi+0x1c4],ah
   1400160cd:	add    BYTE PTR [rax],al
   1400160cf:	add    BYTE PTR [rax+0x1c4],cl
   1400160d5:	add    BYTE PTR [rax],al
   1400160d7:	add    BYTE PTR [rdx],al
   1400160d9:	leave  
   1400160da:	add    DWORD PTR [rax],eax
   1400160dc:	add    BYTE PTR [rax],al
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	rex leave 
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	add    BYTE PTR [rax],al
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	mov    cl,cl
   1400160ea:	add    DWORD PTR [rax],eax
   1400160ec:	add    BYTE PTR [rax],al
   1400160ee:	add    BYTE PTR [rax],al
   1400160f0:	int3   
   1400160f1:	leave  
   1400160f2:	add    DWORD PTR [rax],eax
   1400160f4:	add    BYTE PTR [rax],al
   1400160f6:	add    BYTE PTR [rax],al
   1400160f8:	jp     0x1400160c4
   1400160fa:	add    DWORD PTR [rax],eax
   1400160fc:	add    BYTE PTR [rax],al
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	ret    0x1ca
   140016103:	add    BYTE PTR [rax],al
   140016105:	add    BYTE PTR [rax],al
   140016107:	add    dh,bh
   140016109:	retf   0x1
	...
   140016118:	(bad)  
   140016119:	retf   
   14001611a:	add    DWORD PTR [rax],eax
   14001611c:	add    BYTE PTR [rax],al
   14001611e:	add    BYTE PTR [rax],al
   140016120:	push   rsi
   140016121:	retf   
   140016122:	add    DWORD PTR [rax],eax
   140016124:	add    BYTE PTR [rax],al
   140016126:	add    BYTE PTR [rax],al
   140016128:	rex.WR retf 
   14001612a:	add    DWORD PTR [rax],eax
   14001612c:	add    BYTE PTR [rax],al
   14001612e:	add    BYTE PTR [rax],al
   140016130:	jo     0x1400160fd
   140016132:	add    DWORD PTR [rax],eax
   140016134:	add    BYTE PTR [rax],al
   140016136:	add    BYTE PTR [rax],al
   140016138:	(bad)  
   140016139:	retf   
   14001613a:	add    DWORD PTR [rax],eax
   14001613c:	add    BYTE PTR [rax],al
   14001613e:	add    BYTE PTR [rax],al
   140016140:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016141:	retf   
   140016142:	add    DWORD PTR [rax],eax
   140016144:	add    BYTE PTR [rax],al
   140016146:	add    BYTE PTR [rax],al
   140016148:	mov    esp,0x1cb
   14001614d:	add    BYTE PTR [rax],al
   14001614f:	add    dh,al
   140016151:	retf   
   140016152:	add    DWORD PTR [rax],eax
   140016154:	add    BYTE PTR [rax],al
   140016156:	add    BYTE PTR [rax],al
   140016158:	(bad)  
   140016159:	retf   
   14001615a:	add    DWORD PTR [rax],eax
   14001615c:	add    BYTE PTR [rax],al
   14001615e:	add    BYTE PTR [rax],al
   140016160:	out    0xcb,al
   140016162:	add    DWORD PTR [rax],eax
   140016164:	add    BYTE PTR [rax],al
   140016166:	add    BYTE PTR [rax],al
   140016168:	enter  0x1cc,0x0
   14001616c:	add    BYTE PTR [rax],al
   14001616e:	add    BYTE PTR [rax],al
   140016170:	mov    dh,0xcc
   140016172:	add    DWORD PTR [rax],eax
   140016174:	add    BYTE PTR [rax],al
   140016176:	add    BYTE PTR [rax],al
   140016178:	lods   al,BYTE PTR ds:[rsi]
   140016179:	int3   
   14001617a:	add    DWORD PTR [rax],eax
   14001617c:	add    BYTE PTR [rax],al
   14001617e:	add    BYTE PTR [rax],al
   140016180:	movabs al,ds:0x8c000000000001cc
   140016189:	int3   
   14001618a:	add    DWORD PTR [rax],eax
   14001618c:	add    BYTE PTR [rax],al
   14001618e:	add    BYTE PTR [rax],al
   140016190:	jbe    0x14001615e
   140016192:	add    DWORD PTR [rax],eax
   140016194:	add    BYTE PTR [rax],al
   140016196:	add    BYTE PTR [rax],al
   140016198:	push   0x1cc
   14001619d:	add    BYTE PTR [rax],al
   14001619f:	add    BYTE PTR [rsp+rcx*8+0x1],bl
   1400161a3:	add    BYTE PTR [rax],al
   1400161a5:	add    BYTE PTR [rax],al
   1400161a7:	add    BYTE PTR [rax-0x34],dl
   1400161aa:	add    DWORD PTR [rax],eax
   1400161ac:	add    BYTE PTR [rax],al
   1400161ae:	add    BYTE PTR [rax],al
   1400161b0:	rex.W int3 
   1400161b2:	add    DWORD PTR [rax],eax
   1400161b4:	add    BYTE PTR [rax],al
   1400161b6:	add    BYTE PTR [rax],al
   1400161b8:	ds int3 
   1400161ba:	add    DWORD PTR [rax],eax
   1400161bc:	add    BYTE PTR [rax],al
   1400161be:	add    BYTE PTR [rax],al
   1400161c0:	ss int3 
   1400161c2:	add    DWORD PTR [rax],eax
   1400161c4:	add    BYTE PTR [rax],al
   1400161c6:	add    BYTE PTR [rax],al
   1400161c8:	sub    ah,cl
   1400161ca:	add    DWORD PTR [rax],eax
   1400161cc:	add    BYTE PTR [rax],al
   1400161ce:	add    BYTE PTR [rax],al
   1400161d0:	sbb    ah,cl
   1400161d2:	add    DWORD PTR [rax],eax
   1400161d4:	add    BYTE PTR [rax],al
   1400161d6:	add    BYTE PTR [rax],al
   1400161d8:	or     cl,ah
   1400161da:	add    DWORD PTR [rax],eax
   1400161dc:	add    BYTE PTR [rax],al
   1400161de:	add    BYTE PTR [rax],al
   1400161e0:	clc    
   1400161e1:	retf   
   1400161e2:	add    DWORD PTR [rax],eax
   1400161e4:	add    BYTE PTR [rax],al
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	fmul   st(4),st
   1400161ea:	add    DWORD PTR [rax],eax
   1400161ec:	add    BYTE PTR [rax],al
   1400161ee:	add    BYTE PTR [rax],al
   1400161f0:	out    dx,al
   1400161f1:	retf   
   1400161f2:	add    DWORD PTR [rax],eax
	...
   140016200:	sub    ah,BYTE PTR [rax+0x1]
   140016206:	add    BYTE PTR [rax],al
   140016208:	movabs al,ds:0xa062000000000001
   140016212:	add    DWORD PTR [rax],eax
   140016214:	add    BYTE PTR [rax],al
   140016216:	add    BYTE PTR [rax],al
   140016218:	mov    BYTE PTR [rax+0x1],ah
   14001621e:	add    BYTE PTR [rax],al
   140016220:	movabs ds:0xc8000000000001a0,al
   140016229:	movabs al,ds:0xa0e8000000000001
   140016232:	add    DWORD PTR [rax],eax
   140016234:	add    BYTE PTR [rax],al
   140016236:	add    BYTE PTR [rax],al
   140016238:	or     al,0xa1
   14001623a:	add    DWORD PTR [rax],eax
   14001623c:	add    BYTE PTR [rax],al
   14001623e:	add    BYTE PTR [rax],al
   140016240:	cmp    ah,BYTE PTR [rcx+0x1]
   140016246:	add    BYTE PTR [rax],al
   140016248:	(bad)  
   14001624a:	add    DWORD PTR [rax],eax
   14001624c:	add    BYTE PTR [rax],al
   14001624e:	add    BYTE PTR [rax],al
   140016250:	nop
   140016251:	movabs eax,ds:0xa1c0000000000001
   14001625a:	add    DWORD PTR [rax],eax
   14001625c:	add    BYTE PTR [rax],al
   14001625e:	add    BYTE PTR [rax],al
   140016260:	loopne 0x140016203
   140016262:	add    DWORD PTR [rax],eax
   140016264:	add    BYTE PTR [rax],al
   140016266:	add    BYTE PTR [rax],al
   140016268:	and    BYTE PTR [rdx+0x1],ah
   14001626e:	add    BYTE PTR [rax],al
   140016270:	push   rdx
   140016271:	movabs ds:0xa26e000000000001,al
   14001627a:	add    DWORD PTR [rax],eax
   14001627c:	add    BYTE PTR [rax],al
   14001627e:	add    BYTE PTR [rax],al
   140016280:	mov    BYTE PTR [rdx+0x1],ah
   140016286:	add    BYTE PTR [rax],al
   140016288:	int3   
   140016289:	movabs ds:0xa2f4000000000001,al
   140016292:	add    DWORD PTR [rax],eax
   140016294:	add    BYTE PTR [rax],al
   140016296:	add    BYTE PTR [rax],al
   140016298:	adc    al,0xa3
   14001629a:	add    DWORD PTR [rax],eax
   14001629c:	add    BYTE PTR [rax],al
   14001629e:	add    BYTE PTR [rax],al
   1400162a0:	movabs ds:0xa374000000000001,rax
   1400162aa:	add    DWORD PTR [rax],eax
   1400162ac:	add    BYTE PTR [rax],al
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	pushf  
   1400162b1:	movabs ds:0xa3c4000000000001,eax
   1400162ba:	add    DWORD PTR [rax],eax
   1400162bc:	add    BYTE PTR [rax],al
   1400162be:	add    BYTE PTR [rax],al
   1400162c0:	call   0x140016468
   1400162c5:	add    BYTE PTR [rax],al
   1400162c7:	add    BYTE PTR [rsi],dl
   1400162c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400162ca:	add    DWORD PTR [rax],eax
   1400162cc:	add    BYTE PTR [rax],al
   1400162ce:	add    BYTE PTR [rax],al
   1400162d0:	xor    al,0xa4
   1400162d2:	add    DWORD PTR [rax],eax
   1400162d4:	add    BYTE PTR [rax],al
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	push   rax
   1400162d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400162da:	add    DWORD PTR [rax],eax
   1400162dc:	add    BYTE PTR [rax],al
   1400162de:	add    BYTE PTR [rax],al
   1400162e0:	outs   dx,BYTE PTR ds:[rsi]
   1400162e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400162e2:	add    DWORD PTR [rax],eax
   1400162e4:	add    BYTE PTR [rax],al
   1400162e6:	add    BYTE PTR [rax],al
   1400162e8:	nop
   1400162e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400162ea:	add    DWORD PTR [rax],eax
   1400162ec:	add    BYTE PTR [rax],al
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	mov    ah,0xa4
   1400162f2:	add    DWORD PTR [rax],eax
   1400162f4:	add    BYTE PTR [rax],al
   1400162f6:	add    BYTE PTR [rax],al
   1400162f8:	(bad)  
   1400162f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400162fa:	add    DWORD PTR [rax],eax
   1400162fc:	add    BYTE PTR [rax],al
   1400162fe:	add    BYTE PTR [rax],al
   140016300:	adc    ah,BYTE PTR [rbp+0x1]
   140016306:	add    BYTE PTR [rax],al
   140016308:	xor    al,0xa5
   14001630a:	add    DWORD PTR [rax],eax
   14001630c:	add    BYTE PTR [rax],al
   14001630e:	add    BYTE PTR [rax],al
   140016310:	jo     0x1400162b7
   140016312:	add    DWORD PTR [rax],eax
   140016314:	add    BYTE PTR [rax],al
   140016316:	add    BYTE PTR [rax],al
   140016318:	xchg   esi,eax
   140016319:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001631a:	add    DWORD PTR [rax],eax
   14001631c:	add    BYTE PTR [rax],al
   14001631e:	add    BYTE PTR [rax],al
   140016320:	int3   
   140016321:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016322:	add    DWORD PTR [rax],eax
   140016324:	add    BYTE PTR [rax],al
   140016326:	add    BYTE PTR [rax],al
   140016328:	hlt    
   140016329:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001632a:	add    DWORD PTR [rax],eax
   14001632c:	add    BYTE PTR [rax],al
   14001632e:	add    BYTE PTR [rax],al
   140016330:	cmp    al,0xa6
   140016332:	add    DWORD PTR [rax],eax
   140016334:	add    BYTE PTR [rax],al
   140016336:	add    BYTE PTR [rax],al
   140016338:	push   rsi
   140016339:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001633a:	add    DWORD PTR [rax],eax
   14001633c:	add    BYTE PTR [rax],al
   14001633e:	add    BYTE PTR [rax],al
   140016340:	mov    BYTE PTR [rsi+0x1],ah
   140016346:	add    BYTE PTR [rax],al
   140016348:	mov    ah,0xa6
   14001634a:	add    DWORD PTR [rax],eax
   14001634c:	add    BYTE PTR [rax],al
   14001634e:	add    BYTE PTR [rax],al
   140016350:	fsub   DWORD PTR [rsi+0x1]
   140016356:	add    BYTE PTR [rax],al
   140016358:	cli    
   140016359:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001635a:	add    DWORD PTR [rax],eax
   14001635c:	add    BYTE PTR [rax],al
   14001635e:	add    BYTE PTR [rax],al
   140016360:	and    al,0xa7
   140016362:	add    DWORD PTR [rax],eax
   140016364:	add    BYTE PTR [rax],al
   140016366:	add    BYTE PTR [rax],al
   140016368:	rex.RX cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001636a:	add    DWORD PTR [rax],eax
   14001636c:	add    BYTE PTR [rax],al
   14001636e:	add    BYTE PTR [rax],al
   140016370:	push   0x1a7
   140016375:	add    BYTE PTR [rax],al
   140016377:	add    BYTE PTR [rsi+0x1a7],al
   14001637d:	add    BYTE PTR [rax],al
   14001637f:	add    BYTE PTR [rdi+riz*4+0x1],ch
   140016386:	add    BYTE PTR [rax],al
   140016388:	shl    BYTE PTR [rdi+0x1],1
   14001638e:	add    BYTE PTR [rax],al
   140016390:	cli    
   140016391:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016392:	add    DWORD PTR [rax],eax
   140016394:	add    BYTE PTR [rax],al
   140016396:	add    BYTE PTR [rax],al
   140016398:	sbb    ch,BYTE PTR [rax+0x1]
   14001639e:	add    BYTE PTR [rax],al
   1400163a0:	cmp    BYTE PTR [rax+0x1],ch
   1400163a6:	add    BYTE PTR [rax],al
   1400163a8:	pop    rax
   1400163a9:	test   al,0x1
   1400163ab:	add    BYTE PTR [rax],al
   1400163ad:	add    BYTE PTR [rax],al
   1400163af:	add    BYTE PTR [rax+rbp*4+0x1],al
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400163b9:	test   al,0x1
   1400163bb:	add    BYTE PTR [rax],al
   1400163bd:	add    BYTE PTR [rax],al
   1400163bf:	add    dl,cl
   1400163c1:	test   al,0x1
   1400163c3:	add    BYTE PTR [rax],al
   1400163c5:	add    BYTE PTR [rax],al
   1400163c7:	add    al,ch
   1400163c9:	test   al,0x1
   1400163cb:	add    BYTE PTR [rax],al
   1400163cd:	add    BYTE PTR [rax],al
   1400163cf:	add    BYTE PTR [rsi],al
   1400163d1:	test   eax,0x1
   1400163d6:	add    BYTE PTR [rax],al
   1400163d8:	es test eax,0x1
   1400163de:	add    BYTE PTR [rax],al
   1400163e0:	rex.R test eax,0x1
   1400163e6:	add    BYTE PTR [rax],al
   1400163e8:	mov    BYTE PTR [rcx+0x1],ch
   1400163ee:	add    BYTE PTR [rax],al
   1400163f0:	movabs ds:0xba000000000001a9,al
   1400163f9:	test   eax,0x1
   1400163fe:	add    BYTE PTR [rax],al
   140016400:	repnz test eax,0x1
   140016406:	add    BYTE PTR [rax],al
   140016408:	(bad)  
   140016409:	stos   BYTE PTR es:[rdi],al
   14001640a:	add    DWORD PTR [rax],eax
   14001640c:	add    BYTE PTR [rax],al
   14001640e:	add    BYTE PTR [rax],al
   140016410:	cmp    BYTE PTR [rdx+0x1],ch
   140016416:	add    BYTE PTR [rax],al
   140016418:	pop    rsp
   140016419:	stos   BYTE PTR es:[rdi],al
   14001641a:	add    DWORD PTR [rax],eax
   14001641c:	add    BYTE PTR [rax],al
   14001641e:	add    BYTE PTR [rax],al
   140016420:	nop
   140016421:	stos   BYTE PTR es:[rdi],al
   140016422:	add    DWORD PTR [rax],eax
   140016424:	add    BYTE PTR [rax],al
   140016426:	add    BYTE PTR [rax],al
   140016428:	mov    dh,0xaa
   14001642a:	add    DWORD PTR [rax],eax
   14001642c:	add    BYTE PTR [rax],al
   14001642e:	add    BYTE PTR [rax],al
   140016430:	loopne 0x1400163dc
   140016432:	add    DWORD PTR [rax],eax
   140016434:	add    BYTE PTR [rax],al
   140016436:	add    BYTE PTR [rax],al
   140016438:	add    ch,BYTE PTR [rbx+0x1]
   14001643e:	add    BYTE PTR [rax],al
   140016440:	sub    ch,BYTE PTR [rbx+0x1]
   140016446:	add    BYTE PTR [rax],al
   140016448:	push   rax
   140016449:	stos   DWORD PTR es:[rdi],eax
   14001644a:	add    DWORD PTR [rax],eax
   14001644c:	add    BYTE PTR [rax],al
   14001644e:	add    BYTE PTR [rax],al
   140016450:	jbe    0x1400163fd
   140016452:	add    DWORD PTR [rax],eax
   140016454:	add    BYTE PTR [rax],al
   140016456:	add    BYTE PTR [rax],al
   140016458:	(bad)  
   140016459:	stos   DWORD PTR es:[rdi],eax
   14001645a:	add    DWORD PTR [rax],eax
   14001645c:	add    BYTE PTR [rax],al
   14001645e:	add    BYTE PTR [rax],al
   140016460:	mov    dh,0xab
   140016462:	add    DWORD PTR [rax],eax
   140016464:	add    BYTE PTR [rax],al
   140016466:	add    BYTE PTR [rax],al
   140016468:	shr    BYTE PTR [rbx+0x1],1
   14001646e:	add    BYTE PTR [rax],al
   140016470:	adc    al,0xac
   140016472:	add    DWORD PTR [rax],eax
   140016474:	add    BYTE PTR [rax],al
   140016476:	add    BYTE PTR [rax],al
   140016478:	rex.RX lods al,BYTE PTR ds:[rsi]
   14001647a:	add    DWORD PTR [rax],eax
   14001647c:	add    BYTE PTR [rax],al
   14001647e:	add    BYTE PTR [rax],al
   140016480:	(bad)  
   140016481:	lods   al,BYTE PTR ds:[rsi]
   140016482:	add    DWORD PTR [rax],eax
   140016484:	add    BYTE PTR [rax],al
   140016486:	add    BYTE PTR [rax],al
   140016488:	(bad)  
   140016489:	lods   al,BYTE PTR ds:[rsi]
   14001648a:	add    DWORD PTR [rax],eax
   14001648c:	add    BYTE PTR [rax],al
   14001648e:	add    BYTE PTR [rax],al
   140016490:	retf   0x1ac
   140016493:	add    BYTE PTR [rax],al
   140016495:	add    BYTE PTR [rax],al
   140016497:	add    dl,bh
   140016499:	lods   al,BYTE PTR ds:[rsi]
   14001649a:	add    DWORD PTR [rax],eax
   14001649c:	add    BYTE PTR [rax],al
   14001649e:	add    BYTE PTR [rax],al
   1400164a0:	and    BYTE PTR [rbp+0x1],ch
   1400164a6:	add    BYTE PTR [rax],al
   1400164a8:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   1400164aa:	add    DWORD PTR [rax],eax
   1400164ac:	add    BYTE PTR [rax],al
   1400164ae:	add    BYTE PTR [rax],al
   1400164b0:	jb     0x14001645f
   1400164b2:	add    DWORD PTR [rax],eax
   1400164b4:	add    BYTE PTR [rax],al
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	cli    
   1400164b9:	lahf   
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	add    BYTE PTR [rax],al
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	(bad)  
   1400164c1:	scas   al,BYTE PTR es:[rdi]
   1400164c2:	add    DWORD PTR [rax],eax
   1400164c4:	add    BYTE PTR [rax],al
   1400164c6:	add    BYTE PTR [rax],al
   1400164c8:	push   rax
   1400164c9:	scas   al,BYTE PTR es:[rdi]
   1400164ca:	add    DWORD PTR [rax],eax
   1400164cc:	add    BYTE PTR [rax],al
   1400164ce:	add    BYTE PTR [rax],al
   1400164d0:	jl     0x140016480
   1400164d2:	add    DWORD PTR [rax],eax
   1400164d4:	add    BYTE PTR [rax],al
   1400164d6:	add    BYTE PTR [rax],al
   1400164d8:	nop
   1400164d9:	scas   al,BYTE PTR es:[rdi]
   1400164da:	add    DWORD PTR [rax],eax
   1400164dc:	add    BYTE PTR [rax],al
   1400164de:	add    BYTE PTR [rax],al
   1400164e0:	mov    esi,0x1ae
   1400164e5:	add    BYTE PTR [rax],al
   1400164e7:	add    ah,bh
   1400164e9:	scas   al,BYTE PTR es:[rdi]
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	add    BYTE PTR [rax],al
   1400164ee:	add    BYTE PTR [rax],al
   1400164f0:	(bad)  
   1400164f1:	scas   eax,DWORD PTR es:[rdi]
   1400164f2:	add    DWORD PTR [rax],eax
   1400164f4:	add    BYTE PTR [rax],al
   1400164f6:	add    BYTE PTR [rax],al
   1400164f8:	scas   rax,QWORD PTR es:[rdi]
   1400164fa:	add    DWORD PTR [rax],eax
   1400164fc:	add    BYTE PTR [rax],al
   1400164fe:	add    BYTE PTR [rax],al
   140016500:	(bad)  
   140016501:	scas   eax,DWORD PTR es:[rdi]
   140016502:	add    DWORD PTR [rax],eax
   140016504:	add    BYTE PTR [rax],al
   140016506:	add    BYTE PTR [rax],al
   140016508:	stos   BYTE PTR es:[rdi],al
   140016509:	scas   eax,DWORD PTR es:[rdi]
   14001650a:	add    DWORD PTR [rax],eax
   14001650c:	add    BYTE PTR [rax],al
   14001650e:	add    BYTE PTR [rax],al
   140016510:	shr    BYTE PTR [rdi+0x1],cl
   140016516:	add    BYTE PTR [rax],al
   140016518:	add    BYTE PTR [rax+0x1],dh
   14001651e:	add    BYTE PTR [rax],al
   140016520:	sub    dh,BYTE PTR [rax+0x1]
   140016526:	add    BYTE PTR [rax],al
   140016528:	rex.WR mov al,0x1
   14001652b:	add    BYTE PTR [rax],al
   14001652d:	add    BYTE PTR [rax],al
   14001652f:	add    BYTE PTR [rax+rsi*4+0x1],ah
   140016533:	add    BYTE PTR [rax],al
   140016535:	add    BYTE PTR [rax],al
   140016537:	add    BYTE PTR [rax+rsi*4+0x1],bh
   14001653b:	add    BYTE PTR [rax],al
   14001653d:	add    BYTE PTR [rax],al
   14001653f:	add    dh,bl
   140016541:	lahf   
   140016542:	add    DWORD PTR [rax],eax
   140016544:	add    BYTE PTR [rax],al
   140016546:	add    BYTE PTR [rax],al
   140016548:	add    dh,BYTE PTR [rcx+0x1]
   14001654e:	add    BYTE PTR [rax],al
   140016550:	es mov cl,0x1
   140016553:	add    BYTE PTR [rax],al
   140016555:	add    BYTE PTR [rax],al
   140016557:	add    BYTE PTR [rdx],bh
   140016559:	mov    cl,0x1
   14001655b:	add    BYTE PTR [rax],al
   14001655d:	add    BYTE PTR [rax],al
   14001655f:	add    BYTE PTR [rsi-0x4f],ah
   140016562:	add    DWORD PTR [rax],eax
   140016564:	add    BYTE PTR [rax],al
   140016566:	add    BYTE PTR [rax],al
   140016568:	nop
   140016569:	mov    cl,0x1
   14001656b:	add    BYTE PTR [rax],al
   14001656d:	add    BYTE PTR [rax],al
   14001656f:	add    BYTE PTR [rax+0x1b1],bh
   140016575:	add    BYTE PTR [rax],al
   140016577:	add    dh,bl
   140016579:	mov    cl,0x1
   14001657b:	add    BYTE PTR [rax],al
   14001657d:	add    BYTE PTR [rax],al
   14001657f:	add    BYTE PTR [rax],bl
   140016581:	mov    dl,0x1
   140016583:	add    BYTE PTR [rax],al
   140016585:	add    BYTE PTR [rax],al
   140016587:	add    BYTE PTR [rdx-0x4e],al
   14001658a:	add    DWORD PTR [rax],eax
   14001658c:	add    BYTE PTR [rax],al
   14001658e:	add    BYTE PTR [rax],al
   140016590:	(bad)  
   140016592:	add    DWORD PTR [rax],eax
   140016594:	add    BYTE PTR [rax],al
   140016596:	add    BYTE PTR [rax],al
   140016598:	mov    esp,0x1b2
   14001659d:	add    BYTE PTR [rax],al
   14001659f:	add    ah,bh
   1400165a1:	mov    dl,0x1
   1400165a3:	add    BYTE PTR [rax],al
   1400165a5:	add    BYTE PTR [rax],al
   1400165a7:	add    BYTE PTR [rbx+rsi*4],bh
   1400165aa:	add    DWORD PTR [rax],eax
   1400165ac:	add    BYTE PTR [rax],al
   1400165ae:	add    BYTE PTR [rax],al
   1400165b0:	pop    rsi
   1400165b1:	mov    bl,0x1
   1400165b3:	add    BYTE PTR [rax],al
   1400165b5:	add    BYTE PTR [rax],al
   1400165b7:	add    BYTE PTR [rdx+0x1b3],al
   1400165bd:	add    BYTE PTR [rax],al
   1400165bf:	add    BYTE PTR [rsi+0x1b3],ch
   1400165c5:	add    BYTE PTR [rax],al
   1400165c7:	add    dl,bl
   1400165c9:	mov    bl,0x1
   1400165cb:	add    BYTE PTR [rax],al
   1400165cd:	add    BYTE PTR [rax],al
   1400165cf:	add    BYTE PTR [rsi],cl
   1400165d1:	mov    ah,0x1
   1400165d3:	add    BYTE PTR [rax],al
   1400165d5:	add    BYTE PTR [rax],al
   1400165d7:	add    BYTE PTR [rsp+rsi*4+0x1],al
   1400165db:	add    BYTE PTR [rax],al
   1400165dd:	add    BYTE PTR [rax],al
   1400165df:	add    BYTE PTR [rsp+rsi*4+0x1],dh
   1400165e3:	add    BYTE PTR [rax],al
   1400165e5:	add    BYTE PTR [rax],al
   1400165e7:	add    BYTE PTR [rax+0x1b4],bl
   1400165ed:	add    BYTE PTR [rax],al
   1400165ef:	add    BYTE PTR [rsi+0x1b4],bh
   1400165f5:	add    BYTE PTR [rax],al
   1400165f7:	add    ah,ch
   1400165f9:	mov    ah,0x1
   1400165fb:	add    BYTE PTR [rax],al
   1400165fd:	add    BYTE PTR [rax],al
   1400165ff:	add    BYTE PTR [rsi*4+0x1],cl
   140016606:	add    BYTE PTR [rax],al
   140016608:	xor    al,0xb5
   14001660a:	add    DWORD PTR [rax],eax
   14001660c:	add    BYTE PTR [rax],al
   14001660e:	add    BYTE PTR [rax],al
   140016610:	pop    rax
   140016611:	mov    ch,0x1
   140016613:	add    BYTE PTR [rax],al
   140016615:	add    BYTE PTR [rax],al
   140016617:	add    BYTE PTR [rbp+rsi*4+0x1],bh
   14001661b:	add    BYTE PTR [rax],al
   14001661d:	add    BYTE PTR [rax],al
   14001661f:	add    BYTE PTR [rdx+0x1b5],dh
   140016625:	add    BYTE PTR [rax],al
   140016627:	add    dl,bl
   140016629:	mov    ch,0x1
   14001662b:	add    BYTE PTR [rax],al
   14001662d:	add    BYTE PTR [rax],al
   14001662f:	add    dh,ch
   140016631:	mov    ch,0x1
   140016633:	add    BYTE PTR [rax],al
   140016635:	add    BYTE PTR [rax],al
   140016637:	add    BYTE PTR [rax],ah
   140016639:	mov    dh,0x1
   14001663b:	add    BYTE PTR [rax],al
   14001663d:	add    BYTE PTR [rax],al
   14001663f:	add    BYTE PTR [rax-0x4a],cl
   140016642:	add    DWORD PTR [rax],eax
   140016644:	add    BYTE PTR [rax],al
   140016646:	add    BYTE PTR [rax],al
   140016648:	jb     0x140016600
   14001664a:	add    DWORD PTR [rax],eax
   14001664c:	add    BYTE PTR [rax],al
   14001664e:	add    BYTE PTR [rax],al
   140016650:	xchg   edx,eax
   140016651:	mov    dh,0x1
   140016653:	add    BYTE PTR [rax],al
   140016655:	add    BYTE PTR [rax],al
   140016657:	add    dl,al
   140016659:	mov    dh,0x1
   14001665b:	add    BYTE PTR [rax],al
   14001665d:	add    BYTE PTR [rax],al
   14001665f:	add    al,ah
   140016661:	mov    dh,0x1
   140016663:	add    BYTE PTR [rax],al
   140016665:	add    BYTE PTR [rax],al
   140016667:	add    dh,bh
   140016669:	mov    dh,0x1
   14001666b:	add    BYTE PTR [rax],al
   14001666d:	add    BYTE PTR [rax],al
   14001666f:	add    BYTE PTR [rsi],bh
   140016671:	mov    bh,0x1
   140016673:	add    BYTE PTR [rax],al
   140016675:	add    BYTE PTR [rax],al
   140016677:	add    BYTE PTR [rsi-0x49],bl
   14001667a:	add    DWORD PTR [rax],eax
   14001667c:	add    BYTE PTR [rax],al
   14001667e:	add    BYTE PTR [rax],al
   140016680:	xor    BYTE PTR [rdi+0x1],0x0
   140016687:	add    BYTE PTR [rsi+0x1b7],dl
   14001668d:	add    BYTE PTR [rax],al
   14001668f:	add    BYTE PTR [rax+0x1b7],dh
   140016695:	add    BYTE PTR [rax],al
   140016697:	add    dh,dl
   140016699:	mov    bh,0x1
   14001669b:	add    BYTE PTR [rax],al
   14001669d:	add    BYTE PTR [rax],al
   14001669f:	add    BYTE PTR [rax+rdi*4],ch
   1400166a2:	add    DWORD PTR [rax],eax
   1400166a4:	add    BYTE PTR [rax],al
   1400166a6:	add    BYTE PTR [rax],al
   1400166a8:	rex.WR movabs rax,0xb870000000000001
   1400166b2:	add    DWORD PTR [rax],eax
   1400166b4:	add    BYTE PTR [rax],al
   1400166b6:	add    BYTE PTR [rax],al
   1400166b8:	xchg   edx,eax
   1400166b9:	mov    eax,0x1
   1400166be:	add    BYTE PTR [rax],al
   1400166c0:	mov    esp,0x1b8
   1400166c5:	add    BYTE PTR [rax],al
   1400166c7:	add    dh,bl
   1400166c9:	mov    eax,0x1
   1400166ce:	add    BYTE PTR [rax],al
   1400166d0:	add    bh,BYTE PTR [rcx+0x1]
   1400166d6:	add    BYTE PTR [rax],al
   1400166d8:	cs mov ecx,0x1
   1400166de:	add    BYTE PTR [rax],al
   1400166e0:	movabs rcx,0xb96a000000000001
   1400166ea:	add    DWORD PTR [rax],eax
   1400166ec:	add    BYTE PTR [rax],al
   1400166ee:	add    BYTE PTR [rax],al
   1400166f0:	mov    bh,BYTE PTR [rcx+0x1]
   1400166f6:	add    BYTE PTR [rax],al
   1400166f8:	movabs al,ds:0xc0000000000001b9
   140016701:	mov    ecx,0x1
   140016706:	add    BYTE PTR [rax],al
   140016708:	out    dx,al
   140016709:	mov    ecx,0x1
   14001670e:	add    BYTE PTR [rax],al
   140016710:	(bad)  
   140016711:	mov    edx,0x1
   140016716:	add    BYTE PTR [rax],al
   140016718:	cmp    al,0xba
   14001671a:	add    DWORD PTR [rax],eax
   14001671c:	add    BYTE PTR [rax],al
   14001671e:	add    BYTE PTR [rax],al
   140016720:	pop    rsi
   140016721:	mov    edx,0x1
   140016726:	add    BYTE PTR [rax],al
   140016728:	mov    WORD PTR [rdx+0x1],?
   14001672e:	add    BYTE PTR [rax],al
   140016730:	mov    dl,0xba
   140016732:	add    DWORD PTR [rax],eax
   140016734:	add    BYTE PTR [rax],al
   140016736:	add    BYTE PTR [rax],al
   140016738:	in     al,dx
   140016739:	mov    edx,0x1
   14001673e:	add    BYTE PTR [rax],al
   140016740:	cmp    BYTE PTR [rbx+0x1],bh
   140016746:	add    BYTE PTR [rax],al
   140016748:	outs   dx,BYTE PTR ds:[rsi]
   140016749:	mov    ebx,0x1
   14001674e:	add    BYTE PTR [rax],al
   140016750:	(bad)  
   140016751:	mov    esp,0x1
   140016756:	add    BYTE PTR [rax],al
   140016758:	fs mov esp,0x1
   14001675e:	add    BYTE PTR [rax],al
   140016760:	mov    WORD PTR [rcx+rax*1+0x0],?
   140016767:	add    BYTE PTR [rsi+0x1bc],dh
   14001676d:	add    BYTE PTR [rax],al
   14001676f:	add    al,bl
   140016771:	mov    esp,0x1
   140016776:	add    BYTE PTR [rax],al
   140016778:	hlt    
   140016779:	mov    esp,0x1
   14001677e:	add    BYTE PTR [rax],al
   140016780:	sub    bh,BYTE PTR [rbp+0x1]
   140016786:	add    BYTE PTR [rax],al
   140016788:	push   rsp
   140016789:	mov    ebp,0x1
   14001678e:	add    BYTE PTR [rax],al
   140016790:	mov    BYTE PTR [rbp+0x1],bh
   140016796:	add    BYTE PTR [rax],al
   140016798:	mov    al,0xbd
   14001679a:	add    DWORD PTR [rax],eax
   14001679c:	add    BYTE PTR [rax],al
   14001679e:	add    BYTE PTR [rax],al
   1400167a0:	int3   
   1400167a1:	mov    ebp,0x1
   1400167a6:	add    BYTE PTR [rax],al
   1400167a8:	idiv   BYTE PTR [rbp+0x1]
   1400167ae:	add    BYTE PTR [rax],al
   1400167b0:	pop    rax
   1400167b1:	mov    esi,0x1
   1400167b6:	add    BYTE PTR [rax],al
   1400167b8:	je     0x140016778
   1400167ba:	add    DWORD PTR [rax],eax
   1400167bc:	add    BYTE PTR [rax],al
   1400167be:	add    BYTE PTR [rax],al
   1400167c0:	test   al,0xbe
   1400167c2:	add    DWORD PTR [rax],eax
   1400167c4:	add    BYTE PTR [rax],al
   1400167c6:	add    BYTE PTR [rax],al
   1400167c8:	fdivr  DWORD PTR [rsi+0x1]
   1400167ce:	add    BYTE PTR [rax],al
   1400167d0:	add    BYTE PTR [rdi+0x1],bh
   1400167d6:	add    BYTE PTR [rax],al
   1400167d8:	cmp    al,0xbf
   1400167da:	add    DWORD PTR [rax],eax
   1400167dc:	add    BYTE PTR [rax],al
   1400167de:	add    BYTE PTR [rax],al
   1400167e0:	fs mov edi,0x1
   1400167e6:	add    BYTE PTR [rax],al
   1400167e8:	cwde   
   1400167e9:	mov    edi,0x1
   1400167ee:	add    BYTE PTR [rax],al
   1400167f0:	enter  0x1bf,0x0
   1400167f4:	add    BYTE PTR [rax],al
   1400167f6:	add    BYTE PTR [rax],al
   1400167f8:	clc    
   1400167f9:	mov    edi,0x1
   1400167fe:	add    BYTE PTR [rax],al
   140016800:	and    al,0xc0
   140016802:	add    DWORD PTR [rax],eax
   140016804:	add    BYTE PTR [rax],al
   140016806:	add    BYTE PTR [rax],al
   140016808:	pop    rax
   140016809:	rol    BYTE PTR [rcx],0x0
   14001680c:	add    BYTE PTR [rax],al
   14001680e:	add    BYTE PTR [rax],al
   140016810:	mov    es,eax
   140016812:	add    DWORD PTR [rax],eax
   140016814:	add    BYTE PTR [rax],al
   140016816:	add    BYTE PTR [rax],al
   140016818:	mov    dl,0xc0
   14001681a:	add    DWORD PTR [rax],eax
   14001681c:	add    BYTE PTR [rax],al
   14001681e:	add    BYTE PTR [rax],al
   140016820:	repnz rol BYTE PTR [rcx],0x0
   140016824:	add    BYTE PTR [rax],al
   140016826:	add    BYTE PTR [rax],al
   140016828:	or     al,0xc1
   14001682a:	add    DWORD PTR [rax],eax
   14001682c:	add    BYTE PTR [rax],al
   14001682e:	add    BYTE PTR [rax],al
   140016830:	rol    DWORD PTR es:[rcx],0x0
   140016834:	add    BYTE PTR [rax],al
   140016836:	add    BYTE PTR [rax],al
   140016838:	rex rol DWORD PTR [rcx],0x0
   14001683c:	add    BYTE PTR [rax],al
   14001683e:	add    BYTE PTR [rax],al
   140016840:	pop    rsp
   140016841:	rol    DWORD PTR [rcx],0x0
   140016844:	add    BYTE PTR [rax],al
   140016846:	add    BYTE PTR [rax],al
   140016848:	js     0x14001680b
   14001684a:	add    DWORD PTR [rax],eax
   14001684c:	add    BYTE PTR [rax],al
   14001684e:	add    BYTE PTR [rax],al
   140016850:	xchg   esi,eax
   140016851:	rol    DWORD PTR [rcx],0x0
   140016854:	add    BYTE PTR [rax],al
   140016856:	add    BYTE PTR [rax],al
   140016858:	mov    esp,0x1c1
   14001685d:	add    BYTE PTR [rax],al
   14001685f:	add    al,ah
   140016861:	rol    DWORD PTR [rcx],0x0
   140016864:	add    BYTE PTR [rax],al
   140016866:	add    BYTE PTR [rax],al
   140016868:	add    al,dl
   14001686a:	add    DWORD PTR [rax],eax
   14001686c:	add    BYTE PTR [rax],al
   14001686e:	add    BYTE PTR [rax],al
   140016870:	sub    al,0xc2
   140016872:	add    DWORD PTR [rax],eax
   140016874:	add    BYTE PTR [rax],al
   140016876:	add    BYTE PTR [rax],al
   140016878:	pop    rax
   140016879:	ret    0x1
   14001687c:	add    BYTE PTR [rax],al
   14001687e:	add    BYTE PTR [rax],al
   140016880:	jl     0x140016844
   140016882:	add    DWORD PTR [rax],eax
   140016884:	add    BYTE PTR [rax],al
   140016886:	add    BYTE PTR [rax],al
   140016888:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016889:	ret    0x1
   14001688c:	add    BYTE PTR [rax],al
   14001688e:	add    BYTE PTR [rax],al
   140016890:	int3   
   140016891:	ret    0x1
   140016894:	add    BYTE PTR [rax],al
   140016896:	add    BYTE PTR [rax],al
   140016898:	loop   0x14001685c
   14001689a:	add    DWORD PTR [rax],eax
   14001689c:	add    BYTE PTR [rax],al
   14001689e:	add    BYTE PTR [rax],al
   1400168a0:	(bad)  
   1400168a1:	ret    
   1400168a2:	add    DWORD PTR [rax],eax
   1400168a4:	add    BYTE PTR [rax],al
   1400168a6:	add    BYTE PTR [rax],al
   1400168a8:	ss ret 
   1400168aa:	add    DWORD PTR [rax],eax
   1400168ac:	add    BYTE PTR [rax],al
   1400168ae:	add    BYTE PTR [rax],al
   1400168b0:	pop    rsp
   1400168b1:	ret    
   1400168b2:	add    DWORD PTR [rax],eax
   1400168b4:	add    BYTE PTR [rax],al
   1400168b6:	add    BYTE PTR [rax],al
   1400168b8:	sahf   
   1400168b9:	ret    
   1400168ba:	add    DWORD PTR [rax],eax
   1400168bc:	add    BYTE PTR [rax],al
   1400168be:	add    BYTE PTR [rax],al
   1400168c0:	(bad)  
   1400168c1:	ret    
   1400168c2:	add    DWORD PTR [rax],eax
   1400168c4:	add    BYTE PTR [rax],al
   1400168c6:	add    BYTE PTR [rax],al
   1400168c8:	pop    rsi
   1400168c9:	(bad)
   1400168cd:	add    BYTE PTR [rax],al
   1400168cf:	add    BYTE PTR [rsi+0x19f],bl
   1400168d5:	add    BYTE PTR [rax],al
   1400168d7:	add    BYTE PTR [rsi-0x61],cl
   1400168da:	add    DWORD PTR [rax],eax
   1400168dc:	add    BYTE PTR [rax],al
   1400168de:	add    BYTE PTR [rax],al
   1400168e0:	and    bl,BYTE PTR [rdi+0x1]
   1400168e6:	add    BYTE PTR [rax],al
   1400168e8:	clc    
   1400168e9:	sahf   
   1400168ea:	add    DWORD PTR [rax],eax
   1400168ec:	add    BYTE PTR [rax],al
   1400168ee:	add    BYTE PTR [rax],al
   1400168f0:	(bad)  
   1400168f1:	sahf   
   1400168f2:	add    DWORD PTR [rax],eax
   1400168f4:	add    BYTE PTR [rax],al
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	rex.WR sahf 
   1400168fa:	add    DWORD PTR [rax],eax
   1400168fc:	add    BYTE PTR [rax],al
   1400168fe:	add    BYTE PTR [rax],al
   140016900:	add    BYTE PTR [rsi+0x1],bl
   140016906:	add    BYTE PTR [rax],al
   140016908:	fcomp  DWORD PTR [rbp+0x1]
   14001690e:	add    BYTE PTR [rax],al
   140016910:	cwde   
   140016911:	popf   
   140016912:	add    DWORD PTR [rax],eax
   140016914:	add    BYTE PTR [rax],al
   140016916:	add    BYTE PTR [rax],al
   140016918:	jbe    0x1400168b7
   14001691a:	add    DWORD PTR [rax],eax
   14001691c:	add    BYTE PTR [rax],al
   14001691e:	add    BYTE PTR [rax],al
   140016920:	push   rsi
   140016921:	popf   
   140016922:	add    DWORD PTR [rax],eax
   140016924:	add    BYTE PTR [rax],al
   140016926:	add    BYTE PTR [rax],al
   140016928:	xor    bl,BYTE PTR [rbp+0x1]
   14001692e:	add    BYTE PTR [rax],al
   140016930:	or     bl,BYTE PTR [rbp+0x1]
   140016936:	add    BYTE PTR [rax],al
   140016938:	hlt    
   140016939:	pushf  
   14001693a:	add    DWORD PTR [rax],eax
   14001693c:	add    BYTE PTR [rax],al
   14001693e:	add    BYTE PTR [rax],al
   140016940:	fcomp  DWORD PTR [rcx+rax*1+0x0]
   140016947:	add    BYTE PTR [rdx+0x19c],dh
   14001694d:	add    BYTE PTR [rax],al
   14001694f:	add    BYTE PTR [rsi+0x19c],cl
   140016955:	add    BYTE PTR [rax],al
   140016957:	add    BYTE PTR [rdx+0x1b0],ah
   14001695d:	add    BYTE PTR [rax],al
   14001695f:	add    dl,dl
   140016961:	lods   eax,DWORD PTR ds:[rsi]
   140016962:	add    DWORD PTR [rax],eax
	...
   140016970:	out    0x94,al
   140016972:	add    DWORD PTR [rax],eax
   140016974:	add    BYTE PTR [rax],al
   140016976:	add    BYTE PTR [rax],al
   140016978:	and    al,0x95
   14001697a:	add    DWORD PTR [rax],eax
   14001697c:	add    BYTE PTR [rax],al
   14001697e:	add    BYTE PTR [rax],al
   140016980:	(bad)  
   140016981:	xchg   ebp,eax
   140016982:	add    DWORD PTR [rax],eax
	...
   140016990:	mov    ah,0x9b
   140016992:	add    DWORD PTR [rax],eax
   140016994:	add    BYTE PTR [rax],al
   140016996:	add    BYTE PTR [rax],al
   140016998:	jp     0x140016935
   14001699a:	add    DWORD PTR [rax],eax
   14001699c:	add    BYTE PTR [rax],al
   14001699e:	add    BYTE PTR [rax],al
   1400169a0:	push   rax
   1400169a1:	fwait
   1400169a2:	add    DWORD PTR [rax],eax
   1400169a4:	add    BYTE PTR [rax],al
   1400169a6:	add    BYTE PTR [rax],al
   1400169a8:	ss fwait
   1400169aa:	add    DWORD PTR [rax],eax
   1400169ac:	add    BYTE PTR [rax],al
   1400169ae:	add    BYTE PTR [rax],al
   1400169b0:	clc    
   1400169b1:	(bad)  
   1400169b2:	add    DWORD PTR [rax],eax
   1400169b4:	add    BYTE PTR [rax],al
   1400169b6:	add    BYTE PTR [rax],al
   1400169b8:	mov    esi,0x19a
   1400169bd:	add    BYTE PTR [rax],al
   1400169bf:	add    BYTE PTR [rdx+rbx*4+0x1],bl
   1400169c6:	add    BYTE PTR [rax],al
   1400169c8:	jo     0x140016964
   1400169ca:	add    DWORD PTR [rax],eax
   1400169cc:	add    BYTE PTR [rax],al
   1400169ce:	add    BYTE PTR [rax],al
   1400169d0:	cmp    bl,BYTE PTR [rdx+0x1]
   1400169d6:	add    BYTE PTR [rax],al
   1400169d8:	hlt    
   1400169d9:	cdq    
   1400169da:	add    DWORD PTR [rax],eax
   1400169dc:	add    BYTE PTR [rax],al
   1400169de:	add    BYTE PTR [rax],al
   1400169e0:	mov    ah,0x99
   1400169e2:	add    DWORD PTR [rax],eax
   1400169e4:	add    BYTE PTR [rax],al
   1400169e6:	add    BYTE PTR [rax],al
   1400169e8:	(bad)  
   1400169e9:	cdq    
   1400169ea:	add    DWORD PTR [rax],eax
   1400169ec:	add    BYTE PTR [rax],al
   1400169ee:	add    BYTE PTR [rax],al
   1400169f0:	cmp    bl,BYTE PTR [rcx+0x1]
   1400169f6:	add    BYTE PTR [rax],al
   1400169f8:	adc    bl,BYTE PTR [rcx+0x1]
   1400169fe:	add    BYTE PTR [rax],al
   140016a00:	(bad)  
   140016a01:	cwde   
   140016a02:	add    DWORD PTR [rax],eax
   140016a04:	add    BYTE PTR [rax],al
   140016a06:	add    BYTE PTR [rax],al
   140016a08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016a09:	cwde   
   140016a0a:	add    DWORD PTR [rax],eax
   140016a0c:	add    BYTE PTR [rax],al
   140016a0e:	add    BYTE PTR [rax],al
   140016a10:	(bad)  
   140016a11:	cwde   
   140016a12:	add    DWORD PTR [rax],eax
   140016a14:	add    BYTE PTR [rax],al
   140016a16:	add    BYTE PTR [rax],al
   140016a18:	lock fwait
   140016a1a:	add    DWORD PTR [rax],eax
   140016a1c:	add    BYTE PTR [rax],al
   140016a1e:	add    BYTE PTR [rax],al
   140016a20:	xor    al,0x98
   140016a22:	add    DWORD PTR [rax],eax
   140016a24:	add    BYTE PTR [rax],al
   140016a26:	add    BYTE PTR [rax],al
   140016a28:	not    BYTE PTR [rdi+0x1]
   140016a2e:	add    BYTE PTR [rax],al
   140016a30:	enter  0x197,0x0
   140016a34:	add    BYTE PTR [rax],al
   140016a36:	add    BYTE PTR [rax],al
   140016a38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016a39:	xchg   edi,eax
   140016a3a:	add    DWORD PTR [rax],eax
   140016a3c:	add    BYTE PTR [rax],al
   140016a3e:	add    BYTE PTR [rax],al
   140016a40:	test   BYTE PTR [rdi+0x1],dl
   140016a46:	add    BYTE PTR [rax],al
   140016a48:	(bad)  
   140016a49:	xchg   edi,eax
   140016a4a:	add    DWORD PTR [rax],eax
   140016a4c:	add    BYTE PTR [rax],al
   140016a4e:	add    BYTE PTR [rax],al
   140016a50:	and    al,0x97
   140016a52:	add    DWORD PTR [rax],eax
   140016a54:	add    BYTE PTR [rax],al
   140016a56:	add    BYTE PTR [rax],al
   140016a58:	add    dl,BYTE PTR [rdi+0x1]
   140016a5e:	add    BYTE PTR [rax],al
   140016a60:	(bad)  
   140016a61:	xchg   esi,eax
   140016a62:	add    DWORD PTR [rax],eax
   140016a64:	add    BYTE PTR [rax],al
   140016a66:	add    BYTE PTR [rax],al
   140016a68:	sahf   
   140016a69:	xchg   esi,eax
   140016a6a:	add    DWORD PTR [rax],eax
   140016a6c:	add    BYTE PTR [rax],al
   140016a6e:	add    BYTE PTR [rax],al
   140016a70:	js     0x140016a08
   140016a72:	add    DWORD PTR [rax],eax
   140016a74:	add    BYTE PTR [rax],al
   140016a76:	add    BYTE PTR [rax],al
   140016a78:	xchg   rsi,rax
   140016a7a:	add    DWORD PTR [rax],eax
   140016a7c:	add    BYTE PTR [rax],al
   140016a7e:	add    BYTE PTR [rax],al
   140016a80:	hlt    
   140016a81:	xchg   ebp,eax
   140016a82:	add    DWORD PTR [rax],eax
   140016a84:	add    BYTE PTR [rax],al
   140016a86:	add    BYTE PTR [rax],al
   140016a88:	rcl    BYTE PTR [rbp+0x1],1
   140016a8e:	add    BYTE PTR [rax],al
   140016a90:	nop
   140016a91:	xchg   ebp,eax
   140016a92:	add    DWORD PTR [rax],eax
   140016a94:	add    BYTE PTR [rax],al
   140016a96:	add    BYTE PTR [rax],al
   140016a98:	jb     0x140016a2f
   140016a9a:	add    DWORD PTR [rax],eax
   140016a9c:	add    BYTE PTR [rax],al
   140016a9e:	add    BYTE PTR [rax],al
   140016aa0:	pop    rdx
   140016aa1:	xchg   ebp,eax
   140016aa2:	add    DWORD PTR [rax],eax
   140016aa4:	add    BYTE PTR [rax],al
   140016aa6:	add    BYTE PTR [rax],al
   140016aa8:	sub    bl,BYTE PTR [rcx+rax*1+0x0]
   140016aaf:	add    BYTE PTR [rsp+rbx*4+0x1],bl
   140016ab3:	add    BYTE PTR [rax],al
   140016ab5:	add    BYTE PTR [rax],al
   140016ab7:	add    BYTE PTR [rax-0x68],dl
   140016aba:	add    DWORD PTR [rax],eax
	...
   140016ac8:	movabs al,ds:0x194
	...
   140016add:	add    BYTE PTR [rax],al
   140016adf:	add    al,dl
   140016ae1:	push   rcx
   140016ae2:	add    DWORD PTR [rax+0x1],eax
   140016ae5:	add    BYTE PTR [rax],al
   140016ae7:	add    BYTE PTR [rax+0x1400159],dl
   140016aed:	add    BYTE PTR [rax],al
   140016aef:	add    al,al
   140016af1:	pop    rcx
   140016af2:	add    DWORD PTR [rax+0x1],eax
   140016af5:	add    BYTE PTR [rax],al
   140016af7:	add    al,dh
   140016af9:	pop    rcx
   140016afa:	add    DWORD PTR [rax+0x1],eax
   140016afd:	add    BYTE PTR [rax],al
   140016aff:	add    BYTE PTR [rax],ah
   140016b01:	pop    rdx
   140016b02:	add    DWORD PTR [rax+0x1],eax
   140016b05:	add    BYTE PTR [rax],al
   140016b07:	add    BYTE PTR [rax+0x5a],al
   140016b0a:	add    DWORD PTR [rax+0x1],eax
   140016b0d:	add    BYTE PTR [rax],al
   140016b0f:	add    BYTE PTR [rax+0x5a],ah
   140016b12:	add    DWORD PTR [rax+0x1],eax
	...
   140016b25:	add    BYTE PTR [rax],al
   140016b27:	add    BYTE PTR [rax+0x1400153],bh
   140016b2d:	add    BYTE PTR [rax],al
   140016b2f:	add    BYTE PTR [rbp+rdx*2+0x14001],bh
	...
   140016b3e:	add    BYTE PTR [rax],al
   140016b40:	(bad)
   140016b45:	ins    BYTE PTR es:[rdi],dx
   140016b46:	ins    BYTE PTR es:[rdi],dx
   140016b47:	outs   dx,DWORD PTR ds:[rsi]
   140016b48:	movsxd esp,DWORD PTR [rcx+0x74]
   140016b4b:	imul   ebp,DWORD PTR [rdi+0x6e],0x25220000
   140016b52:	xor    DWORD PTR [rdx],esp
   140016b54:	add    BYTE PTR [rax],al
   140016b56:	add    BYTE PTR [rax],al
   140016b58:	pop    rsp
   140016b59:	pop    rsp
   140016b5a:	add    BYTE PTR [rax],al
   140016b5c:	pop    rsp
   140016b5d:	and    al,BYTE PTR [rax]
   140016b5f:	add    BYTE PTR [rax+0x72],dh
   140016b62:	outs   dx,DWORD PTR ds:[rsi]
   140016b63:	je     0x140016bd4
   140016b65:	je     0x140016be0
   140016b67:	jo     0x140016bce
   140016b69:	add    BYTE PTR [rax],al
   140016b6b:	add    BYTE PTR [rax],al
   140016b6d:	add    BYTE PTR [rax],al
   140016b6f:	add    BYTE PTR [rcx+0x51],dl
   140016b72:	ins    DWORD PTR es:[rdi],dx
   140016b73:	ins    BYTE PTR es:[rdi],dx
   140016b74:	rex.RB (bad) 
   140016b76:	jae    0x140016be1
   140016b78:	outs   dx,BYTE PTR ds:[rsi]
   140016b79:	addr32 push rsi
   140016b7b:	(bad)  
   140016b7c:	ins    BYTE PTR es:[rdi],dx
   140016b7d:	jne    0x140016be4
   140016b7f:	push   rsp
   140016b80:	jns    0x140016bf2
   140016b82:	add    BYTE PTR gs:[rsi+0x61],ch
   140016b86:	ins    DWORD PTR es:[rdi],dx
   140016b87:	add    BYTE PTR gs:[rax],al
   140016b8a:	add    BYTE PTR [rax],al
   140016b8c:	add    BYTE PTR [rax],al
   140016b8e:	add    BYTE PTR [rax],al
   140016b90:	push   rcx
   140016b91:	rex.RB (bad) 
   140016b93:	jae    0x140016bfe
   140016b95:	outs   dx,BYTE PTR ds:[rsi]
   140016b96:	addr32 rex.XB jne 0x140016c0c
   140016b9a:	jbe    0x140016c01
   140016b9c:	add    BYTE PTR [rax],al
   140016b9e:	add    BYTE PTR [rax],al
   140016ba0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016ba2:	ins    DWORD PTR es:[rdi],dx
   140016ba3:	jo     0x140016c14
   140016ba5:	outs   dx,BYTE PTR ds:[rsi]
   140016ba6:	outs   dx,BYTE PTR gs:[rsi]
   140016ba8:	je     0x140016baa
   140016baa:	add    BYTE PTR [rax],al
   140016bac:	add    BYTE PTR [rax],al
   140016bae:	add    BYTE PTR [rax],al
   140016bb0:	and    al,BYTE PTR [rip+0x21993]        # 0x140038549
   140016bb6:	add    BYTE PTR [rax],al
   140016bb8:	lods   al,BYTE PTR ds:[rsi]
   140016bb9:	jl     0x140016bbc
   140016bbb:	add    BYTE PTR [rcx],al
   140016bbd:	add    BYTE PTR [rax],al
   140016bbf:	add    BYTE PTR [rbx+rdi*2+0x1],ch
   140016bc3:	add    BYTE PTR [rsi],al
   140016bc5:	add    BYTE PTR [rax],al
   140016bc7:	add    BYTE PTR [rbx+rdi*2+0x300001],dl
	...
   140016bd6:	add    BYTE PTR [rax],al
   140016bd8:	and    al,BYTE PTR [rip+0x21993]        # 0x140038571
   140016bde:	add    BYTE PTR [rax],al
   140016be0:	lods   al,BYTE PTR ds:[rsi]
   140016be1:	jl     0x140016be4
   140016be3:	add    BYTE PTR [rcx],al
   140016be5:	add    BYTE PTR [rax],al
   140016be7:	add    al,bh
   140016be9:	jnp    0x140016bec
   140016beb:	add    BYTE PTR [rsi],al
   140016bed:	add    BYTE PTR [rax],al
   140016bef:	add    BYTE PTR [rax],ah
   140016bf1:	jl     0x140016bf4
   140016bf3:	add    BYTE PTR [rax],dh
	...
   140016bfd:	add    BYTE PTR [rax],al
   140016bff:	add    BYTE PTR [rdx],ah
   140016c01:	add    eax,0x21993
   140016c06:	add    BYTE PTR [rax],al
   140016c08:	lods   al,BYTE PTR ds:[rsi]
   140016c09:	jl     0x140016c0c
   140016c0b:	add    BYTE PTR [rcx],al
   140016c0d:	add    BYTE PTR [rax],al
   140016c0f:	add    BYTE PTR [rsp+rdi*2+0x60001],al
   140016c16:	add    BYTE PTR [rax],al
   140016c18:	mov    esp,0x3000017c
	...
   140016c2d:	add    BYTE PTR [rax],al
   140016c2f:	add    BYTE PTR [rbp+0x73],dl
   140016c32:	(bad)  
   140016c33:	cmp    ah,BYTE PTR gs:[eax]
   140016c37:	and    eax,0x2d5b2031
   140016c3c:	jbe    0x140016c9b
   140016c3e:	and    BYTE PTR [rbx+0x2d],bl
   140016c41:	outs   dx,BYTE PTR ds:[rsi]
   140016c42:	outs   dx,DWORD PTR ds:[rsi]
   140016c43:	imul   ebp,DWORD PTR [rsi+0x73],0x746e6174
   140016c4a:	imul   esp,DWORD PTR [rcx+0x74],0x5b205d65
   140016c51:	sub    eax,0x61666564
   140016c56:	jne    0x140016cc4
   140016c58:	je     0x140016cca
   140016c5a:	ins    BYTE PTR es:[rdi],dx
   140016c5b:	(bad)  
   140016c5c:	je     0x140016cc4
   140016c5e:	outs   dx,DWORD PTR ds:[rsi]
   140016c5f:	jb     0x140016cce
   140016c61:	pop    rbp
   140016c62:	and    BYTE PTR [rbx+0x2d],bl
   140016c65:	pop    rbx
   140016c66:	outs   dx,BYTE PTR ds:[rsi]
   140016c67:	outs   dx,DWORD PTR ds:[rsi]
   140016c68:	outs   dx,BYTE PTR ds:[rsi]
   140016c69:	pop    rbp
   140016c6a:	jb     0x140016cd1
   140016c6c:	ins    BYTE PTR es:[rdi],dx
   140016c6d:	outs   dx,DWORD PTR ds:[rsi]
   140016c6e:	movsxd esp,DWORD PTR [rcx+0x74]
   140016c71:	(bad)  
   140016c72:	(bad)  
   140016c73:	ins    BYTE PTR es:[rdi],dx
   140016c74:	gs pop rbp
   140016c76:	and    BYTE PTR [rbx+0x2d],bl
   140016c79:	fs gs jo 0x140016ce2
   140016c7d:	outs   dx,BYTE PTR ds:[rsi]
   140016c7e:	fs outs dx,BYTE PTR gs:[rsi]
   140016c81:	movsxd ebp,DWORD PTR [rcx+0x65]
   140016c84:	jae    0x140016ca6
   140016c86:	cmp    al,0x64
   140016c88:	gs jo  0x140016cf0
   140016c8b:	outs   dx,BYTE PTR ds:[rsi]
   140016c8c:	fs outs dx,BYTE PTR gs:[rsi]
   140016c8f:	movsxd ebp,DWORD PTR [rcx+0x65]
   140016c92:	jae    0x140016cc2
   140016c94:	push   0x73
   140016c96:	outs   dx,DWORD PTR ds:[rsi]
   140016c97:	outs   dx,BYTE PTR ds:[rsi]
   140016c98:	ds pop rbp
   140016c9a:	and    BYTE PTR [rbx+0x2d],bl
   140016c9d:	ins    DWORD PTR es:[rdi],dx
   140016c9e:	gs jb  0x140016d08
   140016ca1:	and    BYTE PTR gs:[rsi+riz*2],bh
   140016ca5:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x6d2d6f74
   140016cad:	gs jb  0x140016d17
   140016cb0:	gs cs jno 0x140016d21
   140016cb4:	ins    BYTE PTR es:[rdi],dx
   140016cb5:	je     0x140016d30
   140016cb7:	jo     0x140016d1e
   140016cb9:	jae    0x140016cf9
   140016cbb:	pop    rbp
   140016cbc:	and    BYTE PTR [rbp+0x6f],ch
   140016cbf:	fs jne 0x140016d2e
   140016cc2:	gs cs jne 0x140016d38
   140016cc6:	imul   esp,DWORD PTR [rax],0x73726576
   140016ccc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6d5b20
   140016cd3:	fs jne 0x140016d42
   140016cd6:	gs (bad) 
   140016cd8:	imul   ebp,DWORD PTR [rbp+0x70],0x2f74726f
   140016cdf:	jo     0x140016d42
   140016ce1:	je     0x140016d4b
   140016ce3:	pop    rbp
   140016ce4:	or     ah,BYTE PTR [rax]
   140016ce6:	and    BYTE PTR [rax],ah
   140016ce8:	and    BYTE PTR [rax],ah
   140016cea:	and    BYTE PTR [rax],ah
   140016cec:	and    eax,0x2d5b2031
   140016cf1:	jbe    0x140016d50
   140016cf3:	and    BYTE PTR [rbx+0x2d],bl
   140016cf6:	outs   dx,BYTE PTR ds:[rsi]
   140016cf7:	outs   dx,DWORD PTR ds:[rsi]
   140016cf8:	imul   ebp,DWORD PTR [rsi+0x73],0x746e6174
   140016cff:	imul   esp,DWORD PTR [rcx+0x74],0x2d205d65
   140016d06:	jo     0x140016d69
   140016d08:	je     0x140016d72
   140016d0a:	and    BYTE PTR [rax+0x61],dh
   140016d0d:	je     0x140016d77
   140016d0f:	(bad)  
   140016d10:	je     0x140016d81
   140016d12:	(bad)  
   140016d13:	jno    0x140016d82
   140016d15:	ins    BYTE PTR es:[rdi],dx
   140016d16:	imul   esi,DWORD PTR fs:[rdx+0x2f],0x65726964
   140016d1e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140016d22:	jns    0x140016d44
   140016d24:	pop    rbx
   140016d25:	jbe    0x140016d8c
   140016d27:	jb     0x140016d9c
   140016d29:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a5d
   140016d30:	and    BYTE PTR [rax],ah
   140016d32:	and    BYTE PTR [rax],ah
   140016d34:	and    BYTE PTR [rip+0x2d5b2031],ah        # 0x16d5c8d6b
   140016d3a:	jbe    0x140016d99
   140016d3c:	and    BYTE PTR [rip+0x6c697562],ch        # 0x1ac6ae2a4
   140016d42:	je     0x140016dad
   140016d44:	outs   dx,BYTE PTR ds:[rsi]
   140016d45:	jae    0x140016d51
   140016d47:	rex.RB js 0x140016dab
   140016d4a:	ins    DWORD PTR es:[rdi],dx
   140016d4b:	jo     0x140016db9
   140016d4d:	cmp    ah,BYTE PTR gs:[rax]
   140016d50:	and    eax,0x74512031
   140016d55:	cs ins BYTE PTR es:[rdi],dx
   140016d57:	(bad)  
   140016d58:	(bad)
   140016d5d:	ins    BYTE PTR es:[rdi],dx
   140016d5e:	fs gs jb 0x140016dce
   140016d62:	imul   esi,DWORD PTR [rbx+0x74],0x65646f6d
   140016d69:	ins    BYTE PTR es:[rdi],dx
   140016d6a:	and    BYTE PTR [rdx],dh
   140016d6c:	xor    BYTE PTR cs:[rax],ah
   140016d6f:	(bad)  
   140016d70:	push   0x2f656d6f
   140016d75:	jne    0x140016dea
   140016d77:	gs jb  0x140016da9
   140016d7a:	fs gs jbe 0x140016dad
   140016d7e:	jno    0x140016df4
   140016d80:	sub    eax,0x74736e69
   140016d85:	(bad)  
   140016d86:	ins    BYTE PTR es:[rdi],dx
   140016d87:	ins    BYTE PTR es:[rdi],dx
   140016d88:	(bad)  
   140016d89:	imul   ebp,DWORD PTR [rbp+0x70],0x7374726f
	...
   140016d98:	and    eax,0x32252031
   140016d9d:	cs and eax,0x33
   140016da3:	add    BYTE PTR [rsi],ch
   140016da5:	(bad)  
   140016da6:	add    BYTE PTR [rax],al
   140016da8:	push   rcx
   140016da9:	push   rcx
   140016daa:	ins    DWORD PTR es:[rdi],dx
   140016dab:	ins    BYTE PTR es:[rdi],dx
   140016dac:	imul   r14,QWORD PTR [rbx+0x74],0x706f7250
   140016db4:	gs jb  0x140016e2b
   140016db7:	jns    0x140016df5
   140016db9:	add    BYTE PTR [rax],al
   140016dbb:	add    BYTE PTR [rax],al
   140016dbd:	add    BYTE PTR [rax],al
   140016dbf:	add    BYTE PTR [rcx+0x73],ch
   140016dc2:	push   rax
   140016dc3:	outs   dx,DWORD PTR ds:[rsi]
   140016dc4:	imul   ebp,DWORD PTR [rsi+0x74],0x7265
   140016dcb:	add    BYTE PTR [rax],al
   140016dcd:	add    BYTE PTR [rax],al
   140016dcf:	add    BYTE PTR [rcx+0x73],ch
   140016dd2:	push   rdx
   140016dd3:	gs (bad) 
   140016dd5:	outs   dx,DWORD PTR fs:[rsi]
   140016dd7:	outs   dx,BYTE PTR ds:[rsi]
   140016dd8:	ins    BYTE PTR es:[rdi],dx
   140016dd9:	jns    0x140016ddb
   140016ddb:	add    BYTE PTR [rcx+0x73],ch
   140016dde:	imul   r14,QWORD PTR [rbx+0x74],0x72740000
   140016de6:	jne    0x140016e4d
   140016de8:	add    BYTE PTR [rax],al
   140016dea:	add    BYTE PTR [rax],al
   140016dec:	je     0x140016e67
   140016dee:	jo     0x140016e55
	...
   140016df8:	push   rcx
   140016df9:	rex.WRXB (bad) 
   140016dfb:	push   0x65
   140016dfd:	movsxd esi,DWORD PTR [rax+rax*1+0x76]
   140016e01:	(bad)  
   140016e02:	ins    BYTE PTR es:[rdi],dx
   140016e03:	jne    0x140016e6a
   140016e05:	jae    0x140016e07
   140016e07:	add    BYTE PTR [rbp+0x6e],al
   140016e0a:	jne    0x140016e79
   140016e0c:	add    BYTE PTR [rax],al
   140016e0e:	add    BYTE PTR [rax],al
   140016e10:	and    eax,0x253a3a31
   140016e15:	xor    al,BYTE PTR [rax]
   140016e17:	add    BYTE PTR [rax],ah
   140016e19:	and    BYTE PTR [rax+0x72],dl
   140016e1c:	outs   dx,DWORD PTR ds:[rsi]
   140016e1d:	movsxd esp,DWORD PTR [rbp+0x73]
   140016e20:	jae    0x140016e8b
   140016e22:	outs   dx,BYTE PTR ds:[rsi]
   140016e23:	and    BYTE PTR [eax+0x72],dh
   140016e27:	outs   dx,DWORD PTR ds:[rsi]
   140016e28:	jo     0x140016e8f
   140016e2a:	jb     0x140016ea0
   140016e2c:	jns    0x140016e2e
   140016e2e:	add    BYTE PTR [rax],al
   140016e30:	push   rax
   140016e31:	jb     0x140016ea2
   140016e33:	movsxd esp,DWORD PTR [rbp+0x73]
   140016e36:	jae    0x140016ea1
   140016e38:	outs   dx,BYTE PTR ds:[rsi]
   140016e39:	and    BYTE PTR [edi+0x62],ch
   140016e3d:	push   0x65
   140016e3f:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140016e43:	add    BYTE PTR [rax],al
   140016e45:	add    BYTE PTR [rax],al
   140016e47:	add    BYTE PTR [rbp+0x72],ah
   140016e4a:	jb     0x140016ebb
   140016e4c:	jb     0x140016e7b
   140016e4e:	jne    0x140016ebe
   140016e50:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140016e54:	outs   dx,BYTE PTR ds:[rsi]
   140016e55:	sub    eax,0x656d616e
   140016e5a:	sub    eax,0x0
   140016e5f:	add    BYTE PTR [rsi+0x6f],al
   140016e62:	jne    0x140016ed2
   140016e64:	and    BYTE PTR fs:[rcx+0x20],ah
   140016e68:	push   rcx
   140016e69:	rex.WRB
   140016e6a:	gs je  0x140016ece
   140016e6d:	rex.WRXB (bad) 
   140016e6f:	push   0x65
   140016e71:	movsxd esi,DWORD PTR [rax+riz*1+0x77]
   140016e75:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x61207475
   140016e7d:	and    BYTE PTR [rbx+0x6c],ah
   140016e80:	(bad)  
   140016e81:	jae    0x140016ef6
   140016e83:	rex.WRX (bad) 
   140016e85:	ins    DWORD PTR es:[rdi],dx
   140016e86:	gs sub al,0x20
   140016e89:	outs   dx,BYTE PTR gs:[esi]
   140016e8c:	gs jb  0x140016ef0
   140016e8f:	je     0x140016efa
   140016e91:	outs   dx,BYTE PTR ds:[rsi]
   140016e92:	and    BYTE PTR [ecx+0x20],ah
   140016e96:	jb     0x140016ef9
   140016e98:	outs   dx,BYTE PTR ds:[rsi]
   140016e99:	outs   dx,DWORD PTR fs:[rsi]
   140016e9b:	ins    DWORD PTR es:[rdi],dx
   140016e9c:	and    BYTE PTR [rsi+0x61],ch
   140016e9f:	ins    DWORD PTR es:[rdi],dx
   140016ea0:	add    BYTE PTR gs:[rax],al
   140016ea3:	add    BYTE PTR [rax],al
   140016ea5:	add    BYTE PTR [rax],al
   140016ea7:	add    BYTE PTR [rdi+0x65],bl
   140016eaa:	js     0x140016f20
   140016eac:	outs   dx,BYTE PTR gs:[rsi]
   140016eae:	fs gs add BYTE PTR fs:[rax],al
   140016eb3:	add    BYTE PTR [rax],al
   140016eb5:	add    BYTE PTR [rax],al
   140016eb7:	add    BYTE PTR [rdx+0x65],dh
   140016eba:	jbe    0x140016f25
   140016ebc:	jae    0x140016f27
   140016ebe:	outs   dx,DWORD PTR ds:[rsi]
   140016ebf:	outs   dx,BYTE PTR ds:[rsi]
	...
   140016ec8:	push   rax
   140016ec9:	jb     0x140016f3a
   140016ecb:	jo     0x140016f32
   140016ecd:	jb     0x140016f43
   140016ecf:	jns    0x140016ed1
   140016ed1:	add    BYTE PTR [rax],al
   140016ed3:	add    BYTE PTR [rax],al
   140016ed5:	add    BYTE PTR [rax],al
   140016ed7:	add    BYTE PTR [rdx],bh
   140016ed9:	and    BYTE PTR [rbp+0x78],ah
   140016edc:	jo     0x140016f43
   140016ede:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140016ee2:	and    BYTE PTR [rcx+0x6e],ah
   140016ee5:	and    BYTE PTR [rcx+0x72],ah
   140016ee8:	jb     0x140016f4b
   140016eea:	jns    0x140016eec
   140016eec:	add    BYTE PTR [rax],al
   140016eee:	add    BYTE PTR [rax],al
   140016ef0:	push   rcx
   140016ef1:	je     0x140016f44
   140016ef3:	jne    0x140016f5e
   140016ef5:	movsxd ebp,DWORD PTR [rbx+0x20]
   140016ef8:	xor    ch,BYTE PTR [rsi]
   140016efa:	xor    BYTE PTR [rax],al
   140016efc:	add    BYTE PTR [rax],al
   140016efe:	add    BYTE PTR [rax],al
   140016f00:	(bad)  
   140016f01:	jo     0x140016f73
   140016f03:	outs   dx,BYTE PTR gs:[rsi]
   140016f05:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70656420
   140016f0d:	outs   dx,BYTE PTR gs:[rsi]
   140016f0f:	fs outs dx,BYTE PTR gs:[rsi]
   140016f12:	movsxd edi,DWORD PTR [rcx+0x20]
   140016f15:	add    BYTE PTR [rax],al
   140016f17:	add    BYTE PTR [rax],ah
   140016f19:	add    BYTE PTR [rax],al
   140016f1b:	add    BYTE PTR [rax],al
   140016f1d:	add    BYTE PTR [rax],al
   140016f1f:	add    BYTE PTR [rbx+0x6b],dh
   140016f22:	imul   esi,DWORD PTR [rax+0x70],0x20676e69
   140016f29:	jo     0x140016f9d
   140016f2b:	imul   esi,DWORD PTR [rsi+0x61],0x64206574
   140016f32:	gs jo  0x140016f9a
   140016f35:	outs   dx,BYTE PTR ds:[rsi]
   140016f36:	fs movsxd edi,DWORD PTR gs:[rcx+0x20]
   140016f3b:	add    BYTE PTR [rbp+0x6f],ch
   140016f3e:	fs jne 0x140016fad
   140016f41:	add    BYTE PTR gs:[rax],al
   140016f44:	add    BYTE PTR [rax],al
   140016f46:	add    BYTE PTR [rax],al
   140016f48:	push   rax
   140016f49:	jb     0x140016fb4
   140016f4b:	jbe    0x140016fae
   140016f4d:	je     0x140016fb4
   140016f4f:	add    BYTE PTR [rsi+0x65],dh
   140016f52:	jb     0x140016fc7
   140016f54:	imul   ebp,DWORD PTR [rdi+0x6e],0x74612000
   140016f5b:	and    BYTE PTR [rax],al
   140016f5d:	add    BYTE PTR [rax],al
   140016f5f:	add    BYTE PTR [rdx],bh
   140016f61:	add    BYTE PTR [rax],al
   140016f63:	add    BYTE PTR [rax],al
   140016f65:	add    BYTE PTR [rax],al
   140016f67:	add    BYTE PTR [rbp+0x72],al
   140016f6a:	jb     0x140016fdb
   140016f6c:	jb     0x140016f8e
   140016f6e:	jo     0x140016fd1
   140016f70:	jb     0x140016fe5
   140016f72:	imul   ebp,DWORD PTR [rsi+0x67],0x70656420
   140016f79:	outs   dx,BYTE PTR gs:[rsi]
   140016f7b:	fs outs dx,BYTE PTR gs:[rsi]
   140016f7e:	movsxd ebp,DWORD PTR [rcx+0x65]
   140016f81:	jae    0x140016fa3
   140016f83:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x0
   140016f8a:	add    BYTE PTR [rax],al
   140016f8c:	add    BYTE PTR [rax],al
   140016f8e:	add    BYTE PTR [rax],al
   140016f90:	and    BYTE PTR [rbx+0x6b],dh
   140016f93:	imul   esi,DWORD PTR [rax+0x70],0x676e69
   140016f9a:	add    BYTE PTR [rax],al
   140016f9c:	add    BYTE PTR [rax],al
   140016f9e:	add    BYTE PTR [rax],al
   140016fa0:	jo     0x140017003
   140016fa2:	jb     0x140017017
   140016fa4:	imul   ebp,DWORD PTR [rsi+0x67],0x20
   140016fab:	add    BYTE PTR [rax+riz*1],ch
   140016fae:	add    BYTE PTR [rax],al
   140016fb0:	outs   dx,BYTE PTR ds:[rsi]
   140016fb1:	outs   dx,DWORD PTR ds:[rsi]
   140016fb2:	outs   dx,BYTE PTR ds:[rsi]
   140016fb3:	and    BYTE PTR [rbp+0x78],ah
   140016fb6:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
   140016fbd:	fs gs jo 0x140017026
   140016fc1:	outs   dx,BYTE PTR ds:[rsi]
   140016fc2:	fs outs dx,BYTE PTR gs:[rsi]
   140016fc5:	movsxd ebp,DWORD PTR [rcx+0x65]
   140016fc8:	jae    0x140016fea
   140016fca:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x5100
   140016fd1:	je     0x140017001
   140016fd3:	je     0x14001703a
   140016fd5:	jae    0x14001704b
   140016fd7:	cs jno 0x14001704e
   140016fda:	gs jae 0x140017051
   140016fdd:	jb     0x14001704e
   140016fdf:	outs   dx,DWORD PTR ds:[rsi]
   140016fe0:	je     0x140016fe2
   140016fe2:	add    BYTE PTR [rax],al
   140016fe4:	add    BYTE PTR [rax],al
   140016fe6:	add    BYTE PTR [rax],al
   140016fe8:	data16 (bad) 
   140016fea:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140016ff2:	jo     0x140017066
   140016ff4:	outs   dx,DWORD PTR ds:[rsi]
   140016ff5:	movsxd esp,DWORD PTR gs:[rbp+0x73]
   140016ff9:	jae    0x14001701b
   140016ffb:	outs   dx,DWORD PTR ds:[rsi]
   140016ffc:	jne    0x140017072
   140016ffe:	jo     0x140017075
   140017000:	je     0x140017022
   140017002:	outs   dx,DWORD PTR ds:[rsi]
   140017003:	data16 and BYTE PTR [rcx+0x6d],dh
   140017007:	ins    BYTE PTR es:[rdi],dx
   140017008:	imul   ebp,DWORD PTR [rbp+0x70],0x7374726f
   14001700f:	movsxd esp,DWORD PTR [rcx+0x6e]
   140017012:	outs   dx,BYTE PTR ds:[rsi]
   140017013:	gs jb  0x140017016
   140017016:	add    BYTE PTR [rax],al
   140017018:	cmp    al,0x6f
   14001701a:	jne    0x140017090
   14001701c:	jo     0x140017093
   14001701e:	je     0x14001706f
   140017020:	push   cx
   140017022:	ins    DWORD PTR es:[rdi],dx
   140017023:	ins    BYTE PTR es:[rdi],dx
   140017024:	imul   ebp,DWORD PTR [rbp+0x70],0x7374726f
   14001702b:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001702e:	outs   dx,BYTE PTR ds:[rsi]
   14001702f:	gs jb  0x140017070
   140017032:	add    BYTE PTR [rax],al
   140017034:	add    BYTE PTR [rax],al
   140017036:	add    BYTE PTR [rax],al
   140017038:	data16 (bad) 
   14001703a:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   140017042:	and    BYTE PTR [rbx+0x74],dh
   140017045:	(bad)  
   140017046:	jb     0x1400170bc
   140017048:	and    BYTE PTR [rax],al
   14001704a:	add    BYTE PTR [rax],al
   14001704c:	add    BYTE PTR [rax],al
   14001704e:	add    BYTE PTR [rax],al
   140017050:	or     dl,BYTE PTR [rcx+0x74]
   140017053:	rex.WRXB (bad) 
   140017055:	push   0x65
   140017057:	movsxd esi,DWORD PTR [rbx+rdi*2+0x7d]
   14001705b:	or     al,BYTE PTR [rax]
   14001705d:	add    BYTE PTR [rax],al
   14001705f:	add    BYTE PTR [rcx+0x6d],ch
   140017062:	jo     0x1400170d3
   140017064:	jb     0x1400170da
   140017066:	and    BYTE PTR [rax],al
   140017068:	sub    eax,0x6f706d69
   14001706d:	jb     0x1400170e3
   14001706f:	push   rax
   140017070:	(bad)  
   140017071:	je     0x1400170db
   140017073:	add    BYTE PTR [rax],al
   140017075:	add    BYTE PTR [rax],al
   140017077:	add    BYTE PTR [rip+0x466c6d71],ch        # 0x1866dddee
   14001707d:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x2d000000
   140017085:	add    BYTE PTR [rax],al
   140017087:	add    BYTE PTR [rcx+0x6d],dh
   14001708a:	ins    BYTE PTR es:[rdi],dx
   14001708b:	imul   ebp,DWORD PTR [rbp+0x70],0x7374726f
   140017092:	movsxd esp,DWORD PTR [rcx+0x6e]
   140017095:	outs   dx,BYTE PTR ds:[rsi]
   140017096:	gs jb  0x140017099
   140017099:	add    BYTE PTR [rax],al
   14001709b:	add    BYTE PTR [rax],al
   14001709d:	add    BYTE PTR [rax],al
   14001709f:	add    BYTE PTR [rax],ah
   1400170a1:	ja     0x14001710b
   1400170a3:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
   1400170aa:	jne    0x14001711a
   1400170ac:	jae    0x140017123
   1400170ae:	jo     0x140017120
   1400170b0:	outs   dx,DWORD PTR ds:[rsi]
   1400170b1:	jb     0x140017127
   1400170b3:	gs fs sub al,0x20
   1400170b7:	imul   esi,DWORD PTR fs:[rbx+0x63],0x69647261
   1400170bf:	outs   dx,BYTE PTR ds:[rsi]
   1400170c0:	and    BYTE PTR [ebx+0x6d],dh
   1400170c4:	(bad)  
   1400170c5:	ins    BYTE PTR es:[rdi],dx
   1400170c6:	ins    BYTE PTR es:[rdi],dx
   1400170c7:	gs jb  0x1400170ea
   1400170ca:	jbe    0x140017131
   1400170cc:	jb     0x140017141
   1400170ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x20000000
   1400170d5:	(bad)  
   1400170d6:	outs   dx,BYTE PTR ds:[rsi]
   1400170d7:	and    BYTE PTR fs:[rax],al
   1400170da:	add    BYTE PTR [rax],al
   1400170dc:	add    BYTE PTR [rax],al
   1400170de:	add    BYTE PTR [rax],al
   1400170e0:	and    BYTE PTR [rdi+0x69],dh
   1400170e3:	je     0x14001714d
   1400170e5:	and    BYTE PTR [rdi+rsi*2+0x6f],dh
   1400170e9:	and    BYTE PTR [rbp+0x61],ch
   1400170ec:	push   0x6f
   1400170ee:	jb     0x140017110
   1400170f0:	jbe    0x140017157
   1400170f2:	jb     0x140017167
   1400170f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a73
   1400170fb:	add    BYTE PTR [rax],al
   1400170fd:	add    BYTE PTR [rax],al
   1400170ff:	add    BYTE PTR [rsi+0x6f],al
   140017102:	jne    0x140017172
   140017104:	and    BYTE PTR fs:[rcx+0x20],ah
   140017108:	fs gs jo 0x140017171
   14001710c:	outs   dx,BYTE PTR ds:[rsi]
   14001710d:	fs outs dx,BYTE PTR gs:[rsi]
   140017110:	movsxd edi,DWORD PTR [rcx+0x20]
   140017113:	outs   dx,DWORD PTR ds:[rsi]
   140017114:	outs   dx,BYTE PTR ds:[rsi]
   140017115:	and    BYTE PTR [rax],al
   140017117:	add    BYTE PTR [rax+0x61],dl
   14001711a:	jb     0x14001717d
   14001711c:	ins    DWORD PTR es:[rdi],dx
   14001711d:	gs je  0x140017185
   140017120:	jb     0x140017122
   140017122:	add    BYTE PTR [rax],al
   140017124:	rex.WRB
   140017125:	gs je  0x140017190
   140017128:	outs   dx,DWORD PTR ds:[rsi]
   140017129:	add    BYTE PTR fs:[rax],al
   14001712c:	push   rbx
   14001712d:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
   140017134:	jbe    0x1400171a5
   140017136:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6e690000
   14001713e:	je     0x140017140
   140017140:	fs gs ins BYTE PTR es:[rdi],dx
   140017143:	(bad)  
   140017144:	jns    0x140017146
   140017146:	add    BYTE PTR [rax],al
   140017148:	fs gs jae 0x1400171c0
   14001714c:	jb     0x1400171bd
   14001714e:	jns    0x140017150
   140017150:	je     0x1400171c1
   140017152:	push   rbx
   140017153:	je     0x1400171c7
   140017155:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001715c:	add    BYTE PTR [rax],al
   14001715e:	add    BYTE PTR [rax],al
   140017160:	fs gs ins BYTE PTR es:[rdi],dx
   140017163:	gs je  0x1400171cb
   140017166:	rex.WR (bad) 
   140017168:	je     0x1400171cf
   14001716a:	jb     0x140017194
   14001716c:	sub    DWORD PTR [rax],eax
   14001716e:	add    BYTE PTR [rax],al
   140017170:	fs gs jae 0x1400171e8
   140017174:	jb     0x1400171e5
   140017176:	jns    0x1400171dd
   140017178:	sub    BYTE PTR fs:[rcx],ch
   14001717b:	add    BYTE PTR [rax],al
   14001717d:	add    BYTE PTR [rax],al
   14001717f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140017183:	je     0x1400171f7
   140017185:	outs   dx,DWORD PTR ds:[rsi]
   140017186:	jns    0x1400171ed
   140017188:	sub    BYTE PTR fs:[rcx+0x4f],dl
   14001718c:	(bad)  
   14001718d:	push   0x65
   14001718f:	movsxd esi,DWORD PTR [rdx+rbp*1+0x29]
   140017193:	add    BYTE PTR [rax],al
   140017195:	add    BYTE PTR [rax],al
   140017197:	add    BYTE PTR [rip+0x61684331],ah        # 0x1a169b4ce
   14001719d:	outs   dx,BYTE PTR ds:[rsi]
   14001719e:	gs add BYTE PTR fs:[eax],al
   1400171a3:	add    BYTE PTR [rax],al
   1400171a5:	add    BYTE PTR [rax],al
   1400171a7:	add    BYTE PTR [rbx+0x68],al
   1400171aa:	(bad)  
   1400171ab:	outs   dx,BYTE PTR ds:[rsi]
   1400171ac:	gs add BYTE PTR fs:[ebp+eiz*2+0x66],ah
   1400171b3:	(bad)  
   1400171b4:	jne    0x140017222
   1400171b6:	je     0x140017208
   1400171b8:	jb     0x140017229
   1400171ba:	jo     0x140017221
   1400171bc:	jb     0x140017232
   1400171be:	jns    0x1400171c0
   1400171c0:	rex.R
   1400171c1:	gs data16 (bad) 
   1400171c4:	jne    0x140017232
   1400171c6:	je     0x140017218
   1400171c8:	jb     0x140017239
   1400171ca:	jo     0x140017231
   1400171cc:	jb     0x140017242
   1400171ce:	jns    0x1400171d0
   1400171d0:	imul   esi,DWORD PTR [rbx+0x53],0x6c676e69
   1400171d7:	gs je  0x140017249
   1400171da:	outs   dx,BYTE PTR ds:[rsi]
   1400171db:	add    BYTE PTR [rax],al
   1400171dd:	add    BYTE PTR [rax],al
   1400171df:	add    BYTE PTR [rcx+0x73],ch
   1400171e2:	rex.XB jb 0x14001724a
   1400171e5:	(bad)  
   1400171e6:	je     0x140017249
   1400171e8:	(bad)  
   1400171e9:	ins    BYTE PTR es:[rdi],dx
   1400171ea:	add    BYTE PTR gs:[rax],al
   1400171ed:	add    BYTE PTR [rax],al
   1400171ef:	add    BYTE PTR [rcx+0x73],ch
   1400171f2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400171f4:	ins    DWORD PTR es:[rdi],dx
   1400171f5:	jo     0x140017266
   1400171f7:	jae    0x140017262
   1400171f9:	je     0x140017260
   1400171fb:	add    BYTE PTR [rax],al
   1400171fd:	add    BYTE PTR [rax],al
   1400171ff:	add    BYTE PTR [rbp+0x78],ah
   140017202:	jo     0x140017273
   140017204:	jb     0x14001727a
   140017206:	rex.WRB
   140017207:	gs je  0x14001726b
   14001720a:	rex.WRXB (bad) 
   14001720c:	push   0x65
   14001720e:	movsxd esi,DWORD PTR [rdx+rdx*2+0x65]
   140017212:	jbe    0x14001727d
   140017214:	jae    0x14001727f
   140017216:	outs   dx,DWORD PTR ds:[rsi]
   140017217:	outs   dx,BYTE PTR ds:[rsi]
   140017218:	jae    0x14001721a
   14001721a:	add    BYTE PTR [rax],al
   14001721c:	add    BYTE PTR [rax],al
   14001721e:	add    BYTE PTR [rax],al
   140017220:	gs js  0x140017293
   140017223:	outs   dx,DWORD PTR ds:[rsi]
   140017224:	jb     0x14001729a
   140017226:	jae    0x140017228
   140017228:	push   rdi
   140017229:	push   r10
   14001722b:	rex.WRX
   14001722c:	rex.WB
   14001722d:	rex.WRX
   14001722e:	rex.RXB cmp r12b,BYTE PTR [r8]
   140017231:	jae    0x14001729e
   140017233:	imul   esi,DWORD PTR [rax+0x70],0x20676e69
   14001723a:	ins    DWORD PTR es:[rdi],dx
   14001723b:	outs   dx,DWORD PTR ds:[rsi]
   14001723c:	fs jne 0x1400172ab
   14001723f:	and    BYTE PTR gs:[rax],al
   140017242:	add    BYTE PTR [rax],al
   140017244:	add    BYTE PTR [rax],al
   140017246:	add    BYTE PTR [rax],al
   140017248:	(bad)  
   140017249:	je     0x1400172bf
   14001724b:	(bad)  
   14001724c:	movsxd ebp,DWORD PTR [rax+0x65]
   14001724f:	fs push rsp
   140017251:	jns    0x1400172c3
   140017253:	add    BYTE PTR gs:[rax],al
   140017256:	add    BYTE PTR [rax],al
   140017258:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001725a:	jne    0x1400172c8
   14001725c:	and    BYTE PTR fs:[rsi+0x6f],ch
   140017260:	je     0x140017282
   140017262:	movsxd esi,DWORD PTR [rdx+0x65]
   140017265:	(bad)  
   140017266:	je     0x1400172cd
   140017268:	add    BYTE PTR [rax],al
   14001726a:	add    BYTE PTR [rax],al
   14001726c:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14001726e:	je     0x140017290
	...
   140017278:	push   rsp
   140017279:	jb     0x1400172f4
   14001727b:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140017282:	movsxd esi,DWORD PTR [rdx+0x65]
   140017285:	(bad)  
   140017286:	je     0x1400172ed
   140017288:	and    BYTE PTR [rdi+0x62],ch
   14001728b:	push   0x65
   14001728d:	movsxd esi,DWORD PTR [rax+riz*1+0x0]
   140017291:	add    BYTE PTR [rax],al
   140017293:	add    BYTE PTR [rax],ah
   140017295:	sub    BYTE PTR [rax],al
   140017297:	add    BYTE PTR [rdx+rsi*2+0x79],dl
   14001729b:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   1400172a2:	addr32 gs je 0x1400172c6
   1400172a6:	jae    0x140017311
   1400172a8:	outs   dx,BYTE PTR ds:[rsi]
   1400172a9:	ins    BYTE PTR es:[edi],dx
   1400172ab:	gs je  0x14001731d
   1400172ae:	outs   dx,BYTE PTR ds:[rsi]
   1400172af:	and    BYTE PTR [rsi+0x6f],ah
   1400172b2:	jb     0x1400172d4
   1400172b4:	add    BYTE PTR [rax],al
   1400172b6:	add    BYTE PTR [rax],al
   1400172b8:	and    BYTE PTR [rcx+0x73],ch
   1400172bb:	and    BYTE PTR [rbx+0x69],dh
   1400172be:	outs   dx,BYTE PTR ds:[rsi]
   1400172bf:	ins    BYTE PTR es:[edi],dx
   1400172c1:	gs je  0x140017333
   1400172c4:	outs   dx,BYTE PTR ds:[rsi]
   1400172c5:	sub    al,0x20
   1400172c7:	(bad)  
   1400172c8:	jne    0x14001733e
   1400172ca:	and    BYTE PTR [rax+0x61],ch
   1400172cd:	jae    0x1400172ef
   1400172cf:	outs   dx,BYTE PTR ds:[rsi]
   1400172d0:	outs   dx,DWORD PTR ds:[rsi]
   1400172d1:	and    BYTE PTR [rbx+0x69],dh
   1400172d4:	outs   dx,BYTE PTR ds:[rsi]
   1400172d5:	ins    BYTE PTR es:[edi],dx
   1400172d7:	gs je  0x140017349
   1400172da:	outs   dx,BYTE PTR ds:[rsi]
   1400172db:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400172dd:	jae    0x140017353
   1400172df:	(bad)  
   1400172e0:	outs   dx,BYTE PTR ds:[rsi]
   1400172e1:	movsxd esp,DWORD PTR [rbp+0x49]
   1400172e4:	outs   dx,BYTE PTR ds:[rsi]
   1400172e5:	outs   dx,WORD PTR ds:[rsi]
   1400172e7:	add    BYTE PTR [rcx],ch
   1400172e9:	add    BYTE PTR [rax],al
   1400172eb:	add    BYTE PTR [rax],ch
   1400172ed:	add    BYTE PTR [rax],al
   1400172ef:	add    BYTE PTR [rcx+0x6e],cl
   1400172f2:	je     0x140017359
   1400172f4:	jb     0x140017364
   1400172f6:	(bad)  
   1400172f7:	ins    BYTE PTR es:[rdi],dx
   1400172f8:	and    BYTE PTR [rbp+0x72],ah
   1400172fb:	jb     0x14001736c
   1400172fd:	jb     0x14001732b
   1400172ff:	and    BYTE PTR [rax],al
   140017301:	add    BYTE PTR [rax],al
   140017303:	add    BYTE PTR [rax],al
   140017305:	add    BYTE PTR [rax],al
   140017307:	add    BYTE PTR [rcx+0x51],dl
   14001730a:	ins    DWORD PTR es:[rdi],dx
   14001730b:	ins    BYTE PTR es:[rdi],dx
   14001730c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001730e:	ins    DWORD PTR es:[rdi],dx
   14001730f:	jo     0x140017380
   140017311:	outs   dx,BYTE PTR ds:[rsi]
   140017312:	outs   dx,BYTE PTR gs:[rsi]
   140017314:	je     0x140017316
   140017316:	add    BYTE PTR [rax],al
   140017318:	xor    dh,BYTE PTR [rcx+rbp*2+0x6d]
   14001731c:	outs   dx,DWORD PTR gs:[rsi]
   14001731e:	jne    0x140017394
   140017320:	sub    BYTE PTR [rcx],ch
   140017322:	add    BYTE PTR [rax],al
   140017324:	add    BYTE PTR [rax],al
   140017326:	add    BYTE PTR [rax],al
   140017328:	xor    DWORD PTR [rcx+0x75],esi
   14001732b:	imul   esi,DWORD PTR [rax+rbp*1+0x29],0x70656400
   140017333:	outs   dx,BYTE PTR gs:[rsi]
   140017335:	fs outs dx,BYTE PTR gs:[rsi]
   140017338:	movsxd ebp,DWORD PTR [rcx+0x65]
   14001733b:	jae    0x14001733d
   14001733d:	add    BYTE PTR [rax],al
   14001733f:	add    BYTE PTR [rbp+0x6f],cl
   140017342:	fs jne 0x1400173b1
   140017345:	add    BYTE PTR gs:[rax],al
	...
   140017350:	or     ch,BYTE PTR [rdi]
   140017352:	(bad)  
   140017353:	and    BYTE PTR [rax+rbp*2+0x69],dl
   140017357:	jae    0x140017379
   140017359:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6564
   140017360:	jae    0x1400173c5
   140017362:	jb     0x1400173cd
   140017364:	(bad)  
   140017365:	gs jae 0x140017388
   140017368:	je     0x1400173d2
   14001736a:	and    BYTE PTR gs:[rax+0x6c],dh
   14001736e:	jne    0x1400173d7
   140017370:	imul   ebp,DWORD PTR [rsi+0x2d],0x70707573
   140017377:	ins    BYTE PTR es:[rdi],dx
   140017378:	imul   esp,DWORD PTR [rbp+0x64],0x70797420
   14001737f:	gs jae 0x1400173a2
   140017382:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140017385:	je     0x1400173e8
   140017387:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692064
   14001738e:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140017392:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   140017396:	jb     0x1400173f9
   140017398:	jb     0x140017413
   14001739a:	or     ch,BYTE PTR cs:[rdi]
   14001739d:	(bad)  
   14001739e:	and    BYTE PTR [rcx+0x74],cl
   1400173a1:	and    BYTE PTR [rcx+0x73],ch
   1400173a4:	and    BYTE PTR [rbp+0x73],dh
   1400173a7:	gs and BYTE PTR fs:[rsi+0x6f],ah
   1400173ac:	jb     0x1400173ce
   1400173ae:	push   rcx
   1400173af:	rex.WRB
   1400173b0:	rex.WR and BYTE PTR [rdi+rbp*2+0x6f],r14b
   1400173b5:	ins    BYTE PTR es:[rdi],dx
   1400173b6:	imul   ebp,DWORD PTR [rsi+0x67],0x72757020
   1400173bd:	jo     0x14001742e
   1400173bf:	jae    0x140017426
   1400173c1:	jae    0x1400173e3
   1400173c3:	outs   dx,DWORD PTR ds:[rsi]
   1400173c4:	outs   dx,BYTE PTR ds:[rsi]
   1400173c5:	ins    BYTE PTR es:[rdi],dx
   1400173c6:	jns    0x1400173f6
   1400173c8:	or     ch,BYTE PTR [rdi]
   1400173ca:	(bad)  
   1400173cb:	or     ch,BYTE PTR [rdi]
   1400173cd:	(bad)  
   1400173ce:	and    BYTE PTR [rax+rbp*2+0x69],dl
   1400173d2:	jae    0x1400173f4
   1400173d4:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6177
   1400173db:	jae    0x1400173fd
   1400173dd:	(bad)  
   1400173de:	jne    0x140017454
   1400173e0:	outs   dx,DWORD PTR ds:[rsi]
   1400173e1:	sub    eax,0x656e6567
   1400173e6:	jb     0x140017449
   1400173e8:	je     0x14001744f
   1400173ea:	and    BYTE PTR fs:[rdx+0x79],ah
   1400173ee:	cmp    cl,BYTE PTR [rdx]
   1400173f0:	(bad)  
   1400173f1:	(bad)  
   1400173f2:	and    BYTE PTR [rdi],ah
   1400173f4:	and    eax,0x32252031
   1400173f9:	(bad)  
   1400173fa:	or     cl,BYTE PTR [rdx]
   1400173fc:	add    BYTE PTR [rax],al
   1400173fe:	add    BYTE PTR [rax],al
   140017400:	push   rcx
   140017401:	je     0x140017454
   140017403:	jne    0x14001746e
   140017405:	movsxd ebp,DWORD PTR [rbx+0x2e]
   140017408:	je     0x140017479
   14001740a:	outs   dx,DWORD PTR ds:[rsi]
   14001740b:	ins    BYTE PTR es:[rdi],dx
   14001740c:	imul   ebp,DWORD PTR [rsi+0x67],0x6d515100
   140017413:	ins    BYTE PTR es:[rdi],dx
   140017414:	rex.RB (bad) 
   140017416:	jae    0x140017481
   140017418:	outs   dx,BYTE PTR ds:[rsi]
   140017419:	addr32 push rsi
   14001741b:	(bad)  
   14001741c:	ins    BYTE PTR es:[rdi],dx
   14001741d:	jne    0x140017484
   14001741f:	push   rsp
   140017420:	jns    0x140017492
   140017422:	cmp    bh,BYTE PTR gs:[rdx]
   140017425:	push   rsp
   140017426:	jns    0x140017498
   140017428:	add    BYTE PTR gs:[rax],al
   14001742b:	add    BYTE PTR [rcx+rdi*2+0x70],dl
   14001742f:	add    BYTE PTR gs:[rax],al
   140017432:	add    BYTE PTR [rax],al
   140017434:	add    BYTE PTR [rax],al
   140017436:	add    BYTE PTR [rax],al
   140017438:	push   rcx
   140017439:	push   rbx
   14001743a:	je     0x1400174ae
   14001743c:	imul   ebp,DWORD PTR [rsi+0x67],0x72747300
   140017443:	imul   ebp,DWORD PTR [rsi+0x67],0x742f0000
   14001744a:	jns    0x1400174bc
   14001744c:	gs ins BYTE PTR es:[rdi],dx
   14001744e:	imul   esi,DWORD PTR [rbx+0x74],0x6c6d712e
   140017455:	add    BYTE PTR [rax],al
   140017457:	add    BYTE PTR [rdx],cl
   140017459:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
   140017460:	and    ch,BYTE PTR [rsi]
   140017462:	and    ah,BYTE PTR [rax]
   140017464:	and    eax,0xa000a32
   140017469:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
   140017470:	and    eax,0x31252030
   140017475:	or     al,BYTE PTR [rax]
   140017477:	add    BYTE PTR [rcx+0x6d],ch
   14001747a:	jo     0x1400174eb
   14001747c:	jb     0x1400174f2
   14001747e:	and    BYTE PTR [rip+0x32252031],ah        # 0x1722694b5
   140017484:	cs and eax,0x6f430033
   14001748a:	jne    0x1400174f8
   14001748c:	and    BYTE PTR fs:[rsi+0x6f],ch
   140017490:	je     0x1400174b2
   140017492:	imul   bp,WORD PTR [rsi+0x64],0x5120
   140017498:	je     0x1400174e9
   14001749a:	(bad)  
   14001749b:	push   0x65
   14001749d:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   1400174a1:	jns    0x140017513
   1400174a3:	add    BYTE PTR gs:[rax],al
   1400174a6:	add    BYTE PTR [rax],al
   1400174a8:	and    bh,BYTE PTR [rdx]
   1400174aa:	and    BYTE PTR [rbp+0x61],cl
   1400174ad:	push   0x6f
   1400174af:	jb     0x1400174d1
   1400174b1:	jbe    0x140017518
   1400174b3:	jb     0x140017528
   1400174b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
   1400174bc:	(bad)  
   1400174bd:	gs jb  0x1400174e0
   1400174c0:	ins    DWORD PTR es:[rdi],dx
   1400174c1:	jne    0x140017536
   1400174c3:	je     0x1400174e5
   1400174c5:	(bad)  
   1400174c6:	and    BYTE PTR gs:[rdx],ah
   1400174c9:	add    BYTE PTR [rax],al
   1400174cb:	add    BYTE PTR [rax],al
   1400174cd:	add    BYTE PTR [rax],al
   1400174cf:	add    BYTE PTR [rbp+0x6e],dl
   1400174d2:	jae    0x140017549
   1400174d4:	jo     0x140017546
   1400174d6:	outs   dx,DWORD PTR ds:[rsi]
   1400174d7:	jb     0x14001754d
   1400174d9:	gs and BYTE PTR fs:[rsi+0x65],dh
   1400174de:	jb     0x140017553
   1400174e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2220
   1400174e7:	add    BYTE PTR [rdx],ah
   1400174e9:	add    BYTE PTR cs:[rax],al
   1400174ec:	add    BYTE PTR [rax],al
   1400174ee:	add    BYTE PTR [rax],al
   1400174f0:	rex.WRB (bad) 
   1400174f2:	ins    BYTE PTR es:[rdi],dx
   1400174f3:	outs   dx,WORD PTR ds:[rsi]
   1400174f5:	jb     0x140017564
   1400174f7:	gs and BYTE PTR fs:[rsi+0x65],dh
   1400174fc:	jb     0x140017571
   1400174fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747320
   140017505:	imul   ebp,DWORD PTR [rsi+0x67],0x2220
   14001750c:	push   rcx
   14001750d:	je     0x140017560
   14001750f:	ins    DWORD PTR es:[rdi],dx
   140017510:	ins    BYTE PTR es:[rdi],dx
   140017511:	add    BYTE PTR [rax],al
   140017513:	add    BYTE PTR [rcx+0x74],dl
   140017516:	add    BYTE PTR [rax],al
   140017518:	(bad)  
   140017519:	ins    BYTE PTR es:[rdi],dx
   14001751a:	outs   dx,DWORD PTR ds:[rsi]
   14001751b:	(bad)  
   14001751c:	fs fs gs jo 0x140017586
   140017521:	outs   dx,BYTE PTR ds:[rsi]
   140017522:	fs outs dx,BYTE PTR gs:[rsi]
   140017525:	movsxd ebp,DWORD PTR [rcx+0x65]
   140017528:	jae    0x140017558
   14001752a:	jno    0x140017599
   14001752c:	ins    BYTE PTR es:[rdi],dx
   14001752d:	add    BYTE PTR [rax],al
   14001752f:	add    BYTE PTR [rdx],cl
   140017531:	push   rcx
   140017532:	je     0x140017583
   140017534:	(bad)  
   140017535:	push   0x65
   140017537:	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
   14001753b:	jge    0x14001753d
   14001753d:	add    BYTE PTR [rax],al
   14001753f:	add    BYTE PTR [rdx],cl
   140017541:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
	...
   140017550:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
   140017557:	push   rcx
   140017558:	je     0x1400175ab
   14001755a:	ins    DWORD PTR es:[rdi],dx
   14001755b:	ins    BYTE PTR es:[rdi],dx
   14001755c:	and    BYTE PTR [rip+0x32252e31],ah        # 0x17226a393
   140017562:	add    BYTE PTR [rax],al
   140017564:	add    BYTE PTR [rax],al
   140017566:	add    BYTE PTR [rax],al
   140017568:	sub    BYTE PTR [rdi+rsi*2+0x2b],bl
   14001756c:	pop    rsp
   14001756d:	sub    bl,BYTE PTR cs:[rdi+rsi*2+0x2a]
   140017572:	pop    rsp
   140017573:	jae    0x14001759f
   140017575:	pop    rsp
   140017576:	sub    ebx,DWORD PTR fs:[rsi+rbp*1+0x5c]
   14001757b:	sub    ebp,DWORD PTR fs:[rcx]
   14001757e:	add    BYTE PTR [rax],al
   140017580:	ins    DWORD PTR es:[rdi],dx
   140017581:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
   140017588:	fs gs jo 0x1400175f1
   14001758c:	outs   dx,BYTE PTR ds:[rsi]
   14001758d:	fs outs dx,BYTE PTR gs:[rsi]
   140017590:	movsxd ebp,DWORD PTR [rcx+0x65]
   140017593:	jae    0x1400175b5
   140017595:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   14001759c:	add    BYTE PTR [rax],al
   14001759e:	add    BYTE PTR [rax],al
   1400175a0:	ins    DWORD PTR es:[rdi],dx
   1400175a1:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
   1400175a8:	ins    DWORD PTR es:[rdi],dx
   1400175a9:	gs jb  0x140017613
   1400175ac:	and    BYTE PTR gs:[rsi+0x69],ah
   1400175b0:	ins    BYTE PTR es:[rdi],dx
   1400175b1:	add    BYTE PTR gs:[rax],al
   1400175b4:	add    BYTE PTR [rax],al
   1400175b6:	add    BYTE PTR [rax],al
   1400175b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400175ba:	movsxd ebp,DWORD PTR [rdi+0x72]
   1400175bd:	jb     0x140017624
   1400175bf:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
   1400175c3:	jne    0x140017632
   1400175c5:	(bad)  
   1400175c6:	gs jb  0x1400175e9
   1400175c9:	outs   dx,DWORD PTR ds:[rsi]
   1400175ca:	data16 and BYTE PTR [rax+0x6f],dh
   1400175ce:	jae    0x140017639
   1400175d0:	je     0x14001763b
   1400175d2:	outs   dx,DWORD PTR ds:[rsi]
   1400175d3:	outs   dx,BYTE PTR ds:[rsi]
   1400175d4:	(bad)  
   1400175d5:	ins    BYTE PTR es:[rdi],dx
   1400175d6:	and    BYTE PTR [rcx+0x72],ah
   1400175d9:	addr32 jne 0x140017649
   1400175dc:	outs   dx,BYTE PTR gs:[rsi]
   1400175de:	je     0x140017653
	...
   1400175e8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400175ea:	jbe    0x14001764d
   1400175ec:	ins    BYTE PTR es:[rdi],dx
   1400175ed:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   1400175f5:	outs   dx,BYTE PTR gs:[rsi]
   1400175f7:	je     0x140017633
   1400175f9:	and    BYTE PTR [rax],al
   1400175fb:	add    BYTE PTR [rip+0x2d000076],ch        # 0x16d017677
   140017601:	(bad)  
   140017602:	jne    0x14001766d
   140017604:	ins    BYTE PTR es:[rdi],dx
   140017605:	je     0x140017670
   140017607:	outs   dx,BYTE PTR ds:[rsi]
   140017608:	jae    0x14001760a
   14001760a:	add    BYTE PTR [rax],al
   14001760c:	add    BYTE PTR [rax],al
   14001760e:	add    BYTE PTR [rax],al
   140017610:	sub    eax,0x6975622d
   140017615:	ins    BYTE PTR es:[rdi],dx
   140017616:	je     0x140017681
   140017618:	outs   dx,BYTE PTR ds:[rsi]
   140017619:	jae    0x14001761b
   14001761b:	add    BYTE PTR [rip+0x68746170],ch        # 0x1a875d791
   140017621:	add    BYTE PTR [rax],al
   140017623:	add    BYTE PTR [rip+0x7461702d],ch        # 0x1b462e656
   140017629:	push   0x0
   14001762e:	add    BYTE PTR [rax],al
   140017630:	sub    eax,0x6e696f6e
   140017635:	jae    0x1400176ab
   140017637:	(bad)  
   140017638:	outs   dx,BYTE PTR ds:[rsi]
   140017639:	je     0x1400176a4
   14001763b:	(bad)  
   14001763c:	je     0x1400176a3
   14001763e:	add    BYTE PTR [rax],al
   140017640:	sub    eax,0x696f6e2d
   140017645:	outs   dx,BYTE PTR ds:[rsi]
   140017646:	jae    0x1400176bc
   140017648:	(bad)  
   140017649:	outs   dx,BYTE PTR ds:[rsi]
   14001764a:	je     0x1400176b5
   14001764c:	(bad)  
   14001764d:	je     0x1400176b4
   14001764f:	add    BYTE PTR [rip+0x6f6c6572],ch        # 0x1af6ddbc7
   140017655:	movsxd esp,DWORD PTR [rcx+0x74]
   140017658:	(bad)  
   140017659:	(bad)  
   14001765a:	ins    BYTE PTR es:[rdi],dx
   14001765b:	add    BYTE PTR gs:[rax],al
   14001765e:	add    BYTE PTR [rax],al
   140017660:	sub    eax,0x6c65722d
   140017665:	outs   dx,DWORD PTR ds:[rsi]
   140017666:	movsxd esp,DWORD PTR [rcx+0x74]
   140017669:	(bad)  
   14001766a:	(bad)  
   14001766b:	ins    BYTE PTR es:[rdi],dx
   14001766c:	add    BYTE PTR gs:[rax],al
   14001766f:	add    BYTE PTR [rip+0x726e6f6e],ch        # 0x1b26fe5e3
   140017675:	gs ins BYTE PTR es:[rdi],dx
   140017677:	outs   dx,DWORD PTR ds:[rsi]
   140017678:	movsxd esp,DWORD PTR [rcx+0x74]
   14001767b:	(bad)  
   14001767c:	(bad)  
   14001767d:	ins    BYTE PTR es:[rdi],dx
   14001767e:	add    BYTE PTR gs:[rip+0x6e6f6e2d],ch        # 0x1ae70e4b2
   140017685:	jb     0x1400176ec
   140017687:	ins    BYTE PTR es:[rdi],dx
   140017688:	outs   dx,DWORD PTR ds:[rsi]
   140017689:	movsxd esp,DWORD PTR [rcx+0x74]
   14001768c:	(bad)  
   14001768d:	(bad)  
   14001768e:	ins    BYTE PTR es:[rdi],dx
   14001768f:	add    BYTE PTR gs:[rax],al
   140017692:	add    BYTE PTR [rax],al
   140017694:	add    BYTE PTR [rax],al
   140017696:	add    BYTE PTR [rax],al
   140017698:	sub    eax,0x72746f6e
   14001769d:	gs ins BYTE PTR es:[rdi],dx
   14001769f:	outs   dx,DWORD PTR ds:[rsi]
   1400176a0:	movsxd esp,DWORD PTR [rcx+0x74]
   1400176a3:	(bad)  
   1400176a4:	(bad)  
   1400176a5:	ins    BYTE PTR es:[rdi],dx
   1400176a6:	add    BYTE PTR gs:[rip+0x746f6e2d],ch        # 0x1b470e4da
   1400176ad:	jb     0x140017714
   1400176af:	ins    BYTE PTR es:[rdi],dx
   1400176b0:	outs   dx,DWORD PTR ds:[rsi]
   1400176b1:	movsxd esp,DWORD PTR [rcx+0x74]
   1400176b4:	(bad)  
   1400176b5:	(bad)  
   1400176b6:	ins    BYTE PTR es:[rdi],dx
   1400176b7:	add    BYTE PTR gs:[rax],al
   1400176ba:	add    BYTE PTR [rax],al
   1400176bc:	sub    eax,0x6772656d
   1400176c1:	add    BYTE PTR gs:[rax],al
   1400176c4:	add    BYTE PTR [rax],al
   1400176c6:	add    BYTE PTR [rax],al
   1400176c8:	sub    eax,0x72656d2d
   1400176cd:	add    BYTE PTR gs:[eip+0x65706564],ch        # 0x1a571dc39
   1400176d5:	outs   dx,BYTE PTR ds:[rsi]
   1400176d6:	fs outs dx,BYTE PTR gs:[rsi]
   1400176d9:	movsxd ebp,DWORD PTR [rcx+0x65]
   1400176dc:	jae    0x1400176de
   1400176de:	add    BYTE PTR [rax],al
   1400176e0:	sub    eax,0x7065642d
   1400176e5:	outs   dx,BYTE PTR gs:[rsi]
   1400176e7:	fs outs dx,BYTE PTR gs:[rsi]
   1400176ea:	movsxd ebp,DWORD PTR [rcx+0x65]
   1400176ed:	jae    0x1400176ef
   1400176ef:	add    BYTE PTR [rcx+0x54],dl
   1400176f2:	pop    rdi
   1400176f3:	push   rcx
   1400176f4:	push   rax
   1400176f5:	pop    r15
   1400176f7:	push   rax
   1400176f8:	rex.WR
   1400176f9:	push   r12
   1400176fb:	rex.RX
   1400176fc:	rex.WRXB push r10
   1400176fe:	rex.WRB add BYTE PTR [r13+0x69],r13b
   140017702:	outs   dx,BYTE PTR ds:[rsi]
   140017703:	imul   ebp,DWORD PTR [rbp+0x61],0x642d006c
   14001770a:	gs data16 (bad) 
   14001770d:	jne    0x14001777b
   14001770f:	je     0x140017781
   140017711:	ins    BYTE PTR es:[rdi],dx
   140017712:	(bad)  
   140017713:	je     0x14001777b
   140017715:	outs   dx,DWORD PTR ds:[rsi]
   140017716:	jb     0x140017785
	...
   140017720:	sub    eax,0x6665642d
   140017725:	(bad)  
   140017726:	jne    0x140017794
   140017728:	je     0x14001779a
   14001772a:	ins    BYTE PTR es:[rdi],dx
   14001772b:	(bad)  
   14001772c:	je     0x140017794
   14001772e:	outs   dx,DWORD PTR ds:[rsi]
   14001772f:	jb     0x14001779e
   140017731:	add    BYTE PTR [rax],al
   140017733:	add    BYTE PTR [rdx],cl
   140017735:	add    BYTE PTR [rax],al
   140017737:	add    BYTE PTR [rax],ah
   140017739:	(bad)  
   14001773a:	jae    0x14001775c
   14001773c:	and    eax,0x8000031
   140017741:	jns    0x140017744
   140017743:	rex add DWORD PTR [rax],eax
   140017746:	add    BYTE PTR [rax],al
   140017748:	loop   0x140017799
   14001774a:	add    DWORD PTR [rax+0x1],eax
   14001774d:	add    BYTE PTR [rax],al
   14001774f:	add    al,ch
   140017751:	rex.WRXB add QWORD PTR [r8+0x1],r8
   140017755:	add    BYTE PTR [rax],al
   140017757:	add    dh,ch
   140017759:	rex.WRXB add QWORD PTR [r8+0x1],r8
   14001775d:	add    BYTE PTR [rax],al
   14001775f:	add    BYTE PTR [rax+0x140013f],dl
   140017765:	add    BYTE PTR [rax],al
   140017767:	add    ah,dh
   140017769:	rex.WRXB add QWORD PTR [r8+0x1],r8
   14001776d:	add    BYTE PTR [rax],al
   14001776f:	add    dl,bh
   140017771:	rex.WRXB add QWORD PTR [r8+0x1],r8
   140017775:	add    BYTE PTR [rax],al
   140017777:	add    BYTE PTR [rax],al
   140017779:	push   rax
   14001777a:	add    DWORD PTR [rax+0x1],eax
   14001777d:	add    BYTE PTR [rax],al
   14001777f:	add    BYTE PTR [rsi],al
   140017781:	push   rax
   140017782:	add    DWORD PTR [rax+0x1],eax
   140017785:	add    BYTE PTR [rax],al
   140017787:	add    BYTE PTR [rax+rdx*2],cl
   14001778a:	add    DWORD PTR [rax+0x1],eax
   14001778d:	add    BYTE PTR [rax],al
   14001778f:	add    BYTE PTR [rdx],dl
   140017791:	push   rax
   140017792:	add    DWORD PTR [rax+0x1],eax
   140017795:	add    BYTE PTR [rax],al
   140017797:	add    BYTE PTR [rax],bl
   140017799:	push   rax
   14001779a:	add    DWORD PTR [rax+0x1],eax
   14001779d:	add    BYTE PTR [rax],al
   14001779f:	add    BYTE PTR [rsi],bl
   1400177a1:	push   rax
   1400177a2:	add    DWORD PTR [rax+0x1],eax
   1400177a5:	add    BYTE PTR [rax],al
   1400177a7:	add    BYTE PTR [rax+rdx*2],ah
   1400177aa:	add    DWORD PTR [rax+0x1],eax
   1400177ad:	add    BYTE PTR [rax],al
   1400177af:	add    BYTE PTR [rdx],ch
   1400177b1:	push   rax
   1400177b2:	add    DWORD PTR [rax+0x1],eax
   1400177b5:	add    BYTE PTR [rax],al
   1400177b7:	add    BYTE PTR [rax],dh
   1400177b9:	push   rax
   1400177ba:	add    DWORD PTR [rax+0x1],eax
   1400177bd:	add    BYTE PTR [rax],al
   1400177bf:	add    BYTE PTR [rsi],dh
   1400177c1:	push   rax
   1400177c2:	add    DWORD PTR [rax+0x1],eax
   1400177c5:	add    BYTE PTR [rax],al
   1400177c7:	add    BYTE PTR [rax+rdx*2],bh
   1400177ca:	add    DWORD PTR [rax+0x1],eax
   1400177cd:	add    BYTE PTR [rax],al
   1400177cf:	add    BYTE PTR [rdx+0x50],al
   1400177d2:	add    DWORD PTR [rax+0x1],eax
   1400177d5:	add    BYTE PTR [rax],al
   1400177d7:	add    BYTE PTR [rax+0x50],cl
   1400177da:	add    DWORD PTR [rax+0x1],eax
   1400177dd:	add    BYTE PTR [rax],al
   1400177df:	add    BYTE PTR [rsi+0x50],cl
   1400177e2:	add    DWORD PTR [rax+0x1],eax
   1400177e5:	add    BYTE PTR [rax],al
   1400177e7:	add    BYTE PTR [rax+rdx*2+0x1],dl
   1400177eb:	rex add DWORD PTR [rax],eax
   1400177ee:	add    BYTE PTR [rax],al
   1400177f0:	pop    rdx
   1400177f1:	push   rax
   1400177f2:	add    DWORD PTR [rax+0x1],eax
   1400177f5:	add    BYTE PTR [rax],al
   1400177f7:	add    BYTE PTR [rax+0x50],ah
   1400177fa:	add    DWORD PTR [rax+0x1],eax
   1400177fd:	add    BYTE PTR [rax],al
   1400177ff:	add    BYTE PTR [rsi+0x50],ah
   140017802:	add    DWORD PTR [rax+0x1],eax
   140017805:	add    BYTE PTR [rax],al
   140017807:	add    BYTE PTR [rax+rdx*2+0x1],ch
   14001780b:	rex add DWORD PTR [rax],eax
   14001780e:	add    BYTE PTR [rax],al
   140017810:	jb     0x140017862
   140017812:	add    DWORD PTR [rax+0x1],eax
   140017815:	add    BYTE PTR [rax],al
   140017817:	add    BYTE PTR [rax+0x50],bh
   14001781a:	add    DWORD PTR [rax+0x1],eax
   14001781d:	add    BYTE PTR [rax],al
   14001781f:	add    BYTE PTR [rip+0x7b2031],ah        # 0x1407c9856
   140017825:	add    BYTE PTR [rax],al
   140017827:	add    BYTE PTR [rbp+0xa],bh
   14001782a:	add    BYTE PTR [rax],al
   14001782c:	and    BYTE PTR [rbp+0xa],bh
   14001782f:	add    BYTE PTR [rbx],bh
   140017831:	add    BYTE PTR [rax],al
   140017833:	add    BYTE PTR [rdx+rcx*1],ch
   140017836:	add    BYTE PTR [rax],al
   140017838:	and    eax,0x5b203a31
   14001783d:	or     al,BYTE PTR [rax]
   14001783f:	add    BYTE PTR [rbp+0xa],bl
   140017842:	add    BYTE PTR [rax],al
   140017844:	and    eax,0x5b203a31
   140017849:	add    BYTE PTR [rax],al
   14001784b:	add    BYTE PTR [rip+0x25203a31],ah        # 0x16521b282
   140017851:	xor    al,BYTE PTR [rax]
   140017853:	add    BYTE PTR [rip+0x7b203a31],ah        # 0x1bb21b28a
   140017859:	or     al,BYTE PTR [rax]
   14001785b:	add    BYTE PTR [rsi+0x61],ah
   14001785e:	ins    BYTE PTR es:[rdi],dx
   14001785f:	jae    0x1400178c6
   140017861:	add    BYTE PTR [rax],al
   140017863:	add    BYTE PTR [rax],al
   140017865:	add    BYTE PTR [rax],al
   140017867:	add    BYTE PTR [rbp+0x61],cl
   14001786a:	ins    BYTE PTR es:[rdi],dx
   14001786b:	outs   dx,WORD PTR ds:[rsi]
   14001786d:	jb     0x1400178dc
   14001786f:	gs and BYTE PTR fs:[rsi+0x69],ah
   140017874:	ins    BYTE PTR es:[rdi],dx
   140017875:	cmp    ah,BYTE PTR gs:[rax]
   140017878:	add    BYTE PTR [rax],al
   14001787a:	add    BYTE PTR [rax],al
   14001787c:	and    BYTE PTR [rdx],bh
   14001787e:	and    BYTE PTR [rax],al
   140017880:	rex.RB jb 0x1400178f5
   140017883:	outs   dx,DWORD PTR ds:[rsi]
   140017884:	jb     0x1400178a6
   140017886:	imul   ebp,DWORD PTR [rsi+0x20],0x6e65706f
   14001788d:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
   140017894:	and    BYTE PTR gs:[rax],al
   140017897:	add    BYTE PTR [rsi+0x6f],cl
   14001789a:	outs   dx,BYTE PTR ds:[rsi]
   14001789b:	and    BYTE PTR [rbp+0x78],ah
   14001789e:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
   1400178a5:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x20
   1400178ac:	add    BYTE PTR [rax],al
   1400178ae:	add    BYTE PTR [rax],al
   1400178b0:	imul   ebp,DWORD PTR [rbp+0x70],0x2074726f
   1400178b7:	push   rcx
   1400178b8:	je     0x14001790b
   1400178ba:	jne    0x140017925
   1400178bc:	movsxd ebp,DWORD PTR [rbx+0x2e]
   1400178bf:	je     0x140017930
   1400178c1:	outs   dx,DWORD PTR ds:[rsi]
   1400178c2:	ins    BYTE PTR es:[rdi],dx
   1400178c3:	imul   ebp,DWORD PTR [rsi+0x67],0x322e3120
   1400178ca:	sub    cl,BYTE PTR cs:[rbp+0x6f]
   1400178ce:	fs jne 0x14001793d
   1400178d1:	and    BYTE PTR gs:[rbx+0x5c],bh
   1400178d5:	jae    0x140017901
   1400178d7:	fs gs jo 0x140017940
   1400178db:	outs   dx,BYTE PTR ds:[rsi]
   1400178dc:	fs outs dx,BYTE PTR gs:[rsi]
   1400178df:	movsxd ebp,DWORD PTR [rcx+0x65]
   1400178e2:	jae    0x14001791e
   1400178e4:	pop    rsp
   1400178e5:	pop    rbx
   1400178e6:	sub    BYTE PTR [rbx+0x5e],bl
   1400178e9:	pop    rsp
   1400178ea:	pop    rbp
   1400178eb:	pop    rbp
   1400178ec:	sub    ch,BYTE PTR [rcx]
   1400178ee:	pop    rsp
   1400178ef:	pop    rbp
   1400178f0:	sub    BYTE PTR [rsi],ch
   1400178f2:	sub    ch,BYTE PTR [rcx]
   1400178f4:	jge    0x1400178f6
   1400178f6:	add    BYTE PTR [rax],al
   1400178f8:	cmp    BYTE PTR [rdx+0x1],bh
   1400178fb:	rex add DWORD PTR [rax],eax
   1400178fe:	add    BYTE PTR [rax],al
   140017900:	fs push rcx
   140017902:	add    DWORD PTR [rax+0x1],eax
   140017905:	add    BYTE PTR [rax],al
   140017907:	add    BYTE PTR [rcx],al
	...
   140017911:	add    BYTE PTR [rax],al
   140017913:	add    BYTE PTR [rax],bl
   140017915:	rol    BYTE PTR [rcx],1
   140017917:	add    BYTE PTR [rax],dh
   140017919:	jns    0x14001791c
   14001791b:	add    BYTE PTR [rax],cl
   14001791d:	jns    0x140017920
	...
   140017937:	add    BYTE PTR [rbx],al
   140017939:	add    BYTE PTR [rax],al
   14001793b:	add    BYTE PTR [rax+0x79],cl
   14001793e:	add    DWORD PTR [rax],eax
	...
   140017948:	push   0xffffffff90000179
   14001794d:	jns    0x140017950
   14001794f:	add    al,ch
   140017951:	jns    0x140017954
	...
   140017967:	add    BYTE PTR [rax],bl
   140017969:	rol    BYTE PTR [rcx],1
   14001796b:	add    BYTE PTR [rdx],al
   14001796d:	add    BYTE PTR [rax],al
   14001796f:	add    BYTE PTR [rax],al
   140017971:	add    BYTE PTR [rax],al
   140017973:	add    bh,bh
   140017975:	(bad)  
   140017976:	(bad)  
   140017977:	inc    DWORD PTR [rax]
   140017979:	add    BYTE PTR [rax],al
   14001797b:	add    BYTE PTR [rax+0x0],al
   14001797e:	add    BYTE PTR [rax],al
   140017980:	xor    BYTE PTR [rcx+0x1],bh
	...
   14001798f:	add    BYTE PTR [rax],bh
   140017991:	rol    BYTE PTR [rcx],1
   140017993:	add    BYTE PTR [rcx],al
   140017995:	add    BYTE PTR [rax],al
   140017997:	add    BYTE PTR [rax],al
   140017999:	add    BYTE PTR [rax],al
   14001799b:	add    bh,bh
   14001799d:	(bad)  
   14001799e:	(bad)  
   14001799f:	inc    DWORD PTR [rax]
   1400179a1:	add    BYTE PTR [rax],al
   1400179a3:	add    BYTE PTR [rax+0x0],al
   1400179a6:	add    BYTE PTR [rax],al
   1400179a8:	mov    eax,0x179
	...
   1400179bd:	add    BYTE PTR [rax],al
   1400179bf:	add    BYTE PTR [rdx],al
   1400179c1:	add    BYTE PTR [rax],al
   1400179c3:	add    al,dl
   1400179c5:	jns    0x1400179c8
	...
   1400179cf:	add    BYTE PTR [rax-0x17fffe87],dl
   1400179d5:	jns    0x1400179d8
	...
   1400179e7:	add    BYTE PTR [rax-0x30],bl
   1400179ea:	add    DWORD PTR [rax],eax
	...
   1400179f4:	(bad)  
   1400179f5:	(bad)  
   1400179f6:	(bad)  
   1400179f7:	inc    DWORD PTR [rax]
   1400179f9:	add    BYTE PTR [rax],al
   1400179fb:	add    BYTE PTR [rax+0x0],al
   1400179fe:	add    BYTE PTR [rax],al
   140017a00:	adc    BYTE PTR [rdx+0x1],bh
	...
   140017a17:	add    BYTE PTR [rcx],al
   140017a19:	add    BYTE PTR [rax],al
   140017a1b:	add    BYTE PTR [rax],ch
   140017a1d:	jp     0x140017a20
	...
   140017a27:	add    al,ch
   140017a29:	jns    0x140017a2c
	...
   140017a37:	add    BYTE PTR [rcx],al
	...
   140017a41:	add    BYTE PTR [rax],al
   140017a43:	add    BYTE PTR [rax+0x600001d0],al
   140017a49:	jp     0x140017a4c
   140017a4b:	add    BYTE PTR [rax],bh
   140017a4d:	jp     0x140017a50
	...
   140017a67:	add    BYTE PTR [rcx],al
   140017a69:	add    BYTE PTR [rax],al
   140017a6b:	add    BYTE PTR [rax+0x7a],bh
   140017a6e:	add    DWORD PTR [rax],eax
	...
   140017a78:	mov    BYTE PTR [rdx+0x1],bh
	...
   140017a87:	add    BYTE PTR [rax+0x1d0],al
   140017a8d:	add    BYTE PTR [rax],al
   140017a8f:	add    BYTE PTR [rax],al
   140017a91:	add    BYTE PTR [rax],al
   140017a93:	add    bh,bh
   140017a95:	(bad)  
   140017a96:	(bad)  
   140017a97:	inc    DWORD PTR [rax]
   140017a99:	add    BYTE PTR [rax],al
   140017a9b:	add    BYTE PTR [rax+0x0],al
   140017a9e:	add    BYTE PTR [rax],al
   140017aa0:	(bad)  
   140017aa1:	jp     0x140017aa4
	...
   140017acf:	add    BYTE PTR [rcx],al
   140017ad1:	or     BYTE PTR [rax+rax*1],al
   140017ad4:	or     dl,dl
   140017ad6:	add    al,0x70
   140017ad8:	add    esp,DWORD PTR [rax+0x2]
   140017adb:	xor    BYTE PTR [rcx],al
   140017add:	adc    al,0x6
   140017adf:	add    BYTE PTR [rsp+riz*2],dl
   140017ae2:	(bad)  
   140017ae3:	add    BYTE PTR [rsp+rsi*1],dl
   140017ae6:	(bad)  
   140017ae7:	add    BYTE PTR [rdx+rsi*1],dl
   140017aea:	adc    BYTE PTR [rax+0x1],dh
   140017aed:	add    al,0x1
   140017aef:	add    BYTE PTR [rdx+rax*2],al
   140017af2:	add    BYTE PTR [rax],al
   140017af4:	add    DWORD PTR [rdi],ecx
   140017af6:	add    al,0x0
   140017af8:	sysenter 
   140017afa:	(bad)  
   140017afb:	add    BYTE PTR [rdi],cl
   140017afd:	xor    cl,BYTE PTR [rbx]
   140017aff:	jo     0x140017b22
   140017b01:	add    BYTE PTR [rax],al
   140017b03:	add    BYTE PTR [rax],dh
   140017b05:	adc    eax,0x15490000
   140017b0a:	add    BYTE PTR [rax],al
   140017b0c:	sub    BYTE PTR [rbx+0x1],bh
   140017b0f:	add    BYTE PTR [rcx],ah
   140017b11:	adc    BYTE PTR [rax+rax*1],al
   140017b14:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140017b18:	add    eax,0x30000634
   140017b1d:	adc    eax,0x15490000
   140017b22:	add    BYTE PTR [rax],al
   140017b24:	sub    BYTE PTR [rbx+0x1],bh
   140017b27:	add    BYTE PTR [rcx],al
   140017b29:	sbb    DWORD PTR [rsi],eax
   140017b2b:	add    BYTE PTR [rcx],bl
   140017b2d:	je     0x140017b38
   140017b2f:	add    BYTE PTR [rcx],bl
   140017b31:	push   rsp
   140017b32:	or     BYTE PTR [rax],al
   140017b34:	sbb    DWORD PTR [rdx],esi
   140017b36:	adc    eax,0x30b19c0
   140017b3b:	add    BYTE PTR [rbx],cl
   140017b3d:	rex.X (bad) 
   140017b3f:	push   rax
   140017b40:	(bad)  
   140017b41:	xor    BYTE PTR [rax],al
   140017b43:	add    BYTE PTR [rsi-0x4ffffeb0],dl
   140017b49:	imul   eax,DWORD PTR [rcx],0x0
   140017b4c:	sbb    DWORD PTR [rsi],esp
   140017b4e:	or     al,BYTE PTR [rax]
   140017b50:	es je  0x140017b64
   140017b53:	add    BYTE PTR [rdx],ah
   140017b55:	adc    BYTE PTR fs:[rax],al
   140017b58:	(bad)  
   140017b59:	xor    al,0xf
   140017b5b:	add    BYTE PTR [rcx],dl
   140017b5d:	xchg   edx,eax
   140017b5e:	or     eax,0x9d00be0
   140017b63:	rcl    BYTE PTR [rsi-0x4ffffeb0],0x6b
   140017b6a:	add    DWORD PTR [rax],eax
	...
   140017b74:	add    DWORD PTR [rax],eax
   140017b76:	add    BYTE PTR [rax],al
   140017b78:	add    DWORD PTR [rax],eax
   140017b7a:	add    BYTE PTR [rax],al
   140017b7c:	cmp    BYTE PTR [rbx+0x1],0x0
	...
   140017b8c:	add    BYTE PTR [rax+0x1],bl
   140017b8f:	add    BYTE PTR [rax+0x0],cl
   140017b92:	add    BYTE PTR [rax],al
   140017b94:	movabs al,ds:0x55ffffffff000016
   140017b9d:	(bad)  
   140017b9e:	add    BYTE PTR [rax],al
   140017ba0:	add    BYTE PTR [rax],al
   140017ba2:	add    BYTE PTR [rax],al
   140017ba4:	adc    al,0x18
   140017ba6:	add    BYTE PTR [rax],al
   140017ba8:	(bad)  
   140017ba9:	(bad)  
   140017baa:	(bad)  
   140017bab:	inc    DWORD PTR [rax]
   140017bad:	pop    rax
   140017bae:	add    DWORD PTR [rax],eax
   140017bb0:	add    BYTE PTR [rax],al
   140017bb2:	add    BYTE PTR [rax],al
   140017bb4:	(bad)  
   140017bb5:	pop    rax
   140017bb6:	add    DWORD PTR [rax],eax
   140017bb8:	add    DWORD PTR [rax],eax
   140017bba:	add    BYTE PTR [rax],al
   140017bbc:	sub    ebx,DWORD PTR [rax+0x1]
   140017bbf:	add    BYTE PTR [rax],al
   140017bc1:	add    BYTE PTR [rax],al
   140017bc3:	add    BYTE PTR [rcx],bl
   140017bc5:	or     al,0x3
   140017bc7:	add    BYTE PTR [rdx+rax*2],cl
   140017bca:	or     al,al
   140017bcc:	(bad)  
   140017bcd:	push   rax
   140017bce:	add    BYTE PTR [rax],al
   140017bd0:	xchg   esi,eax
   140017bd1:	push   rax
   140017bd2:	add    DWORD PTR [rax],eax
   140017bd4:	fsubr  DWORD PTR [rbx+0x1]
   140017bd7:	add    BYTE PTR [rcx],bl
   140017bd9:	or     al,BYTE PTR es:[rax]
   140017bdc:	es je  0x140017bf0
   140017bdf:	add    BYTE PTR [rdx],ah
   140017be1:	adc    BYTE PTR fs:[rax],al
   140017be4:	(bad)  
   140017be5:	xor    al,0xf
   140017be7:	add    BYTE PTR [rcx],dl
   140017be9:	xchg   edx,eax
   140017bea:	or     eax,0x9d00be0
   140017bef:	rcl    BYTE PTR [rsi-0x27fffeb0],0x6b
   140017bf6:	add    DWORD PTR [rax],eax
	...
   140017c00:	add    DWORD PTR [rax],eax
   140017c02:	add    BYTE PTR [rax],al
   140017c04:	add    DWORD PTR [rax],eax
   140017c06:	add    BYTE PTR [rax],al
   140017c08:	or     al,0x7c
   140017c0a:	add    DWORD PTR [rax],eax
	...
   140017c18:	rex pop rax
   140017c1a:	add    DWORD PTR [rax],eax
   140017c1c:	rex.W add BYTE PTR [rax],al
   140017c1f:	add    BYTE PTR [rax-0xffffe8],dl
   140017c25:	(bad)  
   140017c26:	(bad)  
   140017c27:	jmp    FWORD PTR [rdx]
   140017c29:	sbb    DWORD PTR [rax],eax
   140017c2b:	add    BYTE PTR [rax],al
   140017c2d:	add    BYTE PTR [rax],al
   140017c2f:	add    dl,bl
   140017c31:	sbb    DWORD PTR [rax],eax
   140017c33:	add    bh,bh
   140017c35:	(bad)  
   140017c36:	(bad)  
   140017c37:	inc    DWORD PTR [rax+0x58]
   140017c3a:	add    DWORD PTR [rax],eax
   140017c3c:	add    BYTE PTR [rax],al
   140017c3e:	add    BYTE PTR [rax],al
   140017c40:	rex.WRXB pop r8
   140017c42:	add    DWORD PTR [rax],eax
   140017c44:	add    DWORD PTR [rax],eax
   140017c46:	add    BYTE PTR [rax],al
   140017c48:	ins    BYTE PTR es:[rdi],dx
   140017c49:	pop    rax
   140017c4a:	add    DWORD PTR [rax],eax
   140017c4c:	add    BYTE PTR [rax],al
   140017c4e:	add    BYTE PTR [rax],al
   140017c50:	sbb    DWORD PTR [rbx],ecx
   140017c52:	add    eax,DWORD PTR [rax]
   140017c54:	or     eax,DWORD PTR [rdx+0x7]
   140017c57:	push   rax
   140017c58:	(bad)  
   140017c59:	xor    BYTE PTR [rax],al
   140017c5b:	add    BYTE PTR [rsi+0x150],dl
   140017c61:	ins    BYTE PTR es:[rdi],dx
   140017c62:	add    DWORD PTR [rax],eax
   140017c64:	sbb    DWORD PTR [rip+0x6425000a],esp        # 0x1a4267c74
   140017c6a:	adc    al,BYTE PTR [rax]
   140017c6c:	and    DWORD PTR [rcx+rdx*1],esi
   140017c6f:	add    BYTE PTR [rdx+rdx*4],dl
   140017c72:	adc    al,dh
   140017c74:	(bad)  
   140017c75:	loopne 0x140017c83
   140017c77:	ror    BYTE PTR [rdx],1
   140017c79:	ror    BYTE PTR [rax],0x70
   140017c7c:	xchg   esi,eax
   140017c7d:	push   rax
   140017c7e:	add    DWORD PTR [rax],eax
   140017c80:	add    BYTE PTR [rcx+rax*1+0x0],ch
	...
   140017c8c:	add    DWORD PTR [rax],eax
   140017c8e:	add    BYTE PTR [rax],al
   140017c90:	add    DWORD PTR [rax],eax
   140017c92:	add    BYTE PTR [rax],al
   140017c94:	cwde   
   140017c95:	jl     0x140017c98
	...
   140017ca3:	add    BYTE PTR [rax+0x48000158],al
   140017ca9:	add    BYTE PTR [rax],al
   140017cab:	add    bh,bh
   140017cad:	(bad)  
   140017cae:	(bad)  
   140017caf:	inc    DWORD PTR [rax]
   140017cb1:	add    BYTE PTR [rax],al
   140017cb3:	add    bh,bh
   140017cb5:	(bad)  
   140017cb6:	(bad)  
   140017cb7:	inc    DWORD PTR [rax]
   140017cb9:	add    BYTE PTR [rax],al
   140017cbb:	add    BYTE PTR [rax+0x1a],dh
   140017cbe:	add    BYTE PTR [rax],al
   140017cc0:	(bad)  
   140017cc1:	(bad)  
   140017cc2:	(bad)  
   140017cc3:	jmp    QWORD PTR [rip+0x1b]        # 0x140017ce4
   140017cc9:	add    BYTE PTR [rax],al
   140017ccb:	add    ch,dh
   140017ccd:	sbb    eax,DWORD PTR [rax]
   140017ccf:	add    bh,bh
   140017cd1:	(bad)  
   140017cd2:	(bad)  
   140017cd3:	inc    DWORD PTR [rax+0x158]
   140017cd9:	add    BYTE PTR [rax],al
   140017cdb:	add    BYTE PTR [rsi+0x1000158],cl
   140017ce1:	add    BYTE PTR [rax],al
   140017ce3:	add    BYTE PTR [rsi+0x158],ch
   140017ce9:	add    BYTE PTR [rax],al
   140017ceb:	add    BYTE PTR [rcx],al
   140017ced:	sbb    BYTE PTR [rdx],cl
   140017cef:	add    BYTE PTR [rax],bl
   140017cf1:	or     al,BYTE PTR fs:[rax]
   140017cf4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140017cf8:	sbb    BYTE PTR [rax+rcx*1],dh
   140017cfb:	add    BYTE PTR [rax],bl
   140017cfd:	xor    dl,BYTE PTR [rax+rdx*8]
   140017d00:	adc    al,al
   140017d02:	adc    BYTE PTR [rax+0x21],dh
   140017d05:	add    BYTE PTR [rax],al
   140017d07:	add    BYTE PTR [rax-0x26ffffe3],dh
   140017d0d:	sbb    eax,0x7d280000
   140017d12:	add    DWORD PTR [rax],eax
   140017d14:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4067d1c
   140017d1a:	(bad)  
   140017d1b:	add    BYTE PTR [rax-0x26ffffe3],dh
   140017d21:	sbb    eax,0x7d280000
   140017d26:	add    DWORD PTR [rax],eax
   140017d28:	add    DWORD PTR [rdi],ecx
   140017d2a:	(bad)  
   140017d2b:	add    BYTE PTR [rdi],cl
   140017d2d:	push   rsp
   140017d2e:	or     BYTE PTR [rax],al
   140017d30:	sysenter 
   140017d32:	(bad)  
   140017d33:	add    BYTE PTR [rdi],cl
   140017d35:	xor    cl,BYTE PTR [rbx]
   140017d37:	(bad)  
   140017d38:	and    DWORD PTR [rax],eax
   140017d3a:	add    BYTE PTR [rax],al
   140017d3c:	xor    BYTE PTR [rsi],bl
   140017d3e:	add    BYTE PTR [rax],al
   140017d40:	push   rdi
   140017d41:	(bad)  
   140017d42:	add    BYTE PTR [rax],al
   140017d44:	js     0x140017dc3
   140017d46:	add    DWORD PTR [rax],eax
   140017d48:	and    DWORD PTR [rax],eax
   140017d4a:	add    al,BYTE PTR [rax]
   140017d4c:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140017d50:	xor    BYTE PTR [rsi],bl
   140017d52:	add    BYTE PTR [rax],al
   140017d54:	push   rdi
   140017d55:	(bad)  
   140017d56:	add    BYTE PTR [rax],al
   140017d58:	js     0x140017dd7
   140017d5a:	add    DWORD PTR [rax],eax
   140017d5c:	and    DWORD PTR [rdx],esp
   140017d5e:	(bad)  
   140017d5f:	add    BYTE PTR [rdx],ah
   140017d61:	je     0x140017d6d
   140017d63:	add    BYTE PTR [rip+0x5000834],bl        # 0x14501859d
   140017d69:	or     DWORD PTR fs:[rax],eax
   140017d6c:	xor    BYTE PTR [rsi],bl
   140017d6e:	add    BYTE PTR [rax],al
   140017d70:	push   rdi
   140017d71:	(bad)  
   140017d72:	add    BYTE PTR [rax],al
   140017d74:	js     0x140017df3
   140017d76:	add    DWORD PTR [rax],eax
   140017d78:	add    DWORD PTR [rdx],ecx
   140017d7a:	add    al,0x0
   140017d7c:	or     dh,BYTE PTR [rdx]
   140017d7e:	(bad)  
   140017d7f:	rol    BYTE PTR [rax+rax*8],1
   140017d82:	add    dl,BYTE PTR [rax+0x21]
   140017d85:	add    BYTE PTR [rax],al
   140017d87:	add    BYTE PTR [rax],dl
   140017d89:	(bad)  
   140017d8a:	add    BYTE PTR [rax],al
   140017d8c:	(bad)  
   140017d8d:	(bad)  
   140017d8e:	add    BYTE PTR [rax],al
   140017d90:	test   al,0x7d
   140017d92:	add    DWORD PTR [rax],eax
   140017d94:	and    DWORD PTR [rip+0x34050002],eax        # 0x174067d9c
   140017d9a:	(bad)  
   140017d9b:	add    BYTE PTR [rax],dl
   140017d9d:	(bad)  
   140017d9e:	add    BYTE PTR [rax],al
   140017da0:	(bad)  
   140017da1:	(bad)  
   140017da2:	add    BYTE PTR [rax],al
   140017da4:	test   al,0x7d
   140017da6:	add    DWORD PTR [rax],eax
   140017da8:	add    DWORD PTR [rdi],ecx
   140017daa:	(bad)  
   140017dab:	add    BYTE PTR [rdi],cl
   140017dad:	or     BYTE PTR fs:[rax],al
   140017db0:	andps  xmm0,XMMWORD PTR [rdi]
   140017db3:	add    BYTE PTR [rdi],cl
   140017db5:	xor    cl,BYTE PTR [rbx]
   140017db7:	jo     0x140017dba
   140017db9:	clts   
   140017dbb:	add    BYTE PTR [rdi],cl
   140017dbd:	fs (bad) 
   140017dbf:	add    BYTE PTR [rdi],cl
   140017dc1:	xor    al,0x6
   140017dc3:	add    BYTE PTR [rdi],cl
   140017dc5:	xor    cl,BYTE PTR [rbx]
   140017dc7:	jo     0x140017dca
   140017dc9:	sbb    cl,BYTE PTR [rdx]
   140017dcb:	add    BYTE PTR [rdx],bl
   140017dcd:	je     0x140017dd8
   140017dcf:	add    BYTE PTR [rdx],bl
   140017dd1:	or     BYTE PTR fs:[rax],al
   140017dd4:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140017dd8:	sbb    dh,BYTE PTR [rsi+rax*1]
   140017ddb:	add    BYTE PTR [rdx],bl
   140017ddd:	xor    dl,BYTE PTR [rsi]
   140017ddf:	rol    BYTE PTR [rcx],0x12
   140017de2:	or     BYTE PTR [rax],al
   140017de4:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140017de8:	adc    dh,BYTE PTR [rcx+rcx*1]
   140017deb:	add    BYTE PTR [rdx],dl
   140017ded:	xor    cl,BYTE PTR [rsi]
   140017def:	ror    BYTE PTR [rax+rsi*2],0xb
   140017df3:	(bad)  
   140017df4:	and    DWORD PTR [rax],eax
   140017df6:	add    BYTE PTR [rax],al
   140017df8:	xor    BYTE PTR [rbx],ah
   140017dfa:	add    BYTE PTR [rax],al
   140017dfc:	(bad)  
   140017dfd:	and    eax,DWORD PTR [rax]
   140017dff:	add    BYTE PTR [rsi+rdi*2],bl
   140017e02:	add    DWORD PTR [rax],eax
   140017e04:	and    DWORD PTR [rax],ecx
   140017e06:	add    al,0x0
   140017e08:	or     BYTE PTR [rsp+rax*1+0x0],dh
   140017e0c:	add    al,0x34
   140017e0e:	add    eax,0x233000
   140017e13:	add    BYTE PTR [rcx+0x23],ah
   140017e16:	add    BYTE PTR [rax],al
   140017e18:	sbb    al,0x7e
   140017e1a:	add    DWORD PTR [rax],eax
   140017e1c:	add    DWORD PTR [rbx],ecx
   140017e1e:	add    al,0x0
   140017e20:	or     edx,DWORD PTR [rdx+0x7]
   140017e23:	rol    BYTE PTR [rip+0x1500460],0x10        # 0x14151828a
   140017e2a:	or     BYTE PTR [rax],al
   140017e2c:	adc    BYTE PTR [rsp+rcx*1],dh
   140017e2f:	add    BYTE PTR [rax],dl
   140017e31:	xor    cl,BYTE PTR [rax+rdx*8]
   140017e34:	or     al,al
   140017e36:	or     BYTE PTR [rax+0x7],dh
   140017e39:	(bad)  
   140017e3a:	(bad)  
   140017e3b:	push   rax
   140017e3c:	add    DWORD PTR [rax],edx
   140017e3e:	or     BYTE PTR [rax],al
   140017e40:	adc    BYTE PTR [rax+rdx*1],dh
   140017e43:	add    BYTE PTR [rax],dl
   140017e45:	jb     0x140017e53
   140017e47:	ror    BYTE PTR [rdx],1
   140017e49:	ror    BYTE PTR [rax],0x70
   140017e4c:	(bad)  
   140017e4d:	(bad)  
   140017e4e:	(bad)  
   140017e4f:	push   rax
   140017e50:	and    DWORD PTR [rax],eax
   140017e52:	add    BYTE PTR [rax],al
   140017e54:	loopne 0x140017e7d
   140017e56:	add    BYTE PTR [rax],al
   140017e58:	std    
   140017e59:	(bad)  
   140017e5a:	add    BYTE PTR [rax],al
   140017e5c:	in     al,dx
   140017e5d:	jp     0x140017e60
   140017e5f:	add    BYTE PTR [rcx],ah
   140017e61:	(bad)  
   140017e62:	(bad)  
   140017e63:	add    BYTE PTR [rsi],dl
   140017e65:	je     0x140017e6b
   140017e67:	add    BYTE PTR [rdx],cl
   140017e69:	fs (bad) 
   140017e6b:	add    BYTE PTR [rip+0xffffffffe0000634],al        # 0x1200184a5
   140017e71:	(bad)  
   140017e72:	add    BYTE PTR [rax],al
   140017e74:	std    
   140017e75:	(bad)  
   140017e76:	add    BYTE PTR [rax],al
   140017e78:	in     al,dx
   140017e79:	jp     0x140017e7c
   140017e7b:	add    BYTE PTR [rcx],ah
   140017e7d:	add    BYTE PTR [rax],al
   140017e7f:	add    BYTE PTR [rax+0x28],ah
   140017e82:	add    BYTE PTR [rax],al
   140017e84:	cdq    
   140017e85:	sub    BYTE PTR [rax],al
   140017e87:	add    BYTE PTR [rdi+rdi*2+0x1],ch
   140017e8b:	add    BYTE PTR [rcx],ah
   140017e8d:	or     al,BYTE PTR [rax+rax*1]
   140017e90:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140017e94:	add    eax,0x60000654
   140017e99:	sub    BYTE PTR [rax],al
   140017e9b:	add    BYTE PTR [rcx+0x6c000028],bl
   140017ea1:	jg     0x140017ea4
   140017ea3:	add    BYTE PTR [rcx],ah
   140017ea5:	add    BYTE PTR [rax],al
   140017ea7:	add    BYTE PTR [rax],dl
   140017ea9:	sub    DWORD PTR [rax],eax
   140017eab:	add    BYTE PTR [rip+0xffffffffec000029],ch        # 0x12c017eda
   140017eb1:	jp     0x140017eb4
   140017eb3:	add    BYTE PTR [rcx],ah
   140017eb5:	(bad)  
   140017eb6:	(bad)  
   140017eb7:	add    BYTE PTR [rsi],dl
   140017eb9:	je     0x140017ebf
   140017ebb:	add    BYTE PTR [rdx],cl
   140017ebd:	fs (bad) 
   140017ebf:	add    BYTE PTR [rip+0x10000634],al        # 0x1500184f9
   140017ec5:	sub    DWORD PTR [rax],eax
   140017ec7:	add    BYTE PTR [rip+0xffffffffec000029],ch        # 0x12c017ef6
   140017ecd:	jp     0x140017ed0
   140017ecf:	add    BYTE PTR [rcx],ah
   140017ed1:	add    BYTE PTR [rax],al
   140017ed3:	add    BYTE PTR [rax-0x55ffffd7],dl
   140017ed9:	sub    DWORD PTR [rax],eax
   140017edb:	add    BYTE PTR [rax],dl
   140017edd:	jg     0x140017ee0
   140017edf:	add    BYTE PTR [rcx],ah
   140017ee1:	add    BYTE PTR [rdx],al
   140017ee3:	add    BYTE PTR [rax],al
   140017ee5:	je     0x140017ef0
   140017ee7:	add    BYTE PTR [rax-0x55ffffd7],dl
   140017eed:	sub    DWORD PTR [rax],eax
   140017eef:	add    BYTE PTR [rax],dl
   140017ef1:	jg     0x140017ef4
   140017ef3:	add    BYTE PTR [rcx],ah
   140017ef5:	push   rsp
   140017ef6:	(bad)  
   140017ef7:	add    BYTE PTR [rsp+rdx*2+0x8],dl
   140017efb:	add    BYTE PTR [rdi+0x34],cl
   140017efe:	(bad)  
   140017eff:	add    BYTE PTR [rip+0xffffffff90000974],al        # 0xd0018879
   140017f05:	sub    DWORD PTR [rax],eax
   140017f07:	add    BYTE PTR [rdx+0x10000029],ch
   140017f0d:	jg     0x140017f10
   140017f0f:	add    BYTE PTR [rcx],al
   140017f11:	(bad)  
   140017f12:	add    al,BYTE PTR [rax]
   140017f14:	(bad)  
   140017f15:	xor    al,BYTE PTR [rdx]
   140017f17:	(bad)  
   140017f18:	and    DWORD PTR [rax],eax
   140017f1a:	add    BYTE PTR [rax],al
   140017f1c:	(bad)  
   140017f1d:	sub    al,BYTE PTR [rax]
   140017f1f:	add    BYTE PTR [rbp+0x2a],bh
   140017f22:	add    BYTE PTR [rax],al
   140017f24:	in     al,dx
   140017f25:	jp     0x140017f28
   140017f27:	add    BYTE PTR [rcx],ah
   140017f29:	(bad)  
   140017f2a:	(bad)  
   140017f2b:	add    BYTE PTR [rsi],dl
   140017f2d:	je     0x140017f33
   140017f2f:	add    BYTE PTR [rdx],cl
   140017f31:	fs (bad) 
   140017f33:	add    BYTE PTR [rip+0x60000634],al        # 0x1a001856d
   140017f39:	sub    al,BYTE PTR [rax]
   140017f3b:	add    BYTE PTR [rbp+0x2a],bh
   140017f3e:	add    BYTE PTR [rax],al
   140017f40:	in     al,dx
   140017f41:	jp     0x140017f44
   140017f43:	add    BYTE PTR [rcx],ah
   140017f45:	add    BYTE PTR [rax],al
   140017f47:	add    BYTE PTR [rax+0x2b],dl
   140017f4a:	add    BYTE PTR [rax],al
   140017f4c:	mov    DWORD PTR [rbx],ebp
   140017f4e:	add    BYTE PTR [rax],al
   140017f50:	ins    BYTE PTR es:[rdi],dx
   140017f51:	jg     0x140017f54
   140017f53:	add    BYTE PTR [rcx],ah
   140017f55:	or     al,BYTE PTR [rax+rax*1]
   140017f58:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140017f5c:	add    eax,0x50000654
   140017f61:	sub    eax,DWORD PTR [rax]
   140017f63:	add    BYTE PTR [rcx+0x6c00002b],cl
   140017f69:	jg     0x140017f6c
   140017f6b:	add    BYTE PTR [rcx],al
   140017f6d:	or     al,BYTE PTR [rax+rax*1]
   140017f70:	or     dh,BYTE PTR [rax+rcx*1]
   140017f73:	add    BYTE PTR [rdx],cl
   140017f75:	xor    al,BYTE PTR [rsi]
   140017f77:	(bad)  
   140017f78:	add    DWORD PTR [rdx],ebx
   140017f7a:	or     al,BYTE PTR [rax]
   140017f7c:	sbb    dl,BYTE PTR [rsp+rcx*1+0x0]
   140017f80:	sbb    dh,BYTE PTR [rdx+rcx*1]
   140017f83:	add    BYTE PTR [rdx],bl
   140017f85:	xor    dl,BYTE PTR [rsi]
   140017f87:	loopne 0x140017f9d
   140017f89:	rcl    BYTE PTR [rdx],1
   140017f8b:	rcl    BYTE PTR [rax],0x70
   140017f8e:	punpcklbw mm4,DWORD PTR [rcx]
   140017f91:	add    BYTE PTR [rax],al
   140017f93:	add    BYTE PTR [rax-0x46ffffd2],al
   140017f99:	add    BYTE PTR cs:[rax],al
   140017f9c:	ins    BYTE PTR es:[rdi],dx
   140017f9d:	jg     0x140017fa0
   140017f9f:	add    BYTE PTR [rcx],ah
   140017fa1:	or     al,BYTE PTR [rax+rax*1]
   140017fa4:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140017fa8:	add    eax,0x80000654
   140017fad:	add    BYTE PTR cs:[rax],al
   140017fb0:	mov    ecx,0x6c00002e
   140017fb5:	jg     0x140017fb8
   140017fb7:	add    BYTE PTR [rcx],al
   140017fb9:	or     al,BYTE PTR [rax+rax*1]
   140017fbc:	or     dh,BYTE PTR [rax+rcx*1]
   140017fbf:	add    BYTE PTR [rdx],cl
   140017fc1:	push   rdx
   140017fc2:	(bad)  
   140017fc3:	jo     0x140017fc6
   140017fc5:	sbb    BYTE PTR [rax],cl
   140017fc7:	add    BYTE PTR [rax],bl
   140017fc9:	or     DWORD PTR fs:[rax],eax
   140017fcc:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   140017fd0:	sbb    BYTE PTR [rsi+rax*1],dh
   140017fd3:	add    BYTE PTR [rax],bl
   140017fd5:	xor    dl,BYTE PTR [rax+rsi*2]
   140017fd8:	add    DWORD PTR [rdx],ecx
   140017fda:	add    al,0x0
   140017fdc:	or     dh,BYTE PTR [rsi+rax*1]
   140017fdf:	add    BYTE PTR [rdx],cl
   140017fe1:	xor    al,BYTE PTR [rsi]
   140017fe3:	jo     0x140017fe6
   140017fe5:	(bad)  
   140017fe6:	or     al,BYTE PTR [rax]
   140017fe8:	(bad)  
   140017fe9:	xor    al,0xf
   140017feb:	add    BYTE PTR [rsi],dl
   140017fed:	xor    dl,BYTE PTR [rdx]
   140017fef:	lock adc al,ah
   140017ff2:	(bad)  
   140017ff3:	ror    BYTE PTR [rax+rax*8],1
   140017ff6:	or     dh,BYTE PTR [rax+0x9]
   140017ff9:	(bad)  
   140017ffa:	or     BYTE PTR [rax+0x1],dl
   140017ffd:	clts   
   140017fff:	add    BYTE PTR [rdi],cl
   140018001:	or     DWORD PTR fs:[rax],eax
   140018004:	sysenter 
   140018006:	or     BYTE PTR [rax],al
   140018008:	rdmsr  
   14001800a:	or     esi,DWORD PTR [rax+0x1]
   14001800d:	adc    ecx,DWORD PTR [rax]
   14001800f:	add    BYTE PTR [rbx],dl
   140018011:	push   rsp
   140018012:	lldt   WORD PTR [rbx]
   140018015:	xor    al,0xe
   140018017:	add    BYTE PTR [rbx],dl
   140018019:	xchg   edx,eax
   14001801a:	xadd   BYTE PTR [rip+0x21600c70],cl        # 0x161618c91
   140018021:	add    BYTE PTR [rax],al
   140018023:	add    BYTE PTR [rax+0x3e],ah
   140018026:	add    BYTE PTR [rax],al
   140018028:	add    al,0x3f
   14001802a:	add    BYTE PTR [rax],al
   14001802c:	rex.R add BYTE PTR [rcx],0x0
   140018030:	and    DWORD PTR [rip+0x54050002],eax        # 0x194068038
   140018036:	(bad)  
   140018037:	add    BYTE PTR [rax+0x3e],ah
   14001803a:	add    BYTE PTR [rax],al
   14001803c:	add    al,0x3f
   14001803e:	add    BYTE PTR [rax],al
   140018040:	rex.R add BYTE PTR [rcx],0x0
   140018044:	add    DWORD PTR [rbx],esi
   140018046:	or     BYTE PTR [rax],al
   140018048:	xor    eax,esp
   14001804a:	or     BYTE PTR [rax],al
   14001804c:	cs je  0x140018056
   14001804f:	add    BYTE PTR [rdx],cl
   140018051:	xor    al,0x9
   140018053:	add    BYTE PTR [rdx],cl
   140018055:	xor    al,BYTE PTR [rsi]
   140018057:	(bad)  
   140018058:	add    DWORD PTR [rdx],ecx
   14001805a:	add    al,0x0
   14001805c:	or     dh,BYTE PTR [rdi+rax*1]
   14001805f:	add    BYTE PTR [rdx],cl
   140018061:	xor    al,BYTE PTR [rsi]
   140018063:	jo     0x140018086
   140018065:	add    BYTE PTR [rax],al
   140018067:	add    BYTE PTR [rax+0x41],dh
   14001806a:	add    BYTE PTR [rax],al
   14001806c:	pushf  
   14001806d:	add    BYTE PTR [r8],al
   140018070:	xchg   esp,eax
   140018071:	add    BYTE PTR [rcx],0x0
   140018074:	and    DWORD PTR [rax+rcx*1],edx
   140018077:	add    BYTE PTR [rsp+rax*8],dl
   14001807a:	add    al,0x0
   14001807c:	pcmpgtb mm0,QWORD PTR [rip+0xc540a00]        # 0x14c558a83
   140018083:	add    BYTE PTR [rip+0x70000b34],al        # 0x1b0018bbd
   140018089:	add    BYTE PTR [r8],al
   14001808c:	pushf  
   14001808d:	add    BYTE PTR [r8],al
   140018090:	xchg   esp,eax
   140018091:	add    BYTE PTR [rcx],0x0
   140018094:	add    DWORD PTR [rdx],ecx
   140018096:	add    al,0x0
   140018098:	or     dl,BYTE PTR [rdx+0x6]
   14001809b:	loopne 0x1400180a1
   14001809d:	rol    BYTE PTR [rdx],1
   14001809f:	jo     0x1400180a2
   1400180a1:	sbb    eax,DWORD PTR [rsi]
   1400180a3:	add    BYTE PTR [rbx],bl
   1400180a5:	xor    al,0xe
   1400180a7:	add    BYTE PTR [rbx],bl
   1400180a9:	jb     0x1400180c2
   1400180ab:	jo     0x1400180c3
   1400180ad:	(bad)  
   1400180ae:	adc    eax,0x2150
   1400180b3:	add    BYTE PTR [rax],ah
   1400180b5:	add    BYTE PTR [r8],r8b
   1400180b8:	push   rdi
   1400180b9:	add    BYTE PTR [r8],r8b
   1400180bc:	xor    BYTE PTR [rcx+0x210001],al
   1400180c2:	add    al,BYTE PTR [rax]
   1400180c4:	add    ah,al
   1400180c6:	sbb    DWORD PTR [rax],eax
   1400180c8:	push   rdi
   1400180c9:	add    BYTE PTR [r8],r8b
   1400180cc:	jnp    0x140018114
   1400180ce:	add    BYTE PTR [rax],al
   1400180d0:	sbb    al,0x81
   1400180d2:	add    DWORD PTR [rax],eax
   1400180d4:	and    DWORD PTR [rax],eax
   1400180d6:	add    BYTE PTR [rax],al
   1400180d8:	push   rdi
   1400180d9:	add    BYTE PTR [r8],r8b
   1400180dc:	jnp    0x140018124
   1400180de:	add    BYTE PTR [rax],al
   1400180e0:	sbb    al,0x81
   1400180e2:	add    DWORD PTR [rax],eax
   1400180e4:	and    DWORD PTR [rax],eax
   1400180e6:	add    BYTE PTR [rax],al
   1400180e8:	jnp    0x140018130
   1400180ea:	add    BYTE PTR [rax],al
   1400180ec:	add    DWORD PTR [rsi+0x0],0x0
   1400180f0:	or     BYTE PTR [rcx+0x8210001],al
   1400180f6:	add    al,BYTE PTR [rax]
   1400180f8:	or     ah,dl
   1400180fa:	sbb    BYTE PTR [rax],al
   1400180fc:	jnp    0x140018144
   1400180fe:	add    BYTE PTR [rax],al
   140018100:	add    DWORD PTR [rsi+0x0],0x0
   140018104:	or     BYTE PTR [rcx+0x8210001],al
   14001810a:	add    al,BYTE PTR [rax]
   14001810c:	or     ah,al
   14001810e:	sbb    DWORD PTR [rax],eax
   140018110:	push   rdi
   140018111:	add    BYTE PTR [r8],r8b
   140018114:	jnp    0x14001815c
   140018116:	add    BYTE PTR [rax],al
   140018118:	sbb    al,0x81
   14001811a:	add    DWORD PTR [rax],eax
   14001811c:	and    DWORD PTR [rdx+rax*1],eax
   14001811f:	add    BYTE PTR [rsp+rsi*8],al
   140018122:	(bad)  
   140018123:	add    BYTE PTR [rax],ah
   140018125:	add    BYTE PTR [r8],r8b
   140018128:	push   rdi
   140018129:	add    BYTE PTR [r8],r8b
   14001812c:	xor    BYTE PTR [rcx+0x18010001],al
   140018132:	(bad)  
   140018133:	add    BYTE PTR [rax],bl
   140018135:	add    DWORD PTR [rdx],ebx
   140018137:	add    BYTE PTR [rcx],dl
   140018139:	loopne 0x14001814a
   14001813b:	jo     0x14001814b
   14001813d:	(bad)  
   14001813e:	or     eax,0x300c50
   140018143:	add    BYTE PTR [rcx],al
   140018145:	jnp    0x14001814e
   140018147:	add    BYTE PTR [rbx+0x74],bh
   14001814a:	add    al,0x0
   14001814c:	jbe    0x1400181a2
   14001814e:	or     DWORD PTR [rax],eax
   140018150:	adc    BYTE PTR [rdx+0xc],al
   140018153:	(bad)  
   140018154:	or     esi,DWORD PTR [rax]
   140018156:	add    BYTE PTR [rax],al
   140018158:	add    DWORD PTR [rax],ebx
   14001815a:	or     al,BYTE PTR [rax]
   14001815c:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140018160:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140018164:	sbb    BYTE PTR [rdx+rcx*1],dh
   140018167:	add    BYTE PTR [rax],bl
   140018169:	push   rdx
   14001816a:	adc    al,0xd0
   14001816c:	adc    al,al
   14001816e:	adc    BYTE PTR [rax+0x1],dh
   140018171:	sbb    cl,BYTE PTR [rdx]
   140018173:	add    BYTE PTR [rdx],bl
   140018175:	je     0x140018182
   140018177:	add    BYTE PTR [rdx],bl
   140018179:	or     al,BYTE PTR fs:[rax]
   14001817c:	sbb    dl,BYTE PTR [rcx+rcx*1+0x0]
   140018180:	sbb    dh,BYTE PTR [rax+rcx*1]
   140018183:	add    BYTE PTR [rdx],bl
   140018185:	push   rdx
   140018186:	(bad)  
   140018187:	shl    BYTE PTR [rcx],0x0
   14001818a:	add    BYTE PTR [rax],al
   14001818c:	add    BYTE PTR [rax+0x0],dl
   14001818f:	add    BYTE PTR [rdi+0x50],ah
   140018192:	add    BYTE PTR [rax],al
   140018194:	rol    BYTE PTR [rcx+0x5210001],1
   14001819a:	add    al,BYTE PTR [rax]
   14001819c:	add    eax,0x634
   1400181a1:	push   rax
   1400181a2:	add    BYTE PTR [rax],al
   1400181a4:	addr32 push rax
   1400181a6:	add    BYTE PTR [rax],al
   1400181a8:	rol    BYTE PTR [rcx+0x210001],1
   1400181ae:	add    BYTE PTR [rax],al
   1400181b0:	adc    BYTE PTR [rcx+0x0],dl
   1400181b3:	add    BYTE PTR [rdi+0x51],dh
   1400181b6:	add    BYTE PTR [rax],al
   1400181b8:	rol    BYTE PTR [rcx+0x5210001],1
   1400181be:	add    al,BYTE PTR [rax]
   1400181c0:	add    eax,0x10000634
   1400181c5:	push   rcx
   1400181c6:	add    BYTE PTR [rax],al
   1400181c8:	ja     0x14001821b
   1400181ca:	add    BYTE PTR [rax],al
   1400181cc:	rol    BYTE PTR [rcx+0x15010001],1
   1400181d2:	or     BYTE PTR [rax],al
   1400181d4:	adc    eax,0x15000974
   1400181d9:	or     BYTE PTR fs:[rax],al
   1400181dc:	adc    eax,0x15000754
   1400181e1:	xor    dl,BYTE PTR [rcx]
   1400181e3:	rol    BYTE PTR [rcx],0x1c
   1400181e6:	or     al,0x0
   1400181e8:	sbb    al,0x64
   1400181ea:	(bad)  
   1400181eb:	add    BYTE PTR [rsp+rdx*2],bl
   1400181ee:	or     eax,0xc341c00
   1400181f3:	add    BYTE PTR [rdx+rdx*2],bl
   1400181f6:	sbb    al,dh
   1400181f8:	(bad)  
   1400181f9:	loopne 0x14001820f
   1400181fb:	rcl    BYTE PTR [rdx],1
   1400181fd:	rcl    BYTE PTR [rax],0x70
   140018200:	add    DWORD PTR [rdi],ecx
   140018202:	(bad)  
   140018203:	add    BYTE PTR [rdi],cl
   140018205:	or     DWORD PTR fs:[rax],eax
   140018208:	sysenter 
   14001820a:	or     BYTE PTR [rax],al
   14001820c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001820f:	jo     0x140018232
   140018211:	add    BYTE PTR [rax],al
   140018213:	add    BYTE PTR [rax-0x2affffab],dh
   140018219:	push   rbp
   14001821a:	add    BYTE PTR [rax],al
   14001821c:	cmp    BYTE PTR [rdx+0xa210001],al
   140018222:	add    al,0x0
   140018224:	or     ah,BYTE PTR [rsp+rax*1+0x0]
   140018228:	add    eax,0xb0000534
   14001822d:	push   rbp
   14001822e:	add    BYTE PTR [rax],al
   140018230:	(bad)  
   140018231:	push   rbp
   140018232:	add    BYTE PTR [rax],al
   140018234:	cmp    BYTE PTR [rdx+0x9010001],al
   14001823a:	add    al,0x0
   14001823c:	or     DWORD PTR [rdx+0x5],edx
   14001823f:	rol    BYTE PTR [rbx],0x70
   140018242:	add    dl,BYTE PTR [rax+0x1]
   140018245:	sbb    BYTE PTR [rax+rax*1],al
   140018248:	sbb    BYTE PTR [rcx+rcx*1],dh
   14001824b:	add    BYTE PTR [rax],bl
   14001824d:	push   rdx
   14001824e:	adc    al,0x70
   140018250:	and    DWORD PTR [rax],eax
   140018252:	add    BYTE PTR [rax],al
   140018254:	rex push rdi
   140018256:	add    BYTE PTR [rax],al
   140018258:	pop    rax
   140018259:	push   rdi
   14001825a:	add    BYTE PTR [rax],al
   14001825c:	jl     0x1400181e0
   14001825e:	add    DWORD PTR [rax],eax
   140018260:	and    DWORD PTR [rsi+rax*1],ecx
   140018263:	add    BYTE PTR [rsp+rsi*2],cl
   140018266:	adc    BYTE PTR [rax],al
   140018268:	or     BYTE PTR [rcx+rdx*1+0x0],ah
   14001826c:	add    al,0x34
   14001826e:	adc    eax,0x574000
   140018273:	add    BYTE PTR [rax+0x57],bl
   140018276:	add    BYTE PTR [rax],al
   140018278:	jl     0x1400181fc
   14001827a:	add    DWORD PTR [rax],eax
   14001827c:	add    DWORD PTR [rax],ebx
   14001827e:	add    eax,DWORD PTR [rax]
   140018280:	sbb    BYTE PTR [rcx],al
   140018282:	adc    al,BYTE PTR [rax]
   140018284:	adc    DWORD PTR [rax+0x0],edx
   140018287:	add    BYTE PTR [rcx],al
   140018289:	adc    al,0x8
   14001828b:	add    BYTE PTR [rsp+riz*2],dl
   14001828e:	or     al,BYTE PTR [rax]
   140018290:	adc    al,0x54
   140018292:	or     DWORD PTR [rax],eax
   140018294:	adc    al,0x34
   140018296:	or     BYTE PTR [rax],al
   140018298:	adc    al,0x52
   14001829a:	adc    BYTE PTR [rax+0x21],dh
   14001829d:	add    BYTE PTR [rax],al
   14001829f:	add    BYTE PTR [rax+0x600005c],dh
   1400182a5:	pop    rbp
   1400182a6:	add    BYTE PTR [rax],al
   1400182a8:	rol    BYTE PTR [rdx+0x5210001],0x2
   1400182af:	add    BYTE PTR [rip+0xffffffffb0000554],al        # 0xf0018809
   1400182b5:	pop    rsp
   1400182b6:	add    BYTE PTR [rax],al
   1400182b8:	(bad)  
   1400182b9:	pop    rbp
   1400182ba:	add    BYTE PTR [rax],al
   1400182bc:	rol    BYTE PTR [rdx+0x11010001],0x4
   1400182c3:	add    BYTE PTR [rcx],dl
   1400182c5:	push   rdx
   1400182c6:	or     eax,0xb600c70
   1400182cb:	xor    BYTE PTR [rcx],al
   1400182cd:	adc    al,0x8
   1400182cf:	add    BYTE PTR [rsp+riz*2],dl
   1400182d2:	or     BYTE PTR [rax],al
   1400182d4:	adc    al,0x54
   1400182d6:	(bad)  
   1400182d7:	add    BYTE PTR [rsp+rsi*1],dl
   1400182da:	(bad)  
   1400182db:	add    BYTE PTR [rdx+rsi*1],dl
   1400182de:	adc    BYTE PTR [rax+0x1],dh
   1400182e1:	or     al,0x6
   1400182e3:	add    BYTE PTR [rsp+rsi*1],cl
   1400182e6:	(bad)  
   1400182e7:	add    BYTE PTR [rdx+rdx*4],cl
   1400182ea:	or     BYTE PTR [rax+0x7],dh
   1400182ed:	(bad)  
   1400182ee:	(bad)  
   1400182ef:	push   rax
   1400182f0:	add    DWORD PTR [rdi],ebx
   1400182f2:	or     eax,0x7a641f00
   1400182f7:	add    BYTE PTR [rdi],bl
   1400182f9:	push   rsp
   1400182fa:	jns    0x1400182fc
   1400182fc:	(bad)  
   1400182fd:	xor    al,0x78
   1400182ff:	add    BYTE PTR [rdi],bl
   140018301:	add    DWORD PTR [rdx+0x0],esi
   140018304:	sbb    al,dh
   140018306:	(bad)  
   140018307:	loopne 0x14001831d
   140018309:	rcl    BYTE PTR [rdx],1
   14001830b:	rcl    BYTE PTR [rax],0x70
   14001830e:	add    BYTE PTR [rax],al
   140018310:	add    DWORD PTR [rdx],edx
   140018312:	(bad)  
   140018313:	add    BYTE PTR [rdx],dl
   140018315:	fs adc eax,0x14341200
   14001831b:	add    BYTE PTR [rdx],dl
   14001831d:	add    DWORD PTR [rdx],edx
   14001831f:	add    BYTE PTR [rbx],cl
   140018321:	jo     0x140018323
   140018323:	add    BYTE PTR [rcx],al
   140018325:	or     eax,DWORD PTR es:[rax]
   140018328:	es xor al,0x4c
   14001832b:	add    BYTE PTR [rsi],ah
   14001832d:	add    DWORD PTR [rax+rax*1+0x1f],eax
   140018331:	lock sbb eax,0x19d01be0
   140018337:	rcl    BYTE PTR [rdi],0x70
   14001833a:	(bad)  
   14001833b:	(bad)  
   14001833c:	adc    eax,0x21000050
   140018341:	add    BYTE PTR [rax],al
   140018343:	add    BYTE PTR [rax-0x7b],al
   140018346:	add    BYTE PTR [rax],al
   140018348:	test   al,0x85
   14001834a:	add    BYTE PTR [rax],al
   14001834c:	add    DWORD PTR fs:[rcx],0x0
   140018350:	and    DWORD PTR [rip+0x34050002],eax        # 0x174068358
   140018356:	or     BYTE PTR [rax],al
   140018358:	rex test DWORD PTR [rax],eax
   14001835b:	add    BYTE PTR [rax+0x64000085],ch
   140018361:	add    DWORD PTR [rcx],0x0
   140018364:	add    DWORD PTR [rbx],edx
   140018366:	or     BYTE PTR [rax],al
   140018368:	adc    esp,DWORD PTR [rdx+rcx*1+0x0]
   14001836c:	adc    edx,DWORD PTR [rcx+rcx*1+0x0]
   140018370:	adc    esi,DWORD PTR [rdx]
   140018372:	(bad)  
   140018374:	or     eax,0x1700bc0
   140018379:	(bad)  
   14001837a:	add    al,BYTE PTR [rax]
   14001837c:	(bad)  
   14001837d:	xor    al,BYTE PTR [rdx]
   14001837f:	xor    BYTE PTR [rcx],ah
   140018381:	add    BYTE PTR [rax],al
   140018383:	add    al,al
   140018385:	xchg   BYTE PTR [rax],al
   140018387:	add    ch,cl
   140018389:	xchg   BYTE PTR [rax],al
   14001838b:	add    ah,ch
   14001838d:	add    DWORD PTR [rcx],0x0
   140018390:	and    DWORD PTR [rax],eax
   140018392:	add    BYTE PTR [rax],al
   140018394:	int    0x86
   140018396:	add    BYTE PTR [rax],al
   140018398:	rol    BYTE PTR [rsi-0x7c280000],cl
   14001839e:	add    DWORD PTR [rax],eax
   1400183a0:	and    DWORD PTR [rax],eax
   1400183a2:	add    BYTE PTR [rax],al
   1400183a4:	rol    BYTE PTR [rsi-0x78640000],cl
   1400183aa:	add    BYTE PTR [rax],al
   1400183ac:	(bad)
   1400183b0:	and    DWORD PTR [rip+0x54050002],eax        # 0x1940683b8
   1400183b6:	or     al,0x0
   1400183b8:	rol    BYTE PTR [rsi-0x78640000],cl
   1400183be:	add    BYTE PTR [rax],al
   1400183c0:	(bad)
   1400183c4:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40683cc
   1400183ca:	or     eax,0x86cd00
   1400183cf:	add    dl,dl
   1400183d1:	xchg   BYTE PTR [rax],al
   1400183d3:	add    al,bl
   1400183d5:	add    DWORD PTR [rcx],0x0
   1400183d8:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740683e0
   1400183de:	or     eax,DWORD PTR [rax]
   1400183e0:	rol    BYTE PTR [rsi-0x79330000],0x0
   1400183e7:	add    ah,ch
   1400183e9:	add    DWORD PTR [rcx],0x0
   1400183ec:	add    DWORD PTR [rdx],ecx
   1400183ee:	add    al,0x0
   1400183f0:	or     dl,BYTE PTR [rdx+0x6]
   1400183f3:	rol    BYTE PTR [rax+rax*8],1
   1400183f6:	add    dh,BYTE PTR [rax+0x21]
   1400183f9:	add    BYTE PTR [rax],al
   1400183fb:	add    al,ah
   1400183fd:	mov    WORD PTR [rax],es
   1400183ff:	add    BYTE PTR [rdi+0x3800008d],ah
   140018405:	test   BYTE PTR [rcx],al
   140018407:	add    BYTE PTR [rcx],ah
   140018409:	add    BYTE PTR [rax+rax*1],al
   14001840c:	add    ah,dh
   14001840e:	adc    eax,0x18c40000
   140018413:	add    al,ah
   140018415:	mov    WORD PTR [rax],es
   140018417:	add    BYTE PTR [rdi+0x3800008d],ah
   14001841d:	test   BYTE PTR [rcx],al
   14001841f:	add    BYTE PTR [rcx],ah
   140018421:	adc    BYTE PTR [rax+rax*1],al
   140018424:	adc    ah,dh
   140018426:	adc    eax,0x18c40800
   14001842b:	add    al,ah
   14001842d:	mov    WORD PTR [rax],es
   14001842f:	add    BYTE PTR [rdi+0x3800008d],ah
   140018435:	test   BYTE PTR [rcx],al
   140018437:	add    BYTE PTR [rcx],al
   140018439:	jns    0x140018448
   14001843b:	add    BYTE PTR [rcx+0x74],bh
   14001843e:	sbb    DWORD PTR [rax],eax
   140018440:	ins    DWORD PTR es:[rdi],dx
   140018441:	sbb    al,BYTE PTR fs:[rax]
   140018444:	(bad)  
   140018445:	in     al,0x16
   140018447:	add    BYTE PTR [rdi],dh
   140018449:	(bad)  
   14001844a:	(bad)  
   14001844b:	add    BYTE PTR [rdx],ch
   14001844d:	xor    al,0x1b
   14001844f:	add    BYTE PTR [rcx],cl
   140018451:	add    DWORD PTR [rax+rax*1],ebx
   140018454:	add    dl,BYTE PTR [rax+0x0]
   140018457:	add    BYTE PTR [rcx],al
   140018459:	adc    DWORD PTR [rsi],eax
   14001845b:	add    BYTE PTR [rcx],dl
   14001845d:	xor    al,0xc
   14001845f:	add    BYTE PTR [rcx],dl
   140018461:	push   rdx
   140018462:	or     eax,0xb600c70
   140018467:	push   rax
   140018468:	and    DWORD PTR [rax],eax
   14001846a:	add    BYTE PTR [rax],al
   14001846c:	lock cdq 
   14001846e:	add    BYTE PTR [rax],al
   140018470:	rex.WRB (bad) 
   140018472:	add    BYTE PTR [rax],al
   140018474:	add    al,0x85
   140018476:	add    DWORD PTR [rax],eax
   140018478:	and    DWORD PTR [rip+0x34050002],eax        # 0x174068480
   14001847e:	or     eax,DWORD PTR [rax]
   140018480:	lock cdq 
   140018482:	add    BYTE PTR [rax],al
   140018484:	rex.WRB (bad) 
   140018486:	add    BYTE PTR [rax],al
   140018488:	add    al,0x85
   14001848a:	add    DWORD PTR [rax],eax
   14001848c:	add    DWORD PTR [rax+rcx*1+0x0],eax
   140018490:	rex.R
   140018491:	or     eax,DWORD PTR fs:[rax]
   140018494:	adc    BYTE PTR [rdx],dh
   140018496:	or     al,0xd0
   140018498:	or     al,al
   14001849a:	or     BYTE PTR [rax+0x7],dh
   14001849d:	push   rax
   14001849e:	(bad)  
   14001849f:	xor    BYTE PTR [rcx],ah
   1400184a1:	add    BYTE PTR [rax],al
   1400184a3:	add    BYTE PTR [rax],ah
   1400184a5:	popf   
   1400184a6:	add    BYTE PTR [rax],al
   1400184a8:	jns    0x140018447
   1400184aa:	add    BYTE PTR [rax],al
   1400184ac:	rol    BYTE PTR [rcx+rax*1+0x8282100],1
   1400184b3:	add    BYTE PTR [rax],ch
   1400184b5:	je     0x1400184ed
   1400184b7:	add    BYTE PTR [rax],ah
   1400184b9:	fs (bad) 
   1400184bb:	add    BYTE PTR [rax],dl
   1400184bd:	push   rsp
   1400184be:	add    BYTE PTR ds:[rax],cl
   1400184c1:	xor    al,0x3d
   1400184c3:	add    BYTE PTR [rax],ah
   1400184c5:	popf   
   1400184c6:	add    BYTE PTR [rax],al
   1400184c8:	jns    0x140018467
   1400184ca:	add    BYTE PTR [rax],al
   1400184cc:	rol    BYTE PTR [rcx+rax*1+0x6140100],1
   1400184d3:	add    BYTE PTR [rcx+rax*1],dl
   1400184d6:	(bad)  
   1400184d7:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e190cd
   1400184dd:	rol    BYTE PTR [rdi],1
   1400184df:	shl    BYTE PTR [rcx],0x0
   1400184e2:	add    BYTE PTR [rax],al
   1400184e4:	add    BYTE PTR [rdi-0x58a30000],ah
   1400184ea:	add    BYTE PTR [rax],al
   1400184ec:	add    al,0x85
   1400184ee:	add    DWORD PTR [rax],eax
   1400184f0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740684f8
   1400184f6:	or     eax,DWORD PTR [rax]
   1400184f8:	add    BYTE PTR [rdi-0x58a30000],ah
   1400184fe:	add    BYTE PTR [rax],al
   140018500:	add    al,0x85
   140018502:	add    DWORD PTR [rax],eax
   140018504:	add    DWORD PTR [rax],ecx
   140018506:	add    al,0x0
   140018508:	or     BYTE PTR [rdx+0x4],dl
   14001850b:	jo     0x140018510
   14001850d:	(bad)  
   14001850e:	add    dl,BYTE PTR [rax+0x1]
   140018511:	sbb    eax,0x11d000a
   140018516:	adc    eax,DWORD PTR [rax]
   140018518:	(bad)  
   140018519:	lock adc al,0xe0
   14001851c:	adc    dl,al
   14001851e:	adc    al,al
   140018520:	(bad)  
   140018521:	jo     0x140018530
   140018523:	(bad)  
   140018524:	or     al,0x50
   140018526:	or     esi,DWORD PTR [rax]
   140018528:	and    DWORD PTR [rax],eax
   14001852a:	add    BYTE PTR [rax],al
   14001852c:	nop
   14001852d:	scas   al,BYTE PTR es:[rdi]
   14001852e:	add    BYTE PTR [rax],al
   140018530:	movabs eax,ds:0x21000185600000ae
   140018539:	sbb    ecx,DWORD PTR [rax+rax*1]
   14001853c:	sbb    esp,esp
   14001853e:	rex.WR add BYTE PTR [rsp+rdx*8],r10b
   140018542:	rex.WRB add BYTE PTR [r8],r10b
   140018545:	(bad)  
   140018546:	rex.WRX add BYTE PTR [rsp+r14*2],r9b
   14001854a:	rex.WRXB add BYTE PTR [r8],r9b
   14001854d:	fs push rax
   14001854f:	add    BYTE PTR [rsp+rdx*2],al
   140018552:	push   rsi
   140018553:	add    BYTE PTR [rax-0x5effff52],dl
   140018559:	scas   al,BYTE PTR es:[rdi]
   14001855a:	add    BYTE PTR [rax],al
   14001855c:	(bad)  
   14001855d:	test   DWORD PTR [rcx],eax
   14001855f:	add    BYTE PTR [rcx],al
   140018561:	adc    DWORD PTR [rax+rax*1],eax
   140018564:	adc    DWORD PTR [rcx],eax
   140018566:	push   rcx
   140018567:	add    BYTE PTR [rdx],cl
   140018569:	lock or BYTE PTR [rax],dh
   14001856c:	and    DWORD PTR [rax],eax
   14001856e:	add    BYTE PTR [rax],al
   140018570:	(bad)  
   140018571:	mov    ebx,0xbcb50000
   140018576:	add    BYTE PTR [rax],al
   140018578:	mov    ah,0x85
   14001857a:	add    DWORD PTR [rax],eax
   14001857c:	and    DWORD PTR [rax],eax
   14001857e:	add    BYTE PTR [rax],al
   140018580:	mov    ch,0xbc
   140018582:	add    BYTE PTR [rax],al
   140018584:	int    0xbc
   140018586:	add    BYTE PTR [rax],al
   140018588:	movabs al,ds:0x800020821000185
   140018591:	in     al,0x4d
   140018593:	add    BYTE PTR [rbp-0x32ffff44],dh
   140018599:	mov    esp,0x85a00000
   14001859e:	add    DWORD PTR [rax],eax
   1400185a0:	and    DWORD PTR [rax],ecx
   1400185a2:	add    al,BYTE PTR [rax]
   1400185a4:	or     BYTE PTR [rsp+rcx*2+0x0],dl
   1400185a8:	(bad)  
   1400185a9:	mov    ebx,0xbcb50000
   1400185ae:	add    BYTE PTR [rax],al
   1400185b0:	mov    ah,0x85
   1400185b2:	add    DWORD PTR [rax],eax
   1400185b4:	add    DWORD PTR [rsi],edx
   1400185b6:	or     DWORD PTR [rax],eax
   1400185b8:	(bad)  
   1400185b9:	rex.WRXB add BYTE PTR fs:[r14],r10b
   1400185bd:	xor    al,0x4e
   1400185bf:	add    BYTE PTR [rsi],dl
   1400185c1:	add    DWORD PTR [rax+0x0],ecx
   1400185c4:	(bad)  
   1400185c6:	or     eax,0x700bc0
   1400185cb:	add    BYTE PTR [rcx],ah
   1400185cd:	add    BYTE PTR [rax],al
   1400185cf:	add    BYTE PTR [rax],dl
   1400185d1:	mov    BYTE PTR [rax],0x0
   1400185d4:	sub    esi,eax
   1400185d6:	add    BYTE PTR [rax],al
   1400185d8:	xchg   BYTE PTR fs:[rcx],al
   1400185db:	add    BYTE PTR [rcx],ah
   1400185dd:	add    BYTE PTR [rsi],al
   1400185df:	add    BYTE PTR [rax],al
   1400185e1:	hlt    
   1400185e2:	rex.WR add BYTE PTR [rax],r8b
   1400185e5:	(bad)  
   1400185e6:	rex.WRB add BYTE PTR [r8],r8b
   1400185e9:	je     0x14001863a
   1400185eb:	add    BYTE PTR [rax],dl
   1400185ed:	mov    BYTE PTR [rax],0x0
   1400185f0:	sub    esi,eax
   1400185f2:	add    BYTE PTR [rax],al
   1400185f4:	xchg   BYTE PTR fs:[rcx],al
   1400185f7:	add    BYTE PTR [rcx],ah
   1400185f9:	add    BYTE PTR [rdx],al
   1400185fb:	add    BYTE PTR [rax],al
   1400185fd:	(bad)  
   1400185fe:	rex.WRX add BYTE PTR [rcx+r9*8-0x34ca0000],r11b
   140018606:	add    BYTE PTR [rax],al
   140018608:	xor    BYTE PTR [rsi+0x210001],al
   14001860e:	add    BYTE PTR [rax],al
   140018610:	pushf  
   140018611:	leave  
   140018612:	add    BYTE PTR [rax],al
   140018614:	ss retf 
   140018616:	add    BYTE PTR [rax],al
   140018618:	xor    BYTE PTR [rsi+0x8210001],al
   14001861e:	add    al,BYTE PTR [rax]
   140018620:	or     ah,al
   140018622:	rex.WRX add BYTE PTR [rcx+r9*8-0x34ca0000],r11b
   14001862a:	add    BYTE PTR [rax],al
   14001862c:	xor    BYTE PTR [rsi+0x8210001],al
   140018632:	add    al,BYTE PTR [rax]
   140018634:	or     BYTE PTR [rsp+rdx*2+0x0],dl
   140018638:	sub    esi,eax
   14001863a:	add    BYTE PTR [rax],al
   14001863c:	pushf  
   14001863d:	leave  
   14001863e:	add    BYTE PTR [rax],al
   140018640:	xchg   BYTE PTR [rcx],r8b
   140018643:	add    BYTE PTR [rcx],ah
   140018645:	adc    BYTE PTR [rax],cl
   140018647:	add    BYTE PTR [rax],dl
   140018649:	hlt    
   14001864a:	rex.WR add BYTE PTR [rsp+rdx*8],r9b
   14001864e:	rex.WRB add BYTE PTR [r8],r9b
   140018651:	je     0x1400186a2
   140018653:	add    BYTE PTR [rsp+riz*2],al
   140018656:	push   rax
   140018657:	add    BYTE PTR [rax],dl
   140018659:	mov    BYTE PTR [rax],0x0
   14001865c:	sub    esi,eax
   14001865e:	add    BYTE PTR [rax],al
   140018660:	xchg   BYTE PTR fs:[rcx],al
   140018663:	add    BYTE PTR [rcx],al
   140018665:	sbb    DWORD PTR [rax+rax*1],eax
   140018668:	sbb    DWORD PTR [rcx],eax
   14001866a:	push   rcx
   14001866b:	add    BYTE PTR [rdx],dl
   14001866d:	loopne 0x14001867f
   14001866f:	xor    BYTE PTR [rcx],ah
   140018671:	add    BYTE PTR [rax],al
   140018673:	add    BYTE PTR [rax-0x26],al
   140018676:	add    BYTE PTR [rax],al
   140018678:	popf   
   140018679:	fiadd  DWORD PTR [rax]
   14001867b:	add    BYTE PTR [rax*4+0x5210001],al
   140018682:	add    al,BYTE PTR [rax]
   140018684:	add    eax,0x40000b34
   140018689:	fiadd  DWORD PTR [rax]
   14001868b:	add    BYTE PTR [rbp+0x40000da],bl
   140018691:	test   DWORD PTR [rcx],eax
   140018693:	add    BYTE PTR [rcx],al
   140018695:	and    eax,0x3425000b
   14001869a:	outs   dx,DWORD PTR ds:[rsi]
   14001869b:	add    BYTE PTR [rip+0x1e006401],ah        # 0x15e01eaa2
   1400186a1:	lock sbb al,0xe0
   1400186a4:	sbb    dl,al
   1400186a6:	sbb    al,al
   1400186a8:	(bad)  
   1400186a9:	jo     0x1400186c0
   1400186ab:	(bad)  
   1400186ac:	adc    al,0x50
   1400186ae:	add    BYTE PTR [rax],al
   1400186b0:	add    DWORD PTR [rsp+rcx*1],ebx
   1400186b3:	add    BYTE PTR [rsp+riz*2],bl
   1400186b6:	adc    al,BYTE PTR [rax]
   1400186b8:	sbb    al,0x54
   1400186ba:	adc    DWORD PTR [rax],eax
   1400186bc:	sbb    al,0x34
   1400186be:	adc    BYTE PTR [rax],al
   1400186c0:	sbb    al,0x92
   1400186c2:	sbb    al,dh
   1400186c4:	(bad)  
   1400186c5:	loopne 0x1400186db
   1400186c7:	rcl    BYTE PTR [rdx],1
   1400186c9:	rcl    BYTE PTR [rax],0x70
   1400186cc:	add    DWORD PTR [rbx],ebx
   1400186ce:	or     eax,DWORD PTR [rax]
   1400186d0:	sbb    esi,DWORD PTR [rdi+rbp*1]
   1400186d3:	add    DWORD PTR [rbx],ebx
   1400186d5:	add    DWORD PTR [rsi],esp
   1400186d7:	add    DWORD PTR [rax+rsi*8],edx
   1400186da:	adc    ah,al
   1400186dc:	adc    al,dl
   1400186de:	(bad)  
   1400186df:	ror    BYTE PTR [rax+rsi*2],0xb
   1400186e3:	(bad)  
   1400186e4:	or     dl,BYTE PTR [rax+0x0]
   1400186e7:	add    BYTE PTR [rcx],al
   1400186e9:	sbb    BYTE PTR [rdx],cl
   1400186eb:	add    BYTE PTR [rax],bl
   1400186ed:	adc    DWORD PTR fs:[rax],eax
   1400186f0:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   1400186f4:	sbb    BYTE PTR [rdi+rcx*1],dh
   1400186f7:	add    BYTE PTR [rax],bl
   1400186f9:	xchg   edx,eax
   1400186fa:	adc    al,0xd0
   1400186fc:	adc    al,al
   1400186fe:	adc    BYTE PTR [rax+0x21],dh
   140018701:	add    BYTE PTR [rax],al
   140018703:	add    BYTE PTR [rax],dh
   140018705:	add    DWORD PTR ds:[rax],eax
   140018708:	rex.WX
   140018709:	add    DWORD PTR ds:[rax],eax
   14001870c:	adc    BYTE PTR [rdi+0x1],bh
   14001870f:	add    BYTE PTR [rcx],ah
   140018711:	add    BYTE PTR [rdx],al
   140018713:	add    BYTE PTR [rax],al
   140018715:	je     0x140018720
   140018717:	add    BYTE PTR [rax],dh
   140018719:	add    DWORD PTR ds:[rax],eax
   14001871c:	rex.WX
   14001871d:	add    DWORD PTR ds:[rax],eax
   140018720:	adc    BYTE PTR [rdi+0x1],bh
   140018723:	add    BYTE PTR [rcx],ah
   140018725:	push   rsp
   140018726:	(bad)  
   140018727:	add    BYTE PTR [rsp+rdx*2+0x8],dl
   14001872b:	add    BYTE PTR [rdi+0x34],cl
   14001872e:	(bad)  
   14001872f:	add    BYTE PTR [rip+0x30000974],al        # 0x1700190a9
   140018735:	add    DWORD PTR ds:[rax],eax
   140018738:	rex.WX
   140018739:	add    DWORD PTR ds:[rax],eax
   14001873c:	adc    BYTE PTR [rdi+0x1],bh
   14001873f:	add    BYTE PTR [rcx],ah
   140018741:	add    BYTE PTR [rax],al
   140018743:	add    al,al
   140018745:	(bad)  
   140018746:	add    DWORD PTR [rax],eax
   140018748:	(bad)  
   140018749:	(bad)  
   14001874a:	add    DWORD PTR [rax],eax
   14001874c:	js     0x1400186d1
   14001874e:	add    DWORD PTR [rax],eax
   140018750:	and    DWORD PTR [rdx],ecx
   140018752:	add    al,0x0
   140018754:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   140018758:	add    eax,0xc0000664
   14001875d:	(bad)  
   14001875e:	add    DWORD PTR [rax],eax
   140018760:	(bad)  
   140018761:	(bad)  
   140018762:	add    DWORD PTR [rax],eax
   140018764:	js     0x1400186e9
   140018766:	add    DWORD PTR [rax],eax
   140018768:	add    DWORD PTR [rax],esi
   14001876a:	or     BYTE PTR [rax],al
   14001876c:	xor    BYTE PTR [rbp+rcx*1+0x0],dl
   140018770:	or     eax,0xd000e34
   140018775:	jb     0x140018780
   140018777:	rol    BYTE PTR [rdi],0x70
   14001877a:	(bad)  
   14001877b:	(bad)  
   14001877c:	add    DWORD PTR [rax],ecx
   14001877e:	add    al,0x0
   140018780:	or     BYTE PTR [rdx+0x4],dh
   140018783:	jo     0x140018788
   140018785:	(bad)  
   140018786:	add    dh,BYTE PTR [rax]
   140018788:	and    DWORD PTR [rax],eax
   14001878a:	add    BYTE PTR [rax],al
   14001878c:	and    BYTE PTR [rbx+0x1],al
   14001878f:	add    BYTE PTR [rdx+0x43],dl
   140018792:	add    DWORD PTR [rax],eax
   140018794:	lods   al,BYTE PTR ds:[rsi]
   140018795:	xchg   DWORD PTR [rcx],eax
   140018797:	add    BYTE PTR [rcx],ah
   140018799:	add    eax,0x64050002
   14001879e:	(bad)  
   14001879f:	add    BYTE PTR [rax],ah
   1400187a1:	rex.XB add DWORD PTR [r8],eax
   1400187a4:	push   rdx
   1400187a5:	rex.XB add DWORD PTR [r8],eax
   1400187a8:	lods   al,BYTE PTR ds:[rsi]
   1400187a9:	xchg   DWORD PTR [rcx],eax
   1400187ab:	add    BYTE PTR [rcx],al
   1400187ad:	clts   
   1400187af:	add    BYTE PTR [rdi],cl
   1400187b1:	push   rsp
   1400187b2:	or     DWORD PTR [rax],eax
   1400187b4:	sysenter 
   1400187b6:	or     BYTE PTR [rax],al
   1400187b8:	rdmsr  
   1400187ba:	or     esi,DWORD PTR [rax+0x21]
   1400187bd:	add    BYTE PTR [rax],al
   1400187bf:	add    BYTE PTR [rax+0x7b000144],al
   1400187c5:	add    DWORD PTR [r8],r8d
   1400187c8:	loopne 0x140018751
   1400187ca:	add    DWORD PTR [rax],eax
   1400187cc:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x1240687d4
   1400187d2:	or     al,BYTE PTR [rax]
   1400187d4:	add    BYTE PTR [rcx+rax*1+0x0],0x7b
   1400187d9:	add    DWORD PTR [r8],r8d
   1400187dc:	loopne 0x140018765
   1400187de:	add    DWORD PTR [rax],eax
   1400187e0:	add    DWORD PTR [rip+0xffffffffa20d0007],ecx        # 0xe20e87ed
   1400187e6:	or     eax,edx
   1400187e8:	(bad)  
   1400187e9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143618c60
   1400187f0:	add    dh,BYTE PTR [rax]
   1400187f2:	add    BYTE PTR [rax],al
   1400187f4:	add    DWORD PTR [rbx],ecx
   1400187f6:	(bad)  
   1400187f7:	add    BYTE PTR [rbx],cl
   1400187f9:	xchg   edx,eax
   1400187fa:	(bad)  
   1400187fb:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143618c72
   140018802:	add    dh,BYTE PTR [rax]
   140018804:	add    DWORD PTR [rsi+rax*1],ecx
   140018807:	add    BYTE PTR [rsp+rsi*1],cl
   14001880a:	or     eax,DWORD PTR [rax]
   14001880c:	or     al,0x52
   14001880e:	or     BYTE PTR [rax+0x7],dh
   140018811:	(bad)  
   140018812:	(bad)  
   140018813:	push   rax
   140018814:	add    DWORD PTR [rdi],ecx
   140018816:	(bad)  
   140018817:	add    BYTE PTR [rdi],cl
   140018819:	or     eax,DWORD PTR fs:[rax]
   14001881c:	sysenter 
   14001881e:	or     al,BYTE PTR [rax]
   140018820:	(bad)  
   140018822:	or     esi,DWORD PTR [rax+0x21]
   140018825:	add    BYTE PTR [rax],al
   140018827:	add    al,ah
   140018829:	add    QWORD PTR [rax],r8
   14001882c:	hlt    
   14001882d:	add    QWORD PTR [r8],r8
   140018830:	rex.W mov BYTE PTR [rcx],al
   140018833:	add    BYTE PTR [rcx],ah
   140018835:	or     BYTE PTR [rdx],al
   140018837:	add    BYTE PTR [rax],cl
   140018839:	xor    al,0x1a
   14001883b:	add    al,ah
   14001883d:	add    QWORD PTR [rax],r8
   140018840:	hlt    
   140018841:	add    QWORD PTR [r8],r8
   140018844:	rex.W mov BYTE PTR [rcx],al
   140018847:	add    BYTE PTR [rcx],al
   140018849:	or     eax,DWORD PTR [rip+0x16010b00]        # 0x15602934f
   14001884f:	add    BYTE PTR [rax+rsi*2],al
   140018852:	add    esp,DWORD PTR [rax+0x2]
   140018855:	push   rax
   140018856:	add    BYTE PTR [rax],al
   140018858:	adc    DWORD PTR [rsi],eax
   14001885a:	add    al,BYTE PTR [rax]
   14001885c:	(bad)  
   14001885d:	xor    al,BYTE PTR [rdx]
   14001885f:	xor    BYTE PTR [rdx+0x1000154],dh
   140018865:	add    BYTE PTR [rax],al
   140018867:	add    bl,dl
   140018869:	push   rax
   14001886a:	add    DWORD PTR [rax],eax
   14001886c:	cmp    DWORD PTR [rcx+0x1],edx
   14001886f:	add    BYTE PTR [rdi+0x158],bh
   140018875:	add    BYTE PTR [rax],al
   140018877:	add    BYTE PTR [rcx],al
   140018879:	add    al,0x1
   14001887b:	add    BYTE PTR [rdx+riz*2],al
   14001887e:	add    BYTE PTR [rax],al
   140018880:	add    DWORD PTR [rsi],eax
   140018882:	add    al,BYTE PTR [rax]
   140018884:	(bad)  
   140018885:	xor    al,BYTE PTR [rdx]
   140018887:	push   rax
   140018888:	or     DWORD PTR [rdx],ecx
   14001888a:	add    al,0x0
   14001888c:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   140018890:	or     dh,BYTE PTR [rdx]
   140018892:	(bad)  
   140018893:	jo     0x140018847
   140018895:	push   rsp
   140018896:	add    DWORD PTR [rax],eax
   140018898:	add    DWORD PTR [rax],eax
   14001889a:	add    BYTE PTR [rax],al
   14001889c:	rex.X push rdx
   14001889e:	add    DWORD PTR [rax],eax
   1400188a0:	adc    BYTE PTR [rbx+0x1],0x0
   1400188a4:	fcomp  DWORD PTR [rax+0x1]
   1400188a7:	add    BYTE PTR [rax+0x9000153],al
   1400188ad:	(bad)  
   1400188ae:	(bad)  
   1400188af:	add    BYTE PTR [rdi],dl
   1400188b1:	xor    al,0xd
   1400188b3:	add    BYTE PTR [rdi],dl
   1400188b5:	jb     0x1400188ca
   1400188b7:	rcl    BYTE PTR [rcx],0x70
   1400188ba:	adc    BYTE PTR [rax-0x4e],ah
   1400188bd:	push   rsp
   1400188be:	add    DWORD PTR [rax],eax
   1400188c0:	add    DWORD PTR [rax],eax
   1400188c2:	add    BYTE PTR [rax],al
   1400188c4:	out    dx,eax
   1400188c5:	push   rsp
   1400188c6:	add    DWORD PTR [rax],eax
   1400188c8:	or     DWORD PTR [rbp+0x1],edx
   1400188cb:	add    ah,dh
   1400188cd:	pop    rax
   1400188ce:	add    DWORD PTR [rax],eax
   1400188d0:	or     DWORD PTR [rbp+0x1],edx
   1400188d3:	add    BYTE PTR [rcx],dl
   1400188d5:	sbb    BYTE PTR [rip+0x14621800],al        # 0x15463a0db
   1400188db:	rcl    BYTE PTR [rdx],0x70
   1400188de:	adc    DWORD PTR [rax+0x10],esp
   1400188e1:	xor    BYTE PTR [rax],al
   1400188e3:	add    BYTE PTR [rdx+0x1000154],dh
   1400188e9:	add    BYTE PTR [rax],al
   1400188eb:	add    BYTE PTR [rbx+0x55],cl
   1400188ee:	add    DWORD PTR [rax],eax
   1400188f0:	ins    BYTE PTR es:[rdi],dx
   1400188f1:	push   rbp
   1400188f2:	add    DWORD PTR [rax],eax
   1400188f4:	xor    ebx,DWORD PTR [rcx+0x1]
   1400188f7:	add    BYTE PTR [rax],al
   1400188f9:	add    BYTE PTR [rax],al
   1400188fb:	add    BYTE PTR [rcx],cl
   1400188fd:	add    al,0x1
   1400188ff:	add    BYTE PTR [rdx+rax*2],al
   140018902:	add    BYTE PTR [rax],al
   140018904:	mov    dl,0x54
   140018906:	add    DWORD PTR [rax],eax
   140018908:	add    DWORD PTR [rax],eax
   14001890a:	add    BYTE PTR [rax],al
   14001890c:	out    0x56,eax
   14001890e:	add    DWORD PTR [rax],eax
   140018910:	sbb    dl,BYTE PTR [rdi+0x1]
   140018913:	add    BYTE PTR [rax+0x59],ah
   140018916:	add    DWORD PTR [rax],eax
   140018918:	sbb    dl,BYTE PTR [rdi+0x1]
   14001891b:	add    BYTE PTR [rcx],al
   14001891d:	or     al,BYTE PTR [rax+rax*1]
   140018920:	or     dh,BYTE PTR [rax+rcx*1]
   140018923:	add    BYTE PTR [rdx],cl
   140018925:	xor    al,BYTE PTR [rsi]
   140018927:	jo     0x1400188b9
   140018929:	xchg   esp,eax
   14001892a:	add    DWORD PTR [rax],eax
	...
   140018934:	fcom   DWORD PTR [rcx+rax*1+0x16ac800]
   14001893b:	add    BYTE PTR [rax],bh
   14001893d:	xchg   ebx,eax
   14001893e:	add    DWORD PTR [rax],eax
	...
   140018948:	rex.WRX xchg rbp,rax
   14001894a:	add    DWORD PTR [rax],eax
   14001894c:	jo     0x1400189b7
   14001894e:	add    DWORD PTR [rax],eax
   140018950:	pop    rax
   140018951:	xchg   ebx,eax
   140018952:	add    DWORD PTR [rax],eax
	...
   14001895c:	(bad)  
   14001895d:	pushf  
   14001895e:	add    DWORD PTR [rax],eax
   140018960:	nop
   140018961:	imul   eax,DWORD PTR [rcx],0x18bc800
	...
   14001896f:	add    BYTE PTR [rsp+rax*8+0x1],bh
   140018973:	add    BYTE PTR [rax],al
   140018975:	(bad)  
   140018977:	add    BYTE PTR [rax],dl
   140018979:	mov    al,BYTE PTR [rcx]
	...
   140018983:	add    BYTE PTR [rax-0x35],al
   140018986:	add    DWORD PTR [rax],eax
   140018988:	rex.W (bad) 
   14001898a:	add    DWORD PTR [rax],eax
   14001898c:	loopne 0x140018918
   14001898e:	add    DWORD PTR [rax],eax
	...
   140018998:	cwde   
   140018999:	retf   
   14001899a:	add    DWORD PTR [rax],eax
   14001899c:	sbb    BYTE PTR [rcx+0x1],ah
   14001899f:	add    al,cl
   1400189a1:	mov    DWORD PTR [rcx],eax
	...
   1400189ab:	add    BYTE PTR [rax+0x1cd],bh
   1400189b1:	(bad)  
   1400189b2:	add    DWORD PTR [rax],eax
	...
   1400189c8:	sahf   
   1400189c9:	int    0x1
   1400189cb:	add    BYTE PTR [rax],al
   1400189cd:	add    BYTE PTR [rax],al
   1400189cf:	add    BYTE PTR [rax+0x1cd],cl
   1400189d5:	add    BYTE PTR [rax],al
   1400189d7:	add    BYTE PTR [rdx-0x33],dh
   1400189da:	add    DWORD PTR [rax],eax
   1400189dc:	add    BYTE PTR [rax],al
   1400189de:	add    BYTE PTR [rax],al
   1400189e0:	(bad)  
   1400189e1:	int    0x1
   1400189e3:	add    BYTE PTR [rax],al
   1400189e5:	add    BYTE PTR [rax],al
   1400189e7:	add    BYTE PTR [rax-0x33],cl
   1400189ea:	add    DWORD PTR [rax],eax
   1400189ec:	add    BYTE PTR [rax],al
   1400189ee:	add    BYTE PTR [rax],al
   1400189f0:	sub    cl,ch
   1400189f2:	add    DWORD PTR [rax],eax
   1400189f4:	add    BYTE PTR [rax],al
   1400189f6:	add    BYTE PTR [rax],al
   1400189f8:	and    cl,ch
   1400189fa:	add    DWORD PTR [rax],eax
   1400189fc:	add    BYTE PTR [rax],al
   1400189fe:	add    BYTE PTR [rax],al
   140018a00:	adc    cl,ch
   140018a02:	add    DWORD PTR [rax],eax
	...
   140018a10:	mov    eax,0x1c8
   140018a15:	add    BYTE PTR [rax],al
   140018a17:	add    BYTE PTR [rdx-0x38],ah
   140018a1a:	add    DWORD PTR [rax],eax
   140018a1c:	add    BYTE PTR [rax],al
   140018a1e:	add    BYTE PTR [rax],al
   140018a20:	es enter 0x1,0x0
   140018a25:	add    BYTE PTR [rax],al
   140018a27:	add    dh,bl
   140018a29:	mov    DWORD PTR [rcx],0x0
   140018a2f:	add    BYTE PTR [rdx+0x1c7],cl
   140018a35:	add    BYTE PTR [rax],al
   140018a37:	add    BYTE PTR [rsi-0x39],al
   140018a3a:	add    DWORD PTR [rax],eax
   140018a3c:	add    BYTE PTR [rax],al
   140018a3e:	add    BYTE PTR [rax],al
   140018a40:	cld    
   140018a41:	mov    BYTE PTR [rcx],0x0
   140018a44:	add    BYTE PTR [rax],al
   140018a46:	add    BYTE PTR [rax],al
   140018a48:	mov    edx,0x1c6
   140018a4d:	add    BYTE PTR [rax],al
   140018a4f:	add    BYTE PTR [rax-0x3a],bh
   140018a52:	add    DWORD PTR [rax],eax
   140018a54:	add    BYTE PTR [rax],al
   140018a56:	add    BYTE PTR [rax],al
   140018a58:	xor    dh,al
   140018a5a:	add    DWORD PTR [rax],eax
   140018a5c:	add    BYTE PTR [rax],al
   140018a5e:	add    BYTE PTR [rax],al
   140018a60:	(bad)
   140018a64:	add    BYTE PTR [rax],al
   140018a66:	add    BYTE PTR [rax],al
   140018a68:	mov    al,0xc5
   140018a6a:	add    DWORD PTR [rax],eax
   140018a6c:	add    BYTE PTR [rax],al
   140018a6e:	add    BYTE PTR [rax],al
   140018a70:	push   0xffffffffffffffc5
   140018a72:	add    DWORD PTR [rax],eax
   140018a74:	add    BYTE PTR [rax],al
   140018a76:	add    BYTE PTR [rax],al
   140018a78:	(bad)
   140018a7c:	add    BYTE PTR [rax],al
   140018a7e:	add    BYTE PTR [rax],al
   140018a80:	or     al,ch
   140018a82:	add    DWORD PTR [rax],eax
   140018a84:	add    BYTE PTR [rax],al
   140018a86:	add    BYTE PTR [rax],al
   140018a88:	mov    ah,0x1
   140018a8b:	add    BYTE PTR [rax],al
   140018a8d:	add    BYTE PTR [rax],al
   140018a8f:	add    BYTE PTR [rsi+0x1c4],ah
   140018a95:	add    BYTE PTR [rax],al
   140018a97:	add    BYTE PTR [rax+0x1c4],cl
   140018a9d:	add    BYTE PTR [rax],al
   140018a9f:	add    BYTE PTR [rdx],al
   140018aa1:	leave  
   140018aa2:	add    DWORD PTR [rax],eax
   140018aa4:	add    BYTE PTR [rax],al
   140018aa6:	add    BYTE PTR [rax],al
   140018aa8:	rex leave 
   140018aaa:	add    DWORD PTR [rax],eax
   140018aac:	add    BYTE PTR [rax],al
   140018aae:	add    BYTE PTR [rax],al
   140018ab0:	mov    cl,cl
   140018ab2:	add    DWORD PTR [rax],eax
   140018ab4:	add    BYTE PTR [rax],al
   140018ab6:	add    BYTE PTR [rax],al
   140018ab8:	int3   
   140018ab9:	leave  
   140018aba:	add    DWORD PTR [rax],eax
   140018abc:	add    BYTE PTR [rax],al
   140018abe:	add    BYTE PTR [rax],al
   140018ac0:	jp     0x140018a8c
   140018ac2:	add    DWORD PTR [rax],eax
   140018ac4:	add    BYTE PTR [rax],al
   140018ac6:	add    BYTE PTR [rax],al
   140018ac8:	ret    0x1ca
   140018acb:	add    BYTE PTR [rax],al
   140018acd:	add    BYTE PTR [rax],al
   140018acf:	add    dh,bh
   140018ad1:	retf   0x1
	...
   140018ae0:	(bad)  
   140018ae1:	retf   
   140018ae2:	add    DWORD PTR [rax],eax
   140018ae4:	add    BYTE PTR [rax],al
   140018ae6:	add    BYTE PTR [rax],al
   140018ae8:	push   rsi
   140018ae9:	retf   
   140018aea:	add    DWORD PTR [rax],eax
   140018aec:	add    BYTE PTR [rax],al
   140018aee:	add    BYTE PTR [rax],al
   140018af0:	rex.WR retf 
   140018af2:	add    DWORD PTR [rax],eax
   140018af4:	add    BYTE PTR [rax],al
   140018af6:	add    BYTE PTR [rax],al
   140018af8:	jo     0x140018ac5
   140018afa:	add    DWORD PTR [rax],eax
   140018afc:	add    BYTE PTR [rax],al
   140018afe:	add    BYTE PTR [rax],al
   140018b00:	(bad)  
   140018b01:	retf   
   140018b02:	add    DWORD PTR [rax],eax
   140018b04:	add    BYTE PTR [rax],al
   140018b06:	add    BYTE PTR [rax],al
   140018b08:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018b09:	retf   
   140018b0a:	add    DWORD PTR [rax],eax
   140018b0c:	add    BYTE PTR [rax],al
   140018b0e:	add    BYTE PTR [rax],al
   140018b10:	mov    esp,0x1cb
   140018b15:	add    BYTE PTR [rax],al
   140018b17:	add    dh,al
   140018b19:	retf   
   140018b1a:	add    DWORD PTR [rax],eax
   140018b1c:	add    BYTE PTR [rax],al
   140018b1e:	add    BYTE PTR [rax],al
   140018b20:	(bad)  
   140018b21:	retf   
   140018b22:	add    DWORD PTR [rax],eax
   140018b24:	add    BYTE PTR [rax],al
   140018b26:	add    BYTE PTR [rax],al
   140018b28:	out    0xcb,al
   140018b2a:	add    DWORD PTR [rax],eax
   140018b2c:	add    BYTE PTR [rax],al
   140018b2e:	add    BYTE PTR [rax],al
   140018b30:	enter  0x1cc,0x0
   140018b34:	add    BYTE PTR [rax],al
   140018b36:	add    BYTE PTR [rax],al
   140018b38:	mov    dh,0xcc
   140018b3a:	add    DWORD PTR [rax],eax
   140018b3c:	add    BYTE PTR [rax],al
   140018b3e:	add    BYTE PTR [rax],al
   140018b40:	lods   al,BYTE PTR ds:[rsi]
   140018b41:	int3   
   140018b42:	add    DWORD PTR [rax],eax
   140018b44:	add    BYTE PTR [rax],al
   140018b46:	add    BYTE PTR [rax],al
   140018b48:	movabs al,ds:0x8c000000000001cc
   140018b51:	int3   
   140018b52:	add    DWORD PTR [rax],eax
   140018b54:	add    BYTE PTR [rax],al
   140018b56:	add    BYTE PTR [rax],al
   140018b58:	jbe    0x140018b26
   140018b5a:	add    DWORD PTR [rax],eax
   140018b5c:	add    BYTE PTR [rax],al
   140018b5e:	add    BYTE PTR [rax],al
   140018b60:	push   0x1cc
   140018b65:	add    BYTE PTR [rax],al
   140018b67:	add    BYTE PTR [rsp+rcx*8+0x1],bl
   140018b6b:	add    BYTE PTR [rax],al
   140018b6d:	add    BYTE PTR [rax],al
   140018b6f:	add    BYTE PTR [rax-0x34],dl
   140018b72:	add    DWORD PTR [rax],eax
   140018b74:	add    BYTE PTR [rax],al
   140018b76:	add    BYTE PTR [rax],al
   140018b78:	rex.W int3 
   140018b7a:	add    DWORD PTR [rax],eax
   140018b7c:	add    BYTE PTR [rax],al
   140018b7e:	add    BYTE PTR [rax],al
   140018b80:	ds int3 
   140018b82:	add    DWORD PTR [rax],eax
   140018b84:	add    BYTE PTR [rax],al
   140018b86:	add    BYTE PTR [rax],al
   140018b88:	ss int3 
   140018b8a:	add    DWORD PTR [rax],eax
   140018b8c:	add    BYTE PTR [rax],al
   140018b8e:	add    BYTE PTR [rax],al
   140018b90:	sub    ah,cl
   140018b92:	add    DWORD PTR [rax],eax
   140018b94:	add    BYTE PTR [rax],al
   140018b96:	add    BYTE PTR [rax],al
   140018b98:	sbb    ah,cl
   140018b9a:	add    DWORD PTR [rax],eax
   140018b9c:	add    BYTE PTR [rax],al
   140018b9e:	add    BYTE PTR [rax],al
   140018ba0:	or     cl,ah
   140018ba2:	add    DWORD PTR [rax],eax
   140018ba4:	add    BYTE PTR [rax],al
   140018ba6:	add    BYTE PTR [rax],al
   140018ba8:	clc    
   140018ba9:	retf   
   140018baa:	add    DWORD PTR [rax],eax
   140018bac:	add    BYTE PTR [rax],al
   140018bae:	add    BYTE PTR [rax],al
   140018bb0:	fmul   st(4),st
   140018bb2:	add    DWORD PTR [rax],eax
   140018bb4:	add    BYTE PTR [rax],al
   140018bb6:	add    BYTE PTR [rax],al
   140018bb8:	out    dx,al
   140018bb9:	retf   
   140018bba:	add    DWORD PTR [rax],eax
	...
   140018bc8:	sub    ah,BYTE PTR [rax+0x1]
   140018bce:	add    BYTE PTR [rax],al
   140018bd0:	movabs al,ds:0xa062000000000001
   140018bda:	add    DWORD PTR [rax],eax
   140018bdc:	add    BYTE PTR [rax],al
   140018bde:	add    BYTE PTR [rax],al
   140018be0:	mov    BYTE PTR [rax+0x1],ah
   140018be6:	add    BYTE PTR [rax],al
   140018be8:	movabs ds:0xc8000000000001a0,al
   140018bf1:	movabs al,ds:0xa0e8000000000001
   140018bfa:	add    DWORD PTR [rax],eax
   140018bfc:	add    BYTE PTR [rax],al
   140018bfe:	add    BYTE PTR [rax],al
   140018c00:	or     al,0xa1
   140018c02:	add    DWORD PTR [rax],eax
   140018c04:	add    BYTE PTR [rax],al
   140018c06:	add    BYTE PTR [rax],al
   140018c08:	cmp    ah,BYTE PTR [rcx+0x1]
   140018c0e:	add    BYTE PTR [rax],al
   140018c10:	(bad)  
   140018c12:	add    DWORD PTR [rax],eax
   140018c14:	add    BYTE PTR [rax],al
   140018c16:	add    BYTE PTR [rax],al
   140018c18:	nop
   140018c19:	movabs eax,ds:0xa1c0000000000001
   140018c22:	add    DWORD PTR [rax],eax
   140018c24:	add    BYTE PTR [rax],al
   140018c26:	add    BYTE PTR [rax],al
   140018c28:	loopne 0x140018bcb
   140018c2a:	add    DWORD PTR [rax],eax
   140018c2c:	add    BYTE PTR [rax],al
   140018c2e:	add    BYTE PTR [rax],al
   140018c30:	and    BYTE PTR [rdx+0x1],ah
   140018c36:	add    BYTE PTR [rax],al
   140018c38:	push   rdx
   140018c39:	movabs ds:0xa26e000000000001,al
   140018c42:	add    DWORD PTR [rax],eax
   140018c44:	add    BYTE PTR [rax],al
   140018c46:	add    BYTE PTR [rax],al
   140018c48:	mov    BYTE PTR [rdx+0x1],ah
   140018c4e:	add    BYTE PTR [rax],al
   140018c50:	int3   
   140018c51:	movabs ds:0xa2f4000000000001,al
   140018c5a:	add    DWORD PTR [rax],eax
   140018c5c:	add    BYTE PTR [rax],al
   140018c5e:	add    BYTE PTR [rax],al
   140018c60:	adc    al,0xa3
   140018c62:	add    DWORD PTR [rax],eax
   140018c64:	add    BYTE PTR [rax],al
   140018c66:	add    BYTE PTR [rax],al
   140018c68:	movabs ds:0xa374000000000001,rax
   140018c72:	add    DWORD PTR [rax],eax
   140018c74:	add    BYTE PTR [rax],al
   140018c76:	add    BYTE PTR [rax],al
   140018c78:	pushf  
   140018c79:	movabs ds:0xa3c4000000000001,eax
   140018c82:	add    DWORD PTR [rax],eax
   140018c84:	add    BYTE PTR [rax],al
   140018c86:	add    BYTE PTR [rax],al
   140018c88:	call   0x140018e30
   140018c8d:	add    BYTE PTR [rax],al
   140018c8f:	add    BYTE PTR [rsi],dl
   140018c91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018c92:	add    DWORD PTR [rax],eax
   140018c94:	add    BYTE PTR [rax],al
   140018c96:	add    BYTE PTR [rax],al
   140018c98:	xor    al,0xa4
   140018c9a:	add    DWORD PTR [rax],eax
   140018c9c:	add    BYTE PTR [rax],al
   140018c9e:	add    BYTE PTR [rax],al
   140018ca0:	push   rax
   140018ca1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018ca2:	add    DWORD PTR [rax],eax
   140018ca4:	add    BYTE PTR [rax],al
   140018ca6:	add    BYTE PTR [rax],al
   140018ca8:	outs   dx,BYTE PTR ds:[rsi]
   140018ca9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018caa:	add    DWORD PTR [rax],eax
   140018cac:	add    BYTE PTR [rax],al
   140018cae:	add    BYTE PTR [rax],al
   140018cb0:	nop
   140018cb1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018cb2:	add    DWORD PTR [rax],eax
   140018cb4:	add    BYTE PTR [rax],al
   140018cb6:	add    BYTE PTR [rax],al
   140018cb8:	mov    ah,0xa4
   140018cba:	add    DWORD PTR [rax],eax
   140018cbc:	add    BYTE PTR [rax],al
   140018cbe:	add    BYTE PTR [rax],al
   140018cc0:	(bad)  
   140018cc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018cc2:	add    DWORD PTR [rax],eax
   140018cc4:	add    BYTE PTR [rax],al
   140018cc6:	add    BYTE PTR [rax],al
   140018cc8:	adc    ah,BYTE PTR [rbp+0x1]
   140018cce:	add    BYTE PTR [rax],al
   140018cd0:	xor    al,0xa5
   140018cd2:	add    DWORD PTR [rax],eax
   140018cd4:	add    BYTE PTR [rax],al
   140018cd6:	add    BYTE PTR [rax],al
   140018cd8:	jo     0x140018c7f
   140018cda:	add    DWORD PTR [rax],eax
   140018cdc:	add    BYTE PTR [rax],al
   140018cde:	add    BYTE PTR [rax],al
   140018ce0:	xchg   esi,eax
   140018ce1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018ce2:	add    DWORD PTR [rax],eax
   140018ce4:	add    BYTE PTR [rax],al
   140018ce6:	add    BYTE PTR [rax],al
   140018ce8:	int3   
   140018ce9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018cea:	add    DWORD PTR [rax],eax
   140018cec:	add    BYTE PTR [rax],al
   140018cee:	add    BYTE PTR [rax],al
   140018cf0:	hlt    
   140018cf1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018cf2:	add    DWORD PTR [rax],eax
   140018cf4:	add    BYTE PTR [rax],al
   140018cf6:	add    BYTE PTR [rax],al
   140018cf8:	cmp    al,0xa6
   140018cfa:	add    DWORD PTR [rax],eax
   140018cfc:	add    BYTE PTR [rax],al
   140018cfe:	add    BYTE PTR [rax],al
   140018d00:	push   rsi
   140018d01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018d02:	add    DWORD PTR [rax],eax
   140018d04:	add    BYTE PTR [rax],al
   140018d06:	add    BYTE PTR [rax],al
   140018d08:	mov    BYTE PTR [rsi+0x1],ah
   140018d0e:	add    BYTE PTR [rax],al
   140018d10:	mov    ah,0xa6
   140018d12:	add    DWORD PTR [rax],eax
   140018d14:	add    BYTE PTR [rax],al
   140018d16:	add    BYTE PTR [rax],al
   140018d18:	fsub   DWORD PTR [rsi+0x1]
   140018d1e:	add    BYTE PTR [rax],al
   140018d20:	cli    
   140018d21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018d22:	add    DWORD PTR [rax],eax
   140018d24:	add    BYTE PTR [rax],al
   140018d26:	add    BYTE PTR [rax],al
   140018d28:	and    al,0xa7
   140018d2a:	add    DWORD PTR [rax],eax
   140018d2c:	add    BYTE PTR [rax],al
   140018d2e:	add    BYTE PTR [rax],al
   140018d30:	rex.RX cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018d32:	add    DWORD PTR [rax],eax
   140018d34:	add    BYTE PTR [rax],al
   140018d36:	add    BYTE PTR [rax],al
   140018d38:	push   0x1a7
   140018d3d:	add    BYTE PTR [rax],al
   140018d3f:	add    BYTE PTR [rsi+0x1a7],al
   140018d45:	add    BYTE PTR [rax],al
   140018d47:	add    BYTE PTR [rdi+riz*4+0x1],ch
   140018d4e:	add    BYTE PTR [rax],al
   140018d50:	shl    BYTE PTR [rdi+0x1],1
   140018d56:	add    BYTE PTR [rax],al
   140018d58:	cli    
   140018d59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018d5a:	add    DWORD PTR [rax],eax
   140018d5c:	add    BYTE PTR [rax],al
   140018d5e:	add    BYTE PTR [rax],al
   140018d60:	sbb    ch,BYTE PTR [rax+0x1]
   140018d66:	add    BYTE PTR [rax],al
   140018d68:	cmp    BYTE PTR [rax+0x1],ch
   140018d6e:	add    BYTE PTR [rax],al
   140018d70:	pop    rax
   140018d71:	test   al,0x1
   140018d73:	add    BYTE PTR [rax],al
   140018d75:	add    BYTE PTR [rax],al
   140018d77:	add    BYTE PTR [rax+rbp*4+0x1],al
   140018d7e:	add    BYTE PTR [rax],al
   140018d80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018d81:	test   al,0x1
   140018d83:	add    BYTE PTR [rax],al
   140018d85:	add    BYTE PTR [rax],al
   140018d87:	add    dl,cl
   140018d89:	test   al,0x1
   140018d8b:	add    BYTE PTR [rax],al
   140018d8d:	add    BYTE PTR [rax],al
   140018d8f:	add    al,ch
   140018d91:	test   al,0x1
   140018d93:	add    BYTE PTR [rax],al
   140018d95:	add    BYTE PTR [rax],al
   140018d97:	add    BYTE PTR [rsi],al
   140018d99:	test   eax,0x1
   140018d9e:	add    BYTE PTR [rax],al
   140018da0:	es test eax,0x1
   140018da6:	add    BYTE PTR [rax],al
   140018da8:	rex.R test eax,0x1
   140018dae:	add    BYTE PTR [rax],al
   140018db0:	mov    BYTE PTR [rcx+0x1],ch
   140018db6:	add    BYTE PTR [rax],al
   140018db8:	movabs ds:0xba000000000001a9,al
   140018dc1:	test   eax,0x1
   140018dc6:	add    BYTE PTR [rax],al
   140018dc8:	repnz test eax,0x1
   140018dce:	add    BYTE PTR [rax],al
   140018dd0:	(bad)  
   140018dd1:	stos   BYTE PTR es:[rdi],al
   140018dd2:	add    DWORD PTR [rax],eax
   140018dd4:	add    BYTE PTR [rax],al
   140018dd6:	add    BYTE PTR [rax],al
   140018dd8:	cmp    BYTE PTR [rdx+0x1],ch
   140018dde:	add    BYTE PTR [rax],al
   140018de0:	pop    rsp
   140018de1:	stos   BYTE PTR es:[rdi],al
   140018de2:	add    DWORD PTR [rax],eax
   140018de4:	add    BYTE PTR [rax],al
   140018de6:	add    BYTE PTR [rax],al
   140018de8:	nop
   140018de9:	stos   BYTE PTR es:[rdi],al
   140018dea:	add    DWORD PTR [rax],eax
   140018dec:	add    BYTE PTR [rax],al
   140018dee:	add    BYTE PTR [rax],al
   140018df0:	mov    dh,0xaa
   140018df2:	add    DWORD PTR [rax],eax
   140018df4:	add    BYTE PTR [rax],al
   140018df6:	add    BYTE PTR [rax],al
   140018df8:	loopne 0x140018da4
   140018dfa:	add    DWORD PTR [rax],eax
   140018dfc:	add    BYTE PTR [rax],al
   140018dfe:	add    BYTE PTR [rax],al
   140018e00:	add    ch,BYTE PTR [rbx+0x1]
   140018e06:	add    BYTE PTR [rax],al
   140018e08:	sub    ch,BYTE PTR [rbx+0x1]
   140018e0e:	add    BYTE PTR [rax],al
   140018e10:	push   rax
   140018e11:	stos   DWORD PTR es:[rdi],eax
   140018e12:	add    DWORD PTR [rax],eax
   140018e14:	add    BYTE PTR [rax],al
   140018e16:	add    BYTE PTR [rax],al
   140018e18:	jbe    0x140018dc5
   140018e1a:	add    DWORD PTR [rax],eax
   140018e1c:	add    BYTE PTR [rax],al
   140018e1e:	add    BYTE PTR [rax],al
   140018e20:	(bad)  
   140018e21:	stos   DWORD PTR es:[rdi],eax
   140018e22:	add    DWORD PTR [rax],eax
   140018e24:	add    BYTE PTR [rax],al
   140018e26:	add    BYTE PTR [rax],al
   140018e28:	mov    dh,0xab
   140018e2a:	add    DWORD PTR [rax],eax
   140018e2c:	add    BYTE PTR [rax],al
   140018e2e:	add    BYTE PTR [rax],al
   140018e30:	shr    BYTE PTR [rbx+0x1],1
   140018e36:	add    BYTE PTR [rax],al
   140018e38:	adc    al,0xac
   140018e3a:	add    DWORD PTR [rax],eax
   140018e3c:	add    BYTE PTR [rax],al
   140018e3e:	add    BYTE PTR [rax],al
   140018e40:	rex.RX lods al,BYTE PTR ds:[rsi]
   140018e42:	add    DWORD PTR [rax],eax
   140018e44:	add    BYTE PTR [rax],al
   140018e46:	add    BYTE PTR [rax],al
   140018e48:	(bad)  
   140018e49:	lods   al,BYTE PTR ds:[rsi]
   140018e4a:	add    DWORD PTR [rax],eax
   140018e4c:	add    BYTE PTR [rax],al
   140018e4e:	add    BYTE PTR [rax],al
   140018e50:	(bad)  
   140018e51:	lods   al,BYTE PTR ds:[rsi]
   140018e52:	add    DWORD PTR [rax],eax
   140018e54:	add    BYTE PTR [rax],al
   140018e56:	add    BYTE PTR [rax],al
   140018e58:	retf   0x1ac
   140018e5b:	add    BYTE PTR [rax],al
   140018e5d:	add    BYTE PTR [rax],al
   140018e5f:	add    dl,bh
   140018e61:	lods   al,BYTE PTR ds:[rsi]
   140018e62:	add    DWORD PTR [rax],eax
   140018e64:	add    BYTE PTR [rax],al
   140018e66:	add    BYTE PTR [rax],al
   140018e68:	and    BYTE PTR [rbp+0x1],ch
   140018e6e:	add    BYTE PTR [rax],al
   140018e70:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   140018e72:	add    DWORD PTR [rax],eax
   140018e74:	add    BYTE PTR [rax],al
   140018e76:	add    BYTE PTR [rax],al
   140018e78:	jb     0x140018e27
   140018e7a:	add    DWORD PTR [rax],eax
   140018e7c:	add    BYTE PTR [rax],al
   140018e7e:	add    BYTE PTR [rax],al
   140018e80:	cli    
   140018e81:	lahf   
   140018e82:	add    DWORD PTR [rax],eax
   140018e84:	add    BYTE PTR [rax],al
   140018e86:	add    BYTE PTR [rax],al
   140018e88:	(bad)  
   140018e89:	scas   al,BYTE PTR es:[rdi]
   140018e8a:	add    DWORD PTR [rax],eax
   140018e8c:	add    BYTE PTR [rax],al
   140018e8e:	add    BYTE PTR [rax],al
   140018e90:	push   rax
   140018e91:	scas   al,BYTE PTR es:[rdi]
   140018e92:	add    DWORD PTR [rax],eax
   140018e94:	add    BYTE PTR [rax],al
   140018e96:	add    BYTE PTR [rax],al
   140018e98:	jl     0x140018e48
   140018e9a:	add    DWORD PTR [rax],eax
   140018e9c:	add    BYTE PTR [rax],al
   140018e9e:	add    BYTE PTR [rax],al
   140018ea0:	nop
   140018ea1:	scas   al,BYTE PTR es:[rdi]
   140018ea2:	add    DWORD PTR [rax],eax
   140018ea4:	add    BYTE PTR [rax],al
   140018ea6:	add    BYTE PTR [rax],al
   140018ea8:	mov    esi,0x1ae
   140018ead:	add    BYTE PTR [rax],al
   140018eaf:	add    ah,bh
   140018eb1:	scas   al,BYTE PTR es:[rdi]
   140018eb2:	add    DWORD PTR [rax],eax
   140018eb4:	add    BYTE PTR [rax],al
   140018eb6:	add    BYTE PTR [rax],al
   140018eb8:	(bad)  
   140018eb9:	scas   eax,DWORD PTR es:[rdi]
   140018eba:	add    DWORD PTR [rax],eax
   140018ebc:	add    BYTE PTR [rax],al
   140018ebe:	add    BYTE PTR [rax],al
   140018ec0:	scas   rax,QWORD PTR es:[rdi]
   140018ec2:	add    DWORD PTR [rax],eax
   140018ec4:	add    BYTE PTR [rax],al
   140018ec6:	add    BYTE PTR [rax],al
   140018ec8:	(bad)  
   140018ec9:	scas   eax,DWORD PTR es:[rdi]
   140018eca:	add    DWORD PTR [rax],eax
   140018ecc:	add    BYTE PTR [rax],al
   140018ece:	add    BYTE PTR [rax],al
   140018ed0:	stos   BYTE PTR es:[rdi],al
   140018ed1:	scas   eax,DWORD PTR es:[rdi]
   140018ed2:	add    DWORD PTR [rax],eax
   140018ed4:	add    BYTE PTR [rax],al
   140018ed6:	add    BYTE PTR [rax],al
   140018ed8:	shr    BYTE PTR [rdi+0x1],cl
   140018ede:	add    BYTE PTR [rax],al
   140018ee0:	add    BYTE PTR [rax+0x1],dh
   140018ee6:	add    BYTE PTR [rax],al
   140018ee8:	sub    dh,BYTE PTR [rax+0x1]
   140018eee:	add    BYTE PTR [rax],al
   140018ef0:	rex.WR mov al,0x1
   140018ef3:	add    BYTE PTR [rax],al
   140018ef5:	add    BYTE PTR [rax],al
   140018ef7:	add    BYTE PTR [rax+rsi*4+0x1],ah
   140018efb:	add    BYTE PTR [rax],al
   140018efd:	add    BYTE PTR [rax],al
   140018eff:	add    BYTE PTR [rax+rsi*4+0x1],bh
   140018f03:	add    BYTE PTR [rax],al
   140018f05:	add    BYTE PTR [rax],al
   140018f07:	add    dh,bl
   140018f09:	lahf   
   140018f0a:	add    DWORD PTR [rax],eax
   140018f0c:	add    BYTE PTR [rax],al
   140018f0e:	add    BYTE PTR [rax],al
   140018f10:	add    dh,BYTE PTR [rcx+0x1]
   140018f16:	add    BYTE PTR [rax],al
   140018f18:	es mov cl,0x1
   140018f1b:	add    BYTE PTR [rax],al
   140018f1d:	add    BYTE PTR [rax],al
   140018f1f:	add    BYTE PTR [rdx],bh
   140018f21:	mov    cl,0x1
   140018f23:	add    BYTE PTR [rax],al
   140018f25:	add    BYTE PTR [rax],al
   140018f27:	add    BYTE PTR [rsi-0x4f],ah
   140018f2a:	add    DWORD PTR [rax],eax
   140018f2c:	add    BYTE PTR [rax],al
   140018f2e:	add    BYTE PTR [rax],al
   140018f30:	nop
   140018f31:	mov    cl,0x1
   140018f33:	add    BYTE PTR [rax],al
   140018f35:	add    BYTE PTR [rax],al
   140018f37:	add    BYTE PTR [rax+0x1b1],bh
   140018f3d:	add    BYTE PTR [rax],al
   140018f3f:	add    dh,bl
   140018f41:	mov    cl,0x1
   140018f43:	add    BYTE PTR [rax],al
   140018f45:	add    BYTE PTR [rax],al
   140018f47:	add    BYTE PTR [rax],bl
   140018f49:	mov    dl,0x1
   140018f4b:	add    BYTE PTR [rax],al
   140018f4d:	add    BYTE PTR [rax],al
   140018f4f:	add    BYTE PTR [rdx-0x4e],al
   140018f52:	add    DWORD PTR [rax],eax
   140018f54:	add    BYTE PTR [rax],al
   140018f56:	add    BYTE PTR [rax],al
   140018f58:	(bad)  
   140018f5a:	add    DWORD PTR [rax],eax
   140018f5c:	add    BYTE PTR [rax],al
   140018f5e:	add    BYTE PTR [rax],al
   140018f60:	mov    esp,0x1b2
   140018f65:	add    BYTE PTR [rax],al
   140018f67:	add    ah,bh
   140018f69:	mov    dl,0x1
   140018f6b:	add    BYTE PTR [rax],al
   140018f6d:	add    BYTE PTR [rax],al
   140018f6f:	add    BYTE PTR [rbx+rsi*4],bh
   140018f72:	add    DWORD PTR [rax],eax
   140018f74:	add    BYTE PTR [rax],al
   140018f76:	add    BYTE PTR [rax],al
   140018f78:	pop    rsi
   140018f79:	mov    bl,0x1
   140018f7b:	add    BYTE PTR [rax],al
   140018f7d:	add    BYTE PTR [rax],al
   140018f7f:	add    BYTE PTR [rdx+0x1b3],al
   140018f85:	add    BYTE PTR [rax],al
   140018f87:	add    BYTE PTR [rsi+0x1b3],ch
   140018f8d:	add    BYTE PTR [rax],al
   140018f8f:	add    dl,bl
   140018f91:	mov    bl,0x1
   140018f93:	add    BYTE PTR [rax],al
   140018f95:	add    BYTE PTR [rax],al
   140018f97:	add    BYTE PTR [rsi],cl
   140018f99:	mov    ah,0x1
   140018f9b:	add    BYTE PTR [rax],al
   140018f9d:	add    BYTE PTR [rax],al
   140018f9f:	add    BYTE PTR [rsp+rsi*4+0x1],al
   140018fa3:	add    BYTE PTR [rax],al
   140018fa5:	add    BYTE PTR [rax],al
   140018fa7:	add    BYTE PTR [rsp+rsi*4+0x1],dh
   140018fab:	add    BYTE PTR [rax],al
   140018fad:	add    BYTE PTR [rax],al
   140018faf:	add    BYTE PTR [rax+0x1b4],bl
   140018fb5:	add    BYTE PTR [rax],al
   140018fb7:	add    BYTE PTR [rsi+0x1b4],bh
   140018fbd:	add    BYTE PTR [rax],al
   140018fbf:	add    ah,ch
   140018fc1:	mov    ah,0x1
   140018fc3:	add    BYTE PTR [rax],al
   140018fc5:	add    BYTE PTR [rax],al
   140018fc7:	add    BYTE PTR [rsi*4+0x1],cl
   140018fce:	add    BYTE PTR [rax],al
   140018fd0:	xor    al,0xb5
   140018fd2:	add    DWORD PTR [rax],eax
   140018fd4:	add    BYTE PTR [rax],al
   140018fd6:	add    BYTE PTR [rax],al
   140018fd8:	pop    rax
   140018fd9:	mov    ch,0x1
   140018fdb:	add    BYTE PTR [rax],al
   140018fdd:	add    BYTE PTR [rax],al
   140018fdf:	add    BYTE PTR [rbp+rsi*4+0x1],bh
   140018fe3:	add    BYTE PTR [rax],al
   140018fe5:	add    BYTE PTR [rax],al
   140018fe7:	add    BYTE PTR [rdx+0x1b5],dh
   140018fed:	add    BYTE PTR [rax],al
   140018fef:	add    dl,bl
   140018ff1:	mov    ch,0x1
   140018ff3:	add    BYTE PTR [rax],al
   140018ff5:	add    BYTE PTR [rax],al
   140018ff7:	add    dh,ch
   140018ff9:	mov    ch,0x1
   140018ffb:	add    BYTE PTR [rax],al
   140018ffd:	add    BYTE PTR [rax],al
   140018fff:	add    BYTE PTR [rax],ah
   140019001:	mov    dh,0x1
   140019003:	add    BYTE PTR [rax],al
   140019005:	add    BYTE PTR [rax],al
   140019007:	add    BYTE PTR [rax-0x4a],cl
   14001900a:	add    DWORD PTR [rax],eax
   14001900c:	add    BYTE PTR [rax],al
   14001900e:	add    BYTE PTR [rax],al
   140019010:	jb     0x140018fc8
   140019012:	add    DWORD PTR [rax],eax
   140019014:	add    BYTE PTR [rax],al
   140019016:	add    BYTE PTR [rax],al
   140019018:	xchg   edx,eax
   140019019:	mov    dh,0x1
   14001901b:	add    BYTE PTR [rax],al
   14001901d:	add    BYTE PTR [rax],al
   14001901f:	add    dl,al
   140019021:	mov    dh,0x1
   140019023:	add    BYTE PTR [rax],al
   140019025:	add    BYTE PTR [rax],al
   140019027:	add    al,ah
   140019029:	mov    dh,0x1
   14001902b:	add    BYTE PTR [rax],al
   14001902d:	add    BYTE PTR [rax],al
   14001902f:	add    dh,bh
   140019031:	mov    dh,0x1
   140019033:	add    BYTE PTR [rax],al
   140019035:	add    BYTE PTR [rax],al
   140019037:	add    BYTE PTR [rsi],bh
   140019039:	mov    bh,0x1
   14001903b:	add    BYTE PTR [rax],al
   14001903d:	add    BYTE PTR [rax],al
   14001903f:	add    BYTE PTR [rsi-0x49],bl
   140019042:	add    DWORD PTR [rax],eax
   140019044:	add    BYTE PTR [rax],al
   140019046:	add    BYTE PTR [rax],al
   140019048:	xor    BYTE PTR [rdi+0x1],0x0
   14001904f:	add    BYTE PTR [rsi+0x1b7],dl
   140019055:	add    BYTE PTR [rax],al
   140019057:	add    BYTE PTR [rax+0x1b7],dh
   14001905d:	add    BYTE PTR [rax],al
   14001905f:	add    dh,dl
   140019061:	mov    bh,0x1
   140019063:	add    BYTE PTR [rax],al
   140019065:	add    BYTE PTR [rax],al
   140019067:	add    BYTE PTR [rax+rdi*4],ch
   14001906a:	add    DWORD PTR [rax],eax
   14001906c:	add    BYTE PTR [rax],al
   14001906e:	add    BYTE PTR [rax],al
   140019070:	rex.WR movabs rax,0xb870000000000001
   14001907a:	add    DWORD PTR [rax],eax
   14001907c:	add    BYTE PTR [rax],al
   14001907e:	add    BYTE PTR [rax],al
   140019080:	xchg   edx,eax
   140019081:	mov    eax,0x1
   140019086:	add    BYTE PTR [rax],al
   140019088:	mov    esp,0x1b8
   14001908d:	add    BYTE PTR [rax],al
   14001908f:	add    dh,bl
   140019091:	mov    eax,0x1
   140019096:	add    BYTE PTR [rax],al
   140019098:	add    bh,BYTE PTR [rcx+0x1]
   14001909e:	add    BYTE PTR [rax],al
   1400190a0:	cs mov ecx,0x1
   1400190a6:	add    BYTE PTR [rax],al
   1400190a8:	movabs rcx,0xb96a000000000001
   1400190b2:	add    DWORD PTR [rax],eax
   1400190b4:	add    BYTE PTR [rax],al
   1400190b6:	add    BYTE PTR [rax],al
   1400190b8:	mov    bh,BYTE PTR [rcx+0x1]
   1400190be:	add    BYTE PTR [rax],al
   1400190c0:	movabs al,ds:0xc0000000000001b9
   1400190c9:	mov    ecx,0x1
   1400190ce:	add    BYTE PTR [rax],al
   1400190d0:	out    dx,al
   1400190d1:	mov    ecx,0x1
   1400190d6:	add    BYTE PTR [rax],al
   1400190d8:	(bad)  
   1400190d9:	mov    edx,0x1
   1400190de:	add    BYTE PTR [rax],al
   1400190e0:	cmp    al,0xba
   1400190e2:	add    DWORD PTR [rax],eax
   1400190e4:	add    BYTE PTR [rax],al
   1400190e6:	add    BYTE PTR [rax],al
   1400190e8:	pop    rsi
   1400190e9:	mov    edx,0x1
   1400190ee:	add    BYTE PTR [rax],al
   1400190f0:	mov    WORD PTR [rdx+0x1],?
   1400190f6:	add    BYTE PTR [rax],al
   1400190f8:	mov    dl,0xba
   1400190fa:	add    DWORD PTR [rax],eax
   1400190fc:	add    BYTE PTR [rax],al
   1400190fe:	add    BYTE PTR [rax],al
   140019100:	in     al,dx
   140019101:	mov    edx,0x1
   140019106:	add    BYTE PTR [rax],al
   140019108:	cmp    BYTE PTR [rbx+0x1],bh
   14001910e:	add    BYTE PTR [rax],al
   140019110:	outs   dx,BYTE PTR ds:[rsi]
   140019111:	mov    ebx,0x1
   140019116:	add    BYTE PTR [rax],al
   140019118:	(bad)  
   140019119:	mov    esp,0x1
   14001911e:	add    BYTE PTR [rax],al
   140019120:	fs mov esp,0x1
   140019126:	add    BYTE PTR [rax],al
   140019128:	mov    WORD PTR [rcx+rax*1+0x0],?
   14001912f:	add    BYTE PTR [rsi+0x1bc],dh
   140019135:	add    BYTE PTR [rax],al
   140019137:	add    al,bl
   140019139:	mov    esp,0x1
   14001913e:	add    BYTE PTR [rax],al
   140019140:	hlt    
   140019141:	mov    esp,0x1
   140019146:	add    BYTE PTR [rax],al
   140019148:	sub    bh,BYTE PTR [rbp+0x1]
   14001914e:	add    BYTE PTR [rax],al
   140019150:	push   rsp
   140019151:	mov    ebp,0x1
   140019156:	add    BYTE PTR [rax],al
   140019158:	mov    BYTE PTR [rbp+0x1],bh
   14001915e:	add    BYTE PTR [rax],al
   140019160:	mov    al,0xbd
   140019162:	add    DWORD PTR [rax],eax
   140019164:	add    BYTE PTR [rax],al
   140019166:	add    BYTE PTR [rax],al
   140019168:	int3   
   140019169:	mov    ebp,0x1
   14001916e:	add    BYTE PTR [rax],al
   140019170:	idiv   BYTE PTR [rbp+0x1]
   140019176:	add    BYTE PTR [rax],al
   140019178:	pop    rax
   140019179:	mov    esi,0x1
   14001917e:	add    BYTE PTR [rax],al
   140019180:	je     0x140019140
   140019182:	add    DWORD PTR [rax],eax
   140019184:	add    BYTE PTR [rax],al
   140019186:	add    BYTE PTR [rax],al
   140019188:	test   al,0xbe
   14001918a:	add    DWORD PTR [rax],eax
   14001918c:	add    BYTE PTR [rax],al
   14001918e:	add    BYTE PTR [rax],al
   140019190:	fdivr  DWORD PTR [rsi+0x1]
   140019196:	add    BYTE PTR [rax],al
   140019198:	add    BYTE PTR [rdi+0x1],bh
   14001919e:	add    BYTE PTR [rax],al
   1400191a0:	cmp    al,0xbf
   1400191a2:	add    DWORD PTR [rax],eax
   1400191a4:	add    BYTE PTR [rax],al
   1400191a6:	add    BYTE PTR [rax],al
   1400191a8:	fs mov edi,0x1
   1400191ae:	add    BYTE PTR [rax],al
   1400191b0:	cwde   
   1400191b1:	mov    edi,0x1
   1400191b6:	add    BYTE PTR [rax],al
   1400191b8:	enter  0x1bf,0x0
   1400191bc:	add    BYTE PTR [rax],al
   1400191be:	add    BYTE PTR [rax],al
   1400191c0:	clc    
   1400191c1:	mov    edi,0x1
   1400191c6:	add    BYTE PTR [rax],al
   1400191c8:	and    al,0xc0
   1400191ca:	add    DWORD PTR [rax],eax
   1400191cc:	add    BYTE PTR [rax],al
   1400191ce:	add    BYTE PTR [rax],al
   1400191d0:	pop    rax
   1400191d1:	rol    BYTE PTR [rcx],0x0
   1400191d4:	add    BYTE PTR [rax],al
   1400191d6:	add    BYTE PTR [rax],al
   1400191d8:	mov    es,eax
   1400191da:	add    DWORD PTR [rax],eax
   1400191dc:	add    BYTE PTR [rax],al
   1400191de:	add    BYTE PTR [rax],al
   1400191e0:	mov    dl,0xc0
   1400191e2:	add    DWORD PTR [rax],eax
   1400191e4:	add    BYTE PTR [rax],al
   1400191e6:	add    BYTE PTR [rax],al
   1400191e8:	repnz rol BYTE PTR [rcx],0x0
   1400191ec:	add    BYTE PTR [rax],al
   1400191ee:	add    BYTE PTR [rax],al
   1400191f0:	or     al,0xc1
   1400191f2:	add    DWORD PTR [rax],eax
   1400191f4:	add    BYTE PTR [rax],al
   1400191f6:	add    BYTE PTR [rax],al
   1400191f8:	rol    DWORD PTR es:[rcx],0x0
   1400191fc:	add    BYTE PTR [rax],al
   1400191fe:	add    BYTE PTR [rax],al
   140019200:	rex rol DWORD PTR [rcx],0x0
   140019204:	add    BYTE PTR [rax],al
   140019206:	add    BYTE PTR [rax],al
   140019208:	pop    rsp
   140019209:	rol    DWORD PTR [rcx],0x0
   14001920c:	add    BYTE PTR [rax],al
   14001920e:	add    BYTE PTR [rax],al
   140019210:	js     0x1400191d3
   140019212:	add    DWORD PTR [rax],eax
   140019214:	add    BYTE PTR [rax],al
   140019216:	add    BYTE PTR [rax],al
   140019218:	xchg   esi,eax
   140019219:	rol    DWORD PTR [rcx],0x0
   14001921c:	add    BYTE PTR [rax],al
   14001921e:	add    BYTE PTR [rax],al
   140019220:	mov    esp,0x1c1
   140019225:	add    BYTE PTR [rax],al
   140019227:	add    al,ah
   140019229:	rol    DWORD PTR [rcx],0x0
   14001922c:	add    BYTE PTR [rax],al
   14001922e:	add    BYTE PTR [rax],al
   140019230:	add    al,dl
   140019232:	add    DWORD PTR [rax],eax
   140019234:	add    BYTE PTR [rax],al
   140019236:	add    BYTE PTR [rax],al
   140019238:	sub    al,0xc2
   14001923a:	add    DWORD PTR [rax],eax
   14001923c:	add    BYTE PTR [rax],al
   14001923e:	add    BYTE PTR [rax],al
   140019240:	pop    rax
   140019241:	ret    0x1
   140019244:	add    BYTE PTR [rax],al
   140019246:	add    BYTE PTR [rax],al
   140019248:	jl     0x14001920c
   14001924a:	add    DWORD PTR [rax],eax
   14001924c:	add    BYTE PTR [rax],al
   14001924e:	add    BYTE PTR [rax],al
   140019250:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019251:	ret    0x1
   140019254:	add    BYTE PTR [rax],al
   140019256:	add    BYTE PTR [rax],al
   140019258:	int3   
   140019259:	ret    0x1
   14001925c:	add    BYTE PTR [rax],al
   14001925e:	add    BYTE PTR [rax],al
   140019260:	loop   0x140019224
   140019262:	add    DWORD PTR [rax],eax
   140019264:	add    BYTE PTR [rax],al
   140019266:	add    BYTE PTR [rax],al
   140019268:	(bad)  
   140019269:	ret    
   14001926a:	add    DWORD PTR [rax],eax
   14001926c:	add    BYTE PTR [rax],al
   14001926e:	add    BYTE PTR [rax],al
   140019270:	ss ret 
   140019272:	add    DWORD PTR [rax],eax
   140019274:	add    BYTE PTR [rax],al
   140019276:	add    BYTE PTR [rax],al
   140019278:	pop    rsp
   140019279:	ret    
   14001927a:	add    DWORD PTR [rax],eax
   14001927c:	add    BYTE PTR [rax],al
   14001927e:	add    BYTE PTR [rax],al
   140019280:	sahf   
   140019281:	ret    
   140019282:	add    DWORD PTR [rax],eax
   140019284:	add    BYTE PTR [rax],al
   140019286:	add    BYTE PTR [rax],al
   140019288:	(bad)  
   140019289:	ret    
   14001928a:	add    DWORD PTR [rax],eax
   14001928c:	add    BYTE PTR [rax],al
   14001928e:	add    BYTE PTR [rax],al
   140019290:	pop    rsi
   140019291:	(bad)
   140019295:	add    BYTE PTR [rax],al
   140019297:	add    BYTE PTR [rsi+0x19f],bl
   14001929d:	add    BYTE PTR [rax],al
   14001929f:	add    BYTE PTR [rsi-0x61],cl
   1400192a2:	add    DWORD PTR [rax],eax
   1400192a4:	add    BYTE PTR [rax],al
   1400192a6:	add    BYTE PTR [rax],al
   1400192a8:	and    bl,BYTE PTR [rdi+0x1]
   1400192ae:	add    BYTE PTR [rax],al
   1400192b0:	clc    
   1400192b1:	sahf   
   1400192b2:	add    DWORD PTR [rax],eax
   1400192b4:	add    BYTE PTR [rax],al
   1400192b6:	add    BYTE PTR [rax],al
   1400192b8:	(bad)  
   1400192b9:	sahf   
   1400192ba:	add    DWORD PTR [rax],eax
   1400192bc:	add    BYTE PTR [rax],al
   1400192be:	add    BYTE PTR [rax],al
   1400192c0:	rex.WR sahf 
   1400192c2:	add    DWORD PTR [rax],eax
   1400192c4:	add    BYTE PTR [rax],al
   1400192c6:	add    BYTE PTR [rax],al
   1400192c8:	add    BYTE PTR [rsi+0x1],bl
   1400192ce:	add    BYTE PTR [rax],al
   1400192d0:	fcomp  DWORD PTR [rbp+0x1]
   1400192d6:	add    BYTE PTR [rax],al
   1400192d8:	cwde   
   1400192d9:	popf   
   1400192da:	add    DWORD PTR [rax],eax
   1400192dc:	add    BYTE PTR [rax],al
   1400192de:	add    BYTE PTR [rax],al
   1400192e0:	jbe    0x14001927f
   1400192e2:	add    DWORD PTR [rax],eax
   1400192e4:	add    BYTE PTR [rax],al
   1400192e6:	add    BYTE PTR [rax],al
   1400192e8:	push   rsi
   1400192e9:	popf   
   1400192ea:	add    DWORD PTR [rax],eax
   1400192ec:	add    BYTE PTR [rax],al
   1400192ee:	add    BYTE PTR [rax],al
   1400192f0:	xor    bl,BYTE PTR [rbp+0x1]
   1400192f6:	add    BYTE PTR [rax],al
   1400192f8:	or     bl,BYTE PTR [rbp+0x1]
   1400192fe:	add    BYTE PTR [rax],al
   140019300:	hlt    
   140019301:	pushf  
   140019302:	add    DWORD PTR [rax],eax
   140019304:	add    BYTE PTR [rax],al
   140019306:	add    BYTE PTR [rax],al
   140019308:	fcomp  DWORD PTR [rcx+rax*1+0x0]
   14001930f:	add    BYTE PTR [rdx+0x19c],dh
   140019315:	add    BYTE PTR [rax],al
   140019317:	add    BYTE PTR [rsi+0x19c],cl
   14001931d:	add    BYTE PTR [rax],al
   14001931f:	add    BYTE PTR [rdx+0x1b0],ah
   140019325:	add    BYTE PTR [rax],al
   140019327:	add    dl,dl
   140019329:	lods   eax,DWORD PTR ds:[rsi]
   14001932a:	add    DWORD PTR [rax],eax
	...
   140019338:	out    0x94,al
   14001933a:	add    DWORD PTR [rax],eax
   14001933c:	add    BYTE PTR [rax],al
   14001933e:	add    BYTE PTR [rax],al
   140019340:	and    al,0x95
   140019342:	add    DWORD PTR [rax],eax
   140019344:	add    BYTE PTR [rax],al
   140019346:	add    BYTE PTR [rax],al
   140019348:	(bad)  
   140019349:	xchg   ebp,eax
   14001934a:	add    DWORD PTR [rax],eax
	...
   140019358:	mov    ah,0x9b
   14001935a:	add    DWORD PTR [rax],eax
   14001935c:	add    BYTE PTR [rax],al
   14001935e:	add    BYTE PTR [rax],al
   140019360:	jp     0x1400192fd
   140019362:	add    DWORD PTR [rax],eax
   140019364:	add    BYTE PTR [rax],al
   140019366:	add    BYTE PTR [rax],al
   140019368:	push   rax
   140019369:	fwait
   14001936a:	add    DWORD PTR [rax],eax
   14001936c:	add    BYTE PTR [rax],al
   14001936e:	add    BYTE PTR [rax],al
   140019370:	ss fwait
   140019372:	add    DWORD PTR [rax],eax
   140019374:	add    BYTE PTR [rax],al
   140019376:	add    BYTE PTR [rax],al
   140019378:	clc    
   140019379:	(bad)  
   14001937a:	add    DWORD PTR [rax],eax
   14001937c:	add    BYTE PTR [rax],al
   14001937e:	add    BYTE PTR [rax],al
   140019380:	mov    esi,0x19a
   140019385:	add    BYTE PTR [rax],al
   140019387:	add    BYTE PTR [rdx+rbx*4+0x1],bl
   14001938e:	add    BYTE PTR [rax],al
   140019390:	jo     0x14001932c
   140019392:	add    DWORD PTR [rax],eax
   140019394:	add    BYTE PTR [rax],al
   140019396:	add    BYTE PTR [rax],al
   140019398:	cmp    bl,BYTE PTR [rdx+0x1]
   14001939e:	add    BYTE PTR [rax],al
   1400193a0:	hlt    
   1400193a1:	cdq    
   1400193a2:	add    DWORD PTR [rax],eax
   1400193a4:	add    BYTE PTR [rax],al
   1400193a6:	add    BYTE PTR [rax],al
   1400193a8:	mov    ah,0x99
   1400193aa:	add    DWORD PTR [rax],eax
   1400193ac:	add    BYTE PTR [rax],al
   1400193ae:	add    BYTE PTR [rax],al
   1400193b0:	(bad)  
   1400193b1:	cdq    
   1400193b2:	add    DWORD PTR [rax],eax
   1400193b4:	add    BYTE PTR [rax],al
   1400193b6:	add    BYTE PTR [rax],al
   1400193b8:	cmp    bl,BYTE PTR [rcx+0x1]
   1400193be:	add    BYTE PTR [rax],al
   1400193c0:	adc    bl,BYTE PTR [rcx+0x1]
   1400193c6:	add    BYTE PTR [rax],al
   1400193c8:	(bad)  
   1400193c9:	cwde   
   1400193ca:	add    DWORD PTR [rax],eax
   1400193cc:	add    BYTE PTR [rax],al
   1400193ce:	add    BYTE PTR [rax],al
   1400193d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400193d1:	cwde   
   1400193d2:	add    DWORD PTR [rax],eax
   1400193d4:	add    BYTE PTR [rax],al
   1400193d6:	add    BYTE PTR [rax],al
   1400193d8:	(bad)  
   1400193d9:	cwde   
   1400193da:	add    DWORD PTR [rax],eax
   1400193dc:	add    BYTE PTR [rax],al
   1400193de:	add    BYTE PTR [rax],al
   1400193e0:	lock fwait
   1400193e2:	add    DWORD PTR [rax],eax
   1400193e4:	add    BYTE PTR [rax],al
   1400193e6:	add    BYTE PTR [rax],al
   1400193e8:	xor    al,0x98
   1400193ea:	add    DWORD PTR [rax],eax
   1400193ec:	add    BYTE PTR [rax],al
   1400193ee:	add    BYTE PTR [rax],al
   1400193f0:	not    BYTE PTR [rdi+0x1]
   1400193f6:	add    BYTE PTR [rax],al
   1400193f8:	enter  0x197,0x0
   1400193fc:	add    BYTE PTR [rax],al
   1400193fe:	add    BYTE PTR [rax],al
   140019400:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019401:	xchg   edi,eax
   140019402:	add    DWORD PTR [rax],eax
   140019404:	add    BYTE PTR [rax],al
   140019406:	add    BYTE PTR [rax],al
   140019408:	test   BYTE PTR [rdi+0x1],dl
   14001940e:	add    BYTE PTR [rax],al
   140019410:	(bad)  
   140019411:	xchg   edi,eax
   140019412:	add    DWORD PTR [rax],eax
   140019414:	add    BYTE PTR [rax],al
   140019416:	add    BYTE PTR [rax],al
   140019418:	and    al,0x97
   14001941a:	add    DWORD PTR [rax],eax
   14001941c:	add    BYTE PTR [rax],al
   14001941e:	add    BYTE PTR [rax],al
   140019420:	add    dl,BYTE PTR [rdi+0x1]
   140019426:	add    BYTE PTR [rax],al
   140019428:	(bad)  
   140019429:	xchg   esi,eax
   14001942a:	add    DWORD PTR [rax],eax
   14001942c:	add    BYTE PTR [rax],al
   14001942e:	add    BYTE PTR [rax],al
   140019430:	sahf   
   140019431:	xchg   esi,eax
   140019432:	add    DWORD PTR [rax],eax
   140019434:	add    BYTE PTR [rax],al
   140019436:	add    BYTE PTR [rax],al
   140019438:	js     0x1400193d0
   14001943a:	add    DWORD PTR [rax],eax
   14001943c:	add    BYTE PTR [rax],al
   14001943e:	add    BYTE PTR [rax],al
   140019440:	xchg   rsi,rax
   140019442:	add    DWORD PTR [rax],eax
   140019444:	add    BYTE PTR [rax],al
   140019446:	add    BYTE PTR [rax],al
   140019448:	hlt    
   140019449:	xchg   ebp,eax
   14001944a:	add    DWORD PTR [rax],eax
   14001944c:	add    BYTE PTR [rax],al
   14001944e:	add    BYTE PTR [rax],al
   140019450:	rcl    BYTE PTR [rbp+0x1],1
   140019456:	add    BYTE PTR [rax],al
   140019458:	nop
   140019459:	xchg   ebp,eax
   14001945a:	add    DWORD PTR [rax],eax
   14001945c:	add    BYTE PTR [rax],al
   14001945e:	add    BYTE PTR [rax],al
   140019460:	jb     0x1400193f7
   140019462:	add    DWORD PTR [rax],eax
   140019464:	add    BYTE PTR [rax],al
   140019466:	add    BYTE PTR [rax],al
   140019468:	pop    rdx
   140019469:	xchg   ebp,eax
   14001946a:	add    DWORD PTR [rax],eax
   14001946c:	add    BYTE PTR [rax],al
   14001946e:	add    BYTE PTR [rax],al
   140019470:	sub    bl,BYTE PTR [rcx+rax*1+0x0]
   140019477:	add    BYTE PTR [rsp+rbx*4+0x1],bl
   14001947b:	add    BYTE PTR [rax],al
   14001947d:	add    BYTE PTR [rax],al
   14001947f:	add    BYTE PTR [rax-0x68],dl
   140019482:	add    DWORD PTR [rax],eax
	...
   140019490:	movabs al,ds:0x194
   140019499:	add    BYTE PTR [rax],al
   14001949b:	add    BYTE PTR [rax],al
   14001949d:	add    BYTE PTR [rax],al
   14001949f:	add    BYTE PTR [rsi+rcx*1+0x3f],al
   1400194a3:	jae    0x140019519
   1400194a5:	(bad)  
   1400194a6:	je     0x140019511
   1400194a8:	movsxd ecx,DWORD PTR [rbp+0x65]
   1400194ab:	je     0x14001950e
   1400194ad:	rex.WRXB (bad) 
   1400194af:	push   0x65
   1400194b1:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400194b5:	push   rcx
   1400194b6:	jne    0x140019521
   1400194b8:	movsxd ebp,DWORD PTR [rbx+0x4d]
   1400194bb:	outs   dx,DWORD PTR ds:[rsi]
   1400194bc:	jne    0x140019531
   1400194be:	gs rex.RB jbe 0x140019527
   1400194c2:	outs   dx,BYTE PTR ds:[rsi]
   1400194c3:	je     0x140019505
   1400194c5:	xor    dl,BYTE PTR [rbp+0x51]
   1400194c9:	rex.WRB
   1400194ca:	gs je  0x14001952e
   1400194cd:	rex.WRXB (bad) 
   1400194cf:	push   0x65
   1400194d1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400194d5:	rex.X add BYTE PTR [rax],al
   1400194d8:	push   rcx
   1400194d9:	je     0x140019510
   1400194db:	push   rcx
   1400194dc:	jne    0x140019547
   1400194de:	movsxd ebp,DWORD PTR [rbx+0x2e]
   1400194e1:	fs ins BYTE PTR es:[rdi],dx
   1400194e3:	ins    BYTE PTR es:[rdi],dx
   1400194e4:	add    BYTE PTR [rax],al
   1400194e6:	rex or eax,0x6578653f
   1400194ec:	movsxd eax,DWORD PTR [rax+0x51]
   1400194ef:	rex.RXB jne 0x14001955b
   1400194f2:	rex.B jo 0x140019565
   1400194f5:	ins    BYTE PTR es:[rdi],dx
   1400194f6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400194fd:	rex
   1400194fe:	rex push rbx
   140019500:	rex.B
   140019501:	rex.W pop rax
   140019503:	pop    rdx
   140019504:	add    BYTE PTR [rax],al
   140019506:	jne    0x14001950b
   140019508:	(bad)  
   140019509:	(bad)  
   14001950a:	xor    DWORD PTR [rcx+0x47],edx
   14001950d:	jne    0x140019578
   14001950f:	rex.B jo 0x140019582
   140019512:	ins    BYTE PTR es:[rdi],dx
   140019513:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001951a:	rex
   14001951b:	rex push rbp
   14001951d:	rex.RB
   14001951e:	rex.B
   14001951f:	rex.B
   140019520:	rex pop rax
   140019522:	pop    rdx
   140019523:	add    BYTE PTR [rsi+0x303f3f00],bh
   140019529:	push   rcx
   14001952a:	rex.RXB jne 0x140019596
   14001952d:	rex.B jo 0x1400195a0
   140019530:	ins    BYTE PTR es:[rdi],dx
   140019531:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140019538:	rex
   140019539:	rex push rcx
   14001953b:	rex.RB
   14001953c:	rex.B
   14001953d:	rex.B
   14001953e:	rex
   14001953f:	rex.B
   140019540:	rex.RB
   140019541:	rex.B
   140019542:	rex.W push rax
   140019544:	rex.RB
   140019545:	push   r8
   140019547:	rex.RB
   140019548:	rex.B
   140019549:	rex.R
   14001954a:	rex.W
   14001954b:	rex pop rdx
   14001954d:	add    BYTE PTR [rcx+0x74],dl
   140019550:	xor    eax,0x2e697547
   140019555:	fs ins BYTE PTR es:[rdi],dx
   140019557:	ins    BYTE PTR es:[rdi],dx
   140019558:	add    BYTE PTR [rax],al
   14001955a:	add    bh,BYTE PTR es:[rdi]
   14001955d:	(bad)  
   14001955e:	xor    DWORD PTR [rcx+0x51],edx
   140019561:	ins    DWORD PTR es:[rdi],dx
   140019562:	ins    BYTE PTR es:[rdi],dx
   140019563:	rex.RB jb 0x1400195d8
   140019566:	outs   dx,DWORD PTR ds:[rsi]
   140019567:	jb     0x1400195a9
   140019569:	rex push rcx
   14001956b:	rex.RB
   14001956c:	rex.B
   14001956d:	rex.B
   14001956e:	rex pop rax
   140019570:	pop    rdx
   140019571:	add    ch,ch
   140019573:	add    BYTE PTR [rdi],bh
   140019575:	(bad)  
   140019576:	xor    BYTE PTR [rcx+0x51],dl
   140019579:	ins    DWORD PTR es:[rdi],dx
   14001957a:	ins    BYTE PTR es:[rdi],dx
   14001957b:	rex.RB jb 0x1400195f0
   14001957e:	outs   dx,DWORD PTR ds:[rsi]
   14001957f:	jb     0x1400195c1
   140019581:	rex push rcx
   140019583:	rex.RB
   140019584:	rex.B
   140019585:	rex.B
   140019586:	rex
   140019587:	rex.B
   140019588:	rex.RB
   140019589:	rex.X push rsi
   14001958b:	xor    BYTE PTR [rax+0x40],al
   14001958e:	pop    rdx
   14001958f:	add    BYTE PTR [rsi],dh
   140019591:	(bad)  
   140019593:	je     0x140019604
   140019595:	push   rcx
   140019596:	rex.WRXB (bad) 
   140019598:	push   0x65
   14001959a:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001959e:	push   rcx
   14001959f:	ins    DWORD PTR es:[rdi],dx
   1400195a0:	ins    BYTE PTR es:[rdi],dx
   1400195a1:	rex.WRB
   1400195a2:	gs je  0x140019606
   1400195a5:	push   rsp
   1400195a6:	jns    0x140019618
   1400195a8:	gs rex
   1400195aa:	rex push rbx
   1400195ac:	push   r8
   1400195ae:	rex.RB
   1400195af:	push   r14
   1400195b1:	push   rcx
   1400195b2:	rex.WRXB (bad) 
   1400195b4:	push   0x65
   1400195b6:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400195ba:	rex.B
   1400195bb:	rex.RB
   1400195bc:	rex.X push rsi
   1400195be:	push   rcx
   1400195bf:	push   rsi
   1400195c0:	(bad)  
   1400195c1:	jb     0x14001962c
   1400195c3:	(bad)  
   1400195c4:	outs   dx,BYTE PTR ds:[rsi]
   1400195c5:	je     0x140019607
   1400195c7:	rex push rax
   1400195c9:	rex.RB
   1400195ca:	pop    r15
   1400195cc:	rex.WRX
   1400195cd:	rex pop rdx
   1400195cf:	add    bl,dh
   1400195d1:	or     DWORD PTR [rdi],edi
   1400195d3:	imul   esi,DWORD PTR [rbx+0x51],0x656a624f
   1400195da:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400195de:	push   rcx
   1400195df:	ins    DWORD PTR es:[rdi],dx
   1400195e0:	ins    BYTE PTR es:[rdi],dx
   1400195e1:	rex.WRB
   1400195e2:	gs je  0x140019646
   1400195e5:	push   rsp
   1400195e6:	jns    0x140019658
   1400195e8:	gs rex
   1400195ea:	rex push rbx
   1400195ec:	pop    r15
   1400195ee:	rex.WRX
   1400195ef:	rex.W
   1400195f0:	rex pop rdx
   1400195f2:	add    BYTE PTR [rax],al
   1400195f4:	repnz add al,0x3f
   1400195f7:	(bad)  
   1400195f8:	je     0x14001966e
   1400195fa:	(bad)  
   1400195fb:	movsxd ebp,DWORD PTR [rax+0x65]
   1400195fe:	fs push rax
   140019600:	jb     0x140019671
   140019602:	jo     0x140019669
   140019604:	jb     0x14001967a
   140019606:	imul   esp,DWORD PTR [rbp+0x73],0x65707954
   14001960d:	rex push rcx
   14001960f:	push   rcx
   140019610:	ins    DWORD PTR es:[rdi],dx
   140019611:	ins    BYTE PTR es:[rdi],dx
   140019612:	push   rsp
   140019613:	jns    0x140019685
   140019615:	gs rex
   140019617:	rex push rcx
   140019619:	rex.RB
   14001961a:	rex.X
   14001961b:	push   r8
   14001961d:	rex.RB
   14001961e:	rex.X push rbp
   140019620:	push   rcx
   140019621:	rex.WRB
   140019622:	gs je  0x140019686
   140019625:	rex.WRXB (bad) 
   140019627:	push   0x65
   140019629:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001962d:	push   rax
   14001962e:	rex.RB
   14001962f:	push   r14
   140019631:	push   rcx
   140019632:	push   rcx
   140019633:	ins    DWORD PTR es:[rdi],dx
   140019634:	ins    BYTE PTR es:[rdi],dx
   140019635:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019637:	imul   ebp,DWORD PTR [esi+0x65],0x76697250
   14001963f:	(bad)  
   140019640:	je     0x1400196a7
   140019642:	rex
   140019643:	rex
   140019644:	rex pop rdx
   140019646:	add    BYTE PTR [rax],al
   140019648:	or     eax,0x656d3f0b
   14001964d:	je     0x1400196b0
   14001964f:	rex.WRXB (bad) 
   140019651:	push   0x65
   140019653:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019657:	push   rcx
   140019658:	ins    DWORD PTR es:[rdi],dx
   140019659:	ins    BYTE PTR es:[rdi],dx
   14001965a:	push   rsp
   14001965b:	jns    0x1400196cd
   14001965d:	gs rex
   14001965f:	rex push rcx
   140019661:	rex.RB
   140019662:	rex.X
   140019663:	push   r8
   140019665:	rex.RB
   140019666:	rex.X push rbp
   140019668:	push   rcx
   140019669:	rex.WRB
   14001966a:	gs je  0x1400196ce
   14001966d:	rex.WRXB (bad) 
   14001966f:	push   0x65
   140019671:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019675:	pop    rax
   140019676:	pop    rdx
   140019677:	add    BYTE PTR [rsi+0x73693f09],bh
   14001967d:	rex.RB js 0x1400196f4
   140019680:	outs   dx,BYTE PTR gs:[rsi]
   140019682:	fs gs fs push rsp
   140019686:	jns    0x1400196f8
   140019688:	gs rex push rcx
   14001968b:	push   rcx
   14001968c:	ins    DWORD PTR es:[rdi],dx
   14001968d:	ins    BYTE PTR es:[rdi],dx
   14001968e:	push   rsp
   14001968f:	jns    0x140019701
   140019691:	gs rex
   140019693:	rex push rcx
   140019695:	rex.RB
   140019696:	rex.X
   140019697:	pop    r15
   140019699:	rex.WRX pop rax
   14001969b:	pop    rdx
   14001969c:	add    BYTE PTR [rax],al
   14001969e:	cmp    DWORD PTR [rcx],ecx
   1400196a0:	(bad)  
   1400196a1:	imul   ebp,DWORD PTR [rbp+0x70],0x5074726f
   1400196a8:	(bad)  
   1400196a9:	je     0x140019713
   1400196ab:	imul   r14,QWORD PTR [rbx+0x74],0x6d515140
   1400196b3:	ins    BYTE PTR es:[rdi],dx
   1400196b4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400196b6:	imul   ebp,DWORD PTR [esi+0x65],0x45514040
   1400196be:	rex.X
   1400196bf:	rex.B (bad) 
   1400196c1:	push   r14
   1400196c3:	push   rcx
   1400196c4:	push   rbx
   1400196c5:	je     0x140019739
   1400196c7:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   1400196ce:	rex
   1400196cf:	rex pop rax
   1400196d1:	pop    rdx
   1400196d2:	add    BYTE PTR [rax],al
   1400196d4:	or     al,BYTE PTR [rdi]
   1400196d6:	(bad)  
   1400196d7:	gs ins BYTE PTR es:[rdi],dx
   1400196d9:	gs ins DWORD PTR es:[rdi],dx
   1400196db:	outs   dx,BYTE PTR gs:[rsi]
   1400196dd:	je     0x14001972d
   1400196df:	(bad)  
   1400196e0:	ins    DWORD PTR es:[rdi],dx
   1400196e1:	gs rex push rcx
   1400196e4:	push   rcx
   1400196e5:	ins    DWORD PTR es:[rdi],dx
   1400196e6:	ins    BYTE PTR es:[rdi],dx
   1400196e7:	push   rsp
   1400196e8:	jns    0x14001975a
   1400196ea:	gs rex
   1400196ec:	rex push rcx
   1400196ee:	rex.RB
   1400196ef:	rex.X
   1400196f0:	rex.B
   1400196f1:	rex.B
   1400196f2:	rex.RB
   1400196f3:	rex.X push rsi
   1400196f5:	push   rcx
   1400196f6:	push   rbx
   1400196f7:	je     0x14001976b
   1400196f9:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140019700:	add    BYTE PTR [rax],al
   140019702:	popf   
   140019703:	or     DWORD PTR [rdi],edi
   140019705:	imul   esi,DWORD PTR [rbx+0x43],0x6f706d6f
   14001970c:	jae    0x140019777
   14001970e:	je     0x140019775
   140019710:	rex push rcx
   140019712:	push   rcx
   140019713:	ins    DWORD PTR es:[rdi],dx
   140019714:	ins    BYTE PTR es:[rdi],dx
   140019715:	push   rsp
   140019716:	jns    0x140019788
   140019718:	gs rex
   14001971a:	rex push rcx
   14001971c:	rex.RB
   14001971d:	rex.X
   14001971e:	pop    r15
   140019720:	rex.WRX pop rax
   140019722:	pop    rdx
   140019723:	add    BYTE PTR [rax],bh
   140019725:	or     al,0x3f
   140019727:	jno    0x140019796
   140019729:	ins    BYTE PTR es:[rdi],dx
   14001972a:	rex.B ins BYTE PTR es:[rdi],dx
   14001972c:	ins    BYTE PTR es:[rdi],dx
   14001972d:	push   rsp
   14001972e:	jns    0x1400197a0
   140019730:	gs jae 0x140019773
   140019733:	push   rcx
   140019734:	push   rcx
   140019735:	ins    DWORD PTR es:[rdi],dx
   140019736:	ins    BYTE PTR es:[rdi],dx
   140019737:	rex.WRB
   140019738:	gs je  0x14001979c
   14001973b:	push   rsp
   14001973c:	jns    0x1400197ae
   14001973e:	gs rex
   140019740:	rex push rbx
   140019742:	rex.B (bad) 
   140019744:	push   r14
   140019746:	(bad)  
   140019747:	and    al,0x51
   140019749:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   140019751:	push   rsi
   140019752:	push   rcx
   140019753:	push   rcx
   140019754:	ins    DWORD PTR es:[rdi],dx
   140019755:	ins    BYTE PTR es:[rdi],dx
   140019756:	push   rsp
   140019757:	jns    0x1400197c9
   140019759:	gs rex
   14001975b:	rex
   14001975c:	rex
   14001975d:	rex pop rax
   14001975f:	pop    rdx
   140019760:	add    BYTE PTR [rax],al
   140019762:	add    eax,0x73693f0a
   140019767:	push   rbx
   140019768:	imul   ebp,DWORD PTR [rsi+0x67],0x6f74656c
   14001976f:	outs   dx,BYTE PTR ds:[rsi]
   140019770:	rex push rcx
   140019772:	push   rcx
   140019773:	ins    DWORD PTR es:[rdi],dx
   140019774:	ins    BYTE PTR es:[rdi],dx
   140019775:	push   rsp
   140019776:	jns    0x1400197e8
   140019778:	gs rex
   14001977a:	rex push rcx
   14001977c:	rex.RB
   14001977d:	rex.X
   14001977e:	pop    r15
   140019780:	rex.WRX pop rax
   140019782:	pop    rdx
   140019783:	add    al,cl
   140019785:	or     bh,BYTE PTR [rdi]
   140019787:	ins    DWORD PTR es:[rdi],dx
   140019788:	(bad)  
   140019789:	push   0x6f
   14001978b:	jb     0x1400197e3
   14001978d:	gs jb  0x140019803
   140019790:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d515140
   140019797:	ins    BYTE PTR es:[rdi],dx
   140019798:	push   rsp
   140019799:	jns    0x14001980b
   14001979b:	gs rex
   14001979d:	rex push rcx
   14001979f:	rex.RB
   1400197a0:	rex.X
   1400197a1:	rex.B
   1400197a2:	rex.W pop rax
   1400197a4:	pop    rdx
   1400197a5:	add    BYTE PTR [rdi],ah
   1400197a7:	or     edi,DWORD PTR [rdi]
   1400197a9:	ins    DWORD PTR es:[rdi],dx
   1400197aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x72655672
   1400197b1:	jae    0x14001981c
   1400197b3:	outs   dx,DWORD PTR ds:[rsi]
   1400197b4:	outs   dx,BYTE PTR ds:[rsi]
   1400197b5:	rex push rcx
   1400197b7:	push   rcx
   1400197b8:	ins    DWORD PTR es:[rdi],dx
   1400197b9:	ins    BYTE PTR es:[rdi],dx
   1400197ba:	push   rsp
   1400197bb:	jns    0x14001982d
   1400197bd:	gs rex
   1400197bf:	rex push rcx
   1400197c1:	rex.RB
   1400197c2:	rex.X
   1400197c3:	rex.B
   1400197c4:	rex.W pop rax
   1400197c6:	pop    rdx
   1400197c7:	add    BYTE PTR [rdi+0xc],bl
   1400197ca:	(bad)  
   1400197cb:	jno    0x14001983a
   1400197cd:	ins    BYTE PTR es:[rdi],dx
   1400197ce:	push   rsp
   1400197cf:	jns    0x140019841
   1400197d1:	gs rex.WRX (bad) 
   1400197d4:	ins    DWORD PTR es:[rdi],dx
   1400197d5:	gs rex push rcx
   1400197d8:	push   rcx
   1400197d9:	ins    DWORD PTR es:[rdi],dx
   1400197da:	ins    BYTE PTR es:[rdi],dx
   1400197db:	push   rsp
   1400197dc:	jns    0x14001984e
   1400197de:	gs rex
   1400197e0:	rex push rcx
   1400197e2:	rex.RB
   1400197e3:	rex.X
   1400197e4:	rex.B
   1400197e5:	rex.B
   1400197e6:	rex.RB
   1400197e7:	rex.X push rsi
   1400197e9:	push   rcx
   1400197ea:	push   rbx
   1400197eb:	je     0x14001985f
   1400197ed:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400197f4:	add    BYTE PTR [rax],al
   1400197f6:	sbb    al,0x6
   1400197f8:	(bad)  
   1400197f9:	movsxd esi,DWORD PTR [rdx+0x65]
   1400197fc:	(bad)  
   1400197fd:	je     0x140019864
   1400197ff:	rex push rcx
   140019801:	push   rcx
   140019802:	ins    DWORD PTR es:[rdi],dx
   140019803:	ins    BYTE PTR es:[rdi],dx
   140019804:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019806:	ins    DWORD PTR es:[rdi],dx
   140019807:	jo     0x140019878
   140019809:	outs   dx,BYTE PTR ds:[rsi]
   14001980a:	outs   dx,BYTE PTR gs:[rsi]
   14001980c:	je     0x14001984e
   14001980e:	rex push rbp
   140019810:	rex.RB
   140019811:	rex.B
   140019812:	push   r8
   140019814:	rex.RB
   140019815:	push   r14
   140019817:	push   rcx
   140019818:	rex.WRXB (bad) 
   14001981a:	push   0x65
   14001981c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019820:	push   rax
   140019821:	rex.RB
   140019822:	push   r14
   140019824:	push   rcx
   140019825:	push   rcx
   140019826:	ins    DWORD PTR es:[rdi],dx
   140019827:	ins    BYTE PTR es:[rdi],dx
   140019828:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001982a:	outs   dx,BYTE PTR ds:[rsi]
   14001982b:	je     0x140019892
   14001982d:	js     0x1400198a3
   14001982f:	rex
   140019830:	rex
   140019831:	rex pop rdx
   140019833:	add    BYTE PTR [rbx],dl
   140019835:	add    bh,BYTE PTR [rdi]
   140019837:	(bad)  
   140019838:	xor    DWORD PTR [rcx+0x51],edx
   14001983b:	ins    DWORD PTR es:[rdi],dx
   14001983c:	ins    BYTE PTR es:[rdi],dx
   14001983d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001983f:	ins    DWORD PTR es:[rdi],dx
   140019840:	jo     0x1400198b1
   140019842:	outs   dx,BYTE PTR ds:[rsi]
   140019843:	outs   dx,BYTE PTR gs:[rsi]
   140019845:	je     0x140019887
   140019847:	rex push rbp
   140019849:	rex.RB
   14001984a:	rex.B
   14001984b:	rex.B
   14001984c:	rex pop rax
   14001984e:	pop    rdx
   14001984f:	add    BYTE PTR [rbx+0x72653f07],ch
   140019855:	jb     0x1400198c6
   140019857:	jb     0x1400198ac
   140019859:	je     0x1400198cd
   14001985b:	imul   ebp,DWORD PTR [rsi+0x67],0x6d515140
   140019862:	ins    BYTE PTR es:[rdi],dx
   140019863:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019865:	ins    DWORD PTR es:[rdi],dx
   140019866:	jo     0x1400198d7
   140019868:	outs   dx,BYTE PTR ds:[rsi]
   140019869:	outs   dx,BYTE PTR gs:[rsi]
   14001986b:	je     0x1400198ad
   14001986d:	rex push rcx
   14001986f:	rex.RB
   140019870:	rex.X
   140019871:	rex.B (bad) 
   140019873:	push   r14
   140019875:	push   rcx
   140019876:	push   rbx
   140019877:	je     0x1400198eb
   140019879:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140019880:	add    BYTE PTR [rax],al
   140019882:	cmc    
   140019883:	or     DWORD PTR [rdi],edi
   140019885:	imul   esi,DWORD PTR [rbx+0x52],0x79646165
   14001988c:	rex push rcx
   14001988e:	push   rcx
   14001988f:	ins    DWORD PTR es:[rdi],dx
   140019890:	ins    BYTE PTR es:[rdi],dx
   140019891:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019893:	ins    DWORD PTR es:[rdi],dx
   140019894:	jo     0x140019905
   140019896:	outs   dx,BYTE PTR ds:[rsi]
   140019897:	outs   dx,BYTE PTR gs:[rsi]
   140019899:	je     0x1400198db
   14001989b:	rex push rcx
   14001989d:	rex.RB
   14001989e:	rex.X
   14001989f:	pop    r15
   1400198a1:	rex.WRX pop rax
   1400198a3:	pop    rdx
   1400198a4:	add    BYTE PTR [rax],al
   1400198a6:	enter  0x3f00,0x3f
   1400198aa:	xor    BYTE PTR [rcx+0x51],dl
   1400198ad:	ins    DWORD PTR es:[rdi],dx
   1400198ae:	ins    BYTE PTR es:[rdi],dx
   1400198af:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400198b1:	ins    DWORD PTR es:[rdi],dx
   1400198b2:	jo     0x140019923
   1400198b4:	outs   dx,BYTE PTR ds:[rsi]
   1400198b5:	outs   dx,BYTE PTR gs:[rsi]
   1400198b7:	je     0x1400198f9
   1400198b9:	rex push rcx
   1400198bb:	rex.RB
   1400198bc:	rex.B
   1400198bd:	rex.B
   1400198be:	rex push rax
   1400198c0:	rex.RB
   1400198c1:	push   r14
   1400198c3:	push   rcx
   1400198c4:	push   rcx
   1400198c5:	ins    DWORD PTR es:[rdi],dx
   1400198c6:	ins    BYTE PTR es:[rdi],dx
   1400198c7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400198c9:	imul   ebp,DWORD PTR [esi+0x65],0x45414040
   1400198d1:	rex.X push rsi
   1400198d3:	push   rcx
   1400198d4:	push   rbp
   1400198d5:	jb     0x140019943
   1400198d7:	rex
   1400198d8:	rex push rax
   1400198da:	rex.RB
   1400198db:	push   r14
   1400198dd:	push   rcx
   1400198de:	rex.WRXB (bad) 
   1400198e0:	push   0x65
   1400198e2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400198e6:	rex pop rdx
   1400198e8:	add    BYTE PTR [rax],al
   1400198ea:	(bad)  
   1400198eb:	(bad)  
   1400198ec:	(bad)  
   1400198ed:	jae    0x14001995e
   1400198ef:	jne    0x140019963
   1400198f1:	movsxd esp,DWORD PTR [rbp+0x55]
   1400198f4:	jb     0x140019962
   1400198f6:	rex push rcx
   1400198f8:	push   rcx
   1400198f9:	ins    DWORD PTR es:[rdi],dx
   1400198fa:	ins    BYTE PTR es:[rdi],dx
   1400198fb:	push   rsp
   1400198fc:	jns    0x14001996e
   1400198fe:	gs rex
   140019900:	rex push rcx
   140019902:	rex.RB
   140019903:	rex.X
   140019904:	rex.B (bad) 
   140019906:	push   r14
   140019908:	push   rcx
   140019909:	push   rbp
   14001990a:	jb     0x140019978
   14001990c:	rex
   14001990d:	rex pop rax
   14001990f:	pop    rdx
   140019910:	add    BYTE PTR [rax],al
   140019912:	adc    ecx,DWORD PTR [rbx]
   140019914:	(bad)  
   140019915:	ins    DWORD PTR es:[rdi],dx
   140019916:	gs je  0x14001997a
   140019919:	rex.WRXB (bad) 
   14001991b:	push   0x65
   14001991d:	movsxd esi,DWORD PTR [rdx+rdx*2+0x65]
   140019921:	jbe    0x14001998c
   140019923:	jae    0x14001998e
   140019925:	outs   dx,DWORD PTR ds:[rsi]
   140019926:	outs   dx,BYTE PTR ds:[rsi]
   140019927:	rex push rcx
   140019929:	push   rcx
   14001992a:	ins    DWORD PTR es:[rdi],dx
   14001992b:	ins    BYTE PTR es:[rdi],dx
   14001992c:	push   rsp
   14001992d:	jns    0x14001999f
   14001992f:	gs rex
   140019931:	rex push rcx
   140019933:	rex.RB
   140019934:	rex.X
   140019935:	rex.B
   140019936:	rex.W pop rax
   140019938:	pop    rdx
   140019939:	add    BYTE PTR [rsi],bl
   14001993b:	(bad)  
   14001993c:	(bad)  
   14001993d:	movsxd esi,DWORD PTR [rdx+0x65]
   140019940:	(bad)  
   140019941:	je     0x1400199a8
   140019943:	rex push rcx
   140019945:	push   rcx
   140019946:	ins    DWORD PTR es:[rdi],dx
   140019947:	ins    BYTE PTR es:[rdi],dx
   140019948:	push   rsp
   140019949:	jns    0x1400199bb
   14001994b:	gs rex
   14001994d:	rex push rcx
   14001994f:	rex.RB
   140019950:	rex.X
   140019951:	push   r8
   140019953:	rex.RB
   140019954:	push   r14
   140019956:	push   rcx
   140019957:	rex.WRXB (bad) 
   140019959:	push   0x65
   14001995b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001995f:	pop    rax
   140019960:	pop    rdx
   140019961:	add    BYTE PTR [rbp+0xc],ah
   140019964:	(bad)  
   140019965:	jno    0x1400199d6
   140019967:	(bad)  
   140019968:	push   0x65
   14001996a:	movsxd esi,DWORD PTR [rcx+rax*2+0x70]
   14001996e:	imul   eax,DWORD PTR [rax+0x53],0x6c676e69
   140019975:	gs je  0x1400199e7
   140019978:	outs   dx,BYTE PTR ds:[rsi]
   140019979:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001997b:	jae    0x1400199f1
   14001997d:	(bad)  
   14001997e:	outs   dx,BYTE PTR ds:[rsi]
   14001997f:	movsxd esp,DWORD PTR [rbp+0x49]
   140019982:	outs   dx,BYTE PTR ds:[rsi]
   140019983:	outs   dx,WORD PTR ds:[rsi]
   140019985:	rex push rcx
   140019987:	push   rcx
   140019988:	ins    DWORD PTR es:[rdi],dx
   140019989:	ins    BYTE PTR es:[rdi],dx
   14001998a:	push   rsp
   14001998b:	jns    0x1400199fd
   14001998d:	gs rex
   14001998f:	rex push rcx
   140019991:	rex.RB
   140019992:	rex.X
   140019993:	push   r8
   140019995:	rex.RB
   140019996:	push   r14
   140019998:	push   rcx
   140019999:	rex.WRXB (bad) 
   14001999b:	push   0x65
   14001999d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400199a1:	push   rax
   1400199a2:	rex.RB
   1400199a3:	push   r14
   1400199a5:	push   rcx
   1400199a6:	push   rcx
   1400199a7:	ins    DWORD PTR es:[rdi],dx
   1400199a8:	ins    BYTE PTR es:[rdi],dx
   1400199a9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400199ab:	imul   ebp,DWORD PTR [esi+0x65],0x5a404040
   1400199b3:	add    BYTE PTR [rdi+0x9],dl
   1400199b6:	(bad)  
   1400199b7:	imul   ebp,DWORD PTR [rsi+0x69],0x69534074
   1400199be:	outs   dx,BYTE PTR ds:[rsi]
   1400199bf:	ins    BYTE PTR es:[edi],dx
   1400199c1:	gs je  0x140019a33
   1400199c4:	outs   dx,BYTE PTR ds:[rsi]
   1400199c5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400199c7:	jae    0x140019a3d
   1400199c9:	(bad)  
   1400199ca:	outs   dx,BYTE PTR ds:[rsi]
   1400199cb:	movsxd esp,DWORD PTR [rbp+0x49]
   1400199ce:	outs   dx,BYTE PTR ds:[rsi]
   1400199cf:	outs   dx,WORD PTR ds:[rsi]
   1400199d1:	rex push rcx
   1400199d3:	push   rcx
   1400199d4:	ins    DWORD PTR es:[rdi],dx
   1400199d5:	ins    BYTE PTR es:[rdi],dx
   1400199d6:	push   rsp
   1400199d7:	jns    0x140019a49
   1400199d9:	gs rex
   1400199db:	rex push rcx
   1400199dd:	rex.RB
   1400199de:	rex.B
   1400199df:	pop    r8
   1400199e1:	push   rax
   1400199e2:	rex.RB
   1400199e3:	push   r14
   1400199e5:	push   rcx
   1400199e6:	push   rcx
   1400199e7:	ins    DWORD PTR es:[rdi],dx
   1400199e8:	ins    BYTE PTR es:[rdi],dx
   1400199e9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400199eb:	imul   ebp,DWORD PTR [esi+0x65],0x5a404040
   1400199f3:	add    BYTE PTR [rbx+0xe],dl
   1400199f6:	(bad)  
   1400199f7:	jae    0x140019a62
   1400199f9:	outs   dx,BYTE PTR ds:[rsi]
   1400199fa:	ins    BYTE PTR es:[edi],dx
   1400199fc:	gs je  0x140019a6e
   1400199ff:	outs   dx,BYTE PTR ds:[rsi]
   140019a00:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140019a02:	jae    0x140019a78
   140019a04:	(bad)  
   140019a05:	outs   dx,BYTE PTR ds:[rsi]
   140019a06:	movsxd esp,DWORD PTR [rbp+0x49]
   140019a09:	outs   dx,BYTE PTR ds:[rsi]
   140019a0a:	outs   dx,WORD PTR ds:[rsi]
   140019a0c:	rex push rcx
   140019a0e:	push   rcx
   140019a0f:	ins    DWORD PTR es:[rdi],dx
   140019a10:	ins    BYTE PTR es:[rdi],dx
   140019a11:	push   rsp
   140019a12:	jns    0x140019a84
   140019a14:	gs rex
   140019a16:	rex push rcx
   140019a18:	rex.RB
   140019a19:	rex.X
   140019a1a:	push   r8
   140019a1c:	rex.RB
   140019a1d:	push   r14
   140019a1f:	push   rbx
   140019a20:	imul   ebp,DWORD PTR [rsi+0x67],0x6f74656c
   140019a27:	outs   dx,BYTE PTR ds:[rsi]
   140019a28:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140019a2a:	jae    0x140019aa0
   140019a2c:	(bad)  
   140019a2d:	outs   dx,BYTE PTR ds:[rsi]
   140019a2e:	movsxd esp,DWORD PTR [rbp+0x49]
   140019a31:	outs   dx,BYTE PTR ds:[rsi]
   140019a32:	outs   dx,WORD PTR ds:[rsi]
   140019a34:	rex xor DWORD PTR [rax+0x58],eax
   140019a38:	pop    rdx
   140019a39:	add    BYTE PTR [rax+rcx*1+0x7465673f],dl
   140019a40:	rex push rcx
   140019a42:	push   rcx
   140019a43:	ins    DWORD PTR es:[rdi],dx
   140019a44:	ins    BYTE PTR es:[rdi],dx
   140019a45:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019a47:	imul   ebp,DWORD PTR [esi+0x65],0x76697250
   140019a4f:	(bad)  
   140019a50:	je     0x140019ab7
   140019a52:	rex
   140019a53:	rex push rbx
   140019a55:	push   r8
   140019a57:	rex.RB
   140019a58:	push   r14
   140019a5a:	xor    DWORD PTR [rax+0x50],eax
   140019a5d:	rex.RB
   140019a5e:	push   r14
   140019a60:	push   rcx
   140019a61:	push   rcx
   140019a62:	ins    DWORD PTR es:[rdi],dx
   140019a63:	ins    BYTE PTR es:[rdi],dx
   140019a64:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019a66:	imul   ebp,DWORD PTR [esi+0x65],0x5a404040
   140019a6e:	add    BYTE PTR [rax],al
   140019a70:	mov    ch,0xf
   140019a72:	(bad)  
   140019a73:	je     0x140019aee
   140019a75:	jo     0x140019adc
   140019a77:	rex.WRX (bad) 
   140019a79:	ins    DWORD PTR es:[rdi],dx
   140019a7a:	gs rex push rcx
   140019a7d:	push   rcx
   140019a7e:	ins    DWORD PTR es:[rdi],dx
   140019a7f:	ins    BYTE PTR es:[rdi],dx
   140019a80:	push   rsp
   140019a81:	jns    0x140019af3
   140019a83:	gs rex
   140019a85:	rex push rcx
   140019a87:	rex.RB
   140019a88:	rex.X
   140019a89:	rex.B (bad) 
   140019a8b:	push   r14
   140019a8d:	push   rcx
   140019a8e:	rex.X jns 0x140019b05
   140019a91:	gs rex.B jb 0x140019b07
   140019a95:	(bad)  
   140019a96:	jns    0x140019ad8
   140019a98:	rex pop rax
   140019a9a:	pop    rdx
   140019a9b:	add    BYTE PTR [rdi+0x73693f09],bl
   140019aa1:	rex.XB jb 0x140019b09
   140019aa4:	(bad)  
   140019aa5:	je     0x140019b08
   140019aa7:	(bad)  
   140019aa8:	ins    BYTE PTR es:[rdi],dx
   140019aa9:	gs rex push rcx
   140019aac:	push   rcx
   140019aad:	ins    DWORD PTR es:[rdi],dx
   140019aae:	ins    BYTE PTR es:[rdi],dx
   140019aaf:	push   rsp
   140019ab0:	jns    0x140019b22
   140019ab2:	gs rex
   140019ab4:	rex push rcx
   140019ab6:	rex.RB
   140019ab7:	rex.X
   140019ab8:	pop    r15
   140019aba:	rex.WRX pop rax
   140019abc:	pop    rdx
   140019abd:	add    BYTE PTR [rcx+0xc],ah
   140019ac0:	(bad)  
   140019ac1:	jno    0x140019b30
   140019ac3:	ins    BYTE PTR es:[rdi],dx
   140019ac4:	push   rsp
   140019ac5:	jns    0x140019b37
   140019ac7:	gs jae 0x140019b0a
   140019aca:	push   rcx
   140019acb:	push   rcx
   140019acc:	ins    DWORD PTR es:[rdi],dx
   140019acd:	ins    BYTE PTR es:[rdi],dx
   140019ace:	rex.WRB
   140019acf:	gs je  0x140019b33
   140019ad2:	push   rsp
   140019ad3:	jns    0x140019b45
   140019ad5:	gs rex
   140019ad7:	rex push rbx
   140019ad9:	rex.B (bad) 
   140019adb:	push   r14
   140019add:	(bad)  
   140019ade:	and    al,0x51
   140019ae0:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   140019ae8:	push   rsi
   140019ae9:	push   rcx
   140019aea:	push   rcx
   140019aeb:	ins    DWORD PTR es:[rdi],dx
   140019aec:	ins    BYTE PTR es:[rdi],dx
   140019aed:	push   rsp
   140019aee:	jns    0x140019b60
   140019af0:	gs rex
   140019af2:	rex
   140019af3:	rex
   140019af4:	rex pop rax
   140019af6:	pop    rdx
   140019af7:	add    BYTE PTR [rsp+rcx*1+0x3f],bl
   140019afb:	jno    0x140019b6a
   140019afd:	ins    BYTE PTR es:[rdi],dx
   140019afe:	push   rsp
   140019aff:	jns    0x140019b71
   140019b01:	gs rex push rcx
   140019b04:	push   rcx
   140019b05:	ins    DWORD PTR es:[rdi],dx
   140019b06:	ins    BYTE PTR es:[rdi],dx
   140019b07:	rex.WRB
   140019b08:	gs je  0x140019b6c
   140019b0b:	push   rsp
   140019b0c:	jns    0x140019b7e
   140019b0e:	gs rex
   140019b10:	rex push rbx
   140019b12:	push   r8
   140019b14:	rex.RB
   140019b15:	push   r14
   140019b17:	push   rcx
   140019b18:	push   rcx
   140019b19:	ins    DWORD PTR es:[rdi],dx
   140019b1a:	ins    BYTE PTR es:[rdi],dx
   140019b1b:	push   rsp
   140019b1c:	jns    0x140019b8e
   140019b1e:	gs rex
   140019b20:	rex push rax
   140019b22:	rex.RB
   140019b23:	rex.X push rbp
   140019b25:	push   rcx
   140019b26:	rex.WRB
   140019b27:	gs je  0x140019b8b
   140019b2a:	rex.WRXB (bad) 
   140019b2c:	push   0x65
   140019b2e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019b32:	rex pop rdx
   140019b34:	add    BYTE PTR [rax],al
   140019b36:	and    eax,DWORD PTR [rdx]
   140019b38:	(bad)  
   140019b39:	(bad)  
   140019b3a:	xor    DWORD PTR [rcx+0x51],edx
   140019b3d:	ins    DWORD PTR es:[rdi],dx
   140019b3e:	ins    BYTE PTR es:[rdi],dx
   140019b3f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019b41:	imul   ebp,DWORD PTR [esi+0x65],0x45554040
   140019b49:	rex.B
   140019b4a:	rex.B
   140019b4b:	rex pop rax
   140019b4d:	pop    rdx
   140019b4e:	add    BYTE PTR [rax],al
   140019b50:	cmp    al,0xf
   140019b52:	(bad)  
   140019b53:	je     0x140019bc4
   140019b55:	push   rbx
   140019b56:	je     0x140019bca
   140019b58:	imul   ebp,DWORD PTR [rsi+0x67],0x6d515140
   140019b5f:	ins    BYTE PTR es:[rdi],dx
   140019b60:	rex.RB jb 0x140019bd5
   140019b63:	outs   dx,DWORD PTR ds:[rsi]
   140019b64:	jb     0x140019ba6
   140019b66:	rex push rcx
   140019b68:	rex.RB
   140019b69:	rex.X
   140019b6a:	rex.B (bad) 
   140019b6c:	push   r14
   140019b6e:	push   rcx
   140019b6f:	push   rbx
   140019b70:	je     0x140019be4
   140019b72:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140019b79:	add    BYTE PTR [rbp+0x72653f07],ch
   140019b7f:	jb     0x140019bf0
   140019b81:	jb     0x140019bf6
   140019b83:	rex push rcx
   140019b85:	push   rcx
   140019b86:	ins    DWORD PTR es:[rdi],dx
   140019b87:	ins    BYTE PTR es:[rdi],dx
   140019b88:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019b8a:	ins    DWORD PTR es:[rdi],dx
   140019b8b:	jo     0x140019bfc
   140019b8d:	outs   dx,BYTE PTR ds:[rsi]
   140019b8e:	outs   dx,BYTE PTR gs:[rsi]
   140019b90:	je     0x140019bd2
   140019b92:	rex push rcx
   140019b94:	rex.RB
   140019b95:	rex.X
   140019b96:	rex.B (bad) 
   140019b98:	push   r14
   140019b9a:	(bad)  
   140019b9b:	and    al,0x51
   140019b9d:	imul   r14,QWORD PTR [rbx+0x74],0x51515640
   140019ba5:	ins    DWORD PTR es:[rdi],dx
   140019ba6:	ins    BYTE PTR es:[rdi],dx
   140019ba7:	rex.RB jb 0x140019c1c
   140019baa:	outs   dx,DWORD PTR ds:[rsi]
   140019bab:	jb     0x140019bed
   140019bad:	rex
   140019bae:	rex
   140019baf:	rex pop rax
   140019bb1:	pop    rdx
   140019bb2:	add    BYTE PTR [rax],al
   140019bb4:	mov    eax,0x65733f0d
   140019bb9:	je     0x140019bff
   140019bbb:	(bad)  
   140019bbc:	je     0x140019c1f
   140019bbe:	rex push rcx
   140019bc0:	push   rcx
   140019bc1:	ins    DWORD PTR es:[rdi],dx
   140019bc2:	ins    BYTE PTR es:[rdi],dx
   140019bc3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019bc5:	ins    DWORD PTR es:[rdi],dx
   140019bc6:	jo     0x140019c37
   140019bc8:	outs   dx,BYTE PTR ds:[rsi]
   140019bc9:	outs   dx,BYTE PTR gs:[rsi]
   140019bcb:	je     0x140019c0d
   140019bcd:	rex push rcx
   140019bcf:	rex.RB
   140019bd0:	rex.B
   140019bd1:	pop    r8
   140019bd3:	rex.B
   140019bd4:	rex.RB
   140019bd5:	rex.X push rsi
   140019bd7:	push   rcx
   140019bd8:	rex.X jns 0x140019c4f
   140019bdb:	gs rex.B jb 0x140019c51
   140019bdf:	(bad)  
   140019be0:	jns    0x140019c22
   140019be2:	rex
   140019be3:	rex.B
   140019be4:	rex.RB
   140019be5:	rex.X push rsi
   140019be7:	push   rcx
   140019be8:	push   rbp
   140019be9:	jb     0x140019c57
   140019beb:	rex
   140019bec:	rex
   140019bed:	rex pop rdx
   140019bef:	add    dl,cl
   140019bf1:	add    BYTE PTR [rdi],bh
   140019bf3:	(bad)  
   140019bf4:	xor    BYTE PTR [rcx+0x51],dl
   140019bf7:	ins    DWORD PTR es:[rdi],dx
   140019bf8:	ins    BYTE PTR es:[rdi],dx
   140019bf9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019bfb:	ins    DWORD PTR es:[rdi],dx
   140019bfc:	jo     0x140019c6d
   140019bfe:	outs   dx,BYTE PTR ds:[rsi]
   140019bff:	outs   dx,BYTE PTR gs:[rsi]
   140019c01:	je     0x140019c43
   140019c03:	rex push rcx
   140019c05:	rex.RB
   140019c06:	rex.B
   140019c07:	rex.B
   140019c08:	rex push rax
   140019c0a:	rex.RB
   140019c0b:	push   r14
   140019c0d:	push   rcx
   140019c0e:	push   rcx
   140019c0f:	ins    DWORD PTR es:[rdi],dx
   140019c10:	ins    BYTE PTR es:[rdi],dx
   140019c11:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019c13:	imul   ebp,DWORD PTR [esi+0x65],0x45504040
   140019c1b:	push   r14
   140019c1d:	push   rcx
   140019c1e:	rex.WRXB (bad) 
   140019c20:	push   0x65
   140019c22:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019c26:	rex pop rdx
   140019c28:	add    BYTE PTR [rax],al
   140019c2a:	add    DWORD PTR [rdi+rdi*1],0x49646461
   140019c31:	ins    DWORD PTR es:[rdi],dx
   140019c32:	jo     0x140019ca3
   140019c34:	jb     0x140019caa
   140019c36:	push   rax
   140019c37:	(bad)  
   140019c38:	je     0x140019ca2
   140019c3a:	rex push rcx
   140019c3c:	push   rcx
   140019c3d:	ins    DWORD PTR es:[rdi],dx
   140019c3e:	ins    BYTE PTR es:[rdi],dx
   140019c3f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019c41:	imul   ebp,DWORD PTR [esi+0x65],0x45514040
   140019c49:	rex.B
   140019c4a:	pop    r8
   140019c4c:	rex.B
   140019c4d:	rex.RB
   140019c4e:	rex.X push rsi
   140019c50:	push   rcx
   140019c51:	push   rbx
   140019c52:	je     0x140019cc6
   140019c54:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140019c5b:	add    dl,ch
   140019c5d:	add    BYTE PTR [rdi],bh
   140019c5f:	(bad)  
   140019c60:	xor    BYTE PTR [rcx+0x51],dl
   140019c63:	ins    DWORD PTR es:[rdi],dx
   140019c64:	ins    BYTE PTR es:[rdi],dx
   140019c65:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140019c67:	imul   ebp,DWORD PTR [esi+0x65],0x45514040
   140019c6f:	rex.B
   140019c70:	rex.B
   140019c71:	rex push rax
   140019c73:	rex.RB
   140019c74:	push   r14
   140019c76:	push   rcx
   140019c77:	rex.WRXB (bad) 
   140019c79:	push   0x65
   140019c7b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019c7f:	rex pop rdx
   140019c81:	add    BYTE PTR [rcx+0x74],dl
   140019c84:	xor    eax,0x2e6c6d51
   140019c89:	fs ins BYTE PTR es:[rdi],dx
   140019c8b:	ins    BYTE PTR es:[rdi],dx
   140019c8c:	add    BYTE PTR [rax],al
   140019c8e:	xchg   esi,eax
   140019c8f:	or     BYTE PTR [rdi],bh
   140019c91:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140019c94:	jae    0x140019d0a
   140019c96:	rex.R (bad) 
   140019c98:	je     0x140019cfb
   140019c9a:	rex push rcx
   140019c9c:	rex.X jns 0x140019d13
   140019c9f:	gs rex.B jb 0x140019d15
   140019ca3:	(bad)  
   140019ca4:	jns    0x140019ce6
   140019ca6:	rex push rcx
   140019ca8:	rex.RB
   140019ca9:	rex.X
   140019caa:	push   r8
   140019cac:	rex.RB
   140019cad:	rex.X
   140019cae:	rex.R pop rax
   140019cb0:	pop    rdx
   140019cb1:	add    BYTE PTR [rdx+0x12],al
   140019cb4:	(bad)  
   140019cb5:	jno    0x140019d2a
   140019cb7:	je     0x140019d2b
   140019cb9:	movsxd ebp,DWORD PTR [rbp+0x70]
   140019cbc:	rex
   140019cbd:	rex pop rcx
   140019cbf:	rex.B
   140019cc0:	rex.W
   140019cc1:	rex.B
   140019cc2:	rex.RB
   140019cc3:	rex.X push rsi
   140019cc5:	push   rcx
   140019cc6:	rex.X jns 0x140019d3d
   140019cc9:	gs rex.B jb 0x140019d3f
   140019ccd:	(bad)  
   140019cce:	jns    0x140019d10
   140019cd0:	rex push rax
   140019cd2:	rex.RB
   140019cd3:	rex.X
   140019cd4:	rex.R
   140019cd5:	rex pop rdx
   140019cd7:	add    BYTE PTR [rdx+0x4],ah
   140019cda:	(bad)  
   140019cdb:	(bad)  
   140019cdc:	cmp    BYTE PTR [rax+0x59],al
   140019cdf:	pop    r15
   140019ce1:	rex.WRX
   140019ce2:	rex.B
   140019ce3:	rex.RB
   140019ce4:	rex.X push rsi
   140019ce6:	push   rcx
   140019ce7:	push   rbx
   140019ce8:	je     0x140019d5c
   140019cea:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140019cf1:	pop    rdx
   140019cf2:	add    BYTE PTR [rax],al
   140019cf4:	rol    BYTE PTR [rdx],1
   140019cf6:	(bad)  
   140019cf7:	(bad)  
   140019cf8:	xor    DWORD PTR [rcx+0x53],edx
   140019cfb:	je     0x140019d6f
   140019cfd:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019d04:	rex.B
   140019d05:	rex.B
   140019d06:	rex pop rax
   140019d08:	pop    rdx
   140019d09:	add    BYTE PTR [rdx+0x383f3f04],al
   140019d0f:	push   rcx
   140019d10:	push   rbx
   140019d11:	je     0x140019d85
   140019d13:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019d1a:	rex.X
   140019d1b:	pop    r15
   140019d1d:	rex.WRX push rsi
   140019d1f:	push   rcx
   140019d20:	rex.WR (bad) 
   140019d22:	je     0x140019d8d
   140019d24:	outs   dx,BYTE PTR ds:[rsi]
   140019d25:	xor    DWORD PTR [rbx+0x74],edx
   140019d28:	jb     0x140019d93
   140019d2a:	outs   dx,BYTE PTR ds:[rsi]
   140019d2b:	addr32 rex
   140019d2d:	rex
   140019d2e:	rex pop rdx
   140019d30:	add    BYTE PTR [rax],al
   140019d32:	pop    rax
   140019d33:	or     al,0x3f
   140019d35:	data16 jb 0x140019da7
   140019d38:	ins    DWORD PTR es:[rdi],dx
   140019d39:	push   rbp
   140019d3a:	je     0x140019da2
   140019d3c:	cmp    BYTE PTR [rax+0x51],al
   140019d3f:	push   rbx
   140019d40:	je     0x140019db4
   140019d42:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140019d49:	(bad)  
   140019d4a:	push   r14
   140019d4c:	xor    DWORD PTR [rax+0x50],eax
   140019d4f:	rex.RB
   140019d50:	rex.X
   140019d51:	rex.R
   140019d52:	rex.W
   140019d53:	rex pop rdx
   140019d55:	add    BYTE PTR [rdi],al
   140019d57:	sbb    BYTE PTR [rdi],bh
   140019d59:	jae    0x140019dd2
   140019d5b:	(bad)  
   140019d5c:	jo     0x140019d9e
   140019d5e:	push   rcx
   140019d5f:	push   rbx
   140019d60:	je     0x140019dd4
   140019d62:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019d69:	rex.B
   140019d6a:	pop    r8
   140019d6c:	rex.B
   140019d6d:	rex.RB
   140019d6e:	push   r14
   140019d70:	xor    DWORD PTR [rax+0x40],eax
   140019d73:	pop    rdx
   140019d74:	add    BYTE PTR [rax],al
   140019d76:	push   rdi
   140019d77:	add    BYTE PTR [rdi],bh
   140019d79:	(bad)  
   140019d7a:	xor    BYTE PTR [rcx+0x43],dl
   140019d7d:	push   0x40407261
   140019d82:	push   rcx
   140019d83:	rex.RB
   140019d84:	rex.B
   140019d85:	rex.B
   140019d86:	rex push rbp
   140019d88:	push   rcx
   140019d89:	rex.WR (bad) 
   140019d8b:	je     0x140019df6
   140019d8d:	outs   dx,BYTE PTR ds:[rsi]
   140019d8e:	xor    DWORD PTR [rbx+0x68],eax
   140019d91:	(bad)  
   140019d92:	jb     0x140019dd4
   140019d94:	rex
   140019d95:	rex pop rdx
   140019d97:	add    dl,dl
   140019d99:	(bad)  
   140019d9a:	(bad)  
   140019d9b:	(bad)  
   140019d9c:	jo     0x140019e0e
   140019d9e:	outs   dx,BYTE PTR gs:[rsi]
   140019da0:	fs rex.WR (bad) 
   140019da3:	je     0x140019e0e
   140019da5:	outs   dx,BYTE PTR ds:[rsi]
   140019da6:	xor    DWORD PTR [rdi+rbp*2+0x40],edx
   140019daa:	push   rcx
   140019dab:	(bad)
   140019db1:	movsxd esi,DWORD PTR [rbx+rax*2+0x6f]
   140019db5:	outs   dx,BYTE PTR ds:[rsi]
   140019db6:	movsxd esp,DWORD PTR [rcx+0x74]
   140019db9:	outs   dx,BYTE PTR gs:[rsi]
   140019dbb:	(bad)  
   140019dbc:	(bad)  
   140019dbd:	ins    BYTE PTR es:[rdi],dx
   140019dbe:	gs rex
   140019dc0:	rex
   140019dc1:	rex.WXB
   140019dc2:	pop    r8
   140019dc4:	push   rax
   140019dc5:	rex.RB
   140019dc6:	rex.X
   140019dc7:	rex.R
   140019dc8:	rex.W push rax
   140019dca:	rex.RB
   140019dcb:	push   r14
   140019dcd:	push   rcx
   140019dce:	rex.XB push 0x40407261
   140019dd4:	rex pop rdx
   140019dd6:	add    BYTE PTR [rax],al
   140019dd8:	cwde   
   140019dd9:	or     BYTE PTR [rdi],bh
   140019ddb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140019dde:	jae    0x140019e54
   140019de0:	rex.R (bad) 
   140019de2:	je     0x140019e45
   140019de4:	rex push rcx
   140019de6:	push   rbx
   140019de7:	je     0x140019e5b
   140019de9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019df0:	rex.X
   140019df1:	push   r8
   140019df3:	rex.RB
   140019df4:	rex.X push rsi
   140019df6:	push   rcx
   140019df7:	rex.XB push 0x40407261
   140019dfd:	pop    rax
   140019dfe:	pop    rdx
   140019dff:	add    BYTE PTR [rax],ch
   140019e01:	(bad)  
   140019e02:	(bad)  
   140019e03:	push   rcx
   140019e04:	push   rbx
   140019e05:	je     0x140019e79
   140019e07:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019e0e:	pop    rdi
   140019e0f:	jae    0x140019e80
   140019e11:	jb     0x140019e87
   140019e13:	rex push rcx
   140019e15:	je     0x140019e67
   140019e17:	jb     0x140019e82
   140019e19:	jbe    0x140019e7c
   140019e1b:	je     0x140019e82
   140019e1d:	rex
   140019e1e:	rex pop rcx
   140019e20:	pop    r8
   140019e22:	push   rax
   140019e23:	rex.RB
   140019e24:	push   r14
   140019e26:	push   rcx
   140019e27:	push   rbx
   140019e28:	je     0x140019e9c
   140019e2a:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019e31:	rex
   140019e32:	rex push rdi
   140019e34:	xor    al,0x43
   140019e36:	(bad)  
   140019e37:	jae    0x140019e9e
   140019e39:	push   rbx
   140019e3a:	outs   dx,BYTE PTR gs:[rsi]
   140019e3c:	jae    0x140019ea7
   140019e3e:	je     0x140019ea9
   140019e40:	jbe    0x140019eab
   140019e42:	je     0x140019ebd
   140019e44:	rex push rcx
   140019e46:	je     0x140019e88
   140019e48:	rex
   140019e49:	rex pop rdx
   140019e4b:	add    BYTE PTR [rax],ah
   140019e4d:	(bad)  
   140019e4e:	(bad)  
   140019e4f:	push   rcx
   140019e50:	push   rbx
   140019e51:	je     0x140019ec5
   140019e53:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019e5a:	pop    rdi
   140019e5b:	push   0x6f
   140019e5d:	imul   ebp,DWORD PTR [rsi+0x40],0x72507451
   140019e64:	imul   esi,DWORD PTR [rsi+0x61],0x40406574
   140019e6b:	pop    rcx
   140019e6c:	rex.B (bad) 
   140019e6e:	push   r14
   140019e70:	push   rcx
   140019e71:	push   rbx
   140019e72:	je     0x140019ee6
   140019e74:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140019e7b:	rex.X push rsi
   140019e7d:	push   rcx
   140019e7e:	push   rbx
   140019e7f:	je     0x140019ef3
   140019e81:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019e88:	rex
   140019e89:	rex push rax
   140019e8b:	rex.RB
   140019e8c:	rex.X push rsi
   140019e8e:	push   rcx
   140019e8f:	rex.XB push 0x40407261
   140019e95:	rex.W
   140019e96:	rex pop rdx
   140019e98:	add    BYTE PTR [rax],al
   140019e9a:	sbb    DWORD PTR [rsi],eax
   140019e9c:	(bad)  
   140019e9d:	push   rcx
   140019e9e:	push   rbx
   140019e9f:	je     0x140019f13
   140019ea1:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019ea8:	pop    rdi
   140019ea9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140019eac:	je     0x140019f0f
   140019eae:	imul   ebp,DWORD PTR [rsi+0x73],0x50745140
   140019eb5:	jb     0x140019f20
   140019eb7:	jbe    0x140019f1a
   140019eb9:	je     0x140019f20
   140019ebb:	rex
   140019ebc:	rex pop rcx
   140019ebe:	pop    r15
   140019ec0:	rex.WRX push rax
   140019ec2:	rex.RB
   140019ec3:	rex.X push rsi
   140019ec5:	push   rcx
   140019ec6:	push   rbx
   140019ec7:	je     0x140019f3b
   140019ec9:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140019ed0:	rex
   140019ed1:	rex
   140019ed2:	rex.B
   140019ed3:	rex.RB
   140019ed4:	rex.X push rsi
   140019ed6:	push   rcx
   140019ed7:	push   rbx
   140019ed8:	je     0x140019f4c
   140019eda:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   140019ee1:	rex.XB (bad) 
   140019ee3:	jae    0x140019f4a
   140019ee5:	push   rbx
   140019ee6:	outs   dx,BYTE PTR gs:[rsi]
   140019ee8:	jae    0x140019f53
   140019eea:	je     0x140019f55
   140019eec:	jbe    0x140019f57
   140019eee:	je     0x140019f69
   140019ef0:	rex push rcx
   140019ef2:	je     0x140019f34
   140019ef4:	rex
   140019ef5:	rex pop rdx
   140019ef7:	add    dh,bh
   140019ef9:	(bad)  
   140019efa:	(bad)  
   140019efb:	(bad)  
   140019efc:	je     0x140019f3e
   140019efe:	push   rcx
   140019eff:	rex.WX jae 0x140019f71
   140019f02:	outs   dx,BYTE PTR ds:[rsi]
   140019f03:	rex.B jb 0x140019f78
   140019f06:	(bad)  
   140019f07:	jns    0x140019f49
   140019f09:	rex push rcx
   140019f0b:	rex.RB
   140019f0c:	rex.X
   140019f0d:	rex.B (bad) 
   140019f0f:	push   r14
   140019f11:	push   rcx
   140019f12:	rex.WX jae 0x140019f84
   140019f15:	outs   dx,BYTE PTR ds:[rsi]
   140019f16:	push   rsi
   140019f17:	(bad)  
   140019f18:	ins    BYTE PTR es:[rdi],dx
   140019f19:	jne    0x140019f80
   140019f1b:	rex
   140019f1c:	rex
   140019f1d:	rex.W
   140019f1e:	rex pop rdx
   140019f20:	add    BYTE PTR [rax],al
   140019f22:	in     eax,0x6
   140019f24:	(bad)  
   140019f25:	(bad)  
   140019f26:	jb     0x140019f8f
   140019f28:	rex push rcx
   140019f2a:	push   rbx
   140019f2b:	je     0x140019f9f
   140019f2d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019f34:	rex.X
   140019f35:	rex.B (bad) 
   140019f37:	push   r14
   140019f39:	xor    DWORD PTR [rax+0x41],eax
   140019f3c:	rex.RB
   140019f3d:	rex.X push rsi
   140019f3f:	xor    DWORD PTR [rax+0x48],eax
   140019f42:	push   rsi
   140019f43:	push   rcx
   140019f44:	rex.XB push 0x40407261
   140019f4a:	rex pop rdx
   140019f4c:	add    BYTE PTR [rax],al
   140019f4e:	rex.WRB adc al,0x3f
   140019f51:	jb     0x140019fb8
   140019f53:	jo     0x140019fc1
   140019f55:	(bad)  
   140019f56:	movsxd esp,DWORD PTR [rbp+0x40]
   140019f59:	push   rcx
   140019f5a:	push   rbx
   140019f5b:	je     0x140019fcf
   140019f5d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019f64:	rex.B
   140019f65:	rex.B
   140019f66:	rex.B
   140019f67:	rex.RB
   140019f68:	push   r14
   140019f6a:	xor    DWORD PTR [rax+0x56],eax
   140019f6d:	push   rcx
   140019f6e:	rex.XB push 0x40407261
   140019f74:	push   rsi
   140019f75:	push   rcx
   140019f76:	rex.WR (bad) 
   140019f78:	je     0x140019fe3
   140019f7a:	outs   dx,BYTE PTR ds:[rsi]
   140019f7b:	xor    DWORD PTR [rbx+0x74],edx
   140019f7e:	jb     0x140019fe9
   140019f80:	outs   dx,BYTE PTR ds:[rsi]
   140019f81:	addr32 rex
   140019f83:	rex push rdi
   140019f85:	xor    al,0x43
   140019f87:	(bad)  
   140019f88:	jae    0x140019fef
   140019f8a:	push   rbx
   140019f8b:	outs   dx,BYTE PTR gs:[rsi]
   140019f8d:	jae    0x140019ff8
   140019f8f:	je     0x140019ffa
   140019f91:	jbe    0x140019ffc
   140019f93:	je     0x14001a00e
   140019f95:	rex push rcx
   140019f97:	je     0x140019fd9
   140019f99:	rex
   140019f9a:	rex pop rdx
   140019f9c:	add    BYTE PTR [rax],al
   140019f9e:	(bad)  
   140019f9f:	or     al,0x3f
   140019fa1:	data16 jb 0x14001a013
   140019fa4:	ins    DWORD PTR es:[rdi],dx
   140019fa5:	rex.B jae 0x14001a00b
   140019fa8:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   140019faf:	gs jb  0x140019ff2
   140019fb2:	push   rcx
   140019fb3:	push   rbx
   140019fb4:	je     0x14001a028
   140019fb6:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   140019fbd:	push   rax
   140019fbe:	rex.RB
   140019fbf:	push   r13
   140019fc1:	(bad)  
   140019fc2:	and    al,0x51
   140019fc4:	push   rsp
   140019fc5:	jns    0x14001a037
   140019fc7:	gs fs rex.B jb 0x14001a03e
   140019fcc:	(bad)  
   140019fcd:	jns    0x14001a013
   140019fcf:	(bad)  
   140019fd0:	je     0x14001a033
   140019fd2:	rex
   140019fd3:	rex.RXB
   140019fd4:	rex
   140019fd5:	rex push rax
   140019fd7:	rex.RB
   140019fd8:	rex.X
   140019fd9:	rex.R
   140019fda:	rex.W
   140019fdb:	rex pop rdx
   140019fdd:	add    BYTE PTR [rsi+0x303f3f01],cl
   140019fe3:	push   rcx
   140019fe4:	push   rbx
   140019fe5:	je     0x14001a059
   140019fe7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140019fee:	rex.B
   140019fef:	rex.B
   140019ff0:	rex
   140019ff1:	rex.B
   140019ff2:	rex.RB
   140019ff3:	rex.X push rsi
   140019ff5:	xor    BYTE PTR [rax+0x40],al
   140019ff8:	pop    rdx
   140019ff9:	add    ah,al
   140019ffb:	(bad)  
   140019ffc:	(bad)  
   140019ffd:	jae    0x14001a073
   140019fff:	(bad)  
   14001a000:	je     0x14001a06b
   14001a002:	movsxd edx,DWORD PTR [rcx+0x74]
   14001a005:	rex.WRB
   14001a006:	gs je  0x14001a06a
   14001a009:	rex.WRXB (bad) 
   14001a00b:	push   0x65
   14001a00d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a011:	rex.WRXB (bad) 
   14001a013:	push   0x65
   14001a015:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a019:	xor    DWORD PTR [rbp+0x51],edx
   14001a01c:	rex.WRB
   14001a01d:	gs je  0x14001a081
   14001a020:	rex.WRXB (bad) 
   14001a022:	push   0x65
   14001a024:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a028:	rex.X add BYTE PTR [rdi+0x303f3f01],dl
   14001a02f:	push   rcx
   14001a030:	push   rbx
   14001a031:	je     0x14001a0a5
   14001a033:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a03a:	rex.B
   14001a03b:	rex.B
   14001a03c:	rex pop rax
   14001a03e:	pop    rdx
   14001a03f:	add    BYTE PTR [rsi+0x3],bh
   14001a042:	(bad)  
   14001a043:	(bad)  
   14001a044:	xor    al,0x51
   14001a046:	push   rbx
   14001a047:	je     0x14001a0bb
   14001a049:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a050:	rex.B
   14001a051:	rex.B
   14001a052:	rex.B
   14001a053:	rex.RB
   14001a054:	push   r14
   14001a056:	xor    BYTE PTR [rax+0x41],al
   14001a059:	rex.RB
   14001a05a:	rex.X push rsi
   14001a05c:	xor    BYTE PTR [rax+0x40],al
   14001a05f:	pop    rdx
   14001a060:	add    BYTE PTR [rax],al
   14001a062:	xchg   esi,eax
   14001a063:	add    DWORD PTR [rdi],edi
   14001a065:	(bad)  
   14001a066:	xor    BYTE PTR [rcx+0x53],dl
   14001a069:	je     0x14001a0dd
   14001a06b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a072:	rex.B
   14001a073:	rex.B
   14001a074:	rex push rsi
   14001a076:	push   rcx
   14001a077:	rex.WR (bad) 
   14001a079:	je     0x14001a0e4
   14001a07b:	outs   dx,BYTE PTR ds:[rsi]
   14001a07c:	xor    DWORD PTR [rbx+0x74],edx
   14001a07f:	jb     0x14001a0ea
   14001a081:	outs   dx,BYTE PTR ds:[rsi]
   14001a082:	addr32 rex
   14001a084:	rex
   14001a085:	rex pop rdx
   14001a087:	add    BYTE PTR [rdx+0x313f3f02],bl
   14001a08d:	push   rcx
   14001a08e:	rex.WX jae 0x14001a100
   14001a091:	outs   dx,BYTE PTR ds:[rsi]
   14001a092:	rex.B jb 0x14001a107
   14001a095:	(bad)  
   14001a096:	jns    0x14001a0d8
   14001a098:	rex push rcx
   14001a09a:	rex.RB
   14001a09b:	rex.B
   14001a09c:	rex.B
   14001a09d:	rex pop rax
   14001a09f:	pop    rdx
   14001a0a0:	add    BYTE PTR [rax],al
   14001a0a2:	rcl    DWORD PTR [rsi],1
   14001a0a4:	(bad)  
   14001a0a5:	jae    0x14001a10f
   14001a0a7:	(bad)  
   14001a0a8:	jb     0x14001a10f
   14001a0aa:	fs pop rdi
   14001a0ac:	outs   dx,BYTE PTR ds:[rsi]
   14001a0ad:	jne    0x14001a11b
   14001a0af:	ins    BYTE PTR es:[rdi],dx
   14001a0b0:	rex push rcx
   14001a0b2:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a0ba:	rex
   14001a0bb:	xor    dl,BYTE PTR [rbp+0x44]
   14001a0bf:	(bad)  
   14001a0c0:	je     0x14001a123
   14001a0c2:	rex xor DWORD PTR [rax+0x42],eax
   14001a0c6:	add    BYTE PTR [rax],al
   14001a0c8:	iret   
   14001a0c9:	(bad)  
   14001a0ca:	(bad)  
   14001a0cb:	jae    0x14001a135
   14001a0cd:	(bad)  
   14001a0ce:	jb     0x14001a135
   14001a0d0:	fs pop rdi
   14001a0d2:	outs   dx,BYTE PTR ds:[rsi]
   14001a0d3:	jne    0x14001a141
   14001a0d5:	ins    BYTE PTR es:[rdi],dx
   14001a0d6:	rex push rcx
   14001a0d8:	rex.W (bad) 
   14001a0da:	jae    0x14001a144
   14001a0dc:	rex.R (bad) 
   14001a0de:	je     0x14001a141
   14001a0e0:	rex
   14001a0e1:	xor    dl,BYTE PTR [rbp+0x31]
   14001a0e5:	rex
   14001a0e6:	rex.X add dl,dl
   14001a0e9:	(bad)  
   14001a0ea:	(bad)  
   14001a0eb:	jae    0x14001a155
   14001a0ed:	(bad)  
   14001a0ee:	jb     0x14001a155
   14001a0f0:	fs pop rdi
   14001a0f2:	outs   dx,BYTE PTR ds:[rsi]
   14001a0f3:	jne    0x14001a161
   14001a0f5:	ins    BYTE PTR es:[rdi],dx
   14001a0f6:	rex push rcx
   14001a0f8:	rex.WRB (bad) 
   14001a0fa:	jo     0x14001a140
   14001a0fc:	(bad)  
   14001a0fd:	je     0x14001a160
   14001a0ff:	rex.X (bad) 
   14001a101:	jae    0x14001a168
   14001a103:	rex
   14001a104:	xor    dl,BYTE PTR [rbp+0x31]
   14001a108:	rex
   14001a109:	rex.X add BYTE PTR [rax],al
   14001a10c:	xchg   edx,eax
   14001a10d:	adc    BYTE PTR [rdi],bh
   14001a10f:	outs   dx,BYTE PTR ds:[rsi]
   14001a110:	gs js  0x14001a187
   14001a113:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a115:	fs gs rex push rcx
   14001a119:	rex.W (bad) 
   14001a11b:	jae    0x14001a185
   14001a11d:	rex.R (bad) 
   14001a11f:	je     0x14001a182
   14001a121:	rex
   14001a122:	rex push rbx
   14001a124:	push   r8
   14001a126:	rex.RB
   14001a127:	push   r13
   14001a129:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a12b:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14001a131:	rex.RB
   14001a132:	push   r13
   14001a134:	xor    dh,BYTE PTR [rcx]
   14001a136:	rex
   14001a137:	rex pop rdx
   14001a139:	add    BYTE PTR [rax+rdx*1+0x78656e3f],dl
   14001a140:	je     0x14001a190
   14001a142:	outs   dx,DWORD PTR ds:[rsi]
   14001a143:	fs gs rex push rcx
   14001a147:	rex.WRB (bad) 
   14001a149:	jo     0x14001a199
   14001a14b:	outs   dx,DWORD PTR ds:[rsi]
   14001a14c:	fs gs rex.X (bad) 
   14001a150:	jae    0x14001a1b7
   14001a152:	rex
   14001a153:	rex push rcx
   14001a155:	rex.RB
   14001a156:	rex.X
   14001a157:	push   r8
   14001a159:	rex.RB
   14001a15a:	rex.X push rbp
   14001a15c:	xor    DWORD PTR [rax+0x58],eax
   14001a15f:	pop    rdx
   14001a160:	add    BYTE PTR [rax],al
   14001a162:	loopne 0x14001a16e
   14001a164:	(bad)  
   14001a165:	outs   dx,BYTE PTR gs:[rsi]
   14001a167:	fs rex push rcx
   14001a16a:	rex.WX jae 0x14001a1dc
   14001a16d:	outs   dx,BYTE PTR ds:[rsi]
   14001a16e:	rex.B jb 0x14001a1e3
   14001a171:	(bad)  
   14001a172:	jns    0x14001a1b4
   14001a174:	rex push rcx
   14001a176:	rex.RB
   14001a177:	rex.X
   14001a178:	rex.B (bad) 
   14001a17a:	push   r14
   14001a17c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a17f:	jae    0x14001a1f5
   14001a181:	pop    rdi
   14001a182:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14001a18a:	rex xor DWORD PTR [rax+0x58],eax
   14001a18e:	pop    rdx
   14001a18f:	add    BYTE PTR [rdi],bh
   14001a191:	(bad)  
   14001a192:	(bad)  
   14001a193:	(bad)  
   14001a194:	imul   ebp,DWORD PTR gs:[esi+0x40],0x6f734a51
   14001a19d:	outs   dx,BYTE PTR ds:[rsi]
   14001a19e:	rex.B jb 0x14001a213
   14001a1a1:	(bad)  
   14001a1a2:	jns    0x14001a1e4
   14001a1a4:	rex push rcx
   14001a1a6:	rex.RB
   14001a1a7:	rex.X
   14001a1a8:	rex.B (bad) 
   14001a1aa:	push   r14
   14001a1ac:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a1af:	jae    0x14001a225
   14001a1b1:	pop    rdi
   14001a1b2:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14001a1ba:	rex xor DWORD PTR [rax+0x58],eax
   14001a1be:	pop    rdx
   14001a1bf:	add    ah,bl
   14001a1c1:	add    BYTE PTR [rdi],bh
   14001a1c3:	(bad)  
   14001a1c4:	xor    BYTE PTR [rcx+0x4a],dl
   14001a1c7:	jae    0x14001a238
   14001a1c9:	outs   dx,BYTE PTR ds:[rsi]
   14001a1ca:	rex.B jb 0x14001a23f
   14001a1cd:	(bad)  
   14001a1ce:	jns    0x14001a210
   14001a1d0:	rex push rcx
   14001a1d2:	rex.RB
   14001a1d3:	rex.B
   14001a1d4:	rex.B
   14001a1d5:	rex
   14001a1d6:	rex.B
   14001a1d7:	rex.RB
   14001a1d8:	rex.X push rsi
   14001a1da:	xor    BYTE PTR [rax+0x40],al
   14001a1dd:	pop    rdx
   14001a1de:	add    BYTE PTR [rax],al
   14001a1e0:	sub    ecx,DWORD PTR [rcx]
   14001a1e2:	(bad)  
   14001a1e3:	movsxd esi,DWORD PTR [rdx+0x65]
   14001a1e6:	(bad)  
   14001a1e7:	je     0x14001a24e
   14001a1e9:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a1eb:	fs gs rex push rcx
   14001a1ef:	rex.WRB (bad) 
   14001a1f1:	jo     0x14001a237
   14001a1f3:	(bad)  
   14001a1f4:	je     0x14001a257
   14001a1f6:	rex.X (bad) 
   14001a1f8:	jae    0x14001a25f
   14001a1fa:	rex
   14001a1fb:	rex push rcx
   14001a1fd:	rex.RB
   14001a1fe:	rex.B
   14001a1ff:	push   r8
   14001a201:	rex.RB
   14001a202:	push   r13
   14001a204:	push   rcx
   14001a205:	rex.WRB (bad) 
   14001a207:	jo     0x14001a257
   14001a209:	outs   dx,DWORD PTR ds:[rsi]
   14001a20a:	fs gs rex.X (bad) 
   14001a20e:	jae    0x14001a275
   14001a210:	rex
   14001a211:	rex
   14001a212:	rex.W
   14001a213:	rex.W push rax
   14001a215:	rex.RB
   14001a216:	push   r13
   14001a218:	xor    al,BYTE PTR [rax+0x5f]
   14001a21b:	rex.WRX
   14001a21c:	rex pop rdx
   14001a21e:	add    BYTE PTR [rax],al
   14001a220:	jge    0x14001a233
   14001a222:	(bad)  
   14001a223:	jo     0x14001a297
   14001a225:	gs jbe 0x14001a291
   14001a228:	outs   dx,DWORD PTR ds:[rsi]
   14001a229:	jne    0x14001a29e
   14001a22b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a22d:	fs gs rex push rcx
   14001a231:	rex.W (bad) 
   14001a233:	jae    0x14001a29d
   14001a235:	rex.R (bad) 
   14001a237:	je     0x14001a29a
   14001a239:	rex
   14001a23a:	rex push rbx
   14001a23c:	push   r8
   14001a23e:	rex.RB
   14001a23f:	push   r13
   14001a241:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a243:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14001a249:	rex.RB
   14001a24a:	push   r13
   14001a24c:	xor    dh,BYTE PTR [rcx]
   14001a24e:	rex
   14001a24f:	rex pop rdx
   14001a251:	add    bh,bh
   14001a253:	add    al,0x3f
   14001a255:	(bad)  
   14001a256:	rex.WRB
   14001a257:	rex pop rcx
   14001a259:	pop    r15
   14001a25b:	rex.WRX
   14001a25c:	rex.B
   14001a25d:	rex.RB
   14001a25e:	rex.X push rsi
   14001a260:	push   rcx
   14001a261:	push   rbx
   14001a262:	je     0x14001a2d6
   14001a264:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14001a26b:	pop    rdx
   14001a26c:	add    BYTE PTR [rax],al
   14001a26e:	data16 add bh,BYTE PTR [rdi]
   14001a271:	(bad)  
   14001a272:	xor    DWORD PTR [rcx+0x42],edx
   14001a275:	jns    0x14001a2eb
   14001a277:	gs rex.B jb 0x14001a2ed
   14001a27b:	(bad)  
   14001a27c:	jns    0x14001a2be
   14001a27e:	rex push rcx
   14001a280:	rex.RB
   14001a281:	rex.B
   14001a282:	rex.B
   14001a283:	rex pop rax
   14001a285:	pop    rdx
   14001a286:	add    BYTE PTR [rax],al
   14001a288:	fimul  WORD PTR [rax]
   14001a28a:	(bad)  
   14001a28b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a28e:	jbe    0x14001a2f5
   14001a290:	jb     0x14001a306
   14001a292:	rex.RX jb 0x14001a304
   14001a295:	ins    DWORD PTR es:[rdi],dx
   14001a296:	rex.B jae 0x14001a2fc
   14001a299:	imul   ebp,DWORD PTR [rcx+0x40],0x73624151
   14001a2a0:	je     0x14001a314
   14001a2a2:	(bad)  
   14001a2a3:	movsxd esi,DWORD PTR [rbx+rax*2+0x6f]
   14001a2a7:	outs   dx,BYTE PTR ds:[rsi]
   14001a2a8:	movsxd esp,DWORD PTR [rcx+0x74]
   14001a2ab:	outs   dx,BYTE PTR gs:[rsi]
   14001a2ad:	(bad)  
   14001a2ae:	(bad)  
   14001a2af:	ins    BYTE PTR es:[rdi],dx
   14001a2b0:	gs rex
   14001a2b2:	rex
   14001a2b3:	rex.WXB
   14001a2b4:	pop    r8
   14001a2b6:	push   rax
   14001a2b7:	rex.RB
   14001a2b8:	rex.X
   14001a2b9:	rex.R
   14001a2ba:	rex.W
   14001a2bb:	rex.B
   14001a2bc:	rex.RB
   14001a2bd:	push   r8
   14001a2bf:	rex.RB
   14001a2c0:	push   r14
   14001a2c2:	push   rcx
   14001a2c3:	rex.XB push 0x40407261
   14001a2c9:	rex pop rdx
   14001a2cb:	add    BYTE PTR [rip+0x72633f09],bl        # 0x1b264e1da
   14001a2d1:	gs (bad) 
   14001a2d3:	je     0x14001a33a
   14001a2d5:	rex.R (bad) 
   14001a2d7:	je     0x14001a33a
   14001a2d9:	rex push rcx
   14001a2db:	rex.WRB (bad) 
   14001a2dd:	jo     0x14001a323
   14001a2df:	(bad)  
   14001a2e0:	je     0x14001a343
   14001a2e2:	rex.X (bad) 
   14001a2e4:	jae    0x14001a34b
   14001a2e6:	rex
   14001a2e7:	rex push rbx
   14001a2e9:	push   r8
   14001a2eb:	rex.RB
   14001a2ec:	push   r13
   14001a2ee:	xor    DWORD PTR [rax+0x58],eax
   14001a2f1:	pop    rdx
   14001a2f2:	add    BYTE PTR [rax],al
   14001a2f4:	add    BYTE PTR [r15],r15b
   14001a2f7:	(bad)  
   14001a2f8:	xor    BYTE PTR [rcx+0x42],dl
   14001a2fb:	jns    0x14001a371
   14001a2fd:	gs rex.B jb 0x14001a373
   14001a301:	(bad)  
   14001a302:	jns    0x14001a344
   14001a304:	rex push rcx
   14001a306:	rex.RB
   14001a307:	rex.B
   14001a308:	rex.B
   14001a309:	rex
   14001a30a:	rex.B
   14001a30b:	rex.RB
   14001a30c:	rex.X push rsi
   14001a30e:	xor    BYTE PTR [rax+0x40],al
   14001a311:	pop    rdx
   14001a312:	add    BYTE PTR [rax],al
   14001a314:	adc    cl,BYTE PTR [rdi+rdi*1]
   14001a317:	data16 jb 0x14001a37f
   14001a31a:	gs pop rdi
   14001a31c:	push   0x65706c65
   14001a321:	jb     0x14001a363
   14001a323:	push   rcx
   14001a324:	rex.W (bad) 
   14001a326:	jae    0x14001a390
   14001a328:	rex.R (bad) 
   14001a32a:	je     0x14001a38d
   14001a32c:	rex
   14001a32d:	rex push rcx
   14001a32f:	rex.RB
   14001a330:	rex.B
   14001a331:	pop    r8
   14001a333:	push   rax
   14001a334:	ss pop r8
   14001a337:	push   rax
   14001a338:	rex.RB
   14001a339:	push   r13
   14001a33b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a33d:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   14001a343:	pop    rdx
   14001a344:	rex pop rdx
   14001a346:	add    BYTE PTR [rax],al
   14001a348:	xchg   ecx,eax
   14001a349:	add    DWORD PTR [rdi],edi
   14001a34b:	(bad)  
   14001a34c:	xor    BYTE PTR [rcx+0x53],dl
   14001a34f:	je     0x14001a3c3
   14001a351:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a358:	rex.B
   14001a359:	rex.B
   14001a35a:	rex
   14001a35b:	rex.W push rdi
   14001a35d:	xor    al,0x49
   14001a35f:	outs   dx,BYTE PTR ds:[rsi]
   14001a360:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   14001a368:	je     0x14001a3d3
   14001a36a:	outs   dx,DWORD PTR ds:[rsi]
   14001a36b:	outs   dx,BYTE PTR ds:[rsi]
   14001a36c:	rex push rcx
   14001a36e:	je     0x14001a3b0
   14001a370:	rex
   14001a371:	rex pop rdx
   14001a373:	add    BYTE PTR [rcx+0x69643f0a],cl
   14001a379:	jae    0x14001a3eb
   14001a37b:	outs   dx,DWORD PTR ds:[rsi]
   14001a37c:	jae    0x14001a3e3
   14001a37e:	rex push rcx
   14001a380:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a388:	rex
   14001a389:	rex push rbx
   14001a38b:	pop    r8
   14001a38d:	push   rax
   14001a38e:	rex.RB
   14001a38f:	push   r13
   14001a391:	rex.R (bad) 
   14001a393:	je     0x14001a3f6
   14001a395:	rex xor DWORD PTR [rax+0x40],eax
   14001a399:	pop    rdx
   14001a39a:	add    BYTE PTR [rax],al
   14001a39c:	test   eax,0x6c613f06
   14001a3a1:	ins    BYTE PTR es:[rdi],dx
   14001a3a2:	outs   dx,DWORD PTR ds:[rsi]
   14001a3a3:	movsxd esp,DWORD PTR [rcx+0x74]
   14001a3a6:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14001a3a9:	fs gs rex push rcx
   14001a3ad:	rex.W (bad) 
   14001a3af:	jae    0x14001a419
   14001a3b1:	rex.R (bad) 
   14001a3b3:	je     0x14001a416
   14001a3b5:	rex
   14001a3b6:	rex push rcx
   14001a3b8:	rex.RB
   14001a3b9:	rex.B
   14001a3ba:	push   r8
   14001a3bc:	rex.RB
   14001a3bd:	pop    r8
   14001a3bf:	rex.W
   14001a3c0:	rex pop rdx
   14001a3c2:	add    BYTE PTR [rax],al
   14001a3c4:	(bad)  
   14001a3c6:	(bad)  
   14001a3c7:	data16 jb 0x14001a42f
   14001a3ca:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14001a3cd:	fs gs rex push rcx
   14001a3d1:	rex.W (bad) 
   14001a3d3:	jae    0x14001a43d
   14001a3d5:	rex.R (bad) 
   14001a3d7:	je     0x14001a43a
   14001a3d9:	rex
   14001a3da:	rex push rcx
   14001a3dc:	rex.RB
   14001a3dd:	rex.B
   14001a3de:	pop    r8
   14001a3e0:	push   rax
   14001a3e1:	rex.RB
   14001a3e2:	pop    r8
   14001a3e4:	rex pop rdx
   14001a3e6:	add    BYTE PTR [rax],al
   14001a3e8:	mov    bl,0x18
   14001a3ea:	(bad)  
   14001a3eb:	je     0x14001a45c
   14001a3ed:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a3ef:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a3f2:	cmp    BYTE PTR [rdx+0x69],al
   14001a3f5:	je     0x14001a437
   14001a3f7:	push   rcx
   14001a3f8:	push   rbx
   14001a3f9:	je     0x14001a46d
   14001a3fb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a402:	rex.X
   14001a403:	rex.B (bad) 
   14001a405:	push   r14
   14001a407:	push   rcx
   14001a408:	rex.X jns 0x14001a47f
   14001a40b:	gs rex.B jb 0x14001a481
   14001a40f:	(bad)  
   14001a410:	jns    0x14001a452
   14001a412:	rex pop rax
   14001a414:	pop    rdx
   14001a415:	add    BYTE PTR [rax+0x74753f1a],cl
   14001a41b:	xor    WORD PTR [rsi],si
   14001a41e:	rex push rcx
   14001a420:	push   rbx
   14001a421:	je     0x14001a495
   14001a423:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a42a:	rex.X
   14001a42b:	push   r8
   14001a42d:	rex.RB
   14001a42e:	rex.X
   14001a42f:	rex.RXB pop r8
   14001a431:	pop    rdx
   14001a432:	add    BYTE PTR [rax],al
   14001a434:	jns    0x14001a44a
   14001a436:	(bad)  
   14001a437:	jb     0x14001a49e
   14001a439:	jae    0x14001a4a4
   14001a43b:	jp     0x14001a4a2
   14001a43d:	rex push rcx
   14001a43f:	push   rbx
   14001a440:	je     0x14001a4b4
   14001a442:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a449:	rex.B
   14001a44a:	pop    r8
   14001a44c:	rex.W
   14001a44d:	rex pop rdx
   14001a44f:	add    bl,ch
   14001a451:	adc    DWORD PTR [rdi],edi
   14001a453:	jno    0x14001a49d
   14001a455:	(bad)  
   14001a456:	jae    0x14001a4c0
   14001a458:	rex
   14001a459:	rex pop rcx
   14001a45b:	rex.B
   14001a45c:	rex.WB
   14001a45d:	rex.B
   14001a45e:	rex.RB
   14001a45f:	rex.X push rsi
   14001a461:	push   rcx
   14001a462:	push   rbx
   14001a463:	je     0x14001a4d7
   14001a465:	imul   ebp,DWORD PTR [rsi+0x67],0x40494040
   14001a46c:	pop    rdx
   14001a46d:	add    ah,ah
   14001a46f:	adc    DWORD PTR [rdi],edi
   14001a471:	jno    0x14001a4bb
   14001a473:	(bad)  
   14001a474:	jae    0x14001a4de
   14001a476:	rex
   14001a477:	rex pop rcx
   14001a479:	rex.B
   14001a47a:	rex.WB
   14001a47b:	rex.B
   14001a47c:	rex.RB
   14001a47d:	rex.X push rsi
   14001a47f:	push   rcx
   14001a480:	rex.X jns 0x14001a4f7
   14001a483:	gs rex.B jb 0x14001a4f9
   14001a487:	(bad)  
   14001a488:	jns    0x14001a4ca
   14001a48a:	rex
   14001a48b:	rex.WB
   14001a48c:	rex pop rdx
   14001a48e:	add    BYTE PTR [rax],al
   14001a490:	jrcxz  0x14001a498
   14001a492:	(bad)  
   14001a493:	(bad)  
   14001a494:	jb     0x14001a4fd
   14001a496:	rex push rcx
   14001a498:	push   rbx
   14001a499:	je     0x14001a50d
   14001a49b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a4a2:	rex.X
   14001a4a3:	rex.B (bad) 
   14001a4a5:	push   r14
   14001a4a7:	xor    DWORD PTR [rax+0x41],eax
   14001a4aa:	rex.RB
   14001a4ab:	rex.X push rsi
   14001a4ad:	xor    DWORD PTR [rax+0x30],eax
   14001a4b0:	xor    BYTE PTR [rax+0x5a],al
   14001a4b3:	add    al,al
   14001a4b5:	adc    BYTE PTR [rdi],bh
   14001a4b7:	outs   dx,BYTE PTR ds:[rsi]
   14001a4b8:	jne    0x14001a527
   14001a4ba:	(bad)  
   14001a4bb:	gs jb  0x14001a4fe
   14001a4be:	push   rcx
   14001a4bf:	push   rbx
   14001a4c0:	je     0x14001a534
   14001a4c2:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001a4c9:	(bad)  
   14001a4ca:	push   r14
   14001a4cc:	xor    DWORD PTR [rax+0x48],eax
   14001a4cf:	rex.W
   14001a4d0:	rex pop rdx
   14001a4d2:	add    BYTE PTR [rax],al
   14001a4d4:	jno    0x14001a4ed
   14001a4d6:	(bad)  
   14001a4d7:	jae    0x14001a54d
   14001a4d9:	(bad)  
   14001a4da:	jb     0x14001a550
   14001a4dc:	jae    0x14001a535
   14001a4de:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001a4e6:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a4ed:	rex.X
   14001a4ee:	pop    r15
   14001a4f0:	rex.WRX push rsi
   14001a4f2:	push   rcx
   14001a4f3:	rex.XB push 0x40407261
   14001a4f9:	push   rdi
   14001a4fa:	xor    al,0x43
   14001a4fc:	(bad)  
   14001a4fd:	jae    0x14001a564
   14001a4ff:	push   rbx
   14001a500:	outs   dx,BYTE PTR gs:[rsi]
   14001a502:	jae    0x14001a56d
   14001a504:	je     0x14001a56f
   14001a506:	jbe    0x14001a571
   14001a508:	je     0x14001a583
   14001a50a:	rex push rcx
   14001a50c:	je     0x14001a54e
   14001a50e:	rex
   14001a50f:	rex pop rdx
   14001a511:	add    al,dl
   14001a513:	adc    edi,DWORD PTR [rdi]
   14001a515:	jb     0x14001a57c
   14001a517:	ins    DWORD PTR es:[rdi],dx
   14001a518:	outs   dx,DWORD PTR ds:[rsi]
   14001a519:	jbe    0x14001a580
   14001a51b:	rex push rcx
   14001a51d:	push   rbx
   14001a51e:	je     0x14001a592
   14001a520:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a527:	rex.B
   14001a528:	rex.B
   14001a529:	rex.B
   14001a52a:	rex.RB
   14001a52b:	push   r14
   14001a52d:	xor    DWORD PTR [rax+0x48],eax
   14001a530:	rex.W
   14001a531:	rex pop rdx
   14001a533:	add    BYTE PTR [rdi+0x17],ch
   14001a536:	(bad)  
   14001a537:	jae    0x14001a5ad
   14001a539:	(bad)  
   14001a53a:	jb     0x14001a5b0
   14001a53c:	jae    0x14001a595
   14001a53e:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001a546:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a54d:	rex.X
   14001a54e:	pop    r15
   14001a550:	rex.WRX
   14001a551:	rex.B
   14001a552:	rex.RB
   14001a553:	rex.X push rsi
   14001a555:	xor    DWORD PTR [rax+0x57],eax
   14001a558:	xor    al,0x43
   14001a55a:	(bad)  
   14001a55b:	jae    0x14001a5c2
   14001a55d:	push   rbx
   14001a55e:	outs   dx,BYTE PTR gs:[rsi]
   14001a560:	jae    0x14001a5cb
   14001a562:	je     0x14001a5cd
   14001a564:	jbe    0x14001a5cf
   14001a566:	je     0x14001a5e1
   14001a568:	rex push rcx
   14001a56a:	je     0x14001a5ac
   14001a56c:	rex
   14001a56d:	rex pop rdx
   14001a56f:	add    BYTE PTR [rsi],cl
   14001a571:	or     al,0x3f
   14001a573:	data16 jb 0x14001a5db
   14001a576:	gs rex.R (bad) 
   14001a579:	je     0x14001a5dc
   14001a57b:	rex push rcx
   14001a57d:	rex.WRB (bad) 
   14001a57f:	jo     0x14001a5c5
   14001a581:	(bad)  
   14001a582:	je     0x14001a5e5
   14001a584:	rex.X (bad) 
   14001a586:	jae    0x14001a5ed
   14001a588:	rex
   14001a589:	rex push rbx
   14001a58b:	pop    r8
   14001a58d:	push   rax
   14001a58e:	rex.RB
   14001a58f:	push   r13
   14001a591:	xor    DWORD PTR [rax+0x40],eax
   14001a594:	pop    rdx
   14001a595:	add    BYTE PTR [rcx],dl
   14001a597:	or     al,0x3f
   14001a599:	data16 jb 0x14001a601
   14001a59c:	gs push rsp
   14001a59e:	jb     0x14001a605
   14001a5a0:	gs rex push rcx
   14001a5a3:	rex.WRB (bad) 
   14001a5a5:	jo     0x14001a5eb
   14001a5a7:	(bad)  
   14001a5a8:	je     0x14001a60b
   14001a5aa:	rex.X (bad) 
   14001a5ac:	jae    0x14001a613
   14001a5ae:	rex
   14001a5af:	rex push rcx
   14001a5b1:	rex.RB
   14001a5b2:	rex.B
   14001a5b3:	pop    r8
   14001a5b5:	push   rax
   14001a5b6:	rex.RB
   14001a5b7:	push   r13
   14001a5b9:	push   rcx
   14001a5ba:	rex.WRB (bad) 
   14001a5bc:	jo     0x14001a60c
   14001a5be:	outs   dx,DWORD PTR ds:[rsi]
   14001a5bf:	fs gs rex.X (bad) 
   14001a5c3:	jae    0x14001a62a
   14001a5c5:	rex
   14001a5c6:	rex
   14001a5c7:	rex.W
   14001a5c8:	rex pop rdx
   14001a5ca:	add    BYTE PTR [rax],al
   14001a5cc:	push   rbx
   14001a5cd:	or     bh,BYTE PTR [rdi]
   14001a5cf:	fs gs je 0x14001a634
   14001a5d3:	movsxd ebp,DWORD PTR [rax+0x40]
   14001a5d6:	push   rcx
   14001a5d7:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a5df:	rex
   14001a5e0:	rex push rcx
   14001a5e2:	rex.RB
   14001a5e3:	rex.B
   14001a5e4:	push   r8
   14001a5e6:	rex.RB
   14001a5e7:	push   r13
   14001a5e9:	rex.R (bad) 
   14001a5eb:	je     0x14001a64e
   14001a5ed:	rex xor DWORD PTR [rax+0x48],eax
   14001a5f1:	rex pop rdx
   14001a5f3:	add    BYTE PTR [rsi+0xa],bl
   14001a5f6:	(bad)  
   14001a5f7:	fs gs je 0x14001a65c
   14001a5fb:	movsxd ebp,DWORD PTR [rax+0x5f]
   14001a5fe:	push   0x65706c65
   14001a603:	jb     0x14001a645
   14001a605:	push   rcx
   14001a606:	rex.W (bad) 
   14001a608:	jae    0x14001a672
   14001a60a:	rex.R (bad) 
   14001a60c:	je     0x14001a66f
   14001a60e:	rex
   14001a60f:	rex push rcx
   14001a611:	rex.RB
   14001a612:	rex.B
   14001a613:	push   r8
   14001a615:	rex.RB
   14001a616:	push   r13
   14001a618:	xor    DWORD PTR [rax+0x50],eax
   14001a61b:	ss pop r8
   14001a61e:	push   rax
   14001a61f:	rex.RB
   14001a620:	push   r13
   14001a622:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001a624:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14001a62a:	rex.RB
   14001a62b:	pop    r8
   14001a62d:	rex pop rdx
   14001a62f:	push   rax
   14001a630:	ss pop r8
   14001a633:	xor    BYTE PTR [rax+0x5a],al
   14001a636:	rex.W
   14001a637:	rex.W
   14001a638:	rex pop rdx
   14001a63a:	add    BYTE PTR [rax],al
   14001a63c:	rex.WX add BYTE PTR [rdi],dil
   14001a63f:	(bad)  
   14001a640:	xor    BYTE PTR [rcx+0x42],dl
   14001a643:	jns    0x14001a6b9
   14001a645:	gs rex.B jb 0x14001a6bb
   14001a649:	(bad)  
   14001a64a:	jns    0x14001a68c
   14001a64c:	rex push rcx
   14001a64e:	rex.RB
   14001a64f:	rex.B
   14001a650:	rex.B
   14001a651:	rex pop rax
   14001a653:	pop    rdx
   14001a654:	add    BYTE PTR [rax],al
   14001a656:	pop    rbx
   14001a657:	or     bh,BYTE PTR [rdi]
   14001a659:	fs gs je 0x14001a6be
   14001a65d:	movsxd ebp,DWORD PTR [rax+0x5f]
   14001a660:	addr32 jb 0x14001a6d2
   14001a663:	ja     0x14001a6a5
   14001a665:	push   rcx
   14001a666:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a66e:	rex
   14001a66f:	rex push rcx
   14001a671:	rex.RB
   14001a672:	rex.B
   14001a673:	push   r8
   14001a675:	rex.RB
   14001a676:	push   r13
   14001a678:	rex.R (bad) 
   14001a67a:	je     0x14001a6dd
   14001a67c:	rex xor DWORD PTR [rax+0x50],eax
   14001a680:	rex.RB
   14001a681:	rex.B
   14001a682:	rex.W
   14001a683:	rex.W
   14001a684:	rex pop rdx
   14001a686:	add    BYTE PTR [rax],al
   14001a688:	jg     0x14001a69d
   14001a68a:	(bad)  
   14001a68b:	jb     0x14001a6f2
   14001a68d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a690:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14001a693:	jae    0x14001a709
   14001a695:	rex.WR
   14001a696:	gs data16 je 0x14001a6e8
   14001a69a:	outs   dx,DWORD PTR ds:[rsi]
   14001a69b:	fs gs rex push rcx
   14001a69f:	rex.WRB (bad) 
   14001a6a1:	jo     0x14001a6e7
   14001a6a3:	(bad)  
   14001a6a4:	je     0x14001a707
   14001a6a6:	rex.X (bad) 
   14001a6a8:	jae    0x14001a70f
   14001a6aa:	rex
   14001a6ab:	rex push rcx
   14001a6ad:	rex.RB
   14001a6ae:	rex.B
   14001a6af:	pop    r8
   14001a6b1:	pop    rax
   14001a6b2:	pop    rdx
   14001a6b3:	add    BYTE PTR [rcx],bl
   14001a6b5:	add    edi,DWORD PTR [rdi]
   14001a6b7:	(bad)  
   14001a6b8:	xor    al,0x51
   14001a6ba:	rex.X jns 0x14001a731
   14001a6bd:	gs rex.B jb 0x14001a733
   14001a6c1:	(bad)  
   14001a6c2:	jns    0x14001a704
   14001a6c4:	rex push rcx
   14001a6c6:	rex.RB
   14001a6c7:	rex.B
   14001a6c8:	rex.B
   14001a6c9:	rex.B
   14001a6ca:	rex.RB
   14001a6cb:	push   r14
   14001a6cd:	xor    BYTE PTR [rax+0x41],al
   14001a6d0:	rex.RB
   14001a6d1:	rex.X push rsi
   14001a6d3:	xor    BYTE PTR [rax+0x40],al
   14001a6d6:	pop    rdx
   14001a6d7:	add    BYTE PTR [rcx],bl
   14001a6d9:	adc    BYTE PTR [rdi],bh
   14001a6db:	ins    DWORD PTR es:[rdi],dx
   14001a6dc:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x65747942
   14001a6e4:	rex.B jb 0x14001a759
   14001a6e7:	(bad)  
   14001a6e8:	jns    0x14001a72a
   14001a6ea:	rex push rcx
   14001a6ec:	rex.RB
   14001a6ed:	rex.X
   14001a6ee:	rex.B (bad) 
   14001a6f0:	push   r14
   14001a6f2:	xor    DWORD PTR [rax+0x48],eax
   14001a6f5:	rex.W
   14001a6f6:	rex pop rdx
   14001a6f8:	add    BYTE PTR [rax],al
   14001a6fa:	ins    BYTE PTR es:[rdi],dx
   14001a6fb:	(bad)  
   14001a6fc:	(bad)  
   14001a6fd:	jae    0x14001a773
   14001a6ff:	(bad)  
   14001a700:	jb     0x14001a776
   14001a702:	jae    0x14001a75b
   14001a704:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   14001a70c:	gs rex.B jb 0x14001a782
   14001a710:	(bad)  
   14001a711:	jns    0x14001a753
   14001a713:	rex push rcx
   14001a715:	rex.RB
   14001a716:	rex.X
   14001a717:	pop    r15
   14001a719:	rex.WRX
   14001a71a:	rex.B
   14001a71b:	rex.RB
   14001a71c:	rex.X push rsi
   14001a71e:	xor    DWORD PTR [rax+0x40],eax
   14001a721:	pop    rdx
   14001a722:	add    BYTE PTR [rax],al
   14001a724:	adc    DWORD PTR [rdx],ebx
   14001a726:	(bad)  
   14001a727:	je     0x14001a79b
   14001a729:	jne    0x14001a799
   14001a72b:	movsxd esp,DWORD PTR [rcx+0x74]
   14001a72e:	gs rex push rcx
   14001a731:	rex.X jns 0x14001a7a8
   14001a734:	gs rex.B jb 0x14001a7aa
   14001a738:	(bad)  
   14001a739:	jns    0x14001a77b
   14001a73b:	rex push rcx
   14001a73d:	rex.RB
   14001a73e:	rex.B
   14001a73f:	pop    r8
   14001a741:	rex.W
   14001a742:	rex pop rdx
   14001a744:	add    BYTE PTR [rax],al
   14001a746:	add    DWORD PTR [rbx],ecx
   14001a748:	(bad)  
   14001a749:	outs   dx,BYTE PTR gs:[rsi]
   14001a74b:	fs jae 0x14001a7a5
   14001a74e:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   14001a756:	gs rex.B jb 0x14001a7cc
   14001a75a:	(bad)  
   14001a75b:	jns    0x14001a79d
   14001a75d:	rex push rcx
   14001a75f:	rex.RB
   14001a760:	rex.X
   14001a761:	pop    r15
   14001a763:	rex.WRX
   14001a764:	rex.R
   14001a765:	rex pop rdx
   14001a767:	add    BYTE PTR [rax+0x0],cl
   14001a76a:	(bad)  
   14001a76b:	(bad)  
   14001a76c:	xor    BYTE PTR [rcx+0x42],dl
   14001a76f:	jns    0x14001a7e5
   14001a771:	gs rex.B jb 0x14001a7e7
   14001a775:	(bad)  
   14001a776:	jns    0x14001a7b8
   14001a778:	rex push rcx
   14001a77a:	rex.RB
   14001a77b:	rex.B
   14001a77c:	rex.B
   14001a77d:	rex push rax
   14001a77f:	rex.RB
   14001a780:	rex.X
   14001a781:	rex.R
   14001a782:	rex.W
   14001a783:	rex pop rdx
   14001a785:	add    BYTE PTR [rdi+0x303f3f01],cl
   14001a78b:	push   rcx
   14001a78c:	push   rbx
   14001a78d:	je     0x14001a801
   14001a78f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a796:	rex.B
   14001a797:	rex.B
   14001a798:	rex
   14001a799:	rex.B
   14001a79a:	rex.RB
   14001a79b:	rex.X push rsi
   14001a79d:	push   rcx
   14001a79e:	rex.X jns 0x14001a815
   14001a7a1:	gs rex.B jb 0x14001a817
   14001a7a5:	(bad)  
   14001a7a6:	jns    0x14001a7e8
   14001a7a8:	rex
   14001a7a9:	rex pop rdx
   14001a7ab:	add    dh,al
   14001a7ad:	(bad)  
   14001a7ae:	(bad)  
   14001a7af:	(bad)  
   14001a7b0:	jo     0x14001a822
   14001a7b2:	outs   dx,BYTE PTR gs:[rsi]
   14001a7b4:	fs rex push rcx
   14001a7b7:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a7bf:	rex
   14001a7c0:	rex push rcx
   14001a7c2:	rex.RB
   14001a7c3:	rex.B
   14001a7c4:	push   r8
   14001a7c6:	rex.RB
   14001a7c7:	push   r8
   14001a7c9:	rex.RB
   14001a7ca:	pop    r8
   14001a7cc:	pop    rax
   14001a7cd:	pop    rdx
   14001a7ce:	add    BYTE PTR [rax],al
   14001a7d0:	(bad)  
   14001a7d1:	(bad)  
   14001a7d2:	(bad)  
   14001a7d3:	(bad)  
   14001a7d4:	jo     0x14001a846
   14001a7d6:	outs   dx,BYTE PTR gs:[rsi]
   14001a7d8:	fs rex push rcx
   14001a7db:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a7e3:	rex
   14001a7e4:	rex push rcx
   14001a7e6:	rex.RB
   14001a7e7:	rex.B
   14001a7e8:	push   r8
   14001a7ea:	rex.RB
   14001a7eb:	push   r8
   14001a7ed:	rex.RB
   14001a7ee:	pop    r8
   14001a7f0:	rex.B
   14001a7f1:	rex.RB
   14001a7f2:	rex.X push rbp
   14001a7f4:	xor    DWORD PTR [rax+0x40],eax
   14001a7f7:	pop    rdx
   14001a7f8:	add    BYTE PTR [rax],al
   14001a7fa:	(bad)  
   14001a7fb:	or     al,0x3f
   14001a7fd:	push   0x68537361
   14001a802:	jb     0x14001a879
   14001a804:	outs   dx,BYTE PTR ds:[rsi]
   14001a805:	imul   eax,DWORD PTR [rax+0x51],0x48
   14001a809:	(bad)  
   14001a80a:	jae    0x14001a874
   14001a80c:	rex.R (bad) 
   14001a80e:	je     0x14001a871
   14001a810:	rex
   14001a811:	rex push rcx
   14001a813:	rex.RB
   14001a814:	rex.B
   14001a815:	pop    r8
   14001a817:	pop    rax
   14001a818:	pop    rdx
   14001a819:	add    BYTE PTR [rsi+0x65723f13],ch
   14001a81f:	push   0x40687361
   14001a824:	push   rcx
   14001a825:	rex.W (bad) 
   14001a827:	jae    0x14001a891
   14001a829:	rex.R (bad) 
   14001a82b:	je     0x14001a88e
   14001a82d:	rex
   14001a82e:	rex push rcx
   14001a830:	rex.RB
   14001a831:	rex.B
   14001a832:	pop    r8
   14001a834:	rex.W
   14001a835:	rex pop rdx
   14001a837:	add    BYTE PTR [rbx+rdx*1+0x3f],dh
   14001a83b:	jb     0x14001a8a2
   14001a83d:	(bad)  
   14001a83e:	ins    BYTE PTR es:[rdi],dx
   14001a83f:	ins    BYTE PTR es:[rdi],dx
   14001a840:	outs   dx,DWORD PTR ds:[rsi]
   14001a841:	movsxd eax,DWORD PTR [rax+0x51]
   14001a844:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001a84c:	rex
   14001a84d:	rex push rcx
   14001a84f:	rex.RB
   14001a850:	rex.B
   14001a851:	pop    r8
   14001a853:	rex.W
   14001a854:	rex pop rdx
   14001a856:	add    BYTE PTR [rax],al
   14001a858:	jg     0x14001a85d
   14001a85a:	(bad)  
   14001a85b:	(bad)  
   14001a85c:	xor    al,0x51
   14001a85e:	push   rbx
   14001a85f:	je     0x14001a8d3
   14001a861:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a868:	rex.B
   14001a869:	rex.B
   14001a86a:	rex.B
   14001a86b:	rex.RB
   14001a86c:	push   r14
   14001a86e:	xor    BYTE PTR [rax+0x41],al
   14001a871:	rex.RB
   14001a872:	rex.X push rsi
   14001a874:	push   rcx
   14001a875:	rex.X jns 0x14001a8ec
   14001a878:	gs rex.B jb 0x14001a8ee
   14001a87c:	(bad)  
   14001a87d:	jns    0x14001a8bf
   14001a87f:	rex
   14001a880:	rex pop rdx
   14001a882:	add    BYTE PTR [rax],al
   14001a884:	add    DWORD PTR [rbx],0x51343f3f
   14001a88a:	push   rbx
   14001a88b:	je     0x14001a8ff
   14001a88d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a894:	rex.B
   14001a895:	rex.B
   14001a896:	rex.B
   14001a897:	rex.RB
   14001a898:	push   r14
   14001a89a:	xor    BYTE PTR [rax+0x50],al
   14001a89d:	rex.RB
   14001a89e:	rex.X
   14001a89f:	rex.R
   14001a8a0:	rex pop rdx
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	clc    
   14001a8a5:	(bad)  
   14001a8a6:	(bad)  
   14001a8a7:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001a8ab:	jae    0x14001a8fb
   14001a8ad:	(bad)  
   14001a8ae:	ins    DWORD PTR es:[rdi],dx
   14001a8af:	gs rex push rcx
   14001a8b2:	rex.WRB
   14001a8b3:	gs je  0x14001a917
   14001a8b6:	rex.WRXB (bad) 
   14001a8b8:	push   0x65
   14001a8ba:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a8be:	push   rcx
   14001a8bf:	rex.RB
   14001a8c0:	rex.X
   14001a8c1:	push   r8
   14001a8c3:	rex.RB
   14001a8c4:	rex.X
   14001a8c5:	rex.R pop rax
   14001a8c7:	pop    rdx
   14001a8c8:	add    BYTE PTR [rax],al
   14001a8ca:	cld    
   14001a8cb:	(bad)  
   14001a8cc:	(bad)  
   14001a8cd:	imul   esp,DWORD PTR [rbp+0x79],0x40
   14001a8d1:	push   rcx
   14001a8d2:	rex.WRB
   14001a8d3:	gs je  0x14001a937
   14001a8d6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001a8d8:	jne    0x14001a947
   14001a8da:	rex
   14001a8db:	rex push rcx
   14001a8dd:	rex.RB
   14001a8de:	rex.X
   14001a8df:	push   r8
   14001a8e1:	rex.RB
   14001a8e2:	rex.X
   14001a8e3:	rex.R
   14001a8e4:	rex.W
   14001a8e5:	rex pop rdx
   14001a8e7:	add    BYTE PTR [rdi+0x61763f1a],dl
   14001a8ed:	ins    BYTE PTR es:[rdi],dx
   14001a8ee:	jne    0x14001a955
   14001a8f0:	rex push rcx
   14001a8f2:	rex.WRB
   14001a8f3:	gs je  0x14001a957
   14001a8f6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001a8f8:	jne    0x14001a967
   14001a8fa:	rex
   14001a8fb:	rex push rcx
   14001a8fd:	rex.RB
   14001a8fe:	rex.X
   14001a8ff:	rex.B
   14001a900:	rex.W
   14001a901:	rex.W
   14001a902:	rex pop rdx
   14001a904:	add    BYTE PTR [rax],al
   14001a906:	add    cl,BYTE PTR [rdi]
   14001a908:	(bad)  
   14001a909:	imul   esp,DWORD PTR [rbp+0x79],0x43
   14001a90d:	outs   dx,DWORD PTR ds:[rsi]
   14001a90e:	jne    0x14001a97e
   14001a910:	je     0x14001a952
   14001a912:	push   rcx
   14001a913:	rex.WRB
   14001a914:	gs je  0x14001a978
   14001a917:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001a919:	jne    0x14001a988
   14001a91b:	rex
   14001a91c:	rex push rcx
   14001a91e:	rex.RB
   14001a91f:	rex.X
   14001a920:	rex.B
   14001a921:	rex.W pop rax
   14001a923:	pop    rdx
   14001a924:	add    BYTE PTR [rax],al
   14001a926:	jb     0x14001a938
   14001a928:	(bad)  
   14001a929:	outs   dx,BYTE PTR ds:[rsi]
   14001a92a:	(bad)  
   14001a92b:	ins    DWORD PTR es:[rdi],dx
   14001a92c:	gs rex push rcx
   14001a92f:	rex.WRB
   14001a930:	gs je  0x14001a994
   14001a933:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001a935:	jne    0x14001a9a4
   14001a937:	rex
   14001a938:	rex push rcx
   14001a93a:	rex.RB
   14001a93b:	rex.X
   14001a93c:	push   r8
   14001a93e:	rex.RB
   14001a93f:	rex.X
   14001a940:	rex.R pop rax
   14001a942:	pop    rdx
   14001a943:	add    BYTE PTR [rdx],bl
   14001a945:	adc    BYTE PTR [rdi],bh
   14001a947:	ins    DWORD PTR es:[rdi],dx
   14001a948:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x746e6f43
   14001a950:	(bad)  
   14001a951:	imul   ebp,DWORD PTR [rsi+0x65],0x706d4972
   14001a958:	ins    BYTE PTR es:[rdi],dx
   14001a959:	rex.W
   14001a95a:	gs ins BYTE PTR es:[rdi],dx
   14001a95c:	jo     0x14001a9c3
   14001a95e:	jb     0x14001a9a0
   14001a960:	push   rcx
   14001a961:	je     0x14001a9b3
   14001a963:	jb     0x14001a9ce
   14001a965:	jbe    0x14001a9c8
   14001a967:	je     0x14001a9ce
   14001a969:	rex
   14001a96a:	rex push rbx
   14001a96c:	rex.B (bad) 
   14001a96e:	push   r15
   14001a970:	xor    al,0x43
   14001a972:	jne    0x14001a9e8
   14001a974:	push   rdx
   14001a975:	gs jae 0x14001a9ed
   14001a978:	ins    BYTE PTR es:[rdi],dx
   14001a979:	je     0x14001a9bb
   14001a97b:	xor    DWORD PTR [rdx],esi
   14001a97d:	rex
   14001a97e:	rex.W push rax
   14001a980:	rex.RB
   14001a981:	rex.B
   14001a982:	rex.W xor BYTE PTR [rax+0x5a],al
   14001a986:	add    BYTE PTR [rax],al
   14001a988:	or     eax,0x6c633f08
   14001a98d:	gs (bad) 
   14001a98f:	jb     0x14001a9d1
   14001a991:	push   rcx
   14001a992:	push   rbx
   14001a993:	je     0x14001aa07
   14001a995:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001a99c:	rex.B
   14001a99d:	pop    r8
   14001a99f:	pop    rax
   14001a9a0:	pop    rdx
   14001a9a1:	add    bl,ch
   14001a9a3:	add    bh,BYTE PTR [rdi]
   14001a9a5:	(bad)  
   14001a9a6:	xor    DWORD PTR [rcx+0x56],edx
   14001a9a9:	(bad)  
   14001a9aa:	jb     0x14001aa15
   14001a9ac:	(bad)  
   14001a9ad:	outs   dx,BYTE PTR ds:[rsi]
   14001a9ae:	je     0x14001a9f0
   14001a9b0:	rex push rcx
   14001a9b2:	rex.RB
   14001a9b3:	rex.B
   14001a9b4:	rex.B
   14001a9b5:	rex pop rax
   14001a9b7:	pop    rdx
   14001a9b8:	add    BYTE PTR [rax],al
   14001a9ba:	rex.RXB adc r15d,DWORD PTR [r15]
   14001a9bd:	jb     0x14001aa24
   14001a9bf:	(bad)  
   14001a9c0:	fs rex push rcx
   14001a9c3:	rex.WRB
   14001a9c4:	gs je  0x14001aa28
   14001a9c7:	push   rax
   14001a9c8:	jb     0x14001aa39
   14001a9ca:	jo     0x14001aa31
   14001a9cc:	jb     0x14001aa42
   14001a9ce:	jns    0x14001aa10
   14001a9d0:	rex push rcx
   14001a9d2:	rex.RB
   14001a9d3:	rex.X
   14001a9d4:	rex.B (bad) 
   14001a9d6:	push   r14
   14001a9d8:	push   rcx
   14001a9d9:	push   rsi
   14001a9da:	(bad)  
   14001a9db:	jb     0x14001aa46
   14001a9dd:	(bad)  
   14001a9de:	outs   dx,BYTE PTR ds:[rsi]
   14001a9df:	je     0x14001aa21
   14001a9e1:	rex push rax
   14001a9e3:	rex.RB
   14001a9e4:	rex.X push rsi
   14001a9e6:	push   rcx
   14001a9e7:	rex.WRXB (bad) 
   14001a9e9:	push   0x65
   14001a9eb:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a9ef:	rex pop rdx
   14001a9f1:	add    ah,ah
   14001a9f3:	(bad)  
   14001a9f4:	(bad)  
   14001a9f5:	(bad)  
   14001a9f6:	jb     0x14001aa5f
   14001a9f8:	rex push rcx
   14001a9fa:	push   rbx
   14001a9fb:	je     0x14001aa6f
   14001a9fd:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001aa04:	rex.X
   14001aa05:	rex.B (bad) 
   14001aa07:	push   r14
   14001aa09:	xor    DWORD PTR [rax+0x41],eax
   14001aa0c:	rex.RB
   14001aa0d:	rex.X push rsi
   14001aa0f:	xor    DWORD PTR [rax+0x30],eax
   14001aa12:	rex pop rdx
   14001aa14:	add    BYTE PTR [rax],al
   14001aa16:	jne    0x14001aa28
   14001aa18:	(bad)  
   14001aa19:	outs   dx,BYTE PTR ds:[rsi]
   14001aa1a:	(bad)  
   14001aa1b:	ins    DWORD PTR es:[rdi],dx
   14001aa1c:	gs rex push rcx
   14001aa1f:	rex.WRB
   14001aa20:	gs je  0x14001aa84
   14001aa23:	push   rax
   14001aa24:	jb     0x14001aa95
   14001aa26:	jo     0x14001aa8d
   14001aa28:	jb     0x14001aa9e
   14001aa2a:	jns    0x14001aa6c
   14001aa2c:	rex push rcx
   14001aa2e:	rex.RB
   14001aa2f:	rex.X
   14001aa30:	push   r8
   14001aa32:	rex.RB
   14001aa33:	rex.X
   14001aa34:	rex.R pop rax
   14001aa36:	pop    rdx
   14001aa37:	add    BYTE PTR [rcx+0x73753f1a],al
   14001aa3d:	gs jb  0x14001aa94
   14001aa40:	jns    0x14001aab2
   14001aa42:	gs rex push rcx
   14001aa45:	rex.WRB
   14001aa46:	gs je  0x14001aaaa
   14001aa49:	push   rax
   14001aa4a:	jb     0x14001aabb
   14001aa4c:	jo     0x14001aab3
   14001aa4e:	jb     0x14001aac4
   14001aa50:	jns    0x14001aa92
   14001aa52:	rex push rcx
   14001aa54:	rex.RB
   14001aa55:	rex.X
   14001aa56:	rex.B
   14001aa57:	rex.W pop rax
   14001aa59:	pop    rdx
   14001aa5a:	add    BYTE PTR [rax],al
   14001aa5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001aa5d:	adc    DWORD PTR [rdi],edi
   14001aa5f:	jo     0x14001aad3
   14001aa61:	outs   dx,DWORD PTR ds:[rsi]
   14001aa62:	jo     0x14001aac9
   14001aa64:	jb     0x14001aada
   14001aa66:	jns    0x14001aaa8
   14001aa68:	push   rcx
   14001aa69:	rex.WRB
   14001aa6a:	gs je  0x14001aace
   14001aa6d:	rex.WRXB (bad) 
   14001aa6f:	push   0x65
   14001aa71:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001aa75:	push   rcx
   14001aa76:	rex.RB
   14001aa77:	rex.X
   14001aa78:	rex.B (bad) 
   14001aa7a:	push   r14
   14001aa7c:	push   rcx
   14001aa7d:	rex.WRB
   14001aa7e:	gs je  0x14001aae2
   14001aa81:	push   rax
   14001aa82:	jb     0x14001aaf3
   14001aa84:	jo     0x14001aaeb
   14001aa86:	jb     0x14001aafc
   14001aa88:	jns    0x14001aaca
   14001aa8a:	rex
   14001aa8b:	rex.W
   14001aa8c:	rex pop rdx
   14001aa8e:	add    BYTE PTR [rax],al
   14001aa90:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001aa91:	adc    DWORD PTR [rdi],edi
   14001aa93:	jo     0x14001ab07
   14001aa95:	outs   dx,DWORD PTR ds:[rsi]
   14001aa96:	jo     0x14001aafd
   14001aa98:	jb     0x14001ab0e
   14001aa9a:	jns    0x14001aadf
   14001aa9c:	outs   dx,DWORD PTR ds:[rsi]
   14001aa9d:	jne    0x14001ab0d
   14001aa9f:	je     0x14001aae1
   14001aaa1:	push   rcx
   14001aaa2:	rex.WRB
   14001aaa3:	gs je  0x14001ab07
   14001aaa6:	rex.WRXB (bad) 
   14001aaa8:	push   0x65
   14001aaaa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001aaae:	push   rcx
   14001aaaf:	rex.RB
   14001aab0:	rex.X
   14001aab1:	rex.B
   14001aab2:	rex.W pop rax
   14001aab4:	pop    rdx
   14001aab5:	add    BYTE PTR [rsi+0x70613f06],bh
   14001aabb:	jo     0x14001ab22
   14001aabd:	outs   dx,BYTE PTR ds:[rsi]
   14001aabe:	fs rex push rcx
   14001aac1:	rex.X jns 0x14001ab38
   14001aac4:	gs rex.B jb 0x14001ab3a
   14001aac8:	(bad)  
   14001aac9:	jns    0x14001ab0b
   14001aacb:	rex push rcx
   14001aacd:	rex.RB
   14001aace:	rex.B
   14001aacf:	rex.B
   14001aad0:	rex.B
   14001aad1:	rex.RB
   14001aad2:	push   r14
   14001aad4:	xor    DWORD PTR [rax+0x41],eax
   14001aad7:	rex.RB
   14001aad8:	rex.X push rsi
   14001aada:	xor    DWORD PTR [rax+0x40],eax
   14001aadd:	pop    rdx
   14001aade:	add    BYTE PTR [rax],al
   14001aae0:	mov    ebx,0x756e3f10
   14001aae5:	ins    DWORD PTR es:[rdi],dx
   14001aae6:	(bad)  
   14001aae7:	gs jb  0x14001ab2a
   14001aaea:	push   rcx
   14001aaeb:	rex.X jns 0x14001ab62
   14001aaee:	gs rex.B jb 0x14001ab64
   14001aaf2:	(bad)  
   14001aaf3:	jns    0x14001ab35
   14001aaf5:	rex push rbx
   14001aaf7:	rex.B (bad) 
   14001aaf9:	push   r14
   14001aafb:	xor    DWORD PTR [rax+0x48],eax
   14001aafe:	rex.W
   14001aaff:	rex pop rdx
   14001ab01:	add    cl,al
   14001ab03:	(bad)  
   14001ab04:	(bad)  
   14001ab05:	(bad)  
   14001ab06:	jo     0x14001ab78
   14001ab08:	outs   dx,BYTE PTR gs:[rsi]
   14001ab0a:	fs rex push rcx
   14001ab0d:	rex.X jns 0x14001ab84
   14001ab10:	gs rex.B jb 0x14001ab86
   14001ab14:	(bad)  
   14001ab15:	jns    0x14001ab57
   14001ab17:	rex push rcx
   14001ab19:	rex.RB
   14001ab1a:	rex.B
   14001ab1b:	rex.B
   14001ab1c:	rex.B
   14001ab1d:	rex.RB
   14001ab1e:	push   r14
   14001ab20:	xor    DWORD PTR [rax+0x50],eax
   14001ab23:	rex.RB
   14001ab24:	rex.X
   14001ab25:	rex.R
   14001ab26:	rex pop rdx
   14001ab28:	add    BYTE PTR [rax],al
   14001ab2a:	sbb    bh,BYTE PTR cs:[rdi]
   14001ab2d:	je     0x14001aba8
   14001ab2f:	jo     0x14001ab96
   14001ab31:	rex.WRX (bad) 
   14001ab33:	ins    DWORD PTR es:[rdi],dx
   14001ab34:	gs rex push rcx
   14001ab37:	rex.WRB
   14001ab38:	gs je  0x14001ab9c
   14001ab3b:	push   rax
   14001ab3c:	jb     0x14001abad
   14001ab3e:	jo     0x14001aba5
   14001ab40:	jb     0x14001abb6
   14001ab42:	jns    0x14001ab84
   14001ab44:	rex push rcx
   14001ab46:	rex.RB
   14001ab47:	rex.X
   14001ab48:	push   r8
   14001ab4a:	rex.RB
   14001ab4b:	rex.X
   14001ab4c:	rex.R pop rax
   14001ab4e:	pop    rdx
   14001ab4f:	add    cl,ch
   14001ab51:	(bad)  
   14001ab52:	(bad)  
   14001ab53:	imul   esi,DWORD PTR [rbx+0x57],0x61746972
   14001ab5a:	(bad)  
   14001ab5b:	ins    BYTE PTR es:[rdi],dx
   14001ab5c:	gs rex push rcx
   14001ab5f:	rex.WRB
   14001ab60:	gs je  0x14001abc4
   14001ab63:	push   rax
   14001ab64:	jb     0x14001abd5
   14001ab66:	jo     0x14001abcd
   14001ab68:	jb     0x14001abde
   14001ab6a:	jns    0x14001abac
   14001ab6c:	rex push rcx
   14001ab6e:	rex.RB
   14001ab6f:	rex.X
   14001ab70:	pop    r15
   14001ab72:	rex.WRX pop rax
   14001ab74:	pop    rdx
   14001ab75:	add    BYTE PTR [rdx+0x65723f14],bl
   14001ab7b:	jbe    0x14001abe6
   14001ab7d:	jae    0x14001abe8
   14001ab7f:	outs   dx,DWORD PTR ds:[rsi]
   14001ab80:	outs   dx,BYTE PTR ds:[rsi]
   14001ab81:	rex push rcx
   14001ab83:	rex.WRB
   14001ab84:	gs je  0x14001abe8
   14001ab87:	push   rax
   14001ab88:	jb     0x14001abf9
   14001ab8a:	jo     0x14001abf1
   14001ab8c:	jb     0x14001ac02
   14001ab8e:	jns    0x14001abd0
   14001ab90:	rex push rcx
   14001ab92:	rex.RB
   14001ab93:	rex.X
   14001ab94:	rex.B
   14001ab95:	rex.W pop rax
   14001ab97:	pop    rdx
   14001ab98:	add    BYTE PTR [rax],al
   14001ab9a:	fwait
   14001ab9b:	add    bh,BYTE PTR [rdi]
   14001ab9d:	(bad)  
   14001ab9e:	xor    DWORD PTR [rcx+0x4a],edx
   14001aba1:	jae    0x14001ac12
   14001aba3:	outs   dx,BYTE PTR ds:[rsi]
   14001aba4:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001aba6:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001aba9:	outs   dx,BYTE PTR gs:[rsi]
   14001abab:	je     0x14001abed
   14001abad:	rex push rcx
   14001abaf:	rex.RB
   14001abb0:	rex.B
   14001abb1:	rex.B
   14001abb2:	rex pop rax
   14001abb4:	pop    rdx
   14001abb5:	add    BYTE PTR [rdx+rax*1+0x51313f3f],bl
   14001abbc:	rex.WX jae 0x14001ac2e
   14001abbf:	outs   dx,BYTE PTR ds:[rsi]
   14001abc0:	rex.WRXB (bad) 
   14001abc2:	push   0x65
   14001abc4:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001abc8:	push   rcx
   14001abc9:	rex.RB
   14001abca:	rex.B
   14001abcb:	rex.B
   14001abcc:	rex pop rax
   14001abce:	pop    rdx
   14001abcf:	add    BYTE PTR [rsi],al
   14001abd1:	or     edi,DWORD PTR [rdi]
   14001abd3:	outs   dx,BYTE PTR gs:[rsi]
   14001abd5:	fs jae 0x14001ac2f
   14001abd8:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001abe0:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001abe7:	rex.X
   14001abe8:	pop    r15
   14001abea:	rex.WRX push rsi
   14001abec:	push   rcx
   14001abed:	rex.WR (bad) 
   14001abef:	je     0x14001ac5a
   14001abf1:	outs   dx,BYTE PTR ds:[rsi]
   14001abf2:	xor    DWORD PTR [rbx+0x74],edx
   14001abf5:	jb     0x14001ac60
   14001abf7:	outs   dx,BYTE PTR ds:[rsi]
   14001abf8:	addr32 rex
   14001abfa:	rex push rdi
   14001abfc:	xor    al,0x43
   14001abfe:	(bad)  
   14001abff:	jae    0x14001ac66
   14001ac01:	push   rbx
   14001ac02:	outs   dx,BYTE PTR gs:[rsi]
   14001ac04:	jae    0x14001ac6f
   14001ac06:	je     0x14001ac71
   14001ac08:	jbe    0x14001ac73
   14001ac0a:	je     0x14001ac85
   14001ac0c:	rex push rcx
   14001ac0e:	je     0x14001ac50
   14001ac10:	rex
   14001ac11:	rex pop rdx
   14001ac13:	add    BYTE PTR [rax],al
   14001ac15:	sbb    DWORD PTR [rdi],edi
   14001ac17:	je     0x14001ac88
   14001ac19:	push   rbx
   14001ac1a:	je     0x14001ac8e
   14001ac1c:	imul   ebp,DWORD PTR [rsi+0x67],0x734a5140
   14001ac23:	outs   dx,DWORD PTR ds:[rsi]
   14001ac24:	outs   dx,BYTE PTR ds:[rsi]
   14001ac25:	push   rsi
   14001ac26:	(bad)  
   14001ac27:	ins    BYTE PTR es:[rdi],dx
   14001ac28:	jne    0x14001ac8f
   14001ac2a:	rex
   14001ac2b:	rex push rcx
   14001ac2d:	rex.RB
   14001ac2e:	rex.X
   14001ac2f:	rex.B (bad) 
   14001ac31:	push   r14
   14001ac33:	push   rcx
   14001ac34:	push   rbx
   14001ac35:	je     0x14001aca9
   14001ac37:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001ac3e:	rex.X push rsi
   14001ac40:	xor    al,BYTE PTR [rax+0x40]
   14001ac43:	pop    rdx
   14001ac44:	add    BYTE PTR [rax],al
   14001ac46:	popf   
   14001ac47:	add    bh,BYTE PTR [rdi]
   14001ac49:	(bad)  
   14001ac4a:	xor    DWORD PTR [rcx+0x4a],edx
   14001ac4d:	jae    0x14001acbe
   14001ac4f:	outs   dx,BYTE PTR ds:[rsi]
   14001ac50:	push   rsi
   14001ac51:	(bad)  
   14001ac52:	ins    BYTE PTR es:[rdi],dx
   14001ac53:	jne    0x14001acba
   14001ac55:	rex
   14001ac56:	rex push rcx
   14001ac58:	rex.RB
   14001ac59:	rex.B
   14001ac5a:	rex.B
   14001ac5b:	rex pop rax
   14001ac5d:	pop    rdx
   14001ac5e:	add    BYTE PTR [rax],al
   14001ac60:	xchg   ebp,eax
   14001ac61:	sbb    bh,BYTE PTR [rdi]
   14001ac63:	jbe    0x14001acc6
   14001ac65:	ins    BYTE PTR es:[rdi],dx
   14001ac66:	jne    0x14001accd
   14001ac68:	rex push rcx
   14001ac6a:	rex.WX jae 0x14001acdc
   14001ac6d:	outs   dx,BYTE PTR ds:[rsi]
   14001ac6e:	rex.WRXB (bad) 
   14001ac70:	push   0x65
   14001ac72:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ac76:	push   rcx
   14001ac77:	rex.RB
   14001ac78:	rex.X
   14001ac79:	rex.B (bad) 
   14001ac7b:	push   r14
   14001ac7d:	push   rcx
   14001ac7e:	rex.WX jae 0x14001acf0
   14001ac81:	outs   dx,BYTE PTR ds:[rsi]
   14001ac82:	push   rsi
   14001ac83:	(bad)  
   14001ac84:	ins    BYTE PTR es:[rdi],dx
   14001ac85:	jne    0x14001acec
   14001ac87:	rex
   14001ac88:	rex
   14001ac89:	rex.B
   14001ac8a:	rex.RB
   14001ac8b:	rex.X push rsi
   14001ac8d:	push   rcx
   14001ac8e:	push   rbx
   14001ac8f:	je     0x14001ad03
   14001ac91:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001ac98:	add    BYTE PTR [rax],al
   14001ac9a:	ror    DWORD PTR [rax],0x3f
   14001ac9d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001aca0:	je     0x14001ad03
   14001aca2:	imul   ebp,DWORD PTR [rsi+0x73],0x734a5140
   14001aca9:	outs   dx,DWORD PTR ds:[rsi]
   14001acaa:	outs   dx,BYTE PTR ds:[rsi]
   14001acab:	rex.WRXB (bad) 
   14001acad:	push   0x65
   14001acaf:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001acb3:	push   rcx
   14001acb4:	rex.RB
   14001acb5:	rex.X
   14001acb6:	pop    r15
   14001acb8:	rex.WRX
   14001acb9:	rex.B
   14001acba:	rex.RB
   14001acbb:	rex.X push rsi
   14001acbd:	push   rcx
   14001acbe:	push   rbx
   14001acbf:	je     0x14001ad33
   14001acc1:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001acc8:	add    BYTE PTR [rax],al
   14001acca:	rcr    DWORD PTR [rax],cl
   14001accc:	(bad)  
   14001accd:	je     0x14001ad3e
   14001accf:	rex.WRXB (bad) 
   14001acd1:	push   0x65
   14001acd3:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001acd7:	rex.WX jae 0x14001ad49
   14001acda:	outs   dx,BYTE PTR ds:[rsi]
   14001acdb:	push   rsi
   14001acdc:	(bad)  
   14001acdd:	ins    BYTE PTR es:[rdi],dx
   14001acde:	jne    0x14001ad45
   14001ace0:	rex
   14001ace1:	rex push rcx
   14001ace3:	rex.RB
   14001ace4:	rex.X
   14001ace5:	rex.B (bad) 
   14001ace7:	push   r14
   14001ace9:	push   rcx
   14001acea:	rex.WX jae 0x14001ad5c
   14001aced:	outs   dx,BYTE PTR ds:[rsi]
   14001acee:	rex.WRXB (bad) 
   14001acf0:	push   0x65
   14001acf2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001acf6:	pop    rax
   14001acf7:	pop    rdx
   14001acf8:	add    BYTE PTR [rax],al
   14001acfa:	and    bl,BYTE PTR [rdx]
   14001acfc:	(bad)  
   14001acfd:	je     0x14001ad78
   14001acff:	jo     0x14001ad66
   14001ad01:	rex push rcx
   14001ad03:	rex.WX jae 0x14001ad75
   14001ad06:	outs   dx,BYTE PTR ds:[rsi]
   14001ad07:	push   rsi
   14001ad08:	(bad)  
   14001ad09:	ins    BYTE PTR es:[rdi],dx
   14001ad0a:	jne    0x14001ad71
   14001ad0c:	rex
   14001ad0d:	rex push rcx
   14001ad0f:	rex.RB
   14001ad10:	rex.X
   14001ad11:	rex.B (bad) 
   14001ad13:	push   r15
   14001ad15:	xor    al,0x54
   14001ad17:	jns    0x14001ad89
   14001ad19:	rex xor DWORD PTR gs:[rax+0x58],eax
   14001ad1e:	pop    rdx
   14001ad1f:	add    ch,dh
   14001ad21:	(bad)  
   14001ad22:	(bad)  
   14001ad23:	(bad)  
   14001ad24:	jb     0x14001ad98
   14001ad26:	(bad)  
   14001ad27:	jns    0x14001ad69
   14001ad29:	push   rcx
   14001ad2a:	rex.WX jae 0x14001ad9c
   14001ad2d:	outs   dx,BYTE PTR ds:[rsi]
   14001ad2e:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001ad30:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001ad33:	outs   dx,BYTE PTR gs:[rsi]
   14001ad35:	je     0x14001ad77
   14001ad37:	rex push rcx
   14001ad39:	rex.RB
   14001ad3a:	rex.X
   14001ad3b:	rex.B (bad) 
   14001ad3d:	push   r14
   14001ad3f:	push   rcx
   14001ad40:	rex.WX jae 0x14001adb2
   14001ad43:	outs   dx,BYTE PTR ds:[rsi]
   14001ad44:	rex.B jb 0x14001adb9
   14001ad47:	(bad)  
   14001ad48:	jns    0x14001ad8a
   14001ad4a:	rex pop rax
   14001ad4c:	pop    rdx
   14001ad4d:	add    BYTE PTR [rdi+0x73693f0d],ah
   14001ad53:	rex.B jb 0x14001adc8
   14001ad56:	(bad)  
   14001ad57:	jns    0x14001ad99
   14001ad59:	push   rcx
   14001ad5a:	rex.WX jae 0x14001adcc
   14001ad5d:	outs   dx,BYTE PTR ds:[rsi]
   14001ad5e:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001ad60:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001ad63:	outs   dx,BYTE PTR gs:[rsi]
   14001ad65:	je     0x14001ada7
   14001ad67:	rex push rcx
   14001ad69:	rex.RB
   14001ad6a:	rex.X
   14001ad6b:	pop    r15
   14001ad6d:	rex.WRX pop rax
   14001ad6f:	pop    rdx
   14001ad70:	add    BYTE PTR [rax],al
   14001ad72:	cmc    
   14001ad73:	sbb    BYTE PTR [rdi],bh
   14001ad75:	je     0x14001ade6
   14001ad77:	push   rbx
   14001ad78:	je     0x14001adde
   14001ad7a:	push   rbx
   14001ad7b:	je     0x14001adef
   14001ad7d:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   14001ad84:	jb     0x14001adef
   14001ad86:	outs   dx,BYTE PTR ds:[rsi]
   14001ad87:	addr32 rex
   14001ad89:	rex push rcx
   14001ad8b:	rex.RB
   14001ad8c:	rex.X
   14001ad8d:	rex.B (bad) 
   14001ad8f:	push   r14
   14001ad91:	(bad)  
   14001ad92:	and    al,0x62
   14001ad94:	(bad)  
   14001ad95:	jae    0x14001ae00
   14001ad97:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001ad9a:	je     0x14001ae0e
   14001ad9c:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14001ada3:	and    al,0x63
   14001ada5:	push   0x745f7261
   14001adaa:	jb     0x14001ae0d
   14001adac:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001adb4:	fs rex
   14001adb6:	rex push rsi
   14001adb8:	(bad)  
   14001adb9:	and    al,0x61
   14001adbb:	ins    BYTE PTR es:[rdi],dx
   14001adbc:	ins    BYTE PTR es:[rdi],dx
   14001adbd:	outs   dx,DWORD PTR ds:[rsi]
   14001adbe:	movsxd esp,DWORD PTR [rcx+0x74]
   14001adc1:	outs   dx,DWORD PTR ds:[rsi]
   14001adc2:	jb     0x14001ae04
   14001adc4:	rex.R
   14001adc5:	xor    al,BYTE PTR [rax+0x40]
   14001adc9:	jae    0x14001ae3f
   14001adcb:	fs rex
   14001adcd:	rex pop rax
   14001adcf:	pop    rdx
   14001add0:	add    BYTE PTR [rax],al
   14001add2:	or     edi,DWORD PTR ds:[rdi]
   14001add5:	gs jb  0x14001ae4a
   14001add8:	outs   dx,DWORD PTR ds:[rsi]
   14001add9:	jb     0x14001ae2e
   14001addb:	je     0x14001ae4f
   14001addd:	imul   ebp,DWORD PTR [rsi+0x67],0x734a5140
   14001ade4:	outs   dx,DWORD PTR ds:[rsi]
   14001ade5:	outs   dx,BYTE PTR ds:[rsi]
   14001ade6:	push   rax
   14001ade7:	(bad)  
   14001ade8:	jb     0x14001ae5d
   14001adea:	gs rex.RB jb 0x14001ae60
   14001adee:	outs   dx,DWORD PTR ds:[rsi]
   14001adef:	jb     0x14001ae31
   14001adf1:	rex push rcx
   14001adf3:	rex.RB
   14001adf4:	rex.X
   14001adf5:	rex.B (bad) 
   14001adf7:	push   r14
   14001adf9:	push   rcx
   14001adfa:	push   rbx
   14001adfb:	je     0x14001ae6f
   14001adfd:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001ae04:	add    BYTE PTR [rax],al
   14001ae06:	(bad)  
   14001ae07:	or     al,0x3f
   14001ae09:	data16 jb 0x14001ae7b
   14001ae0c:	ins    DWORD PTR es:[rdi],dx
   14001ae0d:	rex.WX jae 0x14001ae7f
   14001ae10:	outs   dx,BYTE PTR ds:[rsi]
   14001ae11:	rex push rcx
   14001ae13:	rex.WX jae 0x14001ae85
   14001ae16:	outs   dx,BYTE PTR ds:[rsi]
   14001ae17:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001ae19:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001ae1c:	outs   dx,BYTE PTR gs:[rsi]
   14001ae1e:	je     0x14001ae60
   14001ae20:	rex push rbx
   14001ae22:	rex.B (bad) 
   14001ae24:	push   r14
   14001ae26:	xor    DWORD PTR [rax+0x41],eax
   14001ae29:	rex.RB
   14001ae2a:	rex.X push rsi
   14001ae2c:	push   rcx
   14001ae2d:	rex.X jns 0x14001aea4
   14001ae30:	gs rex.B jb 0x14001aea6
   14001ae34:	(bad)  
   14001ae35:	jns    0x14001ae77
   14001ae37:	rex push rax
   14001ae39:	rex.RB
   14001ae3a:	push   r13
   14001ae3c:	push   rcx
   14001ae3d:	rex.WX jae 0x14001aeaf
   14001ae40:	outs   dx,BYTE PTR ds:[rsi]
   14001ae41:	push   rax
   14001ae42:	(bad)  
   14001ae43:	jb     0x14001aeb8
   14001ae45:	gs rex.RB jb 0x14001aebb
   14001ae49:	outs   dx,DWORD PTR ds:[rsi]
   14001ae4a:	jb     0x14001ae8c
   14001ae4c:	rex
   14001ae4d:	rex pop rdx
   14001ae4f:	add    BYTE PTR [rbx+rdx*1+0x3f],cl
   14001ae53:	jb     0x14001aeba
   14001ae55:	(bad)  
   14001ae56:	fs rex.B ins BYTE PTR es:[rdi],dx
   14001ae59:	ins    BYTE PTR es:[rdi],dx
   14001ae5a:	rex push rcx
   14001ae5c:	rex.WB
   14001ae5d:	rex.WRXB
   14001ae5e:	rex.R
   14001ae5f:	gs jbe 0x14001aecb
   14001ae62:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ae65:	rex push rcx
   14001ae67:	rex.RB
   14001ae68:	rex.B
   14001ae69:	rex.B (bad) 
   14001ae6b:	push   r14
   14001ae6d:	push   rcx
   14001ae6e:	rex.X jns 0x14001aee5
   14001ae71:	gs rex.B jb 0x14001aee7
   14001ae75:	(bad)  
   14001ae76:	jns    0x14001aeb8
   14001ae78:	rex pop rax
   14001ae7a:	pop    rdx
   14001ae7b:	add    BYTE PTR [rcx+0x313f3f02],cl
   14001ae81:	push   rcx
   14001ae82:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14001ae8b:	rex.B
   14001ae8c:	rex pop rax
   14001ae8e:	pop    rdx
   14001ae8f:	add    BYTE PTR [rip+0x72653f0b],bh        # 0x1b266eda0
   14001ae95:	jb     0x14001af06
   14001ae97:	jb     0x14001aeec
   14001ae99:	je     0x14001af0d
   14001ae9b:	imul   ebp,DWORD PTR [rsi+0x67],0x4f495140
   14001aea2:	rex.R
   14001aea3:	gs jbe 0x14001af0f
   14001aea6:	movsxd esp,DWORD PTR [rbp+0x40]
   14001aea9:	rex push rcx
   14001aeab:	rex.RB
   14001aeac:	rex.X
   14001aead:	rex.B (bad) 
   14001aeaf:	push   r14
   14001aeb1:	push   rcx
   14001aeb2:	push   rbx
   14001aeb3:	je     0x14001af27
   14001aeb5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001aebc:	add    BYTE PTR [rax],al
   14001aebe:	(bad)  
   14001aebf:	adc    BYTE PTR [rdi],bh
   14001aec1:	outs   dx,DWORD PTR ds:[rsi]
   14001aec2:	jo     0x14001af29
   14001aec4:	outs   dx,BYTE PTR ds:[rsi]
   14001aec5:	rex push rcx
   14001aec7:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14001aed0:	pop    r15
   14001aed2:	rex.WRX push rsi
   14001aed4:	(bad)  
   14001aed5:	and    al,0x51
   14001aed7:	rex.RX ins BYTE PTR es:[rdi],dx
   14001aed9:	(bad)  
   14001aeda:	addr32 jae 0x14001af1d
   14001aedd:	push   rdi
   14001aede:	xor    al,0x4f
   14001aee0:	jo     0x14001af47
   14001aee2:	outs   dx,BYTE PTR ds:[rsi]
   14001aee3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001aee5:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14001aee9:	(bad)  
   14001aeea:	addr32 rex push rcx
   14001aeed:	rex.WB
   14001aeee:	rex.WRXB
   14001aeef:	rex.R
   14001aef0:	gs jbe 0x14001af5c
   14001aef3:	movsxd esp,DWORD PTR [rbp+0x40]
   14001aef6:	rex
   14001aef7:	rex
   14001aef8:	rex
   14001aef9:	rex pop rdx
   14001aefb:	add    BYTE PTR [rbp+0x303f3f00],ch
   14001af01:	push   rcx
   14001af02:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14001af0b:	rex.B
   14001af0c:	rex
   14001af0d:	rex.B
   14001af0e:	rex.RB
   14001af0f:	rex.X push rsi
   14001af11:	push   rcx
   14001af12:	push   rbx
   14001af13:	je     0x14001af87
   14001af15:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001af1c:	add    BYTE PTR [rax],al
   14001af1e:	or     BYTE PTR [rbx],0x3f
   14001af21:	gs js  0x14001af8d
   14001af24:	jae    0x14001af9a
   14001af26:	jae    0x14001af68
   14001af28:	push   rcx
   14001af29:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14001af32:	rex push rbx
   14001af34:	pop    r15
   14001af36:	rex.WRX
   14001af37:	rex.B
   14001af38:	rex.RB
   14001af39:	rex.X push rsi
   14001af3b:	push   rcx
   14001af3c:	push   rbx
   14001af3d:	je     0x14001afb1
   14001af3f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001af46:	add    BYTE PTR [rax],al
   14001af48:	rex.WRXB adc r15,QWORD PTR [r15]
   14001af4b:	jb     0x14001afb2
   14001af4d:	(bad)  
   14001af4e:	fs rex.B ins BYTE PTR es:[rdi],dx
   14001af51:	ins    BYTE PTR es:[rdi],dx
   14001af52:	push   rbx
   14001af53:	je     0x14001afb6
   14001af55:	outs   dx,BYTE PTR ds:[rsi]
   14001af56:	fs (bad) 
   14001af58:	jb     0x14001afbe
   14001af5a:	rex.WRXB jne 0x14001afd1
   14001af5d:	jo     0x14001afd4
   14001af5f:	je     0x14001afa1
   14001af61:	push   rcx
   14001af62:	push   rax
   14001af63:	jb     0x14001afd4
   14001af65:	movsxd esp,DWORD PTR [rbp+0x73]
   14001af68:	jae    0x14001afaa
   14001af6a:	rex push rcx
   14001af6c:	rex.RB
   14001af6d:	rex.B
   14001af6e:	rex.B (bad) 
   14001af70:	push   r14
   14001af72:	push   rcx
   14001af73:	rex.X jns 0x14001afea
   14001af76:	gs rex.B jb 0x14001afec
   14001af7a:	(bad)  
   14001af7b:	jns    0x14001afbd
   14001af7d:	rex pop rax
   14001af7f:	pop    rdx
   14001af80:	add    BYTE PTR [rax],al
   14001af82:	mov    edi,0x61773f1a
   14001af87:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e694672
   14001af8f:	imul   esi,DWORD PTR [rbx+0x68],0x51406465
   14001af96:	push   rax
   14001af97:	jb     0x14001b008
   14001af99:	movsxd esp,DWORD PTR [rbp+0x73]
   14001af9c:	jae    0x14001afde
   14001af9e:	rex push rcx
   14001afa0:	rex.RB
   14001afa1:	rex.B
   14001afa2:	pop    r15
   14001afa4:	rex.WRX
   14001afa5:	rex.W
   14001afa6:	rex pop rdx
   14001afa8:	add    BYTE PTR [rax],al
   14001afaa:	sub    cl,BYTE PTR [rax]
   14001afac:	(bad)  
   14001afad:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14001afb1:	gs push rdi
   14001afb3:	jb     0x14001b01e
   14001afb5:	je     0x14001b01c
   14001afb7:	rex.XB push 0x656e6e61
   14001afbd:	ins    BYTE PTR es:[rdi],dx
   14001afbe:	rex push rcx
   14001afc0:	push   rax
   14001afc1:	jb     0x14001b032
   14001afc3:	movsxd esp,DWORD PTR [rbp+0x73]
   14001afc6:	jae    0x14001b008
   14001afc8:	rex push rcx
   14001afca:	rex.RB
   14001afcb:	rex.B
   14001afcc:	pop    r8
   14001afce:	pop    rax
   14001afcf:	pop    rdx
   14001afd0:	add    BYTE PTR [rax],al
   14001afd2:	out    dx,eax
   14001afd3:	sbb    bh,BYTE PTR [rdi]
   14001afd5:	ja     0x14001b049
   14001afd7:	imul   esi,DWORD PTR [rbp+riz*2+0x40],0x444f4951
   14001afdf:	gs jbe 0x14001b04b
   14001afe2:	movsxd esp,DWORD PTR [rbp+0x40]
   14001afe5:	rex push rcx
   14001afe7:	rex.RB
   14001afe8:	rex.B
   14001afe9:	pop    r15
   14001afeb:	rex.WX
   14001afec:	rex.B
   14001afed:	rex.RB
   14001afee:	rex.X push rsi
   14001aff0:	push   rcx
   14001aff1:	rex.X jns 0x14001b068
   14001aff4:	gs rex.B jb 0x14001b06a
   14001aff8:	(bad)  
   14001aff9:	jns    0x14001b03b
   14001affb:	rex
   14001affc:	rex pop rdx
   14001affe:	add    BYTE PTR [rax],al
   14001b000:	rex.WRXB sbb QWORD PTR [r15],r15
   14001b003:	je     0x14001b074
   14001b005:	push   rbp
   14001b006:	je     0x14001b06e
   14001b008:	cmp    BYTE PTR [rax+0x51],al
   14001b00b:	push   rbx
   14001b00c:	je     0x14001b080
   14001b00e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b015:	rex.X
   14001b016:	rex.B (bad) 
   14001b018:	push   r14
   14001b01a:	push   rcx
   14001b01b:	rex.X jns 0x14001b092
   14001b01e:	gs rex.B jb 0x14001b094
   14001b022:	(bad)  
   14001b023:	jns    0x14001b065
   14001b025:	rex pop rax
   14001b027:	pop    rdx
   14001b028:	add    BYTE PTR [rax],al
   14001b02a:	lock sbb bh,BYTE PTR [rdi]
   14001b02d:	ja     0x14001b0a1
   14001b02f:	imul   esi,DWORD PTR [rbp+riz*2+0x40],0x444f4951
   14001b037:	gs jbe 0x14001b0a3
   14001b03a:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b03d:	rex push rcx
   14001b03f:	rex.RB
   14001b040:	rex.B
   14001b041:	pop    r15
   14001b043:	rex.WX push rax
   14001b045:	rex.RB
   14001b046:	rex.X
   14001b047:	rex.R
   14001b048:	rex pop rdx
   14001b04a:	add    BYTE PTR [rax],al
   14001b04c:	mov    eax,DWORD PTR [rdx]
   14001b04e:	(bad)  
   14001b04f:	(bad)  
   14001b050:	xor    DWORD PTR [rcx+0x46],edx
   14001b053:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14001b05b:	rex push rcx
   14001b05d:	rex.RB
   14001b05e:	rex.B
   14001b05f:	rex.B
   14001b060:	rex pop rax
   14001b062:	pop    rdx
   14001b063:	add    BYTE PTR [rdi+0x313f3f02],dh
   14001b069:	push   rcx
   14001b06a:	push   rax
   14001b06b:	jb     0x14001b0dc
   14001b06d:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b070:	jae    0x14001b0b2
   14001b072:	rex push rbp
   14001b074:	rex.RB
   14001b075:	rex.B
   14001b076:	rex.B
   14001b077:	rex pop rax
   14001b079:	pop    rdx
   14001b07a:	add    BYTE PTR [rax],al
   14001b07c:	retf   0x3f1a
   14001b07f:	ja     0x14001b0e2
   14001b081:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x61745372
   14001b089:	jb     0x14001b0ff
   14001b08b:	gs fs rex push rcx
   14001b08f:	push   rax
   14001b090:	jb     0x14001b101
   14001b092:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b095:	jae    0x14001b0d7
   14001b097:	rex push rcx
   14001b099:	rex.RB
   14001b09a:	rex.B
   14001b09b:	pop    r15
   14001b09d:	rex.WRX
   14001b09e:	rex.W
   14001b09f:	rex pop rdx
   14001b0a1:	add    BYTE PTR [rcx+0x17],cl
   14001b0a4:	(bad)  
   14001b0a5:	jae    0x14001b11b
   14001b0a7:	(bad)  
   14001b0a8:	jb     0x14001b11e
   14001b0aa:	rex push rcx
   14001b0ac:	push   rax
   14001b0ad:	jb     0x14001b11e
   14001b0af:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b0b2:	jae    0x14001b0f4
   14001b0b4:	rex push rcx
   14001b0b6:	rex.RB
   14001b0b7:	rex.B
   14001b0b8:	pop    r8
   14001b0ba:	rex.B
   14001b0bb:	rex.RB
   14001b0bc:	rex.X push rsi
   14001b0be:	push   rcx
   14001b0bf:	push   rbx
   14001b0c0:	je     0x14001b134
   14001b0c2:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001b0c9:	rex.X push rsi
   14001b0cb:	push   rcx
   14001b0cc:	push   rbx
   14001b0cd:	je     0x14001b141
   14001b0cf:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001b0d6:	rex
   14001b0d7:	rex push rsi
   14001b0d9:	(bad)  
   14001b0da:	and    al,0x51
   14001b0dc:	rex.RX ins BYTE PTR es:[rdi],dx
   14001b0de:	(bad)  
   14001b0df:	addr32 jae 0x14001b122
   14001b0e2:	push   rdi
   14001b0e3:	xor    al,0x4f
   14001b0e5:	jo     0x14001b14c
   14001b0e7:	outs   dx,BYTE PTR ds:[rsi]
   14001b0e8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001b0ea:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14001b0ee:	(bad)  
   14001b0ef:	addr32 rex push rcx
   14001b0f2:	rex.WB
   14001b0f3:	rex.WRXB
   14001b0f4:	rex.R
   14001b0f5:	gs jbe 0x14001b161
   14001b0f8:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b0fb:	rex
   14001b0fc:	rex
   14001b0fd:	rex
   14001b0fe:	rex pop rdx
   14001b100:	add    BYTE PTR [rax],al
   14001b102:	rex.RX add DWORD PTR [rdi],r15d
   14001b105:	(bad)  
   14001b106:	xor    BYTE PTR [rcx+0x50],dl
   14001b109:	jb     0x14001b17a
   14001b10b:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b10e:	jae    0x14001b150
   14001b110:	rex push rcx
   14001b112:	rex.RB
   14001b113:	rex.B
   14001b114:	rex.B
   14001b115:	rex push rax
   14001b117:	rex.RB
   14001b118:	push   r14
   14001b11a:	push   rcx
   14001b11b:	rex.WRXB (bad) 
   14001b11d:	push   0x65
   14001b11f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b123:	rex pop rdx
   14001b125:	add    BYTE PTR [rcx+0x2],bh
   14001b128:	(bad)  
   14001b129:	(bad)  
   14001b12a:	xor    DWORD PTR [rcx+0x44],edx
   14001b12d:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   14001b134:	rex.B
   14001b135:	rex pop rax
   14001b137:	pop    rdx
   14001b138:	add    BYTE PTR [rax],al
   14001b13a:	mov    bl,0xb
   14001b13c:	(bad)  
   14001b13d:	imul   bp,WORD PTR [rbp+riz*2+0x50],0x7461
   14001b144:	push   0x69445140
   14001b149:	jb     0x14001b18b
   14001b14b:	rex push rcx
   14001b14d:	rex.RB
   14001b14e:	rex.X
   14001b14f:	rex.B (bad) 
   14001b151:	push   r14
   14001b153:	push   rcx
   14001b154:	push   rbx
   14001b155:	je     0x14001b1c9
   14001b157:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001b15e:	rex.X push rsi
   14001b160:	xor    al,BYTE PTR [rax+0x40]
   14001b163:	pop    rdx
   14001b164:	add    BYTE PTR [rax],al
   14001b166:	cmp    DWORD PTR [rsi],eax
   14001b168:	(bad)  
   14001b169:	(bad)  
   14001b16a:	(bad)
   14001b16f:	je     0x14001b1d6
   14001b171:	imul   r14d,DWORD PTR [rdx+0x40],0x6c694651
   14001b179:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14001b17c:	outs   dx,WORD PTR ds:[rsi]
   14001b17e:	rex
   14001b17f:	rex push rcx
   14001b181:	rex.RB
   14001b182:	rex.X
   14001b183:	rex.B (bad) 
   14001b185:	push   r14
   14001b187:	push   rcx
   14001b188:	imul   r14d,DWORD PTR [rdx+0x40],0x5a5840
   14001b190:	loopne 0x14001b1a9
   14001b192:	(bad)  
   14001b193:	jae    0x14001b20a
   14001b195:	data16 imul di,WORD PTR [rax+0x40],0x4651
   14001b19c:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14001b1a4:	rex push rcx
   14001b1a6:	rex.RB
   14001b1a7:	rex.X
   14001b1a8:	rex.B (bad) 
   14001b1aa:	push   r14
   14001b1ac:	push   rcx
   14001b1ad:	push   rbx
   14001b1ae:	je     0x14001b222
   14001b1b0:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001b1b7:	add    BYTE PTR [rdi+0x303f3f00],dh
   14001b1bd:	push   rcx
   14001b1be:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14001b1c7:	rex push rcx
   14001b1c9:	rex.RB
   14001b1ca:	rex.B
   14001b1cb:	rex.B
   14001b1cc:	rex
   14001b1cd:	rex.B
   14001b1ce:	rex.RB
   14001b1cf:	rex.X push rsi
   14001b1d1:	push   rcx
   14001b1d2:	push   rbx
   14001b1d3:	je     0x14001b247
   14001b1d5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b1dc:	add    BYTE PTR [rax],al
   14001b1de:	(bad)  
   14001b1df:	(bad)  
   14001b1e0:	(bad)  
   14001b1e1:	(bad)  
   14001b1e2:	jo     0x14001b254
   14001b1e4:	ins    BYTE PTR es:[rdi],dx
   14001b1e5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b1ec:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   14001b1f5:	push   rcx
   14001b1f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b1f8:	jb     0x14001b25f
   14001b1fa:	rex.B jo 0x14001b26d
   14001b1fd:	ins    BYTE PTR es:[rdi],dx
   14001b1fe:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b205:	rex
   14001b206:	rex push rbx
   14001b208:	rex.B (bad) 
   14001b20a:	push   r14
   14001b20c:	push   rcx
   14001b20d:	push   rbx
   14001b20e:	je     0x14001b282
   14001b210:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001b217:	add    ah,ch
   14001b219:	or     edi,DWORD PTR [rdi]
   14001b21b:	imul   si,WORD PTR [rdx+0x73],0x4e74
   14001b221:	outs   dx,DWORD PTR ds:[rsi]
   14001b222:	fs gs rex push rcx
   14001b226:	rex.W (bad) 
   14001b228:	jae    0x14001b292
   14001b22a:	rex.R (bad) 
   14001b22c:	je     0x14001b28f
   14001b22e:	rex
   14001b22f:	rex push rcx
   14001b231:	rex.RB
   14001b232:	rex.B
   14001b233:	push   r8
   14001b235:	rex.RB
   14001b236:	push   r13
   14001b238:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001b23a:	fs rex xor DWORD PTR gs:[rax+0x58],eax
   14001b240:	pop    rdx
   14001b241:	add    BYTE PTR [rax+0x6f743f18],bl
   14001b247:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b249:	je     0x14001b28b
   14001b24b:	push   rcx
   14001b24c:	push   rbx
   14001b24d:	je     0x14001b2c1
   14001b24f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b256:	rex.X
   14001b257:	rex.B
   14001b258:	rex.W push rax
   14001b25a:	rex.RB
   14001b25b:	pop    r15
   14001b25d:	rex.WRX
   14001b25e:	rex.W
   14001b25f:	rex pop rdx
   14001b261:	add    BYTE PTR [rdi],ch
   14001b263:	(bad)  
   14001b264:	(bad)  
   14001b265:	jae    0x14001b2d7
   14001b267:	ins    BYTE PTR es:[rdi],dx
   14001b268:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   14001b270:	outs   dx,BYTE PTR ds:[rsi]
   14001b271:	addr32 rex
   14001b273:	rex push rcx
   14001b275:	rex.RB
   14001b276:	rex.X
   14001b277:	rex.B (bad) 
   14001b279:	push   r14
   14001b27b:	push   rcx
   14001b27c:	push   rbx
   14001b27d:	je     0x14001b2f1
   14001b27f:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001b286:	rex
   14001b287:	rex push rsi
   14001b289:	push   rcx
   14001b28a:	rex.XB push 0x40407261
   14001b290:	push   rdi
   14001b291:	xor    al,0x53
   14001b293:	jo     0x14001b301
   14001b295:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   14001b29d:	outs   dx,DWORD PTR ds:[rsi]
   14001b29e:	jb     0x14001b2e0
   14001b2a0:	xor    DWORD PTR [rax+0x57],eax
   14001b2a3:	xor    al,0x43
   14001b2a5:	(bad)  
   14001b2a6:	jae    0x14001b30d
   14001b2a8:	push   rbx
   14001b2a9:	outs   dx,BYTE PTR gs:[rsi]
   14001b2ab:	jae    0x14001b316
   14001b2ad:	je     0x14001b318
   14001b2af:	jbe    0x14001b31a
   14001b2b1:	je     0x14001b32c
   14001b2b3:	rex push rcx
   14001b2b5:	je     0x14001b2f7
   14001b2b7:	rex
   14001b2b8:	rex pop rdx
   14001b2ba:	add    BYTE PTR [rax],al
   14001b2bc:	or     BYTE PTR [rcx],dl
   14001b2be:	(bad)  
   14001b2bf:	jo     0x14001b322
   14001b2c1:	jb     0x14001b324
   14001b2c3:	ins    DWORD PTR es:[rdi],dx
   14001b2c4:	gs je  0x14001b32c
   14001b2c7:	jb     0x14001b31d
   14001b2c9:	jns    0x14001b33b
   14001b2cb:	gs jae 0x14001b30e
   14001b2ce:	push   rcx
   14001b2cf:	rex.WRB
   14001b2d0:	gs je  0x14001b334
   14001b2d3:	rex.WRB
   14001b2d4:	gs je  0x14001b33f
   14001b2d7:	outs   dx,DWORD PTR ds:[rsi]
   14001b2d8:	fs rex
   14001b2da:	rex push rcx
   14001b2dc:	rex.RB
   14001b2dd:	rex.X
   14001b2de:	rex.B (bad) 
   14001b2e0:	push   r14
   14001b2e2:	(bad)  
   14001b2e3:	and    al,0x51
   14001b2e5:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   14001b2ed:	jns    0x14001b363
   14001b2ef:	gs rex.B jb 0x14001b365
   14001b2f3:	(bad)  
   14001b2f4:	jns    0x14001b336
   14001b2f6:	rex
   14001b2f7:	rex
   14001b2f8:	rex pop rax
   14001b2fa:	pop    rdx
   14001b2fb:	add    BYTE PTR [rip+0x61703f11],al        # 0x1a171f212
   14001b301:	jb     0x14001b364
   14001b303:	ins    DWORD PTR es:[rdi],dx
   14001b304:	gs je  0x14001b36c
   14001b307:	jb     0x14001b357
   14001b309:	(bad)  
   14001b30a:	ins    DWORD PTR es:[rdi],dx
   14001b30b:	gs jae 0x14001b34e
   14001b30e:	push   rcx
   14001b30f:	rex.WRB
   14001b310:	gs je  0x14001b374
   14001b313:	rex.WRB
   14001b314:	gs je  0x14001b37f
   14001b317:	outs   dx,DWORD PTR ds:[rsi]
   14001b318:	fs rex
   14001b31a:	rex push rcx
   14001b31c:	rex.RB
   14001b31d:	rex.X
   14001b31e:	rex.B (bad) 
   14001b320:	push   r14
   14001b322:	(bad)  
   14001b323:	and    al,0x51
   14001b325:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   14001b32d:	jns    0x14001b3a3
   14001b32f:	gs rex.B jb 0x14001b3a5
   14001b333:	(bad)  
   14001b334:	jns    0x14001b376
   14001b336:	rex
   14001b337:	rex
   14001b338:	rex pop rax
   14001b33a:	pop    rdx
   14001b33b:	add    BYTE PTR [rax+0x65723f14],bl
   14001b341:	jbe    0x14001b3ac
   14001b343:	jae    0x14001b3ae
   14001b345:	outs   dx,DWORD PTR ds:[rsi]
   14001b346:	outs   dx,BYTE PTR ds:[rsi]
   14001b347:	rex push rcx
   14001b349:	rex.WRB
   14001b34a:	gs je  0x14001b3ae
   14001b34d:	rex.WRB
   14001b34e:	gs je  0x14001b3b9
   14001b351:	outs   dx,DWORD PTR ds:[rsi]
   14001b352:	fs rex
   14001b354:	rex push rcx
   14001b356:	rex.RB
   14001b357:	rex.X
   14001b358:	rex.B
   14001b359:	rex.W pop rax
   14001b35b:	pop    rdx
   14001b35c:	add    BYTE PTR [rax],al
   14001b35e:	sub    eax,0x79743f1a
   14001b363:	jo     0x14001b3ca
   14001b365:	rex.WRX (bad) 
   14001b367:	ins    DWORD PTR es:[rdi],dx
   14001b368:	gs rex push rcx
   14001b36b:	rex.WRB
   14001b36c:	gs je  0x14001b3d0
   14001b36f:	rex.WRB
   14001b370:	gs je  0x14001b3db
   14001b373:	outs   dx,DWORD PTR ds:[rsi]
   14001b374:	fs rex
   14001b376:	rex push rcx
   14001b378:	rex.RB
   14001b379:	rex.X
   14001b37a:	push   r8
   14001b37c:	rex.RB
   14001b37d:	rex.X
   14001b37e:	rex.R pop rax
   14001b380:	pop    rdx
   14001b381:	add    BYTE PTR [rax+rdx*1+0x3f],dh
   14001b385:	outs   dx,BYTE PTR ds:[rsi]
   14001b386:	(bad)  
   14001b387:	ins    DWORD PTR es:[rdi],dx
   14001b388:	gs rex push rcx
   14001b38b:	rex.WRB
   14001b38c:	gs je  0x14001b3f0
   14001b38f:	rex.WRB
   14001b390:	gs je  0x14001b3fb
   14001b393:	outs   dx,DWORD PTR ds:[rsi]
   14001b394:	fs rex
   14001b396:	rex push rcx
   14001b398:	rex.RB
   14001b399:	rex.X
   14001b39a:	rex.B (bad) 
   14001b39c:	push   r14
   14001b39e:	push   rcx
   14001b39f:	rex.X jns 0x14001b416
   14001b3a2:	gs rex.B jb 0x14001b418
   14001b3a6:	(bad)  
   14001b3a7:	jns    0x14001b3e9
   14001b3a9:	rex pop rax
   14001b3ab:	pop    rdx
   14001b3ac:	add    BYTE PTR [rax],al
   14001b3ae:	rex.XB (bad) 
   14001b3b0:	(bad)  
   14001b3b1:	(bad)  
   14001b3b2:	movsxd esp,DWORD PTR [rbx+0x65]
   14001b3b5:	jae    0x14001b42a
   14001b3b7:	rex push rcx
   14001b3b9:	rex.WRB
   14001b3ba:	gs je  0x14001b41e
   14001b3bd:	rex.WRB
   14001b3be:	gs je  0x14001b429
   14001b3c1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3c2:	fs rex
   14001b3c4:	rex push rcx
   14001b3c6:	rex.RB
   14001b3c7:	rex.X
   14001b3c8:	rex.B (bad) 
   14001b3ca:	push   r15
   14001b3cc:	xor    al,0x41
   14001b3ce:	movsxd esp,DWORD PTR [rbx+0x65]
   14001b3d1:	jae    0x14001b446
   14001b3d3:	rex xor DWORD PTR [rax+0x58],eax
   14001b3d7:	pop    rdx
   14001b3d8:	add    BYTE PTR [rax],al
   14001b3da:	adc    dl,BYTE PTR [rax]
   14001b3dc:	(bad)  
   14001b3dd:	ins    DWORD PTR es:[rdi],dx
   14001b3de:	gs je  0x14001b449
   14001b3e1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3e2:	fs push rsp
   14001b3e4:	jns    0x14001b456
   14001b3e6:	gs rex push rcx
   14001b3e9:	rex.WRB
   14001b3ea:	gs je  0x14001b44e
   14001b3ed:	rex.WRB
   14001b3ee:	gs je  0x14001b459
   14001b3f1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3f2:	fs rex
   14001b3f4:	rex push rcx
   14001b3f6:	rex.RB
   14001b3f7:	rex.X
   14001b3f8:	rex.B (bad) 
   14001b3fa:	push   r15
   14001b3fc:	xor    al,0x4d
   14001b3fe:	gs je  0x14001b469
   14001b401:	outs   dx,DWORD PTR ds:[rsi]
   14001b402:	fs push rsp
   14001b404:	jns    0x14001b476
   14001b406:	rex xor DWORD PTR gs:[rax+0x58],eax
   14001b40b:	pop    rdx
   14001b40c:	add    BYTE PTR [rax],al
   14001b40e:	adc    DWORD PTR [rax],edx
   14001b410:	(bad)  
   14001b411:	ins    DWORD PTR es:[rdi],dx
   14001b412:	gs je  0x14001b47d
   14001b415:	outs   dx,DWORD PTR ds:[rsi]
   14001b416:	fs push rbx
   14001b418:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14001b41f:	gs rex push rcx
   14001b422:	rex.WRB
   14001b423:	gs je  0x14001b487
   14001b426:	rex.WRB
   14001b427:	gs je  0x14001b492
   14001b42a:	outs   dx,DWORD PTR ds:[rsi]
   14001b42b:	fs rex
   14001b42d:	rex push rcx
   14001b42f:	rex.RB
   14001b430:	rex.X
   14001b431:	rex.B (bad) 
   14001b433:	push   r14
   14001b435:	push   rcx
   14001b436:	rex.X jns 0x14001b4ad
   14001b439:	gs rex.B jb 0x14001b4af
   14001b43d:	(bad)  
   14001b43e:	jns    0x14001b480
   14001b440:	rex pop rax
   14001b442:	pop    rdx
   14001b443:	add    BYTE PTR [rbx],cl
   14001b445:	adc    BYTE PTR [rdi],bh
   14001b447:	ins    DWORD PTR es:[rdi],dx
   14001b448:	gs je  0x14001b4b3
   14001b44b:	outs   dx,DWORD PTR ds:[rsi]
   14001b44c:	fs rex push rcx
   14001b44f:	rex.WRB
   14001b450:	gs je  0x14001b4b4
   14001b453:	rex.WRXB (bad) 
   14001b455:	push   0x65
   14001b457:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b45b:	push   rcx
   14001b45c:	rex.RB
   14001b45d:	rex.X
   14001b45e:	rex.B (bad) 
   14001b460:	push   r14
   14001b462:	push   rcx
   14001b463:	rex.WRB
   14001b464:	gs je  0x14001b4c8
   14001b467:	rex.WRB
   14001b468:	gs je  0x14001b4d3
   14001b46b:	outs   dx,DWORD PTR ds:[rsi]
   14001b46c:	fs rex
   14001b46e:	rex
   14001b46f:	rex.W
   14001b470:	rex pop rdx
   14001b472:	add    BYTE PTR [rax],al
   14001b474:	or     eax,0x656d3f10
   14001b479:	je     0x14001b4e3
   14001b47b:	outs   dx,DWORD PTR ds:[rsi]
   14001b47c:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14001b47f:	jne    0x14001b4ef
   14001b481:	je     0x14001b4c3
   14001b483:	push   rcx
   14001b484:	rex.WRB
   14001b485:	gs je  0x14001b4e9
   14001b488:	rex.WRXB (bad) 
   14001b48a:	push   0x65
   14001b48c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b490:	push   rcx
   14001b491:	rex.RB
   14001b492:	rex.X
   14001b493:	rex.B
   14001b494:	rex.W pop rax
   14001b496:	pop    rdx
   14001b497:	add    BYTE PTR [rax],dl
   14001b499:	adc    BYTE PTR [rdi],bh
   14001b49b:	ins    DWORD PTR es:[rdi],dx
   14001b49c:	gs je  0x14001b507
   14001b49f:	outs   dx,DWORD PTR ds:[rsi]
   14001b4a0:	fs rex.WRXB
   14001b4a2:	data16 data16 jae 0x14001b50b
   14001b4a6:	je     0x14001b4e8
   14001b4a8:	push   rcx
   14001b4a9:	rex.WRB
   14001b4aa:	gs je  0x14001b50e
   14001b4ad:	rex.WRXB (bad) 
   14001b4af:	push   0x65
   14001b4b1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b4b5:	push   rcx
   14001b4b6:	rex.RB
   14001b4b7:	rex.X
   14001b4b8:	rex.B
   14001b4b9:	rex.W pop rax
   14001b4bb:	pop    rdx
   14001b4bc:	add    BYTE PTR [rax],al
   14001b4be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b4bf:	(bad)  
   14001b4c0:	(bad)  
   14001b4c1:	jae    0x14001b537
   14001b4c3:	(bad)  
   14001b4c4:	je     0x14001b52f
   14001b4c6:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001b4c9:	je     0x14001b52c
   14001b4cb:	rex.WRXB (bad) 
   14001b4cd:	push   0x65
   14001b4cf:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b4d3:	rex.WRXB (bad) 
   14001b4d5:	push   0x65
   14001b4d7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b4db:	xor    dl,BYTE PTR [rbp+0x51]
   14001b4de:	rex.WRB
   14001b4df:	gs je  0x14001b543
   14001b4e2:	rex.WRXB (bad) 
   14001b4e4:	push   0x65
   14001b4e6:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b4ea:	rex.X add sil,bl
   14001b4ed:	sbb    bh,BYTE PTR [rdi]
   14001b4ef:	ja     0x14001b55a
   14001b4f1:	ins    BYTE PTR es:[rdi],dx
   14001b4f2:	ins    BYTE PTR es:[rdi],dx
   14001b4f3:	rex.RXB jb 0x14001b565
   14001b4f6:	ja     0x14001b538
   14001b4f8:	push   rcx
   14001b4f9:	rex.W (bad) 
   14001b4fb:	jae    0x14001b565
   14001b4fd:	rex.R (bad) 
   14001b4ff:	je     0x14001b562
   14001b501:	rex
   14001b502:	rex push rcx
   14001b504:	rex.RB
   14001b505:	rex.B
   14001b506:	pop    r15
   14001b508:	rex.WRX pop rax
   14001b50a:	pop    rdx
   14001b50b:	add    BYTE PTR [rcx+rdx*1+0x6f72703f],ch
   14001b512:	jo     0x14001b579
   14001b514:	jb     0x14001b58a
   14001b516:	jns    0x14001b567
   14001b518:	data16 data16 jae 0x14001b581
   14001b51c:	je     0x14001b55e
   14001b51e:	push   rcx
   14001b51f:	rex.WRB
   14001b520:	gs je  0x14001b584
   14001b523:	rex.WRXB (bad) 
   14001b525:	push   0x65
   14001b527:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b52b:	push   rcx
   14001b52c:	rex.RB
   14001b52d:	rex.X
   14001b52e:	rex.B
   14001b52f:	rex.W pop rax
   14001b531:	pop    rdx
   14001b532:	add    BYTE PTR [rax],al
   14001b534:	xchg   esi,eax
   14001b535:	sbb    bh,BYTE PTR [rdi]
   14001b537:	jbe    0x14001b59a
   14001b539:	ins    BYTE PTR es:[rdi],dx
   14001b53a:	jne    0x14001b5a1
   14001b53c:	rex push rcx
   14001b53e:	rex.WRB
   14001b53f:	gs je  0x14001b5a3
   14001b542:	rex.XB ins BYTE PTR es:[rdi],dx
   14001b544:	(bad)  
   14001b545:	jae    0x14001b5ba
   14001b547:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b549:	outs   dx,WORD PTR ds:[rsi]
   14001b54b:	rex
   14001b54c:	rex push rcx
   14001b54e:	rex.RB
   14001b54f:	rex.X
   14001b550:	push   r8
   14001b552:	rex.RB
   14001b553:	rex.X
   14001b554:	rex.R pop rax
   14001b556:	pop    rdx
   14001b557:	add    BYTE PTR [rcx+0x10],dh
   14001b55a:	(bad)  
   14001b55b:	outs   dx,BYTE PTR ds:[rsi]
   14001b55c:	(bad)  
   14001b55d:	ins    DWORD PTR es:[rdi],dx
   14001b55e:	gs rex push rcx
   14001b561:	rex.WRB
   14001b562:	gs je  0x14001b5c6
   14001b565:	rex.XB ins BYTE PTR es:[rdi],dx
   14001b567:	(bad)  
   14001b568:	jae    0x14001b5dd
   14001b56a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b56c:	outs   dx,WORD PTR ds:[rsi]
   14001b56e:	rex
   14001b56f:	rex push rcx
   14001b571:	rex.RB
   14001b572:	rex.X
   14001b573:	push   r8
   14001b575:	rex.RB
   14001b576:	rex.X
   14001b577:	rex.R pop rax
   14001b579:	pop    rdx
   14001b57a:	add    BYTE PTR [rax],al
   14001b57c:	repnz (bad) 
   14001b57e:	(bad)  
   14001b57f:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b583:	jae    0x14001b5ce
   14001b585:	outs   dx,BYTE PTR ds:[rsi]
   14001b586:	outs   dx,WORD PTR ds:[rsi]
   14001b588:	rex push rcx
   14001b58a:	rex.WRB
   14001b58b:	gs je  0x14001b5ef
   14001b58e:	rex.WRXB (bad) 
   14001b590:	push   0x65
   14001b592:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b596:	push   rcx
   14001b597:	rex.RB
   14001b598:	rex.X
   14001b599:	rex.B (bad) 
   14001b59b:	push   r14
   14001b59d:	push   rcx
   14001b59e:	rex.WRB
   14001b59f:	gs je  0x14001b603
   14001b5a2:	rex.XB ins BYTE PTR es:[rdi],dx
   14001b5a4:	(bad)  
   14001b5a5:	jae    0x14001b61a
   14001b5a7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b5a9:	outs   dx,WORD PTR ds:[rsi]
   14001b5ab:	rex
   14001b5ac:	rex
   14001b5ad:	rex.W
   14001b5ae:	rex pop rdx
   14001b5b0:	add    BYTE PTR [rax],al
   14001b5b2:	repz (bad) 
   14001b5b4:	(bad)  
   14001b5b5:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b5b9:	jae    0x14001b604
   14001b5bb:	outs   dx,BYTE PTR ds:[rsi]
   14001b5bc:	outs   dx,WORD PTR ds:[rsi]
   14001b5be:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b5c0:	jne    0x14001b630
   14001b5c2:	je     0x14001b604
   14001b5c4:	push   rcx
   14001b5c5:	rex.WRB
   14001b5c6:	gs je  0x14001b62a
   14001b5c9:	rex.WRXB (bad) 
   14001b5cb:	push   0x65
   14001b5cd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b5d1:	push   rcx
   14001b5d2:	rex.RB
   14001b5d3:	rex.X
   14001b5d4:	rex.B
   14001b5d5:	rex.W pop rax
   14001b5d7:	pop    rdx
   14001b5d8:	add    BYTE PTR [rax],al
   14001b5da:	jmp    0x17140f4e1
   14001b5df:	push   rcx
   14001b5e0:	push   rbp
   14001b5e1:	jb     0x14001b64f
   14001b5e3:	rex
   14001b5e4:	rex push rcx
   14001b5e6:	rex.RB
   14001b5e7:	rex.B
   14001b5e8:	rex.B
   14001b5e9:	rex pop rax
   14001b5eb:	pop    rdx
   14001b5ec:	add    BYTE PTR [rax],al
   14001b5ee:	sbb    BYTE PTR [rbx],cl
   14001b5f0:	(bad)  
   14001b5f1:	outs   dx,BYTE PTR gs:[rsi]
   14001b5f3:	jne    0x14001b662
   14001b5f5:	gs jb  0x14001b659
   14001b5f8:	je     0x14001b669
   14001b5fa:	jb     0x14001b63c
   14001b5fc:	push   rcx
   14001b5fd:	rex.WRB
   14001b5fe:	gs je  0x14001b662
   14001b601:	rex.WRXB (bad) 
   14001b603:	push   0x65
   14001b605:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b609:	push   rcx
   14001b60a:	rex.RB
   14001b60b:	rex.X
   14001b60c:	rex.B (bad) 
   14001b60e:	push   r14
   14001b610:	push   rcx
   14001b611:	rex.WRB
   14001b612:	gs je  0x14001b676
   14001b615:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001b617:	jne    0x14001b686
   14001b619:	rex
   14001b61a:	rex
   14001b61b:	rex.W
   14001b61c:	rex pop rdx
   14001b61e:	add    BYTE PTR [rax],al
   14001b620:	sbb    ecx,DWORD PTR [rbx]
   14001b622:	(bad)  
   14001b623:	outs   dx,BYTE PTR gs:[rsi]
   14001b625:	jne    0x14001b694
   14001b627:	gs jb  0x14001b68b
   14001b62a:	je     0x14001b69b
   14001b62c:	jb     0x14001b671
   14001b62e:	outs   dx,DWORD PTR ds:[rsi]
   14001b62f:	jne    0x14001b69f
   14001b631:	je     0x14001b673
   14001b633:	push   rcx
   14001b634:	rex.WRB
   14001b635:	gs je  0x14001b699
   14001b638:	rex.WRXB (bad) 
   14001b63a:	push   0x65
   14001b63c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b640:	push   rcx
   14001b641:	rex.RB
   14001b642:	rex.X
   14001b643:	rex.B
   14001b644:	rex.W pop rax
   14001b646:	pop    rdx
   14001b647:	add    BYTE PTR [rip+0x6e653f0b],bl        # 0x1ae66f558
   14001b64d:	jne    0x14001b6bc
   14001b64f:	gs jb  0x14001b6b3
   14001b652:	je     0x14001b6c3
   14001b654:	jb     0x14001b6a5
   14001b656:	data16 data16 jae 0x14001b6bf
   14001b65a:	je     0x14001b69c
   14001b65c:	push   rcx
   14001b65d:	rex.WRB
   14001b65e:	gs je  0x14001b6c2
   14001b661:	rex.WRXB (bad) 
   14001b663:	push   0x65
   14001b665:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b669:	push   rcx
   14001b66a:	rex.RB
   14001b66b:	rex.X
   14001b66c:	rex.B
   14001b66d:	rex.W pop rax
   14001b66f:	pop    rdx
   14001b670:	add    BYTE PTR [rax],al
   14001b672:	xor    al,0xa
   14001b674:	(bad)  
   14001b675:	fs gs ins BYTE PTR es:[rdi],dx
   14001b678:	gs je  0x14001b6e0
   14001b67b:	rex.WR (bad) 
   14001b67d:	je     0x14001b6e4
   14001b67f:	jb     0x14001b6c1
   14001b681:	push   rcx
   14001b682:	rex.WRXB (bad) 
   14001b684:	push   0x65
   14001b686:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b68a:	push   rcx
   14001b68b:	rex.RB
   14001b68c:	rex.B
   14001b68d:	pop    r8
   14001b68f:	pop    rax
   14001b690:	pop    rdx
   14001b691:	add    BYTE PTR [rdi+0xc],dl
   14001b694:	(bad)  
   14001b695:	data16 jb 0x14001b707
   14001b698:	ins    DWORD PTR es:[rdi],dx
   14001b699:	push   rbp
   14001b69a:	je     0x14001b702
   14001b69c:	cmp    BYTE PTR [rax+0x51],al
   14001b69f:	push   rbx
   14001b6a0:	je     0x14001b714
   14001b6a2:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001b6a9:	(bad)  
   14001b6aa:	push   r14
   14001b6ac:	xor    DWORD PTR [rax+0x41],eax
   14001b6af:	rex.RB
   14001b6b0:	rex.X push rsi
   14001b6b2:	push   rcx
   14001b6b3:	rex.X jns 0x14001b72a
   14001b6b6:	gs rex.B jb 0x14001b72c
   14001b6ba:	(bad)  
   14001b6bb:	jns    0x14001b6fd
   14001b6bd:	rex
   14001b6be:	rex pop rdx
   14001b6c0:	add    BYTE PTR [rax],al
   14001b6c2:	lock or eax,0x4573693f
   14001b6c8:	ins    DWORD PTR es:[rdi],dx
   14001b6c9:	jo     0x14001b73f
   14001b6cb:	jns    0x14001b70d
   14001b6cd:	push   rcx
   14001b6ce:	push   rbx
   14001b6cf:	je     0x14001b743
   14001b6d1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b6d8:	rex.X
   14001b6d9:	pop    r15
   14001b6db:	rex.WRX pop rax
   14001b6dd:	pop    rdx
   14001b6de:	add    BYTE PTR [rax],al
   14001b6e0:	sbb    edx,DWORD PTR [rax]
   14001b6e2:	(bad)  
   14001b6e3:	ins    DWORD PTR es:[rdi],dx
   14001b6e4:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   14001b6ec:	outs   dx,BYTE PTR ds:[rsi]
   14001b6ed:	addr32 rex
   14001b6ef:	rex push rcx
   14001b6f1:	rex.RB
   14001b6f2:	rex.X
   14001b6f3:	rex.B (bad) 
   14001b6f5:	push   r14
   14001b6f7:	xor    DWORD PTR [rax+0x48],eax
   14001b6fa:	rex.W
   14001b6fb:	rex pop rdx
   14001b6fd:	add    BYTE PTR [rdi+rcx*1],ch
   14001b700:	(bad)  
   14001b701:	ins    BYTE PTR es:[rdi],dx
   14001b702:	(bad)  
   14001b703:	jae    0x14001b779
   14001b705:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b707:	fs gs js 0x14001b75a
   14001b70b:	rex push cx
   14001b70e:	push   rbx
   14001b70f:	je     0x14001b783
   14001b711:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b718:	rex.X
   14001b719:	rex.B
   14001b71a:	rex.W push rsi
   14001b71c:	push   rcx
   14001b71d:	rex.XB push 0x40407261
   14001b723:	rex.W push rdi
   14001b725:	xor    al,0x43
   14001b727:	(bad)  
   14001b728:	jae    0x14001b78f
   14001b72a:	push   rbx
   14001b72b:	outs   dx,BYTE PTR gs:[rsi]
   14001b72d:	jae    0x14001b798
   14001b72f:	je     0x14001b79a
   14001b731:	jbe    0x14001b79c
   14001b733:	je     0x14001b7ae
   14001b735:	rex push rcx
   14001b737:	je     0x14001b779
   14001b739:	rex
   14001b73a:	rex pop rdx
   14001b73c:	add    BYTE PTR [rax],al
   14001b73e:	jrcxz  0x14001b74a
   14001b740:	(bad)  
   14001b741:	outs   dx,BYTE PTR gs:[rsi]
   14001b743:	fs rex push rcx
   14001b746:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001b74e:	rex
   14001b74f:	rex push rcx
   14001b751:	rex.RB
   14001b752:	rex.X
   14001b753:	push   r8
   14001b755:	rex.RB
   14001b756:	push   r8
   14001b758:	rex.RB
   14001b759:	pop    r8
   14001b75b:	pop    rax
   14001b75c:	pop    rdx
   14001b75d:	add    BYTE PTR [rdx+0x7],al
   14001b760:	(bad)  
   14001b761:	(bad)  
   14001b762:	imul   ebp,DWORD PTR gs:[esi+0x40],0x73694c51
   14001b76b:	je     0x14001b7b1
   14001b76d:	(bad)  
   14001b76e:	je     0x14001b7d1
   14001b770:	rex
   14001b771:	rex push rcx
   14001b773:	rex.RB
   14001b774:	rex.X
   14001b775:	push   r8
   14001b777:	rex.RB
   14001b778:	push   r8
   14001b77a:	rex.RB
   14001b77b:	pop    r8
   14001b77d:	pop    rax
   14001b77e:	pop    rdx
   14001b77f:	add    ah,ah
   14001b781:	add    bh,BYTE PTR [rdi]
   14001b783:	(bad)  
   14001b784:	xor    DWORD PTR [rcx+0x54],edx
   14001b787:	imul   ebp,DWORD PTR [rbp+0x65],0x55404072
   14001b78e:	rex.RB
   14001b78f:	rex.B
   14001b790:	rex.B
   14001b791:	rex pop rax
   14001b793:	pop    rdx
   14001b794:	add    BYTE PTR [rax],al
   14001b796:	push   rdx
   14001b797:	(bad)  
   14001b798:	(bad)  
   14001b799:	jae    0x14001b80f
   14001b79b:	(bad)  
   14001b79c:	jb     0x14001b812
   14001b79e:	rex push rcx
   14001b7a0:	push   rsp
   14001b7a1:	imul   ebp,DWORD PTR [rbp+0x65],0x51404072
   14001b7a8:	rex.RB
   14001b7a9:	rex.B
   14001b7aa:	pop    r8
   14001b7ac:	pop    rax
   14001b7ad:	pop    rdx
   14001b7ae:	add    BYTE PTR [rax],al
   14001b7b0:	rex.WX add dil,BYTE PTR [rdi]
   14001b7b3:	(bad)  
   14001b7b4:	xor    DWORD PTR [rbx+0x6f],eax
   14001b7b7:	outs   dx,BYTE PTR ds:[rsi]
   14001b7b8:	outs   dx,BYTE PTR ds:[rsi]
   14001b7b9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b7be:	outs   dx,BYTE PTR ds:[rsi]
   14001b7bf:	rex push rcx
   14001b7c1:	rex.WRB
   14001b7c2:	gs je  0x14001b826
   14001b7c5:	rex.WRXB (bad) 
   14001b7c7:	push   0x65
   14001b7c9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b7cd:	push   rcx
   14001b7ce:	rex.RB
   14001b7cf:	rex.B
   14001b7d0:	rex.B
   14001b7d1:	rex pop rax
   14001b7d3:	pop    rdx
   14001b7d4:	add    BYTE PTR [rax],al
   14001b7d6:	jg     0x14001b7e0
   14001b7d8:	(bad)  
   14001b7d9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b7dc:	outs   dx,BYTE PTR ds:[rsi]
   14001b7dd:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001b7e2:	rex.WRXB (bad) 
   14001b7e4:	push   0x65
   14001b7e6:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b7ea:	push   rbx
   14001b7eb:	rex.B (bad) 
   14001b7ed:	push   r14
   14001b7ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b7f1:	outs   dx,BYTE PTR ds:[rsi]
   14001b7f2:	outs   dx,BYTE PTR ds:[rsi]
   14001b7f3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b7f8:	outs   dx,BYTE PTR ds:[rsi]
   14001b7f9:	rex push rcx
   14001b7fb:	rex.WRB
   14001b7fc:	gs je  0x14001b860
   14001b7ff:	rex.WRXB (bad) 
   14001b801:	push   0x65
   14001b803:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b807:	push   rax
   14001b808:	rex.RB
   14001b809:	rex.X push rsi
   14001b80b:	xor    DWORD PTR [rax+0x50],eax
   14001b80e:	rex.RB
   14001b80f:	rex.X
   14001b810:	xor    BYTE PTR [rcx],r14b
   14001b813:	push   rdi
   14001b814:	xor    al,0x43
   14001b816:	outs   dx,DWORD PTR ds:[rsi]
   14001b817:	outs   dx,BYTE PTR ds:[rsi]
   14001b818:	outs   dx,BYTE PTR ds:[rsi]
   14001b819:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b81e:	outs   dx,BYTE PTR ds:[rsi]
   14001b81f:	push   rsp
   14001b820:	jns    0x14001b892
   14001b822:	gs rex push rcx
   14001b825:	je     0x14001b867
   14001b827:	rex
   14001b828:	rex pop rdx
   14001b82a:	add    BYTE PTR [rax],al
   14001b82c:	fcom   DWORD PTR [rip+0x7465733f]        # 0x1b4672b71
   14001b832:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b834:	je     0x14001b89b
   14001b836:	jb     0x14001b8ae
   14001b838:	(bad)  
   14001b839:	ins    BYTE PTR es:[rdi],dx
   14001b83a:	rex push rcx
   14001b83c:	push   rsp
   14001b83d:	imul   ebp,DWORD PTR [rbp+0x65],0x51404072
   14001b844:	rex.RB
   14001b845:	rex.B
   14001b846:	pop    r8
   14001b848:	rex.W
   14001b849:	rex pop rdx
   14001b84b:	add    BYTE PTR [rsi+0x16],ch
   14001b84e:	(bad)  
   14001b84f:	jae    0x14001b8b6
   14001b851:	je     0x14001b8a6
   14001b853:	imul   ebp,DWORD PTR [rsi+0x67],0x6853656c
   14001b85a:	outs   dx,DWORD PTR ds:[rsi]
   14001b85b:	je     0x14001b89d
   14001b85d:	push   rcx
   14001b85e:	push   rsp
   14001b85f:	imul   ebp,DWORD PTR [rbp+0x65],0x51404072
   14001b866:	rex.RB
   14001b867:	rex.B
   14001b868:	pop    r8
   14001b86a:	pop    rdi
   14001b86b:	rex.WRX
   14001b86c:	rex pop rdx
   14001b86e:	add    BYTE PTR [rax],al
   14001b870:	rol    BYTE PTR [rcx],1
   14001b872:	(bad)  
   14001b873:	(bad)  
   14001b874:	xor    BYTE PTR [rcx+0x54],dl
   14001b877:	imul   ebp,DWORD PTR [rbp+0x65],0x51404072
   14001b87e:	rex.RB
   14001b87f:	rex.B
   14001b880:	rex.B
   14001b881:	rex push rax
   14001b883:	rex.RB
   14001b884:	push   r14
   14001b886:	push   rcx
   14001b887:	rex.WRXB (bad) 
   14001b889:	push   0x65
   14001b88b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b88f:	rex pop rdx
   14001b891:	add    BYTE PTR [rdi],bl
   14001b893:	(bad)  
   14001b894:	(bad)  
   14001b895:	jae    0x14001b8fc
   14001b897:	je     0x14001b8e9
   14001b899:	(bad)  
   14001b89a:	jb     0x14001b901
   14001b89c:	outs   dx,BYTE PTR ds:[rsi]
   14001b89d:	je     0x14001b8df
   14001b89f:	push   rcx
   14001b8a0:	rex.WRB (bad) 
   14001b8a2:	jo     0x14001b8f2
   14001b8a4:	outs   dx,DWORD PTR ds:[rsi]
   14001b8a5:	fs gs rex.X (bad) 
   14001b8a9:	jae    0x14001b910
   14001b8ab:	rex
   14001b8ac:	rex push rcx
   14001b8ae:	rex.RB
   14001b8af:	rex.B
   14001b8b0:	pop    r8
   14001b8b2:	push   rax
   14001b8b3:	rex.RB
   14001b8b4:	push   r13
   14001b8b6:	xor    DWORD PTR [rax+0x40],eax
   14001b8b9:	pop    rdx
   14001b8ba:	add    BYTE PTR [rax],al
   14001b8bc:	add    rax,0x51593f3f
   14001b8c2:	rex.X jns 0x14001b939
   14001b8c5:	gs rex.B jb 0x14001b93b
   14001b8c9:	(bad)  
   14001b8ca:	jns    0x14001b90c
   14001b8cc:	rex push rcx
   14001b8ce:	rex.RB
   14001b8cf:	rex.B
   14001b8d0:	rex.B
   14001b8d1:	rex.B
   14001b8d2:	rex.RB
   14001b8d3:	push   r14
   14001b8d5:	xor    BYTE PTR [rax+0x50],al
   14001b8d8:	rex.RB
   14001b8d9:	rex.X
   14001b8da:	rex.R
   14001b8db:	rex pop rdx
   14001b8dd:	add    BYTE PTR [rbp+0x5],al
   14001b8e0:	(bad)  
   14001b8e1:	(bad)  
   14001b8e2:	pop    rcx
   14001b8e3:	push   rcx
   14001b8e4:	rex.X jns 0x14001b95b
   14001b8e7:	gs rex.B jb 0x14001b95d
   14001b8eb:	(bad)  
   14001b8ec:	jns    0x14001b92e
   14001b8ee:	rex push rcx
   14001b8f0:	rex.RB
   14001b8f1:	rex.B
   14001b8f2:	rex.B
   14001b8f3:	rex.B
   14001b8f4:	rex.RB
   14001b8f5:	push   r14
   14001b8f7:	xor    BYTE PTR [rax+0x41],al
   14001b8fa:	rex.RB
   14001b8fb:	rex.X push rsi
   14001b8fd:	xor    BYTE PTR [rax+0x40],al
   14001b900:	pop    rdx
   14001b901:	add    BYTE PTR [rsi+0x6f743f18],ah
   14001b907:	rex.WR (bad) 
   14001b909:	je     0x14001b974
   14001b90b:	outs   dx,BYTE PTR ds:[rsi]
   14001b90c:	xor    DWORD PTR [rax+0x51],eax
   14001b90f:	push   rbx
   14001b910:	je     0x14001b984
   14001b912:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b919:	rex.X
   14001b91a:	rex.B (bad) 
   14001b91c:	push   r14
   14001b91e:	push   rcx
   14001b91f:	rex.X jns 0x14001b996
   14001b922:	gs rex.B jb 0x14001b998
   14001b926:	(bad)  
   14001b927:	jns    0x14001b969
   14001b929:	rex pop rax
   14001b92b:	pop    rdx
   14001b92c:	add    BYTE PTR [rax],al
   14001b92e:	xchg   edx,eax
   14001b92f:	add    DWORD PTR [rdi],edi
   14001b931:	(bad)  
   14001b932:	xor    BYTE PTR [rcx+0x53],dl
   14001b935:	je     0x14001b9a9
   14001b937:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b93e:	rex.B
   14001b93f:	rex.B
   14001b940:	rex push rax
   14001b942:	rex.RB
   14001b943:	rex.X
   14001b944:	rex.R
   14001b945:	rex pop rdx
   14001b947:	add    BYTE PTR [rcx],ch
   14001b949:	sbb    DWORD PTR [rdi],edi
   14001b94b:	je     0x14001b9bc
   14001b94d:	push   rbp
   14001b94e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001b950:	je     0x14001b992
   14001b952:	push   rcx
   14001b953:	push   rbx
   14001b954:	je     0x14001b9c8
   14001b956:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b95d:	rex.X
   14001b95e:	rex.B
   14001b95f:	rex.WB push r8
   14001b961:	rex.RB
   14001b962:	pop    r15
   14001b964:	rex.WRX
   14001b965:	rex.W
   14001b966:	rex pop rdx
   14001b968:	add    BYTE PTR [rax],al
   14001b96a:	inc    DWORD PTR [rsi]
   14001b96c:	(bad)  
   14001b96d:	(bad)  
   14001b96e:	je     0x14001b9b0
   14001b970:	push   rcx
   14001b971:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001b979:	rex
   14001b97a:	rex push rcx
   14001b97c:	rex.RB
   14001b97d:	rex.X
   14001b97e:	push   r8
   14001b980:	rex.RB
   14001b981:	push   r8
   14001b983:	rex.RB
   14001b984:	pop    r8
   14001b986:	rex.W
   14001b987:	rex pop rdx
   14001b989:	add    BYTE PTR [rbp+0x0],dl
   14001b98c:	(bad)  
   14001b98d:	(bad)  
   14001b98e:	xor    BYTE PTR [rcx+0x43],dl
   14001b991:	push   0x40407261
   14001b996:	push   rcx
   14001b997:	rex.RB
   14001b998:	rex.B
   14001b999:	rex.B
   14001b99a:	rex
   14001b99b:	rex.W
   14001b99c:	rex pop rdx
   14001b99e:	add    BYTE PTR [rax],al
   14001b9a0:	call   0x1b36af8b2
   14001b9a5:	rex.RB ins DWORD PTR es:[rdi],dx
   14001b9a7:	jo     0x14001ba1d
   14001b9a9:	jns    0x14001b9eb
   14001b9ab:	push   rcx
   14001b9ac:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001b9b4:	rex
   14001b9b5:	rex push rcx
   14001b9b7:	rex.RB
   14001b9b8:	rex.X
   14001b9b9:	pop    r15
   14001b9bb:	rex.WRX pop rax
   14001b9bd:	pop    rdx
   14001b9be:	add    BYTE PTR [rax],al
   14001b9c0:	sub    cl,BYTE PTR [rdi+rdi*1]
   14001b9c3:	data16 jb 0x14001ba35
   14001b9c6:	ins    DWORD PTR es:[rdi],dx
   14001b9c7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b9c9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b9cc:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x6c725551
   14001b9d5:	rex
   14001b9d6:	rex push rbx
   14001b9d8:	rex.B (bad) 
   14001b9da:	push   r14
   14001b9dc:	xor    DWORD PTR [rax+0x41],eax
   14001b9df:	rex.RB
   14001b9e0:	rex.X push rsi
   14001b9e2:	push   rcx
   14001b9e3:	push   rbx
   14001b9e4:	je     0x14001ba58
   14001b9e6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b9ed:	add    dl,ch
   14001b9ef:	(bad)  
   14001b9f0:	(bad)  
   14001b9f1:	(bad)  
   14001b9f2:	jb     0x14001ba5b
   14001b9f4:	rex push rcx
   14001b9f6:	push   rbx
   14001b9f7:	je     0x14001ba6b
   14001b9f9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001ba00:	rex.X
   14001ba01:	rex.B (bad) 
   14001ba03:	push   r14
   14001ba05:	xor    DWORD PTR [rax+0x49],eax
   14001ba08:	rex.W
   14001ba09:	rex.W push rsi
   14001ba0b:	push   rcx
   14001ba0c:	rex.XB push 0x40407261
   14001ba12:	rex pop rdx
   14001ba14:	add    BYTE PTR [rax],al
   14001ba16:	and    cl,BYTE PTR [rdi+rdi*1]
   14001ba19:	data16 jb 0x14001ba8b
   14001ba1c:	ins    DWORD PTR es:[rdi],dx
   14001ba1d:	rex.WR (bad) 
   14001ba1f:	je     0x14001ba8a
   14001ba21:	outs   dx,BYTE PTR ds:[rsi]
   14001ba22:	xor    DWORD PTR [rax+0x51],eax
   14001ba25:	push   rbx
   14001ba26:	je     0x14001ba9a
   14001ba28:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001ba2f:	(bad)  
   14001ba30:	push   r14
   14001ba32:	xor    DWORD PTR [rax+0x50],eax
   14001ba35:	rex.RB
   14001ba36:	rex.X
   14001ba37:	rex.R
   14001ba38:	rex.W
   14001ba39:	rex pop rdx
   14001ba3b:	add    BYTE PTR [rbp+0x313f3f02],bh
   14001ba41:	push   rcx
   14001ba42:	push   rdx
   14001ba43:	gs addr32 jne 0x14001bab3
   14001ba47:	(bad)  
   14001ba48:	jb     0x14001ba8f
   14001ba4a:	js     0x14001babc
   14001ba4c:	jb     0x14001bab3
   14001ba4e:	jae    0x14001bac3
   14001ba50:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14001ba57:	rex.B
   14001ba58:	rex.B
   14001ba59:	rex pop rax
   14001ba5b:	pop    rdx
   14001ba5c:	add    BYTE PTR [rax],al
   14001ba5e:	mov    edi,0x313f3f02
   14001ba63:	push   rcx
   14001ba64:	push   rdx
   14001ba65:	gs addr32 jne 0x14001bad5
   14001ba69:	(bad)  
   14001ba6a:	jb     0x14001bab1
   14001ba6c:	js     0x14001bade
   14001ba6e:	jb     0x14001bad5
   14001ba70:	jae    0x14001bae5
   14001ba72:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001ba79:	push   0x72657449
   14001ba7e:	(bad)  
   14001ba7f:	je     0x14001baf0
   14001ba81:	jb     0x14001bac3
   14001ba83:	rex push rcx
   14001ba85:	rex.RB
   14001ba86:	rex.B
   14001ba87:	rex.B
   14001ba88:	rex pop rax
   14001ba8a:	pop    rdx
   14001ba8b:	add    BYTE PTR [rsi+0x313f3f02],bh
   14001ba91:	push   rcx
   14001ba92:	push   rdx
   14001ba93:	gs addr32 jne 0x14001bb03
   14001ba97:	(bad)  
   14001ba98:	jb     0x14001badf
   14001ba9a:	js     0x14001bb0c
   14001ba9c:	jb     0x14001bb03
   14001ba9e:	jae    0x14001bb13
   14001baa0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001baa7:	push   0x45514040
   14001baac:	rex.B
   14001baad:	rex.B
   14001baae:	rex pop rax
   14001bab0:	pop    rdx
   14001bab1:	add    BYTE PTR [rbx+0x61633f07],ch
   14001bab7:	jo     0x14001bb2d
   14001bab9:	jne    0x14001bb2d
   14001babb:	gs fs rex push rcx
   14001babf:	push   rdx
   14001bac0:	gs addr32 jne 0x14001bb30
   14001bac4:	(bad)  
   14001bac5:	jb     0x14001bb0c
   14001bac7:	js     0x14001bb39
   14001bac9:	jb     0x14001bb30
   14001bacb:	jae    0x14001bb40
   14001bacd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001bad4:	push   0x45514040
   14001bad9:	rex.X
   14001bada:	rex.B (bad) 
   14001badc:	push   r14
   14001bade:	push   rcx
   14001badf:	push   rbx
   14001bae0:	je     0x14001bb54
   14001bae2:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   14001bae9:	pop    rdx
   14001baea:	add    BYTE PTR [rax],al
   14001baec:	xchg   ecx,eax
   14001baed:	adc    BYTE PTR [rdi],bh
   14001baef:	outs   dx,BYTE PTR ds:[rsi]
   14001baf0:	gs js  0x14001bb67
   14001baf3:	rex push rcx
   14001baf5:	push   rdx
   14001baf6:	gs addr32 jne 0x14001bb66
   14001bafa:	(bad)  
   14001bafb:	jb     0x14001bb42
   14001bafd:	js     0x14001bb6f
   14001baff:	jb     0x14001bb66
   14001bb01:	jae    0x14001bb76
   14001bb03:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001bb0a:	push   0x72657449
   14001bb0f:	(bad)  
   14001bb10:	je     0x14001bb81
   14001bb12:	jb     0x14001bb54
   14001bb14:	rex push rcx
   14001bb16:	rex.RB
   14001bb17:	rex.B
   14001bb18:	rex.B (bad) 
   14001bb1a:	push   r14
   14001bb1c:	push   rcx
   14001bb1d:	push   rdx
   14001bb1e:	gs addr32 jne 0x14001bb8e
   14001bb22:	(bad)  
   14001bb23:	jb     0x14001bb6a
   14001bb25:	js     0x14001bb97
   14001bb27:	jb     0x14001bb8e
   14001bb29:	jae    0x14001bb9e
   14001bb2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001bb32:	push   0x5a584040
   14001bb37:	add    BYTE PTR [rbp+0x61683f0c],dh
   14001bb3d:	jae    0x14001bb8d
   14001bb3f:	gs js  0x14001bbb6
   14001bb42:	rex push rcx
   14001bb44:	push   rdx
   14001bb45:	gs addr32 jne 0x14001bbb5
   14001bb49:	(bad)  
   14001bb4a:	jb     0x14001bb91
   14001bb4c:	js     0x14001bbbe
   14001bb4e:	jb     0x14001bbb5
   14001bb50:	jae    0x14001bbc5
   14001bb52:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001bb59:	push   0x72657449
   14001bb5e:	(bad)  
   14001bb5f:	je     0x14001bbd0
   14001bb61:	jb     0x14001bba3
   14001bb63:	rex push rcx
   14001bb65:	rex.RB
   14001bb66:	rex.X
   14001bb67:	pop    r15
   14001bb69:	rex.WRX pop rax
   14001bb6b:	pop    rdx
   14001bb6c:	add    BYTE PTR [rax],al
   14001bb6e:	xchg   BYTE PTR [rdi+rdi*1],cl
   14001bb71:	ins    BYTE PTR es:[edi],dx
   14001bb73:	outs   dx,DWORD PTR ds:[rsi]
   14001bb74:	(bad)
   14001bb79:	je     0x14001bbde
   14001bb7b:	push   0x65525140
   14001bb80:	addr32 jne 0x14001bbef
   14001bb83:	(bad)  
   14001bb84:	jb     0x14001bbcb
   14001bb86:	js     0x14001bbf8
   14001bb88:	jb     0x14001bbef
   14001bb8a:	jae    0x14001bbff
   14001bb8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14001bb93:	rex.X
   14001bb94:	rex.B (bad) 
   14001bb96:	push   r14
   14001bb98:	push   rcx
   14001bb99:	push   rdx
   14001bb9a:	gs addr32 jne 0x14001bc0a
   14001bb9e:	(bad)  
   14001bb9f:	jb     0x14001bbe6
   14001bba1:	js     0x14001bc13
   14001bba3:	jb     0x14001bc0a
   14001bba5:	jae    0x14001bc1a
   14001bba7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001bbae:	push   0x72657449
   14001bbb3:	(bad)  
   14001bbb4:	je     0x14001bc25
   14001bbb6:	jb     0x14001bbf8
   14001bbb8:	rex
   14001bbb9:	rex.B
   14001bbba:	rex.RB
   14001bbbb:	rex.X push rsi
   14001bbbd:	push   rcx
   14001bbbe:	push   rbx
   14001bbbf:	je     0x14001bc33
   14001bbc1:	imul   ebp,DWORD PTR [rsi+0x67],0x57484040
   14001bbc8:	xor    al,0x4d
   14001bbca:	(bad)  
   14001bbcb:	je     0x14001bc30
   14001bbcd:	push   0x65707954
   14001bbd2:	rex xor DWORD PTR [rax+0x56],eax
   14001bbd6:	(bad)  
   14001bbd7:	and    al,0x51
   14001bbd9:	rex.RX ins BYTE PTR es:[rdi],dx
   14001bbdb:	(bad)  
   14001bbdc:	addr32 jae 0x14001bc1f
   14001bbdf:	push   rdi
   14001bbe0:	xor    al,0x4d
   14001bbe2:	(bad)  
   14001bbe3:	je     0x14001bc48
   14001bbe5:	push   0x6974704f
   14001bbea:	outs   dx,DWORD PTR ds:[rsi]
   14001bbeb:	outs   dx,BYTE PTR ds:[rsi]
   14001bbec:	rex push rcx
   14001bbee:	push   rdx
   14001bbef:	gs addr32 jne 0x14001bc5f
   14001bbf3:	(bad)  
   14001bbf4:	jb     0x14001bc3b
   14001bbf6:	js     0x14001bc68
   14001bbf8:	jb     0x14001bc5f
   14001bbfa:	jae    0x14001bc6f
   14001bbfc:	imul   ebp,DWORD PTR [rdi+0x6e],0x40404040
   14001bc03:	rex pop rdx
   14001bc05:	add    BYTE PTR [rbx+0x1],bl
   14001bc08:	(bad)  
   14001bc09:	(bad)  
   14001bc0a:	xor    BYTE PTR [rcx+0x52],dl
   14001bc0d:	gs addr32 jne 0x14001bc7d
   14001bc11:	(bad)  
   14001bc12:	jb     0x14001bc59
   14001bc14:	js     0x14001bc86
   14001bc16:	jb     0x14001bc7d
   14001bc18:	jae    0x14001bc8d
   14001bc1a:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14001bc21:	rex.B
   14001bc22:	rex.B
   14001bc23:	rex
   14001bc24:	rex.B
   14001bc25:	rex.RB
   14001bc26:	rex.X push rsi
   14001bc28:	push   rcx
   14001bc29:	push   rbx
   14001bc2a:	je     0x14001bc9e
   14001bc2c:	imul   ebp,DWORD PTR [rsi+0x67],0x3f564040
   14001bc33:	and    al,0x51
   14001bc35:	rex.RX ins BYTE PTR es:[rdi],dx
   14001bc37:	(bad)  
   14001bc38:	addr32 jae 0x14001bc7b
   14001bc3b:	push   rdi
   14001bc3c:	xor    al,0x50
   14001bc3e:	(bad)  
   14001bc3f:	je     0x14001bcb5
   14001bc41:	gs jb  0x14001bcb2
   14001bc44:	rex.WRXB jo 0x14001bcbb
   14001bc47:	imul   ebp,DWORD PTR [rdi+0x6e],0x65525140
   14001bc4e:	addr32 jne 0x14001bcbd
   14001bc51:	(bad)  
   14001bc52:	jb     0x14001bc99
   14001bc54:	js     0x14001bcc6
   14001bc56:	jb     0x14001bcbd
   14001bc58:	jae    0x14001bccd
   14001bc5a:	imul   ebp,DWORD PTR [rdi+0x6e],0x40404040
   14001bc61:	rex pop rdx
   14001bc63:	add    BYTE PTR [rsi+0x15],dl
   14001bc66:	(bad)  
   14001bc67:	jae    0x14001bcce
   14001bc69:	je     0x14001bcae
   14001bc6b:	jne    0x14001bcdf
   14001bc6d:	jb     0x14001bcd4
   14001bc6f:	outs   dx,BYTE PTR ds:[rsi]
   14001bc70:	je     0x14001bcb2
   14001bc72:	push   rcx
   14001bc73:	imul   r14d,DWORD PTR [rdx+0x40],0x5f415340
   14001bc7b:	rex.WRX
   14001bc7c:	rex.B
   14001bc7d:	rex.RB
   14001bc7e:	rex.X push rsi
   14001bc80:	push   rcx
   14001bc81:	push   rbx
   14001bc82:	je     0x14001bcf6
   14001bc84:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001bc8b:	add    BYTE PTR [rdi+0x61633f07],bl
   14001bc91:	outs   dx,BYTE PTR ds:[rsi]
   14001bc92:	outs   dx,DWORD PTR ds:[rsi]
   14001bc93:	outs   dx,BYTE PTR ds:[rsi]
   14001bc94:	imul   esp,DWORD PTR [rbx+0x61],0x7461506c
   14001bc9b:	push   0x69445140
   14001bca0:	jb     0x14001bce2
   14001bca2:	rex push rcx
   14001bca4:	rex.RB
   14001bca5:	rex.X
   14001bca6:	rex.B (bad) 
   14001bca8:	push   r14
   14001bcaa:	push   rcx
   14001bcab:	push   rbx
   14001bcac:	je     0x14001bd20
   14001bcae:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bcb5:	add    bl,cl
   14001bcb7:	(bad)  
   14001bcb8:	(bad)  
   14001bcb9:	movsxd esp,DWORD PTR [rax+rax*2+0x51]
   14001bcbd:	imul   r14d,DWORD PTR [rdx+0x40],0x41455140
   14001bcc5:	pop    r15
   14001bcc7:	rex.WRX
   14001bcc8:	rex.B
   14001bcc9:	rex.RB
   14001bcca:	rex.X push rsi
   14001bccc:	push   rcx
   14001bccd:	push   rbx
   14001bcce:	je     0x14001bd42
   14001bcd0:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001bcd7:	add    BYTE PTR [rax+0x9],cl
   14001bcda:	(bad)  
   14001bcdb:	movsxd esi,DWORD PTR [rbp+0x72]
   14001bcde:	jb     0x14001bd45
   14001bce0:	outs   dx,BYTE PTR ds:[rsi]
   14001bce1:	je     0x14001bd23
   14001bce3:	push   rcx
   14001bce4:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   14001bcec:	push   r14
   14001bcee:	xor    DWORD PTR [rax+0x58],eax
   14001bcf1:	pop    rdx
   14001bcf2:	add    BYTE PTR [rax],al
   14001bcf4:	(bad)  
   14001bcf5:	or     al,0x3f
   14001bcf7:	data16 jb 0x14001bd69
   14001bcfa:	ins    DWORD PTR es:[rdi],dx
   14001bcfb:	rex.WRX (bad) 
   14001bcfd:	je     0x14001bd68
   14001bcff:	jbe    0x14001bd66
   14001bd01:	push   rbx
   14001bd02:	gs jo  0x14001bd66
   14001bd05:	jb     0x14001bd68
   14001bd07:	je     0x14001bd78
   14001bd09:	jb     0x14001bd7e
   14001bd0b:	rex push rcx
   14001bd0d:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   14001bd15:	push   r14
   14001bd17:	push   rcx
   14001bd18:	push   rbx
   14001bd19:	je     0x14001bd8d
   14001bd1b:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001bd22:	rex.X push rsi
   14001bd24:	xor    al,BYTE PTR [rax+0x40]
   14001bd27:	pop    rdx
   14001bd28:	add    BYTE PTR [rax],al
   14001bd2a:	sub    al,BYTE PTR [rdi]
   14001bd2c:	(bad)  
   14001bd2d:	(bad)  
   14001bd2f:	jae    0x14001bd96
   14001bd31:	rex.WRX (bad) 
   14001bd33:	ins    DWORD PTR es:[rdi],dx
   14001bd34:	gs rex push rcx
   14001bd37:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14001bd40:	rex push rcx
   14001bd42:	rex.RB
   14001bd43:	rex.X
   14001bd44:	rex.B (bad) 
   14001bd46:	push   r14
   14001bd48:	push   rcx
   14001bd49:	push   rbx
   14001bd4a:	je     0x14001bdbe
   14001bd4c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001bd53:	add    dl,dh
   14001bd55:	(bad)  
   14001bd56:	(bad)  
   14001bd57:	(bad)  
   14001bd58:	jb     0x14001bdc1
   14001bd5a:	jne    0x14001bdc9
   14001bd5c:	outs   dx,BYTE PTR gs:[rsi]
   14001bd5e:	je     0x14001bdd3
   14001bd60:	rex push rcx
   14001bd62:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bd64:	jb     0x14001bdcb
   14001bd66:	rex.B jo 0x14001bdd9
   14001bd69:	ins    BYTE PTR es:[rdi],dx
   14001bd6a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001bd71:	rex
   14001bd72:	rex push rbx
   14001bd74:	rex.B (bad) 
   14001bd76:	push   r14
   14001bd78:	push   rcx
   14001bd79:	push   rbx
   14001bd7a:	je     0x14001bdee
   14001bd7c:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001bd83:	rex
   14001bd84:	rex pop rax
   14001bd86:	pop    rdx
   14001bd87:	add    BYTE PTR [rip+0x70713f12],bh        # 0x1b072fc9f
   14001bd8d:	jne    0x14001be03
   14001bd8f:	outs   dx,BYTE PTR gs:[rsi]
   14001bd91:	jbe    0x14001bdd3
   14001bd93:	rex pop rcx
   14001bd95:	pop    r15
   14001bd97:	rex.WRX push rax
   14001bd99:	rex.RB
   14001bd9a:	rex.X
   14001bd9b:	rex.R
   14001bd9c:	rex.B
   14001bd9d:	rex.RB
   14001bd9e:	rex.X push rsi
   14001bda0:	push   rcx
   14001bda1:	rex.X jns 0x14001be18
   14001bda4:	gs rex.B jb 0x14001be1a
   14001bda8:	(bad)  
   14001bda9:	jns    0x14001bdeb
   14001bdab:	rex
   14001bdac:	rex pop rdx
   14001bdae:	add    BYTE PTR [rax],al
   14001bdb0:	add    DWORD PTR [rdi+rdi*1],0x5351383f
   14001bdb7:	je     0x14001be2b
   14001bdb9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001bdc0:	rex.X
   14001bdc1:	pop    r15
   14001bdc3:	rex.WRX push rax
   14001bdc5:	rex.RB
   14001bdc6:	rex.X
   14001bdc7:	rex.R
   14001bdc8:	rex pop rdx
   14001bdca:	add    BYTE PTR [rax],al
   14001bdcc:	sub    BYTE PTR [rdi+rdi*1],cl
   14001bdcf:	data16 jb 0x14001be41
   14001bdd2:	ins    DWORD PTR es:[rdi],dx
   14001bdd3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bdd5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bdd8:	cmp    BYTE PTR [rdx+0x69],al
   14001bddb:	je     0x14001be1d
   14001bddd:	push   rcx
   14001bdde:	push   rbx
   14001bddf:	je     0x14001be53
   14001bde1:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001bde8:	(bad)  
   14001bde9:	push   r14
   14001bdeb:	xor    DWORD PTR [rax+0x50],eax
   14001bdee:	rex.RB
   14001bdef:	rex.X
   14001bdf0:	rex.R
   14001bdf1:	rex.W
   14001bdf2:	rex pop rdx
   14001bdf4:	add    BYTE PTR [rax],al
   14001bdf6:	clc    
   14001bdf7:	adc    DWORD PTR [rdi],edi
   14001bdf9:	jno    0x14001be44
   14001bdfb:	outs   dx,BYTE PTR ds:[rsi]
   14001bdfc:	jae    0x14001be72
   14001bdfe:	(bad)  
   14001bdff:	ins    BYTE PTR es:[rdi],dx
   14001be00:	ins    BYTE PTR es:[rdi],dx
   14001be01:	rex.WRB
   14001be02:	gs jae 0x14001be78
   14001be05:	(bad)  
   14001be06:	addr32 gs rex.W (bad) 
   14001be0a:	outs   dx,BYTE PTR ds:[rsi]
   14001be0b:	fs ins BYTE PTR es:[rdi],dx
   14001be0d:	gs jb  0x14001be50
   14001be10:	rex pop rcx
   14001be12:	push   r8
   14001be14:	ss pop r8
   14001be17:	push   rdi
   14001be18:	xor    al,0x51
   14001be1a:	je     0x14001be69
   14001be1c:	jae    0x14001be85
   14001be1e:	push   rsp
   14001be1f:	jns    0x14001be91
   14001be21:	gs rex
   14001be23:	rex
   14001be24:	rex.B
   14001be25:	rex.RB
   14001be26:	rex.X push rsi
   14001be28:	push   rcx
   14001be29:	rex.WRB
   14001be2a:	gs jae 0x14001bea0
   14001be2d:	(bad)  
   14001be2e:	rex.WR outs dx,DWORD PTR gs:[esi]
   14001be32:	rex.XB outs dx,DWORD PTR ds:[esi]
   14001be35:	outs   dx,BYTE PTR ds:[rsi]
   14001be36:	je     0x14001be9d
   14001be38:	js     0x14001beae
   14001be3a:	rex
   14001be3b:	rex
   14001be3c:	rex.B
   14001be3d:	rex.RB
   14001be3e:	rex.X push rsi
   14001be40:	push   rcx
   14001be41:	push   rbx
   14001be42:	je     0x14001beb6
   14001be44:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001be4b:	push   rax
   14001be4c:	ss pop r8
   14001be4f:	xor    BYTE PTR [rcx],dh
   14001be51:	xor    al,BYTE PTR [rax+0x5a]
   14001be54:	rex pop rdx
   14001be56:	add    BYTE PTR [rax],al
   14001be58:	rex.RX add BYTE PTR [rdi],r15b
   14001be5b:	(bad)  
   14001be5c:	xor    BYTE PTR [rcx+0x42],dl
   14001be5f:	jns    0x14001bed5
   14001be61:	gs rex.B jb 0x14001bed7
   14001be65:	(bad)  
   14001be66:	jns    0x14001bea8
   14001be68:	rex push rcx
   14001be6a:	rex.RB
   14001be6b:	rex.B
   14001be6c:	rex.B
   14001be6d:	rex
   14001be6e:	rex.W
   14001be6f:	rex.R
   14001be70:	rex pop rdx
   14001be72:	add    BYTE PTR [rax],al
   14001be74:	rex.XB add BYTE PTR [r15],dil
   14001be77:	(bad)  
   14001be78:	xor    BYTE PTR [rcx+0x42],dl
   14001be7b:	jne    0x14001bee3
   14001be7d:	data16 gs jb 0x14001bec1
   14001be81:	rex push rcx
   14001be83:	rex.RB
   14001be84:	rex.B
   14001be85:	rex.B
   14001be86:	rex push rax
   14001be88:	rex.RB
   14001be89:	push   r14
   14001be8b:	push   rcx
   14001be8c:	rex.X jns 0x14001bf03
   14001be8f:	gs rex.B jb 0x14001bf05
   14001be93:	(bad)  
   14001be94:	jns    0x14001bed6
   14001be96:	rex push rax
   14001be98:	rex.RB
   14001be99:	push   r14
   14001be9b:	push   rcx
   14001be9c:	rex.WRXB (bad) 
   14001be9e:	push   0x65
   14001bea0:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bea4:	rex pop rdx
   14001bea6:	add    BYTE PTR [rax],al
   14001bea8:	(bad)  
   14001bea9:	(bad)  
   14001beab:	ins    DWORD PTR es:[rdi],dx
   14001beac:	gs je  0x14001bf10
   14001beaf:	rex.WRXB (bad) 
   14001beb1:	push   0x65
   14001beb3:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001beb7:	rex.X jne 0x14001bf20
   14001beba:	data16 gs jb 0x14001befe
   14001bebe:	rex push rbp
   14001bec0:	rex.RB
   14001bec1:	rex.X
   14001bec2:	push   r8
   14001bec4:	rex.RB
   14001bec5:	rex.X push rbp
   14001bec7:	push   rcx
   14001bec8:	rex.WRB
   14001bec9:	gs je  0x14001bf2d
   14001becc:	rex.WRXB (bad) 
   14001bece:	push   0x65
   14001bed0:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bed4:	pop    rax
   14001bed5:	pop    rdx
   14001bed6:	add    BYTE PTR [rax],al
   14001bed8:	movabs ds:0x74656d5f74713f12,al
   14001bee1:	(bad)  
   14001bee2:	movsxd esp,DWORD PTR [rcx+0x73]
   14001bee5:	je     0x14001bf27
   14001bee7:	push   rcx
   14001bee8:	rex.X jne 0x14001bf51
   14001beeb:	data16 gs jb 0x14001bf2f
   14001beef:	rex push rbp
   14001bef1:	rex.RB
   14001bef2:	rex.B
   14001bef3:	push   r8
   14001bef5:	rex.RB
   14001bef6:	pop    r8
   14001bef8:	push   rax
   14001bef9:	rex.RB
   14001befa:	rex.X
   14001befb:	rex.R
   14001befc:	rex pop rdx
   14001befe:	add    BYTE PTR [rax],al
   14001bf00:	data16 adc bh,BYTE PTR [rdi]
   14001bf03:	jno    0x14001bf79
   14001bf05:	pop    rdi
   14001bf06:	ins    DWORD PTR es:[rdi],dx
   14001bf07:	gs je  0x14001bf6b
   14001bf0a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bf0d:	ins    BYTE PTR es:[rdi],dx
   14001bf0e:	rex push rcx
   14001bf10:	rex.X jne 0x14001bf79
   14001bf13:	data16 gs jb 0x14001bf57
   14001bf17:	rex push rbp
   14001bf19:	rex.RB
   14001bf1a:	rex.B
   14001bf1b:	rex.B
   14001bf1c:	rex.W push rdi
   14001bf1e:	xor    al,0x43
   14001bf20:	(bad)  
   14001bf21:	ins    BYTE PTR es:[rdi],dx
   14001bf22:	ins    BYTE PTR es:[rdi],dx
   14001bf23:	rex push rcx
   14001bf25:	rex.WRB
   14001bf26:	gs je  0x14001bf8a
   14001bf29:	rex.WRXB (bad) 
   14001bf2b:	push   0x65
   14001bf2d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bf31:	rex.W push rax
   14001bf33:	rex.RB
   14001bf34:	push   r8
   14001bf36:	rex.RB
   14001bf37:	pop    r8
   14001bf39:	rex pop rdx
   14001bf3b:	add    BYTE PTR [rax+0xb],bl
   14001bf3e:	(bad)  
   14001bf3f:	gs jbe 0x14001bfa7
   14001bf42:	outs   dx,BYTE PTR ds:[rsi]
   14001bf43:	je     0x14001bf85
   14001bf45:	push   rcx
   14001bf46:	rex.WRXB (bad) 
   14001bf48:	push   0x65
   14001bf4a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bf4e:	push   rbp
   14001bf4f:	rex.RB
   14001bf50:	rex.B
   14001bf51:	pop    r15
   14001bf53:	rex.WRX push rax
   14001bf55:	rex.RB
   14001bf56:	push   r14
   14001bf58:	push   rcx
   14001bf59:	rex.RB jbe 0x14001bfc1
   14001bf5c:	outs   dx,BYTE PTR ds:[rsi]
   14001bf5d:	je     0x14001bf9f
   14001bf5f:	rex
   14001bf60:	rex pop rdx
   14001bf62:	add    BYTE PTR [rax],al
   14001bf64:	push   0xb
   14001bf66:	(bad)  
   14001bf67:	gs jbe 0x14001bfcf
   14001bf6a:	outs   dx,BYTE PTR ds:[rsi]
   14001bf6b:	je     0x14001bfb3
   14001bf6d:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x4f514072
   14001bf75:	(bad)  
   14001bf76:	push   0x65
   14001bf78:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bf7c:	push   rbp
   14001bf7d:	rex.RB
   14001bf7e:	rex.B
   14001bf7f:	pop    r15
   14001bf81:	rex.WRX push rax
   14001bf83:	rex.RB
   14001bf84:	push   r14
   14001bf86:	xor    DWORD PTR [rax+0x50],eax
   14001bf89:	rex.RB
   14001bf8a:	push   r14
   14001bf8c:	push   rcx
   14001bf8d:	rex.RB jbe 0x14001bff5
   14001bf90:	outs   dx,BYTE PTR ds:[rsi]
   14001bf91:	je     0x14001bfd3
   14001bf93:	rex
   14001bf94:	rex pop rdx
   14001bf96:	add    BYTE PTR [rax],al
   14001bf98:	rex.WB sbb BYTE PTR [r15],dil
   14001bf9b:	je     0x14001c006
   14001bf9d:	ins    DWORD PTR es:[rdi],dx
   14001bf9e:	gs jb  0x14001bfe6
   14001bfa1:	jbe    0x14001c008
   14001bfa3:	outs   dx,BYTE PTR ds:[rsi]
   14001bfa4:	je     0x14001bfe6
   14001bfa6:	push   rcx
   14001bfa7:	rex.WRXB (bad) 
   14001bfa9:	push   0x65
   14001bfab:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bfaf:	rex.WRB
   14001bfb0:	rex.RB
   14001bfb1:	rex.B
   14001bfb2:	pop    r8
   14001bfb4:	push   rax
   14001bfb5:	rex.RB
   14001bfb6:	push   r14
   14001bfb8:	push   rcx
   14001bfb9:	push   rsp
   14001bfba:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001bfc1:	outs   dx,BYTE PTR ds:[rsi]
   14001bfc2:	je     0x14001c004
   14001bfc4:	rex
   14001bfc5:	rex pop rdx
   14001bfc7:	add    bh,ah
   14001bfc9:	(bad)  
   14001bfca:	(bad)  
   14001bfcb:	movsxd ebp,DWORD PTR [rax+0x69]
   14001bfce:	ins    BYTE PTR es:[rdi],dx
   14001bfcf:	fs rex.RB jbe 0x14001c038
   14001bfd3:	outs   dx,BYTE PTR ds:[rsi]
   14001bfd4:	je     0x14001c016
   14001bfd6:	push   rcx
   14001bfd7:	rex.WRXB (bad) 
   14001bfd9:	push   0x65
   14001bfdb:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001bfdf:	rex.WRB
   14001bfe0:	rex.RB
   14001bfe1:	rex.B
   14001bfe2:	pop    r8
   14001bfe4:	push   rax
   14001bfe5:	rex.RB
   14001bfe6:	push   r14
   14001bfe8:	push   rcx
   14001bfe9:	rex.XB push 0x45646c69
   14001bfef:	jbe    0x14001c056
   14001bff1:	outs   dx,BYTE PTR ds:[rsi]
   14001bff2:	je     0x14001c034
   14001bff4:	rex
   14001bff5:	rex pop rdx
   14001bff7:	add    BYTE PTR [rsi+0x9],ah
   14001bffa:	(bad)  
   14001bffb:	movsxd esi,DWORD PTR [rbp+0x73]
   14001bffe:	je     0x14001c06f
   14001c000:	ins    DWORD PTR es:[rdi],dx
   14001c001:	rex.RB jbe 0x14001c069
   14001c004:	outs   dx,BYTE PTR ds:[rsi]
   14001c005:	je     0x14001c047
   14001c007:	push   rcx
   14001c008:	rex.WRXB (bad) 
   14001c00a:	push   0x65
   14001c00c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c010:	rex.WRB
   14001c011:	rex.RB
   14001c012:	rex.B
   14001c013:	pop    r8
   14001c015:	push   rax
   14001c016:	rex.RB
   14001c017:	push   r14
   14001c019:	push   rcx
   14001c01a:	rex.RB jbe 0x14001c082
   14001c01d:	outs   dx,BYTE PTR ds:[rsi]
   14001c01e:	je     0x14001c060
   14001c020:	rex
   14001c021:	rex pop rdx
   14001c023:	add    BYTE PTR [rbx+0x6f633f08],al
   14001c029:	outs   dx,BYTE PTR ds:[rsi]
   14001c02a:	outs   dx,BYTE PTR ds:[rsi]
   14001c02b:	movsxd esi,DWORD PTR gs:[rsi+rcx*2+0x6f]
   14001c030:	je     0x14001c09b
   14001c032:	data16 jns 0x14001c075
   14001c035:	push   rcx
   14001c036:	rex.X jne 0x14001c09f
   14001c039:	data16 gs jb 0x14001c07d
   14001c03d:	rex
   14001c03e:	rex.WRB
   14001c03f:	rex.RB
   14001c040:	rex.B
   14001c041:	pop    r8
   14001c043:	rex.B
   14001c044:	rex.RB
   14001c045:	rex.X push rsi
   14001c047:	push   rcx
   14001c048:	rex.WRB
   14001c049:	gs je  0x14001c0ad
   14001c04c:	rex.WRB
   14001c04d:	gs je  0x14001c0b8
   14001c050:	outs   dx,DWORD PTR ds:[rsi]
   14001c051:	fs rex
   14001c053:	rex
   14001c054:	rex pop rdx
   14001c056:	add    BYTE PTR [rax],al
   14001c058:	jnp    0x14001c064
   14001c05a:	(bad)  
   14001c05b:	imul   esi,DWORD PTR fs:[rbx+0x63],0x656e6e6f
   14001c063:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   14001c067:	je     0x14001c0d2
   14001c069:	data16 jns 0x14001c0ac
   14001c06c:	push   rcx
   14001c06d:	rex.X jne 0x14001c0d6
   14001c070:	data16 gs jb 0x14001c0b4
   14001c074:	rex
   14001c075:	rex.WRB
   14001c076:	rex.RB
   14001c077:	rex.B
   14001c078:	pop    r8
   14001c07a:	rex.B
   14001c07b:	rex.RB
   14001c07c:	rex.X push rsi
   14001c07e:	push   rcx
   14001c07f:	rex.WRB
   14001c080:	gs je  0x14001c0e4
   14001c083:	rex.WRB
   14001c084:	gs je  0x14001c0ef
   14001c087:	outs   dx,DWORD PTR ds:[rsi]
   14001c088:	fs rex
   14001c08a:	rex
   14001c08b:	rex pop rdx
   14001c08d:	add    BYTE PTR [rdx+0x73693f0e],cl
   14001c093:	push   rbx
   14001c094:	gs jno 0x14001c10c
   14001c097:	outs   dx,BYTE PTR gs:[rsi]
   14001c099:	je     0x14001c104
   14001c09b:	(bad)  
   14001c09c:	ins    BYTE PTR es:[rdi],dx
   14001c09d:	rex push rcx
   14001c09f:	rex.WB
   14001c0a0:	rex.WRXB
   14001c0a1:	rex.R
   14001c0a2:	gs jbe 0x14001c10e
   14001c0a5:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c0a8:	rex push rbp
   14001c0aa:	rex.RB
   14001c0ab:	rex.X
   14001c0ac:	pop    r15
   14001c0ae:	rex.WRX pop rax
   14001c0b0:	pop    rdx
   14001c0b1:	add    dl,ah
   14001c0b3:	adc    BYTE PTR [rdi],bh
   14001c0b5:	outs   dx,DWORD PTR ds:[rsi]
   14001c0b6:	jo     0x14001c11d
   14001c0b8:	outs   dx,BYTE PTR ds:[rsi]
   14001c0b9:	rex push rcx
   14001c0bb:	rex.X jne 0x14001c124
   14001c0be:	data16 gs jb 0x14001c102
   14001c0c2:	rex push rbp
   14001c0c4:	rex.RB
   14001c0c5:	rex.B
   14001c0c6:	pop    r15
   14001c0c8:	rex.WRX push rsi
   14001c0ca:	(bad)  
   14001c0cb:	and    al,0x51
   14001c0cd:	rex.RX ins BYTE PTR es:[rdi],dx
   14001c0cf:	(bad)  
   14001c0d0:	addr32 jae 0x14001c113
   14001c0d3:	push   rdi
   14001c0d4:	xor    al,0x4f
   14001c0d6:	jo     0x14001c13d
   14001c0d8:	outs   dx,BYTE PTR ds:[rsi]
   14001c0d9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001c0db:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14001c0df:	(bad)  
   14001c0e0:	addr32 rex push rcx
   14001c0e3:	rex.WB
   14001c0e4:	rex.WRXB
   14001c0e5:	rex.R
   14001c0e6:	gs jbe 0x14001c152
   14001c0e9:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c0ec:	rex
   14001c0ed:	rex
   14001c0ee:	rex
   14001c0ef:	rex pop rdx
   14001c0f1:	add    BYTE PTR [rbx],ah
   14001c0f3:	or     BYTE PTR [rdi],bh
   14001c0f5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14001c0f9:	gs rex push rcx
   14001c0fc:	rex.X jne 0x14001c165
   14001c0ff:	data16 gs jb 0x14001c143
   14001c103:	rex push rbp
   14001c105:	rex.RB
   14001c106:	rex.B
   14001c107:	pop    r8
   14001c109:	pop    rax
   14001c10a:	pop    rdx
   14001c10b:	add    BYTE PTR [rdx+0x11],dl
   14001c10e:	(bad)  
   14001c10f:	jo     0x14001c180
   14001c111:	jae    0x14001c153
   14001c113:	push   rcx
   14001c114:	rex.X jne 0x14001c17d
   14001c117:	data16 gs jb 0x14001c15b
   14001c11b:	rex push rbp
   14001c11d:	rex.RB
   14001c11e:	rex.X
   14001c11f:	pop    r15
   14001c121:	rex.WX pop rax
   14001c123:	pop    rdx
   14001c124:	add    BYTE PTR [rax],al
   14001c126:	std    
   14001c127:	(bad)  
   14001c128:	(bad)  
   14001c129:	jae    0x14001c194
   14001c12b:	jp     0x14001c192
   14001c12d:	rex push rcx
   14001c12f:	rex.X jne 0x14001c198
   14001c132:	data16 gs jb 0x14001c176
   14001c136:	rex push rbp
   14001c138:	rex.RB
   14001c139:	rex.X
   14001c13a:	pop    r15
   14001c13c:	rex.WX pop rax
   14001c13e:	pop    rdx
   14001c13f:	add    bl,bh
   14001c141:	adc    al,0x3f
   14001c143:	jae    0x14001c1aa
   14001c145:	imul   eax,DWORD PTR gs:[rax+0x51],0x42
   14001c14a:	jne    0x14001c1b2
   14001c14c:	data16 gs jb 0x14001c190
   14001c150:	rex push rbp
   14001c152:	rex.RB
   14001c153:	rex.B
   14001c154:	pop    r15
   14001c156:	rex.WRX pop rdi
   14001c158:	rex.WX
   14001c159:	rex pop rdx
   14001c15b:	add    BYTE PTR [rdi+rax*1],al
   14001c15e:	(bad)  
   14001c15f:	(bad)  
   14001c160:	je     0x14001c1a7
   14001c162:	outs   dx,BYTE PTR ds:[rsi]
   14001c163:	fs rex push rcx
   14001c166:	rex.X jne 0x14001c1cf
   14001c169:	data16 gs jb 0x14001c1ad
   14001c16d:	rex push rbp
   14001c16f:	rex.RB
   14001c170:	rex.X
   14001c171:	pop    r15
   14001c173:	rex.WRX pop rax
   14001c175:	pop    rdx
   14001c176:	add    BYTE PTR [rax],al
   14001c178:	fs adc al,0x3f
   14001c17b:	jb     0x14001c1e2
   14001c17d:	jae    0x14001c1e4
   14001c17f:	je     0x14001c1c1
   14001c181:	push   rcx
   14001c182:	rex.WB
   14001c183:	rex.WRXB
   14001c184:	rex.R
   14001c185:	gs jbe 0x14001c1f1
   14001c188:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c18b:	rex push rbp
   14001c18d:	rex.RB
   14001c18e:	rex.B
   14001c18f:	pop    r15
   14001c191:	rex.WRX pop rax
   14001c193:	pop    rdx
   14001c194:	add    BYTE PTR [rax],al
   14001c196:	ja     0x14001c19f
   14001c198:	(bad)  
   14001c199:	(bad)  
   14001c19a:	jns    0x14001c210
   14001c19c:	gs jae 0x14001c1e0
   14001c19f:	jbe    0x14001c202
   14001c1a1:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x5140656c
   14001c1a9:	rex.WB
   14001c1aa:	rex.WRXB
   14001c1ab:	rex.R
   14001c1ac:	gs jbe 0x14001c218
   14001c1af:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c1b2:	rex push rbp
   14001c1b4:	rex.RB
   14001c1b5:	rex.X
   14001c1b6:	pop    r15
   14001c1b8:	rex.WX pop rax
   14001c1ba:	pop    rdx
   14001c1bb:	add    BYTE PTR [rdi+rax*1+0x3f],bh
   14001c1bf:	(bad)  
   14001c1c0:	jns    0x14001c236
   14001c1c2:	gs jae 0x14001c219
   14001c1c5:	outs   dx,DWORD PTR ds:[rsi]
   14001c1c6:	push   rdi
   14001c1c7:	jb     0x14001c232
   14001c1c9:	je     0x14001c230
   14001c1cb:	rex push rcx
   14001c1cd:	rex.WB
   14001c1ce:	rex.WRXB
   14001c1cf:	rex.R
   14001c1d0:	gs jbe 0x14001c23c
   14001c1d3:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c1d6:	rex push rbp
   14001c1d8:	rex.RB
   14001c1d9:	rex.X
   14001c1da:	pop    r15
   14001c1dc:	rex.WX pop rax
   14001c1de:	pop    rdx
   14001c1df:	add    BYTE PTR [rax+0x61633f07],dl
   14001c1e5:	outs   dx,BYTE PTR ds:[rsi]
   14001c1e6:	push   rdx
   14001c1e7:	gs (bad) 
   14001c1e9:	imul   r13,QWORD PTR fs:[rsi+0x65],0x75425140
   14001c1f2:	data16 data16 gs jb 0x14001c237
   14001c1f7:	rex push rbp
   14001c1f9:	rex.RB
   14001c1fa:	rex.X
   14001c1fb:	pop    r15
   14001c1fd:	rex.WRX pop rax
   14001c1ff:	pop    rdx
   14001c200:	add    BYTE PTR [rax],al
   14001c202:	(bad)
   14001c205:	ja     0x14001c268
   14001c207:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x61655272
   14001c20f:	fs jns 0x14001c264
   14001c212:	gs (bad) 
   14001c214:	fs rex push rcx
   14001c217:	rex.WB
   14001c218:	rex.WRXB
   14001c219:	rex.R
   14001c21a:	gs jbe 0x14001c286
   14001c21d:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c220:	rex push rbp
   14001c222:	rex.RB
   14001c223:	rex.B
   14001c224:	pop    r15
   14001c226:	rex.WRX
   14001c227:	rex.W
   14001c228:	rex pop rdx
   14001c22a:	add    BYTE PTR [rax],al
   14001c22c:	mov    ecx,0x61773f1a
   14001c231:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x74794272
   14001c239:	gs jae 0x14001c293
   14001c23c:	jb     0x14001c2a7
   14001c23e:	je     0x14001c2b4
   14001c240:	outs   dx,BYTE PTR gs:[rsi]
   14001c242:	rex push rcx
   14001c244:	rex.WB
   14001c245:	rex.WRXB
   14001c246:	rex.R
   14001c247:	gs jbe 0x14001c2b3
   14001c24a:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c24d:	rex push rbp
   14001c24f:	rex.RB
   14001c250:	rex.B
   14001c251:	pop    r15
   14001c253:	rex.WRX
   14001c254:	rex.W
   14001c255:	rex pop rdx
   14001c257:	add    BYTE PTR [rbx+rdx*1+0x3f],dl
   14001c25b:	jb     0x14001c2c2
   14001c25d:	(bad)  
   14001c25e:	fs rex.R (bad) 
   14001c261:	je     0x14001c2c4
   14001c263:	rex push rcx
   14001c265:	rex.X jne 0x14001c2ce
   14001c268:	data16 gs jb 0x14001c2ac
   14001c26c:	rex
   14001c26d:	rex.WRB
   14001c26e:	rex.RB
   14001c26f:	rex.B
   14001c270:	pop    r15
   14001c272:	rex.WX push rax
   14001c274:	rex.RB
   14001c275:	rex.B
   14001c276:	rex.R pop rdi
   14001c278:	rex.WX
   14001c279:	rex pop rdx
   14001c27b:	add    BYTE PTR [rax+0x13],ah
   14001c27e:	(bad)  
   14001c27f:	jb     0x14001c2e6
   14001c281:	(bad)  
   14001c282:	imul   r13,QWORD PTR fs:[rsi+0x65],0x61746144
   14001c28b:	rex push rcx
   14001c28d:	rex.WB
   14001c28e:	rex.WRXB
   14001c28f:	rex.R
   14001c290:	gs jbe 0x14001c2fc
   14001c293:	movsxd esp,DWORD PTR [rbp+0x40]
   14001c296:	rex
   14001c297:	rex.WRB
   14001c298:	rex.RB
   14001c299:	rex.B
   14001c29a:	pop    r15
   14001c29c:	rex.WX push rax
   14001c29e:	rex.RB
   14001c29f:	rex.B
   14001c2a0:	rex.R pop rdi
   14001c2a2:	rex.WX
   14001c2a3:	rex pop rdx
   14001c2a5:	add    bh,bh
   14001c2a7:	sbb    bh,BYTE PTR [rdi]
   14001c2a9:	ja     0x14001c31d
   14001c2ab:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x40617461
   14001c2b3:	push   rcx
   14001c2b4:	rex.X jne 0x14001c31d
   14001c2b7:	data16 gs jb 0x14001c2fb
   14001c2bb:	rex
   14001c2bc:	rex.WRB
   14001c2bd:	rex.RB
   14001c2be:	rex.B
   14001c2bf:	pop    r15
   14001c2c1:	rex.WX push rax
   14001c2c3:	rex.RB
   14001c2c4:	rex.X
   14001c2c5:	rex.R pop rdi
   14001c2c7:	rex.WX
   14001c2c8:	rex pop rdx
   14001c2ca:	add    BYTE PTR [rax],al
   14001c2cc:	add    bh,BYTE PTR gs:[rdi]
   14001c2cf:	(bad)  
   14001c2d0:	xor    DWORD PTR [rcx+0x42],edx
   14001c2d3:	jne    0x14001c33b
   14001c2d5:	data16 gs jb 0x14001c319
   14001c2d9:	rex push rbp
   14001c2db:	rex.RB
   14001c2dc:	rex.B
   14001c2dd:	rex.B
   14001c2de:	rex pop rax
   14001c2e0:	pop    rdx
   14001c2e1:	add    BYTE PTR [rax],cl
   14001c2e3:	sbb    bh,BYTE PTR [rdi]
   14001c2e5:	je     0x14001c359
   14001c2e7:	imul   ebp,DWORD PTR [rbp+0x6d],0x51406465
   14001c2ee:	rex.X jns 0x14001c365
   14001c2f1:	gs rex.B jb 0x14001c367
   14001c2f5:	(bad)  
   14001c2f6:	jns    0x14001c338
   14001c2f8:	rex push rcx
   14001c2fa:	rex.RB
   14001c2fb:	rex.X
   14001c2fc:	rex.B (bad) 
   14001c2fe:	push   r14
   14001c300:	xor    DWORD PTR [rax+0x58],eax
   14001c303:	pop    rdx
   14001c304:	add    BYTE PTR [rax],al
   14001c306:	(bad)  
   14001c307:	(bad)  
   14001c308:	(bad)  
   14001c309:	(bad)  
   14001c30a:	jo     0x14001c37c
   14001c30c:	outs   dx,BYTE PTR gs:[rsi]
   14001c30e:	fs rex push rcx
   14001c311:	push   rbx
   14001c312:	je     0x14001c386
   14001c314:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c31b:	rex.B
   14001c31c:	rex.B
   14001c31d:	rex.B
   14001c31e:	rex.RB
   14001c31f:	push   r14
   14001c321:	xor    DWORD PTR [rax+0x56],eax
   14001c324:	push   rcx
   14001c325:	rex.WR (bad) 
   14001c327:	je     0x14001c392
   14001c329:	outs   dx,BYTE PTR ds:[rsi]
   14001c32a:	xor    DWORD PTR [rbx+0x74],edx
   14001c32d:	jb     0x14001c398
   14001c32f:	outs   dx,BYTE PTR ds:[rsi]
   14001c330:	addr32 rex
   14001c332:	rex
   14001c333:	rex pop rdx
   14001c335:	add    al,cl
   14001c337:	(bad)  
   14001c338:	(bad)  
   14001c339:	(bad)  
   14001c33a:	jo     0x14001c3ac
   14001c33c:	outs   dx,BYTE PTR gs:[rsi]
   14001c33e:	fs rex push rcx
   14001c341:	push   rbx
   14001c342:	je     0x14001c3b6
   14001c344:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c34b:	rex.B
   14001c34c:	rex.B
   14001c34d:	rex.B
   14001c34e:	rex.RB
   14001c34f:	push   r14
   14001c351:	xor    DWORD PTR [rax+0x41],eax
   14001c354:	rex.RB
   14001c355:	rex.X push rsi
   14001c357:	xor    DWORD PTR [rax+0x40],eax
   14001c35a:	pop    rdx
   14001c35b:	add    BYTE PTR [rsi+0x61633f07],dh
   14001c361:	jo     0x14001c3d7
   14001c363:	jne    0x14001c3d7
   14001c365:	gs fs push rsp
   14001c368:	gs js  0x14001c3df
   14001c36b:	jae    0x14001c3ad
   14001c36d:	push   rcx
   14001c36e:	push   rdx
   14001c36f:	gs addr32 jne 0x14001c3df
   14001c373:	(bad)  
   14001c374:	jb     0x14001c3bb
   14001c376:	js     0x14001c3e8
   14001c378:	jb     0x14001c3df
   14001c37a:	jae    0x14001c3ef
   14001c37c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001c383:	push   0x45514040
   14001c388:	rex.X
   14001c389:	rex.B (bad) 
   14001c38b:	push   r14
   14001c38d:	push   rcx
   14001c38e:	push   rbx
   14001c38f:	je     0x14001c403
   14001c391:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001c398:	rex
   14001c399:	rex pop rax
   14001c39b:	pop    rdx
   14001c39c:	add    BYTE PTR [rax],al
   14001c39e:	sbb    al,0xf
   14001c3a0:	(bad)  
   14001c3a1:	ins    BYTE PTR es:[rdi],dx
   14001c3a2:	(bad)  
   14001c3a3:	jae    0x14001c419
   14001c3a5:	rex.XB (bad) 
   14001c3a7:	jo     0x14001c41d
   14001c3a9:	jne    0x14001c41d
   14001c3ab:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
   14001c3af:	fs gs js 0x14001c3f3
   14001c3b3:	push   rcx
   14001c3b4:	push   rdx
   14001c3b5:	gs addr32 jne 0x14001c425
   14001c3b9:	(bad)  
   14001c3ba:	jb     0x14001c401
   14001c3bc:	js     0x14001c42e
   14001c3be:	jb     0x14001c425
   14001c3c0:	jae    0x14001c435
   14001c3c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001c3c9:	push   0x45514040
   14001c3ce:	rex.X
   14001c3cf:	rex.B
   14001c3d0:	rex.W pop rax
   14001c3d2:	pop    rdx
   14001c3d3:	add    BYTE PTR [rdi+rcx*1+0x74616d3f],ch
   14001c3da:	movsxd ebp,DWORD PTR [rax+0x40]
   14001c3dd:	push   rcx
   14001c3de:	push   rdx
   14001c3df:	gs addr32 jne 0x14001c44f
   14001c3e3:	(bad)  
   14001c3e4:	jb     0x14001c42b
   14001c3e6:	js     0x14001c458
   14001c3e8:	jb     0x14001c44f
   14001c3ea:	jae    0x14001c45f
   14001c3ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14001c3f3:	rex.X
   14001c3f4:	rex.B (bad) 
   14001c3f6:	push   r14
   14001c3f8:	push   rcx
   14001c3f9:	push   rdx
   14001c3fa:	gs addr32 jne 0x14001c46a
   14001c3fe:	(bad)  
   14001c3ff:	jb     0x14001c446
   14001c401:	js     0x14001c473
   14001c403:	jb     0x14001c46a
   14001c405:	jae    0x14001c47a
   14001c407:	imul   ebp,DWORD PTR [rdi+0x6e],0x6374614d
   14001c40e:	push   0x45414040
   14001c413:	rex.X push rsi
   14001c415:	push   rcx
   14001c416:	push   rbx
   14001c417:	je     0x14001c48b
   14001c419:	imul   ebp,DWORD PTR [rsi+0x67],0x57484040
   14001c420:	xor    al,0x4d
   14001c422:	(bad)  
   14001c423:	je     0x14001c488
   14001c425:	push   0x65707954
   14001c42a:	rex xor DWORD PTR [rax+0x56],eax
   14001c42e:	(bad)  
   14001c42f:	and    al,0x51
   14001c431:	rex.RX ins BYTE PTR es:[rdi],dx
   14001c433:	(bad)  
   14001c434:	addr32 jae 0x14001c477
   14001c437:	push   rdi
   14001c438:	xor    al,0x4d
   14001c43a:	(bad)  
   14001c43b:	je     0x14001c4a0
   14001c43d:	push   0x6974704f
   14001c442:	outs   dx,DWORD PTR ds:[rsi]
   14001c443:	outs   dx,BYTE PTR ds:[rsi]
   14001c444:	rex push rcx
   14001c446:	push   rdx
   14001c447:	gs addr32 jne 0x14001c4b7
   14001c44b:	(bad)  
   14001c44c:	jb     0x14001c493
   14001c44e:	js     0x14001c4c0
   14001c450:	jb     0x14001c4b7
   14001c452:	jae    0x14001c4c7
   14001c454:	imul   ebp,DWORD PTR [rdi+0x6e],0x40404040
   14001c45b:	rex pop rdx
   14001c45d:	add    BYTE PTR [rdi+0xb],bh
   14001c460:	(bad)  
   14001c461:	gs js  0x14001c4cd
   14001c464:	jae    0x14001c4da
   14001c466:	jae    0x14001c4a8
   14001c468:	push   rcx
   14001c469:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14001c472:	rex push rcx
   14001c474:	rex.RB
   14001c475:	rex.X
   14001c476:	pop    r15
   14001c478:	rex.WRX pop rax
   14001c47a:	pop    rdx
   14001c47b:	add    BYTE PTR [rcx+0x74],dl
   14001c47e:	xor    eax,0x65726f43
   14001c483:	cs fs ins BYTE PTR es:[rdi],dx
   14001c486:	ins    BYTE PTR es:[rdi],dx
   14001c487:	add    BYTE PTR [rbp+0x5],bl
   14001c48a:	(bad)  
   14001c48b:	pop    rdi
   14001c48c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001c48e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001c491:	pop    rdi
   14001c492:	rex.WRB jne 0x14001c509
   14001c495:	gs js  0x14001c4d8
   14001c498:	jae    0x14001c50e
   14001c49a:	fs rex
   14001c49c:	rex push rcx
   14001c49e:	rex.RB
   14001c49f:	rex.B
   14001c4a0:	pop    r8
   14001c4a2:	pop    rax
   14001c4a3:	pop    rdx
   14001c4a4:	add    BYTE PTR [rax],al
   14001c4a6:	loopne 0x14001c4ad
   14001c4a8:	(bad)  
   14001c4a9:	pop    rdi
   14001c4aa:	push   rbp
   14001c4ab:	outs   dx,BYTE PTR ds:[rsi]
   14001c4ac:	ins    BYTE PTR es:[rdi],dx
   14001c4ad:	outs   dx,DWORD PTR ds:[rsi]
   14001c4ae:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001c4b1:	pop    rdi
   14001c4b2:	rex.WRB jne 0x14001c529
   14001c4b5:	gs js  0x14001c4f8
   14001c4b8:	jae    0x14001c52e
   14001c4ba:	fs rex
   14001c4bc:	rex push rcx
   14001c4be:	rex.RB
   14001c4bf:	rex.B
   14001c4c0:	pop    r8
   14001c4c2:	pop    rax
   14001c4c3:	pop    rdx
   14001c4c4:	add    BYTE PTR [rax],al
   14001c4c6:	(bad)  
   14001c4c7:	or     BYTE PTR [rdi],bh
   14001c4c9:	data16 ins BYTE PTR es:[rdi],dx
   14001c4cb:	jne    0x14001c540
   14001c4cd:	push   0x62243f40
   14001c4d2:	(bad)  
   14001c4d3:	jae    0x14001c53e
   14001c4d5:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c4d8:	jae    0x14001c54e
   14001c4da:	jb     0x14001c541
   14001c4dc:	(bad)  
   14001c4dd:	ins    DWORD PTR es:[rdi],dx
   14001c4de:	rex
   14001c4df:	rex.R push rbp
   14001c4e1:	(bad)  
   14001c4e2:	and    al,0x63
   14001c4e4:	push   0x745f7261
   14001c4e9:	jb     0x14001c54c
   14001c4eb:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c4f3:	fs rex
   14001c4f5:	rex
   14001c4f6:	rex jae 0x14001c56d
   14001c4f9:	fs rex
   14001c4fb:	rex push rcx
   14001c4fd:	rex.RB
   14001c4fe:	rex.B
   14001c4ff:	rex.B
   14001c500:	rex.B
   14001c501:	rex.RB
   14001c502:	push   r14
   14001c504:	xor    DWORD PTR [rdx],esi
   14001c506:	rex pop rax
   14001c508:	pop    rdx
   14001c509:	add    BYTE PTR [rsi+0x4f5f3f05],al
   14001c50f:	jae    0x14001c577
   14001c511:	js     0x14001c553
   14001c513:	(bad)  
   14001c514:	and    al,0x62
   14001c516:	(bad)  
   14001c517:	jae    0x14001c582
   14001c519:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c51c:	jae    0x14001c592
   14001c51e:	jb     0x14001c585
   14001c520:	(bad)  
   14001c521:	ins    DWORD PTR es:[rdi],dx
   14001c522:	rex
   14001c523:	rex.R push rbp
   14001c525:	(bad)  
   14001c526:	and    al,0x63
   14001c528:	push   0x745f7261
   14001c52d:	jb     0x14001c590
   14001c52f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c537:	fs rex
   14001c539:	rex
   14001c53a:	rex jae 0x14001c5b1
   14001c53d:	fs rex
   14001c53f:	rex push rcx
   14001c541:	rex.RB
   14001c542:	rex.B
   14001c543:	pop    r8
   14001c545:	pop    rax
   14001c546:	pop    rdx
   14001c547:	add    dl,bh
   14001c549:	or     edi,DWORD PTR [rdi]
   14001c54b:	jne    0x14001c5bb
   14001c54d:	movsxd esp,DWORD PTR [rcx+0x75]
   14001c550:	addr32 push 0x78655f74
   14001c556:	movsxd esp,DWORD PTR [rbp+0x70]
   14001c559:	je     0x14001c5c4
   14001c55b:	outs   dx,DWORD PTR ds:[rsi]
   14001c55c:	outs   dx,BYTE PTR ds:[rsi]
   14001c55d:	rex jae 0x14001c5d4
   14001c560:	fs rex
   14001c562:	rex pop rcx
   14001c564:	pop    r15
   14001c566:	rex.WRX pop rax
   14001c568:	pop    rdx
   14001c569:	add    BYTE PTR [rcx],bh
   14001c56b:	or     BYTE PTR [rdi],bh
   14001c56d:	data16 ins BYTE PTR es:[rdi],dx
   14001c56f:	jne    0x14001c5e4
   14001c571:	push   0x62243f40
   14001c576:	(bad)  
   14001c577:	jae    0x14001c5e2
   14001c579:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c57c:	jae    0x14001c5f2
   14001c57e:	jb     0x14001c5e5
   14001c580:	(bad)  
   14001c581:	ins    DWORD PTR es:[rdi],dx
   14001c582:	rex pop rdi
   14001c584:	push   rdi
   14001c585:	push   rbp
   14001c586:	(bad)  
   14001c587:	and    al,0x63
   14001c589:	push   0x745f7261
   14001c58e:	jb     0x14001c5f1
   14001c590:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c598:	je     0x14001c5fe
   14001c59a:	rex
   14001c59b:	rex
   14001c59c:	rex jae 0x14001c613
   14001c59f:	fs rex
   14001c5a1:	rex push rcx
   14001c5a3:	rex.RB
   14001c5a4:	rex.B
   14001c5a5:	rex.B
   14001c5a6:	rex.B
   14001c5a7:	rex.RB
   14001c5a8:	push   r14
   14001c5aa:	xor    DWORD PTR [rdx],esi
   14001c5ac:	rex pop rax
   14001c5ae:	pop    rdx
   14001c5af:	add    BYTE PTR [rax+0x4f5f3f05],cl
   14001c5b5:	jae    0x14001c61d
   14001c5b7:	js     0x14001c5f9
   14001c5b9:	(bad)  
   14001c5ba:	and    al,0x62
   14001c5bc:	(bad)  
   14001c5bd:	jae    0x14001c628
   14001c5bf:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c5c2:	jae    0x14001c638
   14001c5c4:	jb     0x14001c62b
   14001c5c6:	(bad)  
   14001c5c7:	ins    DWORD PTR es:[rdi],dx
   14001c5c8:	rex pop rdi
   14001c5ca:	push   rdi
   14001c5cb:	push   rbp
   14001c5cc:	(bad)  
   14001c5cd:	and    al,0x63
   14001c5cf:	push   0x745f7261
   14001c5d4:	jb     0x14001c637
   14001c5d6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c5de:	je     0x14001c644
   14001c5e0:	rex
   14001c5e1:	rex
   14001c5e2:	rex jae 0x14001c659
   14001c5e5:	fs rex
   14001c5e7:	rex push rcx
   14001c5e9:	rex.RB
   14001c5ea:	rex.B
   14001c5eb:	pop    r8
   14001c5ed:	pop    rax
   14001c5ee:	pop    rdx
   14001c5ef:	add    BYTE PTR [rdx+0xb],bl
   14001c5f2:	(bad)  
   14001c5f3:	jae    0x14001c65a
   14001c5f5:	je     0x14001c66a
   14001c5f7:	je     0x14001c65a
   14001c5f9:	je     0x14001c660
   14001c5fb:	rex (bad) 
   14001c5fd:	and    al,0x62
   14001c5ff:	(bad)  
   14001c600:	jae    0x14001c66b
   14001c602:	movsxd ebx,DWORD PTR [rdi+0x69]
   14001c605:	outs   dx,DWORD PTR ds:[rsi]
   14001c606:	jae    0x14001c648
   14001c608:	rex.R push rbp
   14001c60a:	(bad)  
   14001c60b:	and    al,0x63
   14001c60d:	push   0x745f7261
   14001c612:	jb     0x14001c675
   14001c614:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c61c:	fs rex
   14001c61e:	rex
   14001c61f:	rex jae 0x14001c696
   14001c622:	fs rex
   14001c624:	rex push rcx
   14001c626:	rex.RB
   14001c627:	rex.B
   14001c628:	pop    r8
   14001c62a:	rex.W pop rdi
   14001c62c:	rex.WRX
   14001c62d:	rex pop rdx
   14001c62f:	add    BYTE PTR [rbx+rcx*1+0x7570733f],cl
   14001c636:	je     0x14001c6a6
   14001c638:	rex (bad) 
   14001c63a:	and    al,0x62
   14001c63c:	(bad)  
   14001c63d:	jae    0x14001c6a8
   14001c63f:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001c642:	je     0x14001c6b6
   14001c644:	gs (bad) 
   14001c646:	ins    DWORD PTR es:[rdi],dx
   14001c647:	(bad)  
   14001c648:	jne    0x14001c6b0
   14001c64a:	rex
   14001c64b:	rex.R push rbp
   14001c64d:	(bad)  
   14001c64e:	and    al,0x63
   14001c650:	push   0x745f7261
   14001c655:	jb     0x14001c6b8
   14001c657:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c65f:	fs rex
   14001c661:	rex
   14001c662:	rex jae 0x14001c6d9
   14001c665:	fs rex
   14001c667:	rex push rcx
   14001c669:	rex.RB
   14001c66a:	rex.B
   14001c66b:	pop    r15
   14001c66d:	rex.WX push rax
   14001c66f:	rex.RB
   14001c670:	rex.X
   14001c671:	rex.R pop rdi
   14001c673:	rex.WX
   14001c674:	rex pop rdx
   14001c676:	add    BYTE PTR [rax],al
   14001c678:	mov    DWORD PTR [rbx],ecx
   14001c67a:	(bad)  
   14001c67b:	jae    0x14001c6ed
   14001c67d:	jne    0x14001c6f3
   14001c67f:	movsxd eax,DWORD PTR [rax+0x3f]
   14001c682:	and    al,0x62
   14001c684:	(bad)  
   14001c685:	jae    0x14001c6f0
   14001c687:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001c68a:	je     0x14001c6fe
   14001c68c:	gs (bad) 
   14001c68e:	ins    DWORD PTR es:[rdi],dx
   14001c68f:	(bad)  
   14001c690:	jne    0x14001c6f8
   14001c692:	rex
   14001c693:	rex.R push rbp
   14001c695:	(bad)  
   14001c696:	and    al,0x63
   14001c698:	push   0x745f7261
   14001c69d:	jb     0x14001c700
   14001c69f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c6a7:	fs rex
   14001c6a9:	rex
   14001c6aa:	rex jae 0x14001c721
   14001c6ad:	fs rex
   14001c6af:	rex push rcx
   14001c6b1:	rex.RB
   14001c6b2:	rex.B
   14001c6b3:	rex.B
   14001c6b4:	rex.W
   14001c6b5:	rex.R
   14001c6b6:	rex pop rdx
   14001c6b8:	add    BYTE PTR [rax],al
   14001c6ba:	pop    rsi
   14001c6bb:	or     edi,DWORD PTR [rdi]
   14001c6bd:	jae    0x14001c724
   14001c6bf:	je     0x14001c734
   14001c6c1:	je     0x14001c724
   14001c6c3:	je     0x14001c72a
   14001c6c5:	rex (bad) 
   14001c6c7:	and    al,0x62
   14001c6c9:	(bad)  
   14001c6ca:	jae    0x14001c735
   14001c6cc:	movsxd ebx,DWORD PTR [rdi+0x69]
   14001c6cf:	outs   dx,DWORD PTR ds:[rsi]
   14001c6d0:	jae    0x14001c712
   14001c6d2:	pop    rdi
   14001c6d3:	push   rdi
   14001c6d4:	push   rbp
   14001c6d5:	(bad)  
   14001c6d6:	and    al,0x63
   14001c6d8:	push   0x745f7261
   14001c6dd:	jb     0x14001c740
   14001c6df:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c6e7:	je     0x14001c74d
   14001c6e9:	rex
   14001c6ea:	rex
   14001c6eb:	rex jae 0x14001c762
   14001c6ee:	fs rex
   14001c6f0:	rex push rcx
   14001c6f2:	rex.RB
   14001c6f3:	rex.B
   14001c6f4:	pop    r8
   14001c6f6:	rex.W pop rdi
   14001c6f8:	rex.WRX
   14001c6f9:	rex pop rdx
   14001c6fb:	add    BYTE PTR [rsi+0x70733f0b],cl
   14001c701:	jne    0x14001c777
   14001c703:	outs   dx,BYTE PTR ds:[rsi]
   14001c704:	rex (bad) 
   14001c706:	and    al,0x62
   14001c708:	(bad)  
   14001c709:	jae    0x14001c774
   14001c70b:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001c70e:	je     0x14001c782
   14001c710:	gs (bad) 
   14001c712:	ins    DWORD PTR es:[rdi],dx
   14001c713:	(bad)  
   14001c714:	jne    0x14001c77c
   14001c716:	rex pop rdi
   14001c718:	push   rdi
   14001c719:	push   rbp
   14001c71a:	(bad)  
   14001c71b:	and    al,0x63
   14001c71d:	push   0x745f7261
   14001c722:	jb     0x14001c785
   14001c724:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c72c:	je     0x14001c792
   14001c72e:	rex
   14001c72f:	rex
   14001c730:	rex jae 0x14001c7a7
   14001c733:	fs rex
   14001c735:	rex push rcx
   14001c737:	rex.RB
   14001c738:	rex.B
   14001c739:	pop    r15
   14001c73b:	rex.WX push rax
   14001c73d:	rex.RB
   14001c73e:	rex.X pop rdi
   14001c740:	push   rdi
   14001c741:	pop    rdi
   14001c742:	rex.WX
   14001c743:	rex pop rdx
   14001c745:	add    BYTE PTR [rbx+0x70733f0b],cl
   14001c74b:	jne    0x14001c7c1
   14001c74d:	movsxd eax,DWORD PTR [rax+0x3f]
   14001c750:	and    al,0x62
   14001c752:	(bad)  
   14001c753:	jae    0x14001c7be
   14001c755:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001c758:	je     0x14001c7cc
   14001c75a:	gs (bad) 
   14001c75c:	ins    DWORD PTR es:[rdi],dx
   14001c75d:	(bad)  
   14001c75e:	jne    0x14001c7c6
   14001c760:	rex pop rdi
   14001c762:	push   rdi
   14001c763:	push   rbp
   14001c764:	(bad)  
   14001c765:	and    al,0x63
   14001c767:	push   0x745f7261
   14001c76c:	jb     0x14001c7cf
   14001c76e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c776:	je     0x14001c7dc
   14001c778:	rex
   14001c779:	rex
   14001c77a:	rex jae 0x14001c7f1
   14001c77d:	fs rex
   14001c77f:	rex push rcx
   14001c781:	rex.RB
   14001c782:	rex.B
   14001c783:	rex.B
   14001c784:	rex.RXB pop r15
   14001c786:	push   rdi
   14001c787:	rex pop rdx
   14001c789:	add    BYTE PTR [rip+0x363f3f03],bl        # 0x176410692
   14001c78f:	(bad)  
   14001c790:	and    al,0x62
   14001c792:	(bad)  
   14001c793:	jae    0x14001c7fe
   14001c795:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c798:	jae    0x14001c80e
   14001c79a:	jb     0x14001c801
   14001c79c:	(bad)  
   14001c79d:	ins    DWORD PTR es:[rdi],dx
   14001c79e:	rex
   14001c79f:	rex.R push rbp
   14001c7a1:	(bad)  
   14001c7a2:	and    al,0x63
   14001c7a4:	push   0x745f7261
   14001c7a9:	jb     0x14001c80c
   14001c7ab:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c7b3:	fs rex
   14001c7b5:	rex
   14001c7b6:	rex jae 0x14001c82d
   14001c7b9:	fs rex
   14001c7bb:	rex push rcx
   14001c7bd:	rex.RB
   14001c7be:	rex.B
   14001c7bf:	rex.B
   14001c7c0:	rex.B
   14001c7c1:	rex.RB
   14001c7c2:	push   r14
   14001c7c4:	xor    BYTE PTR [rcx],dh
   14001c7c6:	rex push rax
   14001c7c8:	ss rex.B
   14001c7ca:	rex.B
   14001c7cb:	rex.RB
   14001c7cc:	push   r14
   14001c7ce:	xor    BYTE PTR [rcx],dh
   14001c7d0:	rex
   14001c7d1:	rex.B
   14001c7d2:	rex.RB
   14001c7d3:	push   r14
   14001c7d5:	xor    BYTE PTR [rcx],dh
   14001c7d7:	rex
   14001c7d8:	rex pop rdx
   14001c7da:	rex pop rdx
   14001c7dc:	add    BYTE PTR [rax],al
   14001c7de:	mov    edx,0x6e653f07
   14001c7e3:	fs ins BYTE PTR es:[rdi],dx
   14001c7e5:	rex jae 0x14001c85c
   14001c7e8:	fs rex
   14001c7ea:	rex pop rcx
   14001c7ec:	rex.B
   14001c7ed:	rex.B
   14001c7ee:	rex.RB
   14001c7ef:	push   r14
   14001c7f1:	(bad)  
   14001c7f2:	and    al,0x62
   14001c7f4:	(bad)  
   14001c7f5:	jae    0x14001c860
   14001c7f7:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c7fa:	jae    0x14001c870
   14001c7fc:	jb     0x14001c863
   14001c7fe:	(bad)  
   14001c7ff:	ins    DWORD PTR es:[rdi],dx
   14001c800:	rex
   14001c801:	rex.R push rbp
   14001c803:	(bad)  
   14001c804:	and    al,0x63
   14001c806:	push   0x745f7261
   14001c80b:	jb     0x14001c86e
   14001c80d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c815:	fs rex
   14001c817:	rex
   14001c818:	rex xor DWORD PTR [rax+0x41],eax
   14001c81c:	rex.RB
   14001c81d:	push   r14
   14001c81f:	xor    dh,BYTE PTR [rcx]
   14001c821:	rex
   14001c822:	rex pop rdx
   14001c824:	add    BYTE PTR [rax],al
   14001c826:	push   rax
   14001c827:	(bad)  
   14001c828:	(bad)  
   14001c829:	movsxd esp,DWORD PTR [rbp+0x72]
   14001c82c:	jb     0x14001c86e
   14001c82e:	jae    0x14001c8a4
   14001c830:	fs rex
   14001c832:	rex xor edx,DWORD PTR [rsi+0x3f]
   14001c836:	and    al,0x62
   14001c838:	(bad)  
   14001c839:	jae    0x14001c8a4
   14001c83b:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c83e:	jae    0x14001c8b4
   14001c840:	jb     0x14001c8a7
   14001c842:	(bad)  
   14001c843:	ins    DWORD PTR es:[rdi],dx
   14001c844:	rex
   14001c845:	rex.R push rbp
   14001c847:	(bad)  
   14001c848:	and    al,0x63
   14001c84a:	push   0x745f7261
   14001c84f:	jb     0x14001c8b2
   14001c851:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c859:	fs rex
   14001c85b:	rex
   14001c85c:	rex xor DWORD PTR [rax+0x41],eax
   14001c860:	add    BYTE PTR [rax],al
   14001c862:	(bad)  
   14001c863:	add    edi,DWORD PTR [rdi]
   14001c865:	(bad)  
   14001c866:	ss (bad) 
   14001c868:	and    al,0x62
   14001c86a:	(bad)  
   14001c86b:	jae    0x14001c8d6
   14001c86d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c870:	jae    0x14001c8e6
   14001c872:	jb     0x14001c8d9
   14001c874:	(bad)  
   14001c875:	ins    DWORD PTR es:[rdi],dx
   14001c876:	rex pop rdi
   14001c878:	push   rdi
   14001c879:	push   rbp
   14001c87a:	(bad)  
   14001c87b:	and    al,0x63
   14001c87d:	push   0x745f7261
   14001c882:	jb     0x14001c8e5
   14001c884:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c88c:	je     0x14001c8f2
   14001c88e:	rex
   14001c88f:	rex
   14001c890:	rex jae 0x14001c907
   14001c893:	fs rex
   14001c895:	rex push rcx
   14001c897:	rex.RB
   14001c898:	rex.B
   14001c899:	rex.B
   14001c89a:	rex.B
   14001c89b:	rex.RB
   14001c89c:	push   r14
   14001c89e:	xor    BYTE PTR [rcx],dh
   14001c8a0:	rex push rax
   14001c8a2:	ss rex.B
   14001c8a4:	rex.B
   14001c8a5:	rex.RB
   14001c8a6:	push   r14
   14001c8a8:	xor    BYTE PTR [rcx],dh
   14001c8aa:	rex
   14001c8ab:	rex.B
   14001c8ac:	rex.RB
   14001c8ad:	push   r14
   14001c8af:	xor    BYTE PTR [rcx],dh
   14001c8b1:	rex
   14001c8b2:	rex pop rdx
   14001c8b4:	rex pop rdx
   14001c8b6:	add    BYTE PTR [rax],al
   14001c8b8:	mov    esp,0x6e653f07
   14001c8bd:	fs ins BYTE PTR es:[rdi],dx
   14001c8bf:	rex jae 0x14001c936
   14001c8c2:	fs rex
   14001c8c4:	rex pop rcx
   14001c8c6:	rex.B
   14001c8c7:	rex.B
   14001c8c8:	rex.RB
   14001c8c9:	push   r14
   14001c8cb:	(bad)  
   14001c8cc:	and    al,0x62
   14001c8ce:	(bad)  
   14001c8cf:	jae    0x14001c93a
   14001c8d1:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c8d4:	jae    0x14001c94a
   14001c8d6:	jb     0x14001c93d
   14001c8d8:	(bad)  
   14001c8d9:	ins    DWORD PTR es:[rdi],dx
   14001c8da:	rex pop rdi
   14001c8dc:	push   rdi
   14001c8dd:	push   rbp
   14001c8de:	(bad)  
   14001c8df:	and    al,0x63
   14001c8e1:	push   0x745f7261
   14001c8e6:	jb     0x14001c949
   14001c8e8:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c8f0:	je     0x14001c956
   14001c8f2:	rex
   14001c8f3:	rex
   14001c8f4:	rex xor DWORD PTR [rax+0x41],eax
   14001c8f8:	rex.RB
   14001c8f9:	push   r14
   14001c8fb:	xor    dh,BYTE PTR [rcx]
   14001c8fd:	rex
   14001c8fe:	rex pop rdx
   14001c900:	add    BYTE PTR [rax],al
   14001c902:	or     eax,0x63773f0c
   14001c907:	gs jb  0x14001c97c
   14001c90a:	rex jae 0x14001c981
   14001c90d:	fs rex
   14001c90f:	rex xor edx,DWORD PTR [rsi+0x3f]
   14001c913:	and    al,0x62
   14001c915:	(bad)  
   14001c916:	jae    0x14001c981
   14001c918:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c91b:	jae    0x14001c991
   14001c91d:	jb     0x14001c984
   14001c91f:	(bad)  
   14001c920:	ins    DWORD PTR es:[rdi],dx
   14001c921:	rex pop rdi
   14001c923:	push   rdi
   14001c924:	push   rbp
   14001c925:	(bad)  
   14001c926:	and    al,0x63
   14001c928:	push   0x745f7261
   14001c92d:	jb     0x14001c990
   14001c92f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14001c937:	je     0x14001c99d
   14001c939:	rex
   14001c93a:	rex
   14001c93b:	rex xor DWORD PTR [rax+0x41],eax
   14001c93f:	add    BYTE PTR [rdi+0x2],bl
   14001c942:	(bad)  
   14001c943:	(bad)  
   14001c944:	xor    DWORD PTR [rdi],edi
   14001c946:	and    al,0x62
   14001c948:	(bad)  
   14001c949:	jae    0x14001c9b4
   14001c94b:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001c94e:	je     0x14001c9c2
   14001c950:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14001c957:	and    al,0x63
   14001c959:	push   0x745f7261
   14001c95e:	jb     0x14001c9c1
   14001c960:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c968:	fs rex
   14001c96a:	rex push rsi
   14001c96c:	(bad)  
   14001c96d:	and    al,0x61
   14001c96f:	ins    BYTE PTR es:[rdi],dx
   14001c970:	ins    BYTE PTR es:[rdi],dx
   14001c971:	outs   dx,DWORD PTR ds:[rsi]
   14001c972:	movsxd esp,DWORD PTR [rcx+0x74]
   14001c975:	outs   dx,DWORD PTR ds:[rsi]
   14001c976:	jb     0x14001c9b8
   14001c978:	rex.R
   14001c979:	xor    al,BYTE PTR [rax+0x40]
   14001c97d:	jae    0x14001c9f3
   14001c97f:	fs rex
   14001c981:	rex push rcx
   14001c983:	rex.RB
   14001c984:	rex.B
   14001c985:	rex.B
   14001c986:	rex pop rax
   14001c988:	pop    rdx
   14001c989:	add    BYTE PTR [rsi],dl
   14001c98b:	add    edi,DWORD PTR [rdi]
   14001c98d:	(bad)  
   14001c98e:	ss (bad) 
   14001c990:	and    al,0x62
   14001c992:	(bad)  
   14001c993:	jae    0x14001c9fe
   14001c995:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001c998:	jae    0x14001ca0e
   14001c99a:	jb     0x14001ca01
   14001c99c:	(bad)  
   14001c99d:	ins    DWORD PTR es:[rdi],dx
   14001c99e:	rex
   14001c99f:	rex.R push rbp
   14001c9a1:	(bad)  
   14001c9a2:	and    al,0x63
   14001c9a4:	push   0x745f7261
   14001c9a9:	jb     0x14001ca0c
   14001c9ab:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c9b3:	fs rex
   14001c9b5:	rex
   14001c9b6:	rex jae 0x14001ca2d
   14001c9b9:	fs rex
   14001c9bb:	rex push rcx
   14001c9bd:	rex.RB
   14001c9be:	rex.B
   14001c9bf:	rex.B
   14001c9c0:	rex.B
   14001c9c1:	rex.RB
   14001c9c2:	push   r14
   14001c9c4:	xor    BYTE PTR [rcx],dh
   14001c9c6:	rex
   14001c9c7:	rex.W
   14001c9c8:	rex pop rdx
   14001c9ca:	add    BYTE PTR [rax],al
   14001c9cc:	(bad)  
   14001c9cd:	add    BYTE PTR [rdi],bh
   14001c9cf:	(bad)  
   14001c9d0:	and    al,0x3f
   14001c9d2:	ss rex.R push rbp
   14001c9d5:	(bad)  
   14001c9d6:	and    al,0x63
   14001c9d8:	push   0x745f7261
   14001c9dd:	jb     0x14001ca40
   14001c9df:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001c9e7:	fs rex
   14001c9e9:	rex push rsi
   14001c9eb:	(bad)  
   14001c9ec:	and    al,0x61
   14001c9ee:	ins    BYTE PTR es:[rdi],dx
   14001c9ef:	ins    BYTE PTR es:[rdi],dx
   14001c9f0:	outs   dx,DWORD PTR ds:[rsi]
   14001c9f1:	movsxd esp,DWORD PTR [rcx+0x74]
   14001c9f4:	outs   dx,DWORD PTR ds:[rsi]
   14001c9f5:	jb     0x14001ca37
   14001c9f7:	rex.R
   14001c9f8:	rex xor DWORD PTR [rax+0x40],eax
   14001c9fc:	jae    0x14001ca72
   14001c9fe:	fs rex
   14001ca00:	rex pop rcx
   14001ca02:	rex.B
   14001ca03:	rex.B
   14001ca04:	rex.RB
   14001ca05:	push   r14
   14001ca07:	(bad)  
   14001ca08:	and    al,0x62
   14001ca0a:	(bad)  
   14001ca0b:	jae    0x14001ca76
   14001ca0d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001ca10:	jae    0x14001ca86
   14001ca12:	jb     0x14001ca79
   14001ca14:	(bad)  
   14001ca15:	ins    DWORD PTR es:[rdi],dx
   14001ca16:	rex
   14001ca17:	rex.R push rbp
   14001ca19:	(bad)  
   14001ca1a:	and    al,0x63
   14001ca1c:	push   0x745f7261
   14001ca21:	jb     0x14001ca84
   14001ca23:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001ca2b:	fs rex
   14001ca2d:	rex
   14001ca2e:	xor    BYTE PTR [rax+0x41],al
   14001ca32:	rex.RB
   14001ca33:	push   r14
   14001ca35:	xor    DWORD PTR [rax],esi
   14001ca37:	rex
   14001ca38:	rex.B
   14001ca39:	rex.RB
   14001ca3a:	rex.X push rsi
   14001ca3c:	(bad)  
   14001ca3d:	and    al,0x62
   14001ca3f:	(bad)  
   14001ca40:	jae    0x14001caab
   14001ca42:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001ca45:	je     0x14001cab9
   14001ca47:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14001ca4e:	and    al,0x63
   14001ca50:	push   0x745f7261
   14001ca55:	jb     0x14001cab8
   14001ca57:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001ca5f:	fs rex
   14001ca61:	rex push rsi
   14001ca63:	(bad)  
   14001ca64:	and    al,0x61
   14001ca66:	ins    BYTE PTR es:[rdi],dx
   14001ca67:	ins    BYTE PTR es:[rdi],dx
   14001ca68:	outs   dx,DWORD PTR ds:[rsi]
   14001ca69:	movsxd esp,DWORD PTR [rcx+0x74]
   14001ca6c:	outs   dx,DWORD PTR ds:[rsi]
   14001ca6d:	jb     0x14001caaf
   14001ca6f:	rex.R
   14001ca70:	xor    al,BYTE PTR [rax+0x40]
   14001ca74:	xor    BYTE PTR [rax+0x40],al
   14001ca77:	pop    rdx
   14001ca78:	add    BYTE PTR [rax],al
   14001ca7a:	cmp    cl,BYTE PTR [rax]
   14001ca7c:	(bad)  
   14001ca7d:	data16 ins BYTE PTR es:[rdi],dx
   14001ca7f:	jne    0x14001caf4
   14001ca81:	push   0x64747340
   14001ca86:	rex
   14001ca87:	rex pop rcx
   14001ca89:	rex.B
   14001ca8a:	rex.B
   14001ca8b:	rex.RB
   14001ca8c:	push   r14
   14001ca8e:	(bad)  
   14001ca8f:	and    al,0x62
   14001ca91:	(bad)  
   14001ca92:	jae    0x14001cafd
   14001ca94:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001ca97:	jae    0x14001cb0d
   14001ca99:	jb     0x14001cb00
   14001ca9b:	(bad)  
   14001ca9c:	ins    DWORD PTR es:[rdi],dx
   14001ca9d:	rex
   14001ca9e:	rex.R push rbp
   14001caa0:	(bad)  
   14001caa1:	and    al,0x63
   14001caa3:	push   0x745f7261
   14001caa8:	jb     0x14001cb0b
   14001caaa:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001cab2:	fs rex
   14001cab4:	rex
   14001cab5:	rex xor DWORD PTR [rax+0x41],eax
   14001cab9:	rex.RB
   14001caba:	push   r14
   14001cabc:	xor    dh,BYTE PTR [rcx]
   14001cabe:	rex
   14001cabf:	rex pop rdx
   14001cac1:	add    BYTE PTR [rax+0x6f633f06],bl
   14001cac7:	jne    0x14001cb3d
   14001cac9:	rex jae 0x14001cb40
   14001cacc:	fs rex
   14001cace:	rex xor edx,DWORD PTR [rsi+0x3f]
   14001cad2:	and    al,0x62
   14001cad4:	(bad)  
   14001cad5:	jae    0x14001cb40
   14001cad7:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001cada:	jae    0x14001cb50
   14001cadc:	jb     0x14001cb43
   14001cade:	(bad)  
   14001cadf:	ins    DWORD PTR es:[rdi],dx
   14001cae0:	rex
   14001cae1:	rex.R push rbp
   14001cae3:	(bad)  
   14001cae4:	and    al,0x63
   14001cae6:	push   0x745f7261
   14001caeb:	jb     0x14001cb4e
   14001caed:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001caf5:	fs rex
   14001caf7:	rex
   14001caf8:	rex xor DWORD PTR [rax+0x41],eax
   14001cafc:	add    BYTE PTR [rax],al
   14001cafe:	(bad)  
   14001caff:	add    edi,DWORD PTR [rdi]
   14001cb01:	(bad)  
   14001cb02:	ss (bad) 
   14001cb04:	and    al,0x62
   14001cb06:	(bad)  
   14001cb07:	jae    0x14001cb72
   14001cb09:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14001cb0c:	jae    0x14001cb82
   14001cb0e:	jb     0x14001cb75
   14001cb10:	(bad)  
   14001cb11:	ins    DWORD PTR es:[rdi],dx
   14001cb12:	rex
   14001cb13:	rex.R push rbp
   14001cb15:	(bad)  
   14001cb16:	and    al,0x63
   14001cb18:	push   0x745f7261
   14001cb1d:	jb     0x14001cb80
   14001cb1f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14001cb27:	fs rex
   14001cb29:	rex
   14001cb2a:	rex jae 0x14001cba1
   14001cb2d:	fs rex
   14001cb2f:	rex push rcx
   14001cb31:	rex.RB
   14001cb32:	rex.B
   14001cb33:	rex.B
   14001cb34:	rex.B
   14001cb35:	rex.RB
   14001cb36:	push   r14
   14001cb38:	xor    BYTE PTR [rcx],dh
   14001cb3a:	rex
   14001cb3b:	rex.WB
   14001cb3c:	rex pop rdx
   14001cb3e:	add    BYTE PTR [rax],al
   14001cb40:	rex.WRB push r11
   14001cb42:	push   rsi
   14001cb43:	rex.XB push r8
   14001cb45:	cmp    DWORD PTR [rax],esi
   14001cb47:	cs fs ins BYTE PTR es:[rdi],dx
   14001cb4a:	ins    BYTE PTR es:[rdi],dx
   14001cb4b:	add    bh,ch
   14001cb4d:	add    al,0x6d
   14001cb4f:	gs ins DWORD PTR es:[rdi],dx
   14001cb51:	movsxd ebp,DWORD PTR [rbp+0x70]
   14001cb54:	add    BYTE PTR [rax],al
   14001cb56:	lock add al,0x6d
   14001cb59:	gs ins DWORD PTR es:[rdi],dx
   14001cb5b:	movsxd esi,DWORD PTR [rax+0x79]
   14001cb5e:	add    BYTE PTR [rax],al
   14001cb60:	adc    eax,DWORD PTR [rax]
   14001cb62:	(bad)  
   14001cb63:	(bad)  
   14001cb64:	xor    eax,DWORD PTR [rax+0x59]
   14001cb67:	pop    r8
   14001cb69:	push   rax
   14001cb6a:	rex.RB
   14001cb6b:	pop    r8
   14001cb6d:	rex pop rdx
   14001cb6f:	add    BYTE PTR [rcx],dl
   14001cb71:	add    BYTE PTR [rdi],bh
   14001cb73:	(bad)  
   14001cb74:	xor    al,BYTE PTR [rax+0x59]
   14001cb77:	push   r8
   14001cb79:	rex.RB
   14001cb7a:	pop    r8
   14001cb7c:	pop    rdi
   14001cb7d:	rex.WXB
   14001cb7e:	rex pop rdx
   14001cb80:	add    BYTE PTR [rax],al
   14001cb82:	movsxd eax,DWORD PTR [rax]
   14001cb84:	pop    rdi
   14001cb85:	pop    rdi
   14001cb86:	rex.XB js 0x14001cc01
   14001cb89:	rex.RX jb 0x14001cbed
   14001cb8c:	ins    DWORD PTR es:[rdi],dx
   14001cb8d:	gs rex.W (bad) 
   14001cb90:	outs   dx,BYTE PTR ds:[rsi]
   14001cb91:	fs ins BYTE PTR es:[rdi],dx
   14001cb93:	gs jb  0x14001cbc9
   14001cb96:	add    BYTE PTR [rax],al
   14001cb98:	rex.WRB push r11
   14001cb9a:	push   rsi
   14001cb9b:	rex.XB push r10
   14001cb9d:	cmp    DWORD PTR [rax],esi
   14001cb9f:	cs fs ins BYTE PTR es:[rdi],dx
   14001cba2:	ins    BYTE PTR es:[rdi],dx
   14001cba3:	add    BYTE PTR [rcx+0x0],bl
   14001cba6:	pop    rdi
   14001cba7:	pop    rdi
   14001cba8:	rex.XB pop r15
   14001cbaa:	jae    0x14001cc1c
   14001cbac:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001cbb0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001cbb7:	ins    BYTE PTR es:[rdi],dx
   14001cbb8:	gs jb  0x14001cbbb
   14001cbbb:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   14001cbc2:	outs   dx,DWORD PTR ds:[rsi]
   14001cbc3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001cbc6:	test   DWORD PTR [rax],eax
   14001cbc8:	pop    rdi
   14001cbc9:	pop    rdi
   14001cbca:	fs ins BYTE PTR es:[rdi],dx
   14001cbcc:	ins    BYTE PTR es:[rdi],dx
   14001cbcd:	outs   dx,DWORD PTR ds:[rsi]
   14001cbce:	outs   dx,BYTE PTR ds:[rsi]
   14001cbcf:	gs js  0x14001cc3b
   14001cbd2:	je     0x14001cbd4
   14001cbd4:	(bad)  
   14001cbd5:	add    DWORD PTR [rdi+0x65],ebx
   14001cbd8:	outs   dx,BYTE PTR ds:[rsi]
   14001cbd9:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001cbdc:	gs pop rdi
   14001cbde:	jo     0x14001cc4f
   14001cbe0:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   14001cbe7:	add    bl,BYTE PTR [rdi+0x6c]
   14001cbea:	outs   dx,DWORD PTR ds:[rsi]
   14001cbeb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001cbee:	in     al,0x2
   14001cbf0:	pop    rdi
   14001cbf1:	outs   dx,DWORD PTR ds:[rsi]
   14001cbf2:	outs   dx,BYTE PTR ds:[rsi]
   14001cbf3:	gs js  0x14001cc5f
   14001cbf6:	je     0x14001cbf8
   14001cbf8:	sub    eax,0x65645f01
   14001cbfd:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001cc00:	gs pop rdi
   14001cc02:	jo     0x14001cc73
   14001cc04:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   14001cc0b:	add    BYTE PTR [rdi+0x61],bl
   14001cc0e:	ins    DWORD PTR es:[rdi],dx
   14001cc0f:	jae    0x14001cc78
   14001cc11:	pop    rdi
   14001cc12:	gs js  0x14001cc7e
   14001cc15:	je     0x14001cc17
   14001cc17:	add    BYTE PTR [rax+0x675f5f00],dl
   14001cc1d:	gs je  0x14001cc8d
   14001cc20:	(bad)  
   14001cc21:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14001cc28:	push   rbp
   14001cc29:	add    BYTE PTR [rdi+0x58],bl
   14001cc2c:	movsxd esi,DWORD PTR [rax+0x74]
   14001cc2f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   14001cc38:	pop    rdi
   14001cc39:	gs js  0x14001cca5
   14001cc3c:	je     0x14001cc3e
   14001cc3e:	stc    
   14001cc3f:	add    BYTE PTR [rdi+0x63],bl
   14001cc42:	gs js  0x14001ccae
   14001cc45:	je     0x14001cc47
   14001cc47:	add    BYTE PTR [rcx+0x69786504],dl
   14001cc4d:	je     0x14001cc4f
   14001cc4f:	add    BYTE PTR [rcx+0x695f5f00],dl
   14001cc55:	outs   dx,BYTE PTR ds:[rsi]
   14001cc56:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   14001cc5e:	pop    rdi
   14001cc5f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14001cc66:	ins    DWORD PTR es:[rdi],dx
   14001cc67:	add    bh,cl
   14001cc69:	add    DWORD PTR [rdi+0x69],ebx
   14001cc6c:	outs   dx,BYTE PTR ds:[rsi]
   14001cc6d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   14001cc75:	add    BYTE PTR [rcx],cl
   14001cc77:	add    DWORD PTR [rdi+0x63],ebx
   14001cc7a:	outs   dx,DWORD PTR ds:[rsi]
   14001cc7b:	outs   dx,BYTE PTR ds:[rsi]
   14001cc7c:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14001cc82:	gs (bad) 
   14001cc84:	fs ins BYTE PTR es:[rdi],dx
   14001cc86:	outs   dx,DWORD PTR ds:[rsi]
   14001cc87:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001cc8a:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   14001cc91:	gs je  0x14001cd09
   14001cc94:	jae    0x14001ccfb
   14001cc96:	jb     0x14001cd05
   14001cc98:	(bad)  
   14001cc99:	je     0x14001cd03
   14001cc9b:	gs jb  0x14001cd10
   14001cc9e:	add    BYTE PTR [rax],al
   14001cca0:	or     BYTE PTR [rcx],al
   14001cca2:	pop    rdi
   14001cca3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001cca6:	ins    DWORD PTR es:[rdi],dx
   14001cca7:	outs   dx,DWORD PTR ds:[rsi]
   14001cca8:	fs add BYTE PTR gs:[rax],al
   14001ccac:	(bad)
   14001ccb1:	outs   dx,DWORD PTR ds:[rsi]
   14001ccb2:	fs add BYTE PTR gs:[rax],al
   14001ccb6:	mov    esp,0x735f5f00
   14001ccbb:	gs je  0x14001cd1d
   14001ccbe:	(bad)  
   14001ccbf:	jo     0x14001cd31
   14001ccc1:	pop    rdi
   14001ccc2:	je     0x14001cd3d
   14001ccc4:	jo     0x14001cd2b
   14001ccc6:	add    BYTE PTR [rax],al
   14001ccc8:	rex.XB add BYTE PTR [r15],dil
   14001cccb:	je     0x14001cd32
   14001cccd:	jb     0x14001cd3c
   14001cccf:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14001ccd6:	pop    rcx
   14001ccd7:	pop    r8
   14001ccd9:	pop    rax
   14001ccda:	pop    rdx
   14001ccdb:	add    BYTE PTR [rax],bh
   14001ccdd:	add    BYTE PTR [rdi],bh
   14001ccdf:	pop    rdi
   14001cce0:	je     0x14001cd5b
   14001cce2:	jo     0x14001cd49
   14001cce4:	pop    rdi
   14001cce5:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14001ccec:	outs   dx,DWORD PTR ds:[rsi]
   14001cced:	jb     0x14001cd4e
   14001ccef:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14001ccf6:	ins    BYTE PTR es:[rdi],dx
   14001ccf7:	pop    rdi
   14001ccf8:	ins    DWORD PTR es:[rdi],dx
   14001ccf9:	gs je  0x14001cd64
   14001ccfc:	outs   dx,DWORD PTR ds:[rsi]
   14001ccfd:	fs rex je 0x14001cd7a
   14001cd01:	jo     0x14001cd68
   14001cd03:	pop    rdi
   14001cd04:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14001cd0b:	rex.RB
   14001cd0c:	rex.B
   14001cd0d:	pop    r8
   14001cd0f:	pop    rax
   14001cd10:	pop    rdx
   14001cd11:	add    BYTE PTR [rsi+0x4],ah
   14001cd14:	push   rbx
   14001cd15:	gs je  0x14001cd5d
   14001cd18:	jb     0x14001cd8c
   14001cd1a:	outs   dx,DWORD PTR ds:[rsi]
   14001cd1b:	jb     0x14001cd6a
   14001cd1d:	outs   dx,DWORD PTR ds:[rsi]
   14001cd1e:	fs add BYTE PTR gs:[rax],al
   14001cd22:	rol    BYTE PTR [rbx+rdx*2],0x6c
   14001cd26:	gs gs jo 0x14001cd2a
   14001cd2a:	mov    bl,0x4
   14001cd2c:	push   rbx
   14001cd2d:	gs je  0x14001cd85
   14001cd30:	outs   dx,BYTE PTR ds:[rsi]
   14001cd31:	push   0x6c646e61
   14001cd36:	gs fs rex.RB js 0x14001cd9e
   14001cd3b:	gs jo  0x14001cdb2
   14001cd3e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001cd45:	gs jb  0x14001cd48
   14001cd48:	test   eax,0x65755103
   14001cd4d:	jb     0x14001cdc8
   14001cd4f:	push   rax
   14001cd50:	gs jb  0x14001cdb9
   14001cd53:	outs   dx,DWORD PTR ds:[rsi]
   14001cd54:	jb     0x14001cdc3
   14001cd56:	(bad)  
   14001cd57:	outs   dx,BYTE PTR ds:[rsi]
   14001cd58:	movsxd esp,DWORD PTR [rbp+0x43]
   14001cd5b:	outs   dx,DWORD PTR ds:[rsi]
   14001cd5c:	jne    0x14001cdcc
   14001cd5e:	je     0x14001cdc5
   14001cd60:	jb     0x14001cd62
   14001cd62:	(bad)  
   14001cd63:	add    al,BYTE PTR [rdi+0x65]
   14001cd66:	je     0x14001cdbc
   14001cd68:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001cd6f:	je     0x14001cd71
   14001cd71:	add    bl,cl
   14001cd73:	add    DWORD PTR [rdi+0x65],eax
   14001cd76:	je     0x14001cdbb
   14001cd78:	jne    0x14001cdec
   14001cd7a:	jb     0x14001cde1
   14001cd7c:	outs   dx,BYTE PTR ds:[rsi]
   14001cd7d:	je     0x14001cdd3
   14001cd7f:	push   0x64616572
   14001cd84:	rex.WB
   14001cd85:	add    BYTE PTR fs:[rax],al
   14001cd88:	mov    DWORD PTR [rcx],0x43746547
   14001cd8e:	jne    0x14001ce02
   14001cd90:	jb     0x14001cdf7
   14001cd92:	outs   dx,BYTE PTR ds:[rsi]
   14001cd93:	je     0x14001cde5
   14001cd95:	jb     0x14001ce06
   14001cd97:	movsxd esp,DWORD PTR [rbp+0x73]
   14001cd9a:	jae    0x14001cde5
   14001cd9c:	add    BYTE PTR fs:[rax+0x74654702],al
   14001cda3:	push   rbx
   14001cda4:	jns    0x14001ce19
   14001cda6:	je     0x14001ce0d
   14001cda8:	ins    DWORD PTR es:[rdi],dx
   14001cda9:	push   rsp
   14001cdaa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001cdb1:	ins    BYTE PTR es:[rdi],dx
   14001cdb2:	gs push rsp
   14001cdb4:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14001cdbb:	rex.WRX
   14001cdbc:	rex.RB
   14001cdbd:	xor    r14,QWORD PTR [rdx]
   14001cdc0:	cs fs ins BYTE PTR es:[rdi],dx
   14001cdc3:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

000000014001d000 <.data>:
   14001d000:	rex imul eax,DWORD PTR [rcx],0x40
   14001d004:	add    DWORD PTR [rax],eax
   14001d006:	add    BYTE PTR [rax],al
   14001d008:	add    DWORD PTR [rax],eax
   14001d00a:	add    BYTE PTR [rax],al
   14001d00c:	add    BYTE PTR [rax],al
   14001d00e:	add    BYTE PTR [rax],al
   14001d010:	rex imul eax,DWORD PTR [rcx],0x40
   14001d014:	add    DWORD PTR [rax],eax
   14001d016:	add    BYTE PTR [rax],al
   14001d018:	add    BYTE PTR [rcx+0x1],bh
   14001d01b:	rex add DWORD PTR [rax],eax
	...
   14001d026:	add    BYTE PTR [rax],al
   14001d028:	cs (bad) 
   14001d02a:	push   r14
   14001d02c:	push   rcx
   14001d02d:	rex.X jne 0x14001d096
   14001d030:	data16 gs jb 0x14001d074
   14001d034:	add    BYTE PTR [rax],al
   14001d037:	add    BYTE PTR [rax],al
   14001d039:	jns    0x14001d03c
   14001d03b:	rex add DWORD PTR [rax],eax
	...
   14001d046:	add    BYTE PTR [rax],al
   14001d048:	cs (bad) 
   14001d04a:	push   r14
   14001d04c:	push   rcx
   14001d04d:	rex.WB
   14001d04e:	rex.WRXB
   14001d04f:	rex.R
   14001d050:	gs jbe 0x14001d0bc
   14001d053:	movsxd esp,DWORD PTR [rbp+0x40]
   14001d056:	add    BYTE PTR [rax],al
   14001d059:	jns    0x14001d05c
   14001d05b:	rex add DWORD PTR [rax],eax
	...
   14001d066:	add    BYTE PTR [rax],al
   14001d068:	cs (bad) 
   14001d06a:	push   r14
   14001d06c:	push   rcx
   14001d06d:	rex.WRXB (bad) 
   14001d06f:	push   0x65
   14001d071:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d075:	add    BYTE PTR [rax],al
   14001d077:	add    BYTE PTR [rax+0x6b],al
   14001d07a:	add    DWORD PTR [rax+0x1],eax
   14001d07d:	add    BYTE PTR [rax],al
   14001d07f:	add    BYTE PTR [rax],al
   14001d081:	jns    0x14001d084
   14001d083:	rex add DWORD PTR [rax],eax
	...
   14001d08e:	add    BYTE PTR [rax],al
   14001d090:	cs (bad) 
   14001d092:	push   r14
   14001d094:	je     0x14001d10f
   14001d096:	jo     0x14001d0fd
   14001d098:	pop    rdi
   14001d099:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14001d0a0:	(bad)  
   14001d0a1:	(bad)  
   14001d0a2:	(bad)  
   14001d0a3:	(bad)  
   14001d0a4:	(bad)  
   14001d0a5:	(bad)  
   14001d0a6:	(bad)  
   14001d0a7:	(bad)  
   14001d0a8:	(bad)  
   14001d0a9:	(bad)  
   14001d0aa:	(bad)  
   14001d0ab:	inc    DWORD PTR [rcx]
   14001d0ad:	add    BYTE PTR [rax],al
   14001d0af:	add    BYTE PTR [rdx],dh
   14001d0b1:	movabs ds:0x5dcd00002b992ddf,al
   14001d0ba:	and    dl,dl
   14001d0bc:	data16 (bad) 
   14001d0be:	(bad)  
   14001d0bf:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014001e000 <.pdata>:
   14001e000:	add    BYTE PTR [rax],dl
   14001e002:	add    BYTE PTR [rax],al
   14001e004:	xor    eax,0xd0000011
   14001e009:	jp     0x14001e00c
   14001e00b:	add    BYTE PTR [rax+0x11],al
   14001e00e:	add    BYTE PTR [rax],al
   14001e010:	and    edx,DWORD PTR [rbx]
   14001e012:	add    BYTE PTR [rax],al
   14001e014:	mov    eax,0x3000017f
   14001e019:	adc    eax,DWORD PTR [rax]
   14001e01b:	add    BYTE PTR [rdi+0x13],bh
   14001e01e:	add    BYTE PTR [rax],al
   14001e020:	fdivr  QWORD PTR [rdx+0x1]
   14001e023:	add    BYTE PTR [rax-0x53ffffed],al
   14001e029:	adc    eax,DWORD PTR [rax]
   14001e02b:	add    ah,ch
   14001e02d:	jp     0x14001e030
   14001e02f:	add    al,dl
   14001e031:	adc    eax,DWORD PTR [rax]
   14001e033:	add    BYTE PTR [rdx],bl
   14001e035:	adc    al,0x0
   14001e037:	add    ah,dh
   14001e039:	jp     0x14001e03c
   14001e03b:	add    BYTE PTR [rax],ah
   14001e03d:	adc    al,0x0
   14001e03f:	add    BYTE PTR [rsp+rdx*1+0x0],dl
   14001e043:	add    ah,ch
   14001e045:	jp     0x14001e048
   14001e047:	add    BYTE PTR [rax+0x14],ah
   14001e04a:	add    BYTE PTR [rax],al
   14001e04c:	mov    WORD PTR [rax+rax*1],ss
   14001e04f:	add    ah,ch
   14001e051:	jp     0x14001e054
   14001e053:	add    BYTE PTR [rax-0x2bffffec],dl
   14001e059:	adc    al,0x0
   14001e05b:	add    ah,dh
   14001e05d:	jp     0x14001e060
   14001e05f:	add    al,ah
   14001e061:	adc    al,0x0
   14001e063:	add    BYTE PTR [rdx*1+0x7af40000],ah
   14001e06a:	add    DWORD PTR [rax],eax
   14001e06c:	xor    BYTE PTR [rip+0x15490000],dl        # 0x1554ae072
   14001e072:	add    BYTE PTR [rax],al
   14001e074:	sub    BYTE PTR [rbx+0x1],bh
   14001e077:	add    BYTE PTR [rcx+0x15],cl
   14001e07a:	add    BYTE PTR [rax],al
   14001e07c:	mov    esi,0x10000015
   14001e081:	jnp    0x14001e084
   14001e083:	add    BYTE PTR [rsi-0x3fffffeb],bh
   14001e089:	adc    eax,0x7b000000
   14001e08e:	add    DWORD PTR [rax],eax
   14001e090:	rcl    BYTE PTR [rip+0x16930000],0x0        # 0x15694e097
   14001e097:	add    BYTE PTR [rax],al
   14001e099:	(bad)  
   14001e09a:	add    DWORD PTR [rax],eax
   14001e09c:	movabs al,ds:0x4c0000188b000016
   14001e0a5:	jnp    0x14001e0a8
   14001e0a7:	add    BYTE PTR [rax+0x61000018],dl
   14001e0ad:	sbb    al,BYTE PTR [rax]
   14001e0af:	add    al,bl
   14001e0b1:	jnp    0x14001e0b4
   14001e0b3:	add    BYTE PTR [rax+0x1a],dh
   14001e0b6:	add    BYTE PTR [rax],al
   14001e0b8:	outs   dx,BYTE PTR ds:[rsi]
   14001e0b9:	sbb    al,0x0
   14001e0bb:	add    BYTE PTR [rsp+rdi*2+0x1],ah
   14001e0bf:	add    BYTE PTR [rax+0x1c00001c],dl
   14001e0c5:	sbb    eax,0x7cec0000
   14001e0ca:	add    DWORD PTR [rax],eax
   14001e0cc:	and    BYTE PTR [rip+0x1da70000],bl        # 0x15da8e0d2
   14001e0d2:	add    BYTE PTR [rax],al
   14001e0d4:	in     al,dx
   14001e0d5:	jl     0x14001e0d8
   14001e0d7:	add    BYTE PTR [rax-0x26ffffe3],dh
   14001e0dd:	sbb    eax,0x7d280000
   14001e0e2:	add    DWORD PTR [rax],eax
   14001e0e4:	fstp   DWORD PTR [rip+0x1e120000]        # 0x15e13e0ea
   14001e0ea:	add    BYTE PTR [rax],al
   14001e0ec:	adc    al,0x7d
   14001e0ee:	add    DWORD PTR [rax],eax
   14001e0f0:	adc    bl,BYTE PTR [rsi]
   14001e0f2:	add    BYTE PTR [rax],al
   14001e0f4:	sub    ebx,DWORD PTR [rsi]
   14001e0f6:	add    BYTE PTR [rax],al
   14001e0f8:	add    al,0x7d
   14001e0fa:	add    DWORD PTR [rax],eax
   14001e0fc:	xor    BYTE PTR [rsi],bl
   14001e0fe:	add    BYTE PTR [rax],al
   14001e100:	push   rdi
   14001e101:	(bad)  
   14001e102:	add    BYTE PTR [rax],al
   14001e104:	js     0x14001e183
   14001e106:	add    DWORD PTR [rax],eax
   14001e108:	push   rdi
   14001e109:	(bad)  
   14001e10a:	add    BYTE PTR [rax],al
   14001e10c:	jmp    0x19c01e12f
   14001e111:	jge    0x14001e114
   14001e113:	add    cl,ch
   14001e115:	(bad)  
   14001e116:	add    BYTE PTR [rax],al
   14001e118:	sti    
   14001e119:	(bad)  
   14001e11a:	add    BYTE PTR [rax],al
   14001e11c:	rex.W jge 0x14001e120
   14001e11f:	add    bl,bh
   14001e121:	(bad)  
   14001e122:	add    BYTE PTR [rax],al
   14001e124:	or     BYTE PTR [rdi],bl
   14001e126:	add    BYTE PTR [rax],al
   14001e128:	cmp    BYTE PTR [rbp+0x1],bh
   14001e12b:	add    BYTE PTR [rax],dl
   14001e12d:	(bad)  
   14001e12e:	add    BYTE PTR [rax],al
   14001e130:	(bad)  
   14001e131:	(bad)  
   14001e132:	add    BYTE PTR [rax],al
   14001e134:	test   al,0x7d
   14001e136:	add    DWORD PTR [rax],eax
   14001e138:	(bad)  
   14001e139:	(bad)  
   14001e13a:	add    BYTE PTR [rax],al
   14001e13c:	mov    DWORD PTR [rdi],ebx
   14001e13e:	add    BYTE PTR [rax],al
   14001e140:	xchg   esp,eax
   14001e141:	jge    0x14001e144
   14001e143:	add    BYTE PTR [rcx-0x63ffffe1],cl
   14001e149:	(bad)  
   14001e14a:	add    BYTE PTR [rax],al
   14001e14c:	test   BYTE PTR [rbp+0x1],bh
   14001e14f:	add    BYTE PTR [rax+0x1c00001f],ah
   14001e155:	and    BYTE PTR [rax],al
   14001e157:	add    BYTE PTR [rax+0x2000017d],bh
   14001e15d:	and    BYTE PTR [rax],al
   14001e15f:	add    al,dl
   14001e161:	and    BYTE PTR [rax],al
   14001e163:	add    al,cl
   14001e165:	jge    0x14001e168
   14001e167:	add    al,dl
   14001e169:	and    BYTE PTR [rax],al
   14001e16b:	add    BYTE PTR [rdi],al
   14001e16d:	and    DWORD PTR [rax],eax
   14001e16f:	add    BYTE PTR [rax-0x7d],bh
   14001e172:	add    DWORD PTR [rax],eax
   14001e174:	adc    BYTE PTR [rcx],ah
   14001e176:	add    BYTE PTR [rax],al
   14001e178:	rex.RXB and DWORD PTR [r8],r8d
   14001e17b:	add    BYTE PTR [rax-0x7d],bh
   14001e17e:	add    DWORD PTR [rax],eax
   14001e180:	push   rax
   14001e181:	and    DWORD PTR [rax],eax
   14001e183:	add    BYTE PTR [rip+0xffffffffe0000022],al        # 0x12001e1ab
   14001e189:	jge    0x14001e18c
   14001e18b:	add    BYTE PTR [rax],dl
   14001e18d:	and    al,BYTE PTR [rax]
   14001e18f:	add    ch,al
   14001e191:	and    al,BYTE PTR [rax]
   14001e193:	add    al,ah
   14001e195:	jge    0x14001e198
   14001e197:	add    al,ah
   14001e199:	and    al,BYTE PTR [rax]
   14001e19b:	add    BYTE PTR [rbx],al
   14001e19d:	and    eax,DWORD PTR [rax]
   14001e19f:	add    BYTE PTR [rax-0x7d],bh
   14001e1a2:	add    DWORD PTR [rax],eax
   14001e1a4:	xor    BYTE PTR [rbx],ah
   14001e1a6:	add    BYTE PTR [rax],al
   14001e1a8:	(bad)  
   14001e1a9:	and    eax,DWORD PTR [rax]
   14001e1ab:	add    BYTE PTR [rsi+rdi*2],bl
   14001e1ae:	add    DWORD PTR [rax],eax
   14001e1b0:	(bad)  
   14001e1b1:	and    eax,DWORD PTR [rax]
   14001e1b3:	add    BYTE PTR [rsp+0x0],dl
   14001e1b7:	add    BYTE PTR [rsi+rdi*2],al
   14001e1ba:	add    DWORD PTR [rax],eax
   14001e1bc:	push   rsp
   14001e1bd:	and    al,0x0
   14001e1bf:	add    BYTE PTR [rbx-0xbffffdc],al
   14001e1c5:	jge    0x14001e1c8
   14001e1c7:	add    BYTE PTR [rax+0x54000024],dl
   14001e1cd:	and    eax,0x7e280000
   14001e1d2:	add    DWORD PTR [rax],eax
   14001e1d4:	(bad)  
   14001e1d5:	and    eax,0x27700000
   14001e1da:	add    BYTE PTR [rax],al
   14001e1dc:	cmp    al,0x7e
   14001e1de:	add    DWORD PTR [rax],eax
   14001e1e0:	jo     0x14001e209
   14001e1e2:	add    BYTE PTR [rax],al
   14001e1e4:	shl    DWORD PTR [rdi],cl
   14001e1e6:	add    BYTE PTR [rax],al
   14001e1e8:	fdivr  DWORD PTR [rdi+0x1]
   14001e1eb:	add    al,ah
   14001e1ed:	(bad)  
   14001e1ee:	add    BYTE PTR [rax],al
   14001e1f0:	std    
   14001e1f1:	(bad)  
   14001e1f2:	add    BYTE PTR [rax],al
   14001e1f4:	in     al,dx
   14001e1f5:	jp     0x14001e1f8
   14001e1f7:	add    ch,bh
   14001e1f9:	(bad)  
   14001e1fa:	add    BYTE PTR [rax],al
   14001e1fc:	pop    rdx
   14001e1fd:	sub    BYTE PTR [rax],al
   14001e1ff:	add    BYTE PTR [rax+0x7e],ah
   14001e202:	add    DWORD PTR [rax],eax
   14001e204:	pop    rdx
   14001e205:	sub    BYTE PTR [rax],al
   14001e207:	add    BYTE PTR [rdi+0x28],bl
   14001e20a:	add    BYTE PTR [rax],al
   14001e20c:	push   rax
   14001e20d:	jle    0x14001e210
   14001e20f:	add    BYTE PTR [rax+0x28],ah
   14001e212:	add    BYTE PTR [rax],al
   14001e214:	cdq    
   14001e215:	sub    BYTE PTR [rax],al
   14001e217:	add    BYTE PTR [rdi+rdi*2+0x1],ch
   14001e21b:	add    BYTE PTR [rcx-0x7ffffd8],bl
   14001e221:	sub    BYTE PTR [rax],al
   14001e223:	add    BYTE PTR [rsi+rdi*2+0x28f80001],cl
   14001e22a:	add    BYTE PTR [rax],al
   14001e22c:	(bad)  
   14001e22d:	sub    DWORD PTR [rax],eax
   14001e22f:	add    BYTE PTR [rsi+rdi*2+0x1],bh
   14001e233:	add    BYTE PTR [rax],dl
   14001e235:	sub    DWORD PTR [rax],eax
   14001e237:	add    BYTE PTR [rip+0xffffffffec000029],ch        # 0x12c01e266
   14001e23d:	jp     0x14001e240
   14001e23f:	add    BYTE PTR [rip+0xffffffff8a000029],ch        # 0xca01e26e
   14001e245:	sub    DWORD PTR [rax],eax
   14001e247:	add    BYTE PTR [rsi+rdi*2+0x298a0001],dh
   14001e24e:	add    BYTE PTR [rax],al
   14001e250:	(bad)
   14001e254:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e255:	jle    0x14001e258
   14001e257:	add    BYTE PTR [rax-0x55ffffd7],dl
   14001e25d:	sub    DWORD PTR [rax],eax
   14001e25f:	add    BYTE PTR [rax],dl
   14001e261:	jg     0x14001e264
   14001e263:	add    BYTE PTR [rdx+0x44000029],ch
   14001e269:	sub    al,BYTE PTR [rax]
   14001e26b:	add    ah,dh
   14001e26d:	jle    0x14001e270
   14001e26f:	add    BYTE PTR [rdx+rbp*1+0x0],al
   14001e273:	add    BYTE PTR [rdx+0x2a],dl
   14001e276:	add    BYTE PTR [rax],al
   14001e278:	loopne 0x14001e2f8
   14001e27a:	add    DWORD PTR [rax],eax
   14001e27c:	push   rdx
   14001e27d:	sub    al,BYTE PTR [rax]
   14001e27f:	add    BYTE PTR [rbx+0x2a],bl
   14001e282:	add    BYTE PTR [rax],al
   14001e284:	sar    BYTE PTR [rsi+0x1],1
   14001e287:	add    BYTE PTR [rax+0x2a],ah
   14001e28a:	add    BYTE PTR [rax],al
   14001e28c:	jge    0x14001e2b8
   14001e28e:	add    BYTE PTR [rax],al
   14001e290:	in     al,dx
   14001e291:	jp     0x14001e294
   14001e293:	add    BYTE PTR [rbp+0x2a],bh
   14001e296:	add    BYTE PTR [rax],al
   14001e298:	fisubr DWORD PTR [rdx]
   14001e29a:	add    BYTE PTR [rax],al
   14001e29c:	sub    BYTE PTR [rdi+0x1],bh
   14001e29f:	add    dl,bl
   14001e2a1:	sub    al,BYTE PTR [rax]
   14001e2a3:	add    bh,bl
   14001e2a5:	sub    al,BYTE PTR [rax]
   14001e2a7:	add    BYTE PTR [rax],bl
   14001e2a9:	jg     0x14001e2ac
   14001e2ab:	add    al,ah
   14001e2ad:	sub    al,BYTE PTR [rax]
   14001e2af:	add    BYTE PTR [rsi+0x2b],cl
   14001e2b2:	add    BYTE PTR [rax],al
   14001e2b4:	mov    eax,0x5000017f
   14001e2b9:	sub    eax,DWORD PTR [rax]
   14001e2bb:	add    BYTE PTR [rcx+0x6c00002b],cl
   14001e2c1:	jg     0x14001e2c4
   14001e2c3:	add    BYTE PTR [rcx-0x17ffffd5],cl
   14001e2c9:	sub    eax,DWORD PTR [rax]
   14001e2cb:	add    BYTE PTR [rdi+rdi*2+0x1],dl
   14001e2cf:	add    al,ch
   14001e2d1:	sub    eax,DWORD PTR [rax]
   14001e2d3:	add    dh,dh
   14001e2d5:	sub    eax,DWORD PTR [rax]
   14001e2d7:	add    BYTE PTR [rdi+rdi*2+0x1],al
   14001e2db:	add    BYTE PTR [rax],al
   14001e2dd:	sub    al,0x0
   14001e2df:	add    BYTE PTR [rdx],bh
   14001e2e1:	sub    eax,0x7f780000
   14001e2e6:	add    DWORD PTR [rax],eax
   14001e2e8:	rex sub eax,0x2e010000
   14001e2ee:	add    BYTE PTR [rax],al
   14001e2f0:	int3   
   14001e2f1:	(bad)  
   14001e2f2:	add    DWORD PTR [rax],eax
   14001e2f4:	adc    BYTE PTR [rsi],ch
   14001e2f6:	add    BYTE PTR [rax],al
   14001e2f8:	jle    0x14001e328
   14001e2fa:	add    BYTE PTR [rax],al
   14001e2fc:	mov    eax,0x8000017f
   14001e301:	add    BYTE PTR cs:[rax],al
   14001e304:	mov    ecx,0x6c00002e
   14001e309:	jg     0x14001e30c
   14001e30b:	add    BYTE PTR [rcx+0x1800002e],bh
   14001e311:	(bad)  
   14001e312:	add    BYTE PTR [rax],al
   14001e314:	movabs al,ds:0x2600002f1800017f
   14001e31d:	(bad)  
   14001e31e:	add    BYTE PTR [rax],al
   14001e320:	nop
   14001e321:	jg     0x14001e324
   14001e323:	add    BYTE PTR [rax],dh
   14001e325:	(bad)  
   14001e326:	add    BYTE PTR [rax],al
   14001e328:	sahf   
   14001e329:	(bad)  
   14001e32a:	add    BYTE PTR [rax],al
   14001e32c:	mov    eax,0xa000017f
   14001e331:	(bad)  
   14001e332:	add    BYTE PTR [rax],al
   14001e334:	(bad)  
   14001e335:	xor    BYTE PTR [rax],al
   14001e337:	add    BYTE PTR [rax+0x1000017f],bh
   14001e33d:	xor    BYTE PTR [rax],al
   14001e33f:	add    BYTE PTR [rax-0x27ffffd0],bl
   14001e345:	jg     0x14001e348
   14001e347:	add    BYTE PTR [rax+0xe000030],ah
   14001e34d:	xor    DWORD PTR [rax],eax
   14001e34f:	add    BYTE PTR [rax+0x1000017f],bh
   14001e355:	xor    DWORD PTR [rax],eax
   14001e357:	add    BYTE PTR [rsi+0x31],bh
   14001e35a:	add    BYTE PTR [rax],al
   14001e35c:	mov    eax,0x8000017f
   14001e361:	xor    DWORD PTR [rax],eax
   14001e363:	add    BYTE PTR [rsi+0x32],bh
   14001e366:	add    BYTE PTR [rax],al
   14001e368:	(bad)  
   14001e369:	jg     0x14001e36c
   14001e36b:	add    BYTE PTR [rax-0x11ffffce],al
   14001e371:	xor    al,BYTE PTR [rax]
   14001e373:	add    BYTE PTR [rax-0xffffe81],bh
   14001e379:	xor    al,BYTE PTR [rax]
   14001e37b:	add    bl,cl
   14001e37d:	xor    eax,DWORD PTR [rax]
   14001e37f:	add    ah,al
   14001e381:	jg     0x14001e384
   14001e383:	add    al,dl
   14001e385:	xor    eax,DWORD PTR [rax]
   14001e387:	add    BYTE PTR [rcx+0x34],al
   14001e38a:	add    BYTE PTR [rax],al
   14001e38c:	fdivr  DWORD PTR [rdi+0x1]
   14001e38f:	add    BYTE PTR [rax+0x34],dl
   14001e392:	add    BYTE PTR [rax],al
   14001e394:	mov    dh,BYTE PTR [rip+0x7f780000]        # 0x1bf79e39a
   14001e39a:	add    DWORD PTR [rax],eax
   14001e39c:	nop
   14001e39d:	xor    eax,0x36510000
   14001e3a2:	add    BYTE PTR [rax],al
   14001e3a4:	int3   
   14001e3a5:	(bad)  
   14001e3a6:	add    DWORD PTR [rax],eax
   14001e3a8:	(bad)  
   14001e3a9:	add    BYTE PTR ss:[rax],al
   14001e3ac:	imul   edi,DWORD PTR [rax],0x7fe40000
   14001e3b2:	add    DWORD PTR [rax],eax
   14001e3b4:	jo     0x14001e3ee
   14001e3b6:	add    BYTE PTR [rax],al
   14001e3b8:	repnz cmp BYTE PTR [rax],al
   14001e3bb:	add    ah,bh
   14001e3bd:	jg     0x14001e3c0
   14001e3bf:	add    BYTE PTR [rax],al
   14001e3c1:	cmp    DWORD PTR [rax],eax
   14001e3c3:	add    BYTE PTR [rax+0x3a],bl
   14001e3c6:	add    BYTE PTR [rax],al
   14001e3c8:	mov    eax,0x6000017d
   14001e3cd:	cmp    al,BYTE PTR [rax]
   14001e3cf:	add    BYTE PTR [rip+0xc00003d],dh        # 0x14c01e412
   14001e3d5:	add    BYTE PTR [rcx],0x0
   14001e3d8:	rex cmp eax,0x3db40000
   14001e3de:	add    BYTE PTR [rax],al
   14001e3e0:	pop    rax
   14001e3e1:	add    BYTE PTR [rcx],0x0
   14001e3e4:	sar    BYTE PTR [rip+0x3e600000],0x0        # 0x17e61e3eb
   14001e3eb:	add    al,bl
   14001e3ed:	jg     0x14001e3f0
   14001e3ef:	add    BYTE PTR [rax+0x3e],ah
   14001e3f2:	add    BYTE PTR [rax],al
   14001e3f4:	add    al,0x3f
   14001e3f6:	add    BYTE PTR [rax],al
   14001e3f8:	rex.R add BYTE PTR [rcx],0x0
   14001e3fc:	add    al,0x3f
   14001e3fe:	add    BYTE PTR [rax],al
   14001e400:	push   rdx
   14001e401:	(bad)  
   14001e402:	add    BYTE PTR [rax],al
   14001e404:	xor    BYTE PTR [rax+0x3f520001],al
   14001e40a:	add    BYTE PTR [rax],al
   14001e40c:	jno    0x14001e44d
   14001e40e:	add    BYTE PTR [rax],al
   14001e410:	and    BYTE PTR [rax+0x3f800001],al
   14001e416:	add    BYTE PTR [rax],al
   14001e418:	jmp    0x14001e45a
   14001e41a:	add    BYTE PTR [rax],al
   14001e41c:	enter  0x17d,0x0
   14001e420:	lock add BYTE PTR [rax],al
   14001e424:	add    BYTE PTR fs:[r8],al
   14001e428:	pop    rax
   14001e429:	add    BYTE PTR [rcx],0x0
   14001e42c:	jo     0x14001e46f
   14001e42e:	add    BYTE PTR [rax],al
   14001e430:	pushf  
   14001e431:	add    BYTE PTR [r8],al
   14001e434:	xchg   esp,eax
   14001e435:	add    BYTE PTR [rcx],0x0
   14001e438:	pushf  
   14001e439:	add    BYTE PTR [r8],al
   14001e43c:	test   DWORD PTR [rdx+0x0],eax
   14001e43f:	add    BYTE PTR [rax+rax*4+0x1],dh
   14001e443:	add    BYTE PTR [rbp-0x70ffffbe],al
   14001e449:	rex.X add BYTE PTR [rax],al
   14001e44c:	add    BYTE PTR fs:[rcx],0x0
   14001e450:	nop
   14001e451:	rex.X add BYTE PTR [rax],al
   14001e454:	sbb    BYTE PTR [rbp+0x0],al
   14001e457:	add    BYTE PTR [rax+0x20000180],ah
   14001e45d:	add    BYTE PTR [r8],r8b
   14001e460:	push   rdi
   14001e461:	add    BYTE PTR [r8],r8b
   14001e464:	xor    BYTE PTR [rcx+0x45570001],al
   14001e46a:	add    BYTE PTR [rax],al
   14001e46c:	jnp    0x14001e4b4
   14001e46e:	add    BYTE PTR [rax],al
   14001e470:	sbb    al,0x81
   14001e472:	add    DWORD PTR [rax],eax
   14001e474:	jnp    0x14001e4bc
   14001e476:	add    BYTE PTR [rax],al
   14001e478:	add    DWORD PTR [rsi+0x0],0x0
   14001e47c:	or     BYTE PTR [rcx+0x46830001],al
   14001e482:	add    BYTE PTR [rax],al
   14001e484:	(bad)  
   14001e485:	rex.RXB add BYTE PTR [r8],r8b
   14001e488:	hlt    
   14001e489:	add    BYTE PTR [rcx],0x0
   14001e48c:	(bad)  
   14001e48d:	rex.RXB add BYTE PTR [r8],r8b
   14001e490:	cwde   
   14001e491:	rex.RXB add BYTE PTR [r8],r8b
   14001e494:	in     al,0x80
   14001e496:	add    DWORD PTR [rax],eax
   14001e498:	cwde   
   14001e499:	rex.RXB add BYTE PTR [r8],r8b
   14001e49c:	stos   BYTE PTR es:[rdi],al
   14001e49d:	rex.RXB add BYTE PTR [r8],r8b
   14001e4a0:	(bad)  
   14001e4a1:	add    BYTE PTR [rcx],0x0
   14001e4a4:	stos   BYTE PTR es:[rdi],al
   14001e4a5:	rex.RXB add BYTE PTR [r8],r8b
   14001e4a8:	(bad)  
   14001e4a9:	rex.RXB add BYTE PTR [r8],r8b
   14001e4ac:	rol    BYTE PTR [rax+0x47d40001],0x0
   14001e4b3:	add    cl,al
   14001e4b5:	rex.WB add BYTE PTR [r8],al
   14001e4b8:	(bad)  
   14001e4b9:	add    BYTE PTR [rcx],0x0
   14001e4bc:	ror    DWORD PTR [rcx+0x0],0x0
   14001e4c0:	rex.R
   14001e4c1:	rex.WX add BYTE PTR [rax],al
   14001e4c4:	mov    al,0x80
   14001e4c6:	add    DWORD PTR [rax],eax
   14001e4c8:	push   rax
   14001e4c9:	rex.WX add BYTE PTR [rax],al
   14001e4cc:	rex.WRXB
   14001e4cd:	rex.WR add BYTE PTR [rax],r8b
   14001e4d0:	rex.R add DWORD PTR [rcx],0x4c5000
   14001e4d7:	add    BYTE PTR [rcx-0x33ffffb3],ah
   14001e4dd:	(bad)  
   14001e4de:	add    DWORD PTR [rax],eax
   14001e4e0:	mov    al,0x4d
   14001e4e2:	add    BYTE PTR [rax],al
   14001e4e4:	fwait
   14001e4e5:	rex.WRX add BYTE PTR [rax],r8b
   14001e4e8:	pop    rax
   14001e4e9:	add    DWORD PTR [rcx],0x4ea000
   14001e4ef:	add    al,bh
   14001e4f1:	rex.WRXB add BYTE PTR [r8],r8b
   14001e4f4:	jo     0x14001e477
   14001e4f6:	add    DWORD PTR [rax],eax
   14001e4f8:	add    BYTE PTR [rax+0x0],dl
   14001e4fb:	add    BYTE PTR [rdi+0x50],ah
   14001e4fe:	add    BYTE PTR [rax],al
   14001e500:	rol    BYTE PTR [rcx+0x50670001],1
   14001e506:	add    BYTE PTR [rax],al
   14001e508:	out    dx,eax
   14001e509:	push   rax
   14001e50a:	add    BYTE PTR [rax],al
   14001e50c:	cwde   
   14001e50d:	add    DWORD PTR [rcx],0x50ef00
   14001e513:	add    BYTE PTR [rcx],cl
   14001e515:	push   rcx
   14001e516:	add    BYTE PTR [rax],al
   14001e518:	mov    BYTE PTR [rcx+0x51100001],al
   14001e51e:	add    BYTE PTR [rax],al
   14001e520:	ja     0x14001e573
   14001e522:	add    BYTE PTR [rax],al
   14001e524:	rol    BYTE PTR [rcx+0x51770001],1
   14001e52a:	add    BYTE PTR [rax],al
   14001e52c:	add    BYTE PTR [rdx+0x0],dl
   14001e52f:	add    BYTE PTR [rcx+rax*4+0x52000001],bh
   14001e536:	add    BYTE PTR [rax],al
   14001e538:	sbb    dl,BYTE PTR [rdx+0x0]
   14001e53b:	add    BYTE PTR [rcx+rax*4+0x52200001],ch
   14001e542:	add    BYTE PTR [rax],al
   14001e544:	and    DWORD PTR [rbx+0x0],edx
   14001e547:	add    ah,ah
   14001e549:	add    DWORD PTR [rcx],0x533000
   14001e54f:	add    BYTE PTR [rsi+0x53],dh
   14001e552:	add    BYTE PTR [rax],al
   14001e554:	js     0x14001e4d9
   14001e556:	add    DWORD PTR [rax],eax
   14001e558:	adc    BYTE PTR [rbx+0x0],0x0
   14001e55c:	(bad)  
   14001e55d:	push   rbx
   14001e55e:	add    BYTE PTR [rax],al
   14001e560:	js     0x14001e4e5
   14001e562:	add    DWORD PTR [rax],eax
   14001e564:	rcl    BYTE PTR [rbx+0x0],1
   14001e567:	add    BYTE PTR [rdx+0x54],al
   14001e56a:	add    BYTE PTR [rax],al
   14001e56c:	hlt    
   14001e56d:	jp     0x14001e570
   14001e56f:	add    BYTE PTR [rax+0x54],dl
   14001e572:	add    BYTE PTR [rax],al
   14001e574:	and    eax,0x55
   14001e579:	(bad)  
   14001e57a:	add    DWORD PTR [rax],eax
   14001e57c:	xor    BYTE PTR [rbp+0x0],dl
   14001e57f:	add    BYTE PTR [rdx-0xbffffab],ah
   14001e585:	jp     0x14001e588
   14001e587:	add    BYTE PTR [rax-0x2affffab],dh
   14001e58d:	push   rbp
   14001e58e:	add    BYTE PTR [rax],al
   14001e590:	cmp    BYTE PTR [rdx+0x55d50001],al
   14001e596:	add    BYTE PTR [rax],al
   14001e598:	jo     0x14001e5f0
   14001e59a:	add    BYTE PTR [rax],al
   14001e59c:	and    BYTE PTR [rdx+0x56700001],al
   14001e5a2:	add    BYTE PTR [rax],al
   14001e5a4:	jns    0x14001e5fc
   14001e5a6:	add    BYTE PTR [rax],al
   14001e5a8:	adc    BYTE PTR [rdx+0x56800001],al
   14001e5ae:	add    BYTE PTR [rax],al
   14001e5b0:	ds push rdi
   14001e5b2:	add    BYTE PTR [rax],al
   14001e5b4:	rex.R (bad) 
   14001e5b6:	add    DWORD PTR [rax],eax
   14001e5b8:	rex push rdi
   14001e5ba:	add    BYTE PTR [rax],al
   14001e5bc:	pop    rax
   14001e5bd:	push   rdi
   14001e5be:	add    BYTE PTR [rax],al
   14001e5c0:	jl     0x14001e544
   14001e5c2:	add    DWORD PTR [rax],eax
   14001e5c4:	pop    rax
   14001e5c5:	push   rdi
   14001e5c6:	add    BYTE PTR [rax],al
   14001e5c8:	lea    ebx,[rbx+0x0]
   14001e5cb:	add    BYTE PTR [rax-0x7e],ah
   14001e5ce:	add    DWORD PTR [rax],eax
   14001e5d0:	lea    ebx,[rbx+0x0]
   14001e5d3:	add    BYTE PTR [rdi+0x5000005b],cl
   14001e5d9:	(bad)  
   14001e5da:	add    DWORD PTR [rax],eax
   14001e5dc:	nop
   14001e5dd:	pop    rbx
   14001e5de:	add    BYTE PTR [rax],al
   14001e5e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e5e1:	pop    rsp
   14001e5e2:	add    BYTE PTR [rax],al
   14001e5e4:	mov    BYTE PTR [rdx+0x5cb00001],al
   14001e5ea:	add    BYTE PTR [rax],al
   14001e5ec:	(bad)  
   14001e5ed:	pop    rbp
   14001e5ee:	add    BYTE PTR [rax],al
   14001e5f0:	rol    BYTE PTR [rdx+0x5d060001],0x0
   14001e5f7:	add    ch,dl
   14001e5f9:	pop    rbp
   14001e5fa:	add    BYTE PTR [rax],al
   14001e5fc:	lods   al,BYTE PTR ds:[rsi]
   14001e5fd:	(bad)  
   14001e5fe:	add    DWORD PTR [rax],eax
   14001e600:	(bad)  
   14001e601:	pop    rbp
   14001e602:	add    BYTE PTR [rax],al
   14001e604:	(bad)  
   14001e605:	pop    rdi
   14001e606:	add    BYTE PTR [rax],al
   14001e608:	pushf  
   14001e609:	(bad)  
   14001e60a:	add    DWORD PTR [rax],eax
   14001e60c:	rcr    BYTE PTR [rdi+0x0],1
   14001e60f:	add    BYTE PTR [rcx+0x60],bh
   14001e612:	add    BYTE PTR [rax],al
   14001e614:	int3   
   14001e615:	(bad)  
   14001e616:	add    DWORD PTR [rax],eax
   14001e618:	and    BYTE PTR [rax+0x0],0x0
   14001e61c:	movabs ds:0xb0000182e0000062,eax
   14001e625:	(bad)  
   14001e626:	add    BYTE PTR [rax],al
   14001e628:	rex.WRX jae 0x14001e62b
   14001e62b:	add    al,dh
   14001e62d:	(bad)  
   14001e62e:	add    DWORD PTR [rax],eax
   14001e630:	push   rax
   14001e631:	jae    0x14001e633
   14001e633:	add    dh,bh
   14001e635:	je     0x14001e637
   14001e637:	add    BYTE PTR [rax],dl
   14001e639:	add    DWORD PTR [rcx],0x0
   14001e63c:	add    BYTE PTR [rbp+0x0],dh
   14001e63f:	add    BYTE PTR [rcx],bh
   14001e641:	test   DWORD PTR [rax],eax
   14001e643:	add    BYTE PTR [rbx+rax*4],ah
   14001e646:	add    DWORD PTR [rax],eax
   14001e648:	rex test DWORD PTR [rax],eax
   14001e64b:	add    BYTE PTR [rax+0x64000085],ch
   14001e651:	add    DWORD PTR [rcx],0x0
   14001e654:	test   al,0x85
   14001e656:	add    BYTE PTR [rax],al
   14001e658:	sub    BYTE PTR [rsi-0x7cb00000],al
   14001e65e:	add    DWORD PTR [rax],eax
   14001e660:	sub    BYTE PTR [rsi-0x79be0000],al
   14001e666:	add    BYTE PTR [rax],al
   14001e668:	rex add DWORD PTR [rcx],0x0
   14001e66c:	push   rax
   14001e66d:	xchg   BYTE PTR [rax],al
   14001e66f:	add    BYTE PTR [rsi+rax*4-0x7c880000],dh
   14001e676:	add    DWORD PTR [rax],eax
   14001e678:	rol    BYTE PTR [rsi-0x79330000],0x0
   14001e67f:	add    ah,ch
   14001e681:	add    DWORD PTR [rcx],0x0
   14001e684:	int    0x86
   14001e686:	add    BYTE PTR [rax],al
   14001e688:	rol    BYTE PTR [rsi-0x7c280000],cl
   14001e68e:	add    DWORD PTR [rax],eax
   14001e690:	rol    BYTE PTR [rsi-0x78640000],cl
   14001e696:	add    BYTE PTR [rax],al
   14001e698:	(bad)
   14001e69c:	pushf  
   14001e69d:	xchg   DWORD PTR [rax],eax
   14001e69f:	add    dl,ch
   14001e6a1:	xchg   DWORD PTR [rax],eax
   14001e6a3:	add    BYTE PTR [rax-0x15fffe7d],dh
   14001e6a9:	xchg   DWORD PTR [rax],eax
   14001e6ab:	add    BYTE PTR [rdx-0x5fffff78],al
   14001e6b1:	add    DWORD PTR [rcx],0x0
   14001e6b4:	(bad)  
   14001e6b5:	mov    BYTE PTR [rax],al
   14001e6b7:	add    BYTE PTR [rax+rcx*4-0x7c700000],dh
   14001e6be:	add    DWORD PTR [rax],eax
   14001e6c0:	mov    ah,0x88
   14001e6c2:	add    BYTE PTR [rax],al
   14001e6c4:	loop   0x14001e64e
   14001e6c6:	add    BYTE PTR [rax],al
   14001e6c8:	add    BYTE PTR [rbx-0x770fffff],0x0
   14001e6cf:	add    BYTE PTR [rcx-0x47ffff77],ah
   14001e6d5:	jge    0x14001e6d8
   14001e6d7:	add    BYTE PTR [rax+0x61000089],dh
   14001e6dd:	mov    al,BYTE PTR [rax]
   14001e6df:	add    BYTE PTR [rax+0x7000017d],bh
   14001e6e5:	mov    al,BYTE PTR [rax]
   14001e6e7:	add    BYTE PTR [rip+0xffffffffec00008b],ah        # 0x12c01e778
   14001e6ed:	jl     0x14001e6f0
   14001e6ef:	add    BYTE PTR [rax],dh
   14001e6f1:	mov    eax,DWORD PTR [rax]
   14001e6f3:	add    BYTE PTR [rsi-0x47ffff75],bl
   14001e6f9:	jg     0x14001e6fc
   14001e6fb:	add    BYTE PTR [rax+0x5500008b],ah
   14001e701:	mov    WORD PTR [rax],es
   14001e703:	add    ah,ch
   14001e705:	jl     0x14001e708
   14001e707:	add    BYTE PTR [rax-0x74],ah
   14001e70a:	add    BYTE PTR [rax],al
   14001e70c:	ror    BYTE PTR [rax+rax*1+0x17af400],cl
   14001e713:	add    al,ah
   14001e715:	mov    WORD PTR [rax],es
   14001e717:	add    BYTE PTR [rdi+0x3800008d],ah
   14001e71d:	test   BYTE PTR [rcx],al
   14001e71f:	add    BYTE PTR [rdi-0x4bffff73],ah
   14001e725:	xchg   esp,eax
   14001e726:	add    BYTE PTR [rax],al
   14001e728:	and    BYTE PTR [rcx+rax*1+0x94b400],al
   14001e72f:	add    BYTE PTR [rcx-0x7ffff6b],dl
   14001e735:	add    DWORD PTR [rcx],0x0
   14001e738:	xchg   ecx,eax
   14001e739:	xchg   ebp,eax
   14001e73a:	add    BYTE PTR [rax],al
   14001e73c:	fwait
   14001e73d:	xchg   ebp,eax
   14001e73e:	add    BYTE PTR [rax],al
   14001e740:	or     BYTE PTR [rcx+rax*1+0x959b00],al
   14001e747:	add    BYTE PTR [rax],ah
   14001e749:	xchg   esi,eax
   14001e74a:	add    BYTE PTR [rax],al
   14001e74c:	clc    
   14001e74d:	add    DWORD PTR [rcx],0x0
   14001e750:	and    BYTE PTR [rsi-0x692f0000],dl
   14001e756:	add    BYTE PTR [rax],al
   14001e758:	mov    eax,0xe000017d
   14001e75d:	xchg   esi,eax
   14001e75e:	add    BYTE PTR [rax],al
   14001e760:	rex.WRX xchg rdi,rax
   14001e762:	add    BYTE PTR [rax],al
   14001e764:	mov    eax,0x5000017f
   14001e769:	xchg   edi,eax
   14001e76a:	add    BYTE PTR [rax],al
   14001e76c:	add    eax,0xec000098
   14001e771:	jl     0x14001e774
   14001e773:	add    BYTE PTR [rax],dl
   14001e775:	cwde   
   14001e776:	add    BYTE PTR [rax],al
   14001e778:	push   rsi
   14001e779:	cwde   
   14001e77a:	add    BYTE PTR [rax],al
   14001e77c:	js     0x14001e701
   14001e77e:	add    DWORD PTR [rax],eax
   14001e780:	(bad)  
   14001e781:	cwde   
   14001e782:	add    BYTE PTR [rax],al
   14001e784:	out    0x99,eax
   14001e786:	add    BYTE PTR [rax],al
   14001e788:	pop    rax
   14001e789:	test   BYTE PTR [rcx],al
   14001e78b:	add    al,dh
   14001e78d:	cdq    
   14001e78e:	add    BYTE PTR [rax],al
   14001e790:	rex.WRB (bad) 
   14001e792:	add    BYTE PTR [rax],al
   14001e794:	add    al,0x85
   14001e796:	add    DWORD PTR [rax],eax
   14001e798:	rex.WRB (bad) 
   14001e79a:	add    BYTE PTR [rax],al
   14001e79c:	out    dx,al
   14001e79d:	(bad)  
   14001e79e:	add    BYTE PTR [rax],al
   14001e7a0:	js     0x14001e726
   14001e7a2:	add    DWORD PTR [rax],eax
   14001e7a4:	out    dx,al
   14001e7a5:	(bad)  
   14001e7a6:	add    BYTE PTR [rax],al
   14001e7a8:	cli    
   14001e7a9:	(bad)  
   14001e7aa:	add    BYTE PTR [rax],al
   14001e7ac:	push   0x184
   14001e7b1:	fwait
   14001e7b2:	add    BYTE PTR [rax],al
   14001e7b4:	outs   dx,BYTE PTR ds:[rsi]
   14001e7b5:	fwait
   14001e7b6:	add    BYTE PTR [rax],al
   14001e7b8:	mov    eax,0x7000017f
   14001e7bd:	fwait
   14001e7be:	add    BYTE PTR [rax],al
   14001e7c0:	adc    DWORD PTR [rbp-0x7b740000],ebx
   14001e7c6:	add    DWORD PTR [rax],eax
   14001e7c8:	and    BYTE PTR [rbp-0x62870000],bl
   14001e7ce:	add    BYTE PTR [rax],al
   14001e7d0:	rol    BYTE PTR [rcx+rax*1+0x9d7900],1
   14001e7d7:	add    dh,ah
   14001e7d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e7da:	add    BYTE PTR [rax],al
   14001e7dc:	mov    al,0x84
   14001e7de:	add    DWORD PTR [rax],eax
   14001e7e0:	out    0xa6,al
   14001e7e2:	add    BYTE PTR [rax],al
   14001e7e4:	mul    BYTE PTR [rsi-0x7b600000]
   14001e7ea:	add    DWORD PTR [rax],eax
   14001e7ec:	add    BYTE PTR [rdi-0x58a30000],ah
   14001e7f2:	add    BYTE PTR [rax],al
   14001e7f4:	add    al,0x85
   14001e7f6:	add    DWORD PTR [rax],eax
   14001e7f8:	pop    rbp
   14001e7f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e7fa:	add    BYTE PTR [rax],al
   14001e7fc:	(bad)  
   14001e7fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e7fe:	add    BYTE PTR [rax],al
   14001e800:	lock test BYTE PTR [rcx],al
   14001e803:	add    dh,bh
   14001e805:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e806:	add    BYTE PTR [rax],al
   14001e808:	or     ch,BYTE PTR [rax-0x7b200000]
   14001e80e:	add    DWORD PTR [rax],eax
   14001e810:	adc    BYTE PTR [rax-0x517d0000],ch
   14001e816:	add    BYTE PTR [rax],al
   14001e818:	adc    BYTE PTR [rbp-0x516fffff],al
   14001e81e:	add    BYTE PTR [rax],al
   14001e820:	movabs eax,ds:0xa1000185600000ae
   14001e829:	scas   al,BYTE PTR es:[rdi]
   14001e82a:	add    BYTE PTR [rax],al
   14001e82c:	and    bh,BYTE PTR [rbx-0x7ac80000]
   14001e832:	add    DWORD PTR [rax],eax
   14001e834:	and    bh,BYTE PTR [rbx-0x44a80000]
   14001e83a:	add    BYTE PTR [rax],al
   14001e83c:	sub    BYTE PTR [rbp-0x449fffff],al
   14001e842:	add    BYTE PTR [rax],al
   14001e844:	mov    ch,0xbc
   14001e846:	add    BYTE PTR [rax],al
   14001e848:	mov    ah,0x85
   14001e84a:	add    DWORD PTR [rax],eax
   14001e84c:	mov    ch,0xbc
   14001e84e:	add    BYTE PTR [rax],al
   14001e850:	int    0xbc
   14001e852:	add    BYTE PTR [rax],al
   14001e854:	movabs al,ds:0x110000bccd000185
   14001e85d:	(bad)  
   14001e85e:	add    BYTE PTR [rax],al
   14001e860:	mov    WORD PTR [rbp-0x3beeffff],es
   14001e866:	add    BYTE PTR [rax],al
   14001e868:	test   ch,0x0
   14001e86b:	add    BYTE PTR [rbp+rax*4+0x1],bh
   14001e86f:	add    dh,dh
   14001e871:	(bad)
   14001e874:	shufps xmm0,XMMWORD PTR [rax],0x0
   14001e878:	ins    BYTE PTR es:[rdi],dx
   14001e879:	test   DWORD PTR [rcx],eax
   14001e87b:	add    BYTE PTR [rax],dl
   14001e87d:	mov    BYTE PTR [rax],0x0
   14001e880:	sub    esi,eax
   14001e882:	add    BYTE PTR [rax],al
   14001e884:	xchg   BYTE PTR fs:[rcx],al
   14001e887:	add    BYTE PTR [rcx],ch
   14001e889:	mov    BYTE PTR [rax],0x0
   14001e88c:	pushf  
   14001e88d:	leave  
   14001e88e:	add    BYTE PTR [rax],al
   14001e890:	xchg   BYTE PTR [rcx],r8b
   14001e893:	add    BYTE PTR [rcx+rcx*8-0x34ca0000],bl
   14001e89a:	add    BYTE PTR [rax],al
   14001e89c:	xor    BYTE PTR [rsi-0x34c9ffff],al
   14001e8a2:	add    BYTE PTR [rax],al
   14001e8a4:	xchg   esi,eax
   14001e8a5:	rol    DWORD PTR [rax],cl
   14001e8a7:	add    BYTE PTR [rsi+rax*4],bl
   14001e8aa:	add    DWORD PTR [rax],eax
   14001e8ac:	xchg   esi,eax
   14001e8ad:	rol    DWORD PTR [rax],cl
   14001e8af:	add    BYTE PTR [rax+0xc0000d4],ah
   14001e8b5:	xchg   BYTE PTR [rcx],al
   14001e8b7:	add    BYTE PTR [rax-0x4dffff2c],ah
   14001e8bd:	(bad)  
   14001e8be:	add    BYTE PTR [rax],al
   14001e8c0:	clc    
   14001e8c1:	test   DWORD PTR [rcx],eax
   14001e8c3:	add    BYTE PTR [rdx-0x6fffff2c],dh
   14001e8c9:	fld    DWORD PTR [rax]
   14001e8cb:	add    BYTE PTR [rsi+rax*4],cl
   14001e8ce:	add    DWORD PTR [rax],eax
   14001e8d0:	nop
   14001e8d1:	fld    DWORD PTR [rax]
   14001e8d3:	add    bl,dh
   14001e8d5:	fld    DWORD PTR [rax]
   14001e8d7:	add    ah,bl
   14001e8d9:	test   DWORD PTR [rcx],eax
   14001e8db:	add    bl,dh
   14001e8dd:	fld    DWORD PTR [rax]
   14001e8df:	add    BYTE PTR [rdx],dh
   14001e8e1:	fiadd  DWORD PTR [rax]
   14001e8e3:	add    ah,cl
   14001e8e5:	test   DWORD PTR [rcx],eax
   14001e8e7:	add    BYTE PTR [rax-0x26],al
   14001e8ea:	add    BYTE PTR [rax],al
   14001e8ec:	popf   
   14001e8ed:	fiadd  DWORD PTR [rax]
   14001e8ef:	add    BYTE PTR [rax*4-0x2562ffff],al
   14001e8f6:	add    BYTE PTR [rax],al
   14001e8f8:	fild   DWORD PTR ds:[rax]
   14001e8fb:	add    BYTE PTR [rax+0x3e000186],al
   14001e901:	fild   DWORD PTR [rax]
   14001e903:	add    BYTE PTR [rdx-0x25],cl
   14001e906:	add    BYTE PTR [rax],al
   14001e908:	jo     0x14001e890
   14001e90a:	add    DWORD PTR [rax],eax
   14001e90c:	push   rax
   14001e90d:	fild   DWORD PTR [rax]
   14001e90f:	add    al,al
   14001e911:	cld    
   14001e912:	add    BYTE PTR [rax],al
   14001e914:	xchg   esp,eax
   14001e915:	xchg   BYTE PTR [rcx],al
   14001e917:	add    al,al
   14001e919:	cld    
   14001e91a:	add    BYTE PTR [rax],al
   14001e91c:	or     esi,edi
   14001e91e:	add    BYTE PTR [rax],al
   14001e920:	mov    al,0x86
   14001e922:	add    DWORD PTR [rax],eax
   14001e924:	adc    dh,bh
   14001e926:	add    BYTE PTR [rax],al
   14001e928:	push   rsp
   14001e929:	cmp    al,0x1
   14001e92b:	add    ah,cl
   14001e92d:	xchg   BYTE PTR [rcx],al
   14001e92f:	add    BYTE PTR [rax+0x3c],dh
   14001e932:	add    DWORD PTR [rax],eax
   14001e934:	sub    bh,BYTE PTR [rsi]
   14001e936:	add    DWORD PTR [rax],eax
   14001e938:	call   0x17001eac3
   14001e93d:	add    DWORD PTR ds:[rax],eax
   14001e940:	rex.WX
   14001e941:	add    DWORD PTR ds:[rax],eax
   14001e944:	adc    BYTE PTR [rdi+0x1],bh
   14001e947:	add    BYTE PTR [rdx+0x3e],cl
   14001e94a:	add    DWORD PTR [rax],eax
   14001e94c:	in     al,0x3e
   14001e94e:	add    DWORD PTR [rax],eax
   14001e950:	and    al,0x87
   14001e952:	add    DWORD PTR [rax],eax
   14001e954:	in     al,0x3e
   14001e956:	add    DWORD PTR [rax],eax
   14001e958:	repnz add DWORD PTR ds:[rax],eax
   14001e95c:	adc    BYTE PTR [rdi+0x3ef20001],al
   14001e962:	add    DWORD PTR [rax],eax
   14001e964:	sti    
   14001e965:	add    DWORD PTR ds:[rax],eax
   14001e968:	add    BYTE PTR [rdi+0x3f000001],al
   14001e96e:	add    DWORD PTR [rax],eax
   14001e970:	test   DWORD PTR [rdi],edi
   14001e972:	add    DWORD PTR [rax],eax
   14001e974:	mov    eax,0x9000017d
   14001e979:	(bad)  
   14001e97a:	add    DWORD PTR [rax],eax
   14001e97c:	sar    BYTE PTR [rdi],0x1
   14001e97f:	add    al,bl
   14001e981:	jg     0x14001e984
   14001e983:	add    al,al
   14001e985:	(bad)  
   14001e986:	add    DWORD PTR [rax],eax
   14001e988:	(bad)  
   14001e989:	(bad)  
   14001e98a:	add    DWORD PTR [rax],eax
   14001e98c:	js     0x14001e911
   14001e98e:	add    DWORD PTR [rax],eax
   14001e990:	(bad)  
   14001e991:	(bad)  
   14001e992:	add    DWORD PTR [rax],eax
   14001e994:	rex.RB
   14001e995:	rex add DWORD PTR [rax],eax
   14001e998:	push   rax
   14001e999:	xchg   DWORD PTR [rcx],eax
   14001e99b:	add    BYTE PTR [rbp+0x40],al
   14001e99e:	add    DWORD PTR [rax],eax
   14001e9a0:	rex.WXB
   14001e9a1:	rex add DWORD PTR [rax],eax
   14001e9a4:	rex xchg DWORD PTR [rcx],eax
   14001e9a7:	add    BYTE PTR [rax+0x40],dl
   14001e9aa:	add    DWORD PTR [rax],eax
   14001e9ac:	and    al,BYTE PTR [rdx+0x1]
   14001e9af:	add    BYTE PTR [rax-0x79],ch
   14001e9b2:	add    DWORD PTR [rax],eax
   14001e9b4:	xor    BYTE PTR [rdx+0x1],al
   14001e9b7:	add    BYTE PTR [rcx],dl
   14001e9b9:	rex.XB add DWORD PTR [r8],eax
   14001e9bc:	jl     0x14001e945
   14001e9be:	add    DWORD PTR [rax],eax
   14001e9c0:	and    BYTE PTR [rbx+0x1],al
   14001e9c3:	add    BYTE PTR [rdx+0x43],dl
   14001e9c6:	add    DWORD PTR [rax],eax
   14001e9c8:	lods   al,BYTE PTR ds:[rsi]
   14001e9c9:	xchg   DWORD PTR [rcx],eax
   14001e9cb:	add    BYTE PTR [rdx+0x43],dl
   14001e9ce:	add    DWORD PTR [rax],eax
   14001e9d0:	and    eax,0x98000144
   14001e9d5:	xchg   DWORD PTR [rcx],eax
   14001e9d7:	add    BYTE PTR [rip+0x7b000144],ah        # 0x1bb01eb21
   14001e9dd:	add    DWORD PTR [rax],r8d
   14001e9e0:	mov    BYTE PTR [rdi+0x44800001],al
   14001e9e6:	add    DWORD PTR [rax],eax
   14001e9e8:	jnp    0x14001ea2f
   14001e9ea:	add    DWORD PTR [rax],eax
   14001e9ec:	loopne 0x14001e975
   14001e9ee:	add    DWORD PTR [rax],eax
   14001e9f0:	jnp    0x14001ea37
   14001e9f2:	add    DWORD PTR [rax],eax
   14001e9f4:	or     eax,DWORD PTR [rsi+0x1]
   14001e9f7:	add    ah,cl
   14001e9f9:	xchg   DWORD PTR [rcx],eax
   14001e9fb:	add    BYTE PTR [rbx],cl
   14001e9fd:	rex.RX add DWORD PTR [rax],r8d
   14001ea00:	imul   ecx,DWORD PTR [rax+0x1],0x187bc00
   14001ea07:	add    BYTE PTR [rax+0x48],dh
   14001ea0a:	add    DWORD PTR [rax],eax
   14001ea0c:	mov    ecx,0x58000148
   14001ea11:	add    BYTE PTR [rcx],0x0
   14001ea14:	ror    BYTE PTR [rax+0x1],0x0
   14001ea18:	ja     0x14001ea65
   14001ea1a:	add    DWORD PTR [rax],eax
   14001ea1c:	hlt    
   14001ea1d:	xchg   DWORD PTR [rcx],eax
   14001ea1f:	add    BYTE PTR [rax+0x3500014b],al
   14001ea25:	add    QWORD PTR [rax],r8
   14001ea28:	add    al,0x88
   14001ea2a:	add    DWORD PTR [rax],eax
   14001ea2c:	rex
   14001ea2d:	add    QWORD PTR [rax],r8
   14001ea30:	(bad)  
   14001ea31:	add    QWORD PTR [rax],r8
   14001ea34:	adc    al,0x88
   14001ea36:	add    DWORD PTR [rax],eax
   14001ea38:	loopne 0x14001ea86
   14001ea3a:	add    DWORD PTR [rax],eax
   14001ea3c:	hlt    
   14001ea3d:	add    QWORD PTR [r8],r8
   14001ea40:	rex.W mov BYTE PTR [rcx],al
   14001ea43:	add    ah,dh
   14001ea45:	add    QWORD PTR [r8],r8
   14001ea48:	(bad)  
   14001ea49:	rex.WRX add QWORD PTR [rax],r8
   14001ea4c:	xor    al,0x88
   14001ea4e:	add    DWORD PTR [rax],eax
   14001ea50:	(bad)  
   14001ea51:	rex.WRX add QWORD PTR [rax],r8
   14001ea54:	loop   0x14001eaa5
   14001ea56:	add    DWORD PTR [rax],eax
   14001ea58:	and    al,0x88
   14001ea5a:	add    DWORD PTR [rax],eax
   14001ea5c:	pushf  
   14001ea5d:	push   rax
   14001ea5e:	add    DWORD PTR [rax],eax
   14001ea60:	rex.WR push rcx
   14001ea62:	add    DWORD PTR [rax],eax
   14001ea64:	pop    rax
   14001ea65:	mov    BYTE PTR [rcx],al
   14001ea67:	add    BYTE PTR [rcx+rdx*2+0x1],cl
   14001ea6b:	add    BYTE PTR [rbx+0x51],ah
   14001ea6e:	add    DWORD PTR [rax],eax
   14001ea70:	in     al,dx
   14001ea71:	jp     0x14001ea74
   14001ea73:	add    BYTE PTR [rcx+rdx*2+0x1],ah
   14001ea77:	add    ch,cl
   14001ea79:	push   rcx
   14001ea7a:	add    DWORD PTR [rax],eax
   14001ea7c:	mov    eax,0xd000017d
   14001ea81:	push   rcx
   14001ea82:	add    DWORD PTR [rax],eax
   14001ea84:	xor    eax,0x78000152
   14001ea89:	mov    BYTE PTR [rcx],al
   14001ea8b:	add    BYTE PTR [rax],bh
   14001ea8d:	push   rdx
   14001ea8e:	add    DWORD PTR [rax],eax
   14001ea90:	mov    eax,0x88000153
   14001ea95:	mov    BYTE PTR [rcx],al
   14001ea97:	add    BYTE PTR [rax-0x62fffead],bh
   14001ea9d:	push   rsp
   14001ea9e:	add    DWORD PTR [rax],eax
   14001eaa0:	in     al,dx
   14001eaa1:	jp     0x14001eaa4
   14001eaa3:	add    BYTE PTR [rax-0x4dfffeac],ah
   14001eaa9:	push   rsp
   14001eaaa:	add    DWORD PTR [rax],eax
   14001eaac:	in     al,dx
   14001eaad:	jp     0x14001eab0
   14001eaaf:	add    ah,cl
   14001eab1:	push   rsp
   14001eab2:	add    DWORD PTR [rax],eax
   14001eab4:	(bad)  
   14001eab5:	push   rbp
   14001eab6:	add    DWORD PTR [rax],eax
   14001eab8:	lods   al,BYTE PTR ds:[rsi]
   14001eab9:	mov    BYTE PTR [rcx],al
   14001eabb:	add    BYTE PTR [rax],bl
   14001eabd:	push   rbp
   14001eabe:	add    DWORD PTR [rax],eax
   14001eac0:	jbe    0x14001eb17
   14001eac2:	add    DWORD PTR [rax],eax
   14001eac4:	(bad)  
   14001eac5:	mov    BYTE PTR [rcx],al
   14001eac7:	add    BYTE PTR [rax+0x55],bh
   14001eaca:	add    DWORD PTR [rax],eax
   14001eacc:	mov    ecx,0xec000155
   14001ead1:	jp     0x14001ead4
   14001ead3:	add    BYTE PTR [rbp+rdx*2+0x55d40001],bh
   14001eada:	add    DWORD PTR [rax],eax
   14001eadc:	in     al,dx
   14001eadd:	jp     0x14001eae0
   14001eadf:	add    ah,bl
   14001eae1:	push   rbp
   14001eae2:	add    DWORD PTR [rax],eax
   14001eae4:	adc    al,0x56
   14001eae6:	add    DWORD PTR [rax],eax
   14001eae8:	fdivr  DWORD PTR [rdi+0x1]
   14001eaeb:	add    BYTE PTR [rsi+rdx*2],dl
   14001eaee:	add    DWORD PTR [rax],eax
   14001eaf0:	rex.WR push rsi
   14001eaf2:	add    DWORD PTR [rax],eax
   14001eaf4:	fdivr  DWORD PTR [rdi+0x1]
   14001eaf7:	add    al,ah
   14001eaf9:	push   rsi
   14001eafa:	add    DWORD PTR [rax],eax
   14001eafc:	and    DWORD PTR [rdi+0x1],edx
   14001eaff:	add    ah,bh
   14001eb01:	mov    BYTE PTR [rcx],al
   14001eb03:	add    BYTE PTR [rdi+rdx*2],dh
   14001eb06:	add    DWORD PTR [rax],eax
   14001eb08:	out    0x57,eax
   14001eb0a:	add    DWORD PTR [rax],eax
   14001eb0c:	sbb    al,0x89
   14001eb0e:	add    DWORD PTR [rax],eax
   14001eb10:	add    BYTE PTR [rax+0x1],bl
   14001eb13:	add    BYTE PTR [rax+rbx*2],bh
   14001eb16:	add    DWORD PTR [rax],eax
   14001eb18:	cmp    BYTE PTR [rbx+0x1],bh
   14001eb1b:	add    BYTE PTR [rax+0x58],al
   14001eb1e:	add    DWORD PTR [rax],eax
   14001eb20:	jle    0x14001eb7a
   14001eb22:	add    DWORD PTR [rax],eax
   14001eb24:	(bad)  
   14001eb25:	jnp    0x14001eb28
   14001eb27:	add    BYTE PTR [rax-0x40fffea8],al
   14001eb2d:	pop    rax
   14001eb2e:	add    DWORD PTR [rax],eax
   14001eb30:	push   rax
   14001eb31:	jl     0x14001eb34
   14001eb33:	add    BYTE PTR [rdi-0x27fffea8],bh
   14001eb39:	pop    rax
   14001eb3a:	add    DWORD PTR [rax],eax
   14001eb3c:	or     BYTE PTR [rax+0x58d80001],0x1
   14001eb43:	add    ah,dh
   14001eb45:	pop    rax
   14001eb46:	add    DWORD PTR [rax],eax
   14001eb48:	or     BYTE PTR [rax+0x58f40001],0x1
   14001eb4f:	add    BYTE PTR [rbx],dh
   14001eb51:	pop    rcx
   14001eb52:	add    DWORD PTR [rax],eax
   14001eb54:	or     BYTE PTR [rax+0x59330001],0x1
   14001eb5b:	add    BYTE PTR [rbp+0x59],bl
   14001eb5e:	add    DWORD PTR [rax],eax
   14001eb60:	or     BYTE PTR [rax+0x59600001],0x1
   14001eb67:	add    BYTE PTR [rcx-0x7ffffea7],al
   14001eb6d:	mov    BYTE PTR [rcx],al
   14001eb6f:	add    BYTE PTR [rax-0x4efffea7],dl
   14001eb75:	pop    rcx
   14001eb76:	add    DWORD PTR [rax],eax
   14001eb78:	in     al,dx
   14001eb79:	jp     0x14001eb7c
   14001eb7b:	add    al,al
   14001eb7d:	pop    rcx
   14001eb7e:	add    DWORD PTR [rax],eax
   14001eb80:	loope  0x14001ebdb
   14001eb82:	add    DWORD PTR [rax],eax
   14001eb84:	in     al,dx
   14001eb85:	jp     0x14001eb88
   14001eb87:	add    al,dh
   14001eb89:	pop    rcx
   14001eb8a:	add    DWORD PTR [rax],eax
   14001eb8c:	adc    DWORD PTR [rdx+0x1],ebx
   14001eb8f:	add    ah,ch
   14001eb91:	jp     0x14001eb94
   14001eb93:	add    al,al
   14001eb95:	pop    rdx
   14001eb96:	add    DWORD PTR [rax],eax
   14001eb98:	cld    
   14001eb99:	pop    rdx
   14001eb9a:	add    DWORD PTR [rax],eax
   14001eb9c:	in     al,dx
   14001eb9d:	jp     0x14001eba0
   14001eb9f:	add    BYTE PTR [rax],al
   14001eba1:	pop    rbx
   14001eba2:	add    DWORD PTR [rax],eax
   14001eba4:	cmp    al,0x5b
   14001eba6:	add    DWORD PTR [rax],eax
   14001eba8:	in     al,dx
   14001eba9:	jp     0x14001ebac
   14001ebab:	add    BYTE PTR [rax+0x5b],al
   14001ebae:	add    DWORD PTR [rax],eax
   14001ebb0:	jl     0x14001ec0d
   14001ebb2:	add    DWORD PTR [rax],eax
   14001ebb4:	in     al,dx
   14001ebb5:	jp     0x14001ebb8
   14001ebb7:	add    BYTE PTR [rax-0x25fffea5],al
   14001ebbd:	pop    rbx
   14001ebbe:	add    DWORD PTR [rax],eax
   14001ebc0:	js     0x14001eb45
   14001ebc2:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

000000014001f000 <.rsrc>:
	...
   14001f008:	add    al,0x0
   14001f00a:	add    BYTE PTR [rax],al
   14001f00c:	add    BYTE PTR [rax],al
   14001f00e:	add    DWORD PTR [rax],eax
   14001f010:	sbb    BYTE PTR [rax],al
   14001f012:	add    BYTE PTR [rax],al
   14001f014:	sbb    BYTE PTR [rax],al
   14001f016:	add    BYTE PTR [rax+0x0],al
   14001f01c:	add    BYTE PTR [rax],al
   14001f01e:	add    BYTE PTR [rax],al
   14001f020:	add    al,0x0
   14001f022:	add    BYTE PTR [rax],al
   14001f024:	add    BYTE PTR [rax],al
   14001f026:	add    DWORD PTR [rax],eax
   14001f028:	add    DWORD PTR [rax],eax
   14001f02a:	add    BYTE PTR [rax],al
   14001f02c:	xor    BYTE PTR [rax],al
   14001f02e:	add    BYTE PTR [rax+0x0],al
   14001f034:	add    BYTE PTR [rax],al
   14001f036:	add    BYTE PTR [rax],al
   14001f038:	add    al,0x0
   14001f03a:	add    BYTE PTR [rax],al
   14001f03c:	add    BYTE PTR [rax],al
   14001f03e:	add    DWORD PTR [rax],eax
   14001f040:	or     DWORD PTR [rax+rax*1],eax
   14001f043:	add    BYTE PTR [rax+0x0],cl
   14001f046:	add    BYTE PTR [rax],al
   14001f048:	pop    rax
   14001f049:	lock add DWORD PTR [rax],eax
   14001f04c:	push   0x3
   14001f04e:	add    BYTE PTR [rax],al
   14001f050:	in     al,0x4
   14001f052:	add    BYTE PTR [rax],al
   14001f054:	add    BYTE PTR [rax],al
   14001f056:	add    BYTE PTR [rax],al
   14001f058:	cmp    al,0x61
   14001f05a:	jae    0x14001f0cf
   14001f05c:	gs ins DWORD PTR es:[rdi],dx
   14001f05e:	(bad)  
   14001f05f:	ins    BYTE PTR es:[rdi],dx
   14001f060:	jns    0x14001f082
   14001f062:	js     0x14001f0d1
   14001f064:	ins    BYTE PTR es:[rdi],dx
   14001f065:	outs   dx,BYTE PTR ds:[rsi]
   14001f066:	jae    0x14001f0a5
   14001f068:	and    dh,BYTE PTR [rbp+0x72]
   14001f06b:	outs   dx,BYTE PTR ds:[rsi]
   14001f06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001f06f:	push   0x73616d65
   14001f074:	sub    eax,0x7263696d
   14001f079:	outs   dx,DWORD PTR ds:[rsi]
   14001f07a:	jae    0x14001f0eb
   14001f07c:	data16 je 0x14001f0ac
   14001f07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001f082:	cmp    ah,BYTE PTR [rcx+0x73]
   14001f085:	ins    DWORD PTR es:[rdi],dx
   14001f086:	cs jbe 0x14001f0ba
   14001f089:	and    ah,BYTE PTR [rax]
   14001f08b:	ins    DWORD PTR es:[rdi],dx
   14001f08c:	(bad)  
   14001f08d:	outs   dx,BYTE PTR ds:[rsi]
   14001f08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001f095:	jb     0x14001f10a
   14001f097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001f09e:	xor    BYTE PTR [rdx],ah
   14001f0a0:	ds or  eax,0x3c20200a
   14001f0a6:	je     0x14001f11a
   14001f0a8:	jne    0x14001f11d
   14001f0aa:	je     0x14001f0f5
   14001f0ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f0ad:	outs   dx,WORD PTR ds:[rsi]
   14001f0af:	and    BYTE PTR [rax+0x6d],bh
   14001f0b2:	ins    BYTE PTR es:[rdi],dx
   14001f0b3:	outs   dx,BYTE PTR ds:[rsi]
   14001f0b4:	jae    0x14001f0f3
   14001f0b6:	and    dh,BYTE PTR [rbp+0x72]
   14001f0b9:	outs   dx,BYTE PTR ds:[rsi]
   14001f0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14001f0bd:	push   0x73616d65
   14001f0c2:	sub    eax,0x7263696d
   14001f0c7:	outs   dx,DWORD PTR ds:[rsi]
   14001f0c8:	jae    0x14001f139
   14001f0ca:	data16 je 0x14001f0fa
   14001f0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001f0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14001f0d3:	ins    DWORD PTR es:[rdi],dx
   14001f0d4:	cs jbe 0x14001f10a
   14001f0d7:	and    bh,BYTE PTR [rsi]
   14001f0d9:	or     eax,0x2020200a
   14001f0de:	and    BYTE PTR [rbx+rsi*2],bh
   14001f0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001f0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001f0ed:	and    BYTE PTR [rax],ah
   14001f0ef:	and    BYTE PTR [rax],ah
   14001f0f1:	cmp    al,0x72
   14001f0f3:	gs jno 0x14001f16b
   14001f0f6:	gs jae 0x14001f16d
   14001f0f9:	gs fs push rax
   14001f0fc:	jb     0x14001f167
   14001f0fe:	jbe    0x14001f169
   14001f100:	ins    BYTE PTR es:[rdi],dx
   14001f101:	gs addr32 gs jae 0x14001f144
   14001f106:	or     eax,0x2020200a
   14001f10b:	and    BYTE PTR [rax],ah
   14001f10d:	and    BYTE PTR [rax],ah
   14001f10f:	and    BYTE PTR [rdx+rsi*2],bh
   14001f112:	gs jno 0x14001f18a
   14001f115:	gs jae 0x14001f18c
   14001f118:	gs fs rex.RB js 0x14001f182
   14001f11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14001f120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001f127:	ins    BYTE PTR es:[rdi],dx
   14001f128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001f12c:	gs ins BYTE PTR es:[rdi],dx
   14001f12e:	cmp    eax,0x49736122
   14001f133:	outs   dx,BYTE PTR ds:[rsi]
   14001f134:	jbe    0x14001f1a5
   14001f136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001f13a:	and    BYTE PTR [rbp+0x69],dh
   14001f13d:	movsxd esp,DWORD PTR [r11+0x65]
   14001f141:	jae    0x14001f1b6
   14001f143:	cmp    eax,0x6c616622
   14001f148:	jae    0x14001f1af
   14001f14a:	and    bh,BYTE PTR [rsi]
   14001f14c:	cmp    al,0x2f
   14001f14e:	jb     0x14001f1b5
   14001f150:	jno    0x14001f1c7
   14001f152:	gs jae 0x14001f1c9
   14001f155:	gs fs rex.RB js 0x14001f1bf
   14001f15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001f15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001f164:	ins    BYTE PTR es:[rdi],dx
   14001f165:	ds or  eax,0x2020200a
   14001f16b:	and    BYTE PTR [rax],ah
   14001f16d:	and    BYTE PTR [rdi+rbp*1],bh
   14001f170:	jb     0x14001f1d7
   14001f172:	jno    0x14001f1e9
   14001f174:	gs jae 0x14001f1eb
   14001f177:	gs fs push rax
   14001f17a:	jb     0x14001f1e5
   14001f17c:	jbe    0x14001f1e7
   14001f17e:	ins    BYTE PTR es:[rdi],dx
   14001f17f:	gs addr32 gs jae 0x14001f1c2
   14001f184:	or     eax,0x2020200a
   14001f189:	and    BYTE PTR [rdi+rbp*1],bh
   14001f18c:	jae    0x14001f1f3
   14001f18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14001f191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001f199:	cmp    al,0x2f
   14001f19b:	je     0x14001f20f
   14001f19d:	jne    0x14001f212
   14001f19f:	je     0x14001f1ea
   14001f1a1:	outs   dx,BYTE PTR ds:[rsi]
   14001f1a2:	outs   dx,WORD PTR ds:[rsi]
   14001f1a4:	ds or  eax,0x3c20200a
   14001f1aa:	fs gs jo 0x14001f213
   14001f1ae:	outs   dx,BYTE PTR ds:[rsi]
   14001f1af:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f1b5:	or     eax,0x2020200a
   14001f1ba:	and    BYTE PTR [rsp+riz*2],bh
   14001f1bd:	gs jo  0x14001f225
   14001f1c0:	outs   dx,BYTE PTR ds:[rsi]
   14001f1c1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1c4:	je     0x14001f207
   14001f1c6:	jae    0x14001f23b
   14001f1c8:	gs ins DWORD PTR es:[rdi],dx
   14001f1ca:	(bad)  
   14001f1cb:	ins    BYTE PTR es:[rdi],dx
   14001f1cc:	jns    0x14001f20c
   14001f1ce:	or     eax,0x2020200a
   14001f1d3:	and    BYTE PTR [rax],ah
   14001f1d5:	and    BYTE PTR [rcx+riz*2],bh
   14001f1d8:	jae    0x14001f24d
   14001f1da:	gs ins DWORD PTR es:[rdi],dx
   14001f1dc:	(bad)  
   14001f1dd:	ins    BYTE PTR es:[rdi],dx
   14001f1de:	jns    0x14001f229
   14001f1e0:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1e3:	je     0x14001f24e
   14001f1e5:	je     0x14001f260
   14001f1e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001f1eb:	gs cmp eax,0x6e697722
   14001f1f1:	xor    esi,DWORD PTR [rdx]
   14001f1f3:	and    ah,BYTE PTR [rax]
   14001f1f5:	outs   dx,BYTE PTR ds:[rsi]
   14001f1f6:	(bad)  
   14001f1f7:	ins    DWORD PTR es:[rdi],dx
   14001f1f8:	gs cmp eax,0x63694d22
   14001f1fe:	jb     0x14001f26f
   14001f200:	jae    0x14001f271
   14001f202:	data16 je 0x14001f233
   14001f205:	push   rdi
   14001f206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001f20d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001f20f:	ins    DWORD PTR es:[rdi],dx
   14001f210:	ins    DWORD PTR es:[rdi],dx
   14001f211:	outs   dx,DWORD PTR ds:[rsi]
   14001f212:	outs   dx,BYTE PTR ds:[rsi]
   14001f213:	sub    eax,0x746e6f43
   14001f218:	jb     0x14001f289
   14001f21a:	ins    BYTE PTR es:[rdi],dx
   14001f21b:	jae    0x14001f23f
   14001f21d:	and    BYTE PTR [rsi+0x65],dh
   14001f220:	jb     0x14001f295
   14001f222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14001f229:	xor    BYTE PTR [rsi],ch
   14001f22b:	xor    BYTE PTR [rsi],ch
   14001f22d:	xor    BYTE PTR [rdx],ah
   14001f22f:	and    BYTE PTR [rax+0x75],dh
   14001f232:	(bad)  
   14001f233:	ins    BYTE PTR es:[rdi],dx
   14001f234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001f23b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001f23f:	and    dh,BYTE PTR [rsi]
   14001f241:	xor    eax,0x36623539
   14001f246:	xor    al,0x31
   14001f248:	xor    al,0x34
   14001f24a:	movsxd esp,DWORD PTR [rbx+0x66]
   14001f24d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14001f251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14001f255:	addr32 jne 0x14001f2b9
   14001f258:	addr32 gs cmp eax,0x20222a22
   14001f25f:	jo     0x14001f2d3
   14001f261:	outs   dx,DWORD PTR ds:[rsi]
   14001f262:	movsxd esp,DWORD PTR [rbp+0x73]
   14001f265:	jae    0x14001f2d6
   14001f267:	jb     0x14001f2aa
   14001f269:	jb     0x14001f2ce
   14001f26b:	push   0x63657469
   14001f270:	je     0x14001f2e7
   14001f272:	jb     0x14001f2d9
   14001f274:	cmp    eax,0x3e222a22
   14001f279:	cmp    al,0x2f
   14001f27b:	(bad)  
   14001f27c:	jae    0x14001f2f1
   14001f27e:	gs ins DWORD PTR es:[rdi],dx
   14001f280:	(bad)  
   14001f281:	ins    BYTE PTR es:[rdi],dx
   14001f282:	jns    0x14001f2cd
   14001f284:	fs outs dx,BYTE PTR gs:[rsi]
   14001f287:	je     0x14001f2f2
   14001f289:	je     0x14001f304
   14001f28b:	ds or  eax,0x2020200a
   14001f291:	and    BYTE PTR [rdi+rbp*1],bh
   14001f294:	fs gs jo 0x14001f2fd
   14001f298:	outs   dx,BYTE PTR ds:[rsi]
   14001f299:	fs outs dx,BYTE PTR gs:[rsi]
   14001f29c:	je     0x14001f2df
   14001f29e:	jae    0x14001f313
   14001f2a0:	gs ins DWORD PTR es:[rdi],dx
   14001f2a2:	(bad)  
   14001f2a3:	ins    BYTE PTR es:[rdi],dx
   14001f2a4:	jns    0x14001f2e4
   14001f2a6:	or     eax,0x3c20200a
   14001f2ab:	(bad)  
   14001f2ac:	fs gs jo 0x14001f315
   14001f2b0:	outs   dx,BYTE PTR ds:[rsi]
   14001f2b1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f2b7:	or     eax,0x3c20200a
   14001f2bc:	fs gs jo 0x14001f325
   14001f2c0:	outs   dx,BYTE PTR ds:[rsi]
   14001f2c1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f2c7:	or     eax,0x2020200a
   14001f2cc:	and    BYTE PTR [rsp+riz*2],bh
   14001f2cf:	gs jo  0x14001f337
   14001f2d2:	outs   dx,BYTE PTR ds:[rsi]
   14001f2d3:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2d6:	je     0x14001f319
   14001f2d8:	jae    0x14001f34d
   14001f2da:	gs ins DWORD PTR es:[rdi],dx
   14001f2dc:	(bad)  
   14001f2dd:	ins    BYTE PTR es:[rdi],dx
   14001f2de:	jns    0x14001f31e
   14001f2e0:	or     eax,0x2020200a
   14001f2e5:	and    BYTE PTR [rax],ah
   14001f2e7:	and    BYTE PTR [rcx+riz*2],bh
   14001f2ea:	jae    0x14001f35f
   14001f2ec:	gs ins DWORD PTR es:[rdi],dx
   14001f2ee:	(bad)  
   14001f2ef:	ins    BYTE PTR es:[rdi],dx
   14001f2f0:	jns    0x14001f33b
   14001f2f2:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2f5:	je     0x14001f360
   14001f2f7:	je     0x14001f372
   14001f2f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001f2fd:	gs cmp eax,0x6e697722
   14001f303:	xor    esi,DWORD PTR [rdx]
   14001f305:	and    ah,BYTE PTR [rax]
   14001f307:	outs   dx,BYTE PTR ds:[rsi]
   14001f308:	(bad)  
   14001f309:	ins    DWORD PTR es:[rdi],dx
   14001f30a:	gs cmp eax,0x63694d22
   14001f310:	jb     0x14001f381
   14001f312:	jae    0x14001f383
   14001f314:	data16 je 0x14001f345
   14001f317:	push   rsi
   14001f318:	rex.XB cmp DWORD PTR [r8],esi
   14001f31b:	cs rex.XB push r10
   14001f31e:	push   rsp
   14001f31f:	and    ah,BYTE PTR [rax]
   14001f321:	jbe    0x14001f388
   14001f323:	jb     0x14001f398
   14001f325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14001f32c:	xor    BYTE PTR [rsi],ch
   14001f32e:	xor    dh,BYTE PTR [rcx]
   14001f330:	xor    BYTE PTR [rdx],dh
   14001f332:	xor    ch,BYTE PTR [rsi]
   14001f334:	cmp    BYTE PTR [rdx],ah
   14001f336:	and    BYTE PTR [rax+0x72],dh
   14001f339:	outs   dx,DWORD PTR ds:[rsi]
   14001f33a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001f33d:	jae    0x14001f3ae
   14001f33f:	jb     0x14001f382
   14001f341:	jb     0x14001f3a6
   14001f343:	push   0x63657469
   14001f348:	je     0x14001f3bf
   14001f34a:	jb     0x14001f3b1
   14001f34c:	cmp    eax,0x646d6122
   14001f351:	ss xor al,0x22
   14001f354:	and    BYTE PTR [rax+0x75],dh
   14001f357:	(bad)  
   14001f358:	ins    BYTE PTR es:[rdi],dx
   14001f359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001f360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001f364:	and    dh,BYTE PTR [rcx]
   14001f366:	movsxd di,DWORD PTR [rax]
   14001f369:	(bad)  
   14001f36b:	(bad)  
   14001f36c:	cmp    DWORD PTR [rcx+0x31],esp
   14001f36f:	xor    DWORD PTR gs:[rax],edi
   14001f372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   14001f376:	ds cmp al,0x2f
   14001f379:	(bad)  
   14001f37a:	jae    0x14001f3ef
   14001f37c:	gs ins DWORD PTR es:[rdi],dx
   14001f37e:	(bad)  
   14001f37f:	ins    BYTE PTR es:[rdi],dx
   14001f380:	jns    0x14001f3cb
   14001f382:	fs outs dx,BYTE PTR gs:[rsi]
   14001f385:	je     0x14001f3f0
   14001f387:	je     0x14001f402
   14001f389:	ds or  eax,0x2020200a
   14001f38f:	and    BYTE PTR [rdi+rbp*1],bh
   14001f392:	fs gs jo 0x14001f3fb
   14001f396:	outs   dx,BYTE PTR ds:[rsi]
   14001f397:	fs outs dx,BYTE PTR gs:[rsi]
   14001f39a:	je     0x14001f3dd
   14001f39c:	jae    0x14001f411
   14001f39e:	gs ins DWORD PTR es:[rdi],dx
   14001f3a0:	(bad)  
   14001f3a1:	ins    BYTE PTR es:[rdi],dx
   14001f3a2:	jns    0x14001f3e2
   14001f3a4:	or     eax,0x3c20200a
   14001f3a9:	(bad)  
   14001f3aa:	fs gs jo 0x14001f413
   14001f3ae:	outs   dx,BYTE PTR ds:[rsi]
   14001f3af:	fs outs dx,BYTE PTR gs:[rsi]
   14001f3b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f3b5:	or     eax,0x612f3c0a
   14001f3ba:	jae    0x14001f42f
   14001f3bc:	gs ins DWORD PTR es:[rdi],dx
   14001f3be:	(bad)  
   14001f3bf:	ins    BYTE PTR es:[rdi],dx
   14001f3c0:	jns    0x14001f400
   14001f3c2:	push   rax
   14001f3c3:	rex.B

Disassembly of section .reloc:

0000000140020000 <.reloc>:
   140020000:	add    BYTE PTR [rax+0x1],ah
   140020003:	add    BYTE PTR [rax+rax*1],bl
   140020006:	add    BYTE PTR [rax],al
   140020008:	loopne 0x14001ffb4
   14002000a:	call   0x138acf0b9
   14002000f:	stos   BYTE PTR es:[rdi],al
   140020010:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140020016:	sub    BYTE PTR [rbx+0xab30],ch
   14002001c:	add    BYTE PTR [rax+0x1],dh
   14002001f:	add    BYTE PTR [rax+rax*1+0x0],al
   140020023:	add    BYTE PTR [rax-0x59],al
   140020026:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140020028:	push   rax
   140020029:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002002a:	pop    rax
   14002002b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002002c:	(bad)  
   14002002d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002002e:	push   0x78a770a7
   140020033:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020034:	and    BYTE PTR [rdi-0x586f5878],0x98
   14002003b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002003c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140020045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020046:	enter  0xd0a7,0xa7
   14002004a:	fsub   DWORD PTR [rdi-0x58175820]
   140020050:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020052:	clc    
   140020053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020054:	add    BYTE PTR [rax-0x57ef57f8],ch
   14002005a:	sbb    BYTE PTR [rax-0x56ff5708],ch
   140020060:	add    al,dl
   140020062:	add    DWORD PTR [rax],eax
   140020064:	sbb    BYTE PTR [rax],al
   140020066:	add    BYTE PTR [rax],al
   140020068:	add    BYTE PTR [rax-0x5fe75ff0],ah
   14002006e:	cmp    BYTE PTR [rax-0x5f875fa8],ah
   140020074:	and    BYTE PTR [rax+0x0],0x0
	...
