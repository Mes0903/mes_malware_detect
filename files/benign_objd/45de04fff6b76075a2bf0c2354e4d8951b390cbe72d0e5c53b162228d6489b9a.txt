
45de04fff6b76075a2bf0c2354e4d8951b390cbe72d0e5c53b162228d6489b9a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4975]        # 0x405990
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4976]        # 0x4059a0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4979]        # 0x4059b0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x493c]        # 0x405980
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x47cf]        # 0x405820
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4911]        # 0x405970
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402bb0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b70
  401081:	mov    rdx,QWORD PTR [rip+0x4828]        # 0x4058b0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x480e]        # 0x4058a0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4874]        # 0x405910
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x47ab]        # 0x405850
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401750
  4010af:	mov    rax,QWORD PTR [rip+0x471a]        # 0x4057d0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402bb0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x929]        # 0x401a50
  401127:	call   0x401a40
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x47d5]        # 0x405940
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4765]        # 0x405900
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bc8
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x47aa]        # 0x405970
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x468b]        # 0x405880
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81ea]        # 0x4093ec
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4667]        # 0x405890
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x45ac]        # 0x405810
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d60
  40127d:	lea    rcx,[rip+0x107c]        # 0x402300
  401284:	call   QWORD PTR [rip+0x815a]        # 0x4093e4
  40128a:	mov    rdx,QWORD PTR [rip+0x45df]        # 0x405870
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402210
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402bf0
  4012a5:	call   0x401b50
  4012aa:	mov    rax,QWORD PTR [rip+0x456f]        # 0x405820
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4581]        # 0x405840
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b40
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b20
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b40
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b38
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401720
  4013bb:	mov    rax,QWORD PTR [rip+0x446e]        # 0x405830
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402cc0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b98
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4459]        # 0x405890
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402ba0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x446d]        # 0x4058d0
  401463:	mov    rcx,QWORD PTR [rip+0x4456]        # 0x4058c0
  40146a:	call   0x402b90
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7efb]        # 0x409394
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4449]        # 0x4058f0
  4014a7:	mov    rcx,QWORD PTR [rip+0x4432]        # 0x4058e0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b90
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b60
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4495]        # 0x405970
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401760
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4465]        # 0x405970
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401760
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x7df6]        # 0x40932c
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x7de6]        # 0x409324
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x7dd6]        # 0x40931c
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x7dc6]        # 0x409314
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x7dae]        # 0x409304
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x7d9e]        # 0x4092fc
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x7d8e]        # 0x4092f4
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x7d76]        # 0x4092e4
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7d5e]        # 0x4092d4
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7d4e]        # 0x4092cc
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7d3e]        # 0x4092c4
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7d2e]        # 0x4092bc
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x7db6]        # 0x40934c
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x7da6]        # 0x409344
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x7d96]        # 0x40933c
  4015a6:	nop
  4015a7:	nop
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	push   rbx
  4015b1:	sub    rsp,0x30
  4015b5:	mov    rbx,rcx
  4015b8:	mov    rcx,QWORD PTR [rip+0x7451]        # 0x408a10
  4015bf:	call   0x401b60
  4015c4:	cmp    rax,0xffffffffffffffff
  4015c8:	mov    QWORD PTR [rsp+0x20],rax
  4015cd:	je     0x401645
  4015cf:	mov    ecx,0x8
  4015d4:	call   0x402b88
  4015d9:	mov    rcx,QWORD PTR [rip+0x7430]        # 0x408a10
  4015e0:	call   0x401b60
  4015e5:	mov    rcx,QWORD PTR [rip+0x742c]        # 0x408a18
  4015ec:	mov    QWORD PTR [rsp+0x20],rax
  4015f1:	call   0x401b60
  4015f6:	lea    rdx,[rsp+0x20]
  4015fb:	lea    r8,[rsp+0x28]
  401600:	mov    rcx,rbx
  401603:	mov    QWORD PTR [rsp+0x28],rax
  401608:	call   0x402bd0
  40160d:	mov    rcx,QWORD PTR [rsp+0x20]
  401612:	mov    rbx,rax
  401615:	call   0x401b70
  40161a:	mov    rcx,QWORD PTR [rsp+0x28]
  40161f:	mov    QWORD PTR [rip+0x73ea],rax        # 0x408a10
  401626:	call   0x401b70
  40162b:	mov    ecx,0x8
  401630:	mov    QWORD PTR [rip+0x73e1],rax        # 0x408a18
  401637:	call   0x402b78
  40163c:	mov    rax,rbx
  40163f:	add    rsp,0x30
  401643:	pop    rbx
  401644:	ret    
  401645:	mov    rax,QWORD PTR [rip+0x4214]        # 0x405860
  40164c:	mov    rcx,rbx
  40164f:	call   QWORD PTR [rax]
  401651:	add    rsp,0x30
  401655:	pop    rbx
  401656:	ret    
  401657:	nop    WORD PTR [rax+rax*1+0x0]
  401660:	sub    rsp,0x28
  401664:	call   0x4015b0
  401669:	test   rax,rax
  40166c:	sete   al
  40166f:	movzx  eax,al
  401672:	neg    eax
  401674:	add    rsp,0x28
  401678:	ret    
  401679:	nop
  40167a:	nop
  40167b:	nop
  40167c:	nop
  40167d:	nop
  40167e:	nop
  40167f:	nop
  401680:	sub    rsp,0x28
  401684:	mov    rax,QWORD PTR [rip+0x2985]        # 0x404010
  40168b:	mov    rax,QWORD PTR [rax]
  40168e:	test   rax,rax
  401691:	je     0x4016b0
  401693:	call   rax
  401695:	mov    rax,QWORD PTR [rip+0x2974]        # 0x404010
  40169c:	lea    rdx,[rax+0x8]
  4016a0:	mov    rax,QWORD PTR [rax+0x8]
  4016a4:	mov    QWORD PTR [rip+0x2965],rdx        # 0x404010
  4016ab:	test   rax,rax
  4016ae:	jne    0x401693
  4016b0:	add    rsp,0x28
  4016b4:	ret    
  4016b5:	nop
  4016b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016c0:	push   rsi
  4016c1:	push   rbx
  4016c2:	sub    rsp,0x28
  4016c6:	mov    rsi,QWORD PTR [rip+0x4113]        # 0x4057e0
  4016cd:	mov    rax,QWORD PTR [rsi]
  4016d0:	cmp    eax,0xffffffff
  4016d3:	mov    ebx,eax
  4016d5:	je     0x401700
  4016d7:	test   ebx,ebx
  4016d9:	je     0x4016ea
  4016db:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	mov    eax,ebx
  4016e2:	call   QWORD PTR [rsi+rax*8]
  4016e5:	sub    ebx,0x1
  4016e8:	jne    0x4016e0
  4016ea:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401680
  4016f1:	add    rsp,0x28
  4016f5:	pop    rbx
  4016f6:	pop    rsi
  4016f7:	jmp    0x401660
  4016fc:	nop    DWORD PTR [rax+0x0]
  401700:	xor    ebx,ebx
  401702:	jmp    0x401706
  401704:	mov    ebx,eax
  401706:	lea    edx,[rbx+0x1]
  401709:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40170e:	mov    rax,rdx
  401711:	jne    0x401704
  401713:	jmp    0x4016d7
  401715:	nop
  401716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401720:	mov    eax,DWORD PTR [rip+0x691a]        # 0x408040
  401726:	test   eax,eax
  401728:	je     0x401730
  40172a:	repz ret 
  40172c:	nop    DWORD PTR [rax+0x0]
  401730:	mov    DWORD PTR [rip+0x6906],0x1        # 0x408040
  40173a:	jmp    0x4016c0
  40173c:	nop
  40173d:	nop
  40173e:	nop
  40173f:	nop
  401740:	mov    rax,QWORD PTR [rip+0x7d05]        # 0x40944c
  401747:	rex.W jmp rax
  40174a:	nop
  40174b:	nop
  40174c:	nop
  40174d:	nop
  40174e:	nop
  40174f:	nop
  401750:	xor    eax,eax
  401752:	ret    
  401753:	nop
  401754:	nop
  401755:	nop
  401756:	nop
  401757:	nop
  401758:	nop
  401759:	nop
  40175a:	nop
  40175b:	nop
  40175c:	nop
  40175d:	nop
  40175e:	nop
  40175f:	nop
  401760:	push   r12
  401762:	push   rbp
  401763:	push   rdi
  401764:	push   rsi
  401765:	push   rbx
  401766:	sub    rsp,0x40
  40176a:	mov    rbx,QWORD PTR [rip+0x28ff]        # 0x404070
  401771:	movabs rax,0x2b992ddfa232
  40177b:	mov    QWORD PTR [rsp+0x20],0x0
  401784:	cmp    rbx,rax
  401787:	je     0x4017a0
  401789:	not    rbx
  40178c:	mov    QWORD PTR [rip+0x28ed],rbx        # 0x404080
  401793:	add    rsp,0x40
  401797:	pop    rbx
  401798:	pop    rsi
  401799:	pop    rdi
  40179a:	pop    rbp
  40179b:	pop    r12
  40179d:	ret    
  40179e:	xchg   ax,ax
  4017a0:	lea    rcx,[rsp+0x20]
  4017a5:	call   QWORD PTR [rip+0x7bf1]        # 0x40939c
  4017ab:	mov    r12,QWORD PTR [rsp+0x20]
  4017b0:	call   QWORD PTR [rip+0x7bc6]        # 0x40937c
  4017b6:	mov    ebp,eax
  4017b8:	call   QWORD PTR [rip+0x7bc6]        # 0x409384
  4017be:	mov    edi,eax
  4017c0:	call   QWORD PTR [rip+0x7bde]        # 0x4093a4
  4017c6:	lea    rcx,[rsp+0x30]
  4017cb:	mov    esi,eax
  4017cd:	call   QWORD PTR [rip+0x7be9]        # 0x4093bc
  4017d3:	xor    r12,QWORD PTR [rsp+0x30]
  4017d8:	mov    edx,edi
  4017da:	movabs rax,0xffffffffffff
  4017e4:	xor    rbp,r12
  4017e7:	mov    rdi,rbp
  4017ea:	xor    rdi,rdx
  4017ed:	mov    edx,esi
  4017ef:	xor    rdi,rdx
  4017f2:	mov    rsi,rdi
  4017f5:	and    rsi,rax
  4017f8:	cmp    rsi,rbx
  4017fb:	je     0x401820
  4017fd:	mov    rax,rsi
  401800:	not    rax
  401803:	mov    QWORD PTR [rip+0x2866],rsi        # 0x404070
  40180a:	mov    QWORD PTR [rip+0x286f],rax        # 0x404080
  401811:	add    rsp,0x40
  401815:	pop    rbx
  401816:	pop    rsi
  401817:	pop    rdi
  401818:	pop    rbp
  401819:	pop    r12
  40181b:	ret    
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	movabs rax,0xffffd466d2205dcc
  40182a:	movabs rsi,0x2b992ddfa233
  401834:	jmp    0x401803
  401836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401840:	push   rbp
  401841:	push   rsi
  401842:	push   rbx
  401843:	mov    rbp,rsp
  401846:	sub    rsp,0x70
  40184a:	mov    rsi,rcx
  40184d:	lea    rcx,[rip+0x682c]        # 0x408080
  401854:	call   QWORD PTR [rip+0x7b72]        # 0x4093cc
  40185a:	mov    rbx,QWORD PTR [rip+0x6917]        # 0x408178
  401861:	xor    r8d,r8d
  401864:	lea    rdx,[rbp-0x28]
  401868:	mov    rcx,rbx
  40186b:	call   QWORD PTR [rip+0x7b63]        # 0x4093d4
  401871:	test   rax,rax
  401874:	mov    r9,rax
  401877:	je     0x401920
  40187d:	lea    rax,[rbp-0x20]
  401881:	mov    QWORD PTR [rsp+0x38],0x0
  40188a:	mov    r8,rbx
  40188d:	mov    rdx,QWORD PTR [rbp-0x28]
  401891:	xor    ecx,ecx
  401893:	mov    QWORD PTR [rsp+0x30],rax
  401898:	lea    rax,[rbp-0x18]
  40189c:	mov    QWORD PTR [rsp+0x28],rax
  4018a1:	lea    rax,[rip+0x67d8]        # 0x408080
  4018a8:	mov    QWORD PTR [rsp+0x20],rax
  4018ad:	call   QWORD PTR [rip+0x7b29]        # 0x4093dc
  4018b3:	mov    rax,QWORD PTR [rip+0x68be]        # 0x408178
  4018ba:	xor    ecx,ecx
  4018bc:	mov    QWORD PTR [rip+0x683d],rsi        # 0x408100
  4018c3:	mov    DWORD PTR [rip+0x6cb3],0xc0000409        # 0x408580
  4018cd:	mov    DWORD PTR [rip+0x6cad],0x1        # 0x408584
  4018d7:	mov    QWORD PTR [rip+0x6cb2],rax        # 0x408590
  4018de:	mov    rax,QWORD PTR [rip+0x278b]        # 0x404070
  4018e5:	mov    QWORD PTR [rbp-0x10],rax
  4018e9:	mov    rax,QWORD PTR [rip+0x2790]        # 0x404080
  4018f0:	mov    QWORD PTR [rbp-0x8],rax
  4018f4:	call   QWORD PTR [rip+0x7aea]        # 0x4093e4
  4018fa:	lea    rcx,[rip+0x3c3f]        # 0x405540
  401901:	call   QWORD PTR [rip+0x7afd]        # 0x409404
  401907:	call   QWORD PTR [rip+0x7a67]        # 0x409374
  40190d:	mov    edx,0xc0000409
  401912:	mov    rcx,rax
  401915:	call   QWORD PTR [rip+0x7ad9]        # 0x4093f4
  40191b:	call   0x402b70
  401920:	mov    rax,QWORD PTR [rbp+0x18]
  401924:	mov    QWORD PTR [rip+0x684d],rax        # 0x408178
  40192b:	lea    rax,[rbp+0x8]
  40192f:	mov    QWORD PTR [rip+0x67e2],rax        # 0x408118
  401936:	jmp    0x4018b3
  40193b:	nop
  40193c:	nop
  40193d:	nop
  40193e:	nop
  40193f:	nop
  401940:	sub    rsp,0x28
  401944:	test   edx,edx
  401946:	je     0x401960
  401948:	cmp    edx,0x3
  40194b:	je     0x401960
  40194d:	mov    eax,0x1
  401952:	add    rsp,0x28
  401956:	ret    
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	call   0x402650
  401965:	mov    eax,0x1
  40196a:	add    rsp,0x28
  40196e:	ret    
  40196f:	nop
  401970:	push   rsi
  401971:	push   rbx
  401972:	sub    rsp,0x28
  401976:	mov    rax,QWORD PTR [rip+0x3e43]        # 0x4057c0
  40197d:	cmp    DWORD PTR [rax],0x2
  401980:	je     0x401988
  401982:	mov    DWORD PTR [rax],0x2
  401988:	cmp    edx,0x2
  40198b:	je     0x4019a0
  40198d:	cmp    edx,0x1
  401990:	je     0x4019d2
  401992:	mov    eax,0x1
  401997:	add    rsp,0x28
  40199b:	pop    rbx
  40199c:	pop    rsi
  40199d:	ret    
  40199e:	xchg   ax,ax
  4019a0:	lea    rbx,[rip+0x86b9]        # 0x40a060
  4019a7:	lea    rsi,[rip+0x86b2]        # 0x40a060
  4019ae:	cmp    rbx,rsi
  4019b1:	je     0x401992
  4019b3:	mov    rax,QWORD PTR [rbx]
  4019b6:	test   rax,rax
  4019b9:	je     0x4019bd
  4019bb:	call   rax
  4019bd:	add    rbx,0x8
  4019c1:	cmp    rbx,rsi
  4019c4:	jne    0x4019b3
  4019c6:	mov    eax,0x1
  4019cb:	add    rsp,0x28
  4019cf:	pop    rbx
  4019d0:	pop    rsi
  4019d1:	ret    
  4019d2:	call   0x402650
  4019d7:	jmp    0x401992
  4019d9:	nop    DWORD PTR [rax+0x0]
  4019e0:	xor    eax,eax
  4019e2:	ret    
  4019e3:	nop
  4019e4:	nop
  4019e5:	nop
  4019e6:	nop
  4019e7:	nop
  4019e8:	nop
  4019e9:	nop
  4019ea:	nop
  4019eb:	nop
  4019ec:	nop
  4019ed:	nop
  4019ee:	nop
  4019ef:	nop
  4019f0:	sub    rsp,0x58
  4019f4:	mov    rax,QWORD PTR [rip+0x6c65]        # 0x408660
  4019fb:	test   rax,rax
  4019fe:	je     0x401a2c
  401a00:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a09:	mov    DWORD PTR [rsp+0x20],ecx
  401a0d:	lea    rcx,[rsp+0x20]
  401a12:	mov    QWORD PTR [rsp+0x28],rdx
  401a17:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a1d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a23:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a29:	call   rax
  401a2b:	nop
  401a2c:	add    rsp,0x58
  401a30:	ret    
  401a31:	nop    DWORD PTR [rax+rax*1+0x0]
  401a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a40:	mov    QWORD PTR [rip+0x6c19],rcx        # 0x408660
  401a47:	jmp    0x402ba8
  401a4c:	nop    DWORD PTR [rax+0x0]
  401a50:	push   rsi
  401a51:	push   rbx
  401a52:	sub    rsp,0x78
  401a56:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a5b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a60:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a66:	cmp    DWORD PTR [rcx],0x6
  401a69:	ja     0x401b40
  401a6f:	mov    edx,DWORD PTR [rcx]
  401a71:	lea    rax,[rip+0x3c0c]        # 0x405684
  401a78:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a7c:	add    rax,rdx
  401a7f:	jmp    rax
  401a81:	lea    rbx,[rip+0x3ad8]        # 0x405560
  401a88:	nop    DWORD PTR [rax+rax*1+0x0]
  401a90:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a96:	mov    rsi,QWORD PTR [rcx+0x8]
  401a9a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a9f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401aa4:	call   0x402bc0
  401aa9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ab0:	lea    rcx,[rax+0x60]
  401ab4:	lea    rdx,[rip+0x3b9d]        # 0x405658
  401abb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ac1:	mov    r9,rsi
  401ac4:	mov    r8,rbx
  401ac7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401acd:	call   0x402b58
  401ad2:	nop
  401ad3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ad8:	xor    eax,eax
  401ada:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401adf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ae5:	add    rsp,0x78
  401ae9:	pop    rbx
  401aea:	pop    rsi
  401aeb:	ret    
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x3a88]        # 0x40557f
  401af7:	jmp    0x401a90
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x3a99]        # 0x4055a0
  401b07:	jmp    0x401a90
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x3af9]        # 0x405610
  401b17:	jmp    0x401a90
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x3ac1]        # 0x4055e8
  401b27:	jmp    0x401a90
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x3a89]        # 0x4055c0
  401b37:	jmp    0x401a90
  401b3c:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x3aff]        # 0x405646
  401b47:	jmp    0x401a90
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	fninit 
  401b52:	ret    
  401b53:	nop
  401b54:	nop
  401b55:	nop
  401b56:	nop
  401b57:	nop
  401b58:	nop
  401b59:	nop
  401b5a:	nop
  401b5b:	nop
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	mov    rax,rcx
  401b63:	ret    
  401b64:	xchg   ax,ax
  401b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b70:	mov    rax,rcx
  401b73:	ret    
  401b74:	nop
  401b75:	nop
  401b76:	nop
  401b77:	nop
  401b78:	nop
  401b79:	nop
  401b7a:	nop
  401b7b:	nop
  401b7c:	nop
  401b7d:	nop
  401b7e:	nop
  401b7f:	nop
  401b80:	push   rsi
  401b81:	push   rbx
  401b82:	sub    rsp,0x38
  401b86:	lea    rax,[rsp+0x58]
  401b8b:	mov    rbx,rcx
  401b8e:	mov    QWORD PTR [rsp+0x58],rdx
  401b93:	mov    QWORD PTR [rsp+0x60],r8
  401b98:	mov    QWORD PTR [rsp+0x68],r9
  401b9d:	mov    QWORD PTR [rsp+0x28],rax
  401ba2:	call   0x402bc0
  401ba7:	lea    rcx,[rip+0x3af2]        # 0x4056a0
  401bae:	lea    r9,[rax+0x60]
  401bb2:	mov    r8d,0x1b
  401bb8:	mov    edx,0x1
  401bbd:	call   0x402b48
  401bc2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bc7:	call   0x402bc0
  401bcc:	lea    rcx,[rax+0x60]
  401bd0:	mov    rdx,rbx
  401bd3:	mov    r8,rsi
  401bd6:	call   0x402b10
  401bdb:	call   0x402b70
  401be0:	nop
  401be1:	nop    DWORD PTR [rax+rax*1+0x0]
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	push   r13
  401bf2:	push   r12
  401bf4:	push   rbp
  401bf5:	push   rdi
  401bf6:	push   rsi
  401bf7:	push   rbx
  401bf8:	sub    rsp,0x58
  401bfc:	movsxd rbp,DWORD PTR [rip+0x6a81]        # 0x408684
  401c03:	mov    rbx,rcx
  401c06:	mov    rsi,rdx
  401c09:	mov    rdi,r8
  401c0c:	test   ebp,ebp
  401c0e:	jle    0x401d0a
  401c14:	mov    rax,QWORD PTR [rip+0x6a6d]        # 0x408688
  401c1b:	xor    r9d,r9d
  401c1e:	add    rax,0x8
  401c22:	mov    r10,QWORD PTR [rax]
  401c25:	cmp    rbx,r10
  401c28:	jb     0x401c3e
  401c2a:	mov    rdx,QWORD PTR [rax+0x8]
  401c2e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c32:	add    r10,r11
  401c35:	cmp    rbx,r10
  401c38:	jb     0x401cf0
  401c3e:	add    r9d,0x1
  401c42:	add    rax,0x18
  401c46:	cmp    r9d,ebp
  401c49:	jne    0x401c22
  401c4b:	mov    rcx,rbx
  401c4e:	call   0x402860
  401c53:	test   rax,rax
  401c56:	mov    r12,rax
  401c59:	je     0x401d42
  401c5f:	lea    rbp,[rbp+rbp*2+0x0]
  401c64:	shl    rbp,0x3
  401c68:	mov    r13,rbp
  401c6b:	add    r13,QWORD PTR [rip+0x6a16]        # 0x408688
  401c72:	mov    QWORD PTR [r13+0x10],rax
  401c76:	mov    DWORD PTR [r13+0x0],0x0
  401c7e:	call   0x402980
  401c83:	mov    edx,DWORD PTR [r12+0xc]
  401c88:	mov    r8d,0x30
  401c8e:	add    rax,rdx
  401c91:	lea    rdx,[rsp+0x20]
  401c96:	mov    QWORD PTR [r13+0x8],rax
  401c9a:	mov    rax,QWORD PTR [rip+0x69e7]        # 0x408688
  401ca1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401ca6:	call   QWORD PTR [rip+0x7768]        # 0x409414
  401cac:	test   rax,rax
  401caf:	je     0x401d25
  401cb1:	mov    eax,DWORD PTR [rsp+0x44]
  401cb5:	lea    edx,[rax-0x4]
  401cb8:	and    edx,0xfffffffb
  401cbb:	je     0x401ce9
  401cbd:	sub    eax,0x40
  401cc0:	and    eax,0xffffffbf
  401cc3:	je     0x401ce9
  401cc5:	mov    r9,rbp
  401cc8:	add    r9,QWORD PTR [rip+0x69b9]        # 0x408688
  401ccf:	mov    r8d,0x40
  401cd5:	mov    rdx,QWORD PTR [rsp+0x38]
  401cda:	mov    rcx,QWORD PTR [rsp+0x20]
  401cdf:	call   QWORD PTR [rip+0x7727]        # 0x40940c
  401ce5:	test   eax,eax
  401ce7:	je     0x401d11
  401ce9:	add    DWORD PTR [rip+0x6994],0x1        # 0x408684
  401cf0:	mov    r8,rdi
  401cf3:	mov    rdx,rsi
  401cf6:	mov    rcx,rbx
  401cf9:	add    rsp,0x58
  401cfd:	pop    rbx
  401cfe:	pop    rsi
  401cff:	pop    rdi
  401d00:	pop    rbp
  401d01:	pop    r12
  401d03:	pop    r13
  401d05:	jmp    0x402b38
  401d0a:	xor    ebp,ebp
  401d0c:	jmp    0x401c4b
  401d11:	call   QWORD PTR [rip+0x7675]        # 0x40938c
  401d17:	lea    rcx,[rip+0x39fa]        # 0x405718
  401d1e:	mov    edx,eax
  401d20:	call   0x401b80
  401d25:	mov    rax,QWORD PTR [rip+0x695c]        # 0x408688
  401d2c:	mov    edx,DWORD PTR [r12+0x8]
  401d31:	lea    rcx,[rip+0x39a8]        # 0x4056e0
  401d38:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d3d:	call   0x401b80
  401d42:	lea    rcx,[rip+0x3977]        # 0x4056c0
  401d49:	mov    rdx,rbx
  401d4c:	call   0x401b80
  401d51:	nop
  401d52:	nop    DWORD PTR [rax+0x0]
  401d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d60:	push   rbp
  401d61:	push   r14
  401d63:	push   r13
  401d65:	push   r12
  401d67:	push   rdi
  401d68:	push   rsi
  401d69:	push   rbx
  401d6a:	mov    rbp,rsp
  401d6d:	sub    rsp,0x60
  401d71:	mov    ebx,DWORD PTR [rip+0x6909]        # 0x408680
  401d77:	test   ebx,ebx
  401d79:	je     0x401d90
  401d7b:	mov    rsp,rbp
  401d7e:	pop    rbx
  401d7f:	pop    rsi
  401d80:	pop    rdi
  401d81:	pop    r12
  401d83:	pop    r13
  401d85:	pop    r14
  401d87:	pop    rbp
  401d88:	ret    
  401d89:	nop    DWORD PTR [rax+0x0]
  401d90:	mov    DWORD PTR [rip+0x68e6],0x1        # 0x408680
  401d9a:	call   0x4028b0
  401d9f:	cdqe   
  401da1:	lea    rax,[rax+rax*2]
  401da5:	lea    rax,[rax*8+0x1e]
  401dad:	and    rax,0xfffffffffffffff0
  401db1:	call   0x402ad0
  401db6:	mov    rsi,QWORD PTR [rip+0x3a33]        # 0x4057f0
  401dbd:	mov    rbx,QWORD PTR [rip+0x3a3c]        # 0x405800
  401dc4:	sub    rsp,rax
  401dc7:	mov    DWORD PTR [rip+0x68b3],0x0        # 0x408684
  401dd1:	lea    rax,[rsp+0x20]
  401dd6:	mov    QWORD PTR [rip+0x68ab],rax        # 0x408688
  401ddd:	mov    rax,rsi
  401de0:	sub    rax,rbx
  401de3:	cmp    rax,0x7
  401de7:	jle    0x401d7b
  401de9:	cmp    rax,0xb
  401ded:	jle    0x401e15
  401def:	mov    r11d,DWORD PTR [rbx]
  401df2:	test   r11d,r11d
  401df5:	jne    0x401f40
  401dfb:	mov    r10d,DWORD PTR [rbx+0x4]
  401dff:	test   r10d,r10d
  401e02:	jne    0x401f40
  401e08:	mov    r9d,DWORD PTR [rbx+0x8]
  401e0c:	test   r9d,r9d
  401e0f:	jne    0x401e2c
  401e11:	add    rbx,0xc
  401e15:	mov    r8d,DWORD PTR [rbx]
  401e18:	test   r8d,r8d
  401e1b:	jne    0x401f40
  401e21:	mov    ecx,DWORD PTR [rbx+0x4]
  401e24:	test   ecx,ecx
  401e26:	jne    0x401f40
  401e2c:	mov    edx,DWORD PTR [rbx+0x8]
  401e2f:	cmp    edx,0x1
  401e32:	jne    0x40204c
  401e38:	add    rbx,0xc
  401e3c:	cmp    rbx,rsi
  401e3f:	jae    0x401d7b
  401e45:	mov    r12,QWORD PTR [rip+0x39d4]        # 0x405820
  401e4c:	lea    r13,[rbp-0x30]
  401e50:	movabs r14,0xffffffff00000000
  401e5a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e5d:	mov    eax,DWORD PTR [rbx]
  401e5f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e63:	add    rax,r12
  401e66:	add    rcx,r12
  401e69:	cmp    edx,0x10
  401e6c:	mov    r8,QWORD PTR [rax]
  401e6f:	je     0x401fb6
  401e75:	jbe    0x401f7d
  401e7b:	cmp    edx,0x20
  401e7e:	je     0x401fff
  401e84:	cmp    edx,0x40
  401e87:	jne    0x401feb
  401e8d:	sub    r8,rax
  401e90:	mov    rdx,r13
  401e93:	mov    rdi,r13
  401e96:	mov    rax,r8
  401e99:	add    rax,QWORD PTR [rcx]
  401e9c:	mov    r8d,0x8
  401ea2:	mov    QWORD PTR [rbp-0x30],rax
  401ea6:	call   0x401bf0
  401eab:	add    rbx,0xc
  401eaf:	cmp    rbx,rsi
  401eb2:	jb     0x401e5a
  401eb4:	mov    eax,DWORD PTR [rip+0x67ca]        # 0x408684
  401eba:	xor    ebx,ebx
  401ebc:	xor    esi,esi
  401ebe:	test   eax,eax
  401ec0:	jle    0x401d7b
  401ec6:	mov    r14,QWORD PTR [rip+0x7547]        # 0x409414
  401ecd:	lea    r13,[rbp-0x34]
  401ed1:	mov    r12,QWORD PTR [rip+0x7534]        # 0x40940c
  401ed8:	jmp    0x401ef3
  401eda:	nop    WORD PTR [rax+rax*1+0x0]
  401ee0:	add    esi,0x1
  401ee3:	add    rbx,0x18
  401ee7:	cmp    esi,DWORD PTR [rip+0x6797]        # 0x408684
  401eed:	jge    0x401d7b
  401ef3:	mov    rax,rbx
  401ef6:	add    rax,QWORD PTR [rip+0x678b]        # 0x408688
  401efd:	mov    edx,DWORD PTR [rax]
  401eff:	test   edx,edx
  401f01:	je     0x401ee0
  401f03:	mov    rcx,QWORD PTR [rax+0x8]
  401f07:	mov    r8d,0x30
  401f0d:	mov    rdx,rdi
  401f10:	call   r14
  401f13:	test   rax,rax
  401f16:	je     0x40202e
  401f1c:	mov    rax,QWORD PTR [rip+0x6765]        # 0x408688
  401f23:	mov    r9,r13
  401f26:	mov    rdx,QWORD PTR [rbp-0x18]
  401f2a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f2e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f32:	call   r12
  401f35:	jmp    0x401ee0
  401f37:	nop    WORD PTR [rax+rax*1+0x0]
  401f40:	cmp    rbx,rsi
  401f43:	jae    0x401d7b
  401f49:	mov    r12,QWORD PTR [rip+0x38d0]        # 0x405820
  401f50:	lea    rdi,[rbp-0x30]
  401f54:	mov    ecx,DWORD PTR [rbx+0x4]
  401f57:	mov    eax,DWORD PTR [rbx]
  401f59:	mov    r8d,0x4
  401f5f:	mov    rdx,rdi
  401f62:	add    rbx,0x8
  401f66:	add    rcx,r12
  401f69:	add    eax,DWORD PTR [rcx]
  401f6b:	mov    DWORD PTR [rbp-0x30],eax
  401f6e:	call   0x401bf0
  401f73:	cmp    rbx,rsi
  401f76:	jb     0x401f54
  401f78:	jmp    0x401eb4
  401f7d:	cmp    edx,0x8
  401f80:	jne    0x401feb
  401f82:	movzx  edx,BYTE PTR [rcx]
  401f85:	mov    rdi,r13
  401f88:	mov    r10,rdx
  401f8b:	or     r10,0xffffffffffffff00
  401f92:	test   dl,dl
  401f94:	cmovs  rdx,r10
  401f98:	sub    rdx,rax
  401f9b:	lea    rax,[r8+rdx*1]
  401f9f:	mov    r8d,0x1
  401fa5:	mov    rdx,r13
  401fa8:	mov    QWORD PTR [rbp-0x30],rax
  401fac:	call   0x401bf0
  401fb1:	jmp    0x401eab
  401fb6:	movzx  edx,WORD PTR [rcx]
  401fb9:	mov    rdi,r13
  401fbc:	mov    r10,rdx
  401fbf:	or     r10,0xffffffffffff0000
  401fc6:	test   dx,dx
  401fc9:	cmovs  rdx,r10
  401fcd:	sub    rdx,rax
  401fd0:	lea    rax,[r8+rdx*1]
  401fd4:	mov    r8d,0x2
  401fda:	mov    rdx,r13
  401fdd:	mov    QWORD PTR [rbp-0x30],rax
  401fe1:	call   0x401bf0
  401fe6:	jmp    0x401eab
  401feb:	lea    rcx,[rip+0x3786]        # 0x405778
  401ff2:	mov    QWORD PTR [rbp-0x30],0x0
  401ffa:	call   0x401b80
  401fff:	mov    edx,DWORD PTR [rcx]
  402001:	mov    rdi,r13
  402004:	mov    r10,rdx
  402007:	or     r10,r14
  40200a:	test   edx,edx
  40200c:	cmovs  rdx,r10
  402010:	sub    rdx,rax
  402013:	lea    rax,[r8+rdx*1]
  402017:	mov    r8d,0x4
  40201d:	mov    rdx,r13
  402020:	mov    QWORD PTR [rbp-0x30],rax
  402024:	call   0x401bf0
  402029:	jmp    0x401eab
  40202e:	add    rbx,QWORD PTR [rip+0x6653]        # 0x408688
  402035:	lea    rcx,[rip+0x36a4]        # 0x4056e0
  40203c:	mov    rax,QWORD PTR [rbx+0x10]
  402040:	mov    r8,QWORD PTR [rbx+0x8]
  402044:	mov    edx,DWORD PTR [rax+0x8]
  402047:	call   0x401b80
  40204c:	lea    rcx,[rip+0x36ed]        # 0x405740
  402053:	call   0x401b80
  402058:	nop
  402059:	nop
  40205a:	nop
  40205b:	nop
  40205c:	nop
  40205d:	nop
  40205e:	nop
  40205f:	nop
  402060:	sub    rsp,0x28
  402064:	mov    eax,DWORD PTR [rcx]
  402066:	cmp    eax,0xc0000091
  40206b:	ja     0x4020d0
  40206d:	cmp    eax,0xc000008d
  402072:	jae    0x4020ef
  402074:	cmp    eax,0xc0000008
  402079:	je     0x402190
  40207f:	ja     0x402160
  402085:	cmp    eax,0x80000002
  40208a:	je     0x402190
  402090:	cmp    eax,0xc0000005
  402095:	jne    0x40216e
  40209b:	xor    edx,edx
  40209d:	mov    ecx,0xb
  4020a2:	call   0x402b30
  4020a7:	cmp    rax,0x1
  4020ab:	je     0x4021f0
  4020b1:	test   rax,rax
  4020b4:	je     0x4021d0
  4020ba:	mov    ecx,0xb
  4020bf:	call   rax
  4020c1:	xor    eax,eax
  4020c3:	add    rsp,0x28
  4020c7:	ret    
  4020c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020d0:	cmp    eax,0xc0000094
  4020d5:	je     0x4021a0
  4020db:	ja     0x402120
  4020dd:	cmp    eax,0xc0000092
  4020e2:	je     0x402190
  4020e8:	cmp    eax,0xc0000093
  4020ed:	jne    0x40216e
  4020ef:	xor    edx,edx
  4020f1:	mov    ecx,0x8
  4020f6:	call   0x402b30
  4020fb:	cmp    rax,0x1
  4020ff:	mov    rdx,rax
  402102:	je     0x402178
  402104:	test   rdx,rdx
  402107:	mov    eax,0x1
  40210c:	je     0x4020c3
  40210e:	mov    ecx,0x8
  402113:	call   rdx
  402115:	xor    eax,eax
  402117:	add    rsp,0x28
  40211b:	ret    
  40211c:	nop    DWORD PTR [rax+0x0]
  402120:	cmp    eax,0xc0000095
  402125:	je     0x402190
  402127:	cmp    eax,0xc0000096
  40212c:	jne    0x40216e
  40212e:	xor    edx,edx
  402130:	mov    ecx,0x4
  402135:	call   0x402b30
  40213a:	cmp    rax,0x1
  40213e:	je     0x4021da
  402144:	test   rax,rax
  402147:	je     0x4021d0
  40214d:	mov    ecx,0x4
  402152:	call   rax
  402154:	xor    eax,eax
  402156:	jmp    0x4020c3
  40215b:	nop    DWORD PTR [rax+rax*1+0x0]
  402160:	cmp    eax,0xc000001d
  402165:	je     0x40212e
  402167:	cmp    eax,0xc000008c
  40216c:	je     0x402190
  40216e:	mov    eax,0x1
  402173:	add    rsp,0x28
  402177:	ret    
  402178:	mov    edx,0x1
  40217d:	mov    ecx,0x8
  402182:	call   0x402b30
  402187:	call   0x401b50
  40218c:	nop    DWORD PTR [rax+0x0]
  402190:	xor    eax,eax
  402192:	add    rsp,0x28
  402196:	ret    
  402197:	nop    WORD PTR [rax+rax*1+0x0]
  4021a0:	xor    edx,edx
  4021a2:	mov    ecx,0x8
  4021a7:	call   0x402b30
  4021ac:	cmp    rax,0x1
  4021b0:	mov    rdx,rax
  4021b3:	jne    0x402104
  4021b9:	mov    edx,0x1
  4021be:	mov    ecx,0x8
  4021c3:	call   0x402b30
  4021c8:	xor    eax,eax
  4021ca:	jmp    0x4020c3
  4021cf:	nop
  4021d0:	mov    eax,0x4
  4021d5:	add    rsp,0x28
  4021d9:	ret    
  4021da:	mov    edx,0x1
  4021df:	mov    ecx,0x4
  4021e4:	call   0x402b30
  4021e9:	xor    eax,eax
  4021eb:	jmp    0x4020c3
  4021f0:	mov    edx,0x1
  4021f5:	mov    ecx,0xb
  4021fa:	call   0x402b30
  4021ff:	xor    eax,eax
  402201:	jmp    0x4020c3
  402206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402210:	push   r12
  402212:	push   rbp
  402213:	push   rdi
  402214:	push   rsi
  402215:	push   rbx
  402216:	sub    rsp,0x20
  40221a:	call   0x402980
  40221f:	mov    rbp,rax
  402222:	mov    eax,DWORD PTR [rip+0x64a0]        # 0x4086c8
  402228:	test   eax,eax
  40222a:	jne    0x402251
  40222c:	test   rbp,rbp
  40222f:	je     0x402251
  402231:	lea    rcx,[rip+0x3578]        # 0x4057b0
  402238:	mov    DWORD PTR [rip+0x6486],0x1        # 0x4086c8
  402242:	call   0x4027c0
  402247:	test   rax,rax
  40224a:	je     0x402260
  40224c:	mov    eax,0x1
  402251:	add    rsp,0x20
  402255:	pop    rbx
  402256:	pop    rsi
  402257:	pop    rdi
  402258:	pop    rbp
  402259:	pop    r12
  40225b:	ret    
  40225c:	nop    DWORD PTR [rax+0x0]
  402260:	lea    rbx,[rip+0x6599]        # 0x408800
  402267:	mov    ecx,0x30
  40226c:	lea    rdx,[rip+0x648d]        # 0x408700
  402273:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402060
  40227a:	xor    esi,esi
  40227c:	mov    rdi,rbx
  40227f:	rep stos QWORD PTR es:[rdi],rax
  402282:	mov    rdi,rdx
  402285:	sub    r12,rbp
  402288:	mov    cl,0x20
  40228a:	rep stos QWORD PTR es:[rdi],rax
  40228d:	mov    rdi,rdx
  402290:	jmp    0x4022c0
  402292:	mov    BYTE PTR [rdi],0x9
  402295:	mov    DWORD PTR [rdi+0x4],r12d
  402299:	add    rsi,0x1
  40229d:	mov    edx,DWORD PTR [rax+0xc]
  4022a0:	add    rbx,0xc
  4022a4:	mov    DWORD PTR [rbx-0xc],edx
  4022a7:	add    edx,DWORD PTR [rax+0x8]
  4022aa:	mov    rax,rdi
  4022ad:	sub    rax,rbp
  4022b0:	add    rdi,0x8
  4022b4:	mov    DWORD PTR [rbx-0x4],eax
  4022b7:	mov    DWORD PTR [rbx-0x8],edx
  4022ba:	cmp    rsi,0x20
  4022be:	je     0x4022f5
  4022c0:	mov    rcx,rsi
  4022c3:	call   0x4028f0
  4022c8:	test   rax,rax
  4022cb:	jne    0x402292
  4022cd:	test   rsi,rsi
  4022d0:	je     0x40224c
  4022d6:	mov    edx,esi
  4022d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022e0:	mov    r8,rbp
  4022e3:	lea    rcx,[rip+0x6516]        # 0x408800
  4022ea:	call   QWORD PTR [rip+0x70d4]        # 0x4093c4
  4022f0:	jmp    0x40224c
  4022f5:	mov    edx,0x20
  4022fa:	jmp    0x4022e0
  4022fc:	nop    DWORD PTR [rax+0x0]
  402300:	push   rbx
  402301:	sub    rsp,0x20
  402305:	mov    rdx,QWORD PTR [rcx]
  402308:	mov    eax,DWORD PTR [rdx]
  40230a:	mov    r8d,eax
  40230d:	and    r8d,0x20ffffff
  402314:	cmp    r8d,0x20474343
  40231b:	je     0x402420
  402321:	cmp    eax,0xc0000091
  402326:	mov    rbx,rcx
  402329:	ja     0x4023b0
  40232f:	cmp    eax,0xc000008d
  402334:	jae    0x4023c7
  40233a:	cmp    eax,0xc0000008
  40233f:	je     0x402373
  402341:	ja     0x402380
  402343:	cmp    eax,0x80000002
  402348:	je     0x402373
  40234a:	cmp    eax,0xc0000005
  40234f:	jne    0x402392
  402351:	xor    edx,edx
  402353:	mov    ecx,0xb
  402358:	call   0x402b30
  40235d:	cmp    rax,0x1
  402361:	je     0x402490
  402367:	test   rax,rax
  40236a:	je     0x402392
  40236c:	mov    ecx,0xb
  402371:	call   rax
  402373:	mov    eax,0xffffffff
  402378:	add    rsp,0x20
  40237c:	pop    rbx
  40237d:	ret    
  40237e:	xchg   ax,ax
  402380:	cmp    eax,0xc000001d
  402385:	je     0x402446
  40238b:	cmp    eax,0xc000008c
  402390:	je     0x402373
  402392:	mov    rax,QWORD PTR [rip+0x6327]        # 0x4086c0
  402399:	test   rax,rax
  40239c:	je     0x402378
  40239e:	mov    rcx,rbx
  4023a1:	add    rsp,0x20
  4023a5:	pop    rbx
  4023a6:	rex.W jmp rax
  4023a9:	nop    DWORD PTR [rax+0x0]
  4023b0:	cmp    eax,0xc0000094
  4023b5:	je     0x4023f2
  4023b7:	ja     0x402430
  4023b9:	cmp    eax,0xc0000092
  4023be:	je     0x402373
  4023c0:	cmp    eax,0xc0000093
  4023c5:	jne    0x402392
  4023c7:	xor    edx,edx
  4023c9:	mov    ecx,0x8
  4023ce:	call   0x402b30
  4023d3:	cmp    rax,0x1
  4023d7:	jne    0x402404
  4023d9:	mov    edx,0x1
  4023de:	mov    ecx,0x8
  4023e3:	call   0x402b30
  4023e8:	call   0x401b50
  4023ed:	jmp    0x402373
  4023f2:	xor    edx,edx
  4023f4:	mov    ecx,0x8
  4023f9:	call   0x402b30
  4023fe:	cmp    rax,0x1
  402402:	je     0x402472
  402404:	test   rax,rax
  402407:	je     0x402392
  402409:	mov    ecx,0x8
  40240e:	call   rax
  402410:	mov    eax,0xffffffff
  402415:	jmp    0x402378
  40241a:	nop    WORD PTR [rax+rax*1+0x0]
  402420:	test   BYTE PTR [rdx+0x4],0x1
  402424:	jne    0x402321
  40242a:	jmp    0x402373
  40242f:	nop
  402430:	cmp    eax,0xc0000095
  402435:	je     0x402373
  40243b:	cmp    eax,0xc0000096
  402440:	jne    0x402392
  402446:	xor    edx,edx
  402448:	mov    ecx,0x4
  40244d:	call   0x402b30
  402452:	cmp    rax,0x1
  402456:	je     0x4024a4
  402458:	test   rax,rax
  40245b:	je     0x402392
  402461:	mov    ecx,0x4
  402466:	call   rax
  402468:	mov    eax,0xffffffff
  40246d:	jmp    0x402378
  402472:	mov    edx,0x1
  402477:	mov    ecx,0x8
  40247c:	call   0x402b30
  402481:	jmp    0x402373
  402486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402490:	mov    edx,0x1
  402495:	mov    ecx,0xb
  40249a:	call   0x402b30
  40249f:	jmp    0x402373
  4024a4:	mov    edx,0x1
  4024a9:	mov    ecx,0x4
  4024ae:	call   0x402b30
  4024b3:	jmp    0x402373
  4024b8:	nop
  4024b9:	nop
  4024ba:	nop
  4024bb:	nop
  4024bc:	nop
  4024bd:	nop
  4024be:	nop
  4024bf:	nop
  4024c0:	push   rbp
  4024c1:	push   rdi
  4024c2:	push   rsi
  4024c3:	push   rbx
  4024c4:	sub    rsp,0x28
  4024c8:	lea    rcx,[rip+0x64d1]        # 0x4089a0
  4024cf:	call   QWORD PTR [rip+0x6e8f]        # 0x409364
  4024d5:	mov    rbx,QWORD PTR [rip+0x64a4]        # 0x408980
  4024dc:	test   rbx,rbx
  4024df:	je     0x402514
  4024e1:	mov    rbp,QWORD PTR [rip+0x6f14]        # 0x4093fc
  4024e8:	mov    rdi,QWORD PTR [rip+0x6e9d]        # 0x40938c
  4024ef:	nop
  4024f0:	mov    ecx,DWORD PTR [rbx]
  4024f2:	call   rbp
  4024f4:	mov    rsi,rax
  4024f7:	call   rdi
  4024f9:	test   eax,eax
  4024fb:	jne    0x40250b
  4024fd:	test   rsi,rsi
  402500:	je     0x40250b
  402502:	mov    rax,QWORD PTR [rbx+0x8]
  402506:	mov    rcx,rsi
  402509:	call   rax
  40250b:	mov    rbx,QWORD PTR [rbx+0x10]
  40250f:	test   rbx,rbx
  402512:	jne    0x4024f0
  402514:	mov    rax,QWORD PTR [rip+0x6e99]        # 0x4093b4
  40251b:	lea    rcx,[rip+0x647e]        # 0x4089a0
  402522:	add    rsp,0x28
  402526:	pop    rbx
  402527:	pop    rsi
  402528:	pop    rdi
  402529:	pop    rbp
  40252a:	rex.W jmp rax
  40252d:	nop    DWORD PTR [rax]
  402530:	push   rdi
  402531:	push   rsi
  402532:	push   rbx
  402533:	sub    rsp,0x20
  402537:	mov    eax,DWORD PTR [rip+0x644b]        # 0x408988
  40253d:	test   eax,eax
  40253f:	jne    0x402550
  402541:	add    rsp,0x20
  402545:	pop    rbx
  402546:	pop    rsi
  402547:	pop    rdi
  402548:	ret    
  402549:	nop    DWORD PTR [rax+0x0]
  402550:	mov    rsi,rdx
  402553:	mov    edi,ecx
  402555:	mov    edx,0x18
  40255a:	mov    ecx,0x1
  40255f:	call   0x402b68
  402564:	test   rax,rax
  402567:	mov    rbx,rax
  40256a:	je     0x4025a8
  40256c:	mov    DWORD PTR [rax],edi
  40256e:	mov    QWORD PTR [rax+0x8],rsi
  402572:	lea    rcx,[rip+0x6427]        # 0x4089a0
  402579:	call   QWORD PTR [rip+0x6de5]        # 0x409364
  40257f:	mov    rax,QWORD PTR [rip+0x63fa]        # 0x408980
  402586:	lea    rcx,[rip+0x6413]        # 0x4089a0
  40258d:	mov    QWORD PTR [rip+0x63ec],rbx        # 0x408980
  402594:	mov    QWORD PTR [rbx+0x10],rax
  402598:	call   QWORD PTR [rip+0x6e16]        # 0x4093b4
  40259e:	xor    eax,eax
  4025a0:	add    rsp,0x20
  4025a4:	pop    rbx
  4025a5:	pop    rsi
  4025a6:	pop    rdi
  4025a7:	ret    
  4025a8:	mov    eax,0xffffffff
  4025ad:	jmp    0x402541
  4025af:	nop
  4025b0:	push   rbx
  4025b1:	sub    rsp,0x20
  4025b5:	mov    eax,DWORD PTR [rip+0x63cd]        # 0x408988
  4025bb:	test   eax,eax
  4025bd:	jne    0x4025d0
  4025bf:	xor    eax,eax
  4025c1:	add    rsp,0x20
  4025c5:	pop    rbx
  4025c6:	ret    
  4025c7:	nop    WORD PTR [rax+rax*1+0x0]
  4025d0:	mov    ebx,ecx
  4025d2:	lea    rcx,[rip+0x63c7]        # 0x4089a0
  4025d9:	call   QWORD PTR [rip+0x6d85]        # 0x409364
  4025df:	mov    rdx,QWORD PTR [rip+0x639a]        # 0x408980
  4025e6:	test   rdx,rdx
  4025e9:	je     0x402607
  4025eb:	mov    eax,DWORD PTR [rdx]
  4025ed:	cmp    eax,ebx
  4025ef:	jne    0x4025fe
  4025f1:	jmp    0x40263f
  4025f3:	mov    r8d,DWORD PTR [rax]
  4025f6:	cmp    r8d,ebx
  4025f9:	je     0x402620
  4025fb:	mov    rdx,rax
  4025fe:	mov    rax,QWORD PTR [rdx+0x10]
  402602:	test   rax,rax
  402605:	jne    0x4025f3
  402607:	lea    rcx,[rip+0x6392]        # 0x4089a0
  40260e:	call   QWORD PTR [rip+0x6da0]        # 0x4093b4
  402614:	xor    eax,eax
  402616:	add    rsp,0x20
  40261a:	pop    rbx
  40261b:	ret    
  40261c:	nop    DWORD PTR [rax+0x0]
  402620:	mov    rcx,rax
  402623:	mov    rax,QWORD PTR [rax+0x10]
  402627:	mov    QWORD PTR [rdx+0x10],rax
  40262b:	call   0x402b50
  402630:	lea    rcx,[rip+0x6369]        # 0x4089a0
  402637:	call   QWORD PTR [rip+0x6d77]        # 0x4093b4
  40263d:	jmp    0x402614
  40263f:	mov    rax,QWORD PTR [rdx+0x10]
  402643:	mov    rcx,rdx
  402646:	mov    QWORD PTR [rip+0x6333],rax        # 0x408980
  40264d:	jmp    0x40262b
  40264f:	nop
  402650:	push   rbx
  402651:	sub    rsp,0x20
  402655:	cmp    edx,0x1
  402658:	je     0x4026f0
  40265e:	jb     0x402690
  402660:	cmp    edx,0x2
  402663:	je     0x402680
  402665:	cmp    edx,0x3
  402668:	jne    0x402685
  40266a:	mov    eax,DWORD PTR [rip+0x6318]        # 0x408988
  402670:	test   eax,eax
  402672:	je     0x402685
  402674:	call   0x4024c0
  402679:	jmp    0x402685
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]
  402680:	call   0x401b50
  402685:	mov    eax,0x1
  40268a:	add    rsp,0x20
  40268e:	pop    rbx
  40268f:	ret    
  402690:	mov    eax,DWORD PTR [rip+0x62f2]        # 0x408988
  402696:	test   eax,eax
  402698:	jne    0x402720
  40269e:	mov    eax,DWORD PTR [rip+0x62e4]        # 0x408988
  4026a4:	cmp    eax,0x1
  4026a7:	jne    0x402685
  4026a9:	mov    rcx,QWORD PTR [rip+0x62d0]        # 0x408980
  4026b0:	test   rcx,rcx
  4026b3:	je     0x4026c6
  4026b5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026b9:	call   0x402b50
  4026be:	test   rbx,rbx
  4026c1:	mov    rcx,rbx
  4026c4:	jne    0x4026b5
  4026c6:	lea    rcx,[rip+0x62d3]        # 0x4089a0
  4026cd:	mov    QWORD PTR [rip+0x62a8],0x0        # 0x408980
  4026d8:	mov    DWORD PTR [rip+0x62a6],0x0        # 0x408988
  4026e2:	call   QWORD PTR [rip+0x6c74]        # 0x40935c
  4026e8:	jmp    0x402685
  4026ea:	nop    WORD PTR [rax+rax*1+0x0]
  4026f0:	mov    eax,DWORD PTR [rip+0x6292]        # 0x408988
  4026f6:	test   eax,eax
  4026f8:	je     0x402710
  4026fa:	mov    eax,0x1
  4026ff:	mov    DWORD PTR [rip+0x627f],0x1        # 0x408988
  402709:	add    rsp,0x20
  40270d:	pop    rbx
  40270e:	ret    
  40270f:	nop
  402710:	lea    rcx,[rip+0x6289]        # 0x4089a0
  402717:	call   QWORD PTR [rip+0x6c8f]        # 0x4093ac
  40271d:	jmp    0x4026fa
  40271f:	nop
  402720:	call   0x4024c0
  402725:	jmp    0x40269e
  40272a:	nop
  40272b:	nop
  40272c:	nop
  40272d:	nop
  40272e:	nop
  40272f:	nop
  402730:	movsxd rax,DWORD PTR [rcx+0x3c]
  402734:	add    rcx,rax
  402737:	xor    eax,eax
  402739:	cmp    DWORD PTR [rcx],0x4550
  40273f:	je     0x402743
  402741:	repz ret 
  402743:	xor    eax,eax
  402745:	cmp    WORD PTR [rcx+0x18],0x20b
  40274b:	sete   al
  40274e:	ret    
  40274f:	nop
  402750:	cmp    WORD PTR [rcx],0x5a4d
  402755:	je     0x402760
  402757:	xor    eax,eax
  402759:	ret    
  40275a:	nop    WORD PTR [rax+rax*1+0x0]
  402760:	jmp    0x402730
  402762:	nop    DWORD PTR [rax+0x0]
  402766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402770:	movsxd rax,DWORD PTR [rcx+0x3c]
  402774:	add    rcx,rax
  402777:	movzx  eax,WORD PTR [rcx+0x14]
  40277b:	lea    rax,[rcx+rax*1+0x18]
  402780:	movzx  ecx,WORD PTR [rcx+0x6]
  402784:	test   ecx,ecx
  402786:	je     0x4027b1
  402788:	sub    ecx,0x1
  40278b:	lea    rcx,[rcx+rcx*4]
  40278f:	lea    r9,[rax+rcx*8+0x28]
  402794:	mov    r8d,DWORD PTR [rax+0xc]
  402798:	cmp    r8,rdx
  40279b:	mov    rcx,r8
  40279e:	ja     0x4027a8
  4027a0:	add    ecx,DWORD PTR [rax+0x8]
  4027a3:	cmp    rdx,rcx
  4027a6:	jb     0x4027b3
  4027a8:	add    rax,0x28
  4027ac:	cmp    rax,r9
  4027af:	jne    0x402794
  4027b1:	xor    eax,eax
  4027b3:	repz ret 
  4027b5:	nop
  4027b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027c0:	push   rdi
  4027c1:	push   rsi
  4027c2:	push   rbx
  4027c3:	sub    rsp,0x20
  4027c7:	mov    rsi,rcx
  4027ca:	call   0x402b20
  4027cf:	cmp    rax,0x8
  4027d3:	ja     0x4027f0
  4027d5:	mov    rbx,QWORD PTR [rip+0x3044]        # 0x405820
  4027dc:	xor    edi,edi
  4027de:	cmp    WORD PTR [rbx],0x5a4d
  4027e3:	je     0x402800
  4027e5:	mov    rax,rdi
  4027e8:	add    rsp,0x20
  4027ec:	pop    rbx
  4027ed:	pop    rsi
  4027ee:	pop    rdi
  4027ef:	ret    
  4027f0:	xor    edi,edi
  4027f2:	mov    rax,rdi
  4027f5:	add    rsp,0x20
  4027f9:	pop    rbx
  4027fa:	pop    rsi
  4027fb:	pop    rdi
  4027fc:	ret    
  4027fd:	nop    DWORD PTR [rax]
  402800:	mov    rcx,rbx
  402803:	call   0x402730
  402808:	test   eax,eax
  40280a:	je     0x4027e5
  40280c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402810:	add    rdx,rbx
  402813:	movzx  eax,WORD PTR [rdx+0x14]
  402817:	lea    rbx,[rdx+rax*1+0x18]
  40281c:	movzx  eax,WORD PTR [rdx+0x6]
  402820:	test   eax,eax
  402822:	je     0x4027e5
  402824:	sub    eax,0x1
  402827:	lea    rax,[rax+rax*4]
  40282b:	lea    rdi,[rbx+rax*8+0x28]
  402830:	jmp    0x40283b
  402832:	add    rbx,0x28
  402836:	cmp    rbx,rdi
  402839:	je     0x4027f0
  40283b:	mov    r8d,0x8
  402841:	mov    rdx,rsi
  402844:	mov    rcx,rbx
  402847:	call   0x402b18
  40284c:	test   eax,eax
  40284e:	jne    0x402832
  402850:	mov    rdi,rbx
  402853:	mov    rax,rdi
  402856:	add    rsp,0x20
  40285a:	pop    rbx
  40285b:	pop    rsi
  40285c:	pop    rdi
  40285d:	ret    
  40285e:	xchg   ax,ax
  402860:	push   rsi
  402861:	push   rbx
  402862:	sub    rsp,0x28
  402866:	mov    rbx,QWORD PTR [rip+0x2fb3]        # 0x405820
  40286d:	cmp    WORD PTR [rbx],0x5a4d
  402872:	je     0x402880
  402874:	xor    eax,eax
  402876:	add    rsp,0x28
  40287a:	pop    rbx
  40287b:	pop    rsi
  40287c:	ret    
  40287d:	nop    DWORD PTR [rax]
  402880:	mov    rsi,rcx
  402883:	mov    rcx,rbx
  402886:	call   0x402730
  40288b:	test   eax,eax
  40288d:	je     0x402874
  40288f:	sub    rsi,rbx
  402892:	mov    rcx,rbx
  402895:	mov    rdx,rsi
  402898:	add    rsp,0x28
  40289c:	pop    rbx
  40289d:	pop    rsi
  40289e:	jmp    0x402770
  4028a3:	nop    DWORD PTR [rax]
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028b0:	push   rbx
  4028b1:	sub    rsp,0x20
  4028b5:	mov    rbx,QWORD PTR [rip+0x2f64]        # 0x405820
  4028bc:	xor    eax,eax
  4028be:	cmp    WORD PTR [rbx],0x5a4d
  4028c3:	je     0x4028d0
  4028c5:	add    rsp,0x20
  4028c9:	pop    rbx
  4028ca:	ret    
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	mov    rcx,rbx
  4028d3:	call   0x402730
  4028d8:	test   eax,eax
  4028da:	je     0x4028c5
  4028dc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028e0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028e5:	add    rsp,0x20
  4028e9:	pop    rbx
  4028ea:	ret    
  4028eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	push   rdi
  4028f1:	push   rsi
  4028f2:	push   rbx
  4028f3:	sub    rsp,0x20
  4028f7:	mov    rsi,QWORD PTR [rip+0x2f22]        # 0x405820
  4028fe:	xor    edi,edi
  402900:	mov    rbx,rcx
  402903:	cmp    WORD PTR [rsi],0x5a4d
  402908:	je     0x402915
  40290a:	mov    rax,rdi
  40290d:	add    rsp,0x20
  402911:	pop    rbx
  402912:	pop    rsi
  402913:	pop    rdi
  402914:	ret    
  402915:	mov    rcx,rsi
  402918:	call   0x402730
  40291d:	test   eax,eax
  40291f:	je     0x40290a
  402921:	movsxd rax,DWORD PTR [rsi+0x3c]
  402925:	add    rsi,rax
  402928:	movzx  eax,WORD PTR [rsi+0x14]
  40292c:	lea    rdx,[rsi+rax*1+0x18]
  402931:	movzx  eax,WORD PTR [rsi+0x6]
  402935:	test   eax,eax
  402937:	je     0x40290a
  402939:	sub    eax,0x1
  40293c:	lea    rax,[rax+rax*4]
  402940:	lea    rax,[rdx+rax*8+0x28]
  402945:	test   BYTE PTR [rdx+0x27],0x20
  402949:	je     0x402954
  40294b:	test   rbx,rbx
  40294e:	je     0x402970
  402950:	sub    rbx,0x1
  402954:	add    rdx,0x28
  402958:	cmp    rdx,rax
  40295b:	jne    0x402945
  40295d:	xor    edi,edi
  40295f:	mov    rax,rdi
  402962:	add    rsp,0x20
  402966:	pop    rbx
  402967:	pop    rsi
  402968:	pop    rdi
  402969:	ret    
  40296a:	nop    WORD PTR [rax+rax*1+0x0]
  402970:	mov    rdi,rdx
  402973:	mov    rax,rdi
  402976:	add    rsp,0x20
  40297a:	pop    rbx
  40297b:	pop    rsi
  40297c:	pop    rdi
  40297d:	ret    
  40297e:	xchg   ax,ax
  402980:	push   rsi
  402981:	push   rbx
  402982:	sub    rsp,0x28
  402986:	mov    rsi,QWORD PTR [rip+0x2e93]        # 0x405820
  40298d:	xor    ebx,ebx
  40298f:	cmp    WORD PTR [rsi],0x5a4d
  402994:	je     0x4029a0
  402996:	mov    rax,rbx
  402999:	add    rsp,0x28
  40299d:	pop    rbx
  40299e:	pop    rsi
  40299f:	ret    
  4029a0:	mov    rcx,rsi
  4029a3:	call   0x402730
  4029a8:	test   eax,eax
  4029aa:	cmovne rbx,rsi
  4029ae:	mov    rax,rbx
  4029b1:	add    rsp,0x28
  4029b5:	pop    rbx
  4029b6:	pop    rsi
  4029b7:	ret    
  4029b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029c0:	push   rsi
  4029c1:	push   rbx
  4029c2:	sub    rsp,0x28
  4029c6:	mov    rbx,QWORD PTR [rip+0x2e53]        # 0x405820
  4029cd:	xor    eax,eax
  4029cf:	cmp    WORD PTR [rbx],0x5a4d
  4029d4:	je     0x4029e0
  4029d6:	add    rsp,0x28
  4029da:	pop    rbx
  4029db:	pop    rsi
  4029dc:	ret    
  4029dd:	nop    DWORD PTR [rax]
  4029e0:	mov    rsi,rcx
  4029e3:	mov    rcx,rbx
  4029e6:	call   0x402730
  4029eb:	test   eax,eax
  4029ed:	je     0x4029d6
  4029ef:	sub    rsi,rbx
  4029f2:	mov    rcx,rbx
  4029f5:	mov    rdx,rsi
  4029f8:	call   0x402770
  4029fd:	test   rax,rax
  402a00:	je     0x402a11
  402a02:	mov    eax,DWORD PTR [rax+0x24]
  402a05:	not    eax
  402a07:	shr    eax,0x1f
  402a0a:	add    rsp,0x28
  402a0e:	pop    rbx
  402a0f:	pop    rsi
  402a10:	ret    
  402a11:	xor    eax,eax
  402a13:	jmp    0x4029d6
  402a15:	nop
  402a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a20:	push   rbp
  402a21:	push   rdi
  402a22:	push   rsi
  402a23:	push   rbx
  402a24:	sub    rsp,0x28
  402a28:	mov    rdi,QWORD PTR [rip+0x2df1]        # 0x405820
  402a2f:	xor    ebp,ebp
  402a31:	mov    esi,ecx
  402a33:	cmp    WORD PTR [rdi],0x5a4d
  402a38:	je     0x402a50
  402a3a:	mov    rax,rbp
  402a3d:	add    rsp,0x28
  402a41:	pop    rbx
  402a42:	pop    rsi
  402a43:	pop    rdi
  402a44:	pop    rbp
  402a45:	ret    
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	mov    rcx,rdi
  402a53:	call   0x402730
  402a58:	test   eax,eax
  402a5a:	je     0x402a3a
  402a5c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a60:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a67:	test   edx,edx
  402a69:	je     0x402a3a
  402a6b:	mov    ebx,edx
  402a6d:	mov    rcx,rdi
  402a70:	mov    rdx,rbx
  402a73:	call   0x402770
  402a78:	test   rax,rax
  402a7b:	je     0x402a3a
  402a7d:	add    rbx,rdi
  402a80:	mov    rdx,rbx
  402a83:	jne    0x402a97
  402a85:	jmp    0x402a3a
  402a87:	nop    WORD PTR [rax+rax*1+0x0]
  402a90:	sub    esi,0x1
  402a93:	add    rdx,0x14
  402a97:	mov    ecx,DWORD PTR [rdx+0x4]
  402a9a:	test   ecx,ecx
  402a9c:	jne    0x402aa5
  402a9e:	mov    eax,DWORD PTR [rdx+0xc]
  402aa1:	test   eax,eax
  402aa3:	je     0x402ac0
  402aa5:	test   esi,esi
  402aa7:	jg     0x402a90
  402aa9:	mov    ebp,DWORD PTR [rdx+0xc]
  402aac:	add    rbp,rdi
  402aaf:	mov    rax,rbp
  402ab2:	add    rsp,0x28
  402ab6:	pop    rbx
  402ab7:	pop    rsi
  402ab8:	pop    rdi
  402ab9:	pop    rbp
  402aba:	ret    
  402abb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ac0:	xor    ebp,ebp
  402ac2:	mov    rax,rbp
  402ac5:	add    rsp,0x28
  402ac9:	pop    rbx
  402aca:	pop    rsi
  402acb:	pop    rdi
  402acc:	pop    rbp
  402acd:	ret    
  402ace:	nop
  402acf:	nop
  402ad0:	push   rcx
  402ad1:	push   rax
  402ad2:	cmp    rax,0x1000
  402ad8:	lea    rcx,[rsp+0x18]
  402add:	jb     0x402af8
  402adf:	sub    rcx,0x1000
  402ae6:	or     QWORD PTR [rcx],0x0
  402aea:	sub    rax,0x1000
  402af0:	cmp    rax,0x1000
  402af6:	ja     0x402adf
  402af8:	sub    rcx,rax
  402afb:	or     QWORD PTR [rcx],0x0
  402aff:	pop    rax
  402b00:	pop    rcx
  402b01:	ret    
  402b02:	nop
  402b03:	nop
  402b04:	nop
  402b05:	nop
  402b06:	nop
  402b07:	nop
  402b08:	nop
  402b09:	nop
  402b0a:	nop
  402b0b:	nop
  402b0c:	nop
  402b0d:	nop
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x69ee]        # 0x409504
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x69de]        # 0x4094fc
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x69ce]        # 0x4094f4
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x69be]        # 0x4094ec
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x69ae]        # 0x4094e4
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x699e]        # 0x4094dc
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x698e]        # 0x4094d4
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x697e]        # 0x4094cc
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x696e]        # 0x4094c4
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x695e]        # 0x4094bc
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x694e]        # 0x4094b4
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x693e]        # 0x4094ac
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x692e]        # 0x4094a4
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x691e]        # 0x40949c
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x690e]        # 0x409494
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x68fe]        # 0x40948c
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x68ee]        # 0x409484
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x68d6]        # 0x409474
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x68c6]        # 0x40946c
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x68ae]        # 0x40945c
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x689e]        # 0x409454
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x688e]        # 0x40944c
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x687e]        # 0x409444
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x6866]        # 0x409434
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x6856]        # 0x40942c
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0x6846]        # 0x409424
  402bde:	nop
  402bdf:	nop
  402be0:	mov    rax,QWORD PTR [rip+0x5e09]        # 0x4089f0
  402be7:	ret    
  402be8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	mov    rax,rcx
  402bf3:	xchg   QWORD PTR [rip+0x5df6],rax        # 0x4089f0
  402bfa:	ret    
  402bfb:	nop
  402bfc:	nop
  402bfd:	nop
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x680e]        # 0x409414
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x67fe]        # 0x40940c
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x67ee]        # 0x409404
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x67de]        # 0x4093fc
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x67ce]        # 0x4093f4
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x67be]        # 0x4093ec
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x67ae]        # 0x4093e4
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x679e]        # 0x4093dc
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x678e]        # 0x4093d4
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x677e]        # 0x4093cc
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x676e]        # 0x4093c4
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x675e]        # 0x4093bc
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x674e]        # 0x4093b4
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x673e]        # 0x4093ac
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x672e]        # 0x4093a4
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x671e]        # 0x40939c
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x670e]        # 0x409394
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x66fe]        # 0x40938c
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x66ee]        # 0x409384
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x66de]        # 0x40937c
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x66ce]        # 0x409374
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x66be]        # 0x40936c
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x66ae]        # 0x409364
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0x669e]        # 0x40935c
  402cbe:	nop
  402cbf:	nop
  402cc0:	push   rbp
  402cc1:	push   rdi
  402cc2:	push   rsi
  402cc3:	push   rbx
  402cc4:	sub    rsp,0x58
  402cc8:	xor    edi,edi
  402cca:	xor    ebp,ebp
  402ccc:	mov    rbx,rdx
  402ccf:	mov    esi,ecx
  402cd1:	call   0x401720
  402cd6:	mov    rcx,QWORD PTR [rbx]
  402cd9:	call   0x401538
  402cde:	mov    rdx,QWORD PTR [rip+0x2c7b]        # 0x405960
  402ce5:	mov    rax,QWORD PTR [rip+0x6600]        # 0x4092ec
  402cec:	xor    ecx,ecx
  402cee:	mov    QWORD PTR [rax],rdx
  402cf1:	lea    rdx,[rip+0x2308]        # 0x405000
  402cf8:	call   0x401540
  402cfd:	lea    rdx,[rip+0x2304]        # 0x405008
  402d04:	lea    rcx,[rip+0x2346]        # 0x405051
  402d0b:	call   0x4015a0
  402d10:	lea    rcx,[rip+0x233a]        # 0x405051
  402d17:	call   0x401590
  402d1c:	lea    rcx,[rip+0xffffffffffffe865]        # 0x401588
  402d23:	call   0x401660
  402d28:	mov    DWORD PTR [rip+0x52fe],0x0        # 0x408030
  402d32:	lea    r9,[rip+0x2707]        # 0x405440
  402d39:	lea    r8,[rip+0x2347]        # 0x405087
  402d40:	mov    QWORD PTR [rsp+0x20],0x0
  402d49:	mov    rdx,rbx
  402d4c:	mov    ecx,esi
  402d4e:	call   0x401550
  402d53:	cmp    eax,0xffffffff
  402d56:	je     0x402e0f
  402d5c:	cmp    eax,0x66
  402d5f:	je     0x402dd0
  402d61:	jle    0x402db0
  402d63:	cmp    eax,0x69
  402d66:	je     0x402e00
  402d6c:	cmp    eax,0x73
  402d6f:	je     0x402df0
  402d71:	cmp    eax,0x68
  402d74:	je     0x402de0
  402d76:	mov    rax,QWORD PTR [rip+0x655f]        # 0x4092dc
  402d7d:	lea    rcx,[rip+0x22dc]        # 0x405060
  402d84:	mov    rsi,QWORD PTR [rax]
  402d87:	call   0x401598
  402d8c:	mov    rbx,rax
  402d8f:	call   QWORD PTR [rip+0x66af]        # 0x409444
  402d95:	lea    rcx,[rax+0x60]
  402d99:	mov    r8,rsi
  402d9c:	mov    rdx,rbx
  402d9f:	call   0x401560
  402da4:	mov    ecx,0x1
  402da9:	call   0x402b60
  402dae:	xchg   ax,ax
  402db0:	test   eax,eax
  402db2:	je     0x402d32
  402db8:	cmp    eax,0x56
  402dbb:	jne    0x402d76
  402dbd:	mov    edi,0x1
  402dc2:	jmp    0x402d32
  402dc7:	nop    WORD PTR [rax+rax*1+0x0]
  402dd0:	mov    DWORD PTR [rip+0x5256],0x2        # 0x408030
  402dda:	jmp    0x402d32
  402ddf:	nop
  402de0:	mov    ebp,0x1
  402de5:	jmp    0x402d32
  402dea:	nop    WORD PTR [rax+rax*1+0x0]
  402df0:	mov    DWORD PTR [rip+0x5236],0x1        # 0x408030
  402dfa:	jmp    0x402d32
  402dff:	nop
  402e00:	mov    DWORD PTR [rip+0x5226],0x3        # 0x408030
  402e0a:	jmp    0x402d32
  402e0f:	test   dil,dil
  402e12:	jne    0x402ebe
  402e18:	test   bpl,bpl
  402e1b:	jne    0x402f5b
  402e21:	mov    rax,QWORD PTR [rip+0x64e4]        # 0x40930c
  402e28:	cmp    DWORD PTR [rax],esi
  402e2a:	je     0x402e47
  402e2c:	lea    rcx,[rip+0x25a0]        # 0x4053d3
  402e33:	call   0x401598
  402e38:	xor    edx,edx
  402e3a:	mov    r8,rax
  402e3d:	mov    ecx,0x1
  402e42:	call   0x401580
  402e47:	lea    rbx,[rsp+0x40]
  402e4c:	mov    DWORD PTR [rsp+0x3c],0x10
  402e54:	lea    rdx,[rsp+0x3c]
  402e59:	mov    rcx,rbx
  402e5c:	call   QWORD PTR [rip+0x650a]        # 0x40936c
  402e62:	test   eax,eax
  402e64:	jne    0x402e81
  402e66:	lea    rcx,[rip+0x2579]        # 0x4053e6
  402e6d:	call   0x401598
  402e72:	xor    edx,edx
  402e74:	mov    r8,rax
  402e77:	mov    ecx,0x1
  402e7c:	call   0x401580
  402e81:	mov    rcx,rbx
  402e84:	call   0x401530
  402e89:	mov    r8d,DWORD PTR [rip+0x51a0]        # 0x408030
  402e90:	mov    rbx,rax
  402e93:	cmp    r8d,0x1
  402e97:	je     0x402f32
  402e9d:	jb     0x402f47
  402ea3:	cmp    r8d,0x2
  402ea7:	je     0x402f47
  402ead:	cmp    r8d,0x3
  402eb1:	jne    0x403074
  402eb7:	xor    ecx,ecx
  402eb9:	call   0x402b60
  402ebe:	mov    rax,QWORD PTR [rip+0x6417]        # 0x4092dc
  402ec5:	mov    rcx,QWORD PTR [rax]
  402ec8:	call   0x401578
  402ecd:	lea    r9,[rip+0x21b9]        # 0x40508d
  402ed4:	lea    r8,[rip+0x2176]        # 0x405051
  402edb:	lea    rcx,[rip+0x21b4]        # 0x405096
  402ee2:	mov    rdx,rax
  402ee5:	call   0x401548
  402eea:	lea    rcx,[rip+0x21b7]        # 0x4050a8
  402ef1:	call   0x401598
  402ef6:	lea    rdx,[rip+0x22a3]        # 0x4051a0
  402efd:	mov    rcx,rax
  402f00:	call   0x401548
  402f05:	lea    rcx,[rip+0x22a9]        # 0x4051b5
  402f0c:	call   0x401568
  402f11:	lea    rcx,[rip+0x22aa]        # 0x4051c2
  402f18:	mov    rbx,rax
  402f1b:	call   0x401598
  402f20:	mov    rdx,rbx
  402f23:	mov    rcx,rax
  402f26:	call   0x401548
  402f2b:	xor    ecx,ecx
  402f2d:	call   0x402b60
  402f32:	mov    edx,0x2e
  402f37:	mov    rcx,rax
  402f3a:	call   0x402b28
  402f3f:	test   rax,rax
  402f42:	je     0x402f47
  402f44:	mov    BYTE PTR [rax],0x0
  402f47:	lea    rcx,[rip+0x24b0]        # 0x4053fe
  402f4e:	mov    rdx,rbx
  402f51:	call   0x401548
  402f56:	jmp    0x402eb7
  402f5b:	mov    rax,QWORD PTR [rip+0x637a]        # 0x4092dc
  402f62:	lea    rcx,[rip+0x2269]        # 0x4051d2
  402f69:	mov    rbx,QWORD PTR [rax]
  402f6c:	call   0x401598
  402f71:	mov    rcx,rax
  402f74:	mov    rdx,rbx
  402f77:	call   0x401548
  402f7c:	lea    rcx,[rip+0x2263]        # 0x4051e6
  402f83:	call   0x401548
  402f88:	lea    rcx,[rip+0x2259]        # 0x4051e8
  402f8f:	call   0x401598
  402f94:	mov    rcx,rax
  402f97:	call   0x401548
  402f9c:	lea    rcx,[rip+0x2243]        # 0x4051e6
  402fa3:	call   0x401548
  402fa8:	lea    rcx,[rip+0x2258]        # 0x405207
  402faf:	call   0x401598
  402fb4:	mov    rcx,rax
  402fb7:	call   0x401548
  402fbc:	lea    rcx,[rip+0x2255]        # 0x405218
  402fc3:	call   0x401598
  402fc8:	mov    rcx,rax
  402fcb:	call   0x401548
  402fd0:	lea    rcx,[rip+0x2271]        # 0x405248
  402fd7:	call   0x401598
  402fdc:	mov    rcx,rax
  402fdf:	call   0x401548
  402fe4:	lea    rcx,[rip+0x22e5]        # 0x4052d0
  402feb:	call   0x401598
  402ff0:	mov    rcx,rax
  402ff3:	call   0x401548
  402ff8:	lea    rcx,[rip+0x21e7]        # 0x4051e6
  402fff:	call   0x401548
  403004:	lea    rcx,[rip+0x22ff]        # 0x40530a
  40300b:	call   0x401598
  403010:	mov    rcx,rax
  403013:	call   0x401548
  403018:	lea    rcx,[rip+0x2301]        # 0x405320
  40301f:	call   0x401598
  403024:	mov    rcx,rax
  403027:	call   0x401548
  40302c:	lea    rcx,[rip+0x232d]        # 0x405360
  403033:	call   0x401598
  403038:	mov    rcx,rax
  40303b:	call   0x401548
  403040:	lea    rcx,[rip+0x219f]        # 0x4051e6
  403047:	call   0x401548
  40304c:	call   QWORD PTR [rip+0x63f2]        # 0x409444
  403052:	lea    rcx,[rip+0x234f]        # 0x4053a8
  403059:	mov    rbx,rax
  40305c:	call   0x401598
  403061:	lea    rdx,[rbx+0x30]
  403065:	mov    rcx,rax
  403068:	call   0x401558
  40306d:	xor    ecx,ecx
  40306f:	call   0x402b60
  403074:	call   0x402b70
  403079:	nop
  40307a:	nop
  40307b:	nop
  40307c:	nop
  40307d:	nop
  40307e:	nop
  40307f:	nop
  403080:	(bad)  
  403081:	(bad)  
  403082:	(bad)  
  403083:	(bad)  
  403084:	(bad)  
  403085:	(bad)  
  403086:	(bad)  
  403087:	inc    DWORD PTR [rax]
  403089:	add    BYTE PTR [rax],al
  40308b:	add    BYTE PTR [rax],al
  40308d:	add    BYTE PTR [rax],al
  40308f:	add    bh,bh
  403091:	(bad)  
  403092:	(bad)  
  403093:	(bad)  
  403094:	(bad)  
  403095:	(bad)  
  403096:	(bad)  
  403097:	inc    DWORD PTR [rax]
  403099:	add    BYTE PTR [rax],al
  40309b:	add    BYTE PTR [rax],al
  40309d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	cwde   
  404011:	xor    BYTE PTR [rax+0x0],al
	...
  404020:	(bad)  
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    al,ah
  404061:	sub    eax,DWORD PTR [rax+0x0]
  404064:	add    BYTE PTR [rax],al
  404066:	add    BYTE PTR [rax],al
  404068:	lock sub eax,DWORD PTR [rax+0x0]
  40406c:	add    BYTE PTR [rax],al
  40406e:	add    BYTE PTR [rax],al
  404070:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
	...
  405008:	(bad)  
  405009:	jae    0x40506e
  40500b:	jb     0x40506e
  40500d:	je     0x405072
  40500f:	push   0x65776a2f
  405014:	(bad)  
  405015:	ins    DWORD PTR es:[rdi],dx
  405016:	js     0x40507d
  405018:	sub    eax,0x6174636f
  40501d:	jbe    0x405084
  40501f:	(bad)  
  405020:	xor    al,0x2e
  405022:	xor    ch,BYTE PTR [rsi]
  405024:	xor    DWORD PTR [rdi],ebp
  405026:	ja     0x40505e
  405028:	xor    al,0x2d
  40502a:	xor    esi,DWORD PTR [rdx]
  40502c:	(bad)  
  40502d:	jne    0x4050a2
  40502f:	jb     0x405060
  405031:	js     0x40506b
  405033:	ss pop rdi
  405035:	ss xor al,0x2d
  405038:	ja     0x405070
  40503a:	xor    al,0x2d
  40503c:	ins    DWORD PTR es:[rdi],dx
  40503d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  405044:	jae    0x4050ae
  405046:	(bad)  
  405047:	jb     0x4050ae
  405049:	(bad)  
  40504a:	ins    BYTE PTR es:[rdi],dx
  40504b:	outs   dx,DWORD PTR ds:[rsi]
  40504c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40504f:	add    BYTE PTR gs:[rdi+0x65],ah
  405053:	je     0x4050c9
  405055:	gs js  0x4050cc
  405058:	sub    eax,0x6c6f6f74
  40505d:	jae    0x40505f
  40505f:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  405063:	and    BYTE PTR [rdi],ah
  405065:	and    eax,0x2d2d2073
  40506a:	push   0x27706c65
  40506f:	and    BYTE PTR [rsi+0x6f],ah
  405072:	jb     0x405094
  405074:	ins    DWORD PTR es:[rdi],dx
  405075:	outs   dx,DWORD PTR ds:[rsi]
  405076:	jb     0x4050dd
  405078:	and    BYTE PTR [rcx+0x6e],ch
  40507b:	outs   dx,WORD PTR ds:[rsi]
  40507d:	jb     0x4050ec
  40507f:	(bad)  
  405080:	je     0x4050eb
  405082:	outs   dx,DWORD PTR ds:[rsi]
  405083:	outs   dx,BYTE PTR ds:[rsi]
  405084:	or     al,BYTE PTR cs:[rax]
  405087:	pushw  0x7369
  40508b:	push   rsi
  40508c:	add    BYTE PTR [rax],dh
  40508e:	xor    DWORD PTR cs:[rcx],edi
  405091:	cs xor eax,0x2500312e
  405097:	jae    0x4050b9
  405099:	sub    BYTE PTR [rdi+0x4e],al
  40509c:	push   rbp
  40509d:	and    BYTE PTR [rip+0x25202973],ah        # 0x25607a16
  4050a3:	jae    0x4050af
  4050a5:	add    BYTE PTR [rax],al
  4050a7:	add    BYTE PTR [rbx+0x6f],al
  4050aa:	jo     0x405125
  4050ac:	jb     0x405117
  4050ae:	addr32 push 0x43282074
  4050b4:	sub    DWORD PTR [rax],esp
  4050b6:	and    eax,0x72462073
  4050bb:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4050c0:	data16 je 0x40513a
  4050c3:	(bad)  
  4050c4:	jb     0x40512b
  4050c6:	and    BYTE PTR [rsi+0x6f],al
  4050c9:	jne    0x405139
  4050cb:	fs (bad) 
  4050cd:	je     0x405138
  4050cf:	outs   dx,DWORD PTR ds:[rsi]
  4050d0:	outs   dx,BYTE PTR ds:[rsi]
  4050d1:	sub    al,0x20
  4050d3:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4050d5:	movsxd ebp,DWORD PTR [rsi]
  4050d7:	or     cl,BYTE PTR [rcx+rbp*2+0x63]
  4050db:	outs   dx,BYTE PTR gs:[rsi]
  4050dd:	jae    0x405144
  4050df:	and    BYTE PTR [rdi+0x50],al
  4050e2:	rex.WR jbe 0x405118
  4050e5:	sub    edi,DWORD PTR [rdx]
  4050e7:	and    BYTE PTR [rdi+0x4e],al
  4050ea:	push   rbp
  4050eb:	and    BYTE PTR [rdi+0x50],al
  4050ee:	rex.WR and BYTE PTR [rsi+0x65],r14b
  4050f2:	jb     0x405167
  4050f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  4050fb:	jb     0x40511d
  4050fd:	ins    BYTE PTR es:[rdi],dx
  4050fe:	(bad)  
  4050ff:	je     0x405166
  405101:	jb     0x405123
  405103:	cmp    al,0x68
  405105:	je     0x40517b
  405107:	jo     0x405143
  405109:	(bad)  
  40510a:	(bad)  
  40510b:	outs   dx,BYTE PTR ds:[esi]
  40510d:	jne    0x40513d
  40510f:	outs   dx,DWORD PTR ds:[rsi]
  405110:	jb     0x405179
  405112:	(bad)  
  405113:	ins    BYTE PTR es:[rdi],dx
  405114:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  40511b:	(bad)  
  40511c:	addr32 jo 0x40518b
  40511f:	cs push 0x3e6c6d74
  405125:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  405129:	jae    0x40514b
  40512b:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  405132:	and    BYTE PTR [rbx+0x6f],dh
  405135:	data16 je 0x4051af
  405138:	(bad)  
  405139:	jb     0x4051a0
  40513b:	cmp    ah,BYTE PTR [rax]
  40513d:	jns    0x4051ae
  40513f:	jne    0x405161
  405141:	(bad)  
  405142:	jb     0x4051a9
  405144:	and    BYTE PTR [rsi+0x72],ah
  405147:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40514d:	movsxd ebp,DWORD PTR [rax+0x61]
  405150:	outs   dx,BYTE PTR ds:[rsi]
  405151:	and    BYTE PTR gs:[ecx+0x6e],ah
  405156:	and    BYTE PTR fs:[rdx+0x65],dh
  40515a:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  405162:	je     0x4051c9
  405164:	and    BYTE PTR [rcx+0x74],ch
  405167:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  40516c:	jb     0x4051d3
  40516e:	and    BYTE PTR [rcx+0x73],ch
  405171:	and    BYTE PTR [rsi+0x4f],cl
  405174:	and    BYTE PTR [rdi+0x41],dl
  405177:	push   rdx
  405178:	push   rdx
  405179:	rex.B
  40517a:	rex.WRX push rsp
  40517c:	pop    rcx
  40517d:	sub    al,0x20
  40517f:	je     0x4051f0
  405181:	and    BYTE PTR [rax+rbp*2+0x65],dh
  405185:	and    BYTE PTR [rbp+0x78],ah
  405188:	je     0x4051ef
  40518a:	outs   dx,BYTE PTR ds:[rsi]
  40518b:	je     0x4051ad
  40518d:	jo     0x4051f4
  40518f:	jb     0x4051fe
  405191:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  405199:	and    BYTE PTR [rcx+riz*2+0x77],ch
  40519d:	or     al,BYTE PTR cs:[rax]
  4051a0:	xor    dh,BYTE PTR [rax]
  4051a2:	xor    BYTE PTR [rcx],dh
  4051a4:	sub    eax,0x33303032
  4051a9:	sub    al,0x20
  4051ab:	xor    dh,BYTE PTR [rax]
  4051ad:	xor    BYTE PTR [rsi],dh
  4051af:	sub    eax,0x37303032
  4051b4:	add    BYTE PTR [rdx+0x72],al
  4051b7:	jne    0x405227
  4051b9:	outs   dx,DWORD PTR ds:[rsi]
  4051ba:	and    BYTE PTR [rax+0x61],cl
  4051bd:	imul   esp,DWORD PTR [rdx+0x6c],0x72570065
  4051c4:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7962206e
  4051cc:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4a8045
  4051d2:	push   rbp
  4051d3:	jae    0x405236
  4051d5:	cmp    ah,BYTE PTR gs:[eax]
  4051d9:	and    eax,0x4f5b2073
  4051de:	push   rax
  4051df:	push   rsp
  4051e0:	rex.WB
  4051e1:	rex.WRXB
  4051e2:	rex.WRX pop rbp
  4051e4:	or     al,BYTE PTR [rax]
  4051e6:	or     al,BYTE PTR [rax]
  4051e8:	push   rax
  4051e9:	jb     0x405254
  4051eb:	outs   dx,BYTE PTR ds:[rsi]
  4051ec:	je     0x40520e
  4051ee:	je     0x405258
  4051f0:	and    BYTE PTR gs:[rbp+0x61],ch
  4051f4:	movsxd ebp,DWORD PTR [rax+0x69]
  4051f7:	outs   dx,BYTE PTR ds:[rsi]
  4051f8:	gs (bad) 
  4051fa:	jae    0x40521c
  4051fc:	push   0x6e74736f
  405201:	(bad)  
  405202:	ins    DWORD PTR es:[rdi],dx
  405203:	gs or  al,BYTE PTR cs:[rax]
  405207:	rex.WRXB jne 0x40527e
  40520a:	jo     0x405281
  40520c:	je     0x40522e
  40520e:	outs   dx,WORD PTR ds:[rsi]
  405210:	jb     0x40527f
  405212:	(bad)  
  405213:	je     0x40524f
  405215:	or     al,BYTE PTR [rax]
  405217:	add    BYTE PTR [rax],ah
  405219:	and    BYTE PTR [rip+0x2d202c73],ch        # 0x2d607e92
  40521f:	sub    eax,0x726f6873
  405224:	je     0x405246
  405226:	and    BYTE PTR [rax],ah
  405228:	and    BYTE PTR [rax],ah
  40522a:	and    BYTE PTR [rax],ah
  40522c:	and    BYTE PTR [rax],ah
  40522e:	and    BYTE PTR [rax],ah
  405230:	and    BYTE PTR [rax],ah
  405232:	and    BYTE PTR [rax],ah
  405234:	and    BYTE PTR [rax],ah
  405236:	jae    0x4052a0
  405238:	outs   dx,DWORD PTR ds:[rsi]
  405239:	jb     0x4052af
  40523b:	and    BYTE PTR [rax+0x6f],ch
  40523e:	jae    0x4052b4
  405240:	and    BYTE PTR [rsi+0x61],ch
  405243:	ins    DWORD PTR es:[rdi],dx
  405244:	or     al,BYTE PTR gs:[rax]
  405247:	add    BYTE PTR [rax],ah
  405249:	and    BYTE PTR [rip+0x2d202c66],ch        # 0x2d607eb5
  40524f:	sub    eax,0x6e647166
  405254:	sub    al,0x20
  405256:	sub    eax,0x6e6f6c2d
  40525b:	and    BYTE PTR [eax],ah
  40525e:	and    BYTE PTR [rax],ah
  405260:	and    BYTE PTR [rax],ah
  405262:	and    BYTE PTR [rax],ah
  405264:	and    BYTE PTR [rax],ah
  405266:	ins    BYTE PTR es:[rdi],dx
  405267:	outs   dx,DWORD PTR ds:[rsi]
  405268:	outs   dx,BYTE PTR ds:[rsi]
  405269:	and    BYTE PTR [eax+0x6f],ch
  40526d:	jae    0x4052e3
  40526f:	and    BYTE PTR [rsi+0x61],ch
  405272:	ins    DWORD PTR es:[rdi],dx
  405273:	gs sub al,0x20
  405276:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  40527d:	jae    0x40529f
  40527f:	data16 jne 0x4052ee
  405282:	ins    BYTE PTR es:[rdi],dx
  405283:	jns    0x4052a5
  405285:	jno    0x4052fc
  405287:	(bad)  
  405288:	ins    BYTE PTR es:[rdi],dx
  405289:	imul   esp,DWORD PTR [rsi+0x69],0x64206465
  405290:	outs   dx,DWORD PTR ds:[rsi]
  405291:	ins    DWORD PTR es:[rdi],dx
  405292:	(bad)  
  405293:	imul   ebp,DWORD PTR [rsi+0xa],0x20202020
  40529a:	and    BYTE PTR [rax],ah
  40529c:	and    BYTE PTR [rax],ah
  40529e:	and    BYTE PTR [rax],ah
  4052a0:	and    BYTE PTR [rax],ah
  4052a2:	and    BYTE PTR [rax],ah
  4052a4:	and    BYTE PTR [rax],ah
  4052a6:	and    BYTE PTR [rax],ah
  4052a8:	and    BYTE PTR [rax],ah
  4052aa:	and    BYTE PTR [rax],ah
  4052ac:	and    BYTE PTR [rax],ah
  4052ae:	and    BYTE PTR [rax],ah
  4052b0:	and    BYTE PTR [rax],ah
  4052b2:	and    BYTE PTR [rax],ah
  4052b4:	and    BYTE PTR [rax],ah
  4052b6:	outs   dx,BYTE PTR ds:[rsi]
  4052b7:	(bad)  
  4052b8:	ins    DWORD PTR es:[rdi],dx
  4052b9:	gs sub al,0x20
  4052bc:	(bad)  
  4052bd:	outs   dx,BYTE PTR ds:[rsi]
  4052be:	and    BYTE PTR fs:[rcx+0x6c],ah
  4052c2:	imul   esp,DWORD PTR [rcx+0x73],0xa7365
  4052c9:	add    BYTE PTR [rax],al
  4052cb:	add    BYTE PTR [rax],al
  4052cd:	add    BYTE PTR [rax],al
  4052cf:	add    BYTE PTR [rax],ah
  4052d1:	and    BYTE PTR [rip+0x2d202c69],ch        # 0x2d607f40
  4052d7:	sub    eax,0x612d7069
  4052dc:	fs fs jb 0x405345
  4052e0:	jae    0x405355
  4052e2:	and    BYTE PTR [rax],ah
  4052e4:	and    BYTE PTR [rax],ah
  4052e6:	and    BYTE PTR [rax],ah
  4052e8:	and    BYTE PTR [rax],ah
  4052ea:	and    BYTE PTR [rax],ah
  4052ec:	and    BYTE PTR [rax],ah
  4052ee:	(bad)  
  4052ef:	fs fs jb 0x405358
  4052f3:	jae    0x405368
  4052f5:	gs jae 0x405318
  4052f8:	outs   dx,WORD PTR ds:[rsi]
  4052fa:	jb     0x40531c
  4052fc:	je     0x405366
  4052fe:	and    BYTE PTR gs:[rax+0x6f],ch
  405302:	jae    0x405378
  405304:	outs   dx,BYTE PTR ds:[rsi]
  405305:	(bad)  
  405306:	ins    DWORD PTR es:[rdi],dx
  405307:	or     al,BYTE PTR gs:[rax]
  40530a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40530c:	outs   dx,WORD PTR ds:[rsi]
  40530e:	jb     0x40537d
  405310:	(bad)  
  405311:	je     0x40537c
  405313:	jbe    0x40537a
  405315:	and    BYTE PTR [rdi+0x75],ch
  405318:	je     0x40538a
  40531a:	jne    0x405390
  40531c:	cmp    cl,BYTE PTR [rdx]
  40531e:	add    BYTE PTR [rax],al
  405320:	and    BYTE PTR [rax],ah
  405322:	sub    eax,0x2d202c68
  405327:	sub    eax,0x706c6568
  40532c:	and    BYTE PTR [rax],ah
  40532e:	and    BYTE PTR [rax],ah
  405330:	and    BYTE PTR [rax],ah
  405332:	and    BYTE PTR [rax],ah
  405334:	and    BYTE PTR [rax],ah
  405336:	and    BYTE PTR [rax],ah
  405338:	and    BYTE PTR [rax],ah
  40533a:	and    BYTE PTR [rax],ah
  40533c:	and    BYTE PTR [rax],ah
  40533e:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  405346:	je     0x4053b0
  405348:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  40534f:	and    BYTE PTR [rcx+0x6e],ah
  405352:	and    BYTE PTR fs:[rbp+0x78],ah
  405356:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  40535e:	add    BYTE PTR [rax],al
  405360:	and    BYTE PTR [rax],ah
  405362:	sub    eax,0x2d202c56
  405367:	sub    eax,0x73726576
  40536c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  405373:	and    BYTE PTR [rax],ah
  405375:	and    BYTE PTR [rax],ah
  405377:	and    BYTE PTR [rax],ah
  405379:	and    BYTE PTR [rax],ah
  40537b:	and    BYTE PTR [rax],ah
  40537d:	and    BYTE PTR [rdi+0x75],ch
  405380:	je     0x4053f2
  405382:	jne    0x4053f8
  405384:	and    BYTE PTR [rsi+0x65],dh
  405387:	jb     0x4053fc
  405389:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  405390:	outs   dx,DWORD PTR ds:[rsi]
  405391:	jb     0x405400
  405393:	(bad)  
  405394:	je     0x4053ff
  405396:	outs   dx,DWORD PTR ds:[rsi]
  405397:	outs   dx,BYTE PTR ds:[rsi]
  405398:	and    BYTE PTR [rcx+0x6e],ah
  40539b:	and    BYTE PTR fs:[rbp+0x78],ah
  40539f:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  4053a7:	add    BYTE PTR [rdx+0x65],dl
  4053aa:	jo     0x40541b
  4053ac:	jb     0x405422
  4053ae:	and    BYTE PTR [rdx+0x75],ah
  4053b1:	addr32 jae 0x4053d4
  4053b4:	je     0x405425
  4053b6:	and    BYTE PTR [rdx+riz*2],bh
  4053b9:	jne    0x405422
  4053bb:	sub    eax,0x2d756e67
  4053c0:	addr32 gs je 0x405438
  4053c4:	gs js  0x40543b
  4053c7:	rex
  4053c8:	outs   dx,BYTE PTR ds:[esi]
  4053ca:	jne    0x4053fa
  4053cc:	outs   dx,DWORD PTR ds:[rsi]
  4053cd:	jb     0x405436
  4053cf:	ds or  al,BYTE PTR cs:[rax]
  4053d3:	je     0x405444
  4053d5:	outs   dx,DWORD PTR ds:[rsi]
  4053d6:	and    BYTE PTR [rbp+0x61],ch
  4053d9:	outs   dx,BYTE PTR ds:[rsi]
  4053da:	jns    0x4053fc
  4053dc:	(bad)  
  4053dd:	jb     0x405446
  4053df:	jne    0x40544e
  4053e1:	outs   dx,BYTE PTR gs:[rsi]
  4053e3:	je     0x405458
  4053e5:	add    BYTE PTR [rbx+0x6f],ah
  4053e8:	jne    0x405456
  4053ea:	and    BYTE PTR fs:[rsi+0x6f],ch
  4053ee:	je     0x405410
  4053f0:	addr32 gs je 0x405414
  4053f4:	push   0x2074736f
  4053f9:	outs   dx,BYTE PTR ds:[rsi]
  4053fa:	(bad)  
  4053fb:	ins    DWORD PTR es:[rdi],dx
  4053fc:	add    BYTE PTR gs:[rip+0x66000a73],ah        # 0x66405e76
  405403:	jno    0x405469
  405405:	outs   dx,BYTE PTR ds:[rsi]
  405406:	add    BYTE PTR [rax+0x65],ch
  405409:	ins    BYTE PTR es:[rdi],dx
  40540a:	jo     0x40540c
  40540c:	imul   esi,DWORD PTR [rax+0x2d],0x72646461
  405413:	gs jae 0x405489
  405416:	add    BYTE PTR [rdi+rbp*2+0x6e],ch
  40541a:	add    BYTE PTR [ebx+0x68],dh
  40541e:	outs   dx,DWORD PTR ds:[rsi]
  40541f:	jb     0x405495
  405421:	add    BYTE PTR [rsi+0x65],dh
  405424:	jb     0x405499
  405426:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
	...
  40543d:	add    BYTE PTR [rax],al
  40543f:	add    BYTE PTR [rdx],al
  405441:	push   rsp
  405442:	add    BYTE PTR [rax],al
	...
  405455:	add    BYTE PTR [rax],al
  405457:	add    BYTE PTR [rsi+0x0],ah
  40545a:	add    BYTE PTR [rax],al
  40545c:	add    BYTE PTR [rax],al
  40545e:	add    BYTE PTR [rax],al
  405460:	(bad)  
  405461:	push   rsp
  405462:	add    BYTE PTR [rax],al
	...
  405475:	add    BYTE PTR [rax],al
  405477:	add    BYTE PTR [rax+0x0],ch
  40547a:	add    BYTE PTR [rax],al
  40547c:	add    BYTE PTR [rax],al
  40547e:	add    BYTE PTR [rax],al
  405480:	or     al,0x54
  405482:	add    BYTE PTR [rax],al
	...
  405495:	add    BYTE PTR [rax],al
  405497:	add    BYTE PTR [rcx+0x0],ch
  40549a:	add    BYTE PTR [rax],al
  40549c:	add    BYTE PTR [rax],al
  40549e:	add    BYTE PTR [rax],al
  4054a0:	(bad)  
  4054a1:	push   rsp
  4054a2:	add    BYTE PTR [rax],al
	...
  4054b5:	add    BYTE PTR [rax],al
  4054b7:	add    BYTE PTR [rsi+0x0],ah
  4054ba:	add    BYTE PTR [rax],al
  4054bc:	add    BYTE PTR [rax],al
  4054be:	add    BYTE PTR [rax],al
  4054c0:	sbb    al,0x54
  4054c2:	add    BYTE PTR [rax],al
	...
  4054d5:	add    BYTE PTR [rax],al
  4054d7:	add    BYTE PTR [rbx+0x0],dh
  4054da:	add    BYTE PTR [rax],al
  4054dc:	add    BYTE PTR [rax],al
  4054de:	add    BYTE PTR [rax],al
  4054e0:	and    dl,BYTE PTR [rax+rax*2+0x0]
	...
  4054f8:	push   rsi
	...
  40553d:	add    BYTE PTR [rax],al
  40553f:	add    BYTE PTR [rax+0x4085],al
  405545:	add    BYTE PTR [rax],al
  405547:	add    BYTE PTR [rax+0x4080],al
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rax+0x19],dh
  405552:	add    BYTE PTR [rax],al
	...
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    BYTE PTR [rcx+0x72],al
  405562:	addr32 jne 0x4055d2
  405565:	outs   dx,BYTE PTR gs:[rsi]
  405567:	je     0x405589
  405569:	outs   dx,DWORD PTR fs:[rsi]
  40556b:	ins    DWORD PTR es:[rdi],dx
  40556c:	(bad)  
  40556d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405574:	jb     0x405596
  405576:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40557a:	rex.B
  40557b:	rex.WB
  40557c:	rex.WRX sub QWORD PTR [rax],r8
  40557f:	rex.B jb 0x4055e9
  405582:	jne    0x4055f1
  405584:	outs   dx,BYTE PTR gs:[rsi]
  405586:	je     0x4055a8
  405588:	jae    0x4055f3
  40558a:	outs   dx,BYTE PTR ds:[rsi]
  40558b:	addr32 jne 0x4055fa
  40558e:	(bad)  
  40558f:	jb     0x4055fa
  405591:	je     0x40560c
  405593:	and    BYTE PTR [rax],ch
  405595:	push   rbx
  405596:	rex.WB
  405597:	rex.RXB
  405598:	rex.WRX sub QWORD PTR [rax],r8
  40559b:	add    BYTE PTR [rax],al
  40559d:	add    BYTE PTR [rax],al
  40559f:	add    BYTE PTR [rdi+0x76],cl
  4055a2:	gs jb  0x40560b
  4055a5:	ins    BYTE PTR es:[rdi],dx
  4055a6:	outs   dx,DWORD PTR ds:[rsi]
  4055a7:	ja     0x4055c9
  4055a9:	jb     0x40560c
  4055ab:	outs   dx,BYTE PTR ds:[rsi]
  4055ac:	and    BYTE PTR gs:[ebp+0x72],ah
  4055b1:	jb     0x405622
  4055b3:	jb     0x4055d5
  4055b5:	sub    BYTE PTR [rdi+0x56],cl
  4055b8:	rex.RB push r10
  4055ba:	rex.RX
  4055bb:	rex.WR
  4055bc:	rex.WRXB push r15
  4055be:	sub    DWORD PTR [rax],eax
  4055c0:	push   rax
  4055c1:	(bad)  
  4055c2:	jb     0x405638
  4055c4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4055cb:	jae    0x4055ed
  4055cd:	outs   dx,DWORD PTR ds:[rsi]
  4055ce:	data16 and BYTE PTR [rbx+0x69],dh
  4055d2:	outs   dx,BYTE PTR ds:[esi]
  4055d4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4055db:	and    BYTE PTR gs:[rax],ch
  4055de:	push   rax
  4055df:	rex.WR
  4055e0:	rex.WRXB push r11
  4055e2:	push   rbx
  4055e3:	sub    DWORD PTR [rax],eax
  4055e5:	add    BYTE PTR [rax],al
  4055e7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4055eb:	(bad)  
  4055ec:	ins    BYTE PTR es:[rdi],dx
  4055ed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4055f1:	jae    0x405613
  4055f3:	outs   dx,DWORD PTR ds:[rsi]
  4055f4:	data16 and BYTE PTR [rbx+0x69],dh
  4055f8:	outs   dx,BYTE PTR ds:[esi]
  4055fa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405601:	and    BYTE PTR gs:[rax],ch
  405604:	push   rsp
  405605:	rex.WR
  405606:	rex.WRXB push r11
  405608:	push   rbx
  405609:	sub    DWORD PTR [rax],eax
  40560b:	add    BYTE PTR [rax],al
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405613:	and    BYTE PTR [rdx+0x65],dh
  405616:	jae    0x40568d
  405618:	ins    BYTE PTR es:[rdi],dx
  405619:	je     0x40563b
  40561b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405622:	jae    0x405691
  405624:	(bad)  
  405625:	ins    BYTE PTR es:[rdi],dx
  405626:	ins    BYTE PTR es:[rdi],dx
  405627:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40562b:	(bad)  
  40562c:	and    BYTE PTR gs:[rdx+0x65],dh
  405630:	jo     0x4056a4
  405632:	gs jae 0x40569a
  405635:	outs   dx,BYTE PTR ds:[rsi]
  405636:	je     0x40569d
  405638:	and    BYTE PTR fs:[rax],ch
  40563b:	push   rbp
  40563c:	rex.WRX
  40563d:	rex.R
  40563e:	rex.RB push r10
  405640:	rex.RX
  405641:	rex.WR
  405642:	rex.WRXB push r15
  405644:	sub    DWORD PTR [rax],eax
  405646:	push   rbp
  405647:	outs   dx,BYTE PTR ds:[rsi]
  405648:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40564c:	outs   dx,BYTE PTR ds:[rsi]
  40564d:	and    BYTE PTR [rbp+0x72],ah
  405650:	jb     0x4056c1
  405652:	jb     0x405654
  405654:	add    BYTE PTR [rax],al
  405656:	add    BYTE PTR [rax],al
  405658:	pop    rdi
  405659:	ins    DWORD PTR es:[rdi],dx
  40565a:	(bad)  
  40565b:	je     0x4056c5
  40565d:	gs jb  0x4056d2
  405660:	sub    BYTE PTR [rcx],ch
  405662:	cmp    ah,BYTE PTR [rax]
  405664:	and    eax,0x6e692073
  405669:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657ee2
  40566f:	sub    al,0x20
  405671:	and    eax,0x20202967
  405676:	sub    BYTE PTR [rdx+0x65],dh
  405679:	je     0x4056f1
  40567b:	(bad)  
  40567c:	ins    BYTE PTR es:[rdi],dx
  40567d:	cmp    eax,0xa296725
  405682:	add    BYTE PTR [rax],al
  405684:	mov    esp,0xfdffffc4
  405689:	ret    
  40568a:	(bad)  
  40568b:	jmp    FWORD PTR [rsp+rax*8-0x1]
  40568f:	(bad)  
  405690:	jl     0x405656
  405692:	(bad)  
  405693:	dec    DWORD PTR [rsp+rax*8-0x3b630001]
  40569a:	(bad)  
  40569b:	jmp    FWORD PTR [rsp+rax*8+0x694dffff]
  4056a2:	outs   dx,BYTE PTR ds:[rsi]
  4056a3:	addr32 ja 0x4056d3
  4056a6:	ja     0x4056de
  4056a8:	xor    al,0x20
  4056aa:	jb     0x405721
  4056ac:	outs   dx,BYTE PTR ds:[rsi]
  4056ad:	je     0x405718
  4056af:	ins    DWORD PTR es:[rdi],dx
  4056b0:	and    BYTE PTR gs:[rsi+0x61],ah
  4056b4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4056bc:	add    BYTE PTR [rax],al
  4056be:	add    BYTE PTR [rax],al
  4056c0:	rex.B
  4056c1:	fs fs jb 0x40572a
  4056c5:	jae    0x40573a
  4056c7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8773d
  4056cd:	jae    0x4056ef
  4056cf:	outs   dx,BYTE PTR ds:[rsi]
  4056d0:	outs   dx,DWORD PTR ds:[rsi]
  4056d1:	and    BYTE PTR [rcx+0x6d],ch
  4056d4:	(bad)  
  4056d5:	addr32 gs sub eax,0x74636573
  4056dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4056e3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4056ea:	jne    0x405751
  4056ec:	jb     0x405767
  4056ee:	and    BYTE PTR [rsi+0x61],ah
  4056f1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4056f9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27763
  4056ff:	je     0x405766
  405701:	jae    0x405723
  405703:	(bad)  
  405704:	je     0x405726
  405706:	(bad)  
  405707:	fs fs jb 0x405770
  40570b:	jae    0x405780
  40570d:	and    BYTE PTR [rip+0x70],ah        # 0x405783
  405713:	add    BYTE PTR [rax],al
  405715:	add    BYTE PTR [rax],al
  405717:	add    BYTE PTR [rax],ah
  405719:	and    BYTE PTR [rsi+0x69],dl
  40571c:	jb     0x405792
  40571e:	jne    0x405781
  405720:	ins    BYTE PTR es:[rdi],dx
  405721:	push   rax
  405722:	jb     0x405793
  405724:	je     0x40578b
  405726:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40572a:	(bad)  
  40572b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405733:	push   0x646f6320
  405738:	and    BYTE PTR gs:[rax],dh
  40573b:	js     0x405762
  40573d:	js     0x40573f
  40573f:	add    BYTE PTR [rax],ah
  405741:	and    BYTE PTR [rbp+0x6e],dl
  405744:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405748:	outs   dx,BYTE PTR ds:[rsi]
  405749:	and    BYTE PTR [rax+0x73],dh
  40574c:	gs jne 0x4057b3
  40574f:	outs   dx,DWORD PTR ds:[rsi]
  405750:	and    BYTE PTR [rdx+0x65],dh
  405753:	ins    BYTE PTR es:[rdi],dx
  405754:	outs   dx,DWORD PTR ds:[rsi]
  405755:	movsxd esp,DWORD PTR [rcx+0x74]
  405758:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40575f:	je     0x4057d0
  405761:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405764:	and    BYTE PTR [rsi+0x65],dh
  405767:	jb     0x4057dc
  405769:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405770:	or     al,BYTE PTR [rax]
  405772:	add    BYTE PTR [rax],al
  405774:	add    BYTE PTR [rax],al
  405776:	add    BYTE PTR [rax],al
  405778:	and    BYTE PTR [rax],ah
  40577a:	push   rbp
  40577b:	outs   dx,BYTE PTR ds:[rsi]
  40577c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405780:	outs   dx,BYTE PTR ds:[rsi]
  405781:	and    BYTE PTR [rax+0x73],dh
  405784:	gs jne 0x4057eb
  405787:	outs   dx,DWORD PTR ds:[rsi]
  405788:	and    BYTE PTR [rdx+0x65],dh
  40578b:	ins    BYTE PTR es:[rdi],dx
  40578c:	outs   dx,DWORD PTR ds:[rsi]
  40578d:	movsxd esp,DWORD PTR [rcx+0x74]
  405790:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405797:	and    BYTE PTR [rbx+0x69],dh
  40579a:	jp     0x405801
  40579c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8606
	...
  4057ae:	add    BYTE PTR [rax],al
  4057b0:	cs jo  0x405817
  4057b3:	(bad)  
  4057b4:	je     0x405817
	...
  4057be:	add    BYTE PTR [rax],al
  4057c0:	rex
  4057c1:	rex
  4057c2:	add    BYTE PTR [rax],al
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rax+0x40],dl
  4057d2:	add    BYTE PTR [rax],al
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rax+0x4030],al
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rax],ah
  4057f1:	pop    rbp
  4057f2:	add    BYTE PTR [rax],al
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rax],ah
  405801:	pop    rbp
  405802:	add    BYTE PTR [rax],al
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax+0x55],dl
  405812:	add    BYTE PTR [rax],al
	...
  405821:	add    BYTE PTR [rax+0x0],al
	...
  405830:	cmp    al,0x94
  405832:	add    BYTE PTR [rax],al
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rsp+rdx*4+0x40],ah
	...
  40584f:	add    BYTE PTR [rsp+rdx*4+0x40],bh
	...
  40585f:	add    BYTE PTR [rsp+rdx*4+0x40],dl
	...
  40586e:	add    BYTE PTR [rax],al
  405870:	rol    BYTE PTR [rsi+0x40],0x0
	...
  40587f:	add    BYTE PTR [rax],ch
  405881:	mov    al,BYTE PTR [rax+0x0]
	...
  405890:	and    BYTE PTR [rdx+0x40],cl
	...
  40589e:	add    BYTE PTR [rax],al
  4058a0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4058ae:	add    BYTE PTR [rax],al
  4058b0:	sbb    BYTE PTR [rdx+0x40],cl
	...
  4058be:	add    BYTE PTR [rax],al
  4058c0:	add    BYTE PTR [rax+0x40],ah
	...
  4058ce:	add    BYTE PTR [rax],al
  4058d0:	adc    BYTE PTR [rax+0x40],ah
	...
  4058de:	add    BYTE PTR [rax],al
  4058e0:	sbb    BYTE PTR [rax+0x40],ah
	...
  4058ee:	add    BYTE PTR [rax],al
  4058f0:	xor    BYTE PTR [rax+0x40],ah
	...
  4058fe:	add    BYTE PTR [rax],al
  405900:	push   rax
  405901:	add    BYTE PTR [rax+0x0],0x0
	...
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rax+0x4086],dl
	...
  405921:	and    eax,DWORD PTR [rax+0x0]
	...
  405930:	push   rax
  405931:	sbb    al,BYTE PTR [rax+0x0]
	...
  405940:	xchg   BYTE PTR [rax+0x0],al
	...
  405950:	mov    BYTE PTR [rip+0x40],dl        # 0x405996
	...
  40595e:	add    BYTE PTR [rax],al
  405960:	jo     0x405977
  405962:	add    BYTE PTR [rax],al
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rax-0x7a],dh
  405972:	add    BYTE PTR [rax],al
	...
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rax-0x80],ah
  405982:	add    BYTE PTR [rax],al
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rax-0x7a],bl
  405992:	add    BYTE PTR [rax],al
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4059af:	add    BYTE PTR [rax-0x7a],dl
  4059b2:	add    BYTE PTR [rax],al
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rdi+0x43],al
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x4e],al
  4059c8:	push   rbp
  4059c9:	sub    DWORD PTR [rax],esp
  4059cb:	xor    al,0x2e
  4059cd:	cmp    DWORD PTR [rsi],ebp
  4059cf:	xor    al,0x0
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rdi+0x43],al
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x4e],al
  4059e8:	push   rbp
  4059e9:	sub    DWORD PTR [rax],esp
  4059eb:	xor    al,0x2e
  4059ed:	cmp    DWORD PTR [rsi],ebp
  4059ef:	xor    al,0x0
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rdi+0x43],al
  405a02:	rex.XB cmp spl,BYTE PTR [r8]
  405a05:	sub    BYTE PTR [rdi+0x4e],al
  405a08:	push   rbp
  405a09:	sub    DWORD PTR [rax],esp
  405a0b:	xor    al,0x2e
  405a0d:	cmp    DWORD PTR [rsi],ebp
  405a0f:	xor    al,0x0
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b3d:	add    BYTE PTR [rax],al
  405b3f:	add    BYTE PTR [rdi+0x43],al
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x4e],al
  405b48:	push   rbp
  405b49:	sub    DWORD PTR [rax],esp
  405b4b:	xor    al,0x2e
  405b4d:	cmp    DWORD PTR [rsi],ebp
  405b4f:	xor    al,0x0
	...
  405b5d:	add    BYTE PTR [rax],al
  405b5f:	add    BYTE PTR [rdi+0x43],al
  405b62:	rex.XB cmp spl,BYTE PTR [r8]
  405b65:	sub    BYTE PTR [rdi+0x4e],al
  405b68:	push   rbp
  405b69:	sub    DWORD PTR [rax],esp
  405b6b:	xor    al,0x2e
  405b6d:	cmp    DWORD PTR [rsi],ebp
  405b6f:	xor    al,0x0
	...
  405b7d:	add    BYTE PTR [rax],al
  405b7f:	add    BYTE PTR [rdi+0x43],al
  405b82:	rex.XB cmp spl,BYTE PTR [r8]
  405b85:	sub    BYTE PTR [rdi+0x4e],al
  405b88:	push   rbp
  405b89:	sub    DWORD PTR [rax],esp
  405b8b:	xor    al,0x2e
  405b8d:	cmp    DWORD PTR [rsi],ebp
  405b8f:	xor    al,0x0
	...
  405b9d:	add    BYTE PTR [rax],al
  405b9f:	add    BYTE PTR [rdi+0x43],al
  405ba2:	rex.XB cmp spl,BYTE PTR [r8]
  405ba5:	sub    BYTE PTR [rdi+0x4e],al
  405ba8:	push   rbp
  405ba9:	sub    DWORD PTR [rax],esp
  405bab:	xor    al,0x2e
  405bad:	cmp    DWORD PTR [rsi],ebp
  405baf:	xor    al,0x0
	...
  405bbd:	add    BYTE PTR [rax],al
  405bbf:	add    BYTE PTR [rdi+0x43],al
  405bc2:	rex.XB cmp spl,BYTE PTR [r8]
  405bc5:	sub    BYTE PTR [rdi+0x4e],al
  405bc8:	push   rbp
  405bc9:	sub    DWORD PTR [rax],esp
  405bcb:	xor    al,0x2e
  405bcd:	cmp    DWORD PTR [rsi],ebp
  405bcf:	xor    al,0x0
	...
  405bdd:	add    BYTE PTR [rax],al
  405bdf:	add    BYTE PTR [rdi+0x43],al
  405be2:	rex.XB cmp spl,BYTE PTR [r8]
  405be5:	sub    BYTE PTR [rdi+0x4e],al
  405be8:	push   rbp
  405be9:	sub    DWORD PTR [rax],esp
  405beb:	xor    al,0x2e
  405bed:	cmp    DWORD PTR [rsi],ebp
  405bef:	xor    al,0x0
	...
  405bfd:	add    BYTE PTR [rax],al
  405bff:	add    BYTE PTR [rdi+0x43],al
  405c02:	rex.XB cmp spl,BYTE PTR [r8]
  405c05:	sub    BYTE PTR [rdi+0x4e],al
  405c08:	push   rbp
  405c09:	sub    DWORD PTR [rax],esp
  405c0b:	xor    al,0x2e
  405c0d:	cmp    DWORD PTR [rsi],ebp
  405c0f:	xor    al,0x0
	...
  405c1d:	add    BYTE PTR [rax],al
  405c1f:	add    BYTE PTR [rdi+0x43],al
  405c22:	rex.XB cmp spl,BYTE PTR [r8]
  405c25:	sub    BYTE PTR [rdi+0x4e],al
  405c28:	push   rbp
  405c29:	sub    DWORD PTR [rax],esp
  405c2b:	xor    al,0x2e
  405c2d:	cmp    DWORD PTR [rsi],ebp
  405c2f:	xor    al,0x0
	...
  405c3d:	add    BYTE PTR [rax],al
  405c3f:	add    BYTE PTR [rdi+0x43],al
  405c42:	rex.XB cmp spl,BYTE PTR [r8]
  405c45:	sub    BYTE PTR [rdi+0x4e],al
  405c48:	push   rbp
  405c49:	sub    DWORD PTR [rax],esp
  405c4b:	xor    al,0x2e
  405c4d:	cmp    DWORD PTR [rsi],ebp
  405c4f:	xor    al,0x0
	...
  405c5d:	add    BYTE PTR [rax],al
  405c5f:	add    BYTE PTR [rdi+0x43],al
  405c62:	rex.XB cmp spl,BYTE PTR [r8]
  405c65:	sub    BYTE PTR [rdi+0x4e],al
  405c68:	push   rbp
  405c69:	sub    DWORD PTR [rax],esp
  405c6b:	xor    al,0x2e
  405c6d:	cmp    DWORD PTR [rsi],ebp
  405c6f:	xor    al,0x0
	...
  405c7d:	add    BYTE PTR [rax],al
  405c7f:	add    BYTE PTR [rdi+0x43],al
  405c82:	rex.XB cmp spl,BYTE PTR [r8]
  405c85:	sub    BYTE PTR [rdi+0x4e],al
  405c88:	push   rbp
  405c89:	sub    DWORD PTR [rax],esp
  405c8b:	xor    al,0x2e
  405c8d:	cmp    DWORD PTR [rsi],ebp
  405c8f:	xor    al,0x0
	...
  405c9d:	add    BYTE PTR [rax],al
  405c9f:	add    BYTE PTR [rdi+0x43],al
  405ca2:	rex.XB cmp spl,BYTE PTR [r8]
  405ca5:	sub    BYTE PTR [rdi+0x4e],al
  405ca8:	push   rbp
  405ca9:	sub    DWORD PTR [rax],esp
  405cab:	xor    al,0x2e
  405cad:	cmp    DWORD PTR [rsi],ebp
  405caf:	xor    al,0x0
	...
  405cbd:	add    BYTE PTR [rax],al
  405cbf:	add    BYTE PTR [rdi+0x43],al
  405cc2:	rex.XB cmp spl,BYTE PTR [r8]
  405cc5:	sub    BYTE PTR [rdi+0x4e],al
  405cc8:	push   rbp
  405cc9:	sub    DWORD PTR [rax],esp
  405ccb:	xor    al,0x2e
  405ccd:	cmp    DWORD PTR [rsi],ebp
  405ccf:	xor    al,0x0
	...
  405cdd:	add    BYTE PTR [rax],al
  405cdf:	add    BYTE PTR [rdi+0x43],al
  405ce2:	rex.XB cmp spl,BYTE PTR [r8]
  405ce5:	sub    BYTE PTR [rdi+0x4e],al
  405ce8:	push   rbp
  405ce9:	sub    DWORD PTR [rax],esp
  405ceb:	xor    al,0x2e
  405ced:	cmp    DWORD PTR [rsi],ebp
  405cef:	xor    al,0x0
	...
  405cfd:	add    BYTE PTR [rax],al
  405cff:	add    BYTE PTR [rdi+0x43],al
  405d02:	rex.XB cmp spl,BYTE PTR [r8]
  405d05:	sub    BYTE PTR [rdi+0x4e],al
  405d08:	push   rbp
  405d09:	sub    DWORD PTR [rax],esp
  405d0b:	xor    al,0x2e
  405d0d:	cmp    DWORD PTR [rsi],ebp
  405d0f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax+0x57000015],dh
  40604d:	(bad)  
  40604e:	add    BYTE PTR [rax],al
  406050:	js     0x4060c2
  406052:	add    BYTE PTR [rax],al
  406054:	(bad)  
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	jns    0x406070
  40605a:	add    BYTE PTR [rax],al
  40605c:	xor    BYTE PTR [rax+0x0],0x0
  406060:	adc    BYTE PTR [rsi],0x0
  406063:	add    BYTE PTR [rbp-0x77ffffea],dh
  406069:	jo     0x40606b
  40606b:	add    al,al
  40606d:	(bad)  
  40606e:	add    BYTE PTR [rax],al
  406070:	adc    eax,0x90000017
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax],ah
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	cmp    al,0x17
  40607e:	add    BYTE PTR [rax],al
  406080:	pushf  
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax+0x17],al
  406086:	add    BYTE PTR [rax],al
  406088:	rex.WX (bad) 
  40608a:	add    BYTE PTR [rax],al
  40608c:	movabs al,ds:0x5300001750000070
  406095:	(bad)  
  406096:	add    BYTE PTR [rax],al
  406098:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax+0x17],ah
  40609e:	add    BYTE PTR [rax],al
  4060a0:	sbb    BYTE PTR ss:[rax],al
  4060a3:	add    BYTE PTR [rax+0x40000070],ch
  4060a9:	sbb    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rbx],bh
  4060ad:	sbb    DWORD PTR [rax],eax
  4060af:	add    BYTE PTR [rax+0x40000070],bh
  4060b5:	sbb    DWORD PTR [rax],eax
  4060b7:	add    BYTE PTR [rdi+0x19],ch
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	enter  0x70,0x0
  4060c0:	jo     0x4060db
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	fstp   DWORD PTR [rcx]
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	shl    BYTE PTR [rax+0x0],1
  4060cb:	add    al,ah
  4060cd:	sbb    DWORD PTR [rax],eax
  4060cf:	add    bl,ah
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    ah,bl
  4060d5:	jo     0x4060d7
  4060d7:	add    al,dh
  4060d9:	sbb    DWORD PTR [rax],eax
  4060db:	add    BYTE PTR [rcx],dh
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    al,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax+0x1a],al
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	rex.WR sbb r8b,BYTE PTR [rax]
  4060eb:	add    al,ch
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax+0x1a],dl
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	sbb    r8,QWORD PTR [rax]
  4060f7:	add    ah,ch
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax+0x1b],dl
  4060fe:	add    BYTE PTR [rax],al
  406100:	push   rbx
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rcx+rsi*2],al
  406106:	add    BYTE PTR [rax],al
  406108:	(bad)  
  406109:	sbb    eax,DWORD PTR [rax]
  40610b:	add    BYTE PTR [rbx+rbx*1+0x0],ah
  40610f:	add    BYTE PTR [rax],cl
  406111:	jno    0x406113
  406113:	add    BYTE PTR [rax+0x1b],dh
  406116:	add    BYTE PTR [rax],al
  406118:	je     0x406135
  40611a:	add    BYTE PTR [rax],al
  40611c:	or     al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	sbb    BYTE PTR [rbx],0x0
  406123:	add    cl,ah
  406125:	sbb    eax,DWORD PTR [rax]
  406127:	add    BYTE PTR [rax],dl
  406129:	jno    0x40612b
  40612b:	add    al,dh
  40612d:	sbb    eax,DWORD PTR [rax]
  40612f:	add    BYTE PTR [rdx+0x1d],dl
  406132:	add    BYTE PTR [rax],al
  406134:	sbb    al,0x71
  406136:	add    BYTE PTR [rax],al
  406138:	(bad)  
  406139:	sbb    eax,0x20590000
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    BYTE PTR [rcx+0x0],dh
  406143:	add    BYTE PTR [rax+0x20],ah
  406146:	add    BYTE PTR [rax],al
  406148:	(bad)  
  406149:	and    al,BYTE PTR [rax]
  40614b:	add    BYTE PTR [rax+0x71],cl
  40614e:	add    BYTE PTR [rax],al
  406150:	adc    BYTE PTR [rdx],ah
  406152:	add    BYTE PTR [rax],al
  406154:	cld    
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rax+0x71],dl
  40615a:	add    BYTE PTR [rax],al
  40615c:	add    BYTE PTR [rbx],ah
  40615e:	add    BYTE PTR [rax],al
  406160:	mov    eax,0x60000024
  406165:	jno    0x406167
  406167:	add    al,al
  406169:	and    al,0x0
  40616b:	add    BYTE PTR [rip+0x68000025],ch        # 0x68406196
  406171:	jno    0x406173
  406173:	add    BYTE PTR [rax],dh
  406175:	and    eax,0x25af0000
  40617a:	add    BYTE PTR [rax],al
  40617c:	js     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	mov    al,0x25
  406182:	add    BYTE PTR [rax],al
  406184:	rex.WRXB
  406185:	add    BYTE PTR es:[rax],al
  406188:	test   BYTE PTR [rcx+0x0],dh
  40618b:	add    BYTE PTR [rax+0x26],dl
  40618e:	add    BYTE PTR [rax],al
  406190:	sub    ah,BYTE PTR [rdi]
  406192:	add    BYTE PTR [rax],al
  406194:	mov    WORD PTR [rcx+0x0],?
  406197:	add    BYTE PTR [rax],dh
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	rex.WRXB (bad) 
  40619e:	add    BYTE PTR [rax],al
  4061a0:	xchg   esp,eax
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax+0x27],dl
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	(bad)  
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	cwde   
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x27],dh
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	mov    ch,0x27
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	pushf  
  4061b9:	jno    0x4061bb
  4061bb:	add    al,al
  4061bd:	(bad)  
  4061be:	add    BYTE PTR [rax],al
  4061c0:	pop    rsi
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rax+0x60000071],ah
  4061c9:	sub    BYTE PTR [rax],al
  4061cb:	add    BYTE PTR [rbx-0x53ffffd8],ah
  4061d1:	jno    0x4061d3
  4061d3:	add    BYTE PTR [rax-0x14ffffd8],dh
  4061d9:	sub    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rax-0xfffff8f],bh
  4061e1:	sub    BYTE PTR [rax],al
  4061e3:	add    BYTE PTR [rsi+0x29],bh
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	shl    BYTE PTR [rcx+0x0],0x0
  4061ec:	sub    BYTE PTR [rcx],0x0
  4061ef:	add    BYTE PTR [rax-0x33ffffd7],bh
  4061f5:	jno    0x4061f7
  4061f7:	add    al,al
  4061f9:	sub    DWORD PTR [rax],eax
  4061fb:	add    BYTE PTR [rip+0xffffffffd800002a],dl        # 0xffffffffd840622b
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],ah
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    dh,cl
  406209:	sub    al,BYTE PTR [rax]
  40620b:	add    ah,ah
  40620d:	jno    0x40620f
  40620f:	add    al,ah
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    al,ch
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    ah,dh
  406219:	jno    0x40621b
  40621b:	add    al,dh
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    bl,bh
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    al,bh
  406225:	jno    0x406227
  406227:	add    al,al
  406229:	sub    al,0x0
  40622b:	add    BYTE PTR [rdx+0x30],bh
  40622e:	add    BYTE PTR [rax],al
  406230:	.byte 0x68
  406231:	jo     0x406233
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	fsubr  DWORD PTR [rbx]
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],al
  407041:	and    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	fsubr  DWORD PTR [rbx]
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	add    BYTE PTR [rbx],ah
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rax],ecx
  40706a:	add    eax,0x4a20800
  40706f:	xor    BYTE PTR [rbx],al
  407071:	(bad)  
  407072:	add    dh,BYTE PTR [rax+0x1]
  407075:	push   rax
  407076:	add    BYTE PTR [rax],al
  407078:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457080
  40707e:	add    DWORD PTR [rax],esi
  407080:	add    DWORD PTR [rcx+rax*1],eax
  407083:	add    BYTE PTR [rdx+rax*2],al
  407086:	add    BYTE PTR [rax],al
  407088:	add    DWORD PTR [rcx+rax*1],eax
  40708b:	add    BYTE PTR [rdx+rax*2],al
  40708e:	add    BYTE PTR [rax],al
  407090:	add    DWORD PTR [rsi],eax
  407092:	add    eax,DWORD PTR [rax]
  407094:	(bad)  
  407095:	rex.X add sil,BYTE PTR [rax]
  407098:	add    DWORD PTR [rax+0x0],esp
  40709b:	add    BYTE PTR [rcx],al
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rcx],al
  4070a1:	add    BYTE PTR [rax],al
  4070a3:	add    BYTE PTR [rcx],al
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rcx],al
  4070a9:	or     al,BYTE PTR [rsi]
  4070ab:	add    BYTE PTR [rdx],cl
  4070ad:	jb     0x4070b5
  4070af:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07515
  4070b5:	push   rax
  4070b6:	add    al,al
  4070b8:	add    DWORD PTR [rdx],ecx
  4070ba:	add    eax,0x6d20a05
  4070bf:	add    eax,DWORD PTR [rbx]
  4070c1:	xor    BYTE PTR [rdx],al
  4070c3:	(bad)  
  4070c4:	add    DWORD PTR [rax+0x0],edx
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    al,0x1
  4070cb:	add    BYTE PTR [rdx+rax*2],al
  4070ce:	add    BYTE PTR [rax],al
  4070d0:	add    DWORD PTR [rsi],eax
  4070d2:	add    eax,DWORD PTR [rax]
  4070d4:	(bad)  
  4070d5:	rex.X add sil,BYTE PTR [rax]
  4070d8:	add    DWORD PTR [rax+0x0],esp
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	add    BYTE PTR [rax],al
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    al,0x1
  4070e3:	add    BYTE PTR [rdx+riz*4],al
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	add    DWORD PTR [rax],eax
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	add    DWORD PTR [rsi],edx
  4070ee:	or     DWORD PTR [rax],eax
  4070f0:	(bad)  
  4070f1:	mov    BYTE PTR [rsi],al
  4070f3:	add    BYTE PTR [rax],dl
  4070f5:	js     0x4070fc
  4070f7:	add    BYTE PTR [rbx],cl
  4070f9:	push   0xffffffffe2060004
  4070fe:	add    dh,BYTE PTR [rax]
  407100:	add    DWORD PTR [rax+0x0],esp
  407103:	add    BYTE PTR [rcx],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	(bad)  
  407112:	add    eax,DWORD PTR [rax]
  407114:	(bad)  
  407115:	(bad)  
  407117:	xor    BYTE PTR [rcx],al
  407119:	(bad)  
  40711a:	add    BYTE PTR [rax],al
  40711c:	add    DWORD PTR [rdi+rax*1],ecx
  40711f:	add    BYTE PTR [rdx+riz*4],cl
  407122:	or     BYTE PTR [rax],dh
  407124:	(bad)  
  407125:	(bad)  
  407126:	(bad)  
  407127:	jo     0x40712e
  407129:	push   rax
  40712a:	add    al,0xc0
  40712c:	add    dl,al
  40712e:	add    BYTE PTR [rax],al
  407130:	add    DWORD PTR [rcx],edx
  407132:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2349
  407138:	or     dh,BYTE PTR [rax]
  40713a:	or     DWORD PTR [rax+0x8],esp
  40713d:	jo     0x407146
  40713f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2207516
  407146:	add    BYTE PTR [rax],al
  407148:	add    DWORD PTR [rcx+rax*1],eax
  40714b:	add    BYTE PTR [rdx+rax*2],al
  40714e:	add    BYTE PTR [rax],al
  407150:	add    DWORD PTR [rdx],ecx
  407152:	(bad)  
  407153:	add    BYTE PTR [rdx],cl
  407155:	xor    al,BYTE PTR [rsi]
  407157:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075bd
  40715d:	push   rax
  40715e:	add    al,al
  407160:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457168
  407166:	add    DWORD PTR [rax],esi
  407168:	add    DWORD PTR [rax],ecx
  40716a:	add    eax,0x4420800
  40716f:	xor    BYTE PTR [rbx],al
  407171:	(bad)  
  407172:	add    dh,BYTE PTR [rax+0x1]
  407175:	push   rax
  407176:	add    BYTE PTR [rax],al
  407178:	add    DWORD PTR [rdi],eax
  40717a:	add    al,0x0
  40717c:	(bad)  
  40717d:	xor    al,BYTE PTR [rbx]
  40717f:	xor    BYTE PTR [rdx],al
  407181:	(bad)  
  407182:	add    DWORD PTR [rax+0x1],esi
  407185:	add    eax,0x32050002
  40718a:	add    DWORD PTR [rax],esi
  40718c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457194
  407192:	add    DWORD PTR [rax],esi
  407194:	add    DWORD PTR [rax],eax
  407196:	add    BYTE PTR [rax],al
  407198:	add    DWORD PTR [rax],eax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rax],eax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rdi],eax
  4071a2:	add    al,0x0
  4071a4:	(bad)  
  4071a5:	xor    al,BYTE PTR [rbx]
  4071a7:	xor    BYTE PTR [rdx],al
  4071a9:	(bad)  
  4071aa:	add    DWORD PTR [rax+0x1],esi
  4071ad:	(bad)  
  4071ae:	add    eax,DWORD PTR [rax]
  4071b0:	(bad)  
  4071b1:	rex.X add sil,BYTE PTR [rax]
  4071b4:	add    DWORD PTR [rax+0x0],esp
  4071b7:	add    BYTE PTR [rcx],al
  4071b9:	add    eax,0x32050002
  4071be:	add    DWORD PTR [rax],esi
  4071c0:	add    DWORD PTR [rdi],eax
  4071c2:	add    al,0x0
  4071c4:	(bad)  
  4071c5:	xor    al,BYTE PTR [rbx]
  4071c7:	xor    BYTE PTR [rdx],al
  4071c9:	(bad)  
  4071ca:	add    DWORD PTR [rax+0x1],esi
  4071cd:	(bad)  
  4071ce:	add    eax,DWORD PTR [rax]
  4071d0:	(bad)  
  4071d1:	rex.X add sil,BYTE PTR [rax]
  4071d4:	add    DWORD PTR [rax+0x0],esp
  4071d7:	add    BYTE PTR [rcx],al
  4071d9:	(bad)  
  4071da:	add    eax,DWORD PTR [rax]
  4071dc:	(bad)  
  4071dd:	rex.X add sil,BYTE PTR [rax]
  4071e0:	add    DWORD PTR [rax+0x0],esp
  4071e3:	add    BYTE PTR [rcx],al
  4071e5:	or     BYTE PTR [rip+0x4420800],al        # 0x48279eb
  4071eb:	xor    BYTE PTR [rbx],al
  4071ed:	(bad)  
  4071ee:	add    dh,BYTE PTR [rax+0x1]
  4071f1:	push   rax
  4071f2:	add    BYTE PTR [rax],al
  4071f4:	add    DWORD PTR [rax],eax
  4071f6:	add    BYTE PTR [rax],al
  4071f8:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	call   0xffffffffbc4090aa
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	in     al,0x90
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	adc    BYTE PTR [rdx-0x6cc40000],bl
  409026:	add    BYTE PTR [rax],al
  409028:	add    al,0x91
	...
  409032:	add    BYTE PTR [rax],al
  409034:	sbb    BYTE PTR [rdx-0x6ca40000],0x0
  40903b:	add    ah,cl
  40903d:	xchg   ecx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	add    al,0x9b
  40904a:	add    BYTE PTR [rax],al
  40904c:	and    al,0x94
	...
  409062:	add    BYTE PTR [rax],al
  409064:	adc    al,0x95
  409066:	add    BYTE PTR [rax],al
  409068:	add    BYTE PTR [rax],al
  40906a:	add    BYTE PTR [rax],al
  40906c:	and    al,0x95
  40906e:	add    BYTE PTR [rax],al
  409070:	add    BYTE PTR [rax],al
  409072:	add    BYTE PTR [rax],al
  409074:	sub    al,0x95
  409076:	add    BYTE PTR [rax],al
  409078:	add    BYTE PTR [rax],al
  40907a:	add    BYTE PTR [rax],al
  40907c:	cmp    al,0x95
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rax],al
  409082:	add    BYTE PTR [rax],al
  409084:	push   rsp
  409085:	xchg   ebp,eax
  409086:	add    BYTE PTR [rax],al
  409088:	add    BYTE PTR [rax],al
  40908a:	add    BYTE PTR [rax],al
  40908c:	fs xchg ebp,eax
  40908e:	add    BYTE PTR [rax],al
  409090:	add    BYTE PTR [rax],al
  409092:	add    BYTE PTR [rax],al
  409094:	je     0x40902b
  409096:	add    BYTE PTR [rax],al
  409098:	add    BYTE PTR [rax],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	nop
  40909d:	xchg   ebp,eax
  40909e:	add    BYTE PTR [rax],al
  4090a0:	add    BYTE PTR [rax],al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	movabs al,ds:0xac00000000000095
  4090ad:	xchg   ebp,eax
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	add    BYTE PTR [rax],al
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	rcl    BYTE PTR [rbp+0x0],0x0
  4090bb:	add    al,dl
  4090bd:	xchg   ebp,eax
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	loopne 0x40905b
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	lock xchg ebp,eax
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    al,0x96
	...
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	adc    BYTE PTR [rsi+0x0],dl
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	sub    al,0x96
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    BYTE PTR [rax],al
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	rex xchg esi,eax
	...
  409102:	add    BYTE PTR [rax],al
  409104:	pop    rax
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	jo     0x4090a4
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	mov    BYTE PTR [rsi+0x0],dl
  40911a:	add    BYTE PTR [rax],al
  40911c:	pushf  
  40911d:	xchg   esi,eax
  40911e:	add    BYTE PTR [rax],al
  409120:	add    BYTE PTR [rax],al
  409122:	add    BYTE PTR [rax],al
  409124:	mov    al,0x96
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	(bad)  
  40912d:	xchg   esi,eax
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	fcom   QWORD PTR [rsi+0x0]
  40913a:	add    BYTE PTR [rax],al
  40913c:	in     al,dx
  40913d:	xchg   esi,eax
  40913e:	add    BYTE PTR [rax],al
  409140:	add    BYTE PTR [rax],al
  409142:	add    BYTE PTR [rax],al
  409144:	(bad)  
  409145:	xchg   esi,eax
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	sbb    BYTE PTR [rdi+0x0],dl
  409152:	add    BYTE PTR [rax],al
  409154:	sub    BYTE PTR [rdi+0x0],dl
  40915a:	add    BYTE PTR [rax],al
  40915c:	rex.R xchg edi,eax
  40915e:	add    BYTE PTR [rax],al
  409160:	add    BYTE PTR [rax],al
  409162:	add    BYTE PTR [rax],al
  409164:	pop    rsp
  409165:	xchg   edi,eax
  409166:	add    BYTE PTR [rax],al
  409168:	add    BYTE PTR [rax],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	jbe    0x409105
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	mov    WORD PTR [rdi+0x0],ss
  40917a:	add    BYTE PTR [rax],al
  40917c:	movabs al,ds:0xba00000000000097
  409185:	xchg   edi,eax
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	(bad)  
  40918d:	xchg   edi,eax
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	in     al,dx
  409195:	xchg   edi,eax
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	hlt    
  40919d:	xchg   edi,eax
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	or     BYTE PTR [rax+0x0],bl
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	(bad)  
  4091ad:	cwde   
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	add    BYTE PTR [rax],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	xor    bl,BYTE PTR [rax+0x0]
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	rex.R cwde 
	...
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	push   rsp
  4091cd:	cwde   
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	ins    BYTE PTR es:[rdi],dx
  4091d5:	cwde   
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    BYTE PTR [rax],al
  4091da:	add    BYTE PTR [rax],al
  4091dc:	jp     0x409176
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	mov    bl,BYTE PTR [rax+0x0]
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	xchg   esi,eax
  4091ed:	cwde   
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4091f5:	cwde   
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	add    BYTE PTR [rax],al
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	mov    ah,0x98
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rax],al
  409202:	add    BYTE PTR [rax],al
  409204:	(bad)  
  409205:	cwde   
  409206:	add    BYTE PTR [rax],al
  409208:	add    BYTE PTR [rax],al
  40920a:	add    BYTE PTR [rax],al
  40920c:	ficomp DWORD PTR [rax+0x0]
  409212:	add    BYTE PTR [rax],al
  409214:	in     al,0x98
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	repnz cwde 
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	cld    
  409225:	cwde   
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	(bad)  
  40922d:	cdq    
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	adc    bl,BYTE PTR [rcx+0x0]
  40923a:	add    BYTE PTR [rax],al
  40923c:	sbb    bl,BYTE PTR [rcx+0x0]
  409242:	add    BYTE PTR [rax],al
  409244:	and    al,0x99
  409246:	add    BYTE PTR [rax],al
  409248:	add    BYTE PTR [rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	cs cdq 
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	ss cdq 
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rax],al
  40925a:	add    BYTE PTR [rax],al
  40925c:	rex cdq 
  40925e:	add    BYTE PTR [rax],al
  409260:	add    BYTE PTR [rax],al
  409262:	add    BYTE PTR [rax],al
  409264:	cqo    
  409266:	add    BYTE PTR [rax],al
  409268:	add    BYTE PTR [rax],al
  40926a:	add    BYTE PTR [rax],al
  40926c:	push   rdx
  40926d:	cdq    
  40926e:	add    BYTE PTR [rax],al
  409270:	add    BYTE PTR [rax],al
  409272:	add    BYTE PTR [rax],al
  409274:	pop    rdx
  409275:	cdq    
  409276:	add    BYTE PTR [rax],al
  409278:	add    BYTE PTR [rax],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	fs cdq 
  40927e:	add    BYTE PTR [rax],al
  409280:	add    BYTE PTR [rax],al
  409282:	add    BYTE PTR [rax],al
  409284:	outs   dx,BYTE PTR ds:[rsi]
  409285:	cdq    
  409286:	add    BYTE PTR [rax],al
  409288:	add    BYTE PTR [rax],al
  40928a:	add    BYTE PTR [rax],al
  40928c:	js     0x409227
  40928e:	add    BYTE PTR [rax],al
  409290:	add    BYTE PTR [rax],al
  409292:	add    BYTE PTR [rax],al
  409294:	(bad)  
  409295:	cdq    
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	mov    WORD PTR [rcx+0x0],ds
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	xchg   esi,eax
  4092a5:	cdq    
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    BYTE PTR [rax],al
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	movabs al,ds:0x99
  4092b5:	add    BYTE PTR [rax],al
  4092b7:	add    BYTE PTR [rax],al
  4092b9:	add    BYTE PTR [rax],al
  4092bb:	add    BYTE PTR [rdx*4+0x0],dl
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	and    al,0x95
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	sub    al,0x95
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	add    BYTE PTR [rax],al
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	cmp    al,0x95
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	push   rsp
  4092dd:	xchg   ebp,eax
  4092de:	add    BYTE PTR [rax],al
  4092e0:	add    BYTE PTR [rax],al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	fs xchg ebp,eax
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    BYTE PTR [rax],al
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	je     0x409283
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	add    BYTE PTR [rax],al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	nop
  4092f5:	xchg   ebp,eax
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	add    BYTE PTR [rax],al
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	movabs al,ds:0xac00000000000095
  409305:	xchg   ebp,eax
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
  40930a:	add    BYTE PTR [rax],al
  40930c:	rcl    BYTE PTR [rbp+0x0],0x0
  409313:	add    al,dl
  409315:	xchg   ebp,eax
  409316:	add    BYTE PTR [rax],al
  409318:	add    BYTE PTR [rax],al
  40931a:	add    BYTE PTR [rax],al
  40931c:	loopne 0x4092b3
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	lock xchg ebp,eax
  409326:	add    BYTE PTR [rax],al
  409328:	add    BYTE PTR [rax],al
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    al,0x96
	...
  40933a:	add    BYTE PTR [rax],al
  40933c:	adc    BYTE PTR [rsi+0x0],dl
  409342:	add    BYTE PTR [rax],al
  409344:	sub    al,0x96
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rax],al
  40934a:	add    BYTE PTR [rax],al
  40934c:	rex xchg esi,eax
	...
  40935a:	add    BYTE PTR [rax],al
  40935c:	pop    rax
  40935d:	xchg   esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	jo     0x4092fc
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	mov    BYTE PTR [rsi+0x0],dl
  409372:	add    BYTE PTR [rax],al
  409374:	pushf  
  409375:	xchg   esi,eax
  409376:	add    BYTE PTR [rax],al
  409378:	add    BYTE PTR [rax],al
  40937a:	add    BYTE PTR [rax],al
  40937c:	mov    al,0x96
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
  409382:	add    BYTE PTR [rax],al
  409384:	(bad)  
  409385:	xchg   esi,eax
  409386:	add    BYTE PTR [rax],al
  409388:	add    BYTE PTR [rax],al
  40938a:	add    BYTE PTR [rax],al
  40938c:	fcom   QWORD PTR [rsi+0x0]
  409392:	add    BYTE PTR [rax],al
  409394:	in     al,dx
  409395:	xchg   esi,eax
  409396:	add    BYTE PTR [rax],al
  409398:	add    BYTE PTR [rax],al
  40939a:	add    BYTE PTR [rax],al
  40939c:	(bad)  
  40939d:	xchg   esi,eax
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	sbb    BYTE PTR [rdi+0x0],dl
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	sub    BYTE PTR [rdi+0x0],dl
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	rex.R xchg edi,eax
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rax],al
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	pop    rsp
  4093bd:	xchg   edi,eax
  4093be:	add    BYTE PTR [rax],al
  4093c0:	add    BYTE PTR [rax],al
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	jbe    0x40935d
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	add    BYTE PTR [rax],al
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	mov    WORD PTR [rdi+0x0],ss
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	movabs al,ds:0xba00000000000097
  4093dd:	xchg   edi,eax
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	(bad)  
  4093e5:	xchg   edi,eax
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	in     al,dx
  4093ed:	xchg   edi,eax
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	hlt    
  4093f5:	xchg   edi,eax
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	add    BYTE PTR [rax],al
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	or     BYTE PTR [rax+0x0],bl
  409402:	add    BYTE PTR [rax],al
  409404:	(bad)  
  409405:	cwde   
  409406:	add    BYTE PTR [rax],al
  409408:	add    BYTE PTR [rax],al
  40940a:	add    BYTE PTR [rax],al
  40940c:	xor    bl,BYTE PTR [rax+0x0]
  409412:	add    BYTE PTR [rax],al
  409414:	rex.R cwde 
	...
  409422:	add    BYTE PTR [rax],al
  409424:	push   rsp
  409425:	cwde   
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	ins    BYTE PTR es:[rdi],dx
  40942d:	cwde   
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	jp     0x4093ce
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
  40943a:	add    BYTE PTR [rax],al
  40943c:	mov    bl,BYTE PTR [rax+0x0]
  409442:	add    BYTE PTR [rax],al
  409444:	xchg   esi,eax
  409445:	cwde   
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rax],al
  40944a:	add    BYTE PTR [rax],al
  40944c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40944d:	cwde   
  40944e:	add    BYTE PTR [rax],al
  409450:	add    BYTE PTR [rax],al
  409452:	add    BYTE PTR [rax],al
  409454:	mov    ah,0x98
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
  40945a:	add    BYTE PTR [rax],al
  40945c:	(bad)  
  40945d:	cwde   
  40945e:	add    BYTE PTR [rax],al
  409460:	add    BYTE PTR [rax],al
  409462:	add    BYTE PTR [rax],al
  409464:	ficomp DWORD PTR [rax+0x0]
  40946a:	add    BYTE PTR [rax],al
  40946c:	in     al,0x98
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
  409472:	add    BYTE PTR [rax],al
  409474:	repnz cwde 
  409476:	add    BYTE PTR [rax],al
  409478:	add    BYTE PTR [rax],al
  40947a:	add    BYTE PTR [rax],al
  40947c:	cld    
  40947d:	cwde   
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
  409482:	add    BYTE PTR [rax],al
  409484:	(bad)  
  409485:	cdq    
  409486:	add    BYTE PTR [rax],al
  409488:	add    BYTE PTR [rax],al
  40948a:	add    BYTE PTR [rax],al
  40948c:	adc    bl,BYTE PTR [rcx+0x0]
  409492:	add    BYTE PTR [rax],al
  409494:	sbb    bl,BYTE PTR [rcx+0x0]
  40949a:	add    BYTE PTR [rax],al
  40949c:	and    al,0x99
  40949e:	add    BYTE PTR [rax],al
  4094a0:	add    BYTE PTR [rax],al
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	cs cdq 
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	ss cdq 
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	rex cdq 
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	add    BYTE PTR [rax],al
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	cqo    
  4094be:	add    BYTE PTR [rax],al
  4094c0:	add    BYTE PTR [rax],al
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	push   rdx
  4094c5:	cdq    
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	add    BYTE PTR [rax],al
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	pop    rdx
  4094cd:	cdq    
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    BYTE PTR [rax],al
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	fs cdq 
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	outs   dx,BYTE PTR ds:[rsi]
  4094dd:	cdq    
  4094de:	add    BYTE PTR [rax],al
  4094e0:	add    BYTE PTR [rax],al
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	js     0x40947f
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	add    BYTE PTR [rax],al
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	(bad)  
  4094ed:	cdq    
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	add    BYTE PTR [rax],al
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	mov    WORD PTR [rcx+0x0],ds
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	xchg   esi,eax
  4094fd:	cdq    
  4094fe:	add    BYTE PTR [rax],al
  409500:	add    BYTE PTR [rax],al
  409502:	add    BYTE PTR [rax],al
  409504:	movabs al,ds:0x99
  40950d:	add    BYTE PTR [rax],al
  40950f:	add    BYTE PTR [rax],al
  409511:	add    BYTE PTR [rax],al
  409513:	add    BYTE PTR [rsi+0x0],dl
  409516:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40951a:	gs pop rdi
  40951c:	jae    0x409592
  40951e:	outs   dx,DWORD PTR fs:[rsi]
  409520:	jne    0x409596
  409522:	add    BYTE PTR [rax],al
  409524:	add    DWORD PTR [rdx],eax
  409526:	gs jb  0x40959b
  409529:	outs   dx,DWORD PTR ds:[rsi]
  40952a:	jb     0x40952c
  40952c:	jg     0x409530
  40952e:	outs   dx,BYTE PTR ds:[esi]
  409530:	jne    0x409591
  409532:	(bad)  
  409534:	jae    0x40959b
  409536:	outs   dx,BYTE PTR ds:[rsi]
  409537:	(bad)  
  409538:	ins    DWORD PTR es:[rdi],dx
  409539:	add    BYTE PTR gs:[rax],al
  40953c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40953d:	add    ch,BYTE PTR [rbp+0x61]
  409540:	jns    0x4095a4
  409542:	gs pop rdi
  409544:	jo     0x4095b8
  409546:	imul   ebp,DWORD PTR [rsi+0x74],0x6f72705f
  40954d:	outs   dx,BYTE PTR ds:[esi]
  40954f:	(bad)  
  409550:	ins    DWORD PTR es:[rdi],dx
  409551:	add    BYTE PTR gs:[rax],al
  409554:	fild   WORD PTR [rdx]
  409556:	jo     0x4095ca
  409558:	outs   dx,DWORD PTR ds:[rsi]
  409559:	addr32 jb 0x4095bd
  40955c:	ins    DWORD PTR es:[rdi],dx
  40955d:	pop    rdi
  40955e:	outs   dx,BYTE PTR ds:[rsi]
  40955f:	(bad)  
  409560:	ins    DWORD PTR es:[rdi],dx
  409561:	add    BYTE PTR gs:[rax],al
  409564:	loopne 0x409568
  409566:	jo     0x4095da
  409568:	outs   dx,DWORD PTR ds:[rsi]
  409569:	jo     0x4095d0
  40956b:	jb     0x4095cc
  40956d:	outs   dx,BYTE PTR ds:[rsi]
  40956e:	(bad)  
  40956f:	ins    DWORD PTR es:[rdi],dx
  409570:	add    BYTE PTR gs:[rax],al
  409573:	add    BYTE PTR [rip+0x6c707203],cl        # 0x6cb1077c
  409579:	pop    rdi
  40957a:	gs jb  0x4095ef
  40957d:	outs   dx,DWORD PTR ds:[rsi]
  40957e:	jb     0x4095df
  409580:	jo     0x4095f4
  409582:	imul   ebp,DWORD PTR [rsi+0x74],0x6f72705f
  409589:	outs   dx,BYTE PTR ds:[esi]
  40958b:	(bad)  
  40958c:	ins    DWORD PTR es:[rdi],dx
  40958d:	add    BYTE PTR gs:[rax],al
  409590:	lsl    esi,WORD PTR [rdx+0x70]
  409594:	ins    BYTE PTR es:[rdi],dx
  409595:	pop    rdi
  409596:	data16 jo 0x40960b
  409599:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4095a0:	adc    DWORD PTR [rbx],eax
  4095a2:	jb     0x409614
  4095a4:	ins    BYTE PTR es:[rdi],dx
  4095a5:	pop    rdi
  4095a6:	data16 jo 0x40961e
  4095a9:	je     0x40961e
  4095ab:	add    BYTE PTR [rdi],dl
  4095ad:	add    esi,DWORD PTR [rdx+0x70]
  4095b0:	ins    BYTE PTR es:[rdi],dx
  4095b1:	pop    rdi
  4095b2:	addr32 gs je 0x409625
  4095b6:	jo     0x40962c
  4095b8:	pop    rdi
  4095b9:	ins    BYTE PTR es:[rdi],dx
  4095ba:	outs   dx,DWORD PTR ds:[rsi]
  4095bb:	outs   dx,BYTE PTR ds:[rsi]
  4095bc:	add    BYTE PTR [eax],al
  4095bf:	add    BYTE PTR [rbx+rax*1],ah
  4095c2:	jb     0x409634
  4095c4:	ins    BYTE PTR es:[rdi],dx
  4095c5:	pop    rdi
  4095c6:	outs   dx,DWORD PTR ds:[rsi]
  4095c7:	jo     0x40963d
  4095c9:	imul   ebp,DWORD PTR [rsi+0x64],0x0
  4095d0:	add    esi,DWORD PTR es:[rdx+0x70]
  4095d4:	ins    BYTE PTR es:[rdi],dx
  4095d5:	pop    rdi
  4095d6:	jo     0x40964a
  4095d8:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4095df:	add    BYTE PTR [rip+0x6c707203],ch        # 0x6cb107e8
  4095e5:	pop    rdi
  4095e6:	jae    0x40964d
  4095e8:	je     0x409656
  4095ea:	outs   dx,DWORD PTR ds:[rsi]
  4095eb:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095ee:	add    BYTE PTR gs:[rbx+rax*1+0x73],al
  4095f3:	gs je  0x409655
  4095f6:	jo     0x40966a
  4095f8:	outs   dx,DWORD PTR ds:[rsi]
  4095f9:	addr32 jb 0x40965d
  4095fc:	ins    DWORD PTR es:[rdi],dx
  4095fd:	pop    rdi
  4095fe:	outs   dx,BYTE PTR ds:[rsi]
  4095ff:	(bad)  
  409600:	ins    DWORD PTR es:[rdi],dx
  409601:	add    BYTE PTR gs:[rax],al
  409604:	int    0x6
  409606:	js     0x40967b
  409608:	je     0x40967c
  40960a:	fs jne 0x40967d
  40960d:	add    BYTE PTR [rax],al
  40960f:	add    BYTE PTR [rsi],bl
  409611:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  409615:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40961c:	outs   dx,BYTE PTR ds:[rsi]
  40961d:	fs je  0x409685
  409620:	js     0x409696
  409622:	outs   dx,DWORD PTR fs:[rsi]
  409624:	ins    DWORD PTR es:[rdi],dx
  409625:	(bad)  
  409626:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  40962d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  409631:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  409638:	je     0x4096ae
  40963a:	gs js  0x4096b1
  40963d:	add    BYTE PTR [rax],al
  40963f:	add    BYTE PTR [rbp+0x0],al
  409642:	ins    BYTE PTR es:[rdi],dx
  409643:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40964a:	je     0x4096b1
  40964c:	js     0x4096c2
  40964e:	outs   dx,DWORD PTR fs:[rsi]
  409650:	ins    DWORD PTR es:[rdi],dx
  409651:	(bad)  
  409652:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  409659:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40965d:	gs je  0x4096c5
  409660:	rex.XB jb 0x4096cc
  409663:	je     0x4096ce
  409665:	movsxd esp,DWORD PTR [rcx+0x6c]
  409668:	push   rbx
  409669:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40966e:	outs   dx,BYTE PTR ds:[rsi]
  40966f:	add    al,bh
  409671:	add    BYTE PTR [rbp+0x6e],al
  409674:	je     0x4096db
  409676:	jb     0x4096bb
  409678:	jb     0x4096e3
  40967a:	je     0x4096e5
  40967c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40967f:	push   rbx
  409680:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409685:	outs   dx,BYTE PTR ds:[rsi]
  409686:	add    BYTE PTR [rax],al
  409688:	cdq    
  409689:	add    DWORD PTR [rdi+0x65],eax
  40968c:	je     0x4096d1
  40968e:	outs   dx,DWORD PTR ds:[rsi]
  40968f:	ins    DWORD PTR es:[rdi],dx
  409690:	jo     0x409707
  409692:	je     0x4096f9
  409694:	jb     0x4096e4
  409696:	(bad)  
  409697:	ins    DWORD PTR es:[rdi],dx
  409698:	add    BYTE PTR gs:[r8],al
  40969c:	int    0x1
  40969e:	rex.RXB
  40969f:	gs je  0x4096e5
  4096a2:	jne    0x409716
  4096a4:	jb     0x40970b
  4096a6:	outs   dx,BYTE PTR ds:[rsi]
  4096a7:	je     0x4096f9
  4096a9:	jb     0x40971a
  4096ab:	movsxd esp,DWORD PTR [rbp+0x73]
  4096ae:	jae    0x4096b0
  4096b0:	(bad)  
  4096b1:	add    DWORD PTR [rdi+0x65],eax
  4096b4:	je     0x4096f9
  4096b6:	jne    0x40972a
  4096b8:	jb     0x40971f
  4096ba:	outs   dx,BYTE PTR ds:[rsi]
  4096bb:	je     0x40970d
  4096bd:	jb     0x40972e
  4096bf:	movsxd esp,DWORD PTR [rbp+0x73]
  4096c2:	jae    0x40970d
  4096c4:	fs add dl,dl
  4096c7:	add    DWORD PTR [rdi+0x65],eax
  4096ca:	je     0x40970f
  4096cc:	jne    0x409740
  4096ce:	jb     0x409735
  4096d0:	outs   dx,BYTE PTR ds:[rsi]
  4096d1:	je     0x409727
  4096d3:	push   0x64616572
  4096d8:	rex.WB
  4096d9:	add    BYTE PTR fs:[rax],al
  4096dc:	adc    BYTE PTR [rdx],al
  4096de:	rex.RXB
  4096df:	gs je  0x40972e
  4096e2:	(bad)  
  4096e3:	jae    0x409759
  4096e5:	rex.RB jb 0x40975a
  4096e8:	outs   dx,DWORD PTR ds:[rsi]
  4096e9:	jb     0x4096eb
  4096eb:	add    BYTE PTR [rbx+0x2],dh
  4096ee:	rex.RXB
  4096ef:	gs je  0x409745
  4096f2:	je     0x409755
  4096f4:	jb     0x40976a
  4096f6:	jne    0x409768
  4096f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4096fa:	outs   dx,WORD PTR ds:[rsi]
  4096fc:	add    BYTE PTR [r10+0x74654702],cl
  409703:	push   rbx
  409704:	jns    0x409779
  409706:	je     0x40976d
  409708:	ins    DWORD PTR es:[rdi],dx
  409709:	push   rsp
  40970a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  409711:	ins    BYTE PTR es:[rdi],dx
  409712:	gs push rsp
  409714:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40971b:	gs je  0x409772
  40971e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409725:	je     0x409727
  409727:	add    cl,bh
  409729:	add    cl,BYTE PTR [rcx+0x6e]
  40972c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409734:	rex.XB jb 0x4097a0
  409737:	je     0x4097a2
  409739:	movsxd esp,DWORD PTR [rcx+0x6c]
  40973c:	push   rbx
  40973d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409742:	outs   dx,BYTE PTR ds:[rsi]
  409743:	add    BYTE PTR [rbx+0x3],cl
  409746:	rex.WR
  409747:	gs (bad) 
  409749:	jbe    0x4097b0
  40974b:	rex.XB jb 0x4097b7
  40974e:	je     0x4097b9
  409750:	movsxd esp,DWORD PTR [rcx+0x6c]
  409753:	push   rbx
  409754:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409759:	outs   dx,BYTE PTR ds:[rsi]
  40975a:	add    BYTE PTR [rax],al
  40975c:	mov    ebx,0x65755103
  409761:	jb     0x4097dc
  409763:	push   rax
  409764:	gs jb  0x4097cd
  409767:	outs   dx,DWORD PTR ds:[rsi]
  409768:	jb     0x4097d7
  40976a:	(bad)  
  40976b:	outs   dx,BYTE PTR ds:[rsi]
  40976c:	movsxd esp,DWORD PTR [rbp+0x43]
  40976f:	outs   dx,DWORD PTR ds:[rsi]
  409770:	jne    0x4097e0
  409772:	je     0x4097d9
  409774:	jb     0x409776
  409776:	add    DWORD PTR [rdx+rdx*2],eax
  409779:	je     0x4097e7
  40977b:	rex.B
  40977c:	fs fs rex.RX jne 0x4097ef
  409781:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409785:	outs   dx,BYTE PTR ds:[rsi]
  409786:	push   rsp
  409787:	(bad)  
  409788:	(bad)  
  409789:	ins    BYTE PTR es:[rdi],dx
  40978a:	add    BYTE PTR gs:[rdx],al
  40978d:	add    al,0x52
  40978f:	je     0x4097fd
  409791:	rex.XB (bad) 
  409793:	jo     0x409809
  409795:	jne    0x409809
  409797:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40979a:	outs   dx,BYTE PTR ds:[rsi]
  40979b:	je     0x409802
  40979d:	js     0x409813
  40979f:	add    BYTE PTR [rcx],cl
  4097a1:	add    al,0x52
  4097a3:	je     0x409811
  4097a5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4097a7:	outs   dx,DWORD PTR ds:[rsi]
  4097a8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4097ac:	jne    0x40981c
  4097ae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4097b2:	outs   dx,BYTE PTR ds:[rsi]
  4097b3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4097b5:	je     0x409829
  4097b7:	jns    0x4097b9
  4097b9:	add    BYTE PTR [rax],dl
  4097bb:	add    al,0x52
  4097bd:	je     0x40982b
  4097bf:	push   rsi
  4097c0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4097c7:	outs   dx,BYTE PTR ds:[rsi]
  4097c8:	ja     0x409833
  4097ca:	outs   dx,BYTE PTR ds:[rsi]
  4097cb:	add    BYTE PTR fs:[rax],al
  4097ce:	lahf   
  4097cf:	add    al,0x53
  4097d1:	gs je  0x409829
  4097d4:	outs   dx,BYTE PTR ds:[rsi]
  4097d5:	push   0x6c646e61
  4097da:	gs fs rex.RB js 0x409842
  4097df:	gs jo  0x409856
  4097e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097e9:	gs jb  0x4097ec
  4097ec:	lods   al,BYTE PTR ds:[rsi]
  4097ed:	add    al,0x53
  4097ef:	ins    BYTE PTR es:[rdi],dx
  4097f0:	gs gs jo 0x4097f4
  4097f4:	mov    edx,0x72655404
  4097f9:	ins    DWORD PTR es:[rdi],dx
  4097fa:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409801:	outs   dx,DWORD PTR ds:[rsi]
  409802:	movsxd esp,DWORD PTR [rbp+0x73]
  409805:	jae    0x409807
  409807:	add    cl,al
  409809:	add    al,0x54
  40980b:	ins    BYTE PTR es:[rdi],dx
  40980c:	jae    0x409855
  40980e:	gs je  0x409867
  409811:	(bad)  
  409812:	ins    BYTE PTR es:[rdi],dx
  409813:	jne    0x40987a
  409815:	add    dh,cl
  409817:	add    al,0x55
  409819:	outs   dx,BYTE PTR ds:[rsi]
  40981a:	push   0x6c646e61
  40981f:	gs fs rex.RB js 0x409887
  409824:	gs jo  0x40989b
  409827:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40982e:	gs jb  0x409831
  409831:	add    ah,ch
  409833:	add    al,0x56
  409835:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40983c:	jb     0x4098ad
  40983e:	je     0x4098a5
  409840:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409844:	out    dx,al
  409845:	add    al,0x56
  409847:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40984e:	jne    0x4098b5
  409850:	jb     0x4098cb
  409852:	add    BYTE PTR [rax],al
  409854:	(bad)  
  409855:	add    BYTE PTR [rdi+0x5f],bl
  409858:	rex.XB pop r15
  40985a:	jae    0x4098cc
  40985c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409860:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409867:	ins    BYTE PTR es:[rdi],dx
  409868:	gs jb  0x40986b
  40986b:	add    BYTE PTR [rsi+0x0],cl
  40986e:	pop    rdi
  40986f:	pop    rdi
  409870:	fs ins BYTE PTR es:[rdi],dx
  409872:	ins    BYTE PTR es:[rdi],dx
  409873:	outs   dx,DWORD PTR ds:[rsi]
  409874:	outs   dx,BYTE PTR ds:[rsi]
  409875:	gs js  0x4098e1
  409878:	je     0x40987a
  40987a:	push   rcx
  40987b:	add    BYTE PTR [rdi+0x5f],bl
  40987e:	addr32 gs je 0x4098ef
  409882:	(bad)  
  409883:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40988a:	push   rdx
  40988b:	add    BYTE PTR [rdi+0x5f],bl
  40988e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409895:	add    BYTE PTR [rbx+0x0],dl
  409898:	pop    rdi
  409899:	pop    rdi
  40989a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4098a1:	movsxd eax,DWORD PTR [rax]
  4098a3:	add    BYTE PTR [rdx+0x0],bl
  4098a6:	pop    rdi
  4098a7:	pop    rdi
  4098a8:	ins    BYTE PTR es:[rdi],dx
  4098a9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4098ac:	jbe    0x40990d
  4098ae:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4098b5:	add    BYTE PTR [rdi+0x5f],bl
  4098b8:	jae    0x40991f
  4098ba:	je     0x40991b
  4098bc:	(bad)  
  4098bd:	jo     0x40992f
  4098bf:	pop    rdi
  4098c0:	je     0x40993b
  4098c2:	jo     0x409929
  4098c4:	add    BYTE PTR [rax],al
  4098c6:	(bad)  
  4098c7:	add    BYTE PTR [rdi+0x5f],bl
  4098ca:	jae    0x409931
  4098cc:	je     0x409943
  4098ce:	jae    0x409935
  4098d0:	jb     0x40993f
  4098d2:	(bad)  
  4098d3:	je     0x40993d
  4098d5:	gs jb  0x40994a
  4098d8:	add    BYTE PTR [rax],al
  4098da:	jno    0x4098dc
  4098dc:	pop    rdi
  4098dd:	(bad)  
  4098de:	movsxd ebp,DWORD PTR [rbp+0x64]
  4098e1:	ins    BYTE PTR es:[rdi],dx
  4098e2:	outs   dx,BYTE PTR ds:[rsi]
  4098e3:	add    BYTE PTR [rax+0x0],bh
  4098e6:	pop    rdi
  4098e7:	(bad)  
  4098e8:	ins    DWORD PTR es:[rdi],dx
  4098e9:	jae    0x409952
  4098eb:	pop    rdi
  4098ec:	gs js  0x409958
  4098ef:	je     0x4098f1
  4098f1:	add    BYTE PTR [rdx+0x65635f00],cl
  4098f7:	js     0x409962
  4098f9:	je     0x4098fb
  4098fb:	add    dl,bl
  4098fd:	add    BYTE PTR [rdi+0x66],bl
  409900:	ins    DWORD PTR es:[rdi],dx
  409901:	outs   dx,DWORD PTR ds:[rsi]
  409902:	fs add BYTE PTR gs:[rax],al
  409906:	sbb    al,BYTE PTR [rcx]
  409908:	pop    rdi
  409909:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409910:	ins    DWORD PTR es:[rdi],dx
  409911:	add    BYTE PTR [rax+0x6f6c5f01],al
  409917:	movsxd ebp,DWORD PTR [rbx+0x0]
  40991a:	and    eax,0x6e6f5f02
  40991f:	gs js  0x40998b
  409922:	je     0x409924
  409924:	(bad)
  409928:	outs   dx,BYTE PTR ds:[rsi]
  409929:	ins    BYTE PTR es:[rdi],dx
  40992a:	outs   dx,DWORD PTR ds:[rsi]
  40992b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40992e:	jg     0x409933
  409930:	(bad)  
  409931:	(bad)  
  409932:	outs   dx,DWORD PTR ds:[rsi]
  409933:	jb     0x4099a9
  409935:	add    BYTE PTR [rax+0x6c616303],dl
  40993b:	ins    BYTE PTR es:[rdi],dx
  40993c:	outs   dx,DWORD PTR ds:[rsi]
  40993d:	movsxd eax,DWORD PTR [rax]
  40993f:	add    BYTE PTR [rbp+0x69786503],bl
  409945:	je     0x409947
  409947:	add    BYTE PTR [rax+0x72706603],dh
  40994d:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  409954:	data16 jb 0x4099bc
  409957:	add    BYTE PTR gs:[rax],al
  40995a:	ret    0x6603
  40995d:	ja     0x4099d1
  40995f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409967:	(bad)  
  409968:	ins    BYTE PTR es:[rdi],dx
  409969:	ins    BYTE PTR es:[rdi],dx
  40996a:	outs   dx,DWORD PTR ds:[rsi]
  40996b:	movsxd eax,DWORD PTR [rax]
  40996d:	add    al,bh
  40996f:	add    ebp,DWORD PTR [rbp+0x65]
  409972:	ins    DWORD PTR es:[rdi],dx
  409973:	movsxd esi,DWORD PTR [rax+0x79]
  409976:	add    BYTE PTR [rax],al
  409978:	(bad)  
  409979:	add    al,0x73
  40997b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409982:	and    eax,DWORD PTR [rbx+rsi*2]
  409985:	je     0x4099f9
  409987:	movsxd ebp,DWORD PTR [rax+0x72]
  40998a:	add    BYTE PTR [rax],al
  40998c:	sub    eax,DWORD PTR [rbx+rsi*2]
  40998f:	je     0x409a03
  409991:	ins    BYTE PTR es:[rdi],dx
  409992:	outs   dx,BYTE PTR gs:[rsi]
  409994:	add    BYTE PTR [rax],al
  409996:	cs add al,0x73
  409999:	je     0x409a0d
  40999b:	outs   dx,BYTE PTR ds:[rsi]
  40999c:	movsxd ebp,DWORD PTR [rbp+0x70]
  40999f:	add    BYTE PTR [rsi+0x4],cl
  4099a2:	jbe    0x409a0a
  4099a4:	jo     0x409a18
  4099a6:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4099ad:	nop
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	add    BYTE PTR [rax-0x70000000],dl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	add    BYTE PTR [rax-0x70000000],dl
  4099be:	add    BYTE PTR [rax],al
  4099c0:	add    BYTE PTR [rax-0x70000000],dl
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	add    BYTE PTR [rax-0x70000000],dl
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	add    BYTE PTR [rax-0x70000000],dl
  4099d6:	add    BYTE PTR [rax],al
  4099d8:	add    BYTE PTR [rax-0x70000000],dl
  4099de:	add    BYTE PTR [rax],al
  4099e0:	add    BYTE PTR [rax-0x70000000],dl
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	ins    BYTE PTR es:[rdi],dx
  4099e9:	imul   esp,DWORD PTR [rdx+0x67],0x65747465
  4099f0:	js     0x409a66
  4099f2:	ins    BYTE PTR es:[rdi],dx
  4099f3:	imul   esp,DWORD PTR [rdx+0x2d],0x39312d30
  4099fa:	sub    eax,0x2e312d35
  4099ff:	fs ins BYTE PTR es:[rdi],dx
  409a01:	ins    BYTE PTR es:[rdi],dx
  409a02:	add    BYTE PTR [rax],al
  409a04:	adc    al,0x90
  409a06:	add    BYTE PTR [rax],al
  409a08:	adc    al,0x90
  409a0a:	add    BYTE PTR [rax],al
  409a0c:	adc    al,0x90
  409a0e:	add    BYTE PTR [rax],al
  409a10:	ins    BYTE PTR es:[rdi],dx
  409a11:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  409a18:	cmp    BYTE PTR [rsi],ch
  409a1a:	fs ins BYTE PTR es:[rdi],dx
  409a1c:	ins    BYTE PTR es:[rdi],dx
  409a1d:	add    BYTE PTR [rax],al
  409a1f:	add    BYTE PTR [rax],ch
  409a21:	nop
  409a22:	add    BYTE PTR [rax],al
  409a24:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a2a:	add    BYTE PTR [rax],al
  409a2c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a32:	add    BYTE PTR [rax],al
  409a34:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a3a:	add    BYTE PTR [rax],al
  409a3c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a42:	add    BYTE PTR [rax],al
  409a44:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a4a:	add    BYTE PTR [rax],al
  409a4c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a52:	add    BYTE PTR [rax],al
  409a54:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a5a:	add    BYTE PTR [rax],al
  409a5c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a62:	add    BYTE PTR [rax],al
  409a64:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a6a:	add    BYTE PTR [rax],al
  409a6c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a72:	add    BYTE PTR [rax],al
  409a74:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	sub    BYTE PTR [rax+0x454b0000],dl
  409a82:	push   rdx
  409a83:	rex.WRX
  409a84:	rex.RB
  409a85:	xor    r14,QWORD PTR [rdx]
  409a88:	cs fs ins BYTE PTR es:[rdi],dx
  409a8b:	ins    BYTE PTR es:[rdi],dx
  409a8c:	add    BYTE PTR [rax],al
  409a8e:	add    BYTE PTR [rax],al
  409a90:	cmp    al,0x90
  409a92:	add    BYTE PTR [rax],al
  409a94:	cmp    al,0x90
  409a96:	add    BYTE PTR [rax],al
  409a98:	cmp    al,0x90
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	cmp    al,0x90
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	cmp    al,0x90
  409aa2:	add    BYTE PTR [rax],al
  409aa4:	cmp    al,0x90
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	cmp    al,0x90
  409aaa:	add    BYTE PTR [rax],al
  409aac:	cmp    al,0x90
  409aae:	add    BYTE PTR [rax],al
  409ab0:	cmp    al,0x90
  409ab2:	add    BYTE PTR [rax],al
  409ab4:	cmp    al,0x90
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	cmp    al,0x90
  409aba:	add    BYTE PTR [rax],al
  409abc:	cmp    al,0x90
  409abe:	add    BYTE PTR [rax],al
  409ac0:	cmp    al,0x90
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	cmp    al,0x90
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	cmp    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	cmp    al,0x90
  409ace:	add    BYTE PTR [rax],al
  409ad0:	cmp    al,0x90
  409ad2:	add    BYTE PTR [rax],al
  409ad4:	cmp    al,0x90
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	cmp    al,0x90
  409ada:	add    BYTE PTR [rax],al
  409adc:	cmp    al,0x90
  409ade:	add    BYTE PTR [rax],al
  409ae0:	cmp    al,0x90
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	cmp    al,0x90
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	cmp    al,0x90
  409aea:	add    BYTE PTR [rax],al
  409aec:	cmp    al,0x90
  409aee:	add    BYTE PTR [rax],al
  409af0:	cmp    al,0x90
  409af2:	add    BYTE PTR [rax],al
  409af4:	cmp    al,0x90
  409af6:	add    BYTE PTR [rax],al
  409af8:	cmp    al,0x90
  409afa:	add    BYTE PTR [rax],al
  409afc:	cmp    al,0x90
  409afe:	add    BYTE PTR [rax],al
  409b00:	cmp    al,0x90
  409b02:	add    BYTE PTR [rax],al
  409b04:	ins    DWORD PTR es:[rdi],dx
  409b05:	jae    0x409b7d
  409b07:	movsxd esi,DWORD PTR [rdx+0x74]
  409b0a:	cs fs ins BYTE PTR es:[rdi],dx
  409b0d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x17],al
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x19],dh
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x19],al
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

000000000040c000 <.rsrc>:
	...
  40c00c:	add    BYTE PTR [rax],al
  40c00e:	add    DWORD PTR [rax],eax
  40c010:	adc    BYTE PTR [rax],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	sbb    BYTE PTR [rax],al
  40c016:	add    BYTE PTR [rax+0x0],al
	...
  40c024:	add    BYTE PTR [rax],al
  40c026:	add    DWORD PTR [rax],eax
  40c028:	add    DWORD PTR [rax],eax
  40c02a:	add    BYTE PTR [rax],al
  40c02c:	xor    BYTE PTR [rax],al
  40c02e:	add    BYTE PTR [rax+0x0],al
	...
  40c03c:	add    BYTE PTR [rax],al
  40c03e:	add    DWORD PTR [rax],eax
  40c040:	or     DWORD PTR [rax+rax*1],eax
  40c043:	add    BYTE PTR [rax+0x0],cl
  40c046:	add    BYTE PTR [rax],al
  40c048:	pop    rax
  40c049:	rol    BYTE PTR [rax],0x0
  40c04c:	mov    BYTE PTR [rip+0x0],al        # 0x40c052
  40c052:	add    BYTE PTR [rax],al
  40c054:	add    BYTE PTR [rax],al
  40c056:	add    BYTE PTR [rax],al
  40c058:	mov    BYTE PTR [rip+0x34],al        # 0x40c092
  40c05e:	push   rsi
  40c05f:	add    BYTE PTR [rbx+0x0],dl
  40c062:	pop    rdi
  40c063:	add    BYTE PTR [rsi+0x0],dl
  40c066:	add    BYTE PTR [r10+0x0],r10b
  40c06a:	push   rbx
  40c06b:	add    BYTE PTR [rcx+0x0],cl
  40c06e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  40c072:	pop    rdi
  40c073:	add    BYTE PTR [rcx+0x0],cl
  40c076:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  40c07a:	rex.WRXB add BYTE PTR [r8],r8b
  40c07d:	add    BYTE PTR [rax],al
  40c07f:	add    BYTE PTR [rbp+0xfeef04],bh
  40c085:	add    BYTE PTR [rcx],al
  40c087:	add    BYTE PTR [rbx],dl
  40c089:	add    BYTE PTR [rax],al
  40c08b:	add    BYTE PTR [rax],al
  40c08d:	add    BYTE PTR [rip+0x1300],al        # 0x40d393
  40c093:	add    BYTE PTR [rax],al
  40c095:	add    BYTE PTR [rip+0x3f00],al        # 0x40ff9b
  40c09b:	add    BYTE PTR [rax],al
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rax+rax*1],al
  40c0a2:	add    DWORD PTR [rax],eax
  40c0a4:	add    DWORD PTR [rax],eax
	...
  40c0b2:	add    BYTE PTR [rax],al
  40c0b4:	out    0x4,al
  40c0b6:	add    BYTE PTR [rax],al
  40c0b8:	add    DWORD PTR [rax],eax
  40c0ba:	push   rbx
  40c0bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  40c0bf:	add    BYTE PTR [rcx+0x0],ch
  40c0c2:	outs   dx,BYTE PTR ds:[rsi]
  40c0c3:	add    BYTE PTR [rdi+0x0],ah
  40c0c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c0ca:	ins    BYTE PTR es:[rdi],dx
  40c0cb:	add    BYTE PTR [rbp+0x0],ah
  40c0ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  40c0d2:	data16 add BYTE PTR [rdi+0x0],ch
  40c0d6:	add    BYTE PTR [rax],al
  40c0d8:	ret    0x4
  40c0db:	add    BYTE PTR [rcx],al
  40c0dd:	add    BYTE PTR [rax],dh
  40c0df:	add    BYTE PTR [rax+rax*1],dh
  40c0e2:	xor    BYTE PTR [rax],al
  40c0e4:	cmp    DWORD PTR [rax],eax
  40c0e6:	xor    BYTE PTR [rax],al
  40c0e8:	xor    BYTE PTR [rax],al
  40c0ea:	xor    BYTE PTR [rax],al
  40c0ec:	xor    BYTE PTR [rax],al
  40c0ee:	add    BYTE PTR [rax],al
  40c0f0:	sbb    al,0x2
  40c0f2:	add    al,BYTE PTR [rcx]
  40c0f4:	add    DWORD PTR [rax],eax
  40c0f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c0fa:	ins    DWORD PTR es:[rdi],dx
  40c0fb:	add    BYTE PTR [rbp+0x0],ch
  40c0fe:	add    BYTE PTR gs:[rsi+0x0],ch
  40c102:	je     0x40c104
  40c104:	jae    0x40c106
  40c106:	add    BYTE PTR [rax],al
  40c108:	push   rsp
  40c109:	add    BYTE PTR [rax+0x0],ch
  40c10c:	imul   eax,DWORD PTR [rax],0x200073
  40c112:	jo     0x40c114
  40c114:	jb     0x40c116
  40c116:	outs   dx,DWORD PTR ds:[rsi]
  40c117:	add    BYTE PTR [rdi+0x0],ah
  40c11a:	jb     0x40c11c
  40c11c:	(bad)  
  40c11d:	add    BYTE PTR [rbp+0x0],ch
  40c120:	and    BYTE PTR [rax],al
  40c122:	imul   eax,DWORD PTR [rax],0x200073
  40c128:	data16 add BYTE PTR [rdx+0x0],dh
  40c12c:	add    BYTE PTR gs:[rbp+0x0],ah
  40c130:	and    BYTE PTR [rax],al
  40c132:	jae    0x40c134
  40c134:	outs   dx,DWORD PTR ds:[rsi]
  40c135:	add    BYTE PTR [rsi+0x0],ah
  40c138:	je     0x40c13a
  40c13a:	ja     0x40c13c
  40c13c:	(bad)  
  40c13d:	add    BYTE PTR [rdx+0x0],dh
  40c140:	add    BYTE PTR gs:[rdx],bh
  40c143:	add    BYTE PTR [rax],ah
  40c145:	add    BYTE PTR [rcx+0x0],bh
  40c148:	outs   dx,DWORD PTR ds:[rsi]
  40c149:	add    BYTE PTR [rbp+0x0],dh
  40c14c:	and    BYTE PTR [rax],al
  40c14e:	movsxd eax,DWORD PTR [rax]
  40c150:	(bad)  
  40c151:	add    BYTE PTR [rsi+0x0],ch
  40c154:	and    BYTE PTR [rax],al
  40c156:	jb     0x40c158
  40c158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  40c15d:	add    BYTE PTR [rbx+0x0],dh
  40c160:	je     0x40c162
  40c162:	jb     0x40c164
  40c164:	imul   eax,DWORD PTR [rax],0x750062
  40c16a:	je     0x40c16c
  40c16c:	add    BYTE PTR gs:[rax],ah
  40c16f:	add    BYTE PTR [rcx+0x0],ch
  40c172:	je     0x40c174
  40c174:	and    BYTE PTR [rax],al
  40c176:	(bad)  
  40c177:	add    BYTE PTR [rsi+0x0],ch
  40c17a:	add    BYTE PTR fs:[rdi],ch
  40c17d:	add    BYTE PTR [rdi+0x0],ch
  40c180:	jb     0x40c182
  40c182:	and    BYTE PTR [rax],al
  40c184:	ins    DWORD PTR es:[rdi],dx
  40c185:	add    BYTE PTR [rdi+0x0],ch
  40c188:	add    BYTE PTR fs:[rcx+0x0],ch
  40c18c:	data16 add BYTE PTR [rcx+0x0],bh
  40c190:	and    BYTE PTR [rax],al
  40c192:	imul   eax,DWORD PTR [rax],0x200074
  40c198:	jne    0x40c19a
  40c19a:	outs   dx,BYTE PTR ds:[rsi]
  40c19b:	add    BYTE PTR [rax+rax*1+0x65],ah
  40c19f:	add    BYTE PTR [rdx+0x0],dh
  40c1a2:	and    BYTE PTR [rax],al
  40c1a4:	je     0x40c1a6
  40c1a6:	push   0x20006500
  40c1ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  40c1af:	add    BYTE PTR [rdx+0x0],dh
  40c1b2:	ins    DWORD PTR es:[rdi],dx
  40c1b3:	add    BYTE PTR [rbx+0x0],dh
  40c1b6:	and    BYTE PTR [rax],al
  40c1b8:	outs   dx,DWORD PTR ds:[rsi]
  40c1b9:	add    BYTE PTR [rsi+0x0],ah
  40c1bc:	and    BYTE PTR [rax],al
  40c1be:	je     0x40c1c0
  40c1c0:	push   0x20006500
  40c1c5:	add    BYTE PTR [rdi+0x0],al
  40c1c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40c1cc:	and    BYTE PTR [rax],al
  40c1ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40c1d2:	outs   dx,BYTE PTR ds:[rsi]
  40c1d3:	add    BYTE PTR [rbp+0x0],ah
  40c1d6:	jb     0x40c1d8
  40c1d8:	(bad)  
  40c1d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  40c1dd:	add    BYTE PTR [rax+0x0],dl
  40c1e0:	jne    0x40c1e2
  40c1e2:	(bad)  
  40c1e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c1e7:	add    BYTE PTR [rbx+0x0],ah
  40c1ea:	and    BYTE PTR [rax],al
  40c1ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40c1f0:	movsxd eax,DWORD PTR [rax]
  40c1f2:	add    BYTE PTR gs:[rsi+0x0],ch
  40c1f6:	jae    0x40c1f8
  40c1f8:	add    BYTE PTR gs:[rsi],ch
  40c1fb:	add    BYTE PTR [rax],ah
  40c1fd:	add    BYTE PTR [rcx+0x0],bl
  40c200:	outs   dx,DWORD PTR ds:[rsi]
  40c201:	add    BYTE PTR [rbp+0x0],dh
  40c204:	and    BYTE PTR [rax],al
  40c206:	jae    0x40c208
  40c208:	push   0x75006f00
  40c20d:	add    BYTE PTR [rax+rax*1+0x64],ch
  40c211:	add    BYTE PTR [rax],ah
  40c213:	add    BYTE PTR [rax+0x0],ch
  40c216:	(bad)  
  40c217:	add    BYTE PTR [rsi+0x0],dh
  40c21a:	add    BYTE PTR gs:[rax],ah
  40c21d:	add    BYTE PTR [rdx+0x0],dh
  40c220:	add    BYTE PTR gs:[rbx+0x0],ah
  40c224:	add    BYTE PTR gs:[rcx+0x0],ch
  40c228:	jbe    0x40c22a
  40c22a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40c22f:	add    BYTE PTR [rcx+0x0],ah
  40c232:	and    BYTE PTR [rax],al
  40c234:	movsxd eax,DWORD PTR [rax]
  40c236:	outs   dx,DWORD PTR ds:[rsi]
  40c237:	add    BYTE PTR [rax+0x0],dh
  40c23a:	jns    0x40c23c
  40c23c:	and    BYTE PTR [rax],al
  40c23e:	outs   dx,DWORD PTR ds:[rsi]
  40c23f:	add    BYTE PTR [rsi+0x0],ah
  40c242:	and    BYTE PTR [rax],al
  40c244:	je     0x40c246
  40c246:	push   0x20006500
  40c24b:	add    BYTE PTR [rdi+0x0],al
  40c24e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40c252:	and    BYTE PTR [rax],al
  40c254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40c258:	outs   dx,BYTE PTR ds:[rsi]
  40c259:	add    BYTE PTR [rbp+0x0],ah
  40c25c:	jb     0x40c25e
  40c25e:	(bad)  
  40c25f:	add    BYTE PTR [rax+rax*1+0x20],ch
  40c263:	add    BYTE PTR [rax+0x0],dl
  40c266:	jne    0x40c268
  40c268:	(bad)  
  40c269:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c26d:	add    BYTE PTR [rbx+0x0],ah
  40c270:	and    BYTE PTR [rax],al
  40c272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40c276:	movsxd eax,DWORD PTR [rax]
  40c278:	add    BYTE PTR gs:[rsi+0x0],ch
  40c27c:	jae    0x40c27e
  40c27e:	add    BYTE PTR gs:[rax],ah
  40c281:	add    BYTE PTR [rcx+0x0],ah
  40c284:	ins    BYTE PTR es:[rdi],dx
  40c285:	add    BYTE PTR [rdi+0x0],ch
  40c288:	outs   dx,BYTE PTR ds:[rsi]
  40c289:	add    BYTE PTR [rdi+0x0],ah
  40c28c:	and    BYTE PTR [rax],al
  40c28e:	ja     0x40c290
  40c290:	imul   eax,DWORD PTR [rax],0x680074
  40c296:	and    BYTE PTR [rax],al
  40c298:	je     0x40c29a
  40c29a:	push   0x73006900
  40c29f:	add    BYTE PTR [rax],ah
  40c2a1:	add    BYTE PTR [rax+0x0],dh
  40c2a4:	jb     0x40c2a6
  40c2a6:	outs   dx,DWORD PTR ds:[rsi]
  40c2a7:	add    BYTE PTR [rdi+0x0],ah
  40c2aa:	jb     0x40c2ac
  40c2ac:	(bad)  
  40c2ad:	add    BYTE PTR [rbp+0x0],ch
  40c2b0:	add    BYTE PTR cs:[rax],ah
  40c2b3:	add    BYTE PTR [rcx+0x0],cl
  40c2b6:	data16 add BYTE PTR [rax],ah
  40c2b9:	add    BYTE PTR [rsi+0x0],ch
  40c2bc:	outs   dx,DWORD PTR ds:[rsi]
  40c2bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  40c2c1:	add    BYTE PTR [rax],ah
  40c2c3:	add    BYTE PTR [rbx+0x0],dh
  40c2c6:	add    BYTE PTR gs:[rbp+0x0],ah
  40c2ca:	and    BYTE PTR [rax],al
  40c2cc:	cmp    al,0x0
  40c2ce:	push   0x74007400
  40c2d3:	add    BYTE PTR [rax+0x0],dh
  40c2d6:	cmp    al,BYTE PTR [rax]
  40c2d8:	(bad)  
  40c2d9:	add    BYTE PTR [rdi],ch
  40c2db:	add    BYTE PTR [rdi+0x0],dh
  40c2de:	ja     0x40c2e0
  40c2e0:	ja     0x40c2e2
  40c2e2:	add    BYTE PTR cs:[rdi+0x0],ah
  40c2e6:	outs   dx,BYTE PTR ds:[rsi]
  40c2e7:	add    BYTE PTR [rbp+0x0],dh
  40c2ea:	add    BYTE PTR cs:[rdi+0x0],ch
  40c2ee:	jb     0x40c2f0
  40c2f0:	add    BYTE PTR [edi],ch
  40c2f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c2f7:	add    BYTE PTR [rbx+0x0],ah
  40c2fa:	add    BYTE PTR gs:[rsi+0x0],ch
  40c2fe:	jae    0x40c300
  40c300:	add    BYTE PTR gs:[rbx+0x0],dh
  40c304:	(bad)  
  40c305:	add    BYTE PTR [rsi],bh
  40c307:	add    BYTE PTR [rsi],ch
  40c309:	add    BYTE PTR [rax],al
  40c30b:	add    BYTE PTR [rdx+0x0],dl
  40c30e:	sbb    DWORD PTR [rax],eax
  40c310:	add    DWORD PTR [rax],eax
  40c312:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c316:	ins    DWORD PTR es:[rdi],dx
  40c317:	add    BYTE PTR [rax+0x0],dh
  40c31a:	(bad)  
  40c31b:	add    BYTE PTR [rsi+0x0],ch
  40c31e:	jns    0x40c320
  40c320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40c324:	ins    DWORD PTR es:[rdi],dx
  40c325:	add    BYTE PTR [rbp+0x0],ah
  40c328:	add    BYTE PTR [rax],al
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  40c330:	add    BYTE PTR gs:[rbp+0x0],ah
  40c334:	and    BYTE PTR [rax],al
  40c336:	push   rbx
  40c337:	add    BYTE PTR [rdi+0x0],ch
  40c33a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  40c33f:	add    BYTE PTR [rcx+0x0],ah
  40c342:	jb     0x40c344
  40c344:	add    BYTE PTR gs:[rax],ah
  40c347:	add    BYTE PTR [rsi+0x0],al
  40c34a:	outs   dx,DWORD PTR ds:[rsi]
  40c34b:	add    BYTE PTR [rbp+0x0],dh
  40c34e:	outs   dx,BYTE PTR ds:[rsi]
  40c34f:	add    BYTE PTR [rax+rax*1+0x61],ah
  40c353:	add    BYTE PTR [rax+rax*1+0x69],dh
  40c357:	add    BYTE PTR [rdi+0x0],ch
  40c35a:	outs   dx,BYTE PTR ds:[rsi]
  40c35b:	add    BYTE PTR [rax],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rax+rax*1+0x10042],ch
  40c366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c36a:	ins    BYTE PTR es:[rdi],dx
  40c36b:	add    BYTE PTR [rbp+0x0],ah
  40c36e:	add    BYTE PTR [rbp+0x0],r12b
  40c372:	jae    0x40c374
  40c374:	movsxd eax,DWORD PTR [rax]
  40c376:	jb     0x40c378
  40c378:	imul   eax,DWORD PTR [rax],0x740070
  40c37e:	imul   eax,DWORD PTR [rax],0x6e006f
  40c384:	add    BYTE PTR [rax],al
  40c386:	add    BYTE PTR [rax],al
  40c388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  40c38c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  40c390:	add    BYTE PTR fs:[rax],ah
  40c393:	add    BYTE PTR [rax+0x0],dh
  40c396:	jb     0x40c398
  40c398:	outs   dx,DWORD PTR ds:[rsi]
  40c399:	add    BYTE PTR [rdi+0x0],ah
  40c39c:	jb     0x40c39e
  40c39e:	(bad)  
  40c39f:	add    BYTE PTR [rbp+0x0],ch
  40c3a2:	and    BYTE PTR [rax],al
  40c3a4:	data16 add BYTE PTR [rdi+0x0],ch
  40c3a8:	jb     0x40c3aa
  40c3aa:	and    BYTE PTR [rax],al
  40c3ac:	push   rdi
  40c3ad:	add    BYTE PTR [rcx+0x0],ch
  40c3b0:	outs   dx,BYTE PTR ds:[rsi]
  40c3b1:	add    BYTE PTR [rax+rax*1+0x6f],ah
  40c3b5:	add    BYTE PTR [rdi+0x0],dh
  40c3b8:	jae    0x40c3ba
  40c3ba:	and    BYTE PTR [rax],al
  40c3bc:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  40c3c1:	add    BYTE PTR [rdx],dh
  40c3c3:	add    BYTE PTR [rax],dh
  40c3c5:	add    BYTE PTR [rax],dh
  40c3c7:	add    BYTE PTR [rax],dh
  40c3c9:	add    BYTE PTR [rdi],ch
  40c3cb:	add    BYTE PTR [rax+0x0],bl
  40c3ce:	push   rax
  40c3cf:	add    BYTE PTR [rdi],ch
  40c3d1:	add    BYTE PTR [rsi+0x0],dl
  40c3d4:	imul   eax,DWORD PTR [rax],0x740073
  40c3da:	(bad)  
  40c3db:	add    BYTE PTR [rdi],ch
  40c3dd:	add    BYTE PTR [rdi],dh
  40c3df:	add    BYTE PTR [rax],ah
  40c3e1:	add    BYTE PTR [rcx+0x0],ah
  40c3e4:	outs   dx,BYTE PTR ds:[rsi]
  40c3e5:	add    BYTE PTR [rax+rax*1+0x20],ah
  40c3e9:	add    BYTE PTR [rdi+0x0],dl
  40c3ec:	imul   eax,DWORD PTR [rax],0x64006e
  40c3f2:	outs   dx,DWORD PTR ds:[rsi]
  40c3f3:	add    BYTE PTR [rdi+0x0],dh
  40c3f6:	jae    0x40c3f8
  40c3f8:	and    BYTE PTR [rax],al
  40c3fa:	cmp    DWORD PTR [rax],eax
  40c3fc:	xor    eax,0x39002f00
  40c401:	add    BYTE PTR [rax],bh
  40c403:	add    BYTE PTR [rdi],ch
  40c405:	add    BYTE PTR [rbp+0x0],cl
  40c408:	add    BYTE PTR [r8],r8b
  40c40b:	add    BYTE PTR [rdx],dh
  40c40d:	add    BYTE PTR [rcx],cl
  40c40f:	add    BYTE PTR [rcx],al
  40c411:	add    BYTE PTR [rsi+0x0],al
  40c414:	imul   eax,DWORD PTR [rax],0x65006c
  40c41a:	push   rsi
  40c41b:	add    BYTE PTR [rbp+0x0],ah
  40c41e:	jb     0x40c420
  40c420:	jae    0x40c422
  40c422:	imul   eax,DWORD PTR [rax],0x6e006f
  40c428:	add    BYTE PTR [rax],al
  40c42a:	add    BYTE PTR [rax],al
  40c42c:	xor    BYTE PTR [rax],al
  40c42e:	add    BYTE PTR cs:[rcx],dh
  40c431:	add    BYTE PTR [rcx],bh
  40c433:	add    BYTE PTR [rsi],ch
  40c435:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3140f23b
  40c43b:	add    BYTE PTR [rax],al
  40c43d:	add    BYTE PTR [rax],al
  40c43f:	add    BYTE PTR [rax+rax*1],ch
  40c442:	(bad)  
  40c443:	add    BYTE PTR [rcx],al
  40c445:	add    BYTE PTR [rcx+0x0],cl
  40c448:	outs   dx,BYTE PTR ds:[rsi]
  40c449:	add    BYTE PTR [rax+rax*1+0x65],dh
  40c44d:	add    BYTE PTR [rdx+0x0],dh
  40c450:	outs   dx,BYTE PTR ds:[rsi]
  40c451:	add    BYTE PTR [rcx+0x0],ah
  40c454:	ins    BYTE PTR es:[rdi],dx
  40c455:	add    BYTE PTR [rsi+0x0],cl
  40c458:	(bad)  
  40c459:	add    BYTE PTR [rbp+0x0],ch
  40c45c:	add    BYTE PTR gs:[rax],al
  40c45f:	add    BYTE PTR [rdx],ch
  40c461:	add    BYTE PTR [rsi],ch
  40c463:	add    BYTE PTR [rbp+0x0],ah
  40c466:	js     0x40c468
  40c468:	add    BYTE PTR gs:[rax],al
  40c46b:	add    BYTE PTR [rax+rax*1+0x18],dl
  40c46f:	add    BYTE PTR [rcx],al
  40c471:	add    BYTE PTR [rax+rax*1+0x65],cl
  40c475:	add    BYTE PTR [rdi+0x0],ah
  40c478:	(bad)  
  40c479:	add    BYTE PTR [rax+rax*1+0x43],ch
  40c47d:	add    BYTE PTR [rdi+0x0],ch
  40c480:	jo     0x40c482
  40c482:	jns    0x40c484
  40c484:	jb     0x40c486
  40c486:	imul   eax,DWORD PTR [rax],0x680067
  40c48c:	je     0x40c48e
  40c48e:	add    BYTE PTR [rax],al
  40c490:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c494:	jo     0x40c496
  40c496:	jns    0x40c498
  40c498:	jb     0x40c49a
  40c49a:	imul   eax,DWORD PTR [rax],0x680067
  40c4a0:	je     0x40c4a2
  40c4a2:	and    BYTE PTR [rax],al
  40c4a4:	sub    BYTE PTR [rax],al
  40c4a6:	rex.XB add BYTE PTR [r9],bpl
  40c4a9:	add    BYTE PTR [rax],ah
  40c4ab:	add    BYTE PTR [rcx],dh
  40c4ad:	add    BYTE PTR [rcx],bh
  40c4af:	add    BYTE PTR [rcx],bh
  40c4b1:	add    BYTE PTR [rip+0x32002d00],dh        # 0x3240f1b7
  40c4b7:	add    BYTE PTR [rax],dh
  40c4b9:	add    BYTE PTR [rcx],dh
  40c4bb:	add    BYTE PTR [rbx],dh
  40c4bd:	add    BYTE PTR [rax],al
  40c4bf:	add    BYTE PTR [rdx],ch
  40c4c1:	add    BYTE PTR [rcx],al
  40c4c3:	add    BYTE PTR [rcx],al
  40c4c5:	add    BYTE PTR [rax+rax*1+0x65],cl
  40c4c9:	add    BYTE PTR [rdi+0x0],ah
  40c4cc:	(bad)  
  40c4cd:	add    BYTE PTR [rax+rax*1+0x54],ch
  40c4d1:	add    BYTE PTR [rdx+0x0],dh
  40c4d4:	(bad)  
  40c4d5:	add    BYTE PTR [rax+rax*1+0x65],ah
  40c4d9:	add    BYTE PTR [rbp+0x0],ch
  40c4dc:	(bad)  
  40c4dd:	add    BYTE PTR [rdx+0x0],dh
  40c4e0:	imul   eax,DWORD PTR [rax],0x73
	...
  40c4eb:	add    BYTE PTR [rax+rax*1],dh
  40c4ee:	(bad)  
  40c4ef:	add    BYTE PTR [rcx],al
  40c4f1:	add    BYTE PTR [rdi+0x0],cl
  40c4f4:	jb     0x40c4f6
  40c4f6:	imul   eax,DWORD PTR [rax],0x690067
  40c4fc:	outs   dx,BYTE PTR ds:[rsi]
  40c4fd:	add    BYTE PTR [rcx+0x0],ah
  40c500:	ins    BYTE PTR es:[rdi],dx
  40c501:	add    BYTE PTR [rsi+0x0],al
  40c504:	imul   eax,DWORD PTR [rax],0x65006c
  40c50a:	outs   dx,BYTE PTR ds:[rsi]
  40c50b:	add    BYTE PTR [rcx+0x0],ah
  40c50e:	ins    DWORD PTR es:[rdi],dx
  40c50f:	add    BYTE PTR [rbp+0x0],ah
  40c512:	add    BYTE PTR [rax],al
  40c514:	sub    al,BYTE PTR [rax]
  40c516:	add    BYTE PTR cs:[rbp+0x0],ah
  40c51a:	js     0x40c51c
  40c51c:	add    BYTE PTR gs:[rax],al
  40c51f:	add    BYTE PTR [rax+rax*1+0x12],al
  40c523:	add    BYTE PTR [rcx],al
  40c525:	add    BYTE PTR [rax+0x0],dl
  40c528:	jb     0x40c52a
  40c52a:	outs   dx,DWORD PTR ds:[rsi]
  40c52b:	add    BYTE PTR [rax+rax*1+0x75],ah
  40c52f:	add    BYTE PTR [rbx+0x0],ah
  40c532:	je     0x40c534
  40c534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40c538:	ins    DWORD PTR es:[rdi],dx
  40c539:	add    BYTE PTR [rbp+0x0],ah
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	add    BYTE PTR [ebp+0x0],ah
  40c544:	je     0x40c546
  40c546:	je     0x40c548
  40c548:	add    BYTE PTR gs:[rax+0x0],bh
  40c54c:	je     0x40c54e
  40c54e:	and    BYTE PTR [rax],al
  40c550:	jne    0x40c552
  40c552:	je     0x40c554
  40c554:	imul   eax,DWORD PTR [rax],0x69006c
  40c55a:	je     0x40c55c
  40c55c:	imul   eax,DWORD PTR [rax],0x730065
  40c562:	add    BYTE PTR [rax],al
  40c564:	add    BYTE PTR ss:[rcx],cl
  40c567:	add    BYTE PTR [rcx],al
  40c569:	add    BYTE PTR [rax+0x0],dl
  40c56c:	jb     0x40c56e
  40c56e:	outs   dx,DWORD PTR ds:[rsi]
  40c56f:	add    BYTE PTR [rax+rax*1+0x75],ah
  40c573:	add    BYTE PTR [rbx+0x0],ah
  40c576:	je     0x40c578
  40c578:	push   rsi
  40c579:	add    BYTE PTR [rbp+0x0],ah
  40c57c:	jb     0x40c57e
  40c57e:	jae    0x40c580
  40c580:	imul   eax,DWORD PTR [rax],0x6e006f
  40c586:	add    BYTE PTR [rax],al
  40c588:	xor    BYTE PTR [rax],al
  40c58a:	add    BYTE PTR cs:[rcx],dh
  40c58d:	add    BYTE PTR [rcx],bh
  40c58f:	add    BYTE PTR [rsi],ch
  40c591:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3140f397
  40c597:	add    BYTE PTR [rax],al
  40c599:	add    BYTE PTR [rax],al
  40c59b:	add    BYTE PTR [rax+rax*1+0x0],al
  40c59f:	add    BYTE PTR [rcx],al
  40c5a1:	add    BYTE PTR [rsi+0x0],dl
  40c5a4:	(bad)  
  40c5a5:	add    BYTE PTR [rdx+0x0],dh
  40c5a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c5ac:	ins    BYTE PTR es:[rdi],dx
  40c5ad:	add    BYTE PTR [rbp+0x0],ah
  40c5b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  40c5b4:	data16 add BYTE PTR [rdi+0x0],ch
  40c5b8:	add    BYTE PTR [rax],al
  40c5ba:	add    BYTE PTR [rax],al
  40c5bc:	and    al,0x0
  40c5be:	add    al,0x0
  40c5c0:	add    BYTE PTR [rax],al
  40c5c2:	push   rsp
  40c5c3:	add    BYTE PTR [rdx+0x0],dh
  40c5c6:	(bad)  
  40c5c7:	add    BYTE PTR [rsi+0x0],ch
  40c5ca:	jae    0x40c5cc
  40c5cc:	ins    BYTE PTR es:[rdi],dx
  40c5cd:	add    BYTE PTR [rcx+0x0],ah
  40c5d0:	je     0x40c5d2
  40c5d2:	imul   eax,DWORD PTR [rax],0x6e006f
  40c5d8:	add    BYTE PTR [rax],al
  40c5da:	add    BYTE PTR [rax],al
  40c5dc:	or     DWORD PTR [rax+rax*1],eax
	...
