
a500ec91119693013b74f72f3b082eb704417e57b6f26883f488dea2b8f081cb.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x7225]        # 0x408240
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x7226]        # 0x408250
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x7229]        # 0x408260
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x71ec]        # 0x408230
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x708f]        # 0x4080e0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x71c1]        # 0x408220
  40105f:	mov    DWORD PTR [rip+0x9fa3],edx        # 0x40b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404fe0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402d20
  401081:	mov    rdx,QWORD PTR [rip+0x70f8]        # 0x408180
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x70de]        # 0x408170
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x7144]        # 0x4081e0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x707b]        # 0x408120
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402900
  4010af:	mov    rax,QWORD PTR [rip+0x6fda]        # 0x408090
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404fe0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1ad9]        # 0x402c00
  401127:	call   0x402bf0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x70a5]        # 0x408210
  40116b:	lea    r8,[rip+0x9ea6]        # 0x40b018
  401172:	lea    rdx,[rip+0x9ea7]        # 0x40b020
  401179:	lea    rcx,[rip+0x9ea8]        # 0x40b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x9e78],eax        # 0x40b000
  401188:	lea    rax,[rip+0x9e71]        # 0x40b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x7035]        # 0x4081d0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404ff8
  4011a3:	mov    DWORD PTR [rip+0x9e67],eax        # 0x40b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x705a]        # 0x408220
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x6f5b]        # 0x408150
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xb25e]        # 0x40c460
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x6f37]        # 0x408160
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x9dba],0x1        # 0x40b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x6e6c]        # 0x4080d0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402f10
  40127d:	lea    rcx,[rip+0x222c]        # 0x4034b0
  401284:	call   QWORD PTR [rip+0xb1ce]        # 0x40c458
  40128a:	mov    rdx,QWORD PTR [rip+0x6eaf]        # 0x408140
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4033c0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x405020
  4012a5:	call   0x402d00
  4012aa:	mov    rax,QWORD PTR [rip+0x6e2f]        # 0x4080e0
  4012b1:	mov    QWORD PTR [rip+0xa7e0],rax        # 0x40ba98
  4012b8:	mov    rax,QWORD PTR [rip+0x6e51]        # 0x408110
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xa779],rax        # 0x40ba90
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0x9ceb]        # 0x40b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404ef8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x9cc2]        # 0x40b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404e80
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404ef8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404ee8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x9c6a],rbp        # 0x40b020
  4013b6:	call   0x4028d0
  4013bb:	mov    rax,QWORD PTR [rip+0x6d3e]        # 0x408100
  4013c2:	mov    rdx,QWORD PTR [rip+0x9c4f]        # 0x40b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x9c59]        # 0x40b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x9c3c]        # 0x40b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x9c3d]        # 0x40b020
  4013e3:	call   0x405100
  4013e8:	mov    ecx,DWORD PTR [rip+0x9c1a]        # 0x40b008
  4013ee:	mov    DWORD PTR [rip+0x9c18],eax        # 0x40b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x9c02]        # 0x40b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404fc8
  40140b:	mov    eax,DWORD PTR [rip+0x9bfb]        # 0x40b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x6d29]        # 0x408160
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404fd0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x6d3d]        # 0x4081a0
  401463:	mov    rcx,QWORD PTR [rip+0x6d26]        # 0x408190
  40146a:	call   0x404fb0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xaf6f]        # 0x40c408
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x6d19]        # 0x4081c0
  4014a7:	mov    rcx,QWORD PTR [rip+0x6d02]        # 0x4081b0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404fb0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404f60
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x6d45]        # 0x408220
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x402910
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x6d15]        # 0x408220
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x402910
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r15
  401532:	push   r14
  401534:	push   r13
  401536:	push   r12
  401538:	push   rbp
  401539:	push   rdi
  40153a:	push   rsi
  40153b:	push   rbx
  40153c:	sub    rsp,0x478
  401543:	xor    r8d,r8d
  401546:	mov    r9d,0x2
  40154c:	movsx  eax,cx
  40154f:	mov    QWORD PTR [rsp+0x30],0x0
  401558:	mov    DWORD PTR [rsp+0x28],0x4
  401560:	mov    ecx,eax
  401562:	mov    DWORD PTR [rsp+0x48],eax
  401566:	lea    rax,[rsp+0x58]
  40156b:	mov    r13,rdx
  40156e:	mov    DWORD PTR [rsp+0x58],0x0
  401576:	mov    QWORD PTR [rsp+0x20],rax
  40157b:	call   0x402700
  401580:	test   ax,ax
  401583:	jne    0x4016f0
  401589:	mov    eax,DWORD PTR [rsp+0x58]
  40158d:	xor    ebp,ebp
  40158f:	test   eax,eax
  401591:	jle    0x4016d0
  401597:	mov    ebx,0x1
  40159c:	lea    rsi,[rsp+0x70]
  4015a1:	lea    r12,[rsp+0x60]
  4015a6:	lea    r15,[rsp+0x56]
  4015ab:	lea    r14,[rsp+0x5c]
  4015b0:	jmp    0x401605
  4015b2:	test   r9d,r9d
  4015b5:	je     0x4016a0
  4015bb:	mov    rdi,QWORD PTR [rip+0xa52e]        # 0x40baf0
  4015c2:	mov    DWORD PTR [rsp+0x4c],r9d
  4015c7:	call   QWORD PTR [rip+0xaef3]        # 0x40c4c0
  4015cd:	mov    r9d,DWORD PTR [rsp+0x4c]
  4015d2:	lea    rcx,[rax+0x60]
  4015d6:	lea    rdx,[rip+0x5a47]        # 0x407024
  4015dd:	mov    QWORD PTR [rsp+0x28],rsi
  4015e2:	mov    QWORD PTR [rsp+0x20],r12
  4015e7:	mov    r8,rdi
  4015ea:	call   0x404f38
  4015ef:	mov    eax,DWORD PTR [rsp+0x5c]
  4015f3:	cmp    ebp,eax
  4015f5:	cmovl  ebp,eax
  4015f8:	add    ebx,0x1
  4015fb:	cmp    DWORD PTR [rsp+0x58],ebx
  4015ff:	jl     0x4016d0
  401605:	xor    eax,eax
  401607:	mov    rdi,rsi
  40160a:	mov    ecx,0x80
  40160f:	rep stos QWORD PTR es:[rdi],rax
  401612:	mov    ecx,DWORD PTR [rsp+0x48]
  401616:	mov    r9,r12
  401619:	mov    QWORD PTR [rsp+0x38],r15
  40161e:	mov    DWORD PTR [rsp+0x30],0x400
  401626:	mov    QWORD PTR [rsp+0x28],rsi
  40162b:	movsx  r8d,bx
  40162f:	mov    QWORD PTR [rsp+0x20],r14
  401634:	mov    rdx,r13
  401637:	call   0x4026f8
  40163c:	test   ax,ax
  40163f:	mov    r9d,DWORD PTR [rsp+0x5c]
  401644:	je     0x4015b2
  40164a:	mov    rdi,QWORD PTR [rip+0xa49f]        # 0x40baf0
  401651:	mov    DWORD PTR [rsp+0x4c],r9d
  401656:	call   QWORD PTR [rip+0xae64]        # 0x40c4c0
  40165c:	mov    r9d,DWORD PTR [rsp+0x4c]
  401661:	lea    rcx,[rax+0x60]
  401665:	lea    rdx,[rip+0x59b8]        # 0x407024
  40166c:	mov    r8,rdi
  40166f:	mov    QWORD PTR [rsp+0x28],rsi
  401674:	mov    QWORD PTR [rsp+0x20],r12
  401679:	call   0x404f38
  40167e:	lea    rdx,[rip+0x597b]        # 0x407000
  401685:	lea    rcx,[rip+0x597f]        # 0x40700b
  40168c:	mov    r8d,0x9b
  401692:	call   0x404d00
  401697:	jmp    0x4015ef
  40169c:	nop    DWORD PTR [rax+0x0]
  4016a0:	call   QWORD PTR [rip+0xae1a]        # 0x40c4c0
  4016a6:	lea    rdx,[rip+0x5971]        # 0x40701e
  4016ad:	lea    rcx,[rax+0x30]
  4016b1:	mov    r8,rsi
  4016b4:	add    ebx,0x1
  4016b7:	call   0x404f38
  4016bc:	cmp    DWORD PTR [rsp+0x58],ebx
  4016c0:	jge    0x401605
  4016c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016d0:	mov    eax,ebp
  4016d2:	add    rsp,0x478
  4016d9:	pop    rbx
  4016da:	pop    rsi
  4016db:	pop    rdi
  4016dc:	pop    rbp
  4016dd:	pop    r12
  4016df:	pop    r13
  4016e1:	pop    r14
  4016e3:	pop    r15
  4016e5:	ret    
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	lea    rdx,[rip+0x5909]        # 0x407000
  4016f7:	lea    rcx,[rip+0x590d]        # 0x40700b
  4016fe:	mov    r8d,0x8f
  401704:	call   0x404d00
  401709:	jmp    0x401589
  40170e:	xchg   ax,ax
  401710:	push   r14
  401712:	push   r13
  401714:	push   r12
  401716:	push   rbp
  401717:	push   rdi
  401718:	push   rsi
  401719:	push   rbx
  40171a:	sub    rsp,0x40
  40171e:	mov    rsi,QWORD PTR [rsp+0xa0]
  401726:	test   r9,r9
  401729:	mov    edi,ecx
  40172b:	mov    rbp,rdx
  40172e:	mov    ebx,r8d
  401731:	mov    r12,r9
  401734:	je     0x4017d0
  40173a:	test   rsi,rsi
  40173d:	je     0x4017d0
  401743:	lea    r10d,[rbx+0x2]
  401747:	cmp    r10w,0x4
  40174c:	ja     0x4017f8
  401752:	lea    r11,[rip+0x599b]        # 0x4070f4
  401759:	movzx  r10d,r10w
  40175d:	movsxd rax,DWORD PTR [r11+r10*4]
  401761:	add    r11,rax
  401764:	jmp    r11
  401767:	nop    WORD PTR [rax+rax*1+0x0]
  401770:	lea    r13,[rip+0x58e3]        # 0x40705a
  401777:	mov    r14,QWORD PTR [rip+0xa372]        # 0x40baf0
  40177e:	call   QWORD PTR [rip+0xad3c]        # 0x40c4c0
  401784:	lea    rdx,[rip+0x594d]        # 0x4070d8
  40178b:	lea    rcx,[rax+0x60]
  40178f:	mov    QWORD PTR [rsp+0x30],rsi
  401794:	mov    QWORD PTR [rsp+0x28],r13
  401799:	mov    QWORD PTR [rsp+0x20],r12
  40179e:	movsx  r9d,bx
  4017a2:	mov    r8,r14
  4017a5:	call   0x404f38
  4017aa:	movsx  ecx,di
  4017ad:	mov    rdx,rbp
  4017b0:	call   0x401530
  4017b5:	mov    eax,ebx
  4017b7:	add    rsp,0x40
  4017bb:	pop    rbx
  4017bc:	pop    rsi
  4017bd:	pop    rdi
  4017be:	pop    rbp
  4017bf:	pop    r12
  4017c1:	pop    r13
  4017c3:	pop    r14
  4017c5:	ret    
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	lea    rdx,[rip+0x5829]        # 0x407000
  4017d7:	lea    rcx,[rip+0x5890]        # 0x40706e
  4017de:	mov    r8d,0xb7
  4017e4:	call   0x404d00
  4017e9:	lea    r10d,[rbx+0x2]
  4017ed:	cmp    r10w,0x4
  4017f2:	jbe    0x401752
  4017f8:	mov    rsi,QWORD PTR [rip+0xa2f1]        # 0x40baf0
  4017ff:	call   QWORD PTR [rip+0xacbb]        # 0x40c4c0
  401805:	lea    rdx,[rip+0x589c]        # 0x4070a8
  40180c:	lea    rcx,[rax+0x60]
  401810:	mov    QWORD PTR [rsp+0x20],r12
  401815:	movsx  r9d,bx
  401819:	mov    r8,rsi
  40181c:	call   0x404f38
  401821:	mov    ecx,0x1
  401826:	call   0x404f60
  40182b:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	lea    r13,[rip+0x5803]        # 0x40703a
  401837:	jmp    0x401777
  40183c:	nop    DWORD PTR [rax+0x0]
  401840:	mov    rbx,QWORD PTR [rip+0xa2a9]        # 0x40baf0
  401847:	call   QWORD PTR [rip+0xac73]        # 0x40c4c0
  40184d:	lea    rdx,[rip+0x582c]        # 0x407080
  401854:	lea    rcx,[rax+0x60]
  401858:	mov    QWORD PTR [rsp+0x28],rsi
  40185d:	mov    QWORD PTR [rsp+0x20],r12
  401862:	mov    r9d,0xfffffffe
  401868:	mov    r8,rbx
  40186b:	call   0x404f38
  401870:	mov    ecx,0x1
  401875:	call   0x404f60
  40187a:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	lea    r13,[rip+0x57c9]        # 0x407050
  401887:	jmp    0x401777
  40188c:	nop    DWORD PTR [rax+0x0]
  401890:	push   rbp
  401891:	push   rdi
  401892:	push   rsi
  401893:	push   rbx
  401894:	sub    rsp,0x28
  401898:	test   r8d,r8d
  40189b:	mov    rdi,rcx
  40189e:	mov    rbp,rdx
  4018a1:	jle    0x4018cf
  4018a3:	lea    eax,[r8-0x1]
  4018a7:	xor    ebx,ebx
  4018a9:	lea    rsi,[rax+rax*2+0x3]
  4018ae:	shl    rsi,0x3
  4018b2:	mov    rcx,QWORD PTR [rdi+rbx*2+0x8]
  4018b7:	call   0x404f28
  4018bc:	mov    rcx,QWORD PTR [rbp+rbx*1+0x0]
  4018c1:	add    rbx,0x18
  4018c5:	call   0x404f28
  4018ca:	cmp    rbx,rsi
  4018cd:	jne    0x4018b2
  4018cf:	mov    rcx,rdi
  4018d2:	call   0x404f28
  4018d7:	mov    rcx,rbp
  4018da:	add    rsp,0x28
  4018de:	pop    rbx
  4018df:	pop    rsi
  4018e0:	pop    rdi
  4018e1:	pop    rbp
  4018e2:	jmp    0x404f28
  4018e7:	nop    WORD PTR [rax+rax*1+0x0]
  4018f0:	push   r15
  4018f2:	push   r14
  4018f4:	push   r13
  4018f6:	push   r12
  4018f8:	push   rbp
  4018f9:	push   rdi
  4018fa:	push   rsi
  4018fb:	push   rbx
  4018fc:	sub    rsp,0x2e8
  401903:	xor    r8d,r8d
  401906:	lea    rax,[rsp+0xcc]
  40190e:	mov    WORD PTR [rsp+0xcc],r8w
  401917:	mov    r15,rcx
  40191a:	xor    r8d,r8d
  40191d:	mov    QWORD PTR [rsp+0xa0],0x0
  401929:	mov    QWORD PTR [rsp+0x98],0x0
  401935:	mov    QWORD PTR [rsp+0xa8],rax
  40193d:	lea    rax,[rsp+0xe0]
  401945:	mov    QWORD PTR [rsp+0x58],rax
  40194a:	lea    rax,[rsp+0xd2]
  401952:	mov    QWORD PTR [rsp+0x78],rax
  401957:	lea    rax,[rsp+0xd0]
  40195f:	mov    QWORD PTR [rsp+0x80],rax
  401967:	mov    rax,QWORD PTR [rip+0xab52]        # 0x40c4c0
  40196e:	mov    QWORD PTR [rsp+0xb8],rax
  401976:	mov    rdx,QWORD PTR [rsp+0xa0]
  40197e:	mov    rcx,QWORD PTR [rsp+0x98]
  401986:	call   0x401890
  40198b:	mov    rdx,QWORD PTR [rsp+0xa8]
  401993:	xor    ecx,ecx
  401995:	mov    WORD PTR [rsp+0xcc],cx
  40199d:	mov    rcx,r15
  4019a0:	call   0x4026e0
  4019a5:	test   ax,ax
  4019a8:	jne    0x40243c
  4019ae:	movsx  rbx,WORD PTR [rsp+0xcc]
  4019b7:	mov    edx,0x30
  4019bc:	mov    rcx,rbx
  4019bf:	call   0x404f68
  4019c4:	test   rax,rax
  4019c7:	mov    QWORD PTR [rsp+0x98],rax
  4019cf:	je     0x402297
  4019d5:	mov    edx,0x18
  4019da:	mov    rcx,rbx
  4019dd:	call   0x404f68
  4019e2:	test   rax,rax
  4019e5:	mov    QWORD PTR [rsp+0xa0],rax
  4019ed:	je     0x4022be
  4019f3:	mov    r9,QWORD PTR [rip+0xa0de]        # 0x40bad8
  4019fa:	lea    rcx,[rip+0x5890]        # 0x407291
  401a01:	mov    r8d,0x9
  401a07:	mov    edx,0x1
  401a0c:	lea    r12,[rip+0xa0ad]        # 0x40bac0
  401a13:	call   0x404f10
  401a18:	lea    rax,[rip+0x58b2]        # 0x4072d1
  401a1f:	mov    rcx,QWORD PTR [rip+0xa0b2]        # 0x40bad8
  401a26:	lea    r9,[rip+0x586e]        # 0x40729b
  401a2d:	lea    r8,[rip+0x586c]        # 0x4072a0
  401a34:	lea    rdx,[rip+0x586d]        # 0x4072a8
  401a3b:	mov    QWORD PTR [rsp+0x38],rax
  401a40:	lea    rax,[rip+0x5891]        # 0x4072d8
  401a47:	mov    QWORD PTR [rsp+0x30],rax
  401a4c:	lea    rax,[rip+0x588a]        # 0x4072dd
  401a53:	mov    QWORD PTR [rsp+0x28],rax
  401a58:	lea    rax,[rip+0x5888]        # 0x4072e7
  401a5f:	mov    QWORD PTR [rsp+0x20],rax
  401a64:	call   0x404f38
  401a69:	lea    rax,[rip+0x6010]        # 0x407a80
  401a70:	mov    rcx,QWORD PTR [rip+0xa061]        # 0x40bad8
  401a77:	lea    rdx,[rip+0x587a]        # 0x4072f8
  401a7e:	mov    QWORD PTR [rsp+0x38],rax
  401a83:	mov    QWORD PTR [rsp+0x30],rax
  401a88:	mov    r9,rax
  401a8b:	mov    QWORD PTR [rsp+0x28],rax
  401a90:	mov    QWORD PTR [rsp+0x20],rax
  401a95:	mov    r8,rax
  401a98:	call   0x404f38
  401a9d:	movzx  eax,WORD PTR [rsp+0xcc]
  401aa5:	test   ax,ax
  401aa8:	jle    0x401d55
  401aae:	mov    rax,QWORD PTR [rsp+0xa0]
  401ab6:	mov    r14d,0x1
  401abc:	lea    rbx,[rax+0x8]
  401ac0:	mov    rax,QWORD PTR [rsp+0x98]
  401ac8:	add    rax,0x8
  401acc:	mov    QWORD PTR [rsp+0xb0],rax
  401ad4:	mov    r13,rax
  401ad7:	lea    rax,[rsp+0xce]
  401adf:	mov    QWORD PTR [rsp+0x70],rax
  401ae4:	lea    rax,[rsp+0xd8]
  401aec:	mov    QWORD PTR [rsp+0x88],rax
  401af4:	lea    rax,[rsp+0xd4]
  401afc:	mov    QWORD PTR [rsp+0x90],rax
  401b04:	mov    rax,QWORD PTR [rsp+0x78]
  401b09:	lea    rsi,[r13+0x18]
  401b0d:	mov    r8,QWORD PTR [rsp+0x58]
  401b12:	movzx  ebp,r14w
  401b16:	mov    r9d,0x200
  401b1c:	mov    rcx,r15
  401b1f:	mov    QWORD PTR [rsp+0x30],rsi
  401b24:	mov    edx,ebp
  401b26:	mov    QWORD PTR [rsp+0x40],rax
  401b2b:	mov    rax,QWORD PTR [rsp+0x80]
  401b33:	mov    QWORD PTR [rsp+0x38],rax
  401b38:	lea    rax,[r13+0x10]
  401b3c:	mov    QWORD PTR [rsp+0x28],rax
  401b41:	mov    rax,QWORD PTR [rsp+0x70]
  401b46:	mov    QWORD PTR [rsp+0x20],rax
  401b4b:	call   0x402730
  401b50:	test   ax,ax
  401b53:	jne    0x4023c4
  401b59:	movsx  rax,WORD PTR [rsp+0xce]
  401b62:	cmp    ax,0x1ff
  401b66:	ja     0x401fe2
  401b6c:	mov    BYTE PTR [rsp+rax*1+0xe0],0x0
  401b74:	mov    rcx,QWORD PTR [rsp+0x58]
  401b79:	call   QWORD PTR [rip+0xa9b1]        # 0x40c530
  401b7f:	mov    QWORD PTR [r13-0x8],rax
  401b83:	movsx  rax,WORD PTR [rsp+0xd0]
  401b8c:	mov    rdx,QWORD PTR [r13+0x18]
  401b90:	test   ax,ax
  401b93:	js     0x401b9a
  401b95:	cmp    rax,rdx
  401b98:	ja     0x401b9d
  401b9a:	mov    rax,rdx
  401b9d:	movsx  r8d,WORD PTR [r13+0x10]
  401ba2:	mov    QWORD PTR [r13+0x20],rax
  401ba6:	lea    eax,[r8+0x1]
  401baa:	test   ax,0xfffd
  401bae:	lea    eax,[r8+0xa]
  401bb2:	sete   cl
  401bb5:	cmp    ax,0x2
  401bb9:	setbe  al
  401bbc:	or     cl,al
  401bbe:	jne    0x401f54
  401bc4:	cmp    r8w,0xc
  401bc9:	je     0x401f54
  401bcf:	lea    eax,[r8+0xb]
  401bd3:	mov    esi,edx
  401bd5:	cmp    ax,0x68
  401bd9:	ja     0x401f30
  401bdf:	lea    rdx,[rip+0x589a]        # 0x407480
  401be6:	movzx  eax,ax
  401be9:	movsxd rax,DWORD PTR [rdx+rax*4]
  401bed:	add    rdx,rax
  401bf0:	jmp    rdx
  401bf2:	lea    rax,[rip+0x550f]        # 0x407108
  401bf9:	nop    DWORD PTR [rax+0x0]
  401c00:	mov    r9,QWORD PTR [r13-0x8]
  401c04:	mov    rcx,QWORD PTR [r12+0x18]
  401c09:	lea    rdx,[rip+0x5768]        # 0x407378
  401c10:	mov    DWORD PTR [rsp+0x20],r8d
  401c15:	mov    DWORD PTR [rsp+0x38],0xffffffff
  401c1d:	mov    r8d,r14d
  401c20:	mov    DWORD PTR [rsp+0x30],esi
  401c24:	mov    QWORD PTR [rsp+0x28],rax
  401c29:	mov    DWORD PTR [rsp+0x64],r14d
  401c2e:	call   0x404f38
  401c33:	movsx  eax,WORD PTR [rsp+0xcc]
  401c3b:	cmp    r14d,eax
  401c3e:	jl     0x401fd2
  401c44:	mov    rsi,QWORD PTR [r12+0xb8]
  401c4c:	lea    rdx,[rip+0x55e4]        # 0x407237
  401c53:	lea    rdi,[rip+0x5f31]        # 0x407b8b
  401c5a:	mov    ecx,0x3
  401c5f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401c61:	jne    0x402010
  401c67:	movzx  eax,WORD PTR [r13+0x10]
  401c6c:	lea    ecx,[rax+0x1]
  401c6f:	test   cx,0xfffd
  401c74:	lea    ecx,[rax+0xa]
  401c77:	sete   r8b
  401c7b:	cmp    cx,0x2
  401c7f:	setbe  cl
  401c82:	or     r8b,cl
  401c85:	jne    0x402090
  401c8b:	cmp    ax,0xc
  401c8f:	lea    rsi,[rip+0x55a3]        # 0x407239
  401c96:	je     0x402090
  401c9c:	mov    rdi,QWORD PTR [r13+0x20]
  401ca0:	mov    rcx,QWORD PTR [r13-0x8]
  401ca4:	mov    QWORD PTR [rsp+0x68],rdx
  401ca9:	call   0x404e80
  401cae:	mov    rdx,QWORD PTR [rsp+0x68]
  401cb3:	mov    ecx,edi
  401cb5:	mov    r8d,edi
  401cb8:	cmp    rcx,rax
  401cbb:	mov    rcx,r13
  401cbe:	cmovb  r8d,eax
  401cc2:	mov    QWORD PTR [rsp+0x20],rdx
  401cc7:	mov    r9d,r8d
  401cca:	mov    rdx,rsi
  401ccd:	call   0x404dc0
  401cd2:	test   eax,eax
  401cd4:	jle    0x40202a
  401cda:	mov    rsi,QWORD PTR [r13+0x20]
  401cde:	cmp    QWORD PTR [r13+0x18],rsi
  401ce2:	mov    ecx,0x1
  401ce7:	cmovae rsi,QWORD PTR [r13+0x18]
  401cec:	mov    rdx,rsi
  401cef:	call   0x404f68
  401cf4:	test   rax,rax
  401cf7:	mov    QWORD PTR [rbx-0x8],rax
  401cfb:	mov    r9,rax
  401cfe:	je     0x4020a0
  401d04:	mov    QWORD PTR [rsp+0x28],rbx
  401d09:	mov    QWORD PTR [rsp+0x20],rsi
  401d0e:	mov    r8d,0x1
  401d14:	mov    edx,ebp
  401d16:	mov    rcx,r15
  401d19:	call   0x402740
  401d1e:	test   ax,ax
  401d21:	jne    0x4023dc
  401d27:	movsx  edx,WORD PTR [rsp+0xcc]
  401d2f:	add    r14d,0x1
  401d33:	add    rbx,0x18
  401d37:	add    r13,0x30
  401d3b:	cmp    edx,DWORD PTR [rsp+0x64]
  401d3f:	mov    eax,edx
  401d41:	jg     0x401b04
  401d47:	mov    edx,DWORD PTR [rip+0x9d77]        # 0x40bac4
  401d4d:	test   edx,edx
  401d4f:	je     0x402180
  401d55:	mov    rbp,QWORD PTR [rsp+0x98]
  401d5d:	mov    rdi,QWORD PTR [rsp+0xa0]
  401d65:	test   ax,ax
  401d68:	jle    0x402216
  401d6e:	mov    rcx,r15
  401d71:	call   0x402718
  401d76:	cmp    ax,0x64
  401d7a:	je     0x4021fe
  401d80:	test   ax,ax
  401d83:	je     0x4020dd
  401d89:	cmp    ax,0x1
  401d8d:	je     0x4020d0
  401d93:	lea    rbx,[rip+0x54e2]        # 0x40727c
  401d9a:	lea    r9,[rip+0x5646]        # 0x4073e7
  401da1:	mov    QWORD PTR [rsp+0x20],rbx
  401da6:	movsx  r8d,ax
  401daa:	mov    ecx,0x3
  401daf:	mov    rdx,r15
  401db2:	call   0x401710
  401db7:	mov    ecx,0x1
  401dbc:	call   0x404f60
  401dc1:	lea    rax,[rip+0x540c]        # 0x4071d4
  401dc8:	jmp    0x401c00
  401dcd:	nop    DWORD PTR [rax]
  401dd0:	lea    rax,[rip+0x540d]        # 0x4071e4
  401dd7:	jmp    0x401c00
  401ddc:	nop    DWORD PTR [rax+0x0]
  401de0:	lea    rax,[rip+0x5408]        # 0x4071ef
  401de7:	jmp    0x401c00
  401dec:	nop    DWORD PTR [rax+0x0]
  401df0:	lea    rax,[rip+0x5406]        # 0x4071fd
  401df7:	jmp    0x401c00
  401dfc:	nop    DWORD PTR [rax+0x0]
  401e00:	lea    rax,[rip+0x5408]        # 0x40720f
  401e07:	jmp    0x401c00
  401e0c:	nop    DWORD PTR [rax+0x0]
  401e10:	lea    rax,[rip+0x5403]        # 0x40721a
  401e17:	jmp    0x401c00
  401e1c:	nop    DWORD PTR [rax+0x0]
  401e20:	lea    rax,[rip+0x53ff]        # 0x407226
  401e27:	jmp    0x401c00
  401e2c:	nop    DWORD PTR [rax+0x0]
  401e30:	lea    rax,[rip+0x53f7]        # 0x40722e
  401e37:	jmp    0x401c00
  401e3c:	nop    DWORD PTR [rax+0x0]
  401e40:	lea    rax,[rip+0x535f]        # 0x4071a6
  401e47:	jmp    0x401c00
  401e4c:	nop    DWORD PTR [rax+0x0]
  401e50:	lea    rax,[rip+0x5341]        # 0x407198
  401e57:	jmp    0x401c00
  401e5c:	nop    DWORD PTR [rax+0x0]
  401e60:	lea    rax,[rip+0x5323]        # 0x40718a
  401e67:	jmp    0x401c00
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	lea    rax,[rip+0x5307]        # 0x40717e
  401e77:	jmp    0x401c00
  401e7c:	nop    DWORD PTR [rax+0x0]
  401e80:	lea    rax,[rip+0x533f]        # 0x4071c6
  401e87:	jmp    0x401c00
  401e8c:	nop    DWORD PTR [rax+0x0]
  401e90:	lea    rax,[rip+0x5322]        # 0x4071b9
  401e97:	jmp    0x401c00
  401e9c:	nop    DWORD PTR [rax+0x0]
  401ea0:	lea    rax,[rip+0x52ca]        # 0x407171
  401ea7:	jmp    0x401c00
  401eac:	nop    DWORD PTR [rax+0x0]
  401eb0:	lea    rax,[rip+0x52af]        # 0x407166
  401eb7:	jmp    0x401c00
  401ebc:	nop    DWORD PTR [rax+0x0]
  401ec0:	lea    rax,[rip+0x5296]        # 0x40715d
  401ec7:	jmp    0x401c00
  401ecc:	nop    DWORD PTR [rax+0x0]
  401ed0:	lea    rax,[rip+0x527c]        # 0x407153
  401ed7:	jmp    0x401c00
  401edc:	nop    DWORD PTR [rax+0x0]
  401ee0:	lea    rax,[rip+0x525f]        # 0x407146
  401ee7:	jmp    0x401c00
  401eec:	nop    DWORD PTR [rax+0x0]
  401ef0:	lea    rax,[rip+0x5243]        # 0x40713a
  401ef7:	jmp    0x401c00
  401efc:	nop    DWORD PTR [rax+0x0]
  401f00:	lea    rax,[rip+0x5227]        # 0x40712e
  401f07:	jmp    0x401c00
  401f0c:	nop    DWORD PTR [rax+0x0]
  401f10:	lea    rax,[rip+0x520b]        # 0x407122
  401f17:	jmp    0x401c00
  401f1c:	nop    DWORD PTR [rax+0x0]
  401f20:	lea    rax,[rip+0x51f2]        # 0x407119
  401f27:	jmp    0x401c00
  401f2c:	nop    DWORD PTR [rax+0x0]
  401f30:	lea    rdx,[rip+0x542f]        # 0x407366
  401f37:	lea    rcx,[rip+0x9142]        # 0x40b080
  401f3e:	call   0x404ea8
  401f43:	movsx  r8d,WORD PTR [r13+0x10]
  401f48:	lea    rax,[rip+0x9131]        # 0x40b080
  401f4f:	jmp    0x401c00
  401f54:	mov    r8,QWORD PTR [rsp+0x88]
  401f5c:	mov    DWORD PTR [r13+0x14],edx
  401f60:	mov    r9d,0x8
  401f66:	mov    QWORD PTR [rsp+0x20],0x0
  401f6f:	mov    edx,0x271c
  401f74:	mov    rcx,r15
  401f77:	call   0x4026f0
  401f7c:	test   ax,ax
  401f7f:	jne    0x4023f4
  401f85:	mov    rax,QWORD PTR [rsp+0x90]
  401f8d:	mov    rcx,QWORD PTR [rsp+0xd8]
  401f95:	mov    r9,rsi
  401f98:	mov    DWORD PTR [rsp+0x20],0x8
  401fa0:	mov    r8d,0x3f5
  401fa6:	mov    edx,ebp
  401fa8:	mov    QWORD PTR [rsp+0x28],rax
  401fad:	call   0x402708
  401fb2:	test   ax,ax
  401fb5:	jne    0x40240c
  401fbb:	mov    rax,QWORD PTR [r13+0x18]
  401fbf:	movsx  r8d,WORD PTR [r13+0x10]
  401fc4:	lea    rdx,[rax+rax*1+0x1]
  401fc9:	mov    QWORD PTR [r13+0x18],rdx
  401fcd:	jmp    0x401bcf
  401fd2:	mov    rdx,QWORD PTR [r12+0xb8]
  401fda:	mov    rsi,rdx
  401fdd:	jmp    0x401c53
  401fe2:	lea    rdx,[rip+0x5017]        # 0x407000
  401fe9:	lea    rcx,[rip+0x5340]        # 0x407330
  401ff0:	mov    r8d,0x221
  401ff6:	call   0x404d00
  401ffb:	movsx  rax,WORD PTR [rsp+0xce]
  402004:	jmp    0x401b6c
  402009:	nop    DWORD PTR [rax+0x0]
  402010:	mov    r8,rdx
  402013:	lea    rdx,[rip+0x5382]        # 0x40739c
  40201a:	mov    rcx,r13
  40201d:	call   0x404dc0
  402022:	test   eax,eax
  402024:	jg     0x401cda
  40202a:	mov    rbx,QWORD PTR [rip+0x9abf]        # 0x40baf0
  402031:	call   QWORD PTR [rip+0xa489]        # 0x40c4c0
  402037:	lea    rdx,[rip+0x536a]        # 0x4073a8
  40203e:	lea    rcx,[rax+0x60]
  402042:	mov    DWORD PTR [rsp+0x20],r14d
  402047:	mov    r8,rbx
  40204a:	mov    r9d,0x24d
  402050:	call   0x404f38
  402055:	movsx  r8d,WORD PTR [rsp+0xcc]
  40205e:	mov    rdx,QWORD PTR [rsp+0xa0]
  402066:	mov    rcx,QWORD PTR [rsp+0x98]
  40206e:	call   0x401890
  402073:	nop
  402074:	add    rsp,0x2e8
  40207b:	pop    rbx
  40207c:	pop    rsi
  40207d:	pop    rdi
  40207e:	pop    rbp
  40207f:	pop    r12
  402081:	pop    r13
  402083:	pop    r14
  402085:	pop    r15
  402087:	ret    
  402088:	nop    DWORD PTR [rax+rax*1+0x0]
  402090:	lea    rsi,[rip+0x51ad]        # 0x407244
  402097:	jmp    0x401c9c
  40209c:	nop    DWORD PTR [rax+0x0]
  4020a0:	lea    rdx,[rip+0x4f59]        # 0x407000
  4020a7:	lea    rcx,[rip+0x531f]        # 0x4073cd
  4020ae:	mov    r8d,0x25e
  4020b4:	call   0x404d00
  4020b9:	mov    rsi,QWORD PTR [r13+0x20]
  4020bd:	cmp    QWORD PTR [r13+0x18],rsi
  4020c1:	mov    r9,QWORD PTR [rbx-0x8]
  4020c5:	cmovae rsi,QWORD PTR [r13+0x18]
  4020ca:	jmp    0x401d04
  4020cf:	nop
  4020d0:	mov    rdx,r15
  4020d3:	mov    ecx,0x3
  4020d8:	call   0x401530
  4020dd:	movzx  eax,WORD PTR [rsp+0xcc]
  4020e5:	xor    ebx,ebx
  4020e7:	xor    esi,esi
  4020e9:	test   ax,ax
  4020ec:	jg     0x402130
  4020ee:	jmp    0x401d65
  4020f3:	cmp    rax,0xffffffffffffffff
  4020f7:	jne    0x402160
  4020f9:	mov    r12,QWORD PTR [rbp+rbx*2+0x8]
  4020fe:	call   QWORD PTR [rip+0xa3bc]        # 0x40c4c0
  402104:	lea    r8,[rip+0x52e5]        # 0x4073f0
  40210b:	lea    rcx,[rax+0x30]
  40210f:	mov    rdx,r12
  402112:	call   0x404f38
  402117:	movsx  edx,WORD PTR [rsp+0xcc]
  40211f:	add    esi,0x1
  402122:	add    rbx,0x18
  402126:	cmp    edx,esi
  402128:	mov    eax,edx
  40212a:	jle    0x401d65
  402130:	mov    rax,QWORD PTR [rdi+rbx*1+0x8]
  402135:	cmp    rax,0xfffffffffffffffc
  402139:	jne    0x4020f3
  40213b:	mov    r13,QWORD PTR [rdi+rbx*1]
  40213f:	mov    r12,QWORD PTR [rbp+rbx*2+0x8]
  402144:	call   QWORD PTR [rip+0xa376]        # 0x40c4c0
  40214a:	lea    rcx,[rax+0x30]
  40214e:	mov    r8,r13
  402151:	mov    rdx,r12
  402154:	call   0x404f38
  402159:	jmp    0x402117
  40215b:	nop    DWORD PTR [rax+rax*1+0x0]
  402160:	test   rax,rax
  402163:	jns    0x40213b
  402165:	lea    rdx,[rip+0x4e94]        # 0x407000
  40216c:	lea    rcx,[rip+0x5282]        # 0x4073f5
  402173:	mov    r8d,0x286
  402179:	call   0x404d00
  40217e:	jmp    0x40213b
  402180:	test   ax,ax
  402183:	jle    0x401d55
  402189:	mov    rbx,QWORD PTR [rsp+0x98]
  402191:	xor    esi,esi
  402193:	mov    rdx,QWORD PTR [rbx+0x8]
  402197:	mov    r8,QWORD PTR [rbx]
  40219a:	add    esi,0x1
  40219d:	mov    rcx,QWORD PTR [r12+0x10]
  4021a2:	add    rbx,0x30
  4021a6:	call   0x404f38
  4021ab:	movsx  edx,WORD PTR [rsp+0xcc]
  4021b3:	cmp    edx,esi
  4021b5:	mov    eax,edx
  4021b7:	jg     0x402193
  4021b9:	test   dx,dx
  4021bc:	jle    0x401d55
  4021c2:	mov    rbx,QWORD PTR [rsp+0xb0]
  4021ca:	xor    esi,esi
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    rdx,QWORD PTR [rbx]
  4021d3:	mov    rcx,QWORD PTR [r12+0x10]
  4021d8:	lea    r8,[rip+0x58a1]        # 0x407a80
  4021df:	add    esi,0x1
  4021e2:	add    rbx,0x30
  4021e6:	call   0x404f38
  4021eb:	movsx  edx,WORD PTR [rsp+0xcc]
  4021f3:	cmp    edx,esi
  4021f5:	mov    eax,edx
  4021f7:	jg     0x4021d0
  4021f9:	jmp    0x401d55
  4021fe:	cmp    WORD PTR [rsp+0xcc],0x0
  402207:	jle    0x402216
  402209:	mov    rdx,r15
  40220c:	mov    ecx,0x3
  402211:	call   0x401530
  402216:	mov    rcx,r15
  402219:	call   0x4026e8
  40221e:	movsx  esi,ax
  402221:	cmp    si,0x0
  402225:	mov    ebx,esi
  402227:	je     0x402325
  40222d:	jle    0x4022dc
  402233:	cmp    si,0x2
  402237:	je     0x402380
  40223d:	jl     0x40234d
  402243:	cmp    si,0x64
  402247:	jne    0x40238c
  40224d:	mov    rcx,QWORD PTR [rip+0x9884]        # 0x40bad8
  402254:	lea    r8,[rip+0x5218]        # 0x407473
  40225b:	lea    rdx,[rip+0x51da]        # 0x40743c
  402262:	call   0x404f38
  402267:	mov    rdx,r15
  40226a:	mov    ecx,0x3
  40226f:	call   0x401530
  402274:	movsx  r8d,WORD PTR [rsp+0xcc]
  40227d:	mov    rdx,QWORD PTR [rsp+0xa0]
  402285:	mov    rcx,QWORD PTR [rsp+0x98]
  40228d:	call   0x401890
  402292:	jmp    0x402074
  402297:	lea    rdx,[rip+0x4d62]        # 0x407000
  40229e:	lea    rcx,[rip+0x4fde]        # 0x407283
  4022a5:	mov    r8d,0x206
  4022ab:	call   0x404d00
  4022b0:	movsx  rbx,WORD PTR [rsp+0xcc]
  4022b9:	jmp    0x4019d5
  4022be:	lea    rdx,[rip+0x4d3b]        # 0x407000
  4022c5:	lea    rcx,[rip+0x4fc0]        # 0x40728c
  4022cc:	mov    r8d,0x209
  4022d2:	call   0x404d00
  4022d7:	jmp    0x4019f3
  4022dc:	cmp    si,0xfffe
  4022e0:	je     0x4023b8
  4022e6:	cmp    si,0xffff
  4022ea:	jne    0x40238c
  4022f0:	lea    r8,[rip+0x4d59]        # 0x407050
  4022f7:	mov    rcx,QWORD PTR [rip+0x97da]        # 0x40bad8
  4022fe:	lea    rdx,[rip+0x5137]        # 0x40743c
  402305:	call   0x404f38
  40230a:	lea    rax,[rip+0x4f6b]        # 0x40727c
  402311:	lea    r9,[rip+0x5140]        # 0x407458
  402318:	mov    r8d,esi
  40231b:	mov    QWORD PTR [rsp+0x20],rax
  402320:	jmp    0x401daa
  402325:	mov    rcx,QWORD PTR [rip+0x97ac]        # 0x40bad8
  40232c:	lea    r8,[rip+0x5134]        # 0x407467
  402333:	lea    rdx,[rip+0x5102]        # 0x40743c
  40233a:	call   0x404f38
  40233f:	movsx  r8d,WORD PTR [rsp+0xcc]
  402348:	jmp    0x401976
  40234d:	lea    r8,[rip+0x4ce6]        # 0x40703a
  402354:	mov    rcx,QWORD PTR [rip+0x977d]        # 0x40bad8
  40235b:	lea    rdx,[rip+0x50da]        # 0x40743c
  402362:	call   0x404f38
  402367:	cmp    bx,0x1
  40236b:	jne    0x402424
  402371:	mov    rdx,r15
  402374:	mov    ecx,0x3
  402379:	call   0x401530
  40237e:	jmp    0x40233f
  402380:	lea    r8,[rip+0x4cd3]        # 0x40705a
  402387:	jmp    0x4022f7
  40238c:	mov    rax,QWORD PTR [rsp+0xb8]
  402394:	call   rax
  402396:	lea    rdx,[rip+0x506b]        # 0x407408
  40239d:	lea    rcx,[rax+0x60]
  4023a1:	mov    r8d,0xae
  4023a7:	mov    r9d,esi
  4023aa:	call   0x404f38
  4023af:	lea    r8,[rip+0x4e9a]        # 0x407250
  4023b6:	jmp    0x402354
  4023b8:	lea    r8,[rip+0x4e99]        # 0x407258
  4023bf:	jmp    0x4022f7
  4023c4:	lea    rbx,[rip+0x4eb1]        # 0x40727c
  4023cb:	lea    r9,[rip+0x4f4f]        # 0x407321
  4023d2:	mov    QWORD PTR [rsp+0x20],rbx
  4023d7:	jmp    0x401da6
  4023dc:	lea    rbx,[rip+0x4e99]        # 0x40727c
  4023e3:	lea    r9,[rip+0x4ff2]        # 0x4073dc
  4023ea:	mov    QWORD PTR [rsp+0x20],rbx
  4023ef:	jmp    0x401da6
  4023f4:	lea    rbx,[rip+0x4e81]        # 0x40727c
  4023fb:	lea    r9,[rip+0x4f45]        # 0x407347
  402402:	mov    QWORD PTR [rsp+0x20],rbx
  402407:	jmp    0x401da6
  40240c:	lea    rbx,[rip+0x4e69]        # 0x40727c
  402413:	lea    r9,[rip+0x4f3c]        # 0x407356
  40241a:	mov    QWORD PTR [rsp+0x20],rbx
  40241f:	jmp    0x401da6
  402424:	cmp    bx,0x64
  402428:	je     0x402267
  40242e:	test   bx,bx
  402431:	je     0x40233f
  402437:	jmp    0x40230a
  40243c:	lea    rbx,[rip+0x4e39]        # 0x40727c
  402443:	lea    r9,[rip+0x4e21]        # 0x40726b
  40244a:	mov    QWORD PTR [rsp+0x20],rbx
  40244f:	jmp    0x401da6
  402454:	xchg   ax,ax
  402456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402460:	push   r13
  402462:	push   r12
  402464:	mov    eax,0x1028
  402469:	push   rbp
  40246a:	push   rdi
  40246b:	push   rsi
  40246c:	push   rbx
  40246d:	call   0x403c80
  402472:	sub    rsp,rax
  402475:	mov    r12,QWORD PTR [rip+0xa044]        # 0x40c4c0
  40247c:	xor    ebx,ebx
  40247e:	call   r12
  402481:	mov    rcx,rax
  402484:	call   0x404f58
  402489:	test   eax,eax
  40248b:	jne    0x402623
  402491:	mov    r8,QWORD PTR [rip+0x9658]        # 0x40baf0
  402498:	mov    rcx,QWORD PTR [rip+0x9639]        # 0x40bad8
  40249f:	lea    rdx,[rip+0x517e]        # 0x407624
  4024a6:	mov    r9d,0x16b
  4024ac:	lea    rbp,[rsp+0x20]
  4024b1:	call   0x404f38
  4024b6:	mov    rcx,QWORD PTR [rip+0x8b83]        # 0x40b040
  4024bd:	call   0x404f28
  4024c2:	mov    r13,QWORD PTR [rip+0xa06f]        # 0x40c538
  4024c9:	mov    rdi,QWORD PTR [rip+0xa0f0]        # 0x40c5c0
  4024d0:	mov    QWORD PTR [rip+0x8b65],0x0        # 0x40b040
  4024db:	call   r12
  4024de:	mov    edx,0x1000
  4024e3:	mov    r8,rax
  4024e6:	mov    rcx,rbp
  4024e9:	call   0x404f48
  4024ee:	test   rax,rax
  4024f1:	mov    rbx,rax
  4024f4:	je     0x4025db
  4024fa:	mov    r8d,0x2
  402500:	lea    rdx,[rip+0x512c]        # 0x407633
  402507:	mov    rcx,rbp
  40250a:	call   r13
  40250d:	test   eax,eax
  40250f:	lea    rsi,[rbp+0x2]
  402513:	je     0x40252d
  402515:	jmp    0x402538
  402517:	nop    WORD PTR [rax+rax*1+0x0]
  402520:	cmp    bl,0xa
  402523:	je     0x402640
  402529:	add    rsi,0x1
  40252d:	movzx  ecx,BYTE PTR [rsi]
  402530:	mov    ebx,ecx
  402532:	call   rdi
  402534:	test   eax,eax
  402536:	jne    0x402520
  402538:	mov    rcx,QWORD PTR [rip+0x9599]        # 0x40bad8
  40253f:	lea    rdx,[rip+0x50f0]        # 0x407636
  402546:	mov    r8,rbp
  402549:	call   0x404f38
  40254e:	cmp    BYTE PTR [rsp+0x20],0x0
  402553:	je     0x4024db
  402555:	mov    rbx,QWORD PTR [rip+0x8ae4]        # 0x40b040
  40255c:	test   rbx,rbx
  40255f:	je     0x402649
  402565:	mov    rcx,rbx
  402568:	call   0x404e80
  40256d:	mov    r8,rbp
  402570:	mov    r9d,DWORD PTR [r8]
  402573:	add    r8,0x4
  402577:	lea    edx,[r9-0x1010101]
  40257e:	not    r9d
  402581:	and    edx,r9d
  402584:	and    edx,0x80808080
  40258a:	je     0x402570
  40258c:	mov    ecx,edx
  40258e:	shr    ecx,0x10
  402591:	test   edx,0x8080
  402597:	cmove  edx,ecx
  40259a:	lea    rcx,[r8+0x2]
  40259e:	cmove  r8,rcx
  4025a2:	add    dl,dl
  4025a4:	mov    rcx,rbx
  4025a7:	sbb    r8,0x3
  4025ab:	sub    r8,rbp
  4025ae:	lea    rdx,[r8+rax*1+0x1]
  4025b3:	call   0x404ec0
  4025b8:	test   rax,rax
  4025bb:	mov    rbx,rax
  4025be:	je     0x4026a4
  4025c4:	mov    rdx,rbp
  4025c7:	mov    rcx,rax
  4025ca:	call   0x404ea0
  4025cf:	mov    QWORD PTR [rip+0x8a6a],rbx        # 0x40b040
  4025d6:	jmp    0x4024db
  4025db:	call   r12
  4025de:	mov    rcx,rax
  4025e1:	call   0x404f58
  4025e6:	test   eax,eax
  4025e8:	jne    0x402640
  4025ea:	call   r12
  4025ed:	mov    rcx,rax
  4025f0:	call   0x404f50
  4025f5:	test   eax,eax
  4025f7:	je     0x402640
  4025f9:	mov    rsi,QWORD PTR [rip+0x94f0]        # 0x40baf0
  402600:	call   r12
  402603:	lea    rdx,[rip+0x5058]        # 0x407662
  40260a:	lea    rcx,[rax+0x60]
  40260e:	mov    r9d,0x190
  402614:	mov    r8,rsi
  402617:	call   0x404f38
  40261c:	xor    ecx,ecx
  40261e:	call   0x404ed0
  402623:	mov    rax,rbx
  402626:	add    rsp,0x1028
  40262d:	pop    rbx
  40262e:	pop    rsi
  40262f:	pop    rdi
  402630:	pop    rbp
  402631:	pop    r12
  402633:	pop    r13
  402635:	ret    
  402636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402640:	mov    rbx,QWORD PTR [rip+0x89f9]        # 0x40b040
  402647:	jmp    0x402623
  402649:	mov    rdx,rbp
  40264c:	mov    ecx,DWORD PTR [rdx]
  40264e:	add    rdx,0x4
  402652:	lea    eax,[rcx-0x1010101]
  402658:	not    ecx
  40265a:	and    eax,ecx
  40265c:	and    eax,0x80808080
  402661:	je     0x40264c
  402663:	mov    ecx,eax
  402665:	shr    ecx,0x10
  402668:	test   eax,0x8080
  40266d:	cmove  eax,ecx
  402670:	lea    rcx,[rdx+0x2]
  402674:	cmove  rdx,rcx
  402678:	add    al,al
  40267a:	sbb    rdx,0x3
  40267e:	xor    ecx,ecx
  402680:	sub    rdx,rbp
  402683:	add    rdx,0x1
  402687:	call   0x404ec0
  40268c:	test   rax,rax
  40268f:	mov    rbx,rax
  402692:	je     0x4026a4
  402694:	mov    rdx,rbp
  402697:	mov    rcx,rbx
  40269a:	call   0x404e90
  40269f:	jmp    0x4025cf
  4026a4:	mov    rbx,QWORD PTR [rip+0x9445]        # 0x40baf0
  4026ab:	call   r12
  4026ae:	lea    rdx,[rip+0x4f8b]        # 0x407640
  4026b5:	lea    rcx,[rax+0x60]
  4026b9:	mov    r9d,0x181
  4026bf:	mov    r8,rbx
  4026c2:	xor    ebx,ebx
  4026c4:	call   0x404f38
  4026c9:	jmp    0x402623
  4026ce:	nop
  4026cf:	nop
  4026d0:	jmp    QWORD PTR [rip+0xa022]        # 0x40c6f8
  4026d6:	nop
  4026d7:	nop
  4026d8:	jmp    QWORD PTR [rip+0xa012]        # 0x40c6f0
  4026de:	nop
  4026df:	nop
  4026e0:	jmp    QWORD PTR [rip+0xa002]        # 0x40c6e8
  4026e6:	nop
  4026e7:	nop
  4026e8:	jmp    QWORD PTR [rip+0x9ff2]        # 0x40c6e0
  4026ee:	nop
  4026ef:	nop
  4026f0:	jmp    QWORD PTR [rip+0x9fe2]        # 0x40c6d8
  4026f6:	nop
  4026f7:	nop
  4026f8:	jmp    QWORD PTR [rip+0x9fd2]        # 0x40c6d0
  4026fe:	nop
  4026ff:	nop
  402700:	jmp    QWORD PTR [rip+0x9fc2]        # 0x40c6c8
  402706:	nop
  402707:	nop
  402708:	jmp    QWORD PTR [rip+0x9fb2]        # 0x40c6c0
  40270e:	nop
  40270f:	nop
  402710:	jmp    QWORD PTR [rip+0x9fa2]        # 0x40c6b8
  402716:	nop
  402717:	nop
  402718:	jmp    QWORD PTR [rip+0x9f92]        # 0x40c6b0
  40271e:	nop
  40271f:	nop
  402720:	jmp    QWORD PTR [rip+0x9f82]        # 0x40c6a8
  402726:	nop
  402727:	nop
  402728:	jmp    QWORD PTR [rip+0x9f72]        # 0x40c6a0
  40272e:	nop
  40272f:	nop
  402730:	jmp    QWORD PTR [rip+0x9f62]        # 0x40c698
  402736:	nop
  402737:	nop
  402738:	jmp    QWORD PTR [rip+0x9f52]        # 0x40c690
  40273e:	nop
  40273f:	nop
  402740:	jmp    QWORD PTR [rip+0x9f42]        # 0x40c688
  402746:	nop
  402747:	nop
  402748:	jmp    QWORD PTR [rip+0x9f32]        # 0x40c680
  40274e:	nop
  40274f:	nop
  402750:	jmp    QWORD PTR [rip+0x9fc2]        # 0x40c718
  402756:	nop
  402757:	nop
  402758:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	push   rbx
  402761:	sub    rsp,0x30
  402765:	mov    rbx,rcx
  402768:	mov    rcx,QWORD PTR [rip+0x9429]        # 0x40bb98
  40276f:	call   0x402d10
  402774:	cmp    rax,0xffffffffffffffff
  402778:	mov    QWORD PTR [rsp+0x20],rax
  40277d:	je     0x4027f5
  40277f:	mov    ecx,0x8
  402784:	call   0x404fa8
  402789:	mov    rcx,QWORD PTR [rip+0x9408]        # 0x40bb98
  402790:	call   0x402d10
  402795:	mov    rcx,QWORD PTR [rip+0x9404]        # 0x40bba0
  40279c:	mov    QWORD PTR [rsp+0x20],rax
  4027a1:	call   0x402d10
  4027a6:	lea    rdx,[rsp+0x20]
  4027ab:	lea    r8,[rsp+0x28]
  4027b0:	mov    rcx,rbx
  4027b3:	mov    QWORD PTR [rsp+0x28],rax
  4027b8:	call   0x405000
  4027bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4027c2:	mov    rbx,rax
  4027c5:	call   0x402d20
  4027ca:	mov    rcx,QWORD PTR [rsp+0x28]
  4027cf:	mov    QWORD PTR [rip+0x93c2],rax        # 0x40bb98
  4027d6:	call   0x402d20
  4027db:	mov    ecx,0x8
  4027e0:	mov    QWORD PTR [rip+0x93b9],rax        # 0x40bba0
  4027e7:	call   0x404f80
  4027ec:	mov    rax,rbx
  4027ef:	add    rsp,0x30
  4027f3:	pop    rbx
  4027f4:	ret    
  4027f5:	mov    rax,QWORD PTR [rip+0x5934]        # 0x408130
  4027fc:	mov    rcx,rbx
  4027ff:	call   QWORD PTR [rax]
  402801:	add    rsp,0x30
  402805:	pop    rbx
  402806:	ret    
  402807:	nop    WORD PTR [rax+rax*1+0x0]
  402810:	sub    rsp,0x28
  402814:	call   0x402760
  402819:	test   rax,rax
  40281c:	sete   al
  40281f:	movzx  eax,al
  402822:	neg    eax
  402824:	add    rsp,0x28
  402828:	ret    
  402829:	nop
  40282a:	nop
  40282b:	nop
  40282c:	nop
  40282d:	nop
  40282e:	nop
  40282f:	nop
  402830:	sub    rsp,0x28
  402834:	mov    rax,QWORD PTR [rip+0x37d5]        # 0x406010
  40283b:	mov    rax,QWORD PTR [rax]
  40283e:	test   rax,rax
  402841:	je     0x402860
  402843:	call   rax
  402845:	mov    rax,QWORD PTR [rip+0x37c4]        # 0x406010
  40284c:	lea    rdx,[rax+0x8]
  402850:	mov    rax,QWORD PTR [rax+0x8]
  402854:	mov    QWORD PTR [rip+0x37b5],rdx        # 0x406010
  40285b:	test   rax,rax
  40285e:	jne    0x402843
  402860:	add    rsp,0x28
  402864:	ret    
  402865:	nop
  402866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402870:	push   rsi
  402871:	push   rbx
  402872:	sub    rsp,0x28
  402876:	mov    rsi,QWORD PTR [rip+0x5823]        # 0x4080a0
  40287d:	mov    rax,QWORD PTR [rsi]
  402880:	cmp    eax,0xffffffff
  402883:	mov    ebx,eax
  402885:	je     0x4028b0
  402887:	test   ebx,ebx
  402889:	je     0x40289a
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	mov    eax,ebx
  402892:	call   QWORD PTR [rsi+rax*8]
  402895:	sub    ebx,0x1
  402898:	jne    0x402890
  40289a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402830
  4028a1:	add    rsp,0x28
  4028a5:	pop    rbx
  4028a6:	pop    rsi
  4028a7:	jmp    0x402810
  4028ac:	nop    DWORD PTR [rax+0x0]
  4028b0:	xor    ebx,ebx
  4028b2:	jmp    0x4028b6
  4028b4:	mov    ebx,eax
  4028b6:	lea    edx,[rbx+0x1]
  4028b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4028be:	mov    rax,rdx
  4028c1:	jne    0x4028b4
  4028c3:	jmp    0x402887
  4028c5:	nop
  4028c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028d0:	mov    eax,DWORD PTR [rip+0x87ea]        # 0x40b0c0
  4028d6:	test   eax,eax
  4028d8:	je     0x4028e0
  4028da:	repz ret 
  4028dc:	nop    DWORD PTR [rax+0x0]
  4028e0:	mov    DWORD PTR [rip+0x87d6],0x1        # 0x40b0c0
  4028ea:	jmp    0x402870
  4028ec:	nop
  4028ed:	nop
  4028ee:	nop
  4028ef:	nop
  4028f0:	mov    rax,QWORD PTR [rip+0x9bd1]        # 0x40c4c8
  4028f7:	rex.W jmp rax
  4028fa:	nop
  4028fb:	nop
  4028fc:	nop
  4028fd:	nop
  4028fe:	nop
  4028ff:	nop
  402900:	xor    eax,eax
  402902:	ret    
  402903:	nop
  402904:	nop
  402905:	nop
  402906:	nop
  402907:	nop
  402908:	nop
  402909:	nop
  40290a:	nop
  40290b:	nop
  40290c:	nop
  40290d:	nop
  40290e:	nop
  40290f:	nop
  402910:	push   r12
  402912:	push   rbp
  402913:	push   rdi
  402914:	push   rsi
  402915:	push   rbx
  402916:	sub    rsp,0x40
  40291a:	mov    rbx,QWORD PTR [rip+0x377f]        # 0x4060a0
  402921:	movabs rax,0x2b992ddfa232
  40292b:	mov    QWORD PTR [rsp+0x20],0x0
  402934:	cmp    rbx,rax
  402937:	je     0x402950
  402939:	not    rbx
  40293c:	mov    QWORD PTR [rip+0x376d],rbx        # 0x4060b0
  402943:	add    rsp,0x40
  402947:	pop    rbx
  402948:	pop    rsi
  402949:	pop    rdi
  40294a:	pop    rbp
  40294b:	pop    r12
  40294d:	ret    
  40294e:	xchg   ax,ax
  402950:	lea    rcx,[rsp+0x20]
  402955:	call   QWORD PTR [rip+0x9ab5]        # 0x40c410
  40295b:	mov    r12,QWORD PTR [rsp+0x20]
  402960:	call   QWORD PTR [rip+0x9a82]        # 0x40c3e8
  402966:	mov    ebp,eax
  402968:	call   QWORD PTR [rip+0x9a82]        # 0x40c3f0
  40296e:	mov    edi,eax
  402970:	call   QWORD PTR [rip+0x9aa2]        # 0x40c418
  402976:	lea    rcx,[rsp+0x30]
  40297b:	mov    esi,eax
  40297d:	call   QWORD PTR [rip+0x9aad]        # 0x40c430
  402983:	xor    r12,QWORD PTR [rsp+0x30]
  402988:	mov    edx,edi
  40298a:	movabs rax,0xffffffffffff
  402994:	xor    rbp,r12
  402997:	mov    rdi,rbp
  40299a:	xor    rdi,rdx
  40299d:	mov    edx,esi
  40299f:	xor    rdi,rdx
  4029a2:	mov    rsi,rdi
  4029a5:	and    rsi,rax
  4029a8:	cmp    rsi,rbx
  4029ab:	je     0x4029d0
  4029ad:	mov    rax,rsi
  4029b0:	not    rax
  4029b3:	mov    QWORD PTR [rip+0x36e6],rsi        # 0x4060a0
  4029ba:	mov    QWORD PTR [rip+0x36ef],rax        # 0x4060b0
  4029c1:	add    rsp,0x40
  4029c5:	pop    rbx
  4029c6:	pop    rsi
  4029c7:	pop    rdi
  4029c8:	pop    rbp
  4029c9:	pop    r12
  4029cb:	ret    
  4029cc:	nop    DWORD PTR [rax+0x0]
  4029d0:	movabs rax,0xffffd466d2205dcc
  4029da:	movabs rsi,0x2b992ddfa233
  4029e4:	jmp    0x4029b3
  4029e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029f0:	push   rbp
  4029f1:	push   rsi
  4029f2:	push   rbx
  4029f3:	mov    rbp,rsp
  4029f6:	sub    rsp,0x70
  4029fa:	mov    rsi,rcx
  4029fd:	lea    rcx,[rip+0x86fc]        # 0x40b100
  402a04:	call   QWORD PTR [rip+0x9a36]        # 0x40c440
  402a0a:	mov    rbx,QWORD PTR [rip+0x87e7]        # 0x40b1f8
  402a11:	xor    r8d,r8d
  402a14:	lea    rdx,[rbp-0x28]
  402a18:	mov    rcx,rbx
  402a1b:	call   QWORD PTR [rip+0x9a27]        # 0x40c448
  402a21:	test   rax,rax
  402a24:	mov    r9,rax
  402a27:	je     0x402ad0
  402a2d:	lea    rax,[rbp-0x20]
  402a31:	mov    QWORD PTR [rsp+0x38],0x0
  402a3a:	mov    r8,rbx
  402a3d:	mov    rdx,QWORD PTR [rbp-0x28]
  402a41:	xor    ecx,ecx
  402a43:	mov    QWORD PTR [rsp+0x30],rax
  402a48:	lea    rax,[rbp-0x18]
  402a4c:	mov    QWORD PTR [rsp+0x28],rax
  402a51:	lea    rax,[rip+0x86a8]        # 0x40b100
  402a58:	mov    QWORD PTR [rsp+0x20],rax
  402a5d:	call   QWORD PTR [rip+0x99ed]        # 0x40c450
  402a63:	mov    rax,QWORD PTR [rip+0x878e]        # 0x40b1f8
  402a6a:	xor    ecx,ecx
  402a6c:	mov    QWORD PTR [rip+0x870d],rsi        # 0x40b180
  402a73:	mov    DWORD PTR [rip+0x8b83],0xc0000409        # 0x40b600
  402a7d:	mov    DWORD PTR [rip+0x8b7d],0x1        # 0x40b604
  402a87:	mov    QWORD PTR [rip+0x8b82],rax        # 0x40b610
  402a8e:	mov    rax,QWORD PTR [rip+0x360b]        # 0x4060a0
  402a95:	mov    QWORD PTR [rbp-0x10],rax
  402a99:	mov    rax,QWORD PTR [rip+0x3610]        # 0x4060b0
  402aa0:	mov    QWORD PTR [rbp-0x8],rax
  402aa4:	call   QWORD PTR [rip+0x99ae]        # 0x40c458
  402aaa:	lea    rcx,[rip+0x510f]        # 0x407bc0
  402ab1:	call   QWORD PTR [rip+0x99c1]        # 0x40c478
  402ab7:	call   QWORD PTR [rip+0x9923]        # 0x40c3e0
  402abd:	mov    edx,0xc0000409
  402ac2:	mov    rcx,rax
  402ac5:	call   QWORD PTR [rip+0x999d]        # 0x40c468
  402acb:	call   0x404f70
  402ad0:	mov    rax,QWORD PTR [rbp+0x18]
  402ad4:	mov    QWORD PTR [rip+0x871d],rax        # 0x40b1f8
  402adb:	lea    rax,[rbp+0x8]
  402adf:	mov    QWORD PTR [rip+0x86b2],rax        # 0x40b198
  402ae6:	jmp    0x402a63
  402aeb:	nop
  402aec:	nop
  402aed:	nop
  402aee:	nop
  402aef:	nop
  402af0:	sub    rsp,0x28
  402af4:	test   edx,edx
  402af6:	je     0x402b10
  402af8:	cmp    edx,0x3
  402afb:	je     0x402b10
  402afd:	mov    eax,0x1
  402b02:	add    rsp,0x28
  402b06:	ret    
  402b07:	nop    WORD PTR [rax+rax*1+0x0]
  402b10:	call   0x403800
  402b15:	mov    eax,0x1
  402b1a:	add    rsp,0x28
  402b1e:	ret    
  402b1f:	nop
  402b20:	push   rsi
  402b21:	push   rbx
  402b22:	sub    rsp,0x28
  402b26:	mov    rax,QWORD PTR [rip+0x5553]        # 0x408080
  402b2d:	cmp    DWORD PTR [rax],0x2
  402b30:	je     0x402b38
  402b32:	mov    DWORD PTR [rax],0x2
  402b38:	cmp    edx,0x2
  402b3b:	je     0x402b50
  402b3d:	cmp    edx,0x1
  402b40:	je     0x402b82
  402b42:	mov    eax,0x1
  402b47:	add    rsp,0x28
  402b4b:	pop    rbx
  402b4c:	pop    rsi
  402b4d:	ret    
  402b4e:	xchg   ax,ax
  402b50:	lea    rbx,[rip+0xa509]        # 0x40d060
  402b57:	lea    rsi,[rip+0xa502]        # 0x40d060
  402b5e:	cmp    rbx,rsi
  402b61:	je     0x402b42
  402b63:	mov    rax,QWORD PTR [rbx]
  402b66:	test   rax,rax
  402b69:	je     0x402b6d
  402b6b:	call   rax
  402b6d:	add    rbx,0x8
  402b71:	cmp    rbx,rsi
  402b74:	jne    0x402b63
  402b76:	mov    eax,0x1
  402b7b:	add    rsp,0x28
  402b7f:	pop    rbx
  402b80:	pop    rsi
  402b81:	ret    
  402b82:	call   0x403800
  402b87:	jmp    0x402b42
  402b89:	nop    DWORD PTR [rax+0x0]
  402b90:	xor    eax,eax
  402b92:	ret    
  402b93:	nop
  402b94:	nop
  402b95:	nop
  402b96:	nop
  402b97:	nop
  402b98:	nop
  402b99:	nop
  402b9a:	nop
  402b9b:	nop
  402b9c:	nop
  402b9d:	nop
  402b9e:	nop
  402b9f:	nop
  402ba0:	sub    rsp,0x58
  402ba4:	mov    rax,QWORD PTR [rip+0x8b35]        # 0x40b6e0
  402bab:	test   rax,rax
  402bae:	je     0x402bdc
  402bb0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402bb9:	mov    DWORD PTR [rsp+0x20],ecx
  402bbd:	lea    rcx,[rsp+0x20]
  402bc2:	mov    QWORD PTR [rsp+0x28],rdx
  402bc7:	movsd  QWORD PTR [rsp+0x30],xmm2
  402bcd:	movsd  QWORD PTR [rsp+0x38],xmm3
  402bd3:	movsd  QWORD PTR [rsp+0x40],xmm0
  402bd9:	call   rax
  402bdb:	nop
  402bdc:	add    rsp,0x58
  402be0:	ret    
  402be1:	nop    DWORD PTR [rax+rax*1+0x0]
  402be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bf0:	mov    QWORD PTR [rip+0x8ae9],rcx        # 0x40b6e0
  402bf7:	jmp    0x404fd8
  402bfc:	nop    DWORD PTR [rax+0x0]
  402c00:	push   rsi
  402c01:	push   rbx
  402c02:	sub    rsp,0x78
  402c06:	movaps XMMWORD PTR [rsp+0x40],xmm6
  402c0b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402c10:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402c16:	cmp    DWORD PTR [rcx],0x6
  402c19:	ja     0x402cf0
  402c1f:	mov    edx,DWORD PTR [rcx]
  402c21:	lea    rax,[rip+0x50dc]        # 0x407d04
  402c28:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402c2c:	add    rax,rdx
  402c2f:	jmp    rax
  402c31:	lea    rbx,[rip+0x4fa8]        # 0x407be0
  402c38:	nop    DWORD PTR [rax+rax*1+0x0]
  402c40:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402c46:	mov    rsi,QWORD PTR [rcx+0x8]
  402c4a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  402c4f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402c54:	call   0x404ff0
  402c59:	movsd  QWORD PTR [rsp+0x30],xmm8
  402c60:	lea    rcx,[rax+0x60]
  402c64:	lea    rdx,[rip+0x506d]        # 0x407cd8
  402c6b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402c71:	mov    r9,rsi
  402c74:	mov    r8,rbx
  402c77:	movsd  QWORD PTR [rsp+0x20],xmm6
  402c7d:	call   0x404f38
  402c82:	nop
  402c83:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402c88:	xor    eax,eax
  402c8a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  402c8f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402c95:	add    rsp,0x78
  402c99:	pop    rbx
  402c9a:	pop    rsi
  402c9b:	ret    
  402c9c:	nop    DWORD PTR [rax+0x0]
  402ca0:	lea    rbx,[rip+0x4f58]        # 0x407bff
  402ca7:	jmp    0x402c40
  402ca9:	nop    DWORD PTR [rax+0x0]
  402cb0:	lea    rbx,[rip+0x4f69]        # 0x407c20
  402cb7:	jmp    0x402c40
  402cb9:	nop    DWORD PTR [rax+0x0]
  402cc0:	lea    rbx,[rip+0x4fc9]        # 0x407c90
  402cc7:	jmp    0x402c40
  402ccc:	nop    DWORD PTR [rax+0x0]
  402cd0:	lea    rbx,[rip+0x4f91]        # 0x407c68
  402cd7:	jmp    0x402c40
  402cdc:	nop    DWORD PTR [rax+0x0]
  402ce0:	lea    rbx,[rip+0x4f59]        # 0x407c40
  402ce7:	jmp    0x402c40
  402cec:	nop    DWORD PTR [rax+0x0]
  402cf0:	lea    rbx,[rip+0x4fcf]        # 0x407cc6
  402cf7:	jmp    0x402c40
  402cfc:	nop
  402cfd:	nop
  402cfe:	nop
  402cff:	nop
  402d00:	fninit 
  402d02:	ret    
  402d03:	nop
  402d04:	nop
  402d05:	nop
  402d06:	nop
  402d07:	nop
  402d08:	nop
  402d09:	nop
  402d0a:	nop
  402d0b:	nop
  402d0c:	nop
  402d0d:	nop
  402d0e:	nop
  402d0f:	nop
  402d10:	mov    rax,rcx
  402d13:	ret    
  402d14:	xchg   ax,ax
  402d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d20:	mov    rax,rcx
  402d23:	ret    
  402d24:	nop
  402d25:	nop
  402d26:	nop
  402d27:	nop
  402d28:	nop
  402d29:	nop
  402d2a:	nop
  402d2b:	nop
  402d2c:	nop
  402d2d:	nop
  402d2e:	nop
  402d2f:	nop
  402d30:	push   rsi
  402d31:	push   rbx
  402d32:	sub    rsp,0x38
  402d36:	lea    rax,[rsp+0x58]
  402d3b:	mov    rbx,rcx
  402d3e:	mov    QWORD PTR [rsp+0x58],rdx
  402d43:	mov    QWORD PTR [rsp+0x60],r8
  402d48:	mov    QWORD PTR [rsp+0x68],r9
  402d4d:	mov    QWORD PTR [rsp+0x28],rax
  402d52:	call   0x404ff0
  402d57:	lea    rcx,[rip+0x4fc2]        # 0x407d20
  402d5e:	lea    r9,[rax+0x60]
  402d62:	mov    r8d,0x1b
  402d68:	mov    edx,0x1
  402d6d:	call   0x404f10
  402d72:	mov    rsi,QWORD PTR [rsp+0x28]
  402d77:	call   0x404ff0
  402d7c:	lea    rcx,[rax+0x60]
  402d80:	mov    rdx,rbx
  402d83:	mov    r8,rsi
  402d86:	call   0x404e68
  402d8b:	call   0x404f70
  402d90:	nop
  402d91:	nop    DWORD PTR [rax+rax*1+0x0]
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	push   r13
  402da2:	push   r12
  402da4:	push   rbp
  402da5:	push   rdi
  402da6:	push   rsi
  402da7:	push   rbx
  402da8:	sub    rsp,0x58
  402dac:	movsxd rbp,DWORD PTR [rip+0x8951]        # 0x40b704
  402db3:	mov    rbx,rcx
  402db6:	mov    rsi,rdx
  402db9:	mov    rdi,r8
  402dbc:	test   ebp,ebp
  402dbe:	jle    0x402eba
  402dc4:	mov    rax,QWORD PTR [rip+0x893d]        # 0x40b708
  402dcb:	xor    r9d,r9d
  402dce:	add    rax,0x8
  402dd2:	mov    r10,QWORD PTR [rax]
  402dd5:	cmp    rbx,r10
  402dd8:	jb     0x402dee
  402dda:	mov    rdx,QWORD PTR [rax+0x8]
  402dde:	mov    r11d,DWORD PTR [rdx+0x8]
  402de2:	add    r10,r11
  402de5:	cmp    rbx,r10
  402de8:	jb     0x402ea0
  402dee:	add    r9d,0x1
  402df2:	add    rax,0x18
  402df6:	cmp    r9d,ebp
  402df9:	jne    0x402dd2
  402dfb:	mov    rcx,rbx
  402dfe:	call   0x403a10
  402e03:	test   rax,rax
  402e06:	mov    r12,rax
  402e09:	je     0x402ef2
  402e0f:	lea    rbp,[rbp+rbp*2+0x0]
  402e14:	shl    rbp,0x3
  402e18:	mov    r13,rbp
  402e1b:	add    r13,QWORD PTR [rip+0x88e6]        # 0x40b708
  402e22:	mov    QWORD PTR [r13+0x10],rax
  402e26:	mov    DWORD PTR [r13+0x0],0x0
  402e2e:	call   0x403b30
  402e33:	mov    edx,DWORD PTR [r12+0xc]
  402e38:	mov    r8d,0x30
  402e3e:	add    rax,rdx
  402e41:	lea    rdx,[rsp+0x20]
  402e46:	mov    QWORD PTR [r13+0x8],rax
  402e4a:	mov    rax,QWORD PTR [rip+0x88b7]        # 0x40b708
  402e51:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402e56:	call   QWORD PTR [rip+0x962c]        # 0x40c488
  402e5c:	test   rax,rax
  402e5f:	je     0x402ed5
  402e61:	mov    eax,DWORD PTR [rsp+0x44]
  402e65:	lea    edx,[rax-0x4]
  402e68:	and    edx,0xfffffffb
  402e6b:	je     0x402e99
  402e6d:	sub    eax,0x40
  402e70:	and    eax,0xffffffbf
  402e73:	je     0x402e99
  402e75:	mov    r9,rbp
  402e78:	add    r9,QWORD PTR [rip+0x8889]        # 0x40b708
  402e7f:	mov    r8d,0x40
  402e85:	mov    rdx,QWORD PTR [rsp+0x38]
  402e8a:	mov    rcx,QWORD PTR [rsp+0x20]
  402e8f:	call   QWORD PTR [rip+0x95eb]        # 0x40c480
  402e95:	test   eax,eax
  402e97:	je     0x402ec1
  402e99:	add    DWORD PTR [rip+0x8864],0x1        # 0x40b704
  402ea0:	mov    r8,rdi
  402ea3:	mov    rdx,rsi
  402ea6:	mov    rcx,rbx
  402ea9:	add    rsp,0x58
  402ead:	pop    rbx
  402eae:	pop    rsi
  402eaf:	pop    rdi
  402eb0:	pop    rbp
  402eb1:	pop    r12
  402eb3:	pop    r13
  402eb5:	jmp    0x404ee8
  402eba:	xor    ebp,ebp
  402ebc:	jmp    0x402dfb
  402ec1:	call   QWORD PTR [rip+0x9531]        # 0x40c3f8
  402ec7:	lea    rcx,[rip+0x4eca]        # 0x407d98
  402ece:	mov    edx,eax
  402ed0:	call   0x402d30
  402ed5:	mov    rax,QWORD PTR [rip+0x882c]        # 0x40b708
  402edc:	mov    edx,DWORD PTR [r12+0x8]
  402ee1:	lea    rcx,[rip+0x4e78]        # 0x407d60
  402ee8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  402eed:	call   0x402d30
  402ef2:	lea    rcx,[rip+0x4e47]        # 0x407d40
  402ef9:	mov    rdx,rbx
  402efc:	call   0x402d30
  402f01:	nop
  402f02:	nop    DWORD PTR [rax+0x0]
  402f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f10:	push   rbp
  402f11:	push   r14
  402f13:	push   r13
  402f15:	push   r12
  402f17:	push   rdi
  402f18:	push   rsi
  402f19:	push   rbx
  402f1a:	mov    rbp,rsp
  402f1d:	sub    rsp,0x60
  402f21:	mov    ebx,DWORD PTR [rip+0x87d9]        # 0x40b700
  402f27:	test   ebx,ebx
  402f29:	je     0x402f40
  402f2b:	mov    rsp,rbp
  402f2e:	pop    rbx
  402f2f:	pop    rsi
  402f30:	pop    rdi
  402f31:	pop    r12
  402f33:	pop    r13
  402f35:	pop    r14
  402f37:	pop    rbp
  402f38:	ret    
  402f39:	nop    DWORD PTR [rax+0x0]
  402f40:	mov    DWORD PTR [rip+0x87b6],0x1        # 0x40b700
  402f4a:	call   0x403a60
  402f4f:	cdqe   
  402f51:	lea    rax,[rax+rax*2]
  402f55:	lea    rax,[rax*8+0x1e]
  402f5d:	and    rax,0xfffffffffffffff0
  402f61:	call   0x403c80
  402f66:	mov    rsi,QWORD PTR [rip+0x5143]        # 0x4080b0
  402f6d:	mov    rbx,QWORD PTR [rip+0x514c]        # 0x4080c0
  402f74:	sub    rsp,rax
  402f77:	mov    DWORD PTR [rip+0x8783],0x0        # 0x40b704
  402f81:	lea    rax,[rsp+0x20]
  402f86:	mov    QWORD PTR [rip+0x877b],rax        # 0x40b708
  402f8d:	mov    rax,rsi
  402f90:	sub    rax,rbx
  402f93:	cmp    rax,0x7
  402f97:	jle    0x402f2b
  402f99:	cmp    rax,0xb
  402f9d:	jle    0x402fc5
  402f9f:	mov    r11d,DWORD PTR [rbx]
  402fa2:	test   r11d,r11d
  402fa5:	jne    0x4030f0
  402fab:	mov    r10d,DWORD PTR [rbx+0x4]
  402faf:	test   r10d,r10d
  402fb2:	jne    0x4030f0
  402fb8:	mov    r9d,DWORD PTR [rbx+0x8]
  402fbc:	test   r9d,r9d
  402fbf:	jne    0x402fdc
  402fc1:	add    rbx,0xc
  402fc5:	mov    r8d,DWORD PTR [rbx]
  402fc8:	test   r8d,r8d
  402fcb:	jne    0x4030f0
  402fd1:	mov    ecx,DWORD PTR [rbx+0x4]
  402fd4:	test   ecx,ecx
  402fd6:	jne    0x4030f0
  402fdc:	mov    edx,DWORD PTR [rbx+0x8]
  402fdf:	cmp    edx,0x1
  402fe2:	jne    0x4031fc
  402fe8:	add    rbx,0xc
  402fec:	cmp    rbx,rsi
  402fef:	jae    0x402f2b
  402ff5:	mov    r12,QWORD PTR [rip+0x50e4]        # 0x4080e0
  402ffc:	lea    r13,[rbp-0x30]
  403000:	movabs r14,0xffffffff00000000
  40300a:	mov    ecx,DWORD PTR [rbx+0x4]
  40300d:	mov    eax,DWORD PTR [rbx]
  40300f:	movzx  edx,BYTE PTR [rbx+0x8]
  403013:	add    rax,r12
  403016:	add    rcx,r12
  403019:	cmp    edx,0x10
  40301c:	mov    r8,QWORD PTR [rax]
  40301f:	je     0x403166
  403025:	jbe    0x40312d
  40302b:	cmp    edx,0x20
  40302e:	je     0x4031af
  403034:	cmp    edx,0x40
  403037:	jne    0x40319b
  40303d:	sub    r8,rax
  403040:	mov    rdx,r13
  403043:	mov    rdi,r13
  403046:	mov    rax,r8
  403049:	add    rax,QWORD PTR [rcx]
  40304c:	mov    r8d,0x8
  403052:	mov    QWORD PTR [rbp-0x30],rax
  403056:	call   0x402da0
  40305b:	add    rbx,0xc
  40305f:	cmp    rbx,rsi
  403062:	jb     0x40300a
  403064:	mov    eax,DWORD PTR [rip+0x869a]        # 0x40b704
  40306a:	xor    ebx,ebx
  40306c:	xor    esi,esi
  40306e:	test   eax,eax
  403070:	jle    0x402f2b
  403076:	mov    r14,QWORD PTR [rip+0x940b]        # 0x40c488
  40307d:	lea    r13,[rbp-0x34]
  403081:	mov    r12,QWORD PTR [rip+0x93f8]        # 0x40c480
  403088:	jmp    0x4030a3
  40308a:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	add    esi,0x1
  403093:	add    rbx,0x18
  403097:	cmp    esi,DWORD PTR [rip+0x8667]        # 0x40b704
  40309d:	jge    0x402f2b
  4030a3:	mov    rax,rbx
  4030a6:	add    rax,QWORD PTR [rip+0x865b]        # 0x40b708
  4030ad:	mov    edx,DWORD PTR [rax]
  4030af:	test   edx,edx
  4030b1:	je     0x403090
  4030b3:	mov    rcx,QWORD PTR [rax+0x8]
  4030b7:	mov    r8d,0x30
  4030bd:	mov    rdx,rdi
  4030c0:	call   r14
  4030c3:	test   rax,rax
  4030c6:	je     0x4031de
  4030cc:	mov    rax,QWORD PTR [rip+0x8635]        # 0x40b708
  4030d3:	mov    r9,r13
  4030d6:	mov    rdx,QWORD PTR [rbp-0x18]
  4030da:	mov    rcx,QWORD PTR [rbp-0x30]
  4030de:	mov    r8d,DWORD PTR [rax+rbx*1]
  4030e2:	call   r12
  4030e5:	jmp    0x403090
  4030e7:	nop    WORD PTR [rax+rax*1+0x0]
  4030f0:	cmp    rbx,rsi
  4030f3:	jae    0x402f2b
  4030f9:	mov    r12,QWORD PTR [rip+0x4fe0]        # 0x4080e0
  403100:	lea    rdi,[rbp-0x30]
  403104:	mov    ecx,DWORD PTR [rbx+0x4]
  403107:	mov    eax,DWORD PTR [rbx]
  403109:	mov    r8d,0x4
  40310f:	mov    rdx,rdi
  403112:	add    rbx,0x8
  403116:	add    rcx,r12
  403119:	add    eax,DWORD PTR [rcx]
  40311b:	mov    DWORD PTR [rbp-0x30],eax
  40311e:	call   0x402da0
  403123:	cmp    rbx,rsi
  403126:	jb     0x403104
  403128:	jmp    0x403064
  40312d:	cmp    edx,0x8
  403130:	jne    0x40319b
  403132:	movzx  edx,BYTE PTR [rcx]
  403135:	mov    rdi,r13
  403138:	mov    r10,rdx
  40313b:	or     r10,0xffffffffffffff00
  403142:	test   dl,dl
  403144:	cmovs  rdx,r10
  403148:	sub    rdx,rax
  40314b:	lea    rax,[r8+rdx*1]
  40314f:	mov    r8d,0x1
  403155:	mov    rdx,r13
  403158:	mov    QWORD PTR [rbp-0x30],rax
  40315c:	call   0x402da0
  403161:	jmp    0x40305b
  403166:	movzx  edx,WORD PTR [rcx]
  403169:	mov    rdi,r13
  40316c:	mov    r10,rdx
  40316f:	or     r10,0xffffffffffff0000
  403176:	test   dx,dx
  403179:	cmovs  rdx,r10
  40317d:	sub    rdx,rax
  403180:	lea    rax,[r8+rdx*1]
  403184:	mov    r8d,0x2
  40318a:	mov    rdx,r13
  40318d:	mov    QWORD PTR [rbp-0x30],rax
  403191:	call   0x402da0
  403196:	jmp    0x40305b
  40319b:	lea    rcx,[rip+0x4c56]        # 0x407df8
  4031a2:	mov    QWORD PTR [rbp-0x30],0x0
  4031aa:	call   0x402d30
  4031af:	mov    edx,DWORD PTR [rcx]
  4031b1:	mov    rdi,r13
  4031b4:	mov    r10,rdx
  4031b7:	or     r10,r14
  4031ba:	test   edx,edx
  4031bc:	cmovs  rdx,r10
  4031c0:	sub    rdx,rax
  4031c3:	lea    rax,[r8+rdx*1]
  4031c7:	mov    r8d,0x4
  4031cd:	mov    rdx,r13
  4031d0:	mov    QWORD PTR [rbp-0x30],rax
  4031d4:	call   0x402da0
  4031d9:	jmp    0x40305b
  4031de:	add    rbx,QWORD PTR [rip+0x8523]        # 0x40b708
  4031e5:	lea    rcx,[rip+0x4b74]        # 0x407d60
  4031ec:	mov    rax,QWORD PTR [rbx+0x10]
  4031f0:	mov    r8,QWORD PTR [rbx+0x8]
  4031f4:	mov    edx,DWORD PTR [rax+0x8]
  4031f7:	call   0x402d30
  4031fc:	lea    rcx,[rip+0x4bbd]        # 0x407dc0
  403203:	call   0x402d30
  403208:	nop
  403209:	nop
  40320a:	nop
  40320b:	nop
  40320c:	nop
  40320d:	nop
  40320e:	nop
  40320f:	nop
  403210:	sub    rsp,0x28
  403214:	mov    eax,DWORD PTR [rcx]
  403216:	cmp    eax,0xc0000091
  40321b:	ja     0x403280
  40321d:	cmp    eax,0xc000008d
  403222:	jae    0x40329f
  403224:	cmp    eax,0xc0000008
  403229:	je     0x403340
  40322f:	ja     0x403310
  403235:	cmp    eax,0x80000002
  40323a:	je     0x403340
  403240:	cmp    eax,0xc0000005
  403245:	jne    0x40331e
  40324b:	xor    edx,edx
  40324d:	mov    ecx,0xb
  403252:	call   0x404eb0
  403257:	cmp    rax,0x1
  40325b:	je     0x4033a0
  403261:	test   rax,rax
  403264:	je     0x403380
  40326a:	mov    ecx,0xb
  40326f:	call   rax
  403271:	xor    eax,eax
  403273:	add    rsp,0x28
  403277:	ret    
  403278:	nop    DWORD PTR [rax+rax*1+0x0]
  403280:	cmp    eax,0xc0000094
  403285:	je     0x403350
  40328b:	ja     0x4032d0
  40328d:	cmp    eax,0xc0000092
  403292:	je     0x403340
  403298:	cmp    eax,0xc0000093
  40329d:	jne    0x40331e
  40329f:	xor    edx,edx
  4032a1:	mov    ecx,0x8
  4032a6:	call   0x404eb0
  4032ab:	cmp    rax,0x1
  4032af:	mov    rdx,rax
  4032b2:	je     0x403328
  4032b4:	test   rdx,rdx
  4032b7:	mov    eax,0x1
  4032bc:	je     0x403273
  4032be:	mov    ecx,0x8
  4032c3:	call   rdx
  4032c5:	xor    eax,eax
  4032c7:	add    rsp,0x28
  4032cb:	ret    
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	cmp    eax,0xc0000095
  4032d5:	je     0x403340
  4032d7:	cmp    eax,0xc0000096
  4032dc:	jne    0x40331e
  4032de:	xor    edx,edx
  4032e0:	mov    ecx,0x4
  4032e5:	call   0x404eb0
  4032ea:	cmp    rax,0x1
  4032ee:	je     0x40338a
  4032f4:	test   rax,rax
  4032f7:	je     0x403380
  4032fd:	mov    ecx,0x4
  403302:	call   rax
  403304:	xor    eax,eax
  403306:	jmp    0x403273
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]
  403310:	cmp    eax,0xc000001d
  403315:	je     0x4032de
  403317:	cmp    eax,0xc000008c
  40331c:	je     0x403340
  40331e:	mov    eax,0x1
  403323:	add    rsp,0x28
  403327:	ret    
  403328:	mov    edx,0x1
  40332d:	mov    ecx,0x8
  403332:	call   0x404eb0
  403337:	call   0x402d00
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	xor    eax,eax
  403342:	add    rsp,0x28
  403346:	ret    
  403347:	nop    WORD PTR [rax+rax*1+0x0]
  403350:	xor    edx,edx
  403352:	mov    ecx,0x8
  403357:	call   0x404eb0
  40335c:	cmp    rax,0x1
  403360:	mov    rdx,rax
  403363:	jne    0x4032b4
  403369:	mov    edx,0x1
  40336e:	mov    ecx,0x8
  403373:	call   0x404eb0
  403378:	xor    eax,eax
  40337a:	jmp    0x403273
  40337f:	nop
  403380:	mov    eax,0x4
  403385:	add    rsp,0x28
  403389:	ret    
  40338a:	mov    edx,0x1
  40338f:	mov    ecx,0x4
  403394:	call   0x404eb0
  403399:	xor    eax,eax
  40339b:	jmp    0x403273
  4033a0:	mov    edx,0x1
  4033a5:	mov    ecx,0xb
  4033aa:	call   0x404eb0
  4033af:	xor    eax,eax
  4033b1:	jmp    0x403273
  4033b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033c0:	push   r12
  4033c2:	push   rbp
  4033c3:	push   rdi
  4033c4:	push   rsi
  4033c5:	push   rbx
  4033c6:	sub    rsp,0x20
  4033ca:	call   0x403b30
  4033cf:	mov    rbp,rax
  4033d2:	mov    eax,DWORD PTR [rip+0x8370]        # 0x40b748
  4033d8:	test   eax,eax
  4033da:	jne    0x403401
  4033dc:	test   rbp,rbp
  4033df:	je     0x403401
  4033e1:	lea    rcx,[rip+0x4a48]        # 0x407e30
  4033e8:	mov    DWORD PTR [rip+0x8356],0x1        # 0x40b748
  4033f2:	call   0x403970
  4033f7:	test   rax,rax
  4033fa:	je     0x403410
  4033fc:	mov    eax,0x1
  403401:	add    rsp,0x20
  403405:	pop    rbx
  403406:	pop    rsi
  403407:	pop    rdi
  403408:	pop    rbp
  403409:	pop    r12
  40340b:	ret    
  40340c:	nop    DWORD PTR [rax+0x0]
  403410:	lea    rbx,[rip+0x8469]        # 0x40b880
  403417:	mov    ecx,0x30
  40341c:	lea    rdx,[rip+0x835d]        # 0x40b780
  403423:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403210
  40342a:	xor    esi,esi
  40342c:	mov    rdi,rbx
  40342f:	rep stos QWORD PTR es:[rdi],rax
  403432:	mov    rdi,rdx
  403435:	sub    r12,rbp
  403438:	mov    cl,0x20
  40343a:	rep stos QWORD PTR es:[rdi],rax
  40343d:	mov    rdi,rdx
  403440:	jmp    0x403470
  403442:	mov    BYTE PTR [rdi],0x9
  403445:	mov    DWORD PTR [rdi+0x4],r12d
  403449:	add    rsi,0x1
  40344d:	mov    edx,DWORD PTR [rax+0xc]
  403450:	add    rbx,0xc
  403454:	mov    DWORD PTR [rbx-0xc],edx
  403457:	add    edx,DWORD PTR [rax+0x8]
  40345a:	mov    rax,rdi
  40345d:	sub    rax,rbp
  403460:	add    rdi,0x8
  403464:	mov    DWORD PTR [rbx-0x4],eax
  403467:	mov    DWORD PTR [rbx-0x8],edx
  40346a:	cmp    rsi,0x20
  40346e:	je     0x4034a5
  403470:	mov    rcx,rsi
  403473:	call   0x403aa0
  403478:	test   rax,rax
  40347b:	jne    0x403442
  40347d:	test   rsi,rsi
  403480:	je     0x4033fc
  403486:	mov    edx,esi
  403488:	nop    DWORD PTR [rax+rax*1+0x0]
  403490:	mov    r8,rbp
  403493:	lea    rcx,[rip+0x83e6]        # 0x40b880
  40349a:	call   QWORD PTR [rip+0x8f98]        # 0x40c438
  4034a0:	jmp    0x4033fc
  4034a5:	mov    edx,0x20
  4034aa:	jmp    0x403490
  4034ac:	nop    DWORD PTR [rax+0x0]
  4034b0:	push   rbx
  4034b1:	sub    rsp,0x20
  4034b5:	mov    rdx,QWORD PTR [rcx]
  4034b8:	mov    eax,DWORD PTR [rdx]
  4034ba:	mov    r8d,eax
  4034bd:	and    r8d,0x20ffffff
  4034c4:	cmp    r8d,0x20474343
  4034cb:	je     0x4035d0
  4034d1:	cmp    eax,0xc0000091
  4034d6:	mov    rbx,rcx
  4034d9:	ja     0x403560
  4034df:	cmp    eax,0xc000008d
  4034e4:	jae    0x403577
  4034ea:	cmp    eax,0xc0000008
  4034ef:	je     0x403523
  4034f1:	ja     0x403530
  4034f3:	cmp    eax,0x80000002
  4034f8:	je     0x403523
  4034fa:	cmp    eax,0xc0000005
  4034ff:	jne    0x403542
  403501:	xor    edx,edx
  403503:	mov    ecx,0xb
  403508:	call   0x404eb0
  40350d:	cmp    rax,0x1
  403511:	je     0x403640
  403517:	test   rax,rax
  40351a:	je     0x403542
  40351c:	mov    ecx,0xb
  403521:	call   rax
  403523:	mov    eax,0xffffffff
  403528:	add    rsp,0x20
  40352c:	pop    rbx
  40352d:	ret    
  40352e:	xchg   ax,ax
  403530:	cmp    eax,0xc000001d
  403535:	je     0x4035f6
  40353b:	cmp    eax,0xc000008c
  403540:	je     0x403523
  403542:	mov    rax,QWORD PTR [rip+0x81f7]        # 0x40b740
  403549:	test   rax,rax
  40354c:	je     0x403528
  40354e:	mov    rcx,rbx
  403551:	add    rsp,0x20
  403555:	pop    rbx
  403556:	rex.W jmp rax
  403559:	nop    DWORD PTR [rax+0x0]
  403560:	cmp    eax,0xc0000094
  403565:	je     0x4035a2
  403567:	ja     0x4035e0
  403569:	cmp    eax,0xc0000092
  40356e:	je     0x403523
  403570:	cmp    eax,0xc0000093
  403575:	jne    0x403542
  403577:	xor    edx,edx
  403579:	mov    ecx,0x8
  40357e:	call   0x404eb0
  403583:	cmp    rax,0x1
  403587:	jne    0x4035b4
  403589:	mov    edx,0x1
  40358e:	mov    ecx,0x8
  403593:	call   0x404eb0
  403598:	call   0x402d00
  40359d:	jmp    0x403523
  4035a2:	xor    edx,edx
  4035a4:	mov    ecx,0x8
  4035a9:	call   0x404eb0
  4035ae:	cmp    rax,0x1
  4035b2:	je     0x403622
  4035b4:	test   rax,rax
  4035b7:	je     0x403542
  4035b9:	mov    ecx,0x8
  4035be:	call   rax
  4035c0:	mov    eax,0xffffffff
  4035c5:	jmp    0x403528
  4035ca:	nop    WORD PTR [rax+rax*1+0x0]
  4035d0:	test   BYTE PTR [rdx+0x4],0x1
  4035d4:	jne    0x4034d1
  4035da:	jmp    0x403523
  4035df:	nop
  4035e0:	cmp    eax,0xc0000095
  4035e5:	je     0x403523
  4035eb:	cmp    eax,0xc0000096
  4035f0:	jne    0x403542
  4035f6:	xor    edx,edx
  4035f8:	mov    ecx,0x4
  4035fd:	call   0x404eb0
  403602:	cmp    rax,0x1
  403606:	je     0x403654
  403608:	test   rax,rax
  40360b:	je     0x403542
  403611:	mov    ecx,0x4
  403616:	call   rax
  403618:	mov    eax,0xffffffff
  40361d:	jmp    0x403528
  403622:	mov    edx,0x1
  403627:	mov    ecx,0x8
  40362c:	call   0x404eb0
  403631:	jmp    0x403523
  403636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403640:	mov    edx,0x1
  403645:	mov    ecx,0xb
  40364a:	call   0x404eb0
  40364f:	jmp    0x403523
  403654:	mov    edx,0x1
  403659:	mov    ecx,0x4
  40365e:	call   0x404eb0
  403663:	jmp    0x403523
  403668:	nop
  403669:	nop
  40366a:	nop
  40366b:	nop
  40366c:	nop
  40366d:	nop
  40366e:	nop
  40366f:	nop
  403670:	push   rbp
  403671:	push   rdi
  403672:	push   rsi
  403673:	push   rbx
  403674:	sub    rsp,0x28
  403678:	lea    rcx,[rip+0x83a1]        # 0x40ba20
  40367f:	call   QWORD PTR [rip+0x8d53]        # 0x40c3d8
  403685:	mov    rbx,QWORD PTR [rip+0x8374]        # 0x40ba00
  40368c:	test   rbx,rbx
  40368f:	je     0x4036c4
  403691:	mov    rbp,QWORD PTR [rip+0x8dd8]        # 0x40c470
  403698:	mov    rdi,QWORD PTR [rip+0x8d59]        # 0x40c3f8
  40369f:	nop
  4036a0:	mov    ecx,DWORD PTR [rbx]
  4036a2:	call   rbp
  4036a4:	mov    rsi,rax
  4036a7:	call   rdi
  4036a9:	test   eax,eax
  4036ab:	jne    0x4036bb
  4036ad:	test   rsi,rsi
  4036b0:	je     0x4036bb
  4036b2:	mov    rax,QWORD PTR [rbx+0x8]
  4036b6:	mov    rcx,rsi
  4036b9:	call   rax
  4036bb:	mov    rbx,QWORD PTR [rbx+0x10]
  4036bf:	test   rbx,rbx
  4036c2:	jne    0x4036a0
  4036c4:	mov    rax,QWORD PTR [rip+0x8d5d]        # 0x40c428
  4036cb:	lea    rcx,[rip+0x834e]        # 0x40ba20
  4036d2:	add    rsp,0x28
  4036d6:	pop    rbx
  4036d7:	pop    rsi
  4036d8:	pop    rdi
  4036d9:	pop    rbp
  4036da:	rex.W jmp rax
  4036dd:	nop    DWORD PTR [rax]
  4036e0:	push   rdi
  4036e1:	push   rsi
  4036e2:	push   rbx
  4036e3:	sub    rsp,0x20
  4036e7:	mov    eax,DWORD PTR [rip+0x831b]        # 0x40ba08
  4036ed:	test   eax,eax
  4036ef:	jne    0x403700
  4036f1:	add    rsp,0x20
  4036f5:	pop    rbx
  4036f6:	pop    rsi
  4036f7:	pop    rdi
  4036f8:	ret    
  4036f9:	nop    DWORD PTR [rax+0x0]
  403700:	mov    rsi,rdx
  403703:	mov    edi,ecx
  403705:	mov    edx,0x18
  40370a:	mov    ecx,0x1
  40370f:	call   0x404f68
  403714:	test   rax,rax
  403717:	mov    rbx,rax
  40371a:	je     0x403758
  40371c:	mov    DWORD PTR [rax],edi
  40371e:	mov    QWORD PTR [rax+0x8],rsi
  403722:	lea    rcx,[rip+0x82f7]        # 0x40ba20
  403729:	call   QWORD PTR [rip+0x8ca9]        # 0x40c3d8
  40372f:	mov    rax,QWORD PTR [rip+0x82ca]        # 0x40ba00
  403736:	lea    rcx,[rip+0x82e3]        # 0x40ba20
  40373d:	mov    QWORD PTR [rip+0x82bc],rbx        # 0x40ba00
  403744:	mov    QWORD PTR [rbx+0x10],rax
  403748:	call   QWORD PTR [rip+0x8cda]        # 0x40c428
  40374e:	xor    eax,eax
  403750:	add    rsp,0x20
  403754:	pop    rbx
  403755:	pop    rsi
  403756:	pop    rdi
  403757:	ret    
  403758:	mov    eax,0xffffffff
  40375d:	jmp    0x4036f1
  40375f:	nop
  403760:	push   rbx
  403761:	sub    rsp,0x20
  403765:	mov    eax,DWORD PTR [rip+0x829d]        # 0x40ba08
  40376b:	test   eax,eax
  40376d:	jne    0x403780
  40376f:	xor    eax,eax
  403771:	add    rsp,0x20
  403775:	pop    rbx
  403776:	ret    
  403777:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	mov    ebx,ecx
  403782:	lea    rcx,[rip+0x8297]        # 0x40ba20
  403789:	call   QWORD PTR [rip+0x8c49]        # 0x40c3d8
  40378f:	mov    rdx,QWORD PTR [rip+0x826a]        # 0x40ba00
  403796:	test   rdx,rdx
  403799:	je     0x4037b7
  40379b:	mov    eax,DWORD PTR [rdx]
  40379d:	cmp    eax,ebx
  40379f:	jne    0x4037ae
  4037a1:	jmp    0x4037ef
  4037a3:	mov    r8d,DWORD PTR [rax]
  4037a6:	cmp    r8d,ebx
  4037a9:	je     0x4037d0
  4037ab:	mov    rdx,rax
  4037ae:	mov    rax,QWORD PTR [rdx+0x10]
  4037b2:	test   rax,rax
  4037b5:	jne    0x4037a3
  4037b7:	lea    rcx,[rip+0x8262]        # 0x40ba20
  4037be:	call   QWORD PTR [rip+0x8c64]        # 0x40c428
  4037c4:	xor    eax,eax
  4037c6:	add    rsp,0x20
  4037ca:	pop    rbx
  4037cb:	ret    
  4037cc:	nop    DWORD PTR [rax+0x0]
  4037d0:	mov    rcx,rax
  4037d3:	mov    rax,QWORD PTR [rax+0x10]
  4037d7:	mov    QWORD PTR [rdx+0x10],rax
  4037db:	call   0x404f28
  4037e0:	lea    rcx,[rip+0x8239]        # 0x40ba20
  4037e7:	call   QWORD PTR [rip+0x8c3b]        # 0x40c428
  4037ed:	jmp    0x4037c4
  4037ef:	mov    rax,QWORD PTR [rdx+0x10]
  4037f3:	mov    rcx,rdx
  4037f6:	mov    QWORD PTR [rip+0x8203],rax        # 0x40ba00
  4037fd:	jmp    0x4037db
  4037ff:	nop
  403800:	push   rbx
  403801:	sub    rsp,0x20
  403805:	cmp    edx,0x1
  403808:	je     0x4038a0
  40380e:	jb     0x403840
  403810:	cmp    edx,0x2
  403813:	je     0x403830
  403815:	cmp    edx,0x3
  403818:	jne    0x403835
  40381a:	mov    eax,DWORD PTR [rip+0x81e8]        # 0x40ba08
  403820:	test   eax,eax
  403822:	je     0x403835
  403824:	call   0x403670
  403829:	jmp    0x403835
  40382b:	nop    DWORD PTR [rax+rax*1+0x0]
  403830:	call   0x402d00
  403835:	mov    eax,0x1
  40383a:	add    rsp,0x20
  40383e:	pop    rbx
  40383f:	ret    
  403840:	mov    eax,DWORD PTR [rip+0x81c2]        # 0x40ba08
  403846:	test   eax,eax
  403848:	jne    0x4038d0
  40384e:	mov    eax,DWORD PTR [rip+0x81b4]        # 0x40ba08
  403854:	cmp    eax,0x1
  403857:	jne    0x403835
  403859:	mov    rcx,QWORD PTR [rip+0x81a0]        # 0x40ba00
  403860:	test   rcx,rcx
  403863:	je     0x403876
  403865:	mov    rbx,QWORD PTR [rcx+0x10]
  403869:	call   0x404f28
  40386e:	test   rbx,rbx
  403871:	mov    rcx,rbx
  403874:	jne    0x403865
  403876:	lea    rcx,[rip+0x81a3]        # 0x40ba20
  40387d:	mov    QWORD PTR [rip+0x8178],0x0        # 0x40ba00
  403888:	mov    DWORD PTR [rip+0x8176],0x0        # 0x40ba08
  403892:	call   QWORD PTR [rip+0x8b38]        # 0x40c3d0
  403898:	jmp    0x403835
  40389a:	nop    WORD PTR [rax+rax*1+0x0]
  4038a0:	mov    eax,DWORD PTR [rip+0x8162]        # 0x40ba08
  4038a6:	test   eax,eax
  4038a8:	je     0x4038c0
  4038aa:	mov    eax,0x1
  4038af:	mov    DWORD PTR [rip+0x814f],0x1        # 0x40ba08
  4038b9:	add    rsp,0x20
  4038bd:	pop    rbx
  4038be:	ret    
  4038bf:	nop
  4038c0:	lea    rcx,[rip+0x8159]        # 0x40ba20
  4038c7:	call   QWORD PTR [rip+0x8b53]        # 0x40c420
  4038cd:	jmp    0x4038aa
  4038cf:	nop
  4038d0:	call   0x403670
  4038d5:	jmp    0x40384e
  4038da:	nop
  4038db:	nop
  4038dc:	nop
  4038dd:	nop
  4038de:	nop
  4038df:	nop
  4038e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4038e4:	add    rcx,rax
  4038e7:	xor    eax,eax
  4038e9:	cmp    DWORD PTR [rcx],0x4550
  4038ef:	je     0x4038f3
  4038f1:	repz ret 
  4038f3:	xor    eax,eax
  4038f5:	cmp    WORD PTR [rcx+0x18],0x20b
  4038fb:	sete   al
  4038fe:	ret    
  4038ff:	nop
  403900:	cmp    WORD PTR [rcx],0x5a4d
  403905:	je     0x403910
  403907:	xor    eax,eax
  403909:	ret    
  40390a:	nop    WORD PTR [rax+rax*1+0x0]
  403910:	jmp    0x4038e0
  403912:	nop    DWORD PTR [rax+0x0]
  403916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403920:	movsxd rax,DWORD PTR [rcx+0x3c]
  403924:	add    rcx,rax
  403927:	movzx  eax,WORD PTR [rcx+0x14]
  40392b:	lea    rax,[rcx+rax*1+0x18]
  403930:	movzx  ecx,WORD PTR [rcx+0x6]
  403934:	test   ecx,ecx
  403936:	je     0x403961
  403938:	sub    ecx,0x1
  40393b:	lea    rcx,[rcx+rcx*4]
  40393f:	lea    r9,[rax+rcx*8+0x28]
  403944:	mov    r8d,DWORD PTR [rax+0xc]
  403948:	cmp    r8,rdx
  40394b:	mov    rcx,r8
  40394e:	ja     0x403958
  403950:	add    ecx,DWORD PTR [rax+0x8]
  403953:	cmp    rdx,rcx
  403956:	jb     0x403963
  403958:	add    rax,0x28
  40395c:	cmp    rax,r9
  40395f:	jne    0x403944
  403961:	xor    eax,eax
  403963:	repz ret 
  403965:	nop
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403970:	push   rdi
  403971:	push   rsi
  403972:	push   rbx
  403973:	sub    rsp,0x20
  403977:	mov    rsi,rcx
  40397a:	call   0x404e80
  40397f:	cmp    rax,0x8
  403983:	ja     0x4039a0
  403985:	mov    rbx,QWORD PTR [rip+0x4754]        # 0x4080e0
  40398c:	xor    edi,edi
  40398e:	cmp    WORD PTR [rbx],0x5a4d
  403993:	je     0x4039b0
  403995:	mov    rax,rdi
  403998:	add    rsp,0x20
  40399c:	pop    rbx
  40399d:	pop    rsi
  40399e:	pop    rdi
  40399f:	ret    
  4039a0:	xor    edi,edi
  4039a2:	mov    rax,rdi
  4039a5:	add    rsp,0x20
  4039a9:	pop    rbx
  4039aa:	pop    rsi
  4039ab:	pop    rdi
  4039ac:	ret    
  4039ad:	nop    DWORD PTR [rax]
  4039b0:	mov    rcx,rbx
  4039b3:	call   0x4038e0
  4039b8:	test   eax,eax
  4039ba:	je     0x403995
  4039bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4039c0:	add    rdx,rbx
  4039c3:	movzx  eax,WORD PTR [rdx+0x14]
  4039c7:	lea    rbx,[rdx+rax*1+0x18]
  4039cc:	movzx  eax,WORD PTR [rdx+0x6]
  4039d0:	test   eax,eax
  4039d2:	je     0x403995
  4039d4:	sub    eax,0x1
  4039d7:	lea    rax,[rax+rax*4]
  4039db:	lea    rdi,[rbx+rax*8+0x28]
  4039e0:	jmp    0x4039eb
  4039e2:	add    rbx,0x28
  4039e6:	cmp    rbx,rdi
  4039e9:	je     0x4039a0
  4039eb:	mov    r8d,0x8
  4039f1:	mov    rdx,rsi
  4039f4:	mov    rcx,rbx
  4039f7:	call   0x404e78
  4039fc:	test   eax,eax
  4039fe:	jne    0x4039e2
  403a00:	mov    rdi,rbx
  403a03:	mov    rax,rdi
  403a06:	add    rsp,0x20
  403a0a:	pop    rbx
  403a0b:	pop    rsi
  403a0c:	pop    rdi
  403a0d:	ret    
  403a0e:	xchg   ax,ax
  403a10:	push   rsi
  403a11:	push   rbx
  403a12:	sub    rsp,0x28
  403a16:	mov    rbx,QWORD PTR [rip+0x46c3]        # 0x4080e0
  403a1d:	cmp    WORD PTR [rbx],0x5a4d
  403a22:	je     0x403a30
  403a24:	xor    eax,eax
  403a26:	add    rsp,0x28
  403a2a:	pop    rbx
  403a2b:	pop    rsi
  403a2c:	ret    
  403a2d:	nop    DWORD PTR [rax]
  403a30:	mov    rsi,rcx
  403a33:	mov    rcx,rbx
  403a36:	call   0x4038e0
  403a3b:	test   eax,eax
  403a3d:	je     0x403a24
  403a3f:	sub    rsi,rbx
  403a42:	mov    rcx,rbx
  403a45:	mov    rdx,rsi
  403a48:	add    rsp,0x28
  403a4c:	pop    rbx
  403a4d:	pop    rsi
  403a4e:	jmp    0x403920
  403a53:	nop    DWORD PTR [rax]
  403a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a60:	push   rbx
  403a61:	sub    rsp,0x20
  403a65:	mov    rbx,QWORD PTR [rip+0x4674]        # 0x4080e0
  403a6c:	xor    eax,eax
  403a6e:	cmp    WORD PTR [rbx],0x5a4d
  403a73:	je     0x403a80
  403a75:	add    rsp,0x20
  403a79:	pop    rbx
  403a7a:	ret    
  403a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a80:	mov    rcx,rbx
  403a83:	call   0x4038e0
  403a88:	test   eax,eax
  403a8a:	je     0x403a75
  403a8c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403a90:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403a95:	add    rsp,0x20
  403a99:	pop    rbx
  403a9a:	ret    
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	push   rdi
  403aa1:	push   rsi
  403aa2:	push   rbx
  403aa3:	sub    rsp,0x20
  403aa7:	mov    rsi,QWORD PTR [rip+0x4632]        # 0x4080e0
  403aae:	xor    edi,edi
  403ab0:	mov    rbx,rcx
  403ab3:	cmp    WORD PTR [rsi],0x5a4d
  403ab8:	je     0x403ac5
  403aba:	mov    rax,rdi
  403abd:	add    rsp,0x20
  403ac1:	pop    rbx
  403ac2:	pop    rsi
  403ac3:	pop    rdi
  403ac4:	ret    
  403ac5:	mov    rcx,rsi
  403ac8:	call   0x4038e0
  403acd:	test   eax,eax
  403acf:	je     0x403aba
  403ad1:	movsxd rax,DWORD PTR [rsi+0x3c]
  403ad5:	add    rsi,rax
  403ad8:	movzx  eax,WORD PTR [rsi+0x14]
  403adc:	lea    rdx,[rsi+rax*1+0x18]
  403ae1:	movzx  eax,WORD PTR [rsi+0x6]
  403ae5:	test   eax,eax
  403ae7:	je     0x403aba
  403ae9:	sub    eax,0x1
  403aec:	lea    rax,[rax+rax*4]
  403af0:	lea    rax,[rdx+rax*8+0x28]
  403af5:	test   BYTE PTR [rdx+0x27],0x20
  403af9:	je     0x403b04
  403afb:	test   rbx,rbx
  403afe:	je     0x403b20
  403b00:	sub    rbx,0x1
  403b04:	add    rdx,0x28
  403b08:	cmp    rdx,rax
  403b0b:	jne    0x403af5
  403b0d:	xor    edi,edi
  403b0f:	mov    rax,rdi
  403b12:	add    rsp,0x20
  403b16:	pop    rbx
  403b17:	pop    rsi
  403b18:	pop    rdi
  403b19:	ret    
  403b1a:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	mov    rdi,rdx
  403b23:	mov    rax,rdi
  403b26:	add    rsp,0x20
  403b2a:	pop    rbx
  403b2b:	pop    rsi
  403b2c:	pop    rdi
  403b2d:	ret    
  403b2e:	xchg   ax,ax
  403b30:	push   rsi
  403b31:	push   rbx
  403b32:	sub    rsp,0x28
  403b36:	mov    rsi,QWORD PTR [rip+0x45a3]        # 0x4080e0
  403b3d:	xor    ebx,ebx
  403b3f:	cmp    WORD PTR [rsi],0x5a4d
  403b44:	je     0x403b50
  403b46:	mov    rax,rbx
  403b49:	add    rsp,0x28
  403b4d:	pop    rbx
  403b4e:	pop    rsi
  403b4f:	ret    
  403b50:	mov    rcx,rsi
  403b53:	call   0x4038e0
  403b58:	test   eax,eax
  403b5a:	cmovne rbx,rsi
  403b5e:	mov    rax,rbx
  403b61:	add    rsp,0x28
  403b65:	pop    rbx
  403b66:	pop    rsi
  403b67:	ret    
  403b68:	nop    DWORD PTR [rax+rax*1+0x0]
  403b70:	push   rsi
  403b71:	push   rbx
  403b72:	sub    rsp,0x28
  403b76:	mov    rbx,QWORD PTR [rip+0x4563]        # 0x4080e0
  403b7d:	xor    eax,eax
  403b7f:	cmp    WORD PTR [rbx],0x5a4d
  403b84:	je     0x403b90
  403b86:	add    rsp,0x28
  403b8a:	pop    rbx
  403b8b:	pop    rsi
  403b8c:	ret    
  403b8d:	nop    DWORD PTR [rax]
  403b90:	mov    rsi,rcx
  403b93:	mov    rcx,rbx
  403b96:	call   0x4038e0
  403b9b:	test   eax,eax
  403b9d:	je     0x403b86
  403b9f:	sub    rsi,rbx
  403ba2:	mov    rcx,rbx
  403ba5:	mov    rdx,rsi
  403ba8:	call   0x403920
  403bad:	test   rax,rax
  403bb0:	je     0x403bc1
  403bb2:	mov    eax,DWORD PTR [rax+0x24]
  403bb5:	not    eax
  403bb7:	shr    eax,0x1f
  403bba:	add    rsp,0x28
  403bbe:	pop    rbx
  403bbf:	pop    rsi
  403bc0:	ret    
  403bc1:	xor    eax,eax
  403bc3:	jmp    0x403b86
  403bc5:	nop
  403bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bd0:	push   rbp
  403bd1:	push   rdi
  403bd2:	push   rsi
  403bd3:	push   rbx
  403bd4:	sub    rsp,0x28
  403bd8:	mov    rdi,QWORD PTR [rip+0x4501]        # 0x4080e0
  403bdf:	xor    ebp,ebp
  403be1:	mov    esi,ecx
  403be3:	cmp    WORD PTR [rdi],0x5a4d
  403be8:	je     0x403c00
  403bea:	mov    rax,rbp
  403bed:	add    rsp,0x28
  403bf1:	pop    rbx
  403bf2:	pop    rsi
  403bf3:	pop    rdi
  403bf4:	pop    rbp
  403bf5:	ret    
  403bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c00:	mov    rcx,rdi
  403c03:	call   0x4038e0
  403c08:	test   eax,eax
  403c0a:	je     0x403bea
  403c0c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403c10:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403c17:	test   edx,edx
  403c19:	je     0x403bea
  403c1b:	mov    ebx,edx
  403c1d:	mov    rcx,rdi
  403c20:	mov    rdx,rbx
  403c23:	call   0x403920
  403c28:	test   rax,rax
  403c2b:	je     0x403bea
  403c2d:	add    rbx,rdi
  403c30:	mov    rdx,rbx
  403c33:	jne    0x403c47
  403c35:	jmp    0x403bea
  403c37:	nop    WORD PTR [rax+rax*1+0x0]
  403c40:	sub    esi,0x1
  403c43:	add    rdx,0x14
  403c47:	mov    ecx,DWORD PTR [rdx+0x4]
  403c4a:	test   ecx,ecx
  403c4c:	jne    0x403c55
  403c4e:	mov    eax,DWORD PTR [rdx+0xc]
  403c51:	test   eax,eax
  403c53:	je     0x403c70
  403c55:	test   esi,esi
  403c57:	jg     0x403c40
  403c59:	mov    ebp,DWORD PTR [rdx+0xc]
  403c5c:	add    rbp,rdi
  403c5f:	mov    rax,rbp
  403c62:	add    rsp,0x28
  403c66:	pop    rbx
  403c67:	pop    rsi
  403c68:	pop    rdi
  403c69:	pop    rbp
  403c6a:	ret    
  403c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c70:	xor    ebp,ebp
  403c72:	mov    rax,rbp
  403c75:	add    rsp,0x28
  403c79:	pop    rbx
  403c7a:	pop    rsi
  403c7b:	pop    rdi
  403c7c:	pop    rbp
  403c7d:	ret    
  403c7e:	nop
  403c7f:	nop
  403c80:	push   rcx
  403c81:	push   rax
  403c82:	cmp    rax,0x1000
  403c88:	lea    rcx,[rsp+0x18]
  403c8d:	jb     0x403ca8
  403c8f:	sub    rcx,0x1000
  403c96:	or     QWORD PTR [rcx],0x0
  403c9a:	sub    rax,0x1000
  403ca0:	cmp    rax,0x1000
  403ca6:	ja     0x403c8f
  403ca8:	sub    rcx,rax
  403cab:	or     QWORD PTR [rcx],0x0
  403caf:	pop    rax
  403cb0:	pop    rcx
  403cb1:	ret    
  403cb2:	nop
  403cb3:	nop
  403cb4:	nop
  403cb5:	nop
  403cb6:	nop
  403cb7:	nop
  403cb8:	nop
  403cb9:	nop
  403cba:	nop
  403cbb:	nop
  403cbc:	nop
  403cbd:	nop
  403cbe:	nop
  403cbf:	nop
  403cc0:	push   rbp
  403cc1:	push   r13
  403cc3:	push   r12
  403cc5:	push   rdi
  403cc6:	push   rsi
  403cc7:	push   rbx
  403cc8:	sub    rsp,0x28
  403ccc:	lea    rbp,[rsp+0x80]
  403cd4:	xor    edx,edx
  403cd6:	mov    rbx,rcx
  403cd9:	mov    ecx,0x2
  403cde:	call   0x404eb8
  403ce3:	test   rax,rax
  403ce6:	mov    rsi,rax
  403ce9:	je     0x403cf6
  403ceb:	mov    rcx,rax
  403cee:	call   0x404e50
  403cf3:	mov    rsi,rax
  403cf6:	lea    rdx,[rip+0x4143]        # 0x407e40
  403cfd:	mov    ecx,0x2
  403d02:	call   0x404eb8
  403d07:	test   rbx,rbx
  403d0a:	je     0x403d11
  403d0c:	cmp    BYTE PTR [rbx],0x0
  403d0f:	jne    0x403d80
  403d11:	lea    rdx,[rip+0x412e]        # 0x407e46
  403d18:	xor    r8d,r8d
  403d1b:	xor    ecx,ecx
  403d1d:	call   0x404e58
  403d22:	mov    rcx,QWORD PTR [rip+0x7d47]        # 0x40ba70
  403d29:	lea    rbx,[rax+0x1]
  403d2d:	mov    rdx,rbx
  403d30:	call   0x404ec0
  403d35:	lea    rdx,[rip+0x410a]        # 0x407e46
  403d3c:	mov    r8,rbx
  403d3f:	mov    rcx,rax
  403d42:	mov    QWORD PTR [rip+0x7d27],rax        # 0x40ba70
  403d49:	call   0x404e58
  403d4e:	mov    rdx,rsi
  403d51:	mov    ecx,0x2
  403d56:	call   0x404eb8
  403d5b:	mov    rcx,rsi
  403d5e:	call   0x404f28
  403d63:	mov    rax,QWORD PTR [rip+0x7d06]        # 0x40ba70
  403d6a:	lea    rsp,[rbp-0x58]
  403d6e:	pop    rbx
  403d6f:	pop    rsi
  403d70:	pop    rdi
  403d71:	pop    r12
  403d73:	pop    r13
  403d75:	pop    rbp
  403d76:	ret    
  403d77:	nop    WORD PTR [rax+rax*1+0x0]
  403d80:	xor    r8d,r8d
  403d83:	mov    rdx,rbx
  403d86:	xor    ecx,ecx
  403d88:	call   0x404ef0
  403d8d:	lea    rdx,[rax+rax*1+0x12]
  403d92:	mov    r8,rax
  403d95:	mov    rdi,rsp
  403d98:	mov    rax,rdx
  403d9b:	and    rax,0xfffffffffffffff0
  403d9f:	call   0x403c80
  403da4:	sub    rsp,rax
  403da7:	mov    rdx,rbx
  403daa:	lea    r12,[rsp+0x21]
  403daf:	shr    r12,1
  403db2:	lea    r13,[r12+r12*1]
  403db6:	mov    rcx,r13
  403db9:	call   0x404ef0
  403dbe:	cmp    rax,0x1
  403dc2:	jbe    0x403e46
  403dc8:	cmp    WORD PTR [r12+r12*1+0x2],0x3a
  403dcf:	lea    rdx,[r13+0x4]
  403dd3:	cmovne rdx,r13
  403dd7:	xor    r9d,r9d
  403dda:	mov    WORD PTR [r13+rax*2+0x0],r9w
  403de0:	movzx  r11d,WORD PTR [rdx]
  403de4:	mov    r12,rdx
  403de7:	test   r11w,r11w
  403deb:	je     0x403e5c
  403ded:	mov    r9,r12
  403df0:	jmp    0x403e0c
  403df2:	cmp    r11w,0x2f
  403df7:	je     0x403e24
  403df9:	movzx  r11d,WORD PTR [r9+0x2]
  403dfe:	add    r9,0x2
  403e02:	test   r11w,r11w
  403e06:	je     0x403ea8
  403e0c:	cmp    r11w,0x5c
  403e11:	jne    0x403df2
  403e13:	movzx  r10d,WORD PTR [r9]
  403e17:	cmp    r10w,0x5c
  403e1c:	jne    0x403e2f
  403e1e:	xchg   ax,ax
  403e20:	add    r9,0x2
  403e24:	movzx  r10d,WORD PTR [r9]
  403e28:	cmp    r10w,0x5c
  403e2d:	je     0x403e20
  403e2f:	cmp    r10w,0x2f
  403e34:	je     0x403e20
  403e36:	test   r10w,r10w
  403e3a:	je     0x403e64
  403e3c:	movzx  r11d,WORD PTR [r9+0x2]
  403e41:	mov    r12,r9
  403e44:	jmp    0x403dfe
  403e46:	xor    edx,edx
  403e48:	mov    WORD PTR [r13+rax*2+0x0],dx
  403e4e:	movzx  r11d,WORD PTR [r12+r12*1]
  403e53:	mov    r12,r13
  403e56:	test   r11w,r11w
  403e5a:	jne    0x403ded
  403e5c:	mov    rsp,rdi
  403e5f:	jmp    0x403d11
  403e64:	cmp    r9,r12
  403e67:	jbe    0x403df9
  403e69:	movzx  edx,WORD PTR [r9-0x2]
  403e6e:	lea    r10,[r9-0x2]
  403e72:	cmp    dx,0x2f
  403e76:	je     0x403e82
  403e78:	cmp    dx,0x5c
  403e7c:	jne    0x403f62
  403e82:	xor    r8d,r8d
  403e85:	cmp    r12,r10
  403e88:	mov    WORD PTR [r10],r8w
  403e8c:	jae    0x403f20
  403e92:	sub    r10,0x2
  403e96:	movzx  r9d,WORD PTR [r10]
  403e9a:	cmp    r9w,0x2f
  403e9f:	je     0x403e82
  403ea1:	cmp    r9w,0x5c
  403ea6:	je     0x403e82
  403ea8:	cmp    WORD PTR [r12],0x0
  403eae:	jne    0x403f28
  403eb0:	lea    rdx,[rip+0x3f8b]        # 0x407e42
  403eb7:	xor    r8d,r8d
  403eba:	xor    ecx,ecx
  403ebc:	call   0x404e58
  403ec1:	mov    rcx,QWORD PTR [rip+0x7ba8]        # 0x40ba70
  403ec8:	lea    r12,[rax+0x1]
  403ecc:	mov    rdx,r12
  403ecf:	call   0x404ec0
  403ed4:	lea    rdx,[rip+0x3f67]        # 0x407e42
  403edb:	mov    r8,r12
  403ede:	mov    rcx,rax
  403ee1:	mov    rbx,rax
  403ee4:	mov    QWORD PTR [rip+0x7b85],rax        # 0x40ba70
  403eeb:	call   0x404e58
  403ef0:	mov    rdx,rsi
  403ef3:	mov    ecx,0x2
  403ef8:	call   0x404eb8
  403efd:	mov    rcx,rsi
  403f00:	call   0x404f28
  403f05:	mov    rax,rbx
  403f08:	mov    rsp,rdi
  403f0b:	lea    rsp,[rbp-0x58]
  403f0f:	pop    rbx
  403f10:	pop    rsi
  403f11:	pop    rdi
  403f12:	pop    r12
  403f14:	pop    r13
  403f16:	pop    rbp
  403f17:	ret    
  403f18:	nop    DWORD PTR [rax+rax*1+0x0]
  403f20:	mov    r9,r10
  403f23:	jmp    0x403df9
  403f28:	mov    r8,rax
  403f2b:	mov    rdx,r13
  403f2e:	mov    rcx,rbx
  403f31:	call   0x404e58
  403f36:	cmp    rax,0xffffffffffffffff
  403f3a:	je     0x403f40
  403f3c:	mov    BYTE PTR [rbx+rax*1],0x0
  403f40:	xor    ecx,ecx
  403f42:	xor    r8d,r8d
  403f45:	mov    rdx,r13
  403f48:	mov    WORD PTR [r12],cx
  403f4d:	xor    ecx,ecx
  403f4f:	call   0x404e58
  403f54:	lea    rdx,[rbx+rax*1]
  403f58:	cmp    rax,0xffffffffffffffff
  403f5c:	cmovne rbx,rdx
  403f60:	jmp    0x403ef0
  403f62:	movzx  r11d,WORD PTR [r9]
  403f66:	mov    r9,r10
  403f69:	jmp    0x403dfe
  403f6e:	nop
  403f6f:	nop
  403f70:	push   r13
  403f72:	push   r12
  403f74:	push   rbp
  403f75:	push   rdi
  403f76:	push   rsi
  403f77:	push   rbx
  403f78:	mov    r12d,edx
  403f7b:	mov    ebp,r8d
  403f7e:	mov    edi,edx
  403f80:	sub    r12d,ecx
  403f83:	sub    ebp,edx
  403f85:	mov    eax,r12d
  403f88:	cdq    
  403f89:	idiv   ebp
  403f8b:	test   edx,edx
  403f8d:	mov    r13d,edx
  403f90:	je     0x404015
  403f96:	mov    eax,ebp
  403f98:	jmp    0x403fa3
  403f9a:	nop    WORD PTR [rax+rax*1+0x0]
  403fa0:	mov    r13d,edx
  403fa3:	cdq    
  403fa4:	idiv   r13d
  403fa7:	mov    eax,r13d
  403faa:	test   edx,edx
  403fac:	jne    0x403fa0
  403fae:	mov    eax,r8d
  403fb1:	sub    eax,ecx
  403fb3:	cdq    
  403fb4:	idiv   r13d
  403fb7:	test   r13d,r13d
  403fba:	jle    0x40400c
  403fbc:	movsxd rdx,edi
  403fbf:	xor    esi,esi
  403fc1:	lea    rdx,[r9+rdx*8]
  403fc5:	test   eax,eax
  403fc7:	lea    ecx,[rdi+rsi*1]
  403fca:	jle    0x404003
  403fcc:	mov    rbx,QWORD PTR [rdx+rsi*8]
  403fd0:	xor    r10d,r10d
  403fd3:	mov    r11d,ecx
  403fd6:	lea    r8d,[rcx+rbp*1]
  403fda:	sub    r11d,r12d
  403fdd:	cmp    edi,ecx
  403fdf:	mov    ecx,r11d
  403fe2:	cmovg  ecx,r8d
  403fe6:	add    r10d,0x1
  403fea:	movsxd r11,ecx
  403fed:	cmp    r10d,eax
  403ff0:	lea    r8,[r9+r11*8]
  403ff4:	mov    r11,QWORD PTR [r8]
  403ff7:	mov    QWORD PTR [r8],rbx
  403ffa:	mov    QWORD PTR [rdx+rsi*8],r11
  403ffe:	mov    rbx,r11
  404001:	jne    0x403fd3
  404003:	add    rsi,0x1
  404007:	cmp    r13d,esi
  40400a:	jg     0x403fc5
  40400c:	pop    rbx
  40400d:	pop    rsi
  40400e:	pop    rdi
  40400f:	pop    rbp
  404010:	pop    r12
  404012:	pop    r13
  404014:	ret    
  404015:	mov    r13d,ebp
  404018:	jmp    0x403fae
  40401a:	nop    WORD PTR [rax+rax*1+0x0]
  404020:	push   rdi
  404021:	push   rsi
  404022:	push   rbx
  404023:	sub    rsp,0x30
  404027:	mov    rax,QWORD PTR [rip+0x40c2]        # 0x4080f0
  40402e:	mov    QWORD PTR [rsp+0x58],rdx
  404033:	mov    QWORD PTR [rsp+0x60],r8
  404038:	lea    rsi,[rsp+0x58]
  40403d:	mov    QWORD PTR [rsp+0x68],r9
  404042:	mov    rbx,rcx
  404045:	mov    rax,QWORD PTR [rax]
  404048:	mov    QWORD PTR [rsp+0x28],rsi
  40404d:	mov    rax,QWORD PTR [rax]
  404050:	mov    rdi,QWORD PTR [rax]
  404053:	call   0x404ff0
  404058:	lea    rdx,[rip+0x3e01]        # 0x407e60
  40405f:	lea    rcx,[rax+0x60]
  404063:	mov    r8,rdi
  404066:	call   0x404f38
  40406b:	test   rbx,rbx
  40406e:	je     0x404084
  404070:	call   0x404ff0
  404075:	lea    rcx,[rax+0x60]
  404079:	mov    r8,rsi
  40407c:	mov    rdx,rbx
  40407f:	call   0x404e68
  404084:	call   0x404ff0
  404089:	lea    rdx,[rax+0x60]
  40408d:	mov    ecx,0xa
  404092:	call   0x404f30
  404097:	nop
  404098:	add    rsp,0x30
  40409c:	pop    rbx
  40409d:	pop    rsi
  40409e:	pop    rdi
  40409f:	ret    
  4040a0:	push   r15
  4040a2:	push   r14
  4040a4:	push   r13
  4040a6:	push   r12
  4040a8:	push   rbp
  4040a9:	push   rdi
  4040aa:	push   rsi
  4040ab:	push   rbx
  4040ac:	sub    rsp,0x48
  4040b0:	mov    eax,DWORD PTR [rip+0x1fb6]        # 0x40606c
  4040b6:	mov    rbp,QWORD PTR [rip+0x1fa3]        # 0x406060
  4040bd:	mov    QWORD PTR [rsp+0x90],rcx
  4040c5:	mov    QWORD PTR [rsp+0x98],rdx
  4040cd:	mov    edx,0x3d
  4040d2:	mov    r14,r8
  4040d5:	mov    QWORD PTR [rsp+0xa8],r9
  4040dd:	mov    r13d,DWORD PTR [rsp+0xb0]
  4040e5:	mov    DWORD PTR [rsp+0x38],eax
  4040e9:	mov    rcx,rbp
  4040ec:	add    eax,0x1
  4040ef:	mov    DWORD PTR [rsp+0x3c],eax
  4040f3:	mov    DWORD PTR [rip+0x1f73],eax        # 0x40606c
  4040f9:	call   0x404e98
  4040fe:	test   rax,rax
  404101:	mov    QWORD PTR [rsp+0x30],rax
  404106:	je     0x4042e4
  40410c:	mov    rdi,rax
  40410f:	add    rax,0x1
  404113:	sub    rdi,rbp
  404116:	mov    QWORD PTR [rsp+0x30],rax
  40411b:	mov    r15,QWORD PTR [r14]
  40411e:	test   r15,r15
  404121:	je     0x40432b
  404127:	lea    rbx,[r14+0x20]
  40412b:	mov    r12d,0xffffffff
  404131:	mov    DWORD PTR [rsp+0x2c],0x0
  404139:	xor    esi,esi
  40413b:	jmp    0x404155
  40413d:	nop    DWORD PTR [rax]
  404140:	test   r13d,r13d
  404143:	je     0x40417e
  404145:	add    rbx,0x20
  404149:	mov    r15,QWORD PTR [rbx-0x20]
  40414d:	add    esi,0x1
  404150:	test   r15,r15
  404153:	je     0x4041c0
  404155:	mov    r8,rdi
  404158:	mov    rdx,r15
  40415b:	mov    rcx,rbp
  40415e:	call   0x404e78
  404163:	test   eax,eax
  404165:	jne    0x404145
  404167:	mov    rcx,r15
  40416a:	call   0x404e80
  40416f:	cmp    rax,rdi
  404172:	je     0x40426d
  404178:	cmp    rdi,0x1
  40417c:	je     0x404140
  40417e:	cmp    r12d,0xffffffff
  404182:	je     0x404220
  404188:	movsxd rax,r12d
  40418b:	shl    rax,0x5
  40418f:	add    rax,r14
  404192:	mov    edx,DWORD PTR [rax+0x8]
  404195:	cmp    DWORD PTR [rbx-0x18],edx
  404198:	je     0x404230
  40419e:	add    rbx,0x20
  4041a2:	mov    r15,QWORD PTR [rbx-0x20]
  4041a6:	add    esi,0x1
  4041a9:	mov    DWORD PTR [rsp+0x2c],0x1
  4041b1:	test   r15,r15
  4041b4:	jne    0x404155
  4041b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041c0:	mov    r9d,DWORD PTR [rsp+0x2c]
  4041c5:	test   r9d,r9d
  4041c8:	je     0x404260
  4041ce:	mov    r8d,DWORD PTR [rip+0x1e9b]        # 0x406070
  4041d5:	test   r8d,r8d
  4041d8:	je     0x4041f8
  4041da:	mov    rax,QWORD PTR [rsp+0x98]
  4041e2:	cmp    BYTE PTR [rax],0x3a
  4041e5:	je     0x4041f8
  4041e7:	lea    rcx,[rip+0x3d02]        # 0x407ef0
  4041ee:	mov    r8,rbp
  4041f1:	mov    edx,edi
  4041f3:	call   0x404020
  4041f8:	mov    DWORD PTR [rip+0x1e66],0x0        # 0x406068
  404202:	mov    eax,0x3f
  404207:	add    rsp,0x48
  40420b:	pop    rbx
  40420c:	pop    rsi
  40420d:	pop    rdi
  40420e:	pop    rbp
  40420f:	pop    r12
  404211:	pop    r13
  404213:	pop    r14
  404215:	pop    r15
  404217:	ret    
  404218:	nop    DWORD PTR [rax+rax*1+0x0]
  404220:	mov    r12d,esi
  404223:	jmp    0x404145
  404228:	nop    DWORD PTR [rax+rax*1+0x0]
  404230:	mov    rdx,QWORD PTR [rax+0x10]
  404234:	cmp    QWORD PTR [rbx-0x10],rdx
  404238:	jne    0x40419e
  40423e:	mov    eax,DWORD PTR [rax+0x18]
  404241:	cmp    DWORD PTR [rbx-0x8],eax
  404244:	mov    eax,0x1
  404249:	cmove  eax,DWORD PTR [rsp+0x2c]
  40424e:	mov    DWORD PTR [rsp+0x2c],eax
  404252:	jmp    0x404145
  404257:	nop    WORD PTR [rax+rax*1+0x0]
  404260:	cmp    r12d,0xffffffff
  404264:	je     0x40432b
  40426a:	mov    esi,r12d
  40426d:	movsxd rax,esi
  404270:	shl    rax,0x5
  404274:	add    r14,rax
  404277:	cmp    QWORD PTR [rsp+0x30],0x0
  40427d:	mov    eax,DWORD PTR [r14+0x8]
  404281:	setne  cl
  404284:	je     0x4042f4
  404286:	test   eax,eax
  404288:	jne    0x4042f4
  40428a:	mov    ecx,DWORD PTR [rip+0x1de0]        # 0x406070
  404290:	test   ecx,ecx
  404292:	jne    0x4042c4
  404294:	cmp    QWORD PTR [r14+0x10],0x0
  404299:	je     0x4043f4
  40429f:	mov    DWORD PTR [rip+0x1dbf],0x0        # 0x406068
  4042a9:	mov    rax,QWORD PTR [rsp+0x98]
  4042b1:	cmp    BYTE PTR [rax],0x3a
  4042b4:	je     0x4043e1
  4042ba:	mov    eax,0x3f
  4042bf:	jmp    0x404207
  4042c4:	mov    rax,QWORD PTR [rsp+0x98]
  4042cc:	cmp    BYTE PTR [rax],0x3a
  4042cf:	je     0x404294
  4042d1:	lea    rcx,[rip+0x3be8]        # 0x407ec0
  4042d8:	mov    r8,rbp
  4042db:	mov    edx,edi
  4042dd:	call   0x404020
  4042e2:	jmp    0x404294
  4042e4:	mov    rcx,rbp
  4042e7:	call   0x404e80
  4042ec:	mov    rdi,rax
  4042ef:	jmp    0x40411b
  4042f4:	lea    edx,[rax-0x1]
  4042f7:	cmp    edx,0x1
  4042fa:	jbe    0x404367
  4042fc:	cmp    QWORD PTR [rsp+0xa8],0x0
  404305:	je     0x404311
  404307:	mov    rax,QWORD PTR [rsp+0xa8]
  40430f:	mov    DWORD PTR [rax],esi
  404311:	mov    rax,QWORD PTR [r14+0x10]
  404315:	test   rax,rax
  404318:	je     0x4043eb
  40431e:	mov    edx,DWORD PTR [r14+0x18]
  404322:	mov    DWORD PTR [rax],edx
  404324:	xor    eax,eax
  404326:	jmp    0x404207
  40432b:	test   r13d,r13d
  40432e:	jne    0x404442
  404334:	mov    eax,DWORD PTR [rip+0x1d36]        # 0x406070
  40433a:	test   eax,eax
  40433c:	je     0x4041f8
  404342:	mov    rax,QWORD PTR [rsp+0x98]
  40434a:	cmp    BYTE PTR [rax],0x3a
  40434d:	je     0x4041f8
  404353:	lea    rcx,[rip+0x3b26]        # 0x407e80
  40435a:	mov    rdx,rbp
  40435d:	call   0x404020
  404362:	jmp    0x4041f8
  404367:	test   cl,cl
  404369:	je     0x404403
  40436f:	mov    rdx,QWORD PTR [rsp+0x30]
  404374:	cmp    eax,0x1
  404377:	mov    QWORD PTR [rip+0x7862],rdx        # 0x40bbe0
  40437e:	jne    0x4042fc
  404384:	mov    r15,QWORD PTR [rsp+0x30]
  404389:	test   r15,r15
  40438c:	jne    0x4042fc
  404392:	mov    edx,DWORD PTR [rip+0x1cd8]        # 0x406070
  404398:	test   edx,edx
  40439a:	je     0x4043b8
  40439c:	mov    rax,QWORD PTR [rsp+0x98]
  4043a4:	cmp    BYTE PTR [rax],0x3a
  4043a7:	je     0x4043b8
  4043a9:	lea    rcx,[rip+0x3b70]        # 0x407f20
  4043b0:	mov    rdx,rbp
  4043b3:	call   0x404020
  4043b8:	cmp    QWORD PTR [r14+0x10],0x0
  4043bd:	je     0x404436
  4043bf:	mov    DWORD PTR [rip+0x1c9f],0x0        # 0x406068
  4043c9:	mov    rax,QWORD PTR [rsp+0x98]
  4043d1:	sub    DWORD PTR [rip+0x1c94],0x1        # 0x40606c
  4043d8:	cmp    BYTE PTR [rax],0x3a
  4043db:	jne    0x4042ba
  4043e1:	mov    eax,0x3a
  4043e6:	jmp    0x404207
  4043eb:	mov    eax,DWORD PTR [r14+0x18]
  4043ef:	jmp    0x404207
  4043f4:	mov    eax,DWORD PTR [r14+0x18]
  4043f8:	mov    DWORD PTR [rip+0x1c6a],eax        # 0x406068
  4043fe:	jmp    0x4042a9
  404403:	cmp    eax,0x1
  404406:	jne    0x4042fc
  40440c:	mov    eax,DWORD PTR [rsp+0x38]
  404410:	mov    rdx,QWORD PTR [rsp+0x90]
  404418:	add    eax,0x2
  40441b:	mov    DWORD PTR [rip+0x1c4b],eax        # 0x40606c
  404421:	movsxd rax,DWORD PTR [rsp+0x3c]
  404426:	mov    r15,QWORD PTR [rdx+rax*8]
  40442a:	mov    QWORD PTR [rip+0x77af],r15        # 0x40bbe0
  404431:	jmp    0x404389
  404436:	mov    eax,DWORD PTR [r14+0x18]
  40443a:	mov    DWORD PTR [rip+0x1c28],eax        # 0x406068
  404440:	jmp    0x4043c9
  404442:	mov    eax,DWORD PTR [rsp+0x38]
  404446:	mov    DWORD PTR [rip+0x1c20],eax        # 0x40606c
  40444c:	mov    eax,0xffffffff
  404451:	jmp    0x404207
  404456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404460:	push   r15
  404462:	push   r14
  404464:	push   r13
  404466:	push   r12
  404468:	push   rbp
  404469:	push   rdi
  40446a:	push   rsi
  40446b:	push   rbx
  40446c:	sub    rsp,0x38
  404470:	test   r8,r8
  404473:	mov    edi,ecx
  404475:	mov    r15,rdx
  404478:	mov    QWORD PTR [rsp+0x90],r8
  404480:	mov    QWORD PTR [rsp+0x98],r9
  404488:	je     0x40475e
  40448e:	mov    r9d,DWORD PTR [rip+0x1bd7]        # 0x40606c
  404495:	test   r9d,r9d
  404498:	je     0x4046f0
  40449e:	cmp    DWORD PTR [rip+0x1bab],0xffffffff        # 0x406050
  4044a5:	je     0x404664
  4044ab:	mov    edx,DWORD PTR [rip+0x7737]        # 0x40bbe8
  4044b1:	test   edx,edx
  4044b3:	jne    0x404664
  4044b9:	mov    rax,QWORD PTR [rsp+0x90]
  4044c1:	movzx  eax,BYTE PTR [rax]
  4044c4:	cmp    al,0x2d
  4044c6:	je     0x404698
  4044cc:	cmp    al,0x2b
  4044ce:	je     0x404774
  4044d4:	mov    r8d,DWORD PTR [rip+0x1b75]        # 0x406050
  4044db:	test   r8d,r8d
  4044de:	jne    0x404774
  4044e4:	sub    eax,0x2b
  4044e7:	test   al,0xfd
  4044e9:	je     0x4046a0
  4044ef:	test   edx,edx
  4044f1:	mov    QWORD PTR [rip+0x76e4],0x0        # 0x40bbe0
  4044fc:	jne    0x4046d0
  404502:	mov    r14d,DWORD PTR [rsp+0xa8]
  40450a:	mov    ebp,DWORD PTR [rsp+0xa8]
  404511:	and    r14d,0x2
  404515:	and    ebp,0x1
  404518:	jmp    0x40459e
  40451d:	nop    DWORD PTR [rax]
  404520:	lea    rax,[rip+0x394e]        # 0x407e75
  404527:	test   r14d,r14d
  40452a:	mov    edx,r14d
  40452d:	mov    QWORD PTR [rip+0x1b2c],rax        # 0x406060
  404534:	jne    0x404840
  40453a:	test   ebp,ebp
  40453c:	je     0x40475e
  404542:	mov    r12d,DWORD PTR [rip+0x1b0f]        # 0x406058
  404549:	cmp    r12d,0xffffffff
  40454d:	je     0x4046c0
  404553:	mov    r13d,DWORD PTR [rip+0x1afa]        # 0x406054
  40455a:	cmp    r13d,0xffffffff
  40455e:	je     0x404595
  404560:	mov    edx,r13d
  404563:	mov    r9,r15
  404566:	mov    r8d,ebx
  404569:	mov    ecx,r12d
  40456c:	call   0x403f70
  404571:	mov    esi,DWORD PTR [rip+0x1af5]        # 0x40606c
  404577:	mov    eax,r12d
  40457a:	mov    edx,DWORD PTR [rip+0x7668]        # 0x40bbe8
  404580:	sub    eax,r13d
  404583:	mov    DWORD PTR [rip+0x1ac7],0xffffffff        # 0x406054
  40458d:	add    eax,esi
  40458f:	mov    DWORD PTR [rip+0x1ac3],eax        # 0x406058
  404595:	add    esi,0x1
  404598:	mov    DWORD PTR [rip+0x1ace],esi        # 0x40606c
  40459e:	test   edx,edx
  4045a0:	jne    0x4045b4
  4045a2:	mov    rsi,QWORD PTR [rip+0x1ab7]        # 0x406060
  4045a9:	movzx  eax,BYTE PTR [rsi]
  4045ac:	test   al,al
  4045ae:	jne    0x4047ae
  4045b4:	movsxd rbx,DWORD PTR [rip+0x1ab1]        # 0x40606c
  4045bb:	mov    DWORD PTR [rip+0x7623],0x0        # 0x40bbe8
  4045c5:	cmp    ebx,edi
  4045c7:	mov    esi,ebx
  4045c9:	jge    0x404710
  4045cf:	movsxd rax,ebx
  4045d2:	mov    r13,QWORD PTR [r15+rax*8]
  4045d6:	cmp    BYTE PTR [r13+0x0],0x2d
  4045db:	mov    QWORD PTR [rip+0x1a7e],r13        # 0x406060
  4045e2:	jne    0x404520
  4045e8:	movzx  eax,BYTE PTR [r13+0x1]
  4045ed:	test   al,al
  4045ef:	jne    0x404781
  4045f5:	mov    rcx,QWORD PTR [rsp+0x90]
  4045fd:	mov    edx,0x2d
  404602:	call   0x404e98
  404607:	test   rax,rax
  40460a:	je     0x404520
  404610:	cmp    DWORD PTR [rip+0x1a41],0xffffffff        # 0x406058
  404617:	mov    rsi,r13
  40461a:	je     0x404634
  40461c:	cmp    DWORD PTR [rip+0x1a31],0xffffffff        # 0x406054
  404623:	mov    eax,0x2d
  404628:	jne    0x4047ae
  40462e:	mov    DWORD PTR [rip+0x1a20],ebx        # 0x406054
  404634:	cmp    QWORD PTR [rsp+0x98],0x0
  40463d:	je     0x404a2c
  404643:	cmp    rsi,QWORD PTR [r15+rbx*8]
  404647:	mov    eax,0x2d
  40464c:	je     0x40487e
  404652:	add    rsi,0x1
  404656:	xor    edx,edx
  404658:	mov    QWORD PTR [rip+0x1a01],rsi        # 0x406060
  40465f:	jmp    0x404802
  404664:	lea    rcx,[rip+0x37fa]        # 0x407e65
  40466b:	call   0x404f08
  404670:	test   rax,rax
  404673:	mov    edx,DWORD PTR [rip+0x756f]        # 0x40bbe8
  404679:	setne  al
  40467c:	movzx  eax,al
  40467f:	mov    DWORD PTR [rip+0x19cb],eax        # 0x406050
  404685:	mov    rax,QWORD PTR [rsp+0x90]
  40468d:	movzx  eax,BYTE PTR [rax]
  404690:	cmp    al,0x2d
  404692:	jne    0x4044cc
  404698:	or     DWORD PTR [rsp+0xa8],0x2
  4046a0:	add    QWORD PTR [rsp+0x90],0x1
  4046a9:	test   edx,edx
  4046ab:	mov    QWORD PTR [rip+0x752a],0x0        # 0x40bbe0
  4046b6:	je     0x404502
  4046bc:	jmp    0x4046d0
  4046be:	xchg   ax,ax
  4046c0:	mov    DWORD PTR [rip+0x1992],ebx        # 0x406058
  4046c6:	jmp    0x404595
  4046cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d0:	mov    DWORD PTR [rip+0x197a],0xffffffff        # 0x406054
  4046da:	mov    DWORD PTR [rip+0x1974],0xffffffff        # 0x406058
  4046e4:	jmp    0x404502
  4046e9:	nop    DWORD PTR [rax+0x0]
  4046f0:	mov    DWORD PTR [rip+0x74ee],0x1        # 0x40bbe8
  4046fa:	mov    DWORD PTR [rip+0x1968],0x1        # 0x40606c
  404704:	jmp    0x40449e
  404709:	nop    DWORD PTR [rax+0x0]
  404710:	mov    esi,DWORD PTR [rip+0x193e]        # 0x406054
  404716:	lea    rax,[rip+0x3758]        # 0x407e75
  40471d:	mov    QWORD PTR [rip+0x193c],rax        # 0x406060
  404724:	cmp    esi,0xffffffff
  404727:	je     0x40485a
  40472d:	mov    edi,DWORD PTR [rip+0x1925]        # 0x406058
  404733:	mov    r9,r15
  404736:	mov    r8d,ebx
  404739:	mov    edx,esi
  40473b:	mov    ecx,edi
  40473d:	sub    edi,esi
  40473f:	call   0x403f70
  404744:	add    DWORD PTR [rip+0x1922],edi        # 0x40606c
  40474a:	mov    DWORD PTR [rip+0x1900],0xffffffff        # 0x406054
  404754:	mov    DWORD PTR [rip+0x18fa],0xffffffff        # 0x406058
  40475e:	mov    eax,0xffffffff
  404763:	add    rsp,0x38
  404767:	pop    rbx
  404768:	pop    rsi
  404769:	pop    rdi
  40476a:	pop    rbp
  40476b:	pop    r12
  40476d:	pop    r13
  40476f:	pop    r14
  404771:	pop    r15
  404773:	ret    
  404774:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40477c:	jmp    0x4044e4
  404781:	mov    ebp,DWORD PTR [rip+0x18d1]        # 0x406058
  404787:	cmp    ebp,0xffffffff
  40478a:	je     0x40479b
  40478c:	cmp    DWORD PTR [rip+0x18c1],0xffffffff        # 0x406054
  404793:	jne    0x40479b
  404795:	mov    DWORD PTR [rip+0x18b9],ebx        # 0x406054
  40479b:	lea    rsi,[r13+0x1]
  40479f:	cmp    al,0x2d
  4047a1:	mov    QWORD PTR [rip+0x18b8],rsi        # 0x406060
  4047a8:	je     0x40495f
  4047ae:	cmp    QWORD PTR [rsp+0x98],0x0
  4047b7:	je     0x40487e
  4047bd:	movsxd rdx,DWORD PTR [rip+0x18a8]        # 0x40606c
  4047c4:	cmp    rsi,QWORD PTR [r15+rdx*8]
  4047c8:	je     0x40487e
  4047ce:	cmp    al,0x2d
  4047d0:	je     0x404652
  4047d6:	test   BYTE PTR [rsp+0xa8],0x4
  4047de:	je     0x40487e
  4047e4:	xor    edx,edx
  4047e6:	cmp    al,0x3a
  4047e8:	je     0x404802
  4047ea:	mov    rcx,QWORD PTR [rsp+0x90]
  4047f2:	movsx  edx,al
  4047f5:	call   0x404e98
  4047fa:	xor    edx,edx
  4047fc:	test   rax,rax
  4047ff:	setne  dl
  404802:	mov    DWORD PTR [rsp+0x20],edx
  404806:	mov    r9,QWORD PTR [rsp+0xa0]
  40480e:	mov    rcx,r15
  404811:	mov    r8,QWORD PTR [rsp+0x98]
  404819:	mov    rdx,QWORD PTR [rsp+0x90]
  404821:	call   0x4040a0
  404826:	cmp    eax,0xffffffff
  404829:	je     0x404874
  40482b:	lea    rcx,[rip+0x3643]        # 0x407e75
  404832:	mov    QWORD PTR [rip+0x1827],rcx        # 0x406060
  404839:	jmp    0x404763
  40483e:	xchg   ax,ax
  404840:	add    ebx,0x1
  404843:	mov    QWORD PTR [rip+0x7396],r13        # 0x40bbe0
  40484a:	mov    eax,0x1
  40484f:	mov    DWORD PTR [rip+0x1817],ebx        # 0x40606c
  404855:	jmp    0x404763
  40485a:	mov    eax,DWORD PTR [rip+0x17f8]        # 0x406058
  404860:	cmp    eax,0xffffffff
  404863:	je     0x40474a
  404869:	mov    DWORD PTR [rip+0x17fd],eax        # 0x40606c
  40486f:	jmp    0x40474a
  404874:	mov    rsi,QWORD PTR [rip+0x17e5]        # 0x406060
  40487b:	movzx  eax,BYTE PTR [rsi]
  40487e:	lea    rbp,[rsi+0x1]
  404882:	movsx  ebx,al
  404885:	cmp    ebx,0x3a
  404888:	mov    QWORD PTR [rip+0x17d1],rbp        # 0x406060
  40488f:	je     0x4048f4
  404891:	cmp    ebx,0x2d
  404894:	je     0x404a37
  40489a:	mov    rcx,QWORD PTR [rsp+0x90]
  4048a2:	mov    edx,ebx
  4048a4:	call   0x404e98
  4048a9:	test   rax,rax
  4048ac:	je     0x4048f4
  4048ae:	cmp    ebx,0x57
  4048b1:	jne    0x404956
  4048b7:	cmp    QWORD PTR [rsp+0x98],0x0
  4048c0:	je     0x404956
  4048c6:	movzx  edx,BYTE PTR [rax+0x1]
  4048ca:	cmp    dl,0x3b
  4048cd:	je     0x4049b0
  4048d3:	cmp    dl,0x3a
  4048d6:	je     0x404a4b
  4048dc:	cmp    BYTE PTR [rsi+0x1],0x0
  4048e0:	mov    eax,ebx
  4048e2:	jne    0x404763
  4048e8:	add    DWORD PTR [rip+0x177d],0x1        # 0x40606c
  4048ef:	jmp    0x404763
  4048f4:	cmp    BYTE PTR [rsi+0x1],0x0
  4048f8:	jne    0x404901
  4048fa:	add    DWORD PTR [rip+0x176b],0x1        # 0x40606c
  404901:	mov    ecx,DWORD PTR [rip+0x1769]        # 0x406070
  404907:	test   ecx,ecx
  404909:	je     0x404926
  40490b:	mov    rax,QWORD PTR [rsp+0x90]
  404913:	cmp    BYTE PTR [rax],0x3a
  404916:	je     0x404926
  404918:	lea    rcx,[rip+0x3581]        # 0x407ea0
  40491f:	mov    edx,ebx
  404921:	call   0x404020
  404926:	mov    DWORD PTR [rip+0x173c],ebx        # 0x406068
  40492c:	mov    eax,0x3f
  404931:	jmp    0x404763
  404936:	mov    rcx,QWORD PTR [rsp+0x90]
  40493e:	mov    edx,0x2d
  404943:	call   0x404e98
  404948:	test   rax,rax
  40494b:	je     0x40475e
  404951:	mov    ebx,0x2d
  404956:	movzx  edx,BYTE PTR [rax+0x1]
  40495a:	jmp    0x4048d3
  40495f:	cmp    BYTE PTR [r13+0x2],0x0
  404964:	jne    0x404634
  40496a:	mov    esi,DWORD PTR [rip+0x16e4]        # 0x406054
  404970:	lea    r8d,[rbx+0x1]
  404974:	lea    rax,[rip+0x34fa]        # 0x407e75
  40497b:	mov    DWORD PTR [rip+0x16ea],r8d        # 0x40606c
  404982:	mov    QWORD PTR [rip+0x16d7],rax        # 0x406060
  404989:	cmp    esi,0xffffffff
  40498c:	je     0x40474a
  404992:	mov    ecx,ebp
  404994:	mov    r9,r15
  404997:	mov    edx,esi
  404999:	call   0x403f70
  40499e:	sub    ebp,esi
  4049a0:	add    DWORD PTR [rip+0x16c6],ebp        # 0x40606c
  4049a6:	jmp    0x40474a
  4049ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4049b0:	cmp    BYTE PTR [rsi+0x1],0x0
  4049b4:	jne    0x404b05
  4049ba:	mov    eax,DWORD PTR [rip+0x16ac]        # 0x40606c
  4049c0:	add    eax,0x1
  4049c3:	cmp    edi,eax
  4049c5:	mov    DWORD PTR [rip+0x16a1],eax        # 0x40606c
  4049cb:	jg     0x404af8
  4049d1:	mov    edx,DWORD PTR [rip+0x1699]        # 0x406070
  4049d7:	lea    rax,[rip+0x3497]        # 0x407e75
  4049de:	mov    QWORD PTR [rip+0x167b],rax        # 0x406060
  4049e5:	test   edx,edx
  4049e7:	je     0x404a07
  4049e9:	mov    rax,QWORD PTR [rsp+0x90]
  4049f1:	cmp    BYTE PTR [rax],0x3a
  4049f4:	je     0x404a07
  4049f6:	lea    rcx,[rip+0x3563]        # 0x407f60
  4049fd:	mov    edx,0x57
  404a02:	call   0x404020
  404a07:	mov    rax,QWORD PTR [rsp+0x90]
  404a0f:	mov    DWORD PTR [rip+0x164f],0x57        # 0x406068
  404a19:	cmp    BYTE PTR [rax],0x3a
  404a1c:	je     0x404aee
  404a22:	mov    eax,0x3f
  404a27:	jmp    0x404763
  404a2c:	lea    rbp,[rsi+0x1]
  404a30:	mov    QWORD PTR [rip+0x1629],rbp        # 0x406060
  404a37:	cmp    BYTE PTR [rsi+0x1],0x0
  404a3b:	je     0x404936
  404a41:	mov    ebx,0x2d
  404a46:	jmp    0x404901
  404a4b:	mov    QWORD PTR [rip+0x718a],0x0        # 0x40bbe0
  404a56:	cmp    BYTE PTR [rsi+0x1],0x0
  404a5a:	je     0x404a87
  404a5c:	mov    eax,DWORD PTR [rip+0x160a]        # 0x40606c
  404a62:	mov    QWORD PTR [rip+0x7177],rbp        # 0x40bbe0
  404a69:	lea    rcx,[rip+0x3405]        # 0x407e75
  404a70:	add    eax,0x1
  404a73:	mov    DWORD PTR [rip+0x15f3],eax        # 0x40606c
  404a79:	mov    eax,ebx
  404a7b:	mov    QWORD PTR [rip+0x15de],rcx        # 0x406060
  404a82:	jmp    0x404763
  404a87:	cmp    BYTE PTR [rax+0x2],0x3a
  404a8b:	mov    eax,DWORD PTR [rip+0x15db]        # 0x40606c
  404a91:	je     0x404a69
  404a93:	add    eax,0x1
  404a96:	cmp    edi,eax
  404a98:	mov    DWORD PTR [rip+0x15ce],eax        # 0x40606c
  404a9e:	jg     0x404b32
  404aa4:	lea    rax,[rip+0x33ca]        # 0x407e75
  404aab:	mov    QWORD PTR [rip+0x15ae],rax        # 0x406060
  404ab2:	mov    eax,DWORD PTR [rip+0x15b8]        # 0x406070
  404ab8:	test   eax,eax
  404aba:	je     0x404ad7
  404abc:	mov    rax,QWORD PTR [rsp+0x90]
  404ac4:	cmp    BYTE PTR [rax],0x3a
  404ac7:	je     0x404ad7
  404ac9:	lea    rcx,[rip+0x3490]        # 0x407f60
  404ad0:	mov    edx,ebx
  404ad2:	call   0x404020
  404ad7:	mov    rax,QWORD PTR [rsp+0x90]
  404adf:	mov    DWORD PTR [rip+0x1583],ebx        # 0x406068
  404ae5:	cmp    BYTE PTR [rax],0x3a
  404ae8:	jne    0x404a22
  404aee:	mov    eax,0x3a
  404af3:	jmp    0x404763
  404af8:	cdqe   
  404afa:	mov    rax,QWORD PTR [r15+rax*8]
  404afe:	mov    QWORD PTR [rip+0x155b],rax        # 0x406060
  404b05:	mov    r9,QWORD PTR [rsp+0xa0]
  404b0d:	mov    r8,QWORD PTR [rsp+0x98]
  404b15:	mov    rcx,r15
  404b18:	mov    rdx,QWORD PTR [rsp+0x90]
  404b20:	mov    DWORD PTR [rsp+0x20],0x0
  404b28:	call   0x4040a0
  404b2d:	jmp    0x40482b
  404b32:	movsxd rdx,eax
  404b35:	mov    rdx,QWORD PTR [r15+rdx*8]
  404b39:	mov    QWORD PTR [rip+0x70a0],rdx        # 0x40bbe0
  404b40:	jmp    0x404a69
  404b45:	nop
  404b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b50:	sub    rsp,0x38
  404b54:	xor    r9d,r9d
  404b57:	mov    DWORD PTR [rsp+0x28],0x0
  404b5f:	mov    QWORD PTR [rsp+0x20],0x0
  404b68:	call   0x404460
  404b6d:	add    rsp,0x38
  404b71:	ret    
  404b72:	nop    DWORD PTR [rax+0x0]
  404b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b80:	sub    rsp,0x38
  404b84:	mov    rax,QWORD PTR [rsp+0x60]
  404b89:	mov    DWORD PTR [rsp+0x28],0x1
  404b91:	mov    QWORD PTR [rsp+0x20],rax
  404b96:	call   0x404460
  404b9b:	add    rsp,0x38
  404b9f:	ret    
  404ba0:	sub    rsp,0x38
  404ba4:	mov    rax,QWORD PTR [rsp+0x60]
  404ba9:	mov    DWORD PTR [rsp+0x28],0x5
  404bb1:	mov    QWORD PTR [rsp+0x20],rax
  404bb6:	call   0x404460
  404bbb:	add    rsp,0x38
  404bbf:	ret    
  404bc0:	push   r12
  404bc2:	push   rbp
  404bc3:	push   rdi
  404bc4:	push   rsi
  404bc5:	push   rbx
  404bc6:	sub    rsp,0x250
  404bcd:	mov    rbx,rdx
  404bd0:	mov    rsi,rcx
  404bd3:	mov    ecx,0x4000
  404bd8:	mov    r12d,r8d
  404bdb:	call   0x404ef8
  404be0:	test   rbx,rbx
  404be3:	mov    rbp,rax
  404be6:	je     0x404cb0
  404bec:	cmp    WORD PTR [rbx],0x0
  404bf0:	lea    rax,[rip+0x33a9]        # 0x407fa0
  404bf7:	cmove  rbx,rax
  404bfb:	test   rsi,rsi
  404bfe:	je     0x404ca1
  404c04:	cmp    WORD PTR [rsi],0x0
  404c08:	lea    rax,[rip+0x33a5]        # 0x407fb4
  404c0f:	cmove  rsi,rax
  404c13:	lea    rdi,[rsp+0x40]
  404c18:	xor    ecx,ecx
  404c1a:	mov    r8d,0x104
  404c20:	mov    rdx,rdi
  404c23:	call   QWORD PTR [rip+0x77d7]        # 0x40c400
  404c29:	test   eax,eax
  404c2b:	je     0x404c90
  404c2d:	lea    r8,[rip+0x3384]        # 0x407fb8
  404c34:	mov    QWORD PTR [rsp+0x30],rsi
  404c39:	mov    DWORD PTR [rsp+0x28],r12d
  404c3e:	mov    QWORD PTR [rsp+0x20],rbx
  404c43:	mov    r9,rdi
  404c46:	mov    edx,0x1fff
  404c4b:	mov    rcx,rbp
  404c4e:	call   0x404f98
  404c53:	mov    rax,QWORD PTR [rip+0x35c6]        # 0x408220
  404c5a:	mov    eax,DWORD PTR [rax]
  404c5c:	test   eax,eax
  404c5e:	je     0x404cd5
  404c60:	xor    ecx,ecx
  404c62:	mov    r9d,0x12012
  404c68:	lea    r8,[rip+0x33e1]        # 0x408050
  404c6f:	mov    rdx,rbp
  404c72:	call   QWORD PTR [rip+0x7a90]        # 0x40c708
  404c78:	cmp    eax,0x3
  404c7b:	je     0x404cc1
  404c7d:	cmp    eax,0x5
  404c80:	jne    0x404cbc
  404c82:	add    rsp,0x250
  404c89:	pop    rbx
  404c8a:	pop    rsi
  404c8b:	pop    rdi
  404c8c:	pop    rbp
  404c8d:	pop    r12
  404c8f:	ret    
  404c90:	lea    rdx,[rip+0x3309]        # 0x407fa0
  404c97:	mov    rcx,rdi
  404c9a:	call   0x404e60
  404c9f:	jmp    0x404c2d
  404ca1:	lea    rsi,[rip+0x330c]        # 0x407fb4
  404ca8:	jmp    0x404c13
  404cad:	nop    DWORD PTR [rax]
  404cb0:	lea    rbx,[rip+0x32e9]        # 0x407fa0
  404cb7:	jmp    0x404bfb
  404cbc:	call   0x404f70
  404cc1:	mov    ecx,0x16
  404cc6:	call   0x404ec8
  404ccb:	mov    ecx,0x3
  404cd0:	call   0x404fb8
  404cd5:	call   0x404ff0
  404cda:	lea    rdx,[rip+0x335f]        # 0x408040
  404ce1:	lea    rcx,[rax+0x60]
  404ce5:	mov    r8,rbp
  404ce8:	call   0x404f18
  404ced:	call   0x404f70
  404cf2:	nop
  404cf3:	nop    DWORD PTR [rax]
  404cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d00:	push   rbp
  404d01:	push   rdi
  404d02:	push   rsi
  404d03:	push   rbx
  404d04:	sub    rsp,0x38
  404d08:	mov    rdi,rdx
  404d0b:	mov    DWORD PTR [rsp+0x2c],r8d
  404d10:	mov    rbp,rcx
  404d13:	call   0x404e80
  404d18:	lea    rcx,[rax+rax*1+0x2]
  404d1d:	call   0x404ef8
  404d22:	mov    rcx,rdi
  404d25:	mov    rsi,rax
  404d28:	call   0x404e80
  404d2d:	lea    rcx,[rax+rax*1+0x2]
  404d32:	call   0x404ef8
  404d37:	movzx  r9d,BYTE PTR [rbp+0x0]
  404d3c:	xor    r10d,r10d
  404d3f:	mov    rbx,rax
  404d42:	mov    r8d,DWORD PTR [rsp+0x2c]
  404d47:	test   r9b,r9b
  404d4a:	je     0x404d67
  404d4c:	nop    DWORD PTR [rax+0x0]
  404d50:	mov    WORD PTR [rsi+r10*2],r9w
  404d55:	add    r10,0x1
  404d59:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  404d5f:	test   r9b,r9b
  404d62:	jne    0x404d50
  404d64:	add    r10,r10
  404d67:	movzx  r9d,BYTE PTR [rdi]
  404d6b:	xor    edx,edx
  404d6d:	mov    WORD PTR [rsi+r10*1],dx
  404d72:	xor    r10d,r10d
  404d75:	test   r9b,r9b
  404d78:	je     0x404d96
  404d7a:	nop    WORD PTR [rax+rax*1+0x0]
  404d80:	mov    WORD PTR [rbx+r10*2],r9w
  404d85:	add    r10,0x1
  404d89:	movzx  r9d,BYTE PTR [rdi+r10*1]
  404d8e:	test   r9b,r9b
  404d91:	jne    0x404d80
  404d93:	add    r10,r10
  404d96:	xor    eax,eax
  404d98:	mov    rdx,rbx
  404d9b:	mov    rcx,rsi
  404d9e:	mov    WORD PTR [rbx+r10*1],ax
  404da3:	call   0x404bc0
  404da8:	mov    rcx,rsi
  404dab:	call   0x404f28
  404db0:	mov    rcx,rbx
  404db3:	add    rsp,0x38
  404db7:	pop    rbx
  404db8:	pop    rsi
  404db9:	pop    rdi
  404dba:	pop    rbp
  404dbb:	jmp    0x404f28
  404dc0:	push   r12
  404dc2:	push   rbp
  404dc3:	push   rdi
  404dc4:	push   rsi
  404dc5:	push   rbx
  404dc6:	sub    rsp,0x30
  404dca:	lea    rsi,[rsp+0x70]
  404dcf:	mov    QWORD PTR [rsp+0x70],r8
  404dd4:	mov    QWORD PTR [rsp+0x78],r9
  404dd9:	mov    r8,rdx
  404ddc:	mov    r12,rcx
  404ddf:	mov    rbp,rdx
  404de2:	xor    ecx,ecx
  404de4:	xor    edx,edx
  404de6:	mov    r9,rsi
  404de9:	mov    QWORD PTR [rsp+0x28],rsi
  404dee:	call   0x404f78
  404df3:	test   eax,eax
  404df5:	mov    ebx,eax
  404df7:	js     0x404e2c
  404df9:	lea    edi,[rax+0x1]
  404dfc:	movsxd rdi,edi
  404dff:	mov    rcx,rdi
  404e02:	call   0x404ef8
  404e07:	test   rax,rax
  404e0a:	mov    QWORD PTR [r12],rax
  404e0e:	je     0x404e40
  404e10:	mov    rdx,rdi
  404e13:	mov    r9,rsi
  404e16:	mov    r8,rbp
  404e19:	mov    rcx,rax
  404e1c:	call   0x404f78
  404e21:	mov    rdx,QWORD PTR [r12]
  404e25:	movsxd rax,ebx
  404e28:	mov    BYTE PTR [rdx+rax*1],0x0
  404e2c:	mov    eax,ebx
  404e2e:	add    rsp,0x30
  404e32:	pop    rbx
  404e33:	pop    rsi
  404e34:	pop    rdi
  404e35:	pop    rbp
  404e36:	pop    r12
  404e38:	ret    
  404e39:	nop    DWORD PTR [rax+0x0]
  404e40:	mov    ebx,0xffffffff
  404e45:	jmp    0x404e2c
  404e47:	nop
  404e48:	nop
  404e49:	nop
  404e4a:	nop
  404e4b:	nop
  404e4c:	nop
  404e4d:	nop
  404e4e:	nop
  404e4f:	nop
  404e50:	jmp    QWORD PTR [rip+0x781a]        # 0x40c670
  404e56:	nop
  404e57:	nop
  404e58:	jmp    QWORD PTR [rip+0x780a]        # 0x40c668
  404e5e:	nop
  404e5f:	nop
  404e60:	jmp    QWORD PTR [rip+0x77fa]        # 0x40c660
  404e66:	nop
  404e67:	nop
  404e68:	jmp    QWORD PTR [rip+0x77ea]        # 0x40c658
  404e6e:	nop
  404e6f:	nop
  404e70:	jmp    QWORD PTR [rip+0x77da]        # 0x40c650
  404e76:	nop
  404e77:	nop
  404e78:	jmp    QWORD PTR [rip+0x77ca]        # 0x40c648
  404e7e:	nop
  404e7f:	nop
  404e80:	jmp    QWORD PTR [rip+0x77ba]        # 0x40c640
  404e86:	nop
  404e87:	nop
  404e88:	jmp    QWORD PTR [rip+0x77aa]        # 0x40c638
  404e8e:	nop
  404e8f:	nop
  404e90:	jmp    QWORD PTR [rip+0x779a]        # 0x40c630
  404e96:	nop
  404e97:	nop
  404e98:	jmp    QWORD PTR [rip+0x778a]        # 0x40c628
  404e9e:	nop
  404e9f:	nop
  404ea0:	jmp    QWORD PTR [rip+0x777a]        # 0x40c620
  404ea6:	nop
  404ea7:	nop
  404ea8:	jmp    QWORD PTR [rip+0x776a]        # 0x40c618
  404eae:	nop
  404eaf:	nop
  404eb0:	jmp    QWORD PTR [rip+0x775a]        # 0x40c610
  404eb6:	nop
  404eb7:	nop
  404eb8:	jmp    QWORD PTR [rip+0x774a]        # 0x40c608
  404ebe:	nop
  404ebf:	nop
  404ec0:	jmp    QWORD PTR [rip+0x773a]        # 0x40c600
  404ec6:	nop
  404ec7:	nop
  404ec8:	jmp    QWORD PTR [rip+0x772a]        # 0x40c5f8
  404ece:	nop
  404ecf:	nop
  404ed0:	jmp    QWORD PTR [rip+0x771a]        # 0x40c5f0
  404ed6:	nop
  404ed7:	nop
  404ed8:	jmp    QWORD PTR [rip+0x770a]        # 0x40c5e8
  404ede:	nop
  404edf:	nop
  404ee0:	jmp    QWORD PTR [rip+0x76fa]        # 0x40c5e0
  404ee6:	nop
  404ee7:	nop
  404ee8:	jmp    QWORD PTR [rip+0x76ea]        # 0x40c5d8
  404eee:	nop
  404eef:	nop
  404ef0:	jmp    QWORD PTR [rip+0x76da]        # 0x40c5d0
  404ef6:	nop
  404ef7:	nop
  404ef8:	jmp    QWORD PTR [rip+0x76ca]        # 0x40c5c8
  404efe:	nop
  404eff:	nop
  404f00:	jmp    QWORD PTR [rip+0x76ba]        # 0x40c5c0
  404f06:	nop
  404f07:	nop
  404f08:	jmp    QWORD PTR [rip+0x76aa]        # 0x40c5b8
  404f0e:	nop
  404f0f:	nop
  404f10:	jmp    QWORD PTR [rip+0x769a]        # 0x40c5b0
  404f16:	nop
  404f17:	nop
  404f18:	jmp    QWORD PTR [rip+0x768a]        # 0x40c5a8
  404f1e:	nop
  404f1f:	nop
  404f20:	jmp    QWORD PTR [rip+0x767a]        # 0x40c5a0
  404f26:	nop
  404f27:	nop
  404f28:	jmp    QWORD PTR [rip+0x766a]        # 0x40c598
  404f2e:	nop
  404f2f:	nop
  404f30:	jmp    QWORD PTR [rip+0x765a]        # 0x40c590
  404f36:	nop
  404f37:	nop
  404f38:	jmp    QWORD PTR [rip+0x764a]        # 0x40c588
  404f3e:	nop
  404f3f:	nop
  404f40:	jmp    QWORD PTR [rip+0x763a]        # 0x40c580
  404f46:	nop
  404f47:	nop
  404f48:	jmp    QWORD PTR [rip+0x762a]        # 0x40c578
  404f4e:	nop
  404f4f:	nop
  404f50:	jmp    QWORD PTR [rip+0x761a]        # 0x40c570
  404f56:	nop
  404f57:	nop
  404f58:	jmp    QWORD PTR [rip+0x760a]        # 0x40c568
  404f5e:	nop
  404f5f:	nop
  404f60:	jmp    QWORD PTR [rip+0x75fa]        # 0x40c560
  404f66:	nop
  404f67:	nop
  404f68:	jmp    QWORD PTR [rip+0x75ea]        # 0x40c558
  404f6e:	nop
  404f6f:	nop
  404f70:	jmp    QWORD PTR [rip+0x75da]        # 0x40c550
  404f76:	nop
  404f77:	nop
  404f78:	jmp    QWORD PTR [rip+0x75ca]        # 0x40c548
  404f7e:	nop
  404f7f:	nop
  404f80:	jmp    QWORD PTR [rip+0x75ba]        # 0x40c540
  404f86:	nop
  404f87:	nop
  404f88:	jmp    QWORD PTR [rip+0x75aa]        # 0x40c538
  404f8e:	nop
  404f8f:	nop
  404f90:	jmp    QWORD PTR [rip+0x759a]        # 0x40c530
  404f96:	nop
  404f97:	nop
  404f98:	jmp    QWORD PTR [rip+0x758a]        # 0x40c528
  404f9e:	nop
  404f9f:	nop
  404fa0:	jmp    QWORD PTR [rip+0x757a]        # 0x40c520
  404fa6:	nop
  404fa7:	nop
  404fa8:	jmp    QWORD PTR [rip+0x756a]        # 0x40c518
  404fae:	nop
  404faf:	nop
  404fb0:	jmp    QWORD PTR [rip+0x755a]        # 0x40c510
  404fb6:	nop
  404fb7:	nop
  404fb8:	jmp    QWORD PTR [rip+0x7542]        # 0x40c500
  404fbe:	nop
  404fbf:	nop
  404fc0:	jmp    QWORD PTR [rip+0x7532]        # 0x40c4f8
  404fc6:	nop
  404fc7:	nop
  404fc8:	jmp    QWORD PTR [rip+0x7522]        # 0x40c4f0
  404fce:	nop
  404fcf:	nop
  404fd0:	jmp    QWORD PTR [rip+0x7512]        # 0x40c4e8
  404fd6:	nop
  404fd7:	nop
  404fd8:	jmp    QWORD PTR [rip+0x74fa]        # 0x40c4d8
  404fde:	nop
  404fdf:	nop
  404fe0:	jmp    QWORD PTR [rip+0x74ea]        # 0x40c4d0
  404fe6:	nop
  404fe7:	nop
  404fe8:	jmp    QWORD PTR [rip+0x74da]        # 0x40c4c8
  404fee:	nop
  404fef:	nop
  404ff0:	jmp    QWORD PTR [rip+0x74ca]        # 0x40c4c0
  404ff6:	nop
  404ff7:	nop
  404ff8:	jmp    QWORD PTR [rip+0x74b2]        # 0x40c4b0
  404ffe:	nop
  404fff:	nop
  405000:	jmp    QWORD PTR [rip+0x74a2]        # 0x40c4a8
  405006:	nop
  405007:	nop
  405008:	jmp    QWORD PTR [rip+0x748a]        # 0x40c498
  40500e:	nop
  40500f:	nop
  405010:	mov    rax,QWORD PTR [rip+0x6a69]        # 0x40ba80
  405017:	ret    
  405018:	nop    DWORD PTR [rax+rax*1+0x0]
  405020:	mov    rax,rcx
  405023:	xchg   QWORD PTR [rip+0x6a56],rax        # 0x40ba80
  40502a:	ret    
  40502b:	nop
  40502c:	nop
  40502d:	nop
  40502e:	nop
  40502f:	nop
  405030:	jmp    QWORD PTR [rip+0x76d2]        # 0x40c708
  405036:	nop
  405037:	nop
  405038:	nop    DWORD PTR [rax+rax*1+0x0]
  405040:	jmp    QWORD PTR [rip+0x7442]        # 0x40c488
  405046:	nop
  405047:	nop
  405048:	jmp    QWORD PTR [rip+0x7432]        # 0x40c480
  40504e:	nop
  40504f:	nop
  405050:	jmp    QWORD PTR [rip+0x7422]        # 0x40c478
  405056:	nop
  405057:	nop
  405058:	jmp    QWORD PTR [rip+0x7412]        # 0x40c470
  40505e:	nop
  40505f:	nop
  405060:	jmp    QWORD PTR [rip+0x7402]        # 0x40c468
  405066:	nop
  405067:	nop
  405068:	jmp    QWORD PTR [rip+0x73f2]        # 0x40c460
  40506e:	nop
  40506f:	nop
  405070:	jmp    QWORD PTR [rip+0x73e2]        # 0x40c458
  405076:	nop
  405077:	nop
  405078:	jmp    QWORD PTR [rip+0x73d2]        # 0x40c450
  40507e:	nop
  40507f:	nop
  405080:	jmp    QWORD PTR [rip+0x73c2]        # 0x40c448
  405086:	nop
  405087:	nop
  405088:	jmp    QWORD PTR [rip+0x73b2]        # 0x40c440
  40508e:	nop
  40508f:	nop
  405090:	jmp    QWORD PTR [rip+0x73a2]        # 0x40c438
  405096:	nop
  405097:	nop
  405098:	jmp    QWORD PTR [rip+0x7392]        # 0x40c430
  40509e:	nop
  40509f:	nop
  4050a0:	jmp    QWORD PTR [rip+0x7382]        # 0x40c428
  4050a6:	nop
  4050a7:	nop
  4050a8:	jmp    QWORD PTR [rip+0x7372]        # 0x40c420
  4050ae:	nop
  4050af:	nop
  4050b0:	jmp    QWORD PTR [rip+0x7362]        # 0x40c418
  4050b6:	nop
  4050b7:	nop
  4050b8:	jmp    QWORD PTR [rip+0x7352]        # 0x40c410
  4050be:	nop
  4050bf:	nop
  4050c0:	jmp    QWORD PTR [rip+0x7342]        # 0x40c408
  4050c6:	nop
  4050c7:	nop
  4050c8:	jmp    QWORD PTR [rip+0x7332]        # 0x40c400
  4050ce:	nop
  4050cf:	nop
  4050d0:	jmp    QWORD PTR [rip+0x7322]        # 0x40c3f8
  4050d6:	nop
  4050d7:	nop
  4050d8:	jmp    QWORD PTR [rip+0x7312]        # 0x40c3f0
  4050de:	nop
  4050df:	nop
  4050e0:	jmp    QWORD PTR [rip+0x7302]        # 0x40c3e8
  4050e6:	nop
  4050e7:	nop
  4050e8:	jmp    QWORD PTR [rip+0x72f2]        # 0x40c3e0
  4050ee:	nop
  4050ef:	nop
  4050f0:	jmp    QWORD PTR [rip+0x72e2]        # 0x40c3d8
  4050f6:	nop
  4050f7:	nop
  4050f8:	jmp    QWORD PTR [rip+0x72d2]        # 0x40c3d0
  4050fe:	nop
  4050ff:	nop
  405100:	push   r15
  405102:	push   r14
  405104:	push   r13
  405106:	push   r12
  405108:	push   rbp
  405109:	push   rdi
  40510a:	push   rsi
  40510b:	push   rbx
  40510c:	sub    rsp,0x88
  405113:	lea    rsi,[rip+0x69a6]        # 0x40bac0
  40511a:	mov    rbx,rdx
  40511d:	mov    ebp,ecx
  40511f:	call   0x4028d0
  405124:	lea    rdx,[rip+0x2553]        # 0x40767e
  40512b:	xor    ecx,ecx
  40512d:	mov    QWORD PTR [rsp+0x68],0x0
  405136:	mov    QWORD PTR [rsp+0x70],0x0
  40513f:	mov    rdi,rsi
  405142:	call   0x404eb8
  405147:	xor    eax,eax
  405149:	mov    ecx,0x1b
  40514e:	mov    r12,QWORD PTR [rip+0x736b]        # 0x40c4c0
  405155:	rep stos QWORD PTR es:[rdi],rax
  405158:	call   r12
  40515b:	add    rax,0x60
  40515f:	test   rbx,rbx
  405162:	mov    QWORD PTR [rip+0x6967],rax        # 0x40bad0
  405169:	je     0x405695
  40516f:	mov    rcx,QWORD PTR [rbx]
  405172:	call   0x403cc0
  405177:	mov    QWORD PTR [rip+0x6972],rax        # 0x40baf0
  40517e:	mov    rdi,rax
  405181:	lea    rax,[rip+0x2a03]        # 0x407b8b
  405188:	mov    edx,0x28
  40518d:	mov    ecx,0x1
  405192:	mov    QWORD PTR [rip+0x692b],0x3        # 0x40bac8
  40519d:	mov    QWORD PTR [rip+0x69d4],rax        # 0x40bb78
  4051a4:	call   0x404f68
  4051a9:	test   rax,rax
  4051ac:	mov    r13,rax
  4051af:	je     0x405911
  4051b5:	mov    edx,0x80
  4051ba:	lea    rcx,[rip+0x6937]        # 0x40baf8
  4051c1:	call   QWORD PTR [rip+0x7551]        # 0x40c718
  4051c7:	cmp    eax,0xffffffff
  4051ca:	je     0x40574f
  4051d0:	mov    r15,QWORD PTR [rip+0x3099]        # 0x408270
  4051d7:	mov    rax,QWORD PTR [rip+0x7352]        # 0x40c530
  4051de:	mov    r14,r15
  4051e1:	mov    QWORD PTR [rsp+0x48],r15
  4051e6:	mov    QWORD PTR [rsp+0x50],rax
  4051eb:	mov    QWORD PTR [rsp+0x58],r15
  4051f0:	lea    r8,[rip+0x25f5]        # 0x4077ec
  4051f7:	mov    rdx,rbx
  4051fa:	mov    ecx,ebp
  4051fc:	call   0x404b50
  405201:	cmp    eax,0xffffffff
  405204:	je     0x40545c
  40520a:	sub    eax,0x44
  40520d:	cmp    eax,0x32
  405210:	ja     0x4053b7
  405216:	lea    rdx,[rip+0x2763]        # 0x407980
  40521d:	movsxd rax,DWORD PTR [rdx+rax*4]
  405221:	add    rdx,rax
  405224:	jmp    rdx
  405226:	mov    rcx,QWORD PTR [r15]
  405229:	lea    rdx,[rsp+0x78]
  40522e:	mov    r8d,0xa
  405234:	call   0x404e70
  405239:	cmp    eax,0x2
  40523c:	je     0x40544f
  405242:	cmp    eax,0x3
  405245:	jne    0x4056b3
  40524b:	mov    QWORD PTR [rsi+0x8],0x3
  405253:	mov    DWORD PTR [rsi],0x1
  405259:	jmp    0x4051f0
  40525b:	mov    rdi,QWORD PTR [r14]
  40525e:	xchg   ax,ax
  405260:	mov    rcx,rdi
  405263:	mov    edx,0x5c
  405268:	call   0x404e98
  40526d:	test   rax,rax
  405270:	mov    rdi,rax
  405273:	je     0x40543a
  405279:	movzx  eax,BYTE PTR [rdi+0x1]
  40527d:	cmp    al,0x6e
  40527f:	je     0x405430
  405285:	jg     0x4053e0
  40528b:	cmp    al,0x30
  40528d:	je     0x405400
  405293:	cmp    al,0x5c
  405295:	mov    edx,0x5c
  40529a:	jne    0x405260
  40529c:	mov    BYTE PTR [rdi],dl
  40529e:	lea    rdx,[rdi+0x2]
  4052a2:	lea    r9,[rdi+0x1]
  4052a6:	xor    eax,eax
  4052a8:	or     rcx,0xffffffffffffffff
  4052ac:	mov    rdi,rdx
  4052af:	repnz scas al,BYTE PTR es:[rdi]
  4052b1:	not    rcx
  4052b4:	mov    r8,rcx
  4052b7:	mov    rcx,r9
  4052ba:	call   0x404ee0
  4052bf:	mov    rdi,rax
  4052c2:	jmp    0x405260
  4052c4:	mov    DWORD PTR [rsi+0x4],0x1
  4052cb:	jmp    0x4051f0
  4052d0:	mov    rax,QWORD PTR [rsp+0x58]
  4052d5:	mov    rcx,QWORD PTR [rax]
  4052d8:	call   QWORD PTR [rip+0x7252]        # 0x40c530
  4052de:	mov    QWORD PTR [rsi+0xc8],rax
  4052e5:	jmp    0x4051f0
  4052ea:	mov    rax,QWORD PTR [rip+0x2f7f]        # 0x408270
  4052f1:	mov    rcx,QWORD PTR [rax]
  4052f4:	call   QWORD PTR [rip+0x7236]        # 0x40c530
  4052fa:	mov    QWORD PTR [rsi+0xc0],rax
  405301:	jmp    0x4051f0
  405306:	call   r12
  405309:	add    rax,0x30
  40530d:	mov    QWORD PTR [rsi+0x10],rax
  405311:	jmp    0x4051f0
  405316:	mov    rax,QWORD PTR [rsp+0x48]
  40531b:	mov    rcx,QWORD PTR [rax]
  40531e:	mov    rax,QWORD PTR [rsp+0x50]
  405323:	call   rax
  405325:	mov    QWORD PTR [rsi+0xd0],rax
  40532c:	jmp    0x4051f0
  405331:	mov    rax,QWORD PTR [rip+0x2f38]        # 0x408270
  405338:	mov    rcx,QWORD PTR [rax]
  40533b:	call   QWORD PTR [rip+0x71ef]        # 0x40c530
  405341:	mov    QWORD PTR [r13+0x10],rax
  405345:	jmp    0x4051f0
  40534a:	mov    rax,QWORD PTR [rip+0x2f1f]        # 0x408270
  405351:	mov    rcx,QWORD PTR [rax]
  405354:	call   QWORD PTR [rip+0x71d6]        # 0x40c530
  40535a:	mov    QWORD PTR [rsi+0x20],rax
  40535e:	jmp    0x4051f0
  405363:	mov    rdi,QWORD PTR [rip+0x2f06]        # 0x408270
  40536a:	mov    rcx,QWORD PTR [rdi]
  40536d:	call   QWORD PTR [rip+0x71bd]        # 0x40c530
  405373:	mov    r9,QWORD PTR [rdi]
  405376:	mov    QWORD PTR [r13+0x18],rax
  40537a:	or     rcx,0xffffffffffffffff
  40537e:	xor    eax,eax
  405380:	xor    edx,edx
  405382:	mov    rdi,r9
  405385:	repnz scas al,BYTE PTR es:[rdi]
  405387:	not    rcx
  40538a:	mov    r8,rcx
  40538d:	mov    rcx,r9
  405390:	sub    r8,0x1
  405394:	call   0x404ed8
  405399:	jmp    0x4051f0
  40539e:	mov    rax,QWORD PTR [rip+0x2ecb]        # 0x408270
  4053a5:	mov    rcx,QWORD PTR [rax]
  4053a8:	call   QWORD PTR [rip+0x7182]        # 0x40c530
  4053ae:	mov    QWORD PTR [rsi+0x28],rax
  4053b2:	jmp    0x4051f0
  4053b7:	mov    rbx,QWORD PTR [rip+0x6732]        # 0x40baf0
  4053be:	call   r12
  4053c1:	lea    rdx,[rip+0x2388]        # 0x407750
  4053c8:	lea    rcx,[rax+0x60]
  4053cc:	mov    r8,rbx
  4053cf:	call   0x404f38
  4053d4:	mov    ecx,0x1
  4053d9:	call   0x404f60
  4053de:	xchg   ax,ax
  4053e0:	cmp    al,0x72
  4053e2:	je     0x405420
  4053e4:	cmp    al,0x74
  4053e6:	mov    edx,0x9
  4053eb:	je     0x40529c
  4053f1:	jmp    0x405260
  4053f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405400:	call   r12
  405403:	lea    rdx,[rip+0x22c6]        # 0x4076d0
  40540a:	lea    rcx,[rax+0x60]
  40540e:	mov    r8d,0x2d9
  405414:	call   0x404f38
  405419:	xor    edx,edx
  40541b:	jmp    0x40529c
  405420:	mov    edx,0xd
  405425:	jmp    0x40529c
  40542a:	nop    WORD PTR [rax+rax*1+0x0]
  405430:	mov    edx,0xa
  405435:	jmp    0x40529c
  40543a:	mov    rcx,QWORD PTR [r14]
  40543d:	call   QWORD PTR [rip+0x70ed]        # 0x40c530
  405443:	mov    QWORD PTR [rsi+0xb8],rax
  40544a:	jmp    0x4051f0
  40544f:	mov    QWORD PTR [rsi+0x8],0x2
  405457:	jmp    0x405253
  40545c:	cmp    QWORD PTR [rip+0x667c],0x0        # 0x40bae0
  405464:	je     0x4053b7
  40546a:	cmp    QWORD PTR [rip+0x670e],0x0        # 0x40bb80
  405472:	je     0x405496
  405474:	call   r12
  405477:	mov    rcx,QWORD PTR [rip+0x6702]        # 0x40bb80
  40547e:	lea    rdx,[rip+0x237f]        # 0x407804
  405485:	mov    r8,rax
  405488:	call   0x404f20
  40548d:	test   rax,rax
  405490:	je     0x4058b2
  405496:	cmp    QWORD PTR [rip+0x66ea],0x0        # 0x40bb88
  40549e:	je     0x4054c3
  4054a0:	call   r12
  4054a3:	mov    rcx,QWORD PTR [rip+0x66de]        # 0x40bb88
  4054aa:	lea    r8,[rax+0x30]
  4054ae:	lea    rdx,[rip+0x236c]        # 0x407821
  4054b5:	call   0x404f20
  4054ba:	test   rax,rax
  4054bd:	je     0x4058f8
  4054c3:	cmp    QWORD PTR [rip+0x66c5],0x0        # 0x40bb90
  4054cb:	je     0x4054f0
  4054cd:	call   r12
  4054d0:	mov    rcx,QWORD PTR [rip+0x66b9]        # 0x40bb90
  4054d7:	lea    r8,[rax+0x60]
  4054db:	lea    rdx,[rip+0x233f]        # 0x407821
  4054e2:	call   0x404f20
  4054e7:	test   rax,rax
  4054ea:	je     0x405931
  4054f0:	cmp    DWORD PTR [rip+0x65c9],0x0        # 0x40bac0
  4054f7:	jne    0x4056d1
  4054fd:	lea    rdx,[rip+0x231d]        # 0x407821
  405504:	lea    rcx,[rip+0x2676]        # 0x407b81
  40550b:	call   0x404f40
  405510:	test   rax,rax
  405513:	mov    QWORD PTR [rip+0x65be],rax        # 0x40bad8
  40551a:	je     0x405864
  405520:	mov    r8,QWORD PTR [rip+0x65c9]        # 0x40baf0
  405527:	mov    rcx,QWORD PTR [rip+0x65aa]        # 0x40bad8
  40552e:	lea    rdx,[rip+0x232b]        # 0x407860
  405535:	mov    r9d,0x10e
  40553b:	call   0x404f38
  405540:	lea    r8,[rsp+0x68]
  405545:	xor    edx,edx
  405547:	mov    ecx,0x1
  40554c:	call   0x402748
  405551:	test   ax,ax
  405554:	jne    0x40580a
  40555a:	cmp    QWORD PTR [rsp+0x68],0x0
  405560:	je     0x4057bc
  405566:	mov    r8,QWORD PTR [rip+0x655b]        # 0x40bac8
  40556d:	mov    rcx,QWORD PTR [rsp+0x68]
  405572:	mov    r9d,0xfffffffb
  405578:	mov    edx,0xc8
  40557d:	call   0x4026d0
  405582:	test   ax,ax
  405585:	jne    0x40584f
  40558b:	mov    rdx,QWORD PTR [rsp+0x68]
  405590:	lea    r8,[rsp+0x70]
  405595:	mov    ecx,0x2
  40559a:	call   0x402748
  40559f:	test   ax,ax
  4055a2:	jne    0x40583a
  4055a8:	cmp    QWORD PTR [rsp+0x70],0x0
  4055ae:	je     0x40579e
  4055b4:	mov    rax,QWORD PTR [r13+0x18]
  4055b8:	mov    r9,QWORD PTR [r13+0x10]
  4055bc:	mov    r8d,0xfffffffd
  4055c2:	mov    rdx,QWORD PTR [rip+0x6517]        # 0x40bae0
  4055c9:	mov    rcx,QWORD PTR [rsp+0x70]
  4055ce:	lea    rsi,[rsp+0x78]
  4055d3:	mov    DWORD PTR [rsp+0x30],0xfffffffd
  4055db:	mov    DWORD PTR [rsp+0x20],0xfffffffd
  4055e3:	mov    QWORD PTR [rsp+0x28],rax
  4055e8:	call   0x402738
  4055ed:	test   ax,ax
  4055f0:	jne    0x4057da
  4055f6:	call   0x402460
  4055fb:	test   rax,rax
  4055fe:	mov    rbx,rax
  405601:	je     0x405760
  405607:	mov    rdx,QWORD PTR [rsp+0x70]
  40560c:	mov    r8,rsi
  40560f:	mov    ecx,0x3
  405614:	call   0x402748
  405619:	test   ax,ax
  40561c:	jne    0x405965
  405622:	mov    rcx,QWORD PTR [rsp+0x78]
  405627:	mov    r8d,0xfffffffd
  40562d:	mov    rdx,rbx
  405630:	call   0x4026d8
  405635:	test   ax,ax
  405638:	jne    0x40594d
  40563e:	mov    rcx,QWORD PTR [rsp+0x78]
  405643:	call   0x402720
  405648:	test   ax,ax
  40564b:	je     0x405715
  405651:	cmp    ax,0x1
  405655:	je     0x4056e4
  40565b:	cmp    ax,0x63
  40565f:	je     0x40571f
  405665:	lea    rsi,[rip+0x1c10]        # 0x40727c
  40566c:	lea    r9,[rip+0x22f1]        # 0x407964
  405673:	mov    QWORD PTR [rsp+0x20],rsi
  405678:	mov    rdx,QWORD PTR [rsp+0x78]
  40567d:	mov    ecx,0x3
  405682:	movsx  r8d,ax
  405686:	call   0x401710
  40568b:	mov    ecx,0x1
  405690:	call   0x404f60
  405695:	lea    rdx,[rip+0x1964]        # 0x407000
  40569c:	lea    rcx,[rip+0x1fdc]        # 0x40767f
  4056a3:	mov    r8d,0x2fd
  4056a9:	call   0x404d00
  4056ae:	jmp    0x40516f
  4056b3:	mov    rdi,QWORD PTR [r15]
  4056b6:	call   r12
  4056b9:	lea    rdx,[rip+0x2050]        # 0x407710
  4056c0:	lea    rcx,[rax+0x60]
  4056c4:	mov    r8,rdi
  4056c7:	call   0x404f38
  4056cc:	jmp    0x405253
  4056d1:	call   r12
  4056d4:	add    rax,0x60
  4056d8:	mov    QWORD PTR [rip+0x63f9],rax        # 0x40bad8
  4056df:	jmp    0x405520
  4056e4:	mov    rdx,QWORD PTR [rsp+0x78]
  4056e9:	mov    ecx,0x3
  4056ee:	call   0x401530
  4056f3:	test   eax,eax
  4056f5:	je     0x405715
  4056f7:	call   r12
  4056fa:	lea    rcx,[rip+0x2248]        # 0x407949
  405701:	lea    r9,[rax+0x60]
  405705:	mov    r8d,0x1a
  40570b:	mov    edx,0x1
  405710:	call   0x404f10
  405715:	mov    rcx,QWORD PTR [rsp+0x78]
  40571a:	call   0x4018f0
  40571f:	mov    rdx,QWORD PTR [rsp+0x78]
  405724:	mov    ecx,0x3
  405729:	call   0x402710
  40572e:	test   ax,ax
  405731:	je     0x4055f6
  405737:	lea    rsi,[rip+0x1b3e]        # 0x40727c
  40573e:	lea    r9,[rip+0x222a]        # 0x40796f
  405745:	mov    QWORD PTR [rsp+0x20],rsi
  40574a:	jmp    0x405678
  40574f:	lea    rcx,[rip+0x1f62]        # 0x4076b8
  405756:	call   0x404ed0
  40575b:	jmp    0x4051d0
  405760:	mov    rcx,QWORD PTR [rsp+0x70]
  405765:	call   0x402728
  40576a:	mov    rdx,QWORD PTR [rsp+0x70]
  40576f:	mov    ecx,0x2
  405774:	call   0x402710
  405779:	mov    rdx,QWORD PTR [rsp+0x68]
  40577e:	mov    ecx,0x1
  405783:	call   0x402710
  405788:	xor    eax,eax
  40578a:	add    rsp,0x88
  405791:	pop    rbx
  405792:	pop    rsi
  405793:	pop    rdi
  405794:	pop    rbp
  405795:	pop    r12
  405797:	pop    r13
  405799:	pop    r14
  40579b:	pop    r15
  40579d:	ret    
  40579e:	lea    rdx,[rip+0x185b]        # 0x407000
  4057a5:	lea    rcx,[rip+0x215c]        # 0x407908
  4057ac:	mov    r8d,0x122
  4057b2:	call   0x404d00
  4057b7:	jmp    0x4055b4
  4057bc:	lea    rdx,[rip+0x183d]        # 0x407000
  4057c3:	lea    rcx,[rip+0x20f0]        # 0x4078ba
  4057ca:	mov    r8d,0x117
  4057d0:	call   0x404d00
  4057d5:	jmp    0x405566
  4057da:	lea    rsi,[rip+0x1a9b]        # 0x40727c
  4057e1:	lea    r9,[rip+0x2125]        # 0x40790d
  4057e8:	mov    QWORD PTR [rsp+0x20],rsi
  4057ed:	mov    rdx,QWORD PTR [rsp+0x70]
  4057f2:	mov    ecx,0x2
  4057f7:	movsx  r8d,ax
  4057fb:	call   0x401710
  405800:	mov    ecx,0x1
  405805:	call   0x404f60
  40580a:	lea    rsi,[rip+0x2087]        # 0x407898
  405811:	mov    rdx,QWORD PTR [rsp+0x68]
  405816:	lea    r9,[rip+0x2065]        # 0x407882
  40581d:	mov    ecx,0x1
  405822:	movsx  r8d,ax
  405826:	mov    QWORD PTR [rsp+0x20],rsi
  40582b:	call   0x401710
  405830:	mov    ecx,0x1
  405835:	call   0x404f60
  40583a:	lea    rsi,[rip+0x20a7]        # 0x4078e8
  405841:	lea    r9,[rip+0x203a]        # 0x407882
  405848:	mov    QWORD PTR [rsp+0x20],rsi
  40584d:	jmp    0x4057ed
  40584f:	lea    rsi,[rip+0x2077]        # 0x4078cd
  405856:	lea    r9,[rip+0x2062]        # 0x4078bf
  40585d:	mov    QWORD PTR [rsp+0x20],rsi
  405862:	jmp    0x4057ed
  405864:	call   QWORD PTR [rip+0x6c8e]        # 0x40c4f8
  40586a:	mov    ecx,DWORD PTR [rax]
  40586c:	call   0x404e88
  405871:	mov    rbx,QWORD PTR [rip+0x6278]        # 0x40baf0
  405878:	mov    rsi,rax
  40587b:	call   r12
  40587e:	lea    rcx,[rax+0x60]
  405882:	lea    rax,[rip+0x22f8]        # 0x407b81
  405889:	lea    rdx,[rip+0x1f98]        # 0x407828
  405890:	mov    QWORD PTR [rsp+0x28],rsi
  405895:	mov    r9d,0x109
  40589b:	mov    r8,rbx
  40589e:	mov    QWORD PTR [rsp+0x20],rax
  4058a3:	call   0x404f38
  4058a8:	mov    ecx,0x1
  4058ad:	call   0x404f60
  4058b2:	call   QWORD PTR [rip+0x6c40]        # 0x40c4f8
  4058b8:	mov    ecx,DWORD PTR [rax]
  4058ba:	call   0x404e88
  4058bf:	mov    rsi,QWORD PTR [rip+0x62ba]        # 0x40bb80
  4058c6:	mov    rdi,rax
  4058c9:	mov    rbx,QWORD PTR [rip+0x6220]        # 0x40baf0
  4058d0:	call   r12
  4058d3:	lea    rdx,[rip+0x1f2c]        # 0x407806
  4058da:	lea    rcx,[rax+0x60]
  4058de:	mov    QWORD PTR [rsp+0x20],rdi
  4058e3:	mov    r9,rsi
  4058e6:	mov    r8,rbx
  4058e9:	call   0x404f38
  4058ee:	mov    ecx,0x1
  4058f3:	call   0x404f60
  4058f8:	call   QWORD PTR [rip+0x6bfa]        # 0x40c4f8
  4058fe:	mov    ecx,DWORD PTR [rax]
  405900:	call   0x404e88
  405905:	mov    rsi,QWORD PTR [rip+0x627c]        # 0x40bb88
  40590c:	mov    rdi,rax
  40590f:	jmp    0x4058c9
  405911:	call   r12
  405914:	lea    rdx,[rip+0x1d75]        # 0x407690
  40591b:	lea    rcx,[rax+0x60]
  40591f:	mov    r8,rdi
  405922:	call   0x404f38
  405927:	mov    ecx,0x1
  40592c:	call   0x404f60
  405931:	call   QWORD PTR [rip+0x6bc1]        # 0x40c4f8
  405937:	mov    ecx,DWORD PTR [rax]
  405939:	call   0x404e88
  40593e:	mov    rsi,QWORD PTR [rip+0x624b]        # 0x40bb90
  405945:	mov    rdi,rax
  405948:	jmp    0x4058c9
  40594d:	lea    rsi,[rip+0x1928]        # 0x40727c
  405954:	lea    r9,[rip+0x1fe3]        # 0x40793e
  40595b:	mov    QWORD PTR [rsp+0x20],rsi
  405960:	jmp    0x405678
  405965:	lea    rsi,[rip+0x1fac]        # 0x407918
  40596c:	lea    r9,[rip+0x1f0f]        # 0x407882
  405973:	mov    QWORD PTR [rsp+0x20],rsi
  405978:	jmp    0x405678
  40597d:	nop
  40597e:	nop
  40597f:	nop
  405980:	(bad)  
  405981:	(bad)  
  405982:	(bad)  
  405983:	(bad)  
  405984:	(bad)  
  405985:	(bad)  
  405986:	(bad)  
  405987:	inc    DWORD PTR [rax]
  405989:	add    BYTE PTR [rax],al
  40598b:	add    BYTE PTR [rax],al
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    bh,bh
  405991:	(bad)  
  405992:	(bad)  
  405993:	(bad)  
  405994:	(bad)  
  405995:	(bad)  
  405996:	(bad)  
  405997:	inc    DWORD PTR [rax]
  405999:	add    BYTE PTR [rax],al
  40599b:	add    BYTE PTR [rax],al
  40599d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40600e:	add    BYTE PTR [rax],al
  406010:	cwde   
  406011:	pop    rcx
  406012:	add    BYTE PTR [rax],al
	...
  40601d:	add    BYTE PTR [rax],al
  40601f:	add    bh,bh
  406021:	(bad)  
  406022:	(bad)  
  406023:	(bad)  
  406024:	(bad)  
  406025:	(bad)  
  406026:	(bad)  
  406027:	inc    DWORD PTR [rax]
  406029:	add    BYTE PTR [rax],al
  40602b:	add    BYTE PTR [rax],al
  40602d:	add    BYTE PTR [rax],al
  40602f:	add    bh,bh
	...
  40603d:	add    BYTE PTR [rax],al
  40603f:	add    BYTE PTR [rdx],al
	...
  40604d:	add    BYTE PTR [rax],al
  40604f:	add    bh,bh
  406051:	(bad)  
  406052:	(bad)  
  406053:	(bad)  
  406054:	(bad)  
  406055:	(bad)  
  406056:	(bad)  
  406057:	(bad)  
  406058:	(bad)  
  406059:	(bad)  
  40605a:	(bad)  
  40605b:	inc    DWORD PTR [rax]
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    BYTE PTR [rbp+0x7e],dh
  406062:	add    BYTE PTR [rax],al
  406065:	add    BYTE PTR [rax],al
  406067:	add    BYTE PTR [rdi],bh
  406069:	add    BYTE PTR [rax],al
  40606b:	add    BYTE PTR [rcx],al
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rcx],al
	...
  40607d:	add    BYTE PTR [rax],al
  40607f:	add    bh,bh
  406081:	(bad)  
  406082:	(bad)  
  406083:	inc    DWORD PTR [rax]
	...
  40608d:	add    BYTE PTR [rax],al
  40608f:	add    BYTE PTR [rax],dl
  406091:	push   rax
  406092:	add    BYTE PTR [rax],al
  406095:	add    BYTE PTR [rax],al
  406097:	add    BYTE PTR [rax],ah
  406099:	push   rax
  40609a:	add    BYTE PTR [rax],al
  40609d:	add    BYTE PTR [rax],al
  40609f:	add    BYTE PTR [rdx],dh
  4060a1:	movabs ds:0x2b992ddf,al
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	add    BYTE PTR [rax],al
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	int    0x5d
  4060b2:	and    dl,dl
  4060b4:	data16 (bad) 
  4060b6:	(bad)  
  4060b7:	inc    DWORD PTR [rax]
  4060b9:	add    BYTE PTR [rax],al
  4060bb:	add    BYTE PTR [rax],al
  4060bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	(bad)  
  407002:	jno    0x407070
  407004:	outs   dx,DWORD PTR ds:[rsi]
  407005:	(bad)
  40700b:	jb     0x407072
  40700d:	je     0x40702f
  40700f:	cmp    eax,0x5153203d
  407014:	rex.WR pop rdi
  407016:	push   rbx
  407017:	push   rbp
  407018:	rex.XB
  407019:	rex.XB
  40701a:	rex.RB push r11
  40701c:	push   rbx
  40701d:	add    BYTE PTR [rdx],ah
  40701f:	and    eax,0xa2273
  407024:	and    eax,0x65203a73
  407029:	jb     0x40709d
  40702b:	outs   dx,DWORD PTR ds:[rsi]
  40702c:	jb     0x40704e
  40702e:	and    eax,0x25203a64
  407033:	jae    0x40706f
  407035:	and    BYTE PTR [rip+0x53000a73],ah        # 0x53407aae
  40703b:	push   rcx
  40703c:	rex.WR pop rdi
  40703e:	push   rbx
  40703f:	push   rbp
  407040:	rex.XB
  407041:	rex.XB
  407042:	rex.RB push r11
  407044:	push   rbx
  407045:	pop    rdi
  407046:	push   rdi
  407047:	rex.WB push r12
  407049:	rex.W pop rdi
  40704b:	rex.WB
  40704c:	rex.WRX
  40704d:	rex.RX
  40704e:	rex.WRXB add BYTE PTR [r11+0x51],r10b
  407052:	rex.WR pop rdi
  407054:	rex.RB push r10
  407056:	push   rdx
  407057:	rex.WRXB push r10
  407059:	add    BYTE PTR [rbx+0x51],dl
  40705c:	rex.WR pop rdi
  40705e:	push   rbx
  40705f:	push   rsp
  407060:	rex.WB
  407061:	rex.WR
  407062:	rex.WR pop rdi
  407064:	rex.RB pop r8
  407066:	rex.RB
  407067:	rex.XB push r13
  407069:	push   rsp
  40706a:	rex.WB
  40706b:	rex.WRX
  40706c:	rex.RXB add BYTE PTR [r14+0x75],r12b
  407070:	outs   dx,BYTE PTR ds:[rsi]
  407071:	movsxd esp,DWORD PTR [rax]
  407073:	es and BYTE PTR es:[rbp+0x73],ch
  407078:	add    BYTE PTR [eax],al
  40707b:	add    BYTE PTR [rax],al
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6560aaf8
  407085:	jb     0x4070f9
  407087:	outs   dx,DWORD PTR ds:[rsi]
  407088:	jb     0x4070aa
  40708a:	and    eax,0x25203a64
  40708f:	jae    0x4070cb
  407091:	and    BYTE PTR [rcx+0x6e],ch
  407094:	jbe    0x4070f7
  407096:	ins    BYTE PTR es:[rdi],dx
  407097:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x6c646e61
  40709f:	cmp    ah,BYTE PTR gs:[rax]
  4070a2:	and    eax,0xa73
  4070a7:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6560ab20
  4070ad:	jb     0x407121
  4070af:	outs   dx,DWORD PTR ds:[rsi]
  4070b0:	jb     0x4070ec
  4070b2:	and    BYTE PTR [rip+0x73692064],ah        # 0x73a9911c
  4070b8:	and    BYTE PTR [rcx+0x6e],ah
  4070bb:	and    BYTE PTR [rbp+0x6e],dh
  4070be:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4070c2:	outs   dx,BYTE PTR ds:[rsi]
  4070c3:	and    BYTE PTR [rdx+0x65],dh
  4070c6:	je     0x40713d
  4070c8:	jb     0x407138
  4070ca:	and    BYTE PTR [rbx+0x6f],ah
  4070cd:	fs and BYTE PTR gs:[rsi+0x6f],ah
  4070d2:	jb     0x4070f4
  4070d4:	and    eax,0x25000a73
  4070d9:	jae    0x407115
  4070db:	and    BYTE PTR [rbp+0x72],ah
  4070de:	jb     0x40714f
  4070e0:	jb     0x407102
  4070e2:	and    eax,0x25203a64
  4070e7:	jae    0x407123
  4070e9:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2560ab62
  4070ef:	jae    0x4070fb
  4070f1:	add    BYTE PTR [rax],al
  4070f3:	add    BYTE PTR [rdi+riz*4-0x1],cl
  4070f7:	dec    DWORD PTR [rdi+riz*4-0x593e0001]
  4070fe:	(bad)  
  4070ff:	(bad)  
  407100:	cmp    al,0xa7
  407102:	(bad)  
  407103:	(bad)  
  407104:	jl     0x4070ac
  407106:	(bad)  
  407107:	call   QWORD PTR [rbx+0x51]
  40710a:	rex.WR pop rdi
  40710c:	push   rbp
  40710d:	rex.WRX
  40710e:	rex.WXB
  40710f:	rex.WRX
  407110:	rex.WRXB push r15
  407112:	rex.WRX pop rdi
  407114:	push   rsp
  407115:	pop    rcx
  407116:	push   rax
  407117:	add    BYTE PTR [r11+0x51],r10b
  40711b:	rex.WR pop rdi
  40711d:	rex.XB
  40711e:	rex.W
  40711f:	push   r10
  407121:	add    BYTE PTR [rbx+0x51],dl
  407124:	rex.WR pop rdi
  407126:	rex.WRX push rbp
  407128:	rex.WRB
  407129:	rex.RB push r10
  40712b:	rex.WB
  40712c:	rex.XB add BYTE PTR [r11+0x51],dl
  407130:	rex.WR pop rdi
  407132:	rex.R
  407133:	rex.RB
  407134:	rex.XB
  407135:	rex.WB
  407136:	rex.WRB
  407137:	rex.B
  407138:	rex.WR add BYTE PTR [rbx+0x51],r10b
  40713c:	rex.WR pop rdi
  40713e:	rex.WB
  40713f:	rex.WRX push rsp
  407141:	rex.RB
  407142:	rex.RXB
  407143:	rex.RB push r10
  407145:	add    BYTE PTR [rbx+0x51],dl
  407148:	rex.WR pop rdi
  40714a:	push   rbx
  40714b:	rex.WRB
  40714c:	rex.B
  40714d:	rex.WR
  40714e:	rex.WR
  40714f:	rex.WB
  407150:	rex.WRX push rsp
  407152:	add    BYTE PTR [rbx+0x51],dl
  407155:	rex.WR pop rdi
  407157:	rex.RX
  407158:	rex.WR
  407159:	rex.WRXB
  40715a:	push   r12
  40715c:	add    BYTE PTR [rbx+0x51],dl
  40715f:	rex.WR pop rdi
  407161:	push   rdx
  407162:	rex.RB
  407163:	rex.B
  407164:	rex.WR add BYTE PTR [rbx+0x51],r10b
  407168:	rex.WR pop rdi
  40716a:	rex.R
  40716b:	rex.WRXB push r13
  40716d:	rex.X
  40716e:	rex.WR
  40716f:	add    BYTE PTR [r11+0x51],r10b
  407173:	rex.WR pop rdi
  407175:	rex.R
  407176:	push   r12
  407178:	rex.RB push r12
  40717a:	rex.WB
  40717b:	rex.WRB
  40717c:	add    BYTE PTR [r11+0x51],r10b
  407180:	rex.WR pop rdi
  407182:	push   rsi
  407183:	push   r10
  407185:	rex.XB
  407186:	rex.W
  407187:	push   r10
  407189:	add    BYTE PTR [rbx+0x51],dl
  40718c:	rex.WR pop rdi
  40718e:	push   rsp
  40718f:	pop    rcx
  407190:	push   rax
  407191:	rex.RB pop r15
  407193:	rex.R
  407194:	push   r12
  407196:	add    BYTE PTR [r11+0x51],r10b
  40719a:	rex.WR pop rdi
  40719c:	push   rsp
  40719d:	pop    rcx
  40719e:	push   rax
  40719f:	rex.RB pop r15
  4071a1:	push   rsp
  4071a2:	rex.WB
  4071a3:	rex.WRB
  4071a4:	add    BYTE PTR [r11+0x51],r10b
  4071a8:	rex.WR pop rdi
  4071aa:	push   rsp
  4071ab:	pop    rcx
  4071ac:	push   rax
  4071ad:	rex.RB pop r15
  4071af:	push   rsp
  4071b0:	rex.WB
  4071b1:	rex.WRB
  4071b2:	rex.RB push r11
  4071b4:	push   rsp
  4071b5:	rex.B
  4071b6:	rex.WRB push r8
  4071b8:	add    BYTE PTR [rbx+0x51],dl
  4071bb:	rex.WR pop rdi
  4071bd:	rex.WB
  4071be:	rex.WRX push rsp
  4071c0:	rex.RB push r10
  4071c2:	push   rsi
  4071c3:	rex.B
  4071c4:	rex.WR add BYTE PTR [rbx+0x51],r10b
  4071c8:	rex.WR pop rdi
  4071ca:	push   rsp
  4071cb:	rex.WB
  4071cc:	rex.WRB
  4071cd:	rex.RB push r11
  4071cf:	push   rsp
  4071d0:	rex.B
  4071d1:	rex.WRB push r8
  4071d3:	add    BYTE PTR [rbx+0x51],dl
  4071d6:	rex.WR pop rdi
  4071d8:	rex.WR
  4071d9:	rex.WRXB
  4071da:	rex.WRX
  4071db:	rex.RXB push r14
  4071dd:	push   r10
  4071df:	rex.XB
  4071e0:	rex.W
  4071e1:	push   r10
  4071e3:	add    BYTE PTR [rbx+0x51],dl
  4071e6:	rex.WR pop rdi
  4071e8:	rex.X
  4071e9:	rex.WB
  4071ea:	rex.WRX
  4071eb:	push   r10
  4071ed:	pop    rcx
  4071ee:	add    BYTE PTR [rbx+0x51],dl
  4071f1:	rex.WR pop rdi
  4071f3:	push   rsi
  4071f4:	push   r10
  4071f6:	rex.X
  4071f7:	rex.WB
  4071f8:	rex.WRX
  4071f9:	push   r10
  4071fb:	pop    rcx
  4071fc:	add    BYTE PTR [rbx+0x51],dl
  4071ff:	rex.WR pop rdi
  407201:	rex.WR
  407202:	rex.WRXB
  407203:	rex.WRX
  407204:	rex.RXB push r14
  407206:	push   r10
  407208:	rex.X
  407209:	rex.WB
  40720a:	rex.WRX
  40720b:	push   r10
  40720d:	pop    rcx
  40720e:	add    BYTE PTR [rbx+0x51],dl
  407211:	rex.WR pop rdi
  407213:	rex.X
  407214:	rex.WB
  407215:	rex.RXB
  407216:	rex.WB
  407217:	rex.WRX push rsp
  407219:	add    BYTE PTR [rbx+0x51],dl
  40721c:	rex.WR pop rdi
  40721e:	push   rsp
  40721f:	rex.WB
  407220:	rex.WRX pop rcx
  407222:	rex.WB
  407223:	rex.WRX push rsp
  407225:	add    BYTE PTR [rbx+0x51],dl
  407228:	rex.WR pop rdi
  40722a:	rex.X
  40722b:	rex.WB push r12
  40722d:	add    BYTE PTR [rbx+0x51],dl
  407230:	rex.WR pop rdi
  407232:	rex.RXB push r13
  407234:	rex.WB
  407235:	add    BYTE PTR [rdx],r9b
  407238:	add    BYTE PTR [rip+0x2e752525],ah        # 0x2eb59763
  40723e:	and    eax,0x73257375
  407243:	add    BYTE PTR [rip+0x75252d25],ah        # 0x75659f6e
  407249:	cs and eax,0x73257375
  40724f:	add    BYTE PTR [rbp+0x6e],dh
  407252:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407256:	outs   dx,BYTE PTR ds:[rsi]
  407257:	add    BYTE PTR [rbx+0x51],dl
  40725a:	rex.WR pop rdi
  40725c:	rex.WB
  40725d:	rex.WRX push rsi
  40725f:	rex.B
  407260:	rex.WR
  407261:	rex.WB
  407262:	rex.R pop rdi
  407264:	rex.W
  407265:	rex.B
  407266:	rex.WRX
  407267:	rex.R
  407268:	rex.WR
  407269:	add    BYTE PTR [r11+0x51],r10b
  40726d:	rex.WR
  40726e:	rex.WRX jne 0x4072de
  407271:	push   rdx
  407272:	gs jae 0x4072ea
  407275:	ins    BYTE PTR es:[rdi],dx
  407276:	je     0x4072bb
  407278:	outs   dx,DWORD PTR ds:[rsi]
  407279:	ins    BYTE PTR es:[rdi],dx
  40727a:	jae    0x40727c
  40727c:	data16 (bad) 
  40727e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74656d00
  407286:	(bad)  
  407287:	fs (bad) 
  407289:	je     0x4072ec
  40728b:	add    BYTE PTR [rcx+riz*2+0x74],ah
  40728f:	(bad)  
  407290:	add    BYTE PTR [rbp+0x65],cl
  407293:	je     0x4072f6
  407295:	fs (bad) 
  407297:	je     0x4072fa
  407299:	or     al,BYTE PTR [rax]
  40729b:	outs   dx,BYTE PTR ds:[rsi]
  40729c:	(bad)  
  40729d:	ins    DWORD PTR es:[rdi],dx
  40729e:	add    BYTE PTR gs:[rbx+0x6f],ah
  4072a2:	ins    BYTE PTR es:[rdi],dx
  4072a3:	add    BYTE PTR [rax],al
  4072a5:	add    BYTE PTR [rax],al
  4072a7:	add    BYTE PTR [rip+0x2073362d],ah        # 0x20b3a8da
  4072ad:	and    BYTE PTR [rip+0x7330332d],ah        # 0x7370a5e0
  4072b3:	and    BYTE PTR [rax],ah
  4072b5:	and    eax,0x7330312d
  4072ba:	and    BYTE PTR [rax],ah
  4072bc:	and    eax,0x7338312d
  4072c1:	and    BYTE PTR [rax],ah
  4072c3:	and    eax,0x2073362d
  4072c8:	and    BYTE PTR [rip+0x2073362d],ah        # 0x20b3a8fb
  4072ce:	and    BYTE PTR [rdx],cl
  4072d0:	add    BYTE PTR [rsi+0x61],dh
  4072d3:	jb     0x40733e
  4072d5:	gs jae 0x4072d8
  4072d8:	jae    0x407343
  4072da:	jp     0x407341
  4072dc:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  4072e0:	and    BYTE PTR gs:[rsi+0x61],ch
  4072e4:	ins    DWORD PTR es:[rdi],dx
  4072e5:	add    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4072ea:	and    BYTE PTR gs:[rsi+0x61],dh
  4072ee:	ins    BYTE PTR es:[rdi],dx
  4072ef:	jne    0x407356
  4072f1:	add    BYTE PTR [rax],al
  4072f3:	add    BYTE PTR [rax],al
  4072f5:	add    BYTE PTR [rax],al
  4072f7:	add    BYTE PTR [rip+0x2073362e],ah        # 0x20b3a92b
  4072fd:	and    BYTE PTR [rip+0x7330332e],ah        # 0x7370a631
  407303:	and    BYTE PTR [rax],ah
  407305:	and    eax,0x7330312e
  40730a:	and    BYTE PTR [rax],ah
  40730c:	and    eax,0x7338312e
  407311:	and    BYTE PTR [rax],ah
  407313:	and    eax,0x2073362e
  407318:	and    BYTE PTR [rip+0x2073362e],ah        # 0x20b3a94c
  40731e:	and    BYTE PTR [rdx],cl
  407320:	add    BYTE PTR [rbx+0x51],dl
  407323:	rex.WR
  407324:	rex.R
  407325:	gs jae 0x40738b
  407328:	jb     0x407393
  40732a:	(bad)  
  40732b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40732e:	ins    BYTE PTR es:[rdi],dx
  40732f:	add    BYTE PTR [rsi+0x61],ch
  407332:	ins    DWORD PTR es:[rdi],dx
  407333:	gs ins BYTE PTR es:[rdi],dx
  407335:	outs   dx,BYTE PTR gs:[rsi]
  407337:	and    BYTE PTR [rax+riz*1],bh
  40733a:	jae    0x4073a5
  40733c:	jp     0x4073a3
  40733e:	outs   dx,DWORD PTR ds:[rsi]
  40733f:	data16 sub BYTE PTR [rsi+0x61],ch
  407343:	ins    DWORD PTR es:[rdi],dx
  407344:	sub    DWORD PTR gs:[rax],eax
  407347:	push   rbx
  407348:	push   rcx
  407349:	rex.WR
  40734a:	rex.RXB
  40734b:	gs je  0x4073a1
  40734e:	je     0x4073bd
  407350:	je     0x407393
  407352:	je     0x4073c8
  407354:	jb     0x407356
  407356:	push   rbx
  407357:	push   rcx
  407358:	rex.WR
  407359:	rex.RXB
  40735a:	gs je  0x4073a1
  40735d:	gs jae 0x4073c3
  407360:	rex.RX imul r12d,DWORD PTR [rbp+0x6c],0x6e750064
  407368:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40736c:	outs   dx,BYTE PTR ds:[rsi]
  40736d:	cmp    ah,BYTE PTR [rax]
  40736f:	and    eax,0x64
  407374:	add    BYTE PTR [rax],al
  407376:	add    BYTE PTR [rax],al
  407378:	and    eax,0x20206436
  40737d:	and    eax,0x20733033
  407382:	and    BYTE PTR [rip+0x20643031],ah        # 0x20a4a3b9
  407388:	and    BYTE PTR [rip+0x20733831],ah        # 0x20b3abbf
  40738e:	and    BYTE PTR [rip+0x20756c36],ah        # 0x20b5dfca
  407394:	and    BYTE PTR [rip+0x20206436],ah        # 0x2060d7d0
  40739a:	or     al,BYTE PTR [rax]
  40739c:	and    eax,0x73257325
  4073a1:	add    BYTE PTR [rax],al
  4073a3:	add    BYTE PTR [rax],al
  4073a5:	add    BYTE PTR [rax],al
  4073a7:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465ae20
  4073ad:	cmp    ah,BYTE PTR [rax]
  4073af:	(bad)  
  4073b0:	jae    0x407422
  4073b2:	jb     0x40741d
  4073b4:	outs   dx,BYTE PTR ds:[rsi]
  4073b5:	je     0x40741d
  4073b7:	sub    BYTE PTR [rcx],ch
  4073b9:	sub    al,0x20
  4073bb:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4073be:	jne    0x40742d
  4073c0:	outs   dx,BYTE PTR ds:[rsi]
  4073c1:	and    BYTE PTR [rip+0x61662064],ah        # 0x61a6942b
  4073c7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6164000a
  4073cf:	je     0x407432
  4073d1:	pop    rbx
  4073d2:	movsxd ebx,DWORD PTR [rbp+0x2e]
  4073d5:	(bad)  
  4073d6:	jne    0x40743e
  4073d8:	data16 gs jb 0x4073dc
  4073dc:	push   rbx
  4073dd:	push   rcx
  4073de:	rex.WR
  4073df:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x6c6f43
  4073e7:	push   rbx
  4073e8:	push   rcx
  4073e9:	rex.WR
  4073ea:	rex.RX
  4073eb:	gs je  0x407451
  4073ee:	push   0x4c554e00
  4073f3:	rex.WR add BYTE PTR [rcx+riz*2+0x74],r12b
  4073f8:	(bad)  
  4073f9:	pop    rbx
  4073fa:	movsxd ebx,DWORD PTR [rbp+0x2e]
  4073fd:	ins    BYTE PTR es:[rdi],dx
  4073fe:	outs   dx,BYTE PTR gs:[rsi]
  407400:	and    BYTE PTR [rsi],bh
  407402:	cmp    eax,0x3020
  407407:	add    BYTE PTR [rbp+0x72],ah
  40740a:	jb     0x40747b
  40740c:	jb     0x407448
  40740e:	and    eax,0x70203a64
  407413:	jb     0x407487
  407415:	gs je  0x407438
  407418:	movsxd esp,DWORD PTR [rcx+0x6e]
  40741b:	outs   dx,BYTE PTR ds:[rsi]
  40741c:	outs   dx,DWORD PTR ds:[rsi]
  40741d:	je     0x40743f
  40741f:	imul   ebp,DWORD PTR [rsi+0x74],0x72707265
  407426:	gs je  0x407449
  407429:	push   rbx
  40742a:	push   rcx
  40742b:	rex.WR push rdx
  40742d:	rex.RB push r12
  40742f:	push   rbp
  407430:	push   rdx
  407431:	rex.WRX and BYTE PTR [rbx+0x6f],r12b
  407435:	fs and BYTE PTR gs:[rip+0x53000a64],ah        # 0x53407ea1
  40743d:	push   rcx
  40743e:	rex.WR
  40743f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  407441:	jb     0x4074a8
  407443:	push   rdx
  407444:	gs jae 0x4074bc
  407447:	ins    BYTE PTR es:[rdi],dx
  407448:	je     0x4074bd
  40744a:	and    BYTE PTR [rdx+0x65],dh
  40744d:	je     0x4074c4
  40744f:	jb     0x4074bf
  407451:	gs and BYTE PTR fs:[rip+0x53000a73],ah        # 0x53407ecc
  407459:	push   rcx
  40745a:	rex.WR
  40745b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40745d:	jb     0x4074c4
  40745f:	push   rdx
  407460:	gs jae 0x4074d8
  407463:	ins    BYTE PTR es:[rdi],dx
  407464:	je     0x4074d9
  407466:	add    BYTE PTR [rbx+0x51],dl
  407469:	rex.WR pop rdi
  40746b:	push   rbx
  40746c:	push   rbp
  40746d:	rex.XB
  40746e:	rex.XB
  40746f:	rex.RB push r11
  407471:	push   rbx
  407472:	add    BYTE PTR [rbx+0x51],dl
  407475:	rex.WR pop rdi
  407477:	rex.WRX
  407478:	rex.WRXB pop r15
  40747a:	rex.R
  40747b:	push   r12
  40747d:	add    BYTE PTR [r8],al
  407480:	mov    al,0xa9
  407482:	(bad)  
  407483:	push   QWORD PTR [rax-0x4f000056]
  407489:	stos   BYTE PTR es:[rdi],al
  40748a:	(bad)  
  40748b:	push   QWORD PTR [rax-0x5f000056]
  407491:	test   eax,0xa990ffff
  407496:	(bad)  
  407497:	inc    DWORD PTR [rax+0x70ffffa9]
  40749d:	test   eax,0xa960ffff
  4074a2:	(bad)  
  4074a3:	call   QWORD PTR [rax-0x57]
  4074a6:	(bad)  
  4074a7:	inc    DWORD PTR [rcx-0x57]
  4074aa:	(bad)  
  4074ab:	push   QWORD PTR [rdx-0x59]
  4074ae:	(bad)  
  4074af:	jmp    QWORD PTR [rax-0x6f000056]
  4074b5:	stos   BYTE PTR es:[rdi],al
  4074b6:	(bad)  
  4074b7:	inc    DWORD PTR [rax+0x70ffffaa]
  4074bd:	stos   BYTE PTR es:[rdi],al
  4074be:	(bad)  
  4074bf:	jmp    QWORD PTR [rax-0x56]
  4074c2:	(bad)  
  4074c3:	call   QWORD PTR [rax-0x56]
  4074c6:	(bad)  
  4074c7:	inc    DWORD PTR [rax-0x56]
  4074ca:	(bad)  
  4074cb:	push   QWORD PTR [rax]
  4074cd:	stos   BYTE PTR es:[rdi],al
  4074ce:	(bad)  
  4074cf:	jmp    QWORD PTR [rax]
  4074d1:	stos   BYTE PTR es:[rdi],al
  4074d2:	(bad)  
  4074d3:	call   QWORD PTR [rax]
  4074d5:	stos   BYTE PTR es:[rdi],al
  4074d6:	(bad)  
  4074d7:	inc    DWORD PTR [rax]
  4074d9:	stos   BYTE PTR es:[rdi],al
  4074da:	(bad)  
  4074db:	push   rax
  4074dd:	test   eax,0xaab0ffff
  4074e2:	(bad)  
  4074e3:	push   QWORD PTR [rax-0x4f000056]
  4074e9:	stos   BYTE PTR es:[rdi],al
  4074ea:	(bad)  
  4074eb:	push   QWORD PTR [rax-0x4f000056]
  4074f1:	stos   BYTE PTR es:[rdi],al
  4074f2:	(bad)  
  4074f3:	push   QWORD PTR [rax-0x4f000056]
  4074f9:	stos   BYTE PTR es:[rdi],al
  4074fa:	(bad)  
  4074fb:	push   QWORD PTR [rax-0x4f000056]
  407501:	stos   BYTE PTR es:[rdi],al
  407502:	(bad)  
  407503:	push   QWORD PTR [rax-0x4f000056]
  407509:	stos   BYTE PTR es:[rdi],al
  40750a:	(bad)  
  40750b:	push   QWORD PTR [rax-0x4f000056]
  407511:	stos   BYTE PTR es:[rdi],al
  407512:	(bad)  
  407513:	push   QWORD PTR [rax-0x4f000056]
  407519:	stos   BYTE PTR es:[rdi],al
  40751a:	(bad)  
  40751b:	push   QWORD PTR [rax-0x4f000056]
  407521:	stos   BYTE PTR es:[rdi],al
  407522:	(bad)  
  407523:	push   QWORD PTR [rax-0x4f000056]
  407529:	stos   BYTE PTR es:[rdi],al
  40752a:	(bad)  
  40752b:	push   QWORD PTR [rax-0x4f000056]
  407531:	stos   BYTE PTR es:[rdi],al
  407532:	(bad)  
  407533:	push   QWORD PTR [rax-0x4f000056]
  407539:	stos   BYTE PTR es:[rdi],al
  40753a:	(bad)  
  40753b:	push   QWORD PTR [rax-0x4f000056]
  407541:	stos   BYTE PTR es:[rdi],al
  407542:	(bad)  
  407543:	push   QWORD PTR [rax-0x4f000056]
  407549:	stos   BYTE PTR es:[rdi],al
  40754a:	(bad)  
  40754b:	push   QWORD PTR [rax-0x4f000056]
  407551:	stos   BYTE PTR es:[rdi],al
  407552:	(bad)  
  407553:	push   QWORD PTR [rax-0x4f000056]
  407559:	stos   BYTE PTR es:[rdi],al
  40755a:	(bad)  
  40755b:	push   QWORD PTR [rax-0x4f000056]
  407561:	stos   BYTE PTR es:[rdi],al
  407562:	(bad)  
  407563:	push   QWORD PTR [rax-0x4f000056]
  407569:	stos   BYTE PTR es:[rdi],al
  40756a:	(bad)  
  40756b:	push   QWORD PTR [rax-0x4f000056]
  407571:	stos   BYTE PTR es:[rdi],al
  407572:	(bad)  
  407573:	push   QWORD PTR [rax-0x4f000056]
  407579:	stos   BYTE PTR es:[rdi],al
  40757a:	(bad)  
  40757b:	push   QWORD PTR [rax-0x4f000056]
  407581:	stos   BYTE PTR es:[rdi],al
  407582:	(bad)  
  407583:	push   QWORD PTR [rax-0x4f000056]
  407589:	stos   BYTE PTR es:[rdi],al
  40758a:	(bad)  
  40758b:	push   QWORD PTR [rax-0x4f000056]
  407591:	stos   BYTE PTR es:[rdi],al
  407592:	(bad)  
  407593:	push   QWORD PTR [rax-0x4f000056]
  407599:	stos   BYTE PTR es:[rdi],al
  40759a:	(bad)  
  40759b:	push   QWORD PTR [rax-0x4f000056]
  4075a1:	stos   BYTE PTR es:[rdi],al
  4075a2:	(bad)  
  4075a3:	push   QWORD PTR [rax-0x4f000056]
  4075a9:	stos   BYTE PTR es:[rdi],al
  4075aa:	(bad)  
  4075ab:	push   QWORD PTR [rax-0x4f000056]
  4075b1:	stos   BYTE PTR es:[rdi],al
  4075b2:	(bad)  
  4075b3:	push   QWORD PTR [rax-0x4f000056]
  4075b9:	stos   BYTE PTR es:[rdi],al
  4075ba:	(bad)  
  4075bb:	push   QWORD PTR [rax-0x4f000056]
  4075c1:	stos   BYTE PTR es:[rdi],al
  4075c2:	(bad)  
  4075c3:	push   QWORD PTR [rax-0x4f000056]
  4075c9:	stos   BYTE PTR es:[rdi],al
  4075ca:	(bad)  
  4075cb:	push   QWORD PTR [rax-0x4f000056]
  4075d1:	stos   BYTE PTR es:[rdi],al
  4075d2:	(bad)  
  4075d3:	push   QWORD PTR [rax-0x4f000056]
  4075d9:	stos   BYTE PTR es:[rdi],al
  4075da:	(bad)  
  4075db:	push   QWORD PTR [rax-0x4f000056]
  4075e1:	stos   BYTE PTR es:[rdi],al
  4075e2:	(bad)  
  4075e3:	push   QWORD PTR [rax-0x4f000056]
  4075e9:	stos   BYTE PTR es:[rdi],al
  4075ea:	(bad)  
  4075eb:	push   QWORD PTR [rax-0x4f000056]
  4075f1:	stos   BYTE PTR es:[rdi],al
  4075f2:	(bad)  
  4075f3:	push   QWORD PTR [rax-0x4f000056]
  4075f9:	stos   BYTE PTR es:[rdi],al
  4075fa:	(bad)  
  4075fb:	push   QWORD PTR [rax-0x4f000056]
  407601:	stos   BYTE PTR es:[rdi],al
  407602:	(bad)  
  407603:	push   QWORD PTR [rax-0x4f000056]
  407609:	stos   BYTE PTR es:[rdi],al
  40760a:	(bad)  
  40760b:	push   QWORD PTR [rax-0x4f000056]
  407611:	stos   BYTE PTR es:[rdi],al
  407612:	(bad)  
  407613:	push   QWORD PTR [rax-0x1f000056]
  407619:	test   eax,0xa9d0ffff
  40761e:	(bad)  
  40761f:	inc    eax
  407621:	test   eax,0x7325ffff
  407626:	cmp    ah,BYTE PTR [rip+0x51203a64]        # 0x5160b090
  40762c:	jne    0x407693
  40762e:	jb     0x4076a9
  407630:	cmp    cl,BYTE PTR [rdx]
  407632:	add    BYTE PTR [rdi+0x6f],ah
  407635:	add    BYTE PTR [rcx],cl
  407637:	and    eax,0x73
  40763c:	add    BYTE PTR [rax],al
  40763e:	add    BYTE PTR [rax],al
  407640:	and    eax,0x64253a73
  407645:	cmp    ah,BYTE PTR [rax]
  407647:	movsxd ebp,DWORD PTR [rdi+0x75]
  40764a:	ins    BYTE PTR es:[rdi],dx
  40764b:	and    BYTE PTR fs:[rsi+0x6f],ch
  40764f:	je     0x407671
  407651:	(bad)  
  407652:	ins    BYTE PTR es:[rdi],dx
  407653:	ins    BYTE PTR es:[rdi],dx
  407654:	outs   dx,DWORD PTR ds:[rsi]
  407655:	movsxd esp,DWORD PTR [rcx+0x74]
  407658:	and    BYTE PTR gs:[rbp+0x65],ch
  40765c:	ins    DWORD PTR es:[rdi],dx
  40765d:	outs   dx,DWORD PTR ds:[rsi]
  40765e:	jb     0x4076d9
  407660:	or     al,BYTE PTR [rax]
  407662:	and    eax,0x64253a73
  407667:	cmp    ah,BYTE PTR [rax]
  407669:	outs   dx,BYTE PTR ds:[rsi]
  40766a:	gs js  0x4076e1
  40766d:	pop    rdi
  40766e:	jno    0x4076e5
  407670:	gs jb  0x4076ec
  407673:	sub    BYTE PTR [rcx],ch
  407675:	and    BYTE PTR [rsi+0x61],ah
  407678:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6f00000a
  407680:	jo     0x4076f6
  407682:	imul   ebp,DWORD PTR [rdi+0x6e],0x26262073
  407689:	and    BYTE PTR [rcx+0x72],ah
  40768c:	addr32 jbe 0x40768f
  40768f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7560b108
  407695:	outs   dx,BYTE PTR ds:[rsi]
  407696:	(bad)  
  407697:	(bad)  
  407698:	ins    BYTE PTR es:[rdi],dx
  407699:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40769e:	(bad)  
  40769f:	ins    BYTE PTR es:[rdi],dx
  4076a0:	ins    BYTE PTR es:[rdi],dx
  4076a1:	outs   dx,DWORD PTR ds:[rsi]
  4076a2:	movsxd esp,DWORD PTR [rcx+0x74]
  4076a5:	and    BYTE PTR gs:[rdi+rbp*2+0x67],ch
  4076aa:	imul   ebp,DWORD PTR [rsi+0x20],0x75727473
  4076b1:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4076b5:	or     al,BYTE PTR gs:[rax]
  4076b8:	jne    0x407728
  4076ba:	(bad)  
  4076bb:	(bad)  
  4076bc:	ins    BYTE PTR es:[rdi],dx
  4076bd:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4076c2:	addr32 gs je 0x4076e6
  4076c6:	push   0x6e74736f
  4076cb:	(bad)  
  4076cc:	ins    DWORD PTR es:[rdi],dx
  4076cd:	add    BYTE PTR gs:[rax],al
  4076d0:	(bad)  
  4076d2:	jno    0x407740
  4076d4:	outs   dx,DWORD PTR ds:[rsi]
  4076d5:	(bad)
  4076db:	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
  4076e2:	and    BYTE PTR [rsi+0x55],cl
  4076e5:	rex.WR
  4076e6:	rex.WR and BYTE PTR [rbp+riz*2+0x72],r14b
  4076eb:	ins    DWORD PTR es:[rdi],dx
  4076ec:	imul   ebp,DWORD PTR [rsi+0x61],0x73726f74
  4076f3:	and    BYTE PTR [rax],ch
  4076f5:	(bad)  
  4076f6:	pop    rsp
  4076f7:	xor    BYTE PTR [rdi],ah
  4076f9:	sub    DWORD PTR [rax],esp
  4076fb:	outs   dx,BYTE PTR ds:[rsi]
  4076fc:	outs   dx,DWORD PTR ds:[rsi]
  4076fd:	je     0x40771f
  4076ff:	jns    0x407766
  407701:	je     0x407723
  407703:	jae    0x40777a
  407705:	jo     0x407777
  407707:	outs   dx,DWORD PTR ds:[rsi]
  407708:	jb     0x40777e
  40770a:	gs fs or al,BYTE PTR cs:[rax]
  40770f:	add    BYTE PTR [rdi+0x61],dh
  407712:	jb     0x407782
  407714:	imul   ebp,DWORD PTR [rsi+0x67],0x562d203a
  40771b:	and    BYTE PTR [rbp+0x75],ch
  40771e:	jae    0x407794
  407720:	and    BYTE PTR [rdx+0x65],ah
  407723:	and    BYTE PTR [rdx],dh
  407725:	and    BYTE PTR [rdi+0x72],ch
  407728:	and    BYTE PTR [rbx],dh
  40772a:	sub    al,0x20
  40772c:	outs   dx,BYTE PTR ds:[rsi]
  40772d:	outs   dx,DWORD PTR ds:[rsi]
  40772e:	je     0x407750
  407730:	and    eax,0x20202e73
  407735:	push   rbp
  407736:	jae    0x4077a1
  407738:	outs   dx,BYTE PTR ds:[rsi]
  407739:	and    BYTE PTR [ebp+eiz*2+0x66],ah
  40773e:	(bad)  
  40773f:	jne    0x4077ad
  407741:	je     0x407763
  407743:	outs   dx,DWORD PTR ds:[rsi]
  407744:	data16 and BYTE PTR [rbx],dh
  407747:	or     al,BYTE PTR [rax]
  407749:	add    BYTE PTR [rax],al
  40774b:	add    BYTE PTR [rax],al
  40774d:	add    BYTE PTR [rax],al
  40774f:	add    BYTE PTR [rbp+0x73],dh
  407752:	(bad)  
  407753:	cmp    ah,BYTE PTR gs:[eax]
  407757:	and    BYTE PTR [rip+0x200a2073],ah        # 0x204a97d0
  40775d:	and    BYTE PTR [rax],ah
  40775f:	and    BYTE PTR [rax],ah
  407761:	and    BYTE PTR [rax],ah
  407763:	and    BYTE PTR [rbx+0x2d],bl
  407766:	push   rbp
  407767:	and    BYTE PTR [rbp+0x73],dh
  40776a:	gs jb  0x4077db
  40776d:	(bad)  
  40776e:	ins    DWORD PTR es:[rdi],dx
  40776f:	gs pop rbp
  407771:	and    BYTE PTR [rbx+0x2d],bl
  407774:	push   rax
  407775:	and    BYTE PTR [rax+0x61],dh
  407778:	jae    0x4077ed
  40777a:	ja     0x4077eb
  40777c:	jb     0x4077e2
  40777e:	pop    rbp
  40777f:	or     ah,BYTE PTR [rax]
  407781:	and    BYTE PTR [rax],ah
  407783:	and    BYTE PTR [rax],ah
  407785:	and    BYTE PTR [rax],ah
  407787:	and    BYTE PTR [rbx+0x2d],bl
  40778a:	push   rbx
  40778b:	and    BYTE PTR [rbx+0x65],dh
  40778e:	jb     0x407806
  407790:	gs jb  0x407801
  407793:	(bad)  
  407794:	ins    DWORD PTR es:[rdi],dx
  407795:	gs pop rbp
  407797:	and    BYTE PTR [rbx+0x2d],bl
  40779a:	and    BYTE PTR [rcx+riz*2+0x74],r12b
  40779f:	(bad)  
  4077a0:	(bad)  
  4077a2:	jae    0x407809
  4077a4:	pop    rbp
  4077a5:	or     ah,BYTE PTR [rax]
  4077a7:	and    BYTE PTR [rax],ah
  4077a9:	and    BYTE PTR [rax],ah
  4077ab:	and    BYTE PTR [rax],ah
  4077ad:	and    BYTE PTR [rbx+0x2d],bl
  4077b0:	imul   esp,DWORD PTR [rax],0x75706e69
  4077b6:	je     0x4077d8
  4077b8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  4077bf:	gs pop rbp
  4077c1:	and    BYTE PTR [rbx+0x2d],bl
  4077c4:	outs   dx,DWORD PTR ds:[rsi]
  4077c5:	and    BYTE PTR [rdi+0x75],ch
  4077c8:	je     0x40783a
  4077ca:	jne    0x407840
  4077cc:	and    BYTE PTR [rsi+0x69],ah
  4077cf:	ins    BYTE PTR es:[rdi],dx
  4077d0:	outs   dx,BYTE PTR gs:[rsi]
  4077d2:	(bad)  
  4077d3:	ins    DWORD PTR es:[rdi],dx
  4077d4:	gs pop rbp
  4077d6:	and    BYTE PTR [rbx+0x2d],bl
  4077d9:	and    BYTE PTR gs:[rbp+0x72],ah
  4077dd:	jb     0x40784e
  4077df:	jb     0x407801
  4077e1:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  4077e8:	gs pop rbp
  4077ea:	or     al,BYTE PTR [rax]
  4077ec:	push   rbp
  4077ed:	cmp    dl,BYTE PTR [rax+0x3a]
  4077f0:	push   rbx
  4077f1:	cmp    ah,BYTE PTR [rdx+rdi*1+0x44]
  4077f5:	cmp    ch,BYTE PTR [rcx+0x3a]
  4077f8:	outs   dx,DWORD PTR ds:[rsi]
  4077f9:	cmp    ah,BYTE PTR [rbp+0x3a]
  4077fc:	je     0x407838
  4077fe:	push   rsi
  4077ff:	cmp    ch,BYTE PTR [rax+0x71]
  407802:	jbe    0x407804
  407804:	jb     0x407806
  407806:	and    eax,0x75203a73
  40780b:	outs   dx,BYTE PTR ds:[rsi]
  40780c:	(bad)  
  40780d:	(bad)  
  40780e:	ins    BYTE PTR es:[rdi],dx
  40780f:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  407814:	outs   dx,DWORD PTR ds:[rsi]
  407815:	jo     0x40787c
  407817:	outs   dx,BYTE PTR ds:[rsi]
  407818:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2560b291
  40781e:	jae    0x40782a
  407820:	add    BYTE PTR [rdi+0x0],dh
  407823:	add    BYTE PTR [rax],al
  407825:	add    BYTE PTR [rax],al
  407827:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465b2a0
  40782d:	and    BYTE PTR [rbp+0x6e],dh
  407830:	(bad)  
  407831:	(bad)  
  407832:	ins    BYTE PTR es:[rdi],dx
  407833:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  407838:	outs   dx,DWORD PTR ds:[rsi]
  407839:	jo     0x4078a0
  40783b:	outs   dx,BYTE PTR ds:[rsi]
  40783c:	and    BYTE PTR [rip+0x6f662073],ah        # 0x6fa698b5
  407842:	jb     0x407864
  407844:	jbe    0x4078ab
  407846:	jb     0x4078aa
  407848:	outs   dx,DWORD PTR ds:[rsi]
  407849:	jae    0x4078b0
  40784b:	and    BYTE PTR [rdi+0x70],ch
  40784e:	gs jb  0x4078b2
  407851:	je     0x4078bc
  407853:	outs   dx,DWORD PTR ds:[rsi]
  407854:	outs   dx,BYTE PTR ds:[rsi]
  407855:	cmp    ah,BYTE PTR [rax]
  407857:	and    eax,0xa73
  40785c:	add    BYTE PTR [rax],al
  40785e:	add    BYTE PTR [rax],al
  407860:	and    eax,0x64253a73
  407865:	cmp    ah,BYTE PTR [rax]
  407867:	push   rsi
  407868:	gs jb  0x4078cd
  40786b:	outs   dx,DWORD PTR ds:[rsi]
  40786c:	jae    0x4078d3
  40786e:	and    BYTE PTR [rdi+0x70],ch
  407871:	gs jb  0x4078d5
  407874:	je     0x4078df
  407876:	outs   dx,DWORD PTR ds:[rsi]
  407877:	outs   dx,BYTE PTR ds:[rsi]
  407878:	and    BYTE PTR [rbp+0x6e],ah
  40787b:	(bad)  
  40787c:	(bad)  
  40787d:	ins    BYTE PTR es:[rdi],dx
  40787e:	gs or  al,BYTE PTR fs:[rax]
  407882:	push   rbx
  407883:	push   rcx
  407884:	rex.WR
  407885:	rex.B ins BYTE PTR es:[rdi],dx
  407887:	ins    BYTE PTR es:[rdi],dx
  407888:	outs   dx,DWORD PTR ds:[rsi]
  407889:	movsxd ecx,DWORD PTR [rax+0x61]
  40788c:	outs   dx,BYTE PTR ds:[rsi]
  40788d:	fs ins BYTE PTR es:[rdi],dx
  40788f:	add    BYTE PTR gs:[rax],al
  407892:	add    BYTE PTR [rax],al
  407894:	add    BYTE PTR [rax],al
  407896:	add    BYTE PTR [rax],al
  407898:	data16 (bad) 
  40789a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4078a2:	(bad)  
  4078a3:	ins    BYTE PTR es:[rdi],dx
  4078a4:	ins    BYTE PTR es:[rdi],dx
  4078a5:	outs   dx,DWORD PTR ds:[rsi]
  4078a6:	movsxd esp,DWORD PTR [rcx+0x74]
  4078a9:	and    BYTE PTR gs:[rcx+0x6e],ah
  4078ad:	and    BYTE PTR [rbp+0x6e],ah
  4078b0:	jbe    0x40791b
  4078b2:	jb     0x407923
  4078b4:	outs   dx,BYTE PTR ds:[rsi]
  4078b5:	ins    DWORD PTR es:[rdi],dx
  4078b6:	outs   dx,BYTE PTR gs:[rsi]
  4078b8:	je     0x4078ba
  4078ba:	push   0x766e45
  4078bf:	push   rbx
  4078c0:	push   rcx
  4078c1:	rex.WR push rbx
  4078c3:	gs je  0x40790b
  4078c6:	outs   dx,BYTE PTR ds:[rsi]
  4078c7:	jbe    0x40790a
  4078c9:	je     0x40793f
  4078cb:	jb     0x4078cd
  4078cd:	data16 (bad) 
  4078cf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4078d7:	jae    0x40793e
  4078d9:	je     0x4078fb
  4078db:	push   rbx
  4078dc:	push   rcx
  4078dd:	rex.WR pop rdi
  4078df:	rex.WRXB push r14
  4078e1:	pop    rdi
  4078e2:	rex.WRXB
  4078e3:	rex.R
  4078e4:	rex.X
  4078e5:	rex.XB xor eax,DWORD PTR [r8]
  4078e8:	data16 (bad) 
  4078ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4078f2:	(bad)  
  4078f3:	ins    BYTE PTR es:[rdi],dx
  4078f4:	ins    BYTE PTR es:[rdi],dx
  4078f5:	outs   dx,DWORD PTR ds:[rsi]
  4078f6:	movsxd esp,DWORD PTR [rcx+0x74]
  4078f9:	and    BYTE PTR gs:[rcx+0x20],ah
  4078fd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407900:	outs   dx,BYTE PTR ds:[rsi]
  407901:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  407906:	outs   dx,BYTE PTR ds:[rsi]
  407907:	add    BYTE PTR [rax+0x44],ch
  40790a:	(bad)  
  40790c:	add    BYTE PTR [rbx+0x51],dl
  40790f:	rex.WR
  407910:	rex.XB outs dx,DWORD PTR ds:[rsi]
  407912:	outs   dx,BYTE PTR ds:[rsi]
  407913:	outs   dx,BYTE PTR ds:[rsi]
  407914:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x66]
  407919:	(bad)  
  40791a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  407922:	(bad)  
  407923:	ins    BYTE PTR es:[rdi],dx
  407924:	ins    BYTE PTR es:[rdi],dx
  407925:	outs   dx,DWORD PTR ds:[rsi]
  407926:	movsxd esp,DWORD PTR [rcx+0x74]
  407929:	and    BYTE PTR gs:[rcx+0x20],ah
  40792d:	jae    0x4079a3
  40792f:	(bad)  
  407930:	je     0x407997
  407932:	ins    DWORD PTR es:[rdi],dx
  407933:	outs   dx,BYTE PTR gs:[rsi]
  407935:	je     0x407957
  407937:	push   0x6c646e61
  40793c:	add    BYTE PTR gs:[rbx+0x51],dl
  407940:	rex.WR push rax
  407942:	jb     0x4079a9
  407944:	jo     0x4079a7
  407946:	jb     0x4079ad
  407948:	add    BYTE PTR [rbx+0x51],dl
  40794b:	rex.WR
  40794c:	rex.RB js 0x4079b4
  40794f:	movsxd esi,DWORD PTR [rbp+0x74]
  407952:	cmp    ah,BYTE PTR gs:[rax]
  407955:	movsxd ebp,DWORD PTR [rdi+0x6e]
  407958:	je     0x4079c3
  40795a:	outs   dx,BYTE PTR ds:[rsi]
  40795b:	jne    0x4079c6
  40795d:	outs   dx,BYTE PTR ds:[rsi]
  40795e:	cs cs or al,BYTE PTR cs:[eax]
  407964:	push   rbx
  407965:	push   rcx
  407966:	rex.WR
  407967:	rex.RB js 0x4079cf
  40796a:	movsxd esi,DWORD PTR [rbp+0x74]
  40796d:	add    BYTE PTR gs:[rbx+0x51],dl
  407971:	rex.WR
  407972:	rex.RX jb 0x4079da
  407975:	gs rex.W (bad) 
  407978:	outs   dx,BYTE PTR ds:[rsi]
  407979:	fs ins BYTE PTR es:[rdi],dx
  40797b:	add    BYTE PTR gs:[rax],al
  40797e:	add    BYTE PTR [rax],al
  407980:	(bad)  
  407981:	(bad)  
  407983:	push   QWORD PTR [rdi]
  407985:	(bad)  
  407987:	push   QWORD PTR [rdi]
  407989:	(bad)  
  40798b:	push   QWORD PTR [rdi]
  40798d:	(bad)  
  40798f:	push   QWORD PTR [rdi]
  407991:	(bad)  
  407993:	push   QWORD PTR [rdi]
  407995:	(bad)  
  407997:	push   QWORD PTR [rdi]
  407999:	(bad)  
  40799b:	push   QWORD PTR [rdi]
  40799d:	(bad)  
  40799f:	push   QWORD PTR [rdi]
  4079a1:	(bad)  
  4079a3:	push   QWORD PTR [rdi]
  4079a5:	(bad)  
  4079a7:	push   QWORD PTR [rdi]
  4079a9:	(bad)  
  4079ab:	push   QWORD PTR [rdi]
  4079ad:	(bad)  
  4079af:	jmp    rbx
  4079b1:	fcos   
  4079b3:	push   QWORD PTR [rdi]
  4079b5:	(bad)  
  4079b7:	push   QWORD PTR [rdi]
  4079b9:	(bad)  
  4079bb:	dec    edx
  4079bd:	fcos   
  4079bf:	push   QWORD PTR [rdi]
  4079c1:	(bad)  
  4079c3:	push   QWORD PTR [rcx-0x59000027]
  4079c9:	fdivr  st,st(7)
  4079cb:	push   QWORD PTR [rdi]
  4079cd:	(bad)  
  4079cf:	push   QWORD PTR [rdi]
  4079d1:	(bad)  
  4079d3:	push   QWORD PTR [rdi]
  4079d5:	(bad)  
  4079d7:	push   QWORD PTR [rdi]
  4079d9:	(bad)  
  4079db:	push   QWORD PTR [rdi]
  4079dd:	(bad)  
  4079df:	push   QWORD PTR [rdi]
  4079e1:	(bad)  
  4079e3:	push   QWORD PTR [rdi]
  4079e5:	(bad)  
  4079e7:	push   QWORD PTR [rdi]
  4079e9:	(bad)  
  4079eb:	push   QWORD PTR [rdi]
  4079ed:	(bad)  
  4079ef:	push   QWORD PTR [rdi]
  4079f1:	(bad)  
  4079f3:	push   QWORD PTR [rdi]
  4079f5:	(bad)  
  4079f7:	push   QWORD PTR [rdi]
  4079f9:	(bad)  
  4079fb:	push   QWORD PTR [rdi]
  4079fd:	(bad)  
  4079ff:	call   FWORD PTR [rsi]
  407a01:	(bad)  
  407a03:	call   QWORD PTR [rsi+0x37ffffd9]
  407a09:	(bad)  
  407a0b:	push   QWORD PTR [rdi]
  407a0d:	(bad)  
  407a0f:	inc    DWORD PTR [rsi+0x6affffd9]
  407a15:	fcos   
  407a17:	push   QWORD PTR [rdi]
  407a19:	(bad)  
  407a1b:	push   QWORD PTR [rdi]
  407a1d:	(bad)  
  407a1f:	push   QWORD PTR [rdi]
  407a21:	(bad)  
  407a23:	push   QWORD PTR [rdi]
  407a25:	(bad)  
  407a27:	push   QWORD PTR [rdi]
  407a29:	(bad)  
  407a2b:	call   QWORD PTR [rax-0x27]
  407a2e:	(bad)  
  407a2f:	push   QWORD PTR [rdi]
  407a31:	(bad)  
  407a33:	inc    DWORD PTR [rcx+rbx*8-0x1]
  407a37:	push   QWORD PTR [rdi]
  407a39:	(bad)  
  407a3b:	push   QWORD PTR [rdi]
  407a3d:	(bad)  
  407a3f:	(bad)  
  407a40:	fcmovnu st,st(0)
  407a42:	(bad)  
  407a43:	push   QWORD PTR [rdi]
  407a45:	(bad)  
  407a47:	call   rbx
  407a49:	fdivr  st,st(7)
  407a4b:	inc    DWORD PTR [rax]
	...
  407a7d:	add    BYTE PTR [rax],al
  407a7f:	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 0x2d6da7b2
  407a85:	sub    eax,0x2d2d2d2d
  407a8a:	sub    eax,0x2d2d2d2d
  407a8f:	sub    eax,0x2d2d2d2d
  407a94:	sub    eax,0x2d2d2d2d
  407a99:	sub    eax,0x2d2d2d2d
  407a9e:	sub    eax,0x2d2d2d2d
  407aa3:	sub    eax,0x2d2d2d2d
  407aa8:	sub    eax,0x2d2d2d2d
  407aad:	sub    eax,0x2d2d2d2d
  407ab2:	sub    eax,0x2d2d2d2d
  407ab7:	sub    eax,0x2d2d2d2d
  407abc:	sub    eax,0x2d2d2d2d
  407ac1:	sub    eax,0x2d2d2d2d
  407ac6:	sub    eax,0x2d2d2d2d
  407acb:	sub    eax,0x2d2d2d2d
  407ad0:	sub    eax,0x2d2d2d2d
  407ad5:	sub    eax,0x2d2d2d2d
  407ada:	sub    eax,0x2d2d2d2d
  407adf:	sub    eax,0x2d2d2d2d
  407ae4:	sub    eax,0x2d2d2d2d
  407ae9:	sub    eax,0x2d2d2d2d
  407aee:	sub    eax,0x2d2d2d2d
  407af3:	sub    eax,0x2d2d2d2d
  407af8:	sub    eax,0x2d2d2d2d
  407afd:	sub    eax,0x2d2d2d2d
  407b02:	sub    eax,0x2d2d2d2d
  407b07:	sub    eax,0x2d2d2d2d
  407b0c:	sub    eax,0x2d2d2d2d
  407b11:	sub    eax,0x2d2d2d2d
  407b16:	sub    eax,0x2d2d2d2d
  407b1b:	sub    eax,0x2d2d2d2d
  407b20:	sub    eax,0x2d2d2d2d
  407b25:	sub    eax,0x2d2d2d2d
  407b2a:	sub    eax,0x2d2d2d2d
  407b2f:	sub    eax,0x2d2d2d2d
  407b34:	sub    eax,0x2d2d2d2d
  407b39:	sub    eax,0x2d2d2d2d
  407b3e:	sub    eax,0x2d2d2d2d
  407b43:	sub    eax,0x2d2d2d2d
  407b48:	sub    eax,0x2d2d2d2d
  407b4d:	sub    eax,0x2d2d2d2d
  407b52:	sub    eax,0x2d2d2d2d
  407b57:	sub    eax,0x2d2d2d2d
  407b5c:	sub    eax,0x2d2d2d2d
  407b61:	sub    eax,0x2d2d2d2d
  407b66:	sub    eax,0x2d2d2d2d
  407b6b:	sub    eax,0x2d2d2d2d
  407b70:	sub    eax,0x2d2d2d2d
  407b75:	sub    eax,0x2d2d2d2d
  407b7a:	sub    eax,0x2d2d2d2d
  407b7f:	sub    eax,0x65642f00
  407b84:	jbe    0x407bb5
  407b86:	outs   dx,BYTE PTR ds:[rsi]
  407b87:	jne    0x407bf5
  407b89:	ins    BYTE PTR es:[rdi],dx
  407b8a:	add    BYTE PTR [rax],ah
  407b8c:	and    BYTE PTR [rax],al
	...
  407bbe:	add    BYTE PTR [rax],al
  407bc0:	add    BYTE PTR [rsi+0x40],dh
  407bc6:	add    BYTE PTR [rax],al
  407bc8:	add    BYTE PTR [rcx+0x40],dh
  407bce:	add    BYTE PTR [rax],al
  407bd0:	and    BYTE PTR [rbx],ch
  407bd2:	add    BYTE PTR [rax],al
	...
  407bdd:	add    BYTE PTR [rax],al
  407bdf:	add    BYTE PTR [rcx+0x72],al
  407be2:	addr32 jne 0x407c52
  407be5:	outs   dx,BYTE PTR gs:[rsi]
  407be7:	je     0x407c09
  407be9:	outs   dx,DWORD PTR fs:[rsi]
  407beb:	ins    DWORD PTR es:[rdi],dx
  407bec:	(bad)  
  407bed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  407bf4:	jb     0x407c16
  407bf6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  407bfa:	rex.B
  407bfb:	rex.WB
  407bfc:	rex.WRX sub QWORD PTR [rax],r8
  407bff:	rex.B jb 0x407c69
  407c02:	jne    0x407c71
  407c04:	outs   dx,BYTE PTR gs:[rsi]
  407c06:	je     0x407c28
  407c08:	jae    0x407c73
  407c0a:	outs   dx,BYTE PTR ds:[rsi]
  407c0b:	addr32 jne 0x407c7a
  407c0e:	(bad)  
  407c0f:	jb     0x407c7a
  407c11:	je     0x407c8c
  407c13:	and    BYTE PTR [rax],ch
  407c15:	push   rbx
  407c16:	rex.WB
  407c17:	rex.RXB
  407c18:	rex.WRX sub QWORD PTR [rax],r8
  407c1b:	add    BYTE PTR [rax],al
  407c1d:	add    BYTE PTR [rax],al
  407c1f:	add    BYTE PTR [rdi+0x76],cl
  407c22:	gs jb  0x407c8b
  407c25:	ins    BYTE PTR es:[rdi],dx
  407c26:	outs   dx,DWORD PTR ds:[rsi]
  407c27:	ja     0x407c49
  407c29:	jb     0x407c8c
  407c2b:	outs   dx,BYTE PTR ds:[rsi]
  407c2c:	and    BYTE PTR gs:[ebp+0x72],ah
  407c31:	jb     0x407ca2
  407c33:	jb     0x407c55
  407c35:	sub    BYTE PTR [rdi+0x56],cl
  407c38:	rex.RB push r10
  407c3a:	rex.RX
  407c3b:	rex.WR
  407c3c:	rex.WRXB push r15
  407c3e:	sub    DWORD PTR [rax],eax
  407c40:	push   rax
  407c41:	(bad)  
  407c42:	jb     0x407cb8
  407c44:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  407c4b:	jae    0x407c6d
  407c4d:	outs   dx,DWORD PTR ds:[rsi]
  407c4e:	data16 and BYTE PTR [rbx+0x69],dh
  407c52:	outs   dx,BYTE PTR ds:[esi]
  407c54:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  407c5b:	and    BYTE PTR gs:[rax],ch
  407c5e:	push   rax
  407c5f:	rex.WR
  407c60:	rex.WRXB push r11
  407c62:	push   rbx
  407c63:	sub    DWORD PTR [rax],eax
  407c65:	add    BYTE PTR [rax],al
  407c67:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  407c6b:	(bad)  
  407c6c:	ins    BYTE PTR es:[rdi],dx
  407c6d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  407c71:	jae    0x407c93
  407c73:	outs   dx,DWORD PTR ds:[rsi]
  407c74:	data16 and BYTE PTR [rbx+0x69],dh
  407c78:	outs   dx,BYTE PTR ds:[esi]
  407c7a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  407c81:	and    BYTE PTR gs:[rax],ch
  407c84:	push   rsp
  407c85:	rex.WR
  407c86:	rex.WRXB push r11
  407c88:	push   rbx
  407c89:	sub    DWORD PTR [rax],eax
  407c8b:	add    BYTE PTR [rax],al
  407c8d:	add    BYTE PTR [rax],al
  407c8f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  407c93:	and    BYTE PTR [rdx+0x65],dh
  407c96:	jae    0x407d0d
  407c98:	ins    BYTE PTR es:[rdi],dx
  407c99:	je     0x407cbb
  407c9b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  407ca2:	jae    0x407d11
  407ca4:	(bad)  
  407ca5:	ins    BYTE PTR es:[rdi],dx
  407ca6:	ins    BYTE PTR es:[rdi],dx
  407ca7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  407cab:	(bad)  
  407cac:	and    BYTE PTR gs:[rdx+0x65],dh
  407cb0:	jo     0x407d24
  407cb2:	gs jae 0x407d1a
  407cb5:	outs   dx,BYTE PTR ds:[rsi]
  407cb6:	je     0x407d1d
  407cb8:	and    BYTE PTR fs:[rax],ch
  407cbb:	push   rbp
  407cbc:	rex.WRX
  407cbd:	rex.R
  407cbe:	rex.RB push r10
  407cc0:	rex.RX
  407cc1:	rex.WR
  407cc2:	rex.WRXB push r15
  407cc4:	sub    DWORD PTR [rax],eax
  407cc6:	push   rbp
  407cc7:	outs   dx,BYTE PTR ds:[rsi]
  407cc8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407ccc:	outs   dx,BYTE PTR ds:[rsi]
  407ccd:	and    BYTE PTR [rbp+0x72],ah
  407cd0:	jb     0x407d41
  407cd2:	jb     0x407cd4
  407cd4:	add    BYTE PTR [rax],al
  407cd6:	add    BYTE PTR [rax],al
  407cd8:	pop    rdi
  407cd9:	ins    DWORD PTR es:[rdi],dx
  407cda:	(bad)  
  407cdb:	je     0x407d45
  407cdd:	gs jb  0x407d52
  407ce0:	sub    BYTE PTR [rcx],ch
  407ce2:	cmp    ah,BYTE PTR [rax]
  407ce4:	and    eax,0x6e692073
  407ce9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765a562
  407cef:	sub    al,0x20
  407cf1:	and    eax,0x20202967
  407cf6:	sub    BYTE PTR [rdx+0x65],dh
  407cf9:	je     0x407d71
  407cfb:	(bad)  
  407cfc:	ins    BYTE PTR es:[rdi],dx
  407cfd:	cmp    eax,0xa296725
  407d02:	add    BYTE PTR [rax],al
  407d04:	in     al,dx
  407d05:	scas   eax,DWORD PTR es:[rdi]
  407d06:	(bad)  
  407d07:	jmp    FWORD PTR [rip+0xffffffff9cffffaf]        # 0xffffffff9d407cbc
  407d0d:	scas   eax,DWORD PTR es:[rdi]
  407d0e:	(bad)  
  407d0f:	jmp    FWORD PTR [rdi+rbp*4-0x50430001]
  407d16:	(bad)  
  407d17:	dec    esp
  407d19:	scas   eax,DWORD PTR es:[rdi]
  407d1a:	(bad)  
  407d1b:	(bad)  
  407d1c:	fsubr  QWORD PTR [rdi+0x694dffff]
  407d22:	outs   dx,BYTE PTR ds:[rsi]
  407d23:	addr32 ja 0x407d53
  407d26:	ja     0x407d5e
  407d28:	xor    al,0x20
  407d2a:	jb     0x407da1
  407d2c:	outs   dx,BYTE PTR ds:[rsi]
  407d2d:	je     0x407d98
  407d2f:	ins    DWORD PTR es:[rdi],dx
  407d30:	and    BYTE PTR gs:[rsi+0x61],ah
  407d34:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  407d3c:	add    BYTE PTR [rax],al
  407d3e:	add    BYTE PTR [rax],al
  407d40:	rex.B
  407d41:	fs fs jb 0x407daa
  407d45:	jae    0x407dba
  407d47:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a89dbd
  407d4d:	jae    0x407d6f
  407d4f:	outs   dx,BYTE PTR ds:[rsi]
  407d50:	outs   dx,DWORD PTR ds:[rsi]
  407d51:	and    BYTE PTR [rcx+0x6d],ch
  407d54:	(bad)  
  407d55:	addr32 gs sub eax,0x74636573
  407d5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  407d63:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  407d6a:	jne    0x407dd1
  407d6c:	jb     0x407de7
  407d6e:	and    BYTE PTR [rsi+0x61],ah
  407d71:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  407d79:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a29de3
  407d7f:	je     0x407de6
  407d81:	jae    0x407da3
  407d83:	(bad)  
  407d84:	je     0x407da6
  407d86:	(bad)  
  407d87:	fs fs jb 0x407df0
  407d8b:	jae    0x407e00
  407d8d:	and    BYTE PTR [rip+0x70],ah        # 0x407e03
  407d93:	add    BYTE PTR [rax],al
  407d95:	add    BYTE PTR [rax],al
  407d97:	add    BYTE PTR [rax],ah
  407d99:	and    BYTE PTR [rsi+0x69],dl
  407d9c:	jb     0x407e12
  407d9e:	jne    0x407e01
  407da0:	ins    BYTE PTR es:[rdi],dx
  407da1:	push   rax
  407da2:	jb     0x407e13
  407da4:	je     0x407e0b
  407da6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  407daa:	(bad)  
  407dab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  407db3:	push   0x646f6320
  407db8:	and    BYTE PTR gs:[rax],dh
  407dbb:	js     0x407de2
  407dbd:	js     0x407dbf
  407dbf:	add    BYTE PTR [rax],ah
  407dc1:	and    BYTE PTR [rbp+0x6e],dl
  407dc4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407dc8:	outs   dx,BYTE PTR ds:[rsi]
  407dc9:	and    BYTE PTR [rax+0x73],dh
  407dcc:	gs jne 0x407e33
  407dcf:	outs   dx,DWORD PTR ds:[rsi]
  407dd0:	and    BYTE PTR [rdx+0x65],dh
  407dd3:	ins    BYTE PTR es:[rdi],dx
  407dd4:	outs   dx,DWORD PTR ds:[rsi]
  407dd5:	movsxd esp,DWORD PTR [rcx+0x74]
  407dd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  407ddf:	je     0x407e50
  407de1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  407de4:	and    BYTE PTR [rsi+0x65],dh
  407de7:	jb     0x407e5c
  407de9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  407df0:	or     al,BYTE PTR [rax]
  407df2:	add    BYTE PTR [rax],al
  407df4:	add    BYTE PTR [rax],al
  407df6:	add    BYTE PTR [rax],al
  407df8:	and    BYTE PTR [rax],ah
  407dfa:	push   rbp
  407dfb:	outs   dx,BYTE PTR ds:[rsi]
  407dfc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407e00:	outs   dx,BYTE PTR ds:[rsi]
  407e01:	and    BYTE PTR [rax+0x73],dh
  407e04:	gs jne 0x407e6b
  407e07:	outs   dx,DWORD PTR ds:[rsi]
  407e08:	and    BYTE PTR [rdx+0x65],dh
  407e0b:	ins    BYTE PTR es:[rdi],dx
  407e0c:	outs   dx,DWORD PTR ds:[rsi]
  407e0d:	movsxd esp,DWORD PTR [rcx+0x74]
  407e10:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  407e17:	and    BYTE PTR [rbx+0x69],dh
  407e1a:	jp     0x407e81
  407e1c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4aac86
	...
  407e2e:	add    BYTE PTR [rax],al
  407e30:	cs jo  0x407e97
  407e33:	(bad)  
  407e34:	je     0x407e97
	...
  407e42:	(bad)  
  407e43:	add    BYTE PTR [rax],al
  407e45:	add    BYTE PTR [rsi],ch
	...
  407e5f:	add    BYTE PTR [rip+0x203a73],ah        # 0x60b8d8
  407e65:	push   rax
  407e66:	rex.WRXB push r11
  407e68:	rex.WB pop r8
  407e6a:	rex.WR pop rcx
  407e6c:	pop    rdi
  407e6d:	rex.XB
  407e6e:	rex.WRXB push r10
  407e70:	push   rdx
  407e71:	rex.RB
  407e72:	rex.XB push r12
	...
  407e80:	jne    0x407ef0
  407e82:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407e86:	outs   dx,BYTE PTR ds:[rsi]
  407e87:	and    BYTE PTR [rdi+0x70],ch
  407e8a:	je     0x407ef5
  407e8c:	outs   dx,DWORD PTR ds:[rsi]
  407e8d:	outs   dx,BYTE PTR ds:[rsi]
  407e8e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73659ec1
	...
  407ea0:	jne    0x407f10
  407ea2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  407ea6:	outs   dx,BYTE PTR ds:[rsi]
  407ea7:	and    BYTE PTR [rdi+0x70],ch
  407eaa:	je     0x407f15
  407eac:	outs   dx,DWORD PTR ds:[rsi]
  407ead:	outs   dx,BYTE PTR ds:[rsi]
  407eae:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63659ee1
	...
  407ec0:	outs   dx,DWORD PTR ds:[rsi]
  407ec1:	jo     0x407f37
  407ec3:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  407eca:	jae    0x407f3a
  407ecc:	(bad)  
  407ecd:	je     0x407eef
  407ecf:	je     0x407f32
  407ed1:	imul   esp,DWORD PTR [rbp+0x20],0x61
  407ed5:	outs   dx,BYTE PTR ds:[rsi]
  407ed6:	and    BYTE PTR [rcx+0x72],ah
  407ed9:	addr32 jne 0x407f49
  407edc:	outs   dx,BYTE PTR gs:[rsi]
  407ede:	je     0x407f00
  407ee0:	sub    eax,0x2e25202d
  407ee5:	sub    dh,BYTE PTR [rbx+0x0]
	...
  407ef0:	(bad)  
  407ef1:	ins    DWORD PTR es:[rdi],dx
  407ef2:	(bad)  
  407ef3:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  407efa:	outs   dx,DWORD PTR ds:[rsi]
  407efb:	jo     0x407f71
  407efd:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  407f04:	and    eax,0x732a2e
	...
  407f1d:	add    BYTE PTR [rax],al
  407f1f:	add    BYTE PTR [rdi+0x70],ch
  407f22:	je     0x407f8d
  407f24:	outs   dx,DWORD PTR ds:[rsi]
  407f25:	outs   dx,BYTE PTR ds:[rsi]
  407f26:	and    BYTE PTR [rdx+0x65],dh
  407f29:	jno    0x407fa0
  407f2b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407f32:	and    BYTE PTR [rcx+0x72],ah
  407f35:	addr32 jne 0x407fa5
  407f38:	outs   dx,BYTE PTR gs:[rsi]
  407f3a:	je     0x407f5c
  407f3c:	sub    eax,0x7325202d
	...
  407f5d:	add    BYTE PTR [rax],al
  407f5f:	add    BYTE PTR [rdi+0x70],ch
  407f62:	je     0x407fcd
  407f64:	outs   dx,DWORD PTR ds:[rsi]
  407f65:	outs   dx,BYTE PTR ds:[rsi]
  407f66:	and    BYTE PTR [rdx+0x65],dh
  407f69:	jno    0x407fe0
  407f6b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  407f72:	and    BYTE PTR [rcx+0x72],ah
  407f75:	addr32 jne 0x407fe5
  407f78:	outs   dx,BYTE PTR gs:[rsi]
  407f7a:	je     0x407f9c
  407f7c:	sub    eax,0x6325202d
	...
  407f9d:	add    BYTE PTR [rax],al
  407f9f:	add    BYTE PTR [rax+rax*1],bh
  407fa2:	jne    0x407fa4
  407fa4:	outs   dx,BYTE PTR ds:[rsi]
  407fa5:	add    BYTE PTR [rbx+0x0],ch
  407fa8:	outs   dx,BYTE PTR ds:[rsi]
  407fa9:	add    BYTE PTR [rdi+0x0],ch
  407fac:	ja     0x407fae
  407fae:	outs   dx,BYTE PTR ds:[rsi]
  407faf:	add    BYTE PTR [rsi],bh
  407fb1:	add    BYTE PTR [rax],al
  407fb3:	add    BYTE PTR [rdi],bh
  407fb5:	add    BYTE PTR [rax],al
  407fb7:	add    BYTE PTR [rcx+0x0],al
  407fba:	jae    0x407fbc
  407fbc:	jae    0x407fbe
  407fbe:	add    BYTE PTR gs:[rdx+0x0],dh
  407fc2:	je     0x407fc4
  407fc4:	imul   eax,DWORD PTR [rax],0x6e006f
  407fca:	and    BYTE PTR [rax],al
  407fcc:	data16 add BYTE PTR [rcx+0x0],ah
  407fd0:	imul   eax,DWORD PTR [rax],0x65006c
  407fd6:	add    BYTE PTR fs:[rcx],ah
  407fd9:	add    BYTE PTR [rdx],cl
  407fdb:	add    BYTE PTR [rdx],cl
  407fdd:	add    BYTE PTR [rax+0x0],dl
  407fe0:	jb     0x407fe2
  407fe2:	outs   dx,DWORD PTR ds:[rsi]
  407fe3:	add    BYTE PTR [rdi+0x0],ah
  407fe6:	jb     0x407fe8
  407fe8:	(bad)  
  407fe9:	add    BYTE PTR [rbp+0x0],ch
  407fec:	cmp    al,BYTE PTR [rax]
  407fee:	and    BYTE PTR [rax],al
  407ff0:	and    eax,0x73007700
  407ff5:	add    BYTE PTR [rdx],cl
  407ff7:	add    BYTE PTR [rsi+0x0],al
  407ffa:	imul   eax,DWORD PTR [rax],0x65006c
  408000:	cmp    al,BYTE PTR [rax]
  408002:	and    BYTE PTR [rax],al
  408004:	and    eax,0x73007700
  408009:	add    BYTE PTR [rax+rax*1],ch
  40800c:	and    BYTE PTR [rax],al
  40800e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  408012:	outs   dx,BYTE PTR ds:[rsi]
  408013:	add    BYTE PTR [rbp+0x0],ah
  408016:	and    BYTE PTR [rax],al
  408018:	and    eax,0xa007500
  40801d:	add    BYTE PTR [rdx],cl
  40801f:	add    BYTE PTR [rbp+0x0],al
  408022:	js     0x408024
  408024:	jo     0x408026
  408026:	jb     0x408028
  408028:	add    BYTE PTR gs:[rbx+0x0],dh
  40802c:	jae    0x40802e
  40802e:	imul   eax,DWORD PTR [rax],0x6e006f
  408034:	cmp    al,BYTE PTR [rax]
  408036:	and    BYTE PTR [rax],al
  408038:	and    eax,0x73007700
  40803d:	add    BYTE PTR [rax],al
  40803f:	add    BYTE PTR [rip+0x73007700],ah        # 0x7340f745
  408045:	add    BYTE PTR [rdx],cl
	...
  40804f:	add    BYTE PTR [rbp+0x0],cl
  408052:	imul   eax,DWORD PTR [rax],0x47006e
  408058:	push   rdi
  408059:	add    BYTE PTR [rax],ah
  40805b:	add    BYTE PTR [rdx+0x0],dl
  40805e:	jne    0x408060
  408060:	outs   dx,BYTE PTR ds:[rsi]
  408061:	add    BYTE PTR [rax+rax*1+0x69],dh
  408065:	add    BYTE PTR [rbp+0x0],ch
  408068:	add    BYTE PTR gs:[rax],ah
  40806b:	add    BYTE PTR [rcx+0x0],al
  40806e:	jae    0x408070
  408070:	jae    0x408072
  408072:	add    BYTE PTR gs:[rdx+0x0],dh
  408076:	je     0x408078
  408078:	imul   eax,DWORD PTR [rax],0x6e006f
  40807e:	add    BYTE PTR [rax],al
  408080:	rex (bad) 
  408082:	add    BYTE PTR [rax],al
	...
  40808d:	add    BYTE PTR [rax],al
  40808f:	add    BYTE PTR [rax+0x4060],al
	...
  40809d:	add    BYTE PTR [rax],al
  40809f:	add    BYTE PTR [rax+0x4059],al
	...
  4080ad:	add    BYTE PTR [rax],al
  4080af:	add    BYTE PTR [rax-0x7a],ah
  4080b2:	add    BYTE PTR [rax],al
	...
  4080bd:	add    BYTE PTR [rax],al
  4080bf:	add    BYTE PTR [rax-0x7a],ah
  4080c2:	add    BYTE PTR [rax],al
	...
  4080cd:	add    BYTE PTR [rax],al
  4080cf:	add    al,dl
  4080d1:	jnp    0x408113
	...
  4080df:	add    BYTE PTR [rax],al
  4080e1:	add    BYTE PTR [rax+0x0],al
	...
  4080f0:	movabs al,ds:0x40c4
  4080f9:	add    BYTE PTR [rax],al
  4080fb:	add    BYTE PTR [rax],al
  4080fd:	add    BYTE PTR [rax],al
  4080ff:	add    BYTE PTR [rax+0x40c4],bh
	...
  40810d:	add    BYTE PTR [rax],al
  40810f:	add    al,ah
  408111:	(bad)  
  408112:	add    BYTE PTR [rax],al
	...
  40811d:	add    BYTE PTR [rax],al
  40811f:	add    BYTE PTR [rax],cl
  408121:	(bad)
	...
  408130:	and    ch,al
  408132:	add    BYTE PTR [rax],al
	...
  40813d:	add    BYTE PTR [rax],al
  40813f:	add    BYTE PTR [rax-0x49],al
  408142:	add    BYTE PTR [rax],al
	...
  40814d:	add    BYTE PTR [rax],al
  40814f:	add    BYTE PTR [rax+0x40bb],dh
	...
  40815d:	add    BYTE PTR [rax],al
  40815f:	add    BYTE PTR [rax+0x40bb],ch
	...
  40816d:	add    BYTE PTR [rax],al
  40816f:	add    BYTE PTR [rax+0x40bb],bl
	...
  40817d:	add    BYTE PTR [rax],al
  40817f:	add    BYTE PTR [rax+0x40bb],ah
	...
  408191:	rol    BYTE PTR [rax+0x0],1
	...
  4081a0:	adc    al,dl
  4081a2:	add    BYTE PTR [rax],al
	...
  4081ad:	add    BYTE PTR [rax],al
  4081af:	add    BYTE PTR [rax],bl
  4081b1:	rol    BYTE PTR [rax+0x0],1
	...
  4081c0:	xor    al,dl
  4081c2:	add    BYTE PTR [rax],al
	...
  4081cd:	add    BYTE PTR [rax],al
  4081cf:	add    al,dl
  4081d1:	mov    al,0x40
	...
  4081df:	add    BYTE PTR [rax],dl
  4081e1:	mov    bh,0x40
	...
  4081ef:	add    BYTE PTR [rax+0x4034],dh
	...
  408201:	sub    al,0x40
	...
  40820f:	add    al,al
  408211:	mov    dh,0x40
	...
  40821f:	add    al,dh
  408221:	mov    dh,0x40
	...
  40822f:	add    al,ah
  408231:	mov    al,0x40
	...
  40823f:	add    al,bl
  408241:	mov    dh,0x40
	...
  40824f:	add    ah,dl
  408251:	mov    dh,0x40
	...
  40825f:	add    al,dl
  408261:	mov    dh,0x40
	...
  40826f:	add    al,ah
  408271:	mov    ebx,0x40
	...
  40827e:	add    BYTE PTR [rax],al
  408280:	rex.RXB
  408281:	rex.XB
  408282:	rex.XB cmp spl,BYTE PTR [r8]
  408285:	sub    BYTE PTR [rdi+0x4e],al
  408288:	push   rbp
  408289:	sub    DWORD PTR [rax],esp
  40828b:	xor    al,0x2e
  40828d:	cmp    DWORD PTR [rsi],ebp
  40828f:	xor    al,0x0
	...
  40829d:	add    BYTE PTR [rax],al
  40829f:	add    BYTE PTR [rdi+0x43],al
  4082a2:	rex.XB cmp spl,BYTE PTR [r8]
  4082a5:	sub    BYTE PTR [rdi+0x4e],al
  4082a8:	push   rbp
  4082a9:	sub    DWORD PTR [rax],esp
  4082ab:	xor    al,0x2e
  4082ad:	cmp    DWORD PTR [rsi],ebp
  4082af:	xor    al,0x0
	...
  4082bd:	add    BYTE PTR [rax],al
  4082bf:	add    BYTE PTR [rdi+0x43],al
  4082c2:	rex.XB cmp spl,BYTE PTR [r8]
  4082c5:	sub    BYTE PTR [rdi+0x4e],al
  4082c8:	push   rbp
  4082c9:	sub    DWORD PTR [rax],esp
  4082cb:	xor    al,0x2e
  4082cd:	cmp    DWORD PTR [rsi],ebp
  4082cf:	xor    al,0x0
	...
  4082dd:	add    BYTE PTR [rax],al
  4082df:	add    BYTE PTR [rdi+0x43],al
  4082e2:	rex.XB cmp spl,BYTE PTR [r8]
  4082e5:	sub    BYTE PTR [rdi+0x4e],al
  4082e8:	push   rbp
  4082e9:	sub    DWORD PTR [rax],esp
  4082eb:	xor    al,0x2e
  4082ed:	cmp    DWORD PTR [rsi],ebp
  4082ef:	xor    al,0x0
	...
  4082fd:	add    BYTE PTR [rax],al
  4082ff:	add    BYTE PTR [rdi+0x43],al
  408302:	rex.XB cmp spl,BYTE PTR [r8]
  408305:	sub    BYTE PTR [rdi+0x4e],al
  408308:	push   rbp
  408309:	sub    DWORD PTR [rax],esp
  40830b:	xor    al,0x2e
  40830d:	cmp    DWORD PTR [rsi],ebp
  40830f:	xor    al,0x0
	...
  40831d:	add    BYTE PTR [rax],al
  40831f:	add    BYTE PTR [rdi+0x43],al
  408322:	rex.XB cmp spl,BYTE PTR [r8]
  408325:	sub    BYTE PTR [rdi+0x4e],al
  408328:	push   rbp
  408329:	sub    DWORD PTR [rax],esp
  40832b:	xor    al,0x2e
  40832d:	cmp    DWORD PTR [rsi],ebp
  40832f:	xor    al,0x0
	...
  40833d:	add    BYTE PTR [rax],al
  40833f:	add    BYTE PTR [rdi+0x43],al
  408342:	rex.XB cmp spl,BYTE PTR [r8]
  408345:	sub    BYTE PTR [rdi+0x4e],al
  408348:	push   rbp
  408349:	sub    DWORD PTR [rax],esp
  40834b:	xor    al,0x2e
  40834d:	cmp    DWORD PTR [rsi],ebp
  40834f:	xor    al,0x0
	...
  40835d:	add    BYTE PTR [rax],al
  40835f:	add    BYTE PTR [rdi+0x43],al
  408362:	rex.XB cmp spl,BYTE PTR [r8]
  408365:	sub    BYTE PTR [rdi+0x4e],al
  408368:	push   rbp
  408369:	sub    DWORD PTR [rax],esp
  40836b:	xor    al,0x2e
  40836d:	cmp    DWORD PTR [rsi],ebp
  40836f:	xor    al,0x0
	...
  40837d:	add    BYTE PTR [rax],al
  40837f:	add    BYTE PTR [rdi+0x43],al
  408382:	rex.XB cmp spl,BYTE PTR [r8]
  408385:	sub    BYTE PTR [rdi+0x4e],al
  408388:	push   rbp
  408389:	sub    DWORD PTR [rax],esp
  40838b:	xor    al,0x2e
  40838d:	cmp    DWORD PTR [rsi],ebp
  40838f:	xor    al,0x0
	...
  40839d:	add    BYTE PTR [rax],al
  40839f:	add    BYTE PTR [rdi+0x43],al
  4083a2:	rex.XB cmp spl,BYTE PTR [r8]
  4083a5:	sub    BYTE PTR [rdi+0x4e],al
  4083a8:	push   rbp
  4083a9:	sub    DWORD PTR [rax],esp
  4083ab:	xor    al,0x2e
  4083ad:	cmp    DWORD PTR [rsi],ebp
  4083af:	xor    al,0x0
	...
  4083bd:	add    BYTE PTR [rax],al
  4083bf:	add    BYTE PTR [rdi+0x43],al
  4083c2:	rex.XB cmp spl,BYTE PTR [r8]
  4083c5:	sub    BYTE PTR [rdi+0x4e],al
  4083c8:	push   rbp
  4083c9:	sub    DWORD PTR [rax],esp
  4083cb:	xor    al,0x2e
  4083cd:	cmp    DWORD PTR [rsi],ebp
  4083cf:	xor    al,0x0
	...
  4083dd:	add    BYTE PTR [rax],al
  4083df:	add    BYTE PTR [rdi+0x43],al
  4083e2:	rex.XB cmp spl,BYTE PTR [r8]
  4083e5:	sub    BYTE PTR [rdi+0x4e],al
  4083e8:	push   rbp
  4083e9:	sub    DWORD PTR [rax],esp
  4083eb:	xor    al,0x2e
  4083ed:	cmp    DWORD PTR [rsi],ebp
  4083ef:	xor    al,0x0
	...
  4083fd:	add    BYTE PTR [rax],al
  4083ff:	add    BYTE PTR [rdi+0x43],al
  408402:	rex.XB cmp spl,BYTE PTR [r8]
  408405:	sub    BYTE PTR [rdi+0x4e],al
  408408:	push   rbp
  408409:	sub    DWORD PTR [rax],esp
  40840b:	xor    al,0x2e
  40840d:	cmp    DWORD PTR [rsi],ebp
  40840f:	xor    al,0x0
	...
  40841d:	add    BYTE PTR [rax],al
  40841f:	add    BYTE PTR [rdi+0x43],al
  408422:	rex.XB cmp spl,BYTE PTR [r8]
  408425:	sub    BYTE PTR [rdi+0x4e],al
  408428:	push   rbp
  408429:	sub    DWORD PTR [rax],esp
  40842b:	xor    al,0x2e
  40842d:	cmp    DWORD PTR [rsi],ebp
  40842f:	xor    al,0x0
	...
  40843d:	add    BYTE PTR [rax],al
  40843f:	add    BYTE PTR [rdi+0x43],al
  408442:	rex.XB cmp spl,BYTE PTR [r8]
  408445:	sub    BYTE PTR [rdi+0x4e],al
  408448:	push   rbp
  408449:	sub    DWORD PTR [rax],esp
  40844b:	xor    al,0x2e
  40844d:	cmp    DWORD PTR [rsi],ebp
  40844f:	xor    al,0x0
	...
  40845d:	add    BYTE PTR [rax],al
  40845f:	add    BYTE PTR [rdi+0x43],al
  408462:	rex.XB cmp spl,BYTE PTR [r8]
  408465:	sub    BYTE PTR [rdi+0x4e],al
  408468:	push   rbp
  408469:	sub    DWORD PTR [rax],esp
  40846b:	xor    al,0x2e
  40846d:	cmp    DWORD PTR [rsi],ebp
  40846f:	xor    al,0x0
	...
  40847d:	add    BYTE PTR [rax],al
  40847f:	add    BYTE PTR [rdi+0x43],al
  408482:	rex.XB cmp spl,BYTE PTR [r8]
  408485:	sub    BYTE PTR [rdi+0x4e],al
  408488:	push   rbp
  408489:	sub    DWORD PTR [rax],esp
  40848b:	xor    al,0x2e
  40848d:	cmp    DWORD PTR [rsi],ebp
  40848f:	xor    al,0x0
	...
  40849d:	add    BYTE PTR [rax],al
  40849f:	add    BYTE PTR [rdi+0x43],al
  4084a2:	rex.XB cmp spl,BYTE PTR [r8]
  4084a5:	sub    BYTE PTR [rdi+0x4e],al
  4084a8:	push   rbp
  4084a9:	sub    DWORD PTR [rax],esp
  4084ab:	xor    al,0x2e
  4084ad:	cmp    DWORD PTR [rsi],ebp
  4084af:	xor    al,0x0
	...
  4084bd:	add    BYTE PTR [rax],al
  4084bf:	add    BYTE PTR [rdi+0x43],al
  4084c2:	rex.XB cmp spl,BYTE PTR [r8]
  4084c5:	sub    BYTE PTR [rdi+0x4e],al
  4084c8:	push   rbp
  4084c9:	sub    DWORD PTR [rax],esp
  4084cb:	xor    al,0x2e
  4084cd:	cmp    DWORD PTR [rsi],ebp
  4084cf:	xor    al,0x0
	...
  4084dd:	add    BYTE PTR [rax],al
  4084df:	add    BYTE PTR [rdi+0x43],al
  4084e2:	rex.XB cmp spl,BYTE PTR [r8]
  4084e5:	sub    BYTE PTR [rdi+0x4e],al
  4084e8:	push   rbp
  4084e9:	sub    DWORD PTR [rax],esp
  4084eb:	xor    al,0x2e
  4084ed:	cmp    DWORD PTR [rsi],ebp
  4084ef:	xor    al,0x0
	...
  4084fd:	add    BYTE PTR [rax],al
  4084ff:	add    BYTE PTR [rdi+0x43],al
  408502:	rex.XB cmp spl,BYTE PTR [r8]
  408505:	sub    BYTE PTR [rdi+0x4e],al
  408508:	push   rbp
  408509:	sub    DWORD PTR [rax],esp
  40850b:	xor    al,0x2e
  40850d:	cmp    DWORD PTR [rsi],ebp
  40850f:	xor    al,0x0
	...
  40851d:	add    BYTE PTR [rax],al
  40851f:	add    BYTE PTR [rdi+0x43],al
  408522:	rex.XB cmp spl,BYTE PTR [r8]
  408525:	sub    BYTE PTR [rdi+0x4e],al
  408528:	push   rbp
  408529:	sub    DWORD PTR [rax],esp
  40852b:	xor    al,0x2e
  40852d:	cmp    DWORD PTR [rsi],ebp
  40852f:	xor    al,0x0
	...
  40853d:	add    BYTE PTR [rax],al
  40853f:	add    BYTE PTR [rdi+0x43],al
  408542:	rex.XB cmp spl,BYTE PTR [r8]
  408545:	sub    BYTE PTR [rdi+0x4e],al
  408548:	push   rbp
  408549:	sub    DWORD PTR [rax],esp
  40854b:	xor    al,0x2e
  40854d:	cmp    DWORD PTR [rsi],ebp
  40854f:	xor    al,0x0
	...
  40855d:	add    BYTE PTR [rax],al
  40855f:	add    BYTE PTR [rdi+0x43],al
  408562:	rex.XB cmp spl,BYTE PTR [r8]
  408565:	sub    BYTE PTR [rdi+0x4e],al
  408568:	push   rbp
  408569:	sub    DWORD PTR [rax],esp
  40856b:	xor    al,0x2e
  40856d:	cmp    DWORD PTR [rsi],ebp
  40856f:	xor    al,0x0
	...
  40857d:	add    BYTE PTR [rax],al
  40857f:	add    BYTE PTR [rdi+0x43],al
  408582:	rex.XB cmp spl,BYTE PTR [r8]
  408585:	sub    BYTE PTR [rdi+0x4e],al
  408588:	push   rbp
  408589:	sub    DWORD PTR [rax],esp
  40858b:	xor    al,0x2e
  40858d:	cmp    DWORD PTR [rsi],ebp
  40858f:	xor    al,0x0
	...
  40859d:	add    BYTE PTR [rax],al
  40859f:	add    BYTE PTR [rdi+0x43],al
  4085a2:	rex.XB cmp spl,BYTE PTR [r8]
  4085a5:	sub    BYTE PTR [rdi+0x4e],al
  4085a8:	push   rbp
  4085a9:	sub    DWORD PTR [rax],esp
  4085ab:	xor    al,0x2e
  4085ad:	cmp    DWORD PTR [rsi],ebp
  4085af:	xor    al,0x0
	...
  4085bd:	add    BYTE PTR [rax],al
  4085bf:	add    BYTE PTR [rdi+0x43],al
  4085c2:	rex.XB cmp spl,BYTE PTR [r8]
  4085c5:	sub    BYTE PTR [rdi+0x4e],al
  4085c8:	push   rbp
  4085c9:	sub    DWORD PTR [rax],esp
  4085cb:	xor    al,0x2e
  4085cd:	cmp    DWORD PTR [rsi],ebp
  4085cf:	xor    al,0x0
	...
  4085dd:	add    BYTE PTR [rax],al
  4085df:	add    BYTE PTR [rdi+0x43],al
  4085e2:	rex.XB cmp spl,BYTE PTR [r8]
  4085e5:	sub    BYTE PTR [rdi+0x4e],al
  4085e8:	push   rbp
  4085e9:	sub    DWORD PTR [rax],esp
  4085eb:	xor    al,0x2e
  4085ed:	cmp    DWORD PTR [rsi],ebp
  4085ef:	xor    al,0x0
	...
  4085fd:	add    BYTE PTR [rax],al
  4085ff:	add    BYTE PTR [rdi+0x43],al
  408602:	rex.XB cmp spl,BYTE PTR [r8]
  408605:	sub    BYTE PTR [rdi+0x4e],al
  408608:	push   rbp
  408609:	sub    DWORD PTR [rax],esp
  40860b:	xor    al,0x2e
  40860d:	cmp    DWORD PTR [rsi],ebp
  40860f:	xor    al,0x0
	...
  40861d:	add    BYTE PTR [rax],al
  40861f:	add    BYTE PTR [rdi+0x43],al
  408622:	rex.XB cmp spl,BYTE PTR [r8]
  408625:	sub    BYTE PTR [rdi+0x4e],al
  408628:	push   rbp
  408629:	sub    DWORD PTR [rax],esp
  40862b:	xor    al,0x2e
  40862d:	cmp    DWORD PTR [rsi],ebp
  40862f:	xor    al,0x0
	...
  40863d:	add    BYTE PTR [rax],al
  40863f:	add    BYTE PTR [rdi+0x43],al
  408642:	rex.XB cmp spl,BYTE PTR [r8]
  408645:	sub    BYTE PTR [rdi+0x4e],al
  408648:	push   rbp
  408649:	sub    DWORD PTR [rax],esp
  40864b:	xor    al,0x2e
  40864d:	cmp    DWORD PTR [rsi],ebp
  40864f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000409000 <.pdata>:
  409000:	add    BYTE PTR [rax],dl
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rax],edx
  409006:	add    BYTE PTR [rax],al
  409008:	add    BYTE PTR [rax+0x10100000],ah
  40900e:	add    BYTE PTR [rax],al
  409010:	push   rcx
  409011:	adc    DWORD PTR [rax],eax
  409013:	add    BYTE PTR [rax+riz*4],al
  409016:	add    BYTE PTR [rax],al
  409018:	(bad)  
  409019:	adc    DWORD PTR [rax],eax
  40901b:	add    BYTE PTR [rsi+0xc000011],ch
  409021:	movabs al,ds:0x14ce000011b00000
  40902a:	add    BYTE PTR [rax],al
  40902c:	adc    al,0xa0
  40902e:	add    BYTE PTR [rax],al
  409030:	rcl    BYTE PTR [rax+rax*1],1
  409033:	add    dl,dh
  409035:	adc    al,0x0
  409037:	add    BYTE PTR [rax],ch
  409039:	movabs al,ds:0x1522000015000000
  409042:	add    BYTE PTR [rax],al
  409044:	rex.W movabs al,ds:0x170e000015300000
  40904e:	add    BYTE PTR [rax],al
  409050:	push   0x100000a0
  409055:	(bad)  
  409056:	add    BYTE PTR [rax],al
  409058:	mov    WORD PTR [rax],ds
  40905a:	add    BYTE PTR [rax],al
  40905c:	and    BYTE PTR [rax+0x18900000],0x0
  409063:	add    bh,ah
  409065:	sbb    BYTE PTR [rax],al
  409067:	add    BYTE PTR [rax+riz*4+0x18f00000],dl
  40906e:	add    BYTE PTR [rax],al
  409070:	push   rsp
  409071:	and    al,0x0
  409073:	add    BYTE PTR [rax+riz*4+0x24600000],ah
  40907a:	add    BYTE PTR [rax],al
  40907c:	(bad)  
  40907d:	add    BYTE PTR es:[rax],al
  409080:	mov    esp,0x600000a0
  409085:	(bad)  
  409086:	add    BYTE PTR [rax],al
  409088:	(bad)  
  409089:	sub    BYTE PTR [rax],al
  40908b:	add    al,ch
  40908d:	movabs al,ds:0x2829000028100000
  409096:	add    BYTE PTR [rax],al
  409098:	lock movabs al,ds:0x2865000028300000
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	clc    
  4090a5:	movabs al,ds:0x28c5000028700000
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	add    BYTE PTR [rcx+0x28d00000],ah
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	in     al,dx
  4090b9:	sub    BYTE PTR [rax],al
  4090bb:	add    BYTE PTR [rcx+riz*4],cl
  4090be:	add    BYTE PTR [rax],al
  4090c0:	lock sub BYTE PTR [rax],al
  4090c3:	add    dl,bh
  4090c5:	sub    BYTE PTR [rax],al
  4090c7:	add    BYTE PTR [rax],dl
  4090c9:	movabs eax,ds:0x2903000029000000
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	adc    al,0xa1
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	adc    BYTE PTR [rcx],ch
  4090da:	add    BYTE PTR [rax],al
  4090dc:	out    0x29,al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	sbb    BYTE PTR [rcx+0x29f00000],ah
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	jmp    0x409114
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	sub    BYTE PTR [rcx+0x2af00000],ah
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	(bad)  
  4090f5:	sub    eax,DWORD PTR [rax]
  4090f7:	add    BYTE PTR [rax],bh
  4090f9:	movabs eax,ds:0x2b8900002b200000
  409102:	add    BYTE PTR [rax],al
  409104:	rex movabs eax,ds:0x2b9300002b900000
  40910e:	add    BYTE PTR [rax],al
  409110:	rex.WR movabs rax,ds:0x2be100002ba00000
  40911a:	add    BYTE PTR [rax],al
  40911c:	push   rax
  40911d:	movabs eax,ds:0x2bfc00002bf00000
  409126:	add    BYTE PTR [rax],al
  409128:	pop    rax
  409129:	movabs eax,ds:0x2cfc00002c000000
  409132:	add    BYTE PTR [rax],al
  409134:	pop    rsp
  409135:	movabs eax,ds:0x2d0300002d000000
  40913e:	add    BYTE PTR [rax],al
  409140:	je     0x4090e3
  409142:	add    BYTE PTR [rax],al
  409144:	adc    BYTE PTR [rip+0x2d140000],ch        # 0x2d54914a
  40914a:	add    BYTE PTR [rax],al
  40914c:	js     0x4090ef
  40914e:	add    BYTE PTR [rax],al
  409150:	and    BYTE PTR [rip+0x2d240000],ch        # 0x2d649156
  409156:	add    BYTE PTR [rax],al
  409158:	jl     0x4090fb
  40915a:	add    BYTE PTR [rax],al
  40915c:	xor    BYTE PTR [rip+0x2d910000],ch        # 0x2dd19162
  409162:	add    BYTE PTR [rax],al
  409164:	and    BYTE PTR [rcx+0x2da00000],0x0
  40916b:	add    BYTE PTR [rdx],al
  40916d:	(bad)  
  40916e:	add    BYTE PTR [rax],al
  409170:	mov    WORD PTR [rcx+0x2f100000],fs
  409176:	add    BYTE PTR [rax],al
  409178:	or     DWORD PTR [rdx],esi
  40917a:	add    BYTE PTR [rax],al
  40917c:	movabs al,ds:0xb6000032100000a1
  409185:	xor    eax,DWORD PTR [rax]
  409187:	add    BYTE PTR [rax-0x3fffff5f],bh
  40918d:	xor    eax,DWORD PTR [rax]
  40918f:	add    BYTE PTR [rsp+rsi*1-0x5e400000],ch
  409196:	add    BYTE PTR [rax],al
  409198:	mov    al,0x34
  40919a:	add    BYTE PTR [rax],al
  40919c:	push   0xffffffffd0000036
  4091a1:	movabs eax,ds:0x36dd000036700000
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	fsub   DWORD PTR [rcx+0x36e00000]
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	pop    rdi
  4091b5:	(bad)  
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	call   0x6040925e
  4091bd:	(bad)  
  4091be:	add    BYTE PTR [rax],al
  4091c0:	push   QWORD PTR [rdi]
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	hlt    
  4091c5:	movabs eax,ds:0x38da000038000000
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	cld    
  4091d1:	movabs eax,ds:0x38ff000038e00000
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    al,0xa2
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rcx],bh
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	adc    bh,BYTE PTR [rcx]
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	or     BYTE PTR [rdx+0x39200000],ah
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	cmp    DWORD PTR gs:[rax],eax
  4091f3:	add    BYTE PTR [rdx+riz*4],cl
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	jo     0x409233
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	(bad)  
  4091fd:	cmp    al,BYTE PTR [rax]
  4091ff:	add    BYTE PTR [rax],dl
  409201:	movabs ds:0x3a5300003a100000,al
  40920a:	add    BYTE PTR [rax],al
  40920c:	sbb    al,0xa2
  40920e:	add    BYTE PTR [rax],al
  409210:	(bad)  
  409211:	cmp    al,BYTE PTR [rax]
  409213:	add    BYTE PTR [rbx+0x2800003a],bl
  409219:	movabs ds:0x3b2e00003aa00000,al
  409222:	add    BYTE PTR [rax],al
  409224:	xor    BYTE PTR [rdx+0x3b300000],ah
  40922a:	add    BYTE PTR [rax],al
  40922c:	push   0x3c00003b
  409231:	movabs ds:0x3bc500003b700000,al
  40923a:	add    BYTE PTR [rax],al
  40923c:	rex.W movabs ds:0x3c7e00003bd00000,al
  409246:	add    BYTE PTR [rax],al
  409248:	push   rsp
  409249:	movabs ds:0x3f6e00003cc00000,al
  409252:	add    BYTE PTR [rax],al
  409254:	movabs fs:0x401a00003f700000,al
  40925e:	add    BYTE PTR [rax],al
  409260:	js     0x409204
  409262:	add    BYTE PTR [rax],al
  409264:	and    BYTE PTR [rax+0x0],al
  409267:	add    BYTE PTR [rax-0x77ffffc0],ah
  40926d:	movabs ds:0x4456000040a00000,al
  409276:	add    BYTE PTR [rax],al
  409278:	xchg   esp,eax
  409279:	movabs ds:0x4b45000044600000,al
  409282:	add    BYTE PTR [rax],al
  409284:	lods   al,BYTE PTR ds:[rsi]
  409285:	movabs ds:0x4b7200004b500000,al
  40928e:	add    BYTE PTR [rax],al
  409290:	(bad)
  409294:	or     BYTE PTR [rbx+0x0],0x0
  409298:	movabs al,ds:0xa00000a2cc00004b
  4092a1:	rex.WXB add BYTE PTR [r8],al
  4092a4:	ror    BYTE PTR [rbx+0x0],0x0
  4092a8:	(bad)  
  4092a9:	movabs ds:0x4cf300004bc00000,al
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	fsub   QWORD PTR [rdx+0x4d000000]
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	ror    BYTE PTR [rbp+0x0],0x0
  4092c0:	lock movabs ds:0x4e4700004dc00000,al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rbx+0x50100000],ah
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	sbb    BYTE PTR [rax+0x0],dl
  4092d7:	add    BYTE PTR [rax],dl
  4092d9:	movabs ds:0x502b000050200000,eax
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	adc    al,0xa3
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    BYTE PTR [rcx+0x0],dl
  4092eb:	add    BYTE PTR [rbp+0x59],bh
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	.byte 0xd0
  4092f1:	.byte 0xa0
	...

Disassembly of section .xdata:

000000000040a000 <.xdata>:
  40a000:	add    DWORD PTR [rax],eax
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rcx+rax*1],eax
  40a007:	add    BYTE PTR [rdx+rax*2],al
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	add    DWORD PTR [rcx+rax*1],eax
  40a00f:	add    BYTE PTR [rdx+riz*2],al
  40a012:	add    BYTE PTR [rax],al
  40a014:	add    DWORD PTR [rdi],ecx
  40a016:	or     BYTE PTR [rax],al
  40a018:	lgdt   [rbx]
  40a01b:	add    BYTE PTR [rax],cl
  40a01d:	xor    BYTE PTR [rdi],al
  40a01f:	(bad)  
  40a020:	(bad)  
  40a021:	jo     0x40a028
  40a023:	push   rax
  40a024:	add    al,0xc0
  40a026:	add    dl,al
  40a028:	or     DWORD PTR [rcx+rax*1],eax
  40a02b:	add    BYTE PTR [rdx+rax*2],al
  40a02e:	add    BYTE PTR [rax],al
  40a030:	or     BYTE PTR [rax+0x0],dl
  40a033:	add    BYTE PTR [rcx],al
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    ah,dl
  40a039:	adc    al,0x0
  40a03b:	add    ah,ch
  40a03d:	adc    al,0x0
  40a03f:	add    BYTE PTR [rax-0x13ffffcc],dh
  40a045:	adc    al,0x0
  40a047:	add    BYTE PTR [rcx],cl
  40a049:	add    al,0x1
  40a04b:	add    BYTE PTR [rdx+rax*2],al
  40a04e:	add    BYTE PTR [rax],al
  40a050:	or     BYTE PTR [rax+0x0],dl
  40a053:	add    BYTE PTR [rcx],al
  40a055:	add    BYTE PTR [rax],al
  40a057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40a05e:	add    BYTE PTR [rax],al
  40a060:	mov    al,0x34
  40a062:	add    BYTE PTR [rax],al
  40a064:	sbb    al,0x15
  40a066:	add    BYTE PTR [rax],al
  40a068:	add    DWORD PTR [rbx],edx
  40a06a:	or     al,BYTE PTR [rax]
  40a06c:	adc    eax,DWORD PTR [rcx]
  40a06e:	pop    QWORD PTR [rax]
  40a070:	or     al,0x30
  40a072:	or     esp,DWORD PTR [rax+0xa]
  40a075:	jo     0x40a080
  40a077:	push   rax
  40a078:	or     al,al
  40a07a:	(bad)  
  40a07b:	rol    BYTE PTR [rax+riz*8],1
  40a07e:	add    dh,al
  40a080:	add    DWORD PTR [rsi],ecx
  40a082:	or     BYTE PTR [rax],al
  40a084:	(bad)  
  40a085:	jb     0x40a091
  40a087:	xor    BYTE PTR [rcx],cl
  40a089:	(bad)  
  40a08a:	or     BYTE PTR [rax+0x7],dh
  40a08d:	push   rax
  40a08e:	(bad)  
  40a08f:	rol    BYTE PTR [rax+rdx*8],0x2
  40a093:	loopne 0x40a096
  40a095:	or     BYTE PTR [rip+0x4420800],al        # 0x482a89b
  40a09b:	xor    BYTE PTR [rbx],al
  40a09d:	(bad)  
  40a09e:	add    dh,BYTE PTR [rax+0x1]
  40a0a1:	push   rax
  40a0a2:	add    BYTE PTR [rax],al
  40a0a4:	add    DWORD PTR [rbx],edx
  40a0a6:	or     al,BYTE PTR [rax]
  40a0a8:	adc    eax,DWORD PTR [rcx]
  40a0aa:	pop    rbp
  40a0ab:	add    BYTE PTR [rax+rsi*1],cl
  40a0ae:	or     esp,DWORD PTR [rax+0xa]
  40a0b1:	jo     0x40a0bc
  40a0b3:	push   rax
  40a0b4:	or     al,al
  40a0b6:	(bad)  
  40a0b7:	rol    BYTE PTR [rax+riz*8],1
  40a0ba:	add    dh,al
  40a0bc:	add    DWORD PTR [rip+0x1150008],edx        # 0x155a0ca
  40a0c2:	add    eax,0xc300d02
  40a0c7:	(bad)  
  40a0c8:	or     esi,DWORD PTR [rax+0xa]
  40a0cb:	push   rax
  40a0cc:	add    al,0xc0
  40a0ce:	add    dl,al
  40a0d0:	add    DWORD PTR [rbx],edx
  40a0d2:	or     al,BYTE PTR [rax]
  40a0d4:	adc    eax,DWORD PTR [rcx]
  40a0d6:	adc    DWORD PTR [rax],eax
  40a0d8:	or     al,0x30
  40a0da:	or     esp,DWORD PTR [rax+0xa]
  40a0dd:	jo     0x40a0e8
  40a0df:	push   rax
  40a0e0:	or     al,al
  40a0e2:	(bad)  
  40a0e3:	rol    BYTE PTR [rax+riz*8],1
  40a0e6:	add    dh,al
  40a0e8:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245a0f0
  40a0ee:	add    DWORD PTR [rax],esi
  40a0f0:	add    DWORD PTR [rcx+rax*1],eax
  40a0f3:	add    BYTE PTR [rdx+rax*2],al
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	add    DWORD PTR [rcx+rax*1],eax
  40a0fb:	add    BYTE PTR [rdx+rax*2],al
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	add    DWORD PTR [rsi],eax
  40a102:	add    eax,DWORD PTR [rax]
  40a104:	(bad)  
  40a105:	rex.X add sil,BYTE PTR [rax]
  40a108:	add    DWORD PTR [rax+0x0],esp
  40a10b:	add    BYTE PTR [rcx],al
  40a10d:	add    BYTE PTR [rax],al
  40a10f:	add    BYTE PTR [rcx],al
  40a111:	add    BYTE PTR [rax],al
  40a113:	add    BYTE PTR [rcx],al
  40a115:	add    BYTE PTR [rax],al
  40a117:	add    BYTE PTR [rcx],al
  40a119:	or     al,BYTE PTR [rsi]
  40a11b:	add    BYTE PTR [rdx],cl
  40a11d:	jb     0x40a125
  40a11f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a585
  40a125:	push   rax
  40a126:	add    al,al
  40a128:	add    DWORD PTR [rdx],ecx
  40a12a:	add    eax,0x6d20a05
  40a12f:	add    eax,DWORD PTR [rbx]
  40a131:	xor    BYTE PTR [rdx],al
  40a133:	(bad)  
  40a134:	add    DWORD PTR [rax+0x0],edx
  40a137:	add    BYTE PTR [rcx],al
  40a139:	add    al,0x1
  40a13b:	add    BYTE PTR [rdx+rax*2],al
  40a13e:	add    BYTE PTR [rax],al
  40a140:	add    DWORD PTR [rsi],eax
  40a142:	add    eax,DWORD PTR [rax]
  40a144:	(bad)  
  40a145:	rex.X add sil,BYTE PTR [rax]
  40a148:	add    DWORD PTR [rax+0x0],esp
  40a14b:	add    BYTE PTR [rcx],al
  40a14d:	add    BYTE PTR [rax],al
  40a14f:	add    BYTE PTR [rcx],al
  40a151:	add    al,0x1
  40a153:	add    BYTE PTR [rdx+riz*4],al
  40a156:	add    BYTE PTR [rax],al
  40a158:	add    DWORD PTR [rax],eax
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	add    DWORD PTR [rsi],edx
  40a15e:	or     DWORD PTR [rax],eax
  40a160:	(bad)  
  40a161:	mov    BYTE PTR [rsi],al
  40a163:	add    BYTE PTR [rax],dl
  40a165:	js     0x40a16c
  40a167:	add    BYTE PTR [rbx],cl
  40a169:	push   0xffffffffe2060004
  40a16e:	add    dh,BYTE PTR [rax]
  40a170:	add    DWORD PTR [rax+0x0],esp
  40a173:	add    BYTE PTR [rcx],al
  40a175:	add    BYTE PTR [rax],al
  40a177:	add    BYTE PTR [rcx],al
  40a179:	add    BYTE PTR [rax],al
  40a17b:	add    BYTE PTR [rcx],al
  40a17d:	add    BYTE PTR [rax],al
  40a17f:	add    BYTE PTR [rcx],al
  40a181:	(bad)  
  40a182:	add    eax,DWORD PTR [rax]
  40a184:	(bad)  
  40a185:	(bad)  
  40a187:	xor    BYTE PTR [rcx],al
  40a189:	(bad)  
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    DWORD PTR [rdi+rax*1],ecx
  40a18f:	add    BYTE PTR [rdx+riz*4],cl
  40a192:	or     BYTE PTR [rax],dh
  40a194:	(bad)  
  40a195:	(bad)  
  40a196:	(bad)  
  40a197:	jo     0x40a19e
  40a199:	push   rax
  40a19a:	add    al,0xc0
  40a19c:	add    dl,al
  40a19e:	add    BYTE PTR [rax],al
  40a1a0:	add    DWORD PTR [rcx],edx
  40a1a2:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e53b9
  40a1a8:	or     dh,BYTE PTR [rax]
  40a1aa:	or     DWORD PTR [rax+0x8],esp
  40a1ad:	jo     0x40a1b6
  40a1af:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220a586
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	add    DWORD PTR [rcx+rax*1],eax
  40a1bb:	add    BYTE PTR [rdx+rax*2],al
  40a1be:	add    BYTE PTR [rax],al
  40a1c0:	add    DWORD PTR [rdx],ecx
  40a1c2:	(bad)  
  40a1c3:	add    BYTE PTR [rdx],cl
  40a1c5:	xor    al,BYTE PTR [rsi]
  40a1c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a62d
  40a1cd:	push   rax
  40a1ce:	add    al,al
  40a1d0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a1d8
  40a1d6:	add    DWORD PTR [rax],esi
  40a1d8:	add    DWORD PTR [rax],ecx
  40a1da:	add    eax,0x4420800
  40a1df:	xor    BYTE PTR [rbx],al
  40a1e1:	(bad)  
  40a1e2:	add    dh,BYTE PTR [rax+0x1]
  40a1e5:	push   rax
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	add    DWORD PTR [rdi],eax
  40a1ea:	add    al,0x0
  40a1ec:	(bad)  
  40a1ed:	xor    al,BYTE PTR [rbx]
  40a1ef:	xor    BYTE PTR [rdx],al
  40a1f1:	(bad)  
  40a1f2:	add    DWORD PTR [rax+0x1],esi
  40a1f5:	add    eax,0x32050002
  40a1fa:	add    DWORD PTR [rax],esi
  40a1fc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a204
  40a202:	add    DWORD PTR [rax],esi
  40a204:	add    DWORD PTR [rax],eax
  40a206:	add    BYTE PTR [rax],al
  40a208:	add    DWORD PTR [rax],eax
  40a20a:	add    BYTE PTR [rax],al
  40a20c:	add    DWORD PTR [rax],eax
  40a20e:	add    BYTE PTR [rax],al
  40a210:	add    DWORD PTR [rdi],eax
  40a212:	add    al,0x0
  40a214:	(bad)  
  40a215:	xor    al,BYTE PTR [rbx]
  40a217:	xor    BYTE PTR [rdx],al
  40a219:	(bad)  
  40a21a:	add    DWORD PTR [rax+0x1],esi
  40a21d:	(bad)  
  40a21e:	add    eax,DWORD PTR [rax]
  40a220:	(bad)  
  40a221:	rex.X add sil,BYTE PTR [rax]
  40a224:	add    DWORD PTR [rax+0x0],esp
  40a227:	add    BYTE PTR [rcx],al
  40a229:	add    eax,0x32050002
  40a22e:	add    DWORD PTR [rax],esi
  40a230:	add    DWORD PTR [rdi],eax
  40a232:	add    al,0x0
  40a234:	(bad)  
  40a235:	xor    al,BYTE PTR [rbx]
  40a237:	xor    BYTE PTR [rdx],al
  40a239:	(bad)  
  40a23a:	add    DWORD PTR [rax+0x1],esi
  40a23d:	(bad)  
  40a23e:	add    eax,DWORD PTR [rax]
  40a240:	(bad)  
  40a241:	rex.X add sil,BYTE PTR [rax]
  40a244:	add    DWORD PTR [rax+0x0],esp
  40a247:	add    BYTE PTR [rcx],al
  40a249:	(bad)  
  40a24a:	add    eax,DWORD PTR [rax]
  40a24c:	(bad)  
  40a24d:	rex.X add sil,BYTE PTR [rax]
  40a250:	add    DWORD PTR [rax+0x0],esp
  40a253:	add    BYTE PTR [rcx],al
  40a255:	or     BYTE PTR [rip+0x4420800],al        # 0x482aa5b
  40a25b:	xor    BYTE PTR [rbx],al
  40a25d:	(bad)  
  40a25e:	add    dh,BYTE PTR [rax+0x1]
  40a261:	push   rax
  40a262:	add    BYTE PTR [rax],al
  40a264:	add    DWORD PTR [rax+rcx*1],edx
  40a267:	test   DWORD PTR [rbx+rax*1],edx
  40a26a:	or     al,0x42
  40a26c:	or     BYTE PTR [rax],dh
  40a26e:	(bad)  
  40a26f:	(bad)  
  40a270:	(bad)  
  40a271:	jo     0x40a278
  40a273:	rol    BYTE PTR [rbx],0xd0
  40a276:	add    DWORD PTR [rax+0x1],edx
  40a279:	or     BYTE PTR [rsi],al
  40a27b:	add    BYTE PTR [rax],cl
  40a27d:	xor    BYTE PTR [rdi],al
  40a27f:	(bad)  
  40a280:	(bad)  
  40a281:	jo     0x40a288
  40a283:	push   rax
  40a284:	add    al,0xc0
  40a286:	add    dl,al
  40a288:	add    DWORD PTR [rdi],eax
  40a28a:	add    al,0x0
  40a28c:	(bad)  
  40a28d:	push   rdx
  40a28e:	add    esi,DWORD PTR [rax]
  40a290:	add    ah,BYTE PTR [rax+0x1]
  40a293:	jo     0x40a296
  40a295:	adc    BYTE PTR [rcx],cl
  40a297:	add    BYTE PTR [rax],dl
  40a299:	(bad)  
  40a29a:	or     al,0x30
  40a29c:	or     esp,DWORD PTR [rax+0xa]
  40a29f:	jo     0x40a2aa
  40a2a1:	push   rax
  40a2a2:	or     al,al
  40a2a4:	(bad)  
  40a2a5:	rol    BYTE PTR [rax+riz*8],1
  40a2a8:	add    dh,al
  40a2aa:	add    BYTE PTR [rax],al
  40a2ac:	add    DWORD PTR [rax],edx
  40a2ae:	or     DWORD PTR [rax],eax
  40a2b0:	adc    BYTE PTR [rdx+0xc],ah
  40a2b3:	xor    BYTE PTR [rbx],cl
  40a2b5:	(bad)  
  40a2b6:	or     dh,BYTE PTR [rax+0x9]
  40a2b9:	push   rax
  40a2ba:	or     al,al
  40a2bc:	(bad)  
  40a2bd:	rol    BYTE PTR [rax+riz*8],1
  40a2c0:	add    dh,al
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    DWORD PTR [rcx+rax*1],eax
  40a2c7:	add    BYTE PTR [rdx+riz*2],al
  40a2ca:	add    BYTE PTR [rax],al
  40a2cc:	add    DWORD PTR [rcx+rax*1],eax
  40a2cf:	add    BYTE PTR [rdx+riz*2],al
  40a2d2:	add    BYTE PTR [rax],al
  40a2d4:	add    DWORD PTR [rcx+rax*1],eax
  40a2d7:	add    BYTE PTR [rdx+riz*2],al
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14da2e9
  40a2e2:	rex.WX add BYTE PTR [rsi],al
  40a2e5:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a74b
  40a2eb:	push   rax
  40a2ec:	add    al,al
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	add    DWORD PTR [rax],ecx
  40a2f2:	add    eax,0x4620800
  40a2f7:	xor    BYTE PTR [rbx],al
  40a2f9:	(bad)  
  40a2fa:	add    dh,BYTE PTR [rax+0x1]
  40a2fd:	push   rax
  40a2fe:	add    BYTE PTR [rax],al
  40a300:	add    DWORD PTR [rdx],ecx
  40a302:	(bad)  
  40a303:	add    BYTE PTR [rdx],cl
  40a305:	push   rdx
  40a306:	(bad)  
  40a307:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a76d
  40a30d:	push   rax
  40a30e:	add    al,al
  40a310:	add    DWORD PTR [rax],eax
  40a312:	add    BYTE PTR [rax],al
  40a314:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040b000 <.bss>:
	...

Disassembly of section .idata:

000000000040c000 <.idata>:
  40c000:	js     0x40bfc2
	...
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	cmp    al,0xcd
  40c00e:	add    BYTE PTR [rax],al
  40c010:	rol    bl,1
  40c012:	add    BYTE PTR [rax],al
  40c014:	rex rol DWORD PTR [rax],0x0
	...
  40c020:	cmp    al,0xce
  40c022:	add    BYTE PTR [rax],al
  40c024:	cwde   
  40c025:	(bad)  
  40c026:	add    BYTE PTR [rax],al
  40c028:	sub    bl,al
	...
  40c032:	add    BYTE PTR [rax],al
  40c034:	mov    dh,cl
  40c036:	add    BYTE PTR [rax],al
  40c038:	add    dh,0x0
  40c03b:	add    BYTE PTR [rax+0xc3],dh
  40c041:	add    BYTE PTR [rax],al
  40c043:	add    BYTE PTR [rax],al
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rax+0x80000ce],bl
  40c04d:	mov    DWORD PTR [rax],0xc3c000
	...
  40c05b:	add    BYTE PTR [rax+0x180000ce],ch
  40c061:	mov    DWORD PTR [rax],0x0
	...
  40c077:	add    BYTE PTR [rax],ch
  40c079:	mov    DWORD PTR [rax],0x0
  40c07f:	add    BYTE PTR [rax-0x39],al
  40c082:	add    BYTE PTR [rax],al
  40c084:	add    BYTE PTR [rax],al
  40c086:	add    BYTE PTR [rax],al
  40c088:	pop    rax
  40c089:	mov    DWORD PTR [rax],0x0
  40c08f:	add    BYTE PTR [rdi+rax*8+0x0],ch
  40c093:	add    BYTE PTR [rax],al
  40c095:	add    BYTE PTR [rax],al
  40c097:	add    BYTE PTR [rdx+0xc7],al
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rax+0xc7],bl
  40c0a5:	add    BYTE PTR [rax],al
  40c0a7:	add    BYTE PTR [rax+0xc7],ch
  40c0ad:	add    BYTE PTR [rax],al
  40c0af:	add    BYTE PTR [rsi+0xc7],bh
  40c0b5:	add    BYTE PTR [rax],al
  40c0b7:	add    al,dl
  40c0b9:	mov    DWORD PTR [rax],0x0
  40c0bf:	add    dl,ch
  40c0c1:	mov    DWORD PTR [rax],0x0
  40c0c7:	add    dl,bh
  40c0c9:	mov    DWORD PTR [rax],0x0
  40c0cf:	add    BYTE PTR [rsi],dl
  40c0d1:	enter  0x0,0x0
  40c0d5:	add    BYTE PTR [rax],al
  40c0d7:	add    BYTE PTR [rsi],ch
  40c0d9:	enter  0x0,0x0
  40c0dd:	add    BYTE PTR [rax],al
  40c0df:	add    BYTE PTR [rax-0x38],cl
  40c0e2:	add    BYTE PTR [rax],al
  40c0e4:	add    BYTE PTR [rax],al
  40c0e6:	add    BYTE PTR [rax],al
  40c0e8:	pop    rsi
  40c0e9:	enter  0x0,0x0
  40c0ed:	add    BYTE PTR [rax],al
  40c0ef:	add    BYTE PTR [rdx-0x38],dh
  40c0f2:	add    BYTE PTR [rax],al
  40c0f4:	add    BYTE PTR [rax],al
  40c0f6:	add    BYTE PTR [rax],al
  40c0f8:	mov    eax,cs
  40c0fa:	add    BYTE PTR [rax],al
  40c0fc:	add    BYTE PTR [rax],al
  40c0fe:	add    BYTE PTR [rax],al
  40c100:	movabs al,ds:0xbe000000000000c8
  40c109:	enter  0x0,0x0
  40c10d:	add    BYTE PTR [rax],al
  40c10f:	add    dh,al
  40c111:	enter  0x0,0x0
  40c115:	add    BYTE PTR [rax],al
  40c117:	add    dl,bl
  40c119:	enter  0x0,0x0
  40c11d:	add    BYTE PTR [rax],al
  40c11f:	add    al,ch
  40c121:	enter  0x0,0x0
  40c125:	add    BYTE PTR [rax],al
  40c127:	add    BYTE PTR [rcx+rcx*8],al
  40c12a:	add    BYTE PTR [rax],al
  40c12c:	add    BYTE PTR [rax],al
  40c12e:	add    BYTE PTR [rax],al
  40c130:	(bad)  
  40c131:	leave  
	...
  40c13e:	add    BYTE PTR [rax],al
  40c140:	es leave 
  40c142:	add    BYTE PTR [rax],al
  40c144:	add    BYTE PTR [rax],al
  40c146:	add    BYTE PTR [rax],al
  40c148:	ds leave 
  40c14a:	add    BYTE PTR [rax],al
  40c14c:	add    BYTE PTR [rax],al
  40c14e:	add    BYTE PTR [rax],al
  40c150:	rex.W leave 
  40c152:	add    BYTE PTR [rax],al
  40c154:	add    BYTE PTR [rax],al
  40c156:	add    BYTE PTR [rax],al
  40c158:	push   rsi
  40c159:	leave  
  40c15a:	add    BYTE PTR [rax],al
  40c15c:	add    BYTE PTR [rax],al
  40c15e:	add    BYTE PTR [rax],al
  40c160:	leavew 
  40c162:	add    BYTE PTR [rax],al
  40c164:	add    BYTE PTR [rax],al
  40c166:	add    BYTE PTR [rax],al
  40c168:	jb     0x40c133
  40c16a:	add    BYTE PTR [rax],al
  40c16c:	add    BYTE PTR [rax],al
  40c16e:	add    BYTE PTR [rax],al
  40c170:	or     cl,0x0
  40c173:	add    BYTE PTR [rax],al
  40c175:	add    BYTE PTR [rax],al
  40c177:	add    BYTE PTR [rax+0xc9],dl
  40c17d:	add    BYTE PTR [rax],al
  40c17f:	add    BYTE PTR [rdx+0xc9],ah
  40c185:	add    BYTE PTR [rax],al
  40c187:	add    BYTE PTR [rsi+0xc9],dh
  40c18d:	add    BYTE PTR [rax],al
  40c18f:	add    al,al
  40c191:	leave  
  40c192:	add    BYTE PTR [rax],al
  40c194:	add    BYTE PTR [rax],al
  40c196:	add    BYTE PTR [rax],al
  40c198:	(bad)  
  40c199:	leave  
  40c19a:	add    BYTE PTR [rax],al
  40c19c:	add    BYTE PTR [rax],al
  40c19e:	add    BYTE PTR [rax],al
  40c1a0:	fmul   st,st(1)
  40c1a2:	add    BYTE PTR [rax],al
  40c1a4:	add    BYTE PTR [rax],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	loop   0x40c173
  40c1aa:	add    BYTE PTR [rax],al
  40c1ac:	add    BYTE PTR [rax],al
  40c1ae:	add    BYTE PTR [rax],al
  40c1b0:	(bad)  
  40c1b1:	leave  
  40c1b2:	add    BYTE PTR [rax],al
  40c1b4:	add    BYTE PTR [rax],al
  40c1b6:	add    BYTE PTR [rax],al
  40c1b8:	hlt    
  40c1b9:	leave  
  40c1ba:	add    BYTE PTR [rax],al
  40c1bc:	add    BYTE PTR [rax],al
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	add    dl,cl
  40c1c2:	add    BYTE PTR [rax],al
  40c1c4:	add    BYTE PTR [rax],al
  40c1c6:	add    BYTE PTR [rax],al
  40c1c8:	or     dl,cl
  40c1ca:	add    BYTE PTR [rax],al
  40c1cc:	add    BYTE PTR [rax],al
  40c1ce:	add    BYTE PTR [rax],al
  40c1d0:	adc    cl,dl
  40c1d2:	add    BYTE PTR [rax],al
  40c1d4:	add    BYTE PTR [rax],al
  40c1d6:	add    BYTE PTR [rax],al
  40c1d8:	and    dl,cl
  40c1da:	add    BYTE PTR [rax],al
  40c1dc:	add    BYTE PTR [rax],al
  40c1de:	add    BYTE PTR [rax],al
  40c1e0:	sub    cl,dl
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	add    BYTE PTR [rax],al
  40c1e6:	add    BYTE PTR [rax],al
  40c1e8:	ss retf 0x0
  40c1ec:	add    BYTE PTR [rax],al
  40c1ee:	add    BYTE PTR [rax],al
  40c1f0:	rex retf 0x0
  40c1f4:	add    BYTE PTR [rax],al
  40c1f6:	add    BYTE PTR [rax],al
  40c1f8:	rex.WRX retf 0x0
  40c1fc:	add    BYTE PTR [rax],al
  40c1fe:	add    BYTE PTR [rax],al
  40c200:	push   rsi
  40c201:	retf   0x0
  40c204:	add    BYTE PTR [rax],al
  40c206:	add    BYTE PTR [rax],al
  40c208:	(bad)  
  40c209:	retf   0x0
  40c20c:	add    BYTE PTR [rax],al
  40c20e:	add    BYTE PTR [rax],al
  40c210:	push   0xca
  40c215:	add    BYTE PTR [rax],al
  40c217:	add    BYTE PTR [rax-0x36],dh
  40c21a:	add    BYTE PTR [rax],al
  40c21c:	add    BYTE PTR [rax],al
  40c21e:	add    BYTE PTR [rax],al
  40c220:	jp     0x40c1ec
  40c222:	add    BYTE PTR [rax],al
  40c224:	add    BYTE PTR [rax],al
  40c226:	add    BYTE PTR [rax],al
  40c228:	(bad)  
  40c229:	retf   0x0
  40c22c:	add    BYTE PTR [rax],al
  40c22e:	add    BYTE PTR [rax],al
  40c230:	mov    cl,dl
  40c232:	add    BYTE PTR [rax],al
  40c234:	add    BYTE PTR [rax],al
  40c236:	add    BYTE PTR [rax],al
  40c238:	xchg   esp,eax
  40c239:	retf   0x0
  40c23c:	add    BYTE PTR [rax],al
  40c23e:	add    BYTE PTR [rax],al
  40c240:	pushf  
  40c241:	retf   0x0
  40c244:	add    BYTE PTR [rax],al
  40c246:	add    BYTE PTR [rax],al
  40c248:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c249:	retf   0x0
  40c24c:	add    BYTE PTR [rax],al
  40c24e:	add    BYTE PTR [rax],al
  40c250:	scas   al,BYTE PTR es:[rdi]
  40c251:	retf   0x0
  40c254:	add    BYTE PTR [rax],al
  40c256:	add    BYTE PTR [rax],al
  40c258:	mov    edx,0xca
  40c25d:	add    BYTE PTR [rax],al
  40c25f:	add    ah,al
  40c261:	retf   0x0
  40c264:	add    BYTE PTR [rax],al
  40c266:	add    BYTE PTR [rax],al
  40c268:	(bad)  
  40c269:	retf   0x0
  40c26c:	add    BYTE PTR [rax],al
  40c26e:	add    BYTE PTR [rax],al
  40c270:	fmul   st,st(2)
  40c272:	add    BYTE PTR [rax],al
  40c274:	add    BYTE PTR [rax],al
  40c276:	add    BYTE PTR [rax],al
  40c278:	loop   0x40c244
  40c27a:	add    BYTE PTR [rax],al
  40c27c:	add    BYTE PTR [rax],al
  40c27e:	add    BYTE PTR [rax],al
  40c280:	out    dx,al
  40c281:	retf   0x0
  40c284:	add    BYTE PTR [rax],al
  40c286:	add    BYTE PTR [rax],al
  40c288:	clc    
  40c289:	retf   0x0
  40c28c:	add    BYTE PTR [rax],al
  40c28e:	add    BYTE PTR [rax],al
  40c290:	add    cl,bl
  40c292:	add    BYTE PTR [rax],al
  40c294:	add    BYTE PTR [rax],al
  40c296:	add    BYTE PTR [rax],al
  40c298:	or     al,0xcb
  40c29a:	add    BYTE PTR [rax],al
  40c29c:	add    BYTE PTR [rax],al
  40c29e:	add    BYTE PTR [rax],al
  40c2a0:	(bad)  
  40c2a1:	retf   
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	add    BYTE PTR [rax],al
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	(bad)  
  40c2a9:	retf   
  40c2aa:	add    BYTE PTR [rax],al
  40c2ac:	add    BYTE PTR [rax],al
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	sub    bl,cl
  40c2b2:	add    BYTE PTR [rax],al
  40c2b4:	add    BYTE PTR [rax],al
  40c2b6:	add    BYTE PTR [rax],al
  40c2b8:	xor    al,0xcb
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	add    BYTE PTR [rax],al
  40c2be:	add    BYTE PTR [rax],al
  40c2c0:	ds retf 
  40c2c2:	add    BYTE PTR [rax],al
  40c2c4:	add    BYTE PTR [rax],al
  40c2c6:	add    BYTE PTR [rax],al
  40c2c8:	rex.W retf 
  40c2ca:	add    BYTE PTR [rax],al
  40c2cc:	add    BYTE PTR [rax],al
  40c2ce:	add    BYTE PTR [rax],al
  40c2d0:	push   rdx
  40c2d1:	retf   
  40c2d2:	add    BYTE PTR [rax],al
  40c2d4:	add    BYTE PTR [rax],al
  40c2d6:	add    BYTE PTR [rax],al
  40c2d8:	pop    rsp
  40c2d9:	retf   
  40c2da:	add    BYTE PTR [rax],al
  40c2dc:	add    BYTE PTR [rax],al
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	retfw  
  40c2e2:	add    BYTE PTR [rax],al
  40c2e4:	add    BYTE PTR [rax],al
  40c2e6:	add    BYTE PTR [rax],al
  40c2e8:	jb     0x40c2b5
  40c2ea:	add    BYTE PTR [rax],al
  40c2ec:	add    BYTE PTR [rax],al
  40c2ee:	add    BYTE PTR [rax],al
  40c2f0:	jl     0x40c2bd
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	add    BYTE PTR [rax],al
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	xchg   bl,cl
  40c2fa:	add    BYTE PTR [rax],al
  40c2fc:	add    BYTE PTR [rax],al
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	nop
  40c301:	retf   
  40c302:	add    BYTE PTR [rax],al
  40c304:	add    BYTE PTR [rax],al
  40c306:	add    BYTE PTR [rax],al
  40c308:	pushf  
  40c309:	retf   
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	add    BYTE PTR [rax],al
  40c30e:	add    BYTE PTR [rax],al
  40c310:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c311:	retf   
  40c312:	add    BYTE PTR [rax],al
  40c314:	add    BYTE PTR [rax],al
  40c316:	add    BYTE PTR [rax],al
  40c318:	mov    dl,0xcb
	...
  40c326:	add    BYTE PTR [rax],al
  40c328:	mov    esp,0xcb
  40c32d:	add    BYTE PTR [rax],al
  40c32f:	add    dh,cl
  40c331:	retf   
  40c332:	add    BYTE PTR [rax],al
  40c334:	add    BYTE PTR [rax],al
  40c336:	add    BYTE PTR [rax],al
  40c338:	fmul   st(3),st
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	add    BYTE PTR [rax],al
  40c33e:	add    BYTE PTR [rax],al
  40c340:	(bad)  
  40c341:	retf   
  40c342:	add    BYTE PTR [rax],al
  40c344:	add    BYTE PTR [rax],al
  40c346:	add    BYTE PTR [rax],al
  40c348:	cld    
  40c349:	retf   
  40c34a:	add    BYTE PTR [rax],al
  40c34c:	add    BYTE PTR [rax],al
  40c34e:	add    BYTE PTR [rax],al
  40c350:	or     al,0xcc
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    BYTE PTR [rax],al
  40c356:	add    BYTE PTR [rax],al
  40c358:	sbb    cl,ah
  40c35a:	add    BYTE PTR [rax],al
  40c35c:	add    BYTE PTR [rax],al
  40c35e:	add    BYTE PTR [rax],al
  40c360:	es int3 
  40c362:	add    BYTE PTR [rax],al
  40c364:	add    BYTE PTR [rax],al
  40c366:	add    BYTE PTR [rax],al
  40c368:	ss int3 
  40c36a:	add    BYTE PTR [rax],al
  40c36c:	add    BYTE PTR [rax],al
  40c36e:	add    BYTE PTR [rax],al
  40c370:	rex.W int3 
  40c372:	add    BYTE PTR [rax],al
  40c374:	add    BYTE PTR [rax],al
  40c376:	add    BYTE PTR [rax],al
  40c378:	pop    rdx
  40c379:	int3   
  40c37a:	add    BYTE PTR [rax],al
  40c37c:	add    BYTE PTR [rax],al
  40c37e:	add    BYTE PTR [rax],al
  40c380:	push   0xffffffffffffffcc
  40c382:	add    BYTE PTR [rax],al
  40c384:	add    BYTE PTR [rax],al
  40c386:	add    BYTE PTR [rax],al
  40c388:	jl     0x40c356
  40c38a:	add    BYTE PTR [rax],al
  40c38c:	add    BYTE PTR [rax],al
  40c38e:	add    BYTE PTR [rax],al
  40c390:	mov    cs,esp
  40c392:	add    BYTE PTR [rax],al
  40c394:	add    BYTE PTR [rax],al
  40c396:	add    BYTE PTR [rax],al
  40c398:	movabs ds:0xb0000000000000cc,al
  40c3a1:	int3   
	...
  40c3ae:	add    BYTE PTR [rax],al
  40c3b0:	ror    ah,0x0
	...
  40c3bf:	add    dh,cl
  40c3c1:	int3   
	...
  40c3ce:	add    BYTE PTR [rax],al
  40c3d0:	sub    bh,al
  40c3d2:	add    BYTE PTR [rax],al
  40c3d4:	add    BYTE PTR [rax],al
  40c3d6:	add    BYTE PTR [rax],al
  40c3d8:	rex mov DWORD PTR [rax],0x0
  40c3df:	add    BYTE PTR [rax-0x39],bl
  40c3e2:	add    BYTE PTR [rax],al
  40c3e4:	add    BYTE PTR [rax],al
  40c3e6:	add    BYTE PTR [rax],al
  40c3e8:	ins    BYTE PTR es:[rdi],dx
  40c3e9:	mov    DWORD PTR [rax],0x0
  40c3ef:	add    BYTE PTR [rdx+0xc7],al
  40c3f5:	add    BYTE PTR [rax],al
  40c3f7:	add    BYTE PTR [rax+0xc7],bl
  40c3fd:	add    BYTE PTR [rax],al
  40c3ff:	add    BYTE PTR [rax+0xc7],ch
  40c405:	add    BYTE PTR [rax],al
  40c407:	add    BYTE PTR [rsi+0xc7],bh
  40c40d:	add    BYTE PTR [rax],al
  40c40f:	add    al,dl
  40c411:	mov    DWORD PTR [rax],0x0
  40c417:	add    dl,ch
  40c419:	mov    DWORD PTR [rax],0x0
  40c41f:	add    dl,bh
  40c421:	mov    DWORD PTR [rax],0x0
  40c427:	add    BYTE PTR [rsi],dl
  40c429:	enter  0x0,0x0
  40c42d:	add    BYTE PTR [rax],al
  40c42f:	add    BYTE PTR [rsi],ch
  40c431:	enter  0x0,0x0
  40c435:	add    BYTE PTR [rax],al
  40c437:	add    BYTE PTR [rax-0x38],cl
  40c43a:	add    BYTE PTR [rax],al
  40c43c:	add    BYTE PTR [rax],al
  40c43e:	add    BYTE PTR [rax],al
  40c440:	pop    rsi
  40c441:	enter  0x0,0x0
  40c445:	add    BYTE PTR [rax],al
  40c447:	add    BYTE PTR [rdx-0x38],dh
  40c44a:	add    BYTE PTR [rax],al
  40c44c:	add    BYTE PTR [rax],al
  40c44e:	add    BYTE PTR [rax],al
  40c450:	mov    eax,cs
  40c452:	add    BYTE PTR [rax],al
  40c454:	add    BYTE PTR [rax],al
  40c456:	add    BYTE PTR [rax],al
  40c458:	movabs al,ds:0xbe000000000000c8
  40c461:	enter  0x0,0x0
  40c465:	add    BYTE PTR [rax],al
  40c467:	add    dh,al
  40c469:	enter  0x0,0x0
  40c46d:	add    BYTE PTR [rax],al
  40c46f:	add    dl,bl
  40c471:	enter  0x0,0x0
  40c475:	add    BYTE PTR [rax],al
  40c477:	add    al,ch
  40c479:	enter  0x0,0x0
  40c47d:	add    BYTE PTR [rax],al
  40c47f:	add    BYTE PTR [rcx+rcx*8],al
  40c482:	add    BYTE PTR [rax],al
  40c484:	add    BYTE PTR [rax],al
  40c486:	add    BYTE PTR [rax],al
  40c488:	(bad)  
  40c489:	leave  
	...
  40c496:	add    BYTE PTR [rax],al
  40c498:	es leave 
  40c49a:	add    BYTE PTR [rax],al
  40c49c:	add    BYTE PTR [rax],al
  40c49e:	add    BYTE PTR [rax],al
  40c4a0:	ds leave 
  40c4a2:	add    BYTE PTR [rax],al
  40c4a4:	add    BYTE PTR [rax],al
  40c4a6:	add    BYTE PTR [rax],al
  40c4a8:	rex.W leave 
  40c4aa:	add    BYTE PTR [rax],al
  40c4ac:	add    BYTE PTR [rax],al
  40c4ae:	add    BYTE PTR [rax],al
  40c4b0:	push   rsi
  40c4b1:	leave  
  40c4b2:	add    BYTE PTR [rax],al
  40c4b4:	add    BYTE PTR [rax],al
  40c4b6:	add    BYTE PTR [rax],al
  40c4b8:	leavew 
  40c4ba:	add    BYTE PTR [rax],al
  40c4bc:	add    BYTE PTR [rax],al
  40c4be:	add    BYTE PTR [rax],al
  40c4c0:	jb     0x40c48b
  40c4c2:	add    BYTE PTR [rax],al
  40c4c4:	add    BYTE PTR [rax],al
  40c4c6:	add    BYTE PTR [rax],al
  40c4c8:	or     cl,0x0
  40c4cb:	add    BYTE PTR [rax],al
  40c4cd:	add    BYTE PTR [rax],al
  40c4cf:	add    BYTE PTR [rax+0xc9],dl
  40c4d5:	add    BYTE PTR [rax],al
  40c4d7:	add    BYTE PTR [rdx+0xc9],ah
  40c4dd:	add    BYTE PTR [rax],al
  40c4df:	add    BYTE PTR [rsi+0xc9],dh
  40c4e5:	add    BYTE PTR [rax],al
  40c4e7:	add    al,al
  40c4e9:	leave  
  40c4ea:	add    BYTE PTR [rax],al
  40c4ec:	add    BYTE PTR [rax],al
  40c4ee:	add    BYTE PTR [rax],al
  40c4f0:	(bad)  
  40c4f1:	leave  
  40c4f2:	add    BYTE PTR [rax],al
  40c4f4:	add    BYTE PTR [rax],al
  40c4f6:	add    BYTE PTR [rax],al
  40c4f8:	fmul   st,st(1)
  40c4fa:	add    BYTE PTR [rax],al
  40c4fc:	add    BYTE PTR [rax],al
  40c4fe:	add    BYTE PTR [rax],al
  40c500:	loop   0x40c4cb
  40c502:	add    BYTE PTR [rax],al
  40c504:	add    BYTE PTR [rax],al
  40c506:	add    BYTE PTR [rax],al
  40c508:	(bad)  
  40c509:	leave  
  40c50a:	add    BYTE PTR [rax],al
  40c50c:	add    BYTE PTR [rax],al
  40c50e:	add    BYTE PTR [rax],al
  40c510:	hlt    
  40c511:	leave  
  40c512:	add    BYTE PTR [rax],al
  40c514:	add    BYTE PTR [rax],al
  40c516:	add    BYTE PTR [rax],al
  40c518:	add    dl,cl
  40c51a:	add    BYTE PTR [rax],al
  40c51c:	add    BYTE PTR [rax],al
  40c51e:	add    BYTE PTR [rax],al
  40c520:	or     dl,cl
  40c522:	add    BYTE PTR [rax],al
  40c524:	add    BYTE PTR [rax],al
  40c526:	add    BYTE PTR [rax],al
  40c528:	adc    cl,dl
  40c52a:	add    BYTE PTR [rax],al
  40c52c:	add    BYTE PTR [rax],al
  40c52e:	add    BYTE PTR [rax],al
  40c530:	and    dl,cl
  40c532:	add    BYTE PTR [rax],al
  40c534:	add    BYTE PTR [rax],al
  40c536:	add    BYTE PTR [rax],al
  40c538:	sub    cl,dl
  40c53a:	add    BYTE PTR [rax],al
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	ss retf 0x0
  40c544:	add    BYTE PTR [rax],al
  40c546:	add    BYTE PTR [rax],al
  40c548:	rex retf 0x0
  40c54c:	add    BYTE PTR [rax],al
  40c54e:	add    BYTE PTR [rax],al
  40c550:	rex.WRX retf 0x0
  40c554:	add    BYTE PTR [rax],al
  40c556:	add    BYTE PTR [rax],al
  40c558:	push   rsi
  40c559:	retf   0x0
  40c55c:	add    BYTE PTR [rax],al
  40c55e:	add    BYTE PTR [rax],al
  40c560:	(bad)  
  40c561:	retf   0x0
  40c564:	add    BYTE PTR [rax],al
  40c566:	add    BYTE PTR [rax],al
  40c568:	push   0xca
  40c56d:	add    BYTE PTR [rax],al
  40c56f:	add    BYTE PTR [rax-0x36],dh
  40c572:	add    BYTE PTR [rax],al
  40c574:	add    BYTE PTR [rax],al
  40c576:	add    BYTE PTR [rax],al
  40c578:	jp     0x40c544
  40c57a:	add    BYTE PTR [rax],al
  40c57c:	add    BYTE PTR [rax],al
  40c57e:	add    BYTE PTR [rax],al
  40c580:	(bad)  
  40c581:	retf   0x0
  40c584:	add    BYTE PTR [rax],al
  40c586:	add    BYTE PTR [rax],al
  40c588:	mov    cl,dl
  40c58a:	add    BYTE PTR [rax],al
  40c58c:	add    BYTE PTR [rax],al
  40c58e:	add    BYTE PTR [rax],al
  40c590:	xchg   esp,eax
  40c591:	retf   0x0
  40c594:	add    BYTE PTR [rax],al
  40c596:	add    BYTE PTR [rax],al
  40c598:	pushf  
  40c599:	retf   0x0
  40c59c:	add    BYTE PTR [rax],al
  40c59e:	add    BYTE PTR [rax],al
  40c5a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40c5a1:	retf   0x0
  40c5a4:	add    BYTE PTR [rax],al
  40c5a6:	add    BYTE PTR [rax],al
  40c5a8:	scas   al,BYTE PTR es:[rdi]
  40c5a9:	retf   0x0
  40c5ac:	add    BYTE PTR [rax],al
  40c5ae:	add    BYTE PTR [rax],al
  40c5b0:	mov    edx,0xca
  40c5b5:	add    BYTE PTR [rax],al
  40c5b7:	add    ah,al
  40c5b9:	retf   0x0
  40c5bc:	add    BYTE PTR [rax],al
  40c5be:	add    BYTE PTR [rax],al
  40c5c0:	(bad)  
  40c5c1:	retf   0x0
  40c5c4:	add    BYTE PTR [rax],al
  40c5c6:	add    BYTE PTR [rax],al
  40c5c8:	fmul   st,st(2)
  40c5ca:	add    BYTE PTR [rax],al
  40c5cc:	add    BYTE PTR [rax],al
  40c5ce:	add    BYTE PTR [rax],al
  40c5d0:	loop   0x40c59c
  40c5d2:	add    BYTE PTR [rax],al
  40c5d4:	add    BYTE PTR [rax],al
  40c5d6:	add    BYTE PTR [rax],al
  40c5d8:	out    dx,al
  40c5d9:	retf   0x0
  40c5dc:	add    BYTE PTR [rax],al
  40c5de:	add    BYTE PTR [rax],al
  40c5e0:	clc    
  40c5e1:	retf   0x0
  40c5e4:	add    BYTE PTR [rax],al
  40c5e6:	add    BYTE PTR [rax],al
  40c5e8:	add    cl,bl
  40c5ea:	add    BYTE PTR [rax],al
  40c5ec:	add    BYTE PTR [rax],al
  40c5ee:	add    BYTE PTR [rax],al
  40c5f0:	or     al,0xcb
  40c5f2:	add    BYTE PTR [rax],al
  40c5f4:	add    BYTE PTR [rax],al
  40c5f6:	add    BYTE PTR [rax],al
  40c5f8:	(bad)  
  40c5f9:	retf   
  40c5fa:	add    BYTE PTR [rax],al
  40c5fc:	add    BYTE PTR [rax],al
  40c5fe:	add    BYTE PTR [rax],al
  40c600:	(bad)  
  40c601:	retf   
  40c602:	add    BYTE PTR [rax],al
  40c604:	add    BYTE PTR [rax],al
  40c606:	add    BYTE PTR [rax],al
  40c608:	sub    bl,cl
  40c60a:	add    BYTE PTR [rax],al
  40c60c:	add    BYTE PTR [rax],al
  40c60e:	add    BYTE PTR [rax],al
  40c610:	xor    al,0xcb
  40c612:	add    BYTE PTR [rax],al
  40c614:	add    BYTE PTR [rax],al
  40c616:	add    BYTE PTR [rax],al
  40c618:	ds retf 
  40c61a:	add    BYTE PTR [rax],al
  40c61c:	add    BYTE PTR [rax],al
  40c61e:	add    BYTE PTR [rax],al
  40c620:	rex.W retf 
  40c622:	add    BYTE PTR [rax],al
  40c624:	add    BYTE PTR [rax],al
  40c626:	add    BYTE PTR [rax],al
  40c628:	push   rdx
  40c629:	retf   
  40c62a:	add    BYTE PTR [rax],al
  40c62c:	add    BYTE PTR [rax],al
  40c62e:	add    BYTE PTR [rax],al
  40c630:	pop    rsp
  40c631:	retf   
  40c632:	add    BYTE PTR [rax],al
  40c634:	add    BYTE PTR [rax],al
  40c636:	add    BYTE PTR [rax],al
  40c638:	retfw  
  40c63a:	add    BYTE PTR [rax],al
  40c63c:	add    BYTE PTR [rax],al
  40c63e:	add    BYTE PTR [rax],al
  40c640:	jb     0x40c60d
  40c642:	add    BYTE PTR [rax],al
  40c644:	add    BYTE PTR [rax],al
  40c646:	add    BYTE PTR [rax],al
  40c648:	jl     0x40c615
  40c64a:	add    BYTE PTR [rax],al
  40c64c:	add    BYTE PTR [rax],al
  40c64e:	add    BYTE PTR [rax],al
  40c650:	xchg   bl,cl
  40c652:	add    BYTE PTR [rax],al
  40c654:	add    BYTE PTR [rax],al
  40c656:	add    BYTE PTR [rax],al
  40c658:	nop
  40c659:	retf   
  40c65a:	add    BYTE PTR [rax],al
  40c65c:	add    BYTE PTR [rax],al
  40c65e:	add    BYTE PTR [rax],al
  40c660:	pushf  
  40c661:	retf   
  40c662:	add    BYTE PTR [rax],al
  40c664:	add    BYTE PTR [rax],al
  40c666:	add    BYTE PTR [rax],al
  40c668:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c669:	retf   
  40c66a:	add    BYTE PTR [rax],al
  40c66c:	add    BYTE PTR [rax],al
  40c66e:	add    BYTE PTR [rax],al
  40c670:	mov    dl,0xcb
	...
  40c67e:	add    BYTE PTR [rax],al
  40c680:	mov    esp,0xcb
  40c685:	add    BYTE PTR [rax],al
  40c687:	add    dh,cl
  40c689:	retf   
  40c68a:	add    BYTE PTR [rax],al
  40c68c:	add    BYTE PTR [rax],al
  40c68e:	add    BYTE PTR [rax],al
  40c690:	fmul   st(3),st
  40c692:	add    BYTE PTR [rax],al
  40c694:	add    BYTE PTR [rax],al
  40c696:	add    BYTE PTR [rax],al
  40c698:	(bad)  
  40c699:	retf   
  40c69a:	add    BYTE PTR [rax],al
  40c69c:	add    BYTE PTR [rax],al
  40c69e:	add    BYTE PTR [rax],al
  40c6a0:	cld    
  40c6a1:	retf   
  40c6a2:	add    BYTE PTR [rax],al
  40c6a4:	add    BYTE PTR [rax],al
  40c6a6:	add    BYTE PTR [rax],al
  40c6a8:	or     al,0xcc
  40c6aa:	add    BYTE PTR [rax],al
  40c6ac:	add    BYTE PTR [rax],al
  40c6ae:	add    BYTE PTR [rax],al
  40c6b0:	sbb    cl,ah
  40c6b2:	add    BYTE PTR [rax],al
  40c6b4:	add    BYTE PTR [rax],al
  40c6b6:	add    BYTE PTR [rax],al
  40c6b8:	es int3 
  40c6ba:	add    BYTE PTR [rax],al
  40c6bc:	add    BYTE PTR [rax],al
  40c6be:	add    BYTE PTR [rax],al
  40c6c0:	ss int3 
  40c6c2:	add    BYTE PTR [rax],al
  40c6c4:	add    BYTE PTR [rax],al
  40c6c6:	add    BYTE PTR [rax],al
  40c6c8:	rex.W int3 
  40c6ca:	add    BYTE PTR [rax],al
  40c6cc:	add    BYTE PTR [rax],al
  40c6ce:	add    BYTE PTR [rax],al
  40c6d0:	pop    rdx
  40c6d1:	int3   
  40c6d2:	add    BYTE PTR [rax],al
  40c6d4:	add    BYTE PTR [rax],al
  40c6d6:	add    BYTE PTR [rax],al
  40c6d8:	push   0xffffffffffffffcc
  40c6da:	add    BYTE PTR [rax],al
  40c6dc:	add    BYTE PTR [rax],al
  40c6de:	add    BYTE PTR [rax],al
  40c6e0:	jl     0x40c6ae
  40c6e2:	add    BYTE PTR [rax],al
  40c6e4:	add    BYTE PTR [rax],al
  40c6e6:	add    BYTE PTR [rax],al
  40c6e8:	mov    cs,esp
  40c6ea:	add    BYTE PTR [rax],al
  40c6ec:	add    BYTE PTR [rax],al
  40c6ee:	add    BYTE PTR [rax],al
  40c6f0:	movabs ds:0xb0000000000000cc,al
  40c6f9:	int3   
	...
  40c706:	add    BYTE PTR [rax],al
  40c708:	ror    ah,0x0
	...
  40c717:	add    dh,cl
  40c719:	int3   
	...
  40c726:	add    BYTE PTR [rax],al
  40c728:	fadd   DWORD PTR [rax]
  40c72a:	rex.R
  40c72b:	gs ins BYTE PTR es:[rdi],dx
  40c72d:	gs je  0x40c795
  40c730:	rex.XB jb 0x40c79c
  40c733:	je     0x40c79e
  40c735:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c738:	push   rbx
  40c739:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c73e:	outs   dx,BYTE PTR ds:[rsi]
  40c73f:	add    al,bh
  40c741:	add    BYTE PTR [rbp+0x6e],al
  40c744:	je     0x40c7ab
  40c746:	jb     0x40c78b
  40c748:	jb     0x40c7b3
  40c74a:	je     0x40c7b5
  40c74c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c74f:	push   rbx
  40c750:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c755:	outs   dx,BYTE PTR ds:[rsi]
  40c756:	add    BYTE PTR [rax],al
  40c758:	int    0x1
  40c75a:	rex.RXB
  40c75b:	gs je  0x40c7a1
  40c75e:	jne    0x40c7d2
  40c760:	jb     0x40c7c7
  40c762:	outs   dx,BYTE PTR ds:[rsi]
  40c763:	je     0x40c7b5
  40c765:	jb     0x40c7d6
  40c767:	movsxd esp,DWORD PTR [rbp+0x73]
  40c76a:	jae    0x40c76c
  40c76c:	(bad)  
  40c76d:	add    DWORD PTR [rdi+0x65],eax
  40c770:	je     0x40c7b5
  40c772:	jne    0x40c7e6
  40c774:	jb     0x40c7db
  40c776:	outs   dx,BYTE PTR ds:[rsi]
  40c777:	je     0x40c7c9
  40c779:	jb     0x40c7ea
  40c77b:	movsxd esp,DWORD PTR [rbp+0x73]
  40c77e:	jae    0x40c7c9
  40c780:	fs add dl,dl
  40c783:	add    DWORD PTR [rdi+0x65],eax
  40c786:	je     0x40c7cb
  40c788:	jne    0x40c7fc
  40c78a:	jb     0x40c7f1
  40c78c:	outs   dx,BYTE PTR ds:[rsi]
  40c78d:	je     0x40c7e3
  40c78f:	push   0x64616572
  40c794:	rex.WB
  40c795:	add    BYTE PTR fs:[rax],al
  40c798:	adc    BYTE PTR [rdx],al
  40c79a:	rex.RXB
  40c79b:	gs je  0x40c7ea
  40c79e:	(bad)  
  40c79f:	jae    0x40c815
  40c7a1:	rex.RB jb 0x40c816
  40c7a4:	outs   dx,DWORD PTR ds:[rsi]
  40c7a5:	jb     0x40c7a7
  40c7a7:	add    BYTE PTR [rbx],ah
  40c7a9:	add    al,BYTE PTR [rdi+0x65]
  40c7ac:	je     0x40c7fb
  40c7ae:	outs   dx,DWORD PTR ds:[rsi]
  40c7af:	fs jne 0x40c81e
  40c7b2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  40c7bc:	add    BYTE PTR [rax],al
  40c7be:	jae    0x40c7c2
  40c7c0:	rex.RXB
  40c7c1:	gs je  0x40c817
  40c7c4:	je     0x40c827
  40c7c6:	jb     0x40c83c
  40c7c8:	jne    0x40c83a
  40c7ca:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40c7cc:	outs   dx,WORD PTR ds:[rsi]
  40c7ce:	add    BYTE PTR [r10+0x74654702],cl
  40c7d5:	push   rbx
  40c7d6:	jns    0x40c84b
  40c7d8:	je     0x40c83f
  40c7da:	ins    DWORD PTR es:[rdi],dx
  40c7db:	push   rsp
  40c7dc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40c7e3:	ins    BYTE PTR es:[rdi],dx
  40c7e4:	gs push rsp
  40c7e6:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40c7ed:	gs je  0x40c844
  40c7f0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40c7f7:	je     0x40c7f9
  40c7f9:	add    cl,bh
  40c7fb:	add    cl,BYTE PTR [rcx+0x6e]
  40c7fe:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40c806:	rex.XB jb 0x40c872
  40c809:	je     0x40c874
  40c80b:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c80e:	push   rbx
  40c80f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c814:	outs   dx,BYTE PTR ds:[rsi]
  40c815:	add    BYTE PTR [rbx+0x3],cl
  40c818:	rex.WR
  40c819:	gs (bad) 
  40c81b:	jbe    0x40c882
  40c81d:	rex.XB jb 0x40c889
  40c820:	je     0x40c88b
  40c822:	movsxd esp,DWORD PTR [rcx+0x6c]
  40c825:	push   rbx
  40c826:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40c82b:	outs   dx,BYTE PTR ds:[rsi]
  40c82c:	add    BYTE PTR [rax],al
  40c82e:	mov    ebx,0x65755103
  40c833:	jb     0x40c8ae
  40c835:	push   rax
  40c836:	gs jb  0x40c89f
  40c839:	outs   dx,DWORD PTR ds:[rsi]
  40c83a:	jb     0x40c8a9
  40c83c:	(bad)  
  40c83d:	outs   dx,BYTE PTR ds:[rsi]
  40c83e:	movsxd esp,DWORD PTR [rbp+0x43]
  40c841:	outs   dx,DWORD PTR ds:[rsi]
  40c842:	jne    0x40c8b2
  40c844:	je     0x40c8ab
  40c846:	jb     0x40c848
  40c848:	add    DWORD PTR [rdx+rdx*2],eax
  40c84b:	je     0x40c8b9
  40c84d:	rex.B
  40c84e:	fs fs rex.RX jne 0x40c8c1
  40c853:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c857:	outs   dx,BYTE PTR ds:[rsi]
  40c858:	push   rsp
  40c859:	(bad)  
  40c85a:	(bad)  
  40c85b:	ins    BYTE PTR es:[rdi],dx
  40c85c:	add    BYTE PTR gs:[rdx],al
  40c85f:	add    al,0x52
  40c861:	je     0x40c8cf
  40c863:	rex.XB (bad) 
  40c865:	jo     0x40c8db
  40c867:	jne    0x40c8db
  40c869:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40c86c:	outs   dx,BYTE PTR ds:[rsi]
  40c86d:	je     0x40c8d4
  40c86f:	js     0x40c8e5
  40c871:	add    BYTE PTR [rcx],cl
  40c873:	add    al,0x52
  40c875:	je     0x40c8e3
  40c877:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40c879:	outs   dx,DWORD PTR ds:[rsi]
  40c87a:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40c87e:	jne    0x40c8ee
  40c880:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40c884:	outs   dx,BYTE PTR ds:[rsi]
  40c885:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40c887:	je     0x40c8fb
  40c889:	jns    0x40c88b
  40c88b:	add    BYTE PTR [rax],dl
  40c88d:	add    al,0x52
  40c88f:	je     0x40c8fd
  40c891:	push   rsi
  40c892:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40c899:	outs   dx,BYTE PTR ds:[rsi]
  40c89a:	ja     0x40c905
  40c89c:	outs   dx,BYTE PTR ds:[rsi]
  40c89d:	add    BYTE PTR fs:[rax],al
  40c8a0:	lahf   
  40c8a1:	add    al,0x53
  40c8a3:	gs je  0x40c8fb
  40c8a6:	outs   dx,BYTE PTR ds:[rsi]
  40c8a7:	push   0x6c646e61
  40c8ac:	gs fs rex.RB js 0x40c914
  40c8b1:	gs jo  0x40c928
  40c8b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40c8bb:	gs jb  0x40c8be
  40c8be:	lods   al,BYTE PTR ds:[rsi]
  40c8bf:	add    al,0x53
  40c8c1:	ins    BYTE PTR es:[rdi],dx
  40c8c2:	gs gs jo 0x40c8c6
  40c8c6:	mov    edx,0x72655404
  40c8cb:	ins    DWORD PTR es:[rdi],dx
  40c8cc:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40c8d3:	outs   dx,DWORD PTR ds:[rsi]
  40c8d4:	movsxd esp,DWORD PTR [rbp+0x73]
  40c8d7:	jae    0x40c8d9
  40c8d9:	add    cl,al
  40c8db:	add    al,0x54
  40c8dd:	ins    BYTE PTR es:[rdi],dx
  40c8de:	jae    0x40c927
  40c8e0:	gs je  0x40c939
  40c8e3:	(bad)  
  40c8e4:	ins    BYTE PTR es:[rdi],dx
  40c8e5:	jne    0x40c94c
  40c8e7:	add    dh,cl
  40c8e9:	add    al,0x55
  40c8eb:	outs   dx,BYTE PTR ds:[rsi]
  40c8ec:	push   0x6c646e61
  40c8f1:	gs fs rex.RB js 0x40c959
  40c8f6:	gs jo  0x40c96d
  40c8f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40c900:	gs jb  0x40c903
  40c903:	add    ah,ch
  40c905:	add    al,0x56
  40c907:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40c90e:	jb     0x40c97f
  40c910:	je     0x40c977
  40c912:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40c916:	out    dx,al
  40c917:	add    al,0x56
  40c919:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40c920:	jne    0x40c987
  40c922:	jb     0x40c99d
  40c924:	add    BYTE PTR [rax],al
  40c926:	(bad)  
  40c927:	add    BYTE PTR [rdi+0x5f],bl
  40c92a:	rex.XB pop r15
  40c92c:	jae    0x40c99e
  40c92e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c932:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40c939:	ins    BYTE PTR es:[rdi],dx
  40c93a:	gs jb  0x40c93d
  40c93d:	add    BYTE PTR [rsi+0x0],al
  40c940:	pop    rdi
  40c941:	pop    rdi
  40c942:	(bad)  
  40c943:	jb     0x40c9ac
  40c945:	jbe    0x40c947
  40c947:	add    BYTE PTR [rsi+0x0],cl
  40c94a:	pop    rdi
  40c94b:	pop    rdi
  40c94c:	fs ins BYTE PTR es:[rdi],dx
  40c94e:	ins    BYTE PTR es:[rdi],dx
  40c94f:	outs   dx,DWORD PTR ds:[rsi]
  40c950:	outs   dx,BYTE PTR ds:[rsi]
  40c951:	gs js  0x40c9bd
  40c954:	je     0x40c956
  40c956:	push   rcx
  40c957:	add    BYTE PTR [rdi+0x5f],bl
  40c95a:	addr32 gs je 0x40c9cb
  40c95e:	(bad)  
  40c95f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40c966:	push   rdx
  40c967:	add    BYTE PTR [rdi+0x5f],bl
  40c96a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40c971:	add    BYTE PTR [rbx+0x0],dl
  40c974:	pop    rdi
  40c975:	pop    rdi
  40c976:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40c97d:	movsxd eax,DWORD PTR [rax]
  40c97f:	add    BYTE PTR [rdx+0x0],bl
  40c982:	pop    rdi
  40c983:	pop    rdi
  40c984:	ins    BYTE PTR es:[rdi],dx
  40c985:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c988:	jbe    0x40c9e9
  40c98a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40c991:	add    BYTE PTR [rdi+0x5f],bl
  40c994:	jae    0x40c9fb
  40c996:	je     0x40c9f7
  40c998:	(bad)  
  40c999:	jo     0x40ca0b
  40c99b:	pop    rdi
  40c99c:	je     0x40ca17
  40c99e:	jo     0x40ca05
  40c9a0:	add    BYTE PTR [rax],al
  40c9a2:	(bad)  
  40c9a3:	add    BYTE PTR [rdi+0x5f],bl
  40c9a6:	jae    0x40ca0d
  40c9a8:	je     0x40ca1f
  40c9aa:	jae    0x40ca11
  40c9ac:	jb     0x40ca1b
  40c9ae:	(bad)  
  40c9af:	je     0x40ca19
  40c9b1:	gs jb  0x40ca26
  40c9b4:	add    BYTE PTR [rax],al
  40c9b6:	jno    0x40c9b8
  40c9b8:	pop    rdi
  40c9b9:	(bad)  
  40c9ba:	movsxd ebp,DWORD PTR [rbp+0x64]
  40c9bd:	ins    BYTE PTR es:[rdi],dx
  40c9be:	outs   dx,BYTE PTR ds:[rsi]
  40c9bf:	add    BYTE PTR [rax+0x0],bh
  40c9c2:	pop    rdi
  40c9c3:	(bad)  
  40c9c4:	ins    DWORD PTR es:[rdi],dx
  40c9c5:	jae    0x40ca2e
  40c9c7:	pop    rdi
  40c9c8:	gs js  0x40ca34
  40c9cb:	je     0x40c9cd
  40c9cd:	add    BYTE PTR [rdx+0x65635f00],cl
  40c9d3:	js     0x40ca3e
  40c9d5:	je     0x40c9d7
  40c9d7:	add    BYTE PTR [rdx+0x72655f00],bh
  40c9dd:	jb     0x40ca4d
  40c9df:	outs   dx,DWORD PTR ds:[rsi]
  40c9e0:	add    BYTE PTR [rax],al
  40c9e2:	ret    
  40c9e3:	add    BYTE PTR [rdi+0x65],bl
  40c9e6:	js     0x40ca51
  40c9e8:	je     0x40c9ea
  40c9ea:	fiadd  DWORD PTR [rax]
  40c9ec:	pop    rdi
  40c9ed:	ins    WORD PTR es:[rdi],dx
  40c9ef:	outs   dx,DWORD PTR ds:[rsi]
  40c9f0:	fs add BYTE PTR gs:[rax],al
  40c9f4:	sbb    al,BYTE PTR [rcx]
  40c9f6:	pop    rdi
  40c9f7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40c9fe:	ins    DWORD PTR es:[rdi],dx
  40c9ff:	add    BYTE PTR [rax+0x6f6c5f01],al
  40ca05:	movsxd ebp,DWORD PTR [rbx+0x0]
  40ca08:	and    eax,0x6e6f5f02
  40ca0d:	gs js  0x40ca79
  40ca10:	je     0x40ca12
  40ca12:	movsxd eax,DWORD PTR [rdx]
  40ca14:	pop    rdi
  40ca15:	jae    0x40ca85
  40ca17:	ja     0x40ca89
  40ca19:	jb     0x40ca84
  40ca1b:	outs   dx,BYTE PTR ds:[rsi]
  40ca1c:	je     0x40ca84
  40ca1e:	add    BYTE PTR [rax],al
  40ca20:	add    BYTE PTR [rdx],0x5f
  40ca23:	jae    0x40ca99
  40ca25:	jb     0x40ca8b
  40ca27:	jne    0x40ca99
  40ca29:	add    BYTE PTR [rbp+0x74735f02],cl
  40ca2f:	jb     0x40ca9f
  40ca31:	imul   esp,DWORD PTR [rbx+0x6d],0x2c40070
  40ca38:	pop    rdi
  40ca39:	jne    0x40caa9
  40ca3b:	ins    BYTE PTR es:[rdi],dx
  40ca3c:	outs   dx,DWORD PTR ds:[rsi]
  40ca3d:	movsxd ebp,DWORD PTR [rbx+0x0]
  40ca40:	loope  0x40ca44
  40ca42:	pop    rdi
  40ca43:	jbe    0x40cab8
  40ca45:	outs   dx,BYTE PTR ds:[rsi]
  40ca46:	jo     0x40caba
  40ca48:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  40ca4f:	add    esp,DWORD PTR [rcx+0x62]
  40ca52:	outs   dx,DWORD PTR ds:[rsi]
  40ca53:	jb     0x40cac9
  40ca55:	add    BYTE PTR [rax+0x6c616303],dl
  40ca5b:	ins    BYTE PTR es:[rdi],dx
  40ca5c:	outs   dx,DWORD PTR ds:[rsi]
  40ca5d:	movsxd eax,DWORD PTR [rax]
  40ca5f:	add    BYTE PTR [rbp+0x69786503],bl
  40ca65:	je     0x40ca67
  40ca67:	add    BYTE PTR [rdx+0x6f656603],ah
  40ca6d:	data16 add BYTE PTR [rax],al
  40ca70:	movabs ds:0x726f7272656603,eax
  40ca79:	add    BYTE PTR [rdi+0x65676603],ah
  40ca7f:	je     0x40caf4
  40ca81:	add    BYTE PTR [rsi+0x706f6603],ch
  40ca87:	outs   dx,BYTE PTR gs:[rsi]
  40ca89:	add    BYTE PTR [rax+0x72706603],dh
  40ca8f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40ca96:	data16 jo 0x40cb0e
  40ca99:	je     0x40cafe
  40ca9b:	add    BYTE PTR [rdi+0x65726603],dh
  40caa1:	add    BYTE PTR gs:[rax],al
  40caa4:	mov    eax,0x65726603
  40caa9:	outs   dx,DWORD PTR ds:[rsi]
  40caaa:	jo     0x40cb11
  40caac:	outs   dx,BYTE PTR ds:[rsi]
  40caad:	add    al,al
  40caaf:	add    esp,DWORD PTR [rsi+0x77]
  40cab2:	jo     0x40cb26
  40cab4:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  40cabb:	add    esp,DWORD PTR [rsi+0x77]
  40cabe:	jb     0x40cb29
  40cac0:	je     0x40cb27
  40cac2:	add    BYTE PTR [rax],al
  40cac4:	mov    DWORD PTR [rbx],0x65746567
  40caca:	outs   dx,BYTE PTR ds:[rsi]
  40cacb:	jbe    0x40cacd
  40cacd:	add    bh,dl
  40cacf:	add    ebp,DWORD PTR [rcx+0x73]
  40cad2:	jae    0x40cb44
  40cad4:	(bad)  
  40cad5:	movsxd esp,DWORD PTR [rbp+0x0]
  40cad8:	lock add ebp,DWORD PTR [rbp+0x61]
  40cadc:	ins    BYTE PTR es:[rdi],dx
  40cadd:	ins    BYTE PTR es:[rdi],dx
  40cade:	outs   dx,DWORD PTR ds:[rsi]
  40cadf:	movsxd eax,DWORD PTR [rax]
  40cae1:	add    bl,dh
  40cae3:	add    ebp,DWORD PTR [rbp+0x62]
  40cae6:	jae    0x40cb5c
  40cae8:	outs   dx,DWORD PTR ds:[rsi]
  40cae9:	ja     0x40cb4e
  40caeb:	jae    0x40caed
  40caed:	add    al,bh
  40caef:	add    ebp,DWORD PTR [rbp+0x65]
  40caf2:	ins    DWORD PTR es:[rdi],dx
  40caf3:	movsxd esi,DWORD PTR [rax+0x79]
  40caf6:	add    BYTE PTR [rax],al
  40caf8:	stc    
  40caf9:	add    ebp,DWORD PTR [rbp+0x65]
  40cafc:	ins    DWORD PTR es:[rdi],dx
  40cafd:	ins    DWORD PTR es:[rdi],dx
  40cafe:	outs   dx,DWORD PTR ds:[rsi]
  40caff:	jbe    0x40cb66
  40cb01:	add    dl,bh
  40cb03:	add    ebp,DWORD PTR [rbp+0x65]
  40cb06:	ins    DWORD PTR es:[rdi],dx
  40cb07:	jae    0x40cb6e
  40cb09:	je     0x40cb0b
  40cb0b:	add    dh,bh
  40cb0d:	add    esi,DWORD PTR [rax+0x65]
  40cb10:	jb     0x40cb84
  40cb12:	outs   dx,DWORD PTR ds:[rsi]
  40cb13:	jb     0x40cb15
  40cb15:	add    BYTE PTR [rdx],cl
  40cb17:	add    al,0x72
  40cb19:	(bad)  
  40cb1a:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  40cb21:	gs (bad) 
  40cb23:	ins    BYTE PTR es:[rdi],dx
  40cb24:	ins    BYTE PTR es:[rdi],dx
  40cb25:	outs   dx,DWORD PTR ds:[rsi]
  40cb26:	movsxd eax,DWORD PTR [rax]
  40cb28:	adc    al,0x4
  40cb2a:	jae    0x40cb91
  40cb2c:	je     0x40cb9a
  40cb2e:	outs   dx,DWORD PTR ds:[rsi]
  40cb2f:	movsxd esp,DWORD PTR [rcx+0x6c]
  40cb32:	add    BYTE PTR gs:[rsi],dl
  40cb35:	add    al,0x73
  40cb37:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40cb3e:	sbb    eax,DWORD PTR [rbx+rsi*2]
  40cb41:	jo     0x40cbb5
  40cb43:	imul   ebp,DWORD PTR [rsi+0x74],0x4210066
  40cb4a:	jae    0x40cbc0
  40cb4c:	jb     0x40cbb1
  40cb4e:	(bad)  
  40cb4f:	je     0x40cb51
  40cb51:	add    BYTE PTR [rbx],ah
  40cb53:	add    al,0x73
  40cb55:	je     0x40cbc9
  40cb57:	movsxd ebp,DWORD PTR [rax+0x72]
  40cb5a:	add    BYTE PTR [rax],al
  40cb5c:	es add al,0x73
  40cb5f:	je     0x40cbd3
  40cb61:	movsxd esi,DWORD PTR [rax+0x79]
  40cb64:	add    BYTE PTR [rax],al
  40cb66:	sub    DWORD PTR [rbx+rsi*2],eax
  40cb69:	je     0x40cbdd
  40cb6b:	gs jb  0x40cbe0
  40cb6e:	outs   dx,DWORD PTR ds:[rsi]
  40cb6f:	jb     0x40cb71
  40cb71:	add    BYTE PTR [rbx],ch
  40cb73:	add    al,0x73
  40cb75:	je     0x40cbe9
  40cb77:	ins    BYTE PTR es:[rdi],dx
  40cb78:	outs   dx,BYTE PTR gs:[rsi]
  40cb7a:	add    BYTE PTR [rax],al
  40cb7c:	cs add al,0x73
  40cb7f:	je     0x40cbf3
  40cb81:	outs   dx,BYTE PTR ds:[rsi]
  40cb82:	movsxd ebp,DWORD PTR [rbp+0x70]
  40cb85:	add    BYTE PTR [rax],bh
  40cb87:	add    al,0x73
  40cb89:	je     0x40cbfd
  40cb8b:	je     0x40cbfc
  40cb8d:	ins    BYTE PTR es:[rdi],dx
  40cb8e:	add    BYTE PTR [rax],al
  40cb90:	rex.WRX add al,0x76
  40cb93:	data16 jo 0x40cc08
  40cb96:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  40cb9d:	add    al,0x77
  40cb9f:	movsxd esi,DWORD PTR [rbx+0x63]
  40cba2:	jo     0x40cc1d
  40cba4:	add    BYTE PTR [rax],al
  40cba6:	jno    0x40cbac
  40cba8:	ja     0x40cc0d
  40cbaa:	jae    0x40cc20
  40cbac:	outs   dx,DWORD PTR ds:[rsi]
  40cbad:	ins    DWORD PTR es:[rdi],dx
  40cbae:	(bad)  
  40cbb0:	add    BYTE PTR [rax],al
  40cbb2:	mov    esi,0x74735f04
  40cbb7:	jb     0x40cc1d
  40cbb9:	jne    0x40cc2b
  40cbbb:	add    BYTE PTR [rbx],bl
  40cbbd:	add    BYTE PTR [rbx+0x51],dl
  40cbc0:	rex.WR
  40cbc1:	rex.B ins BYTE PTR es:[rdi],dx
  40cbc3:	ins    BYTE PTR es:[rdi],dx
  40cbc4:	outs   dx,DWORD PTR ds:[rsi]
  40cbc5:	movsxd ecx,DWORD PTR [rax+0x61]
  40cbc8:	outs   dx,BYTE PTR ds:[rsi]
  40cbc9:	fs ins BYTE PTR es:[rdi],dx
  40cbcb:	add    BYTE PTR gs:[rax],al
  40cbce:	(bad)  
  40cbcf:	add    BYTE PTR [rbx+0x51],dl
  40cbd2:	rex.WR
  40cbd3:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x6c6f43
  40cbdb:	add    BYTE PTR [rbx],dh
  40cbdd:	add    BYTE PTR [rbx+0x51],dl
  40cbe0:	rex.WR
  40cbe1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40cbe3:	outs   dx,BYTE PTR ds:[rsi]
  40cbe4:	outs   dx,BYTE PTR ds:[rsi]
  40cbe5:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  40cbea:	cmp    al,BYTE PTR [rax]
  40cbec:	push   rbx
  40cbed:	push   rcx
  40cbee:	rex.WR
  40cbef:	rex.R
  40cbf0:	gs jae 0x40cc56
  40cbf3:	jb     0x40cc5e
  40cbf5:	(bad)  
  40cbf6:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40cbf9:	ins    BYTE PTR es:[rdi],dx
  40cbfa:	add    BYTE PTR [rax],al
  40cbfc:	add    BYTE PTR ds:[rbx+0x51],dl
  40cc00:	rex.WR
  40cc01:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
  40cc09:	movsxd esi,DWORD PTR [rax+rax*1+0x4c]
  40cc0d:	add    BYTE PTR [rbx+0x51],dl
  40cc10:	rex.WR
  40cc11:	rex.RB js 0x40cc79
  40cc14:	movsxd esi,DWORD PTR [rbp+0x74]
  40cc17:	add    BYTE PTR gs:[rax],al
  40cc1a:	rex.WRX add BYTE PTR [rbx+0x51],r10b
  40cc1e:	rex.WR
  40cc1f:	rex.RX
  40cc20:	gs je  0x40cc86
  40cc23:	push   0x550000
  40cc28:	push   rbx
  40cc29:	push   rcx
  40cc2a:	rex.WR
  40cc2b:	rex.RX jb 0x40cc93
  40cc2e:	gs rex.W (bad) 
  40cc31:	outs   dx,BYTE PTR ds:[rsi]
  40cc32:	fs ins BYTE PTR es:[rdi],dx
  40cc34:	add    BYTE PTR gs:[rcx+0x0],ah
  40cc38:	push   rbx
  40cc39:	push   rcx
  40cc3a:	rex.WR
  40cc3b:	rex.RXB
  40cc3c:	gs je  0x40cc83
  40cc3f:	gs jae 0x40cca5
  40cc42:	rex.RX imul r12d,DWORD PTR [rbp+0x6c],0x670064
  40cc4a:	push   rbx
  40cc4b:	push   rcx
  40cc4c:	rex.WR
  40cc4d:	rex.RXB
  40cc4e:	gs je  0x40cc95
  40cc51:	imul   esp,DWORD PTR [rcx+0x67],0x6c656946
  40cc58:	add    BYTE PTR fs:[rdx+0x0],ch
  40cc5c:	push   rbx
  40cc5d:	push   rcx
  40cc5e:	rex.WR
  40cc5f:	rex.RXB
  40cc60:	gs je  0x40cca7
  40cc63:	imul   esp,DWORD PTR [rcx+0x67],0x636552
  40cc6a:	jb     0x40cc6c
  40cc6c:	push   rbx
  40cc6d:	push   rcx
  40cc6e:	rex.WR
  40cc6f:	rex.RXB
  40cc70:	gs je  0x40ccc6
  40cc73:	je     0x40cce2
  40cc75:	je     0x40ccb8
  40cc77:	je     0x40cced
  40cc79:	jb     0x40cc7b
  40cc7b:	add    BYTE PTR [rcx+0x0],bh
  40cc7e:	push   rbx
  40cc7f:	push   rcx
  40cc80:	rex.WR
  40cc81:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40cc83:	jb     0x40ccea
  40cc85:	push   rdx
  40cc86:	gs jae 0x40ccfe
  40cc89:	ins    BYTE PTR es:[rdi],dx
  40cc8a:	je     0x40ccff
  40cc8c:	add    BYTE PTR [rax],al
  40cc8e:	jle    0x40cc90
  40cc90:	push   rbx
  40cc91:	push   rcx
  40cc92:	rex.WR
  40cc93:	rex.WRX jne 0x40cd03
  40cc96:	push   rdx
  40cc97:	gs jae 0x40cd0f
  40cc9a:	ins    BYTE PTR es:[rdi],dx
  40cc9b:	je     0x40cce0
  40cc9d:	outs   dx,DWORD PTR ds:[rsi]
  40cc9e:	ins    BYTE PTR es:[rdi],dx
  40cc9f:	jae    0x40cca1
  40cca1:	add    BYTE PTR [rcx+0x4c515300],al
  40cca7:	push   rax
  40cca8:	jb     0x40cd0f
  40ccaa:	jo     0x40cd0d
  40ccac:	jb     0x40cd13
  40ccae:	add    BYTE PTR [rax],al
  40ccb0:	pushf  
  40ccb1:	add    BYTE PTR [rbx+0x51],dl
  40ccb4:	rex.WR push rbx
  40ccb6:	gs je  0x40ccfe
  40ccb9:	outs   dx,BYTE PTR ds:[rsi]
  40ccba:	jbe    0x40ccfd
  40ccbc:	je     0x40cd32
  40ccbe:	jb     0x40ccc0
  40ccc0:	lock add DWORD PTR [rbp+0x65],ecx
  40ccc4:	jae    0x40cd39
  40ccc6:	(bad)  
  40ccc7:	rex.X outs dx,DWORD PTR gs:[esi]
  40cccb:	js     0x40cd24
  40cccd:	add    BYTE PTR [rbx+0x74656700],bl
  40ccd3:	push   0x6e74736f
  40ccd8:	(bad)  
  40ccd9:	ins    DWORD PTR es:[rdi],dx
  40ccda:	add    BYTE PTR gs:[rax],al
  40ccdd:	rol    BYTE PTR [rax],0x0
  40cce0:	add    al,al
  40cce2:	add    BYTE PTR [rax],al
  40cce4:	add    al,al
  40cce6:	add    BYTE PTR [rax],al
  40cce8:	add    al,al
  40ccea:	add    BYTE PTR [rax],al
  40ccec:	add    al,al
  40ccee:	add    BYTE PTR [rax],al
  40ccf0:	add    al,al
  40ccf2:	add    BYTE PTR [rax],al
  40ccf4:	add    al,al
  40ccf6:	add    BYTE PTR [rax],al
  40ccf8:	add    al,al
  40ccfa:	add    BYTE PTR [rax],al
  40ccfc:	add    al,al
  40ccfe:	add    BYTE PTR [rax],al
  40cd00:	add    al,al
  40cd02:	add    BYTE PTR [rax],al
  40cd04:	add    al,al
  40cd06:	add    BYTE PTR [rax],al
  40cd08:	add    al,al
  40cd0a:	add    BYTE PTR [rax],al
  40cd0c:	add    al,al
  40cd0e:	add    BYTE PTR [rax],al
  40cd10:	add    al,al
  40cd12:	add    BYTE PTR [rax],al
  40cd14:	add    al,al
  40cd16:	add    BYTE PTR [rax],al
  40cd18:	add    al,al
  40cd1a:	add    BYTE PTR [rax],al
  40cd1c:	add    al,al
  40cd1e:	add    BYTE PTR [rax],al
  40cd20:	add    al,al
  40cd22:	add    BYTE PTR [rax],al
  40cd24:	add    al,al
  40cd26:	add    BYTE PTR [rax],al
  40cd28:	add    al,al
  40cd2a:	add    BYTE PTR [rax],al
  40cd2c:	add    al,al
  40cd2e:	add    BYTE PTR [rax],al
  40cd30:	add    al,al
  40cd32:	add    BYTE PTR [rax],al
  40cd34:	add    al,al
  40cd36:	add    BYTE PTR [rax],al
  40cd38:	add    al,al
  40cd3a:	add    BYTE PTR [rax],al
  40cd3c:	rex.WXB
  40cd3d:	rex.RB push r10
  40cd3f:	rex.WRX
  40cd40:	rex.RB
  40cd41:	xor    r14,QWORD PTR [rdx]
  40cd44:	cs fs ins BYTE PTR es:[rdi],dx
  40cd47:	ins    BYTE PTR es:[rdi],dx
  40cd48:	add    BYTE PTR [rax],al
  40cd4a:	add    BYTE PTR [rax],al
  40cd4c:	adc    al,0xc0
  40cd4e:	add    BYTE PTR [rax],al
  40cd50:	adc    al,0xc0
  40cd52:	add    BYTE PTR [rax],al
  40cd54:	adc    al,0xc0
  40cd56:	add    BYTE PTR [rax],al
  40cd58:	adc    al,0xc0
  40cd5a:	add    BYTE PTR [rax],al
  40cd5c:	adc    al,0xc0
  40cd5e:	add    BYTE PTR [rax],al
  40cd60:	adc    al,0xc0
  40cd62:	add    BYTE PTR [rax],al
  40cd64:	adc    al,0xc0
  40cd66:	add    BYTE PTR [rax],al
  40cd68:	adc    al,0xc0
  40cd6a:	add    BYTE PTR [rax],al
  40cd6c:	adc    al,0xc0
  40cd6e:	add    BYTE PTR [rax],al
  40cd70:	adc    al,0xc0
  40cd72:	add    BYTE PTR [rax],al
  40cd74:	adc    al,0xc0
  40cd76:	add    BYTE PTR [rax],al
  40cd78:	adc    al,0xc0
  40cd7a:	add    BYTE PTR [rax],al
  40cd7c:	adc    al,0xc0
  40cd7e:	add    BYTE PTR [rax],al
  40cd80:	adc    al,0xc0
  40cd82:	add    BYTE PTR [rax],al
  40cd84:	adc    al,0xc0
  40cd86:	add    BYTE PTR [rax],al
  40cd88:	adc    al,0xc0
  40cd8a:	add    BYTE PTR [rax],al
  40cd8c:	adc    al,0xc0
  40cd8e:	add    BYTE PTR [rax],al
  40cd90:	adc    al,0xc0
  40cd92:	add    BYTE PTR [rax],al
  40cd94:	adc    al,0xc0
  40cd96:	add    BYTE PTR [rax],al
  40cd98:	adc    al,0xc0
  40cd9a:	add    BYTE PTR [rax],al
  40cd9c:	adc    al,0xc0
  40cd9e:	add    BYTE PTR [rax],al
  40cda0:	adc    al,0xc0
  40cda2:	add    BYTE PTR [rax],al
  40cda4:	adc    al,0xc0
  40cda6:	add    BYTE PTR [rax],al
  40cda8:	adc    al,0xc0
  40cdaa:	add    BYTE PTR [rax],al
  40cdac:	adc    al,0xc0
  40cdae:	add    BYTE PTR [rax],al
  40cdb0:	adc    al,0xc0
  40cdb2:	add    BYTE PTR [rax],al
  40cdb4:	adc    al,0xc0
  40cdb6:	add    BYTE PTR [rax],al
  40cdb8:	adc    al,0xc0
  40cdba:	add    BYTE PTR [rax],al
  40cdbc:	adc    al,0xc0
  40cdbe:	add    BYTE PTR [rax],al
  40cdc0:	adc    al,0xc0
  40cdc2:	add    BYTE PTR [rax],al
  40cdc4:	adc    al,0xc0
  40cdc6:	add    BYTE PTR [rax],al
  40cdc8:	adc    al,0xc0
  40cdca:	add    BYTE PTR [rax],al
  40cdcc:	adc    al,0xc0
  40cdce:	add    BYTE PTR [rax],al
  40cdd0:	adc    al,0xc0
  40cdd2:	add    BYTE PTR [rax],al
  40cdd4:	adc    al,0xc0
  40cdd6:	add    BYTE PTR [rax],al
  40cdd8:	adc    al,0xc0
  40cdda:	add    BYTE PTR [rax],al
  40cddc:	adc    al,0xc0
  40cdde:	add    BYTE PTR [rax],al
  40cde0:	adc    al,0xc0
  40cde2:	add    BYTE PTR [rax],al
  40cde4:	adc    al,0xc0
  40cde6:	add    BYTE PTR [rax],al
  40cde8:	adc    al,0xc0
  40cdea:	add    BYTE PTR [rax],al
  40cdec:	adc    al,0xc0
  40cdee:	add    BYTE PTR [rax],al
  40cdf0:	adc    al,0xc0
  40cdf2:	add    BYTE PTR [rax],al
  40cdf4:	adc    al,0xc0
  40cdf6:	add    BYTE PTR [rax],al
  40cdf8:	adc    al,0xc0
  40cdfa:	add    BYTE PTR [rax],al
  40cdfc:	adc    al,0xc0
  40cdfe:	add    BYTE PTR [rax],al
  40ce00:	adc    al,0xc0
  40ce02:	add    BYTE PTR [rax],al
  40ce04:	adc    al,0xc0
  40ce06:	add    BYTE PTR [rax],al
  40ce08:	adc    al,0xc0
  40ce0a:	add    BYTE PTR [rax],al
  40ce0c:	adc    al,0xc0
  40ce0e:	add    BYTE PTR [rax],al
  40ce10:	adc    al,0xc0
  40ce12:	add    BYTE PTR [rax],al
  40ce14:	adc    al,0xc0
  40ce16:	add    BYTE PTR [rax],al
  40ce18:	adc    al,0xc0
  40ce1a:	add    BYTE PTR [rax],al
  40ce1c:	adc    al,0xc0
  40ce1e:	add    BYTE PTR [rax],al
  40ce20:	adc    al,0xc0
  40ce22:	add    BYTE PTR [rax],al
  40ce24:	adc    al,0xc0
  40ce26:	add    BYTE PTR [rax],al
  40ce28:	adc    al,0xc0
  40ce2a:	add    BYTE PTR [rax],al
  40ce2c:	adc    al,0xc0
  40ce2e:	add    BYTE PTR [rax],al
  40ce30:	adc    al,0xc0
  40ce32:	add    BYTE PTR [rax],al
  40ce34:	adc    al,0xc0
  40ce36:	add    BYTE PTR [rax],al
  40ce38:	adc    al,0xc0
  40ce3a:	add    BYTE PTR [rax],al
  40ce3c:	ins    DWORD PTR es:[rdi],dx
  40ce3d:	jae    0x40ceb5
  40ce3f:	movsxd esi,DWORD PTR [rdx+0x74]
  40ce42:	cs fs ins BYTE PTR es:[rdi],dx
  40ce45:	ins    BYTE PTR es:[rdi],dx
  40ce46:	add    BYTE PTR [rax],al
  40ce48:	sub    al,al
  40ce4a:	add    BYTE PTR [rax],al
  40ce4c:	sub    al,al
  40ce4e:	add    BYTE PTR [rax],al
  40ce50:	sub    al,al
  40ce52:	add    BYTE PTR [rax],al
  40ce54:	sub    al,al
  40ce56:	add    BYTE PTR [rax],al
  40ce58:	sub    al,al
  40ce5a:	add    BYTE PTR [rax],al
  40ce5c:	sub    al,al
  40ce5e:	add    BYTE PTR [rax],al
  40ce60:	sub    al,al
  40ce62:	add    BYTE PTR [rax],al
  40ce64:	sub    al,al
  40ce66:	add    BYTE PTR [rax],al
  40ce68:	sub    al,al
  40ce6a:	add    BYTE PTR [rax],al
  40ce6c:	sub    al,al
  40ce6e:	add    BYTE PTR [rax],al
  40ce70:	sub    al,al
  40ce72:	add    BYTE PTR [rax],al
  40ce74:	sub    al,al
  40ce76:	add    BYTE PTR [rax],al
  40ce78:	sub    al,al
  40ce7a:	add    BYTE PTR [rax],al
  40ce7c:	sub    al,al
  40ce7e:	add    BYTE PTR [rax],al
  40ce80:	sub    al,al
  40ce82:	add    BYTE PTR [rax],al
  40ce84:	sub    al,al
  40ce86:	add    BYTE PTR [rax],al
  40ce88:	rex.WRXB
  40ce89:	rex.R
  40ce8a:	rex.X
  40ce8b:	rex.XB xor esi,DWORD PTR [r10]
  40ce8e:	cs fs ins BYTE PTR es:[rdi],dx
  40ce91:	ins    BYTE PTR es:[rdi],dx
  40ce92:	add    BYTE PTR [rax],al
  40ce94:	cmp    al,0xc0
  40ce96:	add    BYTE PTR [rax],al
  40ce98:	push   rbp
  40ce99:	push   rbx
  40ce9a:	rex.RB push r10
  40ce9c:	xor    esi,DWORD PTR [rdx]
  40ce9e:	cs fs ins BYTE PTR es:[rdi],dx
  40cea1:	ins    BYTE PTR es:[rdi],dx
  40cea2:	add    BYTE PTR [rax],al
  40cea4:	push   rax
  40cea5:	rol    BYTE PTR [rax],0x0
  40cea8:	push   rdi
  40cea9:	push   rbx
  40ceaa:	xor    bl,BYTE PTR [rdi+0x33]
  40cead:	xor    ch,BYTE PTR [rsi]
  40ceaf:	fs ins BYTE PTR es:[rdi],dx
  40ceb1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040d000 <.CRT>:
	...
  40d008:	(bad)  
  40d009:	adc    DWORD PTR [rax+0x0],eax
	...
  40d020:	adc    BYTE PTR [rax],dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    al,dh
  40d029:	sub    BYTE PTR [rax+0x0],al
	...
  40d040:	and    BYTE PTR [rbx],ch
  40d042:	add    BYTE PTR [rax],al
  40d045:	add    BYTE PTR [rax],al
  40d047:	add    al,dh
  40d049:	sub    al,BYTE PTR [rax+0x0]
	...

Disassembly of section .tls:

000000000040e000 <.tls>:
	...
  40e020:	add    al,ah
  40e022:	add    BYTE PTR [rax],al
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax-0x20],ah
  40e02a:	add    BYTE PTR [rax],al
  40e02d:	add    BYTE PTR [rax],al
  40e02f:	add    ah,bl
  40e031:	mov    dh,0x40
  40e033:	add    BYTE PTR [rax],al
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    BYTE PTR [rax-0x30],al
  40e03a:	add    BYTE PTR [rax],al
	...
