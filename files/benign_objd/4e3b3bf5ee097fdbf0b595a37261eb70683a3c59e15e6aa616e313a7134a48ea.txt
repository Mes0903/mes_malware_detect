
4e3b3bf5ee097fdbf0b595a37261eb70683a3c59e15e6aa616e313a7134a48ea.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x2c615]        # 0x42d630
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x2c616]        # 0x42d640
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x2c619]        # 0x42d650
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2c5dc]        # 0x42d620
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2c41f]        # 0x42d470
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x2c5b1]        # 0x42d610
  40105f:	mov    DWORD PTR [rip+0x31fa3],edx        # 0x433008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x421f78
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x41b920
  401081:	mov    rdx,QWORD PTR [rip+0x2c488]        # 0x42d510
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2c46e]        # 0x42d500
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x2c4e4]        # 0x42d580
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2c40b]        # 0x42d4b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x41b500
  4010af:	mov    rax,QWORD PTR [rip+0x2c36a]        # 0x42d420
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x421f78
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1a6d9]        # 0x41b800
  401127:	call   0x41b7f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x2c445]        # 0x42d5b0
  40116b:	lea    r8,[rip+0x31ea6]        # 0x433018
  401172:	lea    rdx,[rip+0x31ea7]        # 0x433020
  401179:	lea    rcx,[rip+0x31ea8]        # 0x433028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x31e78],eax        # 0x433000
  401188:	lea    rax,[rip+0x31e71]        # 0x433000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x2c3d5]        # 0x42d570
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x421f90
  4011a3:	mov    DWORD PTR [rip+0x31e67],eax        # 0x433010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2c44a]        # 0x42d610
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2c2eb]        # 0x42d4e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x37d02]        # 0x438f04
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x2c2c7]        # 0x42d4f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x31dba],0x1        # 0x433004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2c1fc]        # 0x42d460
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x41bb10
  40127d:	lea    rcx,[rip+0x1ae2c]        # 0x41c0b0
  401284:	call   QWORD PTR [rip+0x37c72]        # 0x438efc
  40128a:	mov    rdx,QWORD PTR [rip+0x2c23f]        # 0x42d4d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x41bfc0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x421fc0
  4012a5:	call   0x41b900
  4012aa:	mov    rax,QWORD PTR [rip+0x2c1bf]        # 0x42d470
  4012b1:	mov    QWORD PTR [rip+0x35e00],rax        # 0x4370b8
  4012b8:	mov    rax,QWORD PTR [rip+0x2c1e1]        # 0x42d4a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x35d99],rax        # 0x4370b0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x21cca],eax        # 0x423000
  401336:	mov    r12d,DWORD PTR [rip+0x31ceb]        # 0x433028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x421e18
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x31cc2]        # 0x433020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x421d98
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x421e18
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x421e08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x31c6a],rbp        # 0x433020
  4013b6:	call   0x41b4d0
  4013bb:	mov    rax,QWORD PTR [rip+0x2c0be]        # 0x42d480
  4013c2:	mov    rdx,QWORD PTR [rip+0x31c4f]        # 0x433018
  4013c9:	mov    ecx,DWORD PTR [rip+0x31c59]        # 0x433028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x31c3c]        # 0x433018
  4013dc:	mov    rdx,QWORD PTR [rip+0x31c3d]        # 0x433020
  4013e3:	call   0x422210
  4013e8:	mov    ecx,DWORD PTR [rip+0x31c1a]        # 0x433008
  4013ee:	mov    DWORD PTR [rip+0x31c18],eax        # 0x43300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x31c02]        # 0x433004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x421f60
  40140b:	mov    eax,DWORD PTR [rip+0x31bfb]        # 0x43300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2c0b9]        # 0x42d4f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x421f68
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2c0dd]        # 0x42d540
  401463:	mov    rcx,QWORD PTR [rip+0x2c0c6]        # 0x42d530
  40146a:	call   0x421f08
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x379f3]        # 0x438e8c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2c0b9]        # 0x42d560
  4014a7:	mov    rcx,QWORD PTR [rip+0x2c0a2]        # 0x42d550
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x421f08
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x421e98
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2c135]        # 0x42d610
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x41b510
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2c105]        # 0x42d610
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x41b510
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    QWORD PTR [rsp+0x50],r8
  401539:	lea    r8,[rsp+0x50]
  40153e:	mov    QWORD PTR [rsp+0x58],r9
  401543:	mov    QWORD PTR [rsp+0x28],r8
  401548:	call   0x41d2d0
  40154d:	add    rsp,0x38
  401551:	ret    
  401552:	nop    DWORD PTR [rax+0x0]
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	push   rsi
  401561:	push   rbx
  401562:	sub    rsp,0x28
  401566:	mov    ebx,ecx
  401568:	mov    rsi,rdx
  40156b:	call   QWORD PTR [rip+0x37a0b]        # 0x438f7c
  401571:	lea    rdx,[rip+0x22a88]        # 0x424000
  401578:	lea    rcx,[rax+0x60]
  40157c:	mov    r9,rsi
  40157f:	mov    r8d,ebx
  401582:	add    rsp,0x28
  401586:	pop    rbx
  401587:	pop    rsi
  401588:	jmp    0x401530
  40158a:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x258
  401597:	imul   edx,edx,0x3e8
  40159d:	movsxd rax,ecx
  4015a0:	mov    DWORD PTR [rsp+0x40],0x1
  4015a8:	mov    QWORD PTR [rsp+0x48],rax
  4015ad:	mov    QWORD PTR [rsp+0x30],0x0
  4015b6:	mov    eax,0x1
  4015bb:	cmp    edx,0xf423f
  4015c1:	mov    DWORD PTR [rsp+0x38],edx
  4015c5:	jle    0x4015ee
  4015c7:	nop    WORD PTR [rax+rax*1+0x0]
  4015d0:	sub    edx,0xf4240
  4015d6:	mov    r8,rax
  4015d9:	add    rax,0x1
  4015dd:	cmp    edx,0xf423f
  4015e3:	jg     0x4015d0
  4015e5:	mov    DWORD PTR [rsp+0x38],edx
  4015e9:	mov    QWORD PTR [rsp+0x30],r8
  4015ee:	lea    rax,[rsp+0x30]
  4015f3:	lea    rdx,[rsp+0x40]
  4015f8:	add    ecx,0x1
  4015fb:	xor    r9d,r9d
  4015fe:	xor    r8d,r8d
  401601:	mov    QWORD PTR [rsp+0x20],rax
  401606:	call   0x4185d0
  40160b:	add    rsp,0x258
  401612:	ret    
  401613:	nop    DWORD PTR [rax]
  401616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401620:	xor    r9d,r9d
  401623:	jmp    0x417e10
  401628:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	xor    r9d,r9d
  401633:	jmp    0x4192c0
  401638:	nop    DWORD PTR [rax+rax*1+0x0]
  401640:	sub    rsp,0x38
  401644:	mov    QWORD PTR [rsp+0x48],rdx
  401649:	lea    rdx,[rsp+0x48]
  40164e:	mov    QWORD PTR [rsp+0x50],r8
  401653:	mov    QWORD PTR [rsp+0x58],r9
  401658:	mov    QWORD PTR [rsp+0x28],rdx
  40165d:	call   0x41d300
  401662:	add    rsp,0x38
  401666:	ret    
  401667:	nop
  401668:	nop
  401669:	nop
  40166a:	nop
  40166b:	nop
  40166c:	nop
  40166d:	nop
  40166e:	nop
  40166f:	nop
  401670:	sub    rsp,0x38
  401674:	mov    QWORD PTR [rsp+0x50],r8
  401679:	lea    r8,[rsp+0x50]
  40167e:	mov    QWORD PTR [rsp+0x58],r9
  401683:	mov    QWORD PTR [rsp+0x28],r8
  401688:	call   0x41d2d0
  40168d:	add    rsp,0x38
  401691:	ret    
  401692:	nop    DWORD PTR [rax+0x0]
  401696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016a0:	sub    rsp,0x38
  4016a4:	mov    QWORD PTR [rsp+0x48],rdx
  4016a9:	lea    rdx,[rsp+0x48]
  4016ae:	mov    QWORD PTR [rsp+0x50],r8
  4016b3:	mov    QWORD PTR [rsp+0x58],r9
  4016b8:	mov    QWORD PTR [rsp+0x28],rdx
  4016bd:	call   0x41d300
  4016c2:	add    rsp,0x38
  4016c6:	ret    
  4016c7:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	push   rsi
  4016d1:	push   rbx
  4016d2:	sub    rsp,0x28
  4016d6:	mov    rsi,rcx
  4016d9:	jmp    0x4016ef
  4016db:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	mov    ecx,eax
  4016e2:	call   0x407ae0
  4016e7:	test   eax,eax
  4016e9:	jne    0x401784
  4016ef:	mov    rcx,rsi
  4016f2:	call   0x407ab8
  4016f7:	test   eax,eax
  4016f9:	mov    ebx,eax
  4016fb:	js     0x4016e0
  4016fd:	lea    r8,[rip+0x32fec]        # 0x4346f0
  401704:	xor    edx,edx
  401706:	mov    rcx,rsi
  401709:	mov    DWORD PTR [rip+0x32fd1],eax        # 0x4346e0
  40170f:	call   0x407930
  401714:	mov    eax,DWORD PTR [rip+0x32fca]        # 0x4346e4
  40171a:	test   eax,eax
  40171c:	jne    0x4017b0
  401722:	mov    rcx,QWORD PTR [rip+0x32fc7]        # 0x4346f0
  401729:	call   0x4145c0
  40172e:	test   rax,rax
  401731:	mov    QWORD PTR [rip+0x32fe8],rax        # 0x434720
  401738:	mov    DWORD PTR [rip+0x32fa2],0x1        # 0x4346e4
  401742:	je     0x4017fb
  401748:	lea    r8,[rip+0x32fa1]        # 0x4346f0
  40174f:	mov    rcx,rsi
  401752:	mov    rdx,rax
  401755:	call   0x407930
  40175a:	lea    r8,[rip+0x32f87]        # 0x4346e8
  401761:	lea    rdx,[rip+0x32f98]        # 0x434700
  401768:	mov    rcx,rsi
  40176b:	mov    QWORD PTR [rip+0x32f72],0x20        # 0x4346e8
  401776:	call   0x407920
  40177b:	xor    eax,eax
  40177d:	add    rsp,0x28
  401781:	pop    rbx
  401782:	pop    rsi
  401783:	ret    
  401784:	cmp    ebx,0xfffffff4
  401787:	mov    DWORD PTR [rip+0x32f53],ebx        # 0x4346e0
  40178d:	jne    0x40179b
  40178f:	mov    rax,QWORD PTR [rip+0x2bf1a]        # 0x42d6b0
  401796:	cmp    DWORD PTR [rax],0x1
  401799:	ja     0x4017cb
  40179b:	mov    eax,0x1
  4017a0:	add    rsp,0x28
  4017a4:	pop    rbx
  4017a5:	pop    rsi
  4017a6:	ret    
  4017a7:	nop    WORD PTR [rax+rax*1+0x0]
  4017b0:	mov    rcx,QWORD PTR [rip+0x32f69]        # 0x434720
  4017b7:	call   0x421e50
  4017bc:	mov    DWORD PTR [rip+0x32f1e],0x0        # 0x4346e4
  4017c6:	jmp    0x401722
  4017cb:	mov    rcx,rsi
  4017ce:	call   0x407c40
  4017d3:	lea    rcx,[rip+0x23b26]        # 0x425300
  4017da:	mov    ebx,eax
  4017dc:	call   0x4016a0
  4017e1:	mov    ecx,ebx
  4017e3:	call   0x407c38
  4017e8:	lea    rcx,[rip+0x23b13]        # 0x425302
  4017ef:	mov    r8,rax
  4017f2:	mov    edx,ebx
  4017f4:	call   0x4016a0
  4017f9:	jmp    0x40179b
  4017fb:	call   QWORD PTR [rip+0x3777b]        # 0x438f7c
  401801:	lea    rdx,[rip+0x23b17]        # 0x42531f
  401808:	lea    rcx,[rax+0x60]
  40180c:	call   0x401670
  401811:	mov    ecx,0x1
  401816:	call   0x421e98
  40181b:	nop
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	push   r13
  401822:	push   r12
  401824:	push   rbp
  401825:	push   rdi
  401826:	push   rsi
  401827:	push   rbx
  401828:	sub    rsp,0x138
  40182f:	mov    rsi,rcx
  401832:	mov    r12d,edx
  401835:	lea    rcx,[rip+0x23af3]        # 0x42532f
  40183c:	lea    rdx,[rip+0x23aea]        # 0x42532d
  401843:	call   0x421e78
  401848:	test   rax,rax
  40184b:	mov    rbp,rax
  40184e:	je     0x4018d3
  401854:	lea    rcx,[rip+0x23aa5]        # 0x425300
  40185b:	call   0x4016a0
  401860:	test   r12d,r12d
  401863:	jle    0x4018e3
  401865:	lea    rdx,[rip+0x23ad4]        # 0x425340
  40186c:	lea    r13,[rsp+0x28]
  401871:	lea    rdi,[rsp+0x30]
  401876:	mov    rcx,rbp
  401879:	xor    ebx,ebx
  40187b:	call   0x401670
  401880:	mov    r8,r13
  401883:	mov    rdx,rdi
  401886:	mov    rcx,rsi
  401889:	mov    QWORD PTR [rsp+0x28],0x100
  401892:	call   0x407860
  401897:	test   eax,eax
  401899:	js     0x4018bf
  40189b:	lea    rdx,[rip+0x23aff]        # 0x4253a1
  4018a2:	mov    r8d,ebx
  4018a5:	mov    rcx,rbp
  4018a8:	call   0x401670
  4018ad:	lea    rdx,[rip+0x23af7]        # 0x4253ab
  4018b4:	mov    r8,rdi
  4018b7:	mov    rcx,rbp
  4018ba:	call   0x401670
  4018bf:	add    ebx,0x1
  4018c2:	add    rsi,0x10
  4018c6:	cmp    ebx,r12d
  4018c9:	jne    0x401880
  4018cb:	mov    rcx,rbp
  4018ce:	call   0x421e90
  4018d3:	add    rsp,0x138
  4018da:	pop    rbx
  4018db:	pop    rsi
  4018dc:	pop    rdi
  4018dd:	pop    rbp
  4018de:	pop    r12
  4018e0:	pop    r13
  4018e2:	ret    
  4018e3:	lea    rdx,[rip+0x23a7e]        # 0x425368
  4018ea:	mov    rcx,rbp
  4018ed:	call   0x401670
  4018f2:	jmp    0x4018cb
  4018f4:	xchg   ax,ax
  4018f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401900:	sub    rsp,0x28
  401904:	mov    rax,QWORD PTR [rip+0x2bda5]        # 0x42d6b0
  40190b:	mov    eax,DWORD PTR [rax]
  40190d:	test   eax,eax
  40190f:	je     0x40191c
  401911:	mov    rcx,rdx
  401914:	mov    edx,r8d
  401917:	call   0x401820
  40191c:	mov    eax,0xffffffff
  401921:	add    rsp,0x28
  401925:	ret    
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	sub    rsp,0x38
  401934:	lea    rcx,[rip+0x31745]        # 0x433080
  40193b:	mov    QWORD PTR [rsp+0x50],r8
  401940:	lea    r8,[rsp+0x50]
  401945:	mov    QWORD PTR [rsp+0x58],r9
  40194a:	mov    QWORD PTR [rsp+0x28],r8
  40194f:	call   0x41d3a0
  401954:	add    rsp,0x38
  401958:	ret    
  401959:	nop    DWORD PTR [rax+0x0]
  401960:	push   rdi
  401961:	push   rsi
  401962:	push   rbx
  401963:	sub    rsp,0x50
  401967:	movabs rax,0x5448202f20544547
  401971:	lea    r9,[rip+0x216c8]        # 0x423040
  401978:	lea    r8,[rip+0x21781]        # 0x423100
  40197f:	mov    rbx,rcx
  401982:	mov    QWORD PTR [rsp+0x30],rax
  401987:	lea    rdx,[rip+0x23a22]        # 0x4253b0
  40198e:	movabs rax,0xa0d302e312f5054
  401998:	lea    rcx,[rip+0x316e1]        # 0x433080
  40199f:	mov    BYTE PTR [rsp+0x42],0x0
  4019a4:	mov    QWORD PTR [rsp+0x38],rax
  4019a9:	mov    eax,0xa0d
  4019ae:	mov    BYTE PTR [rip+0x32d0a],0x0        # 0x4346bf
  4019b5:	mov    WORD PTR [rsp+0x40],ax
  4019ba:	call   0x401930
  4019bf:	lea    r8,[rsp+0x28]
  4019c4:	lea    rdx,[rip+0x316b5]        # 0x433080
  4019cb:	mov    rcx,rbx
  4019ce:	call   0x4079d0
  4019d3:	test   eax,eax
  4019d5:	mov    esi,eax
  4019d7:	js     0x401ac1
  4019dd:	mov    rax,QWORD PTR [rip+0x2bcdc]        # 0x42d6c0
  4019e4:	mov    edx,0x1
  4019e9:	mov    rcx,rbx
  4019ec:	mov    r8,QWORD PTR [rax]
  4019ef:	call   0x407b70
  4019f4:	mov    rcx,rbx
  4019f7:	call   0x4016d0
  4019fc:	test   eax,eax
  4019fe:	je     0x401a10
  401a00:	mov    eax,0x1
  401a05:	add    rsp,0x50
  401a09:	pop    rbx
  401a0a:	pop    rsi
  401a0b:	pop    rdi
  401a0c:	ret    
  401a0d:	nop    DWORD PTR [rax]
  401a10:	lea    rdx,[rsp+0x30]
  401a15:	mov    r8d,0x12
  401a1b:	mov    rcx,rbx
  401a1e:	call   0x407988
  401a23:	lea    rdx,[rip+0x31896]        # 0x4332c0
  401a2a:	mov    r8d,0x13ff
  401a30:	mov    rcx,rbx
  401a33:	call   0x407990
  401a38:	test   eax,eax
  401a3a:	js     0x401a00
  401a3c:	lea    rax,[rip+0x23a59]        # 0x42549c
  401a43:	lea    rdx,[rip+0x23a5a]        # 0x4254a4
  401a4a:	lea    rcx,[rip+0x3186f]        # 0x4332c0
  401a51:	mov    QWORD PTR [rip+0x216e0],rax        # 0x423138
  401a58:	call   0x421d70
  401a5d:	test   rax,rax
  401a60:	je     0x401aba
  401a62:	movzx  edx,BYTE PTR [rax+0x7]
  401a66:	lea    rcx,[rax+0x7]
  401a6a:	cmp    dl,0x20
  401a6d:	je     0x401ab0
  401a6f:	mov    QWORD PTR [rip+0x216c2],rcx        # 0x423138
  401a76:	lea    r9,[rcx+0x81]
  401a7d:	jmp    0x401a91
  401a7f:	nop
  401a80:	cmp    dl,0xa
  401a83:	je     0x401aa2
  401a85:	add    rcx,0x1
  401a89:	cmp    rcx,r9
  401a8c:	je     0x401aa2
  401a8e:	movzx  edx,BYTE PTR [rcx]
  401a91:	cmp    dl,0xd
  401a94:	setne  r8b
  401a98:	test   dl,dl
  401a9a:	setne  al
  401a9d:	test   r8b,al
  401aa0:	jne    0x401a80
  401aa2:	xor    eax,eax
  401aa4:	mov    BYTE PTR [rcx],0x0
  401aa7:	add    rsp,0x50
  401aab:	pop    rbx
  401aac:	pop    rsi
  401aad:	pop    rdi
  401aae:	ret    
  401aaf:	nop
  401ab0:	lea    rcx,[rax+0x8]
  401ab4:	movzx  edx,BYTE PTR [rax+0x8]
  401ab8:	jmp    0x401a6f
  401aba:	xor    eax,eax
  401abc:	jmp    0x401a05
  401ac1:	mov    rbx,QWORD PTR [rip+0x374b4]        # 0x438f7c
  401ac8:	call   rbx
  401aca:	lea    r8,[rip+0x315af]        # 0x433080
  401ad1:	lea    rdx,[rip+0x2399d]        # 0x425475
  401ad8:	lea    rcx,[rax+0x60]
  401adc:	call   0x401670
  401ae1:	mov    ecx,esi
  401ae3:	call   0x4078c0
  401ae8:	mov    rsi,QWORD PTR [rsp+0x28]
  401aed:	mov    rdi,rax
  401af0:	call   rbx
  401af2:	lea    rdx,[rip+0x23992]        # 0x42548b
  401af9:	lea    rcx,[rax+0x60]
  401afd:	mov    r9,rdi
  401b00:	mov    r8,rsi
  401b03:	call   0x401670
  401b08:	mov    ecx,0x1
  401b0d:	call   0x421e98
  401b12:	nop
  401b13:	nop    DWORD PTR [rax]
  401b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b20:	push   rdi
  401b21:	push   rsi
  401b22:	push   rbx
  401b23:	sub    rsp,0x30
  401b27:	lea    r9,[rip+0x21512]        # 0x423040
  401b2e:	lea    r8,[rip+0x215cb]        # 0x423100
  401b35:	lea    rdx,[rip+0x23974]        # 0x4254b0
  401b3c:	mov    rbx,rcx
  401b3f:	lea    rcx,[rip+0x3153a]        # 0x433080
  401b46:	call   0x401930
  401b4b:	lea    r8,[rsp+0x28]
  401b50:	lea    rdx,[rip+0x31529]        # 0x433080
  401b57:	mov    rcx,rbx
  401b5a:	call   0x4079d0
  401b5f:	test   eax,eax
  401b61:	mov    esi,eax
  401b63:	js     0x401b9f
  401b65:	mov    rax,QWORD PTR [rip+0x2bb54]        # 0x42d6c0
  401b6c:	mov    edx,0x1
  401b71:	mov    rcx,rbx
  401b74:	mov    r8,QWORD PTR [rax]
  401b77:	call   0x407b70
  401b7c:	mov    rcx,rbx
  401b7f:	call   0x4016d0
  401b84:	lea    rdx,[rip+0x32b45]        # 0x4346d0
  401b8b:	mov    esi,eax
  401b8d:	mov    rcx,rbx
  401b90:	call   0x407b48
  401b95:	mov    eax,esi
  401b97:	add    rsp,0x30
  401b9b:	pop    rbx
  401b9c:	pop    rsi
  401b9d:	pop    rdi
  401b9e:	ret    
  401b9f:	mov    rbx,QWORD PTR [rip+0x373d6]        # 0x438f7c
  401ba6:	call   rbx
  401ba8:	lea    r8,[rip+0x314d1]        # 0x433080
  401baf:	lea    rdx,[rip+0x238bf]        # 0x425475
  401bb6:	lea    rcx,[rax+0x60]
  401bba:	call   0x401670
  401bbf:	mov    ecx,esi
  401bc1:	call   0x4078c0
  401bc6:	mov    rsi,QWORD PTR [rsp+0x28]
  401bcb:	mov    rdi,rax
  401bce:	call   rbx
  401bd0:	lea    rdx,[rip+0x238b4]        # 0x42548b
  401bd7:	lea    rcx,[rax+0x60]
  401bdb:	mov    r9,rdi
  401bde:	mov    r8,rsi
  401be1:	call   0x401670
  401be6:	mov    ecx,0x1
  401beb:	call   0x421e98
  401bf0:	nop
  401bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	push   rdi
  401c01:	push   rsi
  401c02:	push   rbx
  401c03:	sub    rsp,0x30
  401c07:	mov    edx,DWORD PTR [rip+0x21527]        # 0x423134
  401c0d:	mov    eax,0x3
  401c12:	test   edx,edx
  401c14:	jne    0x401c20
  401c16:	add    rsp,0x30
  401c1a:	pop    rbx
  401c1b:	pop    rsi
  401c1c:	pop    rdi
  401c1d:	ret    
  401c1e:	xchg   ax,ax
  401c20:	mov    rbx,rcx
  401c23:	lea    r9,[rip+0x21416]        # 0x423040
  401c2a:	lea    r8,[rip+0x2148f]        # 0x4230c0
  401c31:	lea    rdx,[rip+0x23910]        # 0x425548
  401c38:	lea    rcx,[rip+0x31441]        # 0x433080
  401c3f:	call   0x401930
  401c44:	lea    r8,[rsp+0x28]
  401c49:	lea    rdx,[rip+0x31430]        # 0x433080
  401c50:	mov    rcx,rbx
  401c53:	call   0x4079d0
  401c58:	test   eax,eax
  401c5a:	mov    esi,eax
  401c5c:	js     0x401ca0
  401c5e:	mov    rax,QWORD PTR [rip+0x2ba5b]        # 0x42d6c0
  401c65:	mov    edx,0x1
  401c6a:	mov    rcx,rbx
  401c6d:	mov    r8,QWORD PTR [rax]
  401c70:	call   0x407b70
  401c75:	mov    rcx,rbx
  401c78:	call   0x4016d0
  401c7d:	mov    esi,eax
  401c7f:	mov    eax,0x1
  401c84:	test   esi,esi
  401c86:	js     0x401c16
  401c88:	mov    rcx,rbx
  401c8b:	call   0x407b00
  401c90:	mov    DWORD PTR [rip+0x32a2e],eax        # 0x4346c4
  401c96:	mov    eax,esi
  401c98:	add    rsp,0x30
  401c9c:	pop    rbx
  401c9d:	pop    rsi
  401c9e:	pop    rdi
  401c9f:	ret    
  401ca0:	mov    rbx,QWORD PTR [rip+0x372d5]        # 0x438f7c
  401ca7:	call   rbx
  401ca9:	lea    r8,[rip+0x313d0]        # 0x433080
  401cb0:	lea    rdx,[rip+0x237be]        # 0x425475
  401cb7:	lea    rcx,[rax+0x60]
  401cbb:	call   0x401670
  401cc0:	mov    ecx,esi
  401cc2:	call   0x4078c0
  401cc7:	mov    rsi,QWORD PTR [rsp+0x28]
  401ccc:	mov    rdi,rax
  401ccf:	call   rbx
  401cd1:	lea    rdx,[rip+0x237b3]        # 0x42548b
  401cd8:	lea    rcx,[rax+0x60]
  401cdc:	mov    r9,rdi
  401cdf:	mov    r8,rsi
  401ce2:	call   0x401670
  401ce7:	mov    ecx,0x1
  401cec:	call   0x421e98
  401cf1:	nop
  401cf2:	nop    DWORD PTR [rax+0x0]
  401cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d00:	push   rdi
  401d01:	push   rsi
  401d02:	push   rbx
  401d03:	sub    rsp,0x30
  401d07:	mov    r11d,DWORD PTR [rip+0x31572]        # 0x433280
  401d0e:	test   r11d,r11d
  401d11:	je     0x401da0
  401d17:	mov    r10d,DWORD PTR [rip+0x31566]        # 0x433284
  401d1e:	test   r10d,r10d
  401d21:	je     0x401dc4
  401d27:	lea    r8,[rip+0x238c2]        # 0x4255f0
  401d2e:	mov    rbx,rcx
  401d31:	lea    r9,[rip+0x21308]        # 0x423040
  401d38:	lea    rdx,[rip+0x23941]        # 0x425680
  401d3f:	lea    rcx,[rip+0x3133a]        # 0x433080
  401d46:	call   0x401930
  401d4b:	lea    r8,[rsp+0x28]
  401d50:	lea    rdx,[rip+0x31329]        # 0x433080
  401d57:	mov    rcx,rbx
  401d5a:	call   0x4079d0
  401d5f:	test   eax,eax
  401d61:	mov    esi,eax
  401d63:	js     0x401dfc
  401d69:	mov    rax,QWORD PTR [rip+0x2b950]        # 0x42d6c0
  401d70:	mov    edx,0x1
  401d75:	mov    rcx,rbx
  401d78:	mov    r8,QWORD PTR [rax]
  401d7b:	call   0x407b70
  401d80:	mov    rcx,rbx
  401d83:	call   0x4016d0
  401d88:	test   eax,eax
  401d8a:	js     0x401dce
  401d8c:	mov    eax,DWORD PTR [rip+0x3294e]        # 0x4346e0
  401d92:	not    eax
  401d94:	shr    eax,0x1f
  401d97:	add    rsp,0x30
  401d9b:	pop    rbx
  401d9c:	pop    rsi
  401d9d:	pop    rdi
  401d9e:	ret    
  401d9f:	nop
  401da0:	mov    r9d,DWORD PTR [rip+0x314dd]        # 0x433284
  401da7:	test   r9d,r9d
  401daa:	je     0x401dc4
  401dac:	mov    r8d,DWORD PTR [rip+0x314d9]        # 0x43328c
  401db3:	test   r8d,r8d
  401db6:	je     0x401dce
  401db8:	lea    r8,[rip+0x23861]        # 0x425620
  401dbf:	jmp    0x401d2e
  401dc4:	mov    edx,DWORD PTR [rip+0x314c2]        # 0x43328c
  401dca:	test   edx,edx
  401dcc:	jne    0x401de0
  401dce:	mov    eax,0x3
  401dd3:	add    rsp,0x30
  401dd7:	pop    rbx
  401dd8:	pop    rsi
  401dd9:	pop    rdi
  401dda:	ret    
  401ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  401de0:	mov    eax,DWORD PTR [rip+0x314a2]        # 0x433288
  401de6:	lea    r8,[rip+0x23863]        # 0x425650
  401ded:	test   eax,eax
  401def:	jne    0x401d2e
  401df5:	mov    eax,0x3
  401dfa:	jmp    0x401dd3
  401dfc:	mov    rbx,QWORD PTR [rip+0x37179]        # 0x438f7c
  401e03:	call   rbx
  401e05:	lea    r8,[rip+0x31274]        # 0x433080
  401e0c:	lea    rdx,[rip+0x23662]        # 0x425475
  401e13:	lea    rcx,[rax+0x60]
  401e17:	call   0x401670
  401e1c:	mov    ecx,esi
  401e1e:	call   0x4078c0
  401e23:	mov    rsi,QWORD PTR [rsp+0x28]
  401e28:	mov    rdi,rax
  401e2b:	call   rbx
  401e2d:	lea    rdx,[rip+0x23657]        # 0x42548b
  401e34:	lea    rcx,[rax+0x60]
  401e38:	mov    r9,rdi
  401e3b:	mov    r8,rsi
  401e3e:	call   0x401670
  401e43:	mov    ecx,0x1
  401e48:	call   0x421e98
  401e4d:	nop
  401e4e:	xchg   ax,ax
  401e50:	push   rdi
  401e51:	push   rsi
  401e52:	push   rbx
  401e53:	sub    rsp,0x30
  401e57:	mov    edx,DWORD PTR [rip+0x212d7]        # 0x423134
  401e5d:	mov    eax,0x3
  401e62:	test   edx,edx
  401e64:	jne    0x401e70
  401e66:	add    rsp,0x30
  401e6a:	pop    rbx
  401e6b:	pop    rsi
  401e6c:	pop    rdi
  401e6d:	ret    
  401e6e:	xchg   ax,ax
  401e70:	mov    rbx,rcx
  401e73:	lea    r9,[rip+0x21286]        # 0x423100
  401e7a:	lea    r8,[rip+0x211bf]        # 0x423040
  401e81:	lea    rdx,[rip+0x238b8]        # 0x425740
  401e88:	lea    rcx,[rip+0x311f1]        # 0x433080
  401e8f:	call   0x401930
  401e94:	lea    r8,[rsp+0x28]
  401e99:	lea    rdx,[rip+0x311e0]        # 0x433080
  401ea0:	mov    rcx,rbx
  401ea3:	call   0x4079d0
  401ea8:	test   eax,eax
  401eaa:	mov    esi,eax
  401eac:	js     0x401ed5
  401eae:	mov    rax,QWORD PTR [rip+0x2b80b]        # 0x42d6c0
  401eb5:	mov    edx,0x1
  401eba:	mov    rcx,rbx
  401ebd:	mov    r8,QWORD PTR [rax]
  401ec0:	call   0x407b70
  401ec5:	mov    rcx,rbx
  401ec8:	call   0x4016d0
  401ecd:	add    rsp,0x30
  401ed1:	pop    rbx
  401ed2:	pop    rsi
  401ed3:	pop    rdi
  401ed4:	ret    
  401ed5:	mov    rbx,QWORD PTR [rip+0x370a0]        # 0x438f7c
  401edc:	call   rbx
  401ede:	lea    r8,[rip+0x3119b]        # 0x433080
  401ee5:	lea    rdx,[rip+0x23589]        # 0x425475
  401eec:	lea    rcx,[rax+0x60]
  401ef0:	call   0x401670
  401ef5:	mov    ecx,esi
  401ef7:	call   0x4078c0
  401efc:	mov    rsi,QWORD PTR [rsp+0x28]
  401f01:	mov    rdi,rax
  401f04:	call   rbx
  401f06:	lea    rdx,[rip+0x2357e]        # 0x42548b
  401f0d:	lea    rcx,[rax+0x60]
  401f11:	mov    r9,rdi
  401f14:	mov    r8,rsi
  401f17:	call   0x401670
  401f1c:	mov    ecx,0x1
  401f21:	call   0x421e98
  401f26:	nop
  401f27:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	push   rdi
  401f31:	push   rsi
  401f32:	push   rbx
  401f33:	sub    rsp,0x30
  401f37:	mov    edx,DWORD PTR [rip+0x211f7]        # 0x423134
  401f3d:	mov    eax,0x3
  401f42:	test   edx,edx
  401f44:	jne    0x401f50
  401f46:	add    rsp,0x30
  401f4a:	pop    rbx
  401f4b:	pop    rsi
  401f4c:	pop    rdi
  401f4d:	ret    
  401f4e:	xchg   ax,ax
  401f50:	mov    rbx,rcx
  401f53:	lea    r9,[rip+0x210e6]        # 0x423040
  401f5a:	lea    r8,[rip+0x2119f]        # 0x423100
  401f61:	lea    rdx,[rip+0x23448]        # 0x4253b0
  401f68:	lea    rcx,[rip+0x31111]        # 0x433080
  401f6f:	lea    rsi,[rsp+0x20]
  401f74:	call   0x401930
  401f79:	lea    rdx,[rip+0x31100]        # 0x433080
  401f80:	mov    r8,rsi
  401f83:	mov    rcx,rbx
  401f86:	call   0x4079d0
  401f8b:	test   eax,eax
  401f8d:	mov    edi,eax
  401f8f:	js     0x401fea
  401f91:	xor    r9d,r9d
  401f94:	xor    r8d,r8d
  401f97:	xor    edx,edx
  401f99:	mov    rcx,rbx
  401f9c:	call   0x407a58
  401fa1:	mov    rax,QWORD PTR [rip+0x2b718]        # 0x42d6c0
  401fa8:	mov    edx,0x1
  401fad:	mov    rcx,rbx
  401fb0:	mov    r8,QWORD PTR [rax]
  401fb3:	call   0x407b70
  401fb8:	mov    rcx,rbx
  401fbb:	call   0x4016d0
  401fc0:	mov    edx,eax
  401fc2:	mov    eax,0x1
  401fc7:	test   edx,edx
  401fc9:	js     0x401f46
  401fcf:	mov    rdx,rsi
  401fd2:	mov    rcx,rbx
  401fd5:	call   0x407a50
  401fda:	test   eax,eax
  401fdc:	setne  al
  401fdf:	movzx  eax,al
  401fe2:	add    rsp,0x30
  401fe6:	pop    rbx
  401fe7:	pop    rsi
  401fe8:	pop    rdi
  401fe9:	ret    
  401fea:	mov    rbx,QWORD PTR [rip+0x36f8b]        # 0x438f7c
  401ff1:	call   rbx
  401ff3:	lea    r8,[rip+0x31086]        # 0x433080
  401ffa:	lea    rdx,[rip+0x23474]        # 0x425475
  402001:	lea    rcx,[rax+0x60]
  402005:	call   0x401670
  40200a:	mov    ecx,edi
  40200c:	call   0x4078c0
  402011:	mov    rsi,QWORD PTR [rsp+0x20]
  402016:	mov    rdi,rax
  402019:	call   rbx
  40201b:	lea    rdx,[rip+0x23469]        # 0x42548b
  402022:	lea    rcx,[rax+0x60]
  402026:	mov    r9,rdi
  402029:	mov    r8,rsi
  40202c:	call   0x401670
  402031:	mov    ecx,0x1
  402036:	call   0x421e98
  40203b:	nop
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	push   rdi
  402041:	push   rsi
  402042:	push   rbx
  402043:	sub    rsp,0x30
  402047:	mov    edx,DWORD PTR [rip+0x210e7]        # 0x423134
  40204d:	mov    eax,0x3
  402052:	test   edx,edx
  402054:	jne    0x402060
  402056:	add    rsp,0x30
  40205a:	pop    rbx
  40205b:	pop    rsi
  40205c:	pop    rdi
  40205d:	ret    
  40205e:	xchg   ax,ax
  402060:	mov    rbx,rcx
  402063:	lea    r9,[rip+0x21096]        # 0x423100
  40206a:	lea    r8,[rip+0x20fcf]        # 0x423040
  402071:	lea    rdx,[rip+0x237a8]        # 0x425820
  402078:	lea    rcx,[rip+0x31001]        # 0x433080
  40207f:	call   0x401930
  402084:	lea    r8,[rsp+0x28]
  402089:	lea    rdx,[rip+0x30ff0]        # 0x433080
  402090:	mov    rcx,rbx
  402093:	call   0x4079d0
  402098:	test   eax,eax
  40209a:	mov    esi,eax
  40209c:	js     0x4020e0
  40209e:	mov    rax,QWORD PTR [rip+0x2b61b]        # 0x42d6c0
  4020a5:	mov    edx,0x1
  4020aa:	mov    rcx,rbx
  4020ad:	mov    r8,QWORD PTR [rax]
  4020b0:	call   0x407b70
  4020b5:	mov    rcx,rbx
  4020b8:	call   0x4016d0
  4020bd:	mov    edx,eax
  4020bf:	mov    eax,0x1
  4020c4:	test   edx,edx
  4020c6:	js     0x402056
  4020c8:	mov    rcx,rbx
  4020cb:	call   0x407938
  4020d0:	test   eax,eax
  4020d2:	sete   al
  4020d5:	movzx  eax,al
  4020d8:	add    rsp,0x30
  4020dc:	pop    rbx
  4020dd:	pop    rsi
  4020de:	pop    rdi
  4020df:	ret    
  4020e0:	mov    rbx,QWORD PTR [rip+0x36e95]        # 0x438f7c
  4020e7:	call   rbx
  4020e9:	lea    r8,[rip+0x30f90]        # 0x433080
  4020f0:	lea    rdx,[rip+0x2337e]        # 0x425475
  4020f7:	lea    rcx,[rax+0x60]
  4020fb:	call   0x401670
  402100:	mov    ecx,esi
  402102:	call   0x4078c0
  402107:	mov    rsi,QWORD PTR [rsp+0x28]
  40210c:	mov    rdi,rax
  40210f:	call   rbx
  402111:	lea    rdx,[rip+0x23373]        # 0x42548b
  402118:	lea    rcx,[rax+0x60]
  40211c:	mov    r9,rdi
  40211f:	mov    r8,rsi
  402122:	call   0x401670
  402127:	mov    ecx,0x1
  40212c:	call   0x421e98
  402131:	nop
  402132:	nop    DWORD PTR [rax+0x0]
  402136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402140:	push   rdi
  402141:	push   rsi
  402142:	push   rbx
  402143:	sub    rsp,0x30
  402147:	mov    edx,DWORD PTR [rip+0x20fe7]        # 0x423134
  40214d:	mov    eax,0x3
  402152:	test   edx,edx
  402154:	jne    0x402160
  402156:	add    rsp,0x30
  40215a:	pop    rbx
  40215b:	pop    rsi
  40215c:	pop    rdi
  40215d:	ret    
  40215e:	xchg   ax,ax
  402160:	mov    rbx,rcx
  402163:	lea    r9,[rip+0x20f96]        # 0x423100
  40216a:	lea    r8,[rip+0x20ecf]        # 0x423040
  402171:	lea    rdx,[rip+0x236a8]        # 0x425820
  402178:	lea    rcx,[rip+0x30f01]        # 0x433080
  40217f:	call   0x401930
  402184:	lea    r8,[rsp+0x28]
  402189:	lea    rdx,[rip+0x30ef0]        # 0x433080
  402190:	mov    rcx,rbx
  402193:	call   0x4079d0
  402198:	test   eax,eax
  40219a:	mov    esi,eax
  40219c:	js     0x4021e0
  40219e:	mov    rax,QWORD PTR [rip+0x2b51b]        # 0x42d6c0
  4021a5:	mov    edx,0x1
  4021aa:	mov    rcx,rbx
  4021ad:	mov    r8,QWORD PTR [rax]
  4021b0:	call   0x407b70
  4021b5:	mov    rcx,rbx
  4021b8:	call   0x4016d0
  4021bd:	mov    edx,eax
  4021bf:	mov    eax,0x1
  4021c4:	test   edx,edx
  4021c6:	js     0x402156
  4021c8:	mov    rcx,rbx
  4021cb:	call   0x407940
  4021d0:	test   eax,eax
  4021d2:	sete   al
  4021d5:	movzx  eax,al
  4021d8:	add    rsp,0x30
  4021dc:	pop    rbx
  4021dd:	pop    rsi
  4021de:	pop    rdi
  4021df:	ret    
  4021e0:	mov    rbx,QWORD PTR [rip+0x36d95]        # 0x438f7c
  4021e7:	call   rbx
  4021e9:	lea    r8,[rip+0x30e90]        # 0x433080
  4021f0:	lea    rdx,[rip+0x2327e]        # 0x425475
  4021f7:	lea    rcx,[rax+0x60]
  4021fb:	call   0x401670
  402200:	mov    ecx,esi
  402202:	call   0x4078c0
  402207:	mov    rsi,QWORD PTR [rsp+0x28]
  40220c:	mov    rdi,rax
  40220f:	call   rbx
  402211:	lea    rdx,[rip+0x23273]        # 0x42548b
  402218:	lea    rcx,[rax+0x60]
  40221c:	mov    r9,rdi
  40221f:	mov    r8,rsi
  402222:	call   0x401670
  402227:	mov    ecx,0x1
  40222c:	call   0x421e98
  402231:	nop
  402232:	nop    DWORD PTR [rax+0x0]
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   rdi
  402241:	push   rsi
  402242:	push   rbx
  402243:	sub    rsp,0x30
  402247:	mov    edx,DWORD PTR [rip+0x3103b]        # 0x433288
  40224d:	mov    eax,0x3
  402252:	test   edx,edx
  402254:	jne    0x402260
  402256:	add    rsp,0x30
  40225a:	pop    rbx
  40225b:	pop    rsi
  40225c:	pop    rdi
  40225d:	ret    
  40225e:	xchg   ax,ax
  402260:	mov    rbx,rcx
  402263:	lea    rdx,[rip+0x2367e]        # 0x4258e8
  40226a:	lea    rcx,[rip+0x30e0f]        # 0x433080
  402271:	call   0x401930
  402276:	lea    r8,[rsp+0x28]
  40227b:	lea    rdx,[rip+0x30dfe]        # 0x433080
  402282:	mov    rcx,rbx
  402285:	call   0x4079d0
  40228a:	test   eax,eax
  40228c:	mov    esi,eax
  40228e:	js     0x4022b7
  402290:	mov    rax,QWORD PTR [rip+0x2b429]        # 0x42d6c0
  402297:	mov    edx,0x1
  40229c:	mov    rcx,rbx
  40229f:	mov    r8,QWORD PTR [rax]
  4022a2:	call   0x407b70
  4022a7:	mov    rcx,rbx
  4022aa:	call   0x4016d0
  4022af:	add    rsp,0x30
  4022b3:	pop    rbx
  4022b4:	pop    rsi
  4022b5:	pop    rdi
  4022b6:	ret    
  4022b7:	mov    rbx,QWORD PTR [rip+0x36cbe]        # 0x438f7c
  4022be:	call   rbx
  4022c0:	lea    r8,[rip+0x30db9]        # 0x433080
  4022c7:	lea    rdx,[rip+0x231a7]        # 0x425475
  4022ce:	lea    rcx,[rax+0x60]
  4022d2:	call   0x401670
  4022d7:	mov    ecx,esi
  4022d9:	call   0x4078c0
  4022de:	mov    rsi,QWORD PTR [rsp+0x28]
  4022e3:	mov    rdi,rax
  4022e6:	call   rbx
  4022e8:	lea    rdx,[rip+0x2319c]        # 0x42548b
  4022ef:	lea    rcx,[rax+0x60]
  4022f3:	mov    r9,rdi
  4022f6:	mov    r8,rsi
  4022f9:	call   0x401670
  4022fe:	mov    ecx,0x1
  402303:	call   0x421e98
  402308:	nop
  402309:	nop    DWORD PTR [rax+0x0]
  402310:	push   r13
  402312:	push   r12
  402314:	push   rbp
  402315:	push   rdi
  402316:	push   rsi
  402317:	push   rbx
  402318:	sub    rsp,0x78
  40231c:	mov    rbx,rcx
  40231f:	lea    rcx,[rip+0x236a3]        # 0x4259c9
  402326:	call   0x421dd0
  40232b:	mov    rdx,QWORD PTR [rip+0x2b37e]        # 0x42d6b0
  402332:	mov    eax,0x3
  402337:	mov    edx,DWORD PTR [rdx]
  402339:	test   edx,edx
  40233b:	jne    0x402350
  40233d:	add    rsp,0x78
  402341:	pop    rbx
  402342:	pop    rsi
  402343:	pop    rdi
  402344:	pop    rbp
  402345:	pop    r12
  402347:	pop    r13
  402349:	ret    
  40234a:	nop    WORD PTR [rax+rax*1+0x0]
  402350:	cmp    QWORD PTR [rip+0x32378],0x0        # 0x4346d0
  402358:	je     0x40233d
  40235a:	lea    r9,[rip+0x20cdf]        # 0x423040
  402361:	lea    r8,[rip+0x20d98]        # 0x423100
  402368:	lea    rdx,[rip+0x23141]        # 0x4254b0
  40236f:	lea    rcx,[rip+0x30d0a]        # 0x433080
  402376:	lea    rbp,[rsp+0x60]
  40237b:	call   0x401930
  402380:	lea    rdx,[rip+0x30cf9]        # 0x433080
  402387:	mov    r8,rbp
  40238a:	mov    rcx,rbx
  40238d:	call   0x4079d0
  402392:	test   eax,eax
  402394:	mov    esi,eax
  402396:	js     0x402568
  40239c:	mov    rax,QWORD PTR [rip+0x2b31d]        # 0x42d6c0
  4023a3:	mov    edx,0x1
  4023a8:	mov    rcx,rbx
  4023ab:	lea    rsi,[rsp+0x40]
  4023b0:	lea    rdi,[rsp+0x30]
  4023b5:	mov    r8,QWORD PTR [rax]
  4023b8:	call   0x407b70
  4023bd:	mov    rcx,rbx
  4023c0:	call   0x4016d0
  4023c5:	mov    r8,rsi
  4023c8:	mov    rdx,rdi
  4023cb:	mov    rcx,rbx
  4023ce:	mov    r13d,eax
  4023d1:	call   0x407b60
  4023d6:	test   eax,eax
  4023d8:	js     0x402525
  4023de:	lea    rdx,[rip+0x22f48]        # 0x42532d
  4023e5:	lea    rcx,[rip+0x235dd]        # 0x4259c9
  4023ec:	call   0x421e78
  4023f1:	mov    r12,rax
  4023f4:	mov    eax,0x1
  4023f9:	test   r12,r12
  4023fc:	je     0x40233d
  402402:	mov    edx,DWORD PTR [rsp+0x38]
  402406:	mov    rcx,QWORD PTR [rsp+0x30]
  40240b:	lea    rax,[rip+0x235c4]        # 0x4259d6
  402412:	mov    QWORD PTR [rip+0x20d1f],rax        # 0x423138
  402419:	call   0x405ce0
  40241e:	test   rax,rax
  402421:	je     0x40243e
  402423:	mov    r8d,DWORD PTR [rsp+0x38]
  402428:	lea    rdx,[rip+0x235bd]        # 0x4259ec
  40242f:	mov    r9,rax
  402432:	mov    rcx,r12
  402435:	shl    r8d,0x3
  402439:	call   0x401670
  40243e:	mov    edx,DWORD PTR [rsp+0x48]
  402442:	mov    rcx,QWORD PTR [rsp+0x40]
  402447:	call   0x405ce0
  40244c:	test   rax,rax
  40244f:	je     0x40246c
  402451:	mov    r8d,DWORD PTR [rsp+0x48]
  402456:	lea    rdx,[rip+0x235a9]        # 0x425a06
  40245d:	mov    r9,rax
  402460:	mov    rcx,r12
  402463:	shl    r8d,0x3
  402467:	call   0x401670
  40246c:	lea    rdx,[rsp+0x50]
  402471:	mov    rcx,rbx
  402474:	call   0x407b48
  402479:	mov    edx,DWORD PTR [rsp+0x58]
  40247d:	mov    rcx,QWORD PTR [rsp+0x50]
  402482:	call   0x405ce0
  402487:	test   rax,rax
  40248a:	je     0x4024a7
  40248c:	mov    r8d,DWORD PTR [rsp+0x58]
  402491:	lea    rdx,[rip+0x23584]        # 0x425a1c
  402498:	mov    r9,rax
  40249b:	mov    rcx,r12
  40249e:	shl    r8d,0x3
  4024a2:	call   0x401670
  4024a7:	mov    rdx,QWORD PTR [rsp+0x50]
  4024ac:	test   rdx,rdx
  4024af:	je     0x4024c3
  4024b1:	mov    r8d,DWORD PTR [rsp+0x58]
  4024b6:	cmp    r8d,DWORD PTR [rip+0x3221b]        # 0x4346d8
  4024bd:	je     0x402540
  4024c3:	lea    rcx,[rsp+0x28]
  4024c8:	call   0x407b18
  4024cd:	test   eax,eax
  4024cf:	js     0x402535
  4024d1:	mov    rcx,QWORD PTR [rsp+0x28]
  4024d6:	mov    r8,rdi
  4024d9:	mov    rdx,rsi
  4024dc:	call   0x407b20
  4024e1:	test   eax,eax
  4024e3:	js     0x402535
  4024e5:	mov    rcx,QWORD PTR [rsp+0x28]
  4024ea:	mov    r8,rbp
  4024ed:	mov    edx,0x1
  4024f2:	call   0x407b30
  4024f7:	test   eax,eax
  4024f9:	js     0x402535
  4024fb:	mov    r8,QWORD PTR [rsp+0x60]
  402500:	lea    rdx,[rip+0x23562]        # 0x425a69
  402507:	mov    rcx,r12
  40250a:	call   0x401670
  40250f:	mov    rax,QWORD PTR [rip+0x2b0da]        # 0x42d5f0
  402516:	mov    rcx,QWORD PTR [rsp+0x60]
  40251b:	call   QWORD PTR [rax]
  40251d:	mov    rcx,r12
  402520:	call   0x421e90
  402525:	mov    eax,r13d
  402528:	add    rsp,0x78
  40252c:	pop    rbx
  40252d:	pop    rsi
  40252e:	pop    rdi
  40252f:	pop    rbp
  402530:	pop    r12
  402532:	pop    r13
  402534:	ret    
  402535:	mov    eax,0x1
  40253a:	jmp    0x40233d
  40253f:	nop
  402540:	mov    rcx,QWORD PTR [rip+0x32189]        # 0x4346d0
  402547:	call   0x421e10
  40254c:	test   eax,eax
  40254e:	jne    0x4024c3
  402554:	lea    rdx,[rip+0x234dd]        # 0x425a38
  40255b:	mov    rcx,r12
  40255e:	call   0x401670
  402563:	jmp    0x4024c3
  402568:	mov    rbx,QWORD PTR [rip+0x36a0d]        # 0x438f7c
  40256f:	call   rbx
  402571:	lea    r8,[rip+0x30b08]        # 0x433080
  402578:	lea    rdx,[rip+0x22ef6]        # 0x425475
  40257f:	lea    rcx,[rax+0x60]
  402583:	call   0x401670
  402588:	mov    ecx,esi
  40258a:	call   0x4078c0
  40258f:	mov    rsi,QWORD PTR [rsp+0x60]
  402594:	mov    rdi,rax
  402597:	call   rbx
  402599:	lea    rdx,[rip+0x22eeb]        # 0x42548b
  4025a0:	lea    rcx,[rax+0x60]
  4025a4:	mov    r9,rdi
  4025a7:	mov    r8,rsi
  4025aa:	call   0x401670
  4025af:	mov    ecx,0x1
  4025b4:	call   0x421e98
  4025b9:	nop
  4025ba:	nop    WORD PTR [rax+rax*1+0x0]
  4025c0:	sub    rsp,0x28
  4025c4:	mov    ecx,DWORD PTR [rip+0x320fa]        # 0x4346c4
  4025ca:	mov    eax,0x3
  4025cf:	test   ecx,ecx
  4025d1:	jne    0x4025e0
  4025d3:	add    rsp,0x28
  4025d7:	ret    
  4025d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	call   0x407af8
  4025e5:	mov    QWORD PTR [rip+0x20b4c],rax        # 0x423138
  4025ec:	xor    eax,eax
  4025ee:	add    rsp,0x28
  4025f2:	ret    
  4025f3:	nop    DWORD PTR [rax]
  4025f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402600:	push   rdi
  402601:	push   rsi
  402602:	push   rbx
  402603:	sub    rsp,0x30
  402607:	lea    r8,[rip+0x20a32]        # 0x423040
  40260e:	lea    rdx,[rip+0x2345b]        # 0x425a70
  402615:	mov    rbx,rcx
  402618:	lea    rcx,[rip+0x30a61]        # 0x433080
  40261f:	call   0x401930
  402624:	lea    r8,[rsp+0x28]
  402629:	lea    rdx,[rip+0x30a50]        # 0x433080
  402630:	mov    rcx,rbx
  402633:	call   0x4079d0
  402638:	test   eax,eax
  40263a:	mov    esi,eax
  40263c:	js     0x402673
  40263e:	mov    rax,QWORD PTR [rip+0x2b07b]        # 0x42d6c0
  402645:	mov    edx,0x1
  40264a:	mov    rcx,rbx
  40264d:	mov    r8,QWORD PTR [rax]
  402650:	call   0x407b70
  402655:	mov    rcx,rbx
  402658:	call   0x4016d0
  40265d:	test   eax,eax
  40265f:	jne    0x40266b
  402661:	mov    DWORD PTR [rip+0x30c1d],0x1        # 0x433288
  40266b:	add    rsp,0x30
  40266f:	pop    rbx
  402670:	pop    rsi
  402671:	pop    rdi
  402672:	ret    
  402673:	mov    rbx,QWORD PTR [rip+0x36902]        # 0x438f7c
  40267a:	call   rbx
  40267c:	lea    r8,[rip+0x309fd]        # 0x433080
  402683:	lea    rdx,[rip+0x22deb]        # 0x425475
  40268a:	lea    rcx,[rax+0x60]
  40268e:	call   0x401670
  402693:	mov    ecx,esi
  402695:	call   0x4078c0
  40269a:	mov    rsi,QWORD PTR [rsp+0x28]
  40269f:	mov    rdi,rax
  4026a2:	call   rbx
  4026a4:	lea    rdx,[rip+0x22de0]        # 0x42548b
  4026ab:	lea    rcx,[rax+0x60]
  4026af:	mov    r9,rdi
  4026b2:	mov    r8,rsi
  4026b5:	call   0x401670
  4026ba:	mov    ecx,0x1
  4026bf:	call   0x421e98
  4026c4:	nop
  4026c5:	nop
  4026c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026d0:	push   rdi
  4026d1:	push   rsi
  4026d2:	push   rbx
  4026d3:	sub    rsp,0x60
  4026d7:	lea    r9,[rip+0x20962]        # 0x423040
  4026de:	lea    r8,[rip+0x20a1b]        # 0x423100
  4026e5:	lea    rdx,[rip+0x22cc4]        # 0x4253b0
  4026ec:	mov    rbx,rcx
  4026ef:	lea    rcx,[rip+0x3098a]        # 0x433080
  4026f6:	lea    rsi,[rsp+0x40]
  4026fb:	mov    DWORD PTR [rsp+0x3c],0x6
  402703:	call   0x401930
  402708:	lea    rdx,[rip+0x30971]        # 0x433080
  40270f:	mov    r8,rsi
  402712:	mov    rcx,rbx
  402715:	call   0x4079d0
  40271a:	test   eax,eax
  40271c:	mov    edi,eax
  40271e:	js     0x4027ec
  402724:	mov    rax,QWORD PTR [rip+0x2af95]        # 0x42d6c0
  40272b:	mov    edx,0x1
  402730:	mov    rcx,rbx
  402733:	mov    r8,QWORD PTR [rax]
  402736:	call   0x407b70
  40273b:	mov    rcx,rbx
  40273e:	call   0x4016d0
  402743:	cmp    eax,0x1
  402746:	je     0x4027d0
  40274c:	mov    edx,0x1
  402751:	mov    rcx,rbx
  402754:	call   0x407c10
  402759:	test   eax,eax
  40275b:	js     0x4027d0
  40275d:	mov    rcx,rbx
  402760:	call   0x4078b8
  402765:	lea    r9,[rsp+0x3c]
  40276a:	mov    DWORD PTR [rsp+0x20],0x4
  402772:	mov    r8d,0x1006
  402778:	mov    edx,0xffff
  40277d:	mov    ecx,eax
  40277f:	call   0x419680
  402784:	mov    r8d,0x14
  40278a:	mov    rdx,rsi
  40278d:	mov    rcx,rbx
  402790:	call   0x407990
  402795:	test   eax,eax
  402797:	mov    edi,eax
  402799:	jg     0x402784
  40279b:	mov    rbx,QWORD PTR [rip+0x36b12]        # 0x4392b4
  4027a2:	call   rbx
  4027a4:	cmp    eax,0x274c
  4027a9:	je     0x4027e0
  4027ab:	call   rbx
  4027ad:	cmp    eax,0x2745
  4027b2:	je     0x4027e0
  4027b4:	xor    eax,eax
  4027b6:	test   edi,edi
  4027b8:	je     0x4027d5
  4027ba:	cmp    DWORD PTR [rip+0x31eff],0x1        # 0x4346c0
  4027c1:	sbb    eax,eax
  4027c3:	not    eax
  4027c5:	add    eax,0x2
  4027c8:	add    rsp,0x60
  4027cc:	pop    rbx
  4027cd:	pop    rsi
  4027ce:	pop    rdi
  4027cf:	ret    
  4027d0:	mov    eax,0x1
  4027d5:	add    rsp,0x60
  4027d9:	pop    rbx
  4027da:	pop    rsi
  4027db:	pop    rdi
  4027dc:	ret    
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	mov    DWORD PTR [rip+0x31ed6],0x1        # 0x4346c0
  4027ea:	jmp    0x4027b4
  4027ec:	mov    rbx,QWORD PTR [rip+0x36789]        # 0x438f7c
  4027f3:	call   rbx
  4027f5:	lea    r8,[rip+0x30884]        # 0x433080
  4027fc:	lea    rdx,[rip+0x22c72]        # 0x425475
  402803:	lea    rcx,[rax+0x60]
  402807:	call   0x401670
  40280c:	mov    ecx,edi
  40280e:	call   0x4078c0
  402813:	mov    rsi,QWORD PTR [rsp+0x40]
  402818:	mov    rdi,rax
  40281b:	call   rbx
  40281d:	lea    rdx,[rip+0x22c67]        # 0x42548b
  402824:	lea    rcx,[rax+0x60]
  402828:	mov    r9,rdi
  40282b:	mov    r8,rsi
  40282e:	call   0x401670
  402833:	mov    ecx,0x1
  402838:	call   0x421e98
  40283d:	nop
  40283e:	xchg   ax,ax
  402840:	push   rdi
  402841:	push   rsi
  402842:	push   rbx
  402843:	sub    rsp,0x30
  402847:	lea    r9,[rip+0x207f2]        # 0x423040
  40284e:	lea    r8,[rip+0x208ab]        # 0x423100
  402855:	lea    rdx,[rip+0x232e4]        # 0x425b40
  40285c:	mov    rbx,rcx
  40285f:	lea    rcx,[rip+0x3081a]        # 0x433080
  402866:	call   0x401930
  40286b:	lea    r8,[rsp+0x28]
  402870:	lea    rdx,[rip+0x30809]        # 0x433080
  402877:	mov    rcx,rbx
  40287a:	call   0x4079d0
  40287f:	test   eax,eax
  402881:	mov    esi,eax
  402883:	js     0x4028ac
  402885:	mov    rax,QWORD PTR [rip+0x2ae34]        # 0x42d6c0
  40288c:	mov    edx,0x1
  402891:	mov    rcx,rbx
  402894:	mov    r8,QWORD PTR [rax]
  402897:	call   0x407b70
  40289c:	mov    rcx,rbx
  40289f:	call   0x4016d0
  4028a4:	add    rsp,0x30
  4028a8:	pop    rbx
  4028a9:	pop    rsi
  4028aa:	pop    rdi
  4028ab:	ret    
  4028ac:	mov    rbx,QWORD PTR [rip+0x366c9]        # 0x438f7c
  4028b3:	call   rbx
  4028b5:	lea    r8,[rip+0x307c4]        # 0x433080
  4028bc:	lea    rdx,[rip+0x22bb2]        # 0x425475
  4028c3:	lea    rcx,[rax+0x60]
  4028c7:	call   0x401670
  4028cc:	mov    ecx,esi
  4028ce:	call   0x4078c0
  4028d3:	mov    rsi,QWORD PTR [rsp+0x28]
  4028d8:	mov    rdi,rax
  4028db:	call   rbx
  4028dd:	lea    rdx,[rip+0x22ba7]        # 0x42548b
  4028e4:	lea    rcx,[rax+0x60]
  4028e8:	mov    r9,rdi
  4028eb:	mov    r8,rsi
  4028ee:	call   0x401670
  4028f3:	mov    ecx,0x1
  4028f8:	call   0x421e98
  4028fd:	nop
  4028fe:	xchg   ax,ax
  402900:	push   rdi
  402901:	push   rsi
  402902:	push   rbx
  402903:	sub    rsp,0x30
  402907:	lea    r9,[rip+0x20732]        # 0x423040
  40290e:	lea    r8,[rip+0x207ab]        # 0x4230c0
  402915:	lea    rdx,[rip+0x232a4]        # 0x425bc0
  40291c:	mov    rbx,rcx
  40291f:	lea    rcx,[rip+0x3075a]        # 0x433080
  402926:	call   0x401930
  40292b:	lea    r8,[rsp+0x28]
  402930:	lea    rdx,[rip+0x30749]        # 0x433080
  402937:	mov    rcx,rbx
  40293a:	call   0x4079d0
  40293f:	test   eax,eax
  402941:	mov    esi,eax
  402943:	js     0x40296c
  402945:	mov    rax,QWORD PTR [rip+0x2ad74]        # 0x42d6c0
  40294c:	mov    edx,0x1
  402951:	mov    rcx,rbx
  402954:	mov    r8,QWORD PTR [rax]
  402957:	call   0x407b70
  40295c:	mov    rcx,rbx
  40295f:	call   0x4016d0
  402964:	add    rsp,0x30
  402968:	pop    rbx
  402969:	pop    rsi
  40296a:	pop    rdi
  40296b:	ret    
  40296c:	mov    rbx,QWORD PTR [rip+0x36609]        # 0x438f7c
  402973:	call   rbx
  402975:	lea    r8,[rip+0x30704]        # 0x433080
  40297c:	lea    rdx,[rip+0x22af2]        # 0x425475
  402983:	lea    rcx,[rax+0x60]
  402987:	call   0x401670
  40298c:	mov    ecx,esi
  40298e:	call   0x4078c0
  402993:	mov    rsi,QWORD PTR [rsp+0x28]
  402998:	mov    rdi,rax
  40299b:	call   rbx
  40299d:	lea    rdx,[rip+0x22ae7]        # 0x42548b
  4029a4:	lea    rcx,[rax+0x60]
  4029a8:	mov    r9,rdi
  4029ab:	mov    r8,rsi
  4029ae:	call   0x401670
  4029b3:	mov    ecx,0x1
  4029b8:	call   0x421e98
  4029bd:	nop
  4029be:	xchg   ax,ax
  4029c0:	push   rdi
  4029c1:	push   rsi
  4029c2:	push   rbx
  4029c3:	sub    rsp,0x30
  4029c7:	lea    r9,[rip+0x20672]        # 0x423040
  4029ce:	lea    r8,[rip+0x206eb]        # 0x4230c0
  4029d5:	lea    rdx,[rip+0x23274]        # 0x425c50
  4029dc:	mov    rbx,rcx
  4029df:	lea    rcx,[rip+0x3069a]        # 0x433080
  4029e6:	call   0x401930
  4029eb:	lea    r8,[rsp+0x28]
  4029f0:	lea    rdx,[rip+0x30689]        # 0x433080
  4029f7:	mov    rcx,rbx
  4029fa:	call   0x4079d0
  4029ff:	test   eax,eax
  402a01:	mov    esi,eax
  402a03:	js     0x402a2c
  402a05:	mov    rax,QWORD PTR [rip+0x2acb4]        # 0x42d6c0
  402a0c:	mov    edx,0x1
  402a11:	mov    rcx,rbx
  402a14:	mov    r8,QWORD PTR [rax]
  402a17:	call   0x407b70
  402a1c:	mov    rcx,rbx
  402a1f:	call   0x4016d0
  402a24:	add    rsp,0x30
  402a28:	pop    rbx
  402a29:	pop    rsi
  402a2a:	pop    rdi
  402a2b:	ret    
  402a2c:	mov    rbx,QWORD PTR [rip+0x36549]        # 0x438f7c
  402a33:	call   rbx
  402a35:	lea    r8,[rip+0x30644]        # 0x433080
  402a3c:	lea    rdx,[rip+0x22a32]        # 0x425475
  402a43:	lea    rcx,[rax+0x60]
  402a47:	call   0x401670
  402a4c:	mov    ecx,esi
  402a4e:	call   0x4078c0
  402a53:	mov    rsi,QWORD PTR [rsp+0x28]
  402a58:	mov    rdi,rax
  402a5b:	call   rbx
  402a5d:	lea    rdx,[rip+0x22a27]        # 0x42548b
  402a64:	lea    rcx,[rax+0x60]
  402a68:	mov    r9,rdi
  402a6b:	mov    r8,rsi
  402a6e:	call   0x401670
  402a73:	mov    ecx,0x1
  402a78:	call   0x421e98
  402a7d:	nop
  402a7e:	xchg   ax,ax
  402a80:	push   rdi
  402a81:	push   rsi
  402a82:	push   rbx
  402a83:	sub    rsp,0x30
  402a87:	lea    r9,[rip+0x205b2]        # 0x423040
  402a8e:	lea    r8,[rip+0x2062b]        # 0x4230c0
  402a95:	lea    rdx,[rip+0x23244]        # 0x425ce0
  402a9c:	mov    rbx,rcx
  402a9f:	lea    rcx,[rip+0x305da]        # 0x433080
  402aa6:	call   0x401930
  402aab:	lea    r8,[rsp+0x28]
  402ab0:	lea    rdx,[rip+0x305c9]        # 0x433080
  402ab7:	mov    rcx,rbx
  402aba:	call   0x4079d0
  402abf:	test   eax,eax
  402ac1:	mov    esi,eax
  402ac3:	js     0x402aec
  402ac5:	mov    rax,QWORD PTR [rip+0x2abf4]        # 0x42d6c0
  402acc:	mov    edx,0x1
  402ad1:	mov    rcx,rbx
  402ad4:	mov    r8,QWORD PTR [rax]
  402ad7:	call   0x407b70
  402adc:	mov    rcx,rbx
  402adf:	call   0x4016d0
  402ae4:	add    rsp,0x30
  402ae8:	pop    rbx
  402ae9:	pop    rsi
  402aea:	pop    rdi
  402aeb:	ret    
  402aec:	mov    rbx,QWORD PTR [rip+0x36489]        # 0x438f7c
  402af3:	call   rbx
  402af5:	lea    r8,[rip+0x30584]        # 0x433080
  402afc:	lea    rdx,[rip+0x22972]        # 0x425475
  402b03:	lea    rcx,[rax+0x60]
  402b07:	call   0x401670
  402b0c:	mov    ecx,esi
  402b0e:	call   0x4078c0
  402b13:	mov    rsi,QWORD PTR [rsp+0x28]
  402b18:	mov    rdi,rax
  402b1b:	call   rbx
  402b1d:	lea    rdx,[rip+0x22967]        # 0x42548b
  402b24:	lea    rcx,[rax+0x60]
  402b28:	mov    r9,rdi
  402b2b:	mov    r8,rsi
  402b2e:	call   0x401670
  402b33:	mov    ecx,0x1
  402b38:	call   0x421e98
  402b3d:	nop
  402b3e:	xchg   ax,ax
  402b40:	push   rdi
  402b41:	push   rsi
  402b42:	push   rbx
  402b43:	sub    rsp,0x30
  402b47:	lea    r9,[rip+0x204f2]        # 0x423040
  402b4e:	lea    r8,[rip+0x205ab]        # 0x423100
  402b55:	lea    rdx,[rip+0x2321c]        # 0x425d78
  402b5c:	mov    rbx,rcx
  402b5f:	lea    rcx,[rip+0x3051a]        # 0x433080
  402b66:	call   0x401930
  402b6b:	lea    r8,[rsp+0x28]
  402b70:	lea    rdx,[rip+0x30509]        # 0x433080
  402b77:	mov    rcx,rbx
  402b7a:	call   0x4079d0
  402b7f:	test   eax,eax
  402b81:	mov    esi,eax
  402b83:	js     0x402bac
  402b85:	mov    rax,QWORD PTR [rip+0x2ab34]        # 0x42d6c0
  402b8c:	mov    edx,0x1
  402b91:	mov    rcx,rbx
  402b94:	mov    r8,QWORD PTR [rax]
  402b97:	call   0x407b70
  402b9c:	mov    rcx,rbx
  402b9f:	call   0x4016d0
  402ba4:	add    rsp,0x30
  402ba8:	pop    rbx
  402ba9:	pop    rsi
  402baa:	pop    rdi
  402bab:	ret    
  402bac:	mov    rbx,QWORD PTR [rip+0x363c9]        # 0x438f7c
  402bb3:	call   rbx
  402bb5:	lea    r8,[rip+0x304c4]        # 0x433080
  402bbc:	lea    rdx,[rip+0x228b2]        # 0x425475
  402bc3:	lea    rcx,[rax+0x60]
  402bc7:	call   0x401670
  402bcc:	mov    ecx,esi
  402bce:	call   0x4078c0
  402bd3:	mov    rsi,QWORD PTR [rsp+0x28]
  402bd8:	mov    rdi,rax
  402bdb:	call   rbx
  402bdd:	lea    rdx,[rip+0x228a7]        # 0x42548b
  402be4:	lea    rcx,[rax+0x60]
  402be8:	mov    r9,rdi
  402beb:	mov    r8,rsi
  402bee:	call   0x401670
  402bf3:	mov    ecx,0x1
  402bf8:	call   0x421e98
  402bfd:	nop
  402bfe:	xchg   ax,ax
  402c00:	push   rdi
  402c01:	push   rsi
  402c02:	push   rbx
  402c03:	sub    rsp,0x30
  402c07:	lea    r9,[rip+0x20432]        # 0x423040
  402c0e:	lea    r8,[rip+0x204eb]        # 0x423100
  402c15:	lea    rdx,[rip+0x231e4]        # 0x425e00
  402c1c:	mov    rbx,rcx
  402c1f:	lea    rcx,[rip+0x3045a]        # 0x433080
  402c26:	call   0x401930
  402c2b:	lea    r8,[rsp+0x28]
  402c30:	lea    rdx,[rip+0x30449]        # 0x433080
  402c37:	mov    rcx,rbx
  402c3a:	call   0x4079d0
  402c3f:	test   eax,eax
  402c41:	mov    esi,eax
  402c43:	js     0x402c6c
  402c45:	mov    rax,QWORD PTR [rip+0x2aa74]        # 0x42d6c0
  402c4c:	mov    edx,0x1
  402c51:	mov    rcx,rbx
  402c54:	mov    r8,QWORD PTR [rax]
  402c57:	call   0x407b70
  402c5c:	mov    rcx,rbx
  402c5f:	call   0x4016d0
  402c64:	add    rsp,0x30
  402c68:	pop    rbx
  402c69:	pop    rsi
  402c6a:	pop    rdi
  402c6b:	ret    
  402c6c:	mov    rbx,QWORD PTR [rip+0x36309]        # 0x438f7c
  402c73:	call   rbx
  402c75:	lea    r8,[rip+0x30404]        # 0x433080
  402c7c:	lea    rdx,[rip+0x227f2]        # 0x425475
  402c83:	lea    rcx,[rax+0x60]
  402c87:	call   0x401670
  402c8c:	mov    ecx,esi
  402c8e:	call   0x4078c0
  402c93:	mov    rsi,QWORD PTR [rsp+0x28]
  402c98:	mov    rdi,rax
  402c9b:	call   rbx
  402c9d:	lea    rdx,[rip+0x227e7]        # 0x42548b
  402ca4:	lea    rcx,[rax+0x60]
  402ca8:	mov    r9,rdi
  402cab:	mov    r8,rsi
  402cae:	call   0x401670
  402cb3:	mov    ecx,0x1
  402cb8:	call   0x421e98
  402cbd:	nop
  402cbe:	xchg   ax,ax
  402cc0:	push   rdi
  402cc1:	push   rsi
  402cc2:	push   rbx
  402cc3:	sub    rsp,0x30
  402cc7:	mov    edx,DWORD PTR [rip+0x20467]        # 0x423134
  402ccd:	mov    eax,0x3
  402cd2:	test   edx,edx
  402cd4:	jne    0x402ce0
  402cd6:	add    rsp,0x30
  402cda:	pop    rbx
  402cdb:	pop    rsi
  402cdc:	pop    rdi
  402cdd:	ret    
  402cde:	xchg   ax,ax
  402ce0:	mov    rbx,rcx
  402ce3:	lea    r9,[rip+0x20356]        # 0x423040
  402cea:	lea    r8,[rip+0x2040f]        # 0x423100
  402cf1:	lea    rdx,[rip+0x23188]        # 0x425e80
  402cf8:	lea    rcx,[rip+0x30381]        # 0x433080
  402cff:	call   0x401930
  402d04:	lea    r8,[rsp+0x28]
  402d09:	lea    rdx,[rip+0x30370]        # 0x433080
  402d10:	mov    rcx,rbx
  402d13:	call   0x4079d0
  402d18:	test   eax,eax
  402d1a:	mov    esi,eax
  402d1c:	js     0x402d62
  402d1e:	mov    rax,QWORD PTR [rip+0x2a99b]        # 0x42d6c0
  402d25:	mov    edx,0x1
  402d2a:	mov    rcx,rbx
  402d2d:	mov    r8,QWORD PTR [rax]
  402d30:	call   0x407b70
  402d35:	mov    rcx,rbx
  402d38:	call   0x4016d0
  402d3d:	mov    edx,eax
  402d3f:	mov    eax,0x1
  402d44:	cmp    edx,0x1
  402d47:	je     0x402cd6
  402d49:	mov    rcx,rbx
  402d4c:	call   0x407bd8
  402d51:	cmp    eax,0x2
  402d54:	setne  al
  402d57:	movzx  eax,al
  402d5a:	add    rsp,0x30
  402d5e:	pop    rbx
  402d5f:	pop    rsi
  402d60:	pop    rdi
  402d61:	ret    
  402d62:	mov    rbx,QWORD PTR [rip+0x36213]        # 0x438f7c
  402d69:	call   rbx
  402d6b:	lea    r8,[rip+0x3030e]        # 0x433080
  402d72:	lea    rdx,[rip+0x226fc]        # 0x425475
  402d79:	lea    rcx,[rax+0x60]
  402d7d:	call   0x401670
  402d82:	mov    ecx,esi
  402d84:	call   0x4078c0
  402d89:	mov    rsi,QWORD PTR [rsp+0x28]
  402d8e:	mov    rdi,rax
  402d91:	call   rbx
  402d93:	lea    rdx,[rip+0x226f1]        # 0x42548b
  402d9a:	lea    rcx,[rax+0x60]
  402d9e:	mov    r9,rdi
  402da1:	mov    r8,rsi
  402da4:	call   0x401670
  402da9:	mov    ecx,0x1
  402dae:	call   0x421e98
  402db3:	nop
  402db4:	xchg   ax,ax
  402db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dc0:	push   rdi
  402dc1:	push   rsi
  402dc2:	push   rbx
  402dc3:	sub    rsp,0x30
  402dc7:	lea    r9,[rip+0x20272]        # 0x423040
  402dce:	lea    r8,[rip+0x2032b]        # 0x423100
  402dd5:	lea    rdx,[rip+0x2316c]        # 0x425f48
  402ddc:	mov    rbx,rcx
  402ddf:	lea    rcx,[rip+0x3029a]        # 0x433080
  402de6:	call   0x401930
  402deb:	lea    r8,[rsp+0x28]
  402df0:	lea    rdx,[rip+0x30289]        # 0x433080
  402df7:	mov    rcx,rbx
  402dfa:	call   0x4079d0
  402dff:	test   eax,eax
  402e01:	mov    esi,eax
  402e03:	js     0x402e2c
  402e05:	mov    rax,QWORD PTR [rip+0x2a8b4]        # 0x42d6c0
  402e0c:	mov    edx,0x1
  402e11:	mov    rcx,rbx
  402e14:	mov    r8,QWORD PTR [rax]
  402e17:	call   0x407b70
  402e1c:	mov    rcx,rbx
  402e1f:	call   0x4016d0
  402e24:	add    rsp,0x30
  402e28:	pop    rbx
  402e29:	pop    rsi
  402e2a:	pop    rdi
  402e2b:	ret    
  402e2c:	mov    rbx,QWORD PTR [rip+0x36149]        # 0x438f7c
  402e33:	call   rbx
  402e35:	lea    r8,[rip+0x30244]        # 0x433080
  402e3c:	lea    rdx,[rip+0x22632]        # 0x425475
  402e43:	lea    rcx,[rax+0x60]
  402e47:	call   0x401670
  402e4c:	mov    ecx,esi
  402e4e:	call   0x4078c0
  402e53:	mov    rsi,QWORD PTR [rsp+0x28]
  402e58:	mov    rdi,rax
  402e5b:	call   rbx
  402e5d:	lea    rdx,[rip+0x22627]        # 0x42548b
  402e64:	lea    rcx,[rax+0x60]
  402e68:	mov    r9,rdi
  402e6b:	mov    r8,rsi
  402e6e:	call   0x401670
  402e73:	mov    ecx,0x1
  402e78:	call   0x421e98
  402e7d:	nop
  402e7e:	xchg   ax,ax
  402e80:	push   rdi
  402e81:	push   rsi
  402e82:	push   rbx
  402e83:	sub    rsp,0x30
  402e87:	lea    r9,[rip+0x201b2]        # 0x423040
  402e8e:	lea    r8,[rip+0x2026b]        # 0x423100
  402e95:	lea    rdx,[rip+0x23184]        # 0x426020
  402e9c:	mov    rbx,rcx
  402e9f:	lea    rcx,[rip+0x301da]        # 0x433080
  402ea6:	call   0x401930
  402eab:	lea    r8,[rsp+0x28]
  402eb0:	lea    rdx,[rip+0x301c9]        # 0x433080
  402eb7:	mov    rcx,rbx
  402eba:	call   0x4079d0
  402ebf:	test   eax,eax
  402ec1:	mov    esi,eax
  402ec3:	js     0x402eec
  402ec5:	mov    rax,QWORD PTR [rip+0x2a7f4]        # 0x42d6c0
  402ecc:	mov    edx,0x1
  402ed1:	mov    rcx,rbx
  402ed4:	mov    r8,QWORD PTR [rax]
  402ed7:	call   0x407b70
  402edc:	mov    rcx,rbx
  402edf:	call   0x4016d0
  402ee4:	add    rsp,0x30
  402ee8:	pop    rbx
  402ee9:	pop    rsi
  402eea:	pop    rdi
  402eeb:	ret    
  402eec:	mov    rbx,QWORD PTR [rip+0x36089]        # 0x438f7c
  402ef3:	call   rbx
  402ef5:	lea    r8,[rip+0x30184]        # 0x433080
  402efc:	lea    rdx,[rip+0x22572]        # 0x425475
  402f03:	lea    rcx,[rax+0x60]
  402f07:	call   0x401670
  402f0c:	mov    ecx,esi
  402f0e:	call   0x4078c0
  402f13:	mov    rsi,QWORD PTR [rsp+0x28]
  402f18:	mov    rdi,rax
  402f1b:	call   rbx
  402f1d:	lea    rdx,[rip+0x22567]        # 0x42548b
  402f24:	lea    rcx,[rax+0x60]
  402f28:	mov    r9,rdi
  402f2b:	mov    r8,rsi
  402f2e:	call   0x401670
  402f33:	mov    ecx,0x1
  402f38:	call   0x421e98
  402f3d:	nop
  402f3e:	xchg   ax,ax
  402f40:	push   rdi
  402f41:	push   rsi
  402f42:	push   rbx
  402f43:	sub    rsp,0x30
  402f47:	lea    r9,[rip+0x200f2]        # 0x423040
  402f4e:	lea    r8,[rip+0x201ab]        # 0x423100
  402f55:	lea    rdx,[rip+0x23194]        # 0x4260f0
  402f5c:	mov    rbx,rcx
  402f5f:	lea    rcx,[rip+0x3011a]        # 0x433080
  402f66:	call   0x401930
  402f6b:	lea    r8,[rsp+0x28]
  402f70:	lea    rdx,[rip+0x30109]        # 0x433080
  402f77:	mov    rcx,rbx
  402f7a:	call   0x4079d0
  402f7f:	test   eax,eax
  402f81:	mov    esi,eax
  402f83:	js     0x402fac
  402f85:	mov    rax,QWORD PTR [rip+0x2a734]        # 0x42d6c0
  402f8c:	mov    edx,0x1
  402f91:	mov    rcx,rbx
  402f94:	mov    r8,QWORD PTR [rax]
  402f97:	call   0x407b70
  402f9c:	mov    rcx,rbx
  402f9f:	call   0x4016d0
  402fa4:	add    rsp,0x30
  402fa8:	pop    rbx
  402fa9:	pop    rsi
  402faa:	pop    rdi
  402fab:	ret    
  402fac:	mov    rbx,QWORD PTR [rip+0x35fc9]        # 0x438f7c
  402fb3:	call   rbx
  402fb5:	lea    r8,[rip+0x300c4]        # 0x433080
  402fbc:	lea    rdx,[rip+0x224b2]        # 0x425475
  402fc3:	lea    rcx,[rax+0x60]
  402fc7:	call   0x401670
  402fcc:	mov    ecx,esi
  402fce:	call   0x4078c0
  402fd3:	mov    rsi,QWORD PTR [rsp+0x28]
  402fd8:	mov    rdi,rax
  402fdb:	call   rbx
  402fdd:	lea    rdx,[rip+0x224a7]        # 0x42548b
  402fe4:	lea    rcx,[rax+0x60]
  402fe8:	mov    r9,rdi
  402feb:	mov    r8,rsi
  402fee:	call   0x401670
  402ff3:	mov    ecx,0x1
  402ff8:	call   0x421e98
  402ffd:	nop
  402ffe:	xchg   ax,ax
  403000:	push   rdi
  403001:	push   rsi
  403002:	push   rbx
  403003:	sub    rsp,0x30
  403007:	lea    r9,[rip+0x20032]        # 0x423040
  40300e:	lea    r8,[rip+0x200eb]        # 0x423100
  403015:	lea    rdx,[rip+0x2319c]        # 0x4261b8
  40301c:	mov    rbx,rcx
  40301f:	lea    rcx,[rip+0x3005a]        # 0x433080
  403026:	call   0x401930
  40302b:	lea    r8,[rsp+0x28]
  403030:	lea    rdx,[rip+0x30049]        # 0x433080
  403037:	mov    rcx,rbx
  40303a:	call   0x4079d0
  40303f:	test   eax,eax
  403041:	mov    esi,eax
  403043:	js     0x40306c
  403045:	mov    rax,QWORD PTR [rip+0x2a674]        # 0x42d6c0
  40304c:	mov    edx,0x1
  403051:	mov    rcx,rbx
  403054:	mov    r8,QWORD PTR [rax]
  403057:	call   0x407b70
  40305c:	mov    rcx,rbx
  40305f:	call   0x4016d0
  403064:	add    rsp,0x30
  403068:	pop    rbx
  403069:	pop    rsi
  40306a:	pop    rdi
  40306b:	ret    
  40306c:	mov    rbx,QWORD PTR [rip+0x35f09]        # 0x438f7c
  403073:	call   rbx
  403075:	lea    r8,[rip+0x30004]        # 0x433080
  40307c:	lea    rdx,[rip+0x223f2]        # 0x425475
  403083:	lea    rcx,[rax+0x60]
  403087:	call   0x401670
  40308c:	mov    ecx,esi
  40308e:	call   0x4078c0
  403093:	mov    rsi,QWORD PTR [rsp+0x28]
  403098:	mov    rdi,rax
  40309b:	call   rbx
  40309d:	lea    rdx,[rip+0x223e7]        # 0x42548b
  4030a4:	lea    rcx,[rax+0x60]
  4030a8:	mov    r9,rdi
  4030ab:	mov    r8,rsi
  4030ae:	call   0x401670
  4030b3:	mov    ecx,0x1
  4030b8:	call   0x421e98
  4030bd:	nop
  4030be:	xchg   ax,ax
  4030c0:	push   rdi
  4030c1:	push   rsi
  4030c2:	push   rbx
  4030c3:	sub    rsp,0x30
  4030c7:	lea    r9,[rip+0x1ff72]        # 0x423040
  4030ce:	lea    r8,[rip+0x1ffeb]        # 0x4230c0
  4030d5:	lea    rdx,[rip+0x231ac]        # 0x426288
  4030dc:	mov    rbx,rcx
  4030df:	lea    rcx,[rip+0x2ff9a]        # 0x433080
  4030e6:	call   0x401930
  4030eb:	lea    r8,[rsp+0x28]
  4030f0:	lea    rdx,[rip+0x2ff89]        # 0x433080
  4030f7:	mov    rcx,rbx
  4030fa:	call   0x4079d0
  4030ff:	test   eax,eax
  403101:	mov    esi,eax
  403103:	js     0x40312c
  403105:	mov    rax,QWORD PTR [rip+0x2a5b4]        # 0x42d6c0
  40310c:	mov    edx,0x1
  403111:	mov    rcx,rbx
  403114:	mov    r8,QWORD PTR [rax]
  403117:	call   0x407b70
  40311c:	mov    rcx,rbx
  40311f:	call   0x4016d0
  403124:	add    rsp,0x30
  403128:	pop    rbx
  403129:	pop    rsi
  40312a:	pop    rdi
  40312b:	ret    
  40312c:	mov    rbx,QWORD PTR [rip+0x35e49]        # 0x438f7c
  403133:	call   rbx
  403135:	lea    r8,[rip+0x2ff44]        # 0x433080
  40313c:	lea    rdx,[rip+0x22332]        # 0x425475
  403143:	lea    rcx,[rax+0x60]
  403147:	call   0x401670
  40314c:	mov    ecx,esi
  40314e:	call   0x4078c0
  403153:	mov    rsi,QWORD PTR [rsp+0x28]
  403158:	mov    rdi,rax
  40315b:	call   rbx
  40315d:	lea    rdx,[rip+0x22327]        # 0x42548b
  403164:	lea    rcx,[rax+0x60]
  403168:	mov    r9,rdi
  40316b:	mov    r8,rsi
  40316e:	call   0x401670
  403173:	mov    ecx,0x1
  403178:	call   0x421e98
  40317d:	nop
  40317e:	xchg   ax,ax
  403180:	push   rdi
  403181:	push   rsi
  403182:	push   rbx
  403183:	sub    rsp,0x30
  403187:	lea    r9,[rip+0x1feb2]        # 0x423040
  40318e:	lea    r8,[rip+0x1ff6b]        # 0x423100
  403195:	lea    rdx,[rip+0x231bc]        # 0x426358
  40319c:	mov    rbx,rcx
  40319f:	lea    rcx,[rip+0x2feda]        # 0x433080
  4031a6:	call   0x401930
  4031ab:	lea    r8,[rsp+0x28]
  4031b0:	lea    rdx,[rip+0x2fec9]        # 0x433080
  4031b7:	mov    rcx,rbx
  4031ba:	call   0x4079d0
  4031bf:	test   eax,eax
  4031c1:	mov    esi,eax
  4031c3:	js     0x4031ec
  4031c5:	mov    rax,QWORD PTR [rip+0x2a4f4]        # 0x42d6c0
  4031cc:	mov    edx,0x1
  4031d1:	mov    rcx,rbx
  4031d4:	mov    r8,QWORD PTR [rax]
  4031d7:	call   0x407b70
  4031dc:	mov    rcx,rbx
  4031df:	call   0x4016d0
  4031e4:	add    rsp,0x30
  4031e8:	pop    rbx
  4031e9:	pop    rsi
  4031ea:	pop    rdi
  4031eb:	ret    
  4031ec:	mov    rbx,QWORD PTR [rip+0x35d89]        # 0x438f7c
  4031f3:	call   rbx
  4031f5:	lea    r8,[rip+0x2fe84]        # 0x433080
  4031fc:	lea    rdx,[rip+0x22272]        # 0x425475
  403203:	lea    rcx,[rax+0x60]
  403207:	call   0x401670
  40320c:	mov    ecx,esi
  40320e:	call   0x4078c0
  403213:	mov    rsi,QWORD PTR [rsp+0x28]
  403218:	mov    rdi,rax
  40321b:	call   rbx
  40321d:	lea    rdx,[rip+0x22267]        # 0x42548b
  403224:	lea    rcx,[rax+0x60]
  403228:	mov    r9,rdi
  40322b:	mov    r8,rsi
  40322e:	call   0x401670
  403233:	mov    ecx,0x1
  403238:	call   0x421e98
  40323d:	nop
  40323e:	xchg   ax,ax
  403240:	push   rdi
  403241:	push   rsi
  403242:	push   rbx
  403243:	sub    rsp,0x30
  403247:	lea    r9,[rip+0x1fdf2]        # 0x423040
  40324e:	lea    r8,[rip+0x1feab]        # 0x423100
  403255:	lea    rdx,[rip+0x2317c]        # 0x4263d8
  40325c:	mov    rbx,rcx
  40325f:	lea    rcx,[rip+0x2fe1a]        # 0x433080
  403266:	call   0x401930
  40326b:	lea    r8,[rsp+0x28]
  403270:	lea    rdx,[rip+0x2fe09]        # 0x433080
  403277:	mov    rcx,rbx
  40327a:	call   0x4079d0
  40327f:	test   eax,eax
  403281:	mov    esi,eax
  403283:	js     0x4032ac
  403285:	mov    rax,QWORD PTR [rip+0x2a434]        # 0x42d6c0
  40328c:	mov    edx,0x1
  403291:	mov    rcx,rbx
  403294:	mov    r8,QWORD PTR [rax]
  403297:	call   0x407b70
  40329c:	mov    rcx,rbx
  40329f:	call   0x4016d0
  4032a4:	add    rsp,0x30
  4032a8:	pop    rbx
  4032a9:	pop    rsi
  4032aa:	pop    rdi
  4032ab:	ret    
  4032ac:	mov    rbx,QWORD PTR [rip+0x35cc9]        # 0x438f7c
  4032b3:	call   rbx
  4032b5:	lea    r8,[rip+0x2fdc4]        # 0x433080
  4032bc:	lea    rdx,[rip+0x221b2]        # 0x425475
  4032c3:	lea    rcx,[rax+0x60]
  4032c7:	call   0x401670
  4032cc:	mov    ecx,esi
  4032ce:	call   0x4078c0
  4032d3:	mov    rsi,QWORD PTR [rsp+0x28]
  4032d8:	mov    rdi,rax
  4032db:	call   rbx
  4032dd:	lea    rdx,[rip+0x221a7]        # 0x42548b
  4032e4:	lea    rcx,[rax+0x60]
  4032e8:	mov    r9,rdi
  4032eb:	mov    r8,rsi
  4032ee:	call   0x401670
  4032f3:	mov    ecx,0x1
  4032f8:	call   0x421e98
  4032fd:	nop
  4032fe:	xchg   ax,ax
  403300:	push   rdi
  403301:	push   rsi
  403302:	push   rbx
  403303:	sub    rsp,0x30
  403307:	lea    r8,[rip+0x1fd32]        # 0x423040
  40330e:	lea    rdx,[rip+0x23143]        # 0x426458
  403315:	mov    rbx,rcx
  403318:	lea    rcx,[rip+0x2fd61]        # 0x433080
  40331f:	call   0x401930
  403324:	lea    r8,[rsp+0x28]
  403329:	lea    rdx,[rip+0x2fd50]        # 0x433080
  403330:	mov    rcx,rbx
  403333:	call   0x4079d0
  403338:	test   eax,eax
  40333a:	mov    esi,eax
  40333c:	js     0x403373
  40333e:	mov    rax,QWORD PTR [rip+0x2a37b]        # 0x42d6c0
  403345:	mov    edx,0x1
  40334a:	mov    rcx,rbx
  40334d:	mov    r8,QWORD PTR [rax]
  403350:	call   0x407b70
  403355:	mov    rcx,rbx
  403358:	call   0x4016d0
  40335d:	test   eax,eax
  40335f:	jne    0x40336b
  403361:	mov    DWORD PTR [rip+0x2ff21],0x1        # 0x43328c
  40336b:	add    rsp,0x30
  40336f:	pop    rbx
  403370:	pop    rsi
  403371:	pop    rdi
  403372:	ret    
  403373:	mov    rbx,QWORD PTR [rip+0x35c02]        # 0x438f7c
  40337a:	call   rbx
  40337c:	lea    r8,[rip+0x2fcfd]        # 0x433080
  403383:	lea    rdx,[rip+0x220eb]        # 0x425475
  40338a:	lea    rcx,[rax+0x60]
  40338e:	call   0x401670
  403393:	mov    ecx,esi
  403395:	call   0x4078c0
  40339a:	mov    rsi,QWORD PTR [rsp+0x28]
  40339f:	mov    rdi,rax
  4033a2:	call   rbx
  4033a4:	lea    rdx,[rip+0x220e0]        # 0x42548b
  4033ab:	lea    rcx,[rax+0x60]
  4033af:	mov    r9,rdi
  4033b2:	mov    r8,rsi
  4033b5:	call   0x401670
  4033ba:	mov    ecx,0x1
  4033bf:	call   0x421e98
  4033c4:	nop
  4033c5:	nop
  4033c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033d0:	push   rdi
  4033d1:	push   rsi
  4033d2:	push   rbx
  4033d3:	sub    rsp,0x30
  4033d7:	mov    edx,DWORD PTR [rip+0x2feaf]        # 0x43328c
  4033dd:	mov    eax,0x3
  4033e2:	test   edx,edx
  4033e4:	je     0x4033f0
  4033e6:	add    rsp,0x30
  4033ea:	pop    rbx
  4033eb:	pop    rsi
  4033ec:	pop    rdi
  4033ed:	ret    
  4033ee:	xchg   ax,ax
  4033f0:	mov    rbx,rcx
  4033f3:	lea    r8,[rip+0x1fc46]        # 0x423040
  4033fa:	lea    rdx,[rip+0x2313f]        # 0x426540
  403401:	lea    rcx,[rip+0x2fc78]        # 0x433080
  403408:	call   0x401930
  40340d:	lea    r8,[rsp+0x28]
  403412:	lea    rdx,[rip+0x2fc67]        # 0x433080
  403419:	mov    rcx,rbx
  40341c:	call   0x4079d0
  403421:	test   eax,eax
  403423:	mov    esi,eax
  403425:	js     0x4034d4
  40342b:	mov    rax,QWORD PTR [rip+0x2a28e]        # 0x42d6c0
  403432:	mov    edx,0x1
  403437:	mov    rcx,rbx
  40343a:	mov    r8,QWORD PTR [rax]
  40343d:	call   0x407b70
  403442:	mov    rcx,rbx
  403445:	call   0x4016d0
  40344a:	test   eax,eax
  40344c:	jne    0x4033e6
  40344e:	lea    r9,[rip+0x1fbeb]        # 0x423040
  403455:	mov    r10,r9
  403458:	mov    rcx,r9
  40345b:	mov    r8d,DWORD PTR [rcx]
  40345e:	add    rcx,0x4
  403462:	lea    edx,[r8-0x1010101]
  403469:	not    r8d
  40346c:	and    edx,r8d
  40346f:	and    edx,0x80808080
  403475:	je     0x40345b
  403477:	mov    r8d,edx
  40347a:	movabs rdi,0x54534554414c253a
  403484:	mov    DWORD PTR [rip+0x2fdfe],0x1        # 0x43328c
  40348e:	shr    r8d,0x10
  403492:	test   edx,0x8080
  403498:	cmove  edx,r8d
  40349c:	lea    r8,[rcx+0x2]
  4034a0:	cmove  rcx,r8
  4034a4:	add    dl,dl
  4034a6:	sbb    rcx,0x3
  4034aa:	sub    rcx,r9
  4034ad:	add    rcx,r10
  4034b0:	mov    QWORD PTR [rcx],rdi
  4034b3:	movabs rdi,0x5f44524f4345525f
  4034bd:	mov    QWORD PTR [rcx+0x8],rdi
  4034c1:	movabs rdi,0x4e4f4953524556
  4034cb:	mov    QWORD PTR [rcx+0x10],rdi
  4034cf:	jmp    0x4033e6
  4034d4:	mov    rbx,QWORD PTR [rip+0x35aa1]        # 0x438f7c
  4034db:	call   rbx
  4034dd:	lea    r8,[rip+0x2fb9c]        # 0x433080
  4034e4:	lea    rdx,[rip+0x21f8a]        # 0x425475
  4034eb:	lea    rcx,[rax+0x60]
  4034ef:	call   0x401670
  4034f4:	mov    ecx,esi
  4034f6:	call   0x4078c0
  4034fb:	mov    rsi,QWORD PTR [rsp+0x28]
  403500:	mov    rdi,rax
  403503:	call   rbx
  403505:	lea    rdx,[rip+0x21f7f]        # 0x42548b
  40350c:	lea    rcx,[rax+0x60]
  403510:	mov    r9,rdi
  403513:	mov    r8,rsi
  403516:	call   0x401670
  40351b:	mov    ecx,0x1
  403520:	call   0x421e98
  403525:	nop
  403526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403530:	push   rdi
  403531:	push   rsi
  403532:	push   rbx
  403533:	sub    rsp,0x30
  403537:	lea    r8,[rip+0x1fb02]        # 0x423040
  40353e:	lea    rdx,[rip+0x230e3]        # 0x426628
  403545:	mov    rbx,rcx
  403548:	lea    rcx,[rip+0x2fb31]        # 0x433080
  40354f:	call   0x401930
  403554:	lea    r8,[rsp+0x28]
  403559:	lea    rdx,[rip+0x2fb20]        # 0x433080
  403560:	mov    rcx,rbx
  403563:	call   0x4079d0
  403568:	test   eax,eax
  40356a:	mov    esi,eax
  40356c:	js     0x403617
  403572:	mov    rax,QWORD PTR [rip+0x2a147]        # 0x42d6c0
  403579:	mov    edx,0x1
  40357e:	mov    rcx,rbx
  403581:	mov    r8,QWORD PTR [rax]
  403584:	call   0x407b70
  403589:	mov    rcx,rbx
  40358c:	call   0x4016d0
  403591:	test   eax,eax
  403593:	jne    0x4035b0
  403595:	mov    DWORD PTR [rip+0x2fced],0x1        # 0x43328c
  40359f:	add    rsp,0x30
  4035a3:	pop    rbx
  4035a4:	pop    rsi
  4035a5:	pop    rdi
  4035a6:	ret    
  4035a7:	nop    WORD PTR [rax+rax*1+0x0]
  4035b0:	lea    r9,[rip+0x1fa89]        # 0x423040
  4035b7:	mov    r10,r9
  4035ba:	mov    rcx,r9
  4035bd:	mov    r8d,DWORD PTR [rcx]
  4035c0:	add    rcx,0x4
  4035c4:	lea    edx,[r8-0x1010101]
  4035cb:	not    r8d
  4035ce:	and    edx,r8d
  4035d1:	and    edx,0x80808080
  4035d7:	je     0x4035bd
  4035d9:	mov    r8d,edx
  4035dc:	movabs rdi,0x5441504d4f43253a
  4035e6:	shr    r8d,0x10
  4035ea:	test   edx,0x8080
  4035f0:	cmove  edx,r8d
  4035f4:	lea    r8,[rcx+0x2]
  4035f8:	cmove  rcx,r8
  4035fc:	add    dl,dl
  4035fe:	sbb    rcx,0x3
  403602:	sub    rcx,r9
  403605:	add    rcx,r10
  403608:	mov    QWORD PTR [rcx],rdi
  40360b:	mov    BYTE PTR [rcx+0x8],0x0
  40360f:	add    rsp,0x30
  403613:	pop    rbx
  403614:	pop    rsi
  403615:	pop    rdi
  403616:	ret    
  403617:	mov    rbx,QWORD PTR [rip+0x3595e]        # 0x438f7c
  40361e:	call   rbx
  403620:	lea    r8,[rip+0x2fa59]        # 0x433080
  403627:	lea    rdx,[rip+0x21e47]        # 0x425475
  40362e:	lea    rcx,[rax+0x60]
  403632:	call   0x401670
  403637:	mov    ecx,esi
  403639:	call   0x4078c0
  40363e:	mov    rsi,QWORD PTR [rsp+0x28]
  403643:	mov    rdi,rax
  403646:	call   rbx
  403648:	lea    rdx,[rip+0x21e3c]        # 0x42548b
  40364f:	lea    rcx,[rax+0x60]
  403653:	mov    r9,rdi
  403656:	mov    r8,rsi
  403659:	call   0x401670
  40365e:	mov    ecx,0x1
  403663:	call   0x421e98
  403668:	nop
  403669:	nop    DWORD PTR [rax+0x0]
  403670:	push   rdi
  403671:	push   rsi
  403672:	push   rbx
  403673:	sub    rsp,0x30
  403677:	lea    r9,[rip+0x1f9c2]        # 0x423040
  40367e:	lea    r8,[rip+0x1fa7b]        # 0x423100
  403685:	lea    rdx,[rip+0x21d24]        # 0x4253b0
  40368c:	mov    rbx,rcx
  40368f:	lea    rcx,[rip+0x2f9ea]        # 0x433080
  403696:	call   0x401930
  40369b:	lea    r8,[rsp+0x28]
  4036a0:	lea    rdx,[rip+0x2f9d9]        # 0x433080
  4036a7:	mov    rcx,rbx
  4036aa:	call   0x4079d0
  4036af:	test   eax,eax
  4036b1:	mov    esi,eax
  4036b3:	js     0x40377b
  4036b9:	mov    rax,QWORD PTR [rip+0x2a000]        # 0x42d6c0
  4036c0:	mov    edx,0x1
  4036c5:	mov    rcx,rbx
  4036c8:	mov    r8,QWORD PTR [rax]
  4036cb:	call   0x407b70
  4036d0:	mov    edx,0x1000
  4036d5:	mov    rcx,rbx
  4036d8:	call   0x407978
  4036dd:	mov    rcx,rbx
  4036e0:	call   0x4016d0
  4036e5:	test   eax,eax
  4036e7:	jne    0x403700
  4036e9:	mov    DWORD PTR [rip+0x1fa41],0x1        # 0x423134
  4036f3:	add    rsp,0x30
  4036f7:	pop    rbx
  4036f8:	pop    rsi
  4036f9:	pop    rdi
  4036fa:	ret    
  4036fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403700:	lea    r9,[rip+0x1f939]        # 0x423040
  403707:	mov    DWORD PTR [rip+0x1fa23],0x0        # 0x423134
  403711:	mov    r10,r9
  403714:	mov    rcx,r9
  403717:	mov    r8d,DWORD PTR [rcx]
  40371a:	add    rcx,0x4
  40371e:	lea    edx,[r8-0x1010101]
  403725:	not    r8d
  403728:	and    edx,r8d
  40372b:	and    edx,0x80808080
  403731:	je     0x403717
  403733:	mov    r8d,edx
  403736:	movabs rdi,0x5458455f4f4e253a
  403740:	shr    r8d,0x10
  403744:	test   edx,0x8080
  40374a:	cmove  edx,r8d
  40374e:	lea    r8,[rcx+0x2]
  403752:	cmove  rcx,r8
  403756:	add    dl,dl
  403758:	sbb    rcx,0x3
  40375c:	sub    rcx,r9
  40375f:	add    rcx,r10
  403762:	mov    QWORD PTR [rcx],rdi
  403765:	movabs rdi,0x534e4f49534e45
  40376f:	mov    QWORD PTR [rcx+0x8],rdi
  403773:	add    rsp,0x30
  403777:	pop    rbx
  403778:	pop    rsi
  403779:	pop    rdi
  40377a:	ret    
  40377b:	mov    rbx,QWORD PTR [rip+0x357fa]        # 0x438f7c
  403782:	call   rbx
  403784:	lea    r8,[rip+0x2f8f5]        # 0x433080
  40378b:	lea    rdx,[rip+0x21ce3]        # 0x425475
  403792:	lea    rcx,[rax+0x60]
  403796:	call   0x401670
  40379b:	mov    ecx,esi
  40379d:	call   0x4078c0
  4037a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4037a7:	mov    rdi,rax
  4037aa:	call   rbx
  4037ac:	lea    rdx,[rip+0x21cd8]        # 0x42548b
  4037b3:	lea    rcx,[rax+0x60]
  4037b7:	mov    r9,rdi
  4037ba:	mov    r8,rsi
  4037bd:	call   0x401670
  4037c2:	mov    ecx,0x1
  4037c7:	call   0x421e98
  4037cc:	nop
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	push   rdi
  4037d1:	push   rsi
  4037d2:	push   rbx
  4037d3:	sub    rsp,0x30
  4037d7:	lea    r8,[rip+0x1f862]        # 0x423040
  4037de:	lea    rdx,[rip+0x22efb]        # 0x4266e0
  4037e5:	mov    rbx,rcx
  4037e8:	lea    rcx,[rip+0x2f891]        # 0x433080
  4037ef:	call   0x401930
  4037f4:	lea    r8,[rsp+0x28]
  4037f9:	lea    rdx,[rip+0x2f880]        # 0x433080
  403800:	mov    rcx,rbx
  403803:	call   0x4079d0
  403808:	test   eax,eax
  40380a:	mov    esi,eax
  40380c:	js     0x403843
  40380e:	mov    rax,QWORD PTR [rip+0x29eab]        # 0x42d6c0
  403815:	mov    edx,0x1
  40381a:	mov    rcx,rbx
  40381d:	mov    r8,QWORD PTR [rax]
  403820:	call   0x407b70
  403825:	mov    rcx,rbx
  403828:	call   0x4016d0
  40382d:	test   eax,eax
  40382f:	jne    0x40383b
  403831:	mov    DWORD PTR [rip+0x2fa45],0x1        # 0x433280
  40383b:	add    rsp,0x30
  40383f:	pop    rbx
  403840:	pop    rsi
  403841:	pop    rdi
  403842:	ret    
  403843:	mov    rbx,QWORD PTR [rip+0x35732]        # 0x438f7c
  40384a:	call   rbx
  40384c:	lea    r8,[rip+0x2f82d]        # 0x433080
  403853:	lea    rdx,[rip+0x21c1b]        # 0x425475
  40385a:	lea    rcx,[rax+0x60]
  40385e:	call   0x401670
  403863:	mov    ecx,esi
  403865:	call   0x4078c0
  40386a:	mov    rsi,QWORD PTR [rsp+0x28]
  40386f:	mov    rdi,rax
  403872:	call   rbx
  403874:	lea    rdx,[rip+0x21c10]        # 0x42548b
  40387b:	lea    rcx,[rax+0x60]
  40387f:	mov    r9,rdi
  403882:	mov    r8,rsi
  403885:	call   0x401670
  40388a:	mov    ecx,0x1
  40388f:	call   0x421e98
  403894:	nop
  403895:	nop
  403896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038a0:	push   rdi
  4038a1:	push   rsi
  4038a2:	push   rbx
  4038a3:	sub    rsp,0x30
  4038a7:	lea    r8,[rip+0x1f792]        # 0x423040
  4038ae:	lea    rdx,[rip+0x22efb]        # 0x4267b0
  4038b5:	mov    rbx,rcx
  4038b8:	lea    rcx,[rip+0x2f7c1]        # 0x433080
  4038bf:	call   0x401930
  4038c4:	lea    r8,[rsp+0x28]
  4038c9:	lea    rdx,[rip+0x2f7b0]        # 0x433080
  4038d0:	mov    rcx,rbx
  4038d3:	call   0x4079d0
  4038d8:	test   eax,eax
  4038da:	mov    esi,eax
  4038dc:	js     0x403913
  4038de:	mov    rax,QWORD PTR [rip+0x29ddb]        # 0x42d6c0
  4038e5:	mov    edx,0x1
  4038ea:	mov    rcx,rbx
  4038ed:	mov    r8,QWORD PTR [rax]
  4038f0:	call   0x407b70
  4038f5:	mov    rcx,rbx
  4038f8:	call   0x4016d0
  4038fd:	test   eax,eax
  4038ff:	jne    0x40390b
  403901:	mov    DWORD PTR [rip+0x2f979],0x1        # 0x433284
  40390b:	add    rsp,0x30
  40390f:	pop    rbx
  403910:	pop    rsi
  403911:	pop    rdi
  403912:	ret    
  403913:	mov    rbx,QWORD PTR [rip+0x35662]        # 0x438f7c
  40391a:	call   rbx
  40391c:	lea    r8,[rip+0x2f75d]        # 0x433080
  403923:	lea    rdx,[rip+0x21b4b]        # 0x425475
  40392a:	lea    rcx,[rax+0x60]
  40392e:	call   0x401670
  403933:	mov    ecx,esi
  403935:	call   0x4078c0
  40393a:	mov    rsi,QWORD PTR [rsp+0x28]
  40393f:	mov    rdi,rax
  403942:	call   rbx
  403944:	lea    rdx,[rip+0x21b40]        # 0x42548b
  40394b:	lea    rcx,[rax+0x60]
  40394f:	mov    r9,rdi
  403952:	mov    r8,rsi
  403955:	call   0x401670
  40395a:	mov    ecx,0x1
  40395f:	call   0x421e98
  403964:	nop
  403965:	nop
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403970:	push   rdi
  403971:	push   rsi
  403972:	push   rbx
  403973:	sub    rsp,0x30
  403977:	mov    edx,DWORD PTR [rip+0x2f907]        # 0x433284
  40397d:	mov    eax,0x3
  403982:	test   edx,edx
  403984:	je     0x403990
  403986:	add    rsp,0x30
  40398a:	pop    rbx
  40398b:	pop    rsi
  40398c:	pop    rdi
  40398d:	ret    
  40398e:	xchg   ax,ax
  403990:	mov    rbx,rcx
  403993:	lea    r8,[rip+0x1f6a6]        # 0x423040
  40399a:	lea    rdx,[rip+0x22edf]        # 0x426880
  4039a1:	lea    rcx,[rip+0x2f6d8]        # 0x433080
  4039a8:	call   0x401930
  4039ad:	lea    r8,[rsp+0x28]
  4039b2:	lea    rdx,[rip+0x2f6c7]        # 0x433080
  4039b9:	mov    rcx,rbx
  4039bc:	call   0x4079d0
  4039c1:	test   eax,eax
  4039c3:	mov    esi,eax
  4039c5:	js     0x403a1b
  4039c7:	mov    rax,QWORD PTR [rip+0x29cf2]        # 0x42d6c0
  4039ce:	mov    edx,0x1
  4039d3:	mov    rcx,rbx
  4039d6:	mov    r8,QWORD PTR [rax]
  4039d9:	call   0x407b70
  4039de:	mov    rcx,rbx
  4039e1:	call   0x4016d0
  4039e6:	mov    edx,eax
  4039e8:	mov    eax,0x1
  4039ed:	test   edx,edx
  4039ef:	jne    0x403986
  4039f1:	mov    rcx,rbx
  4039f4:	call   0x4079b8
  4039f9:	mov    edx,eax
  4039fb:	xor    eax,eax
  4039fd:	cmp    edx,0x2
  403a00:	je     0x403986
  403a02:	mov    rcx,rbx
  403a05:	call   0x4079b8
  403a0a:	cmp    eax,0x1
  403a0d:	sete   al
  403a10:	movzx  eax,al
  403a13:	add    eax,0x1
  403a16:	jmp    0x403986
  403a1b:	mov    rbx,QWORD PTR [rip+0x3555a]        # 0x438f7c
  403a22:	call   rbx
  403a24:	lea    r8,[rip+0x2f655]        # 0x433080
  403a2b:	lea    rdx,[rip+0x21a43]        # 0x425475
  403a32:	lea    rcx,[rax+0x60]
  403a36:	call   0x401670
  403a3b:	mov    ecx,esi
  403a3d:	call   0x4078c0
  403a42:	mov    rsi,QWORD PTR [rsp+0x28]
  403a47:	mov    rdi,rax
  403a4a:	call   rbx
  403a4c:	lea    rdx,[rip+0x21a38]        # 0x42548b
  403a53:	lea    rcx,[rax+0x60]
  403a57:	mov    r9,rdi
  403a5a:	mov    r8,rsi
  403a5d:	call   0x401670
  403a62:	mov    ecx,0x1
  403a67:	call   0x421e98
  403a6c:	nop
  403a6d:	nop    DWORD PTR [rax]
  403a70:	push   rdi
  403a71:	push   rsi
  403a72:	push   rbx
  403a73:	sub    rsp,0x30
  403a77:	lea    r8,[rip+0x1f5c2]        # 0x423040
  403a7e:	lea    rdx,[rip+0x22eeb]        # 0x426970
  403a85:	mov    rbx,rcx
  403a88:	lea    rcx,[rip+0x2f5f1]        # 0x433080
  403a8f:	call   0x401930
  403a94:	lea    r8,[rsp+0x28]
  403a99:	lea    rdx,[rip+0x2f5e0]        # 0x433080
  403aa0:	mov    rcx,rbx
  403aa3:	call   0x4079d0
  403aa8:	test   eax,eax
  403aaa:	mov    esi,eax
  403aac:	js     0x403b0b
  403aae:	mov    rax,QWORD PTR [rip+0x29c0b]        # 0x42d6c0
  403ab5:	mov    edx,0x1
  403aba:	mov    rcx,rbx
  403abd:	mov    r8,QWORD PTR [rax]
  403ac0:	call   0x407b70
  403ac5:	mov    edx,0x3
  403aca:	mov    r8d,0x7
  403ad0:	mov    rcx,rbx
  403ad3:	call   0x407c58
  403ad8:	mov    rcx,rbx
  403adb:	call   0x4016d0
  403ae0:	test   eax,eax
  403ae2:	mov    edx,0x1
  403ae7:	jne    0x403b01
  403ae9:	mov    rcx,rbx
  403aec:	call   0x4079b8
  403af1:	mov    ecx,eax
  403af3:	call   0x4079c0
  403af8:	xor    edx,edx
  403afa:	mov    QWORD PTR [rip+0x1f637],rax        # 0x423138
  403b01:	mov    eax,edx
  403b03:	add    rsp,0x30
  403b07:	pop    rbx
  403b08:	pop    rsi
  403b09:	pop    rdi
  403b0a:	ret    
  403b0b:	mov    rbx,QWORD PTR [rip+0x3546a]        # 0x438f7c
  403b12:	call   rbx
  403b14:	lea    r8,[rip+0x2f565]        # 0x433080
  403b1b:	lea    rdx,[rip+0x21953]        # 0x425475
  403b22:	lea    rcx,[rax+0x60]
  403b26:	call   0x401670
  403b2b:	mov    ecx,esi
  403b2d:	call   0x4078c0
  403b32:	mov    rsi,QWORD PTR [rsp+0x28]
  403b37:	mov    rdi,rax
  403b3a:	call   rbx
  403b3c:	lea    rdx,[rip+0x21948]        # 0x42548b
  403b43:	lea    rcx,[rax+0x60]
  403b47:	mov    r9,rdi
  403b4a:	mov    r8,rsi
  403b4d:	call   0x401670
  403b52:	mov    ecx,0x1
  403b57:	call   0x421e98
  403b5c:	nop
  403b5d:	nop    DWORD PTR [rax]
  403b60:	push   rdi
  403b61:	push   rsi
  403b62:	push   rbx
  403b63:	sub    rsp,0x30
  403b67:	mov    r8d,DWORD PTR [rip+0x2f71e]        # 0x43328c
  403b6e:	mov    eax,0x3
  403b73:	test   r8d,r8d
  403b76:	je     0x403b80
  403b78:	add    rsp,0x30
  403b7c:	pop    rbx
  403b7d:	pop    rsi
  403b7e:	pop    rdi
  403b7f:	ret    
  403b80:	mov    rbx,rcx
  403b83:	lea    r9,[rip+0x1f4b6]        # 0x423040
  403b8a:	lea    r8,[rip+0x1f56f]        # 0x423100
  403b91:	lea    rdx,[rip+0x21818]        # 0x4253b0
  403b98:	lea    rcx,[rip+0x2f4e1]        # 0x433080
  403b9f:	call   0x401930
  403ba4:	lea    r8,[rsp+0x28]
  403ba9:	lea    rdx,[rip+0x2f4d0]        # 0x433080
  403bb0:	mov    rcx,rbx
  403bb3:	call   0x4079d0
  403bb8:	test   eax,eax
  403bba:	mov    esi,eax
  403bbc:	js     0x403c13
  403bbe:	mov    rax,QWORD PTR [rip+0x29afb]        # 0x42d6c0
  403bc5:	mov    edx,0x1
  403bca:	mov    rcx,rbx
  403bcd:	mov    r8,QWORD PTR [rax]
  403bd0:	call   0x407b70
  403bd5:	mov    rcx,rbx
  403bd8:	call   0x4016d0
  403bdd:	cmp    eax,0x1
  403be0:	jne    0x403b78
  403be2:	mov    edx,DWORD PTR [rip+0x2f6a0]        # 0x433288
  403be8:	test   edx,edx
  403bea:	je     0x403b78
  403bec:	movabs rdi,0x53532d535245562b
  403bf6:	mov    DWORD PTR [rip+0x1f508],0x302e334c        # 0x423108
  403c00:	mov    BYTE PTR [rip+0x1f505],0x0        # 0x42310c
  403c07:	mov    QWORD PTR [rip+0x1f4f2],rdi        # 0x423100
  403c0e:	jmp    0x403b78
  403c13:	mov    rbx,QWORD PTR [rip+0x35362]        # 0x438f7c
  403c1a:	call   rbx
  403c1c:	lea    r8,[rip+0x2f45d]        # 0x433080
  403c23:	lea    rdx,[rip+0x2184b]        # 0x425475
  403c2a:	lea    rcx,[rax+0x60]
  403c2e:	call   0x401670
  403c33:	mov    ecx,esi
  403c35:	call   0x4078c0
  403c3a:	mov    rsi,QWORD PTR [rsp+0x28]
  403c3f:	mov    rdi,rax
  403c42:	call   rbx
  403c44:	lea    rdx,[rip+0x21840]        # 0x42548b
  403c4b:	lea    rcx,[rax+0x60]
  403c4f:	mov    r9,rdi
  403c52:	mov    r8,rsi
  403c55:	call   0x401670
  403c5a:	mov    ecx,0x1
  403c5f:	call   0x421e98
  403c64:	nop
  403c65:	nop
  403c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c70:	push   rdi
  403c71:	push   rsi
  403c72:	push   rbx
  403c73:	sub    rsp,0x30
  403c77:	mov    edx,DWORD PTR [rip+0x2f607]        # 0x433284
  403c7d:	mov    eax,0x3
  403c82:	test   edx,edx
  403c84:	je     0x403c90
  403c86:	add    rsp,0x30
  403c8a:	pop    rbx
  403c8b:	pop    rsi
  403c8c:	pop    rdi
  403c8d:	ret    
  403c8e:	xchg   ax,ax
  403c90:	mov    rbx,rcx
  403c93:	lea    r9,[rip+0x1f3a6]        # 0x423040
  403c9a:	lea    r8,[rip+0x1f45f]        # 0x423100
  403ca1:	lea    rdx,[rip+0x21708]        # 0x4253b0
  403ca8:	lea    rcx,[rip+0x2f3d1]        # 0x433080
  403caf:	call   0x401930
  403cb4:	lea    r8,[rsp+0x28]
  403cb9:	lea    rdx,[rip+0x2f3c0]        # 0x433080
  403cc0:	mov    rcx,rbx
  403cc3:	call   0x4079d0
  403cc8:	test   eax,eax
  403cca:	mov    esi,eax
  403ccc:	js     0x403d1c
  403cce:	mov    rax,QWORD PTR [rip+0x299eb]        # 0x42d6c0
  403cd5:	mov    rcx,rbx
  403cd8:	mov    edx,0x1
  403cdd:	mov    r8,QWORD PTR [rax]
  403ce0:	call   0x407b70
  403ce5:	mov    rcx,rbx
  403ce8:	call   0x4016d0
  403ced:	cmp    eax,0x1
  403cf0:	mov    ebx,eax
  403cf2:	je     0x403d00
  403cf4:	mov    eax,ebx
  403cf6:	add    rsp,0x30
  403cfa:	pop    rbx
  403cfb:	pop    rsi
  403cfc:	pop    rdi
  403cfd:	ret    
  403cfe:	xchg   ax,ax
  403d00:	lea    r8,[rip+0x22d64]        # 0x426a6b
  403d07:	lea    rcx,[rip+0x1f3f2]        # 0x423100
  403d0e:	mov    edx,0x34
  403d13:	call   0x414cf0
  403d18:	mov    eax,ebx
  403d1a:	jmp    0x403cf6
  403d1c:	mov    rbx,QWORD PTR [rip+0x35259]        # 0x438f7c
  403d23:	call   rbx
  403d25:	lea    r8,[rip+0x2f354]        # 0x433080
  403d2c:	lea    rdx,[rip+0x21742]        # 0x425475
  403d33:	lea    rcx,[rax+0x60]
  403d37:	call   0x401670
  403d3c:	mov    ecx,esi
  403d3e:	call   0x4078c0
  403d43:	mov    rsi,QWORD PTR [rsp+0x28]
  403d48:	mov    rdi,rax
  403d4b:	call   rbx
  403d4d:	lea    rdx,[rip+0x21737]        # 0x42548b
  403d54:	lea    rcx,[rax+0x60]
  403d58:	mov    r9,rdi
  403d5b:	mov    r8,rsi
  403d5e:	call   0x401670
  403d63:	mov    ecx,0x1
  403d68:	call   0x421e98
  403d6d:	nop
  403d6e:	xchg   ax,ax
  403d70:	push   rdi
  403d71:	push   rsi
  403d72:	push   rbx
  403d73:	sub    rsp,0x30
  403d77:	mov    edx,DWORD PTR [rip+0x2f503]        # 0x433280
  403d7d:	mov    eax,0x3
  403d82:	test   edx,edx
  403d84:	je     0x403d90
  403d86:	add    rsp,0x30
  403d8a:	pop    rbx
  403d8b:	pop    rsi
  403d8c:	pop    rdi
  403d8d:	ret    
  403d8e:	xchg   ax,ax
  403d90:	mov    rbx,rcx
  403d93:	lea    r9,[rip+0x1f2a6]        # 0x423040
  403d9a:	lea    r8,[rip+0x1f35f]        # 0x423100
  403da1:	lea    rdx,[rip+0x21608]        # 0x4253b0
  403da8:	lea    rcx,[rip+0x2f2d1]        # 0x433080
  403daf:	call   0x401930
  403db4:	lea    r8,[rsp+0x28]
  403db9:	lea    rdx,[rip+0x2f2c0]        # 0x433080
  403dc0:	mov    rcx,rbx
  403dc3:	call   0x4079d0
  403dc8:	test   eax,eax
  403dca:	mov    esi,eax
  403dcc:	js     0x403e1c
  403dce:	mov    rax,QWORD PTR [rip+0x298eb]        # 0x42d6c0
  403dd5:	mov    rcx,rbx
  403dd8:	mov    edx,0x1
  403ddd:	mov    r8,QWORD PTR [rax]
  403de0:	call   0x407b70
  403de5:	mov    rcx,rbx
  403de8:	call   0x4016d0
  403ded:	cmp    eax,0x1
  403df0:	mov    ebx,eax
  403df2:	je     0x403e00
  403df4:	mov    eax,ebx
  403df6:	add    rsp,0x30
  403dfa:	pop    rbx
  403dfb:	pop    rsi
  403dfc:	pop    rdi
  403dfd:	ret    
  403dfe:	xchg   ax,ax
  403e00:	lea    r8,[rip+0x22c81]        # 0x426a88
  403e07:	lea    rcx,[rip+0x1f2f2]        # 0x423100
  403e0e:	mov    edx,0x34
  403e13:	call   0x414cf0
  403e18:	mov    eax,ebx
  403e1a:	jmp    0x403df6
  403e1c:	mov    rbx,QWORD PTR [rip+0x35159]        # 0x438f7c
  403e23:	call   rbx
  403e25:	lea    r8,[rip+0x2f254]        # 0x433080
  403e2c:	lea    rdx,[rip+0x21642]        # 0x425475
  403e33:	lea    rcx,[rax+0x60]
  403e37:	call   0x401670
  403e3c:	mov    ecx,esi
  403e3e:	call   0x4078c0
  403e43:	mov    rsi,QWORD PTR [rsp+0x28]
  403e48:	mov    rdi,rax
  403e4b:	call   rbx
  403e4d:	lea    rdx,[rip+0x21637]        # 0x42548b
  403e54:	lea    rcx,[rax+0x60]
  403e58:	mov    r9,rdi
  403e5b:	mov    r8,rsi
  403e5e:	call   0x401670
  403e63:	mov    ecx,0x1
  403e68:	call   0x421e98
  403e6d:	nop
  403e6e:	xchg   ax,ax
  403e70:	push   rdi
  403e71:	push   rsi
  403e72:	push   rbx
  403e73:	sub    rsp,0x30
  403e77:	lea    r9,[rip+0x1f1c2]        # 0x423040
  403e7e:	lea    r8,[rip+0x1f27b]        # 0x423100
  403e85:	lea    rdx,[rip+0x22c24]        # 0x426ab0
  403e8c:	mov    rbx,rcx
  403e8f:	lea    rcx,[rip+0x2f1ea]        # 0x433080
  403e96:	call   0x401930
  403e9b:	lea    r8,[rsp+0x28]
  403ea0:	lea    rdx,[rip+0x2f1d9]        # 0x433080
  403ea7:	mov    rcx,rbx
  403eaa:	call   0x4079d0
  403eaf:	test   eax,eax
  403eb1:	mov    esi,eax
  403eb3:	js     0x403efa
  403eb5:	mov    rax,QWORD PTR [rip+0x29804]        # 0x42d6c0
  403ebc:	mov    edx,0x1
  403ec1:	mov    rcx,rbx
  403ec4:	mov    r8,QWORD PTR [rax]
  403ec7:	call   0x407b70
  403ecc:	mov    rcx,rbx
  403ecf:	call   0x4016d0
  403ed4:	cmp    eax,0x1
  403ed7:	mov    edx,0x1
  403edc:	je     0x403ef0
  403ede:	mov    rcx,rbx
  403ee1:	call   0x4079b8
  403ee6:	xor    edx,edx
  403ee8:	cmp    eax,0x2
  403eeb:	setne  dl
  403eee:	add    edx,edx
  403ef0:	mov    eax,edx
  403ef2:	add    rsp,0x30
  403ef6:	pop    rbx
  403ef7:	pop    rsi
  403ef8:	pop    rdi
  403ef9:	ret    
  403efa:	mov    rbx,QWORD PTR [rip+0x3507b]        # 0x438f7c
  403f01:	call   rbx
  403f03:	lea    r8,[rip+0x2f176]        # 0x433080
  403f0a:	lea    rdx,[rip+0x21564]        # 0x425475
  403f11:	lea    rcx,[rax+0x60]
  403f15:	call   0x401670
  403f1a:	mov    ecx,esi
  403f1c:	call   0x4078c0
  403f21:	mov    rsi,QWORD PTR [rsp+0x28]
  403f26:	mov    rdi,rax
  403f29:	call   rbx
  403f2b:	lea    rdx,[rip+0x21559]        # 0x42548b
  403f32:	lea    rcx,[rax+0x60]
  403f36:	mov    r9,rdi
  403f39:	mov    r8,rsi
  403f3c:	call   0x401670
  403f41:	mov    ecx,0x1
  403f46:	call   0x421e98
  403f4b:	nop
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	push   rdi
  403f51:	push   rsi
  403f52:	push   rbx
  403f53:	sub    rsp,0x30
  403f57:	mov    edx,DWORD PTR [rip+0x1f1d7]        # 0x423134
  403f5d:	mov    eax,0x3
  403f62:	test   edx,edx
  403f64:	jne    0x403f70
  403f66:	add    rsp,0x30
  403f6a:	pop    rbx
  403f6b:	pop    rsi
  403f6c:	pop    rdi
  403f6d:	ret    
  403f6e:	xchg   ax,ax
  403f70:	mov    rbx,rcx
  403f73:	lea    r9,[rip+0x1f0c6]        # 0x423040
  403f7a:	lea    r8,[rip+0x1f17f]        # 0x423100
  403f81:	lea    rdx,[rip+0x21428]        # 0x4253b0
  403f88:	lea    rcx,[rip+0x2f0f1]        # 0x433080
  403f8f:	call   0x401930
  403f94:	lea    r8,[rsp+0x28]
  403f99:	lea    rdx,[rip+0x2f0e0]        # 0x433080
  403fa0:	mov    rcx,rbx
  403fa3:	call   0x4079d0
  403fa8:	test   eax,eax
  403faa:	mov    esi,eax
  403fac:	js     0x404001
  403fae:	mov    rax,QWORD PTR [rip+0x2970b]        # 0x42d6c0
  403fb5:	mov    edx,0x1
  403fba:	mov    rcx,rbx
  403fbd:	mov    r8,QWORD PTR [rax]
  403fc0:	call   0x407b70
  403fc5:	mov    edx,0x200
  403fca:	mov    rcx,rbx
  403fcd:	call   0x407978
  403fd2:	mov    rcx,rbx
  403fd5:	call   0x4016d0
  403fda:	mov    edx,eax
  403fdc:	mov    eax,0x1
  403fe1:	cmp    edx,0x1
  403fe4:	je     0x403f66
  403fe6:	mov    rcx,rbx
  403fe9:	call   0x407998
  403fee:	cmp    eax,0x200
  403ff3:	setne  al
  403ff6:	movzx  eax,al
  403ff9:	add    rsp,0x30
  403ffd:	pop    rbx
  403ffe:	pop    rsi
  403fff:	pop    rdi
  404000:	ret    
  404001:	mov    rbx,QWORD PTR [rip+0x34f74]        # 0x438f7c
  404008:	call   rbx
  40400a:	lea    r8,[rip+0x2f06f]        # 0x433080
  404011:	lea    rdx,[rip+0x2145d]        # 0x425475
  404018:	lea    rcx,[rax+0x60]
  40401c:	call   0x401670
  404021:	mov    ecx,esi
  404023:	call   0x4078c0
  404028:	mov    rsi,QWORD PTR [rsp+0x28]
  40402d:	mov    rdi,rax
  404030:	call   rbx
  404032:	lea    rdx,[rip+0x21452]        # 0x42548b
  404039:	lea    rcx,[rax+0x60]
  40403d:	mov    r9,rdi
  404040:	mov    r8,rsi
  404043:	call   0x401670
  404048:	mov    ecx,0x1
  40404d:	call   0x421e98
  404052:	nop
  404053:	nop    DWORD PTR [rax]
  404056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404060:	push   rdi
  404061:	push   rsi
  404062:	push   rbx
  404063:	sub    rsp,0x30
  404067:	mov    edx,DWORD PTR [rip+0x1f0c7]        # 0x423134
  40406d:	mov    eax,0x3
  404072:	test   edx,edx
  404074:	jne    0x404080
  404076:	add    rsp,0x30
  40407a:	pop    rbx
  40407b:	pop    rsi
  40407c:	pop    rdi
  40407d:	ret    
  40407e:	xchg   ax,ax
  404080:	mov    rbx,rcx
  404083:	lea    r9,[rip+0x1efb6]        # 0x423040
  40408a:	lea    r8,[rip+0x1f06f]        # 0x423100
  404091:	lea    rdx,[rip+0x21318]        # 0x4253b0
  404098:	lea    rcx,[rip+0x2efe1]        # 0x433080
  40409f:	call   0x401930
  4040a4:	lea    r8,[rsp+0x28]
  4040a9:	lea    rdx,[rip+0x2efd0]        # 0x433080
  4040b0:	mov    rcx,rbx
  4040b3:	call   0x4079d0
  4040b8:	test   eax,eax
  4040ba:	mov    esi,eax
  4040bc:	js     0x404114
  4040be:	mov    rax,QWORD PTR [rip+0x295fb]        # 0x42d6c0
  4040c5:	mov    rcx,rbx
  4040c8:	mov    edx,0x1
  4040cd:	mov    r8,QWORD PTR [rax]
  4040d0:	call   0x407b70
  4040d5:	mov    rcx,rbx
  4040d8:	mov    edx,0x1000
  4040dd:	call   0x407978
  4040e2:	mov    edx,0x1
  4040e7:	mov    rcx,rbx
  4040ea:	call   0x407aa8
  4040ef:	mov    rcx,rbx
  4040f2:	call   0x4016d0
  4040f7:	mov    edx,0x4
  4040fc:	mov    rcx,rbx
  4040ff:	call   0x407ab0
  404104:	test   eax,eax
  404106:	sete   al
  404109:	movzx  eax,al
  40410c:	add    rsp,0x30
  404110:	pop    rbx
  404111:	pop    rsi
  404112:	pop    rdi
  404113:	ret    
  404114:	mov    rbx,QWORD PTR [rip+0x34e61]        # 0x438f7c
  40411b:	call   rbx
  40411d:	lea    r8,[rip+0x2ef5c]        # 0x433080
  404124:	lea    rdx,[rip+0x2134a]        # 0x425475
  40412b:	lea    rcx,[rax+0x60]
  40412f:	call   0x401670
  404134:	mov    ecx,esi
  404136:	call   0x4078c0
  40413b:	mov    rsi,QWORD PTR [rsp+0x28]
  404140:	mov    rdi,rax
  404143:	call   rbx
  404145:	lea    rdx,[rip+0x2133f]        # 0x42548b
  40414c:	lea    rcx,[rax+0x60]
  404150:	mov    r9,rdi
  404153:	mov    r8,rsi
  404156:	call   0x401670
  40415b:	mov    ecx,0x1
  404160:	call   0x421e98
  404165:	nop
  404166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404170:	push   rdi
  404171:	push   rsi
  404172:	push   rbx
  404173:	sub    rsp,0x30
  404177:	lea    r9,[rip+0x1eec2]        # 0x423040
  40417e:	lea    r8,[rip+0x1ef7b]        # 0x423100
  404185:	lea    rdx,[rip+0x21224]        # 0x4253b0
  40418c:	mov    rbx,rcx
  40418f:	lea    rcx,[rip+0x2eeea]        # 0x433080
  404196:	call   0x401930
  40419b:	lea    r8,[rsp+0x28]
  4041a0:	lea    rdx,[rip+0x2eed9]        # 0x433080
  4041a7:	mov    rcx,rbx
  4041aa:	call   0x4079d0
  4041af:	test   eax,eax
  4041b1:	mov    esi,eax
  4041b3:	js     0x4041e9
  4041b5:	mov    rax,QWORD PTR [rip+0x29504]        # 0x42d6c0
  4041bc:	mov    rcx,rbx
  4041bf:	mov    edx,0x1
  4041c4:	mov    r8,QWORD PTR [rax]
  4041c7:	call   0x407b70
  4041cc:	mov    edx,0x200
  4041d1:	mov    rcx,rbx
  4041d4:	call   0x407978
  4041d9:	mov    rcx,rbx
  4041dc:	call   0x4016d0
  4041e1:	add    rsp,0x30
  4041e5:	pop    rbx
  4041e6:	pop    rsi
  4041e7:	pop    rdi
  4041e8:	ret    
  4041e9:	mov    rbx,QWORD PTR [rip+0x34d8c]        # 0x438f7c
  4041f0:	call   rbx
  4041f2:	lea    r8,[rip+0x2ee87]        # 0x433080
  4041f9:	lea    rdx,[rip+0x21275]        # 0x425475
  404200:	lea    rcx,[rax+0x60]
  404204:	call   0x401670
  404209:	mov    ecx,esi
  40420b:	call   0x4078c0
  404210:	mov    rsi,QWORD PTR [rsp+0x28]
  404215:	mov    rdi,rax
  404218:	call   rbx
  40421a:	lea    rdx,[rip+0x2126a]        # 0x42548b
  404221:	lea    rcx,[rax+0x60]
  404225:	mov    r9,rdi
  404228:	mov    r8,rsi
  40422b:	call   0x401670
  404230:	mov    ecx,0x1
  404235:	call   0x421e98
  40423a:	nop
  40423b:	nop    DWORD PTR [rax+rax*1+0x0]
  404240:	push   rdi
  404241:	push   rsi
  404242:	push   rbx
  404243:	sub    rsp,0x30
  404247:	mov    r8d,DWORD PTR [rip+0x2f03e]        # 0x43328c
  40424e:	mov    eax,0x3
  404253:	test   r8d,r8d
  404256:	jne    0x404260
  404258:	add    rsp,0x30
  40425c:	pop    rbx
  40425d:	pop    rsi
  40425e:	pop    rdi
  40425f:	ret    
  404260:	mov    rbx,rcx
  404263:	lea    r9,[rip+0x1edd6]        # 0x423040
  40426a:	lea    r8,[rip+0x1ee8f]        # 0x423100
  404271:	lea    rdx,[rip+0x21138]        # 0x4253b0
  404278:	lea    rcx,[rip+0x2ee01]        # 0x433080
  40427f:	call   0x401930
  404284:	lea    r8,[rsp+0x28]
  404289:	lea    rdx,[rip+0x2edf0]        # 0x433080
  404290:	mov    rcx,rbx
  404293:	call   0x4079d0
  404298:	test   eax,eax
  40429a:	mov    esi,eax
  40429c:	js     0x4042f7
  40429e:	mov    rax,QWORD PTR [rip+0x2941b]        # 0x42d6c0
  4042a5:	mov    edx,0x1
  4042aa:	mov    rcx,rbx
  4042ad:	mov    r8,QWORD PTR [rax]
  4042b0:	call   0x407b70
  4042b5:	xor    r8d,r8d
  4042b8:	mov    edx,0x3
  4042bd:	mov    rcx,rbx
  4042c0:	call   0x407c50
  4042c5:	mov    rcx,rbx
  4042c8:	call   0x4016d0
  4042cd:	test   eax,eax
  4042cf:	jne    0x404258
  4042d1:	mov    edx,DWORD PTR [rip+0x2efb5]        # 0x43328c
  4042d7:	xor    eax,eax
  4042d9:	test   edx,edx
  4042db:	je     0x404258
  4042e1:	mov    rcx,rbx
  4042e4:	call   0x4079b8
  4042e9:	cmp    eax,0x1
  4042ec:	sete   al
  4042ef:	movzx  eax,al
  4042f2:	jmp    0x404258
  4042f7:	mov    rbx,QWORD PTR [rip+0x34c7e]        # 0x438f7c
  4042fe:	call   rbx
  404300:	lea    r8,[rip+0x2ed79]        # 0x433080
  404307:	lea    rdx,[rip+0x21167]        # 0x425475
  40430e:	lea    rcx,[rax+0x60]
  404312:	call   0x401670
  404317:	mov    ecx,esi
  404319:	call   0x4078c0
  40431e:	mov    rsi,QWORD PTR [rsp+0x28]
  404323:	mov    rdi,rax
  404326:	call   rbx
  404328:	lea    rdx,[rip+0x2115c]        # 0x42548b
  40432f:	lea    rcx,[rax+0x60]
  404333:	mov    r9,rdi
  404336:	mov    r8,rsi
  404339:	call   0x401670
  40433e:	mov    ecx,0x1
  404343:	call   0x421e98
  404348:	nop
  404349:	nop    DWORD PTR [rax+0x0]
  404350:	push   rdi
  404351:	push   rsi
  404352:	push   rbx
  404353:	sub    rsp,0x30
  404357:	lea    r9,[rip+0x1ece2]        # 0x423040
  40435e:	lea    r8,[rip+0x1ed9b]        # 0x423100
  404365:	lea    rdx,[rip+0x21044]        # 0x4253b0
  40436c:	mov    rbx,rcx
  40436f:	lea    rcx,[rip+0x2ed0a]        # 0x433080
  404376:	call   0x401930
  40437b:	lea    r8,[rsp+0x28]
  404380:	lea    rdx,[rip+0x2ecf9]        # 0x433080
  404387:	mov    rcx,rbx
  40438a:	call   0x4079d0
  40438f:	test   eax,eax
  404391:	mov    esi,eax
  404393:	js     0x4043cf
  404395:	mov    rax,QWORD PTR [rip+0x29324]        # 0x42d6c0
  40439c:	mov    rcx,rbx
  40439f:	mov    edx,0x1
  4043a4:	mov    r8,QWORD PTR [rax]
  4043a7:	call   0x407b70
  4043ac:	mov    r8d,0x5
  4043b2:	mov    edx,0x5
  4043b7:	mov    rcx,rbx
  4043ba:	call   0x407c50
  4043bf:	mov    rcx,rbx
  4043c2:	call   0x4016d0
  4043c7:	add    rsp,0x30
  4043cb:	pop    rbx
  4043cc:	pop    rsi
  4043cd:	pop    rdi
  4043ce:	ret    
  4043cf:	mov    rbx,QWORD PTR [rip+0x34ba6]        # 0x438f7c
  4043d6:	call   rbx
  4043d8:	lea    r8,[rip+0x2eca1]        # 0x433080
  4043df:	lea    rdx,[rip+0x2108f]        # 0x425475
  4043e6:	lea    rcx,[rax+0x60]
  4043ea:	call   0x401670
  4043ef:	mov    ecx,esi
  4043f1:	call   0x4078c0
  4043f6:	mov    rsi,QWORD PTR [rsp+0x28]
  4043fb:	mov    rdi,rax
  4043fe:	call   rbx
  404400:	lea    rdx,[rip+0x21084]        # 0x42548b
  404407:	lea    rcx,[rax+0x60]
  40440b:	mov    r9,rdi
  40440e:	mov    r8,rsi
  404411:	call   0x401670
  404416:	mov    ecx,0x1
  40441b:	call   0x421e98
  404420:	nop
  404421:	nop    DWORD PTR [rax+rax*1+0x0]
  404426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404430:	push   rdi
  404431:	push   rsi
  404432:	push   rbx
  404433:	sub    rsp,0x30
  404437:	lea    r9,[rip+0x1ec02]        # 0x423040
  40443e:	lea    r8,[rip+0x1ecbb]        # 0x423100
  404445:	lea    rdx,[rip+0x20f64]        # 0x4253b0
  40444c:	mov    rbx,rcx
  40444f:	lea    rcx,[rip+0x2ec2a]        # 0x433080
  404456:	call   0x401930
  40445b:	lea    r8,[rsp+0x28]
  404460:	lea    rdx,[rip+0x2ec19]        # 0x433080
  404467:	mov    rcx,rbx
  40446a:	call   0x4079d0
  40446f:	test   eax,eax
  404471:	mov    esi,eax
  404473:	js     0x4044af
  404475:	mov    rax,QWORD PTR [rip+0x29244]        # 0x42d6c0
  40447c:	mov    rcx,rbx
  40447f:	mov    edx,0x1
  404484:	mov    r8,QWORD PTR [rax]
  404487:	call   0x407b70
  40448c:	mov    r8d,0x5
  404492:	mov    edx,0x5
  404497:	mov    rcx,rbx
  40449a:	call   0x407c48
  40449f:	mov    rcx,rbx
  4044a2:	call   0x4016d0
  4044a7:	add    rsp,0x30
  4044ab:	pop    rbx
  4044ac:	pop    rsi
  4044ad:	pop    rdi
  4044ae:	ret    
  4044af:	mov    rbx,QWORD PTR [rip+0x34ac6]        # 0x438f7c
  4044b6:	call   rbx
  4044b8:	lea    r8,[rip+0x2ebc1]        # 0x433080
  4044bf:	lea    rdx,[rip+0x20faf]        # 0x425475
  4044c6:	lea    rcx,[rax+0x60]
  4044ca:	call   0x401670
  4044cf:	mov    ecx,esi
  4044d1:	call   0x4078c0
  4044d6:	mov    rsi,QWORD PTR [rsp+0x28]
  4044db:	mov    rdi,rax
  4044de:	call   rbx
  4044e0:	lea    rdx,[rip+0x20fa4]        # 0x42548b
  4044e7:	lea    rcx,[rax+0x60]
  4044eb:	mov    r9,rdi
  4044ee:	mov    r8,rsi
  4044f1:	call   0x401670
  4044f6:	mov    ecx,0x1
  4044fb:	call   0x421e98
  404500:	nop
  404501:	nop    DWORD PTR [rax+rax*1+0x0]
  404506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404510:	push   rdi
  404511:	push   rsi
  404512:	push   rbx
  404513:	sub    rsp,0x30
  404517:	lea    r9,[rip+0x1eb22]        # 0x423040
  40451e:	lea    r8,[rip+0x1ebdb]        # 0x423100
  404525:	lea    rdx,[rip+0x2260c]        # 0x426b38
  40452c:	mov    rbx,rcx
  40452f:	lea    rcx,[rip+0x2eb4a]        # 0x433080
  404536:	call   0x401930
  40453b:	lea    r8,[rsp+0x28]
  404540:	lea    rdx,[rip+0x2eb39]        # 0x433080
  404547:	mov    rcx,rbx
  40454a:	call   0x4079d0
  40454f:	test   eax,eax
  404551:	mov    esi,eax
  404553:	js     0x404593
  404555:	mov    rax,QWORD PTR [rip+0x29064]        # 0x42d5c0
  40455c:	mov    edx,0x2
  404561:	mov    rcx,rbx
  404564:	mov    r8,QWORD PTR [rax]
  404567:	call   0x407b70
  40456c:	mov    rcx,rbx
  40456f:	call   0x4016d0
  404574:	test   eax,eax
  404576:	mov    esi,eax
  404578:	jne    0x404589
  40457a:	lea    rdx,[rip+0x3014f]        # 0x4346d0
  404581:	mov    rcx,rbx
  404584:	call   0x407b48
  404589:	mov    eax,esi
  40458b:	add    rsp,0x30
  40458f:	pop    rbx
  404590:	pop    rsi
  404591:	pop    rdi
  404592:	ret    
  404593:	mov    rbx,QWORD PTR [rip+0x349e2]        # 0x438f7c
  40459a:	call   rbx
  40459c:	lea    r8,[rip+0x2eadd]        # 0x433080
  4045a3:	lea    rdx,[rip+0x20ecb]        # 0x425475
  4045aa:	lea    rcx,[rax+0x60]
  4045ae:	call   0x401670
  4045b3:	mov    ecx,esi
  4045b5:	call   0x4078c0
  4045ba:	mov    rsi,QWORD PTR [rsp+0x28]
  4045bf:	mov    rdi,rax
  4045c2:	call   rbx
  4045c4:	lea    rdx,[rip+0x20ec0]        # 0x42548b
  4045cb:	lea    rcx,[rax+0x60]
  4045cf:	mov    r9,rdi
  4045d2:	mov    r8,rsi
  4045d5:	call   0x401670
  4045da:	mov    ecx,0x1
  4045df:	call   0x421e98
  4045e4:	nop
  4045e5:	nop
  4045e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045f0:	push   rdi
  4045f1:	push   rsi
  4045f2:	push   rbx
  4045f3:	sub    rsp,0x40
  4045f7:	test   rcx,rcx
  4045fa:	je     0x4046f0
  404600:	mov    rbx,rcx
  404603:	lea    r9,[rip+0x1ea36]        # 0x423040
  40460a:	lea    r8,[rip+0x1eaef]        # 0x423100
  404611:	lea    rdx,[rip+0x20d98]        # 0x4253b0
  404618:	lea    rcx,[rip+0x2ea61]        # 0x433080
  40461f:	lea    rsi,[rsp+0x20]
  404624:	call   0x401930
  404629:	lea    rdx,[rip+0x2ea50]        # 0x433080
  404630:	mov    r8,rsi
  404633:	mov    rcx,rbx
  404636:	call   0x4079d0
  40463b:	test   eax,eax
  40463d:	mov    edi,eax
  40463f:	js     0x404737
  404645:	mov    rax,QWORD PTR [rip+0x29074]        # 0x42d6c0
  40464c:	mov    edx,0x1
  404651:	mov    rcx,rbx
  404654:	mov    r8,QWORD PTR [rax]
  404657:	call   0x407b70
  40465c:	mov    rax,QWORD PTR [rip+0x28f5d]        # 0x42d5c0
  404663:	mov    edx,0x2
  404668:	mov    rcx,rbx
  40466b:	mov    r8,QWORD PTR [rax]
  40466e:	call   0x407b70
  404673:	mov    r8,QWORD PTR [rip+0x30076]        # 0x4346f0
  40467a:	mov    rdx,QWORD PTR [rip+0x3009f]        # 0x434720
  404681:	mov    rcx,rbx
  404684:	call   0x407910
  404689:	mov    rdi,QWORD PTR [rip+0x30058]        # 0x4346e8
  404690:	lea    rdx,[rip+0x30069]        # 0x434700
  404697:	mov    rcx,rsi
  40469a:	mov    r8,rdi
  40469d:	call   0x421e08
  4046a2:	mov    rcx,rbx
  4046a5:	call   0x4016d0
  4046aa:	cmp    eax,0x1
  4046ad:	je     0x4046da
  4046af:	lea    r8,[rip+0x30032]        # 0x4346e8
  4046b6:	lea    rdx,[rip+0x30043]        # 0x434700
  4046bd:	mov    rcx,rbx
  4046c0:	mov    QWORD PTR [rip+0x3001d],0x20        # 0x4346e8
  4046cb:	call   0x407920
  4046d0:	cmp    QWORD PTR [rip+0x30010],0x0        # 0x4346e8
  4046d8:	jne    0x404700
  4046da:	mov    eax,0x1
  4046df:	add    rsp,0x40
  4046e3:	pop    rbx
  4046e4:	pop    rsi
  4046e5:	pop    rdi
  4046e6:	ret    
  4046e7:	nop    WORD PTR [rax+rax*1+0x0]
  4046f0:	mov    eax,0x3
  4046f5:	add    rsp,0x40
  4046f9:	pop    rbx
  4046fa:	pop    rsi
  4046fb:	pop    rdi
  4046fc:	ret    
  4046fd:	nop    DWORD PTR [rax]
  404700:	mov    rcx,rbx
  404703:	call   0x407918
  404708:	mov    edx,eax
  40470a:	xor    eax,eax
  40470c:	test   edx,edx
  40470e:	jne    0x4046df
  404710:	cmp    rdi,QWORD PTR [rip+0x2ffd1]        # 0x4346e8
  404717:	mov    al,0x1
  404719:	jne    0x4046df
  40471b:	lea    rdx,[rip+0x2ffde]        # 0x434700
  404722:	mov    r8,rdi
  404725:	mov    rcx,rsi
  404728:	call   0x421e10
  40472d:	test   eax,eax
  40472f:	setne  al
  404732:	movzx  eax,al
  404735:	jmp    0x4046df
  404737:	mov    rbx,QWORD PTR [rip+0x3483e]        # 0x438f7c
  40473e:	call   rbx
  404740:	lea    r8,[rip+0x2e939]        # 0x433080
  404747:	lea    rdx,[rip+0x20d27]        # 0x425475
  40474e:	lea    rcx,[rax+0x60]
  404752:	call   0x401670
  404757:	mov    ecx,edi
  404759:	call   0x4078c0
  40475e:	mov    rsi,QWORD PTR [rsp+0x20]
  404763:	mov    rdi,rax
  404766:	call   rbx
  404768:	lea    rdx,[rip+0x20d1c]        # 0x42548b
  40476f:	lea    rcx,[rax+0x60]
  404773:	mov    r9,rdi
  404776:	mov    r8,rsi
  404779:	call   0x401670
  40477e:	mov    ecx,0x1
  404783:	call   0x421e98
  404788:	nop
  404789:	nop    DWORD PTR [rax+0x0]
  404790:	push   rdi
  404791:	push   rsi
  404792:	push   rbx
  404793:	sub    rsp,0x30
  404797:	mov    rsi,rcx
  40479a:	lea    rcx,[rip+0x22438]        # 0x426bd9
  4047a1:	call   0x421dd0
  4047a6:	mov    rbx,QWORD PTR [rip+0x28f03]        # 0x42d6b0
  4047ad:	mov    eax,0x3
  4047b2:	mov    edx,DWORD PTR [rbx]
  4047b4:	test   edx,edx
  4047b6:	jne    0x4047c0
  4047b8:	add    rsp,0x30
  4047bc:	pop    rbx
  4047bd:	pop    rsi
  4047be:	pop    rdi
  4047bf:	ret    
  4047c0:	lea    r9,[rip+0x1e879]        # 0x423040
  4047c7:	lea    r8,[rip+0x1e932]        # 0x423100
  4047ce:	lea    rdx,[rip+0x20bdb]        # 0x4253b0
  4047d5:	lea    rcx,[rip+0x2e8a4]        # 0x433080
  4047dc:	call   0x401930
  4047e1:	lea    r8,[rsp+0x28]
  4047e6:	lea    rdx,[rip+0x2e893]        # 0x433080
  4047ed:	mov    rcx,rsi
  4047f0:	call   0x4079d0
  4047f5:	test   eax,eax
  4047f7:	mov    edi,eax
  4047f9:	js     0x40488a
  4047ff:	mov    rax,QWORD PTR [rip+0x28eba]        # 0x42d6c0
  404806:	mov    edx,0x1
  40480b:	mov    rcx,rsi
  40480e:	mov    r8,QWORD PTR [rax]
  404811:	call   0x407b70
  404816:	mov    rcx,rsi
  404819:	call   0x4016d0
  40481e:	cmp    eax,0x1
  404821:	je     0x404880
  404823:	lea    rdx,[rip+0x20b03]        # 0x42532d
  40482a:	lea    rcx,[rip+0x223a8]        # 0x426bd9
  404831:	call   0x421e78
  404836:	test   rax,rax
  404839:	mov    rdi,rax
  40483c:	je     0x404880
  40483e:	lea    rdx,[rip+0x20abb]        # 0x425300
  404845:	mov    rcx,rax
  404848:	call   0x401670
  40484d:	mov    r9d,DWORD PTR [rbx]
  404850:	mov    r8,rdi
  404853:	xor    edx,edx
  404855:	mov    rcx,rsi
  404858:	call   0x405eb0
  40485d:	mov    rcx,rdi
  404860:	call   0x421e90
  404865:	lea    rax,[rip+0x2237d]        # 0x426be9
  40486c:	mov    QWORD PTR [rip+0x1e8c5],rax        # 0x423138
  404873:	xor    eax,eax
  404875:	jmp    0x4047b8
  40487a:	nop    WORD PTR [rax+rax*1+0x0]
  404880:	mov    eax,0x1
  404885:	jmp    0x4047b8
  40488a:	mov    rbx,QWORD PTR [rip+0x346eb]        # 0x438f7c
  404891:	call   rbx
  404893:	lea    r8,[rip+0x2e7e6]        # 0x433080
  40489a:	lea    rdx,[rip+0x20bd4]        # 0x425475
  4048a1:	lea    rcx,[rax+0x60]
  4048a5:	call   0x401670
  4048aa:	mov    ecx,edi
  4048ac:	call   0x4078c0
  4048b1:	mov    rsi,QWORD PTR [rsp+0x28]
  4048b6:	mov    rdi,rax
  4048b9:	call   rbx
  4048bb:	lea    rdx,[rip+0x20bc9]        # 0x42548b
  4048c2:	lea    rcx,[rax+0x60]
  4048c6:	mov    r9,rdi
  4048c9:	mov    r8,rsi
  4048cc:	call   0x401670
  4048d1:	mov    ecx,0x1
  4048d6:	call   0x421e98
  4048db:	nop
  4048dc:	nop    DWORD PTR [rax+0x0]
  4048e0:	push   r14
  4048e2:	push   r13
  4048e4:	push   r12
  4048e6:	push   rbp
  4048e7:	push   rdi
  4048e8:	push   rsi
  4048e9:	push   rbx
  4048ea:	sub    rsp,0x50
  4048ee:	lea    r9,[rip+0x1e74b]        # 0x423040
  4048f5:	lea    r8,[rip+0x1e804]        # 0x423100
  4048fc:	lea    rdx,[rip+0x20aad]        # 0x4253b0
  404903:	mov    rbx,rcx
  404906:	lea    rcx,[rip+0x2e773]        # 0x433080
  40490d:	lea    rsi,[rsp+0x40]
  404912:	mov    DWORD PTR [rsp+0x30],0x0
  40491a:	call   0x401930
  40491f:	lea    rdx,[rip+0x2e75a]        # 0x433080
  404926:	mov    r8,rsi
  404929:	mov    rcx,rbx
  40492c:	call   0x4079d0
  404931:	test   eax,eax
  404933:	mov    edi,eax
  404935:	js     0x404ae8
  40493b:	mov    rax,QWORD PTR [rip+0x28d7e]        # 0x42d6c0
  404942:	mov    edx,0x1
  404947:	mov    rcx,rbx
  40494a:	mov    r8,QWORD PTR [rax]
  40494d:	call   0x407b70
  404952:	mov    rcx,rbx
  404955:	call   0x4016d0
  40495a:	cmp    eax,0x1
  40495d:	je     0x404a21
  404963:	mov    rcx,rbx
  404966:	mov    edi,0x3
  40496b:	call   0x407bd8
  404970:	cmp    eax,0x1
  404973:	je     0x404a30
  404979:	mov    eax,edi
  40497b:	add    rsp,0x50
  40497f:	pop    rbx
  404980:	pop    rsi
  404981:	pop    rdi
  404982:	pop    rbp
  404983:	pop    r12
  404985:	pop    r13
  404987:	pop    r14
  404989:	ret    
  40498a:	nop    WORD PTR [rax+rax*1+0x0]
  404990:	cmp    eax,0x1
  404993:	je     0x404ae1
  404999:	mov    DWORD PTR [rsp+0x34],0x0
  4049a1:	xor    edi,edi
  4049a3:	xor    ebx,ebx
  4049a5:	mov    r12,QWORD PTR [rip+0x28c44]        # 0x42d5f0
  4049ac:	jmp    0x4049fc
  4049ae:	xchg   ax,ax
  4049b0:	mov    eax,DWORD PTR [rsp+0x34]
  4049b4:	add    eax,DWORD PTR [rsp+0x48]
  4049b8:	mov    rcx,rdi
  4049bb:	add    ebx,0x1
  4049be:	lea    edx,[rax+0x1]
  4049c1:	call   0x414ca0
  4049c6:	mov    r13d,DWORD PTR [rsp+0x34]
  4049cb:	mov    r8d,DWORD PTR [rsp+0x48]
  4049d0:	mov    rdi,rax
  4049d3:	mov    rdx,QWORD PTR [rsp+0x40]
  4049d8:	add    r13,rax
  4049db:	mov    rcx,r13
  4049de:	call   0x421e08
  4049e3:	mov    r14d,DWORD PTR [rsp+0x48]
  4049e8:	mov    rcx,QWORD PTR [rsp+0x40]
  4049ed:	add    DWORD PTR [rsp+0x34],r14d
  4049f2:	call   QWORD PTR [r12]
  4049f6:	cmp    DWORD PTR [rsp+0x30],ebx
  4049fa:	jbe    0x404a5f
  4049fc:	mov    edx,ebx
  4049fe:	lea    rcx,[rip+0x22214]        # 0x426c19
  404a05:	mov    r8,rsi
  404a08:	shl    rdx,0x4
  404a0c:	mov    QWORD PTR [rsp+0x40],0x0
  404a15:	add    rdx,rbp
  404a18:	call   0x407a18
  404a1d:	test   eax,eax
  404a1f:	jns    0x4049b0
  404a21:	mov    edi,0x1
  404a26:	jmp    0x404979
  404a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a30:	lea    rdx,[rsp+0x30]
  404a35:	mov    rcx,rbx
  404a38:	call   0x407be8
  404a3d:	mov    rbp,rax
  404a40:	mov    eax,DWORD PTR [rsp+0x30]
  404a44:	test   eax,eax
  404a46:	jne    0x404990
  404a4c:	lea    rax,[rip+0x221af]        # 0x426c02
  404a53:	mov    QWORD PTR [rip+0x1e6de],rax        # 0x423138
  404a5a:	jmp    0x404979
  404a5f:	mov    BYTE PTR [r13+r14*1+0x0],0x0
  404a65:	mov    eax,DWORD PTR [rsp+0x34]
  404a69:	lea    rdx,[rsp+0x34]
  404a6e:	lea    rcx,[rsp+0x38]
  404a73:	mov    DWORD PTR [rsp+0x20],0x2
  404a7b:	mov    r9d,0x1
  404a81:	mov    r8,rsi
  404a84:	mov    QWORD PTR [rsp+0x40],rdi
  404a89:	mov    DWORD PTR [rsp+0x34],0x0
  404a91:	mov    DWORD PTR [rsp+0x48],eax
  404a95:	call   0x407870
  404a9a:	test   eax,eax
  404a9c:	js     0x404a21
  404a9e:	mov    eax,DWORD PTR [rsp+0x34]
  404aa2:	xor    ebx,ebx
  404aa4:	test   eax,eax
  404aa6:	je     0x404ac9
  404aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ab0:	mov    rax,QWORD PTR [rsp+0x38]
  404ab5:	mov    edx,ebx
  404ab7:	add    ebx,0x1
  404aba:	mov    rcx,QWORD PTR [rax+rdx*8]
  404abe:	call   0x407890
  404ac3:	cmp    DWORD PTR [rsp+0x34],ebx
  404ac7:	ja     0x404ab0
  404ac9:	mov    rcx,QWORD PTR [rsp+0x38]
  404ace:	call   QWORD PTR [r12]
  404ad2:	mov    rcx,rdi
  404ad5:	xor    edi,edi
  404ad7:	call   0x421e50
  404adc:	jmp    0x404979
  404ae1:	xor    edi,edi
  404ae3:	jmp    0x404979
  404ae8:	mov    rbx,QWORD PTR [rip+0x3448d]        # 0x438f7c
  404aef:	call   rbx
  404af1:	lea    r8,[rip+0x2e588]        # 0x433080
  404af8:	lea    rdx,[rip+0x20976]        # 0x425475
  404aff:	lea    rcx,[rax+0x60]
  404b03:	call   0x401670
  404b08:	mov    ecx,edi
  404b0a:	call   0x4078c0
  404b0f:	mov    rsi,QWORD PTR [rsp+0x40]
  404b14:	mov    rdi,rax
  404b17:	call   rbx
  404b19:	lea    rdx,[rip+0x2096b]        # 0x42548b
  404b20:	lea    rcx,[rax+0x60]
  404b24:	mov    r9,rdi
  404b27:	mov    r8,rsi
  404b2a:	call   0x401670
  404b2f:	mov    ecx,0x1
  404b34:	call   0x421e98
  404b39:	nop
  404b3a:	nop    WORD PTR [rax+rax*1+0x0]
  404b40:	push   rdi
  404b41:	push   rsi
  404b42:	push   rbx
  404b43:	sub    rsp,0x30
  404b47:	mov    rbx,rcx
  404b4a:	lea    rcx,[rip+0x207de]        # 0x42532f
  404b51:	call   0x421dd0
  404b56:	mov    rdx,QWORD PTR [rip+0x28b53]        # 0x42d6b0
  404b5d:	mov    eax,0x3
  404b62:	mov    edx,DWORD PTR [rdx]
  404b64:	test   edx,edx
  404b66:	jne    0x404b70
  404b68:	add    rsp,0x30
  404b6c:	pop    rbx
  404b6d:	pop    rsi
  404b6e:	pop    rdi
  404b6f:	ret    
  404b70:	lea    r9,[rip+0x1e4c9]        # 0x423040
  404b77:	lea    r8,[rip+0x1e582]        # 0x423100
  404b7e:	lea    rdx,[rip+0x2082b]        # 0x4253b0
  404b85:	lea    rcx,[rip+0x2e4f4]        # 0x433080
  404b8c:	call   0x401930
  404b91:	lea    r8,[rsp+0x28]
  404b96:	lea    rdx,[rip+0x2e4e3]        # 0x433080
  404b9d:	mov    rcx,rbx
  404ba0:	call   0x4079d0
  404ba5:	test   eax,eax
  404ba7:	mov    esi,eax
  404ba9:	js     0x404c36
  404baf:	mov    rsi,QWORD PTR [rip+0x28b0a]        # 0x42d6c0
  404bb6:	mov    rcx,rbx
  404bb9:	mov    edx,0x1
  404bbe:	mov    r8,QWORD PTR [rsi]
  404bc1:	call   0x407b70
  404bc6:	mov    rcx,QWORD PTR [rsi]
  404bc9:	lea    rdx,[rip+0xffffffffffffcd30]        # 0x401900
  404bd0:	call   0x407be0
  404bd5:	mov    rcx,rbx
  404bd8:	call   0x4016d0
  404bdd:	mov    rcx,QWORD PTR [rsi]
  404be0:	mov    ebx,eax
  404be2:	xor    edx,edx
  404be4:	call   0x407be0
  404be9:	cmp    ebx,0x1
  404bec:	mov    eax,0x1
  404bf1:	je     0x404b68
  404bf7:	lea    rcx,[rip+0x20731]        # 0x42532f
  404bfe:	mov    edx,0x4
  404c03:	call   0x421ce0
  404c08:	test   eax,eax
  404c0a:	je     0x404c21
  404c0c:	lea    rax,[rip+0x22029]        # 0x426c3c
  404c13:	mov    QWORD PTR [rip+0x1e51e],rax        # 0x423138
  404c1a:	xor    eax,eax
  404c1c:	jmp    0x404b68
  404c21:	lea    rax,[rip+0x21ffd]        # 0x426c25
  404c28:	mov    QWORD PTR [rip+0x1e509],rax        # 0x423138
  404c2f:	xor    eax,eax
  404c31:	jmp    0x404b68
  404c36:	mov    rbx,QWORD PTR [rip+0x3433f]        # 0x438f7c
  404c3d:	call   rbx
  404c3f:	lea    r8,[rip+0x2e43a]        # 0x433080
  404c46:	lea    rdx,[rip+0x20828]        # 0x425475
  404c4d:	lea    rcx,[rax+0x60]
  404c51:	call   0x401670
  404c56:	mov    ecx,esi
  404c58:	call   0x4078c0
  404c5d:	mov    rsi,QWORD PTR [rsp+0x28]
  404c62:	mov    rdi,rax
  404c65:	call   rbx
  404c67:	lea    rdx,[rip+0x2081d]        # 0x42548b
  404c6e:	lea    rcx,[rax+0x60]
  404c72:	mov    r9,rdi
  404c75:	mov    r8,rsi
  404c78:	call   0x401670
  404c7d:	mov    ecx,0x1
  404c82:	call   0x421e98
  404c87:	nop
  404c88:	nop
  404c89:	nop
  404c8a:	nop
  404c8b:	nop
  404c8c:	nop
  404c8d:	nop
  404c8e:	nop
  404c8f:	nop
  404c90:	sub    rsp,0x38
  404c94:	mov    QWORD PTR [rsp+0x50],r8
  404c99:	lea    r8,[rsp+0x50]
  404c9e:	mov    QWORD PTR [rsp+0x58],r9
  404ca3:	mov    QWORD PTR [rsp+0x28],r8
  404ca8:	call   0x41d2d0
  404cad:	add    rsp,0x38
  404cb1:	ret    
  404cb2:	nop    DWORD PTR [rax+0x0]
  404cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cc0:	sub    rsp,0x38
  404cc4:	mov    QWORD PTR [rsp+0x48],rdx
  404cc9:	lea    rdx,[rsp+0x48]
  404cce:	mov    QWORD PTR [rsp+0x50],r8
  404cd3:	mov    QWORD PTR [rsp+0x58],r9
  404cd8:	mov    QWORD PTR [rsp+0x28],rdx
  404cdd:	call   0x41d300
  404ce2:	add    rsp,0x38
  404ce6:	ret    
  404ce7:	nop    WORD PTR [rax+rax*1+0x0]
  404cf0:	push   rbp
  404cf1:	push   rdi
  404cf2:	push   rsi
  404cf3:	push   rbx
  404cf4:	sub    rsp,0x28
  404cf8:	mov    ebp,edx
  404cfa:	mov    rsi,rcx
  404cfd:	mov    rcx,r8
  404d00:	mov    rbx,r8
  404d03:	call   0x421d98
  404d08:	test   ebp,ebp
  404d0a:	mov    rdi,rax
  404d0d:	jne    0x404d30
  404d0f:	mov    ecx,DWORD PTR [rsi]
  404d11:	xor    r9d,r9d
  404d14:	movsxd r8,edi
  404d17:	mov    rdx,rbx
  404d1a:	call   0x4192c0
  404d1f:	cmp    eax,0xffffffff
  404d22:	je     0x404d4b
  404d24:	cdqe   
  404d26:	add    rsp,0x28
  404d2a:	pop    rbx
  404d2b:	pop    rsi
  404d2c:	pop    rdi
  404d2d:	pop    rbp
  404d2e:	ret    
  404d2f:	nop
  404d30:	call   QWORD PTR [rip+0x34246]        # 0x438f7c
  404d36:	lea    rdx,[rip+0x21f13]        # 0x426c50
  404d3d:	lea    rcx,[rax+0x60]
  404d41:	mov    r8,rbx
  404d44:	call   0x404c90
  404d49:	jmp    0x404d0f
  404d4b:	call   QWORD PTR [rip+0x3422b]        # 0x438f7c
  404d51:	lea    rdx,[rip+0x21f0f]        # 0x426c67
  404d58:	lea    rcx,[rax+0x60]
  404d5c:	mov    r8,rbx
  404d5f:	call   0x404c90
  404d64:	mov    ecx,0x1
  404d69:	call   0x421e98
  404d6e:	nop
  404d6f:	nop
  404d70:	push   r15
  404d72:	push   r14
  404d74:	push   r13
  404d76:	push   r12
  404d78:	push   rbp
  404d79:	push   rdi
  404d7a:	push   rsi
  404d7b:	push   rbx
  404d7c:	sub    rsp,0x678
  404d83:	test   r8,r8
  404d86:	mov    rdi,rcx
  404d89:	mov    r13,rdx
  404d8c:	mov    rsi,r8
  404d8f:	mov    r12d,r9d
  404d92:	je     0x404db6
  404d94:	mov    edx,DWORD PTR [rdx]
  404d96:	test   edx,edx
  404d98:	je     0x404db6
  404d9a:	call   QWORD PTR [rip+0x341dc]        # 0x438f7c
  404da0:	lea    rdx,[rip+0x21ed9]        # 0x426c80
  404da7:	lea    rcx,[rax+0x60]
  404dab:	mov    r9,rsi
  404dae:	mov    r8d,r12d
  404db1:	call   0x404c90
  404db6:	lea    rax,[rsp+0x60]
  404dbb:	lea    r14,[rsp+0x50]
  404dc0:	lea    rbx,[rsp+0x270]
  404dc8:	mov    ebp,r12d
  404dcb:	mov    QWORD PTR [rsp+0x38],rax
  404dd0:	movsxd rax,DWORD PTR [rdi]
  404dd3:	mov    rdx,QWORD PTR [rsp+0x38]
  404dd8:	xor    r9d,r9d
  404ddb:	xor    r8d,r8d
  404dde:	mov    QWORD PTR [rsp+0x20],r14
  404de3:	mov    DWORD PTR [rsp+0x60],0x1
  404deb:	mov    QWORD PTR [rsp+0x50],0xa
  404df4:	mov    DWORD PTR [rsp+0x58],0x0
  404dfc:	mov    rcx,rax
  404dff:	mov    QWORD PTR [rsp+0x68],rax
  404e04:	add    ecx,0x1
  404e07:	call   0x4185d0
  404e0c:	test   eax,eax
  404e0e:	jle    0x404eb0
  404e14:	mov    ecx,DWORD PTR [rdi]
  404e16:	xor    r9d,r9d
  404e19:	mov    r8d,0x3ff
  404e1f:	mov    rdx,rbx
  404e22:	call   0x417e10
  404e27:	cmp    eax,0xffffffff
  404e2a:	mov    r15,rax
  404e2d:	mov    DWORD PTR [rsp+0x44],eax
  404e31:	je     0x404eb0
  404e33:	movsxd r11,eax
  404e36:	test   rsi,rsi
  404e39:	mov    BYTE PTR [rsp+r11*1+0x270],0x0
  404e42:	je     0x404e90
  404e44:	mov    eax,DWORD PTR [r13+0x0]
  404e48:	test   eax,eax
  404e4a:	jne    0x404ed3
  404e50:	mov    r9,rbp
  404e53:	mov    r8,rsi
  404e56:	mov    rdx,r11
  404e59:	mov    rcx,rbx
  404e5c:	call   0x4149e0
  404e61:	test   rax,rax
  404e64:	je     0x404e71
  404e66:	cmp    rax,rbx
  404e69:	je     0x404e71
  404e6b:	cmp    BYTE PTR [rax-0x1],0xa
  404e6f:	je     0x404e90
  404e71:	cmp    r15d,r12d
  404e74:	jl     0x404dd0
  404e7a:	mov    r8,rbp
  404e7d:	mov    rdx,rsi
  404e80:	mov    rcx,rbx
  404e83:	call   0x421d90
  404e88:	test   eax,eax
  404e8a:	jne    0x404dd0
  404e90:	movsxd rax,DWORD PTR [rsp+0x44]
  404e95:	add    rsp,0x678
  404e9c:	pop    rbx
  404e9d:	pop    rsi
  404e9e:	pop    rdi
  404e9f:	pop    rbp
  404ea0:	pop    r12
  404ea2:	pop    r13
  404ea4:	pop    r14
  404ea6:	pop    r15
  404ea8:	ret    
  404ea9:	nop    DWORD PTR [rax+0x0]
  404eb0:	call   QWORD PTR [rip+0x340c6]        # 0x438f7c
  404eb6:	lea    rdx,[rip+0x21de2]        # 0x426c9f
  404ebd:	lea    rcx,[rax+0x60]
  404ec1:	mov    r8,rsi
  404ec4:	call   0x404c90
  404ec9:	mov    ecx,0x1
  404ece:	call   0x421e98
  404ed3:	mov    QWORD PTR [rsp+0x48],r11
  404ed8:	call   QWORD PTR [rip+0x3409e]        # 0x438f7c
  404ede:	lea    rdx,[rip+0x21dce]        # 0x426cb3
  404ee5:	lea    rcx,[rax+0x60]
  404ee9:	mov    r8,rbx
  404eec:	call   0x404c90
  404ef1:	mov    r11,QWORD PTR [rsp+0x48]
  404ef6:	jmp    0x404e50
  404efb:	nop    DWORD PTR [rax+rax*1+0x0]
  404f00:	push   rbp
  404f01:	push   rdi
  404f02:	push   rsi
  404f03:	push   rbx
  404f04:	sub    rsp,0x28
  404f08:	mov    eax,DWORD PTR [rcx+0x10]
  404f0b:	mov    rbx,rcx
  404f0e:	mov    rdi,rdx
  404f11:	movsxd rsi,r8d
  404f14:	test   eax,eax
  404f16:	jne    0x404f60
  404f18:	mov    rbp,QWORD PTR [rip+0x340ad]        # 0x438fcc
  404f1f:	jmp    0x404f28
  404f21:	call   rbp
  404f23:	cmp    DWORD PTR [rax],0x4
  404f26:	jne    0x404f85
  404f28:	mov    ecx,DWORD PTR [rbx]
  404f2a:	xor    r9d,r9d
  404f2d:	mov    r8,rsi
  404f30:	mov    rdx,rdi
  404f33:	call   0x417e10
  404f38:	cmp    eax,0xffffffff
  404f3b:	mov    r9d,eax
  404f3e:	je     0x404f21
  404f40:	movsxd rax,r9d
  404f43:	add    rsp,0x28
  404f47:	pop    rbx
  404f48:	pop    rsi
  404f49:	pop    rdi
  404f4a:	pop    rbp
  404f4b:	ret    
  404f4c:	nop    DWORD PTR [rax+0x0]
  404f50:	mov    rcx,QWORD PTR [rbx+0x8]
  404f54:	xor    edx,edx
  404f56:	call   0x407a98
  404f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f60:	mov    rcx,QWORD PTR [rbx+0x8]
  404f64:	mov    r8,rsi
  404f67:	mov    rdx,rdi
  404f6a:	call   0x407990
  404f6f:	cmp    eax,0xfffffedb
  404f74:	mov    r9d,eax
  404f77:	je     0x404f50
  404f79:	cmp    eax,0xffffffe4
  404f7c:	je     0x404f60
  404f7e:	cmp    eax,0xffffffcc
  404f81:	je     0x404f60
  404f83:	jmp    0x404f40
  404f85:	mov    rax,0xffffffffffffffff
  404f8c:	add    rsp,0x28
  404f90:	pop    rbx
  404f91:	pop    rsi
  404f92:	pop    rdi
  404f93:	pop    rbp
  404f94:	ret    
  404f95:	nop
  404f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fa0:	push   rsi
  404fa1:	push   rbx
  404fa2:	sub    rsp,0x38
  404fa6:	mov    rsi,rdx
  404fa9:	mov    edx,DWORD PTR [rcx+0x10]
  404fac:	mov    rbx,rcx
  404faf:	test   edx,edx
  404fb1:	jne    0x404fe0
  404fb3:	mov    rdx,rsi
  404fb6:	mov    rcx,rbx
  404fb9:	call   0x404f00
  404fbe:	mov    rsi,rax
  404fc1:	mov    eax,DWORD PTR [rbx+0x10]
  404fc4:	test   eax,eax
  404fc6:	je     0x404fd3
  404fc8:	mov    rcx,QWORD PTR [rbx+0x8]
  404fcc:	xor    edx,edx
  404fce:	call   0x407970
  404fd3:	movsxd rax,esi
  404fd6:	add    rsp,0x38
  404fda:	pop    rbx
  404fdb:	pop    rsi
  404fdc:	ret    
  404fdd:	nop    DWORD PTR [rax]
  404fe0:	mov    rcx,QWORD PTR [rcx+0x8]
  404fe4:	mov    edx,r9d
  404fe7:	mov    DWORD PTR [rsp+0x2c],r8d
  404fec:	call   0x407970
  404ff1:	mov    r8d,DWORD PTR [rsp+0x2c]
  404ff6:	jmp    0x404fb3
  404ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  405000:	push   r13
  405002:	push   r12
  405004:	push   rbp
  405005:	push   rdi
  405006:	push   rsi
  405007:	push   rbx
  405008:	sub    rsp,0x28
  40500c:	mov    rbp,rdx
  40500f:	mov    edx,DWORD PTR [rcx+0x10]
  405012:	mov    rdi,rcx
  405015:	mov    r12d,r8d
  405018:	mov    rsi,r9
  40501b:	test   edx,edx
  40501d:	je     0x405074
  40501f:	movsxd r13,r8d
  405022:	test   rsi,rsi
  405025:	mov    rcx,QWORD PTR [rdi+0x8]
  405029:	je     0x405065
  40502b:	mov    r9,rsi
  40502e:	mov    r8,r13
  405031:	mov    rdx,rbp
  405034:	call   0x407980
  405039:	mov    ebx,eax
  40503b:	cmp    ebx,0xffffffcc
  40503e:	je     0x405022
  405040:	cmp    ebx,0xffffffe4
  405043:	je     0x405022
  405045:	cmp    ebx,r12d
  405048:	je     0x405055
  40504a:	test   ebx,ebx
  40504c:	jle    0x405055
  40504e:	mov    eax,DWORD PTR [rdi+0x40]
  405051:	test   eax,eax
  405053:	jne    0x4050a1
  405055:	movsxd rax,ebx
  405058:	add    rsp,0x28
  40505c:	pop    rbx
  40505d:	pop    rsi
  40505e:	pop    rdi
  40505f:	pop    rbp
  405060:	pop    r12
  405062:	pop    r13
  405064:	ret    
  405065:	mov    r8,r13
  405068:	mov    rdx,rbp
  40506b:	call   0x407988
  405070:	mov    ebx,eax
  405072:	jmp    0x40503b
  405074:	movsxd rsi,r8d
  405077:	mov    r13,QWORD PTR [rip+0x33f4e]        # 0x438fcc
  40507e:	jmp    0x405088
  405080:	call   r13
  405083:	cmp    DWORD PTR [rax],0x4
  405086:	jne    0x4050c0
  405088:	mov    ecx,DWORD PTR [rdi]
  40508a:	xor    r9d,r9d
  40508d:	mov    r8,rsi
  405090:	mov    rdx,rbp
  405093:	call   0x4192c0
  405098:	cmp    eax,0xffffffff
  40509b:	mov    ebx,eax
  40509d:	je     0x405080
  40509f:	jmp    0x405045
  4050a1:	call   QWORD PTR [rip+0x33ed5]        # 0x438f7c
  4050a7:	lea    rdx,[rip+0x21c22]        # 0x426cd0
  4050ae:	lea    rcx,[rax+0x60]
  4050b2:	mov    r9d,r12d
  4050b5:	mov    r8d,ebx
  4050b8:	call   0x404c90
  4050bd:	jmp    0x405055
  4050bf:	nop
  4050c0:	mov    rax,0xffffffffffffffff
  4050c7:	add    rsp,0x28
  4050cb:	pop    rbx
  4050cc:	pop    rsi
  4050cd:	pop    rdi
  4050ce:	pop    rbp
  4050cf:	pop    r12
  4050d1:	pop    r13
  4050d3:	ret    
  4050d4:	xchg   ax,ax
  4050d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050e0:	xor    r9d,r9d
  4050e3:	jmp    0x405000
  4050e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050f0:	push   rdi
  4050f1:	push   rsi
  4050f2:	push   rbx
  4050f3:	sub    rsp,0x220
  4050fa:	test   rdx,rdx
  4050fd:	je     0x405125
  4050ff:	mov    r8d,DWORD PTR [rcx+0x10]
  405103:	test   r8d,r8d
  405106:	jne    0x405125
  405108:	mov    rbx,rdx
  40510b:	mov    rsi,rcx
  40510e:	lea    rdx,[rip+0x21be2]        # 0x426cf7
  405115:	mov    rcx,rbx
  405118:	mov    rdi,QWORD PTR [rip+0x33f2d]        # 0x43904c
  40511f:	call   rdi
  405121:	test   eax,eax
  405123:	jne    0x405130
  405125:	add    rsp,0x220
  40512c:	pop    rbx
  40512d:	pop    rsi
  40512e:	pop    rdi
  40512f:	ret    
  405130:	lea    rdx,[rip+0x21bc6]        # 0x426cfd
  405137:	mov    rcx,rbx
  40513a:	call   rdi
  40513c:	test   eax,eax
  40513e:	jne    0x4051f0
  405144:	mov    eax,DWORD PTR [rsi+0x40]
  405147:	test   eax,eax
  405149:	je     0x405157
  40514b:	lea    rcx,[rip+0x21bbb]        # 0x426d0d
  405152:	call   0x404cc0
  405157:	lea    rbx,[rsi+0x40]
  40515b:	lea    r8,[rip+0x21bc6]        # 0x426d28
  405162:	mov    rcx,rsi
  405165:	mov    r9d,0x4
  40516b:	lea    rdi,[rsp+0x20]
  405170:	mov    rdx,rbx
  405173:	call   0x404d70
  405178:	mov    r9,QWORD PTR [rsi+0x18]
  40517c:	lea    r8,[rip+0x21baa]        # 0x426d2d
  405183:	mov    rcx,rdi
  405186:	mov    edx,0x200
  40518b:	call   0x414cf0
  405190:	mov    edx,DWORD PTR [rsi+0x40]
  405193:	mov    r8,rdi
  405196:	mov    rcx,rsi
  405199:	call   0x404cf0
  40519e:	lea    r8,[rip+0x21b91]        # 0x426d36
  4051a5:	mov    r9d,0x4
  4051ab:	mov    rdx,rbx
  4051ae:	mov    rcx,rsi
  4051b1:	call   0x404d70
  4051b6:	mov    edx,DWORD PTR [rsi+0x40]
  4051b9:	lea    r8,[rip+0x21b7b]        # 0x426d3b
  4051c0:	mov    rcx,rsi
  4051c3:	call   0x404cf0
  4051c8:	lea    r8,[rip+0x21b59]        # 0x426d28
  4051cf:	mov    r9d,0x4
  4051d5:	mov    rdx,rbx
  4051d8:	mov    rcx,rsi
  4051db:	call   0x404d70
  4051e0:	nop
  4051e1:	add    rsp,0x220
  4051e8:	pop    rbx
  4051e9:	pop    rsi
  4051ea:	pop    rdi
  4051eb:	ret    
  4051ec:	nop    DWORD PTR [rax+0x0]
  4051f0:	lea    rdx,[rip+0x21b0b]        # 0x426d02
  4051f7:	mov    rcx,rbx
  4051fa:	call   rdi
  4051fc:	test   eax,eax
  4051fe:	je     0x405144
  405204:	lea    rdx,[rip+0x21b3a]        # 0x426d45
  40520b:	mov    rcx,rbx
  40520e:	call   rdi
  405210:	test   eax,eax
  405212:	jne    0x405284
  405214:	mov    edx,DWORD PTR [rsi+0x40]
  405217:	test   edx,edx
  405219:	je     0x40522a
  40521b:	lea    rcx,[rip+0x21b2e]        # 0x426d50
  405222:	call   0x404cc0
  405227:	mov    edx,DWORD PTR [rsi+0x40]
  40522a:	lea    r8,[rip+0x21b3a]        # 0x426d6b
  405231:	mov    rcx,rsi
  405234:	lea    rbx,[rsi+0x40]
  405238:	call   0x404cf0
  40523d:	lea    r8,[rip+0x21b36]        # 0x426d7a
  405244:	mov    r9d,0x4
  40524a:	mov    rdx,rbx
  40524d:	mov    rcx,rsi
  405250:	call   0x404d70
  405255:	mov    edx,DWORD PTR [rsi+0x40]
  405258:	lea    r8,[rip+0x21b20]        # 0x426d7f
  40525f:	mov    rcx,rsi
  405262:	call   0x404cf0
  405267:	lea    r8,[rip+0x21b0c]        # 0x426d7a
  40526e:	mov    r9d,0x4
  405274:	mov    rdx,rbx
  405277:	mov    rcx,rsi
  40527a:	call   0x404d70
  40527f:	jmp    0x405125
  405284:	lea    rdx,[rip+0x21abf]        # 0x426d4a
  40528b:	mov    rcx,rbx
  40528e:	call   rdi
  405290:	test   eax,eax
  405292:	je     0x405214
  405294:	lea    rdx,[rip+0x21af1]        # 0x426d8c
  40529b:	mov    rcx,rbx
  40529e:	call   rdi
  4052a0:	test   eax,eax
  4052a2:	jne    0x405330
  4052a8:	cmp    DWORD PTR [rsi+0x40],0x0
  4052ac:	je     0x4052ba
  4052ae:	lea    rcx,[rip+0x21adc]        # 0x426d91
  4052b5:	call   0x404cc0
  4052ba:	lea    rbx,[rsp+0x20]
  4052bf:	mov    r9,QWORD PTR [rsi+0x18]
  4052c3:	lea    r8,[rip+0x21ae6]        # 0x426db0
  4052ca:	mov    edx,0x200
  4052cf:	mov    rcx,rbx
  4052d2:	call   0x414cf0
  4052d7:	mov    edx,DWORD PTR [rsi+0x40]
  4052da:	mov    r8,rbx
  4052dd:	mov    rcx,rsi
  4052e0:	lea    rbx,[rsi+0x40]
  4052e4:	call   0x404cf0
  4052e9:	lea    r8,[rip+0x21b2d]        # 0x426e1d
  4052f0:	mov    r9d,0x2
  4052f6:	mov    rdx,rbx
  4052f9:	mov    rcx,rsi
  4052fc:	call   0x404d70
  405301:	mov    edx,DWORD PTR [rsi+0x40]
  405304:	lea    r8,[rip+0x21b15]        # 0x426e20
  40530b:	mov    rcx,rsi
  40530e:	call   0x404cf0
  405313:	lea    r8,[rip+0x21b3a]        # 0x426e54
  40531a:	mov    r9d,0x8
  405320:	mov    rdx,rbx
  405323:	mov    rcx,rsi
  405326:	call   0x404d70
  40532b:	jmp    0x405125
  405330:	lea    rdx,[rip+0x21b26]        # 0x426e5d
  405337:	mov    rcx,rbx
  40533a:	call   rdi
  40533c:	test   eax,eax
  40533e:	jne    0x405380
  405340:	cmp    DWORD PTR [rsi+0x40],0x0
  405344:	je     0x405352
  405346:	lea    rcx,[rip+0x21b15]        # 0x426e62
  40534d:	call   0x404cc0
  405352:	mov    ecx,DWORD PTR [rsi]
  405354:	lea    rdx,[rip+0x21b25]        # 0x426e80
  40535b:	xor    r9d,r9d
  40535e:	mov    r8d,0x1f
  405364:	call   0x4192c0
  405369:	lea    rdx,[rsi+0x40]
  40536d:	xor    r9d,r9d
  405370:	xor    r8d,r8d
  405373:	mov    rcx,rsi
  405376:	call   0x404d70
  40537b:	jmp    0x405125
  405380:	lea    rdx,[rip+0x21b19]        # 0x426ea0
  405387:	mov    rcx,rbx
  40538a:	call   rdi
  40538c:	test   eax,eax
  40538e:	jne    0x4053f7
  405390:	cmp    DWORD PTR [rsi+0x40],0x0
  405394:	jne    0x40544b
  40539a:	mov    edx,DWORD PTR [rsi+0x40]
  40539d:	lea    r8,[rip+0x21b1f]        # 0x426ec3
  4053a4:	mov    rcx,rsi
  4053a7:	lea    rbx,[rsi+0x40]
  4053ab:	call   0x404cf0
  4053b0:	lea    r8,[rip+0x21b13]        # 0x426eca
  4053b7:	mov    r9d,0x4
  4053bd:	mov    rdx,rbx
  4053c0:	mov    rcx,rsi
  4053c3:	call   0x404d70
  4053c8:	mov    edx,DWORD PTR [rsi+0x40]
  4053cb:	lea    r8,[rip+0x21afd]        # 0x426ecf
  4053d2:	mov    rcx,rsi
  4053d5:	call   0x404cf0
  4053da:	lea    r8,[rip+0x21af9]        # 0x426eda
  4053e1:	mov    r9d,0x3
  4053e7:	mov    rdx,rbx
  4053ea:	mov    rcx,rsi
  4053ed:	call   0x404d70
  4053f2:	jmp    0x405125
  4053f7:	lea    rdx,[rip+0x21aa6]        # 0x426ea4
  4053fe:	mov    rcx,rbx
  405401:	call   rdi
  405403:	test   eax,eax
  405405:	je     0x405390
  405407:	movsx  eax,BYTE PTR [rbx]
  40540a:	sub    eax,0x30
  40540d:	cmp    eax,0x9
  405410:	jbe    0x405125
  405416:	cmp    DWORD PTR [rip+0x2f323],0x0        # 0x434740
  40541d:	jne    0x405125
  405423:	call   QWORD PTR [rip+0x33b53]        # 0x438f7c
  405429:	lea    rdx,[rip+0x21aae]        # 0x426ede
  405430:	lea    rcx,[rax+0x60]
  405434:	mov    r8,rbx
  405437:	call   0x404c90
  40543c:	mov    DWORD PTR [rip+0x2f2fa],0x1        # 0x434740
  405446:	jmp    0x405125
  40544b:	lea    rcx,[rip+0x21a57]        # 0x426ea9
  405452:	call   0x404cc0
  405457:	jmp    0x40539a
  40545c:	nop    DWORD PTR [rax+0x0]
  405460:	push   rbx
  405461:	sub    rsp,0x20
  405465:	lea    rdx,[rip+0x21920]        # 0x426d8c
  40546c:	mov    rbx,rcx
  40546f:	call   QWORD PTR [rip+0x33bd7]        # 0x43904c
  405475:	test   eax,eax
  405477:	lea    rax,[rip+0x21a77]        # 0x426ef5
  40547e:	cmove  rbx,rax
  405482:	xor    edx,edx
  405484:	mov    rcx,rbx
  405487:	call   QWORD PTR [rip+0x33e77]        # 0x439304
  40548d:	test   rax,rax
  405490:	mov    edx,0x1bb
  405495:	je     0x40549b
  405497:	movsx  edx,WORD PTR [rax+0x18]
  40549b:	mov    eax,edx
  40549d:	add    rsp,0x20
  4054a1:	pop    rbx
  4054a2:	ret    
  4054a3:	nop    DWORD PTR [rax]
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rbx
  4054b1:	sub    rsp,0x20
  4054b5:	lea    rdx,[rip+0x218d0]        # 0x426d8c
  4054bc:	mov    rbx,rcx
  4054bf:	call   QWORD PTR [rip+0x33b87]        # 0x43904c
  4054c5:	test   eax,eax
  4054c7:	lea    rax,[rip+0x21a27]        # 0x426ef5
  4054ce:	cmove  rbx,rax
  4054d2:	xor    edx,edx
  4054d4:	mov    rcx,rbx
  4054d7:	call   QWORD PTR [rip+0x33e27]        # 0x439304
  4054dd:	test   rax,rax
  4054e0:	je     0x4054f0
  4054e2:	mov    rax,QWORD PTR [rax]
  4054e5:	add    rsp,0x20
  4054e9:	pop    rbx
  4054ea:	ret    
  4054eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4054f0:	lea    rax,[rip+0x21a0a]        # 0x426f01
  4054f7:	add    rsp,0x20
  4054fb:	pop    rbx
  4054fc:	ret    
  4054fd:	nop    DWORD PTR [rax]
  405500:	push   rsi
  405501:	push   rbx
  405502:	sub    rsp,0x28
  405506:	mov    eax,DWORD PTR [rcx+0x10]
  405509:	mov    rbx,rcx
  40550c:	test   eax,eax
  40550e:	je     0x40553d
  405510:	mov    rcx,QWORD PTR [rbx+0x8]
  405514:	mov    edx,0x1
  405519:	call   0x407c10
  40551e:	cmp    eax,0xffffffe4
  405521:	je     0x405510
  405523:	cmp    eax,0xffffffcc
  405526:	je     0x405510
  405528:	test   eax,eax
  40552a:	js     0x4055a0
  40552c:	mov    rcx,QWORD PTR [rbx+0x8]
  405530:	call   0x407b68
  405535:	mov    QWORD PTR [rbx+0x8],0x0
  40553d:	mov    rcx,QWORD PTR [rbx+0x38]
  405541:	call   QWORD PTR [rip+0x33da5]        # 0x4392ec
  405547:	mov    rcx,QWORD PTR [rbx+0x20]
  40554b:	mov    QWORD PTR [rbx+0x30],0x0
  405553:	mov    QWORD PTR [rbx+0x38],0x0
  40555b:	call   0x421e50
  405560:	mov    rcx,QWORD PTR [rbx+0x18]
  405564:	call   0x421e50
  405569:	mov    rcx,QWORD PTR [rbx+0x28]
  40556d:	call   0x421e50
  405572:	mov    ecx,DWORD PTR [rbx]
  405574:	mov    edx,0x2
  405579:	call   0x419aa0
  40557e:	mov    ecx,DWORD PTR [rbx]
  405580:	call   0x417920
  405585:	mov    DWORD PTR [rbx],0xffffffff
  40558b:	mov    DWORD PTR [rbx+0x10],0x0
  405592:	add    rsp,0x28
  405596:	pop    rbx
  405597:	pop    rsi
  405598:	ret    
  405599:	nop    DWORD PTR [rax+0x0]
  4055a0:	mov    ecx,eax
  4055a2:	call   0x4078c0
  4055a7:	mov    rsi,rax
  4055aa:	call   QWORD PTR [rip+0x339cc]        # 0x438f7c
  4055b0:	lea    rdx,[rip+0x2194e]        # 0x426f05
  4055b7:	lea    rcx,[rax+0x60]
  4055bb:	mov    r8,rsi
  4055be:	call   0x404c90
  4055c3:	jmp    0x40552c
  4055c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d0:	push   r15
  4055d2:	push   r14
  4055d4:	mov    eax,0x10a8
  4055d9:	push   r13
  4055db:	push   r12
  4055dd:	push   rbp
  4055de:	push   rdi
  4055df:	push   rsi
  4055e0:	push   rbx
  4055e1:	call   0x41c880
  4055e6:	sub    rsp,rax
  4055e9:	xor    eax,eax
  4055eb:	lea    rdi,[rcx+0x8]
  4055ef:	mov    QWORD PTR [rsp+0x10f8],rdx
  4055f7:	mov    QWORD PTR [rsp+0x50],0x0
  405600:	mov    QWORD PTR [rsp+0x58],0x0
  405609:	mov    rbx,rcx
  40560c:	mov    QWORD PTR [rcx],0x0
  405613:	and    rdi,0xfffffffffffffff8
  405617:	mov    QWORD PTR [rcx+0x40],0x0
  40561f:	mov    rsi,r8
  405622:	sub    rcx,rdi
  405625:	mov    r13d,r9d
  405628:	add    ecx,0x48
  40562b:	shr    ecx,0x3
  40562e:	rep stos QWORD PTR es:[rdi],rax
  405631:	cmp    QWORD PTR [rsp+0x1110],0x0
  40563a:	je     0x405650
  40563c:	mov    rdx,QWORD PTR [rsp+0x10f8]
  405644:	lea    rcx,[rip+0x218d6]        # 0x426f21
  40564b:	call   0x404cc0
  405650:	lea    r8,[rsp+0x60]
  405655:	xor    eax,eax
  405657:	mov    ecx,0x6
  40565c:	cmp    r13d,0x1
  405660:	lea    r9,[rsp+0x48]
  405665:	mov    rdx,rsi
  405668:	mov    rdi,r8
  40566b:	rep stos QWORD PTR es:[rdi],rax
  40566e:	sbb    eax,eax
  405670:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405678:	add    eax,0x2
  40567b:	mov    DWORD PTR [rsp+0x68],eax
  40567f:	call   QWORD PTR [rip+0x33c6f]        # 0x4392f4
  405685:	test   eax,eax
  405687:	mov    r12d,eax
  40568a:	jne    0x405858
  405690:	mov    rbp,QWORD PTR [rsp+0x48]
  405695:	lea    rdi,[rsp+0x90]
  40569d:	lea    rsi,[rsp+0x50]
  4056a2:	test   rbp,rbp
  4056a5:	je     0x4057f0
  4056ab:	mov    edx,DWORD PTR [rbp+0x8]
  4056ae:	mov    ecx,DWORD PTR [rbp+0x4]
  4056b1:	mov    r8d,DWORD PTR [rbp+0xc]
  4056b5:	call   0x419e70
  4056ba:	cmp    eax,0xffffffff
  4056bd:	mov    r15d,eax
  4056c0:	je     0x4057c3
  4056c6:	mov    rdx,QWORD PTR [rbp+0x10]
  4056ca:	mov    rcx,QWORD PTR [rbp+0x20]
  4056ce:	mov    r9d,0x1000
  4056d4:	mov    DWORD PTR [rsp+0x30],0xa
  4056dc:	mov    DWORD PTR [rsp+0x28],0x10
  4056e4:	mov    r8,rdi
  4056e7:	mov    QWORD PTR [rsp+0x20],rsi
  4056ec:	mov    r14,rdi
  4056ef:	mov    r13,rsi
  4056f2:	call   QWORD PTR [rip+0x33c04]        # 0x4392fc
  4056f8:	test   eax,eax
  4056fa:	mov    r12d,eax
  4056fd:	jne    0x4057a0
  405703:	cmp    QWORD PTR [rsp+0x1110],0x0
  40570c:	je     0x405728
  40570e:	mov    rdx,QWORD PTR [rsp+0x1110]
  405716:	lea    rcx,[rip+0x21869]        # 0x426f86
  40571d:	mov    r9,rsi
  405720:	mov    r8,rdi
  405723:	call   0x404cc0
  405728:	mov    rdx,QWORD PTR [rbp+0x20]
  40572c:	mov    r8d,DWORD PTR [rbp+0x10]
  405730:	mov    ecx,r15d
  405733:	call   0x417930
  405738:	test   eax,eax
  40573a:	mov    r12d,eax
  40573d:	js     0x4057c3
  405743:	jne    0x40581d
  405749:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405751:	mov    DWORD PTR [rbx+0x10],0x0
  405758:	mov    DWORD PTR [rbx],r15d
  40575b:	call   0x41a220
  405760:	mov    rcx,r14
  405763:	mov    QWORD PTR [rbx+0x18],rax
  405767:	call   0x41a220
  40576c:	mov    rcx,r13
  40576f:	mov    QWORD PTR [rbx+0x20],rax
  405773:	call   0x41a220
  405778:	mov    QWORD PTR [rbx+0x28],rax
  40577c:	mov    rax,QWORD PTR [rsp+0x48]
  405781:	mov    QWORD PTR [rbx+0x30],rbp
  405785:	mov    QWORD PTR [rbx+0x38],rax
  405789:	add    rsp,0x10a8
  405790:	pop    rbx
  405791:	pop    rsi
  405792:	pop    rdi
  405793:	pop    rbp
  405794:	pop    r12
  405796:	pop    r13
  405798:	pop    r14
  40579a:	pop    r15
  40579c:	ret    
  40579d:	nop    DWORD PTR [rax]
  4057a0:	mov    ecx,eax
  4057a2:	call   0x417d40
  4057a7:	mov    r13,rax
  4057aa:	call   QWORD PTR [rip+0x337cc]        # 0x438f7c
  4057b0:	lea    rdx,[rip+0x217bc]        # 0x426f73
  4057b7:	lea    rcx,[rax+0x60]
  4057bb:	mov    r8,r13
  4057be:	call   0x404c90
  4057c3:	mov    rbp,QWORD PTR [rbp+0x28]
  4057c7:	test   rbp,rbp
  4057ca:	jne    0x4056ab
  4057d0:	test   r12d,r12d
  4057d3:	jne    0x405810
  4057d5:	cmp    r15d,0xffffffff
  4057d9:	je     0x4057f0
  4057db:	lea    r14,[rsp+0x90]
  4057e3:	lea    r13,[rsp+0x50]
  4057e8:	jmp    0x405749
  4057ed:	nop    DWORD PTR [rax]
  4057f0:	call   QWORD PTR [rip+0x33786]        # 0x438f7c
  4057f6:	lea    rdx,[rip+0x21753]        # 0x426f50
  4057fd:	lea    rcx,[rax+0x60]
  405801:	call   0x404c90
  405806:	mov    ecx,0x1
  40580b:	call   0x421e98
  405810:	lea    r14,[rsp+0x90]
  405818:	lea    r13,[rsp+0x50]
  40581d:	call   QWORD PTR [rip+0x337a9]        # 0x438fcc
  405823:	mov    ecx,DWORD PTR [rax]
  405825:	call   0x41a290
  40582a:	mov    rbx,rax
  40582d:	call   QWORD PTR [rip+0x33749]        # 0x438f7c
  405833:	lea    rdx,[rip+0x2175e]        # 0x426f98
  40583a:	lea    rcx,[rax+0x60]
  40583e:	mov    QWORD PTR [rsp+0x20],rbx
  405843:	mov    r9,r13
  405846:	mov    r8,r14
  405849:	call   0x404c90
  40584e:	mov    ecx,0x1
  405853:	call   0x421e98
  405858:	mov    ecx,eax
  40585a:	call   0x417d40
  40585f:	mov    rbx,rax
  405862:	call   QWORD PTR [rip+0x33714]        # 0x438f7c
  405868:	mov    r8,QWORD PTR [rsp+0x10f8]
  405870:	lea    rcx,[rax+0x60]
  405874:	lea    rdx,[rip+0x216b9]        # 0x426f34
  40587b:	mov    QWORD PTR [rsp+0x20],rbx
  405880:	mov    r9,rsi
  405883:	call   0x404c90
  405888:	mov    ecx,0x1
  40588d:	call   0x421e98
  405892:	nop
  405893:	nop    DWORD PTR [rax]
  405896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058a0:	sub    rsp,0x1c8
  4058a7:	mov    ecx,0x101
  4058ac:	lea    rdx,[rsp+0x20]
  4058b1:	call   QWORD PTR [rip+0x33a15]        # 0x4392cc
  4058b7:	test   eax,eax
  4058b9:	je     0x4058c8
  4058bb:	lea    rcx,[rip+0x216f6]        # 0x426fb8
  4058c2:	call   0x421df0
  4058c7:	nop
  4058c8:	add    rsp,0x1c8
  4058cf:	ret    
  4058d0:	push   rsi
  4058d1:	push   rbx
  4058d2:	sub    rsp,0x28
  4058d6:	movsx  eax,BYTE PTR [rcx]
  4058d9:	mov    rbx,rcx
  4058dc:	mov    rsi,rdx
  4058df:	sub    eax,0x30
  4058e2:	cmp    eax,0x9
  4058e5:	jbe    0x4058f1
  4058e7:	mov    rax,rbx
  4058ea:	add    rsp,0x28
  4058ee:	pop    rbx
  4058ef:	pop    rsi
  4058f0:	ret    
  4058f1:	call   0x421eb0
  4058f6:	test   eax,eax
  4058f8:	je     0x4058e7
  4058fa:	movzx  ecx,ax
  4058fd:	call   QWORD PTR [rip+0x33a11]        # 0x439314
  405903:	mov    rdx,rsi
  405906:	movzx  ecx,ax
  405909:	call   QWORD PTR [rip+0x339fd]        # 0x43930c
  40590f:	test   rax,rax
  405912:	je     0x40591e
  405914:	mov    rax,QWORD PTR [rax]
  405917:	add    rsp,0x28
  40591b:	pop    rbx
  40591c:	pop    rsi
  40591d:	ret    
  40591e:	call   QWORD PTR [rip+0x33658]        # 0x438f7c
  405924:	lea    rdx,[rip+0x216a5]        # 0x426fd0
  40592b:	lea    rcx,[rax+0x60]
  40592f:	mov    r8,rbx
  405932:	call   0x404c90
  405937:	jmp    0x4058e7
  405939:	nop    DWORD PTR [rax+0x0]
  405940:	push   rsi
  405941:	push   rbx
  405942:	sub    rsp,0x28
  405946:	mov    rbx,rcx
  405949:	mov    rsi,rdx
  40594c:	call   0x421eb0
  405951:	test   eax,eax
  405953:	je     0x405960
  405955:	add    rsp,0x28
  405959:	pop    rbx
  40595a:	pop    rsi
  40595b:	ret    
  40595c:	nop    DWORD PTR [rax+0x0]
  405960:	mov    rdx,rsi
  405963:	mov    rcx,rbx
  405966:	call   QWORD PTR [rip+0x33998]        # 0x439304
  40596c:	test   rax,rax
  40596f:	je     0x405985
  405971:	movzx  ecx,WORD PTR [rax+0x18]
  405975:	call   QWORD PTR [rip+0x339a9]        # 0x439324
  40597b:	movzx  eax,ax
  40597e:	add    rsp,0x28
  405982:	pop    rbx
  405983:	pop    rsi
  405984:	ret    
  405985:	call   QWORD PTR [rip+0x335f1]        # 0x438f7c
  40598b:	lea    rdx,[rip+0x21686]        # 0x427018
  405992:	lea    rcx,[rax+0x60]
  405996:	call   0x404c90
  40599b:	mov    ecx,0x1
  4059a0:	call   0x421e98
  4059a5:	nop
  4059a6:	nop
  4059a7:	nop
  4059a8:	nop
  4059a9:	nop
  4059aa:	nop
  4059ab:	nop
  4059ac:	nop
  4059ad:	nop
  4059ae:	nop
  4059af:	nop
  4059b0:	sub    rsp,0x38
  4059b4:	mov    QWORD PTR [rsp+0x48],rdx
  4059b9:	lea    rdx,[rsp+0x48]
  4059be:	mov    QWORD PTR [rsp+0x50],r8
  4059c3:	mov    QWORD PTR [rsp+0x58],r9
  4059c8:	mov    QWORD PTR [rsp+0x28],rdx
  4059cd:	call   0x41d300
  4059d2:	add    rsp,0x38
  4059d6:	ret    
  4059d7:	nop    WORD PTR [rax+rax*1+0x0]
  4059e0:	push   rbx
  4059e1:	sub    rsp,0x20
  4059e5:	mov    rbx,rcx
  4059e8:	lea    rcx,[rip+0x21651]        # 0x427040
  4059ef:	call   0x4059b0
  4059f4:	mov    rcx,rbx
  4059f7:	call   0x407b00
  4059fc:	mov    ecx,eax
  4059fe:	mov    ebx,eax
  405a00:	call   0x407af8
  405a05:	lea    rcx,[rip+0x21656]        # 0x427062
  405a0c:	mov    rdx,rax
  405a0f:	call   0x4059b0
  405a14:	mov    ecx,ebx
  405a16:	call   0x407af0
  405a1b:	lea    rcx,[rip+0x21654]        # 0x427076
  405a22:	lea    edx,[rax*8+0x0]
  405a29:	add    rsp,0x20
  405a2d:	pop    rbx
  405a2e:	jmp    0x4059b0
  405a30:	sub    rsp,0x38
  405a34:	mov    QWORD PTR [rsp+0x50],r8
  405a39:	lea    r8,[rsp+0x50]
  405a3e:	mov    QWORD PTR [rsp+0x58],r9
  405a43:	mov    QWORD PTR [rsp+0x28],r8
  405a48:	call   0x41d2d0
  405a4d:	add    rsp,0x38
  405a51:	ret    
  405a52:	nop    DWORD PTR [rax+0x0]
  405a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a60:	push   rdi
  405a61:	push   rsi
  405a62:	push   rbx
  405a63:	sub    rsp,0x50
  405a67:	mov    rbx,rcx
  405a6a:	lea    rcx,[rip+0x2161f]        # 0x427090
  405a71:	mov    esi,r8d
  405a74:	call   0x4059b0
  405a79:	mov    rcx,rbx
  405a7c:	call   0x407b50
  405a81:	lea    rcx,[rip+0x21627]        # 0x4270af
  405a88:	mov    edx,eax
  405a8a:	call   0x4059b0
  405a8f:	mov    rcx,rbx
  405a92:	call   0x407b40
  405a97:	lea    rcx,[rip+0x2162a]        # 0x4270c8
  405a9e:	mov    edx,eax
  405aa0:	call   0x4059b0
  405aa5:	mov    rcx,rbx
  405aa8:	call   0x407b58
  405aad:	lea    rcx,[rip+0x2162c]        # 0x4270e0
  405ab4:	mov    edx,eax
  405ab6:	call   0x4059b0
  405abb:	test   esi,esi
  405abd:	jne    0x405ad0
  405abf:	add    rsp,0x50
  405ac3:	pop    rbx
  405ac4:	pop    rsi
  405ac5:	pop    rdi
  405ac6:	ret    
  405ac7:	nop    WORD PTR [rax+rax*1+0x0]
  405ad0:	lea    rsi,[rsp+0x40]
  405ad5:	lea    rdi,[rsp+0x30]
  405ada:	mov    rcx,rbx
  405add:	mov    QWORD PTR [rsp+0x30],0x0
  405ae6:	mov    DWORD PTR [rsp+0x38],0x0
  405aee:	mov    r8,rsi
  405af1:	mov    rdx,rdi
  405af4:	mov    QWORD PTR [rsp+0x40],0x0
  405afd:	mov    DWORD PTR [rsp+0x48],0x0
  405b05:	mov    QWORD PTR [rsp+0x20],0x0
  405b0e:	mov    QWORD PTR [rsp+0x28],0x0
  405b17:	call   0x407b60
  405b1c:	test   eax,eax
  405b1e:	mov    ebx,eax
  405b20:	jne    0x405b80
  405b22:	lea    rcx,[rsp+0x20]
  405b27:	call   0x407b18
  405b2c:	test   eax,eax
  405b2e:	mov    ebx,eax
  405b30:	je     0x405ba0
  405b32:	call   QWORD PTR [rip+0x33444]        # 0x438f7c
  405b38:	lea    rdx,[rip+0x215d8]        # 0x427117
  405b3f:	lea    rcx,[rax+0x60]
  405b43:	mov    r8d,ebx
  405b46:	xor    esi,esi
  405b48:	call   0x405a30
  405b4d:	mov    rbx,QWORD PTR [rip+0x27a9c]        # 0x42d5f0
  405b54:	mov    rcx,rsi
  405b57:	call   QWORD PTR [rbx]
  405b59:	mov    rcx,QWORD PTR [rsp+0x40]
  405b5e:	call   QWORD PTR [rbx]
  405b60:	mov    rcx,QWORD PTR [rsp+0x30]
  405b65:	call   QWORD PTR [rbx]
  405b67:	mov    rcx,QWORD PTR [rsp+0x20]
  405b6c:	call   0x407b38
  405b71:	nop
  405b72:	add    rsp,0x50
  405b76:	pop    rbx
  405b77:	pop    rsi
  405b78:	pop    rdi
  405b79:	ret    
  405b7a:	nop    WORD PTR [rax+rax*1+0x0]
  405b80:	call   QWORD PTR [rip+0x333f6]        # 0x438f7c
  405b86:	lea    rdx,[rip+0x21572]        # 0x4270ff
  405b8d:	lea    rcx,[rax+0x60]
  405b91:	mov    r8d,ebx
  405b94:	xor    esi,esi
  405b96:	call   0x405a30
  405b9b:	jmp    0x405b4d
  405b9d:	nop    DWORD PTR [rax]
  405ba0:	mov    rcx,QWORD PTR [rsp+0x20]
  405ba5:	mov    r8,rdi
  405ba8:	mov    rdx,rsi
  405bab:	call   0x407b20
  405bb0:	test   eax,eax
  405bb2:	mov    ebx,eax
  405bb4:	jne    0x405c00
  405bb6:	lea    rdi,[rsp+0x28]
  405bbb:	mov    rcx,QWORD PTR [rsp+0x20]
  405bc0:	xor    r8d,r8d
  405bc3:	mov    edx,0x1
  405bc8:	mov    r9,rdi
  405bcb:	call   0x407b28
  405bd0:	cmp    eax,0xffffffcd
  405bd3:	mov    ebx,eax
  405bd5:	je     0x405c20
  405bd7:	call   QWORD PTR [rip+0x3339f]        # 0x438f7c
  405bdd:	lea    rdx,[rip+0x21574]        # 0x427158
  405be4:	lea    rcx,[rax+0x60]
  405be8:	mov    r8d,ebx
  405beb:	xor    esi,esi
  405bed:	call   0x405a30
  405bf2:	jmp    0x405b4d
  405bf7:	nop    WORD PTR [rax+rax*1+0x0]
  405c00:	call   QWORD PTR [rip+0x33376]        # 0x438f7c
  405c06:	lea    rdx,[rip+0x2152b]        # 0x427138
  405c0d:	lea    rcx,[rax+0x60]
  405c11:	mov    r8d,ebx
  405c14:	xor    esi,esi
  405c16:	call   0x405a30
  405c1b:	jmp    0x405b4d
  405c20:	mov    rax,QWORD PTR [rip+0x279d9]        # 0x42d600
  405c27:	mov    rcx,QWORD PTR [rsp+0x28]
  405c2c:	call   QWORD PTR [rax]
  405c2e:	test   rax,rax
  405c31:	mov    rsi,rax
  405c34:	je     0x405c87
  405c36:	mov    rcx,QWORD PTR [rsp+0x20]
  405c3b:	mov    r9,rdi
  405c3e:	mov    r8,rax
  405c41:	mov    edx,0x1
  405c46:	call   0x407b28
  405c4b:	test   eax,eax
  405c4d:	mov    ebx,eax
  405c4f:	je     0x405c6f
  405c51:	call   QWORD PTR [rip+0x33325]        # 0x438f7c
  405c57:	lea    rdx,[rip+0x21532]        # 0x427190
  405c5e:	lea    rcx,[rax+0x60]
  405c62:	mov    r8d,ebx
  405c65:	call   0x405a30
  405c6a:	jmp    0x405b4d
  405c6f:	mov    edx,DWORD PTR [rsp+0x28]
  405c73:	lea    rcx,[rip+0x2153a]        # 0x4271b4
  405c7a:	mov    r8,rsi
  405c7d:	call   0x4059b0
  405c82:	jmp    0x405b4d
  405c87:	call   QWORD PTR [rip+0x332ef]        # 0x438f7c
  405c8d:	lea    rdx,[rip+0x214e6]        # 0x42717a
  405c94:	lea    rcx,[rax+0x60]
  405c98:	mov    r8d,ebx
  405c9b:	call   0x405a30
  405ca0:	jmp    0x405b4d
  405ca5:	nop
  405ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cb0:	sub    rsp,0x38
  405cb4:	lea    rdx,[rip+0x21512]        # 0x4271cd
  405cbb:	mov    QWORD PTR [rsp+0x50],r8
  405cc0:	lea    r8,[rsp+0x50]
  405cc5:	mov    QWORD PTR [rsp+0x58],r9
  405cca:	mov    QWORD PTR [rsp+0x28],r8
  405ccf:	call   0x41d3a0
  405cd4:	add    rsp,0x38
  405cd8:	ret    
  405cd9:	nop    DWORD PTR [rax+0x0]
  405ce0:	push   r14
  405ce2:	push   r13
  405ce4:	push   r12
  405ce6:	push   rbp
  405ce7:	push   rdi
  405ce8:	push   rsi
  405ce9:	push   rbx
  405cea:	sub    rsp,0x20
  405cee:	lea    rax,[rip+0x214e2]        # 0x4271d7
  405cf5:	test   rdx,rdx
  405cf8:	je     0x405d6a
  405cfa:	lea    r8,[rdx+rdx*2+0x1]
  405cff:	lea    rax,[rip+0x214d9]        # 0x4271df
  405d06:	cmp    r8,0x3ff
  405d0d:	ja     0x405d6a
  405d0f:	lea    r14,[rdx-0x1]
  405d13:	lea    rsi,[rip+0x2eaa6]        # 0x4347c0
  405d1a:	lea    r13,[rip+0x214b3]        # 0x4271d4
  405d21:	lea    r12,[rip+0x214ad]        # 0x4271d5
  405d28:	mov    rdi,rdx
  405d2b:	mov    rbp,rcx
  405d2e:	xor    ebx,ebx
  405d30:	movzx  r8d,BYTE PTR [rbp+rbx*1+0x0]
  405d36:	cmp    r14,rbx
  405d39:	mov    r9,r12
  405d3c:	lea    rdx,[rip+0x2148a]        # 0x4271cd
  405d43:	cmove  r9,r13
  405d47:	mov    rcx,rsi
  405d4a:	add    rbx,0x1
  405d4e:	add    rsi,0x3
  405d52:	call   0x405cb0
  405d57:	cmp    rbx,rdi
  405d5a:	jne    0x405d30
  405d5c:	lea    rax,[rip+0x2ea5d]        # 0x4347c0
  405d63:	mov    BYTE PTR [rip+0x2ee55],0x0        # 0x434bbf
  405d6a:	add    rsp,0x20
  405d6e:	pop    rbx
  405d6f:	pop    rsi
  405d70:	pop    rdi
  405d71:	pop    rbp
  405d72:	pop    r12
  405d74:	pop    r13
  405d76:	pop    r14
  405d78:	ret    
  405d79:	nop    DWORD PTR [rax+0x0]
  405d80:	push   rdi
  405d81:	push   rbx
  405d82:	sub    rsp,0x78
  405d86:	xor    eax,eax
  405d88:	lea    r10,[rsp+0x40]
  405d8d:	mov    rbx,rcx
  405d90:	test   rdx,rdx
  405d93:	mov    ecx,0x6
  405d98:	mov    DWORD PTR [rsp+0x2c],0x0
  405da0:	mov    rdi,r10
  405da3:	rep stos QWORD PTR es:[rdi],rax
  405da6:	je     0x405e70
  405dac:	mov    DWORD PTR [rsp+0x40],0x1
  405db4:	mov    QWORD PTR [rsp+0x48],rdx
  405db9:	mov    al,0x1
  405dbb:	test   r8,r8
  405dbe:	je     0x405ddb
  405dc0:	mov    edx,eax
  405dc2:	add    eax,0x1
  405dc5:	lea    r9,[rdx+rdx*2]
  405dc9:	shl    r9,0x3
  405dcd:	mov    DWORD PTR [rsp+r9*1+0x40],0x2
  405dd6:	mov    QWORD PTR [rsp+r9*1+0x48],r8
  405ddb:	lea    r9,[rsp+0x2c]
  405de0:	mov    r8d,eax
  405de3:	mov    rdx,r10
  405de6:	mov    rcx,rbx
  405de9:	call   0x407bb8
  405dee:	cmp    eax,0xffffffcf
  405df1:	je     0x405ea0
  405df7:	test   eax,eax
  405df9:	js     0x405e50
  405dfb:	mov    rcx,rbx
  405dfe:	call   0x407bd8
  405e03:	mov    ecx,DWORD PTR [rsp+0x2c]
  405e07:	lea    r8,[rsp+0x30]
  405e0c:	xor    r9d,r9d
  405e0f:	mov    edx,eax
  405e11:	call   0x407bc0
  405e16:	test   eax,eax
  405e18:	js     0x405e80
  405e1a:	mov    rdx,QWORD PTR [rsp+0x30]
  405e1f:	lea    rcx,[rip+0x21452]        # 0x427278
  405e26:	call   0x4059b0
  405e2b:	mov    rax,QWORD PTR [rip+0x277be]        # 0x42d5f0
  405e32:	mov    rcx,QWORD PTR [rsp+0x30]
  405e37:	call   QWORD PTR [rax]
  405e39:	mov    edx,DWORD PTR [rsp+0x2c]
  405e3d:	xor    eax,eax
  405e3f:	test   edx,edx
  405e41:	sete   al
  405e44:	add    rsp,0x78
  405e48:	pop    rbx
  405e49:	pop    rdi
  405e4a:	ret    
  405e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e50:	mov    ecx,eax
  405e52:	call   0x4078c0
  405e57:	lea    rcx,[rip+0x213ba]        # 0x427218
  405e5e:	mov    rdx,rax
  405e61:	call   0x4059b0
  405e66:	xor    eax,eax
  405e68:	add    rsp,0x78
  405e6c:	pop    rbx
  405e6d:	pop    rdi
  405e6e:	ret    
  405e6f:	nop
  405e70:	xor    eax,eax
  405e72:	jmp    0x405dbb
  405e77:	nop    WORD PTR [rax+rax*1+0x0]
  405e80:	mov    ecx,eax
  405e82:	call   0x4078c0
  405e87:	lea    rcx,[rip+0x213ba]        # 0x427248
  405e8e:	mov    rdx,rax
  405e91:	call   0x4059b0
  405e96:	xor    eax,eax
  405e98:	add    rsp,0x78
  405e9c:	pop    rbx
  405e9d:	pop    rdi
  405e9e:	ret    
  405e9f:	nop
  405ea0:	lea    rcx,[rip+0x21349]        # 0x4271f0
  405ea7:	call   0x4059b0
  405eac:	xor    eax,eax
  405eae:	jmp    0x405e44
  405eb0:	push   r15
  405eb2:	push   r14
  405eb4:	push   r13
  405eb6:	push   r12
  405eb8:	push   rbp
  405eb9:	push   rdi
  405eba:	push   rsi
  405ebb:	push   rbx
  405ebc:	sub    rsp,0x68
  405ec0:	cmp    edx,0x1
  405ec3:	mov    rbx,rcx
  405ec6:	mov    rsi,r8
  405ec9:	sbb    edi,edi
  405ecb:	mov    r12d,r9d
  405ece:	and    edi,0x3
  405ed1:	call   0x407c00
  405ed6:	test   eax,eax
  405ed8:	jne    0x406180
  405ede:	mov    rcx,rbx
  405ee1:	call   0x407bd8
  405ee6:	cmp    eax,0x1
  405ee9:	je     0x405ff0
  405eef:	cmp    eax,0x2
  405ef2:	je     0x405f12
  405ef4:	lea    rcx,[rip+0x21495]        # 0x427390
  405efb:	call   0x4059b0
  405f00:	nop
  405f01:	add    rsp,0x68
  405f05:	pop    rbx
  405f06:	pop    rsi
  405f07:	pop    rdi
  405f08:	pop    rbp
  405f09:	pop    r12
  405f0b:	pop    r13
  405f0d:	pop    r14
  405f0f:	pop    r15
  405f11:	ret    
  405f12:	lea    rdx,[rip+0x21454]        # 0x42736d
  405f19:	mov    rcx,rsi
  405f1c:	mov    DWORD PTR [rsp+0x3c],0x0
  405f24:	call   0x405a30
  405f29:	lea    rdx,[rsp+0x3c]
  405f2e:	mov    rcx,rbx
  405f31:	call   0x407be8
  405f36:	mov    rbx,rax
  405f39:	mov    eax,DWORD PTR [rsp+0x3c]
  405f3d:	test   eax,eax
  405f3f:	je     0x405f01
  405f41:	lea    rcx,[rsp+0x40]
  405f46:	call   0x407a28
  405f4b:	mov    rcx,QWORD PTR [rsp+0x40]
  405f50:	xor    r8d,r8d
  405f53:	mov    rdx,rbx
  405f56:	call   0x407a30
  405f5b:	test   eax,eax
  405f5d:	js     0x4061f0
  405f63:	mov    rcx,QWORD PTR [rsp+0x40]
  405f68:	lea    r8,[rsp+0x50]
  405f6d:	mov    edx,edi
  405f6f:	call   0x407a20
  405f74:	test   eax,eax
  405f76:	je     0x406248
  405f7c:	test   r12d,r12d
  405f7f:	je     0x405fdb
  405f81:	lea    rdi,[rsp+0x48]
  405f86:	mov    rcx,QWORD PTR [rsp+0x40]
  405f8b:	xor    r8d,r8d
  405f8e:	mov    edx,0x1
  405f93:	mov    QWORD PTR [rsp+0x48],0x0
  405f9c:	xor    ebx,ebx
  405f9e:	mov    r9,rdi
  405fa1:	call   0x407a38
  405fa6:	cmp    eax,0xffffffcd
  405fa9:	je     0x40626f
  405faf:	test   eax,eax
  405fb1:	js     0x406220
  405fb7:	mov    rdx,rsi
  405fba:	mov    rcx,rbx
  405fbd:	call   0x421e60
  405fc2:	mov    ecx,0xa
  405fc7:	mov    rdx,rsi
  405fca:	call   0x421e68
  405fcf:	mov    rax,QWORD PTR [rip+0x2761a]        # 0x42d5f0
  405fd6:	mov    rcx,rbx
  405fd9:	call   QWORD PTR [rax]
  405fdb:	mov    rcx,QWORD PTR [rsp+0x40]
  405fe0:	call   0x407a40
  405fe5:	jmp    0x405f01
  405fea:	nop    WORD PTR [rax+rax*1+0x0]
  405ff0:	lea    rdx,[rsp+0x3c]
  405ff5:	mov    rcx,rbx
  405ff8:	mov    DWORD PTR [rsp+0x3c],0x0
  406000:	call   0x407be8
  406005:	mov    ecx,DWORD PTR [rsp+0x3c]
  406009:	mov    r13,rax
  40600c:	test   ecx,ecx
  40600e:	je     0x406191
  406014:	lea    rdx,[rip+0x212ac]        # 0x4272c7
  40601b:	mov    rcx,rsi
  40601e:	call   0x405a30
  406023:	mov    r8d,DWORD PTR [rsp+0x3c]
  406028:	lea    rdx,[rip+0x212b9]        # 0x4272e8
  40602f:	mov    rcx,rsi
  406032:	call   0x405a30
  406037:	mov    edx,DWORD PTR [rsp+0x3c]
  40603b:	test   edx,edx
  40603d:	je     0x405f01
  406043:	lea    rax,[rsp+0x48]
  406048:	xor    ebx,ebx
  40604a:	lea    r14,[rsp+0x40]
  40604f:	lea    r15,[rsp+0x50]
  406054:	mov    QWORD PTR [rsp+0x20],rax
  406059:	mov    rax,QWORD PTR [rip+0x27590]        # 0x42d5f0
  406060:	mov    QWORD PTR [rsp+0x28],rax
  406065:	jmp    0x4060f8
  40606a:	nop    WORD PTR [rax+rax*1+0x0]
  406070:	test   r12d,r12d
  406073:	je     0x4060e1
  406075:	mov    r9,QWORD PTR [rsp+0x20]
  40607a:	mov    rcx,QWORD PTR [rsp+0x40]
  40607f:	xor    r8d,r8d
  406082:	mov    edx,0x1
  406087:	mov    QWORD PTR [rsp+0x48],0x0
  406090:	xor    ebp,ebp
  406092:	call   0x407888
  406097:	cmp    eax,0xffffffcd
  40609a:	je     0x4061b4
  4060a0:	test   eax,eax
  4060a2:	js     0x406220
  4060a8:	mov    rax,QWORD PTR [rsp+0x48]
  4060ad:	mov    rdx,rsi
  4060b0:	mov    ecx,0xa
  4060b5:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  4060ba:	call   0x421e68
  4060bf:	mov    rdx,rsi
  4060c2:	mov    rcx,rbp
  4060c5:	call   0x421e60
  4060ca:	mov    ecx,0xa
  4060cf:	mov    rdx,rsi
  4060d2:	call   0x421e68
  4060d7:	mov    rax,QWORD PTR [rsp+0x28]
  4060dc:	mov    rcx,rbp
  4060df:	call   QWORD PTR [rax]
  4060e1:	mov    rcx,QWORD PTR [rsp+0x40]
  4060e6:	add    ebx,0x1
  4060e9:	call   0x407890
  4060ee:	cmp    ebx,DWORD PTR [rsp+0x3c]
  4060f2:	jae    0x405f01
  4060f8:	mov    rcx,r14
  4060fb:	call   0x407878
  406100:	mov    edx,ebx
  406102:	mov    rcx,QWORD PTR [rsp+0x40]
  406107:	xor    r8d,r8d
  40610a:	shl    rdx,0x4
  40610e:	add    rdx,r13
  406111:	call   0x407880
  406116:	test   eax,eax
  406118:	js     0x4061f0
  40611e:	lea    rdx,[rip+0x21205]        # 0x42732a
  406125:	mov    r8d,ebx
  406128:	mov    rcx,rsi
  40612b:	call   0x405a30
  406130:	test   ebx,ebx
  406132:	je     0x4061b0
  406134:	cmp    edi,0x3
  406137:	jne    0x4061b0
  406139:	mov    edx,0x1
  40613e:	mov    edi,0x1
  406143:	mov    rcx,QWORD PTR [rsp+0x40]
  406148:	mov    r8,r15
  40614b:	call   0x407868
  406150:	test   eax,eax
  406152:	jne    0x406070
  406158:	mov    r8,QWORD PTR [rsp+0x50]
  40615d:	lea    rdx,[rip+0x211e2]        # 0x427346
  406164:	mov    rcx,rsi
  406167:	call   0x405a30
  40616c:	mov    rax,QWORD PTR [rip+0x2747d]        # 0x42d5f0
  406173:	mov    rcx,QWORD PTR [rsp+0x50]
  406178:	call   QWORD PTR [rax]
  40617a:	jmp    0x406070
  40617f:	nop
  406180:	lea    rcx,[rip+0x21101]        # 0x427288
  406187:	call   0x4059b0
  40618c:	jmp    0x405ede
  406191:	call   QWORD PTR [rip+0x32de5]        # 0x438f7c
  406197:	lea    rdx,[rip+0x21111]        # 0x4272af
  40619e:	lea    rcx,[rax+0x60]
  4061a2:	call   0x405a30
  4061a7:	jmp    0x405f01
  4061ac:	nop    DWORD PTR [rax+0x0]
  4061b0:	mov    edx,edi
  4061b2:	jmp    0x406143
  4061b4:	mov    rax,QWORD PTR [rsp+0x48]
  4061b9:	lea    rcx,[rax+0x1]
  4061bd:	call   0x4145c0
  4061c2:	test   rax,rax
  4061c5:	mov    rbp,rax
  4061c8:	je     0x40629b
  4061ce:	mov    r9,QWORD PTR [rsp+0x20]
  4061d3:	mov    rcx,QWORD PTR [rsp+0x40]
  4061d8:	mov    r8,rax
  4061db:	mov    edx,0x1
  4061e0:	call   0x407888
  4061e5:	jmp    0x4060a0
  4061ea:	nop    WORD PTR [rax+rax*1+0x0]
  4061f0:	mov    ecx,eax
  4061f2:	call   0x4078c0
  4061f7:	mov    rbx,rax
  4061fa:	call   QWORD PTR [rip+0x32d7c]        # 0x438f7c
  406200:	lea    rdx,[rip+0x2110f]        # 0x427316
  406207:	lea    rcx,[rax+0x60]
  40620b:	mov    r8,rbx
  40620e:	call   0x405a30
  406213:	jmp    0x405f01
  406218:	nop    DWORD PTR [rax+rax*1+0x0]
  406220:	mov    ecx,eax
  406222:	call   0x4078c0
  406227:	mov    rbx,rax
  40622a:	call   QWORD PTR [rip+0x32d4c]        # 0x438f7c
  406230:	lea    rdx,[rip+0x21122]        # 0x427359
  406237:	lea    rcx,[rax+0x60]
  40623b:	mov    r8,rbx
  40623e:	call   0x405a30
  406243:	jmp    0x405f01
  406248:	mov    r8,QWORD PTR [rsp+0x50]
  40624d:	lea    rdx,[rip+0x21136]        # 0x42738a
  406254:	mov    rcx,rsi
  406257:	call   0x405a30
  40625c:	mov    rax,QWORD PTR [rip+0x2738d]        # 0x42d5f0
  406263:	mov    rcx,QWORD PTR [rsp+0x50]
  406268:	call   QWORD PTR [rax]
  40626a:	jmp    0x405f7c
  40626f:	mov    rcx,QWORD PTR [rsp+0x48]
  406274:	call   0x4145c0
  406279:	test   rax,rax
  40627c:	mov    rbx,rax
  40627f:	je     0x40629b
  406281:	mov    rcx,QWORD PTR [rsp+0x40]
  406286:	mov    r9,rdi
  406289:	mov    r8,rax
  40628c:	mov    edx,0x1
  406291:	call   0x407a38
  406296:	jmp    0x405faf
  40629b:	call   QWORD PTR [rip+0x32cdb]        # 0x438f7c
  4062a1:	lea    rdx,[rip+0x210a2]        # 0x42734a
  4062a8:	lea    rcx,[rax+0x60]
  4062ac:	call   0x405a30
  4062b1:	mov    ecx,0x1
  4062b6:	call   0x421e98
  4062bb:	nop
  4062bc:	nop    DWORD PTR [rax+0x0]
  4062c0:	push   rdi
  4062c1:	push   rsi
  4062c2:	push   rbx
  4062c3:	sub    rsp,0x20
  4062c7:	mov    edi,r8d
  4062ca:	mov    rbx,rcx
  4062cd:	mov    esi,edx
  4062cf:	call   QWORD PTR [rip+0x32ca7]        # 0x438f7c
  4062d5:	lea    r8,[rax+0x30]
  4062d9:	mov    r9d,edi
  4062dc:	mov    edx,esi
  4062de:	mov    rcx,rbx
  4062e1:	add    rsp,0x20
  4062e5:	pop    rbx
  4062e6:	pop    rsi
  4062e7:	pop    rdi
  4062e8:	jmp    0x405eb0
  4062ed:	nop    DWORD PTR [rax]
  4062f0:	push   r14
  4062f2:	push   r13
  4062f4:	push   r12
  4062f6:	push   rbp
  4062f7:	push   rdi
  4062f8:	push   rsi
  4062f9:	push   rbx
  4062fa:	sub    rsp,0x180
  406301:	mov    rbx,rcx
  406304:	mov    ebp,r8d
  406307:	mov    edi,edx
  406309:	mov    QWORD PTR [rsp+0x38],0x21
  406312:	call   0x407928
  406317:	lea    rcx,[rip+0x21092]        # 0x4273b0
  40631e:	mov    rdx,rax
  406321:	mov    rsi,rax
  406324:	call   0x4059b0
  406329:	mov    rax,QWORD PTR [rip+0x272c0]        # 0x42d5f0
  406330:	mov    rcx,rsi
  406333:	lea    rsi,[rsp+0x50]
  406338:	call   QWORD PTR [rax]
  40633a:	lea    r8,[rsp+0x38]
  40633f:	mov    rdx,rsi
  406342:	mov    rcx,rbx
  406345:	call   0x407920
  40634a:	mov    rdx,QWORD PTR [rsp+0x38]
  40634f:	mov    rcx,rsi
  406352:	call   0x405ce0
  406357:	lea    rcx,[rip+0x21065]        # 0x4273c3
  40635e:	mov    rdx,rax
  406361:	call   0x4059b0
  406366:	mov    rcx,rbx
  406369:	call   0x407a88
  40636e:	mov    rcx,rbx
  406371:	mov    esi,eax
  406373:	call   0x407c18
  406378:	cmp    eax,0x5
  40637b:	ja     0x40639d
  40637d:	lea    r10,[rip+0x21294]        # 0x427618
  406384:	mov    r9d,eax
  406387:	movsxd rax,DWORD PTR [r10+r9*4]
  40638b:	add    r10,rax
  40638e:	jmp    r10
  406391:	lea    rcx,[rip+0x210d4]        # 0x42746c
  406398:	call   0x4059b0
  40639d:	lea    r13,[rsp+0x34]
  4063a2:	lea    r12,[rsp+0x40]
  4063a7:	mov    rcx,rbx
  4063aa:	call   0x4079b8
  4063af:	mov    ecx,eax
  4063b1:	call   0x4079c0
  4063b6:	test   rax,rax
  4063b9:	lea    rdx,[rip+0x20fde]        # 0x42739e
  4063c0:	je     0x4063d4
  4063c2:	mov    rcx,rbx
  4063c5:	call   0x4079b8
  4063ca:	mov    ecx,eax
  4063cc:	call   0x4079c0
  4063d1:	mov    rdx,rax
  4063d4:	lea    rcx,[rip+0x210f0]        # 0x4274cb
  4063db:	call   0x4059b0
  4063e0:	mov    ecx,esi
  4063e2:	call   0x407a80
  4063e7:	test   rax,rax
  4063ea:	lea    rdx,[rip+0x20fad]        # 0x42739e
  4063f1:	je     0x4063fd
  4063f3:	mov    ecx,esi
  4063f5:	call   0x407a80
  4063fa:	mov    rdx,rax
  4063fd:	lea    rcx,[rip+0x210d6]        # 0x4274da
  406404:	call   0x4059b0
  406409:	mov    rcx,rbx
  40640c:	call   0x407908
  406411:	test   eax,eax
  406413:	jne    0x4066d1
  406419:	mov    rcx,rbx
  40641c:	call   0x407900
  406421:	test   eax,eax
  406423:	jne    0x406693
  406429:	mov    rcx,rbx
  40642c:	call   0x407ba8
  406431:	mov    ecx,eax
  406433:	call   0x407ba0
  406438:	test   rax,rax
  40643b:	lea    rdx,[rip+0x20f5c]        # 0x42739e
  406442:	je     0x406456
  406444:	mov    rcx,rbx
  406447:	call   0x407ba8
  40644c:	mov    ecx,eax
  40644e:	call   0x407ba0
  406453:	mov    rdx,rax
  406456:	lea    rcx,[rip+0x210c1]        # 0x42751e
  40645d:	call   0x4059b0
  406462:	mov    rcx,rbx
  406465:	call   0x407a70
  40646a:	mov    ecx,eax
  40646c:	call   0x407a68
  406471:	test   rax,rax
  406474:	lea    rdx,[rip+0x20f23]        # 0x42739e
  40647b:	je     0x40648f
  40647d:	mov    rcx,rbx
  406480:	call   0x407a70
  406485:	mov    ecx,eax
  406487:	call   0x407a68
  40648c:	mov    rdx,rax
  40648f:	lea    rcx,[rip+0x21096]        # 0x42752c
  406496:	call   0x4059b0
  40649b:	mov    rcx,rbx
  40649e:	call   0x407b88
  4064a3:	mov    ecx,eax
  4064a5:	call   0x407b80
  4064aa:	test   rax,rax
  4064ad:	lea    rdx,[rip+0x20eea]        # 0x42739e
  4064b4:	je     0x4064c8
  4064b6:	mov    rcx,rbx
  4064b9:	call   0x407b88
  4064be:	mov    ecx,eax
  4064c0:	call   0x407b80
  4064c5:	mov    rdx,rax
  4064c8:	lea    rcx,[rip+0x21068]        # 0x427537
  4064cf:	call   0x4059b0
  4064d4:	lea    rcx,[rip+0x2106f]        # 0x42754a
  4064db:	call   0x4059b0
  4064e0:	mov    rcx,rbx
  4064e3:	call   0x407938
  4064e8:	test   eax,eax
  4064ea:	jne    0x406682
  4064f0:	mov    rcx,rbx
  4064f3:	call   0x407960
  4064f8:	test   eax,eax
  4064fa:	jne    0x406671
  406500:	mov    rcx,rbx
  406503:	call   0x407940
  406508:	test   eax,eax
  40650a:	jne    0x406660
  406510:	mov    edx,0x1
  406515:	mov    rcx,rbx
  406518:	call   0x407a48
  40651d:	test   eax,eax
  40651f:	jne    0x406630
  406525:	lea    rcx,[rip+0x21075]        # 0x4275a1
  40652c:	call   0x4059b0
  406531:	mov    rdx,r13
  406534:	mov    rcx,rbx
  406537:	call   0x4078c8
  40653c:	test   eax,eax
  40653e:	je     0x406610
  406544:	mov    rdx,r12
  406547:	mov    rcx,rbx
  40654a:	call   0x407c30
  40654f:	test   eax,eax
  406551:	je     0x4065f4
  406557:	test   edi,edi
  406559:	mov    rsi,QWORD PTR [rip+0x32a1c]        # 0x438f7c
  406560:	jne    0x406581
  406562:	call   rsi
  406564:	lea    rcx,[rax+0x30]
  406568:	call   0x421e80
  40656d:	xor    eax,eax
  40656f:	add    rsp,0x180
  406576:	pop    rbx
  406577:	pop    rsi
  406578:	pop    rdi
  406579:	pop    rbp
  40657a:	pop    r12
  40657c:	pop    r13
  40657e:	pop    r14
  406580:	ret    
  406581:	lea    r8,[rsp+0x80]
  406589:	xor    edx,edx
  40658b:	mov    rcx,rbx
  40658e:	call   0x407948
  406593:	test   eax,eax
  406595:	jne    0x406710
  40659b:	lea    rcx,[rip+0x2104e]        # 0x4275f0
  4065a2:	xor    ebx,ebx
  4065a4:	call   0x4059b0
  4065a9:	mov    eax,DWORD PTR [rsp+0x88]
  4065b0:	test   eax,eax
  4065b2:	je     0x4065dc
  4065b4:	mov    rax,QWORD PTR [rsp+0x80]
  4065bc:	lea    rcx,[rip+0x2104e]        # 0x427611
  4065c3:	movzx  edx,BYTE PTR [rax+rbx*1]
  4065c7:	add    rbx,0x1
  4065cb:	call   0x4059b0
  4065d0:	mov    eax,DWORD PTR [rsp+0x88]
  4065d7:	cmp    rax,rbx
  4065da:	ja     0x4065b4
  4065dc:	lea    rcx,[rip+0x20fbe]        # 0x4275a1
  4065e3:	call   0x4059b0
  4065e8:	mov    rsi,QWORD PTR [rip+0x3298d]        # 0x438f7c
  4065ef:	jmp    0x406562
  4065f4:	mov    r8,QWORD PTR [rsp+0x40]
  4065f9:	mov    edx,DWORD PTR [rsp+0x48]
  4065fd:	lea    rcx,[rip+0x20fb3]        # 0x4275b7
  406604:	call   0x4059b0
  406609:	jmp    0x406557
  40660e:	xchg   ax,ax
  406610:	mov    ecx,DWORD PTR [rsp+0x34]
  406614:	call   0x4078d0
  406619:	lea    rcx,[rip+0x20f83]        # 0x4275a3
  406620:	mov    rdx,rax
  406623:	call   0x4059b0
  406628:	jmp    0x406544
  40662d:	nop    DWORD PTR [rax]
  406630:	xor    edx,edx
  406632:	mov    rcx,rbx
  406635:	call   0x407a48
  40663a:	lea    rdx,[rip+0x20d65]        # 0x4273a6
  406641:	test   eax,eax
  406643:	lea    rax,[rip+0x20b8a]        # 0x4271d4
  40664a:	lea    rcx,[rip+0x20f38]        # 0x427589
  406651:	cmovne rdx,rax
  406655:	call   0x4059b0
  40665a:	jmp    0x406525
  40665f:	nop
  406660:	lea    rcx,[rip+0x20f1c]        # 0x427583
  406667:	call   0x4059b0
  40666c:	jmp    0x406510
  406671:	lea    rcx,[rip+0x20ef6]        # 0x42756e
  406678:	call   0x4059b0
  40667d:	jmp    0x406500
  406682:	lea    rcx,[rip+0x20ecc]        # 0x427555
  406689:	call   0x4059b0
  40668e:	jmp    0x4064f0
  406693:	mov    rcx,rbx
  406696:	call   0x407900
  40669b:	mov    ecx,eax
  40669d:	call   0x4078f8
  4066a2:	test   rax,rax
  4066a5:	lea    rdx,[rip+0x20cf2]        # 0x42739e
  4066ac:	je     0x4066c0
  4066ae:	mov    rcx,rbx
  4066b1:	call   0x407900
  4066b6:	mov    ecx,eax
  4066b8:	call   0x4078f8
  4066bd:	mov    rdx,rax
  4066c0:	lea    rcx,[rip+0x20e3f]        # 0x427506
  4066c7:	call   0x4059b0
  4066cc:	jmp    0x406429
  4066d1:	mov    rcx,rbx
  4066d4:	call   0x407908
  4066d9:	mov    ecx,eax
  4066db:	call   0x4078f8
  4066e0:	test   rax,rax
  4066e3:	lea    rdx,[rip+0x20cb4]        # 0x42739e
  4066ea:	je     0x4066fe
  4066ec:	mov    rcx,rbx
  4066ef:	call   0x407908
  4066f4:	mov    ecx,eax
  4066f6:	call   0x4078f8
  4066fb:	mov    rdx,rax
  4066fe:	lea    rcx,[rip+0x20de9]        # 0x4274ee
  406705:	call   0x4059b0
  40670a:	jmp    0x406419
  40670f:	nop
  406710:	mov    ecx,eax
  406712:	call   0x4078c0
  406717:	mov    rbx,rax
  40671a:	call   rsi
  40671c:	lea    rdx,[rip+0x20eb2]        # 0x4275d5
  406723:	lea    rcx,[rax+0x60]
  406727:	mov    r8,rbx
  40672a:	call   0x405a30
  40672f:	jmp    0x406562
  406734:	lea    r13,[rsp+0x34]
  406739:	lea    r12,[rsp+0x40]
  40673e:	lea    r14,[rsp+0x80]
  406746:	mov    DWORD PTR [rsp+0x20],0x0
  40674e:	mov    rcx,rbx
  406751:	mov    QWORD PTR [rsp+0x40],0x100
  40675a:	mov    r9,r13
  40675d:	mov    r8,r12
  406760:	mov    rdx,r14
  406763:	call   0x407958
  406768:	test   eax,eax
  40676a:	je     0x4068c2
  406770:	test   bpl,0x2
  406774:	jne    0x4068a0
  40677a:	and    ebp,0x1
  40677d:	jne    0x406885
  406783:	lea    eax,[rsi-0x2]
  406786:	cmp    eax,0x1
  406789:	jbe    0x4068f4
  40678f:	lea    eax,[rsi-0xc]
  406792:	cmp    eax,0x1
  406795:	ja     0x4063a7
  40679b:	lea    rdx,[rip+0x20cbf]        # 0x427461
  4067a2:	mov    rcx,rbx
  4067a5:	call   0x4059e0
  4067aa:	jmp    0x4063a7
  4067af:	nop
  4067b0:	cmp    esi,0xb
  4067b3:	je     0x4068e0
  4067b9:	lea    rdx,[rip+0x20c15]        # 0x4273d5
  4067c0:	mov    r8d,edi
  4067c3:	mov    rcx,rbx
  4067c6:	lea    r13,[rsp+0x34]
  4067cb:	lea    r12,[rsp+0x40]
  4067d0:	call   0x405a60
  4067d5:	jmp    0x4063a7
  4067da:	nop    WORD PTR [rax+rax*1+0x0]
  4067e0:	mov    rcx,rbx
  4067e3:	call   0x4078d8
  4067e8:	test   rax,rax
  4067eb:	je     0x40639d
  4067f1:	mov    rcx,rbx
  4067f4:	lea    r13,[rsp+0x34]
  4067f9:	lea    r12,[rsp+0x40]
  4067fe:	call   0x4078d8
  406803:	lea    rcx,[rip+0x20bd6]        # 0x4273e0
  40680a:	mov    rdx,rax
  40680d:	call   0x4059b0
  406812:	jmp    0x4063a7
  406817:	nop    WORD PTR [rax+rax*1+0x0]
  406820:	mov    rcx,rbx
  406823:	call   0x4079a8
  406828:	test   rax,rax
  40682b:	je     0x406844
  40682d:	mov    rcx,rbx
  406830:	call   0x4079a8
  406835:	lea    rcx,[rip+0x20bd4]        # 0x427410
  40683c:	mov    rdx,rax
  40683f:	call   0x4059b0
  406844:	mov    rcx,rbx
  406847:	call   0x4079a0
  40684c:	test   rax,rax
  40684f:	je     0x406868
  406851:	mov    rcx,rbx
  406854:	call   0x4079a0
  406859:	lea    rcx,[rip+0x20bd8]        # 0x427438
  406860:	mov    rdx,rax
  406863:	call   0x4059b0
  406868:	cmp    esi,0xa
  40686b:	lea    r13,[rsp+0x34]
  406870:	lea    r12,[rsp+0x40]
  406875:	je     0x4068f4
  406877:	cmp    esi,0xe
  40687a:	jne    0x4063a7
  406880:	jmp    0x40679b
  406885:	mov    r8d,0x1
  40688b:	mov    edx,edi
  40688d:	mov    rcx,rbx
  406890:	call   0x4062c0
  406895:	jmp    0x406783
  40689a:	nop    WORD PTR [rax+rax*1+0x0]
  4068a0:	mov    rcx,rbx
  4068a3:	call   0x407bf0
  4068a8:	test   rax,rax
  4068ab:	jne    0x40677a
  4068b1:	lea    rcx,[rip+0x20bf0]        # 0x4274a8
  4068b8:	call   0x4059b0
  4068bd:	jmp    0x40677a
  4068c2:	mov    edx,DWORD PTR [rsp+0x34]
  4068c6:	lea    rcx,[rip+0x20bb8]        # 0x427485
  4068cd:	mov    r8,r14
  4068d0:	call   0x4059b0
  4068d5:	jmp    0x406770
  4068da:	nop    WORD PTR [rax+rax*1+0x0]
  4068e0:	lea    rdx,[rip+0x20aee]        # 0x4273d5
  4068e7:	mov    rcx,rbx
  4068ea:	call   0x4059e0
  4068ef:	jmp    0x40639d
  4068f4:	lea    rdx,[rip+0x20b66]        # 0x427461
  4068fb:	mov    r8d,edi
  4068fe:	mov    rcx,rbx
  406901:	call   0x405a60
  406906:	jmp    0x4063a7
  40690b:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	push   rbx
  406911:	sub    rsp,0x40
  406915:	mov    rbx,rcx
  406918:	call   0x407c00
  40691d:	test   eax,eax
  40691f:	jne    0x406a50
  406925:	mov    rcx,rbx
  406928:	call   0x407bd8
  40692d:	cmp    eax,0x1
  406930:	je     0x4069c0
  406936:	cmp    eax,0x2
  406939:	je     0x406950
  40693b:	lea    rcx,[rip+0x20a4e]        # 0x427390
  406942:	call   0x4059b0
  406947:	nop
  406948:	add    rsp,0x40
  40694c:	pop    rbx
  40694d:	ret    
  40694e:	xchg   ax,ax
  406950:	lea    rdx,[rsp+0x24]
  406955:	mov    rcx,rbx
  406958:	mov    DWORD PTR [rsp+0x24],0x0
  406960:	call   0x407be8
  406965:	mov    rbx,rax
  406968:	mov    eax,DWORD PTR [rsp+0x24]
  40696c:	test   eax,eax
  40696e:	je     0x406948
  406970:	lea    rcx,[rsp+0x28]
  406975:	call   0x407a28
  40697a:	mov    rcx,QWORD PTR [rsp+0x28]
  40697f:	xor    r8d,r8d
  406982:	mov    rdx,rbx
  406985:	call   0x407a30
  40698a:	test   eax,eax
  40698c:	js     0x406a80
  406992:	mov    rcx,QWORD PTR [rsp+0x28]
  406997:	lea    r8,[rsp+0x30]
  40699c:	mov    edx,0x3
  4069a1:	call   0x407a20
  4069a6:	test   eax,eax
  4069a8:	je     0x406ab0
  4069ae:	mov    rcx,QWORD PTR [rsp+0x28]
  4069b3:	call   0x407a40
  4069b8:	jmp    0x406948
  4069ba:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	lea    rdx,[rsp+0x24]
  4069c5:	mov    rcx,rbx
  4069c8:	mov    DWORD PTR [rsp+0x24],0x0
  4069d0:	call   0x407be8
  4069d5:	mov    edx,DWORD PTR [rsp+0x24]
  4069d9:	mov    rbx,rax
  4069dc:	test   edx,edx
  4069de:	je     0x406a61
  4069e4:	lea    rcx,[rsp+0x28]
  4069e9:	call   0x407878
  4069ee:	mov    rcx,QWORD PTR [rsp+0x28]
  4069f3:	xor    r8d,r8d
  4069f6:	mov    rdx,rbx
  4069f9:	call   0x407880
  4069fe:	test   eax,eax
  406a00:	js     0x406a80
  406a02:	mov    rcx,QWORD PTR [rsp+0x28]
  406a07:	lea    r8,[rsp+0x30]
  406a0c:	mov    edx,0x3
  406a11:	call   0x407868
  406a16:	test   eax,eax
  406a18:	jne    0x406a39
  406a1a:	mov    rdx,QWORD PTR [rsp+0x30]
  406a1f:	lea    rcx,[rip+0x20c0a]        # 0x427630
  406a26:	call   0x4059b0
  406a2b:	mov    rax,QWORD PTR [rip+0x26bbe]        # 0x42d5f0
  406a32:	mov    rcx,QWORD PTR [rsp+0x30]
  406a37:	call   QWORD PTR [rax]
  406a39:	mov    rcx,QWORD PTR [rsp+0x28]
  406a3e:	call   0x407890
  406a43:	nop
  406a44:	add    rsp,0x40
  406a48:	pop    rbx
  406a49:	ret    
  406a4a:	nop    WORD PTR [rax+rax*1+0x0]
  406a50:	lea    rcx,[rip+0x20831]        # 0x427288
  406a57:	call   0x4059b0
  406a5c:	jmp    0x406925
  406a61:	call   QWORD PTR [rip+0x32515]        # 0x438f7c
  406a67:	lea    rdx,[rip+0x20841]        # 0x4272af
  406a6e:	lea    rcx,[rax+0x60]
  406a72:	call   0x405a30
  406a77:	nop
  406a78:	add    rsp,0x40
  406a7c:	pop    rbx
  406a7d:	ret    
  406a7e:	xchg   ax,ax
  406a80:	mov    ecx,eax
  406a82:	call   0x4078c0
  406a87:	mov    rbx,rax
  406a8a:	call   QWORD PTR [rip+0x324ec]        # 0x438f7c
  406a90:	lea    rdx,[rip+0x2087f]        # 0x427316
  406a97:	lea    rcx,[rax+0x60]
  406a9b:	mov    r8,rbx
  406a9e:	call   0x405a30
  406aa3:	jmp    0x406948
  406aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ab0:	mov    rdx,QWORD PTR [rsp+0x30]
  406ab5:	lea    rcx,[rip+0x20b86]        # 0x427642
  406abc:	call   0x4059b0
  406ac1:	mov    rax,QWORD PTR [rip+0x26b28]        # 0x42d5f0
  406ac8:	mov    rcx,QWORD PTR [rsp+0x30]
  406acd:	call   QWORD PTR [rax]
  406acf:	jmp    0x4069ae
  406ad4:	xchg   ax,ax
  406ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ae0:	push   r15
  406ae2:	push   r14
  406ae4:	push   r13
  406ae6:	push   r12
  406ae8:	push   rbp
  406ae9:	push   rdi
  406aea:	push   rsi
  406aeb:	push   rbx
  406aec:	sub    rsp,0x78
  406af0:	test   rcx,rcx
  406af3:	mov    rbx,rcx
  406af6:	mov    ebp,edx
  406af8:	je     0x406e85
  406afe:	mov    rdx,rcx
  406b01:	lea    rcx,[rip+0x20b4e]        # 0x427656
  406b08:	call   0x4059b0
  406b0d:	lea    rcx,[rsp+0x60]
  406b12:	lea    r8,[rsp+0x58]
  406b17:	mov    rdx,rbx
  406b1a:	call   0x4079e0
  406b1f:	test   eax,eax
  406b21:	js     0x407363
  406b27:	xor    ebx,ebx
  406b29:	lea    rdi,[rsp+0x50]
  406b2e:	lea    r12,[rsp+0x40]
  406b33:	lea    rbp,[rsp+0x54]
  406b38:	jmp    0x406b9a
  406b3a:	nop    WORD PTR [rax+rax*1+0x0]
  406b40:	cmp    eax,0xffffffeb
  406b43:	je     0x406b96
  406b45:	mov    ecx,DWORD PTR [rsp+0x50]
  406b49:	xor    r9d,r9d
  406b4c:	xor    r8d,r8d
  406b4f:	mov    QWORD PTR [rsp+0x28],rbp
  406b54:	mov    QWORD PTR [rsp+0x20],0x0
  406b5d:	mov    rdx,r12
  406b60:	call   0x407b90
  406b65:	test   rax,rax
  406b68:	mov    rsi,rax
  406b6b:	je     0x406b96
  406b6d:	mov    ecx,DWORD PTR [rsp+0x54]
  406b71:	call   0x4079c0
  406b76:	movzx  r9d,BYTE PTR [rsp+0x41]
  406b7c:	movzx  r8d,BYTE PTR [rsp+0x40]
  406b82:	lea    rcx,[rip+0x20af8]        # 0x427681
  406b89:	mov    QWORD PTR [rsp+0x20],rax
  406b8e:	mov    rdx,rsi
  406b91:	call   0x4059b0
  406b96:	add    rbx,0x1
  406b9a:	mov    rcx,QWORD PTR [rsp+0x60]
  406b9f:	mov    r8,rdi
  406ba2:	mov    edx,ebx
  406ba4:	call   0x4079e8
  406ba9:	cmp    eax,0xffffffc8
  406bac:	jne    0x406b40
  406bae:	lea    rcx,[rip+0x209ec]        # 0x4275a1
  406bb5:	lea    rdi,[rsp+0x68]
  406bba:	call   0x4059b0
  406bbf:	mov    rcx,QWORD PTR [rsp+0x60]
  406bc4:	mov    rdx,rdi
  406bc7:	call   0x407a00
  406bcc:	lea    rcx,[rip+0x20ac7]        # 0x42769a
  406bd3:	mov    esi,eax
  406bd5:	call   0x4059b0
  406bda:	test   esi,esi
  406bdc:	je     0x406e74
  406be2:	xor    ebx,ebx
  406be4:	cmp    rbx,rsi
  406be7:	jae    0x406c23
  406be9:	mov    rax,QWORD PTR [rsp+0x68]
  406bee:	mov    ecx,DWORD PTR [rax+rbx*4]
  406bf1:	add    rbx,0x1
  406bf5:	call   0x407bd0
  406bfa:	lea    rcx,[rip+0x20ab3]        # 0x4276b4
  406c01:	mov    rdx,rax
  406c04:	call   0x4059b0
  406c09:	cmp    rbx,rsi
  406c0c:	je     0x406dd1
  406c12:	lea    rcx,[rip+0x20aa4]        # 0x4276bd
  406c19:	call   0x4059b0
  406c1e:	cmp    rbx,rsi
  406c21:	jb     0x406be9
  406c23:	mov    rcx,QWORD PTR [rsp+0x60]
  406c28:	mov    rdx,rdi
  406c2b:	call   0x4079d8
  406c30:	lea    rcx,[rip+0x20a89]        # 0x4276c0
  406c37:	mov    esi,eax
  406c39:	call   0x4059b0
  406c3e:	test   esi,esi
  406c40:	je     0x406e63
  406c46:	xor    ebx,ebx
  406c48:	cmp    rbx,rsi
  406c4b:	jae    0x406c87
  406c4d:	mov    rax,QWORD PTR [rsp+0x68]
  406c52:	mov    ecx,DWORD PTR [rax+rbx*4]
  406c55:	add    rbx,0x1
  406c59:	call   0x4079c0
  406c5e:	lea    rcx,[rip+0x20a67]        # 0x4276cc
  406c65:	mov    rdx,rax
  406c68:	call   0x4059b0
  406c6d:	cmp    rsi,rbx
  406c70:	je     0x406de2
  406c76:	lea    rcx,[rip+0x20a40]        # 0x4276bd
  406c7d:	call   0x4059b0
  406c82:	cmp    rbx,rsi
  406c85:	jb     0x406c4d
  406c87:	mov    rcx,QWORD PTR [rsp+0x60]
  406c8c:	mov    rdx,rdi
  406c8f:	call   0x4079f8
  406c94:	lea    rcx,[rip+0x20a39]        # 0x4276d4
  406c9b:	mov    esi,eax
  406c9d:	call   0x4059b0
  406ca2:	test   esi,esi
  406ca4:	je     0x406e52
  406caa:	xor    ebx,ebx
  406cac:	cmp    rbx,rsi
  406caf:	jae    0x406ceb
  406cb1:	mov    rax,QWORD PTR [rsp+0x68]
  406cb6:	mov    ecx,DWORD PTR [rax+rbx*4]
  406cb9:	add    rbx,0x1
  406cbd:	call   0x407b80
  406cc2:	lea    rcx,[rip+0x20a19]        # 0x4276e2
  406cc9:	mov    rdx,rax
  406ccc:	call   0x4059b0
  406cd1:	cmp    rsi,rbx
  406cd4:	je     0x406e00
  406cda:	lea    rcx,[rip+0x209dc]        # 0x4276bd
  406ce1:	call   0x4059b0
  406ce6:	cmp    rbx,rsi
  406ce9:	jb     0x406cb1
  406ceb:	mov    rcx,QWORD PTR [rsp+0x60]
  406cf0:	mov    rdx,rdi
  406cf3:	call   0x4079f0
  406cf8:	lea    rcx,[rip+0x209eb]        # 0x4276ea
  406cff:	mov    esi,eax
  406d01:	call   0x4059b0
  406d06:	test   esi,esi
  406d08:	je     0x406e41
  406d0e:	xor    ebx,ebx
  406d10:	cmp    rbx,rsi
  406d13:	jae    0x406d4f
  406d15:	mov    rax,QWORD PTR [rsp+0x68]
  406d1a:	mov    ecx,DWORD PTR [rax+rbx*4]
  406d1d:	add    rbx,0x1
  406d21:	call   0x407af8
  406d26:	lea    rcx,[rip+0x209cf]        # 0x4276fc
  406d2d:	mov    rdx,rax
  406d30:	call   0x4059b0
  406d35:	cmp    rsi,rbx
  406d38:	je     0x406e14
  406d3e:	lea    rcx,[rip+0x20978]        # 0x4276bd
  406d45:	call   0x4059b0
  406d4a:	cmp    rbx,rsi
  406d4d:	jb     0x406d15
  406d4f:	mov    rcx,QWORD PTR [rsp+0x60]
  406d54:	mov    rdx,rdi
  406d57:	call   0x4079c8
  406d5c:	lea    rcx,[rip+0x209a2]        # 0x427705
  406d63:	mov    esi,eax
  406d65:	call   0x4059b0
  406d6a:	test   esi,esi
  406d6c:	je     0x406e30
  406d72:	xor    ebx,ebx
  406d74:	cmp    rbx,rsi
  406d77:	jae    0x406daf
  406d79:	mov    rax,QWORD PTR [rsp+0x68]
  406d7e:	mov    ecx,DWORD PTR [rax+rbx*4]
  406d81:	add    rbx,0x1
  406d85:	call   0x4078f8
  406d8a:	lea    rcx,[rip+0x20984]        # 0x427715
  406d91:	mov    rdx,rax
  406d94:	call   0x4059b0
  406d99:	cmp    rsi,rbx
  406d9c:	je     0x406dc0
  406d9e:	lea    rcx,[rip+0x20918]        # 0x4276bd
  406da5:	call   0x4059b0
  406daa:	cmp    rbx,rsi
  406dad:	jb     0x406d79
  406daf:	add    rsp,0x78
  406db3:	pop    rbx
  406db4:	pop    rsi
  406db5:	pop    rdi
  406db6:	pop    rbp
  406db7:	pop    r12
  406db9:	pop    r13
  406dbb:	pop    r14
  406dbd:	pop    r15
  406dbf:	ret    
  406dc0:	lea    rcx,[rip+0x207da]        # 0x4275a1
  406dc7:	mov    rbx,rsi
  406dca:	call   0x4059b0
  406dcf:	jmp    0x406d74
  406dd1:	lea    rcx,[rip+0x207c9]        # 0x4275a1
  406dd8:	call   0x4059b0
  406ddd:	jmp    0x406be4
  406de2:	lea    rcx,[rip+0x207b8]        # 0x4275a1
  406de9:	mov    rbx,rsi
  406dec:	call   0x4059b0
  406df1:	jmp    0x406c48
  406df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e00:	lea    rcx,[rip+0x2079a]        # 0x4275a1
  406e07:	mov    rbx,rsi
  406e0a:	call   0x4059b0
  406e0f:	jmp    0x406cac
  406e14:	lea    rcx,[rip+0x20786]        # 0x4275a1
  406e1b:	mov    rbx,rsi
  406e1e:	call   0x4059b0
  406e23:	jmp    0x406d10
  406e28:	nop    DWORD PTR [rax+rax*1+0x0]
  406e30:	lea    rcx,[rip+0x20877]        # 0x4276ae
  406e37:	call   0x4059b0
  406e3c:	jmp    0x406d72
  406e41:	lea    rcx,[rip+0x20866]        # 0x4276ae
  406e48:	call   0x4059b0
  406e4d:	jmp    0x406d0e
  406e52:	lea    rcx,[rip+0x20855]        # 0x4276ae
  406e59:	call   0x4059b0
  406e5e:	jmp    0x406caa
  406e63:	lea    rcx,[rip+0x20844]        # 0x4276ae
  406e6a:	call   0x4059b0
  406e6f:	jmp    0x406c46
  406e74:	lea    rcx,[rip+0x20833]        # 0x4276ae
  406e7b:	call   0x4059b0
  406e80:	jmp    0x406be2
  406e85:	lea    rcx,[rip+0x20891]        # 0x42771d
  406e8c:	xor    esi,esi
  406e8e:	lea    r15,[rsp+0x58]
  406e93:	lea    r14,[rsp+0x60]
  406e98:	lea    r13,[rsp+0x40]
  406e9d:	lea    r12,[rsp+0x54]
  406ea2:	call   0x4059b0
  406ea7:	lea    rdi,[rsp+0x68]
  406eac:	jmp    0x406eb4
  406eae:	xchg   ax,ax
  406eb0:	add    rsi,0x1
  406eb4:	mov    QWORD PTR [rsp+0x28],r12
  406eb9:	mov    QWORD PTR [rsp+0x20],rdi
  406ebe:	mov    r9,r14
  406ec1:	mov    r8,r15
  406ec4:	mov    rdx,r13
  406ec7:	mov    rcx,rsi
  406eca:	call   0x407b90
  406ecf:	test   rax,rax
  406ed2:	mov    rbx,rax
  406ed5:	je     0x406f43
  406ed7:	mov    ecx,DWORD PTR [rsp+0x54]
  406edb:	call   0x4079c0
  406ee0:	movzx  r9d,BYTE PTR [rsp+0x41]
  406ee6:	movzx  r8d,BYTE PTR [rsp+0x40]
  406eec:	lea    rcx,[rip+0x2078e]        # 0x427681
  406ef3:	mov    QWORD PTR [rsp+0x20],rax
  406ef8:	mov    rdx,rbx
  406efb:	call   0x4059b0
  406f00:	test   ebp,ebp
  406f02:	je     0x406eb0
  406f04:	mov    ecx,DWORD PTR [rsp+0x68]
  406f08:	call   0x407a68
  406f0d:	mov    ecx,DWORD PTR [rsp+0x60]
  406f11:	mov    QWORD PTR [rsp+0x38],rax
  406f16:	call   0x407ba0
  406f1b:	mov    ecx,DWORD PTR [rsp+0x58]
  406f1f:	mov    rbx,rax
  406f22:	call   0x407a80
  406f27:	mov    r9,QWORD PTR [rsp+0x38]
  406f2c:	lea    rcx,[rip+0x207fd]        # 0x427730
  406f33:	mov    r8,rbx
  406f36:	mov    rdx,rax
  406f39:	call   0x4059b0
  406f3e:	jmp    0x406eb0
  406f43:	lea    rcx,[rip+0x20657]        # 0x4275a1
  406f4a:	call   0x4059b0
  406f4f:	call   0x407bc8
  406f54:	lea    rcx,[rip+0x2073f]        # 0x42769a
  406f5b:	mov    rbx,rax
  406f5e:	call   0x4059b0
  406f63:	mov    ecx,DWORD PTR [rbx]
  406f65:	test   ecx,ecx
  406f67:	jne    0x406f86
  406f69:	jmp    0x406fb7
  406f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406f70:	lea    rcx,[rip+0x20746]        # 0x4276bd
  406f77:	add    rbx,0x4
  406f7b:	call   0x4059b0
  406f80:	mov    ecx,DWORD PTR [rbx]
  406f82:	test   ecx,ecx
  406f84:	je     0x406fb7
  406f86:	call   0x407bd0
  406f8b:	lea    rcx,[rip+0x20722]        # 0x4276b4
  406f92:	mov    rdx,rax
  406f95:	call   0x4059b0
  406f9a:	mov    ebp,DWORD PTR [rbx+0x4]
  406f9d:	test   ebp,ebp
  406f9f:	jne    0x406f70
  406fa1:	lea    rcx,[rip+0x205f9]        # 0x4275a1
  406fa8:	add    rbx,0x4
  406fac:	call   0x4059b0
  406fb1:	mov    ecx,DWORD PTR [rbx]
  406fb3:	test   ecx,ecx
  406fb5:	jne    0x406f86
  406fb7:	call   0x4079b0
  406fbc:	lea    rcx,[rip+0x206fd]        # 0x4276c0
  406fc3:	mov    rbx,rax
  406fc6:	call   0x4059b0
  406fcb:	mov    ecx,DWORD PTR [rbx]
  406fcd:	test   ecx,ecx
  406fcf:	jne    0x406fe9
  406fd1:	jmp    0x40701a
  406fd3:	lea    rcx,[rip+0x206e3]        # 0x4276bd
  406fda:	add    rbx,0x4
  406fde:	call   0x4059b0
  406fe3:	mov    ecx,DWORD PTR [rbx]
  406fe5:	test   ecx,ecx
  406fe7:	je     0x40701a
  406fe9:	call   0x4079c0
  406fee:	lea    rcx,[rip+0x206d7]        # 0x4276cc
  406ff5:	mov    rdx,rax
  406ff8:	call   0x4059b0
  406ffd:	mov    edi,DWORD PTR [rbx+0x4]
  407000:	test   edi,edi
  407002:	jne    0x406fd3
  407004:	lea    rcx,[rip+0x20596]        # 0x4275a1
  40700b:	add    rbx,0x4
  40700f:	call   0x4059b0
  407014:	mov    ecx,DWORD PTR [rbx]
  407016:	test   ecx,ecx
  407018:	jne    0x406fe9
  40701a:	call   0x407b98
  40701f:	lea    rcx,[rip+0x20733]        # 0x427759
  407026:	mov    rbx,rax
  407029:	call   0x4059b0
  40702e:	mov    ecx,DWORD PTR [rbx]
  407030:	test   ecx,ecx
  407032:	jne    0x407056
  407034:	jmp    0x407087
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	lea    rcx,[rip+0x20676]        # 0x4276bd
  407047:	add    rbx,0x4
  40704b:	call   0x4059b0
  407050:	mov    ecx,DWORD PTR [rbx]
  407052:	test   ecx,ecx
  407054:	je     0x407087
  407056:	call   0x407ba0
  40705b:	lea    rcx,[rip+0x20708]        # 0x42776a
  407062:	mov    rdx,rax
  407065:	call   0x4059b0
  40706a:	mov    esi,DWORD PTR [rbx+0x4]
  40706d:	test   esi,esi
  40706f:	jne    0x407040
  407071:	lea    rcx,[rip+0x20529]        # 0x4275a1
  407078:	add    rbx,0x4
  40707c:	call   0x4059b0
  407081:	mov    ecx,DWORD PTR [rbx]
  407083:	test   ecx,ecx
  407085:	jne    0x407056
  407087:	call   0x407a60
  40708c:	lea    rcx,[rip+0x206d0]        # 0x427763
  407093:	mov    rbx,rax
  407096:	call   0x4059b0
  40709b:	mov    ecx,DWORD PTR [rbx]
  40709d:	test   ecx,ecx
  40709f:	jne    0x4070b9
  4070a1:	jmp    0x4070ec
  4070a3:	lea    rcx,[rip+0x20613]        # 0x4276bd
  4070aa:	add    rbx,0x4
  4070ae:	call   0x4059b0
  4070b3:	mov    ecx,DWORD PTR [rbx]
  4070b5:	test   ecx,ecx
  4070b7:	je     0x4070ec
  4070b9:	call   0x407a68
  4070be:	lea    rcx,[rip+0x206a5]        # 0x42776a
  4070c5:	mov    rdx,rax
  4070c8:	call   0x4059b0
  4070cd:	mov    r11d,DWORD PTR [rbx+0x4]
  4070d1:	test   r11d,r11d
  4070d4:	jne    0x4070a3
  4070d6:	lea    rcx,[rip+0x204c4]        # 0x4275a1
  4070dd:	add    rbx,0x4
  4070e1:	call   0x4059b0
  4070e6:	mov    ecx,DWORD PTR [rbx]
  4070e8:	test   ecx,ecx
  4070ea:	jne    0x4070b9
  4070ec:	call   0x407b08
  4070f1:	lea    rcx,[rip+0x20675]        # 0x42776d
  4070f8:	mov    rbx,rax
  4070fb:	call   0x4059b0
  407100:	mov    ecx,DWORD PTR [rbx]
  407102:	test   ecx,ecx
  407104:	jne    0x407126
  407106:	jmp    0x407159
  407108:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	lea    rcx,[rip+0x205a6]        # 0x4276bd
  407117:	add    rbx,0x4
  40711b:	call   0x4059b0
  407120:	mov    ecx,DWORD PTR [rbx]
  407122:	test   ecx,ecx
  407124:	je     0x407159
  407126:	call   0x407b10
  40712b:	lea    rcx,[rip+0x20638]        # 0x42776a
  407132:	mov    rdx,rax
  407135:	call   0x4059b0
  40713a:	mov    r10d,DWORD PTR [rbx+0x4]
  40713e:	test   r10d,r10d
  407141:	jne    0x407110
  407143:	lea    rcx,[rip+0x20457]        # 0x4275a1
  40714a:	add    rbx,0x4
  40714e:	call   0x4059b0
  407153:	mov    ecx,DWORD PTR [rbx]
  407155:	test   ecx,ecx
  407157:	jne    0x407126
  407159:	call   0x407a78
  40715e:	lea    rcx,[rip+0x20612]        # 0x427777
  407165:	mov    rbx,rax
  407168:	call   0x4059b0
  40716d:	mov    ecx,DWORD PTR [rbx]
  40716f:	test   ecx,ecx
  407171:	jne    0x40718b
  407173:	jmp    0x4071be
  407175:	lea    rcx,[rip+0x20541]        # 0x4276bd
  40717c:	add    rbx,0x4
  407180:	call   0x4059b0
  407185:	mov    ecx,DWORD PTR [rbx]
  407187:	test   ecx,ecx
  407189:	je     0x4071be
  40718b:	call   0x407a80
  407190:	lea    rcx,[rip+0x205d3]        # 0x42776a
  407197:	mov    rdx,rax
  40719a:	call   0x4059b0
  40719f:	mov    r9d,DWORD PTR [rbx+0x4]
  4071a3:	test   r9d,r9d
  4071a6:	jne    0x407175
  4071a8:	lea    rcx,[rip+0x203f2]        # 0x4275a1
  4071af:	add    rbx,0x4
  4071b3:	call   0x4059b0
  4071b8:	mov    ecx,DWORD PTR [rbx]
  4071ba:	test   ecx,ecx
  4071bc:	jne    0x40718b
  4071be:	call   0x407b78
  4071c3:	lea    rcx,[rip+0x2050a]        # 0x4276d4
  4071ca:	mov    rbx,rax
  4071cd:	call   0x4059b0
  4071d2:	mov    ecx,DWORD PTR [rbx]
  4071d4:	test   ecx,ecx
  4071d6:	jne    0x4071f6
  4071d8:	jmp    0x407229
  4071da:	nop    WORD PTR [rax+rax*1+0x0]
  4071e0:	lea    rcx,[rip+0x204d6]        # 0x4276bd
  4071e7:	add    rbx,0x4
  4071eb:	call   0x4059b0
  4071f0:	mov    ecx,DWORD PTR [rbx]
  4071f2:	test   ecx,ecx
  4071f4:	je     0x407229
  4071f6:	call   0x407b80
  4071fb:	lea    rcx,[rip+0x204e0]        # 0x4276e2
  407202:	mov    rdx,rax
  407205:	call   0x4059b0
  40720a:	mov    r8d,DWORD PTR [rbx+0x4]
  40720e:	test   r8d,r8d
  407211:	jne    0x4071e0
  407213:	lea    rcx,[rip+0x20387]        # 0x4275a1
  40721a:	add    rbx,0x4
  40721e:	call   0x4059b0
  407223:	mov    ecx,DWORD PTR [rbx]
  407225:	test   ecx,ecx
  407227:	jne    0x4071f6
  407229:	call   0x407ae8
  40722e:	lea    rcx,[rip+0x204b5]        # 0x4276ea
  407235:	mov    rbx,rax
  407238:	call   0x4059b0
  40723d:	mov    ecx,DWORD PTR [rbx]
  40723f:	test   ecx,ecx
  407241:	jne    0x40725b
  407243:	jmp    0x40728c
  407245:	lea    rcx,[rip+0x20471]        # 0x4276bd
  40724c:	add    rbx,0x4
  407250:	call   0x4059b0
  407255:	mov    ecx,DWORD PTR [rbx]
  407257:	test   ecx,ecx
  407259:	je     0x40728c
  40725b:	call   0x407af8
  407260:	lea    rcx,[rip+0x20495]        # 0x4276fc
  407267:	mov    rdx,rax
  40726a:	call   0x4059b0
  40726f:	mov    ecx,DWORD PTR [rbx+0x4]
  407272:	test   ecx,ecx
  407274:	jne    0x407245
  407276:	lea    rcx,[rip+0x20324]        # 0x4275a1
  40727d:	add    rbx,0x4
  407281:	call   0x4059b0
  407286:	mov    ecx,DWORD PTR [rbx]
  407288:	test   ecx,ecx
  40728a:	jne    0x40725b
  40728c:	call   0x407a08
  407291:	lea    rcx,[rip+0x204f9]        # 0x427791
  407298:	mov    rbx,rax
  40729b:	call   0x4059b0
  4072a0:	mov    ecx,DWORD PTR [rbx]
  4072a2:	test   ecx,ecx
  4072a4:	jne    0x4072c6
  4072a6:	jmp    0x4072f7
  4072a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	lea    rcx,[rip+0x20406]        # 0x4276bd
  4072b7:	add    rbx,0x4
  4072bb:	call   0x4059b0
  4072c0:	mov    ecx,DWORD PTR [rbx]
  4072c2:	test   ecx,ecx
  4072c4:	je     0x4072f7
  4072c6:	call   0x407a10
  4072cb:	lea    rcx,[rip+0x20498]        # 0x42776a
  4072d2:	mov    rdx,rax
  4072d5:	call   0x4059b0
  4072da:	mov    edx,DWORD PTR [rbx+0x4]
  4072dd:	test   edx,edx
  4072df:	jne    0x4072b0
  4072e1:	lea    rcx,[rip+0x202b9]        # 0x4275a1
  4072e8:	add    rbx,0x4
  4072ec:	call   0x4059b0
  4072f1:	mov    ecx,DWORD PTR [rbx]
  4072f3:	test   ecx,ecx
  4072f5:	jne    0x4072c6
  4072f7:	call   0x4078f0
  4072fc:	lea    rcx,[rip+0x20402]        # 0x427705
  407303:	mov    rbx,rax
  407306:	call   0x4059b0
  40730b:	mov    ecx,DWORD PTR [rbx]
  40730d:	test   ecx,ecx
  40730f:	jne    0x40733a
  407311:	jmp    0x406daf
  407316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407320:	lea    rcx,[rip+0x20396]        # 0x4276bd
  407327:	call   0x4059b0
  40732c:	add    rbx,0x4
  407330:	mov    ecx,DWORD PTR [rbx]
  407332:	test   ecx,ecx
  407334:	je     0x406daf
  40733a:	call   0x4078f8
  40733f:	lea    rcx,[rip+0x203cf]        # 0x427715
  407346:	mov    rdx,rax
  407349:	call   0x4059b0
  40734e:	mov    eax,DWORD PTR [rbx+0x4]
  407351:	test   eax,eax
  407353:	jne    0x407320
  407355:	lea    rcx,[rip+0x20245]        # 0x4275a1
  40735c:	call   0x4059b0
  407361:	jmp    0x40732c
  407363:	mov    rbx,QWORD PTR [rsp+0x58]
  407368:	call   QWORD PTR [rip+0x31c0e]        # 0x438f7c
  40736e:	lea    rdx,[rip+0x202f7]        # 0x42766c
  407375:	lea    rcx,[rax+0x60]
  407379:	mov    r8,rbx
  40737c:	call   0x405a30
  407381:	mov    ecx,0x1
  407386:	call   0x421e98
  40738b:	nop
  40738c:	nop    DWORD PTR [rax+0x0]
  407390:	push   r12
  407392:	push   rbp
  407393:	push   rdi
  407394:	push   rsi
  407395:	push   rbx
  407396:	sub    rsp,0x20
  40739a:	mov    rbx,rdx
  40739d:	mov    r12,rcx
  4073a0:	mov    edx,0x80
  4073a5:	mov    rcx,rbx
  4073a8:	call   0x41ce60
  4073ad:	mov    rbp,QWORD PTR [rip+0x31bc8]        # 0x438f7c
  4073b4:	mov    rsi,rax
  4073b7:	call   rbp
  4073b9:	lea    rdx,[rip+0x203e8]        # 0x4277a8
  4073c0:	lea    rcx,[rax+0x60]
  4073c4:	mov    r9,rbx
  4073c7:	mov    r8d,esi
  4073ca:	call   0x405a30
  4073cf:	cmp    rsi,0x2
  4073d3:	jbe    0x407450
  4073d5:	movzx  eax,BYTE PTR [rbx]
  4073d8:	cmp    al,BYTE PTR [rbx+0x1]
  4073db:	jne    0x407450
  4073dd:	cmp    al,0x2a
  4073df:	jne    0x407450
  4073e1:	lea    rdi,[rip+0x203e5]        # 0x4277cd
  4073e8:	mov    ecx,0xf
  4073ed:	mov    rsi,rbx
  4073f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4073f2:	je     0x407460
  4073f4:	lea    rdi,[rip+0x20406]        # 0x427801
  4073fb:	mov    rsi,rbx
  4073fe:	mov    ecx,0xd
  407403:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407405:	seta   dl
  407408:	setb   al
  40740b:	xor    ebx,ebx
  40740d:	cmp    dl,al
  40740f:	jne    0x407452
  407411:	mov    r9d,0x1
  407417:	mov    r8d,0x5
  40741d:	mov    edx,0x12c
  407422:	mov    rcx,r12
  407425:	mov    bl,0x2
  407427:	call   0x407aa0
  40742c:	test   eax,eax
  40742e:	jns    0x407452
  407430:	cmp    eax,0xffffffce
  407433:	jne    0x407481
  407435:	call   rbp
  407437:	lea    rdx,[rip+0x203d1]        # 0x42780f
  40743e:	lea    rcx,[rax+0x60]
  407442:	call   0x405a30
  407447:	jmp    0x407452
  407449:	nop    DWORD PTR [rax+0x0]
  407450:	xor    ebx,ebx
  407452:	mov    eax,ebx
  407454:	add    rsp,0x20
  407458:	pop    rbx
  407459:	pop    rsi
  40745a:	pop    rdi
  40745b:	pop    rbp
  40745c:	pop    r12
  40745e:	ret    
  40745f:	nop
  407460:	call   rbp
  407462:	lea    rdx,[rip+0x20377]        # 0x4277e0
  407469:	lea    rcx,[rax+0x60]
  40746d:	mov    ebx,0x1
  407472:	call   0x405a30
  407477:	mov    rcx,r12
  40747a:	call   0x407968
  40747f:	jmp    0x407452
  407481:	mov    ecx,eax
  407483:	call   0x4078c0
  407488:	mov    rbx,rax
  40748b:	call   rbp
  40748d:	lea    rdx,[rip+0x20399]        # 0x42782d
  407494:	lea    rcx,[rax+0x60]
  407498:	mov    r8,rbx
  40749b:	call   0x405a30
  4074a0:	mov    ecx,0x1
  4074a5:	call   0x421e98
  4074aa:	nop
  4074ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	push   r15
  4074b2:	push   r14
  4074b4:	push   r13
  4074b6:	push   r12
  4074b8:	push   rbp
  4074b9:	push   rdi
  4074ba:	push   rsi
  4074bb:	push   rbx
  4074bc:	sub    rsp,0x28
  4074c0:	mov    ebx,DWORD PTR [rsp+0x90]
  4074c7:	lea    rdx,[rip+0x20388]        # 0x427856
  4074ce:	lea    rbp,[rip+0x20362]        # 0x427837
  4074d5:	lea    r12,[rip+0x20369]        # 0x427845
  4074dc:	mov    r15,rcx
  4074df:	mov    rdi,r8
  4074e2:	mov    r14,r9
  4074e5:	mov    r13,QWORD PTR [rsp+0x98]
  4074ed:	mov    rsi,QWORD PTR [rsp+0xa0]
  4074f5:	mov    eax,ebx
  4074f7:	and    eax,0x2
  4074fa:	lea    rax,[rip+0x20360]        # 0x427861
  407501:	cmove  rbp,rdx
  407505:	cmove  r12,rax
  407509:	test   bl,0x4
  40750c:	mov    eax,0x5
  407511:	jne    0x4076f4
  407517:	test   bl,0x8
  40751a:	jne    0x407685
  407520:	and    ebx,0x20
  407523:	jne    0x40769a
  407529:	test   eax,eax
  40752b:	je     0x40754e
  40752d:	test   rdi,rdi
  407530:	mov    rcx,QWORD PTR [rip+0x2d269]        # 0x4347a0
  407537:	je     0x40754e
  407539:	test   rcx,rcx
  40753c:	je     0x40754e
  40753e:	mov    rdx,rdi
  407541:	call   0x421db8
  407546:	test   eax,eax
  407548:	je     0x407610
  40754e:	lea    rcx,[rip+0x20395]        # 0x4278ea
  407555:	mov    r8,rdi
  407558:	mov    rdx,r14
  40755b:	call   0x4059b0
  407560:	lea    rcx,[rip+0x2039d]        # 0x427904
  407567:	mov    rdx,r12
  40756a:	call   0x4059b0
  40756f:	mov    rcx,rbp
  407572:	call   0x421e30
  407577:	test   rax,rax
  40757a:	mov    rbp,rax
  40757d:	je     0x407740
  407583:	movzx  eax,BYTE PTR [rbp+0x0]
  407587:	test   al,al
  407589:	je     0x407800
  40758f:	cmp    al,0xa
  407591:	je     0x407800
  407597:	mov    rcx,rbp
  40759a:	call   0x421d98
  40759f:	lea    rdx,[rsi-0x1]
  4075a3:	sub    esi,0x1
  4075a6:	mov    rcx,r13
  4075a9:	cmp    rdx,rax
  4075ac:	mov    rdx,rbp
  4075af:	cmovae esi,eax
  4075b2:	mov    ebx,esi
  4075b4:	mov    r8,rbx
  4075b7:	call   0x421e08
  4075bc:	cmp    esi,0x1f
  4075bf:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  4075c5:	jbe    0x407720
  4075cb:	mov    BYTE PTR [rip+0x2d1ae],0x0        # 0x434780
  4075d2:	mov    rcx,QWORD PTR [rip+0x2d1c7]        # 0x4347a0
  4075d9:	call   0x421e50
  4075de:	test   rdi,rdi
  4075e1:	je     0x407710
  4075e7:	mov    rcx,rdi
  4075ea:	call   0x41a220
  4075ef:	mov    QWORD PTR [rip+0x2d1aa],rax        # 0x4347a0
  4075f6:	xor    eax,eax
  4075f8:	add    rsp,0x28
  4075fc:	pop    rbx
  4075fd:	pop    rsi
  4075fe:	pop    rdi
  4075ff:	pop    rbp
  407600:	pop    r12
  407602:	pop    r13
  407604:	pop    r14
  407606:	pop    r15
  407608:	ret    
  407609:	nop    DWORD PTR [rax+0x0]
  407610:	lea    r8,[rip+0x2d169]        # 0x434780
  407617:	mov    rdx,r8
  40761a:	mov    ecx,DWORD PTR [rdx]
  40761c:	add    rdx,0x4
  407620:	lea    eax,[rcx-0x1010101]
  407626:	not    ecx
  407628:	and    eax,ecx
  40762a:	and    eax,0x80808080
  40762f:	je     0x40761a
  407631:	mov    ecx,eax
  407633:	shr    ecx,0x10
  407636:	test   eax,0x8080
  40763b:	cmove  eax,ecx
  40763e:	lea    rcx,[rdx+0x2]
  407642:	cmove  rdx,rcx
  407646:	add    al,al
  407648:	sbb    rdx,0x3
  40764c:	sub    rdx,r8
  40764f:	cmp    rdx,rsi
  407652:	jae    0x40783a
  407658:	call   QWORD PTR [rip+0x3191e]        # 0x438f7c
  40765e:	lea    rdx,[rip+0x202cb]        # 0x427930
  407665:	lea    rcx,[rax+0x60]
  407669:	mov    r8,r14
  40766c:	call   0x405a30
  407671:	lea    rdx,[rip+0x2d108]        # 0x434780
  407678:	mov    rcx,r13
  40767b:	call   0x421db0
  407680:	jmp    0x4075f6
  407685:	lea    rcx,[rip+0x2020c]        # 0x427898
  40768c:	call   0x4059b0
  407691:	and    ebx,0x20
  407694:	je     0x40754e
  40769a:	lea    rcx,[rip+0x20227]        # 0x4278c8
  4076a1:	call   0x4059b0
  4076a6:	lea    rcx,[rip+0x2023d]        # 0x4278ea
  4076ad:	mov    r8,rdi
  4076b0:	mov    rdx,r14
  4076b3:	call   0x4059b0
  4076b8:	lea    rcx,[rip+0x20245]        # 0x427904
  4076bf:	mov    rdx,r12
  4076c2:	call   0x4059b0
  4076c7:	mov    rcx,rbp
  4076ca:	call   0x421e30
  4076cf:	test   rax,rax
  4076d2:	je     0x407742
  4076d4:	call   QWORD PTR [rip+0x318a2]        # 0x438f7c
  4076da:	lea    rdx,[rip+0x20287]        # 0x427968
  4076e1:	lea    rcx,[rax+0x60]
  4076e5:	call   0x405a30
  4076ea:	mov    ecx,0x1
  4076ef:	call   0x421e98
  4076f4:	lea    rcx,[rip+0x2016d]        # 0x427868
  4076fb:	call   0x4059b0
  407700:	xor    eax,eax
  407702:	jmp    0x407517
  407707:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	mov    QWORD PTR [rip+0x2d085],0x0        # 0x4347a0
  40771b:	jmp    0x4075f6
  407720:	lea    r9,[rip+0x2d059]        # 0x434780
  407727:	mov    r8,rbx
  40772a:	mov    rdx,r13
  40772d:	mov    rcx,r9
  407730:	call   0x421e08
  407735:	mov    BYTE PTR [rax+rbx*1],0x0
  407739:	jmp    0x4075d2
  40773e:	xchg   ax,ax
  407740:	xor    ebx,ebx
  407742:	lea    rcx,[rip+0x2010d]        # 0x427856
  407749:	call   0x421e30
  40774e:	test   rax,rax
  407751:	mov    rbp,rax
  407754:	jne    0x4077b1
  407756:	test   r15,r15
  407759:	je     0x4077d0
  40775b:	mov    eax,DWORD PTR [r15+0xa0]
  407762:	test   eax,eax
  407764:	jne    0x4077c0
  407766:	lea    rcx,[rip+0x2029a]        # 0x427a07
  40776d:	call   0x417d50
  407772:	test   rax,rax
  407775:	mov    rbp,rax
  407778:	jne    0x407583
  40777e:	xchg   ax,ax
  407780:	mov    rbx,QWORD PTR [rip+0x317f5]        # 0x438f7c
  407787:	call   rbx
  407789:	lea    rdx,[rip+0x201c4]        # 0x427954
  407790:	lea    rcx,[rax+0x60]
  407794:	call   0x405a30
  407799:	cmp    DWORD PTR [r15+0xa0],0x0
  4077a1:	jne    0x407823
  4077a7:	mov    ecx,0x1
  4077ac:	call   0x421e98
  4077b1:	test   ebx,ebx
  4077b3:	je     0x407583
  4077b9:	jmp    0x4076d4
  4077be:	xchg   ax,ax
  4077c0:	test   ebx,ebx
  4077c2:	je     0x407780
  4077c4:	jmp    0x4076d4
  4077c9:	nop    DWORD PTR [rax+0x0]
  4077d0:	lea    rcx,[rip+0x20230]        # 0x427a07
  4077d7:	call   0x417d50
  4077dc:	test   rax,rax
  4077df:	mov    rbp,rax
  4077e2:	jne    0x407583
  4077e8:	call   QWORD PTR [rip+0x3178e]        # 0x438f7c
  4077ee:	lea    rdx,[rip+0x2015f]        # 0x427954
  4077f5:	lea    rcx,[rax+0x60]
  4077f9:	call   0x405a30
  4077fe:	jmp    0x4077a7
  407800:	mov    rbx,QWORD PTR [rip+0x31775]        # 0x438f7c
  407807:	call   rbx
  407809:	lea    rdx,[rip+0x20144]        # 0x427954
  407810:	lea    rcx,[rax+0x60]
  407814:	call   0x405a30
  407819:	test   r15,r15
  40781c:	je     0x4077a7
  40781e:	jmp    0x407799
  407823:	call   rbx
  407825:	lea    rdx,[rip+0x2017c]        # 0x4279a8
  40782c:	lea    rcx,[rax+0x60]
  407830:	call   0x405a30
  407835:	jmp    0x4077a7
  40783a:	call   QWORD PTR [rip+0x3173c]        # 0x438f7c
  407840:	lea    rdx,[rip+0x200ce]        # 0x427915
  407847:	lea    rcx,[rax+0x60]
  40784b:	call   0x405a30
  407850:	mov    ecx,0x1
  407855:	call   0x421e98
  40785a:	nop
  40785b:	nop
  40785c:	nop
  40785d:	nop
  40785e:	nop
  40785f:	nop
  407860:	jmp    QWORD PTR [rip+0x31596]        # 0x438dfc
  407866:	nop
  407867:	nop
  407868:	jmp    QWORD PTR [rip+0x31586]        # 0x438df4
  40786e:	nop
  40786f:	nop
  407870:	jmp    QWORD PTR [rip+0x31576]        # 0x438dec
  407876:	nop
  407877:	nop
  407878:	jmp    QWORD PTR [rip+0x31566]        # 0x438de4
  40787e:	nop
  40787f:	nop
  407880:	jmp    QWORD PTR [rip+0x31556]        # 0x438ddc
  407886:	nop
  407887:	nop
  407888:	jmp    QWORD PTR [rip+0x31546]        # 0x438dd4
  40788e:	nop
  40788f:	nop
  407890:	jmp    QWORD PTR [rip+0x31536]        # 0x438dcc
  407896:	nop
  407897:	nop
  407898:	jmp    QWORD PTR [rip+0x31526]        # 0x438dc4
  40789e:	nop
  40789f:	nop
  4078a0:	jmp    QWORD PTR [rip+0x31516]        # 0x438dbc
  4078a6:	nop
  4078a7:	nop
  4078a8:	jmp    QWORD PTR [rip+0x31506]        # 0x438db4
  4078ae:	nop
  4078af:	nop
  4078b0:	jmp    QWORD PTR [rip+0x314f6]        # 0x438dac
  4078b6:	nop
  4078b7:	nop
  4078b8:	jmp    QWORD PTR [rip+0x314e6]        # 0x438da4
  4078be:	nop
  4078bf:	nop
  4078c0:	jmp    QWORD PTR [rip+0x314d6]        # 0x438d9c
  4078c6:	nop
  4078c7:	nop
  4078c8:	jmp    QWORD PTR [rip+0x314c6]        # 0x438d94
  4078ce:	nop
  4078cf:	nop
  4078d0:	jmp    QWORD PTR [rip+0x314b6]        # 0x438d8c
  4078d6:	nop
  4078d7:	nop
  4078d8:	jmp    QWORD PTR [rip+0x314a6]        # 0x438d84
  4078de:	nop
  4078df:	nop
  4078e0:	jmp    QWORD PTR [rip+0x31496]        # 0x438d7c
  4078e6:	nop
  4078e7:	nop
  4078e8:	jmp    QWORD PTR [rip+0x31486]        # 0x438d74
  4078ee:	nop
  4078ef:	nop
  4078f0:	jmp    QWORD PTR [rip+0x31476]        # 0x438d6c
  4078f6:	nop
  4078f7:	nop
  4078f8:	jmp    QWORD PTR [rip+0x31466]        # 0x438d64
  4078fe:	nop
  4078ff:	nop
  407900:	jmp    QWORD PTR [rip+0x31456]        # 0x438d5c
  407906:	nop
  407907:	nop
  407908:	jmp    QWORD PTR [rip+0x31446]        # 0x438d54
  40790e:	nop
  40790f:	nop
  407910:	jmp    QWORD PTR [rip+0x31436]        # 0x438d4c
  407916:	nop
  407917:	nop
  407918:	jmp    QWORD PTR [rip+0x31426]        # 0x438d44
  40791e:	nop
  40791f:	nop
  407920:	jmp    QWORD PTR [rip+0x31416]        # 0x438d3c
  407926:	nop
  407927:	nop
  407928:	jmp    QWORD PTR [rip+0x31406]        # 0x438d34
  40792e:	nop
  40792f:	nop
  407930:	jmp    QWORD PTR [rip+0x313f6]        # 0x438d2c
  407936:	nop
  407937:	nop
  407938:	jmp    QWORD PTR [rip+0x313e6]        # 0x438d24
  40793e:	nop
  40793f:	nop
  407940:	jmp    QWORD PTR [rip+0x313d6]        # 0x438d1c
  407946:	nop
  407947:	nop
  407948:	jmp    QWORD PTR [rip+0x313c6]        # 0x438d14
  40794e:	nop
  40794f:	nop
  407950:	jmp    QWORD PTR [rip+0x313b6]        # 0x438d0c
  407956:	nop
  407957:	nop
  407958:	jmp    QWORD PTR [rip+0x313a6]        # 0x438d04
  40795e:	nop
  40795f:	nop
  407960:	jmp    QWORD PTR [rip+0x31396]        # 0x438cfc
  407966:	nop
  407967:	nop
  407968:	jmp    QWORD PTR [rip+0x31386]        # 0x438cf4
  40796e:	nop
  40796f:	nop
  407970:	jmp    QWORD PTR [rip+0x31376]        # 0x438cec
  407976:	nop
  407977:	nop
  407978:	jmp    QWORD PTR [rip+0x31366]        # 0x438ce4
  40797e:	nop
  40797f:	nop
  407980:	jmp    QWORD PTR [rip+0x31356]        # 0x438cdc
  407986:	nop
  407987:	nop
  407988:	jmp    QWORD PTR [rip+0x31346]        # 0x438cd4
  40798e:	nop
  40798f:	nop
  407990:	jmp    QWORD PTR [rip+0x31336]        # 0x438ccc
  407996:	nop
  407997:	nop
  407998:	jmp    QWORD PTR [rip+0x31326]        # 0x438cc4
  40799e:	nop
  40799f:	nop
  4079a0:	jmp    QWORD PTR [rip+0x31316]        # 0x438cbc
  4079a6:	nop
  4079a7:	nop
  4079a8:	jmp    QWORD PTR [rip+0x31306]        # 0x438cb4
  4079ae:	nop
  4079af:	nop
  4079b0:	jmp    QWORD PTR [rip+0x312f6]        # 0x438cac
  4079b6:	nop
  4079b7:	nop
  4079b8:	jmp    QWORD PTR [rip+0x312e6]        # 0x438ca4
  4079be:	nop
  4079bf:	nop
  4079c0:	jmp    QWORD PTR [rip+0x312d6]        # 0x438c9c
  4079c6:	nop
  4079c7:	nop
  4079c8:	jmp    QWORD PTR [rip+0x312c6]        # 0x438c94
  4079ce:	nop
  4079cf:	nop
  4079d0:	jmp    QWORD PTR [rip+0x312b6]        # 0x438c8c
  4079d6:	nop
  4079d7:	nop
  4079d8:	jmp    QWORD PTR [rip+0x312a6]        # 0x438c84
  4079de:	nop
  4079df:	nop
  4079e0:	jmp    QWORD PTR [rip+0x31296]        # 0x438c7c
  4079e6:	nop
  4079e7:	nop
  4079e8:	jmp    QWORD PTR [rip+0x31286]        # 0x438c74
  4079ee:	nop
  4079ef:	nop
  4079f0:	jmp    QWORD PTR [rip+0x31276]        # 0x438c6c
  4079f6:	nop
  4079f7:	nop
  4079f8:	jmp    QWORD PTR [rip+0x31266]        # 0x438c64
  4079fe:	nop
  4079ff:	nop
  407a00:	jmp    QWORD PTR [rip+0x31256]        # 0x438c5c
  407a06:	nop
  407a07:	nop
  407a08:	jmp    QWORD PTR [rip+0x31246]        # 0x438c54
  407a0e:	nop
  407a0f:	nop
  407a10:	jmp    QWORD PTR [rip+0x31236]        # 0x438c4c
  407a16:	nop
  407a17:	nop
  407a18:	jmp    QWORD PTR [rip+0x31226]        # 0x438c44
  407a1e:	nop
  407a1f:	nop
  407a20:	jmp    QWORD PTR [rip+0x31216]        # 0x438c3c
  407a26:	nop
  407a27:	nop
  407a28:	jmp    QWORD PTR [rip+0x31206]        # 0x438c34
  407a2e:	nop
  407a2f:	nop
  407a30:	jmp    QWORD PTR [rip+0x311f6]        # 0x438c2c
  407a36:	nop
  407a37:	nop
  407a38:	jmp    QWORD PTR [rip+0x311e6]        # 0x438c24
  407a3e:	nop
  407a3f:	nop
  407a40:	jmp    QWORD PTR [rip+0x311d6]        # 0x438c1c
  407a46:	nop
  407a47:	nop
  407a48:	jmp    QWORD PTR [rip+0x311c6]        # 0x438c14
  407a4e:	nop
  407a4f:	nop
  407a50:	jmp    QWORD PTR [rip+0x311b6]        # 0x438c0c
  407a56:	nop
  407a57:	nop
  407a58:	jmp    QWORD PTR [rip+0x311a6]        # 0x438c04
  407a5e:	nop
  407a5f:	nop
  407a60:	jmp    QWORD PTR [rip+0x3118e]        # 0x438bf4
  407a66:	nop
  407a67:	nop
  407a68:	jmp    QWORD PTR [rip+0x3117e]        # 0x438bec
  407a6e:	nop
  407a6f:	nop
  407a70:	jmp    QWORD PTR [rip+0x3116e]        # 0x438be4
  407a76:	nop
  407a77:	nop
  407a78:	jmp    QWORD PTR [rip+0x3115e]        # 0x438bdc
  407a7e:	nop
  407a7f:	nop
  407a80:	jmp    QWORD PTR [rip+0x3114e]        # 0x438bd4
  407a86:	nop
  407a87:	nop
  407a88:	jmp    QWORD PTR [rip+0x3113e]        # 0x438bcc
  407a8e:	nop
  407a8f:	nop
  407a90:	jmp    QWORD PTR [rip+0x3112e]        # 0x438bc4
  407a96:	nop
  407a97:	nop
  407a98:	jmp    QWORD PTR [rip+0x3111e]        # 0x438bbc
  407a9e:	nop
  407a9f:	nop
  407aa0:	jmp    QWORD PTR [rip+0x3110e]        # 0x438bb4
  407aa6:	nop
  407aa7:	nop
  407aa8:	jmp    QWORD PTR [rip+0x310fe]        # 0x438bac
  407aae:	nop
  407aaf:	nop
  407ab0:	jmp    QWORD PTR [rip+0x310ee]        # 0x438ba4
  407ab6:	nop
  407ab7:	nop
  407ab8:	jmp    QWORD PTR [rip+0x310de]        # 0x438b9c
  407abe:	nop
  407abf:	nop
  407ac0:	jmp    QWORD PTR [rip+0x310ce]        # 0x438b94
  407ac6:	nop
  407ac7:	nop
  407ac8:	jmp    QWORD PTR [rip+0x310be]        # 0x438b8c
  407ace:	nop
  407acf:	nop
  407ad0:	jmp    QWORD PTR [rip+0x310ae]        # 0x438b84
  407ad6:	nop
  407ad7:	nop
  407ad8:	jmp    QWORD PTR [rip+0x3109e]        # 0x438b7c
  407ade:	nop
  407adf:	nop
  407ae0:	jmp    QWORD PTR [rip+0x31086]        # 0x438b6c
  407ae6:	nop
  407ae7:	nop
  407ae8:	jmp    QWORD PTR [rip+0x31076]        # 0x438b64
  407aee:	nop
  407aef:	nop
  407af0:	jmp    QWORD PTR [rip+0x31066]        # 0x438b5c
  407af6:	nop
  407af7:	nop
  407af8:	jmp    QWORD PTR [rip+0x31056]        # 0x438b54
  407afe:	nop
  407aff:	nop
  407b00:	jmp    QWORD PTR [rip+0x31046]        # 0x438b4c
  407b06:	nop
  407b07:	nop
  407b08:	jmp    QWORD PTR [rip+0x31036]        # 0x438b44
  407b0e:	nop
  407b0f:	nop
  407b10:	jmp    QWORD PTR [rip+0x31026]        # 0x438b3c
  407b16:	nop
  407b17:	nop
  407b18:	jmp    QWORD PTR [rip+0x31016]        # 0x438b34
  407b1e:	nop
  407b1f:	nop
  407b20:	jmp    QWORD PTR [rip+0x31006]        # 0x438b2c
  407b26:	nop
  407b27:	nop
  407b28:	jmp    QWORD PTR [rip+0x30ff6]        # 0x438b24
  407b2e:	nop
  407b2f:	nop
  407b30:	jmp    QWORD PTR [rip+0x30fe6]        # 0x438b1c
  407b36:	nop
  407b37:	nop
  407b38:	jmp    QWORD PTR [rip+0x30fd6]        # 0x438b14
  407b3e:	nop
  407b3f:	nop
  407b40:	jmp    QWORD PTR [rip+0x30fc6]        # 0x438b0c
  407b46:	nop
  407b47:	nop
  407b48:	jmp    QWORD PTR [rip+0x30fb6]        # 0x438b04
  407b4e:	nop
  407b4f:	nop
  407b50:	jmp    QWORD PTR [rip+0x30fa6]        # 0x438afc
  407b56:	nop
  407b57:	nop
  407b58:	jmp    QWORD PTR [rip+0x30f96]        # 0x438af4
  407b5e:	nop
  407b5f:	nop
  407b60:	jmp    QWORD PTR [rip+0x30f86]        # 0x438aec
  407b66:	nop
  407b67:	nop
  407b68:	jmp    QWORD PTR [rip+0x30f76]        # 0x438ae4
  407b6e:	nop
  407b6f:	nop
  407b70:	jmp    QWORD PTR [rip+0x30f66]        # 0x438adc
  407b76:	nop
  407b77:	nop
  407b78:	jmp    QWORD PTR [rip+0x30f56]        # 0x438ad4
  407b7e:	nop
  407b7f:	nop
  407b80:	jmp    QWORD PTR [rip+0x30f46]        # 0x438acc
  407b86:	nop
  407b87:	nop
  407b88:	jmp    QWORD PTR [rip+0x30f36]        # 0x438ac4
  407b8e:	nop
  407b8f:	nop
  407b90:	jmp    QWORD PTR [rip+0x30f26]        # 0x438abc
  407b96:	nop
  407b97:	nop
  407b98:	jmp    QWORD PTR [rip+0x30f16]        # 0x438ab4
  407b9e:	nop
  407b9f:	nop
  407ba0:	jmp    QWORD PTR [rip+0x30f06]        # 0x438aac
  407ba6:	nop
  407ba7:	nop
  407ba8:	jmp    QWORD PTR [rip+0x30ef6]        # 0x438aa4
  407bae:	nop
  407baf:	nop
  407bb0:	jmp    QWORD PTR [rip+0x30ee6]        # 0x438a9c
  407bb6:	nop
  407bb7:	nop
  407bb8:	jmp    QWORD PTR [rip+0x30ed6]        # 0x438a94
  407bbe:	nop
  407bbf:	nop
  407bc0:	jmp    QWORD PTR [rip+0x30ec6]        # 0x438a8c
  407bc6:	nop
  407bc7:	nop
  407bc8:	jmp    QWORD PTR [rip+0x30eb6]        # 0x438a84
  407bce:	nop
  407bcf:	nop
  407bd0:	jmp    QWORD PTR [rip+0x30ea6]        # 0x438a7c
  407bd6:	nop
  407bd7:	nop
  407bd8:	jmp    QWORD PTR [rip+0x30e96]        # 0x438a74
  407bde:	nop
  407bdf:	nop
  407be0:	jmp    QWORD PTR [rip+0x30e86]        # 0x438a6c
  407be6:	nop
  407be7:	nop
  407be8:	jmp    QWORD PTR [rip+0x30e76]        # 0x438a64
  407bee:	nop
  407bef:	nop
  407bf0:	jmp    QWORD PTR [rip+0x30e66]        # 0x438a5c
  407bf6:	nop
  407bf7:	nop
  407bf8:	jmp    QWORD PTR [rip+0x30e56]        # 0x438a54
  407bfe:	nop
  407bff:	nop
  407c00:	jmp    QWORD PTR [rip+0x30e46]        # 0x438a4c
  407c06:	nop
  407c07:	nop
  407c08:	jmp    QWORD PTR [rip+0x30e36]        # 0x438a44
  407c0e:	nop
  407c0f:	nop
  407c10:	jmp    QWORD PTR [rip+0x30e26]        # 0x438a3c
  407c16:	nop
  407c17:	nop
  407c18:	jmp    QWORD PTR [rip+0x30e16]        # 0x438a34
  407c1e:	nop
  407c1f:	nop
  407c20:	jmp    QWORD PTR [rip+0x30e06]        # 0x438a2c
  407c26:	nop
  407c27:	nop
  407c28:	jmp    QWORD PTR [rip+0x30df6]        # 0x438a24
  407c2e:	nop
  407c2f:	nop
  407c30:	jmp    QWORD PTR [rip+0x30de6]        # 0x438a1c
  407c36:	nop
  407c37:	nop
  407c38:	jmp    QWORD PTR [rip+0x30dd6]        # 0x438a14
  407c3e:	nop
  407c3f:	nop
  407c40:	jmp    QWORD PTR [rip+0x30dc6]        # 0x438a0c
  407c46:	nop
  407c47:	nop
  407c48:	jmp    QWORD PTR [rip+0x30db6]        # 0x438a04
  407c4e:	nop
  407c4f:	nop
  407c50:	jmp    QWORD PTR [rip+0x30da6]        # 0x4389fc
  407c56:	nop
  407c57:	nop
  407c58:	jmp    QWORD PTR [rip+0x30d96]        # 0x4389f4
  407c5e:	nop
  407c5f:	nop
  407c60:	sub    rsp,0x28
  407c64:	lea    rcx,[rip+0x1b4d5]        # 0x423140
  407c6b:	xor    edx,edx
  407c6d:	call   0x413e90
  407c72:	mov    ecx,0x1
  407c77:	call   0x421e98
  407c7c:	nop
  407c7d:	nop    DWORD PTR [rax]
  407c80:	push   rsi
  407c81:	push   rbx
  407c82:	sub    rsp,0x28
  407c86:	cmp    rcx,0xf
  407c8a:	mov    rbx,rcx
  407c8d:	mov    rsi,rdx
  407c90:	ja     0x407cb0
  407c92:	lea    r8,[rip+0x1fdaf]        # 0x427a48
  407c99:	mov    r9d,0x1
  407c9f:	mov    rdx,rsi
  407ca2:	mov    rcx,rbx
  407ca5:	add    rsp,0x28
  407ca9:	pop    rbx
  407caa:	pop    rsi
  407cab:	jmp    0x40f580
  407cb0:	call   0x407ed0
  407cb5:	cmp    DWORD PTR [rsi+0x18],0x10000
  407cbc:	jbe    0x407cd4
  407cbe:	call   QWORD PTR [rip+0x312b8]        # 0x438f7c
  407cc4:	mov    rdx,QWORD PTR [rip+0x25995]        # 0x42d660
  407ccb:	add    rax,0x60
  407ccf:	mov    QWORD PTR [rdx],rax
  407cd2:	jmp    0x407c92
  407cd4:	add    rsp,0x28
  407cd8:	pop    rbx
  407cd9:	pop    rsi
  407cda:	ret    
  407cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ce0:	push   rsi
  407ce1:	push   rbx
  407ce2:	sub    rsp,0x28
  407ce6:	cmp    rcx,0xf
  407cea:	mov    rbx,rcx
  407ced:	mov    rsi,rdx
  407cf0:	ja     0x407d10
  407cf2:	lea    r8,[rip+0x1fd47]        # 0x427a40
  407cf9:	mov    r9d,0x1
  407cff:	mov    rdx,rsi
  407d02:	mov    rcx,rbx
  407d05:	add    rsp,0x28
  407d09:	pop    rbx
  407d0a:	pop    rsi
  407d0b:	jmp    0x40f580
  407d10:	call   0x407ed0
  407d15:	cmp    DWORD PTR [rsi+0x18],0x270f
  407d1c:	jbe    0x407d34
  407d1e:	call   QWORD PTR [rip+0x31258]        # 0x438f7c
  407d24:	mov    rdx,QWORD PTR [rip+0x25935]        # 0x42d660
  407d2b:	add    rax,0x60
  407d2f:	mov    QWORD PTR [rdx],rax
  407d32:	jmp    0x407cf2
  407d34:	add    rsp,0x28
  407d38:	pop    rbx
  407d39:	pop    rsi
  407d3a:	ret    
  407d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d40:	push   rbx
  407d41:	sub    rsp,0x20
  407d45:	mov    r8d,0x4
  407d4b:	mov    rbx,rcx
  407d4e:	call   0x40c910
  407d53:	test   eax,eax
  407d55:	je     0x407d5d
  407d57:	test   BYTE PTR [rbx+0x10],0x4
  407d5b:	jne    0x407d63
  407d5d:	add    rsp,0x20
  407d61:	pop    rbx
  407d62:	ret    
  407d63:	mov    rax,QWORD PTR [rip+0x1b46e]        # 0x4231d8
  407d6a:	lea    rcx,[rip+0x1b3cf]        # 0x423140
  407d71:	mov    edx,0x40
  407d76:	add    rsp,0x20
  407d7a:	pop    rbx
  407d7b:	rex.W jmp rax
  407d7e:	nop
  407d7f:	nop
  407d80:	push   rsi
  407d81:	push   rbx
  407d82:	sub    rsp,0x28
  407d86:	mov    eax,DWORD PTR [rdx+0x10]
  407d89:	mov    r8,QWORD PTR [rdx+0x38]
  407d8d:	mov    rsi,rcx
  407d90:	mov    rbx,rdx
  407d93:	and    eax,0xfffff00
  407d98:	or     eax,0x8
  407d9b:	test   r8,r8
  407d9e:	mov    DWORD PTR [rdx+0x10],eax
  407da1:	je     0x407da9
  407da3:	call   r8
  407da6:	mov    eax,DWORD PTR [rbx+0x10]
  407da9:	movzx  edx,WORD PTR [rbx]
  407dac:	mov    rcx,QWORD PTR [rsi+0xc8]
  407db3:	and    eax,0xfffff00
  407db8:	mov    rcx,QWORD PTR [rcx+rdx*8]
  407dbc:	mov    QWORD PTR [rbx+0x18],rcx
  407dc0:	mov    rcx,QWORD PTR [rsi+0xd0]
  407dc7:	mov    rdx,QWORD PTR [rcx+rdx*8]
  407dcb:	mov    DWORD PTR [rbx+0x10],eax
  407dce:	mov    QWORD PTR [rbx+0x20],rdx
  407dd2:	add    rsp,0x28
  407dd6:	pop    rbx
  407dd7:	pop    rsi
  407dd8:	ret    
  407dd9:	nop    DWORD PTR [rax+0x0]
  407de0:	push   rbp
  407de1:	push   rdi
  407de2:	push   rsi
  407de3:	push   rbx
  407de4:	sub    rsp,0x28
  407de8:	mov    eax,DWORD PTR [rcx]
  407dea:	lea    rbx,[rcx+0x8]
  407dee:	mov    rbp,rcx
  407df1:	lea    edx,[rax-0x1]
  407df4:	test   eax,eax
  407df6:	lea    rdi,[rbx+rdx*8+0x8]
  407dfb:	jg     0x407e0d
  407dfd:	jmp    0x407e30
  407dff:	nop
  407e00:	mov    rcx,rsi
  407e03:	call   0x421e50
  407e08:	cmp    rbx,rdi
  407e0b:	je     0x407e30
  407e0d:	add    rbx,0x8
  407e11:	mov    rsi,QWORD PTR [rbx-0x8]
  407e15:	cmp    DWORD PTR [rsi],0x6
  407e18:	jne    0x407e00
  407e1a:	mov    rcx,QWORD PTR [rsi+0x10]
  407e1e:	call   0x407de0
  407e23:	mov    rcx,rsi
  407e26:	call   0x421e50
  407e2b:	cmp    rbx,rdi
  407e2e:	jne    0x407e0d
  407e30:	mov    rcx,rbp
  407e33:	add    rsp,0x28
  407e37:	pop    rbx
  407e38:	pop    rsi
  407e39:	pop    rdi
  407e3a:	pop    rbp
  407e3b:	jmp    0x421e50
  407e40:	push   rdi
  407e41:	push   rsi
  407e42:	push   rbx
  407e43:	sub    rsp,0x20
  407e47:	mov    rdi,QWORD PTR [rip+0x312a6]        # 0x4390f4
  407e4e:	mov    rsi,rcx
  407e51:	jmp    0x407e57
  407e53:	add    rsi,0x1
  407e57:	movzx  ecx,BYTE PTR [rsi]
  407e5a:	call   rdi
  407e5c:	test   eax,eax
  407e5e:	jne    0x407e53
  407e60:	mov    rcx,rsi
  407e63:	call   0x421d98
  407e68:	lea    rbx,[rsi+rax*1]
  407e6c:	cmp    rbx,rsi
  407e6f:	ja     0x407e7c
  407e71:	jmp    0x407e86
  407e73:	sub    rbx,0x1
  407e77:	cmp    rbx,rsi
  407e7a:	je     0x407e86
  407e7c:	movzx  ecx,BYTE PTR [rbx-0x1]
  407e80:	call   rdi
  407e82:	test   eax,eax
  407e84:	jne    0x407e73
  407e86:	mov    rax,rsi
  407e89:	mov    BYTE PTR [rbx],0x0
  407e8c:	add    rsp,0x20
  407e90:	pop    rbx
  407e91:	pop    rsi
  407e92:	pop    rdi
  407e93:	ret    
  407e94:	xchg   ax,ax
  407e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ea0:	sub    rsp,0x38
  407ea4:	mov    QWORD PTR [rsp+0x50],r8
  407ea9:	lea    r8,[rsp+0x50]
  407eae:	mov    QWORD PTR [rsp+0x58],r9
  407eb3:	mov    QWORD PTR [rsp+0x28],r8
  407eb8:	call   0x41d2d0
  407ebd:	add    rsp,0x38
  407ec1:	ret    
  407ec2:	nop    DWORD PTR [rax+0x0]
  407ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ed0:	push   r13
  407ed2:	push   r12
  407ed4:	push   rbp
  407ed5:	push   rdi
  407ed6:	push   rsi
  407ed7:	push   rbx
  407ed8:	sub    rsp,0x38
  407edc:	cmp    rcx,0xf
  407ee0:	jbe    0x407eed
  407ee2:	test   rdx,rdx
  407ee5:	je     0x407eed
  407ee7:	test   BYTE PTR [rdx+0x10],0x8
  407eeb:	je     0x407f00
  407eed:	add    rsp,0x38
  407ef1:	pop    rbx
  407ef2:	pop    rsi
  407ef3:	pop    rdi
  407ef4:	pop    rbp
  407ef5:	pop    r12
  407ef7:	pop    r13
  407ef9:	ret    
  407efa:	nop    WORD PTR [rax+rax*1+0x0]
  407f00:	cmp    QWORD PTR [rdx+0x18],0x0
  407f05:	je     0x407eed
  407f07:	mov    rbx,rdx
  407f0a:	mov    rsi,rcx
  407f0d:	mov    rdi,QWORD PTR [rip+0x310b8]        # 0x438fcc
  407f14:	call   rdi
  407f16:	mov    DWORD PTR [rax],0x0
  407f1c:	mov    rcx,QWORD PTR [rbx+0x18]
  407f20:	lea    rdx,[rsp+0x28]
  407f25:	xor    r8d,r8d
  407f28:	call   0x421d68
  407f2d:	mov    rbp,QWORD PTR [rbx+0x18]
  407f31:	cmp    rbp,QWORD PTR [rsp+0x28]
  407f36:	mov    r12d,eax
  407f39:	je     0x407f74
  407f3b:	call   rdi
  407f3d:	mov    eax,DWORD PTR [rax]
  407f3f:	test   eax,eax
  407f41:	jne    0x407f70
  407f43:	mov    eax,DWORD PTR [rbx+0x10]
  407f46:	test   eax,0x1000000
  407f4b:	jne    0x407fbf
  407f4d:	mov    rdx,QWORD PTR [rsp+0x28]
  407f52:	cmp    BYTE PTR [rdx],0x0
  407f55:	jne    0x407f70
  407f57:	test   al,0x40
  407f59:	jne    0x408030
  407f5f:	mov    DWORD PTR [rbx+0x18],r12d
  407f63:	jmp    0x407eed
  407f65:	cmp    cl,0x67
  407f68:	je     0x408016
  407f6e:	xchg   ax,ax
  407f70:	mov    rbp,QWORD PTR [rbx+0x18]
  407f74:	mov    r13,QWORD PTR [rsi+0x28]
  407f78:	mov    r12,QWORD PTR [rip+0x1bc19]        # 0x423b98
  407f7f:	call   QWORD PTR [rip+0x30ff7]        # 0x438f7c
  407f85:	lea    rcx,[rax+0x60]
  407f89:	mov    r9,rbp
  407f8c:	mov    r8,r13
  407f8f:	mov    rdx,r12
  407f92:	call   0x407ea0
  407f97:	test   BYTE PTR [rsi+0x10],0x4
  407f9b:	je     0x407fab
  407f9d:	mov    edx,0x1
  407fa2:	mov    rcx,rsi
  407fa5:	call   QWORD PTR [rsi+0x98]
  407fab:	call   rdi
  407fad:	mov    DWORD PTR [rax],0x16
  407fb3:	mov    DWORD PTR [rbx+0x18],0xffffffff
  407fba:	jmp    0x407eed
  407fbf:	mov    r8,QWORD PTR [rsp+0x28]
  407fc4:	lea    rdx,[r8+0x1]
  407fc8:	mov    QWORD PTR [rsp+0x28],rdx
  407fcd:	movzx  ecx,BYTE PTR [r8]
  407fd1:	cmp    cl,0x54
  407fd4:	je     0x408042
  407fd6:	jg     0x407ff6
  407fd8:	cmp    cl,0x47
  407fdb:	je     0x408046
  407fdd:	jle    0x40804c
  407fdf:	cmp    cl,0x4b
  407fe2:	je     0x407fed
  407fe4:	cmp    cl,0x4d
  407fe7:	jne    0x407f70
  407fe9:	shl    r12d,0xa
  407fed:	shl    r12d,0xa
  407ff1:	jmp    0x407f52
  407ff6:	cmp    cl,0x6b
  407ff9:	je     0x408024
  407ffb:	jle    0x407f65
  408001:	cmp    cl,0x6d
  408004:	je     0x40801d
  408006:	imul   r12d,r12d,0x3e8
  40800d:	cmp    cl,0x74
  408010:	jne    0x407f70
  408016:	imul   r12d,r12d,0x3e8
  40801d:	imul   r12d,r12d,0x3e8
  408024:	imul   r12d,r12d,0x3e8
  40802b:	jmp    0x407f52
  408030:	mov    rcx,QWORD PTR [rbx+0x18]
  408034:	call   0x421e50
  408039:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40803d:	jmp    0x407f5f
  408042:	shl    r12d,0xa
  408046:	shl    r12d,0xa
  40804a:	jmp    0x407fe9
  40804c:	test   cl,cl
  40804e:	jne    0x407f70
  408054:	mov    QWORD PTR [rsp+0x28],r8
  408059:	mov    rdx,r8
  40805c:	jmp    0x407f52
  408061:	nop    DWORD PTR [rax+rax*1+0x0]
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	push   rsi
  408071:	push   rbx
  408072:	sub    rsp,0x28
  408076:	test   rdx,rdx
  408079:	mov    rsi,rcx
  40807c:	mov    rbx,rdx
  40807f:	je     0x4080c0
  408081:	mov    edx,0xa
  408086:	mov    rcx,rbx
  408089:	call   0x421dc0
  40808e:	test   rax,rax
  408091:	je     0x4080d4
  408093:	sub    rax,rbx
  408096:	mov    r9,rsi
  408099:	mov    edx,0x1
  40809e:	mov    r8,rax
  4080a1:	mov    rcx,rbx
  4080a4:	call   0x421e38
  4080a9:	mov    rdx,rsi
  4080ac:	mov    ecx,0xa
  4080b1:	add    rsp,0x28
  4080b5:	pop    rbx
  4080b6:	pop    rsi
  4080b7:	jmp    0x421e68
  4080bc:	nop    DWORD PTR [rax+0x0]
  4080c0:	test   r8,r8
  4080c3:	mov    rbx,r8
  4080c6:	jne    0x408081
  4080c8:	test   r9,r9
  4080cb:	jne    0x4080e1
  4080cd:	add    rsp,0x28
  4080d1:	pop    rbx
  4080d2:	pop    rsi
  4080d3:	ret    
  4080d4:	mov    rdx,rsi
  4080d7:	mov    rcx,rbx
  4080da:	call   0x421e60
  4080df:	jmp    0x4080a9
  4080e1:	mov    rbx,r9
  4080e4:	jmp    0x408081
  4080e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080f0:	push   rsi
  4080f1:	push   rbx
  4080f2:	sub    rsp,0x28
  4080f6:	cmp    BYTE PTR [rcx],0x27
  4080f9:	mov    rbx,rcx
  4080fc:	jne    0x40812b
  4080fe:	mov    rsi,QWORD PTR [rip+0x30e77]        # 0x438f7c
  408105:	call   rsi
  408107:	lea    rcx,[rip+0x21803]        # 0x429911
  40810e:	lea    r9,[rax+0x30]
  408112:	mov    r8d,0x2
  408118:	mov    edx,0x1
  40811d:	add    rbx,0x1
  408121:	call   0x421e38
  408126:	cmp    BYTE PTR [rbx],0x27
  408129:	je     0x408105
  40812b:	mov    rax,rbx
  40812e:	add    rsp,0x28
  408132:	pop    rbx
  408133:	pop    rsi
  408134:	ret    
  408135:	nop
  408136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408140:	push   r12
  408142:	push   rbp
  408143:	push   rdi
  408144:	push   rsi
  408145:	push   rbx
  408146:	sub    rsp,0x20
  40814a:	test   BYTE PTR [rdx+0x10],0x20
  40814e:	mov    rdi,rcx
  408151:	mov    r12,rdx
  408154:	mov    rbx,r8
  408157:	je     0x408165
  408159:	cmp    WORD PTR [rdx+0x8],0x8000
  40815f:	je     0x408270
  408165:	mov    rsi,QWORD PTR [r12+0x50]
  40816a:	mov    rcx,rsi
  40816d:	mov    ebp,0x11
  408172:	call   0x421d98
  408177:	mov    rdx,rdi
  40817a:	mov    rcx,rsi
  40817d:	sub    ebp,eax
  40817f:	call   0x421e60
  408184:	test   rbx,rbx
  408187:	je     0x408250
  40818d:	lea    rcx,[rip+0x200ec]        # 0x428280
  408194:	mov    r9,rdi
  408197:	mov    r8d,0x3
  40819d:	mov    edx,0x1
  4081a2:	lea    esi,[rbp-0x1]
  4081a5:	call   0x421e38
  4081aa:	test   ebp,ebp
  4081ac:	jle    0x4081c5
  4081ae:	xchg   ax,ax
  4081b0:	mov    rdx,rdi
  4081b3:	mov    ecx,0x20
  4081b8:	sub    esi,0x1
  4081bb:	call   0x421e68
  4081c0:	cmp    esi,0xffffffff
  4081c3:	jne    0x4081b0
  4081c5:	mov    eax,DWORD PTR [r12+0x10]
  4081ca:	and    eax,0xf000
  4081cf:	cmp    eax,0x5000
  4081d4:	jne    0x408215
  4081d6:	jmp    0x408279
  4081db:	nop    DWORD PTR [rax+rax*1+0x0]
  4081e0:	mov    rdx,rax
  4081e3:	mov    rcx,rbx
  4081e6:	mov    r9,rdi
  4081e9:	sub    rdx,rbx
  4081ec:	mov    r8d,0x1
  4081f2:	lea    rbx,[rsi+0x1]
  4081f6:	call   0x421e38
  4081fb:	lea    rcx,[rip+0x20085]        # 0x428287
  408202:	mov    r9,rdi
  408205:	mov    r8d,0x2
  40820b:	mov    edx,0x1
  408210:	call   0x421e38
  408215:	mov    edx,0xa
  40821a:	mov    rcx,rbx
  40821d:	call   0x421dc0
  408222:	test   rax,rax
  408225:	mov    rsi,rax
  408228:	jne    0x4081e0
  40822a:	mov    rdx,rdi
  40822d:	mov    rcx,rbx
  408230:	call   0x421e60
  408235:	mov    rdx,rdi
  408238:	mov    ecx,0xa
  40823d:	add    rsp,0x20
  408241:	pop    rbx
  408242:	pop    rsi
  408243:	pop    rdi
  408244:	pop    rbp
  408245:	pop    r12
  408247:	jmp    0x421e68
  40824c:	nop    DWORD PTR [rax+0x0]
  408250:	mov    eax,DWORD PTR [r12+0x10]
  408255:	and    eax,0xf000
  40825a:	cmp    eax,0x5000
  40825f:	jne    0x408235
  408261:	jmp    0x40818d
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	mov    rsi,QWORD PTR [rdx+0x58]
  408274:	jmp    0x40816a
  408279:	lea    rdx,[rip+0x20004]        # 0x428284
  408280:	mov    r8d,ebx
  408283:	mov    rcx,rdi
  408286:	call   0x407ea0
  40828b:	jmp    0x408235
  40828d:	nop    DWORD PTR [rax]
  408290:	sub    rsp,0x38
  408294:	mov    QWORD PTR [rsp+0x58],r9
  408299:	lea    r9,[rsp+0x58]
  40829e:	mov    QWORD PTR [rsp+0x28],r9
  4082a3:	call   0x41d340
  4082a8:	add    rsp,0x38
  4082ac:	ret    
  4082ad:	nop    DWORD PTR [rax]
  4082b0:	sub    rsp,0x38
  4082b4:	mov    QWORD PTR [rsp+0x48],rdx
  4082b9:	lea    rdx,[rsp+0x48]
  4082be:	mov    QWORD PTR [rsp+0x50],r8
  4082c3:	mov    QWORD PTR [rsp+0x58],r9
  4082c8:	mov    QWORD PTR [rsp+0x28],rdx
  4082cd:	call   0x41d300
  4082d2:	add    rsp,0x38
  4082d6:	ret    
  4082d7:	nop    WORD PTR [rax+rax*1+0x0]
  4082e0:	push   rbx
  4082e1:	sub    rsp,0x20
  4082e5:	cmp    BYTE PTR [rip+0x2c908],0x0        # 0x434bf4
  4082ec:	mov    ebx,ecx
  4082ee:	jne    0x4082f7
  4082f0:	mov    ecx,ebx
  4082f2:	call   0x421e98
  4082f7:	mov    edx,ecx
  4082f9:	lea    rcx,[rip+0x1ff8a]        # 0x42828a
  408300:	call   0x4082b0
  408305:	jmp    0x4082f0
  408307:	nop    WORD PTR [rax+rax*1+0x0]
  408310:	push   rsi
  408311:	push   rbx
  408312:	sub    rsp,0x28
  408316:	mov    rbx,QWORD PTR [rip+0x1b743]        # 0x423a60
  40831d:	mov    rsi,rcx
  408320:	call   QWORD PTR [rip+0x30c56]        # 0x438f7c
  408326:	lea    rcx,[rax+0x60]
  40832a:	mov    r8,rsi
  40832d:	mov    rdx,rbx
  408330:	call   0x407ea0
  408335:	mov    ecx,0x46
  40833a:	call   0x4082e0
  40833f:	nop
  408340:	push   r15
  408342:	push   r14
  408344:	push   r13
  408346:	push   r12
  408348:	push   rbp
  408349:	push   rdi
  40834a:	push   rsi
  40834b:	push   rbx
  40834c:	sub    rsp,0x58
  408350:	cmp    rcx,0xf
  408354:	mov    QWORD PTR [rsp+0xa0],rcx
  40835c:	mov    r13,rdx
  40835f:	mov    rbx,r8
  408362:	mov    ebp,r9d
  408365:	ja     0x4085e3
  40836b:	mov    r8,QWORD PTR [r13+0x50]
  40836f:	mov    rdx,QWORD PTR [rip+0x1b9da]        # 0x423d50
  408376:	mov    rcx,QWORD PTR [rip+0x2c84b]        # 0x434bc8
  40837d:	call   0x407ea0
  408382:	mov    rdi,QWORD PTR [rbx]
  408385:	mov    DWORD PTR [rsp+0x38],0x0
  40838d:	cmp    BYTE PTR [rdi],0x7f
  408390:	je     0x408620
  408396:	mov    rcx,rdi
  408399:	mov    r12,rbx
  40839c:	mov    r14d,ebp
  40839f:	xor    esi,esi
  4083a1:	xor    r15d,r15d
  4083a4:	jmp    0x4083b4
  4083a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083b0:	mov    rcx,QWORD PTR [r12]
  4083b4:	call   0x421d98
  4083b9:	add    rax,0x1
  4083bd:	add    r12,0x8
  4083c1:	cmp    r15,rax
  4083c4:	cmovb  r15,rax
  4083c8:	sub    r14d,0x1
  4083cc:	add    rsi,rax
  4083cf:	test   r14d,r14d
  4083d2:	jg     0x4083b0
  4083d4:	cmp    r15,0x23
  4083d8:	jbe    0x408460
  4083de:	mov    esi,ebp
  4083e0:	jmp    0x4083e5
  4083e2:	mov    rdi,QWORD PTR [rbx]
  4083e5:	mov    rcx,QWORD PTR [rip+0x2c7dc]        # 0x434bc8
  4083ec:	lea    rdx,[rip+0x213fd]        # 0x4297f0
  4083f3:	mov    r8,rdi
  4083f6:	sub    esi,0x1
  4083f9:	add    rbx,0x8
  4083fd:	call   0x407ea0
  408402:	test   esi,esi
  408404:	jg     0x4083e2
  408406:	cmp    QWORD PTR [rsp+0xa0],0xf
  40840f:	ja     0x40856f
  408415:	mov    eax,DWORD PTR [r13+0x10]
  408419:	and    eax,0xf000
  40841e:	cmp    eax,0x4000
  408423:	je     0x4085b5
  408429:	mov    eax,DWORD PTR [rsp+0x38]
  40842d:	mov    rdx,QWORD PTR [rip+0x1b6d4]        # 0x423b08
  408434:	mov    rcx,QWORD PTR [rip+0x2c78d]        # 0x434bc8
  40843b:	lea    r9d,[rax+rbp*1-0x1]
  408440:	mov    r8d,eax
  408443:	call   0x407ea0
  408448:	nop
  408449:	add    rsp,0x58
  40844d:	pop    rbx
  40844e:	pop    rsi
  40844f:	pop    rdi
  408450:	pop    rbp
  408451:	pop    r12
  408453:	pop    r13
  408455:	pop    r14
  408457:	pop    r15
  408459:	ret    
  40845a:	nop    WORD PTR [rax+rax*1+0x0]
  408460:	cmp    rsi,0x4b
  408464:	jbe    0x408510
  40846a:	lea    r12,[rsp+0x40]
  40846f:	lea    r8,[rip+0x21380]        # 0x4297f6
  408476:	mov    r9d,r15d
  408479:	mov    edx,0x10
  40847e:	mov    rcx,r12
  408481:	call   0x408290
  408486:	cmp    eax,0xf
  408489:	jg     0x40865c
  40848f:	mov    eax,0x4e
  408494:	xor    edx,edx
  408496:	mov    r9,QWORD PTR [rip+0x2c72b]        # 0x434bc8
  40849d:	div    r15
  4084a0:	lea    rcx,[rip+0x21317]        # 0x4297be
  4084a7:	mov    r8d,0x2
  4084ad:	mov    edx,0x1
  4084b2:	add    rbx,0x8
  4084b6:	mov    r15d,ebp
  4084b9:	xor    esi,esi
  4084bb:	mov    rdi,rax
  4084be:	call   0x421e38
  4084c3:	jmp    0x4084d8
  4084c5:	mov    rcx,QWORD PTR [rip+0x2c6fc]        # 0x434bc8
  4084cc:	mov    rdx,r12
  4084cf:	call   0x407ea0
  4084d4:	add    rbx,0x8
  4084d8:	sub    r15d,0x1
  4084dc:	test   r15d,r15d
  4084df:	jle    0x408640
  4084e5:	lea    eax,[rsi+0x1]
  4084e8:	mov    r8,QWORD PTR [rbx-0x8]
  4084ec:	cmp    rax,rdi
  4084ef:	mov    rsi,rax
  4084f2:	jne    0x4084c5
  4084f4:	mov    rcx,QWORD PTR [rip+0x2c6cd]        # 0x434bc8
  4084fb:	lea    rdx,[rip+0x21385]        # 0x429887
  408502:	xor    esi,esi
  408504:	call   0x407ea0
  408509:	jmp    0x4084d4
  40850b:	nop    DWORD PTR [rax+rax*1+0x0]
  408510:	mov    rdx,QWORD PTR [rip+0x2c6b1]        # 0x434bc8
  408517:	mov    ecx,0x20
  40851c:	mov    esi,ebp
  40851e:	call   0x421e68
  408523:	mov    rdx,QWORD PTR [rip+0x2c69e]        # 0x434bc8
  40852a:	mov    ecx,0x20
  40852f:	add    rbx,0x8
  408533:	sub    esi,0x1
  408536:	call   0x421e68
  40853b:	mov    rcx,QWORD PTR [rbx-0x8]
  40853f:	mov    rdx,QWORD PTR [rip+0x2c682]        # 0x434bc8
  408546:	call   0x421e60
  40854b:	test   esi,esi
  40854d:	jg     0x408523
  40854f:	mov    rdx,QWORD PTR [rip+0x2c672]        # 0x434bc8
  408556:	mov    ecx,0xa
  40855b:	call   0x421e68
  408560:	cmp    QWORD PTR [rsp+0xa0],0xf
  408569:	jbe    0x408415
  40856f:	mov    eax,DWORD PTR [rsp+0x38]
  408573:	mov    rdx,QWORD PTR [rip+0x1b58e]        # 0x423b08
  40857a:	mov    rcx,QWORD PTR [rip+0x2c647]        # 0x434bc8
  408581:	lea    r9d,[rax+rbp*1-0x1]
  408586:	mov    r8d,eax
  408589:	call   0x407ea0
  40858e:	mov    rcx,QWORD PTR [rsp+0xa0]
  408596:	mov    edx,0x1
  40859b:	call   QWORD PTR [rcx+0x98]
  4085a1:	mov    eax,DWORD PTR [r13+0x10]
  4085a5:	and    eax,0xf000
  4085aa:	cmp    eax,0x4000
  4085af:	jne    0x408429
  4085b5:	mov    rdx,QWORD PTR [rip+0x1b694]        # 0x423c50
  4085bc:	mov    rcx,QWORD PTR [rip+0x2c605]        # 0x434bc8
  4085c3:	mov    r8d,ebp
  4085c6:	call   0x407ea0
  4085cb:	mov    rdx,QWORD PTR [rip+0x2c5f6]        # 0x434bc8
  4085d2:	mov    rcx,QWORD PTR [rip+0x1b767]        # 0x423d40
  4085d9:	call   0x421e60
  4085de:	jmp    0x408449
  4085e3:	mov    rax,QWORD PTR [rcx+0x28]
  4085e7:	mov    rcx,QWORD PTR [rip+0x2c5da]        # 0x434bc8
  4085ee:	mov    QWORD PTR [rsp+0x38],rax
  4085f3:	mov    rax,QWORD PTR [rdx+0x50]
  4085f7:	mov    r8,QWORD PTR [rsp+0x38]
  4085fc:	mov    QWORD PTR [rsp+0x20],rax
  408601:	mov    r9,QWORD PTR [rdx+0x18]
  408605:	mov    rdx,QWORD PTR [rip+0x2c60c]        # 0x434c18
  40860c:	call   0x407ea0
  408611:	jmp    0x40836b
  408616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408620:	mov    rdi,QWORD PTR [rbx+0x8]
  408624:	sub    ebp,0x1
  408627:	add    rbx,0x8
  40862b:	mov    DWORD PTR [rsp+0x38],0x1
  408633:	jmp    0x408396
  408638:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	mov    r8,QWORD PTR [rbx-0x8]
  408644:	mov    rcx,QWORD PTR [rip+0x2c57d]        # 0x434bc8
  40864b:	lea    rdx,[rip+0x21231]        # 0x429883
  408652:	call   0x407ea0
  408657:	jmp    0x408406
  40865c:	mov    ecx,0x1
  408661:	call   0x4082e0
  408666:	nop
  408667:	nop    WORD PTR [rax+rax*1+0x0]
  408670:	push   r15
  408672:	push   r14
  408674:	push   r13
  408676:	push   r12
  408678:	push   rbp
  408679:	push   rdi
  40867a:	push   rsi
  40867b:	push   rbx
  40867c:	sub    rsp,0x38
  408680:	mov    ebx,DWORD PTR [rsp+0xa0]
  408687:	mov    rdi,rcx
  40868a:	mov    QWORD PTR [rsp+0x88],rdx
  408692:	mov    QWORD PTR [rsp+0x90],r8
  40869a:	mov    rbp,r9
  40869d:	call   0x421d98
  4086a2:	mov    rsi,rax
  4086a5:	movzx  eax,BYTE PTR [rdi]
  4086a8:	cmp    al,0x7f
  4086aa:	ja     0x408709
  4086ac:	lea    rdx,[rip+0x23c0d]        # 0x42c2c0
  4086b3:	movzx  ecx,al
  4086b6:	mov    edx,DWORD PTR [rdx+rcx*4]
  4086b9:	test   edx,0x30000
  4086bf:	je     0x408700
  4086c1:	lea    rdx,[rsp+0x28]
  4086c6:	xor    r8d,r8d
  4086c9:	mov    rcx,rdi
  4086cc:	mov    QWORD PTR [rsp+0x28],rdi
  4086d1:	call   0x421d60
  4086d6:	cmp    DWORD PTR [rsp+0xa0],eax
  4086dd:	jbe    0x4086ef
  4086df:	mov    rdx,QWORD PTR [rsp+0x28]
  4086e4:	mov    eax,eax
  4086e6:	cmp    BYTE PTR [rdx],0x0
  4086e9:	je     0x4087a4
  4086ef:	mov    rax,QWORD PTR [rip+0x1b4aa]        # 0x423ba0
  4086f6:	jmp    0x408769
  4086f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408700:	and    dh,0x80
  408703:	jne    0x4087b5
  408709:	xor    r14d,r14d
  40870c:	test   rbx,rbx
  40870f:	mov    r12,rbx
  408712:	mov    r13,0xffffffffffffffff
  408719:	je     0x4087c7
  40871f:	nop
  408720:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  408725:	mov    r8,rsi
  408728:	mov    rdx,rdi
  40872b:	mov    rcx,r15
  40872e:	call   0x421d90
  408733:	test   eax,eax
  408735:	jne    0x40874c
  408737:	cmp    BYTE PTR [r15+rsi*1],0x0
  40873c:	je     0x4087d0
  408742:	cmp    r12,rbx
  408745:	mov    r12,r13
  408748:	cmove  r12,r14
  40874c:	add    r14,0x1
  408750:	cmp    rbx,r14
  408753:	jne    0x408720
  408755:	cmp    rbx,r12
  408758:	mov    rax,r12
  40875b:	ja     0x4087a4
  40875d:	cmp    r12,rbx
  408760:	je     0x4087c7
  408762:	mov    rax,QWORD PTR [rip+0x1b32f]        # 0x423a98
  408769:	mov    QWORD PTR [rip+0x2c4a8],rax        # 0x434c18
  408770:	call   QWORD PTR [rip+0x30806]        # 0x438f7c
  408776:	mov    r9d,DWORD PTR [rsp+0xa0]
  40877e:	mov    rdx,QWORD PTR [rsp+0x90]
  408786:	add    rax,0x60
  40878a:	mov    rcx,QWORD PTR [rsp+0x88]
  408792:	mov    r8,rbp
  408795:	mov    QWORD PTR [rip+0x2c42c],rax        # 0x434bc8
  40879c:	call   0x408340
  4087a1:	mov    rax,rbx
  4087a4:	add    rsp,0x38
  4087a8:	pop    rbx
  4087a9:	pop    rsi
  4087aa:	pop    rdi
  4087ab:	pop    rbp
  4087ac:	pop    r12
  4087ae:	pop    r13
  4087b0:	pop    r14
  4087b2:	pop    r15
  4087b4:	ret    
  4087b5:	cmp    BYTE PTR [rdi+0x2],0x0
  4087b9:	jne    0x408709
  4087bf:	cmp    al,0x7e
  4087c1:	je     0x4087d5
  4087c3:	cmp    al,0x2d
  4087c5:	je     0x4087e7
  4087c7:	mov    rax,QWORD PTR [rip+0x1b382]        # 0x423b50
  4087ce:	jmp    0x408769
  4087d0:	mov    rax,r14
  4087d3:	jmp    0x4087a4
  4087d5:	cmp    BYTE PTR [rdi+0x1],0x30
  4087d9:	jne    0x4087c7
  4087db:	mov    eax,DWORD PTR [rsp+0xa0]
  4087e2:	sub    eax,0x1
  4087e5:	jmp    0x4087a4
  4087e7:	cmp    BYTE PTR [rdi+0x1],0x31
  4087eb:	jne    0x4087c7
  4087ed:	jmp    0x4087db
  4087ef:	nop
  4087f0:	push   r13
  4087f2:	push   r12
  4087f4:	push   rbp
  4087f5:	push   rdi
  4087f6:	push   rsi
  4087f7:	push   rbx
  4087f8:	sub    rsp,0x48
  4087fc:	mov    rbx,QWORD PTR [rip+0x307c9]        # 0x438fcc
  408803:	mov    r12,rdx
  408806:	mov    r13,r8
  408809:	mov    rsi,rcx
  40880c:	call   rbx
  40880e:	mov    ecx,DWORD PTR [rax]
  408810:	call   0x421da8
  408815:	mov    rbp,rax
  408818:	call   rbx
  40881a:	mov    rbx,QWORD PTR [rip+0x1b29f]        # 0x423ac0
  408821:	mov    edi,DWORD PTR [rax]
  408823:	call   QWORD PTR [rip+0x30753]        # 0x438f7c
  408829:	lea    rcx,[rax+0x60]
  40882d:	mov    QWORD PTR [rsp+0x30],r13
  408832:	mov    QWORD PTR [rsp+0x28],r12
  408837:	mov    QWORD PTR [rsp+0x20],rbp
  40883c:	mov    r9d,edi
  40883f:	mov    r8,rsi
  408842:	mov    rdx,rbx
  408845:	call   0x407ea0
  40884a:	nop
  40884b:	add    rsp,0x48
  40884f:	pop    rbx
  408850:	pop    rsi
  408851:	pop    rdi
  408852:	pop    rbp
  408853:	pop    r12
  408855:	pop    r13
  408857:	ret    
  408858:	nop    DWORD PTR [rax+rax*1+0x0]
  408860:	sub    rsp,0x28
  408864:	call   0x4087f0
  408869:	mov    ecx,0x1
  40886e:	call   0x4082e0
  408873:	nop
  408874:	xchg   ax,ax
  408876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408880:	sub    rsp,0x38
  408884:	mov    QWORD PTR [rsp+0x50],r8
  408889:	lea    r8,[rsp+0x50]
  40888e:	mov    QWORD PTR [rsp+0x58],r9
  408893:	mov    QWORD PTR [rsp+0x28],r8
  408898:	call   0x41d3a0
  40889d:	add    rsp,0x38
  4088a1:	ret    
  4088a2:	nop    DWORD PTR [rax+0x0]
  4088a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088b0:	push   r12
  4088b2:	push   rbp
  4088b3:	push   rdi
  4088b4:	push   rsi
  4088b5:	push   rbx
  4088b6:	sub    rsp,0x20
  4088ba:	mov    ebx,edx
  4088bc:	mov    rsi,rcx
  4088bf:	mov    rbp,r8
  4088c2:	sub    ebx,0x1
  4088c5:	mov    rdi,r9
  4088c8:	js     0x4088f2
  4088ca:	nop    WORD PTR [rax+rax*1+0x0]
  4088d0:	mov    rdx,rsi
  4088d3:	mov    ecx,0x20
  4088d8:	sub    ebx,0x1
  4088db:	call   0x421de8
  4088e0:	mov    rdx,rsi
  4088e3:	mov    ecx,0x20
  4088e8:	call   0x421de8
  4088ed:	cmp    ebx,0xffffffff
  4088f0:	jne    0x4088d0
  4088f2:	mov    edx,DWORD PTR [rdi]
  4088f4:	cmp    edx,0x6
  4088f7:	ja     0x408af4
  4088fd:	lea    rax,[rip+0x1f9bc]        # 0x4282c0
  408904:	mov    ecx,edx
  408906:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40890a:	add    rax,rcx
  40890d:	jmp    rax
  40890f:	nop
  408910:	mov    r9d,DWORD PTR [rdi+0x10]
  408914:	mov    r8,QWORD PTR [rdi+0x8]
  408918:	lea    rdx,[rip+0x21217]        # 0x429b36
  40891f:	mov    rcx,rsi
  408922:	add    rsp,0x20
  408926:	pop    rbx
  408927:	pop    rsi
  408928:	pop    rdi
  408929:	pop    rbp
  40892a:	pop    r12
  40892c:	jmp    0x407ea0
  408931:	mov    rbx,QWORD PTR [rdi+0x10]
  408935:	mov    rbp,QWORD PTR [rdi+0x8]
  408939:	test   rbx,rbx
  40893c:	je     0x408b85
  408942:	mov    edi,DWORD PTR [rbx]
  408944:	mov    r8,rbp
  408947:	lea    rdx,[rip+0x20f51]        # 0x42989f
  40894e:	test   edi,edi
  408950:	jle    0x408a28
  408956:	lea    rdx,[rip+0x20f14]        # 0x429871
  40895d:	mov    rcx,rsi
  408960:	add    rbx,0x8
  408964:	call   0x407ea0
  408969:	mov    eax,DWORD PTR [rip+0x1ac11]        # 0x423580
  40896f:	lea    edx,[rax+0x1]
  408972:	lea    eax,[rdi-0x1]
  408975:	mov    DWORD PTR [rip+0x1ac05],edx        # 0x423580
  40897b:	lea    rdi,[rbx+rax*8+0x8]
  408980:	jmp    0x408988
  408982:	mov    edx,DWORD PTR [rip+0x1abf8]        # 0x423580
  408988:	add    rbx,0x8
  40898c:	mov    r9,QWORD PTR [rbx-0x8]
  408990:	xor    r8d,r8d
  408993:	mov    rcx,rsi
  408996:	call   0x4088b0
  40899b:	cmp    rbx,rdi
  40899e:	jne    0x408982
  4089a0:	mov    ebx,DWORD PTR [rip+0x1abda]        # 0x423580
  4089a6:	lea    eax,[rbx-0x1]
  4089a9:	sub    ebx,0x2
  4089ac:	mov    DWORD PTR [rip+0x1abce],eax        # 0x423580
  4089b2:	js     0x4089d6
  4089b4:	mov    rdx,rsi
  4089b7:	mov    ecx,0x20
  4089bc:	sub    ebx,0x1
  4089bf:	call   0x421de8
  4089c4:	mov    rdx,rsi
  4089c7:	mov    ecx,0x20
  4089cc:	call   0x421de8
  4089d1:	cmp    ebx,0xffffffff
  4089d4:	jne    0x4089b4
  4089d6:	mov    r8,rbp
  4089d9:	lea    rdx,[rip+0x1f8d6]        # 0x4282b6
  4089e0:	jmp    0x408a28
  4089e2:	mov    r12,QWORD PTR [rdi+0x8]
  4089e6:	lea    rbp,[rdi+0x10]
  4089ea:	lea    rdx,[rip+0x20ec9]        # 0x4298ba
  4089f1:	lea    rdi,[rip+0x20308]        # 0x428d00
  4089f8:	mov    rcx,rsi
  4089fb:	mov    r8,r12
  4089fe:	call   0x407ea0
  408a03:	movzx  ebx,BYTE PTR [rbp+0x0]
  408a07:	cmp    ebx,0x26
  408a0a:	je     0x408b30
  408a10:	jg     0x408b04
  408a16:	test   ebx,ebx
  408a18:	jne    0x408b70
  408a1e:	lea    rdx,[rip+0x20dc4]        # 0x4297e9
  408a25:	mov    r8,r12
  408a28:	mov    rcx,rsi
  408a2b:	add    rsp,0x20
  408a2f:	pop    rbx
  408a30:	pop    rsi
  408a31:	pop    rdi
  408a32:	pop    rbp
  408a33:	pop    r12
  408a35:	jmp    0x407ea0
  408a3a:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	test   rbp,rbp
  408a43:	je     0x408910
  408a49:	lea    rax,[rip+0x1f84c]        # 0x42829c
  408a50:	mov    r8,QWORD PTR [rdi+0x8]
  408a54:	lea    r9,[rip+0x1f839]        # 0x428294
  408a5b:	cmp    edx,0x2
  408a5e:	lea    rdx,[rip+0x20f2f]        # 0x429994
  408a65:	mov    rcx,rsi
  408a68:	cmovne r9,rax
  408a6c:	mov    ebx,DWORD PTR [rbp+0x10]
  408a6f:	mov    r12,QWORD PTR [rbp+0x18]
  408a73:	call   0x407ea0
  408a78:	mov    ecx,0x3
  408a7d:	mov    rdx,rbp
  408a80:	call   QWORD PTR [rbp+0x38]
  408a83:	mov    rcx,QWORD PTR [rbp+0x18]
  408a87:	test   rcx,rcx
  408a8a:	je     0x408aa2
  408a8c:	mov    rdx,rsi
  408a8f:	call   0x421e60
  408a94:	cmp    DWORD PTR [rdi],0x2
  408a97:	je     0x408aa2
  408a99:	mov    rcx,QWORD PTR [rbp+0x18]
  408a9d:	call   0x421e50
  408aa2:	mov    QWORD PTR [rbp+0x18],r12
  408aa6:	mov    DWORD PTR [rbp+0x10],ebx
  408aa9:	lea    rdx,[rip+0x20d39]        # 0x4297e9
  408ab0:	mov    r8,QWORD PTR [rdi+0x8]
  408ab4:	jmp    0x408a28
  408ab9:	nop    DWORD PTR [rax+0x0]
  408ac0:	mov    eax,DWORD PTR [rdi+0x10]
  408ac3:	lea    r9,[rip+0x1f7e1]        # 0x4282ab
  408aca:	mov    r8,QWORD PTR [rdi+0x8]
  408ace:	lea    rdx,[rip+0x20f7c]        # 0x429a51
  408ad5:	mov    rcx,rsi
  408ad8:	test   eax,eax
  408ada:	lea    rax,[rip+0x1f7cf]        # 0x4282b0
  408ae1:	cmove  r9,rax
  408ae5:	add    rsp,0x20
  408ae9:	pop    rbx
  408aea:	pop    rsi
  408aeb:	pop    rdi
  408aec:	pop    rbp
  408aed:	pop    r12
  408aef:	jmp    0x407ea0
  408af4:	mov    r8,QWORD PTR [rdi+0x8]
  408af8:	lea    rdx,[rip+0x20da0]        # 0x42989f
  408aff:	jmp    0x408a28
  408b04:	cmp    ebx,0x3e
  408b07:	je     0x408b30
  408b09:	jg     0x408b23
  408b0b:	cmp    ebx,0x3c
  408b0e:	je     0x408b30
  408b10:	mov    rdx,rsi
  408b13:	mov    ecx,ebx
  408b15:	call   0x421de8
  408b1a:	add    rbp,0x1
  408b1e:	jmp    0x408a03
  408b23:	lea    eax,[rbx-0x7f]
  408b26:	cmp    eax,0x80
  408b2b:	ja     0x408b10
  408b2d:	nop    DWORD PTR [rax]
  408b30:	mov    rdx,rsi
  408b33:	mov    ecx,0x26
  408b38:	call   0x421de8
  408b3d:	cmp    ebx,0x26
  408b40:	lea    rax,[rip+0x20179]        # 0x428cc0
  408b47:	je     0x408b77
  408b49:	add    rax,0x10
  408b4d:	cmp    ebx,DWORD PTR [rax]
  408b4f:	je     0x408b77
  408b51:	cmp    rax,rdi
  408b54:	jne    0x408b49
  408b56:	lea    rdx,[rip+0x20e4c]        # 0x4299a9
  408b5d:	mov    r8d,ebx
  408b60:	mov    rcx,rsi
  408b63:	call   0x407ea0
  408b68:	jmp    0x408b1a
  408b6a:	nop    WORD PTR [rax+rax*1+0x0]
  408b70:	cmp    ebx,0x1f
  408b73:	jg     0x408b10
  408b75:	jmp    0x408b30
  408b77:	lea    rcx,[rax+0x8]
  408b7b:	mov    rdx,rsi
  408b7e:	call   0x421e60
  408b83:	jmp    0x408b1a
  408b85:	add    rsp,0x20
  408b89:	pop    rbx
  408b8a:	pop    rsi
  408b8b:	pop    rdi
  408b8c:	pop    rbp
  408b8d:	pop    r12
  408b8f:	ret    
  408b90:	test   BYTE PTR [rdx+0x10],0x8
  408b94:	je     0x408ba0
  408b96:	repz ret 
  408b98:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	mov    rax,QWORD PTR [rcx+0x98]
  408ba7:	xor    edx,edx
  408ba9:	rex.W jmp rax
  408bac:	nop    DWORD PTR [rax+0x0]
  408bb0:	mov    rax,QWORD PTR [rip+0x1b0d1]        # 0x423c88
  408bb7:	lea    r10,[rip+0x20b3b]        # 0x4296f9
  408bbe:	lea    r11,[rip+0x20b51]        # 0x429716
  408bc5:	and    ecx,0x3
  408bc8:	cmp    ecx,0x2
  408bcb:	mov    QWORD PTR [rdx],rax
  408bce:	mov    QWORD PTR [rip+0x2c0d3],r10        # 0x434ca8
  408bd5:	lea    r10,[rip+0x20b17]        # 0x4296f3
  408bdc:	mov    QWORD PTR [rip+0x2c10d],r11        # 0x434cf0
  408be3:	lea    r11,[rip+0x20b14]        # 0x4296fe
  408bea:	lea    rdx,[rip+0x1fcb0]        # 0x4288a1
  408bf1:	mov    QWORD PTR [rip+0x2c0a0],r10        # 0x434c98
  408bf8:	lea    r10,[rip+0x20b05]        # 0x429704
  408bff:	mov    rax,QWORD PTR [rip+0x1ae1a]        # 0x423a20
  408c06:	mov    QWORD PTR [rip+0x2c0ab],r11        # 0x434cb8
  408c0d:	lea    r11,[rip+0x1fc8d]        # 0x4288a1
  408c14:	mov    QWORD PTR [rip+0x2c06d],rdx        # 0x434c88
  408c1b:	mov    QWORD PTR [rip+0x2c09e],r10        # 0x434cc0
  408c22:	lea    r10,[rip+0x20ac4]        # 0x4296ed
  408c29:	mov    rdx,QWORD PTR [rip+0x1ade8]        # 0x423a18
  408c30:	mov    r8,QWORD PTR [rip+0x1add9]        # 0x423a10
  408c37:	mov    r9,QWORD PTR [rip+0x1adca]        # 0x423a08
  408c3e:	mov    QWORD PTR [rip+0x2c083],r11        # 0x434cc8
  408c45:	mov    QWORD PTR [rip+0x2c084],r10        # 0x434cd0
  408c4c:	lea    r11,[rip+0x20b5a]        # 0x4297ad
  408c53:	lea    r10,[rip+0x20b60]        # 0x4297ba
  408c5a:	mov    QWORD PTR [rip+0x2c01f],rax        # 0x434c80
  408c61:	mov    QWORD PTR [rip+0x2c028],rdx        # 0x434c90
  408c68:	mov    QWORD PTR [rip+0x2c031],r8        # 0x434ca0
  408c6f:	mov    QWORD PTR [rip+0x2c03a],r9        # 0x434cb0
  408c76:	mov    QWORD PTR [rip+0x2c05b],r11        # 0x434cd8
  408c7d:	mov    QWORD PTR [rip+0x2c05c],r10        # 0x434ce0
  408c84:	je     0x408cc0
  408c86:	cmp    ecx,0x3
  408c89:	je     0x408ca4
  408c8b:	cmp    ecx,0x1
  408c8e:	je     0x408ca4
  408c90:	lea    rax,[rip+0x20a76]        # 0x42970d
  408c97:	mov    QWORD PTR [rip+0x2c04a],rax        # 0x434ce8
  408c9e:	mov    eax,0x16
  408ca3:	ret    
  408ca4:	lea    rax,[rip+0x20a60]        # 0x42970b
  408cab:	mov    QWORD PTR [rip+0x2c036],rax        # 0x434ce8
  408cb2:	mov    eax,0x16
  408cb7:	ret    
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	lea    rcx,[rip+0x20a8d]        # 0x429754
  408cc7:	mov    QWORD PTR [rip+0x2c01a],rcx        # 0x434ce8
  408cce:	mov    BYTE PTR [r9],0x20
  408cd2:	mov    BYTE PTR [r8],0x20
  408cd6:	mov    BYTE PTR [rdx],0x20
  408cd9:	mov    BYTE PTR [rax],0x20
  408cdc:	lea    rax,[rip+0x1f5f9]        # 0x4282dc
  408ce3:	mov    QWORD PTR [rip+0x2bfd6],rax        # 0x434cc0
  408cea:	mov    eax,0x8
  408cef:	ret    
  408cf0:	lea    rax,[rip+0x20a8c]        # 0x429783
  408cf7:	and    ecx,0x12
  408cfa:	mov    QWORD PTR [rip+0x2bf7f],rax        # 0x434c80
  408d01:	lea    rax,[rip+0x20a77]        # 0x42977f
  408d08:	cmp    ecx,0x2
  408d0b:	mov    QWORD PTR [rip+0x2bf76],rax        # 0x434c88
  408d12:	lea    rax,[rip+0x20a5e]        # 0x429777
  408d19:	mov    QWORD PTR [rip+0x2bf70],rax        # 0x434c90
  408d20:	lea    rax,[rip+0x20a40]        # 0x429767
  408d27:	mov    QWORD PTR [rip+0x2bf72],rax        # 0x434ca0
  408d2e:	lea    rax,[rip+0x20a36]        # 0x42976b
  408d35:	mov    QWORD PTR [rip+0x2bf6c],rax        # 0x434ca8
  408d3c:	lea    rax,[rip+0x20a44]        # 0x429787
  408d43:	mov    QWORD PTR [rip+0x2bfa6],rax        # 0x434cf0
  408d4a:	lea    rax,[rip+0x20a12]        # 0x429763
  408d51:	mov    QWORD PTR [rip+0x2bf40],rax        # 0x434c98
  408d58:	lea    rax,[rip+0x209f8]        # 0x429757
  408d5f:	mov    QWORD PTR [rip+0x2bf4a],rax        # 0x434cb0
  408d66:	lea    rax,[rip+0x20a02]        # 0x42976f
  408d6d:	mov    QWORD PTR [rip+0x2bf44],rax        # 0x434cb8
  408d74:	lea    rax,[rip+0x20a00]        # 0x42977b
  408d7b:	mov    QWORD PTR [rip+0x2bf3e],rax        # 0x434cc0
  408d82:	lea    rax,[rip+0x209ea]        # 0x429773
  408d89:	mov    QWORD PTR [rip+0x2bf38],rax        # 0x434cc8
  408d90:	lea    rax,[rip+0x209c4]        # 0x42975b
  408d97:	mov    QWORD PTR [rip+0x2bf32],rax        # 0x434cd0
  408d9e:	lea    rax,[rip+0x20a0f]        # 0x4297b4
  408da5:	mov    QWORD PTR [rip+0x2bf2c],rax        # 0x434cd8
  408dac:	lea    rax,[rip+0x20a0b]        # 0x4297be
  408db3:	mov    QWORD PTR [rip+0x2bf26],rax        # 0x434ce0
  408dba:	je     0x408e35
  408dbc:	jbe    0x408e10
  408dbe:	cmp    ecx,0x10
  408dc1:	je     0x408df0
  408dc3:	cmp    ecx,0x12
  408dc6:	jne    0x408e32
  408dc8:	mov    rax,QWORD PTR [rip+0x1aeb9]        # 0x423c88
  408dcf:	mov    QWORD PTR [rdx],rax
  408dd2:	mov    rax,QWORD PTR [rip+0x1aeb7]        # 0x423c90
  408dd9:	mov    QWORD PTR [rip+0x2bf08],rax        # 0x434ce8
  408de0:	mov    eax,0x13
  408de5:	ret    
  408de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408df0:	mov    rax,QWORD PTR [rip+0x1ae89]        # 0x423c80
  408df7:	mov    QWORD PTR [rdx],rax
  408dfa:	mov    rax,QWORD PTR [rip+0x1ae8f]        # 0x423c90
  408e01:	mov    QWORD PTR [rip+0x2bee0],rax        # 0x434ce8
  408e08:	mov    eax,0x13
  408e0d:	ret    
  408e0e:	xchg   ax,ax
  408e10:	test   ecx,ecx
  408e12:	jne    0x408e32
  408e14:	mov    rax,QWORD PTR [rip+0x1af15]        # 0x423d30
  408e1b:	mov    QWORD PTR [rdx],rax
  408e1e:	lea    rax,[rip+0x20921]        # 0x429746
  408e25:	mov    QWORD PTR [rip+0x2bebc],rax        # 0x434ce8
  408e2c:	mov    eax,0x18
  408e31:	ret    
  408e32:	xor    eax,eax
  408e34:	ret    
  408e35:	mov    rax,QWORD PTR [rip+0x1aefc]        # 0x423d38
  408e3c:	mov    QWORD PTR [rdx],rax
  408e3f:	lea    rax,[rip+0x20900]        # 0x429746
  408e46:	mov    QWORD PTR [rip+0x2be9b],rax        # 0x434ce8
  408e4d:	mov    eax,0x18
  408e52:	ret    
  408e53:	nop    DWORD PTR [rax]
  408e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e60:	push   rsi
  408e61:	push   rbx
  408e62:	sub    rsp,0x38
  408e66:	cmp    rcx,0xffffffffffffffff
  408e6a:	mov    r9,rdx
  408e6d:	je     0x408ea3
  408e6f:	movabs r10,0x7fffffffffffffff
  408e79:	movsxd r8,r8d
  408e7c:	mov    rax,r10
  408e7f:	cqo    
  408e81:	idiv   r8
  408e84:	cmp    rax,r9
  408e87:	jl     0x408ed0
  408e89:	imul   r8,r9
  408e8d:	sub    r10,r8
  408e90:	cmp    rcx,r10
  408e93:	jg     0x408ed0
  408e95:	lea    rsi,[rcx+r8*1]
  408e99:	mov    rax,rsi
  408e9c:	add    rsp,0x38
  408ea0:	pop    rbx
  408ea1:	pop    rsi
  408ea2:	ret    
  408ea3:	mov    QWORD PTR [rsp+0x28],rcx
  408ea8:	mov    rbx,QWORD PTR [rip+0x3011d]        # 0x438fcc
  408eaf:	call   rbx
  408eb1:	mov    eax,DWORD PTR [rax]
  408eb3:	mov    rcx,QWORD PTR [rsp+0x28]
  408eb8:	test   eax,eax
  408eba:	mov    rsi,rcx
  408ebd:	jne    0x408e99
  408ebf:	call   rbx
  408ec1:	mov    DWORD PTR [rax],0x16
  408ec7:	jmp    0x408e99
  408ec9:	nop    DWORD PTR [rax+0x0]
  408ed0:	call   QWORD PTR [rip+0x300f6]        # 0x438fcc
  408ed6:	mov    rsi,0xffffffffffffffff
  408edd:	mov    DWORD PTR [rax],0x22
  408ee3:	jmp    0x408e99
  408ee5:	nop
  408ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ef0:	push   r15
  408ef2:	push   r14
  408ef4:	push   r13
  408ef6:	push   r12
  408ef8:	push   rbp
  408ef9:	push   rdi
  408efa:	push   rsi
  408efb:	push   rbx
  408efc:	sub    rsp,0x48
  408f00:	mov    rax,QWORD PTR [rdx]
  408f03:	cmp    rcx,0xffffffffffffffff
  408f07:	mov    QWORD PTR [rsp+0x38],rax
  408f0c:	je     0x408f99
  408f12:	mov    r13d,r9d
  408f15:	mov    r12,r8
  408f18:	mov    rbp,rdx
  408f1b:	mov    QWORD PTR [rsp+0x28],rcx
  408f20:	mov    r15,QWORD PTR [rip+0x300a5]        # 0x438fcc
  408f27:	call   r15
  408f2a:	mov    rcx,QWORD PTR [rsp+0x38]
  408f2f:	lea    rdx,[rsp+0x38]
  408f34:	mov    r8d,0xa
  408f3a:	mov    DWORD PTR [rax],0x0
  408f40:	call   0x421d60
  408f45:	mov    r14d,eax
  408f48:	call   r15
  408f4b:	mov    eax,DWORD PTR [rax]
  408f4d:	test   eax,eax
  408f4f:	jne    0x408f99
  408f51:	mov    rdi,QWORD PTR [rsp+0x38]
  408f56:	mov    rsi,QWORD PTR [rip+0x30197]        # 0x4390f4
  408f5d:	jmp    0x408f65
  408f5f:	nop
  408f60:	mov    QWORD PTR [rsp+0x38],rdi
  408f65:	movzx  ecx,BYTE PTR [rdi]
  408f68:	mov    rbx,rdi
  408f6b:	add    rdi,0x1
  408f6f:	call   rsi
  408f71:	test   eax,eax
  408f73:	jne    0x408f60
  408f75:	cmp    r12,rbx
  408f78:	jne    0x408f90
  408f7a:	mov    rcx,QWORD PTR [rsp+0x28]
  408f7f:	mov    QWORD PTR [rbp+0x0],r12
  408f83:	mov    r8d,r13d
  408f86:	mov    rdx,r14
  408f89:	call   0x408e60
  408f8e:	jmp    0x408fa0
  408f90:	call   r15
  408f93:	mov    DWORD PTR [rax],0x16
  408f99:	mov    rax,0xffffffffffffffff
  408fa0:	add    rsp,0x48
  408fa4:	pop    rbx
  408fa5:	pop    rsi
  408fa6:	pop    rdi
  408fa7:	pop    rbp
  408fa8:	pop    r12
  408faa:	pop    r13
  408fac:	pop    r14
  408fae:	pop    r15
  408fb0:	ret    
  408fb1:	nop    DWORD PTR [rax+rax*1+0x0]
  408fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fc0:	push   rbp
  408fc1:	push   rdi
  408fc2:	push   rsi
  408fc3:	push   rbx
  408fc4:	sub    rsp,0x38
  408fc8:	mov    edx,0x3a
  408fcd:	mov    rbx,rcx
  408fd0:	call   0x421dc0
  408fd5:	test   rax,rax
  408fd8:	je     0x409070
  408fde:	lea    rsi,[rsp+0x20]
  408fe3:	mov    r8,rax
  408fe6:	xor    ecx,ecx
  408fe8:	mov    r9d,0xe10
  408fee:	mov    QWORD PTR [rsp+0x20],rbx
  408ff3:	mov    rdx,rsi
  408ff6:	call   0x408ef0
  408ffb:	mov    rbx,rax
  408ffe:	mov    rax,QWORD PTR [rsp+0x20]
  409003:	mov    edx,0x3a
  409008:	lea    rcx,[rax+0x1]
  40900c:	mov    QWORD PTR [rsp+0x20],rcx
  409011:	call   0x421dc0
  409016:	test   rax,rax
  409019:	mov    r8,rax
  40901c:	je     0x40915f
  409022:	mov    r9d,0x3c
  409028:	mov    rdx,rsi
  40902b:	mov    rcx,rbx
  40902e:	call   0x408ef0
  409033:	mov    rdi,rax
  409036:	mov    rax,QWORD PTR [rsp+0x20]
  40903b:	lea    rbx,[rax+0x1]
  40903f:	mov    rcx,rbx
  409042:	mov    QWORD PTR [rsp+0x20],rbx
  409047:	call   0x421d98
  40904c:	lea    r8,[rbx+rax*1]
  409050:	mov    r9d,0x1
  409056:	mov    rdx,rsi
  409059:	mov    rcx,rdi
  40905c:	call   0x408ef0
  409061:	mov    rbp,rax
  409064:	mov    rax,rbp
  409067:	add    rsp,0x38
  40906b:	pop    rbx
  40906c:	pop    rsi
  40906d:	pop    rdi
  40906e:	pop    rbp
  40906f:	ret    
  409070:	lea    rdx,[rip+0x1f26c]        # 0x4282e3
  409077:	mov    rcx,rbx
  40907a:	call   0x421d80
  40907f:	test   rax,rax
  409082:	je     0x409180
  409088:	mov    edx,0x48
  40908d:	mov    rcx,rbx
  409090:	mov    QWORD PTR [rsp+0x28],rbx
  409095:	xor    ebp,ebp
  409097:	call   0x421dc0
  40909c:	test   rax,rax
  40909f:	je     0x4090c7
  4090a1:	lea    rdx,[rsp+0x28]
  4090a6:	mov    r9d,0xe10
  4090ac:	mov    r8,rax
  4090af:	xor    ecx,ecx
  4090b1:	call   0x408ef0
  4090b6:	mov    rbp,rax
  4090b9:	mov    rax,QWORD PTR [rsp+0x28]
  4090be:	lea    rbx,[rax+0x1]
  4090c2:	mov    QWORD PTR [rsp+0x28],rbx
  4090c7:	mov    edx,0x4d
  4090cc:	mov    rcx,rbx
  4090cf:	call   0x421dc0
  4090d4:	test   rax,rax
  4090d7:	je     0x409100
  4090d9:	lea    rdx,[rsp+0x28]
  4090de:	mov    rcx,rbp
  4090e1:	mov    r9d,0x3c
  4090e7:	mov    r8,rax
  4090ea:	call   0x408ef0
  4090ef:	mov    rbp,rax
  4090f2:	mov    rax,QWORD PTR [rsp+0x28]
  4090f7:	lea    rbx,[rax+0x1]
  4090fb:	mov    QWORD PTR [rsp+0x28],rbx
  409100:	mov    edx,0x53
  409105:	mov    rcx,rbx
  409108:	call   0x421dc0
  40910d:	test   rax,rax
  409110:	je     0x409139
  409112:	lea    rdx,[rsp+0x28]
  409117:	mov    rcx,rbp
  40911a:	mov    r9d,0x1
  409120:	mov    r8,rax
  409123:	call   0x408ef0
  409128:	mov    rbp,rax
  40912b:	mov    rax,QWORD PTR [rsp+0x28]
  409130:	lea    rbx,[rax+0x1]
  409134:	mov    QWORD PTR [rsp+0x28],rbx
  409139:	mov    rdi,QWORD PTR [rip+0x2ffb4]        # 0x4390f4
  409140:	jmp    0x409147
  409142:	mov    QWORD PTR [rsp+0x28],rbx
  409147:	movzx  ecx,BYTE PTR [rbx]
  40914a:	add    rbx,0x1
  40914e:	mov    esi,ecx
  409150:	call   rdi
  409152:	test   eax,eax
  409154:	jne    0x409142
  409156:	test   sil,sil
  409159:	je     0x409064
  40915f:	call   QWORD PTR [rip+0x2fe67]        # 0x438fcc
  409165:	mov    rbp,0xffffffffffffffff
  40916c:	mov    DWORD PTR [rax],0x16
  409172:	jmp    0x409064
  409177:	nop    WORD PTR [rax+rax*1+0x0]
  409180:	mov    rcx,rbx
  409183:	call   0x421d98
  409188:	cmp    rax,0x6
  40918c:	jne    0x40915f
  40918e:	movzx  eax,WORD PTR [rbx]
  409191:	lea    rbp,[rsp+0x22]
  409196:	lea    rdi,[rsp+0x28]
  40919b:	lea    rsi,[rsp+0x20]
  4091a0:	mov    r9d,0xe10
  4091a6:	xor    ecx,ecx
  4091a8:	mov    r8,rbp
  4091ab:	mov    rdx,rdi
  4091ae:	mov    BYTE PTR [rsp+0x22],0x0
  4091b3:	mov    QWORD PTR [rsp+0x28],rsi
  4091b8:	mov    WORD PTR [rsp+0x20],ax
  4091bd:	call   0x408ef0
  4091c2:	movzx  edx,WORD PTR [rbx+0x2]
  4091c6:	mov    r8,rbp
  4091c9:	mov    r9d,0x3c
  4091cf:	mov    rcx,rax
  4091d2:	mov    BYTE PTR [rsp+0x22],0x0
  4091d7:	mov    QWORD PTR [rsp+0x28],rsi
  4091dc:	mov    WORD PTR [rsp+0x20],dx
  4091e1:	mov    rdx,rdi
  4091e4:	call   0x408ef0
  4091e9:	movzx  edx,WORD PTR [rbx+0x4]
  4091ed:	mov    r8,rbp
  4091f0:	mov    r9d,0x1
  4091f6:	mov    rcx,rax
  4091f9:	mov    BYTE PTR [rsp+0x22],0x0
  4091fe:	mov    QWORD PTR [rsp+0x28],rsi
  409203:	mov    WORD PTR [rsp+0x20],dx
  409208:	mov    rdx,rdi
  40920b:	call   0x408ef0
  409210:	mov    rbp,rax
  409213:	jmp    0x409064
  409218:	nop    DWORD PTR [rax+rax*1+0x0]
  409220:	push   r13
  409222:	push   r12
  409224:	push   rbp
  409225:	push   rdi
  409226:	push   rsi
  409227:	push   rbx
  409228:	sub    rsp,0x38
  40922c:	mov    r12,QWORD PTR [rip+0x1a9ed]        # 0x423c20
  409233:	mov    r13,QWORD PTR [rcx+0x28]
  409237:	lea    rsi,[rip+0x21e91]        # 0x42b0cf
  40923e:	cmp    WORD PTR [rdx+0x8],0x8000
  409244:	mov    rdi,rdx
  409247:	mov    rbx,rcx
  40924a:	cmovne rsi,QWORD PTR [rip+0x1a896]        # 0x423ae8
  409252:	mov    rbp,QWORD PTR [rip+0x2fd23]        # 0x438f7c
  409259:	call   rbp
  40925b:	lea    rcx,[rax+0x60]
  40925f:	mov    rdx,r12
  409262:	mov    r8,r13
  409265:	call   0x407ea0
  40926a:	movzx  r12d,WORD PTR [rdi+0xc]
  40926f:	cmp    r12w,0x1
  409274:	jbe    0x4092c0
  409276:	mov    r13,QWORD PTR [rdi+0x50]
  40927a:	mov    rdi,QWORD PTR [rip+0x1a837]        # 0x423ab8
  409281:	call   rbp
  409283:	lea    rcx,[rax+0x60]
  409287:	mov    QWORD PTR [rsp+0x20],rsi
  40928c:	movzx  r8d,r12w
  409290:	mov    r9,r13
  409293:	mov    rdx,rdi
  409296:	call   0x407ea0
  40929b:	mov    edx,0x1
  4092a0:	mov    rcx,rbx
  4092a3:	call   QWORD PTR [rbx+0x98]
  4092a9:	add    rsp,0x38
  4092ad:	pop    rbx
  4092ae:	pop    rsi
  4092af:	pop    rdi
  4092b0:	pop    rbp
  4092b1:	pop    r12
  4092b3:	pop    r13
  4092b5:	ret    
  4092b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092c0:	mov    r12,QWORD PTR [rdi+0x50]
  4092c4:	mov    rdi,QWORD PTR [rip+0x1a8e5]        # 0x423bb0
  4092cb:	call   rbp
  4092cd:	lea    rcx,[rax+0x60]
  4092d1:	mov    r9,rsi
  4092d4:	mov    r8,r12
  4092d7:	mov    rdx,rdi
  4092da:	call   0x407ea0
  4092df:	jmp    0x40929b
  4092e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092f0:	push   rbp
  4092f1:	push   rdi
  4092f2:	push   rsi
  4092f3:	push   rbx
  4092f4:	sub    rsp,0x48
  4092f8:	mov    rbx,QWORD PTR [rdx]
  4092fb:	mov    rsi,rcx
  4092fe:	mov    r8d,DWORD PTR [rbx+0x10]
  409302:	mov    rdi,QWORD PTR [rbx+0x38]
  409306:	test   r8b,0x40
  40930a:	jne    0x409410
  409310:	mov    rcx,QWORD PTR [rdx+0x8]
  409314:	mov    QWORD PTR [rbx+0x18],rcx
  409318:	test   BYTE PTR [rsi+0x12],0x8
  40931c:	je     0x409330
  40931e:	test   r8d,0x100
  409325:	mov    ebp,0x1
  40932a:	jne    0x4093d0
  409330:	movzx  eax,WORD PTR [rbx+0x8]
  409334:	cmp    ax,0x8000
  409338:	je     0x409430
  40933e:	lea    r10,[rax+rax*2]
  409342:	mov    r9,QWORD PTR [rsi+0x78]
  409346:	and    r8d,0x4
  40934a:	lea    rax,[rax+r10*4]
  40934e:	lea    r10,[r9+rax*8]
  409352:	jne    0x4093e0
  409358:	mov    eax,0xffff8000
  40935d:	mov    WORD PTR [r10+0x4],ax
  409362:	movzx  eax,WORD PTR [rbx]
  409365:	cmp    ax,0x8000
  409369:	je     0x4093ea
  40936b:	movzx  r8d,WORD PTR [rbx+0x2]
  409370:	mov    WORD PTR [r10+0x4],ax
  409375:	mov    eax,DWORD PTR [rdx+0x10]
  409378:	or     eax,0x10
  40937b:	mov    WORD PTR [r10+0x6],r8w
  409380:	mov    DWORD PTR [rdx+0x10],eax
  409383:	mov    r8d,DWORD PTR [r10+0x10]
  409387:	mov    QWORD PTR [r10+0x18],rcx
  40938b:	and    eax,0xf00000ff
  409390:	and    r8d,0xfffff00
  409397:	or     r8d,eax
  40939a:	mov    DWORD PTR [r10+0x10],r8d
  40939e:	and    r8d,0x4
  4093a2:	je     0x4093f0
  4093a4:	movzx  eax,WORD PTR [r10+0xe]
  4093a9:	add    eax,0x1
  4093ac:	cmp    ax,WORD PTR [r10+0xc]
  4093b1:	mov    WORD PTR [r10+0xe],ax
  4093b6:	jbe    0x4093f0
  4093b8:	test   BYTE PTR [rsi+0x10],0x4
  4093bc:	mov    ebp,0xffffffff
  4093c1:	je     0x4093d0
  4093c3:	mov    rdx,r10
  4093c6:	mov    rcx,rsi
  4093c9:	call   0x409220
  4093ce:	xchg   ax,ax
  4093d0:	mov    eax,ebp
  4093d2:	add    rsp,0x48
  4093d6:	pop    rbx
  4093d7:	pop    rsi
  4093d8:	pop    rdi
  4093d9:	pop    rbp
  4093da:	ret    
  4093db:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e0:	movzx  eax,WORD PTR [r10+0x4]
  4093e5:	cmp    ax,WORD PTR [rbx]
  4093e8:	jne    0x409450
  4093ea:	mov    eax,DWORD PTR [rdx+0x10]
  4093ed:	jmp    0x409383
  4093ef:	nop
  4093f0:	xor    ebp,ebp
  4093f2:	test   rdi,rdi
  4093f5:	je     0x4093d0
  4093f7:	mov    rdx,r10
  4093fa:	mov    rcx,rsi
  4093fd:	call   rdi
  4093ff:	mov    eax,ebp
  409401:	add    rsp,0x48
  409405:	pop    rbx
  409406:	pop    rsi
  409407:	pop    rdi
  409408:	pop    rbp
  409409:	ret    
  40940a:	nop    WORD PTR [rax+rax*1+0x0]
  409410:	mov    rcx,QWORD PTR [rbx+0x18]
  409414:	mov    QWORD PTR [rsp+0x38],rdx
  409419:	call   0x421e50
  40941e:	mov    r8d,DWORD PTR [rbx+0x10]
  409422:	mov    rdx,QWORD PTR [rsp+0x38]
  409427:	jmp    0x409310
  40942c:	nop    DWORD PTR [rax+0x0]
  409430:	movzx  eax,WORD PTR [rbx+0x2]
  409434:	mov    r10,rbx
  409437:	mov    WORD PTR [rbx+0x6],ax
  40943b:	movzx  eax,WORD PTR [rbx]
  40943e:	mov    WORD PTR [rbx+0x4],ax
  409442:	mov    eax,DWORD PTR [rdx+0x10]
  409445:	jmp    0x40938b
  40944a:	nop    WORD PTR [rax+rax*1+0x0]
  409450:	lea    rdx,[rax+rax*2]
  409454:	mov    rdi,QWORD PTR [rbx+0x50]
  409458:	mov    rsi,QWORD PTR [r10+0x50]
  40945c:	mov    rbx,QWORD PTR [rip+0x1a6c5]        # 0x423b28
  409463:	lea    rax,[rax+rdx*4]
  409467:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  40946c:	call   QWORD PTR [rip+0x2fb0a]        # 0x438f7c
  409472:	lea    rcx,[rax+0x60]
  409476:	mov    r9,rdi
  409479:	mov    r8,rsi
  40947c:	mov    QWORD PTR [rsp+0x20],rbp
  409481:	mov    rdx,rbx
  409484:	mov    ebp,0xffffffff
  409489:	call   0x407ea0
  40948e:	jmp    0x4093d0
  409493:	nop    DWORD PTR [rax]
  409496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094a0:	push   r13
  4094a2:	push   r12
  4094a4:	push   rbp
  4094a5:	push   rdi
  4094a6:	push   rsi
  4094a7:	push   rbx
  4094a8:	sub    rsp,0x38
  4094ac:	mov    rsi,rcx
  4094af:	mov    rcx,QWORD PTR [rcx+0x78]
  4094b3:	mov    eax,DWORD PTR [rsi+0xb0]
  4094b9:	mov    rbx,rcx
  4094bc:	movzx  r10d,WORD PTR [rbx+0x2]
  4094c1:	cmp    r10d,edx
  4094c4:	je     0x409510
  4094c6:	sub    eax,0x1
  4094c9:	add    rbx,0x68
  4094cd:	test   eax,eax
  4094cf:	jg     0x4094bc
  4094d1:	movzx  eax,dl
  4094d4:	cmp    eax,0x7f
  4094d7:	ja     0x4094f0
  4094d9:	lea    r10,[rip+0x22de0]        # 0x42c2c0
  4094e0:	test   DWORD PTR [r10+rax*4],0x30000
  4094e8:	jne    0x4095a9
  4094ee:	xchg   ax,ax
  4094f0:	test   BYTE PTR [rsi+0x10],0x4
  4094f4:	jne    0x4095dc
  4094fa:	mov    eax,0xffffffff
  4094ff:	add    rsp,0x38
  409503:	pop    rbx
  409504:	pop    rsi
  409505:	pop    rdi
  409506:	pop    rbp
  409507:	pop    r12
  409509:	pop    r13
  40950b:	ret    
  40950c:	nop    DWORD PTR [rax+0x0]
  409510:	mov    eax,DWORD PTR [rbx+0x10]
  409513:	test   eax,0x280000
  409518:	je     0x409590
  40951a:	cmp    eax,0x80100
  40951f:	jne    0x4094f0
  409521:	mov    r13,QWORD PTR [rbx+0x50]
  409525:	test   r13,r13
  409528:	je     0x4094f0
  40952a:	test   BYTE PTR [rsi+0x10],0x4
  40952e:	je     0x4094fa
  409530:	mov    r12,QWORD PTR [rsi+0x20]
  409534:	mov    rbp,QWORD PTR [rip+0x1a5a5]        # 0x423ae0
  40953b:	mov    rdi,QWORD PTR [rip+0x2fa3a]        # 0x438f7c
  409542:	call   rdi
  409544:	lea    rcx,[rax+0x60]
  409548:	mov    r9,r13
  40954b:	mov    r8,r12
  40954e:	mov    rdx,rbp
  409551:	call   0x407ea0
  409556:	mov    rbx,QWORD PTR [rbx+0x40]
  40955a:	test   rbx,rbx
  40955d:	je     0x409574
  40955f:	call   rdi
  409561:	lea    rdx,[rip+0x203b1]        # 0x429919
  409568:	lea    rcx,[rax+0x60]
  40956c:	mov    r8,rbx
  40956f:	call   0x407ea0
  409574:	call   rdi
  409576:	lea    rdx,[rax+0x60]
  40957a:	mov    ecx,0xa
  40957f:	call   0x421e68
  409584:	jmp    0x409607
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	xor    eax,eax
  409592:	mov    QWORD PTR [r8],rbx
  409595:	mov    DWORD PTR [r9],0x1
  40959c:	add    rsp,0x38
  4095a0:	pop    rbx
  4095a1:	pop    rsi
  4095a2:	pop    rdi
  4095a3:	pop    rbp
  4095a4:	pop    r12
  4095a6:	pop    r13
  4095a8:	ret    
  4095a9:	movzx  eax,WORD PTR [rsi+0xac]
  4095b0:	cmp    ax,0x8000
  4095b4:	je     0x4094f0
  4095ba:	lea    rdx,[rax+rax*2]
  4095be:	lea    rax,[rax+rdx*4]
  4095c2:	lea    rax,[rcx+rax*8]
  4095c6:	mov    QWORD PTR [r8],rax
  4095c9:	xor    eax,eax
  4095cb:	sub    QWORD PTR [rsi+0x18],0x1
  4095d0:	mov    DWORD PTR [r9],0x1
  4095d7:	jmp    0x4094ff
  4095dc:	mov    DWORD PTR [rsp+0x2c],edx
  4095e0:	mov    rdi,QWORD PTR [rsi+0x20]
  4095e4:	mov    rbx,QWORD PTR [rip+0x1a505]        # 0x423af0
  4095eb:	call   QWORD PTR [rip+0x2f98b]        # 0x438f7c
  4095f1:	mov    edx,DWORD PTR [rsp+0x2c]
  4095f5:	lea    rcx,[rax+0x60]
  4095f9:	mov    r8,rdi
  4095fc:	mov    r9d,edx
  4095ff:	mov    rdx,rbx
  409602:	call   0x407ea0
  409607:	mov    rcx,rsi
  40960a:	mov    edx,0x1
  40960f:	call   QWORD PTR [rsi+0x98]
  409615:	mov    ecx,0x1
  40961a:	call   0x421f40
  40961f:	nop
  409620:	push   rdi
  409621:	push   rsi
  409622:	push   rbx
  409623:	sub    rsp,0x20
  409627:	test   rcx,rcx
  40962a:	je     0x409631
  40962c:	cmp    BYTE PTR [rcx],0x0
  40962f:	jne    0x409660
  409631:	call   QWORD PTR [rip+0x2f945]        # 0x438f7c
  409637:	lea    rcx,[rip+0x20197]        # 0x4297d5
  40963e:	lea    r9,[rax+0x30]
  409642:	mov    r8d,0x2
  409648:	mov    edx,0x1
  40964d:	add    rsp,0x20
  409651:	pop    rbx
  409652:	pop    rsi
  409653:	pop    rdi
  409654:	jmp    0x421e38
  409659:	nop    DWORD PTR [rax+0x0]
  409660:	call   0x4080f0
  409665:	cmp    BYTE PTR [rax],0x0
  409668:	mov    rbx,rax
  40966b:	jne    0x409675
  40966d:	add    rsp,0x20
  409671:	pop    rbx
  409672:	pop    rsi
  409673:	pop    rdi
  409674:	ret    
  409675:	mov    rdi,QWORD PTR [rip+0x2f900]        # 0x438f7c
  40967c:	jmp    0x4096ba
  40967e:	xchg   ax,ax
  409680:	call   rdi
  409682:	mov    rdx,rsi
  409685:	lea    r9,[rax+0x30]
  409689:	mov    r8d,0x1
  40968f:	sub    rdx,rbx
  409692:	mov    rcx,rbx
  409695:	call   0x421e38
  40969a:	call   rdi
  40969c:	lea    rdx,[rax+0x30]
  4096a0:	mov    ecx,0x27
  4096a5:	call   0x421e68
  4096aa:	mov    rcx,rsi
  4096ad:	call   0x4080f0
  4096b2:	cmp    BYTE PTR [rax],0x0
  4096b5:	mov    rbx,rax
  4096b8:	je     0x40966d
  4096ba:	call   rdi
  4096bc:	lea    rdx,[rax+0x30]
  4096c0:	mov    ecx,0x27
  4096c5:	call   0x421e68
  4096ca:	mov    edx,0x27
  4096cf:	mov    rcx,rbx
  4096d2:	call   0x421dc0
  4096d7:	test   rax,rax
  4096da:	mov    rsi,rax
  4096dd:	jne    0x409680
  4096df:	call   rdi
  4096e1:	lea    rdx,[rax+0x30]
  4096e5:	mov    rcx,rbx
  4096e8:	call   0x421e60
  4096ed:	call   rdi
  4096ef:	lea    rdx,[rax+0x30]
  4096f3:	mov    ecx,0x27
  4096f8:	add    rsp,0x20
  4096fc:	pop    rbx
  4096fd:	pop    rsi
  4096fe:	pop    rdi
  4096ff:	jmp    0x421e68
  409704:	xchg   ax,ax
  409706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409710:	push   rsi
  409711:	push   rbx
  409712:	sub    rsp,0x28
  409716:	mov    eax,DWORD PTR [rcx]
  409718:	test   al,0x2
  40971a:	je     0x409791
  40971c:	mov    rbx,rcx
  40971f:	movzx  ecx,WORD PTR [rdx]
  409722:	mov    rsi,r8
  409725:	movzx  edx,cl
  409728:	cmp    dl,0x7f
  40972b:	ja     0x409770
  40972d:	lea    r9,[rip+0x22b8c]        # 0x42c2c0
  409734:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  40973a:	je     0x409770
  40973c:	movzx  r8d,cx
  409740:	mov    rcx,QWORD PTR [rip+0x2b481]        # 0x434bc8
  409747:	lea    rdx,[rip+0x1eb9c]        # 0x4282ea
  40974e:	call   0x407ea0
  409753:	mov    eax,DWORD PTR [rbx]
  409755:	and    eax,0x1001
  40975a:	cmp    eax,0x1001
  40975f:	je     0x4097c3
  409761:	add    rsp,0x28
  409765:	pop    rbx
  409766:	pop    rsi
  409767:	ret    
  409768:	nop    DWORD PTR [rax+rax*1+0x0]
  409770:	and    eax,0x1001
  409775:	cmp    eax,0x1001
  40977a:	je     0x4097b0
  40977c:	mov    rdx,QWORD PTR [rip+0x2b445]        # 0x434bc8
  409783:	mov    rcx,QWORD PTR [rsi]
  409786:	add    rsp,0x28
  40978a:	pop    rbx
  40978b:	pop    rsi
  40978c:	jmp    0x421e60
  409791:	mov    rdx,QWORD PTR [rip+0x2b430]        # 0x434bc8
  409798:	mov    rcx,QWORD PTR [r9]
  40979b:	add    rsp,0x28
  40979f:	pop    rbx
  4097a0:	pop    rsi
  4097a1:	jmp    0x421e60
  4097a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097b0:	mov    rdx,QWORD PTR [rip+0x2b411]        # 0x434bc8
  4097b7:	mov    ecx,0x20
  4097bc:	call   0x421e68
  4097c1:	jmp    0x40977c
  4097c3:	mov    r9,QWORD PTR [rip+0x2b3fe]        # 0x434bc8
  4097ca:	lea    rcx,[rip+0x1eb16]        # 0x4282e7
  4097d1:	mov    r8d,0x2
  4097d7:	mov    edx,0x1
  4097dc:	add    rsp,0x28
  4097e0:	pop    rbx
  4097e1:	pop    rsi
  4097e2:	jmp    0x421e38
  4097e7:	nop    WORD PTR [rax+rax*1+0x0]
  4097f0:	push   rdi
  4097f1:	push   rsi
  4097f2:	push   rbx
  4097f3:	sub    rsp,0x20
  4097f7:	lea    rax,[rip+0x22a02]        # 0x42c200
  4097fe:	mov    esi,ecx
  409800:	mov    ecx,0x100
  409805:	mov    ebx,DWORD PTR [rax+rsi*4]
  409808:	call   0x421e18
  40980d:	test   rax,rax
  409810:	mov    r8,rax
  409813:	je     0x40985b
  409815:	mov    ecx,0x20
  40981a:	xor    eax,eax
  40981c:	mov    rdi,r8
  40981f:	rep stos QWORD PTR es:[rdi],rax
  409822:	lea    rcx,[rip+0x22a9b]        # 0x42c2c4
  409829:	xor    edx,edx
  40982b:	nop    DWORD PTR [rax+rax*1+0x0]
  409830:	test   DWORD PTR [rcx+rdx*4],ebx
  409833:	je     0x40983b
  409835:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  40983b:	add    rdx,0x1
  40983f:	cmp    rdx,0x7f
  409843:	jne    0x409830
  409845:	lea    rax,[rip+0x2b4b4]        # 0x434d00
  40984c:	mov    QWORD PTR [rax+rsi*8],r8
  409850:	mov    rax,r8
  409853:	add    rsp,0x20
  409857:	pop    rbx
  409858:	pop    rsi
  409859:	pop    rdi
  40985a:	ret    
  40985b:	call   QWORD PTR [rip+0x2f71b]        # 0x438f7c
  409861:	lea    rcx,[rip+0x1ea90]        # 0x4282f8
  409868:	lea    r9,[rax+0x60]
  40986c:	mov    r8d,0x23
  409872:	mov    edx,0x1
  409877:	call   0x421e38
  40987c:	mov    ecx,0x1
  409881:	call   0x421e98
  409886:	nop
  409887:	nop    WORD PTR [rax+rax*1+0x0]
  409890:	push   rdi
  409891:	push   rsi
  409892:	push   rbx
  409893:	sub    rsp,0x20
  409897:	mov    r8,QWORD PTR [rdx]
  40989a:	mov    eax,DWORD PTR [r8+0x10]
  40989e:	and    eax,0xfffff00
  4098a3:	or     eax,DWORD PTR [rdx+0x10]
  4098a6:	test   al,0x20
  4098a8:	mov    DWORD PTR [rdx+0x10],eax
  4098ab:	jne    0x409910
  4098ad:	test   ah,0xf0
  4098b0:	je     0x409910
  4098b2:	test   eax,0x10000
  4098b7:	mov    eax,DWORD PTR [rdx+0x14]
  4098ba:	jne    0x409964
  4098c0:	cmp    eax,0x1
  4098c3:	je     0x409942
  4098c5:	cmp    eax,0x2
  4098c8:	jne    0x4098d5
  4098ca:	cmp    QWORD PTR [rdx+0x8],0x0
  4098cf:	je     0x409a24
  4098d5:	mov    eax,DWORD PTR [rcx+0x14]
  4098d8:	cmp    eax,DWORD PTR [rcx+0x4]
  4098db:	jbe    0x409921
  4098dd:	mov    rdi,QWORD PTR [r8+0x50]
  4098e1:	mov    rsi,QWORD PTR [rcx+0x20]
  4098e5:	mov    rbx,QWORD PTR [rip+0x1a234]        # 0x423b20
  4098ec:	nop    DWORD PTR [rax+0x0]
  4098f0:	call   QWORD PTR [rip+0x2f686]        # 0x438f7c
  4098f6:	lea    rcx,[rax+0x60]
  4098fa:	mov    r9,rdi
  4098fd:	mov    r8,rsi
  409900:	mov    rdx,rbx
  409903:	call   0x407ea0
  409908:	mov    eax,0xffffffff
  40990d:	jmp    0x40992b
  40990f:	nop
  409910:	cmp    DWORD PTR [rdx+0x14],0x1
  409914:	je     0x409933
  409916:	cmp    QWORD PTR [rdx+0x8],0x0
  40991b:	jne    0x409a10
  409921:	mov    QWORD PTR [rcx+0x18],0x0
  409929:	xor    eax,eax
  40992b:	add    rsp,0x20
  40992f:	pop    rbx
  409930:	pop    rsi
  409931:	pop    rdi
  409932:	ret    
  409933:	add    QWORD PTR [rcx+0x18],0x1
  409938:	xor    eax,eax
  40993a:	add    rsp,0x20
  40993e:	pop    rbx
  40993f:	pop    rsi
  409940:	pop    rdi
  409941:	ret    
  409942:	mov    rax,QWORD PTR [rcx+0x18]
  409946:	lea    r9,[rax+0x1]
  40994a:	mov    QWORD PTR [rcx+0x18],r9
  40994e:	cmp    BYTE PTR [rax+0x1],0x0
  409952:	je     0x4099f0
  409958:	mov    eax,DWORD PTR [rcx+0x14]
  40995b:	mov    QWORD PTR [rdx+0x8],r9
  40995f:	jmp    0x4098d8
  409964:	cmp    eax,0x1
  409967:	je     0x4099a0
  409969:	cmp    eax,0x2
  40996c:	jne    0x4099e0
  40996e:	cmp    QWORD PTR [rdx+0x8],0x0
  409973:	jne    0x409921
  409975:	test   BYTE PTR [rcx+0x10],0x3
  409979:	je     0x409921
  40997b:	mov    r9d,DWORD PTR [rcx+0x14]
  40997f:	mov    r8,QWORD PTR [rcx+0x8]
  409983:	mov    r8,QWORD PTR [r8+r9*8]
  409987:	mov    rax,r9
  40998a:	test   r8,r8
  40998d:	je     0x409921
  40998f:	cmp    BYTE PTR [r8],0x2d
  409993:	jne    0x4099cc
  409995:	jmp    0x409921
  409997:	nop    WORD PTR [rax+rax*1+0x0]
  4099a0:	mov    rax,QWORD PTR [rcx+0x18]
  4099a4:	lea    r8,[rax+0x1]
  4099a8:	mov    QWORD PTR [rcx+0x18],r8
  4099ac:	cmp    BYTE PTR [rax+0x1],0x0
  4099b0:	jne    0x4099d2
  4099b2:	mov    r9d,DWORD PTR [rcx+0x14]
  4099b6:	mov    r8,QWORD PTR [rcx+0x8]
  4099ba:	mov    r8,QWORD PTR [r8+r9*8]
  4099be:	mov    rax,r9
  4099c1:	test   r8,r8
  4099c4:	je     0x409a40
  4099c6:	cmp    BYTE PTR [r8],0x2d
  4099ca:	je     0x409a40
  4099cc:	add    eax,0x1
  4099cf:	mov    DWORD PTR [rcx+0x14],eax
  4099d2:	mov    QWORD PTR [rdx+0x8],r8
  4099d6:	jmp    0x409921
  4099db:	nop    DWORD PTR [rax+rax*1+0x0]
  4099e0:	mov    rcx,QWORD PTR [rip+0x1a0a1]        # 0x423a88
  4099e7:	call   0x408310
  4099ec:	nop    DWORD PTR [rax+0x0]
  4099f0:	mov    r9d,DWORD PTR [rcx+0x14]
  4099f4:	mov    r10,QWORD PTR [rcx+0x8]
  4099f8:	lea    eax,[r9+0x1]
  4099fc:	mov    r9,QWORD PTR [r10+r9*8]
  409a00:	mov    DWORD PTR [rcx+0x14],eax
  409a03:	mov    QWORD PTR [rcx+0x18],r9
  409a07:	jmp    0x40995b
  409a0c:	nop    DWORD PTR [rax+0x0]
  409a10:	mov    rdi,QWORD PTR [r8+0x50]
  409a14:	mov    rsi,QWORD PTR [rcx+0x20]
  409a18:	mov    rbx,QWORD PTR [rip+0x1a119]        # 0x423b38
  409a1f:	jmp    0x4098f0
  409a24:	mov    r9d,DWORD PTR [rcx+0x14]
  409a28:	mov    r10,QWORD PTR [rcx+0x8]
  409a2c:	lea    eax,[r9+0x1]
  409a30:	mov    r9,QWORD PTR [r10+r9*8]
  409a34:	mov    DWORD PTR [rcx+0x14],eax
  409a37:	jmp    0x40995b
  409a3c:	nop    DWORD PTR [rax+0x0]
  409a40:	mov    QWORD PTR [rdx+0x8],0x0
  409a48:	jmp    0x409921
  409a4d:	nop    DWORD PTR [rax]
  409a50:	push   rdi
  409a51:	push   rbx
  409a52:	sub    rsp,0x28
  409a56:	mov    rdi,rcx
  409a59:	call   0x421d08
  409a5e:	test   rax,rax
  409a61:	je     0x409a6a
  409a63:	add    rsp,0x28
  409a67:	pop    rbx
  409a68:	pop    rdi
  409a69:	ret    
  409a6a:	or     rcx,0xffffffffffffffff
  409a6e:	mov    rbx,QWORD PTR [rip+0x19fb3]        # 0x423a28
  409a75:	repnz scas al,BYTE PTR es:[rdi]
  409a77:	mov    rax,rcx
  409a7a:	not    rax
  409a7d:	lea    rdi,[rax-0x1]
  409a81:	call   QWORD PTR [rip+0x2f4f5]        # 0x438f7c
  409a87:	lea    rcx,[rax+0x60]
  409a8b:	mov    r8d,edi
  409a8e:	mov    rdx,rbx
  409a91:	call   0x407ea0
  409a96:	mov    ecx,0x1
  409a9b:	call   0x4082e0
  409aa0:	nop
  409aa1:	nop    DWORD PTR [rax+rax*1+0x0]
  409aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ab0:	push   r12
  409ab2:	push   rbp
  409ab3:	push   rdi
  409ab4:	push   rsi
  409ab5:	push   rbx
  409ab6:	sub    rsp,0x20
  409aba:	mov    eax,DWORD PTR [rcx+0xb0]
  409ac0:	mov    rbp,QWORD PTR [rcx+0x90]
  409ac7:	mov    rbx,QWORD PTR [rcx+0x78]
  409acb:	test   eax,eax
  409acd:	jle    0x409b64
  409ad3:	sub    eax,0x1
  409ad6:	mov    rsi,rcx
  409ad9:	add    rax,0x1
  409add:	lea    rdx,[rax+rax*2]
  409ae1:	lea    rax,[rax+rdx*4]
  409ae5:	lea    rdi,[rbx+rax*8]
  409ae9:	jmp    0x409b12
  409aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  409af0:	cmp    eax,0x6
  409af3:	jne    0x409b09
  409af5:	mov    rax,rbx
  409af8:	sub    rax,QWORD PTR [rsi+0x78]
  409afc:	mov    rdx,QWORD PTR [rbp+0x78]
  409b00:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  409b09:	add    rbx,0x68
  409b0d:	cmp    rbx,rdi
  409b10:	je     0x409b64
  409b12:	mov    edx,DWORD PTR [rbx+0x10]
  409b15:	mov    eax,edx
  409b17:	and    eax,0xf000
  409b1c:	shr    eax,0xc
  409b1f:	cmp    eax,0x1
  409b22:	jne    0x409af0
  409b24:	test   dh,0x4
  409b27:	je     0x409b3d
  409b29:	mov    rax,rbx
  409b2c:	sub    rax,QWORD PTR [rsi+0x78]
  409b30:	mov    rcx,QWORD PTR [rbp+0x78]
  409b34:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  409b3d:	and    edx,0x40
  409b40:	je     0x409b09
  409b42:	mov    r12,rbx
  409b45:	sub    r12,QWORD PTR [rsi+0x78]
  409b49:	mov    rcx,QWORD PTR [rbx+0x18]
  409b4d:	add    r12,QWORD PTR [rbp+0x78]
  409b51:	add    rbx,0x68
  409b55:	call   0x409a50
  409b5a:	cmp    rbx,rdi
  409b5d:	mov    QWORD PTR [r12+0x18],rax
  409b62:	jne    0x409b12
  409b64:	add    rsp,0x20
  409b68:	pop    rbx
  409b69:	pop    rsi
  409b6a:	pop    rdi
  409b6b:	pop    rbp
  409b6c:	pop    r12
  409b6e:	ret    
  409b6f:	nop
  409b70:	push   r13
  409b72:	push   r12
  409b74:	push   rbp
  409b75:	push   rdi
  409b76:	push   rsi
  409b77:	push   rbx
  409b78:	sub    rsp,0x28
  409b7c:	mov    r13,rcx
  409b7f:	mov    rcx,rdx
  409b82:	mov    r12,r8
  409b85:	mov    ebp,r9d
  409b88:	call   0x421e30
  409b8d:	test   rax,rax
  409b90:	mov    QWORD PTR [r13+0x8],rax
  409b94:	je     0x409c70
  409b9a:	mov    rdx,QWORD PTR [r13+0x0]
  409b9e:	mov    ecx,DWORD PTR [rdx+0x10]
  409ba1:	mov    rbx,QWORD PTR [rdx+0x60]
  409ba5:	mov    DWORD PTR [r13+0x14],0x0
  409bad:	mov    r8d,ecx
  409bb0:	or     r8d,0x42
  409bb4:	test   rbx,rbx
  409bb7:	mov    DWORD PTR [r13+0x10],r8d
  409bbb:	je     0x409c02
  409bbd:	mov    rsi,rax
  409bc0:	add    rsi,0x1
  409bc4:	add    rbx,0x1
  409bc8:	movzx  r11d,BYTE PTR [rsi-0x1]
  409bcd:	movzx  r10d,BYTE PTR [rbx-0x1]
  409bd2:	cmp    r11b,r10b
  409bd5:	je     0x409bec
  409bd7:	lea    rdx,[rip+0x199e2]        # 0x4235c0
  409bde:	movzx  edi,r11b
  409be2:	movzx  edi,BYTE PTR [rdx+rdi*1]
  409be6:	cmp    BYTE PTR [rdx+r10*1],dil
  409bea:	jne    0x409c02
  409bec:	test   r11b,r11b
  409bef:	jne    0x409bc0
  409bf1:	or     ecx,0x62
  409bf4:	mov    QWORD PTR [r13+0x8],0x0
  409bfc:	mov    DWORD PTR [r13+0x10],ecx
  409c00:	jmp    0x409c32
  409c02:	cmp    ebp,0x1
  409c05:	je     0x409c50
  409c07:	cmp    ebp,0x2
  409c0a:	jne    0x409c14
  409c0c:	test   ecx,0x20020
  409c12:	jne    0x409c80
  409c14:	test   ch,0xf0
  409c17:	je     0x409c2a
  409c19:	cmp    BYTE PTR [rax],0x0
  409c1c:	jne    0x409cc0
  409c22:	and    ecx,0x10000
  409c28:	je     0x409c70
  409c2a:	mov    QWORD PTR [r13+0x8],0x0
  409c32:	mov    rdx,r13
  409c35:	mov    rcx,r12
  409c38:	add    rsp,0x28
  409c3c:	pop    rbx
  409c3d:	pop    rsi
  409c3e:	pop    rdi
  409c3f:	pop    rbp
  409c40:	pop    r12
  409c42:	pop    r13
  409c44:	jmp    0x4092f0
  409c49:	nop    DWORD PTR [rax+0x0]
  409c50:	mov    edx,ecx
  409c52:	and    edx,0x20020
  409c58:	cmp    edx,0x20000
  409c5e:	je     0x409c14
  409c60:	mov    edx,ecx
  409c62:	and    edx,0x40020
  409c68:	cmp    edx,0x40020
  409c6e:	je     0x409c14
  409c70:	add    rsp,0x28
  409c74:	pop    rbx
  409c75:	pop    rsi
  409c76:	pop    rdi
  409c77:	pop    rbp
  409c78:	pop    r12
  409c7a:	pop    r13
  409c7c:	ret    
  409c7d:	nop    DWORD PTR [rax]
  409c80:	mov    edx,ecx
  409c82:	and    edx,0x40020
  409c88:	cmp    edx,0x20
  409c8b:	je     0x409c14
  409c8d:	mov    edx,ecx
  409c8f:	and    edx,0x400020
  409c95:	cmp    edx,0x400000
  409c9b:	je     0x409c14
  409ca1:	mov    edx,ecx
  409ca3:	and    edx,0x800020
  409ca9:	cmp    edx,0x800020
  409caf:	jne    0x409c70
  409cb1:	jmp    0x409c14
  409cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cc0:	mov    rcx,rax
  409cc3:	call   0x409a50
  409cc8:	or     DWORD PTR [r13+0x10],0x40
  409ccd:	mov    QWORD PTR [r13+0x8],rax
  409cd1:	jmp    0x409c32
  409cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ce0:	push   rsi
  409ce1:	push   rbx
  409ce2:	sub    rsp,0x28
  409ce6:	mov    rbx,rcx
  409ce9:	call   0x421e18
  409cee:	test   rax,rax
  409cf1:	je     0x409cfa
  409cf3:	add    rsp,0x28
  409cf7:	pop    rbx
  409cf8:	pop    rsi
  409cf9:	ret    
  409cfa:	mov    rsi,QWORD PTR [rip+0x19d27]        # 0x423a28
  409d01:	call   QWORD PTR [rip+0x2f275]        # 0x438f7c
  409d07:	lea    rcx,[rax+0x60]
  409d0b:	mov    r8d,ebx
  409d0e:	mov    rdx,rsi
  409d11:	call   0x407ea0
  409d16:	mov    ecx,0x1
  409d1b:	call   0x4082e0
  409d20:	nop
  409d21:	nop    DWORD PTR [rax+rax*1+0x0]
  409d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d30:	push   rbp
  409d31:	push   rdi
  409d32:	push   rsi
  409d33:	push   rbx
  409d34:	sub    rsp,0x28
  409d38:	mov    rbx,QWORD PTR [rcx]
  409d3b:	mov    rsi,rcx
  409d3e:	mov    rdi,rdx
  409d41:	test   rbx,rbx
  409d44:	je     0x409d94
  409d46:	movsxd r8,DWORD PTR [rbx]
  409d49:	mov    eax,DWORD PTR [rbx+0x4]
  409d4c:	cmp    r8d,eax
  409d4f:	lea    edx,[r8+0x1]
  409d53:	jge    0x409d65
  409d55:	mov    DWORD PTR [rbx],edx
  409d57:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  409d5c:	add    rsp,0x28
  409d60:	pop    rbx
  409d61:	pop    rsi
  409d62:	pop    rdi
  409d63:	pop    rbp
  409d64:	ret    
  409d65:	add    eax,0x8
  409d68:	mov    rcx,rbx
  409d6b:	mov    DWORD PTR [rbx+0x4],eax
  409d6e:	cdqe   
  409d70:	lea    rbp,[rax*8+0x8]
  409d78:	mov    rdx,rbp
  409d7b:	call   0x421dd8
  409d80:	test   rax,rax
  409d83:	je     0x409dc0
  409d85:	movsxd r8,DWORD PTR [rax]
  409d88:	mov    QWORD PTR [rsi],rax
  409d8b:	mov    rbx,rax
  409d8e:	lea    edx,[r8+0x1]
  409d92:	jmp    0x409d55
  409d94:	mov    ecx,0x38
  409d99:	call   0x409ce0
  409d9e:	test   rax,rax
  409da1:	mov    rbx,rax
  409da4:	je     0x409d5c
  409da6:	mov    DWORD PTR [rax],0x0
  409dac:	mov    DWORD PTR [rax+0x4],0x6
  409db3:	mov    edx,0x1
  409db8:	mov    QWORD PTR [rsi],rax
  409dbb:	xor    r8d,r8d
  409dbe:	jmp    0x409d55
  409dc0:	mov    rsi,QWORD PTR [rip+0x19c81]        # 0x423a48
  409dc7:	call   QWORD PTR [rip+0x2f1af]        # 0x438f7c
  409dcd:	lea    rcx,[rax+0x60]
  409dd1:	mov    r9,rbx
  409dd4:	mov    r8d,ebp
  409dd7:	mov    rdx,rsi
  409dda:	call   0x407ea0
  409ddf:	mov    ecx,0x1
  409de4:	call   0x4082e0
  409de9:	nop
  409dea:	nop    WORD PTR [rax+rax*1+0x0]
  409df0:	push   r15
  409df2:	push   r14
  409df4:	push   r13
  409df6:	push   r12
  409df8:	push   rbp
  409df9:	push   rdi
  409dfa:	push   rsi
  409dfb:	push   rbx
  409dfc:	sub    rsp,0x58
  409e00:	mov    rbp,QWORD PTR [rsp+0xc0]
  409e08:	mov    QWORD PTR [rsp+0xa0],rcx
  409e10:	mov    r15,r9
  409e13:	mov    r14,rdx
  409e16:	mov    r12,r8
  409e19:	lea    rcx,[r8+rbp*1+0x18]
  409e1e:	call   0x409ce0
  409e23:	test   r15,r15
  409e26:	mov    r13,rax
  409e29:	je     0x409fd0
  409e2f:	test   rbp,rbp
  409e32:	mov    DWORD PTR [rax],0x1
  409e38:	je     0x409f20
  409e3e:	lea    rsi,[rax+0x10]
  409e42:	lea    rax,[rsp+0x48]
  409e47:	mov    ebx,ebp
  409e49:	lea    r10,[rip+0x1eeb0]        # 0x428d00
  409e50:	mov    QWORD PTR [rsp+0x30],rax
  409e55:	jmp    0x409e75
  409e57:	nop    WORD PTR [rax+rax*1+0x0]
  409e60:	sub    ebx,0x1
  409e63:	add    rsi,0x1
  409e67:	mov    r15,rdi
  409e6a:	test   ebx,ebx
  409e6c:	mov    BYTE PTR [rsi-0x1],al
  409e6f:	jle    0x409f65
  409e75:	movzx  eax,BYTE PTR [r15]
  409e79:	lea    rdi,[r15+0x1]
  409e7d:	test   eax,eax
  409e7f:	je     0x409f65
  409e85:	cmp    eax,0x26
  409e88:	jne    0x409e60
  409e8a:	cmp    ebx,0x2
  409e8d:	mov    QWORD PTR [rsp+0x48],rdi
  409e92:	mov    eax,0x26
  409e97:	jle    0x409e60
  409e99:	cmp    BYTE PTR [r15+0x1],0x23
  409e9e:	lea    r9,[rip+0x1ee1b]        # 0x428cc0
  409ea5:	je     0x409f70
  409eab:	mov    r15,r9
  409eae:	mov    QWORD PTR [rsp+0xc0],rbp
  409eb6:	mov    QWORD PTR [rsp+0x38],rsi
  409ebb:	mov    ebp,DWORD PTR [r15+0x4]
  409ebf:	mov    esi,ebx
  409ec1:	cmp    ebp,esi
  409ec3:	jg     0x409ee9
  409ec5:	movsxd rbx,ebp
  409ec8:	lea    rdx,[r15+0x8]
  409ecc:	mov    rcx,rdi
  409ecf:	mov    r8,rbx
  409ed2:	mov    QWORD PTR [rsp+0x28],r10
  409ed7:	call   0x421d90
  409edc:	test   eax,eax
  409ede:	mov    r10,QWORD PTR [rsp+0x28]
  409ee3:	je     0x409ff1
  409ee9:	cmp    r15,r10
  409eec:	je     0x409eff
  409eee:	add    r15,0x10
  409ef2:	mov    ebp,DWORD PTR [r15+0x4]
  409ef6:	cmp    ebp,esi
  409ef8:	jle    0x409ec5
  409efa:	cmp    r15,r10
  409efd:	jne    0x409eee
  409eff:	mov    ebx,esi
  409f01:	mov    rbp,QWORD PTR [rsp+0xc0]
  409f09:	mov    rsi,QWORD PTR [rsp+0x38]
  409f0e:	mov    eax,0x26
  409f13:	jmp    0x409e60
  409f18:	nop    DWORD PTR [rax+rax*1+0x0]
  409f20:	mov    BYTE PTR [rax+0x10],0x0
  409f24:	lea    rcx,[r13+rbp*1+0x11]
  409f29:	mov    QWORD PTR [r13+0x8],rcx
  409f2d:	mov    r8,r12
  409f30:	mov    rdx,r14
  409f33:	call   0x421e08
  409f38:	mov    rax,QWORD PTR [r13+0x8]
  409f3c:	mov    rcx,QWORD PTR [rsp+0xa0]
  409f44:	mov    rdx,r13
  409f47:	mov    BYTE PTR [rax+r12*1],0x0
  409f4c:	call   0x409d30
  409f51:	mov    rax,r13
  409f54:	add    rsp,0x58
  409f58:	pop    rbx
  409f59:	pop    rsi
  409f5a:	pop    rdi
  409f5b:	pop    rbp
  409f5c:	pop    r12
  409f5e:	pop    r13
  409f60:	pop    r14
  409f62:	pop    r15
  409f64:	ret    
  409f65:	mov    BYTE PTR [rsi],0x0
  409f68:	jmp    0x409f24
  409f6a:	nop    WORD PTR [rax+rax*1+0x0]
  409f70:	lea    rcx,[r15+0x2]
  409f74:	mov    r8d,0xa
  409f7a:	mov    QWORD PTR [rsp+0x48],rcx
  409f7f:	cmp    BYTE PTR [r15+0x2],0x78
  409f84:	je     0x409fe3
  409f86:	mov    rdx,QWORD PTR [rsp+0x30]
  409f8b:	mov    QWORD PTR [rsp+0x28],r10
  409f90:	call   0x421d60
  409f95:	mov    rdx,QWORD PTR [rsp+0x48]
  409f9a:	mov    ecx,eax
  409f9c:	mov    r10,QWORD PTR [rsp+0x28]
  409fa1:	mov    eax,0x26
  409fa6:	cmp    BYTE PTR [rdx],0x3b
  409fa9:	jne    0x409e60
  409faf:	add    rdx,0x1
  409fb3:	mov    r8,rdx
  409fb6:	sub    r8,rdi
  409fb9:	cmp    r8d,ebx
  409fbc:	jg     0x409e60
  409fc2:	sub    ebx,r8d
  409fc5:	mov    eax,ecx
  409fc7:	mov    rdi,rdx
  409fca:	jmp    0x409e60
  409fcf:	nop
  409fd0:	lea    rcx,[rax+0x10]
  409fd4:	mov    DWORD PTR [rax],0x0
  409fda:	mov    QWORD PTR [rax+0x8],rcx
  409fde:	jmp    0x409f2d
  409fe3:	lea    rcx,[r15+0x3]
  409fe7:	mov    r8b,0x10
  409fea:	mov    QWORD PTR [rsp+0x48],rcx
  409fef:	jmp    0x409f86
  409ff1:	mov    rax,rbx
  409ff4:	mov    r9,r15
  409ff7:	mov    ebx,esi
  409ff9:	mov    r15d,ebp
  409ffc:	add    rdi,rax
  409fff:	mov    rsi,QWORD PTR [rsp+0x38]
  40a004:	mov    rbp,QWORD PTR [rsp+0xc0]
  40a00c:	sub    ebx,r15d
  40a00f:	movzx  eax,BYTE PTR [r9]
  40a013:	jmp    0x409e60
  40a018:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	push   rsi
  40a021:	push   rbx
  40a022:	sub    rsp,0x28
  40a026:	mov    rax,QWORD PTR [rdx+0x38]
  40a02a:	mov    rbx,rdx
  40a02d:	lea    rdx,[rip+0x7b2c]        # 0x411b60
  40a034:	mov    rsi,rcx
  40a037:	cmp    rax,rdx
  40a03a:	je     0x40a190
  40a040:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x408b90
  40a047:	cmp    rax,rdx
  40a04a:	je     0x40a1b0
  40a050:	lea    rdx,[rip+0x8bf9]        # 0x412c50
  40a057:	cmp    rax,rdx
  40a05a:	je     0x40a1c4
  40a060:	mov    r8,QWORD PTR [rbx+0x48]
  40a064:	test   r8,r8
  40a067:	je     0x40a150
  40a06d:	movzx  r9d,WORD PTR [rbx+0xc]
  40a072:	cmp    r9w,0x1
  40a077:	je     0x40a174
  40a07d:	cmp    r9w,0xffff
  40a082:	je     0x40a097
  40a084:	mov    rdx,QWORD PTR [rcx]
  40a087:	lea    rcx,[rip+0x1fbea]        # 0x429c78
  40a08e:	call   0x4082b0
  40a093:	mov    r8,QWORD PTR [rbx+0x48]
  40a097:	mov    rdx,QWORD PTR [rsi]
  40a09a:	lea    rcx,[rip+0x204af]        # 0x42a550
  40a0a1:	call   0x4082b0
  40a0a6:	mov    eax,DWORD PTR [rbx+0x10]
  40a0a9:	test   ah,0xf0
  40a0ac:	je     0x40a120
  40a0ae:	test   eax,0x10000
  40a0b3:	jne    0x40a0f0
  40a0b5:	lea    rdx,[rip+0x1f8f5]        # 0x4299b1
  40a0bc:	lea    rcx,[rip+0x1f793]        # 0x429856
  40a0c3:	call   0x4082b0
  40a0c8:	call   QWORD PTR [rip+0x2eeae]        # 0x438f7c
  40a0ce:	lea    rcx,[rip+0x1f939]        # 0x429a0e
  40a0d5:	lea    r9,[rax+0x30]
  40a0d9:	mov    r8d,0x10
  40a0df:	mov    edx,0x1
  40a0e4:	add    rsp,0x28
  40a0e8:	pop    rbx
  40a0e9:	pop    rsi
  40a0ea:	jmp    0x421e38
  40a0ef:	nop
  40a0f0:	mov    rdx,QWORD PTR [rsi]
  40a0f3:	mov    r8,QWORD PTR [rbx+0x48]
  40a0f7:	lea    rcx,[rip+0x20d0c]        # 0x42ae0a
  40a0fe:	call   0x4082b0
  40a103:	lea    rdx,[rip+0x1f79c]        # 0x4298a6
  40a10a:	lea    rcx,[rip+0x1f745]        # 0x429856
  40a111:	call   0x4082b0
  40a116:	jmp    0x40a0c8
  40a118:	nop    DWORD PTR [rax+rax*1+0x0]
  40a120:	mov    rdx,QWORD PTR [rsi]
  40a123:	mov    r8,QWORD PTR [rbx+0x48]
  40a127:	lea    rcx,[rip+0x20cdc]        # 0x42ae0a
  40a12e:	call   0x4082b0
  40a133:	lea    rdx,[rip+0x1f753]        # 0x42988d
  40a13a:	lea    rcx,[rip+0x1f715]        # 0x429856
  40a141:	call   0x4082b0
  40a146:	jmp    0x40a0c8
  40a148:	nop    DWORD PTR [rax+rax*1+0x0]
  40a150:	test   rax,rax
  40a153:	je     0x40a1f0
  40a159:	mov    rdx,QWORD PTR [rcx]
  40a15c:	lea    r8,[rip+0x1f6e9]        # 0x42984c
  40a163:	lea    rcx,[rip+0x1fc7a]        # 0x429de4
  40a16a:	call   0x4082b0
  40a16f:	jmp    0x40a0c8
  40a174:	mov    rdx,QWORD PTR [rcx]
  40a177:	lea    rcx,[rip+0x20ce6]        # 0x42ae64
  40a17e:	call   0x4082b0
  40a183:	jmp    0x40a0a6
  40a188:	nop    DWORD PTR [rax+rax*1+0x0]
  40a190:	mov    rdx,QWORD PTR [rcx]
  40a193:	lea    r8,[rip+0x1f807]        # 0x4299a1
  40a19a:	lea    rcx,[rip+0x1fc43]        # 0x429de4
  40a1a1:	call   0x4082b0
  40a1a6:	jmp    0x40a0c8
  40a1ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1b0:	mov    rdx,QWORD PTR [rcx]
  40a1b3:	lea    rcx,[rip+0x20b9c]        # 0x42ad56
  40a1ba:	call   0x4082b0
  40a1bf:	jmp    0x40a0c8
  40a1c4:	lea    rdx,[rip+0x1f8cb]        # 0x429a96
  40a1cb:	lea    rcx,[rip+0x1f684]        # 0x429856
  40a1d2:	call   0x4082b0
  40a1d7:	lea    rdx,[rip+0x1f7d3]        # 0x4299b1
  40a1de:	lea    rcx,[rip+0x1f671]        # 0x429856
  40a1e5:	call   0x4082b0
  40a1ea:	jmp    0x40a0c8
  40a1ef:	nop
  40a1f0:	lea    rdx,[rip+0x1f8ce]        # 0x429ac5
  40a1f7:	lea    rcx,[rip+0x1f658]        # 0x429856
  40a1fe:	call   0x4082b0
  40a203:	lea    rdx,[rip+0x1f69c]        # 0x4298a6
  40a20a:	lea    rcx,[rip+0x1f645]        # 0x429856
  40a211:	call   0x4082b0
  40a216:	jmp    0x40a0c8
  40a21b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a220:	push   rbp
  40a221:	push   rdi
  40a222:	push   rsi
  40a223:	push   rbx
  40a224:	sub    rsp,0x28
  40a228:	mov    esi,DWORD PTR [rcx+0xb0]
  40a22e:	mov    rbx,QWORD PTR [rcx+0x78]
  40a232:	mov    rdi,rcx
  40a235:	call   QWORD PTR [rip+0x2ed41]        # 0x438f7c
  40a23b:	lea    rcx,[rip+0x1fa17]        # 0x429c59
  40a242:	lea    r9,[rax+0x30]
  40a246:	mov    r8d,0x1e
  40a24c:	mov    edx,0x1
  40a251:	call   0x421e38
  40a256:	test   esi,esi
  40a258:	jle    0x40a2b9
  40a25a:	lea    eax,[rsi-0x1]
  40a25d:	lea    rbp,[rdi+0x30]
  40a261:	add    rax,0x1
  40a265:	lea    rdx,[rax+rax*2]
  40a269:	lea    rax,[rax+rdx*4]
  40a26d:	lea    rsi,[rbx+rax*8]
  40a271:	test   DWORD PTR [rbx+0x10],0x280000
  40a278:	jne    0x40a2b0
  40a27a:	movzx  edx,WORD PTR [rbx+0x2]
  40a27e:	movzx  eax,dl
  40a281:	cmp    al,0x7f
  40a283:	ja     0x40a2b0
  40a285:	lea    rcx,[rip+0x22034]        # 0x42c2c0
  40a28c:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  40a291:	je     0x40a2b0
  40a293:	lea    rcx,[rip+0x1f785]        # 0x429a1f
  40a29a:	call   0x4082b0
  40a29f:	mov    rdx,rbx
  40a2a2:	mov    rcx,rbp
  40a2a5:	call   0x40a020
  40a2aa:	nop    WORD PTR [rax+rax*1+0x0]
  40a2b0:	add    rbx,0x68
  40a2b4:	cmp    rbx,rsi
  40a2b7:	jne    0x40a271
  40a2b9:	mov    r8,QWORD PTR [rdi+0x30]
  40a2bd:	lea    rdx,[rip+0x1f55b]        # 0x42981f
  40a2c4:	lea    rcx,[rip+0x20d72]        # 0x42b03d
  40a2cb:	add    rsp,0x28
  40a2cf:	pop    rbx
  40a2d0:	pop    rsi
  40a2d1:	pop    rdi
  40a2d2:	pop    rbp
  40a2d3:	jmp    0x4082b0
  40a2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e0:	push   r15
  40a2e2:	push   r14
  40a2e4:	push   r13
  40a2e6:	push   r12
  40a2e8:	push   rbp
  40a2e9:	push   rdi
  40a2ea:	push   rsi
  40a2eb:	push   rbx
  40a2ec:	sub    rsp,0x58
  40a2f0:	mov    rdi,rcx
  40a2f3:	mov    QWORD PTR [rsp+0xa8],rdx
  40a2fb:	mov    rsi,r8
  40a2fe:	mov    rbx,r9
  40a301:	call   0x421d98
  40a306:	sub    eax,0x1
  40a309:	cmp    eax,0x1e
  40a30c:	mov    DWORD PTR [rsp+0x2c],eax
  40a310:	ja     0x40a3d4
  40a316:	mov    eax,DWORD PTR [rbx]
  40a318:	mov    rbp,QWORD PTR [rsi]
  40a31b:	test   eax,eax
  40a31d:	jle    0x40a49e
  40a323:	sub    eax,0x1
  40a326:	mov    rbx,QWORD PTR [rip+0x2ee9f]        # 0x4391cc
  40a32d:	mov    r12d,0x2
  40a333:	add    rax,0x1
  40a337:	lea    rdx,[rax+rax*2]
  40a33b:	lea    rax,[rax+rdx*4]
  40a33f:	lea    rax,[rbp+rax*8+0x0]
  40a344:	mov    QWORD PTR [rsp+0x20],rax
  40a349:	nop    DWORD PTR [rax+0x0]
  40a350:	cmp    rbp,QWORD PTR [rsp+0xa8]
  40a358:	je     0x40a3c2
  40a35a:	test   DWORD PTR [rbp+0x10],0x280000
  40a361:	jne    0x40a3c2
  40a363:	mov    r15,QWORD PTR [rbp+0x50]
  40a367:	xor    r14d,r14d
  40a36a:	jmp    0x40a374
  40a36c:	nop    DWORD PTR [rax+0x0]
  40a370:	add    r14d,0x1
  40a374:	mov    r13d,r14d
  40a377:	movzx  ecx,BYTE PTR [r15+r13*1]
  40a37c:	call   rbx
  40a37e:	movzx  ecx,BYTE PTR [rdi+r13*1]
  40a383:	mov    esi,eax
  40a385:	call   rbx
  40a387:	cmp    esi,eax
  40a389:	je     0x40a370
  40a38b:	mov    r15,QWORD PTR [rbp+0x58]
  40a38f:	cmp    r12d,r14d
  40a392:	cmovb  r12d,r14d
  40a396:	test   r15,r15
  40a399:	je     0x40a3c2
  40a39b:	xor    r14d,r14d
  40a39e:	jmp    0x40a3a4
  40a3a0:	add    r14d,0x1
  40a3a4:	mov    r13d,r14d
  40a3a7:	movsx  ecx,BYTE PTR [r15+r13*1]
  40a3ac:	call   rbx
  40a3ae:	movsx  ecx,BYTE PTR [rdi+r13*1]
  40a3b3:	mov    esi,eax
  40a3b5:	call   rbx
  40a3b7:	cmp    esi,eax
  40a3b9:	je     0x40a3a0
  40a3bb:	cmp    r12d,r14d
  40a3be:	cmovb  r12d,r14d
  40a3c2:	add    rbp,0x68
  40a3c6:	cmp    rbp,QWORD PTR [rsp+0x20]
  40a3cb:	jne    0x40a350
  40a3cd:	cmp    DWORD PTR [rsp+0x2c],r12d
  40a3d2:	ja     0x40a3f5
  40a3d4:	lea    rcx,[rip+0x1f654]        # 0x429a2f
  40a3db:	mov    rdx,rdi
  40a3de:	call   0x4082b0
  40a3e3:	nop
  40a3e4:	add    rsp,0x58
  40a3e8:	pop    rbx
  40a3e9:	pop    rsi
  40a3ea:	pop    rdi
  40a3eb:	pop    rbp
  40a3ec:	pop    r12
  40a3ee:	pop    r13
  40a3f0:	pop    r14
  40a3f2:	pop    r15
  40a3f4:	ret    
  40a3f5:	lea    rbp,[rsp+0x30]
  40a3fa:	mov    ebx,r12d
  40a3fd:	cmp    r12d,0x8
  40a401:	mov    rax,rdi
  40a404:	lea    rsi,[rbp+rbx*1+0x0]
  40a409:	mov    rcx,rbp
  40a40c:	jae    0x40a477
  40a40e:	xor    edx,edx
  40a410:	test   r12b,0x4
  40a414:	je     0x40a41f
  40a416:	mov    edx,DWORD PTR [rax]
  40a418:	mov    DWORD PTR [rcx],edx
  40a41a:	mov    edx,0x4
  40a41f:	test   r12b,0x2
  40a423:	je     0x40a433
  40a425:	movzx  r8d,WORD PTR [rax+rdx*1]
  40a42a:	mov    WORD PTR [rcx+rdx*1],r8w
  40a42f:	add    rdx,0x2
  40a433:	and    r12d,0x1
  40a437:	je     0x40a440
  40a439:	movzx  eax,BYTE PTR [rax+rdx*1]
  40a43d:	mov    BYTE PTR [rcx+rdx*1],al
  40a440:	add    rbx,rdi
  40a443:	jmp    0x40a448
  40a445:	mov    rsi,rax
  40a448:	lea    rcx,[rip+0x1f5f0]        # 0x429a3f
  40a44f:	mov    BYTE PTR [rsi],0x0
  40a452:	mov    rdx,rbp
  40a455:	add    rbx,0x1
  40a459:	call   0x4082b0
  40a45e:	movzx  ecx,BYTE PTR [rbx-0x1]
  40a462:	cmp    BYTE PTR [rbx],0x0
  40a465:	lea    rax,[rsi+0x1]
  40a469:	mov    BYTE PTR [rax-0x1],cl
  40a46c:	jne    0x40a445
  40a46e:	mov    BYTE PTR [rsi+0x1],0x0
  40a472:	jmp    0x40a3d4
  40a477:	mov    ecx,r12d
  40a47a:	xor    eax,eax
  40a47c:	and    ecx,0xfffffff8
  40a47f:	mov    edx,eax
  40a481:	add    eax,0x8
  40a484:	mov    r8,QWORD PTR [rdi+rdx*1]
  40a488:	cmp    eax,ecx
  40a48a:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40a48f:	jb     0x40a47f
  40a491:	lea    rcx,[rbp+rax*1+0x0]
  40a496:	add    rax,rdi
  40a499:	jmp    0x40a40e
  40a49e:	mov    r12d,0x2
  40a4a4:	jmp    0x40a3cd
  40a4a9:	nop    DWORD PTR [rax+0x0]
  40a4b0:	push   r14
  40a4b2:	push   r13
  40a4b4:	push   r12
  40a4b6:	push   rbp
  40a4b7:	push   rdi
  40a4b8:	push   rsi
  40a4b9:	push   rbx
  40a4ba:	sub    rsp,0x20
  40a4be:	mov    r13,QWORD PTR [rip+0x2eab7]        # 0x438f7c
  40a4c5:	mov    rbx,QWORD PTR [rcx+0x78]
  40a4c9:	mov    rdi,rcx
  40a4cc:	mov    esi,DWORD PTR [rcx+0xb0]
  40a4d2:	call   r13
  40a4d5:	lea    rcx,[rip+0x1f77d]        # 0x429c59
  40a4dc:	lea    r9,[rax+0x30]
  40a4e0:	mov    r8d,0x1e
  40a4e6:	mov    edx,0x1
  40a4eb:	lea    r12,[rdi+0x78]
  40a4ef:	lea    rbp,[rdi+0xb0]
  40a4f6:	call   0x421e38
  40a4fb:	lea    r14,[rdi+0x30]
  40a4ff:	jmp    0x40a510
  40a501:	sub    esi,0x1
  40a504:	add    rbx,0x68
  40a508:	test   esi,esi
  40a50a:	jle    0x40a5bd
  40a510:	test   DWORD PTR [rbx+0x10],0x280000
  40a517:	jne    0x40a501
  40a519:	mov    rcx,QWORD PTR [rbx+0x50]
  40a51d:	mov    r9,rbp
  40a520:	mov    r8,r12
  40a523:	mov    rdx,rbx
  40a526:	call   0x40a2e0
  40a52b:	mov    rcx,r14
  40a52e:	mov    rdx,rbx
  40a531:	call   0x40a020
  40a536:	mov    rcx,QWORD PTR [rbx+0x58]
  40a53a:	test   rcx,rcx
  40a53d:	je     0x40a501
  40a53f:	mov    r9,rbp
  40a542:	mov    r8,r12
  40a545:	mov    rdx,rbx
  40a548:	call   0x40a2e0
  40a54d:	lea    rax,[rip+0x86fc]        # 0x412c50
  40a554:	cmp    QWORD PTR [rbx+0x38],rax
  40a558:	je     0x40a5f0
  40a55e:	cmp    WORD PTR [rbx+0xc],0x1
  40a563:	mov    rdx,QWORD PTR [rdi+0x30]
  40a567:	mov    r9,QWORD PTR [rbx+0x60]
  40a56b:	mov    r8,QWORD PTR [rbx+0x48]
  40a56f:	je     0x40a5e2
  40a571:	lea    rcx,[rip+0x2012b]        # 0x42a6a3
  40a578:	call   0x4082b0
  40a57d:	lea    rdx,[rip+0x1f309]        # 0x42988d
  40a584:	lea    rcx,[rip+0x1f2cb]        # 0x429856
  40a58b:	sub    esi,0x1
  40a58e:	add    rbx,0x68
  40a592:	call   0x4082b0
  40a597:	call   r13
  40a59a:	lea    rcx,[rip+0x1f46d]        # 0x429a0e
  40a5a1:	lea    r9,[rax+0x30]
  40a5a5:	mov    r8d,0x10
  40a5ab:	mov    edx,0x1
  40a5b0:	call   0x421e38
  40a5b5:	test   esi,esi
  40a5b7:	jg     0x40a510
  40a5bd:	mov    r8,QWORD PTR [rdi+0x30]
  40a5c1:	lea    rdx,[rip+0x1f2f7]        # 0x4298bf
  40a5c8:	lea    rcx,[rip+0x20a6e]        # 0x42b03d
  40a5cf:	add    rsp,0x20
  40a5d3:	pop    rbx
  40a5d4:	pop    rsi
  40a5d5:	pop    rdi
  40a5d6:	pop    rbp
  40a5d7:	pop    r12
  40a5d9:	pop    r13
  40a5db:	pop    r14
  40a5dd:	jmp    0x4082b0
  40a5e2:	lea    rcx,[rip+0x20147]        # 0x42a730
  40a5e9:	call   0x4082b0
  40a5ee:	jmp    0x40a57d
  40a5f0:	lea    rdx,[rip+0x1f4fd]        # 0x429af4
  40a5f7:	lea    rcx,[rip+0x1f258]        # 0x429856
  40a5fe:	call   0x4082b0
  40a603:	jmp    0x40a57d
  40a608:	nop    DWORD PTR [rax+rax*1+0x0]
  40a610:	push   r15
  40a612:	push   r14
  40a614:	push   r13
  40a616:	push   r12
  40a618:	push   rbp
  40a619:	push   rdi
  40a61a:	push   rsi
  40a61b:	push   rbx
  40a61c:	sub    rsp,0x68
  40a620:	mov    eax,DWORD PTR [rcx+0x10]
  40a623:	test   al,0x8
  40a625:	jne    0x40a730
  40a62b:	mov    rdi,QWORD PTR [rcx+0x20]
  40a62f:	test   rdi,rdi
  40a632:	je     0x40a770
  40a638:	mov    rdx,QWORD PTR [rcx+0x18]
  40a63c:	lea    r13,[rsp+0x40]
  40a641:	mov    rbp,rcx
  40a644:	mov    r8d,0x20
  40a64a:	mov    rcx,r13
  40a64d:	call   0x41b350
  40a652:	test   eax,eax
  40a654:	jne    0x40a730
  40a65a:	mov    eax,DWORD PTR [rdi]
  40a65c:	test   eax,eax
  40a65e:	jle    0x40a6f7
  40a664:	lea    r15d,[rax-0x1]
  40a668:	xor    ebx,ebx
  40a66a:	xor    r12d,r12d
  40a66d:	lea    rax,[r15+0x1]
  40a671:	mov    QWORD PTR [rsp+0x38],rax
  40a676:	jmp    0x40a6a0
  40a678:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	mov    BYTE PTR [r15],0x3d
  40a684:	cmp    r14d,r12d
  40a687:	je     0x40a691
  40a689:	movsxd rax,r12d
  40a68c:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  40a691:	add    r12d,0x1
  40a695:	add    rbx,0x1
  40a699:	cmp    rbx,QWORD PTR [rsp+0x38]
  40a69e:	je     0x40a6f7
  40a6a0:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  40a6a5:	mov    edx,0x3d
  40a6aa:	mov    r14d,ebx
  40a6ad:	mov    rcx,rsi
  40a6b0:	call   0x421dc0
  40a6b5:	test   rax,rax
  40a6b8:	mov    r15,rax
  40a6bb:	je     0x40a741
  40a6c1:	mov    BYTE PTR [rax],0x0
  40a6c4:	xor    r9d,r9d
  40a6c7:	xor    r8d,r8d
  40a6ca:	mov    DWORD PTR [rsp+0x20],0x0
  40a6d2:	mov    rdx,rsi
  40a6d5:	mov    rcx,r13
  40a6d8:	call   0x41b348
  40a6dd:	test   eax,eax
  40a6df:	jne    0x40a680
  40a6e1:	mov    rcx,rsi
  40a6e4:	add    rbx,0x1
  40a6e8:	call   0x421e50
  40a6ed:	sub    DWORD PTR [rdi],0x1
  40a6f0:	cmp    rbx,QWORD PTR [rsp+0x38]
  40a6f5:	jne    0x40a6a0
  40a6f7:	mov    rcx,r13
  40a6fa:	call   0x41b340
  40a6ff:	mov    eax,DWORD PTR [rdi]
  40a701:	test   eax,eax
  40a703:	jne    0x40a730
  40a705:	mov    eax,DWORD PTR [rbp+0x10]
  40a708:	mov    edx,eax
  40a70a:	and    edx,0xfffff00
  40a710:	test   ah,0x8
  40a713:	jne    0x40a718
  40a715:	or     edx,0x20
  40a718:	mov    DWORD PTR [rbp+0x10],edx
  40a71b:	mov    rcx,rdi
  40a71e:	call   0x421e50
  40a723:	mov    QWORD PTR [rbp+0x20],0x0
  40a72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a730:	add    rsp,0x68
  40a734:	pop    rbx
  40a735:	pop    rsi
  40a736:	pop    rdi
  40a737:	pop    rbp
  40a738:	pop    r12
  40a73a:	pop    r13
  40a73c:	pop    r14
  40a73e:	pop    r15
  40a740:	ret    
  40a741:	xor    r9d,r9d
  40a744:	xor    r8d,r8d
  40a747:	mov    DWORD PTR [rsp+0x20],0x0
  40a74f:	mov    rdx,rsi
  40a752:	mov    rcx,r13
  40a755:	call   0x41b348
  40a75a:	test   eax,eax
  40a75c:	jne    0x40a684
  40a762:	jmp    0x40a6e1
  40a767:	nop    WORD PTR [rax+rax*1+0x0]
  40a770:	mov    edx,eax
  40a772:	and    edx,0xfffff00
  40a778:	test   ah,0x8
  40a77b:	jne    0x40a780
  40a77d:	or     edx,0x20
  40a780:	mov    DWORD PTR [rcx+0x10],edx
  40a783:	jmp    0x40a730
  40a785:	nop
  40a786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a790:	push   rsi
  40a791:	push   rbx
  40a792:	sub    rsp,0x28
  40a796:	test   BYTE PTR [rdx+0x10],0x4
  40a79a:	je     0x40a7a5
  40a79c:	mov    rax,QWORD PTR [rdx]
  40a79f:	test   BYTE PTR [rax+0x13],0x2
  40a7a3:	jne    0x40a7b0
  40a7a5:	add    rsp,0x28
  40a7a9:	pop    rbx
  40a7aa:	pop    rsi
  40a7ab:	jmp    0x409890
  40a7b0:	mov    rsi,QWORD PTR [rax+0x50]
  40a7b4:	mov    rbx,QWORD PTR [rip+0x193b5]        # 0x423b70
  40a7bb:	call   QWORD PTR [rip+0x2e7bb]        # 0x438f7c
  40a7c1:	lea    rcx,[rax+0x60]
  40a7c5:	mov    r8,rsi
  40a7c8:	mov    rdx,rbx
  40a7cb:	call   0x407ea0
  40a7d0:	mov    eax,0xffffffff
  40a7d5:	add    rsp,0x28
  40a7d9:	pop    rbx
  40a7da:	pop    rsi
  40a7db:	ret    
  40a7dc:	nop    DWORD PTR [rax+0x0]
  40a7e0:	push   r15
  40a7e2:	push   r14
  40a7e4:	push   r13
  40a7e6:	push   r12
  40a7e8:	push   rbp
  40a7e9:	push   rdi
  40a7ea:	push   rsi
  40a7eb:	push   rbx
  40a7ec:	sub    rsp,0x188
  40a7f3:	movzx  eax,WORD PTR [rcx+0xaa]
  40a7fa:	test   ax,0x7fff
  40a7fe:	je     0x40aa58
  40a804:	mov    r12,rdx
  40a807:	lea    rdx,[rax+rax*2]
  40a80b:	mov    rbp,rcx
  40a80e:	mov    rcx,QWORD PTR [rcx+0x78]
  40a812:	lea    rax,[rax+rdx*4]
  40a816:	lea    rax,[rcx+rax*8]
  40a81a:	mov    rbx,QWORD PTR [rax+0x18]
  40a81e:	test   rbx,rbx
  40a821:	je     0x40a82c
  40a823:	cmp    BYTE PTR [rbx],0x0
  40a826:	jne    0x40a8d0
  40a82c:	mov    rax,QWORD PTR [rbp+0x58]
  40a830:	test   rax,rax
  40a833:	jne    0x40a844
  40a835:	jmp    0x40aa58
  40a83a:	nop    WORD PTR [rax+rax*1+0x0]
  40a840:	add    rax,0x8
  40a844:	cmp    QWORD PTR [rax+0x8],0x0
  40a849:	jne    0x40a840
  40a84b:	mov    rbx,QWORD PTR [rax]
  40a84e:	xor    edi,edi
  40a850:	cmp    BYTE PTR [rbx],0x24
  40a853:	je     0x40a8d4
  40a855:	lea    r13,[rsp+0x30]
  40a85a:	mov    rcx,rbx
  40a85d:	mov    rsi,QWORD PTR [rip+0x2e990]        # 0x4391f4
  40a864:	mov    rdx,r13
  40a867:	call   rsi
  40a869:	test   eax,eax
  40a86b:	jne    0x40aa60
  40a871:	movzx  eax,WORD PTR [rsp+0x36]
  40a876:	and    ax,0xf000
  40a87a:	cmp    ax,0x4000
  40a87e:	je     0x40a9b0
  40a884:	cmp    ax,0x8000
  40a888:	je     0x40aacd
  40a88e:	mov    rbp,QWORD PTR [rbp+0x28]
  40a892:	mov    rsi,QWORD PTR [rip+0x19347]        # 0x423be0
  40a899:	call   QWORD PTR [rip+0x2e6dd]        # 0x438f7c
  40a89f:	lea    rcx,[rax+0x60]
  40a8a3:	mov    r9,rbx
  40a8a6:	mov    r8,rbp
  40a8a9:	mov    rdx,rsi
  40a8ac:	call   0x407ea0
  40a8b1:	xor    eax,eax
  40a8b3:	test   edi,edi
  40a8b5:	jne    0x40aa50
  40a8bb:	add    rsp,0x188
  40a8c2:	pop    rbx
  40a8c3:	pop    rsi
  40a8c4:	pop    rdi
  40a8c5:	pop    rbp
  40a8c6:	pop    r12
  40a8c8:	pop    r13
  40a8ca:	pop    r14
  40a8cc:	pop    r15
  40a8ce:	ret    
  40a8cf:	nop
  40a8d0:	xor    edi,edi
  40a8d2:	jmp    0x40a855
  40a8d4:	lea    r13,[rbx+0x1]
  40a8d8:	mov    edx,0x5c
  40a8dd:	mov    rcx,r13
  40a8e0:	call   0x421dc0
  40a8e5:	test   rax,rax
  40a8e8:	mov    r14,rax
  40a8eb:	je     0x40ab78
  40a8f1:	sub    rax,r13
  40a8f4:	cmp    rax,0x7f
  40a8f8:	jg     0x40aa58
  40a8fe:	lea    r8,[rsp+0x70]
  40a903:	cmp    rax,0x8
  40a907:	mov    rsi,r13
  40a90a:	mov    rdi,r8
  40a90d:	jb     0x40a919
  40a90f:	mov    rcx,rax
  40a912:	shr    rcx,0x3
  40a916:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a919:	xor    edx,edx
  40a91b:	test   al,0x4
  40a91d:	je     0x40a928
  40a91f:	mov    edx,DWORD PTR [rsi]
  40a921:	mov    DWORD PTR [rdi],edx
  40a923:	mov    edx,0x4
  40a928:	test   al,0x2
  40a92a:	je     0x40a938
  40a92c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  40a930:	mov    WORD PTR [rdi+rdx*1],cx
  40a934:	add    rdx,0x2
  40a938:	test   al,0x1
  40a93a:	je     0x40a943
  40a93c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  40a940:	mov    BYTE PTR [rdi+rdx*1],cl
  40a943:	mov    rcx,r8
  40a946:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  40a94b:	call   0x421e30
  40a950:	test   rax,rax
  40a953:	mov    rdi,rax
  40a956:	je     0x40ab8c
  40a95c:	mov    rcx,rax
  40a95f:	call   0x421d98
  40a964:	mov    rcx,r14
  40a967:	mov    rsi,rax
  40a96a:	call   0x421d98
  40a96f:	lea    rcx,[rsi+rax*1+0x2]
  40a974:	mov    r13,rax
  40a977:	call   0x409ce0
  40a97c:	mov    rbx,rax
  40a97f:	mov    r8,rsi
  40a982:	mov    rdx,rdi
  40a985:	mov    rcx,rax
  40a988:	add    rsi,rbx
  40a98b:	mov    edi,0x1
  40a990:	call   0x421e08
  40a995:	lea    rcx,[rsi+0x1]
  40a999:	lea    r8,[r13+0x1]
  40a99d:	mov    BYTE PTR [rsi],0x2f
  40a9a0:	mov    rdx,r14
  40a9a3:	call   0x421e08
  40a9a8:	jmp    0x40a855
  40a9ad:	nop    DWORD PTR [rax]
  40a9b0:	mov    rcx,rbx
  40a9b3:	call   0x421d98
  40a9b8:	mov    rcx,QWORD PTR [rbp+0x38]
  40a9bc:	mov    r14,rax
  40a9bf:	call   0x421d98
  40a9c4:	lea    r14,[r14+rax*1+0x2]
  40a9c9:	mov    rcx,r14
  40a9cc:	call   0x409ce0
  40a9d1:	mov    r15,rax
  40a9d4:	mov    rax,QWORD PTR [rbp+0x38]
  40a9d8:	lea    r8,[rip+0x1d93d]        # 0x42831c
  40a9df:	mov    r9,rbx
  40a9e2:	mov    rdx,r14
  40a9e5:	mov    rcx,r15
  40a9e8:	mov    QWORD PTR [rsp+0x20],rax
  40a9ed:	call   0x408290
  40a9f2:	cdqe   
  40a9f4:	cmp    r14,rax
  40a9f7:	jbe    0x40ac3d
  40a9fd:	test   edi,edi
  40a9ff:	jne    0x40ab46
  40aa05:	mov    rdx,r13
  40aa08:	mov    rcx,r15
  40aa0b:	call   rsi
  40aa0d:	test   eax,eax
  40aa0f:	jne    0x40ab53
  40aa15:	movzx  eax,WORD PTR [rsp+0x36]
  40aa1a:	and    ax,0xf000
  40aa1e:	cmp    ax,0x8000
  40aa22:	je     0x40ac30
  40aa28:	mov    rbx,QWORD PTR [rip+0x191b1]        # 0x423be0
  40aa2f:	mov    rsi,QWORD PTR [rbp+0x28]
  40aa33:	call   QWORD PTR [rip+0x2e543]        # 0x438f7c
  40aa39:	lea    rcx,[rax+0x60]
  40aa3d:	mov    r9,r15
  40aa40:	mov    rdx,rbx
  40aa43:	mov    r8,rsi
  40aa46:	mov    rbx,r15
  40aa49:	call   0x407ea0
  40aa4e:	xchg   ax,ax
  40aa50:	mov    rcx,rbx
  40aa53:	call   0x421e50
  40aa58:	xor    eax,eax
  40aa5a:	jmp    0x40a8bb
  40aa5f:	nop
  40aa60:	mov    r15,QWORD PTR [rip+0x2e565]        # 0x438fcc
  40aa67:	call   r15
  40aa6a:	cmp    DWORD PTR [rax],0x2
  40aa6d:	jne    0x40aae1
  40aa6f:	mov    edx,0x5c
  40aa74:	mov    rcx,rbx
  40aa77:	call   0x421d78
  40aa7c:	test   rax,rax
  40aa7f:	je     0x40aac3
  40aa81:	sub    rax,rbx
  40aa84:	cmp    rax,0x103
  40aa8a:	mov    r14,rax
  40aa8d:	ja     0x40aae1
  40aa8f:	lea    r9,[rsp+0x70]
  40aa94:	mov    r8,rax
  40aa97:	mov    rdx,rbx
  40aa9a:	mov    rcx,r9
  40aa9d:	call   0x421e08
  40aaa2:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  40aaa8:	mov    rdx,r13
  40aaab:	mov    rcx,rax
  40aaae:	call   rsi
  40aab0:	test   eax,eax
  40aab2:	jne    0x40aae1
  40aab4:	movzx  eax,WORD PTR [rsp+0x36]
  40aab9:	and    ax,0xf000
  40aabd:	cmp    ax,0x4000
  40aac1:	jne    0x40aae1
  40aac3:	mov    edx,0xffff8000
  40aac8:	mov    WORD PTR [rsp+0x36],dx
  40aacd:	mov    rcx,rbx
  40aad0:	call   0x421d10
  40aad5:	mov    DWORD PTR [r12],edi
  40aad9:	mov    rax,rbx
  40aadc:	jmp    0x40a8bb
  40aae1:	mov    r12,QWORD PTR [rbp+0x28]
  40aae5:	mov    rbp,QWORD PTR [rip+0x190f4]        # 0x423be0
  40aaec:	mov    rsi,QWORD PTR [rip+0x2e489]        # 0x438f7c
  40aaf3:	call   rsi
  40aaf5:	lea    rcx,[rax+0x60]
  40aaf9:	mov    r8,r12
  40aafc:	mov    rdx,rbp
  40aaff:	call   0x407ea0
  40ab04:	call   r15
  40ab07:	mov    ecx,DWORD PTR [rax]
  40ab09:	call   0x421da8
  40ab0e:	mov    r13,rax
  40ab11:	call   r15
  40ab14:	mov    rbp,QWORD PTR [rip+0x19045]        # 0x423b60
  40ab1b:	mov    r12d,DWORD PTR [rax]
  40ab1e:	call   rsi
  40ab20:	lea    rcx,[rax+0x60]
  40ab24:	mov    QWORD PTR [rsp+0x20],rbx
  40ab29:	mov    r9,r13
  40ab2c:	mov    r8d,r12d
  40ab2f:	mov    rdx,rbp
  40ab32:	call   0x407ea0
  40ab37:	test   edi,edi
  40ab39:	jne    0x40aa50
  40ab3f:	xor    eax,eax
  40ab41:	jmp    0x40a8bb
  40ab46:	mov    rcx,rbx
  40ab49:	call   0x421e50
  40ab4e:	jmp    0x40aa05
  40ab53:	mov    rbx,QWORD PTR [rip+0x2e472]        # 0x438fcc
  40ab5a:	call   rbx
  40ab5c:	cmp    DWORD PTR [rax],0x2
  40ab5f:	jne    0x40abce
  40ab61:	mov    eax,0xffff8000
  40ab66:	mov    rbx,r15
  40ab69:	mov    edi,0x1
  40ab6e:	mov    WORD PTR [rsp+0x36],ax
  40ab73:	jmp    0x40aacd
  40ab78:	mov    rcx,r13
  40ab7b:	call   0x421e30
  40ab80:	test   rax,rax
  40ab83:	mov    rbx,rax
  40ab86:	jne    0x40a855
  40ab8c:	mov    rsi,QWORD PTR [rip+0x1904d]        # 0x423be0
  40ab93:	mov    rdi,QWORD PTR [rbp+0x28]
  40ab97:	mov    rbx,QWORD PTR [rip+0x2e3de]        # 0x438f7c
  40ab9e:	call   rbx
  40aba0:	lea    rcx,[rax+0x60]
  40aba4:	mov    rdx,rsi
  40aba7:	mov    r8,rdi
  40abaa:	call   0x407ea0
  40abaf:	mov    rsi,QWORD PTR [rip+0x18fca]        # 0x423b80
  40abb6:	call   rbx
  40abb8:	lea    rcx,[rax+0x60]
  40abbc:	mov    r8,r13
  40abbf:	mov    rdx,rsi
  40abc2:	call   0x407ea0
  40abc7:	xor    eax,eax
  40abc9:	jmp    0x40a8bb
  40abce:	mov    rbp,QWORD PTR [rbp+0x28]
  40abd2:	mov    rdi,QWORD PTR [rip+0x19007]        # 0x423be0
  40abd9:	mov    rsi,QWORD PTR [rip+0x2e39c]        # 0x438f7c
  40abe0:	call   rsi
  40abe2:	lea    rcx,[rax+0x60]
  40abe6:	mov    r8,rbp
  40abe9:	mov    rdx,rdi
  40abec:	call   0x407ea0
  40abf1:	call   rbx
  40abf3:	mov    ecx,DWORD PTR [rax]
  40abf5:	call   0x421da8
  40abfa:	mov    rbp,rax
  40abfd:	call   rbx
  40abff:	mov    rbx,QWORD PTR [rip+0x18f5a]        # 0x423b60
  40ac06:	mov    edi,DWORD PTR [rax]
  40ac08:	call   rsi
  40ac0a:	lea    rcx,[rax+0x60]
  40ac0e:	mov    r9,rbp
  40ac11:	mov    QWORD PTR [rsp+0x20],r15
  40ac16:	mov    r8d,edi
  40ac19:	mov    rdx,rbx
  40ac1c:	call   0x407ea0
  40ac21:	mov    rcx,r15
  40ac24:	call   0x421e50
  40ac29:	xor    eax,eax
  40ac2b:	jmp    0x40a8bb
  40ac30:	mov    rbx,r15
  40ac33:	mov    edi,0x1
  40ac38:	jmp    0x40aacd
  40ac3d:	mov    ecx,0x1
  40ac42:	call   0x4082e0
  40ac47:	nop
  40ac48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac50:	push   r15
  40ac52:	push   r14
  40ac54:	push   r13
  40ac56:	push   r12
  40ac58:	push   rbp
  40ac59:	push   rdi
  40ac5a:	push   rsi
  40ac5b:	push   rbx
  40ac5c:	sub    rsp,0x148
  40ac63:	test   rcx,rcx
  40ac66:	mov    rsi,rcx
  40ac69:	mov    rbx,rdx
  40ac6c:	je     0x40ad19
  40ac72:	lea    r12,[rsp+0x30]
  40ac77:	xor    r13d,r13d
  40ac7a:	mov    rcx,rsi
  40ac7d:	call   0x421d98
  40ac82:	mov    edx,r13d
  40ac85:	cmp    rdx,rax
  40ac88:	jae    0x40ad19
  40ac8e:	movsxd rax,r13d
  40ac91:	add    rax,rsi
  40ac94:	movzx  edx,BYTE PTR [rax]
  40ac97:	cmp    dl,0x3a
  40ac9a:	jne    0x40acac
  40ac9c:	nop    DWORD PTR [rax+0x0]
  40aca0:	add    rax,0x1
  40aca4:	movzx  edx,BYTE PTR [rax]
  40aca7:	cmp    dl,0x3a
  40acaa:	je     0x40aca0
  40acac:	mov    rcx,r12
  40acaf:	add    rax,0x1
  40acb3:	test   dl,dl
  40acb5:	mov    BYTE PTR [rcx],dl
  40acb7:	je     0x40acc1
  40acb9:	cmp    dl,0x3a
  40acbc:	jne    0x40ad21
  40acbe:	mov    BYTE PTR [rcx],0x0
  40acc1:	mov    r13d,eax
  40acc4:	sub    r13d,esi
  40acc7:	cmp    BYTE PTR [rsp+0x30],0x0
  40accc:	je     0x40ad19
  40acce:	mov    rcx,r12
  40acd1:	call   0x41c8c0
  40acd6:	test   rax,rax
  40acd9:	mov    rdi,rax
  40acdc:	jne    0x40acf0
  40acde:	jmp    0x40ac7a
  40ace0:	lea    rcx,[rax+0x8]
  40ace4:	mov    rdx,rbx
  40ace7:	call   0x421db8
  40acec:	test   eax,eax
  40acee:	je     0x40ad40
  40acf0:	mov    rcx,rdi
  40acf3:	call   0x41caa0
  40acf8:	test   rax,rax
  40acfb:	jne    0x40ace0
  40acfd:	mov    rcx,rdi
  40ad00:	call   0x41ccc0
  40ad05:	mov    rcx,rsi
  40ad08:	call   0x421d98
  40ad0d:	mov    edx,r13d
  40ad10:	cmp    rdx,rax
  40ad13:	jb     0x40ac8e
  40ad19:	xor    r14d,r14d
  40ad1c:	jmp    0x40af1e
  40ad21:	add    rcx,0x1
  40ad25:	mov    rdx,rcx
  40ad28:	sub    rdx,r12
  40ad2b:	cmp    edx,0x103
  40ad31:	ja     0x40acc1
  40ad33:	movzx  edx,BYTE PTR [rax]
  40ad36:	jmp    0x40acaf
  40ad3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad40:	cmp    BYTE PTR [rbx],0x2f
  40ad43:	je     0x40af5b
  40ad49:	cmp    BYTE PTR [rsp+0x30],0x0
  40ad4e:	jne    0x40af6b
  40ad54:	mov    rcx,rbx
  40ad57:	call   0x421d98
  40ad5c:	lea    rcx,[rax+0x3]
  40ad60:	call   0x421e18
  40ad65:	lea    rcx,[rax+0x2]
  40ad69:	mov    rbp,rax
  40ad6c:	mov    BYTE PTR [rax],0x2e
  40ad6f:	mov    BYTE PTR [rax+0x1],0x2f
  40ad73:	mov    BYTE PTR [rax+0x2],0x0
  40ad77:	mov    rdx,rbx
  40ad7a:	call   0x421db0
  40ad7f:	mov    rcx,rbp
  40ad82:	mov    edx,0x5
  40ad87:	call   0x421ce0
  40ad8c:	test   eax,eax
  40ad8e:	mov    rcx,rbp
  40ad91:	js     0x40af41
  40ad97:	call   0x421d08
  40ad9c:	cmp    BYTE PTR [rbp+0x0],0x2f
  40ada0:	mov    r14,rax
  40ada3:	sete   BYTE PTR [rsp+0x2f]
  40ada8:	movzx  eax,BYTE PTR [rsp+0x2f]
  40adad:	xor    r15d,r15d
  40adb0:	xor    r13d,r13d
  40adb3:	add    eax,0x2e
  40adb6:	mov    BYTE PTR [rsp+0x2f],al
  40adba:	movzx  eax,BYTE PTR [r14]
  40adbe:	xchg   ax,ax
  40adc0:	test   al,al
  40adc2:	mov    rbx,r13
  40adc5:	je     0x40aef7
  40adcb:	cmp    al,0x2f
  40adcd:	je     0x40af35
  40add3:	add    rbx,0x1
  40add7:	mov    esi,r15d
  40adda:	jmp    0x40ade7
  40addc:	nop    DWORD PTR [rax+0x0]
  40ade0:	test   dl,dl
  40ade2:	je     0x40adf8
  40ade4:	mov    rbx,rcx
  40ade7:	movzx  edx,BYTE PTR [r14+rbx*1]
  40adec:	add    esi,0x1
  40adef:	lea    rcx,[rbx+0x1]
  40adf3:	cmp    dl,0x2f
  40adf6:	jne    0x40ade0
  40adf8:	test   dl,dl
  40adfa:	lea    r15d,[rsi+0x1]
  40adfe:	je     0x40aef7
  40ae04:	movsxd r13,r15d
  40ae07:	lea    r12,[r14+r13*1]
  40ae0b:	movzx  eax,BYTE PTR [r12]
  40ae10:	cmp    al,0x2f
  40ae12:	jne    0x40ae46
  40ae14:	lea    r8,[r14+r13*1+0x1]
  40ae19:	mov    r9d,r15d
  40ae1c:	nop    DWORD PTR [rax+0x0]
  40ae20:	mov    rdx,r8
  40ae23:	add    r8,0x1
  40ae27:	add    r9d,0x1
  40ae2b:	cmp    BYTE PTR [r8-0x1],0x2f
  40ae30:	je     0x40ae20
  40ae32:	cmp    r15d,r9d
  40ae35:	je     0x40ae46
  40ae37:	lea    rcx,[r14+rbx*1+0x1]
  40ae3c:	call   0x421db0
  40ae41:	movzx  eax,BYTE PTR [r12]
  40ae46:	test   esi,esi
  40ae48:	je     0x40ae5e
  40ae4a:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  40ae50:	je     0x40adc0
  40ae56:	test   al,al
  40ae58:	je     0x40afe9
  40ae5e:	cmp    al,0x2e
  40ae60:	jne    0x40adc0
  40ae66:	lea    rdx,[r14+r13*1+0x1]
  40ae6b:	movzx  ecx,BYTE PTR [rdx]
  40ae6e:	test   cl,cl
  40ae70:	je     0x40afe9
  40ae76:	cmp    cl,0x2f
  40ae79:	je     0x40af53
  40ae7f:	cmp    cl,0x2e
  40ae82:	jne    0x40adc0
  40ae88:	lea    rdx,[r14+r13*1+0x2]
  40ae8d:	movzx  ecx,BYTE PTR [rdx]
  40ae90:	test   cl,cl
  40ae92:	je     0x40ae9d
  40ae94:	cmp    cl,0x2f
  40ae97:	jne    0x40adc0
  40ae9d:	movsxd rcx,esi
  40aea0:	sub    rcx,0x1
  40aea4:	jmp    0x40aebf
  40aea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aeb0:	lea    rax,[rcx-0x1]
  40aeb4:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  40aeba:	je     0x40aece
  40aebc:	mov    rcx,rax
  40aebf:	sub    esi,0x1
  40aec2:	cmp    esi,0xffffffff
  40aec5:	jne    0x40aeb0
  40aec7:	mov    rcx,0xffffffffffffffff
  40aece:	lea    rcx,[r14+rcx*1+0x1]
  40aed3:	call   0x421db0
  40aed8:	mov    r15d,0x0
  40aede:	test   esi,esi
  40aee0:	cmovns r15d,esi
  40aee4:	movsxd r13,r15d
  40aee7:	movzx  eax,BYTE PTR [r14+r13*1]
  40aeec:	mov    rbx,r13
  40aeef:	test   al,al
  40aef1:	jne    0x40adcb
  40aef7:	cmp    BYTE PTR [r14],0x0
  40aefb:	jne    0x40affe
  40af01:	movzx  eax,BYTE PTR [rsp+0x2f]
  40af06:	mov    rcx,rbp
  40af09:	mov    BYTE PTR [r14+0x1],0x0
  40af0e:	mov    BYTE PTR [r14],al
  40af11:	call   0x421e50
  40af16:	mov    rcx,rdi
  40af19:	call   0x41ccc0
  40af1e:	mov    rax,r14
  40af21:	add    rsp,0x148
  40af28:	pop    rbx
  40af29:	pop    rsi
  40af2a:	pop    rdi
  40af2b:	pop    rbp
  40af2c:	pop    r12
  40af2e:	pop    r13
  40af30:	pop    r14
  40af32:	pop    r15
  40af34:	ret    
  40af35:	mov    esi,r15d
  40af38:	add    r15d,0x1
  40af3c:	jmp    0x40ae04
  40af41:	call   0x421e50
  40af46:	mov    rcx,rdi
  40af49:	call   0x41ccc0
  40af4e:	jmp    0x40ad05
  40af53:	mov    rcx,r12
  40af56:	jmp    0x40aed3
  40af5b:	mov    rcx,rbx
  40af5e:	call   0x421d08
  40af63:	mov    rbp,rax
  40af66:	jmp    0x40ad7f
  40af6b:	mov    r14,r12
  40af6e:	mov    edx,DWORD PTR [r14]
  40af71:	add    r14,0x4
  40af75:	lea    eax,[rdx-0x1010101]
  40af7b:	not    edx
  40af7d:	and    eax,edx
  40af7f:	and    eax,0x80808080
  40af84:	je     0x40af6e
  40af86:	mov    edx,eax
  40af88:	mov    rcx,rbx
  40af8b:	shr    edx,0x10
  40af8e:	test   eax,0x8080
  40af93:	cmove  eax,edx
  40af96:	lea    rdx,[r14+0x2]
  40af9a:	cmove  r14,rdx
  40af9e:	add    al,al
  40afa0:	sbb    r14,0x3
  40afa4:	sub    r14,r12
  40afa7:	call   0x421d98
  40afac:	lea    rcx,[r14+rax*1+0x2]
  40afb1:	call   0x421e18
  40afb6:	lea    r8,[r14+0x1]
  40afba:	mov    rcx,rax
  40afbd:	mov    rdx,r12
  40afc0:	mov    rbp,rax
  40afc3:	call   0x421e08
  40afc8:	movsxd rcx,r14d
  40afcb:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  40afd0:	je     0x40b013
  40afd2:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  40afd7:	lea    ecx,[r14+0x1]
  40afdb:	movsxd rcx,ecx
  40afde:	add    rcx,rbp
  40afe1:	mov    BYTE PTR [rcx],0x0
  40afe4:	jmp    0x40ad77
  40afe9:	lea    eax,[r15-0x1]
  40afed:	cdqe   
  40afef:	mov    BYTE PTR [r14+rax*1],0x0
  40aff4:	cmp    BYTE PTR [r14],0x0
  40aff8:	je     0x40af01
  40affe:	mov    rcx,rbp
  40b001:	call   0x421e50
  40b006:	mov    rcx,rdi
  40b009:	call   0x41ccc0
  40b00e:	jmp    0x40af1e
  40b013:	add    rcx,rbp
  40b016:	jmp    0x40ad77
  40b01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b020:	push   r12
  40b022:	push   rbp
  40b023:	push   rdi
  40b024:	push   rsi
  40b025:	push   rbx
  40b026:	sub    rsp,0x30
  40b02a:	test   rcx,rcx
  40b02d:	mov    rbx,rcx
  40b030:	mov    rdi,rdx
  40b033:	je     0x40b1b8
  40b039:	mov    r9d,DWORD PTR [rcx+0x10]
  40b03d:	mov    eax,r9d
  40b040:	shr    eax,0x15
  40b043:	and    eax,0x1
  40b046:	test   r9d,0x2000
  40b04d:	mov    BYTE PTR [rip+0x29ba1],al        # 0x434bf4
  40b053:	je     0x40b082
  40b055:	mov    rax,QWORD PTR [rcx+0xa0]
  40b05c:	test   rax,rax
  40b05f:	je     0x40b082
  40b061:	mov    edx,DWORD PTR [rip+0x18999]        # 0x423a00
  40b067:	test   edx,edx
  40b069:	je     0x40b082
  40b06b:	mov    edx,r9d
  40b06e:	and    edx,0x30000
  40b074:	cmp    edx,0x20000
  40b07a:	je     0x40b111
  40b080:	call   rax
  40b082:	mov    esi,DWORD PTR [rbx]
  40b084:	lea    eax,[rsi-0x19000]
  40b08a:	cmp    eax,0x10001
  40b08f:	ja     0x40b129
  40b095:	cmp    QWORD PTR [rbx+0x28],0x0
  40b09a:	je     0x40b0b0
  40b09c:	xor    eax,eax
  40b09e:	add    rsp,0x30
  40b0a2:	pop    rbx
  40b0a3:	pop    rsi
  40b0a4:	pop    rdi
  40b0a5:	pop    rbp
  40b0a6:	pop    r12
  40b0a8:	ret    
  40b0a9:	nop    DWORD PTR [rax+0x0]
  40b0b0:	mov    edx,0x5c
  40b0b5:	mov    rcx,rdi
  40b0b8:	call   0x421d78
  40b0bd:	test   rax,rax
  40b0c0:	je     0x40b123
  40b0c2:	add    rax,0x1
  40b0c6:	mov    QWORD PTR [rbx+0x28],rax
  40b0ca:	lea    rcx,[rip+0x1d251]        # 0x428322
  40b0d1:	call   0x421e30
  40b0d6:	mov    rdx,rdi
  40b0d9:	mov    rcx,rax
  40b0dc:	call   0x40ac50
  40b0e1:	test   rax,rax
  40b0e4:	lea    rdx,[rip+0x1e5d5]        # 0x4296c0
  40b0eb:	lea    rcx,[rip+0x184ce]        # 0x4235c0
  40b0f2:	cmove  rax,rdi
  40b0f6:	mov    QWORD PTR [rbx+0x20],rax
  40b0fa:	mov    eax,0x2d
  40b0ff:	nop
  40b100:	add    rdx,0x1
  40b104:	mov    BYTE PTR [rcx+rax*1],0x2d
  40b108:	movzx  eax,BYTE PTR [rdx]
  40b10b:	test   al,al
  40b10d:	jne    0x40b100
  40b10f:	jmp    0x40b09c
  40b111:	or     r9d,0x10000
  40b118:	mov    DWORD PTR [rcx+0x10],r9d
  40b11c:	call   rax
  40b11e:	jmp    0x40b082
  40b123:	mov    QWORD PTR [rbx+0x28],rdi
  40b127:	jmp    0x40b0ca
  40b129:	mov    r12,QWORD PTR [rip+0x18910]        # 0x423a40
  40b130:	mov    rbp,QWORD PTR [rip+0x2de45]        # 0x438f7c
  40b137:	call   rbp
  40b139:	lea    rcx,[rax+0x60]
  40b13d:	mov    eax,esi
  40b13f:	mov    r8,rdi
  40b142:	and    eax,0x7f
  40b145:	mov    rdx,r12
  40b148:	mov    DWORD PTR [rsp+0x28],eax
  40b14c:	mov    eax,esi
  40b14e:	sar    esi,0xc
  40b151:	sar    eax,0x7
  40b154:	mov    r9d,esi
  40b157:	and    eax,0x1f
  40b15a:	mov    DWORD PTR [rsp+0x20],eax
  40b15e:	call   0x407ea0
  40b163:	cmp    DWORD PTR [rbx],0x29001
  40b169:	jle    0x40b1a4
  40b16b:	call   rbp
  40b16d:	mov    rcx,QWORD PTR [rip+0x188c4]        # 0x423a38
  40b174:	lea    rdx,[rax+0x60]
  40b178:	call   0x421e60
  40b17d:	call   rbp
  40b17f:	lea    rcx,[rip+0x21037]        # 0x42c1bd
  40b186:	lea    r9,[rax+0x60]
  40b18a:	mov    r8d,0x1
  40b190:	mov    edx,0x8
  40b195:	call   0x421e38
  40b19a:	mov    eax,0xffffffff
  40b19f:	jmp    0x40b09e
  40b1a4:	call   rbp
  40b1a6:	mov    rcx,QWORD PTR [rip+0x188a3]        # 0x423a50
  40b1ad:	lea    rdx,[rax+0x60]
  40b1b1:	call   0x421e60
  40b1b6:	jmp    0x40b17d
  40b1b8:	call   QWORD PTR [rip+0x2ddbe]        # 0x438f7c
  40b1be:	mov    rcx,QWORD PTR [rip+0x1886b]        # 0x423a30
  40b1c5:	lea    rdx,[rax+0x60]
  40b1c9:	call   0x421e60
  40b1ce:	mov    eax,0xffffffff
  40b1d3:	jmp    0x40b09e
  40b1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1e0:	push   r15
  40b1e2:	push   r14
  40b1e4:	push   r13
  40b1e6:	push   r12
  40b1e8:	push   rbp
  40b1e9:	push   rdi
  40b1ea:	push   rsi
  40b1eb:	push   rbx
  40b1ec:	sub    rsp,0x98
  40b1f3:	test   BYTE PTR [rcx+0x12],0x4
  40b1f7:	mov    rbx,rcx
  40b1fa:	mov    rdi,rdx
  40b1fd:	mov    rbp,r8
  40b200:	je     0x40b20d
  40b202:	cmp    WORD PTR [rdx+0x6],0x57
  40b207:	je     0x40b61e
  40b20d:	cmp    QWORD PTR [rdi+0x28],0x0
  40b212:	je     0x40b500
  40b218:	mov    eax,DWORD PTR [rip+0x299d2]        # 0x434bf0
  40b21e:	lea    rsi,[rip+0x1e49b]        # 0x4296c0
  40b225:	mov    rdx,QWORD PTR [rip+0x2999c]        # 0x434bc8
  40b22c:	lea    rcx,[rsi+rax*1+0xcb]
  40b234:	call   0x421e60
  40b239:	mov    rbp,QWORD PTR [rdi+0x28]
  40b23d:	test   rbp,rbp
  40b240:	je     0x40b2d2
  40b246:	cmp    DWORD PTR [rbp+0x4],0x8000
  40b24d:	je     0x40b510
  40b253:	mov    rdx,QWORD PTR [rip+0x2996e]        # 0x434bc8
  40b25a:	mov    rcx,QWORD PTR [rip+0x18ac7]        # 0x423d28
  40b261:	call   0x421e60
  40b266:	movsxd rax,DWORD PTR [rbp+0x0]
  40b26a:	nop    WORD PTR [rax+rax*1+0x0]
  40b270:	lea    rdx,[rax+rax*2]
  40b274:	mov    r9,QWORD PTR [rbx+0x78]
  40b278:	mov    rcx,QWORD PTR [rip+0x29949]        # 0x434bc8
  40b27f:	add    rbp,0x4
  40b283:	lea    rax,[rax+rdx*4]
  40b287:	mov    edx,DWORD PTR [rip+0x29963]        # 0x434bf0
  40b28d:	lea    rax,[r9+rax*8]
  40b291:	mov    r8,QWORD PTR [rax+0x50]
  40b295:	lea    rdx,[rsi+rdx*1+0xe5]
  40b29d:	call   0x407ea0
  40b2a2:	movsxd rax,DWORD PTR [rbp+0x0]
  40b2a6:	cmp    eax,0x8000
  40b2ab:	jne    0x40b270
  40b2ad:	cmp    QWORD PTR [rdi+0x30],0x0
  40b2b2:	je     0x40b33d
  40b2b8:	mov    eax,DWORD PTR [rip+0x29932]        # 0x434bf0
  40b2be:	mov    rdx,QWORD PTR [rip+0x29903]        # 0x434bc8
  40b2c5:	lea    rcx,[rsi+rax*1+0xd9]
  40b2cd:	call   0x421e60
  40b2d2:	mov    rbp,QWORD PTR [rdi+0x30]
  40b2d6:	test   rbp,rbp
  40b2d9:	je     0x40b33d
  40b2db:	cmp    DWORD PTR [rbp+0x4],0x8000
  40b2e2:	je     0x40b5a2
  40b2e8:	mov    rdx,QWORD PTR [rip+0x298d9]        # 0x434bc8
  40b2ef:	mov    rcx,QWORD PTR [rip+0x189d2]        # 0x423cc8
  40b2f6:	call   0x421e60
  40b2fb:	movsxd rax,DWORD PTR [rbp+0x0]
  40b2ff:	nop
  40b300:	lea    rdx,[rax+rax*2]
  40b304:	mov    rcx,QWORD PTR [rbx+0x78]
  40b308:	add    rbp,0x4
  40b30c:	lea    rax,[rax+rdx*4]
  40b310:	mov    edx,DWORD PTR [rip+0x298da]        # 0x434bf0
  40b316:	lea    rax,[rcx+rax*8]
  40b31a:	mov    rcx,QWORD PTR [rip+0x298a7]        # 0x434bc8
  40b321:	mov    r8,QWORD PTR [rax+0x50]
  40b325:	lea    rdx,[rsi+rdx*1+0xe5]
  40b32d:	call   0x407ea0
  40b332:	movsxd rax,DWORD PTR [rbp+0x0]
  40b336:	cmp    eax,0x8000
  40b33b:	jne    0x40b300
  40b33d:	mov    r8,QWORD PTR [rdi+0x58]
  40b341:	test   r8,r8
  40b344:	je     0x40b35f
  40b346:	mov    edx,DWORD PTR [rip+0x298a4]        # 0x434bf0
  40b34c:	mov    rcx,QWORD PTR [rip+0x29875]        # 0x434bc8
  40b353:	add    rdx,QWORD PTR [rip+0x188a6]        # 0x423c00
  40b35a:	call   0x407ea0
  40b35f:	mov    edx,DWORD PTR [rdi+0x10]
  40b362:	mov    eax,edx
  40b364:	and    eax,0xf000
  40b369:	shr    eax,0xc
  40b36c:	cmp    eax,0x5
  40b36f:	je     0x40b4d0
  40b375:	cmp    eax,0x7
  40b378:	je     0x40b450
  40b37e:	and    dh,0x8
  40b381:	jne    0x40b467
  40b387:	movzx  eax,WORD PTR [rdi+0x8]
  40b38b:	cmp    ax,0x8000
  40b38f:	je     0x40b39b
  40b391:	cmp    ax,WORD PTR [rdi+0x4]
  40b395:	jne    0x40b485
  40b39b:	mov    eax,DWORD PTR [rdi+0x10]
  40b39e:	test   ah,0x1
  40b3a1:	je     0x40b3bd
  40b3a3:	cmp    QWORD PTR [rbx+0x58],0x0
  40b3a8:	je     0x40b60e
  40b3ae:	movzx  edx,WORD PTR [rdi]
  40b3b1:	cmp    edx,DWORD PTR [rbx+0xb4]
  40b3b7:	jl     0x40b581
  40b3bd:	and    eax,0xf000
  40b3c2:	cmp    eax,0x4000
  40b3c7:	je     0x40b5f0
  40b3cd:	movzx  r8d,WORD PTR [rdi+0xa]
  40b3d2:	cmp    r8w,0x1
  40b3d7:	ja     0x40b540
  40b3dd:	movzx  r8d,WORD PTR [rdi+0xc]
  40b3e2:	cmp    r8w,0x1
  40b3e7:	je     0x40b413
  40b3e9:	jb     0x40b5d2
  40b3ef:	cmp    r8w,0xffff
  40b3f4:	jne    0x40b563
  40b3fa:	mov    ecx,DWORD PTR [rip+0x297f0]        # 0x434bf0
  40b400:	mov    rdx,QWORD PTR [rip+0x297c1]        # 0x434bc8
  40b407:	add    rcx,QWORD PTR [rip+0x18862]        # 0x423c70
  40b40e:	call   0x421e60
  40b413:	test   BYTE PTR [rbx+0x10],0x3
  40b417:	jne    0x40b4b3
  40b41d:	movzx  eax,WORD PTR [rdi]
  40b420:	cmp    WORD PTR [rbx+0xae],ax
  40b427:	jne    0x40b4b3
  40b42d:	mov    ecx,DWORD PTR [rip+0x297bd]        # 0x434bf0
  40b433:	mov    rdx,QWORD PTR [rip+0x2978e]        # 0x434bc8
  40b43a:	add    rcx,QWORD PTR [rip+0x187b7]        # 0x423bf8
  40b441:	call   0x421e60
  40b446:	jmp    0x40b4b3
  40b448:	nop    DWORD PTR [rax+rax*1+0x0]
  40b450:	mov    rdx,rdi
  40b453:	mov    ecx,0x1
  40b458:	call   QWORD PTR [rdi+0x38]
  40b45b:	mov    edx,DWORD PTR [rdi+0x10]
  40b45e:	and    dh,0x8
  40b461:	je     0x40b387
  40b467:	mov    ecx,DWORD PTR [rip+0x29783]        # 0x434bf0
  40b46d:	mov    rdx,QWORD PTR [rip+0x29754]        # 0x434bc8
  40b474:	add    rcx,QWORD PTR [rip+0x1879d]        # 0x423c18
  40b47b:	call   0x421e60
  40b480:	jmp    0x40b387
  40b485:	lea    rdx,[rax+rax*2]
  40b489:	mov    rcx,QWORD PTR [rip+0x29738]        # 0x434bc8
  40b490:	lea    rax,[rax+rdx*4]
  40b494:	mov    rdx,QWORD PTR [rbx+0x78]
  40b498:	lea    rax,[rdx+rax*8]
  40b49c:	mov    edx,DWORD PTR [rip+0x2974e]        # 0x434bf0
  40b4a2:	add    rdx,QWORD PTR [rip+0x1873f]        # 0x423be8
  40b4a9:	mov    r8,QWORD PTR [rax+0x50]
  40b4ad:	call   0x407ea0
  40b4b2:	nop
  40b4b3:	add    rsp,0x98
  40b4ba:	pop    rbx
  40b4bb:	pop    rsi
  40b4bc:	pop    rdi
  40b4bd:	pop    rbp
  40b4be:	pop    r12
  40b4c0:	pop    r13
  40b4c2:	pop    r14
  40b4c4:	pop    r15
  40b4c6:	ret    
  40b4c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b4d0:	mov    rax,QWORD PTR [rdi+0x38]
  40b4d4:	test   rax,rax
  40b4d7:	je     0x40b37e
  40b4dd:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x407ed0
  40b4e4:	cmp    rax,rcx
  40b4e7:	je     0x40b37e
  40b4ed:	mov    rdx,rdi
  40b4f0:	mov    ecx,0x1
  40b4f5:	call   rax
  40b4f7:	mov    edx,DWORD PTR [rdi+0x10]
  40b4fa:	jmp    0x40b37e
  40b4ff:	nop
  40b500:	cmp    QWORD PTR [rdi+0x30],0x0
  40b505:	jne    0x40b218
  40b50b:	jmp    0x40b33d
  40b510:	movsxd rax,DWORD PTR [rbp+0x0]
  40b514:	mov    r10,QWORD PTR [rbx+0x78]
  40b518:	mov    rcx,QWORD PTR [rip+0x296a9]        # 0x434bc8
  40b51f:	lea    rdx,[rax+rax*2]
  40b523:	lea    rax,[rax+rdx*4]
  40b527:	mov    rdx,QWORD PTR [rip+0x187f2]        # 0x423d20
  40b52e:	lea    rax,[r10+rax*8]
  40b532:	mov    r8,QWORD PTR [rax+0x50]
  40b536:	call   0x407ea0
  40b53b:	jmp    0x40b2ad
  40b540:	mov    edx,DWORD PTR [rip+0x296aa]        # 0x434bf0
  40b546:	movzx  r9d,WORD PTR [rdi+0xc]
  40b54b:	add    rdx,QWORD PTR [rip+0x1870e]        # 0x423c60
  40b552:	mov    rcx,QWORD PTR [rip+0x2966f]        # 0x434bc8
  40b559:	call   0x407ea0
  40b55e:	jmp    0x40b413
  40b563:	mov    edx,DWORD PTR [rip+0x29687]        # 0x434bf0
  40b569:	mov    rcx,QWORD PTR [rip+0x29658]        # 0x434bc8
  40b570:	add    rdx,QWORD PTR [rip+0x187d1]        # 0x423d48
  40b577:	call   0x407ea0
  40b57c:	jmp    0x40b413
  40b581:	mov    ecx,DWORD PTR [rip+0x29669]        # 0x434bf0
  40b587:	mov    rdx,QWORD PTR [rip+0x2963a]        # 0x434bc8
  40b58e:	add    rcx,QWORD PTR [rip+0x186e3]        # 0x423c78
  40b595:	call   0x421e60
  40b59a:	mov    eax,DWORD PTR [rdi+0x10]
  40b59d:	jmp    0x40b3bd
  40b5a2:	movsxd rax,DWORD PTR [rbp+0x0]
  40b5a6:	mov    r8,QWORD PTR [rbx+0x78]
  40b5aa:	mov    rcx,QWORD PTR [rip+0x29617]        # 0x434bc8
  40b5b1:	lea    rdx,[rax+rax*2]
  40b5b5:	lea    rax,[rax+rdx*4]
  40b5b9:	mov    rdx,QWORD PTR [rip+0x18710]        # 0x423cd0
  40b5c0:	lea    rax,[r8+rax*8]
  40b5c4:	mov    r8,QWORD PTR [rax+0x50]
  40b5c8:	call   0x407ea0
  40b5cd:	jmp    0x40b33d
  40b5d2:	mov    ecx,DWORD PTR [rip+0x29618]        # 0x434bf0
  40b5d8:	mov    rdx,QWORD PTR [rip+0x295e9]        # 0x434bc8
  40b5df:	add    rcx,QWORD PTR [rip+0x186d2]        # 0x423cb8
  40b5e6:	call   0x421e60
  40b5eb:	jmp    0x40b413
  40b5f0:	mov    ecx,DWORD PTR [rip+0x295fa]        # 0x434bf0
  40b5f6:	mov    rdx,QWORD PTR [rip+0x295cb]        # 0x434bc8
  40b5fd:	add    rcx,QWORD PTR [rip+0x18654]        # 0x423c58
  40b604:	call   0x421e60
  40b609:	jmp    0x40b413
  40b60e:	cmp    QWORD PTR [rbx+0x30],0x0
  40b613:	jne    0x40b3ae
  40b619:	jmp    0x40b3bd
  40b61e:	mov    eax,DWORD PTR [rip+0x295cc]        # 0x434bf0
  40b624:	lea    rdx,[rip+0x1e095]        # 0x4296c0
  40b62b:	mov    edi,DWORD PTR [rcx+0xb4]
  40b631:	mov    rsi,QWORD PTR [rcx+0x78]
  40b635:	mov    r8,QWORD PTR [rip+0x18724]        # 0x423d60
  40b63c:	xor    r12d,r12d
  40b63f:	mov    rcx,QWORD PTR [rip+0x29582]        # 0x434bc8
  40b646:	lea    rdx,[rdx+rax*1+0xe5]
  40b64e:	call   0x407ea0
  40b653:	test   DWORD PTR [rsi+0x10],0x6280000
  40b65a:	jne    0x40b682
  40b65c:	movzx  eax,BYTE PTR [rsi+0x2]
  40b660:	cmp    al,0x7f
  40b662:	ja     0x40b672
  40b664:	lea    rdx,[rip+0x20c55]        # 0x42c2c0
  40b66b:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40b670:	jne    0x40b682
  40b672:	mov    rcx,QWORD PTR [rsi+0x50]
  40b676:	call   0x421d98
  40b67b:	cmp    r12,rax
  40b67e:	cmovb  r12,rax
  40b682:	sub    edi,0x1
  40b685:	add    rsi,0x68
  40b689:	test   edi,edi
  40b68b:	jg     0x40b653
  40b68d:	lea    r14,[rsp+0x30]
  40b692:	lea    r9d,[r12+0x4]
  40b697:	lea    r8,[rip+0x1d1f7]        # 0x428895
  40b69e:	mov    edx,0xc
  40b6a3:	mov    rcx,r14
  40b6a6:	call   0x408290
  40b6ab:	mov    eax,DWORD PTR [rip+0x2953f]        # 0x434bf0
  40b6b1:	test   eax,eax
  40b6b3:	je     0x40b6be
  40b6b5:	sub    eax,0x1
  40b6b8:	mov    DWORD PTR [rip+0x29532],eax        # 0x434bf0
  40b6be:	mov    r15d,DWORD PTR [rbx+0xb4]
  40b6c5:	mov    rsi,QWORD PTR [rbx+0x78]
  40b6c9:	lea    r12,[rbx+0x10]
  40b6cd:	lea    r13,[rsp+0x40]
  40b6d2:	test   DWORD PTR [rsi+0x10],0x6280000
  40b6d9:	jne    0x40b7b0
  40b6df:	movzx  eax,BYTE PTR [rsi+0x2]
  40b6e3:	cmp    al,0x7f
  40b6e5:	ja     0x40b6f9
  40b6e7:	lea    rdx,[rip+0x20bd2]        # 0x42c2c0
  40b6ee:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40b6f3:	jne    0x40b7b0
  40b6f9:	lea    rdx,[rsi+0x2]
  40b6fd:	lea    r9,[rip+0x295dc]        # 0x434ce0
  40b704:	lea    r8,[rip+0x295cd]        # 0x434cd8
  40b70b:	mov    rcx,r12
  40b70e:	call   0x409710
  40b713:	mov    eax,DWORD PTR [rsi+0x10]
  40b716:	test   eax,0x10000
  40b71b:	je     0x40b7e2
  40b721:	mov    rdi,QWORD PTR [rip+0x29598]        # 0x434cc0
  40b728:	mov    rax,QWORD PTR [rip+0x29631]        # 0x434d60
  40b72f:	test   rax,rax
  40b732:	jne    0x40b744
  40b734:	jmp    0x40b88d
  40b739:	nop    DWORD PTR [rax+0x0]
  40b740:	add    rdi,0x1
  40b744:	movzx  ecx,BYTE PTR [rdi]
  40b747:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b74b:	jne    0x40b740
  40b74d:	test   cl,cl
  40b74f:	mov    r9,QWORD PTR [rsi+0x50]
  40b753:	jne    0x40b86f
  40b759:	lea    r8,[rip+0x1cbc7]        # 0x428327
  40b760:	mov    edx,0x50
  40b765:	mov    rcx,r13
  40b768:	call   0x408290
  40b76d:	mov    r9,QWORD PTR [rsi+0x40]
  40b771:	mov    rcx,QWORD PTR [rip+0x29450]        # 0x434bc8
  40b778:	mov    r8,r13
  40b77b:	mov    rdx,r14
  40b77e:	call   0x407ea0
  40b783:	mov    eax,DWORD PTR [rsi+0x10]
  40b786:	and    eax,0xf000
  40b78b:	shr    eax,0xc
  40b78e:	cmp    eax,0x2
  40b791:	je     0x40b7c6
  40b793:	cmp    eax,0x4
  40b796:	je     0x40b7c6
  40b798:	mov    r8,rbp
  40b79b:	mov    rdx,rsi
  40b79e:	mov    rcx,rbx
  40b7a1:	call   0x40b1e0
  40b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7b0:	sub    r15d,0x1
  40b7b4:	add    rsi,0x68
  40b7b8:	test   r15d,r15d
  40b7bb:	jg     0x40b6d2
  40b7c1:	jmp    0x40b4b3
  40b7c6:	movzx  eax,BYTE PTR [rip+0x29453]        # 0x434c20
  40b7cd:	cmp    QWORD PTR [rsi+0x38],0x0
  40b7d2:	mov    edx,0x1
  40b7d7:	cmovne eax,edx
  40b7da:	mov    BYTE PTR [rip+0x29440],al        # 0x434c20
  40b7e0:	jmp    0x40b798
  40b7e2:	and    eax,0xf000
  40b7e7:	shr    eax,0xc
  40b7ea:	cmp    eax,0x8
  40b7ed:	ja     0x40b89c
  40b7f3:	lea    rdi,[rip+0x1cb36]        # 0x428330
  40b7fa:	movsxd rax,DWORD PTR [rdi+rax*4]
  40b7fe:	add    rax,rdi
  40b801:	jmp    rax
  40b803:	mov    rdi,QWORD PTR [rip+0x2948e]        # 0x434c98
  40b80a:	jmp    0x40b728
  40b80f:	mov    rdi,QWORD PTR [rip+0x294a2]        # 0x434cb8
  40b816:	jmp    0x40b728
  40b81b:	mov    rdi,QWORD PTR [rip+0x2946e]        # 0x434c90
  40b822:	jmp    0x40b728
  40b827:	mov    rdi,QWORD PTR [rip+0x2947a]        # 0x434ca8
  40b82e:	jmp    0x40b728
  40b833:	mov    rdi,QWORD PTR [rip+0x29476]        # 0x434cb0
  40b83a:	jmp    0x40b728
  40b83f:	mov    rdi,QWORD PTR [rip+0x2945a]        # 0x434ca0
  40b846:	jmp    0x40b728
  40b84b:	mov    rdi,QWORD PTR [rip+0x2942e]        # 0x434c80
  40b852:	jmp    0x40b728
  40b857:	mov    rdi,QWORD PTR [rip+0x2946a]        # 0x434cc8
  40b85e:	jmp    0x40b728
  40b863:	mov    rdi,QWORD PTR [rip+0x29486]        # 0x434cf0
  40b86a:	jmp    0x40b728
  40b86f:	lea    r8,[rip+0x1cab4]        # 0x42832a
  40b876:	mov    QWORD PTR [rsp+0x20],rdi
  40b87b:	mov    edx,0x50
  40b880:	mov    rcx,r13
  40b883:	call   0x408290
  40b888:	jmp    0x40b76d
  40b88d:	mov    ecx,0xc
  40b892:	call   0x4097f0
  40b897:	jmp    0x40b744
  40b89c:	mov    rdi,QWORD PTR [rsi+0x50]
  40b8a0:	mov    rsi,QWORD PTR [rbx+0x28]
  40b8a4:	mov    rbx,QWORD PTR [rip+0x18265]        # 0x423b10
  40b8ab:	call   QWORD PTR [rip+0x2d6cb]        # 0x438f7c
  40b8b1:	lea    rcx,[rax+0x60]
  40b8b5:	mov    r9,rdi
  40b8b8:	mov    r8,rsi
  40b8bb:	mov    rdx,rbx
  40b8be:	call   0x407ea0
  40b8c3:	mov    rcx,QWORD PTR [rip+0x181b6]        # 0x423a80
  40b8ca:	call   0x408310
  40b8cf:	nop
  40b8d0:	push   r15
  40b8d2:	push   r14
  40b8d4:	push   r13
  40b8d6:	push   r12
  40b8d8:	push   rbp
  40b8d9:	push   rdi
  40b8da:	push   rsi
  40b8db:	push   rbx
  40b8dc:	sub    rsp,0x98
  40b8e3:	mov    rax,QWORD PTR [rcx+0x78]
  40b8e7:	mov    r13d,DWORD PTR [rcx+0xb0]
  40b8ee:	xor    r15d,r15d
  40b8f1:	mov    rdi,rcx
  40b8f4:	mov    ebp,edx
  40b8f6:	mov    QWORD PTR [rsp+0xf0],r8
  40b8fe:	xor    r14d,r14d
  40b901:	lea    rbx,[rax+0x2]
  40b905:	lea    rax,[rcx+0x10]
  40b909:	mov    QWORD PTR [rsp+0x38],rax
  40b90e:	lea    rax,[rsp+0x40]
  40b913:	mov    QWORD PTR [rsp+0x30],rax
  40b918:	mov    eax,r15d
  40b91b:	mov    r15d,r13d
  40b91e:	mov    r13d,eax
  40b921:	jmp    0x40b943
  40b923:	cmp    eax,0x80100
  40b928:	je     0x40baf2
  40b92e:	sub    r15d,0x1
  40b932:	add    r13d,0x1
  40b936:	add    rbx,0x68
  40b93a:	test   r15d,r15d
  40b93d:	jle    0x40bb70
  40b943:	mov    eax,DWORD PTR [rbx+0xe]
  40b946:	lea    rsi,[rbx-0x2]
  40b94a:	test   eax,0x6080000
  40b94f:	jne    0x40b923
  40b951:	test   eax,0x200000
  40b956:	je     0x40b981
  40b958:	test   ebp,ebp
  40b95a:	jne    0x40b92e
  40b95c:	mov    r9,QWORD PTR [rsp+0xf0]
  40b964:	mov    r8,QWORD PTR [rbx+0x3e]
  40b968:	add    r14d,0x1
  40b96c:	mov    rdx,QWORD PTR [rip+0x2935d]        # 0x434cd0
  40b973:	mov    rcx,QWORD PTR [rip+0x2924e]        # 0x434bc8
  40b97a:	call   0x407ea0
  40b97f:	jmp    0x40b92e
  40b981:	mov    eax,DWORD PTR [rdi+0x10]
  40b984:	and    eax,0x40000
  40b989:	je     0x40b9a1
  40b98b:	movzx  edx,BYTE PTR [rbx]
  40b98e:	cmp    dl,0x7f
  40b991:	ja     0x40b92e
  40b993:	lea    rcx,[rip+0x20926]        # 0x42c2c0
  40b99a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40b99f:	je     0x40b92e
  40b9a1:	test   ebp,ebp
  40b9a3:	sete   r12b
  40b9a7:	test   r14d,r14d
  40b9aa:	jle    0x40b9f0
  40b9ac:	test   r12b,r12b
  40b9af:	je     0x40b9f0
  40b9b1:	cmp    DWORD PTR [rdi+0xb4],r13d
  40b9b8:	je     0x40bba0
  40b9be:	cmp    r15d,0x1
  40b9c2:	jne    0x40b9f0
  40b9c4:	test   eax,eax
  40b9c6:	je     0x40b9f0
  40b9c8:	mov    r9,QWORD PTR [rsp+0xf0]
  40b9d0:	mov    r8,QWORD PTR [rip+0x18381]        # 0x423d58
  40b9d7:	mov    rdx,QWORD PTR [rip+0x292f2]        # 0x434cd0
  40b9de:	mov    rcx,QWORD PTR [rip+0x291e3]        # 0x434bc8
  40b9e5:	call   0x407ea0
  40b9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b9f0:	mov    rcx,QWORD PTR [rsp+0x38]
  40b9f5:	lea    r9,[rip+0x292e4]        # 0x434ce0
  40b9fc:	lea    r8,[rip+0x292d5]        # 0x434cd8
  40ba03:	mov    rdx,rbx
  40ba06:	call   0x409710
  40ba0b:	mov    eax,DWORD PTR [rbx+0xe]
  40ba0e:	mov    r9,QWORD PTR [rip+0x292ab]        # 0x434cc0
  40ba15:	test   eax,0x10000
  40ba1a:	jne    0x40ba44
  40ba1c:	and    eax,0xf000
  40ba21:	shr    eax,0xc
  40ba24:	cmp    eax,0x8
  40ba27:	ja     0x40bc87
  40ba2d:	lea    rdx,[rip+0x1c92c]        # 0x428360
  40ba34:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ba38:	add    rdx,rax
  40ba3b:	jmp    rdx
  40ba3d:	mov    r9,QWORD PTR [rip+0x292ac]        # 0x434cf0
  40ba44:	mov    r8,QWORD PTR [rip+0x2929d]        # 0x434ce8
  40ba4b:	lea    rax,[rip+0x1dcb9]        # 0x42970b
  40ba52:	cmp    r8,rax
  40ba55:	je     0x40bc31
  40ba5b:	lea    rax,[rip+0x1dcab]        # 0x42970d
  40ba62:	cmp    r8,rax
  40ba65:	je     0x40bc60
  40ba6b:	cmp    WORD PTR [rbx+0x8],0x0
  40ba70:	mov    rax,QWORD PTR [rip+0x29249]        # 0x434cc0
  40ba77:	mov    edx,0x50
  40ba7c:	cmovne rax,QWORD PTR [rip+0x29204]        # 0x434c88
  40ba84:	mov    rcx,QWORD PTR [rsp+0x30]
  40ba89:	mov    QWORD PTR [rsp+0x28],rax
  40ba8e:	mov    rax,QWORD PTR [rbx+0x4e]
  40ba92:	mov    QWORD PTR [rsp+0x20],rax
  40ba97:	call   0x408290
  40ba9c:	mov    r9,QWORD PTR [rbx+0x3e]
  40baa0:	mov    r8,QWORD PTR [rsp+0x30]
  40baa5:	lea    rdx,[rip+0x29194]        # 0x434c40
  40baac:	mov    rcx,QWORD PTR [rip+0x29115]        # 0x434bc8
  40bab3:	call   0x407ea0
  40bab8:	mov    eax,DWORD PTR [rbx+0xe]
  40babb:	and    eax,0xf000
  40bac0:	shr    eax,0xc
  40bac3:	cmp    eax,0x2
  40bac6:	je     0x40bb50
  40bacc:	cmp    eax,0x4
  40bacf:	je     0x40bb50
  40bad1:	test   r12b,r12b
  40bad4:	je     0x40b92e
  40bada:	mov    r8,QWORD PTR [rsp+0xf0]
  40bae2:	mov    rdx,rsi
  40bae5:	mov    rcx,rdi
  40bae8:	call   0x40b1e0
  40baed:	jmp    0x40b92e
  40baf2:	cmp    QWORD PTR [rbx+0x4e],0x0
  40baf7:	je     0x40b92e
  40bafd:	test   ebp,ebp
  40baff:	jne    0x40b92e
  40bb05:	mov    rsi,QWORD PTR [rbx+0x3e]
  40bb09:	mov    rcx,QWORD PTR [rsp+0x38]
  40bb0e:	lea    r9,[rip+0x291cb]        # 0x434ce0
  40bb15:	lea    r8,[rip+0x291bc]        # 0x434cd8
  40bb1c:	mov    rdx,rbx
  40bb1f:	test   rsi,rsi
  40bb22:	cmove  rsi,QWORD PTR [rip+0x180e6]        # 0x423c10
  40bb2a:	call   0x409710
  40bb2f:	mov    r8,QWORD PTR [rbx+0x4e]
  40bb33:	mov    rdx,QWORD PTR [rip+0x180ce]        # 0x423c08
  40bb3a:	mov    rcx,QWORD PTR [rip+0x29087]        # 0x434bc8
  40bb41:	mov    r9,rsi
  40bb44:	call   0x407ea0
  40bb49:	jmp    0x40b92e
  40bb4e:	xchg   ax,ax
  40bb50:	movzx  eax,BYTE PTR [rip+0x290c9]        # 0x434c20
  40bb57:	cmp    QWORD PTR [rbx+0x36],0x0
  40bb5c:	mov    edx,0x1
  40bb61:	cmovne eax,edx
  40bb64:	mov    BYTE PTR [rip+0x290b6],al        # 0x434c20
  40bb6a:	jmp    0x40bad1
  40bb6f:	nop
  40bb70:	mov    rdx,QWORD PTR [rip+0x29051]        # 0x434bc8
  40bb77:	mov    ecx,0xa
  40bb7c:	call   0x421e68
  40bb81:	nop
  40bb82:	add    rsp,0x98
  40bb89:	pop    rbx
  40bb8a:	pop    rsi
  40bb8b:	pop    rdi
  40bb8c:	pop    rbp
  40bb8d:	pop    r12
  40bb8f:	pop    r13
  40bb91:	pop    r14
  40bb93:	pop    r15
  40bb95:	ret    
  40bb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bba0:	test   BYTE PTR [rbx-0x58],0x20
  40bba4:	jne    0x40b9f0
  40bbaa:	mov    r9,QWORD PTR [rsp+0xf0]
  40bbb2:	mov    r8,QWORD PTR [rip+0x18037]        # 0x423bf0
  40bbb9:	mov    rdx,QWORD PTR [rip+0x29110]        # 0x434cd0
  40bbc0:	mov    rcx,QWORD PTR [rip+0x29001]        # 0x434bc8
  40bbc7:	call   0x407ea0
  40bbcc:	jmp    0x40b9f0
  40bbd1:	mov    r9,QWORD PTR [rip+0x290c0]        # 0x434c98
  40bbd8:	jmp    0x40ba44
  40bbdd:	mov    r9,QWORD PTR [rip+0x290e4]        # 0x434cc8
  40bbe4:	jmp    0x40ba44
  40bbe9:	mov    r9,QWORD PTR [rip+0x29090]        # 0x434c80
  40bbf0:	jmp    0x40ba44
  40bbf5:	mov    r9,QWORD PTR [rip+0x290a4]        # 0x434ca0
  40bbfc:	jmp    0x40ba44
  40bc01:	mov    r9,QWORD PTR [rip+0x290a8]        # 0x434cb0
  40bc08:	jmp    0x40ba44
  40bc0d:	mov    r9,QWORD PTR [rip+0x29094]        # 0x434ca8
  40bc14:	jmp    0x40ba44
  40bc19:	mov    r9,QWORD PTR [rip+0x29070]        # 0x434c90
  40bc20:	jmp    0x40ba44
  40bc25:	mov    r9,QWORD PTR [rip+0x2908c]        # 0x434cb8
  40bc2c:	jmp    0x40ba44
  40bc31:	mov    rax,QWORD PTR [rbx+0x4e]
  40bc35:	mov    rcx,QWORD PTR [rsp+0x30]
  40bc3a:	lea    r8,[rip+0x1c713]        # 0x428354
  40bc41:	mov    QWORD PTR [rsp+0x20],r9
  40bc46:	mov    edx,0x50
  40bc4b:	mov    r9,rax
  40bc4e:	call   0x408290
  40bc53:	jmp    0x40ba9c
  40bc58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc60:	mov    rax,QWORD PTR [rbx+0x4e]
  40bc64:	mov    rcx,QWORD PTR [rsp+0x30]
  40bc69:	lea    r8,[rip+0x1c6eb]        # 0x42835b
  40bc70:	mov    QWORD PTR [rsp+0x20],r9
  40bc75:	mov    edx,0x50
  40bc7a:	mov    r9,rax
  40bc7d:	call   0x408290
  40bc82:	jmp    0x40ba9c
  40bc87:	mov    rbp,QWORD PTR [rsi+0x50]
  40bc8b:	mov    rbx,QWORD PTR [rip+0x17e7e]        # 0x423b10
  40bc92:	mov    rsi,QWORD PTR [rdi+0x28]
  40bc96:	call   QWORD PTR [rip+0x2d2e0]        # 0x438f7c
  40bc9c:	lea    rcx,[rax+0x60]
  40bca0:	mov    r9,rbp
  40bca3:	mov    rdx,rbx
  40bca6:	mov    r8,rsi
  40bca9:	call   0x407ea0
  40bcae:	mov    ecx,0x46
  40bcb3:	call   0x4082e0
  40bcb8:	nop
  40bcb9:	nop    DWORD PTR [rax+0x0]
  40bcc0:	push   r15
  40bcc2:	push   r14
  40bcc4:	push   r13
  40bcc6:	push   r12
  40bcc8:	push   rbp
  40bcc9:	push   rdi
  40bcca:	push   rsi
  40bccb:	push   rbx
  40bccc:	sub    rsp,0x38
  40bcd0:	lea    r13,[rip+0x1d7a9]        # 0x429480
  40bcd7:	lea    r12,[rip+0x1c6a6]        # 0x428384
  40bcde:	mov    rbx,rcx
  40bce1:	mov    QWORD PTR [rsp+0x88],rdx
  40bce9:	mov    r14,r8
  40bcec:	mov    rax,QWORD PTR [rip+0x290b5]        # 0x434da8
  40bcf3:	test   rax,rax
  40bcf6:	je     0x40c0a5
  40bcfc:	movzx  edx,BYTE PTR [rbx]
  40bcff:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bd03:	mov    rcx,rdx
  40bd06:	je     0x40bda8
  40bd0c:	mov    rsi,rbx
  40bd0f:	nop
  40bd10:	add    rsi,0x1
  40bd14:	movzx  edx,BYTE PTR [rsi]
  40bd17:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bd1b:	mov    rdi,rdx
  40bd1e:	jne    0x40bd10
  40bd20:	mov    r10,rsi
  40bd23:	mov    rbp,rsi
  40bd26:	sub    r10,rbx
  40bd29:	lea    eax,[r10-0x4]
  40bd2d:	cmp    eax,0x4
  40bd30:	ja     0x40bda8
  40bd32:	lea    rdx,[rip+0x1cd87]        # 0x428ac0
  40bd39:	movzx  eax,cl
  40bd3c:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40bd41:	add    r9d,r10d
  40bd44:	cmp    r9d,0x9
  40bd48:	ja     0x40bda8
  40bd4a:	movsxd r9,r9d
  40bd4d:	shl    r9,0x4
  40bd51:	lea    r15,[r13+r9*1+0x0]
  40bd56:	mov    r11,QWORD PTR [r15]
  40bd59:	cmp    cl,BYTE PTR [r11]
  40bd5c:	jne    0x40bda8
  40bd5e:	lea    rdx,[r11+0x1]
  40bd62:	lea    rcx,[rbx+0x1]
  40bd66:	lea    r8d,[r10-0x1]
  40bd6a:	mov    QWORD PTR [rsp+0x28],r11
  40bd6f:	mov    QWORD PTR [rsp+0x20],r10
  40bd74:	call   0x421d90
  40bd79:	test   eax,eax
  40bd7b:	jne    0x40bda8
  40bd7d:	mov    r10,QWORD PTR [rsp+0x20]
  40bd82:	mov    r11,QWORD PTR [rsp+0x28]
  40bd87:	mov    r10d,r10d
  40bd8a:	cmp    BYTE PTR [r11+r10*1],0x0
  40bd8f:	jne    0x40bda8
  40bd91:	cmp    DWORD PTR [r15+0x8],0x6
  40bd96:	ja     0x40bda8
  40bd98:	mov    eax,DWORD PTR [r15+0x8]
  40bd9c:	movsxd rax,DWORD PTR [r12+rax*4]
  40bda0:	add    rax,r12
  40bda3:	jmp    rax
  40bda5:	mov    rbx,rsi
  40bda8:	mov    rax,QWORD PTR [rip+0x29059]        # 0x434e08
  40bdaf:	mov    DWORD PTR [r14],0x0
  40bdb6:	test   rax,rax
  40bdb9:	jne    0x40bdda
  40bdbb:	mov    ecx,0x21
  40bdc0:	call   0x4097f0
  40bdc5:	jmp    0x40bdda
  40bdc7:	nop    WORD PTR [rax+rax*1+0x0]
  40bdd0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bdd4:	jne    0x40bdfb
  40bdd6:	add    rbx,0x1
  40bdda:	movzx  edx,BYTE PTR [rbx]
  40bddd:	test   dl,dl
  40bddf:	jne    0x40bdd0
  40bde1:	xor    eax,eax
  40bde3:	add    rsp,0x38
  40bde7:	pop    rbx
  40bde8:	pop    rsi
  40bde9:	pop    rdi
  40bdea:	pop    rbp
  40bdeb:	pop    r12
  40bded:	pop    r13
  40bdef:	pop    r14
  40bdf1:	pop    r15
  40bdf3:	ret    
  40bdf4:	mov    DWORD PTR [r14],0x0
  40bdfb:	mov    rax,rbx
  40bdfe:	jmp    0x40bde3
  40be00:	cmp    dil,0x7f
  40be04:	ja     0x40bda5
  40be06:	lea    rax,[rip+0x204b3]        # 0x42c2c0
  40be0d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40be14:	je     0x40bda5
  40be16:	mov    rax,QWORD PTR [rsp+0x88]
  40be1e:	mov    rbx,rsi
  40be21:	mov    DWORD PTR [rax],0x2
  40be27:	mov    rax,QWORD PTR [rip+0x28f32]        # 0x434d60
  40be2e:	test   rax,rax
  40be31:	jne    0x40be44
  40be33:	jmp    0x40c0b4
  40be38:	nop    DWORD PTR [rax+rax*1+0x0]
  40be40:	add    rbx,0x1
  40be44:	movzx  ecx,BYTE PTR [rbx]
  40be47:	cmp    BYTE PTR [rax+rcx*1],0x0
  40be4b:	jne    0x40be40
  40be4d:	cmp    cl,0x2f
  40be50:	je     0x40bdf4
  40be52:	cmp    cl,0x3e
  40be55:	je     0x40bdfb
  40be57:	cmp    cl,0x7f
  40be5a:	ja     0x40bde1
  40be5c:	lea    rax,[rip+0x2045d]        # 0x42c2c0
  40be63:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  40be68:	jne    0x40bcec
  40be6e:	jmp    0x40bde1
  40be73:	cmp    dil,0x3d
  40be77:	lea    rbp,[rsi+0x1]
  40be7b:	je     0x40bfa4
  40be81:	xor    edi,edi
  40be83:	mov    rax,QWORD PTR [rip+0x28f7e]        # 0x434e08
  40be8a:	add    rbp,rdi
  40be8d:	mov    DWORD PTR [r14],0x0
  40be94:	test   rax,rax
  40be97:	je     0x40c129
  40be9d:	movzx  edx,BYTE PTR [rbp+0x0]
  40bea1:	test   dl,dl
  40bea3:	jne    0x40bec0
  40bea5:	jmp    0x40bde1
  40beaa:	nop    WORD PTR [rax+rax*1+0x0]
  40beb0:	add    rbp,0x1
  40beb4:	movzx  edx,BYTE PTR [rbp+0x0]
  40beb8:	test   dl,dl
  40beba:	je     0x40bde1
  40bec0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bec4:	je     0x40beb0
  40bec6:	mov    rbx,rbp
  40bec9:	jmp    0x40be27
  40bece:	xchg   ax,ax
  40bed0:	mov    rax,QWORD PTR [rip+0x28f31]        # 0x434e08
  40bed7:	test   rax,rax
  40beda:	je     0x40c11a
  40bee0:	movzx  edx,BYTE PTR [rsi]
  40bee3:	test   dl,dl
  40bee5:	jne    0x40bf00
  40bee7:	jmp    0x40bde1
  40beec:	nop    DWORD PTR [rax+0x0]
  40bef0:	add    rbp,0x1
  40bef4:	movzx  edx,BYTE PTR [rbp+0x0]
  40bef8:	test   dl,dl
  40befa:	je     0x40bde1
  40bf00:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bf04:	je     0x40bef0
  40bf06:	jmp    0x40bec6
  40bf08:	mov    rax,QWORD PTR [rip+0x28ef9]        # 0x434e08
  40bf0f:	test   rax,rax
  40bf12:	je     0x40c10b
  40bf18:	movzx  edx,BYTE PTR [rsi]
  40bf1b:	test   dl,dl
  40bf1d:	jne    0x40bf34
  40bf1f:	jmp    0x40bde1
  40bf24:	add    rbp,0x1
  40bf28:	movzx  edx,BYTE PTR [rbp+0x0]
  40bf2c:	test   dl,dl
  40bf2e:	je     0x40bde1
  40bf34:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bf38:	je     0x40bf24
  40bf3a:	jmp    0x40bec6
  40bf3c:	cmp    dil,0x7f
  40bf40:	ja     0x40bda5
  40bf46:	lea    rax,[rip+0x20373]        # 0x42c2c0
  40bf4d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40bf54:	je     0x40bda5
  40bf5a:	mov    rax,QWORD PTR [rsp+0x88]
  40bf62:	mov    rbx,rsi
  40bf65:	mov    DWORD PTR [rax],0x0
  40bf6b:	jmp    0x40be27
  40bf70:	cmp    dil,0x7f
  40bf74:	ja     0x40bda5
  40bf7a:	lea    rax,[rip+0x2033f]        # 0x42c2c0
  40bf81:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40bf88:	je     0x40bda5
  40bf8e:	mov    rax,QWORD PTR [rsp+0x88]
  40bf96:	mov    rbx,rsi
  40bf99:	mov    DWORD PTR [rax],0x1
  40bf9f:	jmp    0x40be27
  40bfa4:	mov    rax,QWORD PTR [rip+0x28e2d]        # 0x434dd8
  40bfab:	test   rax,rax
  40bfae:	je     0x40c138
  40bfb4:	movzx  edx,BYTE PTR [rsi+0x1]
  40bfb8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bfbc:	mov    r8,rdx
  40bfbf:	je     0x40be81
  40bfc5:	mov    rbx,rbp
  40bfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfd0:	add    rbx,0x1
  40bfd4:	movzx  ecx,BYTE PTR [rbx]
  40bfd7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40bfdb:	jne    0x40bfd0
  40bfdd:	mov    rdi,rbx
  40bfe0:	sub    rdi,rbp
  40bfe3:	je     0x40be81
  40bfe9:	cmp    cl,0x7f
  40bfec:	ja     0x40be83
  40bff2:	lea    rax,[rip+0x202c7]        # 0x42c2c0
  40bff9:	test   DWORD PTR [rax+rcx*4],0x1000c01
  40c000:	je     0x40be83
  40c006:	lea    eax,[rdi-0x3]
  40c009:	mov    r11d,edi
  40c00c:	cmp    eax,0xb
  40c00f:	ja     0x40be83
  40c015:	lea    rdx,[rip+0x1cba4]        # 0x428bc0
  40c01c:	movzx  eax,r8b
  40c020:	movzx  eax,BYTE PTR [rdx+rax*1]
  40c024:	add    eax,edi
  40c026:	cmp    eax,0x11
  40c029:	ja     0x40be83
  40c02f:	movsxd r9,eax
  40c032:	lea    rax,[rip+0x1d547]        # 0x429580
  40c039:	shl    r9,0x4
  40c03d:	add    r9,rax
  40c040:	mov    r10,QWORD PTR [r9]
  40c043:	mov    QWORD PTR [rsp+0x28],r9
  40c048:	cmp    BYTE PTR [r10],r8b
  40c04b:	jne    0x40be83
  40c051:	lea    rdx,[r10+0x1]
  40c055:	lea    rcx,[rsi+0x2]
  40c059:	lea    r8d,[r11-0x1]
  40c05d:	mov    QWORD PTR [rsp+0x20],r10
  40c062:	call   0x421d90
  40c067:	test   eax,eax
  40c069:	jne    0x40be83
  40c06f:	mov    r10,QWORD PTR [rsp+0x20]
  40c074:	mov    eax,edi
  40c076:	cmp    BYTE PTR [r10+rax*1],0x0
  40c07b:	jne    0x40be83
  40c081:	mov    r9,QWORD PTR [rsp+0x28]
  40c086:	cmp    DWORD PTR [r9+0x8],0x9
  40c08b:	ja     0x40be83
  40c091:	mov    edx,DWORD PTR [r9+0x8]
  40c095:	lea    rax,[rip+0x1c304]        # 0x4283a0
  40c09c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40c0a0:	add    rax,rdx
  40c0a3:	jmp    rax
  40c0a5:	mov    ecx,0x15
  40c0aa:	call   0x4097f0
  40c0af:	jmp    0x40bcfc
  40c0b4:	mov    ecx,0xc
  40c0b9:	call   0x4097f0
  40c0be:	jmp    0x40be44
  40c0c3:	mov    DWORD PTR [r14],0x6
  40c0ca:	jmp    0x40be27
  40c0cf:	mov    DWORD PTR [r14],0x4
  40c0d6:	jmp    0x40be27
  40c0db:	mov    DWORD PTR [r14],0x2
  40c0e2:	jmp    0x40be27
  40c0e7:	mov    DWORD PTR [r14],0x3
  40c0ee:	jmp    0x40be27
  40c0f3:	mov    DWORD PTR [r14],0x5
  40c0fa:	jmp    0x40be27
  40c0ff:	mov    DWORD PTR [r14],0x1
  40c106:	jmp    0x40be27
  40c10b:	mov    ecx,0x21
  40c110:	call   0x4097f0
  40c115:	jmp    0x40bf18
  40c11a:	mov    ecx,0x21
  40c11f:	call   0x4097f0
  40c124:	jmp    0x40bee0
  40c129:	mov    ecx,0x21
  40c12e:	call   0x4097f0
  40c133:	jmp    0x40be9d
  40c138:	mov    ecx,0x1b
  40c13d:	call   0x4097f0
  40c142:	jmp    0x40bfb4
  40c147:	nop    WORD PTR [rax+rax*1+0x0]
  40c150:	push   r15
  40c152:	push   r14
  40c154:	push   r13
  40c156:	push   r12
  40c158:	push   rbp
  40c159:	push   rdi
  40c15a:	push   rsi
  40c15b:	push   rbx
  40c15c:	sub    rsp,0x48
  40c160:	mov    rsi,QWORD PTR [rip+0x2cf8d]        # 0x4390f4
  40c167:	mov    rbx,rcx
  40c16a:	jmp    0x40c174
  40c16c:	nop    DWORD PTR [rax+0x0]
  40c170:	add    rbx,0x1
  40c174:	movzx  ebp,BYTE PTR [rbx]
  40c177:	mov    ecx,ebp
  40c179:	call   rsi
  40c17b:	test   eax,eax
  40c17d:	jne    0x40c170
  40c17f:	cmp    bpl,0x50
  40c183:	je     0x40c310
  40c189:	cmp    bpl,0x54
  40c18d:	je     0x40c2b4
  40c193:	sub    ebp,0x30
  40c196:	cmp    ebp,0x9
  40c199:	ja     0x40c7b3
  40c19f:	mov    rbp,QWORD PTR [rip+0x2ce26]        # 0x438fcc
  40c1a6:	lea    r13,[rsp+0x30]
  40c1ab:	mov    QWORD PTR [rsp+0x30],rbx
  40c1b0:	xor    edi,edi
  40c1b2:	xor    r12d,r12d
  40c1b5:	call   rbp
  40c1b7:	mov    rcx,QWORD PTR [rsp+0x30]
  40c1bc:	mov    r8d,0xa
  40c1c2:	mov    rdx,r13
  40c1c5:	mov    DWORD PTR [rax],0x0
  40c1cb:	call   0x421d68
  40c1d0:	movsxd r14,eax
  40c1d3:	call   rbp
  40c1d5:	mov    ecx,DWORD PTR [rax]
  40c1d7:	test   ecx,ecx
  40c1d9:	jne    0x40c2a3
  40c1df:	mov    rbx,QWORD PTR [rsp+0x30]
  40c1e4:	movzx  r15d,BYTE PTR [rbx]
  40c1e8:	cmp    r15b,0x3a
  40c1ec:	jne    0x40c1fc
  40c1ee:	jmp    0x40c63b
  40c1f3:	mov    QWORD PTR [rsp+0x30],rbx
  40c1f8:	movzx  r15d,BYTE PTR [rbx]
  40c1fc:	add    rbx,0x1
  40c200:	movzx  ecx,r15b
  40c204:	call   rsi
  40c206:	test   eax,eax
  40c208:	jne    0x40c1f3
  40c20a:	cmp    r15b,0x59
  40c20e:	je     0x40c49b
  40c214:	jle    0x40c2d0
  40c21a:	cmp    r15b,0x6d
  40c21e:	je     0x40c4cd
  40c224:	jg     0x40c440
  40c22a:	cmp    r15b,0x64
  40c22e:	je     0x40c4b2
  40c234:	cmp    r15b,0x68
  40c238:	jne    0x40c2a3
  40c23a:	cmp    r12d,0x4
  40c23e:	ja     0x40c2a3
  40c240:	mov    r8d,0xe10
  40c246:	mov    r12d,0x5
  40c24c:	nop    DWORD PTR [rax+0x0]
  40c250:	mov    rcx,rdi
  40c253:	mov    rdx,r14
  40c256:	call   0x408e60
  40c25b:	mov    rdi,rax
  40c25e:	mov    rax,QWORD PTR [rsp+0x30]
  40c263:	lea    rbx,[rax+0x1]
  40c267:	mov    QWORD PTR [rsp+0x30],rbx
  40c26c:	jmp    0x40c275
  40c26e:	xchg   ax,ax
  40c270:	mov    QWORD PTR [rsp+0x30],rbx
  40c275:	movzx  r14d,BYTE PTR [rbx]
  40c279:	add    rbx,0x1
  40c27d:	mov    ecx,r14d
  40c280:	call   rsi
  40c282:	test   eax,eax
  40c284:	jne    0x40c270
  40c286:	test   r14b,r14b
  40c289:	je     0x40c7ab
  40c28f:	sub    r14d,0x30
  40c293:	cmp    r14d,0x9
  40c297:	ja     0x40c2a3
  40c299:	cmp    r12d,0x7
  40c29d:	jne    0x40c1b5
  40c2a3:	call   rbp
  40c2a5:	mov    DWORD PTR [rax],0x16
  40c2ab:	mov    rax,0xffffffffffffffff
  40c2b2:	jmp    0x40c2bd
  40c2b4:	lea    rcx,[rbx+0x1]
  40c2b8:	call   0x408fc0
  40c2bd:	add    rsp,0x48
  40c2c1:	pop    rbx
  40c2c2:	pop    rsi
  40c2c3:	pop    rdi
  40c2c4:	pop    rbp
  40c2c5:	pop    r12
  40c2c7:	pop    r13
  40c2c9:	pop    r14
  40c2cb:	pop    r15
  40c2cd:	ret    
  40c2ce:	xchg   ax,ax
  40c2d0:	cmp    r15b,0x44
  40c2d4:	je     0x40c4b2
  40c2da:	jle    0x40c472
  40c2e0:	cmp    r15b,0x4d
  40c2e4:	je     0x40c457
  40c2ea:	cmp    r15b,0x57
  40c2ee:	jne    0x40c2a3
  40c2f0:	cmp    r12d,0x2
  40c2f4:	ja     0x40c2a3
  40c2f6:	mov    r8d,0x93a80
  40c2fc:	mov    r12d,0x3
  40c302:	jmp    0x40c250
  40c307:	nop    WORD PTR [rax+rax*1+0x0]
  40c310:	lea    rcx,[rbx+0x1]
  40c314:	call   0x421d08
  40c319:	test   rax,rax
  40c31c:	mov    r13,rax
  40c31f:	je     0x40c7e6
  40c325:	mov    edx,0x54
  40c32a:	mov    rcx,rax
  40c32d:	call   0x421dc0
  40c332:	test   rax,rax
  40c335:	mov    r12,rax
  40c338:	je     0x40c630
  40c33e:	lea    rdi,[rax+0x1]
  40c342:	mov    rcx,r13
  40c345:	mov    BYTE PTR [rax],0x0
  40c348:	call   0x407e40
  40c34d:	mov    rcx,rdi
  40c350:	mov    rbx,rax
  40c353:	call   0x407e40
  40c358:	test   rax,rax
  40c35b:	mov    r12,rax
  40c35e:	setne  r14b
  40c362:	mov    edx,0x2d
  40c367:	mov    rcx,rbx
  40c36a:	call   0x421dc0
  40c36f:	test   rax,rax
  40c372:	je     0x40c4e8
  40c378:	lea    rsi,[rsp+0x20]
  40c37d:	mov    r8,rax
  40c380:	xor    ecx,ecx
  40c382:	mov    r9d,0x1e13380
  40c388:	mov    QWORD PTR [rsp+0x20],rbx
  40c38d:	mov    rdx,rsi
  40c390:	call   0x408ef0
  40c395:	mov    rbx,rax
  40c398:	mov    rax,QWORD PTR [rsp+0x20]
  40c39d:	mov    edx,0x2d
  40c3a2:	lea    rcx,[rax+0x1]
  40c3a6:	mov    QWORD PTR [rsp+0x20],rcx
  40c3ab:	call   0x421dc0
  40c3b0:	test   rax,rax
  40c3b3:	mov    r8,rax
  40c3b6:	je     0x40c7cb
  40c3bc:	mov    r9d,0x278d00
  40c3c2:	mov    rdx,rsi
  40c3c5:	mov    rcx,rbx
  40c3c8:	call   0x408ef0
  40c3cd:	mov    rdi,rax
  40c3d0:	mov    rax,QWORD PTR [rsp+0x20]
  40c3d5:	lea    rbx,[rax+0x1]
  40c3d9:	mov    rcx,rbx
  40c3dc:	mov    QWORD PTR [rsp+0x20],rbx
  40c3e1:	call   0x421d98
  40c3e6:	lea    r8,[rbx+rax*1]
  40c3ea:	mov    rcx,rdi
  40c3ed:	mov    r9d,0x15180
  40c3f3:	mov    rdx,rsi
  40c3f6:	call   0x408ef0
  40c3fb:	mov    rbp,QWORD PTR [rip+0x2cbca]        # 0x438fcc
  40c402:	mov    rdi,rax
  40c405:	call   rbp
  40c407:	mov    r8d,DWORD PTR [rax]
  40c40a:	test   r8d,r8d
  40c40d:	jne    0x40c430
  40c40f:	test   r14b,r14b
  40c412:	je     0x40c430
  40c414:	mov    rcx,r12
  40c417:	call   0x408fc0
  40c41c:	mov    rcx,rdi
  40c41f:	mov    r8d,0x1
  40c425:	mov    rdx,rax
  40c428:	call   0x408e60
  40c42d:	mov    rdi,rax
  40c430:	mov    rcx,r13
  40c433:	call   0x421e50
  40c438:	mov    rax,rdi
  40c43b:	jmp    0x40c2bd
  40c440:	cmp    r15b,0x73
  40c444:	jne    0x40c491
  40c446:	mov    r8d,0x1
  40c44c:	mov    r12d,0x7
  40c452:	jmp    0x40c250
  40c457:	cmp    r12d,0x1
  40c45b:	ja     0x40c2a3
  40c461:	mov    r8d,0x278d00
  40c467:	mov    r12d,0x2
  40c46d:	jmp    0x40c250
  40c472:	test   r15b,r15b
  40c475:	jne    0x40c2a3
  40c47b:	mov    r8d,0x1
  40c481:	mov    rdx,r14
  40c484:	mov    rcx,rdi
  40c487:	call   0x408e60
  40c48c:	jmp    0x40c2bd
  40c491:	cmp    r15b,0x79
  40c495:	jne    0x40c2a3
  40c49b:	test   r12d,r12d
  40c49e:	jne    0x40c2a3
  40c4a4:	mov    r8d,0x1e13380
  40c4aa:	mov    r12b,0x1
  40c4ad:	jmp    0x40c250
  40c4b2:	cmp    r12d,0x3
  40c4b6:	ja     0x40c2a3
  40c4bc:	mov    r8d,0x15180
  40c4c2:	mov    r12d,0x4
  40c4c8:	jmp    0x40c250
  40c4cd:	cmp    r12d,0x6
  40c4d1:	je     0x40c2a3
  40c4d7:	mov    r8d,0x3c
  40c4dd:	mov    r12d,0x6
  40c4e3:	jmp    0x40c250
  40c4e8:	lea    rdx,[rip+0x1bed9]        # 0x4283c8
  40c4ef:	mov    rcx,rbx
  40c4f2:	call   0x421d80
  40c4f7:	test   rax,rax
  40c4fa:	je     0x40c709
  40c500:	mov    edx,0x59
  40c505:	mov    rcx,rbx
  40c508:	mov    QWORD PTR [rsp+0x28],rbx
  40c50d:	xor    edi,edi
  40c50f:	call   0x421dc0
  40c514:	test   rax,rax
  40c517:	je     0x40c53f
  40c519:	lea    rdx,[rsp+0x28]
  40c51e:	mov    r9d,0x1e13380
  40c524:	mov    r8,rax
  40c527:	xor    ecx,ecx
  40c529:	call   0x408ef0
  40c52e:	mov    rdi,rax
  40c531:	mov    rax,QWORD PTR [rsp+0x28]
  40c536:	lea    rbx,[rax+0x1]
  40c53a:	mov    QWORD PTR [rsp+0x28],rbx
  40c53f:	mov    edx,0x4d
  40c544:	mov    rcx,rbx
  40c547:	call   0x421dc0
  40c54c:	test   rax,rax
  40c54f:	je     0x40c578
  40c551:	lea    rdx,[rsp+0x28]
  40c556:	mov    rcx,rdi
  40c559:	mov    r9d,0x278d00
  40c55f:	mov    r8,rax
  40c562:	call   0x408ef0
  40c567:	mov    rdi,rax
  40c56a:	mov    rax,QWORD PTR [rsp+0x28]
  40c56f:	lea    rbx,[rax+0x1]
  40c573:	mov    QWORD PTR [rsp+0x28],rbx
  40c578:	mov    edx,0x57
  40c57d:	mov    rcx,rbx
  40c580:	call   0x421dc0
  40c585:	test   rax,rax
  40c588:	je     0x40c5b1
  40c58a:	lea    rdx,[rsp+0x28]
  40c58f:	mov    rcx,rdi
  40c592:	mov    r9d,0x93a80
  40c598:	mov    r8,rax
  40c59b:	call   0x408ef0
  40c5a0:	mov    rdi,rax
  40c5a3:	mov    rax,QWORD PTR [rsp+0x28]
  40c5a8:	lea    rbx,[rax+0x1]
  40c5ac:	mov    QWORD PTR [rsp+0x28],rbx
  40c5b1:	mov    edx,0x44
  40c5b6:	mov    rcx,rbx
  40c5b9:	call   0x421dc0
  40c5be:	test   rax,rax
  40c5c1:	je     0x40c5f5
  40c5c3:	lea    rdx,[rsp+0x28]
  40c5c8:	mov    rcx,rdi
  40c5cb:	mov    r9d,0x15180
  40c5d1:	mov    r8,rax
  40c5d4:	call   0x408ef0
  40c5d9:	mov    rdi,rax
  40c5dc:	mov    rax,QWORD PTR [rsp+0x28]
  40c5e1:	lea    rbx,[rax+0x1]
  40c5e5:	mov    QWORD PTR [rsp+0x28],rbx
  40c5ea:	jmp    0x40c5f5
  40c5ec:	nop    DWORD PTR [rax+0x0]
  40c5f0:	mov    QWORD PTR [rsp+0x28],rbx
  40c5f5:	movzx  ecx,BYTE PTR [rbx]
  40c5f8:	add    rbx,0x1
  40c5fc:	mov    ebp,ecx
  40c5fe:	call   rsi
  40c600:	test   eax,eax
  40c602:	jne    0x40c5f0
  40c604:	test   bpl,bpl
  40c607:	mov    rbp,QWORD PTR [rip+0x2c9be]        # 0x438fcc
  40c60e:	je     0x40c405
  40c614:	call   rbp
  40c616:	mov    rdi,0xffffffffffffffff
  40c61d:	mov    DWORD PTR [rax],0x16
  40c623:	jmp    0x40c405
  40c628:	nop    DWORD PTR [rax+rax*1+0x0]
  40c630:	mov    rbx,r13
  40c633:	xor    r14d,r14d
  40c636:	jmp    0x40c362
  40c63b:	cmp    r12d,0x6
  40c63f:	je     0x40c2a3
  40c645:	lea    r15,[rsp+0x38]
  40c64a:	mov    QWORD PTR [rsp+0x38],rbx
  40c64f:	mov    r13d,0x3
  40c655:	call   rbp
  40c657:	mov    DWORD PTR [rax],0x0
  40c65d:	mov    rbx,QWORD PTR [rsp+0x38]
  40c662:	movzx  eax,BYTE PTR [rbx]
  40c665:	cmp    al,0x3a
  40c667:	jne    0x40c6c0
  40c669:	sub    r13d,0x1
  40c66d:	je     0x40c6c0
  40c66f:	lea    rcx,[rbx+0x1]
  40c673:	mov    rdx,r15
  40c676:	mov    r8d,0xa
  40c67c:	call   0x421d60
  40c681:	mov    ebx,eax
  40c683:	call   rbp
  40c685:	mov    edx,DWORD PTR [rax]
  40c687:	test   edx,edx
  40c689:	jne    0x40c6a6
  40c68b:	mov    rdx,r14
  40c68e:	mov    ecx,ebx
  40c690:	mov    r8d,0x3c
  40c696:	call   0x408e60
  40c69b:	mov    r14,rax
  40c69e:	call   rbp
  40c6a0:	mov    eax,DWORD PTR [rax]
  40c6a2:	test   eax,eax
  40c6a4:	je     0x40c65d
  40c6a6:	mov    rdx,0xffffffffffffffff
  40c6ad:	mov    r8d,0x1
  40c6b3:	mov    rcx,rdi
  40c6b6:	call   0x408e60
  40c6bb:	jmp    0x40c2bd
  40c6c0:	add    rbx,0x1
  40c6c4:	mov    r13d,eax
  40c6c7:	jmp    0x40c6de
  40c6c9:	nop    DWORD PTR [rax+0x0]
  40c6d0:	mov    QWORD PTR [rsp+0x38],rbx
  40c6d5:	add    rbx,0x1
  40c6d9:	movzx  r13d,BYTE PTR [rbx-0x1]
  40c6de:	movzx  ecx,r13b
  40c6e2:	call   rsi
  40c6e4:	test   eax,eax
  40c6e6:	jne    0x40c6d0
  40c6e8:	test   r13b,r13b
  40c6eb:	jne    0x40c7fe
  40c6f1:	cmp    r14,0xe0f
  40c6f8:	jle    0x40c704
  40c6fa:	cmp    r12d,0x5
  40c6fe:	je     0x40c2a3
  40c704:	mov    rdx,r14
  40c707:	jmp    0x40c6ad
  40c709:	mov    rcx,rbx
  40c70c:	call   0x421d98
  40c711:	cmp    rax,0x8
  40c715:	jne    0x40c7cb
  40c71b:	mov    eax,DWORD PTR [rbx]
  40c71d:	lea    rdi,[rsp+0x38]
  40c722:	lea    rsi,[rsp+0x30]
  40c727:	lea    r8,[rsp+0x34]
  40c72c:	mov    r9d,0x1e13380
  40c732:	xor    ecx,ecx
  40c734:	mov    rdx,rdi
  40c737:	mov    BYTE PTR [rsp+0x34],0x0
  40c73c:	mov    QWORD PTR [rsp+0x38],rsi
  40c741:	mov    DWORD PTR [rsp+0x30],eax
  40c745:	lea    rbp,[rsi+0x2]
  40c749:	call   0x408ef0
  40c74e:	movzx  edx,WORD PTR [rbx+0x4]
  40c752:	mov    r8,rbp
  40c755:	mov    r9d,0x278d00
  40c75b:	mov    rcx,rax
  40c75e:	mov    BYTE PTR [rsp+0x32],0x0
  40c763:	mov    QWORD PTR [rsp+0x38],rsi
  40c768:	mov    WORD PTR [rsp+0x30],dx
  40c76d:	mov    rdx,rdi
  40c770:	call   0x408ef0
  40c775:	movzx  edx,WORD PTR [rbx+0x6]
  40c779:	mov    r8,rbp
  40c77c:	mov    r9d,0x15180
  40c782:	mov    rcx,rax
  40c785:	mov    BYTE PTR [rsp+0x32],0x0
  40c78a:	mov    QWORD PTR [rsp+0x38],rsi
  40c78f:	mov    WORD PTR [rsp+0x30],dx
  40c794:	mov    rdx,rdi
  40c797:	call   0x408ef0
  40c79c:	mov    rbp,QWORD PTR [rip+0x2c829]        # 0x438fcc
  40c7a3:	mov    rdi,rax
  40c7a6:	jmp    0x40c405
  40c7ab:	mov    rax,rdi
  40c7ae:	jmp    0x40c2bd
  40c7b3:	call   QWORD PTR [rip+0x2c813]        # 0x438fcc
  40c7b9:	mov    DWORD PTR [rax],0x16
  40c7bf:	mov    rax,0xffffffffffffffff
  40c7c6:	jmp    0x40c2bd
  40c7cb:	mov    rbp,QWORD PTR [rip+0x2c7fa]        # 0x438fcc
  40c7d2:	mov    rdi,0xffffffffffffffff
  40c7d9:	call   rbp
  40c7db:	mov    DWORD PTR [rax],0x16
  40c7e1:	jmp    0x40c405
  40c7e6:	call   QWORD PTR [rip+0x2c7e0]        # 0x438fcc
  40c7ec:	mov    DWORD PTR [rax],0xc
  40c7f2:	mov    rax,0xffffffffffffffff
  40c7f9:	jmp    0x40c2bd
  40c7fe:	call   rbp
  40c800:	mov    DWORD PTR [rax],0x16
  40c806:	jmp    0x40c6a6
  40c80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c810:	push   rbp
  40c811:	push   rdi
  40c812:	push   rsi
  40c813:	push   rbx
  40c814:	sub    rsp,0x28
  40c818:	lea    eax,[rdx-0x3]
  40c81b:	mov    rsi,rdx
  40c81e:	cmp    eax,0xb
  40c821:	ja     0x40c880
  40c823:	movzx  eax,BYTE PTR [rcx]
  40c826:	lea    r8,[rip+0x1c393]        # 0x428bc0
  40c82d:	mov    rdx,rax
  40c830:	movzx  eax,BYTE PTR [r8+rax*1]
  40c835:	add    eax,esi
  40c837:	cmp    eax,0x11
  40c83a:	ja     0x40c880
  40c83c:	cdqe   
  40c83e:	lea    rbx,[rip+0x1cd3b]        # 0x429580
  40c845:	xor    ebp,ebp
  40c847:	shl    rax,0x4
  40c84b:	add    rbx,rax
  40c84e:	mov    rdi,QWORD PTR [rbx]
  40c851:	cmp    dl,BYTE PTR [rdi]
  40c853:	jne    0x40c875
  40c855:	lea    rdx,[rdi+0x1]
  40c859:	lea    r8d,[rsi-0x1]
  40c85d:	add    rcx,0x1
  40c861:	call   0x421d90
  40c866:	test   eax,eax
  40c868:	jne    0x40c875
  40c86a:	mov    esi,esi
  40c86c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40c870:	jne    0x40c875
  40c872:	mov    ebp,DWORD PTR [rbx+0x8]
  40c875:	mov    eax,ebp
  40c877:	add    rsp,0x28
  40c87b:	pop    rbx
  40c87c:	pop    rsi
  40c87d:	pop    rdi
  40c87e:	pop    rbp
  40c87f:	ret    
  40c880:	xor    ebp,ebp
  40c882:	mov    eax,ebp
  40c884:	add    rsp,0x28
  40c888:	pop    rbx
  40c889:	pop    rsi
  40c88a:	pop    rdi
  40c88b:	pop    rbp
  40c88c:	ret    
  40c88d:	nop    DWORD PTR [rax]
  40c890:	push   rbp
  40c891:	push   rdi
  40c892:	push   rsi
  40c893:	push   rbx
  40c894:	sub    rsp,0x28
  40c898:	lea    eax,[rdx-0x4]
  40c89b:	mov    rsi,rdx
  40c89e:	cmp    eax,0x4
  40c8a1:	ja     0x40c900
  40c8a3:	movzx  eax,BYTE PTR [rcx]
  40c8a6:	lea    r8,[rip+0x1c213]        # 0x428ac0
  40c8ad:	mov    rdx,rax
  40c8b0:	movzx  eax,BYTE PTR [r8+rax*1]
  40c8b5:	add    eax,esi
  40c8b7:	cmp    eax,0x9
  40c8ba:	ja     0x40c900
  40c8bc:	cdqe   
  40c8be:	lea    rbx,[rip+0x1cbbb]        # 0x429480
  40c8c5:	xor    ebp,ebp
  40c8c7:	shl    rax,0x4
  40c8cb:	add    rbx,rax
  40c8ce:	mov    rdi,QWORD PTR [rbx]
  40c8d1:	cmp    dl,BYTE PTR [rdi]
  40c8d3:	jne    0x40c8f5
  40c8d5:	lea    rdx,[rdi+0x1]
  40c8d9:	lea    r8d,[rsi-0x1]
  40c8dd:	add    rcx,0x1
  40c8e1:	call   0x421d90
  40c8e6:	test   eax,eax
  40c8e8:	jne    0x40c8f5
  40c8ea:	mov    esi,esi
  40c8ec:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40c8f0:	jne    0x40c8f5
  40c8f2:	mov    ebp,DWORD PTR [rbx+0x8]
  40c8f5:	mov    eax,ebp
  40c8f7:	add    rsp,0x28
  40c8fb:	pop    rbx
  40c8fc:	pop    rsi
  40c8fd:	pop    rdi
  40c8fe:	pop    rbp
  40c8ff:	ret    
  40c900:	xor    ebp,ebp
  40c902:	mov    eax,ebp
  40c904:	add    rsp,0x28
  40c908:	pop    rbx
  40c909:	pop    rsi
  40c90a:	pop    rdi
  40c90b:	pop    rbp
  40c90c:	ret    
  40c90d:	nop    DWORD PTR [rax]
  40c910:	push   rbx
  40c911:	sub    rsp,0x20
  40c915:	cmp    rcx,0xf
  40c919:	jbe    0x40c97c
  40c91b:	mov    eax,r8d
  40c91e:	mov    r9,rdx
  40c921:	cmp    r8d,DWORD PTR [rcx+0xb0]
  40c928:	lea    rdx,[rax+rax*2]
  40c92c:	lea    rdx,[rax+rdx*4]
  40c930:	mov    rax,QWORD PTR [rcx+0x78]
  40c934:	lea    rdx,[rax+rdx*8]
  40c938:	jae    0x40c9b3
  40c93a:	mov    eax,DWORD PTR [rdx+0x10]
  40c93d:	and    eax,0xfffff00
  40c942:	mov    DWORD PTR [rdx+0x10],eax
  40c945:	mov    r8d,DWORD PTR [r9+0x10]
  40c949:	and    r8d,0xf00000ff
  40c950:	or     eax,r8d
  40c953:	mov    r8,QWORD PTR [r9+0x18]
  40c957:	test   al,0x4
  40c959:	mov    DWORD PTR [rdx+0x10],eax
  40c95c:	mov    QWORD PTR [rdx+0x18],r8
  40c960:	jne    0x40c990
  40c962:	xor    eax,eax
  40c964:	and    DWORD PTR [r9+0x10],0xfffff00
  40c96c:	mov    WORD PTR [r9+0xe],ax
  40c971:	mov    rax,QWORD PTR [rdx+0x38]
  40c975:	test   rax,rax
  40c978:	je     0x40c97c
  40c97a:	call   rax
  40c97c:	xor    ebx,ebx
  40c97e:	mov    eax,ebx
  40c980:	add    rsp,0x20
  40c984:	pop    rbx
  40c985:	ret    
  40c986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c990:	movzx  eax,WORD PTR [rdx+0xe]
  40c994:	add    eax,0x1
  40c997:	cmp    ax,WORD PTR [rdx+0xc]
  40c99b:	mov    WORD PTR [rdx+0xe],ax
  40c99f:	jbe    0x40c962
  40c9a1:	test   BYTE PTR [rcx+0x10],0x4
  40c9a5:	mov    ebx,0xffffffff
  40c9aa:	je     0x40c97e
  40c9ac:	call   0x409220
  40c9b1:	jmp    0x40c97e
  40c9b3:	call   QWORD PTR [rip+0x2c5c3]        # 0x438f7c
  40c9b9:	mov    rcx,QWORD PTR [rip+0x170d0]        # 0x423a90
  40c9c0:	lea    rdx,[rax+0x60]
  40c9c4:	call   0x421e60
  40c9c9:	mov    ecx,0x1
  40c9ce:	call   0x4082e0
  40c9d3:	nop
  40c9d4:	xchg   ax,ax
  40c9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9e0:	push   rsi
  40c9e1:	push   rbx
  40c9e2:	sub    rsp,0x38
  40c9e6:	cmp    rcx,0xf
  40c9ea:	jbe    0x40ca3b
  40c9ec:	test   rdx,rdx
  40c9ef:	je     0x40ca3b
  40c9f1:	mov    eax,DWORD PTR [rdx+0x10]
  40c9f4:	mov    esi,eax
  40c9f6:	and    esi,0x8
  40c9f9:	jne    0x40ca3b
  40c9fb:	mov    rcx,QWORD PTR [rdx+0x18]
  40c9ff:	test   rcx,rcx
  40ca02:	je     0x40ca80
  40ca04:	mov    rbx,rdx
  40ca07:	movzx  edx,BYTE PTR [rcx]
  40ca0a:	cmp    dl,0x46
  40ca0d:	je     0x40ca34
  40ca0f:	jg     0x40ca51
  40ca11:	cmp    dl,0x23
  40ca14:	je     0x40ca62
  40ca16:	cmp    dl,0x30
  40ca19:	jne    0x40ca90
  40ca1b:	lea    rdx,[rsp+0x28]
  40ca20:	xor    r8d,r8d
  40ca23:	call   0x421d68
  40ca28:	test   eax,eax
  40ca2a:	mov    eax,DWORD PTR [rbx+0x10]
  40ca2d:	je     0x40ca70
  40ca2f:	mov    esi,0x1
  40ca34:	test   al,0x40
  40ca36:	jne    0x40ca42
  40ca38:	mov    DWORD PTR [rbx+0x18],esi
  40ca3b:	add    rsp,0x38
  40ca3f:	pop    rbx
  40ca40:	pop    rsi
  40ca41:	ret    
  40ca42:	mov    rcx,QWORD PTR [rbx+0x18]
  40ca46:	call   0x421e50
  40ca4b:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40ca4f:	jmp    0x40ca38
  40ca51:	cmp    dl,0x66
  40ca54:	je     0x40ca34
  40ca56:	cmp    dl,0x6e
  40ca59:	je     0x40ca34
  40ca5b:	cmp    dl,0x4e
  40ca5e:	jne    0x40ca2f
  40ca60:	jmp    0x40ca34
  40ca62:	xor    esi,esi
  40ca64:	cmp    BYTE PTR [rcx+0x1],0x66
  40ca68:	setne  sil
  40ca6c:	jmp    0x40ca34
  40ca6e:	xchg   ax,ax
  40ca70:	mov    rdx,QWORD PTR [rsp+0x28]
  40ca75:	xor    esi,esi
  40ca77:	cmp    BYTE PTR [rdx],0x0
  40ca7a:	setne  sil
  40ca7e:	jmp    0x40ca34
  40ca80:	mov    DWORD PTR [rdx+0x18],0x0
  40ca87:	jmp    0x40ca3b
  40ca89:	nop    DWORD PTR [rax+0x0]
  40ca90:	test   dl,dl
  40ca92:	jne    0x40ca2f
  40ca94:	jmp    0x40ca34
  40ca96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40caa0:	sub    rsp,0x28
  40caa4:	test   rcx,rcx
  40caa7:	je     0x40cb10
  40caa9:	mov    eax,DWORD PTR [rcx+0x10]
  40caac:	and    eax,0xf000
  40cab1:	cmp    eax,0x6000
  40cab6:	jne    0x40cb10
  40cab8:	mov    rcx,QWORD PTR [rcx+0x20]
  40cabc:	test   rcx,rcx
  40cabf:	je     0x40caea
  40cac1:	mov    r8d,DWORD PTR [rcx]
  40cac4:	xor    r9d,r9d
  40cac7:	add    rcx,0x8
  40cacb:	jmp    0x40cae4
  40cacd:	nop    DWORD PTR [rax]
  40cad0:	add    rcx,0x8
  40cad4:	test   r9b,r9b
  40cad7:	mov    rax,QWORD PTR [rcx-0x8]
  40cadb:	jne    0x40cb00
  40cadd:	cmp    rax,rdx
  40cae0:	sete   r9b
  40cae4:	sub    r8d,0x1
  40cae8:	jns    0x40cad0
  40caea:	call   QWORD PTR [rip+0x2c4dc]        # 0x438fcc
  40caf0:	mov    DWORD PTR [rax],0x2
  40caf6:	xor    eax,eax
  40caf8:	jmp    0x40cb05
  40cafa:	nop    WORD PTR [rax+rax*1+0x0]
  40cb00:	test   rax,rax
  40cb03:	je     0x40caea
  40cb05:	add    rsp,0x28
  40cb09:	ret    
  40cb0a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb10:	call   QWORD PTR [rip+0x2c4b6]        # 0x438fcc
  40cb16:	mov    DWORD PTR [rax],0x16
  40cb1c:	xor    eax,eax
  40cb1e:	add    rsp,0x28
  40cb22:	ret    
  40cb23:	nop    DWORD PTR [rax]
  40cb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb30:	push   rbp
  40cb31:	push   rdi
  40cb32:	push   rsi
  40cb33:	push   rbx
  40cb34:	sub    rsp,0x28
  40cb38:	test   rcx,rcx
  40cb3b:	mov    rdi,rdx
  40cb3e:	je     0x40cb90
  40cb40:	cmp    DWORD PTR [rcx],0x6
  40cb43:	jne    0x40cb90
  40cb45:	mov    rax,QWORD PTR [rcx+0x10]
  40cb49:	mov    edx,DWORD PTR [rax]
  40cb4b:	test   edx,edx
  40cb4d:	jle    0x40cbc0
  40cb4f:	test   rdi,rdi
  40cb52:	lea    rbx,[rax+0x8]
  40cb56:	je     0x40cbb0
  40cb58:	lea    eax,[rdx-0x1]
  40cb5b:	lea    rbp,[rbx+rax*8+0x8]
  40cb60:	jmp    0x40cb67
  40cb62:	cmp    rbx,rbp
  40cb65:	je     0x40cbc0
  40cb67:	add    rbx,0x8
  40cb6b:	mov    rsi,QWORD PTR [rbx-0x8]
  40cb6f:	mov    rdx,rdi
  40cb72:	mov    rcx,QWORD PTR [rsi+0x8]
  40cb76:	call   0x421db8
  40cb7b:	test   eax,eax
  40cb7d:	jne    0x40cb62
  40cb7f:	mov    rax,rsi
  40cb82:	add    rsp,0x28
  40cb86:	pop    rbx
  40cb87:	pop    rsi
  40cb88:	pop    rdi
  40cb89:	pop    rbp
  40cb8a:	ret    
  40cb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	xor    esi,esi
  40cb92:	call   QWORD PTR [rip+0x2c434]        # 0x438fcc
  40cb98:	mov    DWORD PTR [rax],0x16
  40cb9e:	mov    rax,rsi
  40cba1:	add    rsp,0x28
  40cba5:	pop    rbx
  40cba6:	pop    rsi
  40cba7:	pop    rdi
  40cba8:	pop    rbp
  40cba9:	ret    
  40cbaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cbb0:	mov    rsi,QWORD PTR [rax+0x8]
  40cbb4:	test   rsi,rsi
  40cbb7:	jne    0x40cb7f
  40cbb9:	nop    DWORD PTR [rax+0x0]
  40cbc0:	call   QWORD PTR [rip+0x2c406]        # 0x438fcc
  40cbc6:	xor    esi,esi
  40cbc8:	mov    DWORD PTR [rax],0x2
  40cbce:	jmp    0x40cb7f
  40cbd0:	push   r12
  40cbd2:	push   rbp
  40cbd3:	push   rdi
  40cbd4:	push   rsi
  40cbd5:	push   rbx
  40cbd6:	sub    rsp,0x20
  40cbda:	test   rcx,rcx
  40cbdd:	mov    rbp,rdx
  40cbe0:	mov    r12,r8
  40cbe3:	je     0x40cc60
  40cbe5:	mov    eax,DWORD PTR [rcx+0x10]
  40cbe8:	and    eax,0xf000
  40cbed:	cmp    eax,0x6000
  40cbf2:	jne    0x40cc60
  40cbf4:	mov    rax,QWORD PTR [rcx+0x20]
  40cbf8:	test   rax,rax
  40cbfb:	je     0x40cc45
  40cbfd:	mov    ebx,DWORD PTR [rax]
  40cbff:	lea    rsi,[rax+0x8]
  40cc03:	test   ebx,ebx
  40cc05:	je     0x40cc45
  40cc07:	test   rdx,rdx
  40cc0a:	je     0x40cc79
  40cc0c:	nop    DWORD PTR [rax+0x0]
  40cc10:	sub    ebx,0x1
  40cc13:	js     0x40cc45
  40cc15:	add    rsi,0x8
  40cc19:	mov    rdi,QWORD PTR [rsi-0x8]
  40cc1d:	mov    rdx,rbp
  40cc20:	mov    rcx,rdi
  40cc23:	call   0x40cb30
  40cc28:	test   rax,rax
  40cc2b:	je     0x40cc10
  40cc2d:	test   r12,r12
  40cc30:	jne    0x40cc10
  40cc32:	test   rdi,rdi
  40cc35:	mov    rax,rdi
  40cc38:	je     0x40cc45
  40cc3a:	add    rsp,0x20
  40cc3e:	pop    rbx
  40cc3f:	pop    rsi
  40cc40:	pop    rdi
  40cc41:	pop    rbp
  40cc42:	pop    r12
  40cc44:	ret    
  40cc45:	call   QWORD PTR [rip+0x2c381]        # 0x438fcc
  40cc4b:	mov    DWORD PTR [rax],0x2
  40cc51:	xor    eax,eax
  40cc53:	add    rsp,0x20
  40cc57:	pop    rbx
  40cc58:	pop    rsi
  40cc59:	pop    rdi
  40cc5a:	pop    rbp
  40cc5b:	pop    r12
  40cc5d:	ret    
  40cc5e:	xchg   ax,ax
  40cc60:	call   QWORD PTR [rip+0x2c366]        # 0x438fcc
  40cc66:	mov    DWORD PTR [rax],0x16
  40cc6c:	xor    eax,eax
  40cc6e:	add    rsp,0x20
  40cc72:	pop    rbx
  40cc73:	pop    rsi
  40cc74:	pop    rdi
  40cc75:	pop    rbp
  40cc76:	pop    r12
  40cc78:	ret    
  40cc79:	mov    rax,QWORD PTR [rax+0x8]
  40cc7d:	jmp    0x40cc3a
  40cc7f:	nop
  40cc80:	push   rbx
  40cc81:	sub    rsp,0x20
  40cc85:	test   rcx,rcx
  40cc88:	je     0x40cce0
  40cc8a:	cmp    DWORD PTR [rcx],0x6
  40cc8d:	jne    0x40cce0
  40cc8f:	mov    r8,QWORD PTR [rcx+0x10]
  40cc93:	mov    eax,DWORD PTR [r8]
  40cc96:	add    r8,0x8
  40cc9a:	jmp    0x40ccad
  40cc9c:	nop    DWORD PTR [rax+0x0]
  40cca0:	lea    rcx,[r8+0x8]
  40cca4:	cmp    QWORD PTR [rcx-0x8],rdx
  40cca8:	je     0x40ccd0
  40ccaa:	mov    r8,rcx
  40ccad:	sub    eax,0x1
  40ccb0:	lea    ecx,[rax+0x1]
  40ccb3:	test   ecx,ecx
  40ccb5:	jg     0x40cca0
  40ccb7:	mov    ebx,0x16
  40ccbc:	call   QWORD PTR [rip+0x2c30a]        # 0x438fcc
  40ccc2:	mov    DWORD PTR [rax],ebx
  40ccc4:	xor    eax,eax
  40ccc6:	add    rsp,0x20
  40ccca:	pop    rbx
  40cccb:	ret    
  40cccc:	nop    DWORD PTR [rax+0x0]
  40ccd0:	test   eax,eax
  40ccd2:	jne    0x40ccf4
  40ccd4:	mov    ebx,0x2
  40ccd9:	jmp    0x40ccbc
  40ccdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cce0:	call   QWORD PTR [rip+0x2c2e6]        # 0x438fcc
  40cce6:	mov    DWORD PTR [rax],0x16
  40ccec:	xor    eax,eax
  40ccee:	add    rsp,0x20
  40ccf2:	pop    rbx
  40ccf3:	ret    
  40ccf4:	mov    rax,QWORD PTR [r8+0x8]
  40ccf8:	add    rsp,0x20
  40ccfc:	pop    rbx
  40ccfd:	ret    
  40ccfe:	xchg   ax,ax
  40cd00:	push   rsi
  40cd01:	push   rbx
  40cd02:	sub    rsp,0x38
  40cd06:	movzx  eax,BYTE PTR [rcx]
  40cd09:	mov    rsi,rdx
  40cd0c:	cmp    al,0x78
  40cd0e:	mov    BYTE PTR [rdx],al
  40cd10:	ja     0x40ce63
  40cd16:	lea    r9,[rip+0x1b6b3]        # 0x4283d0
  40cd1d:	movsxd rax,DWORD PTR [r9+rax*4]
  40cd21:	add    r9,rax
  40cd24:	jmp    r9
  40cd27:	nop    WORD PTR [rax+rax*1+0x0]
  40cd30:	mov    ebx,0x1
  40cd35:	mov    BYTE PTR [rsi],r8b
  40cd38:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd40:	mov    eax,ebx
  40cd42:	add    rsp,0x38
  40cd46:	pop    rbx
  40cd47:	pop    rsi
  40cd48:	ret    
  40cd49:	nop    DWORD PTR [rax+0x0]
  40cd50:	xor    ebx,ebx
  40cd52:	jmp    0x40cd40
  40cd54:	mov    BYTE PTR [rdx],0xb
  40cd57:	mov    ebx,0x1
  40cd5c:	jmp    0x40cd40
  40cd5e:	xchg   ax,ax
  40cd60:	mov    BYTE PTR [rdx],0xd
  40cd63:	mov    ebx,0x1
  40cd68:	jmp    0x40cd40
  40cd6a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd70:	mov    BYTE PTR [rdx],0x9
  40cd73:	mov    ebx,0x1
  40cd78:	jmp    0x40cd40
  40cd7a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd80:	cmp    BYTE PTR [rcx+0x1],0xa
  40cd84:	mov    ebx,0x1
  40cd89:	jne    0x40cd40
  40cd8b:	mov    bl,0x2
  40cd8d:	jmp    0x40cd35
  40cd8f:	nop
  40cd90:	movzx  eax,BYTE PTR [rcx]
  40cd93:	mov    ebx,0x1
  40cd98:	mov    BYTE PTR [rsp+0x20],al
  40cd9c:	mov    eax,ebx
  40cd9e:	movzx  edx,BYTE PTR [rcx+rax*1]
  40cda2:	cmp    dl,0x7f
  40cda5:	ja     0x40ceaa
  40cdab:	lea    r9,[rip+0x1f50e]        # 0x42c2c0
  40cdb2:	movzx  r8d,dl
  40cdb6:	test   BYTE PTR [r9+r8*4+0x2],0x1
  40cdbc:	je     0x40ceaa
  40cdc2:	cmp    ebx,0x2
  40cdc5:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  40cdc9:	je     0x40cea0
  40cdcf:	mov    ebx,0x2
  40cdd4:	jmp    0x40cd9c
  40cdd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cde0:	movzx  eax,BYTE PTR [rcx+0x1]
  40cde4:	mov    ebx,0x1
  40cde9:	cmp    al,0x7f
  40cdeb:	ja     0x40cd40
  40cdf1:	lea    rdx,[rip+0x1f4c8]        # 0x42c2c0
  40cdf8:	movzx  r8d,al
  40cdfc:	test   DWORD PTR [rdx+r8*4],0x70000
  40ce04:	je     0x40cd40
  40ce0a:	movzx  ecx,BYTE PTR [rcx+0x2]
  40ce0e:	mov    BYTE PTR [rsp+0x20],al
  40ce12:	cmp    cl,0x7f
  40ce15:	movzx  eax,cl
  40ce18:	ja     0x40ced5
  40ce1e:	test   DWORD PTR [rdx+rax*4],0x70000
  40ce25:	je     0x40ced5
  40ce2b:	mov    BYTE PTR [rsp+0x21],cl
  40ce2f:	mov    ebx,0x3
  40ce34:	mov    eax,0x2
  40ce39:	lea    rcx,[rsp+0x20]
  40ce3e:	mov    r8d,0x10
  40ce44:	xor    edx,edx
  40ce46:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40ce4b:	call   0x421d60
  40ce50:	mov    BYTE PTR [rsi],al
  40ce52:	jmp    0x40cd40
  40ce57:	nop    WORD PTR [rax+rax*1+0x0]
  40ce60:	mov    BYTE PTR [rdx],0x7
  40ce63:	mov    ebx,0x1
  40ce68:	mov    eax,ebx
  40ce6a:	add    rsp,0x38
  40ce6e:	pop    rbx
  40ce6f:	pop    rsi
  40ce70:	ret    
  40ce71:	mov    BYTE PTR [rdx],0x8
  40ce74:	mov    ebx,0x1
  40ce79:	jmp    0x40cd40
  40ce7e:	xchg   ax,ax
  40ce80:	mov    BYTE PTR [rdx],0xc
  40ce83:	mov    ebx,0x1
  40ce88:	jmp    0x40cd40
  40ce8d:	nop    DWORD PTR [rax]
  40ce90:	mov    BYTE PTR [rdx],0xa
  40ce93:	mov    ebx,0x1
  40ce98:	jmp    0x40cd40
  40ce9d:	nop    DWORD PTR [rax]
  40cea0:	mov    ebx,0x3
  40cea5:	mov    eax,0x3
  40ceaa:	lea    rcx,[rsp+0x20]
  40ceaf:	xor    edx,edx
  40ceb1:	mov    r8d,0x8
  40ceb7:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40cebc:	call   0x421d60
  40cec1:	mov    edx,0xff
  40cec6:	cmp    eax,0xff
  40cecb:	cmova  eax,edx
  40cece:	mov    BYTE PTR [rsi],al
  40ced0:	jmp    0x40cd40
  40ced5:	mov    ebx,0x2
  40ceda:	mov    eax,0x1
  40cedf:	jmp    0x40ce39
  40cee4:	xchg   ax,ax
  40cee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cef0:	push   r14
  40cef2:	push   r13
  40cef4:	push   r12
  40cef6:	push   rbp
  40cef7:	push   rdi
  40cef8:	push   rsi
  40cef9:	push   rbx
  40cefa:	sub    rsp,0x30
  40cefe:	movzx  esi,BYTE PTR [rcx]
  40cf01:	movzx  r8d,BYTE PTR [rcx+0x1]
  40cf06:	mov    r13d,0x1
  40cf0c:	lea    rax,[rsp+0x2c]
  40cf11:	mov    rbp,rdx
  40cf14:	test   rdx,rdx
  40cf17:	lea    r9,[rcx+0x1]
  40cf1b:	mov    rbx,rcx
  40cf1e:	mov    DWORD PTR [rsp+0x2c],0x0
  40cf26:	cmove  rbp,rax
  40cf2a:	movabs r12,0x200000000000011
  40cf34:	cmp    sil,r8b
  40cf37:	je     0x40cf69
  40cf39:	cmp    r8b,0xa
  40cf3d:	lea    r14,[rbx+0x1]
  40cf41:	lea    rdi,[r9+0x1]
  40cf45:	mov    BYTE PTR [rbx],r8b
  40cf48:	je     0x40d010
  40cf4e:	cmp    r8b,0x5c
  40cf52:	je     0x40cfd2
  40cf54:	test   r8b,r8b
  40cf57:	je     0x40cfc1
  40cf59:	movzx  r8d,BYTE PTR [r9+0x1]
  40cf5e:	mov    rbx,r14
  40cf61:	mov    r9,rdi
  40cf64:	cmp    sil,r8b
  40cf67:	jne    0x40cf39
  40cf69:	lea    rdi,[r9+0x1]
  40cf6d:	mov    BYTE PTR [rbx],0x0
  40cf70:	movzx  esi,BYTE PTR [rdi]
  40cf73:	cmp    sil,0x7f
  40cf77:	ja     0x40cf91
  40cf79:	lea    rdx,[rip+0x1f340]        # 0x42c2c0
  40cf80:	movzx  eax,sil
  40cf84:	test   DWORD PTR [rdx+rax*4],0xc01
  40cf8b:	jne    0x40d020
  40cf91:	cmp    sil,0x27
  40cf95:	je     0x40d080
  40cf9b:	cmp    sil,0x2f
  40cf9f:	je     0x40d0a1
  40cfa5:	cmp    sil,0x22
  40cfa9:	je     0x40d080
  40cfaf:	mov    rax,rdi
  40cfb2:	add    rsp,0x30
  40cfb6:	pop    rbx
  40cfb7:	pop    rsi
  40cfb8:	pop    rdi
  40cfb9:	pop    rbp
  40cfba:	pop    r12
  40cfbc:	pop    r13
  40cfbe:	pop    r14
  40cfc0:	ret    
  40cfc1:	xor    eax,eax
  40cfc3:	add    rsp,0x30
  40cfc7:	pop    rbx
  40cfc8:	pop    rsi
  40cfc9:	pop    rdi
  40cfca:	pop    rbp
  40cfcb:	pop    r12
  40cfcd:	pop    r13
  40cfcf:	pop    r14
  40cfd1:	ret    
  40cfd2:	movzx  r8d,BYTE PTR [r9+0x1]
  40cfd7:	cmp    r8b,0xa
  40cfdb:	je     0x40d090
  40cfe1:	cmp    sil,0x27
  40cfe5:	je     0x40d040
  40cfe7:	mov    r8d,0xa
  40cfed:	mov    rdx,rbx
  40cff0:	mov    rcx,rdi
  40cff3:	call   0x40cd00
  40cff8:	test   eax,eax
  40cffa:	je     0x40cfc1
  40cffc:	mov    eax,eax
  40cffe:	mov    rbx,r14
  40d001:	lea    r9,[rdi+rax*1]
  40d005:	movzx  r8d,BYTE PTR [r9]
  40d009:	jmp    0x40cf34
  40d00e:	xchg   ax,ax
  40d010:	add    DWORD PTR [rbp+0x0],0x1
  40d014:	jmp    0x40cf59
  40d019:	nop    DWORD PTR [rax+0x0]
  40d020:	add    rdi,0x1
  40d024:	cmp    sil,0xa
  40d028:	jne    0x40cf70
  40d02e:	add    DWORD PTR [rbp+0x0],0x1
  40d032:	jmp    0x40cf70
  40d037:	nop    WORD PTR [rax+rax*1+0x0]
  40d040:	lea    ecx,[r8-0x23]
  40d044:	cmp    cl,0x39
  40d047:	ja     0x40d070
  40d049:	mov    rax,r13
  40d04c:	shl    rax,cl
  40d04f:	test   rax,r12
  40d052:	je     0x40d070
  40d054:	mov    BYTE PTR [rbx],r8b
  40d057:	add    r9,0x2
  40d05b:	movzx  r8d,BYTE PTR [r9]
  40d05f:	mov    rbx,r14
  40d062:	jmp    0x40cf34
  40d067:	nop    WORD PTR [rax+rax*1+0x0]
  40d070:	mov    r9,rdi
  40d073:	mov    rbx,r14
  40d076:	jmp    0x40cf34
  40d07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d080:	lea    r9,[rdi+0x1]
  40d084:	movzx  r8d,BYTE PTR [rdi+0x1]
  40d089:	jmp    0x40cf34
  40d08e:	xchg   ax,ax
  40d090:	add    DWORD PTR [rbp+0x0],0x1
  40d094:	add    r9,0x2
  40d098:	movzx  r8d,BYTE PTR [r9]
  40d09c:	jmp    0x40cf34
  40d0a1:	movzx  eax,BYTE PTR [rdi+0x1]
  40d0a5:	cmp    al,0x2a
  40d0a7:	je     0x40d0d0
  40d0a9:	cmp    al,0x2f
  40d0ab:	jne    0x40d110
  40d0ad:	mov    rcx,rdi
  40d0b0:	mov    edx,0xa
  40d0b5:	call   0x421dc0
  40d0ba:	test   rax,rax
  40d0bd:	mov    rdi,rax
  40d0c0:	jne    0x40cf70
  40d0c6:	jmp    0x40cfaf
  40d0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0d0:	lea    rcx,[rdi+0x2]
  40d0d4:	lea    rdx,[rip+0x1b4d9]        # 0x4285b4
  40d0db:	call   0x421d70
  40d0e0:	test   rax,rax
  40d0e3:	je     0x40d110
  40d0e5:	cmp    rdi,rax
  40d0e8:	jae    0x40d120
  40d0ea:	mov    edx,0x2f
  40d0ef:	jmp    0x40d0f9
  40d0f1:	cmp    rdi,rax
  40d0f4:	je     0x40d120
  40d0f6:	movzx  edx,BYTE PTR [rdi]
  40d0f9:	add    rdi,0x1
  40d0fd:	cmp    dl,0xa
  40d100:	jne    0x40d0f1
  40d102:	add    DWORD PTR [rbp+0x0],0x1
  40d106:	jmp    0x40d0f1
  40d108:	nop    DWORD PTR [rax+rax*1+0x0]
  40d110:	xor    edi,edi
  40d112:	jmp    0x40cfaf
  40d117:	nop    WORD PTR [rax+rax*1+0x0]
  40d120:	lea    rdi,[rax+0x2]
  40d124:	jmp    0x40cf70
  40d129:	nop    DWORD PTR [rax+0x0]
  40d130:	push   r15
  40d132:	push   r14
  40d134:	push   r13
  40d136:	push   r12
  40d138:	push   rbp
  40d139:	push   rdi
  40d13a:	push   rsi
  40d13b:	push   rbx
  40d13c:	sub    rsp,0xe8
  40d143:	test   rcx,rcx
  40d146:	mov    rbx,rcx
  40d149:	mov    rbp,rdx
  40d14c:	mov    rdi,r8
  40d14f:	je     0x40dcda
  40d155:	mov    rax,QWORD PTR [rip+0x27c04]        # 0x434d60
  40d15c:	test   rax,rax
  40d15f:	je     0x40d81c
  40d165:	movzx  r8d,BYTE PTR [rbx]
  40d169:	cmp    BYTE PTR [rax+r8*1],0x0
  40d16e:	mov    rcx,r8
  40d171:	je     0x40d183
  40d173:	add    rbx,0x1
  40d177:	movzx  edx,BYTE PTR [rbx]
  40d17a:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d17e:	mov    rcx,rdx
  40d181:	jne    0x40d173
  40d183:	test   cl,cl
  40d185:	je     0x40d683
  40d18b:	lea    rcx,[rdi+0x19]
  40d18f:	call   0x409ce0
  40d194:	lea    rcx,[rax+0x18]
  40d198:	mov    rsi,rax
  40d19b:	mov    rdx,rbp
  40d19e:	mov    r8,rdi
  40d1a1:	mov    DWORD PTR [rax],0x6
  40d1a7:	lea    rbp,[rsp+0x90]
  40d1af:	mov    QWORD PTR [rax+0x8],rcx
  40d1b3:	lea    r13,[rsi+0x10]
  40d1b7:	call   0x421e08
  40d1bc:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  40d1c1:	mov    ecx,0x38
  40d1c6:	lea    r12,[rbp+0x2]
  40d1ca:	call   0x409ce0
  40d1cf:	mov    QWORD PTR [rsi+0x10],rax
  40d1d3:	mov    DWORD PTR [rax],0x0
  40d1d9:	mov    DWORD PTR [rax+0x4],0x6
  40d1e0:	lea    rax,[rsp+0x70]
  40d1e5:	mov    QWORD PTR [rsp+0x48],rax
  40d1ea:	lea    rax,[rsp+0x98]
  40d1f2:	mov    QWORD PTR [rsp+0x38],rax
  40d1f7:	mov    rax,QWORD PTR [rip+0x27b62]        # 0x434d60
  40d1fe:	test   rax,rax
  40d201:	jne    0x40d214
  40d203:	jmp    0x40d5e5
  40d208:	nop    DWORD PTR [rax+rax*1+0x0]
  40d210:	add    rbx,0x1
  40d214:	movzx  ecx,BYTE PTR [rbx]
  40d217:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d21b:	mov    rdx,rcx
  40d21e:	jne    0x40d210
  40d220:	cmp    cl,0x7f
  40d223:	ja     0x40d2c0
  40d229:	movzx  eax,cl
  40d22c:	lea    rcx,[rip+0x1f08d]        # 0x42c2c0
  40d233:	test   DWORD PTR [rcx+rax*4],0x180040
  40d23a:	je     0x40d2c0
  40d240:	mov    rax,QWORD PTR [rip+0x27b99]        # 0x434de0
  40d247:	lea    rdi,[rbx+0x1]
  40d24b:	test   rax,rax
  40d24e:	je     0x40dc3a
  40d254:	movzx  edx,BYTE PTR [rbx+0x1]
  40d258:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d25c:	je     0x40d26d
  40d25e:	xchg   ax,ax
  40d260:	add    rdi,0x1
  40d264:	movzx  edx,BYTE PTR [rdi]
  40d267:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d26b:	jne    0x40d260
  40d26d:	xor    eax,eax
  40d26f:	cmp    BYTE PTR [rdi-0x1],0x3a
  40d273:	sete   al
  40d276:	sub    rdi,rax
  40d279:	mov    rax,QWORD PTR [rip+0x27ad0]        # 0x434d50
  40d280:	mov    r8,rdi
  40d283:	sub    r8,rbx
  40d286:	test   rax,rax
  40d289:	jne    0x40d294
  40d28b:	jmp    0x40dc21
  40d290:	add    rdi,0x1
  40d294:	movzx  ecx,BYTE PTR [rdi]
  40d297:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d29b:	mov    rdx,rcx
  40d29e:	jne    0x40d290
  40d2a0:	lea    r14,[rip+0x1b315]        # 0x4285bc
  40d2a7:	cmp    dl,0x3d
  40d2aa:	ja     0x40d4f2
  40d2b0:	movzx  eax,dl
  40d2b3:	movsxd rax,DWORD PTR [r14+rax*4]
  40d2b7:	add    rax,r14
  40d2ba:	jmp    rax
  40d2bc:	nop    DWORD PTR [rax+0x0]
  40d2c0:	cmp    dl,0x23
  40d2c3:	je     0x40d3b4
  40d2c9:	cmp    dl,0x3c
  40d2cc:	je     0x40d3d0
  40d2d2:	test   dl,dl
  40d2d4:	je     0x40d324
  40d2d6:	mov    rcx,QWORD PTR [rsi+0x10]
  40d2da:	call   0x421e50
  40d2df:	mov    rcx,rsi
  40d2e2:	call   0x421e50
  40d2e7:	xor    eax,eax
  40d2e9:	add    rsp,0xe8
  40d2f0:	pop    rbx
  40d2f1:	pop    rsi
  40d2f2:	pop    rdi
  40d2f3:	pop    rbp
  40d2f4:	pop    r12
  40d2f6:	pop    r13
  40d2f8:	pop    r14
  40d2fa:	pop    r15
  40d2fc:	ret    
  40d2fd:	add    rdi,0x1
  40d301:	mov    rdx,rbx
  40d304:	mov    QWORD PTR [rsp+0x20],0x0
  40d30d:	xor    r9d,r9d
  40d310:	mov    rcx,r13
  40d313:	mov    rbx,rdi
  40d316:	call   0x409df0
  40d31b:	test   rbx,rbx
  40d31e:	jne    0x40d1f7
  40d324:	mov    r15,QWORD PTR [rsi+0x10]
  40d328:	mov    edx,DWORD PTR [r15]
  40d32b:	test   edx,edx
  40d32d:	je     0x40dced
  40d333:	cmp    edx,0x1
  40d336:	mov    rax,rsi
  40d339:	jle    0x40d2e9
  40d33b:	lea    r12d,[rdx-0x2]
  40d33f:	xor    edi,edi
  40d341:	add    r12,0x1
  40d345:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  40d34a:	mov    ebx,edi
  40d34c:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  40d351:	mov    r13,QWORD PTR [rbp+0x8]
  40d355:	jmp    0x40d37a
  40d357:	nop    WORD PTR [rax+rax*1+0x0]
  40d360:	lea    eax,[rbx+0x1]
  40d363:	sub    ebx,0x1
  40d366:	cmp    ebx,0xffffffff
  40d369:	cdqe   
  40d36b:	mov    QWORD PTR [r15+rax*8+0x8],r14
  40d370:	movsxd rax,ebx
  40d373:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  40d378:	je     0x40d3b0
  40d37a:	mov    rcx,QWORD PTR [r14+0x8]
  40d37e:	mov    rdx,r13
  40d381:	call   0x421db8
  40d386:	test   eax,eax
  40d388:	jg     0x40d360
  40d38a:	add    ebx,0x1
  40d38d:	add    rdi,0x1
  40d391:	movsxd rbx,ebx
  40d394:	cmp    rdi,r12
  40d397:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  40d39c:	jne    0x40d345
  40d39e:	mov    rax,rsi
  40d3a1:	jmp    0x40d2e9
  40d3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3b0:	xor    ebx,ebx
  40d3b2:	jmp    0x40d38d
  40d3b4:	mov    rcx,rbx
  40d3b7:	mov    edx,0xa
  40d3bc:	call   0x421dc0
  40d3c1:	mov    rbx,rax
  40d3c4:	jmp    0x40d31b
  40d3c9:	nop    DWORD PTR [rax+0x0]
  40d3d0:	mov    eax,DWORD PTR [rip+0x165fa]        # 0x4239d0
  40d3d6:	mov    DWORD PTR [rsp+0x54],eax
  40d3da:	lea    rax,[rbx+0x1]
  40d3de:	mov    QWORD PTR [rsp+0x40],rax
  40d3e3:	movzx  eax,BYTE PTR [rbx+0x1]
  40d3e7:	cmp    al,0x7f
  40d3e9:	ja     0x40d460
  40d3eb:	lea    r10,[rip+0x1eece]        # 0x42c2c0
  40d3f2:	movzx  edx,al
  40d3f5:	test   DWORD PTR [r10+rdx*4],0x180040
  40d3fd:	je     0x40d460
  40d3ff:	mov    rax,QWORD PTR [rip+0x279da]        # 0x434de0
  40d406:	lea    rdi,[rbx+0x2]
  40d40a:	test   rax,rax
  40d40d:	je     0x40dd37
  40d413:	movzx  edx,BYTE PTR [rbx+0x2]
  40d417:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d41b:	je     0x40d42d
  40d41d:	nop    DWORD PTR [rax]
  40d420:	add    rdi,0x1
  40d424:	movzx  edx,BYTE PTR [rdi]
  40d427:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d42b:	jne    0x40d420
  40d42d:	mov    r14,rdi
  40d430:	sub    r14,QWORD PTR [rsp+0x40]
  40d435:	cmp    r14,0x40
  40d439:	ja     0x40d451
  40d43b:	mov    DWORD PTR [rsp+0x70],0x1
  40d443:	movzx  eax,BYTE PTR [rdi]
  40d446:	cmp    al,0x7f
  40d448:	movzx  edx,al
  40d44b:	jbe    0x40d730
  40d451:	mov    eax,DWORD PTR [rsp+0x54]
  40d455:	mov    DWORD PTR [rip+0x16575],eax        # 0x4239d0
  40d45b:	jmp    0x40d2d6
  40d460:	cmp    al,0x21
  40d462:	je     0x40d696
  40d468:	cmp    al,0x3f
  40d46a:	jne    0x40d2d6
  40d470:	mov    rcx,QWORD PTR [rsp+0x40]
  40d475:	mov    edx,0x3e
  40d47a:	call   0x421dc0
  40d47f:	test   rax,rax
  40d482:	je     0x40d2d6
  40d488:	lea    rbx,[rax+0x1]
  40d48c:	test   rbx,rbx
  40d48f:	je     0x40d2d6
  40d495:	cmp    BYTE PTR [rbx],0x2c
  40d498:	jne    0x40d1f7
  40d49e:	add    rbx,0x1
  40d4a2:	jmp    0x40d31b
  40d4a7:	mov    rax,QWORD PTR [rip+0x278a2]        # 0x434d50
  40d4ae:	lea    r15,[rdi+0x1]
  40d4b2:	test   rax,rax
  40d4b5:	je     0x40dd50
  40d4bb:	movzx  edx,BYTE PTR [rdi+0x1]
  40d4bf:	mov    rdi,r15
  40d4c2:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4c6:	mov    rcx,rdx
  40d4c9:	je     0x40d4e0
  40d4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4d0:	add    rdi,0x1
  40d4d4:	movzx  edx,BYTE PTR [rdi]
  40d4d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4db:	mov    rcx,rdx
  40d4de:	jne    0x40d4d0
  40d4e0:	cmp    cl,0x3a
  40d4e3:	mov    edx,ecx
  40d4e5:	je     0x40d4f0
  40d4e7:	cmp    cl,0x3d
  40d4ea:	jne    0x40d2a7
  40d4f0:	mov    edx,ecx
  40d4f2:	mov    r15,rdi
  40d4f5:	cmp    dl,0xa
  40d4f8:	lea    rax,[rdi+0x2]
  40d4fc:	lea    r14,[r15+0x1]
  40d500:	je     0x40d523
  40d502:	cmp    dl,0x2c
  40d505:	je     0x40d5f4
  40d50b:	test   dl,dl
  40d50d:	je     0x40d7f2
  40d513:	movzx  edx,BYTE PTR [r14]
  40d517:	mov    r15,r14
  40d51a:	lea    r14,[r15+0x1]
  40d51e:	cmp    dl,0xa
  40d521:	jne    0x40d502
  40d523:	cmp    r14,rax
  40d526:	jbe    0x40d5f4
  40d52c:	cmp    BYTE PTR [r14-0x2],0x5c
  40d531:	jne    0x40d539
  40d533:	cmp    BYTE PTR [r14],0x0
  40d537:	jne    0x40d513
  40d539:	mov    rax,r14
  40d53c:	mov    rdx,rbx
  40d53f:	mov    r9,rdi
  40d542:	sub    rax,rdi
  40d545:	mov    rcx,r13
  40d548:	mov    rbx,r14
  40d54b:	sub    rax,0x1
  40d54f:	mov    QWORD PTR [rsp+0x20],rax
  40d554:	call   0x409df0
  40d559:	test   rax,rax
  40d55c:	jne    0x40d61d
  40d562:	jmp    0x40d1f7
  40d567:	nop    WORD PTR [rax+rax*1+0x0]
  40d570:	lea    r15,[rdi+0x1]
  40d574:	jmp    0x40d593
  40d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d580:	cmp    al,dl
  40d582:	je     0x40d6b9
  40d588:	cmp    al,0x5c
  40d58a:	je     0x40d6f0
  40d590:	mov    r15,r14
  40d593:	lea    r14,[r15+0x1]
  40d597:	movzx  eax,BYTE PTR [r14-0x1]
  40d59c:	test   al,al
  40d59e:	jne    0x40d580
  40d5a0:	mov    rax,r15
  40d5a3:	mov    rdx,rbx
  40d5a6:	mov    r9,rdi
  40d5a9:	sub    rax,rdi
  40d5ac:	mov    rcx,r13
  40d5af:	mov    rbx,r15
  40d5b2:	mov    QWORD PTR [rsp+0x20],rax
  40d5b7:	call   0x409df0
  40d5bc:	test   rax,rax
  40d5bf:	je     0x40d1f7
  40d5c5:	mov    r8d,DWORD PTR [rip+0x16404]        # 0x4239d0
  40d5cc:	test   r8d,r8d
  40d5cf:	jne    0x40d31b
  40d5d5:	lea    rcx,[rax+0x10]
  40d5d9:	xor    edx,edx
  40d5db:	call   0x40cef0
  40d5e0:	jmp    0x40d31b
  40d5e5:	mov    ecx,0xc
  40d5ea:	call   0x4097f0
  40d5ef:	jmp    0x40d214
  40d5f4:	mov    rax,r14
  40d5f7:	mov    rdx,rbx
  40d5fa:	mov    r9,rdi
  40d5fd:	sub    rax,rdi
  40d600:	mov    rcx,r13
  40d603:	mov    rbx,r14
  40d606:	sub    rax,0x1
  40d60a:	mov    QWORD PTR [rsp+0x20],rax
  40d60f:	call   0x409df0
  40d614:	test   rax,rax
  40d617:	je     0x40d31b
  40d61d:	add    rax,0x10
  40d621:	jmp    0x40d627
  40d623:	add    rax,0x1
  40d627:	cmp    BYTE PTR [rax],0xa
  40d62a:	je     0x40d623
  40d62c:	mov    edx,0xa
  40d631:	mov    rcx,rax
  40d634:	call   0x421dc0
  40d639:	test   rax,rax
  40d63c:	je     0x40d31b
  40d642:	cmp    BYTE PTR [rax-0x1],0x5c
  40d646:	jne    0x40d627
  40d648:	movzx  ecx,BYTE PTR [rax]
  40d64b:	lea    rdx,[rax-0x1]
  40d64f:	lea    r8,[rdx+0x1]
  40d653:	test   cl,cl
  40d655:	mov    BYTE PTR [rdx],cl
  40d657:	je     0x40d31b
  40d65d:	cmp    cl,0x5c
  40d660:	jne    0x40d66a
  40d662:	cmp    BYTE PTR [rax+0x1],0xa
  40d666:	cmove  r8,rdx
  40d66a:	add    rax,0x1
  40d66e:	movzx  ecx,BYTE PTR [rax]
  40d671:	mov    rdx,r8
  40d674:	lea    r8,[rdx+0x1]
  40d678:	test   cl,cl
  40d67a:	mov    BYTE PTR [rdx],cl
  40d67c:	jne    0x40d65d
  40d67e:	jmp    0x40d31b
  40d683:	call   QWORD PTR [rip+0x2b943]        # 0x438fcc
  40d689:	mov    DWORD PTR [rax],0x2
  40d68f:	xor    eax,eax
  40d691:	jmp    0x40d2e9
  40d696:	mov    rcx,QWORD PTR [rsp+0x40]
  40d69b:	lea    rdx,[rip+0x1af15]        # 0x4285b7
  40d6a2:	call   0x421d70
  40d6a7:	test   rax,rax
  40d6aa:	je     0x40d2d6
  40d6b0:	lea    rbx,[rax+0x3]
  40d6b4:	jmp    0x40d48c
  40d6b9:	mov    rax,r14
  40d6bc:	mov    r9,rdi
  40d6bf:	mov    rdx,rbx
  40d6c2:	sub    rax,rdi
  40d6c5:	mov    rcx,r13
  40d6c8:	mov    QWORD PTR [rsp+0x20],rax
  40d6cd:	call   0x409df0
  40d6d2:	test   rax,rax
  40d6d5:	je     0x40d6e5
  40d6d7:	mov    edx,DWORD PTR [rip+0x162f3]        # 0x4239d0
  40d6dd:	test   edx,edx
  40d6df:	je     0x40dccd
  40d6e5:	mov    rbx,r14
  40d6e8:	jmp    0x40d1f7
  40d6ed:	nop    DWORD PTR [rax]
  40d6f0:	mov    rcx,r15
  40d6f3:	add    r15,0x2
  40d6f7:	movzx  eax,BYTE PTR [rcx+0x1]
  40d6fb:	test   al,al
  40d6fd:	je     0x40ddfe
  40d703:	cmp    al,0x5c
  40d705:	je     0x40d70f
  40d707:	cmp    al,dl
  40d709:	jne    0x40d593
  40d70f:	cmp    BYTE PTR [rcx+0x2],0x0
  40d713:	mov    rax,r15
  40d716:	lea    r15,[rcx+0x3]
  40d71a:	jne    0x40d593
  40d720:	mov    r15,rax
  40d723:	jmp    0x40d5a0
  40d728:	nop    DWORD PTR [rax+rax*1+0x0]
  40d730:	movzx  ecx,al
  40d733:	mov    ecx,DWORD PTR [r10+rcx*4]
  40d737:	test   ecx,0xc01
  40d73d:	je     0x40d79b
  40d73f:	mov    rax,QWORD PTR [rip+0x2761a]        # 0x434d60
  40d746:	test   rax,rax
  40d749:	jne    0x40d757
  40d74b:	jmp    0x40ddbf
  40d750:	add    rdi,0x1
  40d754:	movzx  edx,BYTE PTR [rdi]
  40d757:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d75b:	jne    0x40d750
  40d75d:	mov    r8,QWORD PTR [rsp+0x48]
  40d762:	lea    rdx,[rip+0x16267]        # 0x4239d0
  40d769:	mov    rcx,rdi
  40d76c:	mov    QWORD PTR [rsp+0x58],r10
  40d771:	call   0x40bcc0
  40d776:	test   rax,rax
  40d779:	mov    rdi,rax
  40d77c:	je     0x40d451
  40d782:	movzx  edx,BYTE PTR [rax]
  40d785:	cmp    dl,0x7f
  40d788:	mov    eax,edx
  40d78a:	ja     0x40d451
  40d790:	mov    r10,QWORD PTR [rsp+0x58]
  40d795:	mov    edx,edx
  40d797:	mov    ecx,DWORD PTR [r10+rdx*4]
  40d79b:	and    ecx,0x1000c01
  40d7a1:	je     0x40d451
  40d7a7:	cmp    al,0x2f
  40d7a9:	je     0x40dcaf
  40d7af:	mov    r15,rdi
  40d7b2:	add    r15,0x1
  40d7b6:	je     0x40d451
  40d7bc:	mov    ecx,DWORD PTR [rsp+0x70]
  40d7c0:	test   ecx,ecx
  40d7c2:	jne    0x40d82b
  40d7c4:	mov    rdx,QWORD PTR [rsp+0x40]
  40d7c9:	mov    QWORD PTR [rsp+0x20],0x0
  40d7d2:	xor    r9d,r9d
  40d7d5:	mov    r8,r14
  40d7d8:	mov    rcx,r13
  40d7db:	mov    rbx,r15
  40d7de:	call   0x409df0
  40d7e3:	mov    eax,DWORD PTR [rsp+0x54]
  40d7e7:	mov    DWORD PTR [rip+0x161e3],eax        # 0x4239d0
  40d7ed:	jmp    0x40d495
  40d7f2:	mov    rax,r15
  40d7f5:	mov    rdx,rbx
  40d7f8:	mov    r9,rdi
  40d7fb:	sub    rax,rdi
  40d7fe:	mov    rcx,r13
  40d801:	mov    rbx,r15
  40d804:	mov    QWORD PTR [rsp+0x20],rax
  40d809:	call   0x409df0
  40d80e:	test   rax,rax
  40d811:	jne    0x40d61d
  40d817:	jmp    0x40d1f7
  40d81c:	mov    ecx,0xc
  40d821:	call   0x4097f0
  40d826:	jmp    0x40d165
  40d82b:	cmp    DWORD PTR [rip+0x1619e],0x2        # 0x4239d0
  40d832:	je     0x40d85e
  40d834:	mov    rax,QWORD PTR [rip+0x27525]        # 0x434d60
  40d83b:	test   rax,rax
  40d83e:	je     0x40dda6
  40d844:	movzx  edx,BYTE PTR [rdi+0x1]
  40d848:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d84c:	je     0x40d85e
  40d84e:	xchg   ax,ax
  40d850:	add    r15,0x1
  40d854:	movzx  edx,BYTE PTR [r15]
  40d858:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d85c:	jne    0x40d850
  40d85e:	mov    rdi,QWORD PTR [rsp+0x38]
  40d863:	mov    ecx,0x8
  40d868:	xor    eax,eax
  40d86a:	mov    QWORD PTR [rsp+0x90],0x2f3c
  40d876:	rep stos QWORD PTR es:[rdi],rax
  40d879:	nop    DWORD PTR [rax+0x0]
  40d880:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  40d885:	mov    BYTE PTR [r12+rax*1],dl
  40d889:	add    rax,0x1
  40d88d:	cmp    r14,rax
  40d890:	jne    0x40d880
  40d892:	lea    rax,[r12+r14*1-0x1]
  40d897:	mov    rdx,rbp
  40d89a:	mov    rcx,r15
  40d89d:	mov    QWORD PTR [rsp+0x58],r10
  40d8a2:	mov    BYTE PTR [rax+0x1],0x3e
  40d8a6:	mov    BYTE PTR [rax+0x2],0x0
  40d8aa:	lea    rdi,[rax+0x2]
  40d8ae:	call   0x421d70
  40d8b3:	test   rax,rax
  40d8b6:	mov    rbx,rax
  40d8b9:	je     0x40d451
  40d8bf:	cmp    DWORD PTR [rip+0x1610a],0x2        # 0x4239d0
  40d8c6:	mov    r10,QWORD PTR [rsp+0x58]
  40d8cb:	jne    0x40dc49
  40d8d1:	mov    rax,QWORD PTR [rip+0x27488]        # 0x434d60
  40d8d8:	mov    r9,rbx
  40d8db:	sub    rdi,rbp
  40d8de:	sub    r9,r15
  40d8e1:	add    rbx,rdi
  40d8e4:	test   rax,rax
  40d8e7:	jne    0x40d8f4
  40d8e9:	jmp    0x40dd76
  40d8ee:	xchg   ax,ax
  40d8f0:	add    rbx,0x1
  40d8f4:	movzx  edx,BYTE PTR [rbx]
  40d8f7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d8fb:	jne    0x40d8f0
  40d8fd:	cmp    DWORD PTR [rsp+0x70],0x6
  40d902:	ja     0x40d7e3
  40d908:	mov    edx,DWORD PTR [rsp+0x70]
  40d90c:	lea    rax,[rip+0x1ada1]        # 0x4286b4
  40d913:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40d917:	add    rax,rdx
  40d91a:	jmp    rax
  40d91c:	lea    rcx,[r9+0x1]
  40d920:	mov    QWORD PTR [rsp+0x58],r9
  40d925:	call   0x409ce0
  40d92a:	mov    r9,QWORD PTR [rsp+0x58]
  40d92f:	mov    rdx,r15
  40d932:	mov    rcx,rax
  40d935:	mov    rdi,rax
  40d938:	mov    r8,r9
  40d93b:	call   0x421e08
  40d940:	mov    r9,QWORD PTR [rsp+0x58]
  40d945:	test   r9,r9
  40d948:	mov    BYTE PTR [rdi+r9*1],0x0
  40d94d:	jne    0x40dcfe
  40d953:	lea    rcx,[r14+0x19]
  40d957:	call   0x409ce0
  40d95c:	mov    rdx,QWORD PTR [rsp+0x40]
  40d961:	lea    rcx,[rax+0x18]
  40d965:	mov    r15,rax
  40d968:	mov    QWORD PTR [rax+0x10],0x0
  40d970:	mov    DWORD PTR [rax],0x6
  40d976:	mov    r8,r14
  40d979:	mov    QWORD PTR [rax+0x8],rcx
  40d97d:	call   0x421e08
  40d982:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  40d988:	mov    rdx,r15
  40d98b:	mov    rcx,r13
  40d98e:	call   0x409d30
  40d993:	mov    rcx,rdi
  40d996:	call   0x421e50
  40d99b:	jmp    0x40d7e3
  40d9a0:	lea    rcx,[r14+0x19]
  40d9a4:	mov    QWORD PTR [rsp+0x60],r10
  40d9a9:	mov    QWORD PTR [rsp+0x58],r9
  40d9ae:	call   0x409ce0
  40d9b3:	mov    rdi,rax
  40d9b6:	movzx  eax,BYTE PTR [r15]
  40d9ba:	mov    r9,QWORD PTR [rsp+0x58]
  40d9bf:	mov    r10,QWORD PTR [rsp+0x60]
  40d9c4:	cmp    al,0x7f
  40d9c6:	jbe    0x40da20
  40d9c8:	test   r9,r9
  40d9cb:	je     0x40da2f
  40d9cd:	xor    r8d,r8d
  40d9d0:	xor    edx,edx
  40d9d2:	mov    rcx,r15
  40d9d5:	call   0x421d68
  40d9da:	mov    DWORD PTR [rdi+0x10],eax
  40d9dd:	lea    rcx,[rdi+0x18]
  40d9e1:	mov    rdx,QWORD PTR [rsp+0x40]
  40d9e6:	mov    DWORD PTR [rdi],0x5
  40d9ec:	mov    r8,r14
  40d9ef:	mov    QWORD PTR [rdi+0x8],rcx
  40d9f3:	call   0x421e08
  40d9f8:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  40d9fe:	mov    rdx,rdi
  40da01:	mov    rcx,r13
  40da04:	call   0x409d30
  40da09:	jmp    0x40d7e3
  40da0e:	xchg   ax,ax
  40da10:	add    r15,0x1
  40da14:	movzx  eax,BYTE PTR [r15]
  40da18:	sub    r9,0x1
  40da1c:	cmp    al,0x7f
  40da1e:	ja     0x40d9c8
  40da20:	test   DWORD PTR [r10+rax*4],0xc01
  40da28:	je     0x40d9c8
  40da2a:	test   r9,r9
  40da2d:	jne    0x40da10
  40da2f:	mov    DWORD PTR [rdi+0x10],0x0
  40da36:	jmp    0x40d9dd
  40da38:	lea    rcx,[r14+0x19]
  40da3c:	mov    QWORD PTR [rsp+0x60],r10
  40da41:	mov    QWORD PTR [rsp+0x58],r9
  40da46:	call   0x409ce0
  40da4b:	movzx  edx,BYTE PTR [r15]
  40da4f:	mov    rdi,rax
  40da52:	mov    r9,QWORD PTR [rsp+0x58]
  40da57:	mov    r10,QWORD PTR [rsp+0x60]
  40da5c:	cmp    dl,0x7f
  40da5f:	jbe    0x40dad1
  40da61:	test   r9,r9
  40da64:	je     0x40dae2
  40da66:	cmp    edx,0x7f
  40da69:	ja     0x40dd69
  40da6f:	mov    edx,edx
  40da71:	mov    eax,DWORD PTR [r10+rdx*4]
  40da75:	test   eax,0x30000
  40da7a:	je     0x40dd99
  40da80:	mov    rcx,r15
  40da83:	call   0x421eb0
  40da88:	mov    DWORD PTR [rdi+0x10],eax
  40da8b:	lea    rcx,[rdi+0x18]
  40da8f:	mov    rdx,QWORD PTR [rsp+0x40]
  40da94:	mov    DWORD PTR [rdi],0x3
  40da9a:	mov    r8,r14
  40da9d:	mov    QWORD PTR [rdi+0x8],rcx
  40daa1:	call   0x421e08
  40daa6:	mov    rax,QWORD PTR [rdi+0x8]
  40daaa:	mov    rdx,rdi
  40daad:	mov    rcx,r13
  40dab0:	mov    BYTE PTR [rax+r14*1],0x0
  40dab5:	call   0x409d30
  40daba:	jmp    0x40d7e3
  40dabf:	nop
  40dac0:	add    r15,0x1
  40dac4:	movzx  edx,BYTE PTR [r15]
  40dac8:	sub    r9,0x1
  40dacc:	cmp    dl,0x7f
  40dacf:	ja     0x40da61
  40dad1:	mov    eax,edx
  40dad3:	test   DWORD PTR [r10+rax*4],0xc01
  40dadb:	je     0x40da61
  40dadd:	test   r9,r9
  40dae0:	jne    0x40dac0
  40dae2:	mov    DWORD PTR [rdi+0x10],0x0
  40dae9:	jmp    0x40da8b
  40daeb:	mov    rdx,QWORD PTR [rsp+0x40]
  40daf0:	mov    QWORD PTR [rsp+0x20],r9
  40daf5:	mov    r8,r14
  40daf8:	mov    r9,r15
  40dafb:	mov    rcx,r13
  40dafe:	mov    QWORD PTR [rsp+0x58],r10
  40db03:	call   0x409df0
  40db08:	mov    r15d,DWORD PTR [rip+0x15ec1]        # 0x4239d0
  40db0f:	mov    r14,rax
  40db12:	cmp    r15d,0x2
  40db16:	je     0x40d7e3
  40db1c:	lea    rdi,[rax+0x10]
  40db20:	movzx  eax,BYTE PTR [rax+0x10]
  40db24:	mov    r10,QWORD PTR [rsp+0x58]
  40db29:	cmp    al,0x7f
  40db2b:	ja     0x40dd1f
  40db31:	test   DWORD PTR [r10+rax*4],0xc01
  40db39:	je     0x40dd1f
  40db3f:	mov    rax,QWORD PTR [rip+0x2721a]        # 0x434d60
  40db46:	test   rax,rax
  40db49:	je     0x40de06
  40db4f:	mov    r9,rax
  40db52:	movzx  ecx,BYTE PTR [r14+0x11]
  40db57:	lea    rdx,[r14+0x11]
  40db5b:	cmp    BYTE PTR [rax+rcx*1],0x0
  40db5f:	je     0x40db6e
  40db61:	add    rdx,0x1
  40db65:	movzx  ecx,BYTE PTR [rdx]
  40db68:	cmp    BYTE PTR [rax+rcx*1],0x0
  40db6c:	jne    0x40db61
  40db6e:	mov    rcx,rdx
  40db71:	mov    QWORD PTR [rsp+0x60],r9
  40db76:	mov    QWORD PTR [rsp+0x58],rdx
  40db7b:	call   0x421d98
  40db80:	mov    rdx,QWORD PTR [rsp+0x58]
  40db85:	lea    r8,[rax+0x1]
  40db89:	mov    rcx,rdi
  40db8c:	mov    QWORD PTR [rsp+0x40],rax
  40db91:	call   0x421e00
  40db96:	mov    r10,QWORD PTR [rsp+0x40]
  40db9b:	mov    r9,QWORD PTR [rsp+0x60]
  40dba0:	lea    rdx,[rdi+r10*1]
  40dba4:	test   r9,r9
  40dba7:	je     0x40de1c
  40dbad:	cmp    rdi,rdx
  40dbb0:	jb     0x40dbd9
  40dbb2:	mov    rcx,rdi
  40dbb5:	mov    QWORD PTR [rsp+0x40],r9
  40dbba:	call   0x421d98
  40dbbf:	lea    rdx,[rdi+rax*1]
  40dbc3:	mov    r9,QWORD PTR [rsp+0x40]
  40dbc8:	cmp    rdi,rdx
  40dbcb:	jb     0x40dbd9
  40dbcd:	jmp    0x40dbe4
  40dbcf:	nop
  40dbd0:	sub    rdx,0x1
  40dbd4:	cmp    rdi,rdx
  40dbd7:	jae    0x40dbe4
  40dbd9:	movzx  eax,BYTE PTR [rdx-0x1]
  40dbdd:	cmp    BYTE PTR [r9+rax*1],0x0
  40dbe2:	jne    0x40dbd0
  40dbe4:	cmp    r15d,0x1
  40dbe8:	mov    BYTE PTR [rdx],0x0
  40dbeb:	je     0x40d7e3
  40dbf1:	movzx  eax,BYTE PTR [r14+0x10]
  40dbf6:	cmp    al,0x22
  40dbf8:	je     0x40dc02
  40dbfa:	cmp    al,0x27
  40dbfc:	jne    0x40d7e3
  40dc02:	movzx  eax,BYTE PTR [rdx-0x1]
  40dc06:	cmp    al,0x22
  40dc08:	je     0x40dc12
  40dc0a:	cmp    al,0x27
  40dc0c:	jne    0x40d7e3
  40dc12:	xor    edx,edx
  40dc14:	mov    rcx,rdi
  40dc17:	call   0x40cef0
  40dc1c:	jmp    0x40d7e3
  40dc21:	mov    ecx,0xa
  40dc26:	mov    QWORD PTR [rsp+0x40],r8
  40dc2b:	call   0x4097f0
  40dc30:	mov    r8,QWORD PTR [rsp+0x40]
  40dc35:	jmp    0x40d294
  40dc3a:	mov    ecx,0x1c
  40dc3f:	call   0x4097f0
  40dc44:	jmp    0x40d254
  40dc49:	mov    r8,QWORD PTR [rip+0x27110]        # 0x434d60
  40dc50:	test   r8,r8
  40dc53:	mov    rdx,r8
  40dc56:	je     0x40dddb
  40dc5c:	cmp    r15,rbx
  40dc5f:	jb     0x40dcd5
  40dc61:	mov    rcx,r15
  40dc64:	mov    QWORD PTR [rsp+0x68],r10
  40dc69:	mov    QWORD PTR [rsp+0x60],rdx
  40dc6e:	mov    QWORD PTR [rsp+0x58],r8
  40dc73:	call   0x421d98
  40dc78:	lea    r9,[r15+rax*1]
  40dc7c:	mov    r8,QWORD PTR [rsp+0x58]
  40dc81:	mov    rdx,QWORD PTR [rsp+0x60]
  40dc86:	mov    r10,QWORD PTR [rsp+0x68]
  40dc8b:	cmp    r15,r9
  40dc8e:	jb     0x40dc9b
  40dc90:	jmp    0x40dca7
  40dc92:	sub    r9,0x1
  40dc96:	cmp    r15,r9
  40dc99:	jae    0x40dca7
  40dc9b:	movzx  eax,BYTE PTR [r9-0x1]
  40dca0:	cmp    BYTE PTR [r8+rax*1],0x0
  40dca5:	jne    0x40dc92
  40dca7:	mov    rax,rdx
  40dcaa:	jmp    0x40d8db
  40dcaf:	cmp    BYTE PTR [rdi+0x1],0x3e
  40dcb3:	lea    rax,[rdi+0x1]
  40dcb7:	jne    0x40d451
  40dcbd:	mov    DWORD PTR [rsp+0x70],0x0
  40dcc5:	mov    rdi,rax
  40dcc8:	jmp    0x40d7af
  40dccd:	mov    rbx,r14
  40dcd0:	jmp    0x40d5d5
  40dcd5:	mov    r9,rbx
  40dcd8:	jmp    0x40dc9b
  40dcda:	call   QWORD PTR [rip+0x2b2ec]        # 0x438fcc
  40dce0:	mov    DWORD PTR [rax],0x16
  40dce6:	xor    eax,eax
  40dce8:	jmp    0x40d2e9
  40dced:	call   QWORD PTR [rip+0x2b2d9]        # 0x438fcc
  40dcf3:	mov    DWORD PTR [rax],0x2
  40dcf9:	jmp    0x40d2d6
  40dcfe:	mov    rdx,QWORD PTR [rsp+0x40]
  40dd03:	mov    r8,r14
  40dd06:	mov    rcx,rdi
  40dd09:	call   0x40d130
  40dd0e:	test   rax,rax
  40dd11:	mov    r15,rax
  40dd14:	jne    0x40d988
  40dd1a:	jmp    0x40d993
  40dd1f:	mov    rcx,rdi
  40dd22:	call   0x421d98
  40dd27:	mov    r9,QWORD PTR [rip+0x27032]        # 0x434d60
  40dd2e:	lea    rdx,[rdi+rax*1]
  40dd32:	jmp    0x40dba4
  40dd37:	mov    ecx,0x1c
  40dd3c:	mov    QWORD PTR [rsp+0x58],r10
  40dd41:	call   0x4097f0
  40dd46:	mov    r10,QWORD PTR [rsp+0x58]
  40dd4b:	jmp    0x40d413
  40dd50:	mov    ecx,0xa
  40dd55:	mov    QWORD PTR [rsp+0x40],r8
  40dd5a:	call   0x4097f0
  40dd5f:	mov    r8,QWORD PTR [rsp+0x40]
  40dd64:	jmp    0x40d4bb
  40dd69:	mov    eax,0x1
  40dd6e:	mov    DWORD PTR [rdi+0x10],eax
  40dd71:	jmp    0x40da8b
  40dd76:	mov    ecx,0xc
  40dd7b:	mov    QWORD PTR [rsp+0x60],r10
  40dd80:	mov    QWORD PTR [rsp+0x58],r9
  40dd85:	call   0x4097f0
  40dd8a:	mov    r10,QWORD PTR [rsp+0x60]
  40dd8f:	mov    r9,QWORD PTR [rsp+0x58]
  40dd94:	jmp    0x40d8f4
  40dd99:	test   eax,0x8000002
  40dd9e:	sete   al
  40dda1:	movzx  eax,al
  40dda4:	jmp    0x40dd6e
  40dda6:	mov    ecx,0xc
  40ddab:	mov    QWORD PTR [rsp+0x58],r10
  40ddb0:	call   0x4097f0
  40ddb5:	mov    r10,QWORD PTR [rsp+0x58]
  40ddba:	jmp    0x40d844
  40ddbf:	mov    ecx,0xc
  40ddc4:	mov    QWORD PTR [rsp+0x58],r10
  40ddc9:	call   0x4097f0
  40ddce:	movzx  edx,BYTE PTR [rdi]
  40ddd1:	mov    r10,QWORD PTR [rsp+0x58]
  40ddd6:	jmp    0x40d757
  40dddb:	mov    ecx,0xc
  40dde0:	mov    QWORD PTR [rsp+0x58],r10
  40dde5:	call   0x4097f0
  40ddea:	mov    rdx,QWORD PTR [rip+0x26f6f]        # 0x434d60
  40ddf1:	mov    r8,rax
  40ddf4:	mov    r10,QWORD PTR [rsp+0x58]
  40ddf9:	jmp    0x40dc5c
  40ddfe:	mov    r15,rcx
  40de01:	jmp    0x40d5a0
  40de06:	mov    ecx,0xc
  40de0b:	call   0x4097f0
  40de10:	mov    r9,QWORD PTR [rip+0x26f49]        # 0x434d60
  40de17:	jmp    0x40db52
  40de1c:	mov    ecx,0xc
  40de21:	mov    QWORD PTR [rsp+0x40],rdx
  40de26:	call   0x4097f0
  40de2b:	mov    rdx,QWORD PTR [rsp+0x40]
  40de30:	mov    r9,rax
  40de33:	jmp    0x40dbad
  40de38:	mov    r15,rbx
  40de3b:	jmp    0x40d7c4
  40de40:	push   rdi
  40de41:	sub    rsp,0x90
  40de48:	xor    eax,eax
  40de4a:	lea    rdi,[rsp+0x20]
  40de4f:	mov    r9,rcx
  40de52:	mov    ecx,0xd
  40de57:	rep stos QWORD PTR es:[rdi],rax
  40de5a:	mov    eax,edx
  40de5c:	lea    rdx,[rsp+0x20]
  40de61:	mov    QWORD PTR [rsp+0x38],rax
  40de66:	mov    cl,0x3
  40de68:	call   QWORD PTR [r9+0x38]
  40de6c:	mov    rax,QWORD PTR [rsp+0x38]
  40de71:	add    rsp,0x90
  40de78:	pop    rdi
  40de79:	ret    
  40de7a:	nop    WORD PTR [rax+rax*1+0x0]
  40de80:	push   rbx
  40de81:	sub    rsp,0x40
  40de85:	cmp    rcx,0x2
  40de89:	mov    rbx,rdx
  40de8c:	je     0x40dee0
  40de8e:	cmp    rcx,0x3
  40de92:	je     0x40dec0
  40de94:	cmp    rcx,0x1
  40de98:	je     0x40deb0
  40de9a:	xor    eax,eax
  40de9c:	test   BYTE PTR [rdx+0x10],0x8
  40dea0:	je     0x40df40
  40dea6:	add    rsp,0x40
  40deaa:	pop    rbx
  40deab:	ret    
  40deac:	nop    DWORD PTR [rax+0x0]
  40deb0:	call   0x408340
  40deb5:	xor    eax,eax
  40deb7:	add    rsp,0x40
  40debb:	pop    rbx
  40debc:	ret    
  40debd:	nop    DWORD PTR [rax]
  40dec0:	mov    rax,QWORD PTR [rdx+0x18]
  40dec4:	cmp    r9d,eax
  40dec7:	jbe    0x40df30
  40dec9:	mov    eax,eax
  40decb:	mov    rax,QWORD PTR [r8+rax*8]
  40decf:	mov    QWORD PTR [rdx+0x18],rax
  40ded3:	xor    eax,eax
  40ded5:	add    rsp,0x40
  40ded9:	pop    rbx
  40deda:	ret    
  40dedb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dee0:	mov    rbx,QWORD PTR [rdx+0x18]
  40dee4:	cmp    r9d,ebx
  40dee7:	ja     0x40df00
  40dee9:	lea    rcx,[rip+0x1b934]        # 0x429824
  40def0:	mov    edx,ebx
  40def2:	call   0x4082b0
  40def7:	xor    eax,eax
  40def9:	add    rsp,0x40
  40defd:	pop    rbx
  40defe:	ret    
  40deff:	nop
  40df00:	mov    QWORD PTR [rsp+0x38],r8
  40df05:	mov    ebx,ebx
  40df07:	call   QWORD PTR [rip+0x2b06f]        # 0x438f7c
  40df0d:	mov    r8,QWORD PTR [rsp+0x38]
  40df12:	lea    rdx,[rax+0x30]
  40df16:	mov    rcx,QWORD PTR [r8+rbx*8]
  40df1a:	call   0x421e60
  40df1f:	xor    eax,eax
  40df21:	add    rsp,0x40
  40df25:	pop    rbx
  40df26:	ret    
  40df27:	nop    WORD PTR [rax+rax*1+0x0]
  40df30:	lea    rax,[rip+0x1b8f8]        # 0x42982f
  40df37:	jmp    0x40dea6
  40df3c:	nop    DWORD PTR [rax+0x0]
  40df40:	mov    DWORD PTR [rsp+0x20],r9d
  40df45:	mov    r9,r8
  40df48:	mov    r8,rdx
  40df4b:	mov    rdx,rcx
  40df4e:	mov    rcx,QWORD PTR [rbx+0x18]
  40df52:	call   0x408670
  40df57:	test   BYTE PTR [rbx+0x10],0x40
  40df5b:	je     0x40dea6
  40df61:	mov    rcx,QWORD PTR [rbx+0x18]
  40df65:	mov    QWORD PTR [rsp+0x38],rax
  40df6a:	call   0x421e50
  40df6f:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40df73:	mov    QWORD PTR [rbx+0x18],0x0
  40df7b:	mov    rax,QWORD PTR [rsp+0x38]
  40df80:	jmp    0x40dea6
  40df85:	nop
  40df86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df90:	push   rsi
  40df91:	push   rbx
  40df92:	sub    rsp,0x28
  40df96:	mov    rsi,QWORD PTR [rcx+0x18]
  40df9a:	mov    rbx,rcx
  40df9d:	mov    rdx,rcx
  40dfa0:	mov    ecx,0x3
  40dfa5:	call   QWORD PTR [rbx+0x38]
  40dfa8:	mov    rax,QWORD PTR [rbx+0x18]
  40dfac:	mov    QWORD PTR [rbx+0x18],rsi
  40dfb0:	add    rsp,0x28
  40dfb4:	pop    rbx
  40dfb5:	pop    rsi
  40dfb6:	ret    
  40dfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40dfc0:	push   r15
  40dfc2:	push   r14
  40dfc4:	push   r13
  40dfc6:	push   r12
  40dfc8:	push   rbp
  40dfc9:	push   rdi
  40dfca:	push   rsi
  40dfcb:	push   rbx
  40dfcc:	sub    rsp,0xe8
  40dfd3:	cmp    rcx,0x2
  40dfd7:	mov    r13,rcx
  40dfda:	mov    r12,rdx
  40dfdd:	mov    rbx,r8
  40dfe0:	mov    ebp,r9d
  40dfe3:	je     0x40e281
  40dfe9:	cmp    rcx,0x3
  40dfed:	je     0x40e1b0
  40dff3:	cmp    rcx,0x1
  40dff7:	je     0x40e190
  40dffd:	test   BYTE PTR [rdx+0x10],0x8
  40e001:	jne    0x40e19b
  40e007:	mov    rax,QWORD PTR [rip+0x26d52]        # 0x434d60
  40e00e:	mov    r15,QWORD PTR [rdx+0x18]
  40e012:	mov    rsi,QWORD PTR [rdx+0x20]
  40e016:	test   rax,rax
  40e019:	jne    0x40e024
  40e01b:	jmp    0x40e5a0
  40e020:	add    r15,0x1
  40e024:	movzx  ecx,BYTE PTR [r15]
  40e028:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e02c:	jne    0x40e020
  40e02e:	test   cl,cl
  40e030:	je     0x40e370
  40e036:	cmp    cl,0x3d
  40e039:	mov    QWORD PTR [rsp+0x30],rsi
  40e03e:	je     0x40e530
  40e044:	cmp    cl,0x5e
  40e047:	je     0x40e324
  40e04d:	cmp    cl,0x2c
  40e050:	je     0x40e370
  40e056:	mov    BYTE PTR [rsp+0x4f],0x0
  40e05b:	lea    rax,[rsp+0x58]
  40e060:	movzx  edx,BYTE PTR [r15]
  40e064:	mov    QWORD PTR [rsp+0x38],rax
  40e069:	lea    rax,[rsp+0x60]
  40e06e:	mov    QWORD PTR [rsp+0x40],rax
  40e073:	test   dl,dl
  40e075:	je     0x40e4e1
  40e07b:	cmp    dl,0x2c
  40e07e:	je     0x40e420
  40e084:	jg     0x40e400
  40e08a:	cmp    dl,0x21
  40e08d:	je     0x40e470
  40e093:	cmp    dl,0x2b
  40e096:	jne    0x40e40e
  40e09c:	xor    r14d,r14d
  40e09f:	mov    rax,QWORD PTR [rip+0x26cba]        # 0x434d60
  40e0a6:	lea    rsi,[r15+0x1]
  40e0aa:	test   rax,rax
  40e0ad:	je     0x40e517
  40e0b3:	movzx  edx,BYTE PTR [r15+0x1]
  40e0b8:	mov    r15,rsi
  40e0bb:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0bf:	je     0x40e0cf
  40e0c1:	add    r15,0x1
  40e0c5:	movzx  edx,BYTE PTR [r15]
  40e0c9:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0cd:	jne    0x40e0c1
  40e0cf:	mov    rax,QWORD PTR [rip+0x26d7a]        # 0x434e50
  40e0d6:	test   rax,rax
  40e0d9:	je     0x40e4c3
  40e0df:	movzx  edx,BYTE PTR [r15]
  40e0e3:	test   dl,dl
  40e0e5:	je     0x40e4e1
  40e0eb:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0ef:	jne    0x40e4e1
  40e0f5:	mov    rcx,r15
  40e0f8:	jmp    0x40e106
  40e0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e100:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e104:	jne    0x40e111
  40e106:	add    rcx,0x1
  40e10a:	movzx  edx,BYTE PTR [rcx]
  40e10d:	test   dl,dl
  40e10f:	jne    0x40e100
  40e111:	mov    r11d,ecx
  40e114:	sub    r11d,r15d
  40e117:	test   r11d,r11d
  40e11a:	je     0x40e4e1
  40e120:	cmp    r11d,0x3
  40e124:	je     0x40e490
  40e12a:	cmp    r11d,0x4
  40e12e:	jne    0x40e380
  40e134:	lea    rdi,[rip+0x1b5e0]        # 0x42971b
  40e13b:	mov    ecx,0x4
  40e140:	mov    rsi,r15
  40e143:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e145:	jne    0x40e380
  40e14b:	add    r15,0x4
  40e14f:	test   r14b,r14b
  40e152:	jne    0x40e160
  40e154:	mov    QWORD PTR [rsp+0x30],0x0
  40e15d:	nop    DWORD PTR [rax]
  40e160:	mov    rax,QWORD PTR [rip+0x26bf9]        # 0x434d60
  40e167:	test   rax,rax
  40e16a:	jne    0x40e175
  40e16c:	jmp    0x40e4d2
  40e171:	add    r15,0x1
  40e175:	movzx  ecx,BYTE PTR [r15]
  40e179:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e17d:	mov    rdx,rcx
  40e180:	jne    0x40e171
  40e182:	jmp    0x40e073
  40e187:	nop    WORD PTR [rax+rax*1+0x0]
  40e190:	mov    ecx,0x1
  40e195:	call   0x408340
  40e19a:	nop
  40e19b:	add    rsp,0xe8
  40e1a2:	pop    rbx
  40e1a3:	pop    rsi
  40e1a4:	pop    rdi
  40e1a5:	pop    rbp
  40e1a6:	pop    r12
  40e1a8:	pop    r13
  40e1aa:	pop    r14
  40e1ac:	pop    r15
  40e1ae:	ret    
  40e1af:	nop
  40e1b0:	mov    eax,0x1
  40e1b5:	mov    ecx,r9d
  40e1b8:	shl    eax,cl
  40e1ba:	lea    r13d,[rax-0x1]
  40e1be:	mov    r14,r13
  40e1c1:	and    r14,QWORD PTR [rdx+0x20]
  40e1c5:	je     0x40e526
  40e1cb:	mov    rsi,r8
  40e1ce:	mov    edi,0x1
  40e1d3:	xor    r15d,r15d
  40e1d6:	jmp    0x40e1e9
  40e1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1e0:	add    rsi,0x8
  40e1e4:	shr    r14,1
  40e1e7:	je     0x40e205
  40e1e9:	test   r14b,0x1
  40e1ed:	je     0x40e1fc
  40e1ef:	mov    rcx,QWORD PTR [rsi]
  40e1f2:	call   0x421d98
  40e1f7:	lea    rdi,[rdi+rax*1+0x4]
  40e1fc:	add    r15d,0x1
  40e200:	cmp    ebp,r15d
  40e203:	ja     0x40e1e0
  40e205:	mov    rcx,rdi
  40e208:	mov    rbp,r13
  40e20b:	call   0x409ce0
  40e210:	and    rbp,QWORD PTR [r12+0x20]
  40e215:	mov    r14,rax
  40e218:	mov    QWORD PTR [r12+0x18],rax
  40e21d:	je     0x40e310
  40e223:	xor    r12d,r12d
  40e226:	jmp    0x40e244
  40e228:	nop    DWORD PTR [rax+rax*1+0x0]
  40e230:	mov    edx,0x2b20
  40e235:	lea    r14,[rax+0x3]
  40e239:	mov    BYTE PTR [rax+0x2],0x20
  40e23d:	mov    WORD PTR [rax],dx
  40e240:	add    r12d,0x1
  40e244:	mov    eax,ebp
  40e246:	shr    rbp,1
  40e249:	and    eax,0x1
  40e24c:	test   eax,eax
  40e24e:	je     0x40e240
  40e250:	mov    eax,r12d
  40e253:	mov    r13,QWORD PTR [rbx+rax*8]
  40e257:	mov    rcx,r13
  40e25a:	call   0x421d98
  40e25f:	mov    rdx,r13
  40e262:	mov    r8,rax
  40e265:	mov    rcx,r14
  40e268:	mov    rsi,rax
  40e26b:	call   0x421e08
  40e270:	test   rbp,rbp
  40e273:	lea    rax,[r14+rsi*1]
  40e277:	jne    0x40e230
  40e279:	mov    BYTE PTR [rax],0x0
  40e27c:	jmp    0x40e19b
  40e281:	mov    eax,0x1
  40e286:	mov    ecx,r9d
  40e289:	xor    r13d,r13d
  40e28c:	shl    rax,cl
  40e28f:	xor    edx,edx
  40e291:	mov    rsi,QWORD PTR [rip+0x2ace4]        # 0x438f7c
  40e298:	sub    rax,0x1
  40e29c:	and    rax,QWORD PTR [r12+0x20]
  40e2a1:	mov    r14,rsi
  40e2a4:	mov    r12,rax
  40e2a7:	jne    0x40e2db
  40e2a9:	jmp    0x40e19b
  40e2ae:	xchg   ax,ax
  40e2b0:	call   rdi
  40e2b2:	mov    rcx,QWORD PTR [rbx]
  40e2b5:	lea    rdx,[rax+0x30]
  40e2b9:	call   0x421e60
  40e2be:	mov    rdx,r15
  40e2c1:	add    r13d,0x1
  40e2c5:	cmp    ebp,r13d
  40e2c8:	jbe    0x40e19b
  40e2ce:	add    rbx,0x8
  40e2d2:	shr    r12,1
  40e2d5:	je     0x40e19b
  40e2db:	test   r12b,0x1
  40e2df:	je     0x40e2c1
  40e2e1:	test   rdx,rdx
  40e2e4:	lea    r15,[rdx+0x1]
  40e2e8:	mov    rdi,rsi
  40e2eb:	je     0x40e2b0
  40e2ed:	call   r14
  40e2f0:	lea    rcx,[rip+0x1b5e5]        # 0x4298dc
  40e2f7:	lea    r9,[rax+0x30]
  40e2fb:	mov    r8d,0x3
  40e301:	mov    edx,0x1
  40e306:	mov    rdi,r14
  40e309:	call   0x421e38
  40e30e:	jmp    0x40e2b0
  40e310:	mov    BYTE PTR [rax],0x0
  40e313:	jmp    0x40e19b
  40e318:	mov    r15,rsi
  40e31b:	mov    QWORD PTR [rsp+0x30],0x0
  40e324:	mov    rax,QWORD PTR [rip+0x26a35]        # 0x434d60
  40e32b:	lea    rsi,[r15+0x1]
  40e32f:	test   rax,rax
  40e332:	je     0x40e5af
  40e338:	movzx  ecx,BYTE PTR [r15+0x1]
  40e33d:	mov    r15,rsi
  40e340:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e344:	mov    rdx,rcx
  40e347:	je     0x40e361
  40e349:	nop    DWORD PTR [rax+0x0]
  40e350:	add    r15,0x1
  40e354:	movzx  ecx,BYTE PTR [r15]
  40e358:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e35c:	mov    rdx,rcx
  40e35f:	jne    0x40e350
  40e361:	cmp    dl,0x2c
  40e364:	mov    BYTE PTR [rsp+0x4f],0x1
  40e369:	jne    0x40e05b
  40e36f:	nop
  40e370:	mov    QWORD PTR [r12+0x20],0x0
  40e379:	jmp    0x40e19b
  40e37e:	xchg   ax,ax
  40e380:	mov    rdx,QWORD PTR [rsp+0x38]
  40e385:	xor    r8d,r8d
  40e388:	mov    rcx,r15
  40e38b:	mov    DWORD PTR [rsp+0x48],r11d
  40e390:	call   0x421d60
  40e395:	movsxd rdi,DWORD PTR [rsp+0x48]
  40e39a:	mov    rdx,QWORD PTR [rsp+0x58]
  40e39f:	mov    eax,eax
  40e3a1:	lea    rsi,[r15+rdi*1]
  40e3a5:	cmp    rsi,rdx
  40e3a8:	je     0x40e3e7
  40e3aa:	mov    r15,QWORD PTR [rsp+0x40]
  40e3af:	mov    r8,rdi
  40e3b2:	mov    rcx,r15
  40e3b5:	call   0x421e08
  40e3ba:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  40e3bf:	mov    r9,rbx
  40e3c2:	mov    DWORD PTR [rsp+0x20],ebp
  40e3c6:	mov    r8,r12
  40e3c9:	mov    rdx,r13
  40e3cc:	mov    rcx,r15
  40e3cf:	call   0x408670
  40e3d4:	cmp    ebp,eax
  40e3d6:	jbe    0x40e370
  40e3d8:	mov    ecx,eax
  40e3da:	mov    edx,0x1
  40e3df:	shl    edx,cl
  40e3e1:	test   edx,edx
  40e3e3:	mov    eax,edx
  40e3e5:	je     0x40e370
  40e3e7:	test   r14b,r14b
  40e3ea:	je     0x40e480
  40e3f0:	not    rax
  40e3f3:	and    QWORD PTR [rsp+0x30],rax
  40e3f8:	mov    r15,rsi
  40e3fb:	jmp    0x40e160
  40e400:	cmp    dl,0x2d
  40e403:	je     0x40e470
  40e405:	cmp    dl,0x7c
  40e408:	je     0x40e09c
  40e40e:	xor    r14d,r14d
  40e411:	jmp    0x40e0cf
  40e416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e420:	mov    rax,QWORD PTR [rip+0x26939]        # 0x434d60
  40e427:	lea    rsi,[r15+0x1]
  40e42b:	test   rax,rax
  40e42e:	je     0x40e591
  40e434:	movzx  ecx,BYTE PTR [r15+0x1]
  40e439:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e43d:	mov    rdx,rcx
  40e440:	je     0x40e452
  40e442:	add    rsi,0x1
  40e446:	movzx  ecx,BYTE PTR [rsi]
  40e449:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e44d:	mov    rdx,rcx
  40e450:	jne    0x40e442
  40e452:	cmp    dl,0x7c
  40e455:	je     0x40e370
  40e45b:	cmp    dl,0x2c
  40e45e:	je     0x40e370
  40e464:	movzx  edx,BYTE PTR [rsi]
  40e467:	mov    r15,rsi
  40e46a:	jmp    0x40e073
  40e46f:	nop
  40e470:	mov    r14d,0x1
  40e476:	jmp    0x40e09f
  40e47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e480:	or     QWORD PTR [rsp+0x30],rax
  40e485:	jmp    0x40e3f8
  40e48a:	nop    WORD PTR [rax+rax*1+0x0]
  40e490:	lea    rdi,[rip+0x1b32a]        # 0x4297c1
  40e497:	mov    ecx,0x3
  40e49c:	mov    rsi,r15
  40e49f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e4a1:	jne    0x40e380
  40e4a7:	add    r15,0x3
  40e4ab:	test   r14b,r14b
  40e4ae:	jne    0x40e154
  40e4b4:	mov    eax,0xffffffff
  40e4b9:	mov    QWORD PTR [rsp+0x30],rax
  40e4be:	jmp    0x40e160
  40e4c3:	mov    ecx,0x2a
  40e4c8:	call   0x4097f0
  40e4cd:	jmp    0x40e0df
  40e4d2:	mov    ecx,0xc
  40e4d7:	call   0x4097f0
  40e4dc:	jmp    0x40e175
  40e4e1:	cmp    BYTE PTR [rsp+0x4f],0x0
  40e4e6:	je     0x40e4f2
  40e4e8:	mov    eax,0xffffffff
  40e4ed:	xor    QWORD PTR [rsp+0x30],rax
  40e4f2:	cmp    ebp,0x3f
  40e4f5:	ja     0x40e508
  40e4f7:	mov    eax,0x1
  40e4fc:	mov    ecx,ebp
  40e4fe:	shl    eax,cl
  40e500:	sub    eax,0x1
  40e503:	and    QWORD PTR [rsp+0x30],rax
  40e508:	mov    rax,QWORD PTR [rsp+0x30]
  40e50d:	mov    QWORD PTR [r12+0x20],rax
  40e512:	jmp    0x40e19b
  40e517:	mov    ecx,0xc
  40e51c:	call   0x4097f0
  40e521:	jmp    0x40e0b3
  40e526:	mov    edi,0x1
  40e52b:	jmp    0x40e205
  40e530:	mov    rax,QWORD PTR [rip+0x26829]        # 0x434d60
  40e537:	lea    rsi,[r15+0x1]
  40e53b:	test   rax,rax
  40e53e:	je     0x40e5be
  40e540:	movzx  ecx,BYTE PTR [r15+0x1]
  40e545:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e549:	mov    rdx,rcx
  40e54c:	je     0x40e560
  40e54e:	xchg   ax,ax
  40e550:	add    rsi,0x1
  40e554:	movzx  ecx,BYTE PTR [rsi]
  40e557:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e55b:	mov    rdx,rcx
  40e55e:	jne    0x40e550
  40e560:	cmp    dl,0x3d
  40e563:	je     0x40e370
  40e569:	cmp    dl,0x5e
  40e56c:	je     0x40e318
  40e572:	cmp    dl,0x2c
  40e575:	je     0x40e370
  40e57b:	mov    r15,rsi
  40e57e:	mov    BYTE PTR [rsp+0x4f],0x0
  40e583:	mov    QWORD PTR [rsp+0x30],0x0
  40e58c:	jmp    0x40e05b
  40e591:	mov    ecx,0xc
  40e596:	call   0x4097f0
  40e59b:	jmp    0x40e434
  40e5a0:	mov    ecx,0xc
  40e5a5:	call   0x4097f0
  40e5aa:	jmp    0x40e024
  40e5af:	mov    ecx,0xc
  40e5b4:	call   0x4097f0
  40e5b9:	jmp    0x40e338
  40e5be:	mov    ecx,0xc
  40e5c3:	call   0x4097f0
  40e5c8:	jmp    0x40e540
  40e5cd:	nop    DWORD PTR [rax]
  40e5d0:	push   r15
  40e5d2:	push   r14
  40e5d4:	push   r13
  40e5d6:	push   r12
  40e5d8:	push   rbp
  40e5d9:	push   rdi
  40e5da:	push   rsi
  40e5db:	push   rbx
  40e5dc:	sub    rsp,0x68
  40e5e0:	cmp    rcx,0xf
  40e5e4:	mov    rsi,rcx
  40e5e7:	mov    rbx,rdx
  40e5ea:	mov    edi,r8d
  40e5ed:	mov    rbp,r9
  40e5f0:	ja     0x40e610
  40e5f2:	cmp    rcx,0x1
  40e5f6:	je     0x40e720
  40e5fc:	add    rsp,0x68
  40e600:	pop    rbx
  40e601:	pop    rsi
  40e602:	pop    rdi
  40e603:	pop    rbp
  40e604:	pop    r12
  40e606:	pop    r13
  40e608:	pop    r14
  40e60a:	pop    r15
  40e60c:	ret    
  40e60d:	nop    DWORD PTR [rax]
  40e610:	test   BYTE PTR [rdx+0x10],0x8
  40e614:	je     0x40e630
  40e616:	mov    rcx,QWORD PTR [rdx+0x20]
  40e61a:	test   rcx,rcx
  40e61d:	je     0x40e5fc
  40e61f:	call   0x421e50
  40e624:	jmp    0x40e5fc
  40e626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e630:	mov    r13,QWORD PTR [rdx+0x18]
  40e634:	mov    r14,QWORD PTR [rip+0x2a991]        # 0x438fcc
  40e63b:	call   r14
  40e63e:	mov    DWORD PTR [rax],0x0
  40e644:	mov    eax,edi
  40e646:	and    eax,0x3
  40e649:	cmp    eax,0x1
  40e64c:	je     0x40e795
  40e652:	cmp    eax,0x2
  40e655:	je     0x40e753
  40e65b:	mov    edx,0x5c
  40e660:	mov    rcx,r13
  40e663:	call   0x421d78
  40e668:	test   rax,rax
  40e66b:	je     0x40e6cc
  40e66d:	sub    rax,r13
  40e670:	lea    rcx,[rax+0x1]
  40e674:	mov    r12,rax
  40e677:	call   0x409ce0
  40e67c:	mov    r8,r12
  40e67f:	mov    r15,rax
  40e682:	mov    rdx,r13
  40e685:	mov    rcx,rax
  40e688:	call   0x421e08
  40e68d:	mov    BYTE PTR [r15+r12*1],0x0
  40e692:	lea    rdx,[rsp+0x20]
  40e697:	mov    rcx,r15
  40e69a:	call   QWORD PTR [rip+0x2ab54]        # 0x4391f4
  40e6a0:	test   eax,eax
  40e6a2:	jne    0x40e856
  40e6a8:	call   r14
  40e6ab:	mov    DWORD PTR [rax],0x16
  40e6b1:	movzx  eax,WORD PTR [rsp+0x26]
  40e6b6:	and    ax,0xf000
  40e6ba:	cmp    ax,0x4000
  40e6be:	jne    0x40e856
  40e6c4:	mov    rcx,r15
  40e6c7:	call   0x421e50
  40e6cc:	and    edi,0x30
  40e6cf:	cmp    edi,0x10
  40e6d2:	je     0x40e7c5
  40e6d8:	cmp    edi,0x20
  40e6db:	jne    0x40e5fc
  40e6e1:	mov    rcx,QWORD PTR [rbx+0x18]
  40e6e5:	mov    rdx,rbp
  40e6e8:	call   0x421e78
  40e6ed:	test   rax,rax
  40e6f0:	mov    rdi,rax
  40e6f3:	je     0x40e869
  40e6f9:	mov    edx,DWORD PTR [rbx+0x10]
  40e6fc:	test   dl,0x40
  40e6ff:	je     0x40e812
  40e705:	mov    rax,QWORD PTR [rbx+0x18]
  40e709:	mov    QWORD PTR [rbx+0x20],rax
  40e70d:	and    edx,0xffffffbf
  40e710:	mov    QWORD PTR [rbx+0x18],rdi
  40e714:	mov    DWORD PTR [rbx+0x10],edx
  40e717:	jmp    0x40e5fc
  40e71c:	nop    DWORD PTR [rax+0x0]
  40e720:	and    edi,0x3
  40e723:	cmp    edi,0x1
  40e726:	je     0x40e7f4
  40e72c:	cmp    edi,0x2
  40e72f:	jne    0x40e5fc
  40e735:	mov    ecx,DWORD PTR [rip+0x264b5]        # 0x434bf0
  40e73b:	mov    rdx,QWORD PTR [rip+0x26486]        # 0x434bc8
  40e742:	add    rcx,QWORD PTR [rip+0x154e7]        # 0x423c30
  40e749:	call   0x421e60
  40e74e:	jmp    0x40e5fc
  40e753:	lea    rdx,[rsp+0x20]
  40e758:	mov    rcx,r13
  40e75b:	call   QWORD PTR [rip+0x2aa93]        # 0x4391f4
  40e761:	test   eax,eax
  40e763:	je     0x40e771
  40e765:	call   r14
  40e768:	cmp    DWORD PTR [rax],0x2
  40e76b:	je     0x40e65b
  40e771:	call   r14
  40e774:	cmp    DWORD PTR [rax],0x0
  40e777:	jne    0x40e782
  40e779:	call   r14
  40e77c:	mov    DWORD PTR [rax],0x16
  40e782:	mov    rcx,QWORD PTR [rsi+0x28]
  40e786:	lea    rdx,[rip+0x19f43]        # 0x4286d0
  40e78d:	mov    r8,r13
  40e790:	call   0x408860
  40e795:	lea    rdx,[rsp+0x20]
  40e79a:	mov    rcx,r13
  40e79d:	call   QWORD PTR [rip+0x2aa51]        # 0x4391f4
  40e7a3:	test   eax,eax
  40e7a5:	jne    0x40e782
  40e7a7:	call   r14
  40e7aa:	mov    DWORD PTR [rax],0x16
  40e7b0:	movzx  eax,WORD PTR [rsp+0x26]
  40e7b5:	and    ax,0xf000
  40e7b9:	cmp    ax,0x8000
  40e7bd:	je     0x40e6cc
  40e7c3:	jmp    0x40e782
  40e7c5:	mov    rcx,QWORD PTR [rbx+0x18]
  40e7c9:	mov    edx,ebp
  40e7cb:	call   0x421cf8
  40e7d0:	test   eax,eax
  40e7d2:	mov    edi,eax
  40e7d4:	js     0x40e842
  40e7d6:	mov    edx,DWORD PTR [rbx+0x10]
  40e7d9:	test   dl,0x40
  40e7dc:	je     0x40e830
  40e7de:	mov    rax,QWORD PTR [rbx+0x18]
  40e7e2:	mov    QWORD PTR [rbx+0x20],rax
  40e7e6:	and    edx,0xffffffbf
  40e7e9:	mov    DWORD PTR [rbx+0x18],edi
  40e7ec:	mov    DWORD PTR [rbx+0x10],edx
  40e7ef:	jmp    0x40e5fc
  40e7f4:	mov    ecx,DWORD PTR [rip+0x263f6]        # 0x434bf0
  40e7fa:	mov    rdx,QWORD PTR [rip+0x263c7]        # 0x434bc8
  40e801:	add    rcx,QWORD PTR [rip+0x15430]        # 0x423c38
  40e808:	call   0x421e60
  40e80d:	jmp    0x40e5fc
  40e812:	mov    rcx,QWORD PTR [rbx+0x18]
  40e816:	call   0x409a50
  40e81b:	mov    edx,DWORD PTR [rbx+0x10]
  40e81e:	mov    QWORD PTR [rbx+0x20],rax
  40e822:	jmp    0x40e70d
  40e827:	nop    WORD PTR [rax+rax*1+0x0]
  40e830:	mov    rcx,QWORD PTR [rbx+0x18]
  40e834:	call   0x409a50
  40e839:	mov    edx,DWORD PTR [rbx+0x10]
  40e83c:	mov    QWORD PTR [rbx+0x20],rax
  40e840:	jmp    0x40e7e6
  40e842:	mov    rcx,QWORD PTR [rsi+0x28]
  40e846:	mov    r8,QWORD PTR [rbx+0x18]
  40e84a:	lea    rdx,[rip+0x19e84]        # 0x4286d5
  40e851:	call   0x408860
  40e856:	mov    rcx,QWORD PTR [rsi+0x28]
  40e85a:	lea    rdx,[rip+0x19e6f]        # 0x4286d0
  40e861:	mov    r8,r15
  40e864:	call   0x408860
  40e869:	mov    rcx,QWORD PTR [rsi+0x28]
  40e86d:	mov    r8,QWORD PTR [rbx+0x18]
  40e871:	lea    rdx,[rip+0x19e62]        # 0x4286da
  40e878:	call   0x408860
  40e87d:	nop
  40e87e:	xchg   ax,ax
  40e880:	push   r15
  40e882:	push   r14
  40e884:	push   r13
  40e886:	push   r12
  40e888:	push   rbp
  40e889:	push   rdi
  40e88a:	push   rsi
  40e88b:	push   rbx
  40e88c:	sub    rsp,0x38
  40e890:	mov    edi,edx
  40e892:	mov    rbp,rcx
  40e895:	mov    rcx,r8
  40e898:	mov    rbx,r8
  40e89b:	mov    r12,r9
  40e89e:	call   0x421d98
  40e8a3:	movsxd rdx,edi
  40e8a6:	cmp    rax,rdx
  40e8a9:	setae  sil
  40e8ad:	test   rax,rax
  40e8b0:	sete   al
  40e8b3:	or     sil,al
  40e8b6:	jne    0x40e8f5
  40e8b8:	movzx  r10d,BYTE PTR [rbx]
  40e8bc:	cmp    r10b,0x24
  40e8c0:	je     0x40e910
  40e8c2:	mov    r9d,r10d
  40e8c5:	xor    eax,eax
  40e8c7:	jmp    0x40e8e4
  40e8c9:	nop    DWORD PTR [rax+0x0]
  40e8d0:	add    rax,0x1
  40e8d4:	mov    r8d,edi
  40e8d7:	sub    r8d,eax
  40e8da:	test   r8d,r8d
  40e8dd:	jle    0x40e8f5
  40e8df:	movzx  r9d,BYTE PTR [rbx+rax*1]
  40e8e4:	test   r9b,r9b
  40e8e7:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40e8ec:	jne    0x40e8d0
  40e8ee:	mov    esi,0x1
  40e8f3:	jmp    0x40e8f7
  40e8f5:	xor    esi,esi
  40e8f7:	mov    eax,esi
  40e8f9:	add    rsp,0x38
  40e8fd:	pop    rbx
  40e8fe:	pop    rsi
  40e8ff:	pop    rdi
  40e900:	pop    rbp
  40e901:	pop    r12
  40e903:	pop    r13
  40e905:	pop    r14
  40e907:	pop    r15
  40e909:	ret    
  40e90a:	nop    WORD PTR [rax+rax*1+0x0]
  40e910:	movzx  eax,BYTE PTR [rbx+0x1]
  40e914:	cmp    al,0x24
  40e916:	je     0x40ea0e
  40e91c:	cmp    al,0x40
  40e91e:	je     0x40e9da
  40e924:	test   al,al
  40e926:	je     0x40e8f7
  40e928:	cmp    al,0x7f
  40e92a:	ja     0x40e8f7
  40e92c:	lea    rcx,[rip+0x1d98d]        # 0x42c2c0
  40e933:	movzx  edx,al
  40e936:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40e93d:	je     0x40e8f7
  40e93f:	add    rbx,0x1
  40e943:	mov    r8,rbp
  40e946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e950:	add    r8,0x1
  40e954:	add    rbx,0x1
  40e958:	mov    BYTE PTR [r8-0x1],al
  40e95c:	movzx  eax,BYTE PTR [rbx]
  40e95f:	cmp    al,0x7f
  40e961:	ja     0x40e96f
  40e963:	movzx  edx,al
  40e966:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40e96d:	jne    0x40e950
  40e96f:	cmp    r8,rbp
  40e972:	je     0x40e8f7
  40e974:	mov    BYTE PTR [r8],0x0
  40e978:	mov    rcx,rbp
  40e97b:	call   0x421e30
  40e980:	test   rax,rax
  40e983:	mov    r14,rax
  40e986:	je     0x40e8f7
  40e98c:	mov    rcx,rax
  40e98f:	mov    edi,edi
  40e991:	call   0x421d98
  40e996:	mov    rcx,rbx
  40e999:	mov    r13,rax
  40e99c:	call   0x421d98
  40e9a1:	lea    r12,[rax+0x1]
  40e9a5:	lea    rax,[r12+r13*1]
  40e9a9:	cmp    rax,rdi
  40e9ac:	jae    0x40e8f7
  40e9b2:	mov    r8,r13
  40e9b5:	mov    rdx,r14
  40e9b8:	mov    rcx,rbp
  40e9bb:	call   0x421e08
  40e9c0:	lea    rcx,[rbp+r13*1+0x0]
  40e9c5:	mov    r8,r12
  40e9c8:	mov    rdx,rbx
  40e9cb:	mov    esi,0x1
  40e9d0:	call   0x421e08
  40e9d5:	jmp    0x40e8f7
  40e9da:	mov    r9,QWORD PTR [rip+0x14fe7]        # 0x4239c8
  40e9e1:	cmp    BYTE PTR [r9],0x0
  40e9e5:	je     0x40e8f5
  40e9eb:	add    rbx,0x2
  40e9ef:	lea    r8,[rip+0x19965]        # 0x42835b
  40e9f6:	mov    rcx,rbp
  40e9f9:	mov    QWORD PTR [rsp+0x20],rbx
  40e9fe:	call   0x408290
  40ea03:	cmp    edi,eax
  40ea05:	setg   sil
  40ea09:	jmp    0x40e8f7
  40ea0e:	movzx  eax,BYTE PTR [rbx+0x2]
  40ea12:	test   al,al
  40ea14:	je     0x40eab6
  40ea1a:	cmp    al,0x5c
  40ea1c:	mov    r15d,0x3
  40ea22:	jne    0x40e8f7
  40ea28:	mov    edx,0x5c
  40ea2d:	mov    rcx,r12
  40ea30:	mov    r14,r12
  40ea33:	call   0x421dc0
  40ea38:	test   rax,rax
  40ea3b:	je     0x40eac1
  40ea41:	mov    edx,0x5c
  40ea46:	mov    rcx,r14
  40ea49:	call   0x421d78
  40ea4e:	test   rax,rax
  40ea51:	mov    r13,rax
  40ea54:	je     0x40e8f7
  40ea5a:	movsxd rax,r15d
  40ea5d:	sub    r13,r14
  40ea60:	mov    edi,edi
  40ea62:	add    rbx,rax
  40ea65:	add    r13,0x1
  40ea69:	mov    rcx,rbx
  40ea6c:	call   0x421d98
  40ea71:	lea    r15,[rax+0x1]
  40ea75:	lea    rax,[r15+r13*1]
  40ea79:	cmp    rax,rdi
  40ea7c:	ja     0x40e8f7
  40ea82:	mov    r8,r13
  40ea85:	mov    rdx,r14
  40ea88:	mov    rcx,rbp
  40ea8b:	call   0x421e08
  40ea90:	lea    rcx,[rbp+r13*1+0x0]
  40ea95:	mov    r8,r15
  40ea98:	mov    rdx,rbx
  40ea9b:	call   0x421e08
  40eaa0:	cmp    r12,r14
  40eaa3:	je     0x40e8ee
  40eaa9:	mov    rcx,r14
  40eaac:	call   0x421e50
  40eab1:	jmp    0x40e8ee
  40eab6:	mov    r15d,0x2
  40eabc:	jmp    0x40ea28
  40eac1:	lea    rcx,[rip+0x1985a]        # 0x428322
  40eac8:	call   0x421e30
  40eacd:	mov    rdx,r12
  40ead0:	mov    rcx,rax
  40ead3:	call   0x40ac50
  40ead8:	test   rax,rax
  40eadb:	mov    r14,rax
  40eade:	jne    0x40ea41
  40eae4:	jmp    0x40e8f7
  40eae9:	nop    DWORD PTR [rax+0x0]
  40eaf0:	push   r15
  40eaf2:	push   r14
  40eaf4:	push   r13
  40eaf6:	push   r12
  40eaf8:	push   rbp
  40eaf9:	push   rdi
  40eafa:	push   rsi
  40eafb:	push   rbx
  40eafc:	sub    rsp,0x178
  40eb03:	mov    rbx,rcx
  40eb06:	mov    r12,rdx
  40eb09:	mov    rcx,QWORD PTR [rip+0x151b0]        # 0x423cc0
  40eb10:	mov    rdx,QWORD PTR [rip+0x260b1]        # 0x434bc8
  40eb17:	mov    r13,r8
  40eb1a:	lea    rsi,[rbx+0x8]
  40eb1e:	lea    rbp,[rsp+0x60]
  40eb23:	call   0x421e60
  40eb28:	mov    rbx,QWORD PTR [rbx]
  40eb2b:	test   rbx,rbx
  40eb2e:	je     0x40ec00
  40eb34:	lea    r15,[rsp+0x20]
  40eb39:	mov    r14,QWORD PTR [rip+0x2a6b4]        # 0x4391f4
  40eb40:	jmp    0x40eb64
  40eb42:	mov    rdx,QWORD PTR [rip+0x2607f]        # 0x434bc8
  40eb49:	add    rsi,0x8
  40eb4d:	mov    ecx,0xa
  40eb52:	call   0x421e68
  40eb57:	mov    rbx,QWORD PTR [rsi-0x8]
  40eb5b:	test   rbx,rbx
  40eb5e:	je     0x40ec00
  40eb64:	mov    r9,r13
  40eb67:	mov    r8,rbx
  40eb6a:	mov    edx,0x105
  40eb6f:	mov    rcx,rbp
  40eb72:	mov    rdi,rbx
  40eb75:	call   0x40e880
  40eb7a:	test   al,al
  40eb7c:	je     0x40eb86
  40eb7e:	cmp    BYTE PTR [rbx],0x24
  40eb81:	mov    rdi,rbp
  40eb84:	je     0x40ebe4
  40eb86:	mov    rdx,QWORD PTR [rip+0x1511b]        # 0x423ca8
  40eb8d:	mov    rcx,QWORD PTR [rip+0x26034]        # 0x434bc8
  40eb94:	mov    r8,rbx
  40eb97:	call   0x407ea0
  40eb9c:	cmp    BYTE PTR [r12],0x0
  40eba1:	je     0x40eb42
  40eba3:	mov    rdx,r15
  40eba6:	mov    rcx,rdi
  40eba9:	call   r14
  40ebac:	test   eax,eax
  40ebae:	jne    0x40eb42
  40ebb0:	movzx  eax,WORD PTR [rsp+0x26]
  40ebb5:	and    ax,0xf000
  40ebb9:	cmp    ax,0x4000
  40ebbd:	jne    0x40eb42
  40ebbf:	mov    rdx,QWORD PTR [rip+0x26002]        # 0x434bc8
  40ebc6:	mov    ecx,0x5c
  40ebcb:	call   0x421e68
  40ebd0:	mov    rdx,QWORD PTR [rip+0x25ff1]        # 0x434bc8
  40ebd7:	mov    rcx,r12
  40ebda:	call   0x421e60
  40ebdf:	jmp    0x40eb42
  40ebe4:	movzx  eax,BYTE PTR [rbx+0x1]
  40ebe8:	cmp    al,0x40
  40ebea:	je     0x40ebf0
  40ebec:	cmp    al,0x24
  40ebee:	jne    0x40eb86
  40ebf0:	mov    rdi,rbp
  40ebf3:	mov    rbx,rbp
  40ebf6:	jmp    0x40eb86
  40ebf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ec00:	add    rsp,0x178
  40ec07:	pop    rbx
  40ec08:	pop    rsi
  40ec09:	pop    rdi
  40ec0a:	pop    rbp
  40ec0b:	pop    r12
  40ec0d:	pop    r13
  40ec0f:	pop    r14
  40ec11:	pop    r15
  40ec13:	ret    
  40ec14:	xchg   ax,ax
  40ec16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec20:	push   r15
  40ec22:	push   r14
  40ec24:	push   r13
  40ec26:	push   r12
  40ec28:	push   rbp
  40ec29:	push   rdi
  40ec2a:	push   rsi
  40ec2b:	push   rbx
  40ec2c:	sub    rsp,0xc8
  40ec33:	mov    rax,QWORD PTR [rip+0x14afe]        # 0x423738
  40ec3a:	mov    rsi,rcx
  40ec3d:	mov    edx,DWORD PTR [rax+0x78]
  40ec40:	test   dl,0xf
  40ec43:	je     0x40f000
  40ec49:	mov    rdx,QWORD PTR [rax+0x80]
  40ec50:	mov    QWORD PTR [rip+0x25fb9],rdx        # 0x434c10
  40ec57:	test   BYTE PTR [rax+0x10],0xf
  40ec5b:	mov    r12,QWORD PTR [rip+0x2a31a]        # 0x438f7c
  40ec62:	jne    0x40f025
  40ec68:	cmp    QWORD PTR [rip+0x25f98],0x0        # 0x434c08
  40ec70:	je     0x40ec85
  40ec72:	call   r12
  40ec75:	mov    rcx,QWORD PTR [rip+0x25f8c]        # 0x434c08
  40ec7c:	lea    rdx,[rax+0x30]
  40ec80:	call   0x421e60
  40ec85:	lea    rdi,[rsp+0x40]
  40ec8a:	xor    ecx,ecx
  40ec8c:	call   QWORD PTR [rip+0x2a3c2]        # 0x439054
  40ec92:	lea    rcx,[rsp+0x38]
  40ec97:	mov    QWORD PTR [rsp+0x38],rax
  40ec9c:	call   QWORD PTR [rip+0x2a37a]        # 0x43901c
  40eca2:	lea    r8,[rip+0x1acb8]        # 0x429961
  40eca9:	mov    r9,rax
  40ecac:	mov    edx,0x80
  40ecb1:	mov    rcx,rdi
  40ecb4:	call   0x421da0
  40ecb9:	mov    rax,QWORD PTR [rip+0x14a78]        # 0x423738
  40ecc0:	lea    r8,[rip+0x1ac93]        # 0x42995a
  40ecc7:	test   BYTE PTR [rax+0x10],0xf
  40eccb:	je     0x40ecd1
  40eccd:	mov    r8,QWORD PTR [rax+0x18]
  40ecd1:	cmp    QWORD PTR [rip+0x25f2f],0x0        # 0x434c08
  40ecd9:	je     0x40f404
  40ecdf:	lea    rdx,[rip+0x1c304]        # 0x42afea
  40ece6:	lea    rcx,[rip+0x1c0b3]        # 0x42ada0
  40eced:	mov    r9,rdi
  40ecf0:	xor    ebx,ebx
  40ecf2:	call   0x4082b0
  40ecf7:	mov    rdx,QWORD PTR [rsi+0x30]
  40ecfb:	lea    rcx,[rip+0x1ad6f]        # 0x429a71
  40ed02:	call   0x4082b0
  40ed07:	mov    rbp,QWORD PTR [rsi+0x30]
  40ed0b:	mov    r13,QWORD PTR [rip+0x2a4b2]        # 0x4391c4
  40ed12:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  40ed17:	call   r13
  40ed1a:	mov    BYTE PTR [rdi+rbx*1],al
  40ed1d:	add    rbx,0x1
  40ed21:	test   al,al
  40ed23:	jne    0x40ed12
  40ed25:	lea    r8,[rip+0x19b77]        # 0x4288a3
  40ed2c:	lea    rcx,[rip+0x1ae26]        # 0x429b59
  40ed33:	mov    rdx,rbp
  40ed36:	mov    QWORD PTR [rsi+0x20],rdi
  40ed3a:	mov    QWORD PTR [rsi+0x28],rdi
  40ed3e:	call   0x4082b0
  40ed43:	mov    rdx,QWORD PTR [rsi+0x30]
  40ed47:	lea    r8,[rip+0x19b5f]        # 0x4288ad
  40ed4e:	lea    rcx,[rip+0x1ae04]        # 0x429b59
  40ed55:	call   0x4082b0
  40ed5a:	mov    rbx,QWORD PTR [rsi+0x78]
  40ed5e:	lea    rdx,[rip+0x2dfb]        # 0x411b60
  40ed65:	mov    eax,DWORD PTR [rsi+0xb0]
  40ed6b:	cmp    QWORD PTR [rbx+0x38],rdx
  40ed6f:	je     0x40ed9f
  40ed71:	cmp    eax,0x1
  40ed74:	jle    0x40edba
  40ed76:	sub    eax,0x2
  40ed79:	add    rax,0x1
  40ed7d:	lea    rcx,[rax+rax*2]
  40ed81:	lea    rax,[rax+rcx*4]
  40ed85:	lea    rcx,[rbx+rax*8]
  40ed89:	mov    rax,rbx
  40ed8c:	jmp    0x40ed95
  40ed8e:	xchg   ax,ax
  40ed90:	cmp    rax,rcx
  40ed93:	je     0x40edba
  40ed95:	add    rax,0x68
  40ed99:	cmp    QWORD PTR [rax+0x38],rdx
  40ed9d:	jne    0x40ed90
  40ed9f:	mov    rdx,QWORD PTR [rsi+0x30]
  40eda3:	lea    r8,[rip+0x19b09]        # 0x4288b3
  40edaa:	lea    rcx,[rip+0x1ada8]        # 0x429b59
  40edb1:	call   0x4082b0
  40edb6:	mov    rbx,QWORD PTR [rsi+0x78]
  40edba:	mov    eax,DWORD PTR [rsi+0xb4]
  40edc0:	test   eax,eax
  40edc2:	jle    0x40ee90
  40edc8:	sub    eax,0x1
  40edcb:	lea    r14,[rip+0x1b7fa]        # 0x42a5cc
  40edd2:	lea    r13,[rip+0x1c18e]        # 0x42af67
  40edd9:	add    rax,0x1
  40eddd:	lea    rdx,[rax+rax*2]
  40ede1:	lea    rax,[rax+rdx*4]
  40ede5:	lea    rbp,[rbx+rax*8]
  40ede9:	jmp    0x40ee36
  40edeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40edf0:	cmp    eax,0x4
  40edf3:	je     0x40eff0
  40edf9:	cmp    eax,0x5
  40edfc:	jne    0x40efd0
  40ee02:	mov    r9d,DWORD PTR [rbx+0x18]
  40ee06:	lea    r8,[rip+0x19477]        # 0x428284
  40ee0d:	mov    edx,0x20
  40ee12:	mov    rcx,rdi
  40ee15:	call   0x408290
  40ee1a:	mov    r8,QWORD PTR [rbx+0x48]
  40ee1e:	mov    r9,rdi
  40ee21:	mov    rdx,QWORD PTR [rsi+0x30]
  40ee25:	mov    rcx,r15
  40ee28:	call   0x4082b0
  40ee2d:	add    rbx,0x68
  40ee31:	cmp    rbx,rbp
  40ee34:	je     0x40ee90
  40ee36:	mov    eax,DWORD PTR [rbx+0x10]
  40ee39:	test   eax,0x280000
  40ee3e:	jne    0x40ee2d
  40ee40:	mov    r8,QWORD PTR [rbx+0x48]
  40ee44:	test   r8,r8
  40ee47:	je     0x40ee2d
  40ee49:	cmp    WORD PTR [rbx+0xc],0x1
  40ee4e:	mov    r15,r13
  40ee51:	cmova  r15,r14
  40ee55:	and    eax,0xf000
  40ee5a:	shr    eax,0xc
  40ee5d:	cmp    eax,0x3
  40ee60:	je     0x40efb0
  40ee66:	ja     0x40edf0
  40ee68:	cmp    eax,0x2
  40ee6b:	jne    0x40efd0
  40ee71:	mov    rdx,rbx
  40ee74:	mov    ecx,0x2
  40ee79:	call   QWORD PTR [rbx+0x38]
  40ee7c:	mov    r9,QWORD PTR [rbx+0x18]
  40ee80:	mov    r8,QWORD PTR [rbx+0x48]
  40ee84:	jmp    0x40ee21
  40ee86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee90:	mov    eax,DWORD PTR [rsi+0x10]
  40ee93:	and    eax,0x3
  40ee96:	cmp    eax,0x2
  40ee99:	je     0x40f3c4
  40ee9f:	cmp    eax,0x3
  40eea2:	je     0x40f2e0
  40eea8:	cmp    eax,0x1
  40eeab:	je     0x40f160
  40eeb1:	call   r12
  40eeb4:	lea    rcx,[rip+0x1b9b2]        # 0x42a86d
  40eebb:	lea    r9,[rax+0x30]
  40eebf:	mov    r8d,0x66
  40eec5:	mov    edx,0x1
  40eeca:	call   0x421e38
  40eecf:	call   r12
  40eed2:	lea    rcx,[rip+0x1b12d]        # 0x42a006
  40eed9:	lea    r9,[rax+0x30]
  40eedd:	mov    edx,0x1
  40eee2:	mov    r8d,0xfa
  40eee8:	call   0x421e38
  40eeed:	mov    rcx,rsi
  40eef0:	call   0x40a4b0
  40eef5:	mov    rdx,QWORD PTR [rsi+0x30]
  40eef9:	lea    rcx,[rip+0x1b345]        # 0x42a245
  40ef00:	call   0x4082b0
  40ef05:	mov    edi,DWORD PTR [rsi+0xb4]
  40ef0b:	mov    rdx,QWORD PTR [rsi+0x30]
  40ef0f:	lea    rcx,[rip+0x1af75]        # 0x429e8b
  40ef16:	mov    rbx,QWORD PTR [rsi+0x78]
  40ef1a:	call   0x4082b0
  40ef1f:	test   edi,edi
  40ef21:	jle    0x40f213
  40ef27:	lea    eax,[rdi-0x1]
  40ef2a:	lea    rbp,[rip+0x1ae06]        # 0x429d37
  40ef31:	lea    rdi,[rip+0x1ae5b]        # 0x429d93
  40ef38:	add    rax,0x1
  40ef3c:	lea    rdx,[rax+rax*2]
  40ef40:	lea    rax,[rax+rdx*4]
  40ef44:	lea    r13,[rbx+rax*8]
  40ef48:	jmp    0x40ef7f
  40ef4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ef50:	test   eax,0x100000
  40ef55:	je     0x40ef72
  40ef57:	cmp    WORD PTR [rbx+0xc],0x2
  40ef5c:	mov    rcx,rbp
  40ef5f:	mov    r9d,0x1
  40ef65:	cmovb  rcx,rdi
  40ef69:	mov    rdx,QWORD PTR [rsi+0x30]
  40ef6d:	call   0x4082b0
  40ef72:	add    rbx,0x68
  40ef76:	cmp    rbx,r13
  40ef79:	je     0x40f213
  40ef7f:	mov    eax,DWORD PTR [rbx+0x10]
  40ef82:	test   eax,0x280000
  40ef87:	jne    0x40ef72
  40ef89:	mov    r8,QWORD PTR [rbx+0x48]
  40ef8d:	test   r8,r8
  40ef90:	je     0x40ef72
  40ef92:	movzx  r9d,WORD PTR [rbx+0xa]
  40ef97:	test   r9w,r9w
  40ef9b:	je     0x40ef50
  40ef9d:	cmp    WORD PTR [rbx+0xc],0x1
  40efa2:	mov    rcx,rdi
  40efa5:	cmova  rcx,rbp
  40efa9:	jmp    0x40ef69
  40efab:	nop    DWORD PTR [rax+rax*1+0x0]
  40efb0:	mov    eax,DWORD PTR [rbx+0x18]
  40efb3:	lea    r9,[rip+0x1a855]        # 0x42980f
  40efba:	test   eax,eax
  40efbc:	lea    rax,[rip+0x1a9cc]        # 0x42998f
  40efc3:	cmovne r9,rax
  40efc7:	jmp    0x40ee21
  40efcc:	nop    DWORD PTR [rax+0x0]
  40efd0:	mov    r9,QWORD PTR [rbx+0x18]
  40efd4:	test   r9,r9
  40efd7:	jne    0x40ee21
  40efdd:	lea    rax,[rip+0x1bfc8]        # 0x42afac
  40efe4:	cmp    r15,r13
  40efe7:	cmove  r15,rax
  40efeb:	jmp    0x40ee21
  40eff0:	mov    r9d,DWORD PTR [rbx+0x18]
  40eff4:	lea    r8,[rip+0x19707]        # 0x428702
  40effb:	jmp    0x40ee0d
  40f000:	and    edx,0x20
  40f003:	je     0x40f3e0
  40f009:	test   BYTE PTR [rax+0x10],0xf
  40f00d:	mov    QWORD PTR [rip+0x25bf8],0x0        # 0x434c10
  40f018:	mov    r12,QWORD PTR [rip+0x29f5d]        # 0x438f7c
  40f01f:	je     0x40ec68
  40f025:	mov    r13,QWORD PTR [rax+0x18]
  40f029:	lea    rdx,[rip+0x196c0]        # 0x4286f0
  40f030:	mov    rbp,QWORD PTR [rsi+0x28]
  40f034:	mov    rcx,r13
  40f037:	call   0x421e78
  40f03c:	test   rax,rax
  40f03f:	mov    rdi,rax
  40f042:	je     0x40f464
  40f048:	mov    rcx,rax
  40f04b:	call   0x421cf0
  40f050:	lea    rdx,[rsp+0x40]
  40f055:	mov    ecx,eax
  40f057:	call   QWORD PTR [rip+0x29f97]        # 0x438ff4
  40f05d:	test   eax,eax
  40f05f:	jne    0x40f474
  40f065:	movzx  eax,WORD PTR [rsp+0x46]
  40f06a:	and    ax,0xf000
  40f06e:	cmp    ax,0x8000
  40f072:	jne    0x40f474
  40f078:	mov    rax,QWORD PTR [rsp+0x58]
  40f07d:	lea    rcx,[rax+0x1]
  40f081:	call   0x409ce0
  40f086:	mov    r8,QWORD PTR [rsp+0x58]
  40f08b:	mov    r12,rax
  40f08e:	mov    rbx,rax
  40f091:	jmp    0x40f0a8
  40f093:	mov    r8,QWORD PTR [rsp+0x58]
  40f098:	sub    r8,rax
  40f09b:	test   r8,r8
  40f09e:	mov    QWORD PTR [rsp+0x58],r8
  40f0a3:	je     0x40f0bd
  40f0a5:	add    rbx,rax
  40f0a8:	mov    r9,rdi
  40f0ab:	mov    edx,0x1
  40f0b0:	mov    rcx,rbx
  40f0b3:	call   0x421e58
  40f0b8:	test   rax,rax
  40f0bb:	jne    0x40f093
  40f0bd:	mov    BYTE PTR [rbx],0x0
  40f0c0:	mov    rcx,rdi
  40f0c3:	call   0x421e90
  40f0c8:	test   r12,r12
  40f0cb:	mov    QWORD PTR [rip+0x25b26],r12        # 0x434bf8
  40f0d2:	je     0x40f11a
  40f0d4:	lea    rdx,[rip+0x1bf0f]        # 0x42afea
  40f0db:	mov    rcx,r12
  40f0de:	call   0x421d70
  40f0e3:	test   rax,rax
  40f0e6:	je     0x40f448
  40f0ec:	lea    rcx,[rax+0x1]
  40f0f0:	lea    rdx,[rip+0x1ad20]        # 0x429e17
  40f0f7:	mov    BYTE PTR [rax],0x0
  40f0fa:	call   0x421d70
  40f0ff:	test   rax,rax
  40f102:	je     0x40f42f
  40f108:	add    rax,0x73
  40f10c:	mov    QWORD PTR [rip+0x25af5],r12        # 0x434c08
  40f113:	mov    QWORD PTR [rip+0x25ae6],rax        # 0x434c00
  40f11a:	mov    r12,QWORD PTR [rip+0x29e5b]        # 0x438f7c
  40f121:	call   r12
  40f124:	lea    rdx,[rip+0x195cd]        # 0x4286f8
  40f12b:	lea    r8,[rax+0x30]
  40f12f:	mov    rcx,r13
  40f132:	call   0x421e48
  40f137:	mov    rbx,rax
  40f13a:	call   r12
  40f13d:	lea    rdx,[rax+0x30]
  40f141:	cmp    rbx,rdx
  40f144:	je     0x40ec68
  40f14a:	lea    rdx,[rip+0x195a9]        # 0x4286fa
  40f151:	mov    r8,r13
  40f154:	mov    rcx,rbp
  40f157:	call   0x408860
  40f15c:	nop    DWORD PTR [rax+0x0]
  40f160:	call   r12
  40f163:	lea    rcx,[rip+0x1b00c]        # 0x42a176
  40f16a:	lea    r9,[rax+0x30]
  40f16e:	mov    r8d,0xce
  40f174:	mov    edx,0x1
  40f179:	call   0x421e38
  40f17e:	call   r12
  40f181:	lea    rcx,[rip+0x1a6b6]        # 0x42983e
  40f188:	lea    r9,[rax+0x30]
  40f18c:	mov    r8d,0xa
  40f192:	mov    edx,0x1
  40f197:	call   0x421e38
  40f19c:	call   r12
  40f19f:	lea    rcx,[rip+0x1ae60]        # 0x42a006
  40f1a6:	lea    r9,[rax+0x30]
  40f1aa:	mov    edx,0x1
  40f1af:	mov    r8d,0xfa
  40f1b5:	call   0x421e38
  40f1ba:	mov    rcx,rsi
  40f1bd:	call   0x40a4b0
  40f1c2:	mov    rdx,QWORD PTR [rsi+0x30]
  40f1c6:	lea    rcx,[rip+0x1b078]        # 0x42a245
  40f1cd:	call   0x4082b0
  40f1d2:	call   r12
  40f1d5:	lea    rcx,[rip+0x1a5fc]        # 0x4297d8
  40f1dc:	lea    r9,[rax+0x30]
  40f1e0:	mov    r8d,0xc
  40f1e6:	mov    edx,0x1
  40f1eb:	call   0x421e38
  40f1f0:	call   r12
  40f1f3:	lea    rcx,[rip+0x1b470]        # 0x42a66a
  40f1fa:	lea    r9,[rax+0x30]
  40f1fe:	mov    r8d,0x38
  40f204:	mov    edx,0x1
  40f209:	call   0x421e38
  40f20e:	jmp    0x40ef05
  40f213:	call   r12
  40f216:	lea    rcx,[rip+0x1abfa]        # 0x429e17
  40f21d:	lea    r9,[rax+0x30]
  40f221:	mov    r8d,0x73
  40f227:	mov    edx,0x1
  40f22c:	call   0x421e38
  40f231:	mov    rax,QWORD PTR [rip+0x259c8]        # 0x434c00
  40f238:	test   rax,rax
  40f23b:	je     0x40f242
  40f23d:	cmp    BYTE PTR [rax],0x0
  40f240:	jne    0x40f2b0
  40f242:	mov    rax,QWORD PTR [rip+0x144ef]        # 0x423738
  40f249:	test   BYTE PTR [rax+0x78],0x20
  40f24d:	je     0x40f2c5
  40f24f:	call   r12
  40f252:	lea    rcx,[rax+0x30]
  40f256:	call   0x421e90
  40f25b:	call   r12
  40f25e:	lea    rcx,[rax+0x30]
  40f262:	call   0x421e88
  40f267:	test   eax,eax
  40f269:	jne    0x40f486
  40f26f:	mov    rcx,QWORD PTR [rip+0x25982]        # 0x434bf8
  40f276:	call   0x421e50
  40f27b:	mov    QWORD PTR [rip+0x25982],0x0        # 0x434c08
  40f286:	mov    QWORD PTR [rip+0x2596f],0x0        # 0x434c00
  40f291:	mov    QWORD PTR [rip+0x2595c],0x0        # 0x434bf8
  40f29c:	add    rsp,0xc8
  40f2a3:	pop    rbx
  40f2a4:	pop    rsi
  40f2a5:	pop    rdi
  40f2a6:	pop    rbp
  40f2a7:	pop    r12
  40f2a9:	pop    r13
  40f2ab:	pop    r14
  40f2ad:	pop    r15
  40f2af:	ret    
  40f2b0:	call   r12
  40f2b3:	mov    rcx,QWORD PTR [rip+0x25946]        # 0x434c00
  40f2ba:	lea    rdx,[rax+0x30]
  40f2be:	call   0x421e60
  40f2c3:	jmp    0x40f24f
  40f2c5:	mov    rdx,QWORD PTR [rsi+0x30]
  40f2c9:	lea    rcx,[rip+0x1a664]        # 0x429934
  40f2d0:	call   0x4082b0
  40f2d5:	jmp    0x40f24f
  40f2da:	nop    WORD PTR [rax+rax*1+0x0]
  40f2e0:	call   r12
  40f2e3:	lea    rcx,[rip+0x1ae8c]        # 0x42a176
  40f2ea:	lea    r9,[rax+0x30]
  40f2ee:	mov    r8d,0xce
  40f2f4:	mov    edx,0x1
  40f2f9:	call   0x421e38
  40f2fe:	call   r12
  40f301:	lea    rcx,[rip+0x1a536]        # 0x42983e
  40f308:	lea    r9,[rax+0x30]
  40f30c:	mov    r8d,0xa
  40f312:	mov    edx,0x1
  40f317:	call   0x421e38
  40f31c:	call   r12
  40f31f:	lea    rcx,[rip+0x1ace0]        # 0x42a006
  40f326:	lea    r9,[rax+0x30]
  40f32a:	mov    r8d,0xfa
  40f330:	mov    edx,0x1
  40f335:	call   0x421e38
  40f33a:	mov    rcx,rsi
  40f33d:	call   0x40a4b0
  40f342:	mov    rdx,QWORD PTR [rsi+0x30]
  40f346:	lea    rcx,[rip+0x1aef8]        # 0x42a245
  40f34d:	call   0x4082b0
  40f352:	call   r12
  40f355:	lea    rcx,[rip+0x1a47c]        # 0x4297d8
  40f35c:	lea    r9,[rax+0x30]
  40f360:	mov    r8d,0xc
  40f366:	mov    edx,0x1
  40f36b:	call   0x421e38
  40f370:	call   r12
  40f373:	lea    rcx,[rip+0x1a49b]        # 0x429815
  40f37a:	lea    r9,[rax+0x30]
  40f37e:	mov    r8d,0x9
  40f384:	mov    edx,0x1
  40f389:	call   0x421e38
  40f38e:	call   r12
  40f391:	lea    rcx,[rip+0x1ad69]        # 0x42a101
  40f398:	lea    r9,[rax+0x30]
  40f39c:	mov    edx,0x1
  40f3a1:	mov    r8d,0x74
  40f3a7:	call   0x421e38
  40f3ac:	mov    rcx,rsi
  40f3af:	call   0x40a220
  40f3b4:	mov    rdx,QWORD PTR [rsi+0x30]
  40f3b8:	lea    rcx,[rip+0x1b515]        # 0x42a8d4
  40f3bf:	jmp    0x40f1cd
  40f3c4:	call   r12
  40f3c7:	mov    r8d,0xce
  40f3cd:	lea    r9,[rax+0x30]
  40f3d1:	mov    edx,0x1
  40f3d6:	lea    rcx,[rip+0x1ad99]        # 0x42a176
  40f3dd:	jmp    0x40f36b
  40f3df:	nop
  40f3e0:	lea    rcx,[rip+0x192f9]        # 0x4286e0
  40f3e7:	call   0x421e30
  40f3ec:	test   rax,rax
  40f3ef:	mov    QWORD PTR [rip+0x2581a],rax        # 0x434c10
  40f3f6:	je     0x40f454
  40f3f8:	mov    rax,QWORD PTR [rip+0x14339]        # 0x423738
  40f3ff:	jmp    0x40ec57
  40f404:	mov    rdx,QWORD PTR [rip+0x25805]        # 0x434c10
  40f40b:	test   rdx,rdx
  40f40e:	je     0x40ecdf
  40f414:	lea    rcx,[rip+0x1a512]        # 0x42992d
  40f41b:	mov    QWORD PTR [rsp+0x28],r8
  40f420:	call   0x4082b0
  40f425:	mov    r8,QWORD PTR [rsp+0x28]
  40f42a:	jmp    0x40ecdf
  40f42f:	mov    rcx,r12
  40f432:	call   0x421d98
  40f437:	lea    rax,[r12+rax*1+0x53]
  40f43c:	mov    QWORD PTR [rip+0x257bd],rax        # 0x434c00
  40f443:	jmp    0x40f11a
  40f448:	mov    QWORD PTR [rip+0x257b1],r12        # 0x434c00
  40f44f:	jmp    0x40f11a
  40f454:	lea    rax,[rip+0x1928b]        # 0x4286e6
  40f45b:	mov    QWORD PTR [rip+0x257ae],rax        # 0x434c10
  40f462:	jmp    0x40f3f8
  40f464:	mov    QWORD PTR [rip+0x25789],0x0        # 0x434bf8
  40f46f:	jmp    0x40f11a
  40f474:	lea    rdx,[rip+0x19277]        # 0x4286f2
  40f47b:	mov    r8,r13
  40f47e:	mov    rcx,rbp
  40f481:	call   0x408860
  40f486:	mov    rcx,QWORD PTR [rsi+0x28]
  40f48a:	mov    r8,QWORD PTR [rip+0x14727]        # 0x423bb8
  40f491:	mov    rdx,QWORD PTR [rip+0x14730]        # 0x423bc8
  40f498:	call   0x408860
  40f49d:	nop
  40f49e:	xchg   ax,ax
  40f4a0:	push   rbx
  40f4a1:	sub    rsp,0x20
  40f4a5:	test   rcx,rcx
  40f4a8:	je     0x40f4be
  40f4aa:	cmp    DWORD PTR [rcx],0x6
  40f4ad:	mov    rbx,rcx
  40f4b0:	je     0x40f4c4
  40f4b2:	call   QWORD PTR [rip+0x29b14]        # 0x438fcc
  40f4b8:	mov    DWORD PTR [rax],0x16
  40f4be:	add    rsp,0x20
  40f4c2:	pop    rbx
  40f4c3:	ret    
  40f4c4:	mov    rcx,QWORD PTR [rcx+0x10]
  40f4c8:	call   0x407de0
  40f4cd:	mov    rcx,rbx
  40f4d0:	add    rsp,0x20
  40f4d4:	pop    rbx
  40f4d5:	jmp    0x421e50
  40f4da:	nop    WORD PTR [rax+rax*1+0x0]
  40f4e0:	push   rdi
  40f4e1:	push   rsi
  40f4e2:	push   rbx
  40f4e3:	sub    rsp,0x20
  40f4e7:	cmp    rcx,0xe
  40f4eb:	jbe    0x40f533
  40f4ed:	test   BYTE PTR [rdx+0x10],0x8
  40f4f1:	mov    rsi,rdx
  40f4f4:	je     0x40f540
  40f4f6:	mov    rcx,QWORD PTR [rdx+0x20]
  40f4fa:	test   rcx,rcx
  40f4fd:	je     0x40f533
  40f4ff:	mov    eax,DWORD PTR [rcx]
  40f501:	lea    rbx,[rcx+0x8]
  40f505:	test   eax,eax
  40f507:	jle    0x40f527
  40f509:	sub    eax,0x1
  40f50c:	lea    rdi,[rbx+rax*8+0x8]
  40f511:	add    rbx,0x8
  40f515:	mov    rcx,QWORD PTR [rbx-0x8]
  40f519:	call   0x40f4a0
  40f51e:	cmp    rbx,rdi
  40f521:	jne    0x40f511
  40f523:	mov    rcx,QWORD PTR [rsi+0x20]
  40f527:	add    rsp,0x20
  40f52b:	pop    rbx
  40f52c:	pop    rsi
  40f52d:	pop    rdi
  40f52e:	jmp    0x421e50
  40f533:	add    rsp,0x20
  40f537:	pop    rbx
  40f538:	pop    rsi
  40f539:	pop    rdi
  40f53a:	ret    
  40f53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f540:	mov    rbx,QWORD PTR [rdx+0x50]
  40f544:	mov    rcx,rbx
  40f547:	call   0x421d98
  40f54c:	mov    rcx,QWORD PTR [rsi+0x18]
  40f550:	mov    r8,rax
  40f553:	mov    rdx,rbx
  40f556:	call   0x40d130
  40f55b:	test   rax,rax
  40f55e:	je     0x40f533
  40f560:	lea    rcx,[rsi+0x20]
  40f564:	mov    rdx,rax
  40f567:	add    rsp,0x20
  40f56b:	pop    rbx
  40f56c:	pop    rsi
  40f56d:	pop    rdi
  40f56e:	jmp    0x409d30
  40f573:	nop    DWORD PTR [rax]
  40f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f580:	push   r12
  40f582:	push   rbp
  40f583:	push   rdi
  40f584:	push   rsi
  40f585:	push   rbx
  40f586:	sub    rsp,0x30
  40f58a:	mov    eax,DWORD PTR [rip+0x25660]        # 0x434bf0
  40f590:	mov    rdi,rdx
  40f593:	lea    rdx,[rip+0x1a126]        # 0x4296c0
  40f59a:	cmp    rcx,0x1
  40f59e:	mov    rbp,rcx
  40f5a1:	mov    rbx,r8
  40f5a4:	mov    esi,r9d
  40f5a7:	lea    r12,[rdx+rax*1+0xcb]
  40f5af:	je     0x40f5eb
  40f5b1:	cmp    rcx,0xf
  40f5b5:	ja     0x40f5c2
  40f5b7:	add    rsp,0x30
  40f5bb:	pop    rbx
  40f5bc:	pop    rsi
  40f5bd:	pop    rdi
  40f5be:	pop    rbp
  40f5bf:	pop    r12
  40f5c1:	ret    
  40f5c2:	mov    eax,DWORD PTR [rdi+0x18]
  40f5c5:	mov    rdx,QWORD PTR [rip+0x14604]        # 0x423bd0
  40f5cc:	lea    r12,[rip+0x19133]        # 0x428706
  40f5d3:	mov    DWORD PTR [rsp+0x20],eax
  40f5d7:	mov    r8,QWORD PTR [rcx+0x28]
  40f5db:	mov    r9,QWORD PTR [rdi+0x50]
  40f5df:	mov    rcx,QWORD PTR [rip+0x255e2]        # 0x434bc8
  40f5e6:	call   0x407ea0
  40f5eb:	test   BYTE PTR [rdi+0x13],0x1
  40f5ef:	jne    0x40f720
  40f5f5:	cmp    esi,0x1
  40f5f8:	jle    0x40f73f
  40f5fe:	mov    rdx,QWORD PTR [rip+0x146eb]        # 0x423cf0
  40f605:	mov    rcx,QWORD PTR [rip+0x255bc]        # 0x434bc8
  40f60c:	mov    r8,r12
  40f60f:	lea    rdi,[rip+0x1a2a2]        # 0x4298b8
  40f616:	call   0x407ea0
  40f61b:	cmp    rbp,0x1
  40f61f:	jne    0x40f668
  40f621:	jmp    0x40f750
  40f626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f630:	mov    rdx,QWORD PTR [rip+0x146a1]        # 0x423cd8
  40f637:	mov    rcx,QWORD PTR [rip+0x2558a]        # 0x434bc8
  40f63e:	mov    r8,rdi
  40f641:	mov    DWORD PTR [rsp+0x20],eax
  40f645:	call   0x407ea0
  40f64a:	sub    esi,0x1
  40f64d:	mov    rdx,QWORD PTR [rip+0x25574]        # 0x434bc8
  40f654:	test   esi,esi
  40f656:	jle    0x40f6ad
  40f658:	mov    rcx,QWORD PTR [rip+0x146a1]        # 0x423d00
  40f65f:	add    rbx,0x8
  40f663:	call   0x421e60
  40f668:	mov    eax,DWORD PTR [rbx+0x4]
  40f66b:	mov    r9d,DWORD PTR [rbx]
  40f66e:	cmp    eax,0x80000000
  40f673:	je     0x40f6e0
  40f675:	cmp    r9d,0x80000000
  40f67c:	je     0x40f700
  40f682:	cmp    eax,0x7fffffff
  40f687:	jne    0x40f630
  40f689:	mov    rdx,QWORD PTR [rip+0x14650]        # 0x423ce0
  40f690:	mov    rcx,QWORD PTR [rip+0x25531]        # 0x434bc8
  40f697:	mov    r8,rdi
  40f69a:	sub    esi,0x1
  40f69d:	call   0x407ea0
  40f6a2:	test   esi,esi
  40f6a4:	mov    rdx,QWORD PTR [rip+0x2551d]        # 0x434bc8
  40f6ab:	jg     0x40f658
  40f6ad:	mov    ecx,0xa
  40f6b2:	call   0x421e68
  40f6b7:	cmp    rbp,0xf
  40f6bb:	jbe    0x40f5b7
  40f6c1:	mov    rax,QWORD PTR [rbp+0x98]
  40f6c8:	mov    edx,0x1
  40f6cd:	mov    rcx,rbp
  40f6d0:	add    rsp,0x30
  40f6d4:	pop    rbx
  40f6d5:	pop    rsi
  40f6d6:	pop    rdi
  40f6d7:	pop    rbp
  40f6d8:	pop    r12
  40f6da:	rex.W jmp rax
  40f6dd:	nop    DWORD PTR [rax]
  40f6e0:	mov    rdx,QWORD PTR [rip+0x14601]        # 0x423ce8
  40f6e7:	mov    rcx,QWORD PTR [rip+0x254da]        # 0x434bc8
  40f6ee:	mov    r8,rdi
  40f6f1:	call   0x407ea0
  40f6f6:	jmp    0x40f64a
  40f6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f700:	mov    rdx,QWORD PTR [rip+0x14609]        # 0x423d10
  40f707:	mov    rcx,QWORD PTR [rip+0x254ba]        # 0x434bc8
  40f70e:	mov    r9d,eax
  40f711:	mov    r8,rdi
  40f714:	call   0x407ea0
  40f719:	jmp    0x40f64a
  40f71e:	xchg   ax,ax
  40f720:	mov    rdx,QWORD PTR [rip+0x145e1]        # 0x423d08
  40f727:	mov    rcx,QWORD PTR [rip+0x2549a]        # 0x434bc8
  40f72e:	mov    r8,r12
  40f731:	call   0x407ea0
  40f736:	cmp    esi,0x1
  40f739:	jg     0x40f5fe
  40f73f:	mov    rdx,QWORD PTR [rip+0x145b2]        # 0x423cf8
  40f746:	jmp    0x40f605
  40f74b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f750:	mov    eax,DWORD PTR [rip+0x2549a]        # 0x434bf0
  40f756:	lea    rdx,[rip+0x19f63]        # 0x4296c0
  40f75d:	lea    rdi,[rdx+rax*1+0xd2]
  40f765:	jmp    0x40f668
  40f76a:	nop    WORD PTR [rax+rax*1+0x0]
  40f770:	push   r15
  40f772:	push   r14
  40f774:	push   r13
  40f776:	push   r12
  40f778:	push   rbp
  40f779:	push   rdi
  40f77a:	push   rsi
  40f77b:	push   rbx
  40f77c:	sub    rsp,0x28
  40f780:	mov    ebx,0x3
  40f785:	mov    rbp,rcx
  40f788:	mov    rcx,rdx
  40f78b:	mov    rdi,rdx
  40f78e:	call   0x421d98
  40f793:	mov    r9,rbp
  40f796:	mov    r12,rax
  40f799:	mov    eax,0x1
  40f79e:	xchg   ax,ax
  40f7a0:	add    r9,0x1
  40f7a4:	movzx  ecx,BYTE PTR [r9-0x1]
  40f7a9:	lea    r10d,[rcx-0x20]
  40f7ad:	cmp    r10b,0x5e
  40f7b1:	ja     0x40f7d0
  40f7b3:	cmp    cl,0x5c
  40f7b6:	je     0x40f800
  40f7b8:	cmp    cl,0x22
  40f7bb:	mov    r10d,0x1
  40f7c1:	je     0x40f800
  40f7c3:	add    rbx,r10
  40f7c6:	jmp    0x40f7a0
  40f7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7d0:	cmp    cl,0xd
  40f7d3:	ja     0x40f7f3
  40f7d5:	mov    r10,rax
  40f7d8:	shl    r10,cl
  40f7db:	test   r10d,0x3b80
  40f7e2:	jne    0x40f810
  40f7e4:	test   r10d,0x400
  40f7eb:	jne    0x40f820
  40f7ed:	and    r10d,0x1
  40f7f1:	jne    0x40f828
  40f7f3:	add    rbx,0x4
  40f7f7:	jmp    0x40f7a0
  40f7f9:	nop    DWORD PTR [rax+0x0]
  40f800:	mov    r10d,0x2
  40f806:	jmp    0x40f7c3
  40f808:	nop    DWORD PTR [rax+rax*1+0x0]
  40f810:	add    rbx,0x2
  40f814:	jmp    0x40f7a0
  40f816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f820:	add    rbx,r12
  40f823:	jmp    0x40f7a0
  40f828:	mov    rcx,rbx
  40f82b:	lea    r14,[rip+0x18ed6]        # 0x428708
  40f832:	call   0x409ce0
  40f837:	mov    r13,rax
  40f83a:	lea    rsi,[rax+0x1]
  40f83e:	mov    BYTE PTR [rax],0x22
  40f841:	jmp    0x40f862
  40f843:	cmp    r8b,0x5c
  40f847:	je     0x40f964
  40f84d:	cmp    r8b,0x22
  40f851:	je     0x40f964
  40f857:	mov    BYTE PTR [rsi],r8b
  40f85a:	add    rsi,0x1
  40f85e:	add    rbp,0x1
  40f862:	movzx  r8d,BYTE PTR [rbp+0x0]
  40f867:	lea    ecx,[r8-0x20]
  40f86b:	cmp    cl,0x5e
  40f86e:	jbe    0x40f843
  40f870:	cmp    r8b,0xd
  40f874:	ja     0x40f94b
  40f87a:	movzx  eax,r8b
  40f87e:	movsxd rcx,DWORD PTR [r14+rax*4]
  40f882:	add    rcx,r14
  40f885:	jmp    rcx
  40f887:	movzx  eax,BYTE PTR [rbp+0x1]
  40f88b:	lea    r15,[rbp+0x1]
  40f88f:	cmp    al,0xa
  40f891:	jne    0x40f8aa
  40f893:	mov    BYTE PTR [rsi],0x5c
  40f896:	add    r15,0x1
  40f89a:	add    rsi,0x2
  40f89e:	mov    BYTE PTR [rsi-0x1],0x6e
  40f8a2:	movzx  eax,BYTE PTR [r15]
  40f8a6:	cmp    al,0xa
  40f8a8:	je     0x40f893
  40f8aa:	test   al,al
  40f8ac:	jne    0x40f970
  40f8b2:	mov    rax,rsi
  40f8b5:	mov    BYTE PTR [rsi],0x5c
  40f8b8:	add    rsi,0x2
  40f8bc:	mov    BYTE PTR [rax+0x1],0x6e
  40f8c0:	mov    BYTE PTR [rsi],0x22
  40f8c3:	mov    BYTE PTR [rsi+0x1],0x0
  40f8c7:	add    rsi,0x2
  40f8cb:	sub    rsi,r13
  40f8ce:	cmp    rsi,rbx
  40f8d1:	ja     0x40f989
  40f8d7:	mov    rax,r13
  40f8da:	add    rsp,0x28
  40f8de:	pop    rbx
  40f8df:	pop    rsi
  40f8e0:	pop    rdi
  40f8e1:	pop    rbp
  40f8e2:	pop    r12
  40f8e4:	pop    r13
  40f8e6:	pop    r14
  40f8e8:	pop    r15
  40f8ea:	ret    
  40f8eb:	mov    BYTE PTR [rsi],0x5c
  40f8ee:	mov    BYTE PTR [rsi+0x1],0x72
  40f8f2:	add    rsi,0x2
  40f8f6:	jmp    0x40f85e
  40f8fb:	mov    BYTE PTR [rsi],0x5c
  40f8fe:	mov    BYTE PTR [rsi+0x1],0x66
  40f902:	add    rsi,0x2
  40f906:	jmp    0x40f85e
  40f90b:	mov    BYTE PTR [rsi],0x5c
  40f90e:	mov    BYTE PTR [rsi+0x1],0x76
  40f912:	add    rsi,0x2
  40f916:	jmp    0x40f85e
  40f91b:	mov    BYTE PTR [rsi],0x5c
  40f91e:	mov    BYTE PTR [rsi+0x1],0x74
  40f922:	add    rsi,0x2
  40f926:	jmp    0x40f85e
  40f92b:	mov    BYTE PTR [rsi],0x5c
  40f92e:	mov    BYTE PTR [rsi+0x1],0x62
  40f932:	add    rsi,0x2
  40f936:	jmp    0x40f85e
  40f93b:	mov    BYTE PTR [rsi],0x5c
  40f93e:	mov    BYTE PTR [rsi+0x1],0x61
  40f942:	add    rsi,0x2
  40f946:	jmp    0x40f85e
  40f94b:	lea    rdx,[rip+0x19f14]        # 0x429866
  40f952:	mov    rcx,rsi
  40f955:	call   0x408880
  40f95a:	cdqe   
  40f95c:	add    rsi,rax
  40f95f:	jmp    0x40f85e
  40f964:	mov    BYTE PTR [rsi],0x5c
  40f967:	add    rsi,0x1
  40f96b:	jmp    0x40f857
  40f970:	mov    rcx,rsi
  40f973:	mov    r8,r12
  40f976:	mov    rdx,rdi
  40f979:	call   0x421e08
  40f97e:	add    rsi,r12
  40f981:	mov    rbp,r15
  40f984:	jmp    0x40f862
  40f989:	call   QWORD PTR [rip+0x295ed]        # 0x438f7c
  40f98f:	lea    rcx,[rip+0x1a039]        # 0x4299cf
  40f996:	lea    r9,[rax+0x60]
  40f99a:	mov    r8d,0x24
  40f9a0:	mov    edx,0x1
  40f9a5:	call   0x421e38
  40f9aa:	mov    ecx,0x1
  40f9af:	call   0x4082e0
  40f9b4:	nop
  40f9b5:	nop
  40f9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9c0:	push   rsi
  40f9c1:	push   rbx
  40f9c2:	sub    rsp,0x28
  40f9c6:	test   dl,dl
  40f9c8:	mov    rbx,r8
  40f9cb:	jne    0x40fa00
  40f9cd:	lea    rdx,[rip+0x19e65]        # 0x429839
  40f9d4:	call   0x40f770
  40f9d9:	lea    rdx,[rip+0x19f21]        # 0x429901
  40f9e0:	mov    rsi,rax
  40f9e3:	mov    rcx,rbx
  40f9e6:	mov    r8,rax
  40f9e9:	call   0x407ea0
  40f9ee:	mov    rcx,rsi
  40f9f1:	add    rsp,0x28
  40f9f5:	pop    rbx
  40f9f6:	pop    rsi
  40f9f7:	jmp    0x421e50
  40f9fc:	nop    DWORD PTR [rax+0x0]
  40fa00:	mov    rdx,r8
  40fa03:	add    rsp,0x28
  40fa07:	pop    rbx
  40fa08:	pop    rsi
  40fa09:	jmp    0x421e60
  40fa0e:	xchg   ax,ax
  40fa10:	push   r15
  40fa12:	push   r14
  40fa14:	push   r13
  40fa16:	push   r12
  40fa18:	push   rbp
  40fa19:	push   rdi
  40fa1a:	push   rsi
  40fa1b:	push   rbx
  40fa1c:	sub    rsp,0x38
  40fa20:	mov    eax,DWORD PTR [rcx+0x14]
  40fa23:	xor    r13d,r13d
  40fa26:	xor    r12d,r12d
  40fa29:	mov    rbp,rcx
  40fa2c:	lea    rcx,[rip+0x1a1bc]        # 0x429bef
  40fa33:	lea    edx,[rax-0x1]
  40fa36:	call   0x4082b0
  40fa3b:	mov    rsi,QWORD PTR [rip+0x2953a]        # 0x438f7c
  40fa42:	jmp    0x40fa59
  40fa44:	add    r12d,0x1
  40fa48:	add    r13,0x68
  40fa4c:	cmp    r12d,DWORD PTR [rbp+0xb4]
  40fa53:	jge    0x40fbc1
  40fa59:	mov    rdx,QWORD PTR [rbp+0x78]
  40fa5d:	lea    rdi,[rdx+r13*1]
  40fa61:	mov    eax,DWORD PTR [rdi+0x10]
  40fa64:	test   eax,0x8280000
  40fa69:	jne    0x40fa44
  40fa6b:	cmp    WORD PTR [rdi+0x8],0x8000
  40fa71:	jne    0x40fa44
  40fa73:	movzx  r8d,WORD PTR [rdi+0x4]
  40fa78:	cmp    r8d,r12d
  40fa7b:	je     0x40fac8
  40fa7d:	lea    rax,[r8+r8*2]
  40fa81:	lea    rcx,[rip+0x1a0f0]        # 0x429b78
  40fa88:	lea    rax,[r8+rax*4]
  40fa8c:	mov    r8,QWORD PTR [rdi+0x48]
  40fa90:	lea    rbx,[rdx+rax*8]
  40fa94:	mov    rax,QWORD PTR [rdi+0x18]
  40fa98:	mov    r9,QWORD PTR [rbx+0x48]
  40fa9c:	mov    QWORD PTR [rbx+0x18],rax
  40faa0:	mov    eax,DWORD PTR [rbx+0x10]
  40faa3:	and    eax,0xfffff00
  40faa8:	mov    DWORD PTR [rbx+0x10],eax
  40faab:	mov    edx,DWORD PTR [rdi+0x10]
  40faae:	mov    rdi,rbx
  40fab1:	and    edx,0xf00000ff
  40fab7:	or     eax,edx
  40fab9:	mov    rdx,QWORD PTR [rbp+0x30]
  40fabd:	mov    DWORD PTR [rbx+0x10],eax
  40fac0:	call   0x4082b0
  40fac5:	mov    eax,DWORD PTR [rbx+0x10]
  40fac8:	mov    edx,eax
  40faca:	and    edx,0xf000
  40fad0:	shr    edx,0xc
  40fad3:	cmp    edx,0x4
  40fad6:	je     0x40fc89
  40fadc:	mov    ecx,DWORD PTR [rdi+0x10]
  40fadf:	and    ecx,0x2f
  40fae2:	cmp    ecx,0x20
  40fae5:	je     0x40fa44
  40faeb:	test   ah,0x4
  40faee:	je     0x40fb72
  40faf4:	mov    r14,QWORD PTR [rdi+0x20]
  40faf8:	test   r14,r14
  40fafb:	je     0x40fb72
  40fafd:	mov    ebx,DWORD PTR [r14]
  40fb00:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb04:	lea    rcx,[rip+0x1a0bd]        # 0x429bc8
  40fb0b:	mov    r8,QWORD PTR [rdi+0x48]
  40fb0f:	lea    r15,[r14+0x8]
  40fb13:	mov    r9d,ebx
  40fb16:	call   0x4082b0
  40fb1b:	sub    ebx,0x1
  40fb1e:	js     0x40fa44
  40fb24:	mov    r9d,DWORD PTR [r14]
  40fb27:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb2b:	lea    rcx,[rip+0x19c99]        # 0x4297cb
  40fb32:	mov    r8,QWORD PTR [rdi+0x48]
  40fb36:	add    r15,0x8
  40fb3a:	sub    r9d,ebx
  40fb3d:	call   0x4082b0
  40fb42:	mov    rcx,QWORD PTR [r15-0x8]
  40fb46:	call   0x409620
  40fb4b:	mov    r9d,DWORD PTR [r14]
  40fb4e:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb52:	lea    rcx,[rip+0x19ca4]        # 0x4297fd
  40fb59:	mov    r8,QWORD PTR [rdi+0x48]
  40fb5d:	sub    r9d,ebx
  40fb60:	sub    ebx,0x1
  40fb63:	call   0x4082b0
  40fb68:	cmp    ebx,0xffffffff
  40fb6b:	jne    0x40fb24
  40fb6d:	jmp    0x40fa44
  40fb72:	test   al,0x20
  40fb74:	jne    0x40fbea
  40fb76:	cmp    edx,0x5
  40fb79:	je     0x40fe8d
  40fb7f:	cmp    edx,0x2
  40fb82:	je     0x40feaa
  40fb88:	cmp    edx,0x3
  40fb8b:	je     0x40fd89
  40fb91:	mov    rax,QWORD PTR [rdi+0x18]
  40fb95:	test   rax,rax
  40fb98:	je     0x40fba3
  40fb9a:	cmp    BYTE PTR [rax],0x0
  40fb9d:	jne    0x40fe57
  40fba3:	movzx  r9d,WORD PTR [rdi+0xe]
  40fba8:	mov    rdx,QWORD PTR [rbp+0x30]
  40fbac:	lea    rcx,[rip+0x1a07c]        # 0x429c2f
  40fbb3:	mov    r8,QWORD PTR [rdi+0x48]
  40fbb7:	call   0x4082b0
  40fbbc:	jmp    0x40fa44
  40fbc1:	test   BYTE PTR [rbp+0x11],0x8
  40fbc5:	je     0x40fbcf
  40fbc7:	mov    eax,DWORD PTR [rbp+0x4]
  40fbca:	cmp    DWORD PTR [rbp+0x14],eax
  40fbcd:	jb     0x40fc15
  40fbcf:	call   rsi
  40fbd1:	lea    rcx,[rax+0x30]
  40fbd5:	add    rsp,0x38
  40fbd9:	pop    rbx
  40fbda:	pop    rsi
  40fbdb:	pop    rdi
  40fbdc:	pop    rbp
  40fbdd:	pop    r12
  40fbdf:	pop    r13
  40fbe1:	pop    r14
  40fbe3:	pop    r15
  40fbe5:	jmp    0x421e80
  40fbea:	mov    r9,QWORD PTR [rdi+0x60]
  40fbee:	mov    rdx,QWORD PTR [rbp+0x30]
  40fbf2:	lea    rax,[rip+0x186b7]        # 0x4282b0
  40fbf9:	mov    r8,QWORD PTR [rdi+0x48]
  40fbfd:	lea    rcx,[rip+0x1a00a]        # 0x429c0e
  40fc04:	test   r9,r9
  40fc07:	cmove  r9,rax
  40fc0b:	call   0x4082b0
  40fc10:	jmp    0x40fa44
  40fc15:	call   rsi
  40fc17:	lea    rcx,[rip+0x19de4]        # 0x429a02
  40fc1e:	lea    r9,[rax+0x30]
  40fc22:	mov    r8d,0x6
  40fc28:	mov    edx,0x1
  40fc2d:	call   0x421e38
  40fc32:	mov    ebx,DWORD PTR [rbp+0x14]
  40fc35:	cmp    ebx,DWORD PTR [rbp+0x4]
  40fc38:	jae    0x40fc67
  40fc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	call   rsi
  40fc42:	lea    rdx,[rax+0x30]
  40fc46:	mov    ecx,0x20
  40fc4b:	call   0x421e68
  40fc50:	mov    rax,QWORD PTR [rbp+0x8]
  40fc54:	mov    edx,ebx
  40fc56:	add    ebx,0x1
  40fc59:	mov    rcx,QWORD PTR [rax+rdx*8]
  40fc5d:	call   0x409620
  40fc62:	cmp    ebx,DWORD PTR [rbp+0x4]
  40fc65:	jb     0x40fc40
  40fc67:	call   rsi
  40fc69:	lea    rcx,[rip+0x19d84]        # 0x4299f4
  40fc70:	lea    r9,[rax+0x30]
  40fc74:	mov    r8d,0xd
  40fc7a:	mov    edx,0x1
  40fc7f:	call   0x421e38
  40fc84:	jmp    0x40fbcf
  40fc89:	mov    rax,QWORD PTR [rdi+0x18]
  40fc8d:	mov    rdx,QWORD PTR [rbp+0x30]
  40fc91:	lea    rcx,[rip+0x19f97]        # 0x429c2f
  40fc98:	mov    r9d,DWORD PTR [rdi+0x20]
  40fc9c:	mov    r8,QWORD PTR [rdi+0x48]
  40fca0:	mov    QWORD PTR [rsp+0x28],rax
  40fca5:	call   0x4082b0
  40fcaa:	mov    eax,0xffffffff
  40fcaf:	mov    rdx,rdi
  40fcb2:	mov    ecx,0x3
  40fcb7:	mov    QWORD PTR [rdi+0x20],rax
  40fcbb:	call   QWORD PTR [rdi+0x38]
  40fcbe:	mov    r14,QWORD PTR [rdi+0x18]
  40fcc2:	cmp    BYTE PTR [r14],0x0
  40fcc6:	je     0x40fe52
  40fccc:	mov    QWORD PTR [rsp+0x20],0x1
  40fcd5:	mov    rdx,QWORD PTR [rdi+0x48]
  40fcd9:	lea    rcx,[rip+0x18a60]        # 0x428740
  40fce0:	call   0x4082b0
  40fce5:	mov    r9,QWORD PTR [rip+0x25124]        # 0x434e10
  40fcec:	test   r9,r9
  40fcef:	je     0x40fe40
  40fcf5:	movzx  eax,BYTE PTR [r14]
  40fcf9:	cmp    BYTE PTR [r9+rax*1],0x0
  40fcfe:	je     0x40fe35
  40fd04:	mov    rdx,r14
  40fd07:	nop    WORD PTR [rax+rax*1+0x0]
  40fd10:	add    rdx,0x1
  40fd14:	movzx  ecx,BYTE PTR [rdx]
  40fd17:	cmp    BYTE PTR [r9+rcx*1],0x0
  40fd1c:	mov    rax,rcx
  40fd1f:	jne    0x40fd10
  40fd21:	cmp    al,0x7f
  40fd23:	lea    r14,[rdx+0x1]
  40fd27:	movsx  r15d,al
  40fd2b:	ja     0x40fd6e
  40fd2d:	nop    DWORD PTR [rax]
  40fd30:	lea    r9,[rip+0x1c589]        # 0x42c2c0
  40fd37:	mov    eax,DWORD PTR [r9+rax*4]
  40fd3b:	test   eax,0x80000
  40fd40:	je     0x40fdc0
  40fd42:	call   rsi
  40fd44:	mov    rbx,rax
  40fd47:	mov    ecx,r15d
  40fd4a:	call   QWORD PTR [rip+0x2947c]        # 0x4391cc
  40fd50:	lea    rdx,[rbx+0x30]
  40fd54:	mov    ecx,eax
  40fd56:	call   0x421e68
  40fd5b:	movzx  eax,BYTE PTR [r14]
  40fd5f:	mov    rdx,r14
  40fd62:	cmp    al,0x7f
  40fd64:	lea    r14,[rdx+0x1]
  40fd68:	movsx  r15d,al
  40fd6c:	jbe    0x40fd30
  40fd6e:	test   r15d,r15d
  40fd71:	je     0x40fe30
  40fd77:	call   rsi
  40fd79:	lea    rdx,[rax+0x30]
  40fd7d:	mov    ecx,0x5f
  40fd82:	call   0x421e68
  40fd87:	jmp    0x40fd5b
  40fd89:	mov    eax,DWORD PTR [rdi+0x18]
  40fd8c:	mov    rdx,QWORD PTR [rbp+0x30]
  40fd90:	lea    r9,[rip+0x18514]        # 0x4282ab
  40fd97:	mov    r8,QWORD PTR [rdi+0x48]
  40fd9b:	lea    rcx,[rip+0x19e03]        # 0x429ba5
  40fda2:	test   eax,eax
  40fda4:	lea    rax,[rip+0x18505]        # 0x4282b0
  40fdab:	cmove  r9,rax
  40fdaf:	call   0x4082b0
  40fdb4:	jmp    0x40fa44
  40fdb9:	nop    DWORD PTR [rax+0x0]
  40fdc0:	test   eax,0x100000
  40fdc5:	je     0x40fde0
  40fdc7:	call   rsi
  40fdc9:	lea    rdx,[rax+0x30]
  40fdcd:	mov    ecx,r15d
  40fdd0:	call   0x421e68
  40fdd5:	jmp    0x40fd5b
  40fdd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fde0:	test   eax,0xc81
  40fde5:	je     0x40fd6e
  40fde7:	mov    rbx,QWORD PTR [rsp+0x20]
  40fdec:	lea    rcx,[rip+0x19b55]        # 0x429948
  40fdf3:	mov    edx,ebx
  40fdf5:	call   0x4082b0
  40fdfa:	mov    rax,rbx
  40fdfd:	add    rax,rax
  40fe00:	cmp    BYTE PTR [r14],0x0
  40fe04:	mov    QWORD PTR [rsp+0x20],rax
  40fe09:	jne    0x40fcd5
  40fe0f:	mov    rcx,QWORD PTR [rdi+0x18]
  40fe13:	call   0x421e50
  40fe18:	mov    rax,QWORD PTR [rsp+0x28]
  40fe1d:	mov    QWORD PTR [rdi+0x18],rax
  40fe21:	jmp    0x40fa44
  40fe26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe30:	mov    r14,rdx
  40fe33:	jmp    0x40fde7
  40fe35:	movzx  eax,al
  40fe38:	mov    rdx,r14
  40fe3b:	jmp    0x40fd62
  40fe40:	mov    ecx,0x22
  40fe45:	call   0x4097f0
  40fe4a:	mov    r9,rax
  40fe4d:	jmp    0x40fcf5
  40fe52:	mov    rcx,r14
  40fe55:	jmp    0x40fe13
  40fe57:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe5b:	mov    r8,QWORD PTR [rdi+0x48]
  40fe5f:	lea    rcx,[rip+0x19a6f]        # 0x4298d5
  40fe66:	call   0x4082b0
  40fe6b:	mov    rcx,QWORD PTR [rdi+0x18]
  40fe6f:	call   0x409620
  40fe74:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe78:	mov    r8,QWORD PTR [rdi+0x48]
  40fe7c:	lea    rcx,[rip+0x19a43]        # 0x4298c6
  40fe83:	call   0x4082b0
  40fe88:	jmp    0x40fa44
  40fe8d:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe91:	mov    r9d,DWORD PTR [rdi+0x18]
  40fe95:	lea    rcx,[rip+0x19d93]        # 0x429c2f
  40fe9c:	mov    r8,QWORD PTR [rdi+0x48]
  40fea0:	call   0x4082b0
  40fea5:	jmp    0x40fa44
  40feaa:	mov    r8,QWORD PTR [rdi+0x48]
  40feae:	mov    rdx,QWORD PTR [rbp+0x30]
  40feb2:	lea    rcx,[rip+0x19a1c]        # 0x4298d5
  40feb9:	mov    rbx,QWORD PTR [rdi+0x18]
  40febd:	call   0x4082b0
  40fec2:	mov    rdx,rdi
  40fec5:	mov    ecx,0x3
  40feca:	call   QWORD PTR [rdi+0x38]
  40fecd:	mov    rdx,QWORD PTR [rdi+0x18]
  40fed1:	lea    rcx,[rip+0x19a3c]        # 0x429914
  40fed8:	call   0x4082b0
  40fedd:	test   BYTE PTR [rdi+0x10],0x40
  40fee1:	je     0x40feec
  40fee3:	mov    rcx,QWORD PTR [rdi+0x18]
  40fee7:	call   0x421e50
  40feec:	mov    QWORD PTR [rdi+0x18],rbx
  40fef0:	mov    r8,QWORD PTR [rdi+0x48]
  40fef4:	lea    rcx,[rip+0x199cb]        # 0x4298c6
  40fefb:	mov    rdx,QWORD PTR [rbp+0x30]
  40feff:	call   0x4082b0
  40ff04:	jmp    0x40fa44
  40ff09:	nop    DWORD PTR [rax+0x0]
  40ff10:	push   rdi
  40ff11:	push   rsi
  40ff12:	push   rbx
  40ff13:	sub    rsp,0x20
  40ff17:	mov    rax,QWORD PTR [rcx+0x90]
  40ff1e:	mov    rbx,rcx
  40ff21:	test   rax,rax
  40ff24:	je     0x40ff91
  40ff26:	mov    rdx,QWORD PTR [rbx]
  40ff29:	lea    rdi,[rax+0x8]
  40ff2d:	mov    rsi,rbx
  40ff30:	lea    r9,[rax+0xe8]
  40ff37:	and    rdi,0xfffffffffffffff8
  40ff3b:	mov    QWORD PTR [rax],rdx
  40ff3e:	mov    rdx,QWORD PTR [rbx+0xe0]
  40ff45:	mov    QWORD PTR [rax+0xe0],rdx
  40ff4c:	mov    rdx,rax
  40ff4f:	sub    rdx,rdi
  40ff52:	sub    rsi,rdx
  40ff55:	add    edx,0xe8
  40ff5b:	shr    edx,0x3
  40ff5e:	mov    ecx,edx
  40ff60:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40ff63:	mov    rcx,r9
  40ff66:	movsxd rax,DWORD PTR [rax+0xb0]
  40ff6d:	lea    rdx,[rax+rax*2]
  40ff71:	lea    r8,[rax+rdx*4]
  40ff75:	mov    rdx,QWORD PTR [rbx+0x78]
  40ff79:	shl    r8,0x3
  40ff7d:	call   0x421e08
  40ff82:	mov    rcx,rbx
  40ff85:	add    rsp,0x20
  40ff89:	pop    rbx
  40ff8a:	pop    rsi
  40ff8b:	pop    rdi
  40ff8c:	jmp    0x409ab0
  40ff91:	movsxd rax,DWORD PTR [rcx+0xb0]
  40ff98:	lea    rdx,[rax+rax*2]
  40ff9c:	lea    rax,[rax+rdx*4]
  40ffa0:	lea    rcx,[rax*8+0xe8]
  40ffa8:	call   0x409ce0
  40ffad:	mov    QWORD PTR [rbx+0x90],rax
  40ffb4:	jmp    0x40ff26
  40ffb9:	nop    DWORD PTR [rax+0x0]
  40ffc0:	push   r14
  40ffc2:	push   r13
  40ffc4:	push   r12
  40ffc6:	push   rbp
  40ffc7:	push   rdi
  40ffc8:	push   rsi
  40ffc9:	push   rbx
  40ffca:	sub    rsp,0x20
  40ffce:	lea    r12,[rcx+0x8]
  40ffd2:	mov    r14,rcx
  40ffd5:	mov    rbp,rcx
  40ffd8:	and    r12,0xfffffffffffffff8
  40ffdc:	sub    r14,r12
  40ffdf:	lea    r13d,[r14+0xe8]
  40ffe6:	shr    r13d,0x3
  40ffea:	nop    WORD PTR [rax+rax*1+0x0]
  40fff0:	mov    rbx,QWORD PTR [rbp+0x78]
  40fff4:	mov    esi,DWORD PTR [rbp+0xb0]
  40fffa:	jmp    0x410026
  40fffc:	nop    DWORD PTR [rax+0x0]
  410000:	cmp    eax,0x6
  410003:	jne    0x410013
  410005:	mov    rcx,QWORD PTR [rbx+0x20]
  410009:	test   rcx,rcx
  41000c:	je     0x410013
  41000e:	call   0x407de0
  410013:	sub    esi,0x1
  410016:	mov    QWORD PTR [rbx+0x20],0x0
  41001e:	add    rbx,0x68
  410022:	test   esi,esi
  410024:	jle    0x410080
  410026:	mov    edx,DWORD PTR [rbx+0x10]
  410029:	test   dl,0x40
  41002c:	jne    0x410064
  41002e:	mov    eax,edx
  410030:	and    eax,0xf000
  410035:	shr    eax,0xc
  410038:	cmp    eax,0x1
  41003b:	jne    0x410000
  41003d:	and    dh,0x4
  410040:	je     0x410013
  410042:	cmp    QWORD PTR [rbx+0x20],0x0
  410047:	je     0x410013
  410049:	lea    rax,[rip+0x186fd]        # 0x42874d
  410050:	cmp    rbp,0xf
  410054:	mov    QWORD PTR [rbx+0x18],rax
  410058:	jbe    0x410013
  41005a:	mov    rcx,rbx
  41005d:	call   0x40a610
  410062:	jmp    0x410013
  410064:	mov    rcx,QWORD PTR [rbx+0x18]
  410068:	call   0x421e50
  41006d:	mov    edx,DWORD PTR [rbx+0x10]
  410070:	mov    QWORD PTR [rbx+0x18],0x0
  410078:	and    edx,0xffffffbf
  41007b:	mov    DWORD PTR [rbx+0x10],edx
  41007e:	jmp    0x41002e
  410080:	mov    rax,QWORD PTR [rbp+0x90]
  410087:	test   rax,rax
  41008a:	je     0x4100ef
  41008c:	mov    rdx,QWORD PTR [rax]
  41008f:	mov    rsi,rax
  410092:	mov    rdi,r12
  410095:	sub    rsi,r14
  410098:	mov    QWORD PTR [rbp+0x0],rdx
  41009c:	mov    rcx,QWORD PTR [rax+0xe0]
  4100a3:	lea    rdx,[rax+0xe8]
  4100aa:	mov    QWORD PTR [rbp+0xe0],rcx
  4100b1:	mov    ecx,r13d
  4100b4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4100b7:	movsxd rax,DWORD PTR [rax+0xb0]
  4100be:	mov    rcx,QWORD PTR [rbp+0x78]
  4100c2:	lea    r8,[rax+rax*2]
  4100c6:	lea    r8,[rax+r8*4]
  4100ca:	shl    r8,0x3
  4100ce:	call   0x421e08
  4100d3:	mov    rcx,QWORD PTR [rbp+0x90]
  4100da:	call   0x421e50
  4100df:	mov    QWORD PTR [rbp+0x90],0x0
  4100ea:	jmp    0x40fff0
  4100ef:	add    rsp,0x20
  4100f3:	pop    rbx
  4100f4:	pop    rsi
  4100f5:	pop    rdi
  4100f6:	pop    rbp
  4100f7:	pop    r12
  4100f9:	pop    r13
  4100fb:	pop    r14
  4100fd:	ret    
  4100fe:	xchg   ax,ax
  410100:	push   rbp
  410101:	push   rdi
  410102:	push   rsi
  410103:	push   rbx
  410104:	sub    rsp,0x28
  410108:	mov    rbp,QWORD PTR [rcx+0x90]
  41010f:	mov    rbx,rcx
  410112:	test   rbp,rbp
  410115:	je     0x41019b
  41011b:	mov    QWORD PTR [rcx+0x90],0x0
  410126:	lea    rdi,[rbx+0x8]
  41012a:	mov    rsi,rbp
  41012d:	call   0x40ffc0
  410132:	mov    rax,QWORD PTR [rbp+0x0]
  410136:	and    rdi,0xfffffffffffffff8
  41013a:	lea    rdx,[rbp+0xe8]
  410141:	mov    QWORD PTR [rbx],rax
  410144:	mov    rax,QWORD PTR [rbp+0xe0]
  41014b:	mov    QWORD PTR [rbx+0xe0],rax
  410152:	mov    rax,rbx
  410155:	sub    rax,rdi
  410158:	sub    rsi,rax
  41015b:	add    eax,0xe8
  410160:	shr    eax,0x3
  410163:	mov    ecx,eax
  410165:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  410168:	movsxd rax,DWORD PTR [rbp+0xb0]
  41016f:	mov    rcx,QWORD PTR [rbx+0x78]
  410173:	lea    r8,[rax+rax*2]
  410177:	lea    r8,[rax+r8*4]
  41017b:	shl    r8,0x3
  41017f:	call   0x421e08
  410184:	mov    rcx,rbx
  410187:	mov    QWORD PTR [rbx+0x90],rbp
  41018e:	add    rsp,0x28
  410192:	pop    rbx
  410193:	pop    rsi
  410194:	pop    rdi
  410195:	pop    rbp
  410196:	jmp    0x409ab0
  41019b:	mov    rsi,QWORD PTR [rcx+0x28]
  41019f:	test   rsi,rsi
  4101a2:	je     0x4101ca
  4101a4:	mov    rbx,QWORD PTR [rip+0x139bd]        # 0x423b68
  4101ab:	call   QWORD PTR [rip+0x28dcb]        # 0x438f7c
  4101b1:	lea    rcx,[rax+0x60]
  4101b5:	mov    r8,rsi
  4101b8:	mov    rdx,rbx
  4101bb:	call   0x407ea0
  4101c0:	mov    ecx,0x1
  4101c5:	call   0x4082e0
  4101ca:	mov    rsi,QWORD PTR [rcx+0x30]
  4101ce:	lea    rax,[rip+0x1aefa]        # 0x42b0cf
  4101d5:	test   rsi,rsi
  4101d8:	cmove  rsi,rax
  4101dc:	jmp    0x4101a4
  4101de:	xchg   ax,ax
  4101e0:	push   r15
  4101e2:	push   r14
  4101e4:	push   r13
  4101e6:	push   r12
  4101e8:	push   rbp
  4101e9:	push   rdi
  4101ea:	push   rsi
  4101eb:	push   rbx
  4101ec:	sub    rsp,0x58
  4101f0:	lea    rdi,[rsp+0x48]
  4101f5:	mov    r13,rcx
  4101f8:	mov    DWORD PTR [rsp+0x48],0x0
  410200:	mov    rdx,rdi
  410203:	call   0x40a7e0
  410208:	test   rax,rax
  41020b:	mov    rbx,rax
  41020e:	je     0x4102e9
  410214:	lea    rdx,[rip+0x184dd]        # 0x4286f8
  41021b:	mov    rcx,rax
  41021e:	call   0x421e78
  410223:	test   rax,rax
  410226:	mov    rsi,rax
  410229:	je     0x410593
  41022f:	mov    edx,DWORD PTR [rsp+0x48]
  410233:	test   edx,edx
  410235:	jne    0x410340
  41023b:	lea    rcx,[rip+0x1850e]        # 0x428750
  410242:	mov    r9,rsi
  410245:	mov    r8d,0x3
  41024b:	mov    edx,0x1
  410250:	call   0x421e38
  410255:	mov    rbx,QWORD PTR [r13+0x60]
  410259:	mov    edx,0xa
  41025e:	mov    rcx,rbx
  410261:	call   0x421dc0
  410266:	test   rax,rax
  410269:	je     0x410282
  41026b:	lea    r8,[rax+0x1]
  41026f:	mov    r9,rsi
  410272:	mov    edx,0x1
  410277:	mov    rcx,rbx
  41027a:	sub    r8,rbx
  41027d:	call   0x421e38
  410282:	xor    ecx,ecx
  410284:	call   QWORD PTR [rip+0x28dca]        # 0x439054
  41028a:	mov    rcx,rdi
  41028d:	mov    QWORD PTR [rsp+0x48],rax
  410292:	call   QWORD PTR [rip+0x28d2c]        # 0x438fc4
  410298:	lea    rdx,[rip+0x19481]        # 0x429720
  41029f:	mov    r8,rax
  4102a2:	mov    rcx,rsi
  4102a5:	call   0x407ea0
  4102aa:	mov    r15d,DWORD PTR [r13+0xb4]
  4102b1:	mov    rbx,QWORD PTR [r13+0x78]
  4102b5:	mov    eax,DWORD PTR [rbx+0x10]
  4102b8:	test   al,0xf
  4102ba:	je     0x4102d3
  4102bc:	test   eax,0x280100
  4102c1:	jne    0x4102d3
  4102c3:	movzx  edx,WORD PTR [rbx+0x8]
  4102c7:	cmp    dx,0x8000
  4102cc:	je     0x410300
  4102ce:	cmp    dx,WORD PTR [rbx]
  4102d1:	je     0x410300
  4102d3:	sub    r15d,0x1
  4102d7:	add    rbx,0x68
  4102db:	test   r15d,r15d
  4102de:	jg     0x4102b5
  4102e0:	mov    rcx,rsi
  4102e3:	call   0x421e90
  4102e8:	nop
  4102e9:	add    rsp,0x58
  4102ed:	pop    rbx
  4102ee:	pop    rsi
  4102ef:	pop    rdi
  4102f0:	pop    rbp
  4102f1:	pop    r12
  4102f3:	pop    r13
  4102f5:	pop    r14
  4102f7:	pop    r15
  4102f9:	ret    
  4102fa:	nop    WORD PTR [rax+rax*1+0x0]
  410300:	test   al,0x10
  410302:	mov    rdi,rbx
  410305:	je     0x41031b
  410307:	movzx  edx,WORD PTR [rbx+0x4]
  41030b:	lea    rcx,[rdx+rdx*2]
  41030f:	lea    rcx,[rdx+rcx*4]
  410313:	mov    rdx,QWORD PTR [r13+0x78]
  410317:	lea    rdi,[rdx+rcx*8]
  41031b:	and    eax,0xf000
  410320:	shr    eax,0xc
  410323:	cmp    eax,0x7
  410326:	ja     0x4102d3
  410328:	lea    rcx,[rip+0x18429]        # 0x428758
  41032f:	movsxd rax,DWORD PTR [rcx+rax*4]
  410333:	add    rax,rcx
  410336:	jmp    rax
  410338:	nop    DWORD PTR [rax+rax*1+0x0]
  410340:	mov    rcx,rbx
  410343:	call   0x421e50
  410348:	jmp    0x41023b
  41034d:	nop    DWORD PTR [rax]
  410350:	mov    r12,QWORD PTR [rdi+0x20]
  410354:	test   r12,r12
  410357:	je     0x4102d3
  41035d:	mov    eax,DWORD PTR [r12]
  410361:	add    r12,0x8
  410365:	test   eax,eax
  410367:	jle    0x4102d3
  41036d:	sub    eax,0x1
  410370:	lea    rax,[r12+rax*8+0x8]
  410375:	mov    QWORD PTR [rsp+0x38],rax
  41037a:	nop    WORD PTR [rax+rax*1+0x0]
  410380:	add    r12,0x8
  410384:	mov    rbp,QWORD PTR [r12-0x8]
  410389:	xor    edx,edx
  41038b:	mov    rcx,rbp
  41038e:	call   0x40cb30
  410393:	test   rax,rax
  410396:	mov    r14,rax
  410399:	je     0x4103e9
  41039b:	mov    r8,QWORD PTR [rdi+0x50]
  41039f:	lea    rdx,[rip+0x194cb]        # 0x429871
  4103a6:	mov    rcx,rsi
  4103a9:	call   0x407ea0
  4103ae:	xchg   ax,ax
  4103b0:	mov    r9,r14
  4103b3:	mov    r8,rdi
  4103b6:	mov    edx,0x1
  4103bb:	mov    rcx,rsi
  4103be:	call   0x4088b0
  4103c3:	mov    rdx,r14
  4103c6:	mov    rcx,rbp
  4103c9:	call   0x40cc80
  4103ce:	test   rax,rax
  4103d1:	mov    r14,rax
  4103d4:	jne    0x4103b0
  4103d6:	mov    r8,QWORD PTR [rdi+0x50]
  4103da:	lea    rdx,[rip+0x17ed5]        # 0x4282b6
  4103e1:	mov    rcx,rsi
  4103e4:	call   0x407ea0
  4103e9:	cmp    r12,QWORD PTR [rsp+0x38]
  4103ee:	jne    0x410380
  4103f0:	jmp    0x4102d3
  4103f5:	mov    r8,QWORD PTR [rdi+0x20]
  4103f9:	test   r8,r8
  4103fc:	je     0x410568
  410402:	mov    rdx,rdi
  410405:	mov    rcx,rsi
  410408:	call   0x408140
  41040d:	jmp    0x4102d3
  410412:	test   BYTE PTR [rdi+0x10],0x20
  410416:	mov    r8,QWORD PTR [rbx+0x50]
  41041a:	mov    rax,r8
  41041d:	je     0x410423
  41041f:	mov    rax,QWORD PTR [rbx+0x58]
  410423:	test   rax,rax
  410426:	lea    rdx,[rip+0x18327]        # 0x428754
  41042d:	mov    rcx,rsi
  410430:	cmovne r8,rax
  410434:	call   0x407ea0
  410439:	jmp    0x4102d3
  41043e:	xchg   ax,ax
  410440:	mov    eax,DWORD PTR [rdi+0x10]
  410443:	test   ah,0x4
  410446:	je     0x410606
  41044c:	mov    rbp,QWORD PTR [rdi+0x20]
  410450:	mov    edx,DWORD PTR [rbp+0x0]
  410453:	add    rbp,0x8
  410457:	cmp    edx,0x1
  41045a:	jle    0x41061a
  410460:	and    eax,0xffffffdf
  410463:	mov    DWORD PTR [rdi+0x10],eax
  410466:	lea    eax,[rdx-0x1]
  410469:	lea    r12,[rbp+rax*8+0x8]
  41046e:	xchg   ax,ax
  410470:	add    rbp,0x8
  410474:	mov    r8,QWORD PTR [rbp-0x8]
  410478:	mov    rdx,rdi
  41047b:	mov    rcx,rsi
  41047e:	call   0x408140
  410483:	cmp    rbp,r12
  410486:	jne    0x410470
  410488:	jmp    0x4102d3
  41048d:	nop    DWORD PTR [rax]
  410490:	mov    rbp,QWORD PTR [rdi+0x18]
  410494:	mov    rdx,rdi
  410497:	mov    ecx,0x3
  41049c:	call   QWORD PTR [rdi+0x38]
  41049f:	mov    r8,QWORD PTR [rdi+0x18]
  4104a3:	mov    rdx,rdi
  4104a6:	mov    rcx,rsi
  4104a9:	call   0x408140
  4104ae:	mov    QWORD PTR [rdi+0x18],rbp
  4104b2:	jmp    0x4102d3
  4104b7:	nop    WORD PTR [rax+rax*1+0x0]
  4104c0:	mov    eax,DWORD PTR [rdi+0x18]
  4104c3:	lea    r8,[rip+0x17de1]        # 0x4282ab
  4104ca:	mov    rdx,rdi
  4104cd:	mov    rcx,rsi
  4104d0:	test   eax,eax
  4104d2:	lea    rax,[rip+0x17dd7]        # 0x4282b0
  4104d9:	cmove  r8,rax
  4104dd:	call   0x408140
  4104e2:	jmp    0x4102d3
  4104e7:	nop    WORD PTR [rax+rax*1+0x0]
  4104f0:	mov    rdx,rdi
  4104f3:	mov    rbp,QWORD PTR [rdi+0x18]
  4104f7:	mov    ecx,0x3
  4104fc:	call   QWORD PTR [rdi+0x38]
  4104ff:	mov    r12,QWORD PTR [rdi+0x18]
  410503:	mov    QWORD PTR [rdi+0x18],rbp
  410507:	mov    rcx,r12
  41050a:	call   0x421d98
  41050f:	lea    rcx,[rax+0x3]
  410513:	mov    r14,rax
  410516:	call   0x409ce0
  41051b:	lea    r8,[r14+0x1]
  41051f:	lea    rcx,[rax+0x1]
  410523:	mov    rbp,rax
  410526:	mov    rdx,r12
  410529:	mov    BYTE PTR [rax],0x3d
  41052c:	call   0x421e08
  410531:	mov    r8,rbp
  410534:	mov    rdx,rdi
  410537:	mov    rcx,rsi
  41053a:	call   0x408140
  41053f:	mov    rcx,rbp
  410542:	call   0x421e50
  410547:	mov    rcx,r12
  41054a:	call   0x421e50
  41054f:	jmp    0x4102d3
  410554:	movsxd r8,DWORD PTR [rdi+0x18]
  410558:	mov    rdx,rdi
  41055b:	mov    rcx,rsi
  41055e:	call   0x408140
  410563:	jmp    0x4102d3
  410568:	cmp    DWORD PTR [r13+0x0],0x1ffff
  410570:	jle    0x4102d3
  410576:	movzx  edx,WORD PTR [rdi]
  410579:	mov    rax,QWORD PTR [r13+0xc8]
  410580:	mov    r8,QWORD PTR [rdi+0x18]
  410584:	cmp    QWORD PTR [rax+rdx*8],r8
  410588:	jne    0x410402
  41058e:	jmp    0x4102d3
  410593:	mov    rbp,QWORD PTR [r13+0x28]
  410597:	mov    rdi,QWORD PTR [rip+0x13642]        # 0x423be0
  41059e:	mov    rsi,QWORD PTR [rip+0x289d7]        # 0x438f7c
  4105a5:	call   rsi
  4105a7:	lea    rcx,[rax+0x60]
  4105ab:	mov    r8,rbp
  4105ae:	mov    rdx,rdi
  4105b1:	call   0x407ea0
  4105b6:	mov    rdi,QWORD PTR [rip+0x28a0f]        # 0x438fcc
  4105bd:	call   rdi
  4105bf:	mov    ecx,DWORD PTR [rax]
  4105c1:	call   0x421da8
  4105c6:	mov    r12,rax
  4105c9:	call   rdi
  4105cb:	mov    rdi,QWORD PTR [rip+0x13576]        # 0x423b48
  4105d2:	mov    ebp,DWORD PTR [rax]
  4105d4:	call   rsi
  4105d6:	lea    rcx,[rax+0x60]
  4105da:	mov    QWORD PTR [rsp+0x20],rbx
  4105df:	mov    r9,r12
  4105e2:	mov    r8d,ebp
  4105e5:	mov    rdx,rdi
  4105e8:	call   0x407ea0
  4105ed:	mov    ecx,DWORD PTR [rsp+0x48]
  4105f1:	test   ecx,ecx
  4105f3:	je     0x4102e9
  4105f9:	mov    rcx,rbx
  4105fc:	call   0x421e50
  410601:	jmp    0x4102e9
  410606:	mov    r8,QWORD PTR [rdi+0x18]
  41060a:	mov    rdx,rdi
  41060d:	mov    rcx,rsi
  410610:	call   0x408140
  410615:	jmp    0x4102d3
  41061a:	test   edx,edx
  41061c:	jg     0x410466
  410622:	jmp    0x4102d3
  410627:	nop    WORD PTR [rax+rax*1+0x0]
  410630:	cmp    rcx,0xf
  410634:	jbe    0x410643
  410636:	test   rdx,rdx
  410639:	je     0x410643
  41063b:	mov    rcx,rdx
  41063e:	jmp    0x40a610
  410643:	repz ret 
  410645:	nop
  410646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410650:	push   rbx
  410651:	sub    rsp,0x20
  410655:	cmp    rcx,0xf
  410659:	jbe    0x410690
  41065b:	test   rdx,rdx
  41065e:	je     0x410690
  410660:	test   BYTE PTR [rdx+0x10],0x8
  410664:	jne    0x410690
  410666:	mov    rcx,QWORD PTR [rdx+0x18]
  41066a:	test   rcx,rcx
  41066d:	je     0x410690
  41066f:	mov    rbx,rdx
  410672:	call   0x409a50
  410677:	lea    rcx,[rbx+0x20]
  41067b:	mov    rdx,rax
  41067e:	add    rsp,0x20
  410682:	pop    rbx
  410683:	jmp    0x409d30
  410688:	nop    DWORD PTR [rax+rax*1+0x0]
  410690:	add    rsp,0x20
  410694:	pop    rbx
  410695:	ret    
  410696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106a0:	push   rbx
  4106a1:	test   r8d,r8d
  4106a4:	jle    0x4106ea
  4106a6:	lea    ebx,[r8-0x1]
  4106aa:	xor    r8d,r8d
  4106ad:	add    rbx,0x1
  4106b1:	jmp    0x4106bc
  4106b3:	add    r8,0x1
  4106b7:	cmp    r8,rbx
  4106ba:	je     0x4106ea
  4106bc:	movzx  r10d,BYTE PTR [rcx+r8*1]
  4106c1:	movzx  r9d,BYTE PTR [rdx+r8*1]
  4106c6:	cmp    r10b,r9b
  4106c9:	je     0x4106e5
  4106cb:	lea    r11,[rip+0x12eee]        # 0x4235c0
  4106d2:	movzx  eax,r10b
  4106d6:	movzx  eax,BYTE PTR [r11+rax*1]
  4106db:	movzx  r9d,BYTE PTR [r11+r9*1]
  4106e0:	sub    eax,r9d
  4106e3:	jne    0x4106ec
  4106e5:	test   r10b,r10b
  4106e8:	jne    0x4106b3
  4106ea:	xor    eax,eax
  4106ec:	pop    rbx
  4106ed:	ret    
  4106ee:	xchg   ax,ax
  4106f0:	push   r15
  4106f2:	push   r14
  4106f4:	push   r13
  4106f6:	push   r12
  4106f8:	push   rbp
  4106f9:	push   rdi
  4106fa:	push   rsi
  4106fb:	push   rbx
  4106fc:	sub    rsp,0xd8
  410703:	mov    rbx,rdx
  410706:	lea    rdx,[rdx+0x80]
  41070d:	mov    QWORD PTR [rsp+0x120],rcx
  410715:	mov    QWORD PTR [rsp+0x130],r8
  41071d:	mov    r12,rbx
  410720:	mov    esi,r12d
  410723:	add    r12,0x1
  410727:	movzx  eax,BYTE PTR [r12-0x1]
  41072d:	sub    esi,ebx
  41072f:	test   al,al
  410731:	je     0x410990
  410737:	cmp    al,0x3d
  410739:	jne    0x410910
  41073f:	lea    r9,[rsp+0x50]
  410744:	movsxd rdi,esi
  410747:	mov    rdx,rbx
  41074a:	mov    r8,rdi
  41074d:	mov    rcx,r9
  410750:	call   0x421e08
  410755:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  41075a:	mov    rbx,rax
  41075d:	cmp    esi,0x1
  410760:	jle    0x410920
  410766:	mov    rax,QWORD PTR [rsp+0x120]
  41076e:	mov    rcx,QWORD PTR [rsp+0x120]
  410776:	xor    r15d,r15d
  410779:	mov    QWORD PTR [rsp+0x40],r12
  41077e:	mov    BYTE PTR [rsp+0x3f],0x0
  410783:	mov    r12d,r15d
  410786:	mov    DWORD PTR [rsp+0x38],0x0
  41078e:	xor    ebp,ebp
  410790:	mov    rax,QWORD PTR [rax+0x78]
  410794:	mov    edi,DWORD PTR [rcx+0xb0]
  41079a:	mov    r14,rax
  41079d:	mov    QWORD PTR [rsp+0x48],rax
  4107a2:	movsxd rax,esi
  4107a5:	mov    r15,r14
  4107a8:	mov    r13,rax
  4107ab:	jmp    0x4107c4
  4107ad:	nop    DWORD PTR [rax]
  4107b0:	cmp    eax,0x80100
  4107b5:	je     0x4107d8
  4107b7:	add    r12d,0x1
  4107bb:	add    r15,0x68
  4107bf:	cmp    edi,r12d
  4107c2:	jle    0x41080e
  4107c4:	mov    r14,QWORD PTR [r15+0x50]
  4107c8:	test   r14,r14
  4107cb:	je     0x4107b7
  4107cd:	mov    eax,DWORD PTR [r15+0x10]
  4107d1:	test   eax,0x280000
  4107d6:	jne    0x4107b0
  4107d8:	mov    r8d,esi
  4107db:	mov    rdx,r14
  4107de:	mov    rcx,rbx
  4107e1:	call   0x4106a0
  4107e6:	test   eax,eax
  4107e8:	jne    0x410950
  4107ee:	cmp    BYTE PTR [r14+r13*1],0x0
  4107f3:	je     0x4109d4
  4107f9:	mov    DWORD PTR [rsp+0x38],r12d
  4107fe:	add    r12d,0x1
  410802:	add    ebp,0x1
  410805:	add    r15,0x68
  410809:	cmp    edi,r12d
  41080c:	jg     0x4107c4
  41080e:	test   ebp,ebp
  410810:	mov    r12,QWORD PTR [rsp+0x40]
  410815:	je     0x4109a0
  41081b:	cmp    ebp,0x1
  41081e:	je     0x410aa0
  410824:	mov    rax,QWORD PTR [rsp+0x120]
  41082c:	test   BYTE PTR [rax+0x10],0x4
  410830:	je     0x410932
  410836:	mov    r12,QWORD PTR [rax+0x20]
  41083a:	mov    rdi,QWORD PTR [rip+0x13267]        # 0x423aa8
  410841:	mov    rsi,QWORD PTR [rip+0x28734]        # 0x438f7c
  410848:	call   rsi
  41084a:	lea    rcx,[rax+0x60]
  41084e:	mov    DWORD PTR [rsp+0x20],ebp
  410852:	mov    r9,rbx
  410855:	mov    r8,r12
  410858:	mov    rdx,rdi
  41085b:	call   0x407ea0
  410860:	cmp    ebp,0x4
  410863:	jg     0x410b32
  410869:	mov    rcx,rbx
  41086c:	lea    rbp,[rip+0x17e93]        # 0x428706
  410873:	call   0x421d98
  410878:	mov    r12d,eax
  41087b:	mov    rax,QWORD PTR [rsp+0x120]
  410883:	test   BYTE PTR [rax+0x10],0x3
  410887:	lea    rax,[rip+0x18fbb]        # 0x429849
  41088e:	cmovne rbp,rax
  410892:	mov    rax,QWORD PTR [rsp+0x120]
  41089a:	xor    r13d,r13d
  41089d:	mov    rdi,QWORD PTR [rax+0x78]
  4108a1:	call   rsi
  4108a3:	mov    rcx,QWORD PTR [rip+0x131f6]        # 0x423aa0
  4108aa:	lea    rdx,[rax+0x60]
  4108ae:	call   0x421e60
  4108b3:	mov    r14,QWORD PTR [rdi+0x50]
  4108b7:	test   r14,r14
  4108ba:	je     0x4108f1
  4108bc:	mov    r8d,r12d
  4108bf:	mov    rdx,r14
  4108c2:	mov    rcx,rbx
  4108c5:	call   0x4106a0
  4108ca:	test   eax,eax
  4108cc:	je     0x410b4f
  4108d2:	mov    r14,QWORD PTR [rdi+0x58]
  4108d6:	test   r14,r14
  4108d9:	je     0x4108f1
  4108db:	mov    r8d,r12d
  4108de:	mov    rdx,r14
  4108e1:	mov    rcx,rbx
  4108e4:	call   0x4106a0
  4108e9:	test   eax,eax
  4108eb:	je     0x410b4f
  4108f1:	mov    rax,QWORD PTR [rsp+0x120]
  4108f9:	add    rdi,0x68
  4108fd:	add    r13d,0x1
  410901:	cmp    r13d,DWORD PTR [rax+0xb0]
  410908:	jl     0x4108b3
  41090a:	jmp    0x410b32
  41090f:	nop
  410910:	cmp    r12,rdx
  410913:	jne    0x410720
  410919:	nop    DWORD PTR [rax+0x0]
  410920:	mov    rax,QWORD PTR [rsp+0x120]
  410928:	test   BYTE PTR [rax+0x10],0x4
  41092c:	jne    0x410b0f
  410932:	mov    eax,0xffffffff
  410937:	add    rsp,0xd8
  41093e:	pop    rbx
  41093f:	pop    rsi
  410940:	pop    rdi
  410941:	pop    rbp
  410942:	pop    r12
  410944:	pop    r13
  410946:	pop    r14
  410948:	pop    r15
  41094a:	ret    
  41094b:	nop    DWORD PTR [rax+rax*1+0x0]
  410950:	mov    r14,QWORD PTR [r15+0x58]
  410954:	test   r14,r14
  410957:	je     0x4107b7
  41095d:	mov    r8d,esi
  410960:	mov    rdx,r14
  410963:	mov    rcx,rbx
  410966:	call   0x4106a0
  41096b:	test   eax,eax
  41096d:	jne    0x4107b7
  410973:	cmp    BYTE PTR [r14+r13*1],0x0
  410978:	je     0x410aaa
  41097e:	mov    BYTE PTR [rsp+0x3f],0x1
  410983:	jmp    0x4107f9
  410988:	nop    DWORD PTR [rax+rax*1+0x0]
  410990:	xor    r12d,r12d
  410993:	jmp    0x41075d
  410998:	nop    DWORD PTR [rax+rax*1+0x0]
  4109a0:	mov    rax,QWORD PTR [rsp+0x120]
  4109a8:	test   r12,r12
  4109ab:	mov    eax,DWORD PTR [rax+0x10]
  4109ae:	je     0x410abc
  4109b4:	test   al,0x4
  4109b6:	je     0x410932
  4109bc:	mov    rax,QWORD PTR [rsp+0x120]
  4109c4:	mov    rsi,QWORD PTR [rip+0x1312d]        # 0x423af8
  4109cb:	mov    rdi,QWORD PTR [rax+0x20]
  4109cf:	jmp    0x410b1a
  4109d4:	mov    r15d,r12d
  4109d7:	mov    r12,QWORD PTR [rsp+0x40]
  4109dc:	movsxd r10,r15d
  4109df:	mov    rcx,QWORD PTR [rsp+0x48]
  4109e4:	lea    rax,[r10+r10*2]
  4109e8:	lea    rax,[r10+rax*4]
  4109ec:	lea    rbx,[rcx+rax*8]
  4109f0:	test   DWORD PTR [rbx+0x10],0x280000
  4109f7:	je     0x410a70
  4109f9:	mov    rax,QWORD PTR [rsp+0x120]
  410a01:	test   BYTE PTR [rax+0x10],0x4
  410a05:	je     0x410932
  410a0b:	mov    r12,QWORD PTR [rbx+0x50]
  410a0f:	mov    rbp,QWORD PTR [rax+0x28]
  410a13:	mov    rdi,QWORD PTR [rip+0x130c6]        # 0x423ae0
  410a1a:	mov    rsi,QWORD PTR [rip+0x2855b]        # 0x438f7c
  410a21:	call   rsi
  410a23:	lea    rcx,[rax+0x60]
  410a27:	mov    r9,r12
  410a2a:	mov    r8,rbp
  410a2d:	mov    rdx,rdi
  410a30:	call   0x407ea0
  410a35:	mov    rbx,QWORD PTR [rbx+0x40]
  410a39:	test   rbx,rbx
  410a3c:	je     0x410a53
  410a3e:	call   rsi
  410a40:	lea    rdx,[rip+0x18ed2]        # 0x429919
  410a47:	lea    rcx,[rax+0x60]
  410a4b:	mov    r8,rbx
  410a4e:	call   0x407ea0
  410a53:	call   rsi
  410a55:	lea    rdx,[rax+0x60]
  410a59:	mov    ecx,0xa
  410a5e:	call   0x421e68
  410a63:	jmp    0x410b32
  410a68:	nop    DWORD PTR [rax+rax*1+0x0]
  410a70:	cmp    BYTE PTR [rsp+0x3f],0x0
  410a75:	je     0x410a83
  410a77:	mov    rax,QWORD PTR [rsp+0x130]
  410a7f:	or     DWORD PTR [rax+0x10],0x20
  410a83:	mov    rax,QWORD PTR [rsp+0x130]
  410a8b:	mov    QWORD PTR [rax],rbx
  410a8e:	mov    QWORD PTR [rax+0x8],r12
  410a92:	mov    DWORD PTR [rax+0x14],0x2
  410a99:	xor    eax,eax
  410a9b:	jmp    0x410937
  410aa0:	mov    r15d,DWORD PTR [rsp+0x38]
  410aa5:	jmp    0x4109dc
  410aaa:	mov    r15d,r12d
  410aad:	mov    BYTE PTR [rsp+0x3f],0x1
  410ab2:	mov    r12,QWORD PTR [rsp+0x40]
  410ab7:	jmp    0x4109dc
  410abc:	test   al,0x3
  410abe:	jne    0x4109b4
  410ac4:	mov    rcx,QWORD PTR [rsp+0x120]
  410acc:	movzx  edx,WORD PTR [rcx+0xae]
  410ad3:	cmp    dx,0x8000
  410ad8:	je     0x4109b4
  410ade:	movzx  eax,dx
  410ae1:	mov    rcx,QWORD PTR [rsp+0x48]
  410ae6:	lea    rdx,[rax+rax*2]
  410aea:	lea    rax,[rax+rdx*4]
  410aee:	lea    rax,[rcx+rax*8]
  410af2:	mov    rcx,QWORD PTR [rsp+0x130]
  410afa:	mov    QWORD PTR [rcx],rax
  410afd:	mov    QWORD PTR [rcx+0x8],rbx
  410b01:	xor    eax,eax
  410b03:	mov    DWORD PTR [rcx+0x14],0x3
  410b0a:	jmp    0x410937
  410b0f:	mov    rdi,QWORD PTR [rax+0x28]
  410b13:	mov    rsi,QWORD PTR [rip+0x12ffe]        # 0x423b18
  410b1a:	call   QWORD PTR [rip+0x2845c]        # 0x438f7c
  410b20:	lea    rcx,[rax+0x60]
  410b24:	mov    r9,rbx
  410b27:	mov    r8,rdi
  410b2a:	mov    rdx,rsi
  410b2d:	call   0x407ea0
  410b32:	mov    rcx,QWORD PTR [rsp+0x120]
  410b3a:	mov    edx,0x1
  410b3f:	call   QWORD PTR [rcx+0x98]
  410b45:	mov    ecx,0x1
  410b4a:	call   0x421f40
  410b4f:	call   rsi
  410b51:	lea    rdx,[rip+0x18b6c]        # 0x4296c4
  410b58:	lea    rcx,[rax+0x60]
  410b5c:	mov    r9,r14
  410b5f:	mov    r8,rbp
  410b62:	call   0x407ea0
  410b67:	jmp    0x4108f1
  410b6c:	nop    DWORD PTR [rax+0x0]
  410b70:	push   rsi
  410b71:	push   rbx
  410b72:	sub    rsp,0x38
  410b76:	mov    rax,QWORD PTR [rcx+0x18]
  410b7a:	test   rax,rax
  410b7d:	je     0x410b8a
  410b7f:	movzx  eax,BYTE PTR [rax]
  410b82:	test   al,al
  410b84:	jne    0x410c50
  410b8a:	mov    eax,DWORD PTR [rcx+0x14]
  410b8d:	cmp    eax,DWORD PTR [rcx+0x4]
  410b90:	jae    0x410bff
  410b92:	mov    rbx,rcx
  410b95:	mov    r8,rdx
  410b98:	mov    ecx,eax
  410b9a:	mov    rdx,QWORD PTR [rbx+0x8]
  410b9e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  410ba2:	mov    ecx,DWORD PTR [rbx+0x10]
  410ba5:	test   cl,0x3
  410ba8:	mov    QWORD PTR [rbx+0x18],rdx
  410bac:	jne    0x410bf2
  410bae:	add    eax,0x1
  410bb1:	mov    DWORD PTR [rbx+0x14],eax
  410bb4:	cmp    BYTE PTR [rdx],0x2d
  410bb7:	jne    0x410c40
  410bbd:	nop    DWORD PTR [rax]
  410bc0:	add    rdx,0x1
  410bc4:	cmp    BYTE PTR [rdx],0x2d
  410bc7:	je     0x410bc0
  410bc9:	movzx  esi,WORD PTR [rbx+0xae]
  410bd0:	mov    eax,0xffff8000
  410bd5:	mov    rcx,rbx
  410bd8:	mov    WORD PTR [rbx+0xae],ax
  410bdf:	call   0x4106f0
  410be4:	mov    WORD PTR [rbx+0xae],si
  410beb:	add    rsp,0x38
  410bef:	pop    rbx
  410bf0:	pop    rsi
  410bf1:	ret    
  410bf2:	lea    r9,[rdx+0x1]
  410bf6:	mov    QWORD PTR [rbx+0x18],r9
  410bfa:	cmp    BYTE PTR [rdx],0x2d
  410bfd:	je     0x410c10
  410bff:	mov    eax,0x1
  410c04:	add    rsp,0x38
  410c08:	pop    rbx
  410c09:	pop    rsi
  410c0a:	ret    
  410c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c10:	cmp    BYTE PTR [rdx+0x1],0x0
  410c14:	je     0x410bff
  410c16:	add    eax,0x1
  410c19:	mov    DWORD PTR [rbx+0x14],eax
  410c1c:	movzx  eax,BYTE PTR [rdx+0x1]
  410c20:	cmp    al,0x2d
  410c22:	jne    0x410c64
  410c24:	lea    rax,[rdx+0x2]
  410c28:	mov    QWORD PTR [rbx+0x18],rax
  410c2c:	cmp    BYTE PTR [rdx+0x2],0x0
  410c30:	je     0x410bff
  410c32:	and    ecx,0x1
  410c35:	je     0x410c7a
  410c37:	mov    rdx,rax
  410c3a:	nop    WORD PTR [rax+rax*1+0x0]
  410c40:	mov    rcx,rbx
  410c43:	add    rsp,0x38
  410c47:	pop    rbx
  410c48:	pop    rsi
  410c49:	jmp    0x4106f0
  410c4e:	xchg   ax,ax
  410c50:	lea    r9,[rdx+0x14]
  410c54:	mov    r8,rdx
  410c57:	mov    edx,eax
  410c59:	add    rsp,0x38
  410c5d:	pop    rbx
  410c5e:	pop    rsi
  410c5f:	jmp    0x4094a0
  410c64:	and    ecx,0x2
  410c67:	jne    0x410c6e
  410c69:	mov    rdx,r9
  410c6c:	jmp    0x410c40
  410c6e:	movzx  edx,al
  410c71:	lea    r9,[r8+0x14]
  410c75:	mov    rcx,rbx
  410c78:	jmp    0x410c59
  410c7a:	mov    rsi,QWORD PTR [rbx+0x20]
  410c7e:	mov    QWORD PTR [rsp+0x28],rdx
  410c83:	mov    rbx,QWORD PTR [rip+0x12e6e]        # 0x423af8
  410c8a:	call   QWORD PTR [rip+0x282ec]        # 0x438f7c
  410c90:	mov    rdx,QWORD PTR [rsp+0x28]
  410c95:	lea    rcx,[rax+0x60]
  410c99:	mov    r8,rsi
  410c9c:	mov    r9,rdx
  410c9f:	mov    rdx,rbx
  410ca2:	call   0x407ea0
  410ca7:	or     eax,0xffffffff
  410caa:	jmp    0x410c04
  410caf:	nop
  410cb0:	push   rdi
  410cb1:	push   rsi
  410cb2:	push   rbx
  410cb3:	sub    rsp,0x50
  410cb7:	or     DWORD PTR [rcx+0x10],0x8000
  410cbe:	lea    rdi,[rsp+0x30]
  410cc3:	mov    rbx,rcx
  410cc6:	mov    DWORD PTR [rcx+0x14],0x1
  410ccd:	mov    QWORD PTR [rcx+0x18],0x0
  410cd5:	mov    rdx,rdi
  410cd8:	mov    rcx,rbx
  410cdb:	mov    QWORD PTR [rsp+0x30],0x0
  410ce4:	mov    QWORD PTR [rsp+0x38],0x0
  410ced:	mov    DWORD PTR [rsp+0x40],0x2
  410cf5:	mov    DWORD PTR [rsp+0x44],0x0
  410cfd:	call   0x410b70
  410d02:	test   eax,eax
  410d04:	mov    esi,eax
  410d06:	jne    0x410d15
  410d08:	mov    rdx,rdi
  410d0b:	mov    rcx,rbx
  410d0e:	call   0x40a790
  410d13:	mov    esi,eax
  410d15:	cmp    esi,0xffffffff
  410d18:	je     0x410d50
  410d1a:	cmp    esi,0x1
  410d1d:	je     0x410d70
  410d1f:	mov    eax,DWORD PTR [rsp+0x40]
  410d23:	mov    edx,eax
  410d25:	and    edx,0x20020
  410d2b:	cmp    edx,0x20000
  410d31:	je     0x410d3f
  410d33:	and    eax,0x40020
  410d38:	cmp    eax,0x40020
  410d3d:	jne    0x410cd5
  410d3f:	mov    rdx,rdi
  410d42:	mov    rcx,rbx
  410d45:	call   0x4092f0
  410d4a:	test   eax,eax
  410d4c:	je     0x410cd5
  410d4e:	xchg   ax,ax
  410d50:	mov    edx,DWORD PTR [rbx+0x10]
  410d53:	mov    eax,esi
  410d55:	test   dl,0x4
  410d58:	jne    0x410d83
  410d5a:	and    dh,0x7f
  410d5d:	mov    DWORD PTR [rbx+0x10],edx
  410d60:	add    rsp,0x50
  410d64:	pop    rbx
  410d65:	pop    rsi
  410d66:	pop    rdi
  410d67:	ret    
  410d68:	nop    DWORD PTR [rax+rax*1+0x0]
  410d70:	mov    edx,DWORD PTR [rbx+0x10]
  410d73:	xor    eax,eax
  410d75:	and    dh,0x7f
  410d78:	mov    DWORD PTR [rbx+0x10],edx
  410d7b:	add    rsp,0x50
  410d7f:	pop    rbx
  410d80:	pop    rsi
  410d81:	pop    rdi
  410d82:	ret    
  410d83:	mov    DWORD PTR [rsp+0x2c],esi
  410d87:	mov    edx,0x1
  410d8c:	mov    rcx,rbx
  410d8f:	call   QWORD PTR [rbx+0x98]
  410d95:	mov    edx,DWORD PTR [rbx+0x10]
  410d98:	mov    eax,DWORD PTR [rsp+0x2c]
  410d9c:	and    dh,0x7f
  410d9f:	mov    DWORD PTR [rbx+0x10],edx
  410da2:	add    rsp,0x50
  410da6:	pop    rbx
  410da7:	pop    rsi
  410da8:	pop    rdi
  410da9:	ret    
  410daa:	nop    WORD PTR [rax+rax*1+0x0]
  410db0:	push   rsi
  410db1:	push   rbx
  410db2:	sub    rsp,0x58
  410db6:	lea    rsi,[rsp+0x30]
  410dbb:	mov    rbx,rcx
  410dbe:	mov    rdx,rsi
  410dc1:	mov    rcx,rbx
  410dc4:	mov    QWORD PTR [rsp+0x30],0x0
  410dcd:	mov    QWORD PTR [rsp+0x38],0x0
  410dd6:	mov    DWORD PTR [rsp+0x40],0x4
  410dde:	mov    DWORD PTR [rsp+0x44],0x0
  410de6:	call   0x410b70
  410deb:	test   eax,eax
  410ded:	jne    0x410dfa
  410def:	mov    rdx,rsi
  410df2:	mov    rcx,rbx
  410df5:	call   0x40a790
  410dfa:	cmp    eax,0xffffffff
  410dfd:	je     0x410e55
  410dff:	cmp    eax,0x1
  410e02:	je     0x410e70
  410e04:	mov    eax,DWORD PTR [rsp+0x40]
  410e08:	test   eax,0x20020
  410e0d:	je     0x410e42
  410e0f:	mov    edx,eax
  410e11:	and    edx,0x40020
  410e17:	cmp    edx,0x20
  410e1a:	je     0x410e42
  410e1c:	mov    edx,eax
  410e1e:	and    edx,0x400020
  410e24:	cmp    edx,0x400000
  410e2a:	je     0x410e38
  410e2c:	and    eax,0x800020
  410e31:	cmp    eax,0x800020
  410e36:	jne    0x410dbe
  410e38:	mov    rax,QWORD PTR [rsp+0x30]
  410e3d:	sub    WORD PTR [rax+0xe],0x1
  410e42:	mov    rdx,rsi
  410e45:	mov    rcx,rbx
  410e48:	call   0x4092f0
  410e4d:	test   eax,eax
  410e4f:	je     0x410dbe
  410e55:	test   BYTE PTR [rbx+0x10],0x4
  410e59:	mov    eax,0xffffffff
  410e5e:	jne    0x410e80
  410e60:	add    rsp,0x58
  410e64:	pop    rbx
  410e65:	pop    rsi
  410e66:	ret    
  410e67:	nop    WORD PTR [rax+rax*1+0x0]
  410e70:	xor    al,al
  410e72:	add    rsp,0x58
  410e76:	pop    rbx
  410e77:	pop    rsi
  410e78:	ret    
  410e79:	nop    DWORD PTR [rax+0x0]
  410e80:	mov    DWORD PTR [rsp+0x2c],eax
  410e84:	mov    edx,0x1
  410e89:	mov    rcx,rbx
  410e8c:	call   QWORD PTR [rbx+0x98]
  410e92:	mov    eax,DWORD PTR [rsp+0x2c]
  410e96:	add    rsp,0x58
  410e9a:	pop    rbx
  410e9b:	pop    rsi
  410e9c:	ret    
  410e9d:	nop    DWORD PTR [rax]
  410ea0:	push   r14
  410ea2:	push   r13
  410ea4:	push   r12
  410ea6:	push   rbp
  410ea7:	push   rdi
  410ea8:	push   rsi
  410ea9:	push   rbx
  410eaa:	sub    rsp,0x20
  410eae:	mov    rax,QWORD PTR [rip+0x23fb3]        # 0x434e68
  410eb5:	mov    rbp,rcx
  410eb8:	mov    rdi,rdx
  410ebb:	mov    rbx,r8
  410ebe:	mov    r12d,r9d
  410ec1:	test   rax,rax
  410ec4:	je     0x411194
  410eca:	movzx  edx,BYTE PTR [rbx]
  410ecd:	cmp    BYTE PTR [rax+rdx*1],0x0
  410ed1:	je     0x410ee2
  410ed3:	add    rbx,0x1
  410ed7:	movzx  r10d,BYTE PTR [rbx]
  410edb:	cmp    BYTE PTR [rax+r10*1],0x0
  410ee0:	jne    0x410ed3
  410ee2:	lea    rdx,[rip+0x188dc]        # 0x4297c5
  410ee9:	mov    rcx,rbx
  410eec:	call   0x421d80
  410ef1:	test   rax,rax
  410ef4:	mov    r13,rax
  410ef7:	je     0x411147
  410efd:	cmp    DWORD PTR [rsp+0x80],0x2
  410f05:	je     0x411110
  410f0b:	movzx  eax,BYTE PTR [rax]
  410f0e:	xor    r14d,r14d
  410f11:	cmp    al,0x7f
  410f13:	jbe    0x410ff0
  410f19:	mov    rdx,QWORD PTR [rip+0x23e40]        # 0x434d60
  410f20:	lea    rsi,[r13+0x1]
  410f24:	mov    BYTE PTR [r13+0x0],0x0
  410f29:	test   rdx,rdx
  410f2c:	je     0x4111c7
  410f32:	movzx  eax,BYTE PTR [r13+0x1]
  410f37:	cmp    BYTE PTR [rdx+rax*1],0x0
  410f3b:	mov    r10,rax
  410f3e:	je     0x410f52
  410f40:	add    rsi,0x1
  410f44:	movzx  r11d,BYTE PTR [rsi]
  410f48:	cmp    BYTE PTR [rdx+r11*1],0x0
  410f4d:	mov    r10,r11
  410f50:	jne    0x410f40
  410f52:	test   r14d,r14d
  410f55:	mov    r13,rsi
  410f58:	je     0x410f6e
  410f5a:	cmp    r10b,0x3d
  410f5e:	je     0x411080
  410f64:	cmp    r10b,0x3a
  410f68:	je     0x411080
  410f6e:	movzx  eax,BYTE PTR [rbx+0x1]
  410f72:	cmp    al,0x7f
  410f74:	ja     0x410fc5
  410f76:	lea    rdx,[rip+0x1b343]        # 0x42c2c0
  410f7d:	test   DWORD PTR [rdx+rax*4],0x3b0040
  410f84:	je     0x410fc5
  410f86:	mov    r8,rdi
  410f89:	mov    rdx,rbx
  410f8c:	mov    rcx,rbp
  410f8f:	call   0x4106f0
  410f94:	test   eax,eax
  410f96:	jne    0x410fdb
  410f98:	test   r12d,r12d
  410f9b:	je     0x411010
  410f9d:	mov    eax,DWORD PTR [rdi+0x10]
  410fa0:	test   ah,0x1
  410fa3:	jne    0x410fdb
  410fa5:	movzx  edx,BYTE PTR [r13+0x0]
  410faa:	cmp    dl,0x22
  410fad:	je     0x4110c0
  410fb3:	cmp    dl,0x27
  410fb6:	je     0x4110c0
  410fbc:	mov    QWORD PTR [rdi+0x8],r13
  410fc0:	jmp    0x4110d1
  410fc5:	movsx  edx,BYTE PTR [rbx]
  410fc8:	lea    r9,[rdi+0x14]
  410fcc:	mov    r8,rdi
  410fcf:	mov    rcx,rbp
  410fd2:	call   0x4094a0
  410fd7:	test   eax,eax
  410fd9:	je     0x410f98
  410fdb:	add    rsp,0x20
  410fdf:	pop    rbx
  410fe0:	pop    rsi
  410fe1:	pop    rdi
  410fe2:	pop    rbp
  410fe3:	pop    r12
  410fe5:	pop    r13
  410fe7:	pop    r14
  410fe9:	ret    
  410fea:	nop    WORD PTR [rax+rax*1+0x0]
  410ff0:	lea    rdx,[rip+0x1b2c9]        # 0x42c2c0
  410ff7:	xor    r14d,r14d
  410ffa:	test   DWORD PTR [rdx+rax*4],0xc01
  411001:	setne  r14b
  411005:	jmp    0x410f19
  41100a:	nop    WORD PTR [rax+rax*1+0x0]
  411010:	movzx  eax,BYTE PTR [r13+0x0]
  411015:	cmp    al,0x22
  411017:	je     0x41116e
  41101d:	cmp    al,0x27
  41101f:	je     0x41116e
  411025:	mov    QWORD PTR [rdi+0x8],r13
  411029:	mov    rax,QWORD PTR [rdi]
  41102c:	mov    eax,DWORD PTR [rax+0x10]
  41102f:	test   ah,0xf0
  411032:	jne    0x411120
  411038:	cmp    BYTE PTR [r13+0x0],0x0
  41103d:	jne    0x410fdb
  41103f:	mov    QWORD PTR [rdi+0x8],0x0
  411047:	mov    ebx,DWORD PTR [rip+0x12983]        # 0x4239d0
  41104d:	mov    eax,DWORD PTR [rsp+0x80]
  411054:	mov    rdx,rdi
  411057:	mov    rcx,rbp
  41105a:	mov    DWORD PTR [rip+0x12970],eax        # 0x4239d0
  411060:	call   0x4092f0
  411065:	mov    DWORD PTR [rip+0x12965],ebx        # 0x4239d0
  41106b:	add    rsp,0x20
  41106f:	pop    rbx
  411070:	pop    rsi
  411071:	pop    rdi
  411072:	pop    rbp
  411073:	pop    r12
  411075:	pop    r13
  411077:	pop    r14
  411079:	ret    
  41107a:	nop    WORD PTR [rax+rax*1+0x0]
  411080:	mov    rax,QWORD PTR [rip+0x23cd9]        # 0x434d60
  411087:	lea    r13,[rsi+0x1]
  41108b:	test   rax,rax
  41108e:	je     0x4111d9
  411094:	movzx  edx,BYTE PTR [rsi+0x1]
  411098:	cmp    BYTE PTR [rax+rdx*1],0x0
  41109c:	je     0x410f6e
  4110a2:	add    r13,0x1
  4110a6:	movzx  edx,BYTE PTR [r13+0x0]
  4110ab:	cmp    BYTE PTR [rax+rdx*1],0x0
  4110af:	jne    0x4110a2
  4110b1:	jmp    0x410f6e
  4110b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110c0:	xor    edx,edx
  4110c2:	mov    rcx,r13
  4110c5:	call   0x40cef0
  4110ca:	mov    eax,DWORD PTR [rdi+0x10]
  4110cd:	mov    QWORD PTR [rdi+0x8],r13
  4110d1:	mov    edx,eax
  4110d3:	and    edx,0x60000
  4110d9:	cmp    edx,0x20000
  4110df:	je     0x4111a3
  4110e5:	jbe    0x411158
  4110e7:	cmp    edx,0x40000
  4110ed:	je     0x4111b5
  4110f3:	cmp    edx,0x60000
  4110f9:	jne    0x411029
  4110ff:	test   r12d,r12d
  411102:	jg     0x410fdb
  411108:	jmp    0x411029
  41110d:	nop    DWORD PTR [rax]
  411110:	mov    BYTE PTR [rax],0x0
  411113:	add    r13,0x1
  411117:	jmp    0x410f6e
  41111c:	nop    DWORD PTR [rax+0x0]
  411120:	test   eax,0x10000
  411125:	je     0x41117d
  411127:	cmp    BYTE PTR [r13+0x0],0x0
  41112c:	je     0x41103f
  411132:	mov    rcx,r13
  411135:	call   0x409a50
  41113a:	or     DWORD PTR [rdi+0x10],0x40
  41113e:	mov    QWORD PTR [rdi+0x8],rax
  411142:	jmp    0x411047
  411147:	mov    rcx,rbx
  41114a:	call   0x421d98
  41114f:	lea    r13,[rbx+rax*1]
  411153:	jmp    0x410f6e
  411158:	test   edx,edx
  41115a:	jne    0x411029
  411160:	test   r12d,r12d
  411163:	jns    0x411029
  411169:	jmp    0x410fdb
  41116e:	xor    edx,edx
  411170:	mov    rcx,r13
  411173:	call   0x40cef0
  411178:	jmp    0x411025
  41117d:	cmp    BYTE PTR [r13+0x0],0x0
  411182:	jne    0x411132
  411184:	lea    rax,[rip+0x19f44]        # 0x42b0cf
  41118b:	mov    QWORD PTR [rdi+0x8],rax
  41118f:	jmp    0x411047
  411194:	mov    ecx,0x2d
  411199:	call   0x4097f0
  41119e:	jmp    0x410eca
  4111a3:	test   r12d,r12d
  4111a6:	js     0x4111ba
  4111a8:	test   al,0x20
  4111aa:	je     0x411029
  4111b0:	jmp    0x410fdb
  4111b5:	test   r12d,r12d
  4111b8:	js     0x4111a8
  4111ba:	test   al,0x20
  4111bc:	jne    0x411029
  4111c2:	jmp    0x410fdb
  4111c7:	mov    ecx,0xc
  4111cc:	call   0x4097f0
  4111d1:	mov    rdx,rax
  4111d4:	jmp    0x410f32
  4111d9:	mov    ecx,0xc
  4111de:	call   0x4097f0
  4111e3:	jmp    0x411094
  4111e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4111f0:	push   rdi
  4111f1:	push   rsi
  4111f2:	push   rbx
  4111f3:	sub    rsp,0x50
  4111f7:	mov    esi,DWORD PTR [rcx+0x10]
  4111fa:	mov    rbx,rcx
  4111fd:	mov    QWORD PTR [rsp+0x30],0x0
  411206:	mov    QWORD PTR [rsp+0x38],0x0
  41120f:	mov    DWORD PTR [rsp+0x40],0x1
  411217:	mov    DWORD PTR [rsp+0x44],0x0
  41121f:	mov    eax,esi
  411221:	and    eax,0xfffffffb
  411224:	mov    DWORD PTR [rcx+0x10],eax
  411227:	mov    rcx,rdx
  41122a:	call   0x409a50
  41122f:	lea    rdx,[rsp+0x30]
  411234:	mov    rdi,rax
  411237:	xor    r9d,r9d
  41123a:	mov    r8,rax
  41123d:	mov    rcx,rbx
  411240:	mov    DWORD PTR [rsp+0x20],0x0
  411248:	call   0x410ea0
  41124d:	mov    rcx,rdi
  411250:	call   0x421e50
  411255:	mov    DWORD PTR [rbx+0x10],esi
  411258:	add    rsp,0x50
  41125c:	pop    rbx
  41125d:	pop    rsi
  41125e:	pop    rdi
  41125f:	ret    
  411260:	push   rbp
  411261:	push   rdi
  411262:	push   rsi
  411263:	push   rbx
  411264:	sub    rsp,0x48
  411268:	mov    rsi,QWORD PTR [rdx+0x18]
  41126c:	cmp    rcx,0xf
  411270:	mov    QWORD PTR [rsp+0x20],0x0
  411279:	mov    QWORD PTR [rsp+0x28],0x0
  411282:	mov    DWORD PTR [rsp+0x30],0x2
  41128a:	mov    DWORD PTR [rsp+0x34],0x0
  411292:	jbe    0x41129b
  411294:	mov    eax,DWORD PTR [rdx+0x10]
  411297:	test   al,0x8
  411299:	je     0x4112a4
  41129b:	add    rsp,0x48
  41129f:	pop    rbx
  4112a0:	pop    rsi
  4112a1:	pop    rdi
  4112a2:	pop    rbp
  4112a3:	ret    
  4112a4:	test   ah,0x80
  4112a7:	je     0x411340
  4112ad:	test   BYTE PTR [rcx+0x12],0x4
  4112b1:	mov    rbx,rcx
  4112b4:	je     0x411372
  4112ba:	lea    rdi,[rsp+0x20]
  4112bf:	mov    rdx,rsi
  4112c2:	mov    r8,rdi
  4112c5:	call   0x4106f0
  4112ca:	test   eax,eax
  4112cc:	jne    0x411372
  4112d2:	mov    rdx,rdi
  4112d5:	mov    rcx,rbx
  4112d8:	call   0x409890
  4112dd:	test   eax,eax
  4112df:	jne    0x411372
  4112e5:	test   BYTE PTR [rbx+0x11],0x80
  4112e9:	mov    eax,DWORD PTR [rsp+0x30]
  4112ed:	jne    0x411350
  4112ef:	test   eax,0x20020
  4112f4:	je     0x411323
  4112f6:	mov    edx,eax
  4112f8:	and    edx,0x40020
  4112fe:	cmp    edx,0x20
  411301:	je     0x411323
  411303:	mov    edx,eax
  411305:	and    edx,0x400020
  41130b:	cmp    edx,0x400000
  411311:	je     0x411323
  411313:	and    eax,0x800020
  411318:	cmp    eax,0x800020
  41131d:	jne    0x41129b
  411323:	mov    rdx,rdi
  411326:	mov    rcx,rbx
  411329:	call   0x4092f0
  41132e:	nop
  41132f:	add    rsp,0x48
  411333:	pop    rbx
  411334:	pop    rsi
  411335:	pop    rdi
  411336:	pop    rbp
  411337:	ret    
  411338:	nop    DWORD PTR [rax+rax*1+0x0]
  411340:	mov    DWORD PTR [rsp+0x30],0x4
  411348:	jmp    0x4112ad
  41134d:	nop    DWORD PTR [rax]
  411350:	mov    edx,eax
  411352:	and    edx,0x20020
  411358:	cmp    edx,0x20000
  41135e:	je     0x411323
  411360:	and    eax,0x40020
  411365:	cmp    eax,0x40020
  41136a:	jne    0x41129b
  411370:	jmp    0x411323
  411372:	mov    rbp,QWORD PTR [rbx+0x28]
  411376:	mov    rdi,QWORD PTR [rip+0x12783]        # 0x423b00
  41137d:	call   QWORD PTR [rip+0x27bf9]        # 0x438f7c
  411383:	lea    rcx,[rax+0x60]
  411387:	mov    r9,rsi
  41138a:	mov    r8,rbp
  41138d:	mov    rdx,rdi
  411390:	call   0x407ea0
  411395:	mov    rcx,rbx
  411398:	mov    edx,0x1
  41139d:	call   QWORD PTR [rbx+0x98]
  4113a3:	mov    ecx,0x1
  4113a8:	call   0x421f40
  4113ad:	nop
  4113ae:	xchg   ax,ax
  4113b0:	push   r12
  4113b2:	push   rbp
  4113b3:	push   rdi
  4113b4:	push   rsi
  4113b5:	push   rbx
  4113b6:	sub    rsp,0x40
  4113ba:	mov    rsi,QWORD PTR [rdx+0x18]
  4113be:	cmp    rcx,0xf
  4113c2:	mov    QWORD PTR [rsp+0x20],0x0
  4113cb:	mov    QWORD PTR [rsp+0x28],0x0
  4113d4:	mov    DWORD PTR [rsp+0x30],0x4
  4113dc:	mov    DWORD PTR [rsp+0x34],0x0
  4113e4:	jbe    0x4114ff
  4113ea:	cmp    BYTE PTR [rip+0x237df],0x0        # 0x434bd0
  4113f1:	jne    0x4114ff
  4113f7:	cmp    DWORD PTR [rcx],0x1ffff
  4113fd:	mov    rbx,rcx
  411400:	jle    0x41159b
  411406:	cmp    QWORD PTR [rcx+0xd0],0x0
  41140e:	je     0x41159b
  411414:	test   rsi,rsi
  411417:	je     0x41141e
  411419:	cmp    BYTE PTR [rsi],0x0
  41141c:	jne    0x41146c
  41141e:	mov    r12,QWORD PTR [rdx+0x50]
  411422:	mov    rbp,QWORD PTR [rbx+0x28]
  411426:	mov    rdi,QWORD PTR [rip+0x1272b]        # 0x423b58
  41142d:	call   QWORD PTR [rip+0x27b49]        # 0x438f7c
  411433:	lea    rcx,[rax+0x60]
  411437:	mov    r8,rbp
  41143a:	mov    r9,r12
  41143d:	mov    rdx,rdi
  411440:	call   0x407ea0
  411445:	mov    edx,0x1
  41144a:	mov    rcx,rbx
  41144d:	call   QWORD PTR [rbx+0x98]
  411453:	lea    rdx,[rip+0x1731e]        # 0x428778
  41145a:	lea    rcx,[rip+0x1731f]        # 0x428780
  411461:	mov    r8d,0x60
  411467:	call   0x41cfe0
  41146c:	cmp    BYTE PTR [rsi+0x1],0x0
  411470:	mov    BYTE PTR [rip+0x23759],0x1        # 0x434bd0
  411477:	jne    0x411510
  41147d:	movzx  edx,BYTE PTR [rsi]
  411480:	cmp    dl,0x2a
  411483:	je     0x411573
  411489:	lea    r8,[rsp+0x20]
  41148e:	mov    rcx,rbx
  411491:	lea    r9,[r8+0x14]
  411495:	call   0x4094a0
  41149a:	test   eax,eax
  41149c:	je     0x4114eb
  41149e:	movsx  ebp,BYTE PTR [rsi]
  4114a1:	mov    rdi,QWORD PTR [rbx+0x20]
  4114a5:	mov    rsi,QWORD PTR [rip+0x12644]        # 0x423af0
  4114ac:	call   QWORD PTR [rip+0x27aca]        # 0x438f7c
  4114b2:	lea    rcx,[rax+0x60]
  4114b6:	mov    r8,rdi
  4114b9:	mov    r9d,ebp
  4114bc:	mov    rdx,rsi
  4114bf:	call   0x407ea0
  4114c4:	mov    edx,0x1
  4114c9:	mov    rcx,rbx
  4114cc:	call   QWORD PTR [rbx+0x98]
  4114d2:	lea    rdx,[rip+0x1729f]        # 0x428778
  4114d9:	lea    rcx,[rip+0x172a0]        # 0x428780
  4114e0:	mov    r8d,0x71
  4114e6:	call   0x41cfe0
  4114eb:	mov    rdx,QWORD PTR [rsp+0x20]
  4114f0:	mov    rcx,rbx
  4114f3:	call   0x407d80
  4114f8:	mov    BYTE PTR [rip+0x236d1],0x0        # 0x434bd0
  4114ff:	add    rsp,0x40
  411503:	pop    rbx
  411504:	pop    rsi
  411505:	pop    rdi
  411506:	pop    rbp
  411507:	pop    r12
  411509:	ret    
  41150a:	nop    WORD PTR [rax+rax*1+0x0]
  411510:	lea    r8,[rsp+0x20]
  411515:	mov    rdx,rsi
  411518:	mov    rcx,rbx
  41151b:	call   0x4106f0
  411520:	test   eax,eax
  411522:	je     0x4114eb
  411524:	mov    rbp,QWORD PTR [rbx+0x20]
  411528:	mov    rdi,QWORD PTR [rip+0x125c9]        # 0x423af8
  41152f:	call   QWORD PTR [rip+0x27a47]        # 0x438f7c
  411535:	lea    rcx,[rax+0x60]
  411539:	mov    r9,rsi
  41153c:	mov    r8,rbp
  41153f:	mov    rdx,rdi
  411542:	call   0x407ea0
  411547:	mov    rcx,rbx
  41154a:	mov    edx,0x1
  41154f:	call   QWORD PTR [rbx+0x98]
  411555:	lea    rdx,[rip+0x1721c]        # 0x428778
  41155c:	lea    rcx,[rip+0x1721d]        # 0x428780
  411563:	mov    r8d,0x79
  411569:	call   0x41cfe0
  41156e:	jmp    0x4114eb
  411573:	mov    rdi,QWORD PTR [rbx+0x78]
  411577:	mov    esi,DWORD PTR [rbx+0xb4]
  41157d:	jmp    0x411584
  41157f:	nop
  411580:	add    rdi,0x68
  411584:	mov    rdx,rdi
  411587:	mov    rcx,rbx
  41158a:	sub    esi,0x1
  41158d:	call   0x407d80
  411592:	test   esi,esi
  411594:	jg     0x411580
  411596:	jmp    0x4114f8
  41159b:	mov    rcx,QWORD PTR [rip+0x124c6]        # 0x423a68
  4115a2:	call   0x408310
  4115a7:	nop
  4115a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4115b0:	push   r13
  4115b2:	push   r12
  4115b4:	push   rbp
  4115b5:	push   rdi
  4115b6:	push   rsi
  4115b7:	push   rbx
  4115b8:	sub    rsp,0x28
  4115bc:	mov    rbp,rcx
  4115bf:	mov    ecx,0xa
  4115c4:	mov    rsi,rdx
  4115c7:	call   0x409ce0
  4115cc:	mov    rcx,QWORD PTR [rbp+0x28]
  4115d0:	mov    rdi,rax
  4115d3:	call   0x421d98
  4115d8:	mov    r13,rax
  4115db:	mov    eax,0x3f3c
  4115e0:	mov    WORD PTR [rdi],ax
  4115e3:	movabs rax,0x6d6172676f7270
  4115ed:	mov    r12d,r13d
  4115f0:	mov    QWORD PTR [rdi+0x2],rax
  4115f4:	mov    r10,QWORD PTR [rip+0x23765]        # 0x434d60
  4115fb:	lea    rbx,[rsi+0x1]
  4115ff:	test   r10,r10
  411602:	je     0x411678
  411604:	movzx  eax,BYTE PTR [rsi+0x1]
  411608:	cmp    BYTE PTR [r10+rax*1],0x0
  41160d:	je     0x41161f
  41160f:	nop
  411610:	add    rbx,0x1
  411614:	movzx  r9d,BYTE PTR [rbx]
  411618:	cmp    BYTE PTR [r10+r9*1],0x0
  41161d:	jne    0x411610
  41161f:	mov    rdx,QWORD PTR [rbp+0x28]
  411623:	mov    r8d,r12d
  411626:	mov    rcx,rbx
  411629:	call   0x4106a0
  41162e:	test   eax,eax
  411630:	jne    0x41164d
  411632:	lea    rsi,[rbx+r13*1]
  411636:	movzx  eax,BYTE PTR [rsi]
  411639:	cmp    al,0x7f
  41163b:	ja     0x41164d
  41163d:	lea    rdx,[rip+0x1ac7c]        # 0x42c2c0
  411644:	test   DWORD PTR [rdx+rax*4],0x1000c01
  41164b:	jne    0x41168a
  41164d:	mov    rdx,rdi
  411650:	mov    rcx,rbx
  411653:	call   0x421d70
  411658:	test   rax,rax
  41165b:	mov    rsi,rax
  41165e:	jne    0x4115f4
  411660:	mov    rcx,rdi
  411663:	call   0x421e50
  411668:	mov    rax,rsi
  41166b:	add    rsp,0x28
  41166f:	pop    rbx
  411670:	pop    rsi
  411671:	pop    rdi
  411672:	pop    rbp
  411673:	pop    r12
  411675:	pop    r13
  411677:	ret    
  411678:	mov    ecx,0xc
  41167d:	call   0x4097f0
  411682:	mov    r10,rax
  411685:	jmp    0x411604
  41168a:	mov    rcx,rdi
  41168d:	call   0x421e50
  411692:	jmp    0x41169c
  411694:	add    rsi,0x1
  411698:	cmp    al,0x3e
  41169a:	je     0x411668
  41169c:	movzx  eax,BYTE PTR [rsi]
  41169f:	test   al,al
  4116a1:	jne    0x411694
  4116a3:	xor    esi,esi
  4116a5:	mov    rax,rsi
  4116a8:	add    rsp,0x28
  4116ac:	pop    rbx
  4116ad:	pop    rsi
  4116ae:	pop    rdi
  4116af:	pop    rbp
  4116b0:	pop    r12
  4116b2:	pop    r13
  4116b4:	ret    
  4116b5:	nop
  4116b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116c0:	push   r14
  4116c2:	push   r13
  4116c4:	push   r12
  4116c6:	push   rbp
  4116c7:	push   rdi
  4116c8:	push   rsi
  4116c9:	push   rbx
  4116ca:	sub    rsp,0x20
  4116ce:	test   rdx,rdx
  4116d1:	mov    rbp,rcx
  4116d4:	mov    rbx,rdx
  4116d7:	je     0x411750
  4116d9:	mov    rax,QWORD PTR [rip+0x23680]        # 0x434d60
  4116e0:	test   rax,rax
  4116e3:	je     0x411812
  4116e9:	movzx  ecx,BYTE PTR [rbx]
  4116ec:	cmp    BYTE PTR [rax+rcx*1],0x0
  4116f0:	mov    rdx,rcx
  4116f3:	je     0x411707
  4116f5:	add    rbx,0x1
  4116f9:	movzx  r8d,BYTE PTR [rbx]
  4116fd:	cmp    BYTE PTR [rax+r8*1],0x0
  411702:	mov    rdx,r8
  411705:	jne    0x4116f5
  411707:	test   dl,dl
  411709:	je     0x411741
  41170b:	xor    esi,esi
  41170d:	mov    r14d,0x1
  411713:	lea    rdi,[rip+0x171e6]        # 0x428900
  41171a:	xor    r12d,r12d
  41171d:	mov    r13,QWORD PTR [rdi]
  411720:	mov    rdx,QWORD PTR [rdi+0x10]
  411724:	mov    rcx,rbx
  411727:	mov    r8d,r13d
  41172a:	call   0x4106a0
  41172f:	test   eax,eax
  411731:	je     0x411770
  411733:	add    r12d,0x1
  411737:	add    rdi,0x18
  41173b:	cmp    r12d,0x5
  41173f:	jne    0x41171d
  411741:	add    rsp,0x20
  411745:	pop    rbx
  411746:	pop    rsi
  411747:	pop    rdi
  411748:	pop    rbp
  411749:	pop    r12
  41174b:	pop    r13
  41174d:	pop    r14
  41174f:	ret    
  411750:	lea    rcx,[rip+0x17030]        # 0x428787
  411757:	call   0x421e30
  41175c:	test   rax,rax
  41175f:	mov    rbx,rax
  411762:	jne    0x4116d9
  411768:	jmp    0x411741
  41176a:	nop    WORD PTR [rax+rax*1+0x0]
  411770:	add    rbx,r13
  411773:	movzx  r8d,BYTE PTR [rbx]
  411777:	cmp    r8b,0x7f
  41177b:	ja     0x411741
  41177d:	lea    rdx,[rip+0x1ab3c]        # 0x42c2c0
  411784:	movzx  eax,r8b
  411788:	test   DWORD PTR [rdx+rax*4],0xc13
  41178f:	je     0x411741
  411791:	mov    eax,r14d
  411794:	mov    ecx,r12d
  411797:	shl    eax,cl
  411799:	or     esi,eax
  41179b:	mov    rax,QWORD PTR [rip+0x235be]        # 0x434d60
  4117a2:	test   rax,rax
  4117a5:	je     0x411872
  4117ab:	mov    edx,r8d
  4117ae:	cmp    BYTE PTR [rax+r8*1],0x0
  4117b3:	je     0x4117c5
  4117b5:	add    rbx,0x1
  4117b9:	movzx  ecx,BYTE PTR [rbx]
  4117bc:	cmp    BYTE PTR [rax+rcx*1],0x0
  4117c0:	mov    rdx,rcx
  4117c3:	jne    0x4117b5
  4117c5:	test   dl,dl
  4117c7:	je     0x411821
  4117c9:	cmp    dl,0x2c
  4117cc:	jne    0x411713
  4117d2:	mov    rax,QWORD PTR [rip+0x23587]        # 0x434d60
  4117d9:	lea    rdi,[rbx+0x1]
  4117dd:	test   rax,rax
  4117e0:	je     0x411888
  4117e6:	movzx  edx,BYTE PTR [rbx+0x1]
  4117ea:	mov    rbx,rdi
  4117ed:	cmp    BYTE PTR [rax+rdx*1],0x0
  4117f1:	je     0x411713
  4117f7:	nop    WORD PTR [rax+rax*1+0x0]
  411800:	add    rbx,0x1
  411804:	movzx  edx,BYTE PTR [rbx]
  411807:	cmp    BYTE PTR [rax+rdx*1],0x0
  41180b:	jne    0x411800
  41180d:	jmp    0x411713
  411812:	mov    ecx,0xc
  411817:	call   0x4097f0
  41181c:	jmp    0x4116e9
  411821:	mov    eax,esi
  411823:	and    eax,0x3
  411826:	cmp    eax,0x3
  411829:	je     0x411741
  41182f:	mov    eax,esi
  411831:	and    eax,0xc
  411834:	cmp    eax,0xc
  411837:	je     0x411741
  41183d:	lea    rax,[rip+0x170bc]        # 0x428900
  411844:	jmp    0x41185f
  411846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411850:	and    DWORD PTR [rbp+0x0],edx
  411853:	shr    esi,1
  411855:	je     0x411741
  41185b:	add    rax,0x18
  41185f:	test   sil,0x1
  411863:	je     0x411853
  411865:	mov    edx,DWORD PTR [rax+0x8]
  411868:	test   dl,0x1
  41186b:	jne    0x411850
  41186d:	or     DWORD PTR [rbp+0x0],edx
  411870:	jmp    0x411853
  411872:	mov    ecx,0xc
  411877:	call   0x4097f0
  41187c:	movzx  edx,BYTE PTR [rbx]
  41187f:	movzx  r8d,dl
  411883:	jmp    0x4117ae
  411888:	mov    ecx,0xc
  41188d:	call   0x4097f0
  411892:	jmp    0x4117e6
  411897:	nop    WORD PTR [rax+rax*1+0x0]
  4118a0:	push   r12
  4118a2:	push   rbp
  4118a3:	push   rdi
  4118a4:	push   rsi
  4118a5:	push   rbx
  4118a6:	sub    rsp,0x30
  4118aa:	mov    rax,QWORD PTR [rip+0x234af]        # 0x434d60
  4118b1:	mov    rbp,rcx
  4118b4:	lea    rbx,[rdx+0x1]
  4118b8:	test   rax,rax
  4118bb:	je     0x41193e
  4118c1:	movzx  edx,BYTE PTR [rdx+0x1]
  4118c5:	cmp    BYTE PTR [rax+rdx*1],0x0
  4118c9:	je     0x4118dd
  4118cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4118d0:	add    rbx,0x1
  4118d4:	movzx  edx,BYTE PTR [rbx]
  4118d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4118db:	jne    0x4118d0
  4118dd:	mov    edx,0x3e
  4118e2:	mov    rcx,rbx
  4118e5:	call   0x421dc0
  4118ea:	test   rax,rax
  4118ed:	mov    rsi,rax
  4118f0:	je     0x411930
  4118f2:	mov    r12d,eax
  4118f5:	add    rsi,0x1
  4118f9:	sub    r12d,ebx
  4118fc:	lea    rcx,[r12+0x1]
  411901:	call   0x409ce0
  411906:	mov    r8,r12
  411909:	mov    rdx,rbx
  41190c:	mov    rcx,rax
  41190f:	mov    rdi,rax
  411912:	call   0x421e08
  411917:	lea    rcx,[rbp+0x10]
  41191b:	mov    rdx,rdi
  41191e:	mov    BYTE PTR [rdi+r12*1],0x0
  411923:	call   0x4116c0
  411928:	mov    rcx,rdi
  41192b:	call   0x421e50
  411930:	mov    rax,rsi
  411933:	add    rsp,0x30
  411937:	pop    rbx
  411938:	pop    rsi
  411939:	pop    rdi
  41193a:	pop    rbp
  41193b:	pop    r12
  41193d:	ret    
  41193e:	mov    ecx,0xc
  411943:	mov    QWORD PTR [rsp+0x28],rdx
  411948:	call   0x4097f0
  41194d:	mov    rdx,QWORD PTR [rsp+0x28]
  411952:	jmp    0x4118c1
  411957:	nop    WORD PTR [rax+rax*1+0x0]
  411960:	push   rbp
  411961:	push   rdi
  411962:	push   rsi
  411963:	push   rbx
  411964:	sub    rsp,0x28
  411968:	test   BYTE PTR [rdx+0x12],0x1
  41196c:	mov    rbx,rcx
  41196f:	mov    rsi,r8
  411972:	mov    ebp,r9d
  411975:	je     0x4119b0
  411977:	mov    rax,QWORD PTR [rdx+0x18]
  41197b:	test   rax,rax
  41197e:	je     0x4119b0
  411980:	movzx  edi,BYTE PTR [rax]
  411983:	test   dil,dil
  411986:	je     0x4119b0
  411988:	lea    eax,[rdi-0x43]
  41198b:	cmp    al,0x33
  41198d:	ja     0x411ad0
  411993:	lea    rdx,[rip+0x16dfe]        # 0x428798
  41199a:	movzx  eax,al
  41199d:	movsxd rax,DWORD PTR [rdx+rax*4]
  4119a1:	add    rdx,rax
  4119a4:	jmp    rdx
  4119a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119b0:	lea    rcx,[rbx+0x10]
  4119b4:	xor    edx,edx
  4119b6:	call   0x4116c0
  4119bb:	test   BYTE PTR [rbx+0x11],0x10
  4119bf:	jne    0x411a00
  4119c1:	mov    rdx,QWORD PTR [rbx+0x50]
  4119c5:	mov    r9,QWORD PTR [rbx+0x60]
  4119c9:	mov    rcx,rsi
  4119cc:	mov    r8,QWORD PTR [rbx+0x40]
  4119d0:	call   0x408070
  4119d5:	mov    rcx,rsi
  4119d8:	call   0x421e80
  4119dd:	mov    rcx,rsi
  4119e0:	call   0x421e88
  4119e5:	test   eax,eax
  4119e7:	jne    0x411b24
  4119ed:	test   bpl,bpl
  4119f0:	jne    0x411b50
  4119f6:	add    rsp,0x28
  4119fa:	pop    rbx
  4119fb:	pop    rsi
  4119fc:	pop    rdi
  4119fd:	pop    rbp
  4119fe:	ret    
  4119ff:	nop
  411a00:	mov    rcx,QWORD PTR [rbx+0x40]
  411a04:	test   rcx,rcx
  411a07:	je     0x411b00
  411a0d:	mov    rdx,rsi
  411a10:	call   0x421e60
  411a15:	cmp    DWORD PTR [rbx],0x21fff
  411a1b:	jle    0x411a92
  411a1d:	cmp    QWORD PTR [rbx+0xe0],0x0
  411a25:	je     0x411a92
  411a27:	mov    rdx,rsi
  411a2a:	mov    ecx,0xa
  411a2f:	call   0x421e68
  411a34:	mov    rcx,QWORD PTR [rbx+0xe0]
  411a3b:	mov    rdx,rsi
  411a3e:	call   0x421e60
  411a43:	jmp    0x4119d5
  411a45:	mov    rcx,QWORD PTR [rcx+0x40]
  411a49:	test   rcx,rcx
  411a4c:	je     0x411a56
  411a4e:	mov    rdx,r8
  411a51:	call   0x421e60
  411a56:	mov    rcx,QWORD PTR [rbx+0x48]
  411a5a:	test   rcx,rcx
  411a5d:	je     0x411a67
  411a5f:	mov    rdx,rsi
  411a62:	call   0x421e60
  411a67:	mov    rdx,rsi
  411a6a:	mov    ecx,0xa
  411a6f:	call   0x421e68
  411a74:	mov    rdx,QWORD PTR [rip+0x11fdd]        # 0x423a58
  411a7b:	lea    r8,[rip+0x16e0e]        # 0x428890
  411a82:	mov    rcx,rsi
  411a85:	call   0x407ea0
  411a8a:	cmp    DWORD PTR [rbx],0x21fff
  411a90:	jg     0x411a1d
  411a92:	cmp    QWORD PTR [rbx+0x80],0x0
  411a9a:	je     0x4119d5
  411aa0:	mov    rdx,rsi
  411aa3:	mov    ecx,0xa
  411aa8:	call   0x421e68
  411aad:	mov    r8,QWORD PTR [rbx+0x80]
  411ab4:	mov    rdx,QWORD PTR [rip+0x121f5]        # 0x423cb0
  411abb:	mov    rcx,rsi
  411abe:	call   0x407ea0
  411ac3:	jmp    0x4119d5
  411ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ad0:	mov    rbx,QWORD PTR [rip+0x11ff9]        # 0x423ad0
  411ad7:	call   QWORD PTR [rip+0x2749f]        # 0x438f7c
  411add:	lea    rcx,[rax+0x60]
  411ae1:	movsx  r8d,dil
  411ae5:	mov    rdx,rbx
  411ae8:	call   0x407ea0
  411aed:	mov    ecx,0x1
  411af2:	call   0x4082e0
  411af7:	nop    WORD PTR [rax+rax*1+0x0]
  411b00:	mov    rcx,QWORD PTR [rbx+0x50]
  411b04:	test   rcx,rcx
  411b07:	jne    0x411a0d
  411b0d:	mov    rdx,QWORD PTR [rbx+0x60]
  411b11:	xor    r9d,r9d
  411b14:	xor    r8d,r8d
  411b17:	mov    rcx,rsi
  411b1a:	call   0x408070
  411b1f:	jmp    0x411a15
  411b24:	call   QWORD PTR [rip+0x27452]        # 0x438f7c
  411b2a:	add    rax,0x30
  411b2e:	mov    r8,QWORD PTR [rip+0x1208b]        # 0x423bc0
  411b35:	mov    rcx,QWORD PTR [rbx+0x28]
  411b39:	cmp    rsi,rax
  411b3c:	cmove  r8,QWORD PTR [rip+0x12074]        # 0x423bb8
  411b44:	mov    rdx,QWORD PTR [rip+0x1207d]        # 0x423bc8
  411b4b:	call   0x408860
  411b50:	xor    ecx,ecx
  411b52:	call   0x4082e0
  411b57:	nop
  411b58:	nop    DWORD PTR [rax+rax*1+0x0]
  411b60:	push   rsi
  411b61:	push   rbx
  411b62:	sub    rsp,0x28
  411b66:	cmp    BYTE PTR [rip+0x23087],0x0        # 0x434bf4
  411b6d:	mov    rbx,rcx
  411b70:	mov    rsi,rdx
  411b73:	je     0x411b90
  411b75:	call   QWORD PTR [rip+0x27401]        # 0x438f7c
  411b7b:	cmp    rbx,0xf
  411b7f:	lea    r8,[rax+0x60]
  411b83:	ja     0x411ba0
  411b85:	add    rsp,0x28
  411b89:	pop    rbx
  411b8a:	pop    rsi
  411b8b:	ret    
  411b8c:	nop    DWORD PTR [rax+0x0]
  411b90:	call   QWORD PTR [rip+0x273e6]        # 0x438f7c
  411b96:	cmp    rbx,0xf
  411b9a:	lea    r8,[rax+0x30]
  411b9e:	jbe    0x411b85
  411ba0:	mov    r9d,0x1
  411ba6:	mov    rdx,rsi
  411ba9:	mov    rcx,rbx
  411bac:	add    rsp,0x28
  411bb0:	pop    rbx
  411bb1:	pop    rsi
  411bb2:	jmp    0x411960
  411bb7:	nop    WORD PTR [rax+rax*1+0x0]
  411bc0:	add    rcx,0x1
  411bc4:	add    rdx,0x1
  411bc8:	movzx  r9d,BYTE PTR [rcx-0x1]
  411bcd:	movzx  r8d,BYTE PTR [rdx-0x1]
  411bd2:	cmp    r9b,r8b
  411bd5:	je     0x411bf1
  411bd7:	lea    r10,[rip+0x119e2]        # 0x4235c0
  411bde:	movzx  eax,r9b
  411be2:	movzx  eax,BYTE PTR [r10+rax*1]
  411be7:	movzx  r8d,BYTE PTR [r10+r8*1]
  411bec:	sub    eax,r8d
  411bef:	jne    0x411bf8
  411bf1:	test   r9b,r9b
  411bf4:	jne    0x411bc0
  411bf6:	xor    eax,eax
  411bf8:	repz ret 
  411bfa:	nop    WORD PTR [rax+rax*1+0x0]
  411c00:	test   r8d,r8d
  411c03:	jne    0x411c21
  411c05:	lea    rdx,[rip+0x11ab3]        # 0x4236bf
  411c0c:	mov    eax,0xff
  411c11:	mov    BYTE PTR [rdx],al
  411c13:	sub    eax,0x1
  411c16:	sub    rdx,0x1
  411c1a:	cmp    eax,0xffffffff
  411c1d:	jne    0x411c11
  411c1f:	repz ret 
  411c21:	lea    r9,[rip+0x11998]        # 0x4235c0
  411c28:	movzx  eax,dl
  411c2b:	movzx  edx,cl
  411c2e:	xchg   ax,ax
  411c30:	mov    ecx,edx
  411c32:	add    edx,0x1
  411c35:	mov    BYTE PTR [r9+rcx*1],al
  411c39:	add    eax,0x1
  411c3c:	cmp    eax,0xff
  411c41:	ja     0x411c54
  411c43:	cmp    edx,0xff
  411c49:	ja     0x411c54
  411c4b:	sub    r8d,0x1
  411c4f:	test   r8d,r8d
  411c52:	jg     0x411c30
  411c54:	repz ret 
  411c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c60:	test   rcx,rcx
  411c63:	je     0x411c8f
  411c65:	movzx  eax,BYTE PTR [rcx]
  411c68:	test   al,al
  411c6a:	je     0x411c8f
  411c6c:	lea    rdx,[rip+0x1194d]        # 0x4235c0
  411c73:	mov    r8d,eax
  411c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c80:	add    rcx,0x1
  411c84:	mov    BYTE PTR [rdx+rax*1],r8b
  411c88:	movzx  eax,BYTE PTR [rcx]
  411c8b:	test   al,al
  411c8d:	jne    0x411c80
  411c8f:	repz ret 
  411c91:	nop    DWORD PTR [rax+rax*1+0x0]
  411c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ca0:	lea    r8,[rip+0x11919]        # 0x4235c0
  411ca7:	nop    WORD PTR [rax+rax*1+0x0]
  411cb0:	movzx  eax,BYTE PTR [rdx]
  411cb3:	add    rcx,0x1
  411cb7:	add    rdx,0x1
  411cbb:	movzx  eax,BYTE PTR [r8+rax*1]
  411cc0:	mov    BYTE PTR [rcx-0x1],al
  411cc3:	cmp    BYTE PTR [rdx-0x1],0x0
  411cc7:	jne    0x411cb0
  411cc9:	ret    
  411cca:	nop    WORD PTR [rax+rax*1+0x0]
  411cd0:	push   rbp
  411cd1:	push   rdi
  411cd2:	push   rsi
  411cd3:	push   rbx
  411cd4:	sub    rsp,0x68
  411cd8:	xor    eax,eax
  411cda:	lea    rdi,[r9+0x8]
  411cde:	mov    QWORD PTR [r9],0x0
  411ce5:	mov    QWORD PTR [r9+0x28],0x0
  411ced:	mov    rbx,r9
  411cf0:	mov    rbp,rcx
  411cf3:	and    rdi,0xfffffffffffffff8
  411cf7:	sub    r9,rdi
  411cfa:	add    r9d,0x30
  411cfe:	shr    r9d,0x3
  411d02:	mov    ecx,r9d
  411d05:	rep stos QWORD PTR es:[rdi],rax
  411d08:	mov    DWORD PTR [rbx+0x24],edx
  411d0b:	and    edx,0x2
  411d0e:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411d15:	mov    DWORD PTR [rbx+0x28],r8d
  411d19:	mov    ax,0x8000
  411d1d:	je     0x411d45
  411d1f:	mov    eax,r8d
  411d22:	and    eax,0x3
  411d25:	cmp    eax,0x1
  411d28:	sete   dl
  411d2b:	movzx  eax,dl
  411d2e:	movzx  edx,dl
  411d31:	add    edx,edx
  411d33:	and    r8d,0x1
  411d37:	lea    eax,[rax+rax*1+0x8000]
  411d3e:	jne    0x411d45
  411d40:	mov    eax,edx
  411d42:	or     ah,0x84
  411d45:	mov    edx,eax
  411d47:	mov    rcx,rbp
  411d4a:	call   0x421cf8
  411d4f:	test   eax,eax
  411d51:	mov    DWORD PTR [rbx+0x18],eax
  411d54:	js     0x411eb0
  411d5a:	lea    rdx,[rsp+0x20]
  411d5f:	mov    ecx,eax
  411d61:	call   QWORD PTR [rip+0x2728d]        # 0x438ff4
  411d67:	test   eax,eax
  411d69:	jne    0x411e90
  411d6f:	movzx  eax,WORD PTR [rsp+0x26]
  411d74:	and    ax,0xf000
  411d78:	cmp    ax,0x8000
  411d7c:	je     0x411db0
  411d7e:	call   QWORD PTR [rip+0x27248]        # 0x438fcc
  411d84:	mov    DWORD PTR [rax],0x16
  411d8a:	mov    ecx,DWORD PTR [rbx+0x18]
  411d8d:	mov    DWORD PTR [rbx+0x20],0x16
  411d94:	call   0x421ce8
  411d99:	mov    edx,DWORD PTR [rbx+0x20]
  411d9c:	test   edx,edx
  411d9e:	mov    rax,0xffffffffffffffff
  411da5:	je     0x411dd0
  411da7:	add    rsp,0x68
  411dab:	pop    rbx
  411dac:	pop    rsi
  411dad:	pop    rdi
  411dae:	pop    rbp
  411daf:	ret    
  411db0:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  411db4:	mov    rax,QWORD PTR [rsp+0x38]
  411db9:	mov    QWORD PTR [rbx+0x8],rax
  411dbd:	jne    0x411d99
  411dbf:	call   QWORD PTR [rip+0x27207]        # 0x438fcc
  411dc5:	mov    edx,DWORD PTR [rax]
  411dc7:	mov    DWORD PTR [rbx+0x20],edx
  411dca:	jmp    0x411d9c
  411dcc:	nop    DWORD PTR [rax+0x0]
  411dd0:	mov    rax,QWORD PTR [rbx+0x8]
  411dd4:	lea    rcx,[rax+0x1]
  411dd8:	call   0x409ce0
  411ddd:	test   rax,rax
  411de0:	mov    rdi,rax
  411de3:	mov    QWORD PTR [rbx],rax
  411de6:	je     0x411ef0
  411dec:	mov    rsi,QWORD PTR [rbx+0x8]
  411df0:	test   rsi,rsi
  411df3:	jne    0x411e0f
  411df5:	jmp    0x411ed0
  411dfa:	nop    WORD PTR [rax+rax*1+0x0]
  411e00:	movsxd r10,eax
  411e03:	add    rdi,r10
  411e06:	sub    rsi,r10
  411e09:	je     0x411ed0
  411e0f:	mov    ecx,DWORD PTR [rbx+0x18]
  411e12:	mov    r8d,esi
  411e15:	mov    rdx,rdi
  411e18:	call   0x421d00
  411e1d:	test   eax,eax
  411e1f:	jg     0x411e00
  411e21:	mov    rsi,QWORD PTR [rip+0x271a4]        # 0x438fcc
  411e28:	call   rsi
  411e2a:	mov    eax,DWORD PTR [rax]
  411e2c:	lea    rdx,[rip+0x16a35]        # 0x428868
  411e33:	lea    rcx,[rip+0x16a33]        # 0x42886d
  411e3a:	mov    r8,rbp
  411e3d:	mov    DWORD PTR [rbx+0x20],eax
  411e40:	call   0x4087f0
  411e45:	mov    rcx,QWORD PTR [rbx]
  411e48:	call   0x421e50
  411e4d:	mov    eax,DWORD PTR [rbx+0x20]
  411e50:	test   eax,eax
  411e52:	je     0x411eda
  411e58:	mov    ecx,DWORD PTR [rbx+0x18]
  411e5b:	cmp    ecx,0xffffffff
  411e5e:	je     0x411e6c
  411e60:	call   0x421ce8
  411e65:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411e6c:	call   rsi
  411e6e:	mov    edx,DWORD PTR [rbx+0x20]
  411e71:	mov    DWORD PTR [rax],edx
  411e73:	mov    rax,0xffffffffffffffff
  411e7a:	mov    QWORD PTR [rbx],0xffffffffffffffff
  411e81:	add    rsp,0x68
  411e85:	pop    rbx
  411e86:	pop    rsi
  411e87:	pop    rdi
  411e88:	pop    rbp
  411e89:	ret    
  411e8a:	nop    WORD PTR [rax+rax*1+0x0]
  411e90:	call   QWORD PTR [rip+0x27136]        # 0x438fcc
  411e96:	mov    eax,DWORD PTR [rax]
  411e98:	mov    ecx,DWORD PTR [rbx+0x18]
  411e9b:	mov    DWORD PTR [rbx+0x20],eax
  411e9e:	call   0x421ce8
  411ea3:	jmp    0x411d99
  411ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  411eb0:	call   QWORD PTR [rip+0x27116]        # 0x438fcc
  411eb6:	mov    edx,DWORD PTR [rax]
  411eb8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411ebf:	mov    DWORD PTR [rbx+0x20],edx
  411ec2:	jmp    0x411d9c
  411ec7:	nop    WORD PTR [rax+rax*1+0x0]
  411ed0:	mov    BYTE PTR [rdi],0x0
  411ed3:	mov    DWORD PTR [rbx+0x20],0x0
  411eda:	mov    rax,QWORD PTR [rbx]
  411edd:	add    rsp,0x68
  411ee1:	pop    rbx
  411ee2:	pop    rsi
  411ee3:	pop    rdi
  411ee4:	pop    rbp
  411ee5:	ret    
  411ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ef0:	mov    DWORD PTR [rbx+0x20],0xc
  411ef7:	mov    rsi,QWORD PTR [rip+0x270ce]        # 0x438fcc
  411efe:	jmp    0x411e58
  411f03:	nop    DWORD PTR [rax]
  411f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f10:	push   rsi
  411f11:	push   rbx
  411f12:	sub    rsp,0x28
  411f16:	mov    rsi,QWORD PTR [rip+0x270af]        # 0x438fcc
  411f1d:	mov    rbx,rcx
  411f20:	call   rsi
  411f22:	mov    DWORD PTR [rax],0x0
  411f28:	test   BYTE PTR [rbx+0x24],0x2
  411f2c:	je     0x411f39
  411f2e:	mov    eax,DWORD PTR [rbx+0x28]
  411f31:	and    eax,0x3
  411f34:	cmp    eax,0x1
  411f37:	je     0x411f70
  411f39:	mov    rcx,QWORD PTR [rbx]
  411f3c:	call   0x421e50
  411f41:	call   rsi
  411f43:	mov    ecx,DWORD PTR [rbx+0x18]
  411f46:	mov    eax,DWORD PTR [rax]
  411f48:	cmp    ecx,0xffffffff
  411f4b:	mov    DWORD PTR [rbx+0x20],eax
  411f4e:	je     0x411f5f
  411f50:	call   0x421ce8
  411f55:	mov    eax,DWORD PTR [rbx+0x20]
  411f58:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411f5f:	add    rsp,0x28
  411f63:	pop    rbx
  411f64:	pop    rsi
  411f65:	ret    
  411f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f70:	mov    ecx,DWORD PTR [rbx+0x18]
  411f73:	xor    r8d,r8d
  411f76:	xor    edx,edx
  411f78:	call   0x41d2c0
  411f7d:	test   rax,rax
  411f80:	js     0x411f39
  411f82:	mov    ecx,DWORD PTR [rbx+0x18]
  411f85:	mov    r8d,DWORD PTR [rbx+0x8]
  411f89:	mov    rdx,QWORD PTR [rbx]
  411f8c:	call   0x421d18
  411f91:	jmp    0x411f39
  411f93:	nop    DWORD PTR [rax]
  411f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411fa0:	push   r15
  411fa2:	push   r14
  411fa4:	push   r13
  411fa6:	push   r12
  411fa8:	push   rbp
  411fa9:	push   rdi
  411faa:	push   rsi
  411fab:	push   rbx
  411fac:	sub    rsp,0x158
  411fb3:	mov    r13,rcx
  411fb6:	mov    r14d,r8d
  411fb9:	mov    rcx,rdx
  411fbc:	mov    eax,DWORD PTR [r13+0x10]
  411fc0:	mov    r8d,0x2
  411fc6:	mov    edx,0x3
  411fcb:	mov    QWORD PTR [rsp+0xa0],0x0
  411fd7:	mov    QWORD PTR [rsp+0xa8],0x0
  411fe3:	mov    DWORD PTR [rsp+0xb0],0x2
  411fee:	mov    DWORD PTR [rsp+0xb4],0x0
  411ff9:	mov    DWORD PTR [rsp+0x34],eax
  411ffd:	lea    rax,[rsp+0xe0]
  412005:	mov    r9,rax
  412008:	mov    QWORD PTR [rsp+0x38],rax
  41200d:	call   0x411cd0
  412012:	cmp    rax,0xffffffffffffffff
  412016:	mov    rbx,rax
  412019:	je     0x412186
  41201f:	mov    eax,DWORD PTR [r13+0x10]
  412023:	mov    esi,0x2
  412028:	mov    edx,eax
  41202a:	and    edx,0xfffffffb
  41202d:	test   r14d,r14d
  412030:	mov    DWORD PTR [r13+0x10],edx
  412034:	je     0x412519
  41203a:	test   eax,0x80000
  41203f:	mov    eax,0x1
  412044:	cmove  esi,eax
  412047:	lea    rax,[rsp+0x110]
  41204f:	mov    QWORD PTR [rsp+0x48],rax
  412054:	lea    rax,[rsp+0x111]
  41205c:	mov    QWORD PTR [rsp+0x50],rax
  412061:	lea    rax,[rsp+0xa0]
  412069:	mov    QWORD PTR [rsp+0x40],rax
  41206e:	lea    rax,[rsp+0x90]
  412076:	mov    QWORD PTR [rsp+0x58],rax
  41207b:	lea    rax,[rsp+0xc0]
  412083:	mov    QWORD PTR [rsp+0x60],rax
  412088:	lea    rax,[rsp+0x9c]
  412090:	mov    QWORD PTR [rsp+0x68],rax
  412095:	mov    rax,QWORD PTR [rip+0x22cc4]        # 0x434d60
  41209c:	mov    DWORD PTR [rsp+0xb0],esi
  4120a3:	test   rax,rax
  4120a6:	jne    0x4120b4
  4120a8:	jmp    0x41255d
  4120ad:	nop    DWORD PTR [rax]
  4120b0:	add    rbx,0x1
  4120b4:	movzx  ecx,BYTE PTR [rbx]
  4120b7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4120bb:	mov    rdx,rcx
  4120be:	jne    0x4120b0
  4120c0:	cmp    cl,0x7f
  4120c3:	ja     0x4121a0
  4120c9:	lea    rdi,[rip+0x1a1f0]        # 0x42c2c0
  4120d0:	movzx  eax,cl
  4120d3:	test   DWORD PTR [rdi+rax*4],0x180040
  4120da:	je     0x4121a0
  4120e0:	lea    rbp,[rbx+0x1]
  4120e4:	mov    edx,0xa
  4120e9:	mov    rcx,rbp
  4120ec:	call   0x421dc0
  4120f1:	test   rax,rax
  4120f4:	mov    r12,rax
  4120f7:	je     0x41256c
  4120fd:	mov    rcx,QWORD PTR [rip+0x22cdc]        # 0x434de0
  412104:	test   rcx,rcx
  412107:	je     0x412776
  41210d:	movzx  eax,BYTE PTR [rbx+0x1]
  412111:	cmp    BYTE PTR [rcx+rax*1],0x0
  412115:	je     0x41212e
  412117:	nop    WORD PTR [rax+rax*1+0x0]
  412120:	add    rbp,0x1
  412124:	movzx  eax,BYTE PTR [rbp+0x0]
  412128:	cmp    BYTE PTR [rcx+rax*1],0x0
  41212c:	jne    0x412120
  41212e:	mov    r8,QWORD PTR [rip+0x22c2b]        # 0x434d60
  412135:	test   r8,r8
  412138:	jne    0x412144
  41213a:	jmp    0x412785
  41213f:	nop
  412140:	add    rbp,0x1
  412144:	movzx  eax,BYTE PTR [rbp+0x0]
  412148:	cmp    BYTE PTR [r8+rax*1],0x0
  41214d:	jne    0x412140
  41214f:	cmp    rbp,r12
  412152:	ja     0x4124ec
  412158:	cmp    al,0x3a
  41215a:	je     0x4124b9
  412160:	cmp    al,0x3d
  412162:	je     0x4124b9
  412168:	movzx  eax,BYTE PTR [rbp-0x1]
  41216c:	cmp    al,0x7f
  41216e:	jbe    0x412546
  412174:	mov    rcx,QWORD PTR [rsp+0x38]
  412179:	call   0x411f10
  41217e:	mov    eax,DWORD PTR [rsp+0x34]
  412182:	mov    DWORD PTR [r13+0x10],eax
  412186:	add    rsp,0x158
  41218d:	pop    rbx
  41218e:	pop    rsi
  41218f:	pop    rdi
  412190:	pop    rbp
  412191:	pop    r12
  412193:	pop    r13
  412195:	pop    r14
  412197:	pop    r15
  412199:	ret    
  41219a:	nop    WORD PTR [rax+rax*1+0x0]
  4121a0:	cmp    dl,0x3c
  4121a3:	je     0x412270
  4121a9:	cmp    dl,0x5b
  4121ac:	je     0x4121d0
  4121ae:	cmp    dl,0x23
  4121b1:	jne    0x412174
  4121b3:	lea    rcx,[rbx+0x1]
  4121b7:	mov    edx,0xa
  4121bc:	call   0x421dc0
  4121c1:	mov    rbx,rax
  4121c4:	test   rbx,rbx
  4121c7:	jne    0x412095
  4121cd:	jmp    0x412174
  4121cf:	nop
  4121d0:	mov    rbp,QWORD PTR [r13+0x30]
  4121d4:	mov    rcx,rbp
  4121d7:	call   0x421d98
  4121dc:	lea    rcx,[rbx+0x1]
  4121e0:	mov    r8,rax
  4121e3:	mov    rdx,rbp
  4121e6:	mov    rdi,rax
  4121e9:	call   0x421d90
  4121ee:	test   eax,eax
  4121f0:	je     0x412524
  4121f6:	cmp    rdi,0x10
  4121fa:	ja     0x412174
  412200:	mov    rcx,QWORD PTR [rsp+0x50]
  412205:	mov    r8,rdi
  412208:	mov    rdx,rbp
  41220b:	mov    QWORD PTR [rsp+0x110],0x5b
  412217:	mov    QWORD PTR [rsp+0x118],0x0
  412223:	mov    QWORD PTR [rsp+0x120],0x0
  41222f:	call   0x421e08
  412234:	mov    rdx,QWORD PTR [rsp+0x48]
  412239:	mov    rcx,rbx
  41223c:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  412244:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  41224c:	call   0x421d70
  412251:	test   rax,rax
  412254:	je     0x412174
  41225a:	mov    edx,0xa
  41225f:	mov    rcx,rax
  412262:	call   0x421dc0
  412267:	mov    rbx,rax
  41226a:	jmp    0x4121c4
  41226f:	nop
  412270:	movzx  eax,BYTE PTR [rbx+0x1]
  412274:	cmp    al,0x7f
  412276:	ja     0x412480
  41227c:	lea    rdi,[rip+0x1a03d]        # 0x42c2c0
  412283:	movzx  edx,al
  412286:	test   DWORD PTR [rdi+rdx*4],0x180040
  41228d:	je     0x412480
  412293:	mov    eax,DWORD PTR [rip+0x11737]        # 0x4239d0
  412299:	mov    DWORD PTR [rsp+0x9c],eax
  4122a0:	lea    rax,[rbx+0x1]
  4122a4:	mov    QWORD PTR [rsp+0x70],rax
  4122a9:	mov    rax,QWORD PTR [rip+0x22b30]        # 0x434de0
  4122b0:	test   rax,rax
  4122b3:	je     0x412849
  4122b9:	movzx  edx,BYTE PTR [rbx+0x1]
  4122bd:	mov    r15,QWORD PTR [rsp+0x70]
  4122c2:	cmp    BYTE PTR [rax+rdx*1],0x0
  4122c6:	je     0x4122de
  4122c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4122d0:	add    r15,0x1
  4122d4:	movzx  edx,BYTE PTR [r15]
  4122d8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4122dc:	jne    0x4122d0
  4122de:	mov    DWORD PTR [rsp+0xc0],0x1
  4122e9:	movzx  edx,BYTE PTR [r15]
  4122ed:	cmp    dl,0x20
  4122f0:	je     0x4126e6
  4122f6:	jle    0x412606
  4122fc:	cmp    dl,0x2f
  4122ff:	je     0x41273e
  412305:	cmp    dl,0x3e
  412308:	mov    rbp,r15
  41230b:	jne    0x41260f
  412311:	mov    BYTE PTR [r15],0x0
  412315:	mov    rcx,QWORD PTR [rsp+0x70]
  41231a:	lea    r12,[rbp+0x1]
  41231e:	mov    eax,DWORD PTR [rsp+0x9c]
  412325:	mov    DWORD PTR [rsp+0x80],eax
  41232c:	call   0x421d98
  412331:	lea    rcx,[rax+0x4]
  412335:	mov    rbx,rax
  412338:	cmp    rcx,0x3f
  41233c:	ja     0x412797
  412342:	mov    rax,QWORD PTR [rsp+0x48]
  412347:	mov    rdx,QWORD PTR [rsp+0x70]
  41234c:	mov    r8,rbx
  41234f:	mov    BYTE PTR [rsp+0x110],0x3c
  412357:	mov    BYTE PTR [rsp+0x111],0x2f
  41235f:	lea    rcx,[rax+0x2]
  412363:	call   0x421e08
  412368:	lea    rcx,[rbx+0x3]
  41236c:	mov    rdx,QWORD PTR [rsp+0x48]
  412371:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  412379:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  412381:	mov    BYTE PTR [rbp+0x1],0x20
  412385:	mov    QWORD PTR [rsp+0x78],rcx
  41238a:	mov    rcx,r12
  41238d:	call   0x421d70
  412392:	mov    rdx,rax
  412395:	test   rdx,rdx
  412398:	je     0x412174
  41239e:	mov    rbx,QWORD PTR [rsp+0x78]
  4123a3:	add    rbx,rdx
  4123a6:	cmp    DWORD PTR [rsp+0x80],0x1
  4123ae:	je     0x4123f6
  4123b0:	mov    r8,QWORD PTR [rip+0x229a9]        # 0x434d60
  4123b7:	test   r8,r8
  4123ba:	je     0x41295c
  4123c0:	cmp    r12,rdx
  4123c3:	jb     0x4123eb
  4123c5:	mov    rcx,r12
  4123c8:	mov    QWORD PTR [rsp+0x78],r8
  4123cd:	call   0x421d98
  4123d2:	lea    rdx,[r12+rax*1]
  4123d6:	mov    r8,QWORD PTR [rsp+0x78]
  4123db:	cmp    r12,rdx
  4123de:	jb     0x4123eb
  4123e0:	jmp    0x4123f6
  4123e2:	sub    rdx,0x1
  4123e6:	cmp    r12,rdx
  4123e9:	jae    0x4123f6
  4123eb:	movzx  eax,BYTE PTR [rdx-0x1]
  4123ef:	cmp    BYTE PTR [r8+rax*1],0x0
  4123f4:	jne    0x4123e2
  4123f6:	test   rbx,rbx
  4123f9:	mov    BYTE PTR [rdx],0x0
  4123fc:	je     0x412174
  412402:	mov    r8,r12
  412405:	mov    edx,0x20
  41240a:	mov    rcx,r15
  41240d:	sub    r8,r15
  412410:	call   0x421df8
  412415:	cmp    DWORD PTR [rsp+0xc0],0x1
  41241d:	mov    eax,DWORD PTR [rsp+0x9c]
  412424:	jne    0x412758
  41242a:	test   eax,eax
  41242c:	jne    0x412758
  412432:	mov    BYTE PTR [rsp+0x92],0x0
  41243a:	add    rbp,0x2
  41243e:	lea    rax,[rbp-0x1]
  412442:	lea    r9,[r12+0x1]
  412447:	mov    QWORD PTR [rsp+0x78],rax
  41244c:	movzx  eax,BYTE PTR [r12]
  412451:	cmp    eax,0x25
  412454:	je     0x412900
  41245a:	cmp    eax,0x26
  41245d:	je     0x412874
  412463:	test   eax,eax
  412465:	je     0x412867
  41246b:	mov    r12,r9
  41246e:	mov    BYTE PTR [rbp-0x1],al
  412471:	add    rbp,0x1
  412475:	jmp    0x41243e
  412477:	nop    WORD PTR [rax+rax*1+0x0]
  412480:	cmp    al,0x2f
  412482:	je     0x4125a3
  412488:	cmp    al,0x3f
  41248a:	je     0x41262e
  412490:	cmp    al,0x21
  412492:	jne    0x412174
  412498:	lea    rdx,[rip+0x16118]        # 0x4285b7
  41249f:	mov    rcx,rbx
  4124a2:	call   0x421d70
  4124a7:	test   rax,rax
  4124aa:	je     0x412174
  4124b0:	lea    rbx,[rax+0x3]
  4124b4:	jmp    0x4121c4
  4124b9:	mov    rax,QWORD PTR [rip+0x228a0]        # 0x434d60
  4124c0:	lea    rdi,[rbp+0x1]
  4124c4:	test   rax,rax
  4124c7:	je     0x412858
  4124cd:	movzx  edx,BYTE PTR [rbp+0x1]
  4124d1:	cmp    BYTE PTR [rax+rdx*1],0x0
  4124d5:	jne    0x412580
  4124db:	cmp    r12,rdi
  4124de:	jb     0x4124ec
  4124e0:	cmp    BYTE PTR [r12-0x1],0x5c
  4124e6:	je     0x4125c3
  4124ec:	lea    rdi,[r12+0x1]
  4124f1:	mov    BYTE PTR [r12],0x0
  4124f6:	mov    rdx,QWORD PTR [rsp+0x40]
  4124fb:	mov    r8,rbx
  4124fe:	mov    DWORD PTR [rsp+0x20],0x1
  412506:	mov    r9d,r14d
  412509:	mov    rcx,r13
  41250c:	mov    rbx,rdi
  41250f:	call   0x410ea0
  412514:	jmp    0x4121c4
  412519:	mov    sil,0x4
  41251c:	mov    r14b,0x1
  41251f:	jmp    0x41203a
  412524:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  412529:	jne    0x4121f6
  41252f:	lea    rcx,[rbx+rdi*1+0x2]
  412534:	mov    edx,0xa
  412539:	call   0x421dc0
  41253e:	mov    rbx,rax
  412541:	jmp    0x4121c4
  412546:	test   DWORD PTR [rdi+rax*4],0xc01
  41254d:	je     0x412174
  412553:	cmp    BYTE PTR [r12-0x1],0x5c
  412559:	jne    0x4124ec
  41255b:	jmp    0x4125c3
  41255d:	mov    ecx,0xc
  412562:	call   0x4097f0
  412567:	jmp    0x4120b4
  41256c:	mov    rcx,rbp
  41256f:	call   0x421d98
  412574:	lea    rbx,[rbp+rax*1+0x0]
  412579:	jmp    0x4121c4
  41257e:	xchg   ax,ax
  412580:	add    rdi,0x1
  412584:	movzx  edx,BYTE PTR [rdi]
  412587:	cmp    BYTE PTR [rax+rdx*1],0x0
  41258b:	je     0x4124db
  412591:	add    rdi,0x1
  412595:	movzx  edx,BYTE PTR [rdi]
  412598:	cmp    BYTE PTR [rax+rdx*1],0x0
  41259c:	jne    0x412580
  41259e:	jmp    0x4124db
  4125a3:	lea    rcx,[rbx+0x2]
  4125a7:	mov    edx,0x3e
  4125ac:	call   0x421dc0
  4125b1:	test   rax,rax
  4125b4:	lea    rbx,[rax+0x1]
  4125b8:	jne    0x4121c4
  4125be:	jmp    0x412174
  4125c3:	movzx  eax,BYTE PTR [r12]
  4125c8:	lea    rdx,[r12-0x1]
  4125cd:	lea    rdi,[r12+0x1]
  4125d2:	cmp    al,0xa
  4125d4:	je     0x4125fe
  4125d6:	cmp    al,0x5c
  4125d8:	je     0x4126cb
  4125de:	test   al,al
  4125e0:	je     0x4126c4
  4125e6:	add    rdx,0x1
  4125ea:	mov    r12,rdi
  4125ed:	mov    BYTE PTR [rdx-0x1],al
  4125f0:	movzx  eax,BYTE PTR [r12]
  4125f5:	lea    rdi,[r12+0x1]
  4125fa:	cmp    al,0xa
  4125fc:	jne    0x4125d6
  4125fe:	mov    BYTE PTR [rdx],0x0
  412601:	jmp    0x4124f6
  412606:	cmp    dl,0x9
  412609:	je     0x4126e6
  41260f:	mov    edx,0x3e
  412614:	mov    rcx,r15
  412617:	call   0x421dc0
  41261c:	test   rax,rax
  41261f:	je     0x412174
  412625:	lea    rbx,[rax+0x1]
  412629:	jmp    0x4121c4
  41262e:	mov    rdi,QWORD PTR [rip+0x225ab]        # 0x434be0
  412635:	test   rdi,rdi
  412638:	je     0x41281b
  41263e:	mov    rcx,rdi
  412641:	call   0x421d98
  412646:	mov    r12,rax
  412649:	lea    r15,[rbx+0x2]
  41264d:	mov    rdx,rdi
  412650:	xor    ebp,ebp
  412652:	mov    rdi,rbx
  412655:	mov    r8,r12
  412658:	mov    rcx,r15
  41265b:	mov    ebx,ebp
  41265d:	call   0x421d90
  412662:	test   eax,eax
  412664:	jne    0x412682
  412666:	lea    rdx,[rdi+r12*1+0x2]
  41266b:	movzx  eax,BYTE PTR [rdx]
  41266e:	cmp    al,0x7f
  412670:	ja     0x4126ab
  412672:	lea    rcx,[rip+0x19c47]        # 0x42c2c0
  412679:	test   DWORD PTR [rcx+rax*4],0x3b0060
  412680:	je     0x4126ab
  412682:	cmp    rbp,0x1
  412686:	je     0x41260f
  412688:	mov    rdx,QWORD PTR [rip+0x22559]        # 0x434be8
  41268f:	mov    ebp,0x1
  412694:	mov    rcx,rdx
  412697:	mov    QWORD PTR [rsp+0x70],rdx
  41269c:	call   0x421d98
  4126a1:	mov    rdx,QWORD PTR [rsp+0x70]
  4126a6:	mov    r12,rax
  4126a9:	jmp    0x412655
  4126ab:	lea    rax,[rip+0x162ce]        # 0x428980
  4126b2:	movsxd r12,ebx
  4126b5:	mov    rcx,r13
  4126b8:	call   QWORD PTR [rax+r12*8]
  4126bc:	mov    rbx,rax
  4126bf:	jmp    0x4121c4
  4126c4:	xor    edi,edi
  4126c6:	jmp    0x4125fe
  4126cb:	cmp    BYTE PTR [r12+0x1],0xa
  4126d1:	jne    0x4125e6
  4126d7:	lea    rdi,[r12+0x2]
  4126dc:	mov    eax,0xa
  4126e1:	jmp    0x4125e6
  4126e6:	mov    rax,QWORD PTR [rip+0x22673]        # 0x434d60
  4126ed:	test   rax,rax
  4126f0:	je     0x412949
  4126f6:	cmp    BYTE PTR [rax+rdx*1],0x0
  4126fa:	mov    rcx,r15
  4126fd:	je     0x41270d
  4126ff:	nop
  412700:	add    rcx,0x1
  412704:	movzx  edx,BYTE PTR [rcx]
  412707:	cmp    BYTE PTR [rax+rdx*1],0x0
  41270b:	jne    0x412700
  41270d:	mov    r8,QWORD PTR [rsp+0x60]
  412712:	mov    rdx,QWORD PTR [rsp+0x68]
  412717:	call   0x40bcc0
  41271c:	test   rax,rax
  41271f:	mov    rbp,rax
  412722:	je     0x412174
  412728:	movzx  eax,BYTE PTR [rax]
  41272b:	cmp    al,0x3e
  41272d:	je     0x412311
  412733:	cmp    al,0x2f
  412735:	jne    0x412174
  41273b:	mov    r15,rbp
  41273e:	cmp    BYTE PTR [r15+0x1],0x3e
  412743:	jne    0x412174
  412749:	lea    rbx,[r15+0x2]
  41274d:	mov    BYTE PTR [r15],0x0
  412751:	mov    eax,DWORD PTR [rsp+0x9c]
  412758:	mov    r8,QWORD PTR [rsp+0x70]
  41275d:	mov    rdx,QWORD PTR [rsp+0x40]
  412762:	mov    r9d,r14d
  412765:	mov    DWORD PTR [rsp+0x20],eax
  412769:	mov    rcx,r13
  41276c:	call   0x410ea0
  412771:	jmp    0x4121c4
  412776:	mov    cl,0x1c
  412778:	call   0x4097f0
  41277d:	mov    rcx,rax
  412780:	jmp    0x41210d
  412785:	mov    ecx,0xc
  41278a:	call   0x4097f0
  41278f:	mov    r8,rax
  412792:	jmp    0x412144
  412797:	call   0x409ce0
  41279c:	mov    rdx,QWORD PTR [rsp+0x70]
  4127a1:	lea    rcx,[rax+0x2]
  4127a5:	mov    r8,rbx
  4127a8:	mov    BYTE PTR [rax],0x3c
  4127ab:	mov    BYTE PTR [rax+0x1],0x2f
  4127af:	mov    QWORD PTR [rsp+0x88],rax
  4127b7:	call   0x421e08
  4127bc:	mov    r11,QWORD PTR [rsp+0x88]
  4127c4:	lea    rax,[rbx+0x3]
  4127c8:	mov    rcx,r12
  4127cb:	mov    QWORD PTR [rsp+0x78],rax
  4127d0:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  4127d6:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  4127dc:	mov    rdx,r11
  4127df:	mov    BYTE PTR [rbp+0x1],0x20
  4127e3:	call   0x421d70
  4127e8:	mov    r11,QWORD PTR [rsp+0x88]
  4127f0:	cmp    r11,QWORD PTR [rsp+0x48]
  4127f5:	mov    rdx,rax
  4127f8:	je     0x412395
  4127fe:	mov    rcx,r11
  412801:	mov    QWORD PTR [rsp+0x88],rax
  412809:	call   0x421e50
  41280e:	mov    rdx,QWORD PTR [rsp+0x88]
  412816:	jmp    0x412395
  41281b:	lea    rax,[rip+0x16eb7]        # 0x4296d9
  412822:	mov    r12d,0x7
  412828:	lea    rdi,[rip+0x16eaa]        # 0x4296d9
  41282f:	mov    QWORD PTR [rip+0x223aa],rax        # 0x434be0
  412836:	lea    rax,[rip+0x16e8f]        # 0x4296cc
  41283d:	mov    QWORD PTR [rip+0x223a4],rax        # 0x434be8
  412844:	jmp    0x412649
  412849:	mov    ecx,0x1c
  41284e:	call   0x4097f0
  412853:	jmp    0x4122b9
  412858:	mov    ecx,0xc
  41285d:	call   0x4097f0
  412862:	jmp    0x4124cd
  412867:	mov    rax,QWORD PTR [rsp+0x78]
  41286c:	mov    BYTE PTR [rax],0x0
  41286f:	jmp    0x412751
  412874:	mov    QWORD PTR [rsp+0x110],r9
  41287c:	movzx  eax,BYTE PTR [r12+0x1]
  412882:	cmp    al,0x23
  412884:	je     0x412a1a
  41288a:	movzx  edx,al
  41288d:	cmp    edx,0x7f
  412890:	ja     0x4129a7
  412896:	test   DWORD PTR [rdi+rdx*4],0x30000
  41289d:	je     0x4129a7
  4128a3:	mov    rcx,r9
  4128a6:	cmp    al,0x58
  4128a8:	je     0x412990
  4128ae:	cmp    al,0x78
  4128b0:	je     0x412990
  4128b6:	cmp    al,0x30
  4128b8:	mov    r8d,0xa
  4128be:	je     0x412978
  4128c4:	mov    rdx,QWORD PTR [rsp+0x48]
  4128c9:	call   0x421d60
  4128ce:	cmp    eax,0x7f
  4128d1:	mov    r12,QWORD PTR [rsp+0x110]
  4128d9:	ja     0x412867
  4128db:	cmp    BYTE PTR [r12],0x3b
  4128e0:	jne    0x412867
  4128e2:	add    r12,0x1
  4128e6:	test   eax,eax
  4128e8:	mov    BYTE PTR [rbp-0x1],al
  4128eb:	jne    0x412471
  4128f1:	jmp    0x412751
  4128f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412900:	movzx  edx,BYTE PTR [r12+0x1]
  412906:	lea    r15,[r12+0x3]
  41290b:	mov    BYTE PTR [rsp+0x90],dl
  412912:	movzx  eax,BYTE PTR [r12+0x2]
  412918:	test   dl,dl
  41291a:	mov    BYTE PTR [rsp+0x91],al
  412921:	je     0x412867
  412927:	test   al,al
  412929:	je     0x412867
  41292f:	mov    rcx,QWORD PTR [rsp+0x58]
  412934:	mov    r8d,0x10
  41293a:	xor    edx,edx
  41293c:	mov    r12,r15
  41293f:	call   0x421d60
  412944:	jmp    0x41246e
  412949:	mov    ecx,0xc
  41294e:	call   0x4097f0
  412953:	movzx  edx,BYTE PTR [r15]
  412957:	jmp    0x4126f6
  41295c:	mov    ecx,0xc
  412961:	mov    QWORD PTR [rsp+0x78],rdx
  412966:	call   0x4097f0
  41296b:	mov    rdx,QWORD PTR [rsp+0x78]
  412970:	mov    r8,rax
  412973:	jmp    0x4123c0
  412978:	cmp    BYTE PTR [rcx+0x1],0x30
  41297c:	mov    r8d,0x10
  412982:	mov    eax,0xa
  412987:	cmovne r8d,eax
  41298b:	jmp    0x4128c4
  412990:	add    rcx,0x1
  412994:	mov    r8d,0x10
  41299a:	mov    QWORD PTR [rsp+0x110],rcx
  4129a2:	jmp    0x4128c4
  4129a7:	lea    r12,[rip+0x1605a]        # 0x428a08
  4129ae:	xor    r15d,r15d
  4129b1:	jmp    0x4129c5
  4129b3:	add    r15d,0x1
  4129b7:	add    r12,0x10
  4129bb:	cmp    r15d,0xc
  4129bf:	je     0x412867
  4129c5:	movzx  r10d,WORD PTR [r12]
  4129ca:	mov    rdx,QWORD PTR [r12-0x8]
  4129cf:	mov    rcx,r9
  4129d2:	mov    QWORD PTR [rsp+0x80],r9
  4129da:	mov    r8,r10
  4129dd:	mov    QWORD PTR [rsp+0x88],r10
  4129e5:	call   0x421d90
  4129ea:	test   eax,eax
  4129ec:	mov    r9,QWORD PTR [rsp+0x80]
  4129f4:	mov    r10,QWORD PTR [rsp+0x88]
  4129fc:	jne    0x4129b3
  4129fe:	movsxd rax,r15d
  412a01:	lea    rcx,[rip+0x15ff8]        # 0x428a00
  412a08:	lea    r12,[r9+r10*1]
  412a0c:	shl    rax,0x4
  412a10:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  412a15:	jmp    0x4128e6
  412a1a:	lea    rcx,[r12+0x2]
  412a1f:	mov    QWORD PTR [rsp+0x110],rcx
  412a27:	movzx  eax,BYTE PTR [r12+0x2]
  412a2d:	jmp    0x4128a6
  412a32:	nop    DWORD PTR [rax+0x0]
  412a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a40:	push   r15
  412a42:	push   r14
  412a44:	push   r13
  412a46:	push   r12
  412a48:	push   rbp
  412a49:	push   rdi
  412a4a:	push   rsi
  412a4b:	push   rbx
  412a4c:	sub    rsp,0x188
  412a53:	mov    rdx,QWORD PTR [rcx+0x58]
  412a57:	test   rdx,rdx
  412a5a:	je     0x412af9
  412a60:	mov    r15d,DWORD PTR [rcx+0x10]
  412a64:	mov    eax,r15d
  412a67:	and    eax,0xfffffffb
  412a6a:	cmp    QWORD PTR [rdx+0x8],0x0
  412a6f:	mov    DWORD PTR [rcx+0x10],eax
  412a72:	je     0x412c03
  412a78:	lea    rax,[rdx+0x10]
  412a7c:	xor    ebx,ebx
  412a7e:	xchg   ax,ax
  412a80:	add    rax,0x8
  412a84:	add    ebx,0x1
  412a87:	cmp    QWORD PTR [rax-0x8],0x0
  412a8c:	jne    0x412a80
  412a8e:	mov    rsi,rcx
  412a91:	mov    ebp,0xffffffff
  412a96:	lea    r12,[rsp+0x70]
  412a9b:	lea    r14,[rsp+0x30]
  412aa0:	mov    r13,QWORD PTR [rip+0x2674d]        # 0x4391f4
  412aa7:	jmp    0x412ade
  412aa9:	nop    DWORD PTR [rax+0x0]
  412ab0:	movsxd rax,ebx
  412ab3:	mov    edi,ebx
  412ab5:	shl    rax,0x3
  412ab9:	mov    r8,QWORD PTR [rdx+rax*1]
  412abd:	test   r8,r8
  412ac0:	je     0x412af5
  412ac2:	mov    r9,QWORD PTR [rsi+0x20]
  412ac6:	mov    edx,0x105
  412acb:	mov    rcx,r12
  412ace:	lea    ebx,[rdi+rbp*1]
  412ad1:	call   0x40e880
  412ad6:	test   al,al
  412ad8:	jne    0x412b10
  412ada:	mov    rdx,QWORD PTR [rsi+0x58]
  412ade:	cmp    ebx,0xffffffff
  412ae1:	jne    0x412ab0
  412ae3:	xor    eax,eax
  412ae5:	xor    edi,edi
  412ae7:	mov    ebp,0x1
  412aec:	mov    r8,QWORD PTR [rdx+rax*1]
  412af0:	test   r8,r8
  412af3:	jne    0x412ac2
  412af5:	mov    DWORD PTR [rsi+0x10],r15d
  412af9:	add    rsp,0x188
  412b00:	pop    rbx
  412b01:	pop    rsi
  412b02:	pop    rdi
  412b03:	pop    rbp
  412b04:	pop    r12
  412b06:	pop    r13
  412b08:	pop    r14
  412b0a:	pop    r15
  412b0c:	ret    
  412b0d:	nop    DWORD PTR [rax]
  412b10:	mov    rdx,r14
  412b13:	mov    rcx,r12
  412b16:	call   r13
  412b19:	test   eax,eax
  412b1b:	jne    0x412ada
  412b1d:	movzx  eax,WORD PTR [rsp+0x36]
  412b22:	and    ax,0xf000
  412b26:	cmp    ax,0x4000
  412b2a:	jne    0x412bb8
  412b30:	mov    r9,r12
  412b33:	mov    edx,DWORD PTR [r9]
  412b36:	add    r9,0x4
  412b3a:	lea    eax,[rdx-0x1010101]
  412b40:	not    edx
  412b42:	and    eax,edx
  412b44:	and    eax,0x80808080
  412b49:	je     0x412b33
  412b4b:	mov    edx,eax
  412b4d:	shr    edx,0x10
  412b50:	test   eax,0x8080
  412b55:	cmove  eax,edx
  412b58:	lea    rdx,[r9+0x2]
  412b5c:	cmove  r9,rdx
  412b60:	mov    rdx,QWORD PTR [rsi+0x38]
  412b64:	add    al,al
  412b66:	sbb    r9,0x3
  412b6a:	sub    r9,r12
  412b6d:	mov    rcx,rdx
  412b70:	mov    QWORD PTR [rsp+0x28],r9
  412b75:	mov    QWORD PTR [rsp+0x20],rdx
  412b7a:	call   0x421d98
  412b7f:	mov    r9,QWORD PTR [rsp+0x28]
  412b84:	lea    r8,[rax+0x1]
  412b88:	mov    rdx,QWORD PTR [rsp+0x20]
  412b8d:	lea    rax,[r9+r8*1+0x1]
  412b92:	cmp    rax,0x104
  412b98:	ja     0x412ada
  412b9e:	add    r9,r12
  412ba1:	cmp    BYTE PTR [r9-0x1],0x5c
  412ba6:	mov    rcx,r9
  412ba9:	je     0x412bb3
  412bab:	add    rcx,0x1
  412baf:	mov    BYTE PTR [r9],0x5c
  412bb3:	call   0x421e08
  412bb8:	mov    r8d,ebp
  412bbb:	mov    rdx,r12
  412bbe:	mov    rcx,rsi
  412bc1:	call   0x411fa0
  412bc6:	cmp    ebp,0xffffffff
  412bc9:	jne    0x412ada
  412bcf:	movzx  eax,WORD PTR [rsi+0xaa]
  412bd6:	add    rax,0x1
  412bda:	lea    rdx,[rax+rax*2]
  412bde:	lea    rax,[rax+rdx*4]
  412be2:	mov    rdx,QWORD PTR [rsi+0x78]
  412be6:	lea    rax,[rdx+rax*8]
  412bea:	mov    eax,DWORD PTR [rax+0x10]
  412bed:	shr    eax,0x5
  412bf0:	and    eax,0x1
  412bf3:	mov    eax,0x1
  412bf8:	cmovne ebx,edi
  412bfb:	cmovne ebp,eax
  412bfe:	jmp    0x412ada
  412c03:	xor    ebx,ebx
  412c05:	jmp    0x412a8e
  412c0a:	nop    WORD PTR [rax+rax*1+0x0]
  412c10:	push   rdi
  412c11:	push   rsi
  412c12:	push   rbx
  412c13:	sub    rsp,0x20
  412c17:	mov    rbx,rcx
  412c1a:	mov    rdi,rdx
  412c1d:	call   0x40b020
  412c22:	test   eax,eax
  412c24:	mov    esi,eax
  412c26:	jne    0x412c40
  412c28:	mov    QWORD PTR [rbx+0x28],rdi
  412c2c:	mov    rcx,rbx
  412c2f:	call   0x412a40
  412c34:	mov    eax,esi
  412c36:	add    rsp,0x20
  412c3a:	pop    rbx
  412c3b:	pop    rsi
  412c3c:	pop    rdi
  412c3d:	ret    
  412c3e:	xchg   ax,ax
  412c40:	mov    esi,0xffffffff
  412c45:	jmp    0x412c34
  412c47:	nop    WORD PTR [rax+rax*1+0x0]
  412c50:	push   rsi
  412c51:	push   rbx
  412c52:	sub    rsp,0x68
  412c56:	cmp    rcx,0xf
  412c5a:	jbe    0x412c62
  412c5c:	test   BYTE PTR [rdx+0x10],0x28
  412c60:	je     0x412c70
  412c62:	add    rsp,0x68
  412c66:	pop    rbx
  412c67:	pop    rsi
  412c68:	ret    
  412c69:	nop    DWORD PTR [rax+0x0]
  412c70:	mov    rsi,rdx
  412c73:	mov    rbx,rcx
  412c76:	lea    rdx,[rsp+0x20]
  412c7b:	mov    rcx,QWORD PTR [rsi+0x18]
  412c7f:	call   QWORD PTR [rip+0x2656f]        # 0x4391f4
  412c85:	test   eax,eax
  412c87:	je     0x412ca3
  412c89:	test   BYTE PTR [rbx+0x10],0x4
  412c8d:	je     0x412c62
  412c8f:	mov    rcx,QWORD PTR [rbx+0x28]
  412c93:	mov    r8,QWORD PTR [rsi+0x18]
  412c97:	lea    rdx,[rip+0x15a32]        # 0x4286d0
  412c9e:	call   0x408860
  412ca3:	movzx  eax,WORD PTR [rsp+0x26]
  412ca8:	and    ax,0xf000
  412cac:	cmp    ax,0x8000
  412cb0:	je     0x412cd0
  412cb2:	test   BYTE PTR [rbx+0x10],0x4
  412cb6:	je     0x412c62
  412cb8:	call   QWORD PTR [rip+0x2630e]        # 0x438fcc
  412cbe:	mov    DWORD PTR [rax],0x16
  412cc4:	jmp    0x412c8f
  412cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cd0:	mov    rdx,QWORD PTR [rsi+0x18]
  412cd4:	xor    r8d,r8d
  412cd7:	mov    rcx,rbx
  412cda:	call   0x411fa0
  412cdf:	jmp    0x412c62
  412ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  412ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cf0:	push   r12
  412cf2:	push   rbp
  412cf3:	push   rdi
  412cf4:	push   rsi
  412cf5:	push   rbx
  412cf6:	sub    rsp,0x50
  412cfa:	mov    r8d,0x2
  412d00:	mov    edx,0x1
  412d05:	mov    ebp,DWORD PTR [rip+0x10cc5]        # 0x4239d0
  412d0b:	lea    rsi,[rsp+0x20]
  412d10:	mov    rbx,rcx
  412d13:	mov    r9,rsi
  412d16:	call   0x411cd0
  412d1b:	cmp    rax,0xffffffffffffffff
  412d1f:	mov    rdi,rax
  412d22:	je     0x412d90
  412d24:	mov    rcx,rbx
  412d27:	mov    DWORD PTR [rip+0x10c9f],0x0        # 0x4239d0
  412d31:	call   0x421d98
  412d36:	mov    rdx,rbx
  412d39:	mov    r8,rax
  412d3c:	mov    rcx,rdi
  412d3f:	call   0x40d130
  412d44:	test   rax,rax
  412d47:	mov    rbx,rax
  412d4a:	je     0x412d70
  412d4c:	mov    rcx,rsi
  412d4f:	call   0x411f10
  412d54:	mov    DWORD PTR [rip+0x10c76],ebp        # 0x4239d0
  412d5a:	mov    rax,rbx
  412d5d:	add    rsp,0x50
  412d61:	pop    rbx
  412d62:	pop    rsi
  412d63:	pop    rdi
  412d64:	pop    rbp
  412d65:	pop    r12
  412d67:	ret    
  412d68:	nop    DWORD PTR [rax+rax*1+0x0]
  412d70:	mov    rdi,QWORD PTR [rip+0x26255]        # 0x438fcc
  412d77:	call   rdi
  412d79:	mov    r12d,DWORD PTR [rax]
  412d7c:	mov    rcx,rsi
  412d7f:	call   0x411f10
  412d84:	call   rdi
  412d86:	mov    DWORD PTR [rax],r12d
  412d89:	jmp    0x412d54
  412d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d90:	xor    eax,eax
  412d92:	jmp    0x412d5d
  412d94:	xchg   ax,ax
  412d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412da0:	push   r13
  412da2:	push   r12
  412da4:	push   rbp
  412da5:	push   rdi
  412da6:	push   rsi
  412da7:	push   rbx
  412da8:	sub    rsp,0x28
  412dac:	cmp    rcx,0xf
  412db0:	jbe    0x412dbd
  412db2:	test   rdx,rdx
  412db5:	je     0x412dbd
  412db7:	test   BYTE PTR [rdx+0x10],0x8
  412dbb:	je     0x412dd0
  412dbd:	add    rsp,0x28
  412dc1:	pop    rbx
  412dc2:	pop    rsi
  412dc3:	pop    rdi
  412dc4:	pop    rbp
  412dc5:	pop    r12
  412dc7:	pop    r13
  412dc9:	ret    
  412dca:	nop    WORD PTR [rax+rax*1+0x0]
  412dd0:	mov    rsi,rcx
  412dd3:	mov    rcx,QWORD PTR [rdx+0x18]
  412dd7:	mov    rbx,rdx
  412dda:	call   0x40c150
  412ddf:	cmp    rax,0xffffffffffffffff
  412de3:	mov    rdi,rax
  412de6:	je     0x412e10
  412de8:	test   BYTE PTR [rbx+0x10],0x40
  412dec:	jne    0x412e00
  412dee:	mov    DWORD PTR [rbx+0x18],edi
  412df1:	add    rsp,0x28
  412df5:	pop    rbx
  412df6:	pop    rsi
  412df7:	pop    rdi
  412df8:	pop    rbp
  412df9:	pop    r12
  412dfb:	pop    r13
  412dfd:	ret    
  412dfe:	xchg   ax,ax
  412e00:	mov    rcx,QWORD PTR [rbx+0x18]
  412e04:	call   0x421e50
  412e09:	and    DWORD PTR [rbx+0x10],0xffffffbf
  412e0d:	jmp    0x412dee
  412e0f:	nop
  412e10:	mov    r13,QWORD PTR [rbx+0x18]
  412e14:	mov    r12,QWORD PTR [rsi+0x28]
  412e18:	mov    rbp,QWORD PTR [rip+0x10d69]        # 0x423b88
  412e1f:	call   QWORD PTR [rip+0x26157]        # 0x438f7c
  412e25:	lea    rcx,[rax+0x60]
  412e29:	mov    r9,r13
  412e2c:	mov    r8,r12
  412e2f:	mov    rdx,rbp
  412e32:	call   0x407ea0
  412e37:	test   BYTE PTR [rsi+0x10],0x4
  412e3b:	je     0x412de8
  412e3d:	mov    edx,0x1
  412e42:	mov    rcx,rsi
  412e45:	call   QWORD PTR [rsi+0x98]
  412e4b:	jmp    0x412de8
  412e4d:	nop    DWORD PTR [rax]
  412e50:	push   rbx
  412e51:	sub    rsp,0x20
  412e55:	mov    rbx,rdx
  412e58:	call   0x412da0
  412e5d:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  412e61:	je     0x412e6e
  412e63:	xor    ecx,ecx
  412e65:	call   QWORD PTR [rip+0x261e9]        # 0x439054
  412e6b:	add    DWORD PTR [rbx+0x18],eax
  412e6e:	add    rsp,0x20
  412e72:	pop    rbx
  412e73:	ret    
  412e74:	xchg   ax,ax
  412e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e80:	push   r12
  412e82:	push   rbp
  412e83:	push   rdi
  412e84:	push   rsi
  412e85:	push   rbx
  412e86:	sub    rsp,0x30
  412e8a:	test   rcx,rcx
  412e8d:	mov    rdi,rcx
  412e90:	je     0x41322e
  412e96:	mov    rax,QWORD PTR [rip+0x21ec3]        # 0x434d60
  412e9d:	test   rax,rax
  412ea0:	je     0x413256
  412ea6:	movzx  ecx,BYTE PTR [rdi]
  412ea9:	mov    rbp,rdi
  412eac:	cmp    BYTE PTR [rax+rcx*1],0x0
  412eb0:	mov    rdx,rcx
  412eb3:	je     0x412ec6
  412eb5:	add    rbp,0x1
  412eb9:	movzx  ecx,BYTE PTR [rbp+0x0]
  412ebd:	cmp    BYTE PTR [rax+rcx*1],0x0
  412ec1:	mov    rdx,rcx
  412ec4:	jne    0x412eb5
  412ec6:	test   dl,dl
  412ec8:	je     0x41322e
  412ece:	mov    rsi,rbp
  412ed1:	mov    r12d,0x2
  412ed7:	nop    WORD PTR [rax+rax*1+0x0]
  412ee0:	mov    rax,QWORD PTR [rip+0x21e79]        # 0x434d60
  412ee7:	add    r12d,0x1
  412eeb:	lea    rbx,[rsi+0x1]
  412eef:	test   rax,rax
  412ef2:	je     0x413197
  412ef8:	movzx  edx,BYTE PTR [rsi+0x1]
  412efc:	test   dl,dl
  412efe:	je     0x413208
  412f04:	cmp    BYTE PTR [rax+rdx*1],0x0
  412f08:	mov    rcx,rax
  412f0b:	je     0x412f16
  412f0d:	jmp    0x412f2d
  412f0f:	nop
  412f10:	cmp    BYTE PTR [rax+rdx*1],0x0
  412f14:	jne    0x412f21
  412f16:	add    rbx,0x1
  412f1a:	movzx  edx,BYTE PTR [rbx]
  412f1d:	test   dl,dl
  412f1f:	jne    0x412f10
  412f21:	test   rcx,rcx
  412f24:	je     0x4131c0
  412f2a:	mov    rax,rcx
  412f2d:	movzx  edx,BYTE PTR [rbx]
  412f30:	movzx  ecx,dl
  412f33:	cmp    BYTE PTR [rax+rcx*1],0x0
  412f37:	je     0x413187
  412f3d:	mov    rsi,rbx
  412f40:	add    rsi,0x1
  412f44:	movzx  ecx,BYTE PTR [rsi]
  412f47:	cmp    BYTE PTR [rax+rcx*1],0x0
  412f4b:	mov    rdx,rcx
  412f4e:	jne    0x412f40
  412f50:	test   dl,dl
  412f52:	jne    0x412ee0
  412f54:	sub    rsi,rbp
  412f57:	movsxd r12,r12d
  412f5a:	lea    rcx,[rsi+r12*8+0x10]
  412f5f:	call   0x409ce0
  412f64:	test   rax,rax
  412f67:	mov    rbp,rax
  412f6a:	je     0x413265
  412f70:	lea    rbx,[rax+r12*8]
  412f74:	lea    rsi,[rsp+0x2f]
  412f79:	mov    QWORD PTR [rax+0x8],rbx
  412f7d:	xor    eax,eax
  412f7f:	nop
  412f80:	lea    edx,[rax+0x1]
  412f83:	mov    DWORD PTR [rbp+0x0],edx
  412f86:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  412f8b:	movzx  r8d,BYTE PTR [rdi]
  412f8f:	cmp    r8b,0x7f
  412f93:	ja     0x412fad
  412f95:	lea    rdx,[rip+0x19324]        # 0x42c2c0
  412f9c:	movzx  eax,r8b
  412fa0:	test   DWORD PTR [rdx+rax*4],0xc01
  412fa7:	jne    0x41304d
  412fad:	cmp    r8b,0x22
  412fb1:	je     0x4130a0
  412fb7:	cmp    r8b,0x27
  412fbb:	je     0x412fe0
  412fbd:	test   r8b,r8b
  412fc0:	je     0x413080
  412fc6:	mov    BYTE PTR [rbx],r8b
  412fc9:	movzx  r8d,BYTE PTR [rdi+0x1]
  412fce:	add    rbx,0x1
  412fd2:	add    rdi,0x1
  412fd6:	cmp    r8b,0x7f
  412fda:	ja     0x412fad
  412fdc:	jmp    0x412f95
  412fde:	xchg   ax,ax
  412fe0:	movzx  r8d,BYTE PTR [rdi+0x1]
  412fe5:	lea    rax,[rdi+0x1]
  412fe9:	cmp    r8b,0x27
  412fed:	lea    rdi,[rax+0x1]
  412ff1:	je     0x41301e
  412ff3:	cmp    r8b,0x5c
  412ff7:	je     0x413120
  412ffd:	test   r8b,r8b
  413000:	je     0x4131d0
  413006:	mov    BYTE PTR [rbx],r8b
  413009:	movzx  r8d,BYTE PTR [rdi]
  41300d:	mov    rax,rdi
  413010:	add    rbx,0x1
  413014:	lea    rdi,[rax+0x1]
  413018:	cmp    r8b,0x27
  41301c:	jne    0x412ff3
  41301e:	test   rdi,rdi
  413021:	je     0x4131d0
  413027:	movzx  r8d,BYTE PTR [rdi]
  41302b:	cmp    r8b,0x7f
  41302f:	ja     0x412f8f
  413035:	lea    rdx,[rip+0x19284]        # 0x42c2c0
  41303c:	movzx  eax,r8b
  413040:	test   DWORD PTR [rdx+rax*4],0xc01
  413047:	je     0x412f8f
  41304d:	mov    rax,QWORD PTR [rip+0x21d0c]        # 0x434d60
  413054:	lea    r12,[rdi+0x1]
  413058:	test   rax,rax
  41305b:	je     0x413247
  413061:	movzx  edx,BYTE PTR [rdi+0x1]
  413065:	mov    rdi,r12
  413068:	cmp    BYTE PTR [rax+rdx*1],0x0
  41306c:	je     0x413080
  41306e:	xchg   ax,ax
  413070:	add    rdi,0x1
  413074:	movzx  edx,BYTE PTR [rdi]
  413077:	cmp    BYTE PTR [rax+rdx*1],0x0
  41307b:	jne    0x413070
  41307d:	nop    DWORD PTR [rax]
  413080:	mov    BYTE PTR [rbx],0x0
  413083:	cmp    BYTE PTR [rdi],0x0
  413086:	lea    rdx,[rbx+0x1]
  41308a:	mov    eax,DWORD PTR [rbp+0x0]
  41308d:	je     0x4131f1
  413093:	mov    rbx,rdx
  413096:	jmp    0x412f80
  41309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4130a0:	add    rdi,0x1
  4130a4:	movzx  r8d,BYTE PTR [rdi]
  4130a8:	lea    r12,[rdi+0x1]
  4130ac:	cmp    r8b,0x22
  4130b0:	mov    BYTE PTR [rsp+0x2f],r8b
  4130b5:	je     0x4130d2
  4130b7:	cmp    r8b,0x5c
  4130bb:	je     0x4130f2
  4130bd:	test   r8b,r8b
  4130c0:	je     0x4131d0
  4130c6:	mov    BYTE PTR [rbx],r8b
  4130c9:	mov    rdi,r12
  4130cc:	add    rbx,0x1
  4130d0:	jmp    0x4130a4
  4130d2:	test   r12,r12
  4130d5:	mov    rdi,r12
  4130d8:	je     0x4131d0
  4130de:	movzx  r8d,BYTE PTR [r12]
  4130e3:	cmp    r8b,0x7f
  4130e7:	ja     0x412f8f
  4130ed:	jmp    0x413035
  4130f2:	mov    r8d,0x7f
  4130f8:	mov    rcx,r12
  4130fb:	mov    rdx,rsi
  4130fe:	call   0x40cd00
  413103:	movzx  r8d,BYTE PTR [rsp+0x2f]
  413109:	mov    eax,eax
  41310b:	add    r12,rax
  41310e:	mov    rdi,r12
  413111:	cmp    r8b,0x7f
  413115:	jne    0x4130c6
  413117:	jmp    0x4130a4
  413119:	nop    DWORD PTR [rax+0x0]
  413120:	movzx  edx,BYTE PTR [rax+0x1]
  413124:	cmp    dl,0xd
  413127:	je     0x413167
  413129:	ja     0x413150
  41312b:	test   dl,dl
  41312d:	je     0x4131d0
  413133:	cmp    dl,0xa
  413136:	jne    0x413006
  41313c:	movzx  r8d,BYTE PTR [rax+0x2]
  413141:	add    rax,0x2
  413145:	jmp    0x412fe9
  41314a:	nop    WORD PTR [rax+rax*1+0x0]
  413150:	cmp    dl,0x27
  413153:	je     0x41317f
  413155:	cmp    dl,0x5c
  413158:	jne    0x413006
  41315e:	lea    rdi,[rax+0x2]
  413162:	jmp    0x413006
  413167:	movzx  r8d,BYTE PTR [rax+0x2]
  41316c:	cmp    r8b,0xa
  413170:	je     0x413220
  413176:	add    rax,0x2
  41317a:	jmp    0x412fe9
  41317f:	mov    r8d,0x27
  413185:	jmp    0x41315e
  413187:	test   dl,dl
  413189:	mov    rsi,rbx
  41318c:	jne    0x412ee0
  413192:	jmp    0x412f54
  413197:	mov    ecx,0xc
  41319c:	call   0x4097f0
  4131a1:	movzx  edx,BYTE PTR [rsi+0x1]
  4131a5:	mov    rcx,QWORD PTR [rip+0x21bb4]        # 0x434d60
  4131ac:	test   dl,dl
  4131ae:	jne    0x412f10
  4131b4:	jmp    0x412f21
  4131b9:	nop    DWORD PTR [rax+0x0]
  4131c0:	mov    ecx,0xc
  4131c5:	call   0x4097f0
  4131ca:	jmp    0x412f2d
  4131cf:	nop
  4131d0:	mov    rcx,rbp
  4131d3:	call   0x421e50
  4131d8:	call   QWORD PTR [rip+0x25dee]        # 0x438fcc
  4131de:	mov    DWORD PTR [rax],0x16
  4131e4:	xor    eax,eax
  4131e6:	add    rsp,0x30
  4131ea:	pop    rbx
  4131eb:	pop    rsi
  4131ec:	pop    rdi
  4131ed:	pop    rbp
  4131ee:	pop    r12
  4131f0:	ret    
  4131f1:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  4131fa:	mov    rax,rbp
  4131fd:	add    rsp,0x30
  413201:	pop    rbx
  413202:	pop    rsi
  413203:	pop    rdi
  413204:	pop    rbp
  413205:	pop    r12
  413207:	ret    
  413208:	cmp    BYTE PTR [rax],0x0
  41320b:	jne    0x412f3d
  413211:	mov    rsi,rbx
  413214:	jmp    0x412f54
  413219:	nop    DWORD PTR [rax+0x0]
  413220:	movzx  r8d,BYTE PTR [rax+0x3]
  413225:	add    rax,0x3
  413229:	jmp    0x412fe9
  41322e:	call   QWORD PTR [rip+0x25d98]        # 0x438fcc
  413234:	mov    DWORD PTR [rax],0x2
  41323a:	xor    eax,eax
  41323c:	add    rsp,0x30
  413240:	pop    rbx
  413241:	pop    rsi
  413242:	pop    rdi
  413243:	pop    rbp
  413244:	pop    r12
  413246:	ret    
  413247:	mov    ecx,0xc
  41324c:	call   0x4097f0
  413251:	jmp    0x413061
  413256:	mov    ecx,0xc
  41325b:	call   0x4097f0
  413260:	jmp    0x412ea6
  413265:	call   QWORD PTR [rip+0x25d61]        # 0x438fcc
  41326b:	mov    DWORD PTR [rax],0xc
  413271:	xor    eax,eax
  413273:	jmp    0x41323c
  413275:	nop
  413276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413280:	push   r15
  413282:	push   r14
  413284:	push   r13
  413286:	push   r12
  413288:	push   rbp
  413289:	push   rdi
  41328a:	push   rsi
  41328b:	push   rbx
  41328c:	sub    rsp,0xd8
  413293:	test   BYTE PTR [rcx+0x11],0x1
  413297:	jne    0x4132b0
  413299:	add    rsp,0xd8
  4132a0:	pop    rbx
  4132a1:	pop    rsi
  4132a2:	pop    rdi
  4132a3:	pop    rbp
  4132a4:	pop    r12
  4132a6:	pop    r13
  4132a8:	pop    r14
  4132aa:	pop    r15
  4132ac:	ret    
  4132ad:	nop    DWORD PTR [rax]
  4132b0:	mov    rdi,rcx
  4132b3:	mov    rcx,QWORD PTR [rcx+0x30]
  4132b7:	mov    ebp,edx
  4132b9:	call   0x421e30
  4132be:	test   rax,rax
  4132c1:	je     0x413330
  4132c3:	mov    rcx,rax
  4132c6:	call   0x412e80
  4132cb:	test   rax,rax
  4132ce:	mov    rbx,rax
  4132d1:	je     0x413330
  4132d3:	mov    r13,QWORD PTR [rdi+0x8]
  4132d7:	mov    QWORD PTR [rdi+0x8],rax
  4132db:	mov    eax,DWORD PTR [rax]
  4132dd:	mov    esi,DWORD PTR [rdi+0x10]
  4132e0:	mov    r12d,DWORD PTR [rdi+0x4]
  4132e4:	mov    DWORD PTR [rdi+0x14],0x1
  4132eb:	mov    QWORD PTR [rdi+0x18],0x0
  4132f3:	add    eax,0x1
  4132f6:	mov    DWORD PTR [rdi+0x4],eax
  4132f9:	mov    eax,esi
  4132fb:	and    eax,0xfffffffb
  4132fe:	cmp    ebp,0x1
  413301:	mov    DWORD PTR [rdi+0x10],eax
  413304:	je     0x413460
  41330a:	jb     0x413470
  413310:	cmp    ebp,0x2
  413313:	jne    0x41331d
  413315:	mov    rcx,rdi
  413318:	call   0x410db0
  41331d:	mov    rcx,rbx
  413320:	call   0x421e50
  413325:	mov    QWORD PTR [rdi+0x8],r13
  413329:	mov    DWORD PTR [rdi+0x4],r12d
  41332d:	mov    DWORD PTR [rdi+0x10],esi
  413330:	lea    r14,[rsp+0x50]
  413335:	mov    rax,QWORD PTR [rdi+0x78]
  413339:	mov    r9,QWORD PTR [rdi+0x30]
  41333d:	lea    r8,[rip+0x15531]        # 0x428875
  413344:	mov    edx,0x80
  413349:	mov    r15d,DWORD PTR [rdi+0xb4]
  413350:	mov    rcx,r14
  413353:	mov    r13d,0x7f
  413359:	mov    QWORD PTR [rsp+0x30],rax
  41335e:	call   0x408290
  413363:	movsxd r12,eax
  413366:	lea    esi,[r15-0x1]
  41336a:	mov    rbx,QWORD PTR [rsp+0x30]
  41336f:	add    r12,r14
  413372:	mov    eax,r12d
  413375:	sub    eax,r14d
  413378:	sub    r13,rax
  41337b:	lea    rax,[rsp+0x30]
  413380:	test   r15d,r15d
  413383:	mov    QWORD PTR [rsp+0x28],rax
  413388:	jg     0x4133a1
  41338a:	jmp    0x4133f0
  41338c:	nop    DWORD PTR [rax+0x0]
  413390:	sub    esi,0x1
  413393:	add    rbx,0x68
  413397:	cmp    esi,0xffffffff
  41339a:	mov    QWORD PTR [rsp+0x30],rbx
  41339f:	je     0x4133f0
  4133a1:	test   BYTE PTR [rbx+0x11],0x1
  4133a5:	jne    0x413390
  4133a7:	cmp    WORD PTR [rbx+0x8],0x8000
  4133ad:	jne    0x413390
  4133af:	mov    r15,QWORD PTR [rbx+0x48]
  4133b3:	mov    rcx,r15
  4133b6:	call   0x421d98
  4133bb:	lea    r8,[rax+0x1]
  4133bf:	cmp    r13,r8
  4133c2:	jb     0x413390
  4133c4:	mov    rdx,r15
  4133c7:	mov    rcx,r12
  4133ca:	call   0x421e08
  4133cf:	mov    rcx,QWORD PTR [rsp+0x28]
  4133d4:	mov    r9d,ebp
  4133d7:	mov    r8,rdi
  4133da:	mov    rdx,r14
  4133dd:	call   0x409b70
  4133e2:	mov    rbx,QWORD PTR [rsp+0x30]
  4133e7:	jmp    0x413390
  4133e9:	nop    DWORD PTR [rax+0x0]
  4133f0:	movzx  eax,WORD PTR [rdi+0xaa]
  4133f7:	test   ax,0x7fff
  4133fb:	je     0x413299
  413401:	add    rax,0x1
  413405:	lea    rdx,[rax+rax*2]
  413409:	lea    rdx,[rax+rdx*4]
  41340d:	mov    rax,QWORD PTR [rdi+0x78]
  413411:	lea    rax,[rax+rdx*8]
  413415:	mov    rbx,QWORD PTR [rax+0x48]
  413419:	mov    QWORD PTR [rsp+0x30],rax
  41341e:	test   rbx,rbx
  413421:	je     0x413299
  413427:	mov    rcx,rbx
  41342a:	call   0x421d98
  41342f:	lea    r8,[rax+0x1]
  413433:	cmp    r13,r8
  413436:	jb     0x413299
  41343c:	mov    rdx,rbx
  41343f:	mov    rcx,r12
  413442:	call   0x421e08
  413447:	lea    rcx,[rsp+0x30]
  41344c:	mov    r9d,ebp
  41344f:	mov    r8,rdi
  413452:	mov    rdx,r14
  413455:	call   0x409b70
  41345a:	jmp    0x413299
  41345f:	nop
  413460:	mov    rcx,rdi
  413463:	call   0x410cb0
  413468:	jmp    0x41331d
  41346d:	nop    DWORD PTR [rax]
  413470:	mov    rcx,rdi
  413473:	call   0x410cb0
  413478:	mov    DWORD PTR [rdi+0x14],0x1
  41347f:	mov    QWORD PTR [rdi+0x18],0x0
  413487:	jmp    0x413315
  41348c:	nop    DWORD PTR [rax+0x0]
  413490:	push   r15
  413492:	push   r14
  413494:	push   r13
  413496:	push   r12
  413498:	push   rbp
  413499:	push   rdi
  41349a:	push   rsi
  41349b:	push   rbx
  41349c:	sub    rsp,0x68
  4134a0:	mov    ebp,edx
  4134a2:	mov    rdx,QWORD PTR [r8]
  4134a5:	mov    rbx,rcx
  4134a8:	mov    rdi,r8
  4134ab:	call   0x40b020
  4134b0:	test   eax,eax
  4134b2:	mov    esi,eax
  4134b4:	jne    0x413ba9
  4134ba:	mov    eax,DWORD PTR [rbx+0x10]
  4134bd:	test   al,0x40
  4134bf:	jne    0x413640
  4134c5:	or     eax,0x40
  4134c8:	cmp    DWORD PTR [rbx],0x21fff
  4134ce:	mov    DWORD PTR [rbx+0x4],ebp
  4134d1:	mov    QWORD PTR [rbx+0x8],rdi
  4134d5:	mov    DWORD PTR [rbx+0x10],eax
  4134d8:	jg     0x4135d4
  4134de:	mov    rcx,rbx
  4134e1:	call   0x410cb0
  4134e6:	test   eax,eax
  4134e8:	jne    0x4135c1
  4134ee:	movzx  eax,WORD PTR [rbx+0xaa]
  4134f5:	test   ax,0x7fff
  4134f9:	jne    0x4135f0
  4134ff:	or     DWORD PTR [rbx+0x10],0x80000
  413506:	cmp    QWORD PTR [rbx+0x58],0x0
  41350b:	je     0x413910
  413511:	mov    edx,0x1
  413516:	mov    rcx,rbx
  413519:	call   0x413280
  41351e:	xchg   ax,ax
  413520:	mov    edx,0x2
  413525:	mov    rcx,rbx
  413528:	call   0x413280
  41352d:	mov    eax,DWORD PTR [rbx+0x10]
  413530:	and    eax,0xfff7ffff
  413535:	mov    DWORD PTR [rbx+0x10],eax
  413538:	test   ah,0x20
  41353b:	je     0x41355d
  41353d:	mov    rdx,QWORD PTR [rbx+0xa0]
  413544:	test   rdx,rdx
  413547:	je     0x41355d
  413549:	mov    ecx,eax
  41354b:	and    ecx,0x30000
  413551:	cmp    ecx,0x10000
  413557:	je     0x41391f
  41355d:	test   ah,0x8
  413560:	jne    0x413670
  413566:	mov    DWORD PTR [rbx+0x14],0x1
  41356d:	mov    QWORD PTR [rbx+0x18],0x0
  413575:	mov    rcx,rbx
  413578:	call   0x410db0
  41357d:	test   eax,eax
  41357f:	jne    0x413650
  413585:	movzx  eax,WORD PTR [rbx+0xaa]
  41358c:	test   ax,ax
  41358f:	je     0x4135b1
  413591:	cmp    ax,0x8000
  413595:	je     0x4135b1
  413597:	lea    rdx,[rax+rax*2]
  41359b:	lea    rax,[rax+rdx*4]
  41359f:	mov    rdx,QWORD PTR [rbx+0x78]
  4135a3:	lea    rax,[rdx+rax*8]
  4135a7:	test   BYTE PTR [rax+0x10],0x5
  4135ab:	jne    0x413c3b
  4135b1:	mov    esi,DWORD PTR [rbx+0x10]
  4135b4:	test   sil,0x4
  4135b8:	jne    0x413780
  4135be:	mov    esi,DWORD PTR [rbx+0x14]
  4135c1:	mov    eax,esi
  4135c3:	add    rsp,0x68
  4135c7:	pop    rbx
  4135c8:	pop    rsi
  4135c9:	pop    rdi
  4135ca:	pop    rbp
  4135cb:	pop    r12
  4135cd:	pop    r13
  4135cf:	pop    r14
  4135d1:	pop    r15
  4135d3:	ret    
  4135d4:	mov    rax,QWORD PTR [rbx+0xd8]
  4135db:	mov    QWORD PTR [rip+0x103e6],rax        # 0x4239c8
  4135e2:	jmp    0x4134de
  4135e7:	nop    WORD PTR [rax+rax*1+0x0]
  4135f0:	add    rax,0x1
  4135f4:	lea    rdx,[rax+rax*2]
  4135f8:	lea    rdx,[rax+rdx*4]
  4135fc:	mov    rax,QWORD PTR [rbx+0x78]
  413600:	lea    rsi,[rax+rdx*8]
  413604:	test   BYTE PTR [rsi+0x10],0x20
  413608:	jne    0x413660
  41360a:	or     DWORD PTR [rbx+0x10],0x80000
  413611:	cmp    QWORD PTR [rbx+0x58],0x0
  413616:	je     0x413910
  41361c:	mov    edx,0x1
  413621:	mov    rcx,rbx
  413624:	call   0x413280
  413629:	test   BYTE PTR [rsi+0x10],0x20
  41362d:	jne    0x413520
  413633:	mov    rcx,rbx
  413636:	call   0x412a40
  41363b:	jmp    0x413520
  413640:	mov    eax,DWORD PTR [rbx+0x14]
  413643:	test   eax,eax
  413645:	je     0x413566
  41364b:	jmp    0x413575
  413650:	mov    esi,DWORD PTR [rbx+0x4]
  413653:	jmp    0x4135c1
  413658:	nop    DWORD PTR [rax+rax*1+0x0]
  413660:	mov    eax,DWORD PTR [rbx+0x10]
  413663:	jmp    0x413538
  413668:	nop    DWORD PTR [rax+rax*1+0x0]
  413670:	lea    rcx,[rip+0x15202]        # 0x428879
  413677:	mov    QWORD PTR [rsp+0x40],0x0
  413680:	mov    QWORD PTR [rsp+0x48],0x0
  413689:	mov    DWORD PTR [rsp+0x50],0x4
  413691:	mov    DWORD PTR [rsp+0x54],0x0
  413699:	call   0x421e30
  41369e:	test   rax,rax
  4136a1:	jne    0x413566
  4136a7:	test   BYTE PTR [rbx+0x10],0x3
  4136ab:	je     0x413566
  4136b1:	mov    ecx,DWORD PTR [rbx+0x4]
  4136b4:	shl    rcx,0x3
  4136b8:	call   0x409ce0
  4136bd:	test   rax,rax
  4136c0:	mov    r12,rax
  4136c3:	je     0x413b0f
  4136c9:	mov    ecx,DWORD PTR [rbx+0x4]
  4136cc:	shl    rcx,0x3
  4136d0:	call   0x409ce0
  4136d5:	test   rax,rax
  4136d8:	mov    rbp,rax
  4136db:	je     0x413b07
  4136e1:	lea    r13,[rsp+0x40]
  4136e6:	mov    r8d,DWORD PTR [rbx+0x4]
  4136ea:	mov    DWORD PTR [rbx+0x14],0x1
  4136f1:	mov    QWORD PTR [rbx+0x18],0x0
  4136f9:	mov    eax,0x1
  4136fe:	xor    edi,edi
  413700:	lea    rcx,[r13+0x14]
  413704:	xor    esi,esi
  413706:	mov    QWORD PTR [rsp+0x38],rcx
  41370b:	cmp    r8d,eax
  41370e:	jbe    0x413739
  413710:	mov    rcx,QWORD PTR [rbx+0x8]
  413714:	mov    edx,eax
  413716:	mov    r14,QWORD PTR [rcx+rdx*8]
  41371a:	cmp    BYTE PTR [r14],0x2d
  41371e:	je     0x41396e
  413724:	add    eax,0x1
  413727:	mov    edx,esi
  413729:	add    esi,0x1
  41372c:	cmp    r8d,eax
  41372f:	mov    DWORD PTR [rbx+0x14],eax
  413732:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  413737:	ja     0x413710
  413739:	call   QWORD PTR [rip+0x2588d]        # 0x438fcc
  41373f:	mov    DWORD PTR [rax],0x0
  413745:	test   edi,edi
  413747:	jne    0x413b8d
  41374d:	test   esi,esi
  41374f:	je     0x413769
  413751:	mov    rax,QWORD PTR [rbx+0x8]
  413755:	mov    r8d,esi
  413758:	mov    rdx,rbp
  41375b:	shl    r8,0x3
  41375f:	lea    rcx,[rax+rdi*8+0x8]
  413764:	call   0x421e08
  413769:	mov    rcx,r12
  41376c:	call   0x421e50
  413771:	mov    rcx,rbp
  413774:	call   0x421e50
  413779:	jmp    0x413566
  41377e:	xchg   ax,ax
  413780:	mov    r9,QWORD PTR [rbx+0x78]
  413784:	mov    r10d,DWORD PTR [rbx+0xb4]
  41378b:	mov    rcx,r9
  41378e:	jmp    0x4137b8
  413790:	movzx  eax,WORD PTR [rcx+0x8]
  413794:	cmp    ax,0x8000
  413798:	je     0x413863
  41379e:	cmp    ax,WORD PTR [rcx]
  4137a1:	je     0x413863
  4137a7:	sub    r10d,0x1
  4137ab:	test   r10d,r10d
  4137ae:	jle    0x413931
  4137b4:	add    rcx,0x68
  4137b8:	mov    r11d,DWORD PTR [rcx+0x10]
  4137bc:	test   r11b,0x5
  4137c0:	je     0x413790
  4137c2:	mov    rdx,QWORD PTR [rcx+0x28]
  4137c6:	test   rdx,rdx
  4137c9:	jne    0x4137ea
  4137cb:	jmp    0x4137f4
  4137cd:	nop    DWORD PTR [rax]
  4137d0:	lea    r8,[rax+rax*2]
  4137d4:	add    rdx,0x4
  4137d8:	lea    rax,[rax+r8*4]
  4137dc:	lea    rax,[r9+rax*8]
  4137e0:	test   BYTE PTR [rax+0x10],0xf
  4137e4:	je     0x4138c0
  4137ea:	movsxd rax,DWORD PTR [rdx]
  4137ed:	cmp    eax,0x8000
  4137f2:	jne    0x4137d0
  4137f4:	mov    rdx,QWORD PTR [rcx+0x30]
  4137f8:	test   rdx,rdx
  4137fb:	je     0x413790
  4137fd:	nop    DWORD PTR [rax]
  413800:	movsxd rax,DWORD PTR [rdx]
  413803:	cmp    eax,0x8000
  413808:	je     0x413790
  41380a:	lea    r8,[rax+rax*2]
  41380e:	add    rdx,0x4
  413812:	lea    rax,[rax+r8*4]
  413816:	lea    rax,[r9+rax*8]
  41381a:	test   BYTE PTR [rax+0x10],0x5
  41381e:	je     0x413800
  413820:	mov    r12,QWORD PTR [rax+0x50]
  413824:	mov    rbp,QWORD PTR [rcx+0x50]
  413828:	mov    rdi,QWORD PTR [rbx+0x28]
  41382c:	mov    rsi,QWORD PTR [rip+0x102a5]        # 0x423ad8
  413833:	call   QWORD PTR [rip+0x25743]        # 0x438f7c
  413839:	lea    rcx,[rax+0x60]
  41383d:	mov    QWORD PTR [rsp+0x20],r12
  413842:	mov    r9,rbp
  413845:	mov    r8,rdi
  413848:	mov    rdx,rsi
  41384b:	call   0x407ea0
  413850:	mov    edx,0x1
  413855:	mov    rcx,rbx
  413858:	call   QWORD PTR [rbx+0x98]
  41385e:	jmp    0x4135be
  413863:	movzx  edi,WORD PTR [rcx+0xa]
  413867:	cmp    WORD PTR [rcx+0xe],di
  41386b:	jae    0x4137a7
  413871:	test   r11d,0x100000
  413878:	je     0x413884
  41387a:	and    r11d,0x3
  41387e:	jne    0x4137a7
  413884:	cmp    di,0x1
  413888:	jbe    0x4138e0
  41388a:	mov    r12,QWORD PTR [rcx+0x50]
  41388e:	mov    rbp,QWORD PTR [rbx+0x28]
  413892:	mov    rsi,QWORD PTR [rip+0x102f7]        # 0x423b90
  413899:	call   QWORD PTR [rip+0x256dd]        # 0x438f7c
  41389f:	lea    rcx,[rax+0x60]
  4138a3:	mov    DWORD PTR [rsp+0x20],edi
  4138a7:	mov    r9,r12
  4138aa:	mov    r8,rbp
  4138ad:	mov    rdx,rsi
  4138b0:	call   0x407ea0
  4138b5:	jmp    0x413850
  4138b7:	nop    WORD PTR [rax+rax*1+0x0]
  4138c0:	mov    r12,QWORD PTR [rax+0x50]
  4138c4:	mov    rbp,QWORD PTR [rcx+0x50]
  4138c8:	mov    rdi,QWORD PTR [rbx+0x28]
  4138cc:	mov    rsi,QWORD PTR [rip+0x10305]        # 0x423bd8
  4138d3:	jmp    0x413833
  4138d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138e0:	mov    rbp,QWORD PTR [rcx+0x50]
  4138e4:	mov    rdi,QWORD PTR [rbx+0x28]
  4138e8:	mov    rsi,QWORD PTR [rip+0x10241]        # 0x423b30
  4138ef:	call   QWORD PTR [rip+0x25687]        # 0x438f7c
  4138f5:	lea    rcx,[rax+0x60]
  4138f9:	mov    r9,rbp
  4138fc:	mov    r8,rdi
  4138ff:	mov    rdx,rsi
  413902:	call   0x407ea0
  413907:	jmp    0x413850
  41390c:	nop    DWORD PTR [rax+0x0]
  413910:	xor    edx,edx
  413912:	mov    rcx,rbx
  413915:	call   0x413280
  41391a:	jmp    0x41352d
  41391f:	and    eax,0xfffeffff
  413924:	mov    DWORD PTR [rbx+0x10],eax
  413927:	call   rdx
  413929:	mov    eax,DWORD PTR [rbx+0x10]
  41392c:	jmp    0x41355d
  413931:	test   esi,0x200
  413937:	je     0x4139ea
  41393d:	mov    esi,DWORD PTR [rbx+0x14]
  413940:	cmp    DWORD PTR [rbx+0x4],esi
  413943:	jbe    0x4135c1
  413949:	mov    rdi,QWORD PTR [rbx+0x28]
  41394d:	mov    rsi,QWORD PTR [rip+0x101ec]        # 0x423b40
  413954:	call   QWORD PTR [rip+0x25622]        # 0x438f7c
  41395a:	lea    rcx,[rax+0x60]
  41395e:	mov    r8,rdi
  413961:	mov    rdx,rsi
  413964:	call   0x407ea0
  413969:	jmp    0x413850
  41396e:	movzx  edx,BYTE PTR [r14+0x1]
  413973:	test   dl,dl
  413975:	je     0x413724
  41397b:	cmp    dl,0x2d
  41397e:	jne    0x413a70
  413984:	cmp    BYTE PTR [r14+0x2],0x0
  413989:	je     0x413c4a
  41398f:	lea    rdx,[r14+0x2]
  413993:	mov    r8,r13
  413996:	mov    rcx,rbx
  413999:	call   0x4106f0
  41399e:	test   eax,eax
  4139a0:	js     0x413b7c
  4139a6:	mov    r8d,DWORD PTR [rbx+0x14]
  4139aa:	mov    rcx,QWORD PTR [rbx+0x8]
  4139ae:	lea    r15d,[rdi+0x1]
  4139b2:	lea    eax,[r8+0x1]
  4139b6:	mov    rdx,r8
  4139b9:	mov    r8,QWORD PTR [rcx+r8*8]
  4139bd:	mov    ecx,edi
  4139bf:	mov    DWORD PTR [rbx+0x14],eax
  4139c2:	mov    QWORD PTR [r12+rcx*8],r8
  4139c6:	mov    rcx,QWORD PTR [rsp+0x40]
  4139cb:	mov    ecx,DWORD PTR [rcx+0x10]
  4139ce:	test   ch,0xf0
  4139d1:	jne    0x413a12
  4139d3:	cmp    DWORD PTR [rsp+0x54],0x1
  4139d8:	je     0x413b20
  4139de:	mov    r8d,DWORD PTR [rbx+0x4]
  4139e2:	mov    edi,r15d
  4139e5:	jmp    0x41370b
  4139ea:	and    esi,0x400
  4139f0:	je     0x4135be
  4139f6:	mov    esi,DWORD PTR [rbx+0x14]
  4139f9:	cmp    DWORD PTR [rbx+0x4],esi
  4139fc:	ja     0x4135c1
  413a02:	mov    rdi,QWORD PTR [rbx+0x28]
  413a06:	mov    rsi,QWORD PTR [rip+0x100a3]        # 0x423ab0
  413a0d:	jmp    0x413954
  413a12:	and    ecx,0x10000
  413a18:	mov    r8,QWORD PTR [rsp+0x48]
  413a1d:	mov    ecx,DWORD PTR [rsp+0x54]
  413a21:	je     0x413a9f
  413a23:	cmp    ecx,0x1
  413a26:	je     0x413aeb
  413a2c:	cmp    ecx,0x2
  413a2f:	jne    0x413ada
  413a35:	test   r8,r8
  413a38:	jne    0x4139de
  413a3a:	mov    r8d,DWORD PTR [rbx+0x4]
  413a3e:	cmp    eax,r8d
  413a41:	jae    0x413c27
  413a47:	mov    r9,QWORD PTR [rbx+0x8]
  413a4b:	mov    ecx,eax
  413a4d:	mov    rcx,QWORD PTR [r9+rcx*8]
  413a51:	cmp    BYTE PTR [rcx],0x2d
  413a54:	je     0x4139e2
  413a56:	lea    eax,[rdx+0x2]
  413a59:	mov    r10d,r15d
  413a5c:	lea    r15d,[rdi+0x2]
  413a60:	mov    DWORD PTR [rbx+0x14],eax
  413a63:	mov    QWORD PTR [r12+r10*8],rcx
  413a67:	jmp    0x4139e2
  413a6c:	nop    DWORD PTR [rax+0x0]
  413a70:	test   BYTE PTR [rbx+0x10],0x2
  413a74:	jne    0x413a8a
  413a76:	lea    rdx,[r14+0x1]
  413a7a:	mov    r8,r13
  413a7d:	mov    rcx,rbx
  413a80:	call   0x4106f0
  413a85:	jmp    0x41399e
  413a8a:	mov    r9,QWORD PTR [rsp+0x38]
  413a8f:	mov    r8,r13
  413a92:	mov    rcx,rbx
  413a95:	call   0x4094a0
  413a9a:	jmp    0x41399e
  413a9f:	cmp    ecx,0x1
  413aa2:	je     0x413afb
  413aa4:	cmp    ecx,0x2
  413aa7:	jne    0x413ada
  413aa9:	test   r8,r8
  413aac:	jne    0x4139de
  413ab2:	mov    r8d,DWORD PTR [rbx+0x4]
  413ab6:	cmp    eax,r8d
  413ab9:	jae    0x413ada
  413abb:	mov    rcx,QWORD PTR [rbx+0x8]
  413abf:	add    edx,0x2
  413ac2:	mov    r10d,r15d
  413ac5:	mov    DWORD PTR [rbx+0x14],edx
  413ac8:	add    edi,0x2
  413acb:	mov    rax,QWORD PTR [rcx+rax*8]
  413acf:	mov    QWORD PTR [r12+r10*8],rax
  413ad3:	mov    eax,edx
  413ad5:	jmp    0x41370b
  413ada:	call   QWORD PTR [rip+0x254ec]        # 0x438fcc
  413ae0:	mov    DWORD PTR [rax],0x5
  413ae6:	jmp    0x413769
  413aeb:	cmp    BYTE PTR [r14+0x2],0x0
  413af0:	je     0x413a3a
  413af6:	jmp    0x4139de
  413afb:	cmp    BYTE PTR [r14+0x2],0x0
  413b00:	je     0x413ab2
  413b02:	jmp    0x4139de
  413b07:	mov    rcx,r12
  413b0a:	call   0x421e50
  413b0f:	call   QWORD PTR [rip+0x254b7]        # 0x438fcc
  413b15:	mov    DWORD PTR [rax],0xc
  413b1b:	jmp    0x413566
  413b20:	movzx  eax,BYTE PTR [r14+0x2]
  413b25:	lea    r11,[r14+0x2]
  413b29:	lea    r14,[r13+0x14]
  413b2d:	test   al,al
  413b2f:	jne    0x413b62
  413b31:	jmp    0x413c1f
  413b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b40:	mov    rax,QWORD PTR [rsp+0x40]
  413b45:	mov    r11,QWORD PTR [rsp+0x30]
  413b4a:	mov    eax,DWORD PTR [rax+0x10]
  413b4d:	test   ah,0xf0
  413b50:	jne    0x413bb5
  413b52:	add    r11,0x1
  413b56:	movzx  eax,BYTE PTR [r11]
  413b5a:	test   al,al
  413b5c:	je     0x413c1f
  413b62:	movzx  edx,al
  413b65:	mov    r9,r14
  413b68:	mov    r8,r13
  413b6b:	mov    rcx,rbx
  413b6e:	mov    QWORD PTR [rsp+0x30],r11
  413b73:	call   0x4094a0
  413b78:	test   eax,eax
  413b7a:	jns    0x413b40
  413b7c:	call   QWORD PTR [rip+0x2544a]        # 0x438fcc
  413b82:	mov    DWORD PTR [rax],0x16
  413b88:	jmp    0x413769
  413b8d:	mov    rax,QWORD PTR [rbx+0x8]
  413b91:	mov    r8d,edi
  413b94:	mov    rdx,r12
  413b97:	shl    r8,0x3
  413b9b:	lea    rcx,[rax+0x8]
  413b9f:	call   0x421e08
  413ba4:	jmp    0x41374d
  413ba9:	mov    rcx,QWORD PTR [rip+0xfec8]        # 0x423a78
  413bb0:	call   0x408310
  413bb5:	test   eax,0x10000
  413bba:	je     0x413bf3
  413bbc:	cmp    BYTE PTR [r11+0x1],0x0
  413bc1:	jne    0x413c1f
  413bc3:	mov    ecx,DWORD PTR [rbx+0x14]
  413bc6:	mov    rdx,QWORD PTR [rbx+0x8]
  413bca:	mov    rdx,QWORD PTR [rdx+rcx*8]
  413bce:	mov    rax,rcx
  413bd1:	cmp    BYTE PTR [rdx],0x2d
  413bd4:	je     0x4139de
  413bda:	add    eax,0x1
  413bdd:	mov    r10d,r15d
  413be0:	lea    r15d,[rdi+0x2]
  413be4:	mov    DWORD PTR [rbx+0x14],eax
  413be7:	mov    QWORD PTR [r12+r10*8],rdx
  413beb:	mov    eax,DWORD PTR [rbx+0x14]
  413bee:	jmp    0x4139de
  413bf3:	cmp    BYTE PTR [r11+0x1],0x0
  413bf8:	jne    0x413c1f
  413bfa:	mov    eax,DWORD PTR [rbx+0x14]
  413bfd:	cmp    eax,DWORD PTR [rbx+0x4]
  413c00:	jae    0x413b7c
  413c06:	mov    rdx,QWORD PTR [rbx+0x8]
  413c0a:	lea    ecx,[rax+0x1]
  413c0d:	mov    r10d,r15d
  413c10:	lea    r15d,[rdi+0x2]
  413c14:	mov    DWORD PTR [rbx+0x14],ecx
  413c17:	mov    rax,QWORD PTR [rdx+rax*8]
  413c1b:	mov    QWORD PTR [r12+r10*8],rax
  413c1f:	mov    eax,DWORD PTR [rbx+0x14]
  413c22:	jmp    0x4139de
  413c27:	call   QWORD PTR [rip+0x2539f]        # 0x438fcc
  413c2d:	mov    edi,r15d
  413c30:	mov    DWORD PTR [rax],0x0
  413c36:	jmp    0x413745
  413c3b:	mov    rcx,rbx
  413c3e:	call   0x4101e0
  413c43:	xor    ecx,ecx
  413c45:	call   0x4082e0
  413c4a:	lea    ecx,[rax+0x1]
  413c4d:	mov    edx,edi
  413c4f:	add    edi,0x1
  413c52:	mov    r9d,esi
  413c55:	cmp    ecx,r8d
  413c58:	mov    DWORD PTR [rbx+0x14],ecx
  413c5b:	mov    QWORD PTR [r12+rdx*8],r14
  413c5f:	mov    edx,ecx
  413c61:	jae    0x413745
  413c67:	mov    r10,QWORD PTR [rbx+0x8]
  413c6b:	mov    r11d,edx
  413c6e:	add    edx,0x1
  413c71:	mov    r11,QWORD PTR [r10+r11*8]
  413c75:	mov    r10d,esi
  413c78:	add    esi,0x1
  413c7b:	cmp    edx,r8d
  413c7e:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  413c83:	jne    0x413c67
  413c85:	lea    esi,[rdx+r9*1-0x1]
  413c8a:	lea    edx,[rdx+rcx*1-0x1]
  413c8e:	sub    edx,eax
  413c90:	sub    esi,eax
  413c92:	mov    DWORD PTR [rbx+0x14],edx
  413c95:	jmp    0x413745
  413c9a:	nop    WORD PTR [rax+rax*1+0x0]
  413ca0:	push   rsi
  413ca1:	push   rbx
  413ca2:	sub    rsp,0x38
  413ca6:	mov    rbx,rcx
  413ca9:	lea    rcx,[rcx+0x10]
  413cad:	mov    esi,edx
  413caf:	xor    edx,edx
  413cb1:	mov    QWORD PTR [rsp+0x28],0x0
  413cba:	call   0x4116c0
  413cbf:	test   esi,esi
  413cc1:	mov    ecx,DWORD PTR [rbx+0x10]
  413cc4:	je     0x413cd2
  413cc6:	test   ch,0x40
  413cc9:	je     0x413cd2
  413ccb:	add    rsp,0x38
  413ccf:	pop    rbx
  413cd0:	pop    rsi
  413cd1:	ret    
  413cd2:	test   ch,0x10
  413cd5:	lea    rdx,[rsp+0x28]
  413cda:	jne    0x413d40
  413cdc:	call   0x408cf0
  413ce1:	mov    r8,QWORD PTR [rsp+0x28]
  413ce6:	mov    edx,esi
  413ce8:	mov    rcx,rbx
  413ceb:	call   0x40b8d0
  413cf0:	mov    rcx,QWORD PTR [rip+0x20ed1]        # 0x434bc8
  413cf7:	call   0x421e80
  413cfc:	mov    rcx,QWORD PTR [rip+0x20ec5]        # 0x434bc8
  413d03:	call   0x421e88
  413d08:	test   eax,eax
  413d0a:	je     0x413ccb
  413d0c:	call   QWORD PTR [rip+0x2526a]        # 0x438f7c
  413d12:	add    rax,0x60
  413d16:	cmp    QWORD PTR [rip+0x20eab],rax        # 0x434bc8
  413d1d:	mov    r8,QWORD PTR [rip+0xfe94]        # 0x423bb8
  413d24:	cmove  r8,QWORD PTR [rip+0xfe94]        # 0x423bc0
  413d2c:	mov    rcx,QWORD PTR [rbx+0x28]
  413d30:	mov    rdx,QWORD PTR [rip+0xfe91]        # 0x423bc8
  413d37:	call   0x408860
  413d3c:	nop    DWORD PTR [rax+0x0]
  413d40:	call   0x408bb0
  413d45:	jmp    0x413ce1
  413d47:	nop    WORD PTR [rax+rax*1+0x0]
  413d50:	push   r15
  413d52:	push   r14
  413d54:	push   r13
  413d56:	push   r12
  413d58:	push   rbp
  413d59:	push   rdi
  413d5a:	push   rsi
  413d5b:	push   rbx
  413d5c:	sub    rsp,0x28
  413d60:	mov    rbx,rcx
  413d63:	mov    esi,edx
  413d65:	mov    r12,r8
  413d68:	call   0x421d98
  413d6d:	cmp    rax,0xff
  413d73:	mov    rbp,rax
  413d76:	jbe    0x413e65
  413d7c:	test   sil,sil
  413d7f:	jne    0x413e65
  413d85:	mov    rcx,rbx
  413d88:	call   0x409a50
  413d8d:	mov    rdi,QWORD PTR [rip+0x25360]        # 0x4390f4
  413d94:	mov    r13,rax
  413d97:	mov    rsi,rax
  413d9a:	mov    r14,rsi
  413d9d:	nop    DWORD PTR [rax]
  413da0:	mov    edx,0xa
  413da5:	mov    rcx,r14
  413da8:	call   0x421dc0
  413dad:	test   rax,rax
  413db0:	mov    rbx,rax
  413db3:	je     0x413e40
  413db9:	sub    rax,rsi
  413dbc:	lea    r14,[rbx+0x1]
  413dc0:	cmp    rax,0x27
  413dc4:	jle    0x413da0
  413dc6:	movsx  ecx,BYTE PTR [rbx+0x1]
  413dca:	mov    r15d,ecx
  413dcd:	call   rdi
  413dcf:	test   eax,eax
  413dd1:	je     0x413da0
  413dd3:	cmp    r15b,0x9
  413dd7:	je     0x413da0
  413dd9:	cmp    r15b,0xa
  413ddd:	je     0x413e03
  413ddf:	cmp    r15b,0x20
  413de3:	jne    0x413e11
  413de5:	add    rbx,0x8
  413de9:	mov    rdx,r14
  413dec:	nop    DWORD PTR [rax+0x0]
  413df0:	add    rdx,0x1
  413df4:	cmp    BYTE PTR [rdx],0x20
  413df7:	jne    0x413e11
  413df9:	cmp    rdx,rbx
  413dfc:	jne    0x413df0
  413dfe:	mov    r14,rdx
  413e01:	jmp    0x413da0
  413e03:	add    r14,0x1
  413e07:	movzx  r15d,BYTE PTR [r14]
  413e0b:	cmp    r15b,0xa
  413e0f:	je     0x413e03
  413e11:	xor    edx,edx
  413e13:	mov    rcx,rsi
  413e16:	mov    BYTE PTR [r14],0x0
  413e1a:	mov    r8,r12
  413e1d:	sub    rsi,r14
  413e20:	call   0x40f9c0
  413e25:	add    rbp,rsi
  413e28:	je     0x413e4d
  413e2a:	cmp    rbp,0xff
  413e31:	mov    BYTE PTR [r14],r15b
  413e34:	mov    rsi,r14
  413e37:	ja     0x413d9a
  413e3d:	nop    DWORD PTR [rax]
  413e40:	mov    r8,r12
  413e43:	xor    edx,edx
  413e45:	mov    rcx,rsi
  413e48:	call   0x40f9c0
  413e4d:	mov    rcx,r13
  413e50:	add    rsp,0x28
  413e54:	pop    rbx
  413e55:	pop    rsi
  413e56:	pop    rdi
  413e57:	pop    rbp
  413e58:	pop    r12
  413e5a:	pop    r13
  413e5c:	pop    r14
  413e5e:	pop    r15
  413e60:	jmp    0x421e50
  413e65:	movzx  edx,sil
  413e69:	mov    r8,r12
  413e6c:	mov    rcx,rbx
  413e6f:	add    rsp,0x28
  413e73:	pop    rbx
  413e74:	pop    rsi
  413e75:	pop    rdi
  413e76:	pop    rbp
  413e77:	pop    r12
  413e79:	pop    r13
  413e7b:	pop    r14
  413e7d:	pop    r15
  413e7f:	jmp    0x40f9c0
  413e84:	xchg   ax,ax
  413e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e90:	push   rbp
  413e91:	push   rdi
  413e92:	push   rsi
  413e93:	push   rbx
  413e94:	sub    rsp,0x58
  413e98:	mov    BYTE PTR [rip+0x20d81],0x0        # 0x434c20
  413e9f:	mov    ebp,edx
  413ea1:	xor    edx,edx
  413ea3:	mov    rbx,rcx
  413ea6:	cmp    ebp,0x2750
  413eac:	lea    rcx,[rcx+0x10]
  413eb0:	je     0x413ef4
  413eb2:	call   0x4116c0
  413eb7:	test   ebp,ebp
  413eb9:	je     0x413ef9
  413ebb:	cmp    DWORD PTR [rbx],0x1dfff
  413ec1:	jle    0x414116
  413ec7:	cmp    QWORD PTR [rip+0x20cf9],0x0        # 0x434bc8
  413ecf:	mov    rcx,QWORD PTR [rbx+0xc0]
  413ed6:	je     0x4143be
  413edc:	test   rcx,rcx
  413edf:	mov    eax,DWORD PTR [rbx+0x10]
  413ee2:	je     0x414124
  413ee8:	test   eax,0x100000
  413eed:	je     0x413f2f
  413eef:	jmp    0x414124
  413ef4:	call   0x4116c0
  413ef9:	cmp    DWORD PTR [rbx],0x1dfff
  413eff:	jle    0x413f99
  413f05:	cmp    QWORD PTR [rip+0x20cbb],0x0        # 0x434bc8
  413f0d:	mov    rcx,QWORD PTR [rbx+0xb8]
  413f14:	je     0x414307
  413f1a:	test   rcx,rcx
  413f1d:	mov    eax,DWORD PTR [rbx+0x10]
  413f20:	je     0x413fa7
  413f26:	test   eax,0x100000
  413f2b:	jne    0x413fa7
  413f2d:	xor    ebp,ebp
  413f2f:	test   ah,0x20
  413f32:	je     0x4141ee
  413f38:	mov    r8,QWORD PTR [rip+0x20c89]        # 0x434bc8
  413f3f:	mov    edx,0x1
  413f44:	call   0x413d50
  413f49:	mov    rcx,QWORD PTR [rip+0x20c78]        # 0x434bc8
  413f50:	call   0x421e80
  413f55:	mov    rcx,QWORD PTR [rip+0x20c6c]        # 0x434bc8
  413f5c:	call   0x421e88
  413f61:	test   eax,eax
  413f63:	je     0x4141e7
  413f69:	call   QWORD PTR [rip+0x2500d]        # 0x438f7c
  413f6f:	add    rax,0x30
  413f73:	cmp    QWORD PTR [rip+0x20c4e],rax        # 0x434bc8
  413f7a:	mov    r8,QWORD PTR [rip+0xfc3f]        # 0x423bc0
  413f81:	cmove  r8,QWORD PTR [rip+0xfc2f]        # 0x423bb8
  413f89:	mov    rcx,QWORD PTR [rbx+0x28]
  413f8d:	mov    rdx,QWORD PTR [rip+0xfc34]        # 0x423bc8
  413f94:	call   0x408860
  413f99:	cmp    QWORD PTR [rip+0x20c27],0x0        # 0x434bc8
  413fa1:	je     0x414305
  413fa7:	mov    rcx,QWORD PTR [rip+0x20c1a]        # 0x434bc8
  413fae:	mov    rdx,QWORD PTR [rbx+0x60]
  413fb2:	xor    edi,edi
  413fb4:	mov    r8,QWORD PTR [rbx+0x28]
  413fb8:	call   0x407ea0
  413fbd:	mov    ecx,DWORD PTR [rbx+0x10]
  413fc0:	test   ch,0x10
  413fc3:	mov    QWORD PTR [rsp+0x30],0x0
  413fcc:	lea    rdx,[rsp+0x30]
  413fd1:	jne    0x4141ff
  413fd7:	call   0x408cf0
  413fdc:	lea    rdx,[rip+0x156fe]        # 0x4296e1
  413fe3:	lea    rcx,[rip+0x20c56]        # 0x434c40
  413fea:	mov    r8d,eax
  413fed:	mov    esi,eax
  413fef:	call   0x408880
  413ff4:	test   ebp,ebp
  413ff6:	jne    0x414002
  413ff8:	mov    rax,QWORD PTR [rbx+0x78]
  413ffc:	test   BYTE PTR [rax+0x12],0x20
  414000:	jne    0x414013
  414002:	mov    rdx,QWORD PTR [rip+0x20bbf]        # 0x434bc8
  414009:	mov    rcx,QWORD PTR [rsp+0x30]
  41400e:	call   0x421e60
  414013:	lea    eax,[rsi+0xf]
  414016:	mov    ecx,0x8
  41401b:	cdq    
  41401c:	idiv   ecx
  41401e:	neg    eax
  414020:	add    eax,0x4
  414023:	test   eax,eax
  414025:	jle    0x41402d
  414027:	mov    DWORD PTR [rip+0x20bc3],eax        # 0x434bf0
  41402d:	mov    r8,QWORD PTR [rsp+0x30]
  414032:	mov    edx,ebp
  414034:	mov    rcx,rbx
  414037:	call   0x40b8d0
  41403c:	mov    eax,DWORD PTR [rbx+0x10]
  41403f:	mov    edx,eax
  414041:	and    edx,0x3
  414044:	cmp    edx,0x1
  414047:	je     0x4142ea
  41404d:	jb     0x4142cf
  414053:	cmp    edx,0x3
  414056:	jne    0x41406e
  414058:	mov    rdx,QWORD PTR [rip+0x20b69]        # 0x434bc8
  41405f:	mov    rcx,QWORD PTR [rip+0xfbda]        # 0x423c40
  414066:	call   0x421e60
  41406b:	mov    eax,DWORD PTR [rbx+0x10]
  41406e:	test   al,0x20
  414070:	jne    0x414272
  414076:	test   ah,0x8
  414079:	jne    0x41425a
  41407f:	mov    rcx,QWORD PTR [rbx+0x68]
  414083:	test   rcx,rcx
  414086:	je     0x414094
  414088:	mov    rdx,QWORD PTR [rip+0x20b39]        # 0x434bc8
  41408f:	call   0x421e60
  414094:	test   ebp,ebp
  414096:	je     0x41428d
  41409c:	cmp    DWORD PTR [rbx],0x21fff
  4140a2:	jle    0x414232
  4140a8:	mov    rcx,QWORD PTR [rbx+0xe0]
  4140af:	test   rcx,rcx
  4140b2:	je     0x414232
  4140b8:	mov    rdx,QWORD PTR [rip+0x20b09]        # 0x434bc8
  4140bf:	call   0x421e60
  4140c4:	mov    rcx,QWORD PTR [rip+0x20afd]        # 0x434bc8
  4140cb:	mov    ebp,edi
  4140cd:	call   0x421e80
  4140d2:	mov    rcx,QWORD PTR [rip+0x20aef]        # 0x434bc8
  4140d9:	call   0x421e88
  4140de:	test   eax,eax
  4140e0:	je     0x413f49
  4140e6:	call   QWORD PTR [rip+0x24e90]        # 0x438f7c
  4140ec:	add    rax,0x60
  4140f0:	cmp    QWORD PTR [rip+0x20ad1],rax        # 0x434bc8
  4140f7:	mov    r8,QWORD PTR [rip+0xfaba]        # 0x423bb8
  4140fe:	cmove  r8,QWORD PTR [rip+0xfaba]        # 0x423bc0
  414106:	mov    rcx,QWORD PTR [rbx+0x28]
  41410a:	mov    rdx,QWORD PTR [rip+0xfab7]        # 0x423bc8
  414111:	call   0x408860
  414116:	cmp    QWORD PTR [rip+0x20aaa],0x0        # 0x434bc8
  41411e:	je     0x4143bc
  414124:	mov    rcx,QWORD PTR [rip+0x20a9d]        # 0x434bc8
  41412b:	mov    rdx,QWORD PTR [rbx+0x60]
  41412f:	mov    edi,ebp
  414131:	mov    r8,QWORD PTR [rbx+0x28]
  414135:	call   0x407ea0
  41413a:	mov    ecx,DWORD PTR [rbx+0x10]
  41413d:	test   ch,0x40
  414140:	je     0x413fc0
  414146:	cmp    DWORD PTR [rbx],0x25fff
  41414c:	jle    0x414330
  414152:	movsxd rax,DWORD PTR [rbx+0xb4]
  414159:	mov    r8,rax
  41415c:	imul   rax,rax,0x68
  414160:	add    rax,QWORD PTR [rbx+0x78]
  414164:	cmp    DWORD PTR [rax+0x14],0x3
  414168:	je     0x4141a3
  41416a:	mov    edx,DWORD PTR [rbx+0xb0]
  414170:	lea    r9d,[r8+0x1]
  414174:	cmp    r9d,edx
  414177:	jge    0x4144cf
  41417d:	sub    edx,0x2
  414180:	sub    edx,r8d
  414183:	add    rdx,0x1
  414187:	imul   rdx,rdx,0x68
  41418b:	add    rdx,rax
  41418e:	jmp    0x414199
  414190:	cmp    rax,rdx
  414193:	je     0x4144cf
  414199:	add    rax,0x68
  41419d:	cmp    DWORD PTR [rax+0x14],0x3
  4141a1:	jne    0x414190
  4141a3:	and    ecx,0x3
  4141a6:	cmp    ecx,0x2
  4141a9:	je     0x4144b3
  4141af:	cmp    ecx,0x3
  4141b2:	je     0x414481
  4141b8:	sub    ecx,0x1
  4141bb:	je     0x414481
  4141c1:	lea    r9,[rsp+0x30]
  4141c6:	mov    rdx,QWORD PTR [rax+0x50]
  4141ca:	mov    r8d,0x14
  4141d0:	mov    rcx,r9
  4141d3:	mov    QWORD PTR [rsp+0x28],r9
  4141d8:	call   0x421d88
  4141dd:	mov    r9,QWORD PTR [rsp+0x28]
  4141e2:	jmp    0x414360
  4141e7:	mov    ecx,ebp
  4141e9:	call   0x4082e0
  4141ee:	mov    rdx,QWORD PTR [rip+0x209d3]        # 0x434bc8
  4141f5:	call   0x421e60
  4141fa:	jmp    0x413f49
  4141ff:	call   0x408bb0
  414204:	lea    rdx,[rip+0x154d6]        # 0x4296e1
  41420b:	lea    rcx,[rip+0x20a2e]        # 0x434c40
  414212:	mov    r8d,eax
  414215:	mov    esi,eax
  414217:	call   0x408880
  41421c:	mov    rdx,QWORD PTR [rip+0x209a5]        # 0x434bc8
  414223:	mov    ecx,0xa
  414228:	call   0x421e68
  41422d:	jmp    0x414013
  414232:	mov    r8,QWORD PTR [rbx+0x80]
  414239:	test   r8,r8
  41423c:	je     0x4140c4
  414242:	mov    rdx,QWORD PTR [rip+0xfa67]        # 0x423cb0
  414249:	mov    rcx,QWORD PTR [rip+0x20978]        # 0x434bc8
  414250:	call   0x407ea0
  414255:	jmp    0x4140c4
  41425a:	mov    rdx,QWORD PTR [rip+0x20967]        # 0x434bc8
  414261:	mov    rcx,QWORD PTR [rip+0xfab0]        # 0x423d18
  414268:	call   0x421e60
  41426d:	jmp    0x41407f
  414272:	mov    rdx,QWORD PTR [rip+0x2094f]        # 0x434bc8
  414279:	mov    rcx,QWORD PTR [rip+0xfa18]        # 0x423c98
  414280:	call   0x421e60
  414285:	mov    eax,DWORD PTR [rbx+0x10]
  414288:	jmp    0x414076
  41428d:	mov    rcx,QWORD PTR [rbx+0x58]
  414291:	test   rcx,rcx
  414294:	jne    0x4143de
  41429a:	test   BYTE PTR [rbx+0x11],0x1
  41429e:	jne    0x41438d
  4142a4:	cmp    BYTE PTR [rip+0x20975],0x0        # 0x434c20
  4142ab:	jne    0x4143f6
  4142b1:	mov    rcx,QWORD PTR [rbx+0x70]
  4142b5:	test   rcx,rcx
  4142b8:	je     0x41409c
  4142be:	mov    rdx,QWORD PTR [rip+0x20903]        # 0x434bc8
  4142c5:	call   0x421e60
  4142ca:	jmp    0x41409c
  4142cf:	mov    rdx,QWORD PTR [rip+0x208f2]        # 0x434bc8
  4142d6:	mov    rcx,QWORD PTR [rip+0xf9c3]        # 0x423ca0
  4142dd:	call   0x421e60
  4142e2:	mov    eax,DWORD PTR [rbx+0x10]
  4142e5:	jmp    0x41406e
  4142ea:	mov    rdx,QWORD PTR [rip+0x208d7]        # 0x434bc8
  4142f1:	mov    rcx,QWORD PTR [rip+0xf970]        # 0x423c68
  4142f8:	call   0x421e60
  4142fd:	mov    eax,DWORD PTR [rbx+0x10]
  414300:	jmp    0x41406e
  414305:	xor    ecx,ecx
  414307:	cmp    BYTE PTR [rip+0x208e6],0x0        # 0x434bf4
  41430e:	mov    QWORD PTR [rsp+0x28],rcx
  414313:	jne    0x41437c
  414315:	call   QWORD PTR [rip+0x24c61]        # 0x438f7c
  41431b:	mov    rcx,QWORD PTR [rsp+0x28]
  414320:	add    rax,0x30
  414324:	mov    QWORD PTR [rip+0x2089d],rax        # 0x434bc8
  41432b:	jmp    0x413f1a
  414330:	and    ecx,0x3
  414333:	cmp    ecx,0x2
  414336:	je     0x41446b
  41433c:	cmp    ecx,0x3
  41433f:	je     0x414450
  414345:	sub    ecx,0x1
  414348:	je     0x414450
  41434e:	lea    r9,[rsp+0x30]
  414353:	mov    DWORD PTR [rsp+0x30],0x706c6568
  41435b:	mov    BYTE PTR [rsp+0x34],0x0
  414360:	mov    r8,QWORD PTR [rbx+0x28]
  414364:	mov    rdx,QWORD PTR [rip+0xf83d]        # 0x423ba8
  41436b:	mov    rcx,QWORD PTR [rip+0x20856]        # 0x434bc8
  414372:	call   0x407ea0
  414377:	jmp    0x413f49
  41437c:	call   QWORD PTR [rip+0x24bfa]        # 0x438f7c
  414382:	mov    rcx,QWORD PTR [rsp+0x28]
  414387:	add    rax,0x60
  41438b:	jmp    0x414324
  41438d:	mov    rdx,QWORD PTR [rip+0x20834]        # 0x434bc8
  414394:	mov    rcx,QWORD PTR [rip+0xf925]        # 0x423cc0
  41439b:	call   0x421e60
  4143a0:	mov    r8,QWORD PTR [rbx+0x30]
  4143a4:	mov    rdx,QWORD PTR [rip+0xf87d]        # 0x423c28
  4143ab:	mov    rcx,QWORD PTR [rip+0x20816]        # 0x434bc8
  4143b2:	call   0x407ea0
  4143b7:	jmp    0x4142a4
  4143bc:	xor    ecx,ecx
  4143be:	mov    QWORD PTR [rsp+0x28],rcx
  4143c3:	call   QWORD PTR [rip+0x24bb3]        # 0x438f7c
  4143c9:	add    rax,0x60
  4143cd:	mov    rcx,QWORD PTR [rsp+0x28]
  4143d2:	mov    QWORD PTR [rip+0x207ef],rax        # 0x434bc8
  4143d9:	jmp    0x413edc
  4143de:	mov    rdx,QWORD PTR [rbx+0x38]
  4143e2:	mov    r8,QWORD PTR [rbx+0x20]
  4143e6:	call   0x40eaf0
  4143eb:	test   BYTE PTR [rbx+0x11],0x1
  4143ef:	jne    0x4143a0
  4143f1:	jmp    0x4142a4
  4143f6:	mov    rdx,QWORD PTR [rip+0x207cb]        # 0x434bc8
  4143fd:	mov    ecx,0xa
  414402:	mov    ebp,DWORD PTR [rbx+0xb0]
  414408:	mov    rsi,QWORD PTR [rbx+0x78]
  41440c:	call   0x421e68
  414411:	mov    rcx,QWORD PTR [rip+0x207b0]        # 0x434bc8
  414418:	call   0x421e80
  41441d:	jmp    0x414433
  41441f:	cmp    eax,0x4
  414422:	je     0x414443
  414424:	sub    ebp,0x1
  414427:	add    rsi,0x68
  41442b:	test   ebp,ebp
  41442d:	jle    0x4142b1
  414433:	mov    eax,DWORD PTR [rsi+0x10]
  414436:	and    eax,0xf000
  41443b:	shr    eax,0xc
  41443e:	cmp    eax,0x2
  414441:	jne    0x41441f
  414443:	mov    rdx,rsi
  414446:	mov    ecx,0x1
  41444b:	call   QWORD PTR [rsi+0x38]
  41444e:	jmp    0x414424
  414450:	lea    r9,[rsp+0x30]
  414455:	lea    rsi,[rip+0x1442d]        # 0x428889
  41445c:	mov    ecx,0x7
  414461:	mov    rdi,r9
  414464:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  414466:	jmp    0x414360
  41446b:	mov    WORD PTR [rsp+0x30],0x682d
  414472:	mov    BYTE PTR [rsp+0x32],0x0
  414477:	lea    r9,[rsp+0x30]
  41447c:	jmp    0x414360
  414481:	mov    BYTE PTR [rsp+0x31],0x2d
  414486:	mov    BYTE PTR [rsp+0x30],0x2d
  41448b:	lea    r9,[rsp+0x30]
  414490:	mov    rdx,QWORD PTR [rax+0x50]
  414494:	lea    rcx,[rsp+0x32]
  414499:	mov    r8d,0x14
  41449f:	mov    QWORD PTR [rsp+0x28],r9
  4144a4:	call   0x421d88
  4144a9:	mov    r9,QWORD PTR [rsp+0x28]
  4144ae:	jmp    0x414360
  4144b3:	mov    BYTE PTR [rsp+0x30],0x2d
  4144b8:	movzx  eax,WORD PTR [rax+0x2]
  4144bc:	lea    r9,[rsp+0x30]
  4144c1:	mov    BYTE PTR [rsp+0x32],0x0
  4144c6:	mov    BYTE PTR [rsp+0x31],al
  4144ca:	jmp    0x414360
  4144cf:	mov    rcx,QWORD PTR [rip+0xf59a]        # 0x423a70
  4144d6:	call   0x408310
  4144db:	nop
  4144dc:	nop    DWORD PTR [rax+0x0]
  4144e0:	sub    rsp,0x28
  4144e4:	call   0x413e90
  4144e9:	nop
  4144ea:	nop    WORD PTR [rax+rax*1+0x0]
  4144f0:	sub    rsp,0x28
  4144f4:	lea    rcx,[rip+0xf1c5]        # 0x4236c0
  4144fb:	xor    edx,edx
  4144fd:	call   0x413e90
  414502:	nop
  414503:	nop    DWORD PTR [rax]
  414506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414510:	lea    rax,[rip+0x14379]        # 0x428890
  414517:	ret    
  414518:	nop    DWORD PTR [rax+rax*1+0x0]
  414520:	push   rsi
  414521:	push   rbx
  414522:	sub    rsp,0x28
  414526:	cmp    BYTE PTR [rip+0x206c7],0x0        # 0x434bf4
  41452d:	mov    rbx,rcx
  414530:	mov    rsi,rdx
  414533:	je     0x414550
  414535:	call   QWORD PTR [rip+0x24a41]        # 0x438f7c
  41453b:	cmp    rbx,0xf
  41453f:	lea    r8,[rax+0x60]
  414543:	ja     0x414560
  414545:	add    rsp,0x28
  414549:	pop    rbx
  41454a:	pop    rsi
  41454b:	ret    
  41454c:	nop    DWORD PTR [rax+0x0]
  414550:	call   QWORD PTR [rip+0x24a26]        # 0x438f7c
  414556:	cmp    rbx,0xf
  41455a:	lea    r8,[rax+0x30]
  41455e:	jbe    0x414545
  414560:	xor    r9d,r9d
  414563:	mov    rdx,rsi
  414566:	mov    rcx,rbx
  414569:	add    rsp,0x28
  41456d:	pop    rbx
  41456e:	pop    rsi
  41456f:	jmp    0x411960
  414574:	xchg   ax,ax
  414576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414580:	push   rsi
  414581:	push   rbx
  414582:	sub    rsp,0x28
  414586:	mov    rbx,rcx
  414589:	mov    rsi,rdx
  41458c:	call   QWORD PTR [rip+0x249ea]        # 0x438f7c
  414592:	cmp    rbx,0xf
  414596:	ja     0x4145a0
  414598:	add    rsp,0x28
  41459c:	pop    rbx
  41459d:	pop    rsi
  41459e:	ret    
  41459f:	nop
  4145a0:	lea    r8,[rax+0x60]
  4145a4:	mov    r9d,0x1
  4145aa:	mov    rdx,rsi
  4145ad:	mov    rcx,rbx
  4145b0:	add    rsp,0x28
  4145b4:	pop    rbx
  4145b5:	pop    rsi
  4145b6:	jmp    0x411960
  4145bb:	nop
  4145bc:	nop
  4145bd:	nop
  4145be:	nop
  4145bf:	nop
  4145c0:	push   rbx
  4145c1:	sub    rsp,0x20
  4145c5:	call   0x421e18
  4145ca:	test   rax,rax
  4145cd:	mov    rbx,rax
  4145d0:	je     0x4145e0
  4145d2:	mov    rax,rbx
  4145d5:	add    rsp,0x20
  4145d9:	pop    rbx
  4145da:	ret    
  4145db:	nop    DWORD PTR [rax+rax*1+0x0]
  4145e0:	call   QWORD PTR [rip+0x249e6]        # 0x438fcc
  4145e6:	mov    DWORD PTR [rax],0xc
  4145ec:	mov    rax,rbx
  4145ef:	add    rsp,0x20
  4145f3:	pop    rbx
  4145f4:	ret    
  4145f5:	nop
  4145f6:	nop
  4145f7:	nop
  4145f8:	nop
  4145f9:	nop
  4145fa:	nop
  4145fb:	nop
  4145fc:	nop
  4145fd:	nop
  4145fe:	nop
  4145ff:	nop
  414600:	push   rdi
  414601:	push   rsi
  414602:	push   rbx
  414603:	mov    esi,0x1
  414608:	mov    r10d,0x1
  41460e:	xor    r11d,r11d
  414611:	mov    rax,0xffffffffffffffff
  414618:	nop    DWORD PTR [rax+rax*1+0x0]
  414620:	lea    r9,[r11+r10*1]
  414624:	cmp    r9,rdx
  414627:	jae    0x414654
  414629:	lea    rbx,[rcx+rax*1]
  41462d:	movzx  edi,BYTE PTR [rbx+r10*1]
  414632:	cmp    BYTE PTR [rcx+r9*1],dil
  414636:	jae    0x4146c0
  41463c:	mov    r11,r9
  41463f:	mov    r10d,0x1
  414645:	mov    rsi,r9
  414648:	lea    r9,[r11+r10*1]
  41464c:	sub    rsi,rax
  41464f:	cmp    r9,rdx
  414652:	jb     0x414629
  414654:	mov    QWORD PTR [r8],rsi
  414657:	mov    edi,0x1
  41465c:	mov    r10d,0x1
  414662:	xor    r11d,r11d
  414665:	mov    rbx,0xffffffffffffffff
  41466c:	nop    DWORD PTR [rax+0x0]
  414670:	lea    r9,[r11+r10*1]
  414674:	cmp    rdx,r9
  414677:	jbe    0x4146a0
  414679:	lea    rsi,[rcx+rbx*1]
  41467d:	movzx  esi,BYTE PTR [rsi+r10*1]
  414682:	cmp    BYTE PTR [rcx+r9*1],sil
  414686:	jbe    0x4146e0
  414688:	mov    r11,r9
  41468b:	mov    r10d,0x1
  414691:	mov    rdi,r9
  414694:	lea    r9,[r11+r10*1]
  414698:	sub    rdi,rbx
  41469b:	cmp    rdx,r9
  41469e:	ja     0x414679
  4146a0:	add    rbx,0x1
  4146a4:	add    rax,0x1
  4146a8:	cmp    rbx,rax
  4146ab:	jb     0x4146b3
  4146ad:	mov    QWORD PTR [r8],rdi
  4146b0:	mov    rax,rbx
  4146b3:	pop    rbx
  4146b4:	pop    rsi
  4146b5:	pop    rdi
  4146b6:	ret    
  4146b7:	nop    WORD PTR [rax+rax*1+0x0]
  4146c0:	je     0x414700
  4146c2:	mov    rax,r11
  4146c5:	mov    esi,0x1
  4146ca:	add    r11,0x1
  4146ce:	mov    r10d,0x1
  4146d4:	jmp    0x414620
  4146d9:	nop    DWORD PTR [rax+0x0]
  4146e0:	je     0x414710
  4146e2:	mov    rbx,r11
  4146e5:	mov    edi,0x1
  4146ea:	add    r11,0x1
  4146ee:	mov    r10d,0x1
  4146f4:	jmp    0x414670
  4146f9:	nop    DWORD PTR [rax+0x0]
  414700:	cmp    r10,rsi
  414703:	je     0x414720
  414705:	add    r10,0x1
  414709:	jmp    0x414620
  41470e:	xchg   ax,ax
  414710:	cmp    r10,rdi
  414713:	je     0x414731
  414715:	add    r10,0x1
  414719:	jmp    0x414670
  41471e:	xchg   ax,ax
  414720:	mov    rsi,r10
  414723:	mov    r11,r9
  414726:	mov    r10d,0x1
  41472c:	jmp    0x414620
  414731:	mov    rdi,r10
  414734:	mov    r11,r9
  414737:	mov    r10d,0x1
  41473d:	jmp    0x414670
  414742:	nop    DWORD PTR [rax+0x0]
  414746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414750:	push   r15
  414752:	push   r14
  414754:	push   r13
  414756:	push   r12
  414758:	push   rbp
  414759:	push   rdi
  41475a:	push   rsi
  41475b:	push   rbx
  41475c:	sub    rsp,0x848
  414763:	cmp    r9,0x2
  414767:	mov    rbp,rcx
  41476a:	mov    r13,rdx
  41476d:	mov    rbx,r8
  414770:	mov    rdi,r9
  414773:	ja     0x4149b5
  414779:	lea    r12,[r9-0x1]
  41477d:	mov    QWORD PTR [rsp+0x38],0x1
  414786:	mov    r14d,0x1
  41478c:	mov    rsi,r12
  41478f:	lea    r10,[rsp+0x40]
  414794:	lea    rax,[rsp+0x840]
  41479c:	nop    DWORD PTR [rax+0x0]
  4147a0:	mov    QWORD PTR [r10],rdi
  4147a3:	add    r10,0x8
  4147a7:	cmp    r10,rax
  4147aa:	jne    0x4147a0
  4147ac:	xor    eax,eax
  4147ae:	test   rdi,rdi
  4147b1:	je     0x4147cb
  4147b3:	movzx  edx,BYTE PTR [rbx+rax*1]
  4147b7:	mov    rcx,rsi
  4147ba:	sub    rcx,rax
  4147bd:	add    rax,0x1
  4147c1:	cmp    rax,rdi
  4147c4:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  4147c9:	jne    0x4147b3
  4147cb:	lea    rdx,[rbx+r14*1]
  4147cf:	mov    r8,r12
  4147d2:	mov    rcx,rbx
  4147d5:	call   0x421e10
  4147da:	test   eax,eax
  4147dc:	jne    0x4148da
  4147e2:	lea    rcx,[r12-0x1]
  4147e7:	mov    r11d,0x1
  4147ed:	mov    r8,rdi
  4147f0:	sub    r11,r12
  4147f3:	xor    eax,eax
  4147f5:	xor    edx,edx
  4147f7:	sub    r8,r14
  4147fa:	lea    r15,[rbp+rcx*1+0x0]
  4147ff:	mov    QWORD PTR [rsp+0x28],r11
  414804:	sub    r13,rdi
  414807:	jmp    0x41482a
  414809:	nop    DWORD PTR [rax+0x0]
  414810:	cmp    r14,r9
  414813:	jbe    0x41481c
  414815:	test   rax,rax
  414818:	cmovne r9,r8
  41481c:	add    rdx,r9
  41481f:	xor    eax,eax
  414821:	cmp    r13,rdx
  414824:	jb     0x4148c6
  41482a:	lea    r10,[rbp+rdx*1+0x0]
  41482f:	movzx  r9d,BYTE PTR [r10+rsi*1]
  414834:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  414839:	test   r9,r9
  41483c:	jne    0x414810
  41483e:	cmp    rax,r12
  414841:	mov    r9,r12
  414844:	cmovae r9,rax
  414848:	cmp    r9,rsi
  41484b:	jae    0x414874
  41484d:	lea    rdi,[rbp+r9*1+0x0]
  414852:	movzx  edi,BYTE PTR [rdi+rdx*1]
  414856:	cmp    BYTE PTR [rbx+r9*1],dil
  41485a:	je     0x41486b
  41485c:	jmp    0x4148d0
  41485e:	xchg   ax,ax
  414860:	movzx  edi,BYTE PTR [r10+r9*1]
  414865:	cmp    BYTE PTR [rbx+r9*1],dil
  414869:	jne    0x4148d0
  41486b:	add    r9,0x1
  41486f:	cmp    r9,rsi
  414872:	jb     0x414860
  414874:	cmp    r12,rax
  414877:	jbe    0x4149d6
  41487d:	movzx  edi,BYTE PTR [r15+rdx*1]
  414882:	cmp    BYTE PTR [rbx+rcx*1],dil
  414886:	jne    0x4149d6
  41488c:	mov    r9,rcx
  41488f:	jmp    0x4148a5
  414891:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  414897:	lea    rdi,[r9-0x1]
  41489b:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  4148a0:	jne    0x4148aa
  4148a2:	mov    r9,rdi
  4148a5:	cmp    r9,rax
  4148a8:	jne    0x414891
  4148aa:	add    rax,0x1
  4148ae:	cmp    rax,r9
  4148b1:	ja     0x414975
  4148b7:	add    rdx,r14
  4148ba:	mov    rax,r8
  4148bd:	cmp    r13,rdx
  4148c0:	jae    0x41482a
  4148c6:	xor    eax,eax
  4148c8:	jmp    0x414978
  4148cd:	nop    DWORD PTR [rax]
  4148d0:	add    rdx,QWORD PTR [rsp+0x28]
  4148d5:	jmp    0x41481c
  4148da:	mov    rax,rdi
  4148dd:	lea    rcx,[r12-0x1]
  4148e2:	mov    r11d,0x1
  4148e8:	sub    rax,r12
  4148eb:	cmp    rax,r12
  4148ee:	lea    r14,[rbp+rcx*1+0x0]
  4148f3:	cmovb  rax,r12
  4148f7:	sub    r11,r12
  4148fa:	sub    r13,rdi
  4148fd:	lea    r8,[rax+0x1]
  414901:	xor    eax,eax
  414903:	lea    r10,[rbp+rax*1+0x0]
  414908:	movzx  edx,BYTE PTR [r10+rsi*1]
  41490d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  414912:	test   rdx,rdx
  414915:	jne    0x414990
  414917:	cmp    r12,rsi
  41491a:	jae    0x414944
  41491c:	movzx  edx,BYTE PTR [r10+r12*1]
  414921:	mov    r9,r12
  414924:	cmp    BYTE PTR [rbx+r12*1],dl
  414928:	je     0x41493b
  41492a:	jmp    0x4149a0
  41492c:	nop    DWORD PTR [rax+0x0]
  414930:	movzx  edx,BYTE PTR [r10+r9*1]
  414935:	cmp    BYTE PTR [rbx+r9*1],dl
  414939:	jne    0x4149a0
  41493b:	add    r9,0x1
  41493f:	cmp    r9,rsi
  414942:	jb     0x414930
  414944:	cmp    rcx,0xffffffffffffffff
  414948:	mov    r9,rcx
  41494b:	je     0x414975
  41494d:	movzx  edx,BYTE PTR [r14+rax*1]
  414952:	cmp    BYTE PTR [rbx+rcx*1],dl
  414955:	je     0x41496b
  414957:	jmp    0x4149b0
  414959:	nop    DWORD PTR [rax+0x0]
  414960:	movzx  edx,BYTE PTR [r10+r9*1]
  414965:	cmp    BYTE PTR [rbx+r9*1],dl
  414969:	jne    0x4149b0
  41496b:	sub    r9,0x1
  41496f:	cmp    r9,0xffffffffffffffff
  414973:	jne    0x414960
  414975:	mov    rax,r10
  414978:	add    rsp,0x848
  41497f:	pop    rbx
  414980:	pop    rsi
  414981:	pop    rdi
  414982:	pop    rbp
  414983:	pop    r12
  414985:	pop    r13
  414987:	pop    r14
  414989:	pop    r15
  41498b:	ret    
  41498c:	nop    DWORD PTR [rax+0x0]
  414990:	add    rax,rdx
  414993:	cmp    r13,rax
  414996:	jae    0x414903
  41499c:	xor    eax,eax
  41499e:	jmp    0x414978
  4149a0:	add    rax,r11
  4149a3:	add    rax,r9
  4149a6:	jmp    0x414993
  4149a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4149b0:	add    rax,r8
  4149b3:	jmp    0x414993
  4149b5:	lea    r8,[rsp+0x38]
  4149ba:	mov    rdx,r9
  4149bd:	mov    rcx,rbx
  4149c0:	lea    rsi,[rdi-0x1]
  4149c4:	call   0x414600
  4149c9:	mov    r14,QWORD PTR [rsp+0x38]
  4149ce:	mov    r12,rax
  4149d1:	jmp    0x41478f
  4149d6:	mov    r9,r12
  4149d9:	jmp    0x4148aa
  4149de:	xchg   ax,ax
  4149e0:	push   r15
  4149e2:	push   r14
  4149e4:	push   r13
  4149e6:	push   r12
  4149e8:	push   rbp
  4149e9:	push   rdi
  4149ea:	push   rsi
  4149eb:	push   rbx
  4149ec:	sub    rsp,0x48
  4149f0:	test   r9,r9
  4149f3:	mov    rax,rcx
  4149f6:	je     0x414b60
  4149fc:	cmp    r9,rdx
  4149ff:	ja     0x414b55
  414a05:	cmp    r9,0x1f
  414a09:	mov    rsi,r9
  414a0c:	mov    rbx,r8
  414a0f:	mov    rbp,rdx
  414a12:	mov    r12,rcx
  414a15:	ja     0x414b71
  414a1b:	movzx  edx,BYTE PTR [r8]
  414a1f:	mov    r8,rbp
  414a22:	call   0x416b40
  414a27:	test   rax,rax
  414a2a:	mov    rdi,rax
  414a2d:	je     0x414b90
  414a33:	cmp    rsi,0x1
  414a37:	je     0x414b90
  414a3d:	mov    rcx,r12
  414a40:	sub    rcx,rax
  414a43:	xor    eax,eax
  414a45:	lea    r12,[rcx+rbp*1]
  414a49:	cmp    rsi,r12
  414a4c:	ja     0x414b60
  414a52:	cmp    rsi,0x2
  414a56:	ja     0x414c4f
  414a5c:	lea    rbp,[rsi-0x1]
  414a60:	mov    QWORD PTR [rsp+0x38],0x1
  414a69:	mov    r13d,0x1
  414a6f:	lea    rdx,[rbx+r13*1]
  414a73:	mov    r8,rbp
  414a76:	mov    rcx,rbx
  414a79:	call   0x421e10
  414a7e:	test   eax,eax
  414a80:	jne    0x414b95
  414a86:	lea    r9,[rbp-0x1]
  414a8a:	mov    r15,rsi
  414a8d:	mov    r11d,0x1
  414a93:	xor    ecx,ecx
  414a95:	xor    r8d,r8d
  414a98:	sub    r15,r13
  414a9b:	lea    rax,[rdi+r9*1]
  414a9f:	sub    r11,rbp
  414aa2:	sub    r12,rsi
  414aa5:	mov    QWORD PTR [rsp+0x28],rax
  414aaa:	nop    WORD PTR [rax+rax*1+0x0]
  414ab0:	cmp    r8,rbp
  414ab3:	mov    r10,rbp
  414ab6:	cmovae r10,r8
  414aba:	cmp    rsi,r10
  414abd:	jbe    0x414af8
  414abf:	lea    rax,[rdi+r10*1]
  414ac3:	movzx  eax,BYTE PTR [rax+rcx*1]
  414ac7:	cmp    BYTE PTR [rbx+r10*1],al
  414acb:	jne    0x414b80
  414ad1:	lea    rax,[rdi+rcx*1]
  414ad5:	jmp    0x414aef
  414ad7:	nop    WORD PTR [rax+rax*1+0x0]
  414ae0:	movzx  edx,BYTE PTR [rax+r10*1]
  414ae5:	cmp    BYTE PTR [rbx+r10*1],dl
  414ae9:	jne    0x414b80
  414aef:	add    r10,0x1
  414af3:	cmp    rsi,r10
  414af6:	ja     0x414ae0
  414af8:	cmp    rbp,r8
  414afb:	jbe    0x414c47
  414b01:	mov    rax,QWORD PTR [rsp+0x28]
  414b06:	movzx  eax,BYTE PTR [rax+rcx*1]
  414b0a:	cmp    BYTE PTR [rbx+r9*1],al
  414b0e:	jne    0x414c47
  414b14:	mov    rdx,r9
  414b17:	lea    r10,[rdi+rcx*1]
  414b1b:	jmp    0x414b34
  414b1d:	nop    DWORD PTR [rax]
  414b20:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  414b26:	lea    rax,[rdx-0x1]
  414b2a:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  414b2f:	jne    0x414b39
  414b31:	mov    rdx,rax
  414b34:	cmp    rdx,r8
  414b37:	jne    0x414b20
  414b39:	add    r8,0x1
  414b3d:	cmp    r8,rdx
  414b40:	ja     0x414c6c
  414b46:	add    rcx,r13
  414b49:	mov    r8,r15
  414b4c:	cmp    r12,rcx
  414b4f:	jae    0x414ab0
  414b55:	xor    eax,eax
  414b57:	nop    WORD PTR [rax+rax*1+0x0]
  414b60:	add    rsp,0x48
  414b64:	pop    rbx
  414b65:	pop    rsi
  414b66:	pop    rdi
  414b67:	pop    rbp
  414b68:	pop    r12
  414b6a:	pop    r13
  414b6c:	pop    r14
  414b6e:	pop    r15
  414b70:	ret    
  414b71:	call   0x414750
  414b76:	jmp    0x414b60
  414b78:	nop    DWORD PTR [rax+rax*1+0x0]
  414b80:	add    rcx,r11
  414b83:	xor    r8d,r8d
  414b86:	add    rcx,r10
  414b89:	jmp    0x414b4c
  414b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b90:	mov    rax,rdi
  414b93:	jmp    0x414b60
  414b95:	mov    rax,rsi
  414b98:	lea    r8,[rbp-0x1]
  414b9c:	mov    r13d,0x1
  414ba2:	sub    rax,rbp
  414ba5:	lea    r9,[rdi+rbp*1]
  414ba9:	cmp    rax,rbp
  414bac:	lea    r14,[rdi+r8*1]
  414bb0:	cmovb  rax,rbp
  414bb4:	sub    r13,rbp
  414bb7:	sub    r12,rsi
  414bba:	lea    r11,[rax+0x1]
  414bbe:	xor    eax,eax
  414bc0:	mov    QWORD PTR [rsp+0x38],r11
  414bc5:	cmp    rsi,rbp
  414bc8:	jbe    0x414bf4
  414bca:	movzx  ecx,BYTE PTR [r9+rax*1]
  414bcf:	mov    r10,rbp
  414bd2:	lea    rdx,[rdi+rax*1]
  414bd6:	cmp    BYTE PTR [rbx+rbp*1],cl
  414bd9:	je     0x414beb
  414bdb:	jmp    0x414c30
  414bdd:	nop    DWORD PTR [rax]
  414be0:	movzx  ecx,BYTE PTR [rdx+r10*1]
  414be5:	cmp    BYTE PTR [rbx+r10*1],cl
  414be9:	jne    0x414c30
  414beb:	add    r10,0x1
  414bef:	cmp    rsi,r10
  414bf2:	ja     0x414be0
  414bf4:	cmp    r8,0xffffffffffffffff
  414bf8:	mov    rdx,r8
  414bfb:	je     0x414c75
  414bfd:	movzx  ecx,BYTE PTR [r14+rax*1]
  414c02:	cmp    BYTE PTR [rbx+r8*1],cl
  414c06:	jne    0x414c42
  414c08:	lea    rcx,[rdi+rax*1]
  414c0c:	jmp    0x414c1b
  414c0e:	xchg   ax,ax
  414c10:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  414c15:	cmp    BYTE PTR [rbx+rdx*1],r15b
  414c19:	jne    0x414c42
  414c1b:	sub    rdx,0x1
  414c1f:	cmp    rdx,0xffffffffffffffff
  414c23:	jne    0x414c10
  414c25:	mov    rax,rcx
  414c28:	jmp    0x414b60
  414c2d:	nop    DWORD PTR [rax]
  414c30:	add    rax,r13
  414c33:	add    rax,r10
  414c36:	cmp    r12,rax
  414c39:	jae    0x414bc5
  414c3b:	xor    eax,eax
  414c3d:	jmp    0x414b60
  414c42:	add    rax,r11
  414c45:	jmp    0x414c36
  414c47:	mov    rdx,rbp
  414c4a:	jmp    0x414b39
  414c4f:	lea    r8,[rsp+0x38]
  414c54:	mov    rdx,rsi
  414c57:	mov    rcx,rbx
  414c5a:	call   0x414600
  414c5f:	mov    r13,QWORD PTR [rsp+0x38]
  414c64:	mov    rbp,rax
  414c67:	jmp    0x414a6f
  414c6c:	lea    rax,[rdi+rcx*1]
  414c70:	jmp    0x414b60
  414c75:	lea    rcx,[rdi+rax*1]
  414c79:	jmp    0x414c25
  414c7b:	nop
  414c7c:	nop
  414c7d:	nop
  414c7e:	nop
  414c7f:	nop
  414c80:	push   rbx
  414c81:	sub    rsp,0x20
  414c85:	mov    ebx,ecx
  414c87:	call   0x416c00
  414c8c:	mov    rax,QWORD PTR [rip+0x24371]        # 0x439004
  414c93:	mov    ecx,ebx
  414c95:	add    rsp,0x20
  414c99:	pop    rbx
  414c9a:	rex.W jmp rax
  414c9d:	nop
  414c9e:	nop
  414c9f:	nop
  414ca0:	push   rbx
  414ca1:	sub    rsp,0x20
  414ca5:	test   rcx,rcx
  414ca8:	je     0x414cc0
  414caa:	call   0x421dd8
  414caf:	mov    rbx,rax
  414cb2:	test   rbx,rbx
  414cb5:	je     0x414cd0
  414cb7:	mov    rax,rbx
  414cba:	add    rsp,0x20
  414cbe:	pop    rbx
  414cbf:	ret    
  414cc0:	mov    rcx,rdx
  414cc3:	call   0x421e18
  414cc8:	mov    rbx,rax
  414ccb:	test   rbx,rbx
  414cce:	jne    0x414cb7
  414cd0:	call   QWORD PTR [rip+0x242f6]        # 0x438fcc
  414cd6:	mov    DWORD PTR [rax],0xc
  414cdc:	mov    rax,rbx
  414cdf:	add    rsp,0x20
  414ce3:	pop    rbx
  414ce4:	ret    
  414ce5:	nop
  414ce6:	nop
  414ce7:	nop
  414ce8:	nop
  414ce9:	nop
  414cea:	nop
  414ceb:	nop
  414cec:	nop
  414ced:	nop
  414cee:	nop
  414cef:	nop
  414cf0:	push   rbp
  414cf1:	push   rdi
  414cf2:	push   rsi
  414cf3:	push   rbx
  414cf4:	sub    rsp,0x38
  414cf8:	mov    QWORD PTR [rsp+0x78],r9
  414cfd:	mov    QWORD PTR [rsp+0x20],rdx
  414d02:	lea    r9,[rsp+0x78]
  414d07:	mov    rbp,rdx
  414d0a:	lea    rdx,[rsp+0x20]
  414d0f:	mov    rdi,rcx
  414d12:	mov    QWORD PTR [rsp+0x28],r9
  414d17:	call   0x414db0
  414d1c:	test   rax,rax
  414d1f:	mov    rsi,rax
  414d22:	mov    rbx,QWORD PTR [rsp+0x20]
  414d27:	je     0x414d85
  414d29:	cmp    rax,rdi
  414d2c:	je     0x414d3b
  414d2e:	test   rbp,rbp
  414d31:	jne    0x414d50
  414d33:	mov    rcx,rsi
  414d36:	call   0x421e50
  414d3b:	cmp    rbx,0x7fffffff
  414d42:	ja     0x414d72
  414d44:	mov    eax,ebx
  414d46:	add    rsp,0x38
  414d4a:	pop    rbx
  414d4b:	pop    rsi
  414d4c:	pop    rdi
  414d4d:	pop    rbp
  414d4e:	ret    
  414d4f:	nop
  414d50:	lea    rax,[rbp-0x1]
  414d54:	cmp    rbp,rbx
  414d57:	mov    rdx,rsi
  414d5a:	mov    rcx,rdi
  414d5d:	cmova  rax,rbx
  414d61:	mov    rbp,rax
  414d64:	mov    r8,rax
  414d67:	call   0x421e08
  414d6c:	mov    BYTE PTR [rdi+rbp*1],0x0
  414d70:	jmp    0x414d33
  414d72:	call   QWORD PTR [rip+0x24254]        # 0x438fcc
  414d78:	mov    DWORD PTR [rax],0x84
  414d7e:	mov    eax,0xffffffff
  414d83:	jmp    0x414d46
  414d85:	mov    eax,0xffffffff
  414d8a:	jmp    0x414d46
  414d8c:	nop
  414d8d:	nop
  414d8e:	nop
  414d8f:	nop
  414d90:	sub    rsp,0x38
  414d94:	mov    QWORD PTR [rsp+0x58],r9
  414d99:	lea    r9,[rsp+0x58]
  414d9e:	mov    QWORD PTR [rsp+0x28],r9
  414da3:	call   0x41d340
  414da8:	add    rsp,0x38
  414dac:	ret    
  414dad:	nop    DWORD PTR [rax]
  414db0:	push   rbp
  414db1:	push   r15
  414db3:	push   r14
  414db5:	push   r13
  414db7:	push   r12
  414db9:	push   rdi
  414dba:	push   rsi
  414dbb:	push   rbx
  414dbc:	sub    rsp,0x518
  414dc3:	lea    rbp,[rsp+0x80]
  414dcb:	lea    rax,[rbp+0x110]
  414dd2:	lea    rdi,[rbp+0x200]
  414dd9:	mov    rbx,r8
  414ddc:	mov    QWORD PTR [rbp+0x4e0],rcx
  414de3:	mov    QWORD PTR [rbp+0x4e8],rdx
  414dea:	mov    rcx,rbx
  414ded:	mov    rdx,rdi
  414df0:	mov    r8,rax
  414df3:	mov    QWORD PTR [rbp+0x60],rdi
  414df7:	mov    rsi,r9
  414dfa:	mov    QWORD PTR [rbp+0x58],rax
  414dfe:	mov    rdi,rax
  414e01:	call   0x416d20
  414e06:	test   eax,eax
  414e08:	js     0x415e50
  414e0e:	mov    rdx,rdi
  414e11:	mov    rcx,rsi
  414e14:	call   0x416c30
  414e19:	test   eax,eax
  414e1b:	js     0x416190
  414e21:	mov    rax,QWORD PTR [rbp+0x210]
  414e28:	mov    rdx,0xffffffffffffffff
  414e2f:	add    rax,0x7
  414e33:	cmp    rax,0x7
  414e37:	cmovb  rax,rdx
  414e3b:	add    rax,QWORD PTR [rbp+0x218]
  414e42:	jb     0x415280
  414e48:	lea    rcx,[rax+0x6]
  414e4c:	cmp    rax,rcx
  414e4f:	ja     0x415280
  414e55:	cmp    rcx,0xf9f
  414e5c:	ja     0x415bc0
  414e62:	add    rax,0x24
  414e66:	and    rax,0xfffffffffffffff0
  414e6a:	call   0x41c880
  414e6f:	sub    rsp,rax
  414e72:	cmp    QWORD PTR [rbp+0x4e0],0x0
  414e7a:	mov    QWORD PTR [rbp+0x50],0x0
  414e82:	lea    rax,[rsp+0x40]
  414e87:	mov    QWORD PTR [rbp+0x90],rax
  414e8e:	je     0x415bf8
  414e94:	mov    rax,QWORD PTR [rbp+0x4e8]
  414e9b:	mov    r12,QWORD PTR [rax]
  414e9e:	mov    rax,QWORD PTR [rbp+0x4e0]
  414ea5:	mov    r13,QWORD PTR [rbp+0x208]
  414eac:	mov    rdi,rbx
  414eaf:	xor    r15d,r15d
  414eb2:	mov    QWORD PTR [rbp+0x80],0x0
  414ebd:	mov    QWORD PTR [rbp+0x98],rax
  414ec4:	lea    rax,[rbp+0xbc]
  414ecb:	mov    rsi,QWORD PTR [r13+0x0]
  414ecf:	mov    QWORD PTR [rbp+0x70],rax
  414ed3:	lea    rax,[rbp+0xa0]
  414eda:	cmp    rsi,rdi
  414edd:	mov    QWORD PTR [rbp+0x40],rax
  414ee1:	lea    rax,[rbp+0xd0]
  414ee8:	mov    QWORD PTR [rbp+0x48],rax
  414eec:	lea    rax,[rbp+0xb4]
  414ef3:	mov    QWORD PTR [rbp+0x38],rax
  414ef7:	je     0x4153c3
  414efd:	sub    rsi,rdi
  414f00:	mov    rax,0xffffffffffffffff
  414f07:	mov    r14,rsi
  414f0a:	add    r14,r15
  414f0d:	cmovb  r14,rax
  414f11:	cmp    r12,r14
  414f14:	jae    0x4153d2
  414f1a:	test   r12,r12
  414f1d:	je     0x4152e0
  414f23:	js     0x415cf0
  414f29:	add    r12,r12
  414f2c:	cmp    r12,r14
  414f2f:	cmovb  r12,r14
  414f33:	cmp    r12,0xffffffffffffffff
  414f37:	je     0x415cf0
  414f3d:	mov    rax,QWORD PTR [rbp+0x98]
  414f44:	cmp    rax,QWORD PTR [rbp+0x4e0]
  414f4b:	sete   r8b
  414f4f:	test   rax,rax
  414f52:	mov    BYTE PTR [rbp+0x88],r8b
  414f59:	je     0x4152f0
  414f5f:	test   r8b,r8b
  414f62:	jne    0x4152f0
  414f68:	mov    rcx,QWORD PTR [rbp+0x98]
  414f6f:	mov    rdx,r12
  414f72:	call   0x414ca0
  414f77:	movzx  r8d,BYTE PTR [rbp+0x88]
  414f7f:	mov    rbx,rax
  414f82:	test   rbx,rbx
  414f85:	je     0x415cf0
  414f8b:	test   r15,r15
  414f8e:	je     0x414fa7
  414f90:	test   r8b,r8b
  414f93:	je     0x414fa7
  414f95:	mov    rdx,QWORD PTR [rbp+0x98]
  414f9c:	mov    r8,r15
  414f9f:	mov    rcx,rbx
  414fa2:	call   0x421e08
  414fa7:	lea    rcx,[rbx+r15*1]
  414fab:	mov    r8,rsi
  414fae:	mov    rdx,rdi
  414fb1:	call   0x421e08
  414fb6:	mov    rax,QWORD PTR [rbp+0x80]
  414fbd:	cmp    QWORD PTR [rbp+0x200],rax
  414fc4:	je     0x4161d5
  414fca:	movzx  edx,BYTE PTR [r13+0x48]
  414fcf:	cmp    dl,0x25
  414fd2:	je     0x415310
  414fd8:	mov    rax,QWORD PTR [r13+0x50]
  414fdc:	cmp    rax,0xffffffffffffffff
  414fe0:	je     0x415b00
  414fe6:	cmp    dl,0x6e
  414fe9:	je     0x4153e0
  414fef:	shl    rax,0x5
  414ff3:	cmp    dl,0x73
  414ff6:	mov    r10,QWORD PTR [rbp+0x118]
  414ffd:	je     0x4155c1
  415003:	mov    eax,DWORD PTR [r10+rax*1]
  415007:	mov    DWORD PTR [rbp+0x88],eax
  41500d:	mov    rcx,QWORD PTR [r13+0x18]
  415011:	mov    r9,QWORD PTR [r13+0x20]
  415015:	mov    r8d,DWORD PTR [r13+0x10]
  415019:	cmp    rcx,r9
  41501c:	je     0x415e20
  415022:	mov    rax,QWORD PTR [r13+0x28]
  415026:	cmp    rax,0xffffffffffffffff
  41502a:	je     0x415d00
  415030:	shl    rax,0x5
  415034:	add    rax,r10
  415037:	cmp    DWORD PTR [rax],0x5
  41503a:	jne    0x415b00
  415040:	movsxd r15,DWORD PTR [rax+0x10]
  415044:	test   r15d,r15d
  415047:	js     0x415e10
  41504d:	mov    rdx,QWORD PTR [r13+0x30]
  415051:	mov    rcx,QWORD PTR [r13+0x38]
  415055:	cmp    rdx,rcx
  415058:	je     0x4155b0
  41505e:	mov    rax,QWORD PTR [r13+0x40]
  415062:	cmp    rax,0xffffffffffffffff
  415066:	je     0x415d50
  41506c:	shl    rax,0x5
  415070:	add    r10,rax
  415073:	cmp    DWORD PTR [r10],0x5
  415077:	jne    0x415b00
  41507d:	movsxd rsi,DWORD PTR [r10+0x10]
  415081:	test   esi,esi
  415083:	js     0x4155b0
  415089:	mov    DWORD PTR [rbp+0x28],0x1
  415090:	mov    rax,QWORD PTR [rbp+0x90]
  415097:	test   r8b,0x1
  41509b:	mov    BYTE PTR [rax],0x25
  41509e:	lea    rdi,[rax+0x1]
  4150a2:	je     0x4150b3
  4150a4:	mov    rax,QWORD PTR [rbp+0x90]
  4150ab:	lea    rdi,[rax+0x2]
  4150af:	mov    BYTE PTR [rax+0x1],0x27
  4150b3:	test   r8b,0x2
  4150b7:	je     0x4150c0
  4150b9:	mov    BYTE PTR [rdi],0x2d
  4150bc:	add    rdi,0x1
  4150c0:	test   r8b,0x4
  4150c4:	je     0x4150cd
  4150c6:	mov    BYTE PTR [rdi],0x2b
  4150c9:	add    rdi,0x1
  4150cd:	test   r8b,0x8
  4150d1:	je     0x4150da
  4150d3:	mov    BYTE PTR [rdi],0x20
  4150d6:	add    rdi,0x1
  4150da:	test   r8b,0x10
  4150de:	je     0x4150e7
  4150e0:	mov    BYTE PTR [rdi],0x23
  4150e3:	add    rdi,0x1
  4150e7:	and    r8d,0x20
  4150eb:	je     0x4150f4
  4150ed:	mov    BYTE PTR [rdi],0x30
  4150f0:	add    rdi,0x1
  4150f4:	mov    rdx,QWORD PTR [r13+0x18]
  4150f8:	mov    r8,QWORD PTR [r13+0x20]
  4150fc:	cmp    rdx,r8
  4150ff:	je     0x415123
  415101:	mov    r9,r8
  415104:	mov    rcx,rdi
  415107:	sub    r9,rdx
  41510a:	mov    r8,r9
  41510d:	mov    QWORD PTR [rbp+0x98],r9
  415114:	call   0x421e08
  415119:	mov    r9,QWORD PTR [rbp+0x98]
  415120:	add    rdi,r9
  415123:	mov    rdx,QWORD PTR [r13+0x30]
  415127:	mov    r8,QWORD PTR [r13+0x38]
  41512b:	cmp    rdx,r8
  41512e:	je     0x415152
  415130:	mov    r9,r8
  415133:	mov    rcx,rdi
  415136:	sub    r9,rdx
  415139:	mov    r8,r9
  41513c:	mov    QWORD PTR [rbp+0x98],r9
  415143:	call   0x421e08
  415148:	mov    r9,QWORD PTR [rbp+0x98]
  41514f:	add    rdi,r9
  415152:	mov    eax,DWORD PTR [rbp+0x88]
  415158:	lea    ecx,[rax-0x7]
  41515b:	cmp    ecx,0x9
  41515e:	ja     0x415183
  415160:	mov    eax,0x1
  415165:	shl    rax,cl
  415168:	test   eax,0x283
  41516d:	jne    0x415764
  415173:	test   al,0x20
  415175:	jne    0x415e60
  41517b:	test   al,0xc
  41517d:	jne    0x415ed0
  415183:	movzx  eax,BYTE PTR [r13+0x48]
  415188:	mov    BYTE PTR [rdi+0x1],0x0
  41518c:	mov    BYTE PTR [rdi],al
  41518e:	mov    rax,QWORD PTR [r13+0x28]
  415192:	cmp    rax,0xffffffffffffffff
  415196:	je     0x415b80
  41519c:	shl    rax,0x5
  4151a0:	add    rax,QWORD PTR [rbp+0x118]
  4151a7:	cmp    DWORD PTR [rax],0x5
  4151aa:	jne    0x415b00
  4151b0:	mov    eax,DWORD PTR [rax+0x10]
  4151b3:	mov    edx,0x1
  4151b8:	mov    DWORD PTR [rbp+0xc0],eax
  4151be:	mov    rax,QWORD PTR [r13+0x40]
  4151c2:	cmp    rax,0xffffffffffffffff
  4151c6:	je     0x415b70
  4151cc:	shl    rax,0x5
  4151d0:	add    rax,QWORD PTR [rbp+0x118]
  4151d7:	cmp    DWORD PTR [rax],0x5
  4151da:	jne    0x415b00
  4151e0:	mov    eax,DWORD PTR [rax+0x10]
  4151e3:	lea    ecx,[rdx+0x1]
  4151e6:	mov    DWORD PTR [rbp+0x78],ecx
  4151e9:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  4151f0:	lea    rax,[r14+0x2]
  4151f4:	mov    rdx,0xffffffffffffffff
  4151fb:	cmp    r14,rax
  4151fe:	cmovbe rdx,rax
  415202:	cmp    r12,rdx
  415205:	jae    0x415b60
  41520b:	test   r12,r12
  41520e:	je     0x415410
  415214:	js     0x415231
  415216:	add    r12,r12
  415219:	cmp    r14,rax
  41521c:	ja     0x415231
  41521e:	cmp    r12,rax
  415221:	jae    0x415428
  415227:	cmp    rax,0xffffffffffffffff
  41522b:	jne    0x416b35
  415231:	mov    rax,QWORD PTR [rip+0x23d94]        # 0x438fcc
  415238:	mov    r15,rbx
  41523b:	mov    QWORD PTR [rbp+0x68],rax
  41523f:	mov    QWORD PTR [rbp+0x98],r15
  415246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415250:	mov    rax,QWORD PTR [rbp+0x98]
  415257:	test   rax,rax
  41525a:	je     0x415269
  41525c:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415263:	jne    0x415f30
  415269:	mov    rax,QWORD PTR [rbp+0x50]
  41526d:	test   rax,rax
  415270:	je     0x41528b
  415272:	mov    rcx,rax
  415275:	call   0x421e50
  41527a:	jmp    0x41528b
  41527c:	nop    DWORD PTR [rax+0x0]
  415280:	mov    rax,QWORD PTR [rip+0x23d45]        # 0x438fcc
  415287:	mov    QWORD PTR [rbp+0x68],rax
  41528b:	mov    rax,QWORD PTR [rbp+0x60]
  41528f:	mov    rcx,QWORD PTR [rbp+0x208]
  415296:	add    rax,0x20
  41529a:	cmp    rcx,rax
  41529d:	je     0x4152a4
  41529f:	call   0x421e50
  4152a4:	mov    rax,QWORD PTR [rbp+0x58]
  4152a8:	mov    rcx,QWORD PTR [rbp+0x118]
  4152af:	add    rax,0x10
  4152b3:	cmp    rcx,rax
  4152b6:	je     0x4152bd
  4152b8:	call   0x421e50
  4152bd:	mov    rax,QWORD PTR [rbp+0x68]
  4152c1:	call   rax
  4152c3:	mov    DWORD PTR [rax],0xc
  4152c9:	xor    eax,eax
  4152cb:	lea    rsp,[rbp+0x498]
  4152d2:	pop    rbx
  4152d3:	pop    rsi
  4152d4:	pop    rdi
  4152d5:	pop    r12
  4152d7:	pop    r13
  4152d9:	pop    r14
  4152db:	pop    r15
  4152dd:	pop    rbp
  4152de:	ret    
  4152df:	nop
  4152e0:	mov    r12d,0xc
  4152e6:	jmp    0x414f2c
  4152eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4152f0:	mov    rcx,r12
  4152f3:	call   0x4145c0
  4152f8:	movzx  r8d,BYTE PTR [rbp+0x88]
  415300:	mov    rbx,rax
  415303:	jmp    0x414f82
  415308:	nop    DWORD PTR [rax+rax*1+0x0]
  415310:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  415315:	jne    0x415b00
  41531b:	lea    r15,[r14+0x1]
  41531f:	mov    rax,0xffffffffffffffff
  415326:	cmp    r14,r15
  415329:	cmova  r15,rax
  41532d:	cmp    r12,r15
  415330:	jae    0x41539a
  415332:	test   r12,r12
  415335:	je     0x415e30
  41533b:	js     0x415ce0
  415341:	add    r12,r12
  415344:	cmp    r12,r15
  415347:	cmovb  r12,r15
  41534b:	cmp    r12,0xffffffffffffffff
  41534f:	je     0x415ce0
  415355:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41535c:	sete   sil
  415360:	test   rbx,rbx
  415363:	je     0x415e40
  415369:	test   sil,sil
  41536c:	jne    0x415e40
  415372:	mov    rdx,r12
  415375:	mov    rcx,rbx
  415378:	call   0x414ca0
  41537d:	mov    r9,rax
  415380:	test   r9,r9
  415383:	je     0x415ce0
  415389:	test   r14,r14
  41538c:	je     0x415397
  41538e:	test   sil,sil
  415391:	jne    0x415e70
  415397:	mov    rbx,r9
  41539a:	mov    BYTE PTR [rbx+r14*1],0x25
  41539f:	mov    QWORD PTR [rbp+0x98],rbx
  4153a6:	mov    rdi,QWORD PTR [r13+0x8]
  4153aa:	add    r13,0x58
  4153ae:	mov    rsi,QWORD PTR [r13+0x0]
  4153b2:	add    QWORD PTR [rbp+0x80],0x1
  4153ba:	cmp    rsi,rdi
  4153bd:	jne    0x414efd
  4153c3:	mov    r14,r15
  4153c6:	mov    rbx,QWORD PTR [rbp+0x98]
  4153cd:	jmp    0x414fb6
  4153d2:	mov    rbx,QWORD PTR [rbp+0x98]
  4153d9:	jmp    0x414fa7
  4153de:	xchg   ax,ax
  4153e0:	shl    rax,0x5
  4153e4:	add    rax,QWORD PTR [rbp+0x118]
  4153eb:	mov    edi,DWORD PTR [rax]
  4153ed:	lea    edx,[rdi-0x12]
  4153f0:	cmp    edx,0x4
  4153f3:	ja     0x415b00
  4153f9:	lea    rcx,[rip+0x170c0]        # 0x42c4c0
  415400:	mov    rax,QWORD PTR [rax+0x10]
  415404:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  415408:	add    rcx,rdx
  41540b:	jmp    rcx
  41540d:	nop    DWORD PTR [rax]
  415410:	cmp    r14,rax
  415413:	ja     0x415231
  415419:	mov    r12d,0xc
  41541f:	cmp    r12,rax
  415422:	jb     0x415227
  415428:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41542f:	sete   r8b
  415433:	test   rbx,rbx
  415436:	mov    BYTE PTR [rbp+0x68],r8b
  41543a:	je     0x415b40
  415440:	test   r8b,r8b
  415443:	jne    0x415b40
  415449:	mov    rdx,r12
  41544c:	mov    rcx,rbx
  41544f:	call   0x414ca0
  415454:	movzx  r8d,BYTE PTR [rbp+0x68]
  415459:	mov    QWORD PTR [rbp+0x98],rax
  415460:	cmp    QWORD PTR [rbp+0x98],0x0
  415468:	je     0x415231
  41546e:	test   r14,r14
  415471:	je     0x41548a
  415473:	test   r8b,r8b
  415476:	je     0x41548a
  415478:	mov    rcx,QWORD PTR [rbp+0x98]
  41547f:	mov    r8,r14
  415482:	mov    rdx,rbx
  415485:	call   0x421e08
  41548a:	mov    rax,QWORD PTR [rbp+0x98]
  415491:	mov    BYTE PTR [rax+r14*1],0x0
  415496:	mov    rax,QWORD PTR [rip+0x23b2f]        # 0x438fcc
  41549d:	mov    QWORD PTR [rbp+0x68],rax
  4154a1:	call   rax
  4154a3:	mov    ebx,DWORD PTR [rbp+0x88]
  4154a9:	mov    eax,DWORD PTR [rax]
  4154ab:	mov    QWORD PTR [rbp-0x10],rsi
  4154af:	lea    edx,[rbx-0x9]
  4154b2:	mov    DWORD PTR [rbp+0x30],eax
  4154b5:	cmp    edx,0x2
  4154b8:	sbb    rax,rax
  4154bb:	and    eax,0xa
  4154be:	add    rax,0xa
  4154c2:	cmp    rsi,rax
  4154c5:	cmovae rax,rsi
  4154c9:	mov    QWORD PTR [rbp-0x38],rax
  4154cd:	add    rax,rax
  4154d0:	mov    QWORD PTR [rbp+0x20],rax
  4154d4:	add    rax,0x1
  4154d8:	cmp    edx,0x2
  4154db:	mov    QWORD PTR [rbp+0x18],rax
  4154df:	sbb    rax,rax
  4154e2:	and    eax,0xb
  4154e5:	add    rax,0xb
  4154e9:	cmp    rsi,rax
  4154ec:	cmovae rax,rsi
  4154f0:	mov    QWORD PTR [rbp-0x18],rax
  4154f4:	add    rax,0x1
  4154f8:	cmp    edx,0x2
  4154fb:	mov    QWORD PTR [rbp+0x10],rax
  4154ff:	sbb    rax,rax
  415502:	mov    edx,0x2693
  415507:	and    eax,0x8
  41550a:	add    rax,0x9
  41550e:	cmp    rsi,rax
  415511:	cmovae rax,rsi
  415515:	mov    QWORD PTR [rbp-0x20],rax
  415519:	add    rax,0x2
  41551d:	cmp    ebx,0xc
  415520:	mov    QWORD PTR [rbp+0x8],rax
  415524:	mov    eax,0x273
  415529:	cmove  rax,rdx
  41552d:	mov    QWORD PTR [rbp-0x28],rax
  415531:	add    rax,rsi
  415534:	cmp    ebx,0xc
  415537:	mov    QWORD PTR [rbp+0x0],rax
  41553b:	sete   al
  41553e:	movzx  eax,al
  415541:	lea    rax,[rax+rax*1+0xd]
  415546:	cmp    rsi,rax
  415549:	cmovae rax,rsi
  41554d:	mov    rsi,r12
  415550:	mov    QWORD PTR [rbp-0x30],rax
  415554:	add    rax,0xc
  415558:	mov    QWORD PTR [rbp-0x8],rax
  41555c:	mov    rax,rsi
  41555f:	mov    ebx,0x7fffffff
  415564:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  41556e:	sub    rax,r14
  415571:	cmp    rax,0x7fffffff
  415577:	cmovbe rbx,rax
  41557b:	call   QWORD PTR [rip+0x23a4b]        # 0x438fcc
  415581:	mov    DWORD PTR [rax],0x0
  415587:	mov    eax,DWORD PTR [rbp+0x88]
  41558d:	cmp    eax,0x11
  415590:	ja     0x415b00
  415596:	mov    edx,eax
  415598:	lea    rax,[rip+0x16f35]        # 0x42c4d4
  41559f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4155a3:	add    rax,rdx
  4155a6:	jmp    rax
  4155a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4155b0:	mov    esi,0x6
  4155b5:	mov    DWORD PTR [rbp+0x28],0x0
  4155bc:	jmp    0x415090
  4155c1:	add    rax,r10
  4155c4:	mov    edi,DWORD PTR [rax]
  4155c6:	cmp    edi,0x10
  4155c9:	mov    DWORD PTR [rbp+0x88],edi
  4155cf:	jne    0x41500d
  4155d5:	mov    r8,QWORD PTR [r13+0x18]
  4155d9:	mov    r9,QWORD PTR [r13+0x20]
  4155dd:	cmp    r8,r9
  4155e0:	je     0x415c1c
  4155e6:	mov    rdx,QWORD PTR [r13+0x28]
  4155ea:	cmp    rdx,0xffffffffffffffff
  4155ee:	je     0x41686d
  4155f4:	shl    rdx,0x5
  4155f8:	add    rdx,r10
  4155fb:	cmp    DWORD PTR [rdx],0x5
  4155fe:	jne    0x415b00
  415604:	movsxd rdx,DWORD PTR [rdx+0x10]
  415608:	mov    rcx,rdx
  41560b:	shr    rcx,0x3f
  41560f:	mov    r8,rcx
  415612:	neg    r8
  415615:	xor    rdx,r8
  415618:	lea    rdi,[rdx+rcx*1]
  41561c:	mov    QWORD PTR [rbp+0x68],rdi
  415620:	mov    r8,QWORD PTR [r13+0x30]
  415624:	mov    r11,QWORD PTR [r13+0x38]
  415628:	mov    DWORD PTR [rbp+0x88],0x1
  415632:	cmp    r8,r11
  415635:	je     0x416b2c
  41563b:	mov    rdx,QWORD PTR [r13+0x40]
  41563f:	cmp    rdx,0xffffffffffffffff
  415643:	je     0x41680e
  415649:	shl    rdx,0x5
  41564d:	add    r10,rdx
  415650:	cmp    DWORD PTR [r10],0x5
  415654:	jne    0x415b00
  41565a:	mov    r9d,DWORD PTR [r10+0x10]
  41565e:	test   r9d,r9d
  415661:	movsxd r15,r9d
  415664:	js     0x41679d
  41566a:	test   r15,r15
  41566d:	mov    rsi,QWORD PTR [rax+0x10]
  415671:	mov    DWORD PTR [rbp+0xc0],0x0
  41567b:	je     0x416b00
  415681:	movzx  edx,WORD PTR [rsi]
  415684:	test   dx,dx
  415687:	je     0x416b00
  41568d:	lea    rax,[rbp+0xc0]
  415694:	mov    rcx,rsi
  415697:	mov    QWORD PTR [rbp+0x98],r13
  41569e:	mov    QWORD PTR [rbp+0x78],r12
  4156a2:	mov    QWORD PTR [rbp+0x30],rsi
  4156a6:	xor    edi,edi
  4156a8:	mov    rsi,r15
  4156ab:	mov    r12,rcx
  4156ae:	mov    r13,rax
  4156b1:	mov    r15,QWORD PTR [rbp+0x48]
  4156b5:	jmp    0x4156e9
  4156b7:	nop    WORD PTR [rax+rax*1+0x0]
  4156c0:	cdqe   
  4156c2:	cmp    rax,rsi
  4156c5:	ja     0x416590
  4156cb:	add    r12,0x2
  4156cf:	add    rdi,rax
  4156d2:	sub    rsi,rax
  4156d5:	je     0x416590
  4156db:	movzx  edx,WORD PTR [r12]
  4156e0:	test   dx,dx
  4156e3:	je     0x416590
  4156e9:	mov    r8,r13
  4156ec:	mov    rcx,r15
  4156ef:	call   0x41d120
  4156f4:	test   eax,eax
  4156f6:	jns    0x4156c0
  4156f8:	test   rbx,rbx
  4156fb:	je     0x41570e
  4156fd:	cmp    QWORD PTR [rbp+0x4e0],rbx
  415704:	je     0x41570e
  415706:	mov    rcx,rbx
  415709:	call   0x421e50
  41570e:	mov    rax,QWORD PTR [rbp+0x50]
  415712:	test   rax,rax
  415715:	je     0x41571f
  415717:	mov    rcx,rax
  41571a:	call   0x421e50
  41571f:	mov    rax,QWORD PTR [rbp+0x60]
  415723:	mov    rcx,QWORD PTR [rbp+0x208]
  41572a:	add    rax,0x20
  41572e:	cmp    rcx,rax
  415731:	je     0x415738
  415733:	call   0x421e50
  415738:	mov    rax,QWORD PTR [rbp+0x58]
  41573c:	mov    rcx,QWORD PTR [rbp+0x118]
  415743:	add    rax,0x10
  415747:	cmp    rcx,rax
  41574a:	je     0x415751
  41574c:	call   0x421e50
  415751:	call   QWORD PTR [rip+0x23875]        # 0x438fcc
  415757:	mov    DWORD PTR [rax],0x2a
  41575d:	xor    eax,eax
  41575f:	jmp    0x4152cb
  415764:	mov    BYTE PTR [rdi],0x6c
  415767:	add    rdi,0x1
  41576b:	jmp    0x415183
  415770:	mov    DWORD PTR [rax],r14d
  415773:	mov    r15,r14
  415776:	mov    QWORD PTR [rbp+0x98],rbx
  41577d:	jmp    0x4153a6
  415782:	mov    rax,QWORD PTR [r13+0x50]
  415786:	shl    rax,0x5
  41578a:	add    rax,QWORD PTR [rbp+0x118]
  415791:	mov    r9d,DWORD PTR [rax+0x10]
  415795:	mov    eax,DWORD PTR [rbp+0x78]
  415798:	cmp    eax,0x1
  41579b:	je     0x415990
  4157a1:	cmp    eax,0x2
  4157a4:	mov    rax,QWORD PTR [rbp+0x98]
  4157ab:	lea    r12,[rax+r14*1]
  4157af:	mov    rax,QWORD PTR [rbp+0x70]
  4157b3:	jne    0x415b05
  4157b9:	mov    QWORD PTR [rsp+0x30],rax
  4157be:	mov    eax,DWORD PTR [rbp+0xc4]
  4157c4:	mov    rdx,rbx
  4157c7:	mov    DWORD PTR [rsp+0x28],r9d
  4157cc:	mov    r8,QWORD PTR [rbp+0x90]
  4157d3:	mov    rcx,r12
  4157d6:	mov    r9d,DWORD PTR [rbp+0xc0]
  4157dd:	mov    DWORD PTR [rsp+0x20],eax
  4157e1:	call   0x414d90
  4157e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157f0:	movsxd rdx,DWORD PTR [rbp+0xbc]
  4157f7:	test   edx,edx
  4157f9:	js     0x415953
  4157ff:	movsxd rcx,edx
  415802:	cmp    rcx,rbx
  415805:	jae    0x415812
  415807:	cmp    BYTE PTR [r12+rcx*1],0x0
  41580c:	jne    0x415b00
  415812:	cmp    eax,edx
  415814:	jle    0x41581f
  415816:	mov    DWORD PTR [rbp+0xbc],eax
  41581c:	movsxd rdx,eax
  41581f:	lea    eax,[rdx+0x1]
  415822:	cmp    rax,rbx
  415825:	jb     0x416380
  41582b:	cmp    rbx,0x7fffffff
  415832:	je     0x4163a0
  415838:	lea    rcx,[rsi+rsi*1]
  41583c:	test   rsi,rsi
  41583f:	mov    rax,0xffffffffffffffff
  415846:	cmovs  rcx,rax
  41584a:	add    edx,0x2
  41584d:	add    rdx,r14
  415850:	jb     0x41585c
  415852:	cmp    rcx,rdx
  415855:	mov    rax,rdx
  415858:	cmovae rax,rcx
  41585c:	cmp    rsi,rax
  41585f:	jae    0x41555c
  415865:	test   rsi,rsi
  415868:	je     0x415b21
  41586e:	js     0x416420
  415874:	add    rsi,rsi
  415877:	cmp    rsi,rax
  41587a:	cmovb  rsi,rax
  41587e:	cmp    rsi,0xffffffffffffffff
  415882:	je     0x416420
  415888:	mov    rax,QWORD PTR [rbp+0x98]
  41588f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415896:	sete   bl
  415899:	test   rax,rax
  41589c:	je     0x415b30
  4158a2:	test   bl,bl
  4158a4:	jne    0x415b30
  4158aa:	mov    rcx,QWORD PTR [rbp+0x98]
  4158b1:	mov    rdx,rsi
  4158b4:	call   0x414ca0
  4158b9:	mov    r9,rax
  4158bc:	test   r9,r9
  4158bf:	je     0x416420
  4158c5:	test   bl,bl
  4158c7:	je     0x4158d2
  4158c9:	test   r14,r14
  4158cc:	jne    0x415db0
  4158d2:	mov    QWORD PTR [rbp+0x98],r9
  4158d9:	jmp    0x41555c
  4158de:	xchg   ax,ax
  4158e0:	mov    rax,QWORD PTR [r13+0x50]
  4158e4:	shl    rax,0x5
  4158e8:	add    rax,QWORD PTR [rbp+0x118]
  4158ef:	mov    r9,QWORD PTR [rax+0x10]
  4158f3:	mov    eax,DWORD PTR [rbp+0x78]
  4158f6:	cmp    eax,0x1
  4158f9:	je     0x415dd0
  4158ff:	cmp    eax,0x2
  415902:	mov    rax,QWORD PTR [rbp+0x98]
  415909:	lea    r12,[rax+r14*1]
  41590d:	mov    rax,QWORD PTR [rbp+0x70]
  415911:	jne    0x415c00
  415917:	mov    QWORD PTR [rsp+0x30],rax
  41591c:	mov    QWORD PTR [rsp+0x28],r9
  415921:	mov    eax,DWORD PTR [rbp+0xc4]
  415927:	mov    r9d,DWORD PTR [rbp+0xc0]
  41592e:	mov    rdx,rbx
  415931:	mov    r8,QWORD PTR [rbp+0x90]
  415938:	mov    rcx,r12
  41593b:	mov    DWORD PTR [rsp+0x20],eax
  41593f:	call   0x414d90
  415944:	movsxd rdx,DWORD PTR [rbp+0xbc]
  41594b:	test   edx,edx
  41594d:	jns    0x4157ff
  415953:	cmp    BYTE PTR [rdi+0x1],0x0
  415957:	je     0x415b90
  41595d:	mov    BYTE PTR [rdi+0x1],0x0
  415961:	jmp    0x41555c
  415966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415970:	mov    rax,QWORD PTR [r13+0x50]
  415974:	shl    rax,0x5
  415978:	add    rax,QWORD PTR [rbp+0x118]
  41597f:	movzx  r9d,WORD PTR [rax+0x10]
  415984:	mov    eax,DWORD PTR [rbp+0x78]
  415987:	cmp    eax,0x1
  41598a:	jne    0x4157a1
  415990:	mov    rax,QWORD PTR [rbp+0x98]
  415997:	mov    DWORD PTR [rsp+0x20],r9d
  41599c:	mov    rdx,rbx
  41599f:	mov    r9d,DWORD PTR [rbp+0xc0]
  4159a6:	mov    r8,QWORD PTR [rbp+0x90]
  4159ad:	lea    r12,[rax+r14*1]
  4159b1:	mov    rax,QWORD PTR [rbp+0x70]
  4159b5:	mov    rcx,r12
  4159b8:	mov    QWORD PTR [rsp+0x28],rax
  4159bd:	call   0x414d90
  4159c2:	jmp    0x4157f0
  4159c7:	nop    WORD PTR [rax+rax*1+0x0]
  4159d0:	mov    rax,QWORD PTR [r13+0x50]
  4159d4:	shl    rax,0x5
  4159d8:	add    rax,QWORD PTR [rbp+0x118]
  4159df:	movsx  r9d,BYTE PTR [rax+0x10]
  4159e4:	mov    eax,DWORD PTR [rbp+0x78]
  4159e7:	cmp    eax,0x1
  4159ea:	jne    0x4157a1
  4159f0:	jmp    0x415990
  4159f2:	mov    rax,QWORD PTR [r13+0x50]
  4159f6:	shl    rax,0x5
  4159fa:	add    rax,QWORD PTR [rbp+0x118]
  415a01:	movsd  xmm0,QWORD PTR [rax+0x10]
  415a06:	mov    eax,DWORD PTR [rbp+0x78]
  415a09:	cmp    eax,0x1
  415a0c:	je     0x416342
  415a12:	cmp    eax,0x2
  415a15:	mov    rax,QWORD PTR [rbp+0x98]
  415a1c:	lea    r12,[rax+r14*1]
  415a20:	mov    rax,QWORD PTR [rbp+0x70]
  415a24:	jne    0x415f04
  415a2a:	mov    QWORD PTR [rsp+0x30],rax
  415a2f:	mov    eax,DWORD PTR [rbp+0xc4]
  415a35:	movsd  QWORD PTR [rsp+0x28],xmm0
  415a3b:	mov    r9d,DWORD PTR [rbp+0xc0]
  415a42:	mov    r8,QWORD PTR [rbp+0x90]
  415a49:	mov    rdx,rbx
  415a4c:	mov    rcx,r12
  415a4f:	mov    DWORD PTR [rsp+0x20],eax
  415a53:	call   0x414d90
  415a58:	jmp    0x4157f0
  415a5d:	nop    DWORD PTR [rax]
  415a60:	mov    rax,QWORD PTR [r13+0x50]
  415a64:	shl    rax,0x5
  415a68:	add    rax,QWORD PTR [rbp+0x118]
  415a6f:	fld    TBYTE PTR [rax+0x10]
  415a72:	mov    eax,DWORD PTR [rbp+0x78]
  415a75:	cmp    eax,0x1
  415a78:	fstp   TBYTE PTR [rbp+0xa0]
  415a7e:	je     0x416320
  415a84:	cmp    eax,0x2
  415a87:	mov    rax,QWORD PTR [rbp+0x98]
  415a8e:	lea    r12,[rax+r14*1]
  415a92:	mov    rax,QWORD PTR [rbp+0x70]
  415a96:	jne    0x415ee4
  415a9c:	mov    QWORD PTR [rsp+0x30],rax
  415aa1:	mov    rax,QWORD PTR [rbp+0x40]
  415aa5:	mov    QWORD PTR [rsp+0x28],rax
  415aaa:	jmp    0x415921
  415aaf:	nop
  415ab0:	mov    rax,QWORD PTR [r13+0x50]
  415ab4:	shl    rax,0x5
  415ab8:	add    rax,QWORD PTR [rbp+0x118]
  415abf:	movsx  r9d,WORD PTR [rax+0x10]
  415ac4:	mov    eax,DWORD PTR [rbp+0x78]
  415ac7:	cmp    eax,0x1
  415aca:	jne    0x4157a1
  415ad0:	jmp    0x415990
  415ad5:	mov    rax,QWORD PTR [r13+0x50]
  415ad9:	shl    rax,0x5
  415add:	add    rax,QWORD PTR [rbp+0x118]
  415ae4:	movzx  r9d,BYTE PTR [rax+0x10]
  415ae9:	mov    eax,DWORD PTR [rbp+0x78]
  415aec:	cmp    eax,0x1
  415aef:	jne    0x4157a1
  415af5:	jmp    0x415990
  415afa:	nop    WORD PTR [rax+rax*1+0x0]
  415b00:	call   0x421eb8
  415b05:	mov    r8,QWORD PTR [rbp+0x90]
  415b0c:	mov    QWORD PTR [rsp+0x20],rax
  415b11:	mov    rdx,rbx
  415b14:	mov    rcx,r12
  415b17:	call   0x414d90
  415b1c:	jmp    0x4157f0
  415b21:	mov    esi,0xc
  415b26:	jmp    0x415877
  415b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b30:	mov    rcx,rsi
  415b33:	call   0x4145c0
  415b38:	mov    r9,rax
  415b3b:	jmp    0x4158bc
  415b40:	mov    rcx,r12
  415b43:	call   0x4145c0
  415b48:	movzx  r8d,BYTE PTR [rbp+0x68]
  415b4d:	mov    QWORD PTR [rbp+0x98],rax
  415b54:	jmp    0x415460
  415b59:	nop    DWORD PTR [rax+0x0]
  415b60:	mov    QWORD PTR [rbp+0x98],rbx
  415b67:	jmp    0x41548a
  415b6c:	nop    DWORD PTR [rax+0x0]
  415b70:	mov    DWORD PTR [rbp+0x78],edx
  415b73:	jmp    0x4151f0
  415b78:	nop    DWORD PTR [rax+rax*1+0x0]
  415b80:	xor    edx,edx
  415b82:	jmp    0x4151be
  415b87:	nop    WORD PTR [rax+rax*1+0x0]
  415b90:	test   eax,eax
  415b92:	jns    0x415816
  415b98:	movzx  eax,BYTE PTR [r13+0x48]
  415b9d:	mov    rcx,QWORD PTR [r13+0x50]
  415ba1:	sub    eax,0x41
  415ba4:	cmp    al,0x37
  415ba6:	ja     0x415b00
  415bac:	lea    rdx,[rip+0x16969]        # 0x42c51c
  415bb3:	movzx  eax,al
  415bb6:	movsxd rax,DWORD PTR [rdx+rax*4]
  415bba:	add    rdx,rax
  415bbd:	jmp    rdx
  415bbf:	nop
  415bc0:	cmp    rcx,0xffffffffffffffff
  415bc4:	je     0x415280
  415bca:	call   0x4145c0
  415bcf:	test   rax,rax
  415bd2:	mov    QWORD PTR [rbp+0x90],rax
  415bd9:	je     0x415280
  415bdf:	cmp    QWORD PTR [rbp+0x4e0],0x0
  415be7:	mov    rax,QWORD PTR [rbp+0x90]
  415bee:	mov    QWORD PTR [rbp+0x50],rax
  415bf2:	jne    0x414e94
  415bf8:	xor    r12d,r12d
  415bfb:	jmp    0x414e9e
  415c00:	mov    r8,QWORD PTR [rbp+0x90]
  415c07:	mov    QWORD PTR [rsp+0x20],rax
  415c0c:	mov    rdx,rbx
  415c0f:	mov    rcx,r12
  415c12:	call   0x414d90
  415c17:	jmp    0x4157f0
  415c1c:	mov    r8,QWORD PTR [r13+0x30]
  415c20:	mov    r11,QWORD PTR [r13+0x38]
  415c24:	mov    QWORD PTR [rbp+0x68],0x0
  415c2c:	mov    DWORD PTR [rbp+0x88],0x0
  415c36:	cmp    r8,r11
  415c39:	jne    0x41563b
  415c3f:	mov    rsi,QWORD PTR [rax+0x10]
  415c43:	mov    rcx,rsi
  415c46:	xor    edi,edi
  415c48:	xor    r15d,r15d
  415c4b:	call   0x421d38
  415c50:	lea    rax,[rsi+rax*2]
  415c54:	mov    QWORD PTR [rbp+0x98],rax
  415c5b:	xor    r9d,r9d
  415c5e:	mov    QWORD PTR [rbp+0x30],0x0
  415c66:	mov    rcx,QWORD PTR [rbp+0x68]
  415c6a:	cmp    QWORD PTR [rbp+0x30],rcx
  415c6e:	jae    0x416131
  415c74:	test   BYTE PTR [r13+0x10],0x2
  415c79:	jne    0x416131
  415c7f:	mov    r11,QWORD PTR [rbp+0x68]
  415c83:	sub    r11,QWORD PTR [rbp+0x30]
  415c87:	mov    rax,r11
  415c8a:	add    rax,r14
  415c8d:	mov    rcx,rax
  415c90:	mov    QWORD PTR [rbp+0x88],rax
  415c97:	mov    rax,0xffffffffffffffff
  415c9e:	cmovae rax,rcx
  415ca2:	cmp    r12,rax
  415ca5:	jae    0x416a67
  415cab:	test   r12,r12
  415cae:	je     0x416a32
  415cb4:	js     0x415ce0
  415cb6:	add    r12,r12
  415cb9:	cmp    r14,rcx
  415cbc:	ja     0x415ce0
  415cbe:	cmp    r12,QWORD PTR [rbp+0x88]
  415cc5:	jae    0x41608e
  415ccb:	mov    rax,QWORD PTR [rbp+0x88]
  415cd2:	mov    r12,rax
  415cd5:	add    rax,0x1
  415cd9:	jne    0x41608e
  415cdf:	nop
  415ce0:	mov    QWORD PTR [rbp+0x98],rbx
  415ce7:	nop    WORD PTR [rax+rax*1+0x0]
  415cf0:	mov    rax,QWORD PTR [rip+0x232d5]        # 0x438fcc
  415cf7:	mov    QWORD PTR [rbp+0x68],rax
  415cfb:	jmp    0x415250
  415d00:	xor    r15d,r15d
  415d03:	movabs r11,0x1999999999999999
  415d0d:	nop    DWORD PTR [rax]
  415d10:	add    rcx,0x1
  415d14:	movsx  eax,BYTE PTR [rcx-0x1]
  415d18:	mov    rdx,0xffffffffffffffff
  415d1f:	sub    eax,0x30
  415d22:	cmp    r15,r11
  415d25:	cdqe   
  415d27:	ja     0x415d30
  415d29:	lea    rdx,[r15+r15*4]
  415d2d:	add    rdx,rdx
  415d30:	add    rdx,rax
  415d33:	mov    rax,0xffffffffffffffff
  415d3a:	mov    r15,rdx
  415d3d:	cmovb  r15,rax
  415d41:	cmp    rcx,r9
  415d44:	jne    0x415d10
  415d46:	jmp    0x41504d
  415d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d50:	add    rdx,0x1
  415d54:	xor    esi,esi
  415d56:	cmp    rcx,rdx
  415d59:	je     0x415089
  415d5f:	movabs r9,0x1999999999999999
  415d69:	nop    DWORD PTR [rax+0x0]
  415d70:	add    rdx,0x1
  415d74:	movsx  eax,BYTE PTR [rdx-0x1]
  415d78:	mov    r10,0xffffffffffffffff
  415d7f:	sub    eax,0x30
  415d82:	cmp    rsi,r9
  415d85:	cdqe   
  415d87:	ja     0x415d90
  415d89:	lea    r10,[rsi+rsi*4]
  415d8d:	add    r10,r10
  415d90:	mov    rsi,r10
  415d93:	add    rsi,rax
  415d96:	mov    rax,0xffffffffffffffff
  415d9d:	cmovb  rsi,rax
  415da1:	cmp    rdx,rcx
  415da4:	jne    0x415d70
  415da6:	jmp    0x415089
  415dab:	nop    DWORD PTR [rax+rax*1+0x0]
  415db0:	mov    rdx,QWORD PTR [rbp+0x98]
  415db7:	mov    r8,r14
  415dba:	mov    rcx,r9
  415dbd:	call   0x421e08
  415dc2:	mov    QWORD PTR [rbp+0x98],rax
  415dc9:	jmp    0x41555c
  415dce:	xchg   ax,ax
  415dd0:	mov    rax,QWORD PTR [rbp+0x98]
  415dd7:	mov    QWORD PTR [rsp+0x20],r9
  415ddc:	lea    r12,[rax+r14*1]
  415de0:	mov    rax,QWORD PTR [rbp+0x70]
  415de4:	mov    QWORD PTR [rsp+0x28],rax
  415de9:	mov    r9d,DWORD PTR [rbp+0xc0]
  415df0:	mov    r8,QWORD PTR [rbp+0x90]
  415df7:	mov    rdx,rbx
  415dfa:	mov    rcx,r12
  415dfd:	call   0x414d90
  415e02:	jmp    0x4157f0
  415e07:	nop    WORD PTR [rax+rax*1+0x0]
  415e10:	or     r8d,0x2
  415e14:	neg    r15
  415e17:	jmp    0x41504d
  415e1c:	nop    DWORD PTR [rax+0x0]
  415e20:	xor    r15d,r15d
  415e23:	jmp    0x41504d
  415e28:	nop    DWORD PTR [rax+rax*1+0x0]
  415e30:	mov    r12d,0xc
  415e36:	jmp    0x415344
  415e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  415e40:	mov    rcx,r12
  415e43:	call   0x4145c0
  415e48:	mov    r9,rax
  415e4b:	jmp    0x415380
  415e50:	xor    eax,eax
  415e52:	jmp    0x4152cb
  415e57:	nop    WORD PTR [rax+rax*1+0x0]
  415e60:	mov    BYTE PTR [rdi],0x4c
  415e63:	add    rdi,0x1
  415e67:	jmp    0x415183
  415e6c:	nop    DWORD PTR [rax+0x0]
  415e70:	mov    rdx,rbx
  415e73:	mov    r8,r14
  415e76:	mov    rcx,r9
  415e79:	call   0x421e08
  415e7e:	mov    rbx,rax
  415e81:	jmp    0x41539a
  415e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e90:	mov    QWORD PTR [rax],r14
  415e93:	mov    r15,r14
  415e96:	mov    QWORD PTR [rbp+0x98],rbx
  415e9d:	jmp    0x4153a6
  415ea2:	mov    WORD PTR [rax],r14w
  415ea6:	mov    r15,r14
  415ea9:	mov    QWORD PTR [rbp+0x98],rbx
  415eb0:	jmp    0x4153a6
  415eb5:	mov    BYTE PTR [rax],r14b
  415eb8:	mov    r15,r14
  415ebb:	mov    QWORD PTR [rbp+0x98],rbx
  415ec2:	jmp    0x4153a6
  415ec7:	nop    WORD PTR [rax+rax*1+0x0]
  415ed0:	mov    BYTE PTR [rdi],0x49
  415ed3:	mov    BYTE PTR [rdi+0x1],0x36
  415ed7:	add    rdi,0x3
  415edb:	mov    BYTE PTR [rdi-0x1],0x34
  415edf:	jmp    0x415183
  415ee4:	mov    r9,QWORD PTR [rbp+0x40]
  415ee8:	mov    r8,QWORD PTR [rbp+0x90]
  415eef:	mov    rdx,rbx
  415ef2:	mov    QWORD PTR [rsp+0x20],rax
  415ef7:	mov    rcx,r12
  415efa:	call   0x414d90
  415eff:	jmp    0x4157f0
  415f04:	mov    r8,QWORD PTR [rbp+0x90]
  415f0b:	movapd xmm3,xmm0
  415f0f:	movq   r9,xmm0
  415f14:	mov    QWORD PTR [rsp+0x20],rax
  415f19:	mov    rdx,rbx
  415f1c:	mov    rcx,r12
  415f1f:	call   0x414d90
  415f24:	jmp    0x4157f0
  415f29:	nop    DWORD PTR [rax+0x0]
  415f30:	mov    rcx,rax
  415f33:	call   0x421e50
  415f38:	jmp    0x415269
  415f3d:	cmp    DWORD PTR [rbp+0x88],0x10
  415f44:	je     0x415b00
  415f4a:	mov    rax,rcx
  415f4d:	mov    edx,DWORD PTR [rbp+0x28]
  415f50:	shl    rax,0x5
  415f54:	add    rax,QWORD PTR [rbp+0x118]
  415f5b:	test   edx,edx
  415f5d:	mov    rcx,QWORD PTR [rax+0x10]
  415f61:	jne    0x416b0e
  415f67:	call   0x421d98
  415f6c:	cmp    r15,rax
  415f6f:	jbe    0x416a77
  415f75:	lea    rdx,[r15+0x1]
  415f79:	mov    rax,r15
  415f7c:	cmp    rdx,rax
  415f7f:	jae    0x416917
  415f85:	mov    rdx,0xffffffffffffffff
  415f8c:	add    rdx,r14
  415f8f:	mov    rax,0xffffffffffffffff
  415f96:	cmovb  rdx,rax
  415f9a:	test   rsi,rsi
  415f9d:	js     0x416a6f
  415fa3:	lea    r8,[rsi+rsi*1]
  415fa7:	lea    rcx,[r8+0xc]
  415fab:	cmp    r8,rcx
  415fae:	ja     0x415865
  415fb4:	cmp    rdx,rcx
  415fb7:	cmovb  rdx,rcx
  415fbb:	cmp    rsi,rdx
  415fbe:	mov    rax,rdx
  415fc1:	jae    0x41555c
  415fc7:	jmp    0x415865
  415fcc:	mov    eax,0x13
  415fd1:	jmp    0x415f6c
  415fd3:	mov    rcx,QWORD PTR [rbp+0x10]
  415fd7:	cmp    QWORD PTR [rbp-0x18],rcx
  415fdb:	ja     0x41606d
  415fe1:	mov    rax,QWORD PTR [rbp+0x10]
  415fe5:	jmp    0x415f6c
  415fe7:	xor    edx,edx
  415fe9:	mov    r11,QWORD PTR [rbp-0x38]
  415fed:	cmp    QWORD PTR [rbp+0x20],r11
  415ff1:	mov    rax,0xffffffffffffffff
  415ff8:	jb     0x415f7c
  415ffa:	mov    r11,QWORD PTR [rbp+0x18]
  415ffe:	cmp    QWORD PTR [rbp+0x20],r11
  416002:	ja     0x415f7c
  416008:	mov    rax,QWORD PTR [rbp+0x18]
  41600c:	jmp    0x415f6c
  416011:	cmp    DWORD PTR [rbp+0x88],0xe
  416018:	mov    eax,0x1
  41601d:	jne    0x415f6c
  416023:	mov    rax,QWORD PTR [rip+0x17466]        # 0x42d490
  41602a:	mov    rax,QWORD PTR [rax]
  41602d:	movsxd rax,DWORD PTR [rax]
  416030:	jmp    0x415f6c
  416035:	mov    rcx,QWORD PTR [rbp+0x8]
  416039:	cmp    QWORD PTR [rbp-0x20],rcx
  41603d:	ja     0x41606d
  41603f:	mov    rax,QWORD PTR [rbp+0x8]
  416043:	jmp    0x415f6c
  416048:	mov    rcx,QWORD PTR [rbp+0x0]
  41604c:	cmp    QWORD PTR [rbp-0x28],rcx
  416050:	ja     0x41606d
  416052:	mov    rax,QWORD PTR [rbp+0x0]
  416056:	jmp    0x415f6c
  41605b:	mov    rax,QWORD PTR [rbp-0x10]
  41605f:	add    rax,0xc
  416063:	cmp    rax,0xb
  416067:	ja     0x415f6c
  41606d:	xor    edx,edx
  41606f:	mov    rax,0xffffffffffffffff
  416076:	jmp    0x415f7c
  41607b:	mov    rcx,QWORD PTR [rbp-0x30]
  41607f:	cmp    QWORD PTR [rbp-0x8],rcx
  416083:	jb     0x41606d
  416085:	mov    rax,QWORD PTR [rbp-0x8]
  416089:	jmp    0x415f6c
  41608e:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  416095:	mov    DWORD PTR [rbp+0x20],r9d
  416099:	mov    QWORD PTR [rbp+0x78],r11
  41609d:	sete   r8b
  4160a1:	test   rbx,rbx
  4160a4:	mov    BYTE PTR [rbp+0x28],r8b
  4160a8:	je     0x416a4a
  4160ae:	test   r8b,r8b
  4160b1:	jne    0x416a4a
  4160b7:	mov    rdx,r12
  4160ba:	mov    rcx,rbx
  4160bd:	call   0x414ca0
  4160c2:	movzx  r8d,BYTE PTR [rbp+0x28]
  4160c7:	mov    r9d,DWORD PTR [rbp+0x20]
  4160cb:	mov    r10,rax
  4160ce:	mov    r11,QWORD PTR [rbp+0x78]
  4160d2:	test   r10,r10
  4160d5:	je     0x415ce0
  4160db:	test   r14,r14
  4160de:	je     0x416106
  4160e0:	test   r8b,r8b
  4160e3:	je     0x416106
  4160e5:	mov    rcx,r10
  4160e8:	mov    r8,r14
  4160eb:	mov    rdx,rbx
  4160ee:	mov    DWORD PTR [rbp+0x28],r9d
  4160f2:	mov    QWORD PTR [rbp+0x78],r11
  4160f6:	call   0x421e08
  4160fb:	mov    r11,QWORD PTR [rbp+0x78]
  4160ff:	mov    r9d,DWORD PTR [rbp+0x28]
  416103:	mov    r10,rax
  416106:	lea    rcx,[r10+r14*1]
  41610a:	mov    r8,r11
  41610d:	mov    edx,0x20
  416112:	mov    DWORD PTR [rbp+0x28],r9d
  416116:	mov    QWORD PTR [rbp+0x78],r10
  41611a:	call   0x421df8
  41611f:	mov    r10,QWORD PTR [rbp+0x78]
  416123:	mov    r14,QWORD PTR [rbp+0x88]
  41612a:	mov    r9d,DWORD PTR [rbp+0x28]
  41612e:	mov    rbx,r10
  416131:	or     r9d,r15d
  416134:	je     0x416430
  41613a:	mov    rdx,rdi
  41613d:	mov    rax,0xffffffffffffffff
  416144:	mov    DWORD PTR [rbp+0xb4],0x0
  41614e:	add    rdx,r14
  416151:	cmovae rax,rdx
  416155:	cmp    rax,r12
  416158:	jbe    0x416635
  41615e:	test   r12,r12
  416161:	je     0x4165cf
  416167:	js     0x416175
  416169:	add    r12,r12
  41616c:	cmp    rdx,r14
  41616f:	jae    0x4165de
  416175:	mov    rax,QWORD PTR [rip+0x22e50]        # 0x438fcc
  41617c:	mov    QWORD PTR [rbp+0x98],rbx
  416183:	mov    QWORD PTR [rbp+0x68],rax
  416187:	jmp    0x415250
  41618c:	nop    DWORD PTR [rax+0x0]
  416190:	mov    rax,QWORD PTR [rbp+0x60]
  416194:	mov    rcx,QWORD PTR [rbp+0x208]
  41619b:	add    rax,0x20
  41619f:	cmp    rcx,rax
  4161a2:	je     0x4161a9
  4161a4:	call   0x421e50
  4161a9:	mov    rax,QWORD PTR [rbp+0x58]
  4161ad:	mov    rcx,QWORD PTR [rbp+0x118]
  4161b4:	add    rax,0x10
  4161b8:	cmp    rcx,rax
  4161bb:	je     0x4161c2
  4161bd:	call   0x421e50
  4161c2:	call   QWORD PTR [rip+0x22e04]        # 0x438fcc
  4161c8:	mov    DWORD PTR [rax],0x16
  4161ce:	xor    eax,eax
  4161d0:	jmp    0x4152cb
  4161d5:	mov    rax,rbx
  4161d8:	lea    rsi,[r14+0x1]
  4161dc:	mov    r15,rbx
  4161df:	mov    QWORD PTR [rbp+0x98],rax
  4161e6:	mov    rax,0xffffffffffffffff
  4161ed:	mov    rbx,r12
  4161f0:	cmp    rsi,r14
  4161f3:	mov    rdx,rax
  4161f6:	cmovae rdx,rsi
  4161fa:	cmp    rdx,r12
  4161fd:	jbe    0x416288
  416203:	test   r12,r12
  416206:	je     0x4168fa
  41620c:	js     0x416ac6
  416212:	add    rbx,rbx
  416215:	cmp    rsi,r14
  416218:	mov    rax,rsi
  41621b:	jae    0x416224
  41621d:	mov    rax,0xffffffffffffffff
  416224:	cmp    rax,rbx
  416227:	jbe    0x416235
  416229:	cmp    rsi,r14
  41622c:	jb     0x415cf0
  416232:	mov    rbx,rsi
  416235:	cmp    rbx,0xffffffffffffffff
  416239:	je     0x415cf0
  41623f:	cmp    QWORD PTR [rbp+0x4e0],r15
  416246:	sete   dil
  41624a:	test   r15,r15
  41624d:	je     0x4169be
  416253:	test   dil,dil
  416256:	jne    0x4169be
  41625c:	mov    rdx,rbx
  41625f:	mov    rcx,r15
  416262:	call   0x414ca0
  416267:	mov    r9,rax
  41626a:	test   r9,r9
  41626d:	je     0x415cf0
  416273:	test   r14,r14
  416276:	je     0x416281
  416278:	test   dil,dil
  41627b:	jne    0x416a18
  416281:	mov    QWORD PTR [rbp+0x98],r9
  416288:	mov    rax,QWORD PTR [rbp+0x98]
  41628f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416296:	mov    BYTE PTR [rax+r14*1],0x0
  41629b:	je     0x4162be
  41629d:	cmp    rbx,rsi
  4162a0:	jbe    0x4162be
  4162a2:	mov    rdx,rsi
  4162a5:	mov    rcx,rax
  4162a8:	mov    rdi,rax
  4162ab:	call   0x414ca0
  4162b0:	test   rax,rax
  4162b3:	cmove  rax,rdi
  4162b7:	mov    QWORD PTR [rbp+0x98],rax
  4162be:	mov    rax,QWORD PTR [rbp+0x50]
  4162c2:	test   rax,rax
  4162c5:	je     0x4162cf
  4162c7:	mov    rcx,rax
  4162ca:	call   0x421e50
  4162cf:	mov    rax,QWORD PTR [rbp+0x60]
  4162d3:	mov    rcx,QWORD PTR [rbp+0x208]
  4162da:	add    rax,0x20
  4162de:	cmp    rcx,rax
  4162e1:	je     0x4162e8
  4162e3:	call   0x421e50
  4162e8:	mov    rax,QWORD PTR [rbp+0x58]
  4162ec:	mov    rcx,QWORD PTR [rbp+0x118]
  4162f3:	add    rax,0x10
  4162f7:	cmp    rcx,rax
  4162fa:	je     0x416301
  4162fc:	call   0x421e50
  416301:	mov    rax,QWORD PTR [rbp+0x4e8]
  416308:	mov    QWORD PTR [rax],r14
  41630b:	mov    rax,QWORD PTR [rbp+0x98]
  416312:	jmp    0x4152cb
  416317:	nop    WORD PTR [rax+rax*1+0x0]
  416320:	mov    rax,QWORD PTR [rbp+0x98]
  416327:	lea    r12,[rax+r14*1]
  41632b:	mov    rax,QWORD PTR [rbp+0x70]
  41632f:	mov    QWORD PTR [rsp+0x28],rax
  416334:	mov    rax,QWORD PTR [rbp+0x40]
  416338:	mov    QWORD PTR [rsp+0x20],rax
  41633d:	jmp    0x415de9
  416342:	mov    rax,QWORD PTR [rbp+0x98]
  416349:	mov    r9d,DWORD PTR [rbp+0xc0]
  416350:	movsd  QWORD PTR [rsp+0x20],xmm0
  416356:	mov    r8,QWORD PTR [rbp+0x90]
  41635d:	mov    rdx,rbx
  416360:	lea    r12,[rax+r14*1]
  416364:	mov    rax,QWORD PTR [rbp+0x70]
  416368:	mov    rcx,r12
  41636b:	mov    QWORD PTR [rsp+0x28],rax
  416370:	call   0x414d90
  416375:	jmp    0x4157f0
  41637a:	nop    WORD PTR [rax+rax*1+0x0]
  416380:	lea    r15,[rdx+r14*1]
  416384:	mov    r12,rsi
  416387:	call   QWORD PTR [rip+0x22c3f]        # 0x438fcc
  41638d:	mov    edi,DWORD PTR [rbp+0x30]
  416390:	mov    DWORD PTR [rax],edi
  416392:	jmp    0x4153a6
  416397:	nop    WORD PTR [rax+rax*1+0x0]
  4163a0:	mov    rax,QWORD PTR [rbp+0x98]
  4163a7:	test   rax,rax
  4163aa:	je     0x4163c1
  4163ac:	cmp    QWORD PTR [rbp+0x4e0],rax
  4163b3:	je     0x4163c1
  4163b5:	mov    rcx,QWORD PTR [rbp+0x98]
  4163bc:	call   0x421e50
  4163c1:	mov    rax,QWORD PTR [rbp+0x50]
  4163c5:	test   rax,rax
  4163c8:	je     0x4163d2
  4163ca:	mov    rcx,rax
  4163cd:	call   0x421e50
  4163d2:	mov    rax,QWORD PTR [rbp+0x60]
  4163d6:	mov    rcx,QWORD PTR [rbp+0x208]
  4163dd:	add    rax,0x20
  4163e1:	cmp    rcx,rax
  4163e4:	je     0x4163eb
  4163e6:	call   0x421e50
  4163eb:	mov    rax,QWORD PTR [rbp+0x58]
  4163ef:	mov    rcx,QWORD PTR [rbp+0x118]
  4163f6:	add    rax,0x10
  4163fa:	cmp    rcx,rax
  4163fd:	je     0x416404
  4163ff:	call   0x421e50
  416404:	call   QWORD PTR [rip+0x22bc2]        # 0x438fcc
  41640a:	mov    DWORD PTR [rax],0x84
  416410:	xor    eax,eax
  416412:	jmp    0x4152cb
  416417:	nop    WORD PTR [rax+rax*1+0x0]
  416420:	mov    rax,QWORD PTR [rbp+0x98]
  416427:	mov    r15,rax
  41642a:	jmp    0x41523f
  41642f:	nop
  416430:	cmp    rsi,QWORD PTR [rbp+0x98]
  416437:	mov    DWORD PTR [rbp+0xb8],0x0
  416441:	jae    0x416b24
  416447:	movzx  edx,WORD PTR [rsi]
  41644a:	test   dx,dx
  41644d:	je     0x415b00
  416453:	lea    rax,[rbp+0xb8]
  41645a:	mov    rdi,QWORD PTR [rbp+0x48]
  41645e:	mov    QWORD PTR [rbp+0x28],r13
  416462:	mov    QWORD PTR [rbp+0x88],rax
  416469:	nop    DWORD PTR [rax+0x0]
  416470:	mov    r8,QWORD PTR [rbp+0x88]
  416477:	mov    rcx,rdi
  41647a:	call   0x41d120
  41647f:	test   eax,eax
  416481:	jle    0x4169ce
  416487:	movsxd r13,eax
  41648a:	mov    rax,0xffffffffffffffff
  416491:	mov    r15,r13
  416494:	add    r15,r14
  416497:	cmovae rax,r15
  41649b:	cmp    rax,r12
  41649e:	jbe    0x41652e
  4164a4:	test   r12,r12
  4164a7:	je     0x4164d0
  4164a9:	js     0x4164b3
  4164ab:	add    r12,r12
  4164ae:	cmp    r15,r14
  4164b1:	jae    0x4164db
  4164b3:	mov    rax,QWORD PTR [rip+0x22b12]        # 0x438fcc
  4164ba:	mov    QWORD PTR [rbp+0x98],rbx
  4164c1:	mov    QWORD PTR [rbp+0x68],rax
  4164c5:	jmp    0x415250
  4164ca:	nop    WORD PTR [rax+rax*1+0x0]
  4164d0:	cmp    r15,r14
  4164d3:	jb     0x4164b3
  4164d5:	mov    r12d,0xc
  4164db:	cmp    r12,r15
  4164de:	jae    0x4164f0
  4164e0:	cmp    r15,0xffffffffffffffff
  4164e4:	mov    r12,r15
  4164e7:	je     0x4164b3
  4164e9:	nop    DWORD PTR [rax+0x0]
  4164f0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4164f7:	sete   r8b
  4164fb:	test   rbx,rbx
  4164fe:	mov    BYTE PTR [rbp+0x78],r8b
  416502:	je     0x416562
  416504:	test   r8b,r8b
  416507:	jne    0x416562
  416509:	mov    rdx,r12
  41650c:	mov    rcx,rbx
  41650f:	call   0x414ca0
  416514:	movzx  r8d,BYTE PTR [rbp+0x78]
  416519:	mov    r10,rax
  41651c:	test   r10,r10
  41651f:	je     0x4164b3
  416521:	test   r14,r14
  416524:	je     0x41652b
  416526:	test   r8b,r8b
  416529:	jne    0x416574
  41652b:	mov    rbx,r10
  41652e:	lea    rcx,[rbx+r14*1]
  416532:	mov    r8,r13
  416535:	mov    rdx,rdi
  416538:	add    rsi,0x2
  41653c:	call   0x421e08
  416541:	cmp    rsi,QWORD PTR [rbp+0x98]
  416548:	jae    0x4169f8
  41654e:	movzx  edx,WORD PTR [rsi]
  416551:	test   dx,dx
  416554:	je     0x415b00
  41655a:	mov    r14,r15
  41655d:	jmp    0x416470
  416562:	mov    rcx,r12
  416565:	call   0x4145c0
  41656a:	movzx  r8d,BYTE PTR [rbp+0x78]
  41656f:	mov    r10,rax
  416572:	jmp    0x41651c
  416574:	mov    rdx,rbx
  416577:	mov    r8,r14
  41657a:	mov    rcx,r10
  41657d:	call   0x421e08
  416582:	mov    rbx,rax
  416585:	jmp    0x41652e
  416587:	nop    WORD PTR [rax+rax*1+0x0]
  416590:	mov    r13,QWORD PTR [rbp+0x98]
  416597:	mov    rsi,QWORD PTR [rbp+0x30]
  41659b:	mov    QWORD PTR [rbp+0x98],r12
  4165a2:	mov    r12,QWORD PTR [rbp+0x78]
  4165a6:	mov    ecx,DWORD PTR [rbp+0x88]
  4165ac:	mov    r15d,0x1
  4165b2:	test   ecx,ecx
  4165b4:	je     0x415c5b
  4165ba:	mov    QWORD PTR [rbp+0x30],rdi
  4165be:	mov    r9d,0x1
  4165c4:	mov    r15d,0x1
  4165ca:	jmp    0x415c66
  4165cf:	cmp    rdx,r14
  4165d2:	jb     0x416175
  4165d8:	mov    r12d,0xc
  4165de:	cmp    r12,rdx
  4165e1:	jae    0x4165f0
  4165e3:	cmp    rdx,0xffffffffffffffff
  4165e7:	je     0x416175
  4165ed:	mov    r12,rdx
  4165f0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4165f7:	sete   r15b
  4165fb:	test   rbx,rbx
  4165fe:	je     0x416a08
  416604:	test   r15b,r15b
  416607:	jne    0x416a08
  41660d:	mov    rdx,r12
  416610:	mov    rcx,rbx
  416613:	call   0x414ca0
  416618:	mov    r9,rax
  41661b:	test   r9,r9
  41661e:	je     0x416175
  416624:	test   r14,r14
  416627:	je     0x416632
  416629:	test   r15b,r15b
  41662c:	jne    0x416a80
  416632:	mov    rbx,r9
  416635:	test   rdi,rdi
  416638:	je     0x416b1c
  41663e:	movzx  edx,WORD PTR [rsi]
  416641:	test   dx,dx
  416644:	je     0x415b00
  41664a:	mov    r15,r14
  41664d:	mov    QWORD PTR [rbp+0x88],r13
  416654:	mov    QWORD PTR [rbp+0x78],r12
  416658:	mov    r13,QWORD PTR [rbp+0x48]
  41665c:	mov    r14,QWORD PTR [rbp+0x38]
  416660:	jmp    0x41666e
  416662:	movzx  edx,WORD PTR [rsi]
  416665:	test   dx,dx
  416668:	je     0x415b00
  41666e:	mov    r8,r14
  416671:	mov    rcx,r13
  416674:	call   0x41d120
  416679:	test   eax,eax
  41667b:	jle    0x415b00
  416681:	movsxd r12,eax
  416684:	lea    rcx,[rbx+r15*1]
  416688:	mov    rdx,r13
  41668b:	mov    r8,r12
  41668e:	add    r15,r12
  416691:	add    rsi,0x2
  416695:	call   0x421e08
  41669a:	sub    rdi,r12
  41669d:	jne    0x416662
  41669f:	mov    r13,QWORD PTR [rbp+0x88]
  4166a6:	mov    r12,QWORD PTR [rbp+0x78]
  4166aa:	cmp    rsi,QWORD PTR [rbp+0x98]
  4166b1:	jne    0x415b00
  4166b7:	mov    QWORD PTR [rbp+0x98],rbx
  4166be:	mov    rdi,QWORD PTR [rbp+0x68]
  4166c2:	cmp    QWORD PTR [rbp+0x30],rdi
  4166c6:	jae    0x4153a6
  4166cc:	test   BYTE PTR [r13+0x10],0x2
  4166d1:	je     0x4153a6
  4166d7:	sub    rdi,QWORD PTR [rbp+0x30]
  4166db:	mov    rax,0xffffffffffffffff
  4166e2:	mov    rbx,rdi
  4166e5:	add    rbx,r15
  4166e8:	cmovae rax,rbx
  4166ec:	cmp    r12,rax
  4166ef:	jae    0x416aba
  4166f5:	test   r12,r12
  4166f8:	je     0x416a96
  4166fe:	js     0x415cf0
  416704:	add    r12,r12
  416707:	cmp    r15,rbx
  41670a:	ja     0x415cf0
  416710:	cmp    r12,rbx
  416713:	jae    0x416722
  416715:	cmp    rbx,0xffffffffffffffff
  416719:	mov    r12,rbx
  41671c:	je     0x415cf0
  416722:	mov    rax,QWORD PTR [rbp+0x98]
  416729:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416730:	sete   sil
  416734:	test   rax,rax
  416737:	je     0x416aaa
  41673d:	test   sil,sil
  416740:	jne    0x416aaa
  416746:	mov    rcx,QWORD PTR [rbp+0x98]
  41674d:	mov    rdx,r12
  416750:	call   0x414ca0
  416755:	mov    r14,rax
  416758:	test   r14,r14
  41675b:	je     0x415cf0
  416761:	test   r15,r15
  416764:	je     0x41677d
  416766:	test   sil,sil
  416769:	je     0x41677d
  41676b:	mov    rdx,QWORD PTR [rbp+0x98]
  416772:	mov    r8,r15
  416775:	mov    rcx,r14
  416778:	call   0x421e08
  41677d:	lea    rcx,[r14+r15*1]
  416781:	mov    r8,rdi
  416784:	mov    edx,0x20
  416789:	mov    r15,rbx
  41678c:	call   0x421df8
  416791:	mov    QWORD PTR [rbp+0x98],r14
  416798:	jmp    0x4153a6
  41679d:	mov    rsi,QWORD PTR [rax+0x10]
  4167a1:	mov    eax,DWORD PTR [rbp+0x88]
  4167a7:	test   eax,eax
  4167a9:	je     0x415c43
  4167af:	movzx  edx,WORD PTR [rsi]
  4167b2:	mov    DWORD PTR [rbp+0xc0],0x0
  4167bc:	test   dx,dx
  4167bf:	je     0x416aec
  4167c5:	lea    rax,[rbp+0xc0]
  4167cc:	mov    QWORD PTR [rbp+0x98],r13
  4167d3:	xor    edi,edi
  4167d5:	mov    QWORD PTR [rbp+0x88],rsi
  4167dc:	mov    r15,QWORD PTR [rbp+0x48]
  4167e0:	mov    r13,rax
  4167e3:	jmp    0x4167fa
  4167e5:	add    rsi,0x2
  4167e9:	movzx  edx,WORD PTR [rsi]
  4167ec:	cdqe   
  4167ee:	add    rdi,rax
  4167f1:	test   dx,dx
  4167f4:	je     0x4168c1
  4167fa:	mov    r8,r13
  4167fd:	mov    rcx,r15
  416800:	call   0x41d120
  416805:	test   eax,eax
  416807:	jns    0x4167e5
  416809:	jmp    0x4156f8
  41680e:	add    r8,0x1
  416812:	cmp    r11,r8
  416815:	je     0x416ad7
  41681b:	xor    r15d,r15d
  41681e:	movabs r10,0x1999999999999999
  416828:	nop    DWORD PTR [rax+rax*1+0x0]
  416830:	add    r8,0x1
  416834:	movsx  edx,BYTE PTR [r8-0x1]
  416839:	mov    rcx,0xffffffffffffffff
  416840:	sub    edx,0x30
  416843:	cmp    r15,r10
  416846:	movsxd rdx,edx
  416849:	ja     0x416852
  41684b:	lea    rcx,[r15+r15*4]
  41684f:	add    rcx,rcx
  416852:	add    rcx,rdx
  416855:	mov    rdx,0xffffffffffffffff
  41685c:	mov    r15,rcx
  41685f:	cmovb  r15,rdx
  416863:	cmp    r8,r11
  416866:	jne    0x416830
  416868:	jmp    0x41566a
  41686d:	xor    esi,esi
  41686f:	movabs r11,0x1999999999999999
  416879:	nop    DWORD PTR [rax+0x0]
  416880:	add    r8,0x1
  416884:	movsx  edx,BYTE PTR [r8-0x1]
  416889:	mov    rcx,0xffffffffffffffff
  416890:	sub    edx,0x30
  416893:	cmp    rsi,r11
  416896:	movsxd rdx,edx
  416899:	ja     0x4168a2
  41689b:	lea    rcx,[rsi+rsi*4]
  41689f:	add    rcx,rcx
  4168a2:	mov    rsi,rcx
  4168a5:	add    rsi,rdx
  4168a8:	mov    rdx,0xffffffffffffffff
  4168af:	cmovb  rsi,rdx
  4168b3:	cmp    r8,r9
  4168b6:	jne    0x416880
  4168b8:	mov    QWORD PTR [rbp+0x68],rsi
  4168bc:	jmp    0x415620
  4168c1:	mov    r13,QWORD PTR [rbp+0x98]
  4168c8:	mov    QWORD PTR [rbp+0x98],rsi
  4168cf:	mov    rsi,QWORD PTR [rbp+0x88]
  4168d6:	mov    QWORD PTR [rbp+0x30],rdi
  4168da:	mov    rdi,QWORD PTR [rbp+0x68]
  4168de:	cmp    QWORD PTR [rbp+0x30],rdi
  4168e2:	mov    rdi,QWORD PTR [rbp+0x30]
  4168e6:	jae    0x41613a
  4168ec:	xor    r15d,r15d
  4168ef:	mov    r9d,0x1
  4168f5:	jmp    0x415c74
  4168fa:	cmp    rsi,r14
  4168fd:	jb     0x415cf0
  416903:	cmp    rsi,0xc
  416907:	mov    ebx,0xc
  41690c:	jbe    0x41623f
  416912:	jmp    0x416232
  416917:	cmp    rdx,rbx
  41691a:	ja     0x415f8c
  416920:	movsxd rdx,DWORD PTR [rbp+0xbc]
  416927:	test   edx,edx
  416929:	jns    0x41581f
  41692f:	call   QWORD PTR [rip+0x22697]        # 0x438fcc
  416935:	mov    ebx,DWORD PTR [rax]
  416937:	test   ebx,ebx
  416939:	jne    0x41694f
  41693b:	movzx  eax,BYTE PTR [r13+0x48]
  416940:	mov    bl,0x2a
  416942:	and    eax,0xffffffef
  416945:	cmp    al,0x63
  416947:	mov    eax,0x16
  41694c:	cmovne ebx,eax
  41694f:	mov    rax,QWORD PTR [rbp+0x98]
  416956:	test   rax,rax
  416959:	je     0x41696c
  41695b:	cmp    QWORD PTR [rbp+0x4e0],rax
  416962:	je     0x41696c
  416964:	mov    rcx,rax
  416967:	call   0x421e50
  41696c:	mov    rax,QWORD PTR [rbp+0x50]
  416970:	test   rax,rax
  416973:	je     0x41697d
  416975:	mov    rcx,rax
  416978:	call   0x421e50
  41697d:	mov    rax,QWORD PTR [rbp+0x60]
  416981:	mov    rcx,QWORD PTR [rbp+0x208]
  416988:	add    rax,0x20
  41698c:	cmp    rcx,rax
  41698f:	je     0x416996
  416991:	call   0x421e50
  416996:	mov    rax,QWORD PTR [rbp+0x58]
  41699a:	mov    rcx,QWORD PTR [rbp+0x118]
  4169a1:	add    rax,0x10
  4169a5:	cmp    rcx,rax
  4169a8:	je     0x4169af
  4169aa:	call   0x421e50
  4169af:	call   QWORD PTR [rip+0x22617]        # 0x438fcc
  4169b5:	mov    DWORD PTR [rax],ebx
  4169b7:	xor    eax,eax
  4169b9:	jmp    0x4152cb
  4169be:	mov    rcx,rbx
  4169c1:	call   0x4145c0
  4169c6:	mov    r9,rax
  4169c9:	jmp    0x41626a
  4169ce:	test   rbx,rbx
  4169d1:	mov    QWORD PTR [rbp+0x98],rbx
  4169d8:	je     0x41570e
  4169de:	cmp    QWORD PTR [rbp+0x4e0],rbx
  4169e5:	je     0x41570e
  4169eb:	mov    rcx,rbx
  4169ee:	call   0x421e50
  4169f3:	jmp    0x41570e
  4169f8:	mov    r13,QWORD PTR [rbp+0x28]
  4169fc:	mov    QWORD PTR [rbp+0x98],rbx
  416a03:	jmp    0x4166be
  416a08:	mov    rcx,r12
  416a0b:	call   0x4145c0
  416a10:	mov    r9,rax
  416a13:	jmp    0x41661b
  416a18:	mov    r8,r14
  416a1b:	mov    rdx,r15
  416a1e:	mov    rcx,r9
  416a21:	call   0x421e08
  416a26:	mov    QWORD PTR [rbp+0x98],rax
  416a2d:	jmp    0x416288
  416a32:	cmp    r14,QWORD PTR [rbp+0x88]
  416a39:	ja     0x415ce0
  416a3f:	mov    r12d,0xc
  416a45:	jmp    0x415cbe
  416a4a:	mov    rcx,r12
  416a4d:	call   0x4145c0
  416a52:	mov    r11,QWORD PTR [rbp+0x78]
  416a56:	mov    r10,rax
  416a59:	movzx  r8d,BYTE PTR [rbp+0x28]
  416a5e:	mov    r9d,DWORD PTR [rbp+0x20]
  416a62:	jmp    0x4160d2
  416a67:	mov    r10,rbx
  416a6a:	jmp    0x416106
  416a6f:	mov    rdx,rax
  416a72:	jmp    0x415fbb
  416a77:	lea    rdx,[rax+0x1]
  416a7b:	jmp    0x415f7c
  416a80:	mov    rdx,rbx
  416a83:	mov    r8,r14
  416a86:	mov    rcx,r9
  416a89:	call   0x421e08
  416a8e:	mov    rbx,rax
  416a91:	jmp    0x416635
  416a96:	cmp    r15,rbx
  416a99:	ja     0x415cf0
  416a9f:	mov    r12d,0xc
  416aa5:	jmp    0x416710
  416aaa:	mov    rcx,r12
  416aad:	call   0x4145c0
  416ab2:	mov    r14,rax
  416ab5:	jmp    0x416758
  416aba:	mov    r14,QWORD PTR [rbp+0x98]
  416ac1:	jmp    0x41677d
  416ac6:	cmp    rsi,r14
  416ac9:	jae    0x415cf0
  416acf:	mov    rbx,rax
  416ad2:	jmp    0x41621d
  416ad7:	mov    rax,QWORD PTR [rax+0x10]
  416adb:	xor    edi,edi
  416add:	mov    QWORD PTR [rbp+0x98],rax
  416ae4:	mov    rsi,rax
  416ae7:	jmp    0x4165a6
  416aec:	mov    QWORD PTR [rbp+0x98],rsi
  416af3:	mov    QWORD PTR [rbp+0x30],0x0
  416afb:	jmp    0x4168da
  416b00:	mov    QWORD PTR [rbp+0x98],rsi
  416b07:	xor    edi,edi
  416b09:	jmp    0x4165a6
  416b0e:	mov    rdx,QWORD PTR [rbp-0x10]
  416b12:	call   0x41ce60
  416b17:	jmp    0x415f6c
  416b1c:	mov    r15,r14
  416b1f:	jmp    0x4166aa
  416b24:	mov    r15,r14
  416b27:	jmp    0x4166b7
  416b2c:	mov    rsi,QWORD PTR [rax+0x10]
  416b30:	jmp    0x4167af
  416b35:	mov    r12,rax
  416b38:	jmp    0x415428
  416b3d:	nop
  416b3e:	nop
  416b3f:	nop
  416b40:	test   r8,r8
  416b43:	mov    r9d,edx
  416b46:	je     0x416b67
  416b48:	test   cl,0x3
  416b4b:	je     0x416b74
  416b4d:	cmp    BYTE PTR [rcx],dl
  416b4f:	jne    0x416b5d
  416b51:	jmp    0x416b70
  416b53:	test   cl,0x3
  416b56:	je     0x416b74
  416b58:	cmp    BYTE PTR [rcx],r9b
  416b5b:	je     0x416b70
  416b5d:	add    rcx,0x1
  416b61:	sub    r8,0x1
  416b65:	jne    0x416b53
  416b67:	xor    eax,eax
  416b69:	ret    
  416b6a:	nop    WORD PTR [rax+rax*1+0x0]
  416b70:	mov    rax,rcx
  416b73:	ret    
  416b74:	movzx  eax,dl
  416b77:	mov    r11d,eax
  416b7a:	shl    r11d,0x8
  416b7e:	or     r11d,eax
  416b81:	mov    eax,r11d
  416b84:	shl    eax,0x10
  416b87:	or     r11d,eax
  416b8a:	cmp    r8,0x3
  416b8e:	ja     0x416ba0
  416b90:	jmp    0x416bb8
  416b92:	sub    r8,0x4
  416b96:	add    rcx,0x4
  416b9a:	cmp    r8,0x3
  416b9e:	jbe    0x416be0
  416ba0:	mov    eax,DWORD PTR [rcx]
  416ba2:	xor    eax,r11d
  416ba5:	lea    r10d,[rax-0x1010101]
  416bac:	not    eax
  416bae:	and    eax,r10d
  416bb1:	test   eax,0x80808080
  416bb6:	je     0x416b92
  416bb8:	add    r8,rcx
  416bbb:	cmp    BYTE PTR [rcx],dl
  416bbd:	lea    rax,[rcx+0x1]
  416bc1:	jne    0x416bcf
  416bc3:	jmp    0x416b70
  416bc5:	add    rax,0x1
  416bc9:	cmp    BYTE PTR [rax-0x1],r9b
  416bcd:	je     0x416b70
  416bcf:	cmp    rax,r8
  416bd2:	mov    rcx,rax
  416bd5:	jne    0x416bc5
  416bd7:	xor    eax,eax
  416bd9:	ret    
  416bda:	nop    WORD PTR [rax+rax*1+0x0]
  416be0:	test   r8,r8
  416be3:	jne    0x416bb8
  416be5:	jmp    0x416b67
  416be7:	nop
  416be8:	nop
  416be9:	nop
  416bea:	nop
  416beb:	nop
  416bec:	nop
  416bed:	nop
  416bee:	nop
  416bef:	nop
  416bf0:	ret    
  416bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  416bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c00:	sub    rsp,0x28
  416c04:	mov    eax,DWORD PTR [rip+0x1e276]        # 0x434e80
  416c0a:	test   eax,eax
  416c0c:	jne    0x416c25
  416c0e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x416bf0
  416c15:	call   QWORD PTR [rip+0xd20d]        # 0x423e28
  416c1b:	mov    DWORD PTR [rip+0x1e25b],0x1        # 0x434e80
  416c25:	add    rsp,0x28
  416c29:	ret    
  416c2a:	nop
  416c2b:	nop
  416c2c:	nop
  416c2d:	nop
  416c2e:	nop
  416c2f:	nop
  416c30:	xor    r9d,r9d
  416c33:	cmp    QWORD PTR [rdx],0x0
  416c37:	mov    rax,QWORD PTR [rdx+0x8]
  416c3b:	lea    r10,[rip+0x159c6]        # 0x42c608
  416c42:	je     0x416c78
  416c44:	cmp    DWORD PTR [rax],0x16
  416c47:	ja     0x416d14
  416c4d:	mov    r8d,DWORD PTR [rax]
  416c50:	movsxd r8,DWORD PTR [r10+r8*4]
  416c54:	add    r8,r10
  416c57:	jmp    r8
  416c5a:	nop    WORD PTR [rax+rax*1+0x0]
  416c60:	mov    r8,QWORD PTR [rcx]
  416c63:	add    rcx,0x8
  416c67:	mov    QWORD PTR [rax+0x10],r8
  416c6b:	add    r9,0x1
  416c6f:	add    rax,0x20
  416c73:	cmp    QWORD PTR [rdx],r9
  416c76:	ja     0x416c44
  416c78:	xor    eax,eax
  416c7a:	ret    
  416c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  416c80:	mov    r8d,DWORD PTR [rcx]
  416c83:	add    rcx,0x8
  416c87:	mov    DWORD PTR [rax+0x10],r8d
  416c8b:	jmp    0x416c6b
  416c8d:	nop    DWORD PTR [rax]
  416c90:	mov    r8d,DWORD PTR [rcx]
  416c93:	add    rcx,0x8
  416c97:	mov    WORD PTR [rax+0x10],r8w
  416c9c:	jmp    0x416c6b
  416c9e:	xchg   ax,ax
  416ca0:	mov    r8d,DWORD PTR [rcx]
  416ca3:	add    rcx,0x8
  416ca7:	mov    BYTE PTR [rax+0x10],r8b
  416cab:	jmp    0x416c6b
  416cad:	nop    DWORD PTR [rax]
  416cb0:	movsd  xmm0,QWORD PTR [rcx]
  416cb4:	add    rcx,0x8
  416cb8:	movsd  QWORD PTR [rax+0x10],xmm0
  416cbd:	jmp    0x416c6b
  416cbf:	nop
  416cc0:	mov    r8,QWORD PTR [rcx]
  416cc3:	add    rcx,0x8
  416cc7:	fld    TBYTE PTR [r8]
  416cca:	fstp   TBYTE PTR [rax+0x10]
  416ccd:	jmp    0x416c6b
  416ccf:	nop
  416cd0:	mov    r8,QWORD PTR [rcx]
  416cd3:	add    rcx,0x8
  416cd7:	test   r8,r8
  416cda:	mov    QWORD PTR [rax+0x10],r8
  416cde:	jne    0x416c6b
  416ce0:	lea    r11,[rip+0x15919]        # 0x42c600
  416ce7:	mov    QWORD PTR [rax+0x10],r11
  416ceb:	jmp    0x416c6b
  416cf0:	mov    r8,QWORD PTR [rcx]
  416cf3:	add    rcx,0x8
  416cf7:	test   r8,r8
  416cfa:	mov    QWORD PTR [rax+0x10],r8
  416cfe:	jne    0x416c6b
  416d04:	lea    r11,[rip+0x15959]        # 0x42c664
  416d0b:	mov    QWORD PTR [rax+0x10],r11
  416d0f:	jmp    0x416c6b
  416d14:	mov    eax,0xffffffff
  416d19:	ret    
  416d1a:	nop
  416d1b:	nop
  416d1c:	nop
  416d1d:	nop
  416d1e:	nop
  416d1f:	nop
  416d20:	push   r15
  416d22:	push   r14
  416d24:	push   r13
  416d26:	push   r12
  416d28:	push   rbp
  416d29:	push   rdi
  416d2a:	push   rsi
  416d2b:	push   rbx
  416d2c:	sub    rsp,0x58
  416d30:	xor    r10d,r10d
  416d33:	mov    r14d,0x7
  416d39:	lea    rax,[rdx+0x20]
  416d3d:	lea    r15,[r8+0x10]
  416d41:	mov    QWORD PTR [rdx],0x0
  416d48:	mov    rbx,rcx
  416d4b:	mov    r12,rdx
  416d4e:	mov    r13,r8
  416d51:	mov    QWORD PTR [rdx+0x8],rax
  416d55:	mov    QWORD PTR [rsp+0x30],rax
  416d5a:	mov    QWORD PTR [r8],0x0
  416d61:	mov    QWORD PTR [r8+0x8],r15
  416d65:	mov    r9,QWORD PTR [rdx+0x8]
  416d69:	mov    rcx,QWORD PTR [rdx]
  416d6c:	mov    QWORD PTR [rsp+0x20],0x0
  416d75:	mov    QWORD PTR [rsp+0x28],0x7
  416d7e:	mov    QWORD PTR [rsp+0x38],0x0
  416d87:	jmp    0x416d9b
  416d89:	nop    DWORD PTR [rax+0x0]
  416d90:	cmp    al,0x25
  416d92:	lea    r11,[rbx+0x1]
  416d96:	je     0x416dd0
  416d98:	mov    rbx,r11
  416d9b:	movzx  eax,BYTE PTR [rbx]
  416d9e:	test   al,al
  416da0:	jne    0x416d90
  416da2:	lea    rax,[rcx+rcx*4]
  416da6:	lea    rax,[rcx+rax*2]
  416daa:	mov    QWORD PTR [r9+rax*8],rbx
  416dae:	mov    rax,QWORD PTR [rsp+0x20]
  416db3:	mov    QWORD PTR [r12+0x10],r10
  416db8:	mov    QWORD PTR [r12+0x18],rax
  416dbd:	xor    eax,eax
  416dbf:	add    rsp,0x58
  416dc3:	pop    rbx
  416dc4:	pop    rsi
  416dc5:	pop    rdi
  416dc6:	pop    rbp
  416dc7:	pop    r12
  416dc9:	pop    r13
  416dcb:	pop    r14
  416dcd:	pop    r15
  416dcf:	ret    
  416dd0:	lea    rax,[rcx+rcx*4]
  416dd4:	lea    rax,[rcx+rax*2]
  416dd8:	lea    rsi,[r9+rax*8]
  416ddc:	mov    QWORD PTR [rsi],rbx
  416ddf:	mov    DWORD PTR [rsi+0x10],0x0
  416de6:	mov    QWORD PTR [rsi+0x18],0x0
  416dee:	mov    QWORD PTR [rsi+0x20],0x0
  416df6:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  416dfe:	mov    QWORD PTR [rsi+0x30],0x0
  416e06:	mov    QWORD PTR [rsi+0x38],0x0
  416e0e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  416e16:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  416e1e:	movsx  eax,BYTE PTR [rbx+0x1]
  416e22:	lea    edx,[rax-0x30]
  416e25:	cmp    dl,0x9
  416e28:	jbe    0x417024
  416e2e:	mov    rdi,0xffffffffffffffff
  416e35:	lea    rcx,[r11+0x1]
  416e39:	jmp    0x416e67
  416e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e40:	cmp    al,0x2d
  416e42:	je     0x416e75
  416e44:	cmp    al,0x2b
  416e46:	je     0x416e80
  416e48:	cmp    al,0x20
  416e4a:	je     0x416e90
  416e4c:	cmp    al,0x23
  416e4e:	je     0x416ea0
  416e50:	cmp    al,0x30
  416e52:	jne    0x416ea6
  416e54:	or     DWORD PTR [rsi+0x10],0x20
  416e58:	nop    DWORD PTR [rax+rax*1+0x0]
  416e60:	movzx  eax,BYTE PTR [rcx]
  416e63:	add    rcx,0x1
  416e67:	cmp    al,0x27
  416e69:	lea    rbx,[rcx-0x1]
  416e6d:	jne    0x416e40
  416e6f:	or     DWORD PTR [rsi+0x10],0x1
  416e73:	jmp    0x416e60
  416e75:	or     DWORD PTR [rsi+0x10],0x2
  416e79:	jmp    0x416e60
  416e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e80:	or     DWORD PTR [rsi+0x10],0x4
  416e84:	jmp    0x416e60
  416e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e90:	or     DWORD PTR [rsi+0x10],0x8
  416e94:	jmp    0x416e60
  416e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ea0:	or     DWORD PTR [rsi+0x10],0x10
  416ea4:	jmp    0x416e60
  416ea6:	cmp    al,0x2a
  416ea8:	mov    rdx,rbx
  416eab:	je     0x417121
  416eb1:	lea    ecx,[rax-0x30]
  416eb4:	cmp    cl,0x9
  416eb7:	jbe    0x4170c3
  416ebd:	cmp    al,0x2e
  416ebf:	je     0x416f59
  416ec5:	xor    edx,edx
  416ec7:	mov    r8d,0x1
  416ecd:	jmp    0x416f13
  416ecf:	nop
  416ed0:	cmp    al,0x4c
  416ed2:	je     0x416f40
  416ed4:	cmp    al,0x6c
  416ed6:	je     0x416f50
  416ed8:	cmp    al,0x6a
  416eda:	je     0x416f30
  416edc:	mov    ecx,eax
  416ede:	and    ecx,0xffffffdf
  416ee1:	cmp    cl,0x5a
  416ee4:	je     0x416f30
  416ee6:	cmp    al,0x74
  416ee8:	je     0x416f30
  416eea:	cmp    al,0x49
  416eec:	jne    0x4170fc
  416ef2:	cmp    BYTE PTR [rbx+0x1],0x36
  416ef6:	jne    0x416fef
  416efc:	cmp    BYTE PTR [rbx+0x2],0x34
  416f00:	jne    0x416fef
  416f06:	add    edx,0x10
  416f09:	add    rbx,0x3
  416f0d:	nop    DWORD PTR [rax]
  416f10:	movzx  eax,BYTE PTR [rbx]
  416f13:	cmp    al,0x68
  416f15:	jne    0x416ed0
  416f17:	mov    ecx,edx
  416f19:	mov    eax,r8d
  416f1c:	add    rbx,0x1
  416f20:	and    ecx,0x1
  416f23:	shl    eax,cl
  416f25:	or     edx,eax
  416f27:	jmp    0x416f10
  416f29:	nop    DWORD PTR [rax+0x0]
  416f30:	add    edx,0x10
  416f33:	add    rbx,0x1
  416f37:	jmp    0x416f10
  416f39:	nop    DWORD PTR [rax+0x0]
  416f40:	or     edx,0x4
  416f43:	add    rbx,0x1
  416f47:	jmp    0x416f10
  416f49:	nop    DWORD PTR [rax+0x0]
  416f50:	add    edx,0x8
  416f53:	add    rbx,0x1
  416f57:	jmp    0x416f10
  416f59:	cmp    BYTE PTR [rbx+0x1],0x2a
  416f5d:	jne    0x4171c7
  416f63:	lea    rbp,[rbx+0x2]
  416f67:	mov    QWORD PTR [rsi+0x30],rbx
  416f6b:	cmp    QWORD PTR [rsp+0x20],0x1
  416f71:	mov    QWORD PTR [rsi+0x38],rbp
  416f75:	movsx  eax,BYTE PTR [rbx+0x2]
  416f79:	lea    edx,[rax-0x30]
  416f7c:	jbe    0x417420
  416f82:	cmp    dl,0x9
  416f85:	ja     0x417432
  416f8b:	mov    rdx,rbp
  416f8e:	add    rdx,0x1
  416f92:	movzx  ecx,BYTE PTR [rdx]
  416f95:	lea    r8d,[rcx-0x30]
  416f99:	cmp    r8b,0x9
  416f9d:	jbe    0x416f8e
  416f9f:	cmp    cl,0x24
  416fa2:	jne    0x417432
  416fa8:	xor    ebx,ebx
  416faa:	movabs rcx,0x1999999999999999
  416fb4:	sub    eax,0x30
  416fb7:	mov    rdx,0xffffffffffffffff
  416fbe:	cmp    rbx,rcx
  416fc1:	cdqe   
  416fc3:	ja     0x416fcc
  416fc5:	lea    rdx,[rbx+rbx*4]
  416fc9:	add    rdx,rdx
  416fcc:	add    rdx,rax
  416fcf:	mov    rbx,rdx
  416fd2:	jae    0x4177ae
  416fd8:	add    rbp,0x1
  416fdc:	movsx  eax,BYTE PTR [rbp+0x0]
  416fe0:	mov    rbx,0xffffffffffffffff
  416fe7:	lea    edx,[rax-0x30]
  416fea:	cmp    dl,0x9
  416fed:	jbe    0x416faa
  416fef:	mov    rcx,QWORD PTR [r13+0x8]
  416ff3:	cmp    r15,rcx
  416ff6:	je     0x416ffd
  416ff8:	call   0x421e50
  416ffd:	mov    rcx,QWORD PTR [r12+0x8]
  417002:	cmp    QWORD PTR [rsp+0x30],rcx
  417007:	je     0x41700e
  417009:	call   0x421e50
  41700e:	call   QWORD PTR [rip+0x21fb8]        # 0x438fcc
  417014:	mov    DWORD PTR [rax],0x16
  41701a:	mov    eax,0xffffffff
  41701f:	jmp    0x416dbf
  417024:	mov    rdx,r11
  417027:	nop    WORD PTR [rax+rax*1+0x0]
  417030:	add    rdx,0x1
  417034:	movzx  r8d,BYTE PTR [rdx]
  417038:	lea    ecx,[r8-0x30]
  41703c:	cmp    cl,0x9
  41703f:	jbe    0x417030
  417041:	cmp    r8b,0x24
  417045:	jne    0x416e2e
  41704b:	mov    rcx,r11
  41704e:	xor    edi,edi
  417050:	jmp    0x41706c
  417052:	movsx  eax,BYTE PTR [rcx+0x1]
  417056:	lea    rdx,[rcx+0x1]
  41705a:	mov    rdi,0xffffffffffffffff
  417061:	lea    ecx,[rax-0x30]
  417064:	cmp    cl,0x9
  417067:	ja     0x416fef
  417069:	mov    rcx,rdx
  41706c:	movabs rbx,0x1999999999999999
  417076:	sub    eax,0x30
  417079:	mov    rdx,0xffffffffffffffff
  417080:	cmp    rdi,rbx
  417083:	cdqe   
  417085:	ja     0x41708e
  417087:	lea    rdx,[rdi+rdi*4]
  41708b:	add    rdx,rdx
  41708e:	mov    rdi,rdx
  417091:	add    rdi,rax
  417094:	jb     0x417052
  417096:	movsx  eax,BYTE PTR [rcx+0x1]
  41709a:	lea    rdx,[rcx+0x1]
  41709e:	lea    r8d,[rax-0x30]
  4170a2:	cmp    r8b,0x9
  4170a6:	jbe    0x417069
  4170a8:	sub    rdi,0x1
  4170ac:	cmp    rdi,0xfffffffffffffffd
  4170b0:	ja     0x416fef
  4170b6:	lea    r11,[rcx+0x2]
  4170ba:	movzx  eax,BYTE PTR [rcx+0x2]
  4170be:	jmp    0x416e35
  4170c3:	mov    QWORD PTR [rsi+0x18],rbx
  4170c7:	movzx  eax,BYTE PTR [rbx]
  4170ca:	sub    eax,0x30
  4170cd:	cmp    al,0x9
  4170cf:	ja     0x41780c
  4170d5:	add    rbx,0x1
  4170d9:	movzx  eax,BYTE PTR [rbx]
  4170dc:	sub    eax,0x30
  4170df:	cmp    al,0x9
  4170e1:	jbe    0x4170d5
  4170e3:	mov    rax,rbx
  4170e6:	sub    rax,rdx
  4170e9:	cmp    r10,rax
  4170ec:	mov    QWORD PTR [rsi+0x20],rbx
  4170f0:	cmovb  r10,rax
  4170f4:	movzx  eax,BYTE PTR [rbx]
  4170f7:	jmp    0x416ebd
  4170fc:	lea    ecx,[rax-0x25]
  4170ff:	add    rbx,0x1
  417103:	mov    ebp,eax
  417105:	cmp    cl,0x53
  417108:	ja     0x416fef
  41710e:	lea    r9,[rip+0x1556b]        # 0x42c680
  417115:	movzx  ecx,cl
  417118:	movsxd rcx,DWORD PTR [r9+rcx*4]
  41711c:	add    rcx,r9
  41711f:	jmp    rcx
  417121:	mov    QWORD PTR [rsi+0x18],rbx
  417125:	mov    QWORD PTR [rsi+0x20],rcx
  417129:	test   r10,r10
  41712c:	movsx  eax,BYTE PTR [rdx+0x1]
  417130:	mov    rbx,rcx
  417133:	lea    edx,[rax-0x30]
  417136:	jne    0x417286
  41713c:	cmp    dl,0x9
  41713f:	jbe    0x417214
  417145:	mov    r10d,0x1
  41714b:	mov    rbp,QWORD PTR [rsp+0x38]
  417150:	mov    rax,rbp
  417153:	mov    QWORD PTR [rsi+0x28],rbp
  417157:	add    rax,0x1
  41715b:	cmp    rbp,0xffffffffffffffff
  41715f:	je     0x416fef
  417165:	mov    QWORD PTR [rsp+0x38],rax
  41716a:	cmp    r14,rbp
  41716d:	jbe    0x417539
  417173:	mov    rcx,QWORD PTR [r13+0x8]
  417177:	mov    rax,QWORD PTR [r13+0x0]
  41717b:	mov    rdx,rax
  41717e:	shl    rdx,0x5
  417182:	add    rdx,rcx
  417185:	cmp    rbp,rax
  417188:	jb     0x4171a7
  41718a:	nop    WORD PTR [rax+rax*1+0x0]
  417190:	add    rax,0x1
  417194:	mov    DWORD PTR [rdx],0x0
  41719a:	add    rdx,0x20
  41719e:	cmp    rax,rbp
  4171a1:	jbe    0x417190
  4171a3:	mov    QWORD PTR [r13+0x0],rax
  4171a7:	shl    rbp,0x5
  4171ab:	lea    rax,[rcx+rbp*1]
  4171af:	mov    edx,DWORD PTR [rax]
  4171b1:	test   edx,edx
  4171b3:	jne    0x417668
  4171b9:	mov    DWORD PTR [rax],0x5
  4171bf:	movzx  eax,BYTE PTR [rbx]
  4171c2:	jmp    0x416ebd
  4171c7:	mov    QWORD PTR [rsi+0x30],rbx
  4171cb:	movzx  eax,BYTE PTR [rbx+0x1]
  4171cf:	lea    rdx,[rbx+0x1]
  4171d3:	sub    eax,0x30
  4171d6:	cmp    al,0x9
  4171d8:	ja     0x4171ee
  4171da:	nop    WORD PTR [rax+rax*1+0x0]
  4171e0:	add    rdx,0x1
  4171e4:	movzx  eax,BYTE PTR [rdx]
  4171e7:	sub    eax,0x30
  4171ea:	cmp    al,0x9
  4171ec:	jbe    0x4171e0
  4171ee:	mov    rax,rdx
  4171f1:	mov    QWORD PTR [rsi+0x38],rdx
  4171f5:	sub    rax,rbx
  4171f8:	mov    rbx,QWORD PTR [rsp+0x20]
  4171fd:	cmp    rbx,rax
  417200:	cmovae rax,rbx
  417204:	mov    rbx,rdx
  417207:	mov    QWORD PTR [rsp+0x20],rax
  41720c:	movzx  eax,BYTE PTR [rdx]
  41720f:	jmp    0x416ec5
  417214:	mov    r10b,0x1
  417217:	nop    WORD PTR [rax+rax*1+0x0]
  417220:	add    rcx,0x1
  417224:	movzx  edx,BYTE PTR [rcx]
  417227:	lea    r8d,[rdx-0x30]
  41722b:	cmp    r8b,0x9
  41722f:	jbe    0x417220
  417231:	cmp    dl,0x24
  417234:	jne    0x41714b
  41723a:	xor    ebp,ebp
  41723c:	movabs rcx,0x1999999999999999
  417246:	sub    eax,0x30
  417249:	mov    rdx,0xffffffffffffffff
  417250:	cmp    rbp,rcx
  417253:	cdqe   
  417255:	ja     0x41725f
  417257:	lea    rdx,[rbp+rbp*4+0x0]
  41725c:	add    rdx,rdx
  41725f:	add    rdx,rax
  417262:	mov    rbp,rdx
  417265:	jae    0x417780
  41726b:	add    rbx,0x1
  41726f:	movsx  eax,BYTE PTR [rbx]
  417272:	mov    rbp,0xffffffffffffffff
  417279:	lea    edx,[rax-0x30]
  41727c:	cmp    dl,0x9
  41727f:	jbe    0x41723c
  417281:	jmp    0x416fef
  417286:	cmp    dl,0x9
  417289:	jbe    0x417220
  41728b:	jmp    0x41714b
  417290:	cmp    edx,0xf
  417293:	mov    r9d,0xc
  417299:	jle    0x41770d
  41729f:	cmp    rdi,0xffffffffffffffff
  4172a3:	je     0x417680
  4172a9:	mov    QWORD PTR [rsi+0x50],rdi
  4172ad:	cmp    r14,rdi
  4172b0:	jbe    0x41758c
  4172b6:	mov    rcx,QWORD PTR [r13+0x8]
  4172ba:	mov    rax,QWORD PTR [r13+0x0]
  4172be:	mov    rdx,rax
  4172c1:	shl    rdx,0x5
  4172c5:	add    rdx,rcx
  4172c8:	cmp    rdi,rax
  4172cb:	jb     0x4172e7
  4172cd:	nop    DWORD PTR [rax]
  4172d0:	add    rax,0x1
  4172d4:	mov    DWORD PTR [rdx],0x0
  4172da:	add    rdx,0x20
  4172de:	cmp    rax,rdi
  4172e1:	jbe    0x4172d0
  4172e3:	mov    QWORD PTR [r13+0x0],rax
  4172e7:	shl    rdi,0x5
  4172eb:	lea    rax,[rcx+rdi*1]
  4172ef:	mov    edx,DWORD PTR [rax]
  4172f1:	test   edx,edx
  4172f3:	jne    0x417600
  4172f9:	mov    DWORD PTR [rax],r9d
  4172fc:	mov    BYTE PTR [rsi+0x48],bpl
  417300:	mov    rax,QWORD PTR [r12]
  417304:	mov    QWORD PTR [rsi+0x8],rbx
  417308:	lea    rcx,[rax+0x1]
  41730c:	cmp    rcx,QWORD PTR [rsp+0x28]
  417311:	mov    QWORD PTR [r12],rcx
  417315:	jae    0x4174c0
  41731b:	mov    r9,QWORD PTR [r12+0x8]
  417320:	jmp    0x416d9b
  417325:	xor    r9d,r9d
  417328:	cmp    edx,0x7
  41732b:	mov    ebp,eax
  41732d:	setg   r9b
  417331:	add    r9d,0xf
  417335:	jmp    0x41729f
  41733a:	cmp    edx,0xf
  41733d:	jg     0x417370
  41733f:	test   dl,0x4
  417342:	jne    0x417370
  417344:	cmp    edx,0x7
  417347:	jg     0x4178b8
  41734d:	test   dl,0x2
  417350:	jne    0x4178ab
  417356:	and    edx,0x1
  417359:	mov    ebp,eax
  41735b:	neg    edx
  41735d:	mov    r9d,edx
  417360:	add    r9d,0x14
  417364:	jmp    0x41729f
  417369:	nop    DWORD PTR [rax+0x0]
  417370:	mov    ebp,eax
  417372:	mov    r9d,0x16
  417378:	jmp    0x41729f
  41737d:	cmp    edx,0xf
  417380:	mov    r9d,0x9
  417386:	jg     0x41729f
  41738c:	test   dl,0x4
  41738f:	jne    0x41729f
  417395:	cmp    edx,0x7
  417398:	mov    r9b,0x7
  41739b:	jg     0x41729f
  4173a1:	test   dl,0x2
  4173a4:	mov    r9b,0x1
  4173a7:	jne    0x41729f
  4173ad:	and    edx,0x1
  4173b0:	cmp    edx,0x1
  4173b3:	sbb    r9d,r9d
  4173b6:	and    r9d,0x2
  4173ba:	add    r9d,0x3
  4173be:	jmp    0x41729f
  4173c3:	xor    r9d,r9d
  4173c6:	cmp    edx,0x7
  4173c9:	mov    ebp,eax
  4173cb:	setg   r9b
  4173cf:	add    r9d,0xd
  4173d3:	jmp    0x41729f
  4173d8:	cmp    edx,0xf
  4173db:	mov    r9d,0xa
  4173e1:	jg     0x41729f
  4173e7:	test   dl,0x4
  4173ea:	jne    0x41729f
  4173f0:	cmp    edx,0x7
  4173f3:	mov    r9b,0x8
  4173f6:	jg     0x41729f
  4173fc:	test   dl,0x2
  4173ff:	mov    r9b,0x2
  417402:	jne    0x41729f
  417408:	and    edx,0x1
  41740b:	cmp    edx,0x1
  41740e:	sbb    r9d,r9d
  417411:	and    r9d,0x2
  417415:	add    r9d,0x4
  417419:	jmp    0x41729f
  41741e:	xchg   ax,ax
  417420:	cmp    dl,0x9
  417423:	mov    QWORD PTR [rsp+0x20],0x2
  41742c:	jbe    0x416f8b
  417432:	mov    rbx,QWORD PTR [rsi+0x40]
  417436:	cmp    rbx,0xffffffffffffffff
  41743a:	je     0x417753
  417440:	cmp    r14,rbx
  417443:	ja     0x4176b9
  417449:	test   r14,r14
  41744c:	js     0x417557
  417452:	add    r14,r14
  417455:	cmp    r14,rbx
  417458:	ja     0x417467
  41745a:	lea    r14,[rbx+0x1]
  41745e:	cmp    r14,rbx
  417461:	jb     0x417557
  417467:	movabs rax,0x7ffffffffffffff
  417471:	cmp    r14,rax
  417474:	ja     0x417557
  41747a:	mov    rcx,QWORD PTR [r13+0x8]
  41747e:	mov    rdx,r14
  417481:	mov    QWORD PTR [rsp+0x40],r10
  417486:	shl    rdx,0x5
  41748a:	cmp    r15,rcx
  41748d:	je     0x4178ea
  417493:	call   0x414ca0
  417498:	mov    r10,QWORD PTR [rsp+0x40]
  41749d:	mov    r9,rax
  4174a0:	test   r9,r9
  4174a3:	je     0x417557
  4174a9:	cmp    r15,QWORD PTR [r13+0x8]
  4174ad:	je     0x4178c5
  4174b3:	mov    QWORD PTR [r13+0x8],r9
  4174b7:	mov    rcx,r9
  4174ba:	jmp    0x4176bd
  4174bf:	nop
  4174c0:	mov    rax,QWORD PTR [rsp+0x28]
  4174c5:	test   rax,rax
  4174c8:	js     0x417557
  4174ce:	add    rax,rax
  4174d1:	mov    rdi,rax
  4174d4:	mov    QWORD PTR [rsp+0x28],rax
  4174d9:	movabs rax,0x2e8ba2e8ba2e8ba
  4174e3:	cmp    rdi,rax
  4174e6:	ja     0x417557
  4174e8:	lea    rax,[rdi+rdi*4]
  4174ec:	mov    rcx,QWORD PTR [r12+0x8]
  4174f1:	mov    QWORD PTR [rsp+0x40],r10
  4174f6:	lea    rdx,[rdi+rax*2]
  4174fa:	shl    rdx,0x3
  4174fe:	cmp    QWORD PTR [rsp+0x30],rcx
  417503:	je     0x4176a4
  417509:	call   0x414ca0
  41750e:	mov    r10,QWORD PTR [rsp+0x40]
  417513:	mov    r9,rax
  417516:	test   r9,r9
  417519:	je     0x417557
  41751b:	mov    rax,QWORD PTR [rsp+0x30]
  417520:	cmp    rax,QWORD PTR [r12+0x8]
  417525:	je     0x417813
  41752b:	mov    QWORD PTR [r12+0x8],r9
  417530:	mov    rcx,QWORD PTR [r12]
  417534:	jmp    0x416d9b
  417539:	test   r14,r14
  41753c:	js     0x417557
  41753e:	add    r14,r14
  417541:	cmp    r14,rbp
  417544:	ja     0x417610
  41754a:	lea    r14,[rbp+0x1]
  41754e:	cmp    r14,rbp
  417551:	jae    0x417610
  417557:	mov    rcx,QWORD PTR [r13+0x8]
  41755b:	cmp    r15,rcx
  41755e:	je     0x417565
  417560:	call   0x421e50
  417565:	mov    rcx,QWORD PTR [r12+0x8]
  41756a:	cmp    QWORD PTR [rsp+0x30],rcx
  41756f:	je     0x417576
  417571:	call   0x421e50
  417576:	call   QWORD PTR [rip+0x21a50]        # 0x438fcc
  41757c:	mov    DWORD PTR [rax],0xc
  417582:	mov    eax,0xffffffff
  417587:	jmp    0x416dbf
  41758c:	test   r14,r14
  41758f:	js     0x417557
  417591:	add    r14,r14
  417594:	cmp    r14,rdi
  417597:	ja     0x4175a2
  417599:	lea    r14,[rdi+0x1]
  41759d:	cmp    r14,rdi
  4175a0:	jb     0x417557
  4175a2:	movabs rax,0x7ffffffffffffff
  4175ac:	cmp    r14,rax
  4175af:	ja     0x417557
  4175b1:	mov    rcx,QWORD PTR [r13+0x8]
  4175b5:	mov    rdx,r14
  4175b8:	mov    QWORD PTR [rsp+0x48],r10
  4175bd:	shl    rdx,0x5
  4175c1:	mov    DWORD PTR [rsp+0x40],r9d
  4175c6:	cmp    r15,rcx
  4175c9:	je     0x4177dd
  4175cf:	call   0x414ca0
  4175d4:	mov    r9d,DWORD PTR [rsp+0x40]
  4175d9:	mov    r10,QWORD PTR [rsp+0x48]
  4175de:	mov    r11,rax
  4175e1:	test   r11,r11
  4175e4:	je     0x417557
  4175ea:	cmp    r15,QWORD PTR [r13+0x8]
  4175ee:	je     0x41787c
  4175f4:	mov    QWORD PTR [r13+0x8],r11
  4175f8:	mov    rcx,r11
  4175fb:	jmp    0x4172ba
  417600:	cmp    r9d,edx
  417603:	je     0x4172fc
  417609:	jmp    0x416ff3
  41760e:	xchg   ax,ax
  417610:	movabs rax,0x7ffffffffffffff
  41761a:	cmp    r14,rax
  41761d:	ja     0x417557
  417623:	mov    rcx,QWORD PTR [r13+0x8]
  417627:	mov    rdx,r14
  41762a:	mov    QWORD PTR [rsp+0x40],r10
  41762f:	shl    rdx,0x5
  417633:	cmp    r15,rcx
  417636:	je     0x417842
  41763c:	call   0x414ca0
  417641:	mov    r10,QWORD PTR [rsp+0x40]
  417646:	mov    r9,rax
  417649:	test   r9,r9
  41764c:	je     0x417557
  417652:	cmp    r15,QWORD PTR [r13+0x8]
  417656:	je     0x417857
  41765c:	mov    QWORD PTR [r13+0x8],r9
  417660:	mov    rcx,r9
  417663:	jmp    0x417177
  417668:	cmp    edx,0x5
  41766b:	je     0x4170f4
  417671:	jmp    0x416ff3
  417676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417680:	mov    rdi,QWORD PTR [rsp+0x38]
  417685:	mov    rax,rdi
  417688:	mov    QWORD PTR [rsi+0x50],rdi
  41768c:	add    rax,0x1
  417690:	cmp    rdi,0xffffffffffffffff
  417694:	je     0x416fef
  41769a:	mov    QWORD PTR [rsp+0x38],rax
  41769f:	jmp    0x4172ad
  4176a4:	mov    rcx,rdx
  4176a7:	call   0x4145c0
  4176ac:	mov    r10,QWORD PTR [rsp+0x40]
  4176b1:	mov    r9,rax
  4176b4:	jmp    0x417516
  4176b9:	mov    rcx,QWORD PTR [r13+0x8]
  4176bd:	mov    rax,QWORD PTR [r13+0x0]
  4176c1:	mov    rdx,rax
  4176c4:	shl    rdx,0x5
  4176c8:	add    rdx,rcx
  4176cb:	cmp    rbx,rax
  4176ce:	jb     0x4176e7
  4176d0:	add    rax,0x1
  4176d4:	mov    DWORD PTR [rdx],0x0
  4176da:	add    rdx,0x20
  4176de:	cmp    rax,rbx
  4176e1:	jbe    0x4176d0
  4176e3:	mov    QWORD PTR [r13+0x0],rax
  4176e7:	mov    rax,rbx
  4176ea:	shl    rax,0x5
  4176ee:	add    rax,rcx
  4176f1:	mov    edx,DWORD PTR [rax]
  4176f3:	test   edx,edx
  4176f5:	jne    0x4177f7
  4176fb:	mov    DWORD PTR [rax],0x5
  417701:	mov    rbx,rbp
  417704:	movzx  eax,BYTE PTR [rbp+0x0]
  417708:	jmp    0x416ec5
  41770d:	and    edx,0x4
  417710:	cmp    edx,0x1
  417713:	sbb    r9d,r9d
  417716:	add    r9d,0xc
  41771a:	jmp    0x41729f
  41771f:	mov    r9d,0xe
  417725:	mov    ebp,0x63
  41772a:	jmp    0x41729f
  41772f:	mov    ebp,eax
  417731:	jmp    0x4172fc
  417736:	mov    ebp,eax
  417738:	mov    r9d,0x11
  41773e:	jmp    0x41729f
  417743:	mov    r9d,0x10
  417749:	mov    ebp,0x73
  41774e:	jmp    0x41729f
  417753:	mov    rbx,QWORD PTR [rsp+0x38]
  417758:	mov    rax,rbx
  41775b:	mov    QWORD PTR [rsi+0x40],rbx
  41775f:	add    rax,0x1
  417763:	cmp    rbx,0xffffffffffffffff
  417767:	je     0x416fef
  41776d:	mov    QWORD PTR [rsp+0x38],rax
  417772:	jmp    0x417440
  417777:	nop    WORD PTR [rax+rax*1+0x0]
  417780:	add    rbx,0x1
  417784:	movsx  eax,BYTE PTR [rbx]
  417787:	lea    edx,[rax-0x30]
  41778a:	cmp    dl,0x9
  41778d:	jbe    0x41723c
  417793:	sub    rbp,0x1
  417797:	cmp    rbp,0xfffffffffffffffd
  41779b:	ja     0x416fef
  4177a1:	mov    QWORD PTR [rsi+0x28],rbp
  4177a5:	add    rbx,0x1
  4177a9:	jmp    0x41716a
  4177ae:	add    rbp,0x1
  4177b2:	movsx  eax,BYTE PTR [rbp+0x0]
  4177b6:	lea    edx,[rax-0x30]
  4177b9:	cmp    dl,0x9
  4177bc:	jbe    0x416faa
  4177c2:	sub    rbx,0x1
  4177c6:	cmp    rbx,0xfffffffffffffffd
  4177ca:	ja     0x416fef
  4177d0:	mov    QWORD PTR [rsi+0x40],rbx
  4177d4:	add    rbp,0x1
  4177d8:	jmp    0x417440
  4177dd:	mov    rcx,rdx
  4177e0:	call   0x4145c0
  4177e5:	mov    r10,QWORD PTR [rsp+0x48]
  4177ea:	mov    r11,rax
  4177ed:	mov    r9d,DWORD PTR [rsp+0x40]
  4177f2:	jmp    0x4175e1
  4177f7:	cmp    edx,0x5
  4177fa:	jne    0x416ff3
  417800:	movzx  eax,BYTE PTR [rbp+0x0]
  417804:	mov    rbx,rbp
  417807:	jmp    0x416ec5
  41780c:	xor    eax,eax
  41780e:	jmp    0x4170e9
  417813:	mov    rax,QWORD PTR [r12]
  417817:	mov    rcx,r9
  41781a:	mov    QWORD PTR [rsp+0x40],r10
  41781f:	lea    rdx,[rax+rax*4]
  417823:	lea    r8,[rax+rdx*2]
  417827:	mov    rdx,QWORD PTR [rsp+0x30]
  41782c:	shl    r8,0x3
  417830:	call   0x421e08
  417835:	mov    r10,QWORD PTR [rsp+0x40]
  41783a:	mov    r9,rax
  41783d:	jmp    0x41752b
  417842:	mov    rcx,rdx
  417845:	call   0x4145c0
  41784a:	mov    r10,QWORD PTR [rsp+0x40]
  41784f:	mov    r9,rax
  417852:	jmp    0x417649
  417857:	mov    r8,QWORD PTR [r13+0x0]
  41785b:	mov    rcx,r9
  41785e:	mov    rdx,r15
  417861:	mov    QWORD PTR [rsp+0x40],r10
  417866:	shl    r8,0x5
  41786a:	call   0x421e08
  41786f:	mov    r10,QWORD PTR [rsp+0x40]
  417874:	mov    r9,rax
  417877:	jmp    0x41765c
  41787c:	mov    r8,QWORD PTR [r13+0x0]
  417880:	mov    rcx,r11
  417883:	mov    rdx,r15
  417886:	mov    QWORD PTR [rsp+0x48],r10
  41788b:	mov    DWORD PTR [rsp+0x40],r9d
  417890:	shl    r8,0x5
  417894:	call   0x421e08
  417899:	mov    r10,QWORD PTR [rsp+0x48]
  41789e:	mov    r11,rax
  4178a1:	mov    r9d,DWORD PTR [rsp+0x40]
  4178a6:	jmp    0x4175f4
  4178ab:	mov    ebp,eax
  4178ad:	mov    r9d,0x12
  4178b3:	jmp    0x41729f
  4178b8:	mov    ebp,eax
  4178ba:	mov    r9d,0x15
  4178c0:	jmp    0x41729f
  4178c5:	mov    r8,QWORD PTR [r13+0x0]
  4178c9:	mov    rcx,r9
  4178cc:	mov    rdx,r15
  4178cf:	mov    QWORD PTR [rsp+0x40],r10
  4178d4:	shl    r8,0x5
  4178d8:	call   0x421e08
  4178dd:	mov    r10,QWORD PTR [rsp+0x40]
  4178e2:	mov    r9,rax
  4178e5:	jmp    0x4174b3
  4178ea:	mov    rcx,rdx
  4178ed:	call   0x4145c0
  4178f2:	mov    r10,QWORD PTR [rsp+0x40]
  4178f7:	mov    r9,rax
  4178fa:	jmp    0x4174a0
  4178ff:	nop
  417900:	push   rbx
  417901:	sub    rsp,0x20
  417905:	mov    ebx,ecx
  417907:	call   0x416c00
  41790c:	mov    ecx,ebx
  41790e:	add    rsp,0x20
  417912:	pop    rbx
  417913:	jmp    0x421ce8
  417918:	nop    DWORD PTR [rax+rax*1+0x0]
  417920:	mov    edx,ecx
  417922:	lea    rcx,[rip+0xffffffffffffffd7]        # 0x417900
  417929:	jmp    0x41a7e0
  41792e:	nop
  41792f:	nop
  417930:	push   rsi
  417931:	push   rbx
  417932:	sub    rsp,0x38
  417936:	mov    rbx,rdx
  417939:	mov    esi,r8d
  41793c:	call   0x414c80
  417941:	cmp    rax,0xffffffffffffffff
  417945:	mov    rcx,rax
  417948:	je     0x417ab0
  41794e:	mov    rdx,rbx
  417951:	mov    r8d,esi
  417954:	call   QWORD PTR [rip+0x2198a]        # 0x4392e4
  41795a:	mov    ebx,eax
  41795c:	test   ebx,ebx
  41795e:	js     0x417970
  417960:	add    rsp,0x38
  417964:	pop    rbx
  417965:	pop    rsi
  417966:	ret    
  417967:	nop    WORD PTR [rax+rax*1+0x0]
  417970:	mov    rsi,QWORD PTR [rip+0x2193d]        # 0x4392b4
  417977:	call   rsi
  417979:	cmp    eax,0x2733
  41797e:	je     0x417aa0
  417984:	call   rsi
  417986:	cmp    eax,0x2740
  41798b:	mov    esi,eax
  41798d:	je     0x417c91
  417993:	jg     0x4179e0
  417995:	cmp    eax,0x2736
  41799a:	je     0x417c7e
  4179a0:	jle    0x417a62
  4179a6:	cmp    eax,0x273a
  4179ab:	je     0x417bd3
  4179b1:	jg     0x417b12
  4179b7:	cmp    eax,0x2738
  4179bc:	je     0x417c6b
  4179c2:	jg     0x417c58
  4179c8:	call   QWORD PTR [rip+0x215fe]        # 0x438fcc
  4179ce:	mov    DWORD PTR [rax],0x6d
  4179d4:	mov    eax,ebx
  4179d6:	jmp    0x417960
  4179d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4179e0:	cmp    eax,0x2748
  4179e5:	je     0x417c45
  4179eb:	jg     0x417a22
  4179ed:	cmp    eax,0x2744
  4179f2:	je     0x417be6
  4179f8:	jg     0x417b42
  4179fe:	cmp    eax,0x2742
  417a03:	je     0x417cb7
  417a09:	jg     0x417ca4
  417a0f:	call   QWORD PTR [rip+0x215b7]        # 0x438fcc
  417a15:	mov    DWORD PTR [rax],0x65
  417a1b:	mov    eax,ebx
  417a1d:	jmp    0x417960
  417a22:	cmp    eax,0x274e
  417a27:	je     0x417c0c
  417a2d:	jg     0x417ad0
  417a33:	cmp    eax,0x274c
  417a38:	je     0x417c32
  417a3e:	jg     0x417c1f
  417a44:	cmp    eax,0x2749
  417a49:	jne    0x417af1
  417a4f:	call   QWORD PTR [rip+0x21577]        # 0x438fcc
  417a55:	mov    DWORD PTR [rax],0x7e
  417a5b:	mov    eax,ebx
  417a5d:	jmp    0x417960
  417a62:	cmp    eax,0x57
  417a65:	je     0x417b87
  417a6b:	jle    0x417b66
  417a71:	cmp    eax,0x2734
  417a76:	je     0x417d03
  417a7c:	jg     0x417cf0
  417a82:	cmp    eax,0x2733
  417a87:	jne    0x417af1
  417a89:	call   QWORD PTR [rip+0x2153d]        # 0x438fcc
  417a8f:	mov    DWORD PTR [rax],0x8c
  417a95:	mov    eax,ebx
  417a97:	jmp    0x417960
  417a9c:	nop    DWORD PTR [rax+0x0]
  417aa0:	mov    ecx,0x2734
  417aa5:	call   QWORD PTR [rip+0x21811]        # 0x4392bc
  417aab:	jmp    0x417984
  417ab0:	mov    QWORD PTR [rsp+0x28],rax
  417ab5:	call   QWORD PTR [rip+0x21511]        # 0x438fcc
  417abb:	mov    rcx,QWORD PTR [rsp+0x28]
  417ac0:	mov    DWORD PTR [rax],0x9
  417ac6:	mov    eax,ecx
  417ac8:	jmp    0x417960
  417acd:	nop    DWORD PTR [rax]
  417ad0:	cmp    eax,0x2751
  417ad5:	je     0x417bf9
  417adb:	cmp    eax,0x2752
  417ae0:	je     0x417bc0
  417ae6:	cmp    eax,0x274f
  417aeb:	je     0x417bad
  417af1:	call   QWORD PTR [rip+0x214d5]        # 0x438fcc
  417af7:	lea    ecx,[rsi-0x2711]
  417afd:	lea    edx,[rsi-0x2710]
  417b03:	cmp    ecx,0x17
  417b06:	cmovbe esi,edx
  417b09:	mov    DWORD PTR [rax],esi
  417b0b:	mov    eax,ebx
  417b0d:	jmp    0x417960
  417b12:	cmp    eax,0x273d
  417b17:	je     0x417cdd
  417b1d:	cmp    eax,0x273f
  417b22:	je     0x417cca
  417b28:	cmp    eax,0x273b
  417b2d:	jne    0x417af1
  417b2f:	call   QWORD PTR [rip+0x21497]        # 0x438fcc
  417b35:	mov    DWORD PTR [rax],0x87
  417b3b:	mov    eax,ebx
  417b3d:	jmp    0x417960
  417b42:	cmp    eax,0x2746
  417b47:	je     0x417d29
  417b4d:	jg     0x417d16
  417b53:	call   QWORD PTR [rip+0x21473]        # 0x438fcc
  417b59:	mov    DWORD PTR [rax],0x6a
  417b5f:	mov    eax,ebx
  417b61:	jmp    0x417960
  417b66:	cmp    eax,0x6
  417b69:	je     0x417b9a
  417b6b:	cmp    eax,0x8
  417b6e:	jne    0x417af1
  417b74:	call   QWORD PTR [rip+0x21452]        # 0x438fcc
  417b7a:	mov    DWORD PTR [rax],0xc
  417b80:	mov    eax,ebx
  417b82:	jmp    0x417960
  417b87:	call   QWORD PTR [rip+0x2143f]        # 0x438fcc
  417b8d:	mov    DWORD PTR [rax],0x16
  417b93:	mov    eax,ebx
  417b95:	jmp    0x417960
  417b9a:	call   QWORD PTR [rip+0x2142c]        # 0x438fcc
  417ba0:	mov    DWORD PTR [rax],0x9
  417ba6:	mov    eax,ebx
  417ba8:	jmp    0x417960
  417bad:	call   QWORD PTR [rip+0x21419]        # 0x438fcc
  417bb3:	mov    DWORD PTR [rax],0x26
  417bb9:	mov    eax,ebx
  417bbb:	jmp    0x417960
  417bc0:	call   QWORD PTR [rip+0x21406]        # 0x438fcc
  417bc6:	mov    DWORD PTR [rax],0x29
  417bcc:	mov    eax,ebx
  417bce:	jmp    0x417960
  417bd3:	call   QWORD PTR [rip+0x213f3]        # 0x438fcc
  417bd9:	mov    DWORD PTR [rax],0x7b
  417bdf:	mov    eax,ebx
  417be1:	jmp    0x417960
  417be6:	call   QWORD PTR [rip+0x213e0]        # 0x438fcc
  417bec:	mov    DWORD PTR [rax],0x75
  417bf2:	mov    eax,ebx
  417bf4:	jmp    0x417960
  417bf9:	call   QWORD PTR [rip+0x213cd]        # 0x438fcc
  417bff:	mov    DWORD PTR [rax],0x6e
  417c05:	mov    eax,ebx
  417c07:	jmp    0x417960
  417c0c:	call   QWORD PTR [rip+0x213ba]        # 0x438fcc
  417c12:	mov    DWORD PTR [rax],0x72
  417c18:	mov    eax,ebx
  417c1a:	jmp    0x417960
  417c1f:	call   QWORD PTR [rip+0x213a7]        # 0x438fcc
  417c25:	mov    DWORD PTR [rax],0x6b
  417c2b:	mov    eax,ebx
  417c2d:	jmp    0x417960
  417c32:	call   QWORD PTR [rip+0x21394]        # 0x438fcc
  417c38:	mov    DWORD PTR [rax],0x8a
  417c3e:	mov    eax,ebx
  417c40:	jmp    0x417960
  417c45:	call   QWORD PTR [rip+0x21381]        # 0x438fcc
  417c4b:	mov    DWORD PTR [rax],0x71
  417c51:	mov    eax,ebx
  417c53:	jmp    0x417960
  417c58:	call   QWORD PTR [rip+0x2136e]        # 0x438fcc
  417c5e:	mov    DWORD PTR [rax],0x88
  417c64:	mov    eax,ebx
  417c66:	jmp    0x417960
  417c6b:	call   QWORD PTR [rip+0x2135b]        # 0x438fcc
  417c71:	mov    DWORD PTR [rax],0x73
  417c77:	mov    eax,ebx
  417c79:	jmp    0x417960
  417c7e:	call   QWORD PTR [rip+0x21348]        # 0x438fcc
  417c84:	mov    DWORD PTR [rax],0x80
  417c8a:	mov    eax,ebx
  417c8c:	jmp    0x417960
  417c91:	call   QWORD PTR [rip+0x21335]        # 0x438fcc
  417c97:	mov    DWORD PTR [rax],0x64
  417c9d:	mov    eax,ebx
  417c9f:	jmp    0x417960
  417ca4:	call   QWORD PTR [rip+0x21322]        # 0x438fcc
  417caa:	mov    DWORD PTR [rax],0x76
  417cb0:	mov    eax,ebx
  417cb2:	jmp    0x417960
  417cb7:	call   QWORD PTR [rip+0x2130f]        # 0x438fcc
  417cbd:	mov    DWORD PTR [rax],0x74
  417cc3:	mov    eax,ebx
  417cc5:	jmp    0x417960
  417cca:	call   QWORD PTR [rip+0x212fc]        # 0x438fcc
  417cd0:	mov    DWORD PTR [rax],0x66
  417cd6:	mov    eax,ebx
  417cd8:	jmp    0x417960
  417cdd:	call   QWORD PTR [rip+0x212e9]        # 0x438fcc
  417ce3:	mov    DWORD PTR [rax],0x82
  417ce9:	mov    eax,ebx
  417ceb:	jmp    0x417960
  417cf0:	call   QWORD PTR [rip+0x212d6]        # 0x438fcc
  417cf6:	mov    DWORD PTR [rax],0x67
  417cfc:	mov    eax,ebx
  417cfe:	jmp    0x417960
  417d03:	call   QWORD PTR [rip+0x212c3]        # 0x438fcc
  417d09:	mov    DWORD PTR [rax],0x70
  417d0f:	mov    eax,ebx
  417d11:	jmp    0x417960
  417d16:	call   QWORD PTR [rip+0x212b0]        # 0x438fcc
  417d1c:	mov    DWORD PTR [rax],0x77
  417d22:	mov    eax,ebx
  417d24:	jmp    0x417960
  417d29:	call   QWORD PTR [rip+0x2129d]        # 0x438fcc
  417d2f:	mov    DWORD PTR [rax],0x6c
  417d35:	mov    eax,ebx
  417d37:	jmp    0x417960
  417d3c:	nop
  417d3d:	nop
  417d3e:	nop
  417d3f:	nop
  417d40:	jmp    0x41b2c0
  417d45:	nop
  417d46:	nop
  417d47:	nop
  417d48:	nop
  417d49:	nop
  417d4a:	nop
  417d4b:	nop
  417d4c:	nop
  417d4d:	nop
  417d4e:	nop
  417d4f:	nop
  417d50:	push   rbp
  417d51:	push   rdi
  417d52:	push   rsi
  417d53:	push   rbx
  417d54:	sub    rsp,0x238
  417d5b:	test   rcx,rcx
  417d5e:	mov    rbp,rcx
  417d61:	je     0x417d83
  417d63:	mov    rbx,QWORD PTR [rip+0x21212]        # 0x438f7c
  417d6a:	call   rbx
  417d6c:	lea    rdx,[rax+0x60]
  417d70:	mov    rcx,rbp
  417d73:	call   0x421e60
  417d78:	call   rbx
  417d7a:	lea    rcx,[rax+0x60]
  417d7e:	call   0x421e80
  417d83:	mov    rsi,QWORD PTR [rip+0x21282]        # 0x43900c
  417d8a:	lea    rdi,[rsp+0x1f]
  417d8f:	xor    ebx,ebx
  417d91:	call   rsi
  417d93:	cmp    eax,0xd
  417d96:	je     0x417db2
  417d98:	add    rbx,0x1
  417d9c:	cmp    rbx,0x200
  417da3:	mov    BYTE PTR [rdi+rbx*1],al
  417da6:	jne    0x417d91
  417da8:	mov    BYTE PTR [rsp+0x220],0x0
  417db0:	jmp    0x417db7
  417db2:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  417db7:	test   rbp,rbp
  417dba:	je     0x417deb
  417dbc:	mov    rbx,QWORD PTR [rip+0x211b9]        # 0x438f7c
  417dc3:	call   rbx
  417dc5:	lea    rcx,[rip+0x14a04]        # 0x42c7d0
  417dcc:	lea    r9,[rax+0x60]
  417dd0:	mov    r8d,0x2
  417dd6:	mov    edx,0x1
  417ddb:	call   0x421e38
  417de0:	call   rbx
  417de2:	lea    rcx,[rax+0x60]
  417de6:	call   0x421e80
  417deb:	lea    rcx,[rsp+0x20]
  417df0:	call   0x41a220
  417df5:	add    rsp,0x238
  417dfc:	pop    rbx
  417dfd:	pop    rsi
  417dfe:	pop    rdi
  417dff:	pop    rbp
  417e00:	ret    
  417e01:	nop
  417e02:	nop
  417e03:	nop
  417e04:	nop
  417e05:	nop
  417e06:	nop
  417e07:	nop
  417e08:	nop
  417e09:	nop
  417e0a:	nop
  417e0b:	nop
  417e0c:	nop
  417e0d:	nop
  417e0e:	nop
  417e0f:	nop
  417e10:	push   rdi
  417e11:	push   rsi
  417e12:	push   rbx
  417e13:	sub    rsp,0x30
  417e17:	mov    rbx,rdx
  417e1a:	mov    rsi,r8
  417e1d:	mov    edi,r9d
  417e20:	call   0x414c80
  417e25:	cmp    rax,0xffffffffffffffff
  417e29:	mov    rcx,rax
  417e2c:	je     0x417f70
  417e32:	mov    rdx,rbx
  417e35:	mov    r9d,edi
  417e38:	mov    r8d,esi
  417e3b:	call   QWORD PTR [rip+0x214eb]        # 0x43932c
  417e41:	test   eax,eax
  417e43:	mov    ebx,eax
  417e45:	js     0x417e52
  417e47:	movsxd rax,ebx
  417e4a:	add    rsp,0x30
  417e4e:	pop    rbx
  417e4f:	pop    rsi
  417e50:	pop    rdi
  417e51:	ret    
  417e52:	call   QWORD PTR [rip+0x2145c]        # 0x4392b4
  417e58:	cmp    eax,0x2740
  417e5d:	mov    esi,eax
  417e5f:	je     0x4180e5
  417e65:	jg     0x417eb0
  417e67:	cmp    eax,0x2736
  417e6c:	je     0x4180c3
  417e72:	jle    0x417f30
  417e78:	cmp    eax,0x273a
  417e7d:	je     0x4180b2
  417e83:	jg     0x417fb2
  417e89:	cmp    eax,0x2738
  417e8e:	je     0x418107
  417e94:	jg     0x4180f6
  417e9a:	call   QWORD PTR [rip+0x2112c]        # 0x438fcc
  417ea0:	mov    DWORD PTR [rax],0x6d
  417ea6:	jmp    0x417e47
  417ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb0:	cmp    eax,0x2748
  417eb5:	je     0x4180d4
  417ebb:	jg     0x417ef0
  417ebd:	cmp    eax,0x2744
  417ec2:	je     0x4180a1
  417ec8:	jg     0x417f90
  417ece:	cmp    eax,0x2742
  417ed3:	je     0x418090
  417ed9:	jg     0x41807f
  417edf:	call   QWORD PTR [rip+0x210e7]        # 0x438fcc
  417ee5:	mov    DWORD PTR [rax],0x65
  417eeb:	jmp    0x417e47
  417ef0:	cmp    eax,0x274e
  417ef5:	je     0x41814b
  417efb:	jg     0x417ff2
  417f01:	cmp    eax,0x274c
  417f06:	je     0x41816d
  417f0c:	jg     0x41815c
  417f12:	cmp    eax,0x2749
  417f17:	jne    0x417fd3
  417f1d:	call   QWORD PTR [rip+0x210a9]        # 0x438fcc
  417f23:	mov    DWORD PTR [rax],0x7e
  417f29:	jmp    0x417e47
  417f2e:	xchg   ax,ax
  417f30:	cmp    eax,0x57
  417f33:	je     0x41803b
  417f39:	jle    0x418020
  417f3f:	cmp    eax,0x2734
  417f44:	je     0x41818f
  417f4a:	jg     0x41817e
  417f50:	cmp    eax,0x2733
  417f55:	jne    0x417fd3
  417f57:	call   QWORD PTR [rip+0x2106f]        # 0x438fcc
  417f5d:	mov    DWORD PTR [rax],0x8c
  417f63:	jmp    0x417e47
  417f68:	nop    DWORD PTR [rax+rax*1+0x0]
  417f70:	mov    QWORD PTR [rsp+0x28],rax
  417f75:	call   QWORD PTR [rip+0x21051]        # 0x438fcc
  417f7b:	mov    rcx,QWORD PTR [rsp+0x28]
  417f80:	mov    DWORD PTR [rax],0x9
  417f86:	mov    rax,rcx
  417f89:	jmp    0x417e4a
  417f8e:	xchg   ax,ax
  417f90:	cmp    eax,0x2746
  417f95:	je     0x418129
  417f9b:	jg     0x418118
  417fa1:	call   QWORD PTR [rip+0x21025]        # 0x438fcc
  417fa7:	mov    DWORD PTR [rax],0x6a
  417fad:	jmp    0x417e47
  417fb2:	cmp    eax,0x273d
  417fb7:	je     0x41806e
  417fbd:	cmp    eax,0x273f
  417fc2:	je     0x41805d
  417fc8:	cmp    eax,0x273b
  417fcd:	je     0x41813a
  417fd3:	call   QWORD PTR [rip+0x20ff3]        # 0x438fcc
  417fd9:	lea    ecx,[rsi-0x2711]
  417fdf:	lea    edx,[rsi-0x2710]
  417fe5:	cmp    ecx,0x17
  417fe8:	cmovbe esi,edx
  417feb:	mov    DWORD PTR [rax],esi
  417fed:	jmp    0x417e47
  417ff2:	cmp    eax,0x2751
  417ff7:	je     0x4181b1
  417ffd:	cmp    eax,0x2752
  418002:	je     0x4181a0
  418008:	cmp    eax,0x274f
  41800d:	jne    0x417fd3
  41800f:	call   QWORD PTR [rip+0x20fb7]        # 0x438fcc
  418015:	mov    DWORD PTR [rax],0x26
  41801b:	jmp    0x417e47
  418020:	cmp    eax,0x6
  418023:	je     0x41804c
  418025:	cmp    eax,0x8
  418028:	jne    0x417fd3
  41802a:	call   QWORD PTR [rip+0x20f9c]        # 0x438fcc
  418030:	mov    DWORD PTR [rax],0xc
  418036:	jmp    0x417e47
  41803b:	call   QWORD PTR [rip+0x20f8b]        # 0x438fcc
  418041:	mov    DWORD PTR [rax],0x16
  418047:	jmp    0x417e47
  41804c:	call   QWORD PTR [rip+0x20f7a]        # 0x438fcc
  418052:	mov    DWORD PTR [rax],0x9
  418058:	jmp    0x417e47
  41805d:	call   QWORD PTR [rip+0x20f69]        # 0x438fcc
  418063:	mov    DWORD PTR [rax],0x66
  418069:	jmp    0x417e47
  41806e:	call   QWORD PTR [rip+0x20f58]        # 0x438fcc
  418074:	mov    DWORD PTR [rax],0x82
  41807a:	jmp    0x417e47
  41807f:	call   QWORD PTR [rip+0x20f47]        # 0x438fcc
  418085:	mov    DWORD PTR [rax],0x76
  41808b:	jmp    0x417e47
  418090:	call   QWORD PTR [rip+0x20f36]        # 0x438fcc
  418096:	mov    DWORD PTR [rax],0x74
  41809c:	jmp    0x417e47
  4180a1:	call   QWORD PTR [rip+0x20f25]        # 0x438fcc
  4180a7:	mov    DWORD PTR [rax],0x75
  4180ad:	jmp    0x417e47
  4180b2:	call   QWORD PTR [rip+0x20f14]        # 0x438fcc
  4180b8:	mov    DWORD PTR [rax],0x7b
  4180be:	jmp    0x417e47
  4180c3:	call   QWORD PTR [rip+0x20f03]        # 0x438fcc
  4180c9:	mov    DWORD PTR [rax],0x80
  4180cf:	jmp    0x417e47
  4180d4:	call   QWORD PTR [rip+0x20ef2]        # 0x438fcc
  4180da:	mov    DWORD PTR [rax],0x71
  4180e0:	jmp    0x417e47
  4180e5:	call   QWORD PTR [rip+0x20ee1]        # 0x438fcc
  4180eb:	mov    DWORD PTR [rax],0x64
  4180f1:	jmp    0x417e47
  4180f6:	call   QWORD PTR [rip+0x20ed0]        # 0x438fcc
  4180fc:	mov    DWORD PTR [rax],0x88
  418102:	jmp    0x417e47
  418107:	call   QWORD PTR [rip+0x20ebf]        # 0x438fcc
  41810d:	mov    DWORD PTR [rax],0x73
  418113:	jmp    0x417e47
  418118:	call   QWORD PTR [rip+0x20eae]        # 0x438fcc
  41811e:	mov    DWORD PTR [rax],0x77
  418124:	jmp    0x417e47
  418129:	call   QWORD PTR [rip+0x20e9d]        # 0x438fcc
  41812f:	mov    DWORD PTR [rax],0x6c
  418135:	jmp    0x417e47
  41813a:	call   QWORD PTR [rip+0x20e8c]        # 0x438fcc
  418140:	mov    DWORD PTR [rax],0x87
  418146:	jmp    0x417e47
  41814b:	call   QWORD PTR [rip+0x20e7b]        # 0x438fcc
  418151:	mov    DWORD PTR [rax],0x72
  418157:	jmp    0x417e47
  41815c:	call   QWORD PTR [rip+0x20e6a]        # 0x438fcc
  418162:	mov    DWORD PTR [rax],0x6b
  418168:	jmp    0x417e47
  41816d:	call   QWORD PTR [rip+0x20e59]        # 0x438fcc
  418173:	mov    DWORD PTR [rax],0x8a
  418179:	jmp    0x417e47
  41817e:	call   QWORD PTR [rip+0x20e48]        # 0x438fcc
  418184:	mov    DWORD PTR [rax],0x67
  41818a:	jmp    0x417e47
  41818f:	call   QWORD PTR [rip+0x20e37]        # 0x438fcc
  418195:	mov    DWORD PTR [rax],0x70
  41819b:	jmp    0x417e47
  4181a0:	call   QWORD PTR [rip+0x20e26]        # 0x438fcc
  4181a6:	mov    DWORD PTR [rax],0x29
  4181ac:	jmp    0x417e47
  4181b1:	call   QWORD PTR [rip+0x20e15]        # 0x438fcc
  4181b7:	mov    DWORD PTR [rax],0x6e
  4181bd:	jmp    0x417e47
  4181c2:	nop
  4181c3:	nop
  4181c4:	nop
  4181c5:	nop
  4181c6:	nop
  4181c7:	nop
  4181c8:	nop
  4181c9:	nop
  4181ca:	nop
  4181cb:	nop
  4181cc:	nop
  4181cd:	nop
  4181ce:	nop
  4181cf:	nop
  4181d0:	push   rbp
  4181d1:	push   r15
  4181d3:	push   r14
  4181d5:	push   r13
  4181d7:	push   r12
  4181d9:	push   rdi
  4181da:	push   rsi
  4181db:	push   rbx
  4181dc:	sub    rsp,0x98
  4181e3:	lea    rbp,[rsp+0x80]
  4181eb:	mov    rdi,QWORD PTR [rbp+0x80]
  4181f2:	mov    r14,rcx
  4181f5:	mov    ebx,edx
  4181f7:	mov    r15,r8
  4181fa:	mov    r13,r9
  4181fd:	call   QWORD PTR [rip+0x20c51]        # 0x438e54
  418203:	cmp    eax,0x2
  418206:	je     0x4182f0
  41820c:	cmp    eax,0x3
  41820f:	je     0x418340
  418215:	cmp    eax,0x1
  418218:	je     0x41822d
  41821a:	xor    edx,edx
  41821c:	mov    rcx,r14
  41821f:	call   QWORD PTR [rip+0x20d17]        # 0x438f3c
  418225:	test   eax,eax
  418227:	jne    0x418319
  41822d:	lea    esi,[rbx+0x7]
  418230:	test   ebx,ebx
  418232:	mov    r10d,ebx
  418235:	mov    r8d,0x1
  41823b:	cmovns esi,ebx
  41823e:	and    r10d,0x7
  418242:	mov    r12d,esi
  418245:	sar    r12d,0x3
  418249:	movsxd r12,r12d
  41824c:	movzx  eax,BYTE PTR [r15+r12*1]
  418251:	bt     eax,r10d
  418255:	jae    0x418330
  41825b:	mov    eax,0x1
  418260:	mov    ecx,r10d
  418263:	xor    edx,edx
  418265:	shl    eax,cl
  418267:	or     BYTE PTR [r15+r12*1+0x8],al
  41826c:	mov    eax,0x1
  418271:	test   r8d,r8d
  418274:	je     0x4182a6
  418276:	lea    esi,[rbx+0x7]
  418279:	test   ebx,ebx
  41827b:	mov    ecx,ebx
  41827d:	cmovns esi,ebx
  418280:	and    ecx,0x7
  418283:	sar    esi,0x3
  418286:	movsxd rsi,esi
  418289:	movzx  r8d,BYTE PTR [r13+rsi*1+0x0]
  41828f:	bt     r8d,ecx
  418293:	jae    0x4182a6
  418295:	mov    r8d,0x1
  41829b:	add    eax,0x1
  41829e:	shl    r8d,cl
  4182a1:	or     BYTE PTR [r13+rsi*1+0x8],r8b
  4182a6:	test   edx,edx
  4182a8:	je     0x4182d7
  4182aa:	lea    edx,[rbx+0x7]
  4182ad:	test   ebx,ebx
  4182af:	cmovns edx,ebx
  4182b2:	and    ebx,0x7
  4182b5:	sar    edx,0x3
  4182b8:	movsxd rdx,edx
  4182bb:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  4182bf:	bt     ecx,ebx
  4182c2:	jae    0x4182d7
  4182c4:	mov    r8d,0x1
  4182ca:	mov    ecx,ebx
  4182cc:	add    eax,0x1
  4182cf:	shl    r8d,cl
  4182d2:	or     BYTE PTR [rdi+rdx*1+0x8],r8b
  4182d7:	lea    rsp,[rbp+0x18]
  4182db:	pop    rbx
  4182dc:	pop    rsi
  4182dd:	pop    rdi
  4182de:	pop    r12
  4182e0:	pop    r13
  4182e2:	pop    r14
  4182e4:	pop    r15
  4182e6:	pop    rbp
  4182e7:	ret    
  4182e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4182f0:	lea    esi,[rbx+0x7]
  4182f3:	test   ebx,ebx
  4182f5:	mov    r12d,ebx
  4182f8:	mov    r10d,ebx
  4182fb:	cmovs  r12d,esi
  4182ff:	and    r10d,0x7
  418303:	sar    r12d,0x3
  418307:	movsxd rax,r12d
  41830a:	movzx  eax,BYTE PTR [r15+rax*1]
  41830f:	bt     eax,r10d
  418313:	jb     0x4183d3
  418319:	xor    edx,edx
  41831b:	mov    r8d,0x1
  418321:	xor    eax,eax
  418323:	jmp    0x418271
  418328:	nop    DWORD PTR [rax+rax*1+0x0]
  418330:	xor    edx,edx
  418332:	xor    eax,eax
  418334:	jmp    0x418271
  418339:	nop    DWORD PTR [rax+0x0]
  418340:	mov    edx,DWORD PTR [rip+0x1cb52]        # 0x434e98
  418346:	test   edx,edx
  418348:	je     0x4183a0
  41834a:	lea    rax,[rbp-0x38]
  41834e:	xor    r9d,r9d
  418351:	xor    r8d,r8d
  418354:	xor    edx,edx
  418356:	mov    QWORD PTR [rsp+0x28],0x0
  41835f:	mov    rcx,r14
  418362:	mov    QWORD PTR [rsp+0x20],rax
  418367:	call   QWORD PTR [rip+0x20b5f]        # 0x438ecc
  41836d:	test   eax,eax
  41836f:	je     0x418450
  418375:	mov    eax,DWORD PTR [rbp-0x38]
  418378:	test   eax,eax
  41837a:	je     0x418500
  418380:	lea    esi,[rbx+0x7]
  418383:	test   ebx,ebx
  418385:	mov    r10d,ebx
  418388:	cmovns esi,ebx
  41838b:	and    r10d,0x7
  41838f:	xor    r8d,r8d
  418392:	mov    r12d,esi
  418395:	sar    r12d,0x3
  418399:	jmp    0x418249
  41839e:	xchg   ax,ax
  4183a0:	lea    rcx,[rip+0x14439]        # 0x42c7e0
  4183a7:	call   QWORD PTR [rip+0x20abf]        # 0x438e6c
  4183ad:	lea    rdx,[rip+0x14436]        # 0x42c7ea
  4183b4:	mov    rcx,rax
  4183b7:	call   QWORD PTR [rip+0x20ac7]        # 0x438e84
  4183bd:	mov    DWORD PTR [rip+0x1cad1],0x1        # 0x434e98
  4183c7:	mov    QWORD PTR [rip+0x1cac2],rax        # 0x434e90
  4183ce:	jmp    0x41834a
  4183d3:	xor    edx,edx
  4183d5:	mov    DWORD PTR [rbp-0x48],r10d
  4183d9:	mov    rcx,r14
  4183dc:	call   QWORD PTR [rip+0x20b5a]        # 0x438f3c
  4183e2:	test   eax,eax
  4183e4:	jne    0x418319
  4183ea:	lea    rdx,[rbp-0x20]
  4183ee:	mov    rcx,r14
  4183f1:	call   QWORD PTR [rip+0x20a35]        # 0x438e2c
  4183f7:	test   eax,eax
  4183f9:	mov    r8d,0x1
  4183ff:	mov    r10d,DWORD PTR [rbp-0x48]
  418403:	je     0x418249
  418409:	mov    DWORD PTR [rbp-0x38],0x0
  418410:	mov    DWORD PTR [rbp-0x34],0x0
  418417:	lea    rdx,[rbp-0x34]
  41841b:	mov    rcx,r14
  41841e:	call   QWORD PTR [rip+0x20a58]        # 0x438e7c
  418424:	test   eax,eax
  418426:	mov    r10d,DWORD PTR [rbp-0x48]
  41842a:	je     0x41850c
  418430:	mov    r8d,DWORD PTR [rbp-0x34]
  418434:	test   r8d,r8d
  418437:	jne    0x41852e
  41843d:	mov    edx,0x1
  418442:	mov    r8d,0x1
  418448:	xor    eax,eax
  41844a:	jmp    0x418271
  41844f:	nop
  418450:	call   QWORD PTR [rip+0x20a06]        # 0x438e5c
  418456:	cmp    eax,0x6d
  418459:	je     0x418500
  41845f:	mov    rax,QWORD PTR [rip+0x1ca2a]        # 0x434e90
  418466:	lea    rdx,[rbp-0x30]
  41846a:	mov    QWORD PTR [rbp-0x30],0x0
  418472:	mov    QWORD PTR [rbp-0x28],0x0
  41847a:	lea    r8,[rbp-0x20]
  41847e:	mov    QWORD PTR [rbp-0x20],0x0
  418486:	mov    QWORD PTR [rbp-0x18],0x0
  41848e:	mov    QWORD PTR [rbp-0x10],0x0
  418496:	test   rax,rax
  418499:	mov    QWORD PTR [rbp-0x8],0x0
  4184a1:	mov    QWORD PTR [rbp+0x0],0x0
  4184a9:	je     0x418319
  4184af:	mov    DWORD PTR [rsp+0x20],0x18
  4184b7:	mov    r9d,0x28
  4184bd:	mov    rcx,r14
  4184c0:	call   rax
  4184c2:	test   eax,eax
  4184c4:	jne    0x418319
  4184ca:	mov    eax,DWORD PTR [rbp-0x4]
  4184cd:	cmp    eax,0x1ff
  4184d2:	ja     0x418319
  4184d8:	mov    edx,DWORD PTR [rbp-0x8]
  4184db:	cmp    edx,0x1ff
  4184e1:	setbe  cl
  4184e4:	xor    r8d,r8d
  4184e7:	cmp    eax,edx
  4184e9:	sete   r8b
  4184ed:	xor    edx,edx
  4184ef:	xor    eax,eax
  4184f1:	and    r8d,ecx
  4184f4:	jmp    0x418271
  4184f9:	nop    DWORD PTR [rax+0x0]
  418500:	xor    edx,edx
  418502:	xor    r8d,r8d
  418505:	xor    eax,eax
  418507:	jmp    0x418271
  41850c:	lea    rdx,[rip+0x142ee]        # 0x42c801
  418513:	lea    rcx,[rip+0x142f0]        # 0x42c80a
  41851a:	mov    r8d,0xbf
  418520:	call   0x41cfe0
  418525:	mov    r10d,DWORD PTR [rbp-0x48]
  418529:	jmp    0x418430
  41852e:	mov    eax,r8d
  418531:	mov    DWORD PTR [rbp-0x4c],r10d
  418535:	lea    rax,[rax+rax*4]
  418539:	lea    rax,[rax*4+0x1e]
  418541:	shr    rax,0x4
  418545:	shl    rax,0x4
  418549:	call   0x41c880
  41854e:	sub    rsp,rax
  418551:	lea    r9,[rbp-0x38]
  418555:	mov    rcx,r14
  418558:	lea    r11,[rsp+0x30]
  41855d:	mov    rdx,r11
  418560:	mov    QWORD PTR [rbp-0x48],r11
  418564:	call   QWORD PTR [rip+0x2095a]        # 0x438ec4
  41856a:	test   eax,eax
  41856c:	mov    r11,QWORD PTR [rbp-0x48]
  418570:	mov    r10d,DWORD PTR [rbp-0x4c]
  418574:	je     0x41843d
  41857a:	mov    edx,DWORD PTR [rbp-0x38]
  41857d:	test   edx,edx
  41857f:	je     0x41843d
  418585:	lea    ecx,[rdx-0x1]
  418588:	mov    rax,r11
  41858b:	xor    edx,edx
  41858d:	mov    r8d,0x1
  418593:	add    rcx,0x1
  418597:	imul   rcx,rcx,0x14
  41859b:	add    rcx,r11
  41859e:	cmp    WORD PTR [rax],0x1
  4185a2:	cmove  edx,r8d
  4185a6:	add    rax,0x14
  4185aa:	cmp    rax,rcx
  4185ad:	jne    0x41859e
  4185af:	xor    eax,eax
  4185b1:	test   edx,edx
  4185b3:	mov    r8d,0x1
  4185b9:	jne    0x418249
  4185bf:	jmp    0x418279
  4185c4:	xchg   ax,ax
  4185c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185d0:	push   rbp
  4185d1:	push   r15
  4185d3:	push   r14
  4185d5:	push   r13
  4185d7:	push   r12
  4185d9:	push   rdi
  4185da:	push   rsi
  4185db:	push   rbx
  4185dc:	sub    rsp,0x948
  4185e3:	lea    rbp,[rsp+0x80]
  4185eb:	mov    eax,0x40
  4185f0:	cmp    ecx,0x40
  4185f3:	mov    r14,rdx
  4185f6:	mov    QWORD PTR [rbp+0x920],r8
  4185fd:	cmovle eax,ecx
  418600:	cmp    QWORD PTR [rbp+0x930],0x0
  418608:	mov    QWORD PTR [rbp+0x928],r9
  41860f:	mov    DWORD PTR [rbp-0x10],eax
  418612:	je     0x4191fb
  418618:	mov    rax,QWORD PTR [rbp+0x930]
  41861f:	mov    edx,0x10624dd3
  418624:	mov    rdi,QWORD PTR [rbp+0x930]
  41862b:	mov    ecx,DWORD PTR [rax+0x8]
  41862e:	mov    eax,ecx
  418630:	sar    ecx,0x1f
  418633:	imul   edx
  418635:	sar    edx,0x6
  418638:	mov    eax,edx
  41863a:	imul   edx,DWORD PTR [rdi],0x3e8
  418640:	sub    eax,ecx
  418642:	add    eax,edx
  418644:	test   r8,r8
  418647:	sete   dl
  41864a:	test   r9,r9
  41864d:	mov    DWORD PTR [rbp-0xc],eax
  418650:	sete   al
  418653:	test   dl,al
  418655:	je     0x418660
  418657:	test   r14,r14
  41865a:	je     0x41929b
  418660:	mov    rax,QWORD PTR [rip+0x1c841]        # 0x434ea8
  418667:	test   rax,rax
  41866a:	je     0x419212
  418670:	test   r14,r14
  418673:	mov    QWORD PTR [rbp+0x6b0],rax
  41867a:	mov    QWORD PTR [rbp+0x20],0x0
  418682:	mov    QWORD PTR [rbp+0x28],0x0
  41868a:	mov    QWORD PTR [rbp+0x30],0x0
  418692:	mov    QWORD PTR [rbp+0x38],0x0
  41869a:	mov    QWORD PTR [rbp+0x40],0x0
  4186a2:	mov    QWORD PTR [rbp+0x48],0x0
  4186aa:	mov    QWORD PTR [rbp+0x10],0x0
  4186b2:	je     0x419269
  4186b8:	mov    r9d,DWORD PTR [r14]
  4186bb:	test   r9d,r9d
  4186be:	je     0x418745
  4186c4:	lea    rax,[rbp+0xc]
  4186c8:	xor    r15d,r15d
  4186cb:	lea    rdi,[rbp+0x4a0]
  4186d2:	mov    rsi,QWORD PTR [rip+0x20753]        # 0x438e2c
  4186d9:	mov    r12d,0x1
  4186df:	mov    QWORD PTR [rbp-0x8],rax
  4186e3:	jmp    0x41870d
  4186e5:	lea    eax,[rbx+0x7]
  4186e8:	test   ebx,ebx
  4186ea:	mov    ecx,ebx
  4186ec:	mov    edx,r12d
  4186ef:	cmovns eax,ebx
  4186f2:	and    ecx,0x7
  4186f5:	add    r15d,0x1
  4186f9:	sar    eax,0x3
  4186fc:	shl    edx,cl
  4186fe:	cdqe   
  418700:	or     BYTE PTR [rbp+rax*1+0x20],dl
  418704:	or     BYTE PTR [rbp+rax*1+0x10],dl
  418708:	cmp    r15d,DWORD PTR [r14]
  41870b:	jae    0x418745
  41870d:	movsxd rax,r15d
  418710:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
  418715:	mov    ecx,ebx
  418717:	call   0x414c80
  41871c:	mov    rdx,rdi
  41871f:	mov    r13,rax
  418722:	mov    rcx,rax
  418725:	call   rsi
  418727:	test   eax,eax
  418729:	je     0x4186e5
  41872b:	mov    rdx,QWORD PTR [rbp-0x8]
  41872f:	mov    rcx,r13
  418732:	call   QWORD PTR [rip+0x20744]        # 0x438e7c
  418738:	test   eax,eax
  41873a:	jne    0x4186e5
  41873c:	add    r15d,0x1
  418740:	cmp    r15d,DWORD PTR [r14]
  418743:	jb     0x41870d
  418745:	cmp    QWORD PTR [rbp+0x920],0x0
  41874d:	je     0x419283
  418753:	mov    rax,QWORD PTR [rbp+0x920]
  41875a:	mov    r8d,DWORD PTR [rax]
  41875d:	test   r8d,r8d
  418760:	je     0x41880c
  418766:	lea    rax,[rbp+0xc]
  41876a:	xor    r15d,r15d
  41876d:	mov    QWORD PTR [rbp+0x918],r14
  418774:	lea    rdi,[rbp+0x4a0]
  41877b:	mov    rsi,QWORD PTR [rip+0x206aa]        # 0x438e2c
  418782:	mov    r12d,0x1
  418788:	mov    QWORD PTR [rbp-0x8],rax
  41878c:	mov    r14d,r15d
  41878f:	mov    rbx,QWORD PTR [rbp+0x920]
  418796:	jmp    0x4187cc
  418798:	nop    DWORD PTR [rax+rax*1+0x0]
  4187a0:	lea    eax,[r13+0x7]
  4187a4:	test   r13d,r13d
  4187a7:	mov    ecx,r13d
  4187aa:	mov    edx,r12d
  4187ad:	cmovns eax,r13d
  4187b1:	and    ecx,0x7
  4187b4:	add    r14d,0x1
  4187b8:	sar    eax,0x3
  4187bb:	shl    edx,cl
  4187bd:	cdqe   
  4187bf:	or     BYTE PTR [rbp+rax*1+0x30],dl
  4187c3:	or     BYTE PTR [rbp+rax*1+0x10],dl
  4187c7:	cmp    r14d,DWORD PTR [rbx]
  4187ca:	jae    0x418805
  4187cc:	movsxd rax,r14d
  4187cf:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
  4187d4:	mov    ecx,r13d
  4187d7:	call   0x414c80
  4187dc:	mov    rdx,rdi
  4187df:	mov    r15,rax
  4187e2:	mov    rcx,rax
  4187e5:	call   rsi
  4187e7:	test   eax,eax
  4187e9:	je     0x4187a0
  4187eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4187ef:	mov    rcx,r15
  4187f2:	call   QWORD PTR [rip+0x20684]        # 0x438e7c
  4187f8:	test   eax,eax
  4187fa:	je     0x4187a0
  4187fc:	add    r14d,0x1
  418800:	cmp    r14d,DWORD PTR [rbx]
  418803:	jb     0x4187cc
  418805:	mov    r14,QWORD PTR [rbp+0x918]
  41880c:	cmp    QWORD PTR [rbp+0x928],0x0
  418814:	je     0x419251
  41881a:	mov    rax,QWORD PTR [rbp+0x928]
  418821:	mov    eax,DWORD PTR [rax]
  418823:	test   eax,eax
  418825:	je     0x41886b
  418827:	mov    rdi,QWORD PTR [rbp+0x928]
  41882e:	sub    eax,0x1
  418831:	mov    r8d,0x1
  418837:	lea    rdx,[rdi+0x8]
  41883b:	lea    r9,[rdi+rax*8+0x10]
  418840:	mov    rcx,QWORD PTR [rdx]
  418843:	mov    edi,r8d
  418846:	lea    eax,[rcx+0x7]
  418849:	test   ecx,ecx
  41884b:	cmovns eax,ecx
  41884e:	and    ecx,0x7
  418851:	add    rdx,0x8
  418855:	sar    eax,0x3
  418858:	shl    edi,cl
  41885a:	cdqe   
  41885c:	or     BYTE PTR [rbp+rax*1+0x40],dil
  418861:	or     BYTE PTR [rbp+rax*1+0x10],dil
  418866:	cmp    rdx,r9
  418869:	jne    0x418840
  41886b:	mov    rax,QWORD PTR [rbp+0x920]
  418872:	mov    DWORD PTR [r14],0x0
  418879:	mov    DWORD PTR [rbp+0x80],0x0
  418883:	mov    DWORD PTR [rbp+0x290],0x0
  41888d:	mov    DWORD PTR [rbp+0x4a0],0x0
  418897:	mov    DWORD PTR [rax],0x0
  41889d:	mov    rax,QWORD PTR [rbp+0x928]
  4188a4:	mov    DWORD PTR [rax],0x0
  4188aa:	mov    eax,DWORD PTR [rbp-0x10]
  4188ad:	test   eax,eax
  4188af:	jle    0x4192ab
  4188b5:	lea    rbx,[rbp+0x50]
  4188b9:	xor    esi,esi
  4188bb:	mov    r15d,0x1
  4188c1:	mov    DWORD PTR [rbp-0x18],esi
  4188c4:	mov    r12d,eax
  4188c7:	mov    QWORD PTR [rbp-0x8],rbx
  4188cb:	lea    rbx,[rbp+0x30]
  4188cf:	mov    QWORD PTR [rbp-0x20],rbx
  4188d3:	lea    rbx,[rbp+0x20]
  4188d7:	mov    QWORD PTR [rbp-0x28],rbx
  4188db:	jmp    0x4188ec
  4188dd:	nop    DWORD PTR [rax]
  4188e0:	add    esi,0x1
  4188e3:	cmp    esi,r12d
  4188e6:	je     0x41897b
  4188ec:	mov    r9d,esi
  4188ef:	mov    r13d,esi
  4188f2:	sar    r9d,0x3
  4188f6:	and    r13d,0x7
  4188fa:	movsxd rdi,r9d
  4188fd:	movzx  eax,BYTE PTR [rbp+rdi*1+0x10]
  418902:	bt     eax,r13d
  418906:	jae    0x4188e0
  418908:	mov    ecx,esi
  41890a:	call   0x414c80
  41890f:	test   rax,rax
  418912:	mov    rbx,rax
  418915:	je     0x4191ab
  41891b:	mov    rdx,QWORD PTR [rbp-0x8]
  41891f:	mov    rcx,rax
  418922:	call   QWORD PTR [rip+0x20504]        # 0x438e2c
  418928:	test   eax,eax
  41892a:	je     0x418a67
  418930:	mov    ecx,DWORD PTR [rbp-0xc]
  418933:	mov    eax,r15d
  418936:	add    r15d,0x1
  41893a:	mov    QWORD PTR [rbp+rax*8+0x6b0],rbx
  418942:	test   ecx,ecx
  418944:	je     0x4188e0
  418946:	lea    rax,[rbp+0x40]
  41894a:	mov    r9,QWORD PTR [rbp-0x20]
  41894e:	mov    r8,QWORD PTR [rbp-0x28]
  418952:	mov    edx,esi
  418954:	mov    rcx,rbx
  418957:	mov    QWORD PTR [rsp+0x20],rax
  41895c:	call   0x4181d0
  418961:	test   eax,eax
  418963:	mov    eax,0x0
  418968:	cmove  eax,DWORD PTR [rbp-0xc]
  41896c:	add    esi,0x1
  41896f:	cmp    esi,r12d
  418972:	mov    DWORD PTR [rbp-0xc],eax
  418975:	jne    0x4188ec
  41897b:	mov    esi,DWORD PTR [rbp-0x18]
  41897e:	test   esi,esi
  418980:	sete   BYTE PTR [rbp-0x20]
  418984:	setne  BYTE PTR [rbp-0x41]
  418988:	mov    edi,DWORD PTR [rbp-0xc]
  41898b:	mov    eax,r15d
  41898e:	mov    QWORD PTR [rbp+rax*8+0x6b0],0x0
  41899a:	cmp    edi,0xffffffff
  41899d:	je     0x4189ab
  41899f:	call   0x421ea0
  4189a4:	mov    ebx,eax
  4189a6:	add    ebx,edi
  4189a8:	mov    DWORD PTR [rbp-0x48],ebx
  4189ab:	mov    QWORD PTR [rbp+0x918],r14
  4189b2:	mov    r14d,DWORD PTR [rbp-0xc]
  4189b6:	lea    rax,[rbp+0x6b0]
  4189bd:	mov    rbx,QWORD PTR [rip+0x208c0]        # 0x439284
  4189c4:	mov    r13,QWORD PTR [rip+0x208c1]        # 0x43928c
  4189cb:	mov    QWORD PTR [rbp-0x28],rax
  4189cf:	mov    rax,QWORD PTR [rip+0x2095e]        # 0x439334
  4189d6:	test   r14d,r14d
  4189d9:	mov    r12,QWORD PTR [rip+0x2088c]        # 0x43926c
  4189e0:	sete   dil
  4189e4:	or     dil,BYTE PTR [rbp-0x20]
  4189e8:	mov    QWORD PTR [rbp-0x50],rax
  4189ec:	je     0x418e45
  4189f2:	cmp    r14d,0xffffffff
  4189f6:	mov    edi,0x1
  4189fb:	mov    DWORD PTR [rbp-0xc],0x0
  418a02:	jne    0x418e92
  418a08:	mov    BYTE PTR [rbp-0x8],dil
  418a0c:	mov    rdi,QWORD PTR [rbp-0x28]
  418a10:	lea    rsi,[rbp+0x50]
  418a14:	xor    r8d,r8d
  418a17:	mov    DWORD PTR [rsp+0x20],0x4ff
  418a1f:	mov    r9d,r14d
  418a22:	mov    rdx,rdi
  418a25:	mov    ecx,r15d
  418a28:	call   QWORD PTR [rip+0x2084e]        # 0x43927c
  418a2e:	cmp    eax,r15d
  418a31:	jne    0x418cb2
  418a37:	nop    WORD PTR [rax+rax*1+0x0]
  418a40:	xor    r9d,r9d
  418a43:	xor    r8d,r8d
  418a46:	xor    edx,edx
  418a48:	mov    DWORD PTR [rsp+0x20],0x1
  418a50:	mov    rcx,rsi
  418a53:	call   rbx
  418a55:	test   eax,eax
  418a57:	je     0x418a14
  418a59:	mov    rcx,rsi
  418a5c:	call   r13
  418a5f:	mov    rcx,rsi
  418a62:	call   r12
  418a65:	jmp    0x418a40
  418a67:	xor    edx,edx
  418a69:	mov    DWORD PTR [rbp+0x50],0xdeadbeef
  418a70:	mov    r8,QWORD PTR [rbp-0x8]
  418a74:	mov    rcx,rbx
  418a77:	call   QWORD PTR [rip+0x20827]        # 0x4392a4
  418a7d:	cmp    DWORD PTR [rbp+0x50],0xdeadbeef
  418a84:	je     0x418930
  418a8a:	movzx  eax,BYTE PTR [rbp+rdi*1+0x20]
  418a8f:	mov    r8d,0x20
  418a95:	bt     eax,r13d
  418a99:	jae    0x418b39
  418a9f:	mov    ecx,DWORD PTR [r14]
  418aa2:	test   ecx,ecx
  418aa4:	je     0x418aca
  418aa6:	cmp    rbx,QWORD PTR [r14+0x8]
  418aaa:	je     0x418ad7
  418aac:	lea    rdx,[r14+0x10]
  418ab0:	xor    eax,eax
  418ab2:	jmp    0x418abe
  418ab4:	add    rdx,0x8
  418ab8:	cmp    QWORD PTR [rdx-0x8],rbx
  418abc:	je     0x418ad7
  418abe:	add    eax,0x1
  418ac1:	cmp    eax,ecx
  418ac3:	jne    0x418ab4
  418ac5:	cmp    ecx,0x3f
  418ac8:	ja     0x418ad7
  418aca:	mov    eax,ecx
  418acc:	add    ecx,0x1
  418acf:	mov    QWORD PTR [r14+rax*8+0x8],rbx
  418ad4:	mov    DWORD PTR [r14],ecx
  418ad7:	mov    ecx,DWORD PTR [rbp+0x80]
  418add:	test   ecx,ecx
  418adf:	je     0x418b20
  418ae1:	cmp    rbx,QWORD PTR [rbp+0x88]
  418ae8:	je     0x4191a0
  418aee:	lea    rdx,[rbp+0x90]
  418af5:	xor    eax,eax
  418af7:	jmp    0x418b0e
  418af9:	nop    DWORD PTR [rax+0x0]
  418b00:	add    rdx,0x8
  418b04:	cmp    QWORD PTR [rdx-0x8],rbx
  418b08:	je     0x4191a0
  418b0e:	add    eax,0x1
  418b11:	cmp    eax,ecx
  418b13:	jne    0x418b00
  418b15:	cmp    ecx,0x3f
  418b18:	mov    r8d,0x29
  418b1e:	ja     0x418b39
  418b20:	mov    eax,ecx
  418b22:	add    ecx,0x1
  418b25:	mov    r8d,0x29
  418b2b:	mov    QWORD PTR [rbp+rax*8+0x88],rbx
  418b33:	mov    DWORD PTR [rbp+0x80],ecx
  418b39:	movzx  eax,BYTE PTR [rbp+rdi*1+0x30]
  418b3e:	bt     eax,r13d
  418b42:	jae    0x418be9
  418b48:	mov    rax,QWORD PTR [rbp+0x920]
  418b4f:	or     r8d,0x12
  418b53:	mov    ecx,DWORD PTR [rax]
  418b55:	test   ecx,ecx
  418b57:	je     0x418b86
  418b59:	cmp    rbx,QWORD PTR [rax+0x8]
  418b5d:	je     0x418b99
  418b5f:	lea    rdx,[rax+0x10]
  418b63:	xor    eax,eax
  418b65:	jmp    0x418b7a
  418b67:	nop    WORD PTR [rax+rax*1+0x0]
  418b70:	add    rdx,0x8
  418b74:	cmp    QWORD PTR [rdx-0x8],rbx
  418b78:	je     0x418b99
  418b7a:	add    eax,0x1
  418b7d:	cmp    eax,ecx
  418b7f:	jne    0x418b70
  418b81:	cmp    ecx,0x3f
  418b84:	ja     0x418b99
  418b86:	mov    rdx,QWORD PTR [rbp+0x920]
  418b8d:	mov    eax,ecx
  418b8f:	add    ecx,0x1
  418b92:	mov    QWORD PTR [rdx+rax*8+0x8],rbx
  418b97:	mov    DWORD PTR [rdx],ecx
  418b99:	mov    ecx,DWORD PTR [rbp+0x290]
  418b9f:	test   ecx,ecx
  418ba1:	je     0x418bd6
  418ba3:	cmp    rbx,QWORD PTR [rbp+0x298]
  418baa:	je     0x418be9
  418bac:	lea    rdx,[rbp+0x2a0]
  418bb3:	xor    eax,eax
  418bb5:	jmp    0x418bca
  418bb7:	nop    WORD PTR [rax+rax*1+0x0]
  418bc0:	add    rdx,0x8
  418bc4:	cmp    QWORD PTR [rdx-0x8],rbx
  418bc8:	je     0x418be9
  418bca:	add    eax,0x1
  418bcd:	cmp    eax,ecx
  418bcf:	jne    0x418bc0
  418bd1:	cmp    ecx,0x3f
  418bd4:	ja     0x418be9
  418bd6:	mov    eax,ecx
  418bd8:	add    ecx,0x1
  418bdb:	mov    QWORD PTR [rbp+rax*8+0x298],rbx
  418be3:	mov    DWORD PTR [rbp+0x290],ecx
  418be9:	movzx  eax,BYTE PTR [rbp+rdi*1+0x40]
  418bee:	bt     eax,r13d
  418bf2:	jae    0x418c99
  418bf8:	mov    rax,QWORD PTR [rbp+0x928]
  418bff:	or     r8d,0x4
  418c03:	mov    ecx,DWORD PTR [rax]
  418c05:	test   ecx,ecx
  418c07:	je     0x418c36
  418c09:	cmp    rbx,QWORD PTR [rax+0x8]
  418c0d:	je     0x418c49
  418c0f:	lea    rdx,[rax+0x10]
  418c13:	xor    eax,eax
  418c15:	jmp    0x418c2a
  418c17:	nop    WORD PTR [rax+rax*1+0x0]
  418c20:	add    rdx,0x8
  418c24:	cmp    QWORD PTR [rdx-0x8],rbx
  418c28:	je     0x418c49
  418c2a:	add    eax,0x1
  418c2d:	cmp    eax,ecx
  418c2f:	jne    0x418c20
  418c31:	cmp    ecx,0x3f
  418c34:	ja     0x418c49
  418c36:	mov    rdi,QWORD PTR [rbp+0x928]
  418c3d:	mov    eax,ecx
  418c3f:	add    ecx,0x1
  418c42:	mov    QWORD PTR [rdi+rax*8+0x8],rbx
  418c47:	mov    DWORD PTR [rdi],ecx
  418c49:	mov    ecx,DWORD PTR [rbp+0x4a0]
  418c4f:	test   ecx,ecx
  418c51:	je     0x418c86
  418c53:	cmp    rbx,QWORD PTR [rbp+0x4a8]
  418c5a:	je     0x418c99
  418c5c:	lea    rdx,[rbp+0x4b0]
  418c63:	xor    eax,eax
  418c65:	jmp    0x418c7a
  418c67:	nop    WORD PTR [rax+rax*1+0x0]
  418c70:	add    rdx,0x8
  418c74:	cmp    QWORD PTR [rdx-0x8],rbx
  418c78:	je     0x418c99
  418c7a:	add    eax,0x1
  418c7d:	cmp    eax,ecx
  418c7f:	jne    0x418c70
  418c81:	cmp    ecx,0x3f
  418c84:	ja     0x418c99
  418c86:	mov    eax,ecx
  418c88:	add    ecx,0x1
  418c8b:	mov    QWORD PTR [rbp+rax*8+0x4a8],rbx
  418c93:	mov    DWORD PTR [rbp+0x4a0],ecx
  418c99:	mov    rdx,QWORD PTR [rip+0x1c208]        # 0x434ea8
  418ca0:	mov    rcx,rbx
  418ca3:	call   QWORD PTR [rip+0x20603]        # 0x4392ac
  418ca9:	add    DWORD PTR [rbp-0x18],0x1
  418cad:	jmp    0x4188e0
  418cb2:	movzx  edi,BYTE PTR [rbp-0x8]
  418cb6:	test   dil,dil
  418cb9:	je     0x418ced
  418cbb:	cmp    BYTE PTR [rbp-0x41],0x0
  418cbf:	je     0x418ced
  418cc1:	lea    rax,[rip+0x1c1d4]        # 0x434e9c
  418cc8:	lea    rdx,[rbp+0x80]
  418ccf:	lea    r9,[rbp+0x4a0]
  418cd6:	lea    r8,[rbp+0x290]
  418cdd:	xor    ecx,ecx
  418cdf:	mov    QWORD PTR [rsp+0x20],rax
  418ce4:	mov    rax,QWORD PTR [rbp-0x50]
  418ce8:	call   rax
  418cea:	mov    DWORD PTR [rbp-0xc],eax
  418ced:	cmp    r15d,0x1
  418cf1:	jbe    0x418ef7
  418cf7:	mov    eax,DWORD PTR [rbp-0x10]
  418cfa:	test   eax,eax
  418cfc:	jle    0x418ee6
  418d02:	lea    rdi,[rbp+0x30]
  418d06:	mov    r15d,0x1
  418d0c:	xor    esi,esi
  418d0e:	mov    DWORD PTR [rbp-0x18],r14d
  418d12:	mov    DWORD PTR [rbp-0x8],r15d
  418d16:	mov    QWORD PTR [rbp-0x30],rdi
  418d1a:	lea    rdi,[rbp+0x20]
  418d1e:	mov    QWORD PTR [rbp-0x38],rdi
  418d22:	lea    rdi,[rbp+0x40]
  418d26:	mov    QWORD PTR [rbp-0x40],rdi
  418d2a:	mov    edi,eax
  418d2c:	jmp    0x418d37
  418d2e:	xchg   ax,ax
  418d30:	add    esi,0x1
  418d33:	cmp    esi,edi
  418d35:	je     0x418db6
  418d37:	mov    r10d,esi
  418d3a:	mov    r14d,esi
  418d3d:	sar    r10d,0x3
  418d41:	and    r14d,0x7
  418d45:	movsxd r15,r10d
  418d48:	movzx  eax,BYTE PTR [rbp+r15*1+0x10]
  418d4e:	bt     eax,r14d
  418d52:	jae    0x418d30
  418d54:	mov    ecx,esi
  418d56:	call   0x414c80
  418d5b:	mov    edx,DWORD PTR [rbp-0x8]
  418d5e:	mov    rcx,QWORD PTR [rbp+rdx*8+0x6b0]
  418d66:	cmp    rcx,rax
  418d69:	jne    0x418d30
  418d6b:	mov    rax,QWORD PTR [rbp-0x40]
  418d6f:	mov    r9,QWORD PTR [rbp-0x30]
  418d73:	mov    edx,esi
  418d75:	mov    r8,QWORD PTR [rbp-0x38]
  418d79:	add    DWORD PTR [rbp-0x8],0x1
  418d7d:	mov    QWORD PTR [rsp+0x20],rax
  418d82:	call   0x4181d0
  418d87:	movzx  eax,BYTE PTR [rbp+r15*1+0x28]
  418d8d:	bt     eax,r14d
  418d91:	jb     0x418dab
  418d93:	movzx  eax,BYTE PTR [rbp+r15*1+0x38]
  418d99:	bt     eax,r14d
  418d9d:	jb     0x418dab
  418d9f:	movzx  eax,BYTE PTR [rbp+r15*1+0x48]
  418da5:	bt     eax,r14d
  418da9:	jae    0x418d30
  418dab:	add    esi,0x1
  418dae:	add    DWORD PTR [rbp-0xc],0x1
  418db2:	cmp    esi,edi
  418db4:	jne    0x418d37
  418db6:	mov    edx,DWORD PTR [rbp-0xc]
  418db9:	mov    r14d,DWORD PTR [rbp-0x18]
  418dbd:	mov    r15d,DWORD PTR [rbp-0x8]
  418dc1:	test   edx,edx
  418dc3:	jne    0x418ef7
  418dc9:	cmp    r14d,0xffffffff
  418dcd:	je     0x418de2
  418dcf:	cmp    r15d,0x1
  418dd3:	jbe    0x4191c1
  418dd9:	test   r14d,r14d
  418ddc:	je     0x4191c1
  418de2:	lea    rax,[rbp+0x80]
  418de9:	mov    rsi,QWORD PTR [rbp+0x918]
  418df0:	mov    ecx,0x41
  418df5:	mov    edx,0x1
  418dfa:	mov    rdi,rax
  418dfd:	lea    rax,[rbp+0x290]
  418e04:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e07:	mov    rdi,rax
  418e0a:	mov    rsi,QWORD PTR [rbp+0x920]
  418e11:	lea    rax,[rbp+0x4a0]
  418e18:	mov    cl,0x41
  418e1a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e1d:	mov    rdi,rax
  418e20:	mov    rsi,QWORD PTR [rbp+0x928]
  418e27:	mov    cl,0x41
  418e29:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e2c:	mov    cl,0x1
  418e2e:	call   QWORD PTR [rip+0x200d8]        # 0x438f0c
  418e34:	test   r14d,r14d
  418e37:	sete   dil
  418e3b:	or     dil,BYTE PTR [rbp-0x20]
  418e3f:	jne    0x4189f2
  418e45:	lea    r10,[rbp+0x290]
  418e4c:	lea    r11,[rbp+0x80]
  418e53:	lea    rax,[rbp+0x4a0]
  418e5a:	lea    rdx,[rip+0x1c03b]        # 0x434e9c
  418e61:	xor    ecx,ecx
  418e63:	mov    r8,r10
  418e66:	mov    QWORD PTR [rbp-0x18],r10
  418e6a:	mov    QWORD PTR [rbp-0x8],r11
  418e6e:	mov    QWORD PTR [rsp+0x20],rdx
  418e73:	mov    QWORD PTR [rbp-0x30],rax
  418e77:	mov    rdx,r11
  418e7a:	mov    r9,rax
  418e7d:	call   QWORD PTR [rip+0x204b1]        # 0x439334
  418e83:	test   eax,eax
  418e85:	mov    DWORD PTR [rbp-0xc],eax
  418e88:	mov    r11,QWORD PTR [rbp-0x8]
  418e8c:	mov    r10,QWORD PTR [rbp-0x18]
  418e90:	je     0x418eb0
  418e92:	call   0x421ea0
  418e97:	mov    edx,DWORD PTR [rbp-0x48]
  418e9a:	mov    r14d,edx
  418e9d:	sub    r14d,eax
  418ea0:	cmp    eax,edx
  418ea2:	mov    eax,0x0
  418ea7:	cmovg  r14d,eax
  418eab:	jmp    0x418a08
  418eb0:	mov    ecx,0x41
  418eb5:	mov    rdi,r11
  418eb8:	mov    rsi,QWORD PTR [rbp+0x918]
  418ebf:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ec2:	mov    rdi,r10
  418ec5:	mov    rsi,QWORD PTR [rbp+0x920]
  418ecc:	mov    cl,0x41
  418ece:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ed1:	mov    rdi,QWORD PTR [rbp-0x30]
  418ed5:	mov    rsi,QWORD PTR [rbp+0x928]
  418edc:	mov    cl,0x41
  418ede:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ee1:	jmp    0x4189f2
  418ee6:	mov    edx,DWORD PTR [rbp-0xc]
  418ee9:	mov    r15d,0x1
  418eef:	test   edx,edx
  418ef1:	je     0x418dc9
  418ef7:	mov    r14,QWORD PTR [rbp+0x918]
  418efe:	mov    rax,QWORD PTR [rbp+0x920]
  418f05:	mov    DWORD PTR [r14],0x0
  418f0c:	mov    DWORD PTR [rax],0x0
  418f12:	mov    rax,QWORD PTR [rbp+0x928]
  418f19:	mov    DWORD PTR [rax],0x0
  418f1f:	mov    eax,DWORD PTR [rbp-0x10]
  418f22:	test   eax,eax
  418f24:	jle    0x4190a2
  418f2a:	lea    rax,[rbp+0x80]
  418f31:	lea    r12,[rbp+0x4a0]
  418f38:	mov    ebx,0x1
  418f3d:	xor    r13d,r13d
  418f40:	mov    DWORD PTR [rbp-0x8],ebx
  418f43:	mov    rdi,QWORD PTR [rbp+0x920]
  418f4a:	mov    QWORD PTR [rbp-0x18],rax
  418f4e:	lea    rax,[rbp+0x290]
  418f55:	mov    r15,QWORD PTR [rbp+0x928]
  418f5c:	mov    QWORD PTR [rbp-0x28],r12
  418f60:	mov    QWORD PTR [rbp-0x20],rax
  418f64:	jmp    0x418f74
  418f66:	add    r13,0x1
  418f6a:	cmp    DWORD PTR [rbp-0x10],r13d
  418f6e:	jle    0x4190a2
  418f74:	mov    esi,r13d
  418f77:	mov    ebx,r13d
  418f7a:	sar    esi,0x3
  418f7d:	and    ebx,0x7
  418f80:	movsxd rsi,esi
  418f83:	movzx  eax,BYTE PTR [rbp+rsi*1+0x10]
  418f88:	bt     eax,ebx
  418f8b:	jae    0x418f66
  418f8d:	mov    ecx,r13d
  418f90:	call   0x414c80
  418f95:	mov    r12,rax
  418f98:	mov    eax,DWORD PTR [rbp-0x8]
  418f9b:	cmp    QWORD PTR [rbp+rax*8+0x6b0],r12
  418fa3:	je     0x4190b9
  418fa9:	xor    r8d,r8d
  418fac:	xor    edx,edx
  418fae:	mov    rcx,r12
  418fb1:	call   QWORD PTR [rip+0x202f5]        # 0x4392ac
  418fb7:	mov    rdx,QWORD PTR [rbp-0x18]
  418fbb:	mov    rcx,r12
  418fbe:	call   0x41b278
  418fc3:	test   eax,eax
  418fc5:	je     0x418ffa
  418fc7:	mov    ecx,DWORD PTR [r14]
  418fca:	test   ecx,ecx
  418fcc:	je     0x41922e
  418fd2:	cmp    QWORD PTR [r14+0x8],r13
  418fd6:	je     0x418ffa
  418fd8:	lea    rdx,[r14+0x10]
  418fdc:	xor    eax,eax
  418fde:	jmp    0x418fea
  418fe0:	add    rdx,0x8
  418fe4:	cmp    r13,QWORD PTR [rdx-0x8]
  418fe8:	je     0x418ffa
  418fea:	add    eax,0x1
  418fed:	cmp    eax,ecx
  418fef:	jne    0x418fe0
  418ff1:	cmp    ecx,0x3f
  418ff4:	jbe    0x41922e
  418ffa:	mov    rdx,QWORD PTR [rbp-0x20]
  418ffe:	mov    rcx,r12
  419001:	call   0x41b278
  419006:	test   eax,eax
  419008:	je     0x41903c
  41900a:	mov    ecx,DWORD PTR [rdi]
  41900c:	test   ecx,ecx
  41900e:	je     0x419240
  419014:	cmp    QWORD PTR [rdi+0x8],r13
  419018:	je     0x41903c
  41901a:	lea    rax,[rdi+0x10]
  41901e:	xor    edx,edx
  419020:	jmp    0x41902c
  419022:	add    rax,0x8
  419026:	cmp    QWORD PTR [rax-0x8],r13
  41902a:	je     0x41903c
  41902c:	add    edx,0x1
  41902f:	cmp    edx,ecx
  419031:	jne    0x419022
  419033:	cmp    ecx,0x3f
  419036:	jbe    0x419240
  41903c:	mov    rdx,QWORD PTR [rbp-0x28]
  419040:	mov    rcx,r12
  419043:	call   0x41b278
  419048:	test   eax,eax
  41904a:	je     0x418f66
  419050:	mov    ecx,DWORD PTR [r15]
  419053:	test   ecx,ecx
  419055:	je     0x419087
  419057:	cmp    QWORD PTR [r15+0x8],r13
  41905b:	je     0x418f66
  419061:	lea    rdx,[r15+0x10]
  419065:	xor    eax,eax
  419067:	jmp    0x419077
  419069:	add    rdx,0x8
  41906d:	cmp    QWORD PTR [rdx-0x8],r13
  419071:	je     0x418f66
  419077:	add    eax,0x1
  41907a:	cmp    eax,ecx
  41907c:	jne    0x419069
  41907e:	cmp    ecx,0x3f
  419081:	ja     0x418f66
  419087:	mov    eax,ecx
  419089:	add    ecx,0x1
  41908c:	mov    QWORD PTR [r15+rax*8+0x8],r13
  419091:	add    r13,0x1
  419095:	cmp    DWORD PTR [rbp-0x10],r13d
  419099:	mov    DWORD PTR [r15],ecx
  41909c:	jg     0x418f74
  4190a2:	mov    eax,DWORD PTR [rbp-0xc]
  4190a5:	lea    rsp,[rbp+0x8c8]
  4190ac:	pop    rbx
  4190ad:	pop    rsi
  4190ae:	pop    rdi
  4190af:	pop    r12
  4190b1:	pop    r13
  4190b3:	pop    r14
  4190b5:	pop    r15
  4190b7:	pop    rbp
  4190b8:	ret    
  4190b9:	movzx  eax,BYTE PTR [rbp+rsi*1+0x28]
  4190be:	add    DWORD PTR [rbp-0x8],0x1
  4190c2:	bt     eax,ebx
  4190c5:	jae    0x419103
  4190c7:	mov    eax,DWORD PTR [r14]
  4190ca:	test   eax,eax
  4190cc:	je     0x4190f6
  4190ce:	cmp    QWORD PTR [r14+0x8],r13
  4190d2:	je     0x419103
  4190d4:	lea    r8,[r14+0x10]
  4190d8:	xor    ecx,ecx
  4190da:	jmp    0x4190ea
  4190dc:	nop    DWORD PTR [rax+0x0]
  4190e0:	add    r8,0x8
  4190e4:	cmp    QWORD PTR [r8-0x8],r13
  4190e8:	je     0x419103
  4190ea:	add    ecx,0x1
  4190ed:	cmp    ecx,eax
  4190ef:	jne    0x4190e0
  4190f1:	cmp    eax,0x3f
  4190f4:	ja     0x419103
  4190f6:	mov    ecx,eax
  4190f8:	add    eax,0x1
  4190fb:	mov    QWORD PTR [r14+rcx*8+0x8],r13
  419100:	mov    DWORD PTR [r14],eax
  419103:	movzx  eax,BYTE PTR [rbp+rsi*1+0x38]
  419108:	bt     eax,ebx
  41910b:	jae    0x419143
  41910d:	mov    eax,DWORD PTR [rdi]
  41910f:	test   eax,eax
  419111:	je     0x419137
  419113:	cmp    QWORD PTR [rdi+0x8],r13
  419117:	je     0x419143
  419119:	lea    r8,[rdi+0x10]
  41911d:	xor    ecx,ecx
  41911f:	jmp    0x41912b
  419121:	add    r8,0x8
  419125:	cmp    QWORD PTR [r8-0x8],r13
  419129:	je     0x419143
  41912b:	add    ecx,0x1
  41912e:	cmp    ecx,eax
  419130:	jne    0x419121
  419132:	cmp    eax,0x3f
  419135:	ja     0x419143
  419137:	mov    ecx,eax
  419139:	add    eax,0x1
  41913c:	mov    QWORD PTR [rdi+rcx*8+0x8],r13
  419141:	mov    DWORD PTR [rdi],eax
  419143:	movzx  eax,BYTE PTR [rbp+rsi*1+0x48]
  419148:	bt     eax,ebx
  41914b:	jae    0x418f66
  419151:	mov    eax,DWORD PTR [r15]
  419154:	test   eax,eax
  419156:	je     0x41918e
  419158:	cmp    QWORD PTR [r15+0x8],r13
  41915c:	je     0x418f66
  419162:	lea    rcx,[r15+0x10]
  419166:	xor    edx,edx
  419168:	jmp    0x41917e
  41916a:	nop    WORD PTR [rax+rax*1+0x0]
  419170:	add    rcx,0x8
  419174:	cmp    QWORD PTR [rcx-0x8],r13
  419178:	je     0x418f66
  41917e:	add    edx,0x1
  419181:	cmp    edx,eax
  419183:	jne    0x419170
  419185:	cmp    eax,0x3f
  419188:	ja     0x418f66
  41918e:	mov    edx,eax
  419190:	add    eax,0x1
  419193:	mov    QWORD PTR [r15+rdx*8+0x8],r13
  419198:	mov    DWORD PTR [r15],eax
  41919b:	jmp    0x418f66
  4191a0:	mov    r8d,0x29
  4191a6:	jmp    0x418b39
  4191ab:	call   QWORD PTR [rip+0x1fe1b]        # 0x438fcc
  4191b1:	mov    DWORD PTR [rax],0x9
  4191b7:	mov    eax,0xffffffff
  4191bc:	jmp    0x4190a5
  4191c1:	mov    eax,r14d
  4191c4:	mov    r14,QWORD PTR [rbp+0x918]
  4191cb:	test   eax,eax
  4191cd:	jne    0x418efe
  4191d3:	cmp    QWORD PTR [rbp+0x930],0x0
  4191db:	je     0x418efe
  4191e1:	mov    rax,QWORD PTR [rbp+0x930]
  4191e8:	mov    DWORD PTR [rax+0x8],0x0
  4191ef:	mov    QWORD PTR [rax],0x0
  4191f6:	jmp    0x418efe
  4191fb:	mov    rax,QWORD PTR [rip+0x1bca6]        # 0x434ea8
  419202:	mov    DWORD PTR [rbp-0xc],0xffffffff
  419209:	test   rax,rax
  41920c:	jne    0x418670
  419212:	xor    r9d,r9d
  419215:	xor    r8d,r8d
  419218:	xor    edx,edx
  41921a:	xor    ecx,ecx
  41921c:	call   QWORD PTR [rip+0x1fbea]        # 0x438e0c
  419222:	mov    QWORD PTR [rip+0x1bc7f],rax        # 0x434ea8
  419229:	jmp    0x418670
  41922e:	mov    eax,ecx
  419230:	add    ecx,0x1
  419233:	mov    QWORD PTR [r14+rax*8+0x8],r13
  419238:	mov    DWORD PTR [r14],ecx
  41923b:	jmp    0x418ffa
  419240:	mov    eax,ecx
  419242:	add    ecx,0x1
  419245:	mov    QWORD PTR [rdi+rax*8+0x8],r13
  41924a:	mov    DWORD PTR [rdi],ecx
  41924c:	jmp    0x41903c
  419251:	sub    rsp,0x220
  419258:	lea    rax,[rsp+0x30]
  41925d:	mov    QWORD PTR [rbp+0x928],rax
  419264:	jmp    0x41886b
  419269:	sub    rsp,0x220
  419270:	cmp    QWORD PTR [rbp+0x920],0x0
  419278:	lea    r14,[rsp+0x30]
  41927d:	jne    0x418753
  419283:	sub    rsp,0x220
  41928a:	lea    rax,[rsp+0x30]
  41928f:	mov    QWORD PTR [rbp+0x920],rax
  419296:	jmp    0x41880c
  41929b:	mov    ecx,DWORD PTR [rbp-0xc]
  41929e:	call   QWORD PTR [rip+0x1fc60]        # 0x438f04
  4192a4:	xor    eax,eax
  4192a6:	jmp    0x4190a5
  4192ab:	mov    BYTE PTR [rbp-0x41],0x0
  4192af:	mov    BYTE PTR [rbp-0x20],0x1
  4192b3:	mov    r15d,0x1
  4192b9:	jmp    0x418988
  4192be:	nop
  4192bf:	nop
  4192c0:	push   rdi
  4192c1:	push   rsi
  4192c2:	push   rbx
  4192c3:	sub    rsp,0x30
  4192c7:	mov    rbx,rdx
  4192ca:	mov    rsi,r8
  4192cd:	mov    edi,r9d
  4192d0:	call   0x414c80
  4192d5:	cmp    rax,0xffffffffffffffff
  4192d9:	mov    rcx,rax
  4192dc:	je     0x419420
  4192e2:	mov    rdx,rbx
  4192e5:	mov    r9d,edi
  4192e8:	mov    r8d,esi
  4192eb:	call   QWORD PTR [rip+0x2004b]        # 0x43933c
  4192f1:	test   eax,eax
  4192f3:	mov    ebx,eax
  4192f5:	js     0x419302
  4192f7:	movsxd rax,ebx
  4192fa:	add    rsp,0x30
  4192fe:	pop    rbx
  4192ff:	pop    rsi
  419300:	pop    rdi
  419301:	ret    
  419302:	call   QWORD PTR [rip+0x1ffac]        # 0x4392b4
  419308:	cmp    eax,0x2740
  41930d:	mov    esi,eax
  41930f:	je     0x419595
  419315:	jg     0x419360
  419317:	cmp    eax,0x2736
  41931c:	je     0x419573
  419322:	jle    0x4193e0
  419328:	cmp    eax,0x273a
  41932d:	je     0x419562
  419333:	jg     0x419462
  419339:	cmp    eax,0x2738
  41933e:	je     0x4195b7
  419344:	jg     0x4195a6
  41934a:	call   QWORD PTR [rip+0x1fc7c]        # 0x438fcc
  419350:	mov    DWORD PTR [rax],0x6d
  419356:	jmp    0x4192f7
  419358:	nop    DWORD PTR [rax+rax*1+0x0]
  419360:	cmp    eax,0x2748
  419365:	je     0x419584
  41936b:	jg     0x4193a0
  41936d:	cmp    eax,0x2744
  419372:	je     0x419551
  419378:	jg     0x419440
  41937e:	cmp    eax,0x2742
  419383:	je     0x419540
  419389:	jg     0x41952f
  41938f:	call   QWORD PTR [rip+0x1fc37]        # 0x438fcc
  419395:	mov    DWORD PTR [rax],0x65
  41939b:	jmp    0x4192f7
  4193a0:	cmp    eax,0x274e
  4193a5:	je     0x4195fb
  4193ab:	jg     0x4194a2
  4193b1:	cmp    eax,0x274c
  4193b6:	je     0x41961d
  4193bc:	jg     0x41960c
  4193c2:	cmp    eax,0x2749
  4193c7:	jne    0x419483
  4193cd:	call   QWORD PTR [rip+0x1fbf9]        # 0x438fcc
  4193d3:	mov    DWORD PTR [rax],0x7e
  4193d9:	jmp    0x4192f7
  4193de:	xchg   ax,ax
  4193e0:	cmp    eax,0x57
  4193e3:	je     0x4194eb
  4193e9:	jle    0x4194d0
  4193ef:	cmp    eax,0x2734
  4193f4:	je     0x41963f
  4193fa:	jg     0x41962e
  419400:	cmp    eax,0x2733
  419405:	jne    0x419483
  419407:	call   QWORD PTR [rip+0x1fbbf]        # 0x438fcc
  41940d:	mov    DWORD PTR [rax],0x8c
  419413:	jmp    0x4192f7
  419418:	nop    DWORD PTR [rax+rax*1+0x0]
  419420:	mov    QWORD PTR [rsp+0x28],rax
  419425:	call   QWORD PTR [rip+0x1fba1]        # 0x438fcc
  41942b:	mov    rcx,QWORD PTR [rsp+0x28]
  419430:	mov    DWORD PTR [rax],0x9
  419436:	mov    rax,rcx
  419439:	jmp    0x4192fa
  41943e:	xchg   ax,ax
  419440:	cmp    eax,0x2746
  419445:	je     0x4195d9
  41944b:	jg     0x4195c8
  419451:	call   QWORD PTR [rip+0x1fb75]        # 0x438fcc
  419457:	mov    DWORD PTR [rax],0x6a
  41945d:	jmp    0x4192f7
  419462:	cmp    eax,0x273d
  419467:	je     0x41951e
  41946d:	cmp    eax,0x273f
  419472:	je     0x41950d
  419478:	cmp    eax,0x273b
  41947d:	je     0x4195ea
  419483:	call   QWORD PTR [rip+0x1fb43]        # 0x438fcc
  419489:	lea    ecx,[rsi-0x2711]
  41948f:	lea    edx,[rsi-0x2710]
  419495:	cmp    ecx,0x17
  419498:	cmovbe esi,edx
  41949b:	mov    DWORD PTR [rax],esi
  41949d:	jmp    0x4192f7
  4194a2:	cmp    eax,0x2751
  4194a7:	je     0x419661
  4194ad:	cmp    eax,0x2752
  4194b2:	je     0x419650
  4194b8:	cmp    eax,0x274f
  4194bd:	jne    0x419483
  4194bf:	call   QWORD PTR [rip+0x1fb07]        # 0x438fcc
  4194c5:	mov    DWORD PTR [rax],0x26
  4194cb:	jmp    0x4192f7
  4194d0:	cmp    eax,0x6
  4194d3:	je     0x4194fc
  4194d5:	cmp    eax,0x8
  4194d8:	jne    0x419483
  4194da:	call   QWORD PTR [rip+0x1faec]        # 0x438fcc
  4194e0:	mov    DWORD PTR [rax],0xc
  4194e6:	jmp    0x4192f7
  4194eb:	call   QWORD PTR [rip+0x1fadb]        # 0x438fcc
  4194f1:	mov    DWORD PTR [rax],0x16
  4194f7:	jmp    0x4192f7
  4194fc:	call   QWORD PTR [rip+0x1faca]        # 0x438fcc
  419502:	mov    DWORD PTR [rax],0x9
  419508:	jmp    0x4192f7
  41950d:	call   QWORD PTR [rip+0x1fab9]        # 0x438fcc
  419513:	mov    DWORD PTR [rax],0x66
  419519:	jmp    0x4192f7
  41951e:	call   QWORD PTR [rip+0x1faa8]        # 0x438fcc
  419524:	mov    DWORD PTR [rax],0x82
  41952a:	jmp    0x4192f7
  41952f:	call   QWORD PTR [rip+0x1fa97]        # 0x438fcc
  419535:	mov    DWORD PTR [rax],0x76
  41953b:	jmp    0x4192f7
  419540:	call   QWORD PTR [rip+0x1fa86]        # 0x438fcc
  419546:	mov    DWORD PTR [rax],0x74
  41954c:	jmp    0x4192f7
  419551:	call   QWORD PTR [rip+0x1fa75]        # 0x438fcc
  419557:	mov    DWORD PTR [rax],0x75
  41955d:	jmp    0x4192f7
  419562:	call   QWORD PTR [rip+0x1fa64]        # 0x438fcc
  419568:	mov    DWORD PTR [rax],0x7b
  41956e:	jmp    0x4192f7
  419573:	call   QWORD PTR [rip+0x1fa53]        # 0x438fcc
  419579:	mov    DWORD PTR [rax],0x80
  41957f:	jmp    0x4192f7
  419584:	call   QWORD PTR [rip+0x1fa42]        # 0x438fcc
  41958a:	mov    DWORD PTR [rax],0x71
  419590:	jmp    0x4192f7
  419595:	call   QWORD PTR [rip+0x1fa31]        # 0x438fcc
  41959b:	mov    DWORD PTR [rax],0x64
  4195a1:	jmp    0x4192f7
  4195a6:	call   QWORD PTR [rip+0x1fa20]        # 0x438fcc
  4195ac:	mov    DWORD PTR [rax],0x88
  4195b2:	jmp    0x4192f7
  4195b7:	call   QWORD PTR [rip+0x1fa0f]        # 0x438fcc
  4195bd:	mov    DWORD PTR [rax],0x73
  4195c3:	jmp    0x4192f7
  4195c8:	call   QWORD PTR [rip+0x1f9fe]        # 0x438fcc
  4195ce:	mov    DWORD PTR [rax],0x77
  4195d4:	jmp    0x4192f7
  4195d9:	call   QWORD PTR [rip+0x1f9ed]        # 0x438fcc
  4195df:	mov    DWORD PTR [rax],0x6c
  4195e5:	jmp    0x4192f7
  4195ea:	call   QWORD PTR [rip+0x1f9dc]        # 0x438fcc
  4195f0:	mov    DWORD PTR [rax],0x87
  4195f6:	jmp    0x4192f7
  4195fb:	call   QWORD PTR [rip+0x1f9cb]        # 0x438fcc
  419601:	mov    DWORD PTR [rax],0x72
  419607:	jmp    0x4192f7
  41960c:	call   QWORD PTR [rip+0x1f9ba]        # 0x438fcc
  419612:	mov    DWORD PTR [rax],0x6b
  419618:	jmp    0x4192f7
  41961d:	call   QWORD PTR [rip+0x1f9a9]        # 0x438fcc
  419623:	mov    DWORD PTR [rax],0x8a
  419629:	jmp    0x4192f7
  41962e:	call   QWORD PTR [rip+0x1f998]        # 0x438fcc
  419634:	mov    DWORD PTR [rax],0x67
  41963a:	jmp    0x4192f7
  41963f:	call   QWORD PTR [rip+0x1f987]        # 0x438fcc
  419645:	mov    DWORD PTR [rax],0x70
  41964b:	jmp    0x4192f7
  419650:	call   QWORD PTR [rip+0x1f976]        # 0x438fcc
  419656:	mov    DWORD PTR [rax],0x29
  41965c:	jmp    0x4192f7
  419661:	call   QWORD PTR [rip+0x1f965]        # 0x438fcc
  419667:	mov    DWORD PTR [rax],0x6e
  41966d:	jmp    0x4192f7
  419672:	nop
  419673:	nop
  419674:	nop
  419675:	nop
  419676:	nop
  419677:	nop
  419678:	nop
  419679:	nop
  41967a:	nop
  41967b:	nop
  41967c:	nop
  41967d:	nop
  41967e:	nop
  41967f:	nop
  419680:	push   rdi
  419681:	push   rsi
  419682:	push   rbx
  419683:	sub    rsp,0x50
  419687:	mov    ebx,edx
  419689:	mov    esi,r8d
  41968c:	mov    rdi,r9
  41968f:	call   0x414c80
  419694:	cmp    rax,0xffffffffffffffff
  419698:	mov    rcx,rax
  41969b:	je     0x4198ef
  4196a1:	cmp    ebx,0xffff
  4196a7:	je     0x4196d4
  4196a9:	mov    eax,DWORD PTR [rsp+0x90]
  4196b0:	mov    r8d,esi
  4196b3:	mov    r9,rdi
  4196b6:	mov    edx,ebx
  4196b8:	mov    DWORD PTR [rsp+0x20],eax
  4196bc:	call   QWORD PTR [rip+0x1fc82]        # 0x439344
  4196c2:	mov    esi,eax
  4196c4:	test   esi,esi
  4196c6:	mov    ebx,esi
  4196c8:	js     0x419722
  4196ca:	mov    eax,ebx
  4196cc:	add    rsp,0x50
  4196d0:	pop    rbx
  4196d1:	pop    rsi
  4196d2:	pop    rdi
  4196d3:	ret    
  4196d4:	lea    eax,[rsi-0x1005]
  4196da:	cmp    eax,0x1
  4196dd:	ja     0x4196a9
  4196df:	mov    r8d,DWORD PTR [rdi+0x8]
  4196e3:	mov    edx,0x10624dd3
  4196e8:	lea    r9,[rsp+0x4c]
  4196ed:	mov    eax,r8d
  4196f0:	sar    r8d,0x1f
  4196f4:	imul   edx
  4196f6:	imul   eax,DWORD PTR [rdi],0x3e8
  4196fc:	mov    DWORD PTR [rsp+0x20],0x4
  419704:	sar    edx,0x6
  419707:	sub    edx,r8d
  41970a:	mov    r8d,esi
  41970d:	add    edx,eax
  41970f:	mov    DWORD PTR [rsp+0x4c],edx
  419713:	mov    edx,0xffff
  419718:	call   QWORD PTR [rip+0x1fc26]        # 0x439344
  41971e:	mov    esi,eax
  419720:	jmp    0x4196c4
  419722:	call   QWORD PTR [rip+0x1fb8c]        # 0x4392b4
  419728:	cmp    eax,0x2740
  41972d:	mov    edi,eax
  41972f:	je     0x41991d
  419735:	jg     0x419780
  419737:	cmp    eax,0x2736
  41973c:	je     0x4199c9
  419742:	jle    0x419800
  419748:	cmp    eax,0x273a
  41974d:	je     0x4199b8
  419753:	jg     0x419862
  419759:	cmp    eax,0x2738
  41975e:	je     0x419a1e
  419764:	jg     0x419a0d
  41976a:	call   QWORD PTR [rip+0x1f85c]        # 0x438fcc
  419770:	mov    DWORD PTR [rax],0x6d
  419776:	jmp    0x4196ca
  41977b:	nop    DWORD PTR [rax+rax*1+0x0]
  419780:	cmp    eax,0x2748
  419785:	je     0x41990c
  41978b:	jg     0x4197c0
  41978d:	cmp    eax,0x2744
  419792:	je     0x4199da
  419798:	jg     0x419840
  41979e:	cmp    eax,0x2742
  4197a3:	je     0x4199fc
  4197a9:	jg     0x4199eb
  4197af:	call   QWORD PTR [rip+0x1f817]        # 0x438fcc
  4197b5:	mov    DWORD PTR [rax],0x65
  4197bb:	jmp    0x4196ca
  4197c0:	cmp    eax,0x274e
  4197c5:	je     0x419961
  4197cb:	jg     0x4198a4
  4197d1:	cmp    eax,0x274c
  4197d6:	je     0x419950
  4197dc:	jg     0x41993f
  4197e2:	cmp    eax,0x2749
  4197e7:	jne    0x419883
  4197ed:	call   QWORD PTR [rip+0x1f7d9]        # 0x438fcc
  4197f3:	mov    ebx,esi
  4197f5:	mov    DWORD PTR [rax],0x7e
  4197fb:	jmp    0x4196ca
  419800:	cmp    eax,0x57
  419803:	je     0x419972
  419809:	jle    0x4198d4
  41980f:	cmp    eax,0x2734
  419814:	je     0x419a62
  41981a:	jg     0x419a51
  419820:	cmp    eax,0x2733
  419825:	jne    0x419883
  419827:	call   QWORD PTR [rip+0x1f79f]        # 0x438fcc
  41982d:	mov    ebx,esi
  41982f:	mov    DWORD PTR [rax],0x8c
  419835:	jmp    0x4196ca
  41983a:	nop    WORD PTR [rax+rax*1+0x0]
  419840:	cmp    eax,0x2746
  419845:	je     0x419a40
  41984b:	jg     0x419a2f
  419851:	call   QWORD PTR [rip+0x1f775]        # 0x438fcc
  419857:	mov    DWORD PTR [rax],0x6a
  41985d:	jmp    0x4196ca
  419862:	cmp    eax,0x273d
  419867:	je     0x4199a7
  41986d:	cmp    eax,0x273f
  419872:	je     0x419996
  419878:	cmp    eax,0x273b
  41987d:	je     0x419983
  419883:	call   QWORD PTR [rip+0x1f743]        # 0x438fcc
  419889:	lea    ecx,[rdi-0x2711]
  41988f:	lea    edx,[rdi-0x2710]
  419895:	mov    ebx,esi
  419897:	cmp    ecx,0x17
  41989a:	cmovbe edi,edx
  41989d:	mov    DWORD PTR [rax],edi
  41989f:	jmp    0x4196ca
  4198a4:	cmp    eax,0x2751
  4198a9:	je     0x419a84
  4198af:	cmp    eax,0x2752
  4198b4:	je     0x419a73
  4198ba:	cmp    eax,0x274f
  4198bf:	jne    0x419883
  4198c1:	call   QWORD PTR [rip+0x1f705]        # 0x438fcc
  4198c7:	mov    ebx,esi
  4198c9:	mov    DWORD PTR [rax],0x26
  4198cf:	jmp    0x4196ca
  4198d4:	cmp    eax,0x6
  4198d7:	je     0x41992e
  4198d9:	cmp    eax,0x8
  4198dc:	jne    0x419883
  4198de:	call   QWORD PTR [rip+0x1f6e8]        # 0x438fcc
  4198e4:	mov    DWORD PTR [rax],0xc
  4198ea:	jmp    0x4196ca
  4198ef:	mov    QWORD PTR [rsp+0x38],rax
  4198f4:	call   QWORD PTR [rip+0x1f6d2]        # 0x438fcc
  4198fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4198ff:	mov    DWORD PTR [rax],0x9
  419905:	mov    ebx,ecx
  419907:	jmp    0x4196ca
  41990c:	call   QWORD PTR [rip+0x1f6ba]        # 0x438fcc
  419912:	mov    DWORD PTR [rax],0x71
  419918:	jmp    0x4196ca
  41991d:	call   QWORD PTR [rip+0x1f6a9]        # 0x438fcc
  419923:	mov    DWORD PTR [rax],0x64
  419929:	jmp    0x4196ca
  41992e:	call   QWORD PTR [rip+0x1f698]        # 0x438fcc
  419934:	mov    DWORD PTR [rax],0x9
  41993a:	jmp    0x4196ca
  41993f:	call   QWORD PTR [rip+0x1f687]        # 0x438fcc
  419945:	mov    DWORD PTR [rax],0x6b
  41994b:	jmp    0x4196ca
  419950:	call   QWORD PTR [rip+0x1f676]        # 0x438fcc
  419956:	mov    DWORD PTR [rax],0x8a
  41995c:	jmp    0x4196ca
  419961:	call   QWORD PTR [rip+0x1f665]        # 0x438fcc
  419967:	mov    DWORD PTR [rax],0x72
  41996d:	jmp    0x4196ca
  419972:	call   QWORD PTR [rip+0x1f654]        # 0x438fcc
  419978:	mov    DWORD PTR [rax],0x16
  41997e:	jmp    0x4196ca
  419983:	call   QWORD PTR [rip+0x1f643]        # 0x438fcc
  419989:	mov    ebx,esi
  41998b:	mov    DWORD PTR [rax],0x87
  419991:	jmp    0x4196ca
  419996:	call   QWORD PTR [rip+0x1f630]        # 0x438fcc
  41999c:	mov    DWORD PTR [rax],0x66
  4199a2:	jmp    0x4196ca
  4199a7:	call   QWORD PTR [rip+0x1f61f]        # 0x438fcc
  4199ad:	mov    DWORD PTR [rax],0x82
  4199b3:	jmp    0x4196ca
  4199b8:	call   QWORD PTR [rip+0x1f60e]        # 0x438fcc
  4199be:	mov    DWORD PTR [rax],0x7b
  4199c4:	jmp    0x4196ca
  4199c9:	call   QWORD PTR [rip+0x1f5fd]        # 0x438fcc
  4199cf:	mov    DWORD PTR [rax],0x80
  4199d5:	jmp    0x4196ca
  4199da:	call   QWORD PTR [rip+0x1f5ec]        # 0x438fcc
  4199e0:	mov    DWORD PTR [rax],0x75
  4199e6:	jmp    0x4196ca
  4199eb:	call   QWORD PTR [rip+0x1f5db]        # 0x438fcc
  4199f1:	mov    DWORD PTR [rax],0x76
  4199f7:	jmp    0x4196ca
  4199fc:	call   QWORD PTR [rip+0x1f5ca]        # 0x438fcc
  419a02:	mov    DWORD PTR [rax],0x74
  419a08:	jmp    0x4196ca
  419a0d:	call   QWORD PTR [rip+0x1f5b9]        # 0x438fcc
  419a13:	mov    DWORD PTR [rax],0x88
  419a19:	jmp    0x4196ca
  419a1e:	call   QWORD PTR [rip+0x1f5a8]        # 0x438fcc
  419a24:	mov    DWORD PTR [rax],0x73
  419a2a:	jmp    0x4196ca
  419a2f:	call   QWORD PTR [rip+0x1f597]        # 0x438fcc
  419a35:	mov    DWORD PTR [rax],0x77
  419a3b:	jmp    0x4196ca
  419a40:	call   QWORD PTR [rip+0x1f586]        # 0x438fcc
  419a46:	mov    DWORD PTR [rax],0x6c
  419a4c:	jmp    0x4196ca
  419a51:	call   QWORD PTR [rip+0x1f575]        # 0x438fcc
  419a57:	mov    DWORD PTR [rax],0x67
  419a5d:	jmp    0x4196ca
  419a62:	call   QWORD PTR [rip+0x1f564]        # 0x438fcc
  419a68:	mov    DWORD PTR [rax],0x70
  419a6e:	jmp    0x4196ca
  419a73:	call   QWORD PTR [rip+0x1f553]        # 0x438fcc
  419a79:	mov    DWORD PTR [rax],0x29
  419a7f:	jmp    0x4196ca
  419a84:	call   QWORD PTR [rip+0x1f542]        # 0x438fcc
  419a8a:	mov    DWORD PTR [rax],0x6e
  419a90:	jmp    0x4196ca
  419a95:	nop
  419a96:	nop
  419a97:	nop
  419a98:	nop
  419a99:	nop
  419a9a:	nop
  419a9b:	nop
  419a9c:	nop
  419a9d:	nop
  419a9e:	nop
  419a9f:	nop
  419aa0:	push   rdi
  419aa1:	push   rsi
  419aa2:	push   rbx
  419aa3:	sub    rsp,0x30
  419aa7:	mov    ebx,edx
  419aa9:	call   0x414c80
  419aae:	cmp    rax,0xffffffffffffffff
  419ab2:	mov    rcx,rax
  419ab5:	je     0x419bf0
  419abb:	mov    edx,ebx
  419abd:	call   QWORD PTR [rip+0x1f889]        # 0x43934c
  419ac3:	test   eax,eax
  419ac5:	mov    esi,eax
  419ac7:	mov    ebx,eax
  419ac9:	js     0x419ad5
  419acb:	mov    eax,ebx
  419acd:	add    rsp,0x30
  419ad1:	pop    rbx
  419ad2:	pop    rsi
  419ad3:	pop    rdi
  419ad4:	ret    
  419ad5:	call   QWORD PTR [rip+0x1f7d9]        # 0x4392b4
  419adb:	cmp    eax,0x2740
  419ae0:	mov    edi,eax
  419ae2:	je     0x419d7b
  419ae8:	jg     0x419b30
  419aea:	cmp    eax,0x2736
  419aef:	je     0x419d59
  419af5:	jle    0x419bb2
  419afb:	cmp    eax,0x273a
  419b00:	je     0x419d48
  419b06:	jg     0x419c34
  419b0c:	cmp    eax,0x2738
  419b11:	je     0x419d9f
  419b17:	jg     0x419d8c
  419b1d:	call   QWORD PTR [rip+0x1f4a9]        # 0x438fcc
  419b23:	mov    ebx,esi
  419b25:	mov    DWORD PTR [rax],0x6d
  419b2b:	jmp    0x419acb
  419b2d:	nop    DWORD PTR [rax]
  419b30:	cmp    eax,0x2748
  419b35:	je     0x419d6a
  419b3b:	jg     0x419b72
  419b3d:	cmp    eax,0x2744
  419b42:	je     0x419d37
  419b48:	jg     0x419c10
  419b4e:	cmp    eax,0x2742
  419b53:	je     0x419d26
  419b59:	jg     0x419d13
  419b5f:	call   QWORD PTR [rip+0x1f467]        # 0x438fcc
  419b65:	mov    ebx,esi
  419b67:	mov    DWORD PTR [rax],0x65
  419b6d:	jmp    0x419acb
  419b72:	cmp    eax,0x274e
  419b77:	je     0x419de7
  419b7d:	jg     0x419c80
  419b83:	cmp    eax,0x274c
  419b88:	je     0x419e0b
  419b8e:	jg     0x419df8
  419b94:	cmp    eax,0x2749
  419b99:	jne    0x419c55
  419b9f:	call   QWORD PTR [rip+0x1f427]        # 0x438fcc
  419ba5:	mov    ebx,esi
  419ba7:	mov    DWORD PTR [rax],0x7e
  419bad:	jmp    0x419acb
  419bb2:	cmp    eax,0x57
  419bb5:	je     0x419ccd
  419bbb:	jle    0x419cb0
  419bc1:	cmp    eax,0x2734
  419bc6:	je     0x419e2f
  419bcc:	jg     0x419e1c
  419bd2:	cmp    eax,0x2733
  419bd7:	jne    0x419c55
  419bd9:	call   QWORD PTR [rip+0x1f3ed]        # 0x438fcc
  419bdf:	mov    ebx,esi
  419be1:	mov    DWORD PTR [rax],0x8c
  419be7:	jmp    0x419acb
  419bec:	nop    DWORD PTR [rax+0x0]
  419bf0:	mov    QWORD PTR [rsp+0x28],rax
  419bf5:	call   QWORD PTR [rip+0x1f3d1]        # 0x438fcc
  419bfb:	mov    rcx,QWORD PTR [rsp+0x28]
  419c00:	mov    DWORD PTR [rax],0x9
  419c06:	mov    ebx,ecx
  419c08:	jmp    0x419acb
  419c0d:	nop    DWORD PTR [rax]
  419c10:	cmp    eax,0x2746
  419c15:	je     0x419dc3
  419c1b:	jg     0x419db0
  419c21:	call   QWORD PTR [rip+0x1f3a5]        # 0x438fcc
  419c27:	mov    ebx,esi
  419c29:	mov    DWORD PTR [rax],0x6a
  419c2f:	jmp    0x419acb
  419c34:	cmp    eax,0x273d
  419c39:	je     0x419d02
  419c3f:	cmp    eax,0x273f
  419c44:	je     0x419cef
  419c4a:	cmp    eax,0x273b
  419c4f:	je     0x419dd4
  419c55:	call   QWORD PTR [rip+0x1f371]        # 0x438fcc
  419c5b:	lea    ecx,[rdi-0x2711]
  419c61:	lea    edx,[rdi-0x2710]
  419c67:	mov    ebx,esi
  419c69:	cmp    ecx,0x17
  419c6c:	cmovbe edi,edx
  419c6f:	mov    DWORD PTR [rax],edi
  419c71:	jmp    0x419acb
  419c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c80:	cmp    eax,0x2751
  419c85:	je     0x419e53
  419c8b:	cmp    eax,0x2752
  419c90:	je     0x419e40
  419c96:	cmp    eax,0x274f
  419c9b:	jne    0x419c55
  419c9d:	call   QWORD PTR [rip+0x1f329]        # 0x438fcc
  419ca3:	mov    ebx,esi
  419ca5:	mov    DWORD PTR [rax],0x26
  419cab:	jmp    0x419acb
  419cb0:	cmp    eax,0x6
  419cb3:	je     0x419cde
  419cb5:	cmp    eax,0x8
  419cb8:	jne    0x419c55
  419cba:	call   QWORD PTR [rip+0x1f30c]        # 0x438fcc
  419cc0:	mov    ebx,esi
  419cc2:	mov    DWORD PTR [rax],0xc
  419cc8:	jmp    0x419acb
  419ccd:	call   QWORD PTR [rip+0x1f2f9]        # 0x438fcc
  419cd3:	mov    DWORD PTR [rax],0x16
  419cd9:	jmp    0x419acb
  419cde:	call   QWORD PTR [rip+0x1f2e8]        # 0x438fcc
  419ce4:	mov    DWORD PTR [rax],0x9
  419cea:	jmp    0x419acb
  419cef:	call   QWORD PTR [rip+0x1f2d7]        # 0x438fcc
  419cf5:	mov    ebx,esi
  419cf7:	mov    DWORD PTR [rax],0x66
  419cfd:	jmp    0x419acb
  419d02:	call   QWORD PTR [rip+0x1f2c4]        # 0x438fcc
  419d08:	mov    DWORD PTR [rax],0x82
  419d0e:	jmp    0x419acb
  419d13:	call   QWORD PTR [rip+0x1f2b3]        # 0x438fcc
  419d19:	mov    ebx,esi
  419d1b:	mov    DWORD PTR [rax],0x76
  419d21:	jmp    0x419acb
  419d26:	call   QWORD PTR [rip+0x1f2a0]        # 0x438fcc
  419d2c:	mov    DWORD PTR [rax],0x74
  419d32:	jmp    0x419acb
  419d37:	call   QWORD PTR [rip+0x1f28f]        # 0x438fcc
  419d3d:	mov    DWORD PTR [rax],0x75
  419d43:	jmp    0x419acb
  419d48:	call   QWORD PTR [rip+0x1f27e]        # 0x438fcc
  419d4e:	mov    DWORD PTR [rax],0x7b
  419d54:	jmp    0x419acb
  419d59:	call   QWORD PTR [rip+0x1f26d]        # 0x438fcc
  419d5f:	mov    DWORD PTR [rax],0x80
  419d65:	jmp    0x419acb
  419d6a:	call   QWORD PTR [rip+0x1f25c]        # 0x438fcc
  419d70:	mov    DWORD PTR [rax],0x71
  419d76:	jmp    0x419acb
  419d7b:	call   QWORD PTR [rip+0x1f24b]        # 0x438fcc
  419d81:	mov    DWORD PTR [rax],0x64
  419d87:	jmp    0x419acb
  419d8c:	call   QWORD PTR [rip+0x1f23a]        # 0x438fcc
  419d92:	mov    ebx,esi
  419d94:	mov    DWORD PTR [rax],0x88
  419d9a:	jmp    0x419acb
  419d9f:	call   QWORD PTR [rip+0x1f227]        # 0x438fcc
  419da5:	mov    DWORD PTR [rax],0x73
  419dab:	jmp    0x419acb
  419db0:	call   QWORD PTR [rip+0x1f216]        # 0x438fcc
  419db6:	mov    ebx,esi
  419db8:	mov    DWORD PTR [rax],0x77
  419dbe:	jmp    0x419acb
  419dc3:	call   QWORD PTR [rip+0x1f203]        # 0x438fcc
  419dc9:	mov    DWORD PTR [rax],0x6c
  419dcf:	jmp    0x419acb
  419dd4:	call   QWORD PTR [rip+0x1f1f2]        # 0x438fcc
  419dda:	mov    ebx,esi
  419ddc:	mov    DWORD PTR [rax],0x87
  419de2:	jmp    0x419acb
  419de7:	call   QWORD PTR [rip+0x1f1df]        # 0x438fcc
  419ded:	mov    DWORD PTR [rax],0x72
  419df3:	jmp    0x419acb
  419df8:	call   QWORD PTR [rip+0x1f1ce]        # 0x438fcc
  419dfe:	mov    ebx,esi
  419e00:	mov    DWORD PTR [rax],0x6b
  419e06:	jmp    0x419acb
  419e0b:	call   QWORD PTR [rip+0x1f1bb]        # 0x438fcc
  419e11:	mov    DWORD PTR [rax],0x8a
  419e17:	jmp    0x419acb
  419e1c:	call   QWORD PTR [rip+0x1f1aa]        # 0x438fcc
  419e22:	mov    ebx,esi
  419e24:	mov    DWORD PTR [rax],0x67
  419e2a:	jmp    0x419acb
  419e2f:	call   QWORD PTR [rip+0x1f197]        # 0x438fcc
  419e35:	mov    DWORD PTR [rax],0x70
  419e3b:	jmp    0x419acb
  419e40:	call   QWORD PTR [rip+0x1f186]        # 0x438fcc
  419e46:	mov    ebx,esi
  419e48:	mov    DWORD PTR [rax],0x29
  419e4e:	jmp    0x419acb
  419e53:	call   QWORD PTR [rip+0x1f173]        # 0x438fcc
  419e59:	mov    DWORD PTR [rax],0x6e
  419e5f:	jmp    0x419acb
  419e64:	nop
  419e65:	nop
  419e66:	nop
  419e67:	nop
  419e68:	nop
  419e69:	nop
  419e6a:	nop
  419e6b:	nop
  419e6c:	nop
  419e6d:	nop
  419e6e:	nop
  419e6f:	nop
  419e70:	push   rsi
  419e71:	push   rbx
  419e72:	sub    rsp,0x48
  419e76:	mov    ebx,ecx
  419e78:	mov    esi,edx
  419e7a:	mov    ecx,0x101
  419e7f:	mov    DWORD PTR [rsp+0x3c],r8d
  419e84:	call   0x41b150
  419e89:	xor    r9d,r9d
  419e8c:	mov    DWORD PTR [rsp+0x28],0x0
  419e94:	mov    DWORD PTR [rsp+0x20],0x0
  419e9c:	mov    r8d,DWORD PTR [rsp+0x3c]
  419ea1:	mov    edx,esi
  419ea3:	mov    ecx,ebx
  419ea5:	call   QWORD PTR [rip+0x1f419]        # 0x4392c4
  419eab:	cmp    rax,0xffffffffffffffff
  419eaf:	je     0x419ed0
  419eb1:	mov    rcx,rax
  419eb4:	mov    rax,QWORD PTR [rip+0x1f181]        # 0x43903c
  419ebb:	mov    edx,0x8002
  419ec0:	add    rsp,0x48
  419ec4:	pop    rbx
  419ec5:	pop    rsi
  419ec6:	rex.W jmp rax
  419ec9:	nop    DWORD PTR [rax+0x0]
  419ed0:	call   QWORD PTR [rip+0x1f3de]        # 0x4392b4
  419ed6:	cmp    eax,0x2740
  419edb:	mov    ebx,eax
  419edd:	je     0x41a19e
  419ee3:	jg     0x419f30
  419ee5:	cmp    eax,0x2736
  419eea:	je     0x41a138
  419ef0:	jle    0x419fab
  419ef6:	cmp    eax,0x273a
  419efb:	je     0x41a0e3
  419f01:	jg     0x41a005
  419f07:	cmp    eax,0x2738
  419f0c:	je     0x41a1c0
  419f12:	jg     0x41a1af
  419f18:	call   QWORD PTR [rip+0x1f0ae]        # 0x438fcc
  419f1e:	mov    DWORD PTR [rax],0x6d
  419f24:	mov    eax,0xffffffff
  419f29:	add    rsp,0x48
  419f2d:	pop    rbx
  419f2e:	pop    rsi
  419f2f:	ret    
  419f30:	cmp    eax,0x2748
  419f35:	je     0x41a18d
  419f3b:	jg     0x419f6d
  419f3d:	cmp    eax,0x2744
  419f42:	je     0x41a0d2
  419f48:	jg     0x419fe3
  419f4e:	cmp    eax,0x2742
  419f53:	je     0x41a0c1
  419f59:	jg     0x41a0b0
  419f5f:	call   QWORD PTR [rip+0x1f067]        # 0x438fcc
  419f65:	mov    DWORD PTR [rax],0x65
  419f6b:	jmp    0x419f24
  419f6d:	cmp    eax,0x274e
  419f72:	je     0x41a127
  419f78:	jg     0x41a045
  419f7e:	cmp    eax,0x274c
  419f83:	je     0x41a15a
  419f89:	jg     0x41a149
  419f8f:	cmp    eax,0x2749
  419f94:	jne    0x41a026
  419f9a:	call   QWORD PTR [rip+0x1f02c]        # 0x438fcc
  419fa0:	mov    DWORD PTR [rax],0x7e
  419fa6:	jmp    0x419f24
  419fab:	cmp    eax,0x57
  419fae:	je     0x41a08e
  419fb4:	jle    0x41a073
  419fba:	cmp    eax,0x2734
  419fbf:	je     0x41a1e2
  419fc5:	jg     0x41a1d1
  419fcb:	cmp    eax,0x2733
  419fd0:	jne    0x41a026
  419fd2:	call   QWORD PTR [rip+0x1eff4]        # 0x438fcc
  419fd8:	mov    DWORD PTR [rax],0x8c
  419fde:	jmp    0x419f24
  419fe3:	cmp    eax,0x2746
  419fe8:	je     0x41a17c
  419fee:	jg     0x41a16b
  419ff4:	call   QWORD PTR [rip+0x1efd2]        # 0x438fcc
  419ffa:	mov    DWORD PTR [rax],0x6a
  41a000:	jmp    0x419f24
  41a005:	cmp    eax,0x273d
  41a00a:	je     0x41a105
  41a010:	cmp    eax,0x273f
  41a015:	je     0x41a0f4
  41a01b:	cmp    eax,0x273b
  41a020:	je     0x41a116
  41a026:	call   QWORD PTR [rip+0x1efa0]        # 0x438fcc
  41a02c:	lea    ecx,[rbx-0x2711]
  41a032:	lea    edx,[rbx-0x2710]
  41a038:	cmp    ecx,0x17
  41a03b:	cmovbe ebx,edx
  41a03e:	mov    DWORD PTR [rax],ebx
  41a040:	jmp    0x419f24
  41a045:	cmp    eax,0x2751
  41a04a:	je     0x41a204
  41a050:	cmp    eax,0x2752
  41a055:	je     0x41a1f3
  41a05b:	cmp    eax,0x274f
  41a060:	jne    0x41a026
  41a062:	call   QWORD PTR [rip+0x1ef64]        # 0x438fcc
  41a068:	mov    DWORD PTR [rax],0x26
  41a06e:	jmp    0x419f24
  41a073:	cmp    eax,0x6
  41a076:	je     0x41a09f
  41a078:	cmp    eax,0x8
  41a07b:	jne    0x41a026
  41a07d:	call   QWORD PTR [rip+0x1ef49]        # 0x438fcc
  41a083:	mov    DWORD PTR [rax],0xc
  41a089:	jmp    0x419f24
  41a08e:	call   QWORD PTR [rip+0x1ef38]        # 0x438fcc
  41a094:	mov    DWORD PTR [rax],0x16
  41a09a:	jmp    0x419f24
  41a09f:	call   QWORD PTR [rip+0x1ef27]        # 0x438fcc
  41a0a5:	mov    DWORD PTR [rax],0x9
  41a0ab:	jmp    0x419f24
  41a0b0:	call   QWORD PTR [rip+0x1ef16]        # 0x438fcc
  41a0b6:	mov    DWORD PTR [rax],0x76
  41a0bc:	jmp    0x419f24
  41a0c1:	call   QWORD PTR [rip+0x1ef05]        # 0x438fcc
  41a0c7:	mov    DWORD PTR [rax],0x74
  41a0cd:	jmp    0x419f24
  41a0d2:	call   QWORD PTR [rip+0x1eef4]        # 0x438fcc
  41a0d8:	mov    DWORD PTR [rax],0x75
  41a0de:	jmp    0x419f24
  41a0e3:	call   QWORD PTR [rip+0x1eee3]        # 0x438fcc
  41a0e9:	mov    DWORD PTR [rax],0x7b
  41a0ef:	jmp    0x419f24
  41a0f4:	call   QWORD PTR [rip+0x1eed2]        # 0x438fcc
  41a0fa:	mov    DWORD PTR [rax],0x66
  41a100:	jmp    0x419f24
  41a105:	call   QWORD PTR [rip+0x1eec1]        # 0x438fcc
  41a10b:	mov    DWORD PTR [rax],0x82
  41a111:	jmp    0x419f24
  41a116:	call   QWORD PTR [rip+0x1eeb0]        # 0x438fcc
  41a11c:	mov    DWORD PTR [rax],0x87
  41a122:	jmp    0x419f24
  41a127:	call   QWORD PTR [rip+0x1ee9f]        # 0x438fcc
  41a12d:	mov    DWORD PTR [rax],0x72
  41a133:	jmp    0x419f24
  41a138:	call   QWORD PTR [rip+0x1ee8e]        # 0x438fcc
  41a13e:	mov    DWORD PTR [rax],0x80
  41a144:	jmp    0x419f24
  41a149:	call   QWORD PTR [rip+0x1ee7d]        # 0x438fcc
  41a14f:	mov    DWORD PTR [rax],0x6b
  41a155:	jmp    0x419f24
  41a15a:	call   QWORD PTR [rip+0x1ee6c]        # 0x438fcc
  41a160:	mov    DWORD PTR [rax],0x8a
  41a166:	jmp    0x419f24
  41a16b:	call   QWORD PTR [rip+0x1ee5b]        # 0x438fcc
  41a171:	mov    DWORD PTR [rax],0x77
  41a177:	jmp    0x419f24
  41a17c:	call   QWORD PTR [rip+0x1ee4a]        # 0x438fcc
  41a182:	mov    DWORD PTR [rax],0x6c
  41a188:	jmp    0x419f24
  41a18d:	call   QWORD PTR [rip+0x1ee39]        # 0x438fcc
  41a193:	mov    DWORD PTR [rax],0x71
  41a199:	jmp    0x419f24
  41a19e:	call   QWORD PTR [rip+0x1ee28]        # 0x438fcc
  41a1a4:	mov    DWORD PTR [rax],0x64
  41a1aa:	jmp    0x419f24
  41a1af:	call   QWORD PTR [rip+0x1ee17]        # 0x438fcc
  41a1b5:	mov    DWORD PTR [rax],0x88
  41a1bb:	jmp    0x419f24
  41a1c0:	call   QWORD PTR [rip+0x1ee06]        # 0x438fcc
  41a1c6:	mov    DWORD PTR [rax],0x73
  41a1cc:	jmp    0x419f24
  41a1d1:	call   QWORD PTR [rip+0x1edf5]        # 0x438fcc
  41a1d7:	mov    DWORD PTR [rax],0x67
  41a1dd:	jmp    0x419f24
  41a1e2:	call   QWORD PTR [rip+0x1ede4]        # 0x438fcc
  41a1e8:	mov    DWORD PTR [rax],0x70
  41a1ee:	jmp    0x419f24
  41a1f3:	call   QWORD PTR [rip+0x1edd3]        # 0x438fcc
  41a1f9:	mov    DWORD PTR [rax],0x29
  41a1ff:	jmp    0x419f24
  41a204:	call   QWORD PTR [rip+0x1edc2]        # 0x438fcc
  41a20a:	mov    DWORD PTR [rax],0x6e
  41a210:	jmp    0x419f24
  41a215:	nop
  41a216:	nop
  41a217:	nop
  41a218:	nop
  41a219:	nop
  41a21a:	nop
  41a21b:	nop
  41a21c:	nop
  41a21d:	nop
  41a21e:	nop
  41a21f:	nop
  41a220:	push   rsi
  41a221:	push   rbx
  41a222:	sub    rsp,0x28
  41a226:	mov    rsi,rcx
  41a229:	call   0x421d98
  41a22e:	lea    rbx,[rax+0x1]
  41a232:	mov    rcx,rbx
  41a235:	call   0x4145c0
  41a23a:	test   rax,rax
  41a23d:	je     0x41a253
  41a23f:	mov    r8,rbx
  41a242:	mov    rdx,rsi
  41a245:	mov    rcx,rax
  41a248:	add    rsp,0x28
  41a24c:	pop    rbx
  41a24d:	pop    rsi
  41a24e:	jmp    0x421e08
  41a253:	xor    eax,eax
  41a255:	add    rsp,0x28
  41a259:	pop    rbx
  41a25a:	pop    rsi
  41a25b:	ret    
  41a25c:	nop
  41a25d:	nop
  41a25e:	nop
  41a25f:	nop
  41a260:	sub    rsp,0x38
  41a264:	lea    rdx,[rip+0x125a5]        # 0x42c810
  41a26b:	lea    rcx,[rip+0x1ac4e]        # 0x434ec0
  41a272:	mov    QWORD PTR [rsp+0x50],r8
  41a277:	lea    r8,[rsp+0x50]
  41a27c:	mov    QWORD PTR [rsp+0x58],r9
  41a281:	mov    QWORD PTR [rsp+0x28],r8
  41a286:	call   0x41d3a0
  41a28b:	add    rsp,0x38
  41a28f:	ret    
  41a290:	push   rdi
  41a291:	push   rsi
  41a292:	push   rbx
  41a293:	sub    rsp,0x20
  41a297:	mov    ebx,ecx
  41a299:	call   0x41a380
  41a29e:	test   rax,rax
  41a2a1:	je     0x41a2b0
  41a2a3:	add    rsp,0x20
  41a2a7:	pop    rbx
  41a2a8:	pop    rsi
  41a2a9:	pop    rdi
  41a2aa:	ret    
  41a2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2b0:	mov    ecx,ebx
  41a2b2:	call   0x421da8
  41a2b7:	test   rax,rax
  41a2ba:	mov    rsi,rax
  41a2bd:	je     0x41a340
  41a2c3:	cmp    BYTE PTR [rax],0x0
  41a2c6:	je     0x41a340
  41a2c8:	mov    rcx,rax
  41a2cb:	call   0x421d98
  41a2d0:	cmp    rax,0xff
  41a2d6:	ja     0x41a36e
  41a2dc:	add    rax,0x1
  41a2e0:	lea    rdi,[rip+0x1abd9]        # 0x434ec0
  41a2e7:	cmp    eax,0x8
  41a2ea:	jae    0x41a330
  41a2ec:	xor    edx,edx
  41a2ee:	test   al,0x4
  41a2f0:	jne    0x41a320
  41a2f2:	test   al,0x2
  41a2f4:	jne    0x41a310
  41a2f6:	test   al,0x1
  41a2f8:	jne    0x41a303
  41a2fa:	lea    rax,[rip+0x1abbf]        # 0x434ec0
  41a301:	jmp    0x41a2a3
  41a303:	movzx  eax,BYTE PTR [rsi+rdx*1]
  41a307:	mov    BYTE PTR [rdi+rdx*1],al
  41a30a:	jmp    0x41a2fa
  41a30c:	nop    DWORD PTR [rax+0x0]
  41a310:	movzx  ecx,WORD PTR [rsi+rdx*1]
  41a314:	mov    WORD PTR [rdi+rdx*1],cx
  41a318:	add    rdx,0x2
  41a31c:	jmp    0x41a2f6
  41a31e:	xchg   ax,ax
  41a320:	mov    edx,DWORD PTR [rsi]
  41a322:	mov    DWORD PTR [rdi],edx
  41a324:	mov    edx,0x4
  41a329:	jmp    0x41a2f2
  41a32b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a330:	mov    ecx,eax
  41a332:	shr    ecx,0x3
  41a335:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a338:	jmp    0x41a2ec
  41a33a:	nop    WORD PTR [rax+rax*1+0x0]
  41a340:	lea    rdx,[rip+0x124c9]        # 0x42c810
  41a347:	lea    rcx,[rip+0x1ab72]        # 0x434ec0
  41a34e:	mov    r8d,ebx
  41a351:	call   0x41a260
  41a356:	call   QWORD PTR [rip+0x1ec70]        # 0x438fcc
  41a35c:	mov    DWORD PTR [rax],0x16
  41a362:	lea    rax,[rip+0x1ab57]        # 0x434ec0
  41a369:	jmp    0x41a2a3
  41a36e:	call   0x421eb8
  41a373:	nop
  41a374:	nop
  41a375:	nop
  41a376:	nop
  41a377:	nop
  41a378:	nop
  41a379:	nop
  41a37a:	nop
  41a37b:	nop
  41a37c:	nop
  41a37d:	nop
  41a37e:	nop
  41a37f:	nop
  41a380:	cmp    ecx,0x2754
  41a386:	je     0x41a730
  41a38c:	jg     0x41a3e2
  41a38e:	cmp    ecx,0x89
  41a394:	je     0x41a710
  41a39a:	jg     0x41a443
  41a3a0:	cmp    ecx,0x79
  41a3a3:	je     0x41a740
  41a3a9:	jle    0x41a571
  41a3af:	cmp    ecx,0x7d
  41a3b2:	lea    rax,[rip+0x124b9]        # 0x42c872
  41a3b9:	je     0x41a3e0
  41a3bb:	jle    0x41a680
  41a3c1:	cmp    ecx,0x7f
  41a3c4:	lea    rax,[rip+0x128a5]        # 0x42cc70
  41a3cb:	je     0x41a3e0
  41a3cd:	cmp    ecx,0x83
  41a3d3:	lea    rax,[rip+0x124ba]        # 0x42c894
  41a3da:	jne    0x41a440
  41a3dc:	nop    DWORD PTR [rax+0x0]
  41a3e0:	repz ret 
  41a3e2:	cmp    ecx,0x2779
  41a3e8:	je     0x41a720
  41a3ee:	jg     0x41a492
  41a3f4:	cmp    ecx,0x276c
  41a3fa:	je     0x41a701
  41a400:	jg     0x41a5b0
  41a406:	cmp    ecx,0x2756
  41a40c:	lea    rax,[rip+0x1255b]        # 0x42c96e
  41a413:	je     0x41a3e0
  41a415:	lea    rax,[rip+0x1253e]        # 0x42c95a
  41a41c:	jl     0x41a3e0
  41a41e:	cmp    ecx,0x2757
  41a424:	lea    rax,[rip+0x12559]        # 0x42c984
  41a42b:	je     0x41a3e0
  41a42d:	cmp    ecx,0x276b
  41a433:	lea    rax,[rip+0x125e6]        # 0x42ca20
  41a43a:	je     0x41a3e0
  41a43c:	nop    DWORD PTR [rax+0x0]
  41a440:	xor    eax,eax
  41a442:	ret    
  41a443:	cmp    ecx,0x273c
  41a449:	je     0x41a760
  41a44f:	jle    0x41a4e5
  41a455:	cmp    ecx,0x274b
  41a45b:	lea    rax,[rip+0x124a6]        # 0x42c908
  41a462:	je     0x41a3e0
  41a468:	jle    0x41a5f0
  41a46e:	cmp    ecx,0x2750
  41a474:	lea    rax,[rip+0x124b0]        # 0x42c92b
  41a47b:	je     0x41a3e0
  41a481:	cmp    ecx,0x2753
  41a487:	lea    rax,[rip+0x124aa]        # 0x42c938
  41a48e:	jne    0x41a440
  41a490:	repz ret 
  41a492:	cmp    ecx,0x277f
  41a498:	je     0x41a750
  41a49e:	jle    0x41a530
  41a4a4:	cmp    ecx,0x2afa
  41a4aa:	lea    rax,[rip+0x126f7]        # 0x42cba8
  41a4b1:	je     0x41a3e0
  41a4b7:	jle    0x41a650
  41a4bd:	cmp    ecx,0x2afb
  41a4c3:	lea    rax,[rip+0x126fe]        # 0x42cbc8
  41a4ca:	je     0x41a3e0
  41a4d0:	cmp    ecx,0x2afc
  41a4d6:	lea    rax,[rip+0x12703]        # 0x42cbe0
  41a4dd:	jne    0x41a440
  41a4e3:	repz ret 
  41a4e5:	cmp    ecx,0x3e4
  41a4eb:	lea    rax,[rip+0x124c6]        # 0x42c9b8
  41a4f2:	je     0x41a3e0
  41a4f8:	jle    0x41a620
  41a4fe:	cmp    ecx,0x3e5
  41a504:	lea    rax,[rip+0x124e5]        # 0x42c9f0
  41a50b:	je     0x41a3e0
  41a511:	cmp    ecx,0x7d4
  41a517:	lea    rax,[rip+0x12733]        # 0x42cc51
  41a51e:	jne    0x41a440
  41a524:	repz ret 
  41a526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a530:	cmp    ecx,0x277c
  41a536:	lea    rax,[rip+0x12615]        # 0x42cb52
  41a53d:	je     0x41a3e0
  41a543:	jg     0x41a6c3
  41a549:	cmp    ecx,0x277a
  41a54f:	lea    rax,[rip+0x125c2]        # 0x42cb18
  41a556:	je     0x41a3e0
  41a55c:	cmp    ecx,0x277b
  41a562:	lea    rax,[rip+0x125d5]        # 0x42cb3e
  41a569:	jne    0x41a440
  41a56f:	repz ret 
  41a571:	cmp    ecx,0x68
  41a574:	lea    rax,[rip+0x126e9]        # 0x42cc64
  41a57b:	je     0x41a3e0
  41a581:	jle    0x41a6f0
  41a587:	cmp    ecx,0x6f
  41a58a:	lea    rax,[rip+0x12697]        # 0x42cc28
  41a591:	je     0x41a3e0
  41a597:	cmp    ecx,0x78
  41a59a:	lea    rax,[rip+0x122a6]        # 0x42c847
  41a5a1:	jne    0x41a440
  41a5a7:	repz ret 
  41a5a9:	nop    DWORD PTR [rax+0x0]
  41a5b0:	cmp    ecx,0x2776
  41a5b6:	je     0x41a6e2
  41a5bc:	jg     0x41a6a2
  41a5c2:	cmp    ecx,0x276d
  41a5c8:	lea    rax,[rip+0x124a1]        # 0x42ca70
  41a5cf:	je     0x41a3e0
  41a5d5:	cmp    ecx,0x2775
  41a5db:	lea    rax,[rip+0x124b6]        # 0x42ca98
  41a5e2:	jne    0x41a440
  41a5e8:	repz ret 
  41a5ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a5f0:	cmp    ecx,0x273e
  41a5f6:	lea    rax,[rip+0x122bd]        # 0x42c8ba
  41a5fd:	je     0x41a3e0
  41a603:	cmp    ecx,0x274a
  41a609:	lea    rax,[rip+0x122c8]        # 0x42c8d8
  41a610:	jne    0x41a440
  41a616:	repz ret 
  41a618:	nop    DWORD PTR [rax+rax*1+0x0]
  41a620:	cmp    ecx,0x8b
  41a626:	lea    rax,[rip+0x1220b]        # 0x42c838
  41a62d:	je     0x41a3e0
  41a633:	cmp    ecx,0x3e3
  41a639:	lea    rax,[rip+0x12355]        # 0x42c995
  41a640:	jne    0x41a440
  41a646:	repz ret 
  41a648:	nop    DWORD PTR [rax+rax*1+0x0]
  41a650:	cmp    ecx,0x2780
  41a656:	lea    rax,[rip+0x1251c]        # 0x42cb79
  41a65d:	je     0x41a3e0
  41a663:	cmp    ecx,0x2af9
  41a669:	lea    rax,[rip+0x12524]        # 0x42cb94
  41a670:	jne    0x41a440
  41a676:	repz ret 
  41a678:	nop    DWORD PTR [rax+rax*1+0x0]
  41a680:	cmp    ecx,0x7a
  41a683:	lea    rax,[rip+0x12583]        # 0x42cc0d
  41a68a:	je     0x41a3e0
  41a690:	cmp    ecx,0x7c
  41a693:	lea    rax,[rip+0x121bf]        # 0x42c859
  41a69a:	jne    0x41a440
  41a6a0:	repz ret 
  41a6a2:	cmp    ecx,0x2777
  41a6a8:	je     0x41a750
  41a6ae:	cmp    ecx,0x2778
  41a6b4:	lea    rax,[rip+0x1241d]        # 0x42cad8
  41a6bb:	jne    0x41a440
  41a6c1:	repz ret 
  41a6c3:	cmp    ecx,0x277d
  41a6c9:	lea    rax,[rip+0x12494]        # 0x42cb64
  41a6d0:	je     0x41a3e0
  41a6d6:	cmp    ecx,0x277e
  41a6dc:	jne    0x41a440
  41a6e2:	lea    rax,[rip+0x123cd]        # 0x42cab6
  41a6e9:	ret    
  41a6ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a6f0:	test   ecx,ecx
  41a6f2:	lea    rax,[rip+0x12137]        # 0x42c830
  41a6f9:	jne    0x41a440
  41a6ff:	repz ret 
  41a701:	lea    rax,[rip+0x12340]        # 0x42ca48
  41a708:	ret    
  41a709:	nop    DWORD PTR [rax+0x0]
  41a710:	lea    rax,[rip+0x1216f]        # 0x42c886
  41a717:	ret    
  41a718:	nop    DWORD PTR [rax+rax*1+0x0]
  41a720:	lea    rax,[rip+0x123d1]        # 0x42caf8
  41a727:	ret    
  41a728:	nop    DWORD PTR [rax+rax*1+0x0]
  41a730:	lea    rax,[rip+0x12214]        # 0x42c94b
  41a737:	ret    
  41a738:	nop    DWORD PTR [rax+rax*1+0x0]
  41a740:	lea    rax,[rip+0x124f4]        # 0x42cc3b
  41a747:	ret    
  41a748:	nop    DWORD PTR [rax+rax*1+0x0]
  41a750:	lea    rax,[rip+0x1236f]        # 0x42cac6
  41a757:	ret    
  41a758:	nop    DWORD PTR [rax+rax*1+0x0]
  41a760:	lea    rax,[rip+0x12139]        # 0x42c8a0
  41a767:	ret    
  41a768:	nop
  41a769:	nop
  41a76a:	nop
  41a76b:	nop
  41a76c:	nop
  41a76d:	nop
  41a76e:	nop
  41a76f:	nop
  41a770:	lea    r9,[rip+0x9609]        # 0x423d80
  41a777:	cmp    rcx,r9
  41a77a:	je     0x41a790
  41a77c:	mov    r9,QWORD PTR [rcx+0x10]
  41a780:	mov    rcx,QWORD PTR [rcx]
  41a783:	rex.WB jmp r9
  41a786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a790:	mov    ecx,r8d
  41a793:	rex.W jmp rdx
  41a796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7a0:	lea    r10,[rip+0x95d9]        # 0x423d80
  41a7a7:	mov    rax,rcx
  41a7aa:	mov    r11,rdx
  41a7ad:	mov    ecx,r8d
  41a7b0:	cmp    rax,r10
  41a7b3:	mov    r8,QWORD PTR [rsp+0x28]
  41a7b8:	je     0x41a7d0
  41a7ba:	mov    QWORD PTR [rsp+0x28],r8
  41a7bf:	mov    r8d,ecx
  41a7c2:	mov    r10,QWORD PTR [rax+0x18]
  41a7c6:	mov    rcx,QWORD PTR [rax]
  41a7c9:	rex.WB jmp r10
  41a7cc:	nop    DWORD PTR [rax+0x0]
  41a7d0:	mov    edx,r9d
  41a7d3:	rex.WB jmp r11
  41a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7e0:	mov    r8d,edx
  41a7e3:	mov    rdx,rcx
  41a7e6:	mov    rcx,QWORD PTR [rip+0x9593]        # 0x423d80
  41a7ed:	jmp    0x41a770
  41a7ef:	nop
  41a7f0:	sub    rsp,0x38
  41a7f4:	mov    QWORD PTR [rsp+0x20],r9
  41a7f9:	mov    r9d,r8d
  41a7fc:	mov    r8d,edx
  41a7ff:	mov    rdx,rcx
  41a802:	mov    rcx,QWORD PTR [rip+0x9577]        # 0x423d80
  41a809:	call   0x41a7a0
  41a80e:	add    rsp,0x38
  41a812:	ret    
  41a813:	nop    DWORD PTR [rax]
  41a816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a820:	sub    rsp,0x28
  41a824:	lea    rax,[rip+0xffffffffffffff45]        # 0x41a770
  41a82b:	test   rcx,rcx
  41a82e:	cmove  rcx,rax
  41a832:	lea    rax,[rip+0xffffffffffffff67]        # 0x41a7a0
  41a839:	test   rdx,rdx
  41a83c:	cmove  rdx,rax
  41a840:	cmp    QWORD PTR [r8],0x0
  41a844:	je     0x41a860
  41a846:	cmp    QWORD PTR [r8+0x10],rcx
  41a84a:	jne    0x41a898
  41a84c:	cmp    QWORD PTR [r8+0x18],rdx
  41a850:	jne    0x41a898
  41a852:	add    rsp,0x28
  41a856:	ret    
  41a857:	nop    WORD PTR [rax+rax*1+0x0]
  41a860:	cmp    QWORD PTR [r8+0x8],0x0
  41a865:	jne    0x41a846
  41a867:	mov    rax,QWORD PTR [rip+0x9512]        # 0x423d80
  41a86e:	mov    QWORD PTR [r8+0x10],rcx
  41a872:	mov    QWORD PTR [r8+0x18],rdx
  41a876:	mov    QWORD PTR [r8],rax
  41a879:	lea    rax,[rip+0x9500]        # 0x423d80
  41a880:	mov    QWORD PTR [r8+0x8],rax
  41a884:	mov    rax,QWORD PTR [rip+0x94f5]        # 0x423d80
  41a88b:	mov    QWORD PTR [rip+0x94ee],r8        # 0x423d80
  41a892:	mov    QWORD PTR [rax+0x8],r8
  41a896:	jmp    0x41a852
  41a898:	call   0x421eb8
  41a89d:	nop
  41a89e:	xchg   ax,ax
  41a8a0:	mov    rax,QWORD PTR [rcx+0x8]
  41a8a4:	mov    rdx,QWORD PTR [rcx]
  41a8a7:	test   rax,rax
  41a8aa:	je     0x41a8d7
  41a8ac:	test   rdx,rdx
  41a8af:	je     0x41a8d7
  41a8b1:	mov    QWORD PTR [rax],rdx
  41a8b4:	mov    QWORD PTR [rdx+0x8],rax
  41a8b8:	mov    QWORD PTR [rcx],0x0
  41a8bf:	mov    QWORD PTR [rcx+0x8],0x0
  41a8c7:	mov    QWORD PTR [rcx+0x10],0x0
  41a8cf:	mov    QWORD PTR [rcx+0x18],0x0
  41a8d7:	repz ret 
  41a8d9:	nop
  41a8da:	nop
  41a8db:	nop
  41a8dc:	nop
  41a8dd:	nop
  41a8de:	nop
  41a8df:	nop
  41a8e0:	push   r12
  41a8e2:	push   rbp
  41a8e3:	push   rdi
  41a8e4:	push   rsi
  41a8e5:	push   rbx
  41a8e6:	sub    rsp,0x60
  41a8ea:	mov    rbp,rcx
  41a8ed:	mov    ecx,r8d
  41a8f0:	mov    r12,rdx
  41a8f3:	mov    esi,r8d
  41a8f6:	mov    edi,r9d
  41a8f9:	call   0x414c80
  41a8fe:	xor    edx,edx
  41a900:	mov    rbx,rax
  41a903:	mov    DWORD PTR [rsp+0x30],0xdeadbeef
  41a90b:	lea    r8,[rsp+0x30]
  41a910:	mov    rcx,rax
  41a913:	call   QWORD PTR [rip+0x1e98b]        # 0x4392a4
  41a919:	cmp    DWORD PTR [rsp+0x30],0xdeadbeef
  41a921:	je     0x41a950
  41a923:	mov    r8,QWORD PTR [rsp+0xb0]
  41a92b:	mov    edx,edi
  41a92d:	mov    rcx,rbx
  41a930:	call   QWORD PTR [rip+0x1e9e6]        # 0x43931c
  41a936:	test   eax,eax
  41a938:	js     0x41a979
  41a93a:	xor    eax,eax
  41a93c:	add    rsp,0x60
  41a940:	pop    rbx
  41a941:	pop    rsi
  41a942:	pop    rdi
  41a943:	pop    rbp
  41a944:	pop    r12
  41a946:	ret    
  41a947:	nop    WORD PTR [rax+rax*1+0x0]
  41a950:	mov    rax,QWORD PTR [rsp+0xb0]
  41a958:	mov    r9d,edi
  41a95b:	mov    r8d,esi
  41a95e:	mov    rdx,r12
  41a961:	mov    rcx,rbp
  41a964:	mov    QWORD PTR [rsp+0x20],rax
  41a969:	call   0x41a7a0
  41a96e:	add    rsp,0x60
  41a972:	pop    rbx
  41a973:	pop    rsi
  41a974:	pop    rdi
  41a975:	pop    rbp
  41a976:	pop    r12
  41a978:	ret    
  41a979:	call   QWORD PTR [rip+0x1e935]        # 0x4392b4
  41a97f:	cmp    eax,0x2740
  41a984:	mov    ebx,eax
  41a986:	je     0x41ac93
  41a98c:	jg     0x41a9d5
  41a98e:	cmp    eax,0x2736
  41a993:	je     0x41ac1b
  41a999:	jle    0x41aa61
  41a99f:	cmp    eax,0x273a
  41a9a4:	je     0x41abb7
  41a9aa:	jg     0x41aac1
  41a9b0:	cmp    eax,0x2738
  41a9b5:	je     0x41acbb
  41a9bb:	jg     0x41aca7
  41a9c1:	call   QWORD PTR [rip+0x1e605]        # 0x438fcc
  41a9c7:	mov    DWORD PTR [rax],0x6d
  41a9cd:	or     eax,0xffffffff
  41a9d0:	jmp    0x41a93c
  41a9d5:	cmp    eax,0x2748
  41a9da:	je     0x41ac7f
  41a9e0:	jg     0x41aa20
  41a9e2:	cmp    eax,0x2744
  41a9e7:	je     0x41aba3
  41a9ed:	jg     0x41aa9c
  41a9f3:	cmp    eax,0x2742
  41a9f8:	je     0x41ab8f
  41a9fe:	jg     0x41ab7b
  41aa04:	call   QWORD PTR [rip+0x1e5c2]        # 0x438fcc
  41aa0a:	mov    DWORD PTR [rax],0x65
  41aa10:	or     eax,0xffffffff
  41aa13:	jmp    0x41a93c
  41aa18:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa20:	cmp    eax,0x274e
  41aa25:	je     0x41ac07
  41aa2b:	jg     0x41ab04
  41aa31:	cmp    eax,0x274c
  41aa36:	je     0x41ac43
  41aa3c:	jg     0x41ac2f
  41aa42:	cmp    eax,0x2749
  41aa47:	jne    0x41aae2
  41aa4d:	call   QWORD PTR [rip+0x1e579]        # 0x438fcc
  41aa53:	mov    DWORD PTR [rax],0x7e
  41aa59:	or     eax,0xffffffff
  41aa5c:	jmp    0x41a93c
  41aa61:	cmp    eax,0x57
  41aa64:	je     0x41ab53
  41aa6a:	jle    0x41ab35
  41aa70:	cmp    eax,0x2734
  41aa75:	je     0x41ace3
  41aa7b:	jg     0x41accf
  41aa81:	cmp    eax,0x2733
  41aa86:	jne    0x41aae2
  41aa88:	call   QWORD PTR [rip+0x1e53e]        # 0x438fcc
  41aa8e:	mov    DWORD PTR [rax],0x8c
  41aa94:	or     eax,0xffffffff
  41aa97:	jmp    0x41a93c
  41aa9c:	cmp    eax,0x2746
  41aaa1:	je     0x41ac6b
  41aaa7:	jg     0x41ac57
  41aaad:	call   QWORD PTR [rip+0x1e519]        # 0x438fcc
  41aab3:	mov    DWORD PTR [rax],0x6a
  41aab9:	or     eax,0xffffffff
  41aabc:	jmp    0x41a93c
  41aac1:	cmp    eax,0x273d
  41aac6:	je     0x41abdf
  41aacc:	cmp    eax,0x273f
  41aad1:	je     0x41abcb
  41aad7:	cmp    eax,0x273b
  41aadc:	je     0x41abf3
  41aae2:	call   QWORD PTR [rip+0x1e4e4]        # 0x438fcc
  41aae8:	lea    ecx,[rbx-0x2711]
  41aaee:	lea    edx,[rbx-0x2710]
  41aaf4:	cmp    ecx,0x17
  41aaf7:	cmovbe ebx,edx
  41aafa:	mov    DWORD PTR [rax],ebx
  41aafc:	or     eax,0xffffffff
  41aaff:	jmp    0x41a93c
  41ab04:	cmp    eax,0x2751
  41ab09:	je     0x41ad0b
  41ab0f:	cmp    eax,0x2752
  41ab14:	je     0x41acf7
  41ab1a:	cmp    eax,0x274f
  41ab1f:	jne    0x41aae2
  41ab21:	call   QWORD PTR [rip+0x1e4a5]        # 0x438fcc
  41ab27:	mov    DWORD PTR [rax],0x26
  41ab2d:	or     eax,0xffffffff
  41ab30:	jmp    0x41a93c
  41ab35:	cmp    eax,0x6
  41ab38:	je     0x41ab67
  41ab3a:	cmp    eax,0x8
  41ab3d:	jne    0x41aae2
  41ab3f:	call   QWORD PTR [rip+0x1e487]        # 0x438fcc
  41ab45:	mov    DWORD PTR [rax],0xc
  41ab4b:	or     eax,0xffffffff
  41ab4e:	jmp    0x41a93c
  41ab53:	call   QWORD PTR [rip+0x1e473]        # 0x438fcc
  41ab59:	mov    DWORD PTR [rax],0x16
  41ab5f:	or     eax,0xffffffff
  41ab62:	jmp    0x41a93c
  41ab67:	call   QWORD PTR [rip+0x1e45f]        # 0x438fcc
  41ab6d:	mov    DWORD PTR [rax],0x9
  41ab73:	or     eax,0xffffffff
  41ab76:	jmp    0x41a93c
  41ab7b:	call   QWORD PTR [rip+0x1e44b]        # 0x438fcc
  41ab81:	mov    DWORD PTR [rax],0x76
  41ab87:	or     eax,0xffffffff
  41ab8a:	jmp    0x41a93c
  41ab8f:	call   QWORD PTR [rip+0x1e437]        # 0x438fcc
  41ab95:	mov    DWORD PTR [rax],0x74
  41ab9b:	or     eax,0xffffffff
  41ab9e:	jmp    0x41a93c
  41aba3:	call   QWORD PTR [rip+0x1e423]        # 0x438fcc
  41aba9:	mov    DWORD PTR [rax],0x75
  41abaf:	or     eax,0xffffffff
  41abb2:	jmp    0x41a93c
  41abb7:	call   QWORD PTR [rip+0x1e40f]        # 0x438fcc
  41abbd:	mov    DWORD PTR [rax],0x7b
  41abc3:	or     eax,0xffffffff
  41abc6:	jmp    0x41a93c
  41abcb:	call   QWORD PTR [rip+0x1e3fb]        # 0x438fcc
  41abd1:	mov    DWORD PTR [rax],0x66
  41abd7:	or     eax,0xffffffff
  41abda:	jmp    0x41a93c
  41abdf:	call   QWORD PTR [rip+0x1e3e7]        # 0x438fcc
  41abe5:	mov    DWORD PTR [rax],0x82
  41abeb:	or     eax,0xffffffff
  41abee:	jmp    0x41a93c
  41abf3:	call   QWORD PTR [rip+0x1e3d3]        # 0x438fcc
  41abf9:	mov    DWORD PTR [rax],0x87
  41abff:	or     eax,0xffffffff
  41ac02:	jmp    0x41a93c
  41ac07:	call   QWORD PTR [rip+0x1e3bf]        # 0x438fcc
  41ac0d:	mov    DWORD PTR [rax],0x72
  41ac13:	or     eax,0xffffffff
  41ac16:	jmp    0x41a93c
  41ac1b:	call   QWORD PTR [rip+0x1e3ab]        # 0x438fcc
  41ac21:	mov    DWORD PTR [rax],0x80
  41ac27:	or     eax,0xffffffff
  41ac2a:	jmp    0x41a93c
  41ac2f:	call   QWORD PTR [rip+0x1e397]        # 0x438fcc
  41ac35:	mov    DWORD PTR [rax],0x6b
  41ac3b:	or     eax,0xffffffff
  41ac3e:	jmp    0x41a93c
  41ac43:	call   QWORD PTR [rip+0x1e383]        # 0x438fcc
  41ac49:	mov    DWORD PTR [rax],0x8a
  41ac4f:	or     eax,0xffffffff
  41ac52:	jmp    0x41a93c
  41ac57:	call   QWORD PTR [rip+0x1e36f]        # 0x438fcc
  41ac5d:	mov    DWORD PTR [rax],0x77
  41ac63:	or     eax,0xffffffff
  41ac66:	jmp    0x41a93c
  41ac6b:	call   QWORD PTR [rip+0x1e35b]        # 0x438fcc
  41ac71:	mov    DWORD PTR [rax],0x6c
  41ac77:	or     eax,0xffffffff
  41ac7a:	jmp    0x41a93c
  41ac7f:	call   QWORD PTR [rip+0x1e347]        # 0x438fcc
  41ac85:	mov    DWORD PTR [rax],0x71
  41ac8b:	or     eax,0xffffffff
  41ac8e:	jmp    0x41a93c
  41ac93:	call   QWORD PTR [rip+0x1e333]        # 0x438fcc
  41ac99:	mov    DWORD PTR [rax],0x64
  41ac9f:	or     eax,0xffffffff
  41aca2:	jmp    0x41a93c
  41aca7:	call   QWORD PTR [rip+0x1e31f]        # 0x438fcc
  41acad:	mov    DWORD PTR [rax],0x88
  41acb3:	or     eax,0xffffffff
  41acb6:	jmp    0x41a93c
  41acbb:	call   QWORD PTR [rip+0x1e30b]        # 0x438fcc
  41acc1:	mov    DWORD PTR [rax],0x73
  41acc7:	or     eax,0xffffffff
  41acca:	jmp    0x41a93c
  41accf:	call   QWORD PTR [rip+0x1e2f7]        # 0x438fcc
  41acd5:	mov    DWORD PTR [rax],0x67
  41acdb:	or     eax,0xffffffff
  41acde:	jmp    0x41a93c
  41ace3:	call   QWORD PTR [rip+0x1e2e3]        # 0x438fcc
  41ace9:	mov    DWORD PTR [rax],0x70
  41acef:	or     eax,0xffffffff
  41acf2:	jmp    0x41a93c
  41acf7:	call   QWORD PTR [rip+0x1e2cf]        # 0x438fcc
  41acfd:	mov    DWORD PTR [rax],0x29
  41ad03:	or     eax,0xffffffff
  41ad06:	jmp    0x41a93c
  41ad0b:	call   QWORD PTR [rip+0x1e2bb]        # 0x438fcc
  41ad11:	mov    DWORD PTR [rax],0x6e
  41ad17:	or     eax,0xffffffff
  41ad1a:	jmp    0x41a93c
  41ad1f:	nop
  41ad20:	push   rbp
  41ad21:	push   rdi
  41ad22:	push   rsi
  41ad23:	push   rbx
  41ad24:	sub    rsp,0x58
  41ad28:	mov    rdi,rcx
  41ad2b:	mov    ecx,r8d
  41ad2e:	mov    rbp,rdx
  41ad31:	mov    ebx,r8d
  41ad34:	call   0x414c80
  41ad39:	xor    edx,edx
  41ad3b:	mov    rsi,rax
  41ad3e:	mov    DWORD PTR [rsp+0x20],0xdeadbeef
  41ad46:	lea    r8,[rsp+0x20]
  41ad4b:	mov    rcx,rax
  41ad4e:	call   QWORD PTR [rip+0x1e550]        # 0x4392a4
  41ad54:	cmp    DWORD PTR [rsp+0x20],0xdeadbeef
  41ad5c:	je     0x41ad80
  41ad5e:	mov    rcx,rsi
  41ad61:	call   QWORD PTR [rip+0x1e575]        # 0x4392dc
  41ad67:	test   eax,eax
  41ad69:	mov    esi,eax
  41ad6b:	jne    0x41ada0
  41ad6d:	mov    ecx,ebx
  41ad6f:	call   QWORD PTR [rip+0x1e247]        # 0x438fbc
  41ad75:	mov    eax,esi
  41ad77:	add    rsp,0x58
  41ad7b:	pop    rbx
  41ad7c:	pop    rsi
  41ad7d:	pop    rdi
  41ad7e:	pop    rbp
  41ad7f:	ret    
  41ad80:	mov    r8d,ebx
  41ad83:	mov    rdx,rbp
  41ad86:	mov    rcx,rdi
  41ad89:	call   0x41a770
  41ad8e:	mov    esi,eax
  41ad90:	mov    eax,esi
  41ad92:	add    rsp,0x58
  41ad96:	pop    rbx
  41ad97:	pop    rsi
  41ad98:	pop    rdi
  41ad99:	pop    rbp
  41ad9a:	ret    
  41ad9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ada0:	call   QWORD PTR [rip+0x1e50e]        # 0x4392b4
  41ada6:	cmp    eax,0x2740
  41adab:	mov    ebx,eax
  41adad:	je     0x41b0b6
  41adb3:	jg     0x41ae00
  41adb5:	cmp    eax,0x2736
  41adba:	je     0x41b03e
  41adc0:	jle    0x41ae84
  41adc6:	cmp    eax,0x273a
  41adcb:	je     0x41afda
  41add1:	jg     0x41aee4
  41add7:	cmp    eax,0x2738
  41addc:	je     0x41b0de
  41ade2:	jg     0x41b0ca
  41ade8:	call   QWORD PTR [rip+0x1e1de]        # 0x438fcc
  41adee:	or     esi,0xffffffff
  41adf1:	mov    DWORD PTR [rax],0x6d
  41adf7:	jmp    0x41ad75
  41adfc:	nop    DWORD PTR [rax+0x0]
  41ae00:	cmp    eax,0x2748
  41ae05:	je     0x41b0a2
  41ae0b:	jg     0x41ae43
  41ae0d:	cmp    eax,0x2744
  41ae12:	je     0x41afc6
  41ae18:	jg     0x41aebf
  41ae1e:	cmp    eax,0x2742
  41ae23:	je     0x41afb2
  41ae29:	jg     0x41af9e
  41ae2f:	call   QWORD PTR [rip+0x1e197]        # 0x438fcc
  41ae35:	or     esi,0xffffffff
  41ae38:	mov    DWORD PTR [rax],0x65
  41ae3e:	jmp    0x41ad75
  41ae43:	cmp    eax,0x274e
  41ae48:	je     0x41b02a
  41ae4e:	jg     0x41af27
  41ae54:	cmp    eax,0x274c
  41ae59:	je     0x41b066
  41ae5f:	jg     0x41b052
  41ae65:	cmp    eax,0x2749
  41ae6a:	jne    0x41af05
  41ae70:	call   QWORD PTR [rip+0x1e156]        # 0x438fcc
  41ae76:	or     esi,0xffffffff
  41ae79:	mov    DWORD PTR [rax],0x7e
  41ae7f:	jmp    0x41ad75
  41ae84:	cmp    eax,0x57
  41ae87:	je     0x41af76
  41ae8d:	jle    0x41af58
  41ae93:	cmp    eax,0x2734
  41ae98:	je     0x41b106
  41ae9e:	jg     0x41b0f2
  41aea4:	cmp    eax,0x2733
  41aea9:	jne    0x41af05
  41aeab:	call   QWORD PTR [rip+0x1e11b]        # 0x438fcc
  41aeb1:	or     esi,0xffffffff
  41aeb4:	mov    DWORD PTR [rax],0x8c
  41aeba:	jmp    0x41ad75
  41aebf:	cmp    eax,0x2746
  41aec4:	je     0x41b08e
  41aeca:	jg     0x41b07a
  41aed0:	call   QWORD PTR [rip+0x1e0f6]        # 0x438fcc
  41aed6:	or     esi,0xffffffff
  41aed9:	mov    DWORD PTR [rax],0x6a
  41aedf:	jmp    0x41ad75
  41aee4:	cmp    eax,0x273d
  41aee9:	je     0x41b002
  41aeef:	cmp    eax,0x273f
  41aef4:	je     0x41afee
  41aefa:	cmp    eax,0x273b
  41aeff:	je     0x41b016
  41af05:	call   QWORD PTR [rip+0x1e0c1]        # 0x438fcc
  41af0b:	lea    ecx,[rbx-0x2711]
  41af11:	lea    edx,[rbx-0x2710]
  41af17:	cmp    ecx,0x17
  41af1a:	cmovbe ebx,edx
  41af1d:	or     esi,0xffffffff
  41af20:	mov    DWORD PTR [rax],ebx
  41af22:	jmp    0x41ad75
  41af27:	cmp    eax,0x2751
  41af2c:	je     0x41b12e
  41af32:	cmp    eax,0x2752
  41af37:	je     0x41b11a
  41af3d:	cmp    eax,0x274f
  41af42:	jne    0x41af05
  41af44:	call   QWORD PTR [rip+0x1e082]        # 0x438fcc
  41af4a:	or     esi,0xffffffff
  41af4d:	mov    DWORD PTR [rax],0x26
  41af53:	jmp    0x41ad75
  41af58:	cmp    eax,0x6
  41af5b:	je     0x41af8a
  41af5d:	cmp    eax,0x8
  41af60:	jne    0x41af05
  41af62:	call   QWORD PTR [rip+0x1e064]        # 0x438fcc
  41af68:	or     esi,0xffffffff
  41af6b:	mov    DWORD PTR [rax],0xc
  41af71:	jmp    0x41ad75
  41af76:	call   QWORD PTR [rip+0x1e050]        # 0x438fcc
  41af7c:	or     esi,0xffffffff
  41af7f:	mov    DWORD PTR [rax],0x16
  41af85:	jmp    0x41ad75
  41af8a:	call   QWORD PTR [rip+0x1e03c]        # 0x438fcc
  41af90:	or     esi,0xffffffff
  41af93:	mov    DWORD PTR [rax],0x9
  41af99:	jmp    0x41ad75
  41af9e:	call   QWORD PTR [rip+0x1e028]        # 0x438fcc
  41afa4:	or     esi,0xffffffff
  41afa7:	mov    DWORD PTR [rax],0x76
  41afad:	jmp    0x41ad75
  41afb2:	call   QWORD PTR [rip+0x1e014]        # 0x438fcc
  41afb8:	or     esi,0xffffffff
  41afbb:	mov    DWORD PTR [rax],0x74
  41afc1:	jmp    0x41ad75
  41afc6:	call   QWORD PTR [rip+0x1e000]        # 0x438fcc
  41afcc:	or     esi,0xffffffff
  41afcf:	mov    DWORD PTR [rax],0x75
  41afd5:	jmp    0x41ad75
  41afda:	call   QWORD PTR [rip+0x1dfec]        # 0x438fcc
  41afe0:	or     esi,0xffffffff
  41afe3:	mov    DWORD PTR [rax],0x7b
  41afe9:	jmp    0x41ad75
  41afee:	call   QWORD PTR [rip+0x1dfd8]        # 0x438fcc
  41aff4:	or     esi,0xffffffff
  41aff7:	mov    DWORD PTR [rax],0x66
  41affd:	jmp    0x41ad75
  41b002:	call   QWORD PTR [rip+0x1dfc4]        # 0x438fcc
  41b008:	or     esi,0xffffffff
  41b00b:	mov    DWORD PTR [rax],0x82
  41b011:	jmp    0x41ad75
  41b016:	call   QWORD PTR [rip+0x1dfb0]        # 0x438fcc
  41b01c:	or     esi,0xffffffff
  41b01f:	mov    DWORD PTR [rax],0x87
  41b025:	jmp    0x41ad75
  41b02a:	call   QWORD PTR [rip+0x1df9c]        # 0x438fcc
  41b030:	or     esi,0xffffffff
  41b033:	mov    DWORD PTR [rax],0x72
  41b039:	jmp    0x41ad75
  41b03e:	call   QWORD PTR [rip+0x1df88]        # 0x438fcc
  41b044:	or     esi,0xffffffff
  41b047:	mov    DWORD PTR [rax],0x80
  41b04d:	jmp    0x41ad75
  41b052:	call   QWORD PTR [rip+0x1df74]        # 0x438fcc
  41b058:	or     esi,0xffffffff
  41b05b:	mov    DWORD PTR [rax],0x6b
  41b061:	jmp    0x41ad75
  41b066:	call   QWORD PTR [rip+0x1df60]        # 0x438fcc
  41b06c:	or     esi,0xffffffff
  41b06f:	mov    DWORD PTR [rax],0x8a
  41b075:	jmp    0x41ad75
  41b07a:	call   QWORD PTR [rip+0x1df4c]        # 0x438fcc
  41b080:	or     esi,0xffffffff
  41b083:	mov    DWORD PTR [rax],0x77
  41b089:	jmp    0x41ad75
  41b08e:	call   QWORD PTR [rip+0x1df38]        # 0x438fcc
  41b094:	or     esi,0xffffffff
  41b097:	mov    DWORD PTR [rax],0x6c
  41b09d:	jmp    0x41ad75
  41b0a2:	call   QWORD PTR [rip+0x1df24]        # 0x438fcc
  41b0a8:	or     esi,0xffffffff
  41b0ab:	mov    DWORD PTR [rax],0x71
  41b0b1:	jmp    0x41ad75
  41b0b6:	call   QWORD PTR [rip+0x1df10]        # 0x438fcc
  41b0bc:	or     esi,0xffffffff
  41b0bf:	mov    DWORD PTR [rax],0x64
  41b0c5:	jmp    0x41ad75
  41b0ca:	call   QWORD PTR [rip+0x1defc]        # 0x438fcc
  41b0d0:	or     esi,0xffffffff
  41b0d3:	mov    DWORD PTR [rax],0x88
  41b0d9:	jmp    0x41ad75
  41b0de:	call   QWORD PTR [rip+0x1dee8]        # 0x438fcc
  41b0e4:	or     esi,0xffffffff
  41b0e7:	mov    DWORD PTR [rax],0x73
  41b0ed:	jmp    0x41ad75
  41b0f2:	call   QWORD PTR [rip+0x1ded4]        # 0x438fcc
  41b0f8:	or     esi,0xffffffff
  41b0fb:	mov    DWORD PTR [rax],0x67
  41b101:	jmp    0x41ad75
  41b106:	call   QWORD PTR [rip+0x1dec0]        # 0x438fcc
  41b10c:	or     esi,0xffffffff
  41b10f:	mov    DWORD PTR [rax],0x70
  41b115:	jmp    0x41ad75
  41b11a:	call   QWORD PTR [rip+0x1deac]        # 0x438fcc
  41b120:	or     esi,0xffffffff
  41b123:	mov    DWORD PTR [rax],0x29
  41b129:	jmp    0x41ad75
  41b12e:	call   QWORD PTR [rip+0x1de98]        # 0x438fcc
  41b134:	or     esi,0xffffffff
  41b137:	mov    DWORD PTR [rax],0x6e
  41b13d:	jmp    0x41ad75
  41b142:	nop    DWORD PTR [rax+0x0]
  41b146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b150:	push   rbx
  41b151:	sub    rsp,0x1c0
  41b158:	xor    eax,eax
  41b15a:	cmp    DWORD PTR [rip+0x19e60],ecx        # 0x434fc0
  41b160:	mov    ebx,ecx
  41b162:	jl     0x41b170
  41b164:	add    rsp,0x1c0
  41b16b:	pop    rbx
  41b16c:	ret    
  41b16d:	nop    DWORD PTR [rax]
  41b170:	lea    rdx,[rsp+0x20]
  41b175:	movzx  ecx,cx
  41b178:	call   QWORD PTR [rip+0x1e14e]        # 0x4392cc
  41b17e:	mov    edx,eax
  41b180:	mov    eax,0x1
  41b185:	test   edx,edx
  41b187:	jne    0x41b164
  41b189:	movzx  edx,WORD PTR [rsp+0x20]
  41b18e:	mov    al,0x2
  41b190:	cmp    ebx,edx
  41b192:	jg     0x41b164
  41b194:	mov    eax,DWORD PTR [rip+0x19e26]        # 0x434fc0
  41b19a:	test   eax,eax
  41b19c:	jne    0x41b1b8
  41b19e:	lea    r8,[rip+0x19e3b]        # 0x434fe0
  41b1a5:	lea    rdx,[rip+0xfffffffffffff734]        # 0x41a8e0
  41b1ac:	lea    rcx,[rip+0xfffffffffffffb6d]        # 0x41ad20
  41b1b3:	call   0x41a820
  41b1b8:	mov    DWORD PTR [rip+0x19e02],ebx        # 0x434fc0
  41b1be:	xor    eax,eax
  41b1c0:	jmp    0x41b164
  41b1c2:	nop    DWORD PTR [rax+0x0]
  41b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1d0:	sub    rsp,0x28
  41b1d4:	lea    rcx,[rip+0x19e05]        # 0x434fe0
  41b1db:	mov    DWORD PTR [rip+0x19ddb],0x0        # 0x434fc0
  41b1e5:	call   0x41a8a0
  41b1ea:	call   QWORD PTR [rip+0x1e0ac]        # 0x43929c
  41b1f0:	test   eax,eax
  41b1f2:	setne  al
  41b1f5:	movzx  eax,al
  41b1f8:	add    rsp,0x28
  41b1fc:	ret    
  41b1fd:	nop
  41b1fe:	nop
  41b1ff:	nop
  41b200:	jmp    QWORD PTR [rip+0x1e146]        # 0x43934c
  41b206:	nop
  41b207:	nop
  41b208:	jmp    QWORD PTR [rip+0x1e136]        # 0x439344
  41b20e:	nop
  41b20f:	nop
  41b210:	jmp    QWORD PTR [rip+0x1e126]        # 0x43933c
  41b216:	nop
  41b217:	nop
  41b218:	jmp    QWORD PTR [rip+0x1e116]        # 0x439334
  41b21e:	nop
  41b21f:	nop
  41b220:	jmp    QWORD PTR [rip+0x1e106]        # 0x43932c
  41b226:	nop
  41b227:	nop
  41b228:	jmp    QWORD PTR [rip+0x1e0f6]        # 0x439324
  41b22e:	nop
  41b22f:	nop
  41b230:	jmp    QWORD PTR [rip+0x1e0e6]        # 0x43931c
  41b236:	nop
  41b237:	nop
  41b238:	jmp    QWORD PTR [rip+0x1e0d6]        # 0x439314
  41b23e:	nop
  41b23f:	nop
  41b240:	jmp    QWORD PTR [rip+0x1e0c6]        # 0x43930c
  41b246:	nop
  41b247:	nop
  41b248:	jmp    QWORD PTR [rip+0x1e0b6]        # 0x439304
  41b24e:	nop
  41b24f:	nop
  41b250:	jmp    QWORD PTR [rip+0x1e0a6]        # 0x4392fc
  41b256:	nop
  41b257:	nop
  41b258:	jmp    QWORD PTR [rip+0x1e096]        # 0x4392f4
  41b25e:	nop
  41b25f:	nop
  41b260:	jmp    QWORD PTR [rip+0x1e086]        # 0x4392ec
  41b266:	nop
  41b267:	nop
  41b268:	jmp    QWORD PTR [rip+0x1e076]        # 0x4392e4
  41b26e:	nop
  41b26f:	nop
  41b270:	jmp    QWORD PTR [rip+0x1e066]        # 0x4392dc
  41b276:	nop
  41b277:	nop
  41b278:	jmp    QWORD PTR [rip+0x1e056]        # 0x4392d4
  41b27e:	nop
  41b27f:	nop
  41b280:	jmp    QWORD PTR [rip+0x1e046]        # 0x4392cc
  41b286:	nop
  41b287:	nop
  41b288:	jmp    QWORD PTR [rip+0x1e036]        # 0x4392c4
  41b28e:	nop
  41b28f:	nop
  41b290:	jmp    QWORD PTR [rip+0x1e026]        # 0x4392bc
  41b296:	nop
  41b297:	nop
  41b298:	jmp    QWORD PTR [rip+0x1e016]        # 0x4392b4
  41b29e:	nop
  41b29f:	nop
  41b2a0:	jmp    QWORD PTR [rip+0x1e006]        # 0x4392ac
  41b2a6:	nop
  41b2a7:	nop
  41b2a8:	jmp    QWORD PTR [rip+0x1dff6]        # 0x4392a4
  41b2ae:	nop
  41b2af:	nop
  41b2b0:	jmp    QWORD PTR [rip+0x1dfe6]        # 0x43929c
  41b2b6:	nop
  41b2b7:	nop
  41b2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2c0:	sub    rsp,0x28
  41b2c4:	call   0x41b2f0
  41b2c9:	lea    rcx,[rip+0x19d30]        # 0x435000
  41b2d0:	mov    r8d,0x401
  41b2d6:	mov    rdx,rax
  41b2d9:	call   0x421d30
  41b2de:	lea    rax,[rip+0x19d1b]        # 0x435000
  41b2e5:	add    rsp,0x28
  41b2e9:	ret    
  41b2ea:	nop
  41b2eb:	nop
  41b2ec:	nop
  41b2ed:	nop
  41b2ee:	nop
  41b2ef:	nop
  41b2f0:	push   rbx
  41b2f1:	sub    rsp,0x40
  41b2f5:	lea    rbx,[rip+0x1a144]        # 0x435440
  41b2fc:	mov    r9d,0x400
  41b302:	xor    edx,edx
  41b304:	mov    r8d,ecx
  41b307:	mov    QWORD PTR [rsp+0x30],0x0
  41b310:	mov    DWORD PTR [rsp+0x28],0x400
  41b318:	mov    QWORD PTR [rsp+0x20],rbx
  41b31d:	mov    ecx,0x12ff
  41b322:	call   QWORD PTR [rip+0x1dafc]        # 0x438e24
  41b328:	mov    rax,rbx
  41b32b:	add    rsp,0x40
  41b32f:	pop    rbx
  41b330:	ret    
  41b331:	nop
  41b332:	nop
  41b333:	nop
  41b334:	nop
  41b335:	nop
  41b336:	nop
  41b337:	nop
  41b338:	nop
  41b339:	nop
  41b33a:	nop
  41b33b:	nop
  41b33c:	nop
  41b33d:	nop
  41b33e:	nop
  41b33f:	nop
  41b340:	jmp    QWORD PTR [rip+0x1df16]        # 0x43925c
  41b346:	nop
  41b347:	nop
  41b348:	jmp    QWORD PTR [rip+0x1df06]        # 0x439254
  41b34e:	nop
  41b34f:	nop
  41b350:	jmp    QWORD PTR [rip+0x1def6]        # 0x43924c
  41b356:	nop
  41b357:	nop
  41b358:	nop    DWORD PTR [rax+rax*1+0x0]
  41b360:	push   rbx
  41b361:	sub    rsp,0x30
  41b365:	mov    rbx,rcx
  41b368:	mov    rcx,QWORD PTR [rip+0x1bd81]        # 0x4370f0
  41b36f:	call   0x41b910
  41b374:	cmp    rax,0xffffffffffffffff
  41b378:	mov    QWORD PTR [rsp+0x20],rax
  41b37d:	je     0x41b3f5
  41b37f:	mov    ecx,0x8
  41b384:	call   0x421ef8
  41b389:	mov    rcx,QWORD PTR [rip+0x1bd60]        # 0x4370f0
  41b390:	call   0x41b910
  41b395:	mov    rcx,QWORD PTR [rip+0x1bd5c]        # 0x4370f8
  41b39c:	mov    QWORD PTR [rsp+0x20],rax
  41b3a1:	call   0x41b910
  41b3a6:	lea    rdx,[rsp+0x20]
  41b3ab:	lea    r8,[rsp+0x28]
  41b3b0:	mov    rcx,rbx
  41b3b3:	mov    QWORD PTR [rsp+0x28],rax
  41b3b8:	call   0x421f98
  41b3bd:	mov    rcx,QWORD PTR [rsp+0x20]
  41b3c2:	mov    rbx,rax
  41b3c5:	call   0x41b920
  41b3ca:	mov    rcx,QWORD PTR [rsp+0x28]
  41b3cf:	mov    QWORD PTR [rip+0x1bd1a],rax        # 0x4370f0
  41b3d6:	call   0x41b920
  41b3db:	mov    ecx,0x8
  41b3e0:	mov    QWORD PTR [rip+0x1bd11],rax        # 0x4370f8
  41b3e7:	call   0x421ec0
  41b3ec:	mov    rax,rbx
  41b3ef:	add    rsp,0x30
  41b3f3:	pop    rbx
  41b3f4:	ret    
  41b3f5:	mov    rax,QWORD PTR [rip+0x120c4]        # 0x42d4c0
  41b3fc:	mov    rcx,rbx
  41b3ff:	call   QWORD PTR [rax]
  41b401:	add    rsp,0x30
  41b405:	pop    rbx
  41b406:	ret    
  41b407:	nop    WORD PTR [rax+rax*1+0x0]
  41b410:	sub    rsp,0x28
  41b414:	call   0x41b360
  41b419:	test   rax,rax
  41b41c:	sete   al
  41b41f:	movzx  eax,al
  41b422:	neg    eax
  41b424:	add    rsp,0x28
  41b428:	ret    
  41b429:	nop
  41b42a:	nop
  41b42b:	nop
  41b42c:	nop
  41b42d:	nop
  41b42e:	nop
  41b42f:	nop
  41b430:	sub    rsp,0x28
  41b434:	mov    rax,QWORD PTR [rip+0x8965]        # 0x423da0
  41b43b:	mov    rax,QWORD PTR [rax]
  41b43e:	test   rax,rax
  41b441:	je     0x41b460
  41b443:	call   rax
  41b445:	mov    rax,QWORD PTR [rip+0x8954]        # 0x423da0
  41b44c:	lea    rdx,[rax+0x8]
  41b450:	mov    rax,QWORD PTR [rax+0x8]
  41b454:	mov    QWORD PTR [rip+0x8945],rdx        # 0x423da0
  41b45b:	test   rax,rax
  41b45e:	jne    0x41b443
  41b460:	add    rsp,0x28
  41b464:	ret    
  41b465:	nop
  41b466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b470:	push   rsi
  41b471:	push   rbx
  41b472:	sub    rsp,0x28
  41b476:	mov    rsi,QWORD PTR [rip+0x11fb3]        # 0x42d430
  41b47d:	mov    rax,QWORD PTR [rsi]
  41b480:	cmp    eax,0xffffffff
  41b483:	mov    ebx,eax
  41b485:	je     0x41b4b0
  41b487:	test   ebx,ebx
  41b489:	je     0x41b49a
  41b48b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b490:	mov    eax,ebx
  41b492:	call   QWORD PTR [rsi+rax*8]
  41b495:	sub    ebx,0x1
  41b498:	jne    0x41b490
  41b49a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x41b430
  41b4a1:	add    rsp,0x28
  41b4a5:	pop    rbx
  41b4a6:	pop    rsi
  41b4a7:	jmp    0x41b410
  41b4ac:	nop    DWORD PTR [rax+0x0]
  41b4b0:	xor    ebx,ebx
  41b4b2:	jmp    0x41b4b6
  41b4b4:	mov    ebx,eax
  41b4b6:	lea    edx,[rbx+0x1]
  41b4b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41b4be:	mov    rax,rdx
  41b4c1:	jne    0x41b4b4
  41b4c3:	jmp    0x41b487
  41b4c5:	nop
  41b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4d0:	mov    eax,DWORD PTR [rip+0x1a7aa]        # 0x435c80
  41b4d6:	test   eax,eax
  41b4d8:	je     0x41b4e0
  41b4da:	repz ret 
  41b4dc:	nop    DWORD PTR [rax+0x0]
  41b4e0:	mov    DWORD PTR [rip+0x1a796],0x1        # 0x435c80
  41b4ea:	jmp    0x41b470
  41b4ec:	nop
  41b4ed:	nop
  41b4ee:	nop
  41b4ef:	nop
  41b4f0:	mov    rax,QWORD PTR [rip+0x1da8d]        # 0x438f84
  41b4f7:	rex.W jmp rax
  41b4fa:	nop
  41b4fb:	nop
  41b4fc:	nop
  41b4fd:	nop
  41b4fe:	nop
  41b4ff:	nop
  41b500:	xor    eax,eax
  41b502:	ret    
  41b503:	nop
  41b504:	nop
  41b505:	nop
  41b506:	nop
  41b507:	nop
  41b508:	nop
  41b509:	nop
  41b50a:	nop
  41b50b:	nop
  41b50c:	nop
  41b50d:	nop
  41b50e:	nop
  41b50f:	nop
  41b510:	push   r12
  41b512:	push   rbp
  41b513:	push   rdi
  41b514:	push   rsi
  41b515:	push   rbx
  41b516:	sub    rsp,0x40
  41b51a:	mov    rbx,QWORD PTR [rip+0x891f]        # 0x423e40
  41b521:	movabs rax,0x2b992ddfa232
  41b52b:	mov    QWORD PTR [rsp+0x20],0x0
  41b534:	cmp    rbx,rax
  41b537:	je     0x41b550
  41b539:	not    rbx
  41b53c:	mov    QWORD PTR [rip+0x890d],rbx        # 0x423e50
  41b543:	add    rsp,0x40
  41b547:	pop    rbx
  41b548:	pop    rsi
  41b549:	pop    rdi
  41b54a:	pop    rbp
  41b54b:	pop    r12
  41b54d:	ret    
  41b54e:	xchg   ax,ax
  41b550:	lea    rcx,[rsp+0x20]
  41b555:	call   QWORD PTR [rip+0x1d939]        # 0x438e94
  41b55b:	mov    r12,QWORD PTR [rsp+0x20]
  41b560:	call   QWORD PTR [rip+0x1d8d6]        # 0x438e3c
  41b566:	mov    ebp,eax
  41b568:	call   QWORD PTR [rip+0x1d8d6]        # 0x438e44
  41b56e:	mov    edi,eax
  41b570:	call   QWORD PTR [rip+0x1d926]        # 0x438e9c
  41b576:	lea    rcx,[rsp+0x30]
  41b57b:	mov    esi,eax
  41b57d:	call   QWORD PTR [rip+0x1d951]        # 0x438ed4
  41b583:	xor    r12,QWORD PTR [rsp+0x30]
  41b588:	mov    edx,edi
  41b58a:	movabs rax,0xffffffffffff
  41b594:	xor    rbp,r12
  41b597:	mov    rdi,rbp
  41b59a:	xor    rdi,rdx
  41b59d:	mov    edx,esi
  41b59f:	xor    rdi,rdx
  41b5a2:	mov    rsi,rdi
  41b5a5:	and    rsi,rax
  41b5a8:	cmp    rsi,rbx
  41b5ab:	je     0x41b5d0
  41b5ad:	mov    rax,rsi
  41b5b0:	not    rax
  41b5b3:	mov    QWORD PTR [rip+0x8886],rsi        # 0x423e40
  41b5ba:	mov    QWORD PTR [rip+0x888f],rax        # 0x423e50
  41b5c1:	add    rsp,0x40
  41b5c5:	pop    rbx
  41b5c6:	pop    rsi
  41b5c7:	pop    rdi
  41b5c8:	pop    rbp
  41b5c9:	pop    r12
  41b5cb:	ret    
  41b5cc:	nop    DWORD PTR [rax+0x0]
  41b5d0:	movabs rax,0xffffd466d2205dcc
  41b5da:	movabs rsi,0x2b992ddfa233
  41b5e4:	jmp    0x41b5b3
  41b5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5f0:	push   rbp
  41b5f1:	push   rsi
  41b5f2:	push   rbx
  41b5f3:	mov    rbp,rsp
  41b5f6:	sub    rsp,0x70
  41b5fa:	mov    rsi,rcx
  41b5fd:	lea    rcx,[rip+0x1a6bc]        # 0x435cc0
  41b604:	call   QWORD PTR [rip+0x1d8da]        # 0x438ee4
  41b60a:	mov    rbx,QWORD PTR [rip+0x1a7a7]        # 0x435db8
  41b611:	xor    r8d,r8d
  41b614:	lea    rdx,[rbp-0x28]
  41b618:	mov    rcx,rbx
  41b61b:	call   QWORD PTR [rip+0x1d8cb]        # 0x438eec
  41b621:	test   rax,rax
  41b624:	mov    r9,rax
  41b627:	je     0x41b6d0
  41b62d:	lea    rax,[rbp-0x20]
  41b631:	mov    QWORD PTR [rsp+0x38],0x0
  41b63a:	mov    r8,rbx
  41b63d:	mov    rdx,QWORD PTR [rbp-0x28]
  41b641:	xor    ecx,ecx
  41b643:	mov    QWORD PTR [rsp+0x30],rax
  41b648:	lea    rax,[rbp-0x18]
  41b64c:	mov    QWORD PTR [rsp+0x28],rax
  41b651:	lea    rax,[rip+0x1a668]        # 0x435cc0
  41b658:	mov    QWORD PTR [rsp+0x20],rax
  41b65d:	call   QWORD PTR [rip+0x1d891]        # 0x438ef4
  41b663:	mov    rax,QWORD PTR [rip+0x1a74e]        # 0x435db8
  41b66a:	xor    ecx,ecx
  41b66c:	mov    QWORD PTR [rip+0x1a6cd],rsi        # 0x435d40
  41b673:	mov    DWORD PTR [rip+0x1ab43],0xc0000409        # 0x4361c0
  41b67d:	mov    DWORD PTR [rip+0x1ab3d],0x1        # 0x4361c4
  41b687:	mov    QWORD PTR [rip+0x1ab42],rax        # 0x4361d0
  41b68e:	mov    rax,QWORD PTR [rip+0x87ab]        # 0x423e40
  41b695:	mov    QWORD PTR [rbp-0x10],rax
  41b699:	mov    rax,QWORD PTR [rip+0x87b0]        # 0x423e50
  41b6a0:	mov    QWORD PTR [rbp-0x8],rax
  41b6a4:	call   QWORD PTR [rip+0x1d852]        # 0x438efc
  41b6aa:	lea    rcx,[rip+0x115df]        # 0x42cc90
  41b6b1:	call   QWORD PTR [rip+0x1d86d]        # 0x438f24
  41b6b7:	call   QWORD PTR [rip+0x1d777]        # 0x438e34
  41b6bd:	mov    edx,0xc0000409
  41b6c2:	mov    rcx,rax
  41b6c5:	call   QWORD PTR [rip+0x1d849]        # 0x438f14
  41b6cb:	call   0x421eb8
  41b6d0:	mov    rax,QWORD PTR [rbp+0x18]
  41b6d4:	mov    QWORD PTR [rip+0x1a6dd],rax        # 0x435db8
  41b6db:	lea    rax,[rbp+0x8]
  41b6df:	mov    QWORD PTR [rip+0x1a672],rax        # 0x435d58
  41b6e6:	jmp    0x41b663
  41b6eb:	nop
  41b6ec:	nop
  41b6ed:	nop
  41b6ee:	nop
  41b6ef:	nop
  41b6f0:	sub    rsp,0x28
  41b6f4:	test   edx,edx
  41b6f6:	je     0x41b710
  41b6f8:	cmp    edx,0x3
  41b6fb:	je     0x41b710
  41b6fd:	mov    eax,0x1
  41b702:	add    rsp,0x28
  41b706:	ret    
  41b707:	nop    WORD PTR [rax+rax*1+0x0]
  41b710:	call   0x41c400
  41b715:	mov    eax,0x1
  41b71a:	add    rsp,0x28
  41b71e:	ret    
  41b71f:	nop
  41b720:	push   rsi
  41b721:	push   rbx
  41b722:	sub    rsp,0x28
  41b726:	mov    rax,QWORD PTR [rip+0x11ce3]        # 0x42d410
  41b72d:	cmp    DWORD PTR [rax],0x2
  41b730:	je     0x41b738
  41b732:	mov    DWORD PTR [rax],0x2
  41b738:	cmp    edx,0x2
  41b73b:	je     0x41b750
  41b73d:	cmp    edx,0x1
  41b740:	je     0x41b782
  41b742:	mov    eax,0x1
  41b747:	add    rsp,0x28
  41b74b:	pop    rbx
  41b74c:	pop    rsi
  41b74d:	ret    
  41b74e:	xchg   ax,ax
  41b750:	lea    rbx,[rip+0x20909]        # 0x43c060
  41b757:	lea    rsi,[rip+0x20902]        # 0x43c060
  41b75e:	cmp    rbx,rsi
  41b761:	je     0x41b742
  41b763:	mov    rax,QWORD PTR [rbx]
  41b766:	test   rax,rax
  41b769:	je     0x41b76d
  41b76b:	call   rax
  41b76d:	add    rbx,0x8
  41b771:	cmp    rbx,rsi
  41b774:	jne    0x41b763
  41b776:	mov    eax,0x1
  41b77b:	add    rsp,0x28
  41b77f:	pop    rbx
  41b780:	pop    rsi
  41b781:	ret    
  41b782:	call   0x41c400
  41b787:	jmp    0x41b742
  41b789:	nop    DWORD PTR [rax+0x0]
  41b790:	xor    eax,eax
  41b792:	ret    
  41b793:	nop
  41b794:	nop
  41b795:	nop
  41b796:	nop
  41b797:	nop
  41b798:	nop
  41b799:	nop
  41b79a:	nop
  41b79b:	nop
  41b79c:	nop
  41b79d:	nop
  41b79e:	nop
  41b79f:	nop
  41b7a0:	sub    rsp,0x58
  41b7a4:	mov    rax,QWORD PTR [rip+0x1aaf5]        # 0x4362a0
  41b7ab:	test   rax,rax
  41b7ae:	je     0x41b7dc
  41b7b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  41b7b9:	mov    DWORD PTR [rsp+0x20],ecx
  41b7bd:	lea    rcx,[rsp+0x20]
  41b7c2:	mov    QWORD PTR [rsp+0x28],rdx
  41b7c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  41b7cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  41b7d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  41b7d9:	call   rax
  41b7db:	nop
  41b7dc:	add    rsp,0x58
  41b7e0:	ret    
  41b7e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7f0:	mov    QWORD PTR [rip+0x1aaa9],rcx        # 0x4362a0
  41b7f7:	jmp    0x421f70
  41b7fc:	nop    DWORD PTR [rax+0x0]
  41b800:	push   rsi
  41b801:	push   rbx
  41b802:	sub    rsp,0x78
  41b806:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41b80b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41b810:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41b816:	cmp    DWORD PTR [rcx],0x6
  41b819:	ja     0x41b8f0
  41b81f:	mov    edx,DWORD PTR [rcx]
  41b821:	lea    rax,[rip+0x115ac]        # 0x42cdd4
  41b828:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41b82c:	add    rax,rdx
  41b82f:	jmp    rax
  41b831:	lea    rbx,[rip+0x11478]        # 0x42ccb0
  41b838:	nop    DWORD PTR [rax+rax*1+0x0]
  41b840:	movsd  xmm8,QWORD PTR [rcx+0x20]
  41b846:	mov    rsi,QWORD PTR [rcx+0x8]
  41b84a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41b84f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  41b854:	call   0x421f88
  41b859:	movsd  QWORD PTR [rsp+0x30],xmm8
  41b860:	lea    rcx,[rax+0x60]
  41b864:	lea    rdx,[rip+0x1153d]        # 0x42cda8
  41b86b:	movsd  QWORD PTR [rsp+0x28],xmm7
  41b871:	mov    r9,rsi
  41b874:	mov    r8,rbx
  41b877:	movsd  QWORD PTR [rsp+0x20],xmm6
  41b87d:	call   0x421e70
  41b882:	nop
  41b883:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41b888:	xor    eax,eax
  41b88a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41b88f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41b895:	add    rsp,0x78
  41b899:	pop    rbx
  41b89a:	pop    rsi
  41b89b:	ret    
  41b89c:	nop    DWORD PTR [rax+0x0]
  41b8a0:	lea    rbx,[rip+0x11428]        # 0x42cccf
  41b8a7:	jmp    0x41b840
  41b8a9:	nop    DWORD PTR [rax+0x0]
  41b8b0:	lea    rbx,[rip+0x11439]        # 0x42ccf0
  41b8b7:	jmp    0x41b840
  41b8b9:	nop    DWORD PTR [rax+0x0]
  41b8c0:	lea    rbx,[rip+0x11499]        # 0x42cd60
  41b8c7:	jmp    0x41b840
  41b8cc:	nop    DWORD PTR [rax+0x0]
  41b8d0:	lea    rbx,[rip+0x11461]        # 0x42cd38
  41b8d7:	jmp    0x41b840
  41b8dc:	nop    DWORD PTR [rax+0x0]
  41b8e0:	lea    rbx,[rip+0x11429]        # 0x42cd10
  41b8e7:	jmp    0x41b840
  41b8ec:	nop    DWORD PTR [rax+0x0]
  41b8f0:	lea    rbx,[rip+0x1149f]        # 0x42cd96
  41b8f7:	jmp    0x41b840
  41b8fc:	nop
  41b8fd:	nop
  41b8fe:	nop
  41b8ff:	nop
  41b900:	fninit 
  41b902:	ret    
  41b903:	nop
  41b904:	nop
  41b905:	nop
  41b906:	nop
  41b907:	nop
  41b908:	nop
  41b909:	nop
  41b90a:	nop
  41b90b:	nop
  41b90c:	nop
  41b90d:	nop
  41b90e:	nop
  41b90f:	nop
  41b910:	mov    rax,rcx
  41b913:	ret    
  41b914:	xchg   ax,ax
  41b916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b920:	mov    rax,rcx
  41b923:	ret    
  41b924:	nop
  41b925:	nop
  41b926:	nop
  41b927:	nop
  41b928:	nop
  41b929:	nop
  41b92a:	nop
  41b92b:	nop
  41b92c:	nop
  41b92d:	nop
  41b92e:	nop
  41b92f:	nop
  41b930:	push   rsi
  41b931:	push   rbx
  41b932:	sub    rsp,0x38
  41b936:	lea    rax,[rsp+0x58]
  41b93b:	mov    rbx,rcx
  41b93e:	mov    QWORD PTR [rsp+0x58],rdx
  41b943:	mov    QWORD PTR [rsp+0x60],r8
  41b948:	mov    QWORD PTR [rsp+0x68],r9
  41b94d:	mov    QWORD PTR [rsp+0x28],rax
  41b952:	call   0x421f88
  41b957:	lea    rcx,[rip+0x11492]        # 0x42cdf0
  41b95e:	lea    r9,[rax+0x60]
  41b962:	mov    r8d,0x1b
  41b968:	mov    edx,0x1
  41b96d:	call   0x421e38
  41b972:	mov    rsi,QWORD PTR [rsp+0x28]
  41b977:	call   0x421f88
  41b97c:	lea    rcx,[rax+0x60]
  41b980:	mov    rdx,rbx
  41b983:	mov    r8,rsi
  41b986:	call   0x421d48
  41b98b:	call   0x421eb8
  41b990:	nop
  41b991:	nop    DWORD PTR [rax+rax*1+0x0]
  41b996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9a0:	push   r13
  41b9a2:	push   r12
  41b9a4:	push   rbp
  41b9a5:	push   rdi
  41b9a6:	push   rsi
  41b9a7:	push   rbx
  41b9a8:	sub    rsp,0x58
  41b9ac:	movsxd rbp,DWORD PTR [rip+0x1a911]        # 0x4362c4
  41b9b3:	mov    rbx,rcx
  41b9b6:	mov    rsi,rdx
  41b9b9:	mov    rdi,r8
  41b9bc:	test   ebp,ebp
  41b9be:	jle    0x41baba
  41b9c4:	mov    rax,QWORD PTR [rip+0x1a8fd]        # 0x4362c8
  41b9cb:	xor    r9d,r9d
  41b9ce:	add    rax,0x8
  41b9d2:	mov    r10,QWORD PTR [rax]
  41b9d5:	cmp    rbx,r10
  41b9d8:	jb     0x41b9ee
  41b9da:	mov    rdx,QWORD PTR [rax+0x8]
  41b9de:	mov    r11d,DWORD PTR [rdx+0x8]
  41b9e2:	add    r10,r11
  41b9e5:	cmp    rbx,r10
  41b9e8:	jb     0x41baa0
  41b9ee:	add    r9d,0x1
  41b9f2:	add    rax,0x18
  41b9f6:	cmp    r9d,ebp
  41b9f9:	jne    0x41b9d2
  41b9fb:	mov    rcx,rbx
  41b9fe:	call   0x41c610
  41ba03:	test   rax,rax
  41ba06:	mov    r12,rax
  41ba09:	je     0x41baf2
  41ba0f:	lea    rbp,[rbp+rbp*2+0x0]
  41ba14:	shl    rbp,0x3
  41ba18:	mov    r13,rbp
  41ba1b:	add    r13,QWORD PTR [rip+0x1a8a6]        # 0x4362c8
  41ba22:	mov    QWORD PTR [r13+0x10],rax
  41ba26:	mov    DWORD PTR [r13+0x0],0x0
  41ba2e:	call   0x41c730
  41ba33:	mov    edx,DWORD PTR [r12+0xc]
  41ba38:	mov    r8d,0x30
  41ba3e:	add    rax,rdx
  41ba41:	lea    rdx,[rsp+0x20]
  41ba46:	mov    QWORD PTR [r13+0x8],rax
  41ba4a:	mov    rax,QWORD PTR [rip+0x1a877]        # 0x4362c8
  41ba51:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  41ba56:	call   QWORD PTR [rip+0x1d4d8]        # 0x438f34
  41ba5c:	test   rax,rax
  41ba5f:	je     0x41bad5
  41ba61:	mov    eax,DWORD PTR [rsp+0x44]
  41ba65:	lea    edx,[rax-0x4]
  41ba68:	and    edx,0xfffffffb
  41ba6b:	je     0x41ba99
  41ba6d:	sub    eax,0x40
  41ba70:	and    eax,0xffffffbf
  41ba73:	je     0x41ba99
  41ba75:	mov    r9,rbp
  41ba78:	add    r9,QWORD PTR [rip+0x1a849]        # 0x4362c8
  41ba7f:	mov    r8d,0x40
  41ba85:	mov    rdx,QWORD PTR [rsp+0x38]
  41ba8a:	mov    rcx,QWORD PTR [rsp+0x20]
  41ba8f:	call   QWORD PTR [rip+0x1d497]        # 0x438f2c
  41ba95:	test   eax,eax
  41ba97:	je     0x41bac1
  41ba99:	add    DWORD PTR [rip+0x1a824],0x1        # 0x4362c4
  41baa0:	mov    r8,rdi
  41baa3:	mov    rdx,rsi
  41baa6:	mov    rcx,rbx
  41baa9:	add    rsp,0x58
  41baad:	pop    rbx
  41baae:	pop    rsi
  41baaf:	pop    rdi
  41bab0:	pop    rbp
  41bab1:	pop    r12
  41bab3:	pop    r13
  41bab5:	jmp    0x421e08
  41baba:	xor    ebp,ebp
  41babc:	jmp    0x41b9fb
  41bac1:	call   QWORD PTR [rip+0x1d395]        # 0x438e5c
  41bac7:	lea    rcx,[rip+0x1139a]        # 0x42ce68
  41bace:	mov    edx,eax
  41bad0:	call   0x41b930
  41bad5:	mov    rax,QWORD PTR [rip+0x1a7ec]        # 0x4362c8
  41badc:	mov    edx,DWORD PTR [r12+0x8]
  41bae1:	lea    rcx,[rip+0x11348]        # 0x42ce30
  41bae8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41baed:	call   0x41b930
  41baf2:	lea    rcx,[rip+0x11317]        # 0x42ce10
  41baf9:	mov    rdx,rbx
  41bafc:	call   0x41b930
  41bb01:	nop
  41bb02:	nop    DWORD PTR [rax+0x0]
  41bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb10:	push   rbp
  41bb11:	push   r14
  41bb13:	push   r13
  41bb15:	push   r12
  41bb17:	push   rdi
  41bb18:	push   rsi
  41bb19:	push   rbx
  41bb1a:	mov    rbp,rsp
  41bb1d:	sub    rsp,0x60
  41bb21:	mov    ebx,DWORD PTR [rip+0x1a799]        # 0x4362c0
  41bb27:	test   ebx,ebx
  41bb29:	je     0x41bb40
  41bb2b:	mov    rsp,rbp
  41bb2e:	pop    rbx
  41bb2f:	pop    rsi
  41bb30:	pop    rdi
  41bb31:	pop    r12
  41bb33:	pop    r13
  41bb35:	pop    r14
  41bb37:	pop    rbp
  41bb38:	ret    
  41bb39:	nop    DWORD PTR [rax+0x0]
  41bb40:	mov    DWORD PTR [rip+0x1a776],0x1        # 0x4362c0
  41bb4a:	call   0x41c660
  41bb4f:	cdqe   
  41bb51:	lea    rax,[rax+rax*2]
  41bb55:	lea    rax,[rax*8+0x1e]
  41bb5d:	and    rax,0xfffffffffffffff0
  41bb61:	call   0x41c880
  41bb66:	mov    rsi,QWORD PTR [rip+0x118d3]        # 0x42d440
  41bb6d:	mov    rbx,QWORD PTR [rip+0x118dc]        # 0x42d450
  41bb74:	sub    rsp,rax
  41bb77:	mov    DWORD PTR [rip+0x1a743],0x0        # 0x4362c4
  41bb81:	lea    rax,[rsp+0x20]
  41bb86:	mov    QWORD PTR [rip+0x1a73b],rax        # 0x4362c8
  41bb8d:	mov    rax,rsi
  41bb90:	sub    rax,rbx
  41bb93:	cmp    rax,0x7
  41bb97:	jle    0x41bb2b
  41bb99:	cmp    rax,0xb
  41bb9d:	jle    0x41bbc5
  41bb9f:	mov    r11d,DWORD PTR [rbx]
  41bba2:	test   r11d,r11d
  41bba5:	jne    0x41bcf0
  41bbab:	mov    r10d,DWORD PTR [rbx+0x4]
  41bbaf:	test   r10d,r10d
  41bbb2:	jne    0x41bcf0
  41bbb8:	mov    r9d,DWORD PTR [rbx+0x8]
  41bbbc:	test   r9d,r9d
  41bbbf:	jne    0x41bbdc
  41bbc1:	add    rbx,0xc
  41bbc5:	mov    r8d,DWORD PTR [rbx]
  41bbc8:	test   r8d,r8d
  41bbcb:	jne    0x41bcf0
  41bbd1:	mov    ecx,DWORD PTR [rbx+0x4]
  41bbd4:	test   ecx,ecx
  41bbd6:	jne    0x41bcf0
  41bbdc:	mov    edx,DWORD PTR [rbx+0x8]
  41bbdf:	cmp    edx,0x1
  41bbe2:	jne    0x41bdfc
  41bbe8:	add    rbx,0xc
  41bbec:	cmp    rbx,rsi
  41bbef:	jae    0x41bb2b
  41bbf5:	mov    r12,QWORD PTR [rip+0x11874]        # 0x42d470
  41bbfc:	lea    r13,[rbp-0x30]
  41bc00:	movabs r14,0xffffffff00000000
  41bc0a:	mov    ecx,DWORD PTR [rbx+0x4]
  41bc0d:	mov    eax,DWORD PTR [rbx]
  41bc0f:	movzx  edx,BYTE PTR [rbx+0x8]
  41bc13:	add    rax,r12
  41bc16:	add    rcx,r12
  41bc19:	cmp    edx,0x10
  41bc1c:	mov    r8,QWORD PTR [rax]
  41bc1f:	je     0x41bd66
  41bc25:	jbe    0x41bd2d
  41bc2b:	cmp    edx,0x20
  41bc2e:	je     0x41bdaf
  41bc34:	cmp    edx,0x40
  41bc37:	jne    0x41bd9b
  41bc3d:	sub    r8,rax
  41bc40:	mov    rdx,r13
  41bc43:	mov    rdi,r13
  41bc46:	mov    rax,r8
  41bc49:	add    rax,QWORD PTR [rcx]
  41bc4c:	mov    r8d,0x8
  41bc52:	mov    QWORD PTR [rbp-0x30],rax
  41bc56:	call   0x41b9a0
  41bc5b:	add    rbx,0xc
  41bc5f:	cmp    rbx,rsi
  41bc62:	jb     0x41bc0a
  41bc64:	mov    eax,DWORD PTR [rip+0x1a65a]        # 0x4362c4
  41bc6a:	xor    ebx,ebx
  41bc6c:	xor    esi,esi
  41bc6e:	test   eax,eax
  41bc70:	jle    0x41bb2b
  41bc76:	mov    r14,QWORD PTR [rip+0x1d2b7]        # 0x438f34
  41bc7d:	lea    r13,[rbp-0x34]
  41bc81:	mov    r12,QWORD PTR [rip+0x1d2a4]        # 0x438f2c
  41bc88:	jmp    0x41bca3
  41bc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc90:	add    esi,0x1
  41bc93:	add    rbx,0x18
  41bc97:	cmp    esi,DWORD PTR [rip+0x1a627]        # 0x4362c4
  41bc9d:	jge    0x41bb2b
  41bca3:	mov    rax,rbx
  41bca6:	add    rax,QWORD PTR [rip+0x1a61b]        # 0x4362c8
  41bcad:	mov    edx,DWORD PTR [rax]
  41bcaf:	test   edx,edx
  41bcb1:	je     0x41bc90
  41bcb3:	mov    rcx,QWORD PTR [rax+0x8]
  41bcb7:	mov    r8d,0x30
  41bcbd:	mov    rdx,rdi
  41bcc0:	call   r14
  41bcc3:	test   rax,rax
  41bcc6:	je     0x41bdde
  41bccc:	mov    rax,QWORD PTR [rip+0x1a5f5]        # 0x4362c8
  41bcd3:	mov    r9,r13
  41bcd6:	mov    rdx,QWORD PTR [rbp-0x18]
  41bcda:	mov    rcx,QWORD PTR [rbp-0x30]
  41bcde:	mov    r8d,DWORD PTR [rax+rbx*1]
  41bce2:	call   r12
  41bce5:	jmp    0x41bc90
  41bce7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcf0:	cmp    rbx,rsi
  41bcf3:	jae    0x41bb2b
  41bcf9:	mov    r12,QWORD PTR [rip+0x11770]        # 0x42d470
  41bd00:	lea    rdi,[rbp-0x30]
  41bd04:	mov    ecx,DWORD PTR [rbx+0x4]
  41bd07:	mov    eax,DWORD PTR [rbx]
  41bd09:	mov    r8d,0x4
  41bd0f:	mov    rdx,rdi
  41bd12:	add    rbx,0x8
  41bd16:	add    rcx,r12
  41bd19:	add    eax,DWORD PTR [rcx]
  41bd1b:	mov    DWORD PTR [rbp-0x30],eax
  41bd1e:	call   0x41b9a0
  41bd23:	cmp    rbx,rsi
  41bd26:	jb     0x41bd04
  41bd28:	jmp    0x41bc64
  41bd2d:	cmp    edx,0x8
  41bd30:	jne    0x41bd9b
  41bd32:	movzx  edx,BYTE PTR [rcx]
  41bd35:	mov    rdi,r13
  41bd38:	mov    r10,rdx
  41bd3b:	or     r10,0xffffffffffffff00
  41bd42:	test   dl,dl
  41bd44:	cmovs  rdx,r10
  41bd48:	sub    rdx,rax
  41bd4b:	lea    rax,[r8+rdx*1]
  41bd4f:	mov    r8d,0x1
  41bd55:	mov    rdx,r13
  41bd58:	mov    QWORD PTR [rbp-0x30],rax
  41bd5c:	call   0x41b9a0
  41bd61:	jmp    0x41bc5b
  41bd66:	movzx  edx,WORD PTR [rcx]
  41bd69:	mov    rdi,r13
  41bd6c:	mov    r10,rdx
  41bd6f:	or     r10,0xffffffffffff0000
  41bd76:	test   dx,dx
  41bd79:	cmovs  rdx,r10
  41bd7d:	sub    rdx,rax
  41bd80:	lea    rax,[r8+rdx*1]
  41bd84:	mov    r8d,0x2
  41bd8a:	mov    rdx,r13
  41bd8d:	mov    QWORD PTR [rbp-0x30],rax
  41bd91:	call   0x41b9a0
  41bd96:	jmp    0x41bc5b
  41bd9b:	lea    rcx,[rip+0x11126]        # 0x42cec8
  41bda2:	mov    QWORD PTR [rbp-0x30],0x0
  41bdaa:	call   0x41b930
  41bdaf:	mov    edx,DWORD PTR [rcx]
  41bdb1:	mov    rdi,r13
  41bdb4:	mov    r10,rdx
  41bdb7:	or     r10,r14
  41bdba:	test   edx,edx
  41bdbc:	cmovs  rdx,r10
  41bdc0:	sub    rdx,rax
  41bdc3:	lea    rax,[r8+rdx*1]
  41bdc7:	mov    r8d,0x4
  41bdcd:	mov    rdx,r13
  41bdd0:	mov    QWORD PTR [rbp-0x30],rax
  41bdd4:	call   0x41b9a0
  41bdd9:	jmp    0x41bc5b
  41bdde:	add    rbx,QWORD PTR [rip+0x1a4e3]        # 0x4362c8
  41bde5:	lea    rcx,[rip+0x11044]        # 0x42ce30
  41bdec:	mov    rax,QWORD PTR [rbx+0x10]
  41bdf0:	mov    r8,QWORD PTR [rbx+0x8]
  41bdf4:	mov    edx,DWORD PTR [rax+0x8]
  41bdf7:	call   0x41b930
  41bdfc:	lea    rcx,[rip+0x1108d]        # 0x42ce90
  41be03:	call   0x41b930
  41be08:	nop
  41be09:	nop
  41be0a:	nop
  41be0b:	nop
  41be0c:	nop
  41be0d:	nop
  41be0e:	nop
  41be0f:	nop
  41be10:	sub    rsp,0x28
  41be14:	mov    eax,DWORD PTR [rcx]
  41be16:	cmp    eax,0xc0000091
  41be1b:	ja     0x41be80
  41be1d:	cmp    eax,0xc000008d
  41be22:	jae    0x41be9f
  41be24:	cmp    eax,0xc0000008
  41be29:	je     0x41bf40
  41be2f:	ja     0x41bf10
  41be35:	cmp    eax,0x80000002
  41be3a:	je     0x41bf40
  41be40:	cmp    eax,0xc0000005
  41be45:	jne    0x41bf1e
  41be4b:	xor    edx,edx
  41be4d:	mov    ecx,0xb
  41be52:	call   0x421dc8
  41be57:	cmp    rax,0x1
  41be5b:	je     0x41bfa0
  41be61:	test   rax,rax
  41be64:	je     0x41bf80
  41be6a:	mov    ecx,0xb
  41be6f:	call   rax
  41be71:	xor    eax,eax
  41be73:	add    rsp,0x28
  41be77:	ret    
  41be78:	nop    DWORD PTR [rax+rax*1+0x0]
  41be80:	cmp    eax,0xc0000094
  41be85:	je     0x41bf50
  41be8b:	ja     0x41bed0
  41be8d:	cmp    eax,0xc0000092
  41be92:	je     0x41bf40
  41be98:	cmp    eax,0xc0000093
  41be9d:	jne    0x41bf1e
  41be9f:	xor    edx,edx
  41bea1:	mov    ecx,0x8
  41bea6:	call   0x421dc8
  41beab:	cmp    rax,0x1
  41beaf:	mov    rdx,rax
  41beb2:	je     0x41bf28
  41beb4:	test   rdx,rdx
  41beb7:	mov    eax,0x1
  41bebc:	je     0x41be73
  41bebe:	mov    ecx,0x8
  41bec3:	call   rdx
  41bec5:	xor    eax,eax
  41bec7:	add    rsp,0x28
  41becb:	ret    
  41becc:	nop    DWORD PTR [rax+0x0]
  41bed0:	cmp    eax,0xc0000095
  41bed5:	je     0x41bf40
  41bed7:	cmp    eax,0xc0000096
  41bedc:	jne    0x41bf1e
  41bede:	xor    edx,edx
  41bee0:	mov    ecx,0x4
  41bee5:	call   0x421dc8
  41beea:	cmp    rax,0x1
  41beee:	je     0x41bf8a
  41bef4:	test   rax,rax
  41bef7:	je     0x41bf80
  41befd:	mov    ecx,0x4
  41bf02:	call   rax
  41bf04:	xor    eax,eax
  41bf06:	jmp    0x41be73
  41bf0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf10:	cmp    eax,0xc000001d
  41bf15:	je     0x41bede
  41bf17:	cmp    eax,0xc000008c
  41bf1c:	je     0x41bf40
  41bf1e:	mov    eax,0x1
  41bf23:	add    rsp,0x28
  41bf27:	ret    
  41bf28:	mov    edx,0x1
  41bf2d:	mov    ecx,0x8
  41bf32:	call   0x421dc8
  41bf37:	call   0x41b900
  41bf3c:	nop    DWORD PTR [rax+0x0]
  41bf40:	xor    eax,eax
  41bf42:	add    rsp,0x28
  41bf46:	ret    
  41bf47:	nop    WORD PTR [rax+rax*1+0x0]
  41bf50:	xor    edx,edx
  41bf52:	mov    ecx,0x8
  41bf57:	call   0x421dc8
  41bf5c:	cmp    rax,0x1
  41bf60:	mov    rdx,rax
  41bf63:	jne    0x41beb4
  41bf69:	mov    edx,0x1
  41bf6e:	mov    ecx,0x8
  41bf73:	call   0x421dc8
  41bf78:	xor    eax,eax
  41bf7a:	jmp    0x41be73
  41bf7f:	nop
  41bf80:	mov    eax,0x4
  41bf85:	add    rsp,0x28
  41bf89:	ret    
  41bf8a:	mov    edx,0x1
  41bf8f:	mov    ecx,0x4
  41bf94:	call   0x421dc8
  41bf99:	xor    eax,eax
  41bf9b:	jmp    0x41be73
  41bfa0:	mov    edx,0x1
  41bfa5:	mov    ecx,0xb
  41bfaa:	call   0x421dc8
  41bfaf:	xor    eax,eax
  41bfb1:	jmp    0x41be73
  41bfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bfc0:	push   r12
  41bfc2:	push   rbp
  41bfc3:	push   rdi
  41bfc4:	push   rsi
  41bfc5:	push   rbx
  41bfc6:	sub    rsp,0x20
  41bfca:	call   0x41c730
  41bfcf:	mov    rbp,rax
  41bfd2:	mov    eax,DWORD PTR [rip+0x1a330]        # 0x436308
  41bfd8:	test   eax,eax
  41bfda:	jne    0x41c001
  41bfdc:	test   rbp,rbp
  41bfdf:	je     0x41c001
  41bfe1:	lea    rcx,[rip+0x10f18]        # 0x42cf00
  41bfe8:	mov    DWORD PTR [rip+0x1a316],0x1        # 0x436308
  41bff2:	call   0x41c570
  41bff7:	test   rax,rax
  41bffa:	je     0x41c010
  41bffc:	mov    eax,0x1
  41c001:	add    rsp,0x20
  41c005:	pop    rbx
  41c006:	pop    rsi
  41c007:	pop    rdi
  41c008:	pop    rbp
  41c009:	pop    r12
  41c00b:	ret    
  41c00c:	nop    DWORD PTR [rax+0x0]
  41c010:	lea    rbx,[rip+0x1a429]        # 0x436440
  41c017:	mov    ecx,0x30
  41c01c:	lea    rdx,[rip+0x1a31d]        # 0x436340
  41c023:	lea    r12,[rip+0xfffffffffffffde6]        # 0x41be10
  41c02a:	xor    esi,esi
  41c02c:	mov    rdi,rbx
  41c02f:	rep stos QWORD PTR es:[rdi],rax
  41c032:	mov    rdi,rdx
  41c035:	sub    r12,rbp
  41c038:	mov    cl,0x20
  41c03a:	rep stos QWORD PTR es:[rdi],rax
  41c03d:	mov    rdi,rdx
  41c040:	jmp    0x41c070
  41c042:	mov    BYTE PTR [rdi],0x9
  41c045:	mov    DWORD PTR [rdi+0x4],r12d
  41c049:	add    rsi,0x1
  41c04d:	mov    edx,DWORD PTR [rax+0xc]
  41c050:	add    rbx,0xc
  41c054:	mov    DWORD PTR [rbx-0xc],edx
  41c057:	add    edx,DWORD PTR [rax+0x8]
  41c05a:	mov    rax,rdi
  41c05d:	sub    rax,rbp
  41c060:	add    rdi,0x8
  41c064:	mov    DWORD PTR [rbx-0x4],eax
  41c067:	mov    DWORD PTR [rbx-0x8],edx
  41c06a:	cmp    rsi,0x20
  41c06e:	je     0x41c0a5
  41c070:	mov    rcx,rsi
  41c073:	call   0x41c6a0
  41c078:	test   rax,rax
  41c07b:	jne    0x41c042
  41c07d:	test   rsi,rsi
  41c080:	je     0x41bffc
  41c086:	mov    edx,esi
  41c088:	nop    DWORD PTR [rax+rax*1+0x0]
  41c090:	mov    r8,rbp
  41c093:	lea    rcx,[rip+0x1a3a6]        # 0x436440
  41c09a:	call   QWORD PTR [rip+0x1ce3c]        # 0x438edc
  41c0a0:	jmp    0x41bffc
  41c0a5:	mov    edx,0x20
  41c0aa:	jmp    0x41c090
  41c0ac:	nop    DWORD PTR [rax+0x0]
  41c0b0:	push   rbx
  41c0b1:	sub    rsp,0x20
  41c0b5:	mov    rdx,QWORD PTR [rcx]
  41c0b8:	mov    eax,DWORD PTR [rdx]
  41c0ba:	mov    r8d,eax
  41c0bd:	and    r8d,0x20ffffff
  41c0c4:	cmp    r8d,0x20474343
  41c0cb:	je     0x41c1d0
  41c0d1:	cmp    eax,0xc0000091
  41c0d6:	mov    rbx,rcx
  41c0d9:	ja     0x41c160
  41c0df:	cmp    eax,0xc000008d
  41c0e4:	jae    0x41c177
  41c0ea:	cmp    eax,0xc0000008
  41c0ef:	je     0x41c123
  41c0f1:	ja     0x41c130
  41c0f3:	cmp    eax,0x80000002
  41c0f8:	je     0x41c123
  41c0fa:	cmp    eax,0xc0000005
  41c0ff:	jne    0x41c142
  41c101:	xor    edx,edx
  41c103:	mov    ecx,0xb
  41c108:	call   0x421dc8
  41c10d:	cmp    rax,0x1
  41c111:	je     0x41c240
  41c117:	test   rax,rax
  41c11a:	je     0x41c142
  41c11c:	mov    ecx,0xb
  41c121:	call   rax
  41c123:	mov    eax,0xffffffff
  41c128:	add    rsp,0x20
  41c12c:	pop    rbx
  41c12d:	ret    
  41c12e:	xchg   ax,ax
  41c130:	cmp    eax,0xc000001d
  41c135:	je     0x41c1f6
  41c13b:	cmp    eax,0xc000008c
  41c140:	je     0x41c123
  41c142:	mov    rax,QWORD PTR [rip+0x1a1b7]        # 0x436300
  41c149:	test   rax,rax
  41c14c:	je     0x41c128
  41c14e:	mov    rcx,rbx
  41c151:	add    rsp,0x20
  41c155:	pop    rbx
  41c156:	rex.W jmp rax
  41c159:	nop    DWORD PTR [rax+0x0]
  41c160:	cmp    eax,0xc0000094
  41c165:	je     0x41c1a2
  41c167:	ja     0x41c1e0
  41c169:	cmp    eax,0xc0000092
  41c16e:	je     0x41c123
  41c170:	cmp    eax,0xc0000093
  41c175:	jne    0x41c142
  41c177:	xor    edx,edx
  41c179:	mov    ecx,0x8
  41c17e:	call   0x421dc8
  41c183:	cmp    rax,0x1
  41c187:	jne    0x41c1b4
  41c189:	mov    edx,0x1
  41c18e:	mov    ecx,0x8
  41c193:	call   0x421dc8
  41c198:	call   0x41b900
  41c19d:	jmp    0x41c123
  41c1a2:	xor    edx,edx
  41c1a4:	mov    ecx,0x8
  41c1a9:	call   0x421dc8
  41c1ae:	cmp    rax,0x1
  41c1b2:	je     0x41c222
  41c1b4:	test   rax,rax
  41c1b7:	je     0x41c142
  41c1b9:	mov    ecx,0x8
  41c1be:	call   rax
  41c1c0:	mov    eax,0xffffffff
  41c1c5:	jmp    0x41c128
  41c1ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c1d0:	test   BYTE PTR [rdx+0x4],0x1
  41c1d4:	jne    0x41c0d1
  41c1da:	jmp    0x41c123
  41c1df:	nop
  41c1e0:	cmp    eax,0xc0000095
  41c1e5:	je     0x41c123
  41c1eb:	cmp    eax,0xc0000096
  41c1f0:	jne    0x41c142
  41c1f6:	xor    edx,edx
  41c1f8:	mov    ecx,0x4
  41c1fd:	call   0x421dc8
  41c202:	cmp    rax,0x1
  41c206:	je     0x41c254
  41c208:	test   rax,rax
  41c20b:	je     0x41c142
  41c211:	mov    ecx,0x4
  41c216:	call   rax
  41c218:	mov    eax,0xffffffff
  41c21d:	jmp    0x41c128
  41c222:	mov    edx,0x1
  41c227:	mov    ecx,0x8
  41c22c:	call   0x421dc8
  41c231:	jmp    0x41c123
  41c236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c240:	mov    edx,0x1
  41c245:	mov    ecx,0xb
  41c24a:	call   0x421dc8
  41c24f:	jmp    0x41c123
  41c254:	mov    edx,0x1
  41c259:	mov    ecx,0x4
  41c25e:	call   0x421dc8
  41c263:	jmp    0x41c123
  41c268:	nop
  41c269:	nop
  41c26a:	nop
  41c26b:	nop
  41c26c:	nop
  41c26d:	nop
  41c26e:	nop
  41c26f:	nop
  41c270:	push   rbp
  41c271:	push   rdi
  41c272:	push   rsi
  41c273:	push   rbx
  41c274:	sub    rsp,0x28
  41c278:	lea    rcx,[rip+0x1a361]        # 0x4365e0
  41c27f:	call   QWORD PTR [rip+0x1cb97]        # 0x438e1c
  41c285:	mov    rbx,QWORD PTR [rip+0x1a334]        # 0x4365c0
  41c28c:	test   rbx,rbx
  41c28f:	je     0x41c2c4
  41c291:	mov    rbp,QWORD PTR [rip+0x1cc84]        # 0x438f1c
  41c298:	mov    rdi,QWORD PTR [rip+0x1cbbd]        # 0x438e5c
  41c29f:	nop
  41c2a0:	mov    ecx,DWORD PTR [rbx]
  41c2a2:	call   rbp
  41c2a4:	mov    rsi,rax
  41c2a7:	call   rdi
  41c2a9:	test   eax,eax
  41c2ab:	jne    0x41c2bb
  41c2ad:	test   rsi,rsi
  41c2b0:	je     0x41c2bb
  41c2b2:	mov    rax,QWORD PTR [rbx+0x8]
  41c2b6:	mov    rcx,rsi
  41c2b9:	call   rax
  41c2bb:	mov    rbx,QWORD PTR [rbx+0x10]
  41c2bf:	test   rbx,rbx
  41c2c2:	jne    0x41c2a0
  41c2c4:	mov    rax,QWORD PTR [rip+0x1cbe9]        # 0x438eb4
  41c2cb:	lea    rcx,[rip+0x1a30e]        # 0x4365e0
  41c2d2:	add    rsp,0x28
  41c2d6:	pop    rbx
  41c2d7:	pop    rsi
  41c2d8:	pop    rdi
  41c2d9:	pop    rbp
  41c2da:	rex.W jmp rax
  41c2dd:	nop    DWORD PTR [rax]
  41c2e0:	push   rdi
  41c2e1:	push   rsi
  41c2e2:	push   rbx
  41c2e3:	sub    rsp,0x20
  41c2e7:	mov    eax,DWORD PTR [rip+0x1a2db]        # 0x4365c8
  41c2ed:	test   eax,eax
  41c2ef:	jne    0x41c300
  41c2f1:	add    rsp,0x20
  41c2f5:	pop    rbx
  41c2f6:	pop    rsi
  41c2f7:	pop    rdi
  41c2f8:	ret    
  41c2f9:	nop    DWORD PTR [rax+0x0]
  41c300:	mov    rsi,rdx
  41c303:	mov    edi,ecx
  41c305:	mov    edx,0x18
  41c30a:	mov    ecx,0x1
  41c30f:	call   0x421ea8
  41c314:	test   rax,rax
  41c317:	mov    rbx,rax
  41c31a:	je     0x41c358
  41c31c:	mov    DWORD PTR [rax],edi
  41c31e:	mov    QWORD PTR [rax+0x8],rsi
  41c322:	lea    rcx,[rip+0x1a2b7]        # 0x4365e0
  41c329:	call   QWORD PTR [rip+0x1caed]        # 0x438e1c
  41c32f:	mov    rax,QWORD PTR [rip+0x1a28a]        # 0x4365c0
  41c336:	lea    rcx,[rip+0x1a2a3]        # 0x4365e0
  41c33d:	mov    QWORD PTR [rip+0x1a27c],rbx        # 0x4365c0
  41c344:	mov    QWORD PTR [rbx+0x10],rax
  41c348:	call   QWORD PTR [rip+0x1cb66]        # 0x438eb4
  41c34e:	xor    eax,eax
  41c350:	add    rsp,0x20
  41c354:	pop    rbx
  41c355:	pop    rsi
  41c356:	pop    rdi
  41c357:	ret    
  41c358:	mov    eax,0xffffffff
  41c35d:	jmp    0x41c2f1
  41c35f:	nop
  41c360:	push   rbx
  41c361:	sub    rsp,0x20
  41c365:	mov    eax,DWORD PTR [rip+0x1a25d]        # 0x4365c8
  41c36b:	test   eax,eax
  41c36d:	jne    0x41c380
  41c36f:	xor    eax,eax
  41c371:	add    rsp,0x20
  41c375:	pop    rbx
  41c376:	ret    
  41c377:	nop    WORD PTR [rax+rax*1+0x0]
  41c380:	mov    ebx,ecx
  41c382:	lea    rcx,[rip+0x1a257]        # 0x4365e0
  41c389:	call   QWORD PTR [rip+0x1ca8d]        # 0x438e1c
  41c38f:	mov    rdx,QWORD PTR [rip+0x1a22a]        # 0x4365c0
  41c396:	test   rdx,rdx
  41c399:	je     0x41c3b7
  41c39b:	mov    eax,DWORD PTR [rdx]
  41c39d:	cmp    eax,ebx
  41c39f:	jne    0x41c3ae
  41c3a1:	jmp    0x41c3ef
  41c3a3:	mov    r8d,DWORD PTR [rax]
  41c3a6:	cmp    r8d,ebx
  41c3a9:	je     0x41c3d0
  41c3ab:	mov    rdx,rax
  41c3ae:	mov    rax,QWORD PTR [rdx+0x10]
  41c3b2:	test   rax,rax
  41c3b5:	jne    0x41c3a3
  41c3b7:	lea    rcx,[rip+0x1a222]        # 0x4365e0
  41c3be:	call   QWORD PTR [rip+0x1caf0]        # 0x438eb4
  41c3c4:	xor    eax,eax
  41c3c6:	add    rsp,0x20
  41c3ca:	pop    rbx
  41c3cb:	ret    
  41c3cc:	nop    DWORD PTR [rax+0x0]
  41c3d0:	mov    rcx,rax
  41c3d3:	mov    rax,QWORD PTR [rax+0x10]
  41c3d7:	mov    QWORD PTR [rdx+0x10],rax
  41c3db:	call   0x421e50
  41c3e0:	lea    rcx,[rip+0x1a1f9]        # 0x4365e0
  41c3e7:	call   QWORD PTR [rip+0x1cac7]        # 0x438eb4
  41c3ed:	jmp    0x41c3c4
  41c3ef:	mov    rax,QWORD PTR [rdx+0x10]
  41c3f3:	mov    rcx,rdx
  41c3f6:	mov    QWORD PTR [rip+0x1a1c3],rax        # 0x4365c0
  41c3fd:	jmp    0x41c3db
  41c3ff:	nop
  41c400:	push   rbx
  41c401:	sub    rsp,0x20
  41c405:	cmp    edx,0x1
  41c408:	je     0x41c4a0
  41c40e:	jb     0x41c440
  41c410:	cmp    edx,0x2
  41c413:	je     0x41c430
  41c415:	cmp    edx,0x3
  41c418:	jne    0x41c435
  41c41a:	mov    eax,DWORD PTR [rip+0x1a1a8]        # 0x4365c8
  41c420:	test   eax,eax
  41c422:	je     0x41c435
  41c424:	call   0x41c270
  41c429:	jmp    0x41c435
  41c42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c430:	call   0x41b900
  41c435:	mov    eax,0x1
  41c43a:	add    rsp,0x20
  41c43e:	pop    rbx
  41c43f:	ret    
  41c440:	mov    eax,DWORD PTR [rip+0x1a182]        # 0x4365c8
  41c446:	test   eax,eax
  41c448:	jne    0x41c4d0
  41c44e:	mov    eax,DWORD PTR [rip+0x1a174]        # 0x4365c8
  41c454:	cmp    eax,0x1
  41c457:	jne    0x41c435
  41c459:	mov    rcx,QWORD PTR [rip+0x1a160]        # 0x4365c0
  41c460:	test   rcx,rcx
  41c463:	je     0x41c476
  41c465:	mov    rbx,QWORD PTR [rcx+0x10]
  41c469:	call   0x421e50
  41c46e:	test   rbx,rbx
  41c471:	mov    rcx,rbx
  41c474:	jne    0x41c465
  41c476:	lea    rcx,[rip+0x1a163]        # 0x4365e0
  41c47d:	mov    QWORD PTR [rip+0x1a138],0x0        # 0x4365c0
  41c488:	mov    DWORD PTR [rip+0x1a136],0x0        # 0x4365c8
  41c492:	call   QWORD PTR [rip+0x1c97c]        # 0x438e14
  41c498:	jmp    0x41c435
  41c49a:	nop    WORD PTR [rax+rax*1+0x0]
  41c4a0:	mov    eax,DWORD PTR [rip+0x1a122]        # 0x4365c8
  41c4a6:	test   eax,eax
  41c4a8:	je     0x41c4c0
  41c4aa:	mov    eax,0x1
  41c4af:	mov    DWORD PTR [rip+0x1a10f],0x1        # 0x4365c8
  41c4b9:	add    rsp,0x20
  41c4bd:	pop    rbx
  41c4be:	ret    
  41c4bf:	nop
  41c4c0:	lea    rcx,[rip+0x1a119]        # 0x4365e0
  41c4c7:	call   QWORD PTR [rip+0x1c9d7]        # 0x438ea4
  41c4cd:	jmp    0x41c4aa
  41c4cf:	nop
  41c4d0:	call   0x41c270
  41c4d5:	jmp    0x41c44e
  41c4da:	nop
  41c4db:	nop
  41c4dc:	nop
  41c4dd:	nop
  41c4de:	nop
  41c4df:	nop
  41c4e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c4e4:	add    rcx,rax
  41c4e7:	xor    eax,eax
  41c4e9:	cmp    DWORD PTR [rcx],0x4550
  41c4ef:	je     0x41c4f3
  41c4f1:	repz ret 
  41c4f3:	xor    eax,eax
  41c4f5:	cmp    WORD PTR [rcx+0x18],0x20b
  41c4fb:	sete   al
  41c4fe:	ret    
  41c4ff:	nop
  41c500:	cmp    WORD PTR [rcx],0x5a4d
  41c505:	je     0x41c510
  41c507:	xor    eax,eax
  41c509:	ret    
  41c50a:	nop    WORD PTR [rax+rax*1+0x0]
  41c510:	jmp    0x41c4e0
  41c512:	nop    DWORD PTR [rax+0x0]
  41c516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c520:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c524:	add    rcx,rax
  41c527:	movzx  eax,WORD PTR [rcx+0x14]
  41c52b:	lea    rax,[rcx+rax*1+0x18]
  41c530:	movzx  ecx,WORD PTR [rcx+0x6]
  41c534:	test   ecx,ecx
  41c536:	je     0x41c561
  41c538:	sub    ecx,0x1
  41c53b:	lea    rcx,[rcx+rcx*4]
  41c53f:	lea    r9,[rax+rcx*8+0x28]
  41c544:	mov    r8d,DWORD PTR [rax+0xc]
  41c548:	cmp    r8,rdx
  41c54b:	mov    rcx,r8
  41c54e:	ja     0x41c558
  41c550:	add    ecx,DWORD PTR [rax+0x8]
  41c553:	cmp    rdx,rcx
  41c556:	jb     0x41c563
  41c558:	add    rax,0x28
  41c55c:	cmp    rax,r9
  41c55f:	jne    0x41c544
  41c561:	xor    eax,eax
  41c563:	repz ret 
  41c565:	nop
  41c566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c570:	push   rdi
  41c571:	push   rsi
  41c572:	push   rbx
  41c573:	sub    rsp,0x20
  41c577:	mov    rsi,rcx
  41c57a:	call   0x421d98
  41c57f:	cmp    rax,0x8
  41c583:	ja     0x41c5a0
  41c585:	mov    rbx,QWORD PTR [rip+0x10ee4]        # 0x42d470
  41c58c:	xor    edi,edi
  41c58e:	cmp    WORD PTR [rbx],0x5a4d
  41c593:	je     0x41c5b0
  41c595:	mov    rax,rdi
  41c598:	add    rsp,0x20
  41c59c:	pop    rbx
  41c59d:	pop    rsi
  41c59e:	pop    rdi
  41c59f:	ret    
  41c5a0:	xor    edi,edi
  41c5a2:	mov    rax,rdi
  41c5a5:	add    rsp,0x20
  41c5a9:	pop    rbx
  41c5aa:	pop    rsi
  41c5ab:	pop    rdi
  41c5ac:	ret    
  41c5ad:	nop    DWORD PTR [rax]
  41c5b0:	mov    rcx,rbx
  41c5b3:	call   0x41c4e0
  41c5b8:	test   eax,eax
  41c5ba:	je     0x41c595
  41c5bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  41c5c0:	add    rdx,rbx
  41c5c3:	movzx  eax,WORD PTR [rdx+0x14]
  41c5c7:	lea    rbx,[rdx+rax*1+0x18]
  41c5cc:	movzx  eax,WORD PTR [rdx+0x6]
  41c5d0:	test   eax,eax
  41c5d2:	je     0x41c595
  41c5d4:	sub    eax,0x1
  41c5d7:	lea    rax,[rax+rax*4]
  41c5db:	lea    rdi,[rbx+rax*8+0x28]
  41c5e0:	jmp    0x41c5eb
  41c5e2:	add    rbx,0x28
  41c5e6:	cmp    rbx,rdi
  41c5e9:	je     0x41c5a0
  41c5eb:	mov    r8d,0x8
  41c5f1:	mov    rdx,rsi
  41c5f4:	mov    rcx,rbx
  41c5f7:	call   0x421d90
  41c5fc:	test   eax,eax
  41c5fe:	jne    0x41c5e2
  41c600:	mov    rdi,rbx
  41c603:	mov    rax,rdi
  41c606:	add    rsp,0x20
  41c60a:	pop    rbx
  41c60b:	pop    rsi
  41c60c:	pop    rdi
  41c60d:	ret    
  41c60e:	xchg   ax,ax
  41c610:	push   rsi
  41c611:	push   rbx
  41c612:	sub    rsp,0x28
  41c616:	mov    rbx,QWORD PTR [rip+0x10e53]        # 0x42d470
  41c61d:	cmp    WORD PTR [rbx],0x5a4d
  41c622:	je     0x41c630
  41c624:	xor    eax,eax
  41c626:	add    rsp,0x28
  41c62a:	pop    rbx
  41c62b:	pop    rsi
  41c62c:	ret    
  41c62d:	nop    DWORD PTR [rax]
  41c630:	mov    rsi,rcx
  41c633:	mov    rcx,rbx
  41c636:	call   0x41c4e0
  41c63b:	test   eax,eax
  41c63d:	je     0x41c624
  41c63f:	sub    rsi,rbx
  41c642:	mov    rcx,rbx
  41c645:	mov    rdx,rsi
  41c648:	add    rsp,0x28
  41c64c:	pop    rbx
  41c64d:	pop    rsi
  41c64e:	jmp    0x41c520
  41c653:	nop    DWORD PTR [rax]
  41c656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c660:	push   rbx
  41c661:	sub    rsp,0x20
  41c665:	mov    rbx,QWORD PTR [rip+0x10e04]        # 0x42d470
  41c66c:	xor    eax,eax
  41c66e:	cmp    WORD PTR [rbx],0x5a4d
  41c673:	je     0x41c680
  41c675:	add    rsp,0x20
  41c679:	pop    rbx
  41c67a:	ret    
  41c67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c680:	mov    rcx,rbx
  41c683:	call   0x41c4e0
  41c688:	test   eax,eax
  41c68a:	je     0x41c675
  41c68c:	movsxd rax,DWORD PTR [rbx+0x3c]
  41c690:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  41c695:	add    rsp,0x20
  41c699:	pop    rbx
  41c69a:	ret    
  41c69b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6a0:	push   rdi
  41c6a1:	push   rsi
  41c6a2:	push   rbx
  41c6a3:	sub    rsp,0x20
  41c6a7:	mov    rsi,QWORD PTR [rip+0x10dc2]        # 0x42d470
  41c6ae:	xor    edi,edi
  41c6b0:	mov    rbx,rcx
  41c6b3:	cmp    WORD PTR [rsi],0x5a4d
  41c6b8:	je     0x41c6c5
  41c6ba:	mov    rax,rdi
  41c6bd:	add    rsp,0x20
  41c6c1:	pop    rbx
  41c6c2:	pop    rsi
  41c6c3:	pop    rdi
  41c6c4:	ret    
  41c6c5:	mov    rcx,rsi
  41c6c8:	call   0x41c4e0
  41c6cd:	test   eax,eax
  41c6cf:	je     0x41c6ba
  41c6d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  41c6d5:	add    rsi,rax
  41c6d8:	movzx  eax,WORD PTR [rsi+0x14]
  41c6dc:	lea    rdx,[rsi+rax*1+0x18]
  41c6e1:	movzx  eax,WORD PTR [rsi+0x6]
  41c6e5:	test   eax,eax
  41c6e7:	je     0x41c6ba
  41c6e9:	sub    eax,0x1
  41c6ec:	lea    rax,[rax+rax*4]
  41c6f0:	lea    rax,[rdx+rax*8+0x28]
  41c6f5:	test   BYTE PTR [rdx+0x27],0x20
  41c6f9:	je     0x41c704
  41c6fb:	test   rbx,rbx
  41c6fe:	je     0x41c720
  41c700:	sub    rbx,0x1
  41c704:	add    rdx,0x28
  41c708:	cmp    rdx,rax
  41c70b:	jne    0x41c6f5
  41c70d:	xor    edi,edi
  41c70f:	mov    rax,rdi
  41c712:	add    rsp,0x20
  41c716:	pop    rbx
  41c717:	pop    rsi
  41c718:	pop    rdi
  41c719:	ret    
  41c71a:	nop    WORD PTR [rax+rax*1+0x0]
  41c720:	mov    rdi,rdx
  41c723:	mov    rax,rdi
  41c726:	add    rsp,0x20
  41c72a:	pop    rbx
  41c72b:	pop    rsi
  41c72c:	pop    rdi
  41c72d:	ret    
  41c72e:	xchg   ax,ax
  41c730:	push   rsi
  41c731:	push   rbx
  41c732:	sub    rsp,0x28
  41c736:	mov    rsi,QWORD PTR [rip+0x10d33]        # 0x42d470
  41c73d:	xor    ebx,ebx
  41c73f:	cmp    WORD PTR [rsi],0x5a4d
  41c744:	je     0x41c750
  41c746:	mov    rax,rbx
  41c749:	add    rsp,0x28
  41c74d:	pop    rbx
  41c74e:	pop    rsi
  41c74f:	ret    
  41c750:	mov    rcx,rsi
  41c753:	call   0x41c4e0
  41c758:	test   eax,eax
  41c75a:	cmovne rbx,rsi
  41c75e:	mov    rax,rbx
  41c761:	add    rsp,0x28
  41c765:	pop    rbx
  41c766:	pop    rsi
  41c767:	ret    
  41c768:	nop    DWORD PTR [rax+rax*1+0x0]
  41c770:	push   rsi
  41c771:	push   rbx
  41c772:	sub    rsp,0x28
  41c776:	mov    rbx,QWORD PTR [rip+0x10cf3]        # 0x42d470
  41c77d:	xor    eax,eax
  41c77f:	cmp    WORD PTR [rbx],0x5a4d
  41c784:	je     0x41c790
  41c786:	add    rsp,0x28
  41c78a:	pop    rbx
  41c78b:	pop    rsi
  41c78c:	ret    
  41c78d:	nop    DWORD PTR [rax]
  41c790:	mov    rsi,rcx
  41c793:	mov    rcx,rbx
  41c796:	call   0x41c4e0
  41c79b:	test   eax,eax
  41c79d:	je     0x41c786
  41c79f:	sub    rsi,rbx
  41c7a2:	mov    rcx,rbx
  41c7a5:	mov    rdx,rsi
  41c7a8:	call   0x41c520
  41c7ad:	test   rax,rax
  41c7b0:	je     0x41c7c1
  41c7b2:	mov    eax,DWORD PTR [rax+0x24]
  41c7b5:	not    eax
  41c7b7:	shr    eax,0x1f
  41c7ba:	add    rsp,0x28
  41c7be:	pop    rbx
  41c7bf:	pop    rsi
  41c7c0:	ret    
  41c7c1:	xor    eax,eax
  41c7c3:	jmp    0x41c786
  41c7c5:	nop
  41c7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7d0:	push   rbp
  41c7d1:	push   rdi
  41c7d2:	push   rsi
  41c7d3:	push   rbx
  41c7d4:	sub    rsp,0x28
  41c7d8:	mov    rdi,QWORD PTR [rip+0x10c91]        # 0x42d470
  41c7df:	xor    ebp,ebp
  41c7e1:	mov    esi,ecx
  41c7e3:	cmp    WORD PTR [rdi],0x5a4d
  41c7e8:	je     0x41c800
  41c7ea:	mov    rax,rbp
  41c7ed:	add    rsp,0x28
  41c7f1:	pop    rbx
  41c7f2:	pop    rsi
  41c7f3:	pop    rdi
  41c7f4:	pop    rbp
  41c7f5:	ret    
  41c7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c800:	mov    rcx,rdi
  41c803:	call   0x41c4e0
  41c808:	test   eax,eax
  41c80a:	je     0x41c7ea
  41c80c:	movsxd rax,DWORD PTR [rdi+0x3c]
  41c810:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  41c817:	test   edx,edx
  41c819:	je     0x41c7ea
  41c81b:	mov    ebx,edx
  41c81d:	mov    rcx,rdi
  41c820:	mov    rdx,rbx
  41c823:	call   0x41c520
  41c828:	test   rax,rax
  41c82b:	je     0x41c7ea
  41c82d:	add    rbx,rdi
  41c830:	mov    rdx,rbx
  41c833:	jne    0x41c847
  41c835:	jmp    0x41c7ea
  41c837:	nop    WORD PTR [rax+rax*1+0x0]
  41c840:	sub    esi,0x1
  41c843:	add    rdx,0x14
  41c847:	mov    ecx,DWORD PTR [rdx+0x4]
  41c84a:	test   ecx,ecx
  41c84c:	jne    0x41c855
  41c84e:	mov    eax,DWORD PTR [rdx+0xc]
  41c851:	test   eax,eax
  41c853:	je     0x41c870
  41c855:	test   esi,esi
  41c857:	jg     0x41c840
  41c859:	mov    ebp,DWORD PTR [rdx+0xc]
  41c85c:	add    rbp,rdi
  41c85f:	mov    rax,rbp
  41c862:	add    rsp,0x28
  41c866:	pop    rbx
  41c867:	pop    rsi
  41c868:	pop    rdi
  41c869:	pop    rbp
  41c86a:	ret    
  41c86b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c870:	xor    ebp,ebp
  41c872:	mov    rax,rbp
  41c875:	add    rsp,0x28
  41c879:	pop    rbx
  41c87a:	pop    rsi
  41c87b:	pop    rdi
  41c87c:	pop    rbp
  41c87d:	ret    
  41c87e:	nop
  41c87f:	nop
  41c880:	push   rcx
  41c881:	push   rax
  41c882:	cmp    rax,0x1000
  41c888:	lea    rcx,[rsp+0x18]
  41c88d:	jb     0x41c8a8
  41c88f:	sub    rcx,0x1000
  41c896:	or     QWORD PTR [rcx],0x0
  41c89a:	sub    rax,0x1000
  41c8a0:	cmp    rax,0x1000
  41c8a6:	ja     0x41c88f
  41c8a8:	sub    rcx,rax
  41c8ab:	or     QWORD PTR [rcx],0x0
  41c8af:	pop    rax
  41c8b0:	pop    rcx
  41c8b1:	ret    
  41c8b2:	nop
  41c8b3:	nop
  41c8b4:	nop
  41c8b5:	nop
  41c8b6:	nop
  41c8b7:	nop
  41c8b8:	nop
  41c8b9:	nop
  41c8ba:	nop
  41c8bb:	nop
  41c8bc:	nop
  41c8bd:	nop
  41c8be:	nop
  41c8bf:	nop
  41c8c0:	push   rdi
  41c8c1:	push   rsi
  41c8c2:	push   rbx
  41c8c3:	sub    rsp,0x130
  41c8ca:	mov    rbx,rcx
  41c8cd:	call   0x421f48
  41c8d2:	test   rbx,rbx
  41c8d5:	mov    DWORD PTR [rax],0x0
  41c8db:	je     0x41ca8e
  41c8e1:	cmp    BYTE PTR [rbx],0x0
  41c8e4:	je     0x41ca50
  41c8ea:	mov    rcx,rbx
  41c8ed:	call   QWORD PTR [rip+0x1c559]        # 0x438e4c
  41c8f3:	cmp    eax,0xffffffff
  41c8f6:	je     0x41ca70
  41c8fc:	test   al,0x10
  41c8fe:	je     0x41ca50
  41c904:	lea    rdi,[rsp+0x20]
  41c909:	mov    rdx,rbx
  41c90c:	mov    r8d,0x104
  41c912:	mov    rcx,rdi
  41c915:	mov    rbx,rdi
  41c918:	call   0x421f20
  41c91d:	mov    r8d,DWORD PTR [rbx]
  41c920:	add    rbx,0x4
  41c924:	lea    eax,[r8-0x1010101]
  41c92b:	not    r8d
  41c92e:	and    eax,r8d
  41c931:	and    eax,0x80808080
  41c936:	je     0x41c91d
  41c938:	mov    edx,eax
  41c93a:	shr    edx,0x10
  41c93d:	test   eax,0x8080
  41c942:	cmove  eax,edx
  41c945:	lea    rdx,[rbx+0x2]
  41c949:	cmove  rbx,rdx
  41c94d:	add    al,al
  41c94f:	sbb    rbx,0x3
  41c953:	sub    rbx,rdi
  41c956:	lea    rcx,[rbx+0x24b]
  41c95d:	call   0x421e18
  41c962:	test   rax,rax
  41c965:	mov    rsi,rax
  41c968:	je     0x41ca7f
  41c96e:	lea    r9,[rax+0x244]
  41c975:	lea    r8,[rbx+0x1]
  41c979:	mov    rdx,rdi
  41c97c:	mov    rcx,r9
  41c97f:	call   0x421e08
  41c984:	cmp    BYTE PTR [rsi+0x244],0x0
  41c98b:	mov    r9,rax
  41c98e:	je     0x41c9b0
  41c990:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  41c998:	cmp    al,0x2f
  41c99a:	je     0x41c9b0
  41c99c:	cmp    al,0x5c
  41c99e:	je     0x41c9b0
  41c9a0:	mov    r8d,0x5c
  41c9a6:	mov    WORD PTR [r9+rbx*1],r8w
  41c9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9b0:	mov    rcx,r9
  41c9b3:	mov    eax,DWORD PTR [rcx]
  41c9b5:	add    rcx,0x4
  41c9b9:	lea    edx,[rax-0x1010101]
  41c9bf:	not    eax
  41c9c1:	and    edx,eax
  41c9c3:	and    edx,0x80808080
  41c9c9:	je     0x41c9b3
  41c9cb:	mov    eax,edx
  41c9cd:	shr    eax,0x10
  41c9d0:	test   edx,0x8080
  41c9d6:	cmove  edx,eax
  41c9d9:	lea    rax,[rcx+0x2]
  41c9dd:	cmove  rcx,rax
  41c9e1:	add    dl,dl
  41c9e3:	mov    eax,0x2a
  41c9e8:	sbb    rcx,0x3
  41c9ec:	xor    edx,edx
  41c9ee:	mov    WORD PTR [rcx],ax
  41c9f1:	mov    WORD PTR [rsi+0x12c],dx
  41c9f8:	lea    rdx,[rsi+0x130]
  41c9ff:	xor    ecx,ecx
  41ca01:	xor    eax,eax
  41ca03:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41ca0e:	mov    WORD PTR [rsi+0x12e],cx
  41ca15:	mov    rdi,rdx
  41ca18:	mov    ecx,0x20
  41ca1d:	mov    DWORD PTR [rsi+0x240],0x0
  41ca27:	mov    DWORD PTR [rsi+0x128],0x0
  41ca31:	rep stos QWORD PTR es:[rdi],rax
  41ca34:	mov    rax,rsi
  41ca37:	mov    DWORD PTR [rdi],0x0
  41ca3d:	add    rsp,0x130
  41ca44:	pop    rbx
  41ca45:	pop    rsi
  41ca46:	pop    rdi
  41ca47:	ret    
  41ca48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca50:	call   0x421f48
  41ca55:	mov    DWORD PTR [rax],0x14
  41ca5b:	xor    eax,eax
  41ca5d:	add    rsp,0x130
  41ca64:	pop    rbx
  41ca65:	pop    rsi
  41ca66:	pop    rdi
  41ca67:	ret    
  41ca68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca70:	call   0x421f48
  41ca75:	mov    DWORD PTR [rax],0x2
  41ca7b:	xor    eax,eax
  41ca7d:	jmp    0x41ca3d
  41ca7f:	call   0x421f48
  41ca84:	mov    DWORD PTR [rax],0xc
  41ca8a:	xor    eax,eax
  41ca8c:	jmp    0x41ca3d
  41ca8e:	call   0x421f48
  41ca93:	mov    DWORD PTR [rax],0xe
  41ca99:	xor    eax,eax
  41ca9b:	jmp    0x41ca3d
  41ca9d:	nop    DWORD PTR [rax]
  41caa0:	push   rbp
  41caa1:	push   rdi
  41caa2:	push   rsi
  41caa3:	push   rbx
  41caa4:	sub    rsp,0x158
  41caab:	mov    rbx,rcx
  41caae:	call   0x421f48
  41cab3:	test   rbx,rbx
  41cab6:	mov    DWORD PTR [rax],0x0
  41cabc:	je     0x41ccad
  41cac2:	mov    eax,DWORD PTR [rbx+0x240]
  41cac8:	test   eax,eax
  41caca:	js     0x41cc4f
  41cad0:	lea    rdi,[rsp+0x20]
  41cad5:	je     0x41cb84
  41cadb:	mov    rcx,QWORD PTR [rbx+0x238]
  41cae2:	mov    rdx,rdi
  41cae5:	call   0x421d20
  41caea:	cmp    eax,0xffffffff
  41caed:	mov    ebp,eax
  41caef:	je     0x41cbf5
  41caf5:	mov    eax,DWORD PTR [rsp+0x20]
  41caf9:	lea    rsi,[rbx+0x24]
  41cafd:	lea    rdx,[rdi+0x28]
  41cb01:	mov    r8d,0x104
  41cb07:	mov    rcx,rsi
  41cb0a:	mov    DWORD PTR [rbx],eax
  41cb0c:	mov    rax,QWORD PTR [rsp+0x28]
  41cb11:	mov    QWORD PTR [rbx+0x8],rax
  41cb15:	mov    rax,QWORD PTR [rsp+0x30]
  41cb1a:	mov    QWORD PTR [rbx+0x10],rax
  41cb1e:	mov    rax,QWORD PTR [rsp+0x38]
  41cb23:	mov    QWORD PTR [rbx+0x18],rax
  41cb27:	mov    rax,QWORD PTR [rsp+0x40]
  41cb2c:	mov    DWORD PTR [rbx+0x20],eax
  41cb2f:	call   0x421d88
  41cb34:	test   ebp,ebp
  41cb36:	jne    0x41cc23
  41cb3c:	mov    eax,DWORD PTR [rbx+0x240]
  41cb42:	add    eax,0x1
  41cb45:	test   eax,eax
  41cb47:	mov    DWORD PTR [rbx+0x240],eax
  41cb4d:	jle    0x41cc4f
  41cb53:	mov    rcx,rsi
  41cb56:	call   0x421d98
  41cb5b:	lea    rcx,[rbx+0x130]
  41cb62:	mov    WORD PTR [rbx+0x12e],ax
  41cb69:	mov    rdx,rsi
  41cb6c:	call   0x421db0
  41cb71:	lea    rax,[rbx+0x128]
  41cb78:	add    rsp,0x158
  41cb7f:	pop    rbx
  41cb80:	pop    rsi
  41cb81:	pop    rdi
  41cb82:	pop    rbp
  41cb83:	ret    
  41cb84:	lea    rcx,[rbx+0x244]
  41cb8b:	mov    rdx,rdi
  41cb8e:	call   0x421f30
  41cb93:	cmp    rax,0xffffffffffffffff
  41cb97:	mov    rbp,rax
  41cb9a:	je     0x41cc60
  41cba0:	mov    eax,DWORD PTR [rsp+0x20]
  41cba4:	lea    rsi,[rbx+0x24]
  41cba8:	lea    rdx,[rdi+0x28]
  41cbac:	mov    r8d,0x104
  41cbb2:	mov    rcx,rsi
  41cbb5:	mov    DWORD PTR [rbx],eax
  41cbb7:	mov    rax,QWORD PTR [rsp+0x28]
  41cbbc:	mov    QWORD PTR [rbx+0x8],rax
  41cbc0:	mov    rax,QWORD PTR [rsp+0x30]
  41cbc5:	mov    QWORD PTR [rbx+0x10],rax
  41cbc9:	mov    rax,QWORD PTR [rsp+0x38]
  41cbce:	mov    QWORD PTR [rbx+0x18],rax
  41cbd2:	mov    rax,QWORD PTR [rsp+0x40]
  41cbd7:	mov    DWORD PTR [rbx+0x20],eax
  41cbda:	call   0x421d88
  41cbdf:	mov    QWORD PTR [rbx+0x238],rbp
  41cbe6:	mov    DWORD PTR [rbx+0x240],0x1
  41cbf0:	jmp    0x41cb53
  41cbf5:	lea    rdi,[rbx+0x8]
  41cbf9:	mov    rcx,rbx
  41cbfc:	xor    eax,eax
  41cbfe:	mov    QWORD PTR [rbx],0x0
  41cc05:	mov    QWORD PTR [rbx+0x120],0x0
  41cc10:	and    rdi,0xfffffffffffffff8
  41cc14:	sub    rcx,rdi
  41cc17:	add    ecx,0x128
  41cc1d:	shr    ecx,0x3
  41cc20:	rep stos QWORD PTR es:[rdi],rax
  41cc23:	call   QWORD PTR [rip+0x1c233]        # 0x438e5c
  41cc29:	cmp    eax,0x12
  41cc2c:	je     0x41cca0
  41cc2e:	mov    rcx,QWORD PTR [rbx+0x238]
  41cc35:	call   0x421f38
  41cc3a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41cc45:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41cc4f:	xor    eax,eax
  41cc51:	add    rsp,0x158
  41cc58:	pop    rbx
  41cc59:	pop    rsi
  41cc5a:	pop    rdi
  41cc5b:	pop    rbp
  41cc5c:	ret    
  41cc5d:	nop    DWORD PTR [rax]
  41cc60:	lea    rdi,[rbx+0x8]
  41cc64:	mov    rcx,rbx
  41cc67:	xor    eax,eax
  41cc69:	mov    QWORD PTR [rbx],0x0
  41cc70:	mov    QWORD PTR [rbx+0x120],0x0
  41cc7b:	and    rdi,0xfffffffffffffff8
  41cc7f:	sub    rcx,rdi
  41cc82:	add    ecx,0x128
  41cc88:	shr    ecx,0x3
  41cc8b:	rep stos QWORD PTR es:[rdi],rax
  41cc8e:	mov    QWORD PTR [rbx+0x238],rbp
  41cc95:	mov    DWORD PTR [rbx+0x240],ebp
  41cc9b:	xor    eax,eax
  41cc9d:	jmp    0x41cc51
  41cc9f:	nop
  41cca0:	call   0x421f48
  41cca5:	mov    DWORD PTR [rax],0x0
  41ccab:	jmp    0x41cc2e
  41ccad:	call   0x421f48
  41ccb2:	mov    DWORD PTR [rax],0xe
  41ccb8:	xor    eax,eax
  41ccba:	jmp    0x41cb78
  41ccbf:	nop
  41ccc0:	push   rsi
  41ccc1:	push   rbx
  41ccc2:	sub    rsp,0x28
  41ccc6:	mov    rsi,rcx
  41ccc9:	call   0x421f48
  41ccce:	test   rsi,rsi
  41ccd1:	mov    DWORD PTR [rax],0x0
  41ccd7:	je     0x41cd00
  41ccd9:	mov    rcx,QWORD PTR [rsi+0x238]
  41cce0:	xor    ebx,ebx
  41cce2:	cmp    rcx,0xffffffffffffffff
  41cce6:	je     0x41ccef
  41cce8:	call   0x421f38
  41cced:	mov    ebx,eax
  41ccef:	mov    rcx,rsi
  41ccf2:	call   0x421e50
  41ccf7:	mov    eax,ebx
  41ccf9:	add    rsp,0x28
  41ccfd:	pop    rbx
  41ccfe:	pop    rsi
  41ccff:	ret    
  41cd00:	call   0x421f48
  41cd05:	mov    DWORD PTR [rax],0xe
  41cd0b:	mov    eax,0xffffffff
  41cd10:	jmp    0x41ccf9
  41cd12:	nop    DWORD PTR [rax+0x0]
  41cd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd20:	push   rbx
  41cd21:	sub    rsp,0x20
  41cd25:	mov    rbx,rcx
  41cd28:	call   0x421f48
  41cd2d:	test   rbx,rbx
  41cd30:	mov    DWORD PTR [rax],0x0
  41cd36:	je     0x41cd65
  41cd38:	mov    rcx,QWORD PTR [rbx+0x238]
  41cd3f:	cmp    rcx,0xffffffffffffffff
  41cd43:	je     0x41cd4a
  41cd45:	call   0x421f38
  41cd4a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41cd55:	mov    DWORD PTR [rbx+0x240],0x0
  41cd5f:	add    rsp,0x20
  41cd63:	pop    rbx
  41cd64:	ret    
  41cd65:	call   0x421f48
  41cd6a:	mov    DWORD PTR [rax],0xe
  41cd70:	jmp    0x41cd5f
  41cd72:	nop    DWORD PTR [rax+0x0]
  41cd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd80:	push   rbx
  41cd81:	sub    rsp,0x20
  41cd85:	mov    rbx,rcx
  41cd88:	call   0x421f48
  41cd8d:	test   rbx,rbx
  41cd90:	mov    DWORD PTR [rax],0x0
  41cd96:	je     0x41cda4
  41cd98:	mov    eax,DWORD PTR [rbx+0x240]
  41cd9e:	add    rsp,0x20
  41cda2:	pop    rbx
  41cda3:	ret    
  41cda4:	call   0x421f48
  41cda9:	mov    DWORD PTR [rax],0xe
  41cdaf:	mov    eax,0xffffffff
  41cdb4:	jmp    0x41cd9e
  41cdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdc0:	push   rsi
  41cdc1:	push   rbx
  41cdc2:	sub    rsp,0x28
  41cdc6:	mov    rbx,rcx
  41cdc9:	mov    esi,edx
  41cdcb:	call   0x421f48
  41cdd0:	test   rbx,rbx
  41cdd3:	mov    DWORD PTR [rax],0x0
  41cdd9:	je     0x41ce4d
  41cddb:	cmp    esi,0xffffffff
  41cdde:	jl     0x41ce40
  41cde0:	je     0x41ce10
  41cde2:	mov    rcx,rbx
  41cde5:	call   0x41cd20
  41cdea:	jmp    0x41cdfd
  41cdec:	nop    DWORD PTR [rax+0x0]
  41cdf0:	mov    rcx,rbx
  41cdf3:	call   0x41caa0
  41cdf8:	test   rax,rax
  41cdfb:	je     0x41ce37
  41cdfd:	cmp    esi,DWORD PTR [rbx+0x240]
  41ce03:	jg     0x41cdf0
  41ce05:	add    rsp,0x28
  41ce09:	pop    rbx
  41ce0a:	pop    rsi
  41ce0b:	ret    
  41ce0c:	nop    DWORD PTR [rax+0x0]
  41ce10:	mov    rcx,QWORD PTR [rbx+0x238]
  41ce17:	cmp    rcx,0xffffffffffffffff
  41ce1b:	je     0x41ce22
  41ce1d:	call   0x421f38
  41ce22:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41ce2d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41ce37:	add    rsp,0x28
  41ce3b:	pop    rbx
  41ce3c:	pop    rsi
  41ce3d:	ret    
  41ce3e:	xchg   ax,ax
  41ce40:	call   0x421f48
  41ce45:	mov    DWORD PTR [rax],0x16
  41ce4b:	jmp    0x41ce37
  41ce4d:	call   0x421f48
  41ce52:	mov    DWORD PTR [rax],0xe
  41ce58:	jmp    0x41ce37
  41ce5a:	nop
  41ce5b:	nop
  41ce5c:	nop
  41ce5d:	nop
  41ce5e:	nop
  41ce5f:	nop
  41ce60:	test   rdx,rdx
  41ce63:	mov    r8,rcx
  41ce66:	je     0x41ce92
  41ce68:	cmp    BYTE PTR [rcx],0x0
  41ce6b:	jne    0x41ce75
  41ce6d:	jmp    0x41ce92
  41ce6f:	nop
  41ce70:	cmp    BYTE PTR [rcx],0x0
  41ce73:	je     0x41ce90
  41ce75:	add    rcx,0x1
  41ce79:	mov    rax,rcx
  41ce7c:	sub    rax,r8
  41ce7f:	cmp    rax,rdx
  41ce82:	jb     0x41ce70
  41ce84:	repz ret 
  41ce86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce90:	repz ret 
  41ce92:	xor    eax,eax
  41ce94:	ret    
  41ce95:	nop
  41ce96:	nop
  41ce97:	nop
  41ce98:	nop
  41ce99:	nop
  41ce9a:	nop
  41ce9b:	nop
  41ce9c:	nop
  41ce9d:	nop
  41ce9e:	nop
  41ce9f:	nop
  41cea0:	push   r12
  41cea2:	push   rbp
  41cea3:	push   rdi
  41cea4:	push   rsi
  41cea5:	push   rbx
  41cea6:	sub    rsp,0x250
  41cead:	mov    rbx,rdx
  41ceb0:	mov    rsi,rcx
  41ceb3:	mov    ecx,0x4000
  41ceb8:	mov    r12d,r8d
  41cebb:	call   0x421e18
  41cec0:	test   rbx,rbx
  41cec3:	mov    rbp,rax
  41cec6:	je     0x41cf90
  41cecc:	cmp    WORD PTR [rbx],0x0
  41ced0:	lea    rax,[rip+0x10039]        # 0x42cf10
  41ced7:	cmove  rbx,rax
  41cedb:	test   rsi,rsi
  41cede:	je     0x41cf81
  41cee4:	cmp    WORD PTR [rsi],0x0
  41cee8:	lea    rax,[rip+0x10035]        # 0x42cf24
  41ceef:	cmove  rsi,rax
  41cef3:	lea    rdi,[rsp+0x40]
  41cef8:	xor    ecx,ecx
  41cefa:	mov    r8d,0x104
  41cf00:	mov    rdx,rdi
  41cf03:	call   QWORD PTR [rip+0x1bf5b]        # 0x438e64
  41cf09:	test   eax,eax
  41cf0b:	je     0x41cf70
  41cf0d:	lea    r8,[rip+0x10014]        # 0x42cf28
  41cf14:	mov    QWORD PTR [rsp+0x30],rsi
  41cf19:	mov    DWORD PTR [rsp+0x28],r12d
  41cf1e:	mov    QWORD PTR [rsp+0x20],rbx
  41cf23:	mov    r9,rdi
  41cf26:	mov    edx,0x1fff
  41cf2b:	mov    rcx,rbp
  41cf2e:	call   0x421ed8
  41cf33:	mov    rax,QWORD PTR [rip+0x106d6]        # 0x42d610
  41cf3a:	mov    eax,DWORD PTR [rax]
  41cf3c:	test   eax,eax
  41cf3e:	je     0x41cfb5
  41cf40:	xor    ecx,ecx
  41cf42:	mov    r9d,0x12012
  41cf48:	lea    r8,[rip+0x10071]        # 0x42cfc0
  41cf4f:	mov    rdx,rbp
  41cf52:	call   QWORD PTR [rip+0x1c31c]        # 0x439274
  41cf58:	cmp    eax,0x3
  41cf5b:	je     0x41cfa1
  41cf5d:	cmp    eax,0x5
  41cf60:	jne    0x41cf9c
  41cf62:	add    rsp,0x250
  41cf69:	pop    rbx
  41cf6a:	pop    rsi
  41cf6b:	pop    rdi
  41cf6c:	pop    rbp
  41cf6d:	pop    r12
  41cf6f:	ret    
  41cf70:	lea    rdx,[rip+0xff99]        # 0x42cf10
  41cf77:	mov    rcx,rdi
  41cf7a:	call   0x421d40
  41cf7f:	jmp    0x41cf0d
  41cf81:	lea    rsi,[rip+0xff9c]        # 0x42cf24
  41cf88:	jmp    0x41cef3
  41cf8d:	nop    DWORD PTR [rax]
  41cf90:	lea    rbx,[rip+0xff79]        # 0x42cf10
  41cf97:	jmp    0x41cedb
  41cf9c:	call   0x421eb8
  41cfa1:	mov    ecx,0x16
  41cfa6:	call   0x421de0
  41cfab:	mov    ecx,0x3
  41cfb0:	call   0x421f40
  41cfb5:	call   0x421f88
  41cfba:	lea    rdx,[rip+0xffef]        # 0x42cfb0
  41cfc1:	lea    rcx,[rax+0x60]
  41cfc5:	mov    r8,rbp
  41cfc8:	call   0x421e40
  41cfcd:	call   0x421eb8
  41cfd2:	nop
  41cfd3:	nop    DWORD PTR [rax]
  41cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfe0:	push   rbp
  41cfe1:	push   rdi
  41cfe2:	push   rsi
  41cfe3:	push   rbx
  41cfe4:	sub    rsp,0x38
  41cfe8:	mov    rdi,rdx
  41cfeb:	mov    DWORD PTR [rsp+0x2c],r8d
  41cff0:	mov    rbp,rcx
  41cff3:	call   0x421d98
  41cff8:	lea    rcx,[rax+rax*1+0x2]
  41cffd:	call   0x421e18
  41d002:	mov    rcx,rdi
  41d005:	mov    rsi,rax
  41d008:	call   0x421d98
  41d00d:	lea    rcx,[rax+rax*1+0x2]
  41d012:	call   0x421e18
  41d017:	movzx  r9d,BYTE PTR [rbp+0x0]
  41d01c:	xor    r10d,r10d
  41d01f:	mov    rbx,rax
  41d022:	mov    r8d,DWORD PTR [rsp+0x2c]
  41d027:	test   r9b,r9b
  41d02a:	je     0x41d047
  41d02c:	nop    DWORD PTR [rax+0x0]
  41d030:	mov    WORD PTR [rsi+r10*2],r9w
  41d035:	add    r10,0x1
  41d039:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  41d03f:	test   r9b,r9b
  41d042:	jne    0x41d030
  41d044:	add    r10,r10
  41d047:	movzx  r9d,BYTE PTR [rdi]
  41d04b:	xor    edx,edx
  41d04d:	mov    WORD PTR [rsi+r10*1],dx
  41d052:	xor    r10d,r10d
  41d055:	test   r9b,r9b
  41d058:	je     0x41d076
  41d05a:	nop    WORD PTR [rax+rax*1+0x0]
  41d060:	mov    WORD PTR [rbx+r10*2],r9w
  41d065:	add    r10,0x1
  41d069:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41d06e:	test   r9b,r9b
  41d071:	jne    0x41d060
  41d073:	add    r10,r10
  41d076:	xor    eax,eax
  41d078:	mov    rdx,rbx
  41d07b:	mov    rcx,rsi
  41d07e:	mov    WORD PTR [rbx+r10*1],ax
  41d083:	call   0x41cea0
  41d088:	mov    rcx,rsi
  41d08b:	call   0x421e50
  41d090:	mov    rcx,rbx
  41d093:	add    rsp,0x38
  41d097:	pop    rbx
  41d098:	pop    rsi
  41d099:	pop    rdi
  41d09a:	pop    rbp
  41d09b:	jmp    0x421e50
  41d0a0:	sub    rsp,0x58
  41d0a4:	test   r8d,r8d
  41d0a7:	mov    eax,r8d
  41d0aa:	mov    WORD PTR [rsp+0x68],dx
  41d0af:	jne    0x41d0c4
  41d0b1:	cmp    dx,0xff
  41d0b6:	ja     0x41d10a
  41d0b8:	mov    BYTE PTR [rcx],dl
  41d0ba:	mov    eax,0x1
  41d0bf:	add    rsp,0x58
  41d0c3:	ret    
  41d0c4:	lea    rdx,[rsp+0x4c]
  41d0c9:	mov    DWORD PTR [rsp+0x28],r9d
  41d0ce:	mov    QWORD PTR [rsp+0x20],rcx
  41d0d3:	mov    DWORD PTR [rsp+0x4c],0x0
  41d0db:	mov    QWORD PTR [rsp+0x30],0x0
  41d0e4:	mov    r9d,0x1
  41d0ea:	mov    QWORD PTR [rsp+0x38],rdx
  41d0ef:	lea    r8,[rsp+0x68]
  41d0f4:	xor    edx,edx
  41d0f6:	mov    ecx,eax
  41d0f8:	call   QWORD PTR [rip+0x1be46]        # 0x438f44
  41d0fe:	test   eax,eax
  41d100:	je     0x41d10a
  41d102:	mov    edx,DWORD PTR [rsp+0x4c]
  41d106:	test   edx,edx
  41d108:	je     0x41d0bf
  41d10a:	call   0x421f48
  41d10f:	mov    DWORD PTR [rax],0x2a
  41d115:	mov    eax,0xffffffff
  41d11a:	add    rsp,0x58
  41d11e:	ret    
  41d11f:	nop
  41d120:	push   rdi
  41d121:	push   rsi
  41d122:	push   rbx
  41d123:	sub    rsp,0x30
  41d127:	lea    rax,[rsp+0x20]
  41d12c:	test   rcx,rcx
  41d12f:	mov    rbx,rcx
  41d132:	mov    esi,edx
  41d134:	cmove  rbx,rax
  41d138:	mov    rax,QWORD PTR [rip+0x10351]        # 0x42d490
  41d13f:	mov    rax,QWORD PTR [rax]
  41d142:	mov    edi,DWORD PTR [rax]
  41d144:	call   0x421fa0
  41d149:	movzx  edx,si
  41d14c:	mov    r8d,eax
  41d14f:	mov    rcx,rbx
  41d152:	mov    r9d,edi
  41d155:	call   0x41d0a0
  41d15a:	cdqe   
  41d15c:	add    rsp,0x30
  41d160:	pop    rbx
  41d161:	pop    rsi
  41d162:	pop    rdi
  41d163:	ret    
  41d164:	xchg   ax,ax
  41d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d170:	push   r14
  41d172:	push   r13
  41d174:	push   r12
  41d176:	push   rbp
  41d177:	push   rdi
  41d178:	push   rsi
  41d179:	push   rbx
  41d17a:	sub    rsp,0x30
  41d17e:	mov    r13,rdx
  41d181:	mov    rbx,rcx
  41d184:	mov    rdi,r8
  41d187:	call   0x421fa0
  41d18c:	mov    ebp,eax
  41d18e:	mov    rax,QWORD PTR [rip+0x102fb]        # 0x42d490
  41d195:	mov    r14,QWORD PTR [r13+0x0]
  41d199:	mov    rax,QWORD PTR [rax]
  41d19c:	test   r14,r14
  41d19f:	mov    r12d,DWORD PTR [rax]
  41d1a2:	je     0x41d290
  41d1a8:	xor    esi,esi
  41d1aa:	test   rbx,rbx
  41d1ad:	je     0x41d240
  41d1b3:	test   rdi,rdi
  41d1b6:	jne    0x41d1d8
  41d1b8:	jmp    0x41d204
  41d1ba:	nop    WORD PTR [rax+rax*1+0x0]
  41d1c0:	movsxd r10,eax
  41d1c3:	add    rbx,r10
  41d1c6:	add    rsi,r10
  41d1c9:	cmp    BYTE PTR [rbx-0x1],0x0
  41d1cd:	je     0x41d220
  41d1cf:	add    r14,0x2
  41d1d3:	cmp    rdi,rsi
  41d1d6:	jbe    0x41d204
  41d1d8:	movzx  edx,WORD PTR [r14]
  41d1dc:	mov    r9d,r12d
  41d1df:	mov    r8d,ebp
  41d1e2:	mov    rcx,rbx
  41d1e5:	call   0x41d0a0
  41d1ea:	test   eax,eax
  41d1ec:	jg     0x41d1c0
  41d1ee:	mov    rax,0xffffffffffffffff
  41d1f5:	add    rsp,0x30
  41d1f9:	pop    rbx
  41d1fa:	pop    rsi
  41d1fb:	pop    rdi
  41d1fc:	pop    rbp
  41d1fd:	pop    r12
  41d1ff:	pop    r13
  41d201:	pop    r14
  41d203:	ret    
  41d204:	mov    rax,rsi
  41d207:	mov    QWORD PTR [r13+0x0],r14
  41d20b:	add    rsp,0x30
  41d20f:	pop    rbx
  41d210:	pop    rsi
  41d211:	pop    rdi
  41d212:	pop    rbp
  41d213:	pop    r12
  41d215:	pop    r13
  41d217:	pop    r14
  41d219:	ret    
  41d21a:	nop    WORD PTR [rax+rax*1+0x0]
  41d220:	lea    rax,[rsi-0x1]
  41d224:	mov    QWORD PTR [r13+0x0],0x0
  41d22c:	add    rsp,0x30
  41d230:	pop    rbx
  41d231:	pop    rsi
  41d232:	pop    rdi
  41d233:	pop    rbp
  41d234:	pop    r12
  41d236:	pop    r13
  41d238:	pop    r14
  41d23a:	ret    
  41d23b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d240:	test   rdi,rdi
  41d243:	lea    rbx,[rsp+0x20]
  41d248:	jne    0x41d26b
  41d24a:	jmp    0x41d2a1
  41d24c:	nop    DWORD PTR [rax+0x0]
  41d250:	movsxd rdx,eax
  41d253:	sub    eax,0x1
  41d256:	cdqe   
  41d258:	add    rsi,rdx
  41d25b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  41d260:	je     0x41d2a9
  41d262:	add    r14,0x2
  41d266:	cmp    rdi,rsi
  41d269:	jbe    0x41d2a1
  41d26b:	movzx  edx,WORD PTR [r14]
  41d26f:	mov    r9d,r12d
  41d272:	mov    r8d,ebp
  41d275:	mov    rcx,rbx
  41d278:	call   0x41d0a0
  41d27d:	test   eax,eax
  41d27f:	jg     0x41d250
  41d281:	jmp    0x41d1ee
  41d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d290:	xor    eax,eax
  41d292:	add    rsp,0x30
  41d296:	pop    rbx
  41d297:	pop    rsi
  41d298:	pop    rdi
  41d299:	pop    rbp
  41d29a:	pop    r12
  41d29c:	pop    r13
  41d29e:	pop    r14
  41d2a0:	ret    
  41d2a1:	mov    rax,rsi
  41d2a4:	jmp    0x41d1f5
  41d2a9:	lea    rax,[rsi-0x1]
  41d2ad:	jmp    0x41d1f5
  41d2b2:	nop
  41d2b3:	nop
  41d2b4:	nop
  41d2b5:	nop
  41d2b6:	nop
  41d2b7:	nop
  41d2b8:	nop
  41d2b9:	nop
  41d2ba:	nop
  41d2bb:	nop
  41d2bc:	nop
  41d2bd:	nop
  41d2be:	nop
  41d2bf:	nop
  41d2c0:	jmp    0x421ef0
  41d2c5:	nop
  41d2c6:	nop
  41d2c7:	nop
  41d2c8:	nop
  41d2c9:	nop
  41d2ca:	nop
  41d2cb:	nop
  41d2cc:	nop
  41d2cd:	nop
  41d2ce:	nop
  41d2cf:	nop
  41d2d0:	sub    rsp,0x38
  41d2d4:	mov    r9,rdx
  41d2d7:	mov    QWORD PTR [rsp+0x20],r8
  41d2dc:	mov    rdx,rcx
  41d2df:	xor    r8d,r8d
  41d2e2:	mov    ecx,0x6000
  41d2e7:	call   0x41ec00
  41d2ec:	add    rsp,0x38
  41d2f0:	ret    
  41d2f1:	nop
  41d2f2:	nop
  41d2f3:	nop
  41d2f4:	nop
  41d2f5:	nop
  41d2f6:	nop
  41d2f7:	nop
  41d2f8:	nop
  41d2f9:	nop
  41d2fa:	nop
  41d2fb:	nop
  41d2fc:	nop
  41d2fd:	nop
  41d2fe:	nop
  41d2ff:	nop
  41d300:	push   rsi
  41d301:	push   rbx
  41d302:	sub    rsp,0x38
  41d306:	mov    rbx,rcx
  41d309:	mov    rsi,rdx
  41d30c:	call   0x421f88
  41d311:	lea    rdx,[rax+0x30]
  41d315:	mov    QWORD PTR [rsp+0x20],rsi
  41d31a:	mov    r9,rbx
  41d31d:	xor    r8d,r8d
  41d320:	mov    ecx,0x6000
  41d325:	call   0x41ec00
  41d32a:	add    rsp,0x38
  41d32e:	pop    rbx
  41d32f:	pop    rsi
  41d330:	ret    
  41d331:	nop
  41d332:	nop
  41d333:	nop
  41d334:	nop
  41d335:	nop
  41d336:	nop
  41d337:	nop
  41d338:	nop
  41d339:	nop
  41d33a:	nop
  41d33b:	nop
  41d33c:	nop
  41d33d:	nop
  41d33e:	nop
  41d33f:	nop
  41d340:	push   rsi
  41d341:	push   rbx
  41d342:	sub    rsp,0x38
  41d346:	test   rdx,rdx
  41d349:	mov    rsi,rcx
  41d34c:	je     0x41d380
  41d34e:	lea    rbx,[rdx-0x1]
  41d352:	mov    QWORD PTR [rsp+0x20],r9
  41d357:	mov    rdx,rcx
  41d35a:	mov    r9,r8
  41d35d:	xor    ecx,ecx
  41d35f:	mov    r8d,ebx
  41d362:	call   0x41ec00
  41d367:	cmp    eax,ebx
  41d369:	cmovle ebx,eax
  41d36c:	movsxd rbx,ebx
  41d36f:	mov    BYTE PTR [rsi+rbx*1],0x0
  41d373:	add    rsp,0x38
  41d377:	pop    rbx
  41d378:	pop    rsi
  41d379:	ret    
  41d37a:	nop    WORD PTR [rax+rax*1+0x0]
  41d380:	mov    QWORD PTR [rsp+0x20],r9
  41d385:	mov    rdx,rcx
  41d388:	mov    r9,r8
  41d38b:	xor    ecx,ecx
  41d38d:	xor    r8d,r8d
  41d390:	call   0x41ec00
  41d395:	add    rsp,0x38
  41d399:	pop    rbx
  41d39a:	pop    rsi
  41d39b:	ret    
  41d39c:	nop
  41d39d:	nop
  41d39e:	nop
  41d39f:	nop
  41d3a0:	push   rbx
  41d3a1:	sub    rsp,0x30
  41d3a5:	mov    rbx,rcx
  41d3a8:	mov    r9,rdx
  41d3ab:	mov    QWORD PTR [rsp+0x20],r8
  41d3b0:	mov    rdx,rcx
  41d3b3:	xor    r8d,r8d
  41d3b6:	mov    ecx,0x4000
  41d3bb:	call   0x41ec00
  41d3c0:	movsxd rdx,eax
  41d3c3:	mov    BYTE PTR [rbx+rdx*1],0x0
  41d3c7:	add    rsp,0x30
  41d3cb:	pop    rbx
  41d3cc:	ret    
  41d3cd:	nop
  41d3ce:	nop
  41d3cf:	nop
  41d3d0:	sub    rsp,0x58
  41d3d4:	mov    rax,QWORD PTR [rdx]
  41d3d7:	mov    r11,rdx
  41d3da:	mov    edx,DWORD PTR [rdx+0x8]
  41d3dd:	mov    r10,rdx
  41d3e0:	and    r10w,0x7fff
  41d3e6:	jne    0x41d404
  41d3e8:	mov    rdx,rax
  41d3eb:	shr    rdx,0x20
  41d3ef:	or     eax,edx
  41d3f1:	jne    0x41d470
  41d3f3:	mov    DWORD PTR [rsp+0x44],0x0
  41d3fb:	movzx  eax,WORD PTR [r11+0x8]
  41d400:	xor    edx,edx
  41d402:	jmp    0x41d42b
  41d404:	cmp    r10w,0x7fff
  41d40a:	je     0x41d490
  41d410:	movzx  eax,WORD PTR [r11+0x8]
  41d415:	mov    DWORD PTR [rsp+0x44],0x1
  41d41d:	mov    edx,eax
  41d41f:	and    edx,0x7fff
  41d425:	sub    edx,0x403e
  41d42b:	and    eax,0x8000
  41d430:	mov    r10,QWORD PTR [rsp+0x80]
  41d438:	mov    DWORD PTR [r10],eax
  41d43b:	lea    rax,[rsp+0x48]
  41d440:	mov    QWORD PTR [rsp+0x30],r9
  41d445:	mov    DWORD PTR [rsp+0x20],ecx
  41d449:	lea    r9,[rsp+0x44]
  41d44e:	lea    rcx,[rip+0x699b]        # 0x423df0
  41d455:	mov    DWORD PTR [rsp+0x28],r8d
  41d45a:	mov    QWORD PTR [rsp+0x38],rax
  41d45f:	mov    r8,r11
  41d462:	call   0x41f880
  41d467:	add    rsp,0x58
  41d46b:	ret    
  41d46c:	nop    DWORD PTR [rax+0x0]
  41d470:	test   edx,edx
  41d472:	js     0x41d410
  41d474:	mov    DWORD PTR [rsp+0x44],0x2
  41d47c:	movzx  eax,WORD PTR [r11+0x8]
  41d481:	mov    edx,0xffffbfc3
  41d486:	jmp    0x41d42b
  41d488:	nop    DWORD PTR [rax+rax*1+0x0]
  41d490:	mov    rdx,rax
  41d493:	shr    rdx,0x20
  41d497:	and    edx,0x7fffffff
  41d49d:	or     edx,eax
  41d49f:	jne    0x41d4b5
  41d4a1:	mov    DWORD PTR [rsp+0x44],0x3
  41d4a9:	movzx  eax,WORD PTR [r11+0x8]
  41d4ae:	xor    edx,edx
  41d4b0:	jmp    0x41d42b
  41d4b5:	mov    DWORD PTR [rsp+0x44],0x4
  41d4bd:	xor    edx,edx
  41d4bf:	xor    eax,eax
  41d4c1:	jmp    0x41d430
  41d4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4d0:	push   rbx
  41d4d1:	sub    rsp,0x20
  41d4d5:	mov    rbx,rdx
  41d4d8:	mov    edx,DWORD PTR [rdx+0x8]
  41d4db:	test   dh,0x40
  41d4de:	jne    0x41d4e8
  41d4e0:	mov    eax,DWORD PTR [rbx+0x24]
  41d4e3:	cmp    DWORD PTR [rbx+0x28],eax
  41d4e6:	jle    0x41d4fa
  41d4e8:	and    dh,0x20
  41d4eb:	jne    0x41d510
  41d4ed:	movsxd rax,DWORD PTR [rbx+0x24]
  41d4f1:	mov    rdx,QWORD PTR [rbx]
  41d4f4:	mov    BYTE PTR [rdx+rax*1],cl
  41d4f7:	mov    eax,DWORD PTR [rbx+0x24]
  41d4fa:	add    eax,0x1
  41d4fd:	mov    DWORD PTR [rbx+0x24],eax
  41d500:	add    rsp,0x20
  41d504:	pop    rbx
  41d505:	ret    
  41d506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d510:	mov    rdx,QWORD PTR [rbx]
  41d513:	call   0x421e68
  41d518:	mov    eax,DWORD PTR [rbx+0x24]
  41d51b:	add    eax,0x1
  41d51e:	mov    DWORD PTR [rbx+0x24],eax
  41d521:	add    rsp,0x20
  41d525:	pop    rbx
  41d526:	ret    
  41d527:	nop    WORD PTR [rax+rax*1+0x0]
  41d530:	push   r14
  41d532:	push   r13
  41d534:	push   r12
  41d536:	push   rbp
  41d537:	push   rdi
  41d538:	push   rsi
  41d539:	push   rbx
  41d53a:	sub    rsp,0x40
  41d53e:	lea    r14,[rsp+0x2c]
  41d543:	lea    r13,[rsp+0x30]
  41d548:	mov    ebx,edx
  41d54a:	mov    rsi,r8
  41d54d:	xor    edx,edx
  41d54f:	mov    r12,rcx
  41d552:	mov    r8,r14
  41d555:	mov    rcx,r13
  41d558:	call   0x41d120
  41d55d:	mov    ebp,DWORD PTR [rsi+0x10]
  41d560:	cmp    ebp,ebx
  41d562:	jge    0x41d609
  41d568:	test   ebp,ebp
  41d56a:	js     0x41d609
  41d570:	mov    eax,DWORD PTR [rsi+0xc]
  41d573:	cmp    ebp,eax
  41d575:	jge    0x41d616
  41d57b:	sub    eax,ebp
  41d57d:	test   eax,eax
  41d57f:	mov    DWORD PTR [rsi+0xc],eax
  41d582:	jle    0x41d590
  41d584:	test   BYTE PTR [rsi+0x9],0x4
  41d588:	je     0x41d622
  41d58e:	xchg   ax,ax
  41d590:	test   ebp,ebp
  41d592:	jle    0x41d5ed
  41d594:	add    r12,0x2
  41d598:	movzx  edx,WORD PTR [r12-0x2]
  41d59e:	mov    r8,r14
  41d5a1:	mov    rcx,r13
  41d5a4:	call   0x41d120
  41d5a9:	test   eax,eax
  41d5ab:	jle    0x41d5ed
  41d5ad:	sub    eax,0x1
  41d5b0:	mov    rbx,r13
  41d5b3:	lea    rdi,[r13+rax*1+0x1]
  41d5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5c0:	add    rbx,0x1
  41d5c4:	movsx  ecx,BYTE PTR [rbx-0x1]
  41d5c8:	mov    rdx,rsi
  41d5cb:	call   0x41d4d0
  41d5d0:	cmp    rbx,rdi
  41d5d3:	jne    0x41d5c0
  41d5d5:	sub    ebp,0x1
  41d5d8:	jmp    0x41d590
  41d5da:	nop    WORD PTR [rax+rax*1+0x0]
  41d5e0:	mov    rdx,rsi
  41d5e3:	mov    ecx,0x20
  41d5e8:	call   0x41d4d0
  41d5ed:	mov    eax,DWORD PTR [rsi+0xc]
  41d5f0:	lea    edx,[rax-0x1]
  41d5f3:	test   eax,eax
  41d5f5:	mov    DWORD PTR [rsi+0xc],edx
  41d5f8:	jg     0x41d5e0
  41d5fa:	add    rsp,0x40
  41d5fe:	pop    rbx
  41d5ff:	pop    rsi
  41d600:	pop    rdi
  41d601:	pop    rbp
  41d602:	pop    r12
  41d604:	pop    r13
  41d606:	pop    r14
  41d608:	ret    
  41d609:	mov    eax,DWORD PTR [rsi+0xc]
  41d60c:	mov    ebp,ebx
  41d60e:	cmp    ebp,eax
  41d610:	jl     0x41d57b
  41d616:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41d61d:	jmp    0x41d590
  41d622:	sub    eax,0x1
  41d625:	mov    DWORD PTR [rsi+0xc],eax
  41d628:	nop    DWORD PTR [rax+rax*1+0x0]
  41d630:	mov    rdx,rsi
  41d633:	mov    ecx,0x20
  41d638:	call   0x41d4d0
  41d63d:	mov    eax,DWORD PTR [rsi+0xc]
  41d640:	lea    edx,[rax-0x1]
  41d643:	test   eax,eax
  41d645:	mov    DWORD PTR [rsi+0xc],edx
  41d648:	jne    0x41d630
  41d64a:	jmp    0x41d590
  41d64f:	nop
  41d650:	push   rdi
  41d651:	push   rsi
  41d652:	push   rbx
  41d653:	sub    rsp,0x20
  41d657:	mov    edi,DWORD PTR [r8+0x10]
  41d65b:	mov    rsi,rcx
  41d65e:	mov    rbx,r8
  41d661:	cmp    edi,edx
  41d663:	jge    0x41d6e0
  41d665:	test   edi,edi
  41d667:	js     0x41d6e0
  41d669:	mov    eax,DWORD PTR [rbx+0xc]
  41d66c:	cmp    edi,eax
  41d66e:	jge    0x41d6e9
  41d670:	sub    eax,edi
  41d672:	test   eax,eax
  41d674:	mov    DWORD PTR [rbx+0xc],eax
  41d677:	jle    0x41d742
  41d67d:	test   BYTE PTR [rbx+0x9],0x4
  41d681:	jne    0x41d710
  41d687:	sub    eax,0x1
  41d68a:	mov    DWORD PTR [rbx+0xc],eax
  41d68d:	nop    DWORD PTR [rax]
  41d690:	mov    rdx,rbx
  41d693:	mov    ecx,0x20
  41d698:	call   0x41d4d0
  41d69d:	mov    eax,DWORD PTR [rbx+0xc]
  41d6a0:	mov    edx,eax
  41d6a2:	sub    eax,0x1
  41d6a5:	test   edx,edx
  41d6a7:	mov    DWORD PTR [rbx+0xc],eax
  41d6aa:	jne    0x41d690
  41d6ac:	test   edi,edi
  41d6ae:	lea    edx,[rdi-0x1]
  41d6b1:	je     0x41d730
  41d6b3:	lea    rdi,[rsi+rdx*1+0x1]
  41d6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d6c0:	add    rsi,0x1
  41d6c4:	movsx  ecx,BYTE PTR [rsi-0x1]
  41d6c8:	mov    rdx,rbx
  41d6cb:	call   0x41d4d0
  41d6d0:	cmp    rsi,rdi
  41d6d3:	jne    0x41d6c0
  41d6d5:	jmp    0x41d72d
  41d6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d6e0:	mov    eax,DWORD PTR [rbx+0xc]
  41d6e3:	mov    edi,edx
  41d6e5:	cmp    edi,eax
  41d6e7:	jl     0x41d670
  41d6e9:	test   edi,edi
  41d6eb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41d6f2:	lea    edx,[rdi-0x1]
  41d6f5:	jne    0x41d6b3
  41d6f7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41d6fe:	add    rsp,0x20
  41d702:	pop    rbx
  41d703:	pop    rsi
  41d704:	pop    rdi
  41d705:	ret    
  41d706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d710:	test   edi,edi
  41d712:	lea    edx,[rdi-0x1]
  41d715:	jne    0x41d6b3
  41d717:	sub    eax,0x1
  41d71a:	mov    DWORD PTR [rbx+0xc],eax
  41d71d:	nop    DWORD PTR [rax]
  41d720:	mov    rdx,rbx
  41d723:	mov    ecx,0x20
  41d728:	call   0x41d4d0
  41d72d:	mov    eax,DWORD PTR [rbx+0xc]
  41d730:	lea    edx,[rax-0x1]
  41d733:	test   eax,eax
  41d735:	mov    DWORD PTR [rbx+0xc],edx
  41d738:	jg     0x41d720
  41d73a:	add    rsp,0x20
  41d73e:	pop    rbx
  41d73f:	pop    rsi
  41d740:	pop    rdi
  41d741:	ret    
  41d742:	test   edi,edi
  41d744:	lea    edx,[rdi-0x1]
  41d747:	jne    0x41d6b3
  41d74d:	sub    eax,0x1
  41d750:	mov    DWORD PTR [rbx+0xc],eax
  41d753:	jmp    0x41d6fe
  41d755:	nop
  41d756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d760:	sub    rsp,0x38
  41d764:	test   ecx,ecx
  41d766:	mov    DWORD PTR [r8+0x10],0xffffffff
  41d76e:	je     0x41d7b4
  41d770:	lea    rcx,[rsp+0x20]
  41d775:	mov    r11d,DWORD PTR [r8+0x8]
  41d779:	mov    BYTE PTR [rsp+0x20],0x2d
  41d77e:	lea    r10,[rcx+0x1]
  41d782:	and    r11d,0x20
  41d786:	xor    r9d,r9d
  41d789:	movzx  eax,BYTE PTR [rdx+r9*1]
  41d78e:	and    eax,0xffffffdf
  41d791:	or     eax,r11d
  41d794:	mov    BYTE PTR [r10+r9*1],al
  41d798:	add    r9,0x1
  41d79c:	cmp    r9,0x3
  41d7a0:	jne    0x41d789
  41d7a2:	lea    rdx,[r10+0x3]
  41d7a6:	sub    rdx,rcx
  41d7a9:	call   0x41d650
  41d7ae:	nop
  41d7af:	add    rsp,0x38
  41d7b3:	ret    
  41d7b4:	mov    r11d,DWORD PTR [r8+0x8]
  41d7b8:	test   r11d,0x100
  41d7bf:	je     0x41d7d1
  41d7c1:	lea    rcx,[rsp+0x20]
  41d7c6:	mov    BYTE PTR [rsp+0x20],0x2b
  41d7cb:	lea    r10,[rcx+0x1]
  41d7cf:	jmp    0x41d782
  41d7d1:	test   r11b,0x40
  41d7d5:	je     0x41d7f0
  41d7d7:	lea    rcx,[rsp+0x20]
  41d7dc:	mov    BYTE PTR [rsp+0x20],0x20
  41d7e1:	lea    r10,[rcx+0x1]
  41d7e5:	jmp    0x41d782
  41d7e7:	nop    WORD PTR [rax+rax*1+0x0]
  41d7f0:	lea    rcx,[rsp+0x20]
  41d7f5:	mov    r10,rcx
  41d7f8:	jmp    0x41d782
  41d7fa:	nop    WORD PTR [rax+rax*1+0x0]
  41d800:	push   rbp
  41d801:	push   r12
  41d803:	push   rdi
  41d804:	push   rsi
  41d805:	push   rbx
  41d806:	mov    rbp,rsp
  41d809:	sub    rsp,0x30
  41d80d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  41d811:	mov    rsi,rcx
  41d814:	je     0x41d8b0
  41d81a:	movzx  edx,WORD PTR [rcx+0x18]
  41d81e:	test   dx,dx
  41d821:	je     0x41d882
  41d823:	movsxd rax,DWORD PTR [rsi+0x14]
  41d827:	mov    r12,rsp
  41d82a:	add    rax,0xf
  41d82e:	and    rax,0xfffffffffffffff0
  41d832:	call   0x41c880
  41d837:	sub    rsp,rax
  41d83a:	lea    r8,[rbp-0x4]
  41d83e:	mov    DWORD PTR [rbp-0x4],0x0
  41d845:	lea    rbx,[rsp+0x20]
  41d84a:	mov    rcx,rbx
  41d84d:	call   0x41d120
  41d852:	test   eax,eax
  41d854:	jle    0x41d8a0
  41d856:	sub    eax,0x1
  41d859:	lea    rdi,[rbx+rax*1+0x1]
  41d85e:	xchg   ax,ax
  41d860:	add    rbx,0x1
  41d864:	movsx  ecx,BYTE PTR [rbx-0x1]
  41d868:	mov    rdx,rsi
  41d86b:	call   0x41d4d0
  41d870:	cmp    rbx,rdi
  41d873:	jne    0x41d860
  41d875:	mov    rsp,r12
  41d878:	mov    rsp,rbp
  41d87b:	pop    rbx
  41d87c:	pop    rsi
  41d87d:	pop    rdi
  41d87e:	pop    r12
  41d880:	pop    rbp
  41d881:	ret    
  41d882:	mov    rdx,rsi
  41d885:	mov    ecx,0x2e
  41d88a:	call   0x41d4d0
  41d88f:	nop
  41d890:	mov    rsp,rbp
  41d893:	pop    rbx
  41d894:	pop    rsi
  41d895:	pop    rdi
  41d896:	pop    r12
  41d898:	pop    rbp
  41d899:	ret    
  41d89a:	nop    WORD PTR [rax+rax*1+0x0]
  41d8a0:	mov    rdx,rsi
  41d8a3:	mov    ecx,0x2e
  41d8a8:	call   0x41d4d0
  41d8ad:	jmp    0x41d875
  41d8af:	nop
  41d8b0:	mov    DWORD PTR [rbp-0x4],0x0
  41d8b7:	call   0x421e20
  41d8bc:	mov    rdx,QWORD PTR [rax]
  41d8bf:	lea    rcx,[rbp-0x6]
  41d8c3:	lea    r9,[rbp-0x4]
  41d8c7:	mov    r8d,0x10
  41d8cd:	call   0x421ae0
  41d8d2:	test   eax,eax
  41d8d4:	jle    0x41d8e6
  41d8d6:	movzx  edx,WORD PTR [rbp-0x6]
  41d8da:	mov    WORD PTR [rsi+0x18],dx
  41d8de:	mov    DWORD PTR [rsi+0x14],eax
  41d8e1:	jmp    0x41d81e
  41d8e6:	movzx  edx,WORD PTR [rsi+0x18]
  41d8ea:	jmp    0x41d8de
  41d8ec:	nop    DWORD PTR [rax+0x0]
  41d8f0:	push   r12
  41d8f2:	push   rbp
  41d8f3:	push   rdi
  41d8f4:	push   rsi
  41d8f5:	push   rbx
  41d8f6:	sub    rsp,0x20
  41d8fa:	mov    esi,r8d
  41d8fd:	mov    ebp,ecx
  41d8ff:	mov    rdi,rdx
  41d902:	test   esi,esi
  41d904:	mov    rbx,r9
  41d907:	mov    r8d,DWORD PTR [r9+0xc]
  41d90b:	jle    0x41dae2
  41d911:	cmp    esi,r8d
  41d914:	jg     0x41da50
  41d91a:	sub    r8d,esi
  41d91d:	mov    DWORD PTR [r9+0xc],r8d
  41d921:	test   r8d,r8d
  41d924:	js     0x41da50
  41d92a:	mov    eax,DWORD PTR [rbx+0x10]
  41d92d:	cmp    eax,r8d
  41d930:	jge    0x41da50
  41d936:	sub    r8d,eax
  41d939:	test   r8d,r8d
  41d93c:	mov    DWORD PTR [rbx+0xc],r8d
  41d940:	jle    0x41da5d
  41d946:	test   eax,eax
  41d948:	jle    0x41db95
  41d94e:	sub    r8d,0x1
  41d952:	test   esi,esi
  41d954:	mov    DWORD PTR [rbx+0xc],r8d
  41d958:	jle    0x41d964
  41d95a:	test   BYTE PTR [rbx+0x9],0x10
  41d95e:	jne    0x41da6f
  41d964:	test   r8d,r8d
  41d967:	jle    0x41d9ad
  41d969:	test   ebp,ebp
  41d96b:	jne    0x41d97b
  41d96d:	mov    eax,DWORD PTR [rbx+0x8]
  41d970:	test   eax,0x1c0
  41d975:	je     0x41db75
  41d97b:	sub    r8d,0x1
  41d97f:	test   r8d,r8d
  41d982:	mov    DWORD PTR [rbx+0xc],r8d
  41d986:	jle    0x41d9ad
  41d988:	test   DWORD PTR [rbx+0x8],0x600
  41d98f:	jne    0x41d9ad
  41d991:	jmp    0x41d9a0
  41d993:	mov    rdx,rbx
  41d996:	mov    ecx,0x20
  41d99b:	call   0x41d4d0
  41d9a0:	mov    eax,DWORD PTR [rbx+0xc]
  41d9a3:	lea    edx,[rax-0x1]
  41d9a6:	test   eax,eax
  41d9a8:	mov    DWORD PTR [rbx+0xc],edx
  41d9ab:	jg     0x41d993
  41d9ad:	test   ebp,ebp
  41d9af:	jne    0x41dad0
  41d9b5:	mov    eax,DWORD PTR [rbx+0x8]
  41d9b8:	test   ah,0x1
  41d9bb:	jne    0x41db00
  41d9c1:	test   al,0x40
  41d9c3:	jne    0x41db83
  41d9c9:	mov    edx,DWORD PTR [rbx+0xc]
  41d9cc:	test   edx,edx
  41d9ce:	jle    0x41d9e3
  41d9d0:	mov    eax,DWORD PTR [rbx+0x8]
  41d9d3:	and    eax,0x600
  41d9d8:	cmp    eax,0x200
  41d9dd:	je     0x41db12
  41d9e3:	test   esi,esi
  41d9e5:	jle    0x41db42
  41d9eb:	lea    r12,[rbx+0x20]
  41d9ef:	mov    ebp,0x55555556
  41d9f4:	movzx  eax,BYTE PTR [rdi]
  41d9f7:	mov    ecx,0x30
  41d9fc:	test   al,al
  41d9fe:	je     0x41da07
  41da00:	add    rdi,0x1
  41da04:	movsx  ecx,al
  41da07:	mov    rdx,rbx
  41da0a:	call   0x41d4d0
  41da0f:	sub    esi,0x1
  41da12:	je     0x41dc30
  41da18:	test   BYTE PTR [rbx+0x9],0x10
  41da1c:	je     0x41d9f4
  41da1e:	cmp    WORD PTR [rbx+0x20],0x0
  41da23:	je     0x41d9f4
  41da25:	mov    eax,esi
  41da27:	imul   ebp
  41da29:	mov    eax,esi
  41da2b:	sar    eax,0x1f
  41da2e:	sub    edx,eax
  41da30:	lea    eax,[rdx+rdx*2]
  41da33:	cmp    esi,eax
  41da35:	jne    0x41d9f4
  41da37:	mov    r8,rbx
  41da3a:	mov    edx,0x1
  41da3f:	mov    rcx,r12
  41da42:	call   0x41d530
  41da47:	jmp    0x41d9f4
  41da49:	nop    DWORD PTR [rax+0x0]
  41da50:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41da57:	mov    r8d,0xffffffff
  41da5d:	test   esi,esi
  41da5f:	jle    0x41d9ad
  41da65:	test   BYTE PTR [rbx+0x9],0x10
  41da69:	je     0x41d9ad
  41da6f:	cmp    WORD PTR [rbx+0x20],0x0
  41da74:	je     0x41d964
  41da7a:	lea    ecx,[rsi+0x2]
  41da7d:	mov    edx,0x55555556
  41da82:	mov    eax,ecx
  41da84:	sar    ecx,0x1f
  41da87:	imul   edx
  41da89:	sub    edx,ecx
  41da8b:	cmp    edx,0x1
  41da8e:	jle    0x41d964
  41da94:	test   r8d,r8d
  41da97:	jle    0x41d9ad
  41da9d:	mov    eax,r8d
  41daa0:	sub    eax,edx
  41daa2:	add    eax,0x1
  41daa5:	jmp    0x41dab9
  41daa7:	nop    WORD PTR [rax+rax*1+0x0]
  41dab0:	test   r8d,r8d
  41dab3:	je     0x41dc24
  41dab9:	sub    r8d,0x1
  41dabd:	cmp    r8d,eax
  41dac0:	jne    0x41dab0
  41dac2:	mov    DWORD PTR [rbx+0xc],r8d
  41dac6:	jmp    0x41d964
  41dacb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dad0:	mov    rdx,rbx
  41dad3:	mov    ecx,0x2d
  41dad8:	call   0x41d4d0
  41dadd:	jmp    0x41d9c9
  41dae2:	test   r8d,r8d
  41dae5:	jle    0x41d921
  41daeb:	sub    r8d,0x1
  41daef:	mov    DWORD PTR [r9+0xc],r8d
  41daf3:	jmp    0x41d92a
  41daf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41db00:	mov    rdx,rbx
  41db03:	mov    ecx,0x2b
  41db08:	call   0x41d4d0
  41db0d:	jmp    0x41d9c9
  41db12:	sub    edx,0x1
  41db15:	mov    DWORD PTR [rbx+0xc],edx
  41db18:	nop    DWORD PTR [rax+rax*1+0x0]
  41db20:	mov    rdx,rbx
  41db23:	mov    ecx,0x30
  41db28:	call   0x41d4d0
  41db2d:	mov    eax,DWORD PTR [rbx+0xc]
  41db30:	lea    edx,[rax-0x1]
  41db33:	test   eax,eax
  41db35:	mov    DWORD PTR [rbx+0xc],edx
  41db38:	jg     0x41db20
  41db3a:	test   esi,esi
  41db3c:	jg     0x41d9eb
  41db42:	mov    rdx,rbx
  41db45:	mov    ecx,0x30
  41db4a:	call   0x41d4d0
  41db4f:	mov    eax,DWORD PTR [rbx+0x10]
  41db52:	test   eax,eax
  41db54:	jg     0x41dbc2
  41db56:	test   BYTE PTR [rbx+0x9],0x8
  41db5a:	jne    0x41dbc2
  41db5c:	test   esi,esi
  41db5e:	jne    0x41dc06
  41db64:	sub    eax,0x1
  41db67:	mov    DWORD PTR [rbx+0x10],eax
  41db6a:	add    rsp,0x20
  41db6e:	pop    rbx
  41db6f:	pop    rsi
  41db70:	pop    rdi
  41db71:	pop    rbp
  41db72:	pop    r12
  41db74:	ret    
  41db75:	test   ah,0x6
  41db78:	je     0x41d9a0
  41db7e:	jmp    0x41d9b8
  41db83:	mov    rdx,rbx
  41db86:	mov    ecx,0x20
  41db8b:	call   0x41d4d0
  41db90:	jmp    0x41d9c9
  41db95:	mov    eax,DWORD PTR [rbx+0x8]
  41db98:	test   ah,0x8
  41db9b:	jne    0x41d94e
  41dba1:	test   esi,esi
  41dba3:	jle    0x41d969
  41dba9:	test   ah,0x10
  41dbac:	je     0x41d969
  41dbb2:	cmp    WORD PTR [rbx+0x20],0x0
  41dbb7:	jne    0x41da7a
  41dbbd:	jmp    0x41d969
  41dbc2:	mov    rcx,rbx
  41dbc5:	call   0x41d800
  41dbca:	test   esi,esi
  41dbcc:	je     0x41dbeb
  41dbce:	jmp    0x41dc03
  41dbd0:	movzx  eax,BYTE PTR [rdi]
  41dbd3:	mov    ecx,0x30
  41dbd8:	test   al,al
  41dbda:	je     0x41dbe3
  41dbdc:	add    rdi,0x1
  41dbe0:	movsx  ecx,al
  41dbe3:	mov    rdx,rbx
  41dbe6:	call   0x41d4d0
  41dbeb:	mov    eax,DWORD PTR [rbx+0x10]
  41dbee:	lea    edx,[rax-0x1]
  41dbf1:	test   eax,eax
  41dbf3:	mov    DWORD PTR [rbx+0x10],edx
  41dbf6:	jg     0x41dbd0
  41dbf8:	add    rsp,0x20
  41dbfc:	pop    rbx
  41dbfd:	pop    rsi
  41dbfe:	pop    rdi
  41dbff:	pop    rbp
  41dc00:	pop    r12
  41dc02:	ret    
  41dc03:	mov    eax,DWORD PTR [rbx+0x10]
  41dc06:	add    eax,esi
  41dc08:	mov    DWORD PTR [rbx+0x10],eax
  41dc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc10:	mov    rdx,rbx
  41dc13:	mov    ecx,0x30
  41dc18:	call   0x41d4d0
  41dc1d:	add    esi,0x1
  41dc20:	jne    0x41dc10
  41dc22:	jmp    0x41dbeb
  41dc24:	mov    DWORD PTR [rbx+0xc],0x0
  41dc2b:	jmp    0x41d9ad
  41dc30:	mov    eax,DWORD PTR [rbx+0x10]
  41dc33:	test   eax,eax
  41dc35:	jle    0x41dc41
  41dc37:	mov    rcx,rbx
  41dc3a:	call   0x41d800
  41dc3f:	jmp    0x41dbeb
  41dc41:	test   BYTE PTR [rbx+0x9],0x8
  41dc45:	jne    0x41dc37
  41dc47:	jmp    0x41db64
  41dc4c:	nop    DWORD PTR [rax+0x0]
  41dc50:	push   rsi
  41dc51:	push   rbx
  41dc52:	sub    rsp,0x68
  41dc56:	mov    r8d,DWORD PTR [rdx+0x10]
  41dc5a:	fld    TBYTE PTR [rcx]
  41dc5c:	mov    rbx,rdx
  41dc5f:	test   r8d,r8d
  41dc62:	js     0x41dd00
  41dc68:	lea    rdx,[rsp+0x30]
  41dc6d:	lea    r9,[rsp+0x4c]
  41dc72:	mov    ecx,0x3
  41dc77:	fstp   TBYTE PTR [rsp+0x50]
  41dc7b:	mov    rax,QWORD PTR [rsp+0x50]
  41dc80:	mov    QWORD PTR [rsp+0x30],rax
  41dc85:	mov    rax,QWORD PTR [rsp+0x58]
  41dc8a:	mov    QWORD PTR [rsp+0x38],rax
  41dc8f:	lea    rax,[rsp+0x48]
  41dc94:	mov    QWORD PTR [rsp+0x20],rax
  41dc99:	call   0x41d3d0
  41dc9e:	mov    r8d,DWORD PTR [rsp+0x4c]
  41dca3:	mov    rsi,rax
  41dca6:	cmp    r8d,0xffff8000
  41dcad:	je     0x41dd12
  41dcaf:	mov    ecx,DWORD PTR [rsp+0x48]
  41dcb3:	mov    rdx,rax
  41dcb6:	mov    r9,rbx
  41dcb9:	call   0x41d8f0
  41dcbe:	mov    eax,DWORD PTR [rbx+0xc]
  41dcc1:	lea    edx,[rax-0x1]
  41dcc4:	test   eax,eax
  41dcc6:	mov    DWORD PTR [rbx+0xc],edx
  41dcc9:	jle    0x41dcee
  41dccb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcd0:	mov    rdx,rbx
  41dcd3:	mov    ecx,0x20
  41dcd8:	call   0x41d4d0
  41dcdd:	mov    r8d,DWORD PTR [rbx+0xc]
  41dce1:	lea    r9d,[r8-0x1]
  41dce5:	test   r8d,r8d
  41dce8:	mov    DWORD PTR [rbx+0xc],r9d
  41dcec:	jg     0x41dcd0
  41dcee:	mov    rcx,rsi
  41dcf1:	call   0x41f6e0
  41dcf6:	nop
  41dcf7:	add    rsp,0x68
  41dcfb:	pop    rbx
  41dcfc:	pop    rsi
  41dcfd:	ret    
  41dcfe:	xchg   ax,ax
  41dd00:	mov    DWORD PTR [rdx+0x10],0x6
  41dd07:	mov    r8d,0x6
  41dd0d:	jmp    0x41dc68
  41dd12:	mov    ecx,DWORD PTR [rsp+0x48]
  41dd16:	mov    r8,rbx
  41dd19:	mov    rdx,rax
  41dd1c:	call   0x41d760
  41dd21:	mov    rcx,rsi
  41dd24:	call   0x41f6e0
  41dd29:	nop
  41dd2a:	add    rsp,0x68
  41dd2e:	pop    rbx
  41dd2f:	pop    rsi
  41dd30:	ret    
  41dd31:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd40:	push   rbp
  41dd41:	push   r13
  41dd43:	push   r12
  41dd45:	push   rdi
  41dd46:	push   rsi
  41dd47:	push   rbx
  41dd48:	sub    rsp,0x28
  41dd4c:	lea    rbp,[rsp+0x80]
  41dd54:	mov    ebx,DWORD PTR [rdx+0x10]
  41dd57:	mov    r11d,DWORD PTR [rdx+0x8]
  41dd5b:	mov    r8d,0x0
  41dd61:	mov    rsi,rdx
  41dd64:	test   ebx,ebx
  41dd66:	cmovns r8d,ebx
  41dd6a:	add    r8d,0x17
  41dd6e:	test   r11d,0x1000
  41dd75:	je     0x41dd82
  41dd77:	cmp    WORD PTR [rdx+0x20],0x0
  41dd7c:	jne    0x41df72
  41dd82:	movsxd r13,DWORD PTR [rsi+0xc]
  41dd86:	movsxd rax,r8d
  41dd89:	cmp    r8d,r13d
  41dd8c:	cmovl  rax,r13
  41dd90:	add    rax,0x1e
  41dd94:	and    rax,0xfffffffffffffff0
  41dd98:	call   0x41c880
  41dd9d:	sub    rsp,rax
  41dda0:	test   r11b,0x80
  41dda4:	lea    r12,[rsp+0x20]
  41dda9:	je     0x41ddbc
  41ddab:	test   rcx,rcx
  41ddae:	js     0x41e000
  41ddb4:	and    r11b,0x7f
  41ddb8:	mov    DWORD PTR [rsi+0x8],r11d
  41ddbc:	test   rcx,rcx
  41ddbf:	je     0x41e008
  41ddc5:	mov    r10d,r11d
  41ddc8:	mov    r8,r12
  41ddcb:	movabs r9,0xcccccccccccccccd
  41ddd5:	and    r10d,0x1000
  41dddc:	jmp    0x41de13
  41ddde:	xchg   ax,ax
  41dde0:	cmp    r12,rdi
  41dde3:	je     0x41de10
  41dde5:	test   r10d,r10d
  41dde8:	je     0x41de10
  41ddea:	cmp    WORD PTR [rsi+0x20],0x0
  41ddef:	je     0x41de10
  41ddf1:	mov    rax,rdi
  41ddf4:	sub    rax,r12
  41ddf7:	cqo    
  41ddf9:	shr    rdx,0x3e
  41ddfd:	add    rax,rdx
  41de00:	and    eax,0x3
  41de03:	sub    rax,rdx
  41de06:	cmp    rax,0x3
  41de0a:	je     0x41df50
  41de10:	mov    r8,rdi
  41de13:	mov    rax,rcx
  41de16:	lea    rdi,[r8+0x1]
  41de1a:	mul    r9
  41de1d:	shr    rdx,0x3
  41de21:	lea    rax,[rdx+rdx*4]
  41de25:	add    rax,rax
  41de28:	sub    rcx,rax
  41de2b:	add    ecx,0x30
  41de2e:	test   rdx,rdx
  41de31:	mov    BYTE PTR [r8],cl
  41de34:	mov    rcx,rdx
  41de37:	jne    0x41dde0
  41de39:	test   ebx,ebx
  41de3b:	jle    0x41de75
  41de3d:	mov    rax,r12
  41de40:	sub    rax,rdi
  41de43:	add    eax,ebx
  41de45:	test   eax,eax
  41de47:	jle    0x41de75
  41de49:	sub    eax,0x1
  41de4c:	mov    rdx,rax
  41de4f:	lea    rcx,[rdi+rax*1+0x1]
  41de54:	mov    rax,rdi
  41de57:	nop    WORD PTR [rax+rax*1+0x0]
  41de60:	add    rax,0x1
  41de64:	mov    BYTE PTR [rax-0x1],0x30
  41de68:	cmp    rax,rcx
  41de6b:	jne    0x41de60
  41de6d:	movsxd rax,edx
  41de70:	lea    rdi,[rdi+rax*1+0x1]
  41de75:	cmp    r12,rdi
  41de78:	jne    0x41de85
  41de7a:	test   ebx,ebx
  41de7c:	je     0x41de85
  41de7e:	mov    BYTE PTR [rdi],0x30
  41de81:	add    rdi,0x1
  41de85:	test   r13d,r13d
  41de88:	jle    0x41deee
  41de8a:	mov    rax,r12
  41de8d:	sub    rax,rdi
  41de90:	add    r13d,eax
  41de93:	test   r13d,r13d
  41de96:	mov    DWORD PTR [rsi+0xc],r13d
  41de9a:	jle    0x41deee
  41de9c:	test   r11d,0x1c0
  41dea3:	je     0x41dead
  41dea5:	sub    r13d,0x1
  41dea9:	mov    DWORD PTR [rsi+0xc],r13d
  41dead:	test   ebx,ebx
  41deaf:	js     0x41dfb0
  41deb5:	test   r11d,0x400
  41debc:	jne    0x41deee
  41debe:	mov    eax,DWORD PTR [rsi+0xc]
  41dec1:	lea    edx,[rax-0x1]
  41dec4:	test   eax,eax
  41dec6:	mov    DWORD PTR [rsi+0xc],edx
  41dec9:	jle    0x41deee
  41decb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ded0:	mov    rdx,rsi
  41ded3:	mov    ecx,0x20
  41ded8:	call   0x41d4d0
  41dedd:	mov    eax,DWORD PTR [rsi+0xc]
  41dee0:	lea    edx,[rax-0x1]
  41dee3:	test   eax,eax
  41dee5:	mov    DWORD PTR [rsi+0xc],edx
  41dee8:	jg     0x41ded0
  41deea:	mov    r11d,DWORD PTR [rsi+0x8]
  41deee:	test   r11b,0x80
  41def2:	je     0x41df60
  41def4:	lea    rbx,[rdi+0x1]
  41def8:	mov    BYTE PTR [rdi],0x2d
  41defb:	cmp    r12,rbx
  41defe:	jae    0x41df2e
  41df00:	sub    rbx,0x1
  41df04:	movsx  ecx,BYTE PTR [rbx]
  41df07:	mov    rdx,rsi
  41df0a:	call   0x41d4d0
  41df0f:	cmp    rbx,r12
  41df12:	jne    0x41df00
  41df14:	mov    eax,DWORD PTR [rsi+0xc]
  41df17:	lea    edx,[rax-0x1]
  41df1a:	test   eax,eax
  41df1c:	mov    DWORD PTR [rsi+0xc],edx
  41df1f:	jle    0x41df3b
  41df21:	mov    rdx,rsi
  41df24:	mov    ecx,0x20
  41df29:	call   0x41d4d0
  41df2e:	mov    eax,DWORD PTR [rsi+0xc]
  41df31:	lea    edx,[rax-0x1]
  41df34:	test   eax,eax
  41df36:	mov    DWORD PTR [rsi+0xc],edx
  41df39:	jg     0x41df21
  41df3b:	lea    rsp,[rbp-0x58]
  41df3f:	pop    rbx
  41df40:	pop    rsi
  41df41:	pop    rdi
  41df42:	pop    r12
  41df44:	pop    r13
  41df46:	pop    rbp
  41df47:	ret    
  41df48:	nop    DWORD PTR [rax+rax*1+0x0]
  41df50:	lea    rdi,[r8+0x2]
  41df54:	mov    BYTE PTR [r8+0x1],0x2c
  41df59:	jmp    0x41de10
  41df5e:	xchg   ax,ax
  41df60:	test   r11d,0x100
  41df67:	je     0x41df90
  41df69:	lea    rbx,[rdi+0x1]
  41df6d:	mov    BYTE PTR [rdi],0x2b
  41df70:	jmp    0x41defb
  41df72:	mov    eax,r8d
  41df75:	mov    edx,0x55555556
  41df7a:	imul   edx
  41df7c:	mov    eax,r8d
  41df7f:	sar    eax,0x1f
  41df82:	sub    edx,eax
  41df84:	add    r8d,edx
  41df87:	jmp    0x41dd82
  41df8c:	nop    DWORD PTR [rax+0x0]
  41df90:	and    r11d,0x40
  41df94:	mov    rbx,rdi
  41df97:	je     0x41defb
  41df9d:	add    rbx,0x1
  41dfa1:	mov    BYTE PTR [rdi],0x20
  41dfa4:	jmp    0x41defb
  41dfa9:	nop    DWORD PTR [rax+0x0]
  41dfb0:	mov    eax,r11d
  41dfb3:	and    eax,0x600
  41dfb8:	cmp    eax,0x200
  41dfbd:	jne    0x41deb5
  41dfc3:	mov    eax,DWORD PTR [rsi+0xc]
  41dfc6:	lea    ecx,[rax-0x1]
  41dfc9:	test   eax,eax
  41dfcb:	mov    DWORD PTR [rsi+0xc],ecx
  41dfce:	jle    0x41deee
  41dfd4:	lea    rdx,[rdi+rcx*1+0x1]
  41dfd9:	mov    rax,rdi
  41dfdc:	nop    DWORD PTR [rax+0x0]
  41dfe0:	add    rax,0x1
  41dfe4:	mov    BYTE PTR [rax-0x1],0x30
  41dfe8:	cmp    rax,rdx
  41dfeb:	jne    0x41dfe0
  41dfed:	lea    rdi,[rdi+rcx*1+0x1]
  41dff2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41dff9:	jmp    0x41deee
  41dffe:	xchg   ax,ax
  41e000:	neg    rcx
  41e003:	jmp    0x41ddbc
  41e008:	mov    rdi,r12
  41e00b:	jmp    0x41de39
  41e010:	push   rdi
  41e011:	push   rsi
  41e012:	push   rbx
  41e013:	sub    rsp,0x20
  41e017:	mov    rsi,r9
  41e01a:	lea    r9d,[r8-0x1]
  41e01e:	mov    r8d,0x66666667
  41e024:	mov    r10,rdx
  41e027:	mov    eax,r9d
  41e02a:	movsxd rbx,r9d
  41e02d:	sar    r9d,0x1f
  41e031:	imul   r8d
  41e034:	sar    edx,0x2
  41e037:	mov    r8d,edx
  41e03a:	sub    r8d,r9d
  41e03d:	mov    r9d,0x1
  41e043:	je     0x41e06b
  41e045:	mov    r11d,0x66666667
  41e04b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e050:	mov    eax,r8d
  41e053:	sar    r8d,0x1f
  41e057:	add    r9d,0x1
  41e05b:	imul   r11d
  41e05e:	mov    eax,edx
  41e060:	sar    eax,0x2
  41e063:	sub    eax,r8d
  41e066:	mov    r8d,eax
  41e069:	jne    0x41e050
  41e06b:	mov    edi,DWORD PTR [rsi+0x2c]
  41e06e:	mov    eax,DWORD PTR [rsi+0xc]
  41e071:	cmp    r9d,edi
  41e074:	cmovge edi,r9d
  41e078:	lea    edx,[rdi+0x2]
  41e07b:	cmp    eax,edx
  41e07d:	jg     0x41e0d2
  41e07f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41e086:	mov    r9,rsi
  41e089:	mov    rdx,r10
  41e08c:	mov    r8d,0x1
  41e092:	call   0x41d8f0
  41e097:	mov    ecx,DWORD PTR [rsi+0x8]
  41e09a:	mov    eax,DWORD PTR [rsi+0x2c]
  41e09d:	mov    rdx,rsi
  41e0a0:	mov    DWORD PTR [rsi+0x10],eax
  41e0a3:	mov    eax,ecx
  41e0a5:	and    ecx,0x20
  41e0a8:	or     eax,0x1c0
  41e0ad:	or     ecx,0x45
  41e0b0:	mov    DWORD PTR [rsi+0x8],eax
  41e0b3:	call   0x41d4d0
  41e0b8:	lea    r9d,[rdi+0x1]
  41e0bc:	add    DWORD PTR [rsi+0xc],r9d
  41e0c0:	mov    rdx,rsi
  41e0c3:	mov    rcx,rbx
  41e0c6:	add    rsp,0x20
  41e0ca:	pop    rbx
  41e0cb:	pop    rsi
  41e0cc:	pop    rdi
  41e0cd:	jmp    0x41dd40
  41e0d2:	sub    eax,edx
  41e0d4:	mov    DWORD PTR [rsi+0xc],eax
  41e0d7:	jmp    0x41e086
  41e0d9:	nop    DWORD PTR [rax+0x0]
  41e0e0:	push   rsi
  41e0e1:	push   rbx
  41e0e2:	sub    rsp,0x68
  41e0e6:	mov    eax,DWORD PTR [rdx+0x10]
  41e0e9:	fld    TBYTE PTR [rcx]
  41e0eb:	mov    rbx,rdx
  41e0ee:	test   eax,eax
  41e0f0:	lea    r8d,[rax+0x1]
  41e0f4:	js     0x41e160
  41e0f6:	lea    rdx,[rsp+0x30]
  41e0fb:	lea    r9,[rsp+0x4c]
  41e100:	mov    ecx,0x2
  41e105:	fstp   TBYTE PTR [rsp+0x50]
  41e109:	mov    rax,QWORD PTR [rsp+0x50]
  41e10e:	mov    QWORD PTR [rsp+0x30],rax
  41e113:	mov    rax,QWORD PTR [rsp+0x58]
  41e118:	mov    QWORD PTR [rsp+0x38],rax
  41e11d:	lea    rax,[rsp+0x48]
  41e122:	mov    QWORD PTR [rsp+0x20],rax
  41e127:	call   0x41d3d0
  41e12c:	mov    r8d,DWORD PTR [rsp+0x4c]
  41e131:	mov    rsi,rax
  41e134:	cmp    r8d,0xffff8000
  41e13b:	je     0x41e170
  41e13d:	mov    ecx,DWORD PTR [rsp+0x48]
  41e141:	mov    r9,rbx
  41e144:	mov    rdx,rax
  41e147:	call   0x41e010
  41e14c:	mov    rcx,rsi
  41e14f:	call   0x41f6e0
  41e154:	nop
  41e155:	add    rsp,0x68
  41e159:	pop    rbx
  41e15a:	pop    rsi
  41e15b:	ret    
  41e15c:	nop    DWORD PTR [rax+0x0]
  41e160:	mov    DWORD PTR [rdx+0x10],0x6
  41e167:	mov    r8d,0x7
  41e16d:	jmp    0x41e0f6
  41e16f:	nop
  41e170:	mov    ecx,DWORD PTR [rsp+0x48]
  41e174:	mov    r8,rbx
  41e177:	mov    rdx,rax
  41e17a:	call   0x41d760
  41e17f:	mov    rcx,rsi
  41e182:	call   0x41f6e0
  41e187:	nop
  41e188:	add    rsp,0x68
  41e18c:	pop    rbx
  41e18d:	pop    rsi
  41e18e:	ret    
  41e18f:	nop
  41e190:	push   rsi
  41e191:	push   rbx
  41e192:	sub    rsp,0x78
  41e196:	mov    r8d,DWORD PTR [rdx+0x10]
  41e19a:	fld    TBYTE PTR [rcx]
  41e19c:	mov    rbx,rdx
  41e19f:	test   r8d,r8d
  41e1a2:	js     0x41e2e0
  41e1a8:	je     0x41e2c0
  41e1ae:	lea    rdx,[rsp+0x40]
  41e1b3:	lea    r9,[rsp+0x5c]
  41e1b8:	mov    ecx,0x2
  41e1bd:	fstp   TBYTE PTR [rsp+0x60]
  41e1c1:	mov    rax,QWORD PTR [rsp+0x60]
  41e1c6:	mov    QWORD PTR [rsp+0x40],rax
  41e1cb:	mov    rax,QWORD PTR [rsp+0x68]
  41e1d0:	mov    QWORD PTR [rsp+0x48],rax
  41e1d5:	lea    rax,[rsp+0x58]
  41e1da:	mov    QWORD PTR [rsp+0x20],rax
  41e1df:	call   0x41d3d0
  41e1e4:	mov    r8d,DWORD PTR [rsp+0x5c]
  41e1e9:	mov    rsi,rax
  41e1ec:	cmp    r8d,0xffff8000
  41e1f3:	je     0x41e300
  41e1f9:	cmp    r8d,0xfffffffd
  41e1fd:	jl     0x41e280
  41e203:	mov    eax,DWORD PTR [rbx+0x10]
  41e206:	cmp    r8d,eax
  41e209:	jg     0x41e280
  41e20b:	test   BYTE PTR [rbx+0x9],0x8
  41e20f:	jne    0x41e2f2
  41e215:	mov    rcx,rsi
  41e218:	mov    DWORD PTR [rsp+0x3c],r8d
  41e21d:	call   0x421d98
  41e222:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e227:	sub    eax,r8d
  41e22a:	test   eax,eax
  41e22c:	mov    DWORD PTR [rbx+0x10],eax
  41e22f:	js     0x41e311
  41e235:	mov    ecx,DWORD PTR [rsp+0x58]
  41e239:	mov    rdx,rsi
  41e23c:	mov    r9,rbx
  41e23f:	call   0x41d8f0
  41e244:	mov    eax,DWORD PTR [rbx+0xc]
  41e247:	lea    edx,[rax-0x1]
  41e24a:	test   eax,eax
  41e24c:	mov    DWORD PTR [rbx+0xc],edx
  41e24f:	jle    0x41e2ad
  41e251:	mov    rdx,rbx
  41e254:	mov    ecx,0x20
  41e259:	call   0x41d4d0
  41e25e:	mov    r8d,DWORD PTR [rbx+0xc]
  41e262:	lea    r9d,[r8-0x1]
  41e266:	test   r8d,r8d
  41e269:	mov    DWORD PTR [rbx+0xc],r9d
  41e26d:	jg     0x41e251
  41e26f:	mov    rcx,rsi
  41e272:	call   0x41f6e0
  41e277:	nop
  41e278:	add    rsp,0x78
  41e27c:	pop    rbx
  41e27d:	pop    rsi
  41e27e:	ret    
  41e27f:	nop
  41e280:	test   BYTE PTR [rbx+0x9],0x8
  41e284:	jne    0x41e2d2
  41e286:	mov    rcx,rsi
  41e289:	mov    DWORD PTR [rsp+0x3c],r8d
  41e28e:	call   0x421d98
  41e293:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e298:	sub    eax,0x1
  41e29b:	mov    DWORD PTR [rbx+0x10],eax
  41e29e:	mov    ecx,DWORD PTR [rsp+0x58]
  41e2a2:	mov    r9,rbx
  41e2a5:	mov    rdx,rsi
  41e2a8:	call   0x41e010
  41e2ad:	mov    rcx,rsi
  41e2b0:	call   0x41f6e0
  41e2b5:	nop
  41e2b6:	add    rsp,0x78
  41e2ba:	pop    rbx
  41e2bb:	pop    rsi
  41e2bc:	ret    
  41e2bd:	nop    DWORD PTR [rax]
  41e2c0:	mov    DWORD PTR [rdx+0x10],0x1
  41e2c7:	mov    r8d,0x1
  41e2cd:	jmp    0x41e1ae
  41e2d2:	sub    DWORD PTR [rbx+0x10],0x1
  41e2d6:	jmp    0x41e29e
  41e2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2e0:	mov    DWORD PTR [rdx+0x10],0x6
  41e2e7:	mov    r8d,0x6
  41e2ed:	jmp    0x41e1ae
  41e2f2:	sub    eax,r8d
  41e2f5:	mov    DWORD PTR [rbx+0x10],eax
  41e2f8:	jmp    0x41e235
  41e2fd:	nop    DWORD PTR [rax]
  41e300:	mov    ecx,DWORD PTR [rsp+0x58]
  41e304:	mov    r8,rbx
  41e307:	mov    rdx,rax
  41e30a:	call   0x41d760
  41e30f:	jmp    0x41e2ad
  41e311:	mov    edx,DWORD PTR [rbx+0xc]
  41e314:	test   edx,edx
  41e316:	jle    0x41e235
  41e31c:	add    eax,edx
  41e31e:	mov    DWORD PTR [rbx+0xc],eax
  41e321:	jmp    0x41e235
  41e326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e330:	push   rbp
  41e331:	push   r14
  41e333:	push   r13
  41e335:	push   r12
  41e337:	push   rdi
  41e338:	push   rsi
  41e339:	push   rbx
  41e33a:	mov    rbp,rsp
  41e33d:	sub    rsp,0x20
  41e341:	mov    r10d,0x12
  41e347:	mov    eax,0x18
  41e34c:	cmp    ecx,0x6f
  41e34f:	mov    rbx,r8
  41e352:	mov    r8d,DWORD PTR [r8+0x10]
  41e356:	mov    r11d,ecx
  41e359:	setne  cl
  41e35c:	mov    edi,DWORD PTR [rbx+0x8]
  41e35f:	movzx  ecx,cl
  41e362:	cmovne eax,r10d
  41e366:	mov    r10b,0x0
  41e369:	add    ecx,0x3
  41e36c:	test   r8d,r8d
  41e36f:	mov    r9,rdx
  41e372:	cmovns r10d,r8d
  41e376:	add    r10d,eax
  41e379:	test   edi,0x1000
  41e37f:	je     0x41e38c
  41e381:	cmp    WORD PTR [rbx+0x20],0x0
  41e386:	jne    0x41e553
  41e38c:	movsxd r12,DWORD PTR [rbx+0xc]
  41e390:	movsxd rax,r10d
  41e393:	cmp    r10d,r12d
  41e396:	cmovl  rax,r12
  41e39a:	add    rax,0x1e
  41e39e:	and    rax,0xfffffffffffffff0
  41e3a2:	call   0x41c880
  41e3a7:	xor    edx,edx
  41e3a9:	sub    rsp,rax
  41e3ac:	cmp    r11d,0x6f
  41e3b0:	lea    rsi,[rsp+0x20]
  41e3b5:	setne  dl
  41e3b8:	test   r9,r9
  41e3bb:	lea    edx,[rdx*8+0x7]
  41e3c2:	mov    r10,rsi
  41e3c5:	je     0x41e672
  41e3cb:	mov    r13d,r11d
  41e3ce:	and    r13d,0x20
  41e3d2:	jmp    0x41e3e0
  41e3d4:	shr    r9,cl
  41e3d7:	mov    BYTE PTR [r10-0x1],r14b
  41e3db:	test   r9,r9
  41e3de:	je     0x41e405
  41e3e0:	mov    eax,edx
  41e3e2:	add    r10,0x1
  41e3e6:	and    eax,r9d
  41e3e9:	lea    r14d,[rax+0x30]
  41e3ed:	cmp    r14b,0x39
  41e3f1:	jbe    0x41e3d4
  41e3f3:	add    eax,0x37
  41e3f6:	shr    r9,cl
  41e3f9:	or     eax,r13d
  41e3fc:	test   r9,r9
  41e3ff:	mov    BYTE PTR [r10-0x1],al
  41e403:	jne    0x41e3e0
  41e405:	cmp    rsi,r10
  41e408:	je     0x41e672
  41e40e:	test   r8d,r8d
  41e411:	jle    0x41e5d2
  41e417:	mov    rax,rsi
  41e41a:	sub    rax,r10
  41e41d:	add    eax,r8d
  41e420:	test   eax,eax
  41e422:	jle    0x41e5d2
  41e428:	sub    eax,0x1
  41e42b:	mov    rdx,rax
  41e42e:	lea    rcx,[r10+rax*1+0x1]
  41e433:	mov    rax,r10
  41e436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e440:	add    rax,0x1
  41e444:	mov    BYTE PTR [rax-0x1],0x30
  41e448:	cmp    rax,rcx
  41e44b:	jne    0x41e440
  41e44d:	movsxd rax,edx
  41e450:	lea    r10,[r10+rax*1+0x1]
  41e455:	cmp    rsi,r10
  41e458:	jne    0x41e470
  41e45a:	test   r8d,r8d
  41e45d:	je     0x41e470
  41e45f:	mov    BYTE PTR [r10],0x30
  41e463:	add    r10,0x1
  41e467:	nop    WORD PTR [rax+rax*1+0x0]
  41e470:	mov    rax,r10
  41e473:	sub    rax,rsi
  41e476:	cmp    r12d,eax
  41e479:	jle    0x41e5a0
  41e47f:	sub    r12d,eax
  41e482:	test   r12d,r12d
  41e485:	mov    DWORD PTR [rbx+0xc],r12d
  41e489:	jle    0x41e6d7
  41e48f:	cmp    r11d,0x6f
  41e493:	mov    edx,DWORD PTR [rbx+0x8]
  41e496:	je     0x41e660
  41e49c:	test   dh,0x8
  41e49f:	je     0x41e620
  41e4a5:	lea    r13d,[r12-0x2]
  41e4aa:	test   r13d,r13d
  41e4ad:	jle    0x41e4b8
  41e4af:	test   r8d,r8d
  41e4b2:	js     0x41e56d
  41e4b8:	test   r13d,r13d
  41e4bb:	mov    BYTE PTR [r10],r11b
  41e4be:	lea    rdi,[r10+0x2]
  41e4c2:	mov    BYTE PTR [r10+0x1],0x30
  41e4c7:	jle    0x41e5c8
  41e4cd:	and    dh,0x4
  41e4d0:	jne    0x41e5f3
  41e4d6:	lea    r14d,[r13-0x1]
  41e4da:	mov    r12d,r14d
  41e4dd:	nop    DWORD PTR [rax]
  41e4e0:	sub    r12d,0x1
  41e4e4:	mov    rdx,rbx
  41e4e7:	mov    ecx,0x20
  41e4ec:	call   0x41d4d0
  41e4f1:	lea    eax,[r12+0x1]
  41e4f6:	test   eax,eax
  41e4f8:	jg     0x41e4e0
  41e4fa:	test   r14d,r14d
  41e4fd:	lea    r13d,[r14-0x1]
  41e501:	mov    r12d,0x0
  41e507:	cmovns r12d,r14d
  41e50b:	sub    r13d,r12d
  41e50e:	cmp    rsi,rdi
  41e511:	jb     0x41e600
  41e517:	nop    WORD PTR [rax+rax*1+0x0]
  41e520:	test   r13d,r13d
  41e523:	lea    esi,[r13-0x1]
  41e527:	jle    0x41e545
  41e529:	nop    DWORD PTR [rax+0x0]
  41e530:	mov    rdx,rbx
  41e533:	mov    ecx,0x20
  41e538:	sub    esi,0x1
  41e53b:	call   0x41d4d0
  41e540:	cmp    esi,0xffffffff
  41e543:	jne    0x41e530
  41e545:	mov    rsp,rbp
  41e548:	pop    rbx
  41e549:	pop    rsi
  41e54a:	pop    rdi
  41e54b:	pop    r12
  41e54d:	pop    r13
  41e54f:	pop    r14
  41e551:	pop    rbp
  41e552:	ret    
  41e553:	mov    eax,r10d
  41e556:	mov    edx,0x55555556
  41e55b:	imul   edx
  41e55d:	mov    eax,r10d
  41e560:	sar    eax,0x1f
  41e563:	sub    edx,eax
  41e565:	add    r10d,edx
  41e568:	jmp    0x41e38c
  41e56d:	mov    eax,edx
  41e56f:	and    eax,0x600
  41e574:	cmp    eax,0x200
  41e579:	je     0x41e680
  41e57f:	mov    r12d,r13d
  41e582:	test   dh,0x8
  41e585:	mov    r13d,r12d
  41e588:	mov    rdi,r10
  41e58b:	je     0x41e4cd
  41e591:	mov    r13d,r12d
  41e594:	jmp    0x41e4b8
  41e599:	nop    DWORD PTR [rax+0x0]
  41e5a0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41e5a7:	mov    r13d,0xffffffff
  41e5ad:	cmp    r11d,0x6f
  41e5b1:	je     0x41e5c5
  41e5b3:	mov    edx,DWORD PTR [rbx+0x8]
  41e5b6:	mov    eax,edx
  41e5b8:	and    eax,0x800
  41e5bd:	test   eax,eax
  41e5bf:	jne    0x41e4b8
  41e5c5:	mov    rdi,r10
  41e5c8:	cmp    rsi,rdi
  41e5cb:	jb     0x41e600
  41e5cd:	jmp    0x41e545
  41e5d2:	cmp    r11d,0x6f
  41e5d6:	jne    0x41e455
  41e5dc:	test   BYTE PTR [rbx+0x9],0x8
  41e5e0:	je     0x41e455
  41e5e6:	mov    BYTE PTR [r10],0x30
  41e5ea:	add    r10,0x1
  41e5ee:	jmp    0x41e455
  41e5f3:	cmp    rsi,rdi
  41e5f6:	jae    0x41e6df
  41e5fc:	nop    DWORD PTR [rax+0x0]
  41e600:	sub    rdi,0x1
  41e604:	movsx  ecx,BYTE PTR [rdi]
  41e607:	mov    rdx,rbx
  41e60a:	call   0x41d4d0
  41e60f:	cmp    rsi,rdi
  41e612:	jb     0x41e600
  41e614:	jmp    0x41e520
  41e619:	nop    DWORD PTR [rax+0x0]
  41e620:	test   r8d,r8d
  41e623:	jns    0x41e582
  41e629:	mov    eax,edx
  41e62b:	and    eax,0x600
  41e630:	cmp    eax,0x200
  41e635:	je     0x41e6ce
  41e63b:	cmp    r11d,0x6f
  41e63f:	jne    0x41e582
  41e645:	and    dh,0x4
  41e648:	jne    0x41e66a
  41e64a:	lea    r14d,[r12-0x1]
  41e64f:	mov    rdi,r10
  41e652:	jmp    0x41e4da
  41e657:	nop    WORD PTR [rax+rax*1+0x0]
  41e660:	test   r8d,r8d
  41e663:	js     0x41e629
  41e665:	and    dh,0x4
  41e668:	je     0x41e64a
  41e66a:	mov    rdi,r10
  41e66d:	mov    r13d,r12d
  41e670:	jmp    0x41e60f
  41e672:	and    edi,0xfffff7ff
  41e678:	mov    DWORD PTR [rbx+0x8],edi
  41e67b:	jmp    0x41e40e
  41e680:	lea    r8d,[r12-0x3]
  41e685:	mov    r12d,r8d
  41e688:	mov    eax,r12d
  41e68b:	lea    rcx,[r10+rax*1+0x1]
  41e690:	mov    rax,r10
  41e693:	add    rax,0x1
  41e697:	mov    BYTE PTR [rax-0x1],0x30
  41e69b:	cmp    rax,rcx
  41e69e:	jne    0x41e693
  41e6a0:	movsxd rax,r8d
  41e6a3:	cmp    r11d,0x6f
  41e6a7:	lea    r10,[r10+rax*1+0x1]
  41e6ac:	je     0x41e6c0
  41e6ae:	mov    eax,edx
  41e6b0:	mov    r13d,0xffffffff
  41e6b6:	and    eax,0x800
  41e6bb:	jmp    0x41e5bd
  41e6c0:	mov    rdi,r10
  41e6c3:	mov    r13d,0xffffffff
  41e6c9:	jmp    0x41e5c8
  41e6ce:	sub    r12d,0x1
  41e6d2:	mov    r8d,r12d
  41e6d5:	jmp    0x41e688
  41e6d7:	mov    r13d,r12d
  41e6da:	jmp    0x41e5ad
  41e6df:	lea    esi,[r13-0x1]
  41e6e3:	jmp    0x41e530
  41e6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6f0:	push   r13
  41e6f2:	push   r12
  41e6f4:	push   rbp
  41e6f5:	push   rdi
  41e6f6:	push   rsi
  41e6f7:	push   rbx
  41e6f8:	sub    rsp,0x68
  41e6fc:	mov    r9,QWORD PTR [rcx]
  41e6ff:	mov    r10d,DWORD PTR [rcx+0x8]
  41e703:	mov    rbx,rdx
  41e706:	mov    rax,r9
  41e709:	mov    QWORD PTR [rsp+0x30],r9
  41e70e:	mov    DWORD PTR [rsp+0x38],r10d
  41e713:	shr    rax,0x20
  41e717:	mov    r8,r10
  41e71a:	and    eax,0x7fffffff
  41e71f:	or     r9d,eax
  41e722:	lea    eax,[r10+r10*1]
  41e726:	mov    edx,r9d
  41e729:	neg    edx
  41e72b:	and    eax,0xfffe
  41e730:	or     edx,r9d
  41e733:	shr    edx,0x1f
  41e736:	or     edx,eax
  41e738:	mov    eax,0xfffe
  41e73d:	sub    eax,edx
  41e73f:	sar    eax,0x10
  41e742:	test   eax,eax
  41e744:	jne    0x41eb30
  41e74a:	movzx  esi,WORD PTR [rsp+0x38]
  41e74f:	mov    ecx,esi
  41e751:	and    ecx,0x8000
  41e757:	je     0x41e760
  41e759:	or     DWORD PTR [rbx+0x8],0x80
  41e760:	and    r8w,0x7fff
  41e766:	cmp    r8w,0x7fff
  41e76c:	jne    0x41e790
  41e76e:	test   r9d,r9d
  41e771:	jne    0x41e790
  41e773:	lea    rdx,[rip+0xe87a]        # 0x42cff4
  41e77a:	mov    r8,rbx
  41e77d:	call   0x41d760
  41e782:	jmp    0x41eb05
  41e787:	nop    WORD PTR [rax+rax*1+0x0]
  41e790:	and    si,0x7fff
  41e795:	jne    0x41e8c0
  41e79b:	mov    rax,QWORD PTR [rsp+0x30]
  41e7a0:	test   rax,rax
  41e7a3:	jne    0x41eb4f
  41e7a9:	mov    r9d,DWORD PTR [rbx+0x10]
  41e7ad:	cmp    r9d,0xe
  41e7b1:	jbe    0x41ebcc
  41e7b7:	xor    esi,esi
  41e7b9:	mov    r8d,DWORD PTR [rbx+0x8]
  41e7bd:	lea    rbp,[rsp+0x40]
  41e7c2:	test   r9d,r9d
  41e7c5:	jle    0x41ebdc
  41e7cb:	lea    rax,[rbp+0x1]
  41e7cf:	mov    BYTE PTR [rsp+0x40],0x2e
  41e7d4:	mov    r10d,DWORD PTR [rbx+0xc]
  41e7d8:	lea    rdi,[rax+0x1]
  41e7dc:	mov    BYTE PTR [rax],0x30
  41e7df:	mov    r12d,0x2
  41e7e5:	test   r10d,r10d
  41e7e8:	jg     0x41e9ec
  41e7ee:	xchg   ax,ax
  41e7f0:	test   r8b,0x80
  41e7f4:	jne    0x41eab0
  41e7fa:	test   r8d,0x100
  41e801:	jne    0x41eba0
  41e807:	and    r8d,0x40
  41e80b:	jne    0x41ebb2
  41e811:	mov    rdx,rbx
  41e814:	mov    ecx,0x30
  41e819:	call   0x41d4d0
  41e81e:	mov    ecx,DWORD PTR [rbx+0x8]
  41e821:	mov    rdx,rbx
  41e824:	and    ecx,0x20
  41e827:	or     ecx,0x58
  41e82a:	call   0x41d4d0
  41e82f:	mov    eax,DWORD PTR [rbx+0xc]
  41e832:	test   eax,eax
  41e834:	jle    0x41e85c
  41e836:	test   BYTE PTR [rbx+0x9],0x2
  41e83a:	je     0x41e85c
  41e83c:	sub    eax,0x1
  41e83f:	mov    DWORD PTR [rbx+0xc],eax
  41e842:	mov    rdx,rbx
  41e845:	mov    ecx,0x30
  41e84a:	call   0x41d4d0
  41e84f:	mov    eax,DWORD PTR [rbx+0xc]
  41e852:	lea    edx,[rax-0x1]
  41e855:	test   eax,eax
  41e857:	mov    DWORD PTR [rbx+0xc],edx
  41e85a:	jg     0x41e842
  41e85c:	cmp    rdi,rbp
  41e85f:	lea    r13,[rsp+0x2e]
  41e864:	ja     0x41e899
  41e866:	jmp    0x41eacf
  41e86b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e870:	movzx  eax,WORD PTR [rbx+0x20]
  41e874:	test   ax,ax
  41e877:	mov    WORD PTR [rsp+0x2e],ax
  41e87c:	je     0x41e890
  41e87e:	mov    r8,rbx
  41e881:	mov    edx,0x1
  41e886:	mov    rcx,r13
  41e889:	call   0x41d530
  41e88e:	xchg   ax,ax
  41e890:	cmp    rdi,rbp
  41e893:	je     0x41eacf
  41e899:	sub    rdi,0x1
  41e89d:	movsx  ecx,BYTE PTR [rdi]
  41e8a0:	cmp    ecx,0x2e
  41e8a3:	je     0x41eb12
  41e8a9:	cmp    ecx,0x2c
  41e8ac:	je     0x41e870
  41e8ae:	mov    rdx,rbx
  41e8b1:	call   0x41d4d0
  41e8b6:	jmp    0x41e890
  41e8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8c0:	mov    r9d,DWORD PTR [rbx+0x10]
  41e8c4:	sub    si,0x3fff
  41e8c9:	mov    rax,QWORD PTR [rsp+0x30]
  41e8ce:	cmp    r9d,0xe
  41e8d2:	ja     0x41eb7d
  41e8d8:	test   rax,rax
  41e8db:	js     0x41e8e5
  41e8dd:	nop    DWORD PTR [rax]
  41e8e0:	add    rax,rax
  41e8e3:	jns    0x41e8e0
  41e8e5:	mov    ecx,0xe
  41e8ea:	mov    edx,0x4
  41e8ef:	shr    rax,1
  41e8f2:	sub    ecx,r9d
  41e8f5:	shl    ecx,0x2
  41e8f8:	shl    rdx,cl
  41e8fb:	add    rax,rdx
  41e8fe:	js     0x41ebc4
  41e904:	add    rax,rax
  41e907:	mov    ecx,0xf
  41e90c:	sub    ecx,r9d
  41e90f:	shl    ecx,0x2
  41e912:	shr    rax,cl
  41e915:	mov    r8d,DWORD PTR [rbx+0x8]
  41e919:	lea    rbp,[rsp+0x40]
  41e91e:	mov    rdi,rbp
  41e921:	mov    r11d,r8d
  41e924:	mov    r10d,r8d
  41e927:	and    r11d,0x800
  41e92e:	and    r10d,0x20
  41e932:	jmp    0x41e963
  41e934:	mov    ecx,DWORD PTR [rbx+0x10]
  41e937:	test   ecx,ecx
  41e939:	jle    0x41e941
  41e93b:	sub    ecx,0x1
  41e93e:	mov    DWORD PTR [rbx+0x10],ecx
  41e941:	shr    rax,0x4
  41e945:	mov    r9,rdi
  41e948:	test   edx,edx
  41e94a:	je     0x41e9b4
  41e94c:	cmp    edx,0x9
  41e94f:	lea    rdi,[r9+0x1]
  41e953:	jle    0x41e9c7
  41e955:	add    edx,0x37
  41e958:	or     edx,r10d
  41e95b:	mov    BYTE PTR [r9],dl
  41e95e:	test   rax,rax
  41e961:	je     0x41e9d0
  41e963:	mov    edx,eax
  41e965:	and    edx,0xf
  41e968:	cmp    edx,eax
  41e96a:	jne    0x41e934
  41e96c:	cmp    rdi,rbp
  41e96f:	ja     0x41e982
  41e971:	test   r11d,r11d
  41e974:	jne    0x41e982
  41e976:	mov    r12d,DWORD PTR [rbx+0x10]
  41e97a:	mov    r9,rdi
  41e97d:	test   r12d,r12d
  41e980:	jle    0x41e989
  41e982:	lea    r9,[rdi+0x1]
  41e986:	mov    BYTE PTR [rdi],0x2e
  41e989:	cmp    rax,0x1
  41e98d:	jbe    0x41eb99
  41e993:	lea    ecx,[rsi-0x1]
  41e996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9a0:	shr    rax,1
  41e9a3:	mov    esi,ecx
  41e9a5:	cmp    rax,0x1
  41e9a9:	lea    ecx,[rsi-0x1]
  41e9ac:	jne    0x41e9a0
  41e9ae:	xor    al,al
  41e9b0:	test   edx,edx
  41e9b2:	jne    0x41e94c
  41e9b4:	cmp    r9,rbp
  41e9b7:	ja     0x41e9c3
  41e9b9:	mov    ecx,DWORD PTR [rbx+0x10]
  41e9bc:	mov    rdi,r9
  41e9bf:	test   ecx,ecx
  41e9c1:	js     0x41e95e
  41e9c3:	lea    rdi,[r9+0x1]
  41e9c7:	add    edx,0x30
  41e9ca:	jmp    0x41e95b
  41e9cc:	nop    DWORD PTR [rax+0x0]
  41e9d0:	cmp    rdi,rbp
  41e9d3:	je     0x41ebd3
  41e9d9:	mov    r10d,DWORD PTR [rbx+0xc]
  41e9dd:	mov    r12d,0x2
  41e9e3:	test   r10d,r10d
  41e9e6:	jle    0x41e7f0
  41e9ec:	mov    edx,DWORD PTR [rbx+0x10]
  41e9ef:	mov    rax,rdi
  41e9f2:	movsx  r11d,si
  41e9f6:	sub    rax,rbp
  41e9f9:	lea    ecx,[rdx+rax*1]
  41e9fc:	test   edx,edx
  41e9fe:	mov    edx,r8d
  41ea01:	cmovg  eax,ecx
  41ea04:	and    edx,0x1c0
  41ea0a:	mov    ecx,0x66666667
  41ea0f:	cmp    edx,0x1
  41ea12:	sbb    edx,edx
  41ea14:	lea    r9d,[rax+rdx*1+0x6]
  41ea19:	mov    eax,r11d
  41ea1c:	imul   ecx
  41ea1e:	mov    eax,r11d
  41ea21:	sar    eax,0x1f
  41ea24:	mov    ecx,edx
  41ea26:	sar    ecx,0x2
  41ea29:	sub    ecx,eax
  41ea2b:	je     0x41ea50
  41ea2d:	mov    r11d,0x66666667
  41ea33:	mov    eax,ecx
  41ea35:	sar    ecx,0x1f
  41ea38:	add    r9d,0x1
  41ea3c:	imul   r11d
  41ea3f:	add    r12d,0x1
  41ea43:	sar    edx,0x2
  41ea46:	sub    edx,ecx
  41ea48:	mov    ecx,edx
  41ea4a:	jne    0x41ea33
  41ea4c:	movsx  r12d,r12w
  41ea50:	cmp    r10d,r9d
  41ea53:	jle    0x41eb20
  41ea59:	sub    r10d,r9d
  41ea5c:	test   r8d,0x600
  41ea63:	jne    0x41eb90
  41ea69:	lea    eax,[r10-0x1]
  41ea6d:	test   r10d,r10d
  41ea70:	mov    DWORD PTR [rbx+0xc],eax
  41ea73:	jle    0x41e7f0
  41ea79:	nop    DWORD PTR [rax+0x0]
  41ea80:	mov    rdx,rbx
  41ea83:	mov    ecx,0x20
  41ea88:	call   0x41d4d0
  41ea8d:	mov    eax,DWORD PTR [rbx+0xc]
  41ea90:	lea    edx,[rax-0x1]
  41ea93:	test   eax,eax
  41ea95:	mov    DWORD PTR [rbx+0xc],edx
  41ea98:	jg     0x41ea80
  41ea9a:	mov    r8d,DWORD PTR [rbx+0x8]
  41ea9e:	test   r8b,0x80
  41eaa2:	je     0x41e7fa
  41eaa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eab0:	mov    rdx,rbx
  41eab3:	mov    ecx,0x2d
  41eab8:	call   0x41d4d0
  41eabd:	jmp    0x41e811
  41eac2:	mov    rdx,rbx
  41eac5:	mov    ecx,0x30
  41eaca:	call   0x41d4d0
  41eacf:	mov    eax,DWORD PTR [rbx+0x10]
  41ead2:	lea    edx,[rax-0x1]
  41ead5:	test   eax,eax
  41ead7:	mov    DWORD PTR [rbx+0x10],edx
  41eada:	jg     0x41eac2
  41eadc:	mov    ecx,DWORD PTR [rbx+0x8]
  41eadf:	mov    rdx,rbx
  41eae2:	and    ecx,0x20
  41eae5:	or     ecx,0x50
  41eae8:	call   0x41d4d0
  41eaed:	add    DWORD PTR [rbx+0xc],r12d
  41eaf1:	or     DWORD PTR [rbx+0x8],0x1c0
  41eaf8:	movsx  rcx,si
  41eafc:	mov    rdx,rbx
  41eaff:	call   0x41dd40
  41eb04:	nop
  41eb05:	add    rsp,0x68
  41eb09:	pop    rbx
  41eb0a:	pop    rsi
  41eb0b:	pop    rdi
  41eb0c:	pop    rbp
  41eb0d:	pop    r12
  41eb0f:	pop    r13
  41eb11:	ret    
  41eb12:	mov    rcx,rbx
  41eb15:	call   0x41d800
  41eb1a:	jmp    0x41e890
  41eb1f:	nop
  41eb20:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41eb27:	jmp    0x41e7f0
  41eb2c:	nop    DWORD PTR [rax+0x0]
  41eb30:	lea    rdx,[rip+0xe4b9]        # 0x42cff0
  41eb37:	mov    r8,rbx
  41eb3a:	xor    ecx,ecx
  41eb3c:	call   0x41d760
  41eb41:	nop
  41eb42:	add    rsp,0x68
  41eb46:	pop    rbx
  41eb47:	pop    rsi
  41eb48:	pop    rdi
  41eb49:	pop    rbp
  41eb4a:	pop    r12
  41eb4c:	pop    r13
  41eb4e:	ret    
  41eb4f:	js     0x41ebf1
  41eb55:	mov    edx,0xffffc001
  41eb5a:	nop    WORD PTR [rax+rax*1+0x0]
  41eb60:	mov    esi,edx
  41eb62:	sub    edx,0x1
  41eb65:	add    rax,rax
  41eb68:	jns    0x41eb60
  41eb6a:	mov    r9d,DWORD PTR [rbx+0x10]
  41eb6e:	cmp    r9d,0xe
  41eb72:	jbe    0x41e8e5
  41eb78:	jmp    0x41e915
  41eb7d:	test   rax,rax
  41eb80:	jne    0x41e915
  41eb86:	jmp    0x41e7b9
  41eb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb90:	mov    DWORD PTR [rbx+0xc],r10d
  41eb94:	jmp    0x41e7f0
  41eb99:	xor    eax,eax
  41eb9b:	jmp    0x41e948
  41eba0:	mov    rdx,rbx
  41eba3:	mov    ecx,0x2b
  41eba8:	call   0x41d4d0
  41ebad:	jmp    0x41e811
  41ebb2:	mov    rdx,rbx
  41ebb5:	mov    ecx,0x20
  41ebba:	call   0x41d4d0
  41ebbf:	jmp    0x41e811
  41ebc4:	add    esi,0x1
  41ebc7:	jmp    0x41e907
  41ebcc:	xor    eax,eax
  41ebce:	jmp    0x41e8e0
  41ebd3:	mov    r9d,DWORD PTR [rbx+0x10]
  41ebd7:	jmp    0x41e7c2
  41ebdc:	test   r8d,0x800
  41ebe3:	mov    rax,rbp
  41ebe6:	je     0x41e7d4
  41ebec:	jmp    0x41e7cb
  41ebf1:	mov    esi,0xffffc002
  41ebf6:	jmp    0x41eb6a
  41ebfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec00:	push   r15
  41ec02:	push   r14
  41ec04:	push   r13
  41ec06:	push   r12
  41ec08:	push   rbp
  41ec09:	push   rdi
  41ec0a:	push   rsi
  41ec0b:	push   rbx
  41ec0c:	sub    rsp,0xb8
  41ec13:	mov    r13,QWORD PTR [rsp+0x120]
  41ec1b:	mov    r15d,ecx
  41ec1e:	mov    rdi,rdx
  41ec21:	mov    esi,r8d
  41ec24:	mov    rbx,r9
  41ec27:	and    r15d,0x6000
  41ec2e:	call   0x421f48
  41ec33:	mov    eax,DWORD PTR [rax]
  41ec35:	lea    rcx,[rip+0xe3d1]        # 0x42d00d
  41ec3c:	xor    edx,edx
  41ec3e:	mov    QWORD PTR [rsp+0x80],rdi
  41ec46:	mov    DWORD PTR [rsp+0x88],r15d
  41ec4e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41ec59:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41ec64:	mov    DWORD PTR [rsp+0x34],eax
  41ec68:	xor    eax,eax
  41ec6a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  41ec75:	mov    WORD PTR [rsp+0x98],ax
  41ec7d:	mov    DWORD PTR [rsp+0x9c],0x0
  41ec88:	mov    WORD PTR [rsp+0xa0],dx
  41ec90:	mov    DWORD PTR [rsp+0xa4],0x0
  41ec9b:	mov    DWORD PTR [rsp+0xa8],esi
  41eca2:	call   0x421e30
  41eca7:	test   rax,rax
  41ecaa:	je     0x41ecbc
  41ecac:	movsx  edx,BYTE PTR [rax]
  41ecaf:	mov    eax,0x2
  41ecb4:	sub    edx,0x30
  41ecb7:	cmp    edx,0x2
  41ecba:	jbe    0x41ecc9
  41ecbc:	call   0x422090
  41ecc1:	and    eax,0x1
  41ecc4:	neg    eax
  41ecc6:	add    eax,0x3
  41ecc9:	lea    rdi,[rsp+0x70]
  41ecce:	mov    DWORD PTR [rsp+0xac],eax
  41ecd5:	movzx  eax,BYTE PTR [rbx]
  41ecd8:	lea    rsi,[rsp+0x6e]
  41ecdd:	lea    r12,[rsp+0x80]
  41ece5:	lea    rbp,[rip+0xe338]        # 0x42d024
  41ecec:	mov    QWORD PTR [rsp+0x28],rdi
  41ecf1:	lea    rdi,[rsp+0x50]
  41ecf6:	mov    QWORD PTR [rsp+0x38],rsi
  41ecfb:	mov    QWORD PTR [rsp+0x20],rdi
  41ed00:	mov    edi,r15d
  41ed03:	or     edi,0x200
  41ed09:	mov    DWORD PTR [rsp+0x48],edi
  41ed0d:	nop    DWORD PTR [rax]
  41ed10:	movsx  ecx,al
  41ed13:	lea    rsi,[rbx+0x1]
  41ed17:	test   ecx,ecx
  41ed19:	je     0x41ed9a
  41ed1b:	cmp    ecx,0x25
  41ed1e:	jne    0x41ed80
  41ed20:	movzx  eax,BYTE PTR [rbx+0x1]
  41ed24:	xor    r10d,r10d
  41ed27:	xor    r14d,r14d
  41ed2a:	mov    DWORD PTR [rsp+0x88],r15d
  41ed32:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41ed3d:	mov    rdi,rsi
  41ed40:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41ed4b:	lea    r11,[r12+0xc]
  41ed50:	test   al,al
  41ed52:	je     0x41eefb
  41ed58:	lea    edx,[rax-0x20]
  41ed5b:	lea    rbx,[rdi+0x1]
  41ed5f:	movsx  ecx,al
  41ed62:	cmp    dl,0x5a
  41ed65:	ja     0x41f370
  41ed6b:	movzx  edx,dl
  41ed6e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41ed73:	add    rdx,rbp
  41ed76:	jmp    rdx
  41ed78:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed80:	mov    rdx,r12
  41ed83:	call   0x41d4d0
  41ed88:	movzx  eax,BYTE PTR [rbx+0x1]
  41ed8c:	mov    rbx,rsi
  41ed8f:	lea    rsi,[rbx+0x1]
  41ed93:	movsx  ecx,al
  41ed96:	test   ecx,ecx
  41ed98:	jne    0x41ed1b
  41ed9a:	mov    eax,DWORD PTR [rsp+0xa4]
  41eda1:	add    rsp,0xb8
  41eda8:	pop    rbx
  41eda9:	pop    rsi
  41edaa:	pop    rdi
  41edab:	pop    rbp
  41edac:	pop    r12
  41edae:	pop    r13
  41edb0:	pop    r14
  41edb2:	pop    r15
  41edb4:	ret    
  41edb5:	sub    r10d,0x2
  41edb9:	mov    rax,r13
  41edbc:	cmp    r10d,0x1
  41edc0:	jbe    0x41f3b3
  41edc6:	mov    rsi,QWORD PTR [rax]
  41edc9:	add    r13,0x8
  41edcd:	test   rsi,rsi
  41edd0:	je     0x41ee95
  41edd6:	mov    rcx,rsi
  41edd9:	call   0x421d98
  41edde:	mov    edx,eax
  41ede0:	mov    r8,r12
  41ede3:	mov    rcx,rsi
  41ede6:	call   0x41d650
  41edeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41edf0:	movzx  eax,BYTE PTR [rbx]
  41edf3:	jmp    0x41ed10
  41edf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee00:	test   r14d,r14d
  41ee03:	jne    0x41ee13
  41ee05:	cmp    DWORD PTR [rsp+0x88],r15d
  41ee0d:	je     0x41f57b
  41ee13:	mov    rdx,QWORD PTR [r13+0x0]
  41ee17:	lea    rsi,[r13+0x8]
  41ee1b:	mov    r8,r12
  41ee1e:	mov    ecx,0x78
  41ee23:	mov    QWORD PTR [rsp+0x78],0x0
  41ee2c:	mov    r13,rsi
  41ee2f:	mov    QWORD PTR [rsp+0x70],rdx
  41ee34:	call   0x41e330
  41ee39:	jmp    0x41edf0
  41ee3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee40:	cmp    r10d,0x5
  41ee44:	mov    rax,QWORD PTR [r13+0x0]
  41ee48:	je     0x41f4ba
  41ee4e:	cmp    r10d,0x1
  41ee52:	je     0x41f544
  41ee58:	cmp    r10d,0x2
  41ee5c:	je     0x41ee68
  41ee5e:	cmp    r10d,0x3
  41ee62:	je     0x41f5ec
  41ee68:	mov    edx,DWORD PTR [rsp+0xa4]
  41ee6f:	add    r13,0x8
  41ee73:	mov    DWORD PTR [rax],edx
  41ee75:	jmp    0x41edf0
  41ee7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ee80:	mov    ecx,DWORD PTR [rsp+0x34]
  41ee84:	call   0x421da8
  41ee89:	test   rax,rax
  41ee8c:	mov    rsi,rax
  41ee8f:	jne    0x41edd6
  41ee95:	mov    edx,0x6
  41ee9a:	lea    rsi,[rip+0xe165]        # 0x42d006
  41eea1:	jmp    0x41ede0
  41eea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eeb0:	movzx  eax,BYTE PTR [rdi+0x1]
  41eeb4:	mov    r10d,0x2
  41eeba:	mov    r14d,0x4
  41eec0:	cmp    al,0x6c
  41eec2:	jne    0x41eef0
  41eec4:	lea    rbx,[rdi+0x2]
  41eec8:	movzx  eax,BYTE PTR [rdi+0x2]
  41eecc:	mov    r10d,0x3
  41eed2:	mov    r14d,0x4
  41eed8:	jmp    0x41eef0
  41eeda:	nop    WORD PTR [rax+rax*1+0x0]
  41eee0:	movzx  eax,BYTE PTR [rdi+0x1]
  41eee4:	mov    r10d,0x3
  41eeea:	mov    r14d,0x4
  41eef0:	test   al,al
  41eef2:	mov    rdi,rbx
  41eef5:	jne    0x41ed58
  41eefb:	mov    rbx,rdi
  41eefe:	jmp    0x41ed10
  41ef03:	mov    eax,DWORD PTR [rsp+0x88]
  41ef0a:	mov    rdx,r13
  41ef0d:	add    r13,0x8
  41ef11:	or     eax,0x20
  41ef14:	test   al,0x4
  41ef16:	mov    DWORD PTR [rsp+0x88],eax
  41ef1d:	je     0x41f17b
  41ef23:	mov    rax,QWORD PTR [rdx]
  41ef26:	mov    rcx,QWORD PTR [rsp+0x20]
  41ef2b:	mov    rdx,r12
  41ef2e:	fld    TBYTE PTR [rax]
  41ef30:	fstp   TBYTE PTR [rsp+0x50]
  41ef34:	call   0x41e190
  41ef39:	jmp    0x41edf0
  41ef3e:	xchg   ax,ax
  41ef40:	movzx  eax,BYTE PTR [rdi+0x1]
  41ef44:	mov    r10d,0x1
  41ef4a:	mov    r14d,0x4
  41ef50:	cmp    al,0x68
  41ef52:	jne    0x41eef0
  41ef54:	lea    rbx,[rdi+0x2]
  41ef58:	movzx  eax,BYTE PTR [rdi+0x2]
  41ef5c:	mov    r10d,0x5
  41ef62:	mov    r14d,0x4
  41ef68:	jmp    0x41eef0
  41ef6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef70:	mov    eax,DWORD PTR [rsp+0x88]
  41ef77:	mov    rdx,r13
  41ef7a:	add    r13,0x8
  41ef7e:	or     eax,0x20
  41ef81:	test   al,0x4
  41ef83:	mov    DWORD PTR [rsp+0x88],eax
  41ef8a:	je     0x41f1a9
  41ef90:	mov    rax,QWORD PTR [rdx]
  41ef93:	mov    rcx,QWORD PTR [rsp+0x20]
  41ef98:	mov    rdx,r12
  41ef9b:	fld    TBYTE PTR [rax]
  41ef9d:	fstp   TBYTE PTR [rsp+0x50]
  41efa1:	call   0x41dc50
  41efa6:	jmp    0x41edf0
  41efab:	nop    DWORD PTR [rax+rax*1+0x0]
  41efb0:	mov    eax,DWORD PTR [rsp+0x88]
  41efb7:	mov    rdx,r13
  41efba:	add    r13,0x8
  41efbe:	or     eax,0x20
  41efc1:	test   al,0x4
  41efc3:	mov    DWORD PTR [rsp+0x88],eax
  41efca:	je     0x41f1d7
  41efd0:	mov    rax,QWORD PTR [rdx]
  41efd3:	mov    rcx,QWORD PTR [rsp+0x20]
  41efd8:	mov    rdx,r12
  41efdb:	fld    TBYTE PTR [rax]
  41efdd:	fstp   TBYTE PTR [rsp+0x50]
  41efe1:	call   0x41e0e0
  41efe6:	jmp    0x41edf0
  41efeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41eff0:	cmp    r10d,0x3
  41eff4:	je     0x41f4cc
  41effa:	cmp    r10d,0x2
  41effe:	je     0x41f569
  41f004:	mov    eax,DWORD PTR [r13+0x0]
  41f008:	cmp    r10d,0x1
  41f00c:	lea    rdx,[r13+0x8]
  41f010:	mov    QWORD PTR [rsp+0x70],rax
  41f015:	je     0x41f5ab
  41f01b:	cmp    r10d,0x5
  41f01f:	mov    r13,rdx
  41f022:	je     0x41f600
  41f028:	cmp    ecx,0x75
  41f02b:	je     0x41f50c
  41f031:	mov    r8,r12
  41f034:	mov    rdx,rax
  41f037:	call   0x41e330
  41f03c:	jmp    0x41edf0
  41f041:	sub    r10d,0x2
  41f045:	mov    rax,r13
  41f048:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f053:	cmp    r10d,0x1
  41f057:	jbe    0x41f1fb
  41f05d:	mov    eax,DWORD PTR [rax]
  41f05f:	mov    rcx,QWORD PTR [rsp+0x28]
  41f064:	mov    r8,r12
  41f067:	mov    edx,0x1
  41f06c:	add    r13,0x8
  41f070:	mov    BYTE PTR [rsp+0x70],al
  41f074:	call   0x41d650
  41f079:	jmp    0x41edf0
  41f07e:	xchg   ax,ax
  41f080:	mov    eax,DWORD PTR [rsp+0x88]
  41f087:	mov    rdx,r13
  41f08a:	add    r13,0x8
  41f08e:	or     eax,0x20
  41f091:	test   al,0x4
  41f093:	mov    DWORD PTR [rsp+0x88],eax
  41f09a:	je     0x41f238
  41f0a0:	mov    rax,QWORD PTR [rdx]
  41f0a3:	mov    rcx,QWORD PTR [rsp+0x20]
  41f0a8:	mov    rdx,r12
  41f0ab:	fld    TBYTE PTR [rax]
  41f0ad:	fstp   TBYTE PTR [rsp+0x50]
  41f0b1:	call   0x41e6f0
  41f0b6:	jmp    0x41edf0
  41f0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0c0:	or     DWORD PTR [rsp+0x88],0x80
  41f0cb:	cmp    r10d,0x3
  41f0cf:	je     0x41f4a8
  41f0d5:	cmp    r10d,0x2
  41f0d9:	je     0x41f557
  41f0df:	movsxd rcx,DWORD PTR [r13+0x0]
  41f0e3:	cmp    r10d,0x1
  41f0e7:	lea    rax,[r13+0x8]
  41f0eb:	mov    QWORD PTR [rsp+0x70],rcx
  41f0f0:	je     0x41f5bd
  41f0f6:	cmp    r10d,0x5
  41f0fa:	mov    r13,rax
  41f0fd:	je     0x41f60f
  41f103:	mov    rax,rcx
  41f106:	mov    rdx,r12
  41f109:	sar    rax,0x3f
  41f10d:	mov    QWORD PTR [rsp+0x78],rax
  41f112:	call   0x41dd40
  41f117:	jmp    0x41edf0
  41f11c:	nop    DWORD PTR [rax+0x0]
  41f120:	or     DWORD PTR [rsp+0x88],0x4
  41f128:	movzx  eax,BYTE PTR [rdi+0x1]
  41f12c:	mov    r14d,0x4
  41f132:	jmp    0x41eef0
  41f137:	nop    WORD PTR [rax+rax*1+0x0]
  41f140:	movzx  eax,BYTE PTR [rdi+0x1]
  41f144:	cmp    al,0x36
  41f146:	je     0x41f488
  41f14c:	cmp    al,0x33
  41f14e:	je     0x41f51c
  41f154:	mov    r10d,0x3
  41f15a:	mov    r14d,0x4
  41f160:	jmp    0x41eef0
  41f165:	mov    eax,DWORD PTR [rsp+0x88]
  41f16c:	mov    rdx,r13
  41f16f:	add    r13,0x8
  41f173:	test   al,0x4
  41f175:	jne    0x41ef23
  41f17b:	mov    rcx,QWORD PTR [rsp+0x20]
  41f180:	fld    QWORD PTR [rdx]
  41f182:	mov    rdx,r12
  41f185:	fstp   TBYTE PTR [rsp+0x50]
  41f189:	call   0x41e190
  41f18e:	jmp    0x41edf0
  41f193:	mov    eax,DWORD PTR [rsp+0x88]
  41f19a:	mov    rdx,r13
  41f19d:	add    r13,0x8
  41f1a1:	test   al,0x4
  41f1a3:	jne    0x41ef90
  41f1a9:	mov    rcx,QWORD PTR [rsp+0x20]
  41f1ae:	fld    QWORD PTR [rdx]
  41f1b0:	mov    rdx,r12
  41f1b3:	fstp   TBYTE PTR [rsp+0x50]
  41f1b7:	call   0x41dc50
  41f1bc:	jmp    0x41edf0
  41f1c1:	mov    eax,DWORD PTR [rsp+0x88]
  41f1c8:	mov    rdx,r13
  41f1cb:	add    r13,0x8
  41f1cf:	test   al,0x4
  41f1d1:	jne    0x41efd0
  41f1d7:	mov    rcx,QWORD PTR [rsp+0x20]
  41f1dc:	fld    QWORD PTR [rdx]
  41f1de:	mov    rdx,r12
  41f1e1:	fstp   TBYTE PTR [rsp+0x50]
  41f1e5:	call   0x41e0e0
  41f1ea:	jmp    0x41edf0
  41f1ef:	nop
  41f1f0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f1fb:	mov    eax,DWORD PTR [r13+0x0]
  41f1ff:	mov    rcx,QWORD PTR [rsp+0x28]
  41f204:	lea    rsi,[r13+0x8]
  41f208:	mov    r8,r12
  41f20b:	mov    edx,0x1
  41f210:	mov    r13,rsi
  41f213:	mov    WORD PTR [rsp+0x70],ax
  41f218:	call   0x41d530
  41f21d:	jmp    0x41edf0
  41f222:	mov    eax,DWORD PTR [rsp+0x88]
  41f229:	mov    rdx,r13
  41f22c:	add    r13,0x8
  41f230:	test   al,0x4
  41f232:	jne    0x41f0a0
  41f238:	mov    rcx,QWORD PTR [rsp+0x20]
  41f23d:	fld    QWORD PTR [rdx]
  41f23f:	mov    rdx,r12
  41f242:	fstp   TBYTE PTR [rsp+0x50]
  41f246:	call   0x41e6f0
  41f24b:	jmp    0x41edf0
  41f250:	test   r14d,r14d
  41f253:	jne    0x41f3f0
  41f259:	or     DWORD PTR [rsp+0x88],0x200
  41f264:	movzx  eax,BYTE PTR [rdi+0x1]
  41f268:	jmp    0x41eef0
  41f26d:	nop    DWORD PTR [rax]
  41f270:	cmp    r14d,0x1
  41f274:	jbe    0x41f4de
  41f27a:	movzx  eax,BYTE PTR [rdi+0x1]
  41f27e:	mov    r14d,0x4
  41f284:	jmp    0x41eef0
  41f289:	nop    DWORD PTR [rax+0x0]
  41f290:	test   r14d,r14d
  41f293:	jne    0x41f319
  41f299:	or     DWORD PTR [rsp+0x88],0x400
  41f2a4:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2a8:	jmp    0x41eef0
  41f2ad:	nop    DWORD PTR [rax]
  41f2b0:	test   r14d,r14d
  41f2b3:	jne    0x41f319
  41f2b5:	or     DWORD PTR [rsp+0x88],0x100
  41f2c0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2c4:	jmp    0x41eef0
  41f2c9:	nop    DWORD PTR [rax+0x0]
  41f2d0:	test   r14d,r14d
  41f2d3:	jne    0x41f319
  41f2d5:	or     DWORD PTR [rsp+0x88],0x800
  41f2e0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2e4:	jmp    0x41eef0
  41f2e9:	nop    DWORD PTR [rax+0x0]
  41f2f0:	test   r14d,r14d
  41f2f3:	jne    0x41f319
  41f2f5:	or     DWORD PTR [rsp+0x88],0x40
  41f2fd:	movzx  eax,BYTE PTR [rdi+0x1]
  41f301:	jmp    0x41eef0
  41f306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f310:	test   r14d,r14d
  41f313:	je     0x41f422
  41f319:	movzx  eax,BYTE PTR [rdi+0x1]
  41f31d:	jmp    0x41eef0
  41f322:	mov    rdx,r12
  41f325:	call   0x41d4d0
  41f32a:	jmp    0x41edf0
  41f32f:	nop
  41f330:	test   r11,r11
  41f333:	je     0x41f27a
  41f339:	test   r14d,0xfffffffd
  41f340:	jne    0x41f410
  41f346:	mov    eax,DWORD PTR [r13+0x0]
  41f34a:	lea    rdx,[r13+0x8]
  41f34e:	test   eax,eax
  41f350:	mov    DWORD PTR [r11],eax
  41f353:	js     0x41f5d0
  41f359:	movzx  eax,BYTE PTR [rdi+0x1]
  41f35d:	mov    r13,rdx
  41f360:	xor    r11d,r11d
  41f363:	jmp    0x41eef0
  41f368:	nop    DWORD PTR [rax+rax*1+0x0]
  41f370:	sub    eax,0x30
  41f373:	cmp    al,0x9
  41f375:	ja     0x41f596
  41f37b:	cmp    r14d,0x3
  41f37f:	ja     0x41f596
  41f385:	test   r14d,r14d
  41f388:	jne    0x41f3fa
  41f38a:	mov    r14d,0x1
  41f390:	test   r11,r11
  41f393:	je     0x41f319
  41f395:	mov    eax,DWORD PTR [r11]
  41f398:	test   eax,eax
  41f39a:	js     0x41f4fd
  41f3a0:	lea    eax,[rax+rax*4]
  41f3a3:	lea    eax,[rcx+rax*2-0x30]
  41f3a7:	mov    DWORD PTR [r11],eax
  41f3aa:	movzx  eax,BYTE PTR [rdi+0x1]
  41f3ae:	jmp    0x41eef0
  41f3b3:	mov    rsi,QWORD PTR [r13+0x0]
  41f3b7:	lea    rax,[rip+0xdc3a]        # 0x42cff8
  41f3be:	lea    rdi,[r13+0x8]
  41f3c2:	mov    r13,rdi
  41f3c5:	test   rsi,rsi
  41f3c8:	cmove  rsi,rax
  41f3cc:	mov    rcx,rsi
  41f3cf:	call   0x421d38
  41f3d4:	mov    r8,r12
  41f3d7:	mov    edx,eax
  41f3d9:	mov    rcx,rsi
  41f3dc:	call   0x41d530
  41f3e1:	jmp    0x41edf0
  41f3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3f0:	cmp    r14d,0x3
  41f3f4:	ja     0x41f596
  41f3fa:	cmp    r14d,0x2
  41f3fe:	mov    eax,0x3
  41f403:	cmove  r14d,eax
  41f407:	jmp    0x41f390
  41f409:	nop    DWORD PTR [rax+0x0]
  41f410:	movzx  eax,BYTE PTR [rdi+0x1]
  41f414:	xor    r11d,r11d
  41f417:	mov    r14d,0x4
  41f41d:	jmp    0x41eef0
  41f422:	mov    DWORD PTR [rsp+0x4c],r10d
  41f427:	mov    QWORD PTR [rsp+0x40],r11
  41f42c:	or     DWORD PTR [rsp+0x88],0x1000
  41f437:	mov    DWORD PTR [rsp+0x70],0x0
  41f43f:	call   0x421e20
  41f444:	mov    r9,QWORD PTR [rsp+0x28]
  41f449:	mov    rdx,QWORD PTR [rax+0x8]
  41f44d:	mov    r8d,0x10
  41f453:	mov    rcx,QWORD PTR [rsp+0x38]
  41f458:	call   0x421ae0
  41f45d:	test   eax,eax
  41f45f:	mov    r11,QWORD PTR [rsp+0x40]
  41f464:	mov    r10d,DWORD PTR [rsp+0x4c]
  41f469:	jle    0x41f478
  41f46b:	movzx  edx,WORD PTR [rsp+0x6e]
  41f470:	mov    WORD PTR [rsp+0xa0],dx
  41f478:	mov    DWORD PTR [rsp+0x9c],eax
  41f47f:	movzx  eax,BYTE PTR [rdi+0x1]
  41f483:	jmp    0x41eef0
  41f488:	cmp    BYTE PTR [rdi+0x2],0x34
  41f48c:	je     0x41f61f
  41f492:	mov    eax,0x36
  41f497:	mov    r10d,0x3
  41f49d:	mov    r14d,0x4
  41f4a3:	jmp    0x41eef0
  41f4a8:	mov    rcx,QWORD PTR [r13+0x0]
  41f4ac:	add    r13,0x8
  41f4b0:	mov    QWORD PTR [rsp+0x70],rcx
  41f4b5:	jmp    0x41f103
  41f4ba:	mov    edx,DWORD PTR [rsp+0xa4]
  41f4c1:	add    r13,0x8
  41f4c5:	mov    BYTE PTR [rax],dl
  41f4c7:	jmp    0x41edf0
  41f4cc:	mov    rax,QWORD PTR [r13+0x0]
  41f4d0:	add    r13,0x8
  41f4d4:	mov    QWORD PTR [rsp+0x70],rax
  41f4d9:	jmp    0x41f028
  41f4de:	mov    DWORD PTR [rsp+0x90],0x0
  41f4e9:	movzx  eax,BYTE PTR [rdi+0x1]
  41f4ed:	lea    r11,[r12+0x10]
  41f4f2:	mov    r14d,0x2
  41f4f8:	jmp    0x41eef0
  41f4fd:	sub    ecx,0x30
  41f500:	movzx  eax,BYTE PTR [rdi+0x1]
  41f504:	mov    DWORD PTR [r11],ecx
  41f507:	jmp    0x41eef0
  41f50c:	mov    rdx,r12
  41f50f:	mov    rcx,rax
  41f512:	call   0x41dd40
  41f517:	jmp    0x41edf0
  41f51c:	cmp    BYTE PTR [rdi+0x2],0x32
  41f520:	mov    eax,0x33
  41f525:	jne    0x41f154
  41f52b:	lea    rbx,[rdi+0x3]
  41f52f:	movzx  eax,BYTE PTR [rdi+0x3]
  41f533:	mov    r10d,0x2
  41f539:	mov    r14d,0x4
  41f53f:	jmp    0x41eef0
  41f544:	mov    edx,DWORD PTR [rsp+0xa4]
  41f54b:	add    r13,0x8
  41f54f:	mov    WORD PTR [rax],dx
  41f552:	jmp    0x41edf0
  41f557:	movsxd rcx,DWORD PTR [r13+0x0]
  41f55b:	add    r13,0x8
  41f55f:	mov    QWORD PTR [rsp+0x70],rcx
  41f564:	jmp    0x41f103
  41f569:	mov    eax,DWORD PTR [r13+0x0]
  41f56d:	add    r13,0x8
  41f571:	mov    QWORD PTR [rsp+0x70],rax
  41f576:	jmp    0x41f028
  41f57b:	mov    eax,DWORD PTR [rsp+0x48]
  41f57f:	mov    DWORD PTR [rsp+0x90],0x10
  41f58a:	mov    DWORD PTR [rsp+0x88],eax
  41f591:	jmp    0x41ee13
  41f596:	mov    rdx,r12
  41f599:	mov    ecx,0x25
  41f59e:	mov    rbx,rsi
  41f5a1:	call   0x41d4d0
  41f5a6:	jmp    0x41edf0
  41f5ab:	movzx  eax,WORD PTR [rsp+0x70]
  41f5b0:	mov    r13,rdx
  41f5b3:	mov    QWORD PTR [rsp+0x70],rax
  41f5b8:	jmp    0x41f028
  41f5bd:	movsx  rcx,WORD PTR [rsp+0x70]
  41f5c3:	mov    r13,rax
  41f5c6:	mov    QWORD PTR [rsp+0x70],rcx
  41f5cb:	jmp    0x41f103
  41f5d0:	test   r14d,r14d
  41f5d3:	jne    0x41f638
  41f5d5:	or     DWORD PTR [rsp+0x88],0x400
  41f5e0:	neg    DWORD PTR [rsp+0x8c]
  41f5e7:	jmp    0x41f359
  41f5ec:	movsxd rdx,DWORD PTR [rsp+0xa4]
  41f5f4:	add    r13,0x8
  41f5f8:	mov    QWORD PTR [rax],rdx
  41f5fb:	jmp    0x41edf0
  41f600:	movzx  eax,BYTE PTR [rsp+0x70]
  41f605:	mov    QWORD PTR [rsp+0x70],rax
  41f60a:	jmp    0x41f028
  41f60f:	movsx  rcx,BYTE PTR [rsp+0x70]
  41f615:	mov    QWORD PTR [rsp+0x70],rcx
  41f61a:	jmp    0x41f103
  41f61f:	lea    rbx,[rdi+0x3]
  41f623:	movzx  eax,BYTE PTR [rdi+0x3]
  41f627:	mov    r10d,0x3
  41f62d:	mov    r14d,0x4
  41f633:	jmp    0x41eef0
  41f638:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f643:	movzx  eax,BYTE PTR [rdi+0x1]
  41f647:	mov    r13,rdx
  41f64a:	xor    r11d,r11d
  41f64d:	jmp    0x41eef0
  41f652:	nop
  41f653:	nop
  41f654:	nop
  41f655:	nop
  41f656:	nop
  41f657:	nop
  41f658:	nop
  41f659:	nop
  41f65a:	nop
  41f65b:	nop
  41f65c:	nop
  41f65d:	nop
  41f65e:	nop
  41f65f:	nop
  41f660:	push   rbx
  41f661:	sub    rsp,0x20
  41f665:	xor    ebx,ebx
  41f667:	cmp    ecx,0x1b
  41f66a:	jle    0x41f67d
  41f66c:	mov    eax,0x4
  41f671:	add    eax,eax
  41f673:	add    ebx,0x1
  41f676:	lea    edx,[rax+0x17]
  41f679:	cmp    edx,ecx
  41f67b:	jl     0x41f671
  41f67d:	mov    ecx,ebx
  41f67f:	call   0x420f50
  41f684:	mov    DWORD PTR [rax],ebx
  41f686:	add    rax,0x4
  41f68a:	add    rsp,0x20
  41f68e:	pop    rbx
  41f68f:	ret    
  41f690:	push   rsi
  41f691:	push   rbx
  41f692:	sub    rsp,0x28
  41f696:	mov    rbx,rcx
  41f699:	mov    ecx,r8d
  41f69c:	mov    rsi,rdx
  41f69f:	call   0x41f660
  41f6a4:	movzx  ecx,BYTE PTR [rbx]
  41f6a7:	lea    r8,[rbx+0x1]
  41f6ab:	test   cl,cl
  41f6ad:	mov    BYTE PTR [rax],cl
  41f6af:	mov    rcx,rax
  41f6b2:	je     0x41f6c9
  41f6b4:	add    r8,0x1
  41f6b8:	movzx  r9d,BYTE PTR [r8-0x1]
  41f6bd:	add    rcx,0x1
  41f6c1:	test   r9b,r9b
  41f6c4:	mov    BYTE PTR [rcx],r9b
  41f6c7:	jne    0x41f6b4
  41f6c9:	test   rsi,rsi
  41f6cc:	je     0x41f6d1
  41f6ce:	mov    QWORD PTR [rsi],rcx
  41f6d1:	add    rsp,0x28
  41f6d5:	pop    rbx
  41f6d6:	pop    rsi
  41f6d7:	ret    
  41f6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6e0:	mov    edx,0x1
  41f6e5:	mov    rax,rcx
  41f6e8:	mov    ecx,DWORD PTR [rcx-0x4]
  41f6eb:	shl    edx,cl
  41f6ed:	mov    DWORD PTR [rax+0x4],ecx
  41f6f0:	lea    rcx,[rax-0x4]
  41f6f4:	mov    DWORD PTR [rax+0x8],edx
  41f6f7:	jmp    0x421060
  41f6fc:	nop    DWORD PTR [rax+0x0]
  41f700:	push   r15
  41f702:	push   r14
  41f704:	push   r13
  41f706:	push   r12
  41f708:	push   rbp
  41f709:	push   rdi
  41f70a:	push   rsi
  41f70b:	push   rbx
  41f70c:	sub    rsp,0x38
  41f710:	xor    eax,eax
  41f712:	mov    edi,DWORD PTR [rdx+0x14]
  41f715:	cmp    edi,DWORD PTR [rcx+0x14]
  41f718:	mov    r15,rdx
  41f71b:	jg     0x41f869
  41f721:	sub    edi,0x1
  41f724:	lea    rbx,[rdx+0x18]
  41f728:	lea    r12,[rcx+0x18]
  41f72c:	movsxd r13,edi
  41f72f:	xor    edx,edx
  41f731:	shl    r13,0x2
  41f735:	lea    rbp,[rbx+r13*1]
  41f739:	add    r13,r12
  41f73c:	mov    eax,DWORD PTR [rbp+0x0]
  41f73f:	lea    r8d,[rax+0x1]
  41f743:	mov    eax,DWORD PTR [r13+0x0]
  41f747:	div    r8d
  41f74a:	test   eax,eax
  41f74c:	mov    r14d,eax
  41f74f:	mov    DWORD PTR [rsp+0x2c],eax
  41f753:	je     0x41f7e7
  41f759:	mov    edx,eax
  41f75b:	mov    rsi,rbx
  41f75e:	mov    r11,r12
  41f761:	xor    eax,eax
  41f763:	xor    r10d,r10d
  41f766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f770:	add    rsi,0x4
  41f774:	mov    r8d,DWORD PTR [rsi-0x4]
  41f778:	mov    r9d,DWORD PTR [r11]
  41f77b:	add    r11,0x4
  41f77f:	imul   r8,rdx
  41f783:	add    r8,rax
  41f786:	mov    rax,r8
  41f789:	mov    r8d,r8d
  41f78c:	sub    r9,r8
  41f78f:	shr    rax,0x20
  41f793:	sub    r9,r10
  41f796:	mov    r10,r9
  41f799:	mov    DWORD PTR [r11-0x4],r9d
  41f79d:	shr    r10,0x20
  41f7a1:	and    r10d,0x1
  41f7a5:	cmp    rbp,rsi
  41f7a8:	jae    0x41f770
  41f7aa:	mov    r11d,DWORD PTR [r13+0x0]
  41f7ae:	test   r11d,r11d
  41f7b1:	jne    0x41f7e7
  41f7b3:	lea    rax,[r13-0x4]
  41f7b7:	cmp    r12,rax
  41f7ba:	jae    0x41f7e4
  41f7bc:	mov    r10d,DWORD PTR [r13-0x4]
  41f7c0:	test   r10d,r10d
  41f7c3:	je     0x41f7d8
  41f7c5:	jmp    0x41f7e4
  41f7c7:	nop    WORD PTR [rax+rax*1+0x0]
  41f7d0:	mov    r9d,DWORD PTR [rax]
  41f7d3:	test   r9d,r9d
  41f7d6:	jne    0x41f7e4
  41f7d8:	sub    rax,0x4
  41f7dc:	sub    edi,0x1
  41f7df:	cmp    r12,rax
  41f7e2:	jb     0x41f7d0
  41f7e4:	mov    DWORD PTR [rcx+0x14],edi
  41f7e7:	mov    rdx,r15
  41f7ea:	mov    rsi,rcx
  41f7ed:	call   0x421580
  41f7f2:	test   eax,eax
  41f7f4:	js     0x41f865
  41f7f6:	lea    eax,[r14+0x1]
  41f7fa:	mov    rcx,r12
  41f7fd:	xor    edx,edx
  41f7ff:	mov    DWORD PTR [rsp+0x2c],eax
  41f803:	add    rbx,0x4
  41f807:	mov    eax,DWORD PTR [rcx]
  41f809:	mov    r8d,DWORD PTR [rbx-0x4]
  41f80d:	add    rcx,0x4
  41f811:	sub    rax,r8
  41f814:	sub    rax,rdx
  41f817:	mov    rdx,rax
  41f81a:	mov    DWORD PTR [rcx-0x4],eax
  41f81d:	shr    rdx,0x20
  41f821:	and    edx,0x1
  41f824:	cmp    rbp,rbx
  41f827:	jae    0x41f803
  41f829:	movsxd rax,edi
  41f82c:	lea    rdx,[r12+rax*4]
  41f830:	mov    r8d,DWORD PTR [rdx]
  41f833:	test   r8d,r8d
  41f836:	jne    0x41f865
  41f838:	lea    rax,[rdx-0x4]
  41f83c:	cmp    r12,rax
  41f83f:	jae    0x41f862
  41f841:	mov    ecx,DWORD PTR [rdx-0x4]
  41f844:	test   ecx,ecx
  41f846:	je     0x41f856
  41f848:	jmp    0x41f862
  41f84a:	nop    WORD PTR [rax+rax*1+0x0]
  41f850:	mov    edx,DWORD PTR [rax]
  41f852:	test   edx,edx
  41f854:	jne    0x41f862
  41f856:	sub    rax,0x4
  41f85a:	sub    edi,0x1
  41f85d:	cmp    r12,rax
  41f860:	jb     0x41f850
  41f862:	mov    DWORD PTR [rsi+0x14],edi
  41f865:	mov    eax,DWORD PTR [rsp+0x2c]
  41f869:	add    rsp,0x38
  41f86d:	pop    rbx
  41f86e:	pop    rsi
  41f86f:	pop    rdi
  41f870:	pop    rbp
  41f871:	pop    r12
  41f873:	pop    r13
  41f875:	pop    r14
  41f877:	pop    r15
  41f879:	ret    
  41f87a:	nop
  41f87b:	nop
  41f87c:	nop
  41f87d:	nop
  41f87e:	nop
  41f87f:	nop
  41f880:	push   r15
  41f882:	push   r14
  41f884:	push   r13
  41f886:	push   r12
  41f888:	push   rbp
  41f889:	push   rdi
  41f88a:	push   rsi
  41f88b:	push   rbx
  41f88c:	sub    rsp,0xb8
  41f893:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41f89b:	mov    r12d,DWORD PTR [r9]
  41f89e:	mov    eax,r12d
  41f8a1:	and    eax,0xffffffcf
  41f8a4:	mov    DWORD PTR [r9],eax
  41f8a7:	mov    eax,r12d
  41f8aa:	and    eax,0x7
  41f8ad:	cmp    eax,0x4
  41f8b0:	ja     0x420ce3
  41f8b6:	mov    r13d,edx
  41f8b9:	lea    rdx,[rip+0xd8e0]        # 0x42d1a0
  41f8c0:	mov    QWORD PTR [rsp+0x28],r9
  41f8c5:	mov    r15,r8
  41f8c8:	mov    rbp,rcx
  41f8cb:	movsxd rax,DWORD PTR [rdx+rax*4]
  41f8cf:	add    rdx,rax
  41f8d2:	jmp    rdx
  41f8d4:	mov    edi,DWORD PTR [rcx]
  41f8d6:	xor    ecx,ecx
  41f8d8:	cmp    edi,0x20
  41f8db:	jle    0x41f8eb
  41f8dd:	mov    eax,0x20
  41f8e2:	add    eax,eax
  41f8e4:	add    ecx,0x1
  41f8e7:	cmp    edi,eax
  41f8e9:	jg     0x41f8e2
  41f8eb:	call   0x420f50
  41f8f0:	mov    rsi,rax
  41f8f3:	lea    eax,[rdi-0x1]
  41f8f6:	lea    r9,[rsi+0x18]
  41f8fa:	sar    eax,0x5
  41f8fd:	cdqe   
  41f8ff:	mov    rdx,r9
  41f902:	lea    r11,[r15+rax*4]
  41f906:	mov    rax,r15
  41f909:	nop    DWORD PTR [rax+0x0]
  41f910:	mov    ecx,DWORD PTR [rax]
  41f912:	add    rax,0x4
  41f916:	add    rdx,0x4
  41f91a:	cmp    r11,rax
  41f91d:	mov    DWORD PTR [rdx-0x4],ecx
  41f920:	jae    0x41f910
  41f922:	sub    rdx,r9
  41f925:	sar    rdx,0x2
  41f929:	mov    r14d,edx
  41f92c:	movsxd rdx,edx
  41f92f:	lea    rax,[r9+rdx*4-0x4]
  41f934:	jmp    0x41f94f
  41f936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f940:	sub    rax,0x4
  41f944:	test   edx,edx
  41f946:	mov    r14d,edx
  41f949:	je     0x41fe50
  41f94f:	mov    r8d,DWORD PTR [rax]
  41f952:	lea    edx,[r14-0x1]
  41f956:	test   r8d,r8d
  41f959:	je     0x41f940
  41f95b:	movsxd rdx,edx
  41f95e:	mov    DWORD PTR [rsi+0x14],r14d
  41f962:	shl    r14d,0x5
  41f966:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41f96b:	xor    eax,0x1f
  41f96e:	sub    r14d,eax
  41f971:	mov    rcx,rsi
  41f974:	call   0x420df0
  41f979:	test   eax,eax
  41f97b:	mov    DWORD PTR [rsp+0x9c],eax
  41f982:	mov    r11d,r13d
  41f985:	jne    0x41fe60
  41f98b:	mov    ecx,DWORD PTR [rsi+0x14]
  41f98e:	test   ecx,ecx
  41f990:	jne    0x41fa40
  41f996:	mov    rcx,rsi
  41f999:	call   0x421060
  41f99e:	mov    rax,QWORD PTR [rsp+0x130]
  41f9a6:	mov    rdx,QWORD PTR [rsp+0x138]
  41f9ae:	lea    rcx,[rip+0xd7e8]        # 0x42d19d
  41f9b5:	mov    r8d,0x1
  41f9bb:	mov    DWORD PTR [rax],0x1
  41f9c1:	call   0x41f690
  41f9c6:	nop
  41f9c7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  41f9cf:	add    rsp,0xb8
  41f9d6:	pop    rbx
  41f9d7:	pop    rsi
  41f9d8:	pop    rdi
  41f9d9:	pop    rbp
  41f9da:	pop    r12
  41f9dc:	pop    r13
  41f9de:	pop    r14
  41f9e0:	pop    r15
  41f9e2:	ret    
  41f9e3:	mov    rax,QWORD PTR [rsp+0x130]
  41f9eb:	mov    rdx,QWORD PTR [rsp+0x138]
  41f9f3:	lea    rcx,[rip+0xd79f]        # 0x42d199
  41f9fa:	mov    r8d,0x3
  41fa00:	mov    DWORD PTR [rax],0xffff8000
  41fa06:	call   0x41f690
  41fa0b:	jmp    0x41f9c7
  41fa0d:	nop    DWORD PTR [rax]
  41fa10:	mov    rax,QWORD PTR [rsp+0x130]
  41fa18:	mov    rdx,QWORD PTR [rsp+0x138]
  41fa20:	lea    rcx,[rip+0xd769]        # 0x42d190
  41fa27:	mov    r8d,0x8
  41fa2d:	mov    DWORD PTR [rax],0xffff8000
  41fa33:	call   0x41f690
  41fa38:	jmp    0x41f9c7
  41fa3a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa40:	lea    rdx,[rsp+0x9c]
  41fa48:	mov    rcx,rsi
  41fa4b:	mov    DWORD PTR [rsp+0x30],r11d
  41fa50:	call   0x421710
  41fa55:	movq   rdx,xmm0
  41fa5a:	movq   r9,xmm0
  41fa5f:	mov    r11d,DWORD PTR [rsp+0x30]
  41fa64:	pxor   xmm0,xmm0
  41fa68:	shr    rdx,0x20
  41fa6c:	mov    r9d,r9d
  41fa6f:	and    edx,0xfffff
  41fa75:	lea    ecx,[r11+r14*1-0x1]
  41fa7a:	or     edx,0x3ff00000
  41fa80:	mov    rax,rdx
  41fa83:	cvtsi2sd xmm0,ecx
  41fa87:	shl    rax,0x20
  41fa8b:	mov    ebx,ecx
  41fa8d:	or     r9,rax
  41fa90:	sar    ebx,0x1f
  41fa93:	mov    QWORD PTR [rsp+0x30],r9
  41fa98:	mov    eax,ebx
  41fa9a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  41faa0:	xor    eax,ecx
  41faa2:	sub    eax,ebx
  41faa4:	subsd  xmm1,QWORD PTR [rip+0xd70c]        # 0x42d1b8
  41faac:	sub    eax,0x435
  41fab1:	test   eax,eax
  41fab3:	mulsd  xmm0,QWORD PTR [rip+0xd715]        # 0x42d1d0
  41fabb:	mulsd  xmm1,QWORD PTR [rip+0xd6fd]        # 0x42d1c0
  41fac3:	addsd  xmm1,QWORD PTR [rip+0xd6fd]        # 0x42d1c8
  41facb:	addsd  xmm1,xmm0
  41facf:	jle    0x41fae5
  41fad1:	pxor   xmm0,xmm0
  41fad5:	cvtsi2sd xmm0,eax
  41fad9:	mulsd  xmm0,QWORD PTR [rip+0xd6f7]        # 0x42d1d8
  41fae1:	addsd  xmm1,xmm0
  41fae5:	cvttsd2si eax,xmm1
  41fae9:	pxor   xmm6,xmm6
  41faed:	ucomisd xmm6,xmm1
  41faf1:	mov    DWORD PTR [rsp+0x30],eax
  41faf5:	ja     0x420383
  41fafb:	mov    eax,ecx
  41fafd:	mov    r9d,r9d
  41fb00:	mov    DWORD PTR [rsp+0x6c],0x1
  41fb08:	shl    eax,0x14
  41fb0b:	add    eax,edx
  41fb0d:	shl    rax,0x20
  41fb11:	or     r9,rax
  41fb14:	cmp    DWORD PTR [rsp+0x30],0x16
  41fb19:	mov    QWORD PTR [rsp+0x80],r9
  41fb21:	ja     0x41fb50
  41fb23:	movsxd rax,DWORD PTR [rsp+0x30]
  41fb28:	mov    rdx,QWORD PTR [rip+0xd9f1]        # 0x42d520
  41fb2f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  41fb34:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41fb3d:	jbe    0x41fea0
  41fb43:	sub    DWORD PTR [rsp+0x30],0x1
  41fb48:	mov    DWORD PTR [rsp+0x6c],0x0
  41fb50:	mov    eax,r14d
  41fb53:	mov    DWORD PTR [rsp+0x50],0x0
  41fb5b:	sub    eax,ecx
  41fb5d:	sub    eax,0x1
  41fb60:	mov    DWORD PTR [rsp+0x40],eax
  41fb64:	js     0x420370
  41fb6a:	mov    eax,DWORD PTR [rsp+0x30]
  41fb6e:	test   eax,eax
  41fb70:	js     0x420350
  41fb76:	add    DWORD PTR [rsp+0x40],eax
  41fb7a:	mov    DWORD PTR [rsp+0x88],eax
  41fb81:	mov    DWORD PTR [rsp+0x58],0x0
  41fb89:	cmp    DWORD PTR [rsp+0x120],0x9
  41fb91:	ja     0x41fe80
  41fb97:	cmp    DWORD PTR [rsp+0x120],0x5
  41fb9f:	jle    0x41fe8b
  41fba5:	sub    DWORD PTR [rsp+0x120],0x4
  41fbad:	xor    eax,eax
  41fbaf:	cmp    DWORD PTR [rsp+0x120],0x3
  41fbb7:	je     0x420544
  41fbbd:	jle    0x4202a3
  41fbc3:	cmp    DWORD PTR [rsp+0x120],0x4
  41fbcb:	mov    DWORD PTR [rsp+0x60],0x1
  41fbd3:	je     0x41feb0
  41fbd9:	cmp    DWORD PTR [rsp+0x120],0x5
  41fbe1:	jne    0x4202b9
  41fbe7:	mov    ebx,DWORD PTR [rsp+0x30]
  41fbeb:	add    ebx,DWORD PTR [rsp+0x128]
  41fbf2:	mov    DWORD PTR [rsp+0x8c],ebx
  41fbf9:	add    ebx,0x1
  41fbfc:	test   ebx,ebx
  41fbfe:	mov    DWORD PTR [rsp+0x68],ebx
  41fc02:	mov    ecx,ebx
  41fc04:	jle    0x420780
  41fc0a:	cmp    ebx,0xe
  41fc0d:	mov    DWORD PTR [rsp+0x9c],ebx
  41fc14:	setbe  bl
  41fc17:	and    ebx,eax
  41fc19:	mov    QWORD PTR [rsp+0x78],r9
  41fc1e:	mov    DWORD PTR [rsp+0x70],r11d
  41fc23:	call   0x41f660
  41fc28:	mov    QWORD PTR [rsp+0x48],rax
  41fc2d:	mov    eax,DWORD PTR [rbp+0xc]
  41fc30:	mov    r11d,DWORD PTR [rsp+0x70]
  41fc35:	mov    r9,QWORD PTR [rsp+0x78]
  41fc3a:	sub    eax,0x1
  41fc3d:	mov    DWORD PTR [rsp+0x38],eax
  41fc41:	je     0x41fc68
  41fc43:	mov    ecx,DWORD PTR [rsp+0x38]
  41fc47:	mov    eax,0x2
  41fc4c:	test   ecx,ecx
  41fc4e:	cmovns eax,ecx
  41fc51:	and    r12d,0x8
  41fc55:	mov    DWORD PTR [rsp+0x38],eax
  41fc59:	je     0x41fc68
  41fc5b:	mov    eax,0x3
  41fc60:	sub    eax,DWORD PTR [rsp+0x38]
  41fc64:	mov    DWORD PTR [rsp+0x38],eax
  41fc68:	test   bl,bl
  41fc6a:	je     0x41ff60
  41fc70:	mov    eax,DWORD PTR [rsp+0x38]
  41fc74:	or     eax,DWORD PTR [rsp+0x30]
  41fc78:	jne    0x41ff60
  41fc7e:	mov    eax,DWORD PTR [rsp+0x6c]
  41fc82:	mov    DWORD PTR [rsp+0x9c],0x0
  41fc8d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  41fc96:	test   eax,eax
  41fc98:	je     0x41fcac
  41fc9a:	movsd  xmm0,QWORD PTR [rip+0xd546]        # 0x42d1e8
  41fca2:	ucomisd xmm0,xmm4
  41fca6:	ja     0x420adb
  41fcac:	movapd xmm0,xmm4
  41fcb0:	mov    r12d,DWORD PTR [rsp+0x68]
  41fcb5:	addsd  xmm0,xmm4
  41fcb9:	addsd  xmm0,QWORD PTR [rip+0xd53f]        # 0x42d200
  41fcc1:	movq   rdx,xmm0
  41fcc6:	movq   rax,xmm0
  41fccb:	shr    rdx,0x20
  41fccf:	mov    eax,eax
  41fcd1:	sub    edx,0x3400000
  41fcd7:	shl    rdx,0x20
  41fcdb:	or     rax,rdx
  41fcde:	test   r12d,r12d
  41fce1:	je     0x41ff17
  41fce7:	mov    r9d,DWORD PTR [rsp+0x68]
  41fcec:	movapd xmm0,xmm4
  41fcf0:	xor    ecx,ecx
  41fcf2:	mov    ebx,DWORD PTR [rsp+0x60]
  41fcf6:	lea    edx,[r9-0x1]
  41fcfa:	movsxd rdx,edx
  41fcfd:	test   ebx,ebx
  41fcff:	je     0x420823
  41fd05:	mov    r10,QWORD PTR [rip+0xd814]        # 0x42d520
  41fd0c:	movsd  xmm1,QWORD PTR [rip+0xd50c]        # 0x42d220
  41fd14:	mov    QWORD PTR [rsp+0x38],rax
  41fd19:	cvttsd2si eax,xmm0
  41fd1d:	pxor   xmm2,xmm2
  41fd21:	mov    DWORD PTR [rsp+0x9c],0x0
  41fd2c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  41fd32:	mov    rdx,QWORD PTR [rsp+0x48]
  41fd37:	mov    rbx,rdx
  41fd3a:	add    rbx,0x1
  41fd3e:	cvtsi2sd xmm2,eax
  41fd42:	add    eax,0x30
  41fd45:	mov    BYTE PTR [rdx],al
  41fd47:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41fd4d:	subsd  xmm0,xmm2
  41fd51:	subsd  xmm1,xmm5
  41fd55:	ucomisd xmm1,xmm0
  41fd59:	ja     0x41fdf4
  41fd5f:	movsd  xmm5,QWORD PTR [rip+0xd481]        # 0x42d1e8
  41fd67:	movapd xmm2,xmm5
  41fd6b:	subsd  xmm2,xmm0
  41fd6f:	ucomisd xmm1,xmm2
  41fd73:	ja     0x4208f7
  41fd79:	mov    eax,DWORD PTR [rsp+0x9c]
  41fd80:	movsd  xmm3,QWORD PTR [rip+0xd468]        # 0x42d1f0
  41fd88:	add    eax,0x1
  41fd8b:	cmp    r9d,eax
  41fd8e:	mov    DWORD PTR [rsp+0x9c],eax
  41fd95:	jg     0x41fdcc
  41fd97:	jmp    0x41ff4e
  41fd9c:	nop    DWORD PTR [rax+0x0]
  41fda0:	movapd xmm2,xmm5
  41fda4:	subsd  xmm2,xmm0
  41fda8:	ucomisd xmm1,xmm2
  41fdac:	ja     0x4208f7
  41fdb2:	mov    eax,DWORD PTR [rsp+0x9c]
  41fdb9:	add    eax,0x1
  41fdbc:	cmp    r9d,eax
  41fdbf:	mov    DWORD PTR [rsp+0x9c],eax
  41fdc6:	jle    0x41ff4e
  41fdcc:	mulsd  xmm0,xmm3
  41fdd0:	add    rbx,0x1
  41fdd4:	pxor   xmm2,xmm2
  41fdd8:	mulsd  xmm1,xmm3
  41fddc:	cvttsd2si eax,xmm0
  41fde0:	cvtsi2sd xmm2,eax
  41fde4:	add    eax,0x30
  41fde7:	mov    BYTE PTR [rbx-0x1],al
  41fdea:	subsd  xmm0,xmm2
  41fdee:	ucomisd xmm1,xmm0
  41fdf2:	jbe    0x41fda0
  41fdf4:	ucomisd xmm0,xmm6
  41fdf8:	lea    ebp,[rcx+0x1]
  41fdfb:	jp     0x41fe03
  41fdfd:	je     0x420757
  41fe03:	mov    r15d,0x10
  41fe09:	nop    DWORD PTR [rax+0x0]
  41fe10:	mov    rcx,rsi
  41fe13:	call   0x421060
  41fe18:	cmp    QWORD PTR [rsp+0x138],0x0
  41fe21:	mov    rax,QWORD PTR [rsp+0x130]
  41fe29:	mov    BYTE PTR [rbx],0x0
  41fe2c:	mov    DWORD PTR [rax],ebp
  41fe2e:	je     0x41fe3b
  41fe30:	mov    rax,QWORD PTR [rsp+0x138]
  41fe38:	mov    QWORD PTR [rax],rbx
  41fe3b:	mov    rax,QWORD PTR [rsp+0x28]
  41fe40:	or     DWORD PTR [rax],r15d
  41fe43:	mov    rax,QWORD PTR [rsp+0x48]
  41fe48:	jmp    0x41f9c7
  41fe4d:	nop    DWORD PTR [rax]
  41fe50:	mov    DWORD PTR [rsi+0x14],0x0
  41fe57:	jmp    0x41f971
  41fe5c:	nop    DWORD PTR [rax+0x0]
  41fe60:	mov    edx,eax
  41fe62:	mov    rcx,rsi
  41fe65:	call   0x420cf0
  41fe6a:	mov    eax,DWORD PTR [rsp+0x9c]
  41fe71:	lea    r11d,[r13+rax*1+0x0]
  41fe76:	sub    r14d,eax
  41fe79:	jmp    0x41f98b
  41fe7e:	xchg   ax,ax
  41fe80:	mov    DWORD PTR [rsp+0x120],0x0
  41fe8b:	add    ecx,0x3fe
  41fe91:	cmp    ecx,0x7f7
  41fe97:	setbe  al
  41fe9a:	jmp    0x41fbaf
  41fe9f:	nop
  41fea0:	mov    DWORD PTR [rsp+0x6c],0x0
  41fea8:	jmp    0x41fb50
  41fead:	nop    DWORD PTR [rax]
  41feb0:	mov    edx,DWORD PTR [rsp+0x128]
  41feb7:	test   edx,edx
  41feb9:	jle    0x42076b
  41febf:	cmp    DWORD PTR [rsp+0x128],0xe
  41fec7:	setbe  bl
  41feca:	mov    ecx,DWORD PTR [rsp+0x128]
  41fed1:	and    ebx,eax
  41fed3:	mov    DWORD PTR [rsp+0x9c],ecx
  41feda:	mov    DWORD PTR [rsp+0x8c],ecx
  41fee1:	mov    DWORD PTR [rsp+0x68],ecx
  41fee5:	jmp    0x41fc19
  41feea:	movapd xmm0,xmm4
  41feee:	addsd  xmm0,xmm4
  41fef2:	addsd  xmm0,QWORD PTR [rip+0xd306]        # 0x42d200
  41fefa:	movq   rdx,xmm0
  41feff:	movq   rax,xmm0
  41ff04:	shr    rdx,0x20
  41ff08:	mov    eax,eax
  41ff0a:	sub    edx,0x3400000
  41ff10:	shl    rdx,0x20
  41ff14:	or     rax,rdx
  41ff17:	movapd xmm1,xmm4
  41ff1b:	mov    QWORD PTR [rsp+0x38],rax
  41ff20:	movsd  xmm0,QWORD PTR [rsp+0x38]
  41ff26:	subsd  xmm1,QWORD PTR [rip+0xd2da]        # 0x42d208
  41ff2e:	ucomisd xmm1,xmm0
  41ff32:	ja     0x420814
  41ff38:	movsd  xmm2,QWORD PTR [rip+0xd2d0]        # 0x42d210
  41ff40:	xorpd  xmm0,xmm2
  41ff44:	ucomisd xmm0,xmm1
  41ff48:	ja     0x42032d
  41ff4e:	movq   r9,xmm4
  41ff53:	mov    DWORD PTR [rsp+0x38],0x0
  41ff5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff60:	test   r11d,r11d
  41ff63:	js     0x420002
  41ff69:	movsxd rax,DWORD PTR [rsp+0x30]
  41ff6e:	cmp    eax,DWORD PTR [rbp+0x14]
  41ff71:	jg     0x420002
  41ff77:	mov    ebx,DWORD PTR [rsp+0x68]
  41ff7b:	mov    rdx,QWORD PTR [rip+0xd59e]        # 0x42d520
  41ff82:	test   ebx,ebx
  41ff84:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  41ff89:	jg     0x420693
  41ff8f:	mov    eax,DWORD PTR [rsp+0x128]
  41ff96:	shr    eax,0x1f
  41ff99:	test   al,al
  41ff9b:	je     0x420693
  41ffa1:	test   ebx,ebx
  41ffa3:	jne    0x42032d
  41ffa9:	mulsd  xmm2,QWORD PTR [rip+0xd257]        # 0x42d208
  41ffb1:	mov    QWORD PTR [rsp+0x38],r9
  41ffb6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41ffbc:	ucomisd xmm2,xmm5
  41ffc0:	jae    0x42032d
  41ffc6:	mov    ebp,DWORD PTR [rsp+0x30]
  41ffca:	xor    r12d,r12d
  41ffcd:	xor    edi,edi
  41ffcf:	add    ebp,0x2
  41ffd2:	mov    rax,QWORD PTR [rsp+0x48]
  41ffd7:	mov    r15d,0x20
  41ffdd:	lea    rbx,[rax+0x1]
  41ffe1:	mov    BYTE PTR [rax],0x31
  41ffe4:	mov    rcx,r12
  41ffe7:	call   0x421060
  41ffec:	test   rdi,rdi
  41ffef:	je     0x41fe10
  41fff5:	mov    rcx,rdi
  41fff8:	call   0x421060
  41fffd:	jmp    0x41fe10
  420002:	mov    r9d,DWORD PTR [rsp+0x60]
  420007:	test   r9d,r9d
  42000a:	je     0x420510
  420010:	mov    edx,DWORD PTR [rbp+0x4]
  420013:	sub    edi,r14d
  420016:	mov    ecx,r11d
  420019:	lea    eax,[rdi+0x1]
  42001c:	sub    ecx,edi
  42001e:	cmp    ecx,edx
  420020:	mov    DWORD PTR [rsp+0x9c],eax
  420027:	jge    0x42005c
  420029:	mov    ebx,DWORD PTR [rsp+0x120]
  420030:	lea    ecx,[rbx-0x3]
  420033:	and    ecx,0xfffffffd
  420036:	je     0x42005c
  420038:	mov    ebx,DWORD PTR [rsp+0x68]
  42003c:	sub    r11d,edx
  42003f:	lea    eax,[r11+0x1]
  420043:	test   ebx,ebx
  420045:	mov    DWORD PTR [rsp+0x9c],eax
  42004c:	setg   cl
  42004f:	cmp    ebx,eax
  420051:	setl   dl
  420054:	test   cl,dl
  420056:	je     0x42079f
  42005c:	cmp    DWORD PTR [rsp+0x120],0x1
  420064:	jle    0x42079f
  42006a:	mov    ebx,DWORD PTR [rsp+0x58]
  42006e:	mov    eax,DWORD PTR [rsp+0x68]
  420072:	mov    r12d,ebx
  420075:	sub    eax,0x1
  420078:	sub    r12d,eax
  42007b:	cmp    ebx,eax
  42007d:	jge    0x420093
  42007f:	mov    edx,eax
  420081:	sub    edx,DWORD PTR [rsp+0x58]
  420085:	xor    r12d,r12d
  420088:	add    DWORD PTR [rsp+0x88],edx
  42008f:	mov    DWORD PTR [rsp+0x58],eax
  420093:	mov    eax,DWORD PTR [rsp+0x68]
  420097:	test   eax,eax
  420099:	js     0x420a32
  42009f:	mov    ebx,DWORD PTR [rsp+0x50]
  4200a3:	mov    DWORD PTR [rsp+0x9c],eax
  4200aa:	mov    ecx,0x1
  4200af:	add    DWORD PTR [rsp+0x50],eax
  4200b3:	add    DWORD PTR [rsp+0x40],eax
  4200b7:	call   0x421190
  4200bc:	mov    rdi,rax
  4200bf:	mov    ecx,DWORD PTR [rsp+0x40]
  4200c3:	test   ecx,ecx
  4200c5:	mov    eax,ecx
  4200c7:	jle    0x4200e5
  4200c9:	test   ebx,ebx
  4200cb:	jle    0x4200e5
  4200cd:	cmp    ecx,ebx
  4200cf:	cmovg  eax,ebx
  4200d2:	sub    DWORD PTR [rsp+0x50],eax
  4200d6:	sub    ecx,eax
  4200d8:	mov    DWORD PTR [rsp+0x9c],eax
  4200df:	sub    ebx,eax
  4200e1:	mov    DWORD PTR [rsp+0x40],ecx
  4200e5:	mov    r8d,DWORD PTR [rsp+0x58]
  4200ea:	test   r8d,r8d
  4200ed:	jle    0x42013b
  4200ef:	mov    ecx,DWORD PTR [rsp+0x60]
  4200f3:	test   ecx,ecx
  4200f5:	je     0x420530
  4200fb:	test   r12d,r12d
  4200fe:	jle    0x42012e
  420100:	mov    rcx,rdi
  420103:	mov    edx,r12d
  420106:	call   0x4212f0
  42010b:	mov    rdx,rsi
  42010e:	mov    rcx,rax
  420111:	mov    rdi,rax
  420114:	call   0x4211c0
  420119:	mov    rcx,rsi
  42011c:	mov    QWORD PTR [rsp+0x70],rax
  420121:	call   0x421060
  420126:	mov    rax,QWORD PTR [rsp+0x70]
  42012b:	mov    rsi,rax
  42012e:	mov    edx,DWORD PTR [rsp+0x58]
  420132:	sub    edx,r12d
  420135:	jne    0x420534
  42013b:	mov    ecx,0x1
  420140:	call   0x421190
  420145:	mov    r12,rax
  420148:	mov    eax,DWORD PTR [rsp+0x88]
  42014f:	test   eax,eax
  420151:	jle    0x420280
  420157:	mov    rcx,r12
  42015a:	mov    edx,eax
  42015c:	call   0x4212f0
  420161:	cmp    DWORD PTR [rsp+0x120],0x1
  420169:	mov    r12,rax
  42016c:	jg     0x420178
  42016e:	cmp    r14d,0x1
  420172:	je     0x42023c
  420178:	xor    ebp,ebp
  42017a:	mov    eax,DWORD PTR [r12+0x14]
  42017f:	sub    eax,0x1
  420182:	cdqe   
  420184:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42018a:	xor    eax,0x1f
  42018d:	sub    eax,DWORD PTR [rsp+0x40]
  420191:	mov    edx,DWORD PTR [rsp+0x50]
  420195:	sub    eax,0x4
  420198:	and    eax,0x1f
  42019b:	add    edx,eax
  42019d:	mov    r13d,eax
  4201a0:	mov    DWORD PTR [rsp+0x9c],eax
  4201a7:	test   edx,edx
  4201a9:	mov    ecx,eax
  4201ab:	jle    0x4201bf
  4201ad:	mov    rcx,rsi
  4201b0:	call   0x421460
  4201b5:	mov    ecx,DWORD PTR [rsp+0x9c]
  4201bc:	mov    rsi,rax
  4201bf:	mov    edx,DWORD PTR [rsp+0x40]
  4201c3:	add    edx,ecx
  4201c5:	test   edx,edx
  4201c7:	jle    0x4201d4
  4201c9:	mov    rcx,r12
  4201cc:	call   0x421460
  4201d1:	mov    r12,rax
  4201d4:	mov    eax,DWORD PTR [rsp+0x6c]
  4201d8:	test   eax,eax
  4201da:	jne    0x420551
  4201e0:	mov    r14d,DWORD PTR [rsp+0x68]
  4201e5:	test   r14d,r14d
  4201e8:	jg     0x4203a1
  4201ee:	cmp    DWORD PTR [rsp+0x120],0x2
  4201f6:	jle    0x4203a1
  4201fc:	mov    r11d,DWORD PTR [rsp+0x68]
  420201:	test   r11d,r11d
  420204:	jne    0x420332
  42020a:	xor    r8d,r8d
  42020d:	mov    rcx,r12
  420210:	mov    edx,0x5
  420215:	call   0x4210d0
  42021a:	mov    rcx,rsi
  42021d:	mov    rdx,rax
  420220:	mov    r12,rax
  420223:	call   0x421580
  420228:	test   eax,eax
  42022a:	jle    0x420332
  420230:	mov    ebp,DWORD PTR [rsp+0x30]
  420234:	add    ebp,0x2
  420237:	jmp    0x41ffd2
  42023c:	mov    eax,DWORD PTR [rbp+0x4]
  42023f:	add    eax,0x1
  420242:	cmp    r13d,eax
  420245:	jle    0x420178
  42024b:	add    DWORD PTR [rsp+0x50],0x1
  420250:	add    DWORD PTR [rsp+0x40],0x1
  420255:	mov    ebp,0x1
  42025a:	nop    WORD PTR [rax+rax*1+0x0]
  420260:	mov    edx,DWORD PTR [rsp+0x88]
  420267:	mov    eax,0x1f
  42026c:	test   edx,edx
  42026e:	je     0x42018d
  420274:	jmp    0x42017a
  420279:	nop    DWORD PTR [rax+0x0]
  420280:	cmp    DWORD PTR [rsp+0x120],0x1
  420288:	jg     0x420290
  42028a:	cmp    r14d,0x1
  42028e:	je     0x420294
  420290:	xor    ebp,ebp
  420292:	jmp    0x420260
  420294:	mov    eax,DWORD PTR [rbp+0x4]
  420297:	xor    ebp,ebp
  420299:	add    eax,0x1
  42029c:	cmp    r13d,eax
  42029f:	jle    0x420260
  4202a1:	jmp    0x42024b
  4202a3:	cmp    DWORD PTR [rsp+0x120],0x2
  4202ab:	mov    DWORD PTR [rsp+0x60],0x0
  4202b3:	je     0x41feb0
  4202b9:	pxor   xmm0,xmm0
  4202bd:	mov    QWORD PTR [rsp+0x60],r9
  4202c2:	mov    DWORD PTR [rsp+0x68],r11d
  4202c7:	cvtsi2sd xmm0,edi
  4202cb:	mulsd  xmm0,QWORD PTR [rip+0xcf0d]        # 0x42d1e0
  4202d3:	cvttsd2si ecx,xmm0
  4202d7:	add    ecx,0x3
  4202da:	mov    DWORD PTR [rsp+0x9c],ecx
  4202e1:	call   0x41f660
  4202e6:	mov    QWORD PTR [rsp+0x48],rax
  4202eb:	mov    eax,DWORD PTR [rbp+0xc]
  4202ee:	mov    r11d,DWORD PTR [rsp+0x68]
  4202f3:	mov    r9,QWORD PTR [rsp+0x60]
  4202f8:	sub    eax,0x1
  4202fb:	mov    DWORD PTR [rsp+0x38],eax
  4202ff:	jne    0x4207ad
  420305:	mov    eax,0xffffffff
  42030a:	mov    DWORD PTR [rsp+0x60],0x1
  420312:	mov    DWORD PTR [rsp+0x128],0x0
  42031d:	mov    DWORD PTR [rsp+0x8c],eax
  420324:	mov    DWORD PTR [rsp+0x68],eax
  420328:	jmp    0x41ff60
  42032d:	xor    r12d,r12d
  420330:	xor    edi,edi
  420332:	mov    ebp,DWORD PTR [rsp+0x128]
  420339:	mov    rbx,QWORD PTR [rsp+0x48]
  42033e:	mov    r15d,0x10
  420344:	neg    ebp
  420346:	jmp    0x41ffe4
  42034b:	nop    DWORD PTR [rax+rax*1+0x0]
  420350:	mov    eax,DWORD PTR [rsp+0x30]
  420354:	sub    DWORD PTR [rsp+0x50],eax
  420358:	mov    DWORD PTR [rsp+0x88],0x0
  420363:	neg    eax
  420365:	mov    DWORD PTR [rsp+0x58],eax
  420369:	jmp    0x41fb89
  42036e:	xchg   ax,ax
  420370:	neg    eax
  420372:	mov    DWORD PTR [rsp+0x40],0x0
  42037a:	mov    DWORD PTR [rsp+0x50],eax
  42037e:	jmp    0x41fb6a
  420383:	pxor   xmm0,xmm0
  420387:	cvtsi2sd xmm0,eax
  42038b:	ucomisd xmm0,xmm1
  42038f:	jp     0x420397
  420391:	je     0x41fafb
  420397:	sub    DWORD PTR [rsp+0x30],0x1
  42039c:	jmp    0x41fafb
  4203a1:	mov    r10d,DWORD PTR [rsp+0x60]
  4203a6:	test   r10d,r10d
  4203a9:	je     0x4205b0
  4203af:	lea    edx,[rbx+r13*1]
  4203b3:	test   edx,edx
  4203b5:	jle    0x4203c2
  4203b7:	mov    rcx,rdi
  4203ba:	call   0x421460
  4203bf:	mov    rdi,rax
  4203c2:	test   ebp,ebp
  4203c4:	mov    r13,rdi
  4203c7:	jne    0x420a65
  4203cd:	mov    DWORD PTR [rsp+0x9c],0x1
  4203d8:	mov    rbx,QWORD PTR [rsp+0x48]
  4203dd:	mov    QWORD PTR [rsp+0x40],r12
  4203e2:	mov    QWORD PTR [rsp+0x50],r15
  4203e7:	jmp    0x4204ae
  4203ec:	nop    DWORD PTR [rax+0x0]
  4203f0:	mov    rcx,r8
  4203f3:	call   0x421060
  4203f8:	mov    eax,r12d
  4203fb:	or     eax,DWORD PTR [rsp+0x120]
  420402:	jne    0x42041a
  420404:	mov    ecx,DWORD PTR [rsp+0x38]
  420408:	test   ecx,ecx
  42040a:	jne    0x42041a
  42040c:	mov    rax,QWORD PTR [rsp+0x50]
  420411:	test   BYTE PTR [rax],0x1
  420414:	je     0x420bd5
  42041a:	test   r14d,r14d
  42041d:	js     0x420930
  420423:	or     r14d,DWORD PTR [rsp+0x120]
  42042b:	jne    0x42043b
  42042d:	mov    rax,QWORD PTR [rsp+0x50]
  420432:	test   BYTE PTR [rax],0x1
  420435:	je     0x420930
  42043b:	test   r12d,r12d
  42043e:	jle    0x42044b
  420440:	cmp    DWORD PTR [rsp+0x38],0x2
  420445:	jne    0x420b3f
  42044b:	add    rbx,0x1
  42044f:	mov    BYTE PTR [rbx-0x1],bpl
  420453:	mov    eax,DWORD PTR [rsp+0x68]
  420457:	cmp    DWORD PTR [rsp+0x9c],eax
  42045e:	je     0x420acb
  420464:	xor    r8d,r8d
  420467:	mov    rcx,rsi
  42046a:	mov    edx,0xa
  42046f:	call   0x4210d0
  420474:	xor    r8d,r8d
  420477:	cmp    rdi,r13
  42047a:	mov    rsi,rax
  42047d:	mov    edx,0xa
  420482:	mov    rcx,rdi
  420485:	je     0x420520
  42048b:	call   0x4210d0
  420490:	mov    rcx,r13
  420493:	xor    r8d,r8d
  420496:	mov    edx,0xa
  42049b:	mov    rdi,rax
  42049e:	call   0x4210d0
  4204a3:	mov    r13,rax
  4204a6:	add    DWORD PTR [rsp+0x9c],0x1
  4204ae:	mov    r12,QWORD PTR [rsp+0x40]
  4204b3:	mov    rcx,rsi
  4204b6:	mov    rdx,r12
  4204b9:	call   0x41f700
  4204be:	mov    rdx,rdi
  4204c1:	mov    rcx,rsi
  4204c4:	mov    r15d,eax
  4204c7:	lea    ebp,[rax+0x30]
  4204ca:	call   0x421580
  4204cf:	mov    rcx,r12
  4204d2:	mov    rdx,r13
  4204d5:	mov    r14d,eax
  4204d8:	call   0x4215d0
  4204dd:	mov    r9d,DWORD PTR [rax+0x10]
  4204e1:	mov    r8,rax
  4204e4:	mov    r12d,0x1
  4204ea:	test   r9d,r9d
  4204ed:	jne    0x4203f0
  4204f3:	mov    rdx,rax
  4204f6:	mov    rcx,rsi
  4204f9:	mov    QWORD PTR [rsp+0x58],rax
  4204fe:	call   0x421580
  420503:	mov    r8,QWORD PTR [rsp+0x58]
  420508:	mov    r12d,eax
  42050b:	jmp    0x4203f0
  420510:	mov    r12d,DWORD PTR [rsp+0x58]
  420515:	mov    ebx,DWORD PTR [rsp+0x50]
  420519:	xor    edi,edi
  42051b:	jmp    0x4200bf
  420520:	call   0x4210d0
  420525:	mov    rdi,rax
  420528:	mov    r13,rax
  42052b:	jmp    0x4204a6
  420530:	mov    edx,DWORD PTR [rsp+0x58]
  420534:	mov    rcx,rsi
  420537:	call   0x4212f0
  42053c:	mov    rsi,rax
  42053f:	jmp    0x42013b
  420544:	mov    DWORD PTR [rsp+0x60],0x0
  42054c:	jmp    0x41fbe7
  420551:	mov    rdx,r12
  420554:	mov    rcx,rsi
  420557:	call   0x421580
  42055c:	test   eax,eax
  42055e:	jns    0x4201e0
  420564:	xor    r8d,r8d
  420567:	mov    rcx,rsi
  42056a:	mov    edx,0xa
  42056f:	sub    DWORD PTR [rsp+0x30],0x1
  420574:	call   0x4210d0
  420579:	mov    rsi,rax
  42057c:	mov    eax,DWORD PTR [rsp+0x60]
  420580:	test   eax,eax
  420582:	jne    0x420c48
  420588:	mov    eax,DWORD PTR [rsp+0x8c]
  42058f:	test   eax,eax
  420591:	jg     0x4205a5
  420593:	cmp    DWORD PTR [rsp+0x120],0x2
  42059b:	mov    DWORD PTR [rsp+0x68],eax
  42059f:	jg     0x4201fc
  4205a5:	mov    eax,DWORD PTR [rsp+0x8c]
  4205ac:	mov    DWORD PTR [rsp+0x68],eax
  4205b0:	mov    DWORD PTR [rsp+0x9c],0x1
  4205bb:	mov    rbx,QWORD PTR [rsp+0x48]
  4205c0:	mov    r13d,DWORD PTR [rsp+0x68]
  4205c5:	jmp    0x4205eb
  4205c7:	nop    WORD PTR [rax+rax*1+0x0]
  4205d0:	mov    rcx,rsi
  4205d3:	xor    r8d,r8d
  4205d6:	mov    edx,0xa
  4205db:	call   0x4210d0
  4205e0:	add    DWORD PTR [rsp+0x9c],0x1
  4205e8:	mov    rsi,rax
  4205eb:	mov    rdx,r12
  4205ee:	mov    rcx,rsi
  4205f1:	add    rbx,0x1
  4205f5:	call   0x41f700
  4205fa:	lea    ebp,[rax+0x30]
  4205fd:	mov    BYTE PTR [rbx-0x1],bpl
  420601:	cmp    DWORD PTR [rsp+0x9c],r13d
  420609:	jl     0x4205d0
  42060b:	xor    r14d,r14d
  42060e:	mov    eax,DWORD PTR [rsp+0x38]
  420612:	test   eax,eax
  420614:	je     0x4209dc
  42061a:	cmp    eax,0x2
  42061d:	je     0x420a0c
  420623:	cmp    DWORD PTR [rsi+0x14],0x1
  420627:	jle    0x420ba3
  42062d:	movzx  edx,BYTE PTR [rbx-0x1]
  420631:	mov    rcx,QWORD PTR [rsp+0x48]
  420636:	jmp    0x420650
  420638:	nop    DWORD PTR [rax+rax*1+0x0]
  420640:	cmp    rax,rcx
  420643:	je     0x4207fc
  420649:	movzx  edx,BYTE PTR [rax-0x1]
  42064d:	mov    rbx,rax
  420650:	cmp    dl,0x39
  420653:	lea    rax,[rbx-0x1]
  420657:	je     0x420640
  420659:	add    edx,0x1
  42065c:	mov    r15d,0x20
  420662:	mov    BYTE PTR [rax],dl
  420664:	mov    rcx,r12
  420667:	call   0x421060
  42066c:	test   rdi,rdi
  42066f:	je     0x42075f
  420675:	cmp    r14,rdi
  420678:	je     0x420687
  42067a:	test   r14,r14
  42067d:	je     0x420687
  42067f:	mov    rcx,r14
  420682:	call   0x421060
  420687:	mov    ebp,DWORD PTR [rsp+0x30]
  42068b:	add    ebp,0x1
  42068e:	jmp    0x41fff5
  420693:	mov    QWORD PTR [rsp+0x40],r9
  420698:	mov    rdi,QWORD PTR [rsp+0x48]
  42069d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  4206a3:	mov    DWORD PTR [rsp+0x9c],0x1
  4206ae:	movapd xmm1,xmm0
  4206b2:	mov    rbx,rdi
  4206b5:	add    rbx,0x1
  4206b9:	divsd  xmm1,xmm2
  4206bd:	cvttsd2si eax,xmm1
  4206c1:	pxor   xmm1,xmm1
  4206c5:	cvtsi2sd xmm1,eax
  4206c9:	lea    edx,[rax+0x30]
  4206cc:	mov    BYTE PTR [rdi],dl
  4206ce:	mulsd  xmm1,xmm2
  4206d2:	subsd  xmm0,xmm1
  4206d6:	ucomisd xmm0,xmm6
  4206da:	jp     0x4206de
  4206dc:	je     0x420750
  4206de:	mov    edx,DWORD PTR [rsp+0x9c]
  4206e5:	cmp    DWORD PTR [rsp+0x68],edx
  4206e9:	je     0x4207d7
  4206ef:	movsd  xmm3,QWORD PTR [rip+0xcaf9]        # 0x42d1f0
  4206f7:	movapd xmm4,xmm6
  4206fb:	mov    ecx,DWORD PTR [rsp+0x68]
  4206ff:	jmp    0x420710
  420701:	mov    edx,DWORD PTR [rsp+0x9c]
  420708:	cmp    ecx,edx
  42070a:	je     0x4207d7
  420710:	mulsd  xmm0,xmm3
  420714:	add    edx,0x1
  420717:	add    rbx,0x1
  42071b:	mov    DWORD PTR [rsp+0x9c],edx
  420722:	movapd xmm1,xmm0
  420726:	divsd  xmm1,xmm2
  42072a:	cvttsd2si eax,xmm1
  42072e:	pxor   xmm1,xmm1
  420732:	cvtsi2sd xmm1,eax
  420736:	lea    edx,[rax+0x30]
  420739:	mov    BYTE PTR [rbx-0x1],dl
  42073c:	mulsd  xmm1,xmm2
  420740:	subsd  xmm0,xmm1
  420744:	ucomisd xmm0,xmm6
  420748:	jp     0x420701
  42074a:	ucomisd xmm0,xmm4
  42074e:	jne    0x420701
  420750:	mov    ebp,DWORD PTR [rsp+0x30]
  420754:	add    ebp,0x1
  420757:	xor    r15d,r15d
  42075a:	jmp    0x41fe10
  42075f:	mov    ebp,DWORD PTR [rsp+0x30]
  420763:	add    ebp,0x1
  420766:	jmp    0x41fe10
  42076b:	mov    ebx,0x1
  420770:	mov    DWORD PTR [rsp+0x128],0x1
  42077b:	jmp    0x41feca
  420780:	cmp    DWORD PTR [rsp+0x68],0xe
  420785:	mov    DWORD PTR [rsp+0x9c],0x1
  420790:	mov    ecx,0x1
  420795:	setbe  bl
  420798:	and    ebx,eax
  42079a:	jmp    0x41fc19
  42079f:	mov    r12d,DWORD PTR [rsp+0x58]
  4207a4:	mov    ebx,DWORD PTR [rsp+0x50]
  4207a8:	jmp    0x4200aa
  4207ad:	mov    eax,0xffffffff
  4207b2:	xor    ebx,ebx
  4207b4:	mov    DWORD PTR [rsp+0x60],0x1
  4207bc:	mov    DWORD PTR [rsp+0x8c],eax
  4207c3:	mov    DWORD PTR [rsp+0x68],eax
  4207c7:	mov    DWORD PTR [rsp+0x128],0x0
  4207d2:	jmp    0x41fc43
  4207d7:	mov    r10d,DWORD PTR [rsp+0x38]
  4207dc:	test   r10d,r10d
  4207df:	je     0x420a9e
  4207e5:	cmp    DWORD PTR [rsp+0x38],0x1
  4207ea:	je     0x420b91
  4207f0:	mov    ebp,DWORD PTR [rsp+0x30]
  4207f4:	add    ebp,0x1
  4207f7:	jmp    0x41fe03
  4207fc:	mov    rax,QWORD PTR [rsp+0x48]
  420801:	add    DWORD PTR [rsp+0x30],0x1
  420806:	mov    r15d,0x20
  42080c:	mov    BYTE PTR [rax],0x31
  42080f:	jmp    0x420664
  420814:	mov    ebp,0x2
  420819:	xor    r12d,r12d
  42081c:	xor    edi,edi
  42081e:	jmp    0x41ffd2
  420823:	mov    r10,QWORD PTR [rip+0xccf6]        # 0x42d520
  42082a:	mov    QWORD PTR [rsp+0x38],rax
  42082f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  420835:	mov    DWORD PTR [rsp+0x9c],0x1
  420840:	mov    rbx,QWORD PTR [rsp+0x48]
  420845:	movsd  xmm1,QWORD PTR [rip+0xc9a3]        # 0x42d1f0
  42084d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  420853:	jmp    0x420863
  420855:	mulsd  xmm0,xmm1
  420859:	add    edx,0x1
  42085c:	mov    DWORD PTR [rsp+0x9c],edx
  420863:	cvttsd2si eax,xmm0
  420867:	test   eax,eax
  420869:	je     0x420877
  42086b:	pxor   xmm2,xmm2
  42086f:	cvtsi2sd xmm2,eax
  420873:	subsd  xmm0,xmm2
  420877:	add    rbx,0x1
  42087b:	add    eax,0x30
  42087e:	mov    BYTE PTR [rbx-0x1],al
  420881:	mov    edx,DWORD PTR [rsp+0x9c]
  420888:	cmp    edx,r9d
  42088b:	jne    0x420855
  42088d:	movsd  xmm1,QWORD PTR [rip+0xc98b]        # 0x42d220
  420895:	movapd xmm2,xmm3
  420899:	addsd  xmm2,xmm1
  42089d:	ucomisd xmm0,xmm2
  4208a1:	ja     0x4208f7
  4208a3:	subsd  xmm1,xmm3
  4208a7:	ucomisd xmm1,xmm0
  4208ab:	jbe    0x41ff4e
  4208b1:	ucomisd xmm0,xmm6
  4208b5:	jp     0x420c3d
  4208bb:	jne    0x420c3d
  4208c1:	xor    r15d,r15d
  4208c4:	jmp    0x4208d7
  4208c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208d0:	movzx  eax,BYTE PTR [rbx-0x2]
  4208d4:	mov    rbx,rdx
  4208d7:	cmp    al,0x30
  4208d9:	lea    rdx,[rbx-0x1]
  4208dd:	je     0x4208d0
  4208df:	lea    ebp,[rcx+0x1]
  4208e2:	jmp    0x41fe10
  4208e7:	test   al,0x1
  4208e9:	mov    ecx,DWORD PTR [rsp+0x30]
  4208ed:	movzx  eax,BYTE PTR [rbx-0x1]
  4208f1:	je     0x420c3d
  4208f7:	mov    r8,QWORD PTR [rsp+0x48]
  4208fc:	jmp    0x420910
  4208fe:	xchg   ax,ax
  420900:	cmp    rdx,r8
  420903:	je     0x420a4c
  420909:	movzx  eax,BYTE PTR [rdx-0x1]
  42090d:	mov    rbx,rdx
  420910:	cmp    al,0x39
  420912:	lea    rdx,[rbx-0x1]
  420916:	je     0x420900
  420918:	mov    QWORD PTR [rsp+0x48],r8
  42091d:	add    eax,0x1
  420920:	mov    BYTE PTR [rdx],al
  420922:	lea    ebp,[rcx+0x1]
  420925:	mov    r15d,0x20
  42092b:	jmp    0x41fe10
  420930:	mov    edx,DWORD PTR [rsp+0x38]
  420934:	mov    eax,r12d
  420937:	mov    r14d,ebp
  42093a:	mov    r12,QWORD PTR [rsp+0x40]
  42093f:	test   edx,edx
  420941:	je     0x420b71
  420947:	cmp    DWORD PTR [rsi+0x14],0x1
  42094b:	jle    0x420b67
  420951:	cmp    DWORD PTR [rsp+0x38],0x2
  420956:	jne    0x4209a7
  420958:	jmp    0x420b86
  42095d:	nop    DWORD PTR [rax]
  420960:	add    rbx,0x1
  420964:	xor    r8d,r8d
  420967:	mov    rcx,r13
  42096a:	mov    BYTE PTR [rbx-0x1],r14b
  42096e:	mov    edx,0xa
  420973:	call   0x4210d0
  420978:	cmp    rdi,r13
  42097b:	mov    rcx,rsi
  42097e:	mov    edx,0xa
  420983:	cmove  rdi,rax
  420987:	xor    r8d,r8d
  42098a:	mov    rbp,rax
  42098d:	call   0x4210d0
  420992:	mov    rdx,r12
  420995:	mov    rcx,rax
  420998:	mov    rsi,rax
  42099b:	call   0x41f700
  4209a0:	lea    r14d,[rax+0x30]
  4209a4:	mov    r13,rbp
  4209a7:	mov    rdx,r13
  4209aa:	mov    rcx,r12
  4209ad:	call   0x421580
  4209b2:	test   eax,eax
  4209b4:	jg     0x420960
  4209b6:	cmp    r14d,0x39
  4209ba:	je     0x420bb6
  4209c0:	add    r14d,0x1
  4209c4:	mov    r15d,0x20
  4209ca:	mov    BYTE PTR [rbx],r14b
  4209cd:	mov    r14,rdi
  4209d0:	add    rbx,0x1
  4209d4:	mov    rdi,r13
  4209d7:	jmp    0x420664
  4209dc:	mov    rcx,rsi
  4209df:	mov    edx,0x1
  4209e4:	call   0x421460
  4209e9:	mov    rdx,r12
  4209ec:	mov    rcx,rax
  4209ef:	mov    rsi,rax
  4209f2:	call   0x421580
  4209f7:	cmp    eax,0x0
  4209fa:	jg     0x42062d
  420a00:	jne    0x420a0c
  420a02:	and    bpl,0x1
  420a06:	jne    0x42062d
  420a0c:	cmp    DWORD PTR [rsi+0x14],0x1
  420a10:	mov    r15d,0x10
  420a16:	jg     0x420a23
  420a18:	jmp    0x420cad
  420a1d:	nop    DWORD PTR [rax]
  420a20:	mov    rbx,rax
  420a23:	cmp    BYTE PTR [rbx-0x1],0x30
  420a27:	lea    rax,[rbx-0x1]
  420a2b:	je     0x420a20
  420a2d:	jmp    0x420664
  420a32:	mov    ebx,DWORD PTR [rsp+0x50]
  420a36:	mov    DWORD PTR [rsp+0x9c],0x0
  420a41:	xor    eax,eax
  420a43:	sub    ebx,DWORD PTR [rsp+0x68]
  420a47:	jmp    0x4200aa
  420a4c:	mov    QWORD PTR [rsp+0x48],r8
  420a51:	add    ecx,0x1
  420a54:	mov    BYTE PTR [r8],0x30
  420a58:	mov    rdx,r8
  420a5b:	mov    eax,0x31
  420a60:	jmp    0x420920
  420a65:	mov    ecx,DWORD PTR [rdi+0x8]
  420a68:	call   0x420f50
  420a6d:	lea    rcx,[rax+0x10]
  420a71:	mov    rbx,rax
  420a74:	movsxd rax,DWORD PTR [rdi+0x14]
  420a78:	lea    rdx,[rdi+0x10]
  420a7c:	lea    r8,[rax*4+0x8]
  420a84:	call   0x421e08
  420a89:	mov    edx,0x1
  420a8e:	mov    rcx,rbx
  420a91:	call   0x421460
  420a96:	mov    r13,rax
  420a99:	jmp    0x4203cd
  420a9e:	addsd  xmm0,xmm0
  420aa2:	ucomisd xmm0,xmm2
  420aa6:	ja     0x420b91
  420aac:	ucomisd xmm2,xmm0
  420ab0:	jp     0x420ab8
  420ab2:	je     0x4208e7
  420ab8:	movzx  eax,BYTE PTR [rbx-0x1]
  420abc:	mov    ecx,DWORD PTR [rsp+0x30]
  420ac0:	mov    r15d,0x10
  420ac6:	jmp    0x4208d7
  420acb:	mov    r14,rdi
  420ace:	mov    r12,QWORD PTR [rsp+0x40]
  420ad3:	mov    rdi,r13
  420ad6:	jmp    0x42060e
  420adb:	mov    eax,DWORD PTR [rsp+0x68]
  420adf:	test   eax,eax
  420ae1:	je     0x41feea
  420ae7:	mov    r9d,DWORD PTR [rsp+0x8c]
  420aef:	test   r9d,r9d
  420af2:	jle    0x41ff4e
  420af8:	movsd  xmm0,QWORD PTR [rip+0xc6f0]        # 0x42d1f0
  420b00:	mov    ecx,0xffffffff
  420b05:	movsd  xmm1,QWORD PTR [rip+0xc6eb]        # 0x42d1f8
  420b0d:	mulsd  xmm0,xmm4
  420b11:	mulsd  xmm1,xmm0
  420b15:	addsd  xmm1,QWORD PTR [rip+0xc6e3]        # 0x42d200
  420b1d:	movq   rdx,xmm1
  420b22:	movq   rax,xmm1
  420b27:	shr    rdx,0x20
  420b2b:	mov    eax,eax
  420b2d:	sub    edx,0x3400000
  420b33:	shl    rdx,0x20
  420b37:	or     rax,rdx
  420b3a:	jmp    0x41fcf2
  420b3f:	cmp    ebp,0x39
  420b42:	mov    r12,QWORD PTR [rsp+0x40]
  420b47:	mov    rax,rbx
  420b4a:	je     0x420bb9
  420b4c:	add    ebp,0x1
  420b4f:	mov    r14,rdi
  420b52:	add    rbx,0x1
  420b56:	mov    BYTE PTR [rax],bpl
  420b59:	mov    rdi,r13
  420b5c:	mov    r15d,0x20
  420b62:	jmp    0x420664
  420b67:	cmp    DWORD PTR [rsi+0x18],0x0
  420b6b:	jne    0x420951
  420b71:	test   eax,eax
  420b73:	jg     0x420c09
  420b79:	xor    r15d,r15d
  420b7c:	cmp    DWORD PTR [rsi+0x14],0x1
  420b80:	jle    0x420c88
  420b86:	mov    r15d,0x10
  420b8c:	jmp    0x4209ca
  420b91:	movzx  eax,BYTE PTR [rbx-0x1]
  420b95:	mov    ecx,DWORD PTR [rsp+0x30]
  420b99:	mov    r8,QWORD PTR [rsp+0x48]
  420b9e:	jmp    0x420910
  420ba3:	mov    eax,DWORD PTR [rsi+0x18]
  420ba6:	test   eax,eax
  420ba8:	jne    0x42062d
  420bae:	xor    r15d,r15d
  420bb1:	jmp    0x420a23
  420bb6:	mov    rax,rbx
  420bb9:	mov    r14,rdi
  420bbc:	add    rbx,0x1
  420bc0:	mov    rdi,r13
  420bc3:	mov    BYTE PTR [rax],0x39
  420bc6:	mov    edx,0x39
  420bcb:	mov    rcx,QWORD PTR [rsp+0x48]
  420bd0:	jmp    0x420650
  420bd5:	cmp    ebp,0x39
  420bd8:	mov    r12,QWORD PTR [rsp+0x40]
  420bdd:	mov    rax,rbx
  420be0:	je     0x420bb6
  420be2:	test   r14d,r14d
  420be5:	jle    0x420cc0
  420beb:	mov    ebp,r15d
  420bee:	mov    r15d,0x20
  420bf4:	add    ebp,0x31
  420bf7:	mov    r14,rdi
  420bfa:	add    rbx,0x1
  420bfe:	mov    BYTE PTR [rax],bpl
  420c01:	mov    rdi,r13
  420c04:	jmp    0x420664
  420c09:	mov    rcx,rsi
  420c0c:	mov    edx,0x1
  420c11:	call   0x421460
  420c16:	mov    rdx,r12
  420c19:	mov    rcx,rax
  420c1c:	mov    rsi,rax
  420c1f:	call   0x421580
  420c24:	cmp    eax,0x0
  420c27:	jle    0x420c9a
  420c29:	cmp    ebp,0x39
  420c2c:	je     0x420bb6
  420c2e:	lea    r14d,[rbp+0x1]
  420c32:	mov    r15d,0x20
  420c38:	jmp    0x420b7c
  420c3d:	mov    r15d,0x10
  420c43:	jmp    0x4208d7
  420c48:	xor    r8d,r8d
  420c4b:	mov    rcx,rdi
  420c4e:	mov    edx,0xa
  420c53:	call   0x4210d0
  420c58:	mov    rdi,rax
  420c5b:	mov    eax,DWORD PTR [rsp+0x8c]
  420c62:	test   eax,eax
  420c64:	jg     0x420c78
  420c66:	cmp    DWORD PTR [rsp+0x120],0x2
  420c6e:	mov    DWORD PTR [rsp+0x68],eax
  420c72:	jg     0x4201fc
  420c78:	mov    eax,DWORD PTR [rsp+0x8c]
  420c7f:	mov    DWORD PTR [rsp+0x68],eax
  420c83:	jmp    0x4203af
  420c88:	cmp    DWORD PTR [rsi+0x18],0x0
  420c8c:	mov    eax,0x10
  420c91:	cmovne r15d,eax
  420c95:	jmp    0x4209ca
  420c9a:	jne    0x420ca2
  420c9c:	test   bpl,0x1
  420ca0:	jne    0x420c29
  420ca2:	mov    r15d,0x20
  420ca8:	jmp    0x420b7c
  420cad:	cmp    DWORD PTR [rsi+0x18],0x1
  420cb1:	sbb    r15d,r15d
  420cb4:	not    r15d
  420cb7:	and    r15d,0x10
  420cbb:	jmp    0x420a23
  420cc0:	cmp    DWORD PTR [rsi+0x14],0x1
  420cc4:	mov    r15d,0x10
  420cca:	jg     0x420bf7
  420cd0:	cmp    DWORD PTR [rsi+0x18],0x1
  420cd4:	sbb    r15d,r15d
  420cd7:	not    r15d
  420cda:	and    r15d,0x10
  420cde:	jmp    0x420bf7
  420ce3:	xor    eax,eax
  420ce5:	jmp    0x41f9c7
  420cea:	nop
  420ceb:	nop
  420cec:	nop
  420ced:	nop
  420cee:	nop
  420cef:	nop
  420cf0:	push   rbp
  420cf1:	push   rdi
  420cf2:	push   rsi
  420cf3:	push   rbx
  420cf4:	mov    rsi,rcx
  420cf7:	lea    r10,[rcx+0x18]
  420cfb:	movsxd rcx,DWORD PTR [rcx+0x14]
  420cff:	mov    eax,edx
  420d01:	sar    eax,0x5
  420d04:	cmp    eax,ecx
  420d06:	jge    0x420d90
  420d0c:	cdqe   
  420d0e:	and    edx,0x1f
  420d11:	lea    rbx,[r10+rcx*4]
  420d15:	lea    rdi,[r10+rax*4]
  420d19:	je     0x420da3
  420d1f:	mov    r9d,DWORD PTR [rdi]
  420d22:	lea    r8,[rdi+0x4]
  420d26:	mov    ebp,0x20
  420d2b:	mov    ecx,edx
  420d2d:	sub    ebp,edx
  420d2f:	shr    r9d,cl
  420d32:	cmp    rbx,r8
  420d35:	jbe    0x420de8
  420d3b:	mov    r11,r10
  420d3e:	xchg   ax,ax
  420d40:	mov    eax,DWORD PTR [r8]
  420d43:	mov    ecx,ebp
  420d45:	add    r11,0x4
  420d49:	add    r8,0x4
  420d4d:	shl    eax,cl
  420d4f:	mov    ecx,edx
  420d51:	or     eax,r9d
  420d54:	mov    DWORD PTR [r11-0x4],eax
  420d58:	mov    r9d,DWORD PTR [r8-0x4]
  420d5c:	shr    r9d,cl
  420d5f:	cmp    rbx,r8
  420d62:	ja     0x420d40
  420d64:	sub    rbx,rdi
  420d67:	lea    rax,[rbx-0x5]
  420d6b:	shr    rax,0x2
  420d6f:	lea    rax,[r10+rax*4+0x4]
  420d74:	test   r9d,r9d
  420d77:	mov    DWORD PTR [rax],r9d
  420d7a:	je     0x420d80
  420d7c:	add    rax,0x4
  420d80:	sub    rax,r10
  420d83:	shr    rax,0x2
  420d87:	jmp    0x420ddc
  420d89:	nop    DWORD PTR [rax+0x0]
  420d90:	mov    DWORD PTR [rsi+0x14],0x0
  420d97:	mov    DWORD PTR [rsi+0x18],0x0
  420d9e:	pop    rbx
  420d9f:	pop    rsi
  420da0:	pop    rdi
  420da1:	pop    rbp
  420da2:	ret    
  420da3:	cmp    rbx,rdi
  420da6:	mov    rdx,r10
  420da9:	mov    rax,rdi
  420dac:	jbe    0x420d90
  420dae:	xchg   ax,ax
  420db0:	add    rax,0x4
  420db4:	mov    r8d,DWORD PTR [rax-0x4]
  420db8:	add    rdx,0x4
  420dbc:	cmp    rbx,rax
  420dbf:	mov    DWORD PTR [rdx-0x4],r8d
  420dc3:	ja     0x420db0
  420dc5:	not    rdi
  420dc8:	lea    rax,[rdi+rbx*1]
  420dcc:	shr    rax,0x2
  420dd0:	lea    rax,[rax*4+0x4]
  420dd8:	shr    rax,0x2
  420ddc:	test   eax,eax
  420dde:	mov    DWORD PTR [rsi+0x14],eax
  420de1:	je     0x420d97
  420de3:	pop    rbx
  420de4:	pop    rsi
  420de5:	pop    rdi
  420de6:	pop    rbp
  420de7:	ret    
  420de8:	mov    rax,r10
  420deb:	jmp    0x420d74
  420ded:	nop    DWORD PTR [rax]
  420df0:	movsxd rax,DWORD PTR [rcx+0x14]
  420df4:	lea    rdx,[rcx+0x18]
  420df8:	lea    r8,[rdx+rax*4]
  420dfc:	cmp    rdx,r8
  420dff:	jae    0x420e2b
  420e01:	mov    ecx,DWORD PTR [rcx+0x18]
  420e04:	xor    eax,eax
  420e06:	test   ecx,ecx
  420e08:	je     0x420e16
  420e0a:	jmp    0x420e24
  420e0c:	nop    DWORD PTR [rax+0x0]
  420e10:	mov    ecx,DWORD PTR [rdx]
  420e12:	test   ecx,ecx
  420e14:	jne    0x420e24
  420e16:	add    rdx,0x4
  420e1a:	add    eax,0x20
  420e1d:	cmp    r8,rdx
  420e20:	ja     0x420e10
  420e22:	repz ret 
  420e24:	tzcnt  ecx,ecx
  420e28:	add    eax,ecx
  420e2a:	ret    
  420e2b:	xor    eax,eax
  420e2d:	ret    
  420e2e:	nop
  420e2f:	nop
  420e30:	push   rsi
  420e31:	push   rbx
  420e32:	sub    rsp,0x28
  420e36:	mov    eax,DWORD PTR [rip+0x16194]        # 0x436fd0
  420e3c:	movsxd rsi,ecx
  420e3f:	cmp    eax,0x2
  420e42:	je     0x420ead
  420e44:	test   eax,eax
  420e46:	je     0x420e72
  420e48:	cmp    eax,0x1
  420e4b:	jne    0x420e6b
  420e4d:	mov    rbx,QWORD PTR [rip+0x180b0]        # 0x438f04
  420e54:	mov    ecx,0x1
  420e59:	call   rbx
  420e5b:	mov    eax,DWORD PTR [rip+0x1616f]        # 0x436fd0
  420e61:	cmp    eax,0x1
  420e64:	je     0x420e54
  420e66:	cmp    eax,0x2
  420e69:	je     0x420ead
  420e6b:	add    rsp,0x28
  420e6f:	pop    rbx
  420e70:	pop    rsi
  420e71:	ret    
  420e72:	mov    al,0x1
  420e74:	xchg   DWORD PTR [rip+0x16156],eax        # 0x436fd0
  420e7a:	test   eax,eax
  420e7c:	jne    0x420ed0
  420e7e:	lea    rcx,[rip+0x1617b]        # 0x437000
  420e85:	mov    rbx,QWORD PTR [rip+0x18018]        # 0x438ea4
  420e8c:	call   rbx
  420e8e:	lea    rcx,[rip+0x16193]        # 0x437028
  420e95:	call   rbx
  420e97:	lea    rcx,[rip+0x62]        # 0x420f00
  420e9e:	call   0x41b410
  420ea3:	mov    DWORD PTR [rip+0x16123],0x2        # 0x436fd0
  420ead:	lea    rdx,[rsi+rsi*4]
  420eb1:	lea    rax,[rip+0x16148]        # 0x437000
  420eb8:	lea    rcx,[rax+rdx*8]
  420ebc:	mov    rax,QWORD PTR [rip+0x17f59]        # 0x438e1c
  420ec3:	add    rsp,0x28
  420ec7:	pop    rbx
  420ec8:	pop    rsi
  420ec9:	rex.W jmp rax
  420ecc:	nop    DWORD PTR [rax+0x0]
  420ed0:	cmp    eax,0x2
  420ed3:	je     0x420ef0
  420ed5:	mov    eax,DWORD PTR [rip+0x160f5]        # 0x436fd0
  420edb:	cmp    eax,0x1
  420ede:	je     0x420e4d
  420ee4:	jmp    0x420e66
  420ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ef0:	mov    DWORD PTR [rip+0x160d6],0x2        # 0x436fd0
  420efa:	jmp    0x420ead
  420efc:	nop    DWORD PTR [rax+0x0]
  420f00:	push   rbx
  420f01:	sub    rsp,0x20
  420f05:	mov    eax,0x3
  420f0a:	xchg   DWORD PTR [rip+0x160c0],eax        # 0x436fd0
  420f10:	cmp    eax,0x2
  420f13:	je     0x420f20
  420f15:	add    rsp,0x20
  420f19:	pop    rbx
  420f1a:	ret    
  420f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  420f20:	mov    rbx,QWORD PTR [rip+0x17eed]        # 0x438e14
  420f27:	lea    rcx,[rip+0x160d2]        # 0x437000
  420f2e:	call   rbx
  420f30:	lea    rcx,[rip+0x160f1]        # 0x437028
  420f37:	mov    rax,rbx
  420f3a:	add    rsp,0x20
  420f3e:	pop    rbx
  420f3f:	rex.W jmp rax
  420f42:	nop    DWORD PTR [rax+0x0]
  420f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f50:	push   rdi
  420f51:	push   rsi
  420f52:	push   rbx
  420f53:	sub    rsp,0x20
  420f57:	mov    ebx,ecx
  420f59:	xor    ecx,ecx
  420f5b:	call   0x420e30
  420f60:	cmp    ebx,0x9
  420f63:	jg     0x420fa0
  420f65:	lea    rdx,[rip+0x16014]        # 0x436f80
  420f6c:	movsxd rcx,ebx
  420f6f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  420f73:	test   rdi,rdi
  420f76:	je     0x421000
  420f7c:	cmp    DWORD PTR [rip+0x1604d],0x2        # 0x436fd0
  420f83:	mov    r8,QWORD PTR [rdi]
  420f86:	mov    QWORD PTR [rdx+rcx*8],r8
  420f8a:	jne    0x420fe6
  420f8c:	lea    rcx,[rip+0x1606d]        # 0x437000
  420f93:	call   QWORD PTR [rip+0x17f1b]        # 0x438eb4
  420f99:	jmp    0x420fe6
  420f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  420fa0:	mov    eax,0x1
  420fa5:	mov    ecx,ebx
  420fa7:	shl    eax,cl
  420fa9:	mov    esi,eax
  420fab:	lea    eax,[rax-0x1]
  420fae:	cdqe   
  420fb0:	lea    rdx,[rax*4+0x27]
  420fb8:	shr    rdx,0x3
  420fbc:	mov    edx,edx
  420fbe:	lea    rcx,[rdx*8+0x0]
  420fc6:	call   0x421e18
  420fcb:	test   rax,rax
  420fce:	mov    rdi,rax
  420fd1:	je     0x42105a
  420fd7:	cmp    DWORD PTR [rip+0x15ff2],0x2        # 0x436fd0
  420fde:	mov    DWORD PTR [rdi+0x8],ebx
  420fe1:	mov    DWORD PTR [rdi+0xc],esi
  420fe4:	je     0x420f8c
  420fe6:	mov    DWORD PTR [rdi+0x14],0x0
  420fed:	mov    DWORD PTR [rdi+0x10],0x0
  420ff4:	mov    rax,rdi
  420ff7:	add    rsp,0x20
  420ffb:	pop    rbx
  420ffc:	pop    rsi
  420ffd:	pop    rdi
  420ffe:	ret    
  420fff:	nop
  421000:	mov    ecx,ebx
  421002:	mov    eax,0x1
  421007:	mov    rdi,QWORD PTR [rip+0x2e02]        # 0x423e10
  42100e:	shl    eax,cl
  421010:	lea    rcx,[rip+0x15669]        # 0x436680
  421017:	lea    edx,[rax-0x1]
  42101a:	mov    esi,eax
  42101c:	mov    rax,rdi
  42101f:	movsxd rdx,edx
  421022:	sub    rax,rcx
  421025:	lea    rdx,[rdx*4+0x27]
  42102d:	mov    rcx,rax
  421030:	sar    rcx,0x3
  421034:	shr    rdx,0x3
  421038:	mov    edx,edx
  42103a:	add    rcx,rdx
  42103d:	cmp    rcx,0x120
  421044:	ja     0x420fbe
  42104a:	lea    rdx,[rdi+rdx*8]
  42104e:	mov    QWORD PTR [rip+0x2dbb],rdx        # 0x423e10
  421055:	jmp    0x420fd7
  42105a:	xor    eax,eax
  42105c:	jmp    0x420ff7
  42105e:	xchg   ax,ax
  421060:	push   rbx
  421061:	sub    rsp,0x20
  421065:	test   rcx,rcx
  421068:	je     0x421099
  42106a:	cmp    DWORD PTR [rcx+0x8],0x9
  42106e:	jg     0x4210a0
  421070:	mov    rbx,rcx
  421073:	xor    ecx,ecx
  421075:	call   0x420e30
  42107a:	movsxd rdx,DWORD PTR [rbx+0x8]
  42107e:	lea    rax,[rip+0x15efb]        # 0x436f80
  421085:	cmp    DWORD PTR [rip+0x15f44],0x2        # 0x436fd0
  42108c:	mov    rcx,QWORD PTR [rax+rdx*8]
  421090:	mov    QWORD PTR [rax+rdx*8],rbx
  421094:	mov    QWORD PTR [rbx],rcx
  421097:	je     0x4210b0
  421099:	add    rsp,0x20
  42109d:	pop    rbx
  42109e:	ret    
  42109f:	nop
  4210a0:	add    rsp,0x20
  4210a4:	pop    rbx
  4210a5:	jmp    0x421e50
  4210aa:	nop    WORD PTR [rax+rax*1+0x0]
  4210b0:	mov    rax,QWORD PTR [rip+0x17dfd]        # 0x438eb4
  4210b7:	lea    rcx,[rip+0x15f42]        # 0x437000
  4210be:	add    rsp,0x20
  4210c2:	pop    rbx
  4210c3:	rex.W jmp rax
  4210c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210d0:	push   rbp
  4210d1:	push   rdi
  4210d2:	push   rsi
  4210d3:	push   rbx
  4210d4:	sub    rsp,0x28
  4210d8:	mov    esi,DWORD PTR [rcx+0x14]
  4210db:	xor    r9d,r9d
  4210de:	lea    r10,[rcx+0x18]
  4210e2:	mov    rdi,rcx
  4210e5:	movsxd rbx,r8d
  4210e8:	movsxd rdx,edx
  4210eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4210f0:	mov    eax,DWORD PTR [r10+r9*4]
  4210f4:	imul   rax,rdx
  4210f8:	add    rax,rbx
  4210fb:	mov    rbx,rax
  4210fe:	mov    DWORD PTR [r10+r9*4],eax
  421102:	add    r9,0x1
  421106:	shr    rbx,0x20
  42110a:	cmp    esi,r9d
  42110d:	jg     0x4210f0
  42110f:	test   rbx,rbx
  421112:	mov    rax,rdi
  421115:	je     0x42112c
  421117:	cmp    esi,DWORD PTR [rdi+0xc]
  42111a:	jge    0x421135
  42111c:	movsxd rax,esi
  42111f:	add    esi,0x1
  421122:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421126:	mov    DWORD PTR [rdi+0x14],esi
  421129:	mov    rax,rdi
  42112c:	add    rsp,0x28
  421130:	pop    rbx
  421131:	pop    rsi
  421132:	pop    rdi
  421133:	pop    rbp
  421134:	ret    
  421135:	mov    eax,DWORD PTR [rdi+0x8]
  421138:	lea    ecx,[rax+0x1]
  42113b:	call   0x420f50
  421140:	test   rax,rax
  421143:	mov    rbp,rax
  421146:	je     0x42117e
  421148:	lea    rcx,[rax+0x10]
  42114c:	movsxd rax,DWORD PTR [rdi+0x14]
  421150:	lea    rdx,[rdi+0x10]
  421154:	lea    r8,[rax*4+0x8]
  42115c:	call   0x421e08
  421161:	mov    rcx,rdi
  421164:	mov    rdi,rbp
  421167:	call   0x421060
  42116c:	movsxd rax,esi
  42116f:	add    esi,0x1
  421172:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421176:	mov    DWORD PTR [rdi+0x14],esi
  421179:	mov    rax,rdi
  42117c:	jmp    0x42112c
  42117e:	xor    eax,eax
  421180:	jmp    0x42112c
  421182:	nop    DWORD PTR [rax+0x0]
  421186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421190:	push   rbx
  421191:	sub    rsp,0x20
  421195:	mov    ebx,ecx
  421197:	mov    ecx,0x1
  42119c:	call   0x420f50
  4211a1:	test   rax,rax
  4211a4:	je     0x4211b0
  4211a6:	mov    DWORD PTR [rax+0x18],ebx
  4211a9:	mov    DWORD PTR [rax+0x14],0x1
  4211b0:	add    rsp,0x20
  4211b4:	pop    rbx
  4211b5:	ret    
  4211b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4211c0:	push   r14
  4211c2:	push   r13
  4211c4:	push   r12
  4211c6:	push   rbp
  4211c7:	push   rdi
  4211c8:	push   rsi
  4211c9:	push   rbx
  4211ca:	sub    rsp,0x20
  4211ce:	movsxd r13,DWORD PTR [rcx+0x14]
  4211d2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4211d6:	mov    r12,rcx
  4211d9:	mov    r14,rdx
  4211dc:	cmp    r13d,ebx
  4211df:	jl     0x4212e1
  4211e5:	mov    eax,ebx
  4211e7:	movsxd rbx,r13d
  4211ea:	movsxd r13,eax
  4211ed:	xor    eax,eax
  4211ef:	lea    esi,[rbx+r13*1]
  4211f3:	cmp    esi,DWORD PTR [r12+0xc]
  4211f8:	setg   al
  4211fb:	add    eax,DWORD PTR [r12+0x8]
  421200:	mov    ecx,eax
  421202:	call   0x420f50
  421207:	test   rax,rax
  42120a:	je     0x4212ec
  421210:	lea    rdi,[rax+0x18]
  421214:	movsxd rdx,esi
  421217:	lea    rbp,[rdi+rdx*4]
  42121b:	mov    r8,rdi
  42121e:	cmp    rdi,rbp
  421221:	jae    0x421233
  421223:	mov    DWORD PTR [r8],0x0
  42122a:	add    r8,0x4
  42122e:	cmp    rbp,r8
  421231:	ja     0x421223
  421233:	lea    rdx,[r14+0x18]
  421237:	add    r12,0x18
  42123b:	lea    rbx,[r12+rbx*4]
  42123f:	lea    r13,[rdx+r13*4]
  421243:	cmp    rdx,r13
  421246:	jae    0x4212a9
  421248:	nop    DWORD PTR [rax+rax*1+0x0]
  421250:	add    rdx,0x4
  421254:	mov    r11d,DWORD PTR [rdx-0x4]
  421258:	test   r11d,r11d
  42125b:	je     0x4212a0
  42125d:	mov    r9,rdi
  421260:	mov    r8,r12
  421263:	xor    r10d,r10d
  421266:	jmp    0x421273
  421268:	nop    DWORD PTR [rax+rax*1+0x0]
  421270:	mov    r9,r14
  421273:	add    r8,0x4
  421277:	mov    ecx,DWORD PTR [r8-0x4]
  42127b:	mov    r14d,DWORD PTR [r9]
  42127e:	imul   rcx,r11
  421282:	add    rcx,r14
  421285:	lea    r14,[r9+0x4]
  421289:	add    rcx,r10
  42128c:	mov    r10,rcx
  42128f:	mov    DWORD PTR [r14-0x4],ecx
  421293:	shr    r10,0x20
  421297:	cmp    rbx,r8
  42129a:	ja     0x421270
  42129c:	mov    DWORD PTR [r9+0x4],r10d
  4212a0:	add    rdi,0x4
  4212a4:	cmp    r13,rdx
  4212a7:	ja     0x421250
  4212a9:	test   esi,esi
  4212ab:	jle    0x4212cf
  4212ad:	mov    r8d,DWORD PTR [rbp-0x4]
  4212b1:	lea    rdx,[rbp-0x4]
  4212b5:	test   r8d,r8d
  4212b8:	je     0x4212ca
  4212ba:	jmp    0x4212cf
  4212bc:	nop    DWORD PTR [rax+0x0]
  4212c0:	sub    rdx,0x4
  4212c4:	mov    ecx,DWORD PTR [rdx]
  4212c6:	test   ecx,ecx
  4212c8:	jne    0x4212cf
  4212ca:	sub    esi,0x1
  4212cd:	jne    0x4212c0
  4212cf:	mov    DWORD PTR [rax+0x14],esi
  4212d2:	add    rsp,0x20
  4212d6:	pop    rbx
  4212d7:	pop    rsi
  4212d8:	pop    rdi
  4212d9:	pop    rbp
  4212da:	pop    r12
  4212dc:	pop    r13
  4212de:	pop    r14
  4212e0:	ret    
  4212e1:	mov    r12,rdx
  4212e4:	mov    r14,rcx
  4212e7:	jmp    0x4211ed
  4212ec:	xor    eax,eax
  4212ee:	jmp    0x4212d2
  4212f0:	push   rbp
  4212f1:	push   rdi
  4212f2:	push   rsi
  4212f3:	push   rbx
  4212f4:	sub    rsp,0x28
  4212f8:	mov    eax,edx
  4212fa:	mov    rbp,rcx
  4212fd:	mov    ebx,edx
  4212ff:	and    eax,0x3
  421302:	jne    0x421390
  421308:	sar    ebx,0x2
  42130b:	mov    rax,rbp
  42130e:	test   ebx,ebx
  421310:	je     0x42135c
  421312:	mov    rdi,QWORD PTR [rip+0x15327]        # 0x436640
  421319:	test   rdi,rdi
  42131c:	jne    0x421332
  42131e:	jmp    0x4213dd
  421323:	sar    ebx,1
  421325:	je     0x421359
  421327:	mov    rsi,QWORD PTR [rdi]
  42132a:	test   rsi,rsi
  42132d:	je     0x421365
  42132f:	mov    rdi,rsi
  421332:	test   bl,0x1
  421335:	je     0x421323
  421337:	mov    rdx,rdi
  42133a:	mov    rcx,rbp
  42133d:	call   0x4211c0
  421342:	test   rax,rax
  421345:	mov    rsi,rax
  421348:	je     0x4213b3
  42134a:	mov    rcx,rbp
  42134d:	mov    rbp,rsi
  421350:	call   0x421060
  421355:	sar    ebx,1
  421357:	jne    0x421327
  421359:	mov    rax,rbp
  42135c:	add    rsp,0x28
  421360:	pop    rbx
  421361:	pop    rsi
  421362:	pop    rdi
  421363:	pop    rbp
  421364:	ret    
  421365:	mov    ecx,0x1
  42136a:	call   0x420e30
  42136f:	mov    rsi,QWORD PTR [rdi]
  421372:	test   rsi,rsi
  421375:	je     0x4213be
  421377:	cmp    DWORD PTR [rip+0x15c52],0x2        # 0x436fd0
  42137e:	jne    0x42132f
  421380:	lea    rcx,[rip+0x15ca1]        # 0x437028
  421387:	call   QWORD PTR [rip+0x17b27]        # 0x438eb4
  42138d:	jmp    0x42132f
  42138f:	nop
  421390:	sub    eax,0x1
  421393:	lea    rdx,[rip+0xbea6]        # 0x42d240
  42139a:	xor    r8d,r8d
  42139d:	cdqe   
  42139f:	mov    edx,DWORD PTR [rdx+rax*4]
  4213a2:	call   0x4210d0
  4213a7:	test   rax,rax
  4213aa:	mov    rbp,rax
  4213ad:	jne    0x421308
  4213b3:	xor    eax,eax
  4213b5:	add    rsp,0x28
  4213b9:	pop    rbx
  4213ba:	pop    rsi
  4213bb:	pop    rdi
  4213bc:	pop    rbp
  4213bd:	ret    
  4213be:	mov    rdx,rdi
  4213c1:	mov    rcx,rdi
  4213c4:	call   0x4211c0
  4213c9:	test   rax,rax
  4213cc:	mov    rsi,rax
  4213cf:	mov    QWORD PTR [rdi],rax
  4213d2:	je     0x4213b3
  4213d4:	mov    QWORD PTR [rax],0x0
  4213db:	jmp    0x421377
  4213dd:	mov    ecx,0x1
  4213e2:	call   0x420e30
  4213e7:	mov    rdi,QWORD PTR [rip+0x15252]        # 0x436640
  4213ee:	test   rdi,rdi
  4213f1:	je     0x421412
  4213f3:	cmp    DWORD PTR [rip+0x15bd6],0x2        # 0x436fd0
  4213fa:	jne    0x421332
  421400:	lea    rcx,[rip+0x15c21]        # 0x437028
  421407:	call   QWORD PTR [rip+0x17aa7]        # 0x438eb4
  42140d:	jmp    0x421332
  421412:	mov    ecx,0x1
  421417:	call   0x420f50
  42141c:	test   rax,rax
  42141f:	mov    rdi,rax
  421422:	je     0x421442
  421424:	mov    DWORD PTR [rax+0x18],0x271
  42142b:	mov    DWORD PTR [rax+0x14],0x1
  421432:	mov    QWORD PTR [rip+0x15207],rax        # 0x436640
  421439:	mov    QWORD PTR [rax],0x0
  421440:	jmp    0x4213f3
  421442:	mov    QWORD PTR [rip+0x151f3],0x0        # 0x436640
  42144d:	xor    eax,eax
  42144f:	jmp    0x4213b5
  421454:	xchg   ax,ax
  421456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421460:	push   r13
  421462:	push   r12
  421464:	push   rbp
  421465:	push   rdi
  421466:	push   rsi
  421467:	push   rbx
  421468:	sub    rsp,0x28
  42146c:	mov    rdi,rcx
  42146f:	mov    ebp,edx
  421471:	mov    esi,edx
  421473:	mov    r12d,DWORD PTR [rdi+0x14]
  421477:	sar    ebp,0x5
  42147a:	mov    eax,DWORD PTR [rdi+0xc]
  42147d:	mov    ecx,DWORD PTR [rcx+0x8]
  421480:	add    r12d,ebp
  421483:	lea    ebx,[r12+0x1]
  421488:	cmp    ebx,eax
  42148a:	jle    0x421499
  42148c:	nop    DWORD PTR [rax+0x0]
  421490:	add    eax,eax
  421492:	add    ecx,0x1
  421495:	cmp    ebx,eax
  421497:	jg     0x421490
  421499:	call   0x420f50
  42149e:	test   rax,rax
  4214a1:	mov    r13,rax
  4214a4:	je     0x42156f
  4214aa:	test   ebp,ebp
  4214ac:	lea    r8,[rax+0x18]
  4214b0:	jle    0x421567
  4214b6:	lea    eax,[rbp-0x1]
  4214b9:	lea    r9,[r8+rax*4+0x4]
  4214be:	xchg   ax,ax
  4214c0:	add    r8,0x4
  4214c4:	mov    DWORD PTR [r8-0x4],0x0
  4214cc:	cmp    r8,r9
  4214cf:	jne    0x4214c0
  4214d1:	movsxd rax,DWORD PTR [rdi+0x14]
  4214d5:	lea    r8,[rdi+0x18]
  4214d9:	mov    edx,esi
  4214db:	and    edx,0x1f
  4214de:	lea    rbp,[r8+rax*4]
  4214e2:	je     0x421550
  4214e4:	mov    eax,0x20
  4214e9:	xor    r11d,r11d
  4214ec:	sub    eax,edx
  4214ee:	jmp    0x4214f3
  4214f0:	mov    r9,rsi
  4214f3:	mov    r10d,DWORD PTR [r8]
  4214f6:	mov    ecx,edx
  4214f8:	lea    rsi,[r9+0x4]
  4214fc:	add    r8,0x4
  421500:	shl    r10d,cl
  421503:	mov    ecx,eax
  421505:	or     r10d,r11d
  421508:	mov    DWORD PTR [rsi-0x4],r10d
  42150c:	mov    r11d,DWORD PTR [r8-0x4]
  421510:	shr    r11d,cl
  421513:	cmp    rbp,r8
  421516:	ja     0x4214f0
  421518:	add    r12d,0x2
  42151c:	test   r11d,r11d
  42151f:	mov    DWORD PTR [r9+0x4],r11d
  421523:	cmovne ebx,r12d
  421527:	sub    ebx,0x1
  42152a:	mov    rcx,rdi
  42152d:	mov    DWORD PTR [r13+0x14],ebx
  421531:	call   0x421060
  421536:	mov    rax,r13
  421539:	add    rsp,0x28
  42153d:	pop    rbx
  42153e:	pop    rsi
  42153f:	pop    rdi
  421540:	pop    rbp
  421541:	pop    r12
  421543:	pop    r13
  421545:	ret    
  421546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421550:	add    r8,0x4
  421554:	mov    edx,DWORD PTR [r8-0x4]
  421558:	add    r9,0x4
  42155c:	cmp    rbp,r8
  42155f:	mov    DWORD PTR [r9-0x4],edx
  421563:	ja     0x421550
  421565:	jmp    0x421527
  421567:	mov    r9,r8
  42156a:	jmp    0x4214d1
  42156f:	xor    eax,eax
  421571:	jmp    0x421539
  421573:	nop    DWORD PTR [rax]
  421576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421580:	movsxd r8,DWORD PTR [rdx+0x14]
  421584:	mov    eax,DWORD PTR [rcx+0x14]
  421587:	sub    eax,r8d
  42158a:	test   eax,eax
  42158c:	jne    0x4215c2
  42158e:	shl    r8,0x2
  421592:	add    rcx,0x18
  421596:	lea    rax,[rcx+r8*1]
  42159a:	lea    rdx,[rdx+r8*1+0x18]
  42159f:	jmp    0x4215a6
  4215a1:	cmp    rcx,rax
  4215a4:	jae    0x4215c0
  4215a6:	sub    rdx,0x4
  4215aa:	sub    rax,0x4
  4215ae:	mov    r9d,DWORD PTR [rdx]
  4215b1:	cmp    DWORD PTR [rax],r9d
  4215b4:	je     0x4215a1
  4215b6:	sbb    eax,eax
  4215b8:	or     eax,0x1
  4215bb:	ret    
  4215bc:	nop    DWORD PTR [rax+0x0]
  4215c0:	xor    eax,eax
  4215c2:	repz ret 
  4215c4:	xchg   ax,ax
  4215c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4215d0:	push   rdi
  4215d1:	push   rsi
  4215d2:	push   rbx
  4215d3:	sub    rsp,0x20
  4215d7:	mov    rsi,rcx
  4215da:	mov    rdi,rdx
  4215dd:	call   0x421580
  4215e2:	test   eax,eax
  4215e4:	je     0x4216d0
  4215ea:	mov    ebx,0x0
  4215ef:	js     0x4216f2
  4215f5:	mov    ecx,DWORD PTR [rsi+0x8]
  4215f8:	call   0x420f50
  4215fd:	test   rax,rax
  421600:	je     0x421702
  421606:	movsxd rdx,DWORD PTR [rsi+0x14]
  42160a:	lea    rcx,[rsi+0x18]
  42160e:	mov    DWORD PTR [rax+0x10],ebx
  421611:	lea    r10,[rdi+0x18]
  421615:	xor    r9d,r9d
  421618:	mov    rbx,rdx
  42161b:	lea    rsi,[rcx+rdx*4]
  42161f:	movsxd rdx,DWORD PTR [rdi+0x14]
  421623:	lea    rdi,[r10+rdx*4]
  421627:	lea    rdx,[rax+0x18]
  42162b:	nop    DWORD PTR [rax+rax*1+0x0]
  421630:	add    rcx,0x4
  421634:	add    r10,0x4
  421638:	mov    r11d,DWORD PTR [r10-0x4]
  42163c:	mov    r8d,DWORD PTR [rcx-0x4]
  421640:	add    rdx,0x4
  421644:	sub    r8,r11
  421647:	sub    r8,r9
  42164a:	mov    r9,r8
  42164d:	mov    r11d,r8d
  421650:	mov    DWORD PTR [rdx-0x4],r8d
  421654:	shr    r9,0x20
  421658:	and    r9d,0x1
  42165c:	cmp    rdi,r10
  42165f:	ja     0x421630
  421661:	cmp    rsi,rcx
  421664:	mov    rdi,rdx
  421667:	mov    r10,rcx
  42166a:	jbe    0x4216a6
  42166c:	nop    DWORD PTR [rax+0x0]
  421670:	add    rcx,0x4
  421674:	mov    r8d,DWORD PTR [rcx-0x4]
  421678:	add    rdx,0x4
  42167c:	sub    r8,r9
  42167f:	mov    r9,r8
  421682:	mov    r11d,r8d
  421685:	mov    DWORD PTR [rdx-0x4],r8d
  421689:	shr    r9,0x20
  42168d:	and    r9d,0x1
  421691:	cmp    rsi,rcx
  421694:	ja     0x421670
  421696:	not    r10
  421699:	lea    rdx,[r10+rsi*1]
  42169d:	shr    rdx,0x2
  4216a1:	lea    rdx,[rdi+rdx*4+0x4]
  4216a6:	sub    rdx,0x4
  4216aa:	test   r11d,r11d
  4216ad:	jne    0x4216bd
  4216af:	nop
  4216b0:	sub    rdx,0x4
  4216b4:	mov    ecx,DWORD PTR [rdx]
  4216b6:	sub    ebx,0x1
  4216b9:	test   ecx,ecx
  4216bb:	je     0x4216b0
  4216bd:	mov    DWORD PTR [rax+0x14],ebx
  4216c0:	add    rsp,0x20
  4216c4:	pop    rbx
  4216c5:	pop    rsi
  4216c6:	pop    rdi
  4216c7:	ret    
  4216c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4216d0:	xor    ecx,ecx
  4216d2:	call   0x420f50
  4216d7:	test   rax,rax
  4216da:	je     0x421702
  4216dc:	mov    DWORD PTR [rax+0x14],0x1
  4216e3:	mov    DWORD PTR [rax+0x18],0x0
  4216ea:	add    rsp,0x20
  4216ee:	pop    rbx
  4216ef:	pop    rsi
  4216f0:	pop    rdi
  4216f1:	ret    
  4216f2:	mov    rax,rsi
  4216f5:	mov    bl,0x1
  4216f7:	mov    rsi,rdi
  4216fa:	mov    rdi,rax
  4216fd:	jmp    0x4215f5
  421702:	xor    eax,eax
  421704:	jmp    0x4216c0
  421706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421710:	push   rsi
  421711:	push   rbx
  421712:	sub    rsp,0x18
  421716:	movsxd rax,DWORD PTR [rcx+0x14]
  42171a:	lea    r10,[rcx+0x18]
  42171e:	mov    ecx,0x20
  421723:	lea    r9,[r10+rax*4]
  421727:	mov    eax,DWORD PTR [r9-0x4]
  42172b:	lea    rbx,[r9-0x4]
  42172f:	bsr    r8d,eax
  421733:	xor    r8d,0x1f
  421737:	sub    ecx,r8d
  42173a:	cmp    r8d,0xa
  42173e:	mov    DWORD PTR [rdx],ecx
  421740:	jg     0x421790
  421742:	mov    ecx,0xb
  421747:	mov    r11d,eax
  42174a:	xor    esi,esi
  42174c:	sub    ecx,r8d
  42174f:	shr    r11d,cl
  421752:	or     r11d,0x3ff00000
  421759:	shl    r11,0x20
  42175d:	cmp    r10,rbx
  421760:	jae    0x421768
  421762:	mov    esi,DWORD PTR [r9-0x8]
  421766:	shr    esi,cl
  421768:	lea    ecx,[r8+0x15]
  42176c:	shl    eax,cl
  42176e:	mov    edx,eax
  421770:	mov    eax,esi
  421772:	or     eax,edx
  421774:	or     rax,r11
  421777:	mov    QWORD PTR [rsp+0x8],rax
  42177c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  421782:	add    rsp,0x18
  421786:	pop    rbx
  421787:	pop    rsi
  421788:	ret    
  421789:	nop    DWORD PTR [rax+0x0]
  421790:	cmp    r10,rbx
  421793:	jae    0x4217f0
  421795:	mov    r11d,r8d
  421798:	lea    rsi,[r9-0x8]
  42179c:	mov    edx,DWORD PTR [r9-0x8]
  4217a0:	sub    r11d,0xb
  4217a4:	je     0x421812
  4217a6:	mov    ebx,0x2b
  4217ab:	mov    ecx,r11d
  4217ae:	sub    ebx,r8d
  4217b1:	shl    eax,cl
  4217b3:	mov    r8d,edx
  4217b6:	mov    ecx,ebx
  4217b8:	shr    r8d,cl
  4217bb:	or     eax,r8d
  4217be:	xor    r8d,r8d
  4217c1:	or     eax,0x3ff00000
  4217c6:	shl    rax,0x20
  4217ca:	cmp    r10,rsi
  4217cd:	jae    0x4217d6
  4217cf:	mov    r8d,DWORD PTR [r9-0xc]
  4217d3:	shr    r8d,cl
  4217d6:	mov    ecx,r11d
  4217d9:	shl    edx,cl
  4217db:	or     r8d,edx
  4217de:	movabs rdx,0xffffffff00000000
  4217e8:	and    rax,rdx
  4217eb:	or     rax,r8
  4217ee:	jmp    0x421777
  4217f0:	mov    r11d,r8d
  4217f3:	sub    r11d,0xb
  4217f7:	je     0x421810
  4217f9:	mov    ecx,r11d
  4217fc:	xor    r8d,r8d
  4217ff:	xor    edx,edx
  421801:	shl    eax,cl
  421803:	or     eax,0x3ff00000
  421808:	shl    rax,0x20
  42180c:	jmp    0x4217d6
  42180e:	xchg   ax,ax
  421810:	xor    edx,edx
  421812:	or     eax,0x3ff00000
  421817:	shl    rax,0x20
  42181b:	or     rax,rdx
  42181e:	jmp    0x421777
  421823:	nop    DWORD PTR [rax]
  421826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421830:	push   rdi
  421831:	push   rsi
  421832:	push   rbx
  421833:	sub    rsp,0x20
  421837:	mov    ecx,0x1
  42183c:	movq   rbx,xmm0
  421841:	mov    rdi,rdx
  421844:	mov    rsi,r8
  421847:	call   0x420f50
  42184c:	test   rax,rax
  42184f:	je     0x421935
  421855:	mov    r9,rbx
  421858:	shr    r9,0x20
  42185c:	mov    r10d,r9d
  42185f:	and    r9d,0x7fffffff
  421866:	and    r10d,0xfffff
  42186d:	shr    r9d,0x14
  421871:	mov    edx,r10d
  421874:	or     edx,0x100000
  42187a:	test   r9d,r9d
  42187d:	cmovne r10d,edx
  421881:	test   ebx,ebx
  421883:	jne    0x4218c4
  421885:	xor    ecx,ecx
  421887:	mov    DWORD PTR [rax+0x14],0x1
  42188e:	mov    edx,0x1
  421893:	tzcnt  ecx,r10d
  421898:	shr    r10d,cl
  42189b:	test   r9d,r9d
  42189e:	lea    r11d,[rcx+0x20]
  4218a2:	mov    DWORD PTR [rax+0x18],r10d
  4218a6:	je     0x421903
  4218a8:	lea    edx,[r11+r9*1-0x433]
  4218b0:	mov    DWORD PTR [rdi],edx
  4218b2:	mov    edx,0x35
  4218b7:	sub    edx,r11d
  4218ba:	mov    DWORD PTR [rsi],edx
  4218bc:	add    rsp,0x20
  4218c0:	pop    rbx
  4218c1:	pop    rsi
  4218c2:	pop    rdi
  4218c3:	ret    
  4218c4:	xor    r11d,r11d
  4218c7:	tzcnt  r11d,ebx
  4218cc:	mov    ecx,r11d
  4218cf:	shr    ebx,cl
  4218d1:	test   r11d,r11d
  4218d4:	je     0x421930
  4218d6:	mov    ecx,0x20
  4218db:	mov    edx,r10d
  4218de:	sub    ecx,r11d
  4218e1:	shl    edx,cl
  4218e3:	mov    ecx,r11d
  4218e6:	or     ebx,edx
  4218e8:	shr    r10d,cl
  4218eb:	mov    DWORD PTR [rax+0x18],ebx
  4218ee:	cmp    r10d,0x1
  4218f2:	mov    DWORD PTR [rax+0x1c],r10d
  4218f6:	sbb    edx,edx
  4218f8:	add    edx,0x2
  4218fb:	test   r9d,r9d
  4218fe:	mov    DWORD PTR [rax+0x14],edx
  421901:	jne    0x4218a8
  421903:	movsxd rcx,edx
  421906:	shl    edx,0x5
  421909:	sub    r11d,0x432
  421910:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  421915:	mov    DWORD PTR [rdi],r11d
  421918:	xor    ecx,0x1f
  42191b:	sub    edx,ecx
  42191d:	mov    DWORD PTR [rsi],edx
  42191f:	add    rsp,0x20
  421923:	pop    rbx
  421924:	pop    rsi
  421925:	pop    rdi
  421926:	ret    
  421927:	nop    WORD PTR [rax+rax*1+0x0]
  421930:	mov    DWORD PTR [rax+0x18],ebx
  421933:	jmp    0x4218ee
  421935:	xor    eax,eax
  421937:	jmp    0x4218bc
  421939:	nop    DWORD PTR [rax+0x0]
  421940:	mov    rax,rcx
  421943:	lea    rcx,[rdx+0x1]
  421947:	movzx  edx,BYTE PTR [rdx]
  42194a:	test   dl,dl
  42194c:	mov    BYTE PTR [rax],dl
  42194e:	je     0x421962
  421950:	add    rcx,0x1
  421954:	movzx  edx,BYTE PTR [rcx-0x1]
  421958:	add    rax,0x1
  42195c:	test   dl,dl
  42195e:	mov    BYTE PTR [rax],dl
  421960:	jne    0x421950
  421962:	repz ret 
  421964:	nop
  421965:	nop
  421966:	nop
  421967:	nop
  421968:	nop
  421969:	nop
  42196a:	nop
  42196b:	nop
  42196c:	nop
  42196d:	nop
  42196e:	nop
  42196f:	nop
  421970:	push   rbp
  421971:	push   rdi
  421972:	push   rsi
  421973:	push   rbx
  421974:	sub    rsp,0x48
  421978:	test   rdx,rdx
  42197b:	je     0x421aa3
  421981:	test   r8,r8
  421984:	je     0x421ab0
  42198a:	mov    eax,DWORD PTR [r9]
  42198d:	mov    DWORD PTR [r9],0x0
  421994:	mov    DWORD PTR [rsp+0x30],eax
  421998:	movzx  eax,BYTE PTR [rdx]
  42199b:	test   al,al
  42199d:	je     0x421a40
  4219a3:	cmp    DWORD PTR [rsp+0x98],0x1
  4219ab:	mov    rsi,r9
  4219ae:	mov    rdi,r8
  4219b1:	mov    rbx,rdx
  4219b4:	mov    rbp,rcx
  4219b7:	jbe    0x421a20
  4219b9:	cmp    BYTE PTR [rsp+0x30],0x0
  4219be:	jne    0x421a50
  4219c4:	movzx  edx,al
  4219c7:	mov    ecx,DWORD PTR [rsp+0x90]
  4219ce:	call   QWORD PTR [rip+0x174d8]        # 0x438eac
  4219d4:	test   eax,eax
  4219d6:	je     0x421a20
  4219d8:	cmp    rdi,0x1
  4219dc:	jbe    0x421acc
  4219e2:	mov    DWORD PTR [rsp+0x28],0x1
  4219ea:	mov    QWORD PTR [rsp+0x20],rbp
  4219ef:	mov    r9d,0x2
  4219f5:	mov    r8,rbx
  4219f8:	mov    edx,0x8
  4219fd:	mov    ecx,DWORD PTR [rsp+0x90]
  421a04:	call   QWORD PTR [rip+0x174b2]        # 0x438ebc
  421a0a:	test   eax,eax
  421a0c:	je     0x421ab7
  421a12:	mov    eax,0x2
  421a17:	add    rsp,0x48
  421a1b:	pop    rbx
  421a1c:	pop    rsi
  421a1d:	pop    rdi
  421a1e:	pop    rbp
  421a1f:	ret    
  421a20:	mov    eax,DWORD PTR [rsp+0x90]
  421a27:	test   eax,eax
  421a29:	jne    0x421a70
  421a2b:	movzx  eax,BYTE PTR [rbx]
  421a2e:	mov    WORD PTR [rbp+0x0],ax
  421a32:	mov    eax,0x1
  421a37:	add    rsp,0x48
  421a3b:	pop    rbx
  421a3c:	pop    rsi
  421a3d:	pop    rdi
  421a3e:	pop    rbp
  421a3f:	ret    
  421a40:	xor    edx,edx
  421a42:	xor    eax,eax
  421a44:	mov    WORD PTR [rcx],dx
  421a47:	add    rsp,0x48
  421a4b:	pop    rbx
  421a4c:	pop    rsi
  421a4d:	pop    rdi
  421a4e:	pop    rbp
  421a4f:	ret    
  421a50:	mov    BYTE PTR [rsp+0x31],al
  421a54:	mov    DWORD PTR [rsp+0x28],0x1
  421a5c:	mov    r9d,0x2
  421a62:	mov    QWORD PTR [rsp+0x20],rcx
  421a67:	lea    r8,[rsp+0x30]
  421a6c:	jmp    0x4219f8
  421a6e:	xchg   ax,ax
  421a70:	mov    DWORD PTR [rsp+0x28],0x1
  421a78:	mov    QWORD PTR [rsp+0x20],rbp
  421a7d:	mov    r9d,0x1
  421a83:	mov    r8,rbx
  421a86:	mov    edx,0x8
  421a8b:	mov    ecx,DWORD PTR [rsp+0x90]
  421a92:	call   QWORD PTR [rip+0x17424]        # 0x438ebc
  421a98:	test   eax,eax
  421a9a:	je     0x421ab7
  421a9c:	mov    eax,0x1
  421aa1:	jmp    0x421a47
  421aa3:	xor    eax,eax
  421aa5:	add    rsp,0x48
  421aa9:	pop    rbx
  421aaa:	pop    rsi
  421aab:	pop    rdi
  421aac:	pop    rbp
  421aad:	ret    
  421aae:	xchg   ax,ax
  421ab0:	mov    eax,0xfffffffe
  421ab5:	jmp    0x421a47
  421ab7:	call   0x421f48
  421abc:	mov    DWORD PTR [rax],0x2a
  421ac2:	mov    eax,0xffffffff
  421ac7:	jmp    0x421a47
  421acc:	movzx  eax,BYTE PTR [rbx]
  421acf:	mov    BYTE PTR [rsi],al
  421ad1:	mov    eax,0xfffffffe
  421ad6:	jmp    0x421a47
  421adb:	nop    DWORD PTR [rax+rax*1+0x0]
  421ae0:	push   rbp
  421ae1:	push   rdi
  421ae2:	push   rsi
  421ae3:	push   rbx
  421ae4:	sub    rsp,0x58
  421ae8:	xor    eax,eax
  421aea:	mov    WORD PTR [rsp+0x4e],ax
  421aef:	lea    rax,[rsp+0x4e]
  421af4:	test   rcx,rcx
  421af7:	mov    rbx,rcx
  421afa:	mov    rsi,r9
  421afd:	mov    rdi,rdx
  421b00:	cmove  rbx,rax
  421b04:	mov    rax,QWORD PTR [rip+0xb985]        # 0x42d490
  421b0b:	mov    QWORD PTR [rsp+0x38],r8
  421b10:	mov    rax,QWORD PTR [rax]
  421b13:	mov    ebp,DWORD PTR [rax]
  421b15:	call   0x421fa0
  421b1a:	mov    r8,QWORD PTR [rsp+0x38]
  421b1f:	lea    r9,[rip+0x15562]        # 0x437088
  421b26:	test   rsi,rsi
  421b29:	mov    DWORD PTR [rsp+0x28],ebp
  421b2d:	mov    DWORD PTR [rsp+0x20],eax
  421b31:	mov    rdx,rdi
  421b34:	cmovne r9,rsi
  421b38:	mov    rcx,rbx
  421b3b:	call   0x421970
  421b40:	cdqe   
  421b42:	add    rsp,0x58
  421b46:	pop    rbx
  421b47:	pop    rsi
  421b48:	pop    rdi
  421b49:	pop    rbp
  421b4a:	ret    
  421b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  421b50:	push   r15
  421b52:	push   r14
  421b54:	push   r13
  421b56:	push   r12
  421b58:	push   rbp
  421b59:	push   rdi
  421b5a:	push   rsi
  421b5b:	push   rbx
  421b5c:	sub    rsp,0x48
  421b60:	lea    rax,[rip+0x1551d]        # 0x437084
  421b67:	test   r9,r9
  421b6a:	mov    rdi,r9
  421b6d:	mov    r13,rdx
  421b70:	cmove  rdi,rax
  421b74:	mov    r14,rcx
  421b77:	mov    rsi,r8
  421b7a:	call   0x421fa0
  421b7f:	mov    r12d,eax
  421b82:	mov    rax,QWORD PTR [rip+0xb907]        # 0x42d490
  421b89:	test   r13,r13
  421b8c:	mov    rax,QWORD PTR [rax]
  421b8f:	mov    ebp,DWORD PTR [rax]
  421b91:	je     0x421c15
  421b97:	mov    rdx,QWORD PTR [r13+0x0]
  421b9b:	test   rdx,rdx
  421b9e:	je     0x421c15
  421ba0:	test   r14,r14
  421ba3:	je     0x421c20
  421ba5:	xor    ebx,ebx
  421ba7:	test   rsi,rsi
  421baa:	jne    0x421bca
  421bac:	jmp    0x421c15
  421bae:	xchg   ax,ax
  421bb0:	movsxd r10,eax
  421bb3:	add    r14,0x2
  421bb7:	mov    rdx,r10
  421bba:	add    rdx,QWORD PTR [r13+0x0]
  421bbe:	add    rbx,r10
  421bc1:	cmp    rsi,rbx
  421bc4:	mov    QWORD PTR [r13+0x0],rdx
  421bc8:	jbe    0x421c10
  421bca:	mov    r8,rsi
  421bcd:	mov    DWORD PTR [rsp+0x28],ebp
  421bd1:	mov    DWORD PTR [rsp+0x20],r12d
  421bd6:	sub    r8,rbx
  421bd9:	mov    r9,rdi
  421bdc:	mov    rcx,r14
  421bdf:	call   0x421970
  421be4:	cmp    eax,0x0
  421be7:	jg     0x421bb0
  421be9:	jne    0x421c10
  421beb:	cmp    rbx,rsi
  421bee:	jae    0x421c10
  421bf0:	mov    QWORD PTR [r13+0x0],0x0
  421bf8:	mov    rax,rbx
  421bfb:	add    rsp,0x48
  421bff:	pop    rbx
  421c00:	pop    rsi
  421c01:	pop    rdi
  421c02:	pop    rbp
  421c03:	pop    r12
  421c05:	pop    r13
  421c07:	pop    r14
  421c09:	pop    r15
  421c0b:	ret    
  421c0c:	xor    ebx,ebx
  421c0e:	xchg   ax,ax
  421c10:	mov    rax,rbx
  421c13:	jmp    0x421bfb
  421c15:	xor    eax,eax
  421c17:	jmp    0x421bfb
  421c19:	nop    DWORD PTR [rax+0x0]
  421c20:	xor    eax,eax
  421c22:	test   rsi,rsi
  421c25:	mov    WORD PTR [rsp+0x3e],ax
  421c2a:	je     0x421c0c
  421c2c:	mov    r15d,ebp
  421c2f:	xor    ebx,ebx
  421c31:	lea    r14,[rsp+0x3e]
  421c36:	jmp    0x421c55
  421c38:	nop    DWORD PTR [rax+rax*1+0x0]
  421c40:	cdqe   
  421c42:	mov    rdx,rax
  421c45:	add    rdx,QWORD PTR [r13+0x0]
  421c49:	add    rbx,rax
  421c4c:	cmp    rsi,rbx
  421c4f:	mov    QWORD PTR [r13+0x0],rdx
  421c53:	jbe    0x421c10
  421c55:	mov    DWORD PTR [rsp+0x28],ebp
  421c59:	mov    DWORD PTR [rsp+0x20],r12d
  421c5e:	mov    r9,rdi
  421c61:	mov    r8,r15
  421c64:	mov    rcx,r14
  421c67:	call   0x421970
  421c6c:	test   eax,eax
  421c6e:	jg     0x421c40
  421c70:	jmp    0x421c10
  421c72:	nop    DWORD PTR [rax+0x0]
  421c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c80:	push   rbp
  421c81:	push   rdi
  421c82:	push   rsi
  421c83:	push   rbx
  421c84:	sub    rsp,0x48
  421c88:	xor    eax,eax
  421c8a:	mov    WORD PTR [rsp+0x3e],ax
  421c8f:	mov    rax,QWORD PTR [rip+0xb7fa]        # 0x42d490
  421c96:	mov    rbx,r8
  421c99:	mov    rsi,rcx
  421c9c:	mov    rdi,rdx
  421c9f:	mov    rax,QWORD PTR [rax]
  421ca2:	mov    ebp,DWORD PTR [rax]
  421ca4:	call   0x421fa0
  421ca9:	lea    r9,[rip+0x153d0]        # 0x437080
  421cb0:	test   rbx,rbx
  421cb3:	lea    rcx,[rsp+0x3e]
  421cb8:	mov    DWORD PTR [rsp+0x28],ebp
  421cbc:	mov    DWORD PTR [rsp+0x20],eax
  421cc0:	mov    r8,rdi
  421cc3:	cmovne r9,rbx
  421cc7:	mov    rdx,rsi
  421cca:	call   0x421970
  421ccf:	cdqe   
  421cd1:	add    rsp,0x48
  421cd5:	pop    rbx
  421cd6:	pop    rsi
  421cd7:	pop    rdi
  421cd8:	pop    rbp
  421cd9:	ret    
  421cda:	nop
  421cdb:	nop
  421cdc:	nop
  421cdd:	nop
  421cde:	nop
  421cdf:	nop
  421ce0:	jmp    QWORD PTR [rip+0x17556]        # 0x43923c
  421ce6:	nop
  421ce7:	nop
  421ce8:	jmp    QWORD PTR [rip+0x17546]        # 0x439234
  421cee:	nop
  421cef:	nop
  421cf0:	jmp    QWORD PTR [rip+0x17536]        # 0x43922c
  421cf6:	nop
  421cf7:	nop
  421cf8:	jmp    QWORD PTR [rip+0x17526]        # 0x439224
  421cfe:	nop
  421cff:	nop
  421d00:	jmp    QWORD PTR [rip+0x17516]        # 0x43921c
  421d06:	nop
  421d07:	nop
  421d08:	jmp    QWORD PTR [rip+0x17506]        # 0x439214
  421d0e:	nop
  421d0f:	nop
  421d10:	jmp    QWORD PTR [rip+0x174f6]        # 0x43920c
  421d16:	nop
  421d17:	nop
  421d18:	jmp    QWORD PTR [rip+0x174e6]        # 0x439204
  421d1e:	nop
  421d1f:	nop
  421d20:	jmp    QWORD PTR [rip+0x174d6]        # 0x4391fc
  421d26:	nop
  421d27:	nop
  421d28:	jmp    QWORD PTR [rip+0x174c6]        # 0x4391f4
  421d2e:	nop
  421d2f:	nop
  421d30:	jmp    QWORD PTR [rip+0x174b6]        # 0x4391ec
  421d36:	nop
  421d37:	nop
  421d38:	jmp    QWORD PTR [rip+0x174a6]        # 0x4391e4
  421d3e:	nop
  421d3f:	nop
  421d40:	jmp    QWORD PTR [rip+0x17496]        # 0x4391dc
  421d46:	nop
  421d47:	nop
  421d48:	jmp    QWORD PTR [rip+0x17486]        # 0x4391d4
  421d4e:	nop
  421d4f:	nop
  421d50:	jmp    QWORD PTR [rip+0x17476]        # 0x4391cc
  421d56:	nop
  421d57:	nop
  421d58:	jmp    QWORD PTR [rip+0x17466]        # 0x4391c4
  421d5e:	nop
  421d5f:	nop
  421d60:	jmp    QWORD PTR [rip+0x17456]        # 0x4391bc
  421d66:	nop
  421d67:	nop
  421d68:	jmp    QWORD PTR [rip+0x17446]        # 0x4391b4
  421d6e:	nop
  421d6f:	nop
  421d70:	jmp    QWORD PTR [rip+0x17436]        # 0x4391ac
  421d76:	nop
  421d77:	nop
  421d78:	jmp    QWORD PTR [rip+0x17426]        # 0x4391a4
  421d7e:	nop
  421d7f:	nop
  421d80:	jmp    QWORD PTR [rip+0x17416]        # 0x43919c
  421d86:	nop
  421d87:	nop
  421d88:	jmp    QWORD PTR [rip+0x17406]        # 0x439194
  421d8e:	nop
  421d8f:	nop
  421d90:	jmp    QWORD PTR [rip+0x173f6]        # 0x43918c
  421d96:	nop
  421d97:	nop
  421d98:	jmp    QWORD PTR [rip+0x173e6]        # 0x439184
  421d9e:	nop
  421d9f:	nop
  421da0:	jmp    QWORD PTR [rip+0x173d6]        # 0x43917c
  421da6:	nop
  421da7:	nop
  421da8:	jmp    QWORD PTR [rip+0x173c6]        # 0x439174
  421dae:	nop
  421daf:	nop
  421db0:	jmp    QWORD PTR [rip+0x173b6]        # 0x43916c
  421db6:	nop
  421db7:	nop
  421db8:	jmp    QWORD PTR [rip+0x173a6]        # 0x439164
  421dbe:	nop
  421dbf:	nop
  421dc0:	jmp    QWORD PTR [rip+0x17396]        # 0x43915c
  421dc6:	nop
  421dc7:	nop
  421dc8:	jmp    QWORD PTR [rip+0x17386]        # 0x439154
  421dce:	nop
  421dcf:	nop
  421dd0:	jmp    QWORD PTR [rip+0x17376]        # 0x43914c
  421dd6:	nop
  421dd7:	nop
  421dd8:	jmp    QWORD PTR [rip+0x17366]        # 0x439144
  421dde:	nop
  421ddf:	nop
  421de0:	jmp    QWORD PTR [rip+0x17356]        # 0x43913c
  421de6:	nop
  421de7:	nop
  421de8:	jmp    QWORD PTR [rip+0x17346]        # 0x439134
  421dee:	nop
  421def:	nop
  421df0:	jmp    QWORD PTR [rip+0x17336]        # 0x43912c
  421df6:	nop
  421df7:	nop
  421df8:	jmp    QWORD PTR [rip+0x17326]        # 0x439124
  421dfe:	nop
  421dff:	nop
  421e00:	jmp    QWORD PTR [rip+0x17316]        # 0x43911c
  421e06:	nop
  421e07:	nop
  421e08:	jmp    QWORD PTR [rip+0x17306]        # 0x439114
  421e0e:	nop
  421e0f:	nop
  421e10:	jmp    QWORD PTR [rip+0x172f6]        # 0x43910c
  421e16:	nop
  421e17:	nop
  421e18:	jmp    QWORD PTR [rip+0x172e6]        # 0x439104
  421e1e:	nop
  421e1f:	nop
  421e20:	jmp    QWORD PTR [rip+0x172d6]        # 0x4390fc
  421e26:	nop
  421e27:	nop
  421e28:	jmp    QWORD PTR [rip+0x172c6]        # 0x4390f4
  421e2e:	nop
  421e2f:	nop
  421e30:	jmp    QWORD PTR [rip+0x172b6]        # 0x4390ec
  421e36:	nop
  421e37:	nop
  421e38:	jmp    QWORD PTR [rip+0x172a6]        # 0x4390e4
  421e3e:	nop
  421e3f:	nop
  421e40:	jmp    QWORD PTR [rip+0x17296]        # 0x4390dc
  421e46:	nop
  421e47:	nop
  421e48:	jmp    QWORD PTR [rip+0x17286]        # 0x4390d4
  421e4e:	nop
  421e4f:	nop
  421e50:	jmp    QWORD PTR [rip+0x17276]        # 0x4390cc
  421e56:	nop
  421e57:	nop
  421e58:	jmp    QWORD PTR [rip+0x17266]        # 0x4390c4
  421e5e:	nop
  421e5f:	nop
  421e60:	jmp    QWORD PTR [rip+0x17256]        # 0x4390bc
  421e66:	nop
  421e67:	nop
  421e68:	jmp    QWORD PTR [rip+0x17246]        # 0x4390b4
  421e6e:	nop
  421e6f:	nop
  421e70:	jmp    QWORD PTR [rip+0x17236]        # 0x4390ac
  421e76:	nop
  421e77:	nop
  421e78:	jmp    QWORD PTR [rip+0x17226]        # 0x4390a4
  421e7e:	nop
  421e7f:	nop
  421e80:	jmp    QWORD PTR [rip+0x17216]        # 0x43909c
  421e86:	nop
  421e87:	nop
  421e88:	jmp    QWORD PTR [rip+0x17206]        # 0x439094
  421e8e:	nop
  421e8f:	nop
  421e90:	jmp    QWORD PTR [rip+0x171f6]        # 0x43908c
  421e96:	nop
  421e97:	nop
  421e98:	jmp    QWORD PTR [rip+0x171e6]        # 0x439084
  421e9e:	nop
  421e9f:	nop
  421ea0:	jmp    QWORD PTR [rip+0x171d6]        # 0x43907c
  421ea6:	nop
  421ea7:	nop
  421ea8:	jmp    QWORD PTR [rip+0x171c6]        # 0x439074
  421eae:	nop
  421eaf:	nop
  421eb0:	jmp    QWORD PTR [rip+0x171b6]        # 0x43906c
  421eb6:	nop
  421eb7:	nop
  421eb8:	jmp    QWORD PTR [rip+0x171a6]        # 0x439064
  421ebe:	nop
  421ebf:	nop
  421ec0:	jmp    QWORD PTR [rip+0x17196]        # 0x43905c
  421ec6:	nop
  421ec7:	nop
  421ec8:	jmp    QWORD PTR [rip+0x17186]        # 0x439054
  421ece:	nop
  421ecf:	nop
  421ed0:	jmp    QWORD PTR [rip+0x17176]        # 0x43904c
  421ed6:	nop
  421ed7:	nop
  421ed8:	jmp    QWORD PTR [rip+0x17166]        # 0x439044
  421ede:	nop
  421edf:	nop
  421ee0:	jmp    QWORD PTR [rip+0x17156]        # 0x43903c
  421ee6:	nop
  421ee7:	nop
  421ee8:	jmp    QWORD PTR [rip+0x17146]        # 0x439034
  421eee:	nop
  421eef:	nop
  421ef0:	jmp    QWORD PTR [rip+0x17136]        # 0x43902c
  421ef6:	nop
  421ef7:	nop
  421ef8:	jmp    QWORD PTR [rip+0x17126]        # 0x439024
  421efe:	nop
  421eff:	nop
  421f00:	jmp    QWORD PTR [rip+0x17116]        # 0x43901c
  421f06:	nop
  421f07:	nop
  421f08:	jmp    QWORD PTR [rip+0x17106]        # 0x439014
  421f0e:	nop
  421f0f:	nop
  421f10:	jmp    QWORD PTR [rip+0x170f6]        # 0x43900c
  421f16:	nop
  421f17:	nop
  421f18:	jmp    QWORD PTR [rip+0x170e6]        # 0x439004
  421f1e:	nop
  421f1f:	nop
  421f20:	jmp    QWORD PTR [rip+0x170d6]        # 0x438ffc
  421f26:	nop
  421f27:	nop
  421f28:	jmp    QWORD PTR [rip+0x170c6]        # 0x438ff4
  421f2e:	nop
  421f2f:	nop
  421f30:	jmp    QWORD PTR [rip+0x170ae]        # 0x438fe4
  421f36:	nop
  421f37:	nop
  421f38:	jmp    QWORD PTR [rip+0x1709e]        # 0x438fdc
  421f3e:	nop
  421f3f:	nop
  421f40:	jmp    QWORD PTR [rip+0x1708e]        # 0x438fd4
  421f46:	nop
  421f47:	nop
  421f48:	jmp    QWORD PTR [rip+0x1707e]        # 0x438fcc
  421f4e:	nop
  421f4f:	nop
  421f50:	jmp    QWORD PTR [rip+0x1706e]        # 0x438fc4
  421f56:	nop
  421f57:	nop
  421f58:	jmp    QWORD PTR [rip+0x1705e]        # 0x438fbc
  421f5e:	nop
  421f5f:	nop
  421f60:	jmp    QWORD PTR [rip+0x1704e]        # 0x438fb4
  421f66:	nop
  421f67:	nop
  421f68:	jmp    QWORD PTR [rip+0x1703e]        # 0x438fac
  421f6e:	nop
  421f6f:	nop
  421f70:	jmp    QWORD PTR [rip+0x17026]        # 0x438f9c
  421f76:	nop
  421f77:	nop
  421f78:	jmp    QWORD PTR [rip+0x17016]        # 0x438f94
  421f7e:	nop
  421f7f:	nop
  421f80:	jmp    QWORD PTR [rip+0x16ffe]        # 0x438f84
  421f86:	nop
  421f87:	nop
  421f88:	jmp    QWORD PTR [rip+0x16fee]        # 0x438f7c
  421f8e:	nop
  421f8f:	nop
  421f90:	jmp    QWORD PTR [rip+0x16fd6]        # 0x438f6c
  421f96:	nop
  421f97:	nop
  421f98:	jmp    QWORD PTR [rip+0x16fc6]        # 0x438f64
  421f9e:	nop
  421f9f:	nop
  421fa0:	jmp    QWORD PTR [rip+0x16fb6]        # 0x438f5c
  421fa6:	nop
  421fa7:	nop
  421fa8:	jmp    QWORD PTR [rip+0x16fa6]        # 0x438f54
  421fae:	nop
  421faf:	nop
  421fb0:	mov    rax,QWORD PTR [rip+0x150d9]        # 0x437090
  421fb7:	ret    
  421fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  421fc0:	mov    rax,rcx
  421fc3:	xchg   QWORD PTR [rip+0x150c6],rax        # 0x437090
  421fca:	ret    
  421fcb:	nop
  421fcc:	nop
  421fcd:	nop
  421fce:	nop
  421fcf:	nop
  421fd0:	mov    eax,DWORD PTR [rip+0x150ca]        # 0x4370a0
  421fd6:	ret    
  421fd7:	nop    WORD PTR [rax+rax*1+0x0]
  421fe0:	mov    eax,ecx
  421fe2:	xchg   DWORD PTR [rip+0x150b8],eax        # 0x4370a0
  421fe8:	ret    
  421fe9:	nop    DWORD PTR [rax+0x0]
  421ff0:	push   rbx
  421ff1:	sub    rsp,0x20
  421ff5:	mov    ebx,ecx
  421ff7:	lea    rcx,[rip+0xb3c2]        # 0x42d3c0
  421ffe:	call   QWORD PTR [rip+0x16e70]        # 0x438e74
  422004:	lea    rdx,[rip+0xb3cb]        # 0x42d3d6
  42200b:	mov    rcx,rax
  42200e:	call   QWORD PTR [rip+0x16e70]        # 0x438e84
  422014:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x421fe0
  42201b:	test   rax,rax
  42201e:	mov    ecx,ebx
  422020:	cmove  rax,rdx
  422024:	mov    QWORD PTR [rip+0x1e0d],rax        # 0x423e38
  42202b:	add    rsp,0x20
  42202f:	pop    rbx
  422030:	rex.W jmp rax
  422033:	nop    DWORD PTR [rax]
  422036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422040:	sub    rsp,0x28
  422044:	lea    rcx,[rip+0xb375]        # 0x42d3c0
  42204b:	call   QWORD PTR [rip+0x16e23]        # 0x438e74
  422051:	lea    rdx,[rip+0xb391]        # 0x42d3e9
  422058:	mov    rcx,rax
  42205b:	call   QWORD PTR [rip+0x16e23]        # 0x438e84
  422061:	lea    rdx,[rip+0xffffffffffffff68]        # 0x421fd0
  422068:	test   rax,rax
  42206b:	cmove  rax,rdx
  42206f:	mov    QWORD PTR [rip+0x1dba],rax        # 0x423e30
  422076:	add    rsp,0x28
  42207a:	rex.W jmp rax
  42207d:	nop    DWORD PTR [rax]
  422080:	mov    rax,QWORD PTR [rip+0x1db1]        # 0x423e38
  422087:	rex.W jmp rax
  42208a:	nop    WORD PTR [rax+rax*1+0x0]
  422090:	mov    rax,QWORD PTR [rip+0x1d99]        # 0x423e30
  422097:	rex.W jmp rax
  42209a:	nop
  42209b:	nop
  42209c:	nop
  42209d:	nop
  42209e:	nop
  42209f:	nop
  4220a0:	jmp    QWORD PTR [rip+0x171e6]        # 0x43928c
  4220a6:	nop
  4220a7:	nop
  4220a8:	jmp    QWORD PTR [rip+0x171d6]        # 0x439284
  4220ae:	nop
  4220af:	nop
  4220b0:	jmp    QWORD PTR [rip+0x171c6]        # 0x43927c
  4220b6:	nop
  4220b7:	nop
  4220b8:	jmp    QWORD PTR [rip+0x171b6]        # 0x439274
  4220be:	nop
  4220bf:	nop
  4220c0:	jmp    QWORD PTR [rip+0x171a6]        # 0x43926c
  4220c6:	nop
  4220c7:	nop
  4220c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220d0:	jmp    QWORD PTR [rip+0x16e6e]        # 0x438f44
  4220d6:	nop
  4220d7:	nop
  4220d8:	jmp    QWORD PTR [rip+0x16e5e]        # 0x438f3c
  4220de:	nop
  4220df:	nop
  4220e0:	jmp    QWORD PTR [rip+0x16e4e]        # 0x438f34
  4220e6:	nop
  4220e7:	nop
  4220e8:	jmp    QWORD PTR [rip+0x16e3e]        # 0x438f2c
  4220ee:	nop
  4220ef:	nop
  4220f0:	jmp    QWORD PTR [rip+0x16e2e]        # 0x438f24
  4220f6:	nop
  4220f7:	nop
  4220f8:	jmp    QWORD PTR [rip+0x16e1e]        # 0x438f1c
  4220fe:	nop
  4220ff:	nop
  422100:	jmp    QWORD PTR [rip+0x16e0e]        # 0x438f14
  422106:	nop
  422107:	nop
  422108:	jmp    QWORD PTR [rip+0x16dfe]        # 0x438f0c
  42210e:	nop
  42210f:	nop
  422110:	jmp    QWORD PTR [rip+0x16dee]        # 0x438f04
  422116:	nop
  422117:	nop
  422118:	jmp    QWORD PTR [rip+0x16dde]        # 0x438efc
  42211e:	nop
  42211f:	nop
  422120:	jmp    QWORD PTR [rip+0x16dce]        # 0x438ef4
  422126:	nop
  422127:	nop
  422128:	jmp    QWORD PTR [rip+0x16dbe]        # 0x438eec
  42212e:	nop
  42212f:	nop
  422130:	jmp    QWORD PTR [rip+0x16dae]        # 0x438ee4
  422136:	nop
  422137:	nop
  422138:	jmp    QWORD PTR [rip+0x16d9e]        # 0x438edc
  42213e:	nop
  42213f:	nop
  422140:	jmp    QWORD PTR [rip+0x16d8e]        # 0x438ed4
  422146:	nop
  422147:	nop
  422148:	jmp    QWORD PTR [rip+0x16d7e]        # 0x438ecc
  42214e:	nop
  42214f:	nop
  422150:	jmp    QWORD PTR [rip+0x16d6e]        # 0x438ec4
  422156:	nop
  422157:	nop
  422158:	jmp    QWORD PTR [rip+0x16d5e]        # 0x438ebc
  42215e:	nop
  42215f:	nop
  422160:	jmp    QWORD PTR [rip+0x16d4e]        # 0x438eb4
  422166:	nop
  422167:	nop
  422168:	jmp    QWORD PTR [rip+0x16d3e]        # 0x438eac
  42216e:	nop
  42216f:	nop
  422170:	jmp    QWORD PTR [rip+0x16d2e]        # 0x438ea4
  422176:	nop
  422177:	nop
  422178:	jmp    QWORD PTR [rip+0x16d1e]        # 0x438e9c
  42217e:	nop
  42217f:	nop
  422180:	jmp    QWORD PTR [rip+0x16d0e]        # 0x438e94
  422186:	nop
  422187:	nop
  422188:	jmp    QWORD PTR [rip+0x16cfe]        # 0x438e8c
  42218e:	nop
  42218f:	nop
  422190:	jmp    QWORD PTR [rip+0x16cee]        # 0x438e84
  422196:	nop
  422197:	nop
  422198:	jmp    QWORD PTR [rip+0x16cde]        # 0x438e7c
  42219e:	nop
  42219f:	nop
  4221a0:	jmp    QWORD PTR [rip+0x16cce]        # 0x438e74
  4221a6:	nop
  4221a7:	nop
  4221a8:	jmp    QWORD PTR [rip+0x16cbe]        # 0x438e6c
  4221ae:	nop
  4221af:	nop
  4221b0:	jmp    QWORD PTR [rip+0x16cae]        # 0x438e64
  4221b6:	nop
  4221b7:	nop
  4221b8:	jmp    QWORD PTR [rip+0x16c9e]        # 0x438e5c
  4221be:	nop
  4221bf:	nop
  4221c0:	jmp    QWORD PTR [rip+0x16c8e]        # 0x438e54
  4221c6:	nop
  4221c7:	nop
  4221c8:	jmp    QWORD PTR [rip+0x16c7e]        # 0x438e4c
  4221ce:	nop
  4221cf:	nop
  4221d0:	jmp    QWORD PTR [rip+0x16c6e]        # 0x438e44
  4221d6:	nop
  4221d7:	nop
  4221d8:	jmp    QWORD PTR [rip+0x16c5e]        # 0x438e3c
  4221de:	nop
  4221df:	nop
  4221e0:	jmp    QWORD PTR [rip+0x16c4e]        # 0x438e34
  4221e6:	nop
  4221e7:	nop
  4221e8:	jmp    QWORD PTR [rip+0x16c3e]        # 0x438e2c
  4221ee:	nop
  4221ef:	nop
  4221f0:	jmp    QWORD PTR [rip+0x16c2e]        # 0x438e24
  4221f6:	nop
  4221f7:	nop
  4221f8:	jmp    QWORD PTR [rip+0x16c1e]        # 0x438e1c
  4221fe:	nop
  4221ff:	nop
  422200:	jmp    QWORD PTR [rip+0x16c0e]        # 0x438e14
  422206:	nop
  422207:	nop
  422208:	jmp    QWORD PTR [rip+0x16bfe]        # 0x438e0c
  42220e:	nop
  42220f:	nop
  422210:	push   r15
  422212:	push   r14
  422214:	push   r13
  422216:	push   r12
  422218:	push   rbp
  422219:	push   rdi
  42221a:	push   rsi
  42221b:	push   rbx
  42221c:	sub    rsp,0xd8
  422223:	mov    ebx,ecx
  422225:	mov    rsi,rdx
  422228:	call   0x41b4d0
  42222d:	mov    rcx,QWORD PTR [rip+0xb3ac]        # 0x42d5e0
  422234:	mov    edx,ebx
  422236:	mov    r8,rsi
  422239:	mov    QWORD PTR [rsp+0x60],0x0
  422242:	mov    QWORD PTR [rsp+0x68],0x0
  42224b:	mov    QWORD PTR [rsp+0x70],0x0
  422254:	mov    QWORD PTR [rsp+0x78],0x0
  42225d:	call   0x413490
  422262:	sub    ebx,eax
  422264:	mov    ecx,ebx
  422266:	xor    ebx,ebx
  422268:	test   ecx,ecx
  42226a:	jle    0x422272
  42226c:	cdqe   
  42226e:	mov    rbx,QWORD PTR [rsi+rax*8]
  422272:	mov    rsi,QWORD PTR [rip+0xb367]        # 0x42d5e0
  422279:	mov    rax,QWORD PTR [rsi+0x78]
  42227d:	test   BYTE PTR [rax+0xe0],0xf
  422284:	je     0x4226fe
  42228a:	mov    eax,DWORD PTR [rax+0xe8]
  422290:	mov    DWORD PTR [rip+0x14e52],eax        # 0x4370e8
  422296:	lea    rax,[rip+0x1d6d]        # 0x42400a
  42229d:	test   rbx,rbx
  4222a0:	cmove  rbx,rax
  4222a4:	mov    rax,QWORD PTR [rsi+0x78]
  4222a8:	mov    QWORD PTR [rip+0x10d89],rbx        # 0x433038
  4222af:	test   BYTE PTR [rax+0x10],0xf
  4222b3:	je     0x4222be
  4222b5:	mov    edx,DWORD PTR [rax+0x18]
  4222b8:	mov    DWORD PTR [rip+0x10d82],edx        # 0x433040
  4222be:	test   BYTE PTR [rax+0x78],0xf
  4222c2:	je     0x4222cb
  4222c4:	add    DWORD PTR [rip+0x10d65],0x1        # 0x433030
  4222cb:	call   0x4058a0
  4222d0:	call   0x407ad0
  4222d5:	test   eax,eax
  4222d7:	js     0x42277a
  4222dd:	lea    rcx,[rip+0xfffffffffffdf27c]        # 0x401560
  4222e4:	call   0x407ac8
  4222e9:	mov    ecx,DWORD PTR [rip+0x10d51]        # 0x433040
  4222ef:	call   0x407ac0
  4222f4:	lea    rax,[rsp+0x50]
  4222f9:	mov    r9d,DWORD PTR [rip+0x14de8]        # 0x4370e8
  422300:	lea    r8,[rip+0x1d34]        # 0x42403b
  422307:	mov    edx,0x6
  42230c:	mov    rcx,rax
  42230f:	mov    QWORD PTR [rsp+0x40],rax
  422314:	call   0x414cf0
  422319:	lea    rcx,[rip+0x14db0]        # 0x4370d0
  422320:	call   0x407c08
  422325:	test   eax,eax
  422327:	js     0x42279a
  42232d:	lea    rcx,[rip+0x14da4]        # 0x4370d8
  422334:	call   0x4078e8
  422339:	test   eax,eax
  42233b:	js     0x42279a
  422341:	lea    rcx,[rip+0x14d78]        # 0x4370c0
  422348:	call   0x407c28
  42234d:	test   eax,eax
  42234f:	js     0x42279a
  422355:	mov    rax,QWORD PTR [rsi+0x78]
  422359:	lea    r12,[rsp+0x60]
  42235e:	test   BYTE PTR [rax+0x1b0],0xf
  422365:	jne    0x422743
  42236b:	cmp    BYTE PTR [rsp+0x60],0x0
  422370:	je     0x422716
  422376:	call   0x4058a0
  42237b:	xor    ecx,ecx
  42237d:	lea    r14,[rip+0x1d1e]        # 0x4240a2
  422384:	lea    rbp,[rip+0x25b5]        # 0x424940
  42238b:	call   0x407bb0
  422390:	lea    rcx,[rip+0x1d1e]        # 0x4240b5
  422397:	mov    rdx,rax
  42239a:	xor    ebx,ebx
  42239c:	call   0x401640
  4223a1:	mov    r8,QWORD PTR [rsp+0x40]
  4223a6:	mov    rdx,QWORD PTR [rip+0x10c8b]        # 0x433038
  4223ad:	lea    rcx,[rip+0x1d19]        # 0x4240cd
  4223b4:	call   0x401640
  4223b9:	lea    rax,[rsp+0x80]
  4223c1:	mov    r15,QWORD PTR [rip+0x16bb4]        # 0x438f7c
  4223c8:	mov    QWORD PTR [rsp+0x38],rax
  4223cd:	lea    rax,[rsp+0x58]
  4223d2:	mov    QWORD PTR [rsp+0x48],rax
  4223d7:	nop    WORD PTR [rax+rax*1+0x0]
  4223e0:	mov    rdi,QWORD PTR [rsp+0x38]
  4223e5:	mov    r8,QWORD PTR [rsp+0x40]
  4223ea:	xor    r9d,r9d
  4223ed:	mov    rdx,QWORD PTR [rip+0x10c44]        # 0x433038
  4223f4:	mov    QWORD PTR [rsp+0x20],0x0
  4223fd:	mov    rcx,rdi
  422400:	call   0x4055d0
  422405:	mov    eax,DWORD PTR [rip+0x10c25]        # 0x433030
  42240b:	mov    rdx,r12
  42240e:	mov    rcx,rdi
  422411:	mov    DWORD PTR [rsp+0xc0],eax
  422418:	call   0x4050f0
  42241d:	mov    rcx,QWORD PTR [rsp+0x48]
  422422:	mov    edx,0x12
  422427:	call   0x407a90
  42242c:	mov    ecx,DWORD PTR [rsp+0x80]
  422433:	call   0x414c80
  422438:	mov    rcx,QWORD PTR [rsp+0x58]
  42243d:	mov    rdx,rax
  422440:	call   0x4078b0
  422445:	mov    rsi,QWORD PTR [rsp+0x58]
  42244a:	lea    rdx,[rip+0xfffffffffffdf1df]        # 0x401630
  422451:	mov    rcx,rsi
  422454:	call   0x407898
  422459:	lea    rdx,[rip+0xfffffffffffdf1c0]        # 0x401620
  422460:	mov    rcx,rsi
  422463:	call   0x4078a8
  422468:	lea    rdx,[rip+0xfffffffffffdf121]        # 0x401590
  42246f:	mov    rcx,rsi
  422472:	call   0x4078a0
  422477:	mov    rsi,QWORD PTR [rip+0x10bba]        # 0x433038
  42247e:	test   rsi,rsi
  422481:	je     0x4224a4
  422483:	mov    rcx,rsi
  422486:	call   0x421d98
  42248b:	mov    edx,0x3a
  422490:	mov    rcx,rsi
  422493:	mov    rdi,rax
  422496:	call   0x421dc0
  42249b:	test   rax,rax
  42249e:	je     0x4226c0
  4224a4:	movsxd rax,ebx
  4224a7:	mov    r13d,0x6
  4224ad:	nop    DWORD PTR [rax]
  4224b0:	mov    rsi,r12
  4224b3:	mov    rdi,r14
  4224b6:	mov    rcx,r13
  4224b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4224bb:	je     0x4224d1
  4224bd:	lea    rdx,[rax+rax*2]
  4224c1:	shl    rdx,0x4
  4224c5:	mov    edx,DWORD PTR [rbp+rdx*1+0x28]
  4224c9:	test   edx,edx
  4224cb:	jne    0x4226a0
  4224d1:	lea    rsi,[rax+rax*2]
  4224d5:	mov    rcx,QWORD PTR [rsp+0x58]
  4224da:	shl    rsi,0x4
  4224de:	add    rsi,rbp
  4224e1:	call   QWORD PTR [rsi+0x8]
  4224e4:	cmp    eax,0x3
  4224e7:	je     0x422600
  4224ed:	mov    rdx,QWORD PTR [rsi]
  4224f0:	lea    rcx,[rip+0x1bb1]        # 0x4240a8
  4224f7:	mov    edi,eax
  4224f9:	call   0x401640
  4224fe:	call   r15
  422501:	lea    rcx,[rax+0x30]
  422505:	call   0x421e80
  42250a:	test   edi,edi
  42250c:	jne    0x4225d0
  422512:	mov    rdx,QWORD PTR [rsi+0x10]
  422516:	test   rdx,rdx
  422519:	je     0x422673
  42251f:	lea    rcx,[rip+0x1b8a]        # 0x4240b0
  422526:	call   0x401640
  42252b:	add    ebx,0x1
  42252e:	movsxd rax,ebx
  422531:	lea    rax,[rax+rax*2]
  422535:	shl    rax,0x4
  422539:	mov    rsi,QWORD PTR [rbp+rax*1+0x0]
  42253e:	mov    rcx,QWORD PTR [rsp+0x58]
  422543:	call   0x407b68
  422548:	mov    rcx,QWORD PTR [rsp+0x38]
  42254d:	call   0x405500
  422552:	test   rsi,rsi
  422555:	je     0x422634
  42255b:	cmp    ebx,0xa
  42255e:	jle    0x4223e0
  422564:	mov    rax,QWORD PTR [rip+0xb125]        # 0x42d690
  42256b:	mov    r10d,DWORD PTR [rax]
  42256e:	test   r10d,r10d
  422571:	jne    0x4223e0
  422577:	mov    rax,QWORD PTR [rip+0xb102]        # 0x42d680
  42257e:	mov    r9d,DWORD PTR [rax]
  422581:	test   r9d,r9d
  422584:	jne    0x4223e0
  42258a:	mov    rax,QWORD PTR [rip+0xb10f]        # 0x42d6a0
  422591:	mov    r8d,DWORD PTR [rax]
  422594:	test   r8d,r8d
  422597:	jne    0x4223e0
  42259d:	mov    rax,QWORD PTR [rip+0xb0cc]        # 0x42d670
  4225a4:	mov    ecx,DWORD PTR [rax]
  4225a6:	test   ecx,ecx
  4225a8:	jne    0x4223e0
  4225ae:	call   QWORD PTR [rip+0x169c8]        # 0x438f7c
  4225b4:	lea    rdx,[rip+0x1a9d]        # 0x424058
  4225bb:	lea    rcx,[rax+0x60]
  4225bf:	call   0x401530
  4225c4:	jmp    0x422634
  4225c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4225d0:	cmp    edi,0x1
  4225d3:	je     0x422690
  4225d9:	cmp    edi,0x2
  4225dc:	jne    0x42252b
  4225e2:	mov    rdx,QWORD PTR [rsi+0x20]
  4225e6:	lea    rcx,[rip+0x1ac3]        # 0x4240b0
  4225ed:	call   0x401640
  4225f2:	jmp    0x42252b
  4225f7:	nop    WORD PTR [rax+rax*1+0x0]
  422600:	add    ebx,0x1
  422603:	lea    rcx,[rip+0x2336]        # 0x424940
  42260a:	movsxd rax,ebx
  42260d:	lea    rdx,[rax+rax*2]
  422611:	shl    rdx,0x4
  422615:	cmp    QWORD PTR [rcx+rdx*1],0x0
  42261a:	jne    0x4224b0
  422620:	mov    rcx,QWORD PTR [rsp+0x58]
  422625:	call   0x407b68
  42262a:	mov    rcx,QWORD PTR [rsp+0x38]
  42262f:	call   0x405500
  422634:	mov    rcx,QWORD PTR [rip+0x14a9d]        # 0x4370d8
  42263b:	call   0x4078e0
  422640:	mov    rcx,QWORD PTR [rip+0x14a89]        # 0x4370d0
  422647:	call   0x407bf8
  42264c:	mov    rcx,QWORD PTR [rip+0x14a6d]        # 0x4370c0
  422653:	call   0x407c20
  422658:	call   0x407ad8
  42265d:	xor    eax,eax
  42265f:	add    rsp,0xd8
  422666:	pop    rbx
  422667:	pop    rsi
  422668:	pop    rdi
  422669:	pop    rbp
  42266a:	pop    r12
  42266c:	pop    r13
  42266e:	pop    r14
  422670:	pop    r15
  422672:	ret    
  422673:	mov    rax,QWORD PTR [rip+0xaf56]        # 0x42d5d0
  42267a:	lea    rcx,[rip+0x1a2f]        # 0x4240b0
  422681:	mov    rdx,QWORD PTR [rax]
  422684:	call   0x401640
  422689:	jmp    0x42252b
  42268e:	xchg   ax,ax
  422690:	mov    rdx,QWORD PTR [rsi+0x18]
  422694:	jmp    0x42251f
  422699:	nop    DWORD PTR [rax+0x0]
  4226a0:	add    ebx,0x2
  4226a3:	lea    rdx,[rip+0x2296]        # 0x424940
  4226aa:	movsxd rax,ebx
  4226ad:	lea    rax,[rax+rax*2]
  4226b1:	shl    rax,0x4
  4226b5:	mov    rsi,QWORD PTR [rdx+rax*1]
  4226b9:	jmp    0x42253e
  4226be:	xchg   ax,ax
  4226c0:	cmp    edi,0x2
  4226c3:	jle    0x4226e4
  4226c5:	movsx  eax,BYTE PTR [rsi]
  4226c8:	sub    eax,0x30
  4226cb:	cmp    eax,0x9
  4226ce:	ja     0x4226e4
  4226d0:	movsxd rax,edi
  4226d3:	movsx  eax,BYTE PTR [rsi+rax*1-0x1]
  4226d8:	sub    eax,0x30
  4226db:	cmp    eax,0x9
  4226de:	jbe    0x4224a4
  4226e4:	mov    rcx,QWORD PTR [rsp+0x58]
  4226e9:	mov    r9,rdi
  4226ec:	mov    r8,rsi
  4226ef:	mov    edx,0x1
  4226f4:	call   0x407950
  4226f9:	jmp    0x4224a4
  4226fe:	test   BYTE PTR [rax+0x1b0],0xf
  422705:	jne    0x422763
  422707:	mov    DWORD PTR [rip+0x149d7],0x1bb        # 0x4370e8
  422711:	jmp    0x422296
  422716:	mov    rcx,QWORD PTR [rsp+0x40]
  42271b:	lea    rdx,[rip+0x192d]        # 0x42404f
  422722:	call   0x4058d0
  422727:	lea    r8,[rip+0x191e]        # 0x42404c
  42272e:	mov    r9,rax
  422731:	mov    edx,0x20
  422736:	mov    rcx,r12
  422739:	call   0x414cf0
  42273e:	jmp    0x422376
  422743:	mov    r9,QWORD PTR [rax+0x1b8]
  42274a:	lea    r8,[rip+0x18fb]        # 0x42404c
  422751:	mov    edx,0x20
  422756:	mov    rcx,r12
  422759:	call   0x414cf0
  42275e:	jmp    0x42236b
  422763:	mov    rcx,QWORD PTR [rax+0x1b8]
  42276a:	call   0x405460
  42276f:	mov    DWORD PTR [rip+0x14973],eax        # 0x4370e8
  422775:	jmp    0x422296
  42277a:	call   QWORD PTR [rip+0x167fc]        # 0x438f7c
  422780:	lea    rdx,[rip+0x1891]        # 0x424018
  422787:	lea    rcx,[rax+0x60]
  42278b:	call   0x401530
  422790:	mov    ecx,0x1
  422795:	call   0x421e98
  42279a:	call   QWORD PTR [rip+0x167dc]        # 0x438f7c
  4227a0:	lea    rdx,[rip+0x1897]        # 0x42403e
  4227a7:	lea    rcx,[rax+0x60]
  4227ab:	call   0x401530
  4227b0:	mov    ecx,0x1
  4227b5:	call   0x421e98
  4227ba:	nop
  4227bb:	nop
  4227bc:	nop
  4227bd:	nop
  4227be:	nop
  4227bf:	nop
  4227c0:	(bad)  
  4227c1:	(bad)  
  4227c2:	(bad)  
  4227c3:	(bad)  
  4227c4:	(bad)  
  4227c5:	(bad)  
  4227c6:	(bad)  
  4227c7:	inc    DWORD PTR [rax]
  4227c9:	add    BYTE PTR [rax],al
  4227cb:	add    BYTE PTR [rax],al
  4227cd:	add    BYTE PTR [rax],al
  4227cf:	add    bh,bh
  4227d1:	(bad)  
  4227d2:	(bad)  
  4227d3:	(bad)  
  4227d4:	(bad)  
  4227d5:	(bad)  
  4227d6:	(bad)  
  4227d7:	inc    DWORD PTR [rax]
  4227d9:	add    BYTE PTR [rax],al
  4227db:	add    BYTE PTR [rax],al
  4227dd:	add    BYTE PTR [rax],al
	...
