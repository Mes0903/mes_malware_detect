
4e3b3bf5ee097fdbf0b595a37261eb70683a3c59e15e6aa616e313a7134a48ea.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x2c615]        # 0x42d630
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x2c616]        # 0x42d640
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x2c619]        # 0x42d650
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2c5dc]        # 0x42d620
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2c41f]        # 0x42d470
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x2c5b1]        # 0x42d610
  40105f:	mov    DWORD PTR [rip+0x31fa3],edx        # 0x433008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x421f78
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x41b920
  401081:	mov    rdx,QWORD PTR [rip+0x2c488]        # 0x42d510
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2c46e]        # 0x42d500
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x2c4e4]        # 0x42d580
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2c40b]        # 0x42d4b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x41b500
  4010af:	mov    rax,QWORD PTR [rip+0x2c36a]        # 0x42d420
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x421f78
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1a6d9]        # 0x41b800
  401127:	call   0x41b7f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x2c445]        # 0x42d5b0
  40116b:	lea    r8,[rip+0x31ea6]        # 0x433018
  401172:	lea    rdx,[rip+0x31ea7]        # 0x433020
  401179:	lea    rcx,[rip+0x31ea8]        # 0x433028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x31e78],eax        # 0x433000
  401188:	lea    rax,[rip+0x31e71]        # 0x433000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x2c3d5]        # 0x42d570
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x421f90
  4011a3:	mov    DWORD PTR [rip+0x31e67],eax        # 0x433010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2c44a]        # 0x42d610
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2c2eb]        # 0x42d4e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x37d02]        # 0x438f04
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x2c2c7]        # 0x42d4f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x31dba],0x1        # 0x433004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2c1fc]        # 0x42d460
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x41bb10
  40127d:	lea    rcx,[rip+0x1ae2c]        # 0x41c0b0
  401284:	call   QWORD PTR [rip+0x37c72]        # 0x438efc
  40128a:	mov    rdx,QWORD PTR [rip+0x2c23f]        # 0x42d4d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x41bfc0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x421fc0
  4012a5:	call   0x41b900
  4012aa:	mov    rax,QWORD PTR [rip+0x2c1bf]        # 0x42d470
  4012b1:	mov    QWORD PTR [rip+0x35e00],rax        # 0x4370b8
  4012b8:	mov    rax,QWORD PTR [rip+0x2c1e1]        # 0x42d4a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x35d99],rax        # 0x4370b0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x21cca],eax        # 0x423000
  401336:	mov    r12d,DWORD PTR [rip+0x31ceb]        # 0x433028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x421e18
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x31cc2]        # 0x433020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x421d98
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x421e18
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x421e08
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x31c6a],rbp        # 0x433020
  4013b6:	call   0x41b4d0
  4013bb:	mov    rax,QWORD PTR [rip+0x2c0be]        # 0x42d480
  4013c2:	mov    rdx,QWORD PTR [rip+0x31c4f]        # 0x433018
  4013c9:	mov    ecx,DWORD PTR [rip+0x31c59]        # 0x433028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x31c3c]        # 0x433018
  4013dc:	mov    rdx,QWORD PTR [rip+0x31c3d]        # 0x433020
  4013e3:	call   0x422210
  4013e8:	mov    ecx,DWORD PTR [rip+0x31c1a]        # 0x433008
  4013ee:	mov    DWORD PTR [rip+0x31c18],eax        # 0x43300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x31c02]        # 0x433004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x421f60
  40140b:	mov    eax,DWORD PTR [rip+0x31bfb]        # 0x43300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2c0b9]        # 0x42d4f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x421f68
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2c0dd]        # 0x42d540
  401463:	mov    rcx,QWORD PTR [rip+0x2c0c6]        # 0x42d530
  40146a:	call   0x421f08
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x379f3]        # 0x438e8c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2c0b9]        # 0x42d560
  4014a7:	mov    rcx,QWORD PTR [rip+0x2c0a2]        # 0x42d550
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x421f08
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x421e98
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2c135]        # 0x42d610
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x41b510
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2c105]        # 0x42d610
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x41b510
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    QWORD PTR [rsp+0x50],r8
  401539:	lea    r8,[rsp+0x50]
  40153e:	mov    QWORD PTR [rsp+0x58],r9
  401543:	mov    QWORD PTR [rsp+0x28],r8
  401548:	call   0x41d2d0
  40154d:	add    rsp,0x38
  401551:	ret    
  401552:	nop    DWORD PTR [rax+0x0]
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	push   rsi
  401561:	push   rbx
  401562:	sub    rsp,0x28
  401566:	mov    ebx,ecx
  401568:	mov    rsi,rdx
  40156b:	call   QWORD PTR [rip+0x37a0b]        # 0x438f7c
  401571:	lea    rdx,[rip+0x22a88]        # 0x424000
  401578:	lea    rcx,[rax+0x60]
  40157c:	mov    r9,rsi
  40157f:	mov    r8d,ebx
  401582:	add    rsp,0x28
  401586:	pop    rbx
  401587:	pop    rsi
  401588:	jmp    0x401530
  40158a:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x258
  401597:	imul   edx,edx,0x3e8
  40159d:	movsxd rax,ecx
  4015a0:	mov    DWORD PTR [rsp+0x40],0x1
  4015a8:	mov    QWORD PTR [rsp+0x48],rax
  4015ad:	mov    QWORD PTR [rsp+0x30],0x0
  4015b6:	mov    eax,0x1
  4015bb:	cmp    edx,0xf423f
  4015c1:	mov    DWORD PTR [rsp+0x38],edx
  4015c5:	jle    0x4015ee
  4015c7:	nop    WORD PTR [rax+rax*1+0x0]
  4015d0:	sub    edx,0xf4240
  4015d6:	mov    r8,rax
  4015d9:	add    rax,0x1
  4015dd:	cmp    edx,0xf423f
  4015e3:	jg     0x4015d0
  4015e5:	mov    DWORD PTR [rsp+0x38],edx
  4015e9:	mov    QWORD PTR [rsp+0x30],r8
  4015ee:	lea    rax,[rsp+0x30]
  4015f3:	lea    rdx,[rsp+0x40]
  4015f8:	add    ecx,0x1
  4015fb:	xor    r9d,r9d
  4015fe:	xor    r8d,r8d
  401601:	mov    QWORD PTR [rsp+0x20],rax
  401606:	call   0x4185d0
  40160b:	add    rsp,0x258
  401612:	ret    
  401613:	nop    DWORD PTR [rax]
  401616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401620:	xor    r9d,r9d
  401623:	jmp    0x417e10
  401628:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	xor    r9d,r9d
  401633:	jmp    0x4192c0
  401638:	nop    DWORD PTR [rax+rax*1+0x0]
  401640:	sub    rsp,0x38
  401644:	mov    QWORD PTR [rsp+0x48],rdx
  401649:	lea    rdx,[rsp+0x48]
  40164e:	mov    QWORD PTR [rsp+0x50],r8
  401653:	mov    QWORD PTR [rsp+0x58],r9
  401658:	mov    QWORD PTR [rsp+0x28],rdx
  40165d:	call   0x41d300
  401662:	add    rsp,0x38
  401666:	ret    
  401667:	nop
  401668:	nop
  401669:	nop
  40166a:	nop
  40166b:	nop
  40166c:	nop
  40166d:	nop
  40166e:	nop
  40166f:	nop
  401670:	sub    rsp,0x38
  401674:	mov    QWORD PTR [rsp+0x50],r8
  401679:	lea    r8,[rsp+0x50]
  40167e:	mov    QWORD PTR [rsp+0x58],r9
  401683:	mov    QWORD PTR [rsp+0x28],r8
  401688:	call   0x41d2d0
  40168d:	add    rsp,0x38
  401691:	ret    
  401692:	nop    DWORD PTR [rax+0x0]
  401696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016a0:	sub    rsp,0x38
  4016a4:	mov    QWORD PTR [rsp+0x48],rdx
  4016a9:	lea    rdx,[rsp+0x48]
  4016ae:	mov    QWORD PTR [rsp+0x50],r8
  4016b3:	mov    QWORD PTR [rsp+0x58],r9
  4016b8:	mov    QWORD PTR [rsp+0x28],rdx
  4016bd:	call   0x41d300
  4016c2:	add    rsp,0x38
  4016c6:	ret    
  4016c7:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	push   rsi
  4016d1:	push   rbx
  4016d2:	sub    rsp,0x28
  4016d6:	mov    rsi,rcx
  4016d9:	jmp    0x4016ef
  4016db:	nop    DWORD PTR [rax+rax*1+0x0]
  4016e0:	mov    ecx,eax
  4016e2:	call   0x407ae0
  4016e7:	test   eax,eax
  4016e9:	jne    0x401784
  4016ef:	mov    rcx,rsi
  4016f2:	call   0x407ab8
  4016f7:	test   eax,eax
  4016f9:	mov    ebx,eax
  4016fb:	js     0x4016e0
  4016fd:	lea    r8,[rip+0x32fec]        # 0x4346f0
  401704:	xor    edx,edx
  401706:	mov    rcx,rsi
  401709:	mov    DWORD PTR [rip+0x32fd1],eax        # 0x4346e0
  40170f:	call   0x407930
  401714:	mov    eax,DWORD PTR [rip+0x32fca]        # 0x4346e4
  40171a:	test   eax,eax
  40171c:	jne    0x4017b0
  401722:	mov    rcx,QWORD PTR [rip+0x32fc7]        # 0x4346f0
  401729:	call   0x4145c0
  40172e:	test   rax,rax
  401731:	mov    QWORD PTR [rip+0x32fe8],rax        # 0x434720
  401738:	mov    DWORD PTR [rip+0x32fa2],0x1        # 0x4346e4
  401742:	je     0x4017fb
  401748:	lea    r8,[rip+0x32fa1]        # 0x4346f0
  40174f:	mov    rcx,rsi
  401752:	mov    rdx,rax
  401755:	call   0x407930
  40175a:	lea    r8,[rip+0x32f87]        # 0x4346e8
  401761:	lea    rdx,[rip+0x32f98]        # 0x434700
  401768:	mov    rcx,rsi
  40176b:	mov    QWORD PTR [rip+0x32f72],0x20        # 0x4346e8
  401776:	call   0x407920
  40177b:	xor    eax,eax
  40177d:	add    rsp,0x28
  401781:	pop    rbx
  401782:	pop    rsi
  401783:	ret    
  401784:	cmp    ebx,0xfffffff4
  401787:	mov    DWORD PTR [rip+0x32f53],ebx        # 0x4346e0
  40178d:	jne    0x40179b
  40178f:	mov    rax,QWORD PTR [rip+0x2bf1a]        # 0x42d6b0
  401796:	cmp    DWORD PTR [rax],0x1
  401799:	ja     0x4017cb
  40179b:	mov    eax,0x1
  4017a0:	add    rsp,0x28
  4017a4:	pop    rbx
  4017a5:	pop    rsi
  4017a6:	ret    
  4017a7:	nop    WORD PTR [rax+rax*1+0x0]
  4017b0:	mov    rcx,QWORD PTR [rip+0x32f69]        # 0x434720
  4017b7:	call   0x421e50
  4017bc:	mov    DWORD PTR [rip+0x32f1e],0x0        # 0x4346e4
  4017c6:	jmp    0x401722
  4017cb:	mov    rcx,rsi
  4017ce:	call   0x407c40
  4017d3:	lea    rcx,[rip+0x23b26]        # 0x425300
  4017da:	mov    ebx,eax
  4017dc:	call   0x4016a0
  4017e1:	mov    ecx,ebx
  4017e3:	call   0x407c38
  4017e8:	lea    rcx,[rip+0x23b13]        # 0x425302
  4017ef:	mov    r8,rax
  4017f2:	mov    edx,ebx
  4017f4:	call   0x4016a0
  4017f9:	jmp    0x40179b
  4017fb:	call   QWORD PTR [rip+0x3777b]        # 0x438f7c
  401801:	lea    rdx,[rip+0x23b17]        # 0x42531f
  401808:	lea    rcx,[rax+0x60]
  40180c:	call   0x401670
  401811:	mov    ecx,0x1
  401816:	call   0x421e98
  40181b:	nop
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	push   r13
  401822:	push   r12
  401824:	push   rbp
  401825:	push   rdi
  401826:	push   rsi
  401827:	push   rbx
  401828:	sub    rsp,0x138
  40182f:	mov    rsi,rcx
  401832:	mov    r12d,edx
  401835:	lea    rcx,[rip+0x23af3]        # 0x42532f
  40183c:	lea    rdx,[rip+0x23aea]        # 0x42532d
  401843:	call   0x421e78
  401848:	test   rax,rax
  40184b:	mov    rbp,rax
  40184e:	je     0x4018d3
  401854:	lea    rcx,[rip+0x23aa5]        # 0x425300
  40185b:	call   0x4016a0
  401860:	test   r12d,r12d
  401863:	jle    0x4018e3
  401865:	lea    rdx,[rip+0x23ad4]        # 0x425340
  40186c:	lea    r13,[rsp+0x28]
  401871:	lea    rdi,[rsp+0x30]
  401876:	mov    rcx,rbp
  401879:	xor    ebx,ebx
  40187b:	call   0x401670
  401880:	mov    r8,r13
  401883:	mov    rdx,rdi
  401886:	mov    rcx,rsi
  401889:	mov    QWORD PTR [rsp+0x28],0x100
  401892:	call   0x407860
  401897:	test   eax,eax
  401899:	js     0x4018bf
  40189b:	lea    rdx,[rip+0x23aff]        # 0x4253a1
  4018a2:	mov    r8d,ebx
  4018a5:	mov    rcx,rbp
  4018a8:	call   0x401670
  4018ad:	lea    rdx,[rip+0x23af7]        # 0x4253ab
  4018b4:	mov    r8,rdi
  4018b7:	mov    rcx,rbp
  4018ba:	call   0x401670
  4018bf:	add    ebx,0x1
  4018c2:	add    rsi,0x10
  4018c6:	cmp    ebx,r12d
  4018c9:	jne    0x401880
  4018cb:	mov    rcx,rbp
  4018ce:	call   0x421e90
  4018d3:	add    rsp,0x138
  4018da:	pop    rbx
  4018db:	pop    rsi
  4018dc:	pop    rdi
  4018dd:	pop    rbp
  4018de:	pop    r12
  4018e0:	pop    r13
  4018e2:	ret    
  4018e3:	lea    rdx,[rip+0x23a7e]        # 0x425368
  4018ea:	mov    rcx,rbp
  4018ed:	call   0x401670
  4018f2:	jmp    0x4018cb
  4018f4:	xchg   ax,ax
  4018f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401900:	sub    rsp,0x28
  401904:	mov    rax,QWORD PTR [rip+0x2bda5]        # 0x42d6b0
  40190b:	mov    eax,DWORD PTR [rax]
  40190d:	test   eax,eax
  40190f:	je     0x40191c
  401911:	mov    rcx,rdx
  401914:	mov    edx,r8d
  401917:	call   0x401820
  40191c:	mov    eax,0xffffffff
  401921:	add    rsp,0x28
  401925:	ret    
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	sub    rsp,0x38
  401934:	lea    rcx,[rip+0x31745]        # 0x433080
  40193b:	mov    QWORD PTR [rsp+0x50],r8
  401940:	lea    r8,[rsp+0x50]
  401945:	mov    QWORD PTR [rsp+0x58],r9
  40194a:	mov    QWORD PTR [rsp+0x28],r8
  40194f:	call   0x41d3a0
  401954:	add    rsp,0x38
  401958:	ret    
  401959:	nop    DWORD PTR [rax+0x0]
  401960:	push   rdi
  401961:	push   rsi
  401962:	push   rbx
  401963:	sub    rsp,0x50
  401967:	movabs rax,0x5448202f20544547
  401971:	lea    r9,[rip+0x216c8]        # 0x423040
  401978:	lea    r8,[rip+0x21781]        # 0x423100
  40197f:	mov    rbx,rcx
  401982:	mov    QWORD PTR [rsp+0x30],rax
  401987:	lea    rdx,[rip+0x23a22]        # 0x4253b0
  40198e:	movabs rax,0xa0d302e312f5054
  401998:	lea    rcx,[rip+0x316e1]        # 0x433080
  40199f:	mov    BYTE PTR [rsp+0x42],0x0
  4019a4:	mov    QWORD PTR [rsp+0x38],rax
  4019a9:	mov    eax,0xa0d
  4019ae:	mov    BYTE PTR [rip+0x32d0a],0x0        # 0x4346bf
  4019b5:	mov    WORD PTR [rsp+0x40],ax
  4019ba:	call   0x401930
  4019bf:	lea    r8,[rsp+0x28]
  4019c4:	lea    rdx,[rip+0x316b5]        # 0x433080
  4019cb:	mov    rcx,rbx
  4019ce:	call   0x4079d0
  4019d3:	test   eax,eax
  4019d5:	mov    esi,eax
  4019d7:	js     0x401ac1
  4019dd:	mov    rax,QWORD PTR [rip+0x2bcdc]        # 0x42d6c0
  4019e4:	mov    edx,0x1
  4019e9:	mov    rcx,rbx
  4019ec:	mov    r8,QWORD PTR [rax]
  4019ef:	call   0x407b70
  4019f4:	mov    rcx,rbx
  4019f7:	call   0x4016d0
  4019fc:	test   eax,eax
  4019fe:	je     0x401a10
  401a00:	mov    eax,0x1
  401a05:	add    rsp,0x50
  401a09:	pop    rbx
  401a0a:	pop    rsi
  401a0b:	pop    rdi
  401a0c:	ret    
  401a0d:	nop    DWORD PTR [rax]
  401a10:	lea    rdx,[rsp+0x30]
  401a15:	mov    r8d,0x12
  401a1b:	mov    rcx,rbx
  401a1e:	call   0x407988
  401a23:	lea    rdx,[rip+0x31896]        # 0x4332c0
  401a2a:	mov    r8d,0x13ff
  401a30:	mov    rcx,rbx
  401a33:	call   0x407990
  401a38:	test   eax,eax
  401a3a:	js     0x401a00
  401a3c:	lea    rax,[rip+0x23a59]        # 0x42549c
  401a43:	lea    rdx,[rip+0x23a5a]        # 0x4254a4
  401a4a:	lea    rcx,[rip+0x3186f]        # 0x4332c0
  401a51:	mov    QWORD PTR [rip+0x216e0],rax        # 0x423138
  401a58:	call   0x421d70
  401a5d:	test   rax,rax
  401a60:	je     0x401aba
  401a62:	movzx  edx,BYTE PTR [rax+0x7]
  401a66:	lea    rcx,[rax+0x7]
  401a6a:	cmp    dl,0x20
  401a6d:	je     0x401ab0
  401a6f:	mov    QWORD PTR [rip+0x216c2],rcx        # 0x423138
  401a76:	lea    r9,[rcx+0x81]
  401a7d:	jmp    0x401a91
  401a7f:	nop
  401a80:	cmp    dl,0xa
  401a83:	je     0x401aa2
  401a85:	add    rcx,0x1
  401a89:	cmp    rcx,r9
  401a8c:	je     0x401aa2
  401a8e:	movzx  edx,BYTE PTR [rcx]
  401a91:	cmp    dl,0xd
  401a94:	setne  r8b
  401a98:	test   dl,dl
  401a9a:	setne  al
  401a9d:	test   r8b,al
  401aa0:	jne    0x401a80
  401aa2:	xor    eax,eax
  401aa4:	mov    BYTE PTR [rcx],0x0
  401aa7:	add    rsp,0x50
  401aab:	pop    rbx
  401aac:	pop    rsi
  401aad:	pop    rdi
  401aae:	ret    
  401aaf:	nop
  401ab0:	lea    rcx,[rax+0x8]
  401ab4:	movzx  edx,BYTE PTR [rax+0x8]
  401ab8:	jmp    0x401a6f
  401aba:	xor    eax,eax
  401abc:	jmp    0x401a05
  401ac1:	mov    rbx,QWORD PTR [rip+0x374b4]        # 0x438f7c
  401ac8:	call   rbx
  401aca:	lea    r8,[rip+0x315af]        # 0x433080
  401ad1:	lea    rdx,[rip+0x2399d]        # 0x425475
  401ad8:	lea    rcx,[rax+0x60]
  401adc:	call   0x401670
  401ae1:	mov    ecx,esi
  401ae3:	call   0x4078c0
  401ae8:	mov    rsi,QWORD PTR [rsp+0x28]
  401aed:	mov    rdi,rax
  401af0:	call   rbx
  401af2:	lea    rdx,[rip+0x23992]        # 0x42548b
  401af9:	lea    rcx,[rax+0x60]
  401afd:	mov    r9,rdi
  401b00:	mov    r8,rsi
  401b03:	call   0x401670
  401b08:	mov    ecx,0x1
  401b0d:	call   0x421e98
  401b12:	nop
  401b13:	nop    DWORD PTR [rax]
  401b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b20:	push   rdi
  401b21:	push   rsi
  401b22:	push   rbx
  401b23:	sub    rsp,0x30
  401b27:	lea    r9,[rip+0x21512]        # 0x423040
  401b2e:	lea    r8,[rip+0x215cb]        # 0x423100
  401b35:	lea    rdx,[rip+0x23974]        # 0x4254b0
  401b3c:	mov    rbx,rcx
  401b3f:	lea    rcx,[rip+0x3153a]        # 0x433080
  401b46:	call   0x401930
  401b4b:	lea    r8,[rsp+0x28]
  401b50:	lea    rdx,[rip+0x31529]        # 0x433080
  401b57:	mov    rcx,rbx
  401b5a:	call   0x4079d0
  401b5f:	test   eax,eax
  401b61:	mov    esi,eax
  401b63:	js     0x401b9f
  401b65:	mov    rax,QWORD PTR [rip+0x2bb54]        # 0x42d6c0
  401b6c:	mov    edx,0x1
  401b71:	mov    rcx,rbx
  401b74:	mov    r8,QWORD PTR [rax]
  401b77:	call   0x407b70
  401b7c:	mov    rcx,rbx
  401b7f:	call   0x4016d0
  401b84:	lea    rdx,[rip+0x32b45]        # 0x4346d0
  401b8b:	mov    esi,eax
  401b8d:	mov    rcx,rbx
  401b90:	call   0x407b48
  401b95:	mov    eax,esi
  401b97:	add    rsp,0x30
  401b9b:	pop    rbx
  401b9c:	pop    rsi
  401b9d:	pop    rdi
  401b9e:	ret    
  401b9f:	mov    rbx,QWORD PTR [rip+0x373d6]        # 0x438f7c
  401ba6:	call   rbx
  401ba8:	lea    r8,[rip+0x314d1]        # 0x433080
  401baf:	lea    rdx,[rip+0x238bf]        # 0x425475
  401bb6:	lea    rcx,[rax+0x60]
  401bba:	call   0x401670
  401bbf:	mov    ecx,esi
  401bc1:	call   0x4078c0
  401bc6:	mov    rsi,QWORD PTR [rsp+0x28]
  401bcb:	mov    rdi,rax
  401bce:	call   rbx
  401bd0:	lea    rdx,[rip+0x238b4]        # 0x42548b
  401bd7:	lea    rcx,[rax+0x60]
  401bdb:	mov    r9,rdi
  401bde:	mov    r8,rsi
  401be1:	call   0x401670
  401be6:	mov    ecx,0x1
  401beb:	call   0x421e98
  401bf0:	nop
  401bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	push   rdi
  401c01:	push   rsi
  401c02:	push   rbx
  401c03:	sub    rsp,0x30
  401c07:	mov    edx,DWORD PTR [rip+0x21527]        # 0x423134
  401c0d:	mov    eax,0x3
  401c12:	test   edx,edx
  401c14:	jne    0x401c20
  401c16:	add    rsp,0x30
  401c1a:	pop    rbx
  401c1b:	pop    rsi
  401c1c:	pop    rdi
  401c1d:	ret    
  401c1e:	xchg   ax,ax
  401c20:	mov    rbx,rcx
  401c23:	lea    r9,[rip+0x21416]        # 0x423040
  401c2a:	lea    r8,[rip+0x2148f]        # 0x4230c0
  401c31:	lea    rdx,[rip+0x23910]        # 0x425548
  401c38:	lea    rcx,[rip+0x31441]        # 0x433080
  401c3f:	call   0x401930
  401c44:	lea    r8,[rsp+0x28]
  401c49:	lea    rdx,[rip+0x31430]        # 0x433080
  401c50:	mov    rcx,rbx
  401c53:	call   0x4079d0
  401c58:	test   eax,eax
  401c5a:	mov    esi,eax
  401c5c:	js     0x401ca0
  401c5e:	mov    rax,QWORD PTR [rip+0x2ba5b]        # 0x42d6c0
  401c65:	mov    edx,0x1
  401c6a:	mov    rcx,rbx
  401c6d:	mov    r8,QWORD PTR [rax]
  401c70:	call   0x407b70
  401c75:	mov    rcx,rbx
  401c78:	call   0x4016d0
  401c7d:	mov    esi,eax
  401c7f:	mov    eax,0x1
  401c84:	test   esi,esi
  401c86:	js     0x401c16
  401c88:	mov    rcx,rbx
  401c8b:	call   0x407b00
  401c90:	mov    DWORD PTR [rip+0x32a2e],eax        # 0x4346c4
  401c96:	mov    eax,esi
  401c98:	add    rsp,0x30
  401c9c:	pop    rbx
  401c9d:	pop    rsi
  401c9e:	pop    rdi
  401c9f:	ret    
  401ca0:	mov    rbx,QWORD PTR [rip+0x372d5]        # 0x438f7c
  401ca7:	call   rbx
  401ca9:	lea    r8,[rip+0x313d0]        # 0x433080
  401cb0:	lea    rdx,[rip+0x237be]        # 0x425475
  401cb7:	lea    rcx,[rax+0x60]
  401cbb:	call   0x401670
  401cc0:	mov    ecx,esi
  401cc2:	call   0x4078c0
  401cc7:	mov    rsi,QWORD PTR [rsp+0x28]
  401ccc:	mov    rdi,rax
  401ccf:	call   rbx
  401cd1:	lea    rdx,[rip+0x237b3]        # 0x42548b
  401cd8:	lea    rcx,[rax+0x60]
  401cdc:	mov    r9,rdi
  401cdf:	mov    r8,rsi
  401ce2:	call   0x401670
  401ce7:	mov    ecx,0x1
  401cec:	call   0x421e98
  401cf1:	nop
  401cf2:	nop    DWORD PTR [rax+0x0]
  401cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d00:	push   rdi
  401d01:	push   rsi
  401d02:	push   rbx
  401d03:	sub    rsp,0x30
  401d07:	mov    r11d,DWORD PTR [rip+0x31572]        # 0x433280
  401d0e:	test   r11d,r11d
  401d11:	je     0x401da0
  401d17:	mov    r10d,DWORD PTR [rip+0x31566]        # 0x433284
  401d1e:	test   r10d,r10d
  401d21:	je     0x401dc4
  401d27:	lea    r8,[rip+0x238c2]        # 0x4255f0
  401d2e:	mov    rbx,rcx
  401d31:	lea    r9,[rip+0x21308]        # 0x423040
  401d38:	lea    rdx,[rip+0x23941]        # 0x425680
  401d3f:	lea    rcx,[rip+0x3133a]        # 0x433080
  401d46:	call   0x401930
  401d4b:	lea    r8,[rsp+0x28]
  401d50:	lea    rdx,[rip+0x31329]        # 0x433080
  401d57:	mov    rcx,rbx
  401d5a:	call   0x4079d0
  401d5f:	test   eax,eax
  401d61:	mov    esi,eax
  401d63:	js     0x401dfc
  401d69:	mov    rax,QWORD PTR [rip+0x2b950]        # 0x42d6c0
  401d70:	mov    edx,0x1
  401d75:	mov    rcx,rbx
  401d78:	mov    r8,QWORD PTR [rax]
  401d7b:	call   0x407b70
  401d80:	mov    rcx,rbx
  401d83:	call   0x4016d0
  401d88:	test   eax,eax
  401d8a:	js     0x401dce
  401d8c:	mov    eax,DWORD PTR [rip+0x3294e]        # 0x4346e0
  401d92:	not    eax
  401d94:	shr    eax,0x1f
  401d97:	add    rsp,0x30
  401d9b:	pop    rbx
  401d9c:	pop    rsi
  401d9d:	pop    rdi
  401d9e:	ret    
  401d9f:	nop
  401da0:	mov    r9d,DWORD PTR [rip+0x314dd]        # 0x433284
  401da7:	test   r9d,r9d
  401daa:	je     0x401dc4
  401dac:	mov    r8d,DWORD PTR [rip+0x314d9]        # 0x43328c
  401db3:	test   r8d,r8d
  401db6:	je     0x401dce
  401db8:	lea    r8,[rip+0x23861]        # 0x425620
  401dbf:	jmp    0x401d2e
  401dc4:	mov    edx,DWORD PTR [rip+0x314c2]        # 0x43328c
  401dca:	test   edx,edx
  401dcc:	jne    0x401de0
  401dce:	mov    eax,0x3
  401dd3:	add    rsp,0x30
  401dd7:	pop    rbx
  401dd8:	pop    rsi
  401dd9:	pop    rdi
  401dda:	ret    
  401ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  401de0:	mov    eax,DWORD PTR [rip+0x314a2]        # 0x433288
  401de6:	lea    r8,[rip+0x23863]        # 0x425650
  401ded:	test   eax,eax
  401def:	jne    0x401d2e
  401df5:	mov    eax,0x3
  401dfa:	jmp    0x401dd3
  401dfc:	mov    rbx,QWORD PTR [rip+0x37179]        # 0x438f7c
  401e03:	call   rbx
  401e05:	lea    r8,[rip+0x31274]        # 0x433080
  401e0c:	lea    rdx,[rip+0x23662]        # 0x425475
  401e13:	lea    rcx,[rax+0x60]
  401e17:	call   0x401670
  401e1c:	mov    ecx,esi
  401e1e:	call   0x4078c0
  401e23:	mov    rsi,QWORD PTR [rsp+0x28]
  401e28:	mov    rdi,rax
  401e2b:	call   rbx
  401e2d:	lea    rdx,[rip+0x23657]        # 0x42548b
  401e34:	lea    rcx,[rax+0x60]
  401e38:	mov    r9,rdi
  401e3b:	mov    r8,rsi
  401e3e:	call   0x401670
  401e43:	mov    ecx,0x1
  401e48:	call   0x421e98
  401e4d:	nop
  401e4e:	xchg   ax,ax
  401e50:	push   rdi
  401e51:	push   rsi
  401e52:	push   rbx
  401e53:	sub    rsp,0x30
  401e57:	mov    edx,DWORD PTR [rip+0x212d7]        # 0x423134
  401e5d:	mov    eax,0x3
  401e62:	test   edx,edx
  401e64:	jne    0x401e70
  401e66:	add    rsp,0x30
  401e6a:	pop    rbx
  401e6b:	pop    rsi
  401e6c:	pop    rdi
  401e6d:	ret    
  401e6e:	xchg   ax,ax
  401e70:	mov    rbx,rcx
  401e73:	lea    r9,[rip+0x21286]        # 0x423100
  401e7a:	lea    r8,[rip+0x211bf]        # 0x423040
  401e81:	lea    rdx,[rip+0x238b8]        # 0x425740
  401e88:	lea    rcx,[rip+0x311f1]        # 0x433080
  401e8f:	call   0x401930
  401e94:	lea    r8,[rsp+0x28]
  401e99:	lea    rdx,[rip+0x311e0]        # 0x433080
  401ea0:	mov    rcx,rbx
  401ea3:	call   0x4079d0
  401ea8:	test   eax,eax
  401eaa:	mov    esi,eax
  401eac:	js     0x401ed5
  401eae:	mov    rax,QWORD PTR [rip+0x2b80b]        # 0x42d6c0
  401eb5:	mov    edx,0x1
  401eba:	mov    rcx,rbx
  401ebd:	mov    r8,QWORD PTR [rax]
  401ec0:	call   0x407b70
  401ec5:	mov    rcx,rbx
  401ec8:	call   0x4016d0
  401ecd:	add    rsp,0x30
  401ed1:	pop    rbx
  401ed2:	pop    rsi
  401ed3:	pop    rdi
  401ed4:	ret    
  401ed5:	mov    rbx,QWORD PTR [rip+0x370a0]        # 0x438f7c
  401edc:	call   rbx
  401ede:	lea    r8,[rip+0x3119b]        # 0x433080
  401ee5:	lea    rdx,[rip+0x23589]        # 0x425475
  401eec:	lea    rcx,[rax+0x60]
  401ef0:	call   0x401670
  401ef5:	mov    ecx,esi
  401ef7:	call   0x4078c0
  401efc:	mov    rsi,QWORD PTR [rsp+0x28]
  401f01:	mov    rdi,rax
  401f04:	call   rbx
  401f06:	lea    rdx,[rip+0x2357e]        # 0x42548b
  401f0d:	lea    rcx,[rax+0x60]
  401f11:	mov    r9,rdi
  401f14:	mov    r8,rsi
  401f17:	call   0x401670
  401f1c:	mov    ecx,0x1
  401f21:	call   0x421e98
  401f26:	nop
  401f27:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	push   rdi
  401f31:	push   rsi
  401f32:	push   rbx
  401f33:	sub    rsp,0x30
  401f37:	mov    edx,DWORD PTR [rip+0x211f7]        # 0x423134
  401f3d:	mov    eax,0x3
  401f42:	test   edx,edx
  401f44:	jne    0x401f50
  401f46:	add    rsp,0x30
  401f4a:	pop    rbx
  401f4b:	pop    rsi
  401f4c:	pop    rdi
  401f4d:	ret    
  401f4e:	xchg   ax,ax
  401f50:	mov    rbx,rcx
  401f53:	lea    r9,[rip+0x210e6]        # 0x423040
  401f5a:	lea    r8,[rip+0x2119f]        # 0x423100
  401f61:	lea    rdx,[rip+0x23448]        # 0x4253b0
  401f68:	lea    rcx,[rip+0x31111]        # 0x433080
  401f6f:	lea    rsi,[rsp+0x20]
  401f74:	call   0x401930
  401f79:	lea    rdx,[rip+0x31100]        # 0x433080
  401f80:	mov    r8,rsi
  401f83:	mov    rcx,rbx
  401f86:	call   0x4079d0
  401f8b:	test   eax,eax
  401f8d:	mov    edi,eax
  401f8f:	js     0x401fea
  401f91:	xor    r9d,r9d
  401f94:	xor    r8d,r8d
  401f97:	xor    edx,edx
  401f99:	mov    rcx,rbx
  401f9c:	call   0x407a58
  401fa1:	mov    rax,QWORD PTR [rip+0x2b718]        # 0x42d6c0
  401fa8:	mov    edx,0x1
  401fad:	mov    rcx,rbx
  401fb0:	mov    r8,QWORD PTR [rax]
  401fb3:	call   0x407b70
  401fb8:	mov    rcx,rbx
  401fbb:	call   0x4016d0
  401fc0:	mov    edx,eax
  401fc2:	mov    eax,0x1
  401fc7:	test   edx,edx
  401fc9:	js     0x401f46
  401fcf:	mov    rdx,rsi
  401fd2:	mov    rcx,rbx
  401fd5:	call   0x407a50
  401fda:	test   eax,eax
  401fdc:	setne  al
  401fdf:	movzx  eax,al
  401fe2:	add    rsp,0x30
  401fe6:	pop    rbx
  401fe7:	pop    rsi
  401fe8:	pop    rdi
  401fe9:	ret    
  401fea:	mov    rbx,QWORD PTR [rip+0x36f8b]        # 0x438f7c
  401ff1:	call   rbx
  401ff3:	lea    r8,[rip+0x31086]        # 0x433080
  401ffa:	lea    rdx,[rip+0x23474]        # 0x425475
  402001:	lea    rcx,[rax+0x60]
  402005:	call   0x401670
  40200a:	mov    ecx,edi
  40200c:	call   0x4078c0
  402011:	mov    rsi,QWORD PTR [rsp+0x20]
  402016:	mov    rdi,rax
  402019:	call   rbx
  40201b:	lea    rdx,[rip+0x23469]        # 0x42548b
  402022:	lea    rcx,[rax+0x60]
  402026:	mov    r9,rdi
  402029:	mov    r8,rsi
  40202c:	call   0x401670
  402031:	mov    ecx,0x1
  402036:	call   0x421e98
  40203b:	nop
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	push   rdi
  402041:	push   rsi
  402042:	push   rbx
  402043:	sub    rsp,0x30
  402047:	mov    edx,DWORD PTR [rip+0x210e7]        # 0x423134
  40204d:	mov    eax,0x3
  402052:	test   edx,edx
  402054:	jne    0x402060
  402056:	add    rsp,0x30
  40205a:	pop    rbx
  40205b:	pop    rsi
  40205c:	pop    rdi
  40205d:	ret    
  40205e:	xchg   ax,ax
  402060:	mov    rbx,rcx
  402063:	lea    r9,[rip+0x21096]        # 0x423100
  40206a:	lea    r8,[rip+0x20fcf]        # 0x423040
  402071:	lea    rdx,[rip+0x237a8]        # 0x425820
  402078:	lea    rcx,[rip+0x31001]        # 0x433080
  40207f:	call   0x401930
  402084:	lea    r8,[rsp+0x28]
  402089:	lea    rdx,[rip+0x30ff0]        # 0x433080
  402090:	mov    rcx,rbx
  402093:	call   0x4079d0
  402098:	test   eax,eax
  40209a:	mov    esi,eax
  40209c:	js     0x4020e0
  40209e:	mov    rax,QWORD PTR [rip+0x2b61b]        # 0x42d6c0
  4020a5:	mov    edx,0x1
  4020aa:	mov    rcx,rbx
  4020ad:	mov    r8,QWORD PTR [rax]
  4020b0:	call   0x407b70
  4020b5:	mov    rcx,rbx
  4020b8:	call   0x4016d0
  4020bd:	mov    edx,eax
  4020bf:	mov    eax,0x1
  4020c4:	test   edx,edx
  4020c6:	js     0x402056
  4020c8:	mov    rcx,rbx
  4020cb:	call   0x407938
  4020d0:	test   eax,eax
  4020d2:	sete   al
  4020d5:	movzx  eax,al
  4020d8:	add    rsp,0x30
  4020dc:	pop    rbx
  4020dd:	pop    rsi
  4020de:	pop    rdi
  4020df:	ret    
  4020e0:	mov    rbx,QWORD PTR [rip+0x36e95]        # 0x438f7c
  4020e7:	call   rbx
  4020e9:	lea    r8,[rip+0x30f90]        # 0x433080
  4020f0:	lea    rdx,[rip+0x2337e]        # 0x425475
  4020f7:	lea    rcx,[rax+0x60]
  4020fb:	call   0x401670
  402100:	mov    ecx,esi
  402102:	call   0x4078c0
  402107:	mov    rsi,QWORD PTR [rsp+0x28]
  40210c:	mov    rdi,rax
  40210f:	call   rbx
  402111:	lea    rdx,[rip+0x23373]        # 0x42548b
  402118:	lea    rcx,[rax+0x60]
  40211c:	mov    r9,rdi
  40211f:	mov    r8,rsi
  402122:	call   0x401670
  402127:	mov    ecx,0x1
  40212c:	call   0x421e98
  402131:	nop
  402132:	nop    DWORD PTR [rax+0x0]
  402136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402140:	push   rdi
  402141:	push   rsi
  402142:	push   rbx
  402143:	sub    rsp,0x30
  402147:	mov    edx,DWORD PTR [rip+0x20fe7]        # 0x423134
  40214d:	mov    eax,0x3
  402152:	test   edx,edx
  402154:	jne    0x402160
  402156:	add    rsp,0x30
  40215a:	pop    rbx
  40215b:	pop    rsi
  40215c:	pop    rdi
  40215d:	ret    
  40215e:	xchg   ax,ax
  402160:	mov    rbx,rcx
  402163:	lea    r9,[rip+0x20f96]        # 0x423100
  40216a:	lea    r8,[rip+0x20ecf]        # 0x423040
  402171:	lea    rdx,[rip+0x236a8]        # 0x425820
  402178:	lea    rcx,[rip+0x30f01]        # 0x433080
  40217f:	call   0x401930
  402184:	lea    r8,[rsp+0x28]
  402189:	lea    rdx,[rip+0x30ef0]        # 0x433080
  402190:	mov    rcx,rbx
  402193:	call   0x4079d0
  402198:	test   eax,eax
  40219a:	mov    esi,eax
  40219c:	js     0x4021e0
  40219e:	mov    rax,QWORD PTR [rip+0x2b51b]        # 0x42d6c0
  4021a5:	mov    edx,0x1
  4021aa:	mov    rcx,rbx
  4021ad:	mov    r8,QWORD PTR [rax]
  4021b0:	call   0x407b70
  4021b5:	mov    rcx,rbx
  4021b8:	call   0x4016d0
  4021bd:	mov    edx,eax
  4021bf:	mov    eax,0x1
  4021c4:	test   edx,edx
  4021c6:	js     0x402156
  4021c8:	mov    rcx,rbx
  4021cb:	call   0x407940
  4021d0:	test   eax,eax
  4021d2:	sete   al
  4021d5:	movzx  eax,al
  4021d8:	add    rsp,0x30
  4021dc:	pop    rbx
  4021dd:	pop    rsi
  4021de:	pop    rdi
  4021df:	ret    
  4021e0:	mov    rbx,QWORD PTR [rip+0x36d95]        # 0x438f7c
  4021e7:	call   rbx
  4021e9:	lea    r8,[rip+0x30e90]        # 0x433080
  4021f0:	lea    rdx,[rip+0x2327e]        # 0x425475
  4021f7:	lea    rcx,[rax+0x60]
  4021fb:	call   0x401670
  402200:	mov    ecx,esi
  402202:	call   0x4078c0
  402207:	mov    rsi,QWORD PTR [rsp+0x28]
  40220c:	mov    rdi,rax
  40220f:	call   rbx
  402211:	lea    rdx,[rip+0x23273]        # 0x42548b
  402218:	lea    rcx,[rax+0x60]
  40221c:	mov    r9,rdi
  40221f:	mov    r8,rsi
  402222:	call   0x401670
  402227:	mov    ecx,0x1
  40222c:	call   0x421e98
  402231:	nop
  402232:	nop    DWORD PTR [rax+0x0]
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   rdi
  402241:	push   rsi
  402242:	push   rbx
  402243:	sub    rsp,0x30
  402247:	mov    edx,DWORD PTR [rip+0x3103b]        # 0x433288
  40224d:	mov    eax,0x3
  402252:	test   edx,edx
  402254:	jne    0x402260
  402256:	add    rsp,0x30
  40225a:	pop    rbx
  40225b:	pop    rsi
  40225c:	pop    rdi
  40225d:	ret    
  40225e:	xchg   ax,ax
  402260:	mov    rbx,rcx
  402263:	lea    rdx,[rip+0x2367e]        # 0x4258e8
  40226a:	lea    rcx,[rip+0x30e0f]        # 0x433080
  402271:	call   0x401930
  402276:	lea    r8,[rsp+0x28]
  40227b:	lea    rdx,[rip+0x30dfe]        # 0x433080
  402282:	mov    rcx,rbx
  402285:	call   0x4079d0
  40228a:	test   eax,eax
  40228c:	mov    esi,eax
  40228e:	js     0x4022b7
  402290:	mov    rax,QWORD PTR [rip+0x2b429]        # 0x42d6c0
  402297:	mov    edx,0x1
  40229c:	mov    rcx,rbx
  40229f:	mov    r8,QWORD PTR [rax]
  4022a2:	call   0x407b70
  4022a7:	mov    rcx,rbx
  4022aa:	call   0x4016d0
  4022af:	add    rsp,0x30
  4022b3:	pop    rbx
  4022b4:	pop    rsi
  4022b5:	pop    rdi
  4022b6:	ret    
  4022b7:	mov    rbx,QWORD PTR [rip+0x36cbe]        # 0x438f7c
  4022be:	call   rbx
  4022c0:	lea    r8,[rip+0x30db9]        # 0x433080
  4022c7:	lea    rdx,[rip+0x231a7]        # 0x425475
  4022ce:	lea    rcx,[rax+0x60]
  4022d2:	call   0x401670
  4022d7:	mov    ecx,esi
  4022d9:	call   0x4078c0
  4022de:	mov    rsi,QWORD PTR [rsp+0x28]
  4022e3:	mov    rdi,rax
  4022e6:	call   rbx
  4022e8:	lea    rdx,[rip+0x2319c]        # 0x42548b
  4022ef:	lea    rcx,[rax+0x60]
  4022f3:	mov    r9,rdi
  4022f6:	mov    r8,rsi
  4022f9:	call   0x401670
  4022fe:	mov    ecx,0x1
  402303:	call   0x421e98
  402308:	nop
  402309:	nop    DWORD PTR [rax+0x0]
  402310:	push   r13
  402312:	push   r12
  402314:	push   rbp
  402315:	push   rdi
  402316:	push   rsi
  402317:	push   rbx
  402318:	sub    rsp,0x78
  40231c:	mov    rbx,rcx
  40231f:	lea    rcx,[rip+0x236a3]        # 0x4259c9
  402326:	call   0x421dd0
  40232b:	mov    rdx,QWORD PTR [rip+0x2b37e]        # 0x42d6b0
  402332:	mov    eax,0x3
  402337:	mov    edx,DWORD PTR [rdx]
  402339:	test   edx,edx
  40233b:	jne    0x402350
  40233d:	add    rsp,0x78
  402341:	pop    rbx
  402342:	pop    rsi
  402343:	pop    rdi
  402344:	pop    rbp
  402345:	pop    r12
  402347:	pop    r13
  402349:	ret    
  40234a:	nop    WORD PTR [rax+rax*1+0x0]
  402350:	cmp    QWORD PTR [rip+0x32378],0x0        # 0x4346d0
  402358:	je     0x40233d
  40235a:	lea    r9,[rip+0x20cdf]        # 0x423040
  402361:	lea    r8,[rip+0x20d98]        # 0x423100
  402368:	lea    rdx,[rip+0x23141]        # 0x4254b0
  40236f:	lea    rcx,[rip+0x30d0a]        # 0x433080
  402376:	lea    rbp,[rsp+0x60]
  40237b:	call   0x401930
  402380:	lea    rdx,[rip+0x30cf9]        # 0x433080
  402387:	mov    r8,rbp
  40238a:	mov    rcx,rbx
  40238d:	call   0x4079d0
  402392:	test   eax,eax
  402394:	mov    esi,eax
  402396:	js     0x402568
  40239c:	mov    rax,QWORD PTR [rip+0x2b31d]        # 0x42d6c0
  4023a3:	mov    edx,0x1
  4023a8:	mov    rcx,rbx
  4023ab:	lea    rsi,[rsp+0x40]
  4023b0:	lea    rdi,[rsp+0x30]
  4023b5:	mov    r8,QWORD PTR [rax]
  4023b8:	call   0x407b70
  4023bd:	mov    rcx,rbx
  4023c0:	call   0x4016d0
  4023c5:	mov    r8,rsi
  4023c8:	mov    rdx,rdi
  4023cb:	mov    rcx,rbx
  4023ce:	mov    r13d,eax
  4023d1:	call   0x407b60
  4023d6:	test   eax,eax
  4023d8:	js     0x402525
  4023de:	lea    rdx,[rip+0x22f48]        # 0x42532d
  4023e5:	lea    rcx,[rip+0x235dd]        # 0x4259c9
  4023ec:	call   0x421e78
  4023f1:	mov    r12,rax
  4023f4:	mov    eax,0x1
  4023f9:	test   r12,r12
  4023fc:	je     0x40233d
  402402:	mov    edx,DWORD PTR [rsp+0x38]
  402406:	mov    rcx,QWORD PTR [rsp+0x30]
  40240b:	lea    rax,[rip+0x235c4]        # 0x4259d6
  402412:	mov    QWORD PTR [rip+0x20d1f],rax        # 0x423138
  402419:	call   0x405ce0
  40241e:	test   rax,rax
  402421:	je     0x40243e
  402423:	mov    r8d,DWORD PTR [rsp+0x38]
  402428:	lea    rdx,[rip+0x235bd]        # 0x4259ec
  40242f:	mov    r9,rax
  402432:	mov    rcx,r12
  402435:	shl    r8d,0x3
  402439:	call   0x401670
  40243e:	mov    edx,DWORD PTR [rsp+0x48]
  402442:	mov    rcx,QWORD PTR [rsp+0x40]
  402447:	call   0x405ce0
  40244c:	test   rax,rax
  40244f:	je     0x40246c
  402451:	mov    r8d,DWORD PTR [rsp+0x48]
  402456:	lea    rdx,[rip+0x235a9]        # 0x425a06
  40245d:	mov    r9,rax
  402460:	mov    rcx,r12
  402463:	shl    r8d,0x3
  402467:	call   0x401670
  40246c:	lea    rdx,[rsp+0x50]
  402471:	mov    rcx,rbx
  402474:	call   0x407b48
  402479:	mov    edx,DWORD PTR [rsp+0x58]
  40247d:	mov    rcx,QWORD PTR [rsp+0x50]
  402482:	call   0x405ce0
  402487:	test   rax,rax
  40248a:	je     0x4024a7
  40248c:	mov    r8d,DWORD PTR [rsp+0x58]
  402491:	lea    rdx,[rip+0x23584]        # 0x425a1c
  402498:	mov    r9,rax
  40249b:	mov    rcx,r12
  40249e:	shl    r8d,0x3
  4024a2:	call   0x401670
  4024a7:	mov    rdx,QWORD PTR [rsp+0x50]
  4024ac:	test   rdx,rdx
  4024af:	je     0x4024c3
  4024b1:	mov    r8d,DWORD PTR [rsp+0x58]
  4024b6:	cmp    r8d,DWORD PTR [rip+0x3221b]        # 0x4346d8
  4024bd:	je     0x402540
  4024c3:	lea    rcx,[rsp+0x28]
  4024c8:	call   0x407b18
  4024cd:	test   eax,eax
  4024cf:	js     0x402535
  4024d1:	mov    rcx,QWORD PTR [rsp+0x28]
  4024d6:	mov    r8,rdi
  4024d9:	mov    rdx,rsi
  4024dc:	call   0x407b20
  4024e1:	test   eax,eax
  4024e3:	js     0x402535
  4024e5:	mov    rcx,QWORD PTR [rsp+0x28]
  4024ea:	mov    r8,rbp
  4024ed:	mov    edx,0x1
  4024f2:	call   0x407b30
  4024f7:	test   eax,eax
  4024f9:	js     0x402535
  4024fb:	mov    r8,QWORD PTR [rsp+0x60]
  402500:	lea    rdx,[rip+0x23562]        # 0x425a69
  402507:	mov    rcx,r12
  40250a:	call   0x401670
  40250f:	mov    rax,QWORD PTR [rip+0x2b0da]        # 0x42d5f0
  402516:	mov    rcx,QWORD PTR [rsp+0x60]
  40251b:	call   QWORD PTR [rax]
  40251d:	mov    rcx,r12
  402520:	call   0x421e90
  402525:	mov    eax,r13d
  402528:	add    rsp,0x78
  40252c:	pop    rbx
  40252d:	pop    rsi
  40252e:	pop    rdi
  40252f:	pop    rbp
  402530:	pop    r12
  402532:	pop    r13
  402534:	ret    
  402535:	mov    eax,0x1
  40253a:	jmp    0x40233d
  40253f:	nop
  402540:	mov    rcx,QWORD PTR [rip+0x32189]        # 0x4346d0
  402547:	call   0x421e10
  40254c:	test   eax,eax
  40254e:	jne    0x4024c3
  402554:	lea    rdx,[rip+0x234dd]        # 0x425a38
  40255b:	mov    rcx,r12
  40255e:	call   0x401670
  402563:	jmp    0x4024c3
  402568:	mov    rbx,QWORD PTR [rip+0x36a0d]        # 0x438f7c
  40256f:	call   rbx
  402571:	lea    r8,[rip+0x30b08]        # 0x433080
  402578:	lea    rdx,[rip+0x22ef6]        # 0x425475
  40257f:	lea    rcx,[rax+0x60]
  402583:	call   0x401670
  402588:	mov    ecx,esi
  40258a:	call   0x4078c0
  40258f:	mov    rsi,QWORD PTR [rsp+0x60]
  402594:	mov    rdi,rax
  402597:	call   rbx
  402599:	lea    rdx,[rip+0x22eeb]        # 0x42548b
  4025a0:	lea    rcx,[rax+0x60]
  4025a4:	mov    r9,rdi
  4025a7:	mov    r8,rsi
  4025aa:	call   0x401670
  4025af:	mov    ecx,0x1
  4025b4:	call   0x421e98
  4025b9:	nop
  4025ba:	nop    WORD PTR [rax+rax*1+0x0]
  4025c0:	sub    rsp,0x28
  4025c4:	mov    ecx,DWORD PTR [rip+0x320fa]        # 0x4346c4
  4025ca:	mov    eax,0x3
  4025cf:	test   ecx,ecx
  4025d1:	jne    0x4025e0
  4025d3:	add    rsp,0x28
  4025d7:	ret    
  4025d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	call   0x407af8
  4025e5:	mov    QWORD PTR [rip+0x20b4c],rax        # 0x423138
  4025ec:	xor    eax,eax
  4025ee:	add    rsp,0x28
  4025f2:	ret    
  4025f3:	nop    DWORD PTR [rax]
  4025f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402600:	push   rdi
  402601:	push   rsi
  402602:	push   rbx
  402603:	sub    rsp,0x30
  402607:	lea    r8,[rip+0x20a32]        # 0x423040
  40260e:	lea    rdx,[rip+0x2345b]        # 0x425a70
  402615:	mov    rbx,rcx
  402618:	lea    rcx,[rip+0x30a61]        # 0x433080
  40261f:	call   0x401930
  402624:	lea    r8,[rsp+0x28]
  402629:	lea    rdx,[rip+0x30a50]        # 0x433080
  402630:	mov    rcx,rbx
  402633:	call   0x4079d0
  402638:	test   eax,eax
  40263a:	mov    esi,eax
  40263c:	js     0x402673
  40263e:	mov    rax,QWORD PTR [rip+0x2b07b]        # 0x42d6c0
  402645:	mov    edx,0x1
  40264a:	mov    rcx,rbx
  40264d:	mov    r8,QWORD PTR [rax]
  402650:	call   0x407b70
  402655:	mov    rcx,rbx
  402658:	call   0x4016d0
  40265d:	test   eax,eax
  40265f:	jne    0x40266b
  402661:	mov    DWORD PTR [rip+0x30c1d],0x1        # 0x433288
  40266b:	add    rsp,0x30
  40266f:	pop    rbx
  402670:	pop    rsi
  402671:	pop    rdi
  402672:	ret    
  402673:	mov    rbx,QWORD PTR [rip+0x36902]        # 0x438f7c
  40267a:	call   rbx
  40267c:	lea    r8,[rip+0x309fd]        # 0x433080
  402683:	lea    rdx,[rip+0x22deb]        # 0x425475
  40268a:	lea    rcx,[rax+0x60]
  40268e:	call   0x401670
  402693:	mov    ecx,esi
  402695:	call   0x4078c0
  40269a:	mov    rsi,QWORD PTR [rsp+0x28]
  40269f:	mov    rdi,rax
  4026a2:	call   rbx
  4026a4:	lea    rdx,[rip+0x22de0]        # 0x42548b
  4026ab:	lea    rcx,[rax+0x60]
  4026af:	mov    r9,rdi
  4026b2:	mov    r8,rsi
  4026b5:	call   0x401670
  4026ba:	mov    ecx,0x1
  4026bf:	call   0x421e98
  4026c4:	nop
  4026c5:	nop
  4026c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026d0:	push   rdi
  4026d1:	push   rsi
  4026d2:	push   rbx
  4026d3:	sub    rsp,0x60
  4026d7:	lea    r9,[rip+0x20962]        # 0x423040
  4026de:	lea    r8,[rip+0x20a1b]        # 0x423100
  4026e5:	lea    rdx,[rip+0x22cc4]        # 0x4253b0
  4026ec:	mov    rbx,rcx
  4026ef:	lea    rcx,[rip+0x3098a]        # 0x433080
  4026f6:	lea    rsi,[rsp+0x40]
  4026fb:	mov    DWORD PTR [rsp+0x3c],0x6
  402703:	call   0x401930
  402708:	lea    rdx,[rip+0x30971]        # 0x433080
  40270f:	mov    r8,rsi
  402712:	mov    rcx,rbx
  402715:	call   0x4079d0
  40271a:	test   eax,eax
  40271c:	mov    edi,eax
  40271e:	js     0x4027ec
  402724:	mov    rax,QWORD PTR [rip+0x2af95]        # 0x42d6c0
  40272b:	mov    edx,0x1
  402730:	mov    rcx,rbx
  402733:	mov    r8,QWORD PTR [rax]
  402736:	call   0x407b70
  40273b:	mov    rcx,rbx
  40273e:	call   0x4016d0
  402743:	cmp    eax,0x1
  402746:	je     0x4027d0
  40274c:	mov    edx,0x1
  402751:	mov    rcx,rbx
  402754:	call   0x407c10
  402759:	test   eax,eax
  40275b:	js     0x4027d0
  40275d:	mov    rcx,rbx
  402760:	call   0x4078b8
  402765:	lea    r9,[rsp+0x3c]
  40276a:	mov    DWORD PTR [rsp+0x20],0x4
  402772:	mov    r8d,0x1006
  402778:	mov    edx,0xffff
  40277d:	mov    ecx,eax
  40277f:	call   0x419680
  402784:	mov    r8d,0x14
  40278a:	mov    rdx,rsi
  40278d:	mov    rcx,rbx
  402790:	call   0x407990
  402795:	test   eax,eax
  402797:	mov    edi,eax
  402799:	jg     0x402784
  40279b:	mov    rbx,QWORD PTR [rip+0x36b12]        # 0x4392b4
  4027a2:	call   rbx
  4027a4:	cmp    eax,0x274c
  4027a9:	je     0x4027e0
  4027ab:	call   rbx
  4027ad:	cmp    eax,0x2745
  4027b2:	je     0x4027e0
  4027b4:	xor    eax,eax
  4027b6:	test   edi,edi
  4027b8:	je     0x4027d5
  4027ba:	cmp    DWORD PTR [rip+0x31eff],0x1        # 0x4346c0
  4027c1:	sbb    eax,eax
  4027c3:	not    eax
  4027c5:	add    eax,0x2
  4027c8:	add    rsp,0x60
  4027cc:	pop    rbx
  4027cd:	pop    rsi
  4027ce:	pop    rdi
  4027cf:	ret    
  4027d0:	mov    eax,0x1
  4027d5:	add    rsp,0x60
  4027d9:	pop    rbx
  4027da:	pop    rsi
  4027db:	pop    rdi
  4027dc:	ret    
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	mov    DWORD PTR [rip+0x31ed6],0x1        # 0x4346c0
  4027ea:	jmp    0x4027b4
  4027ec:	mov    rbx,QWORD PTR [rip+0x36789]        # 0x438f7c
  4027f3:	call   rbx
  4027f5:	lea    r8,[rip+0x30884]        # 0x433080
  4027fc:	lea    rdx,[rip+0x22c72]        # 0x425475
  402803:	lea    rcx,[rax+0x60]
  402807:	call   0x401670
  40280c:	mov    ecx,edi
  40280e:	call   0x4078c0
  402813:	mov    rsi,QWORD PTR [rsp+0x40]
  402818:	mov    rdi,rax
  40281b:	call   rbx
  40281d:	lea    rdx,[rip+0x22c67]        # 0x42548b
  402824:	lea    rcx,[rax+0x60]
  402828:	mov    r9,rdi
  40282b:	mov    r8,rsi
  40282e:	call   0x401670
  402833:	mov    ecx,0x1
  402838:	call   0x421e98
  40283d:	nop
  40283e:	xchg   ax,ax
  402840:	push   rdi
  402841:	push   rsi
  402842:	push   rbx
  402843:	sub    rsp,0x30
  402847:	lea    r9,[rip+0x207f2]        # 0x423040
  40284e:	lea    r8,[rip+0x208ab]        # 0x423100
  402855:	lea    rdx,[rip+0x232e4]        # 0x425b40
  40285c:	mov    rbx,rcx
  40285f:	lea    rcx,[rip+0x3081a]        # 0x433080
  402866:	call   0x401930
  40286b:	lea    r8,[rsp+0x28]
  402870:	lea    rdx,[rip+0x30809]        # 0x433080
  402877:	mov    rcx,rbx
  40287a:	call   0x4079d0
  40287f:	test   eax,eax
  402881:	mov    esi,eax
  402883:	js     0x4028ac
  402885:	mov    rax,QWORD PTR [rip+0x2ae34]        # 0x42d6c0
  40288c:	mov    edx,0x1
  402891:	mov    rcx,rbx
  402894:	mov    r8,QWORD PTR [rax]
  402897:	call   0x407b70
  40289c:	mov    rcx,rbx
  40289f:	call   0x4016d0
  4028a4:	add    rsp,0x30
  4028a8:	pop    rbx
  4028a9:	pop    rsi
  4028aa:	pop    rdi
  4028ab:	ret    
  4028ac:	mov    rbx,QWORD PTR [rip+0x366c9]        # 0x438f7c
  4028b3:	call   rbx
  4028b5:	lea    r8,[rip+0x307c4]        # 0x433080
  4028bc:	lea    rdx,[rip+0x22bb2]        # 0x425475
  4028c3:	lea    rcx,[rax+0x60]
  4028c7:	call   0x401670
  4028cc:	mov    ecx,esi
  4028ce:	call   0x4078c0
  4028d3:	mov    rsi,QWORD PTR [rsp+0x28]
  4028d8:	mov    rdi,rax
  4028db:	call   rbx
  4028dd:	lea    rdx,[rip+0x22ba7]        # 0x42548b
  4028e4:	lea    rcx,[rax+0x60]
  4028e8:	mov    r9,rdi
  4028eb:	mov    r8,rsi
  4028ee:	call   0x401670
  4028f3:	mov    ecx,0x1
  4028f8:	call   0x421e98
  4028fd:	nop
  4028fe:	xchg   ax,ax
  402900:	push   rdi
  402901:	push   rsi
  402902:	push   rbx
  402903:	sub    rsp,0x30
  402907:	lea    r9,[rip+0x20732]        # 0x423040
  40290e:	lea    r8,[rip+0x207ab]        # 0x4230c0
  402915:	lea    rdx,[rip+0x232a4]        # 0x425bc0
  40291c:	mov    rbx,rcx
  40291f:	lea    rcx,[rip+0x3075a]        # 0x433080
  402926:	call   0x401930
  40292b:	lea    r8,[rsp+0x28]
  402930:	lea    rdx,[rip+0x30749]        # 0x433080
  402937:	mov    rcx,rbx
  40293a:	call   0x4079d0
  40293f:	test   eax,eax
  402941:	mov    esi,eax
  402943:	js     0x40296c
  402945:	mov    rax,QWORD PTR [rip+0x2ad74]        # 0x42d6c0
  40294c:	mov    edx,0x1
  402951:	mov    rcx,rbx
  402954:	mov    r8,QWORD PTR [rax]
  402957:	call   0x407b70
  40295c:	mov    rcx,rbx
  40295f:	call   0x4016d0
  402964:	add    rsp,0x30
  402968:	pop    rbx
  402969:	pop    rsi
  40296a:	pop    rdi
  40296b:	ret    
  40296c:	mov    rbx,QWORD PTR [rip+0x36609]        # 0x438f7c
  402973:	call   rbx
  402975:	lea    r8,[rip+0x30704]        # 0x433080
  40297c:	lea    rdx,[rip+0x22af2]        # 0x425475
  402983:	lea    rcx,[rax+0x60]
  402987:	call   0x401670
  40298c:	mov    ecx,esi
  40298e:	call   0x4078c0
  402993:	mov    rsi,QWORD PTR [rsp+0x28]
  402998:	mov    rdi,rax
  40299b:	call   rbx
  40299d:	lea    rdx,[rip+0x22ae7]        # 0x42548b
  4029a4:	lea    rcx,[rax+0x60]
  4029a8:	mov    r9,rdi
  4029ab:	mov    r8,rsi
  4029ae:	call   0x401670
  4029b3:	mov    ecx,0x1
  4029b8:	call   0x421e98
  4029bd:	nop
  4029be:	xchg   ax,ax
  4029c0:	push   rdi
  4029c1:	push   rsi
  4029c2:	push   rbx
  4029c3:	sub    rsp,0x30
  4029c7:	lea    r9,[rip+0x20672]        # 0x423040
  4029ce:	lea    r8,[rip+0x206eb]        # 0x4230c0
  4029d5:	lea    rdx,[rip+0x23274]        # 0x425c50
  4029dc:	mov    rbx,rcx
  4029df:	lea    rcx,[rip+0x3069a]        # 0x433080
  4029e6:	call   0x401930
  4029eb:	lea    r8,[rsp+0x28]
  4029f0:	lea    rdx,[rip+0x30689]        # 0x433080
  4029f7:	mov    rcx,rbx
  4029fa:	call   0x4079d0
  4029ff:	test   eax,eax
  402a01:	mov    esi,eax
  402a03:	js     0x402a2c
  402a05:	mov    rax,QWORD PTR [rip+0x2acb4]        # 0x42d6c0
  402a0c:	mov    edx,0x1
  402a11:	mov    rcx,rbx
  402a14:	mov    r8,QWORD PTR [rax]
  402a17:	call   0x407b70
  402a1c:	mov    rcx,rbx
  402a1f:	call   0x4016d0
  402a24:	add    rsp,0x30
  402a28:	pop    rbx
  402a29:	pop    rsi
  402a2a:	pop    rdi
  402a2b:	ret    
  402a2c:	mov    rbx,QWORD PTR [rip+0x36549]        # 0x438f7c
  402a33:	call   rbx
  402a35:	lea    r8,[rip+0x30644]        # 0x433080
  402a3c:	lea    rdx,[rip+0x22a32]        # 0x425475
  402a43:	lea    rcx,[rax+0x60]
  402a47:	call   0x401670
  402a4c:	mov    ecx,esi
  402a4e:	call   0x4078c0
  402a53:	mov    rsi,QWORD PTR [rsp+0x28]
  402a58:	mov    rdi,rax
  402a5b:	call   rbx
  402a5d:	lea    rdx,[rip+0x22a27]        # 0x42548b
  402a64:	lea    rcx,[rax+0x60]
  402a68:	mov    r9,rdi
  402a6b:	mov    r8,rsi
  402a6e:	call   0x401670
  402a73:	mov    ecx,0x1
  402a78:	call   0x421e98
  402a7d:	nop
  402a7e:	xchg   ax,ax
  402a80:	push   rdi
  402a81:	push   rsi
  402a82:	push   rbx
  402a83:	sub    rsp,0x30
  402a87:	lea    r9,[rip+0x205b2]        # 0x423040
  402a8e:	lea    r8,[rip+0x2062b]        # 0x4230c0
  402a95:	lea    rdx,[rip+0x23244]        # 0x425ce0
  402a9c:	mov    rbx,rcx
  402a9f:	lea    rcx,[rip+0x305da]        # 0x433080
  402aa6:	call   0x401930
  402aab:	lea    r8,[rsp+0x28]
  402ab0:	lea    rdx,[rip+0x305c9]        # 0x433080
  402ab7:	mov    rcx,rbx
  402aba:	call   0x4079d0
  402abf:	test   eax,eax
  402ac1:	mov    esi,eax
  402ac3:	js     0x402aec
  402ac5:	mov    rax,QWORD PTR [rip+0x2abf4]        # 0x42d6c0
  402acc:	mov    edx,0x1
  402ad1:	mov    rcx,rbx
  402ad4:	mov    r8,QWORD PTR [rax]
  402ad7:	call   0x407b70
  402adc:	mov    rcx,rbx
  402adf:	call   0x4016d0
  402ae4:	add    rsp,0x30
  402ae8:	pop    rbx
  402ae9:	pop    rsi
  402aea:	pop    rdi
  402aeb:	ret    
  402aec:	mov    rbx,QWORD PTR [rip+0x36489]        # 0x438f7c
  402af3:	call   rbx
  402af5:	lea    r8,[rip+0x30584]        # 0x433080
  402afc:	lea    rdx,[rip+0x22972]        # 0x425475
  402b03:	lea    rcx,[rax+0x60]
  402b07:	call   0x401670
  402b0c:	mov    ecx,esi
  402b0e:	call   0x4078c0
  402b13:	mov    rsi,QWORD PTR [rsp+0x28]
  402b18:	mov    rdi,rax
  402b1b:	call   rbx
  402b1d:	lea    rdx,[rip+0x22967]        # 0x42548b
  402b24:	lea    rcx,[rax+0x60]
  402b28:	mov    r9,rdi
  402b2b:	mov    r8,rsi
  402b2e:	call   0x401670
  402b33:	mov    ecx,0x1
  402b38:	call   0x421e98
  402b3d:	nop
  402b3e:	xchg   ax,ax
  402b40:	push   rdi
  402b41:	push   rsi
  402b42:	push   rbx
  402b43:	sub    rsp,0x30
  402b47:	lea    r9,[rip+0x204f2]        # 0x423040
  402b4e:	lea    r8,[rip+0x205ab]        # 0x423100
  402b55:	lea    rdx,[rip+0x2321c]        # 0x425d78
  402b5c:	mov    rbx,rcx
  402b5f:	lea    rcx,[rip+0x3051a]        # 0x433080
  402b66:	call   0x401930
  402b6b:	lea    r8,[rsp+0x28]
  402b70:	lea    rdx,[rip+0x30509]        # 0x433080
  402b77:	mov    rcx,rbx
  402b7a:	call   0x4079d0
  402b7f:	test   eax,eax
  402b81:	mov    esi,eax
  402b83:	js     0x402bac
  402b85:	mov    rax,QWORD PTR [rip+0x2ab34]        # 0x42d6c0
  402b8c:	mov    edx,0x1
  402b91:	mov    rcx,rbx
  402b94:	mov    r8,QWORD PTR [rax]
  402b97:	call   0x407b70
  402b9c:	mov    rcx,rbx
  402b9f:	call   0x4016d0
  402ba4:	add    rsp,0x30
  402ba8:	pop    rbx
  402ba9:	pop    rsi
  402baa:	pop    rdi
  402bab:	ret    
  402bac:	mov    rbx,QWORD PTR [rip+0x363c9]        # 0x438f7c
  402bb3:	call   rbx
  402bb5:	lea    r8,[rip+0x304c4]        # 0x433080
  402bbc:	lea    rdx,[rip+0x228b2]        # 0x425475
  402bc3:	lea    rcx,[rax+0x60]
  402bc7:	call   0x401670
  402bcc:	mov    ecx,esi
  402bce:	call   0x4078c0
  402bd3:	mov    rsi,QWORD PTR [rsp+0x28]
  402bd8:	mov    rdi,rax
  402bdb:	call   rbx
  402bdd:	lea    rdx,[rip+0x228a7]        # 0x42548b
  402be4:	lea    rcx,[rax+0x60]
  402be8:	mov    r9,rdi
  402beb:	mov    r8,rsi
  402bee:	call   0x401670
  402bf3:	mov    ecx,0x1
  402bf8:	call   0x421e98
  402bfd:	nop
  402bfe:	xchg   ax,ax
  402c00:	push   rdi
  402c01:	push   rsi
  402c02:	push   rbx
  402c03:	sub    rsp,0x30
  402c07:	lea    r9,[rip+0x20432]        # 0x423040
  402c0e:	lea    r8,[rip+0x204eb]        # 0x423100
  402c15:	lea    rdx,[rip+0x231e4]        # 0x425e00
  402c1c:	mov    rbx,rcx
  402c1f:	lea    rcx,[rip+0x3045a]        # 0x433080
  402c26:	call   0x401930
  402c2b:	lea    r8,[rsp+0x28]
  402c30:	lea    rdx,[rip+0x30449]        # 0x433080
  402c37:	mov    rcx,rbx
  402c3a:	call   0x4079d0
  402c3f:	test   eax,eax
  402c41:	mov    esi,eax
  402c43:	js     0x402c6c
  402c45:	mov    rax,QWORD PTR [rip+0x2aa74]        # 0x42d6c0
  402c4c:	mov    edx,0x1
  402c51:	mov    rcx,rbx
  402c54:	mov    r8,QWORD PTR [rax]
  402c57:	call   0x407b70
  402c5c:	mov    rcx,rbx
  402c5f:	call   0x4016d0
  402c64:	add    rsp,0x30
  402c68:	pop    rbx
  402c69:	pop    rsi
  402c6a:	pop    rdi
  402c6b:	ret    
  402c6c:	mov    rbx,QWORD PTR [rip+0x36309]        # 0x438f7c
  402c73:	call   rbx
  402c75:	lea    r8,[rip+0x30404]        # 0x433080
  402c7c:	lea    rdx,[rip+0x227f2]        # 0x425475
  402c83:	lea    rcx,[rax+0x60]
  402c87:	call   0x401670
  402c8c:	mov    ecx,esi
  402c8e:	call   0x4078c0
  402c93:	mov    rsi,QWORD PTR [rsp+0x28]
  402c98:	mov    rdi,rax
  402c9b:	call   rbx
  402c9d:	lea    rdx,[rip+0x227e7]        # 0x42548b
  402ca4:	lea    rcx,[rax+0x60]
  402ca8:	mov    r9,rdi
  402cab:	mov    r8,rsi
  402cae:	call   0x401670
  402cb3:	mov    ecx,0x1
  402cb8:	call   0x421e98
  402cbd:	nop
  402cbe:	xchg   ax,ax
  402cc0:	push   rdi
  402cc1:	push   rsi
  402cc2:	push   rbx
  402cc3:	sub    rsp,0x30
  402cc7:	mov    edx,DWORD PTR [rip+0x20467]        # 0x423134
  402ccd:	mov    eax,0x3
  402cd2:	test   edx,edx
  402cd4:	jne    0x402ce0
  402cd6:	add    rsp,0x30
  402cda:	pop    rbx
  402cdb:	pop    rsi
  402cdc:	pop    rdi
  402cdd:	ret    
  402cde:	xchg   ax,ax
  402ce0:	mov    rbx,rcx
  402ce3:	lea    r9,[rip+0x20356]        # 0x423040
  402cea:	lea    r8,[rip+0x2040f]        # 0x423100
  402cf1:	lea    rdx,[rip+0x23188]        # 0x425e80
  402cf8:	lea    rcx,[rip+0x30381]        # 0x433080
  402cff:	call   0x401930
  402d04:	lea    r8,[rsp+0x28]
  402d09:	lea    rdx,[rip+0x30370]        # 0x433080
  402d10:	mov    rcx,rbx
  402d13:	call   0x4079d0
  402d18:	test   eax,eax
  402d1a:	mov    esi,eax
  402d1c:	js     0x402d62
  402d1e:	mov    rax,QWORD PTR [rip+0x2a99b]        # 0x42d6c0
  402d25:	mov    edx,0x1
  402d2a:	mov    rcx,rbx
  402d2d:	mov    r8,QWORD PTR [rax]
  402d30:	call   0x407b70
  402d35:	mov    rcx,rbx
  402d38:	call   0x4016d0
  402d3d:	mov    edx,eax
  402d3f:	mov    eax,0x1
  402d44:	cmp    edx,0x1
  402d47:	je     0x402cd6
  402d49:	mov    rcx,rbx
  402d4c:	call   0x407bd8
  402d51:	cmp    eax,0x2
  402d54:	setne  al
  402d57:	movzx  eax,al
  402d5a:	add    rsp,0x30
  402d5e:	pop    rbx
  402d5f:	pop    rsi
  402d60:	pop    rdi
  402d61:	ret    
  402d62:	mov    rbx,QWORD PTR [rip+0x36213]        # 0x438f7c
  402d69:	call   rbx
  402d6b:	lea    r8,[rip+0x3030e]        # 0x433080
  402d72:	lea    rdx,[rip+0x226fc]        # 0x425475
  402d79:	lea    rcx,[rax+0x60]
  402d7d:	call   0x401670
  402d82:	mov    ecx,esi
  402d84:	call   0x4078c0
  402d89:	mov    rsi,QWORD PTR [rsp+0x28]
  402d8e:	mov    rdi,rax
  402d91:	call   rbx
  402d93:	lea    rdx,[rip+0x226f1]        # 0x42548b
  402d9a:	lea    rcx,[rax+0x60]
  402d9e:	mov    r9,rdi
  402da1:	mov    r8,rsi
  402da4:	call   0x401670
  402da9:	mov    ecx,0x1
  402dae:	call   0x421e98
  402db3:	nop
  402db4:	xchg   ax,ax
  402db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dc0:	push   rdi
  402dc1:	push   rsi
  402dc2:	push   rbx
  402dc3:	sub    rsp,0x30
  402dc7:	lea    r9,[rip+0x20272]        # 0x423040
  402dce:	lea    r8,[rip+0x2032b]        # 0x423100
  402dd5:	lea    rdx,[rip+0x2316c]        # 0x425f48
  402ddc:	mov    rbx,rcx
  402ddf:	lea    rcx,[rip+0x3029a]        # 0x433080
  402de6:	call   0x401930
  402deb:	lea    r8,[rsp+0x28]
  402df0:	lea    rdx,[rip+0x30289]        # 0x433080
  402df7:	mov    rcx,rbx
  402dfa:	call   0x4079d0
  402dff:	test   eax,eax
  402e01:	mov    esi,eax
  402e03:	js     0x402e2c
  402e05:	mov    rax,QWORD PTR [rip+0x2a8b4]        # 0x42d6c0
  402e0c:	mov    edx,0x1
  402e11:	mov    rcx,rbx
  402e14:	mov    r8,QWORD PTR [rax]
  402e17:	call   0x407b70
  402e1c:	mov    rcx,rbx
  402e1f:	call   0x4016d0
  402e24:	add    rsp,0x30
  402e28:	pop    rbx
  402e29:	pop    rsi
  402e2a:	pop    rdi
  402e2b:	ret    
  402e2c:	mov    rbx,QWORD PTR [rip+0x36149]        # 0x438f7c
  402e33:	call   rbx
  402e35:	lea    r8,[rip+0x30244]        # 0x433080
  402e3c:	lea    rdx,[rip+0x22632]        # 0x425475
  402e43:	lea    rcx,[rax+0x60]
  402e47:	call   0x401670
  402e4c:	mov    ecx,esi
  402e4e:	call   0x4078c0
  402e53:	mov    rsi,QWORD PTR [rsp+0x28]
  402e58:	mov    rdi,rax
  402e5b:	call   rbx
  402e5d:	lea    rdx,[rip+0x22627]        # 0x42548b
  402e64:	lea    rcx,[rax+0x60]
  402e68:	mov    r9,rdi
  402e6b:	mov    r8,rsi
  402e6e:	call   0x401670
  402e73:	mov    ecx,0x1
  402e78:	call   0x421e98
  402e7d:	nop
  402e7e:	xchg   ax,ax
  402e80:	push   rdi
  402e81:	push   rsi
  402e82:	push   rbx
  402e83:	sub    rsp,0x30
  402e87:	lea    r9,[rip+0x201b2]        # 0x423040
  402e8e:	lea    r8,[rip+0x2026b]        # 0x423100
  402e95:	lea    rdx,[rip+0x23184]        # 0x426020
  402e9c:	mov    rbx,rcx
  402e9f:	lea    rcx,[rip+0x301da]        # 0x433080
  402ea6:	call   0x401930
  402eab:	lea    r8,[rsp+0x28]
  402eb0:	lea    rdx,[rip+0x301c9]        # 0x433080
  402eb7:	mov    rcx,rbx
  402eba:	call   0x4079d0
  402ebf:	test   eax,eax
  402ec1:	mov    esi,eax
  402ec3:	js     0x402eec
  402ec5:	mov    rax,QWORD PTR [rip+0x2a7f4]        # 0x42d6c0
  402ecc:	mov    edx,0x1
  402ed1:	mov    rcx,rbx
  402ed4:	mov    r8,QWORD PTR [rax]
  402ed7:	call   0x407b70
  402edc:	mov    rcx,rbx
  402edf:	call   0x4016d0
  402ee4:	add    rsp,0x30
  402ee8:	pop    rbx
  402ee9:	pop    rsi
  402eea:	pop    rdi
  402eeb:	ret    
  402eec:	mov    rbx,QWORD PTR [rip+0x36089]        # 0x438f7c
  402ef3:	call   rbx
  402ef5:	lea    r8,[rip+0x30184]        # 0x433080
  402efc:	lea    rdx,[rip+0x22572]        # 0x425475
  402f03:	lea    rcx,[rax+0x60]
  402f07:	call   0x401670
  402f0c:	mov    ecx,esi
  402f0e:	call   0x4078c0
  402f13:	mov    rsi,QWORD PTR [rsp+0x28]
  402f18:	mov    rdi,rax
  402f1b:	call   rbx
  402f1d:	lea    rdx,[rip+0x22567]        # 0x42548b
  402f24:	lea    rcx,[rax+0x60]
  402f28:	mov    r9,rdi
  402f2b:	mov    r8,rsi
  402f2e:	call   0x401670
  402f33:	mov    ecx,0x1
  402f38:	call   0x421e98
  402f3d:	nop
  402f3e:	xchg   ax,ax
  402f40:	push   rdi
  402f41:	push   rsi
  402f42:	push   rbx
  402f43:	sub    rsp,0x30
  402f47:	lea    r9,[rip+0x200f2]        # 0x423040
  402f4e:	lea    r8,[rip+0x201ab]        # 0x423100
  402f55:	lea    rdx,[rip+0x23194]        # 0x4260f0
  402f5c:	mov    rbx,rcx
  402f5f:	lea    rcx,[rip+0x3011a]        # 0x433080
  402f66:	call   0x401930
  402f6b:	lea    r8,[rsp+0x28]
  402f70:	lea    rdx,[rip+0x30109]        # 0x433080
  402f77:	mov    rcx,rbx
  402f7a:	call   0x4079d0
  402f7f:	test   eax,eax
  402f81:	mov    esi,eax
  402f83:	js     0x402fac
  402f85:	mov    rax,QWORD PTR [rip+0x2a734]        # 0x42d6c0
  402f8c:	mov    edx,0x1
  402f91:	mov    rcx,rbx
  402f94:	mov    r8,QWORD PTR [rax]
  402f97:	call   0x407b70
  402f9c:	mov    rcx,rbx
  402f9f:	call   0x4016d0
  402fa4:	add    rsp,0x30
  402fa8:	pop    rbx
  402fa9:	pop    rsi
  402faa:	pop    rdi
  402fab:	ret    
  402fac:	mov    rbx,QWORD PTR [rip+0x35fc9]        # 0x438f7c
  402fb3:	call   rbx
  402fb5:	lea    r8,[rip+0x300c4]        # 0x433080
  402fbc:	lea    rdx,[rip+0x224b2]        # 0x425475
  402fc3:	lea    rcx,[rax+0x60]
  402fc7:	call   0x401670
  402fcc:	mov    ecx,esi
  402fce:	call   0x4078c0
  402fd3:	mov    rsi,QWORD PTR [rsp+0x28]
  402fd8:	mov    rdi,rax
  402fdb:	call   rbx
  402fdd:	lea    rdx,[rip+0x224a7]        # 0x42548b
  402fe4:	lea    rcx,[rax+0x60]
  402fe8:	mov    r9,rdi
  402feb:	mov    r8,rsi
  402fee:	call   0x401670
  402ff3:	mov    ecx,0x1
  402ff8:	call   0x421e98
  402ffd:	nop
  402ffe:	xchg   ax,ax
  403000:	push   rdi
  403001:	push   rsi
  403002:	push   rbx
  403003:	sub    rsp,0x30
  403007:	lea    r9,[rip+0x20032]        # 0x423040
  40300e:	lea    r8,[rip+0x200eb]        # 0x423100
  403015:	lea    rdx,[rip+0x2319c]        # 0x4261b8
  40301c:	mov    rbx,rcx
  40301f:	lea    rcx,[rip+0x3005a]        # 0x433080
  403026:	call   0x401930
  40302b:	lea    r8,[rsp+0x28]
  403030:	lea    rdx,[rip+0x30049]        # 0x433080
  403037:	mov    rcx,rbx
  40303a:	call   0x4079d0
  40303f:	test   eax,eax
  403041:	mov    esi,eax
  403043:	js     0x40306c
  403045:	mov    rax,QWORD PTR [rip+0x2a674]        # 0x42d6c0
  40304c:	mov    edx,0x1
  403051:	mov    rcx,rbx
  403054:	mov    r8,QWORD PTR [rax]
  403057:	call   0x407b70
  40305c:	mov    rcx,rbx
  40305f:	call   0x4016d0
  403064:	add    rsp,0x30
  403068:	pop    rbx
  403069:	pop    rsi
  40306a:	pop    rdi
  40306b:	ret    
  40306c:	mov    rbx,QWORD PTR [rip+0x35f09]        # 0x438f7c
  403073:	call   rbx
  403075:	lea    r8,[rip+0x30004]        # 0x433080
  40307c:	lea    rdx,[rip+0x223f2]        # 0x425475
  403083:	lea    rcx,[rax+0x60]
  403087:	call   0x401670
  40308c:	mov    ecx,esi
  40308e:	call   0x4078c0
  403093:	mov    rsi,QWORD PTR [rsp+0x28]
  403098:	mov    rdi,rax
  40309b:	call   rbx
  40309d:	lea    rdx,[rip+0x223e7]        # 0x42548b
  4030a4:	lea    rcx,[rax+0x60]
  4030a8:	mov    r9,rdi
  4030ab:	mov    r8,rsi
  4030ae:	call   0x401670
  4030b3:	mov    ecx,0x1
  4030b8:	call   0x421e98
  4030bd:	nop
  4030be:	xchg   ax,ax
  4030c0:	push   rdi
  4030c1:	push   rsi
  4030c2:	push   rbx
  4030c3:	sub    rsp,0x30
  4030c7:	lea    r9,[rip+0x1ff72]        # 0x423040
  4030ce:	lea    r8,[rip+0x1ffeb]        # 0x4230c0
  4030d5:	lea    rdx,[rip+0x231ac]        # 0x426288
  4030dc:	mov    rbx,rcx
  4030df:	lea    rcx,[rip+0x2ff9a]        # 0x433080
  4030e6:	call   0x401930
  4030eb:	lea    r8,[rsp+0x28]
  4030f0:	lea    rdx,[rip+0x2ff89]        # 0x433080
  4030f7:	mov    rcx,rbx
  4030fa:	call   0x4079d0
  4030ff:	test   eax,eax
  403101:	mov    esi,eax
  403103:	js     0x40312c
  403105:	mov    rax,QWORD PTR [rip+0x2a5b4]        # 0x42d6c0
  40310c:	mov    edx,0x1
  403111:	mov    rcx,rbx
  403114:	mov    r8,QWORD PTR [rax]
  403117:	call   0x407b70
  40311c:	mov    rcx,rbx
  40311f:	call   0x4016d0
  403124:	add    rsp,0x30
  403128:	pop    rbx
  403129:	pop    rsi
  40312a:	pop    rdi
  40312b:	ret    
  40312c:	mov    rbx,QWORD PTR [rip+0x35e49]        # 0x438f7c
  403133:	call   rbx
  403135:	lea    r8,[rip+0x2ff44]        # 0x433080
  40313c:	lea    rdx,[rip+0x22332]        # 0x425475
  403143:	lea    rcx,[rax+0x60]
  403147:	call   0x401670
  40314c:	mov    ecx,esi
  40314e:	call   0x4078c0
  403153:	mov    rsi,QWORD PTR [rsp+0x28]
  403158:	mov    rdi,rax
  40315b:	call   rbx
  40315d:	lea    rdx,[rip+0x22327]        # 0x42548b
  403164:	lea    rcx,[rax+0x60]
  403168:	mov    r9,rdi
  40316b:	mov    r8,rsi
  40316e:	call   0x401670
  403173:	mov    ecx,0x1
  403178:	call   0x421e98
  40317d:	nop
  40317e:	xchg   ax,ax
  403180:	push   rdi
  403181:	push   rsi
  403182:	push   rbx
  403183:	sub    rsp,0x30
  403187:	lea    r9,[rip+0x1feb2]        # 0x423040
  40318e:	lea    r8,[rip+0x1ff6b]        # 0x423100
  403195:	lea    rdx,[rip+0x231bc]        # 0x426358
  40319c:	mov    rbx,rcx
  40319f:	lea    rcx,[rip+0x2feda]        # 0x433080
  4031a6:	call   0x401930
  4031ab:	lea    r8,[rsp+0x28]
  4031b0:	lea    rdx,[rip+0x2fec9]        # 0x433080
  4031b7:	mov    rcx,rbx
  4031ba:	call   0x4079d0
  4031bf:	test   eax,eax
  4031c1:	mov    esi,eax
  4031c3:	js     0x4031ec
  4031c5:	mov    rax,QWORD PTR [rip+0x2a4f4]        # 0x42d6c0
  4031cc:	mov    edx,0x1
  4031d1:	mov    rcx,rbx
  4031d4:	mov    r8,QWORD PTR [rax]
  4031d7:	call   0x407b70
  4031dc:	mov    rcx,rbx
  4031df:	call   0x4016d0
  4031e4:	add    rsp,0x30
  4031e8:	pop    rbx
  4031e9:	pop    rsi
  4031ea:	pop    rdi
  4031eb:	ret    
  4031ec:	mov    rbx,QWORD PTR [rip+0x35d89]        # 0x438f7c
  4031f3:	call   rbx
  4031f5:	lea    r8,[rip+0x2fe84]        # 0x433080
  4031fc:	lea    rdx,[rip+0x22272]        # 0x425475
  403203:	lea    rcx,[rax+0x60]
  403207:	call   0x401670
  40320c:	mov    ecx,esi
  40320e:	call   0x4078c0
  403213:	mov    rsi,QWORD PTR [rsp+0x28]
  403218:	mov    rdi,rax
  40321b:	call   rbx
  40321d:	lea    rdx,[rip+0x22267]        # 0x42548b
  403224:	lea    rcx,[rax+0x60]
  403228:	mov    r9,rdi
  40322b:	mov    r8,rsi
  40322e:	call   0x401670
  403233:	mov    ecx,0x1
  403238:	call   0x421e98
  40323d:	nop
  40323e:	xchg   ax,ax
  403240:	push   rdi
  403241:	push   rsi
  403242:	push   rbx
  403243:	sub    rsp,0x30
  403247:	lea    r9,[rip+0x1fdf2]        # 0x423040
  40324e:	lea    r8,[rip+0x1feab]        # 0x423100
  403255:	lea    rdx,[rip+0x2317c]        # 0x4263d8
  40325c:	mov    rbx,rcx
  40325f:	lea    rcx,[rip+0x2fe1a]        # 0x433080
  403266:	call   0x401930
  40326b:	lea    r8,[rsp+0x28]
  403270:	lea    rdx,[rip+0x2fe09]        # 0x433080
  403277:	mov    rcx,rbx
  40327a:	call   0x4079d0
  40327f:	test   eax,eax
  403281:	mov    esi,eax
  403283:	js     0x4032ac
  403285:	mov    rax,QWORD PTR [rip+0x2a434]        # 0x42d6c0
  40328c:	mov    edx,0x1
  403291:	mov    rcx,rbx
  403294:	mov    r8,QWORD PTR [rax]
  403297:	call   0x407b70
  40329c:	mov    rcx,rbx
  40329f:	call   0x4016d0
  4032a4:	add    rsp,0x30
  4032a8:	pop    rbx
  4032a9:	pop    rsi
  4032aa:	pop    rdi
  4032ab:	ret    
  4032ac:	mov    rbx,QWORD PTR [rip+0x35cc9]        # 0x438f7c
  4032b3:	call   rbx
  4032b5:	lea    r8,[rip+0x2fdc4]        # 0x433080
  4032bc:	lea    rdx,[rip+0x221b2]        # 0x425475
  4032c3:	lea    rcx,[rax+0x60]
  4032c7:	call   0x401670
  4032cc:	mov    ecx,esi
  4032ce:	call   0x4078c0
  4032d3:	mov    rsi,QWORD PTR [rsp+0x28]
  4032d8:	mov    rdi,rax
  4032db:	call   rbx
  4032dd:	lea    rdx,[rip+0x221a7]        # 0x42548b
  4032e4:	lea    rcx,[rax+0x60]
  4032e8:	mov    r9,rdi
  4032eb:	mov    r8,rsi
  4032ee:	call   0x401670
  4032f3:	mov    ecx,0x1
  4032f8:	call   0x421e98
  4032fd:	nop
  4032fe:	xchg   ax,ax
  403300:	push   rdi
  403301:	push   rsi
  403302:	push   rbx
  403303:	sub    rsp,0x30
  403307:	lea    r8,[rip+0x1fd32]        # 0x423040
  40330e:	lea    rdx,[rip+0x23143]        # 0x426458
  403315:	mov    rbx,rcx
  403318:	lea    rcx,[rip+0x2fd61]        # 0x433080
  40331f:	call   0x401930
  403324:	lea    r8,[rsp+0x28]
  403329:	lea    rdx,[rip+0x2fd50]        # 0x433080
  403330:	mov    rcx,rbx
  403333:	call   0x4079d0
  403338:	test   eax,eax
  40333a:	mov    esi,eax
  40333c:	js     0x403373
  40333e:	mov    rax,QWORD PTR [rip+0x2a37b]        # 0x42d6c0
  403345:	mov    edx,0x1
  40334a:	mov    rcx,rbx
  40334d:	mov    r8,QWORD PTR [rax]
  403350:	call   0x407b70
  403355:	mov    rcx,rbx
  403358:	call   0x4016d0
  40335d:	test   eax,eax
  40335f:	jne    0x40336b
  403361:	mov    DWORD PTR [rip+0x2ff21],0x1        # 0x43328c
  40336b:	add    rsp,0x30
  40336f:	pop    rbx
  403370:	pop    rsi
  403371:	pop    rdi
  403372:	ret    
  403373:	mov    rbx,QWORD PTR [rip+0x35c02]        # 0x438f7c
  40337a:	call   rbx
  40337c:	lea    r8,[rip+0x2fcfd]        # 0x433080
  403383:	lea    rdx,[rip+0x220eb]        # 0x425475
  40338a:	lea    rcx,[rax+0x60]
  40338e:	call   0x401670
  403393:	mov    ecx,esi
  403395:	call   0x4078c0
  40339a:	mov    rsi,QWORD PTR [rsp+0x28]
  40339f:	mov    rdi,rax
  4033a2:	call   rbx
  4033a4:	lea    rdx,[rip+0x220e0]        # 0x42548b
  4033ab:	lea    rcx,[rax+0x60]
  4033af:	mov    r9,rdi
  4033b2:	mov    r8,rsi
  4033b5:	call   0x401670
  4033ba:	mov    ecx,0x1
  4033bf:	call   0x421e98
  4033c4:	nop
  4033c5:	nop
  4033c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033d0:	push   rdi
  4033d1:	push   rsi
  4033d2:	push   rbx
  4033d3:	sub    rsp,0x30
  4033d7:	mov    edx,DWORD PTR [rip+0x2feaf]        # 0x43328c
  4033dd:	mov    eax,0x3
  4033e2:	test   edx,edx
  4033e4:	je     0x4033f0
  4033e6:	add    rsp,0x30
  4033ea:	pop    rbx
  4033eb:	pop    rsi
  4033ec:	pop    rdi
  4033ed:	ret    
  4033ee:	xchg   ax,ax
  4033f0:	mov    rbx,rcx
  4033f3:	lea    r8,[rip+0x1fc46]        # 0x423040
  4033fa:	lea    rdx,[rip+0x2313f]        # 0x426540
  403401:	lea    rcx,[rip+0x2fc78]        # 0x433080
  403408:	call   0x401930
  40340d:	lea    r8,[rsp+0x28]
  403412:	lea    rdx,[rip+0x2fc67]        # 0x433080
  403419:	mov    rcx,rbx
  40341c:	call   0x4079d0
  403421:	test   eax,eax
  403423:	mov    esi,eax
  403425:	js     0x4034d4
  40342b:	mov    rax,QWORD PTR [rip+0x2a28e]        # 0x42d6c0
  403432:	mov    edx,0x1
  403437:	mov    rcx,rbx
  40343a:	mov    r8,QWORD PTR [rax]
  40343d:	call   0x407b70
  403442:	mov    rcx,rbx
  403445:	call   0x4016d0
  40344a:	test   eax,eax
  40344c:	jne    0x4033e6
  40344e:	lea    r9,[rip+0x1fbeb]        # 0x423040
  403455:	mov    r10,r9
  403458:	mov    rcx,r9
  40345b:	mov    r8d,DWORD PTR [rcx]
  40345e:	add    rcx,0x4
  403462:	lea    edx,[r8-0x1010101]
  403469:	not    r8d
  40346c:	and    edx,r8d
  40346f:	and    edx,0x80808080
  403475:	je     0x40345b
  403477:	mov    r8d,edx
  40347a:	movabs rdi,0x54534554414c253a
  403484:	mov    DWORD PTR [rip+0x2fdfe],0x1        # 0x43328c
  40348e:	shr    r8d,0x10
  403492:	test   edx,0x8080
  403498:	cmove  edx,r8d
  40349c:	lea    r8,[rcx+0x2]
  4034a0:	cmove  rcx,r8
  4034a4:	add    dl,dl
  4034a6:	sbb    rcx,0x3
  4034aa:	sub    rcx,r9
  4034ad:	add    rcx,r10
  4034b0:	mov    QWORD PTR [rcx],rdi
  4034b3:	movabs rdi,0x5f44524f4345525f
  4034bd:	mov    QWORD PTR [rcx+0x8],rdi
  4034c1:	movabs rdi,0x4e4f4953524556
  4034cb:	mov    QWORD PTR [rcx+0x10],rdi
  4034cf:	jmp    0x4033e6
  4034d4:	mov    rbx,QWORD PTR [rip+0x35aa1]        # 0x438f7c
  4034db:	call   rbx
  4034dd:	lea    r8,[rip+0x2fb9c]        # 0x433080
  4034e4:	lea    rdx,[rip+0x21f8a]        # 0x425475
  4034eb:	lea    rcx,[rax+0x60]
  4034ef:	call   0x401670
  4034f4:	mov    ecx,esi
  4034f6:	call   0x4078c0
  4034fb:	mov    rsi,QWORD PTR [rsp+0x28]
  403500:	mov    rdi,rax
  403503:	call   rbx
  403505:	lea    rdx,[rip+0x21f7f]        # 0x42548b
  40350c:	lea    rcx,[rax+0x60]
  403510:	mov    r9,rdi
  403513:	mov    r8,rsi
  403516:	call   0x401670
  40351b:	mov    ecx,0x1
  403520:	call   0x421e98
  403525:	nop
  403526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403530:	push   rdi
  403531:	push   rsi
  403532:	push   rbx
  403533:	sub    rsp,0x30
  403537:	lea    r8,[rip+0x1fb02]        # 0x423040
  40353e:	lea    rdx,[rip+0x230e3]        # 0x426628
  403545:	mov    rbx,rcx
  403548:	lea    rcx,[rip+0x2fb31]        # 0x433080
  40354f:	call   0x401930
  403554:	lea    r8,[rsp+0x28]
  403559:	lea    rdx,[rip+0x2fb20]        # 0x433080
  403560:	mov    rcx,rbx
  403563:	call   0x4079d0
  403568:	test   eax,eax
  40356a:	mov    esi,eax
  40356c:	js     0x403617
  403572:	mov    rax,QWORD PTR [rip+0x2a147]        # 0x42d6c0
  403579:	mov    edx,0x1
  40357e:	mov    rcx,rbx
  403581:	mov    r8,QWORD PTR [rax]
  403584:	call   0x407b70
  403589:	mov    rcx,rbx
  40358c:	call   0x4016d0
  403591:	test   eax,eax
  403593:	jne    0x4035b0
  403595:	mov    DWORD PTR [rip+0x2fced],0x1        # 0x43328c
  40359f:	add    rsp,0x30
  4035a3:	pop    rbx
  4035a4:	pop    rsi
  4035a5:	pop    rdi
  4035a6:	ret    
  4035a7:	nop    WORD PTR [rax+rax*1+0x0]
  4035b0:	lea    r9,[rip+0x1fa89]        # 0x423040
  4035b7:	mov    r10,r9
  4035ba:	mov    rcx,r9
  4035bd:	mov    r8d,DWORD PTR [rcx]
  4035c0:	add    rcx,0x4
  4035c4:	lea    edx,[r8-0x1010101]
  4035cb:	not    r8d
  4035ce:	and    edx,r8d
  4035d1:	and    edx,0x80808080
  4035d7:	je     0x4035bd
  4035d9:	mov    r8d,edx
  4035dc:	movabs rdi,0x5441504d4f43253a
  4035e6:	shr    r8d,0x10
  4035ea:	test   edx,0x8080
  4035f0:	cmove  edx,r8d
  4035f4:	lea    r8,[rcx+0x2]
  4035f8:	cmove  rcx,r8
  4035fc:	add    dl,dl
  4035fe:	sbb    rcx,0x3
  403602:	sub    rcx,r9
  403605:	add    rcx,r10
  403608:	mov    QWORD PTR [rcx],rdi
  40360b:	mov    BYTE PTR [rcx+0x8],0x0
  40360f:	add    rsp,0x30
  403613:	pop    rbx
  403614:	pop    rsi
  403615:	pop    rdi
  403616:	ret    
  403617:	mov    rbx,QWORD PTR [rip+0x3595e]        # 0x438f7c
  40361e:	call   rbx
  403620:	lea    r8,[rip+0x2fa59]        # 0x433080
  403627:	lea    rdx,[rip+0x21e47]        # 0x425475
  40362e:	lea    rcx,[rax+0x60]
  403632:	call   0x401670
  403637:	mov    ecx,esi
  403639:	call   0x4078c0
  40363e:	mov    rsi,QWORD PTR [rsp+0x28]
  403643:	mov    rdi,rax
  403646:	call   rbx
  403648:	lea    rdx,[rip+0x21e3c]        # 0x42548b
  40364f:	lea    rcx,[rax+0x60]
  403653:	mov    r9,rdi
  403656:	mov    r8,rsi
  403659:	call   0x401670
  40365e:	mov    ecx,0x1
  403663:	call   0x421e98
  403668:	nop
  403669:	nop    DWORD PTR [rax+0x0]
  403670:	push   rdi
  403671:	push   rsi
  403672:	push   rbx
  403673:	sub    rsp,0x30
  403677:	lea    r9,[rip+0x1f9c2]        # 0x423040
  40367e:	lea    r8,[rip+0x1fa7b]        # 0x423100
  403685:	lea    rdx,[rip+0x21d24]        # 0x4253b0
  40368c:	mov    rbx,rcx
  40368f:	lea    rcx,[rip+0x2f9ea]        # 0x433080
  403696:	call   0x401930
  40369b:	lea    r8,[rsp+0x28]
  4036a0:	lea    rdx,[rip+0x2f9d9]        # 0x433080
  4036a7:	mov    rcx,rbx
  4036aa:	call   0x4079d0
  4036af:	test   eax,eax
  4036b1:	mov    esi,eax
  4036b3:	js     0x40377b
  4036b9:	mov    rax,QWORD PTR [rip+0x2a000]        # 0x42d6c0
  4036c0:	mov    edx,0x1
  4036c5:	mov    rcx,rbx
  4036c8:	mov    r8,QWORD PTR [rax]
  4036cb:	call   0x407b70
  4036d0:	mov    edx,0x1000
  4036d5:	mov    rcx,rbx
  4036d8:	call   0x407978
  4036dd:	mov    rcx,rbx
  4036e0:	call   0x4016d0
  4036e5:	test   eax,eax
  4036e7:	jne    0x403700
  4036e9:	mov    DWORD PTR [rip+0x1fa41],0x1        # 0x423134
  4036f3:	add    rsp,0x30
  4036f7:	pop    rbx
  4036f8:	pop    rsi
  4036f9:	pop    rdi
  4036fa:	ret    
  4036fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403700:	lea    r9,[rip+0x1f939]        # 0x423040
  403707:	mov    DWORD PTR [rip+0x1fa23],0x0        # 0x423134
  403711:	mov    r10,r9
  403714:	mov    rcx,r9
  403717:	mov    r8d,DWORD PTR [rcx]
  40371a:	add    rcx,0x4
  40371e:	lea    edx,[r8-0x1010101]
  403725:	not    r8d
  403728:	and    edx,r8d
  40372b:	and    edx,0x80808080
  403731:	je     0x403717
  403733:	mov    r8d,edx
  403736:	movabs rdi,0x5458455f4f4e253a
  403740:	shr    r8d,0x10
  403744:	test   edx,0x8080
  40374a:	cmove  edx,r8d
  40374e:	lea    r8,[rcx+0x2]
  403752:	cmove  rcx,r8
  403756:	add    dl,dl
  403758:	sbb    rcx,0x3
  40375c:	sub    rcx,r9
  40375f:	add    rcx,r10
  403762:	mov    QWORD PTR [rcx],rdi
  403765:	movabs rdi,0x534e4f49534e45
  40376f:	mov    QWORD PTR [rcx+0x8],rdi
  403773:	add    rsp,0x30
  403777:	pop    rbx
  403778:	pop    rsi
  403779:	pop    rdi
  40377a:	ret    
  40377b:	mov    rbx,QWORD PTR [rip+0x357fa]        # 0x438f7c
  403782:	call   rbx
  403784:	lea    r8,[rip+0x2f8f5]        # 0x433080
  40378b:	lea    rdx,[rip+0x21ce3]        # 0x425475
  403792:	lea    rcx,[rax+0x60]
  403796:	call   0x401670
  40379b:	mov    ecx,esi
  40379d:	call   0x4078c0
  4037a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4037a7:	mov    rdi,rax
  4037aa:	call   rbx
  4037ac:	lea    rdx,[rip+0x21cd8]        # 0x42548b
  4037b3:	lea    rcx,[rax+0x60]
  4037b7:	mov    r9,rdi
  4037ba:	mov    r8,rsi
  4037bd:	call   0x401670
  4037c2:	mov    ecx,0x1
  4037c7:	call   0x421e98
  4037cc:	nop
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	push   rdi
  4037d1:	push   rsi
  4037d2:	push   rbx
  4037d3:	sub    rsp,0x30
  4037d7:	lea    r8,[rip+0x1f862]        # 0x423040
  4037de:	lea    rdx,[rip+0x22efb]        # 0x4266e0
  4037e5:	mov    rbx,rcx
  4037e8:	lea    rcx,[rip+0x2f891]        # 0x433080
  4037ef:	call   0x401930
  4037f4:	lea    r8,[rsp+0x28]
  4037f9:	lea    rdx,[rip+0x2f880]        # 0x433080
  403800:	mov    rcx,rbx
  403803:	call   0x4079d0
  403808:	test   eax,eax
  40380a:	mov    esi,eax
  40380c:	js     0x403843
  40380e:	mov    rax,QWORD PTR [rip+0x29eab]        # 0x42d6c0
  403815:	mov    edx,0x1
  40381a:	mov    rcx,rbx
  40381d:	mov    r8,QWORD PTR [rax]
  403820:	call   0x407b70
  403825:	mov    rcx,rbx
  403828:	call   0x4016d0
  40382d:	test   eax,eax
  40382f:	jne    0x40383b
  403831:	mov    DWORD PTR [rip+0x2fa45],0x1        # 0x433280
  40383b:	add    rsp,0x30
  40383f:	pop    rbx
  403840:	pop    rsi
  403841:	pop    rdi
  403842:	ret    
  403843:	mov    rbx,QWORD PTR [rip+0x35732]        # 0x438f7c
  40384a:	call   rbx
  40384c:	lea    r8,[rip+0x2f82d]        # 0x433080
  403853:	lea    rdx,[rip+0x21c1b]        # 0x425475
  40385a:	lea    rcx,[rax+0x60]
  40385e:	call   0x401670
  403863:	mov    ecx,esi
  403865:	call   0x4078c0
  40386a:	mov    rsi,QWORD PTR [rsp+0x28]
  40386f:	mov    rdi,rax
  403872:	call   rbx
  403874:	lea    rdx,[rip+0x21c10]        # 0x42548b
  40387b:	lea    rcx,[rax+0x60]
  40387f:	mov    r9,rdi
  403882:	mov    r8,rsi
  403885:	call   0x401670
  40388a:	mov    ecx,0x1
  40388f:	call   0x421e98
  403894:	nop
  403895:	nop
  403896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038a0:	push   rdi
  4038a1:	push   rsi
  4038a2:	push   rbx
  4038a3:	sub    rsp,0x30
  4038a7:	lea    r8,[rip+0x1f792]        # 0x423040
  4038ae:	lea    rdx,[rip+0x22efb]        # 0x4267b0
  4038b5:	mov    rbx,rcx
  4038b8:	lea    rcx,[rip+0x2f7c1]        # 0x433080
  4038bf:	call   0x401930
  4038c4:	lea    r8,[rsp+0x28]
  4038c9:	lea    rdx,[rip+0x2f7b0]        # 0x433080
  4038d0:	mov    rcx,rbx
  4038d3:	call   0x4079d0
  4038d8:	test   eax,eax
  4038da:	mov    esi,eax
  4038dc:	js     0x403913
  4038de:	mov    rax,QWORD PTR [rip+0x29ddb]        # 0x42d6c0
  4038e5:	mov    edx,0x1
  4038ea:	mov    rcx,rbx
  4038ed:	mov    r8,QWORD PTR [rax]
  4038f0:	call   0x407b70
  4038f5:	mov    rcx,rbx
  4038f8:	call   0x4016d0
  4038fd:	test   eax,eax
  4038ff:	jne    0x40390b
  403901:	mov    DWORD PTR [rip+0x2f979],0x1        # 0x433284
  40390b:	add    rsp,0x30
  40390f:	pop    rbx
  403910:	pop    rsi
  403911:	pop    rdi
  403912:	ret    
  403913:	mov    rbx,QWORD PTR [rip+0x35662]        # 0x438f7c
  40391a:	call   rbx
  40391c:	lea    r8,[rip+0x2f75d]        # 0x433080
  403923:	lea    rdx,[rip+0x21b4b]        # 0x425475
  40392a:	lea    rcx,[rax+0x60]
  40392e:	call   0x401670
  403933:	mov    ecx,esi
  403935:	call   0x4078c0
  40393a:	mov    rsi,QWORD PTR [rsp+0x28]
  40393f:	mov    rdi,rax
  403942:	call   rbx
  403944:	lea    rdx,[rip+0x21b40]        # 0x42548b
  40394b:	lea    rcx,[rax+0x60]
  40394f:	mov    r9,rdi
  403952:	mov    r8,rsi
  403955:	call   0x401670
  40395a:	mov    ecx,0x1
  40395f:	call   0x421e98
  403964:	nop
  403965:	nop
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403970:	push   rdi
  403971:	push   rsi
  403972:	push   rbx
  403973:	sub    rsp,0x30
  403977:	mov    edx,DWORD PTR [rip+0x2f907]        # 0x433284
  40397d:	mov    eax,0x3
  403982:	test   edx,edx
  403984:	je     0x403990
  403986:	add    rsp,0x30
  40398a:	pop    rbx
  40398b:	pop    rsi
  40398c:	pop    rdi
  40398d:	ret    
  40398e:	xchg   ax,ax
  403990:	mov    rbx,rcx
  403993:	lea    r8,[rip+0x1f6a6]        # 0x423040
  40399a:	lea    rdx,[rip+0x22edf]        # 0x426880
  4039a1:	lea    rcx,[rip+0x2f6d8]        # 0x433080
  4039a8:	call   0x401930
  4039ad:	lea    r8,[rsp+0x28]
  4039b2:	lea    rdx,[rip+0x2f6c7]        # 0x433080
  4039b9:	mov    rcx,rbx
  4039bc:	call   0x4079d0
  4039c1:	test   eax,eax
  4039c3:	mov    esi,eax
  4039c5:	js     0x403a1b
  4039c7:	mov    rax,QWORD PTR [rip+0x29cf2]        # 0x42d6c0
  4039ce:	mov    edx,0x1
  4039d3:	mov    rcx,rbx
  4039d6:	mov    r8,QWORD PTR [rax]
  4039d9:	call   0x407b70
  4039de:	mov    rcx,rbx
  4039e1:	call   0x4016d0
  4039e6:	mov    edx,eax
  4039e8:	mov    eax,0x1
  4039ed:	test   edx,edx
  4039ef:	jne    0x403986
  4039f1:	mov    rcx,rbx
  4039f4:	call   0x4079b8
  4039f9:	mov    edx,eax
  4039fb:	xor    eax,eax
  4039fd:	cmp    edx,0x2
  403a00:	je     0x403986
  403a02:	mov    rcx,rbx
  403a05:	call   0x4079b8
  403a0a:	cmp    eax,0x1
  403a0d:	sete   al
  403a10:	movzx  eax,al
  403a13:	add    eax,0x1
  403a16:	jmp    0x403986
  403a1b:	mov    rbx,QWORD PTR [rip+0x3555a]        # 0x438f7c
  403a22:	call   rbx
  403a24:	lea    r8,[rip+0x2f655]        # 0x433080
  403a2b:	lea    rdx,[rip+0x21a43]        # 0x425475
  403a32:	lea    rcx,[rax+0x60]
  403a36:	call   0x401670
  403a3b:	mov    ecx,esi
  403a3d:	call   0x4078c0
  403a42:	mov    rsi,QWORD PTR [rsp+0x28]
  403a47:	mov    rdi,rax
  403a4a:	call   rbx
  403a4c:	lea    rdx,[rip+0x21a38]        # 0x42548b
  403a53:	lea    rcx,[rax+0x60]
  403a57:	mov    r9,rdi
  403a5a:	mov    r8,rsi
  403a5d:	call   0x401670
  403a62:	mov    ecx,0x1
  403a67:	call   0x421e98
  403a6c:	nop
  403a6d:	nop    DWORD PTR [rax]
  403a70:	push   rdi
  403a71:	push   rsi
  403a72:	push   rbx
  403a73:	sub    rsp,0x30
  403a77:	lea    r8,[rip+0x1f5c2]        # 0x423040
  403a7e:	lea    rdx,[rip+0x22eeb]        # 0x426970
  403a85:	mov    rbx,rcx
  403a88:	lea    rcx,[rip+0x2f5f1]        # 0x433080
  403a8f:	call   0x401930
  403a94:	lea    r8,[rsp+0x28]
  403a99:	lea    rdx,[rip+0x2f5e0]        # 0x433080
  403aa0:	mov    rcx,rbx
  403aa3:	call   0x4079d0
  403aa8:	test   eax,eax
  403aaa:	mov    esi,eax
  403aac:	js     0x403b0b
  403aae:	mov    rax,QWORD PTR [rip+0x29c0b]        # 0x42d6c0
  403ab5:	mov    edx,0x1
  403aba:	mov    rcx,rbx
  403abd:	mov    r8,QWORD PTR [rax]
  403ac0:	call   0x407b70
  403ac5:	mov    edx,0x3
  403aca:	mov    r8d,0x7
  403ad0:	mov    rcx,rbx
  403ad3:	call   0x407c58
  403ad8:	mov    rcx,rbx
  403adb:	call   0x4016d0
  403ae0:	test   eax,eax
  403ae2:	mov    edx,0x1
  403ae7:	jne    0x403b01
  403ae9:	mov    rcx,rbx
  403aec:	call   0x4079b8
  403af1:	mov    ecx,eax
  403af3:	call   0x4079c0
  403af8:	xor    edx,edx
  403afa:	mov    QWORD PTR [rip+0x1f637],rax        # 0x423138
  403b01:	mov    eax,edx
  403b03:	add    rsp,0x30
  403b07:	pop    rbx
  403b08:	pop    rsi
  403b09:	pop    rdi
  403b0a:	ret    
  403b0b:	mov    rbx,QWORD PTR [rip+0x3546a]        # 0x438f7c
  403b12:	call   rbx
  403b14:	lea    r8,[rip+0x2f565]        # 0x433080
  403b1b:	lea    rdx,[rip+0x21953]        # 0x425475
  403b22:	lea    rcx,[rax+0x60]
  403b26:	call   0x401670
  403b2b:	mov    ecx,esi
  403b2d:	call   0x4078c0
  403b32:	mov    rsi,QWORD PTR [rsp+0x28]
  403b37:	mov    rdi,rax
  403b3a:	call   rbx
  403b3c:	lea    rdx,[rip+0x21948]        # 0x42548b
  403b43:	lea    rcx,[rax+0x60]
  403b47:	mov    r9,rdi
  403b4a:	mov    r8,rsi
  403b4d:	call   0x401670
  403b52:	mov    ecx,0x1
  403b57:	call   0x421e98
  403b5c:	nop
  403b5d:	nop    DWORD PTR [rax]
  403b60:	push   rdi
  403b61:	push   rsi
  403b62:	push   rbx
  403b63:	sub    rsp,0x30
  403b67:	mov    r8d,DWORD PTR [rip+0x2f71e]        # 0x43328c
  403b6e:	mov    eax,0x3
  403b73:	test   r8d,r8d
  403b76:	je     0x403b80
  403b78:	add    rsp,0x30
  403b7c:	pop    rbx
  403b7d:	pop    rsi
  403b7e:	pop    rdi
  403b7f:	ret    
  403b80:	mov    rbx,rcx
  403b83:	lea    r9,[rip+0x1f4b6]        # 0x423040
  403b8a:	lea    r8,[rip+0x1f56f]        # 0x423100
  403b91:	lea    rdx,[rip+0x21818]        # 0x4253b0
  403b98:	lea    rcx,[rip+0x2f4e1]        # 0x433080
  403b9f:	call   0x401930
  403ba4:	lea    r8,[rsp+0x28]
  403ba9:	lea    rdx,[rip+0x2f4d0]        # 0x433080
  403bb0:	mov    rcx,rbx
  403bb3:	call   0x4079d0
  403bb8:	test   eax,eax
  403bba:	mov    esi,eax
  403bbc:	js     0x403c13
  403bbe:	mov    rax,QWORD PTR [rip+0x29afb]        # 0x42d6c0
  403bc5:	mov    edx,0x1
  403bca:	mov    rcx,rbx
  403bcd:	mov    r8,QWORD PTR [rax]
  403bd0:	call   0x407b70
  403bd5:	mov    rcx,rbx
  403bd8:	call   0x4016d0
  403bdd:	cmp    eax,0x1
  403be0:	jne    0x403b78
  403be2:	mov    edx,DWORD PTR [rip+0x2f6a0]        # 0x433288
  403be8:	test   edx,edx
  403bea:	je     0x403b78
  403bec:	movabs rdi,0x53532d535245562b
  403bf6:	mov    DWORD PTR [rip+0x1f508],0x302e334c        # 0x423108
  403c00:	mov    BYTE PTR [rip+0x1f505],0x0        # 0x42310c
  403c07:	mov    QWORD PTR [rip+0x1f4f2],rdi        # 0x423100
  403c0e:	jmp    0x403b78
  403c13:	mov    rbx,QWORD PTR [rip+0x35362]        # 0x438f7c
  403c1a:	call   rbx
  403c1c:	lea    r8,[rip+0x2f45d]        # 0x433080
  403c23:	lea    rdx,[rip+0x2184b]        # 0x425475
  403c2a:	lea    rcx,[rax+0x60]
  403c2e:	call   0x401670
  403c33:	mov    ecx,esi
  403c35:	call   0x4078c0
  403c3a:	mov    rsi,QWORD PTR [rsp+0x28]
  403c3f:	mov    rdi,rax
  403c42:	call   rbx
  403c44:	lea    rdx,[rip+0x21840]        # 0x42548b
  403c4b:	lea    rcx,[rax+0x60]
  403c4f:	mov    r9,rdi
  403c52:	mov    r8,rsi
  403c55:	call   0x401670
  403c5a:	mov    ecx,0x1
  403c5f:	call   0x421e98
  403c64:	nop
  403c65:	nop
  403c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c70:	push   rdi
  403c71:	push   rsi
  403c72:	push   rbx
  403c73:	sub    rsp,0x30
  403c77:	mov    edx,DWORD PTR [rip+0x2f607]        # 0x433284
  403c7d:	mov    eax,0x3
  403c82:	test   edx,edx
  403c84:	je     0x403c90
  403c86:	add    rsp,0x30
  403c8a:	pop    rbx
  403c8b:	pop    rsi
  403c8c:	pop    rdi
  403c8d:	ret    
  403c8e:	xchg   ax,ax
  403c90:	mov    rbx,rcx
  403c93:	lea    r9,[rip+0x1f3a6]        # 0x423040
  403c9a:	lea    r8,[rip+0x1f45f]        # 0x423100
  403ca1:	lea    rdx,[rip+0x21708]        # 0x4253b0
  403ca8:	lea    rcx,[rip+0x2f3d1]        # 0x433080
  403caf:	call   0x401930
  403cb4:	lea    r8,[rsp+0x28]
  403cb9:	lea    rdx,[rip+0x2f3c0]        # 0x433080
  403cc0:	mov    rcx,rbx
  403cc3:	call   0x4079d0
  403cc8:	test   eax,eax
  403cca:	mov    esi,eax
  403ccc:	js     0x403d1c
  403cce:	mov    rax,QWORD PTR [rip+0x299eb]        # 0x42d6c0
  403cd5:	mov    rcx,rbx
  403cd8:	mov    edx,0x1
  403cdd:	mov    r8,QWORD PTR [rax]
  403ce0:	call   0x407b70
  403ce5:	mov    rcx,rbx
  403ce8:	call   0x4016d0
  403ced:	cmp    eax,0x1
  403cf0:	mov    ebx,eax
  403cf2:	je     0x403d00
  403cf4:	mov    eax,ebx
  403cf6:	add    rsp,0x30
  403cfa:	pop    rbx
  403cfb:	pop    rsi
  403cfc:	pop    rdi
  403cfd:	ret    
  403cfe:	xchg   ax,ax
  403d00:	lea    r8,[rip+0x22d64]        # 0x426a6b
  403d07:	lea    rcx,[rip+0x1f3f2]        # 0x423100
  403d0e:	mov    edx,0x34
  403d13:	call   0x414cf0
  403d18:	mov    eax,ebx
  403d1a:	jmp    0x403cf6
  403d1c:	mov    rbx,QWORD PTR [rip+0x35259]        # 0x438f7c
  403d23:	call   rbx
  403d25:	lea    r8,[rip+0x2f354]        # 0x433080
  403d2c:	lea    rdx,[rip+0x21742]        # 0x425475
  403d33:	lea    rcx,[rax+0x60]
  403d37:	call   0x401670
  403d3c:	mov    ecx,esi
  403d3e:	call   0x4078c0
  403d43:	mov    rsi,QWORD PTR [rsp+0x28]
  403d48:	mov    rdi,rax
  403d4b:	call   rbx
  403d4d:	lea    rdx,[rip+0x21737]        # 0x42548b
  403d54:	lea    rcx,[rax+0x60]
  403d58:	mov    r9,rdi
  403d5b:	mov    r8,rsi
  403d5e:	call   0x401670
  403d63:	mov    ecx,0x1
  403d68:	call   0x421e98
  403d6d:	nop
  403d6e:	xchg   ax,ax
  403d70:	push   rdi
  403d71:	push   rsi
  403d72:	push   rbx
  403d73:	sub    rsp,0x30
  403d77:	mov    edx,DWORD PTR [rip+0x2f503]        # 0x433280
  403d7d:	mov    eax,0x3
  403d82:	test   edx,edx
  403d84:	je     0x403d90
  403d86:	add    rsp,0x30
  403d8a:	pop    rbx
  403d8b:	pop    rsi
  403d8c:	pop    rdi
  403d8d:	ret    
  403d8e:	xchg   ax,ax
  403d90:	mov    rbx,rcx
  403d93:	lea    r9,[rip+0x1f2a6]        # 0x423040
  403d9a:	lea    r8,[rip+0x1f35f]        # 0x423100
  403da1:	lea    rdx,[rip+0x21608]        # 0x4253b0
  403da8:	lea    rcx,[rip+0x2f2d1]        # 0x433080
  403daf:	call   0x401930
  403db4:	lea    r8,[rsp+0x28]
  403db9:	lea    rdx,[rip+0x2f2c0]        # 0x433080
  403dc0:	mov    rcx,rbx
  403dc3:	call   0x4079d0
  403dc8:	test   eax,eax
  403dca:	mov    esi,eax
  403dcc:	js     0x403e1c
  403dce:	mov    rax,QWORD PTR [rip+0x298eb]        # 0x42d6c0
  403dd5:	mov    rcx,rbx
  403dd8:	mov    edx,0x1
  403ddd:	mov    r8,QWORD PTR [rax]
  403de0:	call   0x407b70
  403de5:	mov    rcx,rbx
  403de8:	call   0x4016d0
  403ded:	cmp    eax,0x1
  403df0:	mov    ebx,eax
  403df2:	je     0x403e00
  403df4:	mov    eax,ebx
  403df6:	add    rsp,0x30
  403dfa:	pop    rbx
  403dfb:	pop    rsi
  403dfc:	pop    rdi
  403dfd:	ret    
  403dfe:	xchg   ax,ax
  403e00:	lea    r8,[rip+0x22c81]        # 0x426a88
  403e07:	lea    rcx,[rip+0x1f2f2]        # 0x423100
  403e0e:	mov    edx,0x34
  403e13:	call   0x414cf0
  403e18:	mov    eax,ebx
  403e1a:	jmp    0x403df6
  403e1c:	mov    rbx,QWORD PTR [rip+0x35159]        # 0x438f7c
  403e23:	call   rbx
  403e25:	lea    r8,[rip+0x2f254]        # 0x433080
  403e2c:	lea    rdx,[rip+0x21642]        # 0x425475
  403e33:	lea    rcx,[rax+0x60]
  403e37:	call   0x401670
  403e3c:	mov    ecx,esi
  403e3e:	call   0x4078c0
  403e43:	mov    rsi,QWORD PTR [rsp+0x28]
  403e48:	mov    rdi,rax
  403e4b:	call   rbx
  403e4d:	lea    rdx,[rip+0x21637]        # 0x42548b
  403e54:	lea    rcx,[rax+0x60]
  403e58:	mov    r9,rdi
  403e5b:	mov    r8,rsi
  403e5e:	call   0x401670
  403e63:	mov    ecx,0x1
  403e68:	call   0x421e98
  403e6d:	nop
  403e6e:	xchg   ax,ax
  403e70:	push   rdi
  403e71:	push   rsi
  403e72:	push   rbx
  403e73:	sub    rsp,0x30
  403e77:	lea    r9,[rip+0x1f1c2]        # 0x423040
  403e7e:	lea    r8,[rip+0x1f27b]        # 0x423100
  403e85:	lea    rdx,[rip+0x22c24]        # 0x426ab0
  403e8c:	mov    rbx,rcx
  403e8f:	lea    rcx,[rip+0x2f1ea]        # 0x433080
  403e96:	call   0x401930
  403e9b:	lea    r8,[rsp+0x28]
  403ea0:	lea    rdx,[rip+0x2f1d9]        # 0x433080
  403ea7:	mov    rcx,rbx
  403eaa:	call   0x4079d0
  403eaf:	test   eax,eax
  403eb1:	mov    esi,eax
  403eb3:	js     0x403efa
  403eb5:	mov    rax,QWORD PTR [rip+0x29804]        # 0x42d6c0
  403ebc:	mov    edx,0x1
  403ec1:	mov    rcx,rbx
  403ec4:	mov    r8,QWORD PTR [rax]
  403ec7:	call   0x407b70
  403ecc:	mov    rcx,rbx
  403ecf:	call   0x4016d0
  403ed4:	cmp    eax,0x1
  403ed7:	mov    edx,0x1
  403edc:	je     0x403ef0
  403ede:	mov    rcx,rbx
  403ee1:	call   0x4079b8
  403ee6:	xor    edx,edx
  403ee8:	cmp    eax,0x2
  403eeb:	setne  dl
  403eee:	add    edx,edx
  403ef0:	mov    eax,edx
  403ef2:	add    rsp,0x30
  403ef6:	pop    rbx
  403ef7:	pop    rsi
  403ef8:	pop    rdi
  403ef9:	ret    
  403efa:	mov    rbx,QWORD PTR [rip+0x3507b]        # 0x438f7c
  403f01:	call   rbx
  403f03:	lea    r8,[rip+0x2f176]        # 0x433080
  403f0a:	lea    rdx,[rip+0x21564]        # 0x425475
  403f11:	lea    rcx,[rax+0x60]
  403f15:	call   0x401670
  403f1a:	mov    ecx,esi
  403f1c:	call   0x4078c0
  403f21:	mov    rsi,QWORD PTR [rsp+0x28]
  403f26:	mov    rdi,rax
  403f29:	call   rbx
  403f2b:	lea    rdx,[rip+0x21559]        # 0x42548b
  403f32:	lea    rcx,[rax+0x60]
  403f36:	mov    r9,rdi
  403f39:	mov    r8,rsi
  403f3c:	call   0x401670
  403f41:	mov    ecx,0x1
  403f46:	call   0x421e98
  403f4b:	nop
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	push   rdi
  403f51:	push   rsi
  403f52:	push   rbx
  403f53:	sub    rsp,0x30
  403f57:	mov    edx,DWORD PTR [rip+0x1f1d7]        # 0x423134
  403f5d:	mov    eax,0x3
  403f62:	test   edx,edx
  403f64:	jne    0x403f70
  403f66:	add    rsp,0x30
  403f6a:	pop    rbx
  403f6b:	pop    rsi
  403f6c:	pop    rdi
  403f6d:	ret    
  403f6e:	xchg   ax,ax
  403f70:	mov    rbx,rcx
  403f73:	lea    r9,[rip+0x1f0c6]        # 0x423040
  403f7a:	lea    r8,[rip+0x1f17f]        # 0x423100
  403f81:	lea    rdx,[rip+0x21428]        # 0x4253b0
  403f88:	lea    rcx,[rip+0x2f0f1]        # 0x433080
  403f8f:	call   0x401930
  403f94:	lea    r8,[rsp+0x28]
  403f99:	lea    rdx,[rip+0x2f0e0]        # 0x433080
  403fa0:	mov    rcx,rbx
  403fa3:	call   0x4079d0
  403fa8:	test   eax,eax
  403faa:	mov    esi,eax
  403fac:	js     0x404001
  403fae:	mov    rax,QWORD PTR [rip+0x2970b]        # 0x42d6c0
  403fb5:	mov    edx,0x1
  403fba:	mov    rcx,rbx
  403fbd:	mov    r8,QWORD PTR [rax]
  403fc0:	call   0x407b70
  403fc5:	mov    edx,0x200
  403fca:	mov    rcx,rbx
  403fcd:	call   0x407978
  403fd2:	mov    rcx,rbx
  403fd5:	call   0x4016d0
  403fda:	mov    edx,eax
  403fdc:	mov    eax,0x1
  403fe1:	cmp    edx,0x1
  403fe4:	je     0x403f66
  403fe6:	mov    rcx,rbx
  403fe9:	call   0x407998
  403fee:	cmp    eax,0x200
  403ff3:	setne  al
  403ff6:	movzx  eax,al
  403ff9:	add    rsp,0x30
  403ffd:	pop    rbx
  403ffe:	pop    rsi
  403fff:	pop    rdi
  404000:	ret    
  404001:	mov    rbx,QWORD PTR [rip+0x34f74]        # 0x438f7c
  404008:	call   rbx
  40400a:	lea    r8,[rip+0x2f06f]        # 0x433080
  404011:	lea    rdx,[rip+0x2145d]        # 0x425475
  404018:	lea    rcx,[rax+0x60]
  40401c:	call   0x401670
  404021:	mov    ecx,esi
  404023:	call   0x4078c0
  404028:	mov    rsi,QWORD PTR [rsp+0x28]
  40402d:	mov    rdi,rax
  404030:	call   rbx
  404032:	lea    rdx,[rip+0x21452]        # 0x42548b
  404039:	lea    rcx,[rax+0x60]
  40403d:	mov    r9,rdi
  404040:	mov    r8,rsi
  404043:	call   0x401670
  404048:	mov    ecx,0x1
  40404d:	call   0x421e98
  404052:	nop
  404053:	nop    DWORD PTR [rax]
  404056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404060:	push   rdi
  404061:	push   rsi
  404062:	push   rbx
  404063:	sub    rsp,0x30
  404067:	mov    edx,DWORD PTR [rip+0x1f0c7]        # 0x423134
  40406d:	mov    eax,0x3
  404072:	test   edx,edx
  404074:	jne    0x404080
  404076:	add    rsp,0x30
  40407a:	pop    rbx
  40407b:	pop    rsi
  40407c:	pop    rdi
  40407d:	ret    
  40407e:	xchg   ax,ax
  404080:	mov    rbx,rcx
  404083:	lea    r9,[rip+0x1efb6]        # 0x423040
  40408a:	lea    r8,[rip+0x1f06f]        # 0x423100
  404091:	lea    rdx,[rip+0x21318]        # 0x4253b0
  404098:	lea    rcx,[rip+0x2efe1]        # 0x433080
  40409f:	call   0x401930
  4040a4:	lea    r8,[rsp+0x28]
  4040a9:	lea    rdx,[rip+0x2efd0]        # 0x433080
  4040b0:	mov    rcx,rbx
  4040b3:	call   0x4079d0
  4040b8:	test   eax,eax
  4040ba:	mov    esi,eax
  4040bc:	js     0x404114
  4040be:	mov    rax,QWORD PTR [rip+0x295fb]        # 0x42d6c0
  4040c5:	mov    rcx,rbx
  4040c8:	mov    edx,0x1
  4040cd:	mov    r8,QWORD PTR [rax]
  4040d0:	call   0x407b70
  4040d5:	mov    rcx,rbx
  4040d8:	mov    edx,0x1000
  4040dd:	call   0x407978
  4040e2:	mov    edx,0x1
  4040e7:	mov    rcx,rbx
  4040ea:	call   0x407aa8
  4040ef:	mov    rcx,rbx
  4040f2:	call   0x4016d0
  4040f7:	mov    edx,0x4
  4040fc:	mov    rcx,rbx
  4040ff:	call   0x407ab0
  404104:	test   eax,eax
  404106:	sete   al
  404109:	movzx  eax,al
  40410c:	add    rsp,0x30
  404110:	pop    rbx
  404111:	pop    rsi
  404112:	pop    rdi
  404113:	ret    
  404114:	mov    rbx,QWORD PTR [rip+0x34e61]        # 0x438f7c
  40411b:	call   rbx
  40411d:	lea    r8,[rip+0x2ef5c]        # 0x433080
  404124:	lea    rdx,[rip+0x2134a]        # 0x425475
  40412b:	lea    rcx,[rax+0x60]
  40412f:	call   0x401670
  404134:	mov    ecx,esi
  404136:	call   0x4078c0
  40413b:	mov    rsi,QWORD PTR [rsp+0x28]
  404140:	mov    rdi,rax
  404143:	call   rbx
  404145:	lea    rdx,[rip+0x2133f]        # 0x42548b
  40414c:	lea    rcx,[rax+0x60]
  404150:	mov    r9,rdi
  404153:	mov    r8,rsi
  404156:	call   0x401670
  40415b:	mov    ecx,0x1
  404160:	call   0x421e98
  404165:	nop
  404166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404170:	push   rdi
  404171:	push   rsi
  404172:	push   rbx
  404173:	sub    rsp,0x30
  404177:	lea    r9,[rip+0x1eec2]        # 0x423040
  40417e:	lea    r8,[rip+0x1ef7b]        # 0x423100
  404185:	lea    rdx,[rip+0x21224]        # 0x4253b0
  40418c:	mov    rbx,rcx
  40418f:	lea    rcx,[rip+0x2eeea]        # 0x433080
  404196:	call   0x401930
  40419b:	lea    r8,[rsp+0x28]
  4041a0:	lea    rdx,[rip+0x2eed9]        # 0x433080
  4041a7:	mov    rcx,rbx
  4041aa:	call   0x4079d0
  4041af:	test   eax,eax
  4041b1:	mov    esi,eax
  4041b3:	js     0x4041e9
  4041b5:	mov    rax,QWORD PTR [rip+0x29504]        # 0x42d6c0
  4041bc:	mov    rcx,rbx
  4041bf:	mov    edx,0x1
  4041c4:	mov    r8,QWORD PTR [rax]
  4041c7:	call   0x407b70
  4041cc:	mov    edx,0x200
  4041d1:	mov    rcx,rbx
  4041d4:	call   0x407978
  4041d9:	mov    rcx,rbx
  4041dc:	call   0x4016d0
  4041e1:	add    rsp,0x30
  4041e5:	pop    rbx
  4041e6:	pop    rsi
  4041e7:	pop    rdi
  4041e8:	ret    
  4041e9:	mov    rbx,QWORD PTR [rip+0x34d8c]        # 0x438f7c
  4041f0:	call   rbx
  4041f2:	lea    r8,[rip+0x2ee87]        # 0x433080
  4041f9:	lea    rdx,[rip+0x21275]        # 0x425475
  404200:	lea    rcx,[rax+0x60]
  404204:	call   0x401670
  404209:	mov    ecx,esi
  40420b:	call   0x4078c0
  404210:	mov    rsi,QWORD PTR [rsp+0x28]
  404215:	mov    rdi,rax
  404218:	call   rbx
  40421a:	lea    rdx,[rip+0x2126a]        # 0x42548b
  404221:	lea    rcx,[rax+0x60]
  404225:	mov    r9,rdi
  404228:	mov    r8,rsi
  40422b:	call   0x401670
  404230:	mov    ecx,0x1
  404235:	call   0x421e98
  40423a:	nop
  40423b:	nop    DWORD PTR [rax+rax*1+0x0]
  404240:	push   rdi
  404241:	push   rsi
  404242:	push   rbx
  404243:	sub    rsp,0x30
  404247:	mov    r8d,DWORD PTR [rip+0x2f03e]        # 0x43328c
  40424e:	mov    eax,0x3
  404253:	test   r8d,r8d
  404256:	jne    0x404260
  404258:	add    rsp,0x30
  40425c:	pop    rbx
  40425d:	pop    rsi
  40425e:	pop    rdi
  40425f:	ret    
  404260:	mov    rbx,rcx
  404263:	lea    r9,[rip+0x1edd6]        # 0x423040
  40426a:	lea    r8,[rip+0x1ee8f]        # 0x423100
  404271:	lea    rdx,[rip+0x21138]        # 0x4253b0
  404278:	lea    rcx,[rip+0x2ee01]        # 0x433080
  40427f:	call   0x401930
  404284:	lea    r8,[rsp+0x28]
  404289:	lea    rdx,[rip+0x2edf0]        # 0x433080
  404290:	mov    rcx,rbx
  404293:	call   0x4079d0
  404298:	test   eax,eax
  40429a:	mov    esi,eax
  40429c:	js     0x4042f7
  40429e:	mov    rax,QWORD PTR [rip+0x2941b]        # 0x42d6c0
  4042a5:	mov    edx,0x1
  4042aa:	mov    rcx,rbx
  4042ad:	mov    r8,QWORD PTR [rax]
  4042b0:	call   0x407b70
  4042b5:	xor    r8d,r8d
  4042b8:	mov    edx,0x3
  4042bd:	mov    rcx,rbx
  4042c0:	call   0x407c50
  4042c5:	mov    rcx,rbx
  4042c8:	call   0x4016d0
  4042cd:	test   eax,eax
  4042cf:	jne    0x404258
  4042d1:	mov    edx,DWORD PTR [rip+0x2efb5]        # 0x43328c
  4042d7:	xor    eax,eax
  4042d9:	test   edx,edx
  4042db:	je     0x404258
  4042e1:	mov    rcx,rbx
  4042e4:	call   0x4079b8
  4042e9:	cmp    eax,0x1
  4042ec:	sete   al
  4042ef:	movzx  eax,al
  4042f2:	jmp    0x404258
  4042f7:	mov    rbx,QWORD PTR [rip+0x34c7e]        # 0x438f7c
  4042fe:	call   rbx
  404300:	lea    r8,[rip+0x2ed79]        # 0x433080
  404307:	lea    rdx,[rip+0x21167]        # 0x425475
  40430e:	lea    rcx,[rax+0x60]
  404312:	call   0x401670
  404317:	mov    ecx,esi
  404319:	call   0x4078c0
  40431e:	mov    rsi,QWORD PTR [rsp+0x28]
  404323:	mov    rdi,rax
  404326:	call   rbx
  404328:	lea    rdx,[rip+0x2115c]        # 0x42548b
  40432f:	lea    rcx,[rax+0x60]
  404333:	mov    r9,rdi
  404336:	mov    r8,rsi
  404339:	call   0x401670
  40433e:	mov    ecx,0x1
  404343:	call   0x421e98
  404348:	nop
  404349:	nop    DWORD PTR [rax+0x0]
  404350:	push   rdi
  404351:	push   rsi
  404352:	push   rbx
  404353:	sub    rsp,0x30
  404357:	lea    r9,[rip+0x1ece2]        # 0x423040
  40435e:	lea    r8,[rip+0x1ed9b]        # 0x423100
  404365:	lea    rdx,[rip+0x21044]        # 0x4253b0
  40436c:	mov    rbx,rcx
  40436f:	lea    rcx,[rip+0x2ed0a]        # 0x433080
  404376:	call   0x401930
  40437b:	lea    r8,[rsp+0x28]
  404380:	lea    rdx,[rip+0x2ecf9]        # 0x433080
  404387:	mov    rcx,rbx
  40438a:	call   0x4079d0
  40438f:	test   eax,eax
  404391:	mov    esi,eax
  404393:	js     0x4043cf
  404395:	mov    rax,QWORD PTR [rip+0x29324]        # 0x42d6c0
  40439c:	mov    rcx,rbx
  40439f:	mov    edx,0x1
  4043a4:	mov    r8,QWORD PTR [rax]
  4043a7:	call   0x407b70
  4043ac:	mov    r8d,0x5
  4043b2:	mov    edx,0x5
  4043b7:	mov    rcx,rbx
  4043ba:	call   0x407c50
  4043bf:	mov    rcx,rbx
  4043c2:	call   0x4016d0
  4043c7:	add    rsp,0x30
  4043cb:	pop    rbx
  4043cc:	pop    rsi
  4043cd:	pop    rdi
  4043ce:	ret    
  4043cf:	mov    rbx,QWORD PTR [rip+0x34ba6]        # 0x438f7c
  4043d6:	call   rbx
  4043d8:	lea    r8,[rip+0x2eca1]        # 0x433080
  4043df:	lea    rdx,[rip+0x2108f]        # 0x425475
  4043e6:	lea    rcx,[rax+0x60]
  4043ea:	call   0x401670
  4043ef:	mov    ecx,esi
  4043f1:	call   0x4078c0
  4043f6:	mov    rsi,QWORD PTR [rsp+0x28]
  4043fb:	mov    rdi,rax
  4043fe:	call   rbx
  404400:	lea    rdx,[rip+0x21084]        # 0x42548b
  404407:	lea    rcx,[rax+0x60]
  40440b:	mov    r9,rdi
  40440e:	mov    r8,rsi
  404411:	call   0x401670
  404416:	mov    ecx,0x1
  40441b:	call   0x421e98
  404420:	nop
  404421:	nop    DWORD PTR [rax+rax*1+0x0]
  404426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404430:	push   rdi
  404431:	push   rsi
  404432:	push   rbx
  404433:	sub    rsp,0x30
  404437:	lea    r9,[rip+0x1ec02]        # 0x423040
  40443e:	lea    r8,[rip+0x1ecbb]        # 0x423100
  404445:	lea    rdx,[rip+0x20f64]        # 0x4253b0
  40444c:	mov    rbx,rcx
  40444f:	lea    rcx,[rip+0x2ec2a]        # 0x433080
  404456:	call   0x401930
  40445b:	lea    r8,[rsp+0x28]
  404460:	lea    rdx,[rip+0x2ec19]        # 0x433080
  404467:	mov    rcx,rbx
  40446a:	call   0x4079d0
  40446f:	test   eax,eax
  404471:	mov    esi,eax
  404473:	js     0x4044af
  404475:	mov    rax,QWORD PTR [rip+0x29244]        # 0x42d6c0
  40447c:	mov    rcx,rbx
  40447f:	mov    edx,0x1
  404484:	mov    r8,QWORD PTR [rax]
  404487:	call   0x407b70
  40448c:	mov    r8d,0x5
  404492:	mov    edx,0x5
  404497:	mov    rcx,rbx
  40449a:	call   0x407c48
  40449f:	mov    rcx,rbx
  4044a2:	call   0x4016d0
  4044a7:	add    rsp,0x30
  4044ab:	pop    rbx
  4044ac:	pop    rsi
  4044ad:	pop    rdi
  4044ae:	ret    
  4044af:	mov    rbx,QWORD PTR [rip+0x34ac6]        # 0x438f7c
  4044b6:	call   rbx
  4044b8:	lea    r8,[rip+0x2ebc1]        # 0x433080
  4044bf:	lea    rdx,[rip+0x20faf]        # 0x425475
  4044c6:	lea    rcx,[rax+0x60]
  4044ca:	call   0x401670
  4044cf:	mov    ecx,esi
  4044d1:	call   0x4078c0
  4044d6:	mov    rsi,QWORD PTR [rsp+0x28]
  4044db:	mov    rdi,rax
  4044de:	call   rbx
  4044e0:	lea    rdx,[rip+0x20fa4]        # 0x42548b
  4044e7:	lea    rcx,[rax+0x60]
  4044eb:	mov    r9,rdi
  4044ee:	mov    r8,rsi
  4044f1:	call   0x401670
  4044f6:	mov    ecx,0x1
  4044fb:	call   0x421e98
  404500:	nop
  404501:	nop    DWORD PTR [rax+rax*1+0x0]
  404506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404510:	push   rdi
  404511:	push   rsi
  404512:	push   rbx
  404513:	sub    rsp,0x30
  404517:	lea    r9,[rip+0x1eb22]        # 0x423040
  40451e:	lea    r8,[rip+0x1ebdb]        # 0x423100
  404525:	lea    rdx,[rip+0x2260c]        # 0x426b38
  40452c:	mov    rbx,rcx
  40452f:	lea    rcx,[rip+0x2eb4a]        # 0x433080
  404536:	call   0x401930
  40453b:	lea    r8,[rsp+0x28]
  404540:	lea    rdx,[rip+0x2eb39]        # 0x433080
  404547:	mov    rcx,rbx
  40454a:	call   0x4079d0
  40454f:	test   eax,eax
  404551:	mov    esi,eax
  404553:	js     0x404593
  404555:	mov    rax,QWORD PTR [rip+0x29064]        # 0x42d5c0
  40455c:	mov    edx,0x2
  404561:	mov    rcx,rbx
  404564:	mov    r8,QWORD PTR [rax]
  404567:	call   0x407b70
  40456c:	mov    rcx,rbx
  40456f:	call   0x4016d0
  404574:	test   eax,eax
  404576:	mov    esi,eax
  404578:	jne    0x404589
  40457a:	lea    rdx,[rip+0x3014f]        # 0x4346d0
  404581:	mov    rcx,rbx
  404584:	call   0x407b48
  404589:	mov    eax,esi
  40458b:	add    rsp,0x30
  40458f:	pop    rbx
  404590:	pop    rsi
  404591:	pop    rdi
  404592:	ret    
  404593:	mov    rbx,QWORD PTR [rip+0x349e2]        # 0x438f7c
  40459a:	call   rbx
  40459c:	lea    r8,[rip+0x2eadd]        # 0x433080
  4045a3:	lea    rdx,[rip+0x20ecb]        # 0x425475
  4045aa:	lea    rcx,[rax+0x60]
  4045ae:	call   0x401670
  4045b3:	mov    ecx,esi
  4045b5:	call   0x4078c0
  4045ba:	mov    rsi,QWORD PTR [rsp+0x28]
  4045bf:	mov    rdi,rax
  4045c2:	call   rbx
  4045c4:	lea    rdx,[rip+0x20ec0]        # 0x42548b
  4045cb:	lea    rcx,[rax+0x60]
  4045cf:	mov    r9,rdi
  4045d2:	mov    r8,rsi
  4045d5:	call   0x401670
  4045da:	mov    ecx,0x1
  4045df:	call   0x421e98
  4045e4:	nop
  4045e5:	nop
  4045e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045f0:	push   rdi
  4045f1:	push   rsi
  4045f2:	push   rbx
  4045f3:	sub    rsp,0x40
  4045f7:	test   rcx,rcx
  4045fa:	je     0x4046f0
  404600:	mov    rbx,rcx
  404603:	lea    r9,[rip+0x1ea36]        # 0x423040
  40460a:	lea    r8,[rip+0x1eaef]        # 0x423100
  404611:	lea    rdx,[rip+0x20d98]        # 0x4253b0
  404618:	lea    rcx,[rip+0x2ea61]        # 0x433080
  40461f:	lea    rsi,[rsp+0x20]
  404624:	call   0x401930
  404629:	lea    rdx,[rip+0x2ea50]        # 0x433080
  404630:	mov    r8,rsi
  404633:	mov    rcx,rbx
  404636:	call   0x4079d0
  40463b:	test   eax,eax
  40463d:	mov    edi,eax
  40463f:	js     0x404737
  404645:	mov    rax,QWORD PTR [rip+0x29074]        # 0x42d6c0
  40464c:	mov    edx,0x1
  404651:	mov    rcx,rbx
  404654:	mov    r8,QWORD PTR [rax]
  404657:	call   0x407b70
  40465c:	mov    rax,QWORD PTR [rip+0x28f5d]        # 0x42d5c0
  404663:	mov    edx,0x2
  404668:	mov    rcx,rbx
  40466b:	mov    r8,QWORD PTR [rax]
  40466e:	call   0x407b70
  404673:	mov    r8,QWORD PTR [rip+0x30076]        # 0x4346f0
  40467a:	mov    rdx,QWORD PTR [rip+0x3009f]        # 0x434720
  404681:	mov    rcx,rbx
  404684:	call   0x407910
  404689:	mov    rdi,QWORD PTR [rip+0x30058]        # 0x4346e8
  404690:	lea    rdx,[rip+0x30069]        # 0x434700
  404697:	mov    rcx,rsi
  40469a:	mov    r8,rdi
  40469d:	call   0x421e08
  4046a2:	mov    rcx,rbx
  4046a5:	call   0x4016d0
  4046aa:	cmp    eax,0x1
  4046ad:	je     0x4046da
  4046af:	lea    r8,[rip+0x30032]        # 0x4346e8
  4046b6:	lea    rdx,[rip+0x30043]        # 0x434700
  4046bd:	mov    rcx,rbx
  4046c0:	mov    QWORD PTR [rip+0x3001d],0x20        # 0x4346e8
  4046cb:	call   0x407920
  4046d0:	cmp    QWORD PTR [rip+0x30010],0x0        # 0x4346e8
  4046d8:	jne    0x404700
  4046da:	mov    eax,0x1
  4046df:	add    rsp,0x40
  4046e3:	pop    rbx
  4046e4:	pop    rsi
  4046e5:	pop    rdi
  4046e6:	ret    
  4046e7:	nop    WORD PTR [rax+rax*1+0x0]
  4046f0:	mov    eax,0x3
  4046f5:	add    rsp,0x40
  4046f9:	pop    rbx
  4046fa:	pop    rsi
  4046fb:	pop    rdi
  4046fc:	ret    
  4046fd:	nop    DWORD PTR [rax]
  404700:	mov    rcx,rbx
  404703:	call   0x407918
  404708:	mov    edx,eax
  40470a:	xor    eax,eax
  40470c:	test   edx,edx
  40470e:	jne    0x4046df
  404710:	cmp    rdi,QWORD PTR [rip+0x2ffd1]        # 0x4346e8
  404717:	mov    al,0x1
  404719:	jne    0x4046df
  40471b:	lea    rdx,[rip+0x2ffde]        # 0x434700
  404722:	mov    r8,rdi
  404725:	mov    rcx,rsi
  404728:	call   0x421e10
  40472d:	test   eax,eax
  40472f:	setne  al
  404732:	movzx  eax,al
  404735:	jmp    0x4046df
  404737:	mov    rbx,QWORD PTR [rip+0x3483e]        # 0x438f7c
  40473e:	call   rbx
  404740:	lea    r8,[rip+0x2e939]        # 0x433080
  404747:	lea    rdx,[rip+0x20d27]        # 0x425475
  40474e:	lea    rcx,[rax+0x60]
  404752:	call   0x401670
  404757:	mov    ecx,edi
  404759:	call   0x4078c0
  40475e:	mov    rsi,QWORD PTR [rsp+0x20]
  404763:	mov    rdi,rax
  404766:	call   rbx
  404768:	lea    rdx,[rip+0x20d1c]        # 0x42548b
  40476f:	lea    rcx,[rax+0x60]
  404773:	mov    r9,rdi
  404776:	mov    r8,rsi
  404779:	call   0x401670
  40477e:	mov    ecx,0x1
  404783:	call   0x421e98
  404788:	nop
  404789:	nop    DWORD PTR [rax+0x0]
  404790:	push   rdi
  404791:	push   rsi
  404792:	push   rbx
  404793:	sub    rsp,0x30
  404797:	mov    rsi,rcx
  40479a:	lea    rcx,[rip+0x22438]        # 0x426bd9
  4047a1:	call   0x421dd0
  4047a6:	mov    rbx,QWORD PTR [rip+0x28f03]        # 0x42d6b0
  4047ad:	mov    eax,0x3
  4047b2:	mov    edx,DWORD PTR [rbx]
  4047b4:	test   edx,edx
  4047b6:	jne    0x4047c0
  4047b8:	add    rsp,0x30
  4047bc:	pop    rbx
  4047bd:	pop    rsi
  4047be:	pop    rdi
  4047bf:	ret    
  4047c0:	lea    r9,[rip+0x1e879]        # 0x423040
  4047c7:	lea    r8,[rip+0x1e932]        # 0x423100
  4047ce:	lea    rdx,[rip+0x20bdb]        # 0x4253b0
  4047d5:	lea    rcx,[rip+0x2e8a4]        # 0x433080
  4047dc:	call   0x401930
  4047e1:	lea    r8,[rsp+0x28]
  4047e6:	lea    rdx,[rip+0x2e893]        # 0x433080
  4047ed:	mov    rcx,rsi
  4047f0:	call   0x4079d0
  4047f5:	test   eax,eax
  4047f7:	mov    edi,eax
  4047f9:	js     0x40488a
  4047ff:	mov    rax,QWORD PTR [rip+0x28eba]        # 0x42d6c0
  404806:	mov    edx,0x1
  40480b:	mov    rcx,rsi
  40480e:	mov    r8,QWORD PTR [rax]
  404811:	call   0x407b70
  404816:	mov    rcx,rsi
  404819:	call   0x4016d0
  40481e:	cmp    eax,0x1
  404821:	je     0x404880
  404823:	lea    rdx,[rip+0x20b03]        # 0x42532d
  40482a:	lea    rcx,[rip+0x223a8]        # 0x426bd9
  404831:	call   0x421e78
  404836:	test   rax,rax
  404839:	mov    rdi,rax
  40483c:	je     0x404880
  40483e:	lea    rdx,[rip+0x20abb]        # 0x425300
  404845:	mov    rcx,rax
  404848:	call   0x401670
  40484d:	mov    r9d,DWORD PTR [rbx]
  404850:	mov    r8,rdi
  404853:	xor    edx,edx
  404855:	mov    rcx,rsi
  404858:	call   0x405eb0
  40485d:	mov    rcx,rdi
  404860:	call   0x421e90
  404865:	lea    rax,[rip+0x2237d]        # 0x426be9
  40486c:	mov    QWORD PTR [rip+0x1e8c5],rax        # 0x423138
  404873:	xor    eax,eax
  404875:	jmp    0x4047b8
  40487a:	nop    WORD PTR [rax+rax*1+0x0]
  404880:	mov    eax,0x1
  404885:	jmp    0x4047b8
  40488a:	mov    rbx,QWORD PTR [rip+0x346eb]        # 0x438f7c
  404891:	call   rbx
  404893:	lea    r8,[rip+0x2e7e6]        # 0x433080
  40489a:	lea    rdx,[rip+0x20bd4]        # 0x425475
  4048a1:	lea    rcx,[rax+0x60]
  4048a5:	call   0x401670
  4048aa:	mov    ecx,edi
  4048ac:	call   0x4078c0
  4048b1:	mov    rsi,QWORD PTR [rsp+0x28]
  4048b6:	mov    rdi,rax
  4048b9:	call   rbx
  4048bb:	lea    rdx,[rip+0x20bc9]        # 0x42548b
  4048c2:	lea    rcx,[rax+0x60]
  4048c6:	mov    r9,rdi
  4048c9:	mov    r8,rsi
  4048cc:	call   0x401670
  4048d1:	mov    ecx,0x1
  4048d6:	call   0x421e98
  4048db:	nop
  4048dc:	nop    DWORD PTR [rax+0x0]
  4048e0:	push   r14
  4048e2:	push   r13
  4048e4:	push   r12
  4048e6:	push   rbp
  4048e7:	push   rdi
  4048e8:	push   rsi
  4048e9:	push   rbx
  4048ea:	sub    rsp,0x50
  4048ee:	lea    r9,[rip+0x1e74b]        # 0x423040
  4048f5:	lea    r8,[rip+0x1e804]        # 0x423100
  4048fc:	lea    rdx,[rip+0x20aad]        # 0x4253b0
  404903:	mov    rbx,rcx
  404906:	lea    rcx,[rip+0x2e773]        # 0x433080
  40490d:	lea    rsi,[rsp+0x40]
  404912:	mov    DWORD PTR [rsp+0x30],0x0
  40491a:	call   0x401930
  40491f:	lea    rdx,[rip+0x2e75a]        # 0x433080
  404926:	mov    r8,rsi
  404929:	mov    rcx,rbx
  40492c:	call   0x4079d0
  404931:	test   eax,eax
  404933:	mov    edi,eax
  404935:	js     0x404ae8
  40493b:	mov    rax,QWORD PTR [rip+0x28d7e]        # 0x42d6c0
  404942:	mov    edx,0x1
  404947:	mov    rcx,rbx
  40494a:	mov    r8,QWORD PTR [rax]
  40494d:	call   0x407b70
  404952:	mov    rcx,rbx
  404955:	call   0x4016d0
  40495a:	cmp    eax,0x1
  40495d:	je     0x404a21
  404963:	mov    rcx,rbx
  404966:	mov    edi,0x3
  40496b:	call   0x407bd8
  404970:	cmp    eax,0x1
  404973:	je     0x404a30
  404979:	mov    eax,edi
  40497b:	add    rsp,0x50
  40497f:	pop    rbx
  404980:	pop    rsi
  404981:	pop    rdi
  404982:	pop    rbp
  404983:	pop    r12
  404985:	pop    r13
  404987:	pop    r14
  404989:	ret    
  40498a:	nop    WORD PTR [rax+rax*1+0x0]
  404990:	cmp    eax,0x1
  404993:	je     0x404ae1
  404999:	mov    DWORD PTR [rsp+0x34],0x0
  4049a1:	xor    edi,edi
  4049a3:	xor    ebx,ebx
  4049a5:	mov    r12,QWORD PTR [rip+0x28c44]        # 0x42d5f0
  4049ac:	jmp    0x4049fc
  4049ae:	xchg   ax,ax
  4049b0:	mov    eax,DWORD PTR [rsp+0x34]
  4049b4:	add    eax,DWORD PTR [rsp+0x48]
  4049b8:	mov    rcx,rdi
  4049bb:	add    ebx,0x1
  4049be:	lea    edx,[rax+0x1]
  4049c1:	call   0x414ca0
  4049c6:	mov    r13d,DWORD PTR [rsp+0x34]
  4049cb:	mov    r8d,DWORD PTR [rsp+0x48]
  4049d0:	mov    rdi,rax
  4049d3:	mov    rdx,QWORD PTR [rsp+0x40]
  4049d8:	add    r13,rax
  4049db:	mov    rcx,r13
  4049de:	call   0x421e08
  4049e3:	mov    r14d,DWORD PTR [rsp+0x48]
  4049e8:	mov    rcx,QWORD PTR [rsp+0x40]
  4049ed:	add    DWORD PTR [rsp+0x34],r14d
  4049f2:	call   QWORD PTR [r12]
  4049f6:	cmp    DWORD PTR [rsp+0x30],ebx
  4049fa:	jbe    0x404a5f
  4049fc:	mov    edx,ebx
  4049fe:	lea    rcx,[rip+0x22214]        # 0x426c19
  404a05:	mov    r8,rsi
  404a08:	shl    rdx,0x4
  404a0c:	mov    QWORD PTR [rsp+0x40],0x0
  404a15:	add    rdx,rbp
  404a18:	call   0x407a18
  404a1d:	test   eax,eax
  404a1f:	jns    0x4049b0
  404a21:	mov    edi,0x1
  404a26:	jmp    0x404979
  404a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a30:	lea    rdx,[rsp+0x30]
  404a35:	mov    rcx,rbx
  404a38:	call   0x407be8
  404a3d:	mov    rbp,rax
  404a40:	mov    eax,DWORD PTR [rsp+0x30]
  404a44:	test   eax,eax
  404a46:	jne    0x404990
  404a4c:	lea    rax,[rip+0x221af]        # 0x426c02
  404a53:	mov    QWORD PTR [rip+0x1e6de],rax        # 0x423138
  404a5a:	jmp    0x404979
  404a5f:	mov    BYTE PTR [r13+r14*1+0x0],0x0
  404a65:	mov    eax,DWORD PTR [rsp+0x34]
  404a69:	lea    rdx,[rsp+0x34]
  404a6e:	lea    rcx,[rsp+0x38]
  404a73:	mov    DWORD PTR [rsp+0x20],0x2
  404a7b:	mov    r9d,0x1
  404a81:	mov    r8,rsi
  404a84:	mov    QWORD PTR [rsp+0x40],rdi
  404a89:	mov    DWORD PTR [rsp+0x34],0x0
  404a91:	mov    DWORD PTR [rsp+0x48],eax
  404a95:	call   0x407870
  404a9a:	test   eax,eax
  404a9c:	js     0x404a21
  404a9e:	mov    eax,DWORD PTR [rsp+0x34]
  404aa2:	xor    ebx,ebx
  404aa4:	test   eax,eax
  404aa6:	je     0x404ac9
  404aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ab0:	mov    rax,QWORD PTR [rsp+0x38]
  404ab5:	mov    edx,ebx
  404ab7:	add    ebx,0x1
  404aba:	mov    rcx,QWORD PTR [rax+rdx*8]
  404abe:	call   0x407890
  404ac3:	cmp    DWORD PTR [rsp+0x34],ebx
  404ac7:	ja     0x404ab0
  404ac9:	mov    rcx,QWORD PTR [rsp+0x38]
  404ace:	call   QWORD PTR [r12]
  404ad2:	mov    rcx,rdi
  404ad5:	xor    edi,edi
  404ad7:	call   0x421e50
  404adc:	jmp    0x404979
  404ae1:	xor    edi,edi
  404ae3:	jmp    0x404979
  404ae8:	mov    rbx,QWORD PTR [rip+0x3448d]        # 0x438f7c
  404aef:	call   rbx
  404af1:	lea    r8,[rip+0x2e588]        # 0x433080
  404af8:	lea    rdx,[rip+0x20976]        # 0x425475
  404aff:	lea    rcx,[rax+0x60]
  404b03:	call   0x401670
  404b08:	mov    ecx,edi
  404b0a:	call   0x4078c0
  404b0f:	mov    rsi,QWORD PTR [rsp+0x40]
  404b14:	mov    rdi,rax
  404b17:	call   rbx
  404b19:	lea    rdx,[rip+0x2096b]        # 0x42548b
  404b20:	lea    rcx,[rax+0x60]
  404b24:	mov    r9,rdi
  404b27:	mov    r8,rsi
  404b2a:	call   0x401670
  404b2f:	mov    ecx,0x1
  404b34:	call   0x421e98
  404b39:	nop
  404b3a:	nop    WORD PTR [rax+rax*1+0x0]
  404b40:	push   rdi
  404b41:	push   rsi
  404b42:	push   rbx
  404b43:	sub    rsp,0x30
  404b47:	mov    rbx,rcx
  404b4a:	lea    rcx,[rip+0x207de]        # 0x42532f
  404b51:	call   0x421dd0
  404b56:	mov    rdx,QWORD PTR [rip+0x28b53]        # 0x42d6b0
  404b5d:	mov    eax,0x3
  404b62:	mov    edx,DWORD PTR [rdx]
  404b64:	test   edx,edx
  404b66:	jne    0x404b70
  404b68:	add    rsp,0x30
  404b6c:	pop    rbx
  404b6d:	pop    rsi
  404b6e:	pop    rdi
  404b6f:	ret    
  404b70:	lea    r9,[rip+0x1e4c9]        # 0x423040
  404b77:	lea    r8,[rip+0x1e582]        # 0x423100
  404b7e:	lea    rdx,[rip+0x2082b]        # 0x4253b0
  404b85:	lea    rcx,[rip+0x2e4f4]        # 0x433080
  404b8c:	call   0x401930
  404b91:	lea    r8,[rsp+0x28]
  404b96:	lea    rdx,[rip+0x2e4e3]        # 0x433080
  404b9d:	mov    rcx,rbx
  404ba0:	call   0x4079d0
  404ba5:	test   eax,eax
  404ba7:	mov    esi,eax
  404ba9:	js     0x404c36
  404baf:	mov    rsi,QWORD PTR [rip+0x28b0a]        # 0x42d6c0
  404bb6:	mov    rcx,rbx
  404bb9:	mov    edx,0x1
  404bbe:	mov    r8,QWORD PTR [rsi]
  404bc1:	call   0x407b70
  404bc6:	mov    rcx,QWORD PTR [rsi]
  404bc9:	lea    rdx,[rip+0xffffffffffffcd30]        # 0x401900
  404bd0:	call   0x407be0
  404bd5:	mov    rcx,rbx
  404bd8:	call   0x4016d0
  404bdd:	mov    rcx,QWORD PTR [rsi]
  404be0:	mov    ebx,eax
  404be2:	xor    edx,edx
  404be4:	call   0x407be0
  404be9:	cmp    ebx,0x1
  404bec:	mov    eax,0x1
  404bf1:	je     0x404b68
  404bf7:	lea    rcx,[rip+0x20731]        # 0x42532f
  404bfe:	mov    edx,0x4
  404c03:	call   0x421ce0
  404c08:	test   eax,eax
  404c0a:	je     0x404c21
  404c0c:	lea    rax,[rip+0x22029]        # 0x426c3c
  404c13:	mov    QWORD PTR [rip+0x1e51e],rax        # 0x423138
  404c1a:	xor    eax,eax
  404c1c:	jmp    0x404b68
  404c21:	lea    rax,[rip+0x21ffd]        # 0x426c25
  404c28:	mov    QWORD PTR [rip+0x1e509],rax        # 0x423138
  404c2f:	xor    eax,eax
  404c31:	jmp    0x404b68
  404c36:	mov    rbx,QWORD PTR [rip+0x3433f]        # 0x438f7c
  404c3d:	call   rbx
  404c3f:	lea    r8,[rip+0x2e43a]        # 0x433080
  404c46:	lea    rdx,[rip+0x20828]        # 0x425475
  404c4d:	lea    rcx,[rax+0x60]
  404c51:	call   0x401670
  404c56:	mov    ecx,esi
  404c58:	call   0x4078c0
  404c5d:	mov    rsi,QWORD PTR [rsp+0x28]
  404c62:	mov    rdi,rax
  404c65:	call   rbx
  404c67:	lea    rdx,[rip+0x2081d]        # 0x42548b
  404c6e:	lea    rcx,[rax+0x60]
  404c72:	mov    r9,rdi
  404c75:	mov    r8,rsi
  404c78:	call   0x401670
  404c7d:	mov    ecx,0x1
  404c82:	call   0x421e98
  404c87:	nop
  404c88:	nop
  404c89:	nop
  404c8a:	nop
  404c8b:	nop
  404c8c:	nop
  404c8d:	nop
  404c8e:	nop
  404c8f:	nop
  404c90:	sub    rsp,0x38
  404c94:	mov    QWORD PTR [rsp+0x50],r8
  404c99:	lea    r8,[rsp+0x50]
  404c9e:	mov    QWORD PTR [rsp+0x58],r9
  404ca3:	mov    QWORD PTR [rsp+0x28],r8
  404ca8:	call   0x41d2d0
  404cad:	add    rsp,0x38
  404cb1:	ret    
  404cb2:	nop    DWORD PTR [rax+0x0]
  404cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cc0:	sub    rsp,0x38
  404cc4:	mov    QWORD PTR [rsp+0x48],rdx
  404cc9:	lea    rdx,[rsp+0x48]
  404cce:	mov    QWORD PTR [rsp+0x50],r8
  404cd3:	mov    QWORD PTR [rsp+0x58],r9
  404cd8:	mov    QWORD PTR [rsp+0x28],rdx
  404cdd:	call   0x41d300
  404ce2:	add    rsp,0x38
  404ce6:	ret    
  404ce7:	nop    WORD PTR [rax+rax*1+0x0]
  404cf0:	push   rbp
  404cf1:	push   rdi
  404cf2:	push   rsi
  404cf3:	push   rbx
  404cf4:	sub    rsp,0x28
  404cf8:	mov    ebp,edx
  404cfa:	mov    rsi,rcx
  404cfd:	mov    rcx,r8
  404d00:	mov    rbx,r8
  404d03:	call   0x421d98
  404d08:	test   ebp,ebp
  404d0a:	mov    rdi,rax
  404d0d:	jne    0x404d30
  404d0f:	mov    ecx,DWORD PTR [rsi]
  404d11:	xor    r9d,r9d
  404d14:	movsxd r8,edi
  404d17:	mov    rdx,rbx
  404d1a:	call   0x4192c0
  404d1f:	cmp    eax,0xffffffff
  404d22:	je     0x404d4b
  404d24:	cdqe   
  404d26:	add    rsp,0x28
  404d2a:	pop    rbx
  404d2b:	pop    rsi
  404d2c:	pop    rdi
  404d2d:	pop    rbp
  404d2e:	ret    
  404d2f:	nop
  404d30:	call   QWORD PTR [rip+0x34246]        # 0x438f7c
  404d36:	lea    rdx,[rip+0x21f13]        # 0x426c50
  404d3d:	lea    rcx,[rax+0x60]
  404d41:	mov    r8,rbx
  404d44:	call   0x404c90
  404d49:	jmp    0x404d0f
  404d4b:	call   QWORD PTR [rip+0x3422b]        # 0x438f7c
  404d51:	lea    rdx,[rip+0x21f0f]        # 0x426c67
  404d58:	lea    rcx,[rax+0x60]
  404d5c:	mov    r8,rbx
  404d5f:	call   0x404c90
  404d64:	mov    ecx,0x1
  404d69:	call   0x421e98
  404d6e:	nop
  404d6f:	nop
  404d70:	push   r15
  404d72:	push   r14
  404d74:	push   r13
  404d76:	push   r12
  404d78:	push   rbp
  404d79:	push   rdi
  404d7a:	push   rsi
  404d7b:	push   rbx
  404d7c:	sub    rsp,0x678
  404d83:	test   r8,r8
  404d86:	mov    rdi,rcx
  404d89:	mov    r13,rdx
  404d8c:	mov    rsi,r8
  404d8f:	mov    r12d,r9d
  404d92:	je     0x404db6
  404d94:	mov    edx,DWORD PTR [rdx]
  404d96:	test   edx,edx
  404d98:	je     0x404db6
  404d9a:	call   QWORD PTR [rip+0x341dc]        # 0x438f7c
  404da0:	lea    rdx,[rip+0x21ed9]        # 0x426c80
  404da7:	lea    rcx,[rax+0x60]
  404dab:	mov    r9,rsi
  404dae:	mov    r8d,r12d
  404db1:	call   0x404c90
  404db6:	lea    rax,[rsp+0x60]
  404dbb:	lea    r14,[rsp+0x50]
  404dc0:	lea    rbx,[rsp+0x270]
  404dc8:	mov    ebp,r12d
  404dcb:	mov    QWORD PTR [rsp+0x38],rax
  404dd0:	movsxd rax,DWORD PTR [rdi]
  404dd3:	mov    rdx,QWORD PTR [rsp+0x38]
  404dd8:	xor    r9d,r9d
  404ddb:	xor    r8d,r8d
  404dde:	mov    QWORD PTR [rsp+0x20],r14
  404de3:	mov    DWORD PTR [rsp+0x60],0x1
  404deb:	mov    QWORD PTR [rsp+0x50],0xa
  404df4:	mov    DWORD PTR [rsp+0x58],0x0
  404dfc:	mov    rcx,rax
  404dff:	mov    QWORD PTR [rsp+0x68],rax
  404e04:	add    ecx,0x1
  404e07:	call   0x4185d0
  404e0c:	test   eax,eax
  404e0e:	jle    0x404eb0
  404e14:	mov    ecx,DWORD PTR [rdi]
  404e16:	xor    r9d,r9d
  404e19:	mov    r8d,0x3ff
  404e1f:	mov    rdx,rbx
  404e22:	call   0x417e10
  404e27:	cmp    eax,0xffffffff
  404e2a:	mov    r15,rax
  404e2d:	mov    DWORD PTR [rsp+0x44],eax
  404e31:	je     0x404eb0
  404e33:	movsxd r11,eax
  404e36:	test   rsi,rsi
  404e39:	mov    BYTE PTR [rsp+r11*1+0x270],0x0
  404e42:	je     0x404e90
  404e44:	mov    eax,DWORD PTR [r13+0x0]
  404e48:	test   eax,eax
  404e4a:	jne    0x404ed3
  404e50:	mov    r9,rbp
  404e53:	mov    r8,rsi
  404e56:	mov    rdx,r11
  404e59:	mov    rcx,rbx
  404e5c:	call   0x4149e0
  404e61:	test   rax,rax
  404e64:	je     0x404e71
  404e66:	cmp    rax,rbx
  404e69:	je     0x404e71
  404e6b:	cmp    BYTE PTR [rax-0x1],0xa
  404e6f:	je     0x404e90
  404e71:	cmp    r15d,r12d
  404e74:	jl     0x404dd0
  404e7a:	mov    r8,rbp
  404e7d:	mov    rdx,rsi
  404e80:	mov    rcx,rbx
  404e83:	call   0x421d90
  404e88:	test   eax,eax
  404e8a:	jne    0x404dd0
  404e90:	movsxd rax,DWORD PTR [rsp+0x44]
  404e95:	add    rsp,0x678
  404e9c:	pop    rbx
  404e9d:	pop    rsi
  404e9e:	pop    rdi
  404e9f:	pop    rbp
  404ea0:	pop    r12
  404ea2:	pop    r13
  404ea4:	pop    r14
  404ea6:	pop    r15
  404ea8:	ret    
  404ea9:	nop    DWORD PTR [rax+0x0]
  404eb0:	call   QWORD PTR [rip+0x340c6]        # 0x438f7c
  404eb6:	lea    rdx,[rip+0x21de2]        # 0x426c9f
  404ebd:	lea    rcx,[rax+0x60]
  404ec1:	mov    r8,rsi
  404ec4:	call   0x404c90
  404ec9:	mov    ecx,0x1
  404ece:	call   0x421e98
  404ed3:	mov    QWORD PTR [rsp+0x48],r11
  404ed8:	call   QWORD PTR [rip+0x3409e]        # 0x438f7c
  404ede:	lea    rdx,[rip+0x21dce]        # 0x426cb3
  404ee5:	lea    rcx,[rax+0x60]
  404ee9:	mov    r8,rbx
  404eec:	call   0x404c90
  404ef1:	mov    r11,QWORD PTR [rsp+0x48]
  404ef6:	jmp    0x404e50
  404efb:	nop    DWORD PTR [rax+rax*1+0x0]
  404f00:	push   rbp
  404f01:	push   rdi
  404f02:	push   rsi
  404f03:	push   rbx
  404f04:	sub    rsp,0x28
  404f08:	mov    eax,DWORD PTR [rcx+0x10]
  404f0b:	mov    rbx,rcx
  404f0e:	mov    rdi,rdx
  404f11:	movsxd rsi,r8d
  404f14:	test   eax,eax
  404f16:	jne    0x404f60
  404f18:	mov    rbp,QWORD PTR [rip+0x340ad]        # 0x438fcc
  404f1f:	jmp    0x404f28
  404f21:	call   rbp
  404f23:	cmp    DWORD PTR [rax],0x4
  404f26:	jne    0x404f85
  404f28:	mov    ecx,DWORD PTR [rbx]
  404f2a:	xor    r9d,r9d
  404f2d:	mov    r8,rsi
  404f30:	mov    rdx,rdi
  404f33:	call   0x417e10
  404f38:	cmp    eax,0xffffffff
  404f3b:	mov    r9d,eax
  404f3e:	je     0x404f21
  404f40:	movsxd rax,r9d
  404f43:	add    rsp,0x28
  404f47:	pop    rbx
  404f48:	pop    rsi
  404f49:	pop    rdi
  404f4a:	pop    rbp
  404f4b:	ret    
  404f4c:	nop    DWORD PTR [rax+0x0]
  404f50:	mov    rcx,QWORD PTR [rbx+0x8]
  404f54:	xor    edx,edx
  404f56:	call   0x407a98
  404f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f60:	mov    rcx,QWORD PTR [rbx+0x8]
  404f64:	mov    r8,rsi
  404f67:	mov    rdx,rdi
  404f6a:	call   0x407990
  404f6f:	cmp    eax,0xfffffedb
  404f74:	mov    r9d,eax
  404f77:	je     0x404f50
  404f79:	cmp    eax,0xffffffe4
  404f7c:	je     0x404f60
  404f7e:	cmp    eax,0xffffffcc
  404f81:	je     0x404f60
  404f83:	jmp    0x404f40
  404f85:	mov    rax,0xffffffffffffffff
  404f8c:	add    rsp,0x28
  404f90:	pop    rbx
  404f91:	pop    rsi
  404f92:	pop    rdi
  404f93:	pop    rbp
  404f94:	ret    
  404f95:	nop
  404f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fa0:	push   rsi
  404fa1:	push   rbx
  404fa2:	sub    rsp,0x38
  404fa6:	mov    rsi,rdx
  404fa9:	mov    edx,DWORD PTR [rcx+0x10]
  404fac:	mov    rbx,rcx
  404faf:	test   edx,edx
  404fb1:	jne    0x404fe0
  404fb3:	mov    rdx,rsi
  404fb6:	mov    rcx,rbx
  404fb9:	call   0x404f00
  404fbe:	mov    rsi,rax
  404fc1:	mov    eax,DWORD PTR [rbx+0x10]
  404fc4:	test   eax,eax
  404fc6:	je     0x404fd3
  404fc8:	mov    rcx,QWORD PTR [rbx+0x8]
  404fcc:	xor    edx,edx
  404fce:	call   0x407970
  404fd3:	movsxd rax,esi
  404fd6:	add    rsp,0x38
  404fda:	pop    rbx
  404fdb:	pop    rsi
  404fdc:	ret    
  404fdd:	nop    DWORD PTR [rax]
  404fe0:	mov    rcx,QWORD PTR [rcx+0x8]
  404fe4:	mov    edx,r9d
  404fe7:	mov    DWORD PTR [rsp+0x2c],r8d
  404fec:	call   0x407970
  404ff1:	mov    r8d,DWORD PTR [rsp+0x2c]
  404ff6:	jmp    0x404fb3
  404ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  405000:	push   r13
  405002:	push   r12
  405004:	push   rbp
  405005:	push   rdi
  405006:	push   rsi
  405007:	push   rbx
  405008:	sub    rsp,0x28
  40500c:	mov    rbp,rdx
  40500f:	mov    edx,DWORD PTR [rcx+0x10]
  405012:	mov    rdi,rcx
  405015:	mov    r12d,r8d
  405018:	mov    rsi,r9
  40501b:	test   edx,edx
  40501d:	je     0x405074
  40501f:	movsxd r13,r8d
  405022:	test   rsi,rsi
  405025:	mov    rcx,QWORD PTR [rdi+0x8]
  405029:	je     0x405065
  40502b:	mov    r9,rsi
  40502e:	mov    r8,r13
  405031:	mov    rdx,rbp
  405034:	call   0x407980
  405039:	mov    ebx,eax
  40503b:	cmp    ebx,0xffffffcc
  40503e:	je     0x405022
  405040:	cmp    ebx,0xffffffe4
  405043:	je     0x405022
  405045:	cmp    ebx,r12d
  405048:	je     0x405055
  40504a:	test   ebx,ebx
  40504c:	jle    0x405055
  40504e:	mov    eax,DWORD PTR [rdi+0x40]
  405051:	test   eax,eax
  405053:	jne    0x4050a1
  405055:	movsxd rax,ebx
  405058:	add    rsp,0x28
  40505c:	pop    rbx
  40505d:	pop    rsi
  40505e:	pop    rdi
  40505f:	pop    rbp
  405060:	pop    r12
  405062:	pop    r13
  405064:	ret    
  405065:	mov    r8,r13
  405068:	mov    rdx,rbp
  40506b:	call   0x407988
  405070:	mov    ebx,eax
  405072:	jmp    0x40503b
  405074:	movsxd rsi,r8d
  405077:	mov    r13,QWORD PTR [rip+0x33f4e]        # 0x438fcc
  40507e:	jmp    0x405088
  405080:	call   r13
  405083:	cmp    DWORD PTR [rax],0x4
  405086:	jne    0x4050c0
  405088:	mov    ecx,DWORD PTR [rdi]
  40508a:	xor    r9d,r9d
  40508d:	mov    r8,rsi
  405090:	mov    rdx,rbp
  405093:	call   0x4192c0
  405098:	cmp    eax,0xffffffff
  40509b:	mov    ebx,eax
  40509d:	je     0x405080
  40509f:	jmp    0x405045
  4050a1:	call   QWORD PTR [rip+0x33ed5]        # 0x438f7c
  4050a7:	lea    rdx,[rip+0x21c22]        # 0x426cd0
  4050ae:	lea    rcx,[rax+0x60]
  4050b2:	mov    r9d,r12d
  4050b5:	mov    r8d,ebx
  4050b8:	call   0x404c90
  4050bd:	jmp    0x405055
  4050bf:	nop
  4050c0:	mov    rax,0xffffffffffffffff
  4050c7:	add    rsp,0x28
  4050cb:	pop    rbx
  4050cc:	pop    rsi
  4050cd:	pop    rdi
  4050ce:	pop    rbp
  4050cf:	pop    r12
  4050d1:	pop    r13
  4050d3:	ret    
  4050d4:	xchg   ax,ax
  4050d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050e0:	xor    r9d,r9d
  4050e3:	jmp    0x405000
  4050e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050f0:	push   rdi
  4050f1:	push   rsi
  4050f2:	push   rbx
  4050f3:	sub    rsp,0x220
  4050fa:	test   rdx,rdx
  4050fd:	je     0x405125
  4050ff:	mov    r8d,DWORD PTR [rcx+0x10]
  405103:	test   r8d,r8d
  405106:	jne    0x405125
  405108:	mov    rbx,rdx
  40510b:	mov    rsi,rcx
  40510e:	lea    rdx,[rip+0x21be2]        # 0x426cf7
  405115:	mov    rcx,rbx
  405118:	mov    rdi,QWORD PTR [rip+0x33f2d]        # 0x43904c
  40511f:	call   rdi
  405121:	test   eax,eax
  405123:	jne    0x405130
  405125:	add    rsp,0x220
  40512c:	pop    rbx
  40512d:	pop    rsi
  40512e:	pop    rdi
  40512f:	ret    
  405130:	lea    rdx,[rip+0x21bc6]        # 0x426cfd
  405137:	mov    rcx,rbx
  40513a:	call   rdi
  40513c:	test   eax,eax
  40513e:	jne    0x4051f0
  405144:	mov    eax,DWORD PTR [rsi+0x40]
  405147:	test   eax,eax
  405149:	je     0x405157
  40514b:	lea    rcx,[rip+0x21bbb]        # 0x426d0d
  405152:	call   0x404cc0
  405157:	lea    rbx,[rsi+0x40]
  40515b:	lea    r8,[rip+0x21bc6]        # 0x426d28
  405162:	mov    rcx,rsi
  405165:	mov    r9d,0x4
  40516b:	lea    rdi,[rsp+0x20]
  405170:	mov    rdx,rbx
  405173:	call   0x404d70
  405178:	mov    r9,QWORD PTR [rsi+0x18]
  40517c:	lea    r8,[rip+0x21baa]        # 0x426d2d
  405183:	mov    rcx,rdi
  405186:	mov    edx,0x200
  40518b:	call   0x414cf0
  405190:	mov    edx,DWORD PTR [rsi+0x40]
  405193:	mov    r8,rdi
  405196:	mov    rcx,rsi
  405199:	call   0x404cf0
  40519e:	lea    r8,[rip+0x21b91]        # 0x426d36
  4051a5:	mov    r9d,0x4
  4051ab:	mov    rdx,rbx
  4051ae:	mov    rcx,rsi
  4051b1:	call   0x404d70
  4051b6:	mov    edx,DWORD PTR [rsi+0x40]
  4051b9:	lea    r8,[rip+0x21b7b]        # 0x426d3b
  4051c0:	mov    rcx,rsi
  4051c3:	call   0x404cf0
  4051c8:	lea    r8,[rip+0x21b59]        # 0x426d28
  4051cf:	mov    r9d,0x4
  4051d5:	mov    rdx,rbx
  4051d8:	mov    rcx,rsi
  4051db:	call   0x404d70
  4051e0:	nop
  4051e1:	add    rsp,0x220
  4051e8:	pop    rbx
  4051e9:	pop    rsi
  4051ea:	pop    rdi
  4051eb:	ret    
  4051ec:	nop    DWORD PTR [rax+0x0]
  4051f0:	lea    rdx,[rip+0x21b0b]        # 0x426d02
  4051f7:	mov    rcx,rbx
  4051fa:	call   rdi
  4051fc:	test   eax,eax
  4051fe:	je     0x405144
  405204:	lea    rdx,[rip+0x21b3a]        # 0x426d45
  40520b:	mov    rcx,rbx
  40520e:	call   rdi
  405210:	test   eax,eax
  405212:	jne    0x405284
  405214:	mov    edx,DWORD PTR [rsi+0x40]
  405217:	test   edx,edx
  405219:	je     0x40522a
  40521b:	lea    rcx,[rip+0x21b2e]        # 0x426d50
  405222:	call   0x404cc0
  405227:	mov    edx,DWORD PTR [rsi+0x40]
  40522a:	lea    r8,[rip+0x21b3a]        # 0x426d6b
  405231:	mov    rcx,rsi
  405234:	lea    rbx,[rsi+0x40]
  405238:	call   0x404cf0
  40523d:	lea    r8,[rip+0x21b36]        # 0x426d7a
  405244:	mov    r9d,0x4
  40524a:	mov    rdx,rbx
  40524d:	mov    rcx,rsi
  405250:	call   0x404d70
  405255:	mov    edx,DWORD PTR [rsi+0x40]
  405258:	lea    r8,[rip+0x21b20]        # 0x426d7f
  40525f:	mov    rcx,rsi
  405262:	call   0x404cf0
  405267:	lea    r8,[rip+0x21b0c]        # 0x426d7a
  40526e:	mov    r9d,0x4
  405274:	mov    rdx,rbx
  405277:	mov    rcx,rsi
  40527a:	call   0x404d70
  40527f:	jmp    0x405125
  405284:	lea    rdx,[rip+0x21abf]        # 0x426d4a
  40528b:	mov    rcx,rbx
  40528e:	call   rdi
  405290:	test   eax,eax
  405292:	je     0x405214
  405294:	lea    rdx,[rip+0x21af1]        # 0x426d8c
  40529b:	mov    rcx,rbx
  40529e:	call   rdi
  4052a0:	test   eax,eax
  4052a2:	jne    0x405330
  4052a8:	cmp    DWORD PTR [rsi+0x40],0x0
  4052ac:	je     0x4052ba
  4052ae:	lea    rcx,[rip+0x21adc]        # 0x426d91
  4052b5:	call   0x404cc0
  4052ba:	lea    rbx,[rsp+0x20]
  4052bf:	mov    r9,QWORD PTR [rsi+0x18]
  4052c3:	lea    r8,[rip+0x21ae6]        # 0x426db0
  4052ca:	mov    edx,0x200
  4052cf:	mov    rcx,rbx
  4052d2:	call   0x414cf0
  4052d7:	mov    edx,DWORD PTR [rsi+0x40]
  4052da:	mov    r8,rbx
  4052dd:	mov    rcx,rsi
  4052e0:	lea    rbx,[rsi+0x40]
  4052e4:	call   0x404cf0
  4052e9:	lea    r8,[rip+0x21b2d]        # 0x426e1d
  4052f0:	mov    r9d,0x2
  4052f6:	mov    rdx,rbx
  4052f9:	mov    rcx,rsi
  4052fc:	call   0x404d70
  405301:	mov    edx,DWORD PTR [rsi+0x40]
  405304:	lea    r8,[rip+0x21b15]        # 0x426e20
  40530b:	mov    rcx,rsi
  40530e:	call   0x404cf0
  405313:	lea    r8,[rip+0x21b3a]        # 0x426e54
  40531a:	mov    r9d,0x8
  405320:	mov    rdx,rbx
  405323:	mov    rcx,rsi
  405326:	call   0x404d70
  40532b:	jmp    0x405125
  405330:	lea    rdx,[rip+0x21b26]        # 0x426e5d
  405337:	mov    rcx,rbx
  40533a:	call   rdi
  40533c:	test   eax,eax
  40533e:	jne    0x405380
  405340:	cmp    DWORD PTR [rsi+0x40],0x0
  405344:	je     0x405352
  405346:	lea    rcx,[rip+0x21b15]        # 0x426e62
  40534d:	call   0x404cc0
  405352:	mov    ecx,DWORD PTR [rsi]
  405354:	lea    rdx,[rip+0x21b25]        # 0x426e80
  40535b:	xor    r9d,r9d
  40535e:	mov    r8d,0x1f
  405364:	call   0x4192c0
  405369:	lea    rdx,[rsi+0x40]
  40536d:	xor    r9d,r9d
  405370:	xor    r8d,r8d
  405373:	mov    rcx,rsi
  405376:	call   0x404d70
  40537b:	jmp    0x405125
  405380:	lea    rdx,[rip+0x21b19]        # 0x426ea0
  405387:	mov    rcx,rbx
  40538a:	call   rdi
  40538c:	test   eax,eax
  40538e:	jne    0x4053f7
  405390:	cmp    DWORD PTR [rsi+0x40],0x0
  405394:	jne    0x40544b
  40539a:	mov    edx,DWORD PTR [rsi+0x40]
  40539d:	lea    r8,[rip+0x21b1f]        # 0x426ec3
  4053a4:	mov    rcx,rsi
  4053a7:	lea    rbx,[rsi+0x40]
  4053ab:	call   0x404cf0
  4053b0:	lea    r8,[rip+0x21b13]        # 0x426eca
  4053b7:	mov    r9d,0x4
  4053bd:	mov    rdx,rbx
  4053c0:	mov    rcx,rsi
  4053c3:	call   0x404d70
  4053c8:	mov    edx,DWORD PTR [rsi+0x40]
  4053cb:	lea    r8,[rip+0x21afd]        # 0x426ecf
  4053d2:	mov    rcx,rsi
  4053d5:	call   0x404cf0
  4053da:	lea    r8,[rip+0x21af9]        # 0x426eda
  4053e1:	mov    r9d,0x3
  4053e7:	mov    rdx,rbx
  4053ea:	mov    rcx,rsi
  4053ed:	call   0x404d70
  4053f2:	jmp    0x405125
  4053f7:	lea    rdx,[rip+0x21aa6]        # 0x426ea4
  4053fe:	mov    rcx,rbx
  405401:	call   rdi
  405403:	test   eax,eax
  405405:	je     0x405390
  405407:	movsx  eax,BYTE PTR [rbx]
  40540a:	sub    eax,0x30
  40540d:	cmp    eax,0x9
  405410:	jbe    0x405125
  405416:	cmp    DWORD PTR [rip+0x2f323],0x0        # 0x434740
  40541d:	jne    0x405125
  405423:	call   QWORD PTR [rip+0x33b53]        # 0x438f7c
  405429:	lea    rdx,[rip+0x21aae]        # 0x426ede
  405430:	lea    rcx,[rax+0x60]
  405434:	mov    r8,rbx
  405437:	call   0x404c90
  40543c:	mov    DWORD PTR [rip+0x2f2fa],0x1        # 0x434740
  405446:	jmp    0x405125
  40544b:	lea    rcx,[rip+0x21a57]        # 0x426ea9
  405452:	call   0x404cc0
  405457:	jmp    0x40539a
  40545c:	nop    DWORD PTR [rax+0x0]
  405460:	push   rbx
  405461:	sub    rsp,0x20
  405465:	lea    rdx,[rip+0x21920]        # 0x426d8c
  40546c:	mov    rbx,rcx
  40546f:	call   QWORD PTR [rip+0x33bd7]        # 0x43904c
  405475:	test   eax,eax
  405477:	lea    rax,[rip+0x21a77]        # 0x426ef5
  40547e:	cmove  rbx,rax
  405482:	xor    edx,edx
  405484:	mov    rcx,rbx
  405487:	call   QWORD PTR [rip+0x33e77]        # 0x439304
  40548d:	test   rax,rax
  405490:	mov    edx,0x1bb
  405495:	je     0x40549b
  405497:	movsx  edx,WORD PTR [rax+0x18]
  40549b:	mov    eax,edx
  40549d:	add    rsp,0x20
  4054a1:	pop    rbx
  4054a2:	ret    
  4054a3:	nop    DWORD PTR [rax]
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rbx
  4054b1:	sub    rsp,0x20
  4054b5:	lea    rdx,[rip+0x218d0]        # 0x426d8c
  4054bc:	mov    rbx,rcx
  4054bf:	call   QWORD PTR [rip+0x33b87]        # 0x43904c
  4054c5:	test   eax,eax
  4054c7:	lea    rax,[rip+0x21a27]        # 0x426ef5
  4054ce:	cmove  rbx,rax
  4054d2:	xor    edx,edx
  4054d4:	mov    rcx,rbx
  4054d7:	call   QWORD PTR [rip+0x33e27]        # 0x439304
  4054dd:	test   rax,rax
  4054e0:	je     0x4054f0
  4054e2:	mov    rax,QWORD PTR [rax]
  4054e5:	add    rsp,0x20
  4054e9:	pop    rbx
  4054ea:	ret    
  4054eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4054f0:	lea    rax,[rip+0x21a0a]        # 0x426f01
  4054f7:	add    rsp,0x20
  4054fb:	pop    rbx
  4054fc:	ret    
  4054fd:	nop    DWORD PTR [rax]
  405500:	push   rsi
  405501:	push   rbx
  405502:	sub    rsp,0x28
  405506:	mov    eax,DWORD PTR [rcx+0x10]
  405509:	mov    rbx,rcx
  40550c:	test   eax,eax
  40550e:	je     0x40553d
  405510:	mov    rcx,QWORD PTR [rbx+0x8]
  405514:	mov    edx,0x1
  405519:	call   0x407c10
  40551e:	cmp    eax,0xffffffe4
  405521:	je     0x405510
  405523:	cmp    eax,0xffffffcc
  405526:	je     0x405510
  405528:	test   eax,eax
  40552a:	js     0x4055a0
  40552c:	mov    rcx,QWORD PTR [rbx+0x8]
  405530:	call   0x407b68
  405535:	mov    QWORD PTR [rbx+0x8],0x0
  40553d:	mov    rcx,QWORD PTR [rbx+0x38]
  405541:	call   QWORD PTR [rip+0x33da5]        # 0x4392ec
  405547:	mov    rcx,QWORD PTR [rbx+0x20]
  40554b:	mov    QWORD PTR [rbx+0x30],0x0
  405553:	mov    QWORD PTR [rbx+0x38],0x0
  40555b:	call   0x421e50
  405560:	mov    rcx,QWORD PTR [rbx+0x18]
  405564:	call   0x421e50
  405569:	mov    rcx,QWORD PTR [rbx+0x28]
  40556d:	call   0x421e50
  405572:	mov    ecx,DWORD PTR [rbx]
  405574:	mov    edx,0x2
  405579:	call   0x419aa0
  40557e:	mov    ecx,DWORD PTR [rbx]
  405580:	call   0x417920
  405585:	mov    DWORD PTR [rbx],0xffffffff
  40558b:	mov    DWORD PTR [rbx+0x10],0x0
  405592:	add    rsp,0x28
  405596:	pop    rbx
  405597:	pop    rsi
  405598:	ret    
  405599:	nop    DWORD PTR [rax+0x0]
  4055a0:	mov    ecx,eax
  4055a2:	call   0x4078c0
  4055a7:	mov    rsi,rax
  4055aa:	call   QWORD PTR [rip+0x339cc]        # 0x438f7c
  4055b0:	lea    rdx,[rip+0x2194e]        # 0x426f05
  4055b7:	lea    rcx,[rax+0x60]
  4055bb:	mov    r8,rsi
  4055be:	call   0x404c90
  4055c3:	jmp    0x40552c
  4055c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d0:	push   r15
  4055d2:	push   r14
  4055d4:	mov    eax,0x10a8
  4055d9:	push   r13
  4055db:	push   r12
  4055dd:	push   rbp
  4055de:	push   rdi
  4055df:	push   rsi
  4055e0:	push   rbx
  4055e1:	call   0x41c880
  4055e6:	sub    rsp,rax
  4055e9:	xor    eax,eax
  4055eb:	lea    rdi,[rcx+0x8]
  4055ef:	mov    QWORD PTR [rsp+0x10f8],rdx
  4055f7:	mov    QWORD PTR [rsp+0x50],0x0
  405600:	mov    QWORD PTR [rsp+0x58],0x0
  405609:	mov    rbx,rcx
  40560c:	mov    QWORD PTR [rcx],0x0
  405613:	and    rdi,0xfffffffffffffff8
  405617:	mov    QWORD PTR [rcx+0x40],0x0
  40561f:	mov    rsi,r8
  405622:	sub    rcx,rdi
  405625:	mov    r13d,r9d
  405628:	add    ecx,0x48
  40562b:	shr    ecx,0x3
  40562e:	rep stos QWORD PTR es:[rdi],rax
  405631:	cmp    QWORD PTR [rsp+0x1110],0x0
  40563a:	je     0x405650
  40563c:	mov    rdx,QWORD PTR [rsp+0x10f8]
  405644:	lea    rcx,[rip+0x218d6]        # 0x426f21
  40564b:	call   0x404cc0
  405650:	lea    r8,[rsp+0x60]
  405655:	xor    eax,eax
  405657:	mov    ecx,0x6
  40565c:	cmp    r13d,0x1
  405660:	lea    r9,[rsp+0x48]
  405665:	mov    rdx,rsi
  405668:	mov    rdi,r8
  40566b:	rep stos QWORD PTR es:[rdi],rax
  40566e:	sbb    eax,eax
  405670:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405678:	add    eax,0x2
  40567b:	mov    DWORD PTR [rsp+0x68],eax
  40567f:	call   QWORD PTR [rip+0x33c6f]        # 0x4392f4
  405685:	test   eax,eax
  405687:	mov    r12d,eax
  40568a:	jne    0x405858
  405690:	mov    rbp,QWORD PTR [rsp+0x48]
  405695:	lea    rdi,[rsp+0x90]
  40569d:	lea    rsi,[rsp+0x50]
  4056a2:	test   rbp,rbp
  4056a5:	je     0x4057f0
  4056ab:	mov    edx,DWORD PTR [rbp+0x8]
  4056ae:	mov    ecx,DWORD PTR [rbp+0x4]
  4056b1:	mov    r8d,DWORD PTR [rbp+0xc]
  4056b5:	call   0x419e70
  4056ba:	cmp    eax,0xffffffff
  4056bd:	mov    r15d,eax
  4056c0:	je     0x4057c3
  4056c6:	mov    rdx,QWORD PTR [rbp+0x10]
  4056ca:	mov    rcx,QWORD PTR [rbp+0x20]
  4056ce:	mov    r9d,0x1000
  4056d4:	mov    DWORD PTR [rsp+0x30],0xa
  4056dc:	mov    DWORD PTR [rsp+0x28],0x10
  4056e4:	mov    r8,rdi
  4056e7:	mov    QWORD PTR [rsp+0x20],rsi
  4056ec:	mov    r14,rdi
  4056ef:	mov    r13,rsi
  4056f2:	call   QWORD PTR [rip+0x33c04]        # 0x4392fc
  4056f8:	test   eax,eax
  4056fa:	mov    r12d,eax
  4056fd:	jne    0x4057a0
  405703:	cmp    QWORD PTR [rsp+0x1110],0x0
  40570c:	je     0x405728
  40570e:	mov    rdx,QWORD PTR [rsp+0x1110]
  405716:	lea    rcx,[rip+0x21869]        # 0x426f86
  40571d:	mov    r9,rsi
  405720:	mov    r8,rdi
  405723:	call   0x404cc0
  405728:	mov    rdx,QWORD PTR [rbp+0x20]
  40572c:	mov    r8d,DWORD PTR [rbp+0x10]
  405730:	mov    ecx,r15d
  405733:	call   0x417930
  405738:	test   eax,eax
  40573a:	mov    r12d,eax
  40573d:	js     0x4057c3
  405743:	jne    0x40581d
  405749:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405751:	mov    DWORD PTR [rbx+0x10],0x0
  405758:	mov    DWORD PTR [rbx],r15d
  40575b:	call   0x41a220
  405760:	mov    rcx,r14
  405763:	mov    QWORD PTR [rbx+0x18],rax
  405767:	call   0x41a220
  40576c:	mov    rcx,r13
  40576f:	mov    QWORD PTR [rbx+0x20],rax
  405773:	call   0x41a220
  405778:	mov    QWORD PTR [rbx+0x28],rax
  40577c:	mov    rax,QWORD PTR [rsp+0x48]
  405781:	mov    QWORD PTR [rbx+0x30],rbp
  405785:	mov    QWORD PTR [rbx+0x38],rax
  405789:	add    rsp,0x10a8
  405790:	pop    rbx
  405791:	pop    rsi
  405792:	pop    rdi
  405793:	pop    rbp
  405794:	pop    r12
  405796:	pop    r13
  405798:	pop    r14
  40579a:	pop    r15
  40579c:	ret    
  40579d:	nop    DWORD PTR [rax]
  4057a0:	mov    ecx,eax
  4057a2:	call   0x417d40
  4057a7:	mov    r13,rax
  4057aa:	call   QWORD PTR [rip+0x337cc]        # 0x438f7c
  4057b0:	lea    rdx,[rip+0x217bc]        # 0x426f73
  4057b7:	lea    rcx,[rax+0x60]
  4057bb:	mov    r8,r13
  4057be:	call   0x404c90
  4057c3:	mov    rbp,QWORD PTR [rbp+0x28]
  4057c7:	test   rbp,rbp
  4057ca:	jne    0x4056ab
  4057d0:	test   r12d,r12d
  4057d3:	jne    0x405810
  4057d5:	cmp    r15d,0xffffffff
  4057d9:	je     0x4057f0
  4057db:	lea    r14,[rsp+0x90]
  4057e3:	lea    r13,[rsp+0x50]
  4057e8:	jmp    0x405749
  4057ed:	nop    DWORD PTR [rax]
  4057f0:	call   QWORD PTR [rip+0x33786]        # 0x438f7c
  4057f6:	lea    rdx,[rip+0x21753]        # 0x426f50
  4057fd:	lea    rcx,[rax+0x60]
  405801:	call   0x404c90
  405806:	mov    ecx,0x1
  40580b:	call   0x421e98
  405810:	lea    r14,[rsp+0x90]
  405818:	lea    r13,[rsp+0x50]
  40581d:	call   QWORD PTR [rip+0x337a9]        # 0x438fcc
  405823:	mov    ecx,DWORD PTR [rax]
  405825:	call   0x41a290
  40582a:	mov    rbx,rax
  40582d:	call   QWORD PTR [rip+0x33749]        # 0x438f7c
  405833:	lea    rdx,[rip+0x2175e]        # 0x426f98
  40583a:	lea    rcx,[rax+0x60]
  40583e:	mov    QWORD PTR [rsp+0x20],rbx
  405843:	mov    r9,r13
  405846:	mov    r8,r14
  405849:	call   0x404c90
  40584e:	mov    ecx,0x1
  405853:	call   0x421e98
  405858:	mov    ecx,eax
  40585a:	call   0x417d40
  40585f:	mov    rbx,rax
  405862:	call   QWORD PTR [rip+0x33714]        # 0x438f7c
  405868:	mov    r8,QWORD PTR [rsp+0x10f8]
  405870:	lea    rcx,[rax+0x60]
  405874:	lea    rdx,[rip+0x216b9]        # 0x426f34
  40587b:	mov    QWORD PTR [rsp+0x20],rbx
  405880:	mov    r9,rsi
  405883:	call   0x404c90
  405888:	mov    ecx,0x1
  40588d:	call   0x421e98
  405892:	nop
  405893:	nop    DWORD PTR [rax]
  405896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058a0:	sub    rsp,0x1c8
  4058a7:	mov    ecx,0x101
  4058ac:	lea    rdx,[rsp+0x20]
  4058b1:	call   QWORD PTR [rip+0x33a15]        # 0x4392cc
  4058b7:	test   eax,eax
  4058b9:	je     0x4058c8
  4058bb:	lea    rcx,[rip+0x216f6]        # 0x426fb8
  4058c2:	call   0x421df0
  4058c7:	nop
  4058c8:	add    rsp,0x1c8
  4058cf:	ret    
  4058d0:	push   rsi
  4058d1:	push   rbx
  4058d2:	sub    rsp,0x28
  4058d6:	movsx  eax,BYTE PTR [rcx]
  4058d9:	mov    rbx,rcx
  4058dc:	mov    rsi,rdx
  4058df:	sub    eax,0x30
  4058e2:	cmp    eax,0x9
  4058e5:	jbe    0x4058f1
  4058e7:	mov    rax,rbx
  4058ea:	add    rsp,0x28
  4058ee:	pop    rbx
  4058ef:	pop    rsi
  4058f0:	ret    
  4058f1:	call   0x421eb0
  4058f6:	test   eax,eax
  4058f8:	je     0x4058e7
  4058fa:	movzx  ecx,ax
  4058fd:	call   QWORD PTR [rip+0x33a11]        # 0x439314
  405903:	mov    rdx,rsi
  405906:	movzx  ecx,ax
  405909:	call   QWORD PTR [rip+0x339fd]        # 0x43930c
  40590f:	test   rax,rax
  405912:	je     0x40591e
  405914:	mov    rax,QWORD PTR [rax]
  405917:	add    rsp,0x28
  40591b:	pop    rbx
  40591c:	pop    rsi
  40591d:	ret    
  40591e:	call   QWORD PTR [rip+0x33658]        # 0x438f7c
  405924:	lea    rdx,[rip+0x216a5]        # 0x426fd0
  40592b:	lea    rcx,[rax+0x60]
  40592f:	mov    r8,rbx
  405932:	call   0x404c90
  405937:	jmp    0x4058e7
  405939:	nop    DWORD PTR [rax+0x0]
  405940:	push   rsi
  405941:	push   rbx
  405942:	sub    rsp,0x28
  405946:	mov    rbx,rcx
  405949:	mov    rsi,rdx
  40594c:	call   0x421eb0
  405951:	test   eax,eax
  405953:	je     0x405960
  405955:	add    rsp,0x28
  405959:	pop    rbx
  40595a:	pop    rsi
  40595b:	ret    
  40595c:	nop    DWORD PTR [rax+0x0]
  405960:	mov    rdx,rsi
  405963:	mov    rcx,rbx
  405966:	call   QWORD PTR [rip+0x33998]        # 0x439304
  40596c:	test   rax,rax
  40596f:	je     0x405985
  405971:	movzx  ecx,WORD PTR [rax+0x18]
  405975:	call   QWORD PTR [rip+0x339a9]        # 0x439324
  40597b:	movzx  eax,ax
  40597e:	add    rsp,0x28
  405982:	pop    rbx
  405983:	pop    rsi
  405984:	ret    
  405985:	call   QWORD PTR [rip+0x335f1]        # 0x438f7c
  40598b:	lea    rdx,[rip+0x21686]        # 0x427018
  405992:	lea    rcx,[rax+0x60]
  405996:	call   0x404c90
  40599b:	mov    ecx,0x1
  4059a0:	call   0x421e98
  4059a5:	nop
  4059a6:	nop
  4059a7:	nop
  4059a8:	nop
  4059a9:	nop
  4059aa:	nop
  4059ab:	nop
  4059ac:	nop
  4059ad:	nop
  4059ae:	nop
  4059af:	nop
  4059b0:	sub    rsp,0x38
  4059b4:	mov    QWORD PTR [rsp+0x48],rdx
  4059b9:	lea    rdx,[rsp+0x48]
  4059be:	mov    QWORD PTR [rsp+0x50],r8
  4059c3:	mov    QWORD PTR [rsp+0x58],r9
  4059c8:	mov    QWORD PTR [rsp+0x28],rdx
  4059cd:	call   0x41d300
  4059d2:	add    rsp,0x38
  4059d6:	ret    
  4059d7:	nop    WORD PTR [rax+rax*1+0x0]
  4059e0:	push   rbx
  4059e1:	sub    rsp,0x20
  4059e5:	mov    rbx,rcx
  4059e8:	lea    rcx,[rip+0x21651]        # 0x427040
  4059ef:	call   0x4059b0
  4059f4:	mov    rcx,rbx
  4059f7:	call   0x407b00
  4059fc:	mov    ecx,eax
  4059fe:	mov    ebx,eax
  405a00:	call   0x407af8
  405a05:	lea    rcx,[rip+0x21656]        # 0x427062
  405a0c:	mov    rdx,rax
  405a0f:	call   0x4059b0
  405a14:	mov    ecx,ebx
  405a16:	call   0x407af0
  405a1b:	lea    rcx,[rip+0x21654]        # 0x427076
  405a22:	lea    edx,[rax*8+0x0]
  405a29:	add    rsp,0x20
  405a2d:	pop    rbx
  405a2e:	jmp    0x4059b0
  405a30:	sub    rsp,0x38
  405a34:	mov    QWORD PTR [rsp+0x50],r8
  405a39:	lea    r8,[rsp+0x50]
  405a3e:	mov    QWORD PTR [rsp+0x58],r9
  405a43:	mov    QWORD PTR [rsp+0x28],r8
  405a48:	call   0x41d2d0
  405a4d:	add    rsp,0x38
  405a51:	ret    
  405a52:	nop    DWORD PTR [rax+0x0]
  405a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a60:	push   rdi
  405a61:	push   rsi
  405a62:	push   rbx
  405a63:	sub    rsp,0x50
  405a67:	mov    rbx,rcx
  405a6a:	lea    rcx,[rip+0x2161f]        # 0x427090
  405a71:	mov    esi,r8d
  405a74:	call   0x4059b0
  405a79:	mov    rcx,rbx
  405a7c:	call   0x407b50
  405a81:	lea    rcx,[rip+0x21627]        # 0x4270af
  405a88:	mov    edx,eax
  405a8a:	call   0x4059b0
  405a8f:	mov    rcx,rbx
  405a92:	call   0x407b40
  405a97:	lea    rcx,[rip+0x2162a]        # 0x4270c8
  405a9e:	mov    edx,eax
  405aa0:	call   0x4059b0
  405aa5:	mov    rcx,rbx
  405aa8:	call   0x407b58
  405aad:	lea    rcx,[rip+0x2162c]        # 0x4270e0
  405ab4:	mov    edx,eax
  405ab6:	call   0x4059b0
  405abb:	test   esi,esi
  405abd:	jne    0x405ad0
  405abf:	add    rsp,0x50
  405ac3:	pop    rbx
  405ac4:	pop    rsi
  405ac5:	pop    rdi
  405ac6:	ret    
  405ac7:	nop    WORD PTR [rax+rax*1+0x0]
  405ad0:	lea    rsi,[rsp+0x40]
  405ad5:	lea    rdi,[rsp+0x30]
  405ada:	mov    rcx,rbx
  405add:	mov    QWORD PTR [rsp+0x30],0x0
  405ae6:	mov    DWORD PTR [rsp+0x38],0x0
  405aee:	mov    r8,rsi
  405af1:	mov    rdx,rdi
  405af4:	mov    QWORD PTR [rsp+0x40],0x0
  405afd:	mov    DWORD PTR [rsp+0x48],0x0
  405b05:	mov    QWORD PTR [rsp+0x20],0x0
  405b0e:	mov    QWORD PTR [rsp+0x28],0x0
  405b17:	call   0x407b60
  405b1c:	test   eax,eax
  405b1e:	mov    ebx,eax
  405b20:	jne    0x405b80
  405b22:	lea    rcx,[rsp+0x20]
  405b27:	call   0x407b18
  405b2c:	test   eax,eax
  405b2e:	mov    ebx,eax
  405b30:	je     0x405ba0
  405b32:	call   QWORD PTR [rip+0x33444]        # 0x438f7c
  405b38:	lea    rdx,[rip+0x215d8]        # 0x427117
  405b3f:	lea    rcx,[rax+0x60]
  405b43:	mov    r8d,ebx
  405b46:	xor    esi,esi
  405b48:	call   0x405a30
  405b4d:	mov    rbx,QWORD PTR [rip+0x27a9c]        # 0x42d5f0
  405b54:	mov    rcx,rsi
  405b57:	call   QWORD PTR [rbx]
  405b59:	mov    rcx,QWORD PTR [rsp+0x40]
  405b5e:	call   QWORD PTR [rbx]
  405b60:	mov    rcx,QWORD PTR [rsp+0x30]
  405b65:	call   QWORD PTR [rbx]
  405b67:	mov    rcx,QWORD PTR [rsp+0x20]
  405b6c:	call   0x407b38
  405b71:	nop
  405b72:	add    rsp,0x50
  405b76:	pop    rbx
  405b77:	pop    rsi
  405b78:	pop    rdi
  405b79:	ret    
  405b7a:	nop    WORD PTR [rax+rax*1+0x0]
  405b80:	call   QWORD PTR [rip+0x333f6]        # 0x438f7c
  405b86:	lea    rdx,[rip+0x21572]        # 0x4270ff
  405b8d:	lea    rcx,[rax+0x60]
  405b91:	mov    r8d,ebx
  405b94:	xor    esi,esi
  405b96:	call   0x405a30
  405b9b:	jmp    0x405b4d
  405b9d:	nop    DWORD PTR [rax]
  405ba0:	mov    rcx,QWORD PTR [rsp+0x20]
  405ba5:	mov    r8,rdi
  405ba8:	mov    rdx,rsi
  405bab:	call   0x407b20
  405bb0:	test   eax,eax
  405bb2:	mov    ebx,eax
  405bb4:	jne    0x405c00
  405bb6:	lea    rdi,[rsp+0x28]
  405bbb:	mov    rcx,QWORD PTR [rsp+0x20]
  405bc0:	xor    r8d,r8d
  405bc3:	mov    edx,0x1
  405bc8:	mov    r9,rdi
  405bcb:	call   0x407b28
  405bd0:	cmp    eax,0xffffffcd
  405bd3:	mov    ebx,eax
  405bd5:	je     0x405c20
  405bd7:	call   QWORD PTR [rip+0x3339f]        # 0x438f7c
  405bdd:	lea    rdx,[rip+0x21574]        # 0x427158
  405be4:	lea    rcx,[rax+0x60]
  405be8:	mov    r8d,ebx
  405beb:	xor    esi,esi
  405bed:	call   0x405a30
  405bf2:	jmp    0x405b4d
  405bf7:	nop    WORD PTR [rax+rax*1+0x0]
  405c00:	call   QWORD PTR [rip+0x33376]        # 0x438f7c
  405c06:	lea    rdx,[rip+0x2152b]        # 0x427138
  405c0d:	lea    rcx,[rax+0x60]
  405c11:	mov    r8d,ebx
  405c14:	xor    esi,esi
  405c16:	call   0x405a30
  405c1b:	jmp    0x405b4d
  405c20:	mov    rax,QWORD PTR [rip+0x279d9]        # 0x42d600
  405c27:	mov    rcx,QWORD PTR [rsp+0x28]
  405c2c:	call   QWORD PTR [rax]
  405c2e:	test   rax,rax
  405c31:	mov    rsi,rax
  405c34:	je     0x405c87
  405c36:	mov    rcx,QWORD PTR [rsp+0x20]
  405c3b:	mov    r9,rdi
  405c3e:	mov    r8,rax
  405c41:	mov    edx,0x1
  405c46:	call   0x407b28
  405c4b:	test   eax,eax
  405c4d:	mov    ebx,eax
  405c4f:	je     0x405c6f
  405c51:	call   QWORD PTR [rip+0x33325]        # 0x438f7c
  405c57:	lea    rdx,[rip+0x21532]        # 0x427190
  405c5e:	lea    rcx,[rax+0x60]
  405c62:	mov    r8d,ebx
  405c65:	call   0x405a30
  405c6a:	jmp    0x405b4d
  405c6f:	mov    edx,DWORD PTR [rsp+0x28]
  405c73:	lea    rcx,[rip+0x2153a]        # 0x4271b4
  405c7a:	mov    r8,rsi
  405c7d:	call   0x4059b0
  405c82:	jmp    0x405b4d
  405c87:	call   QWORD PTR [rip+0x332ef]        # 0x438f7c
  405c8d:	lea    rdx,[rip+0x214e6]        # 0x42717a
  405c94:	lea    rcx,[rax+0x60]
  405c98:	mov    r8d,ebx
  405c9b:	call   0x405a30
  405ca0:	jmp    0x405b4d
  405ca5:	nop
  405ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cb0:	sub    rsp,0x38
  405cb4:	lea    rdx,[rip+0x21512]        # 0x4271cd
  405cbb:	mov    QWORD PTR [rsp+0x50],r8
  405cc0:	lea    r8,[rsp+0x50]
  405cc5:	mov    QWORD PTR [rsp+0x58],r9
  405cca:	mov    QWORD PTR [rsp+0x28],r8
  405ccf:	call   0x41d3a0
  405cd4:	add    rsp,0x38
  405cd8:	ret    
  405cd9:	nop    DWORD PTR [rax+0x0]
  405ce0:	push   r14
  405ce2:	push   r13
  405ce4:	push   r12
  405ce6:	push   rbp
  405ce7:	push   rdi
  405ce8:	push   rsi
  405ce9:	push   rbx
  405cea:	sub    rsp,0x20
  405cee:	lea    rax,[rip+0x214e2]        # 0x4271d7
  405cf5:	test   rdx,rdx
  405cf8:	je     0x405d6a
  405cfa:	lea    r8,[rdx+rdx*2+0x1]
  405cff:	lea    rax,[rip+0x214d9]        # 0x4271df
  405d06:	cmp    r8,0x3ff
  405d0d:	ja     0x405d6a
  405d0f:	lea    r14,[rdx-0x1]
  405d13:	lea    rsi,[rip+0x2eaa6]        # 0x4347c0
  405d1a:	lea    r13,[rip+0x214b3]        # 0x4271d4
  405d21:	lea    r12,[rip+0x214ad]        # 0x4271d5
  405d28:	mov    rdi,rdx
  405d2b:	mov    rbp,rcx
  405d2e:	xor    ebx,ebx
  405d30:	movzx  r8d,BYTE PTR [rbp+rbx*1+0x0]
  405d36:	cmp    r14,rbx
  405d39:	mov    r9,r12
  405d3c:	lea    rdx,[rip+0x2148a]        # 0x4271cd
  405d43:	cmove  r9,r13
  405d47:	mov    rcx,rsi
  405d4a:	add    rbx,0x1
  405d4e:	add    rsi,0x3
  405d52:	call   0x405cb0
  405d57:	cmp    rbx,rdi
  405d5a:	jne    0x405d30
  405d5c:	lea    rax,[rip+0x2ea5d]        # 0x4347c0
  405d63:	mov    BYTE PTR [rip+0x2ee55],0x0        # 0x434bbf
  405d6a:	add    rsp,0x20
  405d6e:	pop    rbx
  405d6f:	pop    rsi
  405d70:	pop    rdi
  405d71:	pop    rbp
  405d72:	pop    r12
  405d74:	pop    r13
  405d76:	pop    r14
  405d78:	ret    
  405d79:	nop    DWORD PTR [rax+0x0]
  405d80:	push   rdi
  405d81:	push   rbx
  405d82:	sub    rsp,0x78
  405d86:	xor    eax,eax
  405d88:	lea    r10,[rsp+0x40]
  405d8d:	mov    rbx,rcx
  405d90:	test   rdx,rdx
  405d93:	mov    ecx,0x6
  405d98:	mov    DWORD PTR [rsp+0x2c],0x0
  405da0:	mov    rdi,r10
  405da3:	rep stos QWORD PTR es:[rdi],rax
  405da6:	je     0x405e70
  405dac:	mov    DWORD PTR [rsp+0x40],0x1
  405db4:	mov    QWORD PTR [rsp+0x48],rdx
  405db9:	mov    al,0x1
  405dbb:	test   r8,r8
  405dbe:	je     0x405ddb
  405dc0:	mov    edx,eax
  405dc2:	add    eax,0x1
  405dc5:	lea    r9,[rdx+rdx*2]
  405dc9:	shl    r9,0x3
  405dcd:	mov    DWORD PTR [rsp+r9*1+0x40],0x2
  405dd6:	mov    QWORD PTR [rsp+r9*1+0x48],r8
  405ddb:	lea    r9,[rsp+0x2c]
  405de0:	mov    r8d,eax
  405de3:	mov    rdx,r10
  405de6:	mov    rcx,rbx
  405de9:	call   0x407bb8
  405dee:	cmp    eax,0xffffffcf
  405df1:	je     0x405ea0
  405df7:	test   eax,eax
  405df9:	js     0x405e50
  405dfb:	mov    rcx,rbx
  405dfe:	call   0x407bd8
  405e03:	mov    ecx,DWORD PTR [rsp+0x2c]
  405e07:	lea    r8,[rsp+0x30]
  405e0c:	xor    r9d,r9d
  405e0f:	mov    edx,eax
  405e11:	call   0x407bc0
  405e16:	test   eax,eax
  405e18:	js     0x405e80
  405e1a:	mov    rdx,QWORD PTR [rsp+0x30]
  405e1f:	lea    rcx,[rip+0x21452]        # 0x427278
  405e26:	call   0x4059b0
  405e2b:	mov    rax,QWORD PTR [rip+0x277be]        # 0x42d5f0
  405e32:	mov    rcx,QWORD PTR [rsp+0x30]
  405e37:	call   QWORD PTR [rax]
  405e39:	mov    edx,DWORD PTR [rsp+0x2c]
  405e3d:	xor    eax,eax
  405e3f:	test   edx,edx
  405e41:	sete   al
  405e44:	add    rsp,0x78
  405e48:	pop    rbx
  405e49:	pop    rdi
  405e4a:	ret    
  405e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e50:	mov    ecx,eax
  405e52:	call   0x4078c0
  405e57:	lea    rcx,[rip+0x213ba]        # 0x427218
  405e5e:	mov    rdx,rax
  405e61:	call   0x4059b0
  405e66:	xor    eax,eax
  405e68:	add    rsp,0x78
  405e6c:	pop    rbx
  405e6d:	pop    rdi
  405e6e:	ret    
  405e6f:	nop
  405e70:	xor    eax,eax
  405e72:	jmp    0x405dbb
  405e77:	nop    WORD PTR [rax+rax*1+0x0]
  405e80:	mov    ecx,eax
  405e82:	call   0x4078c0
  405e87:	lea    rcx,[rip+0x213ba]        # 0x427248
  405e8e:	mov    rdx,rax
  405e91:	call   0x4059b0
  405e96:	xor    eax,eax
  405e98:	add    rsp,0x78
  405e9c:	pop    rbx
  405e9d:	pop    rdi
  405e9e:	ret    
  405e9f:	nop
  405ea0:	lea    rcx,[rip+0x21349]        # 0x4271f0
  405ea7:	call   0x4059b0
  405eac:	xor    eax,eax
  405eae:	jmp    0x405e44
  405eb0:	push   r15
  405eb2:	push   r14
  405eb4:	push   r13
  405eb6:	push   r12
  405eb8:	push   rbp
  405eb9:	push   rdi
  405eba:	push   rsi
  405ebb:	push   rbx
  405ebc:	sub    rsp,0x68
  405ec0:	cmp    edx,0x1
  405ec3:	mov    rbx,rcx
  405ec6:	mov    rsi,r8
  405ec9:	sbb    edi,edi
  405ecb:	mov    r12d,r9d
  405ece:	and    edi,0x3
  405ed1:	call   0x407c00
  405ed6:	test   eax,eax
  405ed8:	jne    0x406180
  405ede:	mov    rcx,rbx
  405ee1:	call   0x407bd8
  405ee6:	cmp    eax,0x1
  405ee9:	je     0x405ff0
  405eef:	cmp    eax,0x2
  405ef2:	je     0x405f12
  405ef4:	lea    rcx,[rip+0x21495]        # 0x427390
  405efb:	call   0x4059b0
  405f00:	nop
  405f01:	add    rsp,0x68
  405f05:	pop    rbx
  405f06:	pop    rsi
  405f07:	pop    rdi
  405f08:	pop    rbp
  405f09:	pop    r12
  405f0b:	pop    r13
  405f0d:	pop    r14
  405f0f:	pop    r15
  405f11:	ret    
  405f12:	lea    rdx,[rip+0x21454]        # 0x42736d
  405f19:	mov    rcx,rsi
  405f1c:	mov    DWORD PTR [rsp+0x3c],0x0
  405f24:	call   0x405a30
  405f29:	lea    rdx,[rsp+0x3c]
  405f2e:	mov    rcx,rbx
  405f31:	call   0x407be8
  405f36:	mov    rbx,rax
  405f39:	mov    eax,DWORD PTR [rsp+0x3c]
  405f3d:	test   eax,eax
  405f3f:	je     0x405f01
  405f41:	lea    rcx,[rsp+0x40]
  405f46:	call   0x407a28
  405f4b:	mov    rcx,QWORD PTR [rsp+0x40]
  405f50:	xor    r8d,r8d
  405f53:	mov    rdx,rbx
  405f56:	call   0x407a30
  405f5b:	test   eax,eax
  405f5d:	js     0x4061f0
  405f63:	mov    rcx,QWORD PTR [rsp+0x40]
  405f68:	lea    r8,[rsp+0x50]
  405f6d:	mov    edx,edi
  405f6f:	call   0x407a20
  405f74:	test   eax,eax
  405f76:	je     0x406248
  405f7c:	test   r12d,r12d
  405f7f:	je     0x405fdb
  405f81:	lea    rdi,[rsp+0x48]
  405f86:	mov    rcx,QWORD PTR [rsp+0x40]
  405f8b:	xor    r8d,r8d
  405f8e:	mov    edx,0x1
  405f93:	mov    QWORD PTR [rsp+0x48],0x0
  405f9c:	xor    ebx,ebx
  405f9e:	mov    r9,rdi
  405fa1:	call   0x407a38
  405fa6:	cmp    eax,0xffffffcd
  405fa9:	je     0x40626f
  405faf:	test   eax,eax
  405fb1:	js     0x406220
  405fb7:	mov    rdx,rsi
  405fba:	mov    rcx,rbx
  405fbd:	call   0x421e60
  405fc2:	mov    ecx,0xa
  405fc7:	mov    rdx,rsi
  405fca:	call   0x421e68
  405fcf:	mov    rax,QWORD PTR [rip+0x2761a]        # 0x42d5f0
  405fd6:	mov    rcx,rbx
  405fd9:	call   QWORD PTR [rax]
  405fdb:	mov    rcx,QWORD PTR [rsp+0x40]
  405fe0:	call   0x407a40
  405fe5:	jmp    0x405f01
  405fea:	nop    WORD PTR [rax+rax*1+0x0]
  405ff0:	lea    rdx,[rsp+0x3c]
  405ff5:	mov    rcx,rbx
  405ff8:	mov    DWORD PTR [rsp+0x3c],0x0
  406000:	call   0x407be8
  406005:	mov    ecx,DWORD PTR [rsp+0x3c]
  406009:	mov    r13,rax
  40600c:	test   ecx,ecx
  40600e:	je     0x406191
  406014:	lea    rdx,[rip+0x212ac]        # 0x4272c7
  40601b:	mov    rcx,rsi
  40601e:	call   0x405a30
  406023:	mov    r8d,DWORD PTR [rsp+0x3c]
  406028:	lea    rdx,[rip+0x212b9]        # 0x4272e8
  40602f:	mov    rcx,rsi
  406032:	call   0x405a30
  406037:	mov    edx,DWORD PTR [rsp+0x3c]
  40603b:	test   edx,edx
  40603d:	je     0x405f01
  406043:	lea    rax,[rsp+0x48]
  406048:	xor    ebx,ebx
  40604a:	lea    r14,[rsp+0x40]
  40604f:	lea    r15,[rsp+0x50]
  406054:	mov    QWORD PTR [rsp+0x20],rax
  406059:	mov    rax,QWORD PTR [rip+0x27590]        # 0x42d5f0
  406060:	mov    QWORD PTR [rsp+0x28],rax
  406065:	jmp    0x4060f8
  40606a:	nop    WORD PTR [rax+rax*1+0x0]
  406070:	test   r12d,r12d
  406073:	je     0x4060e1
  406075:	mov    r9,QWORD PTR [rsp+0x20]
  40607a:	mov    rcx,QWORD PTR [rsp+0x40]
  40607f:	xor    r8d,r8d
  406082:	mov    edx,0x1
  406087:	mov    QWORD PTR [rsp+0x48],0x0
  406090:	xor    ebp,ebp
  406092:	call   0x407888
  406097:	cmp    eax,0xffffffcd
  40609a:	je     0x4061b4
  4060a0:	test   eax,eax
  4060a2:	js     0x406220
  4060a8:	mov    rax,QWORD PTR [rsp+0x48]
  4060ad:	mov    rdx,rsi
  4060b0:	mov    ecx,0xa
  4060b5:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  4060ba:	call   0x421e68
  4060bf:	mov    rdx,rsi
  4060c2:	mov    rcx,rbp
  4060c5:	call   0x421e60
  4060ca:	mov    ecx,0xa
  4060cf:	mov    rdx,rsi
  4060d2:	call   0x421e68
  4060d7:	mov    rax,QWORD PTR [rsp+0x28]
  4060dc:	mov    rcx,rbp
  4060df:	call   QWORD PTR [rax]
  4060e1:	mov    rcx,QWORD PTR [rsp+0x40]
  4060e6:	add    ebx,0x1
  4060e9:	call   0x407890
  4060ee:	cmp    ebx,DWORD PTR [rsp+0x3c]
  4060f2:	jae    0x405f01
  4060f8:	mov    rcx,r14
  4060fb:	call   0x407878
  406100:	mov    edx,ebx
  406102:	mov    rcx,QWORD PTR [rsp+0x40]
  406107:	xor    r8d,r8d
  40610a:	shl    rdx,0x4
  40610e:	add    rdx,r13
  406111:	call   0x407880
  406116:	test   eax,eax
  406118:	js     0x4061f0
  40611e:	lea    rdx,[rip+0x21205]        # 0x42732a
  406125:	mov    r8d,ebx
  406128:	mov    rcx,rsi
  40612b:	call   0x405a30
  406130:	test   ebx,ebx
  406132:	je     0x4061b0
  406134:	cmp    edi,0x3
  406137:	jne    0x4061b0
  406139:	mov    edx,0x1
  40613e:	mov    edi,0x1
  406143:	mov    rcx,QWORD PTR [rsp+0x40]
  406148:	mov    r8,r15
  40614b:	call   0x407868
  406150:	test   eax,eax
  406152:	jne    0x406070
  406158:	mov    r8,QWORD PTR [rsp+0x50]
  40615d:	lea    rdx,[rip+0x211e2]        # 0x427346
  406164:	mov    rcx,rsi
  406167:	call   0x405a30
  40616c:	mov    rax,QWORD PTR [rip+0x2747d]        # 0x42d5f0
  406173:	mov    rcx,QWORD PTR [rsp+0x50]
  406178:	call   QWORD PTR [rax]
  40617a:	jmp    0x406070
  40617f:	nop
  406180:	lea    rcx,[rip+0x21101]        # 0x427288
  406187:	call   0x4059b0
  40618c:	jmp    0x405ede
  406191:	call   QWORD PTR [rip+0x32de5]        # 0x438f7c
  406197:	lea    rdx,[rip+0x21111]        # 0x4272af
  40619e:	lea    rcx,[rax+0x60]
  4061a2:	call   0x405a30
  4061a7:	jmp    0x405f01
  4061ac:	nop    DWORD PTR [rax+0x0]
  4061b0:	mov    edx,edi
  4061b2:	jmp    0x406143
  4061b4:	mov    rax,QWORD PTR [rsp+0x48]
  4061b9:	lea    rcx,[rax+0x1]
  4061bd:	call   0x4145c0
  4061c2:	test   rax,rax
  4061c5:	mov    rbp,rax
  4061c8:	je     0x40629b
  4061ce:	mov    r9,QWORD PTR [rsp+0x20]
  4061d3:	mov    rcx,QWORD PTR [rsp+0x40]
  4061d8:	mov    r8,rax
  4061db:	mov    edx,0x1
  4061e0:	call   0x407888
  4061e5:	jmp    0x4060a0
  4061ea:	nop    WORD PTR [rax+rax*1+0x0]
  4061f0:	mov    ecx,eax
  4061f2:	call   0x4078c0
  4061f7:	mov    rbx,rax
  4061fa:	call   QWORD PTR [rip+0x32d7c]        # 0x438f7c
  406200:	lea    rdx,[rip+0x2110f]        # 0x427316
  406207:	lea    rcx,[rax+0x60]
  40620b:	mov    r8,rbx
  40620e:	call   0x405a30
  406213:	jmp    0x405f01
  406218:	nop    DWORD PTR [rax+rax*1+0x0]
  406220:	mov    ecx,eax
  406222:	call   0x4078c0
  406227:	mov    rbx,rax
  40622a:	call   QWORD PTR [rip+0x32d4c]        # 0x438f7c
  406230:	lea    rdx,[rip+0x21122]        # 0x427359
  406237:	lea    rcx,[rax+0x60]
  40623b:	mov    r8,rbx
  40623e:	call   0x405a30
  406243:	jmp    0x405f01
  406248:	mov    r8,QWORD PTR [rsp+0x50]
  40624d:	lea    rdx,[rip+0x21136]        # 0x42738a
  406254:	mov    rcx,rsi
  406257:	call   0x405a30
  40625c:	mov    rax,QWORD PTR [rip+0x2738d]        # 0x42d5f0
  406263:	mov    rcx,QWORD PTR [rsp+0x50]
  406268:	call   QWORD PTR [rax]
  40626a:	jmp    0x405f7c
  40626f:	mov    rcx,QWORD PTR [rsp+0x48]
  406274:	call   0x4145c0
  406279:	test   rax,rax
  40627c:	mov    rbx,rax
  40627f:	je     0x40629b
  406281:	mov    rcx,QWORD PTR [rsp+0x40]
  406286:	mov    r9,rdi
  406289:	mov    r8,rax
  40628c:	mov    edx,0x1
  406291:	call   0x407a38
  406296:	jmp    0x405faf
  40629b:	call   QWORD PTR [rip+0x32cdb]        # 0x438f7c
  4062a1:	lea    rdx,[rip+0x210a2]        # 0x42734a
  4062a8:	lea    rcx,[rax+0x60]
  4062ac:	call   0x405a30
  4062b1:	mov    ecx,0x1
  4062b6:	call   0x421e98
  4062bb:	nop
  4062bc:	nop    DWORD PTR [rax+0x0]
  4062c0:	push   rdi
  4062c1:	push   rsi
  4062c2:	push   rbx
  4062c3:	sub    rsp,0x20
  4062c7:	mov    edi,r8d
  4062ca:	mov    rbx,rcx
  4062cd:	mov    esi,edx
  4062cf:	call   QWORD PTR [rip+0x32ca7]        # 0x438f7c
  4062d5:	lea    r8,[rax+0x30]
  4062d9:	mov    r9d,edi
  4062dc:	mov    edx,esi
  4062de:	mov    rcx,rbx
  4062e1:	add    rsp,0x20
  4062e5:	pop    rbx
  4062e6:	pop    rsi
  4062e7:	pop    rdi
  4062e8:	jmp    0x405eb0
  4062ed:	nop    DWORD PTR [rax]
  4062f0:	push   r14
  4062f2:	push   r13
  4062f4:	push   r12
  4062f6:	push   rbp
  4062f7:	push   rdi
  4062f8:	push   rsi
  4062f9:	push   rbx
  4062fa:	sub    rsp,0x180
  406301:	mov    rbx,rcx
  406304:	mov    ebp,r8d
  406307:	mov    edi,edx
  406309:	mov    QWORD PTR [rsp+0x38],0x21
  406312:	call   0x407928
  406317:	lea    rcx,[rip+0x21092]        # 0x4273b0
  40631e:	mov    rdx,rax
  406321:	mov    rsi,rax
  406324:	call   0x4059b0
  406329:	mov    rax,QWORD PTR [rip+0x272c0]        # 0x42d5f0
  406330:	mov    rcx,rsi
  406333:	lea    rsi,[rsp+0x50]
  406338:	call   QWORD PTR [rax]
  40633a:	lea    r8,[rsp+0x38]
  40633f:	mov    rdx,rsi
  406342:	mov    rcx,rbx
  406345:	call   0x407920
  40634a:	mov    rdx,QWORD PTR [rsp+0x38]
  40634f:	mov    rcx,rsi
  406352:	call   0x405ce0
  406357:	lea    rcx,[rip+0x21065]        # 0x4273c3
  40635e:	mov    rdx,rax
  406361:	call   0x4059b0
  406366:	mov    rcx,rbx
  406369:	call   0x407a88
  40636e:	mov    rcx,rbx
  406371:	mov    esi,eax
  406373:	call   0x407c18
  406378:	cmp    eax,0x5
  40637b:	ja     0x40639d
  40637d:	lea    r10,[rip+0x21294]        # 0x427618
  406384:	mov    r9d,eax
  406387:	movsxd rax,DWORD PTR [r10+r9*4]
  40638b:	add    r10,rax
  40638e:	jmp    r10
  406391:	lea    rcx,[rip+0x210d4]        # 0x42746c
  406398:	call   0x4059b0
  40639d:	lea    r13,[rsp+0x34]
  4063a2:	lea    r12,[rsp+0x40]
  4063a7:	mov    rcx,rbx
  4063aa:	call   0x4079b8
  4063af:	mov    ecx,eax
  4063b1:	call   0x4079c0
  4063b6:	test   rax,rax
  4063b9:	lea    rdx,[rip+0x20fde]        # 0x42739e
  4063c0:	je     0x4063d4
  4063c2:	mov    rcx,rbx
  4063c5:	call   0x4079b8
  4063ca:	mov    ecx,eax
  4063cc:	call   0x4079c0
  4063d1:	mov    rdx,rax
  4063d4:	lea    rcx,[rip+0x210f0]        # 0x4274cb
  4063db:	call   0x4059b0
  4063e0:	mov    ecx,esi
  4063e2:	call   0x407a80
  4063e7:	test   rax,rax
  4063ea:	lea    rdx,[rip+0x20fad]        # 0x42739e
  4063f1:	je     0x4063fd
  4063f3:	mov    ecx,esi
  4063f5:	call   0x407a80
  4063fa:	mov    rdx,rax
  4063fd:	lea    rcx,[rip+0x210d6]        # 0x4274da
  406404:	call   0x4059b0
  406409:	mov    rcx,rbx
  40640c:	call   0x407908
  406411:	test   eax,eax
  406413:	jne    0x4066d1
  406419:	mov    rcx,rbx
  40641c:	call   0x407900
  406421:	test   eax,eax
  406423:	jne    0x406693
  406429:	mov    rcx,rbx
  40642c:	call   0x407ba8
  406431:	mov    ecx,eax
  406433:	call   0x407ba0
  406438:	test   rax,rax
  40643b:	lea    rdx,[rip+0x20f5c]        # 0x42739e
  406442:	je     0x406456
  406444:	mov    rcx,rbx
  406447:	call   0x407ba8
  40644c:	mov    ecx,eax
  40644e:	call   0x407ba0
  406453:	mov    rdx,rax
  406456:	lea    rcx,[rip+0x210c1]        # 0x42751e
  40645d:	call   0x4059b0
  406462:	mov    rcx,rbx
  406465:	call   0x407a70
  40646a:	mov    ecx,eax
  40646c:	call   0x407a68
  406471:	test   rax,rax
  406474:	lea    rdx,[rip+0x20f23]        # 0x42739e
  40647b:	je     0x40648f
  40647d:	mov    rcx,rbx
  406480:	call   0x407a70
  406485:	mov    ecx,eax
  406487:	call   0x407a68
  40648c:	mov    rdx,rax
  40648f:	lea    rcx,[rip+0x21096]        # 0x42752c
  406496:	call   0x4059b0
  40649b:	mov    rcx,rbx
  40649e:	call   0x407b88
  4064a3:	mov    ecx,eax
  4064a5:	call   0x407b80
  4064aa:	test   rax,rax
  4064ad:	lea    rdx,[rip+0x20eea]        # 0x42739e
  4064b4:	je     0x4064c8
  4064b6:	mov    rcx,rbx
  4064b9:	call   0x407b88
  4064be:	mov    ecx,eax
  4064c0:	call   0x407b80
  4064c5:	mov    rdx,rax
  4064c8:	lea    rcx,[rip+0x21068]        # 0x427537
  4064cf:	call   0x4059b0
  4064d4:	lea    rcx,[rip+0x2106f]        # 0x42754a
  4064db:	call   0x4059b0
  4064e0:	mov    rcx,rbx
  4064e3:	call   0x407938
  4064e8:	test   eax,eax
  4064ea:	jne    0x406682
  4064f0:	mov    rcx,rbx
  4064f3:	call   0x407960
  4064f8:	test   eax,eax
  4064fa:	jne    0x406671
  406500:	mov    rcx,rbx
  406503:	call   0x407940
  406508:	test   eax,eax
  40650a:	jne    0x406660
  406510:	mov    edx,0x1
  406515:	mov    rcx,rbx
  406518:	call   0x407a48
  40651d:	test   eax,eax
  40651f:	jne    0x406630
  406525:	lea    rcx,[rip+0x21075]        # 0x4275a1
  40652c:	call   0x4059b0
  406531:	mov    rdx,r13
  406534:	mov    rcx,rbx
  406537:	call   0x4078c8
  40653c:	test   eax,eax
  40653e:	je     0x406610
  406544:	mov    rdx,r12
  406547:	mov    rcx,rbx
  40654a:	call   0x407c30
  40654f:	test   eax,eax
  406551:	je     0x4065f4
  406557:	test   edi,edi
  406559:	mov    rsi,QWORD PTR [rip+0x32a1c]        # 0x438f7c
  406560:	jne    0x406581
  406562:	call   rsi
  406564:	lea    rcx,[rax+0x30]
  406568:	call   0x421e80
  40656d:	xor    eax,eax
  40656f:	add    rsp,0x180
  406576:	pop    rbx
  406577:	pop    rsi
  406578:	pop    rdi
  406579:	pop    rbp
  40657a:	pop    r12
  40657c:	pop    r13
  40657e:	pop    r14
  406580:	ret    
  406581:	lea    r8,[rsp+0x80]
  406589:	xor    edx,edx
  40658b:	mov    rcx,rbx
  40658e:	call   0x407948
  406593:	test   eax,eax
  406595:	jne    0x406710
  40659b:	lea    rcx,[rip+0x2104e]        # 0x4275f0
  4065a2:	xor    ebx,ebx
  4065a4:	call   0x4059b0
  4065a9:	mov    eax,DWORD PTR [rsp+0x88]
  4065b0:	test   eax,eax
  4065b2:	je     0x4065dc
  4065b4:	mov    rax,QWORD PTR [rsp+0x80]
  4065bc:	lea    rcx,[rip+0x2104e]        # 0x427611
  4065c3:	movzx  edx,BYTE PTR [rax+rbx*1]
  4065c7:	add    rbx,0x1
  4065cb:	call   0x4059b0
  4065d0:	mov    eax,DWORD PTR [rsp+0x88]
  4065d7:	cmp    rax,rbx
  4065da:	ja     0x4065b4
  4065dc:	lea    rcx,[rip+0x20fbe]        # 0x4275a1
  4065e3:	call   0x4059b0
  4065e8:	mov    rsi,QWORD PTR [rip+0x3298d]        # 0x438f7c
  4065ef:	jmp    0x406562
  4065f4:	mov    r8,QWORD PTR [rsp+0x40]
  4065f9:	mov    edx,DWORD PTR [rsp+0x48]
  4065fd:	lea    rcx,[rip+0x20fb3]        # 0x4275b7
  406604:	call   0x4059b0
  406609:	jmp    0x406557
  40660e:	xchg   ax,ax
  406610:	mov    ecx,DWORD PTR [rsp+0x34]
  406614:	call   0x4078d0
  406619:	lea    rcx,[rip+0x20f83]        # 0x4275a3
  406620:	mov    rdx,rax
  406623:	call   0x4059b0
  406628:	jmp    0x406544
  40662d:	nop    DWORD PTR [rax]
  406630:	xor    edx,edx
  406632:	mov    rcx,rbx
  406635:	call   0x407a48
  40663a:	lea    rdx,[rip+0x20d65]        # 0x4273a6
  406641:	test   eax,eax
  406643:	lea    rax,[rip+0x20b8a]        # 0x4271d4
  40664a:	lea    rcx,[rip+0x20f38]        # 0x427589
  406651:	cmovne rdx,rax
  406655:	call   0x4059b0
  40665a:	jmp    0x406525
  40665f:	nop
  406660:	lea    rcx,[rip+0x20f1c]        # 0x427583
  406667:	call   0x4059b0
  40666c:	jmp    0x406510
  406671:	lea    rcx,[rip+0x20ef6]        # 0x42756e
  406678:	call   0x4059b0
  40667d:	jmp    0x406500
  406682:	lea    rcx,[rip+0x20ecc]        # 0x427555
  406689:	call   0x4059b0
  40668e:	jmp    0x4064f0
  406693:	mov    rcx,rbx
  406696:	call   0x407900
  40669b:	mov    ecx,eax
  40669d:	call   0x4078f8
  4066a2:	test   rax,rax
  4066a5:	lea    rdx,[rip+0x20cf2]        # 0x42739e
  4066ac:	je     0x4066c0
  4066ae:	mov    rcx,rbx
  4066b1:	call   0x407900
  4066b6:	mov    ecx,eax
  4066b8:	call   0x4078f8
  4066bd:	mov    rdx,rax
  4066c0:	lea    rcx,[rip+0x20e3f]        # 0x427506
  4066c7:	call   0x4059b0
  4066cc:	jmp    0x406429
  4066d1:	mov    rcx,rbx
  4066d4:	call   0x407908
  4066d9:	mov    ecx,eax
  4066db:	call   0x4078f8
  4066e0:	test   rax,rax
  4066e3:	lea    rdx,[rip+0x20cb4]        # 0x42739e
  4066ea:	je     0x4066fe
  4066ec:	mov    rcx,rbx
  4066ef:	call   0x407908
  4066f4:	mov    ecx,eax
  4066f6:	call   0x4078f8
  4066fb:	mov    rdx,rax
  4066fe:	lea    rcx,[rip+0x20de9]        # 0x4274ee
  406705:	call   0x4059b0
  40670a:	jmp    0x406419
  40670f:	nop
  406710:	mov    ecx,eax
  406712:	call   0x4078c0
  406717:	mov    rbx,rax
  40671a:	call   rsi
  40671c:	lea    rdx,[rip+0x20eb2]        # 0x4275d5
  406723:	lea    rcx,[rax+0x60]
  406727:	mov    r8,rbx
  40672a:	call   0x405a30
  40672f:	jmp    0x406562
  406734:	lea    r13,[rsp+0x34]
  406739:	lea    r12,[rsp+0x40]
  40673e:	lea    r14,[rsp+0x80]
  406746:	mov    DWORD PTR [rsp+0x20],0x0
  40674e:	mov    rcx,rbx
  406751:	mov    QWORD PTR [rsp+0x40],0x100
  40675a:	mov    r9,r13
  40675d:	mov    r8,r12
  406760:	mov    rdx,r14
  406763:	call   0x407958
  406768:	test   eax,eax
  40676a:	je     0x4068c2
  406770:	test   bpl,0x2
  406774:	jne    0x4068a0
  40677a:	and    ebp,0x1
  40677d:	jne    0x406885
  406783:	lea    eax,[rsi-0x2]
  406786:	cmp    eax,0x1
  406789:	jbe    0x4068f4
  40678f:	lea    eax,[rsi-0xc]
  406792:	cmp    eax,0x1
  406795:	ja     0x4063a7
  40679b:	lea    rdx,[rip+0x20cbf]        # 0x427461
  4067a2:	mov    rcx,rbx
  4067a5:	call   0x4059e0
  4067aa:	jmp    0x4063a7
  4067af:	nop
  4067b0:	cmp    esi,0xb
  4067b3:	je     0x4068e0
  4067b9:	lea    rdx,[rip+0x20c15]        # 0x4273d5
  4067c0:	mov    r8d,edi
  4067c3:	mov    rcx,rbx
  4067c6:	lea    r13,[rsp+0x34]
  4067cb:	lea    r12,[rsp+0x40]
  4067d0:	call   0x405a60
  4067d5:	jmp    0x4063a7
  4067da:	nop    WORD PTR [rax+rax*1+0x0]
  4067e0:	mov    rcx,rbx
  4067e3:	call   0x4078d8
  4067e8:	test   rax,rax
  4067eb:	je     0x40639d
  4067f1:	mov    rcx,rbx
  4067f4:	lea    r13,[rsp+0x34]
  4067f9:	lea    r12,[rsp+0x40]
  4067fe:	call   0x4078d8
  406803:	lea    rcx,[rip+0x20bd6]        # 0x4273e0
  40680a:	mov    rdx,rax
  40680d:	call   0x4059b0
  406812:	jmp    0x4063a7
  406817:	nop    WORD PTR [rax+rax*1+0x0]
  406820:	mov    rcx,rbx
  406823:	call   0x4079a8
  406828:	test   rax,rax
  40682b:	je     0x406844
  40682d:	mov    rcx,rbx
  406830:	call   0x4079a8
  406835:	lea    rcx,[rip+0x20bd4]        # 0x427410
  40683c:	mov    rdx,rax
  40683f:	call   0x4059b0
  406844:	mov    rcx,rbx
  406847:	call   0x4079a0
  40684c:	test   rax,rax
  40684f:	je     0x406868
  406851:	mov    rcx,rbx
  406854:	call   0x4079a0
  406859:	lea    rcx,[rip+0x20bd8]        # 0x427438
  406860:	mov    rdx,rax
  406863:	call   0x4059b0
  406868:	cmp    esi,0xa
  40686b:	lea    r13,[rsp+0x34]
  406870:	lea    r12,[rsp+0x40]
  406875:	je     0x4068f4
  406877:	cmp    esi,0xe
  40687a:	jne    0x4063a7
  406880:	jmp    0x40679b
  406885:	mov    r8d,0x1
  40688b:	mov    edx,edi
  40688d:	mov    rcx,rbx
  406890:	call   0x4062c0
  406895:	jmp    0x406783
  40689a:	nop    WORD PTR [rax+rax*1+0x0]
  4068a0:	mov    rcx,rbx
  4068a3:	call   0x407bf0
  4068a8:	test   rax,rax
  4068ab:	jne    0x40677a
  4068b1:	lea    rcx,[rip+0x20bf0]        # 0x4274a8
  4068b8:	call   0x4059b0
  4068bd:	jmp    0x40677a
  4068c2:	mov    edx,DWORD PTR [rsp+0x34]
  4068c6:	lea    rcx,[rip+0x20bb8]        # 0x427485
  4068cd:	mov    r8,r14
  4068d0:	call   0x4059b0
  4068d5:	jmp    0x406770
  4068da:	nop    WORD PTR [rax+rax*1+0x0]
  4068e0:	lea    rdx,[rip+0x20aee]        # 0x4273d5
  4068e7:	mov    rcx,rbx
  4068ea:	call   0x4059e0
  4068ef:	jmp    0x40639d
  4068f4:	lea    rdx,[rip+0x20b66]        # 0x427461
  4068fb:	mov    r8d,edi
  4068fe:	mov    rcx,rbx
  406901:	call   0x405a60
  406906:	jmp    0x4063a7
  40690b:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	push   rbx
  406911:	sub    rsp,0x40
  406915:	mov    rbx,rcx
  406918:	call   0x407c00
  40691d:	test   eax,eax
  40691f:	jne    0x406a50
  406925:	mov    rcx,rbx
  406928:	call   0x407bd8
  40692d:	cmp    eax,0x1
  406930:	je     0x4069c0
  406936:	cmp    eax,0x2
  406939:	je     0x406950
  40693b:	lea    rcx,[rip+0x20a4e]        # 0x427390
  406942:	call   0x4059b0
  406947:	nop
  406948:	add    rsp,0x40
  40694c:	pop    rbx
  40694d:	ret    
  40694e:	xchg   ax,ax
  406950:	lea    rdx,[rsp+0x24]
  406955:	mov    rcx,rbx
  406958:	mov    DWORD PTR [rsp+0x24],0x0
  406960:	call   0x407be8
  406965:	mov    rbx,rax
  406968:	mov    eax,DWORD PTR [rsp+0x24]
  40696c:	test   eax,eax
  40696e:	je     0x406948
  406970:	lea    rcx,[rsp+0x28]
  406975:	call   0x407a28
  40697a:	mov    rcx,QWORD PTR [rsp+0x28]
  40697f:	xor    r8d,r8d
  406982:	mov    rdx,rbx
  406985:	call   0x407a30
  40698a:	test   eax,eax
  40698c:	js     0x406a80
  406992:	mov    rcx,QWORD PTR [rsp+0x28]
  406997:	lea    r8,[rsp+0x30]
  40699c:	mov    edx,0x3
  4069a1:	call   0x407a20
  4069a6:	test   eax,eax
  4069a8:	je     0x406ab0
  4069ae:	mov    rcx,QWORD PTR [rsp+0x28]
  4069b3:	call   0x407a40
  4069b8:	jmp    0x406948
  4069ba:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	lea    rdx,[rsp+0x24]
  4069c5:	mov    rcx,rbx
  4069c8:	mov    DWORD PTR [rsp+0x24],0x0
  4069d0:	call   0x407be8
  4069d5:	mov    edx,DWORD PTR [rsp+0x24]
  4069d9:	mov    rbx,rax
  4069dc:	test   edx,edx
  4069de:	je     0x406a61
  4069e4:	lea    rcx,[rsp+0x28]
  4069e9:	call   0x407878
  4069ee:	mov    rcx,QWORD PTR [rsp+0x28]
  4069f3:	xor    r8d,r8d
  4069f6:	mov    rdx,rbx
  4069f9:	call   0x407880
  4069fe:	test   eax,eax
  406a00:	js     0x406a80
  406a02:	mov    rcx,QWORD PTR [rsp+0x28]
  406a07:	lea    r8,[rsp+0x30]
  406a0c:	mov    edx,0x3
  406a11:	call   0x407868
  406a16:	test   eax,eax
  406a18:	jne    0x406a39
  406a1a:	mov    rdx,QWORD PTR [rsp+0x30]
  406a1f:	lea    rcx,[rip+0x20c0a]        # 0x427630
  406a26:	call   0x4059b0
  406a2b:	mov    rax,QWORD PTR [rip+0x26bbe]        # 0x42d5f0
  406a32:	mov    rcx,QWORD PTR [rsp+0x30]
  406a37:	call   QWORD PTR [rax]
  406a39:	mov    rcx,QWORD PTR [rsp+0x28]
  406a3e:	call   0x407890
  406a43:	nop
  406a44:	add    rsp,0x40
  406a48:	pop    rbx
  406a49:	ret    
  406a4a:	nop    WORD PTR [rax+rax*1+0x0]
  406a50:	lea    rcx,[rip+0x20831]        # 0x427288
  406a57:	call   0x4059b0
  406a5c:	jmp    0x406925
  406a61:	call   QWORD PTR [rip+0x32515]        # 0x438f7c
  406a67:	lea    rdx,[rip+0x20841]        # 0x4272af
  406a6e:	lea    rcx,[rax+0x60]
  406a72:	call   0x405a30
  406a77:	nop
  406a78:	add    rsp,0x40
  406a7c:	pop    rbx
  406a7d:	ret    
  406a7e:	xchg   ax,ax
  406a80:	mov    ecx,eax
  406a82:	call   0x4078c0
  406a87:	mov    rbx,rax
  406a8a:	call   QWORD PTR [rip+0x324ec]        # 0x438f7c
  406a90:	lea    rdx,[rip+0x2087f]        # 0x427316
  406a97:	lea    rcx,[rax+0x60]
  406a9b:	mov    r8,rbx
  406a9e:	call   0x405a30
  406aa3:	jmp    0x406948
  406aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ab0:	mov    rdx,QWORD PTR [rsp+0x30]
  406ab5:	lea    rcx,[rip+0x20b86]        # 0x427642
  406abc:	call   0x4059b0
  406ac1:	mov    rax,QWORD PTR [rip+0x26b28]        # 0x42d5f0
  406ac8:	mov    rcx,QWORD PTR [rsp+0x30]
  406acd:	call   QWORD PTR [rax]
  406acf:	jmp    0x4069ae
  406ad4:	xchg   ax,ax
  406ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ae0:	push   r15
  406ae2:	push   r14
  406ae4:	push   r13
  406ae6:	push   r12
  406ae8:	push   rbp
  406ae9:	push   rdi
  406aea:	push   rsi
  406aeb:	push   rbx
  406aec:	sub    rsp,0x78
  406af0:	test   rcx,rcx
  406af3:	mov    rbx,rcx
  406af6:	mov    ebp,edx
  406af8:	je     0x406e85
  406afe:	mov    rdx,rcx
  406b01:	lea    rcx,[rip+0x20b4e]        # 0x427656
  406b08:	call   0x4059b0
  406b0d:	lea    rcx,[rsp+0x60]
  406b12:	lea    r8,[rsp+0x58]
  406b17:	mov    rdx,rbx
  406b1a:	call   0x4079e0
  406b1f:	test   eax,eax
  406b21:	js     0x407363
  406b27:	xor    ebx,ebx
  406b29:	lea    rdi,[rsp+0x50]
  406b2e:	lea    r12,[rsp+0x40]
  406b33:	lea    rbp,[rsp+0x54]
  406b38:	jmp    0x406b9a
  406b3a:	nop    WORD PTR [rax+rax*1+0x0]
  406b40:	cmp    eax,0xffffffeb
  406b43:	je     0x406b96
  406b45:	mov    ecx,DWORD PTR [rsp+0x50]
  406b49:	xor    r9d,r9d
  406b4c:	xor    r8d,r8d
  406b4f:	mov    QWORD PTR [rsp+0x28],rbp
  406b54:	mov    QWORD PTR [rsp+0x20],0x0
  406b5d:	mov    rdx,r12
  406b60:	call   0x407b90
  406b65:	test   rax,rax
  406b68:	mov    rsi,rax
  406b6b:	je     0x406b96
  406b6d:	mov    ecx,DWORD PTR [rsp+0x54]
  406b71:	call   0x4079c0
  406b76:	movzx  r9d,BYTE PTR [rsp+0x41]
  406b7c:	movzx  r8d,BYTE PTR [rsp+0x40]
  406b82:	lea    rcx,[rip+0x20af8]        # 0x427681
  406b89:	mov    QWORD PTR [rsp+0x20],rax
  406b8e:	mov    rdx,rsi
  406b91:	call   0x4059b0
  406b96:	add    rbx,0x1
  406b9a:	mov    rcx,QWORD PTR [rsp+0x60]
  406b9f:	mov    r8,rdi
  406ba2:	mov    edx,ebx
  406ba4:	call   0x4079e8
  406ba9:	cmp    eax,0xffffffc8
  406bac:	jne    0x406b40
  406bae:	lea    rcx,[rip+0x209ec]        # 0x4275a1
  406bb5:	lea    rdi,[rsp+0x68]
  406bba:	call   0x4059b0
  406bbf:	mov    rcx,QWORD PTR [rsp+0x60]
  406bc4:	mov    rdx,rdi
  406bc7:	call   0x407a00
  406bcc:	lea    rcx,[rip+0x20ac7]        # 0x42769a
  406bd3:	mov    esi,eax
  406bd5:	call   0x4059b0
  406bda:	test   esi,esi
  406bdc:	je     0x406e74
  406be2:	xor    ebx,ebx
  406be4:	cmp    rbx,rsi
  406be7:	jae    0x406c23
  406be9:	mov    rax,QWORD PTR [rsp+0x68]
  406bee:	mov    ecx,DWORD PTR [rax+rbx*4]
  406bf1:	add    rbx,0x1
  406bf5:	call   0x407bd0
  406bfa:	lea    rcx,[rip+0x20ab3]        # 0x4276b4
  406c01:	mov    rdx,rax
  406c04:	call   0x4059b0
  406c09:	cmp    rbx,rsi
  406c0c:	je     0x406dd1
  406c12:	lea    rcx,[rip+0x20aa4]        # 0x4276bd
  406c19:	call   0x4059b0
  406c1e:	cmp    rbx,rsi
  406c21:	jb     0x406be9
  406c23:	mov    rcx,QWORD PTR [rsp+0x60]
  406c28:	mov    rdx,rdi
  406c2b:	call   0x4079d8
  406c30:	lea    rcx,[rip+0x20a89]        # 0x4276c0
  406c37:	mov    esi,eax
  406c39:	call   0x4059b0
  406c3e:	test   esi,esi
  406c40:	je     0x406e63
  406c46:	xor    ebx,ebx
  406c48:	cmp    rbx,rsi
  406c4b:	jae    0x406c87
  406c4d:	mov    rax,QWORD PTR [rsp+0x68]
  406c52:	mov    ecx,DWORD PTR [rax+rbx*4]
  406c55:	add    rbx,0x1
  406c59:	call   0x4079c0
  406c5e:	lea    rcx,[rip+0x20a67]        # 0x4276cc
  406c65:	mov    rdx,rax
  406c68:	call   0x4059b0
  406c6d:	cmp    rsi,rbx
  406c70:	je     0x406de2
  406c76:	lea    rcx,[rip+0x20a40]        # 0x4276bd
  406c7d:	call   0x4059b0
  406c82:	cmp    rbx,rsi
  406c85:	jb     0x406c4d
  406c87:	mov    rcx,QWORD PTR [rsp+0x60]
  406c8c:	mov    rdx,rdi
  406c8f:	call   0x4079f8
  406c94:	lea    rcx,[rip+0x20a39]        # 0x4276d4
  406c9b:	mov    esi,eax
  406c9d:	call   0x4059b0
  406ca2:	test   esi,esi
  406ca4:	je     0x406e52
  406caa:	xor    ebx,ebx
  406cac:	cmp    rbx,rsi
  406caf:	jae    0x406ceb
  406cb1:	mov    rax,QWORD PTR [rsp+0x68]
  406cb6:	mov    ecx,DWORD PTR [rax+rbx*4]
  406cb9:	add    rbx,0x1
  406cbd:	call   0x407b80
  406cc2:	lea    rcx,[rip+0x20a19]        # 0x4276e2
  406cc9:	mov    rdx,rax
  406ccc:	call   0x4059b0
  406cd1:	cmp    rsi,rbx
  406cd4:	je     0x406e00
  406cda:	lea    rcx,[rip+0x209dc]        # 0x4276bd
  406ce1:	call   0x4059b0
  406ce6:	cmp    rbx,rsi
  406ce9:	jb     0x406cb1
  406ceb:	mov    rcx,QWORD PTR [rsp+0x60]
  406cf0:	mov    rdx,rdi
  406cf3:	call   0x4079f0
  406cf8:	lea    rcx,[rip+0x209eb]        # 0x4276ea
  406cff:	mov    esi,eax
  406d01:	call   0x4059b0
  406d06:	test   esi,esi
  406d08:	je     0x406e41
  406d0e:	xor    ebx,ebx
  406d10:	cmp    rbx,rsi
  406d13:	jae    0x406d4f
  406d15:	mov    rax,QWORD PTR [rsp+0x68]
  406d1a:	mov    ecx,DWORD PTR [rax+rbx*4]
  406d1d:	add    rbx,0x1
  406d21:	call   0x407af8
  406d26:	lea    rcx,[rip+0x209cf]        # 0x4276fc
  406d2d:	mov    rdx,rax
  406d30:	call   0x4059b0
  406d35:	cmp    rsi,rbx
  406d38:	je     0x406e14
  406d3e:	lea    rcx,[rip+0x20978]        # 0x4276bd
  406d45:	call   0x4059b0
  406d4a:	cmp    rbx,rsi
  406d4d:	jb     0x406d15
  406d4f:	mov    rcx,QWORD PTR [rsp+0x60]
  406d54:	mov    rdx,rdi
  406d57:	call   0x4079c8
  406d5c:	lea    rcx,[rip+0x209a2]        # 0x427705
  406d63:	mov    esi,eax
  406d65:	call   0x4059b0
  406d6a:	test   esi,esi
  406d6c:	je     0x406e30
  406d72:	xor    ebx,ebx
  406d74:	cmp    rbx,rsi
  406d77:	jae    0x406daf
  406d79:	mov    rax,QWORD PTR [rsp+0x68]
  406d7e:	mov    ecx,DWORD PTR [rax+rbx*4]
  406d81:	add    rbx,0x1
  406d85:	call   0x4078f8
  406d8a:	lea    rcx,[rip+0x20984]        # 0x427715
  406d91:	mov    rdx,rax
  406d94:	call   0x4059b0
  406d99:	cmp    rsi,rbx
  406d9c:	je     0x406dc0
  406d9e:	lea    rcx,[rip+0x20918]        # 0x4276bd
  406da5:	call   0x4059b0
  406daa:	cmp    rbx,rsi
  406dad:	jb     0x406d79
  406daf:	add    rsp,0x78
  406db3:	pop    rbx
  406db4:	pop    rsi
  406db5:	pop    rdi
  406db6:	pop    rbp
  406db7:	pop    r12
  406db9:	pop    r13
  406dbb:	pop    r14
  406dbd:	pop    r15
  406dbf:	ret    
  406dc0:	lea    rcx,[rip+0x207da]        # 0x4275a1
  406dc7:	mov    rbx,rsi
  406dca:	call   0x4059b0
  406dcf:	jmp    0x406d74
  406dd1:	lea    rcx,[rip+0x207c9]        # 0x4275a1
  406dd8:	call   0x4059b0
  406ddd:	jmp    0x406be4
  406de2:	lea    rcx,[rip+0x207b8]        # 0x4275a1
  406de9:	mov    rbx,rsi
  406dec:	call   0x4059b0
  406df1:	jmp    0x406c48
  406df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e00:	lea    rcx,[rip+0x2079a]        # 0x4275a1
  406e07:	mov    rbx,rsi
  406e0a:	call   0x4059b0
  406e0f:	jmp    0x406cac
  406e14:	lea    rcx,[rip+0x20786]        # 0x4275a1
  406e1b:	mov    rbx,rsi
  406e1e:	call   0x4059b0
  406e23:	jmp    0x406d10
  406e28:	nop    DWORD PTR [rax+rax*1+0x0]
  406e30:	lea    rcx,[rip+0x20877]        # 0x4276ae
  406e37:	call   0x4059b0
  406e3c:	jmp    0x406d72
  406e41:	lea    rcx,[rip+0x20866]        # 0x4276ae
  406e48:	call   0x4059b0
  406e4d:	jmp    0x406d0e
  406e52:	lea    rcx,[rip+0x20855]        # 0x4276ae
  406e59:	call   0x4059b0
  406e5e:	jmp    0x406caa
  406e63:	lea    rcx,[rip+0x20844]        # 0x4276ae
  406e6a:	call   0x4059b0
  406e6f:	jmp    0x406c46
  406e74:	lea    rcx,[rip+0x20833]        # 0x4276ae
  406e7b:	call   0x4059b0
  406e80:	jmp    0x406be2
  406e85:	lea    rcx,[rip+0x20891]        # 0x42771d
  406e8c:	xor    esi,esi
  406e8e:	lea    r15,[rsp+0x58]
  406e93:	lea    r14,[rsp+0x60]
  406e98:	lea    r13,[rsp+0x40]
  406e9d:	lea    r12,[rsp+0x54]
  406ea2:	call   0x4059b0
  406ea7:	lea    rdi,[rsp+0x68]
  406eac:	jmp    0x406eb4
  406eae:	xchg   ax,ax
  406eb0:	add    rsi,0x1
  406eb4:	mov    QWORD PTR [rsp+0x28],r12
  406eb9:	mov    QWORD PTR [rsp+0x20],rdi
  406ebe:	mov    r9,r14
  406ec1:	mov    r8,r15
  406ec4:	mov    rdx,r13
  406ec7:	mov    rcx,rsi
  406eca:	call   0x407b90
  406ecf:	test   rax,rax
  406ed2:	mov    rbx,rax
  406ed5:	je     0x406f43
  406ed7:	mov    ecx,DWORD PTR [rsp+0x54]
  406edb:	call   0x4079c0
  406ee0:	movzx  r9d,BYTE PTR [rsp+0x41]
  406ee6:	movzx  r8d,BYTE PTR [rsp+0x40]
  406eec:	lea    rcx,[rip+0x2078e]        # 0x427681
  406ef3:	mov    QWORD PTR [rsp+0x20],rax
  406ef8:	mov    rdx,rbx
  406efb:	call   0x4059b0
  406f00:	test   ebp,ebp
  406f02:	je     0x406eb0
  406f04:	mov    ecx,DWORD PTR [rsp+0x68]
  406f08:	call   0x407a68
  406f0d:	mov    ecx,DWORD PTR [rsp+0x60]
  406f11:	mov    QWORD PTR [rsp+0x38],rax
  406f16:	call   0x407ba0
  406f1b:	mov    ecx,DWORD PTR [rsp+0x58]
  406f1f:	mov    rbx,rax
  406f22:	call   0x407a80
  406f27:	mov    r9,QWORD PTR [rsp+0x38]
  406f2c:	lea    rcx,[rip+0x207fd]        # 0x427730
  406f33:	mov    r8,rbx
  406f36:	mov    rdx,rax
  406f39:	call   0x4059b0
  406f3e:	jmp    0x406eb0
  406f43:	lea    rcx,[rip+0x20657]        # 0x4275a1
  406f4a:	call   0x4059b0
  406f4f:	call   0x407bc8
  406f54:	lea    rcx,[rip+0x2073f]        # 0x42769a
  406f5b:	mov    rbx,rax
  406f5e:	call   0x4059b0
  406f63:	mov    ecx,DWORD PTR [rbx]
  406f65:	test   ecx,ecx
  406f67:	jne    0x406f86
  406f69:	jmp    0x406fb7
  406f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  406f70:	lea    rcx,[rip+0x20746]        # 0x4276bd
  406f77:	add    rbx,0x4
  406f7b:	call   0x4059b0
  406f80:	mov    ecx,DWORD PTR [rbx]
  406f82:	test   ecx,ecx
  406f84:	je     0x406fb7
  406f86:	call   0x407bd0
  406f8b:	lea    rcx,[rip+0x20722]        # 0x4276b4
  406f92:	mov    rdx,rax
  406f95:	call   0x4059b0
  406f9a:	mov    ebp,DWORD PTR [rbx+0x4]
  406f9d:	test   ebp,ebp
  406f9f:	jne    0x406f70
  406fa1:	lea    rcx,[rip+0x205f9]        # 0x4275a1
  406fa8:	add    rbx,0x4
  406fac:	call   0x4059b0
  406fb1:	mov    ecx,DWORD PTR [rbx]
  406fb3:	test   ecx,ecx
  406fb5:	jne    0x406f86
  406fb7:	call   0x4079b0
  406fbc:	lea    rcx,[rip+0x206fd]        # 0x4276c0
  406fc3:	mov    rbx,rax
  406fc6:	call   0x4059b0
  406fcb:	mov    ecx,DWORD PTR [rbx]
  406fcd:	test   ecx,ecx
  406fcf:	jne    0x406fe9
  406fd1:	jmp    0x40701a
  406fd3:	lea    rcx,[rip+0x206e3]        # 0x4276bd
  406fda:	add    rbx,0x4
  406fde:	call   0x4059b0
  406fe3:	mov    ecx,DWORD PTR [rbx]
  406fe5:	test   ecx,ecx
  406fe7:	je     0x40701a
  406fe9:	call   0x4079c0
  406fee:	lea    rcx,[rip+0x206d7]        # 0x4276cc
  406ff5:	mov    rdx,rax
  406ff8:	call   0x4059b0
  406ffd:	mov    edi,DWORD PTR [rbx+0x4]
  407000:	test   edi,edi
  407002:	jne    0x406fd3
  407004:	lea    rcx,[rip+0x20596]        # 0x4275a1
  40700b:	add    rbx,0x4
  40700f:	call   0x4059b0
  407014:	mov    ecx,DWORD PTR [rbx]
  407016:	test   ecx,ecx
  407018:	jne    0x406fe9
  40701a:	call   0x407b98
  40701f:	lea    rcx,[rip+0x20733]        # 0x427759
  407026:	mov    rbx,rax
  407029:	call   0x4059b0
  40702e:	mov    ecx,DWORD PTR [rbx]
  407030:	test   ecx,ecx
  407032:	jne    0x407056
  407034:	jmp    0x407087
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	lea    rcx,[rip+0x20676]        # 0x4276bd
  407047:	add    rbx,0x4
  40704b:	call   0x4059b0
  407050:	mov    ecx,DWORD PTR [rbx]
  407052:	test   ecx,ecx
  407054:	je     0x407087
  407056:	call   0x407ba0
  40705b:	lea    rcx,[rip+0x20708]        # 0x42776a
  407062:	mov    rdx,rax
  407065:	call   0x4059b0
  40706a:	mov    esi,DWORD PTR [rbx+0x4]
  40706d:	test   esi,esi
  40706f:	jne    0x407040
  407071:	lea    rcx,[rip+0x20529]        # 0x4275a1
  407078:	add    rbx,0x4
  40707c:	call   0x4059b0
  407081:	mov    ecx,DWORD PTR [rbx]
  407083:	test   ecx,ecx
  407085:	jne    0x407056
  407087:	call   0x407a60
  40708c:	lea    rcx,[rip+0x206d0]        # 0x427763
  407093:	mov    rbx,rax
  407096:	call   0x4059b0
  40709b:	mov    ecx,DWORD PTR [rbx]
  40709d:	test   ecx,ecx
  40709f:	jne    0x4070b9
  4070a1:	jmp    0x4070ec
  4070a3:	lea    rcx,[rip+0x20613]        # 0x4276bd
  4070aa:	add    rbx,0x4
  4070ae:	call   0x4059b0
  4070b3:	mov    ecx,DWORD PTR [rbx]
  4070b5:	test   ecx,ecx
  4070b7:	je     0x4070ec
  4070b9:	call   0x407a68
  4070be:	lea    rcx,[rip+0x206a5]        # 0x42776a
  4070c5:	mov    rdx,rax
  4070c8:	call   0x4059b0
  4070cd:	mov    r11d,DWORD PTR [rbx+0x4]
  4070d1:	test   r11d,r11d
  4070d4:	jne    0x4070a3
  4070d6:	lea    rcx,[rip+0x204c4]        # 0x4275a1
  4070dd:	add    rbx,0x4
  4070e1:	call   0x4059b0
  4070e6:	mov    ecx,DWORD PTR [rbx]
  4070e8:	test   ecx,ecx
  4070ea:	jne    0x4070b9
  4070ec:	call   0x407b08
  4070f1:	lea    rcx,[rip+0x20675]        # 0x42776d
  4070f8:	mov    rbx,rax
  4070fb:	call   0x4059b0
  407100:	mov    ecx,DWORD PTR [rbx]
  407102:	test   ecx,ecx
  407104:	jne    0x407126
  407106:	jmp    0x407159
  407108:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	lea    rcx,[rip+0x205a6]        # 0x4276bd
  407117:	add    rbx,0x4
  40711b:	call   0x4059b0
  407120:	mov    ecx,DWORD PTR [rbx]
  407122:	test   ecx,ecx
  407124:	je     0x407159
  407126:	call   0x407b10
  40712b:	lea    rcx,[rip+0x20638]        # 0x42776a
  407132:	mov    rdx,rax
  407135:	call   0x4059b0
  40713a:	mov    r10d,DWORD PTR [rbx+0x4]
  40713e:	test   r10d,r10d
  407141:	jne    0x407110
  407143:	lea    rcx,[rip+0x20457]        # 0x4275a1
  40714a:	add    rbx,0x4
  40714e:	call   0x4059b0
  407153:	mov    ecx,DWORD PTR [rbx]
  407155:	test   ecx,ecx
  407157:	jne    0x407126
  407159:	call   0x407a78
  40715e:	lea    rcx,[rip+0x20612]        # 0x427777
  407165:	mov    rbx,rax
  407168:	call   0x4059b0
  40716d:	mov    ecx,DWORD PTR [rbx]
  40716f:	test   ecx,ecx
  407171:	jne    0x40718b
  407173:	jmp    0x4071be
  407175:	lea    rcx,[rip+0x20541]        # 0x4276bd
  40717c:	add    rbx,0x4
  407180:	call   0x4059b0
  407185:	mov    ecx,DWORD PTR [rbx]
  407187:	test   ecx,ecx
  407189:	je     0x4071be
  40718b:	call   0x407a80
  407190:	lea    rcx,[rip+0x205d3]        # 0x42776a
  407197:	mov    rdx,rax
  40719a:	call   0x4059b0
  40719f:	mov    r9d,DWORD PTR [rbx+0x4]
  4071a3:	test   r9d,r9d
  4071a6:	jne    0x407175
  4071a8:	lea    rcx,[rip+0x203f2]        # 0x4275a1
  4071af:	add    rbx,0x4
  4071b3:	call   0x4059b0
  4071b8:	mov    ecx,DWORD PTR [rbx]
  4071ba:	test   ecx,ecx
  4071bc:	jne    0x40718b
  4071be:	call   0x407b78
  4071c3:	lea    rcx,[rip+0x2050a]        # 0x4276d4
  4071ca:	mov    rbx,rax
  4071cd:	call   0x4059b0
  4071d2:	mov    ecx,DWORD PTR [rbx]
  4071d4:	test   ecx,ecx
  4071d6:	jne    0x4071f6
  4071d8:	jmp    0x407229
  4071da:	nop    WORD PTR [rax+rax*1+0x0]
  4071e0:	lea    rcx,[rip+0x204d6]        # 0x4276bd
  4071e7:	add    rbx,0x4
  4071eb:	call   0x4059b0
  4071f0:	mov    ecx,DWORD PTR [rbx]
  4071f2:	test   ecx,ecx
  4071f4:	je     0x407229
  4071f6:	call   0x407b80
  4071fb:	lea    rcx,[rip+0x204e0]        # 0x4276e2
  407202:	mov    rdx,rax
  407205:	call   0x4059b0
  40720a:	mov    r8d,DWORD PTR [rbx+0x4]
  40720e:	test   r8d,r8d
  407211:	jne    0x4071e0
  407213:	lea    rcx,[rip+0x20387]        # 0x4275a1
  40721a:	add    rbx,0x4
  40721e:	call   0x4059b0
  407223:	mov    ecx,DWORD PTR [rbx]
  407225:	test   ecx,ecx
  407227:	jne    0x4071f6
  407229:	call   0x407ae8
  40722e:	lea    rcx,[rip+0x204b5]        # 0x4276ea
  407235:	mov    rbx,rax
  407238:	call   0x4059b0
  40723d:	mov    ecx,DWORD PTR [rbx]
  40723f:	test   ecx,ecx
  407241:	jne    0x40725b
  407243:	jmp    0x40728c
  407245:	lea    rcx,[rip+0x20471]        # 0x4276bd
  40724c:	add    rbx,0x4
  407250:	call   0x4059b0
  407255:	mov    ecx,DWORD PTR [rbx]
  407257:	test   ecx,ecx
  407259:	je     0x40728c
  40725b:	call   0x407af8
  407260:	lea    rcx,[rip+0x20495]        # 0x4276fc
  407267:	mov    rdx,rax
  40726a:	call   0x4059b0
  40726f:	mov    ecx,DWORD PTR [rbx+0x4]
  407272:	test   ecx,ecx
  407274:	jne    0x407245
  407276:	lea    rcx,[rip+0x20324]        # 0x4275a1
  40727d:	add    rbx,0x4
  407281:	call   0x4059b0
  407286:	mov    ecx,DWORD PTR [rbx]
  407288:	test   ecx,ecx
  40728a:	jne    0x40725b
  40728c:	call   0x407a08
  407291:	lea    rcx,[rip+0x204f9]        # 0x427791
  407298:	mov    rbx,rax
  40729b:	call   0x4059b0
  4072a0:	mov    ecx,DWORD PTR [rbx]
  4072a2:	test   ecx,ecx
  4072a4:	jne    0x4072c6
  4072a6:	jmp    0x4072f7
  4072a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	lea    rcx,[rip+0x20406]        # 0x4276bd
  4072b7:	add    rbx,0x4
  4072bb:	call   0x4059b0
  4072c0:	mov    ecx,DWORD PTR [rbx]
  4072c2:	test   ecx,ecx
  4072c4:	je     0x4072f7
  4072c6:	call   0x407a10
  4072cb:	lea    rcx,[rip+0x20498]        # 0x42776a
  4072d2:	mov    rdx,rax
  4072d5:	call   0x4059b0
  4072da:	mov    edx,DWORD PTR [rbx+0x4]
  4072dd:	test   edx,edx
  4072df:	jne    0x4072b0
  4072e1:	lea    rcx,[rip+0x202b9]        # 0x4275a1
  4072e8:	add    rbx,0x4
  4072ec:	call   0x4059b0
  4072f1:	mov    ecx,DWORD PTR [rbx]
  4072f3:	test   ecx,ecx
  4072f5:	jne    0x4072c6
  4072f7:	call   0x4078f0
  4072fc:	lea    rcx,[rip+0x20402]        # 0x427705
  407303:	mov    rbx,rax
  407306:	call   0x4059b0
  40730b:	mov    ecx,DWORD PTR [rbx]
  40730d:	test   ecx,ecx
  40730f:	jne    0x40733a
  407311:	jmp    0x406daf
  407316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407320:	lea    rcx,[rip+0x20396]        # 0x4276bd
  407327:	call   0x4059b0
  40732c:	add    rbx,0x4
  407330:	mov    ecx,DWORD PTR [rbx]
  407332:	test   ecx,ecx
  407334:	je     0x406daf
  40733a:	call   0x4078f8
  40733f:	lea    rcx,[rip+0x203cf]        # 0x427715
  407346:	mov    rdx,rax
  407349:	call   0x4059b0
  40734e:	mov    eax,DWORD PTR [rbx+0x4]
  407351:	test   eax,eax
  407353:	jne    0x407320
  407355:	lea    rcx,[rip+0x20245]        # 0x4275a1
  40735c:	call   0x4059b0
  407361:	jmp    0x40732c
  407363:	mov    rbx,QWORD PTR [rsp+0x58]
  407368:	call   QWORD PTR [rip+0x31c0e]        # 0x438f7c
  40736e:	lea    rdx,[rip+0x202f7]        # 0x42766c
  407375:	lea    rcx,[rax+0x60]
  407379:	mov    r8,rbx
  40737c:	call   0x405a30
  407381:	mov    ecx,0x1
  407386:	call   0x421e98
  40738b:	nop
  40738c:	nop    DWORD PTR [rax+0x0]
  407390:	push   r12
  407392:	push   rbp
  407393:	push   rdi
  407394:	push   rsi
  407395:	push   rbx
  407396:	sub    rsp,0x20
  40739a:	mov    rbx,rdx
  40739d:	mov    r12,rcx
  4073a0:	mov    edx,0x80
  4073a5:	mov    rcx,rbx
  4073a8:	call   0x41ce60
  4073ad:	mov    rbp,QWORD PTR [rip+0x31bc8]        # 0x438f7c
  4073b4:	mov    rsi,rax
  4073b7:	call   rbp
  4073b9:	lea    rdx,[rip+0x203e8]        # 0x4277a8
  4073c0:	lea    rcx,[rax+0x60]
  4073c4:	mov    r9,rbx
  4073c7:	mov    r8d,esi
  4073ca:	call   0x405a30
  4073cf:	cmp    rsi,0x2
  4073d3:	jbe    0x407450
  4073d5:	movzx  eax,BYTE PTR [rbx]
  4073d8:	cmp    al,BYTE PTR [rbx+0x1]
  4073db:	jne    0x407450
  4073dd:	cmp    al,0x2a
  4073df:	jne    0x407450
  4073e1:	lea    rdi,[rip+0x203e5]        # 0x4277cd
  4073e8:	mov    ecx,0xf
  4073ed:	mov    rsi,rbx
  4073f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4073f2:	je     0x407460
  4073f4:	lea    rdi,[rip+0x20406]        # 0x427801
  4073fb:	mov    rsi,rbx
  4073fe:	mov    ecx,0xd
  407403:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407405:	seta   dl
  407408:	setb   al
  40740b:	xor    ebx,ebx
  40740d:	cmp    dl,al
  40740f:	jne    0x407452
  407411:	mov    r9d,0x1
  407417:	mov    r8d,0x5
  40741d:	mov    edx,0x12c
  407422:	mov    rcx,r12
  407425:	mov    bl,0x2
  407427:	call   0x407aa0
  40742c:	test   eax,eax
  40742e:	jns    0x407452
  407430:	cmp    eax,0xffffffce
  407433:	jne    0x407481
  407435:	call   rbp
  407437:	lea    rdx,[rip+0x203d1]        # 0x42780f
  40743e:	lea    rcx,[rax+0x60]
  407442:	call   0x405a30
  407447:	jmp    0x407452
  407449:	nop    DWORD PTR [rax+0x0]
  407450:	xor    ebx,ebx
  407452:	mov    eax,ebx
  407454:	add    rsp,0x20
  407458:	pop    rbx
  407459:	pop    rsi
  40745a:	pop    rdi
  40745b:	pop    rbp
  40745c:	pop    r12
  40745e:	ret    
  40745f:	nop
  407460:	call   rbp
  407462:	lea    rdx,[rip+0x20377]        # 0x4277e0
  407469:	lea    rcx,[rax+0x60]
  40746d:	mov    ebx,0x1
  407472:	call   0x405a30
  407477:	mov    rcx,r12
  40747a:	call   0x407968
  40747f:	jmp    0x407452
  407481:	mov    ecx,eax
  407483:	call   0x4078c0
  407488:	mov    rbx,rax
  40748b:	call   rbp
  40748d:	lea    rdx,[rip+0x20399]        # 0x42782d
  407494:	lea    rcx,[rax+0x60]
  407498:	mov    r8,rbx
  40749b:	call   0x405a30
  4074a0:	mov    ecx,0x1
  4074a5:	call   0x421e98
  4074aa:	nop
  4074ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	push   r15
  4074b2:	push   r14
  4074b4:	push   r13
  4074b6:	push   r12
  4074b8:	push   rbp
  4074b9:	push   rdi
  4074ba:	push   rsi
  4074bb:	push   rbx
  4074bc:	sub    rsp,0x28
  4074c0:	mov    ebx,DWORD PTR [rsp+0x90]
  4074c7:	lea    rdx,[rip+0x20388]        # 0x427856
  4074ce:	lea    rbp,[rip+0x20362]        # 0x427837
  4074d5:	lea    r12,[rip+0x20369]        # 0x427845
  4074dc:	mov    r15,rcx
  4074df:	mov    rdi,r8
  4074e2:	mov    r14,r9
  4074e5:	mov    r13,QWORD PTR [rsp+0x98]
  4074ed:	mov    rsi,QWORD PTR [rsp+0xa0]
  4074f5:	mov    eax,ebx
  4074f7:	and    eax,0x2
  4074fa:	lea    rax,[rip+0x20360]        # 0x427861
  407501:	cmove  rbp,rdx
  407505:	cmove  r12,rax
  407509:	test   bl,0x4
  40750c:	mov    eax,0x5
  407511:	jne    0x4076f4
  407517:	test   bl,0x8
  40751a:	jne    0x407685
  407520:	and    ebx,0x20
  407523:	jne    0x40769a
  407529:	test   eax,eax
  40752b:	je     0x40754e
  40752d:	test   rdi,rdi
  407530:	mov    rcx,QWORD PTR [rip+0x2d269]        # 0x4347a0
  407537:	je     0x40754e
  407539:	test   rcx,rcx
  40753c:	je     0x40754e
  40753e:	mov    rdx,rdi
  407541:	call   0x421db8
  407546:	test   eax,eax
  407548:	je     0x407610
  40754e:	lea    rcx,[rip+0x20395]        # 0x4278ea
  407555:	mov    r8,rdi
  407558:	mov    rdx,r14
  40755b:	call   0x4059b0
  407560:	lea    rcx,[rip+0x2039d]        # 0x427904
  407567:	mov    rdx,r12
  40756a:	call   0x4059b0
  40756f:	mov    rcx,rbp
  407572:	call   0x421e30
  407577:	test   rax,rax
  40757a:	mov    rbp,rax
  40757d:	je     0x407740
  407583:	movzx  eax,BYTE PTR [rbp+0x0]
  407587:	test   al,al
  407589:	je     0x407800
  40758f:	cmp    al,0xa
  407591:	je     0x407800
  407597:	mov    rcx,rbp
  40759a:	call   0x421d98
  40759f:	lea    rdx,[rsi-0x1]
  4075a3:	sub    esi,0x1
  4075a6:	mov    rcx,r13
  4075a9:	cmp    rdx,rax
  4075ac:	mov    rdx,rbp
  4075af:	cmovae esi,eax
  4075b2:	mov    ebx,esi
  4075b4:	mov    r8,rbx
  4075b7:	call   0x421e08
  4075bc:	cmp    esi,0x1f
  4075bf:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  4075c5:	jbe    0x407720
  4075cb:	mov    BYTE PTR [rip+0x2d1ae],0x0        # 0x434780
  4075d2:	mov    rcx,QWORD PTR [rip+0x2d1c7]        # 0x4347a0
  4075d9:	call   0x421e50
  4075de:	test   rdi,rdi
  4075e1:	je     0x407710
  4075e7:	mov    rcx,rdi
  4075ea:	call   0x41a220
  4075ef:	mov    QWORD PTR [rip+0x2d1aa],rax        # 0x4347a0
  4075f6:	xor    eax,eax
  4075f8:	add    rsp,0x28
  4075fc:	pop    rbx
  4075fd:	pop    rsi
  4075fe:	pop    rdi
  4075ff:	pop    rbp
  407600:	pop    r12
  407602:	pop    r13
  407604:	pop    r14
  407606:	pop    r15
  407608:	ret    
  407609:	nop    DWORD PTR [rax+0x0]
  407610:	lea    r8,[rip+0x2d169]        # 0x434780
  407617:	mov    rdx,r8
  40761a:	mov    ecx,DWORD PTR [rdx]
  40761c:	add    rdx,0x4
  407620:	lea    eax,[rcx-0x1010101]
  407626:	not    ecx
  407628:	and    eax,ecx
  40762a:	and    eax,0x80808080
  40762f:	je     0x40761a
  407631:	mov    ecx,eax
  407633:	shr    ecx,0x10
  407636:	test   eax,0x8080
  40763b:	cmove  eax,ecx
  40763e:	lea    rcx,[rdx+0x2]
  407642:	cmove  rdx,rcx
  407646:	add    al,al
  407648:	sbb    rdx,0x3
  40764c:	sub    rdx,r8
  40764f:	cmp    rdx,rsi
  407652:	jae    0x40783a
  407658:	call   QWORD PTR [rip+0x3191e]        # 0x438f7c
  40765e:	lea    rdx,[rip+0x202cb]        # 0x427930
  407665:	lea    rcx,[rax+0x60]
  407669:	mov    r8,r14
  40766c:	call   0x405a30
  407671:	lea    rdx,[rip+0x2d108]        # 0x434780
  407678:	mov    rcx,r13
  40767b:	call   0x421db0
  407680:	jmp    0x4075f6
  407685:	lea    rcx,[rip+0x2020c]        # 0x427898
  40768c:	call   0x4059b0
  407691:	and    ebx,0x20
  407694:	je     0x40754e
  40769a:	lea    rcx,[rip+0x20227]        # 0x4278c8
  4076a1:	call   0x4059b0
  4076a6:	lea    rcx,[rip+0x2023d]        # 0x4278ea
  4076ad:	mov    r8,rdi
  4076b0:	mov    rdx,r14
  4076b3:	call   0x4059b0
  4076b8:	lea    rcx,[rip+0x20245]        # 0x427904
  4076bf:	mov    rdx,r12
  4076c2:	call   0x4059b0
  4076c7:	mov    rcx,rbp
  4076ca:	call   0x421e30
  4076cf:	test   rax,rax
  4076d2:	je     0x407742
  4076d4:	call   QWORD PTR [rip+0x318a2]        # 0x438f7c
  4076da:	lea    rdx,[rip+0x20287]        # 0x427968
  4076e1:	lea    rcx,[rax+0x60]
  4076e5:	call   0x405a30
  4076ea:	mov    ecx,0x1
  4076ef:	call   0x421e98
  4076f4:	lea    rcx,[rip+0x2016d]        # 0x427868
  4076fb:	call   0x4059b0
  407700:	xor    eax,eax
  407702:	jmp    0x407517
  407707:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	mov    QWORD PTR [rip+0x2d085],0x0        # 0x4347a0
  40771b:	jmp    0x4075f6
  407720:	lea    r9,[rip+0x2d059]        # 0x434780
  407727:	mov    r8,rbx
  40772a:	mov    rdx,r13
  40772d:	mov    rcx,r9
  407730:	call   0x421e08
  407735:	mov    BYTE PTR [rax+rbx*1],0x0
  407739:	jmp    0x4075d2
  40773e:	xchg   ax,ax
  407740:	xor    ebx,ebx
  407742:	lea    rcx,[rip+0x2010d]        # 0x427856
  407749:	call   0x421e30
  40774e:	test   rax,rax
  407751:	mov    rbp,rax
  407754:	jne    0x4077b1
  407756:	test   r15,r15
  407759:	je     0x4077d0
  40775b:	mov    eax,DWORD PTR [r15+0xa0]
  407762:	test   eax,eax
  407764:	jne    0x4077c0
  407766:	lea    rcx,[rip+0x2029a]        # 0x427a07
  40776d:	call   0x417d50
  407772:	test   rax,rax
  407775:	mov    rbp,rax
  407778:	jne    0x407583
  40777e:	xchg   ax,ax
  407780:	mov    rbx,QWORD PTR [rip+0x317f5]        # 0x438f7c
  407787:	call   rbx
  407789:	lea    rdx,[rip+0x201c4]        # 0x427954
  407790:	lea    rcx,[rax+0x60]
  407794:	call   0x405a30
  407799:	cmp    DWORD PTR [r15+0xa0],0x0
  4077a1:	jne    0x407823
  4077a7:	mov    ecx,0x1
  4077ac:	call   0x421e98
  4077b1:	test   ebx,ebx
  4077b3:	je     0x407583
  4077b9:	jmp    0x4076d4
  4077be:	xchg   ax,ax
  4077c0:	test   ebx,ebx
  4077c2:	je     0x407780
  4077c4:	jmp    0x4076d4
  4077c9:	nop    DWORD PTR [rax+0x0]
  4077d0:	lea    rcx,[rip+0x20230]        # 0x427a07
  4077d7:	call   0x417d50
  4077dc:	test   rax,rax
  4077df:	mov    rbp,rax
  4077e2:	jne    0x407583
  4077e8:	call   QWORD PTR [rip+0x3178e]        # 0x438f7c
  4077ee:	lea    rdx,[rip+0x2015f]        # 0x427954
  4077f5:	lea    rcx,[rax+0x60]
  4077f9:	call   0x405a30
  4077fe:	jmp    0x4077a7
  407800:	mov    rbx,QWORD PTR [rip+0x31775]        # 0x438f7c
  407807:	call   rbx
  407809:	lea    rdx,[rip+0x20144]        # 0x427954
  407810:	lea    rcx,[rax+0x60]
  407814:	call   0x405a30
  407819:	test   r15,r15
  40781c:	je     0x4077a7
  40781e:	jmp    0x407799
  407823:	call   rbx
  407825:	lea    rdx,[rip+0x2017c]        # 0x4279a8
  40782c:	lea    rcx,[rax+0x60]
  407830:	call   0x405a30
  407835:	jmp    0x4077a7
  40783a:	call   QWORD PTR [rip+0x3173c]        # 0x438f7c
  407840:	lea    rdx,[rip+0x200ce]        # 0x427915
  407847:	lea    rcx,[rax+0x60]
  40784b:	call   0x405a30
  407850:	mov    ecx,0x1
  407855:	call   0x421e98
  40785a:	nop
  40785b:	nop
  40785c:	nop
  40785d:	nop
  40785e:	nop
  40785f:	nop
  407860:	jmp    QWORD PTR [rip+0x31596]        # 0x438dfc
  407866:	nop
  407867:	nop
  407868:	jmp    QWORD PTR [rip+0x31586]        # 0x438df4
  40786e:	nop
  40786f:	nop
  407870:	jmp    QWORD PTR [rip+0x31576]        # 0x438dec
  407876:	nop
  407877:	nop
  407878:	jmp    QWORD PTR [rip+0x31566]        # 0x438de4
  40787e:	nop
  40787f:	nop
  407880:	jmp    QWORD PTR [rip+0x31556]        # 0x438ddc
  407886:	nop
  407887:	nop
  407888:	jmp    QWORD PTR [rip+0x31546]        # 0x438dd4
  40788e:	nop
  40788f:	nop
  407890:	jmp    QWORD PTR [rip+0x31536]        # 0x438dcc
  407896:	nop
  407897:	nop
  407898:	jmp    QWORD PTR [rip+0x31526]        # 0x438dc4
  40789e:	nop
  40789f:	nop
  4078a0:	jmp    QWORD PTR [rip+0x31516]        # 0x438dbc
  4078a6:	nop
  4078a7:	nop
  4078a8:	jmp    QWORD PTR [rip+0x31506]        # 0x438db4
  4078ae:	nop
  4078af:	nop
  4078b0:	jmp    QWORD PTR [rip+0x314f6]        # 0x438dac
  4078b6:	nop
  4078b7:	nop
  4078b8:	jmp    QWORD PTR [rip+0x314e6]        # 0x438da4
  4078be:	nop
  4078bf:	nop
  4078c0:	jmp    QWORD PTR [rip+0x314d6]        # 0x438d9c
  4078c6:	nop
  4078c7:	nop
  4078c8:	jmp    QWORD PTR [rip+0x314c6]        # 0x438d94
  4078ce:	nop
  4078cf:	nop
  4078d0:	jmp    QWORD PTR [rip+0x314b6]        # 0x438d8c
  4078d6:	nop
  4078d7:	nop
  4078d8:	jmp    QWORD PTR [rip+0x314a6]        # 0x438d84
  4078de:	nop
  4078df:	nop
  4078e0:	jmp    QWORD PTR [rip+0x31496]        # 0x438d7c
  4078e6:	nop
  4078e7:	nop
  4078e8:	jmp    QWORD PTR [rip+0x31486]        # 0x438d74
  4078ee:	nop
  4078ef:	nop
  4078f0:	jmp    QWORD PTR [rip+0x31476]        # 0x438d6c
  4078f6:	nop
  4078f7:	nop
  4078f8:	jmp    QWORD PTR [rip+0x31466]        # 0x438d64
  4078fe:	nop
  4078ff:	nop
  407900:	jmp    QWORD PTR [rip+0x31456]        # 0x438d5c
  407906:	nop
  407907:	nop
  407908:	jmp    QWORD PTR [rip+0x31446]        # 0x438d54
  40790e:	nop
  40790f:	nop
  407910:	jmp    QWORD PTR [rip+0x31436]        # 0x438d4c
  407916:	nop
  407917:	nop
  407918:	jmp    QWORD PTR [rip+0x31426]        # 0x438d44
  40791e:	nop
  40791f:	nop
  407920:	jmp    QWORD PTR [rip+0x31416]        # 0x438d3c
  407926:	nop
  407927:	nop
  407928:	jmp    QWORD PTR [rip+0x31406]        # 0x438d34
  40792e:	nop
  40792f:	nop
  407930:	jmp    QWORD PTR [rip+0x313f6]        # 0x438d2c
  407936:	nop
  407937:	nop
  407938:	jmp    QWORD PTR [rip+0x313e6]        # 0x438d24
  40793e:	nop
  40793f:	nop
  407940:	jmp    QWORD PTR [rip+0x313d6]        # 0x438d1c
  407946:	nop
  407947:	nop
  407948:	jmp    QWORD PTR [rip+0x313c6]        # 0x438d14
  40794e:	nop
  40794f:	nop
  407950:	jmp    QWORD PTR [rip+0x313b6]        # 0x438d0c
  407956:	nop
  407957:	nop
  407958:	jmp    QWORD PTR [rip+0x313a6]        # 0x438d04
  40795e:	nop
  40795f:	nop
  407960:	jmp    QWORD PTR [rip+0x31396]        # 0x438cfc
  407966:	nop
  407967:	nop
  407968:	jmp    QWORD PTR [rip+0x31386]        # 0x438cf4
  40796e:	nop
  40796f:	nop
  407970:	jmp    QWORD PTR [rip+0x31376]        # 0x438cec
  407976:	nop
  407977:	nop
  407978:	jmp    QWORD PTR [rip+0x31366]        # 0x438ce4
  40797e:	nop
  40797f:	nop
  407980:	jmp    QWORD PTR [rip+0x31356]        # 0x438cdc
  407986:	nop
  407987:	nop
  407988:	jmp    QWORD PTR [rip+0x31346]        # 0x438cd4
  40798e:	nop
  40798f:	nop
  407990:	jmp    QWORD PTR [rip+0x31336]        # 0x438ccc
  407996:	nop
  407997:	nop
  407998:	jmp    QWORD PTR [rip+0x31326]        # 0x438cc4
  40799e:	nop
  40799f:	nop
  4079a0:	jmp    QWORD PTR [rip+0x31316]        # 0x438cbc
  4079a6:	nop
  4079a7:	nop
  4079a8:	jmp    QWORD PTR [rip+0x31306]        # 0x438cb4
  4079ae:	nop
  4079af:	nop
  4079b0:	jmp    QWORD PTR [rip+0x312f6]        # 0x438cac
  4079b6:	nop
  4079b7:	nop
  4079b8:	jmp    QWORD PTR [rip+0x312e6]        # 0x438ca4
  4079be:	nop
  4079bf:	nop
  4079c0:	jmp    QWORD PTR [rip+0x312d6]        # 0x438c9c
  4079c6:	nop
  4079c7:	nop
  4079c8:	jmp    QWORD PTR [rip+0x312c6]        # 0x438c94
  4079ce:	nop
  4079cf:	nop
  4079d0:	jmp    QWORD PTR [rip+0x312b6]        # 0x438c8c
  4079d6:	nop
  4079d7:	nop
  4079d8:	jmp    QWORD PTR [rip+0x312a6]        # 0x438c84
  4079de:	nop
  4079df:	nop
  4079e0:	jmp    QWORD PTR [rip+0x31296]        # 0x438c7c
  4079e6:	nop
  4079e7:	nop
  4079e8:	jmp    QWORD PTR [rip+0x31286]        # 0x438c74
  4079ee:	nop
  4079ef:	nop
  4079f0:	jmp    QWORD PTR [rip+0x31276]        # 0x438c6c
  4079f6:	nop
  4079f7:	nop
  4079f8:	jmp    QWORD PTR [rip+0x31266]        # 0x438c64
  4079fe:	nop
  4079ff:	nop
  407a00:	jmp    QWORD PTR [rip+0x31256]        # 0x438c5c
  407a06:	nop
  407a07:	nop
  407a08:	jmp    QWORD PTR [rip+0x31246]        # 0x438c54
  407a0e:	nop
  407a0f:	nop
  407a10:	jmp    QWORD PTR [rip+0x31236]        # 0x438c4c
  407a16:	nop
  407a17:	nop
  407a18:	jmp    QWORD PTR [rip+0x31226]        # 0x438c44
  407a1e:	nop
  407a1f:	nop
  407a20:	jmp    QWORD PTR [rip+0x31216]        # 0x438c3c
  407a26:	nop
  407a27:	nop
  407a28:	jmp    QWORD PTR [rip+0x31206]        # 0x438c34
  407a2e:	nop
  407a2f:	nop
  407a30:	jmp    QWORD PTR [rip+0x311f6]        # 0x438c2c
  407a36:	nop
  407a37:	nop
  407a38:	jmp    QWORD PTR [rip+0x311e6]        # 0x438c24
  407a3e:	nop
  407a3f:	nop
  407a40:	jmp    QWORD PTR [rip+0x311d6]        # 0x438c1c
  407a46:	nop
  407a47:	nop
  407a48:	jmp    QWORD PTR [rip+0x311c6]        # 0x438c14
  407a4e:	nop
  407a4f:	nop
  407a50:	jmp    QWORD PTR [rip+0x311b6]        # 0x438c0c
  407a56:	nop
  407a57:	nop
  407a58:	jmp    QWORD PTR [rip+0x311a6]        # 0x438c04
  407a5e:	nop
  407a5f:	nop
  407a60:	jmp    QWORD PTR [rip+0x3118e]        # 0x438bf4
  407a66:	nop
  407a67:	nop
  407a68:	jmp    QWORD PTR [rip+0x3117e]        # 0x438bec
  407a6e:	nop
  407a6f:	nop
  407a70:	jmp    QWORD PTR [rip+0x3116e]        # 0x438be4
  407a76:	nop
  407a77:	nop
  407a78:	jmp    QWORD PTR [rip+0x3115e]        # 0x438bdc
  407a7e:	nop
  407a7f:	nop
  407a80:	jmp    QWORD PTR [rip+0x3114e]        # 0x438bd4
  407a86:	nop
  407a87:	nop
  407a88:	jmp    QWORD PTR [rip+0x3113e]        # 0x438bcc
  407a8e:	nop
  407a8f:	nop
  407a90:	jmp    QWORD PTR [rip+0x3112e]        # 0x438bc4
  407a96:	nop
  407a97:	nop
  407a98:	jmp    QWORD PTR [rip+0x3111e]        # 0x438bbc
  407a9e:	nop
  407a9f:	nop
  407aa0:	jmp    QWORD PTR [rip+0x3110e]        # 0x438bb4
  407aa6:	nop
  407aa7:	nop
  407aa8:	jmp    QWORD PTR [rip+0x310fe]        # 0x438bac
  407aae:	nop
  407aaf:	nop
  407ab0:	jmp    QWORD PTR [rip+0x310ee]        # 0x438ba4
  407ab6:	nop
  407ab7:	nop
  407ab8:	jmp    QWORD PTR [rip+0x310de]        # 0x438b9c
  407abe:	nop
  407abf:	nop
  407ac0:	jmp    QWORD PTR [rip+0x310ce]        # 0x438b94
  407ac6:	nop
  407ac7:	nop
  407ac8:	jmp    QWORD PTR [rip+0x310be]        # 0x438b8c
  407ace:	nop
  407acf:	nop
  407ad0:	jmp    QWORD PTR [rip+0x310ae]        # 0x438b84
  407ad6:	nop
  407ad7:	nop
  407ad8:	jmp    QWORD PTR [rip+0x3109e]        # 0x438b7c
  407ade:	nop
  407adf:	nop
  407ae0:	jmp    QWORD PTR [rip+0x31086]        # 0x438b6c
  407ae6:	nop
  407ae7:	nop
  407ae8:	jmp    QWORD PTR [rip+0x31076]        # 0x438b64
  407aee:	nop
  407aef:	nop
  407af0:	jmp    QWORD PTR [rip+0x31066]        # 0x438b5c
  407af6:	nop
  407af7:	nop
  407af8:	jmp    QWORD PTR [rip+0x31056]        # 0x438b54
  407afe:	nop
  407aff:	nop
  407b00:	jmp    QWORD PTR [rip+0x31046]        # 0x438b4c
  407b06:	nop
  407b07:	nop
  407b08:	jmp    QWORD PTR [rip+0x31036]        # 0x438b44
  407b0e:	nop
  407b0f:	nop
  407b10:	jmp    QWORD PTR [rip+0x31026]        # 0x438b3c
  407b16:	nop
  407b17:	nop
  407b18:	jmp    QWORD PTR [rip+0x31016]        # 0x438b34
  407b1e:	nop
  407b1f:	nop
  407b20:	jmp    QWORD PTR [rip+0x31006]        # 0x438b2c
  407b26:	nop
  407b27:	nop
  407b28:	jmp    QWORD PTR [rip+0x30ff6]        # 0x438b24
  407b2e:	nop
  407b2f:	nop
  407b30:	jmp    QWORD PTR [rip+0x30fe6]        # 0x438b1c
  407b36:	nop
  407b37:	nop
  407b38:	jmp    QWORD PTR [rip+0x30fd6]        # 0x438b14
  407b3e:	nop
  407b3f:	nop
  407b40:	jmp    QWORD PTR [rip+0x30fc6]        # 0x438b0c
  407b46:	nop
  407b47:	nop
  407b48:	jmp    QWORD PTR [rip+0x30fb6]        # 0x438b04
  407b4e:	nop
  407b4f:	nop
  407b50:	jmp    QWORD PTR [rip+0x30fa6]        # 0x438afc
  407b56:	nop
  407b57:	nop
  407b58:	jmp    QWORD PTR [rip+0x30f96]        # 0x438af4
  407b5e:	nop
  407b5f:	nop
  407b60:	jmp    QWORD PTR [rip+0x30f86]        # 0x438aec
  407b66:	nop
  407b67:	nop
  407b68:	jmp    QWORD PTR [rip+0x30f76]        # 0x438ae4
  407b6e:	nop
  407b6f:	nop
  407b70:	jmp    QWORD PTR [rip+0x30f66]        # 0x438adc
  407b76:	nop
  407b77:	nop
  407b78:	jmp    QWORD PTR [rip+0x30f56]        # 0x438ad4
  407b7e:	nop
  407b7f:	nop
  407b80:	jmp    QWORD PTR [rip+0x30f46]        # 0x438acc
  407b86:	nop
  407b87:	nop
  407b88:	jmp    QWORD PTR [rip+0x30f36]        # 0x438ac4
  407b8e:	nop
  407b8f:	nop
  407b90:	jmp    QWORD PTR [rip+0x30f26]        # 0x438abc
  407b96:	nop
  407b97:	nop
  407b98:	jmp    QWORD PTR [rip+0x30f16]        # 0x438ab4
  407b9e:	nop
  407b9f:	nop
  407ba0:	jmp    QWORD PTR [rip+0x30f06]        # 0x438aac
  407ba6:	nop
  407ba7:	nop
  407ba8:	jmp    QWORD PTR [rip+0x30ef6]        # 0x438aa4
  407bae:	nop
  407baf:	nop
  407bb0:	jmp    QWORD PTR [rip+0x30ee6]        # 0x438a9c
  407bb6:	nop
  407bb7:	nop
  407bb8:	jmp    QWORD PTR [rip+0x30ed6]        # 0x438a94
  407bbe:	nop
  407bbf:	nop
  407bc0:	jmp    QWORD PTR [rip+0x30ec6]        # 0x438a8c
  407bc6:	nop
  407bc7:	nop
  407bc8:	jmp    QWORD PTR [rip+0x30eb6]        # 0x438a84
  407bce:	nop
  407bcf:	nop
  407bd0:	jmp    QWORD PTR [rip+0x30ea6]        # 0x438a7c
  407bd6:	nop
  407bd7:	nop
  407bd8:	jmp    QWORD PTR [rip+0x30e96]        # 0x438a74
  407bde:	nop
  407bdf:	nop
  407be0:	jmp    QWORD PTR [rip+0x30e86]        # 0x438a6c
  407be6:	nop
  407be7:	nop
  407be8:	jmp    QWORD PTR [rip+0x30e76]        # 0x438a64
  407bee:	nop
  407bef:	nop
  407bf0:	jmp    QWORD PTR [rip+0x30e66]        # 0x438a5c
  407bf6:	nop
  407bf7:	nop
  407bf8:	jmp    QWORD PTR [rip+0x30e56]        # 0x438a54
  407bfe:	nop
  407bff:	nop
  407c00:	jmp    QWORD PTR [rip+0x30e46]        # 0x438a4c
  407c06:	nop
  407c07:	nop
  407c08:	jmp    QWORD PTR [rip+0x30e36]        # 0x438a44
  407c0e:	nop
  407c0f:	nop
  407c10:	jmp    QWORD PTR [rip+0x30e26]        # 0x438a3c
  407c16:	nop
  407c17:	nop
  407c18:	jmp    QWORD PTR [rip+0x30e16]        # 0x438a34
  407c1e:	nop
  407c1f:	nop
  407c20:	jmp    QWORD PTR [rip+0x30e06]        # 0x438a2c
  407c26:	nop
  407c27:	nop
  407c28:	jmp    QWORD PTR [rip+0x30df6]        # 0x438a24
  407c2e:	nop
  407c2f:	nop
  407c30:	jmp    QWORD PTR [rip+0x30de6]        # 0x438a1c
  407c36:	nop
  407c37:	nop
  407c38:	jmp    QWORD PTR [rip+0x30dd6]        # 0x438a14
  407c3e:	nop
  407c3f:	nop
  407c40:	jmp    QWORD PTR [rip+0x30dc6]        # 0x438a0c
  407c46:	nop
  407c47:	nop
  407c48:	jmp    QWORD PTR [rip+0x30db6]        # 0x438a04
  407c4e:	nop
  407c4f:	nop
  407c50:	jmp    QWORD PTR [rip+0x30da6]        # 0x4389fc
  407c56:	nop
  407c57:	nop
  407c58:	jmp    QWORD PTR [rip+0x30d96]        # 0x4389f4
  407c5e:	nop
  407c5f:	nop
  407c60:	sub    rsp,0x28
  407c64:	lea    rcx,[rip+0x1b4d5]        # 0x423140
  407c6b:	xor    edx,edx
  407c6d:	call   0x413e90
  407c72:	mov    ecx,0x1
  407c77:	call   0x421e98
  407c7c:	nop
  407c7d:	nop    DWORD PTR [rax]
  407c80:	push   rsi
  407c81:	push   rbx
  407c82:	sub    rsp,0x28
  407c86:	cmp    rcx,0xf
  407c8a:	mov    rbx,rcx
  407c8d:	mov    rsi,rdx
  407c90:	ja     0x407cb0
  407c92:	lea    r8,[rip+0x1fdaf]        # 0x427a48
  407c99:	mov    r9d,0x1
  407c9f:	mov    rdx,rsi
  407ca2:	mov    rcx,rbx
  407ca5:	add    rsp,0x28
  407ca9:	pop    rbx
  407caa:	pop    rsi
  407cab:	jmp    0x40f580
  407cb0:	call   0x407ed0
  407cb5:	cmp    DWORD PTR [rsi+0x18],0x10000
  407cbc:	jbe    0x407cd4
  407cbe:	call   QWORD PTR [rip+0x312b8]        # 0x438f7c
  407cc4:	mov    rdx,QWORD PTR [rip+0x25995]        # 0x42d660
  407ccb:	add    rax,0x60
  407ccf:	mov    QWORD PTR [rdx],rax
  407cd2:	jmp    0x407c92
  407cd4:	add    rsp,0x28
  407cd8:	pop    rbx
  407cd9:	pop    rsi
  407cda:	ret    
  407cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ce0:	push   rsi
  407ce1:	push   rbx
  407ce2:	sub    rsp,0x28
  407ce6:	cmp    rcx,0xf
  407cea:	mov    rbx,rcx
  407ced:	mov    rsi,rdx
  407cf0:	ja     0x407d10
  407cf2:	lea    r8,[rip+0x1fd47]        # 0x427a40
  407cf9:	mov    r9d,0x1
  407cff:	mov    rdx,rsi
  407d02:	mov    rcx,rbx
  407d05:	add    rsp,0x28
  407d09:	pop    rbx
  407d0a:	pop    rsi
  407d0b:	jmp    0x40f580
  407d10:	call   0x407ed0
  407d15:	cmp    DWORD PTR [rsi+0x18],0x270f
  407d1c:	jbe    0x407d34
  407d1e:	call   QWORD PTR [rip+0x31258]        # 0x438f7c
  407d24:	mov    rdx,QWORD PTR [rip+0x25935]        # 0x42d660
  407d2b:	add    rax,0x60
  407d2f:	mov    QWORD PTR [rdx],rax
  407d32:	jmp    0x407cf2
  407d34:	add    rsp,0x28
  407d38:	pop    rbx
  407d39:	pop    rsi
  407d3a:	ret    
  407d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d40:	push   rbx
  407d41:	sub    rsp,0x20
  407d45:	mov    r8d,0x4
  407d4b:	mov    rbx,rcx
  407d4e:	call   0x40c910
  407d53:	test   eax,eax
  407d55:	je     0x407d5d
  407d57:	test   BYTE PTR [rbx+0x10],0x4
  407d5b:	jne    0x407d63
  407d5d:	add    rsp,0x20
  407d61:	pop    rbx
  407d62:	ret    
  407d63:	mov    rax,QWORD PTR [rip+0x1b46e]        # 0x4231d8
  407d6a:	lea    rcx,[rip+0x1b3cf]        # 0x423140
  407d71:	mov    edx,0x40
  407d76:	add    rsp,0x20
  407d7a:	pop    rbx
  407d7b:	rex.W jmp rax
  407d7e:	nop
  407d7f:	nop
  407d80:	push   rsi
  407d81:	push   rbx
  407d82:	sub    rsp,0x28
  407d86:	mov    eax,DWORD PTR [rdx+0x10]
  407d89:	mov    r8,QWORD PTR [rdx+0x38]
  407d8d:	mov    rsi,rcx
  407d90:	mov    rbx,rdx
  407d93:	and    eax,0xfffff00
  407d98:	or     eax,0x8
  407d9b:	test   r8,r8
  407d9e:	mov    DWORD PTR [rdx+0x10],eax
  407da1:	je     0x407da9
  407da3:	call   r8
  407da6:	mov    eax,DWORD PTR [rbx+0x10]
  407da9:	movzx  edx,WORD PTR [rbx]
  407dac:	mov    rcx,QWORD PTR [rsi+0xc8]
  407db3:	and    eax,0xfffff00
  407db8:	mov    rcx,QWORD PTR [rcx+rdx*8]
  407dbc:	mov    QWORD PTR [rbx+0x18],rcx
  407dc0:	mov    rcx,QWORD PTR [rsi+0xd0]
  407dc7:	mov    rdx,QWORD PTR [rcx+rdx*8]
  407dcb:	mov    DWORD PTR [rbx+0x10],eax
  407dce:	mov    QWORD PTR [rbx+0x20],rdx
  407dd2:	add    rsp,0x28
  407dd6:	pop    rbx
  407dd7:	pop    rsi
  407dd8:	ret    
  407dd9:	nop    DWORD PTR [rax+0x0]
  407de0:	push   rbp
  407de1:	push   rdi
  407de2:	push   rsi
  407de3:	push   rbx
  407de4:	sub    rsp,0x28
  407de8:	mov    eax,DWORD PTR [rcx]
  407dea:	lea    rbx,[rcx+0x8]
  407dee:	mov    rbp,rcx
  407df1:	lea    edx,[rax-0x1]
  407df4:	test   eax,eax
  407df6:	lea    rdi,[rbx+rdx*8+0x8]
  407dfb:	jg     0x407e0d
  407dfd:	jmp    0x407e30
  407dff:	nop
  407e00:	mov    rcx,rsi
  407e03:	call   0x421e50
  407e08:	cmp    rbx,rdi
  407e0b:	je     0x407e30
  407e0d:	add    rbx,0x8
  407e11:	mov    rsi,QWORD PTR [rbx-0x8]
  407e15:	cmp    DWORD PTR [rsi],0x6
  407e18:	jne    0x407e00
  407e1a:	mov    rcx,QWORD PTR [rsi+0x10]
  407e1e:	call   0x407de0
  407e23:	mov    rcx,rsi
  407e26:	call   0x421e50
  407e2b:	cmp    rbx,rdi
  407e2e:	jne    0x407e0d
  407e30:	mov    rcx,rbp
  407e33:	add    rsp,0x28
  407e37:	pop    rbx
  407e38:	pop    rsi
  407e39:	pop    rdi
  407e3a:	pop    rbp
  407e3b:	jmp    0x421e50
  407e40:	push   rdi
  407e41:	push   rsi
  407e42:	push   rbx
  407e43:	sub    rsp,0x20
  407e47:	mov    rdi,QWORD PTR [rip+0x312a6]        # 0x4390f4
  407e4e:	mov    rsi,rcx
  407e51:	jmp    0x407e57
  407e53:	add    rsi,0x1
  407e57:	movzx  ecx,BYTE PTR [rsi]
  407e5a:	call   rdi
  407e5c:	test   eax,eax
  407e5e:	jne    0x407e53
  407e60:	mov    rcx,rsi
  407e63:	call   0x421d98
  407e68:	lea    rbx,[rsi+rax*1]
  407e6c:	cmp    rbx,rsi
  407e6f:	ja     0x407e7c
  407e71:	jmp    0x407e86
  407e73:	sub    rbx,0x1
  407e77:	cmp    rbx,rsi
  407e7a:	je     0x407e86
  407e7c:	movzx  ecx,BYTE PTR [rbx-0x1]
  407e80:	call   rdi
  407e82:	test   eax,eax
  407e84:	jne    0x407e73
  407e86:	mov    rax,rsi
  407e89:	mov    BYTE PTR [rbx],0x0
  407e8c:	add    rsp,0x20
  407e90:	pop    rbx
  407e91:	pop    rsi
  407e92:	pop    rdi
  407e93:	ret    
  407e94:	xchg   ax,ax
  407e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ea0:	sub    rsp,0x38
  407ea4:	mov    QWORD PTR [rsp+0x50],r8
  407ea9:	lea    r8,[rsp+0x50]
  407eae:	mov    QWORD PTR [rsp+0x58],r9
  407eb3:	mov    QWORD PTR [rsp+0x28],r8
  407eb8:	call   0x41d2d0
  407ebd:	add    rsp,0x38
  407ec1:	ret    
  407ec2:	nop    DWORD PTR [rax+0x0]
  407ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ed0:	push   r13
  407ed2:	push   r12
  407ed4:	push   rbp
  407ed5:	push   rdi
  407ed6:	push   rsi
  407ed7:	push   rbx
  407ed8:	sub    rsp,0x38
  407edc:	cmp    rcx,0xf
  407ee0:	jbe    0x407eed
  407ee2:	test   rdx,rdx
  407ee5:	je     0x407eed
  407ee7:	test   BYTE PTR [rdx+0x10],0x8
  407eeb:	je     0x407f00
  407eed:	add    rsp,0x38
  407ef1:	pop    rbx
  407ef2:	pop    rsi
  407ef3:	pop    rdi
  407ef4:	pop    rbp
  407ef5:	pop    r12
  407ef7:	pop    r13
  407ef9:	ret    
  407efa:	nop    WORD PTR [rax+rax*1+0x0]
  407f00:	cmp    QWORD PTR [rdx+0x18],0x0
  407f05:	je     0x407eed
  407f07:	mov    rbx,rdx
  407f0a:	mov    rsi,rcx
  407f0d:	mov    rdi,QWORD PTR [rip+0x310b8]        # 0x438fcc
  407f14:	call   rdi
  407f16:	mov    DWORD PTR [rax],0x0
  407f1c:	mov    rcx,QWORD PTR [rbx+0x18]
  407f20:	lea    rdx,[rsp+0x28]
  407f25:	xor    r8d,r8d
  407f28:	call   0x421d68
  407f2d:	mov    rbp,QWORD PTR [rbx+0x18]
  407f31:	cmp    rbp,QWORD PTR [rsp+0x28]
  407f36:	mov    r12d,eax
  407f39:	je     0x407f74
  407f3b:	call   rdi
  407f3d:	mov    eax,DWORD PTR [rax]
  407f3f:	test   eax,eax
  407f41:	jne    0x407f70
  407f43:	mov    eax,DWORD PTR [rbx+0x10]
  407f46:	test   eax,0x1000000
  407f4b:	jne    0x407fbf
  407f4d:	mov    rdx,QWORD PTR [rsp+0x28]
  407f52:	cmp    BYTE PTR [rdx],0x0
  407f55:	jne    0x407f70
  407f57:	test   al,0x40
  407f59:	jne    0x408030
  407f5f:	mov    DWORD PTR [rbx+0x18],r12d
  407f63:	jmp    0x407eed
  407f65:	cmp    cl,0x67
  407f68:	je     0x408016
  407f6e:	xchg   ax,ax
  407f70:	mov    rbp,QWORD PTR [rbx+0x18]
  407f74:	mov    r13,QWORD PTR [rsi+0x28]
  407f78:	mov    r12,QWORD PTR [rip+0x1bc19]        # 0x423b98
  407f7f:	call   QWORD PTR [rip+0x30ff7]        # 0x438f7c
  407f85:	lea    rcx,[rax+0x60]
  407f89:	mov    r9,rbp
  407f8c:	mov    r8,r13
  407f8f:	mov    rdx,r12
  407f92:	call   0x407ea0
  407f97:	test   BYTE PTR [rsi+0x10],0x4
  407f9b:	je     0x407fab
  407f9d:	mov    edx,0x1
  407fa2:	mov    rcx,rsi
  407fa5:	call   QWORD PTR [rsi+0x98]
  407fab:	call   rdi
  407fad:	mov    DWORD PTR [rax],0x16
  407fb3:	mov    DWORD PTR [rbx+0x18],0xffffffff
  407fba:	jmp    0x407eed
  407fbf:	mov    r8,QWORD PTR [rsp+0x28]
  407fc4:	lea    rdx,[r8+0x1]
  407fc8:	mov    QWORD PTR [rsp+0x28],rdx
  407fcd:	movzx  ecx,BYTE PTR [r8]
  407fd1:	cmp    cl,0x54
  407fd4:	je     0x408042
  407fd6:	jg     0x407ff6
  407fd8:	cmp    cl,0x47
  407fdb:	je     0x408046
  407fdd:	jle    0x40804c
  407fdf:	cmp    cl,0x4b
  407fe2:	je     0x407fed
  407fe4:	cmp    cl,0x4d
  407fe7:	jne    0x407f70
  407fe9:	shl    r12d,0xa
  407fed:	shl    r12d,0xa
  407ff1:	jmp    0x407f52
  407ff6:	cmp    cl,0x6b
  407ff9:	je     0x408024
  407ffb:	jle    0x407f65
  408001:	cmp    cl,0x6d
  408004:	je     0x40801d
  408006:	imul   r12d,r12d,0x3e8
  40800d:	cmp    cl,0x74
  408010:	jne    0x407f70
  408016:	imul   r12d,r12d,0x3e8
  40801d:	imul   r12d,r12d,0x3e8
  408024:	imul   r12d,r12d,0x3e8
  40802b:	jmp    0x407f52
  408030:	mov    rcx,QWORD PTR [rbx+0x18]
  408034:	call   0x421e50
  408039:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40803d:	jmp    0x407f5f
  408042:	shl    r12d,0xa
  408046:	shl    r12d,0xa
  40804a:	jmp    0x407fe9
  40804c:	test   cl,cl
  40804e:	jne    0x407f70
  408054:	mov    QWORD PTR [rsp+0x28],r8
  408059:	mov    rdx,r8
  40805c:	jmp    0x407f52
  408061:	nop    DWORD PTR [rax+rax*1+0x0]
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	push   rsi
  408071:	push   rbx
  408072:	sub    rsp,0x28
  408076:	test   rdx,rdx
  408079:	mov    rsi,rcx
  40807c:	mov    rbx,rdx
  40807f:	je     0x4080c0
  408081:	mov    edx,0xa
  408086:	mov    rcx,rbx
  408089:	call   0x421dc0
  40808e:	test   rax,rax
  408091:	je     0x4080d4
  408093:	sub    rax,rbx
  408096:	mov    r9,rsi
  408099:	mov    edx,0x1
  40809e:	mov    r8,rax
  4080a1:	mov    rcx,rbx
  4080a4:	call   0x421e38
  4080a9:	mov    rdx,rsi
  4080ac:	mov    ecx,0xa
  4080b1:	add    rsp,0x28
  4080b5:	pop    rbx
  4080b6:	pop    rsi
  4080b7:	jmp    0x421e68
  4080bc:	nop    DWORD PTR [rax+0x0]
  4080c0:	test   r8,r8
  4080c3:	mov    rbx,r8
  4080c6:	jne    0x408081
  4080c8:	test   r9,r9
  4080cb:	jne    0x4080e1
  4080cd:	add    rsp,0x28
  4080d1:	pop    rbx
  4080d2:	pop    rsi
  4080d3:	ret    
  4080d4:	mov    rdx,rsi
  4080d7:	mov    rcx,rbx
  4080da:	call   0x421e60
  4080df:	jmp    0x4080a9
  4080e1:	mov    rbx,r9
  4080e4:	jmp    0x408081
  4080e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080f0:	push   rsi
  4080f1:	push   rbx
  4080f2:	sub    rsp,0x28
  4080f6:	cmp    BYTE PTR [rcx],0x27
  4080f9:	mov    rbx,rcx
  4080fc:	jne    0x40812b
  4080fe:	mov    rsi,QWORD PTR [rip+0x30e77]        # 0x438f7c
  408105:	call   rsi
  408107:	lea    rcx,[rip+0x21803]        # 0x429911
  40810e:	lea    r9,[rax+0x30]
  408112:	mov    r8d,0x2
  408118:	mov    edx,0x1
  40811d:	add    rbx,0x1
  408121:	call   0x421e38
  408126:	cmp    BYTE PTR [rbx],0x27
  408129:	je     0x408105
  40812b:	mov    rax,rbx
  40812e:	add    rsp,0x28
  408132:	pop    rbx
  408133:	pop    rsi
  408134:	ret    
  408135:	nop
  408136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408140:	push   r12
  408142:	push   rbp
  408143:	push   rdi
  408144:	push   rsi
  408145:	push   rbx
  408146:	sub    rsp,0x20
  40814a:	test   BYTE PTR [rdx+0x10],0x20
  40814e:	mov    rdi,rcx
  408151:	mov    r12,rdx
  408154:	mov    rbx,r8
  408157:	je     0x408165
  408159:	cmp    WORD PTR [rdx+0x8],0x8000
  40815f:	je     0x408270
  408165:	mov    rsi,QWORD PTR [r12+0x50]
  40816a:	mov    rcx,rsi
  40816d:	mov    ebp,0x11
  408172:	call   0x421d98
  408177:	mov    rdx,rdi
  40817a:	mov    rcx,rsi
  40817d:	sub    ebp,eax
  40817f:	call   0x421e60
  408184:	test   rbx,rbx
  408187:	je     0x408250
  40818d:	lea    rcx,[rip+0x200ec]        # 0x428280
  408194:	mov    r9,rdi
  408197:	mov    r8d,0x3
  40819d:	mov    edx,0x1
  4081a2:	lea    esi,[rbp-0x1]
  4081a5:	call   0x421e38
  4081aa:	test   ebp,ebp
  4081ac:	jle    0x4081c5
  4081ae:	xchg   ax,ax
  4081b0:	mov    rdx,rdi
  4081b3:	mov    ecx,0x20
  4081b8:	sub    esi,0x1
  4081bb:	call   0x421e68
  4081c0:	cmp    esi,0xffffffff
  4081c3:	jne    0x4081b0
  4081c5:	mov    eax,DWORD PTR [r12+0x10]
  4081ca:	and    eax,0xf000
  4081cf:	cmp    eax,0x5000
  4081d4:	jne    0x408215
  4081d6:	jmp    0x408279
  4081db:	nop    DWORD PTR [rax+rax*1+0x0]
  4081e0:	mov    rdx,rax
  4081e3:	mov    rcx,rbx
  4081e6:	mov    r9,rdi
  4081e9:	sub    rdx,rbx
  4081ec:	mov    r8d,0x1
  4081f2:	lea    rbx,[rsi+0x1]
  4081f6:	call   0x421e38
  4081fb:	lea    rcx,[rip+0x20085]        # 0x428287
  408202:	mov    r9,rdi
  408205:	mov    r8d,0x2
  40820b:	mov    edx,0x1
  408210:	call   0x421e38
  408215:	mov    edx,0xa
  40821a:	mov    rcx,rbx
  40821d:	call   0x421dc0
  408222:	test   rax,rax
  408225:	mov    rsi,rax
  408228:	jne    0x4081e0
  40822a:	mov    rdx,rdi
  40822d:	mov    rcx,rbx
  408230:	call   0x421e60
  408235:	mov    rdx,rdi
  408238:	mov    ecx,0xa
  40823d:	add    rsp,0x20
  408241:	pop    rbx
  408242:	pop    rsi
  408243:	pop    rdi
  408244:	pop    rbp
  408245:	pop    r12
  408247:	jmp    0x421e68
  40824c:	nop    DWORD PTR [rax+0x0]
  408250:	mov    eax,DWORD PTR [r12+0x10]
  408255:	and    eax,0xf000
  40825a:	cmp    eax,0x5000
  40825f:	jne    0x408235
  408261:	jmp    0x40818d
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	mov    rsi,QWORD PTR [rdx+0x58]
  408274:	jmp    0x40816a
  408279:	lea    rdx,[rip+0x20004]        # 0x428284
  408280:	mov    r8d,ebx
  408283:	mov    rcx,rdi
  408286:	call   0x407ea0
  40828b:	jmp    0x408235
  40828d:	nop    DWORD PTR [rax]
  408290:	sub    rsp,0x38
  408294:	mov    QWORD PTR [rsp+0x58],r9
  408299:	lea    r9,[rsp+0x58]
  40829e:	mov    QWORD PTR [rsp+0x28],r9
  4082a3:	call   0x41d340
  4082a8:	add    rsp,0x38
  4082ac:	ret    
  4082ad:	nop    DWORD PTR [rax]
  4082b0:	sub    rsp,0x38
  4082b4:	mov    QWORD PTR [rsp+0x48],rdx
  4082b9:	lea    rdx,[rsp+0x48]
  4082be:	mov    QWORD PTR [rsp+0x50],r8
  4082c3:	mov    QWORD PTR [rsp+0x58],r9
  4082c8:	mov    QWORD PTR [rsp+0x28],rdx
  4082cd:	call   0x41d300
  4082d2:	add    rsp,0x38
  4082d6:	ret    
  4082d7:	nop    WORD PTR [rax+rax*1+0x0]
  4082e0:	push   rbx
  4082e1:	sub    rsp,0x20
  4082e5:	cmp    BYTE PTR [rip+0x2c908],0x0        # 0x434bf4
  4082ec:	mov    ebx,ecx
  4082ee:	jne    0x4082f7
  4082f0:	mov    ecx,ebx
  4082f2:	call   0x421e98
  4082f7:	mov    edx,ecx
  4082f9:	lea    rcx,[rip+0x1ff8a]        # 0x42828a
  408300:	call   0x4082b0
  408305:	jmp    0x4082f0
  408307:	nop    WORD PTR [rax+rax*1+0x0]
  408310:	push   rsi
  408311:	push   rbx
  408312:	sub    rsp,0x28
  408316:	mov    rbx,QWORD PTR [rip+0x1b743]        # 0x423a60
  40831d:	mov    rsi,rcx
  408320:	call   QWORD PTR [rip+0x30c56]        # 0x438f7c
  408326:	lea    rcx,[rax+0x60]
  40832a:	mov    r8,rsi
  40832d:	mov    rdx,rbx
  408330:	call   0x407ea0
  408335:	mov    ecx,0x46
  40833a:	call   0x4082e0
  40833f:	nop
  408340:	push   r15
  408342:	push   r14
  408344:	push   r13
  408346:	push   r12
  408348:	push   rbp
  408349:	push   rdi
  40834a:	push   rsi
  40834b:	push   rbx
  40834c:	sub    rsp,0x58
  408350:	cmp    rcx,0xf
  408354:	mov    QWORD PTR [rsp+0xa0],rcx
  40835c:	mov    r13,rdx
  40835f:	mov    rbx,r8
  408362:	mov    ebp,r9d
  408365:	ja     0x4085e3
  40836b:	mov    r8,QWORD PTR [r13+0x50]
  40836f:	mov    rdx,QWORD PTR [rip+0x1b9da]        # 0x423d50
  408376:	mov    rcx,QWORD PTR [rip+0x2c84b]        # 0x434bc8
  40837d:	call   0x407ea0
  408382:	mov    rdi,QWORD PTR [rbx]
  408385:	mov    DWORD PTR [rsp+0x38],0x0
  40838d:	cmp    BYTE PTR [rdi],0x7f
  408390:	je     0x408620
  408396:	mov    rcx,rdi
  408399:	mov    r12,rbx
  40839c:	mov    r14d,ebp
  40839f:	xor    esi,esi
  4083a1:	xor    r15d,r15d
  4083a4:	jmp    0x4083b4
  4083a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083b0:	mov    rcx,QWORD PTR [r12]
  4083b4:	call   0x421d98
  4083b9:	add    rax,0x1
  4083bd:	add    r12,0x8
  4083c1:	cmp    r15,rax
  4083c4:	cmovb  r15,rax
  4083c8:	sub    r14d,0x1
  4083cc:	add    rsi,rax
  4083cf:	test   r14d,r14d
  4083d2:	jg     0x4083b0
  4083d4:	cmp    r15,0x23
  4083d8:	jbe    0x408460
  4083de:	mov    esi,ebp
  4083e0:	jmp    0x4083e5
  4083e2:	mov    rdi,QWORD PTR [rbx]
  4083e5:	mov    rcx,QWORD PTR [rip+0x2c7dc]        # 0x434bc8
  4083ec:	lea    rdx,[rip+0x213fd]        # 0x4297f0
  4083f3:	mov    r8,rdi
  4083f6:	sub    esi,0x1
  4083f9:	add    rbx,0x8
  4083fd:	call   0x407ea0
  408402:	test   esi,esi
  408404:	jg     0x4083e2
  408406:	cmp    QWORD PTR [rsp+0xa0],0xf
  40840f:	ja     0x40856f
  408415:	mov    eax,DWORD PTR [r13+0x10]
  408419:	and    eax,0xf000
  40841e:	cmp    eax,0x4000
  408423:	je     0x4085b5
  408429:	mov    eax,DWORD PTR [rsp+0x38]
  40842d:	mov    rdx,QWORD PTR [rip+0x1b6d4]        # 0x423b08
  408434:	mov    rcx,QWORD PTR [rip+0x2c78d]        # 0x434bc8
  40843b:	lea    r9d,[rax+rbp*1-0x1]
  408440:	mov    r8d,eax
  408443:	call   0x407ea0
  408448:	nop
  408449:	add    rsp,0x58
  40844d:	pop    rbx
  40844e:	pop    rsi
  40844f:	pop    rdi
  408450:	pop    rbp
  408451:	pop    r12
  408453:	pop    r13
  408455:	pop    r14
  408457:	pop    r15
  408459:	ret    
  40845a:	nop    WORD PTR [rax+rax*1+0x0]
  408460:	cmp    rsi,0x4b
  408464:	jbe    0x408510
  40846a:	lea    r12,[rsp+0x40]
  40846f:	lea    r8,[rip+0x21380]        # 0x4297f6
  408476:	mov    r9d,r15d
  408479:	mov    edx,0x10
  40847e:	mov    rcx,r12
  408481:	call   0x408290
  408486:	cmp    eax,0xf
  408489:	jg     0x40865c
  40848f:	mov    eax,0x4e
  408494:	xor    edx,edx
  408496:	mov    r9,QWORD PTR [rip+0x2c72b]        # 0x434bc8
  40849d:	div    r15
  4084a0:	lea    rcx,[rip+0x21317]        # 0x4297be
  4084a7:	mov    r8d,0x2
  4084ad:	mov    edx,0x1
  4084b2:	add    rbx,0x8
  4084b6:	mov    r15d,ebp
  4084b9:	xor    esi,esi
  4084bb:	mov    rdi,rax
  4084be:	call   0x421e38
  4084c3:	jmp    0x4084d8
  4084c5:	mov    rcx,QWORD PTR [rip+0x2c6fc]        # 0x434bc8
  4084cc:	mov    rdx,r12
  4084cf:	call   0x407ea0
  4084d4:	add    rbx,0x8
  4084d8:	sub    r15d,0x1
  4084dc:	test   r15d,r15d
  4084df:	jle    0x408640
  4084e5:	lea    eax,[rsi+0x1]
  4084e8:	mov    r8,QWORD PTR [rbx-0x8]
  4084ec:	cmp    rax,rdi
  4084ef:	mov    rsi,rax
  4084f2:	jne    0x4084c5
  4084f4:	mov    rcx,QWORD PTR [rip+0x2c6cd]        # 0x434bc8
  4084fb:	lea    rdx,[rip+0x21385]        # 0x429887
  408502:	xor    esi,esi
  408504:	call   0x407ea0
  408509:	jmp    0x4084d4
  40850b:	nop    DWORD PTR [rax+rax*1+0x0]
  408510:	mov    rdx,QWORD PTR [rip+0x2c6b1]        # 0x434bc8
  408517:	mov    ecx,0x20
  40851c:	mov    esi,ebp
  40851e:	call   0x421e68
  408523:	mov    rdx,QWORD PTR [rip+0x2c69e]        # 0x434bc8
  40852a:	mov    ecx,0x20
  40852f:	add    rbx,0x8
  408533:	sub    esi,0x1
  408536:	call   0x421e68
  40853b:	mov    rcx,QWORD PTR [rbx-0x8]
  40853f:	mov    rdx,QWORD PTR [rip+0x2c682]        # 0x434bc8
  408546:	call   0x421e60
  40854b:	test   esi,esi
  40854d:	jg     0x408523
  40854f:	mov    rdx,QWORD PTR [rip+0x2c672]        # 0x434bc8
  408556:	mov    ecx,0xa
  40855b:	call   0x421e68
  408560:	cmp    QWORD PTR [rsp+0xa0],0xf
  408569:	jbe    0x408415
  40856f:	mov    eax,DWORD PTR [rsp+0x38]
  408573:	mov    rdx,QWORD PTR [rip+0x1b58e]        # 0x423b08
  40857a:	mov    rcx,QWORD PTR [rip+0x2c647]        # 0x434bc8
  408581:	lea    r9d,[rax+rbp*1-0x1]
  408586:	mov    r8d,eax
  408589:	call   0x407ea0
  40858e:	mov    rcx,QWORD PTR [rsp+0xa0]
  408596:	mov    edx,0x1
  40859b:	call   QWORD PTR [rcx+0x98]
  4085a1:	mov    eax,DWORD PTR [r13+0x10]
  4085a5:	and    eax,0xf000
  4085aa:	cmp    eax,0x4000
  4085af:	jne    0x408429
  4085b5:	mov    rdx,QWORD PTR [rip+0x1b694]        # 0x423c50
  4085bc:	mov    rcx,QWORD PTR [rip+0x2c605]        # 0x434bc8
  4085c3:	mov    r8d,ebp
  4085c6:	call   0x407ea0
  4085cb:	mov    rdx,QWORD PTR [rip+0x2c5f6]        # 0x434bc8
  4085d2:	mov    rcx,QWORD PTR [rip+0x1b767]        # 0x423d40
  4085d9:	call   0x421e60
  4085de:	jmp    0x408449
  4085e3:	mov    rax,QWORD PTR [rcx+0x28]
  4085e7:	mov    rcx,QWORD PTR [rip+0x2c5da]        # 0x434bc8
  4085ee:	mov    QWORD PTR [rsp+0x38],rax
  4085f3:	mov    rax,QWORD PTR [rdx+0x50]
  4085f7:	mov    r8,QWORD PTR [rsp+0x38]
  4085fc:	mov    QWORD PTR [rsp+0x20],rax
  408601:	mov    r9,QWORD PTR [rdx+0x18]
  408605:	mov    rdx,QWORD PTR [rip+0x2c60c]        # 0x434c18
  40860c:	call   0x407ea0
  408611:	jmp    0x40836b
  408616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408620:	mov    rdi,QWORD PTR [rbx+0x8]
  408624:	sub    ebp,0x1
  408627:	add    rbx,0x8
  40862b:	mov    DWORD PTR [rsp+0x38],0x1
  408633:	jmp    0x408396
  408638:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	mov    r8,QWORD PTR [rbx-0x8]
  408644:	mov    rcx,QWORD PTR [rip+0x2c57d]        # 0x434bc8
  40864b:	lea    rdx,[rip+0x21231]        # 0x429883
  408652:	call   0x407ea0
  408657:	jmp    0x408406
  40865c:	mov    ecx,0x1
  408661:	call   0x4082e0
  408666:	nop
  408667:	nop    WORD PTR [rax+rax*1+0x0]
  408670:	push   r15
  408672:	push   r14
  408674:	push   r13
  408676:	push   r12
  408678:	push   rbp
  408679:	push   rdi
  40867a:	push   rsi
  40867b:	push   rbx
  40867c:	sub    rsp,0x38
  408680:	mov    ebx,DWORD PTR [rsp+0xa0]
  408687:	mov    rdi,rcx
  40868a:	mov    QWORD PTR [rsp+0x88],rdx
  408692:	mov    QWORD PTR [rsp+0x90],r8
  40869a:	mov    rbp,r9
  40869d:	call   0x421d98
  4086a2:	mov    rsi,rax
  4086a5:	movzx  eax,BYTE PTR [rdi]
  4086a8:	cmp    al,0x7f
  4086aa:	ja     0x408709
  4086ac:	lea    rdx,[rip+0x23c0d]        # 0x42c2c0
  4086b3:	movzx  ecx,al
  4086b6:	mov    edx,DWORD PTR [rdx+rcx*4]
  4086b9:	test   edx,0x30000
  4086bf:	je     0x408700
  4086c1:	lea    rdx,[rsp+0x28]
  4086c6:	xor    r8d,r8d
  4086c9:	mov    rcx,rdi
  4086cc:	mov    QWORD PTR [rsp+0x28],rdi
  4086d1:	call   0x421d60
  4086d6:	cmp    DWORD PTR [rsp+0xa0],eax
  4086dd:	jbe    0x4086ef
  4086df:	mov    rdx,QWORD PTR [rsp+0x28]
  4086e4:	mov    eax,eax
  4086e6:	cmp    BYTE PTR [rdx],0x0
  4086e9:	je     0x4087a4
  4086ef:	mov    rax,QWORD PTR [rip+0x1b4aa]        # 0x423ba0
  4086f6:	jmp    0x408769
  4086f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408700:	and    dh,0x80
  408703:	jne    0x4087b5
  408709:	xor    r14d,r14d
  40870c:	test   rbx,rbx
  40870f:	mov    r12,rbx
  408712:	mov    r13,0xffffffffffffffff
  408719:	je     0x4087c7
  40871f:	nop
  408720:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  408725:	mov    r8,rsi
  408728:	mov    rdx,rdi
  40872b:	mov    rcx,r15
  40872e:	call   0x421d90
  408733:	test   eax,eax
  408735:	jne    0x40874c
  408737:	cmp    BYTE PTR [r15+rsi*1],0x0
  40873c:	je     0x4087d0
  408742:	cmp    r12,rbx
  408745:	mov    r12,r13
  408748:	cmove  r12,r14
  40874c:	add    r14,0x1
  408750:	cmp    rbx,r14
  408753:	jne    0x408720
  408755:	cmp    rbx,r12
  408758:	mov    rax,r12
  40875b:	ja     0x4087a4
  40875d:	cmp    r12,rbx
  408760:	je     0x4087c7
  408762:	mov    rax,QWORD PTR [rip+0x1b32f]        # 0x423a98
  408769:	mov    QWORD PTR [rip+0x2c4a8],rax        # 0x434c18
  408770:	call   QWORD PTR [rip+0x30806]        # 0x438f7c
  408776:	mov    r9d,DWORD PTR [rsp+0xa0]
  40877e:	mov    rdx,QWORD PTR [rsp+0x90]
  408786:	add    rax,0x60
  40878a:	mov    rcx,QWORD PTR [rsp+0x88]
  408792:	mov    r8,rbp
  408795:	mov    QWORD PTR [rip+0x2c42c],rax        # 0x434bc8
  40879c:	call   0x408340
  4087a1:	mov    rax,rbx
  4087a4:	add    rsp,0x38
  4087a8:	pop    rbx
  4087a9:	pop    rsi
  4087aa:	pop    rdi
  4087ab:	pop    rbp
  4087ac:	pop    r12
  4087ae:	pop    r13
  4087b0:	pop    r14
  4087b2:	pop    r15
  4087b4:	ret    
  4087b5:	cmp    BYTE PTR [rdi+0x2],0x0
  4087b9:	jne    0x408709
  4087bf:	cmp    al,0x7e
  4087c1:	je     0x4087d5
  4087c3:	cmp    al,0x2d
  4087c5:	je     0x4087e7
  4087c7:	mov    rax,QWORD PTR [rip+0x1b382]        # 0x423b50
  4087ce:	jmp    0x408769
  4087d0:	mov    rax,r14
  4087d3:	jmp    0x4087a4
  4087d5:	cmp    BYTE PTR [rdi+0x1],0x30
  4087d9:	jne    0x4087c7
  4087db:	mov    eax,DWORD PTR [rsp+0xa0]
  4087e2:	sub    eax,0x1
  4087e5:	jmp    0x4087a4
  4087e7:	cmp    BYTE PTR [rdi+0x1],0x31
  4087eb:	jne    0x4087c7
  4087ed:	jmp    0x4087db
  4087ef:	nop
  4087f0:	push   r13
  4087f2:	push   r12
  4087f4:	push   rbp
  4087f5:	push   rdi
  4087f6:	push   rsi
  4087f7:	push   rbx
  4087f8:	sub    rsp,0x48
  4087fc:	mov    rbx,QWORD PTR [rip+0x307c9]        # 0x438fcc
  408803:	mov    r12,rdx
  408806:	mov    r13,r8
  408809:	mov    rsi,rcx
  40880c:	call   rbx
  40880e:	mov    ecx,DWORD PTR [rax]
  408810:	call   0x421da8
  408815:	mov    rbp,rax
  408818:	call   rbx
  40881a:	mov    rbx,QWORD PTR [rip+0x1b29f]        # 0x423ac0
  408821:	mov    edi,DWORD PTR [rax]
  408823:	call   QWORD PTR [rip+0x30753]        # 0x438f7c
  408829:	lea    rcx,[rax+0x60]
  40882d:	mov    QWORD PTR [rsp+0x30],r13
  408832:	mov    QWORD PTR [rsp+0x28],r12
  408837:	mov    QWORD PTR [rsp+0x20],rbp
  40883c:	mov    r9d,edi
  40883f:	mov    r8,rsi
  408842:	mov    rdx,rbx
  408845:	call   0x407ea0
  40884a:	nop
  40884b:	add    rsp,0x48
  40884f:	pop    rbx
  408850:	pop    rsi
  408851:	pop    rdi
  408852:	pop    rbp
  408853:	pop    r12
  408855:	pop    r13
  408857:	ret    
  408858:	nop    DWORD PTR [rax+rax*1+0x0]
  408860:	sub    rsp,0x28
  408864:	call   0x4087f0
  408869:	mov    ecx,0x1
  40886e:	call   0x4082e0
  408873:	nop
  408874:	xchg   ax,ax
  408876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408880:	sub    rsp,0x38
  408884:	mov    QWORD PTR [rsp+0x50],r8
  408889:	lea    r8,[rsp+0x50]
  40888e:	mov    QWORD PTR [rsp+0x58],r9
  408893:	mov    QWORD PTR [rsp+0x28],r8
  408898:	call   0x41d3a0
  40889d:	add    rsp,0x38
  4088a1:	ret    
  4088a2:	nop    DWORD PTR [rax+0x0]
  4088a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088b0:	push   r12
  4088b2:	push   rbp
  4088b3:	push   rdi
  4088b4:	push   rsi
  4088b5:	push   rbx
  4088b6:	sub    rsp,0x20
  4088ba:	mov    ebx,edx
  4088bc:	mov    rsi,rcx
  4088bf:	mov    rbp,r8
  4088c2:	sub    ebx,0x1
  4088c5:	mov    rdi,r9
  4088c8:	js     0x4088f2
  4088ca:	nop    WORD PTR [rax+rax*1+0x0]
  4088d0:	mov    rdx,rsi
  4088d3:	mov    ecx,0x20
  4088d8:	sub    ebx,0x1
  4088db:	call   0x421de8
  4088e0:	mov    rdx,rsi
  4088e3:	mov    ecx,0x20
  4088e8:	call   0x421de8
  4088ed:	cmp    ebx,0xffffffff
  4088f0:	jne    0x4088d0
  4088f2:	mov    edx,DWORD PTR [rdi]
  4088f4:	cmp    edx,0x6
  4088f7:	ja     0x408af4
  4088fd:	lea    rax,[rip+0x1f9bc]        # 0x4282c0
  408904:	mov    ecx,edx
  408906:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40890a:	add    rax,rcx
  40890d:	jmp    rax
  40890f:	nop
  408910:	mov    r9d,DWORD PTR [rdi+0x10]
  408914:	mov    r8,QWORD PTR [rdi+0x8]
  408918:	lea    rdx,[rip+0x21217]        # 0x429b36
  40891f:	mov    rcx,rsi
  408922:	add    rsp,0x20
  408926:	pop    rbx
  408927:	pop    rsi
  408928:	pop    rdi
  408929:	pop    rbp
  40892a:	pop    r12
  40892c:	jmp    0x407ea0
  408931:	mov    rbx,QWORD PTR [rdi+0x10]
  408935:	mov    rbp,QWORD PTR [rdi+0x8]
  408939:	test   rbx,rbx
  40893c:	je     0x408b85
  408942:	mov    edi,DWORD PTR [rbx]
  408944:	mov    r8,rbp
  408947:	lea    rdx,[rip+0x20f51]        # 0x42989f
  40894e:	test   edi,edi
  408950:	jle    0x408a28
  408956:	lea    rdx,[rip+0x20f14]        # 0x429871
  40895d:	mov    rcx,rsi
  408960:	add    rbx,0x8
  408964:	call   0x407ea0
  408969:	mov    eax,DWORD PTR [rip+0x1ac11]        # 0x423580
  40896f:	lea    edx,[rax+0x1]
  408972:	lea    eax,[rdi-0x1]
  408975:	mov    DWORD PTR [rip+0x1ac05],edx        # 0x423580
  40897b:	lea    rdi,[rbx+rax*8+0x8]
  408980:	jmp    0x408988
  408982:	mov    edx,DWORD PTR [rip+0x1abf8]        # 0x423580
  408988:	add    rbx,0x8
  40898c:	mov    r9,QWORD PTR [rbx-0x8]
  408990:	xor    r8d,r8d
  408993:	mov    rcx,rsi
  408996:	call   0x4088b0
  40899b:	cmp    rbx,rdi
  40899e:	jne    0x408982
  4089a0:	mov    ebx,DWORD PTR [rip+0x1abda]        # 0x423580
  4089a6:	lea    eax,[rbx-0x1]
  4089a9:	sub    ebx,0x2
  4089ac:	mov    DWORD PTR [rip+0x1abce],eax        # 0x423580
  4089b2:	js     0x4089d6
  4089b4:	mov    rdx,rsi
  4089b7:	mov    ecx,0x20
  4089bc:	sub    ebx,0x1
  4089bf:	call   0x421de8
  4089c4:	mov    rdx,rsi
  4089c7:	mov    ecx,0x20
  4089cc:	call   0x421de8
  4089d1:	cmp    ebx,0xffffffff
  4089d4:	jne    0x4089b4
  4089d6:	mov    r8,rbp
  4089d9:	lea    rdx,[rip+0x1f8d6]        # 0x4282b6
  4089e0:	jmp    0x408a28
  4089e2:	mov    r12,QWORD PTR [rdi+0x8]
  4089e6:	lea    rbp,[rdi+0x10]
  4089ea:	lea    rdx,[rip+0x20ec9]        # 0x4298ba
  4089f1:	lea    rdi,[rip+0x20308]        # 0x428d00
  4089f8:	mov    rcx,rsi
  4089fb:	mov    r8,r12
  4089fe:	call   0x407ea0
  408a03:	movzx  ebx,BYTE PTR [rbp+0x0]
  408a07:	cmp    ebx,0x26
  408a0a:	je     0x408b30
  408a10:	jg     0x408b04
  408a16:	test   ebx,ebx
  408a18:	jne    0x408b70
  408a1e:	lea    rdx,[rip+0x20dc4]        # 0x4297e9
  408a25:	mov    r8,r12
  408a28:	mov    rcx,rsi
  408a2b:	add    rsp,0x20
  408a2f:	pop    rbx
  408a30:	pop    rsi
  408a31:	pop    rdi
  408a32:	pop    rbp
  408a33:	pop    r12
  408a35:	jmp    0x407ea0
  408a3a:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	test   rbp,rbp
  408a43:	je     0x408910
  408a49:	lea    rax,[rip+0x1f84c]        # 0x42829c
  408a50:	mov    r8,QWORD PTR [rdi+0x8]
  408a54:	lea    r9,[rip+0x1f839]        # 0x428294
  408a5b:	cmp    edx,0x2
  408a5e:	lea    rdx,[rip+0x20f2f]        # 0x429994
  408a65:	mov    rcx,rsi
  408a68:	cmovne r9,rax
  408a6c:	mov    ebx,DWORD PTR [rbp+0x10]
  408a6f:	mov    r12,QWORD PTR [rbp+0x18]
  408a73:	call   0x407ea0
  408a78:	mov    ecx,0x3
  408a7d:	mov    rdx,rbp
  408a80:	call   QWORD PTR [rbp+0x38]
  408a83:	mov    rcx,QWORD PTR [rbp+0x18]
  408a87:	test   rcx,rcx
  408a8a:	je     0x408aa2
  408a8c:	mov    rdx,rsi
  408a8f:	call   0x421e60
  408a94:	cmp    DWORD PTR [rdi],0x2
  408a97:	je     0x408aa2
  408a99:	mov    rcx,QWORD PTR [rbp+0x18]
  408a9d:	call   0x421e50
  408aa2:	mov    QWORD PTR [rbp+0x18],r12
  408aa6:	mov    DWORD PTR [rbp+0x10],ebx
  408aa9:	lea    rdx,[rip+0x20d39]        # 0x4297e9
  408ab0:	mov    r8,QWORD PTR [rdi+0x8]
  408ab4:	jmp    0x408a28
  408ab9:	nop    DWORD PTR [rax+0x0]
  408ac0:	mov    eax,DWORD PTR [rdi+0x10]
  408ac3:	lea    r9,[rip+0x1f7e1]        # 0x4282ab
  408aca:	mov    r8,QWORD PTR [rdi+0x8]
  408ace:	lea    rdx,[rip+0x20f7c]        # 0x429a51
  408ad5:	mov    rcx,rsi
  408ad8:	test   eax,eax
  408ada:	lea    rax,[rip+0x1f7cf]        # 0x4282b0
  408ae1:	cmove  r9,rax
  408ae5:	add    rsp,0x20
  408ae9:	pop    rbx
  408aea:	pop    rsi
  408aeb:	pop    rdi
  408aec:	pop    rbp
  408aed:	pop    r12
  408aef:	jmp    0x407ea0
  408af4:	mov    r8,QWORD PTR [rdi+0x8]
  408af8:	lea    rdx,[rip+0x20da0]        # 0x42989f
  408aff:	jmp    0x408a28
  408b04:	cmp    ebx,0x3e
  408b07:	je     0x408b30
  408b09:	jg     0x408b23
  408b0b:	cmp    ebx,0x3c
  408b0e:	je     0x408b30
  408b10:	mov    rdx,rsi
  408b13:	mov    ecx,ebx
  408b15:	call   0x421de8
  408b1a:	add    rbp,0x1
  408b1e:	jmp    0x408a03
  408b23:	lea    eax,[rbx-0x7f]
  408b26:	cmp    eax,0x80
  408b2b:	ja     0x408b10
  408b2d:	nop    DWORD PTR [rax]
  408b30:	mov    rdx,rsi
  408b33:	mov    ecx,0x26
  408b38:	call   0x421de8
  408b3d:	cmp    ebx,0x26
  408b40:	lea    rax,[rip+0x20179]        # 0x428cc0
  408b47:	je     0x408b77
  408b49:	add    rax,0x10
  408b4d:	cmp    ebx,DWORD PTR [rax]
  408b4f:	je     0x408b77
  408b51:	cmp    rax,rdi
  408b54:	jne    0x408b49
  408b56:	lea    rdx,[rip+0x20e4c]        # 0x4299a9
  408b5d:	mov    r8d,ebx
  408b60:	mov    rcx,rsi
  408b63:	call   0x407ea0
  408b68:	jmp    0x408b1a
  408b6a:	nop    WORD PTR [rax+rax*1+0x0]
  408b70:	cmp    ebx,0x1f
  408b73:	jg     0x408b10
  408b75:	jmp    0x408b30
  408b77:	lea    rcx,[rax+0x8]
  408b7b:	mov    rdx,rsi
  408b7e:	call   0x421e60
  408b83:	jmp    0x408b1a
  408b85:	add    rsp,0x20
  408b89:	pop    rbx
  408b8a:	pop    rsi
  408b8b:	pop    rdi
  408b8c:	pop    rbp
  408b8d:	pop    r12
  408b8f:	ret    
  408b90:	test   BYTE PTR [rdx+0x10],0x8
  408b94:	je     0x408ba0
  408b96:	repz ret 
  408b98:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	mov    rax,QWORD PTR [rcx+0x98]
  408ba7:	xor    edx,edx
  408ba9:	rex.W jmp rax
  408bac:	nop    DWORD PTR [rax+0x0]
  408bb0:	mov    rax,QWORD PTR [rip+0x1b0d1]        # 0x423c88
  408bb7:	lea    r10,[rip+0x20b3b]        # 0x4296f9
  408bbe:	lea    r11,[rip+0x20b51]        # 0x429716
  408bc5:	and    ecx,0x3
  408bc8:	cmp    ecx,0x2
  408bcb:	mov    QWORD PTR [rdx],rax
  408bce:	mov    QWORD PTR [rip+0x2c0d3],r10        # 0x434ca8
  408bd5:	lea    r10,[rip+0x20b17]        # 0x4296f3
  408bdc:	mov    QWORD PTR [rip+0x2c10d],r11        # 0x434cf0
  408be3:	lea    r11,[rip+0x20b14]        # 0x4296fe
  408bea:	lea    rdx,[rip+0x1fcb0]        # 0x4288a1
  408bf1:	mov    QWORD PTR [rip+0x2c0a0],r10        # 0x434c98
  408bf8:	lea    r10,[rip+0x20b05]        # 0x429704
  408bff:	mov    rax,QWORD PTR [rip+0x1ae1a]        # 0x423a20
  408c06:	mov    QWORD PTR [rip+0x2c0ab],r11        # 0x434cb8
  408c0d:	lea    r11,[rip+0x1fc8d]        # 0x4288a1
  408c14:	mov    QWORD PTR [rip+0x2c06d],rdx        # 0x434c88
  408c1b:	mov    QWORD PTR [rip+0x2c09e],r10        # 0x434cc0
  408c22:	lea    r10,[rip+0x20ac4]        # 0x4296ed
  408c29:	mov    rdx,QWORD PTR [rip+0x1ade8]        # 0x423a18
  408c30:	mov    r8,QWORD PTR [rip+0x1add9]        # 0x423a10
  408c37:	mov    r9,QWORD PTR [rip+0x1adca]        # 0x423a08
  408c3e:	mov    QWORD PTR [rip+0x2c083],r11        # 0x434cc8
  408c45:	mov    QWORD PTR [rip+0x2c084],r10        # 0x434cd0
  408c4c:	lea    r11,[rip+0x20b5a]        # 0x4297ad
  408c53:	lea    r10,[rip+0x20b60]        # 0x4297ba
  408c5a:	mov    QWORD PTR [rip+0x2c01f],rax        # 0x434c80
  408c61:	mov    QWORD PTR [rip+0x2c028],rdx        # 0x434c90
  408c68:	mov    QWORD PTR [rip+0x2c031],r8        # 0x434ca0
  408c6f:	mov    QWORD PTR [rip+0x2c03a],r9        # 0x434cb0
  408c76:	mov    QWORD PTR [rip+0x2c05b],r11        # 0x434cd8
  408c7d:	mov    QWORD PTR [rip+0x2c05c],r10        # 0x434ce0
  408c84:	je     0x408cc0
  408c86:	cmp    ecx,0x3
  408c89:	je     0x408ca4
  408c8b:	cmp    ecx,0x1
  408c8e:	je     0x408ca4
  408c90:	lea    rax,[rip+0x20a76]        # 0x42970d
  408c97:	mov    QWORD PTR [rip+0x2c04a],rax        # 0x434ce8
  408c9e:	mov    eax,0x16
  408ca3:	ret    
  408ca4:	lea    rax,[rip+0x20a60]        # 0x42970b
  408cab:	mov    QWORD PTR [rip+0x2c036],rax        # 0x434ce8
  408cb2:	mov    eax,0x16
  408cb7:	ret    
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	lea    rcx,[rip+0x20a8d]        # 0x429754
  408cc7:	mov    QWORD PTR [rip+0x2c01a],rcx        # 0x434ce8
  408cce:	mov    BYTE PTR [r9],0x20
  408cd2:	mov    BYTE PTR [r8],0x20
  408cd6:	mov    BYTE PTR [rdx],0x20
  408cd9:	mov    BYTE PTR [rax],0x20
  408cdc:	lea    rax,[rip+0x1f5f9]        # 0x4282dc
  408ce3:	mov    QWORD PTR [rip+0x2bfd6],rax        # 0x434cc0
  408cea:	mov    eax,0x8
  408cef:	ret    
  408cf0:	lea    rax,[rip+0x20a8c]        # 0x429783
  408cf7:	and    ecx,0x12
  408cfa:	mov    QWORD PTR [rip+0x2bf7f],rax        # 0x434c80
  408d01:	lea    rax,[rip+0x20a77]        # 0x42977f
  408d08:	cmp    ecx,0x2
  408d0b:	mov    QWORD PTR [rip+0x2bf76],rax        # 0x434c88
  408d12:	lea    rax,[rip+0x20a5e]        # 0x429777
  408d19:	mov    QWORD PTR [rip+0x2bf70],rax        # 0x434c90
  408d20:	lea    rax,[rip+0x20a40]        # 0x429767
  408d27:	mov    QWORD PTR [rip+0x2bf72],rax        # 0x434ca0
  408d2e:	lea    rax,[rip+0x20a36]        # 0x42976b
  408d35:	mov    QWORD PTR [rip+0x2bf6c],rax        # 0x434ca8
  408d3c:	lea    rax,[rip+0x20a44]        # 0x429787
  408d43:	mov    QWORD PTR [rip+0x2bfa6],rax        # 0x434cf0
  408d4a:	lea    rax,[rip+0x20a12]        # 0x429763
  408d51:	mov    QWORD PTR [rip+0x2bf40],rax        # 0x434c98
  408d58:	lea    rax,[rip+0x209f8]        # 0x429757
  408d5f:	mov    QWORD PTR [rip+0x2bf4a],rax        # 0x434cb0
  408d66:	lea    rax,[rip+0x20a02]        # 0x42976f
  408d6d:	mov    QWORD PTR [rip+0x2bf44],rax        # 0x434cb8
  408d74:	lea    rax,[rip+0x20a00]        # 0x42977b
  408d7b:	mov    QWORD PTR [rip+0x2bf3e],rax        # 0x434cc0
  408d82:	lea    rax,[rip+0x209ea]        # 0x429773
  408d89:	mov    QWORD PTR [rip+0x2bf38],rax        # 0x434cc8
  408d90:	lea    rax,[rip+0x209c4]        # 0x42975b
  408d97:	mov    QWORD PTR [rip+0x2bf32],rax        # 0x434cd0
  408d9e:	lea    rax,[rip+0x20a0f]        # 0x4297b4
  408da5:	mov    QWORD PTR [rip+0x2bf2c],rax        # 0x434cd8
  408dac:	lea    rax,[rip+0x20a0b]        # 0x4297be
  408db3:	mov    QWORD PTR [rip+0x2bf26],rax        # 0x434ce0
  408dba:	je     0x408e35
  408dbc:	jbe    0x408e10
  408dbe:	cmp    ecx,0x10
  408dc1:	je     0x408df0
  408dc3:	cmp    ecx,0x12
  408dc6:	jne    0x408e32
  408dc8:	mov    rax,QWORD PTR [rip+0x1aeb9]        # 0x423c88
  408dcf:	mov    QWORD PTR [rdx],rax
  408dd2:	mov    rax,QWORD PTR [rip+0x1aeb7]        # 0x423c90
  408dd9:	mov    QWORD PTR [rip+0x2bf08],rax        # 0x434ce8
  408de0:	mov    eax,0x13
  408de5:	ret    
  408de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408df0:	mov    rax,QWORD PTR [rip+0x1ae89]        # 0x423c80
  408df7:	mov    QWORD PTR [rdx],rax
  408dfa:	mov    rax,QWORD PTR [rip+0x1ae8f]        # 0x423c90
  408e01:	mov    QWORD PTR [rip+0x2bee0],rax        # 0x434ce8
  408e08:	mov    eax,0x13
  408e0d:	ret    
  408e0e:	xchg   ax,ax
  408e10:	test   ecx,ecx
  408e12:	jne    0x408e32
  408e14:	mov    rax,QWORD PTR [rip+0x1af15]        # 0x423d30
  408e1b:	mov    QWORD PTR [rdx],rax
  408e1e:	lea    rax,[rip+0x20921]        # 0x429746
  408e25:	mov    QWORD PTR [rip+0x2bebc],rax        # 0x434ce8
  408e2c:	mov    eax,0x18
  408e31:	ret    
  408e32:	xor    eax,eax
  408e34:	ret    
  408e35:	mov    rax,QWORD PTR [rip+0x1aefc]        # 0x423d38
  408e3c:	mov    QWORD PTR [rdx],rax
  408e3f:	lea    rax,[rip+0x20900]        # 0x429746
  408e46:	mov    QWORD PTR [rip+0x2be9b],rax        # 0x434ce8
  408e4d:	mov    eax,0x18
  408e52:	ret    
  408e53:	nop    DWORD PTR [rax]
  408e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e60:	push   rsi
  408e61:	push   rbx
  408e62:	sub    rsp,0x38
  408e66:	cmp    rcx,0xffffffffffffffff
  408e6a:	mov    r9,rdx
  408e6d:	je     0x408ea3
  408e6f:	movabs r10,0x7fffffffffffffff
  408e79:	movsxd r8,r8d
  408e7c:	mov    rax,r10
  408e7f:	cqo    
  408e81:	idiv   r8
  408e84:	cmp    rax,r9
  408e87:	jl     0x408ed0
  408e89:	imul   r8,r9
  408e8d:	sub    r10,r8
  408e90:	cmp    rcx,r10
  408e93:	jg     0x408ed0
  408e95:	lea    rsi,[rcx+r8*1]
  408e99:	mov    rax,rsi
  408e9c:	add    rsp,0x38
  408ea0:	pop    rbx
  408ea1:	pop    rsi
  408ea2:	ret    
  408ea3:	mov    QWORD PTR [rsp+0x28],rcx
  408ea8:	mov    rbx,QWORD PTR [rip+0x3011d]        # 0x438fcc
  408eaf:	call   rbx
  408eb1:	mov    eax,DWORD PTR [rax]
  408eb3:	mov    rcx,QWORD PTR [rsp+0x28]
  408eb8:	test   eax,eax
  408eba:	mov    rsi,rcx
  408ebd:	jne    0x408e99
  408ebf:	call   rbx
  408ec1:	mov    DWORD PTR [rax],0x16
  408ec7:	jmp    0x408e99
  408ec9:	nop    DWORD PTR [rax+0x0]
  408ed0:	call   QWORD PTR [rip+0x300f6]        # 0x438fcc
  408ed6:	mov    rsi,0xffffffffffffffff
  408edd:	mov    DWORD PTR [rax],0x22
  408ee3:	jmp    0x408e99
  408ee5:	nop
  408ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ef0:	push   r15
  408ef2:	push   r14
  408ef4:	push   r13
  408ef6:	push   r12
  408ef8:	push   rbp
  408ef9:	push   rdi
  408efa:	push   rsi
  408efb:	push   rbx
  408efc:	sub    rsp,0x48
  408f00:	mov    rax,QWORD PTR [rdx]
  408f03:	cmp    rcx,0xffffffffffffffff
  408f07:	mov    QWORD PTR [rsp+0x38],rax
  408f0c:	je     0x408f99
  408f12:	mov    r13d,r9d
  408f15:	mov    r12,r8
  408f18:	mov    rbp,rdx
  408f1b:	mov    QWORD PTR [rsp+0x28],rcx
  408f20:	mov    r15,QWORD PTR [rip+0x300a5]        # 0x438fcc
  408f27:	call   r15
  408f2a:	mov    rcx,QWORD PTR [rsp+0x38]
  408f2f:	lea    rdx,[rsp+0x38]
  408f34:	mov    r8d,0xa
  408f3a:	mov    DWORD PTR [rax],0x0
  408f40:	call   0x421d60
  408f45:	mov    r14d,eax
  408f48:	call   r15
  408f4b:	mov    eax,DWORD PTR [rax]
  408f4d:	test   eax,eax
  408f4f:	jne    0x408f99
  408f51:	mov    rdi,QWORD PTR [rsp+0x38]
  408f56:	mov    rsi,QWORD PTR [rip+0x30197]        # 0x4390f4
  408f5d:	jmp    0x408f65
  408f5f:	nop
  408f60:	mov    QWORD PTR [rsp+0x38],rdi
  408f65:	movzx  ecx,BYTE PTR [rdi]
  408f68:	mov    rbx,rdi
  408f6b:	add    rdi,0x1
  408f6f:	call   rsi
  408f71:	test   eax,eax
  408f73:	jne    0x408f60
  408f75:	cmp    r12,rbx
  408f78:	jne    0x408f90
  408f7a:	mov    rcx,QWORD PTR [rsp+0x28]
  408f7f:	mov    QWORD PTR [rbp+0x0],r12
  408f83:	mov    r8d,r13d
  408f86:	mov    rdx,r14
  408f89:	call   0x408e60
  408f8e:	jmp    0x408fa0
  408f90:	call   r15
  408f93:	mov    DWORD PTR [rax],0x16
  408f99:	mov    rax,0xffffffffffffffff
  408fa0:	add    rsp,0x48
  408fa4:	pop    rbx
  408fa5:	pop    rsi
  408fa6:	pop    rdi
  408fa7:	pop    rbp
  408fa8:	pop    r12
  408faa:	pop    r13
  408fac:	pop    r14
  408fae:	pop    r15
  408fb0:	ret    
  408fb1:	nop    DWORD PTR [rax+rax*1+0x0]
  408fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fc0:	push   rbp
  408fc1:	push   rdi
  408fc2:	push   rsi
  408fc3:	push   rbx
  408fc4:	sub    rsp,0x38
  408fc8:	mov    edx,0x3a
  408fcd:	mov    rbx,rcx
  408fd0:	call   0x421dc0
  408fd5:	test   rax,rax
  408fd8:	je     0x409070
  408fde:	lea    rsi,[rsp+0x20]
  408fe3:	mov    r8,rax
  408fe6:	xor    ecx,ecx
  408fe8:	mov    r9d,0xe10
  408fee:	mov    QWORD PTR [rsp+0x20],rbx
  408ff3:	mov    rdx,rsi
  408ff6:	call   0x408ef0
  408ffb:	mov    rbx,rax
  408ffe:	mov    rax,QWORD PTR [rsp+0x20]
  409003:	mov    edx,0x3a
  409008:	lea    rcx,[rax+0x1]
  40900c:	mov    QWORD PTR [rsp+0x20],rcx
  409011:	call   0x421dc0
  409016:	test   rax,rax
  409019:	mov    r8,rax
  40901c:	je     0x40915f
  409022:	mov    r9d,0x3c
  409028:	mov    rdx,rsi
  40902b:	mov    rcx,rbx
  40902e:	call   0x408ef0
  409033:	mov    rdi,rax
  409036:	mov    rax,QWORD PTR [rsp+0x20]
  40903b:	lea    rbx,[rax+0x1]
  40903f:	mov    rcx,rbx
  409042:	mov    QWORD PTR [rsp+0x20],rbx
  409047:	call   0x421d98
  40904c:	lea    r8,[rbx+rax*1]
  409050:	mov    r9d,0x1
  409056:	mov    rdx,rsi
  409059:	mov    rcx,rdi
  40905c:	call   0x408ef0
  409061:	mov    rbp,rax
  409064:	mov    rax,rbp
  409067:	add    rsp,0x38
  40906b:	pop    rbx
  40906c:	pop    rsi
  40906d:	pop    rdi
  40906e:	pop    rbp
  40906f:	ret    
  409070:	lea    rdx,[rip+0x1f26c]        # 0x4282e3
  409077:	mov    rcx,rbx
  40907a:	call   0x421d80
  40907f:	test   rax,rax
  409082:	je     0x409180
  409088:	mov    edx,0x48
  40908d:	mov    rcx,rbx
  409090:	mov    QWORD PTR [rsp+0x28],rbx
  409095:	xor    ebp,ebp
  409097:	call   0x421dc0
  40909c:	test   rax,rax
  40909f:	je     0x4090c7
  4090a1:	lea    rdx,[rsp+0x28]
  4090a6:	mov    r9d,0xe10
  4090ac:	mov    r8,rax
  4090af:	xor    ecx,ecx
  4090b1:	call   0x408ef0
  4090b6:	mov    rbp,rax
  4090b9:	mov    rax,QWORD PTR [rsp+0x28]
  4090be:	lea    rbx,[rax+0x1]
  4090c2:	mov    QWORD PTR [rsp+0x28],rbx
  4090c7:	mov    edx,0x4d
  4090cc:	mov    rcx,rbx
  4090cf:	call   0x421dc0
  4090d4:	test   rax,rax
  4090d7:	je     0x409100
  4090d9:	lea    rdx,[rsp+0x28]
  4090de:	mov    rcx,rbp
  4090e1:	mov    r9d,0x3c
  4090e7:	mov    r8,rax
  4090ea:	call   0x408ef0
  4090ef:	mov    rbp,rax
  4090f2:	mov    rax,QWORD PTR [rsp+0x28]
  4090f7:	lea    rbx,[rax+0x1]
  4090fb:	mov    QWORD PTR [rsp+0x28],rbx
  409100:	mov    edx,0x53
  409105:	mov    rcx,rbx
  409108:	call   0x421dc0
  40910d:	test   rax,rax
  409110:	je     0x409139
  409112:	lea    rdx,[rsp+0x28]
  409117:	mov    rcx,rbp
  40911a:	mov    r9d,0x1
  409120:	mov    r8,rax
  409123:	call   0x408ef0
  409128:	mov    rbp,rax
  40912b:	mov    rax,QWORD PTR [rsp+0x28]
  409130:	lea    rbx,[rax+0x1]
  409134:	mov    QWORD PTR [rsp+0x28],rbx
  409139:	mov    rdi,QWORD PTR [rip+0x2ffb4]        # 0x4390f4
  409140:	jmp    0x409147
  409142:	mov    QWORD PTR [rsp+0x28],rbx
  409147:	movzx  ecx,BYTE PTR [rbx]
  40914a:	add    rbx,0x1
  40914e:	mov    esi,ecx
  409150:	call   rdi
  409152:	test   eax,eax
  409154:	jne    0x409142
  409156:	test   sil,sil
  409159:	je     0x409064
  40915f:	call   QWORD PTR [rip+0x2fe67]        # 0x438fcc
  409165:	mov    rbp,0xffffffffffffffff
  40916c:	mov    DWORD PTR [rax],0x16
  409172:	jmp    0x409064
  409177:	nop    WORD PTR [rax+rax*1+0x0]
  409180:	mov    rcx,rbx
  409183:	call   0x421d98
  409188:	cmp    rax,0x6
  40918c:	jne    0x40915f
  40918e:	movzx  eax,WORD PTR [rbx]
  409191:	lea    rbp,[rsp+0x22]
  409196:	lea    rdi,[rsp+0x28]
  40919b:	lea    rsi,[rsp+0x20]
  4091a0:	mov    r9d,0xe10
  4091a6:	xor    ecx,ecx
  4091a8:	mov    r8,rbp
  4091ab:	mov    rdx,rdi
  4091ae:	mov    BYTE PTR [rsp+0x22],0x0
  4091b3:	mov    QWORD PTR [rsp+0x28],rsi
  4091b8:	mov    WORD PTR [rsp+0x20],ax
  4091bd:	call   0x408ef0
  4091c2:	movzx  edx,WORD PTR [rbx+0x2]
  4091c6:	mov    r8,rbp
  4091c9:	mov    r9d,0x3c
  4091cf:	mov    rcx,rax
  4091d2:	mov    BYTE PTR [rsp+0x22],0x0
  4091d7:	mov    QWORD PTR [rsp+0x28],rsi
  4091dc:	mov    WORD PTR [rsp+0x20],dx
  4091e1:	mov    rdx,rdi
  4091e4:	call   0x408ef0
  4091e9:	movzx  edx,WORD PTR [rbx+0x4]
  4091ed:	mov    r8,rbp
  4091f0:	mov    r9d,0x1
  4091f6:	mov    rcx,rax
  4091f9:	mov    BYTE PTR [rsp+0x22],0x0
  4091fe:	mov    QWORD PTR [rsp+0x28],rsi
  409203:	mov    WORD PTR [rsp+0x20],dx
  409208:	mov    rdx,rdi
  40920b:	call   0x408ef0
  409210:	mov    rbp,rax
  409213:	jmp    0x409064
  409218:	nop    DWORD PTR [rax+rax*1+0x0]
  409220:	push   r13
  409222:	push   r12
  409224:	push   rbp
  409225:	push   rdi
  409226:	push   rsi
  409227:	push   rbx
  409228:	sub    rsp,0x38
  40922c:	mov    r12,QWORD PTR [rip+0x1a9ed]        # 0x423c20
  409233:	mov    r13,QWORD PTR [rcx+0x28]
  409237:	lea    rsi,[rip+0x21e91]        # 0x42b0cf
  40923e:	cmp    WORD PTR [rdx+0x8],0x8000
  409244:	mov    rdi,rdx
  409247:	mov    rbx,rcx
  40924a:	cmovne rsi,QWORD PTR [rip+0x1a896]        # 0x423ae8
  409252:	mov    rbp,QWORD PTR [rip+0x2fd23]        # 0x438f7c
  409259:	call   rbp
  40925b:	lea    rcx,[rax+0x60]
  40925f:	mov    rdx,r12
  409262:	mov    r8,r13
  409265:	call   0x407ea0
  40926a:	movzx  r12d,WORD PTR [rdi+0xc]
  40926f:	cmp    r12w,0x1
  409274:	jbe    0x4092c0
  409276:	mov    r13,QWORD PTR [rdi+0x50]
  40927a:	mov    rdi,QWORD PTR [rip+0x1a837]        # 0x423ab8
  409281:	call   rbp
  409283:	lea    rcx,[rax+0x60]
  409287:	mov    QWORD PTR [rsp+0x20],rsi
  40928c:	movzx  r8d,r12w
  409290:	mov    r9,r13
  409293:	mov    rdx,rdi
  409296:	call   0x407ea0
  40929b:	mov    edx,0x1
  4092a0:	mov    rcx,rbx
  4092a3:	call   QWORD PTR [rbx+0x98]
  4092a9:	add    rsp,0x38
  4092ad:	pop    rbx
  4092ae:	pop    rsi
  4092af:	pop    rdi
  4092b0:	pop    rbp
  4092b1:	pop    r12
  4092b3:	pop    r13
  4092b5:	ret    
  4092b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092c0:	mov    r12,QWORD PTR [rdi+0x50]
  4092c4:	mov    rdi,QWORD PTR [rip+0x1a8e5]        # 0x423bb0
  4092cb:	call   rbp
  4092cd:	lea    rcx,[rax+0x60]
  4092d1:	mov    r9,rsi
  4092d4:	mov    r8,r12
  4092d7:	mov    rdx,rdi
  4092da:	call   0x407ea0
  4092df:	jmp    0x40929b
  4092e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092f0:	push   rbp
  4092f1:	push   rdi
  4092f2:	push   rsi
  4092f3:	push   rbx
  4092f4:	sub    rsp,0x48
  4092f8:	mov    rbx,QWORD PTR [rdx]
  4092fb:	mov    rsi,rcx
  4092fe:	mov    r8d,DWORD PTR [rbx+0x10]
  409302:	mov    rdi,QWORD PTR [rbx+0x38]
  409306:	test   r8b,0x40
  40930a:	jne    0x409410
  409310:	mov    rcx,QWORD PTR [rdx+0x8]
  409314:	mov    QWORD PTR [rbx+0x18],rcx
  409318:	test   BYTE PTR [rsi+0x12],0x8
  40931c:	je     0x409330
  40931e:	test   r8d,0x100
  409325:	mov    ebp,0x1
  40932a:	jne    0x4093d0
  409330:	movzx  eax,WORD PTR [rbx+0x8]
  409334:	cmp    ax,0x8000
  409338:	je     0x409430
  40933e:	lea    r10,[rax+rax*2]
  409342:	mov    r9,QWORD PTR [rsi+0x78]
  409346:	and    r8d,0x4
  40934a:	lea    rax,[rax+r10*4]
  40934e:	lea    r10,[r9+rax*8]
  409352:	jne    0x4093e0
  409358:	mov    eax,0xffff8000
  40935d:	mov    WORD PTR [r10+0x4],ax
  409362:	movzx  eax,WORD PTR [rbx]
  409365:	cmp    ax,0x8000
  409369:	je     0x4093ea
  40936b:	movzx  r8d,WORD PTR [rbx+0x2]
  409370:	mov    WORD PTR [r10+0x4],ax
  409375:	mov    eax,DWORD PTR [rdx+0x10]
  409378:	or     eax,0x10
  40937b:	mov    WORD PTR [r10+0x6],r8w
  409380:	mov    DWORD PTR [rdx+0x10],eax
  409383:	mov    r8d,DWORD PTR [r10+0x10]
  409387:	mov    QWORD PTR [r10+0x18],rcx
  40938b:	and    eax,0xf00000ff
  409390:	and    r8d,0xfffff00
  409397:	or     r8d,eax
  40939a:	mov    DWORD PTR [r10+0x10],r8d
  40939e:	and    r8d,0x4
  4093a2:	je     0x4093f0
  4093a4:	movzx  eax,WORD PTR [r10+0xe]
  4093a9:	add    eax,0x1
  4093ac:	cmp    ax,WORD PTR [r10+0xc]
  4093b1:	mov    WORD PTR [r10+0xe],ax
  4093b6:	jbe    0x4093f0
  4093b8:	test   BYTE PTR [rsi+0x10],0x4
  4093bc:	mov    ebp,0xffffffff
  4093c1:	je     0x4093d0
  4093c3:	mov    rdx,r10
  4093c6:	mov    rcx,rsi
  4093c9:	call   0x409220
  4093ce:	xchg   ax,ax
  4093d0:	mov    eax,ebp
  4093d2:	add    rsp,0x48
  4093d6:	pop    rbx
  4093d7:	pop    rsi
  4093d8:	pop    rdi
  4093d9:	pop    rbp
  4093da:	ret    
  4093db:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e0:	movzx  eax,WORD PTR [r10+0x4]
  4093e5:	cmp    ax,WORD PTR [rbx]
  4093e8:	jne    0x409450
  4093ea:	mov    eax,DWORD PTR [rdx+0x10]
  4093ed:	jmp    0x409383
  4093ef:	nop
  4093f0:	xor    ebp,ebp
  4093f2:	test   rdi,rdi
  4093f5:	je     0x4093d0
  4093f7:	mov    rdx,r10
  4093fa:	mov    rcx,rsi
  4093fd:	call   rdi
  4093ff:	mov    eax,ebp
  409401:	add    rsp,0x48
  409405:	pop    rbx
  409406:	pop    rsi
  409407:	pop    rdi
  409408:	pop    rbp
  409409:	ret    
  40940a:	nop    WORD PTR [rax+rax*1+0x0]
  409410:	mov    rcx,QWORD PTR [rbx+0x18]
  409414:	mov    QWORD PTR [rsp+0x38],rdx
  409419:	call   0x421e50
  40941e:	mov    r8d,DWORD PTR [rbx+0x10]
  409422:	mov    rdx,QWORD PTR [rsp+0x38]
  409427:	jmp    0x409310
  40942c:	nop    DWORD PTR [rax+0x0]
  409430:	movzx  eax,WORD PTR [rbx+0x2]
  409434:	mov    r10,rbx
  409437:	mov    WORD PTR [rbx+0x6],ax
  40943b:	movzx  eax,WORD PTR [rbx]
  40943e:	mov    WORD PTR [rbx+0x4],ax
  409442:	mov    eax,DWORD PTR [rdx+0x10]
  409445:	jmp    0x40938b
  40944a:	nop    WORD PTR [rax+rax*1+0x0]
  409450:	lea    rdx,[rax+rax*2]
  409454:	mov    rdi,QWORD PTR [rbx+0x50]
  409458:	mov    rsi,QWORD PTR [r10+0x50]
  40945c:	mov    rbx,QWORD PTR [rip+0x1a6c5]        # 0x423b28
  409463:	lea    rax,[rax+rdx*4]
  409467:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  40946c:	call   QWORD PTR [rip+0x2fb0a]        # 0x438f7c
  409472:	lea    rcx,[rax+0x60]
  409476:	mov    r9,rdi
  409479:	mov    r8,rsi
  40947c:	mov    QWORD PTR [rsp+0x20],rbp
  409481:	mov    rdx,rbx
  409484:	mov    ebp,0xffffffff
  409489:	call   0x407ea0
  40948e:	jmp    0x4093d0
  409493:	nop    DWORD PTR [rax]
  409496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094a0:	push   r13
  4094a2:	push   r12
  4094a4:	push   rbp
  4094a5:	push   rdi
  4094a6:	push   rsi
  4094a7:	push   rbx
  4094a8:	sub    rsp,0x38
  4094ac:	mov    rsi,rcx
  4094af:	mov    rcx,QWORD PTR [rcx+0x78]
  4094b3:	mov    eax,DWORD PTR [rsi+0xb0]
  4094b9:	mov    rbx,rcx
  4094bc:	movzx  r10d,WORD PTR [rbx+0x2]
  4094c1:	cmp    r10d,edx
  4094c4:	je     0x409510
  4094c6:	sub    eax,0x1
  4094c9:	add    rbx,0x68
  4094cd:	test   eax,eax
  4094cf:	jg     0x4094bc
  4094d1:	movzx  eax,dl
  4094d4:	cmp    eax,0x7f
  4094d7:	ja     0x4094f0
  4094d9:	lea    r10,[rip+0x22de0]        # 0x42c2c0
  4094e0:	test   DWORD PTR [r10+rax*4],0x30000
  4094e8:	jne    0x4095a9
  4094ee:	xchg   ax,ax
  4094f0:	test   BYTE PTR [rsi+0x10],0x4
  4094f4:	jne    0x4095dc
  4094fa:	mov    eax,0xffffffff
  4094ff:	add    rsp,0x38
  409503:	pop    rbx
  409504:	pop    rsi
  409505:	pop    rdi
  409506:	pop    rbp
  409507:	pop    r12
  409509:	pop    r13
  40950b:	ret    
  40950c:	nop    DWORD PTR [rax+0x0]
  409510:	mov    eax,DWORD PTR [rbx+0x10]
  409513:	test   eax,0x280000
  409518:	je     0x409590
  40951a:	cmp    eax,0x80100
  40951f:	jne    0x4094f0
  409521:	mov    r13,QWORD PTR [rbx+0x50]
  409525:	test   r13,r13
  409528:	je     0x4094f0
  40952a:	test   BYTE PTR [rsi+0x10],0x4
  40952e:	je     0x4094fa
  409530:	mov    r12,QWORD PTR [rsi+0x20]
  409534:	mov    rbp,QWORD PTR [rip+0x1a5a5]        # 0x423ae0
  40953b:	mov    rdi,QWORD PTR [rip+0x2fa3a]        # 0x438f7c
  409542:	call   rdi
  409544:	lea    rcx,[rax+0x60]
  409548:	mov    r9,r13
  40954b:	mov    r8,r12
  40954e:	mov    rdx,rbp
  409551:	call   0x407ea0
  409556:	mov    rbx,QWORD PTR [rbx+0x40]
  40955a:	test   rbx,rbx
  40955d:	je     0x409574
  40955f:	call   rdi
  409561:	lea    rdx,[rip+0x203b1]        # 0x429919
  409568:	lea    rcx,[rax+0x60]
  40956c:	mov    r8,rbx
  40956f:	call   0x407ea0
  409574:	call   rdi
  409576:	lea    rdx,[rax+0x60]
  40957a:	mov    ecx,0xa
  40957f:	call   0x421e68
  409584:	jmp    0x409607
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	xor    eax,eax
  409592:	mov    QWORD PTR [r8],rbx
  409595:	mov    DWORD PTR [r9],0x1
  40959c:	add    rsp,0x38
  4095a0:	pop    rbx
  4095a1:	pop    rsi
  4095a2:	pop    rdi
  4095a3:	pop    rbp
  4095a4:	pop    r12
  4095a6:	pop    r13
  4095a8:	ret    
  4095a9:	movzx  eax,WORD PTR [rsi+0xac]
  4095b0:	cmp    ax,0x8000
  4095b4:	je     0x4094f0
  4095ba:	lea    rdx,[rax+rax*2]
  4095be:	lea    rax,[rax+rdx*4]
  4095c2:	lea    rax,[rcx+rax*8]
  4095c6:	mov    QWORD PTR [r8],rax
  4095c9:	xor    eax,eax
  4095cb:	sub    QWORD PTR [rsi+0x18],0x1
  4095d0:	mov    DWORD PTR [r9],0x1
  4095d7:	jmp    0x4094ff
  4095dc:	mov    DWORD PTR [rsp+0x2c],edx
  4095e0:	mov    rdi,QWORD PTR [rsi+0x20]
  4095e4:	mov    rbx,QWORD PTR [rip+0x1a505]        # 0x423af0
  4095eb:	call   QWORD PTR [rip+0x2f98b]        # 0x438f7c
  4095f1:	mov    edx,DWORD PTR [rsp+0x2c]
  4095f5:	lea    rcx,[rax+0x60]
  4095f9:	mov    r8,rdi
  4095fc:	mov    r9d,edx
  4095ff:	mov    rdx,rbx
  409602:	call   0x407ea0
  409607:	mov    rcx,rsi
  40960a:	mov    edx,0x1
  40960f:	call   QWORD PTR [rsi+0x98]
  409615:	mov    ecx,0x1
  40961a:	call   0x421f40
  40961f:	nop
  409620:	push   rdi
  409621:	push   rsi
  409622:	push   rbx
  409623:	sub    rsp,0x20
  409627:	test   rcx,rcx
  40962a:	je     0x409631
  40962c:	cmp    BYTE PTR [rcx],0x0
  40962f:	jne    0x409660
  409631:	call   QWORD PTR [rip+0x2f945]        # 0x438f7c
  409637:	lea    rcx,[rip+0x20197]        # 0x4297d5
  40963e:	lea    r9,[rax+0x30]
  409642:	mov    r8d,0x2
  409648:	mov    edx,0x1
  40964d:	add    rsp,0x20
  409651:	pop    rbx
  409652:	pop    rsi
  409653:	pop    rdi
  409654:	jmp    0x421e38
  409659:	nop    DWORD PTR [rax+0x0]
  409660:	call   0x4080f0
  409665:	cmp    BYTE PTR [rax],0x0
  409668:	mov    rbx,rax
  40966b:	jne    0x409675
  40966d:	add    rsp,0x20
  409671:	pop    rbx
  409672:	pop    rsi
  409673:	pop    rdi
  409674:	ret    
  409675:	mov    rdi,QWORD PTR [rip+0x2f900]        # 0x438f7c
  40967c:	jmp    0x4096ba
  40967e:	xchg   ax,ax
  409680:	call   rdi
  409682:	mov    rdx,rsi
  409685:	lea    r9,[rax+0x30]
  409689:	mov    r8d,0x1
  40968f:	sub    rdx,rbx
  409692:	mov    rcx,rbx
  409695:	call   0x421e38
  40969a:	call   rdi
  40969c:	lea    rdx,[rax+0x30]
  4096a0:	mov    ecx,0x27
  4096a5:	call   0x421e68
  4096aa:	mov    rcx,rsi
  4096ad:	call   0x4080f0
  4096b2:	cmp    BYTE PTR [rax],0x0
  4096b5:	mov    rbx,rax
  4096b8:	je     0x40966d
  4096ba:	call   rdi
  4096bc:	lea    rdx,[rax+0x30]
  4096c0:	mov    ecx,0x27
  4096c5:	call   0x421e68
  4096ca:	mov    edx,0x27
  4096cf:	mov    rcx,rbx
  4096d2:	call   0x421dc0
  4096d7:	test   rax,rax
  4096da:	mov    rsi,rax
  4096dd:	jne    0x409680
  4096df:	call   rdi
  4096e1:	lea    rdx,[rax+0x30]
  4096e5:	mov    rcx,rbx
  4096e8:	call   0x421e60
  4096ed:	call   rdi
  4096ef:	lea    rdx,[rax+0x30]
  4096f3:	mov    ecx,0x27
  4096f8:	add    rsp,0x20
  4096fc:	pop    rbx
  4096fd:	pop    rsi
  4096fe:	pop    rdi
  4096ff:	jmp    0x421e68
  409704:	xchg   ax,ax
  409706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409710:	push   rsi
  409711:	push   rbx
  409712:	sub    rsp,0x28
  409716:	mov    eax,DWORD PTR [rcx]
  409718:	test   al,0x2
  40971a:	je     0x409791
  40971c:	mov    rbx,rcx
  40971f:	movzx  ecx,WORD PTR [rdx]
  409722:	mov    rsi,r8
  409725:	movzx  edx,cl
  409728:	cmp    dl,0x7f
  40972b:	ja     0x409770
  40972d:	lea    r9,[rip+0x22b8c]        # 0x42c2c0
  409734:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  40973a:	je     0x409770
  40973c:	movzx  r8d,cx
  409740:	mov    rcx,QWORD PTR [rip+0x2b481]        # 0x434bc8
  409747:	lea    rdx,[rip+0x1eb9c]        # 0x4282ea
  40974e:	call   0x407ea0
  409753:	mov    eax,DWORD PTR [rbx]
  409755:	and    eax,0x1001
  40975a:	cmp    eax,0x1001
  40975f:	je     0x4097c3
  409761:	add    rsp,0x28
  409765:	pop    rbx
  409766:	pop    rsi
  409767:	ret    
  409768:	nop    DWORD PTR [rax+rax*1+0x0]
  409770:	and    eax,0x1001
  409775:	cmp    eax,0x1001
  40977a:	je     0x4097b0
  40977c:	mov    rdx,QWORD PTR [rip+0x2b445]        # 0x434bc8
  409783:	mov    rcx,QWORD PTR [rsi]
  409786:	add    rsp,0x28
  40978a:	pop    rbx
  40978b:	pop    rsi
  40978c:	jmp    0x421e60
  409791:	mov    rdx,QWORD PTR [rip+0x2b430]        # 0x434bc8
  409798:	mov    rcx,QWORD PTR [r9]
  40979b:	add    rsp,0x28
  40979f:	pop    rbx
  4097a0:	pop    rsi
  4097a1:	jmp    0x421e60
  4097a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097b0:	mov    rdx,QWORD PTR [rip+0x2b411]        # 0x434bc8
  4097b7:	mov    ecx,0x20
  4097bc:	call   0x421e68
  4097c1:	jmp    0x40977c
  4097c3:	mov    r9,QWORD PTR [rip+0x2b3fe]        # 0x434bc8
  4097ca:	lea    rcx,[rip+0x1eb16]        # 0x4282e7
  4097d1:	mov    r8d,0x2
  4097d7:	mov    edx,0x1
  4097dc:	add    rsp,0x28
  4097e0:	pop    rbx
  4097e1:	pop    rsi
  4097e2:	jmp    0x421e38
  4097e7:	nop    WORD PTR [rax+rax*1+0x0]
  4097f0:	push   rdi
  4097f1:	push   rsi
  4097f2:	push   rbx
  4097f3:	sub    rsp,0x20
  4097f7:	lea    rax,[rip+0x22a02]        # 0x42c200
  4097fe:	mov    esi,ecx
  409800:	mov    ecx,0x100
  409805:	mov    ebx,DWORD PTR [rax+rsi*4]
  409808:	call   0x421e18
  40980d:	test   rax,rax
  409810:	mov    r8,rax
  409813:	je     0x40985b
  409815:	mov    ecx,0x20
  40981a:	xor    eax,eax
  40981c:	mov    rdi,r8
  40981f:	rep stos QWORD PTR es:[rdi],rax
  409822:	lea    rcx,[rip+0x22a9b]        # 0x42c2c4
  409829:	xor    edx,edx
  40982b:	nop    DWORD PTR [rax+rax*1+0x0]
  409830:	test   DWORD PTR [rcx+rdx*4],ebx
  409833:	je     0x40983b
  409835:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  40983b:	add    rdx,0x1
  40983f:	cmp    rdx,0x7f
  409843:	jne    0x409830
  409845:	lea    rax,[rip+0x2b4b4]        # 0x434d00
  40984c:	mov    QWORD PTR [rax+rsi*8],r8
  409850:	mov    rax,r8
  409853:	add    rsp,0x20
  409857:	pop    rbx
  409858:	pop    rsi
  409859:	pop    rdi
  40985a:	ret    
  40985b:	call   QWORD PTR [rip+0x2f71b]        # 0x438f7c
  409861:	lea    rcx,[rip+0x1ea90]        # 0x4282f8
  409868:	lea    r9,[rax+0x60]
  40986c:	mov    r8d,0x23
  409872:	mov    edx,0x1
  409877:	call   0x421e38
  40987c:	mov    ecx,0x1
  409881:	call   0x421e98
  409886:	nop
  409887:	nop    WORD PTR [rax+rax*1+0x0]
  409890:	push   rdi
  409891:	push   rsi
  409892:	push   rbx
  409893:	sub    rsp,0x20
  409897:	mov    r8,QWORD PTR [rdx]
  40989a:	mov    eax,DWORD PTR [r8+0x10]
  40989e:	and    eax,0xfffff00
  4098a3:	or     eax,DWORD PTR [rdx+0x10]
  4098a6:	test   al,0x20
  4098a8:	mov    DWORD PTR [rdx+0x10],eax
  4098ab:	jne    0x409910
  4098ad:	test   ah,0xf0
  4098b0:	je     0x409910
  4098b2:	test   eax,0x10000
  4098b7:	mov    eax,DWORD PTR [rdx+0x14]
  4098ba:	jne    0x409964
  4098c0:	cmp    eax,0x1
  4098c3:	je     0x409942
  4098c5:	cmp    eax,0x2
  4098c8:	jne    0x4098d5
  4098ca:	cmp    QWORD PTR [rdx+0x8],0x0
  4098cf:	je     0x409a24
  4098d5:	mov    eax,DWORD PTR [rcx+0x14]
  4098d8:	cmp    eax,DWORD PTR [rcx+0x4]
  4098db:	jbe    0x409921
  4098dd:	mov    rdi,QWORD PTR [r8+0x50]
  4098e1:	mov    rsi,QWORD PTR [rcx+0x20]
  4098e5:	mov    rbx,QWORD PTR [rip+0x1a234]        # 0x423b20
  4098ec:	nop    DWORD PTR [rax+0x0]
  4098f0:	call   QWORD PTR [rip+0x2f686]        # 0x438f7c
  4098f6:	lea    rcx,[rax+0x60]
  4098fa:	mov    r9,rdi
  4098fd:	mov    r8,rsi
  409900:	mov    rdx,rbx
  409903:	call   0x407ea0
  409908:	mov    eax,0xffffffff
  40990d:	jmp    0x40992b
  40990f:	nop
  409910:	cmp    DWORD PTR [rdx+0x14],0x1
  409914:	je     0x409933
  409916:	cmp    QWORD PTR [rdx+0x8],0x0
  40991b:	jne    0x409a10
  409921:	mov    QWORD PTR [rcx+0x18],0x0
  409929:	xor    eax,eax
  40992b:	add    rsp,0x20
  40992f:	pop    rbx
  409930:	pop    rsi
  409931:	pop    rdi
  409932:	ret    
  409933:	add    QWORD PTR [rcx+0x18],0x1
  409938:	xor    eax,eax
  40993a:	add    rsp,0x20
  40993e:	pop    rbx
  40993f:	pop    rsi
  409940:	pop    rdi
  409941:	ret    
  409942:	mov    rax,QWORD PTR [rcx+0x18]
  409946:	lea    r9,[rax+0x1]
  40994a:	mov    QWORD PTR [rcx+0x18],r9
  40994e:	cmp    BYTE PTR [rax+0x1],0x0
  409952:	je     0x4099f0
  409958:	mov    eax,DWORD PTR [rcx+0x14]
  40995b:	mov    QWORD PTR [rdx+0x8],r9
  40995f:	jmp    0x4098d8
  409964:	cmp    eax,0x1
  409967:	je     0x4099a0
  409969:	cmp    eax,0x2
  40996c:	jne    0x4099e0
  40996e:	cmp    QWORD PTR [rdx+0x8],0x0
  409973:	jne    0x409921
  409975:	test   BYTE PTR [rcx+0x10],0x3
  409979:	je     0x409921
  40997b:	mov    r9d,DWORD PTR [rcx+0x14]
  40997f:	mov    r8,QWORD PTR [rcx+0x8]
  409983:	mov    r8,QWORD PTR [r8+r9*8]
  409987:	mov    rax,r9
  40998a:	test   r8,r8
  40998d:	je     0x409921
  40998f:	cmp    BYTE PTR [r8],0x2d
  409993:	jne    0x4099cc
  409995:	jmp    0x409921
  409997:	nop    WORD PTR [rax+rax*1+0x0]
  4099a0:	mov    rax,QWORD PTR [rcx+0x18]
  4099a4:	lea    r8,[rax+0x1]
  4099a8:	mov    QWORD PTR [rcx+0x18],r8
  4099ac:	cmp    BYTE PTR [rax+0x1],0x0
  4099b0:	jne    0x4099d2
  4099b2:	mov    r9d,DWORD PTR [rcx+0x14]
  4099b6:	mov    r8,QWORD PTR [rcx+0x8]
  4099ba:	mov    r8,QWORD PTR [r8+r9*8]
  4099be:	mov    rax,r9
  4099c1:	test   r8,r8
  4099c4:	je     0x409a40
  4099c6:	cmp    BYTE PTR [r8],0x2d
  4099ca:	je     0x409a40
  4099cc:	add    eax,0x1
  4099cf:	mov    DWORD PTR [rcx+0x14],eax
  4099d2:	mov    QWORD PTR [rdx+0x8],r8
  4099d6:	jmp    0x409921
  4099db:	nop    DWORD PTR [rax+rax*1+0x0]
  4099e0:	mov    rcx,QWORD PTR [rip+0x1a0a1]        # 0x423a88
  4099e7:	call   0x408310
  4099ec:	nop    DWORD PTR [rax+0x0]
  4099f0:	mov    r9d,DWORD PTR [rcx+0x14]
  4099f4:	mov    r10,QWORD PTR [rcx+0x8]
  4099f8:	lea    eax,[r9+0x1]
  4099fc:	mov    r9,QWORD PTR [r10+r9*8]
  409a00:	mov    DWORD PTR [rcx+0x14],eax
  409a03:	mov    QWORD PTR [rcx+0x18],r9
  409a07:	jmp    0x40995b
  409a0c:	nop    DWORD PTR [rax+0x0]
  409a10:	mov    rdi,QWORD PTR [r8+0x50]
  409a14:	mov    rsi,QWORD PTR [rcx+0x20]
  409a18:	mov    rbx,QWORD PTR [rip+0x1a119]        # 0x423b38
  409a1f:	jmp    0x4098f0
  409a24:	mov    r9d,DWORD PTR [rcx+0x14]
  409a28:	mov    r10,QWORD PTR [rcx+0x8]
  409a2c:	lea    eax,[r9+0x1]
  409a30:	mov    r9,QWORD PTR [r10+r9*8]
  409a34:	mov    DWORD PTR [rcx+0x14],eax
  409a37:	jmp    0x40995b
  409a3c:	nop    DWORD PTR [rax+0x0]
  409a40:	mov    QWORD PTR [rdx+0x8],0x0
  409a48:	jmp    0x409921
  409a4d:	nop    DWORD PTR [rax]
  409a50:	push   rdi
  409a51:	push   rbx
  409a52:	sub    rsp,0x28
  409a56:	mov    rdi,rcx
  409a59:	call   0x421d08
  409a5e:	test   rax,rax
  409a61:	je     0x409a6a
  409a63:	add    rsp,0x28
  409a67:	pop    rbx
  409a68:	pop    rdi
  409a69:	ret    
  409a6a:	or     rcx,0xffffffffffffffff
  409a6e:	mov    rbx,QWORD PTR [rip+0x19fb3]        # 0x423a28
  409a75:	repnz scas al,BYTE PTR es:[rdi]
  409a77:	mov    rax,rcx
  409a7a:	not    rax
  409a7d:	lea    rdi,[rax-0x1]
  409a81:	call   QWORD PTR [rip+0x2f4f5]        # 0x438f7c
  409a87:	lea    rcx,[rax+0x60]
  409a8b:	mov    r8d,edi
  409a8e:	mov    rdx,rbx
  409a91:	call   0x407ea0
  409a96:	mov    ecx,0x1
  409a9b:	call   0x4082e0
  409aa0:	nop
  409aa1:	nop    DWORD PTR [rax+rax*1+0x0]
  409aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ab0:	push   r12
  409ab2:	push   rbp
  409ab3:	push   rdi
  409ab4:	push   rsi
  409ab5:	push   rbx
  409ab6:	sub    rsp,0x20
  409aba:	mov    eax,DWORD PTR [rcx+0xb0]
  409ac0:	mov    rbp,QWORD PTR [rcx+0x90]
  409ac7:	mov    rbx,QWORD PTR [rcx+0x78]
  409acb:	test   eax,eax
  409acd:	jle    0x409b64
  409ad3:	sub    eax,0x1
  409ad6:	mov    rsi,rcx
  409ad9:	add    rax,0x1
  409add:	lea    rdx,[rax+rax*2]
  409ae1:	lea    rax,[rax+rdx*4]
  409ae5:	lea    rdi,[rbx+rax*8]
  409ae9:	jmp    0x409b12
  409aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  409af0:	cmp    eax,0x6
  409af3:	jne    0x409b09
  409af5:	mov    rax,rbx
  409af8:	sub    rax,QWORD PTR [rsi+0x78]
  409afc:	mov    rdx,QWORD PTR [rbp+0x78]
  409b00:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  409b09:	add    rbx,0x68
  409b0d:	cmp    rbx,rdi
  409b10:	je     0x409b64
  409b12:	mov    edx,DWORD PTR [rbx+0x10]
  409b15:	mov    eax,edx
  409b17:	and    eax,0xf000
  409b1c:	shr    eax,0xc
  409b1f:	cmp    eax,0x1
  409b22:	jne    0x409af0
  409b24:	test   dh,0x4
  409b27:	je     0x409b3d
  409b29:	mov    rax,rbx
  409b2c:	sub    rax,QWORD PTR [rsi+0x78]
  409b30:	mov    rcx,QWORD PTR [rbp+0x78]
  409b34:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  409b3d:	and    edx,0x40
  409b40:	je     0x409b09
  409b42:	mov    r12,rbx
  409b45:	sub    r12,QWORD PTR [rsi+0x78]
  409b49:	mov    rcx,QWORD PTR [rbx+0x18]
  409b4d:	add    r12,QWORD PTR [rbp+0x78]
  409b51:	add    rbx,0x68
  409b55:	call   0x409a50
  409b5a:	cmp    rbx,rdi
  409b5d:	mov    QWORD PTR [r12+0x18],rax
  409b62:	jne    0x409b12
  409b64:	add    rsp,0x20
  409b68:	pop    rbx
  409b69:	pop    rsi
  409b6a:	pop    rdi
  409b6b:	pop    rbp
  409b6c:	pop    r12
  409b6e:	ret    
  409b6f:	nop
  409b70:	push   r13
  409b72:	push   r12
  409b74:	push   rbp
  409b75:	push   rdi
  409b76:	push   rsi
  409b77:	push   rbx
  409b78:	sub    rsp,0x28
  409b7c:	mov    r13,rcx
  409b7f:	mov    rcx,rdx
  409b82:	mov    r12,r8
  409b85:	mov    ebp,r9d
  409b88:	call   0x421e30
  409b8d:	test   rax,rax
  409b90:	mov    QWORD PTR [r13+0x8],rax
  409b94:	je     0x409c70
  409b9a:	mov    rdx,QWORD PTR [r13+0x0]
  409b9e:	mov    ecx,DWORD PTR [rdx+0x10]
  409ba1:	mov    rbx,QWORD PTR [rdx+0x60]
  409ba5:	mov    DWORD PTR [r13+0x14],0x0
  409bad:	mov    r8d,ecx
  409bb0:	or     r8d,0x42
  409bb4:	test   rbx,rbx
  409bb7:	mov    DWORD PTR [r13+0x10],r8d
  409bbb:	je     0x409c02
  409bbd:	mov    rsi,rax
  409bc0:	add    rsi,0x1
  409bc4:	add    rbx,0x1
  409bc8:	movzx  r11d,BYTE PTR [rsi-0x1]
  409bcd:	movzx  r10d,BYTE PTR [rbx-0x1]
  409bd2:	cmp    r11b,r10b
  409bd5:	je     0x409bec
  409bd7:	lea    rdx,[rip+0x199e2]        # 0x4235c0
  409bde:	movzx  edi,r11b
  409be2:	movzx  edi,BYTE PTR [rdx+rdi*1]
  409be6:	cmp    BYTE PTR [rdx+r10*1],dil
  409bea:	jne    0x409c02
  409bec:	test   r11b,r11b
  409bef:	jne    0x409bc0
  409bf1:	or     ecx,0x62
  409bf4:	mov    QWORD PTR [r13+0x8],0x0
  409bfc:	mov    DWORD PTR [r13+0x10],ecx
  409c00:	jmp    0x409c32
  409c02:	cmp    ebp,0x1
  409c05:	je     0x409c50
  409c07:	cmp    ebp,0x2
  409c0a:	jne    0x409c14
  409c0c:	test   ecx,0x20020
  409c12:	jne    0x409c80
  409c14:	test   ch,0xf0
  409c17:	je     0x409c2a
  409c19:	cmp    BYTE PTR [rax],0x0
  409c1c:	jne    0x409cc0
  409c22:	and    ecx,0x10000
  409c28:	je     0x409c70
  409c2a:	mov    QWORD PTR [r13+0x8],0x0
  409c32:	mov    rdx,r13
  409c35:	mov    rcx,r12
  409c38:	add    rsp,0x28
  409c3c:	pop    rbx
  409c3d:	pop    rsi
  409c3e:	pop    rdi
  409c3f:	pop    rbp
  409c40:	pop    r12
  409c42:	pop    r13
  409c44:	jmp    0x4092f0
  409c49:	nop    DWORD PTR [rax+0x0]
  409c50:	mov    edx,ecx
  409c52:	and    edx,0x20020
  409c58:	cmp    edx,0x20000
  409c5e:	je     0x409c14
  409c60:	mov    edx,ecx
  409c62:	and    edx,0x40020
  409c68:	cmp    edx,0x40020
  409c6e:	je     0x409c14
  409c70:	add    rsp,0x28
  409c74:	pop    rbx
  409c75:	pop    rsi
  409c76:	pop    rdi
  409c77:	pop    rbp
  409c78:	pop    r12
  409c7a:	pop    r13
  409c7c:	ret    
  409c7d:	nop    DWORD PTR [rax]
  409c80:	mov    edx,ecx
  409c82:	and    edx,0x40020
  409c88:	cmp    edx,0x20
  409c8b:	je     0x409c14
  409c8d:	mov    edx,ecx
  409c8f:	and    edx,0x400020
  409c95:	cmp    edx,0x400000
  409c9b:	je     0x409c14
  409ca1:	mov    edx,ecx
  409ca3:	and    edx,0x800020
  409ca9:	cmp    edx,0x800020
  409caf:	jne    0x409c70
  409cb1:	jmp    0x409c14
  409cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cc0:	mov    rcx,rax
  409cc3:	call   0x409a50
  409cc8:	or     DWORD PTR [r13+0x10],0x40
  409ccd:	mov    QWORD PTR [r13+0x8],rax
  409cd1:	jmp    0x409c32
  409cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ce0:	push   rsi
  409ce1:	push   rbx
  409ce2:	sub    rsp,0x28
  409ce6:	mov    rbx,rcx
  409ce9:	call   0x421e18
  409cee:	test   rax,rax
  409cf1:	je     0x409cfa
  409cf3:	add    rsp,0x28
  409cf7:	pop    rbx
  409cf8:	pop    rsi
  409cf9:	ret    
  409cfa:	mov    rsi,QWORD PTR [rip+0x19d27]        # 0x423a28
  409d01:	call   QWORD PTR [rip+0x2f275]        # 0x438f7c
  409d07:	lea    rcx,[rax+0x60]
  409d0b:	mov    r8d,ebx
  409d0e:	mov    rdx,rsi
  409d11:	call   0x407ea0
  409d16:	mov    ecx,0x1
  409d1b:	call   0x4082e0
  409d20:	nop
  409d21:	nop    DWORD PTR [rax+rax*1+0x0]
  409d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d30:	push   rbp
  409d31:	push   rdi
  409d32:	push   rsi
  409d33:	push   rbx
  409d34:	sub    rsp,0x28
  409d38:	mov    rbx,QWORD PTR [rcx]
  409d3b:	mov    rsi,rcx
  409d3e:	mov    rdi,rdx
  409d41:	test   rbx,rbx
  409d44:	je     0x409d94
  409d46:	movsxd r8,DWORD PTR [rbx]
  409d49:	mov    eax,DWORD PTR [rbx+0x4]
  409d4c:	cmp    r8d,eax
  409d4f:	lea    edx,[r8+0x1]
  409d53:	jge    0x409d65
  409d55:	mov    DWORD PTR [rbx],edx
  409d57:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  409d5c:	add    rsp,0x28
  409d60:	pop    rbx
  409d61:	pop    rsi
  409d62:	pop    rdi
  409d63:	pop    rbp
  409d64:	ret    
  409d65:	add    eax,0x8
  409d68:	mov    rcx,rbx
  409d6b:	mov    DWORD PTR [rbx+0x4],eax
  409d6e:	cdqe   
  409d70:	lea    rbp,[rax*8+0x8]
  409d78:	mov    rdx,rbp
  409d7b:	call   0x421dd8
  409d80:	test   rax,rax
  409d83:	je     0x409dc0
  409d85:	movsxd r8,DWORD PTR [rax]
  409d88:	mov    QWORD PTR [rsi],rax
  409d8b:	mov    rbx,rax
  409d8e:	lea    edx,[r8+0x1]
  409d92:	jmp    0x409d55
  409d94:	mov    ecx,0x38
  409d99:	call   0x409ce0
  409d9e:	test   rax,rax
  409da1:	mov    rbx,rax
  409da4:	je     0x409d5c
  409da6:	mov    DWORD PTR [rax],0x0
  409dac:	mov    DWORD PTR [rax+0x4],0x6
  409db3:	mov    edx,0x1
  409db8:	mov    QWORD PTR [rsi],rax
  409dbb:	xor    r8d,r8d
  409dbe:	jmp    0x409d55
  409dc0:	mov    rsi,QWORD PTR [rip+0x19c81]        # 0x423a48
  409dc7:	call   QWORD PTR [rip+0x2f1af]        # 0x438f7c
  409dcd:	lea    rcx,[rax+0x60]
  409dd1:	mov    r9,rbx
  409dd4:	mov    r8d,ebp
  409dd7:	mov    rdx,rsi
  409dda:	call   0x407ea0
  409ddf:	mov    ecx,0x1
  409de4:	call   0x4082e0
  409de9:	nop
  409dea:	nop    WORD PTR [rax+rax*1+0x0]
  409df0:	push   r15
  409df2:	push   r14
  409df4:	push   r13
  409df6:	push   r12
  409df8:	push   rbp
  409df9:	push   rdi
  409dfa:	push   rsi
  409dfb:	push   rbx
  409dfc:	sub    rsp,0x58
  409e00:	mov    rbp,QWORD PTR [rsp+0xc0]
  409e08:	mov    QWORD PTR [rsp+0xa0],rcx
  409e10:	mov    r15,r9
  409e13:	mov    r14,rdx
  409e16:	mov    r12,r8
  409e19:	lea    rcx,[r8+rbp*1+0x18]
  409e1e:	call   0x409ce0
  409e23:	test   r15,r15
  409e26:	mov    r13,rax
  409e29:	je     0x409fd0
  409e2f:	test   rbp,rbp
  409e32:	mov    DWORD PTR [rax],0x1
  409e38:	je     0x409f20
  409e3e:	lea    rsi,[rax+0x10]
  409e42:	lea    rax,[rsp+0x48]
  409e47:	mov    ebx,ebp
  409e49:	lea    r10,[rip+0x1eeb0]        # 0x428d00
  409e50:	mov    QWORD PTR [rsp+0x30],rax
  409e55:	jmp    0x409e75
  409e57:	nop    WORD PTR [rax+rax*1+0x0]
  409e60:	sub    ebx,0x1
  409e63:	add    rsi,0x1
  409e67:	mov    r15,rdi
  409e6a:	test   ebx,ebx
  409e6c:	mov    BYTE PTR [rsi-0x1],al
  409e6f:	jle    0x409f65
  409e75:	movzx  eax,BYTE PTR [r15]
  409e79:	lea    rdi,[r15+0x1]
  409e7d:	test   eax,eax
  409e7f:	je     0x409f65
  409e85:	cmp    eax,0x26
  409e88:	jne    0x409e60
  409e8a:	cmp    ebx,0x2
  409e8d:	mov    QWORD PTR [rsp+0x48],rdi
  409e92:	mov    eax,0x26
  409e97:	jle    0x409e60
  409e99:	cmp    BYTE PTR [r15+0x1],0x23
  409e9e:	lea    r9,[rip+0x1ee1b]        # 0x428cc0
  409ea5:	je     0x409f70
  409eab:	mov    r15,r9
  409eae:	mov    QWORD PTR [rsp+0xc0],rbp
  409eb6:	mov    QWORD PTR [rsp+0x38],rsi
  409ebb:	mov    ebp,DWORD PTR [r15+0x4]
  409ebf:	mov    esi,ebx
  409ec1:	cmp    ebp,esi
  409ec3:	jg     0x409ee9
  409ec5:	movsxd rbx,ebp
  409ec8:	lea    rdx,[r15+0x8]
  409ecc:	mov    rcx,rdi
  409ecf:	mov    r8,rbx
  409ed2:	mov    QWORD PTR [rsp+0x28],r10
  409ed7:	call   0x421d90
  409edc:	test   eax,eax
  409ede:	mov    r10,QWORD PTR [rsp+0x28]
  409ee3:	je     0x409ff1
  409ee9:	cmp    r15,r10
  409eec:	je     0x409eff
  409eee:	add    r15,0x10
  409ef2:	mov    ebp,DWORD PTR [r15+0x4]
  409ef6:	cmp    ebp,esi
  409ef8:	jle    0x409ec5
  409efa:	cmp    r15,r10
  409efd:	jne    0x409eee
  409eff:	mov    ebx,esi
  409f01:	mov    rbp,QWORD PTR [rsp+0xc0]
  409f09:	mov    rsi,QWORD PTR [rsp+0x38]
  409f0e:	mov    eax,0x26
  409f13:	jmp    0x409e60
  409f18:	nop    DWORD PTR [rax+rax*1+0x0]
  409f20:	mov    BYTE PTR [rax+0x10],0x0
  409f24:	lea    rcx,[r13+rbp*1+0x11]
  409f29:	mov    QWORD PTR [r13+0x8],rcx
  409f2d:	mov    r8,r12
  409f30:	mov    rdx,r14
  409f33:	call   0x421e08
  409f38:	mov    rax,QWORD PTR [r13+0x8]
  409f3c:	mov    rcx,QWORD PTR [rsp+0xa0]
  409f44:	mov    rdx,r13
  409f47:	mov    BYTE PTR [rax+r12*1],0x0
  409f4c:	call   0x409d30
  409f51:	mov    rax,r13
  409f54:	add    rsp,0x58
  409f58:	pop    rbx
  409f59:	pop    rsi
  409f5a:	pop    rdi
  409f5b:	pop    rbp
  409f5c:	pop    r12
  409f5e:	pop    r13
  409f60:	pop    r14
  409f62:	pop    r15
  409f64:	ret    
  409f65:	mov    BYTE PTR [rsi],0x0
  409f68:	jmp    0x409f24
  409f6a:	nop    WORD PTR [rax+rax*1+0x0]
  409f70:	lea    rcx,[r15+0x2]
  409f74:	mov    r8d,0xa
  409f7a:	mov    QWORD PTR [rsp+0x48],rcx
  409f7f:	cmp    BYTE PTR [r15+0x2],0x78
  409f84:	je     0x409fe3
  409f86:	mov    rdx,QWORD PTR [rsp+0x30]
  409f8b:	mov    QWORD PTR [rsp+0x28],r10
  409f90:	call   0x421d60
  409f95:	mov    rdx,QWORD PTR [rsp+0x48]
  409f9a:	mov    ecx,eax
  409f9c:	mov    r10,QWORD PTR [rsp+0x28]
  409fa1:	mov    eax,0x26
  409fa6:	cmp    BYTE PTR [rdx],0x3b
  409fa9:	jne    0x409e60
  409faf:	add    rdx,0x1
  409fb3:	mov    r8,rdx
  409fb6:	sub    r8,rdi
  409fb9:	cmp    r8d,ebx
  409fbc:	jg     0x409e60
  409fc2:	sub    ebx,r8d
  409fc5:	mov    eax,ecx
  409fc7:	mov    rdi,rdx
  409fca:	jmp    0x409e60
  409fcf:	nop
  409fd0:	lea    rcx,[rax+0x10]
  409fd4:	mov    DWORD PTR [rax],0x0
  409fda:	mov    QWORD PTR [rax+0x8],rcx
  409fde:	jmp    0x409f2d
  409fe3:	lea    rcx,[r15+0x3]
  409fe7:	mov    r8b,0x10
  409fea:	mov    QWORD PTR [rsp+0x48],rcx
  409fef:	jmp    0x409f86
  409ff1:	mov    rax,rbx
  409ff4:	mov    r9,r15
  409ff7:	mov    ebx,esi
  409ff9:	mov    r15d,ebp
  409ffc:	add    rdi,rax
  409fff:	mov    rsi,QWORD PTR [rsp+0x38]
  40a004:	mov    rbp,QWORD PTR [rsp+0xc0]
  40a00c:	sub    ebx,r15d
  40a00f:	movzx  eax,BYTE PTR [r9]
  40a013:	jmp    0x409e60
  40a018:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	push   rsi
  40a021:	push   rbx
  40a022:	sub    rsp,0x28
  40a026:	mov    rax,QWORD PTR [rdx+0x38]
  40a02a:	mov    rbx,rdx
  40a02d:	lea    rdx,[rip+0x7b2c]        # 0x411b60
  40a034:	mov    rsi,rcx
  40a037:	cmp    rax,rdx
  40a03a:	je     0x40a190
  40a040:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x408b90
  40a047:	cmp    rax,rdx
  40a04a:	je     0x40a1b0
  40a050:	lea    rdx,[rip+0x8bf9]        # 0x412c50
  40a057:	cmp    rax,rdx
  40a05a:	je     0x40a1c4
  40a060:	mov    r8,QWORD PTR [rbx+0x48]
  40a064:	test   r8,r8
  40a067:	je     0x40a150
  40a06d:	movzx  r9d,WORD PTR [rbx+0xc]
  40a072:	cmp    r9w,0x1
  40a077:	je     0x40a174
  40a07d:	cmp    r9w,0xffff
  40a082:	je     0x40a097
  40a084:	mov    rdx,QWORD PTR [rcx]
  40a087:	lea    rcx,[rip+0x1fbea]        # 0x429c78
  40a08e:	call   0x4082b0
  40a093:	mov    r8,QWORD PTR [rbx+0x48]
  40a097:	mov    rdx,QWORD PTR [rsi]
  40a09a:	lea    rcx,[rip+0x204af]        # 0x42a550
  40a0a1:	call   0x4082b0
  40a0a6:	mov    eax,DWORD PTR [rbx+0x10]
  40a0a9:	test   ah,0xf0
  40a0ac:	je     0x40a120
  40a0ae:	test   eax,0x10000
  40a0b3:	jne    0x40a0f0
  40a0b5:	lea    rdx,[rip+0x1f8f5]        # 0x4299b1
  40a0bc:	lea    rcx,[rip+0x1f793]        # 0x429856
  40a0c3:	call   0x4082b0
  40a0c8:	call   QWORD PTR [rip+0x2eeae]        # 0x438f7c
  40a0ce:	lea    rcx,[rip+0x1f939]        # 0x429a0e
  40a0d5:	lea    r9,[rax+0x30]
  40a0d9:	mov    r8d,0x10
  40a0df:	mov    edx,0x1
  40a0e4:	add    rsp,0x28
  40a0e8:	pop    rbx
  40a0e9:	pop    rsi
  40a0ea:	jmp    0x421e38
  40a0ef:	nop
  40a0f0:	mov    rdx,QWORD PTR [rsi]
  40a0f3:	mov    r8,QWORD PTR [rbx+0x48]
  40a0f7:	lea    rcx,[rip+0x20d0c]        # 0x42ae0a
  40a0fe:	call   0x4082b0
  40a103:	lea    rdx,[rip+0x1f79c]        # 0x4298a6
  40a10a:	lea    rcx,[rip+0x1f745]        # 0x429856
  40a111:	call   0x4082b0
  40a116:	jmp    0x40a0c8
  40a118:	nop    DWORD PTR [rax+rax*1+0x0]
  40a120:	mov    rdx,QWORD PTR [rsi]
  40a123:	mov    r8,QWORD PTR [rbx+0x48]
  40a127:	lea    rcx,[rip+0x20cdc]        # 0x42ae0a
  40a12e:	call   0x4082b0
  40a133:	lea    rdx,[rip+0x1f753]        # 0x42988d
  40a13a:	lea    rcx,[rip+0x1f715]        # 0x429856
  40a141:	call   0x4082b0
  40a146:	jmp    0x40a0c8
  40a148:	nop    DWORD PTR [rax+rax*1+0x0]
  40a150:	test   rax,rax
  40a153:	je     0x40a1f0
  40a159:	mov    rdx,QWORD PTR [rcx]
  40a15c:	lea    r8,[rip+0x1f6e9]        # 0x42984c
  40a163:	lea    rcx,[rip+0x1fc7a]        # 0x429de4
  40a16a:	call   0x4082b0
  40a16f:	jmp    0x40a0c8
  40a174:	mov    rdx,QWORD PTR [rcx]
  40a177:	lea    rcx,[rip+0x20ce6]        # 0x42ae64
  40a17e:	call   0x4082b0
  40a183:	jmp    0x40a0a6
  40a188:	nop    DWORD PTR [rax+rax*1+0x0]
  40a190:	mov    rdx,QWORD PTR [rcx]
  40a193:	lea    r8,[rip+0x1f807]        # 0x4299a1
  40a19a:	lea    rcx,[rip+0x1fc43]        # 0x429de4
  40a1a1:	call   0x4082b0
  40a1a6:	jmp    0x40a0c8
  40a1ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1b0:	mov    rdx,QWORD PTR [rcx]
  40a1b3:	lea    rcx,[rip+0x20b9c]        # 0x42ad56
  40a1ba:	call   0x4082b0
  40a1bf:	jmp    0x40a0c8
  40a1c4:	lea    rdx,[rip+0x1f8cb]        # 0x429a96
  40a1cb:	lea    rcx,[rip+0x1f684]        # 0x429856
  40a1d2:	call   0x4082b0
  40a1d7:	lea    rdx,[rip+0x1f7d3]        # 0x4299b1
  40a1de:	lea    rcx,[rip+0x1f671]        # 0x429856
  40a1e5:	call   0x4082b0
  40a1ea:	jmp    0x40a0c8
  40a1ef:	nop
  40a1f0:	lea    rdx,[rip+0x1f8ce]        # 0x429ac5
  40a1f7:	lea    rcx,[rip+0x1f658]        # 0x429856
  40a1fe:	call   0x4082b0
  40a203:	lea    rdx,[rip+0x1f69c]        # 0x4298a6
  40a20a:	lea    rcx,[rip+0x1f645]        # 0x429856
  40a211:	call   0x4082b0
  40a216:	jmp    0x40a0c8
  40a21b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a220:	push   rbp
  40a221:	push   rdi
  40a222:	push   rsi
  40a223:	push   rbx
  40a224:	sub    rsp,0x28
  40a228:	mov    esi,DWORD PTR [rcx+0xb0]
  40a22e:	mov    rbx,QWORD PTR [rcx+0x78]
  40a232:	mov    rdi,rcx
  40a235:	call   QWORD PTR [rip+0x2ed41]        # 0x438f7c
  40a23b:	lea    rcx,[rip+0x1fa17]        # 0x429c59
  40a242:	lea    r9,[rax+0x30]
  40a246:	mov    r8d,0x1e
  40a24c:	mov    edx,0x1
  40a251:	call   0x421e38
  40a256:	test   esi,esi
  40a258:	jle    0x40a2b9
  40a25a:	lea    eax,[rsi-0x1]
  40a25d:	lea    rbp,[rdi+0x30]
  40a261:	add    rax,0x1
  40a265:	lea    rdx,[rax+rax*2]
  40a269:	lea    rax,[rax+rdx*4]
  40a26d:	lea    rsi,[rbx+rax*8]
  40a271:	test   DWORD PTR [rbx+0x10],0x280000
  40a278:	jne    0x40a2b0
  40a27a:	movzx  edx,WORD PTR [rbx+0x2]
  40a27e:	movzx  eax,dl
  40a281:	cmp    al,0x7f
  40a283:	ja     0x40a2b0
  40a285:	lea    rcx,[rip+0x22034]        # 0x42c2c0
  40a28c:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  40a291:	je     0x40a2b0
  40a293:	lea    rcx,[rip+0x1f785]        # 0x429a1f
  40a29a:	call   0x4082b0
  40a29f:	mov    rdx,rbx
  40a2a2:	mov    rcx,rbp
  40a2a5:	call   0x40a020
  40a2aa:	nop    WORD PTR [rax+rax*1+0x0]
  40a2b0:	add    rbx,0x68
  40a2b4:	cmp    rbx,rsi
  40a2b7:	jne    0x40a271
  40a2b9:	mov    r8,QWORD PTR [rdi+0x30]
  40a2bd:	lea    rdx,[rip+0x1f55b]        # 0x42981f
  40a2c4:	lea    rcx,[rip+0x20d72]        # 0x42b03d
  40a2cb:	add    rsp,0x28
  40a2cf:	pop    rbx
  40a2d0:	pop    rsi
  40a2d1:	pop    rdi
  40a2d2:	pop    rbp
  40a2d3:	jmp    0x4082b0
  40a2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e0:	push   r15
  40a2e2:	push   r14
  40a2e4:	push   r13
  40a2e6:	push   r12
  40a2e8:	push   rbp
  40a2e9:	push   rdi
  40a2ea:	push   rsi
  40a2eb:	push   rbx
  40a2ec:	sub    rsp,0x58
  40a2f0:	mov    rdi,rcx
  40a2f3:	mov    QWORD PTR [rsp+0xa8],rdx
  40a2fb:	mov    rsi,r8
  40a2fe:	mov    rbx,r9
  40a301:	call   0x421d98
  40a306:	sub    eax,0x1
  40a309:	cmp    eax,0x1e
  40a30c:	mov    DWORD PTR [rsp+0x2c],eax
  40a310:	ja     0x40a3d4
  40a316:	mov    eax,DWORD PTR [rbx]
  40a318:	mov    rbp,QWORD PTR [rsi]
  40a31b:	test   eax,eax
  40a31d:	jle    0x40a49e
  40a323:	sub    eax,0x1
  40a326:	mov    rbx,QWORD PTR [rip+0x2ee9f]        # 0x4391cc
  40a32d:	mov    r12d,0x2
  40a333:	add    rax,0x1
  40a337:	lea    rdx,[rax+rax*2]
  40a33b:	lea    rax,[rax+rdx*4]
  40a33f:	lea    rax,[rbp+rax*8+0x0]
  40a344:	mov    QWORD PTR [rsp+0x20],rax
  40a349:	nop    DWORD PTR [rax+0x0]
  40a350:	cmp    rbp,QWORD PTR [rsp+0xa8]
  40a358:	je     0x40a3c2
  40a35a:	test   DWORD PTR [rbp+0x10],0x280000
  40a361:	jne    0x40a3c2
  40a363:	mov    r15,QWORD PTR [rbp+0x50]
  40a367:	xor    r14d,r14d
  40a36a:	jmp    0x40a374
  40a36c:	nop    DWORD PTR [rax+0x0]
  40a370:	add    r14d,0x1
  40a374:	mov    r13d,r14d
  40a377:	movzx  ecx,BYTE PTR [r15+r13*1]
  40a37c:	call   rbx
  40a37e:	movzx  ecx,BYTE PTR [rdi+r13*1]
  40a383:	mov    esi,eax
  40a385:	call   rbx
  40a387:	cmp    esi,eax
  40a389:	je     0x40a370
  40a38b:	mov    r15,QWORD PTR [rbp+0x58]
  40a38f:	cmp    r12d,r14d
  40a392:	cmovb  r12d,r14d
  40a396:	test   r15,r15
  40a399:	je     0x40a3c2
  40a39b:	xor    r14d,r14d
  40a39e:	jmp    0x40a3a4
  40a3a0:	add    r14d,0x1
  40a3a4:	mov    r13d,r14d
  40a3a7:	movsx  ecx,BYTE PTR [r15+r13*1]
  40a3ac:	call   rbx
  40a3ae:	movsx  ecx,BYTE PTR [rdi+r13*1]
  40a3b3:	mov    esi,eax
  40a3b5:	call   rbx
  40a3b7:	cmp    esi,eax
  40a3b9:	je     0x40a3a0
  40a3bb:	cmp    r12d,r14d
  40a3be:	cmovb  r12d,r14d
  40a3c2:	add    rbp,0x68
  40a3c6:	cmp    rbp,QWORD PTR [rsp+0x20]
  40a3cb:	jne    0x40a350
  40a3cd:	cmp    DWORD PTR [rsp+0x2c],r12d
  40a3d2:	ja     0x40a3f5
  40a3d4:	lea    rcx,[rip+0x1f654]        # 0x429a2f
  40a3db:	mov    rdx,rdi
  40a3de:	call   0x4082b0
  40a3e3:	nop
  40a3e4:	add    rsp,0x58
  40a3e8:	pop    rbx
  40a3e9:	pop    rsi
  40a3ea:	pop    rdi
  40a3eb:	pop    rbp
  40a3ec:	pop    r12
  40a3ee:	pop    r13
  40a3f0:	pop    r14
  40a3f2:	pop    r15
  40a3f4:	ret    
  40a3f5:	lea    rbp,[rsp+0x30]
  40a3fa:	mov    ebx,r12d
  40a3fd:	cmp    r12d,0x8
  40a401:	mov    rax,rdi
  40a404:	lea    rsi,[rbp+rbx*1+0x0]
  40a409:	mov    rcx,rbp
  40a40c:	jae    0x40a477
  40a40e:	xor    edx,edx
  40a410:	test   r12b,0x4
  40a414:	je     0x40a41f
  40a416:	mov    edx,DWORD PTR [rax]
  40a418:	mov    DWORD PTR [rcx],edx
  40a41a:	mov    edx,0x4
  40a41f:	test   r12b,0x2
  40a423:	je     0x40a433
  40a425:	movzx  r8d,WORD PTR [rax+rdx*1]
  40a42a:	mov    WORD PTR [rcx+rdx*1],r8w
  40a42f:	add    rdx,0x2
  40a433:	and    r12d,0x1
  40a437:	je     0x40a440
  40a439:	movzx  eax,BYTE PTR [rax+rdx*1]
  40a43d:	mov    BYTE PTR [rcx+rdx*1],al
  40a440:	add    rbx,rdi
  40a443:	jmp    0x40a448
  40a445:	mov    rsi,rax
  40a448:	lea    rcx,[rip+0x1f5f0]        # 0x429a3f
  40a44f:	mov    BYTE PTR [rsi],0x0
  40a452:	mov    rdx,rbp
  40a455:	add    rbx,0x1
  40a459:	call   0x4082b0
  40a45e:	movzx  ecx,BYTE PTR [rbx-0x1]
  40a462:	cmp    BYTE PTR [rbx],0x0
  40a465:	lea    rax,[rsi+0x1]
  40a469:	mov    BYTE PTR [rax-0x1],cl
  40a46c:	jne    0x40a445
  40a46e:	mov    BYTE PTR [rsi+0x1],0x0
  40a472:	jmp    0x40a3d4
  40a477:	mov    ecx,r12d
  40a47a:	xor    eax,eax
  40a47c:	and    ecx,0xfffffff8
  40a47f:	mov    edx,eax
  40a481:	add    eax,0x8
  40a484:	mov    r8,QWORD PTR [rdi+rdx*1]
  40a488:	cmp    eax,ecx
  40a48a:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40a48f:	jb     0x40a47f
  40a491:	lea    rcx,[rbp+rax*1+0x0]
  40a496:	add    rax,rdi
  40a499:	jmp    0x40a40e
  40a49e:	mov    r12d,0x2
  40a4a4:	jmp    0x40a3cd
  40a4a9:	nop    DWORD PTR [rax+0x0]
  40a4b0:	push   r14
  40a4b2:	push   r13
  40a4b4:	push   r12
  40a4b6:	push   rbp
  40a4b7:	push   rdi
  40a4b8:	push   rsi
  40a4b9:	push   rbx
  40a4ba:	sub    rsp,0x20
  40a4be:	mov    r13,QWORD PTR [rip+0x2eab7]        # 0x438f7c
  40a4c5:	mov    rbx,QWORD PTR [rcx+0x78]
  40a4c9:	mov    rdi,rcx
  40a4cc:	mov    esi,DWORD PTR [rcx+0xb0]
  40a4d2:	call   r13
  40a4d5:	lea    rcx,[rip+0x1f77d]        # 0x429c59
  40a4dc:	lea    r9,[rax+0x30]
  40a4e0:	mov    r8d,0x1e
  40a4e6:	mov    edx,0x1
  40a4eb:	lea    r12,[rdi+0x78]
  40a4ef:	lea    rbp,[rdi+0xb0]
  40a4f6:	call   0x421e38
  40a4fb:	lea    r14,[rdi+0x30]
  40a4ff:	jmp    0x40a510
  40a501:	sub    esi,0x1
  40a504:	add    rbx,0x68
  40a508:	test   esi,esi
  40a50a:	jle    0x40a5bd
  40a510:	test   DWORD PTR [rbx+0x10],0x280000
  40a517:	jne    0x40a501
  40a519:	mov    rcx,QWORD PTR [rbx+0x50]
  40a51d:	mov    r9,rbp
  40a520:	mov    r8,r12
  40a523:	mov    rdx,rbx
  40a526:	call   0x40a2e0
  40a52b:	mov    rcx,r14
  40a52e:	mov    rdx,rbx
  40a531:	call   0x40a020
  40a536:	mov    rcx,QWORD PTR [rbx+0x58]
  40a53a:	test   rcx,rcx
  40a53d:	je     0x40a501
  40a53f:	mov    r9,rbp
  40a542:	mov    r8,r12
  40a545:	mov    rdx,rbx
  40a548:	call   0x40a2e0
  40a54d:	lea    rax,[rip+0x86fc]        # 0x412c50
  40a554:	cmp    QWORD PTR [rbx+0x38],rax
  40a558:	je     0x40a5f0
  40a55e:	cmp    WORD PTR [rbx+0xc],0x1
  40a563:	mov    rdx,QWORD PTR [rdi+0x30]
  40a567:	mov    r9,QWORD PTR [rbx+0x60]
  40a56b:	mov    r8,QWORD PTR [rbx+0x48]
  40a56f:	je     0x40a5e2
  40a571:	lea    rcx,[rip+0x2012b]        # 0x42a6a3
  40a578:	call   0x4082b0
  40a57d:	lea    rdx,[rip+0x1f309]        # 0x42988d
  40a584:	lea    rcx,[rip+0x1f2cb]        # 0x429856
  40a58b:	sub    esi,0x1
  40a58e:	add    rbx,0x68
  40a592:	call   0x4082b0
  40a597:	call   r13
  40a59a:	lea    rcx,[rip+0x1f46d]        # 0x429a0e
  40a5a1:	lea    r9,[rax+0x30]
  40a5a5:	mov    r8d,0x10
  40a5ab:	mov    edx,0x1
  40a5b0:	call   0x421e38
  40a5b5:	test   esi,esi
  40a5b7:	jg     0x40a510
  40a5bd:	mov    r8,QWORD PTR [rdi+0x30]
  40a5c1:	lea    rdx,[rip+0x1f2f7]        # 0x4298bf
  40a5c8:	lea    rcx,[rip+0x20a6e]        # 0x42b03d
  40a5cf:	add    rsp,0x20
  40a5d3:	pop    rbx
  40a5d4:	pop    rsi
  40a5d5:	pop    rdi
  40a5d6:	pop    rbp
  40a5d7:	pop    r12
  40a5d9:	pop    r13
  40a5db:	pop    r14
  40a5dd:	jmp    0x4082b0
  40a5e2:	lea    rcx,[rip+0x20147]        # 0x42a730
  40a5e9:	call   0x4082b0
  40a5ee:	jmp    0x40a57d
  40a5f0:	lea    rdx,[rip+0x1f4fd]        # 0x429af4
  40a5f7:	lea    rcx,[rip+0x1f258]        # 0x429856
  40a5fe:	call   0x4082b0
  40a603:	jmp    0x40a57d
  40a608:	nop    DWORD PTR [rax+rax*1+0x0]
  40a610:	push   r15
  40a612:	push   r14
  40a614:	push   r13
  40a616:	push   r12
  40a618:	push   rbp
  40a619:	push   rdi
  40a61a:	push   rsi
  40a61b:	push   rbx
  40a61c:	sub    rsp,0x68
  40a620:	mov    eax,DWORD PTR [rcx+0x10]
  40a623:	test   al,0x8
  40a625:	jne    0x40a730
  40a62b:	mov    rdi,QWORD PTR [rcx+0x20]
  40a62f:	test   rdi,rdi
  40a632:	je     0x40a770
  40a638:	mov    rdx,QWORD PTR [rcx+0x18]
  40a63c:	lea    r13,[rsp+0x40]
  40a641:	mov    rbp,rcx
  40a644:	mov    r8d,0x20
  40a64a:	mov    rcx,r13
  40a64d:	call   0x41b350
  40a652:	test   eax,eax
  40a654:	jne    0x40a730
  40a65a:	mov    eax,DWORD PTR [rdi]
  40a65c:	test   eax,eax
  40a65e:	jle    0x40a6f7
  40a664:	lea    r15d,[rax-0x1]
  40a668:	xor    ebx,ebx
  40a66a:	xor    r12d,r12d
  40a66d:	lea    rax,[r15+0x1]
  40a671:	mov    QWORD PTR [rsp+0x38],rax
  40a676:	jmp    0x40a6a0
  40a678:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	mov    BYTE PTR [r15],0x3d
  40a684:	cmp    r14d,r12d
  40a687:	je     0x40a691
  40a689:	movsxd rax,r12d
  40a68c:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  40a691:	add    r12d,0x1
  40a695:	add    rbx,0x1
  40a699:	cmp    rbx,QWORD PTR [rsp+0x38]
  40a69e:	je     0x40a6f7
  40a6a0:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  40a6a5:	mov    edx,0x3d
  40a6aa:	mov    r14d,ebx
  40a6ad:	mov    rcx,rsi
  40a6b0:	call   0x421dc0
  40a6b5:	test   rax,rax
  40a6b8:	mov    r15,rax
  40a6bb:	je     0x40a741
  40a6c1:	mov    BYTE PTR [rax],0x0
  40a6c4:	xor    r9d,r9d
  40a6c7:	xor    r8d,r8d
  40a6ca:	mov    DWORD PTR [rsp+0x20],0x0
  40a6d2:	mov    rdx,rsi
  40a6d5:	mov    rcx,r13
  40a6d8:	call   0x41b348
  40a6dd:	test   eax,eax
  40a6df:	jne    0x40a680
  40a6e1:	mov    rcx,rsi
  40a6e4:	add    rbx,0x1
  40a6e8:	call   0x421e50
  40a6ed:	sub    DWORD PTR [rdi],0x1
  40a6f0:	cmp    rbx,QWORD PTR [rsp+0x38]
  40a6f5:	jne    0x40a6a0
  40a6f7:	mov    rcx,r13
  40a6fa:	call   0x41b340
  40a6ff:	mov    eax,DWORD PTR [rdi]
  40a701:	test   eax,eax
  40a703:	jne    0x40a730
  40a705:	mov    eax,DWORD PTR [rbp+0x10]
  40a708:	mov    edx,eax
  40a70a:	and    edx,0xfffff00
  40a710:	test   ah,0x8
  40a713:	jne    0x40a718
  40a715:	or     edx,0x20
  40a718:	mov    DWORD PTR [rbp+0x10],edx
  40a71b:	mov    rcx,rdi
  40a71e:	call   0x421e50
  40a723:	mov    QWORD PTR [rbp+0x20],0x0
  40a72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a730:	add    rsp,0x68
  40a734:	pop    rbx
  40a735:	pop    rsi
  40a736:	pop    rdi
  40a737:	pop    rbp
  40a738:	pop    r12
  40a73a:	pop    r13
  40a73c:	pop    r14
  40a73e:	pop    r15
  40a740:	ret    
  40a741:	xor    r9d,r9d
  40a744:	xor    r8d,r8d
  40a747:	mov    DWORD PTR [rsp+0x20],0x0
  40a74f:	mov    rdx,rsi
  40a752:	mov    rcx,r13
  40a755:	call   0x41b348
  40a75a:	test   eax,eax
  40a75c:	jne    0x40a684
  40a762:	jmp    0x40a6e1
  40a767:	nop    WORD PTR [rax+rax*1+0x0]
  40a770:	mov    edx,eax
  40a772:	and    edx,0xfffff00
  40a778:	test   ah,0x8
  40a77b:	jne    0x40a780
  40a77d:	or     edx,0x20
  40a780:	mov    DWORD PTR [rcx+0x10],edx
  40a783:	jmp    0x40a730
  40a785:	nop
  40a786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a790:	push   rsi
  40a791:	push   rbx
  40a792:	sub    rsp,0x28
  40a796:	test   BYTE PTR [rdx+0x10],0x4
  40a79a:	je     0x40a7a5
  40a79c:	mov    rax,QWORD PTR [rdx]
  40a79f:	test   BYTE PTR [rax+0x13],0x2
  40a7a3:	jne    0x40a7b0
  40a7a5:	add    rsp,0x28
  40a7a9:	pop    rbx
  40a7aa:	pop    rsi
  40a7ab:	jmp    0x409890
  40a7b0:	mov    rsi,QWORD PTR [rax+0x50]
  40a7b4:	mov    rbx,QWORD PTR [rip+0x193b5]        # 0x423b70
  40a7bb:	call   QWORD PTR [rip+0x2e7bb]        # 0x438f7c
  40a7c1:	lea    rcx,[rax+0x60]
  40a7c5:	mov    r8,rsi
  40a7c8:	mov    rdx,rbx
  40a7cb:	call   0x407ea0
  40a7d0:	mov    eax,0xffffffff
  40a7d5:	add    rsp,0x28
  40a7d9:	pop    rbx
  40a7da:	pop    rsi
  40a7db:	ret    
  40a7dc:	nop    DWORD PTR [rax+0x0]
  40a7e0:	push   r15
  40a7e2:	push   r14
  40a7e4:	push   r13
  40a7e6:	push   r12
  40a7e8:	push   rbp
  40a7e9:	push   rdi
  40a7ea:	push   rsi
  40a7eb:	push   rbx
  40a7ec:	sub    rsp,0x188
  40a7f3:	movzx  eax,WORD PTR [rcx+0xaa]
  40a7fa:	test   ax,0x7fff
  40a7fe:	je     0x40aa58
  40a804:	mov    r12,rdx
  40a807:	lea    rdx,[rax+rax*2]
  40a80b:	mov    rbp,rcx
  40a80e:	mov    rcx,QWORD PTR [rcx+0x78]
  40a812:	lea    rax,[rax+rdx*4]
  40a816:	lea    rax,[rcx+rax*8]
  40a81a:	mov    rbx,QWORD PTR [rax+0x18]
  40a81e:	test   rbx,rbx
  40a821:	je     0x40a82c
  40a823:	cmp    BYTE PTR [rbx],0x0
  40a826:	jne    0x40a8d0
  40a82c:	mov    rax,QWORD PTR [rbp+0x58]
  40a830:	test   rax,rax
  40a833:	jne    0x40a844
  40a835:	jmp    0x40aa58
  40a83a:	nop    WORD PTR [rax+rax*1+0x0]
  40a840:	add    rax,0x8
  40a844:	cmp    QWORD PTR [rax+0x8],0x0
  40a849:	jne    0x40a840
  40a84b:	mov    rbx,QWORD PTR [rax]
  40a84e:	xor    edi,edi
  40a850:	cmp    BYTE PTR [rbx],0x24
  40a853:	je     0x40a8d4
  40a855:	lea    r13,[rsp+0x30]
  40a85a:	mov    rcx,rbx
  40a85d:	mov    rsi,QWORD PTR [rip+0x2e990]        # 0x4391f4
  40a864:	mov    rdx,r13
  40a867:	call   rsi
  40a869:	test   eax,eax
  40a86b:	jne    0x40aa60
  40a871:	movzx  eax,WORD PTR [rsp+0x36]
  40a876:	and    ax,0xf000
  40a87a:	cmp    ax,0x4000
  40a87e:	je     0x40a9b0
  40a884:	cmp    ax,0x8000
  40a888:	je     0x40aacd
  40a88e:	mov    rbp,QWORD PTR [rbp+0x28]
  40a892:	mov    rsi,QWORD PTR [rip+0x19347]        # 0x423be0
  40a899:	call   QWORD PTR [rip+0x2e6dd]        # 0x438f7c
  40a89f:	lea    rcx,[rax+0x60]
  40a8a3:	mov    r9,rbx
  40a8a6:	mov    r8,rbp
  40a8a9:	mov    rdx,rsi
  40a8ac:	call   0x407ea0
  40a8b1:	xor    eax,eax
  40a8b3:	test   edi,edi
  40a8b5:	jne    0x40aa50
  40a8bb:	add    rsp,0x188
  40a8c2:	pop    rbx
  40a8c3:	pop    rsi
  40a8c4:	pop    rdi
  40a8c5:	pop    rbp
  40a8c6:	pop    r12
  40a8c8:	pop    r13
  40a8ca:	pop    r14
  40a8cc:	pop    r15
  40a8ce:	ret    
  40a8cf:	nop
  40a8d0:	xor    edi,edi
  40a8d2:	jmp    0x40a855
  40a8d4:	lea    r13,[rbx+0x1]
  40a8d8:	mov    edx,0x5c
  40a8dd:	mov    rcx,r13
  40a8e0:	call   0x421dc0
  40a8e5:	test   rax,rax
  40a8e8:	mov    r14,rax
  40a8eb:	je     0x40ab78
  40a8f1:	sub    rax,r13
  40a8f4:	cmp    rax,0x7f
  40a8f8:	jg     0x40aa58
  40a8fe:	lea    r8,[rsp+0x70]
  40a903:	cmp    rax,0x8
  40a907:	mov    rsi,r13
  40a90a:	mov    rdi,r8
  40a90d:	jb     0x40a919
  40a90f:	mov    rcx,rax
  40a912:	shr    rcx,0x3
  40a916:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a919:	xor    edx,edx
  40a91b:	test   al,0x4
  40a91d:	je     0x40a928
  40a91f:	mov    edx,DWORD PTR [rsi]
  40a921:	mov    DWORD PTR [rdi],edx
  40a923:	mov    edx,0x4
  40a928:	test   al,0x2
  40a92a:	je     0x40a938
  40a92c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  40a930:	mov    WORD PTR [rdi+rdx*1],cx
  40a934:	add    rdx,0x2
  40a938:	test   al,0x1
  40a93a:	je     0x40a943
  40a93c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  40a940:	mov    BYTE PTR [rdi+rdx*1],cl
  40a943:	mov    rcx,r8
  40a946:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  40a94b:	call   0x421e30
  40a950:	test   rax,rax
  40a953:	mov    rdi,rax
  40a956:	je     0x40ab8c
  40a95c:	mov    rcx,rax
  40a95f:	call   0x421d98
  40a964:	mov    rcx,r14
  40a967:	mov    rsi,rax
  40a96a:	call   0x421d98
  40a96f:	lea    rcx,[rsi+rax*1+0x2]
  40a974:	mov    r13,rax
  40a977:	call   0x409ce0
  40a97c:	mov    rbx,rax
  40a97f:	mov    r8,rsi
  40a982:	mov    rdx,rdi
  40a985:	mov    rcx,rax
  40a988:	add    rsi,rbx
  40a98b:	mov    edi,0x1
  40a990:	call   0x421e08
  40a995:	lea    rcx,[rsi+0x1]
  40a999:	lea    r8,[r13+0x1]
  40a99d:	mov    BYTE PTR [rsi],0x2f
  40a9a0:	mov    rdx,r14
  40a9a3:	call   0x421e08
  40a9a8:	jmp    0x40a855
  40a9ad:	nop    DWORD PTR [rax]
  40a9b0:	mov    rcx,rbx
  40a9b3:	call   0x421d98
  40a9b8:	mov    rcx,QWORD PTR [rbp+0x38]
  40a9bc:	mov    r14,rax
  40a9bf:	call   0x421d98
  40a9c4:	lea    r14,[r14+rax*1+0x2]
  40a9c9:	mov    rcx,r14
  40a9cc:	call   0x409ce0
  40a9d1:	mov    r15,rax
  40a9d4:	mov    rax,QWORD PTR [rbp+0x38]
  40a9d8:	lea    r8,[rip+0x1d93d]        # 0x42831c
  40a9df:	mov    r9,rbx
  40a9e2:	mov    rdx,r14
  40a9e5:	mov    rcx,r15
  40a9e8:	mov    QWORD PTR [rsp+0x20],rax
  40a9ed:	call   0x408290
  40a9f2:	cdqe   
  40a9f4:	cmp    r14,rax
  40a9f7:	jbe    0x40ac3d
  40a9fd:	test   edi,edi
  40a9ff:	jne    0x40ab46
  40aa05:	mov    rdx,r13
  40aa08:	mov    rcx,r15
  40aa0b:	call   rsi
  40aa0d:	test   eax,eax
  40aa0f:	jne    0x40ab53
  40aa15:	movzx  eax,WORD PTR [rsp+0x36]
  40aa1a:	and    ax,0xf000
  40aa1e:	cmp    ax,0x8000
  40aa22:	je     0x40ac30
  40aa28:	mov    rbx,QWORD PTR [rip+0x191b1]        # 0x423be0
  40aa2f:	mov    rsi,QWORD PTR [rbp+0x28]
  40aa33:	call   QWORD PTR [rip+0x2e543]        # 0x438f7c
  40aa39:	lea    rcx,[rax+0x60]
  40aa3d:	mov    r9,r15
  40aa40:	mov    rdx,rbx
  40aa43:	mov    r8,rsi
  40aa46:	mov    rbx,r15
  40aa49:	call   0x407ea0
  40aa4e:	xchg   ax,ax
  40aa50:	mov    rcx,rbx
  40aa53:	call   0x421e50
  40aa58:	xor    eax,eax
  40aa5a:	jmp    0x40a8bb
  40aa5f:	nop
  40aa60:	mov    r15,QWORD PTR [rip+0x2e565]        # 0x438fcc
  40aa67:	call   r15
  40aa6a:	cmp    DWORD PTR [rax],0x2
  40aa6d:	jne    0x40aae1
  40aa6f:	mov    edx,0x5c
  40aa74:	mov    rcx,rbx
  40aa77:	call   0x421d78
  40aa7c:	test   rax,rax
  40aa7f:	je     0x40aac3
  40aa81:	sub    rax,rbx
  40aa84:	cmp    rax,0x103
  40aa8a:	mov    r14,rax
  40aa8d:	ja     0x40aae1
  40aa8f:	lea    r9,[rsp+0x70]
  40aa94:	mov    r8,rax
  40aa97:	mov    rdx,rbx
  40aa9a:	mov    rcx,r9
  40aa9d:	call   0x421e08
  40aaa2:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  40aaa8:	mov    rdx,r13
  40aaab:	mov    rcx,rax
  40aaae:	call   rsi
  40aab0:	test   eax,eax
  40aab2:	jne    0x40aae1
  40aab4:	movzx  eax,WORD PTR [rsp+0x36]
  40aab9:	and    ax,0xf000
  40aabd:	cmp    ax,0x4000
  40aac1:	jne    0x40aae1
  40aac3:	mov    edx,0xffff8000
  40aac8:	mov    WORD PTR [rsp+0x36],dx
  40aacd:	mov    rcx,rbx
  40aad0:	call   0x421d10
  40aad5:	mov    DWORD PTR [r12],edi
  40aad9:	mov    rax,rbx
  40aadc:	jmp    0x40a8bb
  40aae1:	mov    r12,QWORD PTR [rbp+0x28]
  40aae5:	mov    rbp,QWORD PTR [rip+0x190f4]        # 0x423be0
  40aaec:	mov    rsi,QWORD PTR [rip+0x2e489]        # 0x438f7c
  40aaf3:	call   rsi
  40aaf5:	lea    rcx,[rax+0x60]
  40aaf9:	mov    r8,r12
  40aafc:	mov    rdx,rbp
  40aaff:	call   0x407ea0
  40ab04:	call   r15
  40ab07:	mov    ecx,DWORD PTR [rax]
  40ab09:	call   0x421da8
  40ab0e:	mov    r13,rax
  40ab11:	call   r15
  40ab14:	mov    rbp,QWORD PTR [rip+0x19045]        # 0x423b60
  40ab1b:	mov    r12d,DWORD PTR [rax]
  40ab1e:	call   rsi
  40ab20:	lea    rcx,[rax+0x60]
  40ab24:	mov    QWORD PTR [rsp+0x20],rbx
  40ab29:	mov    r9,r13
  40ab2c:	mov    r8d,r12d
  40ab2f:	mov    rdx,rbp
  40ab32:	call   0x407ea0
  40ab37:	test   edi,edi
  40ab39:	jne    0x40aa50
  40ab3f:	xor    eax,eax
  40ab41:	jmp    0x40a8bb
  40ab46:	mov    rcx,rbx
  40ab49:	call   0x421e50
  40ab4e:	jmp    0x40aa05
  40ab53:	mov    rbx,QWORD PTR [rip+0x2e472]        # 0x438fcc
  40ab5a:	call   rbx
  40ab5c:	cmp    DWORD PTR [rax],0x2
  40ab5f:	jne    0x40abce
  40ab61:	mov    eax,0xffff8000
  40ab66:	mov    rbx,r15
  40ab69:	mov    edi,0x1
  40ab6e:	mov    WORD PTR [rsp+0x36],ax
  40ab73:	jmp    0x40aacd
  40ab78:	mov    rcx,r13
  40ab7b:	call   0x421e30
  40ab80:	test   rax,rax
  40ab83:	mov    rbx,rax
  40ab86:	jne    0x40a855
  40ab8c:	mov    rsi,QWORD PTR [rip+0x1904d]        # 0x423be0
  40ab93:	mov    rdi,QWORD PTR [rbp+0x28]
  40ab97:	mov    rbx,QWORD PTR [rip+0x2e3de]        # 0x438f7c
  40ab9e:	call   rbx
  40aba0:	lea    rcx,[rax+0x60]
  40aba4:	mov    rdx,rsi
  40aba7:	mov    r8,rdi
  40abaa:	call   0x407ea0
  40abaf:	mov    rsi,QWORD PTR [rip+0x18fca]        # 0x423b80
  40abb6:	call   rbx
  40abb8:	lea    rcx,[rax+0x60]
  40abbc:	mov    r8,r13
  40abbf:	mov    rdx,rsi
  40abc2:	call   0x407ea0
  40abc7:	xor    eax,eax
  40abc9:	jmp    0x40a8bb
  40abce:	mov    rbp,QWORD PTR [rbp+0x28]
  40abd2:	mov    rdi,QWORD PTR [rip+0x19007]        # 0x423be0
  40abd9:	mov    rsi,QWORD PTR [rip+0x2e39c]        # 0x438f7c
  40abe0:	call   rsi
  40abe2:	lea    rcx,[rax+0x60]
  40abe6:	mov    r8,rbp
  40abe9:	mov    rdx,rdi
  40abec:	call   0x407ea0
  40abf1:	call   rbx
  40abf3:	mov    ecx,DWORD PTR [rax]
  40abf5:	call   0x421da8
  40abfa:	mov    rbp,rax
  40abfd:	call   rbx
  40abff:	mov    rbx,QWORD PTR [rip+0x18f5a]        # 0x423b60
  40ac06:	mov    edi,DWORD PTR [rax]
  40ac08:	call   rsi
  40ac0a:	lea    rcx,[rax+0x60]
  40ac0e:	mov    r9,rbp
  40ac11:	mov    QWORD PTR [rsp+0x20],r15
  40ac16:	mov    r8d,edi
  40ac19:	mov    rdx,rbx
  40ac1c:	call   0x407ea0
  40ac21:	mov    rcx,r15
  40ac24:	call   0x421e50
  40ac29:	xor    eax,eax
  40ac2b:	jmp    0x40a8bb
  40ac30:	mov    rbx,r15
  40ac33:	mov    edi,0x1
  40ac38:	jmp    0x40aacd
  40ac3d:	mov    ecx,0x1
  40ac42:	call   0x4082e0
  40ac47:	nop
  40ac48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac50:	push   r15
  40ac52:	push   r14
  40ac54:	push   r13
  40ac56:	push   r12
  40ac58:	push   rbp
  40ac59:	push   rdi
  40ac5a:	push   rsi
  40ac5b:	push   rbx
  40ac5c:	sub    rsp,0x148
  40ac63:	test   rcx,rcx
  40ac66:	mov    rsi,rcx
  40ac69:	mov    rbx,rdx
  40ac6c:	je     0x40ad19
  40ac72:	lea    r12,[rsp+0x30]
  40ac77:	xor    r13d,r13d
  40ac7a:	mov    rcx,rsi
  40ac7d:	call   0x421d98
  40ac82:	mov    edx,r13d
  40ac85:	cmp    rdx,rax
  40ac88:	jae    0x40ad19
  40ac8e:	movsxd rax,r13d
  40ac91:	add    rax,rsi
  40ac94:	movzx  edx,BYTE PTR [rax]
  40ac97:	cmp    dl,0x3a
  40ac9a:	jne    0x40acac
  40ac9c:	nop    DWORD PTR [rax+0x0]
  40aca0:	add    rax,0x1
  40aca4:	movzx  edx,BYTE PTR [rax]
  40aca7:	cmp    dl,0x3a
  40acaa:	je     0x40aca0
  40acac:	mov    rcx,r12
  40acaf:	add    rax,0x1
  40acb3:	test   dl,dl
  40acb5:	mov    BYTE PTR [rcx],dl
  40acb7:	je     0x40acc1
  40acb9:	cmp    dl,0x3a
  40acbc:	jne    0x40ad21
  40acbe:	mov    BYTE PTR [rcx],0x0
  40acc1:	mov    r13d,eax
  40acc4:	sub    r13d,esi
  40acc7:	cmp    BYTE PTR [rsp+0x30],0x0
  40accc:	je     0x40ad19
  40acce:	mov    rcx,r12
  40acd1:	call   0x41c8c0
  40acd6:	test   rax,rax
  40acd9:	mov    rdi,rax
  40acdc:	jne    0x40acf0
  40acde:	jmp    0x40ac7a
  40ace0:	lea    rcx,[rax+0x8]
  40ace4:	mov    rdx,rbx
  40ace7:	call   0x421db8
  40acec:	test   eax,eax
  40acee:	je     0x40ad40
  40acf0:	mov    rcx,rdi
  40acf3:	call   0x41caa0
  40acf8:	test   rax,rax
  40acfb:	jne    0x40ace0
  40acfd:	mov    rcx,rdi
  40ad00:	call   0x41ccc0
  40ad05:	mov    rcx,rsi
  40ad08:	call   0x421d98
  40ad0d:	mov    edx,r13d
  40ad10:	cmp    rdx,rax
  40ad13:	jb     0x40ac8e
  40ad19:	xor    r14d,r14d
  40ad1c:	jmp    0x40af1e
  40ad21:	add    rcx,0x1
  40ad25:	mov    rdx,rcx
  40ad28:	sub    rdx,r12
  40ad2b:	cmp    edx,0x103
  40ad31:	ja     0x40acc1
  40ad33:	movzx  edx,BYTE PTR [rax]
  40ad36:	jmp    0x40acaf
  40ad3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad40:	cmp    BYTE PTR [rbx],0x2f
  40ad43:	je     0x40af5b
  40ad49:	cmp    BYTE PTR [rsp+0x30],0x0
  40ad4e:	jne    0x40af6b
  40ad54:	mov    rcx,rbx
  40ad57:	call   0x421d98
  40ad5c:	lea    rcx,[rax+0x3]
  40ad60:	call   0x421e18
  40ad65:	lea    rcx,[rax+0x2]
  40ad69:	mov    rbp,rax
  40ad6c:	mov    BYTE PTR [rax],0x2e
  40ad6f:	mov    BYTE PTR [rax+0x1],0x2f
  40ad73:	mov    BYTE PTR [rax+0x2],0x0
  40ad77:	mov    rdx,rbx
  40ad7a:	call   0x421db0
  40ad7f:	mov    rcx,rbp
  40ad82:	mov    edx,0x5
  40ad87:	call   0x421ce0
  40ad8c:	test   eax,eax
  40ad8e:	mov    rcx,rbp
  40ad91:	js     0x40af41
  40ad97:	call   0x421d08
  40ad9c:	cmp    BYTE PTR [rbp+0x0],0x2f
  40ada0:	mov    r14,rax
  40ada3:	sete   BYTE PTR [rsp+0x2f]
  40ada8:	movzx  eax,BYTE PTR [rsp+0x2f]
  40adad:	xor    r15d,r15d
  40adb0:	xor    r13d,r13d
  40adb3:	add    eax,0x2e
  40adb6:	mov    BYTE PTR [rsp+0x2f],al
  40adba:	movzx  eax,BYTE PTR [r14]
  40adbe:	xchg   ax,ax
  40adc0:	test   al,al
  40adc2:	mov    rbx,r13
  40adc5:	je     0x40aef7
  40adcb:	cmp    al,0x2f
  40adcd:	je     0x40af35
  40add3:	add    rbx,0x1
  40add7:	mov    esi,r15d
  40adda:	jmp    0x40ade7
  40addc:	nop    DWORD PTR [rax+0x0]
  40ade0:	test   dl,dl
  40ade2:	je     0x40adf8
  40ade4:	mov    rbx,rcx
  40ade7:	movzx  edx,BYTE PTR [r14+rbx*1]
  40adec:	add    esi,0x1
  40adef:	lea    rcx,[rbx+0x1]
  40adf3:	cmp    dl,0x2f
  40adf6:	jne    0x40ade0
  40adf8:	test   dl,dl
  40adfa:	lea    r15d,[rsi+0x1]
  40adfe:	je     0x40aef7
  40ae04:	movsxd r13,r15d
  40ae07:	lea    r12,[r14+r13*1]
  40ae0b:	movzx  eax,BYTE PTR [r12]
  40ae10:	cmp    al,0x2f
  40ae12:	jne    0x40ae46
  40ae14:	lea    r8,[r14+r13*1+0x1]
  40ae19:	mov    r9d,r15d
  40ae1c:	nop    DWORD PTR [rax+0x0]
  40ae20:	mov    rdx,r8
  40ae23:	add    r8,0x1
  40ae27:	add    r9d,0x1
  40ae2b:	cmp    BYTE PTR [r8-0x1],0x2f
  40ae30:	je     0x40ae20
  40ae32:	cmp    r15d,r9d
  40ae35:	je     0x40ae46
  40ae37:	lea    rcx,[r14+rbx*1+0x1]
  40ae3c:	call   0x421db0
  40ae41:	movzx  eax,BYTE PTR [r12]
  40ae46:	test   esi,esi
  40ae48:	je     0x40ae5e
  40ae4a:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  40ae50:	je     0x40adc0
  40ae56:	test   al,al
  40ae58:	je     0x40afe9
  40ae5e:	cmp    al,0x2e
  40ae60:	jne    0x40adc0
  40ae66:	lea    rdx,[r14+r13*1+0x1]
  40ae6b:	movzx  ecx,BYTE PTR [rdx]
  40ae6e:	test   cl,cl
  40ae70:	je     0x40afe9
  40ae76:	cmp    cl,0x2f
  40ae79:	je     0x40af53
  40ae7f:	cmp    cl,0x2e
  40ae82:	jne    0x40adc0
  40ae88:	lea    rdx,[r14+r13*1+0x2]
  40ae8d:	movzx  ecx,BYTE PTR [rdx]
  40ae90:	test   cl,cl
  40ae92:	je     0x40ae9d
  40ae94:	cmp    cl,0x2f
  40ae97:	jne    0x40adc0
  40ae9d:	movsxd rcx,esi
  40aea0:	sub    rcx,0x1
  40aea4:	jmp    0x40aebf
  40aea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aeb0:	lea    rax,[rcx-0x1]
  40aeb4:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  40aeba:	je     0x40aece
  40aebc:	mov    rcx,rax
  40aebf:	sub    esi,0x1
  40aec2:	cmp    esi,0xffffffff
  40aec5:	jne    0x40aeb0
  40aec7:	mov    rcx,0xffffffffffffffff
  40aece:	lea    rcx,[r14+rcx*1+0x1]
  40aed3:	call   0x421db0
  40aed8:	mov    r15d,0x0
  40aede:	test   esi,esi
  40aee0:	cmovns r15d,esi
  40aee4:	movsxd r13,r15d
  40aee7:	movzx  eax,BYTE PTR [r14+r13*1]
  40aeec:	mov    rbx,r13
  40aeef:	test   al,al
  40aef1:	jne    0x40adcb
  40aef7:	cmp    BYTE PTR [r14],0x0
  40aefb:	jne    0x40affe
  40af01:	movzx  eax,BYTE PTR [rsp+0x2f]
  40af06:	mov    rcx,rbp
  40af09:	mov    BYTE PTR [r14+0x1],0x0
  40af0e:	mov    BYTE PTR [r14],al
  40af11:	call   0x421e50
  40af16:	mov    rcx,rdi
  40af19:	call   0x41ccc0
  40af1e:	mov    rax,r14
  40af21:	add    rsp,0x148
  40af28:	pop    rbx
  40af29:	pop    rsi
  40af2a:	pop    rdi
  40af2b:	pop    rbp
  40af2c:	pop    r12
  40af2e:	pop    r13
  40af30:	pop    r14
  40af32:	pop    r15
  40af34:	ret    
  40af35:	mov    esi,r15d
  40af38:	add    r15d,0x1
  40af3c:	jmp    0x40ae04
  40af41:	call   0x421e50
  40af46:	mov    rcx,rdi
  40af49:	call   0x41ccc0
  40af4e:	jmp    0x40ad05
  40af53:	mov    rcx,r12
  40af56:	jmp    0x40aed3
  40af5b:	mov    rcx,rbx
  40af5e:	call   0x421d08
  40af63:	mov    rbp,rax
  40af66:	jmp    0x40ad7f
  40af6b:	mov    r14,r12
  40af6e:	mov    edx,DWORD PTR [r14]
  40af71:	add    r14,0x4
  40af75:	lea    eax,[rdx-0x1010101]
  40af7b:	not    edx
  40af7d:	and    eax,edx
  40af7f:	and    eax,0x80808080
  40af84:	je     0x40af6e
  40af86:	mov    edx,eax
  40af88:	mov    rcx,rbx
  40af8b:	shr    edx,0x10
  40af8e:	test   eax,0x8080
  40af93:	cmove  eax,edx
  40af96:	lea    rdx,[r14+0x2]
  40af9a:	cmove  r14,rdx
  40af9e:	add    al,al
  40afa0:	sbb    r14,0x3
  40afa4:	sub    r14,r12
  40afa7:	call   0x421d98
  40afac:	lea    rcx,[r14+rax*1+0x2]
  40afb1:	call   0x421e18
  40afb6:	lea    r8,[r14+0x1]
  40afba:	mov    rcx,rax
  40afbd:	mov    rdx,r12
  40afc0:	mov    rbp,rax
  40afc3:	call   0x421e08
  40afc8:	movsxd rcx,r14d
  40afcb:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  40afd0:	je     0x40b013
  40afd2:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  40afd7:	lea    ecx,[r14+0x1]
  40afdb:	movsxd rcx,ecx
  40afde:	add    rcx,rbp
  40afe1:	mov    BYTE PTR [rcx],0x0
  40afe4:	jmp    0x40ad77
  40afe9:	lea    eax,[r15-0x1]
  40afed:	cdqe   
  40afef:	mov    BYTE PTR [r14+rax*1],0x0
  40aff4:	cmp    BYTE PTR [r14],0x0
  40aff8:	je     0x40af01
  40affe:	mov    rcx,rbp
  40b001:	call   0x421e50
  40b006:	mov    rcx,rdi
  40b009:	call   0x41ccc0
  40b00e:	jmp    0x40af1e
  40b013:	add    rcx,rbp
  40b016:	jmp    0x40ad77
  40b01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b020:	push   r12
  40b022:	push   rbp
  40b023:	push   rdi
  40b024:	push   rsi
  40b025:	push   rbx
  40b026:	sub    rsp,0x30
  40b02a:	test   rcx,rcx
  40b02d:	mov    rbx,rcx
  40b030:	mov    rdi,rdx
  40b033:	je     0x40b1b8
  40b039:	mov    r9d,DWORD PTR [rcx+0x10]
  40b03d:	mov    eax,r9d
  40b040:	shr    eax,0x15
  40b043:	and    eax,0x1
  40b046:	test   r9d,0x2000
  40b04d:	mov    BYTE PTR [rip+0x29ba1],al        # 0x434bf4
  40b053:	je     0x40b082
  40b055:	mov    rax,QWORD PTR [rcx+0xa0]
  40b05c:	test   rax,rax
  40b05f:	je     0x40b082
  40b061:	mov    edx,DWORD PTR [rip+0x18999]        # 0x423a00
  40b067:	test   edx,edx
  40b069:	je     0x40b082
  40b06b:	mov    edx,r9d
  40b06e:	and    edx,0x30000
  40b074:	cmp    edx,0x20000
  40b07a:	je     0x40b111
  40b080:	call   rax
  40b082:	mov    esi,DWORD PTR [rbx]
  40b084:	lea    eax,[rsi-0x19000]
  40b08a:	cmp    eax,0x10001
  40b08f:	ja     0x40b129
  40b095:	cmp    QWORD PTR [rbx+0x28],0x0
  40b09a:	je     0x40b0b0
  40b09c:	xor    eax,eax
  40b09e:	add    rsp,0x30
  40b0a2:	pop    rbx
  40b0a3:	pop    rsi
  40b0a4:	pop    rdi
  40b0a5:	pop    rbp
  40b0a6:	pop    r12
  40b0a8:	ret    
  40b0a9:	nop    DWORD PTR [rax+0x0]
  40b0b0:	mov    edx,0x5c
  40b0b5:	mov    rcx,rdi
  40b0b8:	call   0x421d78
  40b0bd:	test   rax,rax
  40b0c0:	je     0x40b123
  40b0c2:	add    rax,0x1
  40b0c6:	mov    QWORD PTR [rbx+0x28],rax
  40b0ca:	lea    rcx,[rip+0x1d251]        # 0x428322
  40b0d1:	call   0x421e30
  40b0d6:	mov    rdx,rdi
  40b0d9:	mov    rcx,rax
  40b0dc:	call   0x40ac50
  40b0e1:	test   rax,rax
  40b0e4:	lea    rdx,[rip+0x1e5d5]        # 0x4296c0
  40b0eb:	lea    rcx,[rip+0x184ce]        # 0x4235c0
  40b0f2:	cmove  rax,rdi
  40b0f6:	mov    QWORD PTR [rbx+0x20],rax
  40b0fa:	mov    eax,0x2d
  40b0ff:	nop
  40b100:	add    rdx,0x1
  40b104:	mov    BYTE PTR [rcx+rax*1],0x2d
  40b108:	movzx  eax,BYTE PTR [rdx]
  40b10b:	test   al,al
  40b10d:	jne    0x40b100
  40b10f:	jmp    0x40b09c
  40b111:	or     r9d,0x10000
  40b118:	mov    DWORD PTR [rcx+0x10],r9d
  40b11c:	call   rax
  40b11e:	jmp    0x40b082
  40b123:	mov    QWORD PTR [rbx+0x28],rdi
  40b127:	jmp    0x40b0ca
  40b129:	mov    r12,QWORD PTR [rip+0x18910]        # 0x423a40
  40b130:	mov    rbp,QWORD PTR [rip+0x2de45]        # 0x438f7c
  40b137:	call   rbp
  40b139:	lea    rcx,[rax+0x60]
  40b13d:	mov    eax,esi
  40b13f:	mov    r8,rdi
  40b142:	and    eax,0x7f
  40b145:	mov    rdx,r12
  40b148:	mov    DWORD PTR [rsp+0x28],eax
  40b14c:	mov    eax,esi
  40b14e:	sar    esi,0xc
  40b151:	sar    eax,0x7
  40b154:	mov    r9d,esi
  40b157:	and    eax,0x1f
  40b15a:	mov    DWORD PTR [rsp+0x20],eax
  40b15e:	call   0x407ea0
  40b163:	cmp    DWORD PTR [rbx],0x29001
  40b169:	jle    0x40b1a4
  40b16b:	call   rbp
  40b16d:	mov    rcx,QWORD PTR [rip+0x188c4]        # 0x423a38
  40b174:	lea    rdx,[rax+0x60]
  40b178:	call   0x421e60
  40b17d:	call   rbp
  40b17f:	lea    rcx,[rip+0x21037]        # 0x42c1bd
  40b186:	lea    r9,[rax+0x60]
  40b18a:	mov    r8d,0x1
  40b190:	mov    edx,0x8
  40b195:	call   0x421e38
  40b19a:	mov    eax,0xffffffff
  40b19f:	jmp    0x40b09e
  40b1a4:	call   rbp
  40b1a6:	mov    rcx,QWORD PTR [rip+0x188a3]        # 0x423a50
  40b1ad:	lea    rdx,[rax+0x60]
  40b1b1:	call   0x421e60
  40b1b6:	jmp    0x40b17d
  40b1b8:	call   QWORD PTR [rip+0x2ddbe]        # 0x438f7c
  40b1be:	mov    rcx,QWORD PTR [rip+0x1886b]        # 0x423a30
  40b1c5:	lea    rdx,[rax+0x60]
  40b1c9:	call   0x421e60
  40b1ce:	mov    eax,0xffffffff
  40b1d3:	jmp    0x40b09e
  40b1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1e0:	push   r15
  40b1e2:	push   r14
  40b1e4:	push   r13
  40b1e6:	push   r12
  40b1e8:	push   rbp
  40b1e9:	push   rdi
  40b1ea:	push   rsi
  40b1eb:	push   rbx
  40b1ec:	sub    rsp,0x98
  40b1f3:	test   BYTE PTR [rcx+0x12],0x4
  40b1f7:	mov    rbx,rcx
  40b1fa:	mov    rdi,rdx
  40b1fd:	mov    rbp,r8
  40b200:	je     0x40b20d
  40b202:	cmp    WORD PTR [rdx+0x6],0x57
  40b207:	je     0x40b61e
  40b20d:	cmp    QWORD PTR [rdi+0x28],0x0
  40b212:	je     0x40b500
  40b218:	mov    eax,DWORD PTR [rip+0x299d2]        # 0x434bf0
  40b21e:	lea    rsi,[rip+0x1e49b]        # 0x4296c0
  40b225:	mov    rdx,QWORD PTR [rip+0x2999c]        # 0x434bc8
  40b22c:	lea    rcx,[rsi+rax*1+0xcb]
  40b234:	call   0x421e60
  40b239:	mov    rbp,QWORD PTR [rdi+0x28]
  40b23d:	test   rbp,rbp
  40b240:	je     0x40b2d2
  40b246:	cmp    DWORD PTR [rbp+0x4],0x8000
  40b24d:	je     0x40b510
  40b253:	mov    rdx,QWORD PTR [rip+0x2996e]        # 0x434bc8
  40b25a:	mov    rcx,QWORD PTR [rip+0x18ac7]        # 0x423d28
  40b261:	call   0x421e60
  40b266:	movsxd rax,DWORD PTR [rbp+0x0]
  40b26a:	nop    WORD PTR [rax+rax*1+0x0]
  40b270:	lea    rdx,[rax+rax*2]
  40b274:	mov    r9,QWORD PTR [rbx+0x78]
  40b278:	mov    rcx,QWORD PTR [rip+0x29949]        # 0x434bc8
  40b27f:	add    rbp,0x4
  40b283:	lea    rax,[rax+rdx*4]
  40b287:	mov    edx,DWORD PTR [rip+0x29963]        # 0x434bf0
  40b28d:	lea    rax,[r9+rax*8]
  40b291:	mov    r8,QWORD PTR [rax+0x50]
  40b295:	lea    rdx,[rsi+rdx*1+0xe5]
  40b29d:	call   0x407ea0
  40b2a2:	movsxd rax,DWORD PTR [rbp+0x0]
  40b2a6:	cmp    eax,0x8000
  40b2ab:	jne    0x40b270
  40b2ad:	cmp    QWORD PTR [rdi+0x30],0x0
  40b2b2:	je     0x40b33d
  40b2b8:	mov    eax,DWORD PTR [rip+0x29932]        # 0x434bf0
  40b2be:	mov    rdx,QWORD PTR [rip+0x29903]        # 0x434bc8
  40b2c5:	lea    rcx,[rsi+rax*1+0xd9]
  40b2cd:	call   0x421e60
  40b2d2:	mov    rbp,QWORD PTR [rdi+0x30]
  40b2d6:	test   rbp,rbp
  40b2d9:	je     0x40b33d
  40b2db:	cmp    DWORD PTR [rbp+0x4],0x8000
  40b2e2:	je     0x40b5a2
  40b2e8:	mov    rdx,QWORD PTR [rip+0x298d9]        # 0x434bc8
  40b2ef:	mov    rcx,QWORD PTR [rip+0x189d2]        # 0x423cc8
  40b2f6:	call   0x421e60
  40b2fb:	movsxd rax,DWORD PTR [rbp+0x0]
  40b2ff:	nop
  40b300:	lea    rdx,[rax+rax*2]
  40b304:	mov    rcx,QWORD PTR [rbx+0x78]
  40b308:	add    rbp,0x4
  40b30c:	lea    rax,[rax+rdx*4]
  40b310:	mov    edx,DWORD PTR [rip+0x298da]        # 0x434bf0
  40b316:	lea    rax,[rcx+rax*8]
  40b31a:	mov    rcx,QWORD PTR [rip+0x298a7]        # 0x434bc8
  40b321:	mov    r8,QWORD PTR [rax+0x50]
  40b325:	lea    rdx,[rsi+rdx*1+0xe5]
  40b32d:	call   0x407ea0
  40b332:	movsxd rax,DWORD PTR [rbp+0x0]
  40b336:	cmp    eax,0x8000
  40b33b:	jne    0x40b300
  40b33d:	mov    r8,QWORD PTR [rdi+0x58]
  40b341:	test   r8,r8
  40b344:	je     0x40b35f
  40b346:	mov    edx,DWORD PTR [rip+0x298a4]        # 0x434bf0
  40b34c:	mov    rcx,QWORD PTR [rip+0x29875]        # 0x434bc8
  40b353:	add    rdx,QWORD PTR [rip+0x188a6]        # 0x423c00
  40b35a:	call   0x407ea0
  40b35f:	mov    edx,DWORD PTR [rdi+0x10]
  40b362:	mov    eax,edx
  40b364:	and    eax,0xf000
  40b369:	shr    eax,0xc
  40b36c:	cmp    eax,0x5
  40b36f:	je     0x40b4d0
  40b375:	cmp    eax,0x7
  40b378:	je     0x40b450
  40b37e:	and    dh,0x8
  40b381:	jne    0x40b467
  40b387:	movzx  eax,WORD PTR [rdi+0x8]
  40b38b:	cmp    ax,0x8000
  40b38f:	je     0x40b39b
  40b391:	cmp    ax,WORD PTR [rdi+0x4]
  40b395:	jne    0x40b485
  40b39b:	mov    eax,DWORD PTR [rdi+0x10]
  40b39e:	test   ah,0x1
  40b3a1:	je     0x40b3bd
  40b3a3:	cmp    QWORD PTR [rbx+0x58],0x0
  40b3a8:	je     0x40b60e
  40b3ae:	movzx  edx,WORD PTR [rdi]
  40b3b1:	cmp    edx,DWORD PTR [rbx+0xb4]
  40b3b7:	jl     0x40b581
  40b3bd:	and    eax,0xf000
  40b3c2:	cmp    eax,0x4000
  40b3c7:	je     0x40b5f0
  40b3cd:	movzx  r8d,WORD PTR [rdi+0xa]
  40b3d2:	cmp    r8w,0x1
  40b3d7:	ja     0x40b540
  40b3dd:	movzx  r8d,WORD PTR [rdi+0xc]
  40b3e2:	cmp    r8w,0x1
  40b3e7:	je     0x40b413
  40b3e9:	jb     0x40b5d2
  40b3ef:	cmp    r8w,0xffff
  40b3f4:	jne    0x40b563
  40b3fa:	mov    ecx,DWORD PTR [rip+0x297f0]        # 0x434bf0
  40b400:	mov    rdx,QWORD PTR [rip+0x297c1]        # 0x434bc8
  40b407:	add    rcx,QWORD PTR [rip+0x18862]        # 0x423c70
  40b40e:	call   0x421e60
  40b413:	test   BYTE PTR [rbx+0x10],0x3
  40b417:	jne    0x40b4b3
  40b41d:	movzx  eax,WORD PTR [rdi]
  40b420:	cmp    WORD PTR [rbx+0xae],ax
  40b427:	jne    0x40b4b3
  40b42d:	mov    ecx,DWORD PTR [rip+0x297bd]        # 0x434bf0
  40b433:	mov    rdx,QWORD PTR [rip+0x2978e]        # 0x434bc8
  40b43a:	add    rcx,QWORD PTR [rip+0x187b7]        # 0x423bf8
  40b441:	call   0x421e60
  40b446:	jmp    0x40b4b3
  40b448:	nop    DWORD PTR [rax+rax*1+0x0]
  40b450:	mov    rdx,rdi
  40b453:	mov    ecx,0x1
  40b458:	call   QWORD PTR [rdi+0x38]
  40b45b:	mov    edx,DWORD PTR [rdi+0x10]
  40b45e:	and    dh,0x8
  40b461:	je     0x40b387
  40b467:	mov    ecx,DWORD PTR [rip+0x29783]        # 0x434bf0
  40b46d:	mov    rdx,QWORD PTR [rip+0x29754]        # 0x434bc8
  40b474:	add    rcx,QWORD PTR [rip+0x1879d]        # 0x423c18
  40b47b:	call   0x421e60
  40b480:	jmp    0x40b387
  40b485:	lea    rdx,[rax+rax*2]
  40b489:	mov    rcx,QWORD PTR [rip+0x29738]        # 0x434bc8
  40b490:	lea    rax,[rax+rdx*4]
  40b494:	mov    rdx,QWORD PTR [rbx+0x78]
  40b498:	lea    rax,[rdx+rax*8]
  40b49c:	mov    edx,DWORD PTR [rip+0x2974e]        # 0x434bf0
  40b4a2:	add    rdx,QWORD PTR [rip+0x1873f]        # 0x423be8
  40b4a9:	mov    r8,QWORD PTR [rax+0x50]
  40b4ad:	call   0x407ea0
  40b4b2:	nop
  40b4b3:	add    rsp,0x98
  40b4ba:	pop    rbx
  40b4bb:	pop    rsi
  40b4bc:	pop    rdi
  40b4bd:	pop    rbp
  40b4be:	pop    r12
  40b4c0:	pop    r13
  40b4c2:	pop    r14
  40b4c4:	pop    r15
  40b4c6:	ret    
  40b4c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b4d0:	mov    rax,QWORD PTR [rdi+0x38]
  40b4d4:	test   rax,rax
  40b4d7:	je     0x40b37e
  40b4dd:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x407ed0
  40b4e4:	cmp    rax,rcx
  40b4e7:	je     0x40b37e
  40b4ed:	mov    rdx,rdi
  40b4f0:	mov    ecx,0x1
  40b4f5:	call   rax
  40b4f7:	mov    edx,DWORD PTR [rdi+0x10]
  40b4fa:	jmp    0x40b37e
  40b4ff:	nop
  40b500:	cmp    QWORD PTR [rdi+0x30],0x0
  40b505:	jne    0x40b218
  40b50b:	jmp    0x40b33d
  40b510:	movsxd rax,DWORD PTR [rbp+0x0]
  40b514:	mov    r10,QWORD PTR [rbx+0x78]
  40b518:	mov    rcx,QWORD PTR [rip+0x296a9]        # 0x434bc8
  40b51f:	lea    rdx,[rax+rax*2]
  40b523:	lea    rax,[rax+rdx*4]
  40b527:	mov    rdx,QWORD PTR [rip+0x187f2]        # 0x423d20
  40b52e:	lea    rax,[r10+rax*8]
  40b532:	mov    r8,QWORD PTR [rax+0x50]
  40b536:	call   0x407ea0
  40b53b:	jmp    0x40b2ad
  40b540:	mov    edx,DWORD PTR [rip+0x296aa]        # 0x434bf0
  40b546:	movzx  r9d,WORD PTR [rdi+0xc]
  40b54b:	add    rdx,QWORD PTR [rip+0x1870e]        # 0x423c60
  40b552:	mov    rcx,QWORD PTR [rip+0x2966f]        # 0x434bc8
  40b559:	call   0x407ea0
  40b55e:	jmp    0x40b413
  40b563:	mov    edx,DWORD PTR [rip+0x29687]        # 0x434bf0
  40b569:	mov    rcx,QWORD PTR [rip+0x29658]        # 0x434bc8
  40b570:	add    rdx,QWORD PTR [rip+0x187d1]        # 0x423d48
  40b577:	call   0x407ea0
  40b57c:	jmp    0x40b413
  40b581:	mov    ecx,DWORD PTR [rip+0x29669]        # 0x434bf0
  40b587:	mov    rdx,QWORD PTR [rip+0x2963a]        # 0x434bc8
  40b58e:	add    rcx,QWORD PTR [rip+0x186e3]        # 0x423c78
  40b595:	call   0x421e60
  40b59a:	mov    eax,DWORD PTR [rdi+0x10]
  40b59d:	jmp    0x40b3bd
  40b5a2:	movsxd rax,DWORD PTR [rbp+0x0]
  40b5a6:	mov    r8,QWORD PTR [rbx+0x78]
  40b5aa:	mov    rcx,QWORD PTR [rip+0x29617]        # 0x434bc8
  40b5b1:	lea    rdx,[rax+rax*2]
  40b5b5:	lea    rax,[rax+rdx*4]
  40b5b9:	mov    rdx,QWORD PTR [rip+0x18710]        # 0x423cd0
  40b5c0:	lea    rax,[r8+rax*8]
  40b5c4:	mov    r8,QWORD PTR [rax+0x50]
  40b5c8:	call   0x407ea0
  40b5cd:	jmp    0x40b33d
  40b5d2:	mov    ecx,DWORD PTR [rip+0x29618]        # 0x434bf0
  40b5d8:	mov    rdx,QWORD PTR [rip+0x295e9]        # 0x434bc8
  40b5df:	add    rcx,QWORD PTR [rip+0x186d2]        # 0x423cb8
  40b5e6:	call   0x421e60
  40b5eb:	jmp    0x40b413
  40b5f0:	mov    ecx,DWORD PTR [rip+0x295fa]        # 0x434bf0
  40b5f6:	mov    rdx,QWORD PTR [rip+0x295cb]        # 0x434bc8
  40b5fd:	add    rcx,QWORD PTR [rip+0x18654]        # 0x423c58
  40b604:	call   0x421e60
  40b609:	jmp    0x40b413
  40b60e:	cmp    QWORD PTR [rbx+0x30],0x0
  40b613:	jne    0x40b3ae
  40b619:	jmp    0x40b3bd
  40b61e:	mov    eax,DWORD PTR [rip+0x295cc]        # 0x434bf0
  40b624:	lea    rdx,[rip+0x1e095]        # 0x4296c0
  40b62b:	mov    edi,DWORD PTR [rcx+0xb4]
  40b631:	mov    rsi,QWORD PTR [rcx+0x78]
  40b635:	mov    r8,QWORD PTR [rip+0x18724]        # 0x423d60
  40b63c:	xor    r12d,r12d
  40b63f:	mov    rcx,QWORD PTR [rip+0x29582]        # 0x434bc8
  40b646:	lea    rdx,[rdx+rax*1+0xe5]
  40b64e:	call   0x407ea0
  40b653:	test   DWORD PTR [rsi+0x10],0x6280000
  40b65a:	jne    0x40b682
  40b65c:	movzx  eax,BYTE PTR [rsi+0x2]
  40b660:	cmp    al,0x7f
  40b662:	ja     0x40b672
  40b664:	lea    rdx,[rip+0x20c55]        # 0x42c2c0
  40b66b:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40b670:	jne    0x40b682
  40b672:	mov    rcx,QWORD PTR [rsi+0x50]
  40b676:	call   0x421d98
  40b67b:	cmp    r12,rax
  40b67e:	cmovb  r12,rax
  40b682:	sub    edi,0x1
  40b685:	add    rsi,0x68
  40b689:	test   edi,edi
  40b68b:	jg     0x40b653
  40b68d:	lea    r14,[rsp+0x30]
  40b692:	lea    r9d,[r12+0x4]
  40b697:	lea    r8,[rip+0x1d1f7]        # 0x428895
  40b69e:	mov    edx,0xc
  40b6a3:	mov    rcx,r14
  40b6a6:	call   0x408290
  40b6ab:	mov    eax,DWORD PTR [rip+0x2953f]        # 0x434bf0
  40b6b1:	test   eax,eax
  40b6b3:	je     0x40b6be
  40b6b5:	sub    eax,0x1
  40b6b8:	mov    DWORD PTR [rip+0x29532],eax        # 0x434bf0
  40b6be:	mov    r15d,DWORD PTR [rbx+0xb4]
  40b6c5:	mov    rsi,QWORD PTR [rbx+0x78]
  40b6c9:	lea    r12,[rbx+0x10]
  40b6cd:	lea    r13,[rsp+0x40]
  40b6d2:	test   DWORD PTR [rsi+0x10],0x6280000
  40b6d9:	jne    0x40b7b0
  40b6df:	movzx  eax,BYTE PTR [rsi+0x2]
  40b6e3:	cmp    al,0x7f
  40b6e5:	ja     0x40b6f9
  40b6e7:	lea    rdx,[rip+0x20bd2]        # 0x42c2c0
  40b6ee:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40b6f3:	jne    0x40b7b0
  40b6f9:	lea    rdx,[rsi+0x2]
  40b6fd:	lea    r9,[rip+0x295dc]        # 0x434ce0
  40b704:	lea    r8,[rip+0x295cd]        # 0x434cd8
  40b70b:	mov    rcx,r12
  40b70e:	call   0x409710
  40b713:	mov    eax,DWORD PTR [rsi+0x10]
  40b716:	test   eax,0x10000
  40b71b:	je     0x40b7e2
  40b721:	mov    rdi,QWORD PTR [rip+0x29598]        # 0x434cc0
  40b728:	mov    rax,QWORD PTR [rip+0x29631]        # 0x434d60
  40b72f:	test   rax,rax
  40b732:	jne    0x40b744
  40b734:	jmp    0x40b88d
  40b739:	nop    DWORD PTR [rax+0x0]
  40b740:	add    rdi,0x1
  40b744:	movzx  ecx,BYTE PTR [rdi]
  40b747:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b74b:	jne    0x40b740
  40b74d:	test   cl,cl
  40b74f:	mov    r9,QWORD PTR [rsi+0x50]
  40b753:	jne    0x40b86f
  40b759:	lea    r8,[rip+0x1cbc7]        # 0x428327
  40b760:	mov    edx,0x50
  40b765:	mov    rcx,r13
  40b768:	call   0x408290
  40b76d:	mov    r9,QWORD PTR [rsi+0x40]
  40b771:	mov    rcx,QWORD PTR [rip+0x29450]        # 0x434bc8
  40b778:	mov    r8,r13
  40b77b:	mov    rdx,r14
  40b77e:	call   0x407ea0
  40b783:	mov    eax,DWORD PTR [rsi+0x10]
  40b786:	and    eax,0xf000
  40b78b:	shr    eax,0xc
  40b78e:	cmp    eax,0x2
  40b791:	je     0x40b7c6
  40b793:	cmp    eax,0x4
  40b796:	je     0x40b7c6
  40b798:	mov    r8,rbp
  40b79b:	mov    rdx,rsi
  40b79e:	mov    rcx,rbx
  40b7a1:	call   0x40b1e0
  40b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7b0:	sub    r15d,0x1
  40b7b4:	add    rsi,0x68
  40b7b8:	test   r15d,r15d
  40b7bb:	jg     0x40b6d2
  40b7c1:	jmp    0x40b4b3
  40b7c6:	movzx  eax,BYTE PTR [rip+0x29453]        # 0x434c20
  40b7cd:	cmp    QWORD PTR [rsi+0x38],0x0
  40b7d2:	mov    edx,0x1
  40b7d7:	cmovne eax,edx
  40b7da:	mov    BYTE PTR [rip+0x29440],al        # 0x434c20
  40b7e0:	jmp    0x40b798
  40b7e2:	and    eax,0xf000
  40b7e7:	shr    eax,0xc
  40b7ea:	cmp    eax,0x8
  40b7ed:	ja     0x40b89c
  40b7f3:	lea    rdi,[rip+0x1cb36]        # 0x428330
  40b7fa:	movsxd rax,DWORD PTR [rdi+rax*4]
  40b7fe:	add    rax,rdi
  40b801:	jmp    rax
  40b803:	mov    rdi,QWORD PTR [rip+0x2948e]        # 0x434c98
  40b80a:	jmp    0x40b728
  40b80f:	mov    rdi,QWORD PTR [rip+0x294a2]        # 0x434cb8
  40b816:	jmp    0x40b728
  40b81b:	mov    rdi,QWORD PTR [rip+0x2946e]        # 0x434c90
  40b822:	jmp    0x40b728
  40b827:	mov    rdi,QWORD PTR [rip+0x2947a]        # 0x434ca8
  40b82e:	jmp    0x40b728
  40b833:	mov    rdi,QWORD PTR [rip+0x29476]        # 0x434cb0
  40b83a:	jmp    0x40b728
  40b83f:	mov    rdi,QWORD PTR [rip+0x2945a]        # 0x434ca0
  40b846:	jmp    0x40b728
  40b84b:	mov    rdi,QWORD PTR [rip+0x2942e]        # 0x434c80
  40b852:	jmp    0x40b728
  40b857:	mov    rdi,QWORD PTR [rip+0x2946a]        # 0x434cc8
  40b85e:	jmp    0x40b728
  40b863:	mov    rdi,QWORD PTR [rip+0x29486]        # 0x434cf0
  40b86a:	jmp    0x40b728
  40b86f:	lea    r8,[rip+0x1cab4]        # 0x42832a
  40b876:	mov    QWORD PTR [rsp+0x20],rdi
  40b87b:	mov    edx,0x50
  40b880:	mov    rcx,r13
  40b883:	call   0x408290
  40b888:	jmp    0x40b76d
  40b88d:	mov    ecx,0xc
  40b892:	call   0x4097f0
  40b897:	jmp    0x40b744
  40b89c:	mov    rdi,QWORD PTR [rsi+0x50]
  40b8a0:	mov    rsi,QWORD PTR [rbx+0x28]
  40b8a4:	mov    rbx,QWORD PTR [rip+0x18265]        # 0x423b10
  40b8ab:	call   QWORD PTR [rip+0x2d6cb]        # 0x438f7c
  40b8b1:	lea    rcx,[rax+0x60]
  40b8b5:	mov    r9,rdi
  40b8b8:	mov    r8,rsi
  40b8bb:	mov    rdx,rbx
  40b8be:	call   0x407ea0
  40b8c3:	mov    rcx,QWORD PTR [rip+0x181b6]        # 0x423a80
  40b8ca:	call   0x408310
  40b8cf:	nop
  40b8d0:	push   r15
  40b8d2:	push   r14
  40b8d4:	push   r13
  40b8d6:	push   r12
  40b8d8:	push   rbp
  40b8d9:	push   rdi
  40b8da:	push   rsi
  40b8db:	push   rbx
  40b8dc:	sub    rsp,0x98
  40b8e3:	mov    rax,QWORD PTR [rcx+0x78]
  40b8e7:	mov    r13d,DWORD PTR [rcx+0xb0]
  40b8ee:	xor    r15d,r15d
  40b8f1:	mov    rdi,rcx
  40b8f4:	mov    ebp,edx
  40b8f6:	mov    QWORD PTR [rsp+0xf0],r8
  40b8fe:	xor    r14d,r14d
  40b901:	lea    rbx,[rax+0x2]
  40b905:	lea    rax,[rcx+0x10]
  40b909:	mov    QWORD PTR [rsp+0x38],rax
  40b90e:	lea    rax,[rsp+0x40]
  40b913:	mov    QWORD PTR [rsp+0x30],rax
  40b918:	mov    eax,r15d
  40b91b:	mov    r15d,r13d
  40b91e:	mov    r13d,eax
  40b921:	jmp    0x40b943
  40b923:	cmp    eax,0x80100
  40b928:	je     0x40baf2
  40b92e:	sub    r15d,0x1
  40b932:	add    r13d,0x1
  40b936:	add    rbx,0x68
  40b93a:	test   r15d,r15d
  40b93d:	jle    0x40bb70
  40b943:	mov    eax,DWORD PTR [rbx+0xe]
  40b946:	lea    rsi,[rbx-0x2]
  40b94a:	test   eax,0x6080000
  40b94f:	jne    0x40b923
  40b951:	test   eax,0x200000
  40b956:	je     0x40b981
  40b958:	test   ebp,ebp
  40b95a:	jne    0x40b92e
  40b95c:	mov    r9,QWORD PTR [rsp+0xf0]
  40b964:	mov    r8,QWORD PTR [rbx+0x3e]
  40b968:	add    r14d,0x1
  40b96c:	mov    rdx,QWORD PTR [rip+0x2935d]        # 0x434cd0
  40b973:	mov    rcx,QWORD PTR [rip+0x2924e]        # 0x434bc8
  40b97a:	call   0x407ea0
  40b97f:	jmp    0x40b92e
  40b981:	mov    eax,DWORD PTR [rdi+0x10]
  40b984:	and    eax,0x40000
  40b989:	je     0x40b9a1
  40b98b:	movzx  edx,BYTE PTR [rbx]
  40b98e:	cmp    dl,0x7f
  40b991:	ja     0x40b92e
  40b993:	lea    rcx,[rip+0x20926]        # 0x42c2c0
  40b99a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40b99f:	je     0x40b92e
  40b9a1:	test   ebp,ebp
  40b9a3:	sete   r12b
  40b9a7:	test   r14d,r14d
  40b9aa:	jle    0x40b9f0
  40b9ac:	test   r12b,r12b
  40b9af:	je     0x40b9f0
  40b9b1:	cmp    DWORD PTR [rdi+0xb4],r13d
  40b9b8:	je     0x40bba0
  40b9be:	cmp    r15d,0x1
  40b9c2:	jne    0x40b9f0
  40b9c4:	test   eax,eax
  40b9c6:	je     0x40b9f0
  40b9c8:	mov    r9,QWORD PTR [rsp+0xf0]
  40b9d0:	mov    r8,QWORD PTR [rip+0x18381]        # 0x423d58
  40b9d7:	mov    rdx,QWORD PTR [rip+0x292f2]        # 0x434cd0
  40b9de:	mov    rcx,QWORD PTR [rip+0x291e3]        # 0x434bc8
  40b9e5:	call   0x407ea0
  40b9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b9f0:	mov    rcx,QWORD PTR [rsp+0x38]
  40b9f5:	lea    r9,[rip+0x292e4]        # 0x434ce0
  40b9fc:	lea    r8,[rip+0x292d5]        # 0x434cd8
  40ba03:	mov    rdx,rbx
  40ba06:	call   0x409710
  40ba0b:	mov    eax,DWORD PTR [rbx+0xe]
  40ba0e:	mov    r9,QWORD PTR [rip+0x292ab]        # 0x434cc0
  40ba15:	test   eax,0x10000
  40ba1a:	jne    0x40ba44
  40ba1c:	and    eax,0xf000
  40ba21:	shr    eax,0xc
  40ba24:	cmp    eax,0x8
  40ba27:	ja     0x40bc87
  40ba2d:	lea    rdx,[rip+0x1c92c]        # 0x428360
  40ba34:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ba38:	add    rdx,rax
  40ba3b:	jmp    rdx
  40ba3d:	mov    r9,QWORD PTR [rip+0x292ac]        # 0x434cf0
  40ba44:	mov    r8,QWORD PTR [rip+0x2929d]        # 0x434ce8
  40ba4b:	lea    rax,[rip+0x1dcb9]        # 0x42970b
  40ba52:	cmp    r8,rax
  40ba55:	je     0x40bc31
  40ba5b:	lea    rax,[rip+0x1dcab]        # 0x42970d
  40ba62:	cmp    r8,rax
  40ba65:	je     0x40bc60
  40ba6b:	cmp    WORD PTR [rbx+0x8],0x0
  40ba70:	mov    rax,QWORD PTR [rip+0x29249]        # 0x434cc0
  40ba77:	mov    edx,0x50
  40ba7c:	cmovne rax,QWORD PTR [rip+0x29204]        # 0x434c88
  40ba84:	mov    rcx,QWORD PTR [rsp+0x30]
  40ba89:	mov    QWORD PTR [rsp+0x28],rax
  40ba8e:	mov    rax,QWORD PTR [rbx+0x4e]
  40ba92:	mov    QWORD PTR [rsp+0x20],rax
  40ba97:	call   0x408290
  40ba9c:	mov    r9,QWORD PTR [rbx+0x3e]
  40baa0:	mov    r8,QWORD PTR [rsp+0x30]
  40baa5:	lea    rdx,[rip+0x29194]        # 0x434c40
  40baac:	mov    rcx,QWORD PTR [rip+0x29115]        # 0x434bc8
  40bab3:	call   0x407ea0
  40bab8:	mov    eax,DWORD PTR [rbx+0xe]
  40babb:	and    eax,0xf000
  40bac0:	shr    eax,0xc
  40bac3:	cmp    eax,0x2
  40bac6:	je     0x40bb50
  40bacc:	cmp    eax,0x4
  40bacf:	je     0x40bb50
  40bad1:	test   r12b,r12b
  40bad4:	je     0x40b92e
  40bada:	mov    r8,QWORD PTR [rsp+0xf0]
  40bae2:	mov    rdx,rsi
  40bae5:	mov    rcx,rdi
  40bae8:	call   0x40b1e0
  40baed:	jmp    0x40b92e
  40baf2:	cmp    QWORD PTR [rbx+0x4e],0x0
  40baf7:	je     0x40b92e
  40bafd:	test   ebp,ebp
  40baff:	jne    0x40b92e
  40bb05:	mov    rsi,QWORD PTR [rbx+0x3e]
  40bb09:	mov    rcx,QWORD PTR [rsp+0x38]
  40bb0e:	lea    r9,[rip+0x291cb]        # 0x434ce0
  40bb15:	lea    r8,[rip+0x291bc]        # 0x434cd8
  40bb1c:	mov    rdx,rbx
  40bb1f:	test   rsi,rsi
  40bb22:	cmove  rsi,QWORD PTR [rip+0x180e6]        # 0x423c10
  40bb2a:	call   0x409710
  40bb2f:	mov    r8,QWORD PTR [rbx+0x4e]
  40bb33:	mov    rdx,QWORD PTR [rip+0x180ce]        # 0x423c08
  40bb3a:	mov    rcx,QWORD PTR [rip+0x29087]        # 0x434bc8
  40bb41:	mov    r9,rsi
  40bb44:	call   0x407ea0
  40bb49:	jmp    0x40b92e
  40bb4e:	xchg   ax,ax
  40bb50:	movzx  eax,BYTE PTR [rip+0x290c9]        # 0x434c20
  40bb57:	cmp    QWORD PTR [rbx+0x36],0x0
  40bb5c:	mov    edx,0x1
  40bb61:	cmovne eax,edx
  40bb64:	mov    BYTE PTR [rip+0x290b6],al        # 0x434c20
  40bb6a:	jmp    0x40bad1
  40bb6f:	nop
  40bb70:	mov    rdx,QWORD PTR [rip+0x29051]        # 0x434bc8
  40bb77:	mov    ecx,0xa
  40bb7c:	call   0x421e68
  40bb81:	nop
  40bb82:	add    rsp,0x98
  40bb89:	pop    rbx
  40bb8a:	pop    rsi
  40bb8b:	pop    rdi
  40bb8c:	pop    rbp
  40bb8d:	pop    r12
  40bb8f:	pop    r13
  40bb91:	pop    r14
  40bb93:	pop    r15
  40bb95:	ret    
  40bb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bba0:	test   BYTE PTR [rbx-0x58],0x20
  40bba4:	jne    0x40b9f0
  40bbaa:	mov    r9,QWORD PTR [rsp+0xf0]
  40bbb2:	mov    r8,QWORD PTR [rip+0x18037]        # 0x423bf0
  40bbb9:	mov    rdx,QWORD PTR [rip+0x29110]        # 0x434cd0
  40bbc0:	mov    rcx,QWORD PTR [rip+0x29001]        # 0x434bc8
  40bbc7:	call   0x407ea0
  40bbcc:	jmp    0x40b9f0
  40bbd1:	mov    r9,QWORD PTR [rip+0x290c0]        # 0x434c98
  40bbd8:	jmp    0x40ba44
  40bbdd:	mov    r9,QWORD PTR [rip+0x290e4]        # 0x434cc8
  40bbe4:	jmp    0x40ba44
  40bbe9:	mov    r9,QWORD PTR [rip+0x29090]        # 0x434c80
  40bbf0:	jmp    0x40ba44
  40bbf5:	mov    r9,QWORD PTR [rip+0x290a4]        # 0x434ca0
  40bbfc:	jmp    0x40ba44
  40bc01:	mov    r9,QWORD PTR [rip+0x290a8]        # 0x434cb0
  40bc08:	jmp    0x40ba44
  40bc0d:	mov    r9,QWORD PTR [rip+0x29094]        # 0x434ca8
  40bc14:	jmp    0x40ba44
  40bc19:	mov    r9,QWORD PTR [rip+0x29070]        # 0x434c90
  40bc20:	jmp    0x40ba44
  40bc25:	mov    r9,QWORD PTR [rip+0x2908c]        # 0x434cb8
  40bc2c:	jmp    0x40ba44
  40bc31:	mov    rax,QWORD PTR [rbx+0x4e]
  40bc35:	mov    rcx,QWORD PTR [rsp+0x30]
  40bc3a:	lea    r8,[rip+0x1c713]        # 0x428354
  40bc41:	mov    QWORD PTR [rsp+0x20],r9
  40bc46:	mov    edx,0x50
  40bc4b:	mov    r9,rax
  40bc4e:	call   0x408290
  40bc53:	jmp    0x40ba9c
  40bc58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc60:	mov    rax,QWORD PTR [rbx+0x4e]
  40bc64:	mov    rcx,QWORD PTR [rsp+0x30]
  40bc69:	lea    r8,[rip+0x1c6eb]        # 0x42835b
  40bc70:	mov    QWORD PTR [rsp+0x20],r9
  40bc75:	mov    edx,0x50
  40bc7a:	mov    r9,rax
  40bc7d:	call   0x408290
  40bc82:	jmp    0x40ba9c
  40bc87:	mov    rbp,QWORD PTR [rsi+0x50]
  40bc8b:	mov    rbx,QWORD PTR [rip+0x17e7e]        # 0x423b10
  40bc92:	mov    rsi,QWORD PTR [rdi+0x28]
  40bc96:	call   QWORD PTR [rip+0x2d2e0]        # 0x438f7c
  40bc9c:	lea    rcx,[rax+0x60]
  40bca0:	mov    r9,rbp
  40bca3:	mov    rdx,rbx
  40bca6:	mov    r8,rsi
  40bca9:	call   0x407ea0
  40bcae:	mov    ecx,0x46
  40bcb3:	call   0x4082e0
  40bcb8:	nop
  40bcb9:	nop    DWORD PTR [rax+0x0]
  40bcc0:	push   r15
  40bcc2:	push   r14
  40bcc4:	push   r13
  40bcc6:	push   r12
  40bcc8:	push   rbp
  40bcc9:	push   rdi
  40bcca:	push   rsi
  40bccb:	push   rbx
  40bccc:	sub    rsp,0x38
  40bcd0:	lea    r13,[rip+0x1d7a9]        # 0x429480
  40bcd7:	lea    r12,[rip+0x1c6a6]        # 0x428384
  40bcde:	mov    rbx,rcx
  40bce1:	mov    QWORD PTR [rsp+0x88],rdx
  40bce9:	mov    r14,r8
  40bcec:	mov    rax,QWORD PTR [rip+0x290b5]        # 0x434da8
  40bcf3:	test   rax,rax
  40bcf6:	je     0x40c0a5
  40bcfc:	movzx  edx,BYTE PTR [rbx]
  40bcff:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bd03:	mov    rcx,rdx
  40bd06:	je     0x40bda8
  40bd0c:	mov    rsi,rbx
  40bd0f:	nop
  40bd10:	add    rsi,0x1
  40bd14:	movzx  edx,BYTE PTR [rsi]
  40bd17:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bd1b:	mov    rdi,rdx
  40bd1e:	jne    0x40bd10
  40bd20:	mov    r10,rsi
  40bd23:	mov    rbp,rsi
  40bd26:	sub    r10,rbx
  40bd29:	lea    eax,[r10-0x4]
  40bd2d:	cmp    eax,0x4
  40bd30:	ja     0x40bda8
  40bd32:	lea    rdx,[rip+0x1cd87]        # 0x428ac0
  40bd39:	movzx  eax,cl
  40bd3c:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40bd41:	add    r9d,r10d
  40bd44:	cmp    r9d,0x9
  40bd48:	ja     0x40bda8
  40bd4a:	movsxd r9,r9d
  40bd4d:	shl    r9,0x4
  40bd51:	lea    r15,[r13+r9*1+0x0]
  40bd56:	mov    r11,QWORD PTR [r15]
  40bd59:	cmp    cl,BYTE PTR [r11]
  40bd5c:	jne    0x40bda8
  40bd5e:	lea    rdx,[r11+0x1]
  40bd62:	lea    rcx,[rbx+0x1]
  40bd66:	lea    r8d,[r10-0x1]
  40bd6a:	mov    QWORD PTR [rsp+0x28],r11
  40bd6f:	mov    QWORD PTR [rsp+0x20],r10
  40bd74:	call   0x421d90
  40bd79:	test   eax,eax
  40bd7b:	jne    0x40bda8
  40bd7d:	mov    r10,QWORD PTR [rsp+0x20]
  40bd82:	mov    r11,QWORD PTR [rsp+0x28]
  40bd87:	mov    r10d,r10d
  40bd8a:	cmp    BYTE PTR [r11+r10*1],0x0
  40bd8f:	jne    0x40bda8
  40bd91:	cmp    DWORD PTR [r15+0x8],0x6
  40bd96:	ja     0x40bda8
  40bd98:	mov    eax,DWORD PTR [r15+0x8]
  40bd9c:	movsxd rax,DWORD PTR [r12+rax*4]
  40bda0:	add    rax,r12
  40bda3:	jmp    rax
  40bda5:	mov    rbx,rsi
  40bda8:	mov    rax,QWORD PTR [rip+0x29059]        # 0x434e08
  40bdaf:	mov    DWORD PTR [r14],0x0
  40bdb6:	test   rax,rax
  40bdb9:	jne    0x40bdda
  40bdbb:	mov    ecx,0x21
  40bdc0:	call   0x4097f0
  40bdc5:	jmp    0x40bdda
  40bdc7:	nop    WORD PTR [rax+rax*1+0x0]
  40bdd0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bdd4:	jne    0x40bdfb
  40bdd6:	add    rbx,0x1
  40bdda:	movzx  edx,BYTE PTR [rbx]
  40bddd:	test   dl,dl
  40bddf:	jne    0x40bdd0
  40bde1:	xor    eax,eax
  40bde3:	add    rsp,0x38
  40bde7:	pop    rbx
  40bde8:	pop    rsi
  40bde9:	pop    rdi
  40bdea:	pop    rbp
  40bdeb:	pop    r12
  40bded:	pop    r13
  40bdef:	pop    r14
  40bdf1:	pop    r15
  40bdf3:	ret    
  40bdf4:	mov    DWORD PTR [r14],0x0
  40bdfb:	mov    rax,rbx
  40bdfe:	jmp    0x40bde3
  40be00:	cmp    dil,0x7f
  40be04:	ja     0x40bda5
  40be06:	lea    rax,[rip+0x204b3]        # 0x42c2c0
  40be0d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40be14:	je     0x40bda5
  40be16:	mov    rax,QWORD PTR [rsp+0x88]
  40be1e:	mov    rbx,rsi
  40be21:	mov    DWORD PTR [rax],0x2
  40be27:	mov    rax,QWORD PTR [rip+0x28f32]        # 0x434d60
  40be2e:	test   rax,rax
  40be31:	jne    0x40be44
  40be33:	jmp    0x40c0b4
  40be38:	nop    DWORD PTR [rax+rax*1+0x0]
  40be40:	add    rbx,0x1
  40be44:	movzx  ecx,BYTE PTR [rbx]
  40be47:	cmp    BYTE PTR [rax+rcx*1],0x0
  40be4b:	jne    0x40be40
  40be4d:	cmp    cl,0x2f
  40be50:	je     0x40bdf4
  40be52:	cmp    cl,0x3e
  40be55:	je     0x40bdfb
  40be57:	cmp    cl,0x7f
  40be5a:	ja     0x40bde1
  40be5c:	lea    rax,[rip+0x2045d]        # 0x42c2c0
  40be63:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  40be68:	jne    0x40bcec
  40be6e:	jmp    0x40bde1
  40be73:	cmp    dil,0x3d
  40be77:	lea    rbp,[rsi+0x1]
  40be7b:	je     0x40bfa4
  40be81:	xor    edi,edi
  40be83:	mov    rax,QWORD PTR [rip+0x28f7e]        # 0x434e08
  40be8a:	add    rbp,rdi
  40be8d:	mov    DWORD PTR [r14],0x0
  40be94:	test   rax,rax
  40be97:	je     0x40c129
  40be9d:	movzx  edx,BYTE PTR [rbp+0x0]
  40bea1:	test   dl,dl
  40bea3:	jne    0x40bec0
  40bea5:	jmp    0x40bde1
  40beaa:	nop    WORD PTR [rax+rax*1+0x0]
  40beb0:	add    rbp,0x1
  40beb4:	movzx  edx,BYTE PTR [rbp+0x0]
  40beb8:	test   dl,dl
  40beba:	je     0x40bde1
  40bec0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bec4:	je     0x40beb0
  40bec6:	mov    rbx,rbp
  40bec9:	jmp    0x40be27
  40bece:	xchg   ax,ax
  40bed0:	mov    rax,QWORD PTR [rip+0x28f31]        # 0x434e08
  40bed7:	test   rax,rax
  40beda:	je     0x40c11a
  40bee0:	movzx  edx,BYTE PTR [rsi]
  40bee3:	test   dl,dl
  40bee5:	jne    0x40bf00
  40bee7:	jmp    0x40bde1
  40beec:	nop    DWORD PTR [rax+0x0]
  40bef0:	add    rbp,0x1
  40bef4:	movzx  edx,BYTE PTR [rbp+0x0]
  40bef8:	test   dl,dl
  40befa:	je     0x40bde1
  40bf00:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bf04:	je     0x40bef0
  40bf06:	jmp    0x40bec6
  40bf08:	mov    rax,QWORD PTR [rip+0x28ef9]        # 0x434e08
  40bf0f:	test   rax,rax
  40bf12:	je     0x40c10b
  40bf18:	movzx  edx,BYTE PTR [rsi]
  40bf1b:	test   dl,dl
  40bf1d:	jne    0x40bf34
  40bf1f:	jmp    0x40bde1
  40bf24:	add    rbp,0x1
  40bf28:	movzx  edx,BYTE PTR [rbp+0x0]
  40bf2c:	test   dl,dl
  40bf2e:	je     0x40bde1
  40bf34:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bf38:	je     0x40bf24
  40bf3a:	jmp    0x40bec6
  40bf3c:	cmp    dil,0x7f
  40bf40:	ja     0x40bda5
  40bf46:	lea    rax,[rip+0x20373]        # 0x42c2c0
  40bf4d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40bf54:	je     0x40bda5
  40bf5a:	mov    rax,QWORD PTR [rsp+0x88]
  40bf62:	mov    rbx,rsi
  40bf65:	mov    DWORD PTR [rax],0x0
  40bf6b:	jmp    0x40be27
  40bf70:	cmp    dil,0x7f
  40bf74:	ja     0x40bda5
  40bf7a:	lea    rax,[rip+0x2033f]        # 0x42c2c0
  40bf81:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40bf88:	je     0x40bda5
  40bf8e:	mov    rax,QWORD PTR [rsp+0x88]
  40bf96:	mov    rbx,rsi
  40bf99:	mov    DWORD PTR [rax],0x1
  40bf9f:	jmp    0x40be27
  40bfa4:	mov    rax,QWORD PTR [rip+0x28e2d]        # 0x434dd8
  40bfab:	test   rax,rax
  40bfae:	je     0x40c138
  40bfb4:	movzx  edx,BYTE PTR [rsi+0x1]
  40bfb8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40bfbc:	mov    r8,rdx
  40bfbf:	je     0x40be81
  40bfc5:	mov    rbx,rbp
  40bfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfd0:	add    rbx,0x1
  40bfd4:	movzx  ecx,BYTE PTR [rbx]
  40bfd7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40bfdb:	jne    0x40bfd0
  40bfdd:	mov    rdi,rbx
  40bfe0:	sub    rdi,rbp
  40bfe3:	je     0x40be81
  40bfe9:	cmp    cl,0x7f
  40bfec:	ja     0x40be83
  40bff2:	lea    rax,[rip+0x202c7]        # 0x42c2c0
  40bff9:	test   DWORD PTR [rax+rcx*4],0x1000c01
  40c000:	je     0x40be83
  40c006:	lea    eax,[rdi-0x3]
  40c009:	mov    r11d,edi
  40c00c:	cmp    eax,0xb
  40c00f:	ja     0x40be83
  40c015:	lea    rdx,[rip+0x1cba4]        # 0x428bc0
  40c01c:	movzx  eax,r8b
  40c020:	movzx  eax,BYTE PTR [rdx+rax*1]
  40c024:	add    eax,edi
  40c026:	cmp    eax,0x11
  40c029:	ja     0x40be83
  40c02f:	movsxd r9,eax
  40c032:	lea    rax,[rip+0x1d547]        # 0x429580
  40c039:	shl    r9,0x4
  40c03d:	add    r9,rax
  40c040:	mov    r10,QWORD PTR [r9]
  40c043:	mov    QWORD PTR [rsp+0x28],r9
  40c048:	cmp    BYTE PTR [r10],r8b
  40c04b:	jne    0x40be83
  40c051:	lea    rdx,[r10+0x1]
  40c055:	lea    rcx,[rsi+0x2]
  40c059:	lea    r8d,[r11-0x1]
  40c05d:	mov    QWORD PTR [rsp+0x20],r10
  40c062:	call   0x421d90
  40c067:	test   eax,eax
  40c069:	jne    0x40be83
  40c06f:	mov    r10,QWORD PTR [rsp+0x20]
  40c074:	mov    eax,edi
  40c076:	cmp    BYTE PTR [r10+rax*1],0x0
  40c07b:	jne    0x40be83
  40c081:	mov    r9,QWORD PTR [rsp+0x28]
  40c086:	cmp    DWORD PTR [r9+0x8],0x9
  40c08b:	ja     0x40be83
  40c091:	mov    edx,DWORD PTR [r9+0x8]
  40c095:	lea    rax,[rip+0x1c304]        # 0x4283a0
  40c09c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40c0a0:	add    rax,rdx
  40c0a3:	jmp    rax
  40c0a5:	mov    ecx,0x15
  40c0aa:	call   0x4097f0
  40c0af:	jmp    0x40bcfc
  40c0b4:	mov    ecx,0xc
  40c0b9:	call   0x4097f0
  40c0be:	jmp    0x40be44
  40c0c3:	mov    DWORD PTR [r14],0x6
  40c0ca:	jmp    0x40be27
  40c0cf:	mov    DWORD PTR [r14],0x4
  40c0d6:	jmp    0x40be27
  40c0db:	mov    DWORD PTR [r14],0x2
  40c0e2:	jmp    0x40be27
  40c0e7:	mov    DWORD PTR [r14],0x3
  40c0ee:	jmp    0x40be27
  40c0f3:	mov    DWORD PTR [r14],0x5
  40c0fa:	jmp    0x40be27
  40c0ff:	mov    DWORD PTR [r14],0x1
  40c106:	jmp    0x40be27
  40c10b:	mov    ecx,0x21
  40c110:	call   0x4097f0
  40c115:	jmp    0x40bf18
  40c11a:	mov    ecx,0x21
  40c11f:	call   0x4097f0
  40c124:	jmp    0x40bee0
  40c129:	mov    ecx,0x21
  40c12e:	call   0x4097f0
  40c133:	jmp    0x40be9d
  40c138:	mov    ecx,0x1b
  40c13d:	call   0x4097f0
  40c142:	jmp    0x40bfb4
  40c147:	nop    WORD PTR [rax+rax*1+0x0]
  40c150:	push   r15
  40c152:	push   r14
  40c154:	push   r13
  40c156:	push   r12
  40c158:	push   rbp
  40c159:	push   rdi
  40c15a:	push   rsi
  40c15b:	push   rbx
  40c15c:	sub    rsp,0x48
  40c160:	mov    rsi,QWORD PTR [rip+0x2cf8d]        # 0x4390f4
  40c167:	mov    rbx,rcx
  40c16a:	jmp    0x40c174
  40c16c:	nop    DWORD PTR [rax+0x0]
  40c170:	add    rbx,0x1
  40c174:	movzx  ebp,BYTE PTR [rbx]
  40c177:	mov    ecx,ebp
  40c179:	call   rsi
  40c17b:	test   eax,eax
  40c17d:	jne    0x40c170
  40c17f:	cmp    bpl,0x50
  40c183:	je     0x40c310
  40c189:	cmp    bpl,0x54
  40c18d:	je     0x40c2b4
  40c193:	sub    ebp,0x30
  40c196:	cmp    ebp,0x9
  40c199:	ja     0x40c7b3
  40c19f:	mov    rbp,QWORD PTR [rip+0x2ce26]        # 0x438fcc
  40c1a6:	lea    r13,[rsp+0x30]
  40c1ab:	mov    QWORD PTR [rsp+0x30],rbx
  40c1b0:	xor    edi,edi
  40c1b2:	xor    r12d,r12d
  40c1b5:	call   rbp
  40c1b7:	mov    rcx,QWORD PTR [rsp+0x30]
  40c1bc:	mov    r8d,0xa
  40c1c2:	mov    rdx,r13
  40c1c5:	mov    DWORD PTR [rax],0x0
  40c1cb:	call   0x421d68
  40c1d0:	movsxd r14,eax
  40c1d3:	call   rbp
  40c1d5:	mov    ecx,DWORD PTR [rax]
  40c1d7:	test   ecx,ecx
  40c1d9:	jne    0x40c2a3
  40c1df:	mov    rbx,QWORD PTR [rsp+0x30]
  40c1e4:	movzx  r15d,BYTE PTR [rbx]
  40c1e8:	cmp    r15b,0x3a
  40c1ec:	jne    0x40c1fc
  40c1ee:	jmp    0x40c63b
  40c1f3:	mov    QWORD PTR [rsp+0x30],rbx
  40c1f8:	movzx  r15d,BYTE PTR [rbx]
  40c1fc:	add    rbx,0x1
  40c200:	movzx  ecx,r15b
  40c204:	call   rsi
  40c206:	test   eax,eax
  40c208:	jne    0x40c1f3
  40c20a:	cmp    r15b,0x59
  40c20e:	je     0x40c49b
  40c214:	jle    0x40c2d0
  40c21a:	cmp    r15b,0x6d
  40c21e:	je     0x40c4cd
  40c224:	jg     0x40c440
  40c22a:	cmp    r15b,0x64
  40c22e:	je     0x40c4b2
  40c234:	cmp    r15b,0x68
  40c238:	jne    0x40c2a3
  40c23a:	cmp    r12d,0x4
  40c23e:	ja     0x40c2a3
  40c240:	mov    r8d,0xe10
  40c246:	mov    r12d,0x5
  40c24c:	nop    DWORD PTR [rax+0x0]
  40c250:	mov    rcx,rdi
  40c253:	mov    rdx,r14
  40c256:	call   0x408e60
  40c25b:	mov    rdi,rax
  40c25e:	mov    rax,QWORD PTR [rsp+0x30]
  40c263:	lea    rbx,[rax+0x1]
  40c267:	mov    QWORD PTR [rsp+0x30],rbx
  40c26c:	jmp    0x40c275
  40c26e:	xchg   ax,ax
  40c270:	mov    QWORD PTR [rsp+0x30],rbx
  40c275:	movzx  r14d,BYTE PTR [rbx]
  40c279:	add    rbx,0x1
  40c27d:	mov    ecx,r14d
  40c280:	call   rsi
  40c282:	test   eax,eax
  40c284:	jne    0x40c270
  40c286:	test   r14b,r14b
  40c289:	je     0x40c7ab
  40c28f:	sub    r14d,0x30
  40c293:	cmp    r14d,0x9
  40c297:	ja     0x40c2a3
  40c299:	cmp    r12d,0x7
  40c29d:	jne    0x40c1b5
  40c2a3:	call   rbp
  40c2a5:	mov    DWORD PTR [rax],0x16
  40c2ab:	mov    rax,0xffffffffffffffff
  40c2b2:	jmp    0x40c2bd
  40c2b4:	lea    rcx,[rbx+0x1]
  40c2b8:	call   0x408fc0
  40c2bd:	add    rsp,0x48
  40c2c1:	pop    rbx
  40c2c2:	pop    rsi
  40c2c3:	pop    rdi
  40c2c4:	pop    rbp
  40c2c5:	pop    r12
  40c2c7:	pop    r13
  40c2c9:	pop    r14
  40c2cb:	pop    r15
  40c2cd:	ret    
  40c2ce:	xchg   ax,ax
  40c2d0:	cmp    r15b,0x44
  40c2d4:	je     0x40c4b2
  40c2da:	jle    0x40c472
  40c2e0:	cmp    r15b,0x4d
  40c2e4:	je     0x40c457
  40c2ea:	cmp    r15b,0x57
  40c2ee:	jne    0x40c2a3
  40c2f0:	cmp    r12d,0x2
  40c2f4:	ja     0x40c2a3
  40c2f6:	mov    r8d,0x93a80
  40c2fc:	mov    r12d,0x3
  40c302:	jmp    0x40c250
  40c307:	nop    WORD PTR [rax+rax*1+0x0]
  40c310:	lea    rcx,[rbx+0x1]
  40c314:	call   0x421d08
  40c319:	test   rax,rax
  40c31c:	mov    r13,rax
  40c31f:	je     0x40c7e6
  40c325:	mov    edx,0x54
  40c32a:	mov    rcx,rax
  40c32d:	call   0x421dc0
  40c332:	test   rax,rax
  40c335:	mov    r12,rax
  40c338:	je     0x40c630
  40c33e:	lea    rdi,[rax+0x1]
  40c342:	mov    rcx,r13
  40c345:	mov    BYTE PTR [rax],0x0
  40c348:	call   0x407e40
  40c34d:	mov    rcx,rdi
  40c350:	mov    rbx,rax
  40c353:	call   0x407e40
  40c358:	test   rax,rax
  40c35b:	mov    r12,rax
  40c35e:	setne  r14b
  40c362:	mov    edx,0x2d
  40c367:	mov    rcx,rbx
  40c36a:	call   0x421dc0
  40c36f:	test   rax,rax
  40c372:	je     0x40c4e8
  40c378:	lea    rsi,[rsp+0x20]
  40c37d:	mov    r8,rax
  40c380:	xor    ecx,ecx
  40c382:	mov    r9d,0x1e13380
  40c388:	mov    QWORD PTR [rsp+0x20],rbx
  40c38d:	mov    rdx,rsi
  40c390:	call   0x408ef0
  40c395:	mov    rbx,rax
  40c398:	mov    rax,QWORD PTR [rsp+0x20]
  40c39d:	mov    edx,0x2d
  40c3a2:	lea    rcx,[rax+0x1]
  40c3a6:	mov    QWORD PTR [rsp+0x20],rcx
  40c3ab:	call   0x421dc0
  40c3b0:	test   rax,rax
  40c3b3:	mov    r8,rax
  40c3b6:	je     0x40c7cb
  40c3bc:	mov    r9d,0x278d00
  40c3c2:	mov    rdx,rsi
  40c3c5:	mov    rcx,rbx
  40c3c8:	call   0x408ef0
  40c3cd:	mov    rdi,rax
  40c3d0:	mov    rax,QWORD PTR [rsp+0x20]
  40c3d5:	lea    rbx,[rax+0x1]
  40c3d9:	mov    rcx,rbx
  40c3dc:	mov    QWORD PTR [rsp+0x20],rbx
  40c3e1:	call   0x421d98
  40c3e6:	lea    r8,[rbx+rax*1]
  40c3ea:	mov    rcx,rdi
  40c3ed:	mov    r9d,0x15180
  40c3f3:	mov    rdx,rsi
  40c3f6:	call   0x408ef0
  40c3fb:	mov    rbp,QWORD PTR [rip+0x2cbca]        # 0x438fcc
  40c402:	mov    rdi,rax
  40c405:	call   rbp
  40c407:	mov    r8d,DWORD PTR [rax]
  40c40a:	test   r8d,r8d
  40c40d:	jne    0x40c430
  40c40f:	test   r14b,r14b
  40c412:	je     0x40c430
  40c414:	mov    rcx,r12
  40c417:	call   0x408fc0
  40c41c:	mov    rcx,rdi
  40c41f:	mov    r8d,0x1
  40c425:	mov    rdx,rax
  40c428:	call   0x408e60
  40c42d:	mov    rdi,rax
  40c430:	mov    rcx,r13
  40c433:	call   0x421e50
  40c438:	mov    rax,rdi
  40c43b:	jmp    0x40c2bd
  40c440:	cmp    r15b,0x73
  40c444:	jne    0x40c491
  40c446:	mov    r8d,0x1
  40c44c:	mov    r12d,0x7
  40c452:	jmp    0x40c250
  40c457:	cmp    r12d,0x1
  40c45b:	ja     0x40c2a3
  40c461:	mov    r8d,0x278d00
  40c467:	mov    r12d,0x2
  40c46d:	jmp    0x40c250
  40c472:	test   r15b,r15b
  40c475:	jne    0x40c2a3
  40c47b:	mov    r8d,0x1
  40c481:	mov    rdx,r14
  40c484:	mov    rcx,rdi
  40c487:	call   0x408e60
  40c48c:	jmp    0x40c2bd
  40c491:	cmp    r15b,0x79
  40c495:	jne    0x40c2a3
  40c49b:	test   r12d,r12d
  40c49e:	jne    0x40c2a3
  40c4a4:	mov    r8d,0x1e13380
  40c4aa:	mov    r12b,0x1
  40c4ad:	jmp    0x40c250
  40c4b2:	cmp    r12d,0x3
  40c4b6:	ja     0x40c2a3
  40c4bc:	mov    r8d,0x15180
  40c4c2:	mov    r12d,0x4
  40c4c8:	jmp    0x40c250
  40c4cd:	cmp    r12d,0x6
  40c4d1:	je     0x40c2a3
  40c4d7:	mov    r8d,0x3c
  40c4dd:	mov    r12d,0x6
  40c4e3:	jmp    0x40c250
  40c4e8:	lea    rdx,[rip+0x1bed9]        # 0x4283c8
  40c4ef:	mov    rcx,rbx
  40c4f2:	call   0x421d80
  40c4f7:	test   rax,rax
  40c4fa:	je     0x40c709
  40c500:	mov    edx,0x59
  40c505:	mov    rcx,rbx
  40c508:	mov    QWORD PTR [rsp+0x28],rbx
  40c50d:	xor    edi,edi
  40c50f:	call   0x421dc0
  40c514:	test   rax,rax
  40c517:	je     0x40c53f
  40c519:	lea    rdx,[rsp+0x28]
  40c51e:	mov    r9d,0x1e13380
  40c524:	mov    r8,rax
  40c527:	xor    ecx,ecx
  40c529:	call   0x408ef0
  40c52e:	mov    rdi,rax
  40c531:	mov    rax,QWORD PTR [rsp+0x28]
  40c536:	lea    rbx,[rax+0x1]
  40c53a:	mov    QWORD PTR [rsp+0x28],rbx
  40c53f:	mov    edx,0x4d
  40c544:	mov    rcx,rbx
  40c547:	call   0x421dc0
  40c54c:	test   rax,rax
  40c54f:	je     0x40c578
  40c551:	lea    rdx,[rsp+0x28]
  40c556:	mov    rcx,rdi
  40c559:	mov    r9d,0x278d00
  40c55f:	mov    r8,rax
  40c562:	call   0x408ef0
  40c567:	mov    rdi,rax
  40c56a:	mov    rax,QWORD PTR [rsp+0x28]
  40c56f:	lea    rbx,[rax+0x1]
  40c573:	mov    QWORD PTR [rsp+0x28],rbx
  40c578:	mov    edx,0x57
  40c57d:	mov    rcx,rbx
  40c580:	call   0x421dc0
  40c585:	test   rax,rax
  40c588:	je     0x40c5b1
  40c58a:	lea    rdx,[rsp+0x28]
  40c58f:	mov    rcx,rdi
  40c592:	mov    r9d,0x93a80
  40c598:	mov    r8,rax
  40c59b:	call   0x408ef0
  40c5a0:	mov    rdi,rax
  40c5a3:	mov    rax,QWORD PTR [rsp+0x28]
  40c5a8:	lea    rbx,[rax+0x1]
  40c5ac:	mov    QWORD PTR [rsp+0x28],rbx
  40c5b1:	mov    edx,0x44
  40c5b6:	mov    rcx,rbx
  40c5b9:	call   0x421dc0
  40c5be:	test   rax,rax
  40c5c1:	je     0x40c5f5
  40c5c3:	lea    rdx,[rsp+0x28]
  40c5c8:	mov    rcx,rdi
  40c5cb:	mov    r9d,0x15180
  40c5d1:	mov    r8,rax
  40c5d4:	call   0x408ef0
  40c5d9:	mov    rdi,rax
  40c5dc:	mov    rax,QWORD PTR [rsp+0x28]
  40c5e1:	lea    rbx,[rax+0x1]
  40c5e5:	mov    QWORD PTR [rsp+0x28],rbx
  40c5ea:	jmp    0x40c5f5
  40c5ec:	nop    DWORD PTR [rax+0x0]
  40c5f0:	mov    QWORD PTR [rsp+0x28],rbx
  40c5f5:	movzx  ecx,BYTE PTR [rbx]
  40c5f8:	add    rbx,0x1
  40c5fc:	mov    ebp,ecx
  40c5fe:	call   rsi
  40c600:	test   eax,eax
  40c602:	jne    0x40c5f0
  40c604:	test   bpl,bpl
  40c607:	mov    rbp,QWORD PTR [rip+0x2c9be]        # 0x438fcc
  40c60e:	je     0x40c405
  40c614:	call   rbp
  40c616:	mov    rdi,0xffffffffffffffff
  40c61d:	mov    DWORD PTR [rax],0x16
  40c623:	jmp    0x40c405
  40c628:	nop    DWORD PTR [rax+rax*1+0x0]
  40c630:	mov    rbx,r13
  40c633:	xor    r14d,r14d
  40c636:	jmp    0x40c362
  40c63b:	cmp    r12d,0x6
  40c63f:	je     0x40c2a3
  40c645:	lea    r15,[rsp+0x38]
  40c64a:	mov    QWORD PTR [rsp+0x38],rbx
  40c64f:	mov    r13d,0x3
  40c655:	call   rbp
  40c657:	mov    DWORD PTR [rax],0x0
  40c65d:	mov    rbx,QWORD PTR [rsp+0x38]
  40c662:	movzx  eax,BYTE PTR [rbx]
  40c665:	cmp    al,0x3a
  40c667:	jne    0x40c6c0
  40c669:	sub    r13d,0x1
  40c66d:	je     0x40c6c0
  40c66f:	lea    rcx,[rbx+0x1]
  40c673:	mov    rdx,r15
  40c676:	mov    r8d,0xa
  40c67c:	call   0x421d60
  40c681:	mov    ebx,eax
  40c683:	call   rbp
  40c685:	mov    edx,DWORD PTR [rax]
  40c687:	test   edx,edx
  40c689:	jne    0x40c6a6
  40c68b:	mov    rdx,r14
  40c68e:	mov    ecx,ebx
  40c690:	mov    r8d,0x3c
  40c696:	call   0x408e60
  40c69b:	mov    r14,rax
  40c69e:	call   rbp
  40c6a0:	mov    eax,DWORD PTR [rax]
  40c6a2:	test   eax,eax
  40c6a4:	je     0x40c65d
  40c6a6:	mov    rdx,0xffffffffffffffff
  40c6ad:	mov    r8d,0x1
  40c6b3:	mov    rcx,rdi
  40c6b6:	call   0x408e60
  40c6bb:	jmp    0x40c2bd
  40c6c0:	add    rbx,0x1
  40c6c4:	mov    r13d,eax
  40c6c7:	jmp    0x40c6de
  40c6c9:	nop    DWORD PTR [rax+0x0]
  40c6d0:	mov    QWORD PTR [rsp+0x38],rbx
  40c6d5:	add    rbx,0x1
  40c6d9:	movzx  r13d,BYTE PTR [rbx-0x1]
  40c6de:	movzx  ecx,r13b
  40c6e2:	call   rsi
  40c6e4:	test   eax,eax
  40c6e6:	jne    0x40c6d0
  40c6e8:	test   r13b,r13b
  40c6eb:	jne    0x40c7fe
  40c6f1:	cmp    r14,0xe0f
  40c6f8:	jle    0x40c704
  40c6fa:	cmp    r12d,0x5
  40c6fe:	je     0x40c2a3
  40c704:	mov    rdx,r14
  40c707:	jmp    0x40c6ad
  40c709:	mov    rcx,rbx
  40c70c:	call   0x421d98
  40c711:	cmp    rax,0x8
  40c715:	jne    0x40c7cb
  40c71b:	mov    eax,DWORD PTR [rbx]
  40c71d:	lea    rdi,[rsp+0x38]
  40c722:	lea    rsi,[rsp+0x30]
  40c727:	lea    r8,[rsp+0x34]
  40c72c:	mov    r9d,0x1e13380
  40c732:	xor    ecx,ecx
  40c734:	mov    rdx,rdi
  40c737:	mov    BYTE PTR [rsp+0x34],0x0
  40c73c:	mov    QWORD PTR [rsp+0x38],rsi
  40c741:	mov    DWORD PTR [rsp+0x30],eax
  40c745:	lea    rbp,[rsi+0x2]
  40c749:	call   0x408ef0
  40c74e:	movzx  edx,WORD PTR [rbx+0x4]
  40c752:	mov    r8,rbp
  40c755:	mov    r9d,0x278d00
  40c75b:	mov    rcx,rax
  40c75e:	mov    BYTE PTR [rsp+0x32],0x0
  40c763:	mov    QWORD PTR [rsp+0x38],rsi
  40c768:	mov    WORD PTR [rsp+0x30],dx
  40c76d:	mov    rdx,rdi
  40c770:	call   0x408ef0
  40c775:	movzx  edx,WORD PTR [rbx+0x6]
  40c779:	mov    r8,rbp
  40c77c:	mov    r9d,0x15180
  40c782:	mov    rcx,rax
  40c785:	mov    BYTE PTR [rsp+0x32],0x0
  40c78a:	mov    QWORD PTR [rsp+0x38],rsi
  40c78f:	mov    WORD PTR [rsp+0x30],dx
  40c794:	mov    rdx,rdi
  40c797:	call   0x408ef0
  40c79c:	mov    rbp,QWORD PTR [rip+0x2c829]        # 0x438fcc
  40c7a3:	mov    rdi,rax
  40c7a6:	jmp    0x40c405
  40c7ab:	mov    rax,rdi
  40c7ae:	jmp    0x40c2bd
  40c7b3:	call   QWORD PTR [rip+0x2c813]        # 0x438fcc
  40c7b9:	mov    DWORD PTR [rax],0x16
  40c7bf:	mov    rax,0xffffffffffffffff
  40c7c6:	jmp    0x40c2bd
  40c7cb:	mov    rbp,QWORD PTR [rip+0x2c7fa]        # 0x438fcc
  40c7d2:	mov    rdi,0xffffffffffffffff
  40c7d9:	call   rbp
  40c7db:	mov    DWORD PTR [rax],0x16
  40c7e1:	jmp    0x40c405
  40c7e6:	call   QWORD PTR [rip+0x2c7e0]        # 0x438fcc
  40c7ec:	mov    DWORD PTR [rax],0xc
  40c7f2:	mov    rax,0xffffffffffffffff
  40c7f9:	jmp    0x40c2bd
  40c7fe:	call   rbp
  40c800:	mov    DWORD PTR [rax],0x16
  40c806:	jmp    0x40c6a6
  40c80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c810:	push   rbp
  40c811:	push   rdi
  40c812:	push   rsi
  40c813:	push   rbx
  40c814:	sub    rsp,0x28
  40c818:	lea    eax,[rdx-0x3]
  40c81b:	mov    rsi,rdx
  40c81e:	cmp    eax,0xb
  40c821:	ja     0x40c880
  40c823:	movzx  eax,BYTE PTR [rcx]
  40c826:	lea    r8,[rip+0x1c393]        # 0x428bc0
  40c82d:	mov    rdx,rax
  40c830:	movzx  eax,BYTE PTR [r8+rax*1]
  40c835:	add    eax,esi
  40c837:	cmp    eax,0x11
  40c83a:	ja     0x40c880
  40c83c:	cdqe   
  40c83e:	lea    rbx,[rip+0x1cd3b]        # 0x429580
  40c845:	xor    ebp,ebp
  40c847:	shl    rax,0x4
  40c84b:	add    rbx,rax
  40c84e:	mov    rdi,QWORD PTR [rbx]
  40c851:	cmp    dl,BYTE PTR [rdi]
  40c853:	jne    0x40c875
  40c855:	lea    rdx,[rdi+0x1]
  40c859:	lea    r8d,[rsi-0x1]
  40c85d:	add    rcx,0x1
  40c861:	call   0x421d90
  40c866:	test   eax,eax
  40c868:	jne    0x40c875
  40c86a:	mov    esi,esi
  40c86c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40c870:	jne    0x40c875
  40c872:	mov    ebp,DWORD PTR [rbx+0x8]
  40c875:	mov    eax,ebp
  40c877:	add    rsp,0x28
  40c87b:	pop    rbx
  40c87c:	pop    rsi
  40c87d:	pop    rdi
  40c87e:	pop    rbp
  40c87f:	ret    
  40c880:	xor    ebp,ebp
  40c882:	mov    eax,ebp
  40c884:	add    rsp,0x28
  40c888:	pop    rbx
  40c889:	pop    rsi
  40c88a:	pop    rdi
  40c88b:	pop    rbp
  40c88c:	ret    
  40c88d:	nop    DWORD PTR [rax]
  40c890:	push   rbp
  40c891:	push   rdi
  40c892:	push   rsi
  40c893:	push   rbx
  40c894:	sub    rsp,0x28
  40c898:	lea    eax,[rdx-0x4]
  40c89b:	mov    rsi,rdx
  40c89e:	cmp    eax,0x4
  40c8a1:	ja     0x40c900
  40c8a3:	movzx  eax,BYTE PTR [rcx]
  40c8a6:	lea    r8,[rip+0x1c213]        # 0x428ac0
  40c8ad:	mov    rdx,rax
  40c8b0:	movzx  eax,BYTE PTR [r8+rax*1]
  40c8b5:	add    eax,esi
  40c8b7:	cmp    eax,0x9
  40c8ba:	ja     0x40c900
  40c8bc:	cdqe   
  40c8be:	lea    rbx,[rip+0x1cbbb]        # 0x429480
  40c8c5:	xor    ebp,ebp
  40c8c7:	shl    rax,0x4
  40c8cb:	add    rbx,rax
  40c8ce:	mov    rdi,QWORD PTR [rbx]
  40c8d1:	cmp    dl,BYTE PTR [rdi]
  40c8d3:	jne    0x40c8f5
  40c8d5:	lea    rdx,[rdi+0x1]
  40c8d9:	lea    r8d,[rsi-0x1]
  40c8dd:	add    rcx,0x1
  40c8e1:	call   0x421d90
  40c8e6:	test   eax,eax
  40c8e8:	jne    0x40c8f5
  40c8ea:	mov    esi,esi
  40c8ec:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40c8f0:	jne    0x40c8f5
  40c8f2:	mov    ebp,DWORD PTR [rbx+0x8]
  40c8f5:	mov    eax,ebp
  40c8f7:	add    rsp,0x28
  40c8fb:	pop    rbx
  40c8fc:	pop    rsi
  40c8fd:	pop    rdi
  40c8fe:	pop    rbp
  40c8ff:	ret    
  40c900:	xor    ebp,ebp
  40c902:	mov    eax,ebp
  40c904:	add    rsp,0x28
  40c908:	pop    rbx
  40c909:	pop    rsi
  40c90a:	pop    rdi
  40c90b:	pop    rbp
  40c90c:	ret    
  40c90d:	nop    DWORD PTR [rax]
  40c910:	push   rbx
  40c911:	sub    rsp,0x20
  40c915:	cmp    rcx,0xf
  40c919:	jbe    0x40c97c
  40c91b:	mov    eax,r8d
  40c91e:	mov    r9,rdx
  40c921:	cmp    r8d,DWORD PTR [rcx+0xb0]
  40c928:	lea    rdx,[rax+rax*2]
  40c92c:	lea    rdx,[rax+rdx*4]
  40c930:	mov    rax,QWORD PTR [rcx+0x78]
  40c934:	lea    rdx,[rax+rdx*8]
  40c938:	jae    0x40c9b3
  40c93a:	mov    eax,DWORD PTR [rdx+0x10]
  40c93d:	and    eax,0xfffff00
  40c942:	mov    DWORD PTR [rdx+0x10],eax
  40c945:	mov    r8d,DWORD PTR [r9+0x10]
  40c949:	and    r8d,0xf00000ff
  40c950:	or     eax,r8d
  40c953:	mov    r8,QWORD PTR [r9+0x18]
  40c957:	test   al,0x4
  40c959:	mov    DWORD PTR [rdx+0x10],eax
  40c95c:	mov    QWORD PTR [rdx+0x18],r8
  40c960:	jne    0x40c990
  40c962:	xor    eax,eax
  40c964:	and    DWORD PTR [r9+0x10],0xfffff00
  40c96c:	mov    WORD PTR [r9+0xe],ax
  40c971:	mov    rax,QWORD PTR [rdx+0x38]
  40c975:	test   rax,rax
  40c978:	je     0x40c97c
  40c97a:	call   rax
  40c97c:	xor    ebx,ebx
  40c97e:	mov    eax,ebx
  40c980:	add    rsp,0x20
  40c984:	pop    rbx
  40c985:	ret    
  40c986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c990:	movzx  eax,WORD PTR [rdx+0xe]
  40c994:	add    eax,0x1
  40c997:	cmp    ax,WORD PTR [rdx+0xc]
  40c99b:	mov    WORD PTR [rdx+0xe],ax
  40c99f:	jbe    0x40c962
  40c9a1:	test   BYTE PTR [rcx+0x10],0x4
  40c9a5:	mov    ebx,0xffffffff
  40c9aa:	je     0x40c97e
  40c9ac:	call   0x409220
  40c9b1:	jmp    0x40c97e
  40c9b3:	call   QWORD PTR [rip+0x2c5c3]        # 0x438f7c
  40c9b9:	mov    rcx,QWORD PTR [rip+0x170d0]        # 0x423a90
  40c9c0:	lea    rdx,[rax+0x60]
  40c9c4:	call   0x421e60
  40c9c9:	mov    ecx,0x1
  40c9ce:	call   0x4082e0
  40c9d3:	nop
  40c9d4:	xchg   ax,ax
  40c9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9e0:	push   rsi
  40c9e1:	push   rbx
  40c9e2:	sub    rsp,0x38
  40c9e6:	cmp    rcx,0xf
  40c9ea:	jbe    0x40ca3b
  40c9ec:	test   rdx,rdx
  40c9ef:	je     0x40ca3b
  40c9f1:	mov    eax,DWORD PTR [rdx+0x10]
  40c9f4:	mov    esi,eax
  40c9f6:	and    esi,0x8
  40c9f9:	jne    0x40ca3b
  40c9fb:	mov    rcx,QWORD PTR [rdx+0x18]
  40c9ff:	test   rcx,rcx
  40ca02:	je     0x40ca80
  40ca04:	mov    rbx,rdx
  40ca07:	movzx  edx,BYTE PTR [rcx]
  40ca0a:	cmp    dl,0x46
  40ca0d:	je     0x40ca34
  40ca0f:	jg     0x40ca51
  40ca11:	cmp    dl,0x23
  40ca14:	je     0x40ca62
  40ca16:	cmp    dl,0x30
  40ca19:	jne    0x40ca90
  40ca1b:	lea    rdx,[rsp+0x28]
  40ca20:	xor    r8d,r8d
  40ca23:	call   0x421d68
  40ca28:	test   eax,eax
  40ca2a:	mov    eax,DWORD PTR [rbx+0x10]
  40ca2d:	je     0x40ca70
  40ca2f:	mov    esi,0x1
  40ca34:	test   al,0x40
  40ca36:	jne    0x40ca42
  40ca38:	mov    DWORD PTR [rbx+0x18],esi
  40ca3b:	add    rsp,0x38
  40ca3f:	pop    rbx
  40ca40:	pop    rsi
  40ca41:	ret    
  40ca42:	mov    rcx,QWORD PTR [rbx+0x18]
  40ca46:	call   0x421e50
  40ca4b:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40ca4f:	jmp    0x40ca38
  40ca51:	cmp    dl,0x66
  40ca54:	je     0x40ca34
  40ca56:	cmp    dl,0x6e
  40ca59:	je     0x40ca34
  40ca5b:	cmp    dl,0x4e
  40ca5e:	jne    0x40ca2f
  40ca60:	jmp    0x40ca34
  40ca62:	xor    esi,esi
  40ca64:	cmp    BYTE PTR [rcx+0x1],0x66
  40ca68:	setne  sil
  40ca6c:	jmp    0x40ca34
  40ca6e:	xchg   ax,ax
  40ca70:	mov    rdx,QWORD PTR [rsp+0x28]
  40ca75:	xor    esi,esi
  40ca77:	cmp    BYTE PTR [rdx],0x0
  40ca7a:	setne  sil
  40ca7e:	jmp    0x40ca34
  40ca80:	mov    DWORD PTR [rdx+0x18],0x0
  40ca87:	jmp    0x40ca3b
  40ca89:	nop    DWORD PTR [rax+0x0]
  40ca90:	test   dl,dl
  40ca92:	jne    0x40ca2f
  40ca94:	jmp    0x40ca34
  40ca96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40caa0:	sub    rsp,0x28
  40caa4:	test   rcx,rcx
  40caa7:	je     0x40cb10
  40caa9:	mov    eax,DWORD PTR [rcx+0x10]
  40caac:	and    eax,0xf000
  40cab1:	cmp    eax,0x6000
  40cab6:	jne    0x40cb10
  40cab8:	mov    rcx,QWORD PTR [rcx+0x20]
  40cabc:	test   rcx,rcx
  40cabf:	je     0x40caea
  40cac1:	mov    r8d,DWORD PTR [rcx]
  40cac4:	xor    r9d,r9d
  40cac7:	add    rcx,0x8
  40cacb:	jmp    0x40cae4
  40cacd:	nop    DWORD PTR [rax]
  40cad0:	add    rcx,0x8
  40cad4:	test   r9b,r9b
  40cad7:	mov    rax,QWORD PTR [rcx-0x8]
  40cadb:	jne    0x40cb00
  40cadd:	cmp    rax,rdx
  40cae0:	sete   r9b
  40cae4:	sub    r8d,0x1
  40cae8:	jns    0x40cad0
  40caea:	call   QWORD PTR [rip+0x2c4dc]        # 0x438fcc
  40caf0:	mov    DWORD PTR [rax],0x2
  40caf6:	xor    eax,eax
  40caf8:	jmp    0x40cb05
  40cafa:	nop    WORD PTR [rax+rax*1+0x0]
  40cb00:	test   rax,rax
  40cb03:	je     0x40caea
  40cb05:	add    rsp,0x28
  40cb09:	ret    
  40cb0a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb10:	call   QWORD PTR [rip+0x2c4b6]        # 0x438fcc
  40cb16:	mov    DWORD PTR [rax],0x16
  40cb1c:	xor    eax,eax
  40cb1e:	add    rsp,0x28
  40cb22:	ret    
  40cb23:	nop    DWORD PTR [rax]
  40cb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb30:	push   rbp
  40cb31:	push   rdi
  40cb32:	push   rsi
  40cb33:	push   rbx
  40cb34:	sub    rsp,0x28
  40cb38:	test   rcx,rcx
  40cb3b:	mov    rdi,rdx
  40cb3e:	je     0x40cb90
  40cb40:	cmp    DWORD PTR [rcx],0x6
  40cb43:	jne    0x40cb90
  40cb45:	mov    rax,QWORD PTR [rcx+0x10]
  40cb49:	mov    edx,DWORD PTR [rax]
  40cb4b:	test   edx,edx
  40cb4d:	jle    0x40cbc0
  40cb4f:	test   rdi,rdi
  40cb52:	lea    rbx,[rax+0x8]
  40cb56:	je     0x40cbb0
  40cb58:	lea    eax,[rdx-0x1]
  40cb5b:	lea    rbp,[rbx+rax*8+0x8]
  40cb60:	jmp    0x40cb67
  40cb62:	cmp    rbx,rbp
  40cb65:	je     0x40cbc0
  40cb67:	add    rbx,0x8
  40cb6b:	mov    rsi,QWORD PTR [rbx-0x8]
  40cb6f:	mov    rdx,rdi
  40cb72:	mov    rcx,QWORD PTR [rsi+0x8]
  40cb76:	call   0x421db8
  40cb7b:	test   eax,eax
  40cb7d:	jne    0x40cb62
  40cb7f:	mov    rax,rsi
  40cb82:	add    rsp,0x28
  40cb86:	pop    rbx
  40cb87:	pop    rsi
  40cb88:	pop    rdi
  40cb89:	pop    rbp
  40cb8a:	ret    
  40cb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	xor    esi,esi
  40cb92:	call   QWORD PTR [rip+0x2c434]        # 0x438fcc
  40cb98:	mov    DWORD PTR [rax],0x16
  40cb9e:	mov    rax,rsi
  40cba1:	add    rsp,0x28
  40cba5:	pop    rbx
  40cba6:	pop    rsi
  40cba7:	pop    rdi
  40cba8:	pop    rbp
  40cba9:	ret    
  40cbaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cbb0:	mov    rsi,QWORD PTR [rax+0x8]
  40cbb4:	test   rsi,rsi
  40cbb7:	jne    0x40cb7f
  40cbb9:	nop    DWORD PTR [rax+0x0]
  40cbc0:	call   QWORD PTR [rip+0x2c406]        # 0x438fcc
  40cbc6:	xor    esi,esi
  40cbc8:	mov    DWORD PTR [rax],0x2
  40cbce:	jmp    0x40cb7f
  40cbd0:	push   r12
  40cbd2:	push   rbp
  40cbd3:	push   rdi
  40cbd4:	push   rsi
  40cbd5:	push   rbx
  40cbd6:	sub    rsp,0x20
  40cbda:	test   rcx,rcx
  40cbdd:	mov    rbp,rdx
  40cbe0:	mov    r12,r8
  40cbe3:	je     0x40cc60
  40cbe5:	mov    eax,DWORD PTR [rcx+0x10]
  40cbe8:	and    eax,0xf000
  40cbed:	cmp    eax,0x6000
  40cbf2:	jne    0x40cc60
  40cbf4:	mov    rax,QWORD PTR [rcx+0x20]
  40cbf8:	test   rax,rax
  40cbfb:	je     0x40cc45
  40cbfd:	mov    ebx,DWORD PTR [rax]
  40cbff:	lea    rsi,[rax+0x8]
  40cc03:	test   ebx,ebx
  40cc05:	je     0x40cc45
  40cc07:	test   rdx,rdx
  40cc0a:	je     0x40cc79
  40cc0c:	nop    DWORD PTR [rax+0x0]
  40cc10:	sub    ebx,0x1
  40cc13:	js     0x40cc45
  40cc15:	add    rsi,0x8
  40cc19:	mov    rdi,QWORD PTR [rsi-0x8]
  40cc1d:	mov    rdx,rbp
  40cc20:	mov    rcx,rdi
  40cc23:	call   0x40cb30
  40cc28:	test   rax,rax
  40cc2b:	je     0x40cc10
  40cc2d:	test   r12,r12
  40cc30:	jne    0x40cc10
  40cc32:	test   rdi,rdi
  40cc35:	mov    rax,rdi
  40cc38:	je     0x40cc45
  40cc3a:	add    rsp,0x20
  40cc3e:	pop    rbx
  40cc3f:	pop    rsi
  40cc40:	pop    rdi
  40cc41:	pop    rbp
  40cc42:	pop    r12
  40cc44:	ret    
  40cc45:	call   QWORD PTR [rip+0x2c381]        # 0x438fcc
  40cc4b:	mov    DWORD PTR [rax],0x2
  40cc51:	xor    eax,eax
  40cc53:	add    rsp,0x20
  40cc57:	pop    rbx
  40cc58:	pop    rsi
  40cc59:	pop    rdi
  40cc5a:	pop    rbp
  40cc5b:	pop    r12
  40cc5d:	ret    
  40cc5e:	xchg   ax,ax
  40cc60:	call   QWORD PTR [rip+0x2c366]        # 0x438fcc
  40cc66:	mov    DWORD PTR [rax],0x16
  40cc6c:	xor    eax,eax
  40cc6e:	add    rsp,0x20
  40cc72:	pop    rbx
  40cc73:	pop    rsi
  40cc74:	pop    rdi
  40cc75:	pop    rbp
  40cc76:	pop    r12
  40cc78:	ret    
  40cc79:	mov    rax,QWORD PTR [rax+0x8]
  40cc7d:	jmp    0x40cc3a
  40cc7f:	nop
  40cc80:	push   rbx
  40cc81:	sub    rsp,0x20
  40cc85:	test   rcx,rcx
  40cc88:	je     0x40cce0
  40cc8a:	cmp    DWORD PTR [rcx],0x6
  40cc8d:	jne    0x40cce0
  40cc8f:	mov    r8,QWORD PTR [rcx+0x10]
  40cc93:	mov    eax,DWORD PTR [r8]
  40cc96:	add    r8,0x8
  40cc9a:	jmp    0x40ccad
  40cc9c:	nop    DWORD PTR [rax+0x0]
  40cca0:	lea    rcx,[r8+0x8]
  40cca4:	cmp    QWORD PTR [rcx-0x8],rdx
  40cca8:	je     0x40ccd0
  40ccaa:	mov    r8,rcx
  40ccad:	sub    eax,0x1
  40ccb0:	lea    ecx,[rax+0x1]
  40ccb3:	test   ecx,ecx
  40ccb5:	jg     0x40cca0
  40ccb7:	mov    ebx,0x16
  40ccbc:	call   QWORD PTR [rip+0x2c30a]        # 0x438fcc
  40ccc2:	mov    DWORD PTR [rax],ebx
  40ccc4:	xor    eax,eax
  40ccc6:	add    rsp,0x20
  40ccca:	pop    rbx
  40cccb:	ret    
  40cccc:	nop    DWORD PTR [rax+0x0]
  40ccd0:	test   eax,eax
  40ccd2:	jne    0x40ccf4
  40ccd4:	mov    ebx,0x2
  40ccd9:	jmp    0x40ccbc
  40ccdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cce0:	call   QWORD PTR [rip+0x2c2e6]        # 0x438fcc
  40cce6:	mov    DWORD PTR [rax],0x16
  40ccec:	xor    eax,eax
  40ccee:	add    rsp,0x20
  40ccf2:	pop    rbx
  40ccf3:	ret    
  40ccf4:	mov    rax,QWORD PTR [r8+0x8]
  40ccf8:	add    rsp,0x20
  40ccfc:	pop    rbx
  40ccfd:	ret    
  40ccfe:	xchg   ax,ax
  40cd00:	push   rsi
  40cd01:	push   rbx
  40cd02:	sub    rsp,0x38
  40cd06:	movzx  eax,BYTE PTR [rcx]
  40cd09:	mov    rsi,rdx
  40cd0c:	cmp    al,0x78
  40cd0e:	mov    BYTE PTR [rdx],al
  40cd10:	ja     0x40ce63
  40cd16:	lea    r9,[rip+0x1b6b3]        # 0x4283d0
  40cd1d:	movsxd rax,DWORD PTR [r9+rax*4]
  40cd21:	add    r9,rax
  40cd24:	jmp    r9
  40cd27:	nop    WORD PTR [rax+rax*1+0x0]
  40cd30:	mov    ebx,0x1
  40cd35:	mov    BYTE PTR [rsi],r8b
  40cd38:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd40:	mov    eax,ebx
  40cd42:	add    rsp,0x38
  40cd46:	pop    rbx
  40cd47:	pop    rsi
  40cd48:	ret    
  40cd49:	nop    DWORD PTR [rax+0x0]
  40cd50:	xor    ebx,ebx
  40cd52:	jmp    0x40cd40
  40cd54:	mov    BYTE PTR [rdx],0xb
  40cd57:	mov    ebx,0x1
  40cd5c:	jmp    0x40cd40
  40cd5e:	xchg   ax,ax
  40cd60:	mov    BYTE PTR [rdx],0xd
  40cd63:	mov    ebx,0x1
  40cd68:	jmp    0x40cd40
  40cd6a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd70:	mov    BYTE PTR [rdx],0x9
  40cd73:	mov    ebx,0x1
  40cd78:	jmp    0x40cd40
  40cd7a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd80:	cmp    BYTE PTR [rcx+0x1],0xa
  40cd84:	mov    ebx,0x1
  40cd89:	jne    0x40cd40
  40cd8b:	mov    bl,0x2
  40cd8d:	jmp    0x40cd35
  40cd8f:	nop
  40cd90:	movzx  eax,BYTE PTR [rcx]
  40cd93:	mov    ebx,0x1
  40cd98:	mov    BYTE PTR [rsp+0x20],al
  40cd9c:	mov    eax,ebx
  40cd9e:	movzx  edx,BYTE PTR [rcx+rax*1]
  40cda2:	cmp    dl,0x7f
  40cda5:	ja     0x40ceaa
  40cdab:	lea    r9,[rip+0x1f50e]        # 0x42c2c0
  40cdb2:	movzx  r8d,dl
  40cdb6:	test   BYTE PTR [r9+r8*4+0x2],0x1
  40cdbc:	je     0x40ceaa
  40cdc2:	cmp    ebx,0x2
  40cdc5:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  40cdc9:	je     0x40cea0
  40cdcf:	mov    ebx,0x2
  40cdd4:	jmp    0x40cd9c
  40cdd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cde0:	movzx  eax,BYTE PTR [rcx+0x1]
  40cde4:	mov    ebx,0x1
  40cde9:	cmp    al,0x7f
  40cdeb:	ja     0x40cd40
  40cdf1:	lea    rdx,[rip+0x1f4c8]        # 0x42c2c0
  40cdf8:	movzx  r8d,al
  40cdfc:	test   DWORD PTR [rdx+r8*4],0x70000
  40ce04:	je     0x40cd40
  40ce0a:	movzx  ecx,BYTE PTR [rcx+0x2]
  40ce0e:	mov    BYTE PTR [rsp+0x20],al
  40ce12:	cmp    cl,0x7f
  40ce15:	movzx  eax,cl
  40ce18:	ja     0x40ced5
  40ce1e:	test   DWORD PTR [rdx+rax*4],0x70000
  40ce25:	je     0x40ced5
  40ce2b:	mov    BYTE PTR [rsp+0x21],cl
  40ce2f:	mov    ebx,0x3
  40ce34:	mov    eax,0x2
  40ce39:	lea    rcx,[rsp+0x20]
  40ce3e:	mov    r8d,0x10
  40ce44:	xor    edx,edx
  40ce46:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40ce4b:	call   0x421d60
  40ce50:	mov    BYTE PTR [rsi],al
  40ce52:	jmp    0x40cd40
  40ce57:	nop    WORD PTR [rax+rax*1+0x0]
  40ce60:	mov    BYTE PTR [rdx],0x7
  40ce63:	mov    ebx,0x1
  40ce68:	mov    eax,ebx
  40ce6a:	add    rsp,0x38
  40ce6e:	pop    rbx
  40ce6f:	pop    rsi
  40ce70:	ret    
  40ce71:	mov    BYTE PTR [rdx],0x8
  40ce74:	mov    ebx,0x1
  40ce79:	jmp    0x40cd40
  40ce7e:	xchg   ax,ax
  40ce80:	mov    BYTE PTR [rdx],0xc
  40ce83:	mov    ebx,0x1
  40ce88:	jmp    0x40cd40
  40ce8d:	nop    DWORD PTR [rax]
  40ce90:	mov    BYTE PTR [rdx],0xa
  40ce93:	mov    ebx,0x1
  40ce98:	jmp    0x40cd40
  40ce9d:	nop    DWORD PTR [rax]
  40cea0:	mov    ebx,0x3
  40cea5:	mov    eax,0x3
  40ceaa:	lea    rcx,[rsp+0x20]
  40ceaf:	xor    edx,edx
  40ceb1:	mov    r8d,0x8
  40ceb7:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40cebc:	call   0x421d60
  40cec1:	mov    edx,0xff
  40cec6:	cmp    eax,0xff
  40cecb:	cmova  eax,edx
  40cece:	mov    BYTE PTR [rsi],al
  40ced0:	jmp    0x40cd40
  40ced5:	mov    ebx,0x2
  40ceda:	mov    eax,0x1
  40cedf:	jmp    0x40ce39
  40cee4:	xchg   ax,ax
  40cee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cef0:	push   r14
  40cef2:	push   r13
  40cef4:	push   r12
  40cef6:	push   rbp
  40cef7:	push   rdi
  40cef8:	push   rsi
  40cef9:	push   rbx
  40cefa:	sub    rsp,0x30
  40cefe:	movzx  esi,BYTE PTR [rcx]
  40cf01:	movzx  r8d,BYTE PTR [rcx+0x1]
  40cf06:	mov    r13d,0x1
  40cf0c:	lea    rax,[rsp+0x2c]
  40cf11:	mov    rbp,rdx
  40cf14:	test   rdx,rdx
  40cf17:	lea    r9,[rcx+0x1]
  40cf1b:	mov    rbx,rcx
  40cf1e:	mov    DWORD PTR [rsp+0x2c],0x0
  40cf26:	cmove  rbp,rax
  40cf2a:	movabs r12,0x200000000000011
  40cf34:	cmp    sil,r8b
  40cf37:	je     0x40cf69
  40cf39:	cmp    r8b,0xa
  40cf3d:	lea    r14,[rbx+0x1]
  40cf41:	lea    rdi,[r9+0x1]
  40cf45:	mov    BYTE PTR [rbx],r8b
  40cf48:	je     0x40d010
  40cf4e:	cmp    r8b,0x5c
  40cf52:	je     0x40cfd2
  40cf54:	test   r8b,r8b
  40cf57:	je     0x40cfc1
  40cf59:	movzx  r8d,BYTE PTR [r9+0x1]
  40cf5e:	mov    rbx,r14
  40cf61:	mov    r9,rdi
  40cf64:	cmp    sil,r8b
  40cf67:	jne    0x40cf39
  40cf69:	lea    rdi,[r9+0x1]
  40cf6d:	mov    BYTE PTR [rbx],0x0
  40cf70:	movzx  esi,BYTE PTR [rdi]
  40cf73:	cmp    sil,0x7f
  40cf77:	ja     0x40cf91
  40cf79:	lea    rdx,[rip+0x1f340]        # 0x42c2c0
  40cf80:	movzx  eax,sil
  40cf84:	test   DWORD PTR [rdx+rax*4],0xc01
  40cf8b:	jne    0x40d020
  40cf91:	cmp    sil,0x27
  40cf95:	je     0x40d080
  40cf9b:	cmp    sil,0x2f
  40cf9f:	je     0x40d0a1
  40cfa5:	cmp    sil,0x22
  40cfa9:	je     0x40d080
  40cfaf:	mov    rax,rdi
  40cfb2:	add    rsp,0x30
  40cfb6:	pop    rbx
  40cfb7:	pop    rsi
  40cfb8:	pop    rdi
  40cfb9:	pop    rbp
  40cfba:	pop    r12
  40cfbc:	pop    r13
  40cfbe:	pop    r14
  40cfc0:	ret    
  40cfc1:	xor    eax,eax
  40cfc3:	add    rsp,0x30
  40cfc7:	pop    rbx
  40cfc8:	pop    rsi
  40cfc9:	pop    rdi
  40cfca:	pop    rbp
  40cfcb:	pop    r12
  40cfcd:	pop    r13
  40cfcf:	pop    r14
  40cfd1:	ret    
  40cfd2:	movzx  r8d,BYTE PTR [r9+0x1]
  40cfd7:	cmp    r8b,0xa
  40cfdb:	je     0x40d090
  40cfe1:	cmp    sil,0x27
  40cfe5:	je     0x40d040
  40cfe7:	mov    r8d,0xa
  40cfed:	mov    rdx,rbx
  40cff0:	mov    rcx,rdi
  40cff3:	call   0x40cd00
  40cff8:	test   eax,eax
  40cffa:	je     0x40cfc1
  40cffc:	mov    eax,eax
  40cffe:	mov    rbx,r14
  40d001:	lea    r9,[rdi+rax*1]
  40d005:	movzx  r8d,BYTE PTR [r9]
  40d009:	jmp    0x40cf34
  40d00e:	xchg   ax,ax
  40d010:	add    DWORD PTR [rbp+0x0],0x1
  40d014:	jmp    0x40cf59
  40d019:	nop    DWORD PTR [rax+0x0]
  40d020:	add    rdi,0x1
  40d024:	cmp    sil,0xa
  40d028:	jne    0x40cf70
  40d02e:	add    DWORD PTR [rbp+0x0],0x1
  40d032:	jmp    0x40cf70
  40d037:	nop    WORD PTR [rax+rax*1+0x0]
  40d040:	lea    ecx,[r8-0x23]
  40d044:	cmp    cl,0x39
  40d047:	ja     0x40d070
  40d049:	mov    rax,r13
  40d04c:	shl    rax,cl
  40d04f:	test   rax,r12
  40d052:	je     0x40d070
  40d054:	mov    BYTE PTR [rbx],r8b
  40d057:	add    r9,0x2
  40d05b:	movzx  r8d,BYTE PTR [r9]
  40d05f:	mov    rbx,r14
  40d062:	jmp    0x40cf34
  40d067:	nop    WORD PTR [rax+rax*1+0x0]
  40d070:	mov    r9,rdi
  40d073:	mov    rbx,r14
  40d076:	jmp    0x40cf34
  40d07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d080:	lea    r9,[rdi+0x1]
  40d084:	movzx  r8d,BYTE PTR [rdi+0x1]
  40d089:	jmp    0x40cf34
  40d08e:	xchg   ax,ax
  40d090:	add    DWORD PTR [rbp+0x0],0x1
  40d094:	add    r9,0x2
  40d098:	movzx  r8d,BYTE PTR [r9]
  40d09c:	jmp    0x40cf34
  40d0a1:	movzx  eax,BYTE PTR [rdi+0x1]
  40d0a5:	cmp    al,0x2a
  40d0a7:	je     0x40d0d0
  40d0a9:	cmp    al,0x2f
  40d0ab:	jne    0x40d110
  40d0ad:	mov    rcx,rdi
  40d0b0:	mov    edx,0xa
  40d0b5:	call   0x421dc0
  40d0ba:	test   rax,rax
  40d0bd:	mov    rdi,rax
  40d0c0:	jne    0x40cf70
  40d0c6:	jmp    0x40cfaf
  40d0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0d0:	lea    rcx,[rdi+0x2]
  40d0d4:	lea    rdx,[rip+0x1b4d9]        # 0x4285b4
  40d0db:	call   0x421d70
  40d0e0:	test   rax,rax
  40d0e3:	je     0x40d110
  40d0e5:	cmp    rdi,rax
  40d0e8:	jae    0x40d120
  40d0ea:	mov    edx,0x2f
  40d0ef:	jmp    0x40d0f9
  40d0f1:	cmp    rdi,rax
  40d0f4:	je     0x40d120
  40d0f6:	movzx  edx,BYTE PTR [rdi]
  40d0f9:	add    rdi,0x1
  40d0fd:	cmp    dl,0xa
  40d100:	jne    0x40d0f1
  40d102:	add    DWORD PTR [rbp+0x0],0x1
  40d106:	jmp    0x40d0f1
  40d108:	nop    DWORD PTR [rax+rax*1+0x0]
  40d110:	xor    edi,edi
  40d112:	jmp    0x40cfaf
  40d117:	nop    WORD PTR [rax+rax*1+0x0]
  40d120:	lea    rdi,[rax+0x2]
  40d124:	jmp    0x40cf70
  40d129:	nop    DWORD PTR [rax+0x0]
  40d130:	push   r15
  40d132:	push   r14
  40d134:	push   r13
  40d136:	push   r12
  40d138:	push   rbp
  40d139:	push   rdi
  40d13a:	push   rsi
  40d13b:	push   rbx
  40d13c:	sub    rsp,0xe8
  40d143:	test   rcx,rcx
  40d146:	mov    rbx,rcx
  40d149:	mov    rbp,rdx
  40d14c:	mov    rdi,r8
  40d14f:	je     0x40dcda
  40d155:	mov    rax,QWORD PTR [rip+0x27c04]        # 0x434d60
  40d15c:	test   rax,rax
  40d15f:	je     0x40d81c
  40d165:	movzx  r8d,BYTE PTR [rbx]
  40d169:	cmp    BYTE PTR [rax+r8*1],0x0
  40d16e:	mov    rcx,r8
  40d171:	je     0x40d183
  40d173:	add    rbx,0x1
  40d177:	movzx  edx,BYTE PTR [rbx]
  40d17a:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d17e:	mov    rcx,rdx
  40d181:	jne    0x40d173
  40d183:	test   cl,cl
  40d185:	je     0x40d683
  40d18b:	lea    rcx,[rdi+0x19]
  40d18f:	call   0x409ce0
  40d194:	lea    rcx,[rax+0x18]
  40d198:	mov    rsi,rax
  40d19b:	mov    rdx,rbp
  40d19e:	mov    r8,rdi
  40d1a1:	mov    DWORD PTR [rax],0x6
  40d1a7:	lea    rbp,[rsp+0x90]
  40d1af:	mov    QWORD PTR [rax+0x8],rcx
  40d1b3:	lea    r13,[rsi+0x10]
  40d1b7:	call   0x421e08
  40d1bc:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  40d1c1:	mov    ecx,0x38
  40d1c6:	lea    r12,[rbp+0x2]
  40d1ca:	call   0x409ce0
  40d1cf:	mov    QWORD PTR [rsi+0x10],rax
  40d1d3:	mov    DWORD PTR [rax],0x0
  40d1d9:	mov    DWORD PTR [rax+0x4],0x6
  40d1e0:	lea    rax,[rsp+0x70]
  40d1e5:	mov    QWORD PTR [rsp+0x48],rax
  40d1ea:	lea    rax,[rsp+0x98]
  40d1f2:	mov    QWORD PTR [rsp+0x38],rax
  40d1f7:	mov    rax,QWORD PTR [rip+0x27b62]        # 0x434d60
  40d1fe:	test   rax,rax
  40d201:	jne    0x40d214
  40d203:	jmp    0x40d5e5
  40d208:	nop    DWORD PTR [rax+rax*1+0x0]
  40d210:	add    rbx,0x1
  40d214:	movzx  ecx,BYTE PTR [rbx]
  40d217:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d21b:	mov    rdx,rcx
  40d21e:	jne    0x40d210
  40d220:	cmp    cl,0x7f
  40d223:	ja     0x40d2c0
  40d229:	movzx  eax,cl
  40d22c:	lea    rcx,[rip+0x1f08d]        # 0x42c2c0
  40d233:	test   DWORD PTR [rcx+rax*4],0x180040
  40d23a:	je     0x40d2c0
  40d240:	mov    rax,QWORD PTR [rip+0x27b99]        # 0x434de0
  40d247:	lea    rdi,[rbx+0x1]
  40d24b:	test   rax,rax
  40d24e:	je     0x40dc3a
  40d254:	movzx  edx,BYTE PTR [rbx+0x1]
  40d258:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d25c:	je     0x40d26d
  40d25e:	xchg   ax,ax
  40d260:	add    rdi,0x1
  40d264:	movzx  edx,BYTE PTR [rdi]
  40d267:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d26b:	jne    0x40d260
  40d26d:	xor    eax,eax
  40d26f:	cmp    BYTE PTR [rdi-0x1],0x3a
  40d273:	sete   al
  40d276:	sub    rdi,rax
  40d279:	mov    rax,QWORD PTR [rip+0x27ad0]        # 0x434d50
  40d280:	mov    r8,rdi
  40d283:	sub    r8,rbx
  40d286:	test   rax,rax
  40d289:	jne    0x40d294
  40d28b:	jmp    0x40dc21
  40d290:	add    rdi,0x1
  40d294:	movzx  ecx,BYTE PTR [rdi]
  40d297:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d29b:	mov    rdx,rcx
  40d29e:	jne    0x40d290
  40d2a0:	lea    r14,[rip+0x1b315]        # 0x4285bc
  40d2a7:	cmp    dl,0x3d
  40d2aa:	ja     0x40d4f2
  40d2b0:	movzx  eax,dl
  40d2b3:	movsxd rax,DWORD PTR [r14+rax*4]
  40d2b7:	add    rax,r14
  40d2ba:	jmp    rax
  40d2bc:	nop    DWORD PTR [rax+0x0]
  40d2c0:	cmp    dl,0x23
  40d2c3:	je     0x40d3b4
  40d2c9:	cmp    dl,0x3c
  40d2cc:	je     0x40d3d0
  40d2d2:	test   dl,dl
  40d2d4:	je     0x40d324
  40d2d6:	mov    rcx,QWORD PTR [rsi+0x10]
  40d2da:	call   0x421e50
  40d2df:	mov    rcx,rsi
  40d2e2:	call   0x421e50
  40d2e7:	xor    eax,eax
  40d2e9:	add    rsp,0xe8
  40d2f0:	pop    rbx
  40d2f1:	pop    rsi
  40d2f2:	pop    rdi
  40d2f3:	pop    rbp
  40d2f4:	pop    r12
  40d2f6:	pop    r13
  40d2f8:	pop    r14
  40d2fa:	pop    r15
  40d2fc:	ret    
  40d2fd:	add    rdi,0x1
  40d301:	mov    rdx,rbx
  40d304:	mov    QWORD PTR [rsp+0x20],0x0
  40d30d:	xor    r9d,r9d
  40d310:	mov    rcx,r13
  40d313:	mov    rbx,rdi
  40d316:	call   0x409df0
  40d31b:	test   rbx,rbx
  40d31e:	jne    0x40d1f7
  40d324:	mov    r15,QWORD PTR [rsi+0x10]
  40d328:	mov    edx,DWORD PTR [r15]
  40d32b:	test   edx,edx
  40d32d:	je     0x40dced
  40d333:	cmp    edx,0x1
  40d336:	mov    rax,rsi
  40d339:	jle    0x40d2e9
  40d33b:	lea    r12d,[rdx-0x2]
  40d33f:	xor    edi,edi
  40d341:	add    r12,0x1
  40d345:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  40d34a:	mov    ebx,edi
  40d34c:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  40d351:	mov    r13,QWORD PTR [rbp+0x8]
  40d355:	jmp    0x40d37a
  40d357:	nop    WORD PTR [rax+rax*1+0x0]
  40d360:	lea    eax,[rbx+0x1]
  40d363:	sub    ebx,0x1
  40d366:	cmp    ebx,0xffffffff
  40d369:	cdqe   
  40d36b:	mov    QWORD PTR [r15+rax*8+0x8],r14
  40d370:	movsxd rax,ebx
  40d373:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  40d378:	je     0x40d3b0
  40d37a:	mov    rcx,QWORD PTR [r14+0x8]
  40d37e:	mov    rdx,r13
  40d381:	call   0x421db8
  40d386:	test   eax,eax
  40d388:	jg     0x40d360
  40d38a:	add    ebx,0x1
  40d38d:	add    rdi,0x1
  40d391:	movsxd rbx,ebx
  40d394:	cmp    rdi,r12
  40d397:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  40d39c:	jne    0x40d345
  40d39e:	mov    rax,rsi
  40d3a1:	jmp    0x40d2e9
  40d3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3b0:	xor    ebx,ebx
  40d3b2:	jmp    0x40d38d
  40d3b4:	mov    rcx,rbx
  40d3b7:	mov    edx,0xa
  40d3bc:	call   0x421dc0
  40d3c1:	mov    rbx,rax
  40d3c4:	jmp    0x40d31b
  40d3c9:	nop    DWORD PTR [rax+0x0]
  40d3d0:	mov    eax,DWORD PTR [rip+0x165fa]        # 0x4239d0
  40d3d6:	mov    DWORD PTR [rsp+0x54],eax
  40d3da:	lea    rax,[rbx+0x1]
  40d3de:	mov    QWORD PTR [rsp+0x40],rax
  40d3e3:	movzx  eax,BYTE PTR [rbx+0x1]
  40d3e7:	cmp    al,0x7f
  40d3e9:	ja     0x40d460
  40d3eb:	lea    r10,[rip+0x1eece]        # 0x42c2c0
  40d3f2:	movzx  edx,al
  40d3f5:	test   DWORD PTR [r10+rdx*4],0x180040
  40d3fd:	je     0x40d460
  40d3ff:	mov    rax,QWORD PTR [rip+0x279da]        # 0x434de0
  40d406:	lea    rdi,[rbx+0x2]
  40d40a:	test   rax,rax
  40d40d:	je     0x40dd37
  40d413:	movzx  edx,BYTE PTR [rbx+0x2]
  40d417:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d41b:	je     0x40d42d
  40d41d:	nop    DWORD PTR [rax]
  40d420:	add    rdi,0x1
  40d424:	movzx  edx,BYTE PTR [rdi]
  40d427:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d42b:	jne    0x40d420
  40d42d:	mov    r14,rdi
  40d430:	sub    r14,QWORD PTR [rsp+0x40]
  40d435:	cmp    r14,0x40
  40d439:	ja     0x40d451
  40d43b:	mov    DWORD PTR [rsp+0x70],0x1
  40d443:	movzx  eax,BYTE PTR [rdi]
  40d446:	cmp    al,0x7f
  40d448:	movzx  edx,al
  40d44b:	jbe    0x40d730
  40d451:	mov    eax,DWORD PTR [rsp+0x54]
  40d455:	mov    DWORD PTR [rip+0x16575],eax        # 0x4239d0
  40d45b:	jmp    0x40d2d6
  40d460:	cmp    al,0x21
  40d462:	je     0x40d696
  40d468:	cmp    al,0x3f
  40d46a:	jne    0x40d2d6
  40d470:	mov    rcx,QWORD PTR [rsp+0x40]
  40d475:	mov    edx,0x3e
  40d47a:	call   0x421dc0
  40d47f:	test   rax,rax
  40d482:	je     0x40d2d6
  40d488:	lea    rbx,[rax+0x1]
  40d48c:	test   rbx,rbx
  40d48f:	je     0x40d2d6
  40d495:	cmp    BYTE PTR [rbx],0x2c
  40d498:	jne    0x40d1f7
  40d49e:	add    rbx,0x1
  40d4a2:	jmp    0x40d31b
  40d4a7:	mov    rax,QWORD PTR [rip+0x278a2]        # 0x434d50
  40d4ae:	lea    r15,[rdi+0x1]
  40d4b2:	test   rax,rax
  40d4b5:	je     0x40dd50
  40d4bb:	movzx  edx,BYTE PTR [rdi+0x1]
  40d4bf:	mov    rdi,r15
  40d4c2:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4c6:	mov    rcx,rdx
  40d4c9:	je     0x40d4e0
  40d4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4d0:	add    rdi,0x1
  40d4d4:	movzx  edx,BYTE PTR [rdi]
  40d4d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d4db:	mov    rcx,rdx
  40d4de:	jne    0x40d4d0
  40d4e0:	cmp    cl,0x3a
  40d4e3:	mov    edx,ecx
  40d4e5:	je     0x40d4f0
  40d4e7:	cmp    cl,0x3d
  40d4ea:	jne    0x40d2a7
  40d4f0:	mov    edx,ecx
  40d4f2:	mov    r15,rdi
  40d4f5:	cmp    dl,0xa
  40d4f8:	lea    rax,[rdi+0x2]
  40d4fc:	lea    r14,[r15+0x1]
  40d500:	je     0x40d523
  40d502:	cmp    dl,0x2c
  40d505:	je     0x40d5f4
  40d50b:	test   dl,dl
  40d50d:	je     0x40d7f2
  40d513:	movzx  edx,BYTE PTR [r14]
  40d517:	mov    r15,r14
  40d51a:	lea    r14,[r15+0x1]
  40d51e:	cmp    dl,0xa
  40d521:	jne    0x40d502
  40d523:	cmp    r14,rax
  40d526:	jbe    0x40d5f4
  40d52c:	cmp    BYTE PTR [r14-0x2],0x5c
  40d531:	jne    0x40d539
  40d533:	cmp    BYTE PTR [r14],0x0
  40d537:	jne    0x40d513
  40d539:	mov    rax,r14
  40d53c:	mov    rdx,rbx
  40d53f:	mov    r9,rdi
  40d542:	sub    rax,rdi
  40d545:	mov    rcx,r13
  40d548:	mov    rbx,r14
  40d54b:	sub    rax,0x1
  40d54f:	mov    QWORD PTR [rsp+0x20],rax
  40d554:	call   0x409df0
  40d559:	test   rax,rax
  40d55c:	jne    0x40d61d
  40d562:	jmp    0x40d1f7
  40d567:	nop    WORD PTR [rax+rax*1+0x0]
  40d570:	lea    r15,[rdi+0x1]
  40d574:	jmp    0x40d593
  40d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d580:	cmp    al,dl
  40d582:	je     0x40d6b9
  40d588:	cmp    al,0x5c
  40d58a:	je     0x40d6f0
  40d590:	mov    r15,r14
  40d593:	lea    r14,[r15+0x1]
  40d597:	movzx  eax,BYTE PTR [r14-0x1]
  40d59c:	test   al,al
  40d59e:	jne    0x40d580
  40d5a0:	mov    rax,r15
  40d5a3:	mov    rdx,rbx
  40d5a6:	mov    r9,rdi
  40d5a9:	sub    rax,rdi
  40d5ac:	mov    rcx,r13
  40d5af:	mov    rbx,r15
  40d5b2:	mov    QWORD PTR [rsp+0x20],rax
  40d5b7:	call   0x409df0
  40d5bc:	test   rax,rax
  40d5bf:	je     0x40d1f7
  40d5c5:	mov    r8d,DWORD PTR [rip+0x16404]        # 0x4239d0
  40d5cc:	test   r8d,r8d
  40d5cf:	jne    0x40d31b
  40d5d5:	lea    rcx,[rax+0x10]
  40d5d9:	xor    edx,edx
  40d5db:	call   0x40cef0
  40d5e0:	jmp    0x40d31b
  40d5e5:	mov    ecx,0xc
  40d5ea:	call   0x4097f0
  40d5ef:	jmp    0x40d214
  40d5f4:	mov    rax,r14
  40d5f7:	mov    rdx,rbx
  40d5fa:	mov    r9,rdi
  40d5fd:	sub    rax,rdi
  40d600:	mov    rcx,r13
  40d603:	mov    rbx,r14
  40d606:	sub    rax,0x1
  40d60a:	mov    QWORD PTR [rsp+0x20],rax
  40d60f:	call   0x409df0
  40d614:	test   rax,rax
  40d617:	je     0x40d31b
  40d61d:	add    rax,0x10
  40d621:	jmp    0x40d627
  40d623:	add    rax,0x1
  40d627:	cmp    BYTE PTR [rax],0xa
  40d62a:	je     0x40d623
  40d62c:	mov    edx,0xa
  40d631:	mov    rcx,rax
  40d634:	call   0x421dc0
  40d639:	test   rax,rax
  40d63c:	je     0x40d31b
  40d642:	cmp    BYTE PTR [rax-0x1],0x5c
  40d646:	jne    0x40d627
  40d648:	movzx  ecx,BYTE PTR [rax]
  40d64b:	lea    rdx,[rax-0x1]
  40d64f:	lea    r8,[rdx+0x1]
  40d653:	test   cl,cl
  40d655:	mov    BYTE PTR [rdx],cl
  40d657:	je     0x40d31b
  40d65d:	cmp    cl,0x5c
  40d660:	jne    0x40d66a
  40d662:	cmp    BYTE PTR [rax+0x1],0xa
  40d666:	cmove  r8,rdx
  40d66a:	add    rax,0x1
  40d66e:	movzx  ecx,BYTE PTR [rax]
  40d671:	mov    rdx,r8
  40d674:	lea    r8,[rdx+0x1]
  40d678:	test   cl,cl
  40d67a:	mov    BYTE PTR [rdx],cl
  40d67c:	jne    0x40d65d
  40d67e:	jmp    0x40d31b
  40d683:	call   QWORD PTR [rip+0x2b943]        # 0x438fcc
  40d689:	mov    DWORD PTR [rax],0x2
  40d68f:	xor    eax,eax
  40d691:	jmp    0x40d2e9
  40d696:	mov    rcx,QWORD PTR [rsp+0x40]
  40d69b:	lea    rdx,[rip+0x1af15]        # 0x4285b7
  40d6a2:	call   0x421d70
  40d6a7:	test   rax,rax
  40d6aa:	je     0x40d2d6
  40d6b0:	lea    rbx,[rax+0x3]
  40d6b4:	jmp    0x40d48c
  40d6b9:	mov    rax,r14
  40d6bc:	mov    r9,rdi
  40d6bf:	mov    rdx,rbx
  40d6c2:	sub    rax,rdi
  40d6c5:	mov    rcx,r13
  40d6c8:	mov    QWORD PTR [rsp+0x20],rax
  40d6cd:	call   0x409df0
  40d6d2:	test   rax,rax
  40d6d5:	je     0x40d6e5
  40d6d7:	mov    edx,DWORD PTR [rip+0x162f3]        # 0x4239d0
  40d6dd:	test   edx,edx
  40d6df:	je     0x40dccd
  40d6e5:	mov    rbx,r14
  40d6e8:	jmp    0x40d1f7
  40d6ed:	nop    DWORD PTR [rax]
  40d6f0:	mov    rcx,r15
  40d6f3:	add    r15,0x2
  40d6f7:	movzx  eax,BYTE PTR [rcx+0x1]
  40d6fb:	test   al,al
  40d6fd:	je     0x40ddfe
  40d703:	cmp    al,0x5c
  40d705:	je     0x40d70f
  40d707:	cmp    al,dl
  40d709:	jne    0x40d593
  40d70f:	cmp    BYTE PTR [rcx+0x2],0x0
  40d713:	mov    rax,r15
  40d716:	lea    r15,[rcx+0x3]
  40d71a:	jne    0x40d593
  40d720:	mov    r15,rax
  40d723:	jmp    0x40d5a0
  40d728:	nop    DWORD PTR [rax+rax*1+0x0]
  40d730:	movzx  ecx,al
  40d733:	mov    ecx,DWORD PTR [r10+rcx*4]
  40d737:	test   ecx,0xc01
  40d73d:	je     0x40d79b
  40d73f:	mov    rax,QWORD PTR [rip+0x2761a]        # 0x434d60
  40d746:	test   rax,rax
  40d749:	jne    0x40d757
  40d74b:	jmp    0x40ddbf
  40d750:	add    rdi,0x1
  40d754:	movzx  edx,BYTE PTR [rdi]
  40d757:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d75b:	jne    0x40d750
  40d75d:	mov    r8,QWORD PTR [rsp+0x48]
  40d762:	lea    rdx,[rip+0x16267]        # 0x4239d0
  40d769:	mov    rcx,rdi
  40d76c:	mov    QWORD PTR [rsp+0x58],r10
  40d771:	call   0x40bcc0
  40d776:	test   rax,rax
  40d779:	mov    rdi,rax
  40d77c:	je     0x40d451
  40d782:	movzx  edx,BYTE PTR [rax]
  40d785:	cmp    dl,0x7f
  40d788:	mov    eax,edx
  40d78a:	ja     0x40d451
  40d790:	mov    r10,QWORD PTR [rsp+0x58]
  40d795:	mov    edx,edx
  40d797:	mov    ecx,DWORD PTR [r10+rdx*4]
  40d79b:	and    ecx,0x1000c01
  40d7a1:	je     0x40d451
  40d7a7:	cmp    al,0x2f
  40d7a9:	je     0x40dcaf
  40d7af:	mov    r15,rdi
  40d7b2:	add    r15,0x1
  40d7b6:	je     0x40d451
  40d7bc:	mov    ecx,DWORD PTR [rsp+0x70]
  40d7c0:	test   ecx,ecx
  40d7c2:	jne    0x40d82b
  40d7c4:	mov    rdx,QWORD PTR [rsp+0x40]
  40d7c9:	mov    QWORD PTR [rsp+0x20],0x0
  40d7d2:	xor    r9d,r9d
  40d7d5:	mov    r8,r14
  40d7d8:	mov    rcx,r13
  40d7db:	mov    rbx,r15
  40d7de:	call   0x409df0
  40d7e3:	mov    eax,DWORD PTR [rsp+0x54]
  40d7e7:	mov    DWORD PTR [rip+0x161e3],eax        # 0x4239d0
  40d7ed:	jmp    0x40d495
  40d7f2:	mov    rax,r15
  40d7f5:	mov    rdx,rbx
  40d7f8:	mov    r9,rdi
  40d7fb:	sub    rax,rdi
  40d7fe:	mov    rcx,r13
  40d801:	mov    rbx,r15
  40d804:	mov    QWORD PTR [rsp+0x20],rax
  40d809:	call   0x409df0
  40d80e:	test   rax,rax
  40d811:	jne    0x40d61d
  40d817:	jmp    0x40d1f7
  40d81c:	mov    ecx,0xc
  40d821:	call   0x4097f0
  40d826:	jmp    0x40d165
  40d82b:	cmp    DWORD PTR [rip+0x1619e],0x2        # 0x4239d0
  40d832:	je     0x40d85e
  40d834:	mov    rax,QWORD PTR [rip+0x27525]        # 0x434d60
  40d83b:	test   rax,rax
  40d83e:	je     0x40dda6
  40d844:	movzx  edx,BYTE PTR [rdi+0x1]
  40d848:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d84c:	je     0x40d85e
  40d84e:	xchg   ax,ax
  40d850:	add    r15,0x1
  40d854:	movzx  edx,BYTE PTR [r15]
  40d858:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d85c:	jne    0x40d850
  40d85e:	mov    rdi,QWORD PTR [rsp+0x38]
  40d863:	mov    ecx,0x8
  40d868:	xor    eax,eax
  40d86a:	mov    QWORD PTR [rsp+0x90],0x2f3c
  40d876:	rep stos QWORD PTR es:[rdi],rax
  40d879:	nop    DWORD PTR [rax+0x0]
  40d880:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  40d885:	mov    BYTE PTR [r12+rax*1],dl
  40d889:	add    rax,0x1
  40d88d:	cmp    r14,rax
  40d890:	jne    0x40d880
  40d892:	lea    rax,[r12+r14*1-0x1]
  40d897:	mov    rdx,rbp
  40d89a:	mov    rcx,r15
  40d89d:	mov    QWORD PTR [rsp+0x58],r10
  40d8a2:	mov    BYTE PTR [rax+0x1],0x3e
  40d8a6:	mov    BYTE PTR [rax+0x2],0x0
  40d8aa:	lea    rdi,[rax+0x2]
  40d8ae:	call   0x421d70
  40d8b3:	test   rax,rax
  40d8b6:	mov    rbx,rax
  40d8b9:	je     0x40d451
  40d8bf:	cmp    DWORD PTR [rip+0x1610a],0x2        # 0x4239d0
  40d8c6:	mov    r10,QWORD PTR [rsp+0x58]
  40d8cb:	jne    0x40dc49
  40d8d1:	mov    rax,QWORD PTR [rip+0x27488]        # 0x434d60
  40d8d8:	mov    r9,rbx
  40d8db:	sub    rdi,rbp
  40d8de:	sub    r9,r15
  40d8e1:	add    rbx,rdi
  40d8e4:	test   rax,rax
  40d8e7:	jne    0x40d8f4
  40d8e9:	jmp    0x40dd76
  40d8ee:	xchg   ax,ax
  40d8f0:	add    rbx,0x1
  40d8f4:	movzx  edx,BYTE PTR [rbx]
  40d8f7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d8fb:	jne    0x40d8f0
  40d8fd:	cmp    DWORD PTR [rsp+0x70],0x6
  40d902:	ja     0x40d7e3
  40d908:	mov    edx,DWORD PTR [rsp+0x70]
  40d90c:	lea    rax,[rip+0x1ada1]        # 0x4286b4
  40d913:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40d917:	add    rax,rdx
  40d91a:	jmp    rax
  40d91c:	lea    rcx,[r9+0x1]
  40d920:	mov    QWORD PTR [rsp+0x58],r9
  40d925:	call   0x409ce0
  40d92a:	mov    r9,QWORD PTR [rsp+0x58]
  40d92f:	mov    rdx,r15
  40d932:	mov    rcx,rax
  40d935:	mov    rdi,rax
  40d938:	mov    r8,r9
  40d93b:	call   0x421e08
  40d940:	mov    r9,QWORD PTR [rsp+0x58]
  40d945:	test   r9,r9
  40d948:	mov    BYTE PTR [rdi+r9*1],0x0
  40d94d:	jne    0x40dcfe
  40d953:	lea    rcx,[r14+0x19]
  40d957:	call   0x409ce0
  40d95c:	mov    rdx,QWORD PTR [rsp+0x40]
  40d961:	lea    rcx,[rax+0x18]
  40d965:	mov    r15,rax
  40d968:	mov    QWORD PTR [rax+0x10],0x0
  40d970:	mov    DWORD PTR [rax],0x6
  40d976:	mov    r8,r14
  40d979:	mov    QWORD PTR [rax+0x8],rcx
  40d97d:	call   0x421e08
  40d982:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  40d988:	mov    rdx,r15
  40d98b:	mov    rcx,r13
  40d98e:	call   0x409d30
  40d993:	mov    rcx,rdi
  40d996:	call   0x421e50
  40d99b:	jmp    0x40d7e3
  40d9a0:	lea    rcx,[r14+0x19]
  40d9a4:	mov    QWORD PTR [rsp+0x60],r10
  40d9a9:	mov    QWORD PTR [rsp+0x58],r9
  40d9ae:	call   0x409ce0
  40d9b3:	mov    rdi,rax
  40d9b6:	movzx  eax,BYTE PTR [r15]
  40d9ba:	mov    r9,QWORD PTR [rsp+0x58]
  40d9bf:	mov    r10,QWORD PTR [rsp+0x60]
  40d9c4:	cmp    al,0x7f
  40d9c6:	jbe    0x40da20
  40d9c8:	test   r9,r9
  40d9cb:	je     0x40da2f
  40d9cd:	xor    r8d,r8d
  40d9d0:	xor    edx,edx
  40d9d2:	mov    rcx,r15
  40d9d5:	call   0x421d68
  40d9da:	mov    DWORD PTR [rdi+0x10],eax
  40d9dd:	lea    rcx,[rdi+0x18]
  40d9e1:	mov    rdx,QWORD PTR [rsp+0x40]
  40d9e6:	mov    DWORD PTR [rdi],0x5
  40d9ec:	mov    r8,r14
  40d9ef:	mov    QWORD PTR [rdi+0x8],rcx
  40d9f3:	call   0x421e08
  40d9f8:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  40d9fe:	mov    rdx,rdi
  40da01:	mov    rcx,r13
  40da04:	call   0x409d30
  40da09:	jmp    0x40d7e3
  40da0e:	xchg   ax,ax
  40da10:	add    r15,0x1
  40da14:	movzx  eax,BYTE PTR [r15]
  40da18:	sub    r9,0x1
  40da1c:	cmp    al,0x7f
  40da1e:	ja     0x40d9c8
  40da20:	test   DWORD PTR [r10+rax*4],0xc01
  40da28:	je     0x40d9c8
  40da2a:	test   r9,r9
  40da2d:	jne    0x40da10
  40da2f:	mov    DWORD PTR [rdi+0x10],0x0
  40da36:	jmp    0x40d9dd
  40da38:	lea    rcx,[r14+0x19]
  40da3c:	mov    QWORD PTR [rsp+0x60],r10
  40da41:	mov    QWORD PTR [rsp+0x58],r9
  40da46:	call   0x409ce0
  40da4b:	movzx  edx,BYTE PTR [r15]
  40da4f:	mov    rdi,rax
  40da52:	mov    r9,QWORD PTR [rsp+0x58]
  40da57:	mov    r10,QWORD PTR [rsp+0x60]
  40da5c:	cmp    dl,0x7f
  40da5f:	jbe    0x40dad1
  40da61:	test   r9,r9
  40da64:	je     0x40dae2
  40da66:	cmp    edx,0x7f
  40da69:	ja     0x40dd69
  40da6f:	mov    edx,edx
  40da71:	mov    eax,DWORD PTR [r10+rdx*4]
  40da75:	test   eax,0x30000
  40da7a:	je     0x40dd99
  40da80:	mov    rcx,r15
  40da83:	call   0x421eb0
  40da88:	mov    DWORD PTR [rdi+0x10],eax
  40da8b:	lea    rcx,[rdi+0x18]
  40da8f:	mov    rdx,QWORD PTR [rsp+0x40]
  40da94:	mov    DWORD PTR [rdi],0x3
  40da9a:	mov    r8,r14
  40da9d:	mov    QWORD PTR [rdi+0x8],rcx
  40daa1:	call   0x421e08
  40daa6:	mov    rax,QWORD PTR [rdi+0x8]
  40daaa:	mov    rdx,rdi
  40daad:	mov    rcx,r13
  40dab0:	mov    BYTE PTR [rax+r14*1],0x0
  40dab5:	call   0x409d30
  40daba:	jmp    0x40d7e3
  40dabf:	nop
  40dac0:	add    r15,0x1
  40dac4:	movzx  edx,BYTE PTR [r15]
  40dac8:	sub    r9,0x1
  40dacc:	cmp    dl,0x7f
  40dacf:	ja     0x40da61
  40dad1:	mov    eax,edx
  40dad3:	test   DWORD PTR [r10+rax*4],0xc01
  40dadb:	je     0x40da61
  40dadd:	test   r9,r9
  40dae0:	jne    0x40dac0
  40dae2:	mov    DWORD PTR [rdi+0x10],0x0
  40dae9:	jmp    0x40da8b
  40daeb:	mov    rdx,QWORD PTR [rsp+0x40]
  40daf0:	mov    QWORD PTR [rsp+0x20],r9
  40daf5:	mov    r8,r14
  40daf8:	mov    r9,r15
  40dafb:	mov    rcx,r13
  40dafe:	mov    QWORD PTR [rsp+0x58],r10
  40db03:	call   0x409df0
  40db08:	mov    r15d,DWORD PTR [rip+0x15ec1]        # 0x4239d0
  40db0f:	mov    r14,rax
  40db12:	cmp    r15d,0x2
  40db16:	je     0x40d7e3
  40db1c:	lea    rdi,[rax+0x10]
  40db20:	movzx  eax,BYTE PTR [rax+0x10]
  40db24:	mov    r10,QWORD PTR [rsp+0x58]
  40db29:	cmp    al,0x7f
  40db2b:	ja     0x40dd1f
  40db31:	test   DWORD PTR [r10+rax*4],0xc01
  40db39:	je     0x40dd1f
  40db3f:	mov    rax,QWORD PTR [rip+0x2721a]        # 0x434d60
  40db46:	test   rax,rax
  40db49:	je     0x40de06
  40db4f:	mov    r9,rax
  40db52:	movzx  ecx,BYTE PTR [r14+0x11]
  40db57:	lea    rdx,[r14+0x11]
  40db5b:	cmp    BYTE PTR [rax+rcx*1],0x0
  40db5f:	je     0x40db6e
  40db61:	add    rdx,0x1
  40db65:	movzx  ecx,BYTE PTR [rdx]
  40db68:	cmp    BYTE PTR [rax+rcx*1],0x0
  40db6c:	jne    0x40db61
  40db6e:	mov    rcx,rdx
  40db71:	mov    QWORD PTR [rsp+0x60],r9
  40db76:	mov    QWORD PTR [rsp+0x58],rdx
  40db7b:	call   0x421d98
  40db80:	mov    rdx,QWORD PTR [rsp+0x58]
  40db85:	lea    r8,[rax+0x1]
  40db89:	mov    rcx,rdi
  40db8c:	mov    QWORD PTR [rsp+0x40],rax
  40db91:	call   0x421e00
  40db96:	mov    r10,QWORD PTR [rsp+0x40]
  40db9b:	mov    r9,QWORD PTR [rsp+0x60]
  40dba0:	lea    rdx,[rdi+r10*1]
  40dba4:	test   r9,r9
  40dba7:	je     0x40de1c
  40dbad:	cmp    rdi,rdx
  40dbb0:	jb     0x40dbd9
  40dbb2:	mov    rcx,rdi
  40dbb5:	mov    QWORD PTR [rsp+0x40],r9
  40dbba:	call   0x421d98
  40dbbf:	lea    rdx,[rdi+rax*1]
  40dbc3:	mov    r9,QWORD PTR [rsp+0x40]
  40dbc8:	cmp    rdi,rdx
  40dbcb:	jb     0x40dbd9
  40dbcd:	jmp    0x40dbe4
  40dbcf:	nop
  40dbd0:	sub    rdx,0x1
  40dbd4:	cmp    rdi,rdx
  40dbd7:	jae    0x40dbe4
  40dbd9:	movzx  eax,BYTE PTR [rdx-0x1]
  40dbdd:	cmp    BYTE PTR [r9+rax*1],0x0
  40dbe2:	jne    0x40dbd0
  40dbe4:	cmp    r15d,0x1
  40dbe8:	mov    BYTE PTR [rdx],0x0
  40dbeb:	je     0x40d7e3
  40dbf1:	movzx  eax,BYTE PTR [r14+0x10]
  40dbf6:	cmp    al,0x22
  40dbf8:	je     0x40dc02
  40dbfa:	cmp    al,0x27
  40dbfc:	jne    0x40d7e3
  40dc02:	movzx  eax,BYTE PTR [rdx-0x1]
  40dc06:	cmp    al,0x22
  40dc08:	je     0x40dc12
  40dc0a:	cmp    al,0x27
  40dc0c:	jne    0x40d7e3
  40dc12:	xor    edx,edx
  40dc14:	mov    rcx,rdi
  40dc17:	call   0x40cef0
  40dc1c:	jmp    0x40d7e3
  40dc21:	mov    ecx,0xa
  40dc26:	mov    QWORD PTR [rsp+0x40],r8
  40dc2b:	call   0x4097f0
  40dc30:	mov    r8,QWORD PTR [rsp+0x40]
  40dc35:	jmp    0x40d294
  40dc3a:	mov    ecx,0x1c
  40dc3f:	call   0x4097f0
  40dc44:	jmp    0x40d254
  40dc49:	mov    r8,QWORD PTR [rip+0x27110]        # 0x434d60
  40dc50:	test   r8,r8
  40dc53:	mov    rdx,r8
  40dc56:	je     0x40dddb
  40dc5c:	cmp    r15,rbx
  40dc5f:	jb     0x40dcd5
  40dc61:	mov    rcx,r15
  40dc64:	mov    QWORD PTR [rsp+0x68],r10
  40dc69:	mov    QWORD PTR [rsp+0x60],rdx
  40dc6e:	mov    QWORD PTR [rsp+0x58],r8
  40dc73:	call   0x421d98
  40dc78:	lea    r9,[r15+rax*1]
  40dc7c:	mov    r8,QWORD PTR [rsp+0x58]
  40dc81:	mov    rdx,QWORD PTR [rsp+0x60]
  40dc86:	mov    r10,QWORD PTR [rsp+0x68]
  40dc8b:	cmp    r15,r9
  40dc8e:	jb     0x40dc9b
  40dc90:	jmp    0x40dca7
  40dc92:	sub    r9,0x1
  40dc96:	cmp    r15,r9
  40dc99:	jae    0x40dca7
  40dc9b:	movzx  eax,BYTE PTR [r9-0x1]
  40dca0:	cmp    BYTE PTR [r8+rax*1],0x0
  40dca5:	jne    0x40dc92
  40dca7:	mov    rax,rdx
  40dcaa:	jmp    0x40d8db
  40dcaf:	cmp    BYTE PTR [rdi+0x1],0x3e
  40dcb3:	lea    rax,[rdi+0x1]
  40dcb7:	jne    0x40d451
  40dcbd:	mov    DWORD PTR [rsp+0x70],0x0
  40dcc5:	mov    rdi,rax
  40dcc8:	jmp    0x40d7af
  40dccd:	mov    rbx,r14
  40dcd0:	jmp    0x40d5d5
  40dcd5:	mov    r9,rbx
  40dcd8:	jmp    0x40dc9b
  40dcda:	call   QWORD PTR [rip+0x2b2ec]        # 0x438fcc
  40dce0:	mov    DWORD PTR [rax],0x16
  40dce6:	xor    eax,eax
  40dce8:	jmp    0x40d2e9
  40dced:	call   QWORD PTR [rip+0x2b2d9]        # 0x438fcc
  40dcf3:	mov    DWORD PTR [rax],0x2
  40dcf9:	jmp    0x40d2d6
  40dcfe:	mov    rdx,QWORD PTR [rsp+0x40]
  40dd03:	mov    r8,r14
  40dd06:	mov    rcx,rdi
  40dd09:	call   0x40d130
  40dd0e:	test   rax,rax
  40dd11:	mov    r15,rax
  40dd14:	jne    0x40d988
  40dd1a:	jmp    0x40d993
  40dd1f:	mov    rcx,rdi
  40dd22:	call   0x421d98
  40dd27:	mov    r9,QWORD PTR [rip+0x27032]        # 0x434d60
  40dd2e:	lea    rdx,[rdi+rax*1]
  40dd32:	jmp    0x40dba4
  40dd37:	mov    ecx,0x1c
  40dd3c:	mov    QWORD PTR [rsp+0x58],r10
  40dd41:	call   0x4097f0
  40dd46:	mov    r10,QWORD PTR [rsp+0x58]
  40dd4b:	jmp    0x40d413
  40dd50:	mov    ecx,0xa
  40dd55:	mov    QWORD PTR [rsp+0x40],r8
  40dd5a:	call   0x4097f0
  40dd5f:	mov    r8,QWORD PTR [rsp+0x40]
  40dd64:	jmp    0x40d4bb
  40dd69:	mov    eax,0x1
  40dd6e:	mov    DWORD PTR [rdi+0x10],eax
  40dd71:	jmp    0x40da8b
  40dd76:	mov    ecx,0xc
  40dd7b:	mov    QWORD PTR [rsp+0x60],r10
  40dd80:	mov    QWORD PTR [rsp+0x58],r9
  40dd85:	call   0x4097f0
  40dd8a:	mov    r10,QWORD PTR [rsp+0x60]
  40dd8f:	mov    r9,QWORD PTR [rsp+0x58]
  40dd94:	jmp    0x40d8f4
  40dd99:	test   eax,0x8000002
  40dd9e:	sete   al
  40dda1:	movzx  eax,al
  40dda4:	jmp    0x40dd6e
  40dda6:	mov    ecx,0xc
  40ddab:	mov    QWORD PTR [rsp+0x58],r10
  40ddb0:	call   0x4097f0
  40ddb5:	mov    r10,QWORD PTR [rsp+0x58]
  40ddba:	jmp    0x40d844
  40ddbf:	mov    ecx,0xc
  40ddc4:	mov    QWORD PTR [rsp+0x58],r10
  40ddc9:	call   0x4097f0
  40ddce:	movzx  edx,BYTE PTR [rdi]
  40ddd1:	mov    r10,QWORD PTR [rsp+0x58]
  40ddd6:	jmp    0x40d757
  40dddb:	mov    ecx,0xc
  40dde0:	mov    QWORD PTR [rsp+0x58],r10
  40dde5:	call   0x4097f0
  40ddea:	mov    rdx,QWORD PTR [rip+0x26f6f]        # 0x434d60
  40ddf1:	mov    r8,rax
  40ddf4:	mov    r10,QWORD PTR [rsp+0x58]
  40ddf9:	jmp    0x40dc5c
  40ddfe:	mov    r15,rcx
  40de01:	jmp    0x40d5a0
  40de06:	mov    ecx,0xc
  40de0b:	call   0x4097f0
  40de10:	mov    r9,QWORD PTR [rip+0x26f49]        # 0x434d60
  40de17:	jmp    0x40db52
  40de1c:	mov    ecx,0xc
  40de21:	mov    QWORD PTR [rsp+0x40],rdx
  40de26:	call   0x4097f0
  40de2b:	mov    rdx,QWORD PTR [rsp+0x40]
  40de30:	mov    r9,rax
  40de33:	jmp    0x40dbad
  40de38:	mov    r15,rbx
  40de3b:	jmp    0x40d7c4
  40de40:	push   rdi
  40de41:	sub    rsp,0x90
  40de48:	xor    eax,eax
  40de4a:	lea    rdi,[rsp+0x20]
  40de4f:	mov    r9,rcx
  40de52:	mov    ecx,0xd
  40de57:	rep stos QWORD PTR es:[rdi],rax
  40de5a:	mov    eax,edx
  40de5c:	lea    rdx,[rsp+0x20]
  40de61:	mov    QWORD PTR [rsp+0x38],rax
  40de66:	mov    cl,0x3
  40de68:	call   QWORD PTR [r9+0x38]
  40de6c:	mov    rax,QWORD PTR [rsp+0x38]
  40de71:	add    rsp,0x90
  40de78:	pop    rdi
  40de79:	ret    
  40de7a:	nop    WORD PTR [rax+rax*1+0x0]
  40de80:	push   rbx
  40de81:	sub    rsp,0x40
  40de85:	cmp    rcx,0x2
  40de89:	mov    rbx,rdx
  40de8c:	je     0x40dee0
  40de8e:	cmp    rcx,0x3
  40de92:	je     0x40dec0
  40de94:	cmp    rcx,0x1
  40de98:	je     0x40deb0
  40de9a:	xor    eax,eax
  40de9c:	test   BYTE PTR [rdx+0x10],0x8
  40dea0:	je     0x40df40
  40dea6:	add    rsp,0x40
  40deaa:	pop    rbx
  40deab:	ret    
  40deac:	nop    DWORD PTR [rax+0x0]
  40deb0:	call   0x408340
  40deb5:	xor    eax,eax
  40deb7:	add    rsp,0x40
  40debb:	pop    rbx
  40debc:	ret    
  40debd:	nop    DWORD PTR [rax]
  40dec0:	mov    rax,QWORD PTR [rdx+0x18]
  40dec4:	cmp    r9d,eax
  40dec7:	jbe    0x40df30
  40dec9:	mov    eax,eax
  40decb:	mov    rax,QWORD PTR [r8+rax*8]
  40decf:	mov    QWORD PTR [rdx+0x18],rax
  40ded3:	xor    eax,eax
  40ded5:	add    rsp,0x40
  40ded9:	pop    rbx
  40deda:	ret    
  40dedb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dee0:	mov    rbx,QWORD PTR [rdx+0x18]
  40dee4:	cmp    r9d,ebx
  40dee7:	ja     0x40df00
  40dee9:	lea    rcx,[rip+0x1b934]        # 0x429824
  40def0:	mov    edx,ebx
  40def2:	call   0x4082b0
  40def7:	xor    eax,eax
  40def9:	add    rsp,0x40
  40defd:	pop    rbx
  40defe:	ret    
  40deff:	nop
  40df00:	mov    QWORD PTR [rsp+0x38],r8
  40df05:	mov    ebx,ebx
  40df07:	call   QWORD PTR [rip+0x2b06f]        # 0x438f7c
  40df0d:	mov    r8,QWORD PTR [rsp+0x38]
  40df12:	lea    rdx,[rax+0x30]
  40df16:	mov    rcx,QWORD PTR [r8+rbx*8]
  40df1a:	call   0x421e60
  40df1f:	xor    eax,eax
  40df21:	add    rsp,0x40
  40df25:	pop    rbx
  40df26:	ret    
  40df27:	nop    WORD PTR [rax+rax*1+0x0]
  40df30:	lea    rax,[rip+0x1b8f8]        # 0x42982f
  40df37:	jmp    0x40dea6
  40df3c:	nop    DWORD PTR [rax+0x0]
  40df40:	mov    DWORD PTR [rsp+0x20],r9d
  40df45:	mov    r9,r8
  40df48:	mov    r8,rdx
  40df4b:	mov    rdx,rcx
  40df4e:	mov    rcx,QWORD PTR [rbx+0x18]
  40df52:	call   0x408670
  40df57:	test   BYTE PTR [rbx+0x10],0x40
  40df5b:	je     0x40dea6
  40df61:	mov    rcx,QWORD PTR [rbx+0x18]
  40df65:	mov    QWORD PTR [rsp+0x38],rax
  40df6a:	call   0x421e50
  40df6f:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40df73:	mov    QWORD PTR [rbx+0x18],0x0
  40df7b:	mov    rax,QWORD PTR [rsp+0x38]
  40df80:	jmp    0x40dea6
  40df85:	nop
  40df86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df90:	push   rsi
  40df91:	push   rbx
  40df92:	sub    rsp,0x28
  40df96:	mov    rsi,QWORD PTR [rcx+0x18]
  40df9a:	mov    rbx,rcx
  40df9d:	mov    rdx,rcx
  40dfa0:	mov    ecx,0x3
  40dfa5:	call   QWORD PTR [rbx+0x38]
  40dfa8:	mov    rax,QWORD PTR [rbx+0x18]
  40dfac:	mov    QWORD PTR [rbx+0x18],rsi
  40dfb0:	add    rsp,0x28
  40dfb4:	pop    rbx
  40dfb5:	pop    rsi
  40dfb6:	ret    
  40dfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40dfc0:	push   r15
  40dfc2:	push   r14
  40dfc4:	push   r13
  40dfc6:	push   r12
  40dfc8:	push   rbp
  40dfc9:	push   rdi
  40dfca:	push   rsi
  40dfcb:	push   rbx
  40dfcc:	sub    rsp,0xe8
  40dfd3:	cmp    rcx,0x2
  40dfd7:	mov    r13,rcx
  40dfda:	mov    r12,rdx
  40dfdd:	mov    rbx,r8
  40dfe0:	mov    ebp,r9d
  40dfe3:	je     0x40e281
  40dfe9:	cmp    rcx,0x3
  40dfed:	je     0x40e1b0
  40dff3:	cmp    rcx,0x1
  40dff7:	je     0x40e190
  40dffd:	test   BYTE PTR [rdx+0x10],0x8
  40e001:	jne    0x40e19b
  40e007:	mov    rax,QWORD PTR [rip+0x26d52]        # 0x434d60
  40e00e:	mov    r15,QWORD PTR [rdx+0x18]
  40e012:	mov    rsi,QWORD PTR [rdx+0x20]
  40e016:	test   rax,rax
  40e019:	jne    0x40e024
  40e01b:	jmp    0x40e5a0
  40e020:	add    r15,0x1
  40e024:	movzx  ecx,BYTE PTR [r15]
  40e028:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e02c:	jne    0x40e020
  40e02e:	test   cl,cl
  40e030:	je     0x40e370
  40e036:	cmp    cl,0x3d
  40e039:	mov    QWORD PTR [rsp+0x30],rsi
  40e03e:	je     0x40e530
  40e044:	cmp    cl,0x5e
  40e047:	je     0x40e324
  40e04d:	cmp    cl,0x2c
  40e050:	je     0x40e370
  40e056:	mov    BYTE PTR [rsp+0x4f],0x0
  40e05b:	lea    rax,[rsp+0x58]
  40e060:	movzx  edx,BYTE PTR [r15]
  40e064:	mov    QWORD PTR [rsp+0x38],rax
  40e069:	lea    rax,[rsp+0x60]
  40e06e:	mov    QWORD PTR [rsp+0x40],rax
  40e073:	test   dl,dl
  40e075:	je     0x40e4e1
  40e07b:	cmp    dl,0x2c
  40e07e:	je     0x40e420
  40e084:	jg     0x40e400
  40e08a:	cmp    dl,0x21
  40e08d:	je     0x40e470
  40e093:	cmp    dl,0x2b
  40e096:	jne    0x40e40e
  40e09c:	xor    r14d,r14d
  40e09f:	mov    rax,QWORD PTR [rip+0x26cba]        # 0x434d60
  40e0a6:	lea    rsi,[r15+0x1]
  40e0aa:	test   rax,rax
  40e0ad:	je     0x40e517
  40e0b3:	movzx  edx,BYTE PTR [r15+0x1]
  40e0b8:	mov    r15,rsi
  40e0bb:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0bf:	je     0x40e0cf
  40e0c1:	add    r15,0x1
  40e0c5:	movzx  edx,BYTE PTR [r15]
  40e0c9:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0cd:	jne    0x40e0c1
  40e0cf:	mov    rax,QWORD PTR [rip+0x26d7a]        # 0x434e50
  40e0d6:	test   rax,rax
  40e0d9:	je     0x40e4c3
  40e0df:	movzx  edx,BYTE PTR [r15]
  40e0e3:	test   dl,dl
  40e0e5:	je     0x40e4e1
  40e0eb:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e0ef:	jne    0x40e4e1
  40e0f5:	mov    rcx,r15
  40e0f8:	jmp    0x40e106
  40e0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e100:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e104:	jne    0x40e111
  40e106:	add    rcx,0x1
  40e10a:	movzx  edx,BYTE PTR [rcx]
  40e10d:	test   dl,dl
  40e10f:	jne    0x40e100
  40e111:	mov    r11d,ecx
  40e114:	sub    r11d,r15d
  40e117:	test   r11d,r11d
  40e11a:	je     0x40e4e1
  40e120:	cmp    r11d,0x3
  40e124:	je     0x40e490
  40e12a:	cmp    r11d,0x4
  40e12e:	jne    0x40e380
  40e134:	lea    rdi,[rip+0x1b5e0]        # 0x42971b
  40e13b:	mov    ecx,0x4
  40e140:	mov    rsi,r15
  40e143:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e145:	jne    0x40e380
  40e14b:	add    r15,0x4
  40e14f:	test   r14b,r14b
  40e152:	jne    0x40e160
  40e154:	mov    QWORD PTR [rsp+0x30],0x0
  40e15d:	nop    DWORD PTR [rax]
  40e160:	mov    rax,QWORD PTR [rip+0x26bf9]        # 0x434d60
  40e167:	test   rax,rax
  40e16a:	jne    0x40e175
  40e16c:	jmp    0x40e4d2
  40e171:	add    r15,0x1
  40e175:	movzx  ecx,BYTE PTR [r15]
  40e179:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e17d:	mov    rdx,rcx
  40e180:	jne    0x40e171
  40e182:	jmp    0x40e073
  40e187:	nop    WORD PTR [rax+rax*1+0x0]
  40e190:	mov    ecx,0x1
  40e195:	call   0x408340
  40e19a:	nop
  40e19b:	add    rsp,0xe8
  40e1a2:	pop    rbx
  40e1a3:	pop    rsi
  40e1a4:	pop    rdi
  40e1a5:	pop    rbp
  40e1a6:	pop    r12
  40e1a8:	pop    r13
  40e1aa:	pop    r14
  40e1ac:	pop    r15
  40e1ae:	ret    
  40e1af:	nop
  40e1b0:	mov    eax,0x1
  40e1b5:	mov    ecx,r9d
  40e1b8:	shl    eax,cl
  40e1ba:	lea    r13d,[rax-0x1]
  40e1be:	mov    r14,r13
  40e1c1:	and    r14,QWORD PTR [rdx+0x20]
  40e1c5:	je     0x40e526
  40e1cb:	mov    rsi,r8
  40e1ce:	mov    edi,0x1
  40e1d3:	xor    r15d,r15d
  40e1d6:	jmp    0x40e1e9
  40e1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1e0:	add    rsi,0x8
  40e1e4:	shr    r14,1
  40e1e7:	je     0x40e205
  40e1e9:	test   r14b,0x1
  40e1ed:	je     0x40e1fc
  40e1ef:	mov    rcx,QWORD PTR [rsi]
  40e1f2:	call   0x421d98
  40e1f7:	lea    rdi,[rdi+rax*1+0x4]
  40e1fc:	add    r15d,0x1
  40e200:	cmp    ebp,r15d
  40e203:	ja     0x40e1e0
  40e205:	mov    rcx,rdi
  40e208:	mov    rbp,r13
  40e20b:	call   0x409ce0
  40e210:	and    rbp,QWORD PTR [r12+0x20]
  40e215:	mov    r14,rax
  40e218:	mov    QWORD PTR [r12+0x18],rax
  40e21d:	je     0x40e310
  40e223:	xor    r12d,r12d
  40e226:	jmp    0x40e244
  40e228:	nop    DWORD PTR [rax+rax*1+0x0]
  40e230:	mov    edx,0x2b20
  40e235:	lea    r14,[rax+0x3]
  40e239:	mov    BYTE PTR [rax+0x2],0x20
  40e23d:	mov    WORD PTR [rax],dx
  40e240:	add    r12d,0x1
  40e244:	mov    eax,ebp
  40e246:	shr    rbp,1
  40e249:	and    eax,0x1
  40e24c:	test   eax,eax
  40e24e:	je     0x40e240
  40e250:	mov    eax,r12d
  40e253:	mov    r13,QWORD PTR [rbx+rax*8]
  40e257:	mov    rcx,r13
  40e25a:	call   0x421d98
  40e25f:	mov    rdx,r13
  40e262:	mov    r8,rax
  40e265:	mov    rcx,r14
  40e268:	mov    rsi,rax
  40e26b:	call   0x421e08
  40e270:	test   rbp,rbp
  40e273:	lea    rax,[r14+rsi*1]
  40e277:	jne    0x40e230
  40e279:	mov    BYTE PTR [rax],0x0
  40e27c:	jmp    0x40e19b
  40e281:	mov    eax,0x1
  40e286:	mov    ecx,r9d
  40e289:	xor    r13d,r13d
  40e28c:	shl    rax,cl
  40e28f:	xor    edx,edx
  40e291:	mov    rsi,QWORD PTR [rip+0x2ace4]        # 0x438f7c
  40e298:	sub    rax,0x1
  40e29c:	and    rax,QWORD PTR [r12+0x20]
  40e2a1:	mov    r14,rsi
  40e2a4:	mov    r12,rax
  40e2a7:	jne    0x40e2db
  40e2a9:	jmp    0x40e19b
  40e2ae:	xchg   ax,ax
  40e2b0:	call   rdi
  40e2b2:	mov    rcx,QWORD PTR [rbx]
  40e2b5:	lea    rdx,[rax+0x30]
  40e2b9:	call   0x421e60
  40e2be:	mov    rdx,r15
  40e2c1:	add    r13d,0x1
  40e2c5:	cmp    ebp,r13d
  40e2c8:	jbe    0x40e19b
  40e2ce:	add    rbx,0x8
  40e2d2:	shr    r12,1
  40e2d5:	je     0x40e19b
  40e2db:	test   r12b,0x1
  40e2df:	je     0x40e2c1
  40e2e1:	test   rdx,rdx
  40e2e4:	lea    r15,[rdx+0x1]
  40e2e8:	mov    rdi,rsi
  40e2eb:	je     0x40e2b0
  40e2ed:	call   r14
  40e2f0:	lea    rcx,[rip+0x1b5e5]        # 0x4298dc
  40e2f7:	lea    r9,[rax+0x30]
  40e2fb:	mov    r8d,0x3
  40e301:	mov    edx,0x1
  40e306:	mov    rdi,r14
  40e309:	call   0x421e38
  40e30e:	jmp    0x40e2b0
  40e310:	mov    BYTE PTR [rax],0x0
  40e313:	jmp    0x40e19b
  40e318:	mov    r15,rsi
  40e31b:	mov    QWORD PTR [rsp+0x30],0x0
  40e324:	mov    rax,QWORD PTR [rip+0x26a35]        # 0x434d60
  40e32b:	lea    rsi,[r15+0x1]
  40e32f:	test   rax,rax
  40e332:	je     0x40e5af
  40e338:	movzx  ecx,BYTE PTR [r15+0x1]
  40e33d:	mov    r15,rsi
  40e340:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e344:	mov    rdx,rcx
  40e347:	je     0x40e361
  40e349:	nop    DWORD PTR [rax+0x0]
  40e350:	add    r15,0x1
  40e354:	movzx  ecx,BYTE PTR [r15]
  40e358:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e35c:	mov    rdx,rcx
  40e35f:	jne    0x40e350
  40e361:	cmp    dl,0x2c
  40e364:	mov    BYTE PTR [rsp+0x4f],0x1
  40e369:	jne    0x40e05b
  40e36f:	nop
  40e370:	mov    QWORD PTR [r12+0x20],0x0
  40e379:	jmp    0x40e19b
  40e37e:	xchg   ax,ax
  40e380:	mov    rdx,QWORD PTR [rsp+0x38]
  40e385:	xor    r8d,r8d
  40e388:	mov    rcx,r15
  40e38b:	mov    DWORD PTR [rsp+0x48],r11d
  40e390:	call   0x421d60
  40e395:	movsxd rdi,DWORD PTR [rsp+0x48]
  40e39a:	mov    rdx,QWORD PTR [rsp+0x58]
  40e39f:	mov    eax,eax
  40e3a1:	lea    rsi,[r15+rdi*1]
  40e3a5:	cmp    rsi,rdx
  40e3a8:	je     0x40e3e7
  40e3aa:	mov    r15,QWORD PTR [rsp+0x40]
  40e3af:	mov    r8,rdi
  40e3b2:	mov    rcx,r15
  40e3b5:	call   0x421e08
  40e3ba:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  40e3bf:	mov    r9,rbx
  40e3c2:	mov    DWORD PTR [rsp+0x20],ebp
  40e3c6:	mov    r8,r12
  40e3c9:	mov    rdx,r13
  40e3cc:	mov    rcx,r15
  40e3cf:	call   0x408670
  40e3d4:	cmp    ebp,eax
  40e3d6:	jbe    0x40e370
  40e3d8:	mov    ecx,eax
  40e3da:	mov    edx,0x1
  40e3df:	shl    edx,cl
  40e3e1:	test   edx,edx
  40e3e3:	mov    eax,edx
  40e3e5:	je     0x40e370
  40e3e7:	test   r14b,r14b
  40e3ea:	je     0x40e480
  40e3f0:	not    rax
  40e3f3:	and    QWORD PTR [rsp+0x30],rax
  40e3f8:	mov    r15,rsi
  40e3fb:	jmp    0x40e160
  40e400:	cmp    dl,0x2d
  40e403:	je     0x40e470
  40e405:	cmp    dl,0x7c
  40e408:	je     0x40e09c
  40e40e:	xor    r14d,r14d
  40e411:	jmp    0x40e0cf
  40e416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e420:	mov    rax,QWORD PTR [rip+0x26939]        # 0x434d60
  40e427:	lea    rsi,[r15+0x1]
  40e42b:	test   rax,rax
  40e42e:	je     0x40e591
  40e434:	movzx  ecx,BYTE PTR [r15+0x1]
  40e439:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e43d:	mov    rdx,rcx
  40e440:	je     0x40e452
  40e442:	add    rsi,0x1
  40e446:	movzx  ecx,BYTE PTR [rsi]
  40e449:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e44d:	mov    rdx,rcx
  40e450:	jne    0x40e442
  40e452:	cmp    dl,0x7c
  40e455:	je     0x40e370
  40e45b:	cmp    dl,0x2c
  40e45e:	je     0x40e370
  40e464:	movzx  edx,BYTE PTR [rsi]
  40e467:	mov    r15,rsi
  40e46a:	jmp    0x40e073
  40e46f:	nop
  40e470:	mov    r14d,0x1
  40e476:	jmp    0x40e09f
  40e47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e480:	or     QWORD PTR [rsp+0x30],rax
  40e485:	jmp    0x40e3f8
  40e48a:	nop    WORD PTR [rax+rax*1+0x0]
  40e490:	lea    rdi,[rip+0x1b32a]        # 0x4297c1
  40e497:	mov    ecx,0x3
  40e49c:	mov    rsi,r15
  40e49f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e4a1:	jne    0x40e380
  40e4a7:	add    r15,0x3
  40e4ab:	test   r14b,r14b
  40e4ae:	jne    0x40e154
  40e4b4:	mov    eax,0xffffffff
  40e4b9:	mov    QWORD PTR [rsp+0x30],rax
  40e4be:	jmp    0x40e160
  40e4c3:	mov    ecx,0x2a
  40e4c8:	call   0x4097f0
  40e4cd:	jmp    0x40e0df
  40e4d2:	mov    ecx,0xc
  40e4d7:	call   0x4097f0
  40e4dc:	jmp    0x40e175
  40e4e1:	cmp    BYTE PTR [rsp+0x4f],0x0
  40e4e6:	je     0x40e4f2
  40e4e8:	mov    eax,0xffffffff
  40e4ed:	xor    QWORD PTR [rsp+0x30],rax
  40e4f2:	cmp    ebp,0x3f
  40e4f5:	ja     0x40e508
  40e4f7:	mov    eax,0x1
  40e4fc:	mov    ecx,ebp
  40e4fe:	shl    eax,cl
  40e500:	sub    eax,0x1
  40e503:	and    QWORD PTR [rsp+0x30],rax
  40e508:	mov    rax,QWORD PTR [rsp+0x30]
  40e50d:	mov    QWORD PTR [r12+0x20],rax
  40e512:	jmp    0x40e19b
  40e517:	mov    ecx,0xc
  40e51c:	call   0x4097f0
  40e521:	jmp    0x40e0b3
  40e526:	mov    edi,0x1
  40e52b:	jmp    0x40e205
  40e530:	mov    rax,QWORD PTR [rip+0x26829]        # 0x434d60
  40e537:	lea    rsi,[r15+0x1]
  40e53b:	test   rax,rax
  40e53e:	je     0x40e5be
  40e540:	movzx  ecx,BYTE PTR [r15+0x1]
  40e545:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e549:	mov    rdx,rcx
  40e54c:	je     0x40e560
  40e54e:	xchg   ax,ax
  40e550:	add    rsi,0x1
  40e554:	movzx  ecx,BYTE PTR [rsi]
  40e557:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e55b:	mov    rdx,rcx
  40e55e:	jne    0x40e550
  40e560:	cmp    dl,0x3d
  40e563:	je     0x40e370
  40e569:	cmp    dl,0x5e
  40e56c:	je     0x40e318
  40e572:	cmp    dl,0x2c
  40e575:	je     0x40e370
  40e57b:	mov    r15,rsi
  40e57e:	mov    BYTE PTR [rsp+0x4f],0x0
  40e583:	mov    QWORD PTR [rsp+0x30],0x0
  40e58c:	jmp    0x40e05b
  40e591:	mov    ecx,0xc
  40e596:	call   0x4097f0
  40e59b:	jmp    0x40e434
  40e5a0:	mov    ecx,0xc
  40e5a5:	call   0x4097f0
  40e5aa:	jmp    0x40e024
  40e5af:	mov    ecx,0xc
  40e5b4:	call   0x4097f0
  40e5b9:	jmp    0x40e338
  40e5be:	mov    ecx,0xc
  40e5c3:	call   0x4097f0
  40e5c8:	jmp    0x40e540
  40e5cd:	nop    DWORD PTR [rax]
  40e5d0:	push   r15
  40e5d2:	push   r14
  40e5d4:	push   r13
  40e5d6:	push   r12
  40e5d8:	push   rbp
  40e5d9:	push   rdi
  40e5da:	push   rsi
  40e5db:	push   rbx
  40e5dc:	sub    rsp,0x68
  40e5e0:	cmp    rcx,0xf
  40e5e4:	mov    rsi,rcx
  40e5e7:	mov    rbx,rdx
  40e5ea:	mov    edi,r8d
  40e5ed:	mov    rbp,r9
  40e5f0:	ja     0x40e610
  40e5f2:	cmp    rcx,0x1
  40e5f6:	je     0x40e720
  40e5fc:	add    rsp,0x68
  40e600:	pop    rbx
  40e601:	pop    rsi
  40e602:	pop    rdi
  40e603:	pop    rbp
  40e604:	pop    r12
  40e606:	pop    r13
  40e608:	pop    r14
  40e60a:	pop    r15
  40e60c:	ret    
  40e60d:	nop    DWORD PTR [rax]
  40e610:	test   BYTE PTR [rdx+0x10],0x8
  40e614:	je     0x40e630
  40e616:	mov    rcx,QWORD PTR [rdx+0x20]
  40e61a:	test   rcx,rcx
  40e61d:	je     0x40e5fc
  40e61f:	call   0x421e50
  40e624:	jmp    0x40e5fc
  40e626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e630:	mov    r13,QWORD PTR [rdx+0x18]
  40e634:	mov    r14,QWORD PTR [rip+0x2a991]        # 0x438fcc
  40e63b:	call   r14
  40e63e:	mov    DWORD PTR [rax],0x0
  40e644:	mov    eax,edi
  40e646:	and    eax,0x3
  40e649:	cmp    eax,0x1
  40e64c:	je     0x40e795
  40e652:	cmp    eax,0x2
  40e655:	je     0x40e753
  40e65b:	mov    edx,0x5c
  40e660:	mov    rcx,r13
  40e663:	call   0x421d78
  40e668:	test   rax,rax
  40e66b:	je     0x40e6cc
  40e66d:	sub    rax,r13
  40e670:	lea    rcx,[rax+0x1]
  40e674:	mov    r12,rax
  40e677:	call   0x409ce0
  40e67c:	mov    r8,r12
  40e67f:	mov    r15,rax
  40e682:	mov    rdx,r13
  40e685:	mov    rcx,rax
  40e688:	call   0x421e08
  40e68d:	mov    BYTE PTR [r15+r12*1],0x0
  40e692:	lea    rdx,[rsp+0x20]
  40e697:	mov    rcx,r15
  40e69a:	call   QWORD PTR [rip+0x2ab54]        # 0x4391f4
  40e6a0:	test   eax,eax
  40e6a2:	jne    0x40e856
  40e6a8:	call   r14
  40e6ab:	mov    DWORD PTR [rax],0x16
  40e6b1:	movzx  eax,WORD PTR [rsp+0x26]
  40e6b6:	and    ax,0xf000
  40e6ba:	cmp    ax,0x4000
  40e6be:	jne    0x40e856
  40e6c4:	mov    rcx,r15
  40e6c7:	call   0x421e50
  40e6cc:	and    edi,0x30
  40e6cf:	cmp    edi,0x10
  40e6d2:	je     0x40e7c5
  40e6d8:	cmp    edi,0x20
  40e6db:	jne    0x40e5fc
  40e6e1:	mov    rcx,QWORD PTR [rbx+0x18]
  40e6e5:	mov    rdx,rbp
  40e6e8:	call   0x421e78
  40e6ed:	test   rax,rax
  40e6f0:	mov    rdi,rax
  40e6f3:	je     0x40e869
  40e6f9:	mov    edx,DWORD PTR [rbx+0x10]
  40e6fc:	test   dl,0x40
  40e6ff:	je     0x40e812
  40e705:	mov    rax,QWORD PTR [rbx+0x18]
  40e709:	mov    QWORD PTR [rbx+0x20],rax
  40e70d:	and    edx,0xffffffbf
  40e710:	mov    QWORD PTR [rbx+0x18],rdi
  40e714:	mov    DWORD PTR [rbx+0x10],edx
  40e717:	jmp    0x40e5fc
  40e71c:	nop    DWORD PTR [rax+0x0]
  40e720:	and    edi,0x3
  40e723:	cmp    edi,0x1
  40e726:	je     0x40e7f4
  40e72c:	cmp    edi,0x2
  40e72f:	jne    0x40e5fc
  40e735:	mov    ecx,DWORD PTR [rip+0x264b5]        # 0x434bf0
  40e73b:	mov    rdx,QWORD PTR [rip+0x26486]        # 0x434bc8
  40e742:	add    rcx,QWORD PTR [rip+0x154e7]        # 0x423c30
  40e749:	call   0x421e60
  40e74e:	jmp    0x40e5fc
  40e753:	lea    rdx,[rsp+0x20]
  40e758:	mov    rcx,r13
  40e75b:	call   QWORD PTR [rip+0x2aa93]        # 0x4391f4
  40e761:	test   eax,eax
  40e763:	je     0x40e771
  40e765:	call   r14
  40e768:	cmp    DWORD PTR [rax],0x2
  40e76b:	je     0x40e65b
  40e771:	call   r14
  40e774:	cmp    DWORD PTR [rax],0x0
  40e777:	jne    0x40e782
  40e779:	call   r14
  40e77c:	mov    DWORD PTR [rax],0x16
  40e782:	mov    rcx,QWORD PTR [rsi+0x28]
  40e786:	lea    rdx,[rip+0x19f43]        # 0x4286d0
  40e78d:	mov    r8,r13
  40e790:	call   0x408860
  40e795:	lea    rdx,[rsp+0x20]
  40e79a:	mov    rcx,r13
  40e79d:	call   QWORD PTR [rip+0x2aa51]        # 0x4391f4
  40e7a3:	test   eax,eax
  40e7a5:	jne    0x40e782
  40e7a7:	call   r14
  40e7aa:	mov    DWORD PTR [rax],0x16
  40e7b0:	movzx  eax,WORD PTR [rsp+0x26]
  40e7b5:	and    ax,0xf000
  40e7b9:	cmp    ax,0x8000
  40e7bd:	je     0x40e6cc
  40e7c3:	jmp    0x40e782
  40e7c5:	mov    rcx,QWORD PTR [rbx+0x18]
  40e7c9:	mov    edx,ebp
  40e7cb:	call   0x421cf8
  40e7d0:	test   eax,eax
  40e7d2:	mov    edi,eax
  40e7d4:	js     0x40e842
  40e7d6:	mov    edx,DWORD PTR [rbx+0x10]
  40e7d9:	test   dl,0x40
  40e7dc:	je     0x40e830
  40e7de:	mov    rax,QWORD PTR [rbx+0x18]
  40e7e2:	mov    QWORD PTR [rbx+0x20],rax
  40e7e6:	and    edx,0xffffffbf
  40e7e9:	mov    DWORD PTR [rbx+0x18],edi
  40e7ec:	mov    DWORD PTR [rbx+0x10],edx
  40e7ef:	jmp    0x40e5fc
  40e7f4:	mov    ecx,DWORD PTR [rip+0x263f6]        # 0x434bf0
  40e7fa:	mov    rdx,QWORD PTR [rip+0x263c7]        # 0x434bc8
  40e801:	add    rcx,QWORD PTR [rip+0x15430]        # 0x423c38
  40e808:	call   0x421e60
  40e80d:	jmp    0x40e5fc
  40e812:	mov    rcx,QWORD PTR [rbx+0x18]
  40e816:	call   0x409a50
  40e81b:	mov    edx,DWORD PTR [rbx+0x10]
  40e81e:	mov    QWORD PTR [rbx+0x20],rax
  40e822:	jmp    0x40e70d
  40e827:	nop    WORD PTR [rax+rax*1+0x0]
  40e830:	mov    rcx,QWORD PTR [rbx+0x18]
  40e834:	call   0x409a50
  40e839:	mov    edx,DWORD PTR [rbx+0x10]
  40e83c:	mov    QWORD PTR [rbx+0x20],rax
  40e840:	jmp    0x40e7e6
  40e842:	mov    rcx,QWORD PTR [rsi+0x28]
  40e846:	mov    r8,QWORD PTR [rbx+0x18]
  40e84a:	lea    rdx,[rip+0x19e84]        # 0x4286d5
  40e851:	call   0x408860
  40e856:	mov    rcx,QWORD PTR [rsi+0x28]
  40e85a:	lea    rdx,[rip+0x19e6f]        # 0x4286d0
  40e861:	mov    r8,r15
  40e864:	call   0x408860
  40e869:	mov    rcx,QWORD PTR [rsi+0x28]
  40e86d:	mov    r8,QWORD PTR [rbx+0x18]
  40e871:	lea    rdx,[rip+0x19e62]        # 0x4286da
  40e878:	call   0x408860
  40e87d:	nop
  40e87e:	xchg   ax,ax
  40e880:	push   r15
  40e882:	push   r14
  40e884:	push   r13
  40e886:	push   r12
  40e888:	push   rbp
  40e889:	push   rdi
  40e88a:	push   rsi
  40e88b:	push   rbx
  40e88c:	sub    rsp,0x38
  40e890:	mov    edi,edx
  40e892:	mov    rbp,rcx
  40e895:	mov    rcx,r8
  40e898:	mov    rbx,r8
  40e89b:	mov    r12,r9
  40e89e:	call   0x421d98
  40e8a3:	movsxd rdx,edi
  40e8a6:	cmp    rax,rdx
  40e8a9:	setae  sil
  40e8ad:	test   rax,rax
  40e8b0:	sete   al
  40e8b3:	or     sil,al
  40e8b6:	jne    0x40e8f5
  40e8b8:	movzx  r10d,BYTE PTR [rbx]
  40e8bc:	cmp    r10b,0x24
  40e8c0:	je     0x40e910
  40e8c2:	mov    r9d,r10d
  40e8c5:	xor    eax,eax
  40e8c7:	jmp    0x40e8e4
  40e8c9:	nop    DWORD PTR [rax+0x0]
  40e8d0:	add    rax,0x1
  40e8d4:	mov    r8d,edi
  40e8d7:	sub    r8d,eax
  40e8da:	test   r8d,r8d
  40e8dd:	jle    0x40e8f5
  40e8df:	movzx  r9d,BYTE PTR [rbx+rax*1]
  40e8e4:	test   r9b,r9b
  40e8e7:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40e8ec:	jne    0x40e8d0
  40e8ee:	mov    esi,0x1
  40e8f3:	jmp    0x40e8f7
  40e8f5:	xor    esi,esi
  40e8f7:	mov    eax,esi
  40e8f9:	add    rsp,0x38
  40e8fd:	pop    rbx
  40e8fe:	pop    rsi
  40e8ff:	pop    rdi
  40e900:	pop    rbp
  40e901:	pop    r12
  40e903:	pop    r13
  40e905:	pop    r14
  40e907:	pop    r15
  40e909:	ret    
  40e90a:	nop    WORD PTR [rax+rax*1+0x0]
  40e910:	movzx  eax,BYTE PTR [rbx+0x1]
  40e914:	cmp    al,0x24
  40e916:	je     0x40ea0e
  40e91c:	cmp    al,0x40
  40e91e:	je     0x40e9da
  40e924:	test   al,al
  40e926:	je     0x40e8f7
  40e928:	cmp    al,0x7f
  40e92a:	ja     0x40e8f7
  40e92c:	lea    rcx,[rip+0x1d98d]        # 0x42c2c0
  40e933:	movzx  edx,al
  40e936:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40e93d:	je     0x40e8f7
  40e93f:	add    rbx,0x1
  40e943:	mov    r8,rbp
  40e946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e950:	add    r8,0x1
  40e954:	add    rbx,0x1
  40e958:	mov    BYTE PTR [r8-0x1],al
  40e95c:	movzx  eax,BYTE PTR [rbx]
  40e95f:	cmp    al,0x7f
  40e961:	ja     0x40e96f
  40e963:	movzx  edx,al
  40e966:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40e96d:	jne    0x40e950
  40e96f:	cmp    r8,rbp
  40e972:	je     0x40e8f7
  40e974:	mov    BYTE PTR [r8],0x0
  40e978:	mov    rcx,rbp
  40e97b:	call   0x421e30
  40e980:	test   rax,rax
  40e983:	mov    r14,rax
  40e986:	je     0x40e8f7
  40e98c:	mov    rcx,rax
  40e98f:	mov    edi,edi
  40e991:	call   0x421d98
  40e996:	mov    rcx,rbx
  40e999:	mov    r13,rax
  40e99c:	call   0x421d98
  40e9a1:	lea    r12,[rax+0x1]
  40e9a5:	lea    rax,[r12+r13*1]
  40e9a9:	cmp    rax,rdi
  40e9ac:	jae    0x40e8f7
  40e9b2:	mov    r8,r13
  40e9b5:	mov    rdx,r14
  40e9b8:	mov    rcx,rbp
  40e9bb:	call   0x421e08
  40e9c0:	lea    rcx,[rbp+r13*1+0x0]
  40e9c5:	mov    r8,r12
  40e9c8:	mov    rdx,rbx
  40e9cb:	mov    esi,0x1
  40e9d0:	call   0x421e08
  40e9d5:	jmp    0x40e8f7
  40e9da:	mov    r9,QWORD PTR [rip+0x14fe7]        # 0x4239c8
  40e9e1:	cmp    BYTE PTR [r9],0x0
  40e9e5:	je     0x40e8f5
  40e9eb:	add    rbx,0x2
  40e9ef:	lea    r8,[rip+0x19965]        # 0x42835b
  40e9f6:	mov    rcx,rbp
  40e9f9:	mov    QWORD PTR [rsp+0x20],rbx
  40e9fe:	call   0x408290
  40ea03:	cmp    edi,eax
  40ea05:	setg   sil
  40ea09:	jmp    0x40e8f7
  40ea0e:	movzx  eax,BYTE PTR [rbx+0x2]
  40ea12:	test   al,al
  40ea14:	je     0x40eab6
  40ea1a:	cmp    al,0x5c
  40ea1c:	mov    r15d,0x3
  40ea22:	jne    0x40e8f7
  40ea28:	mov    edx,0x5c
  40ea2d:	mov    rcx,r12
  40ea30:	mov    r14,r12
  40ea33:	call   0x421dc0
  40ea38:	test   rax,rax
  40ea3b:	je     0x40eac1
  40ea41:	mov    edx,0x5c
  40ea46:	mov    rcx,r14
  40ea49:	call   0x421d78
  40ea4e:	test   rax,rax
  40ea51:	mov    r13,rax
  40ea54:	je     0x40e8f7
  40ea5a:	movsxd rax,r15d
  40ea5d:	sub    r13,r14
  40ea60:	mov    edi,edi
  40ea62:	add    rbx,rax
  40ea65:	add    r13,0x1
  40ea69:	mov    rcx,rbx
  40ea6c:	call   0x421d98
  40ea71:	lea    r15,[rax+0x1]
  40ea75:	lea    rax,[r15+r13*1]
  40ea79:	cmp    rax,rdi
  40ea7c:	ja     0x40e8f7
  40ea82:	mov    r8,r13
  40ea85:	mov    rdx,r14
  40ea88:	mov    rcx,rbp
  40ea8b:	call   0x421e08
  40ea90:	lea    rcx,[rbp+r13*1+0x0]
  40ea95:	mov    r8,r15
  40ea98:	mov    rdx,rbx
  40ea9b:	call   0x421e08
  40eaa0:	cmp    r12,r14
  40eaa3:	je     0x40e8ee
  40eaa9:	mov    rcx,r14
  40eaac:	call   0x421e50
  40eab1:	jmp    0x40e8ee
  40eab6:	mov    r15d,0x2
  40eabc:	jmp    0x40ea28
  40eac1:	lea    rcx,[rip+0x1985a]        # 0x428322
  40eac8:	call   0x421e30
  40eacd:	mov    rdx,r12
  40ead0:	mov    rcx,rax
  40ead3:	call   0x40ac50
  40ead8:	test   rax,rax
  40eadb:	mov    r14,rax
  40eade:	jne    0x40ea41
  40eae4:	jmp    0x40e8f7
  40eae9:	nop    DWORD PTR [rax+0x0]
  40eaf0:	push   r15
  40eaf2:	push   r14
  40eaf4:	push   r13
  40eaf6:	push   r12
  40eaf8:	push   rbp
  40eaf9:	push   rdi
  40eafa:	push   rsi
  40eafb:	push   rbx
  40eafc:	sub    rsp,0x178
  40eb03:	mov    rbx,rcx
  40eb06:	mov    r12,rdx
  40eb09:	mov    rcx,QWORD PTR [rip+0x151b0]        # 0x423cc0
  40eb10:	mov    rdx,QWORD PTR [rip+0x260b1]        # 0x434bc8
  40eb17:	mov    r13,r8
  40eb1a:	lea    rsi,[rbx+0x8]
  40eb1e:	lea    rbp,[rsp+0x60]
  40eb23:	call   0x421e60
  40eb28:	mov    rbx,QWORD PTR [rbx]
  40eb2b:	test   rbx,rbx
  40eb2e:	je     0x40ec00
  40eb34:	lea    r15,[rsp+0x20]
  40eb39:	mov    r14,QWORD PTR [rip+0x2a6b4]        # 0x4391f4
  40eb40:	jmp    0x40eb64
  40eb42:	mov    rdx,QWORD PTR [rip+0x2607f]        # 0x434bc8
  40eb49:	add    rsi,0x8
  40eb4d:	mov    ecx,0xa
  40eb52:	call   0x421e68
  40eb57:	mov    rbx,QWORD PTR [rsi-0x8]
  40eb5b:	test   rbx,rbx
  40eb5e:	je     0x40ec00
  40eb64:	mov    r9,r13
  40eb67:	mov    r8,rbx
  40eb6a:	mov    edx,0x105
  40eb6f:	mov    rcx,rbp
  40eb72:	mov    rdi,rbx
  40eb75:	call   0x40e880
  40eb7a:	test   al,al
  40eb7c:	je     0x40eb86
  40eb7e:	cmp    BYTE PTR [rbx],0x24
  40eb81:	mov    rdi,rbp
  40eb84:	je     0x40ebe4
  40eb86:	mov    rdx,QWORD PTR [rip+0x1511b]        # 0x423ca8
  40eb8d:	mov    rcx,QWORD PTR [rip+0x26034]        # 0x434bc8
  40eb94:	mov    r8,rbx
  40eb97:	call   0x407ea0
  40eb9c:	cmp    BYTE PTR [r12],0x0
  40eba1:	je     0x40eb42
  40eba3:	mov    rdx,r15
  40eba6:	mov    rcx,rdi
  40eba9:	call   r14
  40ebac:	test   eax,eax
  40ebae:	jne    0x40eb42
  40ebb0:	movzx  eax,WORD PTR [rsp+0x26]
  40ebb5:	and    ax,0xf000
  40ebb9:	cmp    ax,0x4000
  40ebbd:	jne    0x40eb42
  40ebbf:	mov    rdx,QWORD PTR [rip+0x26002]        # 0x434bc8
  40ebc6:	mov    ecx,0x5c
  40ebcb:	call   0x421e68
  40ebd0:	mov    rdx,QWORD PTR [rip+0x25ff1]        # 0x434bc8
  40ebd7:	mov    rcx,r12
  40ebda:	call   0x421e60
  40ebdf:	jmp    0x40eb42
  40ebe4:	movzx  eax,BYTE PTR [rbx+0x1]
  40ebe8:	cmp    al,0x40
  40ebea:	je     0x40ebf0
  40ebec:	cmp    al,0x24
  40ebee:	jne    0x40eb86
  40ebf0:	mov    rdi,rbp
  40ebf3:	mov    rbx,rbp
  40ebf6:	jmp    0x40eb86
  40ebf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ec00:	add    rsp,0x178
  40ec07:	pop    rbx
  40ec08:	pop    rsi
  40ec09:	pop    rdi
  40ec0a:	pop    rbp
  40ec0b:	pop    r12
  40ec0d:	pop    r13
  40ec0f:	pop    r14
  40ec11:	pop    r15
  40ec13:	ret    
  40ec14:	xchg   ax,ax
  40ec16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec20:	push   r15
  40ec22:	push   r14
  40ec24:	push   r13
  40ec26:	push   r12
  40ec28:	push   rbp
  40ec29:	push   rdi
  40ec2a:	push   rsi
  40ec2b:	push   rbx
  40ec2c:	sub    rsp,0xc8
  40ec33:	mov    rax,QWORD PTR [rip+0x14afe]        # 0x423738
  40ec3a:	mov    rsi,rcx
  40ec3d:	mov    edx,DWORD PTR [rax+0x78]
  40ec40:	test   dl,0xf
  40ec43:	je     0x40f000
  40ec49:	mov    rdx,QWORD PTR [rax+0x80]
  40ec50:	mov    QWORD PTR [rip+0x25fb9],rdx        # 0x434c10
  40ec57:	test   BYTE PTR [rax+0x10],0xf
  40ec5b:	mov    r12,QWORD PTR [rip+0x2a31a]        # 0x438f7c
  40ec62:	jne    0x40f025
  40ec68:	cmp    QWORD PTR [rip+0x25f98],0x0        # 0x434c08
  40ec70:	je     0x40ec85
  40ec72:	call   r12
  40ec75:	mov    rcx,QWORD PTR [rip+0x25f8c]        # 0x434c08
  40ec7c:	lea    rdx,[rax+0x30]
  40ec80:	call   0x421e60
  40ec85:	lea    rdi,[rsp+0x40]
  40ec8a:	xor    ecx,ecx
  40ec8c:	call   QWORD PTR [rip+0x2a3c2]        # 0x439054
  40ec92:	lea    rcx,[rsp+0x38]
  40ec97:	mov    QWORD PTR [rsp+0x38],rax
  40ec9c:	call   QWORD PTR [rip+0x2a37a]        # 0x43901c
  40eca2:	lea    r8,[rip+0x1acb8]        # 0x429961
  40eca9:	mov    r9,rax
  40ecac:	mov    edx,0x80
  40ecb1:	mov    rcx,rdi
  40ecb4:	call   0x421da0
  40ecb9:	mov    rax,QWORD PTR [rip+0x14a78]        # 0x423738
  40ecc0:	lea    r8,[rip+0x1ac93]        # 0x42995a
  40ecc7:	test   BYTE PTR [rax+0x10],0xf
  40eccb:	je     0x40ecd1
  40eccd:	mov    r8,QWORD PTR [rax+0x18]
  40ecd1:	cmp    QWORD PTR [rip+0x25f2f],0x0        # 0x434c08
  40ecd9:	je     0x40f404
  40ecdf:	lea    rdx,[rip+0x1c304]        # 0x42afea
  40ece6:	lea    rcx,[rip+0x1c0b3]        # 0x42ada0
  40eced:	mov    r9,rdi
  40ecf0:	xor    ebx,ebx
  40ecf2:	call   0x4082b0
  40ecf7:	mov    rdx,QWORD PTR [rsi+0x30]
  40ecfb:	lea    rcx,[rip+0x1ad6f]        # 0x429a71
  40ed02:	call   0x4082b0
  40ed07:	mov    rbp,QWORD PTR [rsi+0x30]
  40ed0b:	mov    r13,QWORD PTR [rip+0x2a4b2]        # 0x4391c4
  40ed12:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  40ed17:	call   r13
  40ed1a:	mov    BYTE PTR [rdi+rbx*1],al
  40ed1d:	add    rbx,0x1
  40ed21:	test   al,al
  40ed23:	jne    0x40ed12
  40ed25:	lea    r8,[rip+0x19b77]        # 0x4288a3
  40ed2c:	lea    rcx,[rip+0x1ae26]        # 0x429b59
  40ed33:	mov    rdx,rbp
  40ed36:	mov    QWORD PTR [rsi+0x20],rdi
  40ed3a:	mov    QWORD PTR [rsi+0x28],rdi
  40ed3e:	call   0x4082b0
  40ed43:	mov    rdx,QWORD PTR [rsi+0x30]
  40ed47:	lea    r8,[rip+0x19b5f]        # 0x4288ad
  40ed4e:	lea    rcx,[rip+0x1ae04]        # 0x429b59
  40ed55:	call   0x4082b0
  40ed5a:	mov    rbx,QWORD PTR [rsi+0x78]
  40ed5e:	lea    rdx,[rip+0x2dfb]        # 0x411b60
  40ed65:	mov    eax,DWORD PTR [rsi+0xb0]
  40ed6b:	cmp    QWORD PTR [rbx+0x38],rdx
  40ed6f:	je     0x40ed9f
  40ed71:	cmp    eax,0x1
  40ed74:	jle    0x40edba
  40ed76:	sub    eax,0x2
  40ed79:	add    rax,0x1
  40ed7d:	lea    rcx,[rax+rax*2]
  40ed81:	lea    rax,[rax+rcx*4]
  40ed85:	lea    rcx,[rbx+rax*8]
  40ed89:	mov    rax,rbx
  40ed8c:	jmp    0x40ed95
  40ed8e:	xchg   ax,ax
  40ed90:	cmp    rax,rcx
  40ed93:	je     0x40edba
  40ed95:	add    rax,0x68
  40ed99:	cmp    QWORD PTR [rax+0x38],rdx
  40ed9d:	jne    0x40ed90
  40ed9f:	mov    rdx,QWORD PTR [rsi+0x30]
  40eda3:	lea    r8,[rip+0x19b09]        # 0x4288b3
  40edaa:	lea    rcx,[rip+0x1ada8]        # 0x429b59
  40edb1:	call   0x4082b0
  40edb6:	mov    rbx,QWORD PTR [rsi+0x78]
  40edba:	mov    eax,DWORD PTR [rsi+0xb4]
  40edc0:	test   eax,eax
  40edc2:	jle    0x40ee90
  40edc8:	sub    eax,0x1
  40edcb:	lea    r14,[rip+0x1b7fa]        # 0x42a5cc
  40edd2:	lea    r13,[rip+0x1c18e]        # 0x42af67
  40edd9:	add    rax,0x1
  40eddd:	lea    rdx,[rax+rax*2]
  40ede1:	lea    rax,[rax+rdx*4]
  40ede5:	lea    rbp,[rbx+rax*8]
  40ede9:	jmp    0x40ee36
  40edeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40edf0:	cmp    eax,0x4
  40edf3:	je     0x40eff0
  40edf9:	cmp    eax,0x5
  40edfc:	jne    0x40efd0
  40ee02:	mov    r9d,DWORD PTR [rbx+0x18]
  40ee06:	lea    r8,[rip+0x19477]        # 0x428284
  40ee0d:	mov    edx,0x20
  40ee12:	mov    rcx,rdi
  40ee15:	call   0x408290
  40ee1a:	mov    r8,QWORD PTR [rbx+0x48]
  40ee1e:	mov    r9,rdi
  40ee21:	mov    rdx,QWORD PTR [rsi+0x30]
  40ee25:	mov    rcx,r15
  40ee28:	call   0x4082b0
  40ee2d:	add    rbx,0x68
  40ee31:	cmp    rbx,rbp
  40ee34:	je     0x40ee90
  40ee36:	mov    eax,DWORD PTR [rbx+0x10]
  40ee39:	test   eax,0x280000
  40ee3e:	jne    0x40ee2d
  40ee40:	mov    r8,QWORD PTR [rbx+0x48]
  40ee44:	test   r8,r8
  40ee47:	je     0x40ee2d
  40ee49:	cmp    WORD PTR [rbx+0xc],0x1
  40ee4e:	mov    r15,r13
  40ee51:	cmova  r15,r14
  40ee55:	and    eax,0xf000
  40ee5a:	shr    eax,0xc
  40ee5d:	cmp    eax,0x3
  40ee60:	je     0x40efb0
  40ee66:	ja     0x40edf0
  40ee68:	cmp    eax,0x2
  40ee6b:	jne    0x40efd0
  40ee71:	mov    rdx,rbx
  40ee74:	mov    ecx,0x2
  40ee79:	call   QWORD PTR [rbx+0x38]
  40ee7c:	mov    r9,QWORD PTR [rbx+0x18]
  40ee80:	mov    r8,QWORD PTR [rbx+0x48]
  40ee84:	jmp    0x40ee21
  40ee86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee90:	mov    eax,DWORD PTR [rsi+0x10]
  40ee93:	and    eax,0x3
  40ee96:	cmp    eax,0x2
  40ee99:	je     0x40f3c4
  40ee9f:	cmp    eax,0x3
  40eea2:	je     0x40f2e0
  40eea8:	cmp    eax,0x1
  40eeab:	je     0x40f160
  40eeb1:	call   r12
  40eeb4:	lea    rcx,[rip+0x1b9b2]        # 0x42a86d
  40eebb:	lea    r9,[rax+0x30]
  40eebf:	mov    r8d,0x66
  40eec5:	mov    edx,0x1
  40eeca:	call   0x421e38
  40eecf:	call   r12
  40eed2:	lea    rcx,[rip+0x1b12d]        # 0x42a006
  40eed9:	lea    r9,[rax+0x30]
  40eedd:	mov    edx,0x1
  40eee2:	mov    r8d,0xfa
  40eee8:	call   0x421e38
  40eeed:	mov    rcx,rsi
  40eef0:	call   0x40a4b0
  40eef5:	mov    rdx,QWORD PTR [rsi+0x30]
  40eef9:	lea    rcx,[rip+0x1b345]        # 0x42a245
  40ef00:	call   0x4082b0
  40ef05:	mov    edi,DWORD PTR [rsi+0xb4]
  40ef0b:	mov    rdx,QWORD PTR [rsi+0x30]
  40ef0f:	lea    rcx,[rip+0x1af75]        # 0x429e8b
  40ef16:	mov    rbx,QWORD PTR [rsi+0x78]
  40ef1a:	call   0x4082b0
  40ef1f:	test   edi,edi
  40ef21:	jle    0x40f213
  40ef27:	lea    eax,[rdi-0x1]
  40ef2a:	lea    rbp,[rip+0x1ae06]        # 0x429d37
  40ef31:	lea    rdi,[rip+0x1ae5b]        # 0x429d93
  40ef38:	add    rax,0x1
  40ef3c:	lea    rdx,[rax+rax*2]
  40ef40:	lea    rax,[rax+rdx*4]
  40ef44:	lea    r13,[rbx+rax*8]
  40ef48:	jmp    0x40ef7f
  40ef4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ef50:	test   eax,0x100000
  40ef55:	je     0x40ef72
  40ef57:	cmp    WORD PTR [rbx+0xc],0x2
  40ef5c:	mov    rcx,rbp
  40ef5f:	mov    r9d,0x1
  40ef65:	cmovb  rcx,rdi
  40ef69:	mov    rdx,QWORD PTR [rsi+0x30]
  40ef6d:	call   0x4082b0
  40ef72:	add    rbx,0x68
  40ef76:	cmp    rbx,r13
  40ef79:	je     0x40f213
  40ef7f:	mov    eax,DWORD PTR [rbx+0x10]
  40ef82:	test   eax,0x280000
  40ef87:	jne    0x40ef72
  40ef89:	mov    r8,QWORD PTR [rbx+0x48]
  40ef8d:	test   r8,r8
  40ef90:	je     0x40ef72
  40ef92:	movzx  r9d,WORD PTR [rbx+0xa]
  40ef97:	test   r9w,r9w
  40ef9b:	je     0x40ef50
  40ef9d:	cmp    WORD PTR [rbx+0xc],0x1
  40efa2:	mov    rcx,rdi
  40efa5:	cmova  rcx,rbp
  40efa9:	jmp    0x40ef69
  40efab:	nop    DWORD PTR [rax+rax*1+0x0]
  40efb0:	mov    eax,DWORD PTR [rbx+0x18]
  40efb3:	lea    r9,[rip+0x1a855]        # 0x42980f
  40efba:	test   eax,eax
  40efbc:	lea    rax,[rip+0x1a9cc]        # 0x42998f
  40efc3:	cmovne r9,rax
  40efc7:	jmp    0x40ee21
  40efcc:	nop    DWORD PTR [rax+0x0]
  40efd0:	mov    r9,QWORD PTR [rbx+0x18]
  40efd4:	test   r9,r9
  40efd7:	jne    0x40ee21
  40efdd:	lea    rax,[rip+0x1bfc8]        # 0x42afac
  40efe4:	cmp    r15,r13
  40efe7:	cmove  r15,rax
  40efeb:	jmp    0x40ee21
  40eff0:	mov    r9d,DWORD PTR [rbx+0x18]
  40eff4:	lea    r8,[rip+0x19707]        # 0x428702
  40effb:	jmp    0x40ee0d
  40f000:	and    edx,0x20
  40f003:	je     0x40f3e0
  40f009:	test   BYTE PTR [rax+0x10],0xf
  40f00d:	mov    QWORD PTR [rip+0x25bf8],0x0        # 0x434c10
  40f018:	mov    r12,QWORD PTR [rip+0x29f5d]        # 0x438f7c
  40f01f:	je     0x40ec68
  40f025:	mov    r13,QWORD PTR [rax+0x18]
  40f029:	lea    rdx,[rip+0x196c0]        # 0x4286f0
  40f030:	mov    rbp,QWORD PTR [rsi+0x28]
  40f034:	mov    rcx,r13
  40f037:	call   0x421e78
  40f03c:	test   rax,rax
  40f03f:	mov    rdi,rax
  40f042:	je     0x40f464
  40f048:	mov    rcx,rax
  40f04b:	call   0x421cf0
  40f050:	lea    rdx,[rsp+0x40]
  40f055:	mov    ecx,eax
  40f057:	call   QWORD PTR [rip+0x29f97]        # 0x438ff4
  40f05d:	test   eax,eax
  40f05f:	jne    0x40f474
  40f065:	movzx  eax,WORD PTR [rsp+0x46]
  40f06a:	and    ax,0xf000
  40f06e:	cmp    ax,0x8000
  40f072:	jne    0x40f474
  40f078:	mov    rax,QWORD PTR [rsp+0x58]
  40f07d:	lea    rcx,[rax+0x1]
  40f081:	call   0x409ce0
  40f086:	mov    r8,QWORD PTR [rsp+0x58]
  40f08b:	mov    r12,rax
  40f08e:	mov    rbx,rax
  40f091:	jmp    0x40f0a8
  40f093:	mov    r8,QWORD PTR [rsp+0x58]
  40f098:	sub    r8,rax
  40f09b:	test   r8,r8
  40f09e:	mov    QWORD PTR [rsp+0x58],r8
  40f0a3:	je     0x40f0bd
  40f0a5:	add    rbx,rax
  40f0a8:	mov    r9,rdi
  40f0ab:	mov    edx,0x1
  40f0b0:	mov    rcx,rbx
  40f0b3:	call   0x421e58
  40f0b8:	test   rax,rax
  40f0bb:	jne    0x40f093
  40f0bd:	mov    BYTE PTR [rbx],0x0
  40f0c0:	mov    rcx,rdi
  40f0c3:	call   0x421e90
  40f0c8:	test   r12,r12
  40f0cb:	mov    QWORD PTR [rip+0x25b26],r12        # 0x434bf8
  40f0d2:	je     0x40f11a
  40f0d4:	lea    rdx,[rip+0x1bf0f]        # 0x42afea
  40f0db:	mov    rcx,r12
  40f0de:	call   0x421d70
  40f0e3:	test   rax,rax
  40f0e6:	je     0x40f448
  40f0ec:	lea    rcx,[rax+0x1]
  40f0f0:	lea    rdx,[rip+0x1ad20]        # 0x429e17
  40f0f7:	mov    BYTE PTR [rax],0x0
  40f0fa:	call   0x421d70
  40f0ff:	test   rax,rax
  40f102:	je     0x40f42f
  40f108:	add    rax,0x73
  40f10c:	mov    QWORD PTR [rip+0x25af5],r12        # 0x434c08
  40f113:	mov    QWORD PTR [rip+0x25ae6],rax        # 0x434c00
  40f11a:	mov    r12,QWORD PTR [rip+0x29e5b]        # 0x438f7c
  40f121:	call   r12
  40f124:	lea    rdx,[rip+0x195cd]        # 0x4286f8
  40f12b:	lea    r8,[rax+0x30]
  40f12f:	mov    rcx,r13
  40f132:	call   0x421e48
  40f137:	mov    rbx,rax
  40f13a:	call   r12
  40f13d:	lea    rdx,[rax+0x30]
  40f141:	cmp    rbx,rdx
  40f144:	je     0x40ec68
  40f14a:	lea    rdx,[rip+0x195a9]        # 0x4286fa
  40f151:	mov    r8,r13
  40f154:	mov    rcx,rbp
  40f157:	call   0x408860
  40f15c:	nop    DWORD PTR [rax+0x0]
  40f160:	call   r12
  40f163:	lea    rcx,[rip+0x1b00c]        # 0x42a176
  40f16a:	lea    r9,[rax+0x30]
  40f16e:	mov    r8d,0xce
  40f174:	mov    edx,0x1
  40f179:	call   0x421e38
  40f17e:	call   r12
  40f181:	lea    rcx,[rip+0x1a6b6]        # 0x42983e
  40f188:	lea    r9,[rax+0x30]
  40f18c:	mov    r8d,0xa
  40f192:	mov    edx,0x1
  40f197:	call   0x421e38
  40f19c:	call   r12
  40f19f:	lea    rcx,[rip+0x1ae60]        # 0x42a006
  40f1a6:	lea    r9,[rax+0x30]
  40f1aa:	mov    edx,0x1
  40f1af:	mov    r8d,0xfa
  40f1b5:	call   0x421e38
  40f1ba:	mov    rcx,rsi
  40f1bd:	call   0x40a4b0
  40f1c2:	mov    rdx,QWORD PTR [rsi+0x30]
  40f1c6:	lea    rcx,[rip+0x1b078]        # 0x42a245
  40f1cd:	call   0x4082b0
  40f1d2:	call   r12
  40f1d5:	lea    rcx,[rip+0x1a5fc]        # 0x4297d8
  40f1dc:	lea    r9,[rax+0x30]
  40f1e0:	mov    r8d,0xc
  40f1e6:	mov    edx,0x1
  40f1eb:	call   0x421e38
  40f1f0:	call   r12
  40f1f3:	lea    rcx,[rip+0x1b470]        # 0x42a66a
  40f1fa:	lea    r9,[rax+0x30]
  40f1fe:	mov    r8d,0x38
  40f204:	mov    edx,0x1
  40f209:	call   0x421e38
  40f20e:	jmp    0x40ef05
  40f213:	call   r12
  40f216:	lea    rcx,[rip+0x1abfa]        # 0x429e17
  40f21d:	lea    r9,[rax+0x30]
  40f221:	mov    r8d,0x73
  40f227:	mov    edx,0x1
  40f22c:	call   0x421e38
  40f231:	mov    rax,QWORD PTR [rip+0x259c8]        # 0x434c00
  40f238:	test   rax,rax
  40f23b:	je     0x40f242
  40f23d:	cmp    BYTE PTR [rax],0x0
  40f240:	jne    0x40f2b0
  40f242:	mov    rax,QWORD PTR [rip+0x144ef]        # 0x423738
  40f249:	test   BYTE PTR [rax+0x78],0x20
  40f24d:	je     0x40f2c5
  40f24f:	call   r12
  40f252:	lea    rcx,[rax+0x30]
  40f256:	call   0x421e90
  40f25b:	call   r12
  40f25e:	lea    rcx,[rax+0x30]
  40f262:	call   0x421e88
  40f267:	test   eax,eax
  40f269:	jne    0x40f486
  40f26f:	mov    rcx,QWORD PTR [rip+0x25982]        # 0x434bf8
  40f276:	call   0x421e50
  40f27b:	mov    QWORD PTR [rip+0x25982],0x0        # 0x434c08
  40f286:	mov    QWORD PTR [rip+0x2596f],0x0        # 0x434c00
  40f291:	mov    QWORD PTR [rip+0x2595c],0x0        # 0x434bf8
  40f29c:	add    rsp,0xc8
  40f2a3:	pop    rbx
  40f2a4:	pop    rsi
  40f2a5:	pop    rdi
  40f2a6:	pop    rbp
  40f2a7:	pop    r12
  40f2a9:	pop    r13
  40f2ab:	pop    r14
  40f2ad:	pop    r15
  40f2af:	ret    
  40f2b0:	call   r12
  40f2b3:	mov    rcx,QWORD PTR [rip+0x25946]        # 0x434c00
  40f2ba:	lea    rdx,[rax+0x30]
  40f2be:	call   0x421e60
  40f2c3:	jmp    0x40f24f
  40f2c5:	mov    rdx,QWORD PTR [rsi+0x30]
  40f2c9:	lea    rcx,[rip+0x1a664]        # 0x429934
  40f2d0:	call   0x4082b0
  40f2d5:	jmp    0x40f24f
  40f2da:	nop    WORD PTR [rax+rax*1+0x0]
  40f2e0:	call   r12
  40f2e3:	lea    rcx,[rip+0x1ae8c]        # 0x42a176
  40f2ea:	lea    r9,[rax+0x30]
  40f2ee:	mov    r8d,0xce
  40f2f4:	mov    edx,0x1
  40f2f9:	call   0x421e38
  40f2fe:	call   r12
  40f301:	lea    rcx,[rip+0x1a536]        # 0x42983e
  40f308:	lea    r9,[rax+0x30]
  40f30c:	mov    r8d,0xa
  40f312:	mov    edx,0x1
  40f317:	call   0x421e38
  40f31c:	call   r12
  40f31f:	lea    rcx,[rip+0x1ace0]        # 0x42a006
  40f326:	lea    r9,[rax+0x30]
  40f32a:	mov    r8d,0xfa
  40f330:	mov    edx,0x1
  40f335:	call   0x421e38
  40f33a:	mov    rcx,rsi
  40f33d:	call   0x40a4b0
  40f342:	mov    rdx,QWORD PTR [rsi+0x30]
  40f346:	lea    rcx,[rip+0x1aef8]        # 0x42a245
  40f34d:	call   0x4082b0
  40f352:	call   r12
  40f355:	lea    rcx,[rip+0x1a47c]        # 0x4297d8
  40f35c:	lea    r9,[rax+0x30]
  40f360:	mov    r8d,0xc
  40f366:	mov    edx,0x1
  40f36b:	call   0x421e38
  40f370:	call   r12
  40f373:	lea    rcx,[rip+0x1a49b]        # 0x429815
  40f37a:	lea    r9,[rax+0x30]
  40f37e:	mov    r8d,0x9
  40f384:	mov    edx,0x1
  40f389:	call   0x421e38
  40f38e:	call   r12
  40f391:	lea    rcx,[rip+0x1ad69]        # 0x42a101
  40f398:	lea    r9,[rax+0x30]
  40f39c:	mov    edx,0x1
  40f3a1:	mov    r8d,0x74
  40f3a7:	call   0x421e38
  40f3ac:	mov    rcx,rsi
  40f3af:	call   0x40a220
  40f3b4:	mov    rdx,QWORD PTR [rsi+0x30]
  40f3b8:	lea    rcx,[rip+0x1b515]        # 0x42a8d4
  40f3bf:	jmp    0x40f1cd
  40f3c4:	call   r12
  40f3c7:	mov    r8d,0xce
  40f3cd:	lea    r9,[rax+0x30]
  40f3d1:	mov    edx,0x1
  40f3d6:	lea    rcx,[rip+0x1ad99]        # 0x42a176
  40f3dd:	jmp    0x40f36b
  40f3df:	nop
  40f3e0:	lea    rcx,[rip+0x192f9]        # 0x4286e0
  40f3e7:	call   0x421e30
  40f3ec:	test   rax,rax
  40f3ef:	mov    QWORD PTR [rip+0x2581a],rax        # 0x434c10
  40f3f6:	je     0x40f454
  40f3f8:	mov    rax,QWORD PTR [rip+0x14339]        # 0x423738
  40f3ff:	jmp    0x40ec57
  40f404:	mov    rdx,QWORD PTR [rip+0x25805]        # 0x434c10
  40f40b:	test   rdx,rdx
  40f40e:	je     0x40ecdf
  40f414:	lea    rcx,[rip+0x1a512]        # 0x42992d
  40f41b:	mov    QWORD PTR [rsp+0x28],r8
  40f420:	call   0x4082b0
  40f425:	mov    r8,QWORD PTR [rsp+0x28]
  40f42a:	jmp    0x40ecdf
  40f42f:	mov    rcx,r12
  40f432:	call   0x421d98
  40f437:	lea    rax,[r12+rax*1+0x53]
  40f43c:	mov    QWORD PTR [rip+0x257bd],rax        # 0x434c00
  40f443:	jmp    0x40f11a
  40f448:	mov    QWORD PTR [rip+0x257b1],r12        # 0x434c00
  40f44f:	jmp    0x40f11a
  40f454:	lea    rax,[rip+0x1928b]        # 0x4286e6
  40f45b:	mov    QWORD PTR [rip+0x257ae],rax        # 0x434c10
  40f462:	jmp    0x40f3f8
  40f464:	mov    QWORD PTR [rip+0x25789],0x0        # 0x434bf8
  40f46f:	jmp    0x40f11a
  40f474:	lea    rdx,[rip+0x19277]        # 0x4286f2
  40f47b:	mov    r8,r13
  40f47e:	mov    rcx,rbp
  40f481:	call   0x408860
  40f486:	mov    rcx,QWORD PTR [rsi+0x28]
  40f48a:	mov    r8,QWORD PTR [rip+0x14727]        # 0x423bb8
  40f491:	mov    rdx,QWORD PTR [rip+0x14730]        # 0x423bc8
  40f498:	call   0x408860
  40f49d:	nop
  40f49e:	xchg   ax,ax
  40f4a0:	push   rbx
  40f4a1:	sub    rsp,0x20
  40f4a5:	test   rcx,rcx
  40f4a8:	je     0x40f4be
  40f4aa:	cmp    DWORD PTR [rcx],0x6
  40f4ad:	mov    rbx,rcx
  40f4b0:	je     0x40f4c4
  40f4b2:	call   QWORD PTR [rip+0x29b14]        # 0x438fcc
  40f4b8:	mov    DWORD PTR [rax],0x16
  40f4be:	add    rsp,0x20
  40f4c2:	pop    rbx
  40f4c3:	ret    
  40f4c4:	mov    rcx,QWORD PTR [rcx+0x10]
  40f4c8:	call   0x407de0
  40f4cd:	mov    rcx,rbx
  40f4d0:	add    rsp,0x20
  40f4d4:	pop    rbx
  40f4d5:	jmp    0x421e50
  40f4da:	nop    WORD PTR [rax+rax*1+0x0]
  40f4e0:	push   rdi
  40f4e1:	push   rsi
  40f4e2:	push   rbx
  40f4e3:	sub    rsp,0x20
  40f4e7:	cmp    rcx,0xe
  40f4eb:	jbe    0x40f533
  40f4ed:	test   BYTE PTR [rdx+0x10],0x8
  40f4f1:	mov    rsi,rdx
  40f4f4:	je     0x40f540
  40f4f6:	mov    rcx,QWORD PTR [rdx+0x20]
  40f4fa:	test   rcx,rcx
  40f4fd:	je     0x40f533
  40f4ff:	mov    eax,DWORD PTR [rcx]
  40f501:	lea    rbx,[rcx+0x8]
  40f505:	test   eax,eax
  40f507:	jle    0x40f527
  40f509:	sub    eax,0x1
  40f50c:	lea    rdi,[rbx+rax*8+0x8]
  40f511:	add    rbx,0x8
  40f515:	mov    rcx,QWORD PTR [rbx-0x8]
  40f519:	call   0x40f4a0
  40f51e:	cmp    rbx,rdi
  40f521:	jne    0x40f511
  40f523:	mov    rcx,QWORD PTR [rsi+0x20]
  40f527:	add    rsp,0x20
  40f52b:	pop    rbx
  40f52c:	pop    rsi
  40f52d:	pop    rdi
  40f52e:	jmp    0x421e50
  40f533:	add    rsp,0x20
  40f537:	pop    rbx
  40f538:	pop    rsi
  40f539:	pop    rdi
  40f53a:	ret    
  40f53b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f540:	mov    rbx,QWORD PTR [rdx+0x50]
  40f544:	mov    rcx,rbx
  40f547:	call   0x421d98
  40f54c:	mov    rcx,QWORD PTR [rsi+0x18]
  40f550:	mov    r8,rax
  40f553:	mov    rdx,rbx
  40f556:	call   0x40d130
  40f55b:	test   rax,rax
  40f55e:	je     0x40f533
  40f560:	lea    rcx,[rsi+0x20]
  40f564:	mov    rdx,rax
  40f567:	add    rsp,0x20
  40f56b:	pop    rbx
  40f56c:	pop    rsi
  40f56d:	pop    rdi
  40f56e:	jmp    0x409d30
  40f573:	nop    DWORD PTR [rax]
  40f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f580:	push   r12
  40f582:	push   rbp
  40f583:	push   rdi
  40f584:	push   rsi
  40f585:	push   rbx
  40f586:	sub    rsp,0x30
  40f58a:	mov    eax,DWORD PTR [rip+0x25660]        # 0x434bf0
  40f590:	mov    rdi,rdx
  40f593:	lea    rdx,[rip+0x1a126]        # 0x4296c0
  40f59a:	cmp    rcx,0x1
  40f59e:	mov    rbp,rcx
  40f5a1:	mov    rbx,r8
  40f5a4:	mov    esi,r9d
  40f5a7:	lea    r12,[rdx+rax*1+0xcb]
  40f5af:	je     0x40f5eb
  40f5b1:	cmp    rcx,0xf
  40f5b5:	ja     0x40f5c2
  40f5b7:	add    rsp,0x30
  40f5bb:	pop    rbx
  40f5bc:	pop    rsi
  40f5bd:	pop    rdi
  40f5be:	pop    rbp
  40f5bf:	pop    r12
  40f5c1:	ret    
  40f5c2:	mov    eax,DWORD PTR [rdi+0x18]
  40f5c5:	mov    rdx,QWORD PTR [rip+0x14604]        # 0x423bd0
  40f5cc:	lea    r12,[rip+0x19133]        # 0x428706
  40f5d3:	mov    DWORD PTR [rsp+0x20],eax
  40f5d7:	mov    r8,QWORD PTR [rcx+0x28]
  40f5db:	mov    r9,QWORD PTR [rdi+0x50]
  40f5df:	mov    rcx,QWORD PTR [rip+0x255e2]        # 0x434bc8
  40f5e6:	call   0x407ea0
  40f5eb:	test   BYTE PTR [rdi+0x13],0x1
  40f5ef:	jne    0x40f720
  40f5f5:	cmp    esi,0x1
  40f5f8:	jle    0x40f73f
  40f5fe:	mov    rdx,QWORD PTR [rip+0x146eb]        # 0x423cf0
  40f605:	mov    rcx,QWORD PTR [rip+0x255bc]        # 0x434bc8
  40f60c:	mov    r8,r12
  40f60f:	lea    rdi,[rip+0x1a2a2]        # 0x4298b8
  40f616:	call   0x407ea0
  40f61b:	cmp    rbp,0x1
  40f61f:	jne    0x40f668
  40f621:	jmp    0x40f750
  40f626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f630:	mov    rdx,QWORD PTR [rip+0x146a1]        # 0x423cd8
  40f637:	mov    rcx,QWORD PTR [rip+0x2558a]        # 0x434bc8
  40f63e:	mov    r8,rdi
  40f641:	mov    DWORD PTR [rsp+0x20],eax
  40f645:	call   0x407ea0
  40f64a:	sub    esi,0x1
  40f64d:	mov    rdx,QWORD PTR [rip+0x25574]        # 0x434bc8
  40f654:	test   esi,esi
  40f656:	jle    0x40f6ad
  40f658:	mov    rcx,QWORD PTR [rip+0x146a1]        # 0x423d00
  40f65f:	add    rbx,0x8
  40f663:	call   0x421e60
  40f668:	mov    eax,DWORD PTR [rbx+0x4]
  40f66b:	mov    r9d,DWORD PTR [rbx]
  40f66e:	cmp    eax,0x80000000
  40f673:	je     0x40f6e0
  40f675:	cmp    r9d,0x80000000
  40f67c:	je     0x40f700
  40f682:	cmp    eax,0x7fffffff
  40f687:	jne    0x40f630
  40f689:	mov    rdx,QWORD PTR [rip+0x14650]        # 0x423ce0
  40f690:	mov    rcx,QWORD PTR [rip+0x25531]        # 0x434bc8
  40f697:	mov    r8,rdi
  40f69a:	sub    esi,0x1
  40f69d:	call   0x407ea0
  40f6a2:	test   esi,esi
  40f6a4:	mov    rdx,QWORD PTR [rip+0x2551d]        # 0x434bc8
  40f6ab:	jg     0x40f658
  40f6ad:	mov    ecx,0xa
  40f6b2:	call   0x421e68
  40f6b7:	cmp    rbp,0xf
  40f6bb:	jbe    0x40f5b7
  40f6c1:	mov    rax,QWORD PTR [rbp+0x98]
  40f6c8:	mov    edx,0x1
  40f6cd:	mov    rcx,rbp
  40f6d0:	add    rsp,0x30
  40f6d4:	pop    rbx
  40f6d5:	pop    rsi
  40f6d6:	pop    rdi
  40f6d7:	pop    rbp
  40f6d8:	pop    r12
  40f6da:	rex.W jmp rax
  40f6dd:	nop    DWORD PTR [rax]
  40f6e0:	mov    rdx,QWORD PTR [rip+0x14601]        # 0x423ce8
  40f6e7:	mov    rcx,QWORD PTR [rip+0x254da]        # 0x434bc8
  40f6ee:	mov    r8,rdi
  40f6f1:	call   0x407ea0
  40f6f6:	jmp    0x40f64a
  40f6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f700:	mov    rdx,QWORD PTR [rip+0x14609]        # 0x423d10
  40f707:	mov    rcx,QWORD PTR [rip+0x254ba]        # 0x434bc8
  40f70e:	mov    r9d,eax
  40f711:	mov    r8,rdi
  40f714:	call   0x407ea0
  40f719:	jmp    0x40f64a
  40f71e:	xchg   ax,ax
  40f720:	mov    rdx,QWORD PTR [rip+0x145e1]        # 0x423d08
  40f727:	mov    rcx,QWORD PTR [rip+0x2549a]        # 0x434bc8
  40f72e:	mov    r8,r12
  40f731:	call   0x407ea0
  40f736:	cmp    esi,0x1
  40f739:	jg     0x40f5fe
  40f73f:	mov    rdx,QWORD PTR [rip+0x145b2]        # 0x423cf8
  40f746:	jmp    0x40f605
  40f74b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f750:	mov    eax,DWORD PTR [rip+0x2549a]        # 0x434bf0
  40f756:	lea    rdx,[rip+0x19f63]        # 0x4296c0
  40f75d:	lea    rdi,[rdx+rax*1+0xd2]
  40f765:	jmp    0x40f668
  40f76a:	nop    WORD PTR [rax+rax*1+0x0]
  40f770:	push   r15
  40f772:	push   r14
  40f774:	push   r13
  40f776:	push   r12
  40f778:	push   rbp
  40f779:	push   rdi
  40f77a:	push   rsi
  40f77b:	push   rbx
  40f77c:	sub    rsp,0x28
  40f780:	mov    ebx,0x3
  40f785:	mov    rbp,rcx
  40f788:	mov    rcx,rdx
  40f78b:	mov    rdi,rdx
  40f78e:	call   0x421d98
  40f793:	mov    r9,rbp
  40f796:	mov    r12,rax
  40f799:	mov    eax,0x1
  40f79e:	xchg   ax,ax
  40f7a0:	add    r9,0x1
  40f7a4:	movzx  ecx,BYTE PTR [r9-0x1]
  40f7a9:	lea    r10d,[rcx-0x20]
  40f7ad:	cmp    r10b,0x5e
  40f7b1:	ja     0x40f7d0
  40f7b3:	cmp    cl,0x5c
  40f7b6:	je     0x40f800
  40f7b8:	cmp    cl,0x22
  40f7bb:	mov    r10d,0x1
  40f7c1:	je     0x40f800
  40f7c3:	add    rbx,r10
  40f7c6:	jmp    0x40f7a0
  40f7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7d0:	cmp    cl,0xd
  40f7d3:	ja     0x40f7f3
  40f7d5:	mov    r10,rax
  40f7d8:	shl    r10,cl
  40f7db:	test   r10d,0x3b80
  40f7e2:	jne    0x40f810
  40f7e4:	test   r10d,0x400
  40f7eb:	jne    0x40f820
  40f7ed:	and    r10d,0x1
  40f7f1:	jne    0x40f828
  40f7f3:	add    rbx,0x4
  40f7f7:	jmp    0x40f7a0
  40f7f9:	nop    DWORD PTR [rax+0x0]
  40f800:	mov    r10d,0x2
  40f806:	jmp    0x40f7c3
  40f808:	nop    DWORD PTR [rax+rax*1+0x0]
  40f810:	add    rbx,0x2
  40f814:	jmp    0x40f7a0
  40f816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f820:	add    rbx,r12
  40f823:	jmp    0x40f7a0
  40f828:	mov    rcx,rbx
  40f82b:	lea    r14,[rip+0x18ed6]        # 0x428708
  40f832:	call   0x409ce0
  40f837:	mov    r13,rax
  40f83a:	lea    rsi,[rax+0x1]
  40f83e:	mov    BYTE PTR [rax],0x22
  40f841:	jmp    0x40f862
  40f843:	cmp    r8b,0x5c
  40f847:	je     0x40f964
  40f84d:	cmp    r8b,0x22
  40f851:	je     0x40f964
  40f857:	mov    BYTE PTR [rsi],r8b
  40f85a:	add    rsi,0x1
  40f85e:	add    rbp,0x1
  40f862:	movzx  r8d,BYTE PTR [rbp+0x0]
  40f867:	lea    ecx,[r8-0x20]
  40f86b:	cmp    cl,0x5e
  40f86e:	jbe    0x40f843
  40f870:	cmp    r8b,0xd
  40f874:	ja     0x40f94b
  40f87a:	movzx  eax,r8b
  40f87e:	movsxd rcx,DWORD PTR [r14+rax*4]
  40f882:	add    rcx,r14
  40f885:	jmp    rcx
  40f887:	movzx  eax,BYTE PTR [rbp+0x1]
  40f88b:	lea    r15,[rbp+0x1]
  40f88f:	cmp    al,0xa
  40f891:	jne    0x40f8aa
  40f893:	mov    BYTE PTR [rsi],0x5c
  40f896:	add    r15,0x1
  40f89a:	add    rsi,0x2
  40f89e:	mov    BYTE PTR [rsi-0x1],0x6e
  40f8a2:	movzx  eax,BYTE PTR [r15]
  40f8a6:	cmp    al,0xa
  40f8a8:	je     0x40f893
  40f8aa:	test   al,al
  40f8ac:	jne    0x40f970
  40f8b2:	mov    rax,rsi
  40f8b5:	mov    BYTE PTR [rsi],0x5c
  40f8b8:	add    rsi,0x2
  40f8bc:	mov    BYTE PTR [rax+0x1],0x6e
  40f8c0:	mov    BYTE PTR [rsi],0x22
  40f8c3:	mov    BYTE PTR [rsi+0x1],0x0
  40f8c7:	add    rsi,0x2
  40f8cb:	sub    rsi,r13
  40f8ce:	cmp    rsi,rbx
  40f8d1:	ja     0x40f989
  40f8d7:	mov    rax,r13
  40f8da:	add    rsp,0x28
  40f8de:	pop    rbx
  40f8df:	pop    rsi
  40f8e0:	pop    rdi
  40f8e1:	pop    rbp
  40f8e2:	pop    r12
  40f8e4:	pop    r13
  40f8e6:	pop    r14
  40f8e8:	pop    r15
  40f8ea:	ret    
  40f8eb:	mov    BYTE PTR [rsi],0x5c
  40f8ee:	mov    BYTE PTR [rsi+0x1],0x72
  40f8f2:	add    rsi,0x2
  40f8f6:	jmp    0x40f85e
  40f8fb:	mov    BYTE PTR [rsi],0x5c
  40f8fe:	mov    BYTE PTR [rsi+0x1],0x66
  40f902:	add    rsi,0x2
  40f906:	jmp    0x40f85e
  40f90b:	mov    BYTE PTR [rsi],0x5c
  40f90e:	mov    BYTE PTR [rsi+0x1],0x76
  40f912:	add    rsi,0x2
  40f916:	jmp    0x40f85e
  40f91b:	mov    BYTE PTR [rsi],0x5c
  40f91e:	mov    BYTE PTR [rsi+0x1],0x74
  40f922:	add    rsi,0x2
  40f926:	jmp    0x40f85e
  40f92b:	mov    BYTE PTR [rsi],0x5c
  40f92e:	mov    BYTE PTR [rsi+0x1],0x62
  40f932:	add    rsi,0x2
  40f936:	jmp    0x40f85e
  40f93b:	mov    BYTE PTR [rsi],0x5c
  40f93e:	mov    BYTE PTR [rsi+0x1],0x61
  40f942:	add    rsi,0x2
  40f946:	jmp    0x40f85e
  40f94b:	lea    rdx,[rip+0x19f14]        # 0x429866
  40f952:	mov    rcx,rsi
  40f955:	call   0x408880
  40f95a:	cdqe   
  40f95c:	add    rsi,rax
  40f95f:	jmp    0x40f85e
  40f964:	mov    BYTE PTR [rsi],0x5c
  40f967:	add    rsi,0x1
  40f96b:	jmp    0x40f857
  40f970:	mov    rcx,rsi
  40f973:	mov    r8,r12
  40f976:	mov    rdx,rdi
  40f979:	call   0x421e08
  40f97e:	add    rsi,r12
  40f981:	mov    rbp,r15
  40f984:	jmp    0x40f862
  40f989:	call   QWORD PTR [rip+0x295ed]        # 0x438f7c
  40f98f:	lea    rcx,[rip+0x1a039]        # 0x4299cf
  40f996:	lea    r9,[rax+0x60]
  40f99a:	mov    r8d,0x24
  40f9a0:	mov    edx,0x1
  40f9a5:	call   0x421e38
  40f9aa:	mov    ecx,0x1
  40f9af:	call   0x4082e0
  40f9b4:	nop
  40f9b5:	nop
  40f9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9c0:	push   rsi
  40f9c1:	push   rbx
  40f9c2:	sub    rsp,0x28
  40f9c6:	test   dl,dl
  40f9c8:	mov    rbx,r8
  40f9cb:	jne    0x40fa00
  40f9cd:	lea    rdx,[rip+0x19e65]        # 0x429839
  40f9d4:	call   0x40f770
  40f9d9:	lea    rdx,[rip+0x19f21]        # 0x429901
  40f9e0:	mov    rsi,rax
  40f9e3:	mov    rcx,rbx
  40f9e6:	mov    r8,rax
  40f9e9:	call   0x407ea0
  40f9ee:	mov    rcx,rsi
  40f9f1:	add    rsp,0x28
  40f9f5:	pop    rbx
  40f9f6:	pop    rsi
  40f9f7:	jmp    0x421e50
  40f9fc:	nop    DWORD PTR [rax+0x0]
  40fa00:	mov    rdx,r8
  40fa03:	add    rsp,0x28
  40fa07:	pop    rbx
  40fa08:	pop    rsi
  40fa09:	jmp    0x421e60
  40fa0e:	xchg   ax,ax
  40fa10:	push   r15
  40fa12:	push   r14
  40fa14:	push   r13
  40fa16:	push   r12
  40fa18:	push   rbp
  40fa19:	push   rdi
  40fa1a:	push   rsi
  40fa1b:	push   rbx
  40fa1c:	sub    rsp,0x38
  40fa20:	mov    eax,DWORD PTR [rcx+0x14]
  40fa23:	xor    r13d,r13d
  40fa26:	xor    r12d,r12d
  40fa29:	mov    rbp,rcx
  40fa2c:	lea    rcx,[rip+0x1a1bc]        # 0x429bef
  40fa33:	lea    edx,[rax-0x1]
  40fa36:	call   0x4082b0
  40fa3b:	mov    rsi,QWORD PTR [rip+0x2953a]        # 0x438f7c
  40fa42:	jmp    0x40fa59
  40fa44:	add    r12d,0x1
  40fa48:	add    r13,0x68
  40fa4c:	cmp    r12d,DWORD PTR [rbp+0xb4]
  40fa53:	jge    0x40fbc1
  40fa59:	mov    rdx,QWORD PTR [rbp+0x78]
  40fa5d:	lea    rdi,[rdx+r13*1]
  40fa61:	mov    eax,DWORD PTR [rdi+0x10]
  40fa64:	test   eax,0x8280000
  40fa69:	jne    0x40fa44
  40fa6b:	cmp    WORD PTR [rdi+0x8],0x8000
  40fa71:	jne    0x40fa44
  40fa73:	movzx  r8d,WORD PTR [rdi+0x4]
  40fa78:	cmp    r8d,r12d
  40fa7b:	je     0x40fac8
  40fa7d:	lea    rax,[r8+r8*2]
  40fa81:	lea    rcx,[rip+0x1a0f0]        # 0x429b78
  40fa88:	lea    rax,[r8+rax*4]
  40fa8c:	mov    r8,QWORD PTR [rdi+0x48]
  40fa90:	lea    rbx,[rdx+rax*8]
  40fa94:	mov    rax,QWORD PTR [rdi+0x18]
  40fa98:	mov    r9,QWORD PTR [rbx+0x48]
  40fa9c:	mov    QWORD PTR [rbx+0x18],rax
  40faa0:	mov    eax,DWORD PTR [rbx+0x10]
  40faa3:	and    eax,0xfffff00
  40faa8:	mov    DWORD PTR [rbx+0x10],eax
  40faab:	mov    edx,DWORD PTR [rdi+0x10]
  40faae:	mov    rdi,rbx
  40fab1:	and    edx,0xf00000ff
  40fab7:	or     eax,edx
  40fab9:	mov    rdx,QWORD PTR [rbp+0x30]
  40fabd:	mov    DWORD PTR [rbx+0x10],eax
  40fac0:	call   0x4082b0
  40fac5:	mov    eax,DWORD PTR [rbx+0x10]
  40fac8:	mov    edx,eax
  40faca:	and    edx,0xf000
  40fad0:	shr    edx,0xc
  40fad3:	cmp    edx,0x4
  40fad6:	je     0x40fc89
  40fadc:	mov    ecx,DWORD PTR [rdi+0x10]
  40fadf:	and    ecx,0x2f
  40fae2:	cmp    ecx,0x20
  40fae5:	je     0x40fa44
  40faeb:	test   ah,0x4
  40faee:	je     0x40fb72
  40faf4:	mov    r14,QWORD PTR [rdi+0x20]
  40faf8:	test   r14,r14
  40fafb:	je     0x40fb72
  40fafd:	mov    ebx,DWORD PTR [r14]
  40fb00:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb04:	lea    rcx,[rip+0x1a0bd]        # 0x429bc8
  40fb0b:	mov    r8,QWORD PTR [rdi+0x48]
  40fb0f:	lea    r15,[r14+0x8]
  40fb13:	mov    r9d,ebx
  40fb16:	call   0x4082b0
  40fb1b:	sub    ebx,0x1
  40fb1e:	js     0x40fa44
  40fb24:	mov    r9d,DWORD PTR [r14]
  40fb27:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb2b:	lea    rcx,[rip+0x19c99]        # 0x4297cb
  40fb32:	mov    r8,QWORD PTR [rdi+0x48]
  40fb36:	add    r15,0x8
  40fb3a:	sub    r9d,ebx
  40fb3d:	call   0x4082b0
  40fb42:	mov    rcx,QWORD PTR [r15-0x8]
  40fb46:	call   0x409620
  40fb4b:	mov    r9d,DWORD PTR [r14]
  40fb4e:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb52:	lea    rcx,[rip+0x19ca4]        # 0x4297fd
  40fb59:	mov    r8,QWORD PTR [rdi+0x48]
  40fb5d:	sub    r9d,ebx
  40fb60:	sub    ebx,0x1
  40fb63:	call   0x4082b0
  40fb68:	cmp    ebx,0xffffffff
  40fb6b:	jne    0x40fb24
  40fb6d:	jmp    0x40fa44
  40fb72:	test   al,0x20
  40fb74:	jne    0x40fbea
  40fb76:	cmp    edx,0x5
  40fb79:	je     0x40fe8d
  40fb7f:	cmp    edx,0x2
  40fb82:	je     0x40feaa
  40fb88:	cmp    edx,0x3
  40fb8b:	je     0x40fd89
  40fb91:	mov    rax,QWORD PTR [rdi+0x18]
  40fb95:	test   rax,rax
  40fb98:	je     0x40fba3
  40fb9a:	cmp    BYTE PTR [rax],0x0
  40fb9d:	jne    0x40fe57
  40fba3:	movzx  r9d,WORD PTR [rdi+0xe]
  40fba8:	mov    rdx,QWORD PTR [rbp+0x30]
  40fbac:	lea    rcx,[rip+0x1a07c]        # 0x429c2f
  40fbb3:	mov    r8,QWORD PTR [rdi+0x48]
  40fbb7:	call   0x4082b0
  40fbbc:	jmp    0x40fa44
  40fbc1:	test   BYTE PTR [rbp+0x11],0x8
  40fbc5:	je     0x40fbcf
  40fbc7:	mov    eax,DWORD PTR [rbp+0x4]
  40fbca:	cmp    DWORD PTR [rbp+0x14],eax
  40fbcd:	jb     0x40fc15
  40fbcf:	call   rsi
  40fbd1:	lea    rcx,[rax+0x30]
  40fbd5:	add    rsp,0x38
  40fbd9:	pop    rbx
  40fbda:	pop    rsi
  40fbdb:	pop    rdi
  40fbdc:	pop    rbp
  40fbdd:	pop    r12
  40fbdf:	pop    r13
  40fbe1:	pop    r14
  40fbe3:	pop    r15
  40fbe5:	jmp    0x421e80
  40fbea:	mov    r9,QWORD PTR [rdi+0x60]
  40fbee:	mov    rdx,QWORD PTR [rbp+0x30]
  40fbf2:	lea    rax,[rip+0x186b7]        # 0x4282b0
  40fbf9:	mov    r8,QWORD PTR [rdi+0x48]
  40fbfd:	lea    rcx,[rip+0x1a00a]        # 0x429c0e
  40fc04:	test   r9,r9
  40fc07:	cmove  r9,rax
  40fc0b:	call   0x4082b0
  40fc10:	jmp    0x40fa44
  40fc15:	call   rsi
  40fc17:	lea    rcx,[rip+0x19de4]        # 0x429a02
  40fc1e:	lea    r9,[rax+0x30]
  40fc22:	mov    r8d,0x6
  40fc28:	mov    edx,0x1
  40fc2d:	call   0x421e38
  40fc32:	mov    ebx,DWORD PTR [rbp+0x14]
  40fc35:	cmp    ebx,DWORD PTR [rbp+0x4]
  40fc38:	jae    0x40fc67
  40fc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	call   rsi
  40fc42:	lea    rdx,[rax+0x30]
  40fc46:	mov    ecx,0x20
  40fc4b:	call   0x421e68
  40fc50:	mov    rax,QWORD PTR [rbp+0x8]
  40fc54:	mov    edx,ebx
  40fc56:	add    ebx,0x1
  40fc59:	mov    rcx,QWORD PTR [rax+rdx*8]
  40fc5d:	call   0x409620
  40fc62:	cmp    ebx,DWORD PTR [rbp+0x4]
  40fc65:	jb     0x40fc40
  40fc67:	call   rsi
  40fc69:	lea    rcx,[rip+0x19d84]        # 0x4299f4
  40fc70:	lea    r9,[rax+0x30]
  40fc74:	mov    r8d,0xd
  40fc7a:	mov    edx,0x1
  40fc7f:	call   0x421e38
  40fc84:	jmp    0x40fbcf
  40fc89:	mov    rax,QWORD PTR [rdi+0x18]
  40fc8d:	mov    rdx,QWORD PTR [rbp+0x30]
  40fc91:	lea    rcx,[rip+0x19f97]        # 0x429c2f
  40fc98:	mov    r9d,DWORD PTR [rdi+0x20]
  40fc9c:	mov    r8,QWORD PTR [rdi+0x48]
  40fca0:	mov    QWORD PTR [rsp+0x28],rax
  40fca5:	call   0x4082b0
  40fcaa:	mov    eax,0xffffffff
  40fcaf:	mov    rdx,rdi
  40fcb2:	mov    ecx,0x3
  40fcb7:	mov    QWORD PTR [rdi+0x20],rax
  40fcbb:	call   QWORD PTR [rdi+0x38]
  40fcbe:	mov    r14,QWORD PTR [rdi+0x18]
  40fcc2:	cmp    BYTE PTR [r14],0x0
  40fcc6:	je     0x40fe52
  40fccc:	mov    QWORD PTR [rsp+0x20],0x1
  40fcd5:	mov    rdx,QWORD PTR [rdi+0x48]
  40fcd9:	lea    rcx,[rip+0x18a60]        # 0x428740
  40fce0:	call   0x4082b0
  40fce5:	mov    r9,QWORD PTR [rip+0x25124]        # 0x434e10
  40fcec:	test   r9,r9
  40fcef:	je     0x40fe40
  40fcf5:	movzx  eax,BYTE PTR [r14]
  40fcf9:	cmp    BYTE PTR [r9+rax*1],0x0
  40fcfe:	je     0x40fe35
  40fd04:	mov    rdx,r14
  40fd07:	nop    WORD PTR [rax+rax*1+0x0]
  40fd10:	add    rdx,0x1
  40fd14:	movzx  ecx,BYTE PTR [rdx]
  40fd17:	cmp    BYTE PTR [r9+rcx*1],0x0
  40fd1c:	mov    rax,rcx
  40fd1f:	jne    0x40fd10
  40fd21:	cmp    al,0x7f
  40fd23:	lea    r14,[rdx+0x1]
  40fd27:	movsx  r15d,al
  40fd2b:	ja     0x40fd6e
  40fd2d:	nop    DWORD PTR [rax]
  40fd30:	lea    r9,[rip+0x1c589]        # 0x42c2c0
  40fd37:	mov    eax,DWORD PTR [r9+rax*4]
  40fd3b:	test   eax,0x80000
  40fd40:	je     0x40fdc0
  40fd42:	call   rsi
  40fd44:	mov    rbx,rax
  40fd47:	mov    ecx,r15d
  40fd4a:	call   QWORD PTR [rip+0x2947c]        # 0x4391cc
  40fd50:	lea    rdx,[rbx+0x30]
  40fd54:	mov    ecx,eax
  40fd56:	call   0x421e68
  40fd5b:	movzx  eax,BYTE PTR [r14]
  40fd5f:	mov    rdx,r14
  40fd62:	cmp    al,0x7f
  40fd64:	lea    r14,[rdx+0x1]
  40fd68:	movsx  r15d,al
  40fd6c:	jbe    0x40fd30
  40fd6e:	test   r15d,r15d
  40fd71:	je     0x40fe30
  40fd77:	call   rsi
  40fd79:	lea    rdx,[rax+0x30]
  40fd7d:	mov    ecx,0x5f
  40fd82:	call   0x421e68
  40fd87:	jmp    0x40fd5b
  40fd89:	mov    eax,DWORD PTR [rdi+0x18]
  40fd8c:	mov    rdx,QWORD PTR [rbp+0x30]
  40fd90:	lea    r9,[rip+0x18514]        # 0x4282ab
  40fd97:	mov    r8,QWORD PTR [rdi+0x48]
  40fd9b:	lea    rcx,[rip+0x19e03]        # 0x429ba5
  40fda2:	test   eax,eax
  40fda4:	lea    rax,[rip+0x18505]        # 0x4282b0
  40fdab:	cmove  r9,rax
  40fdaf:	call   0x4082b0
  40fdb4:	jmp    0x40fa44
  40fdb9:	nop    DWORD PTR [rax+0x0]
  40fdc0:	test   eax,0x100000
  40fdc5:	je     0x40fde0
  40fdc7:	call   rsi
  40fdc9:	lea    rdx,[rax+0x30]
  40fdcd:	mov    ecx,r15d
  40fdd0:	call   0x421e68
  40fdd5:	jmp    0x40fd5b
  40fdd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fde0:	test   eax,0xc81
  40fde5:	je     0x40fd6e
  40fde7:	mov    rbx,QWORD PTR [rsp+0x20]
  40fdec:	lea    rcx,[rip+0x19b55]        # 0x429948
  40fdf3:	mov    edx,ebx
  40fdf5:	call   0x4082b0
  40fdfa:	mov    rax,rbx
  40fdfd:	add    rax,rax
  40fe00:	cmp    BYTE PTR [r14],0x0
  40fe04:	mov    QWORD PTR [rsp+0x20],rax
  40fe09:	jne    0x40fcd5
  40fe0f:	mov    rcx,QWORD PTR [rdi+0x18]
  40fe13:	call   0x421e50
  40fe18:	mov    rax,QWORD PTR [rsp+0x28]
  40fe1d:	mov    QWORD PTR [rdi+0x18],rax
  40fe21:	jmp    0x40fa44
  40fe26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe30:	mov    r14,rdx
  40fe33:	jmp    0x40fde7
  40fe35:	movzx  eax,al
  40fe38:	mov    rdx,r14
  40fe3b:	jmp    0x40fd62
  40fe40:	mov    ecx,0x22
  40fe45:	call   0x4097f0
  40fe4a:	mov    r9,rax
  40fe4d:	jmp    0x40fcf5
  40fe52:	mov    rcx,r14
  40fe55:	jmp    0x40fe13
  40fe57:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe5b:	mov    r8,QWORD PTR [rdi+0x48]
  40fe5f:	lea    rcx,[rip+0x19a6f]        # 0x4298d5
  40fe66:	call   0x4082b0
  40fe6b:	mov    rcx,QWORD PTR [rdi+0x18]
  40fe6f:	call   0x409620
  40fe74:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe78:	mov    r8,QWORD PTR [rdi+0x48]
  40fe7c:	lea    rcx,[rip+0x19a43]        # 0x4298c6
  40fe83:	call   0x4082b0
  40fe88:	jmp    0x40fa44
  40fe8d:	mov    rdx,QWORD PTR [rbp+0x30]
  40fe91:	mov    r9d,DWORD PTR [rdi+0x18]
  40fe95:	lea    rcx,[rip+0x19d93]        # 0x429c2f
  40fe9c:	mov    r8,QWORD PTR [rdi+0x48]
  40fea0:	call   0x4082b0
  40fea5:	jmp    0x40fa44
  40feaa:	mov    r8,QWORD PTR [rdi+0x48]
  40feae:	mov    rdx,QWORD PTR [rbp+0x30]
  40feb2:	lea    rcx,[rip+0x19a1c]        # 0x4298d5
  40feb9:	mov    rbx,QWORD PTR [rdi+0x18]
  40febd:	call   0x4082b0
  40fec2:	mov    rdx,rdi
  40fec5:	mov    ecx,0x3
  40feca:	call   QWORD PTR [rdi+0x38]
  40fecd:	mov    rdx,QWORD PTR [rdi+0x18]
  40fed1:	lea    rcx,[rip+0x19a3c]        # 0x429914
  40fed8:	call   0x4082b0
  40fedd:	test   BYTE PTR [rdi+0x10],0x40
  40fee1:	je     0x40feec
  40fee3:	mov    rcx,QWORD PTR [rdi+0x18]
  40fee7:	call   0x421e50
  40feec:	mov    QWORD PTR [rdi+0x18],rbx
  40fef0:	mov    r8,QWORD PTR [rdi+0x48]
  40fef4:	lea    rcx,[rip+0x199cb]        # 0x4298c6
  40fefb:	mov    rdx,QWORD PTR [rbp+0x30]
  40feff:	call   0x4082b0
  40ff04:	jmp    0x40fa44
  40ff09:	nop    DWORD PTR [rax+0x0]
  40ff10:	push   rdi
  40ff11:	push   rsi
  40ff12:	push   rbx
  40ff13:	sub    rsp,0x20
  40ff17:	mov    rax,QWORD PTR [rcx+0x90]
  40ff1e:	mov    rbx,rcx
  40ff21:	test   rax,rax
  40ff24:	je     0x40ff91
  40ff26:	mov    rdx,QWORD PTR [rbx]
  40ff29:	lea    rdi,[rax+0x8]
  40ff2d:	mov    rsi,rbx
  40ff30:	lea    r9,[rax+0xe8]
  40ff37:	and    rdi,0xfffffffffffffff8
  40ff3b:	mov    QWORD PTR [rax],rdx
  40ff3e:	mov    rdx,QWORD PTR [rbx+0xe0]
  40ff45:	mov    QWORD PTR [rax+0xe0],rdx
  40ff4c:	mov    rdx,rax
  40ff4f:	sub    rdx,rdi
  40ff52:	sub    rsi,rdx
  40ff55:	add    edx,0xe8
  40ff5b:	shr    edx,0x3
  40ff5e:	mov    ecx,edx
  40ff60:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40ff63:	mov    rcx,r9
  40ff66:	movsxd rax,DWORD PTR [rax+0xb0]
  40ff6d:	lea    rdx,[rax+rax*2]
  40ff71:	lea    r8,[rax+rdx*4]
  40ff75:	mov    rdx,QWORD PTR [rbx+0x78]
  40ff79:	shl    r8,0x3
  40ff7d:	call   0x421e08
  40ff82:	mov    rcx,rbx
  40ff85:	add    rsp,0x20
  40ff89:	pop    rbx
  40ff8a:	pop    rsi
  40ff8b:	pop    rdi
  40ff8c:	jmp    0x409ab0
  40ff91:	movsxd rax,DWORD PTR [rcx+0xb0]
  40ff98:	lea    rdx,[rax+rax*2]
  40ff9c:	lea    rax,[rax+rdx*4]
  40ffa0:	lea    rcx,[rax*8+0xe8]
  40ffa8:	call   0x409ce0
  40ffad:	mov    QWORD PTR [rbx+0x90],rax
  40ffb4:	jmp    0x40ff26
  40ffb9:	nop    DWORD PTR [rax+0x0]
  40ffc0:	push   r14
  40ffc2:	push   r13
  40ffc4:	push   r12
  40ffc6:	push   rbp
  40ffc7:	push   rdi
  40ffc8:	push   rsi
  40ffc9:	push   rbx
  40ffca:	sub    rsp,0x20
  40ffce:	lea    r12,[rcx+0x8]
  40ffd2:	mov    r14,rcx
  40ffd5:	mov    rbp,rcx
  40ffd8:	and    r12,0xfffffffffffffff8
  40ffdc:	sub    r14,r12
  40ffdf:	lea    r13d,[r14+0xe8]
  40ffe6:	shr    r13d,0x3
  40ffea:	nop    WORD PTR [rax+rax*1+0x0]
  40fff0:	mov    rbx,QWORD PTR [rbp+0x78]
  40fff4:	mov    esi,DWORD PTR [rbp+0xb0]
  40fffa:	jmp    0x410026
  40fffc:	nop    DWORD PTR [rax+0x0]
  410000:	cmp    eax,0x6
  410003:	jne    0x410013
  410005:	mov    rcx,QWORD PTR [rbx+0x20]
  410009:	test   rcx,rcx
  41000c:	je     0x410013
  41000e:	call   0x407de0
  410013:	sub    esi,0x1
  410016:	mov    QWORD PTR [rbx+0x20],0x0
  41001e:	add    rbx,0x68
  410022:	test   esi,esi
  410024:	jle    0x410080
  410026:	mov    edx,DWORD PTR [rbx+0x10]
  410029:	test   dl,0x40
  41002c:	jne    0x410064
  41002e:	mov    eax,edx
  410030:	and    eax,0xf000
  410035:	shr    eax,0xc
  410038:	cmp    eax,0x1
  41003b:	jne    0x410000
  41003d:	and    dh,0x4
  410040:	je     0x410013
  410042:	cmp    QWORD PTR [rbx+0x20],0x0
  410047:	je     0x410013
  410049:	lea    rax,[rip+0x186fd]        # 0x42874d
  410050:	cmp    rbp,0xf
  410054:	mov    QWORD PTR [rbx+0x18],rax
  410058:	jbe    0x410013
  41005a:	mov    rcx,rbx
  41005d:	call   0x40a610
  410062:	jmp    0x410013
  410064:	mov    rcx,QWORD PTR [rbx+0x18]
  410068:	call   0x421e50
  41006d:	mov    edx,DWORD PTR [rbx+0x10]
  410070:	mov    QWORD PTR [rbx+0x18],0x0
  410078:	and    edx,0xffffffbf
  41007b:	mov    DWORD PTR [rbx+0x10],edx
  41007e:	jmp    0x41002e
  410080:	mov    rax,QWORD PTR [rbp+0x90]
  410087:	test   rax,rax
  41008a:	je     0x4100ef
  41008c:	mov    rdx,QWORD PTR [rax]
  41008f:	mov    rsi,rax
  410092:	mov    rdi,r12
  410095:	sub    rsi,r14
  410098:	mov    QWORD PTR [rbp+0x0],rdx
  41009c:	mov    rcx,QWORD PTR [rax+0xe0]
  4100a3:	lea    rdx,[rax+0xe8]
  4100aa:	mov    QWORD PTR [rbp+0xe0],rcx
  4100b1:	mov    ecx,r13d
  4100b4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4100b7:	movsxd rax,DWORD PTR [rax+0xb0]
  4100be:	mov    rcx,QWORD PTR [rbp+0x78]
  4100c2:	lea    r8,[rax+rax*2]
  4100c6:	lea    r8,[rax+r8*4]
  4100ca:	shl    r8,0x3
  4100ce:	call   0x421e08
  4100d3:	mov    rcx,QWORD PTR [rbp+0x90]
  4100da:	call   0x421e50
  4100df:	mov    QWORD PTR [rbp+0x90],0x0
  4100ea:	jmp    0x40fff0
  4100ef:	add    rsp,0x20
  4100f3:	pop    rbx
  4100f4:	pop    rsi
  4100f5:	pop    rdi
  4100f6:	pop    rbp
  4100f7:	pop    r12
  4100f9:	pop    r13
  4100fb:	pop    r14
  4100fd:	ret    
  4100fe:	xchg   ax,ax
  410100:	push   rbp
  410101:	push   rdi
  410102:	push   rsi
  410103:	push   rbx
  410104:	sub    rsp,0x28
  410108:	mov    rbp,QWORD PTR [rcx+0x90]
  41010f:	mov    rbx,rcx
  410112:	test   rbp,rbp
  410115:	je     0x41019b
  41011b:	mov    QWORD PTR [rcx+0x90],0x0
  410126:	lea    rdi,[rbx+0x8]
  41012a:	mov    rsi,rbp
  41012d:	call   0x40ffc0
  410132:	mov    rax,QWORD PTR [rbp+0x0]
  410136:	and    rdi,0xfffffffffffffff8
  41013a:	lea    rdx,[rbp+0xe8]
  410141:	mov    QWORD PTR [rbx],rax
  410144:	mov    rax,QWORD PTR [rbp+0xe0]
  41014b:	mov    QWORD PTR [rbx+0xe0],rax
  410152:	mov    rax,rbx
  410155:	sub    rax,rdi
  410158:	sub    rsi,rax
  41015b:	add    eax,0xe8
  410160:	shr    eax,0x3
  410163:	mov    ecx,eax
  410165:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  410168:	movsxd rax,DWORD PTR [rbp+0xb0]
  41016f:	mov    rcx,QWORD PTR [rbx+0x78]
  410173:	lea    r8,[rax+rax*2]
  410177:	lea    r8,[rax+r8*4]
  41017b:	shl    r8,0x3
  41017f:	call   0x421e08
  410184:	mov    rcx,rbx
  410187:	mov    QWORD PTR [rbx+0x90],rbp
  41018e:	add    rsp,0x28
  410192:	pop    rbx
  410193:	pop    rsi
  410194:	pop    rdi
  410195:	pop    rbp
  410196:	jmp    0x409ab0
  41019b:	mov    rsi,QWORD PTR [rcx+0x28]
  41019f:	test   rsi,rsi
  4101a2:	je     0x4101ca
  4101a4:	mov    rbx,QWORD PTR [rip+0x139bd]        # 0x423b68
  4101ab:	call   QWORD PTR [rip+0x28dcb]        # 0x438f7c
  4101b1:	lea    rcx,[rax+0x60]
  4101b5:	mov    r8,rsi
  4101b8:	mov    rdx,rbx
  4101bb:	call   0x407ea0
  4101c0:	mov    ecx,0x1
  4101c5:	call   0x4082e0
  4101ca:	mov    rsi,QWORD PTR [rcx+0x30]
  4101ce:	lea    rax,[rip+0x1aefa]        # 0x42b0cf
  4101d5:	test   rsi,rsi
  4101d8:	cmove  rsi,rax
  4101dc:	jmp    0x4101a4
  4101de:	xchg   ax,ax
  4101e0:	push   r15
  4101e2:	push   r14
  4101e4:	push   r13
  4101e6:	push   r12
  4101e8:	push   rbp
  4101e9:	push   rdi
  4101ea:	push   rsi
  4101eb:	push   rbx
  4101ec:	sub    rsp,0x58
  4101f0:	lea    rdi,[rsp+0x48]
  4101f5:	mov    r13,rcx
  4101f8:	mov    DWORD PTR [rsp+0x48],0x0
  410200:	mov    rdx,rdi
  410203:	call   0x40a7e0
  410208:	test   rax,rax
  41020b:	mov    rbx,rax
  41020e:	je     0x4102e9
  410214:	lea    rdx,[rip+0x184dd]        # 0x4286f8
  41021b:	mov    rcx,rax
  41021e:	call   0x421e78
  410223:	test   rax,rax
  410226:	mov    rsi,rax
  410229:	je     0x410593
  41022f:	mov    edx,DWORD PTR [rsp+0x48]
  410233:	test   edx,edx
  410235:	jne    0x410340
  41023b:	lea    rcx,[rip+0x1850e]        # 0x428750
  410242:	mov    r9,rsi
  410245:	mov    r8d,0x3
  41024b:	mov    edx,0x1
  410250:	call   0x421e38
  410255:	mov    rbx,QWORD PTR [r13+0x60]
  410259:	mov    edx,0xa
  41025e:	mov    rcx,rbx
  410261:	call   0x421dc0
  410266:	test   rax,rax
  410269:	je     0x410282
  41026b:	lea    r8,[rax+0x1]
  41026f:	mov    r9,rsi
  410272:	mov    edx,0x1
  410277:	mov    rcx,rbx
  41027a:	sub    r8,rbx
  41027d:	call   0x421e38
  410282:	xor    ecx,ecx
  410284:	call   QWORD PTR [rip+0x28dca]        # 0x439054
  41028a:	mov    rcx,rdi
  41028d:	mov    QWORD PTR [rsp+0x48],rax
  410292:	call   QWORD PTR [rip+0x28d2c]        # 0x438fc4
  410298:	lea    rdx,[rip+0x19481]        # 0x429720
  41029f:	mov    r8,rax
  4102a2:	mov    rcx,rsi
  4102a5:	call   0x407ea0
  4102aa:	mov    r15d,DWORD PTR [r13+0xb4]
  4102b1:	mov    rbx,QWORD PTR [r13+0x78]
  4102b5:	mov    eax,DWORD PTR [rbx+0x10]
  4102b8:	test   al,0xf
  4102ba:	je     0x4102d3
  4102bc:	test   eax,0x280100
  4102c1:	jne    0x4102d3
  4102c3:	movzx  edx,WORD PTR [rbx+0x8]
  4102c7:	cmp    dx,0x8000
  4102cc:	je     0x410300
  4102ce:	cmp    dx,WORD PTR [rbx]
  4102d1:	je     0x410300
  4102d3:	sub    r15d,0x1
  4102d7:	add    rbx,0x68
  4102db:	test   r15d,r15d
  4102de:	jg     0x4102b5
  4102e0:	mov    rcx,rsi
  4102e3:	call   0x421e90
  4102e8:	nop
  4102e9:	add    rsp,0x58
  4102ed:	pop    rbx
  4102ee:	pop    rsi
  4102ef:	pop    rdi
  4102f0:	pop    rbp
  4102f1:	pop    r12
  4102f3:	pop    r13
  4102f5:	pop    r14
  4102f7:	pop    r15
  4102f9:	ret    
  4102fa:	nop    WORD PTR [rax+rax*1+0x0]
  410300:	test   al,0x10
  410302:	mov    rdi,rbx
  410305:	je     0x41031b
  410307:	movzx  edx,WORD PTR [rbx+0x4]
  41030b:	lea    rcx,[rdx+rdx*2]
  41030f:	lea    rcx,[rdx+rcx*4]
  410313:	mov    rdx,QWORD PTR [r13+0x78]
  410317:	lea    rdi,[rdx+rcx*8]
  41031b:	and    eax,0xf000
  410320:	shr    eax,0xc
  410323:	cmp    eax,0x7
  410326:	ja     0x4102d3
  410328:	lea    rcx,[rip+0x18429]        # 0x428758
  41032f:	movsxd rax,DWORD PTR [rcx+rax*4]
  410333:	add    rax,rcx
  410336:	jmp    rax
  410338:	nop    DWORD PTR [rax+rax*1+0x0]
  410340:	mov    rcx,rbx
  410343:	call   0x421e50
  410348:	jmp    0x41023b
  41034d:	nop    DWORD PTR [rax]
  410350:	mov    r12,QWORD PTR [rdi+0x20]
  410354:	test   r12,r12
  410357:	je     0x4102d3
  41035d:	mov    eax,DWORD PTR [r12]
  410361:	add    r12,0x8
  410365:	test   eax,eax
  410367:	jle    0x4102d3
  41036d:	sub    eax,0x1
  410370:	lea    rax,[r12+rax*8+0x8]
  410375:	mov    QWORD PTR [rsp+0x38],rax
  41037a:	nop    WORD PTR [rax+rax*1+0x0]
  410380:	add    r12,0x8
  410384:	mov    rbp,QWORD PTR [r12-0x8]
  410389:	xor    edx,edx
  41038b:	mov    rcx,rbp
  41038e:	call   0x40cb30
  410393:	test   rax,rax
  410396:	mov    r14,rax
  410399:	je     0x4103e9
  41039b:	mov    r8,QWORD PTR [rdi+0x50]
  41039f:	lea    rdx,[rip+0x194cb]        # 0x429871
  4103a6:	mov    rcx,rsi
  4103a9:	call   0x407ea0
  4103ae:	xchg   ax,ax
  4103b0:	mov    r9,r14
  4103b3:	mov    r8,rdi
  4103b6:	mov    edx,0x1
  4103bb:	mov    rcx,rsi
  4103be:	call   0x4088b0
  4103c3:	mov    rdx,r14
  4103c6:	mov    rcx,rbp
  4103c9:	call   0x40cc80
  4103ce:	test   rax,rax
  4103d1:	mov    r14,rax
  4103d4:	jne    0x4103b0
  4103d6:	mov    r8,QWORD PTR [rdi+0x50]
  4103da:	lea    rdx,[rip+0x17ed5]        # 0x4282b6
  4103e1:	mov    rcx,rsi
  4103e4:	call   0x407ea0
  4103e9:	cmp    r12,QWORD PTR [rsp+0x38]
  4103ee:	jne    0x410380
  4103f0:	jmp    0x4102d3
  4103f5:	mov    r8,QWORD PTR [rdi+0x20]
  4103f9:	test   r8,r8
  4103fc:	je     0x410568
  410402:	mov    rdx,rdi
  410405:	mov    rcx,rsi
  410408:	call   0x408140
  41040d:	jmp    0x4102d3
  410412:	test   BYTE PTR [rdi+0x10],0x20
  410416:	mov    r8,QWORD PTR [rbx+0x50]
  41041a:	mov    rax,r8
  41041d:	je     0x410423
  41041f:	mov    rax,QWORD PTR [rbx+0x58]
  410423:	test   rax,rax
  410426:	lea    rdx,[rip+0x18327]        # 0x428754
  41042d:	mov    rcx,rsi
  410430:	cmovne r8,rax
  410434:	call   0x407ea0
  410439:	jmp    0x4102d3
  41043e:	xchg   ax,ax
  410440:	mov    eax,DWORD PTR [rdi+0x10]
  410443:	test   ah,0x4
  410446:	je     0x410606
  41044c:	mov    rbp,QWORD PTR [rdi+0x20]
  410450:	mov    edx,DWORD PTR [rbp+0x0]
  410453:	add    rbp,0x8
  410457:	cmp    edx,0x1
  41045a:	jle    0x41061a
  410460:	and    eax,0xffffffdf
  410463:	mov    DWORD PTR [rdi+0x10],eax
  410466:	lea    eax,[rdx-0x1]
  410469:	lea    r12,[rbp+rax*8+0x8]
  41046e:	xchg   ax,ax
  410470:	add    rbp,0x8
  410474:	mov    r8,QWORD PTR [rbp-0x8]
  410478:	mov    rdx,rdi
  41047b:	mov    rcx,rsi
  41047e:	call   0x408140
  410483:	cmp    rbp,r12
  410486:	jne    0x410470
  410488:	jmp    0x4102d3
  41048d:	nop    DWORD PTR [rax]
  410490:	mov    rbp,QWORD PTR [rdi+0x18]
  410494:	mov    rdx,rdi
  410497:	mov    ecx,0x3
  41049c:	call   QWORD PTR [rdi+0x38]
  41049f:	mov    r8,QWORD PTR [rdi+0x18]
  4104a3:	mov    rdx,rdi
  4104a6:	mov    rcx,rsi
  4104a9:	call   0x408140
  4104ae:	mov    QWORD PTR [rdi+0x18],rbp
  4104b2:	jmp    0x4102d3
  4104b7:	nop    WORD PTR [rax+rax*1+0x0]
  4104c0:	mov    eax,DWORD PTR [rdi+0x18]
  4104c3:	lea    r8,[rip+0x17de1]        # 0x4282ab
  4104ca:	mov    rdx,rdi
  4104cd:	mov    rcx,rsi
  4104d0:	test   eax,eax
  4104d2:	lea    rax,[rip+0x17dd7]        # 0x4282b0
  4104d9:	cmove  r8,rax
  4104dd:	call   0x408140
  4104e2:	jmp    0x4102d3
  4104e7:	nop    WORD PTR [rax+rax*1+0x0]
  4104f0:	mov    rdx,rdi
  4104f3:	mov    rbp,QWORD PTR [rdi+0x18]
  4104f7:	mov    ecx,0x3
  4104fc:	call   QWORD PTR [rdi+0x38]
  4104ff:	mov    r12,QWORD PTR [rdi+0x18]
  410503:	mov    QWORD PTR [rdi+0x18],rbp
  410507:	mov    rcx,r12
  41050a:	call   0x421d98
  41050f:	lea    rcx,[rax+0x3]
  410513:	mov    r14,rax
  410516:	call   0x409ce0
  41051b:	lea    r8,[r14+0x1]
  41051f:	lea    rcx,[rax+0x1]
  410523:	mov    rbp,rax
  410526:	mov    rdx,r12
  410529:	mov    BYTE PTR [rax],0x3d
  41052c:	call   0x421e08
  410531:	mov    r8,rbp
  410534:	mov    rdx,rdi
  410537:	mov    rcx,rsi
  41053a:	call   0x408140
  41053f:	mov    rcx,rbp
  410542:	call   0x421e50
  410547:	mov    rcx,r12
  41054a:	call   0x421e50
  41054f:	jmp    0x4102d3
  410554:	movsxd r8,DWORD PTR [rdi+0x18]
  410558:	mov    rdx,rdi
  41055b:	mov    rcx,rsi
  41055e:	call   0x408140
  410563:	jmp    0x4102d3
  410568:	cmp    DWORD PTR [r13+0x0],0x1ffff
  410570:	jle    0x4102d3
  410576:	movzx  edx,WORD PTR [rdi]
  410579:	mov    rax,QWORD PTR [r13+0xc8]
  410580:	mov    r8,QWORD PTR [rdi+0x18]
  410584:	cmp    QWORD PTR [rax+rdx*8],r8
  410588:	jne    0x410402
  41058e:	jmp    0x4102d3
  410593:	mov    rbp,QWORD PTR [r13+0x28]
  410597:	mov    rdi,QWORD PTR [rip+0x13642]        # 0x423be0
  41059e:	mov    rsi,QWORD PTR [rip+0x289d7]        # 0x438f7c
  4105a5:	call   rsi
  4105a7:	lea    rcx,[rax+0x60]
  4105ab:	mov    r8,rbp
  4105ae:	mov    rdx,rdi
  4105b1:	call   0x407ea0
  4105b6:	mov    rdi,QWORD PTR [rip+0x28a0f]        # 0x438fcc
  4105bd:	call   rdi
  4105bf:	mov    ecx,DWORD PTR [rax]
  4105c1:	call   0x421da8
  4105c6:	mov    r12,rax
  4105c9:	call   rdi
  4105cb:	mov    rdi,QWORD PTR [rip+0x13576]        # 0x423b48
  4105d2:	mov    ebp,DWORD PTR [rax]
  4105d4:	call   rsi
  4105d6:	lea    rcx,[rax+0x60]
  4105da:	mov    QWORD PTR [rsp+0x20],rbx
  4105df:	mov    r9,r12
  4105e2:	mov    r8d,ebp
  4105e5:	mov    rdx,rdi
  4105e8:	call   0x407ea0
  4105ed:	mov    ecx,DWORD PTR [rsp+0x48]
  4105f1:	test   ecx,ecx
  4105f3:	je     0x4102e9
  4105f9:	mov    rcx,rbx
  4105fc:	call   0x421e50
  410601:	jmp    0x4102e9
  410606:	mov    r8,QWORD PTR [rdi+0x18]
  41060a:	mov    rdx,rdi
  41060d:	mov    rcx,rsi
  410610:	call   0x408140
  410615:	jmp    0x4102d3
  41061a:	test   edx,edx
  41061c:	jg     0x410466
  410622:	jmp    0x4102d3
  410627:	nop    WORD PTR [rax+rax*1+0x0]
  410630:	cmp    rcx,0xf
  410634:	jbe    0x410643
  410636:	test   rdx,rdx
  410639:	je     0x410643
  41063b:	mov    rcx,rdx
  41063e:	jmp    0x40a610
  410643:	repz ret 
  410645:	nop
  410646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410650:	push   rbx
  410651:	sub    rsp,0x20
  410655:	cmp    rcx,0xf
  410659:	jbe    0x410690
  41065b:	test   rdx,rdx
  41065e:	je     0x410690
  410660:	test   BYTE PTR [rdx+0x10],0x8
  410664:	jne    0x410690
  410666:	mov    rcx,QWORD PTR [rdx+0x18]
  41066a:	test   rcx,rcx
  41066d:	je     0x410690
  41066f:	mov    rbx,rdx
  410672:	call   0x409a50
  410677:	lea    rcx,[rbx+0x20]
  41067b:	mov    rdx,rax
  41067e:	add    rsp,0x20
  410682:	pop    rbx
  410683:	jmp    0x409d30
  410688:	nop    DWORD PTR [rax+rax*1+0x0]
  410690:	add    rsp,0x20
  410694:	pop    rbx
  410695:	ret    
  410696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106a0:	push   rbx
  4106a1:	test   r8d,r8d
  4106a4:	jle    0x4106ea
  4106a6:	lea    ebx,[r8-0x1]
  4106aa:	xor    r8d,r8d
  4106ad:	add    rbx,0x1
  4106b1:	jmp    0x4106bc
  4106b3:	add    r8,0x1
  4106b7:	cmp    r8,rbx
  4106ba:	je     0x4106ea
  4106bc:	movzx  r10d,BYTE PTR [rcx+r8*1]
  4106c1:	movzx  r9d,BYTE PTR [rdx+r8*1]
  4106c6:	cmp    r10b,r9b
  4106c9:	je     0x4106e5
  4106cb:	lea    r11,[rip+0x12eee]        # 0x4235c0
  4106d2:	movzx  eax,r10b
  4106d6:	movzx  eax,BYTE PTR [r11+rax*1]
  4106db:	movzx  r9d,BYTE PTR [r11+r9*1]
  4106e0:	sub    eax,r9d
  4106e3:	jne    0x4106ec
  4106e5:	test   r10b,r10b
  4106e8:	jne    0x4106b3
  4106ea:	xor    eax,eax
  4106ec:	pop    rbx
  4106ed:	ret    
  4106ee:	xchg   ax,ax
  4106f0:	push   r15
  4106f2:	push   r14
  4106f4:	push   r13
  4106f6:	push   r12
  4106f8:	push   rbp
  4106f9:	push   rdi
  4106fa:	push   rsi
  4106fb:	push   rbx
  4106fc:	sub    rsp,0xd8
  410703:	mov    rbx,rdx
  410706:	lea    rdx,[rdx+0x80]
  41070d:	mov    QWORD PTR [rsp+0x120],rcx
  410715:	mov    QWORD PTR [rsp+0x130],r8
  41071d:	mov    r12,rbx
  410720:	mov    esi,r12d
  410723:	add    r12,0x1
  410727:	movzx  eax,BYTE PTR [r12-0x1]
  41072d:	sub    esi,ebx
  41072f:	test   al,al
  410731:	je     0x410990
  410737:	cmp    al,0x3d
  410739:	jne    0x410910
  41073f:	lea    r9,[rsp+0x50]
  410744:	movsxd rdi,esi
  410747:	mov    rdx,rbx
  41074a:	mov    r8,rdi
  41074d:	mov    rcx,r9
  410750:	call   0x421e08
  410755:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  41075a:	mov    rbx,rax
  41075d:	cmp    esi,0x1
  410760:	jle    0x410920
  410766:	mov    rax,QWORD PTR [rsp+0x120]
  41076e:	mov    rcx,QWORD PTR [rsp+0x120]
  410776:	xor    r15d,r15d
  410779:	mov    QWORD PTR [rsp+0x40],r12
  41077e:	mov    BYTE PTR [rsp+0x3f],0x0
  410783:	mov    r12d,r15d
  410786:	mov    DWORD PTR [rsp+0x38],0x0
  41078e:	xor    ebp,ebp
  410790:	mov    rax,QWORD PTR [rax+0x78]
  410794:	mov    edi,DWORD PTR [rcx+0xb0]
  41079a:	mov    r14,rax
  41079d:	mov    QWORD PTR [rsp+0x48],rax
  4107a2:	movsxd rax,esi
  4107a5:	mov    r15,r14
  4107a8:	mov    r13,rax
  4107ab:	jmp    0x4107c4
  4107ad:	nop    DWORD PTR [rax]
  4107b0:	cmp    eax,0x80100
  4107b5:	je     0x4107d8
  4107b7:	add    r12d,0x1
  4107bb:	add    r15,0x68
  4107bf:	cmp    edi,r12d
  4107c2:	jle    0x41080e
  4107c4:	mov    r14,QWORD PTR [r15+0x50]
  4107c8:	test   r14,r14
  4107cb:	je     0x4107b7
  4107cd:	mov    eax,DWORD PTR [r15+0x10]
  4107d1:	test   eax,0x280000
  4107d6:	jne    0x4107b0
  4107d8:	mov    r8d,esi
  4107db:	mov    rdx,r14
  4107de:	mov    rcx,rbx
  4107e1:	call   0x4106a0
  4107e6:	test   eax,eax
  4107e8:	jne    0x410950
  4107ee:	cmp    BYTE PTR [r14+r13*1],0x0
  4107f3:	je     0x4109d4
  4107f9:	mov    DWORD PTR [rsp+0x38],r12d
  4107fe:	add    r12d,0x1
  410802:	add    ebp,0x1
  410805:	add    r15,0x68
  410809:	cmp    edi,r12d
  41080c:	jg     0x4107c4
  41080e:	test   ebp,ebp
  410810:	mov    r12,QWORD PTR [rsp+0x40]
  410815:	je     0x4109a0
  41081b:	cmp    ebp,0x1
  41081e:	je     0x410aa0
  410824:	mov    rax,QWORD PTR [rsp+0x120]
  41082c:	test   BYTE PTR [rax+0x10],0x4
  410830:	je     0x410932
  410836:	mov    r12,QWORD PTR [rax+0x20]
  41083a:	mov    rdi,QWORD PTR [rip+0x13267]        # 0x423aa8
  410841:	mov    rsi,QWORD PTR [rip+0x28734]        # 0x438f7c
  410848:	call   rsi
  41084a:	lea    rcx,[rax+0x60]
  41084e:	mov    DWORD PTR [rsp+0x20],ebp
  410852:	mov    r9,rbx
  410855:	mov    r8,r12
  410858:	mov    rdx,rdi
  41085b:	call   0x407ea0
  410860:	cmp    ebp,0x4
  410863:	jg     0x410b32
  410869:	mov    rcx,rbx
  41086c:	lea    rbp,[rip+0x17e93]        # 0x428706
  410873:	call   0x421d98
  410878:	mov    r12d,eax
  41087b:	mov    rax,QWORD PTR [rsp+0x120]
  410883:	test   BYTE PTR [rax+0x10],0x3
  410887:	lea    rax,[rip+0x18fbb]        # 0x429849
  41088e:	cmovne rbp,rax
  410892:	mov    rax,QWORD PTR [rsp+0x120]
  41089a:	xor    r13d,r13d
  41089d:	mov    rdi,QWORD PTR [rax+0x78]
  4108a1:	call   rsi
  4108a3:	mov    rcx,QWORD PTR [rip+0x131f6]        # 0x423aa0
  4108aa:	lea    rdx,[rax+0x60]
  4108ae:	call   0x421e60
  4108b3:	mov    r14,QWORD PTR [rdi+0x50]
  4108b7:	test   r14,r14
  4108ba:	je     0x4108f1
  4108bc:	mov    r8d,r12d
  4108bf:	mov    rdx,r14
  4108c2:	mov    rcx,rbx
  4108c5:	call   0x4106a0
  4108ca:	test   eax,eax
  4108cc:	je     0x410b4f
  4108d2:	mov    r14,QWORD PTR [rdi+0x58]
  4108d6:	test   r14,r14
  4108d9:	je     0x4108f1
  4108db:	mov    r8d,r12d
  4108de:	mov    rdx,r14
  4108e1:	mov    rcx,rbx
  4108e4:	call   0x4106a0
  4108e9:	test   eax,eax
  4108eb:	je     0x410b4f
  4108f1:	mov    rax,QWORD PTR [rsp+0x120]
  4108f9:	add    rdi,0x68
  4108fd:	add    r13d,0x1
  410901:	cmp    r13d,DWORD PTR [rax+0xb0]
  410908:	jl     0x4108b3
  41090a:	jmp    0x410b32
  41090f:	nop
  410910:	cmp    r12,rdx
  410913:	jne    0x410720
  410919:	nop    DWORD PTR [rax+0x0]
  410920:	mov    rax,QWORD PTR [rsp+0x120]
  410928:	test   BYTE PTR [rax+0x10],0x4
  41092c:	jne    0x410b0f
  410932:	mov    eax,0xffffffff
  410937:	add    rsp,0xd8
  41093e:	pop    rbx
  41093f:	pop    rsi
  410940:	pop    rdi
  410941:	pop    rbp
  410942:	pop    r12
  410944:	pop    r13
  410946:	pop    r14
  410948:	pop    r15
  41094a:	ret    
  41094b:	nop    DWORD PTR [rax+rax*1+0x0]
  410950:	mov    r14,QWORD PTR [r15+0x58]
  410954:	test   r14,r14
  410957:	je     0x4107b7
  41095d:	mov    r8d,esi
  410960:	mov    rdx,r14
  410963:	mov    rcx,rbx
  410966:	call   0x4106a0
  41096b:	test   eax,eax
  41096d:	jne    0x4107b7
  410973:	cmp    BYTE PTR [r14+r13*1],0x0
  410978:	je     0x410aaa
  41097e:	mov    BYTE PTR [rsp+0x3f],0x1
  410983:	jmp    0x4107f9
  410988:	nop    DWORD PTR [rax+rax*1+0x0]
  410990:	xor    r12d,r12d
  410993:	jmp    0x41075d
  410998:	nop    DWORD PTR [rax+rax*1+0x0]
  4109a0:	mov    rax,QWORD PTR [rsp+0x120]
  4109a8:	test   r12,r12
  4109ab:	mov    eax,DWORD PTR [rax+0x10]
  4109ae:	je     0x410abc
  4109b4:	test   al,0x4
  4109b6:	je     0x410932
  4109bc:	mov    rax,QWORD PTR [rsp+0x120]
  4109c4:	mov    rsi,QWORD PTR [rip+0x1312d]        # 0x423af8
  4109cb:	mov    rdi,QWORD PTR [rax+0x20]
  4109cf:	jmp    0x410b1a
  4109d4:	mov    r15d,r12d
  4109d7:	mov    r12,QWORD PTR [rsp+0x40]
  4109dc:	movsxd r10,r15d
  4109df:	mov    rcx,QWORD PTR [rsp+0x48]
  4109e4:	lea    rax,[r10+r10*2]
  4109e8:	lea    rax,[r10+rax*4]
  4109ec:	lea    rbx,[rcx+rax*8]
  4109f0:	test   DWORD PTR [rbx+0x10],0x280000
  4109f7:	je     0x410a70
  4109f9:	mov    rax,QWORD PTR [rsp+0x120]
  410a01:	test   BYTE PTR [rax+0x10],0x4
  410a05:	je     0x410932
  410a0b:	mov    r12,QWORD PTR [rbx+0x50]
  410a0f:	mov    rbp,QWORD PTR [rax+0x28]
  410a13:	mov    rdi,QWORD PTR [rip+0x130c6]        # 0x423ae0
  410a1a:	mov    rsi,QWORD PTR [rip+0x2855b]        # 0x438f7c
  410a21:	call   rsi
  410a23:	lea    rcx,[rax+0x60]
  410a27:	mov    r9,r12
  410a2a:	mov    r8,rbp
  410a2d:	mov    rdx,rdi
  410a30:	call   0x407ea0
  410a35:	mov    rbx,QWORD PTR [rbx+0x40]
  410a39:	test   rbx,rbx
  410a3c:	je     0x410a53
  410a3e:	call   rsi
  410a40:	lea    rdx,[rip+0x18ed2]        # 0x429919
  410a47:	lea    rcx,[rax+0x60]
  410a4b:	mov    r8,rbx
  410a4e:	call   0x407ea0
  410a53:	call   rsi
  410a55:	lea    rdx,[rax+0x60]
  410a59:	mov    ecx,0xa
  410a5e:	call   0x421e68
  410a63:	jmp    0x410b32
  410a68:	nop    DWORD PTR [rax+rax*1+0x0]
  410a70:	cmp    BYTE PTR [rsp+0x3f],0x0
  410a75:	je     0x410a83
  410a77:	mov    rax,QWORD PTR [rsp+0x130]
  410a7f:	or     DWORD PTR [rax+0x10],0x20
  410a83:	mov    rax,QWORD PTR [rsp+0x130]
  410a8b:	mov    QWORD PTR [rax],rbx
  410a8e:	mov    QWORD PTR [rax+0x8],r12
  410a92:	mov    DWORD PTR [rax+0x14],0x2
  410a99:	xor    eax,eax
  410a9b:	jmp    0x410937
  410aa0:	mov    r15d,DWORD PTR [rsp+0x38]
  410aa5:	jmp    0x4109dc
  410aaa:	mov    r15d,r12d
  410aad:	mov    BYTE PTR [rsp+0x3f],0x1
  410ab2:	mov    r12,QWORD PTR [rsp+0x40]
  410ab7:	jmp    0x4109dc
  410abc:	test   al,0x3
  410abe:	jne    0x4109b4
  410ac4:	mov    rcx,QWORD PTR [rsp+0x120]
  410acc:	movzx  edx,WORD PTR [rcx+0xae]
  410ad3:	cmp    dx,0x8000
  410ad8:	je     0x4109b4
  410ade:	movzx  eax,dx
  410ae1:	mov    rcx,QWORD PTR [rsp+0x48]
  410ae6:	lea    rdx,[rax+rax*2]
  410aea:	lea    rax,[rax+rdx*4]
  410aee:	lea    rax,[rcx+rax*8]
  410af2:	mov    rcx,QWORD PTR [rsp+0x130]
  410afa:	mov    QWORD PTR [rcx],rax
  410afd:	mov    QWORD PTR [rcx+0x8],rbx
  410b01:	xor    eax,eax
  410b03:	mov    DWORD PTR [rcx+0x14],0x3
  410b0a:	jmp    0x410937
  410b0f:	mov    rdi,QWORD PTR [rax+0x28]
  410b13:	mov    rsi,QWORD PTR [rip+0x12ffe]        # 0x423b18
  410b1a:	call   QWORD PTR [rip+0x2845c]        # 0x438f7c
  410b20:	lea    rcx,[rax+0x60]
  410b24:	mov    r9,rbx
  410b27:	mov    r8,rdi
  410b2a:	mov    rdx,rsi
  410b2d:	call   0x407ea0
  410b32:	mov    rcx,QWORD PTR [rsp+0x120]
  410b3a:	mov    edx,0x1
  410b3f:	call   QWORD PTR [rcx+0x98]
  410b45:	mov    ecx,0x1
  410b4a:	call   0x421f40
  410b4f:	call   rsi
  410b51:	lea    rdx,[rip+0x18b6c]        # 0x4296c4
  410b58:	lea    rcx,[rax+0x60]
  410b5c:	mov    r9,r14
  410b5f:	mov    r8,rbp
  410b62:	call   0x407ea0
  410b67:	jmp    0x4108f1
  410b6c:	nop    DWORD PTR [rax+0x0]
  410b70:	push   rsi
  410b71:	push   rbx
  410b72:	sub    rsp,0x38
  410b76:	mov    rax,QWORD PTR [rcx+0x18]
  410b7a:	test   rax,rax
  410b7d:	je     0x410b8a
  410b7f:	movzx  eax,BYTE PTR [rax]
  410b82:	test   al,al
  410b84:	jne    0x410c50
  410b8a:	mov    eax,DWORD PTR [rcx+0x14]
  410b8d:	cmp    eax,DWORD PTR [rcx+0x4]
  410b90:	jae    0x410bff
  410b92:	mov    rbx,rcx
  410b95:	mov    r8,rdx
  410b98:	mov    ecx,eax
  410b9a:	mov    rdx,QWORD PTR [rbx+0x8]
  410b9e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  410ba2:	mov    ecx,DWORD PTR [rbx+0x10]
  410ba5:	test   cl,0x3
  410ba8:	mov    QWORD PTR [rbx+0x18],rdx
  410bac:	jne    0x410bf2
  410bae:	add    eax,0x1
  410bb1:	mov    DWORD PTR [rbx+0x14],eax
  410bb4:	cmp    BYTE PTR [rdx],0x2d
  410bb7:	jne    0x410c40
  410bbd:	nop    DWORD PTR [rax]
  410bc0:	add    rdx,0x1
  410bc4:	cmp    BYTE PTR [rdx],0x2d
  410bc7:	je     0x410bc0
  410bc9:	movzx  esi,WORD PTR [rbx+0xae]
  410bd0:	mov    eax,0xffff8000
  410bd5:	mov    rcx,rbx
  410bd8:	mov    WORD PTR [rbx+0xae],ax
  410bdf:	call   0x4106f0
  410be4:	mov    WORD PTR [rbx+0xae],si
  410beb:	add    rsp,0x38
  410bef:	pop    rbx
  410bf0:	pop    rsi
  410bf1:	ret    
  410bf2:	lea    r9,[rdx+0x1]
  410bf6:	mov    QWORD PTR [rbx+0x18],r9
  410bfa:	cmp    BYTE PTR [rdx],0x2d
  410bfd:	je     0x410c10
  410bff:	mov    eax,0x1
  410c04:	add    rsp,0x38
  410c08:	pop    rbx
  410c09:	pop    rsi
  410c0a:	ret    
  410c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c10:	cmp    BYTE PTR [rdx+0x1],0x0
  410c14:	je     0x410bff
  410c16:	add    eax,0x1
  410c19:	mov    DWORD PTR [rbx+0x14],eax
  410c1c:	movzx  eax,BYTE PTR [rdx+0x1]
  410c20:	cmp    al,0x2d
  410c22:	jne    0x410c64
  410c24:	lea    rax,[rdx+0x2]
  410c28:	mov    QWORD PTR [rbx+0x18],rax
  410c2c:	cmp    BYTE PTR [rdx+0x2],0x0
  410c30:	je     0x410bff
  410c32:	and    ecx,0x1
  410c35:	je     0x410c7a
  410c37:	mov    rdx,rax
  410c3a:	nop    WORD PTR [rax+rax*1+0x0]
  410c40:	mov    rcx,rbx
  410c43:	add    rsp,0x38
  410c47:	pop    rbx
  410c48:	pop    rsi
  410c49:	jmp    0x4106f0
  410c4e:	xchg   ax,ax
  410c50:	lea    r9,[rdx+0x14]
  410c54:	mov    r8,rdx
  410c57:	mov    edx,eax
  410c59:	add    rsp,0x38
  410c5d:	pop    rbx
  410c5e:	pop    rsi
  410c5f:	jmp    0x4094a0
  410c64:	and    ecx,0x2
  410c67:	jne    0x410c6e
  410c69:	mov    rdx,r9
  410c6c:	jmp    0x410c40
  410c6e:	movzx  edx,al
  410c71:	lea    r9,[r8+0x14]
  410c75:	mov    rcx,rbx
  410c78:	jmp    0x410c59
  410c7a:	mov    rsi,QWORD PTR [rbx+0x20]
  410c7e:	mov    QWORD PTR [rsp+0x28],rdx
  410c83:	mov    rbx,QWORD PTR [rip+0x12e6e]        # 0x423af8
  410c8a:	call   QWORD PTR [rip+0x282ec]        # 0x438f7c
  410c90:	mov    rdx,QWORD PTR [rsp+0x28]
  410c95:	lea    rcx,[rax+0x60]
  410c99:	mov    r8,rsi
  410c9c:	mov    r9,rdx
  410c9f:	mov    rdx,rbx
  410ca2:	call   0x407ea0
  410ca7:	or     eax,0xffffffff
  410caa:	jmp    0x410c04
  410caf:	nop
  410cb0:	push   rdi
  410cb1:	push   rsi
  410cb2:	push   rbx
  410cb3:	sub    rsp,0x50
  410cb7:	or     DWORD PTR [rcx+0x10],0x8000
  410cbe:	lea    rdi,[rsp+0x30]
  410cc3:	mov    rbx,rcx
  410cc6:	mov    DWORD PTR [rcx+0x14],0x1
  410ccd:	mov    QWORD PTR [rcx+0x18],0x0
  410cd5:	mov    rdx,rdi
  410cd8:	mov    rcx,rbx
  410cdb:	mov    QWORD PTR [rsp+0x30],0x0
  410ce4:	mov    QWORD PTR [rsp+0x38],0x0
  410ced:	mov    DWORD PTR [rsp+0x40],0x2
  410cf5:	mov    DWORD PTR [rsp+0x44],0x0
  410cfd:	call   0x410b70
  410d02:	test   eax,eax
  410d04:	mov    esi,eax
  410d06:	jne    0x410d15
  410d08:	mov    rdx,rdi
  410d0b:	mov    rcx,rbx
  410d0e:	call   0x40a790
  410d13:	mov    esi,eax
  410d15:	cmp    esi,0xffffffff
  410d18:	je     0x410d50
  410d1a:	cmp    esi,0x1
  410d1d:	je     0x410d70
  410d1f:	mov    eax,DWORD PTR [rsp+0x40]
  410d23:	mov    edx,eax
  410d25:	and    edx,0x20020
  410d2b:	cmp    edx,0x20000
  410d31:	je     0x410d3f
  410d33:	and    eax,0x40020
  410d38:	cmp    eax,0x40020
  410d3d:	jne    0x410cd5
  410d3f:	mov    rdx,rdi
  410d42:	mov    rcx,rbx
  410d45:	call   0x4092f0
  410d4a:	test   eax,eax
  410d4c:	je     0x410cd5
  410d4e:	xchg   ax,ax
  410d50:	mov    edx,DWORD PTR [rbx+0x10]
  410d53:	mov    eax,esi
  410d55:	test   dl,0x4
  410d58:	jne    0x410d83
  410d5a:	and    dh,0x7f
  410d5d:	mov    DWORD PTR [rbx+0x10],edx
  410d60:	add    rsp,0x50
  410d64:	pop    rbx
  410d65:	pop    rsi
  410d66:	pop    rdi
  410d67:	ret    
  410d68:	nop    DWORD PTR [rax+rax*1+0x0]
  410d70:	mov    edx,DWORD PTR [rbx+0x10]
  410d73:	xor    eax,eax
  410d75:	and    dh,0x7f
  410d78:	mov    DWORD PTR [rbx+0x10],edx
  410d7b:	add    rsp,0x50
  410d7f:	pop    rbx
  410d80:	pop    rsi
  410d81:	pop    rdi
  410d82:	ret    
  410d83:	mov    DWORD PTR [rsp+0x2c],esi
  410d87:	mov    edx,0x1
  410d8c:	mov    rcx,rbx
  410d8f:	call   QWORD PTR [rbx+0x98]
  410d95:	mov    edx,DWORD PTR [rbx+0x10]
  410d98:	mov    eax,DWORD PTR [rsp+0x2c]
  410d9c:	and    dh,0x7f
  410d9f:	mov    DWORD PTR [rbx+0x10],edx
  410da2:	add    rsp,0x50
  410da6:	pop    rbx
  410da7:	pop    rsi
  410da8:	pop    rdi
  410da9:	ret    
  410daa:	nop    WORD PTR [rax+rax*1+0x0]
  410db0:	push   rsi
  410db1:	push   rbx
  410db2:	sub    rsp,0x58
  410db6:	lea    rsi,[rsp+0x30]
  410dbb:	mov    rbx,rcx
  410dbe:	mov    rdx,rsi
  410dc1:	mov    rcx,rbx
  410dc4:	mov    QWORD PTR [rsp+0x30],0x0
  410dcd:	mov    QWORD PTR [rsp+0x38],0x0
  410dd6:	mov    DWORD PTR [rsp+0x40],0x4
  410dde:	mov    DWORD PTR [rsp+0x44],0x0
  410de6:	call   0x410b70
  410deb:	test   eax,eax
  410ded:	jne    0x410dfa
  410def:	mov    rdx,rsi
  410df2:	mov    rcx,rbx
  410df5:	call   0x40a790
  410dfa:	cmp    eax,0xffffffff
  410dfd:	je     0x410e55
  410dff:	cmp    eax,0x1
  410e02:	je     0x410e70
  410e04:	mov    eax,DWORD PTR [rsp+0x40]
  410e08:	test   eax,0x20020
  410e0d:	je     0x410e42
  410e0f:	mov    edx,eax
  410e11:	and    edx,0x40020
  410e17:	cmp    edx,0x20
  410e1a:	je     0x410e42
  410e1c:	mov    edx,eax
  410e1e:	and    edx,0x400020
  410e24:	cmp    edx,0x400000
  410e2a:	je     0x410e38
  410e2c:	and    eax,0x800020
  410e31:	cmp    eax,0x800020
  410e36:	jne    0x410dbe
  410e38:	mov    rax,QWORD PTR [rsp+0x30]
  410e3d:	sub    WORD PTR [rax+0xe],0x1
  410e42:	mov    rdx,rsi
  410e45:	mov    rcx,rbx
  410e48:	call   0x4092f0
  410e4d:	test   eax,eax
  410e4f:	je     0x410dbe
  410e55:	test   BYTE PTR [rbx+0x10],0x4
  410e59:	mov    eax,0xffffffff
  410e5e:	jne    0x410e80
  410e60:	add    rsp,0x58
  410e64:	pop    rbx
  410e65:	pop    rsi
  410e66:	ret    
  410e67:	nop    WORD PTR [rax+rax*1+0x0]
  410e70:	xor    al,al
  410e72:	add    rsp,0x58
  410e76:	pop    rbx
  410e77:	pop    rsi
  410e78:	ret    
  410e79:	nop    DWORD PTR [rax+0x0]
  410e80:	mov    DWORD PTR [rsp+0x2c],eax
  410e84:	mov    edx,0x1
  410e89:	mov    rcx,rbx
  410e8c:	call   QWORD PTR [rbx+0x98]
  410e92:	mov    eax,DWORD PTR [rsp+0x2c]
  410e96:	add    rsp,0x58
  410e9a:	pop    rbx
  410e9b:	pop    rsi
  410e9c:	ret    
  410e9d:	nop    DWORD PTR [rax]
  410ea0:	push   r14
  410ea2:	push   r13
  410ea4:	push   r12
  410ea6:	push   rbp
  410ea7:	push   rdi
  410ea8:	push   rsi
  410ea9:	push   rbx
  410eaa:	sub    rsp,0x20
  410eae:	mov    rax,QWORD PTR [rip+0x23fb3]        # 0x434e68
  410eb5:	mov    rbp,rcx
  410eb8:	mov    rdi,rdx
  410ebb:	mov    rbx,r8
  410ebe:	mov    r12d,r9d
  410ec1:	test   rax,rax
  410ec4:	je     0x411194
  410eca:	movzx  edx,BYTE PTR [rbx]
  410ecd:	cmp    BYTE PTR [rax+rdx*1],0x0
  410ed1:	je     0x410ee2
  410ed3:	add    rbx,0x1
  410ed7:	movzx  r10d,BYTE PTR [rbx]
  410edb:	cmp    BYTE PTR [rax+r10*1],0x0
  410ee0:	jne    0x410ed3
  410ee2:	lea    rdx,[rip+0x188dc]        # 0x4297c5
  410ee9:	mov    rcx,rbx
  410eec:	call   0x421d80
  410ef1:	test   rax,rax
  410ef4:	mov    r13,rax
  410ef7:	je     0x411147
  410efd:	cmp    DWORD PTR [rsp+0x80],0x2
  410f05:	je     0x411110
  410f0b:	movzx  eax,BYTE PTR [rax]
  410f0e:	xor    r14d,r14d
  410f11:	cmp    al,0x7f
  410f13:	jbe    0x410ff0
  410f19:	mov    rdx,QWORD PTR [rip+0x23e40]        # 0x434d60
  410f20:	lea    rsi,[r13+0x1]
  410f24:	mov    BYTE PTR [r13+0x0],0x0
  410f29:	test   rdx,rdx
  410f2c:	je     0x4111c7
  410f32:	movzx  eax,BYTE PTR [r13+0x1]
  410f37:	cmp    BYTE PTR [rdx+rax*1],0x0
  410f3b:	mov    r10,rax
  410f3e:	je     0x410f52
  410f40:	add    rsi,0x1
  410f44:	movzx  r11d,BYTE PTR [rsi]
  410f48:	cmp    BYTE PTR [rdx+r11*1],0x0
  410f4d:	mov    r10,r11
  410f50:	jne    0x410f40
  410f52:	test   r14d,r14d
  410f55:	mov    r13,rsi
  410f58:	je     0x410f6e
  410f5a:	cmp    r10b,0x3d
  410f5e:	je     0x411080
  410f64:	cmp    r10b,0x3a
  410f68:	je     0x411080
  410f6e:	movzx  eax,BYTE PTR [rbx+0x1]
  410f72:	cmp    al,0x7f
  410f74:	ja     0x410fc5
  410f76:	lea    rdx,[rip+0x1b343]        # 0x42c2c0
  410f7d:	test   DWORD PTR [rdx+rax*4],0x3b0040
  410f84:	je     0x410fc5
  410f86:	mov    r8,rdi
  410f89:	mov    rdx,rbx
  410f8c:	mov    rcx,rbp
  410f8f:	call   0x4106f0
  410f94:	test   eax,eax
  410f96:	jne    0x410fdb
  410f98:	test   r12d,r12d
  410f9b:	je     0x411010
  410f9d:	mov    eax,DWORD PTR [rdi+0x10]
  410fa0:	test   ah,0x1
  410fa3:	jne    0x410fdb
  410fa5:	movzx  edx,BYTE PTR [r13+0x0]
  410faa:	cmp    dl,0x22
  410fad:	je     0x4110c0
  410fb3:	cmp    dl,0x27
  410fb6:	je     0x4110c0
  410fbc:	mov    QWORD PTR [rdi+0x8],r13
  410fc0:	jmp    0x4110d1
  410fc5:	movsx  edx,BYTE PTR [rbx]
  410fc8:	lea    r9,[rdi+0x14]
  410fcc:	mov    r8,rdi
  410fcf:	mov    rcx,rbp
  410fd2:	call   0x4094a0
  410fd7:	test   eax,eax
  410fd9:	je     0x410f98
  410fdb:	add    rsp,0x20
  410fdf:	pop    rbx
  410fe0:	pop    rsi
  410fe1:	pop    rdi
  410fe2:	pop    rbp
  410fe3:	pop    r12
  410fe5:	pop    r13
  410fe7:	pop    r14
  410fe9:	ret    
  410fea:	nop    WORD PTR [rax+rax*1+0x0]
  410ff0:	lea    rdx,[rip+0x1b2c9]        # 0x42c2c0
  410ff7:	xor    r14d,r14d
  410ffa:	test   DWORD PTR [rdx+rax*4],0xc01
  411001:	setne  r14b
  411005:	jmp    0x410f19
  41100a:	nop    WORD PTR [rax+rax*1+0x0]
  411010:	movzx  eax,BYTE PTR [r13+0x0]
  411015:	cmp    al,0x22
  411017:	je     0x41116e
  41101d:	cmp    al,0x27
  41101f:	je     0x41116e
  411025:	mov    QWORD PTR [rdi+0x8],r13
  411029:	mov    rax,QWORD PTR [rdi]
  41102c:	mov    eax,DWORD PTR [rax+0x10]
  41102f:	test   ah,0xf0
  411032:	jne    0x411120
  411038:	cmp    BYTE PTR [r13+0x0],0x0
  41103d:	jne    0x410fdb
  41103f:	mov    QWORD PTR [rdi+0x8],0x0
  411047:	mov    ebx,DWORD PTR [rip+0x12983]        # 0x4239d0
  41104d:	mov    eax,DWORD PTR [rsp+0x80]
  411054:	mov    rdx,rdi
  411057:	mov    rcx,rbp
  41105a:	mov    DWORD PTR [rip+0x12970],eax        # 0x4239d0
  411060:	call   0x4092f0
  411065:	mov    DWORD PTR [rip+0x12965],ebx        # 0x4239d0
  41106b:	add    rsp,0x20
  41106f:	pop    rbx
  411070:	pop    rsi
  411071:	pop    rdi
  411072:	pop    rbp
  411073:	pop    r12
  411075:	pop    r13
  411077:	pop    r14
  411079:	ret    
  41107a:	nop    WORD PTR [rax+rax*1+0x0]
  411080:	mov    rax,QWORD PTR [rip+0x23cd9]        # 0x434d60
  411087:	lea    r13,[rsi+0x1]
  41108b:	test   rax,rax
  41108e:	je     0x4111d9
  411094:	movzx  edx,BYTE PTR [rsi+0x1]
  411098:	cmp    BYTE PTR [rax+rdx*1],0x0
  41109c:	je     0x410f6e
  4110a2:	add    r13,0x1
  4110a6:	movzx  edx,BYTE PTR [r13+0x0]
  4110ab:	cmp    BYTE PTR [rax+rdx*1],0x0
  4110af:	jne    0x4110a2
  4110b1:	jmp    0x410f6e
  4110b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110c0:	xor    edx,edx
  4110c2:	mov    rcx,r13
  4110c5:	call   0x40cef0
  4110ca:	mov    eax,DWORD PTR [rdi+0x10]
  4110cd:	mov    QWORD PTR [rdi+0x8],r13
  4110d1:	mov    edx,eax
  4110d3:	and    edx,0x60000
  4110d9:	cmp    edx,0x20000
  4110df:	je     0x4111a3
  4110e5:	jbe    0x411158
  4110e7:	cmp    edx,0x40000
  4110ed:	je     0x4111b5
  4110f3:	cmp    edx,0x60000
  4110f9:	jne    0x411029
  4110ff:	test   r12d,r12d
  411102:	jg     0x410fdb
  411108:	jmp    0x411029
  41110d:	nop    DWORD PTR [rax]
  411110:	mov    BYTE PTR [rax],0x0
  411113:	add    r13,0x1
  411117:	jmp    0x410f6e
  41111c:	nop    DWORD PTR [rax+0x0]
  411120:	test   eax,0x10000
  411125:	je     0x41117d
  411127:	cmp    BYTE PTR [r13+0x0],0x0
  41112c:	je     0x41103f
  411132:	mov    rcx,r13
  411135:	call   0x409a50
  41113a:	or     DWORD PTR [rdi+0x10],0x40
  41113e:	mov    QWORD PTR [rdi+0x8],rax
  411142:	jmp    0x411047
  411147:	mov    rcx,rbx
  41114a:	call   0x421d98
  41114f:	lea    r13,[rbx+rax*1]
  411153:	jmp    0x410f6e
  411158:	test   edx,edx
  41115a:	jne    0x411029
  411160:	test   r12d,r12d
  411163:	jns    0x411029
  411169:	jmp    0x410fdb
  41116e:	xor    edx,edx
  411170:	mov    rcx,r13
  411173:	call   0x40cef0
  411178:	jmp    0x411025
  41117d:	cmp    BYTE PTR [r13+0x0],0x0
  411182:	jne    0x411132
  411184:	lea    rax,[rip+0x19f44]        # 0x42b0cf
  41118b:	mov    QWORD PTR [rdi+0x8],rax
  41118f:	jmp    0x411047
  411194:	mov    ecx,0x2d
  411199:	call   0x4097f0
  41119e:	jmp    0x410eca
  4111a3:	test   r12d,r12d
  4111a6:	js     0x4111ba
  4111a8:	test   al,0x20
  4111aa:	je     0x411029
  4111b0:	jmp    0x410fdb
  4111b5:	test   r12d,r12d
  4111b8:	js     0x4111a8
  4111ba:	test   al,0x20
  4111bc:	jne    0x411029
  4111c2:	jmp    0x410fdb
  4111c7:	mov    ecx,0xc
  4111cc:	call   0x4097f0
  4111d1:	mov    rdx,rax
  4111d4:	jmp    0x410f32
  4111d9:	mov    ecx,0xc
  4111de:	call   0x4097f0
  4111e3:	jmp    0x411094
  4111e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4111f0:	push   rdi
  4111f1:	push   rsi
  4111f2:	push   rbx
  4111f3:	sub    rsp,0x50
  4111f7:	mov    esi,DWORD PTR [rcx+0x10]
  4111fa:	mov    rbx,rcx
  4111fd:	mov    QWORD PTR [rsp+0x30],0x0
  411206:	mov    QWORD PTR [rsp+0x38],0x0
  41120f:	mov    DWORD PTR [rsp+0x40],0x1
  411217:	mov    DWORD PTR [rsp+0x44],0x0
  41121f:	mov    eax,esi
  411221:	and    eax,0xfffffffb
  411224:	mov    DWORD PTR [rcx+0x10],eax
  411227:	mov    rcx,rdx
  41122a:	call   0x409a50
  41122f:	lea    rdx,[rsp+0x30]
  411234:	mov    rdi,rax
  411237:	xor    r9d,r9d
  41123a:	mov    r8,rax
  41123d:	mov    rcx,rbx
  411240:	mov    DWORD PTR [rsp+0x20],0x0
  411248:	call   0x410ea0
  41124d:	mov    rcx,rdi
  411250:	call   0x421e50
  411255:	mov    DWORD PTR [rbx+0x10],esi
  411258:	add    rsp,0x50
  41125c:	pop    rbx
  41125d:	pop    rsi
  41125e:	pop    rdi
  41125f:	ret    
  411260:	push   rbp
  411261:	push   rdi
  411262:	push   rsi
  411263:	push   rbx
  411264:	sub    rsp,0x48
  411268:	mov    rsi,QWORD PTR [rdx+0x18]
  41126c:	cmp    rcx,0xf
  411270:	mov    QWORD PTR [rsp+0x20],0x0
  411279:	mov    QWORD PTR [rsp+0x28],0x0
  411282:	mov    DWORD PTR [rsp+0x30],0x2
  41128a:	mov    DWORD PTR [rsp+0x34],0x0
  411292:	jbe    0x41129b
  411294:	mov    eax,DWORD PTR [rdx+0x10]
  411297:	test   al,0x8
  411299:	je     0x4112a4
  41129b:	add    rsp,0x48
  41129f:	pop    rbx
  4112a0:	pop    rsi
  4112a1:	pop    rdi
  4112a2:	pop    rbp
  4112a3:	ret    
  4112a4:	test   ah,0x80
  4112a7:	je     0x411340
  4112ad:	test   BYTE PTR [rcx+0x12],0x4
  4112b1:	mov    rbx,rcx
  4112b4:	je     0x411372
  4112ba:	lea    rdi,[rsp+0x20]
  4112bf:	mov    rdx,rsi
  4112c2:	mov    r8,rdi
  4112c5:	call   0x4106f0
  4112ca:	test   eax,eax
  4112cc:	jne    0x411372
  4112d2:	mov    rdx,rdi
  4112d5:	mov    rcx,rbx
  4112d8:	call   0x409890
  4112dd:	test   eax,eax
  4112df:	jne    0x411372
  4112e5:	test   BYTE PTR [rbx+0x11],0x80
  4112e9:	mov    eax,DWORD PTR [rsp+0x30]
  4112ed:	jne    0x411350
  4112ef:	test   eax,0x20020
  4112f4:	je     0x411323
  4112f6:	mov    edx,eax
  4112f8:	and    edx,0x40020
  4112fe:	cmp    edx,0x20
  411301:	je     0x411323
  411303:	mov    edx,eax
  411305:	and    edx,0x400020
  41130b:	cmp    edx,0x400000
  411311:	je     0x411323
  411313:	and    eax,0x800020
  411318:	cmp    eax,0x800020
  41131d:	jne    0x41129b
  411323:	mov    rdx,rdi
  411326:	mov    rcx,rbx
  411329:	call   0x4092f0
  41132e:	nop
  41132f:	add    rsp,0x48
  411333:	pop    rbx
  411334:	pop    rsi
  411335:	pop    rdi
  411336:	pop    rbp
  411337:	ret    
  411338:	nop    DWORD PTR [rax+rax*1+0x0]
  411340:	mov    DWORD PTR [rsp+0x30],0x4
  411348:	jmp    0x4112ad
  41134d:	nop    DWORD PTR [rax]
  411350:	mov    edx,eax
  411352:	and    edx,0x20020
  411358:	cmp    edx,0x20000
  41135e:	je     0x411323
  411360:	and    eax,0x40020
  411365:	cmp    eax,0x40020
  41136a:	jne    0x41129b
  411370:	jmp    0x411323
  411372:	mov    rbp,QWORD PTR [rbx+0x28]
  411376:	mov    rdi,QWORD PTR [rip+0x12783]        # 0x423b00
  41137d:	call   QWORD PTR [rip+0x27bf9]        # 0x438f7c
  411383:	lea    rcx,[rax+0x60]
  411387:	mov    r9,rsi
  41138a:	mov    r8,rbp
  41138d:	mov    rdx,rdi
  411390:	call   0x407ea0
  411395:	mov    rcx,rbx
  411398:	mov    edx,0x1
  41139d:	call   QWORD PTR [rbx+0x98]
  4113a3:	mov    ecx,0x1
  4113a8:	call   0x421f40
  4113ad:	nop
  4113ae:	xchg   ax,ax
  4113b0:	push   r12
  4113b2:	push   rbp
  4113b3:	push   rdi
  4113b4:	push   rsi
  4113b5:	push   rbx
  4113b6:	sub    rsp,0x40
  4113ba:	mov    rsi,QWORD PTR [rdx+0x18]
  4113be:	cmp    rcx,0xf
  4113c2:	mov    QWORD PTR [rsp+0x20],0x0
  4113cb:	mov    QWORD PTR [rsp+0x28],0x0
  4113d4:	mov    DWORD PTR [rsp+0x30],0x4
  4113dc:	mov    DWORD PTR [rsp+0x34],0x0
  4113e4:	jbe    0x4114ff
  4113ea:	cmp    BYTE PTR [rip+0x237df],0x0        # 0x434bd0
  4113f1:	jne    0x4114ff
  4113f7:	cmp    DWORD PTR [rcx],0x1ffff
  4113fd:	mov    rbx,rcx
  411400:	jle    0x41159b
  411406:	cmp    QWORD PTR [rcx+0xd0],0x0
  41140e:	je     0x41159b
  411414:	test   rsi,rsi
  411417:	je     0x41141e
  411419:	cmp    BYTE PTR [rsi],0x0
  41141c:	jne    0x41146c
  41141e:	mov    r12,QWORD PTR [rdx+0x50]
  411422:	mov    rbp,QWORD PTR [rbx+0x28]
  411426:	mov    rdi,QWORD PTR [rip+0x1272b]        # 0x423b58
  41142d:	call   QWORD PTR [rip+0x27b49]        # 0x438f7c
  411433:	lea    rcx,[rax+0x60]
  411437:	mov    r8,rbp
  41143a:	mov    r9,r12
  41143d:	mov    rdx,rdi
  411440:	call   0x407ea0
  411445:	mov    edx,0x1
  41144a:	mov    rcx,rbx
  41144d:	call   QWORD PTR [rbx+0x98]
  411453:	lea    rdx,[rip+0x1731e]        # 0x428778
  41145a:	lea    rcx,[rip+0x1731f]        # 0x428780
  411461:	mov    r8d,0x60
  411467:	call   0x41cfe0
  41146c:	cmp    BYTE PTR [rsi+0x1],0x0
  411470:	mov    BYTE PTR [rip+0x23759],0x1        # 0x434bd0
  411477:	jne    0x411510
  41147d:	movzx  edx,BYTE PTR [rsi]
  411480:	cmp    dl,0x2a
  411483:	je     0x411573
  411489:	lea    r8,[rsp+0x20]
  41148e:	mov    rcx,rbx
  411491:	lea    r9,[r8+0x14]
  411495:	call   0x4094a0
  41149a:	test   eax,eax
  41149c:	je     0x4114eb
  41149e:	movsx  ebp,BYTE PTR [rsi]
  4114a1:	mov    rdi,QWORD PTR [rbx+0x20]
  4114a5:	mov    rsi,QWORD PTR [rip+0x12644]        # 0x423af0
  4114ac:	call   QWORD PTR [rip+0x27aca]        # 0x438f7c
  4114b2:	lea    rcx,[rax+0x60]
  4114b6:	mov    r8,rdi
  4114b9:	mov    r9d,ebp
  4114bc:	mov    rdx,rsi
  4114bf:	call   0x407ea0
  4114c4:	mov    edx,0x1
  4114c9:	mov    rcx,rbx
  4114cc:	call   QWORD PTR [rbx+0x98]
  4114d2:	lea    rdx,[rip+0x1729f]        # 0x428778
  4114d9:	lea    rcx,[rip+0x172a0]        # 0x428780
  4114e0:	mov    r8d,0x71
  4114e6:	call   0x41cfe0
  4114eb:	mov    rdx,QWORD PTR [rsp+0x20]
  4114f0:	mov    rcx,rbx
  4114f3:	call   0x407d80
  4114f8:	mov    BYTE PTR [rip+0x236d1],0x0        # 0x434bd0
  4114ff:	add    rsp,0x40
  411503:	pop    rbx
  411504:	pop    rsi
  411505:	pop    rdi
  411506:	pop    rbp
  411507:	pop    r12
  411509:	ret    
  41150a:	nop    WORD PTR [rax+rax*1+0x0]
  411510:	lea    r8,[rsp+0x20]
  411515:	mov    rdx,rsi
  411518:	mov    rcx,rbx
  41151b:	call   0x4106f0
  411520:	test   eax,eax
  411522:	je     0x4114eb
  411524:	mov    rbp,QWORD PTR [rbx+0x20]
  411528:	mov    rdi,QWORD PTR [rip+0x125c9]        # 0x423af8
  41152f:	call   QWORD PTR [rip+0x27a47]        # 0x438f7c
  411535:	lea    rcx,[rax+0x60]
  411539:	mov    r9,rsi
  41153c:	mov    r8,rbp
  41153f:	mov    rdx,rdi
  411542:	call   0x407ea0
  411547:	mov    rcx,rbx
  41154a:	mov    edx,0x1
  41154f:	call   QWORD PTR [rbx+0x98]
  411555:	lea    rdx,[rip+0x1721c]        # 0x428778
  41155c:	lea    rcx,[rip+0x1721d]        # 0x428780
  411563:	mov    r8d,0x79
  411569:	call   0x41cfe0
  41156e:	jmp    0x4114eb
  411573:	mov    rdi,QWORD PTR [rbx+0x78]
  411577:	mov    esi,DWORD PTR [rbx+0xb4]
  41157d:	jmp    0x411584
  41157f:	nop
  411580:	add    rdi,0x68
  411584:	mov    rdx,rdi
  411587:	mov    rcx,rbx
  41158a:	sub    esi,0x1
  41158d:	call   0x407d80
  411592:	test   esi,esi
  411594:	jg     0x411580
  411596:	jmp    0x4114f8
  41159b:	mov    rcx,QWORD PTR [rip+0x124c6]        # 0x423a68
  4115a2:	call   0x408310
  4115a7:	nop
  4115a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4115b0:	push   r13
  4115b2:	push   r12
  4115b4:	push   rbp
  4115b5:	push   rdi
  4115b6:	push   rsi
  4115b7:	push   rbx
  4115b8:	sub    rsp,0x28
  4115bc:	mov    rbp,rcx
  4115bf:	mov    ecx,0xa
  4115c4:	mov    rsi,rdx
  4115c7:	call   0x409ce0
  4115cc:	mov    rcx,QWORD PTR [rbp+0x28]
  4115d0:	mov    rdi,rax
  4115d3:	call   0x421d98
  4115d8:	mov    r13,rax
  4115db:	mov    eax,0x3f3c
  4115e0:	mov    WORD PTR [rdi],ax
  4115e3:	movabs rax,0x6d6172676f7270
  4115ed:	mov    r12d,r13d
  4115f0:	mov    QWORD PTR [rdi+0x2],rax
  4115f4:	mov    r10,QWORD PTR [rip+0x23765]        # 0x434d60
  4115fb:	lea    rbx,[rsi+0x1]
  4115ff:	test   r10,r10
  411602:	je     0x411678
  411604:	movzx  eax,BYTE PTR [rsi+0x1]
  411608:	cmp    BYTE PTR [r10+rax*1],0x0
  41160d:	je     0x41161f
  41160f:	nop
  411610:	add    rbx,0x1
  411614:	movzx  r9d,BYTE PTR [rbx]
  411618:	cmp    BYTE PTR [r10+r9*1],0x0
  41161d:	jne    0x411610
  41161f:	mov    rdx,QWORD PTR [rbp+0x28]
  411623:	mov    r8d,r12d
  411626:	mov    rcx,rbx
  411629:	call   0x4106a0
  41162e:	test   eax,eax
  411630:	jne    0x41164d
  411632:	lea    rsi,[rbx+r13*1]
  411636:	movzx  eax,BYTE PTR [rsi]
  411639:	cmp    al,0x7f
  41163b:	ja     0x41164d
  41163d:	lea    rdx,[rip+0x1ac7c]        # 0x42c2c0
  411644:	test   DWORD PTR [rdx+rax*4],0x1000c01
  41164b:	jne    0x41168a
  41164d:	mov    rdx,rdi
  411650:	mov    rcx,rbx
  411653:	call   0x421d70
  411658:	test   rax,rax
  41165b:	mov    rsi,rax
  41165e:	jne    0x4115f4
  411660:	mov    rcx,rdi
  411663:	call   0x421e50
  411668:	mov    rax,rsi
  41166b:	add    rsp,0x28
  41166f:	pop    rbx
  411670:	pop    rsi
  411671:	pop    rdi
  411672:	pop    rbp
  411673:	pop    r12
  411675:	pop    r13
  411677:	ret    
  411678:	mov    ecx,0xc
  41167d:	call   0x4097f0
  411682:	mov    r10,rax
  411685:	jmp    0x411604
  41168a:	mov    rcx,rdi
  41168d:	call   0x421e50
  411692:	jmp    0x41169c
  411694:	add    rsi,0x1
  411698:	cmp    al,0x3e
  41169a:	je     0x411668
  41169c:	movzx  eax,BYTE PTR [rsi]
  41169f:	test   al,al
  4116a1:	jne    0x411694
  4116a3:	xor    esi,esi
  4116a5:	mov    rax,rsi
  4116a8:	add    rsp,0x28
  4116ac:	pop    rbx
  4116ad:	pop    rsi
  4116ae:	pop    rdi
  4116af:	pop    rbp
  4116b0:	pop    r12
  4116b2:	pop    r13
  4116b4:	ret    
  4116b5:	nop
  4116b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116c0:	push   r14
  4116c2:	push   r13
  4116c4:	push   r12
  4116c6:	push   rbp
  4116c7:	push   rdi
  4116c8:	push   rsi
  4116c9:	push   rbx
  4116ca:	sub    rsp,0x20
  4116ce:	test   rdx,rdx
  4116d1:	mov    rbp,rcx
  4116d4:	mov    rbx,rdx
  4116d7:	je     0x411750
  4116d9:	mov    rax,QWORD PTR [rip+0x23680]        # 0x434d60
  4116e0:	test   rax,rax
  4116e3:	je     0x411812
  4116e9:	movzx  ecx,BYTE PTR [rbx]
  4116ec:	cmp    BYTE PTR [rax+rcx*1],0x0
  4116f0:	mov    rdx,rcx
  4116f3:	je     0x411707
  4116f5:	add    rbx,0x1
  4116f9:	movzx  r8d,BYTE PTR [rbx]
  4116fd:	cmp    BYTE PTR [rax+r8*1],0x0
  411702:	mov    rdx,r8
  411705:	jne    0x4116f5
  411707:	test   dl,dl
  411709:	je     0x411741
  41170b:	xor    esi,esi
  41170d:	mov    r14d,0x1
  411713:	lea    rdi,[rip+0x171e6]        # 0x428900
  41171a:	xor    r12d,r12d
  41171d:	mov    r13,QWORD PTR [rdi]
  411720:	mov    rdx,QWORD PTR [rdi+0x10]
  411724:	mov    rcx,rbx
  411727:	mov    r8d,r13d
  41172a:	call   0x4106a0
  41172f:	test   eax,eax
  411731:	je     0x411770
  411733:	add    r12d,0x1
  411737:	add    rdi,0x18
  41173b:	cmp    r12d,0x5
  41173f:	jne    0x41171d
  411741:	add    rsp,0x20
  411745:	pop    rbx
  411746:	pop    rsi
  411747:	pop    rdi
  411748:	pop    rbp
  411749:	pop    r12
  41174b:	pop    r13
  41174d:	pop    r14
  41174f:	ret    
  411750:	lea    rcx,[rip+0x17030]        # 0x428787
  411757:	call   0x421e30
  41175c:	test   rax,rax
  41175f:	mov    rbx,rax
  411762:	jne    0x4116d9
  411768:	jmp    0x411741
  41176a:	nop    WORD PTR [rax+rax*1+0x0]
  411770:	add    rbx,r13
  411773:	movzx  r8d,BYTE PTR [rbx]
  411777:	cmp    r8b,0x7f
  41177b:	ja     0x411741
  41177d:	lea    rdx,[rip+0x1ab3c]        # 0x42c2c0
  411784:	movzx  eax,r8b
  411788:	test   DWORD PTR [rdx+rax*4],0xc13
  41178f:	je     0x411741
  411791:	mov    eax,r14d
  411794:	mov    ecx,r12d
  411797:	shl    eax,cl
  411799:	or     esi,eax
  41179b:	mov    rax,QWORD PTR [rip+0x235be]        # 0x434d60
  4117a2:	test   rax,rax
  4117a5:	je     0x411872
  4117ab:	mov    edx,r8d
  4117ae:	cmp    BYTE PTR [rax+r8*1],0x0
  4117b3:	je     0x4117c5
  4117b5:	add    rbx,0x1
  4117b9:	movzx  ecx,BYTE PTR [rbx]
  4117bc:	cmp    BYTE PTR [rax+rcx*1],0x0
  4117c0:	mov    rdx,rcx
  4117c3:	jne    0x4117b5
  4117c5:	test   dl,dl
  4117c7:	je     0x411821
  4117c9:	cmp    dl,0x2c
  4117cc:	jne    0x411713
  4117d2:	mov    rax,QWORD PTR [rip+0x23587]        # 0x434d60
  4117d9:	lea    rdi,[rbx+0x1]
  4117dd:	test   rax,rax
  4117e0:	je     0x411888
  4117e6:	movzx  edx,BYTE PTR [rbx+0x1]
  4117ea:	mov    rbx,rdi
  4117ed:	cmp    BYTE PTR [rax+rdx*1],0x0
  4117f1:	je     0x411713
  4117f7:	nop    WORD PTR [rax+rax*1+0x0]
  411800:	add    rbx,0x1
  411804:	movzx  edx,BYTE PTR [rbx]
  411807:	cmp    BYTE PTR [rax+rdx*1],0x0
  41180b:	jne    0x411800
  41180d:	jmp    0x411713
  411812:	mov    ecx,0xc
  411817:	call   0x4097f0
  41181c:	jmp    0x4116e9
  411821:	mov    eax,esi
  411823:	and    eax,0x3
  411826:	cmp    eax,0x3
  411829:	je     0x411741
  41182f:	mov    eax,esi
  411831:	and    eax,0xc
  411834:	cmp    eax,0xc
  411837:	je     0x411741
  41183d:	lea    rax,[rip+0x170bc]        # 0x428900
  411844:	jmp    0x41185f
  411846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411850:	and    DWORD PTR [rbp+0x0],edx
  411853:	shr    esi,1
  411855:	je     0x411741
  41185b:	add    rax,0x18
  41185f:	test   sil,0x1
  411863:	je     0x411853
  411865:	mov    edx,DWORD PTR [rax+0x8]
  411868:	test   dl,0x1
  41186b:	jne    0x411850
  41186d:	or     DWORD PTR [rbp+0x0],edx
  411870:	jmp    0x411853
  411872:	mov    ecx,0xc
  411877:	call   0x4097f0
  41187c:	movzx  edx,BYTE PTR [rbx]
  41187f:	movzx  r8d,dl
  411883:	jmp    0x4117ae
  411888:	mov    ecx,0xc
  41188d:	call   0x4097f0
  411892:	jmp    0x4117e6
  411897:	nop    WORD PTR [rax+rax*1+0x0]
  4118a0:	push   r12
  4118a2:	push   rbp
  4118a3:	push   rdi
  4118a4:	push   rsi
  4118a5:	push   rbx
  4118a6:	sub    rsp,0x30
  4118aa:	mov    rax,QWORD PTR [rip+0x234af]        # 0x434d60
  4118b1:	mov    rbp,rcx
  4118b4:	lea    rbx,[rdx+0x1]
  4118b8:	test   rax,rax
  4118bb:	je     0x41193e
  4118c1:	movzx  edx,BYTE PTR [rdx+0x1]
  4118c5:	cmp    BYTE PTR [rax+rdx*1],0x0
  4118c9:	je     0x4118dd
  4118cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4118d0:	add    rbx,0x1
  4118d4:	movzx  edx,BYTE PTR [rbx]
  4118d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4118db:	jne    0x4118d0
  4118dd:	mov    edx,0x3e
  4118e2:	mov    rcx,rbx
  4118e5:	call   0x421dc0
  4118ea:	test   rax,rax
  4118ed:	mov    rsi,rax
  4118f0:	je     0x411930
  4118f2:	mov    r12d,eax
  4118f5:	add    rsi,0x1
  4118f9:	sub    r12d,ebx
  4118fc:	lea    rcx,[r12+0x1]
  411901:	call   0x409ce0
  411906:	mov    r8,r12
  411909:	mov    rdx,rbx
  41190c:	mov    rcx,rax
  41190f:	mov    rdi,rax
  411912:	call   0x421e08
  411917:	lea    rcx,[rbp+0x10]
  41191b:	mov    rdx,rdi
  41191e:	mov    BYTE PTR [rdi+r12*1],0x0
  411923:	call   0x4116c0
  411928:	mov    rcx,rdi
  41192b:	call   0x421e50
  411930:	mov    rax,rsi
  411933:	add    rsp,0x30
  411937:	pop    rbx
  411938:	pop    rsi
  411939:	pop    rdi
  41193a:	pop    rbp
  41193b:	pop    r12
  41193d:	ret    
  41193e:	mov    ecx,0xc
  411943:	mov    QWORD PTR [rsp+0x28],rdx
  411948:	call   0x4097f0
  41194d:	mov    rdx,QWORD PTR [rsp+0x28]
  411952:	jmp    0x4118c1
  411957:	nop    WORD PTR [rax+rax*1+0x0]
  411960:	push   rbp
  411961:	push   rdi
  411962:	push   rsi
  411963:	push   rbx
  411964:	sub    rsp,0x28
  411968:	test   BYTE PTR [rdx+0x12],0x1
  41196c:	mov    rbx,rcx
  41196f:	mov    rsi,r8
  411972:	mov    ebp,r9d
  411975:	je     0x4119b0
  411977:	mov    rax,QWORD PTR [rdx+0x18]
  41197b:	test   rax,rax
  41197e:	je     0x4119b0
  411980:	movzx  edi,BYTE PTR [rax]
  411983:	test   dil,dil
  411986:	je     0x4119b0
  411988:	lea    eax,[rdi-0x43]
  41198b:	cmp    al,0x33
  41198d:	ja     0x411ad0
  411993:	lea    rdx,[rip+0x16dfe]        # 0x428798
  41199a:	movzx  eax,al
  41199d:	movsxd rax,DWORD PTR [rdx+rax*4]
  4119a1:	add    rdx,rax
  4119a4:	jmp    rdx
  4119a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119b0:	lea    rcx,[rbx+0x10]
  4119b4:	xor    edx,edx
  4119b6:	call   0x4116c0
  4119bb:	test   BYTE PTR [rbx+0x11],0x10
  4119bf:	jne    0x411a00
  4119c1:	mov    rdx,QWORD PTR [rbx+0x50]
  4119c5:	mov    r9,QWORD PTR [rbx+0x60]
  4119c9:	mov    rcx,rsi
  4119cc:	mov    r8,QWORD PTR [rbx+0x40]
  4119d0:	call   0x408070
  4119d5:	mov    rcx,rsi
  4119d8:	call   0x421e80
  4119dd:	mov    rcx,rsi
  4119e0:	call   0x421e88
  4119e5:	test   eax,eax
  4119e7:	jne    0x411b24
  4119ed:	test   bpl,bpl
  4119f0:	jne    0x411b50
  4119f6:	add    rsp,0x28
  4119fa:	pop    rbx
  4119fb:	pop    rsi
  4119fc:	pop    rdi
  4119fd:	pop    rbp
  4119fe:	ret    
  4119ff:	nop
  411a00:	mov    rcx,QWORD PTR [rbx+0x40]
  411a04:	test   rcx,rcx
  411a07:	je     0x411b00
  411a0d:	mov    rdx,rsi
  411a10:	call   0x421e60
  411a15:	cmp    DWORD PTR [rbx],0x21fff
  411a1b:	jle    0x411a92
  411a1d:	cmp    QWORD PTR [rbx+0xe0],0x0
  411a25:	je     0x411a92
  411a27:	mov    rdx,rsi
  411a2a:	mov    ecx,0xa
  411a2f:	call   0x421e68
  411a34:	mov    rcx,QWORD PTR [rbx+0xe0]
  411a3b:	mov    rdx,rsi
  411a3e:	call   0x421e60
  411a43:	jmp    0x4119d5
  411a45:	mov    rcx,QWORD PTR [rcx+0x40]
  411a49:	test   rcx,rcx
  411a4c:	je     0x411a56
  411a4e:	mov    rdx,r8
  411a51:	call   0x421e60
  411a56:	mov    rcx,QWORD PTR [rbx+0x48]
  411a5a:	test   rcx,rcx
  411a5d:	je     0x411a67
  411a5f:	mov    rdx,rsi
  411a62:	call   0x421e60
  411a67:	mov    rdx,rsi
  411a6a:	mov    ecx,0xa
  411a6f:	call   0x421e68
  411a74:	mov    rdx,QWORD PTR [rip+0x11fdd]        # 0x423a58
  411a7b:	lea    r8,[rip+0x16e0e]        # 0x428890
  411a82:	mov    rcx,rsi
  411a85:	call   0x407ea0
  411a8a:	cmp    DWORD PTR [rbx],0x21fff
  411a90:	jg     0x411a1d
  411a92:	cmp    QWORD PTR [rbx+0x80],0x0
  411a9a:	je     0x4119d5
  411aa0:	mov    rdx,rsi
  411aa3:	mov    ecx,0xa
  411aa8:	call   0x421e68
  411aad:	mov    r8,QWORD PTR [rbx+0x80]
  411ab4:	mov    rdx,QWORD PTR [rip+0x121f5]        # 0x423cb0
  411abb:	mov    rcx,rsi
  411abe:	call   0x407ea0
  411ac3:	jmp    0x4119d5
  411ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ad0:	mov    rbx,QWORD PTR [rip+0x11ff9]        # 0x423ad0
  411ad7:	call   QWORD PTR [rip+0x2749f]        # 0x438f7c
  411add:	lea    rcx,[rax+0x60]
  411ae1:	movsx  r8d,dil
  411ae5:	mov    rdx,rbx
  411ae8:	call   0x407ea0
  411aed:	mov    ecx,0x1
  411af2:	call   0x4082e0
  411af7:	nop    WORD PTR [rax+rax*1+0x0]
  411b00:	mov    rcx,QWORD PTR [rbx+0x50]
  411b04:	test   rcx,rcx
  411b07:	jne    0x411a0d
  411b0d:	mov    rdx,QWORD PTR [rbx+0x60]
  411b11:	xor    r9d,r9d
  411b14:	xor    r8d,r8d
  411b17:	mov    rcx,rsi
  411b1a:	call   0x408070
  411b1f:	jmp    0x411a15
  411b24:	call   QWORD PTR [rip+0x27452]        # 0x438f7c
  411b2a:	add    rax,0x30
  411b2e:	mov    r8,QWORD PTR [rip+0x1208b]        # 0x423bc0
  411b35:	mov    rcx,QWORD PTR [rbx+0x28]
  411b39:	cmp    rsi,rax
  411b3c:	cmove  r8,QWORD PTR [rip+0x12074]        # 0x423bb8
  411b44:	mov    rdx,QWORD PTR [rip+0x1207d]        # 0x423bc8
  411b4b:	call   0x408860
  411b50:	xor    ecx,ecx
  411b52:	call   0x4082e0
  411b57:	nop
  411b58:	nop    DWORD PTR [rax+rax*1+0x0]
  411b60:	push   rsi
  411b61:	push   rbx
  411b62:	sub    rsp,0x28
  411b66:	cmp    BYTE PTR [rip+0x23087],0x0        # 0x434bf4
  411b6d:	mov    rbx,rcx
  411b70:	mov    rsi,rdx
  411b73:	je     0x411b90
  411b75:	call   QWORD PTR [rip+0x27401]        # 0x438f7c
  411b7b:	cmp    rbx,0xf
  411b7f:	lea    r8,[rax+0x60]
  411b83:	ja     0x411ba0
  411b85:	add    rsp,0x28
  411b89:	pop    rbx
  411b8a:	pop    rsi
  411b8b:	ret    
  411b8c:	nop    DWORD PTR [rax+0x0]
  411b90:	call   QWORD PTR [rip+0x273e6]        # 0x438f7c
  411b96:	cmp    rbx,0xf
  411b9a:	lea    r8,[rax+0x30]
  411b9e:	jbe    0x411b85
  411ba0:	mov    r9d,0x1
  411ba6:	mov    rdx,rsi
  411ba9:	mov    rcx,rbx
  411bac:	add    rsp,0x28
  411bb0:	pop    rbx
  411bb1:	pop    rsi
  411bb2:	jmp    0x411960
  411bb7:	nop    WORD PTR [rax+rax*1+0x0]
  411bc0:	add    rcx,0x1
  411bc4:	add    rdx,0x1
  411bc8:	movzx  r9d,BYTE PTR [rcx-0x1]
  411bcd:	movzx  r8d,BYTE PTR [rdx-0x1]
  411bd2:	cmp    r9b,r8b
  411bd5:	je     0x411bf1
  411bd7:	lea    r10,[rip+0x119e2]        # 0x4235c0
  411bde:	movzx  eax,r9b
  411be2:	movzx  eax,BYTE PTR [r10+rax*1]
  411be7:	movzx  r8d,BYTE PTR [r10+r8*1]
  411bec:	sub    eax,r8d
  411bef:	jne    0x411bf8
  411bf1:	test   r9b,r9b
  411bf4:	jne    0x411bc0
  411bf6:	xor    eax,eax
  411bf8:	repz ret 
  411bfa:	nop    WORD PTR [rax+rax*1+0x0]
  411c00:	test   r8d,r8d
  411c03:	jne    0x411c21
  411c05:	lea    rdx,[rip+0x11ab3]        # 0x4236bf
  411c0c:	mov    eax,0xff
  411c11:	mov    BYTE PTR [rdx],al
  411c13:	sub    eax,0x1
  411c16:	sub    rdx,0x1
  411c1a:	cmp    eax,0xffffffff
  411c1d:	jne    0x411c11
  411c1f:	repz ret 
  411c21:	lea    r9,[rip+0x11998]        # 0x4235c0
  411c28:	movzx  eax,dl
  411c2b:	movzx  edx,cl
  411c2e:	xchg   ax,ax
  411c30:	mov    ecx,edx
  411c32:	add    edx,0x1
  411c35:	mov    BYTE PTR [r9+rcx*1],al
  411c39:	add    eax,0x1
  411c3c:	cmp    eax,0xff
  411c41:	ja     0x411c54
  411c43:	cmp    edx,0xff
  411c49:	ja     0x411c54
  411c4b:	sub    r8d,0x1
  411c4f:	test   r8d,r8d
  411c52:	jg     0x411c30
  411c54:	repz ret 
  411c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c60:	test   rcx,rcx
  411c63:	je     0x411c8f
  411c65:	movzx  eax,BYTE PTR [rcx]
  411c68:	test   al,al
  411c6a:	je     0x411c8f
  411c6c:	lea    rdx,[rip+0x1194d]        # 0x4235c0
  411c73:	mov    r8d,eax
  411c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c80:	add    rcx,0x1
  411c84:	mov    BYTE PTR [rdx+rax*1],r8b
  411c88:	movzx  eax,BYTE PTR [rcx]
  411c8b:	test   al,al
  411c8d:	jne    0x411c80
  411c8f:	repz ret 
  411c91:	nop    DWORD PTR [rax+rax*1+0x0]
  411c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ca0:	lea    r8,[rip+0x11919]        # 0x4235c0
  411ca7:	nop    WORD PTR [rax+rax*1+0x0]
  411cb0:	movzx  eax,BYTE PTR [rdx]
  411cb3:	add    rcx,0x1
  411cb7:	add    rdx,0x1
  411cbb:	movzx  eax,BYTE PTR [r8+rax*1]
  411cc0:	mov    BYTE PTR [rcx-0x1],al
  411cc3:	cmp    BYTE PTR [rdx-0x1],0x0
  411cc7:	jne    0x411cb0
  411cc9:	ret    
  411cca:	nop    WORD PTR [rax+rax*1+0x0]
  411cd0:	push   rbp
  411cd1:	push   rdi
  411cd2:	push   rsi
  411cd3:	push   rbx
  411cd4:	sub    rsp,0x68
  411cd8:	xor    eax,eax
  411cda:	lea    rdi,[r9+0x8]
  411cde:	mov    QWORD PTR [r9],0x0
  411ce5:	mov    QWORD PTR [r9+0x28],0x0
  411ced:	mov    rbx,r9
  411cf0:	mov    rbp,rcx
  411cf3:	and    rdi,0xfffffffffffffff8
  411cf7:	sub    r9,rdi
  411cfa:	add    r9d,0x30
  411cfe:	shr    r9d,0x3
  411d02:	mov    ecx,r9d
  411d05:	rep stos QWORD PTR es:[rdi],rax
  411d08:	mov    DWORD PTR [rbx+0x24],edx
  411d0b:	and    edx,0x2
  411d0e:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411d15:	mov    DWORD PTR [rbx+0x28],r8d
  411d19:	mov    ax,0x8000
  411d1d:	je     0x411d45
  411d1f:	mov    eax,r8d
  411d22:	and    eax,0x3
  411d25:	cmp    eax,0x1
  411d28:	sete   dl
  411d2b:	movzx  eax,dl
  411d2e:	movzx  edx,dl
  411d31:	add    edx,edx
  411d33:	and    r8d,0x1
  411d37:	lea    eax,[rax+rax*1+0x8000]
  411d3e:	jne    0x411d45
  411d40:	mov    eax,edx
  411d42:	or     ah,0x84
  411d45:	mov    edx,eax
  411d47:	mov    rcx,rbp
  411d4a:	call   0x421cf8
  411d4f:	test   eax,eax
  411d51:	mov    DWORD PTR [rbx+0x18],eax
  411d54:	js     0x411eb0
  411d5a:	lea    rdx,[rsp+0x20]
  411d5f:	mov    ecx,eax
  411d61:	call   QWORD PTR [rip+0x2728d]        # 0x438ff4
  411d67:	test   eax,eax
  411d69:	jne    0x411e90
  411d6f:	movzx  eax,WORD PTR [rsp+0x26]
  411d74:	and    ax,0xf000
  411d78:	cmp    ax,0x8000
  411d7c:	je     0x411db0
  411d7e:	call   QWORD PTR [rip+0x27248]        # 0x438fcc
  411d84:	mov    DWORD PTR [rax],0x16
  411d8a:	mov    ecx,DWORD PTR [rbx+0x18]
  411d8d:	mov    DWORD PTR [rbx+0x20],0x16
  411d94:	call   0x421ce8
  411d99:	mov    edx,DWORD PTR [rbx+0x20]
  411d9c:	test   edx,edx
  411d9e:	mov    rax,0xffffffffffffffff
  411da5:	je     0x411dd0
  411da7:	add    rsp,0x68
  411dab:	pop    rbx
  411dac:	pop    rsi
  411dad:	pop    rdi
  411dae:	pop    rbp
  411daf:	ret    
  411db0:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  411db4:	mov    rax,QWORD PTR [rsp+0x38]
  411db9:	mov    QWORD PTR [rbx+0x8],rax
  411dbd:	jne    0x411d99
  411dbf:	call   QWORD PTR [rip+0x27207]        # 0x438fcc
  411dc5:	mov    edx,DWORD PTR [rax]
  411dc7:	mov    DWORD PTR [rbx+0x20],edx
  411dca:	jmp    0x411d9c
  411dcc:	nop    DWORD PTR [rax+0x0]
  411dd0:	mov    rax,QWORD PTR [rbx+0x8]
  411dd4:	lea    rcx,[rax+0x1]
  411dd8:	call   0x409ce0
  411ddd:	test   rax,rax
  411de0:	mov    rdi,rax
  411de3:	mov    QWORD PTR [rbx],rax
  411de6:	je     0x411ef0
  411dec:	mov    rsi,QWORD PTR [rbx+0x8]
  411df0:	test   rsi,rsi
  411df3:	jne    0x411e0f
  411df5:	jmp    0x411ed0
  411dfa:	nop    WORD PTR [rax+rax*1+0x0]
  411e00:	movsxd r10,eax
  411e03:	add    rdi,r10
  411e06:	sub    rsi,r10
  411e09:	je     0x411ed0
  411e0f:	mov    ecx,DWORD PTR [rbx+0x18]
  411e12:	mov    r8d,esi
  411e15:	mov    rdx,rdi
  411e18:	call   0x421d00
  411e1d:	test   eax,eax
  411e1f:	jg     0x411e00
  411e21:	mov    rsi,QWORD PTR [rip+0x271a4]        # 0x438fcc
  411e28:	call   rsi
  411e2a:	mov    eax,DWORD PTR [rax]
  411e2c:	lea    rdx,[rip+0x16a35]        # 0x428868
  411e33:	lea    rcx,[rip+0x16a33]        # 0x42886d
  411e3a:	mov    r8,rbp
  411e3d:	mov    DWORD PTR [rbx+0x20],eax
  411e40:	call   0x4087f0
  411e45:	mov    rcx,QWORD PTR [rbx]
  411e48:	call   0x421e50
  411e4d:	mov    eax,DWORD PTR [rbx+0x20]
  411e50:	test   eax,eax
  411e52:	je     0x411eda
  411e58:	mov    ecx,DWORD PTR [rbx+0x18]
  411e5b:	cmp    ecx,0xffffffff
  411e5e:	je     0x411e6c
  411e60:	call   0x421ce8
  411e65:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411e6c:	call   rsi
  411e6e:	mov    edx,DWORD PTR [rbx+0x20]
  411e71:	mov    DWORD PTR [rax],edx
  411e73:	mov    rax,0xffffffffffffffff
  411e7a:	mov    QWORD PTR [rbx],0xffffffffffffffff
  411e81:	add    rsp,0x68
  411e85:	pop    rbx
  411e86:	pop    rsi
  411e87:	pop    rdi
  411e88:	pop    rbp
  411e89:	ret    
  411e8a:	nop    WORD PTR [rax+rax*1+0x0]
  411e90:	call   QWORD PTR [rip+0x27136]        # 0x438fcc
  411e96:	mov    eax,DWORD PTR [rax]
  411e98:	mov    ecx,DWORD PTR [rbx+0x18]
  411e9b:	mov    DWORD PTR [rbx+0x20],eax
  411e9e:	call   0x421ce8
  411ea3:	jmp    0x411d99
  411ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  411eb0:	call   QWORD PTR [rip+0x27116]        # 0x438fcc
  411eb6:	mov    edx,DWORD PTR [rax]
  411eb8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411ebf:	mov    DWORD PTR [rbx+0x20],edx
  411ec2:	jmp    0x411d9c
  411ec7:	nop    WORD PTR [rax+rax*1+0x0]
  411ed0:	mov    BYTE PTR [rdi],0x0
  411ed3:	mov    DWORD PTR [rbx+0x20],0x0
  411eda:	mov    rax,QWORD PTR [rbx]
  411edd:	add    rsp,0x68
  411ee1:	pop    rbx
  411ee2:	pop    rsi
  411ee3:	pop    rdi
  411ee4:	pop    rbp
  411ee5:	ret    
  411ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ef0:	mov    DWORD PTR [rbx+0x20],0xc
  411ef7:	mov    rsi,QWORD PTR [rip+0x270ce]        # 0x438fcc
  411efe:	jmp    0x411e58
  411f03:	nop    DWORD PTR [rax]
  411f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f10:	push   rsi
  411f11:	push   rbx
  411f12:	sub    rsp,0x28
  411f16:	mov    rsi,QWORD PTR [rip+0x270af]        # 0x438fcc
  411f1d:	mov    rbx,rcx
  411f20:	call   rsi
  411f22:	mov    DWORD PTR [rax],0x0
  411f28:	test   BYTE PTR [rbx+0x24],0x2
  411f2c:	je     0x411f39
  411f2e:	mov    eax,DWORD PTR [rbx+0x28]
  411f31:	and    eax,0x3
  411f34:	cmp    eax,0x1
  411f37:	je     0x411f70
  411f39:	mov    rcx,QWORD PTR [rbx]
  411f3c:	call   0x421e50
  411f41:	call   rsi
  411f43:	mov    ecx,DWORD PTR [rbx+0x18]
  411f46:	mov    eax,DWORD PTR [rax]
  411f48:	cmp    ecx,0xffffffff
  411f4b:	mov    DWORD PTR [rbx+0x20],eax
  411f4e:	je     0x411f5f
  411f50:	call   0x421ce8
  411f55:	mov    eax,DWORD PTR [rbx+0x20]
  411f58:	mov    DWORD PTR [rbx+0x18],0xffffffff
  411f5f:	add    rsp,0x28
  411f63:	pop    rbx
  411f64:	pop    rsi
  411f65:	ret    
  411f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f70:	mov    ecx,DWORD PTR [rbx+0x18]
  411f73:	xor    r8d,r8d
  411f76:	xor    edx,edx
  411f78:	call   0x41d2c0
  411f7d:	test   rax,rax
  411f80:	js     0x411f39
  411f82:	mov    ecx,DWORD PTR [rbx+0x18]
  411f85:	mov    r8d,DWORD PTR [rbx+0x8]
  411f89:	mov    rdx,QWORD PTR [rbx]
  411f8c:	call   0x421d18
  411f91:	jmp    0x411f39
  411f93:	nop    DWORD PTR [rax]
  411f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411fa0:	push   r15
  411fa2:	push   r14
  411fa4:	push   r13
  411fa6:	push   r12
  411fa8:	push   rbp
  411fa9:	push   rdi
  411faa:	push   rsi
  411fab:	push   rbx
  411fac:	sub    rsp,0x158
  411fb3:	mov    r13,rcx
  411fb6:	mov    r14d,r8d
  411fb9:	mov    rcx,rdx
  411fbc:	mov    eax,DWORD PTR [r13+0x10]
  411fc0:	mov    r8d,0x2
  411fc6:	mov    edx,0x3
  411fcb:	mov    QWORD PTR [rsp+0xa0],0x0
  411fd7:	mov    QWORD PTR [rsp+0xa8],0x0
  411fe3:	mov    DWORD PTR [rsp+0xb0],0x2
  411fee:	mov    DWORD PTR [rsp+0xb4],0x0
  411ff9:	mov    DWORD PTR [rsp+0x34],eax
  411ffd:	lea    rax,[rsp+0xe0]
  412005:	mov    r9,rax
  412008:	mov    QWORD PTR [rsp+0x38],rax
  41200d:	call   0x411cd0
  412012:	cmp    rax,0xffffffffffffffff
  412016:	mov    rbx,rax
  412019:	je     0x412186
  41201f:	mov    eax,DWORD PTR [r13+0x10]
  412023:	mov    esi,0x2
  412028:	mov    edx,eax
  41202a:	and    edx,0xfffffffb
  41202d:	test   r14d,r14d
  412030:	mov    DWORD PTR [r13+0x10],edx
  412034:	je     0x412519
  41203a:	test   eax,0x80000
  41203f:	mov    eax,0x1
  412044:	cmove  esi,eax
  412047:	lea    rax,[rsp+0x110]
  41204f:	mov    QWORD PTR [rsp+0x48],rax
  412054:	lea    rax,[rsp+0x111]
  41205c:	mov    QWORD PTR [rsp+0x50],rax
  412061:	lea    rax,[rsp+0xa0]
  412069:	mov    QWORD PTR [rsp+0x40],rax
  41206e:	lea    rax,[rsp+0x90]
  412076:	mov    QWORD PTR [rsp+0x58],rax
  41207b:	lea    rax,[rsp+0xc0]
  412083:	mov    QWORD PTR [rsp+0x60],rax
  412088:	lea    rax,[rsp+0x9c]
  412090:	mov    QWORD PTR [rsp+0x68],rax
  412095:	mov    rax,QWORD PTR [rip+0x22cc4]        # 0x434d60
  41209c:	mov    DWORD PTR [rsp+0xb0],esi
  4120a3:	test   rax,rax
  4120a6:	jne    0x4120b4
  4120a8:	jmp    0x41255d
  4120ad:	nop    DWORD PTR [rax]
  4120b0:	add    rbx,0x1
  4120b4:	movzx  ecx,BYTE PTR [rbx]
  4120b7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4120bb:	mov    rdx,rcx
  4120be:	jne    0x4120b0
  4120c0:	cmp    cl,0x7f
  4120c3:	ja     0x4121a0
  4120c9:	lea    rdi,[rip+0x1a1f0]        # 0x42c2c0
  4120d0:	movzx  eax,cl
  4120d3:	test   DWORD PTR [rdi+rax*4],0x180040
  4120da:	je     0x4121a0
  4120e0:	lea    rbp,[rbx+0x1]
  4120e4:	mov    edx,0xa
  4120e9:	mov    rcx,rbp
  4120ec:	call   0x421dc0
  4120f1:	test   rax,rax
  4120f4:	mov    r12,rax
  4120f7:	je     0x41256c
  4120fd:	mov    rcx,QWORD PTR [rip+0x22cdc]        # 0x434de0
  412104:	test   rcx,rcx
  412107:	je     0x412776
  41210d:	movzx  eax,BYTE PTR [rbx+0x1]
  412111:	cmp    BYTE PTR [rcx+rax*1],0x0
  412115:	je     0x41212e
  412117:	nop    WORD PTR [rax+rax*1+0x0]
  412120:	add    rbp,0x1
  412124:	movzx  eax,BYTE PTR [rbp+0x0]
  412128:	cmp    BYTE PTR [rcx+rax*1],0x0
  41212c:	jne    0x412120
  41212e:	mov    r8,QWORD PTR [rip+0x22c2b]        # 0x434d60
  412135:	test   r8,r8
  412138:	jne    0x412144
  41213a:	jmp    0x412785
  41213f:	nop
  412140:	add    rbp,0x1
  412144:	movzx  eax,BYTE PTR [rbp+0x0]
  412148:	cmp    BYTE PTR [r8+rax*1],0x0
  41214d:	jne    0x412140
  41214f:	cmp    rbp,r12
  412152:	ja     0x4124ec
  412158:	cmp    al,0x3a
  41215a:	je     0x4124b9
  412160:	cmp    al,0x3d
  412162:	je     0x4124b9
  412168:	movzx  eax,BYTE PTR [rbp-0x1]
  41216c:	cmp    al,0x7f
  41216e:	jbe    0x412546
  412174:	mov    rcx,QWORD PTR [rsp+0x38]
  412179:	call   0x411f10
  41217e:	mov    eax,DWORD PTR [rsp+0x34]
  412182:	mov    DWORD PTR [r13+0x10],eax
  412186:	add    rsp,0x158
  41218d:	pop    rbx
  41218e:	pop    rsi
  41218f:	pop    rdi
  412190:	pop    rbp
  412191:	pop    r12
  412193:	pop    r13
  412195:	pop    r14
  412197:	pop    r15
  412199:	ret    
  41219a:	nop    WORD PTR [rax+rax*1+0x0]
  4121a0:	cmp    dl,0x3c
  4121a3:	je     0x412270
  4121a9:	cmp    dl,0x5b
  4121ac:	je     0x4121d0
  4121ae:	cmp    dl,0x23
  4121b1:	jne    0x412174
  4121b3:	lea    rcx,[rbx+0x1]
  4121b7:	mov    edx,0xa
  4121bc:	call   0x421dc0
  4121c1:	mov    rbx,rax
  4121c4:	test   rbx,rbx
  4121c7:	jne    0x412095
  4121cd:	jmp    0x412174
  4121cf:	nop
  4121d0:	mov    rbp,QWORD PTR [r13+0x30]
  4121d4:	mov    rcx,rbp
  4121d7:	call   0x421d98
  4121dc:	lea    rcx,[rbx+0x1]
  4121e0:	mov    r8,rax
  4121e3:	mov    rdx,rbp
  4121e6:	mov    rdi,rax
  4121e9:	call   0x421d90
  4121ee:	test   eax,eax
  4121f0:	je     0x412524
  4121f6:	cmp    rdi,0x10
  4121fa:	ja     0x412174
  412200:	mov    rcx,QWORD PTR [rsp+0x50]
  412205:	mov    r8,rdi
  412208:	mov    rdx,rbp
  41220b:	mov    QWORD PTR [rsp+0x110],0x5b
  412217:	mov    QWORD PTR [rsp+0x118],0x0
  412223:	mov    QWORD PTR [rsp+0x120],0x0
  41222f:	call   0x421e08
  412234:	mov    rdx,QWORD PTR [rsp+0x48]
  412239:	mov    rcx,rbx
  41223c:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  412244:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  41224c:	call   0x421d70
  412251:	test   rax,rax
  412254:	je     0x412174
  41225a:	mov    edx,0xa
  41225f:	mov    rcx,rax
  412262:	call   0x421dc0
  412267:	mov    rbx,rax
  41226a:	jmp    0x4121c4
  41226f:	nop
  412270:	movzx  eax,BYTE PTR [rbx+0x1]
  412274:	cmp    al,0x7f
  412276:	ja     0x412480
  41227c:	lea    rdi,[rip+0x1a03d]        # 0x42c2c0
  412283:	movzx  edx,al
  412286:	test   DWORD PTR [rdi+rdx*4],0x180040
  41228d:	je     0x412480
  412293:	mov    eax,DWORD PTR [rip+0x11737]        # 0x4239d0
  412299:	mov    DWORD PTR [rsp+0x9c],eax
  4122a0:	lea    rax,[rbx+0x1]
  4122a4:	mov    QWORD PTR [rsp+0x70],rax
  4122a9:	mov    rax,QWORD PTR [rip+0x22b30]        # 0x434de0
  4122b0:	test   rax,rax
  4122b3:	je     0x412849
  4122b9:	movzx  edx,BYTE PTR [rbx+0x1]
  4122bd:	mov    r15,QWORD PTR [rsp+0x70]
  4122c2:	cmp    BYTE PTR [rax+rdx*1],0x0
  4122c6:	je     0x4122de
  4122c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4122d0:	add    r15,0x1
  4122d4:	movzx  edx,BYTE PTR [r15]
  4122d8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4122dc:	jne    0x4122d0
  4122de:	mov    DWORD PTR [rsp+0xc0],0x1
  4122e9:	movzx  edx,BYTE PTR [r15]
  4122ed:	cmp    dl,0x20
  4122f0:	je     0x4126e6
  4122f6:	jle    0x412606
  4122fc:	cmp    dl,0x2f
  4122ff:	je     0x41273e
  412305:	cmp    dl,0x3e
  412308:	mov    rbp,r15
  41230b:	jne    0x41260f
  412311:	mov    BYTE PTR [r15],0x0
  412315:	mov    rcx,QWORD PTR [rsp+0x70]
  41231a:	lea    r12,[rbp+0x1]
  41231e:	mov    eax,DWORD PTR [rsp+0x9c]
  412325:	mov    DWORD PTR [rsp+0x80],eax
  41232c:	call   0x421d98
  412331:	lea    rcx,[rax+0x4]
  412335:	mov    rbx,rax
  412338:	cmp    rcx,0x3f
  41233c:	ja     0x412797
  412342:	mov    rax,QWORD PTR [rsp+0x48]
  412347:	mov    rdx,QWORD PTR [rsp+0x70]
  41234c:	mov    r8,rbx
  41234f:	mov    BYTE PTR [rsp+0x110],0x3c
  412357:	mov    BYTE PTR [rsp+0x111],0x2f
  41235f:	lea    rcx,[rax+0x2]
  412363:	call   0x421e08
  412368:	lea    rcx,[rbx+0x3]
  41236c:	mov    rdx,QWORD PTR [rsp+0x48]
  412371:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  412379:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  412381:	mov    BYTE PTR [rbp+0x1],0x20
  412385:	mov    QWORD PTR [rsp+0x78],rcx
  41238a:	mov    rcx,r12
  41238d:	call   0x421d70
  412392:	mov    rdx,rax
  412395:	test   rdx,rdx
  412398:	je     0x412174
  41239e:	mov    rbx,QWORD PTR [rsp+0x78]
  4123a3:	add    rbx,rdx
  4123a6:	cmp    DWORD PTR [rsp+0x80],0x1
  4123ae:	je     0x4123f6
  4123b0:	mov    r8,QWORD PTR [rip+0x229a9]        # 0x434d60
  4123b7:	test   r8,r8
  4123ba:	je     0x41295c
  4123c0:	cmp    r12,rdx
  4123c3:	jb     0x4123eb
  4123c5:	mov    rcx,r12
  4123c8:	mov    QWORD PTR [rsp+0x78],r8
  4123cd:	call   0x421d98
  4123d2:	lea    rdx,[r12+rax*1]
  4123d6:	mov    r8,QWORD PTR [rsp+0x78]
  4123db:	cmp    r12,rdx
  4123de:	jb     0x4123eb
  4123e0:	jmp    0x4123f6
  4123e2:	sub    rdx,0x1
  4123e6:	cmp    r12,rdx
  4123e9:	jae    0x4123f6
  4123eb:	movzx  eax,BYTE PTR [rdx-0x1]
  4123ef:	cmp    BYTE PTR [r8+rax*1],0x0
  4123f4:	jne    0x4123e2
  4123f6:	test   rbx,rbx
  4123f9:	mov    BYTE PTR [rdx],0x0
  4123fc:	je     0x412174
  412402:	mov    r8,r12
  412405:	mov    edx,0x20
  41240a:	mov    rcx,r15
  41240d:	sub    r8,r15
  412410:	call   0x421df8
  412415:	cmp    DWORD PTR [rsp+0xc0],0x1
  41241d:	mov    eax,DWORD PTR [rsp+0x9c]
  412424:	jne    0x412758
  41242a:	test   eax,eax
  41242c:	jne    0x412758
  412432:	mov    BYTE PTR [rsp+0x92],0x0
  41243a:	add    rbp,0x2
  41243e:	lea    rax,[rbp-0x1]
  412442:	lea    r9,[r12+0x1]
  412447:	mov    QWORD PTR [rsp+0x78],rax
  41244c:	movzx  eax,BYTE PTR [r12]
  412451:	cmp    eax,0x25
  412454:	je     0x412900
  41245a:	cmp    eax,0x26
  41245d:	je     0x412874
  412463:	test   eax,eax
  412465:	je     0x412867
  41246b:	mov    r12,r9
  41246e:	mov    BYTE PTR [rbp-0x1],al
  412471:	add    rbp,0x1
  412475:	jmp    0x41243e
  412477:	nop    WORD PTR [rax+rax*1+0x0]
  412480:	cmp    al,0x2f
  412482:	je     0x4125a3
  412488:	cmp    al,0x3f
  41248a:	je     0x41262e
  412490:	cmp    al,0x21
  412492:	jne    0x412174
  412498:	lea    rdx,[rip+0x16118]        # 0x4285b7
  41249f:	mov    rcx,rbx
  4124a2:	call   0x421d70
  4124a7:	test   rax,rax
  4124aa:	je     0x412174
  4124b0:	lea    rbx,[rax+0x3]
  4124b4:	jmp    0x4121c4
  4124b9:	mov    rax,QWORD PTR [rip+0x228a0]        # 0x434d60
  4124c0:	lea    rdi,[rbp+0x1]
  4124c4:	test   rax,rax
  4124c7:	je     0x412858
  4124cd:	movzx  edx,BYTE PTR [rbp+0x1]
  4124d1:	cmp    BYTE PTR [rax+rdx*1],0x0
  4124d5:	jne    0x412580
  4124db:	cmp    r12,rdi
  4124de:	jb     0x4124ec
  4124e0:	cmp    BYTE PTR [r12-0x1],0x5c
  4124e6:	je     0x4125c3
  4124ec:	lea    rdi,[r12+0x1]
  4124f1:	mov    BYTE PTR [r12],0x0
  4124f6:	mov    rdx,QWORD PTR [rsp+0x40]
  4124fb:	mov    r8,rbx
  4124fe:	mov    DWORD PTR [rsp+0x20],0x1
  412506:	mov    r9d,r14d
  412509:	mov    rcx,r13
  41250c:	mov    rbx,rdi
  41250f:	call   0x410ea0
  412514:	jmp    0x4121c4
  412519:	mov    sil,0x4
  41251c:	mov    r14b,0x1
  41251f:	jmp    0x41203a
  412524:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  412529:	jne    0x4121f6
  41252f:	lea    rcx,[rbx+rdi*1+0x2]
  412534:	mov    edx,0xa
  412539:	call   0x421dc0
  41253e:	mov    rbx,rax
  412541:	jmp    0x4121c4
  412546:	test   DWORD PTR [rdi+rax*4],0xc01
  41254d:	je     0x412174
  412553:	cmp    BYTE PTR [r12-0x1],0x5c
  412559:	jne    0x4124ec
  41255b:	jmp    0x4125c3
  41255d:	mov    ecx,0xc
  412562:	call   0x4097f0
  412567:	jmp    0x4120b4
  41256c:	mov    rcx,rbp
  41256f:	call   0x421d98
  412574:	lea    rbx,[rbp+rax*1+0x0]
  412579:	jmp    0x4121c4
  41257e:	xchg   ax,ax
  412580:	add    rdi,0x1
  412584:	movzx  edx,BYTE PTR [rdi]
  412587:	cmp    BYTE PTR [rax+rdx*1],0x0
  41258b:	je     0x4124db
  412591:	add    rdi,0x1
  412595:	movzx  edx,BYTE PTR [rdi]
  412598:	cmp    BYTE PTR [rax+rdx*1],0x0
  41259c:	jne    0x412580
  41259e:	jmp    0x4124db
  4125a3:	lea    rcx,[rbx+0x2]
  4125a7:	mov    edx,0x3e
  4125ac:	call   0x421dc0
  4125b1:	test   rax,rax
  4125b4:	lea    rbx,[rax+0x1]
  4125b8:	jne    0x4121c4
  4125be:	jmp    0x412174
  4125c3:	movzx  eax,BYTE PTR [r12]
  4125c8:	lea    rdx,[r12-0x1]
  4125cd:	lea    rdi,[r12+0x1]
  4125d2:	cmp    al,0xa
  4125d4:	je     0x4125fe
  4125d6:	cmp    al,0x5c
  4125d8:	je     0x4126cb
  4125de:	test   al,al
  4125e0:	je     0x4126c4
  4125e6:	add    rdx,0x1
  4125ea:	mov    r12,rdi
  4125ed:	mov    BYTE PTR [rdx-0x1],al
  4125f0:	movzx  eax,BYTE PTR [r12]
  4125f5:	lea    rdi,[r12+0x1]
  4125fa:	cmp    al,0xa
  4125fc:	jne    0x4125d6
  4125fe:	mov    BYTE PTR [rdx],0x0
  412601:	jmp    0x4124f6
  412606:	cmp    dl,0x9
  412609:	je     0x4126e6
  41260f:	mov    edx,0x3e
  412614:	mov    rcx,r15
  412617:	call   0x421dc0
  41261c:	test   rax,rax
  41261f:	je     0x412174
  412625:	lea    rbx,[rax+0x1]
  412629:	jmp    0x4121c4
  41262e:	mov    rdi,QWORD PTR [rip+0x225ab]        # 0x434be0
  412635:	test   rdi,rdi
  412638:	je     0x41281b
  41263e:	mov    rcx,rdi
  412641:	call   0x421d98
  412646:	mov    r12,rax
  412649:	lea    r15,[rbx+0x2]
  41264d:	mov    rdx,rdi
  412650:	xor    ebp,ebp
  412652:	mov    rdi,rbx
  412655:	mov    r8,r12
  412658:	mov    rcx,r15
  41265b:	mov    ebx,ebp
  41265d:	call   0x421d90
  412662:	test   eax,eax
  412664:	jne    0x412682
  412666:	lea    rdx,[rdi+r12*1+0x2]
  41266b:	movzx  eax,BYTE PTR [rdx]
  41266e:	cmp    al,0x7f
  412670:	ja     0x4126ab
  412672:	lea    rcx,[rip+0x19c47]        # 0x42c2c0
  412679:	test   DWORD PTR [rcx+rax*4],0x3b0060
  412680:	je     0x4126ab
  412682:	cmp    rbp,0x1
  412686:	je     0x41260f
  412688:	mov    rdx,QWORD PTR [rip+0x22559]        # 0x434be8
  41268f:	mov    ebp,0x1
  412694:	mov    rcx,rdx
  412697:	mov    QWORD PTR [rsp+0x70],rdx
  41269c:	call   0x421d98
  4126a1:	mov    rdx,QWORD PTR [rsp+0x70]
  4126a6:	mov    r12,rax
  4126a9:	jmp    0x412655
  4126ab:	lea    rax,[rip+0x162ce]        # 0x428980
  4126b2:	movsxd r12,ebx
  4126b5:	mov    rcx,r13
  4126b8:	call   QWORD PTR [rax+r12*8]
  4126bc:	mov    rbx,rax
  4126bf:	jmp    0x4121c4
  4126c4:	xor    edi,edi
  4126c6:	jmp    0x4125fe
  4126cb:	cmp    BYTE PTR [r12+0x1],0xa
  4126d1:	jne    0x4125e6
  4126d7:	lea    rdi,[r12+0x2]
  4126dc:	mov    eax,0xa
  4126e1:	jmp    0x4125e6
  4126e6:	mov    rax,QWORD PTR [rip+0x22673]        # 0x434d60
  4126ed:	test   rax,rax
  4126f0:	je     0x412949
  4126f6:	cmp    BYTE PTR [rax+rdx*1],0x0
  4126fa:	mov    rcx,r15
  4126fd:	je     0x41270d
  4126ff:	nop
  412700:	add    rcx,0x1
  412704:	movzx  edx,BYTE PTR [rcx]
  412707:	cmp    BYTE PTR [rax+rdx*1],0x0
  41270b:	jne    0x412700
  41270d:	mov    r8,QWORD PTR [rsp+0x60]
  412712:	mov    rdx,QWORD PTR [rsp+0x68]
  412717:	call   0x40bcc0
  41271c:	test   rax,rax
  41271f:	mov    rbp,rax
  412722:	je     0x412174
  412728:	movzx  eax,BYTE PTR [rax]
  41272b:	cmp    al,0x3e
  41272d:	je     0x412311
  412733:	cmp    al,0x2f
  412735:	jne    0x412174
  41273b:	mov    r15,rbp
  41273e:	cmp    BYTE PTR [r15+0x1],0x3e
  412743:	jne    0x412174
  412749:	lea    rbx,[r15+0x2]
  41274d:	mov    BYTE PTR [r15],0x0
  412751:	mov    eax,DWORD PTR [rsp+0x9c]
  412758:	mov    r8,QWORD PTR [rsp+0x70]
  41275d:	mov    rdx,QWORD PTR [rsp+0x40]
  412762:	mov    r9d,r14d
  412765:	mov    DWORD PTR [rsp+0x20],eax
  412769:	mov    rcx,r13
  41276c:	call   0x410ea0
  412771:	jmp    0x4121c4
  412776:	mov    cl,0x1c
  412778:	call   0x4097f0
  41277d:	mov    rcx,rax
  412780:	jmp    0x41210d
  412785:	mov    ecx,0xc
  41278a:	call   0x4097f0
  41278f:	mov    r8,rax
  412792:	jmp    0x412144
  412797:	call   0x409ce0
  41279c:	mov    rdx,QWORD PTR [rsp+0x70]
  4127a1:	lea    rcx,[rax+0x2]
  4127a5:	mov    r8,rbx
  4127a8:	mov    BYTE PTR [rax],0x3c
  4127ab:	mov    BYTE PTR [rax+0x1],0x2f
  4127af:	mov    QWORD PTR [rsp+0x88],rax
  4127b7:	call   0x421e08
  4127bc:	mov    r11,QWORD PTR [rsp+0x88]
  4127c4:	lea    rax,[rbx+0x3]
  4127c8:	mov    rcx,r12
  4127cb:	mov    QWORD PTR [rsp+0x78],rax
  4127d0:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  4127d6:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  4127dc:	mov    rdx,r11
  4127df:	mov    BYTE PTR [rbp+0x1],0x20
  4127e3:	call   0x421d70
  4127e8:	mov    r11,QWORD PTR [rsp+0x88]
  4127f0:	cmp    r11,QWORD PTR [rsp+0x48]
  4127f5:	mov    rdx,rax
  4127f8:	je     0x412395
  4127fe:	mov    rcx,r11
  412801:	mov    QWORD PTR [rsp+0x88],rax
  412809:	call   0x421e50
  41280e:	mov    rdx,QWORD PTR [rsp+0x88]
  412816:	jmp    0x412395
  41281b:	lea    rax,[rip+0x16eb7]        # 0x4296d9
  412822:	mov    r12d,0x7
  412828:	lea    rdi,[rip+0x16eaa]        # 0x4296d9
  41282f:	mov    QWORD PTR [rip+0x223aa],rax        # 0x434be0
  412836:	lea    rax,[rip+0x16e8f]        # 0x4296cc
  41283d:	mov    QWORD PTR [rip+0x223a4],rax        # 0x434be8
  412844:	jmp    0x412649
  412849:	mov    ecx,0x1c
  41284e:	call   0x4097f0
  412853:	jmp    0x4122b9
  412858:	mov    ecx,0xc
  41285d:	call   0x4097f0
  412862:	jmp    0x4124cd
  412867:	mov    rax,QWORD PTR [rsp+0x78]
  41286c:	mov    BYTE PTR [rax],0x0
  41286f:	jmp    0x412751
  412874:	mov    QWORD PTR [rsp+0x110],r9
  41287c:	movzx  eax,BYTE PTR [r12+0x1]
  412882:	cmp    al,0x23
  412884:	je     0x412a1a
  41288a:	movzx  edx,al
  41288d:	cmp    edx,0x7f
  412890:	ja     0x4129a7
  412896:	test   DWORD PTR [rdi+rdx*4],0x30000
  41289d:	je     0x4129a7
  4128a3:	mov    rcx,r9
  4128a6:	cmp    al,0x58
  4128a8:	je     0x412990
  4128ae:	cmp    al,0x78
  4128b0:	je     0x412990
  4128b6:	cmp    al,0x30
  4128b8:	mov    r8d,0xa
  4128be:	je     0x412978
  4128c4:	mov    rdx,QWORD PTR [rsp+0x48]
  4128c9:	call   0x421d60
  4128ce:	cmp    eax,0x7f
  4128d1:	mov    r12,QWORD PTR [rsp+0x110]
  4128d9:	ja     0x412867
  4128db:	cmp    BYTE PTR [r12],0x3b
  4128e0:	jne    0x412867
  4128e2:	add    r12,0x1
  4128e6:	test   eax,eax
  4128e8:	mov    BYTE PTR [rbp-0x1],al
  4128eb:	jne    0x412471
  4128f1:	jmp    0x412751
  4128f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412900:	movzx  edx,BYTE PTR [r12+0x1]
  412906:	lea    r15,[r12+0x3]
  41290b:	mov    BYTE PTR [rsp+0x90],dl
  412912:	movzx  eax,BYTE PTR [r12+0x2]
  412918:	test   dl,dl
  41291a:	mov    BYTE PTR [rsp+0x91],al
  412921:	je     0x412867
  412927:	test   al,al
  412929:	je     0x412867
  41292f:	mov    rcx,QWORD PTR [rsp+0x58]
  412934:	mov    r8d,0x10
  41293a:	xor    edx,edx
  41293c:	mov    r12,r15
  41293f:	call   0x421d60
  412944:	jmp    0x41246e
  412949:	mov    ecx,0xc
  41294e:	call   0x4097f0
  412953:	movzx  edx,BYTE PTR [r15]
  412957:	jmp    0x4126f6
  41295c:	mov    ecx,0xc
  412961:	mov    QWORD PTR [rsp+0x78],rdx
  412966:	call   0x4097f0
  41296b:	mov    rdx,QWORD PTR [rsp+0x78]
  412970:	mov    r8,rax
  412973:	jmp    0x4123c0
  412978:	cmp    BYTE PTR [rcx+0x1],0x30
  41297c:	mov    r8d,0x10
  412982:	mov    eax,0xa
  412987:	cmovne r8d,eax
  41298b:	jmp    0x4128c4
  412990:	add    rcx,0x1
  412994:	mov    r8d,0x10
  41299a:	mov    QWORD PTR [rsp+0x110],rcx
  4129a2:	jmp    0x4128c4
  4129a7:	lea    r12,[rip+0x1605a]        # 0x428a08
  4129ae:	xor    r15d,r15d
  4129b1:	jmp    0x4129c5
  4129b3:	add    r15d,0x1
  4129b7:	add    r12,0x10
  4129bb:	cmp    r15d,0xc
  4129bf:	je     0x412867
  4129c5:	movzx  r10d,WORD PTR [r12]
  4129ca:	mov    rdx,QWORD PTR [r12-0x8]
  4129cf:	mov    rcx,r9
  4129d2:	mov    QWORD PTR [rsp+0x80],r9
  4129da:	mov    r8,r10
  4129dd:	mov    QWORD PTR [rsp+0x88],r10
  4129e5:	call   0x421d90
  4129ea:	test   eax,eax
  4129ec:	mov    r9,QWORD PTR [rsp+0x80]
  4129f4:	mov    r10,QWORD PTR [rsp+0x88]
  4129fc:	jne    0x4129b3
  4129fe:	movsxd rax,r15d
  412a01:	lea    rcx,[rip+0x15ff8]        # 0x428a00
  412a08:	lea    r12,[r9+r10*1]
  412a0c:	shl    rax,0x4
  412a10:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  412a15:	jmp    0x4128e6
  412a1a:	lea    rcx,[r12+0x2]
  412a1f:	mov    QWORD PTR [rsp+0x110],rcx
  412a27:	movzx  eax,BYTE PTR [r12+0x2]
  412a2d:	jmp    0x4128a6
  412a32:	nop    DWORD PTR [rax+0x0]
  412a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a40:	push   r15
  412a42:	push   r14
  412a44:	push   r13
  412a46:	push   r12
  412a48:	push   rbp
  412a49:	push   rdi
  412a4a:	push   rsi
  412a4b:	push   rbx
  412a4c:	sub    rsp,0x188
  412a53:	mov    rdx,QWORD PTR [rcx+0x58]
  412a57:	test   rdx,rdx
  412a5a:	je     0x412af9
  412a60:	mov    r15d,DWORD PTR [rcx+0x10]
  412a64:	mov    eax,r15d
  412a67:	and    eax,0xfffffffb
  412a6a:	cmp    QWORD PTR [rdx+0x8],0x0
  412a6f:	mov    DWORD PTR [rcx+0x10],eax
  412a72:	je     0x412c03
  412a78:	lea    rax,[rdx+0x10]
  412a7c:	xor    ebx,ebx
  412a7e:	xchg   ax,ax
  412a80:	add    rax,0x8
  412a84:	add    ebx,0x1
  412a87:	cmp    QWORD PTR [rax-0x8],0x0
  412a8c:	jne    0x412a80
  412a8e:	mov    rsi,rcx
  412a91:	mov    ebp,0xffffffff
  412a96:	lea    r12,[rsp+0x70]
  412a9b:	lea    r14,[rsp+0x30]
  412aa0:	mov    r13,QWORD PTR [rip+0x2674d]        # 0x4391f4
  412aa7:	jmp    0x412ade
  412aa9:	nop    DWORD PTR [rax+0x0]
  412ab0:	movsxd rax,ebx
  412ab3:	mov    edi,ebx
  412ab5:	shl    rax,0x3
  412ab9:	mov    r8,QWORD PTR [rdx+rax*1]
  412abd:	test   r8,r8
  412ac0:	je     0x412af5
  412ac2:	mov    r9,QWORD PTR [rsi+0x20]
  412ac6:	mov    edx,0x105
  412acb:	mov    rcx,r12
  412ace:	lea    ebx,[rdi+rbp*1]
  412ad1:	call   0x40e880
  412ad6:	test   al,al
  412ad8:	jne    0x412b10
  412ada:	mov    rdx,QWORD PTR [rsi+0x58]
  412ade:	cmp    ebx,0xffffffff
  412ae1:	jne    0x412ab0
  412ae3:	xor    eax,eax
  412ae5:	xor    edi,edi
  412ae7:	mov    ebp,0x1
  412aec:	mov    r8,QWORD PTR [rdx+rax*1]
  412af0:	test   r8,r8
  412af3:	jne    0x412ac2
  412af5:	mov    DWORD PTR [rsi+0x10],r15d
  412af9:	add    rsp,0x188
  412b00:	pop    rbx
  412b01:	pop    rsi
  412b02:	pop    rdi
  412b03:	pop    rbp
  412b04:	pop    r12
  412b06:	pop    r13
  412b08:	pop    r14
  412b0a:	pop    r15
  412b0c:	ret    
  412b0d:	nop    DWORD PTR [rax]
  412b10:	mov    rdx,r14
  412b13:	mov    rcx,r12
  412b16:	call   r13
  412b19:	test   eax,eax
  412b1b:	jne    0x412ada
  412b1d:	movzx  eax,WORD PTR [rsp+0x36]
  412b22:	and    ax,0xf000
  412b26:	cmp    ax,0x4000
  412b2a:	jne    0x412bb8
  412b30:	mov    r9,r12
  412b33:	mov    edx,DWORD PTR [r9]
  412b36:	add    r9,0x4
  412b3a:	lea    eax,[rdx-0x1010101]
  412b40:	not    edx
  412b42:	and    eax,edx
  412b44:	and    eax,0x80808080
  412b49:	je     0x412b33
  412b4b:	mov    edx,eax
  412b4d:	shr    edx,0x10
  412b50:	test   eax,0x8080
  412b55:	cmove  eax,edx
  412b58:	lea    rdx,[r9+0x2]
  412b5c:	cmove  r9,rdx
  412b60:	mov    rdx,QWORD PTR [rsi+0x38]
  412b64:	add    al,al
  412b66:	sbb    r9,0x3
  412b6a:	sub    r9,r12
  412b6d:	mov    rcx,rdx
  412b70:	mov    QWORD PTR [rsp+0x28],r9
  412b75:	mov    QWORD PTR [rsp+0x20],rdx
  412b7a:	call   0x421d98
  412b7f:	mov    r9,QWORD PTR [rsp+0x28]
  412b84:	lea    r8,[rax+0x1]
  412b88:	mov    rdx,QWORD PTR [rsp+0x20]
  412b8d:	lea    rax,[r9+r8*1+0x1]
  412b92:	cmp    rax,0x104
  412b98:	ja     0x412ada
  412b9e:	add    r9,r12
  412ba1:	cmp    BYTE PTR [r9-0x1],0x5c
  412ba6:	mov    rcx,r9
  412ba9:	je     0x412bb3
  412bab:	add    rcx,0x1
  412baf:	mov    BYTE PTR [r9],0x5c
  412bb3:	call   0x421e08
  412bb8:	mov    r8d,ebp
  412bbb:	mov    rdx,r12
  412bbe:	mov    rcx,rsi
  412bc1:	call   0x411fa0
  412bc6:	cmp    ebp,0xffffffff
  412bc9:	jne    0x412ada
  412bcf:	movzx  eax,WORD PTR [rsi+0xaa]
  412bd6:	add    rax,0x1
  412bda:	lea    rdx,[rax+rax*2]
  412bde:	lea    rax,[rax+rdx*4]
  412be2:	mov    rdx,QWORD PTR [rsi+0x78]
  412be6:	lea    rax,[rdx+rax*8]
  412bea:	mov    eax,DWORD PTR [rax+0x10]
  412bed:	shr    eax,0x5
  412bf0:	and    eax,0x1
  412bf3:	mov    eax,0x1
  412bf8:	cmovne ebx,edi
  412bfb:	cmovne ebp,eax
  412bfe:	jmp    0x412ada
  412c03:	xor    ebx,ebx
  412c05:	jmp    0x412a8e
  412c0a:	nop    WORD PTR [rax+rax*1+0x0]
  412c10:	push   rdi
  412c11:	push   rsi
  412c12:	push   rbx
  412c13:	sub    rsp,0x20
  412c17:	mov    rbx,rcx
  412c1a:	mov    rdi,rdx
  412c1d:	call   0x40b020
  412c22:	test   eax,eax
  412c24:	mov    esi,eax
  412c26:	jne    0x412c40
  412c28:	mov    QWORD PTR [rbx+0x28],rdi
  412c2c:	mov    rcx,rbx
  412c2f:	call   0x412a40
  412c34:	mov    eax,esi
  412c36:	add    rsp,0x20
  412c3a:	pop    rbx
  412c3b:	pop    rsi
  412c3c:	pop    rdi
  412c3d:	ret    
  412c3e:	xchg   ax,ax
  412c40:	mov    esi,0xffffffff
  412c45:	jmp    0x412c34
  412c47:	nop    WORD PTR [rax+rax*1+0x0]
  412c50:	push   rsi
  412c51:	push   rbx
  412c52:	sub    rsp,0x68
  412c56:	cmp    rcx,0xf
  412c5a:	jbe    0x412c62
  412c5c:	test   BYTE PTR [rdx+0x10],0x28
  412c60:	je     0x412c70
  412c62:	add    rsp,0x68
  412c66:	pop    rbx
  412c67:	pop    rsi
  412c68:	ret    
  412c69:	nop    DWORD PTR [rax+0x0]
  412c70:	mov    rsi,rdx
  412c73:	mov    rbx,rcx
  412c76:	lea    rdx,[rsp+0x20]
  412c7b:	mov    rcx,QWORD PTR [rsi+0x18]
  412c7f:	call   QWORD PTR [rip+0x2656f]        # 0x4391f4
  412c85:	test   eax,eax
  412c87:	je     0x412ca3
  412c89:	test   BYTE PTR [rbx+0x10],0x4
  412c8d:	je     0x412c62
  412c8f:	mov    rcx,QWORD PTR [rbx+0x28]
  412c93:	mov    r8,QWORD PTR [rsi+0x18]
  412c97:	lea    rdx,[rip+0x15a32]        # 0x4286d0
  412c9e:	call   0x408860
  412ca3:	movzx  eax,WORD PTR [rsp+0x26]
  412ca8:	and    ax,0xf000
  412cac:	cmp    ax,0x8000
  412cb0:	je     0x412cd0
  412cb2:	test   BYTE PTR [rbx+0x10],0x4
  412cb6:	je     0x412c62
  412cb8:	call   QWORD PTR [rip+0x2630e]        # 0x438fcc
  412cbe:	mov    DWORD PTR [rax],0x16
  412cc4:	jmp    0x412c8f
  412cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cd0:	mov    rdx,QWORD PTR [rsi+0x18]
  412cd4:	xor    r8d,r8d
  412cd7:	mov    rcx,rbx
  412cda:	call   0x411fa0
  412cdf:	jmp    0x412c62
  412ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  412ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cf0:	push   r12
  412cf2:	push   rbp
  412cf3:	push   rdi
  412cf4:	push   rsi
  412cf5:	push   rbx
  412cf6:	sub    rsp,0x50
  412cfa:	mov    r8d,0x2
  412d00:	mov    edx,0x1
  412d05:	mov    ebp,DWORD PTR [rip+0x10cc5]        # 0x4239d0
  412d0b:	lea    rsi,[rsp+0x20]
  412d10:	mov    rbx,rcx
  412d13:	mov    r9,rsi
  412d16:	call   0x411cd0
  412d1b:	cmp    rax,0xffffffffffffffff
  412d1f:	mov    rdi,rax
  412d22:	je     0x412d90
  412d24:	mov    rcx,rbx
  412d27:	mov    DWORD PTR [rip+0x10c9f],0x0        # 0x4239d0
  412d31:	call   0x421d98
  412d36:	mov    rdx,rbx
  412d39:	mov    r8,rax
  412d3c:	mov    rcx,rdi
  412d3f:	call   0x40d130
  412d44:	test   rax,rax
  412d47:	mov    rbx,rax
  412d4a:	je     0x412d70
  412d4c:	mov    rcx,rsi
  412d4f:	call   0x411f10
  412d54:	mov    DWORD PTR [rip+0x10c76],ebp        # 0x4239d0
  412d5a:	mov    rax,rbx
  412d5d:	add    rsp,0x50
  412d61:	pop    rbx
  412d62:	pop    rsi
  412d63:	pop    rdi
  412d64:	pop    rbp
  412d65:	pop    r12
  412d67:	ret    
  412d68:	nop    DWORD PTR [rax+rax*1+0x0]
  412d70:	mov    rdi,QWORD PTR [rip+0x26255]        # 0x438fcc
  412d77:	call   rdi
  412d79:	mov    r12d,DWORD PTR [rax]
  412d7c:	mov    rcx,rsi
  412d7f:	call   0x411f10
  412d84:	call   rdi
  412d86:	mov    DWORD PTR [rax],r12d
  412d89:	jmp    0x412d54
  412d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d90:	xor    eax,eax
  412d92:	jmp    0x412d5d
  412d94:	xchg   ax,ax
  412d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412da0:	push   r13
  412da2:	push   r12
  412da4:	push   rbp
  412da5:	push   rdi
  412da6:	push   rsi
  412da7:	push   rbx
  412da8:	sub    rsp,0x28
  412dac:	cmp    rcx,0xf
  412db0:	jbe    0x412dbd
  412db2:	test   rdx,rdx
  412db5:	je     0x412dbd
  412db7:	test   BYTE PTR [rdx+0x10],0x8
  412dbb:	je     0x412dd0
  412dbd:	add    rsp,0x28
  412dc1:	pop    rbx
  412dc2:	pop    rsi
  412dc3:	pop    rdi
  412dc4:	pop    rbp
  412dc5:	pop    r12
  412dc7:	pop    r13
  412dc9:	ret    
  412dca:	nop    WORD PTR [rax+rax*1+0x0]
  412dd0:	mov    rsi,rcx
  412dd3:	mov    rcx,QWORD PTR [rdx+0x18]
  412dd7:	mov    rbx,rdx
  412dda:	call   0x40c150
  412ddf:	cmp    rax,0xffffffffffffffff
  412de3:	mov    rdi,rax
  412de6:	je     0x412e10
  412de8:	test   BYTE PTR [rbx+0x10],0x40
  412dec:	jne    0x412e00
  412dee:	mov    DWORD PTR [rbx+0x18],edi
  412df1:	add    rsp,0x28
  412df5:	pop    rbx
  412df6:	pop    rsi
  412df7:	pop    rdi
  412df8:	pop    rbp
  412df9:	pop    r12
  412dfb:	pop    r13
  412dfd:	ret    
  412dfe:	xchg   ax,ax
  412e00:	mov    rcx,QWORD PTR [rbx+0x18]
  412e04:	call   0x421e50
  412e09:	and    DWORD PTR [rbx+0x10],0xffffffbf
  412e0d:	jmp    0x412dee
  412e0f:	nop
  412e10:	mov    r13,QWORD PTR [rbx+0x18]
  412e14:	mov    r12,QWORD PTR [rsi+0x28]
  412e18:	mov    rbp,QWORD PTR [rip+0x10d69]        # 0x423b88
  412e1f:	call   QWORD PTR [rip+0x26157]        # 0x438f7c
  412e25:	lea    rcx,[rax+0x60]
  412e29:	mov    r9,r13
  412e2c:	mov    r8,r12
  412e2f:	mov    rdx,rbp
  412e32:	call   0x407ea0
  412e37:	test   BYTE PTR [rsi+0x10],0x4
  412e3b:	je     0x412de8
  412e3d:	mov    edx,0x1
  412e42:	mov    rcx,rsi
  412e45:	call   QWORD PTR [rsi+0x98]
  412e4b:	jmp    0x412de8
  412e4d:	nop    DWORD PTR [rax]
  412e50:	push   rbx
  412e51:	sub    rsp,0x20
  412e55:	mov    rbx,rdx
  412e58:	call   0x412da0
  412e5d:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  412e61:	je     0x412e6e
  412e63:	xor    ecx,ecx
  412e65:	call   QWORD PTR [rip+0x261e9]        # 0x439054
  412e6b:	add    DWORD PTR [rbx+0x18],eax
  412e6e:	add    rsp,0x20
  412e72:	pop    rbx
  412e73:	ret    
  412e74:	xchg   ax,ax
  412e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e80:	push   r12
  412e82:	push   rbp
  412e83:	push   rdi
  412e84:	push   rsi
  412e85:	push   rbx
  412e86:	sub    rsp,0x30
  412e8a:	test   rcx,rcx
  412e8d:	mov    rdi,rcx
  412e90:	je     0x41322e
  412e96:	mov    rax,QWORD PTR [rip+0x21ec3]        # 0x434d60
  412e9d:	test   rax,rax
  412ea0:	je     0x413256
  412ea6:	movzx  ecx,BYTE PTR [rdi]
  412ea9:	mov    rbp,rdi
  412eac:	cmp    BYTE PTR [rax+rcx*1],0x0
  412eb0:	mov    rdx,rcx
  412eb3:	je     0x412ec6
  412eb5:	add    rbp,0x1
  412eb9:	movzx  ecx,BYTE PTR [rbp+0x0]
  412ebd:	cmp    BYTE PTR [rax+rcx*1],0x0
  412ec1:	mov    rdx,rcx
  412ec4:	jne    0x412eb5
  412ec6:	test   dl,dl
  412ec8:	je     0x41322e
  412ece:	mov    rsi,rbp
  412ed1:	mov    r12d,0x2
  412ed7:	nop    WORD PTR [rax+rax*1+0x0]
  412ee0:	mov    rax,QWORD PTR [rip+0x21e79]        # 0x434d60
  412ee7:	add    r12d,0x1
  412eeb:	lea    rbx,[rsi+0x1]
  412eef:	test   rax,rax
  412ef2:	je     0x413197
  412ef8:	movzx  edx,BYTE PTR [rsi+0x1]
  412efc:	test   dl,dl
  412efe:	je     0x413208
  412f04:	cmp    BYTE PTR [rax+rdx*1],0x0
  412f08:	mov    rcx,rax
  412f0b:	je     0x412f16
  412f0d:	jmp    0x412f2d
  412f0f:	nop
  412f10:	cmp    BYTE PTR [rax+rdx*1],0x0
  412f14:	jne    0x412f21
  412f16:	add    rbx,0x1
  412f1a:	movzx  edx,BYTE PTR [rbx]
  412f1d:	test   dl,dl
  412f1f:	jne    0x412f10
  412f21:	test   rcx,rcx
  412f24:	je     0x4131c0
  412f2a:	mov    rax,rcx
  412f2d:	movzx  edx,BYTE PTR [rbx]
  412f30:	movzx  ecx,dl
  412f33:	cmp    BYTE PTR [rax+rcx*1],0x0
  412f37:	je     0x413187
  412f3d:	mov    rsi,rbx
  412f40:	add    rsi,0x1
  412f44:	movzx  ecx,BYTE PTR [rsi]
  412f47:	cmp    BYTE PTR [rax+rcx*1],0x0
  412f4b:	mov    rdx,rcx
  412f4e:	jne    0x412f40
  412f50:	test   dl,dl
  412f52:	jne    0x412ee0
  412f54:	sub    rsi,rbp
  412f57:	movsxd r12,r12d
  412f5a:	lea    rcx,[rsi+r12*8+0x10]
  412f5f:	call   0x409ce0
  412f64:	test   rax,rax
  412f67:	mov    rbp,rax
  412f6a:	je     0x413265
  412f70:	lea    rbx,[rax+r12*8]
  412f74:	lea    rsi,[rsp+0x2f]
  412f79:	mov    QWORD PTR [rax+0x8],rbx
  412f7d:	xor    eax,eax
  412f7f:	nop
  412f80:	lea    edx,[rax+0x1]
  412f83:	mov    DWORD PTR [rbp+0x0],edx
  412f86:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  412f8b:	movzx  r8d,BYTE PTR [rdi]
  412f8f:	cmp    r8b,0x7f
  412f93:	ja     0x412fad
  412f95:	lea    rdx,[rip+0x19324]        # 0x42c2c0
  412f9c:	movzx  eax,r8b
  412fa0:	test   DWORD PTR [rdx+rax*4],0xc01
  412fa7:	jne    0x41304d
  412fad:	cmp    r8b,0x22
  412fb1:	je     0x4130a0
  412fb7:	cmp    r8b,0x27
  412fbb:	je     0x412fe0
  412fbd:	test   r8b,r8b
  412fc0:	je     0x413080
  412fc6:	mov    BYTE PTR [rbx],r8b
  412fc9:	movzx  r8d,BYTE PTR [rdi+0x1]
  412fce:	add    rbx,0x1
  412fd2:	add    rdi,0x1
  412fd6:	cmp    r8b,0x7f
  412fda:	ja     0x412fad
  412fdc:	jmp    0x412f95
  412fde:	xchg   ax,ax
  412fe0:	movzx  r8d,BYTE PTR [rdi+0x1]
  412fe5:	lea    rax,[rdi+0x1]
  412fe9:	cmp    r8b,0x27
  412fed:	lea    rdi,[rax+0x1]
  412ff1:	je     0x41301e
  412ff3:	cmp    r8b,0x5c
  412ff7:	je     0x413120
  412ffd:	test   r8b,r8b
  413000:	je     0x4131d0
  413006:	mov    BYTE PTR [rbx],r8b
  413009:	movzx  r8d,BYTE PTR [rdi]
  41300d:	mov    rax,rdi
  413010:	add    rbx,0x1
  413014:	lea    rdi,[rax+0x1]
  413018:	cmp    r8b,0x27
  41301c:	jne    0x412ff3
  41301e:	test   rdi,rdi
  413021:	je     0x4131d0
  413027:	movzx  r8d,BYTE PTR [rdi]
  41302b:	cmp    r8b,0x7f
  41302f:	ja     0x412f8f
  413035:	lea    rdx,[rip+0x19284]        # 0x42c2c0
  41303c:	movzx  eax,r8b
  413040:	test   DWORD PTR [rdx+rax*4],0xc01
  413047:	je     0x412f8f
  41304d:	mov    rax,QWORD PTR [rip+0x21d0c]        # 0x434d60
  413054:	lea    r12,[rdi+0x1]
  413058:	test   rax,rax
  41305b:	je     0x413247
  413061:	movzx  edx,BYTE PTR [rdi+0x1]
  413065:	mov    rdi,r12
  413068:	cmp    BYTE PTR [rax+rdx*1],0x0
  41306c:	je     0x413080
  41306e:	xchg   ax,ax
  413070:	add    rdi,0x1
  413074:	movzx  edx,BYTE PTR [rdi]
  413077:	cmp    BYTE PTR [rax+rdx*1],0x0
  41307b:	jne    0x413070
  41307d:	nop    DWORD PTR [rax]
  413080:	mov    BYTE PTR [rbx],0x0
  413083:	cmp    BYTE PTR [rdi],0x0
  413086:	lea    rdx,[rbx+0x1]
  41308a:	mov    eax,DWORD PTR [rbp+0x0]
  41308d:	je     0x4131f1
  413093:	mov    rbx,rdx
  413096:	jmp    0x412f80
  41309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4130a0:	add    rdi,0x1
  4130a4:	movzx  r8d,BYTE PTR [rdi]
  4130a8:	lea    r12,[rdi+0x1]
  4130ac:	cmp    r8b,0x22
  4130b0:	mov    BYTE PTR [rsp+0x2f],r8b
  4130b5:	je     0x4130d2
  4130b7:	cmp    r8b,0x5c
  4130bb:	je     0x4130f2
  4130bd:	test   r8b,r8b
  4130c0:	je     0x4131d0
  4130c6:	mov    BYTE PTR [rbx],r8b
  4130c9:	mov    rdi,r12
  4130cc:	add    rbx,0x1
  4130d0:	jmp    0x4130a4
  4130d2:	test   r12,r12
  4130d5:	mov    rdi,r12
  4130d8:	je     0x4131d0
  4130de:	movzx  r8d,BYTE PTR [r12]
  4130e3:	cmp    r8b,0x7f
  4130e7:	ja     0x412f8f
  4130ed:	jmp    0x413035
  4130f2:	mov    r8d,0x7f
  4130f8:	mov    rcx,r12
  4130fb:	mov    rdx,rsi
  4130fe:	call   0x40cd00
  413103:	movzx  r8d,BYTE PTR [rsp+0x2f]
  413109:	mov    eax,eax
  41310b:	add    r12,rax
  41310e:	mov    rdi,r12
  413111:	cmp    r8b,0x7f
  413115:	jne    0x4130c6
  413117:	jmp    0x4130a4
  413119:	nop    DWORD PTR [rax+0x0]
  413120:	movzx  edx,BYTE PTR [rax+0x1]
  413124:	cmp    dl,0xd
  413127:	je     0x413167
  413129:	ja     0x413150
  41312b:	test   dl,dl
  41312d:	je     0x4131d0
  413133:	cmp    dl,0xa
  413136:	jne    0x413006
  41313c:	movzx  r8d,BYTE PTR [rax+0x2]
  413141:	add    rax,0x2
  413145:	jmp    0x412fe9
  41314a:	nop    WORD PTR [rax+rax*1+0x0]
  413150:	cmp    dl,0x27
  413153:	je     0x41317f
  413155:	cmp    dl,0x5c
  413158:	jne    0x413006
  41315e:	lea    rdi,[rax+0x2]
  413162:	jmp    0x413006
  413167:	movzx  r8d,BYTE PTR [rax+0x2]
  41316c:	cmp    r8b,0xa
  413170:	je     0x413220
  413176:	add    rax,0x2
  41317a:	jmp    0x412fe9
  41317f:	mov    r8d,0x27
  413185:	jmp    0x41315e
  413187:	test   dl,dl
  413189:	mov    rsi,rbx
  41318c:	jne    0x412ee0
  413192:	jmp    0x412f54
  413197:	mov    ecx,0xc
  41319c:	call   0x4097f0
  4131a1:	movzx  edx,BYTE PTR [rsi+0x1]
  4131a5:	mov    rcx,QWORD PTR [rip+0x21bb4]        # 0x434d60
  4131ac:	test   dl,dl
  4131ae:	jne    0x412f10
  4131b4:	jmp    0x412f21
  4131b9:	nop    DWORD PTR [rax+0x0]
  4131c0:	mov    ecx,0xc
  4131c5:	call   0x4097f0
  4131ca:	jmp    0x412f2d
  4131cf:	nop
  4131d0:	mov    rcx,rbp
  4131d3:	call   0x421e50
  4131d8:	call   QWORD PTR [rip+0x25dee]        # 0x438fcc
  4131de:	mov    DWORD PTR [rax],0x16
  4131e4:	xor    eax,eax
  4131e6:	add    rsp,0x30
  4131ea:	pop    rbx
  4131eb:	pop    rsi
  4131ec:	pop    rdi
  4131ed:	pop    rbp
  4131ee:	pop    r12
  4131f0:	ret    
  4131f1:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  4131fa:	mov    rax,rbp
  4131fd:	add    rsp,0x30
  413201:	pop    rbx
  413202:	pop    rsi
  413203:	pop    rdi
  413204:	pop    rbp
  413205:	pop    r12
  413207:	ret    
  413208:	cmp    BYTE PTR [rax],0x0
  41320b:	jne    0x412f3d
  413211:	mov    rsi,rbx
  413214:	jmp    0x412f54
  413219:	nop    DWORD PTR [rax+0x0]
  413220:	movzx  r8d,BYTE PTR [rax+0x3]
  413225:	add    rax,0x3
  413229:	jmp    0x412fe9
  41322e:	call   QWORD PTR [rip+0x25d98]        # 0x438fcc
  413234:	mov    DWORD PTR [rax],0x2
  41323a:	xor    eax,eax
  41323c:	add    rsp,0x30
  413240:	pop    rbx
  413241:	pop    rsi
  413242:	pop    rdi
  413243:	pop    rbp
  413244:	pop    r12
  413246:	ret    
  413247:	mov    ecx,0xc
  41324c:	call   0x4097f0
  413251:	jmp    0x413061
  413256:	mov    ecx,0xc
  41325b:	call   0x4097f0
  413260:	jmp    0x412ea6
  413265:	call   QWORD PTR [rip+0x25d61]        # 0x438fcc
  41326b:	mov    DWORD PTR [rax],0xc
  413271:	xor    eax,eax
  413273:	jmp    0x41323c
  413275:	nop
  413276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413280:	push   r15
  413282:	push   r14
  413284:	push   r13
  413286:	push   r12
  413288:	push   rbp
  413289:	push   rdi
  41328a:	push   rsi
  41328b:	push   rbx
  41328c:	sub    rsp,0xd8
  413293:	test   BYTE PTR [rcx+0x11],0x1
  413297:	jne    0x4132b0
  413299:	add    rsp,0xd8
  4132a0:	pop    rbx
  4132a1:	pop    rsi
  4132a2:	pop    rdi
  4132a3:	pop    rbp
  4132a4:	pop    r12
  4132a6:	pop    r13
  4132a8:	pop    r14
  4132aa:	pop    r15
  4132ac:	ret    
  4132ad:	nop    DWORD PTR [rax]
  4132b0:	mov    rdi,rcx
  4132b3:	mov    rcx,QWORD PTR [rcx+0x30]
  4132b7:	mov    ebp,edx
  4132b9:	call   0x421e30
  4132be:	test   rax,rax
  4132c1:	je     0x413330
  4132c3:	mov    rcx,rax
  4132c6:	call   0x412e80
  4132cb:	test   rax,rax
  4132ce:	mov    rbx,rax
  4132d1:	je     0x413330
  4132d3:	mov    r13,QWORD PTR [rdi+0x8]
  4132d7:	mov    QWORD PTR [rdi+0x8],rax
  4132db:	mov    eax,DWORD PTR [rax]
  4132dd:	mov    esi,DWORD PTR [rdi+0x10]
  4132e0:	mov    r12d,DWORD PTR [rdi+0x4]
  4132e4:	mov    DWORD PTR [rdi+0x14],0x1
  4132eb:	mov    QWORD PTR [rdi+0x18],0x0
  4132f3:	add    eax,0x1
  4132f6:	mov    DWORD PTR [rdi+0x4],eax
  4132f9:	mov    eax,esi
  4132fb:	and    eax,0xfffffffb
  4132fe:	cmp    ebp,0x1
  413301:	mov    DWORD PTR [rdi+0x10],eax
  413304:	je     0x413460
  41330a:	jb     0x413470
  413310:	cmp    ebp,0x2
  413313:	jne    0x41331d
  413315:	mov    rcx,rdi
  413318:	call   0x410db0
  41331d:	mov    rcx,rbx
  413320:	call   0x421e50
  413325:	mov    QWORD PTR [rdi+0x8],r13
  413329:	mov    DWORD PTR [rdi+0x4],r12d
  41332d:	mov    DWORD PTR [rdi+0x10],esi
  413330:	lea    r14,[rsp+0x50]
  413335:	mov    rax,QWORD PTR [rdi+0x78]
  413339:	mov    r9,QWORD PTR [rdi+0x30]
  41333d:	lea    r8,[rip+0x15531]        # 0x428875
  413344:	mov    edx,0x80
  413349:	mov    r15d,DWORD PTR [rdi+0xb4]
  413350:	mov    rcx,r14
  413353:	mov    r13d,0x7f
  413359:	mov    QWORD PTR [rsp+0x30],rax
  41335e:	call   0x408290
  413363:	movsxd r12,eax
  413366:	lea    esi,[r15-0x1]
  41336a:	mov    rbx,QWORD PTR [rsp+0x30]
  41336f:	add    r12,r14
  413372:	mov    eax,r12d
  413375:	sub    eax,r14d
  413378:	sub    r13,rax
  41337b:	lea    rax,[rsp+0x30]
  413380:	test   r15d,r15d
  413383:	mov    QWORD PTR [rsp+0x28],rax
  413388:	jg     0x4133a1
  41338a:	jmp    0x4133f0
  41338c:	nop    DWORD PTR [rax+0x0]
  413390:	sub    esi,0x1
  413393:	add    rbx,0x68
  413397:	cmp    esi,0xffffffff
  41339a:	mov    QWORD PTR [rsp+0x30],rbx
  41339f:	je     0x4133f0
  4133a1:	test   BYTE PTR [rbx+0x11],0x1
  4133a5:	jne    0x413390
  4133a7:	cmp    WORD PTR [rbx+0x8],0x8000
  4133ad:	jne    0x413390
  4133af:	mov    r15,QWORD PTR [rbx+0x48]
  4133b3:	mov    rcx,r15
  4133b6:	call   0x421d98
  4133bb:	lea    r8,[rax+0x1]
  4133bf:	cmp    r13,r8
  4133c2:	jb     0x413390
  4133c4:	mov    rdx,r15
  4133c7:	mov    rcx,r12
  4133ca:	call   0x421e08
  4133cf:	mov    rcx,QWORD PTR [rsp+0x28]
  4133d4:	mov    r9d,ebp
  4133d7:	mov    r8,rdi
  4133da:	mov    rdx,r14
  4133dd:	call   0x409b70
  4133e2:	mov    rbx,QWORD PTR [rsp+0x30]
  4133e7:	jmp    0x413390
  4133e9:	nop    DWORD PTR [rax+0x0]
  4133f0:	movzx  eax,WORD PTR [rdi+0xaa]
  4133f7:	test   ax,0x7fff
  4133fb:	je     0x413299
  413401:	add    rax,0x1
  413405:	lea    rdx,[rax+rax*2]
  413409:	lea    rdx,[rax+rdx*4]
  41340d:	mov    rax,QWORD PTR [rdi+0x78]
  413411:	lea    rax,[rax+rdx*8]
  413415:	mov    rbx,QWORD PTR [rax+0x48]
  413419:	mov    QWORD PTR [rsp+0x30],rax
  41341e:	test   rbx,rbx
  413421:	je     0x413299
  413427:	mov    rcx,rbx
  41342a:	call   0x421d98
  41342f:	lea    r8,[rax+0x1]
  413433:	cmp    r13,r8
  413436:	jb     0x413299
  41343c:	mov    rdx,rbx
  41343f:	mov    rcx,r12
  413442:	call   0x421e08
  413447:	lea    rcx,[rsp+0x30]
  41344c:	mov    r9d,ebp
  41344f:	mov    r8,rdi
  413452:	mov    rdx,r14
  413455:	call   0x409b70
  41345a:	jmp    0x413299
  41345f:	nop
  413460:	mov    rcx,rdi
  413463:	call   0x410cb0
  413468:	jmp    0x41331d
  41346d:	nop    DWORD PTR [rax]
  413470:	mov    rcx,rdi
  413473:	call   0x410cb0
  413478:	mov    DWORD PTR [rdi+0x14],0x1
  41347f:	mov    QWORD PTR [rdi+0x18],0x0
  413487:	jmp    0x413315
  41348c:	nop    DWORD PTR [rax+0x0]
  413490:	push   r15
  413492:	push   r14
  413494:	push   r13
  413496:	push   r12
  413498:	push   rbp
  413499:	push   rdi
  41349a:	push   rsi
  41349b:	push   rbx
  41349c:	sub    rsp,0x68
  4134a0:	mov    ebp,edx
  4134a2:	mov    rdx,QWORD PTR [r8]
  4134a5:	mov    rbx,rcx
  4134a8:	mov    rdi,r8
  4134ab:	call   0x40b020
  4134b0:	test   eax,eax
  4134b2:	mov    esi,eax
  4134b4:	jne    0x413ba9
  4134ba:	mov    eax,DWORD PTR [rbx+0x10]
  4134bd:	test   al,0x40
  4134bf:	jne    0x413640
  4134c5:	or     eax,0x40
  4134c8:	cmp    DWORD PTR [rbx],0x21fff
  4134ce:	mov    DWORD PTR [rbx+0x4],ebp
  4134d1:	mov    QWORD PTR [rbx+0x8],rdi
  4134d5:	mov    DWORD PTR [rbx+0x10],eax
  4134d8:	jg     0x4135d4
  4134de:	mov    rcx,rbx
  4134e1:	call   0x410cb0
  4134e6:	test   eax,eax
  4134e8:	jne    0x4135c1
  4134ee:	movzx  eax,WORD PTR [rbx+0xaa]
  4134f5:	test   ax,0x7fff
  4134f9:	jne    0x4135f0
  4134ff:	or     DWORD PTR [rbx+0x10],0x80000
  413506:	cmp    QWORD PTR [rbx+0x58],0x0
  41350b:	je     0x413910
  413511:	mov    edx,0x1
  413516:	mov    rcx,rbx
  413519:	call   0x413280
  41351e:	xchg   ax,ax
  413520:	mov    edx,0x2
  413525:	mov    rcx,rbx
  413528:	call   0x413280
  41352d:	mov    eax,DWORD PTR [rbx+0x10]
  413530:	and    eax,0xfff7ffff
  413535:	mov    DWORD PTR [rbx+0x10],eax
  413538:	test   ah,0x20
  41353b:	je     0x41355d
  41353d:	mov    rdx,QWORD PTR [rbx+0xa0]
  413544:	test   rdx,rdx
  413547:	je     0x41355d
  413549:	mov    ecx,eax
  41354b:	and    ecx,0x30000
  413551:	cmp    ecx,0x10000
  413557:	je     0x41391f
  41355d:	test   ah,0x8
  413560:	jne    0x413670
  413566:	mov    DWORD PTR [rbx+0x14],0x1
  41356d:	mov    QWORD PTR [rbx+0x18],0x0
  413575:	mov    rcx,rbx
  413578:	call   0x410db0
  41357d:	test   eax,eax
  41357f:	jne    0x413650
  413585:	movzx  eax,WORD PTR [rbx+0xaa]
  41358c:	test   ax,ax
  41358f:	je     0x4135b1
  413591:	cmp    ax,0x8000
  413595:	je     0x4135b1
  413597:	lea    rdx,[rax+rax*2]
  41359b:	lea    rax,[rax+rdx*4]
  41359f:	mov    rdx,QWORD PTR [rbx+0x78]
  4135a3:	lea    rax,[rdx+rax*8]
  4135a7:	test   BYTE PTR [rax+0x10],0x5
  4135ab:	jne    0x413c3b
  4135b1:	mov    esi,DWORD PTR [rbx+0x10]
  4135b4:	test   sil,0x4
  4135b8:	jne    0x413780
  4135be:	mov    esi,DWORD PTR [rbx+0x14]
  4135c1:	mov    eax,esi
  4135c3:	add    rsp,0x68
  4135c7:	pop    rbx
  4135c8:	pop    rsi
  4135c9:	pop    rdi
  4135ca:	pop    rbp
  4135cb:	pop    r12
  4135cd:	pop    r13
  4135cf:	pop    r14
  4135d1:	pop    r15
  4135d3:	ret    
  4135d4:	mov    rax,QWORD PTR [rbx+0xd8]
  4135db:	mov    QWORD PTR [rip+0x103e6],rax        # 0x4239c8
  4135e2:	jmp    0x4134de
  4135e7:	nop    WORD PTR [rax+rax*1+0x0]
  4135f0:	add    rax,0x1
  4135f4:	lea    rdx,[rax+rax*2]
  4135f8:	lea    rdx,[rax+rdx*4]
  4135fc:	mov    rax,QWORD PTR [rbx+0x78]
  413600:	lea    rsi,[rax+rdx*8]
  413604:	test   BYTE PTR [rsi+0x10],0x20
  413608:	jne    0x413660
  41360a:	or     DWORD PTR [rbx+0x10],0x80000
  413611:	cmp    QWORD PTR [rbx+0x58],0x0
  413616:	je     0x413910
  41361c:	mov    edx,0x1
  413621:	mov    rcx,rbx
  413624:	call   0x413280
  413629:	test   BYTE PTR [rsi+0x10],0x20
  41362d:	jne    0x413520
  413633:	mov    rcx,rbx
  413636:	call   0x412a40
  41363b:	jmp    0x413520
  413640:	mov    eax,DWORD PTR [rbx+0x14]
  413643:	test   eax,eax
  413645:	je     0x413566
  41364b:	jmp    0x413575
  413650:	mov    esi,DWORD PTR [rbx+0x4]
  413653:	jmp    0x4135c1
  413658:	nop    DWORD PTR [rax+rax*1+0x0]
  413660:	mov    eax,DWORD PTR [rbx+0x10]
  413663:	jmp    0x413538
  413668:	nop    DWORD PTR [rax+rax*1+0x0]
  413670:	lea    rcx,[rip+0x15202]        # 0x428879
  413677:	mov    QWORD PTR [rsp+0x40],0x0
  413680:	mov    QWORD PTR [rsp+0x48],0x0
  413689:	mov    DWORD PTR [rsp+0x50],0x4
  413691:	mov    DWORD PTR [rsp+0x54],0x0
  413699:	call   0x421e30
  41369e:	test   rax,rax
  4136a1:	jne    0x413566
  4136a7:	test   BYTE PTR [rbx+0x10],0x3
  4136ab:	je     0x413566
  4136b1:	mov    ecx,DWORD PTR [rbx+0x4]
  4136b4:	shl    rcx,0x3
  4136b8:	call   0x409ce0
  4136bd:	test   rax,rax
  4136c0:	mov    r12,rax
  4136c3:	je     0x413b0f
  4136c9:	mov    ecx,DWORD PTR [rbx+0x4]
  4136cc:	shl    rcx,0x3
  4136d0:	call   0x409ce0
  4136d5:	test   rax,rax
  4136d8:	mov    rbp,rax
  4136db:	je     0x413b07
  4136e1:	lea    r13,[rsp+0x40]
  4136e6:	mov    r8d,DWORD PTR [rbx+0x4]
  4136ea:	mov    DWORD PTR [rbx+0x14],0x1
  4136f1:	mov    QWORD PTR [rbx+0x18],0x0
  4136f9:	mov    eax,0x1
  4136fe:	xor    edi,edi
  413700:	lea    rcx,[r13+0x14]
  413704:	xor    esi,esi
  413706:	mov    QWORD PTR [rsp+0x38],rcx
  41370b:	cmp    r8d,eax
  41370e:	jbe    0x413739
  413710:	mov    rcx,QWORD PTR [rbx+0x8]
  413714:	mov    edx,eax
  413716:	mov    r14,QWORD PTR [rcx+rdx*8]
  41371a:	cmp    BYTE PTR [r14],0x2d
  41371e:	je     0x41396e
  413724:	add    eax,0x1
  413727:	mov    edx,esi
  413729:	add    esi,0x1
  41372c:	cmp    r8d,eax
  41372f:	mov    DWORD PTR [rbx+0x14],eax
  413732:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  413737:	ja     0x413710
  413739:	call   QWORD PTR [rip+0x2588d]        # 0x438fcc
  41373f:	mov    DWORD PTR [rax],0x0
  413745:	test   edi,edi
  413747:	jne    0x413b8d
  41374d:	test   esi,esi
  41374f:	je     0x413769
  413751:	mov    rax,QWORD PTR [rbx+0x8]
  413755:	mov    r8d,esi
  413758:	mov    rdx,rbp
  41375b:	shl    r8,0x3
  41375f:	lea    rcx,[rax+rdi*8+0x8]
  413764:	call   0x421e08
  413769:	mov    rcx,r12
  41376c:	call   0x421e50
  413771:	mov    rcx,rbp
  413774:	call   0x421e50
  413779:	jmp    0x413566
  41377e:	xchg   ax,ax
  413780:	mov    r9,QWORD PTR [rbx+0x78]
  413784:	mov    r10d,DWORD PTR [rbx+0xb4]
  41378b:	mov    rcx,r9
  41378e:	jmp    0x4137b8
  413790:	movzx  eax,WORD PTR [rcx+0x8]
  413794:	cmp    ax,0x8000
  413798:	je     0x413863
  41379e:	cmp    ax,WORD PTR [rcx]
  4137a1:	je     0x413863
  4137a7:	sub    r10d,0x1
  4137ab:	test   r10d,r10d
  4137ae:	jle    0x413931
  4137b4:	add    rcx,0x68
  4137b8:	mov    r11d,DWORD PTR [rcx+0x10]
  4137bc:	test   r11b,0x5
  4137c0:	je     0x413790
  4137c2:	mov    rdx,QWORD PTR [rcx+0x28]
  4137c6:	test   rdx,rdx
  4137c9:	jne    0x4137ea
  4137cb:	jmp    0x4137f4
  4137cd:	nop    DWORD PTR [rax]
  4137d0:	lea    r8,[rax+rax*2]
  4137d4:	add    rdx,0x4
  4137d8:	lea    rax,[rax+r8*4]
  4137dc:	lea    rax,[r9+rax*8]
  4137e0:	test   BYTE PTR [rax+0x10],0xf
  4137e4:	je     0x4138c0
  4137ea:	movsxd rax,DWORD PTR [rdx]
  4137ed:	cmp    eax,0x8000
  4137f2:	jne    0x4137d0
  4137f4:	mov    rdx,QWORD PTR [rcx+0x30]
  4137f8:	test   rdx,rdx
  4137fb:	je     0x413790
  4137fd:	nop    DWORD PTR [rax]
  413800:	movsxd rax,DWORD PTR [rdx]
  413803:	cmp    eax,0x8000
  413808:	je     0x413790
  41380a:	lea    r8,[rax+rax*2]
  41380e:	add    rdx,0x4
  413812:	lea    rax,[rax+r8*4]
  413816:	lea    rax,[r9+rax*8]
  41381a:	test   BYTE PTR [rax+0x10],0x5
  41381e:	je     0x413800
  413820:	mov    r12,QWORD PTR [rax+0x50]
  413824:	mov    rbp,QWORD PTR [rcx+0x50]
  413828:	mov    rdi,QWORD PTR [rbx+0x28]
  41382c:	mov    rsi,QWORD PTR [rip+0x102a5]        # 0x423ad8
  413833:	call   QWORD PTR [rip+0x25743]        # 0x438f7c
  413839:	lea    rcx,[rax+0x60]
  41383d:	mov    QWORD PTR [rsp+0x20],r12
  413842:	mov    r9,rbp
  413845:	mov    r8,rdi
  413848:	mov    rdx,rsi
  41384b:	call   0x407ea0
  413850:	mov    edx,0x1
  413855:	mov    rcx,rbx
  413858:	call   QWORD PTR [rbx+0x98]
  41385e:	jmp    0x4135be
  413863:	movzx  edi,WORD PTR [rcx+0xa]
  413867:	cmp    WORD PTR [rcx+0xe],di
  41386b:	jae    0x4137a7
  413871:	test   r11d,0x100000
  413878:	je     0x413884
  41387a:	and    r11d,0x3
  41387e:	jne    0x4137a7
  413884:	cmp    di,0x1
  413888:	jbe    0x4138e0
  41388a:	mov    r12,QWORD PTR [rcx+0x50]
  41388e:	mov    rbp,QWORD PTR [rbx+0x28]
  413892:	mov    rsi,QWORD PTR [rip+0x102f7]        # 0x423b90
  413899:	call   QWORD PTR [rip+0x256dd]        # 0x438f7c
  41389f:	lea    rcx,[rax+0x60]
  4138a3:	mov    DWORD PTR [rsp+0x20],edi
  4138a7:	mov    r9,r12
  4138aa:	mov    r8,rbp
  4138ad:	mov    rdx,rsi
  4138b0:	call   0x407ea0
  4138b5:	jmp    0x413850
  4138b7:	nop    WORD PTR [rax+rax*1+0x0]
  4138c0:	mov    r12,QWORD PTR [rax+0x50]
  4138c4:	mov    rbp,QWORD PTR [rcx+0x50]
  4138c8:	mov    rdi,QWORD PTR [rbx+0x28]
  4138cc:	mov    rsi,QWORD PTR [rip+0x10305]        # 0x423bd8
  4138d3:	jmp    0x413833
  4138d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138e0:	mov    rbp,QWORD PTR [rcx+0x50]
  4138e4:	mov    rdi,QWORD PTR [rbx+0x28]
  4138e8:	mov    rsi,QWORD PTR [rip+0x10241]        # 0x423b30
  4138ef:	call   QWORD PTR [rip+0x25687]        # 0x438f7c
  4138f5:	lea    rcx,[rax+0x60]
  4138f9:	mov    r9,rbp
  4138fc:	mov    r8,rdi
  4138ff:	mov    rdx,rsi
  413902:	call   0x407ea0
  413907:	jmp    0x413850
  41390c:	nop    DWORD PTR [rax+0x0]
  413910:	xor    edx,edx
  413912:	mov    rcx,rbx
  413915:	call   0x413280
  41391a:	jmp    0x41352d
  41391f:	and    eax,0xfffeffff
  413924:	mov    DWORD PTR [rbx+0x10],eax
  413927:	call   rdx
  413929:	mov    eax,DWORD PTR [rbx+0x10]
  41392c:	jmp    0x41355d
  413931:	test   esi,0x200
  413937:	je     0x4139ea
  41393d:	mov    esi,DWORD PTR [rbx+0x14]
  413940:	cmp    DWORD PTR [rbx+0x4],esi
  413943:	jbe    0x4135c1
  413949:	mov    rdi,QWORD PTR [rbx+0x28]
  41394d:	mov    rsi,QWORD PTR [rip+0x101ec]        # 0x423b40
  413954:	call   QWORD PTR [rip+0x25622]        # 0x438f7c
  41395a:	lea    rcx,[rax+0x60]
  41395e:	mov    r8,rdi
  413961:	mov    rdx,rsi
  413964:	call   0x407ea0
  413969:	jmp    0x413850
  41396e:	movzx  edx,BYTE PTR [r14+0x1]
  413973:	test   dl,dl
  413975:	je     0x413724
  41397b:	cmp    dl,0x2d
  41397e:	jne    0x413a70
  413984:	cmp    BYTE PTR [r14+0x2],0x0
  413989:	je     0x413c4a
  41398f:	lea    rdx,[r14+0x2]
  413993:	mov    r8,r13
  413996:	mov    rcx,rbx
  413999:	call   0x4106f0
  41399e:	test   eax,eax
  4139a0:	js     0x413b7c
  4139a6:	mov    r8d,DWORD PTR [rbx+0x14]
  4139aa:	mov    rcx,QWORD PTR [rbx+0x8]
  4139ae:	lea    r15d,[rdi+0x1]
  4139b2:	lea    eax,[r8+0x1]
  4139b6:	mov    rdx,r8
  4139b9:	mov    r8,QWORD PTR [rcx+r8*8]
  4139bd:	mov    ecx,edi
  4139bf:	mov    DWORD PTR [rbx+0x14],eax
  4139c2:	mov    QWORD PTR [r12+rcx*8],r8
  4139c6:	mov    rcx,QWORD PTR [rsp+0x40]
  4139cb:	mov    ecx,DWORD PTR [rcx+0x10]
  4139ce:	test   ch,0xf0
  4139d1:	jne    0x413a12
  4139d3:	cmp    DWORD PTR [rsp+0x54],0x1
  4139d8:	je     0x413b20
  4139de:	mov    r8d,DWORD PTR [rbx+0x4]
  4139e2:	mov    edi,r15d
  4139e5:	jmp    0x41370b
  4139ea:	and    esi,0x400
  4139f0:	je     0x4135be
  4139f6:	mov    esi,DWORD PTR [rbx+0x14]
  4139f9:	cmp    DWORD PTR [rbx+0x4],esi
  4139fc:	ja     0x4135c1
  413a02:	mov    rdi,QWORD PTR [rbx+0x28]
  413a06:	mov    rsi,QWORD PTR [rip+0x100a3]        # 0x423ab0
  413a0d:	jmp    0x413954
  413a12:	and    ecx,0x10000
  413a18:	mov    r8,QWORD PTR [rsp+0x48]
  413a1d:	mov    ecx,DWORD PTR [rsp+0x54]
  413a21:	je     0x413a9f
  413a23:	cmp    ecx,0x1
  413a26:	je     0x413aeb
  413a2c:	cmp    ecx,0x2
  413a2f:	jne    0x413ada
  413a35:	test   r8,r8
  413a38:	jne    0x4139de
  413a3a:	mov    r8d,DWORD PTR [rbx+0x4]
  413a3e:	cmp    eax,r8d
  413a41:	jae    0x413c27
  413a47:	mov    r9,QWORD PTR [rbx+0x8]
  413a4b:	mov    ecx,eax
  413a4d:	mov    rcx,QWORD PTR [r9+rcx*8]
  413a51:	cmp    BYTE PTR [rcx],0x2d
  413a54:	je     0x4139e2
  413a56:	lea    eax,[rdx+0x2]
  413a59:	mov    r10d,r15d
  413a5c:	lea    r15d,[rdi+0x2]
  413a60:	mov    DWORD PTR [rbx+0x14],eax
  413a63:	mov    QWORD PTR [r12+r10*8],rcx
  413a67:	jmp    0x4139e2
  413a6c:	nop    DWORD PTR [rax+0x0]
  413a70:	test   BYTE PTR [rbx+0x10],0x2
  413a74:	jne    0x413a8a
  413a76:	lea    rdx,[r14+0x1]
  413a7a:	mov    r8,r13
  413a7d:	mov    rcx,rbx
  413a80:	call   0x4106f0
  413a85:	jmp    0x41399e
  413a8a:	mov    r9,QWORD PTR [rsp+0x38]
  413a8f:	mov    r8,r13
  413a92:	mov    rcx,rbx
  413a95:	call   0x4094a0
  413a9a:	jmp    0x41399e
  413a9f:	cmp    ecx,0x1
  413aa2:	je     0x413afb
  413aa4:	cmp    ecx,0x2
  413aa7:	jne    0x413ada
  413aa9:	test   r8,r8
  413aac:	jne    0x4139de
  413ab2:	mov    r8d,DWORD PTR [rbx+0x4]
  413ab6:	cmp    eax,r8d
  413ab9:	jae    0x413ada
  413abb:	mov    rcx,QWORD PTR [rbx+0x8]
  413abf:	add    edx,0x2
  413ac2:	mov    r10d,r15d
  413ac5:	mov    DWORD PTR [rbx+0x14],edx
  413ac8:	add    edi,0x2
  413acb:	mov    rax,QWORD PTR [rcx+rax*8]
  413acf:	mov    QWORD PTR [r12+r10*8],rax
  413ad3:	mov    eax,edx
  413ad5:	jmp    0x41370b
  413ada:	call   QWORD PTR [rip+0x254ec]        # 0x438fcc
  413ae0:	mov    DWORD PTR [rax],0x5
  413ae6:	jmp    0x413769
  413aeb:	cmp    BYTE PTR [r14+0x2],0x0
  413af0:	je     0x413a3a
  413af6:	jmp    0x4139de
  413afb:	cmp    BYTE PTR [r14+0x2],0x0
  413b00:	je     0x413ab2
  413b02:	jmp    0x4139de
  413b07:	mov    rcx,r12
  413b0a:	call   0x421e50
  413b0f:	call   QWORD PTR [rip+0x254b7]        # 0x438fcc
  413b15:	mov    DWORD PTR [rax],0xc
  413b1b:	jmp    0x413566
  413b20:	movzx  eax,BYTE PTR [r14+0x2]
  413b25:	lea    r11,[r14+0x2]
  413b29:	lea    r14,[r13+0x14]
  413b2d:	test   al,al
  413b2f:	jne    0x413b62
  413b31:	jmp    0x413c1f
  413b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b40:	mov    rax,QWORD PTR [rsp+0x40]
  413b45:	mov    r11,QWORD PTR [rsp+0x30]
  413b4a:	mov    eax,DWORD PTR [rax+0x10]
  413b4d:	test   ah,0xf0
  413b50:	jne    0x413bb5
  413b52:	add    r11,0x1
  413b56:	movzx  eax,BYTE PTR [r11]
  413b5a:	test   al,al
  413b5c:	je     0x413c1f
  413b62:	movzx  edx,al
  413b65:	mov    r9,r14
  413b68:	mov    r8,r13
  413b6b:	mov    rcx,rbx
  413b6e:	mov    QWORD PTR [rsp+0x30],r11
  413b73:	call   0x4094a0
  413b78:	test   eax,eax
  413b7a:	jns    0x413b40
  413b7c:	call   QWORD PTR [rip+0x2544a]        # 0x438fcc
  413b82:	mov    DWORD PTR [rax],0x16
  413b88:	jmp    0x413769
  413b8d:	mov    rax,QWORD PTR [rbx+0x8]
  413b91:	mov    r8d,edi
  413b94:	mov    rdx,r12
  413b97:	shl    r8,0x3
  413b9b:	lea    rcx,[rax+0x8]
  413b9f:	call   0x421e08
  413ba4:	jmp    0x41374d
  413ba9:	mov    rcx,QWORD PTR [rip+0xfec8]        # 0x423a78
  413bb0:	call   0x408310
  413bb5:	test   eax,0x10000
  413bba:	je     0x413bf3
  413bbc:	cmp    BYTE PTR [r11+0x1],0x0
  413bc1:	jne    0x413c1f
  413bc3:	mov    ecx,DWORD PTR [rbx+0x14]
  413bc6:	mov    rdx,QWORD PTR [rbx+0x8]
  413bca:	mov    rdx,QWORD PTR [rdx+rcx*8]
  413bce:	mov    rax,rcx
  413bd1:	cmp    BYTE PTR [rdx],0x2d
  413bd4:	je     0x4139de
  413bda:	add    eax,0x1
  413bdd:	mov    r10d,r15d
  413be0:	lea    r15d,[rdi+0x2]
  413be4:	mov    DWORD PTR [rbx+0x14],eax
  413be7:	mov    QWORD PTR [r12+r10*8],rdx
  413beb:	mov    eax,DWORD PTR [rbx+0x14]
  413bee:	jmp    0x4139de
  413bf3:	cmp    BYTE PTR [r11+0x1],0x0
  413bf8:	jne    0x413c1f
  413bfa:	mov    eax,DWORD PTR [rbx+0x14]
  413bfd:	cmp    eax,DWORD PTR [rbx+0x4]
  413c00:	jae    0x413b7c
  413c06:	mov    rdx,QWORD PTR [rbx+0x8]
  413c0a:	lea    ecx,[rax+0x1]
  413c0d:	mov    r10d,r15d
  413c10:	lea    r15d,[rdi+0x2]
  413c14:	mov    DWORD PTR [rbx+0x14],ecx
  413c17:	mov    rax,QWORD PTR [rdx+rax*8]
  413c1b:	mov    QWORD PTR [r12+r10*8],rax
  413c1f:	mov    eax,DWORD PTR [rbx+0x14]
  413c22:	jmp    0x4139de
  413c27:	call   QWORD PTR [rip+0x2539f]        # 0x438fcc
  413c2d:	mov    edi,r15d
  413c30:	mov    DWORD PTR [rax],0x0
  413c36:	jmp    0x413745
  413c3b:	mov    rcx,rbx
  413c3e:	call   0x4101e0
  413c43:	xor    ecx,ecx
  413c45:	call   0x4082e0
  413c4a:	lea    ecx,[rax+0x1]
  413c4d:	mov    edx,edi
  413c4f:	add    edi,0x1
  413c52:	mov    r9d,esi
  413c55:	cmp    ecx,r8d
  413c58:	mov    DWORD PTR [rbx+0x14],ecx
  413c5b:	mov    QWORD PTR [r12+rdx*8],r14
  413c5f:	mov    edx,ecx
  413c61:	jae    0x413745
  413c67:	mov    r10,QWORD PTR [rbx+0x8]
  413c6b:	mov    r11d,edx
  413c6e:	add    edx,0x1
  413c71:	mov    r11,QWORD PTR [r10+r11*8]
  413c75:	mov    r10d,esi
  413c78:	add    esi,0x1
  413c7b:	cmp    edx,r8d
  413c7e:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  413c83:	jne    0x413c67
  413c85:	lea    esi,[rdx+r9*1-0x1]
  413c8a:	lea    edx,[rdx+rcx*1-0x1]
  413c8e:	sub    edx,eax
  413c90:	sub    esi,eax
  413c92:	mov    DWORD PTR [rbx+0x14],edx
  413c95:	jmp    0x413745
  413c9a:	nop    WORD PTR [rax+rax*1+0x0]
  413ca0:	push   rsi
  413ca1:	push   rbx
  413ca2:	sub    rsp,0x38
  413ca6:	mov    rbx,rcx
  413ca9:	lea    rcx,[rcx+0x10]
  413cad:	mov    esi,edx
  413caf:	xor    edx,edx
  413cb1:	mov    QWORD PTR [rsp+0x28],0x0
  413cba:	call   0x4116c0
  413cbf:	test   esi,esi
  413cc1:	mov    ecx,DWORD PTR [rbx+0x10]
  413cc4:	je     0x413cd2
  413cc6:	test   ch,0x40
  413cc9:	je     0x413cd2
  413ccb:	add    rsp,0x38
  413ccf:	pop    rbx
  413cd0:	pop    rsi
  413cd1:	ret    
  413cd2:	test   ch,0x10
  413cd5:	lea    rdx,[rsp+0x28]
  413cda:	jne    0x413d40
  413cdc:	call   0x408cf0
  413ce1:	mov    r8,QWORD PTR [rsp+0x28]
  413ce6:	mov    edx,esi
  413ce8:	mov    rcx,rbx
  413ceb:	call   0x40b8d0
  413cf0:	mov    rcx,QWORD PTR [rip+0x20ed1]        # 0x434bc8
  413cf7:	call   0x421e80
  413cfc:	mov    rcx,QWORD PTR [rip+0x20ec5]        # 0x434bc8
  413d03:	call   0x421e88
  413d08:	test   eax,eax
  413d0a:	je     0x413ccb
  413d0c:	call   QWORD PTR [rip+0x2526a]        # 0x438f7c
  413d12:	add    rax,0x60
  413d16:	cmp    QWORD PTR [rip+0x20eab],rax        # 0x434bc8
  413d1d:	mov    r8,QWORD PTR [rip+0xfe94]        # 0x423bb8
  413d24:	cmove  r8,QWORD PTR [rip+0xfe94]        # 0x423bc0
  413d2c:	mov    rcx,QWORD PTR [rbx+0x28]
  413d30:	mov    rdx,QWORD PTR [rip+0xfe91]        # 0x423bc8
  413d37:	call   0x408860
  413d3c:	nop    DWORD PTR [rax+0x0]
  413d40:	call   0x408bb0
  413d45:	jmp    0x413ce1
  413d47:	nop    WORD PTR [rax+rax*1+0x0]
  413d50:	push   r15
  413d52:	push   r14
  413d54:	push   r13
  413d56:	push   r12
  413d58:	push   rbp
  413d59:	push   rdi
  413d5a:	push   rsi
  413d5b:	push   rbx
  413d5c:	sub    rsp,0x28
  413d60:	mov    rbx,rcx
  413d63:	mov    esi,edx
  413d65:	mov    r12,r8
  413d68:	call   0x421d98
  413d6d:	cmp    rax,0xff
  413d73:	mov    rbp,rax
  413d76:	jbe    0x413e65
  413d7c:	test   sil,sil
  413d7f:	jne    0x413e65
  413d85:	mov    rcx,rbx
  413d88:	call   0x409a50
  413d8d:	mov    rdi,QWORD PTR [rip+0x25360]        # 0x4390f4
  413d94:	mov    r13,rax
  413d97:	mov    rsi,rax
  413d9a:	mov    r14,rsi
  413d9d:	nop    DWORD PTR [rax]
  413da0:	mov    edx,0xa
  413da5:	mov    rcx,r14
  413da8:	call   0x421dc0
  413dad:	test   rax,rax
  413db0:	mov    rbx,rax
  413db3:	je     0x413e40
  413db9:	sub    rax,rsi
  413dbc:	lea    r14,[rbx+0x1]
  413dc0:	cmp    rax,0x27
  413dc4:	jle    0x413da0
  413dc6:	movsx  ecx,BYTE PTR [rbx+0x1]
  413dca:	mov    r15d,ecx
  413dcd:	call   rdi
  413dcf:	test   eax,eax
  413dd1:	je     0x413da0
  413dd3:	cmp    r15b,0x9
  413dd7:	je     0x413da0
  413dd9:	cmp    r15b,0xa
  413ddd:	je     0x413e03
  413ddf:	cmp    r15b,0x20
  413de3:	jne    0x413e11
  413de5:	add    rbx,0x8
  413de9:	mov    rdx,r14
  413dec:	nop    DWORD PTR [rax+0x0]
  413df0:	add    rdx,0x1
  413df4:	cmp    BYTE PTR [rdx],0x20
  413df7:	jne    0x413e11
  413df9:	cmp    rdx,rbx
  413dfc:	jne    0x413df0
  413dfe:	mov    r14,rdx
  413e01:	jmp    0x413da0
  413e03:	add    r14,0x1
  413e07:	movzx  r15d,BYTE PTR [r14]
  413e0b:	cmp    r15b,0xa
  413e0f:	je     0x413e03
  413e11:	xor    edx,edx
  413e13:	mov    rcx,rsi
  413e16:	mov    BYTE PTR [r14],0x0
  413e1a:	mov    r8,r12
  413e1d:	sub    rsi,r14
  413e20:	call   0x40f9c0
  413e25:	add    rbp,rsi
  413e28:	je     0x413e4d
  413e2a:	cmp    rbp,0xff
  413e31:	mov    BYTE PTR [r14],r15b
  413e34:	mov    rsi,r14
  413e37:	ja     0x413d9a
  413e3d:	nop    DWORD PTR [rax]
  413e40:	mov    r8,r12
  413e43:	xor    edx,edx
  413e45:	mov    rcx,rsi
  413e48:	call   0x40f9c0
  413e4d:	mov    rcx,r13
  413e50:	add    rsp,0x28
  413e54:	pop    rbx
  413e55:	pop    rsi
  413e56:	pop    rdi
  413e57:	pop    rbp
  413e58:	pop    r12
  413e5a:	pop    r13
  413e5c:	pop    r14
  413e5e:	pop    r15
  413e60:	jmp    0x421e50
  413e65:	movzx  edx,sil
  413e69:	mov    r8,r12
  413e6c:	mov    rcx,rbx
  413e6f:	add    rsp,0x28
  413e73:	pop    rbx
  413e74:	pop    rsi
  413e75:	pop    rdi
  413e76:	pop    rbp
  413e77:	pop    r12
  413e79:	pop    r13
  413e7b:	pop    r14
  413e7d:	pop    r15
  413e7f:	jmp    0x40f9c0
  413e84:	xchg   ax,ax
  413e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e90:	push   rbp
  413e91:	push   rdi
  413e92:	push   rsi
  413e93:	push   rbx
  413e94:	sub    rsp,0x58
  413e98:	mov    BYTE PTR [rip+0x20d81],0x0        # 0x434c20
  413e9f:	mov    ebp,edx
  413ea1:	xor    edx,edx
  413ea3:	mov    rbx,rcx
  413ea6:	cmp    ebp,0x2750
  413eac:	lea    rcx,[rcx+0x10]
  413eb0:	je     0x413ef4
  413eb2:	call   0x4116c0
  413eb7:	test   ebp,ebp
  413eb9:	je     0x413ef9
  413ebb:	cmp    DWORD PTR [rbx],0x1dfff
  413ec1:	jle    0x414116
  413ec7:	cmp    QWORD PTR [rip+0x20cf9],0x0        # 0x434bc8
  413ecf:	mov    rcx,QWORD PTR [rbx+0xc0]
  413ed6:	je     0x4143be
  413edc:	test   rcx,rcx
  413edf:	mov    eax,DWORD PTR [rbx+0x10]
  413ee2:	je     0x414124
  413ee8:	test   eax,0x100000
  413eed:	je     0x413f2f
  413eef:	jmp    0x414124
  413ef4:	call   0x4116c0
  413ef9:	cmp    DWORD PTR [rbx],0x1dfff
  413eff:	jle    0x413f99
  413f05:	cmp    QWORD PTR [rip+0x20cbb],0x0        # 0x434bc8
  413f0d:	mov    rcx,QWORD PTR [rbx+0xb8]
  413f14:	je     0x414307
  413f1a:	test   rcx,rcx
  413f1d:	mov    eax,DWORD PTR [rbx+0x10]
  413f20:	je     0x413fa7
  413f26:	test   eax,0x100000
  413f2b:	jne    0x413fa7
  413f2d:	xor    ebp,ebp
  413f2f:	test   ah,0x20
  413f32:	je     0x4141ee
  413f38:	mov    r8,QWORD PTR [rip+0x20c89]        # 0x434bc8
  413f3f:	mov    edx,0x1
  413f44:	call   0x413d50
  413f49:	mov    rcx,QWORD PTR [rip+0x20c78]        # 0x434bc8
  413f50:	call   0x421e80
  413f55:	mov    rcx,QWORD PTR [rip+0x20c6c]        # 0x434bc8
  413f5c:	call   0x421e88
  413f61:	test   eax,eax
  413f63:	je     0x4141e7
  413f69:	call   QWORD PTR [rip+0x2500d]        # 0x438f7c
  413f6f:	add    rax,0x30
  413f73:	cmp    QWORD PTR [rip+0x20c4e],rax        # 0x434bc8
  413f7a:	mov    r8,QWORD PTR [rip+0xfc3f]        # 0x423bc0
  413f81:	cmove  r8,QWORD PTR [rip+0xfc2f]        # 0x423bb8
  413f89:	mov    rcx,QWORD PTR [rbx+0x28]
  413f8d:	mov    rdx,QWORD PTR [rip+0xfc34]        # 0x423bc8
  413f94:	call   0x408860
  413f99:	cmp    QWORD PTR [rip+0x20c27],0x0        # 0x434bc8
  413fa1:	je     0x414305
  413fa7:	mov    rcx,QWORD PTR [rip+0x20c1a]        # 0x434bc8
  413fae:	mov    rdx,QWORD PTR [rbx+0x60]
  413fb2:	xor    edi,edi
  413fb4:	mov    r8,QWORD PTR [rbx+0x28]
  413fb8:	call   0x407ea0
  413fbd:	mov    ecx,DWORD PTR [rbx+0x10]
  413fc0:	test   ch,0x10
  413fc3:	mov    QWORD PTR [rsp+0x30],0x0
  413fcc:	lea    rdx,[rsp+0x30]
  413fd1:	jne    0x4141ff
  413fd7:	call   0x408cf0
  413fdc:	lea    rdx,[rip+0x156fe]        # 0x4296e1
  413fe3:	lea    rcx,[rip+0x20c56]        # 0x434c40
  413fea:	mov    r8d,eax
  413fed:	mov    esi,eax
  413fef:	call   0x408880
  413ff4:	test   ebp,ebp
  413ff6:	jne    0x414002
  413ff8:	mov    rax,QWORD PTR [rbx+0x78]
  413ffc:	test   BYTE PTR [rax+0x12],0x20
  414000:	jne    0x414013
  414002:	mov    rdx,QWORD PTR [rip+0x20bbf]        # 0x434bc8
  414009:	mov    rcx,QWORD PTR [rsp+0x30]
  41400e:	call   0x421e60
  414013:	lea    eax,[rsi+0xf]
  414016:	mov    ecx,0x8
  41401b:	cdq    
  41401c:	idiv   ecx
  41401e:	neg    eax
  414020:	add    eax,0x4
  414023:	test   eax,eax
  414025:	jle    0x41402d
  414027:	mov    DWORD PTR [rip+0x20bc3],eax        # 0x434bf0
  41402d:	mov    r8,QWORD PTR [rsp+0x30]
  414032:	mov    edx,ebp
  414034:	mov    rcx,rbx
  414037:	call   0x40b8d0
  41403c:	mov    eax,DWORD PTR [rbx+0x10]
  41403f:	mov    edx,eax
  414041:	and    edx,0x3
  414044:	cmp    edx,0x1
  414047:	je     0x4142ea
  41404d:	jb     0x4142cf
  414053:	cmp    edx,0x3
  414056:	jne    0x41406e
  414058:	mov    rdx,QWORD PTR [rip+0x20b69]        # 0x434bc8
  41405f:	mov    rcx,QWORD PTR [rip+0xfbda]        # 0x423c40
  414066:	call   0x421e60
  41406b:	mov    eax,DWORD PTR [rbx+0x10]
  41406e:	test   al,0x20
  414070:	jne    0x414272
  414076:	test   ah,0x8
  414079:	jne    0x41425a
  41407f:	mov    rcx,QWORD PTR [rbx+0x68]
  414083:	test   rcx,rcx
  414086:	je     0x414094
  414088:	mov    rdx,QWORD PTR [rip+0x20b39]        # 0x434bc8
  41408f:	call   0x421e60
  414094:	test   ebp,ebp
  414096:	je     0x41428d
  41409c:	cmp    DWORD PTR [rbx],0x21fff
  4140a2:	jle    0x414232
  4140a8:	mov    rcx,QWORD PTR [rbx+0xe0]
  4140af:	test   rcx,rcx
  4140b2:	je     0x414232
  4140b8:	mov    rdx,QWORD PTR [rip+0x20b09]        # 0x434bc8
  4140bf:	call   0x421e60
  4140c4:	mov    rcx,QWORD PTR [rip+0x20afd]        # 0x434bc8
  4140cb:	mov    ebp,edi
  4140cd:	call   0x421e80
  4140d2:	mov    rcx,QWORD PTR [rip+0x20aef]        # 0x434bc8
  4140d9:	call   0x421e88
  4140de:	test   eax,eax
  4140e0:	je     0x413f49
  4140e6:	call   QWORD PTR [rip+0x24e90]        # 0x438f7c
  4140ec:	add    rax,0x60
  4140f0:	cmp    QWORD PTR [rip+0x20ad1],rax        # 0x434bc8
  4140f7:	mov    r8,QWORD PTR [rip+0xfaba]        # 0x423bb8
  4140fe:	cmove  r8,QWORD PTR [rip+0xfaba]        # 0x423bc0
  414106:	mov    rcx,QWORD PTR [rbx+0x28]
  41410a:	mov    rdx,QWORD PTR [rip+0xfab7]        # 0x423bc8
  414111:	call   0x408860
  414116:	cmp    QWORD PTR [rip+0x20aaa],0x0        # 0x434bc8
  41411e:	je     0x4143bc
  414124:	mov    rcx,QWORD PTR [rip+0x20a9d]        # 0x434bc8
  41412b:	mov    rdx,QWORD PTR [rbx+0x60]
  41412f:	mov    edi,ebp
  414131:	mov    r8,QWORD PTR [rbx+0x28]
  414135:	call   0x407ea0
  41413a:	mov    ecx,DWORD PTR [rbx+0x10]
  41413d:	test   ch,0x40
  414140:	je     0x413fc0
  414146:	cmp    DWORD PTR [rbx],0x25fff
  41414c:	jle    0x414330
  414152:	movsxd rax,DWORD PTR [rbx+0xb4]
  414159:	mov    r8,rax
  41415c:	imul   rax,rax,0x68
  414160:	add    rax,QWORD PTR [rbx+0x78]
  414164:	cmp    DWORD PTR [rax+0x14],0x3
  414168:	je     0x4141a3
  41416a:	mov    edx,DWORD PTR [rbx+0xb0]
  414170:	lea    r9d,[r8+0x1]
  414174:	cmp    r9d,edx
  414177:	jge    0x4144cf
  41417d:	sub    edx,0x2
  414180:	sub    edx,r8d
  414183:	add    rdx,0x1
  414187:	imul   rdx,rdx,0x68
  41418b:	add    rdx,rax
  41418e:	jmp    0x414199
  414190:	cmp    rax,rdx
  414193:	je     0x4144cf
  414199:	add    rax,0x68
  41419d:	cmp    DWORD PTR [rax+0x14],0x3
  4141a1:	jne    0x414190
  4141a3:	and    ecx,0x3
  4141a6:	cmp    ecx,0x2
  4141a9:	je     0x4144b3
  4141af:	cmp    ecx,0x3
  4141b2:	je     0x414481
  4141b8:	sub    ecx,0x1
  4141bb:	je     0x414481
  4141c1:	lea    r9,[rsp+0x30]
  4141c6:	mov    rdx,QWORD PTR [rax+0x50]
  4141ca:	mov    r8d,0x14
  4141d0:	mov    rcx,r9
  4141d3:	mov    QWORD PTR [rsp+0x28],r9
  4141d8:	call   0x421d88
  4141dd:	mov    r9,QWORD PTR [rsp+0x28]
  4141e2:	jmp    0x414360
  4141e7:	mov    ecx,ebp
  4141e9:	call   0x4082e0
  4141ee:	mov    rdx,QWORD PTR [rip+0x209d3]        # 0x434bc8
  4141f5:	call   0x421e60
  4141fa:	jmp    0x413f49
  4141ff:	call   0x408bb0
  414204:	lea    rdx,[rip+0x154d6]        # 0x4296e1
  41420b:	lea    rcx,[rip+0x20a2e]        # 0x434c40
  414212:	mov    r8d,eax
  414215:	mov    esi,eax
  414217:	call   0x408880
  41421c:	mov    rdx,QWORD PTR [rip+0x209a5]        # 0x434bc8
  414223:	mov    ecx,0xa
  414228:	call   0x421e68
  41422d:	jmp    0x414013
  414232:	mov    r8,QWORD PTR [rbx+0x80]
  414239:	test   r8,r8
  41423c:	je     0x4140c4
  414242:	mov    rdx,QWORD PTR [rip+0xfa67]        # 0x423cb0
  414249:	mov    rcx,QWORD PTR [rip+0x20978]        # 0x434bc8
  414250:	call   0x407ea0
  414255:	jmp    0x4140c4
  41425a:	mov    rdx,QWORD PTR [rip+0x20967]        # 0x434bc8
  414261:	mov    rcx,QWORD PTR [rip+0xfab0]        # 0x423d18
  414268:	call   0x421e60
  41426d:	jmp    0x41407f
  414272:	mov    rdx,QWORD PTR [rip+0x2094f]        # 0x434bc8
  414279:	mov    rcx,QWORD PTR [rip+0xfa18]        # 0x423c98
  414280:	call   0x421e60
  414285:	mov    eax,DWORD PTR [rbx+0x10]
  414288:	jmp    0x414076
  41428d:	mov    rcx,QWORD PTR [rbx+0x58]
  414291:	test   rcx,rcx
  414294:	jne    0x4143de
  41429a:	test   BYTE PTR [rbx+0x11],0x1
  41429e:	jne    0x41438d
  4142a4:	cmp    BYTE PTR [rip+0x20975],0x0        # 0x434c20
  4142ab:	jne    0x4143f6
  4142b1:	mov    rcx,QWORD PTR [rbx+0x70]
  4142b5:	test   rcx,rcx
  4142b8:	je     0x41409c
  4142be:	mov    rdx,QWORD PTR [rip+0x20903]        # 0x434bc8
  4142c5:	call   0x421e60
  4142ca:	jmp    0x41409c
  4142cf:	mov    rdx,QWORD PTR [rip+0x208f2]        # 0x434bc8
  4142d6:	mov    rcx,QWORD PTR [rip+0xf9c3]        # 0x423ca0
  4142dd:	call   0x421e60
  4142e2:	mov    eax,DWORD PTR [rbx+0x10]
  4142e5:	jmp    0x41406e
  4142ea:	mov    rdx,QWORD PTR [rip+0x208d7]        # 0x434bc8
  4142f1:	mov    rcx,QWORD PTR [rip+0xf970]        # 0x423c68
  4142f8:	call   0x421e60
  4142fd:	mov    eax,DWORD PTR [rbx+0x10]
  414300:	jmp    0x41406e
  414305:	xor    ecx,ecx
  414307:	cmp    BYTE PTR [rip+0x208e6],0x0        # 0x434bf4
  41430e:	mov    QWORD PTR [rsp+0x28],rcx
  414313:	jne    0x41437c
  414315:	call   QWORD PTR [rip+0x24c61]        # 0x438f7c
  41431b:	mov    rcx,QWORD PTR [rsp+0x28]
  414320:	add    rax,0x30
  414324:	mov    QWORD PTR [rip+0x2089d],rax        # 0x434bc8
  41432b:	jmp    0x413f1a
  414330:	and    ecx,0x3
  414333:	cmp    ecx,0x2
  414336:	je     0x41446b
  41433c:	cmp    ecx,0x3
  41433f:	je     0x414450
  414345:	sub    ecx,0x1
  414348:	je     0x414450
  41434e:	lea    r9,[rsp+0x30]
  414353:	mov    DWORD PTR [rsp+0x30],0x706c6568
  41435b:	mov    BYTE PTR [rsp+0x34],0x0
  414360:	mov    r8,QWORD PTR [rbx+0x28]
  414364:	mov    rdx,QWORD PTR [rip+0xf83d]        # 0x423ba8
  41436b:	mov    rcx,QWORD PTR [rip+0x20856]        # 0x434bc8
  414372:	call   0x407ea0
  414377:	jmp    0x413f49
  41437c:	call   QWORD PTR [rip+0x24bfa]        # 0x438f7c
  414382:	mov    rcx,QWORD PTR [rsp+0x28]
  414387:	add    rax,0x60
  41438b:	jmp    0x414324
  41438d:	mov    rdx,QWORD PTR [rip+0x20834]        # 0x434bc8
  414394:	mov    rcx,QWORD PTR [rip+0xf925]        # 0x423cc0
  41439b:	call   0x421e60
  4143a0:	mov    r8,QWORD PTR [rbx+0x30]
  4143a4:	mov    rdx,QWORD PTR [rip+0xf87d]        # 0x423c28
  4143ab:	mov    rcx,QWORD PTR [rip+0x20816]        # 0x434bc8
  4143b2:	call   0x407ea0
  4143b7:	jmp    0x4142a4
  4143bc:	xor    ecx,ecx
  4143be:	mov    QWORD PTR [rsp+0x28],rcx
  4143c3:	call   QWORD PTR [rip+0x24bb3]        # 0x438f7c
  4143c9:	add    rax,0x60
  4143cd:	mov    rcx,QWORD PTR [rsp+0x28]
  4143d2:	mov    QWORD PTR [rip+0x207ef],rax        # 0x434bc8
  4143d9:	jmp    0x413edc
  4143de:	mov    rdx,QWORD PTR [rbx+0x38]
  4143e2:	mov    r8,QWORD PTR [rbx+0x20]
  4143e6:	call   0x40eaf0
  4143eb:	test   BYTE PTR [rbx+0x11],0x1
  4143ef:	jne    0x4143a0
  4143f1:	jmp    0x4142a4
  4143f6:	mov    rdx,QWORD PTR [rip+0x207cb]        # 0x434bc8
  4143fd:	mov    ecx,0xa
  414402:	mov    ebp,DWORD PTR [rbx+0xb0]
  414408:	mov    rsi,QWORD PTR [rbx+0x78]
  41440c:	call   0x421e68
  414411:	mov    rcx,QWORD PTR [rip+0x207b0]        # 0x434bc8
  414418:	call   0x421e80
  41441d:	jmp    0x414433
  41441f:	cmp    eax,0x4
  414422:	je     0x414443
  414424:	sub    ebp,0x1
  414427:	add    rsi,0x68
  41442b:	test   ebp,ebp
  41442d:	jle    0x4142b1
  414433:	mov    eax,DWORD PTR [rsi+0x10]
  414436:	and    eax,0xf000
  41443b:	shr    eax,0xc
  41443e:	cmp    eax,0x2
  414441:	jne    0x41441f
  414443:	mov    rdx,rsi
  414446:	mov    ecx,0x1
  41444b:	call   QWORD PTR [rsi+0x38]
  41444e:	jmp    0x414424
  414450:	lea    r9,[rsp+0x30]
  414455:	lea    rsi,[rip+0x1442d]        # 0x428889
  41445c:	mov    ecx,0x7
  414461:	mov    rdi,r9
  414464:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  414466:	jmp    0x414360
  41446b:	mov    WORD PTR [rsp+0x30],0x682d
  414472:	mov    BYTE PTR [rsp+0x32],0x0
  414477:	lea    r9,[rsp+0x30]
  41447c:	jmp    0x414360
  414481:	mov    BYTE PTR [rsp+0x31],0x2d
  414486:	mov    BYTE PTR [rsp+0x30],0x2d
  41448b:	lea    r9,[rsp+0x30]
  414490:	mov    rdx,QWORD PTR [rax+0x50]
  414494:	lea    rcx,[rsp+0x32]
  414499:	mov    r8d,0x14
  41449f:	mov    QWORD PTR [rsp+0x28],r9
  4144a4:	call   0x421d88
  4144a9:	mov    r9,QWORD PTR [rsp+0x28]
  4144ae:	jmp    0x414360
  4144b3:	mov    BYTE PTR [rsp+0x30],0x2d
  4144b8:	movzx  eax,WORD PTR [rax+0x2]
  4144bc:	lea    r9,[rsp+0x30]
  4144c1:	mov    BYTE PTR [rsp+0x32],0x0
  4144c6:	mov    BYTE PTR [rsp+0x31],al
  4144ca:	jmp    0x414360
  4144cf:	mov    rcx,QWORD PTR [rip+0xf59a]        # 0x423a70
  4144d6:	call   0x408310
  4144db:	nop
  4144dc:	nop    DWORD PTR [rax+0x0]
  4144e0:	sub    rsp,0x28
  4144e4:	call   0x413e90
  4144e9:	nop
  4144ea:	nop    WORD PTR [rax+rax*1+0x0]
  4144f0:	sub    rsp,0x28
  4144f4:	lea    rcx,[rip+0xf1c5]        # 0x4236c0
  4144fb:	xor    edx,edx
  4144fd:	call   0x413e90
  414502:	nop
  414503:	nop    DWORD PTR [rax]
  414506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414510:	lea    rax,[rip+0x14379]        # 0x428890
  414517:	ret    
  414518:	nop    DWORD PTR [rax+rax*1+0x0]
  414520:	push   rsi
  414521:	push   rbx
  414522:	sub    rsp,0x28
  414526:	cmp    BYTE PTR [rip+0x206c7],0x0        # 0x434bf4
  41452d:	mov    rbx,rcx
  414530:	mov    rsi,rdx
  414533:	je     0x414550
  414535:	call   QWORD PTR [rip+0x24a41]        # 0x438f7c
  41453b:	cmp    rbx,0xf
  41453f:	lea    r8,[rax+0x60]
  414543:	ja     0x414560
  414545:	add    rsp,0x28
  414549:	pop    rbx
  41454a:	pop    rsi
  41454b:	ret    
  41454c:	nop    DWORD PTR [rax+0x0]
  414550:	call   QWORD PTR [rip+0x24a26]        # 0x438f7c
  414556:	cmp    rbx,0xf
  41455a:	lea    r8,[rax+0x30]
  41455e:	jbe    0x414545
  414560:	xor    r9d,r9d
  414563:	mov    rdx,rsi
  414566:	mov    rcx,rbx
  414569:	add    rsp,0x28
  41456d:	pop    rbx
  41456e:	pop    rsi
  41456f:	jmp    0x411960
  414574:	xchg   ax,ax
  414576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414580:	push   rsi
  414581:	push   rbx
  414582:	sub    rsp,0x28
  414586:	mov    rbx,rcx
  414589:	mov    rsi,rdx
  41458c:	call   QWORD PTR [rip+0x249ea]        # 0x438f7c
  414592:	cmp    rbx,0xf
  414596:	ja     0x4145a0
  414598:	add    rsp,0x28
  41459c:	pop    rbx
  41459d:	pop    rsi
  41459e:	ret    
  41459f:	nop
  4145a0:	lea    r8,[rax+0x60]
  4145a4:	mov    r9d,0x1
  4145aa:	mov    rdx,rsi
  4145ad:	mov    rcx,rbx
  4145b0:	add    rsp,0x28
  4145b4:	pop    rbx
  4145b5:	pop    rsi
  4145b6:	jmp    0x411960
  4145bb:	nop
  4145bc:	nop
  4145bd:	nop
  4145be:	nop
  4145bf:	nop
  4145c0:	push   rbx
  4145c1:	sub    rsp,0x20
  4145c5:	call   0x421e18
  4145ca:	test   rax,rax
  4145cd:	mov    rbx,rax
  4145d0:	je     0x4145e0
  4145d2:	mov    rax,rbx
  4145d5:	add    rsp,0x20
  4145d9:	pop    rbx
  4145da:	ret    
  4145db:	nop    DWORD PTR [rax+rax*1+0x0]
  4145e0:	call   QWORD PTR [rip+0x249e6]        # 0x438fcc
  4145e6:	mov    DWORD PTR [rax],0xc
  4145ec:	mov    rax,rbx
  4145ef:	add    rsp,0x20
  4145f3:	pop    rbx
  4145f4:	ret    
  4145f5:	nop
  4145f6:	nop
  4145f7:	nop
  4145f8:	nop
  4145f9:	nop
  4145fa:	nop
  4145fb:	nop
  4145fc:	nop
  4145fd:	nop
  4145fe:	nop
  4145ff:	nop
  414600:	push   rdi
  414601:	push   rsi
  414602:	push   rbx
  414603:	mov    esi,0x1
  414608:	mov    r10d,0x1
  41460e:	xor    r11d,r11d
  414611:	mov    rax,0xffffffffffffffff
  414618:	nop    DWORD PTR [rax+rax*1+0x0]
  414620:	lea    r9,[r11+r10*1]
  414624:	cmp    r9,rdx
  414627:	jae    0x414654
  414629:	lea    rbx,[rcx+rax*1]
  41462d:	movzx  edi,BYTE PTR [rbx+r10*1]
  414632:	cmp    BYTE PTR [rcx+r9*1],dil
  414636:	jae    0x4146c0
  41463c:	mov    r11,r9
  41463f:	mov    r10d,0x1
  414645:	mov    rsi,r9
  414648:	lea    r9,[r11+r10*1]
  41464c:	sub    rsi,rax
  41464f:	cmp    r9,rdx
  414652:	jb     0x414629
  414654:	mov    QWORD PTR [r8],rsi
  414657:	mov    edi,0x1
  41465c:	mov    r10d,0x1
  414662:	xor    r11d,r11d
  414665:	mov    rbx,0xffffffffffffffff
  41466c:	nop    DWORD PTR [rax+0x0]
  414670:	lea    r9,[r11+r10*1]
  414674:	cmp    rdx,r9
  414677:	jbe    0x4146a0
  414679:	lea    rsi,[rcx+rbx*1]
  41467d:	movzx  esi,BYTE PTR [rsi+r10*1]
  414682:	cmp    BYTE PTR [rcx+r9*1],sil
  414686:	jbe    0x4146e0
  414688:	mov    r11,r9
  41468b:	mov    r10d,0x1
  414691:	mov    rdi,r9
  414694:	lea    r9,[r11+r10*1]
  414698:	sub    rdi,rbx
  41469b:	cmp    rdx,r9
  41469e:	ja     0x414679
  4146a0:	add    rbx,0x1
  4146a4:	add    rax,0x1
  4146a8:	cmp    rbx,rax
  4146ab:	jb     0x4146b3
  4146ad:	mov    QWORD PTR [r8],rdi
  4146b0:	mov    rax,rbx
  4146b3:	pop    rbx
  4146b4:	pop    rsi
  4146b5:	pop    rdi
  4146b6:	ret    
  4146b7:	nop    WORD PTR [rax+rax*1+0x0]
  4146c0:	je     0x414700
  4146c2:	mov    rax,r11
  4146c5:	mov    esi,0x1
  4146ca:	add    r11,0x1
  4146ce:	mov    r10d,0x1
  4146d4:	jmp    0x414620
  4146d9:	nop    DWORD PTR [rax+0x0]
  4146e0:	je     0x414710
  4146e2:	mov    rbx,r11
  4146e5:	mov    edi,0x1
  4146ea:	add    r11,0x1
  4146ee:	mov    r10d,0x1
  4146f4:	jmp    0x414670
  4146f9:	nop    DWORD PTR [rax+0x0]
  414700:	cmp    r10,rsi
  414703:	je     0x414720
  414705:	add    r10,0x1
  414709:	jmp    0x414620
  41470e:	xchg   ax,ax
  414710:	cmp    r10,rdi
  414713:	je     0x414731
  414715:	add    r10,0x1
  414719:	jmp    0x414670
  41471e:	xchg   ax,ax
  414720:	mov    rsi,r10
  414723:	mov    r11,r9
  414726:	mov    r10d,0x1
  41472c:	jmp    0x414620
  414731:	mov    rdi,r10
  414734:	mov    r11,r9
  414737:	mov    r10d,0x1
  41473d:	jmp    0x414670
  414742:	nop    DWORD PTR [rax+0x0]
  414746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414750:	push   r15
  414752:	push   r14
  414754:	push   r13
  414756:	push   r12
  414758:	push   rbp
  414759:	push   rdi
  41475a:	push   rsi
  41475b:	push   rbx
  41475c:	sub    rsp,0x848
  414763:	cmp    r9,0x2
  414767:	mov    rbp,rcx
  41476a:	mov    r13,rdx
  41476d:	mov    rbx,r8
  414770:	mov    rdi,r9
  414773:	ja     0x4149b5
  414779:	lea    r12,[r9-0x1]
  41477d:	mov    QWORD PTR [rsp+0x38],0x1
  414786:	mov    r14d,0x1
  41478c:	mov    rsi,r12
  41478f:	lea    r10,[rsp+0x40]
  414794:	lea    rax,[rsp+0x840]
  41479c:	nop    DWORD PTR [rax+0x0]
  4147a0:	mov    QWORD PTR [r10],rdi
  4147a3:	add    r10,0x8
  4147a7:	cmp    r10,rax
  4147aa:	jne    0x4147a0
  4147ac:	xor    eax,eax
  4147ae:	test   rdi,rdi
  4147b1:	je     0x4147cb
  4147b3:	movzx  edx,BYTE PTR [rbx+rax*1]
  4147b7:	mov    rcx,rsi
  4147ba:	sub    rcx,rax
  4147bd:	add    rax,0x1
  4147c1:	cmp    rax,rdi
  4147c4:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  4147c9:	jne    0x4147b3
  4147cb:	lea    rdx,[rbx+r14*1]
  4147cf:	mov    r8,r12
  4147d2:	mov    rcx,rbx
  4147d5:	call   0x421e10
  4147da:	test   eax,eax
  4147dc:	jne    0x4148da
  4147e2:	lea    rcx,[r12-0x1]
  4147e7:	mov    r11d,0x1
  4147ed:	mov    r8,rdi
  4147f0:	sub    r11,r12
  4147f3:	xor    eax,eax
  4147f5:	xor    edx,edx
  4147f7:	sub    r8,r14
  4147fa:	lea    r15,[rbp+rcx*1+0x0]
  4147ff:	mov    QWORD PTR [rsp+0x28],r11
  414804:	sub    r13,rdi
  414807:	jmp    0x41482a
  414809:	nop    DWORD PTR [rax+0x0]
  414810:	cmp    r14,r9
  414813:	jbe    0x41481c
  414815:	test   rax,rax
  414818:	cmovne r9,r8
  41481c:	add    rdx,r9
  41481f:	xor    eax,eax
  414821:	cmp    r13,rdx
  414824:	jb     0x4148c6
  41482a:	lea    r10,[rbp+rdx*1+0x0]
  41482f:	movzx  r9d,BYTE PTR [r10+rsi*1]
  414834:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  414839:	test   r9,r9
  41483c:	jne    0x414810
  41483e:	cmp    rax,r12
  414841:	mov    r9,r12
  414844:	cmovae r9,rax
  414848:	cmp    r9,rsi
  41484b:	jae    0x414874
  41484d:	lea    rdi,[rbp+r9*1+0x0]
  414852:	movzx  edi,BYTE PTR [rdi+rdx*1]
  414856:	cmp    BYTE PTR [rbx+r9*1],dil
  41485a:	je     0x41486b
  41485c:	jmp    0x4148d0
  41485e:	xchg   ax,ax
  414860:	movzx  edi,BYTE PTR [r10+r9*1]
  414865:	cmp    BYTE PTR [rbx+r9*1],dil
  414869:	jne    0x4148d0
  41486b:	add    r9,0x1
  41486f:	cmp    r9,rsi
  414872:	jb     0x414860
  414874:	cmp    r12,rax
  414877:	jbe    0x4149d6
  41487d:	movzx  edi,BYTE PTR [r15+rdx*1]
  414882:	cmp    BYTE PTR [rbx+rcx*1],dil
  414886:	jne    0x4149d6
  41488c:	mov    r9,rcx
  41488f:	jmp    0x4148a5
  414891:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  414897:	lea    rdi,[r9-0x1]
  41489b:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  4148a0:	jne    0x4148aa
  4148a2:	mov    r9,rdi
  4148a5:	cmp    r9,rax
  4148a8:	jne    0x414891
  4148aa:	add    rax,0x1
  4148ae:	cmp    rax,r9
  4148b1:	ja     0x414975
  4148b7:	add    rdx,r14
  4148ba:	mov    rax,r8
  4148bd:	cmp    r13,rdx
  4148c0:	jae    0x41482a
  4148c6:	xor    eax,eax
  4148c8:	jmp    0x414978
  4148cd:	nop    DWORD PTR [rax]
  4148d0:	add    rdx,QWORD PTR [rsp+0x28]
  4148d5:	jmp    0x41481c
  4148da:	mov    rax,rdi
  4148dd:	lea    rcx,[r12-0x1]
  4148e2:	mov    r11d,0x1
  4148e8:	sub    rax,r12
  4148eb:	cmp    rax,r12
  4148ee:	lea    r14,[rbp+rcx*1+0x0]
  4148f3:	cmovb  rax,r12
  4148f7:	sub    r11,r12
  4148fa:	sub    r13,rdi
  4148fd:	lea    r8,[rax+0x1]
  414901:	xor    eax,eax
  414903:	lea    r10,[rbp+rax*1+0x0]
  414908:	movzx  edx,BYTE PTR [r10+rsi*1]
  41490d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  414912:	test   rdx,rdx
  414915:	jne    0x414990
  414917:	cmp    r12,rsi
  41491a:	jae    0x414944
  41491c:	movzx  edx,BYTE PTR [r10+r12*1]
  414921:	mov    r9,r12
  414924:	cmp    BYTE PTR [rbx+r12*1],dl
  414928:	je     0x41493b
  41492a:	jmp    0x4149a0
  41492c:	nop    DWORD PTR [rax+0x0]
  414930:	movzx  edx,BYTE PTR [r10+r9*1]
  414935:	cmp    BYTE PTR [rbx+r9*1],dl
  414939:	jne    0x4149a0
  41493b:	add    r9,0x1
  41493f:	cmp    r9,rsi
  414942:	jb     0x414930
  414944:	cmp    rcx,0xffffffffffffffff
  414948:	mov    r9,rcx
  41494b:	je     0x414975
  41494d:	movzx  edx,BYTE PTR [r14+rax*1]
  414952:	cmp    BYTE PTR [rbx+rcx*1],dl
  414955:	je     0x41496b
  414957:	jmp    0x4149b0
  414959:	nop    DWORD PTR [rax+0x0]
  414960:	movzx  edx,BYTE PTR [r10+r9*1]
  414965:	cmp    BYTE PTR [rbx+r9*1],dl
  414969:	jne    0x4149b0
  41496b:	sub    r9,0x1
  41496f:	cmp    r9,0xffffffffffffffff
  414973:	jne    0x414960
  414975:	mov    rax,r10
  414978:	add    rsp,0x848
  41497f:	pop    rbx
  414980:	pop    rsi
  414981:	pop    rdi
  414982:	pop    rbp
  414983:	pop    r12
  414985:	pop    r13
  414987:	pop    r14
  414989:	pop    r15
  41498b:	ret    
  41498c:	nop    DWORD PTR [rax+0x0]
  414990:	add    rax,rdx
  414993:	cmp    r13,rax
  414996:	jae    0x414903
  41499c:	xor    eax,eax
  41499e:	jmp    0x414978
  4149a0:	add    rax,r11
  4149a3:	add    rax,r9
  4149a6:	jmp    0x414993
  4149a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4149b0:	add    rax,r8
  4149b3:	jmp    0x414993
  4149b5:	lea    r8,[rsp+0x38]
  4149ba:	mov    rdx,r9
  4149bd:	mov    rcx,rbx
  4149c0:	lea    rsi,[rdi-0x1]
  4149c4:	call   0x414600
  4149c9:	mov    r14,QWORD PTR [rsp+0x38]
  4149ce:	mov    r12,rax
  4149d1:	jmp    0x41478f
  4149d6:	mov    r9,r12
  4149d9:	jmp    0x4148aa
  4149de:	xchg   ax,ax
  4149e0:	push   r15
  4149e2:	push   r14
  4149e4:	push   r13
  4149e6:	push   r12
  4149e8:	push   rbp
  4149e9:	push   rdi
  4149ea:	push   rsi
  4149eb:	push   rbx
  4149ec:	sub    rsp,0x48
  4149f0:	test   r9,r9
  4149f3:	mov    rax,rcx
  4149f6:	je     0x414b60
  4149fc:	cmp    r9,rdx
  4149ff:	ja     0x414b55
  414a05:	cmp    r9,0x1f
  414a09:	mov    rsi,r9
  414a0c:	mov    rbx,r8
  414a0f:	mov    rbp,rdx
  414a12:	mov    r12,rcx
  414a15:	ja     0x414b71
  414a1b:	movzx  edx,BYTE PTR [r8]
  414a1f:	mov    r8,rbp
  414a22:	call   0x416b40
  414a27:	test   rax,rax
  414a2a:	mov    rdi,rax
  414a2d:	je     0x414b90
  414a33:	cmp    rsi,0x1
  414a37:	je     0x414b90
  414a3d:	mov    rcx,r12
  414a40:	sub    rcx,rax
  414a43:	xor    eax,eax
  414a45:	lea    r12,[rcx+rbp*1]
  414a49:	cmp    rsi,r12
  414a4c:	ja     0x414b60
  414a52:	cmp    rsi,0x2
  414a56:	ja     0x414c4f
  414a5c:	lea    rbp,[rsi-0x1]
  414a60:	mov    QWORD PTR [rsp+0x38],0x1
  414a69:	mov    r13d,0x1
  414a6f:	lea    rdx,[rbx+r13*1]
  414a73:	mov    r8,rbp
  414a76:	mov    rcx,rbx
  414a79:	call   0x421e10
  414a7e:	test   eax,eax
  414a80:	jne    0x414b95
  414a86:	lea    r9,[rbp-0x1]
  414a8a:	mov    r15,rsi
  414a8d:	mov    r11d,0x1
  414a93:	xor    ecx,ecx
  414a95:	xor    r8d,r8d
  414a98:	sub    r15,r13
  414a9b:	lea    rax,[rdi+r9*1]
  414a9f:	sub    r11,rbp
  414aa2:	sub    r12,rsi
  414aa5:	mov    QWORD PTR [rsp+0x28],rax
  414aaa:	nop    WORD PTR [rax+rax*1+0x0]
  414ab0:	cmp    r8,rbp
  414ab3:	mov    r10,rbp
  414ab6:	cmovae r10,r8
  414aba:	cmp    rsi,r10
  414abd:	jbe    0x414af8
  414abf:	lea    rax,[rdi+r10*1]
  414ac3:	movzx  eax,BYTE PTR [rax+rcx*1]
  414ac7:	cmp    BYTE PTR [rbx+r10*1],al
  414acb:	jne    0x414b80
  414ad1:	lea    rax,[rdi+rcx*1]
  414ad5:	jmp    0x414aef
  414ad7:	nop    WORD PTR [rax+rax*1+0x0]
  414ae0:	movzx  edx,BYTE PTR [rax+r10*1]
  414ae5:	cmp    BYTE PTR [rbx+r10*1],dl
  414ae9:	jne    0x414b80
  414aef:	add    r10,0x1
  414af3:	cmp    rsi,r10
  414af6:	ja     0x414ae0
  414af8:	cmp    rbp,r8
  414afb:	jbe    0x414c47
  414b01:	mov    rax,QWORD PTR [rsp+0x28]
  414b06:	movzx  eax,BYTE PTR [rax+rcx*1]
  414b0a:	cmp    BYTE PTR [rbx+r9*1],al
  414b0e:	jne    0x414c47
  414b14:	mov    rdx,r9
  414b17:	lea    r10,[rdi+rcx*1]
  414b1b:	jmp    0x414b34
  414b1d:	nop    DWORD PTR [rax]
  414b20:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  414b26:	lea    rax,[rdx-0x1]
  414b2a:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  414b2f:	jne    0x414b39
  414b31:	mov    rdx,rax
  414b34:	cmp    rdx,r8
  414b37:	jne    0x414b20
  414b39:	add    r8,0x1
  414b3d:	cmp    r8,rdx
  414b40:	ja     0x414c6c
  414b46:	add    rcx,r13
  414b49:	mov    r8,r15
  414b4c:	cmp    r12,rcx
  414b4f:	jae    0x414ab0
  414b55:	xor    eax,eax
  414b57:	nop    WORD PTR [rax+rax*1+0x0]
  414b60:	add    rsp,0x48
  414b64:	pop    rbx
  414b65:	pop    rsi
  414b66:	pop    rdi
  414b67:	pop    rbp
  414b68:	pop    r12
  414b6a:	pop    r13
  414b6c:	pop    r14
  414b6e:	pop    r15
  414b70:	ret    
  414b71:	call   0x414750
  414b76:	jmp    0x414b60
  414b78:	nop    DWORD PTR [rax+rax*1+0x0]
  414b80:	add    rcx,r11
  414b83:	xor    r8d,r8d
  414b86:	add    rcx,r10
  414b89:	jmp    0x414b4c
  414b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b90:	mov    rax,rdi
  414b93:	jmp    0x414b60
  414b95:	mov    rax,rsi
  414b98:	lea    r8,[rbp-0x1]
  414b9c:	mov    r13d,0x1
  414ba2:	sub    rax,rbp
  414ba5:	lea    r9,[rdi+rbp*1]
  414ba9:	cmp    rax,rbp
  414bac:	lea    r14,[rdi+r8*1]
  414bb0:	cmovb  rax,rbp
  414bb4:	sub    r13,rbp
  414bb7:	sub    r12,rsi
  414bba:	lea    r11,[rax+0x1]
  414bbe:	xor    eax,eax
  414bc0:	mov    QWORD PTR [rsp+0x38],r11
  414bc5:	cmp    rsi,rbp
  414bc8:	jbe    0x414bf4
  414bca:	movzx  ecx,BYTE PTR [r9+rax*1]
  414bcf:	mov    r10,rbp
  414bd2:	lea    rdx,[rdi+rax*1]
  414bd6:	cmp    BYTE PTR [rbx+rbp*1],cl
  414bd9:	je     0x414beb
  414bdb:	jmp    0x414c30
  414bdd:	nop    DWORD PTR [rax]
  414be0:	movzx  ecx,BYTE PTR [rdx+r10*1]
  414be5:	cmp    BYTE PTR [rbx+r10*1],cl
  414be9:	jne    0x414c30
  414beb:	add    r10,0x1
  414bef:	cmp    rsi,r10
  414bf2:	ja     0x414be0
  414bf4:	cmp    r8,0xffffffffffffffff
  414bf8:	mov    rdx,r8
  414bfb:	je     0x414c75
  414bfd:	movzx  ecx,BYTE PTR [r14+rax*1]
  414c02:	cmp    BYTE PTR [rbx+r8*1],cl
  414c06:	jne    0x414c42
  414c08:	lea    rcx,[rdi+rax*1]
  414c0c:	jmp    0x414c1b
  414c0e:	xchg   ax,ax
  414c10:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  414c15:	cmp    BYTE PTR [rbx+rdx*1],r15b
  414c19:	jne    0x414c42
  414c1b:	sub    rdx,0x1
  414c1f:	cmp    rdx,0xffffffffffffffff
  414c23:	jne    0x414c10
  414c25:	mov    rax,rcx
  414c28:	jmp    0x414b60
  414c2d:	nop    DWORD PTR [rax]
  414c30:	add    rax,r13
  414c33:	add    rax,r10
  414c36:	cmp    r12,rax
  414c39:	jae    0x414bc5
  414c3b:	xor    eax,eax
  414c3d:	jmp    0x414b60
  414c42:	add    rax,r11
  414c45:	jmp    0x414c36
  414c47:	mov    rdx,rbp
  414c4a:	jmp    0x414b39
  414c4f:	lea    r8,[rsp+0x38]
  414c54:	mov    rdx,rsi
  414c57:	mov    rcx,rbx
  414c5a:	call   0x414600
  414c5f:	mov    r13,QWORD PTR [rsp+0x38]
  414c64:	mov    rbp,rax
  414c67:	jmp    0x414a6f
  414c6c:	lea    rax,[rdi+rcx*1]
  414c70:	jmp    0x414b60
  414c75:	lea    rcx,[rdi+rax*1]
  414c79:	jmp    0x414c25
  414c7b:	nop
  414c7c:	nop
  414c7d:	nop
  414c7e:	nop
  414c7f:	nop
  414c80:	push   rbx
  414c81:	sub    rsp,0x20
  414c85:	mov    ebx,ecx
  414c87:	call   0x416c00
  414c8c:	mov    rax,QWORD PTR [rip+0x24371]        # 0x439004
  414c93:	mov    ecx,ebx
  414c95:	add    rsp,0x20
  414c99:	pop    rbx
  414c9a:	rex.W jmp rax
  414c9d:	nop
  414c9e:	nop
  414c9f:	nop
  414ca0:	push   rbx
  414ca1:	sub    rsp,0x20
  414ca5:	test   rcx,rcx
  414ca8:	je     0x414cc0
  414caa:	call   0x421dd8
  414caf:	mov    rbx,rax
  414cb2:	test   rbx,rbx
  414cb5:	je     0x414cd0
  414cb7:	mov    rax,rbx
  414cba:	add    rsp,0x20
  414cbe:	pop    rbx
  414cbf:	ret    
  414cc0:	mov    rcx,rdx
  414cc3:	call   0x421e18
  414cc8:	mov    rbx,rax
  414ccb:	test   rbx,rbx
  414cce:	jne    0x414cb7
  414cd0:	call   QWORD PTR [rip+0x242f6]        # 0x438fcc
  414cd6:	mov    DWORD PTR [rax],0xc
  414cdc:	mov    rax,rbx
  414cdf:	add    rsp,0x20
  414ce3:	pop    rbx
  414ce4:	ret    
  414ce5:	nop
  414ce6:	nop
  414ce7:	nop
  414ce8:	nop
  414ce9:	nop
  414cea:	nop
  414ceb:	nop
  414cec:	nop
  414ced:	nop
  414cee:	nop
  414cef:	nop
  414cf0:	push   rbp
  414cf1:	push   rdi
  414cf2:	push   rsi
  414cf3:	push   rbx
  414cf4:	sub    rsp,0x38
  414cf8:	mov    QWORD PTR [rsp+0x78],r9
  414cfd:	mov    QWORD PTR [rsp+0x20],rdx
  414d02:	lea    r9,[rsp+0x78]
  414d07:	mov    rbp,rdx
  414d0a:	lea    rdx,[rsp+0x20]
  414d0f:	mov    rdi,rcx
  414d12:	mov    QWORD PTR [rsp+0x28],r9
  414d17:	call   0x414db0
  414d1c:	test   rax,rax
  414d1f:	mov    rsi,rax
  414d22:	mov    rbx,QWORD PTR [rsp+0x20]
  414d27:	je     0x414d85
  414d29:	cmp    rax,rdi
  414d2c:	je     0x414d3b
  414d2e:	test   rbp,rbp
  414d31:	jne    0x414d50
  414d33:	mov    rcx,rsi
  414d36:	call   0x421e50
  414d3b:	cmp    rbx,0x7fffffff
  414d42:	ja     0x414d72
  414d44:	mov    eax,ebx
  414d46:	add    rsp,0x38
  414d4a:	pop    rbx
  414d4b:	pop    rsi
  414d4c:	pop    rdi
  414d4d:	pop    rbp
  414d4e:	ret    
  414d4f:	nop
  414d50:	lea    rax,[rbp-0x1]
  414d54:	cmp    rbp,rbx
  414d57:	mov    rdx,rsi
  414d5a:	mov    rcx,rdi
  414d5d:	cmova  rax,rbx
  414d61:	mov    rbp,rax
  414d64:	mov    r8,rax
  414d67:	call   0x421e08
  414d6c:	mov    BYTE PTR [rdi+rbp*1],0x0
  414d70:	jmp    0x414d33
  414d72:	call   QWORD PTR [rip+0x24254]        # 0x438fcc
  414d78:	mov    DWORD PTR [rax],0x84
  414d7e:	mov    eax,0xffffffff
  414d83:	jmp    0x414d46
  414d85:	mov    eax,0xffffffff
  414d8a:	jmp    0x414d46
  414d8c:	nop
  414d8d:	nop
  414d8e:	nop
  414d8f:	nop
  414d90:	sub    rsp,0x38
  414d94:	mov    QWORD PTR [rsp+0x58],r9
  414d99:	lea    r9,[rsp+0x58]
  414d9e:	mov    QWORD PTR [rsp+0x28],r9
  414da3:	call   0x41d340
  414da8:	add    rsp,0x38
  414dac:	ret    
  414dad:	nop    DWORD PTR [rax]
  414db0:	push   rbp
  414db1:	push   r15
  414db3:	push   r14
  414db5:	push   r13
  414db7:	push   r12
  414db9:	push   rdi
  414dba:	push   rsi
  414dbb:	push   rbx
  414dbc:	sub    rsp,0x518
  414dc3:	lea    rbp,[rsp+0x80]
  414dcb:	lea    rax,[rbp+0x110]
  414dd2:	lea    rdi,[rbp+0x200]
  414dd9:	mov    rbx,r8
  414ddc:	mov    QWORD PTR [rbp+0x4e0],rcx
  414de3:	mov    QWORD PTR [rbp+0x4e8],rdx
  414dea:	mov    rcx,rbx
  414ded:	mov    rdx,rdi
  414df0:	mov    r8,rax
  414df3:	mov    QWORD PTR [rbp+0x60],rdi
  414df7:	mov    rsi,r9
  414dfa:	mov    QWORD PTR [rbp+0x58],rax
  414dfe:	mov    rdi,rax
  414e01:	call   0x416d20
  414e06:	test   eax,eax
  414e08:	js     0x415e50
  414e0e:	mov    rdx,rdi
  414e11:	mov    rcx,rsi
  414e14:	call   0x416c30
  414e19:	test   eax,eax
  414e1b:	js     0x416190
  414e21:	mov    rax,QWORD PTR [rbp+0x210]
  414e28:	mov    rdx,0xffffffffffffffff
  414e2f:	add    rax,0x7
  414e33:	cmp    rax,0x7
  414e37:	cmovb  rax,rdx
  414e3b:	add    rax,QWORD PTR [rbp+0x218]
  414e42:	jb     0x415280
  414e48:	lea    rcx,[rax+0x6]
  414e4c:	cmp    rax,rcx
  414e4f:	ja     0x415280
  414e55:	cmp    rcx,0xf9f
  414e5c:	ja     0x415bc0
  414e62:	add    rax,0x24
  414e66:	and    rax,0xfffffffffffffff0
  414e6a:	call   0x41c880
  414e6f:	sub    rsp,rax
  414e72:	cmp    QWORD PTR [rbp+0x4e0],0x0
  414e7a:	mov    QWORD PTR [rbp+0x50],0x0
  414e82:	lea    rax,[rsp+0x40]
  414e87:	mov    QWORD PTR [rbp+0x90],rax
  414e8e:	je     0x415bf8
  414e94:	mov    rax,QWORD PTR [rbp+0x4e8]
  414e9b:	mov    r12,QWORD PTR [rax]
  414e9e:	mov    rax,QWORD PTR [rbp+0x4e0]
  414ea5:	mov    r13,QWORD PTR [rbp+0x208]
  414eac:	mov    rdi,rbx
  414eaf:	xor    r15d,r15d
  414eb2:	mov    QWORD PTR [rbp+0x80],0x0
  414ebd:	mov    QWORD PTR [rbp+0x98],rax
  414ec4:	lea    rax,[rbp+0xbc]
  414ecb:	mov    rsi,QWORD PTR [r13+0x0]
  414ecf:	mov    QWORD PTR [rbp+0x70],rax
  414ed3:	lea    rax,[rbp+0xa0]
  414eda:	cmp    rsi,rdi
  414edd:	mov    QWORD PTR [rbp+0x40],rax
  414ee1:	lea    rax,[rbp+0xd0]
  414ee8:	mov    QWORD PTR [rbp+0x48],rax
  414eec:	lea    rax,[rbp+0xb4]
  414ef3:	mov    QWORD PTR [rbp+0x38],rax
  414ef7:	je     0x4153c3
  414efd:	sub    rsi,rdi
  414f00:	mov    rax,0xffffffffffffffff
  414f07:	mov    r14,rsi
  414f0a:	add    r14,r15
  414f0d:	cmovb  r14,rax
  414f11:	cmp    r12,r14
  414f14:	jae    0x4153d2
  414f1a:	test   r12,r12
  414f1d:	je     0x4152e0
  414f23:	js     0x415cf0
  414f29:	add    r12,r12
  414f2c:	cmp    r12,r14
  414f2f:	cmovb  r12,r14
  414f33:	cmp    r12,0xffffffffffffffff
  414f37:	je     0x415cf0
  414f3d:	mov    rax,QWORD PTR [rbp+0x98]
  414f44:	cmp    rax,QWORD PTR [rbp+0x4e0]
  414f4b:	sete   r8b
  414f4f:	test   rax,rax
  414f52:	mov    BYTE PTR [rbp+0x88],r8b
  414f59:	je     0x4152f0
  414f5f:	test   r8b,r8b
  414f62:	jne    0x4152f0
  414f68:	mov    rcx,QWORD PTR [rbp+0x98]
  414f6f:	mov    rdx,r12
  414f72:	call   0x414ca0
  414f77:	movzx  r8d,BYTE PTR [rbp+0x88]
  414f7f:	mov    rbx,rax
  414f82:	test   rbx,rbx
  414f85:	je     0x415cf0
  414f8b:	test   r15,r15
  414f8e:	je     0x414fa7
  414f90:	test   r8b,r8b
  414f93:	je     0x414fa7
  414f95:	mov    rdx,QWORD PTR [rbp+0x98]
  414f9c:	mov    r8,r15
  414f9f:	mov    rcx,rbx
  414fa2:	call   0x421e08
  414fa7:	lea    rcx,[rbx+r15*1]
  414fab:	mov    r8,rsi
  414fae:	mov    rdx,rdi
  414fb1:	call   0x421e08
  414fb6:	mov    rax,QWORD PTR [rbp+0x80]
  414fbd:	cmp    QWORD PTR [rbp+0x200],rax
  414fc4:	je     0x4161d5
  414fca:	movzx  edx,BYTE PTR [r13+0x48]
  414fcf:	cmp    dl,0x25
  414fd2:	je     0x415310
  414fd8:	mov    rax,QWORD PTR [r13+0x50]
  414fdc:	cmp    rax,0xffffffffffffffff
  414fe0:	je     0x415b00
  414fe6:	cmp    dl,0x6e
  414fe9:	je     0x4153e0
  414fef:	shl    rax,0x5
  414ff3:	cmp    dl,0x73
  414ff6:	mov    r10,QWORD PTR [rbp+0x118]
  414ffd:	je     0x4155c1
  415003:	mov    eax,DWORD PTR [r10+rax*1]
  415007:	mov    DWORD PTR [rbp+0x88],eax
  41500d:	mov    rcx,QWORD PTR [r13+0x18]
  415011:	mov    r9,QWORD PTR [r13+0x20]
  415015:	mov    r8d,DWORD PTR [r13+0x10]
  415019:	cmp    rcx,r9
  41501c:	je     0x415e20
  415022:	mov    rax,QWORD PTR [r13+0x28]
  415026:	cmp    rax,0xffffffffffffffff
  41502a:	je     0x415d00
  415030:	shl    rax,0x5
  415034:	add    rax,r10
  415037:	cmp    DWORD PTR [rax],0x5
  41503a:	jne    0x415b00
  415040:	movsxd r15,DWORD PTR [rax+0x10]
  415044:	test   r15d,r15d
  415047:	js     0x415e10
  41504d:	mov    rdx,QWORD PTR [r13+0x30]
  415051:	mov    rcx,QWORD PTR [r13+0x38]
  415055:	cmp    rdx,rcx
  415058:	je     0x4155b0
  41505e:	mov    rax,QWORD PTR [r13+0x40]
  415062:	cmp    rax,0xffffffffffffffff
  415066:	je     0x415d50
  41506c:	shl    rax,0x5
  415070:	add    r10,rax
  415073:	cmp    DWORD PTR [r10],0x5
  415077:	jne    0x415b00
  41507d:	movsxd rsi,DWORD PTR [r10+0x10]
  415081:	test   esi,esi
  415083:	js     0x4155b0
  415089:	mov    DWORD PTR [rbp+0x28],0x1
  415090:	mov    rax,QWORD PTR [rbp+0x90]
  415097:	test   r8b,0x1
  41509b:	mov    BYTE PTR [rax],0x25
  41509e:	lea    rdi,[rax+0x1]
  4150a2:	je     0x4150b3
  4150a4:	mov    rax,QWORD PTR [rbp+0x90]
  4150ab:	lea    rdi,[rax+0x2]
  4150af:	mov    BYTE PTR [rax+0x1],0x27
  4150b3:	test   r8b,0x2
  4150b7:	je     0x4150c0
  4150b9:	mov    BYTE PTR [rdi],0x2d
  4150bc:	add    rdi,0x1
  4150c0:	test   r8b,0x4
  4150c4:	je     0x4150cd
  4150c6:	mov    BYTE PTR [rdi],0x2b
  4150c9:	add    rdi,0x1
  4150cd:	test   r8b,0x8
  4150d1:	je     0x4150da
  4150d3:	mov    BYTE PTR [rdi],0x20
  4150d6:	add    rdi,0x1
  4150da:	test   r8b,0x10
  4150de:	je     0x4150e7
  4150e0:	mov    BYTE PTR [rdi],0x23
  4150e3:	add    rdi,0x1
  4150e7:	and    r8d,0x20
  4150eb:	je     0x4150f4
  4150ed:	mov    BYTE PTR [rdi],0x30
  4150f0:	add    rdi,0x1
  4150f4:	mov    rdx,QWORD PTR [r13+0x18]
  4150f8:	mov    r8,QWORD PTR [r13+0x20]
  4150fc:	cmp    rdx,r8
  4150ff:	je     0x415123
  415101:	mov    r9,r8
  415104:	mov    rcx,rdi
  415107:	sub    r9,rdx
  41510a:	mov    r8,r9
  41510d:	mov    QWORD PTR [rbp+0x98],r9
  415114:	call   0x421e08
  415119:	mov    r9,QWORD PTR [rbp+0x98]
  415120:	add    rdi,r9
  415123:	mov    rdx,QWORD PTR [r13+0x30]
  415127:	mov    r8,QWORD PTR [r13+0x38]
  41512b:	cmp    rdx,r8
  41512e:	je     0x415152
  415130:	mov    r9,r8
  415133:	mov    rcx,rdi
  415136:	sub    r9,rdx
  415139:	mov    r8,r9
  41513c:	mov    QWORD PTR [rbp+0x98],r9
  415143:	call   0x421e08
  415148:	mov    r9,QWORD PTR [rbp+0x98]
  41514f:	add    rdi,r9
  415152:	mov    eax,DWORD PTR [rbp+0x88]
  415158:	lea    ecx,[rax-0x7]
  41515b:	cmp    ecx,0x9
  41515e:	ja     0x415183
  415160:	mov    eax,0x1
  415165:	shl    rax,cl
  415168:	test   eax,0x283
  41516d:	jne    0x415764
  415173:	test   al,0x20
  415175:	jne    0x415e60
  41517b:	test   al,0xc
  41517d:	jne    0x415ed0
  415183:	movzx  eax,BYTE PTR [r13+0x48]
  415188:	mov    BYTE PTR [rdi+0x1],0x0
  41518c:	mov    BYTE PTR [rdi],al
  41518e:	mov    rax,QWORD PTR [r13+0x28]
  415192:	cmp    rax,0xffffffffffffffff
  415196:	je     0x415b80
  41519c:	shl    rax,0x5
  4151a0:	add    rax,QWORD PTR [rbp+0x118]
  4151a7:	cmp    DWORD PTR [rax],0x5
  4151aa:	jne    0x415b00
  4151b0:	mov    eax,DWORD PTR [rax+0x10]
  4151b3:	mov    edx,0x1
  4151b8:	mov    DWORD PTR [rbp+0xc0],eax
  4151be:	mov    rax,QWORD PTR [r13+0x40]
  4151c2:	cmp    rax,0xffffffffffffffff
  4151c6:	je     0x415b70
  4151cc:	shl    rax,0x5
  4151d0:	add    rax,QWORD PTR [rbp+0x118]
  4151d7:	cmp    DWORD PTR [rax],0x5
  4151da:	jne    0x415b00
  4151e0:	mov    eax,DWORD PTR [rax+0x10]
  4151e3:	lea    ecx,[rdx+0x1]
  4151e6:	mov    DWORD PTR [rbp+0x78],ecx
  4151e9:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  4151f0:	lea    rax,[r14+0x2]
  4151f4:	mov    rdx,0xffffffffffffffff
  4151fb:	cmp    r14,rax
  4151fe:	cmovbe rdx,rax
  415202:	cmp    r12,rdx
  415205:	jae    0x415b60
  41520b:	test   r12,r12
  41520e:	je     0x415410
  415214:	js     0x415231
  415216:	add    r12,r12
  415219:	cmp    r14,rax
  41521c:	ja     0x415231
  41521e:	cmp    r12,rax
  415221:	jae    0x415428
  415227:	cmp    rax,0xffffffffffffffff
  41522b:	jne    0x416b35
  415231:	mov    rax,QWORD PTR [rip+0x23d94]        # 0x438fcc
  415238:	mov    r15,rbx
  41523b:	mov    QWORD PTR [rbp+0x68],rax
  41523f:	mov    QWORD PTR [rbp+0x98],r15
  415246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415250:	mov    rax,QWORD PTR [rbp+0x98]
  415257:	test   rax,rax
  41525a:	je     0x415269
  41525c:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415263:	jne    0x415f30
  415269:	mov    rax,QWORD PTR [rbp+0x50]
  41526d:	test   rax,rax
  415270:	je     0x41528b
  415272:	mov    rcx,rax
  415275:	call   0x421e50
  41527a:	jmp    0x41528b
  41527c:	nop    DWORD PTR [rax+0x0]
  415280:	mov    rax,QWORD PTR [rip+0x23d45]        # 0x438fcc
  415287:	mov    QWORD PTR [rbp+0x68],rax
  41528b:	mov    rax,QWORD PTR [rbp+0x60]
  41528f:	mov    rcx,QWORD PTR [rbp+0x208]
  415296:	add    rax,0x20
  41529a:	cmp    rcx,rax
  41529d:	je     0x4152a4
  41529f:	call   0x421e50
  4152a4:	mov    rax,QWORD PTR [rbp+0x58]
  4152a8:	mov    rcx,QWORD PTR [rbp+0x118]
  4152af:	add    rax,0x10
  4152b3:	cmp    rcx,rax
  4152b6:	je     0x4152bd
  4152b8:	call   0x421e50
  4152bd:	mov    rax,QWORD PTR [rbp+0x68]
  4152c1:	call   rax
  4152c3:	mov    DWORD PTR [rax],0xc
  4152c9:	xor    eax,eax
  4152cb:	lea    rsp,[rbp+0x498]
  4152d2:	pop    rbx
  4152d3:	pop    rsi
  4152d4:	pop    rdi
  4152d5:	pop    r12
  4152d7:	pop    r13
  4152d9:	pop    r14
  4152db:	pop    r15
  4152dd:	pop    rbp
  4152de:	ret    
  4152df:	nop
  4152e0:	mov    r12d,0xc
  4152e6:	jmp    0x414f2c
  4152eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4152f0:	mov    rcx,r12
  4152f3:	call   0x4145c0
  4152f8:	movzx  r8d,BYTE PTR [rbp+0x88]
  415300:	mov    rbx,rax
  415303:	jmp    0x414f82
  415308:	nop    DWORD PTR [rax+rax*1+0x0]
  415310:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  415315:	jne    0x415b00
  41531b:	lea    r15,[r14+0x1]
  41531f:	mov    rax,0xffffffffffffffff
  415326:	cmp    r14,r15
  415329:	cmova  r15,rax
  41532d:	cmp    r12,r15
  415330:	jae    0x41539a
  415332:	test   r12,r12
  415335:	je     0x415e30
  41533b:	js     0x415ce0
  415341:	add    r12,r12
  415344:	cmp    r12,r15
  415347:	cmovb  r12,r15
  41534b:	cmp    r12,0xffffffffffffffff
  41534f:	je     0x415ce0
  415355:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41535c:	sete   sil
  415360:	test   rbx,rbx
  415363:	je     0x415e40
  415369:	test   sil,sil
  41536c:	jne    0x415e40
  415372:	mov    rdx,r12
  415375:	mov    rcx,rbx
  415378:	call   0x414ca0
  41537d:	mov    r9,rax
  415380:	test   r9,r9
  415383:	je     0x415ce0
  415389:	test   r14,r14
  41538c:	je     0x415397
  41538e:	test   sil,sil
  415391:	jne    0x415e70
  415397:	mov    rbx,r9
  41539a:	mov    BYTE PTR [rbx+r14*1],0x25
  41539f:	mov    QWORD PTR [rbp+0x98],rbx
  4153a6:	mov    rdi,QWORD PTR [r13+0x8]
  4153aa:	add    r13,0x58
  4153ae:	mov    rsi,QWORD PTR [r13+0x0]
  4153b2:	add    QWORD PTR [rbp+0x80],0x1
  4153ba:	cmp    rsi,rdi
  4153bd:	jne    0x414efd
  4153c3:	mov    r14,r15
  4153c6:	mov    rbx,QWORD PTR [rbp+0x98]
  4153cd:	jmp    0x414fb6
  4153d2:	mov    rbx,QWORD PTR [rbp+0x98]
  4153d9:	jmp    0x414fa7
  4153de:	xchg   ax,ax
  4153e0:	shl    rax,0x5
  4153e4:	add    rax,QWORD PTR [rbp+0x118]
  4153eb:	mov    edi,DWORD PTR [rax]
  4153ed:	lea    edx,[rdi-0x12]
  4153f0:	cmp    edx,0x4
  4153f3:	ja     0x415b00
  4153f9:	lea    rcx,[rip+0x170c0]        # 0x42c4c0
  415400:	mov    rax,QWORD PTR [rax+0x10]
  415404:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  415408:	add    rcx,rdx
  41540b:	jmp    rcx
  41540d:	nop    DWORD PTR [rax]
  415410:	cmp    r14,rax
  415413:	ja     0x415231
  415419:	mov    r12d,0xc
  41541f:	cmp    r12,rax
  415422:	jb     0x415227
  415428:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  41542f:	sete   r8b
  415433:	test   rbx,rbx
  415436:	mov    BYTE PTR [rbp+0x68],r8b
  41543a:	je     0x415b40
  415440:	test   r8b,r8b
  415443:	jne    0x415b40
  415449:	mov    rdx,r12
  41544c:	mov    rcx,rbx
  41544f:	call   0x414ca0
  415454:	movzx  r8d,BYTE PTR [rbp+0x68]
  415459:	mov    QWORD PTR [rbp+0x98],rax
  415460:	cmp    QWORD PTR [rbp+0x98],0x0
  415468:	je     0x415231
  41546e:	test   r14,r14
  415471:	je     0x41548a
  415473:	test   r8b,r8b
  415476:	je     0x41548a
  415478:	mov    rcx,QWORD PTR [rbp+0x98]
  41547f:	mov    r8,r14
  415482:	mov    rdx,rbx
  415485:	call   0x421e08
  41548a:	mov    rax,QWORD PTR [rbp+0x98]
  415491:	mov    BYTE PTR [rax+r14*1],0x0
  415496:	mov    rax,QWORD PTR [rip+0x23b2f]        # 0x438fcc
  41549d:	mov    QWORD PTR [rbp+0x68],rax
  4154a1:	call   rax
  4154a3:	mov    ebx,DWORD PTR [rbp+0x88]
  4154a9:	mov    eax,DWORD PTR [rax]
  4154ab:	mov    QWORD PTR [rbp-0x10],rsi
  4154af:	lea    edx,[rbx-0x9]
  4154b2:	mov    DWORD PTR [rbp+0x30],eax
  4154b5:	cmp    edx,0x2
  4154b8:	sbb    rax,rax
  4154bb:	and    eax,0xa
  4154be:	add    rax,0xa
  4154c2:	cmp    rsi,rax
  4154c5:	cmovae rax,rsi
  4154c9:	mov    QWORD PTR [rbp-0x38],rax
  4154cd:	add    rax,rax
  4154d0:	mov    QWORD PTR [rbp+0x20],rax
  4154d4:	add    rax,0x1
  4154d8:	cmp    edx,0x2
  4154db:	mov    QWORD PTR [rbp+0x18],rax
  4154df:	sbb    rax,rax
  4154e2:	and    eax,0xb
  4154e5:	add    rax,0xb
  4154e9:	cmp    rsi,rax
  4154ec:	cmovae rax,rsi
  4154f0:	mov    QWORD PTR [rbp-0x18],rax
  4154f4:	add    rax,0x1
  4154f8:	cmp    edx,0x2
  4154fb:	mov    QWORD PTR [rbp+0x10],rax
  4154ff:	sbb    rax,rax
  415502:	mov    edx,0x2693
  415507:	and    eax,0x8
  41550a:	add    rax,0x9
  41550e:	cmp    rsi,rax
  415511:	cmovae rax,rsi
  415515:	mov    QWORD PTR [rbp-0x20],rax
  415519:	add    rax,0x2
  41551d:	cmp    ebx,0xc
  415520:	mov    QWORD PTR [rbp+0x8],rax
  415524:	mov    eax,0x273
  415529:	cmove  rax,rdx
  41552d:	mov    QWORD PTR [rbp-0x28],rax
  415531:	add    rax,rsi
  415534:	cmp    ebx,0xc
  415537:	mov    QWORD PTR [rbp+0x0],rax
  41553b:	sete   al
  41553e:	movzx  eax,al
  415541:	lea    rax,[rax+rax*1+0xd]
  415546:	cmp    rsi,rax
  415549:	cmovae rax,rsi
  41554d:	mov    rsi,r12
  415550:	mov    QWORD PTR [rbp-0x30],rax
  415554:	add    rax,0xc
  415558:	mov    QWORD PTR [rbp-0x8],rax
  41555c:	mov    rax,rsi
  41555f:	mov    ebx,0x7fffffff
  415564:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  41556e:	sub    rax,r14
  415571:	cmp    rax,0x7fffffff
  415577:	cmovbe rbx,rax
  41557b:	call   QWORD PTR [rip+0x23a4b]        # 0x438fcc
  415581:	mov    DWORD PTR [rax],0x0
  415587:	mov    eax,DWORD PTR [rbp+0x88]
  41558d:	cmp    eax,0x11
  415590:	ja     0x415b00
  415596:	mov    edx,eax
  415598:	lea    rax,[rip+0x16f35]        # 0x42c4d4
  41559f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4155a3:	add    rax,rdx
  4155a6:	jmp    rax
  4155a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4155b0:	mov    esi,0x6
  4155b5:	mov    DWORD PTR [rbp+0x28],0x0
  4155bc:	jmp    0x415090
  4155c1:	add    rax,r10
  4155c4:	mov    edi,DWORD PTR [rax]
  4155c6:	cmp    edi,0x10
  4155c9:	mov    DWORD PTR [rbp+0x88],edi
  4155cf:	jne    0x41500d
  4155d5:	mov    r8,QWORD PTR [r13+0x18]
  4155d9:	mov    r9,QWORD PTR [r13+0x20]
  4155dd:	cmp    r8,r9
  4155e0:	je     0x415c1c
  4155e6:	mov    rdx,QWORD PTR [r13+0x28]
  4155ea:	cmp    rdx,0xffffffffffffffff
  4155ee:	je     0x41686d
  4155f4:	shl    rdx,0x5
  4155f8:	add    rdx,r10
  4155fb:	cmp    DWORD PTR [rdx],0x5
  4155fe:	jne    0x415b00
  415604:	movsxd rdx,DWORD PTR [rdx+0x10]
  415608:	mov    rcx,rdx
  41560b:	shr    rcx,0x3f
  41560f:	mov    r8,rcx
  415612:	neg    r8
  415615:	xor    rdx,r8
  415618:	lea    rdi,[rdx+rcx*1]
  41561c:	mov    QWORD PTR [rbp+0x68],rdi
  415620:	mov    r8,QWORD PTR [r13+0x30]
  415624:	mov    r11,QWORD PTR [r13+0x38]
  415628:	mov    DWORD PTR [rbp+0x88],0x1
  415632:	cmp    r8,r11
  415635:	je     0x416b2c
  41563b:	mov    rdx,QWORD PTR [r13+0x40]
  41563f:	cmp    rdx,0xffffffffffffffff
  415643:	je     0x41680e
  415649:	shl    rdx,0x5
  41564d:	add    r10,rdx
  415650:	cmp    DWORD PTR [r10],0x5
  415654:	jne    0x415b00
  41565a:	mov    r9d,DWORD PTR [r10+0x10]
  41565e:	test   r9d,r9d
  415661:	movsxd r15,r9d
  415664:	js     0x41679d
  41566a:	test   r15,r15
  41566d:	mov    rsi,QWORD PTR [rax+0x10]
  415671:	mov    DWORD PTR [rbp+0xc0],0x0
  41567b:	je     0x416b00
  415681:	movzx  edx,WORD PTR [rsi]
  415684:	test   dx,dx
  415687:	je     0x416b00
  41568d:	lea    rax,[rbp+0xc0]
  415694:	mov    rcx,rsi
  415697:	mov    QWORD PTR [rbp+0x98],r13
  41569e:	mov    QWORD PTR [rbp+0x78],r12
  4156a2:	mov    QWORD PTR [rbp+0x30],rsi
  4156a6:	xor    edi,edi
  4156a8:	mov    rsi,r15
  4156ab:	mov    r12,rcx
  4156ae:	mov    r13,rax
  4156b1:	mov    r15,QWORD PTR [rbp+0x48]
  4156b5:	jmp    0x4156e9
  4156b7:	nop    WORD PTR [rax+rax*1+0x0]
  4156c0:	cdqe   
  4156c2:	cmp    rax,rsi
  4156c5:	ja     0x416590
  4156cb:	add    r12,0x2
  4156cf:	add    rdi,rax
  4156d2:	sub    rsi,rax
  4156d5:	je     0x416590
  4156db:	movzx  edx,WORD PTR [r12]
  4156e0:	test   dx,dx
  4156e3:	je     0x416590
  4156e9:	mov    r8,r13
  4156ec:	mov    rcx,r15
  4156ef:	call   0x41d120
  4156f4:	test   eax,eax
  4156f6:	jns    0x4156c0
  4156f8:	test   rbx,rbx
  4156fb:	je     0x41570e
  4156fd:	cmp    QWORD PTR [rbp+0x4e0],rbx
  415704:	je     0x41570e
  415706:	mov    rcx,rbx
  415709:	call   0x421e50
  41570e:	mov    rax,QWORD PTR [rbp+0x50]
  415712:	test   rax,rax
  415715:	je     0x41571f
  415717:	mov    rcx,rax
  41571a:	call   0x421e50
  41571f:	mov    rax,QWORD PTR [rbp+0x60]
  415723:	mov    rcx,QWORD PTR [rbp+0x208]
  41572a:	add    rax,0x20
  41572e:	cmp    rcx,rax
  415731:	je     0x415738
  415733:	call   0x421e50
  415738:	mov    rax,QWORD PTR [rbp+0x58]
  41573c:	mov    rcx,QWORD PTR [rbp+0x118]
  415743:	add    rax,0x10
  415747:	cmp    rcx,rax
  41574a:	je     0x415751
  41574c:	call   0x421e50
  415751:	call   QWORD PTR [rip+0x23875]        # 0x438fcc
  415757:	mov    DWORD PTR [rax],0x2a
  41575d:	xor    eax,eax
  41575f:	jmp    0x4152cb
  415764:	mov    BYTE PTR [rdi],0x6c
  415767:	add    rdi,0x1
  41576b:	jmp    0x415183
  415770:	mov    DWORD PTR [rax],r14d
  415773:	mov    r15,r14
  415776:	mov    QWORD PTR [rbp+0x98],rbx
  41577d:	jmp    0x4153a6
  415782:	mov    rax,QWORD PTR [r13+0x50]
  415786:	shl    rax,0x5
  41578a:	add    rax,QWORD PTR [rbp+0x118]
  415791:	mov    r9d,DWORD PTR [rax+0x10]
  415795:	mov    eax,DWORD PTR [rbp+0x78]
  415798:	cmp    eax,0x1
  41579b:	je     0x415990
  4157a1:	cmp    eax,0x2
  4157a4:	mov    rax,QWORD PTR [rbp+0x98]
  4157ab:	lea    r12,[rax+r14*1]
  4157af:	mov    rax,QWORD PTR [rbp+0x70]
  4157b3:	jne    0x415b05
  4157b9:	mov    QWORD PTR [rsp+0x30],rax
  4157be:	mov    eax,DWORD PTR [rbp+0xc4]
  4157c4:	mov    rdx,rbx
  4157c7:	mov    DWORD PTR [rsp+0x28],r9d
  4157cc:	mov    r8,QWORD PTR [rbp+0x90]
  4157d3:	mov    rcx,r12
  4157d6:	mov    r9d,DWORD PTR [rbp+0xc0]
  4157dd:	mov    DWORD PTR [rsp+0x20],eax
  4157e1:	call   0x414d90
  4157e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157f0:	movsxd rdx,DWORD PTR [rbp+0xbc]
  4157f7:	test   edx,edx
  4157f9:	js     0x415953
  4157ff:	movsxd rcx,edx
  415802:	cmp    rcx,rbx
  415805:	jae    0x415812
  415807:	cmp    BYTE PTR [r12+rcx*1],0x0
  41580c:	jne    0x415b00
  415812:	cmp    eax,edx
  415814:	jle    0x41581f
  415816:	mov    DWORD PTR [rbp+0xbc],eax
  41581c:	movsxd rdx,eax
  41581f:	lea    eax,[rdx+0x1]
  415822:	cmp    rax,rbx
  415825:	jb     0x416380
  41582b:	cmp    rbx,0x7fffffff
  415832:	je     0x4163a0
  415838:	lea    rcx,[rsi+rsi*1]
  41583c:	test   rsi,rsi
  41583f:	mov    rax,0xffffffffffffffff
  415846:	cmovs  rcx,rax
  41584a:	add    edx,0x2
  41584d:	add    rdx,r14
  415850:	jb     0x41585c
  415852:	cmp    rcx,rdx
  415855:	mov    rax,rdx
  415858:	cmovae rax,rcx
  41585c:	cmp    rsi,rax
  41585f:	jae    0x41555c
  415865:	test   rsi,rsi
  415868:	je     0x415b21
  41586e:	js     0x416420
  415874:	add    rsi,rsi
  415877:	cmp    rsi,rax
  41587a:	cmovb  rsi,rax
  41587e:	cmp    rsi,0xffffffffffffffff
  415882:	je     0x416420
  415888:	mov    rax,QWORD PTR [rbp+0x98]
  41588f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415896:	sete   bl
  415899:	test   rax,rax
  41589c:	je     0x415b30
  4158a2:	test   bl,bl
  4158a4:	jne    0x415b30
  4158aa:	mov    rcx,QWORD PTR [rbp+0x98]
  4158b1:	mov    rdx,rsi
  4158b4:	call   0x414ca0
  4158b9:	mov    r9,rax
  4158bc:	test   r9,r9
  4158bf:	je     0x416420
  4158c5:	test   bl,bl
  4158c7:	je     0x4158d2
  4158c9:	test   r14,r14
  4158cc:	jne    0x415db0
  4158d2:	mov    QWORD PTR [rbp+0x98],r9
  4158d9:	jmp    0x41555c
  4158de:	xchg   ax,ax
  4158e0:	mov    rax,QWORD PTR [r13+0x50]
  4158e4:	shl    rax,0x5
  4158e8:	add    rax,QWORD PTR [rbp+0x118]
  4158ef:	mov    r9,QWORD PTR [rax+0x10]
  4158f3:	mov    eax,DWORD PTR [rbp+0x78]
  4158f6:	cmp    eax,0x1
  4158f9:	je     0x415dd0
  4158ff:	cmp    eax,0x2
  415902:	mov    rax,QWORD PTR [rbp+0x98]
  415909:	lea    r12,[rax+r14*1]
  41590d:	mov    rax,QWORD PTR [rbp+0x70]
  415911:	jne    0x415c00
  415917:	mov    QWORD PTR [rsp+0x30],rax
  41591c:	mov    QWORD PTR [rsp+0x28],r9
  415921:	mov    eax,DWORD PTR [rbp+0xc4]
  415927:	mov    r9d,DWORD PTR [rbp+0xc0]
  41592e:	mov    rdx,rbx
  415931:	mov    r8,QWORD PTR [rbp+0x90]
  415938:	mov    rcx,r12
  41593b:	mov    DWORD PTR [rsp+0x20],eax
  41593f:	call   0x414d90
  415944:	movsxd rdx,DWORD PTR [rbp+0xbc]
  41594b:	test   edx,edx
  41594d:	jns    0x4157ff
  415953:	cmp    BYTE PTR [rdi+0x1],0x0
  415957:	je     0x415b90
  41595d:	mov    BYTE PTR [rdi+0x1],0x0
  415961:	jmp    0x41555c
  415966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415970:	mov    rax,QWORD PTR [r13+0x50]
  415974:	shl    rax,0x5
  415978:	add    rax,QWORD PTR [rbp+0x118]
  41597f:	movzx  r9d,WORD PTR [rax+0x10]
  415984:	mov    eax,DWORD PTR [rbp+0x78]
  415987:	cmp    eax,0x1
  41598a:	jne    0x4157a1
  415990:	mov    rax,QWORD PTR [rbp+0x98]
  415997:	mov    DWORD PTR [rsp+0x20],r9d
  41599c:	mov    rdx,rbx
  41599f:	mov    r9d,DWORD PTR [rbp+0xc0]
  4159a6:	mov    r8,QWORD PTR [rbp+0x90]
  4159ad:	lea    r12,[rax+r14*1]
  4159b1:	mov    rax,QWORD PTR [rbp+0x70]
  4159b5:	mov    rcx,r12
  4159b8:	mov    QWORD PTR [rsp+0x28],rax
  4159bd:	call   0x414d90
  4159c2:	jmp    0x4157f0
  4159c7:	nop    WORD PTR [rax+rax*1+0x0]
  4159d0:	mov    rax,QWORD PTR [r13+0x50]
  4159d4:	shl    rax,0x5
  4159d8:	add    rax,QWORD PTR [rbp+0x118]
  4159df:	movsx  r9d,BYTE PTR [rax+0x10]
  4159e4:	mov    eax,DWORD PTR [rbp+0x78]
  4159e7:	cmp    eax,0x1
  4159ea:	jne    0x4157a1
  4159f0:	jmp    0x415990
  4159f2:	mov    rax,QWORD PTR [r13+0x50]
  4159f6:	shl    rax,0x5
  4159fa:	add    rax,QWORD PTR [rbp+0x118]
  415a01:	movsd  xmm0,QWORD PTR [rax+0x10]
  415a06:	mov    eax,DWORD PTR [rbp+0x78]
  415a09:	cmp    eax,0x1
  415a0c:	je     0x416342
  415a12:	cmp    eax,0x2
  415a15:	mov    rax,QWORD PTR [rbp+0x98]
  415a1c:	lea    r12,[rax+r14*1]
  415a20:	mov    rax,QWORD PTR [rbp+0x70]
  415a24:	jne    0x415f04
  415a2a:	mov    QWORD PTR [rsp+0x30],rax
  415a2f:	mov    eax,DWORD PTR [rbp+0xc4]
  415a35:	movsd  QWORD PTR [rsp+0x28],xmm0
  415a3b:	mov    r9d,DWORD PTR [rbp+0xc0]
  415a42:	mov    r8,QWORD PTR [rbp+0x90]
  415a49:	mov    rdx,rbx
  415a4c:	mov    rcx,r12
  415a4f:	mov    DWORD PTR [rsp+0x20],eax
  415a53:	call   0x414d90
  415a58:	jmp    0x4157f0
  415a5d:	nop    DWORD PTR [rax]
  415a60:	mov    rax,QWORD PTR [r13+0x50]
  415a64:	shl    rax,0x5
  415a68:	add    rax,QWORD PTR [rbp+0x118]
  415a6f:	fld    TBYTE PTR [rax+0x10]
  415a72:	mov    eax,DWORD PTR [rbp+0x78]
  415a75:	cmp    eax,0x1
  415a78:	fstp   TBYTE PTR [rbp+0xa0]
  415a7e:	je     0x416320
  415a84:	cmp    eax,0x2
  415a87:	mov    rax,QWORD PTR [rbp+0x98]
  415a8e:	lea    r12,[rax+r14*1]
  415a92:	mov    rax,QWORD PTR [rbp+0x70]
  415a96:	jne    0x415ee4
  415a9c:	mov    QWORD PTR [rsp+0x30],rax
  415aa1:	mov    rax,QWORD PTR [rbp+0x40]
  415aa5:	mov    QWORD PTR [rsp+0x28],rax
  415aaa:	jmp    0x415921
  415aaf:	nop
  415ab0:	mov    rax,QWORD PTR [r13+0x50]
  415ab4:	shl    rax,0x5
  415ab8:	add    rax,QWORD PTR [rbp+0x118]
  415abf:	movsx  r9d,WORD PTR [rax+0x10]
  415ac4:	mov    eax,DWORD PTR [rbp+0x78]
  415ac7:	cmp    eax,0x1
  415aca:	jne    0x4157a1
  415ad0:	jmp    0x415990
  415ad5:	mov    rax,QWORD PTR [r13+0x50]
  415ad9:	shl    rax,0x5
  415add:	add    rax,QWORD PTR [rbp+0x118]
  415ae4:	movzx  r9d,BYTE PTR [rax+0x10]
  415ae9:	mov    eax,DWORD PTR [rbp+0x78]
  415aec:	cmp    eax,0x1
  415aef:	jne    0x4157a1
  415af5:	jmp    0x415990
  415afa:	nop    WORD PTR [rax+rax*1+0x0]
  415b00:	call   0x421eb8
  415b05:	mov    r8,QWORD PTR [rbp+0x90]
  415b0c:	mov    QWORD PTR [rsp+0x20],rax
  415b11:	mov    rdx,rbx
  415b14:	mov    rcx,r12
  415b17:	call   0x414d90
  415b1c:	jmp    0x4157f0
  415b21:	mov    esi,0xc
  415b26:	jmp    0x415877
  415b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b30:	mov    rcx,rsi
  415b33:	call   0x4145c0
  415b38:	mov    r9,rax
  415b3b:	jmp    0x4158bc
  415b40:	mov    rcx,r12
  415b43:	call   0x4145c0
  415b48:	movzx  r8d,BYTE PTR [rbp+0x68]
  415b4d:	mov    QWORD PTR [rbp+0x98],rax
  415b54:	jmp    0x415460
  415b59:	nop    DWORD PTR [rax+0x0]
  415b60:	mov    QWORD PTR [rbp+0x98],rbx
  415b67:	jmp    0x41548a
  415b6c:	nop    DWORD PTR [rax+0x0]
  415b70:	mov    DWORD PTR [rbp+0x78],edx
  415b73:	jmp    0x4151f0
  415b78:	nop    DWORD PTR [rax+rax*1+0x0]
  415b80:	xor    edx,edx
  415b82:	jmp    0x4151be
  415b87:	nop    WORD PTR [rax+rax*1+0x0]
  415b90:	test   eax,eax
  415b92:	jns    0x415816
  415b98:	movzx  eax,BYTE PTR [r13+0x48]
  415b9d:	mov    rcx,QWORD PTR [r13+0x50]
  415ba1:	sub    eax,0x41
  415ba4:	cmp    al,0x37
  415ba6:	ja     0x415b00
  415bac:	lea    rdx,[rip+0x16969]        # 0x42c51c
  415bb3:	movzx  eax,al
  415bb6:	movsxd rax,DWORD PTR [rdx+rax*4]
  415bba:	add    rdx,rax
  415bbd:	jmp    rdx
  415bbf:	nop
  415bc0:	cmp    rcx,0xffffffffffffffff
  415bc4:	je     0x415280
  415bca:	call   0x4145c0
  415bcf:	test   rax,rax
  415bd2:	mov    QWORD PTR [rbp+0x90],rax
  415bd9:	je     0x415280
  415bdf:	cmp    QWORD PTR [rbp+0x4e0],0x0
  415be7:	mov    rax,QWORD PTR [rbp+0x90]
  415bee:	mov    QWORD PTR [rbp+0x50],rax
  415bf2:	jne    0x414e94
  415bf8:	xor    r12d,r12d
  415bfb:	jmp    0x414e9e
  415c00:	mov    r8,QWORD PTR [rbp+0x90]
  415c07:	mov    QWORD PTR [rsp+0x20],rax
  415c0c:	mov    rdx,rbx
  415c0f:	mov    rcx,r12
  415c12:	call   0x414d90
  415c17:	jmp    0x4157f0
  415c1c:	mov    r8,QWORD PTR [r13+0x30]
  415c20:	mov    r11,QWORD PTR [r13+0x38]
  415c24:	mov    QWORD PTR [rbp+0x68],0x0
  415c2c:	mov    DWORD PTR [rbp+0x88],0x0
  415c36:	cmp    r8,r11
  415c39:	jne    0x41563b
  415c3f:	mov    rsi,QWORD PTR [rax+0x10]
  415c43:	mov    rcx,rsi
  415c46:	xor    edi,edi
  415c48:	xor    r15d,r15d
  415c4b:	call   0x421d38
  415c50:	lea    rax,[rsi+rax*2]
  415c54:	mov    QWORD PTR [rbp+0x98],rax
  415c5b:	xor    r9d,r9d
  415c5e:	mov    QWORD PTR [rbp+0x30],0x0
  415c66:	mov    rcx,QWORD PTR [rbp+0x68]
  415c6a:	cmp    QWORD PTR [rbp+0x30],rcx
  415c6e:	jae    0x416131
  415c74:	test   BYTE PTR [r13+0x10],0x2
  415c79:	jne    0x416131
  415c7f:	mov    r11,QWORD PTR [rbp+0x68]
  415c83:	sub    r11,QWORD PTR [rbp+0x30]
  415c87:	mov    rax,r11
  415c8a:	add    rax,r14
  415c8d:	mov    rcx,rax
  415c90:	mov    QWORD PTR [rbp+0x88],rax
  415c97:	mov    rax,0xffffffffffffffff
  415c9e:	cmovae rax,rcx
  415ca2:	cmp    r12,rax
  415ca5:	jae    0x416a67
  415cab:	test   r12,r12
  415cae:	je     0x416a32
  415cb4:	js     0x415ce0
  415cb6:	add    r12,r12
  415cb9:	cmp    r14,rcx
  415cbc:	ja     0x415ce0
  415cbe:	cmp    r12,QWORD PTR [rbp+0x88]
  415cc5:	jae    0x41608e
  415ccb:	mov    rax,QWORD PTR [rbp+0x88]
  415cd2:	mov    r12,rax
  415cd5:	add    rax,0x1
  415cd9:	jne    0x41608e
  415cdf:	nop
  415ce0:	mov    QWORD PTR [rbp+0x98],rbx
  415ce7:	nop    WORD PTR [rax+rax*1+0x0]
  415cf0:	mov    rax,QWORD PTR [rip+0x232d5]        # 0x438fcc
  415cf7:	mov    QWORD PTR [rbp+0x68],rax
  415cfb:	jmp    0x415250
  415d00:	xor    r15d,r15d
  415d03:	movabs r11,0x1999999999999999
  415d0d:	nop    DWORD PTR [rax]
  415d10:	add    rcx,0x1
  415d14:	movsx  eax,BYTE PTR [rcx-0x1]
  415d18:	mov    rdx,0xffffffffffffffff
  415d1f:	sub    eax,0x30
  415d22:	cmp    r15,r11
  415d25:	cdqe   
  415d27:	ja     0x415d30
  415d29:	lea    rdx,[r15+r15*4]
  415d2d:	add    rdx,rdx
  415d30:	add    rdx,rax
  415d33:	mov    rax,0xffffffffffffffff
  415d3a:	mov    r15,rdx
  415d3d:	cmovb  r15,rax
  415d41:	cmp    rcx,r9
  415d44:	jne    0x415d10
  415d46:	jmp    0x41504d
  415d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d50:	add    rdx,0x1
  415d54:	xor    esi,esi
  415d56:	cmp    rcx,rdx
  415d59:	je     0x415089
  415d5f:	movabs r9,0x1999999999999999
  415d69:	nop    DWORD PTR [rax+0x0]
  415d70:	add    rdx,0x1
  415d74:	movsx  eax,BYTE PTR [rdx-0x1]
  415d78:	mov    r10,0xffffffffffffffff
  415d7f:	sub    eax,0x30
  415d82:	cmp    rsi,r9
  415d85:	cdqe   
  415d87:	ja     0x415d90
  415d89:	lea    r10,[rsi+rsi*4]
  415d8d:	add    r10,r10
  415d90:	mov    rsi,r10
  415d93:	add    rsi,rax
  415d96:	mov    rax,0xffffffffffffffff
  415d9d:	cmovb  rsi,rax
  415da1:	cmp    rdx,rcx
  415da4:	jne    0x415d70
  415da6:	jmp    0x415089
  415dab:	nop    DWORD PTR [rax+rax*1+0x0]
  415db0:	mov    rdx,QWORD PTR [rbp+0x98]
  415db7:	mov    r8,r14
  415dba:	mov    rcx,r9
  415dbd:	call   0x421e08
  415dc2:	mov    QWORD PTR [rbp+0x98],rax
  415dc9:	jmp    0x41555c
  415dce:	xchg   ax,ax
  415dd0:	mov    rax,QWORD PTR [rbp+0x98]
  415dd7:	mov    QWORD PTR [rsp+0x20],r9
  415ddc:	lea    r12,[rax+r14*1]
  415de0:	mov    rax,QWORD PTR [rbp+0x70]
  415de4:	mov    QWORD PTR [rsp+0x28],rax
  415de9:	mov    r9d,DWORD PTR [rbp+0xc0]
  415df0:	mov    r8,QWORD PTR [rbp+0x90]
  415df7:	mov    rdx,rbx
  415dfa:	mov    rcx,r12
  415dfd:	call   0x414d90
  415e02:	jmp    0x4157f0
  415e07:	nop    WORD PTR [rax+rax*1+0x0]
  415e10:	or     r8d,0x2
  415e14:	neg    r15
  415e17:	jmp    0x41504d
  415e1c:	nop    DWORD PTR [rax+0x0]
  415e20:	xor    r15d,r15d
  415e23:	jmp    0x41504d
  415e28:	nop    DWORD PTR [rax+rax*1+0x0]
  415e30:	mov    r12d,0xc
  415e36:	jmp    0x415344
  415e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  415e40:	mov    rcx,r12
  415e43:	call   0x4145c0
  415e48:	mov    r9,rax
  415e4b:	jmp    0x415380
  415e50:	xor    eax,eax
  415e52:	jmp    0x4152cb
  415e57:	nop    WORD PTR [rax+rax*1+0x0]
  415e60:	mov    BYTE PTR [rdi],0x4c
  415e63:	add    rdi,0x1
  415e67:	jmp    0x415183
  415e6c:	nop    DWORD PTR [rax+0x0]
  415e70:	mov    rdx,rbx
  415e73:	mov    r8,r14
  415e76:	mov    rcx,r9
  415e79:	call   0x421e08
  415e7e:	mov    rbx,rax
  415e81:	jmp    0x41539a
  415e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e90:	mov    QWORD PTR [rax],r14
  415e93:	mov    r15,r14
  415e96:	mov    QWORD PTR [rbp+0x98],rbx
  415e9d:	jmp    0x4153a6
  415ea2:	mov    WORD PTR [rax],r14w
  415ea6:	mov    r15,r14
  415ea9:	mov    QWORD PTR [rbp+0x98],rbx
  415eb0:	jmp    0x4153a6
  415eb5:	mov    BYTE PTR [rax],r14b
  415eb8:	mov    r15,r14
  415ebb:	mov    QWORD PTR [rbp+0x98],rbx
  415ec2:	jmp    0x4153a6
  415ec7:	nop    WORD PTR [rax+rax*1+0x0]
  415ed0:	mov    BYTE PTR [rdi],0x49
  415ed3:	mov    BYTE PTR [rdi+0x1],0x36
  415ed7:	add    rdi,0x3
  415edb:	mov    BYTE PTR [rdi-0x1],0x34
  415edf:	jmp    0x415183
  415ee4:	mov    r9,QWORD PTR [rbp+0x40]
  415ee8:	mov    r8,QWORD PTR [rbp+0x90]
  415eef:	mov    rdx,rbx
  415ef2:	mov    QWORD PTR [rsp+0x20],rax
  415ef7:	mov    rcx,r12
  415efa:	call   0x414d90
  415eff:	jmp    0x4157f0
  415f04:	mov    r8,QWORD PTR [rbp+0x90]
  415f0b:	movapd xmm3,xmm0
  415f0f:	movq   r9,xmm0
  415f14:	mov    QWORD PTR [rsp+0x20],rax
  415f19:	mov    rdx,rbx
  415f1c:	mov    rcx,r12
  415f1f:	call   0x414d90
  415f24:	jmp    0x4157f0
  415f29:	nop    DWORD PTR [rax+0x0]
  415f30:	mov    rcx,rax
  415f33:	call   0x421e50
  415f38:	jmp    0x415269
  415f3d:	cmp    DWORD PTR [rbp+0x88],0x10
  415f44:	je     0x415b00
  415f4a:	mov    rax,rcx
  415f4d:	mov    edx,DWORD PTR [rbp+0x28]
  415f50:	shl    rax,0x5
  415f54:	add    rax,QWORD PTR [rbp+0x118]
  415f5b:	test   edx,edx
  415f5d:	mov    rcx,QWORD PTR [rax+0x10]
  415f61:	jne    0x416b0e
  415f67:	call   0x421d98
  415f6c:	cmp    r15,rax
  415f6f:	jbe    0x416a77
  415f75:	lea    rdx,[r15+0x1]
  415f79:	mov    rax,r15
  415f7c:	cmp    rdx,rax
  415f7f:	jae    0x416917
  415f85:	mov    rdx,0xffffffffffffffff
  415f8c:	add    rdx,r14
  415f8f:	mov    rax,0xffffffffffffffff
  415f96:	cmovb  rdx,rax
  415f9a:	test   rsi,rsi
  415f9d:	js     0x416a6f
  415fa3:	lea    r8,[rsi+rsi*1]
  415fa7:	lea    rcx,[r8+0xc]
  415fab:	cmp    r8,rcx
  415fae:	ja     0x415865
  415fb4:	cmp    rdx,rcx
  415fb7:	cmovb  rdx,rcx
  415fbb:	cmp    rsi,rdx
  415fbe:	mov    rax,rdx
  415fc1:	jae    0x41555c
  415fc7:	jmp    0x415865
  415fcc:	mov    eax,0x13
  415fd1:	jmp    0x415f6c
  415fd3:	mov    rcx,QWORD PTR [rbp+0x10]
  415fd7:	cmp    QWORD PTR [rbp-0x18],rcx
  415fdb:	ja     0x41606d
  415fe1:	mov    rax,QWORD PTR [rbp+0x10]
  415fe5:	jmp    0x415f6c
  415fe7:	xor    edx,edx
  415fe9:	mov    r11,QWORD PTR [rbp-0x38]
  415fed:	cmp    QWORD PTR [rbp+0x20],r11
  415ff1:	mov    rax,0xffffffffffffffff
  415ff8:	jb     0x415f7c
  415ffa:	mov    r11,QWORD PTR [rbp+0x18]
  415ffe:	cmp    QWORD PTR [rbp+0x20],r11
  416002:	ja     0x415f7c
  416008:	mov    rax,QWORD PTR [rbp+0x18]
  41600c:	jmp    0x415f6c
  416011:	cmp    DWORD PTR [rbp+0x88],0xe
  416018:	mov    eax,0x1
  41601d:	jne    0x415f6c
  416023:	mov    rax,QWORD PTR [rip+0x17466]        # 0x42d490
  41602a:	mov    rax,QWORD PTR [rax]
  41602d:	movsxd rax,DWORD PTR [rax]
  416030:	jmp    0x415f6c
  416035:	mov    rcx,QWORD PTR [rbp+0x8]
  416039:	cmp    QWORD PTR [rbp-0x20],rcx
  41603d:	ja     0x41606d
  41603f:	mov    rax,QWORD PTR [rbp+0x8]
  416043:	jmp    0x415f6c
  416048:	mov    rcx,QWORD PTR [rbp+0x0]
  41604c:	cmp    QWORD PTR [rbp-0x28],rcx
  416050:	ja     0x41606d
  416052:	mov    rax,QWORD PTR [rbp+0x0]
  416056:	jmp    0x415f6c
  41605b:	mov    rax,QWORD PTR [rbp-0x10]
  41605f:	add    rax,0xc
  416063:	cmp    rax,0xb
  416067:	ja     0x415f6c
  41606d:	xor    edx,edx
  41606f:	mov    rax,0xffffffffffffffff
  416076:	jmp    0x415f7c
  41607b:	mov    rcx,QWORD PTR [rbp-0x30]
  41607f:	cmp    QWORD PTR [rbp-0x8],rcx
  416083:	jb     0x41606d
  416085:	mov    rax,QWORD PTR [rbp-0x8]
  416089:	jmp    0x415f6c
  41608e:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  416095:	mov    DWORD PTR [rbp+0x20],r9d
  416099:	mov    QWORD PTR [rbp+0x78],r11
  41609d:	sete   r8b
  4160a1:	test   rbx,rbx
  4160a4:	mov    BYTE PTR [rbp+0x28],r8b
  4160a8:	je     0x416a4a
  4160ae:	test   r8b,r8b
  4160b1:	jne    0x416a4a
  4160b7:	mov    rdx,r12
  4160ba:	mov    rcx,rbx
  4160bd:	call   0x414ca0
  4160c2:	movzx  r8d,BYTE PTR [rbp+0x28]
  4160c7:	mov    r9d,DWORD PTR [rbp+0x20]
  4160cb:	mov    r10,rax
  4160ce:	mov    r11,QWORD PTR [rbp+0x78]
  4160d2:	test   r10,r10
  4160d5:	je     0x415ce0
  4160db:	test   r14,r14
  4160de:	je     0x416106
  4160e0:	test   r8b,r8b
  4160e3:	je     0x416106
  4160e5:	mov    rcx,r10
  4160e8:	mov    r8,r14
  4160eb:	mov    rdx,rbx
  4160ee:	mov    DWORD PTR [rbp+0x28],r9d
  4160f2:	mov    QWORD PTR [rbp+0x78],r11
  4160f6:	call   0x421e08
  4160fb:	mov    r11,QWORD PTR [rbp+0x78]
  4160ff:	mov    r9d,DWORD PTR [rbp+0x28]
  416103:	mov    r10,rax
  416106:	lea    rcx,[r10+r14*1]
  41610a:	mov    r8,r11
  41610d:	mov    edx,0x20
  416112:	mov    DWORD PTR [rbp+0x28],r9d
  416116:	mov    QWORD PTR [rbp+0x78],r10
  41611a:	call   0x421df8
  41611f:	mov    r10,QWORD PTR [rbp+0x78]
  416123:	mov    r14,QWORD PTR [rbp+0x88]
  41612a:	mov    r9d,DWORD PTR [rbp+0x28]
  41612e:	mov    rbx,r10
  416131:	or     r9d,r15d
  416134:	je     0x416430
  41613a:	mov    rdx,rdi
  41613d:	mov    rax,0xffffffffffffffff
  416144:	mov    DWORD PTR [rbp+0xb4],0x0
  41614e:	add    rdx,r14
  416151:	cmovae rax,rdx
  416155:	cmp    rax,r12
  416158:	jbe    0x416635
  41615e:	test   r12,r12
  416161:	je     0x4165cf
  416167:	js     0x416175
  416169:	add    r12,r12
  41616c:	cmp    rdx,r14
  41616f:	jae    0x4165de
  416175:	mov    rax,QWORD PTR [rip+0x22e50]        # 0x438fcc
  41617c:	mov    QWORD PTR [rbp+0x98],rbx
  416183:	mov    QWORD PTR [rbp+0x68],rax
  416187:	jmp    0x415250
  41618c:	nop    DWORD PTR [rax+0x0]
  416190:	mov    rax,QWORD PTR [rbp+0x60]
  416194:	mov    rcx,QWORD PTR [rbp+0x208]
  41619b:	add    rax,0x20
  41619f:	cmp    rcx,rax
  4161a2:	je     0x4161a9
  4161a4:	call   0x421e50
  4161a9:	mov    rax,QWORD PTR [rbp+0x58]
  4161ad:	mov    rcx,QWORD PTR [rbp+0x118]
  4161b4:	add    rax,0x10
  4161b8:	cmp    rcx,rax
  4161bb:	je     0x4161c2
  4161bd:	call   0x421e50
  4161c2:	call   QWORD PTR [rip+0x22e04]        # 0x438fcc
  4161c8:	mov    DWORD PTR [rax],0x16
  4161ce:	xor    eax,eax
  4161d0:	jmp    0x4152cb
  4161d5:	mov    rax,rbx
  4161d8:	lea    rsi,[r14+0x1]
  4161dc:	mov    r15,rbx
  4161df:	mov    QWORD PTR [rbp+0x98],rax
  4161e6:	mov    rax,0xffffffffffffffff
  4161ed:	mov    rbx,r12
  4161f0:	cmp    rsi,r14
  4161f3:	mov    rdx,rax
  4161f6:	cmovae rdx,rsi
  4161fa:	cmp    rdx,r12
  4161fd:	jbe    0x416288
  416203:	test   r12,r12
  416206:	je     0x4168fa
  41620c:	js     0x416ac6
  416212:	add    rbx,rbx
  416215:	cmp    rsi,r14
  416218:	mov    rax,rsi
  41621b:	jae    0x416224
  41621d:	mov    rax,0xffffffffffffffff
  416224:	cmp    rax,rbx
  416227:	jbe    0x416235
  416229:	cmp    rsi,r14
  41622c:	jb     0x415cf0
  416232:	mov    rbx,rsi
  416235:	cmp    rbx,0xffffffffffffffff
  416239:	je     0x415cf0
  41623f:	cmp    QWORD PTR [rbp+0x4e0],r15
  416246:	sete   dil
  41624a:	test   r15,r15
  41624d:	je     0x4169be
  416253:	test   dil,dil
  416256:	jne    0x4169be
  41625c:	mov    rdx,rbx
  41625f:	mov    rcx,r15
  416262:	call   0x414ca0
  416267:	mov    r9,rax
  41626a:	test   r9,r9
  41626d:	je     0x415cf0
  416273:	test   r14,r14
  416276:	je     0x416281
  416278:	test   dil,dil
  41627b:	jne    0x416a18
  416281:	mov    QWORD PTR [rbp+0x98],r9
  416288:	mov    rax,QWORD PTR [rbp+0x98]
  41628f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416296:	mov    BYTE PTR [rax+r14*1],0x0
  41629b:	je     0x4162be
  41629d:	cmp    rbx,rsi
  4162a0:	jbe    0x4162be
  4162a2:	mov    rdx,rsi
  4162a5:	mov    rcx,rax
  4162a8:	mov    rdi,rax
  4162ab:	call   0x414ca0
  4162b0:	test   rax,rax
  4162b3:	cmove  rax,rdi
  4162b7:	mov    QWORD PTR [rbp+0x98],rax
  4162be:	mov    rax,QWORD PTR [rbp+0x50]
  4162c2:	test   rax,rax
  4162c5:	je     0x4162cf
  4162c7:	mov    rcx,rax
  4162ca:	call   0x421e50
  4162cf:	mov    rax,QWORD PTR [rbp+0x60]
  4162d3:	mov    rcx,QWORD PTR [rbp+0x208]
  4162da:	add    rax,0x20
  4162de:	cmp    rcx,rax
  4162e1:	je     0x4162e8
  4162e3:	call   0x421e50
  4162e8:	mov    rax,QWORD PTR [rbp+0x58]
  4162ec:	mov    rcx,QWORD PTR [rbp+0x118]
  4162f3:	add    rax,0x10
  4162f7:	cmp    rcx,rax
  4162fa:	je     0x416301
  4162fc:	call   0x421e50
  416301:	mov    rax,QWORD PTR [rbp+0x4e8]
  416308:	mov    QWORD PTR [rax],r14
  41630b:	mov    rax,QWORD PTR [rbp+0x98]
  416312:	jmp    0x4152cb
  416317:	nop    WORD PTR [rax+rax*1+0x0]
  416320:	mov    rax,QWORD PTR [rbp+0x98]
  416327:	lea    r12,[rax+r14*1]
  41632b:	mov    rax,QWORD PTR [rbp+0x70]
  41632f:	mov    QWORD PTR [rsp+0x28],rax
  416334:	mov    rax,QWORD PTR [rbp+0x40]
  416338:	mov    QWORD PTR [rsp+0x20],rax
  41633d:	jmp    0x415de9
  416342:	mov    rax,QWORD PTR [rbp+0x98]
  416349:	mov    r9d,DWORD PTR [rbp+0xc0]
  416350:	movsd  QWORD PTR [rsp+0x20],xmm0
  416356:	mov    r8,QWORD PTR [rbp+0x90]
  41635d:	mov    rdx,rbx
  416360:	lea    r12,[rax+r14*1]
  416364:	mov    rax,QWORD PTR [rbp+0x70]
  416368:	mov    rcx,r12
  41636b:	mov    QWORD PTR [rsp+0x28],rax
  416370:	call   0x414d90
  416375:	jmp    0x4157f0
  41637a:	nop    WORD PTR [rax+rax*1+0x0]
  416380:	lea    r15,[rdx+r14*1]
  416384:	mov    r12,rsi
  416387:	call   QWORD PTR [rip+0x22c3f]        # 0x438fcc
  41638d:	mov    edi,DWORD PTR [rbp+0x30]
  416390:	mov    DWORD PTR [rax],edi
  416392:	jmp    0x4153a6
  416397:	nop    WORD PTR [rax+rax*1+0x0]
  4163a0:	mov    rax,QWORD PTR [rbp+0x98]
  4163a7:	test   rax,rax
  4163aa:	je     0x4163c1
  4163ac:	cmp    QWORD PTR [rbp+0x4e0],rax
  4163b3:	je     0x4163c1
  4163b5:	mov    rcx,QWORD PTR [rbp+0x98]
  4163bc:	call   0x421e50
  4163c1:	mov    rax,QWORD PTR [rbp+0x50]
  4163c5:	test   rax,rax
  4163c8:	je     0x4163d2
  4163ca:	mov    rcx,rax
  4163cd:	call   0x421e50
  4163d2:	mov    rax,QWORD PTR [rbp+0x60]
  4163d6:	mov    rcx,QWORD PTR [rbp+0x208]
  4163dd:	add    rax,0x20
  4163e1:	cmp    rcx,rax
  4163e4:	je     0x4163eb
  4163e6:	call   0x421e50
  4163eb:	mov    rax,QWORD PTR [rbp+0x58]
  4163ef:	mov    rcx,QWORD PTR [rbp+0x118]
  4163f6:	add    rax,0x10
  4163fa:	cmp    rcx,rax
  4163fd:	je     0x416404
  4163ff:	call   0x421e50
  416404:	call   QWORD PTR [rip+0x22bc2]        # 0x438fcc
  41640a:	mov    DWORD PTR [rax],0x84
  416410:	xor    eax,eax
  416412:	jmp    0x4152cb
  416417:	nop    WORD PTR [rax+rax*1+0x0]
  416420:	mov    rax,QWORD PTR [rbp+0x98]
  416427:	mov    r15,rax
  41642a:	jmp    0x41523f
  41642f:	nop
  416430:	cmp    rsi,QWORD PTR [rbp+0x98]
  416437:	mov    DWORD PTR [rbp+0xb8],0x0
  416441:	jae    0x416b24
  416447:	movzx  edx,WORD PTR [rsi]
  41644a:	test   dx,dx
  41644d:	je     0x415b00
  416453:	lea    rax,[rbp+0xb8]
  41645a:	mov    rdi,QWORD PTR [rbp+0x48]
  41645e:	mov    QWORD PTR [rbp+0x28],r13
  416462:	mov    QWORD PTR [rbp+0x88],rax
  416469:	nop    DWORD PTR [rax+0x0]
  416470:	mov    r8,QWORD PTR [rbp+0x88]
  416477:	mov    rcx,rdi
  41647a:	call   0x41d120
  41647f:	test   eax,eax
  416481:	jle    0x4169ce
  416487:	movsxd r13,eax
  41648a:	mov    rax,0xffffffffffffffff
  416491:	mov    r15,r13
  416494:	add    r15,r14
  416497:	cmovae rax,r15
  41649b:	cmp    rax,r12
  41649e:	jbe    0x41652e
  4164a4:	test   r12,r12
  4164a7:	je     0x4164d0
  4164a9:	js     0x4164b3
  4164ab:	add    r12,r12
  4164ae:	cmp    r15,r14
  4164b1:	jae    0x4164db
  4164b3:	mov    rax,QWORD PTR [rip+0x22b12]        # 0x438fcc
  4164ba:	mov    QWORD PTR [rbp+0x98],rbx
  4164c1:	mov    QWORD PTR [rbp+0x68],rax
  4164c5:	jmp    0x415250
  4164ca:	nop    WORD PTR [rax+rax*1+0x0]
  4164d0:	cmp    r15,r14
  4164d3:	jb     0x4164b3
  4164d5:	mov    r12d,0xc
  4164db:	cmp    r12,r15
  4164de:	jae    0x4164f0
  4164e0:	cmp    r15,0xffffffffffffffff
  4164e4:	mov    r12,r15
  4164e7:	je     0x4164b3
  4164e9:	nop    DWORD PTR [rax+0x0]
  4164f0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4164f7:	sete   r8b
  4164fb:	test   rbx,rbx
  4164fe:	mov    BYTE PTR [rbp+0x78],r8b
  416502:	je     0x416562
  416504:	test   r8b,r8b
  416507:	jne    0x416562
  416509:	mov    rdx,r12
  41650c:	mov    rcx,rbx
  41650f:	call   0x414ca0
  416514:	movzx  r8d,BYTE PTR [rbp+0x78]
  416519:	mov    r10,rax
  41651c:	test   r10,r10
  41651f:	je     0x4164b3
  416521:	test   r14,r14
  416524:	je     0x41652b
  416526:	test   r8b,r8b
  416529:	jne    0x416574
  41652b:	mov    rbx,r10
  41652e:	lea    rcx,[rbx+r14*1]
  416532:	mov    r8,r13
  416535:	mov    rdx,rdi
  416538:	add    rsi,0x2
  41653c:	call   0x421e08
  416541:	cmp    rsi,QWORD PTR [rbp+0x98]
  416548:	jae    0x4169f8
  41654e:	movzx  edx,WORD PTR [rsi]
  416551:	test   dx,dx
  416554:	je     0x415b00
  41655a:	mov    r14,r15
  41655d:	jmp    0x416470
  416562:	mov    rcx,r12
  416565:	call   0x4145c0
  41656a:	movzx  r8d,BYTE PTR [rbp+0x78]
  41656f:	mov    r10,rax
  416572:	jmp    0x41651c
  416574:	mov    rdx,rbx
  416577:	mov    r8,r14
  41657a:	mov    rcx,r10
  41657d:	call   0x421e08
  416582:	mov    rbx,rax
  416585:	jmp    0x41652e
  416587:	nop    WORD PTR [rax+rax*1+0x0]
  416590:	mov    r13,QWORD PTR [rbp+0x98]
  416597:	mov    rsi,QWORD PTR [rbp+0x30]
  41659b:	mov    QWORD PTR [rbp+0x98],r12
  4165a2:	mov    r12,QWORD PTR [rbp+0x78]
  4165a6:	mov    ecx,DWORD PTR [rbp+0x88]
  4165ac:	mov    r15d,0x1
  4165b2:	test   ecx,ecx
  4165b4:	je     0x415c5b
  4165ba:	mov    QWORD PTR [rbp+0x30],rdi
  4165be:	mov    r9d,0x1
  4165c4:	mov    r15d,0x1
  4165ca:	jmp    0x415c66
  4165cf:	cmp    rdx,r14
  4165d2:	jb     0x416175
  4165d8:	mov    r12d,0xc
  4165de:	cmp    r12,rdx
  4165e1:	jae    0x4165f0
  4165e3:	cmp    rdx,0xffffffffffffffff
  4165e7:	je     0x416175
  4165ed:	mov    r12,rdx
  4165f0:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4165f7:	sete   r15b
  4165fb:	test   rbx,rbx
  4165fe:	je     0x416a08
  416604:	test   r15b,r15b
  416607:	jne    0x416a08
  41660d:	mov    rdx,r12
  416610:	mov    rcx,rbx
  416613:	call   0x414ca0
  416618:	mov    r9,rax
  41661b:	test   r9,r9
  41661e:	je     0x416175
  416624:	test   r14,r14
  416627:	je     0x416632
  416629:	test   r15b,r15b
  41662c:	jne    0x416a80
  416632:	mov    rbx,r9
  416635:	test   rdi,rdi
  416638:	je     0x416b1c
  41663e:	movzx  edx,WORD PTR [rsi]
  416641:	test   dx,dx
  416644:	je     0x415b00
  41664a:	mov    r15,r14
  41664d:	mov    QWORD PTR [rbp+0x88],r13
  416654:	mov    QWORD PTR [rbp+0x78],r12
  416658:	mov    r13,QWORD PTR [rbp+0x48]
  41665c:	mov    r14,QWORD PTR [rbp+0x38]
  416660:	jmp    0x41666e
  416662:	movzx  edx,WORD PTR [rsi]
  416665:	test   dx,dx
  416668:	je     0x415b00
  41666e:	mov    r8,r14
  416671:	mov    rcx,r13
  416674:	call   0x41d120
  416679:	test   eax,eax
  41667b:	jle    0x415b00
  416681:	movsxd r12,eax
  416684:	lea    rcx,[rbx+r15*1]
  416688:	mov    rdx,r13
  41668b:	mov    r8,r12
  41668e:	add    r15,r12
  416691:	add    rsi,0x2
  416695:	call   0x421e08
  41669a:	sub    rdi,r12
  41669d:	jne    0x416662
  41669f:	mov    r13,QWORD PTR [rbp+0x88]
  4166a6:	mov    r12,QWORD PTR [rbp+0x78]
  4166aa:	cmp    rsi,QWORD PTR [rbp+0x98]
  4166b1:	jne    0x415b00
  4166b7:	mov    QWORD PTR [rbp+0x98],rbx
  4166be:	mov    rdi,QWORD PTR [rbp+0x68]
  4166c2:	cmp    QWORD PTR [rbp+0x30],rdi
  4166c6:	jae    0x4153a6
  4166cc:	test   BYTE PTR [r13+0x10],0x2
  4166d1:	je     0x4153a6
  4166d7:	sub    rdi,QWORD PTR [rbp+0x30]
  4166db:	mov    rax,0xffffffffffffffff
  4166e2:	mov    rbx,rdi
  4166e5:	add    rbx,r15
  4166e8:	cmovae rax,rbx
  4166ec:	cmp    r12,rax
  4166ef:	jae    0x416aba
  4166f5:	test   r12,r12
  4166f8:	je     0x416a96
  4166fe:	js     0x415cf0
  416704:	add    r12,r12
  416707:	cmp    r15,rbx
  41670a:	ja     0x415cf0
  416710:	cmp    r12,rbx
  416713:	jae    0x416722
  416715:	cmp    rbx,0xffffffffffffffff
  416719:	mov    r12,rbx
  41671c:	je     0x415cf0
  416722:	mov    rax,QWORD PTR [rbp+0x98]
  416729:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416730:	sete   sil
  416734:	test   rax,rax
  416737:	je     0x416aaa
  41673d:	test   sil,sil
  416740:	jne    0x416aaa
  416746:	mov    rcx,QWORD PTR [rbp+0x98]
  41674d:	mov    rdx,r12
  416750:	call   0x414ca0
  416755:	mov    r14,rax
  416758:	test   r14,r14
  41675b:	je     0x415cf0
  416761:	test   r15,r15
  416764:	je     0x41677d
  416766:	test   sil,sil
  416769:	je     0x41677d
  41676b:	mov    rdx,QWORD PTR [rbp+0x98]
  416772:	mov    r8,r15
  416775:	mov    rcx,r14
  416778:	call   0x421e08
  41677d:	lea    rcx,[r14+r15*1]
  416781:	mov    r8,rdi
  416784:	mov    edx,0x20
  416789:	mov    r15,rbx
  41678c:	call   0x421df8
  416791:	mov    QWORD PTR [rbp+0x98],r14
  416798:	jmp    0x4153a6
  41679d:	mov    rsi,QWORD PTR [rax+0x10]
  4167a1:	mov    eax,DWORD PTR [rbp+0x88]
  4167a7:	test   eax,eax
  4167a9:	je     0x415c43
  4167af:	movzx  edx,WORD PTR [rsi]
  4167b2:	mov    DWORD PTR [rbp+0xc0],0x0
  4167bc:	test   dx,dx
  4167bf:	je     0x416aec
  4167c5:	lea    rax,[rbp+0xc0]
  4167cc:	mov    QWORD PTR [rbp+0x98],r13
  4167d3:	xor    edi,edi
  4167d5:	mov    QWORD PTR [rbp+0x88],rsi
  4167dc:	mov    r15,QWORD PTR [rbp+0x48]
  4167e0:	mov    r13,rax
  4167e3:	jmp    0x4167fa
  4167e5:	add    rsi,0x2
  4167e9:	movzx  edx,WORD PTR [rsi]
  4167ec:	cdqe   
  4167ee:	add    rdi,rax
  4167f1:	test   dx,dx
  4167f4:	je     0x4168c1
  4167fa:	mov    r8,r13
  4167fd:	mov    rcx,r15
  416800:	call   0x41d120
  416805:	test   eax,eax
  416807:	jns    0x4167e5
  416809:	jmp    0x4156f8
  41680e:	add    r8,0x1
  416812:	cmp    r11,r8
  416815:	je     0x416ad7
  41681b:	xor    r15d,r15d
  41681e:	movabs r10,0x1999999999999999
  416828:	nop    DWORD PTR [rax+rax*1+0x0]
  416830:	add    r8,0x1
  416834:	movsx  edx,BYTE PTR [r8-0x1]
  416839:	mov    rcx,0xffffffffffffffff
  416840:	sub    edx,0x30
  416843:	cmp    r15,r10
  416846:	movsxd rdx,edx
  416849:	ja     0x416852
  41684b:	lea    rcx,[r15+r15*4]
  41684f:	add    rcx,rcx
  416852:	add    rcx,rdx
  416855:	mov    rdx,0xffffffffffffffff
  41685c:	mov    r15,rcx
  41685f:	cmovb  r15,rdx
  416863:	cmp    r8,r11
  416866:	jne    0x416830
  416868:	jmp    0x41566a
  41686d:	xor    esi,esi
  41686f:	movabs r11,0x1999999999999999
  416879:	nop    DWORD PTR [rax+0x0]
  416880:	add    r8,0x1
  416884:	movsx  edx,BYTE PTR [r8-0x1]
  416889:	mov    rcx,0xffffffffffffffff
  416890:	sub    edx,0x30
  416893:	cmp    rsi,r11
  416896:	movsxd rdx,edx
  416899:	ja     0x4168a2
  41689b:	lea    rcx,[rsi+rsi*4]
  41689f:	add    rcx,rcx
  4168a2:	mov    rsi,rcx
  4168a5:	add    rsi,rdx
  4168a8:	mov    rdx,0xffffffffffffffff
  4168af:	cmovb  rsi,rdx
  4168b3:	cmp    r8,r9
  4168b6:	jne    0x416880
  4168b8:	mov    QWORD PTR [rbp+0x68],rsi
  4168bc:	jmp    0x415620
  4168c1:	mov    r13,QWORD PTR [rbp+0x98]
  4168c8:	mov    QWORD PTR [rbp+0x98],rsi
  4168cf:	mov    rsi,QWORD PTR [rbp+0x88]
  4168d6:	mov    QWORD PTR [rbp+0x30],rdi
  4168da:	mov    rdi,QWORD PTR [rbp+0x68]
  4168de:	cmp    QWORD PTR [rbp+0x30],rdi
  4168e2:	mov    rdi,QWORD PTR [rbp+0x30]
  4168e6:	jae    0x41613a
  4168ec:	xor    r15d,r15d
  4168ef:	mov    r9d,0x1
  4168f5:	jmp    0x415c74
  4168fa:	cmp    rsi,r14
  4168fd:	jb     0x415cf0
  416903:	cmp    rsi,0xc
  416907:	mov    ebx,0xc
  41690c:	jbe    0x41623f
  416912:	jmp    0x416232
  416917:	cmp    rdx,rbx
  41691a:	ja     0x415f8c
  416920:	movsxd rdx,DWORD PTR [rbp+0xbc]
  416927:	test   edx,edx
  416929:	jns    0x41581f
  41692f:	call   QWORD PTR [rip+0x22697]        # 0x438fcc
  416935:	mov    ebx,DWORD PTR [rax]
  416937:	test   ebx,ebx
  416939:	jne    0x41694f
  41693b:	movzx  eax,BYTE PTR [r13+0x48]
  416940:	mov    bl,0x2a
  416942:	and    eax,0xffffffef
  416945:	cmp    al,0x63
  416947:	mov    eax,0x16
  41694c:	cmovne ebx,eax
  41694f:	mov    rax,QWORD PTR [rbp+0x98]
  416956:	test   rax,rax
  416959:	je     0x41696c
  41695b:	cmp    QWORD PTR [rbp+0x4e0],rax
  416962:	je     0x41696c
  416964:	mov    rcx,rax
  416967:	call   0x421e50
  41696c:	mov    rax,QWORD PTR [rbp+0x50]
  416970:	test   rax,rax
  416973:	je     0x41697d
  416975:	mov    rcx,rax
  416978:	call   0x421e50
  41697d:	mov    rax,QWORD PTR [rbp+0x60]
  416981:	mov    rcx,QWORD PTR [rbp+0x208]
  416988:	add    rax,0x20
  41698c:	cmp    rcx,rax
  41698f:	je     0x416996
  416991:	call   0x421e50
  416996:	mov    rax,QWORD PTR [rbp+0x58]
  41699a:	mov    rcx,QWORD PTR [rbp+0x118]
  4169a1:	add    rax,0x10
  4169a5:	cmp    rcx,rax
  4169a8:	je     0x4169af
  4169aa:	call   0x421e50
  4169af:	call   QWORD PTR [rip+0x22617]        # 0x438fcc
  4169b5:	mov    DWORD PTR [rax],ebx
  4169b7:	xor    eax,eax
  4169b9:	jmp    0x4152cb
  4169be:	mov    rcx,rbx
  4169c1:	call   0x4145c0
  4169c6:	mov    r9,rax
  4169c9:	jmp    0x41626a
  4169ce:	test   rbx,rbx
  4169d1:	mov    QWORD PTR [rbp+0x98],rbx
  4169d8:	je     0x41570e
  4169de:	cmp    QWORD PTR [rbp+0x4e0],rbx
  4169e5:	je     0x41570e
  4169eb:	mov    rcx,rbx
  4169ee:	call   0x421e50
  4169f3:	jmp    0x41570e
  4169f8:	mov    r13,QWORD PTR [rbp+0x28]
  4169fc:	mov    QWORD PTR [rbp+0x98],rbx
  416a03:	jmp    0x4166be
  416a08:	mov    rcx,r12
  416a0b:	call   0x4145c0
  416a10:	mov    r9,rax
  416a13:	jmp    0x41661b
  416a18:	mov    r8,r14
  416a1b:	mov    rdx,r15
  416a1e:	mov    rcx,r9
  416a21:	call   0x421e08
  416a26:	mov    QWORD PTR [rbp+0x98],rax
  416a2d:	jmp    0x416288
  416a32:	cmp    r14,QWORD PTR [rbp+0x88]
  416a39:	ja     0x415ce0
  416a3f:	mov    r12d,0xc
  416a45:	jmp    0x415cbe
  416a4a:	mov    rcx,r12
  416a4d:	call   0x4145c0
  416a52:	mov    r11,QWORD PTR [rbp+0x78]
  416a56:	mov    r10,rax
  416a59:	movzx  r8d,BYTE PTR [rbp+0x28]
  416a5e:	mov    r9d,DWORD PTR [rbp+0x20]
  416a62:	jmp    0x4160d2
  416a67:	mov    r10,rbx
  416a6a:	jmp    0x416106
  416a6f:	mov    rdx,rax
  416a72:	jmp    0x415fbb
  416a77:	lea    rdx,[rax+0x1]
  416a7b:	jmp    0x415f7c
  416a80:	mov    rdx,rbx
  416a83:	mov    r8,r14
  416a86:	mov    rcx,r9
  416a89:	call   0x421e08
  416a8e:	mov    rbx,rax
  416a91:	jmp    0x416635
  416a96:	cmp    r15,rbx
  416a99:	ja     0x415cf0
  416a9f:	mov    r12d,0xc
  416aa5:	jmp    0x416710
  416aaa:	mov    rcx,r12
  416aad:	call   0x4145c0
  416ab2:	mov    r14,rax
  416ab5:	jmp    0x416758
  416aba:	mov    r14,QWORD PTR [rbp+0x98]
  416ac1:	jmp    0x41677d
  416ac6:	cmp    rsi,r14
  416ac9:	jae    0x415cf0
  416acf:	mov    rbx,rax
  416ad2:	jmp    0x41621d
  416ad7:	mov    rax,QWORD PTR [rax+0x10]
  416adb:	xor    edi,edi
  416add:	mov    QWORD PTR [rbp+0x98],rax
  416ae4:	mov    rsi,rax
  416ae7:	jmp    0x4165a6
  416aec:	mov    QWORD PTR [rbp+0x98],rsi
  416af3:	mov    QWORD PTR [rbp+0x30],0x0
  416afb:	jmp    0x4168da
  416b00:	mov    QWORD PTR [rbp+0x98],rsi
  416b07:	xor    edi,edi
  416b09:	jmp    0x4165a6
  416b0e:	mov    rdx,QWORD PTR [rbp-0x10]
  416b12:	call   0x41ce60
  416b17:	jmp    0x415f6c
  416b1c:	mov    r15,r14
  416b1f:	jmp    0x4166aa
  416b24:	mov    r15,r14
  416b27:	jmp    0x4166b7
  416b2c:	mov    rsi,QWORD PTR [rax+0x10]
  416b30:	jmp    0x4167af
  416b35:	mov    r12,rax
  416b38:	jmp    0x415428
  416b3d:	nop
  416b3e:	nop
  416b3f:	nop
  416b40:	test   r8,r8
  416b43:	mov    r9d,edx
  416b46:	je     0x416b67
  416b48:	test   cl,0x3
  416b4b:	je     0x416b74
  416b4d:	cmp    BYTE PTR [rcx],dl
  416b4f:	jne    0x416b5d
  416b51:	jmp    0x416b70
  416b53:	test   cl,0x3
  416b56:	je     0x416b74
  416b58:	cmp    BYTE PTR [rcx],r9b
  416b5b:	je     0x416b70
  416b5d:	add    rcx,0x1
  416b61:	sub    r8,0x1
  416b65:	jne    0x416b53
  416b67:	xor    eax,eax
  416b69:	ret    
  416b6a:	nop    WORD PTR [rax+rax*1+0x0]
  416b70:	mov    rax,rcx
  416b73:	ret    
  416b74:	movzx  eax,dl
  416b77:	mov    r11d,eax
  416b7a:	shl    r11d,0x8
  416b7e:	or     r11d,eax
  416b81:	mov    eax,r11d
  416b84:	shl    eax,0x10
  416b87:	or     r11d,eax
  416b8a:	cmp    r8,0x3
  416b8e:	ja     0x416ba0
  416b90:	jmp    0x416bb8
  416b92:	sub    r8,0x4
  416b96:	add    rcx,0x4
  416b9a:	cmp    r8,0x3
  416b9e:	jbe    0x416be0
  416ba0:	mov    eax,DWORD PTR [rcx]
  416ba2:	xor    eax,r11d
  416ba5:	lea    r10d,[rax-0x1010101]
  416bac:	not    eax
  416bae:	and    eax,r10d
  416bb1:	test   eax,0x80808080
  416bb6:	je     0x416b92
  416bb8:	add    r8,rcx
  416bbb:	cmp    BYTE PTR [rcx],dl
  416bbd:	lea    rax,[rcx+0x1]
  416bc1:	jne    0x416bcf
  416bc3:	jmp    0x416b70
  416bc5:	add    rax,0x1
  416bc9:	cmp    BYTE PTR [rax-0x1],r9b
  416bcd:	je     0x416b70
  416bcf:	cmp    rax,r8
  416bd2:	mov    rcx,rax
  416bd5:	jne    0x416bc5
  416bd7:	xor    eax,eax
  416bd9:	ret    
  416bda:	nop    WORD PTR [rax+rax*1+0x0]
  416be0:	test   r8,r8
  416be3:	jne    0x416bb8
  416be5:	jmp    0x416b67
  416be7:	nop
  416be8:	nop
  416be9:	nop
  416bea:	nop
  416beb:	nop
  416bec:	nop
  416bed:	nop
  416bee:	nop
  416bef:	nop
  416bf0:	ret    
  416bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  416bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c00:	sub    rsp,0x28
  416c04:	mov    eax,DWORD PTR [rip+0x1e276]        # 0x434e80
  416c0a:	test   eax,eax
  416c0c:	jne    0x416c25
  416c0e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x416bf0
  416c15:	call   QWORD PTR [rip+0xd20d]        # 0x423e28
  416c1b:	mov    DWORD PTR [rip+0x1e25b],0x1        # 0x434e80
  416c25:	add    rsp,0x28
  416c29:	ret    
  416c2a:	nop
  416c2b:	nop
  416c2c:	nop
  416c2d:	nop
  416c2e:	nop
  416c2f:	nop
  416c30:	xor    r9d,r9d
  416c33:	cmp    QWORD PTR [rdx],0x0
  416c37:	mov    rax,QWORD PTR [rdx+0x8]
  416c3b:	lea    r10,[rip+0x159c6]        # 0x42c608
  416c42:	je     0x416c78
  416c44:	cmp    DWORD PTR [rax],0x16
  416c47:	ja     0x416d14
  416c4d:	mov    r8d,DWORD PTR [rax]
  416c50:	movsxd r8,DWORD PTR [r10+r8*4]
  416c54:	add    r8,r10
  416c57:	jmp    r8
  416c5a:	nop    WORD PTR [rax+rax*1+0x0]
  416c60:	mov    r8,QWORD PTR [rcx]
  416c63:	add    rcx,0x8
  416c67:	mov    QWORD PTR [rax+0x10],r8
  416c6b:	add    r9,0x1
  416c6f:	add    rax,0x20
  416c73:	cmp    QWORD PTR [rdx],r9
  416c76:	ja     0x416c44
  416c78:	xor    eax,eax
  416c7a:	ret    
  416c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  416c80:	mov    r8d,DWORD PTR [rcx]
  416c83:	add    rcx,0x8
  416c87:	mov    DWORD PTR [rax+0x10],r8d
  416c8b:	jmp    0x416c6b
  416c8d:	nop    DWORD PTR [rax]
  416c90:	mov    r8d,DWORD PTR [rcx]
  416c93:	add    rcx,0x8
  416c97:	mov    WORD PTR [rax+0x10],r8w
  416c9c:	jmp    0x416c6b
  416c9e:	xchg   ax,ax
  416ca0:	mov    r8d,DWORD PTR [rcx]
  416ca3:	add    rcx,0x8
  416ca7:	mov    BYTE PTR [rax+0x10],r8b
  416cab:	jmp    0x416c6b
  416cad:	nop    DWORD PTR [rax]
  416cb0:	movsd  xmm0,QWORD PTR [rcx]
  416cb4:	add    rcx,0x8
  416cb8:	movsd  QWORD PTR [rax+0x10],xmm0
  416cbd:	jmp    0x416c6b
  416cbf:	nop
  416cc0:	mov    r8,QWORD PTR [rcx]
  416cc3:	add    rcx,0x8
  416cc7:	fld    TBYTE PTR [r8]
  416cca:	fstp   TBYTE PTR [rax+0x10]
  416ccd:	jmp    0x416c6b
  416ccf:	nop
  416cd0:	mov    r8,QWORD PTR [rcx]
  416cd3:	add    rcx,0x8
  416cd7:	test   r8,r8
  416cda:	mov    QWORD PTR [rax+0x10],r8
  416cde:	jne    0x416c6b
  416ce0:	lea    r11,[rip+0x15919]        # 0x42c600
  416ce7:	mov    QWORD PTR [rax+0x10],r11
  416ceb:	jmp    0x416c6b
  416cf0:	mov    r8,QWORD PTR [rcx]
  416cf3:	add    rcx,0x8
  416cf7:	test   r8,r8
  416cfa:	mov    QWORD PTR [rax+0x10],r8
  416cfe:	jne    0x416c6b
  416d04:	lea    r11,[rip+0x15959]        # 0x42c664
  416d0b:	mov    QWORD PTR [rax+0x10],r11
  416d0f:	jmp    0x416c6b
  416d14:	mov    eax,0xffffffff
  416d19:	ret    
  416d1a:	nop
  416d1b:	nop
  416d1c:	nop
  416d1d:	nop
  416d1e:	nop
  416d1f:	nop
  416d20:	push   r15
  416d22:	push   r14
  416d24:	push   r13
  416d26:	push   r12
  416d28:	push   rbp
  416d29:	push   rdi
  416d2a:	push   rsi
  416d2b:	push   rbx
  416d2c:	sub    rsp,0x58
  416d30:	xor    r10d,r10d
  416d33:	mov    r14d,0x7
  416d39:	lea    rax,[rdx+0x20]
  416d3d:	lea    r15,[r8+0x10]
  416d41:	mov    QWORD PTR [rdx],0x0
  416d48:	mov    rbx,rcx
  416d4b:	mov    r12,rdx
  416d4e:	mov    r13,r8
  416d51:	mov    QWORD PTR [rdx+0x8],rax
  416d55:	mov    QWORD PTR [rsp+0x30],rax
  416d5a:	mov    QWORD PTR [r8],0x0
  416d61:	mov    QWORD PTR [r8+0x8],r15
  416d65:	mov    r9,QWORD PTR [rdx+0x8]
  416d69:	mov    rcx,QWORD PTR [rdx]
  416d6c:	mov    QWORD PTR [rsp+0x20],0x0
  416d75:	mov    QWORD PTR [rsp+0x28],0x7
  416d7e:	mov    QWORD PTR [rsp+0x38],0x0
  416d87:	jmp    0x416d9b
  416d89:	nop    DWORD PTR [rax+0x0]
  416d90:	cmp    al,0x25
  416d92:	lea    r11,[rbx+0x1]
  416d96:	je     0x416dd0
  416d98:	mov    rbx,r11
  416d9b:	movzx  eax,BYTE PTR [rbx]
  416d9e:	test   al,al
  416da0:	jne    0x416d90
  416da2:	lea    rax,[rcx+rcx*4]
  416da6:	lea    rax,[rcx+rax*2]
  416daa:	mov    QWORD PTR [r9+rax*8],rbx
  416dae:	mov    rax,QWORD PTR [rsp+0x20]
  416db3:	mov    QWORD PTR [r12+0x10],r10
  416db8:	mov    QWORD PTR [r12+0x18],rax
  416dbd:	xor    eax,eax
  416dbf:	add    rsp,0x58
  416dc3:	pop    rbx
  416dc4:	pop    rsi
  416dc5:	pop    rdi
  416dc6:	pop    rbp
  416dc7:	pop    r12
  416dc9:	pop    r13
  416dcb:	pop    r14
  416dcd:	pop    r15
  416dcf:	ret    
  416dd0:	lea    rax,[rcx+rcx*4]
  416dd4:	lea    rax,[rcx+rax*2]
  416dd8:	lea    rsi,[r9+rax*8]
  416ddc:	mov    QWORD PTR [rsi],rbx
  416ddf:	mov    DWORD PTR [rsi+0x10],0x0
  416de6:	mov    QWORD PTR [rsi+0x18],0x0
  416dee:	mov    QWORD PTR [rsi+0x20],0x0
  416df6:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  416dfe:	mov    QWORD PTR [rsi+0x30],0x0
  416e06:	mov    QWORD PTR [rsi+0x38],0x0
  416e0e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  416e16:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  416e1e:	movsx  eax,BYTE PTR [rbx+0x1]
  416e22:	lea    edx,[rax-0x30]
  416e25:	cmp    dl,0x9
  416e28:	jbe    0x417024
  416e2e:	mov    rdi,0xffffffffffffffff
  416e35:	lea    rcx,[r11+0x1]
  416e39:	jmp    0x416e67
  416e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e40:	cmp    al,0x2d
  416e42:	je     0x416e75
  416e44:	cmp    al,0x2b
  416e46:	je     0x416e80
  416e48:	cmp    al,0x20
  416e4a:	je     0x416e90
  416e4c:	cmp    al,0x23
  416e4e:	je     0x416ea0
  416e50:	cmp    al,0x30
  416e52:	jne    0x416ea6
  416e54:	or     DWORD PTR [rsi+0x10],0x20
  416e58:	nop    DWORD PTR [rax+rax*1+0x0]
  416e60:	movzx  eax,BYTE PTR [rcx]
  416e63:	add    rcx,0x1
  416e67:	cmp    al,0x27
  416e69:	lea    rbx,[rcx-0x1]
  416e6d:	jne    0x416e40
  416e6f:	or     DWORD PTR [rsi+0x10],0x1
  416e73:	jmp    0x416e60
  416e75:	or     DWORD PTR [rsi+0x10],0x2
  416e79:	jmp    0x416e60
  416e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e80:	or     DWORD PTR [rsi+0x10],0x4
  416e84:	jmp    0x416e60
  416e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e90:	or     DWORD PTR [rsi+0x10],0x8
  416e94:	jmp    0x416e60
  416e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ea0:	or     DWORD PTR [rsi+0x10],0x10
  416ea4:	jmp    0x416e60
  416ea6:	cmp    al,0x2a
  416ea8:	mov    rdx,rbx
  416eab:	je     0x417121
  416eb1:	lea    ecx,[rax-0x30]
  416eb4:	cmp    cl,0x9
  416eb7:	jbe    0x4170c3
  416ebd:	cmp    al,0x2e
  416ebf:	je     0x416f59
  416ec5:	xor    edx,edx
  416ec7:	mov    r8d,0x1
  416ecd:	jmp    0x416f13
  416ecf:	nop
  416ed0:	cmp    al,0x4c
  416ed2:	je     0x416f40
  416ed4:	cmp    al,0x6c
  416ed6:	je     0x416f50
  416ed8:	cmp    al,0x6a
  416eda:	je     0x416f30
  416edc:	mov    ecx,eax
  416ede:	and    ecx,0xffffffdf
  416ee1:	cmp    cl,0x5a
  416ee4:	je     0x416f30
  416ee6:	cmp    al,0x74
  416ee8:	je     0x416f30
  416eea:	cmp    al,0x49
  416eec:	jne    0x4170fc
  416ef2:	cmp    BYTE PTR [rbx+0x1],0x36
  416ef6:	jne    0x416fef
  416efc:	cmp    BYTE PTR [rbx+0x2],0x34
  416f00:	jne    0x416fef
  416f06:	add    edx,0x10
  416f09:	add    rbx,0x3
  416f0d:	nop    DWORD PTR [rax]
  416f10:	movzx  eax,BYTE PTR [rbx]
  416f13:	cmp    al,0x68
  416f15:	jne    0x416ed0
  416f17:	mov    ecx,edx
  416f19:	mov    eax,r8d
  416f1c:	add    rbx,0x1
  416f20:	and    ecx,0x1
  416f23:	shl    eax,cl
  416f25:	or     edx,eax
  416f27:	jmp    0x416f10
  416f29:	nop    DWORD PTR [rax+0x0]
  416f30:	add    edx,0x10
  416f33:	add    rbx,0x1
  416f37:	jmp    0x416f10
  416f39:	nop    DWORD PTR [rax+0x0]
  416f40:	or     edx,0x4
  416f43:	add    rbx,0x1
  416f47:	jmp    0x416f10
  416f49:	nop    DWORD PTR [rax+0x0]
  416f50:	add    edx,0x8
  416f53:	add    rbx,0x1
  416f57:	jmp    0x416f10
  416f59:	cmp    BYTE PTR [rbx+0x1],0x2a
  416f5d:	jne    0x4171c7
  416f63:	lea    rbp,[rbx+0x2]
  416f67:	mov    QWORD PTR [rsi+0x30],rbx
  416f6b:	cmp    QWORD PTR [rsp+0x20],0x1
  416f71:	mov    QWORD PTR [rsi+0x38],rbp
  416f75:	movsx  eax,BYTE PTR [rbx+0x2]
  416f79:	lea    edx,[rax-0x30]
  416f7c:	jbe    0x417420
  416f82:	cmp    dl,0x9
  416f85:	ja     0x417432
  416f8b:	mov    rdx,rbp
  416f8e:	add    rdx,0x1
  416f92:	movzx  ecx,BYTE PTR [rdx]
  416f95:	lea    r8d,[rcx-0x30]
  416f99:	cmp    r8b,0x9
  416f9d:	jbe    0x416f8e
  416f9f:	cmp    cl,0x24
  416fa2:	jne    0x417432
  416fa8:	xor    ebx,ebx
  416faa:	movabs rcx,0x1999999999999999
  416fb4:	sub    eax,0x30
  416fb7:	mov    rdx,0xffffffffffffffff
  416fbe:	cmp    rbx,rcx
  416fc1:	cdqe   
  416fc3:	ja     0x416fcc
  416fc5:	lea    rdx,[rbx+rbx*4]
  416fc9:	add    rdx,rdx
  416fcc:	add    rdx,rax
  416fcf:	mov    rbx,rdx
  416fd2:	jae    0x4177ae
  416fd8:	add    rbp,0x1
  416fdc:	movsx  eax,BYTE PTR [rbp+0x0]
  416fe0:	mov    rbx,0xffffffffffffffff
  416fe7:	lea    edx,[rax-0x30]
  416fea:	cmp    dl,0x9
  416fed:	jbe    0x416faa
  416fef:	mov    rcx,QWORD PTR [r13+0x8]
  416ff3:	cmp    r15,rcx
  416ff6:	je     0x416ffd
  416ff8:	call   0x421e50
  416ffd:	mov    rcx,QWORD PTR [r12+0x8]
  417002:	cmp    QWORD PTR [rsp+0x30],rcx
  417007:	je     0x41700e
  417009:	call   0x421e50
  41700e:	call   QWORD PTR [rip+0x21fb8]        # 0x438fcc
  417014:	mov    DWORD PTR [rax],0x16
  41701a:	mov    eax,0xffffffff
  41701f:	jmp    0x416dbf
  417024:	mov    rdx,r11
  417027:	nop    WORD PTR [rax+rax*1+0x0]
  417030:	add    rdx,0x1
  417034:	movzx  r8d,BYTE PTR [rdx]
  417038:	lea    ecx,[r8-0x30]
  41703c:	cmp    cl,0x9
  41703f:	jbe    0x417030
  417041:	cmp    r8b,0x24
  417045:	jne    0x416e2e
  41704b:	mov    rcx,r11
  41704e:	xor    edi,edi
  417050:	jmp    0x41706c
  417052:	movsx  eax,BYTE PTR [rcx+0x1]
  417056:	lea    rdx,[rcx+0x1]
  41705a:	mov    rdi,0xffffffffffffffff
  417061:	lea    ecx,[rax-0x30]
  417064:	cmp    cl,0x9
  417067:	ja     0x416fef
  417069:	mov    rcx,rdx
  41706c:	movabs rbx,0x1999999999999999
  417076:	sub    eax,0x30
  417079:	mov    rdx,0xffffffffffffffff
  417080:	cmp    rdi,rbx
  417083:	cdqe   
  417085:	ja     0x41708e
  417087:	lea    rdx,[rdi+rdi*4]
  41708b:	add    rdx,rdx
  41708e:	mov    rdi,rdx
  417091:	add    rdi,rax
  417094:	jb     0x417052
  417096:	movsx  eax,BYTE PTR [rcx+0x1]
  41709a:	lea    rdx,[rcx+0x1]
  41709e:	lea    r8d,[rax-0x30]
  4170a2:	cmp    r8b,0x9
  4170a6:	jbe    0x417069
  4170a8:	sub    rdi,0x1
  4170ac:	cmp    rdi,0xfffffffffffffffd
  4170b0:	ja     0x416fef
  4170b6:	lea    r11,[rcx+0x2]
  4170ba:	movzx  eax,BYTE PTR [rcx+0x2]
  4170be:	jmp    0x416e35
  4170c3:	mov    QWORD PTR [rsi+0x18],rbx
  4170c7:	movzx  eax,BYTE PTR [rbx]
  4170ca:	sub    eax,0x30
  4170cd:	cmp    al,0x9
  4170cf:	ja     0x41780c
  4170d5:	add    rbx,0x1
  4170d9:	movzx  eax,BYTE PTR [rbx]
  4170dc:	sub    eax,0x30
  4170df:	cmp    al,0x9
  4170e1:	jbe    0x4170d5
  4170e3:	mov    rax,rbx
  4170e6:	sub    rax,rdx
  4170e9:	cmp    r10,rax
  4170ec:	mov    QWORD PTR [rsi+0x20],rbx
  4170f0:	cmovb  r10,rax
  4170f4:	movzx  eax,BYTE PTR [rbx]
  4170f7:	jmp    0x416ebd
  4170fc:	lea    ecx,[rax-0x25]
  4170ff:	add    rbx,0x1
  417103:	mov    ebp,eax
  417105:	cmp    cl,0x53
  417108:	ja     0x416fef
  41710e:	lea    r9,[rip+0x1556b]        # 0x42c680
  417115:	movzx  ecx,cl
  417118:	movsxd rcx,DWORD PTR [r9+rcx*4]
  41711c:	add    rcx,r9
  41711f:	jmp    rcx
  417121:	mov    QWORD PTR [rsi+0x18],rbx
  417125:	mov    QWORD PTR [rsi+0x20],rcx
  417129:	test   r10,r10
  41712c:	movsx  eax,BYTE PTR [rdx+0x1]
  417130:	mov    rbx,rcx
  417133:	lea    edx,[rax-0x30]
  417136:	jne    0x417286
  41713c:	cmp    dl,0x9
  41713f:	jbe    0x417214
  417145:	mov    r10d,0x1
  41714b:	mov    rbp,QWORD PTR [rsp+0x38]
  417150:	mov    rax,rbp
  417153:	mov    QWORD PTR [rsi+0x28],rbp
  417157:	add    rax,0x1
  41715b:	cmp    rbp,0xffffffffffffffff
  41715f:	je     0x416fef
  417165:	mov    QWORD PTR [rsp+0x38],rax
  41716a:	cmp    r14,rbp
  41716d:	jbe    0x417539
  417173:	mov    rcx,QWORD PTR [r13+0x8]
  417177:	mov    rax,QWORD PTR [r13+0x0]
  41717b:	mov    rdx,rax
  41717e:	shl    rdx,0x5
  417182:	add    rdx,rcx
  417185:	cmp    rbp,rax
  417188:	jb     0x4171a7
  41718a:	nop    WORD PTR [rax+rax*1+0x0]
  417190:	add    rax,0x1
  417194:	mov    DWORD PTR [rdx],0x0
  41719a:	add    rdx,0x20
  41719e:	cmp    rax,rbp
  4171a1:	jbe    0x417190
  4171a3:	mov    QWORD PTR [r13+0x0],rax
  4171a7:	shl    rbp,0x5
  4171ab:	lea    rax,[rcx+rbp*1]
  4171af:	mov    edx,DWORD PTR [rax]
  4171b1:	test   edx,edx
  4171b3:	jne    0x417668
  4171b9:	mov    DWORD PTR [rax],0x5
  4171bf:	movzx  eax,BYTE PTR [rbx]
  4171c2:	jmp    0x416ebd
  4171c7:	mov    QWORD PTR [rsi+0x30],rbx
  4171cb:	movzx  eax,BYTE PTR [rbx+0x1]
  4171cf:	lea    rdx,[rbx+0x1]
  4171d3:	sub    eax,0x30
  4171d6:	cmp    al,0x9
  4171d8:	ja     0x4171ee
  4171da:	nop    WORD PTR [rax+rax*1+0x0]
  4171e0:	add    rdx,0x1
  4171e4:	movzx  eax,BYTE PTR [rdx]
  4171e7:	sub    eax,0x30
  4171ea:	cmp    al,0x9
  4171ec:	jbe    0x4171e0
  4171ee:	mov    rax,rdx
  4171f1:	mov    QWORD PTR [rsi+0x38],rdx
  4171f5:	sub    rax,rbx
  4171f8:	mov    rbx,QWORD PTR [rsp+0x20]
  4171fd:	cmp    rbx,rax
  417200:	cmovae rax,rbx
  417204:	mov    rbx,rdx
  417207:	mov    QWORD PTR [rsp+0x20],rax
  41720c:	movzx  eax,BYTE PTR [rdx]
  41720f:	jmp    0x416ec5
  417214:	mov    r10b,0x1
  417217:	nop    WORD PTR [rax+rax*1+0x0]
  417220:	add    rcx,0x1
  417224:	movzx  edx,BYTE PTR [rcx]
  417227:	lea    r8d,[rdx-0x30]
  41722b:	cmp    r8b,0x9
  41722f:	jbe    0x417220
  417231:	cmp    dl,0x24
  417234:	jne    0x41714b
  41723a:	xor    ebp,ebp
  41723c:	movabs rcx,0x1999999999999999
  417246:	sub    eax,0x30
  417249:	mov    rdx,0xffffffffffffffff
  417250:	cmp    rbp,rcx
  417253:	cdqe   
  417255:	ja     0x41725f
  417257:	lea    rdx,[rbp+rbp*4+0x0]
  41725c:	add    rdx,rdx
  41725f:	add    rdx,rax
  417262:	mov    rbp,rdx
  417265:	jae    0x417780
  41726b:	add    rbx,0x1
  41726f:	movsx  eax,BYTE PTR [rbx]
  417272:	mov    rbp,0xffffffffffffffff
  417279:	lea    edx,[rax-0x30]
  41727c:	cmp    dl,0x9
  41727f:	jbe    0x41723c
  417281:	jmp    0x416fef
  417286:	cmp    dl,0x9
  417289:	jbe    0x417220
  41728b:	jmp    0x41714b
  417290:	cmp    edx,0xf
  417293:	mov    r9d,0xc
  417299:	jle    0x41770d
  41729f:	cmp    rdi,0xffffffffffffffff
  4172a3:	je     0x417680
  4172a9:	mov    QWORD PTR [rsi+0x50],rdi
  4172ad:	cmp    r14,rdi
  4172b0:	jbe    0x41758c
  4172b6:	mov    rcx,QWORD PTR [r13+0x8]
  4172ba:	mov    rax,QWORD PTR [r13+0x0]
  4172be:	mov    rdx,rax
  4172c1:	shl    rdx,0x5
  4172c5:	add    rdx,rcx
  4172c8:	cmp    rdi,rax
  4172cb:	jb     0x4172e7
  4172cd:	nop    DWORD PTR [rax]
  4172d0:	add    rax,0x1
  4172d4:	mov    DWORD PTR [rdx],0x0
  4172da:	add    rdx,0x20
  4172de:	cmp    rax,rdi
  4172e1:	jbe    0x4172d0
  4172e3:	mov    QWORD PTR [r13+0x0],rax
  4172e7:	shl    rdi,0x5
  4172eb:	lea    rax,[rcx+rdi*1]
  4172ef:	mov    edx,DWORD PTR [rax]
  4172f1:	test   edx,edx
  4172f3:	jne    0x417600
  4172f9:	mov    DWORD PTR [rax],r9d
  4172fc:	mov    BYTE PTR [rsi+0x48],bpl
  417300:	mov    rax,QWORD PTR [r12]
  417304:	mov    QWORD PTR [rsi+0x8],rbx
  417308:	lea    rcx,[rax+0x1]
  41730c:	cmp    rcx,QWORD PTR [rsp+0x28]
  417311:	mov    QWORD PTR [r12],rcx
  417315:	jae    0x4174c0
  41731b:	mov    r9,QWORD PTR [r12+0x8]
  417320:	jmp    0x416d9b
  417325:	xor    r9d,r9d
  417328:	cmp    edx,0x7
  41732b:	mov    ebp,eax
  41732d:	setg   r9b
  417331:	add    r9d,0xf
  417335:	jmp    0x41729f
  41733a:	cmp    edx,0xf
  41733d:	jg     0x417370
  41733f:	test   dl,0x4
  417342:	jne    0x417370
  417344:	cmp    edx,0x7
  417347:	jg     0x4178b8
  41734d:	test   dl,0x2
  417350:	jne    0x4178ab
  417356:	and    edx,0x1
  417359:	mov    ebp,eax
  41735b:	neg    edx
  41735d:	mov    r9d,edx
  417360:	add    r9d,0x14
  417364:	jmp    0x41729f
  417369:	nop    DWORD PTR [rax+0x0]
  417370:	mov    ebp,eax
  417372:	mov    r9d,0x16
  417378:	jmp    0x41729f
  41737d:	cmp    edx,0xf
  417380:	mov    r9d,0x9
  417386:	jg     0x41729f
  41738c:	test   dl,0x4
  41738f:	jne    0x41729f
  417395:	cmp    edx,0x7
  417398:	mov    r9b,0x7
  41739b:	jg     0x41729f
  4173a1:	test   dl,0x2
  4173a4:	mov    r9b,0x1
  4173a7:	jne    0x41729f
  4173ad:	and    edx,0x1
  4173b0:	cmp    edx,0x1
  4173b3:	sbb    r9d,r9d
  4173b6:	and    r9d,0x2
  4173ba:	add    r9d,0x3
  4173be:	jmp    0x41729f
  4173c3:	xor    r9d,r9d
  4173c6:	cmp    edx,0x7
  4173c9:	mov    ebp,eax
  4173cb:	setg   r9b
  4173cf:	add    r9d,0xd
  4173d3:	jmp    0x41729f
  4173d8:	cmp    edx,0xf
  4173db:	mov    r9d,0xa
  4173e1:	jg     0x41729f
  4173e7:	test   dl,0x4
  4173ea:	jne    0x41729f
  4173f0:	cmp    edx,0x7
  4173f3:	mov    r9b,0x8
  4173f6:	jg     0x41729f
  4173fc:	test   dl,0x2
  4173ff:	mov    r9b,0x2
  417402:	jne    0x41729f
  417408:	and    edx,0x1
  41740b:	cmp    edx,0x1
  41740e:	sbb    r9d,r9d
  417411:	and    r9d,0x2
  417415:	add    r9d,0x4
  417419:	jmp    0x41729f
  41741e:	xchg   ax,ax
  417420:	cmp    dl,0x9
  417423:	mov    QWORD PTR [rsp+0x20],0x2
  41742c:	jbe    0x416f8b
  417432:	mov    rbx,QWORD PTR [rsi+0x40]
  417436:	cmp    rbx,0xffffffffffffffff
  41743a:	je     0x417753
  417440:	cmp    r14,rbx
  417443:	ja     0x4176b9
  417449:	test   r14,r14
  41744c:	js     0x417557
  417452:	add    r14,r14
  417455:	cmp    r14,rbx
  417458:	ja     0x417467
  41745a:	lea    r14,[rbx+0x1]
  41745e:	cmp    r14,rbx
  417461:	jb     0x417557
  417467:	movabs rax,0x7ffffffffffffff
  417471:	cmp    r14,rax
  417474:	ja     0x417557
  41747a:	mov    rcx,QWORD PTR [r13+0x8]
  41747e:	mov    rdx,r14
  417481:	mov    QWORD PTR [rsp+0x40],r10
  417486:	shl    rdx,0x5
  41748a:	cmp    r15,rcx
  41748d:	je     0x4178ea
  417493:	call   0x414ca0
  417498:	mov    r10,QWORD PTR [rsp+0x40]
  41749d:	mov    r9,rax
  4174a0:	test   r9,r9
  4174a3:	je     0x417557
  4174a9:	cmp    r15,QWORD PTR [r13+0x8]
  4174ad:	je     0x4178c5
  4174b3:	mov    QWORD PTR [r13+0x8],r9
  4174b7:	mov    rcx,r9
  4174ba:	jmp    0x4176bd
  4174bf:	nop
  4174c0:	mov    rax,QWORD PTR [rsp+0x28]
  4174c5:	test   rax,rax
  4174c8:	js     0x417557
  4174ce:	add    rax,rax
  4174d1:	mov    rdi,rax
  4174d4:	mov    QWORD PTR [rsp+0x28],rax
  4174d9:	movabs rax,0x2e8ba2e8ba2e8ba
  4174e3:	cmp    rdi,rax
  4174e6:	ja     0x417557
  4174e8:	lea    rax,[rdi+rdi*4]
  4174ec:	mov    rcx,QWORD PTR [r12+0x8]
  4174f1:	mov    QWORD PTR [rsp+0x40],r10
  4174f6:	lea    rdx,[rdi+rax*2]
  4174fa:	shl    rdx,0x3
  4174fe:	cmp    QWORD PTR [rsp+0x30],rcx
  417503:	je     0x4176a4
  417509:	call   0x414ca0
  41750e:	mov    r10,QWORD PTR [rsp+0x40]
  417513:	mov    r9,rax
  417516:	test   r9,r9
  417519:	je     0x417557
  41751b:	mov    rax,QWORD PTR [rsp+0x30]
  417520:	cmp    rax,QWORD PTR [r12+0x8]
  417525:	je     0x417813
  41752b:	mov    QWORD PTR [r12+0x8],r9
  417530:	mov    rcx,QWORD PTR [r12]
  417534:	jmp    0x416d9b
  417539:	test   r14,r14
  41753c:	js     0x417557
  41753e:	add    r14,r14
  417541:	cmp    r14,rbp
  417544:	ja     0x417610
  41754a:	lea    r14,[rbp+0x1]
  41754e:	cmp    r14,rbp
  417551:	jae    0x417610
  417557:	mov    rcx,QWORD PTR [r13+0x8]
  41755b:	cmp    r15,rcx
  41755e:	je     0x417565
  417560:	call   0x421e50
  417565:	mov    rcx,QWORD PTR [r12+0x8]
  41756a:	cmp    QWORD PTR [rsp+0x30],rcx
  41756f:	je     0x417576
  417571:	call   0x421e50
  417576:	call   QWORD PTR [rip+0x21a50]        # 0x438fcc
  41757c:	mov    DWORD PTR [rax],0xc
  417582:	mov    eax,0xffffffff
  417587:	jmp    0x416dbf
  41758c:	test   r14,r14
  41758f:	js     0x417557
  417591:	add    r14,r14
  417594:	cmp    r14,rdi
  417597:	ja     0x4175a2
  417599:	lea    r14,[rdi+0x1]
  41759d:	cmp    r14,rdi
  4175a0:	jb     0x417557
  4175a2:	movabs rax,0x7ffffffffffffff
  4175ac:	cmp    r14,rax
  4175af:	ja     0x417557
  4175b1:	mov    rcx,QWORD PTR [r13+0x8]
  4175b5:	mov    rdx,r14
  4175b8:	mov    QWORD PTR [rsp+0x48],r10
  4175bd:	shl    rdx,0x5
  4175c1:	mov    DWORD PTR [rsp+0x40],r9d
  4175c6:	cmp    r15,rcx
  4175c9:	je     0x4177dd
  4175cf:	call   0x414ca0
  4175d4:	mov    r9d,DWORD PTR [rsp+0x40]
  4175d9:	mov    r10,QWORD PTR [rsp+0x48]
  4175de:	mov    r11,rax
  4175e1:	test   r11,r11
  4175e4:	je     0x417557
  4175ea:	cmp    r15,QWORD PTR [r13+0x8]
  4175ee:	je     0x41787c
  4175f4:	mov    QWORD PTR [r13+0x8],r11
  4175f8:	mov    rcx,r11
  4175fb:	jmp    0x4172ba
  417600:	cmp    r9d,edx
  417603:	je     0x4172fc
  417609:	jmp    0x416ff3
  41760e:	xchg   ax,ax
  417610:	movabs rax,0x7ffffffffffffff
  41761a:	cmp    r14,rax
  41761d:	ja     0x417557
  417623:	mov    rcx,QWORD PTR [r13+0x8]
  417627:	mov    rdx,r14
  41762a:	mov    QWORD PTR [rsp+0x40],r10
  41762f:	shl    rdx,0x5
  417633:	cmp    r15,rcx
  417636:	je     0x417842
  41763c:	call   0x414ca0
  417641:	mov    r10,QWORD PTR [rsp+0x40]
  417646:	mov    r9,rax
  417649:	test   r9,r9
  41764c:	je     0x417557
  417652:	cmp    r15,QWORD PTR [r13+0x8]
  417656:	je     0x417857
  41765c:	mov    QWORD PTR [r13+0x8],r9
  417660:	mov    rcx,r9
  417663:	jmp    0x417177
  417668:	cmp    edx,0x5
  41766b:	je     0x4170f4
  417671:	jmp    0x416ff3
  417676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417680:	mov    rdi,QWORD PTR [rsp+0x38]
  417685:	mov    rax,rdi
  417688:	mov    QWORD PTR [rsi+0x50],rdi
  41768c:	add    rax,0x1
  417690:	cmp    rdi,0xffffffffffffffff
  417694:	je     0x416fef
  41769a:	mov    QWORD PTR [rsp+0x38],rax
  41769f:	jmp    0x4172ad
  4176a4:	mov    rcx,rdx
  4176a7:	call   0x4145c0
  4176ac:	mov    r10,QWORD PTR [rsp+0x40]
  4176b1:	mov    r9,rax
  4176b4:	jmp    0x417516
  4176b9:	mov    rcx,QWORD PTR [r13+0x8]
  4176bd:	mov    rax,QWORD PTR [r13+0x0]
  4176c1:	mov    rdx,rax
  4176c4:	shl    rdx,0x5
  4176c8:	add    rdx,rcx
  4176cb:	cmp    rbx,rax
  4176ce:	jb     0x4176e7
  4176d0:	add    rax,0x1
  4176d4:	mov    DWORD PTR [rdx],0x0
  4176da:	add    rdx,0x20
  4176de:	cmp    rax,rbx
  4176e1:	jbe    0x4176d0
  4176e3:	mov    QWORD PTR [r13+0x0],rax
  4176e7:	mov    rax,rbx
  4176ea:	shl    rax,0x5
  4176ee:	add    rax,rcx
  4176f1:	mov    edx,DWORD PTR [rax]
  4176f3:	test   edx,edx
  4176f5:	jne    0x4177f7
  4176fb:	mov    DWORD PTR [rax],0x5
  417701:	mov    rbx,rbp
  417704:	movzx  eax,BYTE PTR [rbp+0x0]
  417708:	jmp    0x416ec5
  41770d:	and    edx,0x4
  417710:	cmp    edx,0x1
  417713:	sbb    r9d,r9d
  417716:	add    r9d,0xc
  41771a:	jmp    0x41729f
  41771f:	mov    r9d,0xe
  417725:	mov    ebp,0x63
  41772a:	jmp    0x41729f
  41772f:	mov    ebp,eax
  417731:	jmp    0x4172fc
  417736:	mov    ebp,eax
  417738:	mov    r9d,0x11
  41773e:	jmp    0x41729f
  417743:	mov    r9d,0x10
  417749:	mov    ebp,0x73
  41774e:	jmp    0x41729f
  417753:	mov    rbx,QWORD PTR [rsp+0x38]
  417758:	mov    rax,rbx
  41775b:	mov    QWORD PTR [rsi+0x40],rbx
  41775f:	add    rax,0x1
  417763:	cmp    rbx,0xffffffffffffffff
  417767:	je     0x416fef
  41776d:	mov    QWORD PTR [rsp+0x38],rax
  417772:	jmp    0x417440
  417777:	nop    WORD PTR [rax+rax*1+0x0]
  417780:	add    rbx,0x1
  417784:	movsx  eax,BYTE PTR [rbx]
  417787:	lea    edx,[rax-0x30]
  41778a:	cmp    dl,0x9
  41778d:	jbe    0x41723c
  417793:	sub    rbp,0x1
  417797:	cmp    rbp,0xfffffffffffffffd
  41779b:	ja     0x416fef
  4177a1:	mov    QWORD PTR [rsi+0x28],rbp
  4177a5:	add    rbx,0x1
  4177a9:	jmp    0x41716a
  4177ae:	add    rbp,0x1
  4177b2:	movsx  eax,BYTE PTR [rbp+0x0]
  4177b6:	lea    edx,[rax-0x30]
  4177b9:	cmp    dl,0x9
  4177bc:	jbe    0x416faa
  4177c2:	sub    rbx,0x1
  4177c6:	cmp    rbx,0xfffffffffffffffd
  4177ca:	ja     0x416fef
  4177d0:	mov    QWORD PTR [rsi+0x40],rbx
  4177d4:	add    rbp,0x1
  4177d8:	jmp    0x417440
  4177dd:	mov    rcx,rdx
  4177e0:	call   0x4145c0
  4177e5:	mov    r10,QWORD PTR [rsp+0x48]
  4177ea:	mov    r11,rax
  4177ed:	mov    r9d,DWORD PTR [rsp+0x40]
  4177f2:	jmp    0x4175e1
  4177f7:	cmp    edx,0x5
  4177fa:	jne    0x416ff3
  417800:	movzx  eax,BYTE PTR [rbp+0x0]
  417804:	mov    rbx,rbp
  417807:	jmp    0x416ec5
  41780c:	xor    eax,eax
  41780e:	jmp    0x4170e9
  417813:	mov    rax,QWORD PTR [r12]
  417817:	mov    rcx,r9
  41781a:	mov    QWORD PTR [rsp+0x40],r10
  41781f:	lea    rdx,[rax+rax*4]
  417823:	lea    r8,[rax+rdx*2]
  417827:	mov    rdx,QWORD PTR [rsp+0x30]
  41782c:	shl    r8,0x3
  417830:	call   0x421e08
  417835:	mov    r10,QWORD PTR [rsp+0x40]
  41783a:	mov    r9,rax
  41783d:	jmp    0x41752b
  417842:	mov    rcx,rdx
  417845:	call   0x4145c0
  41784a:	mov    r10,QWORD PTR [rsp+0x40]
  41784f:	mov    r9,rax
  417852:	jmp    0x417649
  417857:	mov    r8,QWORD PTR [r13+0x0]
  41785b:	mov    rcx,r9
  41785e:	mov    rdx,r15
  417861:	mov    QWORD PTR [rsp+0x40],r10
  417866:	shl    r8,0x5
  41786a:	call   0x421e08
  41786f:	mov    r10,QWORD PTR [rsp+0x40]
  417874:	mov    r9,rax
  417877:	jmp    0x41765c
  41787c:	mov    r8,QWORD PTR [r13+0x0]
  417880:	mov    rcx,r11
  417883:	mov    rdx,r15
  417886:	mov    QWORD PTR [rsp+0x48],r10
  41788b:	mov    DWORD PTR [rsp+0x40],r9d
  417890:	shl    r8,0x5
  417894:	call   0x421e08
  417899:	mov    r10,QWORD PTR [rsp+0x48]
  41789e:	mov    r11,rax
  4178a1:	mov    r9d,DWORD PTR [rsp+0x40]
  4178a6:	jmp    0x4175f4
  4178ab:	mov    ebp,eax
  4178ad:	mov    r9d,0x12
  4178b3:	jmp    0x41729f
  4178b8:	mov    ebp,eax
  4178ba:	mov    r9d,0x15
  4178c0:	jmp    0x41729f
  4178c5:	mov    r8,QWORD PTR [r13+0x0]
  4178c9:	mov    rcx,r9
  4178cc:	mov    rdx,r15
  4178cf:	mov    QWORD PTR [rsp+0x40],r10
  4178d4:	shl    r8,0x5
  4178d8:	call   0x421e08
  4178dd:	mov    r10,QWORD PTR [rsp+0x40]
  4178e2:	mov    r9,rax
  4178e5:	jmp    0x4174b3
  4178ea:	mov    rcx,rdx
  4178ed:	call   0x4145c0
  4178f2:	mov    r10,QWORD PTR [rsp+0x40]
  4178f7:	mov    r9,rax
  4178fa:	jmp    0x4174a0
  4178ff:	nop
  417900:	push   rbx
  417901:	sub    rsp,0x20
  417905:	mov    ebx,ecx
  417907:	call   0x416c00
  41790c:	mov    ecx,ebx
  41790e:	add    rsp,0x20
  417912:	pop    rbx
  417913:	jmp    0x421ce8
  417918:	nop    DWORD PTR [rax+rax*1+0x0]
  417920:	mov    edx,ecx
  417922:	lea    rcx,[rip+0xffffffffffffffd7]        # 0x417900
  417929:	jmp    0x41a7e0
  41792e:	nop
  41792f:	nop
  417930:	push   rsi
  417931:	push   rbx
  417932:	sub    rsp,0x38
  417936:	mov    rbx,rdx
  417939:	mov    esi,r8d
  41793c:	call   0x414c80
  417941:	cmp    rax,0xffffffffffffffff
  417945:	mov    rcx,rax
  417948:	je     0x417ab0
  41794e:	mov    rdx,rbx
  417951:	mov    r8d,esi
  417954:	call   QWORD PTR [rip+0x2198a]        # 0x4392e4
  41795a:	mov    ebx,eax
  41795c:	test   ebx,ebx
  41795e:	js     0x417970
  417960:	add    rsp,0x38
  417964:	pop    rbx
  417965:	pop    rsi
  417966:	ret    
  417967:	nop    WORD PTR [rax+rax*1+0x0]
  417970:	mov    rsi,QWORD PTR [rip+0x2193d]        # 0x4392b4
  417977:	call   rsi
  417979:	cmp    eax,0x2733
  41797e:	je     0x417aa0
  417984:	call   rsi
  417986:	cmp    eax,0x2740
  41798b:	mov    esi,eax
  41798d:	je     0x417c91
  417993:	jg     0x4179e0
  417995:	cmp    eax,0x2736
  41799a:	je     0x417c7e
  4179a0:	jle    0x417a62
  4179a6:	cmp    eax,0x273a
  4179ab:	je     0x417bd3
  4179b1:	jg     0x417b12
  4179b7:	cmp    eax,0x2738
  4179bc:	je     0x417c6b
  4179c2:	jg     0x417c58
  4179c8:	call   QWORD PTR [rip+0x215fe]        # 0x438fcc
  4179ce:	mov    DWORD PTR [rax],0x6d
  4179d4:	mov    eax,ebx
  4179d6:	jmp    0x417960
  4179d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4179e0:	cmp    eax,0x2748
  4179e5:	je     0x417c45
  4179eb:	jg     0x417a22
  4179ed:	cmp    eax,0x2744
  4179f2:	je     0x417be6
  4179f8:	jg     0x417b42
  4179fe:	cmp    eax,0x2742
  417a03:	je     0x417cb7
  417a09:	jg     0x417ca4
  417a0f:	call   QWORD PTR [rip+0x215b7]        # 0x438fcc
  417a15:	mov    DWORD PTR [rax],0x65
  417a1b:	mov    eax,ebx
  417a1d:	jmp    0x417960
  417a22:	cmp    eax,0x274e
  417a27:	je     0x417c0c
  417a2d:	jg     0x417ad0
  417a33:	cmp    eax,0x274c
  417a38:	je     0x417c32
  417a3e:	jg     0x417c1f
  417a44:	cmp    eax,0x2749
  417a49:	jne    0x417af1
  417a4f:	call   QWORD PTR [rip+0x21577]        # 0x438fcc
  417a55:	mov    DWORD PTR [rax],0x7e
  417a5b:	mov    eax,ebx
  417a5d:	jmp    0x417960
  417a62:	cmp    eax,0x57
  417a65:	je     0x417b87
  417a6b:	jle    0x417b66
  417a71:	cmp    eax,0x2734
  417a76:	je     0x417d03
  417a7c:	jg     0x417cf0
  417a82:	cmp    eax,0x2733
  417a87:	jne    0x417af1
  417a89:	call   QWORD PTR [rip+0x2153d]        # 0x438fcc
  417a8f:	mov    DWORD PTR [rax],0x8c
  417a95:	mov    eax,ebx
  417a97:	jmp    0x417960
  417a9c:	nop    DWORD PTR [rax+0x0]
  417aa0:	mov    ecx,0x2734
  417aa5:	call   QWORD PTR [rip+0x21811]        # 0x4392bc
  417aab:	jmp    0x417984
  417ab0:	mov    QWORD PTR [rsp+0x28],rax
  417ab5:	call   QWORD PTR [rip+0x21511]        # 0x438fcc
  417abb:	mov    rcx,QWORD PTR [rsp+0x28]
  417ac0:	mov    DWORD PTR [rax],0x9
  417ac6:	mov    eax,ecx
  417ac8:	jmp    0x417960
  417acd:	nop    DWORD PTR [rax]
  417ad0:	cmp    eax,0x2751
  417ad5:	je     0x417bf9
  417adb:	cmp    eax,0x2752
  417ae0:	je     0x417bc0
  417ae6:	cmp    eax,0x274f
  417aeb:	je     0x417bad
  417af1:	call   QWORD PTR [rip+0x214d5]        # 0x438fcc
  417af7:	lea    ecx,[rsi-0x2711]
  417afd:	lea    edx,[rsi-0x2710]
  417b03:	cmp    ecx,0x17
  417b06:	cmovbe esi,edx
  417b09:	mov    DWORD PTR [rax],esi
  417b0b:	mov    eax,ebx
  417b0d:	jmp    0x417960
  417b12:	cmp    eax,0x273d
  417b17:	je     0x417cdd
  417b1d:	cmp    eax,0x273f
  417b22:	je     0x417cca
  417b28:	cmp    eax,0x273b
  417b2d:	jne    0x417af1
  417b2f:	call   QWORD PTR [rip+0x21497]        # 0x438fcc
  417b35:	mov    DWORD PTR [rax],0x87
  417b3b:	mov    eax,ebx
  417b3d:	jmp    0x417960
  417b42:	cmp    eax,0x2746
  417b47:	je     0x417d29
  417b4d:	jg     0x417d16
  417b53:	call   QWORD PTR [rip+0x21473]        # 0x438fcc
  417b59:	mov    DWORD PTR [rax],0x6a
  417b5f:	mov    eax,ebx
  417b61:	jmp    0x417960
  417b66:	cmp    eax,0x6
  417b69:	je     0x417b9a
  417b6b:	cmp    eax,0x8
  417b6e:	jne    0x417af1
  417b74:	call   QWORD PTR [rip+0x21452]        # 0x438fcc
  417b7a:	mov    DWORD PTR [rax],0xc
  417b80:	mov    eax,ebx
  417b82:	jmp    0x417960
  417b87:	call   QWORD PTR [rip+0x2143f]        # 0x438fcc
  417b8d:	mov    DWORD PTR [rax],0x16
  417b93:	mov    eax,ebx
  417b95:	jmp    0x417960
  417b9a:	call   QWORD PTR [rip+0x2142c]        # 0x438fcc
  417ba0:	mov    DWORD PTR [rax],0x9
  417ba6:	mov    eax,ebx
  417ba8:	jmp    0x417960
  417bad:	call   QWORD PTR [rip+0x21419]        # 0x438fcc
  417bb3:	mov    DWORD PTR [rax],0x26
  417bb9:	mov    eax,ebx
  417bbb:	jmp    0x417960
  417bc0:	call   QWORD PTR [rip+0x21406]        # 0x438fcc
  417bc6:	mov    DWORD PTR [rax],0x29
  417bcc:	mov    eax,ebx
  417bce:	jmp    0x417960
  417bd3:	call   QWORD PTR [rip+0x213f3]        # 0x438fcc
  417bd9:	mov    DWORD PTR [rax],0x7b
  417bdf:	mov    eax,ebx
  417be1:	jmp    0x417960
  417be6:	call   QWORD PTR [rip+0x213e0]        # 0x438fcc
  417bec:	mov    DWORD PTR [rax],0x75
  417bf2:	mov    eax,ebx
  417bf4:	jmp    0x417960
  417bf9:	call   QWORD PTR [rip+0x213cd]        # 0x438fcc
  417bff:	mov    DWORD PTR [rax],0x6e
  417c05:	mov    eax,ebx
  417c07:	jmp    0x417960
  417c0c:	call   QWORD PTR [rip+0x213ba]        # 0x438fcc
  417c12:	mov    DWORD PTR [rax],0x72
  417c18:	mov    eax,ebx
  417c1a:	jmp    0x417960
  417c1f:	call   QWORD PTR [rip+0x213a7]        # 0x438fcc
  417c25:	mov    DWORD PTR [rax],0x6b
  417c2b:	mov    eax,ebx
  417c2d:	jmp    0x417960
  417c32:	call   QWORD PTR [rip+0x21394]        # 0x438fcc
  417c38:	mov    DWORD PTR [rax],0x8a
  417c3e:	mov    eax,ebx
  417c40:	jmp    0x417960
  417c45:	call   QWORD PTR [rip+0x21381]        # 0x438fcc
  417c4b:	mov    DWORD PTR [rax],0x71
  417c51:	mov    eax,ebx
  417c53:	jmp    0x417960
  417c58:	call   QWORD PTR [rip+0x2136e]        # 0x438fcc
  417c5e:	mov    DWORD PTR [rax],0x88
  417c64:	mov    eax,ebx
  417c66:	jmp    0x417960
  417c6b:	call   QWORD PTR [rip+0x2135b]        # 0x438fcc
  417c71:	mov    DWORD PTR [rax],0x73
  417c77:	mov    eax,ebx
  417c79:	jmp    0x417960
  417c7e:	call   QWORD PTR [rip+0x21348]        # 0x438fcc
  417c84:	mov    DWORD PTR [rax],0x80
  417c8a:	mov    eax,ebx
  417c8c:	jmp    0x417960
  417c91:	call   QWORD PTR [rip+0x21335]        # 0x438fcc
  417c97:	mov    DWORD PTR [rax],0x64
  417c9d:	mov    eax,ebx
  417c9f:	jmp    0x417960
  417ca4:	call   QWORD PTR [rip+0x21322]        # 0x438fcc
  417caa:	mov    DWORD PTR [rax],0x76
  417cb0:	mov    eax,ebx
  417cb2:	jmp    0x417960
  417cb7:	call   QWORD PTR [rip+0x2130f]        # 0x438fcc
  417cbd:	mov    DWORD PTR [rax],0x74
  417cc3:	mov    eax,ebx
  417cc5:	jmp    0x417960
  417cca:	call   QWORD PTR [rip+0x212fc]        # 0x438fcc
  417cd0:	mov    DWORD PTR [rax],0x66
  417cd6:	mov    eax,ebx
  417cd8:	jmp    0x417960
  417cdd:	call   QWORD PTR [rip+0x212e9]        # 0x438fcc
  417ce3:	mov    DWORD PTR [rax],0x82
  417ce9:	mov    eax,ebx
  417ceb:	jmp    0x417960
  417cf0:	call   QWORD PTR [rip+0x212d6]        # 0x438fcc
  417cf6:	mov    DWORD PTR [rax],0x67
  417cfc:	mov    eax,ebx
  417cfe:	jmp    0x417960
  417d03:	call   QWORD PTR [rip+0x212c3]        # 0x438fcc
  417d09:	mov    DWORD PTR [rax],0x70
  417d0f:	mov    eax,ebx
  417d11:	jmp    0x417960
  417d16:	call   QWORD PTR [rip+0x212b0]        # 0x438fcc
  417d1c:	mov    DWORD PTR [rax],0x77
  417d22:	mov    eax,ebx
  417d24:	jmp    0x417960
  417d29:	call   QWORD PTR [rip+0x2129d]        # 0x438fcc
  417d2f:	mov    DWORD PTR [rax],0x6c
  417d35:	mov    eax,ebx
  417d37:	jmp    0x417960
  417d3c:	nop
  417d3d:	nop
  417d3e:	nop
  417d3f:	nop
  417d40:	jmp    0x41b2c0
  417d45:	nop
  417d46:	nop
  417d47:	nop
  417d48:	nop
  417d49:	nop
  417d4a:	nop
  417d4b:	nop
  417d4c:	nop
  417d4d:	nop
  417d4e:	nop
  417d4f:	nop
  417d50:	push   rbp
  417d51:	push   rdi
  417d52:	push   rsi
  417d53:	push   rbx
  417d54:	sub    rsp,0x238
  417d5b:	test   rcx,rcx
  417d5e:	mov    rbp,rcx
  417d61:	je     0x417d83
  417d63:	mov    rbx,QWORD PTR [rip+0x21212]        # 0x438f7c
  417d6a:	call   rbx
  417d6c:	lea    rdx,[rax+0x60]
  417d70:	mov    rcx,rbp
  417d73:	call   0x421e60
  417d78:	call   rbx
  417d7a:	lea    rcx,[rax+0x60]
  417d7e:	call   0x421e80
  417d83:	mov    rsi,QWORD PTR [rip+0x21282]        # 0x43900c
  417d8a:	lea    rdi,[rsp+0x1f]
  417d8f:	xor    ebx,ebx
  417d91:	call   rsi
  417d93:	cmp    eax,0xd
  417d96:	je     0x417db2
  417d98:	add    rbx,0x1
  417d9c:	cmp    rbx,0x200
  417da3:	mov    BYTE PTR [rdi+rbx*1],al
  417da6:	jne    0x417d91
  417da8:	mov    BYTE PTR [rsp+0x220],0x0
  417db0:	jmp    0x417db7
  417db2:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  417db7:	test   rbp,rbp
  417dba:	je     0x417deb
  417dbc:	mov    rbx,QWORD PTR [rip+0x211b9]        # 0x438f7c
  417dc3:	call   rbx
  417dc5:	lea    rcx,[rip+0x14a04]        # 0x42c7d0
  417dcc:	lea    r9,[rax+0x60]
  417dd0:	mov    r8d,0x2
  417dd6:	mov    edx,0x1
  417ddb:	call   0x421e38
  417de0:	call   rbx
  417de2:	lea    rcx,[rax+0x60]
  417de6:	call   0x421e80
  417deb:	lea    rcx,[rsp+0x20]
  417df0:	call   0x41a220
  417df5:	add    rsp,0x238
  417dfc:	pop    rbx
  417dfd:	pop    rsi
  417dfe:	pop    rdi
  417dff:	pop    rbp
  417e00:	ret    
  417e01:	nop
  417e02:	nop
  417e03:	nop
  417e04:	nop
  417e05:	nop
  417e06:	nop
  417e07:	nop
  417e08:	nop
  417e09:	nop
  417e0a:	nop
  417e0b:	nop
  417e0c:	nop
  417e0d:	nop
  417e0e:	nop
  417e0f:	nop
  417e10:	push   rdi
  417e11:	push   rsi
  417e12:	push   rbx
  417e13:	sub    rsp,0x30
  417e17:	mov    rbx,rdx
  417e1a:	mov    rsi,r8
  417e1d:	mov    edi,r9d
  417e20:	call   0x414c80
  417e25:	cmp    rax,0xffffffffffffffff
  417e29:	mov    rcx,rax
  417e2c:	je     0x417f70
  417e32:	mov    rdx,rbx
  417e35:	mov    r9d,edi
  417e38:	mov    r8d,esi
  417e3b:	call   QWORD PTR [rip+0x214eb]        # 0x43932c
  417e41:	test   eax,eax
  417e43:	mov    ebx,eax
  417e45:	js     0x417e52
  417e47:	movsxd rax,ebx
  417e4a:	add    rsp,0x30
  417e4e:	pop    rbx
  417e4f:	pop    rsi
  417e50:	pop    rdi
  417e51:	ret    
  417e52:	call   QWORD PTR [rip+0x2145c]        # 0x4392b4
  417e58:	cmp    eax,0x2740
  417e5d:	mov    esi,eax
  417e5f:	je     0x4180e5
  417e65:	jg     0x417eb0
  417e67:	cmp    eax,0x2736
  417e6c:	je     0x4180c3
  417e72:	jle    0x417f30
  417e78:	cmp    eax,0x273a
  417e7d:	je     0x4180b2
  417e83:	jg     0x417fb2
  417e89:	cmp    eax,0x2738
  417e8e:	je     0x418107
  417e94:	jg     0x4180f6
  417e9a:	call   QWORD PTR [rip+0x2112c]        # 0x438fcc
  417ea0:	mov    DWORD PTR [rax],0x6d
  417ea6:	jmp    0x417e47
  417ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb0:	cmp    eax,0x2748
  417eb5:	je     0x4180d4
  417ebb:	jg     0x417ef0
  417ebd:	cmp    eax,0x2744
  417ec2:	je     0x4180a1
  417ec8:	jg     0x417f90
  417ece:	cmp    eax,0x2742
  417ed3:	je     0x418090
  417ed9:	jg     0x41807f
  417edf:	call   QWORD PTR [rip+0x210e7]        # 0x438fcc
  417ee5:	mov    DWORD PTR [rax],0x65
  417eeb:	jmp    0x417e47
  417ef0:	cmp    eax,0x274e
  417ef5:	je     0x41814b
  417efb:	jg     0x417ff2
  417f01:	cmp    eax,0x274c
  417f06:	je     0x41816d
  417f0c:	jg     0x41815c
  417f12:	cmp    eax,0x2749
  417f17:	jne    0x417fd3
  417f1d:	call   QWORD PTR [rip+0x210a9]        # 0x438fcc
  417f23:	mov    DWORD PTR [rax],0x7e
  417f29:	jmp    0x417e47
  417f2e:	xchg   ax,ax
  417f30:	cmp    eax,0x57
  417f33:	je     0x41803b
  417f39:	jle    0x418020
  417f3f:	cmp    eax,0x2734
  417f44:	je     0x41818f
  417f4a:	jg     0x41817e
  417f50:	cmp    eax,0x2733
  417f55:	jne    0x417fd3
  417f57:	call   QWORD PTR [rip+0x2106f]        # 0x438fcc
  417f5d:	mov    DWORD PTR [rax],0x8c
  417f63:	jmp    0x417e47
  417f68:	nop    DWORD PTR [rax+rax*1+0x0]
  417f70:	mov    QWORD PTR [rsp+0x28],rax
  417f75:	call   QWORD PTR [rip+0x21051]        # 0x438fcc
  417f7b:	mov    rcx,QWORD PTR [rsp+0x28]
  417f80:	mov    DWORD PTR [rax],0x9
  417f86:	mov    rax,rcx
  417f89:	jmp    0x417e4a
  417f8e:	xchg   ax,ax
  417f90:	cmp    eax,0x2746
  417f95:	je     0x418129
  417f9b:	jg     0x418118
  417fa1:	call   QWORD PTR [rip+0x21025]        # 0x438fcc
  417fa7:	mov    DWORD PTR [rax],0x6a
  417fad:	jmp    0x417e47
  417fb2:	cmp    eax,0x273d
  417fb7:	je     0x41806e
  417fbd:	cmp    eax,0x273f
  417fc2:	je     0x41805d
  417fc8:	cmp    eax,0x273b
  417fcd:	je     0x41813a
  417fd3:	call   QWORD PTR [rip+0x20ff3]        # 0x438fcc
  417fd9:	lea    ecx,[rsi-0x2711]
  417fdf:	lea    edx,[rsi-0x2710]
  417fe5:	cmp    ecx,0x17
  417fe8:	cmovbe esi,edx
  417feb:	mov    DWORD PTR [rax],esi
  417fed:	jmp    0x417e47
  417ff2:	cmp    eax,0x2751
  417ff7:	je     0x4181b1
  417ffd:	cmp    eax,0x2752
  418002:	je     0x4181a0
  418008:	cmp    eax,0x274f
  41800d:	jne    0x417fd3
  41800f:	call   QWORD PTR [rip+0x20fb7]        # 0x438fcc
  418015:	mov    DWORD PTR [rax],0x26
  41801b:	jmp    0x417e47
  418020:	cmp    eax,0x6
  418023:	je     0x41804c
  418025:	cmp    eax,0x8
  418028:	jne    0x417fd3
  41802a:	call   QWORD PTR [rip+0x20f9c]        # 0x438fcc
  418030:	mov    DWORD PTR [rax],0xc
  418036:	jmp    0x417e47
  41803b:	call   QWORD PTR [rip+0x20f8b]        # 0x438fcc
  418041:	mov    DWORD PTR [rax],0x16
  418047:	jmp    0x417e47
  41804c:	call   QWORD PTR [rip+0x20f7a]        # 0x438fcc
  418052:	mov    DWORD PTR [rax],0x9
  418058:	jmp    0x417e47
  41805d:	call   QWORD PTR [rip+0x20f69]        # 0x438fcc
  418063:	mov    DWORD PTR [rax],0x66
  418069:	jmp    0x417e47
  41806e:	call   QWORD PTR [rip+0x20f58]        # 0x438fcc
  418074:	mov    DWORD PTR [rax],0x82
  41807a:	jmp    0x417e47
  41807f:	call   QWORD PTR [rip+0x20f47]        # 0x438fcc
  418085:	mov    DWORD PTR [rax],0x76
  41808b:	jmp    0x417e47
  418090:	call   QWORD PTR [rip+0x20f36]        # 0x438fcc
  418096:	mov    DWORD PTR [rax],0x74
  41809c:	jmp    0x417e47
  4180a1:	call   QWORD PTR [rip+0x20f25]        # 0x438fcc
  4180a7:	mov    DWORD PTR [rax],0x75
  4180ad:	jmp    0x417e47
  4180b2:	call   QWORD PTR [rip+0x20f14]        # 0x438fcc
  4180b8:	mov    DWORD PTR [rax],0x7b
  4180be:	jmp    0x417e47
  4180c3:	call   QWORD PTR [rip+0x20f03]        # 0x438fcc
  4180c9:	mov    DWORD PTR [rax],0x80
  4180cf:	jmp    0x417e47
  4180d4:	call   QWORD PTR [rip+0x20ef2]        # 0x438fcc
  4180da:	mov    DWORD PTR [rax],0x71
  4180e0:	jmp    0x417e47
  4180e5:	call   QWORD PTR [rip+0x20ee1]        # 0x438fcc
  4180eb:	mov    DWORD PTR [rax],0x64
  4180f1:	jmp    0x417e47
  4180f6:	call   QWORD PTR [rip+0x20ed0]        # 0x438fcc
  4180fc:	mov    DWORD PTR [rax],0x88
  418102:	jmp    0x417e47
  418107:	call   QWORD PTR [rip+0x20ebf]        # 0x438fcc
  41810d:	mov    DWORD PTR [rax],0x73
  418113:	jmp    0x417e47
  418118:	call   QWORD PTR [rip+0x20eae]        # 0x438fcc
  41811e:	mov    DWORD PTR [rax],0x77
  418124:	jmp    0x417e47
  418129:	call   QWORD PTR [rip+0x20e9d]        # 0x438fcc
  41812f:	mov    DWORD PTR [rax],0x6c
  418135:	jmp    0x417e47
  41813a:	call   QWORD PTR [rip+0x20e8c]        # 0x438fcc
  418140:	mov    DWORD PTR [rax],0x87
  418146:	jmp    0x417e47
  41814b:	call   QWORD PTR [rip+0x20e7b]        # 0x438fcc
  418151:	mov    DWORD PTR [rax],0x72
  418157:	jmp    0x417e47
  41815c:	call   QWORD PTR [rip+0x20e6a]        # 0x438fcc
  418162:	mov    DWORD PTR [rax],0x6b
  418168:	jmp    0x417e47
  41816d:	call   QWORD PTR [rip+0x20e59]        # 0x438fcc
  418173:	mov    DWORD PTR [rax],0x8a
  418179:	jmp    0x417e47
  41817e:	call   QWORD PTR [rip+0x20e48]        # 0x438fcc
  418184:	mov    DWORD PTR [rax],0x67
  41818a:	jmp    0x417e47
  41818f:	call   QWORD PTR [rip+0x20e37]        # 0x438fcc
  418195:	mov    DWORD PTR [rax],0x70
  41819b:	jmp    0x417e47
  4181a0:	call   QWORD PTR [rip+0x20e26]        # 0x438fcc
  4181a6:	mov    DWORD PTR [rax],0x29
  4181ac:	jmp    0x417e47
  4181b1:	call   QWORD PTR [rip+0x20e15]        # 0x438fcc
  4181b7:	mov    DWORD PTR [rax],0x6e
  4181bd:	jmp    0x417e47
  4181c2:	nop
  4181c3:	nop
  4181c4:	nop
  4181c5:	nop
  4181c6:	nop
  4181c7:	nop
  4181c8:	nop
  4181c9:	nop
  4181ca:	nop
  4181cb:	nop
  4181cc:	nop
  4181cd:	nop
  4181ce:	nop
  4181cf:	nop
  4181d0:	push   rbp
  4181d1:	push   r15
  4181d3:	push   r14
  4181d5:	push   r13
  4181d7:	push   r12
  4181d9:	push   rdi
  4181da:	push   rsi
  4181db:	push   rbx
  4181dc:	sub    rsp,0x98
  4181e3:	lea    rbp,[rsp+0x80]
  4181eb:	mov    rdi,QWORD PTR [rbp+0x80]
  4181f2:	mov    r14,rcx
  4181f5:	mov    ebx,edx
  4181f7:	mov    r15,r8
  4181fa:	mov    r13,r9
  4181fd:	call   QWORD PTR [rip+0x20c51]        # 0x438e54
  418203:	cmp    eax,0x2
  418206:	je     0x4182f0
  41820c:	cmp    eax,0x3
  41820f:	je     0x418340
  418215:	cmp    eax,0x1
  418218:	je     0x41822d
  41821a:	xor    edx,edx
  41821c:	mov    rcx,r14
  41821f:	call   QWORD PTR [rip+0x20d17]        # 0x438f3c
  418225:	test   eax,eax
  418227:	jne    0x418319
  41822d:	lea    esi,[rbx+0x7]
  418230:	test   ebx,ebx
  418232:	mov    r10d,ebx
  418235:	mov    r8d,0x1
  41823b:	cmovns esi,ebx
  41823e:	and    r10d,0x7
  418242:	mov    r12d,esi
  418245:	sar    r12d,0x3
  418249:	movsxd r12,r12d
  41824c:	movzx  eax,BYTE PTR [r15+r12*1]
  418251:	bt     eax,r10d
  418255:	jae    0x418330
  41825b:	mov    eax,0x1
  418260:	mov    ecx,r10d
  418263:	xor    edx,edx
  418265:	shl    eax,cl
  418267:	or     BYTE PTR [r15+r12*1+0x8],al
  41826c:	mov    eax,0x1
  418271:	test   r8d,r8d
  418274:	je     0x4182a6
  418276:	lea    esi,[rbx+0x7]
  418279:	test   ebx,ebx
  41827b:	mov    ecx,ebx
  41827d:	cmovns esi,ebx
  418280:	and    ecx,0x7
  418283:	sar    esi,0x3
  418286:	movsxd rsi,esi
  418289:	movzx  r8d,BYTE PTR [r13+rsi*1+0x0]
  41828f:	bt     r8d,ecx
  418293:	jae    0x4182a6
  418295:	mov    r8d,0x1
  41829b:	add    eax,0x1
  41829e:	shl    r8d,cl
  4182a1:	or     BYTE PTR [r13+rsi*1+0x8],r8b
  4182a6:	test   edx,edx
  4182a8:	je     0x4182d7
  4182aa:	lea    edx,[rbx+0x7]
  4182ad:	test   ebx,ebx
  4182af:	cmovns edx,ebx
  4182b2:	and    ebx,0x7
  4182b5:	sar    edx,0x3
  4182b8:	movsxd rdx,edx
  4182bb:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  4182bf:	bt     ecx,ebx
  4182c2:	jae    0x4182d7
  4182c4:	mov    r8d,0x1
  4182ca:	mov    ecx,ebx
  4182cc:	add    eax,0x1
  4182cf:	shl    r8d,cl
  4182d2:	or     BYTE PTR [rdi+rdx*1+0x8],r8b
  4182d7:	lea    rsp,[rbp+0x18]
  4182db:	pop    rbx
  4182dc:	pop    rsi
  4182dd:	pop    rdi
  4182de:	pop    r12
  4182e0:	pop    r13
  4182e2:	pop    r14
  4182e4:	pop    r15
  4182e6:	pop    rbp
  4182e7:	ret    
  4182e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4182f0:	lea    esi,[rbx+0x7]
  4182f3:	test   ebx,ebx
  4182f5:	mov    r12d,ebx
  4182f8:	mov    r10d,ebx
  4182fb:	cmovs  r12d,esi
  4182ff:	and    r10d,0x7
  418303:	sar    r12d,0x3
  418307:	movsxd rax,r12d
  41830a:	movzx  eax,BYTE PTR [r15+rax*1]
  41830f:	bt     eax,r10d
  418313:	jb     0x4183d3
  418319:	xor    edx,edx
  41831b:	mov    r8d,0x1
  418321:	xor    eax,eax
  418323:	jmp    0x418271
  418328:	nop    DWORD PTR [rax+rax*1+0x0]
  418330:	xor    edx,edx
  418332:	xor    eax,eax
  418334:	jmp    0x418271
  418339:	nop    DWORD PTR [rax+0x0]
  418340:	mov    edx,DWORD PTR [rip+0x1cb52]        # 0x434e98
  418346:	test   edx,edx
  418348:	je     0x4183a0
  41834a:	lea    rax,[rbp-0x38]
  41834e:	xor    r9d,r9d
  418351:	xor    r8d,r8d
  418354:	xor    edx,edx
  418356:	mov    QWORD PTR [rsp+0x28],0x0
  41835f:	mov    rcx,r14
  418362:	mov    QWORD PTR [rsp+0x20],rax
  418367:	call   QWORD PTR [rip+0x20b5f]        # 0x438ecc
  41836d:	test   eax,eax
  41836f:	je     0x418450
  418375:	mov    eax,DWORD PTR [rbp-0x38]
  418378:	test   eax,eax
  41837a:	je     0x418500
  418380:	lea    esi,[rbx+0x7]
  418383:	test   ebx,ebx
  418385:	mov    r10d,ebx
  418388:	cmovns esi,ebx
  41838b:	and    r10d,0x7
  41838f:	xor    r8d,r8d
  418392:	mov    r12d,esi
  418395:	sar    r12d,0x3
  418399:	jmp    0x418249
  41839e:	xchg   ax,ax
  4183a0:	lea    rcx,[rip+0x14439]        # 0x42c7e0
  4183a7:	call   QWORD PTR [rip+0x20abf]        # 0x438e6c
  4183ad:	lea    rdx,[rip+0x14436]        # 0x42c7ea
  4183b4:	mov    rcx,rax
  4183b7:	call   QWORD PTR [rip+0x20ac7]        # 0x438e84
  4183bd:	mov    DWORD PTR [rip+0x1cad1],0x1        # 0x434e98
  4183c7:	mov    QWORD PTR [rip+0x1cac2],rax        # 0x434e90
  4183ce:	jmp    0x41834a
  4183d3:	xor    edx,edx
  4183d5:	mov    DWORD PTR [rbp-0x48],r10d
  4183d9:	mov    rcx,r14
  4183dc:	call   QWORD PTR [rip+0x20b5a]        # 0x438f3c
  4183e2:	test   eax,eax
  4183e4:	jne    0x418319
  4183ea:	lea    rdx,[rbp-0x20]
  4183ee:	mov    rcx,r14
  4183f1:	call   QWORD PTR [rip+0x20a35]        # 0x438e2c
  4183f7:	test   eax,eax
  4183f9:	mov    r8d,0x1
  4183ff:	mov    r10d,DWORD PTR [rbp-0x48]
  418403:	je     0x418249
  418409:	mov    DWORD PTR [rbp-0x38],0x0
  418410:	mov    DWORD PTR [rbp-0x34],0x0
  418417:	lea    rdx,[rbp-0x34]
  41841b:	mov    rcx,r14
  41841e:	call   QWORD PTR [rip+0x20a58]        # 0x438e7c
  418424:	test   eax,eax
  418426:	mov    r10d,DWORD PTR [rbp-0x48]
  41842a:	je     0x41850c
  418430:	mov    r8d,DWORD PTR [rbp-0x34]
  418434:	test   r8d,r8d
  418437:	jne    0x41852e
  41843d:	mov    edx,0x1
  418442:	mov    r8d,0x1
  418448:	xor    eax,eax
  41844a:	jmp    0x418271
  41844f:	nop
  418450:	call   QWORD PTR [rip+0x20a06]        # 0x438e5c
  418456:	cmp    eax,0x6d
  418459:	je     0x418500
  41845f:	mov    rax,QWORD PTR [rip+0x1ca2a]        # 0x434e90
  418466:	lea    rdx,[rbp-0x30]
  41846a:	mov    QWORD PTR [rbp-0x30],0x0
  418472:	mov    QWORD PTR [rbp-0x28],0x0
  41847a:	lea    r8,[rbp-0x20]
  41847e:	mov    QWORD PTR [rbp-0x20],0x0
  418486:	mov    QWORD PTR [rbp-0x18],0x0
  41848e:	mov    QWORD PTR [rbp-0x10],0x0
  418496:	test   rax,rax
  418499:	mov    QWORD PTR [rbp-0x8],0x0
  4184a1:	mov    QWORD PTR [rbp+0x0],0x0
  4184a9:	je     0x418319
  4184af:	mov    DWORD PTR [rsp+0x20],0x18
  4184b7:	mov    r9d,0x28
  4184bd:	mov    rcx,r14
  4184c0:	call   rax
  4184c2:	test   eax,eax
  4184c4:	jne    0x418319
  4184ca:	mov    eax,DWORD PTR [rbp-0x4]
  4184cd:	cmp    eax,0x1ff
  4184d2:	ja     0x418319
  4184d8:	mov    edx,DWORD PTR [rbp-0x8]
  4184db:	cmp    edx,0x1ff
  4184e1:	setbe  cl
  4184e4:	xor    r8d,r8d
  4184e7:	cmp    eax,edx
  4184e9:	sete   r8b
  4184ed:	xor    edx,edx
  4184ef:	xor    eax,eax
  4184f1:	and    r8d,ecx
  4184f4:	jmp    0x418271
  4184f9:	nop    DWORD PTR [rax+0x0]
  418500:	xor    edx,edx
  418502:	xor    r8d,r8d
  418505:	xor    eax,eax
  418507:	jmp    0x418271
  41850c:	lea    rdx,[rip+0x142ee]        # 0x42c801
  418513:	lea    rcx,[rip+0x142f0]        # 0x42c80a
  41851a:	mov    r8d,0xbf
  418520:	call   0x41cfe0
  418525:	mov    r10d,DWORD PTR [rbp-0x48]
  418529:	jmp    0x418430
  41852e:	mov    eax,r8d
  418531:	mov    DWORD PTR [rbp-0x4c],r10d
  418535:	lea    rax,[rax+rax*4]
  418539:	lea    rax,[rax*4+0x1e]
  418541:	shr    rax,0x4
  418545:	shl    rax,0x4
  418549:	call   0x41c880
  41854e:	sub    rsp,rax
  418551:	lea    r9,[rbp-0x38]
  418555:	mov    rcx,r14
  418558:	lea    r11,[rsp+0x30]
  41855d:	mov    rdx,r11
  418560:	mov    QWORD PTR [rbp-0x48],r11
  418564:	call   QWORD PTR [rip+0x2095a]        # 0x438ec4
  41856a:	test   eax,eax
  41856c:	mov    r11,QWORD PTR [rbp-0x48]
  418570:	mov    r10d,DWORD PTR [rbp-0x4c]
  418574:	je     0x41843d
  41857a:	mov    edx,DWORD PTR [rbp-0x38]
  41857d:	test   edx,edx
  41857f:	je     0x41843d
  418585:	lea    ecx,[rdx-0x1]
  418588:	mov    rax,r11
  41858b:	xor    edx,edx
  41858d:	mov    r8d,0x1
  418593:	add    rcx,0x1
  418597:	imul   rcx,rcx,0x14
  41859b:	add    rcx,r11
  41859e:	cmp    WORD PTR [rax],0x1
  4185a2:	cmove  edx,r8d
  4185a6:	add    rax,0x14
  4185aa:	cmp    rax,rcx
  4185ad:	jne    0x41859e
  4185af:	xor    eax,eax
  4185b1:	test   edx,edx
  4185b3:	mov    r8d,0x1
  4185b9:	jne    0x418249
  4185bf:	jmp    0x418279
  4185c4:	xchg   ax,ax
  4185c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185d0:	push   rbp
  4185d1:	push   r15
  4185d3:	push   r14
  4185d5:	push   r13
  4185d7:	push   r12
  4185d9:	push   rdi
  4185da:	push   rsi
  4185db:	push   rbx
  4185dc:	sub    rsp,0x948
  4185e3:	lea    rbp,[rsp+0x80]
  4185eb:	mov    eax,0x40
  4185f0:	cmp    ecx,0x40
  4185f3:	mov    r14,rdx
  4185f6:	mov    QWORD PTR [rbp+0x920],r8
  4185fd:	cmovle eax,ecx
  418600:	cmp    QWORD PTR [rbp+0x930],0x0
  418608:	mov    QWORD PTR [rbp+0x928],r9
  41860f:	mov    DWORD PTR [rbp-0x10],eax
  418612:	je     0x4191fb
  418618:	mov    rax,QWORD PTR [rbp+0x930]
  41861f:	mov    edx,0x10624dd3
  418624:	mov    rdi,QWORD PTR [rbp+0x930]
  41862b:	mov    ecx,DWORD PTR [rax+0x8]
  41862e:	mov    eax,ecx
  418630:	sar    ecx,0x1f
  418633:	imul   edx
  418635:	sar    edx,0x6
  418638:	mov    eax,edx
  41863a:	imul   edx,DWORD PTR [rdi],0x3e8
  418640:	sub    eax,ecx
  418642:	add    eax,edx
  418644:	test   r8,r8
  418647:	sete   dl
  41864a:	test   r9,r9
  41864d:	mov    DWORD PTR [rbp-0xc],eax
  418650:	sete   al
  418653:	test   dl,al
  418655:	je     0x418660
  418657:	test   r14,r14
  41865a:	je     0x41929b
  418660:	mov    rax,QWORD PTR [rip+0x1c841]        # 0x434ea8
  418667:	test   rax,rax
  41866a:	je     0x419212
  418670:	test   r14,r14
  418673:	mov    QWORD PTR [rbp+0x6b0],rax
  41867a:	mov    QWORD PTR [rbp+0x20],0x0
  418682:	mov    QWORD PTR [rbp+0x28],0x0
  41868a:	mov    QWORD PTR [rbp+0x30],0x0
  418692:	mov    QWORD PTR [rbp+0x38],0x0
  41869a:	mov    QWORD PTR [rbp+0x40],0x0
  4186a2:	mov    QWORD PTR [rbp+0x48],0x0
  4186aa:	mov    QWORD PTR [rbp+0x10],0x0
  4186b2:	je     0x419269
  4186b8:	mov    r9d,DWORD PTR [r14]
  4186bb:	test   r9d,r9d
  4186be:	je     0x418745
  4186c4:	lea    rax,[rbp+0xc]
  4186c8:	xor    r15d,r15d
  4186cb:	lea    rdi,[rbp+0x4a0]
  4186d2:	mov    rsi,QWORD PTR [rip+0x20753]        # 0x438e2c
  4186d9:	mov    r12d,0x1
  4186df:	mov    QWORD PTR [rbp-0x8],rax
  4186e3:	jmp    0x41870d
  4186e5:	lea    eax,[rbx+0x7]
  4186e8:	test   ebx,ebx
  4186ea:	mov    ecx,ebx
  4186ec:	mov    edx,r12d
  4186ef:	cmovns eax,ebx
  4186f2:	and    ecx,0x7
  4186f5:	add    r15d,0x1
  4186f9:	sar    eax,0x3
  4186fc:	shl    edx,cl
  4186fe:	cdqe   
  418700:	or     BYTE PTR [rbp+rax*1+0x20],dl
  418704:	or     BYTE PTR [rbp+rax*1+0x10],dl
  418708:	cmp    r15d,DWORD PTR [r14]
  41870b:	jae    0x418745
  41870d:	movsxd rax,r15d
  418710:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
  418715:	mov    ecx,ebx
  418717:	call   0x414c80
  41871c:	mov    rdx,rdi
  41871f:	mov    r13,rax
  418722:	mov    rcx,rax
  418725:	call   rsi
  418727:	test   eax,eax
  418729:	je     0x4186e5
  41872b:	mov    rdx,QWORD PTR [rbp-0x8]
  41872f:	mov    rcx,r13
  418732:	call   QWORD PTR [rip+0x20744]        # 0x438e7c
  418738:	test   eax,eax
  41873a:	jne    0x4186e5
  41873c:	add    r15d,0x1
  418740:	cmp    r15d,DWORD PTR [r14]
  418743:	jb     0x41870d
  418745:	cmp    QWORD PTR [rbp+0x920],0x0
  41874d:	je     0x419283
  418753:	mov    rax,QWORD PTR [rbp+0x920]
  41875a:	mov    r8d,DWORD PTR [rax]
  41875d:	test   r8d,r8d
  418760:	je     0x41880c
  418766:	lea    rax,[rbp+0xc]
  41876a:	xor    r15d,r15d
  41876d:	mov    QWORD PTR [rbp+0x918],r14
  418774:	lea    rdi,[rbp+0x4a0]
  41877b:	mov    rsi,QWORD PTR [rip+0x206aa]        # 0x438e2c
  418782:	mov    r12d,0x1
  418788:	mov    QWORD PTR [rbp-0x8],rax
  41878c:	mov    r14d,r15d
  41878f:	mov    rbx,QWORD PTR [rbp+0x920]
  418796:	jmp    0x4187cc
  418798:	nop    DWORD PTR [rax+rax*1+0x0]
  4187a0:	lea    eax,[r13+0x7]
  4187a4:	test   r13d,r13d
  4187a7:	mov    ecx,r13d
  4187aa:	mov    edx,r12d
  4187ad:	cmovns eax,r13d
  4187b1:	and    ecx,0x7
  4187b4:	add    r14d,0x1
  4187b8:	sar    eax,0x3
  4187bb:	shl    edx,cl
  4187bd:	cdqe   
  4187bf:	or     BYTE PTR [rbp+rax*1+0x30],dl
  4187c3:	or     BYTE PTR [rbp+rax*1+0x10],dl
  4187c7:	cmp    r14d,DWORD PTR [rbx]
  4187ca:	jae    0x418805
  4187cc:	movsxd rax,r14d
  4187cf:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
  4187d4:	mov    ecx,r13d
  4187d7:	call   0x414c80
  4187dc:	mov    rdx,rdi
  4187df:	mov    r15,rax
  4187e2:	mov    rcx,rax
  4187e5:	call   rsi
  4187e7:	test   eax,eax
  4187e9:	je     0x4187a0
  4187eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4187ef:	mov    rcx,r15
  4187f2:	call   QWORD PTR [rip+0x20684]        # 0x438e7c
  4187f8:	test   eax,eax
  4187fa:	je     0x4187a0
  4187fc:	add    r14d,0x1
  418800:	cmp    r14d,DWORD PTR [rbx]
  418803:	jb     0x4187cc
  418805:	mov    r14,QWORD PTR [rbp+0x918]
  41880c:	cmp    QWORD PTR [rbp+0x928],0x0
  418814:	je     0x419251
  41881a:	mov    rax,QWORD PTR [rbp+0x928]
  418821:	mov    eax,DWORD PTR [rax]
  418823:	test   eax,eax
  418825:	je     0x41886b
  418827:	mov    rdi,QWORD PTR [rbp+0x928]
  41882e:	sub    eax,0x1
  418831:	mov    r8d,0x1
  418837:	lea    rdx,[rdi+0x8]
  41883b:	lea    r9,[rdi+rax*8+0x10]
  418840:	mov    rcx,QWORD PTR [rdx]
  418843:	mov    edi,r8d
  418846:	lea    eax,[rcx+0x7]
  418849:	test   ecx,ecx
  41884b:	cmovns eax,ecx
  41884e:	and    ecx,0x7
  418851:	add    rdx,0x8
  418855:	sar    eax,0x3
  418858:	shl    edi,cl
  41885a:	cdqe   
  41885c:	or     BYTE PTR [rbp+rax*1+0x40],dil
  418861:	or     BYTE PTR [rbp+rax*1+0x10],dil
  418866:	cmp    rdx,r9
  418869:	jne    0x418840
  41886b:	mov    rax,QWORD PTR [rbp+0x920]
  418872:	mov    DWORD PTR [r14],0x0
  418879:	mov    DWORD PTR [rbp+0x80],0x0
  418883:	mov    DWORD PTR [rbp+0x290],0x0
  41888d:	mov    DWORD PTR [rbp+0x4a0],0x0
  418897:	mov    DWORD PTR [rax],0x0
  41889d:	mov    rax,QWORD PTR [rbp+0x928]
  4188a4:	mov    DWORD PTR [rax],0x0
  4188aa:	mov    eax,DWORD PTR [rbp-0x10]
  4188ad:	test   eax,eax
  4188af:	jle    0x4192ab
  4188b5:	lea    rbx,[rbp+0x50]
  4188b9:	xor    esi,esi
  4188bb:	mov    r15d,0x1
  4188c1:	mov    DWORD PTR [rbp-0x18],esi
  4188c4:	mov    r12d,eax
  4188c7:	mov    QWORD PTR [rbp-0x8],rbx
  4188cb:	lea    rbx,[rbp+0x30]
  4188cf:	mov    QWORD PTR [rbp-0x20],rbx
  4188d3:	lea    rbx,[rbp+0x20]
  4188d7:	mov    QWORD PTR [rbp-0x28],rbx
  4188db:	jmp    0x4188ec
  4188dd:	nop    DWORD PTR [rax]
  4188e0:	add    esi,0x1
  4188e3:	cmp    esi,r12d
  4188e6:	je     0x41897b
  4188ec:	mov    r9d,esi
  4188ef:	mov    r13d,esi
  4188f2:	sar    r9d,0x3
  4188f6:	and    r13d,0x7
  4188fa:	movsxd rdi,r9d
  4188fd:	movzx  eax,BYTE PTR [rbp+rdi*1+0x10]
  418902:	bt     eax,r13d
  418906:	jae    0x4188e0
  418908:	mov    ecx,esi
  41890a:	call   0x414c80
  41890f:	test   rax,rax
  418912:	mov    rbx,rax
  418915:	je     0x4191ab
  41891b:	mov    rdx,QWORD PTR [rbp-0x8]
  41891f:	mov    rcx,rax
  418922:	call   QWORD PTR [rip+0x20504]        # 0x438e2c
  418928:	test   eax,eax
  41892a:	je     0x418a67
  418930:	mov    ecx,DWORD PTR [rbp-0xc]
  418933:	mov    eax,r15d
  418936:	add    r15d,0x1
  41893a:	mov    QWORD PTR [rbp+rax*8+0x6b0],rbx
  418942:	test   ecx,ecx
  418944:	je     0x4188e0
  418946:	lea    rax,[rbp+0x40]
  41894a:	mov    r9,QWORD PTR [rbp-0x20]
  41894e:	mov    r8,QWORD PTR [rbp-0x28]
  418952:	mov    edx,esi
  418954:	mov    rcx,rbx
  418957:	mov    QWORD PTR [rsp+0x20],rax
  41895c:	call   0x4181d0
  418961:	test   eax,eax
  418963:	mov    eax,0x0
  418968:	cmove  eax,DWORD PTR [rbp-0xc]
  41896c:	add    esi,0x1
  41896f:	cmp    esi,r12d
  418972:	mov    DWORD PTR [rbp-0xc],eax
  418975:	jne    0x4188ec
  41897b:	mov    esi,DWORD PTR [rbp-0x18]
  41897e:	test   esi,esi
  418980:	sete   BYTE PTR [rbp-0x20]
  418984:	setne  BYTE PTR [rbp-0x41]
  418988:	mov    edi,DWORD PTR [rbp-0xc]
  41898b:	mov    eax,r15d
  41898e:	mov    QWORD PTR [rbp+rax*8+0x6b0],0x0
  41899a:	cmp    edi,0xffffffff
  41899d:	je     0x4189ab
  41899f:	call   0x421ea0
  4189a4:	mov    ebx,eax
  4189a6:	add    ebx,edi
  4189a8:	mov    DWORD PTR [rbp-0x48],ebx
  4189ab:	mov    QWORD PTR [rbp+0x918],r14
  4189b2:	mov    r14d,DWORD PTR [rbp-0xc]
  4189b6:	lea    rax,[rbp+0x6b0]
  4189bd:	mov    rbx,QWORD PTR [rip+0x208c0]        # 0x439284
  4189c4:	mov    r13,QWORD PTR [rip+0x208c1]        # 0x43928c
  4189cb:	mov    QWORD PTR [rbp-0x28],rax
  4189cf:	mov    rax,QWORD PTR [rip+0x2095e]        # 0x439334
  4189d6:	test   r14d,r14d
  4189d9:	mov    r12,QWORD PTR [rip+0x2088c]        # 0x43926c
  4189e0:	sete   dil
  4189e4:	or     dil,BYTE PTR [rbp-0x20]
  4189e8:	mov    QWORD PTR [rbp-0x50],rax
  4189ec:	je     0x418e45
  4189f2:	cmp    r14d,0xffffffff
  4189f6:	mov    edi,0x1
  4189fb:	mov    DWORD PTR [rbp-0xc],0x0
  418a02:	jne    0x418e92
  418a08:	mov    BYTE PTR [rbp-0x8],dil
  418a0c:	mov    rdi,QWORD PTR [rbp-0x28]
  418a10:	lea    rsi,[rbp+0x50]
  418a14:	xor    r8d,r8d
  418a17:	mov    DWORD PTR [rsp+0x20],0x4ff
  418a1f:	mov    r9d,r14d
  418a22:	mov    rdx,rdi
  418a25:	mov    ecx,r15d
  418a28:	call   QWORD PTR [rip+0x2084e]        # 0x43927c
  418a2e:	cmp    eax,r15d
  418a31:	jne    0x418cb2
  418a37:	nop    WORD PTR [rax+rax*1+0x0]
  418a40:	xor    r9d,r9d
  418a43:	xor    r8d,r8d
  418a46:	xor    edx,edx
  418a48:	mov    DWORD PTR [rsp+0x20],0x1
  418a50:	mov    rcx,rsi
  418a53:	call   rbx
  418a55:	test   eax,eax
  418a57:	je     0x418a14
  418a59:	mov    rcx,rsi
  418a5c:	call   r13
  418a5f:	mov    rcx,rsi
  418a62:	call   r12
  418a65:	jmp    0x418a40
  418a67:	xor    edx,edx
  418a69:	mov    DWORD PTR [rbp+0x50],0xdeadbeef
  418a70:	mov    r8,QWORD PTR [rbp-0x8]
  418a74:	mov    rcx,rbx
  418a77:	call   QWORD PTR [rip+0x20827]        # 0x4392a4
  418a7d:	cmp    DWORD PTR [rbp+0x50],0xdeadbeef
  418a84:	je     0x418930
  418a8a:	movzx  eax,BYTE PTR [rbp+rdi*1+0x20]
  418a8f:	mov    r8d,0x20
  418a95:	bt     eax,r13d
  418a99:	jae    0x418b39
  418a9f:	mov    ecx,DWORD PTR [r14]
  418aa2:	test   ecx,ecx
  418aa4:	je     0x418aca
  418aa6:	cmp    rbx,QWORD PTR [r14+0x8]
  418aaa:	je     0x418ad7
  418aac:	lea    rdx,[r14+0x10]
  418ab0:	xor    eax,eax
  418ab2:	jmp    0x418abe
  418ab4:	add    rdx,0x8
  418ab8:	cmp    QWORD PTR [rdx-0x8],rbx
  418abc:	je     0x418ad7
  418abe:	add    eax,0x1
  418ac1:	cmp    eax,ecx
  418ac3:	jne    0x418ab4
  418ac5:	cmp    ecx,0x3f
  418ac8:	ja     0x418ad7
  418aca:	mov    eax,ecx
  418acc:	add    ecx,0x1
  418acf:	mov    QWORD PTR [r14+rax*8+0x8],rbx
  418ad4:	mov    DWORD PTR [r14],ecx
  418ad7:	mov    ecx,DWORD PTR [rbp+0x80]
  418add:	test   ecx,ecx
  418adf:	je     0x418b20
  418ae1:	cmp    rbx,QWORD PTR [rbp+0x88]
  418ae8:	je     0x4191a0
  418aee:	lea    rdx,[rbp+0x90]
  418af5:	xor    eax,eax
  418af7:	jmp    0x418b0e
  418af9:	nop    DWORD PTR [rax+0x0]
  418b00:	add    rdx,0x8
  418b04:	cmp    QWORD PTR [rdx-0x8],rbx
  418b08:	je     0x4191a0
  418b0e:	add    eax,0x1
  418b11:	cmp    eax,ecx
  418b13:	jne    0x418b00
  418b15:	cmp    ecx,0x3f
  418b18:	mov    r8d,0x29
  418b1e:	ja     0x418b39
  418b20:	mov    eax,ecx
  418b22:	add    ecx,0x1
  418b25:	mov    r8d,0x29
  418b2b:	mov    QWORD PTR [rbp+rax*8+0x88],rbx
  418b33:	mov    DWORD PTR [rbp+0x80],ecx
  418b39:	movzx  eax,BYTE PTR [rbp+rdi*1+0x30]
  418b3e:	bt     eax,r13d
  418b42:	jae    0x418be9
  418b48:	mov    rax,QWORD PTR [rbp+0x920]
  418b4f:	or     r8d,0x12
  418b53:	mov    ecx,DWORD PTR [rax]
  418b55:	test   ecx,ecx
  418b57:	je     0x418b86
  418b59:	cmp    rbx,QWORD PTR [rax+0x8]
  418b5d:	je     0x418b99
  418b5f:	lea    rdx,[rax+0x10]
  418b63:	xor    eax,eax
  418b65:	jmp    0x418b7a
  418b67:	nop    WORD PTR [rax+rax*1+0x0]
  418b70:	add    rdx,0x8
  418b74:	cmp    QWORD PTR [rdx-0x8],rbx
  418b78:	je     0x418b99
  418b7a:	add    eax,0x1
  418b7d:	cmp    eax,ecx
  418b7f:	jne    0x418b70
  418b81:	cmp    ecx,0x3f
  418b84:	ja     0x418b99
  418b86:	mov    rdx,QWORD PTR [rbp+0x920]
  418b8d:	mov    eax,ecx
  418b8f:	add    ecx,0x1
  418b92:	mov    QWORD PTR [rdx+rax*8+0x8],rbx
  418b97:	mov    DWORD PTR [rdx],ecx
  418b99:	mov    ecx,DWORD PTR [rbp+0x290]
  418b9f:	test   ecx,ecx
  418ba1:	je     0x418bd6
  418ba3:	cmp    rbx,QWORD PTR [rbp+0x298]
  418baa:	je     0x418be9
  418bac:	lea    rdx,[rbp+0x2a0]
  418bb3:	xor    eax,eax
  418bb5:	jmp    0x418bca
  418bb7:	nop    WORD PTR [rax+rax*1+0x0]
  418bc0:	add    rdx,0x8
  418bc4:	cmp    QWORD PTR [rdx-0x8],rbx
  418bc8:	je     0x418be9
  418bca:	add    eax,0x1
  418bcd:	cmp    eax,ecx
  418bcf:	jne    0x418bc0
  418bd1:	cmp    ecx,0x3f
  418bd4:	ja     0x418be9
  418bd6:	mov    eax,ecx
  418bd8:	add    ecx,0x1
  418bdb:	mov    QWORD PTR [rbp+rax*8+0x298],rbx
  418be3:	mov    DWORD PTR [rbp+0x290],ecx
  418be9:	movzx  eax,BYTE PTR [rbp+rdi*1+0x40]
  418bee:	bt     eax,r13d
  418bf2:	jae    0x418c99
  418bf8:	mov    rax,QWORD PTR [rbp+0x928]
  418bff:	or     r8d,0x4
  418c03:	mov    ecx,DWORD PTR [rax]
  418c05:	test   ecx,ecx
  418c07:	je     0x418c36
  418c09:	cmp    rbx,QWORD PTR [rax+0x8]
  418c0d:	je     0x418c49
  418c0f:	lea    rdx,[rax+0x10]
  418c13:	xor    eax,eax
  418c15:	jmp    0x418c2a
  418c17:	nop    WORD PTR [rax+rax*1+0x0]
  418c20:	add    rdx,0x8
  418c24:	cmp    QWORD PTR [rdx-0x8],rbx
  418c28:	je     0x418c49
  418c2a:	add    eax,0x1
  418c2d:	cmp    eax,ecx
  418c2f:	jne    0x418c20
  418c31:	cmp    ecx,0x3f
  418c34:	ja     0x418c49
  418c36:	mov    rdi,QWORD PTR [rbp+0x928]
  418c3d:	mov    eax,ecx
  418c3f:	add    ecx,0x1
  418c42:	mov    QWORD PTR [rdi+rax*8+0x8],rbx
  418c47:	mov    DWORD PTR [rdi],ecx
  418c49:	mov    ecx,DWORD PTR [rbp+0x4a0]
  418c4f:	test   ecx,ecx
  418c51:	je     0x418c86
  418c53:	cmp    rbx,QWORD PTR [rbp+0x4a8]
  418c5a:	je     0x418c99
  418c5c:	lea    rdx,[rbp+0x4b0]
  418c63:	xor    eax,eax
  418c65:	jmp    0x418c7a
  418c67:	nop    WORD PTR [rax+rax*1+0x0]
  418c70:	add    rdx,0x8
  418c74:	cmp    QWORD PTR [rdx-0x8],rbx
  418c78:	je     0x418c99
  418c7a:	add    eax,0x1
  418c7d:	cmp    eax,ecx
  418c7f:	jne    0x418c70
  418c81:	cmp    ecx,0x3f
  418c84:	ja     0x418c99
  418c86:	mov    eax,ecx
  418c88:	add    ecx,0x1
  418c8b:	mov    QWORD PTR [rbp+rax*8+0x4a8],rbx
  418c93:	mov    DWORD PTR [rbp+0x4a0],ecx
  418c99:	mov    rdx,QWORD PTR [rip+0x1c208]        # 0x434ea8
  418ca0:	mov    rcx,rbx
  418ca3:	call   QWORD PTR [rip+0x20603]        # 0x4392ac
  418ca9:	add    DWORD PTR [rbp-0x18],0x1
  418cad:	jmp    0x4188e0
  418cb2:	movzx  edi,BYTE PTR [rbp-0x8]
  418cb6:	test   dil,dil
  418cb9:	je     0x418ced
  418cbb:	cmp    BYTE PTR [rbp-0x41],0x0
  418cbf:	je     0x418ced
  418cc1:	lea    rax,[rip+0x1c1d4]        # 0x434e9c
  418cc8:	lea    rdx,[rbp+0x80]
  418ccf:	lea    r9,[rbp+0x4a0]
  418cd6:	lea    r8,[rbp+0x290]
  418cdd:	xor    ecx,ecx
  418cdf:	mov    QWORD PTR [rsp+0x20],rax
  418ce4:	mov    rax,QWORD PTR [rbp-0x50]
  418ce8:	call   rax
  418cea:	mov    DWORD PTR [rbp-0xc],eax
  418ced:	cmp    r15d,0x1
  418cf1:	jbe    0x418ef7
  418cf7:	mov    eax,DWORD PTR [rbp-0x10]
  418cfa:	test   eax,eax
  418cfc:	jle    0x418ee6
  418d02:	lea    rdi,[rbp+0x30]
  418d06:	mov    r15d,0x1
  418d0c:	xor    esi,esi
  418d0e:	mov    DWORD PTR [rbp-0x18],r14d
  418d12:	mov    DWORD PTR [rbp-0x8],r15d
  418d16:	mov    QWORD PTR [rbp-0x30],rdi
  418d1a:	lea    rdi,[rbp+0x20]
  418d1e:	mov    QWORD PTR [rbp-0x38],rdi
  418d22:	lea    rdi,[rbp+0x40]
  418d26:	mov    QWORD PTR [rbp-0x40],rdi
  418d2a:	mov    edi,eax
  418d2c:	jmp    0x418d37
  418d2e:	xchg   ax,ax
  418d30:	add    esi,0x1
  418d33:	cmp    esi,edi
  418d35:	je     0x418db6
  418d37:	mov    r10d,esi
  418d3a:	mov    r14d,esi
  418d3d:	sar    r10d,0x3
  418d41:	and    r14d,0x7
  418d45:	movsxd r15,r10d
  418d48:	movzx  eax,BYTE PTR [rbp+r15*1+0x10]
  418d4e:	bt     eax,r14d
  418d52:	jae    0x418d30
  418d54:	mov    ecx,esi
  418d56:	call   0x414c80
  418d5b:	mov    edx,DWORD PTR [rbp-0x8]
  418d5e:	mov    rcx,QWORD PTR [rbp+rdx*8+0x6b0]
  418d66:	cmp    rcx,rax
  418d69:	jne    0x418d30
  418d6b:	mov    rax,QWORD PTR [rbp-0x40]
  418d6f:	mov    r9,QWORD PTR [rbp-0x30]
  418d73:	mov    edx,esi
  418d75:	mov    r8,QWORD PTR [rbp-0x38]
  418d79:	add    DWORD PTR [rbp-0x8],0x1
  418d7d:	mov    QWORD PTR [rsp+0x20],rax
  418d82:	call   0x4181d0
  418d87:	movzx  eax,BYTE PTR [rbp+r15*1+0x28]
  418d8d:	bt     eax,r14d
  418d91:	jb     0x418dab
  418d93:	movzx  eax,BYTE PTR [rbp+r15*1+0x38]
  418d99:	bt     eax,r14d
  418d9d:	jb     0x418dab
  418d9f:	movzx  eax,BYTE PTR [rbp+r15*1+0x48]
  418da5:	bt     eax,r14d
  418da9:	jae    0x418d30
  418dab:	add    esi,0x1
  418dae:	add    DWORD PTR [rbp-0xc],0x1
  418db2:	cmp    esi,edi
  418db4:	jne    0x418d37
  418db6:	mov    edx,DWORD PTR [rbp-0xc]
  418db9:	mov    r14d,DWORD PTR [rbp-0x18]
  418dbd:	mov    r15d,DWORD PTR [rbp-0x8]
  418dc1:	test   edx,edx
  418dc3:	jne    0x418ef7
  418dc9:	cmp    r14d,0xffffffff
  418dcd:	je     0x418de2
  418dcf:	cmp    r15d,0x1
  418dd3:	jbe    0x4191c1
  418dd9:	test   r14d,r14d
  418ddc:	je     0x4191c1
  418de2:	lea    rax,[rbp+0x80]
  418de9:	mov    rsi,QWORD PTR [rbp+0x918]
  418df0:	mov    ecx,0x41
  418df5:	mov    edx,0x1
  418dfa:	mov    rdi,rax
  418dfd:	lea    rax,[rbp+0x290]
  418e04:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e07:	mov    rdi,rax
  418e0a:	mov    rsi,QWORD PTR [rbp+0x920]
  418e11:	lea    rax,[rbp+0x4a0]
  418e18:	mov    cl,0x41
  418e1a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e1d:	mov    rdi,rax
  418e20:	mov    rsi,QWORD PTR [rbp+0x928]
  418e27:	mov    cl,0x41
  418e29:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418e2c:	mov    cl,0x1
  418e2e:	call   QWORD PTR [rip+0x200d8]        # 0x438f0c
  418e34:	test   r14d,r14d
  418e37:	sete   dil
  418e3b:	or     dil,BYTE PTR [rbp-0x20]
  418e3f:	jne    0x4189f2
  418e45:	lea    r10,[rbp+0x290]
  418e4c:	lea    r11,[rbp+0x80]
  418e53:	lea    rax,[rbp+0x4a0]
  418e5a:	lea    rdx,[rip+0x1c03b]        # 0x434e9c
  418e61:	xor    ecx,ecx
  418e63:	mov    r8,r10
  418e66:	mov    QWORD PTR [rbp-0x18],r10
  418e6a:	mov    QWORD PTR [rbp-0x8],r11
  418e6e:	mov    QWORD PTR [rsp+0x20],rdx
  418e73:	mov    QWORD PTR [rbp-0x30],rax
  418e77:	mov    rdx,r11
  418e7a:	mov    r9,rax
  418e7d:	call   QWORD PTR [rip+0x204b1]        # 0x439334
  418e83:	test   eax,eax
  418e85:	mov    DWORD PTR [rbp-0xc],eax
  418e88:	mov    r11,QWORD PTR [rbp-0x8]
  418e8c:	mov    r10,QWORD PTR [rbp-0x18]
  418e90:	je     0x418eb0
  418e92:	call   0x421ea0
  418e97:	mov    edx,DWORD PTR [rbp-0x48]
  418e9a:	mov    r14d,edx
  418e9d:	sub    r14d,eax
  418ea0:	cmp    eax,edx
  418ea2:	mov    eax,0x0
  418ea7:	cmovg  r14d,eax
  418eab:	jmp    0x418a08
  418eb0:	mov    ecx,0x41
  418eb5:	mov    rdi,r11
  418eb8:	mov    rsi,QWORD PTR [rbp+0x918]
  418ebf:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ec2:	mov    rdi,r10
  418ec5:	mov    rsi,QWORD PTR [rbp+0x920]
  418ecc:	mov    cl,0x41
  418ece:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ed1:	mov    rdi,QWORD PTR [rbp-0x30]
  418ed5:	mov    rsi,QWORD PTR [rbp+0x928]
  418edc:	mov    cl,0x41
  418ede:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  418ee1:	jmp    0x4189f2
  418ee6:	mov    edx,DWORD PTR [rbp-0xc]
  418ee9:	mov    r15d,0x1
  418eef:	test   edx,edx
  418ef1:	je     0x418dc9
  418ef7:	mov    r14,QWORD PTR [rbp+0x918]
  418efe:	mov    rax,QWORD PTR [rbp+0x920]
  418f05:	mov    DWORD PTR [r14],0x0
  418f0c:	mov    DWORD PTR [rax],0x0
  418f12:	mov    rax,QWORD PTR [rbp+0x928]
  418f19:	mov    DWORD PTR [rax],0x0
  418f1f:	mov    eax,DWORD PTR [rbp-0x10]
  418f22:	test   eax,eax
  418f24:	jle    0x4190a2
  418f2a:	lea    rax,[rbp+0x80]
  418f31:	lea    r12,[rbp+0x4a0]
  418f38:	mov    ebx,0x1
  418f3d:	xor    r13d,r13d
  418f40:	mov    DWORD PTR [rbp-0x8],ebx
  418f43:	mov    rdi,QWORD PTR [rbp+0x920]
  418f4a:	mov    QWORD PTR [rbp-0x18],rax
  418f4e:	lea    rax,[rbp+0x290]
  418f55:	mov    r15,QWORD PTR [rbp+0x928]
  418f5c:	mov    QWORD PTR [rbp-0x28],r12
  418f60:	mov    QWORD PTR [rbp-0x20],rax
  418f64:	jmp    0x418f74
  418f66:	add    r13,0x1
  418f6a:	cmp    DWORD PTR [rbp-0x10],r13d
  418f6e:	jle    0x4190a2
  418f74:	mov    esi,r13d
  418f77:	mov    ebx,r13d
  418f7a:	sar    esi,0x3
  418f7d:	and    ebx,0x7
  418f80:	movsxd rsi,esi
  418f83:	movzx  eax,BYTE PTR [rbp+rsi*1+0x10]
  418f88:	bt     eax,ebx
  418f8b:	jae    0x418f66
  418f8d:	mov    ecx,r13d
  418f90:	call   0x414c80
  418f95:	mov    r12,rax
  418f98:	mov    eax,DWORD PTR [rbp-0x8]
  418f9b:	cmp    QWORD PTR [rbp+rax*8+0x6b0],r12
  418fa3:	je     0x4190b9
  418fa9:	xor    r8d,r8d
  418fac:	xor    edx,edx
  418fae:	mov    rcx,r12
  418fb1:	call   QWORD PTR [rip+0x202f5]        # 0x4392ac
  418fb7:	mov    rdx,QWORD PTR [rbp-0x18]
  418fbb:	mov    rcx,r12
  418fbe:	call   0x41b278
  418fc3:	test   eax,eax
  418fc5:	je     0x418ffa
  418fc7:	mov    ecx,DWORD PTR [r14]
  418fca:	test   ecx,ecx
  418fcc:	je     0x41922e
  418fd2:	cmp    QWORD PTR [r14+0x8],r13
  418fd6:	je     0x418ffa
  418fd8:	lea    rdx,[r14+0x10]
  418fdc:	xor    eax,eax
  418fde:	jmp    0x418fea
  418fe0:	add    rdx,0x8
  418fe4:	cmp    r13,QWORD PTR [rdx-0x8]
  418fe8:	je     0x418ffa
  418fea:	add    eax,0x1
  418fed:	cmp    eax,ecx
  418fef:	jne    0x418fe0
  418ff1:	cmp    ecx,0x3f
  418ff4:	jbe    0x41922e
  418ffa:	mov    rdx,QWORD PTR [rbp-0x20]
  418ffe:	mov    rcx,r12
  419001:	call   0x41b278
  419006:	test   eax,eax
  419008:	je     0x41903c
  41900a:	mov    ecx,DWORD PTR [rdi]
  41900c:	test   ecx,ecx
  41900e:	je     0x419240
  419014:	cmp    QWORD PTR [rdi+0x8],r13
  419018:	je     0x41903c
  41901a:	lea    rax,[rdi+0x10]
  41901e:	xor    edx,edx
  419020:	jmp    0x41902c
  419022:	add    rax,0x8
  419026:	cmp    QWORD PTR [rax-0x8],r13
  41902a:	je     0x41903c
  41902c:	add    edx,0x1
  41902f:	cmp    edx,ecx
  419031:	jne    0x419022
  419033:	cmp    ecx,0x3f
  419036:	jbe    0x419240
  41903c:	mov    rdx,QWORD PTR [rbp-0x28]
  419040:	mov    rcx,r12
  419043:	call   0x41b278
  419048:	test   eax,eax
  41904a:	je     0x418f66
  419050:	mov    ecx,DWORD PTR [r15]
  419053:	test   ecx,ecx
  419055:	je     0x419087
  419057:	cmp    QWORD PTR [r15+0x8],r13
  41905b:	je     0x418f66
  419061:	lea    rdx,[r15+0x10]
  419065:	xor    eax,eax
  419067:	jmp    0x419077
  419069:	add    rdx,0x8
  41906d:	cmp    QWORD PTR [rdx-0x8],r13
  419071:	je     0x418f66
  419077:	add    eax,0x1
  41907a:	cmp    eax,ecx
  41907c:	jne    0x419069
  41907e:	cmp    ecx,0x3f
  419081:	ja     0x418f66
  419087:	mov    eax,ecx
  419089:	add    ecx,0x1
  41908c:	mov    QWORD PTR [r15+rax*8+0x8],r13
  419091:	add    r13,0x1
  419095:	cmp    DWORD PTR [rbp-0x10],r13d
  419099:	mov    DWORD PTR [r15],ecx
  41909c:	jg     0x418f74
  4190a2:	mov    eax,DWORD PTR [rbp-0xc]
  4190a5:	lea    rsp,[rbp+0x8c8]
  4190ac:	pop    rbx
  4190ad:	pop    rsi
  4190ae:	pop    rdi
  4190af:	pop    r12
  4190b1:	pop    r13
  4190b3:	pop    r14
  4190b5:	pop    r15
  4190b7:	pop    rbp
  4190b8:	ret    
  4190b9:	movzx  eax,BYTE PTR [rbp+rsi*1+0x28]
  4190be:	add    DWORD PTR [rbp-0x8],0x1
  4190c2:	bt     eax,ebx
  4190c5:	jae    0x419103
  4190c7:	mov    eax,DWORD PTR [r14]
  4190ca:	test   eax,eax
  4190cc:	je     0x4190f6
  4190ce:	cmp    QWORD PTR [r14+0x8],r13
  4190d2:	je     0x419103
  4190d4:	lea    r8,[r14+0x10]
  4190d8:	xor    ecx,ecx
  4190da:	jmp    0x4190ea
  4190dc:	nop    DWORD PTR [rax+0x0]
  4190e0:	add    r8,0x8
  4190e4:	cmp    QWORD PTR [r8-0x8],r13
  4190e8:	je     0x419103
  4190ea:	add    ecx,0x1
  4190ed:	cmp    ecx,eax
  4190ef:	jne    0x4190e0
  4190f1:	cmp    eax,0x3f
  4190f4:	ja     0x419103
  4190f6:	mov    ecx,eax
  4190f8:	add    eax,0x1
  4190fb:	mov    QWORD PTR [r14+rcx*8+0x8],r13
  419100:	mov    DWORD PTR [r14],eax
  419103:	movzx  eax,BYTE PTR [rbp+rsi*1+0x38]
  419108:	bt     eax,ebx
  41910b:	jae    0x419143
  41910d:	mov    eax,DWORD PTR [rdi]
  41910f:	test   eax,eax
  419111:	je     0x419137
  419113:	cmp    QWORD PTR [rdi+0x8],r13
  419117:	je     0x419143
  419119:	lea    r8,[rdi+0x10]
  41911d:	xor    ecx,ecx
  41911f:	jmp    0x41912b
  419121:	add    r8,0x8
  419125:	cmp    QWORD PTR [r8-0x8],r13
  419129:	je     0x419143
  41912b:	add    ecx,0x1
  41912e:	cmp    ecx,eax
  419130:	jne    0x419121
  419132:	cmp    eax,0x3f
  419135:	ja     0x419143
  419137:	mov    ecx,eax
  419139:	add    eax,0x1
  41913c:	mov    QWORD PTR [rdi+rcx*8+0x8],r13
  419141:	mov    DWORD PTR [rdi],eax
  419143:	movzx  eax,BYTE PTR [rbp+rsi*1+0x48]
  419148:	bt     eax,ebx
  41914b:	jae    0x418f66
  419151:	mov    eax,DWORD PTR [r15]
  419154:	test   eax,eax
  419156:	je     0x41918e
  419158:	cmp    QWORD PTR [r15+0x8],r13
  41915c:	je     0x418f66
  419162:	lea    rcx,[r15+0x10]
  419166:	xor    edx,edx
  419168:	jmp    0x41917e
  41916a:	nop    WORD PTR [rax+rax*1+0x0]
  419170:	add    rcx,0x8
  419174:	cmp    QWORD PTR [rcx-0x8],r13
  419178:	je     0x418f66
  41917e:	add    edx,0x1
  419181:	cmp    edx,eax
  419183:	jne    0x419170
  419185:	cmp    eax,0x3f
  419188:	ja     0x418f66
  41918e:	mov    edx,eax
  419190:	add    eax,0x1
  419193:	mov    QWORD PTR [r15+rdx*8+0x8],r13
  419198:	mov    DWORD PTR [r15],eax
  41919b:	jmp    0x418f66
  4191a0:	mov    r8d,0x29
  4191a6:	jmp    0x418b39
  4191ab:	call   QWORD PTR [rip+0x1fe1b]        # 0x438fcc
  4191b1:	mov    DWORD PTR [rax],0x9
  4191b7:	mov    eax,0xffffffff
  4191bc:	jmp    0x4190a5
  4191c1:	mov    eax,r14d
  4191c4:	mov    r14,QWORD PTR [rbp+0x918]
  4191cb:	test   eax,eax
  4191cd:	jne    0x418efe
  4191d3:	cmp    QWORD PTR [rbp+0x930],0x0
  4191db:	je     0x418efe
  4191e1:	mov    rax,QWORD PTR [rbp+0x930]
  4191e8:	mov    DWORD PTR [rax+0x8],0x0
  4191ef:	mov    QWORD PTR [rax],0x0
  4191f6:	jmp    0x418efe
  4191fb:	mov    rax,QWORD PTR [rip+0x1bca6]        # 0x434ea8
  419202:	mov    DWORD PTR [rbp-0xc],0xffffffff
  419209:	test   rax,rax
  41920c:	jne    0x418670
  419212:	xor    r9d,r9d
  419215:	xor    r8d,r8d
  419218:	xor    edx,edx
  41921a:	xor    ecx,ecx
  41921c:	call   QWORD PTR [rip+0x1fbea]        # 0x438e0c
  419222:	mov    QWORD PTR [rip+0x1bc7f],rax        # 0x434ea8
  419229:	jmp    0x418670
  41922e:	mov    eax,ecx
  419230:	add    ecx,0x1
  419233:	mov    QWORD PTR [r14+rax*8+0x8],r13
  419238:	mov    DWORD PTR [r14],ecx
  41923b:	jmp    0x418ffa
  419240:	mov    eax,ecx
  419242:	add    ecx,0x1
  419245:	mov    QWORD PTR [rdi+rax*8+0x8],r13
  41924a:	mov    DWORD PTR [rdi],ecx
  41924c:	jmp    0x41903c
  419251:	sub    rsp,0x220
  419258:	lea    rax,[rsp+0x30]
  41925d:	mov    QWORD PTR [rbp+0x928],rax
  419264:	jmp    0x41886b
  419269:	sub    rsp,0x220
  419270:	cmp    QWORD PTR [rbp+0x920],0x0
  419278:	lea    r14,[rsp+0x30]
  41927d:	jne    0x418753
  419283:	sub    rsp,0x220
  41928a:	lea    rax,[rsp+0x30]
  41928f:	mov    QWORD PTR [rbp+0x920],rax
  419296:	jmp    0x41880c
  41929b:	mov    ecx,DWORD PTR [rbp-0xc]
  41929e:	call   QWORD PTR [rip+0x1fc60]        # 0x438f04
  4192a4:	xor    eax,eax
  4192a6:	jmp    0x4190a5
  4192ab:	mov    BYTE PTR [rbp-0x41],0x0
  4192af:	mov    BYTE PTR [rbp-0x20],0x1
  4192b3:	mov    r15d,0x1
  4192b9:	jmp    0x418988
  4192be:	nop
  4192bf:	nop
  4192c0:	push   rdi
  4192c1:	push   rsi
  4192c2:	push   rbx
  4192c3:	sub    rsp,0x30
  4192c7:	mov    rbx,rdx
  4192ca:	mov    rsi,r8
  4192cd:	mov    edi,r9d
  4192d0:	call   0x414c80
  4192d5:	cmp    rax,0xffffffffffffffff
  4192d9:	mov    rcx,rax
  4192dc:	je     0x419420
  4192e2:	mov    rdx,rbx
  4192e5:	mov    r9d,edi
  4192e8:	mov    r8d,esi
  4192eb:	call   QWORD PTR [rip+0x2004b]        # 0x43933c
  4192f1:	test   eax,eax
  4192f3:	mov    ebx,eax
  4192f5:	js     0x419302
  4192f7:	movsxd rax,ebx
  4192fa:	add    rsp,0x30
  4192fe:	pop    rbx
  4192ff:	pop    rsi
  419300:	pop    rdi
  419301:	ret    
  419302:	call   QWORD PTR [rip+0x1ffac]        # 0x4392b4
  419308:	cmp    eax,0x2740
  41930d:	mov    esi,eax
  41930f:	je     0x419595
  419315:	jg     0x419360
  419317:	cmp    eax,0x2736
  41931c:	je     0x419573
  419322:	jle    0x4193e0
  419328:	cmp    eax,0x273a
  41932d:	je     0x419562
  419333:	jg     0x419462
  419339:	cmp    eax,0x2738
  41933e:	je     0x4195b7
  419344:	jg     0x4195a6
  41934a:	call   QWORD PTR [rip+0x1fc7c]        # 0x438fcc
  419350:	mov    DWORD PTR [rax],0x6d
  419356:	jmp    0x4192f7
  419358:	nop    DWORD PTR [rax+rax*1+0x0]
  419360:	cmp    eax,0x2748
  419365:	je     0x419584
  41936b:	jg     0x4193a0
  41936d:	cmp    eax,0x2744
  419372:	je     0x419551
  419378:	jg     0x419440
  41937e:	cmp    eax,0x2742
  419383:	je     0x419540
  419389:	jg     0x41952f
  41938f:	call   QWORD PTR [rip+0x1fc37]        # 0x438fcc
  419395:	mov    DWORD PTR [rax],0x65
  41939b:	jmp    0x4192f7
  4193a0:	cmp    eax,0x274e
  4193a5:	je     0x4195fb
  4193ab:	jg     0x4194a2
  4193b1:	cmp    eax,0x274c
  4193b6:	je     0x41961d
  4193bc:	jg     0x41960c
  4193c2:	cmp    eax,0x2749
  4193c7:	jne    0x419483
  4193cd:	call   QWORD PTR [rip+0x1fbf9]        # 0x438fcc
  4193d3:	mov    DWORD PTR [rax],0x7e
  4193d9:	jmp    0x4192f7
  4193de:	xchg   ax,ax
  4193e0:	cmp    eax,0x57
  4193e3:	je     0x4194eb
  4193e9:	jle    0x4194d0
  4193ef:	cmp    eax,0x2734
  4193f4:	je     0x41963f
  4193fa:	jg     0x41962e
  419400:	cmp    eax,0x2733
  419405:	jne    0x419483
  419407:	call   QWORD PTR [rip+0x1fbbf]        # 0x438fcc
  41940d:	mov    DWORD PTR [rax],0x8c
  419413:	jmp    0x4192f7
  419418:	nop    DWORD PTR [rax+rax*1+0x0]
  419420:	mov    QWORD PTR [rsp+0x28],rax
  419425:	call   QWORD PTR [rip+0x1fba1]        # 0x438fcc
  41942b:	mov    rcx,QWORD PTR [rsp+0x28]
  419430:	mov    DWORD PTR [rax],0x9
  419436:	mov    rax,rcx
  419439:	jmp    0x4192fa
  41943e:	xchg   ax,ax
  419440:	cmp    eax,0x2746
  419445:	je     0x4195d9
  41944b:	jg     0x4195c8
  419451:	call   QWORD PTR [rip+0x1fb75]        # 0x438fcc
  419457:	mov    DWORD PTR [rax],0x6a
  41945d:	jmp    0x4192f7
  419462:	cmp    eax,0x273d
  419467:	je     0x41951e
  41946d:	cmp    eax,0x273f
  419472:	je     0x41950d
  419478:	cmp    eax,0x273b
  41947d:	je     0x4195ea
  419483:	call   QWORD PTR [rip+0x1fb43]        # 0x438fcc
  419489:	lea    ecx,[rsi-0x2711]
  41948f:	lea    edx,[rsi-0x2710]
  419495:	cmp    ecx,0x17
  419498:	cmovbe esi,edx
  41949b:	mov    DWORD PTR [rax],esi
  41949d:	jmp    0x4192f7
  4194a2:	cmp    eax,0x2751
  4194a7:	je     0x419661
  4194ad:	cmp    eax,0x2752
  4194b2:	je     0x419650
  4194b8:	cmp    eax,0x274f
  4194bd:	jne    0x419483
  4194bf:	call   QWORD PTR [rip+0x1fb07]        # 0x438fcc
  4194c5:	mov    DWORD PTR [rax],0x26
  4194cb:	jmp    0x4192f7
  4194d0:	cmp    eax,0x6
  4194d3:	je     0x4194fc
  4194d5:	cmp    eax,0x8
  4194d8:	jne    0x419483
  4194da:	call   QWORD PTR [rip+0x1faec]        # 0x438fcc
  4194e0:	mov    DWORD PTR [rax],0xc
  4194e6:	jmp    0x4192f7
  4194eb:	call   QWORD PTR [rip+0x1fadb]        # 0x438fcc
  4194f1:	mov    DWORD PTR [rax],0x16
  4194f7:	jmp    0x4192f7
  4194fc:	call   QWORD PTR [rip+0x1faca]        # 0x438fcc
  419502:	mov    DWORD PTR [rax],0x9
  419508:	jmp    0x4192f7
  41950d:	call   QWORD PTR [rip+0x1fab9]        # 0x438fcc
  419513:	mov    DWORD PTR [rax],0x66
  419519:	jmp    0x4192f7
  41951e:	call   QWORD PTR [rip+0x1faa8]        # 0x438fcc
  419524:	mov    DWORD PTR [rax],0x82
  41952a:	jmp    0x4192f7
  41952f:	call   QWORD PTR [rip+0x1fa97]        # 0x438fcc
  419535:	mov    DWORD PTR [rax],0x76
  41953b:	jmp    0x4192f7
  419540:	call   QWORD PTR [rip+0x1fa86]        # 0x438fcc
  419546:	mov    DWORD PTR [rax],0x74
  41954c:	jmp    0x4192f7
  419551:	call   QWORD PTR [rip+0x1fa75]        # 0x438fcc
  419557:	mov    DWORD PTR [rax],0x75
  41955d:	jmp    0x4192f7
  419562:	call   QWORD PTR [rip+0x1fa64]        # 0x438fcc
  419568:	mov    DWORD PTR [rax],0x7b
  41956e:	jmp    0x4192f7
  419573:	call   QWORD PTR [rip+0x1fa53]        # 0x438fcc
  419579:	mov    DWORD PTR [rax],0x80
  41957f:	jmp    0x4192f7
  419584:	call   QWORD PTR [rip+0x1fa42]        # 0x438fcc
  41958a:	mov    DWORD PTR [rax],0x71
  419590:	jmp    0x4192f7
  419595:	call   QWORD PTR [rip+0x1fa31]        # 0x438fcc
  41959b:	mov    DWORD PTR [rax],0x64
  4195a1:	jmp    0x4192f7
  4195a6:	call   QWORD PTR [rip+0x1fa20]        # 0x438fcc
  4195ac:	mov    DWORD PTR [rax],0x88
  4195b2:	jmp    0x4192f7
  4195b7:	call   QWORD PTR [rip+0x1fa0f]        # 0x438fcc
  4195bd:	mov    DWORD PTR [rax],0x73
  4195c3:	jmp    0x4192f7
  4195c8:	call   QWORD PTR [rip+0x1f9fe]        # 0x438fcc
  4195ce:	mov    DWORD PTR [rax],0x77
  4195d4:	jmp    0x4192f7
  4195d9:	call   QWORD PTR [rip+0x1f9ed]        # 0x438fcc
  4195df:	mov    DWORD PTR [rax],0x6c
  4195e5:	jmp    0x4192f7
  4195ea:	call   QWORD PTR [rip+0x1f9dc]        # 0x438fcc
  4195f0:	mov    DWORD PTR [rax],0x87
  4195f6:	jmp    0x4192f7
  4195fb:	call   QWORD PTR [rip+0x1f9cb]        # 0x438fcc
  419601:	mov    DWORD PTR [rax],0x72
  419607:	jmp    0x4192f7
  41960c:	call   QWORD PTR [rip+0x1f9ba]        # 0x438fcc
  419612:	mov    DWORD PTR [rax],0x6b
  419618:	jmp    0x4192f7
  41961d:	call   QWORD PTR [rip+0x1f9a9]        # 0x438fcc
  419623:	mov    DWORD PTR [rax],0x8a
  419629:	jmp    0x4192f7
  41962e:	call   QWORD PTR [rip+0x1f998]        # 0x438fcc
  419634:	mov    DWORD PTR [rax],0x67
  41963a:	jmp    0x4192f7
  41963f:	call   QWORD PTR [rip+0x1f987]        # 0x438fcc
  419645:	mov    DWORD PTR [rax],0x70
  41964b:	jmp    0x4192f7
  419650:	call   QWORD PTR [rip+0x1f976]        # 0x438fcc
  419656:	mov    DWORD PTR [rax],0x29
  41965c:	jmp    0x4192f7
  419661:	call   QWORD PTR [rip+0x1f965]        # 0x438fcc
  419667:	mov    DWORD PTR [rax],0x6e
  41966d:	jmp    0x4192f7
  419672:	nop
  419673:	nop
  419674:	nop
  419675:	nop
  419676:	nop
  419677:	nop
  419678:	nop
  419679:	nop
  41967a:	nop
  41967b:	nop
  41967c:	nop
  41967d:	nop
  41967e:	nop
  41967f:	nop
  419680:	push   rdi
  419681:	push   rsi
  419682:	push   rbx
  419683:	sub    rsp,0x50
  419687:	mov    ebx,edx
  419689:	mov    esi,r8d
  41968c:	mov    rdi,r9
  41968f:	call   0x414c80
  419694:	cmp    rax,0xffffffffffffffff
  419698:	mov    rcx,rax
  41969b:	je     0x4198ef
  4196a1:	cmp    ebx,0xffff
  4196a7:	je     0x4196d4
  4196a9:	mov    eax,DWORD PTR [rsp+0x90]
  4196b0:	mov    r8d,esi
  4196b3:	mov    r9,rdi
  4196b6:	mov    edx,ebx
  4196b8:	mov    DWORD PTR [rsp+0x20],eax
  4196bc:	call   QWORD PTR [rip+0x1fc82]        # 0x439344
  4196c2:	mov    esi,eax
  4196c4:	test   esi,esi
  4196c6:	mov    ebx,esi
  4196c8:	js     0x419722
  4196ca:	mov    eax,ebx
  4196cc:	add    rsp,0x50
  4196d0:	pop    rbx
  4196d1:	pop    rsi
  4196d2:	pop    rdi
  4196d3:	ret    
  4196d4:	lea    eax,[rsi-0x1005]
  4196da:	cmp    eax,0x1
  4196dd:	ja     0x4196a9
  4196df:	mov    r8d,DWORD PTR [rdi+0x8]
  4196e3:	mov    edx,0x10624dd3
  4196e8:	lea    r9,[rsp+0x4c]
  4196ed:	mov    eax,r8d
  4196f0:	sar    r8d,0x1f
  4196f4:	imul   edx
  4196f6:	imul   eax,DWORD PTR [rdi],0x3e8
  4196fc:	mov    DWORD PTR [rsp+0x20],0x4
  419704:	sar    edx,0x6
  419707:	sub    edx,r8d
  41970a:	mov    r8d,esi
  41970d:	add    edx,eax
  41970f:	mov    DWORD PTR [rsp+0x4c],edx
  419713:	mov    edx,0xffff
  419718:	call   QWORD PTR [rip+0x1fc26]        # 0x439344
  41971e:	mov    esi,eax
  419720:	jmp    0x4196c4
  419722:	call   QWORD PTR [rip+0x1fb8c]        # 0x4392b4
  419728:	cmp    eax,0x2740
  41972d:	mov    edi,eax
  41972f:	je     0x41991d
  419735:	jg     0x419780
  419737:	cmp    eax,0x2736
  41973c:	je     0x4199c9
  419742:	jle    0x419800
  419748:	cmp    eax,0x273a
  41974d:	je     0x4199b8
  419753:	jg     0x419862
  419759:	cmp    eax,0x2738
  41975e:	je     0x419a1e
  419764:	jg     0x419a0d
  41976a:	call   QWORD PTR [rip+0x1f85c]        # 0x438fcc
  419770:	mov    DWORD PTR [rax],0x6d
  419776:	jmp    0x4196ca
  41977b:	nop    DWORD PTR [rax+rax*1+0x0]
  419780:	cmp    eax,0x2748
  419785:	je     0x41990c
  41978b:	jg     0x4197c0
  41978d:	cmp    eax,0x2744
  419792:	je     0x4199da
  419798:	jg     0x419840
  41979e:	cmp    eax,0x2742
  4197a3:	je     0x4199fc
  4197a9:	jg     0x4199eb
  4197af:	call   QWORD PTR [rip+0x1f817]        # 0x438fcc
  4197b5:	mov    DWORD PTR [rax],0x65
  4197bb:	jmp    0x4196ca
  4197c0:	cmp    eax,0x274e
  4197c5:	je     0x419961
  4197cb:	jg     0x4198a4
  4197d1:	cmp    eax,0x274c
  4197d6:	je     0x419950
  4197dc:	jg     0x41993f
  4197e2:	cmp    eax,0x2749
  4197e7:	jne    0x419883
  4197ed:	call   QWORD PTR [rip+0x1f7d9]        # 0x438fcc
  4197f3:	mov    ebx,esi
  4197f5:	mov    DWORD PTR [rax],0x7e
  4197fb:	jmp    0x4196ca
  419800:	cmp    eax,0x57
  419803:	je     0x419972
  419809:	jle    0x4198d4
  41980f:	cmp    eax,0x2734
  419814:	je     0x419a62
  41981a:	jg     0x419a51
  419820:	cmp    eax,0x2733
  419825:	jne    0x419883
  419827:	call   QWORD PTR [rip+0x1f79f]        # 0x438fcc
  41982d:	mov    ebx,esi
  41982f:	mov    DWORD PTR [rax],0x8c
  419835:	jmp    0x4196ca
  41983a:	nop    WORD PTR [rax+rax*1+0x0]
  419840:	cmp    eax,0x2746
  419845:	je     0x419a40
  41984b:	jg     0x419a2f
  419851:	call   QWORD PTR [rip+0x1f775]        # 0x438fcc
  419857:	mov    DWORD PTR [rax],0x6a
  41985d:	jmp    0x4196ca
  419862:	cmp    eax,0x273d
  419867:	je     0x4199a7
  41986d:	cmp    eax,0x273f
  419872:	je     0x419996
  419878:	cmp    eax,0x273b
  41987d:	je     0x419983
  419883:	call   QWORD PTR [rip+0x1f743]        # 0x438fcc
  419889:	lea    ecx,[rdi-0x2711]
  41988f:	lea    edx,[rdi-0x2710]
  419895:	mov    ebx,esi
  419897:	cmp    ecx,0x17
  41989a:	cmovbe edi,edx
  41989d:	mov    DWORD PTR [rax],edi
  41989f:	jmp    0x4196ca
  4198a4:	cmp    eax,0x2751
  4198a9:	je     0x419a84
  4198af:	cmp    eax,0x2752
  4198b4:	je     0x419a73
  4198ba:	cmp    eax,0x274f
  4198bf:	jne    0x419883
  4198c1:	call   QWORD PTR [rip+0x1f705]        # 0x438fcc
  4198c7:	mov    ebx,esi
  4198c9:	mov    DWORD PTR [rax],0x26
  4198cf:	jmp    0x4196ca
  4198d4:	cmp    eax,0x6
  4198d7:	je     0x41992e
  4198d9:	cmp    eax,0x8
  4198dc:	jne    0x419883
  4198de:	call   QWORD PTR [rip+0x1f6e8]        # 0x438fcc
  4198e4:	mov    DWORD PTR [rax],0xc
  4198ea:	jmp    0x4196ca
  4198ef:	mov    QWORD PTR [rsp+0x38],rax
  4198f4:	call   QWORD PTR [rip+0x1f6d2]        # 0x438fcc
  4198fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4198ff:	mov    DWORD PTR [rax],0x9
  419905:	mov    ebx,ecx
  419907:	jmp    0x4196ca
  41990c:	call   QWORD PTR [rip+0x1f6ba]        # 0x438fcc
  419912:	mov    DWORD PTR [rax],0x71
  419918:	jmp    0x4196ca
  41991d:	call   QWORD PTR [rip+0x1f6a9]        # 0x438fcc
  419923:	mov    DWORD PTR [rax],0x64
  419929:	jmp    0x4196ca
  41992e:	call   QWORD PTR [rip+0x1f698]        # 0x438fcc
  419934:	mov    DWORD PTR [rax],0x9
  41993a:	jmp    0x4196ca
  41993f:	call   QWORD PTR [rip+0x1f687]        # 0x438fcc
  419945:	mov    DWORD PTR [rax],0x6b
  41994b:	jmp    0x4196ca
  419950:	call   QWORD PTR [rip+0x1f676]        # 0x438fcc
  419956:	mov    DWORD PTR [rax],0x8a
  41995c:	jmp    0x4196ca
  419961:	call   QWORD PTR [rip+0x1f665]        # 0x438fcc
  419967:	mov    DWORD PTR [rax],0x72
  41996d:	jmp    0x4196ca
  419972:	call   QWORD PTR [rip+0x1f654]        # 0x438fcc
  419978:	mov    DWORD PTR [rax],0x16
  41997e:	jmp    0x4196ca
  419983:	call   QWORD PTR [rip+0x1f643]        # 0x438fcc
  419989:	mov    ebx,esi
  41998b:	mov    DWORD PTR [rax],0x87
  419991:	jmp    0x4196ca
  419996:	call   QWORD PTR [rip+0x1f630]        # 0x438fcc
  41999c:	mov    DWORD PTR [rax],0x66
  4199a2:	jmp    0x4196ca
  4199a7:	call   QWORD PTR [rip+0x1f61f]        # 0x438fcc
  4199ad:	mov    DWORD PTR [rax],0x82
  4199b3:	jmp    0x4196ca
  4199b8:	call   QWORD PTR [rip+0x1f60e]        # 0x438fcc
  4199be:	mov    DWORD PTR [rax],0x7b
  4199c4:	jmp    0x4196ca
  4199c9:	call   QWORD PTR [rip+0x1f5fd]        # 0x438fcc
  4199cf:	mov    DWORD PTR [rax],0x80
  4199d5:	jmp    0x4196ca
  4199da:	call   QWORD PTR [rip+0x1f5ec]        # 0x438fcc
  4199e0:	mov    DWORD PTR [rax],0x75
  4199e6:	jmp    0x4196ca
  4199eb:	call   QWORD PTR [rip+0x1f5db]        # 0x438fcc
  4199f1:	mov    DWORD PTR [rax],0x76
  4199f7:	jmp    0x4196ca
  4199fc:	call   QWORD PTR [rip+0x1f5ca]        # 0x438fcc
  419a02:	mov    DWORD PTR [rax],0x74
  419a08:	jmp    0x4196ca
  419a0d:	call   QWORD PTR [rip+0x1f5b9]        # 0x438fcc
  419a13:	mov    DWORD PTR [rax],0x88
  419a19:	jmp    0x4196ca
  419a1e:	call   QWORD PTR [rip+0x1f5a8]        # 0x438fcc
  419a24:	mov    DWORD PTR [rax],0x73
  419a2a:	jmp    0x4196ca
  419a2f:	call   QWORD PTR [rip+0x1f597]        # 0x438fcc
  419a35:	mov    DWORD PTR [rax],0x77
  419a3b:	jmp    0x4196ca
  419a40:	call   QWORD PTR [rip+0x1f586]        # 0x438fcc
  419a46:	mov    DWORD PTR [rax],0x6c
  419a4c:	jmp    0x4196ca
  419a51:	call   QWORD PTR [rip+0x1f575]        # 0x438fcc
  419a57:	mov    DWORD PTR [rax],0x67
  419a5d:	jmp    0x4196ca
  419a62:	call   QWORD PTR [rip+0x1f564]        # 0x438fcc
  419a68:	mov    DWORD PTR [rax],0x70
  419a6e:	jmp    0x4196ca
  419a73:	call   QWORD PTR [rip+0x1f553]        # 0x438fcc
  419a79:	mov    DWORD PTR [rax],0x29
  419a7f:	jmp    0x4196ca
  419a84:	call   QWORD PTR [rip+0x1f542]        # 0x438fcc
  419a8a:	mov    DWORD PTR [rax],0x6e
  419a90:	jmp    0x4196ca
  419a95:	nop
  419a96:	nop
  419a97:	nop
  419a98:	nop
  419a99:	nop
  419a9a:	nop
  419a9b:	nop
  419a9c:	nop
  419a9d:	nop
  419a9e:	nop
  419a9f:	nop
  419aa0:	push   rdi
  419aa1:	push   rsi
  419aa2:	push   rbx
  419aa3:	sub    rsp,0x30
  419aa7:	mov    ebx,edx
  419aa9:	call   0x414c80
  419aae:	cmp    rax,0xffffffffffffffff
  419ab2:	mov    rcx,rax
  419ab5:	je     0x419bf0
  419abb:	mov    edx,ebx
  419abd:	call   QWORD PTR [rip+0x1f889]        # 0x43934c
  419ac3:	test   eax,eax
  419ac5:	mov    esi,eax
  419ac7:	mov    ebx,eax
  419ac9:	js     0x419ad5
  419acb:	mov    eax,ebx
  419acd:	add    rsp,0x30
  419ad1:	pop    rbx
  419ad2:	pop    rsi
  419ad3:	pop    rdi
  419ad4:	ret    
  419ad5:	call   QWORD PTR [rip+0x1f7d9]        # 0x4392b4
  419adb:	cmp    eax,0x2740
  419ae0:	mov    edi,eax
  419ae2:	je     0x419d7b
  419ae8:	jg     0x419b30
  419aea:	cmp    eax,0x2736
  419aef:	je     0x419d59
  419af5:	jle    0x419bb2
  419afb:	cmp    eax,0x273a
  419b00:	je     0x419d48
  419b06:	jg     0x419c34
  419b0c:	cmp    eax,0x2738
  419b11:	je     0x419d9f
  419b17:	jg     0x419d8c
  419b1d:	call   QWORD PTR [rip+0x1f4a9]        # 0x438fcc
  419b23:	mov    ebx,esi
  419b25:	mov    DWORD PTR [rax],0x6d
  419b2b:	jmp    0x419acb
  419b2d:	nop    DWORD PTR [rax]
  419b30:	cmp    eax,0x2748
  419b35:	je     0x419d6a
  419b3b:	jg     0x419b72
  419b3d:	cmp    eax,0x2744
  419b42:	je     0x419d37
  419b48:	jg     0x419c10
  419b4e:	cmp    eax,0x2742
  419b53:	je     0x419d26
  419b59:	jg     0x419d13
  419b5f:	call   QWORD PTR [rip+0x1f467]        # 0x438fcc
  419b65:	mov    ebx,esi
  419b67:	mov    DWORD PTR [rax],0x65
  419b6d:	jmp    0x419acb
  419b72:	cmp    eax,0x274e
  419b77:	je     0x419de7
  419b7d:	jg     0x419c80
  419b83:	cmp    eax,0x274c
  419b88:	je     0x419e0b
  419b8e:	jg     0x419df8
  419b94:	cmp    eax,0x2749
  419b99:	jne    0x419c55
  419b9f:	call   QWORD PTR [rip+0x1f427]        # 0x438fcc
  419ba5:	mov    ebx,esi
  419ba7:	mov    DWORD PTR [rax],0x7e
  419bad:	jmp    0x419acb
  419bb2:	cmp    eax,0x57
  419bb5:	je     0x419ccd
  419bbb:	jle    0x419cb0
  419bc1:	cmp    eax,0x2734
  419bc6:	je     0x419e2f
  419bcc:	jg     0x419e1c
  419bd2:	cmp    eax,0x2733
  419bd7:	jne    0x419c55
  419bd9:	call   QWORD PTR [rip+0x1f3ed]        # 0x438fcc
  419bdf:	mov    ebx,esi
  419be1:	mov    DWORD PTR [rax],0x8c
  419be7:	jmp    0x419acb
  419bec:	nop    DWORD PTR [rax+0x0]
  419bf0:	mov    QWORD PTR [rsp+0x28],rax
  419bf5:	call   QWORD PTR [rip+0x1f3d1]        # 0x438fcc
  419bfb:	mov    rcx,QWORD PTR [rsp+0x28]
  419c00:	mov    DWORD PTR [rax],0x9
  419c06:	mov    ebx,ecx
  419c08:	jmp    0x419acb
  419c0d:	nop    DWORD PTR [rax]
  419c10:	cmp    eax,0x2746
  419c15:	je     0x419dc3
  419c1b:	jg     0x419db0
  419c21:	call   QWORD PTR [rip+0x1f3a5]        # 0x438fcc
  419c27:	mov    ebx,esi
  419c29:	mov    DWORD PTR [rax],0x6a
  419c2f:	jmp    0x419acb
  419c34:	cmp    eax,0x273d
  419c39:	je     0x419d02
  419c3f:	cmp    eax,0x273f
  419c44:	je     0x419cef
  419c4a:	cmp    eax,0x273b
  419c4f:	je     0x419dd4
  419c55:	call   QWORD PTR [rip+0x1f371]        # 0x438fcc
  419c5b:	lea    ecx,[rdi-0x2711]
  419c61:	lea    edx,[rdi-0x2710]
  419c67:	mov    ebx,esi
  419c69:	cmp    ecx,0x17
  419c6c:	cmovbe edi,edx
  419c6f:	mov    DWORD PTR [rax],edi
  419c71:	jmp    0x419acb
  419c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c80:	cmp    eax,0x2751
  419c85:	je     0x419e53
  419c8b:	cmp    eax,0x2752
  419c90:	je     0x419e40
  419c96:	cmp    eax,0x274f
  419c9b:	jne    0x419c55
  419c9d:	call   QWORD PTR [rip+0x1f329]        # 0x438fcc
  419ca3:	mov    ebx,esi
  419ca5:	mov    DWORD PTR [rax],0x26
  419cab:	jmp    0x419acb
  419cb0:	cmp    eax,0x6
  419cb3:	je     0x419cde
  419cb5:	cmp    eax,0x8
  419cb8:	jne    0x419c55
  419cba:	call   QWORD PTR [rip+0x1f30c]        # 0x438fcc
  419cc0:	mov    ebx,esi
  419cc2:	mov    DWORD PTR [rax],0xc
  419cc8:	jmp    0x419acb
  419ccd:	call   QWORD PTR [rip+0x1f2f9]        # 0x438fcc
  419cd3:	mov    DWORD PTR [rax],0x16
  419cd9:	jmp    0x419acb
  419cde:	call   QWORD PTR [rip+0x1f2e8]        # 0x438fcc
  419ce4:	mov    DWORD PTR [rax],0x9
  419cea:	jmp    0x419acb
  419cef:	call   QWORD PTR [rip+0x1f2d7]        # 0x438fcc
  419cf5:	mov    ebx,esi
  419cf7:	mov    DWORD PTR [rax],0x66
  419cfd:	jmp    0x419acb
  419d02:	call   QWORD PTR [rip+0x1f2c4]        # 0x438fcc
  419d08:	mov    DWORD PTR [rax],0x82
  419d0e:	jmp    0x419acb
  419d13:	call   QWORD PTR [rip+0x1f2b3]        # 0x438fcc
  419d19:	mov    ebx,esi
  419d1b:	mov    DWORD PTR [rax],0x76
  419d21:	jmp    0x419acb
  419d26:	call   QWORD PTR [rip+0x1f2a0]        # 0x438fcc
  419d2c:	mov    DWORD PTR [rax],0x74
  419d32:	jmp    0x419acb
  419d37:	call   QWORD PTR [rip+0x1f28f]        # 0x438fcc
  419d3d:	mov    DWORD PTR [rax],0x75
  419d43:	jmp    0x419acb
  419d48:	call   QWORD PTR [rip+0x1f27e]        # 0x438fcc
  419d4e:	mov    DWORD PTR [rax],0x7b
  419d54:	jmp    0x419acb
  419d59:	call   QWORD PTR [rip+0x1f26d]        # 0x438fcc
  419d5f:	mov    DWORD PTR [rax],0x80
  419d65:	jmp    0x419acb
  419d6a:	call   QWORD PTR [rip+0x1f25c]        # 0x438fcc
  419d70:	mov    DWORD PTR [rax],0x71
  419d76:	jmp    0x419acb
  419d7b:	call   QWORD PTR [rip+0x1f24b]        # 0x438fcc
  419d81:	mov    DWORD PTR [rax],0x64
  419d87:	jmp    0x419acb
  419d8c:	call   QWORD PTR [rip+0x1f23a]        # 0x438fcc
  419d92:	mov    ebx,esi
  419d94:	mov    DWORD PTR [rax],0x88
  419d9a:	jmp    0x419acb
  419d9f:	call   QWORD PTR [rip+0x1f227]        # 0x438fcc
  419da5:	mov    DWORD PTR [rax],0x73
  419dab:	jmp    0x419acb
  419db0:	call   QWORD PTR [rip+0x1f216]        # 0x438fcc
  419db6:	mov    ebx,esi
  419db8:	mov    DWORD PTR [rax],0x77
  419dbe:	jmp    0x419acb
  419dc3:	call   QWORD PTR [rip+0x1f203]        # 0x438fcc
  419dc9:	mov    DWORD PTR [rax],0x6c
  419dcf:	jmp    0x419acb
  419dd4:	call   QWORD PTR [rip+0x1f1f2]        # 0x438fcc
  419dda:	mov    ebx,esi
  419ddc:	mov    DWORD PTR [rax],0x87
  419de2:	jmp    0x419acb
  419de7:	call   QWORD PTR [rip+0x1f1df]        # 0x438fcc
  419ded:	mov    DWORD PTR [rax],0x72
  419df3:	jmp    0x419acb
  419df8:	call   QWORD PTR [rip+0x1f1ce]        # 0x438fcc
  419dfe:	mov    ebx,esi
  419e00:	mov    DWORD PTR [rax],0x6b
  419e06:	jmp    0x419acb
  419e0b:	call   QWORD PTR [rip+0x1f1bb]        # 0x438fcc
  419e11:	mov    DWORD PTR [rax],0x8a
  419e17:	jmp    0x419acb
  419e1c:	call   QWORD PTR [rip+0x1f1aa]        # 0x438fcc
  419e22:	mov    ebx,esi
  419e24:	mov    DWORD PTR [rax],0x67
  419e2a:	jmp    0x419acb
  419e2f:	call   QWORD PTR [rip+0x1f197]        # 0x438fcc
  419e35:	mov    DWORD PTR [rax],0x70
  419e3b:	jmp    0x419acb
  419e40:	call   QWORD PTR [rip+0x1f186]        # 0x438fcc
  419e46:	mov    ebx,esi
  419e48:	mov    DWORD PTR [rax],0x29
  419e4e:	jmp    0x419acb
  419e53:	call   QWORD PTR [rip+0x1f173]        # 0x438fcc
  419e59:	mov    DWORD PTR [rax],0x6e
  419e5f:	jmp    0x419acb
  419e64:	nop
  419e65:	nop
  419e66:	nop
  419e67:	nop
  419e68:	nop
  419e69:	nop
  419e6a:	nop
  419e6b:	nop
  419e6c:	nop
  419e6d:	nop
  419e6e:	nop
  419e6f:	nop
  419e70:	push   rsi
  419e71:	push   rbx
  419e72:	sub    rsp,0x48
  419e76:	mov    ebx,ecx
  419e78:	mov    esi,edx
  419e7a:	mov    ecx,0x101
  419e7f:	mov    DWORD PTR [rsp+0x3c],r8d
  419e84:	call   0x41b150
  419e89:	xor    r9d,r9d
  419e8c:	mov    DWORD PTR [rsp+0x28],0x0
  419e94:	mov    DWORD PTR [rsp+0x20],0x0
  419e9c:	mov    r8d,DWORD PTR [rsp+0x3c]
  419ea1:	mov    edx,esi
  419ea3:	mov    ecx,ebx
  419ea5:	call   QWORD PTR [rip+0x1f419]        # 0x4392c4
  419eab:	cmp    rax,0xffffffffffffffff
  419eaf:	je     0x419ed0
  419eb1:	mov    rcx,rax
  419eb4:	mov    rax,QWORD PTR [rip+0x1f181]        # 0x43903c
  419ebb:	mov    edx,0x8002
  419ec0:	add    rsp,0x48
  419ec4:	pop    rbx
  419ec5:	pop    rsi
  419ec6:	rex.W jmp rax
  419ec9:	nop    DWORD PTR [rax+0x0]
  419ed0:	call   QWORD PTR [rip+0x1f3de]        # 0x4392b4
  419ed6:	cmp    eax,0x2740
  419edb:	mov    ebx,eax
  419edd:	je     0x41a19e
  419ee3:	jg     0x419f30
  419ee5:	cmp    eax,0x2736
  419eea:	je     0x41a138
  419ef0:	jle    0x419fab
  419ef6:	cmp    eax,0x273a
  419efb:	je     0x41a0e3
  419f01:	jg     0x41a005
  419f07:	cmp    eax,0x2738
  419f0c:	je     0x41a1c0
  419f12:	jg     0x41a1af
  419f18:	call   QWORD PTR [rip+0x1f0ae]        # 0x438fcc
  419f1e:	mov    DWORD PTR [rax],0x6d
  419f24:	mov    eax,0xffffffff
  419f29:	add    rsp,0x48
  419f2d:	pop    rbx
  419f2e:	pop    rsi
  419f2f:	ret    
  419f30:	cmp    eax,0x2748
  419f35:	je     0x41a18d
  419f3b:	jg     0x419f6d
  419f3d:	cmp    eax,0x2744
  419f42:	je     0x41a0d2
  419f48:	jg     0x419fe3
  419f4e:	cmp    eax,0x2742
  419f53:	je     0x41a0c1
  419f59:	jg     0x41a0b0
  419f5f:	call   QWORD PTR [rip+0x1f067]        # 0x438fcc
  419f65:	mov    DWORD PTR [rax],0x65
  419f6b:	jmp    0x419f24
  419f6d:	cmp    eax,0x274e
  419f72:	je     0x41a127
  419f78:	jg     0x41a045
  419f7e:	cmp    eax,0x274c
  419f83:	je     0x41a15a
  419f89:	jg     0x41a149
  419f8f:	cmp    eax,0x2749
  419f94:	jne    0x41a026
  419f9a:	call   QWORD PTR [rip+0x1f02c]        # 0x438fcc
  419fa0:	mov    DWORD PTR [rax],0x7e
  419fa6:	jmp    0x419f24
  419fab:	cmp    eax,0x57
  419fae:	je     0x41a08e
  419fb4:	jle    0x41a073
  419fba:	cmp    eax,0x2734
  419fbf:	je     0x41a1e2
  419fc5:	jg     0x41a1d1
  419fcb:	cmp    eax,0x2733
  419fd0:	jne    0x41a026
  419fd2:	call   QWORD PTR [rip+0x1eff4]        # 0x438fcc
  419fd8:	mov    DWORD PTR [rax],0x8c
  419fde:	jmp    0x419f24
  419fe3:	cmp    eax,0x2746
  419fe8:	je     0x41a17c
  419fee:	jg     0x41a16b
  419ff4:	call   QWORD PTR [rip+0x1efd2]        # 0x438fcc
  419ffa:	mov    DWORD PTR [rax],0x6a
  41a000:	jmp    0x419f24
  41a005:	cmp    eax,0x273d
  41a00a:	je     0x41a105
  41a010:	cmp    eax,0x273f
  41a015:	je     0x41a0f4
  41a01b:	cmp    eax,0x273b
  41a020:	je     0x41a116
  41a026:	call   QWORD PTR [rip+0x1efa0]        # 0x438fcc
  41a02c:	lea    ecx,[rbx-0x2711]
  41a032:	lea    edx,[rbx-0x2710]
  41a038:	cmp    ecx,0x17
  41a03b:	cmovbe ebx,edx
  41a03e:	mov    DWORD PTR [rax],ebx
  41a040:	jmp    0x419f24
  41a045:	cmp    eax,0x2751
  41a04a:	je     0x41a204
  41a050:	cmp    eax,0x2752
  41a055:	je     0x41a1f3
  41a05b:	cmp    eax,0x274f
  41a060:	jne    0x41a026
  41a062:	call   QWORD PTR [rip+0x1ef64]        # 0x438fcc
  41a068:	mov    DWORD PTR [rax],0x26
  41a06e:	jmp    0x419f24
  41a073:	cmp    eax,0x6
  41a076:	je     0x41a09f
  41a078:	cmp    eax,0x8
  41a07b:	jne    0x41a026
  41a07d:	call   QWORD PTR [rip+0x1ef49]        # 0x438fcc
  41a083:	mov    DWORD PTR [rax],0xc
  41a089:	jmp    0x419f24
  41a08e:	call   QWORD PTR [rip+0x1ef38]        # 0x438fcc
  41a094:	mov    DWORD PTR [rax],0x16
  41a09a:	jmp    0x419f24
  41a09f:	call   QWORD PTR [rip+0x1ef27]        # 0x438fcc
  41a0a5:	mov    DWORD PTR [rax],0x9
  41a0ab:	jmp    0x419f24
  41a0b0:	call   QWORD PTR [rip+0x1ef16]        # 0x438fcc
  41a0b6:	mov    DWORD PTR [rax],0x76
  41a0bc:	jmp    0x419f24
  41a0c1:	call   QWORD PTR [rip+0x1ef05]        # 0x438fcc
  41a0c7:	mov    DWORD PTR [rax],0x74
  41a0cd:	jmp    0x419f24
  41a0d2:	call   QWORD PTR [rip+0x1eef4]        # 0x438fcc
  41a0d8:	mov    DWORD PTR [rax],0x75
  41a0de:	jmp    0x419f24
  41a0e3:	call   QWORD PTR [rip+0x1eee3]        # 0x438fcc
  41a0e9:	mov    DWORD PTR [rax],0x7b
  41a0ef:	jmp    0x419f24
  41a0f4:	call   QWORD PTR [rip+0x1eed2]        # 0x438fcc
  41a0fa:	mov    DWORD PTR [rax],0x66
  41a100:	jmp    0x419f24
  41a105:	call   QWORD PTR [rip+0x1eec1]        # 0x438fcc
  41a10b:	mov    DWORD PTR [rax],0x82
  41a111:	jmp    0x419f24
  41a116:	call   QWORD PTR [rip+0x1eeb0]        # 0x438fcc
  41a11c:	mov    DWORD PTR [rax],0x87
  41a122:	jmp    0x419f24
  41a127:	call   QWORD PTR [rip+0x1ee9f]        # 0x438fcc
  41a12d:	mov    DWORD PTR [rax],0x72
  41a133:	jmp    0x419f24
  41a138:	call   QWORD PTR [rip+0x1ee8e]        # 0x438fcc
  41a13e:	mov    DWORD PTR [rax],0x80
  41a144:	jmp    0x419f24
  41a149:	call   QWORD PTR [rip+0x1ee7d]        # 0x438fcc
  41a14f:	mov    DWORD PTR [rax],0x6b
  41a155:	jmp    0x419f24
  41a15a:	call   QWORD PTR [rip+0x1ee6c]        # 0x438fcc
  41a160:	mov    DWORD PTR [rax],0x8a
  41a166:	jmp    0x419f24
  41a16b:	call   QWORD PTR [rip+0x1ee5b]        # 0x438fcc
  41a171:	mov    DWORD PTR [rax],0x77
  41a177:	jmp    0x419f24
  41a17c:	call   QWORD PTR [rip+0x1ee4a]        # 0x438fcc
  41a182:	mov    DWORD PTR [rax],0x6c
  41a188:	jmp    0x419f24
  41a18d:	call   QWORD PTR [rip+0x1ee39]        # 0x438fcc
  41a193:	mov    DWORD PTR [rax],0x71
  41a199:	jmp    0x419f24
  41a19e:	call   QWORD PTR [rip+0x1ee28]        # 0x438fcc
  41a1a4:	mov    DWORD PTR [rax],0x64
  41a1aa:	jmp    0x419f24
  41a1af:	call   QWORD PTR [rip+0x1ee17]        # 0x438fcc
  41a1b5:	mov    DWORD PTR [rax],0x88
  41a1bb:	jmp    0x419f24
  41a1c0:	call   QWORD PTR [rip+0x1ee06]        # 0x438fcc
  41a1c6:	mov    DWORD PTR [rax],0x73
  41a1cc:	jmp    0x419f24
  41a1d1:	call   QWORD PTR [rip+0x1edf5]        # 0x438fcc
  41a1d7:	mov    DWORD PTR [rax],0x67
  41a1dd:	jmp    0x419f24
  41a1e2:	call   QWORD PTR [rip+0x1ede4]        # 0x438fcc
  41a1e8:	mov    DWORD PTR [rax],0x70
  41a1ee:	jmp    0x419f24
  41a1f3:	call   QWORD PTR [rip+0x1edd3]        # 0x438fcc
  41a1f9:	mov    DWORD PTR [rax],0x29
  41a1ff:	jmp    0x419f24
  41a204:	call   QWORD PTR [rip+0x1edc2]        # 0x438fcc
  41a20a:	mov    DWORD PTR [rax],0x6e
  41a210:	jmp    0x419f24
  41a215:	nop
  41a216:	nop
  41a217:	nop
  41a218:	nop
  41a219:	nop
  41a21a:	nop
  41a21b:	nop
  41a21c:	nop
  41a21d:	nop
  41a21e:	nop
  41a21f:	nop
  41a220:	push   rsi
  41a221:	push   rbx
  41a222:	sub    rsp,0x28
  41a226:	mov    rsi,rcx
  41a229:	call   0x421d98
  41a22e:	lea    rbx,[rax+0x1]
  41a232:	mov    rcx,rbx
  41a235:	call   0x4145c0
  41a23a:	test   rax,rax
  41a23d:	je     0x41a253
  41a23f:	mov    r8,rbx
  41a242:	mov    rdx,rsi
  41a245:	mov    rcx,rax
  41a248:	add    rsp,0x28
  41a24c:	pop    rbx
  41a24d:	pop    rsi
  41a24e:	jmp    0x421e08
  41a253:	xor    eax,eax
  41a255:	add    rsp,0x28
  41a259:	pop    rbx
  41a25a:	pop    rsi
  41a25b:	ret    
  41a25c:	nop
  41a25d:	nop
  41a25e:	nop
  41a25f:	nop
  41a260:	sub    rsp,0x38
  41a264:	lea    rdx,[rip+0x125a5]        # 0x42c810
  41a26b:	lea    rcx,[rip+0x1ac4e]        # 0x434ec0
  41a272:	mov    QWORD PTR [rsp+0x50],r8
  41a277:	lea    r8,[rsp+0x50]
  41a27c:	mov    QWORD PTR [rsp+0x58],r9
  41a281:	mov    QWORD PTR [rsp+0x28],r8
  41a286:	call   0x41d3a0
  41a28b:	add    rsp,0x38
  41a28f:	ret    
  41a290:	push   rdi
  41a291:	push   rsi
  41a292:	push   rbx
  41a293:	sub    rsp,0x20
  41a297:	mov    ebx,ecx
  41a299:	call   0x41a380
  41a29e:	test   rax,rax
  41a2a1:	je     0x41a2b0
  41a2a3:	add    rsp,0x20
  41a2a7:	pop    rbx
  41a2a8:	pop    rsi
  41a2a9:	pop    rdi
  41a2aa:	ret    
  41a2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2b0:	mov    ecx,ebx
  41a2b2:	call   0x421da8
  41a2b7:	test   rax,rax
  41a2ba:	mov    rsi,rax
  41a2bd:	je     0x41a340
  41a2c3:	cmp    BYTE PTR [rax],0x0
  41a2c6:	je     0x41a340
  41a2c8:	mov    rcx,rax
  41a2cb:	call   0x421d98
  41a2d0:	cmp    rax,0xff
  41a2d6:	ja     0x41a36e
  41a2dc:	add    rax,0x1
  41a2e0:	lea    rdi,[rip+0x1abd9]        # 0x434ec0
  41a2e7:	cmp    eax,0x8
  41a2ea:	jae    0x41a330
  41a2ec:	xor    edx,edx
  41a2ee:	test   al,0x4
  41a2f0:	jne    0x41a320
  41a2f2:	test   al,0x2
  41a2f4:	jne    0x41a310
  41a2f6:	test   al,0x1
  41a2f8:	jne    0x41a303
  41a2fa:	lea    rax,[rip+0x1abbf]        # 0x434ec0
  41a301:	jmp    0x41a2a3
  41a303:	movzx  eax,BYTE PTR [rsi+rdx*1]
  41a307:	mov    BYTE PTR [rdi+rdx*1],al
  41a30a:	jmp    0x41a2fa
  41a30c:	nop    DWORD PTR [rax+0x0]
  41a310:	movzx  ecx,WORD PTR [rsi+rdx*1]
  41a314:	mov    WORD PTR [rdi+rdx*1],cx
  41a318:	add    rdx,0x2
  41a31c:	jmp    0x41a2f6
  41a31e:	xchg   ax,ax
  41a320:	mov    edx,DWORD PTR [rsi]
  41a322:	mov    DWORD PTR [rdi],edx
  41a324:	mov    edx,0x4
  41a329:	jmp    0x41a2f2
  41a32b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a330:	mov    ecx,eax
  41a332:	shr    ecx,0x3
  41a335:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a338:	jmp    0x41a2ec
  41a33a:	nop    WORD PTR [rax+rax*1+0x0]
  41a340:	lea    rdx,[rip+0x124c9]        # 0x42c810
  41a347:	lea    rcx,[rip+0x1ab72]        # 0x434ec0
  41a34e:	mov    r8d,ebx
  41a351:	call   0x41a260
  41a356:	call   QWORD PTR [rip+0x1ec70]        # 0x438fcc
  41a35c:	mov    DWORD PTR [rax],0x16
  41a362:	lea    rax,[rip+0x1ab57]        # 0x434ec0
  41a369:	jmp    0x41a2a3
  41a36e:	call   0x421eb8
  41a373:	nop
  41a374:	nop
  41a375:	nop
  41a376:	nop
  41a377:	nop
  41a378:	nop
  41a379:	nop
  41a37a:	nop
  41a37b:	nop
  41a37c:	nop
  41a37d:	nop
  41a37e:	nop
  41a37f:	nop
  41a380:	cmp    ecx,0x2754
  41a386:	je     0x41a730
  41a38c:	jg     0x41a3e2
  41a38e:	cmp    ecx,0x89
  41a394:	je     0x41a710
  41a39a:	jg     0x41a443
  41a3a0:	cmp    ecx,0x79
  41a3a3:	je     0x41a740
  41a3a9:	jle    0x41a571
  41a3af:	cmp    ecx,0x7d
  41a3b2:	lea    rax,[rip+0x124b9]        # 0x42c872
  41a3b9:	je     0x41a3e0
  41a3bb:	jle    0x41a680
  41a3c1:	cmp    ecx,0x7f
  41a3c4:	lea    rax,[rip+0x128a5]        # 0x42cc70
  41a3cb:	je     0x41a3e0
  41a3cd:	cmp    ecx,0x83
  41a3d3:	lea    rax,[rip+0x124ba]        # 0x42c894
  41a3da:	jne    0x41a440
  41a3dc:	nop    DWORD PTR [rax+0x0]
  41a3e0:	repz ret 
  41a3e2:	cmp    ecx,0x2779
  41a3e8:	je     0x41a720
  41a3ee:	jg     0x41a492
  41a3f4:	cmp    ecx,0x276c
  41a3fa:	je     0x41a701
  41a400:	jg     0x41a5b0
  41a406:	cmp    ecx,0x2756
  41a40c:	lea    rax,[rip+0x1255b]        # 0x42c96e
  41a413:	je     0x41a3e0
  41a415:	lea    rax,[rip+0x1253e]        # 0x42c95a
  41a41c:	jl     0x41a3e0
  41a41e:	cmp    ecx,0x2757
  41a424:	lea    rax,[rip+0x12559]        # 0x42c984
  41a42b:	je     0x41a3e0
  41a42d:	cmp    ecx,0x276b
  41a433:	lea    rax,[rip+0x125e6]        # 0x42ca20
  41a43a:	je     0x41a3e0
  41a43c:	nop    DWORD PTR [rax+0x0]
  41a440:	xor    eax,eax
  41a442:	ret    
  41a443:	cmp    ecx,0x273c
  41a449:	je     0x41a760
  41a44f:	jle    0x41a4e5
  41a455:	cmp    ecx,0x274b
  41a45b:	lea    rax,[rip+0x124a6]        # 0x42c908
  41a462:	je     0x41a3e0
  41a468:	jle    0x41a5f0
  41a46e:	cmp    ecx,0x2750
  41a474:	lea    rax,[rip+0x124b0]        # 0x42c92b
  41a47b:	je     0x41a3e0
  41a481:	cmp    ecx,0x2753
  41a487:	lea    rax,[rip+0x124aa]        # 0x42c938
  41a48e:	jne    0x41a440
  41a490:	repz ret 
  41a492:	cmp    ecx,0x277f
  41a498:	je     0x41a750
  41a49e:	jle    0x41a530
  41a4a4:	cmp    ecx,0x2afa
  41a4aa:	lea    rax,[rip+0x126f7]        # 0x42cba8
  41a4b1:	je     0x41a3e0
  41a4b7:	jle    0x41a650
  41a4bd:	cmp    ecx,0x2afb
  41a4c3:	lea    rax,[rip+0x126fe]        # 0x42cbc8
  41a4ca:	je     0x41a3e0
  41a4d0:	cmp    ecx,0x2afc
  41a4d6:	lea    rax,[rip+0x12703]        # 0x42cbe0
  41a4dd:	jne    0x41a440
  41a4e3:	repz ret 
  41a4e5:	cmp    ecx,0x3e4
  41a4eb:	lea    rax,[rip+0x124c6]        # 0x42c9b8
  41a4f2:	je     0x41a3e0
  41a4f8:	jle    0x41a620
  41a4fe:	cmp    ecx,0x3e5
  41a504:	lea    rax,[rip+0x124e5]        # 0x42c9f0
  41a50b:	je     0x41a3e0
  41a511:	cmp    ecx,0x7d4
  41a517:	lea    rax,[rip+0x12733]        # 0x42cc51
  41a51e:	jne    0x41a440
  41a524:	repz ret 
  41a526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a530:	cmp    ecx,0x277c
  41a536:	lea    rax,[rip+0x12615]        # 0x42cb52
  41a53d:	je     0x41a3e0
  41a543:	jg     0x41a6c3
  41a549:	cmp    ecx,0x277a
  41a54f:	lea    rax,[rip+0x125c2]        # 0x42cb18
  41a556:	je     0x41a3e0
  41a55c:	cmp    ecx,0x277b
  41a562:	lea    rax,[rip+0x125d5]        # 0x42cb3e
  41a569:	jne    0x41a440
  41a56f:	repz ret 
  41a571:	cmp    ecx,0x68
  41a574:	lea    rax,[rip+0x126e9]        # 0x42cc64
  41a57b:	je     0x41a3e0
  41a581:	jle    0x41a6f0
  41a587:	cmp    ecx,0x6f
  41a58a:	lea    rax,[rip+0x12697]        # 0x42cc28
  41a591:	je     0x41a3e0
  41a597:	cmp    ecx,0x78
  41a59a:	lea    rax,[rip+0x122a6]        # 0x42c847
  41a5a1:	jne    0x41a440
  41a5a7:	repz ret 
  41a5a9:	nop    DWORD PTR [rax+0x0]
  41a5b0:	cmp    ecx,0x2776
  41a5b6:	je     0x41a6e2
  41a5bc:	jg     0x41a6a2
  41a5c2:	cmp    ecx,0x276d
  41a5c8:	lea    rax,[rip+0x124a1]        # 0x42ca70
  41a5cf:	je     0x41a3e0
  41a5d5:	cmp    ecx,0x2775
  41a5db:	lea    rax,[rip+0x124b6]        # 0x42ca98
  41a5e2:	jne    0x41a440
  41a5e8:	repz ret 
  41a5ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a5f0:	cmp    ecx,0x273e
  41a5f6:	lea    rax,[rip+0x122bd]        # 0x42c8ba
  41a5fd:	je     0x41a3e0
  41a603:	cmp    ecx,0x274a
  41a609:	lea    rax,[rip+0x122c8]        # 0x42c8d8
  41a610:	jne    0x41a440
  41a616:	repz ret 
  41a618:	nop    DWORD PTR [rax+rax*1+0x0]
  41a620:	cmp    ecx,0x8b
  41a626:	lea    rax,[rip+0x1220b]        # 0x42c838
  41a62d:	je     0x41a3e0
  41a633:	cmp    ecx,0x3e3
  41a639:	lea    rax,[rip+0x12355]        # 0x42c995
  41a640:	jne    0x41a440
  41a646:	repz ret 
  41a648:	nop    DWORD PTR [rax+rax*1+0x0]
  41a650:	cmp    ecx,0x2780
  41a656:	lea    rax,[rip+0x1251c]        # 0x42cb79
  41a65d:	je     0x41a3e0
  41a663:	cmp    ecx,0x2af9
  41a669:	lea    rax,[rip+0x12524]        # 0x42cb94
  41a670:	jne    0x41a440
  41a676:	repz ret 
  41a678:	nop    DWORD PTR [rax+rax*1+0x0]
  41a680:	cmp    ecx,0x7a
  41a683:	lea    rax,[rip+0x12583]        # 0x42cc0d
  41a68a:	je     0x41a3e0
  41a690:	cmp    ecx,0x7c
  41a693:	lea    rax,[rip+0x121bf]        # 0x42c859
  41a69a:	jne    0x41a440
  41a6a0:	repz ret 
  41a6a2:	cmp    ecx,0x2777
  41a6a8:	je     0x41a750
  41a6ae:	cmp    ecx,0x2778
  41a6b4:	lea    rax,[rip+0x1241d]        # 0x42cad8
  41a6bb:	jne    0x41a440
  41a6c1:	repz ret 
  41a6c3:	cmp    ecx,0x277d
  41a6c9:	lea    rax,[rip+0x12494]        # 0x42cb64
  41a6d0:	je     0x41a3e0
  41a6d6:	cmp    ecx,0x277e
  41a6dc:	jne    0x41a440
  41a6e2:	lea    rax,[rip+0x123cd]        # 0x42cab6
  41a6e9:	ret    
  41a6ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a6f0:	test   ecx,ecx
  41a6f2:	lea    rax,[rip+0x12137]        # 0x42c830
  41a6f9:	jne    0x41a440
  41a6ff:	repz ret 
  41a701:	lea    rax,[rip+0x12340]        # 0x42ca48
  41a708:	ret    
  41a709:	nop    DWORD PTR [rax+0x0]
  41a710:	lea    rax,[rip+0x1216f]        # 0x42c886
  41a717:	ret    
  41a718:	nop    DWORD PTR [rax+rax*1+0x0]
  41a720:	lea    rax,[rip+0x123d1]        # 0x42caf8
  41a727:	ret    
  41a728:	nop    DWORD PTR [rax+rax*1+0x0]
  41a730:	lea    rax,[rip+0x12214]        # 0x42c94b
  41a737:	ret    
  41a738:	nop    DWORD PTR [rax+rax*1+0x0]
  41a740:	lea    rax,[rip+0x124f4]        # 0x42cc3b
  41a747:	ret    
  41a748:	nop    DWORD PTR [rax+rax*1+0x0]
  41a750:	lea    rax,[rip+0x1236f]        # 0x42cac6
  41a757:	ret    
  41a758:	nop    DWORD PTR [rax+rax*1+0x0]
  41a760:	lea    rax,[rip+0x12139]        # 0x42c8a0
  41a767:	ret    
  41a768:	nop
  41a769:	nop
  41a76a:	nop
  41a76b:	nop
  41a76c:	nop
  41a76d:	nop
  41a76e:	nop
  41a76f:	nop
  41a770:	lea    r9,[rip+0x9609]        # 0x423d80
  41a777:	cmp    rcx,r9
  41a77a:	je     0x41a790
  41a77c:	mov    r9,QWORD PTR [rcx+0x10]
  41a780:	mov    rcx,QWORD PTR [rcx]
  41a783:	rex.WB jmp r9
  41a786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a790:	mov    ecx,r8d
  41a793:	rex.W jmp rdx
  41a796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7a0:	lea    r10,[rip+0x95d9]        # 0x423d80
  41a7a7:	mov    rax,rcx
  41a7aa:	mov    r11,rdx
  41a7ad:	mov    ecx,r8d
  41a7b0:	cmp    rax,r10
  41a7b3:	mov    r8,QWORD PTR [rsp+0x28]
  41a7b8:	je     0x41a7d0
  41a7ba:	mov    QWORD PTR [rsp+0x28],r8
  41a7bf:	mov    r8d,ecx
  41a7c2:	mov    r10,QWORD PTR [rax+0x18]
  41a7c6:	mov    rcx,QWORD PTR [rax]
  41a7c9:	rex.WB jmp r10
  41a7cc:	nop    DWORD PTR [rax+0x0]
  41a7d0:	mov    edx,r9d
  41a7d3:	rex.WB jmp r11
  41a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7e0:	mov    r8d,edx
  41a7e3:	mov    rdx,rcx
  41a7e6:	mov    rcx,QWORD PTR [rip+0x9593]        # 0x423d80
  41a7ed:	jmp    0x41a770
  41a7ef:	nop
  41a7f0:	sub    rsp,0x38
  41a7f4:	mov    QWORD PTR [rsp+0x20],r9
  41a7f9:	mov    r9d,r8d
  41a7fc:	mov    r8d,edx
  41a7ff:	mov    rdx,rcx
  41a802:	mov    rcx,QWORD PTR [rip+0x9577]        # 0x423d80
  41a809:	call   0x41a7a0
  41a80e:	add    rsp,0x38
  41a812:	ret    
  41a813:	nop    DWORD PTR [rax]
  41a816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a820:	sub    rsp,0x28
  41a824:	lea    rax,[rip+0xffffffffffffff45]        # 0x41a770
  41a82b:	test   rcx,rcx
  41a82e:	cmove  rcx,rax
  41a832:	lea    rax,[rip+0xffffffffffffff67]        # 0x41a7a0
  41a839:	test   rdx,rdx
  41a83c:	cmove  rdx,rax
  41a840:	cmp    QWORD PTR [r8],0x0
  41a844:	je     0x41a860
  41a846:	cmp    QWORD PTR [r8+0x10],rcx
  41a84a:	jne    0x41a898
  41a84c:	cmp    QWORD PTR [r8+0x18],rdx
  41a850:	jne    0x41a898
  41a852:	add    rsp,0x28
  41a856:	ret    
  41a857:	nop    WORD PTR [rax+rax*1+0x0]
  41a860:	cmp    QWORD PTR [r8+0x8],0x0
  41a865:	jne    0x41a846
  41a867:	mov    rax,QWORD PTR [rip+0x9512]        # 0x423d80
  41a86e:	mov    QWORD PTR [r8+0x10],rcx
  41a872:	mov    QWORD PTR [r8+0x18],rdx
  41a876:	mov    QWORD PTR [r8],rax
  41a879:	lea    rax,[rip+0x9500]        # 0x423d80
  41a880:	mov    QWORD PTR [r8+0x8],rax
  41a884:	mov    rax,QWORD PTR [rip+0x94f5]        # 0x423d80
  41a88b:	mov    QWORD PTR [rip+0x94ee],r8        # 0x423d80
  41a892:	mov    QWORD PTR [rax+0x8],r8
  41a896:	jmp    0x41a852
  41a898:	call   0x421eb8
  41a89d:	nop
  41a89e:	xchg   ax,ax
  41a8a0:	mov    rax,QWORD PTR [rcx+0x8]
  41a8a4:	mov    rdx,QWORD PTR [rcx]
  41a8a7:	test   rax,rax
  41a8aa:	je     0x41a8d7
  41a8ac:	test   rdx,rdx
  41a8af:	je     0x41a8d7
  41a8b1:	mov    QWORD PTR [rax],rdx
  41a8b4:	mov    QWORD PTR [rdx+0x8],rax
  41a8b8:	mov    QWORD PTR [rcx],0x0
  41a8bf:	mov    QWORD PTR [rcx+0x8],0x0
  41a8c7:	mov    QWORD PTR [rcx+0x10],0x0
  41a8cf:	mov    QWORD PTR [rcx+0x18],0x0
  41a8d7:	repz ret 
  41a8d9:	nop
  41a8da:	nop
  41a8db:	nop
  41a8dc:	nop
  41a8dd:	nop
  41a8de:	nop
  41a8df:	nop
  41a8e0:	push   r12
  41a8e2:	push   rbp
  41a8e3:	push   rdi
  41a8e4:	push   rsi
  41a8e5:	push   rbx
  41a8e6:	sub    rsp,0x60
  41a8ea:	mov    rbp,rcx
  41a8ed:	mov    ecx,r8d
  41a8f0:	mov    r12,rdx
  41a8f3:	mov    esi,r8d
  41a8f6:	mov    edi,r9d
  41a8f9:	call   0x414c80
  41a8fe:	xor    edx,edx
  41a900:	mov    rbx,rax
  41a903:	mov    DWORD PTR [rsp+0x30],0xdeadbeef
  41a90b:	lea    r8,[rsp+0x30]
  41a910:	mov    rcx,rax
  41a913:	call   QWORD PTR [rip+0x1e98b]        # 0x4392a4
  41a919:	cmp    DWORD PTR [rsp+0x30],0xdeadbeef
  41a921:	je     0x41a950
  41a923:	mov    r8,QWORD PTR [rsp+0xb0]
  41a92b:	mov    edx,edi
  41a92d:	mov    rcx,rbx
  41a930:	call   QWORD PTR [rip+0x1e9e6]        # 0x43931c
  41a936:	test   eax,eax
  41a938:	js     0x41a979
  41a93a:	xor    eax,eax
  41a93c:	add    rsp,0x60
  41a940:	pop    rbx
  41a941:	pop    rsi
  41a942:	pop    rdi
  41a943:	pop    rbp
  41a944:	pop    r12
  41a946:	ret    
  41a947:	nop    WORD PTR [rax+rax*1+0x0]
  41a950:	mov    rax,QWORD PTR [rsp+0xb0]
  41a958:	mov    r9d,edi
  41a95b:	mov    r8d,esi
  41a95e:	mov    rdx,r12
  41a961:	mov    rcx,rbp
  41a964:	mov    QWORD PTR [rsp+0x20],rax
  41a969:	call   0x41a7a0
  41a96e:	add    rsp,0x60
  41a972:	pop    rbx
  41a973:	pop    rsi
  41a974:	pop    rdi
  41a975:	pop    rbp
  41a976:	pop    r12
  41a978:	ret    
  41a979:	call   QWORD PTR [rip+0x1e935]        # 0x4392b4
  41a97f:	cmp    eax,0x2740
  41a984:	mov    ebx,eax
  41a986:	je     0x41ac93
  41a98c:	jg     0x41a9d5
  41a98e:	cmp    eax,0x2736
  41a993:	je     0x41ac1b
  41a999:	jle    0x41aa61
  41a99f:	cmp    eax,0x273a
  41a9a4:	je     0x41abb7
  41a9aa:	jg     0x41aac1
  41a9b0:	cmp    eax,0x2738
  41a9b5:	je     0x41acbb
  41a9bb:	jg     0x41aca7
  41a9c1:	call   QWORD PTR [rip+0x1e605]        # 0x438fcc
  41a9c7:	mov    DWORD PTR [rax],0x6d
  41a9cd:	or     eax,0xffffffff
  41a9d0:	jmp    0x41a93c
  41a9d5:	cmp    eax,0x2748
  41a9da:	je     0x41ac7f
  41a9e0:	jg     0x41aa20
  41a9e2:	cmp    eax,0x2744
  41a9e7:	je     0x41aba3
  41a9ed:	jg     0x41aa9c
  41a9f3:	cmp    eax,0x2742
  41a9f8:	je     0x41ab8f
  41a9fe:	jg     0x41ab7b
  41aa04:	call   QWORD PTR [rip+0x1e5c2]        # 0x438fcc
  41aa0a:	mov    DWORD PTR [rax],0x65
  41aa10:	or     eax,0xffffffff
  41aa13:	jmp    0x41a93c
  41aa18:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa20:	cmp    eax,0x274e
  41aa25:	je     0x41ac07
  41aa2b:	jg     0x41ab04
  41aa31:	cmp    eax,0x274c
  41aa36:	je     0x41ac43
  41aa3c:	jg     0x41ac2f
  41aa42:	cmp    eax,0x2749
  41aa47:	jne    0x41aae2
  41aa4d:	call   QWORD PTR [rip+0x1e579]        # 0x438fcc
  41aa53:	mov    DWORD PTR [rax],0x7e
  41aa59:	or     eax,0xffffffff
  41aa5c:	jmp    0x41a93c
  41aa61:	cmp    eax,0x57
  41aa64:	je     0x41ab53
  41aa6a:	jle    0x41ab35
  41aa70:	cmp    eax,0x2734
  41aa75:	je     0x41ace3
  41aa7b:	jg     0x41accf
  41aa81:	cmp    eax,0x2733
  41aa86:	jne    0x41aae2
  41aa88:	call   QWORD PTR [rip+0x1e53e]        # 0x438fcc
  41aa8e:	mov    DWORD PTR [rax],0x8c
  41aa94:	or     eax,0xffffffff
  41aa97:	jmp    0x41a93c
  41aa9c:	cmp    eax,0x2746
  41aaa1:	je     0x41ac6b
  41aaa7:	jg     0x41ac57
  41aaad:	call   QWORD PTR [rip+0x1e519]        # 0x438fcc
  41aab3:	mov    DWORD PTR [rax],0x6a
  41aab9:	or     eax,0xffffffff
  41aabc:	jmp    0x41a93c
  41aac1:	cmp    eax,0x273d
  41aac6:	je     0x41abdf
  41aacc:	cmp    eax,0x273f
  41aad1:	je     0x41abcb
  41aad7:	cmp    eax,0x273b
  41aadc:	je     0x41abf3
  41aae2:	call   QWORD PTR [rip+0x1e4e4]        # 0x438fcc
  41aae8:	lea    ecx,[rbx-0x2711]
  41aaee:	lea    edx,[rbx-0x2710]
  41aaf4:	cmp    ecx,0x17
  41aaf7:	cmovbe ebx,edx
  41aafa:	mov    DWORD PTR [rax],ebx
  41aafc:	or     eax,0xffffffff
  41aaff:	jmp    0x41a93c
  41ab04:	cmp    eax,0x2751
  41ab09:	je     0x41ad0b
  41ab0f:	cmp    eax,0x2752
  41ab14:	je     0x41acf7
  41ab1a:	cmp    eax,0x274f
  41ab1f:	jne    0x41aae2
  41ab21:	call   QWORD PTR [rip+0x1e4a5]        # 0x438fcc
  41ab27:	mov    DWORD PTR [rax],0x26
  41ab2d:	or     eax,0xffffffff
  41ab30:	jmp    0x41a93c
  41ab35:	cmp    eax,0x6
  41ab38:	je     0x41ab67
  41ab3a:	cmp    eax,0x8
  41ab3d:	jne    0x41aae2
  41ab3f:	call   QWORD PTR [rip+0x1e487]        # 0x438fcc
  41ab45:	mov    DWORD PTR [rax],0xc
  41ab4b:	or     eax,0xffffffff
  41ab4e:	jmp    0x41a93c
  41ab53:	call   QWORD PTR [rip+0x1e473]        # 0x438fcc
  41ab59:	mov    DWORD PTR [rax],0x16
  41ab5f:	or     eax,0xffffffff
  41ab62:	jmp    0x41a93c
  41ab67:	call   QWORD PTR [rip+0x1e45f]        # 0x438fcc
  41ab6d:	mov    DWORD PTR [rax],0x9
  41ab73:	or     eax,0xffffffff
  41ab76:	jmp    0x41a93c
  41ab7b:	call   QWORD PTR [rip+0x1e44b]        # 0x438fcc
  41ab81:	mov    DWORD PTR [rax],0x76
  41ab87:	or     eax,0xffffffff
  41ab8a:	jmp    0x41a93c
  41ab8f:	call   QWORD PTR [rip+0x1e437]        # 0x438fcc
  41ab95:	mov    DWORD PTR [rax],0x74
  41ab9b:	or     eax,0xffffffff
  41ab9e:	jmp    0x41a93c
  41aba3:	call   QWORD PTR [rip+0x1e423]        # 0x438fcc
  41aba9:	mov    DWORD PTR [rax],0x75
  41abaf:	or     eax,0xffffffff
  41abb2:	jmp    0x41a93c
  41abb7:	call   QWORD PTR [rip+0x1e40f]        # 0x438fcc
  41abbd:	mov    DWORD PTR [rax],0x7b
  41abc3:	or     eax,0xffffffff
  41abc6:	jmp    0x41a93c
  41abcb:	call   QWORD PTR [rip+0x1e3fb]        # 0x438fcc
  41abd1:	mov    DWORD PTR [rax],0x66
  41abd7:	or     eax,0xffffffff
  41abda:	jmp    0x41a93c
  41abdf:	call   QWORD PTR [rip+0x1e3e7]        # 0x438fcc
  41abe5:	mov    DWORD PTR [rax],0x82
  41abeb:	or     eax,0xffffffff
  41abee:	jmp    0x41a93c
  41abf3:	call   QWORD PTR [rip+0x1e3d3]        # 0x438fcc
  41abf9:	mov    DWORD PTR [rax],0x87
  41abff:	or     eax,0xffffffff
  41ac02:	jmp    0x41a93c
  41ac07:	call   QWORD PTR [rip+0x1e3bf]        # 0x438fcc
  41ac0d:	mov    DWORD PTR [rax],0x72
  41ac13:	or     eax,0xffffffff
  41ac16:	jmp    0x41a93c
  41ac1b:	call   QWORD PTR [rip+0x1e3ab]        # 0x438fcc
  41ac21:	mov    DWORD PTR [rax],0x80
  41ac27:	or     eax,0xffffffff
  41ac2a:	jmp    0x41a93c
  41ac2f:	call   QWORD PTR [rip+0x1e397]        # 0x438fcc
  41ac35:	mov    DWORD PTR [rax],0x6b
  41ac3b:	or     eax,0xffffffff
  41ac3e:	jmp    0x41a93c
  41ac43:	call   QWORD PTR [rip+0x1e383]        # 0x438fcc
  41ac49:	mov    DWORD PTR [rax],0x8a
  41ac4f:	or     eax,0xffffffff
  41ac52:	jmp    0x41a93c
  41ac57:	call   QWORD PTR [rip+0x1e36f]        # 0x438fcc
  41ac5d:	mov    DWORD PTR [rax],0x77
  41ac63:	or     eax,0xffffffff
  41ac66:	jmp    0x41a93c
  41ac6b:	call   QWORD PTR [rip+0x1e35b]        # 0x438fcc
  41ac71:	mov    DWORD PTR [rax],0x6c
  41ac77:	or     eax,0xffffffff
  41ac7a:	jmp    0x41a93c
  41ac7f:	call   QWORD PTR [rip+0x1e347]        # 0x438fcc
  41ac85:	mov    DWORD PTR [rax],0x71
  41ac8b:	or     eax,0xffffffff
  41ac8e:	jmp    0x41a93c
  41ac93:	call   QWORD PTR [rip+0x1e333]        # 0x438fcc
  41ac99:	mov    DWORD PTR [rax],0x64
  41ac9f:	or     eax,0xffffffff
  41aca2:	jmp    0x41a93c
  41aca7:	call   QWORD PTR [rip+0x1e31f]        # 0x438fcc
  41acad:	mov    DWORD PTR [rax],0x88
  41acb3:	or     eax,0xffffffff
  41acb6:	jmp    0x41a93c
  41acbb:	call   QWORD PTR [rip+0x1e30b]        # 0x438fcc
  41acc1:	mov    DWORD PTR [rax],0x73
  41acc7:	or     eax,0xffffffff
  41acca:	jmp    0x41a93c
  41accf:	call   QWORD PTR [rip+0x1e2f7]        # 0x438fcc
  41acd5:	mov    DWORD PTR [rax],0x67
  41acdb:	or     eax,0xffffffff
  41acde:	jmp    0x41a93c
  41ace3:	call   QWORD PTR [rip+0x1e2e3]        # 0x438fcc
  41ace9:	mov    DWORD PTR [rax],0x70
  41acef:	or     eax,0xffffffff
  41acf2:	jmp    0x41a93c
  41acf7:	call   QWORD PTR [rip+0x1e2cf]        # 0x438fcc
  41acfd:	mov    DWORD PTR [rax],0x29
  41ad03:	or     eax,0xffffffff
  41ad06:	jmp    0x41a93c
  41ad0b:	call   QWORD PTR [rip+0x1e2bb]        # 0x438fcc
  41ad11:	mov    DWORD PTR [rax],0x6e
  41ad17:	or     eax,0xffffffff
  41ad1a:	jmp    0x41a93c
  41ad1f:	nop
  41ad20:	push   rbp
  41ad21:	push   rdi
  41ad22:	push   rsi
  41ad23:	push   rbx
  41ad24:	sub    rsp,0x58
  41ad28:	mov    rdi,rcx
  41ad2b:	mov    ecx,r8d
  41ad2e:	mov    rbp,rdx
  41ad31:	mov    ebx,r8d
  41ad34:	call   0x414c80
  41ad39:	xor    edx,edx
  41ad3b:	mov    rsi,rax
  41ad3e:	mov    DWORD PTR [rsp+0x20],0xdeadbeef
  41ad46:	lea    r8,[rsp+0x20]
  41ad4b:	mov    rcx,rax
  41ad4e:	call   QWORD PTR [rip+0x1e550]        # 0x4392a4
  41ad54:	cmp    DWORD PTR [rsp+0x20],0xdeadbeef
  41ad5c:	je     0x41ad80
  41ad5e:	mov    rcx,rsi
  41ad61:	call   QWORD PTR [rip+0x1e575]        # 0x4392dc
  41ad67:	test   eax,eax
  41ad69:	mov    esi,eax
  41ad6b:	jne    0x41ada0
  41ad6d:	mov    ecx,ebx
  41ad6f:	call   QWORD PTR [rip+0x1e247]        # 0x438fbc
  41ad75:	mov    eax,esi
  41ad77:	add    rsp,0x58
  41ad7b:	pop    rbx
  41ad7c:	pop    rsi
  41ad7d:	pop    rdi
  41ad7e:	pop    rbp
  41ad7f:	ret    
  41ad80:	mov    r8d,ebx
  41ad83:	mov    rdx,rbp
  41ad86:	mov    rcx,rdi
  41ad89:	call   0x41a770
  41ad8e:	mov    esi,eax
  41ad90:	mov    eax,esi
  41ad92:	add    rsp,0x58
  41ad96:	pop    rbx
  41ad97:	pop    rsi
  41ad98:	pop    rdi
  41ad99:	pop    rbp
  41ad9a:	ret    
  41ad9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ada0:	call   QWORD PTR [rip+0x1e50e]        # 0x4392b4
  41ada6:	cmp    eax,0x2740
  41adab:	mov    ebx,eax
  41adad:	je     0x41b0b6
  41adb3:	jg     0x41ae00
  41adb5:	cmp    eax,0x2736
  41adba:	je     0x41b03e
  41adc0:	jle    0x41ae84
  41adc6:	cmp    eax,0x273a
  41adcb:	je     0x41afda
  41add1:	jg     0x41aee4
  41add7:	cmp    eax,0x2738
  41addc:	je     0x41b0de
  41ade2:	jg     0x41b0ca
  41ade8:	call   QWORD PTR [rip+0x1e1de]        # 0x438fcc
  41adee:	or     esi,0xffffffff
  41adf1:	mov    DWORD PTR [rax],0x6d
  41adf7:	jmp    0x41ad75
  41adfc:	nop    DWORD PTR [rax+0x0]
  41ae00:	cmp    eax,0x2748
  41ae05:	je     0x41b0a2
  41ae0b:	jg     0x41ae43
  41ae0d:	cmp    eax,0x2744
  41ae12:	je     0x41afc6
  41ae18:	jg     0x41aebf
  41ae1e:	cmp    eax,0x2742
  41ae23:	je     0x41afb2
  41ae29:	jg     0x41af9e
  41ae2f:	call   QWORD PTR [rip+0x1e197]        # 0x438fcc
  41ae35:	or     esi,0xffffffff
  41ae38:	mov    DWORD PTR [rax],0x65
  41ae3e:	jmp    0x41ad75
  41ae43:	cmp    eax,0x274e
  41ae48:	je     0x41b02a
  41ae4e:	jg     0x41af27
  41ae54:	cmp    eax,0x274c
  41ae59:	je     0x41b066
  41ae5f:	jg     0x41b052
  41ae65:	cmp    eax,0x2749
  41ae6a:	jne    0x41af05
  41ae70:	call   QWORD PTR [rip+0x1e156]        # 0x438fcc
  41ae76:	or     esi,0xffffffff
  41ae79:	mov    DWORD PTR [rax],0x7e
  41ae7f:	jmp    0x41ad75
  41ae84:	cmp    eax,0x57
  41ae87:	je     0x41af76
  41ae8d:	jle    0x41af58
  41ae93:	cmp    eax,0x2734
  41ae98:	je     0x41b106
  41ae9e:	jg     0x41b0f2
  41aea4:	cmp    eax,0x2733
  41aea9:	jne    0x41af05
  41aeab:	call   QWORD PTR [rip+0x1e11b]        # 0x438fcc
  41aeb1:	or     esi,0xffffffff
  41aeb4:	mov    DWORD PTR [rax],0x8c
  41aeba:	jmp    0x41ad75
  41aebf:	cmp    eax,0x2746
  41aec4:	je     0x41b08e
  41aeca:	jg     0x41b07a
  41aed0:	call   QWORD PTR [rip+0x1e0f6]        # 0x438fcc
  41aed6:	or     esi,0xffffffff
  41aed9:	mov    DWORD PTR [rax],0x6a
  41aedf:	jmp    0x41ad75
  41aee4:	cmp    eax,0x273d
  41aee9:	je     0x41b002
  41aeef:	cmp    eax,0x273f
  41aef4:	je     0x41afee
  41aefa:	cmp    eax,0x273b
  41aeff:	je     0x41b016
  41af05:	call   QWORD PTR [rip+0x1e0c1]        # 0x438fcc
  41af0b:	lea    ecx,[rbx-0x2711]
  41af11:	lea    edx,[rbx-0x2710]
  41af17:	cmp    ecx,0x17
  41af1a:	cmovbe ebx,edx
  41af1d:	or     esi,0xffffffff
  41af20:	mov    DWORD PTR [rax],ebx
  41af22:	jmp    0x41ad75
  41af27:	cmp    eax,0x2751
  41af2c:	je     0x41b12e
  41af32:	cmp    eax,0x2752
  41af37:	je     0x41b11a
  41af3d:	cmp    eax,0x274f
  41af42:	jne    0x41af05
  41af44:	call   QWORD PTR [rip+0x1e082]        # 0x438fcc
  41af4a:	or     esi,0xffffffff
  41af4d:	mov    DWORD PTR [rax],0x26
  41af53:	jmp    0x41ad75
  41af58:	cmp    eax,0x6
  41af5b:	je     0x41af8a
  41af5d:	cmp    eax,0x8
  41af60:	jne    0x41af05
  41af62:	call   QWORD PTR [rip+0x1e064]        # 0x438fcc
  41af68:	or     esi,0xffffffff
  41af6b:	mov    DWORD PTR [rax],0xc
  41af71:	jmp    0x41ad75
  41af76:	call   QWORD PTR [rip+0x1e050]        # 0x438fcc
  41af7c:	or     esi,0xffffffff
  41af7f:	mov    DWORD PTR [rax],0x16
  41af85:	jmp    0x41ad75
  41af8a:	call   QWORD PTR [rip+0x1e03c]        # 0x438fcc
  41af90:	or     esi,0xffffffff
  41af93:	mov    DWORD PTR [rax],0x9
  41af99:	jmp    0x41ad75
  41af9e:	call   QWORD PTR [rip+0x1e028]        # 0x438fcc
  41afa4:	or     esi,0xffffffff
  41afa7:	mov    DWORD PTR [rax],0x76
  41afad:	jmp    0x41ad75
  41afb2:	call   QWORD PTR [rip+0x1e014]        # 0x438fcc
  41afb8:	or     esi,0xffffffff
  41afbb:	mov    DWORD PTR [rax],0x74
  41afc1:	jmp    0x41ad75
  41afc6:	call   QWORD PTR [rip+0x1e000]        # 0x438fcc
  41afcc:	or     esi,0xffffffff
  41afcf:	mov    DWORD PTR [rax],0x75
  41afd5:	jmp    0x41ad75
  41afda:	call   QWORD PTR [rip+0x1dfec]        # 0x438fcc
  41afe0:	or     esi,0xffffffff
  41afe3:	mov    DWORD PTR [rax],0x7b
  41afe9:	jmp    0x41ad75
  41afee:	call   QWORD PTR [rip+0x1dfd8]        # 0x438fcc
  41aff4:	or     esi,0xffffffff
  41aff7:	mov    DWORD PTR [rax],0x66
  41affd:	jmp    0x41ad75
  41b002:	call   QWORD PTR [rip+0x1dfc4]        # 0x438fcc
  41b008:	or     esi,0xffffffff
  41b00b:	mov    DWORD PTR [rax],0x82
  41b011:	jmp    0x41ad75
  41b016:	call   QWORD PTR [rip+0x1dfb0]        # 0x438fcc
  41b01c:	or     esi,0xffffffff
  41b01f:	mov    DWORD PTR [rax],0x87
  41b025:	jmp    0x41ad75
  41b02a:	call   QWORD PTR [rip+0x1df9c]        # 0x438fcc
  41b030:	or     esi,0xffffffff
  41b033:	mov    DWORD PTR [rax],0x72
  41b039:	jmp    0x41ad75
  41b03e:	call   QWORD PTR [rip+0x1df88]        # 0x438fcc
  41b044:	or     esi,0xffffffff
  41b047:	mov    DWORD PTR [rax],0x80
  41b04d:	jmp    0x41ad75
  41b052:	call   QWORD PTR [rip+0x1df74]        # 0x438fcc
  41b058:	or     esi,0xffffffff
  41b05b:	mov    DWORD PTR [rax],0x6b
  41b061:	jmp    0x41ad75
  41b066:	call   QWORD PTR [rip+0x1df60]        # 0x438fcc
  41b06c:	or     esi,0xffffffff
  41b06f:	mov    DWORD PTR [rax],0x8a
  41b075:	jmp    0x41ad75
  41b07a:	call   QWORD PTR [rip+0x1df4c]        # 0x438fcc
  41b080:	or     esi,0xffffffff
  41b083:	mov    DWORD PTR [rax],0x77
  41b089:	jmp    0x41ad75
  41b08e:	call   QWORD PTR [rip+0x1df38]        # 0x438fcc
  41b094:	or     esi,0xffffffff
  41b097:	mov    DWORD PTR [rax],0x6c
  41b09d:	jmp    0x41ad75
  41b0a2:	call   QWORD PTR [rip+0x1df24]        # 0x438fcc
  41b0a8:	or     esi,0xffffffff
  41b0ab:	mov    DWORD PTR [rax],0x71
  41b0b1:	jmp    0x41ad75
  41b0b6:	call   QWORD PTR [rip+0x1df10]        # 0x438fcc
  41b0bc:	or     esi,0xffffffff
  41b0bf:	mov    DWORD PTR [rax],0x64
  41b0c5:	jmp    0x41ad75
  41b0ca:	call   QWORD PTR [rip+0x1defc]        # 0x438fcc
  41b0d0:	or     esi,0xffffffff
  41b0d3:	mov    DWORD PTR [rax],0x88
  41b0d9:	jmp    0x41ad75
  41b0de:	call   QWORD PTR [rip+0x1dee8]        # 0x438fcc
  41b0e4:	or     esi,0xffffffff
  41b0e7:	mov    DWORD PTR [rax],0x73
  41b0ed:	jmp    0x41ad75
  41b0f2:	call   QWORD PTR [rip+0x1ded4]        # 0x438fcc
  41b0f8:	or     esi,0xffffffff
  41b0fb:	mov    DWORD PTR [rax],0x67
  41b101:	jmp    0x41ad75
  41b106:	call   QWORD PTR [rip+0x1dec0]        # 0x438fcc
  41b10c:	or     esi,0xffffffff
  41b10f:	mov    DWORD PTR [rax],0x70
  41b115:	jmp    0x41ad75
  41b11a:	call   QWORD PTR [rip+0x1deac]        # 0x438fcc
  41b120:	or     esi,0xffffffff
  41b123:	mov    DWORD PTR [rax],0x29
  41b129:	jmp    0x41ad75
  41b12e:	call   QWORD PTR [rip+0x1de98]        # 0x438fcc
  41b134:	or     esi,0xffffffff
  41b137:	mov    DWORD PTR [rax],0x6e
  41b13d:	jmp    0x41ad75
  41b142:	nop    DWORD PTR [rax+0x0]
  41b146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b150:	push   rbx
  41b151:	sub    rsp,0x1c0
  41b158:	xor    eax,eax
  41b15a:	cmp    DWORD PTR [rip+0x19e60],ecx        # 0x434fc0
  41b160:	mov    ebx,ecx
  41b162:	jl     0x41b170
  41b164:	add    rsp,0x1c0
  41b16b:	pop    rbx
  41b16c:	ret    
  41b16d:	nop    DWORD PTR [rax]
  41b170:	lea    rdx,[rsp+0x20]
  41b175:	movzx  ecx,cx
  41b178:	call   QWORD PTR [rip+0x1e14e]        # 0x4392cc
  41b17e:	mov    edx,eax
  41b180:	mov    eax,0x1
  41b185:	test   edx,edx
  41b187:	jne    0x41b164
  41b189:	movzx  edx,WORD PTR [rsp+0x20]
  41b18e:	mov    al,0x2
  41b190:	cmp    ebx,edx
  41b192:	jg     0x41b164
  41b194:	mov    eax,DWORD PTR [rip+0x19e26]        # 0x434fc0
  41b19a:	test   eax,eax
  41b19c:	jne    0x41b1b8
  41b19e:	lea    r8,[rip+0x19e3b]        # 0x434fe0
  41b1a5:	lea    rdx,[rip+0xfffffffffffff734]        # 0x41a8e0
  41b1ac:	lea    rcx,[rip+0xfffffffffffffb6d]        # 0x41ad20
  41b1b3:	call   0x41a820
  41b1b8:	mov    DWORD PTR [rip+0x19e02],ebx        # 0x434fc0
  41b1be:	xor    eax,eax
  41b1c0:	jmp    0x41b164
  41b1c2:	nop    DWORD PTR [rax+0x0]
  41b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1d0:	sub    rsp,0x28
  41b1d4:	lea    rcx,[rip+0x19e05]        # 0x434fe0
  41b1db:	mov    DWORD PTR [rip+0x19ddb],0x0        # 0x434fc0
  41b1e5:	call   0x41a8a0
  41b1ea:	call   QWORD PTR [rip+0x1e0ac]        # 0x43929c
  41b1f0:	test   eax,eax
  41b1f2:	setne  al
  41b1f5:	movzx  eax,al
  41b1f8:	add    rsp,0x28
  41b1fc:	ret    
  41b1fd:	nop
  41b1fe:	nop
  41b1ff:	nop
  41b200:	jmp    QWORD PTR [rip+0x1e146]        # 0x43934c
  41b206:	nop
  41b207:	nop
  41b208:	jmp    QWORD PTR [rip+0x1e136]        # 0x439344
  41b20e:	nop
  41b20f:	nop
  41b210:	jmp    QWORD PTR [rip+0x1e126]        # 0x43933c
  41b216:	nop
  41b217:	nop
  41b218:	jmp    QWORD PTR [rip+0x1e116]        # 0x439334
  41b21e:	nop
  41b21f:	nop
  41b220:	jmp    QWORD PTR [rip+0x1e106]        # 0x43932c
  41b226:	nop
  41b227:	nop
  41b228:	jmp    QWORD PTR [rip+0x1e0f6]        # 0x439324
  41b22e:	nop
  41b22f:	nop
  41b230:	jmp    QWORD PTR [rip+0x1e0e6]        # 0x43931c
  41b236:	nop
  41b237:	nop
  41b238:	jmp    QWORD PTR [rip+0x1e0d6]        # 0x439314
  41b23e:	nop
  41b23f:	nop
  41b240:	jmp    QWORD PTR [rip+0x1e0c6]        # 0x43930c
  41b246:	nop
  41b247:	nop
  41b248:	jmp    QWORD PTR [rip+0x1e0b6]        # 0x439304
  41b24e:	nop
  41b24f:	nop
  41b250:	jmp    QWORD PTR [rip+0x1e0a6]        # 0x4392fc
  41b256:	nop
  41b257:	nop
  41b258:	jmp    QWORD PTR [rip+0x1e096]        # 0x4392f4
  41b25e:	nop
  41b25f:	nop
  41b260:	jmp    QWORD PTR [rip+0x1e086]        # 0x4392ec
  41b266:	nop
  41b267:	nop
  41b268:	jmp    QWORD PTR [rip+0x1e076]        # 0x4392e4
  41b26e:	nop
  41b26f:	nop
  41b270:	jmp    QWORD PTR [rip+0x1e066]        # 0x4392dc
  41b276:	nop
  41b277:	nop
  41b278:	jmp    QWORD PTR [rip+0x1e056]        # 0x4392d4
  41b27e:	nop
  41b27f:	nop
  41b280:	jmp    QWORD PTR [rip+0x1e046]        # 0x4392cc
  41b286:	nop
  41b287:	nop
  41b288:	jmp    QWORD PTR [rip+0x1e036]        # 0x4392c4
  41b28e:	nop
  41b28f:	nop
  41b290:	jmp    QWORD PTR [rip+0x1e026]        # 0x4392bc
  41b296:	nop
  41b297:	nop
  41b298:	jmp    QWORD PTR [rip+0x1e016]        # 0x4392b4
  41b29e:	nop
  41b29f:	nop
  41b2a0:	jmp    QWORD PTR [rip+0x1e006]        # 0x4392ac
  41b2a6:	nop
  41b2a7:	nop
  41b2a8:	jmp    QWORD PTR [rip+0x1dff6]        # 0x4392a4
  41b2ae:	nop
  41b2af:	nop
  41b2b0:	jmp    QWORD PTR [rip+0x1dfe6]        # 0x43929c
  41b2b6:	nop
  41b2b7:	nop
  41b2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2c0:	sub    rsp,0x28
  41b2c4:	call   0x41b2f0
  41b2c9:	lea    rcx,[rip+0x19d30]        # 0x435000
  41b2d0:	mov    r8d,0x401
  41b2d6:	mov    rdx,rax
  41b2d9:	call   0x421d30
  41b2de:	lea    rax,[rip+0x19d1b]        # 0x435000
  41b2e5:	add    rsp,0x28
  41b2e9:	ret    
  41b2ea:	nop
  41b2eb:	nop
  41b2ec:	nop
  41b2ed:	nop
  41b2ee:	nop
  41b2ef:	nop
  41b2f0:	push   rbx
  41b2f1:	sub    rsp,0x40
  41b2f5:	lea    rbx,[rip+0x1a144]        # 0x435440
  41b2fc:	mov    r9d,0x400
  41b302:	xor    edx,edx
  41b304:	mov    r8d,ecx
  41b307:	mov    QWORD PTR [rsp+0x30],0x0
  41b310:	mov    DWORD PTR [rsp+0x28],0x400
  41b318:	mov    QWORD PTR [rsp+0x20],rbx
  41b31d:	mov    ecx,0x12ff
  41b322:	call   QWORD PTR [rip+0x1dafc]        # 0x438e24
  41b328:	mov    rax,rbx
  41b32b:	add    rsp,0x40
  41b32f:	pop    rbx
  41b330:	ret    
  41b331:	nop
  41b332:	nop
  41b333:	nop
  41b334:	nop
  41b335:	nop
  41b336:	nop
  41b337:	nop
  41b338:	nop
  41b339:	nop
  41b33a:	nop
  41b33b:	nop
  41b33c:	nop
  41b33d:	nop
  41b33e:	nop
  41b33f:	nop
  41b340:	jmp    QWORD PTR [rip+0x1df16]        # 0x43925c
  41b346:	nop
  41b347:	nop
  41b348:	jmp    QWORD PTR [rip+0x1df06]        # 0x439254
  41b34e:	nop
  41b34f:	nop
  41b350:	jmp    QWORD PTR [rip+0x1def6]        # 0x43924c
  41b356:	nop
  41b357:	nop
  41b358:	nop    DWORD PTR [rax+rax*1+0x0]
  41b360:	push   rbx
  41b361:	sub    rsp,0x30
  41b365:	mov    rbx,rcx
  41b368:	mov    rcx,QWORD PTR [rip+0x1bd81]        # 0x4370f0
  41b36f:	call   0x41b910
  41b374:	cmp    rax,0xffffffffffffffff
  41b378:	mov    QWORD PTR [rsp+0x20],rax
  41b37d:	je     0x41b3f5
  41b37f:	mov    ecx,0x8
  41b384:	call   0x421ef8
  41b389:	mov    rcx,QWORD PTR [rip+0x1bd60]        # 0x4370f0
  41b390:	call   0x41b910
  41b395:	mov    rcx,QWORD PTR [rip+0x1bd5c]        # 0x4370f8
  41b39c:	mov    QWORD PTR [rsp+0x20],rax
  41b3a1:	call   0x41b910
  41b3a6:	lea    rdx,[rsp+0x20]
  41b3ab:	lea    r8,[rsp+0x28]
  41b3b0:	mov    rcx,rbx
  41b3b3:	mov    QWORD PTR [rsp+0x28],rax
  41b3b8:	call   0x421f98
  41b3bd:	mov    rcx,QWORD PTR [rsp+0x20]
  41b3c2:	mov    rbx,rax
  41b3c5:	call   0x41b920
  41b3ca:	mov    rcx,QWORD PTR [rsp+0x28]
  41b3cf:	mov    QWORD PTR [rip+0x1bd1a],rax        # 0x4370f0
  41b3d6:	call   0x41b920
  41b3db:	mov    ecx,0x8
  41b3e0:	mov    QWORD PTR [rip+0x1bd11],rax        # 0x4370f8
  41b3e7:	call   0x421ec0
  41b3ec:	mov    rax,rbx
  41b3ef:	add    rsp,0x30
  41b3f3:	pop    rbx
  41b3f4:	ret    
  41b3f5:	mov    rax,QWORD PTR [rip+0x120c4]        # 0x42d4c0
  41b3fc:	mov    rcx,rbx
  41b3ff:	call   QWORD PTR [rax]
  41b401:	add    rsp,0x30
  41b405:	pop    rbx
  41b406:	ret    
  41b407:	nop    WORD PTR [rax+rax*1+0x0]
  41b410:	sub    rsp,0x28
  41b414:	call   0x41b360
  41b419:	test   rax,rax
  41b41c:	sete   al
  41b41f:	movzx  eax,al
  41b422:	neg    eax
  41b424:	add    rsp,0x28
  41b428:	ret    
  41b429:	nop
  41b42a:	nop
  41b42b:	nop
  41b42c:	nop
  41b42d:	nop
  41b42e:	nop
  41b42f:	nop
  41b430:	sub    rsp,0x28
  41b434:	mov    rax,QWORD PTR [rip+0x8965]        # 0x423da0
  41b43b:	mov    rax,QWORD PTR [rax]
  41b43e:	test   rax,rax
  41b441:	je     0x41b460
  41b443:	call   rax
  41b445:	mov    rax,QWORD PTR [rip+0x8954]        # 0x423da0
  41b44c:	lea    rdx,[rax+0x8]
  41b450:	mov    rax,QWORD PTR [rax+0x8]
  41b454:	mov    QWORD PTR [rip+0x8945],rdx        # 0x423da0
  41b45b:	test   rax,rax
  41b45e:	jne    0x41b443
  41b460:	add    rsp,0x28
  41b464:	ret    
  41b465:	nop
  41b466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b470:	push   rsi
  41b471:	push   rbx
  41b472:	sub    rsp,0x28
  41b476:	mov    rsi,QWORD PTR [rip+0x11fb3]        # 0x42d430
  41b47d:	mov    rax,QWORD PTR [rsi]
  41b480:	cmp    eax,0xffffffff
  41b483:	mov    ebx,eax
  41b485:	je     0x41b4b0
  41b487:	test   ebx,ebx
  41b489:	je     0x41b49a
  41b48b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b490:	mov    eax,ebx
  41b492:	call   QWORD PTR [rsi+rax*8]
  41b495:	sub    ebx,0x1
  41b498:	jne    0x41b490
  41b49a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x41b430
  41b4a1:	add    rsp,0x28
  41b4a5:	pop    rbx
  41b4a6:	pop    rsi
  41b4a7:	jmp    0x41b410
  41b4ac:	nop    DWORD PTR [rax+0x0]
  41b4b0:	xor    ebx,ebx
  41b4b2:	jmp    0x41b4b6
  41b4b4:	mov    ebx,eax
  41b4b6:	lea    edx,[rbx+0x1]
  41b4b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41b4be:	mov    rax,rdx
  41b4c1:	jne    0x41b4b4
  41b4c3:	jmp    0x41b487
  41b4c5:	nop
  41b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4d0:	mov    eax,DWORD PTR [rip+0x1a7aa]        # 0x435c80
  41b4d6:	test   eax,eax
  41b4d8:	je     0x41b4e0
  41b4da:	repz ret 
  41b4dc:	nop    DWORD PTR [rax+0x0]
  41b4e0:	mov    DWORD PTR [rip+0x1a796],0x1        # 0x435c80
  41b4ea:	jmp    0x41b470
  41b4ec:	nop
  41b4ed:	nop
  41b4ee:	nop
  41b4ef:	nop
  41b4f0:	mov    rax,QWORD PTR [rip+0x1da8d]        # 0x438f84
  41b4f7:	rex.W jmp rax
  41b4fa:	nop
  41b4fb:	nop
  41b4fc:	nop
  41b4fd:	nop
  41b4fe:	nop
  41b4ff:	nop
  41b500:	xor    eax,eax
  41b502:	ret    
  41b503:	nop
  41b504:	nop
  41b505:	nop
  41b506:	nop
  41b507:	nop
  41b508:	nop
  41b509:	nop
  41b50a:	nop
  41b50b:	nop
  41b50c:	nop
  41b50d:	nop
  41b50e:	nop
  41b50f:	nop
  41b510:	push   r12
  41b512:	push   rbp
  41b513:	push   rdi
  41b514:	push   rsi
  41b515:	push   rbx
  41b516:	sub    rsp,0x40
  41b51a:	mov    rbx,QWORD PTR [rip+0x891f]        # 0x423e40
  41b521:	movabs rax,0x2b992ddfa232
  41b52b:	mov    QWORD PTR [rsp+0x20],0x0
  41b534:	cmp    rbx,rax
  41b537:	je     0x41b550
  41b539:	not    rbx
  41b53c:	mov    QWORD PTR [rip+0x890d],rbx        # 0x423e50
  41b543:	add    rsp,0x40
  41b547:	pop    rbx
  41b548:	pop    rsi
  41b549:	pop    rdi
  41b54a:	pop    rbp
  41b54b:	pop    r12
  41b54d:	ret    
  41b54e:	xchg   ax,ax
  41b550:	lea    rcx,[rsp+0x20]
  41b555:	call   QWORD PTR [rip+0x1d939]        # 0x438e94
  41b55b:	mov    r12,QWORD PTR [rsp+0x20]
  41b560:	call   QWORD PTR [rip+0x1d8d6]        # 0x438e3c
  41b566:	mov    ebp,eax
  41b568:	call   QWORD PTR [rip+0x1d8d6]        # 0x438e44
  41b56e:	mov    edi,eax
  41b570:	call   QWORD PTR [rip+0x1d926]        # 0x438e9c
  41b576:	lea    rcx,[rsp+0x30]
  41b57b:	mov    esi,eax
  41b57d:	call   QWORD PTR [rip+0x1d951]        # 0x438ed4
  41b583:	xor    r12,QWORD PTR [rsp+0x30]
  41b588:	mov    edx,edi
  41b58a:	movabs rax,0xffffffffffff
  41b594:	xor    rbp,r12
  41b597:	mov    rdi,rbp
  41b59a:	xor    rdi,rdx
  41b59d:	mov    edx,esi
  41b59f:	xor    rdi,rdx
  41b5a2:	mov    rsi,rdi
  41b5a5:	and    rsi,rax
  41b5a8:	cmp    rsi,rbx
  41b5ab:	je     0x41b5d0
  41b5ad:	mov    rax,rsi
  41b5b0:	not    rax
  41b5b3:	mov    QWORD PTR [rip+0x8886],rsi        # 0x423e40
  41b5ba:	mov    QWORD PTR [rip+0x888f],rax        # 0x423e50
  41b5c1:	add    rsp,0x40
  41b5c5:	pop    rbx
  41b5c6:	pop    rsi
  41b5c7:	pop    rdi
  41b5c8:	pop    rbp
  41b5c9:	pop    r12
  41b5cb:	ret    
  41b5cc:	nop    DWORD PTR [rax+0x0]
  41b5d0:	movabs rax,0xffffd466d2205dcc
  41b5da:	movabs rsi,0x2b992ddfa233
  41b5e4:	jmp    0x41b5b3
  41b5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5f0:	push   rbp
  41b5f1:	push   rsi
  41b5f2:	push   rbx
  41b5f3:	mov    rbp,rsp
  41b5f6:	sub    rsp,0x70
  41b5fa:	mov    rsi,rcx
  41b5fd:	lea    rcx,[rip+0x1a6bc]        # 0x435cc0
  41b604:	call   QWORD PTR [rip+0x1d8da]        # 0x438ee4
  41b60a:	mov    rbx,QWORD PTR [rip+0x1a7a7]        # 0x435db8
  41b611:	xor    r8d,r8d
  41b614:	lea    rdx,[rbp-0x28]
  41b618:	mov    rcx,rbx
  41b61b:	call   QWORD PTR [rip+0x1d8cb]        # 0x438eec
  41b621:	test   rax,rax
  41b624:	mov    r9,rax
  41b627:	je     0x41b6d0
  41b62d:	lea    rax,[rbp-0x20]
  41b631:	mov    QWORD PTR [rsp+0x38],0x0
  41b63a:	mov    r8,rbx
  41b63d:	mov    rdx,QWORD PTR [rbp-0x28]
  41b641:	xor    ecx,ecx
  41b643:	mov    QWORD PTR [rsp+0x30],rax
  41b648:	lea    rax,[rbp-0x18]
  41b64c:	mov    QWORD PTR [rsp+0x28],rax
  41b651:	lea    rax,[rip+0x1a668]        # 0x435cc0
  41b658:	mov    QWORD PTR [rsp+0x20],rax
  41b65d:	call   QWORD PTR [rip+0x1d891]        # 0x438ef4
  41b663:	mov    rax,QWORD PTR [rip+0x1a74e]        # 0x435db8
  41b66a:	xor    ecx,ecx
  41b66c:	mov    QWORD PTR [rip+0x1a6cd],rsi        # 0x435d40
  41b673:	mov    DWORD PTR [rip+0x1ab43],0xc0000409        # 0x4361c0
  41b67d:	mov    DWORD PTR [rip+0x1ab3d],0x1        # 0x4361c4
  41b687:	mov    QWORD PTR [rip+0x1ab42],rax        # 0x4361d0
  41b68e:	mov    rax,QWORD PTR [rip+0x87ab]        # 0x423e40
  41b695:	mov    QWORD PTR [rbp-0x10],rax
  41b699:	mov    rax,QWORD PTR [rip+0x87b0]        # 0x423e50
  41b6a0:	mov    QWORD PTR [rbp-0x8],rax
  41b6a4:	call   QWORD PTR [rip+0x1d852]        # 0x438efc
  41b6aa:	lea    rcx,[rip+0x115df]        # 0x42cc90
  41b6b1:	call   QWORD PTR [rip+0x1d86d]        # 0x438f24
  41b6b7:	call   QWORD PTR [rip+0x1d777]        # 0x438e34
  41b6bd:	mov    edx,0xc0000409
  41b6c2:	mov    rcx,rax
  41b6c5:	call   QWORD PTR [rip+0x1d849]        # 0x438f14
  41b6cb:	call   0x421eb8
  41b6d0:	mov    rax,QWORD PTR [rbp+0x18]
  41b6d4:	mov    QWORD PTR [rip+0x1a6dd],rax        # 0x435db8
  41b6db:	lea    rax,[rbp+0x8]
  41b6df:	mov    QWORD PTR [rip+0x1a672],rax        # 0x435d58
  41b6e6:	jmp    0x41b663
  41b6eb:	nop
  41b6ec:	nop
  41b6ed:	nop
  41b6ee:	nop
  41b6ef:	nop
  41b6f0:	sub    rsp,0x28
  41b6f4:	test   edx,edx
  41b6f6:	je     0x41b710
  41b6f8:	cmp    edx,0x3
  41b6fb:	je     0x41b710
  41b6fd:	mov    eax,0x1
  41b702:	add    rsp,0x28
  41b706:	ret    
  41b707:	nop    WORD PTR [rax+rax*1+0x0]
  41b710:	call   0x41c400
  41b715:	mov    eax,0x1
  41b71a:	add    rsp,0x28
  41b71e:	ret    
  41b71f:	nop
  41b720:	push   rsi
  41b721:	push   rbx
  41b722:	sub    rsp,0x28
  41b726:	mov    rax,QWORD PTR [rip+0x11ce3]        # 0x42d410
  41b72d:	cmp    DWORD PTR [rax],0x2
  41b730:	je     0x41b738
  41b732:	mov    DWORD PTR [rax],0x2
  41b738:	cmp    edx,0x2
  41b73b:	je     0x41b750
  41b73d:	cmp    edx,0x1
  41b740:	je     0x41b782
  41b742:	mov    eax,0x1
  41b747:	add    rsp,0x28
  41b74b:	pop    rbx
  41b74c:	pop    rsi
  41b74d:	ret    
  41b74e:	xchg   ax,ax
  41b750:	lea    rbx,[rip+0x20909]        # 0x43c060
  41b757:	lea    rsi,[rip+0x20902]        # 0x43c060
  41b75e:	cmp    rbx,rsi
  41b761:	je     0x41b742
  41b763:	mov    rax,QWORD PTR [rbx]
  41b766:	test   rax,rax
  41b769:	je     0x41b76d
  41b76b:	call   rax
  41b76d:	add    rbx,0x8
  41b771:	cmp    rbx,rsi
  41b774:	jne    0x41b763
  41b776:	mov    eax,0x1
  41b77b:	add    rsp,0x28
  41b77f:	pop    rbx
  41b780:	pop    rsi
  41b781:	ret    
  41b782:	call   0x41c400
  41b787:	jmp    0x41b742
  41b789:	nop    DWORD PTR [rax+0x0]
  41b790:	xor    eax,eax
  41b792:	ret    
  41b793:	nop
  41b794:	nop
  41b795:	nop
  41b796:	nop
  41b797:	nop
  41b798:	nop
  41b799:	nop
  41b79a:	nop
  41b79b:	nop
  41b79c:	nop
  41b79d:	nop
  41b79e:	nop
  41b79f:	nop
  41b7a0:	sub    rsp,0x58
  41b7a4:	mov    rax,QWORD PTR [rip+0x1aaf5]        # 0x4362a0
  41b7ab:	test   rax,rax
  41b7ae:	je     0x41b7dc
  41b7b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  41b7b9:	mov    DWORD PTR [rsp+0x20],ecx
  41b7bd:	lea    rcx,[rsp+0x20]
  41b7c2:	mov    QWORD PTR [rsp+0x28],rdx
  41b7c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  41b7cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  41b7d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  41b7d9:	call   rax
  41b7db:	nop
  41b7dc:	add    rsp,0x58
  41b7e0:	ret    
  41b7e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7f0:	mov    QWORD PTR [rip+0x1aaa9],rcx        # 0x4362a0
  41b7f7:	jmp    0x421f70
  41b7fc:	nop    DWORD PTR [rax+0x0]
  41b800:	push   rsi
  41b801:	push   rbx
  41b802:	sub    rsp,0x78
  41b806:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41b80b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41b810:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41b816:	cmp    DWORD PTR [rcx],0x6
  41b819:	ja     0x41b8f0
  41b81f:	mov    edx,DWORD PTR [rcx]
  41b821:	lea    rax,[rip+0x115ac]        # 0x42cdd4
  41b828:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41b82c:	add    rax,rdx
  41b82f:	jmp    rax
  41b831:	lea    rbx,[rip+0x11478]        # 0x42ccb0
  41b838:	nop    DWORD PTR [rax+rax*1+0x0]
  41b840:	movsd  xmm8,QWORD PTR [rcx+0x20]
  41b846:	mov    rsi,QWORD PTR [rcx+0x8]
  41b84a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41b84f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  41b854:	call   0x421f88
  41b859:	movsd  QWORD PTR [rsp+0x30],xmm8
  41b860:	lea    rcx,[rax+0x60]
  41b864:	lea    rdx,[rip+0x1153d]        # 0x42cda8
  41b86b:	movsd  QWORD PTR [rsp+0x28],xmm7
  41b871:	mov    r9,rsi
  41b874:	mov    r8,rbx
  41b877:	movsd  QWORD PTR [rsp+0x20],xmm6
  41b87d:	call   0x421e70
  41b882:	nop
  41b883:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41b888:	xor    eax,eax
  41b88a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41b88f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41b895:	add    rsp,0x78
  41b899:	pop    rbx
  41b89a:	pop    rsi
  41b89b:	ret    
  41b89c:	nop    DWORD PTR [rax+0x0]
  41b8a0:	lea    rbx,[rip+0x11428]        # 0x42cccf
  41b8a7:	jmp    0x41b840
  41b8a9:	nop    DWORD PTR [rax+0x0]
  41b8b0:	lea    rbx,[rip+0x11439]        # 0x42ccf0
  41b8b7:	jmp    0x41b840
  41b8b9:	nop    DWORD PTR [rax+0x0]
  41b8c0:	lea    rbx,[rip+0x11499]        # 0x42cd60
  41b8c7:	jmp    0x41b840
  41b8cc:	nop    DWORD PTR [rax+0x0]
  41b8d0:	lea    rbx,[rip+0x11461]        # 0x42cd38
  41b8d7:	jmp    0x41b840
  41b8dc:	nop    DWORD PTR [rax+0x0]
  41b8e0:	lea    rbx,[rip+0x11429]        # 0x42cd10
  41b8e7:	jmp    0x41b840
  41b8ec:	nop    DWORD PTR [rax+0x0]
  41b8f0:	lea    rbx,[rip+0x1149f]        # 0x42cd96
  41b8f7:	jmp    0x41b840
  41b8fc:	nop
  41b8fd:	nop
  41b8fe:	nop
  41b8ff:	nop
  41b900:	fninit 
  41b902:	ret    
  41b903:	nop
  41b904:	nop
  41b905:	nop
  41b906:	nop
  41b907:	nop
  41b908:	nop
  41b909:	nop
  41b90a:	nop
  41b90b:	nop
  41b90c:	nop
  41b90d:	nop
  41b90e:	nop
  41b90f:	nop
  41b910:	mov    rax,rcx
  41b913:	ret    
  41b914:	xchg   ax,ax
  41b916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b920:	mov    rax,rcx
  41b923:	ret    
  41b924:	nop
  41b925:	nop
  41b926:	nop
  41b927:	nop
  41b928:	nop
  41b929:	nop
  41b92a:	nop
  41b92b:	nop
  41b92c:	nop
  41b92d:	nop
  41b92e:	nop
  41b92f:	nop
  41b930:	push   rsi
  41b931:	push   rbx
  41b932:	sub    rsp,0x38
  41b936:	lea    rax,[rsp+0x58]
  41b93b:	mov    rbx,rcx
  41b93e:	mov    QWORD PTR [rsp+0x58],rdx
  41b943:	mov    QWORD PTR [rsp+0x60],r8
  41b948:	mov    QWORD PTR [rsp+0x68],r9
  41b94d:	mov    QWORD PTR [rsp+0x28],rax
  41b952:	call   0x421f88
  41b957:	lea    rcx,[rip+0x11492]        # 0x42cdf0
  41b95e:	lea    r9,[rax+0x60]
  41b962:	mov    r8d,0x1b
  41b968:	mov    edx,0x1
  41b96d:	call   0x421e38
  41b972:	mov    rsi,QWORD PTR [rsp+0x28]
  41b977:	call   0x421f88
  41b97c:	lea    rcx,[rax+0x60]
  41b980:	mov    rdx,rbx
  41b983:	mov    r8,rsi
  41b986:	call   0x421d48
  41b98b:	call   0x421eb8
  41b990:	nop
  41b991:	nop    DWORD PTR [rax+rax*1+0x0]
  41b996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9a0:	push   r13
  41b9a2:	push   r12
  41b9a4:	push   rbp
  41b9a5:	push   rdi
  41b9a6:	push   rsi
  41b9a7:	push   rbx
  41b9a8:	sub    rsp,0x58
  41b9ac:	movsxd rbp,DWORD PTR [rip+0x1a911]        # 0x4362c4
  41b9b3:	mov    rbx,rcx
  41b9b6:	mov    rsi,rdx
  41b9b9:	mov    rdi,r8
  41b9bc:	test   ebp,ebp
  41b9be:	jle    0x41baba
  41b9c4:	mov    rax,QWORD PTR [rip+0x1a8fd]        # 0x4362c8
  41b9cb:	xor    r9d,r9d
  41b9ce:	add    rax,0x8
  41b9d2:	mov    r10,QWORD PTR [rax]
  41b9d5:	cmp    rbx,r10
  41b9d8:	jb     0x41b9ee
  41b9da:	mov    rdx,QWORD PTR [rax+0x8]
  41b9de:	mov    r11d,DWORD PTR [rdx+0x8]
  41b9e2:	add    r10,r11
  41b9e5:	cmp    rbx,r10
  41b9e8:	jb     0x41baa0
  41b9ee:	add    r9d,0x1
  41b9f2:	add    rax,0x18
  41b9f6:	cmp    r9d,ebp
  41b9f9:	jne    0x41b9d2
  41b9fb:	mov    rcx,rbx
  41b9fe:	call   0x41c610
  41ba03:	test   rax,rax
  41ba06:	mov    r12,rax
  41ba09:	je     0x41baf2
  41ba0f:	lea    rbp,[rbp+rbp*2+0x0]
  41ba14:	shl    rbp,0x3
  41ba18:	mov    r13,rbp
  41ba1b:	add    r13,QWORD PTR [rip+0x1a8a6]        # 0x4362c8
  41ba22:	mov    QWORD PTR [r13+0x10],rax
  41ba26:	mov    DWORD PTR [r13+0x0],0x0
  41ba2e:	call   0x41c730
  41ba33:	mov    edx,DWORD PTR [r12+0xc]
  41ba38:	mov    r8d,0x30
  41ba3e:	add    rax,rdx
  41ba41:	lea    rdx,[rsp+0x20]
  41ba46:	mov    QWORD PTR [r13+0x8],rax
  41ba4a:	mov    rax,QWORD PTR [rip+0x1a877]        # 0x4362c8
  41ba51:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  41ba56:	call   QWORD PTR [rip+0x1d4d8]        # 0x438f34
  41ba5c:	test   rax,rax
  41ba5f:	je     0x41bad5
  41ba61:	mov    eax,DWORD PTR [rsp+0x44]
  41ba65:	lea    edx,[rax-0x4]
  41ba68:	and    edx,0xfffffffb
  41ba6b:	je     0x41ba99
  41ba6d:	sub    eax,0x40
  41ba70:	and    eax,0xffffffbf
  41ba73:	je     0x41ba99
  41ba75:	mov    r9,rbp
  41ba78:	add    r9,QWORD PTR [rip+0x1a849]        # 0x4362c8
  41ba7f:	mov    r8d,0x40
  41ba85:	mov    rdx,QWORD PTR [rsp+0x38]
  41ba8a:	mov    rcx,QWORD PTR [rsp+0x20]
  41ba8f:	call   QWORD PTR [rip+0x1d497]        # 0x438f2c
  41ba95:	test   eax,eax
  41ba97:	je     0x41bac1
  41ba99:	add    DWORD PTR [rip+0x1a824],0x1        # 0x4362c4
  41baa0:	mov    r8,rdi
  41baa3:	mov    rdx,rsi
  41baa6:	mov    rcx,rbx
  41baa9:	add    rsp,0x58
  41baad:	pop    rbx
  41baae:	pop    rsi
  41baaf:	pop    rdi
  41bab0:	pop    rbp
  41bab1:	pop    r12
  41bab3:	pop    r13
  41bab5:	jmp    0x421e08
  41baba:	xor    ebp,ebp
  41babc:	jmp    0x41b9fb
  41bac1:	call   QWORD PTR [rip+0x1d395]        # 0x438e5c
  41bac7:	lea    rcx,[rip+0x1139a]        # 0x42ce68
  41bace:	mov    edx,eax
  41bad0:	call   0x41b930
  41bad5:	mov    rax,QWORD PTR [rip+0x1a7ec]        # 0x4362c8
  41badc:	mov    edx,DWORD PTR [r12+0x8]
  41bae1:	lea    rcx,[rip+0x11348]        # 0x42ce30
  41bae8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41baed:	call   0x41b930
  41baf2:	lea    rcx,[rip+0x11317]        # 0x42ce10
  41baf9:	mov    rdx,rbx
  41bafc:	call   0x41b930
  41bb01:	nop
  41bb02:	nop    DWORD PTR [rax+0x0]
  41bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb10:	push   rbp
  41bb11:	push   r14
  41bb13:	push   r13
  41bb15:	push   r12
  41bb17:	push   rdi
  41bb18:	push   rsi
  41bb19:	push   rbx
  41bb1a:	mov    rbp,rsp
  41bb1d:	sub    rsp,0x60
  41bb21:	mov    ebx,DWORD PTR [rip+0x1a799]        # 0x4362c0
  41bb27:	test   ebx,ebx
  41bb29:	je     0x41bb40
  41bb2b:	mov    rsp,rbp
  41bb2e:	pop    rbx
  41bb2f:	pop    rsi
  41bb30:	pop    rdi
  41bb31:	pop    r12
  41bb33:	pop    r13
  41bb35:	pop    r14
  41bb37:	pop    rbp
  41bb38:	ret    
  41bb39:	nop    DWORD PTR [rax+0x0]
  41bb40:	mov    DWORD PTR [rip+0x1a776],0x1        # 0x4362c0
  41bb4a:	call   0x41c660
  41bb4f:	cdqe   
  41bb51:	lea    rax,[rax+rax*2]
  41bb55:	lea    rax,[rax*8+0x1e]
  41bb5d:	and    rax,0xfffffffffffffff0
  41bb61:	call   0x41c880
  41bb66:	mov    rsi,QWORD PTR [rip+0x118d3]        # 0x42d440
  41bb6d:	mov    rbx,QWORD PTR [rip+0x118dc]        # 0x42d450
  41bb74:	sub    rsp,rax
  41bb77:	mov    DWORD PTR [rip+0x1a743],0x0        # 0x4362c4
  41bb81:	lea    rax,[rsp+0x20]
  41bb86:	mov    QWORD PTR [rip+0x1a73b],rax        # 0x4362c8
  41bb8d:	mov    rax,rsi
  41bb90:	sub    rax,rbx
  41bb93:	cmp    rax,0x7
  41bb97:	jle    0x41bb2b
  41bb99:	cmp    rax,0xb
  41bb9d:	jle    0x41bbc5
  41bb9f:	mov    r11d,DWORD PTR [rbx]
  41bba2:	test   r11d,r11d
  41bba5:	jne    0x41bcf0
  41bbab:	mov    r10d,DWORD PTR [rbx+0x4]
  41bbaf:	test   r10d,r10d
  41bbb2:	jne    0x41bcf0
  41bbb8:	mov    r9d,DWORD PTR [rbx+0x8]
  41bbbc:	test   r9d,r9d
  41bbbf:	jne    0x41bbdc
  41bbc1:	add    rbx,0xc
  41bbc5:	mov    r8d,DWORD PTR [rbx]
  41bbc8:	test   r8d,r8d
  41bbcb:	jne    0x41bcf0
  41bbd1:	mov    ecx,DWORD PTR [rbx+0x4]
  41bbd4:	test   ecx,ecx
  41bbd6:	jne    0x41bcf0
  41bbdc:	mov    edx,DWORD PTR [rbx+0x8]
  41bbdf:	cmp    edx,0x1
  41bbe2:	jne    0x41bdfc
  41bbe8:	add    rbx,0xc
  41bbec:	cmp    rbx,rsi
  41bbef:	jae    0x41bb2b
  41bbf5:	mov    r12,QWORD PTR [rip+0x11874]        # 0x42d470
  41bbfc:	lea    r13,[rbp-0x30]
  41bc00:	movabs r14,0xffffffff00000000
  41bc0a:	mov    ecx,DWORD PTR [rbx+0x4]
  41bc0d:	mov    eax,DWORD PTR [rbx]
  41bc0f:	movzx  edx,BYTE PTR [rbx+0x8]
  41bc13:	add    rax,r12
  41bc16:	add    rcx,r12
  41bc19:	cmp    edx,0x10
  41bc1c:	mov    r8,QWORD PTR [rax]
  41bc1f:	je     0x41bd66
  41bc25:	jbe    0x41bd2d
  41bc2b:	cmp    edx,0x20
  41bc2e:	je     0x41bdaf
  41bc34:	cmp    edx,0x40
  41bc37:	jne    0x41bd9b
  41bc3d:	sub    r8,rax
  41bc40:	mov    rdx,r13
  41bc43:	mov    rdi,r13
  41bc46:	mov    rax,r8
  41bc49:	add    rax,QWORD PTR [rcx]
  41bc4c:	mov    r8d,0x8
  41bc52:	mov    QWORD PTR [rbp-0x30],rax
  41bc56:	call   0x41b9a0
  41bc5b:	add    rbx,0xc
  41bc5f:	cmp    rbx,rsi
  41bc62:	jb     0x41bc0a
  41bc64:	mov    eax,DWORD PTR [rip+0x1a65a]        # 0x4362c4
  41bc6a:	xor    ebx,ebx
  41bc6c:	xor    esi,esi
  41bc6e:	test   eax,eax
  41bc70:	jle    0x41bb2b
  41bc76:	mov    r14,QWORD PTR [rip+0x1d2b7]        # 0x438f34
  41bc7d:	lea    r13,[rbp-0x34]
  41bc81:	mov    r12,QWORD PTR [rip+0x1d2a4]        # 0x438f2c
  41bc88:	jmp    0x41bca3
  41bc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc90:	add    esi,0x1
  41bc93:	add    rbx,0x18
  41bc97:	cmp    esi,DWORD PTR [rip+0x1a627]        # 0x4362c4
  41bc9d:	jge    0x41bb2b
  41bca3:	mov    rax,rbx
  41bca6:	add    rax,QWORD PTR [rip+0x1a61b]        # 0x4362c8
  41bcad:	mov    edx,DWORD PTR [rax]
  41bcaf:	test   edx,edx
  41bcb1:	je     0x41bc90
  41bcb3:	mov    rcx,QWORD PTR [rax+0x8]
  41bcb7:	mov    r8d,0x30
  41bcbd:	mov    rdx,rdi
  41bcc0:	call   r14
  41bcc3:	test   rax,rax
  41bcc6:	je     0x41bdde
  41bccc:	mov    rax,QWORD PTR [rip+0x1a5f5]        # 0x4362c8
  41bcd3:	mov    r9,r13
  41bcd6:	mov    rdx,QWORD PTR [rbp-0x18]
  41bcda:	mov    rcx,QWORD PTR [rbp-0x30]
  41bcde:	mov    r8d,DWORD PTR [rax+rbx*1]
  41bce2:	call   r12
  41bce5:	jmp    0x41bc90
  41bce7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcf0:	cmp    rbx,rsi
  41bcf3:	jae    0x41bb2b
  41bcf9:	mov    r12,QWORD PTR [rip+0x11770]        # 0x42d470
  41bd00:	lea    rdi,[rbp-0x30]
  41bd04:	mov    ecx,DWORD PTR [rbx+0x4]
  41bd07:	mov    eax,DWORD PTR [rbx]
  41bd09:	mov    r8d,0x4
  41bd0f:	mov    rdx,rdi
  41bd12:	add    rbx,0x8
  41bd16:	add    rcx,r12
  41bd19:	add    eax,DWORD PTR [rcx]
  41bd1b:	mov    DWORD PTR [rbp-0x30],eax
  41bd1e:	call   0x41b9a0
  41bd23:	cmp    rbx,rsi
  41bd26:	jb     0x41bd04
  41bd28:	jmp    0x41bc64
  41bd2d:	cmp    edx,0x8
  41bd30:	jne    0x41bd9b
  41bd32:	movzx  edx,BYTE PTR [rcx]
  41bd35:	mov    rdi,r13
  41bd38:	mov    r10,rdx
  41bd3b:	or     r10,0xffffffffffffff00
  41bd42:	test   dl,dl
  41bd44:	cmovs  rdx,r10
  41bd48:	sub    rdx,rax
  41bd4b:	lea    rax,[r8+rdx*1]
  41bd4f:	mov    r8d,0x1
  41bd55:	mov    rdx,r13
  41bd58:	mov    QWORD PTR [rbp-0x30],rax
  41bd5c:	call   0x41b9a0
  41bd61:	jmp    0x41bc5b
  41bd66:	movzx  edx,WORD PTR [rcx]
  41bd69:	mov    rdi,r13
  41bd6c:	mov    r10,rdx
  41bd6f:	or     r10,0xffffffffffff0000
  41bd76:	test   dx,dx
  41bd79:	cmovs  rdx,r10
  41bd7d:	sub    rdx,rax
  41bd80:	lea    rax,[r8+rdx*1]
  41bd84:	mov    r8d,0x2
  41bd8a:	mov    rdx,r13
  41bd8d:	mov    QWORD PTR [rbp-0x30],rax
  41bd91:	call   0x41b9a0
  41bd96:	jmp    0x41bc5b
  41bd9b:	lea    rcx,[rip+0x11126]        # 0x42cec8
  41bda2:	mov    QWORD PTR [rbp-0x30],0x0
  41bdaa:	call   0x41b930
  41bdaf:	mov    edx,DWORD PTR [rcx]
  41bdb1:	mov    rdi,r13
  41bdb4:	mov    r10,rdx
  41bdb7:	or     r10,r14
  41bdba:	test   edx,edx
  41bdbc:	cmovs  rdx,r10
  41bdc0:	sub    rdx,rax
  41bdc3:	lea    rax,[r8+rdx*1]
  41bdc7:	mov    r8d,0x4
  41bdcd:	mov    rdx,r13
  41bdd0:	mov    QWORD PTR [rbp-0x30],rax
  41bdd4:	call   0x41b9a0
  41bdd9:	jmp    0x41bc5b
  41bdde:	add    rbx,QWORD PTR [rip+0x1a4e3]        # 0x4362c8
  41bde5:	lea    rcx,[rip+0x11044]        # 0x42ce30
  41bdec:	mov    rax,QWORD PTR [rbx+0x10]
  41bdf0:	mov    r8,QWORD PTR [rbx+0x8]
  41bdf4:	mov    edx,DWORD PTR [rax+0x8]
  41bdf7:	call   0x41b930
  41bdfc:	lea    rcx,[rip+0x1108d]        # 0x42ce90
  41be03:	call   0x41b930
  41be08:	nop
  41be09:	nop
  41be0a:	nop
  41be0b:	nop
  41be0c:	nop
  41be0d:	nop
  41be0e:	nop
  41be0f:	nop
  41be10:	sub    rsp,0x28
  41be14:	mov    eax,DWORD PTR [rcx]
  41be16:	cmp    eax,0xc0000091
  41be1b:	ja     0x41be80
  41be1d:	cmp    eax,0xc000008d
  41be22:	jae    0x41be9f
  41be24:	cmp    eax,0xc0000008
  41be29:	je     0x41bf40
  41be2f:	ja     0x41bf10
  41be35:	cmp    eax,0x80000002
  41be3a:	je     0x41bf40
  41be40:	cmp    eax,0xc0000005
  41be45:	jne    0x41bf1e
  41be4b:	xor    edx,edx
  41be4d:	mov    ecx,0xb
  41be52:	call   0x421dc8
  41be57:	cmp    rax,0x1
  41be5b:	je     0x41bfa0
  41be61:	test   rax,rax
  41be64:	je     0x41bf80
  41be6a:	mov    ecx,0xb
  41be6f:	call   rax
  41be71:	xor    eax,eax
  41be73:	add    rsp,0x28
  41be77:	ret    
  41be78:	nop    DWORD PTR [rax+rax*1+0x0]
  41be80:	cmp    eax,0xc0000094
  41be85:	je     0x41bf50
  41be8b:	ja     0x41bed0
  41be8d:	cmp    eax,0xc0000092
  41be92:	je     0x41bf40
  41be98:	cmp    eax,0xc0000093
  41be9d:	jne    0x41bf1e
  41be9f:	xor    edx,edx
  41bea1:	mov    ecx,0x8
  41bea6:	call   0x421dc8
  41beab:	cmp    rax,0x1
  41beaf:	mov    rdx,rax
  41beb2:	je     0x41bf28
  41beb4:	test   rdx,rdx
  41beb7:	mov    eax,0x1
  41bebc:	je     0x41be73
  41bebe:	mov    ecx,0x8
  41bec3:	call   rdx
  41bec5:	xor    eax,eax
  41bec7:	add    rsp,0x28
  41becb:	ret    
  41becc:	nop    DWORD PTR [rax+0x0]
  41bed0:	cmp    eax,0xc0000095
  41bed5:	je     0x41bf40
  41bed7:	cmp    eax,0xc0000096
  41bedc:	jne    0x41bf1e
  41bede:	xor    edx,edx
  41bee0:	mov    ecx,0x4
  41bee5:	call   0x421dc8
  41beea:	cmp    rax,0x1
  41beee:	je     0x41bf8a
  41bef4:	test   rax,rax
  41bef7:	je     0x41bf80
  41befd:	mov    ecx,0x4
  41bf02:	call   rax
  41bf04:	xor    eax,eax
  41bf06:	jmp    0x41be73
  41bf0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf10:	cmp    eax,0xc000001d
  41bf15:	je     0x41bede
  41bf17:	cmp    eax,0xc000008c
  41bf1c:	je     0x41bf40
  41bf1e:	mov    eax,0x1
  41bf23:	add    rsp,0x28
  41bf27:	ret    
  41bf28:	mov    edx,0x1
  41bf2d:	mov    ecx,0x8
  41bf32:	call   0x421dc8
  41bf37:	call   0x41b900
  41bf3c:	nop    DWORD PTR [rax+0x0]
  41bf40:	xor    eax,eax
  41bf42:	add    rsp,0x28
  41bf46:	ret    
  41bf47:	nop    WORD PTR [rax+rax*1+0x0]
  41bf50:	xor    edx,edx
  41bf52:	mov    ecx,0x8
  41bf57:	call   0x421dc8
  41bf5c:	cmp    rax,0x1
  41bf60:	mov    rdx,rax
  41bf63:	jne    0x41beb4
  41bf69:	mov    edx,0x1
  41bf6e:	mov    ecx,0x8
  41bf73:	call   0x421dc8
  41bf78:	xor    eax,eax
  41bf7a:	jmp    0x41be73
  41bf7f:	nop
  41bf80:	mov    eax,0x4
  41bf85:	add    rsp,0x28
  41bf89:	ret    
  41bf8a:	mov    edx,0x1
  41bf8f:	mov    ecx,0x4
  41bf94:	call   0x421dc8
  41bf99:	xor    eax,eax
  41bf9b:	jmp    0x41be73
  41bfa0:	mov    edx,0x1
  41bfa5:	mov    ecx,0xb
  41bfaa:	call   0x421dc8
  41bfaf:	xor    eax,eax
  41bfb1:	jmp    0x41be73
  41bfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bfc0:	push   r12
  41bfc2:	push   rbp
  41bfc3:	push   rdi
  41bfc4:	push   rsi
  41bfc5:	push   rbx
  41bfc6:	sub    rsp,0x20
  41bfca:	call   0x41c730
  41bfcf:	mov    rbp,rax
  41bfd2:	mov    eax,DWORD PTR [rip+0x1a330]        # 0x436308
  41bfd8:	test   eax,eax
  41bfda:	jne    0x41c001
  41bfdc:	test   rbp,rbp
  41bfdf:	je     0x41c001
  41bfe1:	lea    rcx,[rip+0x10f18]        # 0x42cf00
  41bfe8:	mov    DWORD PTR [rip+0x1a316],0x1        # 0x436308
  41bff2:	call   0x41c570
  41bff7:	test   rax,rax
  41bffa:	je     0x41c010
  41bffc:	mov    eax,0x1
  41c001:	add    rsp,0x20
  41c005:	pop    rbx
  41c006:	pop    rsi
  41c007:	pop    rdi
  41c008:	pop    rbp
  41c009:	pop    r12
  41c00b:	ret    
  41c00c:	nop    DWORD PTR [rax+0x0]
  41c010:	lea    rbx,[rip+0x1a429]        # 0x436440
  41c017:	mov    ecx,0x30
  41c01c:	lea    rdx,[rip+0x1a31d]        # 0x436340
  41c023:	lea    r12,[rip+0xfffffffffffffde6]        # 0x41be10
  41c02a:	xor    esi,esi
  41c02c:	mov    rdi,rbx
  41c02f:	rep stos QWORD PTR es:[rdi],rax
  41c032:	mov    rdi,rdx
  41c035:	sub    r12,rbp
  41c038:	mov    cl,0x20
  41c03a:	rep stos QWORD PTR es:[rdi],rax
  41c03d:	mov    rdi,rdx
  41c040:	jmp    0x41c070
  41c042:	mov    BYTE PTR [rdi],0x9
  41c045:	mov    DWORD PTR [rdi+0x4],r12d
  41c049:	add    rsi,0x1
  41c04d:	mov    edx,DWORD PTR [rax+0xc]
  41c050:	add    rbx,0xc
  41c054:	mov    DWORD PTR [rbx-0xc],edx
  41c057:	add    edx,DWORD PTR [rax+0x8]
  41c05a:	mov    rax,rdi
  41c05d:	sub    rax,rbp
  41c060:	add    rdi,0x8
  41c064:	mov    DWORD PTR [rbx-0x4],eax
  41c067:	mov    DWORD PTR [rbx-0x8],edx
  41c06a:	cmp    rsi,0x20
  41c06e:	je     0x41c0a5
  41c070:	mov    rcx,rsi
  41c073:	call   0x41c6a0
  41c078:	test   rax,rax
  41c07b:	jne    0x41c042
  41c07d:	test   rsi,rsi
  41c080:	je     0x41bffc
  41c086:	mov    edx,esi
  41c088:	nop    DWORD PTR [rax+rax*1+0x0]
  41c090:	mov    r8,rbp
  41c093:	lea    rcx,[rip+0x1a3a6]        # 0x436440
  41c09a:	call   QWORD PTR [rip+0x1ce3c]        # 0x438edc
  41c0a0:	jmp    0x41bffc
  41c0a5:	mov    edx,0x20
  41c0aa:	jmp    0x41c090
  41c0ac:	nop    DWORD PTR [rax+0x0]
  41c0b0:	push   rbx
  41c0b1:	sub    rsp,0x20
  41c0b5:	mov    rdx,QWORD PTR [rcx]
  41c0b8:	mov    eax,DWORD PTR [rdx]
  41c0ba:	mov    r8d,eax
  41c0bd:	and    r8d,0x20ffffff
  41c0c4:	cmp    r8d,0x20474343
  41c0cb:	je     0x41c1d0
  41c0d1:	cmp    eax,0xc0000091
  41c0d6:	mov    rbx,rcx
  41c0d9:	ja     0x41c160
  41c0df:	cmp    eax,0xc000008d
  41c0e4:	jae    0x41c177
  41c0ea:	cmp    eax,0xc0000008
  41c0ef:	je     0x41c123
  41c0f1:	ja     0x41c130
  41c0f3:	cmp    eax,0x80000002
  41c0f8:	je     0x41c123
  41c0fa:	cmp    eax,0xc0000005
  41c0ff:	jne    0x41c142
  41c101:	xor    edx,edx
  41c103:	mov    ecx,0xb
  41c108:	call   0x421dc8
  41c10d:	cmp    rax,0x1
  41c111:	je     0x41c240
  41c117:	test   rax,rax
  41c11a:	je     0x41c142
  41c11c:	mov    ecx,0xb
  41c121:	call   rax
  41c123:	mov    eax,0xffffffff
  41c128:	add    rsp,0x20
  41c12c:	pop    rbx
  41c12d:	ret    
  41c12e:	xchg   ax,ax
  41c130:	cmp    eax,0xc000001d
  41c135:	je     0x41c1f6
  41c13b:	cmp    eax,0xc000008c
  41c140:	je     0x41c123
  41c142:	mov    rax,QWORD PTR [rip+0x1a1b7]        # 0x436300
  41c149:	test   rax,rax
  41c14c:	je     0x41c128
  41c14e:	mov    rcx,rbx
  41c151:	add    rsp,0x20
  41c155:	pop    rbx
  41c156:	rex.W jmp rax
  41c159:	nop    DWORD PTR [rax+0x0]
  41c160:	cmp    eax,0xc0000094
  41c165:	je     0x41c1a2
  41c167:	ja     0x41c1e0
  41c169:	cmp    eax,0xc0000092
  41c16e:	je     0x41c123
  41c170:	cmp    eax,0xc0000093
  41c175:	jne    0x41c142
  41c177:	xor    edx,edx
  41c179:	mov    ecx,0x8
  41c17e:	call   0x421dc8
  41c183:	cmp    rax,0x1
  41c187:	jne    0x41c1b4
  41c189:	mov    edx,0x1
  41c18e:	mov    ecx,0x8
  41c193:	call   0x421dc8
  41c198:	call   0x41b900
  41c19d:	jmp    0x41c123
  41c1a2:	xor    edx,edx
  41c1a4:	mov    ecx,0x8
  41c1a9:	call   0x421dc8
  41c1ae:	cmp    rax,0x1
  41c1b2:	je     0x41c222
  41c1b4:	test   rax,rax
  41c1b7:	je     0x41c142
  41c1b9:	mov    ecx,0x8
  41c1be:	call   rax
  41c1c0:	mov    eax,0xffffffff
  41c1c5:	jmp    0x41c128
  41c1ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c1d0:	test   BYTE PTR [rdx+0x4],0x1
  41c1d4:	jne    0x41c0d1
  41c1da:	jmp    0x41c123
  41c1df:	nop
  41c1e0:	cmp    eax,0xc0000095
  41c1e5:	je     0x41c123
  41c1eb:	cmp    eax,0xc0000096
  41c1f0:	jne    0x41c142
  41c1f6:	xor    edx,edx
  41c1f8:	mov    ecx,0x4
  41c1fd:	call   0x421dc8
  41c202:	cmp    rax,0x1
  41c206:	je     0x41c254
  41c208:	test   rax,rax
  41c20b:	je     0x41c142
  41c211:	mov    ecx,0x4
  41c216:	call   rax
  41c218:	mov    eax,0xffffffff
  41c21d:	jmp    0x41c128
  41c222:	mov    edx,0x1
  41c227:	mov    ecx,0x8
  41c22c:	call   0x421dc8
  41c231:	jmp    0x41c123
  41c236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c240:	mov    edx,0x1
  41c245:	mov    ecx,0xb
  41c24a:	call   0x421dc8
  41c24f:	jmp    0x41c123
  41c254:	mov    edx,0x1
  41c259:	mov    ecx,0x4
  41c25e:	call   0x421dc8
  41c263:	jmp    0x41c123
  41c268:	nop
  41c269:	nop
  41c26a:	nop
  41c26b:	nop
  41c26c:	nop
  41c26d:	nop
  41c26e:	nop
  41c26f:	nop
  41c270:	push   rbp
  41c271:	push   rdi
  41c272:	push   rsi
  41c273:	push   rbx
  41c274:	sub    rsp,0x28
  41c278:	lea    rcx,[rip+0x1a361]        # 0x4365e0
  41c27f:	call   QWORD PTR [rip+0x1cb97]        # 0x438e1c
  41c285:	mov    rbx,QWORD PTR [rip+0x1a334]        # 0x4365c0
  41c28c:	test   rbx,rbx
  41c28f:	je     0x41c2c4
  41c291:	mov    rbp,QWORD PTR [rip+0x1cc84]        # 0x438f1c
  41c298:	mov    rdi,QWORD PTR [rip+0x1cbbd]        # 0x438e5c
  41c29f:	nop
  41c2a0:	mov    ecx,DWORD PTR [rbx]
  41c2a2:	call   rbp
  41c2a4:	mov    rsi,rax
  41c2a7:	call   rdi
  41c2a9:	test   eax,eax
  41c2ab:	jne    0x41c2bb
  41c2ad:	test   rsi,rsi
  41c2b0:	je     0x41c2bb
  41c2b2:	mov    rax,QWORD PTR [rbx+0x8]
  41c2b6:	mov    rcx,rsi
  41c2b9:	call   rax
  41c2bb:	mov    rbx,QWORD PTR [rbx+0x10]
  41c2bf:	test   rbx,rbx
  41c2c2:	jne    0x41c2a0
  41c2c4:	mov    rax,QWORD PTR [rip+0x1cbe9]        # 0x438eb4
  41c2cb:	lea    rcx,[rip+0x1a30e]        # 0x4365e0
  41c2d2:	add    rsp,0x28
  41c2d6:	pop    rbx
  41c2d7:	pop    rsi
  41c2d8:	pop    rdi
  41c2d9:	pop    rbp
  41c2da:	rex.W jmp rax
  41c2dd:	nop    DWORD PTR [rax]
  41c2e0:	push   rdi
  41c2e1:	push   rsi
  41c2e2:	push   rbx
  41c2e3:	sub    rsp,0x20
  41c2e7:	mov    eax,DWORD PTR [rip+0x1a2db]        # 0x4365c8
  41c2ed:	test   eax,eax
  41c2ef:	jne    0x41c300
  41c2f1:	add    rsp,0x20
  41c2f5:	pop    rbx
  41c2f6:	pop    rsi
  41c2f7:	pop    rdi
  41c2f8:	ret    
  41c2f9:	nop    DWORD PTR [rax+0x0]
  41c300:	mov    rsi,rdx
  41c303:	mov    edi,ecx
  41c305:	mov    edx,0x18
  41c30a:	mov    ecx,0x1
  41c30f:	call   0x421ea8
  41c314:	test   rax,rax
  41c317:	mov    rbx,rax
  41c31a:	je     0x41c358
  41c31c:	mov    DWORD PTR [rax],edi
  41c31e:	mov    QWORD PTR [rax+0x8],rsi
  41c322:	lea    rcx,[rip+0x1a2b7]        # 0x4365e0
  41c329:	call   QWORD PTR [rip+0x1caed]        # 0x438e1c
  41c32f:	mov    rax,QWORD PTR [rip+0x1a28a]        # 0x4365c0
  41c336:	lea    rcx,[rip+0x1a2a3]        # 0x4365e0
  41c33d:	mov    QWORD PTR [rip+0x1a27c],rbx        # 0x4365c0
  41c344:	mov    QWORD PTR [rbx+0x10],rax
  41c348:	call   QWORD PTR [rip+0x1cb66]        # 0x438eb4
  41c34e:	xor    eax,eax
  41c350:	add    rsp,0x20
  41c354:	pop    rbx
  41c355:	pop    rsi
  41c356:	pop    rdi
  41c357:	ret    
  41c358:	mov    eax,0xffffffff
  41c35d:	jmp    0x41c2f1
  41c35f:	nop
  41c360:	push   rbx
  41c361:	sub    rsp,0x20
  41c365:	mov    eax,DWORD PTR [rip+0x1a25d]        # 0x4365c8
  41c36b:	test   eax,eax
  41c36d:	jne    0x41c380
  41c36f:	xor    eax,eax
  41c371:	add    rsp,0x20
  41c375:	pop    rbx
  41c376:	ret    
  41c377:	nop    WORD PTR [rax+rax*1+0x0]
  41c380:	mov    ebx,ecx
  41c382:	lea    rcx,[rip+0x1a257]        # 0x4365e0
  41c389:	call   QWORD PTR [rip+0x1ca8d]        # 0x438e1c
  41c38f:	mov    rdx,QWORD PTR [rip+0x1a22a]        # 0x4365c0
  41c396:	test   rdx,rdx
  41c399:	je     0x41c3b7
  41c39b:	mov    eax,DWORD PTR [rdx]
  41c39d:	cmp    eax,ebx
  41c39f:	jne    0x41c3ae
  41c3a1:	jmp    0x41c3ef
  41c3a3:	mov    r8d,DWORD PTR [rax]
  41c3a6:	cmp    r8d,ebx
  41c3a9:	je     0x41c3d0
  41c3ab:	mov    rdx,rax
  41c3ae:	mov    rax,QWORD PTR [rdx+0x10]
  41c3b2:	test   rax,rax
  41c3b5:	jne    0x41c3a3
  41c3b7:	lea    rcx,[rip+0x1a222]        # 0x4365e0
  41c3be:	call   QWORD PTR [rip+0x1caf0]        # 0x438eb4
  41c3c4:	xor    eax,eax
  41c3c6:	add    rsp,0x20
  41c3ca:	pop    rbx
  41c3cb:	ret    
  41c3cc:	nop    DWORD PTR [rax+0x0]
  41c3d0:	mov    rcx,rax
  41c3d3:	mov    rax,QWORD PTR [rax+0x10]
  41c3d7:	mov    QWORD PTR [rdx+0x10],rax
  41c3db:	call   0x421e50
  41c3e0:	lea    rcx,[rip+0x1a1f9]        # 0x4365e0
  41c3e7:	call   QWORD PTR [rip+0x1cac7]        # 0x438eb4
  41c3ed:	jmp    0x41c3c4
  41c3ef:	mov    rax,QWORD PTR [rdx+0x10]
  41c3f3:	mov    rcx,rdx
  41c3f6:	mov    QWORD PTR [rip+0x1a1c3],rax        # 0x4365c0
  41c3fd:	jmp    0x41c3db
  41c3ff:	nop
  41c400:	push   rbx
  41c401:	sub    rsp,0x20
  41c405:	cmp    edx,0x1
  41c408:	je     0x41c4a0
  41c40e:	jb     0x41c440
  41c410:	cmp    edx,0x2
  41c413:	je     0x41c430
  41c415:	cmp    edx,0x3
  41c418:	jne    0x41c435
  41c41a:	mov    eax,DWORD PTR [rip+0x1a1a8]        # 0x4365c8
  41c420:	test   eax,eax
  41c422:	je     0x41c435
  41c424:	call   0x41c270
  41c429:	jmp    0x41c435
  41c42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c430:	call   0x41b900
  41c435:	mov    eax,0x1
  41c43a:	add    rsp,0x20
  41c43e:	pop    rbx
  41c43f:	ret    
  41c440:	mov    eax,DWORD PTR [rip+0x1a182]        # 0x4365c8
  41c446:	test   eax,eax
  41c448:	jne    0x41c4d0
  41c44e:	mov    eax,DWORD PTR [rip+0x1a174]        # 0x4365c8
  41c454:	cmp    eax,0x1
  41c457:	jne    0x41c435
  41c459:	mov    rcx,QWORD PTR [rip+0x1a160]        # 0x4365c0
  41c460:	test   rcx,rcx
  41c463:	je     0x41c476
  41c465:	mov    rbx,QWORD PTR [rcx+0x10]
  41c469:	call   0x421e50
  41c46e:	test   rbx,rbx
  41c471:	mov    rcx,rbx
  41c474:	jne    0x41c465
  41c476:	lea    rcx,[rip+0x1a163]        # 0x4365e0
  41c47d:	mov    QWORD PTR [rip+0x1a138],0x0        # 0x4365c0
  41c488:	mov    DWORD PTR [rip+0x1a136],0x0        # 0x4365c8
  41c492:	call   QWORD PTR [rip+0x1c97c]        # 0x438e14
  41c498:	jmp    0x41c435
  41c49a:	nop    WORD PTR [rax+rax*1+0x0]
  41c4a0:	mov    eax,DWORD PTR [rip+0x1a122]        # 0x4365c8
  41c4a6:	test   eax,eax
  41c4a8:	je     0x41c4c0
  41c4aa:	mov    eax,0x1
  41c4af:	mov    DWORD PTR [rip+0x1a10f],0x1        # 0x4365c8
  41c4b9:	add    rsp,0x20
  41c4bd:	pop    rbx
  41c4be:	ret    
  41c4bf:	nop
  41c4c0:	lea    rcx,[rip+0x1a119]        # 0x4365e0
  41c4c7:	call   QWORD PTR [rip+0x1c9d7]        # 0x438ea4
  41c4cd:	jmp    0x41c4aa
  41c4cf:	nop
  41c4d0:	call   0x41c270
  41c4d5:	jmp    0x41c44e
  41c4da:	nop
  41c4db:	nop
  41c4dc:	nop
  41c4dd:	nop
  41c4de:	nop
  41c4df:	nop
  41c4e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c4e4:	add    rcx,rax
  41c4e7:	xor    eax,eax
  41c4e9:	cmp    DWORD PTR [rcx],0x4550
  41c4ef:	je     0x41c4f3
  41c4f1:	repz ret 
  41c4f3:	xor    eax,eax
  41c4f5:	cmp    WORD PTR [rcx+0x18],0x20b
  41c4fb:	sete   al
  41c4fe:	ret    
  41c4ff:	nop
  41c500:	cmp    WORD PTR [rcx],0x5a4d
  41c505:	je     0x41c510
  41c507:	xor    eax,eax
  41c509:	ret    
  41c50a:	nop    WORD PTR [rax+rax*1+0x0]
  41c510:	jmp    0x41c4e0
  41c512:	nop    DWORD PTR [rax+0x0]
  41c516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c520:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c524:	add    rcx,rax
  41c527:	movzx  eax,WORD PTR [rcx+0x14]
  41c52b:	lea    rax,[rcx+rax*1+0x18]
  41c530:	movzx  ecx,WORD PTR [rcx+0x6]
  41c534:	test   ecx,ecx
  41c536:	je     0x41c561
  41c538:	sub    ecx,0x1
  41c53b:	lea    rcx,[rcx+rcx*4]
  41c53f:	lea    r9,[rax+rcx*8+0x28]
  41c544:	mov    r8d,DWORD PTR [rax+0xc]
  41c548:	cmp    r8,rdx
  41c54b:	mov    rcx,r8
  41c54e:	ja     0x41c558
  41c550:	add    ecx,DWORD PTR [rax+0x8]
  41c553:	cmp    rdx,rcx
  41c556:	jb     0x41c563
  41c558:	add    rax,0x28
  41c55c:	cmp    rax,r9
  41c55f:	jne    0x41c544
  41c561:	xor    eax,eax
  41c563:	repz ret 
  41c565:	nop
  41c566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c570:	push   rdi
  41c571:	push   rsi
  41c572:	push   rbx
  41c573:	sub    rsp,0x20
  41c577:	mov    rsi,rcx
  41c57a:	call   0x421d98
  41c57f:	cmp    rax,0x8
  41c583:	ja     0x41c5a0
  41c585:	mov    rbx,QWORD PTR [rip+0x10ee4]        # 0x42d470
  41c58c:	xor    edi,edi
  41c58e:	cmp    WORD PTR [rbx],0x5a4d
  41c593:	je     0x41c5b0
  41c595:	mov    rax,rdi
  41c598:	add    rsp,0x20
  41c59c:	pop    rbx
  41c59d:	pop    rsi
  41c59e:	pop    rdi
  41c59f:	ret    
  41c5a0:	xor    edi,edi
  41c5a2:	mov    rax,rdi
  41c5a5:	add    rsp,0x20
  41c5a9:	pop    rbx
  41c5aa:	pop    rsi
  41c5ab:	pop    rdi
  41c5ac:	ret    
  41c5ad:	nop    DWORD PTR [rax]
  41c5b0:	mov    rcx,rbx
  41c5b3:	call   0x41c4e0
  41c5b8:	test   eax,eax
  41c5ba:	je     0x41c595
  41c5bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  41c5c0:	add    rdx,rbx
  41c5c3:	movzx  eax,WORD PTR [rdx+0x14]
  41c5c7:	lea    rbx,[rdx+rax*1+0x18]
  41c5cc:	movzx  eax,WORD PTR [rdx+0x6]
  41c5d0:	test   eax,eax
  41c5d2:	je     0x41c595
  41c5d4:	sub    eax,0x1
  41c5d7:	lea    rax,[rax+rax*4]
  41c5db:	lea    rdi,[rbx+rax*8+0x28]
  41c5e0:	jmp    0x41c5eb
  41c5e2:	add    rbx,0x28
  41c5e6:	cmp    rbx,rdi
  41c5e9:	je     0x41c5a0
  41c5eb:	mov    r8d,0x8
  41c5f1:	mov    rdx,rsi
  41c5f4:	mov    rcx,rbx
  41c5f7:	call   0x421d90
  41c5fc:	test   eax,eax
  41c5fe:	jne    0x41c5e2
  41c600:	mov    rdi,rbx
  41c603:	mov    rax,rdi
  41c606:	add    rsp,0x20
  41c60a:	pop    rbx
  41c60b:	pop    rsi
  41c60c:	pop    rdi
  41c60d:	ret    
  41c60e:	xchg   ax,ax
  41c610:	push   rsi
  41c611:	push   rbx
  41c612:	sub    rsp,0x28
  41c616:	mov    rbx,QWORD PTR [rip+0x10e53]        # 0x42d470
  41c61d:	cmp    WORD PTR [rbx],0x5a4d
  41c622:	je     0x41c630
  41c624:	xor    eax,eax
  41c626:	add    rsp,0x28
  41c62a:	pop    rbx
  41c62b:	pop    rsi
  41c62c:	ret    
  41c62d:	nop    DWORD PTR [rax]
  41c630:	mov    rsi,rcx
  41c633:	mov    rcx,rbx
  41c636:	call   0x41c4e0
  41c63b:	test   eax,eax
  41c63d:	je     0x41c624
  41c63f:	sub    rsi,rbx
  41c642:	mov    rcx,rbx
  41c645:	mov    rdx,rsi
  41c648:	add    rsp,0x28
  41c64c:	pop    rbx
  41c64d:	pop    rsi
  41c64e:	jmp    0x41c520
  41c653:	nop    DWORD PTR [rax]
  41c656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c660:	push   rbx
  41c661:	sub    rsp,0x20
  41c665:	mov    rbx,QWORD PTR [rip+0x10e04]        # 0x42d470
  41c66c:	xor    eax,eax
  41c66e:	cmp    WORD PTR [rbx],0x5a4d
  41c673:	je     0x41c680
  41c675:	add    rsp,0x20
  41c679:	pop    rbx
  41c67a:	ret    
  41c67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c680:	mov    rcx,rbx
  41c683:	call   0x41c4e0
  41c688:	test   eax,eax
  41c68a:	je     0x41c675
  41c68c:	movsxd rax,DWORD PTR [rbx+0x3c]
  41c690:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  41c695:	add    rsp,0x20
  41c699:	pop    rbx
  41c69a:	ret    
  41c69b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6a0:	push   rdi
  41c6a1:	push   rsi
  41c6a2:	push   rbx
  41c6a3:	sub    rsp,0x20
  41c6a7:	mov    rsi,QWORD PTR [rip+0x10dc2]        # 0x42d470
  41c6ae:	xor    edi,edi
  41c6b0:	mov    rbx,rcx
  41c6b3:	cmp    WORD PTR [rsi],0x5a4d
  41c6b8:	je     0x41c6c5
  41c6ba:	mov    rax,rdi
  41c6bd:	add    rsp,0x20
  41c6c1:	pop    rbx
  41c6c2:	pop    rsi
  41c6c3:	pop    rdi
  41c6c4:	ret    
  41c6c5:	mov    rcx,rsi
  41c6c8:	call   0x41c4e0
  41c6cd:	test   eax,eax
  41c6cf:	je     0x41c6ba
  41c6d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  41c6d5:	add    rsi,rax
  41c6d8:	movzx  eax,WORD PTR [rsi+0x14]
  41c6dc:	lea    rdx,[rsi+rax*1+0x18]
  41c6e1:	movzx  eax,WORD PTR [rsi+0x6]
  41c6e5:	test   eax,eax
  41c6e7:	je     0x41c6ba
  41c6e9:	sub    eax,0x1
  41c6ec:	lea    rax,[rax+rax*4]
  41c6f0:	lea    rax,[rdx+rax*8+0x28]
  41c6f5:	test   BYTE PTR [rdx+0x27],0x20
  41c6f9:	je     0x41c704
  41c6fb:	test   rbx,rbx
  41c6fe:	je     0x41c720
  41c700:	sub    rbx,0x1
  41c704:	add    rdx,0x28
  41c708:	cmp    rdx,rax
  41c70b:	jne    0x41c6f5
  41c70d:	xor    edi,edi
  41c70f:	mov    rax,rdi
  41c712:	add    rsp,0x20
  41c716:	pop    rbx
  41c717:	pop    rsi
  41c718:	pop    rdi
  41c719:	ret    
  41c71a:	nop    WORD PTR [rax+rax*1+0x0]
  41c720:	mov    rdi,rdx
  41c723:	mov    rax,rdi
  41c726:	add    rsp,0x20
  41c72a:	pop    rbx
  41c72b:	pop    rsi
  41c72c:	pop    rdi
  41c72d:	ret    
  41c72e:	xchg   ax,ax
  41c730:	push   rsi
  41c731:	push   rbx
  41c732:	sub    rsp,0x28
  41c736:	mov    rsi,QWORD PTR [rip+0x10d33]        # 0x42d470
  41c73d:	xor    ebx,ebx
  41c73f:	cmp    WORD PTR [rsi],0x5a4d
  41c744:	je     0x41c750
  41c746:	mov    rax,rbx
  41c749:	add    rsp,0x28
  41c74d:	pop    rbx
  41c74e:	pop    rsi
  41c74f:	ret    
  41c750:	mov    rcx,rsi
  41c753:	call   0x41c4e0
  41c758:	test   eax,eax
  41c75a:	cmovne rbx,rsi
  41c75e:	mov    rax,rbx
  41c761:	add    rsp,0x28
  41c765:	pop    rbx
  41c766:	pop    rsi
  41c767:	ret    
  41c768:	nop    DWORD PTR [rax+rax*1+0x0]
  41c770:	push   rsi
  41c771:	push   rbx
  41c772:	sub    rsp,0x28
  41c776:	mov    rbx,QWORD PTR [rip+0x10cf3]        # 0x42d470
  41c77d:	xor    eax,eax
  41c77f:	cmp    WORD PTR [rbx],0x5a4d
  41c784:	je     0x41c790
  41c786:	add    rsp,0x28
  41c78a:	pop    rbx
  41c78b:	pop    rsi
  41c78c:	ret    
  41c78d:	nop    DWORD PTR [rax]
  41c790:	mov    rsi,rcx
  41c793:	mov    rcx,rbx
  41c796:	call   0x41c4e0
  41c79b:	test   eax,eax
  41c79d:	je     0x41c786
  41c79f:	sub    rsi,rbx
  41c7a2:	mov    rcx,rbx
  41c7a5:	mov    rdx,rsi
  41c7a8:	call   0x41c520
  41c7ad:	test   rax,rax
  41c7b0:	je     0x41c7c1
  41c7b2:	mov    eax,DWORD PTR [rax+0x24]
  41c7b5:	not    eax
  41c7b7:	shr    eax,0x1f
  41c7ba:	add    rsp,0x28
  41c7be:	pop    rbx
  41c7bf:	pop    rsi
  41c7c0:	ret    
  41c7c1:	xor    eax,eax
  41c7c3:	jmp    0x41c786
  41c7c5:	nop
  41c7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7d0:	push   rbp
  41c7d1:	push   rdi
  41c7d2:	push   rsi
  41c7d3:	push   rbx
  41c7d4:	sub    rsp,0x28
  41c7d8:	mov    rdi,QWORD PTR [rip+0x10c91]        # 0x42d470
  41c7df:	xor    ebp,ebp
  41c7e1:	mov    esi,ecx
  41c7e3:	cmp    WORD PTR [rdi],0x5a4d
  41c7e8:	je     0x41c800
  41c7ea:	mov    rax,rbp
  41c7ed:	add    rsp,0x28
  41c7f1:	pop    rbx
  41c7f2:	pop    rsi
  41c7f3:	pop    rdi
  41c7f4:	pop    rbp
  41c7f5:	ret    
  41c7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c800:	mov    rcx,rdi
  41c803:	call   0x41c4e0
  41c808:	test   eax,eax
  41c80a:	je     0x41c7ea
  41c80c:	movsxd rax,DWORD PTR [rdi+0x3c]
  41c810:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  41c817:	test   edx,edx
  41c819:	je     0x41c7ea
  41c81b:	mov    ebx,edx
  41c81d:	mov    rcx,rdi
  41c820:	mov    rdx,rbx
  41c823:	call   0x41c520
  41c828:	test   rax,rax
  41c82b:	je     0x41c7ea
  41c82d:	add    rbx,rdi
  41c830:	mov    rdx,rbx
  41c833:	jne    0x41c847
  41c835:	jmp    0x41c7ea
  41c837:	nop    WORD PTR [rax+rax*1+0x0]
  41c840:	sub    esi,0x1
  41c843:	add    rdx,0x14
  41c847:	mov    ecx,DWORD PTR [rdx+0x4]
  41c84a:	test   ecx,ecx
  41c84c:	jne    0x41c855
  41c84e:	mov    eax,DWORD PTR [rdx+0xc]
  41c851:	test   eax,eax
  41c853:	je     0x41c870
  41c855:	test   esi,esi
  41c857:	jg     0x41c840
  41c859:	mov    ebp,DWORD PTR [rdx+0xc]
  41c85c:	add    rbp,rdi
  41c85f:	mov    rax,rbp
  41c862:	add    rsp,0x28
  41c866:	pop    rbx
  41c867:	pop    rsi
  41c868:	pop    rdi
  41c869:	pop    rbp
  41c86a:	ret    
  41c86b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c870:	xor    ebp,ebp
  41c872:	mov    rax,rbp
  41c875:	add    rsp,0x28
  41c879:	pop    rbx
  41c87a:	pop    rsi
  41c87b:	pop    rdi
  41c87c:	pop    rbp
  41c87d:	ret    
  41c87e:	nop
  41c87f:	nop
  41c880:	push   rcx
  41c881:	push   rax
  41c882:	cmp    rax,0x1000
  41c888:	lea    rcx,[rsp+0x18]
  41c88d:	jb     0x41c8a8
  41c88f:	sub    rcx,0x1000
  41c896:	or     QWORD PTR [rcx],0x0
  41c89a:	sub    rax,0x1000
  41c8a0:	cmp    rax,0x1000
  41c8a6:	ja     0x41c88f
  41c8a8:	sub    rcx,rax
  41c8ab:	or     QWORD PTR [rcx],0x0
  41c8af:	pop    rax
  41c8b0:	pop    rcx
  41c8b1:	ret    
  41c8b2:	nop
  41c8b3:	nop
  41c8b4:	nop
  41c8b5:	nop
  41c8b6:	nop
  41c8b7:	nop
  41c8b8:	nop
  41c8b9:	nop
  41c8ba:	nop
  41c8bb:	nop
  41c8bc:	nop
  41c8bd:	nop
  41c8be:	nop
  41c8bf:	nop
  41c8c0:	push   rdi
  41c8c1:	push   rsi
  41c8c2:	push   rbx
  41c8c3:	sub    rsp,0x130
  41c8ca:	mov    rbx,rcx
  41c8cd:	call   0x421f48
  41c8d2:	test   rbx,rbx
  41c8d5:	mov    DWORD PTR [rax],0x0
  41c8db:	je     0x41ca8e
  41c8e1:	cmp    BYTE PTR [rbx],0x0
  41c8e4:	je     0x41ca50
  41c8ea:	mov    rcx,rbx
  41c8ed:	call   QWORD PTR [rip+0x1c559]        # 0x438e4c
  41c8f3:	cmp    eax,0xffffffff
  41c8f6:	je     0x41ca70
  41c8fc:	test   al,0x10
  41c8fe:	je     0x41ca50
  41c904:	lea    rdi,[rsp+0x20]
  41c909:	mov    rdx,rbx
  41c90c:	mov    r8d,0x104
  41c912:	mov    rcx,rdi
  41c915:	mov    rbx,rdi
  41c918:	call   0x421f20
  41c91d:	mov    r8d,DWORD PTR [rbx]
  41c920:	add    rbx,0x4
  41c924:	lea    eax,[r8-0x1010101]
  41c92b:	not    r8d
  41c92e:	and    eax,r8d
  41c931:	and    eax,0x80808080
  41c936:	je     0x41c91d
  41c938:	mov    edx,eax
  41c93a:	shr    edx,0x10
  41c93d:	test   eax,0x8080
  41c942:	cmove  eax,edx
  41c945:	lea    rdx,[rbx+0x2]
  41c949:	cmove  rbx,rdx
  41c94d:	add    al,al
  41c94f:	sbb    rbx,0x3
  41c953:	sub    rbx,rdi
  41c956:	lea    rcx,[rbx+0x24b]
  41c95d:	call   0x421e18
  41c962:	test   rax,rax
  41c965:	mov    rsi,rax
  41c968:	je     0x41ca7f
  41c96e:	lea    r9,[rax+0x244]
  41c975:	lea    r8,[rbx+0x1]
  41c979:	mov    rdx,rdi
  41c97c:	mov    rcx,r9
  41c97f:	call   0x421e08
  41c984:	cmp    BYTE PTR [rsi+0x244],0x0
  41c98b:	mov    r9,rax
  41c98e:	je     0x41c9b0
  41c990:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  41c998:	cmp    al,0x2f
  41c99a:	je     0x41c9b0
  41c99c:	cmp    al,0x5c
  41c99e:	je     0x41c9b0
  41c9a0:	mov    r8d,0x5c
  41c9a6:	mov    WORD PTR [r9+rbx*1],r8w
  41c9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9b0:	mov    rcx,r9
  41c9b3:	mov    eax,DWORD PTR [rcx]
  41c9b5:	add    rcx,0x4
  41c9b9:	lea    edx,[rax-0x1010101]
  41c9bf:	not    eax
  41c9c1:	and    edx,eax
  41c9c3:	and    edx,0x80808080
  41c9c9:	je     0x41c9b3
  41c9cb:	mov    eax,edx
  41c9cd:	shr    eax,0x10
  41c9d0:	test   edx,0x8080
  41c9d6:	cmove  edx,eax
  41c9d9:	lea    rax,[rcx+0x2]
  41c9dd:	cmove  rcx,rax
  41c9e1:	add    dl,dl
  41c9e3:	mov    eax,0x2a
  41c9e8:	sbb    rcx,0x3
  41c9ec:	xor    edx,edx
  41c9ee:	mov    WORD PTR [rcx],ax
  41c9f1:	mov    WORD PTR [rsi+0x12c],dx
  41c9f8:	lea    rdx,[rsi+0x130]
  41c9ff:	xor    ecx,ecx
  41ca01:	xor    eax,eax
  41ca03:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41ca0e:	mov    WORD PTR [rsi+0x12e],cx
  41ca15:	mov    rdi,rdx
  41ca18:	mov    ecx,0x20
  41ca1d:	mov    DWORD PTR [rsi+0x240],0x0
  41ca27:	mov    DWORD PTR [rsi+0x128],0x0
  41ca31:	rep stos QWORD PTR es:[rdi],rax
  41ca34:	mov    rax,rsi
  41ca37:	mov    DWORD PTR [rdi],0x0
  41ca3d:	add    rsp,0x130
  41ca44:	pop    rbx
  41ca45:	pop    rsi
  41ca46:	pop    rdi
  41ca47:	ret    
  41ca48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca50:	call   0x421f48
  41ca55:	mov    DWORD PTR [rax],0x14
  41ca5b:	xor    eax,eax
  41ca5d:	add    rsp,0x130
  41ca64:	pop    rbx
  41ca65:	pop    rsi
  41ca66:	pop    rdi
  41ca67:	ret    
  41ca68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca70:	call   0x421f48
  41ca75:	mov    DWORD PTR [rax],0x2
  41ca7b:	xor    eax,eax
  41ca7d:	jmp    0x41ca3d
  41ca7f:	call   0x421f48
  41ca84:	mov    DWORD PTR [rax],0xc
  41ca8a:	xor    eax,eax
  41ca8c:	jmp    0x41ca3d
  41ca8e:	call   0x421f48
  41ca93:	mov    DWORD PTR [rax],0xe
  41ca99:	xor    eax,eax
  41ca9b:	jmp    0x41ca3d
  41ca9d:	nop    DWORD PTR [rax]
  41caa0:	push   rbp
  41caa1:	push   rdi
  41caa2:	push   rsi
  41caa3:	push   rbx
  41caa4:	sub    rsp,0x158
  41caab:	mov    rbx,rcx
  41caae:	call   0x421f48
  41cab3:	test   rbx,rbx
  41cab6:	mov    DWORD PTR [rax],0x0
  41cabc:	je     0x41ccad
  41cac2:	mov    eax,DWORD PTR [rbx+0x240]
  41cac8:	test   eax,eax
  41caca:	js     0x41cc4f
  41cad0:	lea    rdi,[rsp+0x20]
  41cad5:	je     0x41cb84
  41cadb:	mov    rcx,QWORD PTR [rbx+0x238]
  41cae2:	mov    rdx,rdi
  41cae5:	call   0x421d20
  41caea:	cmp    eax,0xffffffff
  41caed:	mov    ebp,eax
  41caef:	je     0x41cbf5
  41caf5:	mov    eax,DWORD PTR [rsp+0x20]
  41caf9:	lea    rsi,[rbx+0x24]
  41cafd:	lea    rdx,[rdi+0x28]
  41cb01:	mov    r8d,0x104
  41cb07:	mov    rcx,rsi
  41cb0a:	mov    DWORD PTR [rbx],eax
  41cb0c:	mov    rax,QWORD PTR [rsp+0x28]
  41cb11:	mov    QWORD PTR [rbx+0x8],rax
  41cb15:	mov    rax,QWORD PTR [rsp+0x30]
  41cb1a:	mov    QWORD PTR [rbx+0x10],rax
  41cb1e:	mov    rax,QWORD PTR [rsp+0x38]
  41cb23:	mov    QWORD PTR [rbx+0x18],rax
  41cb27:	mov    rax,QWORD PTR [rsp+0x40]
  41cb2c:	mov    DWORD PTR [rbx+0x20],eax
  41cb2f:	call   0x421d88
  41cb34:	test   ebp,ebp
  41cb36:	jne    0x41cc23
  41cb3c:	mov    eax,DWORD PTR [rbx+0x240]
  41cb42:	add    eax,0x1
  41cb45:	test   eax,eax
  41cb47:	mov    DWORD PTR [rbx+0x240],eax
  41cb4d:	jle    0x41cc4f
  41cb53:	mov    rcx,rsi
  41cb56:	call   0x421d98
  41cb5b:	lea    rcx,[rbx+0x130]
  41cb62:	mov    WORD PTR [rbx+0x12e],ax
  41cb69:	mov    rdx,rsi
  41cb6c:	call   0x421db0
  41cb71:	lea    rax,[rbx+0x128]
  41cb78:	add    rsp,0x158
  41cb7f:	pop    rbx
  41cb80:	pop    rsi
  41cb81:	pop    rdi
  41cb82:	pop    rbp
  41cb83:	ret    
  41cb84:	lea    rcx,[rbx+0x244]
  41cb8b:	mov    rdx,rdi
  41cb8e:	call   0x421f30
  41cb93:	cmp    rax,0xffffffffffffffff
  41cb97:	mov    rbp,rax
  41cb9a:	je     0x41cc60
  41cba0:	mov    eax,DWORD PTR [rsp+0x20]
  41cba4:	lea    rsi,[rbx+0x24]
  41cba8:	lea    rdx,[rdi+0x28]
  41cbac:	mov    r8d,0x104
  41cbb2:	mov    rcx,rsi
  41cbb5:	mov    DWORD PTR [rbx],eax
  41cbb7:	mov    rax,QWORD PTR [rsp+0x28]
  41cbbc:	mov    QWORD PTR [rbx+0x8],rax
  41cbc0:	mov    rax,QWORD PTR [rsp+0x30]
  41cbc5:	mov    QWORD PTR [rbx+0x10],rax
  41cbc9:	mov    rax,QWORD PTR [rsp+0x38]
  41cbce:	mov    QWORD PTR [rbx+0x18],rax
  41cbd2:	mov    rax,QWORD PTR [rsp+0x40]
  41cbd7:	mov    DWORD PTR [rbx+0x20],eax
  41cbda:	call   0x421d88
  41cbdf:	mov    QWORD PTR [rbx+0x238],rbp
  41cbe6:	mov    DWORD PTR [rbx+0x240],0x1
  41cbf0:	jmp    0x41cb53
  41cbf5:	lea    rdi,[rbx+0x8]
  41cbf9:	mov    rcx,rbx
  41cbfc:	xor    eax,eax
  41cbfe:	mov    QWORD PTR [rbx],0x0
  41cc05:	mov    QWORD PTR [rbx+0x120],0x0
  41cc10:	and    rdi,0xfffffffffffffff8
  41cc14:	sub    rcx,rdi
  41cc17:	add    ecx,0x128
  41cc1d:	shr    ecx,0x3
  41cc20:	rep stos QWORD PTR es:[rdi],rax
  41cc23:	call   QWORD PTR [rip+0x1c233]        # 0x438e5c
  41cc29:	cmp    eax,0x12
  41cc2c:	je     0x41cca0
  41cc2e:	mov    rcx,QWORD PTR [rbx+0x238]
  41cc35:	call   0x421f38
  41cc3a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41cc45:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41cc4f:	xor    eax,eax
  41cc51:	add    rsp,0x158
  41cc58:	pop    rbx
  41cc59:	pop    rsi
  41cc5a:	pop    rdi
  41cc5b:	pop    rbp
  41cc5c:	ret    
  41cc5d:	nop    DWORD PTR [rax]
  41cc60:	lea    rdi,[rbx+0x8]
  41cc64:	mov    rcx,rbx
  41cc67:	xor    eax,eax
  41cc69:	mov    QWORD PTR [rbx],0x0
  41cc70:	mov    QWORD PTR [rbx+0x120],0x0
  41cc7b:	and    rdi,0xfffffffffffffff8
  41cc7f:	sub    rcx,rdi
  41cc82:	add    ecx,0x128
  41cc88:	shr    ecx,0x3
  41cc8b:	rep stos QWORD PTR es:[rdi],rax
  41cc8e:	mov    QWORD PTR [rbx+0x238],rbp
  41cc95:	mov    DWORD PTR [rbx+0x240],ebp
  41cc9b:	xor    eax,eax
  41cc9d:	jmp    0x41cc51
  41cc9f:	nop
  41cca0:	call   0x421f48
  41cca5:	mov    DWORD PTR [rax],0x0
  41ccab:	jmp    0x41cc2e
  41ccad:	call   0x421f48
  41ccb2:	mov    DWORD PTR [rax],0xe
  41ccb8:	xor    eax,eax
  41ccba:	jmp    0x41cb78
  41ccbf:	nop
  41ccc0:	push   rsi
  41ccc1:	push   rbx
  41ccc2:	sub    rsp,0x28
  41ccc6:	mov    rsi,rcx
  41ccc9:	call   0x421f48
  41ccce:	test   rsi,rsi
  41ccd1:	mov    DWORD PTR [rax],0x0
  41ccd7:	je     0x41cd00
  41ccd9:	mov    rcx,QWORD PTR [rsi+0x238]
  41cce0:	xor    ebx,ebx
  41cce2:	cmp    rcx,0xffffffffffffffff
  41cce6:	je     0x41ccef
  41cce8:	call   0x421f38
  41cced:	mov    ebx,eax
  41ccef:	mov    rcx,rsi
  41ccf2:	call   0x421e50
  41ccf7:	mov    eax,ebx
  41ccf9:	add    rsp,0x28
  41ccfd:	pop    rbx
  41ccfe:	pop    rsi
  41ccff:	ret    
  41cd00:	call   0x421f48
  41cd05:	mov    DWORD PTR [rax],0xe
  41cd0b:	mov    eax,0xffffffff
  41cd10:	jmp    0x41ccf9
  41cd12:	nop    DWORD PTR [rax+0x0]
  41cd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd20:	push   rbx
  41cd21:	sub    rsp,0x20
  41cd25:	mov    rbx,rcx
  41cd28:	call   0x421f48
  41cd2d:	test   rbx,rbx
  41cd30:	mov    DWORD PTR [rax],0x0
  41cd36:	je     0x41cd65
  41cd38:	mov    rcx,QWORD PTR [rbx+0x238]
  41cd3f:	cmp    rcx,0xffffffffffffffff
  41cd43:	je     0x41cd4a
  41cd45:	call   0x421f38
  41cd4a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41cd55:	mov    DWORD PTR [rbx+0x240],0x0
  41cd5f:	add    rsp,0x20
  41cd63:	pop    rbx
  41cd64:	ret    
  41cd65:	call   0x421f48
  41cd6a:	mov    DWORD PTR [rax],0xe
  41cd70:	jmp    0x41cd5f
  41cd72:	nop    DWORD PTR [rax+0x0]
  41cd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd80:	push   rbx
  41cd81:	sub    rsp,0x20
  41cd85:	mov    rbx,rcx
  41cd88:	call   0x421f48
  41cd8d:	test   rbx,rbx
  41cd90:	mov    DWORD PTR [rax],0x0
  41cd96:	je     0x41cda4
  41cd98:	mov    eax,DWORD PTR [rbx+0x240]
  41cd9e:	add    rsp,0x20
  41cda2:	pop    rbx
  41cda3:	ret    
  41cda4:	call   0x421f48
  41cda9:	mov    DWORD PTR [rax],0xe
  41cdaf:	mov    eax,0xffffffff
  41cdb4:	jmp    0x41cd9e
  41cdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdc0:	push   rsi
  41cdc1:	push   rbx
  41cdc2:	sub    rsp,0x28
  41cdc6:	mov    rbx,rcx
  41cdc9:	mov    esi,edx
  41cdcb:	call   0x421f48
  41cdd0:	test   rbx,rbx
  41cdd3:	mov    DWORD PTR [rax],0x0
  41cdd9:	je     0x41ce4d
  41cddb:	cmp    esi,0xffffffff
  41cdde:	jl     0x41ce40
  41cde0:	je     0x41ce10
  41cde2:	mov    rcx,rbx
  41cde5:	call   0x41cd20
  41cdea:	jmp    0x41cdfd
  41cdec:	nop    DWORD PTR [rax+0x0]
  41cdf0:	mov    rcx,rbx
  41cdf3:	call   0x41caa0
  41cdf8:	test   rax,rax
  41cdfb:	je     0x41ce37
  41cdfd:	cmp    esi,DWORD PTR [rbx+0x240]
  41ce03:	jg     0x41cdf0
  41ce05:	add    rsp,0x28
  41ce09:	pop    rbx
  41ce0a:	pop    rsi
  41ce0b:	ret    
  41ce0c:	nop    DWORD PTR [rax+0x0]
  41ce10:	mov    rcx,QWORD PTR [rbx+0x238]
  41ce17:	cmp    rcx,0xffffffffffffffff
  41ce1b:	je     0x41ce22
  41ce1d:	call   0x421f38
  41ce22:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41ce2d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41ce37:	add    rsp,0x28
  41ce3b:	pop    rbx
  41ce3c:	pop    rsi
  41ce3d:	ret    
  41ce3e:	xchg   ax,ax
  41ce40:	call   0x421f48
  41ce45:	mov    DWORD PTR [rax],0x16
  41ce4b:	jmp    0x41ce37
  41ce4d:	call   0x421f48
  41ce52:	mov    DWORD PTR [rax],0xe
  41ce58:	jmp    0x41ce37
  41ce5a:	nop
  41ce5b:	nop
  41ce5c:	nop
  41ce5d:	nop
  41ce5e:	nop
  41ce5f:	nop
  41ce60:	test   rdx,rdx
  41ce63:	mov    r8,rcx
  41ce66:	je     0x41ce92
  41ce68:	cmp    BYTE PTR [rcx],0x0
  41ce6b:	jne    0x41ce75
  41ce6d:	jmp    0x41ce92
  41ce6f:	nop
  41ce70:	cmp    BYTE PTR [rcx],0x0
  41ce73:	je     0x41ce90
  41ce75:	add    rcx,0x1
  41ce79:	mov    rax,rcx
  41ce7c:	sub    rax,r8
  41ce7f:	cmp    rax,rdx
  41ce82:	jb     0x41ce70
  41ce84:	repz ret 
  41ce86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce90:	repz ret 
  41ce92:	xor    eax,eax
  41ce94:	ret    
  41ce95:	nop
  41ce96:	nop
  41ce97:	nop
  41ce98:	nop
  41ce99:	nop
  41ce9a:	nop
  41ce9b:	nop
  41ce9c:	nop
  41ce9d:	nop
  41ce9e:	nop
  41ce9f:	nop
  41cea0:	push   r12
  41cea2:	push   rbp
  41cea3:	push   rdi
  41cea4:	push   rsi
  41cea5:	push   rbx
  41cea6:	sub    rsp,0x250
  41cead:	mov    rbx,rdx
  41ceb0:	mov    rsi,rcx
  41ceb3:	mov    ecx,0x4000
  41ceb8:	mov    r12d,r8d
  41cebb:	call   0x421e18
  41cec0:	test   rbx,rbx
  41cec3:	mov    rbp,rax
  41cec6:	je     0x41cf90
  41cecc:	cmp    WORD PTR [rbx],0x0
  41ced0:	lea    rax,[rip+0x10039]        # 0x42cf10
  41ced7:	cmove  rbx,rax
  41cedb:	test   rsi,rsi
  41cede:	je     0x41cf81
  41cee4:	cmp    WORD PTR [rsi],0x0
  41cee8:	lea    rax,[rip+0x10035]        # 0x42cf24
  41ceef:	cmove  rsi,rax
  41cef3:	lea    rdi,[rsp+0x40]
  41cef8:	xor    ecx,ecx
  41cefa:	mov    r8d,0x104
  41cf00:	mov    rdx,rdi
  41cf03:	call   QWORD PTR [rip+0x1bf5b]        # 0x438e64
  41cf09:	test   eax,eax
  41cf0b:	je     0x41cf70
  41cf0d:	lea    r8,[rip+0x10014]        # 0x42cf28
  41cf14:	mov    QWORD PTR [rsp+0x30],rsi
  41cf19:	mov    DWORD PTR [rsp+0x28],r12d
  41cf1e:	mov    QWORD PTR [rsp+0x20],rbx
  41cf23:	mov    r9,rdi
  41cf26:	mov    edx,0x1fff
  41cf2b:	mov    rcx,rbp
  41cf2e:	call   0x421ed8
  41cf33:	mov    rax,QWORD PTR [rip+0x106d6]        # 0x42d610
  41cf3a:	mov    eax,DWORD PTR [rax]
  41cf3c:	test   eax,eax
  41cf3e:	je     0x41cfb5
  41cf40:	xor    ecx,ecx
  41cf42:	mov    r9d,0x12012
  41cf48:	lea    r8,[rip+0x10071]        # 0x42cfc0
  41cf4f:	mov    rdx,rbp
  41cf52:	call   QWORD PTR [rip+0x1c31c]        # 0x439274
  41cf58:	cmp    eax,0x3
  41cf5b:	je     0x41cfa1
  41cf5d:	cmp    eax,0x5
  41cf60:	jne    0x41cf9c
  41cf62:	add    rsp,0x250
  41cf69:	pop    rbx
  41cf6a:	pop    rsi
  41cf6b:	pop    rdi
  41cf6c:	pop    rbp
  41cf6d:	pop    r12
  41cf6f:	ret    
  41cf70:	lea    rdx,[rip+0xff99]        # 0x42cf10
  41cf77:	mov    rcx,rdi
  41cf7a:	call   0x421d40
  41cf7f:	jmp    0x41cf0d
  41cf81:	lea    rsi,[rip+0xff9c]        # 0x42cf24
  41cf88:	jmp    0x41cef3
  41cf8d:	nop    DWORD PTR [rax]
  41cf90:	lea    rbx,[rip+0xff79]        # 0x42cf10
  41cf97:	jmp    0x41cedb
  41cf9c:	call   0x421eb8
  41cfa1:	mov    ecx,0x16
  41cfa6:	call   0x421de0
  41cfab:	mov    ecx,0x3
  41cfb0:	call   0x421f40
  41cfb5:	call   0x421f88
  41cfba:	lea    rdx,[rip+0xffef]        # 0x42cfb0
  41cfc1:	lea    rcx,[rax+0x60]
  41cfc5:	mov    r8,rbp
  41cfc8:	call   0x421e40
  41cfcd:	call   0x421eb8
  41cfd2:	nop
  41cfd3:	nop    DWORD PTR [rax]
  41cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfe0:	push   rbp
  41cfe1:	push   rdi
  41cfe2:	push   rsi
  41cfe3:	push   rbx
  41cfe4:	sub    rsp,0x38
  41cfe8:	mov    rdi,rdx
  41cfeb:	mov    DWORD PTR [rsp+0x2c],r8d
  41cff0:	mov    rbp,rcx
  41cff3:	call   0x421d98
  41cff8:	lea    rcx,[rax+rax*1+0x2]
  41cffd:	call   0x421e18
  41d002:	mov    rcx,rdi
  41d005:	mov    rsi,rax
  41d008:	call   0x421d98
  41d00d:	lea    rcx,[rax+rax*1+0x2]
  41d012:	call   0x421e18
  41d017:	movzx  r9d,BYTE PTR [rbp+0x0]
  41d01c:	xor    r10d,r10d
  41d01f:	mov    rbx,rax
  41d022:	mov    r8d,DWORD PTR [rsp+0x2c]
  41d027:	test   r9b,r9b
  41d02a:	je     0x41d047
  41d02c:	nop    DWORD PTR [rax+0x0]
  41d030:	mov    WORD PTR [rsi+r10*2],r9w
  41d035:	add    r10,0x1
  41d039:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  41d03f:	test   r9b,r9b
  41d042:	jne    0x41d030
  41d044:	add    r10,r10
  41d047:	movzx  r9d,BYTE PTR [rdi]
  41d04b:	xor    edx,edx
  41d04d:	mov    WORD PTR [rsi+r10*1],dx
  41d052:	xor    r10d,r10d
  41d055:	test   r9b,r9b
  41d058:	je     0x41d076
  41d05a:	nop    WORD PTR [rax+rax*1+0x0]
  41d060:	mov    WORD PTR [rbx+r10*2],r9w
  41d065:	add    r10,0x1
  41d069:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41d06e:	test   r9b,r9b
  41d071:	jne    0x41d060
  41d073:	add    r10,r10
  41d076:	xor    eax,eax
  41d078:	mov    rdx,rbx
  41d07b:	mov    rcx,rsi
  41d07e:	mov    WORD PTR [rbx+r10*1],ax
  41d083:	call   0x41cea0
  41d088:	mov    rcx,rsi
  41d08b:	call   0x421e50
  41d090:	mov    rcx,rbx
  41d093:	add    rsp,0x38
  41d097:	pop    rbx
  41d098:	pop    rsi
  41d099:	pop    rdi
  41d09a:	pop    rbp
  41d09b:	jmp    0x421e50
  41d0a0:	sub    rsp,0x58
  41d0a4:	test   r8d,r8d
  41d0a7:	mov    eax,r8d
  41d0aa:	mov    WORD PTR [rsp+0x68],dx
  41d0af:	jne    0x41d0c4
  41d0b1:	cmp    dx,0xff
  41d0b6:	ja     0x41d10a
  41d0b8:	mov    BYTE PTR [rcx],dl
  41d0ba:	mov    eax,0x1
  41d0bf:	add    rsp,0x58
  41d0c3:	ret    
  41d0c4:	lea    rdx,[rsp+0x4c]
  41d0c9:	mov    DWORD PTR [rsp+0x28],r9d
  41d0ce:	mov    QWORD PTR [rsp+0x20],rcx
  41d0d3:	mov    DWORD PTR [rsp+0x4c],0x0
  41d0db:	mov    QWORD PTR [rsp+0x30],0x0
  41d0e4:	mov    r9d,0x1
  41d0ea:	mov    QWORD PTR [rsp+0x38],rdx
  41d0ef:	lea    r8,[rsp+0x68]
  41d0f4:	xor    edx,edx
  41d0f6:	mov    ecx,eax
  41d0f8:	call   QWORD PTR [rip+0x1be46]        # 0x438f44
  41d0fe:	test   eax,eax
  41d100:	je     0x41d10a
  41d102:	mov    edx,DWORD PTR [rsp+0x4c]
  41d106:	test   edx,edx
  41d108:	je     0x41d0bf
  41d10a:	call   0x421f48
  41d10f:	mov    DWORD PTR [rax],0x2a
  41d115:	mov    eax,0xffffffff
  41d11a:	add    rsp,0x58
  41d11e:	ret    
  41d11f:	nop
  41d120:	push   rdi
  41d121:	push   rsi
  41d122:	push   rbx
  41d123:	sub    rsp,0x30
  41d127:	lea    rax,[rsp+0x20]
  41d12c:	test   rcx,rcx
  41d12f:	mov    rbx,rcx
  41d132:	mov    esi,edx
  41d134:	cmove  rbx,rax
  41d138:	mov    rax,QWORD PTR [rip+0x10351]        # 0x42d490
  41d13f:	mov    rax,QWORD PTR [rax]
  41d142:	mov    edi,DWORD PTR [rax]
  41d144:	call   0x421fa0
  41d149:	movzx  edx,si
  41d14c:	mov    r8d,eax
  41d14f:	mov    rcx,rbx
  41d152:	mov    r9d,edi
  41d155:	call   0x41d0a0
  41d15a:	cdqe   
  41d15c:	add    rsp,0x30
  41d160:	pop    rbx
  41d161:	pop    rsi
  41d162:	pop    rdi
  41d163:	ret    
  41d164:	xchg   ax,ax
  41d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d170:	push   r14
  41d172:	push   r13
  41d174:	push   r12
  41d176:	push   rbp
  41d177:	push   rdi
  41d178:	push   rsi
  41d179:	push   rbx
  41d17a:	sub    rsp,0x30
  41d17e:	mov    r13,rdx
  41d181:	mov    rbx,rcx
  41d184:	mov    rdi,r8
  41d187:	call   0x421fa0
  41d18c:	mov    ebp,eax
  41d18e:	mov    rax,QWORD PTR [rip+0x102fb]        # 0x42d490
  41d195:	mov    r14,QWORD PTR [r13+0x0]
  41d199:	mov    rax,QWORD PTR [rax]
  41d19c:	test   r14,r14
  41d19f:	mov    r12d,DWORD PTR [rax]
  41d1a2:	je     0x41d290
  41d1a8:	xor    esi,esi
  41d1aa:	test   rbx,rbx
  41d1ad:	je     0x41d240
  41d1b3:	test   rdi,rdi
  41d1b6:	jne    0x41d1d8
  41d1b8:	jmp    0x41d204
  41d1ba:	nop    WORD PTR [rax+rax*1+0x0]
  41d1c0:	movsxd r10,eax
  41d1c3:	add    rbx,r10
  41d1c6:	add    rsi,r10
  41d1c9:	cmp    BYTE PTR [rbx-0x1],0x0
  41d1cd:	je     0x41d220
  41d1cf:	add    r14,0x2
  41d1d3:	cmp    rdi,rsi
  41d1d6:	jbe    0x41d204
  41d1d8:	movzx  edx,WORD PTR [r14]
  41d1dc:	mov    r9d,r12d
  41d1df:	mov    r8d,ebp
  41d1e2:	mov    rcx,rbx
  41d1e5:	call   0x41d0a0
  41d1ea:	test   eax,eax
  41d1ec:	jg     0x41d1c0
  41d1ee:	mov    rax,0xffffffffffffffff
  41d1f5:	add    rsp,0x30
  41d1f9:	pop    rbx
  41d1fa:	pop    rsi
  41d1fb:	pop    rdi
  41d1fc:	pop    rbp
  41d1fd:	pop    r12
  41d1ff:	pop    r13
  41d201:	pop    r14
  41d203:	ret    
  41d204:	mov    rax,rsi
  41d207:	mov    QWORD PTR [r13+0x0],r14
  41d20b:	add    rsp,0x30
  41d20f:	pop    rbx
  41d210:	pop    rsi
  41d211:	pop    rdi
  41d212:	pop    rbp
  41d213:	pop    r12
  41d215:	pop    r13
  41d217:	pop    r14
  41d219:	ret    
  41d21a:	nop    WORD PTR [rax+rax*1+0x0]
  41d220:	lea    rax,[rsi-0x1]
  41d224:	mov    QWORD PTR [r13+0x0],0x0
  41d22c:	add    rsp,0x30
  41d230:	pop    rbx
  41d231:	pop    rsi
  41d232:	pop    rdi
  41d233:	pop    rbp
  41d234:	pop    r12
  41d236:	pop    r13
  41d238:	pop    r14
  41d23a:	ret    
  41d23b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d240:	test   rdi,rdi
  41d243:	lea    rbx,[rsp+0x20]
  41d248:	jne    0x41d26b
  41d24a:	jmp    0x41d2a1
  41d24c:	nop    DWORD PTR [rax+0x0]
  41d250:	movsxd rdx,eax
  41d253:	sub    eax,0x1
  41d256:	cdqe   
  41d258:	add    rsi,rdx
  41d25b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  41d260:	je     0x41d2a9
  41d262:	add    r14,0x2
  41d266:	cmp    rdi,rsi
  41d269:	jbe    0x41d2a1
  41d26b:	movzx  edx,WORD PTR [r14]
  41d26f:	mov    r9d,r12d
  41d272:	mov    r8d,ebp
  41d275:	mov    rcx,rbx
  41d278:	call   0x41d0a0
  41d27d:	test   eax,eax
  41d27f:	jg     0x41d250
  41d281:	jmp    0x41d1ee
  41d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d290:	xor    eax,eax
  41d292:	add    rsp,0x30
  41d296:	pop    rbx
  41d297:	pop    rsi
  41d298:	pop    rdi
  41d299:	pop    rbp
  41d29a:	pop    r12
  41d29c:	pop    r13
  41d29e:	pop    r14
  41d2a0:	ret    
  41d2a1:	mov    rax,rsi
  41d2a4:	jmp    0x41d1f5
  41d2a9:	lea    rax,[rsi-0x1]
  41d2ad:	jmp    0x41d1f5
  41d2b2:	nop
  41d2b3:	nop
  41d2b4:	nop
  41d2b5:	nop
  41d2b6:	nop
  41d2b7:	nop
  41d2b8:	nop
  41d2b9:	nop
  41d2ba:	nop
  41d2bb:	nop
  41d2bc:	nop
  41d2bd:	nop
  41d2be:	nop
  41d2bf:	nop
  41d2c0:	jmp    0x421ef0
  41d2c5:	nop
  41d2c6:	nop
  41d2c7:	nop
  41d2c8:	nop
  41d2c9:	nop
  41d2ca:	nop
  41d2cb:	nop
  41d2cc:	nop
  41d2cd:	nop
  41d2ce:	nop
  41d2cf:	nop
  41d2d0:	sub    rsp,0x38
  41d2d4:	mov    r9,rdx
  41d2d7:	mov    QWORD PTR [rsp+0x20],r8
  41d2dc:	mov    rdx,rcx
  41d2df:	xor    r8d,r8d
  41d2e2:	mov    ecx,0x6000
  41d2e7:	call   0x41ec00
  41d2ec:	add    rsp,0x38
  41d2f0:	ret    
  41d2f1:	nop
  41d2f2:	nop
  41d2f3:	nop
  41d2f4:	nop
  41d2f5:	nop
  41d2f6:	nop
  41d2f7:	nop
  41d2f8:	nop
  41d2f9:	nop
  41d2fa:	nop
  41d2fb:	nop
  41d2fc:	nop
  41d2fd:	nop
  41d2fe:	nop
  41d2ff:	nop
  41d300:	push   rsi
  41d301:	push   rbx
  41d302:	sub    rsp,0x38
  41d306:	mov    rbx,rcx
  41d309:	mov    rsi,rdx
  41d30c:	call   0x421f88
  41d311:	lea    rdx,[rax+0x30]
  41d315:	mov    QWORD PTR [rsp+0x20],rsi
  41d31a:	mov    r9,rbx
  41d31d:	xor    r8d,r8d
  41d320:	mov    ecx,0x6000
  41d325:	call   0x41ec00
  41d32a:	add    rsp,0x38
  41d32e:	pop    rbx
  41d32f:	pop    rsi
  41d330:	ret    
  41d331:	nop
  41d332:	nop
  41d333:	nop
  41d334:	nop
  41d335:	nop
  41d336:	nop
  41d337:	nop
  41d338:	nop
  41d339:	nop
  41d33a:	nop
  41d33b:	nop
  41d33c:	nop
  41d33d:	nop
  41d33e:	nop
  41d33f:	nop
  41d340:	push   rsi
  41d341:	push   rbx
  41d342:	sub    rsp,0x38
  41d346:	test   rdx,rdx
  41d349:	mov    rsi,rcx
  41d34c:	je     0x41d380
  41d34e:	lea    rbx,[rdx-0x1]
  41d352:	mov    QWORD PTR [rsp+0x20],r9
  41d357:	mov    rdx,rcx
  41d35a:	mov    r9,r8
  41d35d:	xor    ecx,ecx
  41d35f:	mov    r8d,ebx
  41d362:	call   0x41ec00
  41d367:	cmp    eax,ebx
  41d369:	cmovle ebx,eax
  41d36c:	movsxd rbx,ebx
  41d36f:	mov    BYTE PTR [rsi+rbx*1],0x0
  41d373:	add    rsp,0x38
  41d377:	pop    rbx
  41d378:	pop    rsi
  41d379:	ret    
  41d37a:	nop    WORD PTR [rax+rax*1+0x0]
  41d380:	mov    QWORD PTR [rsp+0x20],r9
  41d385:	mov    rdx,rcx
  41d388:	mov    r9,r8
  41d38b:	xor    ecx,ecx
  41d38d:	xor    r8d,r8d
  41d390:	call   0x41ec00
  41d395:	add    rsp,0x38
  41d399:	pop    rbx
  41d39a:	pop    rsi
  41d39b:	ret    
  41d39c:	nop
  41d39d:	nop
  41d39e:	nop
  41d39f:	nop
  41d3a0:	push   rbx
  41d3a1:	sub    rsp,0x30
  41d3a5:	mov    rbx,rcx
  41d3a8:	mov    r9,rdx
  41d3ab:	mov    QWORD PTR [rsp+0x20],r8
  41d3b0:	mov    rdx,rcx
  41d3b3:	xor    r8d,r8d
  41d3b6:	mov    ecx,0x4000
  41d3bb:	call   0x41ec00
  41d3c0:	movsxd rdx,eax
  41d3c3:	mov    BYTE PTR [rbx+rdx*1],0x0
  41d3c7:	add    rsp,0x30
  41d3cb:	pop    rbx
  41d3cc:	ret    
  41d3cd:	nop
  41d3ce:	nop
  41d3cf:	nop
  41d3d0:	sub    rsp,0x58
  41d3d4:	mov    rax,QWORD PTR [rdx]
  41d3d7:	mov    r11,rdx
  41d3da:	mov    edx,DWORD PTR [rdx+0x8]
  41d3dd:	mov    r10,rdx
  41d3e0:	and    r10w,0x7fff
  41d3e6:	jne    0x41d404
  41d3e8:	mov    rdx,rax
  41d3eb:	shr    rdx,0x20
  41d3ef:	or     eax,edx
  41d3f1:	jne    0x41d470
  41d3f3:	mov    DWORD PTR [rsp+0x44],0x0
  41d3fb:	movzx  eax,WORD PTR [r11+0x8]
  41d400:	xor    edx,edx
  41d402:	jmp    0x41d42b
  41d404:	cmp    r10w,0x7fff
  41d40a:	je     0x41d490
  41d410:	movzx  eax,WORD PTR [r11+0x8]
  41d415:	mov    DWORD PTR [rsp+0x44],0x1
  41d41d:	mov    edx,eax
  41d41f:	and    edx,0x7fff
  41d425:	sub    edx,0x403e
  41d42b:	and    eax,0x8000
  41d430:	mov    r10,QWORD PTR [rsp+0x80]
  41d438:	mov    DWORD PTR [r10],eax
  41d43b:	lea    rax,[rsp+0x48]
  41d440:	mov    QWORD PTR [rsp+0x30],r9
  41d445:	mov    DWORD PTR [rsp+0x20],ecx
  41d449:	lea    r9,[rsp+0x44]
  41d44e:	lea    rcx,[rip+0x699b]        # 0x423df0
  41d455:	mov    DWORD PTR [rsp+0x28],r8d
  41d45a:	mov    QWORD PTR [rsp+0x38],rax
  41d45f:	mov    r8,r11
  41d462:	call   0x41f880
  41d467:	add    rsp,0x58
  41d46b:	ret    
  41d46c:	nop    DWORD PTR [rax+0x0]
  41d470:	test   edx,edx
  41d472:	js     0x41d410
  41d474:	mov    DWORD PTR [rsp+0x44],0x2
  41d47c:	movzx  eax,WORD PTR [r11+0x8]
  41d481:	mov    edx,0xffffbfc3
  41d486:	jmp    0x41d42b
  41d488:	nop    DWORD PTR [rax+rax*1+0x0]
  41d490:	mov    rdx,rax
  41d493:	shr    rdx,0x20
  41d497:	and    edx,0x7fffffff
  41d49d:	or     edx,eax
  41d49f:	jne    0x41d4b5
  41d4a1:	mov    DWORD PTR [rsp+0x44],0x3
  41d4a9:	movzx  eax,WORD PTR [r11+0x8]
  41d4ae:	xor    edx,edx
  41d4b0:	jmp    0x41d42b
  41d4b5:	mov    DWORD PTR [rsp+0x44],0x4
  41d4bd:	xor    edx,edx
  41d4bf:	xor    eax,eax
  41d4c1:	jmp    0x41d430
  41d4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4d0:	push   rbx
  41d4d1:	sub    rsp,0x20
  41d4d5:	mov    rbx,rdx
  41d4d8:	mov    edx,DWORD PTR [rdx+0x8]
  41d4db:	test   dh,0x40
  41d4de:	jne    0x41d4e8
  41d4e0:	mov    eax,DWORD PTR [rbx+0x24]
  41d4e3:	cmp    DWORD PTR [rbx+0x28],eax
  41d4e6:	jle    0x41d4fa
  41d4e8:	and    dh,0x20
  41d4eb:	jne    0x41d510
  41d4ed:	movsxd rax,DWORD PTR [rbx+0x24]
  41d4f1:	mov    rdx,QWORD PTR [rbx]
  41d4f4:	mov    BYTE PTR [rdx+rax*1],cl
  41d4f7:	mov    eax,DWORD PTR [rbx+0x24]
  41d4fa:	add    eax,0x1
  41d4fd:	mov    DWORD PTR [rbx+0x24],eax
  41d500:	add    rsp,0x20
  41d504:	pop    rbx
  41d505:	ret    
  41d506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d510:	mov    rdx,QWORD PTR [rbx]
  41d513:	call   0x421e68
  41d518:	mov    eax,DWORD PTR [rbx+0x24]
  41d51b:	add    eax,0x1
  41d51e:	mov    DWORD PTR [rbx+0x24],eax
  41d521:	add    rsp,0x20
  41d525:	pop    rbx
  41d526:	ret    
  41d527:	nop    WORD PTR [rax+rax*1+0x0]
  41d530:	push   r14
  41d532:	push   r13
  41d534:	push   r12
  41d536:	push   rbp
  41d537:	push   rdi
  41d538:	push   rsi
  41d539:	push   rbx
  41d53a:	sub    rsp,0x40
  41d53e:	lea    r14,[rsp+0x2c]
  41d543:	lea    r13,[rsp+0x30]
  41d548:	mov    ebx,edx
  41d54a:	mov    rsi,r8
  41d54d:	xor    edx,edx
  41d54f:	mov    r12,rcx
  41d552:	mov    r8,r14
  41d555:	mov    rcx,r13
  41d558:	call   0x41d120
  41d55d:	mov    ebp,DWORD PTR [rsi+0x10]
  41d560:	cmp    ebp,ebx
  41d562:	jge    0x41d609
  41d568:	test   ebp,ebp
  41d56a:	js     0x41d609
  41d570:	mov    eax,DWORD PTR [rsi+0xc]
  41d573:	cmp    ebp,eax
  41d575:	jge    0x41d616
  41d57b:	sub    eax,ebp
  41d57d:	test   eax,eax
  41d57f:	mov    DWORD PTR [rsi+0xc],eax
  41d582:	jle    0x41d590
  41d584:	test   BYTE PTR [rsi+0x9],0x4
  41d588:	je     0x41d622
  41d58e:	xchg   ax,ax
  41d590:	test   ebp,ebp
  41d592:	jle    0x41d5ed
  41d594:	add    r12,0x2
  41d598:	movzx  edx,WORD PTR [r12-0x2]
  41d59e:	mov    r8,r14
  41d5a1:	mov    rcx,r13
  41d5a4:	call   0x41d120
  41d5a9:	test   eax,eax
  41d5ab:	jle    0x41d5ed
  41d5ad:	sub    eax,0x1
  41d5b0:	mov    rbx,r13
  41d5b3:	lea    rdi,[r13+rax*1+0x1]
  41d5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5c0:	add    rbx,0x1
  41d5c4:	movsx  ecx,BYTE PTR [rbx-0x1]
  41d5c8:	mov    rdx,rsi
  41d5cb:	call   0x41d4d0
  41d5d0:	cmp    rbx,rdi
  41d5d3:	jne    0x41d5c0
  41d5d5:	sub    ebp,0x1
  41d5d8:	jmp    0x41d590
  41d5da:	nop    WORD PTR [rax+rax*1+0x0]
  41d5e0:	mov    rdx,rsi
  41d5e3:	mov    ecx,0x20
  41d5e8:	call   0x41d4d0
  41d5ed:	mov    eax,DWORD PTR [rsi+0xc]
  41d5f0:	lea    edx,[rax-0x1]
  41d5f3:	test   eax,eax
  41d5f5:	mov    DWORD PTR [rsi+0xc],edx
  41d5f8:	jg     0x41d5e0
  41d5fa:	add    rsp,0x40
  41d5fe:	pop    rbx
  41d5ff:	pop    rsi
  41d600:	pop    rdi
  41d601:	pop    rbp
  41d602:	pop    r12
  41d604:	pop    r13
  41d606:	pop    r14
  41d608:	ret    
  41d609:	mov    eax,DWORD PTR [rsi+0xc]
  41d60c:	mov    ebp,ebx
  41d60e:	cmp    ebp,eax
  41d610:	jl     0x41d57b
  41d616:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41d61d:	jmp    0x41d590
  41d622:	sub    eax,0x1
  41d625:	mov    DWORD PTR [rsi+0xc],eax
  41d628:	nop    DWORD PTR [rax+rax*1+0x0]
  41d630:	mov    rdx,rsi
  41d633:	mov    ecx,0x20
  41d638:	call   0x41d4d0
  41d63d:	mov    eax,DWORD PTR [rsi+0xc]
  41d640:	lea    edx,[rax-0x1]
  41d643:	test   eax,eax
  41d645:	mov    DWORD PTR [rsi+0xc],edx
  41d648:	jne    0x41d630
  41d64a:	jmp    0x41d590
  41d64f:	nop
  41d650:	push   rdi
  41d651:	push   rsi
  41d652:	push   rbx
  41d653:	sub    rsp,0x20
  41d657:	mov    edi,DWORD PTR [r8+0x10]
  41d65b:	mov    rsi,rcx
  41d65e:	mov    rbx,r8
  41d661:	cmp    edi,edx
  41d663:	jge    0x41d6e0
  41d665:	test   edi,edi
  41d667:	js     0x41d6e0
  41d669:	mov    eax,DWORD PTR [rbx+0xc]
  41d66c:	cmp    edi,eax
  41d66e:	jge    0x41d6e9
  41d670:	sub    eax,edi
  41d672:	test   eax,eax
  41d674:	mov    DWORD PTR [rbx+0xc],eax
  41d677:	jle    0x41d742
  41d67d:	test   BYTE PTR [rbx+0x9],0x4
  41d681:	jne    0x41d710
  41d687:	sub    eax,0x1
  41d68a:	mov    DWORD PTR [rbx+0xc],eax
  41d68d:	nop    DWORD PTR [rax]
  41d690:	mov    rdx,rbx
  41d693:	mov    ecx,0x20
  41d698:	call   0x41d4d0
  41d69d:	mov    eax,DWORD PTR [rbx+0xc]
  41d6a0:	mov    edx,eax
  41d6a2:	sub    eax,0x1
  41d6a5:	test   edx,edx
  41d6a7:	mov    DWORD PTR [rbx+0xc],eax
  41d6aa:	jne    0x41d690
  41d6ac:	test   edi,edi
  41d6ae:	lea    edx,[rdi-0x1]
  41d6b1:	je     0x41d730
  41d6b3:	lea    rdi,[rsi+rdx*1+0x1]
  41d6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d6c0:	add    rsi,0x1
  41d6c4:	movsx  ecx,BYTE PTR [rsi-0x1]
  41d6c8:	mov    rdx,rbx
  41d6cb:	call   0x41d4d0
  41d6d0:	cmp    rsi,rdi
  41d6d3:	jne    0x41d6c0
  41d6d5:	jmp    0x41d72d
  41d6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d6e0:	mov    eax,DWORD PTR [rbx+0xc]
  41d6e3:	mov    edi,edx
  41d6e5:	cmp    edi,eax
  41d6e7:	jl     0x41d670
  41d6e9:	test   edi,edi
  41d6eb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41d6f2:	lea    edx,[rdi-0x1]
  41d6f5:	jne    0x41d6b3
  41d6f7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41d6fe:	add    rsp,0x20
  41d702:	pop    rbx
  41d703:	pop    rsi
  41d704:	pop    rdi
  41d705:	ret    
  41d706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d710:	test   edi,edi
  41d712:	lea    edx,[rdi-0x1]
  41d715:	jne    0x41d6b3
  41d717:	sub    eax,0x1
  41d71a:	mov    DWORD PTR [rbx+0xc],eax
  41d71d:	nop    DWORD PTR [rax]
  41d720:	mov    rdx,rbx
  41d723:	mov    ecx,0x20
  41d728:	call   0x41d4d0
  41d72d:	mov    eax,DWORD PTR [rbx+0xc]
  41d730:	lea    edx,[rax-0x1]
  41d733:	test   eax,eax
  41d735:	mov    DWORD PTR [rbx+0xc],edx
  41d738:	jg     0x41d720
  41d73a:	add    rsp,0x20
  41d73e:	pop    rbx
  41d73f:	pop    rsi
  41d740:	pop    rdi
  41d741:	ret    
  41d742:	test   edi,edi
  41d744:	lea    edx,[rdi-0x1]
  41d747:	jne    0x41d6b3
  41d74d:	sub    eax,0x1
  41d750:	mov    DWORD PTR [rbx+0xc],eax
  41d753:	jmp    0x41d6fe
  41d755:	nop
  41d756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d760:	sub    rsp,0x38
  41d764:	test   ecx,ecx
  41d766:	mov    DWORD PTR [r8+0x10],0xffffffff
  41d76e:	je     0x41d7b4
  41d770:	lea    rcx,[rsp+0x20]
  41d775:	mov    r11d,DWORD PTR [r8+0x8]
  41d779:	mov    BYTE PTR [rsp+0x20],0x2d
  41d77e:	lea    r10,[rcx+0x1]
  41d782:	and    r11d,0x20
  41d786:	xor    r9d,r9d
  41d789:	movzx  eax,BYTE PTR [rdx+r9*1]
  41d78e:	and    eax,0xffffffdf
  41d791:	or     eax,r11d
  41d794:	mov    BYTE PTR [r10+r9*1],al
  41d798:	add    r9,0x1
  41d79c:	cmp    r9,0x3
  41d7a0:	jne    0x41d789
  41d7a2:	lea    rdx,[r10+0x3]
  41d7a6:	sub    rdx,rcx
  41d7a9:	call   0x41d650
  41d7ae:	nop
  41d7af:	add    rsp,0x38
  41d7b3:	ret    
  41d7b4:	mov    r11d,DWORD PTR [r8+0x8]
  41d7b8:	test   r11d,0x100
  41d7bf:	je     0x41d7d1
  41d7c1:	lea    rcx,[rsp+0x20]
  41d7c6:	mov    BYTE PTR [rsp+0x20],0x2b
  41d7cb:	lea    r10,[rcx+0x1]
  41d7cf:	jmp    0x41d782
  41d7d1:	test   r11b,0x40
  41d7d5:	je     0x41d7f0
  41d7d7:	lea    rcx,[rsp+0x20]
  41d7dc:	mov    BYTE PTR [rsp+0x20],0x20
  41d7e1:	lea    r10,[rcx+0x1]
  41d7e5:	jmp    0x41d782
  41d7e7:	nop    WORD PTR [rax+rax*1+0x0]
  41d7f0:	lea    rcx,[rsp+0x20]
  41d7f5:	mov    r10,rcx
  41d7f8:	jmp    0x41d782
  41d7fa:	nop    WORD PTR [rax+rax*1+0x0]
  41d800:	push   rbp
  41d801:	push   r12
  41d803:	push   rdi
  41d804:	push   rsi
  41d805:	push   rbx
  41d806:	mov    rbp,rsp
  41d809:	sub    rsp,0x30
  41d80d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  41d811:	mov    rsi,rcx
  41d814:	je     0x41d8b0
  41d81a:	movzx  edx,WORD PTR [rcx+0x18]
  41d81e:	test   dx,dx
  41d821:	je     0x41d882
  41d823:	movsxd rax,DWORD PTR [rsi+0x14]
  41d827:	mov    r12,rsp
  41d82a:	add    rax,0xf
  41d82e:	and    rax,0xfffffffffffffff0
  41d832:	call   0x41c880
  41d837:	sub    rsp,rax
  41d83a:	lea    r8,[rbp-0x4]
  41d83e:	mov    DWORD PTR [rbp-0x4],0x0
  41d845:	lea    rbx,[rsp+0x20]
  41d84a:	mov    rcx,rbx
  41d84d:	call   0x41d120
  41d852:	test   eax,eax
  41d854:	jle    0x41d8a0
  41d856:	sub    eax,0x1
  41d859:	lea    rdi,[rbx+rax*1+0x1]
  41d85e:	xchg   ax,ax
  41d860:	add    rbx,0x1
  41d864:	movsx  ecx,BYTE PTR [rbx-0x1]
  41d868:	mov    rdx,rsi
  41d86b:	call   0x41d4d0
  41d870:	cmp    rbx,rdi
  41d873:	jne    0x41d860
  41d875:	mov    rsp,r12
  41d878:	mov    rsp,rbp
  41d87b:	pop    rbx
  41d87c:	pop    rsi
  41d87d:	pop    rdi
  41d87e:	pop    r12
  41d880:	pop    rbp
  41d881:	ret    
  41d882:	mov    rdx,rsi
  41d885:	mov    ecx,0x2e
  41d88a:	call   0x41d4d0
  41d88f:	nop
  41d890:	mov    rsp,rbp
  41d893:	pop    rbx
  41d894:	pop    rsi
  41d895:	pop    rdi
  41d896:	pop    r12
  41d898:	pop    rbp
  41d899:	ret    
  41d89a:	nop    WORD PTR [rax+rax*1+0x0]
  41d8a0:	mov    rdx,rsi
  41d8a3:	mov    ecx,0x2e
  41d8a8:	call   0x41d4d0
  41d8ad:	jmp    0x41d875
  41d8af:	nop
  41d8b0:	mov    DWORD PTR [rbp-0x4],0x0
  41d8b7:	call   0x421e20
  41d8bc:	mov    rdx,QWORD PTR [rax]
  41d8bf:	lea    rcx,[rbp-0x6]
  41d8c3:	lea    r9,[rbp-0x4]
  41d8c7:	mov    r8d,0x10
  41d8cd:	call   0x421ae0
  41d8d2:	test   eax,eax
  41d8d4:	jle    0x41d8e6
  41d8d6:	movzx  edx,WORD PTR [rbp-0x6]
  41d8da:	mov    WORD PTR [rsi+0x18],dx
  41d8de:	mov    DWORD PTR [rsi+0x14],eax
  41d8e1:	jmp    0x41d81e
  41d8e6:	movzx  edx,WORD PTR [rsi+0x18]
  41d8ea:	jmp    0x41d8de
  41d8ec:	nop    DWORD PTR [rax+0x0]
  41d8f0:	push   r12
  41d8f2:	push   rbp
  41d8f3:	push   rdi
  41d8f4:	push   rsi
  41d8f5:	push   rbx
  41d8f6:	sub    rsp,0x20
  41d8fa:	mov    esi,r8d
  41d8fd:	mov    ebp,ecx
  41d8ff:	mov    rdi,rdx
  41d902:	test   esi,esi
  41d904:	mov    rbx,r9
  41d907:	mov    r8d,DWORD PTR [r9+0xc]
  41d90b:	jle    0x41dae2
  41d911:	cmp    esi,r8d
  41d914:	jg     0x41da50
  41d91a:	sub    r8d,esi
  41d91d:	mov    DWORD PTR [r9+0xc],r8d
  41d921:	test   r8d,r8d
  41d924:	js     0x41da50
  41d92a:	mov    eax,DWORD PTR [rbx+0x10]
  41d92d:	cmp    eax,r8d
  41d930:	jge    0x41da50
  41d936:	sub    r8d,eax
  41d939:	test   r8d,r8d
  41d93c:	mov    DWORD PTR [rbx+0xc],r8d
  41d940:	jle    0x41da5d
  41d946:	test   eax,eax
  41d948:	jle    0x41db95
  41d94e:	sub    r8d,0x1
  41d952:	test   esi,esi
  41d954:	mov    DWORD PTR [rbx+0xc],r8d
  41d958:	jle    0x41d964
  41d95a:	test   BYTE PTR [rbx+0x9],0x10
  41d95e:	jne    0x41da6f
  41d964:	test   r8d,r8d
  41d967:	jle    0x41d9ad
  41d969:	test   ebp,ebp
  41d96b:	jne    0x41d97b
  41d96d:	mov    eax,DWORD PTR [rbx+0x8]
  41d970:	test   eax,0x1c0
  41d975:	je     0x41db75
  41d97b:	sub    r8d,0x1
  41d97f:	test   r8d,r8d
  41d982:	mov    DWORD PTR [rbx+0xc],r8d
  41d986:	jle    0x41d9ad
  41d988:	test   DWORD PTR [rbx+0x8],0x600
  41d98f:	jne    0x41d9ad
  41d991:	jmp    0x41d9a0
  41d993:	mov    rdx,rbx
  41d996:	mov    ecx,0x20
  41d99b:	call   0x41d4d0
  41d9a0:	mov    eax,DWORD PTR [rbx+0xc]
  41d9a3:	lea    edx,[rax-0x1]
  41d9a6:	test   eax,eax
  41d9a8:	mov    DWORD PTR [rbx+0xc],edx
  41d9ab:	jg     0x41d993
  41d9ad:	test   ebp,ebp
  41d9af:	jne    0x41dad0
  41d9b5:	mov    eax,DWORD PTR [rbx+0x8]
  41d9b8:	test   ah,0x1
  41d9bb:	jne    0x41db00
  41d9c1:	test   al,0x40
  41d9c3:	jne    0x41db83
  41d9c9:	mov    edx,DWORD PTR [rbx+0xc]
  41d9cc:	test   edx,edx
  41d9ce:	jle    0x41d9e3
  41d9d0:	mov    eax,DWORD PTR [rbx+0x8]
  41d9d3:	and    eax,0x600
  41d9d8:	cmp    eax,0x200
  41d9dd:	je     0x41db12
  41d9e3:	test   esi,esi
  41d9e5:	jle    0x41db42
  41d9eb:	lea    r12,[rbx+0x20]
  41d9ef:	mov    ebp,0x55555556
  41d9f4:	movzx  eax,BYTE PTR [rdi]
  41d9f7:	mov    ecx,0x30
  41d9fc:	test   al,al
  41d9fe:	je     0x41da07
  41da00:	add    rdi,0x1
  41da04:	movsx  ecx,al
  41da07:	mov    rdx,rbx
  41da0a:	call   0x41d4d0
  41da0f:	sub    esi,0x1
  41da12:	je     0x41dc30
  41da18:	test   BYTE PTR [rbx+0x9],0x10
  41da1c:	je     0x41d9f4
  41da1e:	cmp    WORD PTR [rbx+0x20],0x0
  41da23:	je     0x41d9f4
  41da25:	mov    eax,esi
  41da27:	imul   ebp
  41da29:	mov    eax,esi
  41da2b:	sar    eax,0x1f
  41da2e:	sub    edx,eax
  41da30:	lea    eax,[rdx+rdx*2]
  41da33:	cmp    esi,eax
  41da35:	jne    0x41d9f4
  41da37:	mov    r8,rbx
  41da3a:	mov    edx,0x1
  41da3f:	mov    rcx,r12
  41da42:	call   0x41d530
  41da47:	jmp    0x41d9f4
  41da49:	nop    DWORD PTR [rax+0x0]
  41da50:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41da57:	mov    r8d,0xffffffff
  41da5d:	test   esi,esi
  41da5f:	jle    0x41d9ad
  41da65:	test   BYTE PTR [rbx+0x9],0x10
  41da69:	je     0x41d9ad
  41da6f:	cmp    WORD PTR [rbx+0x20],0x0
  41da74:	je     0x41d964
  41da7a:	lea    ecx,[rsi+0x2]
  41da7d:	mov    edx,0x55555556
  41da82:	mov    eax,ecx
  41da84:	sar    ecx,0x1f
  41da87:	imul   edx
  41da89:	sub    edx,ecx
  41da8b:	cmp    edx,0x1
  41da8e:	jle    0x41d964
  41da94:	test   r8d,r8d
  41da97:	jle    0x41d9ad
  41da9d:	mov    eax,r8d
  41daa0:	sub    eax,edx
  41daa2:	add    eax,0x1
  41daa5:	jmp    0x41dab9
  41daa7:	nop    WORD PTR [rax+rax*1+0x0]
  41dab0:	test   r8d,r8d
  41dab3:	je     0x41dc24
  41dab9:	sub    r8d,0x1
  41dabd:	cmp    r8d,eax
  41dac0:	jne    0x41dab0
  41dac2:	mov    DWORD PTR [rbx+0xc],r8d
  41dac6:	jmp    0x41d964
  41dacb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dad0:	mov    rdx,rbx
  41dad3:	mov    ecx,0x2d
  41dad8:	call   0x41d4d0
  41dadd:	jmp    0x41d9c9
  41dae2:	test   r8d,r8d
  41dae5:	jle    0x41d921
  41daeb:	sub    r8d,0x1
  41daef:	mov    DWORD PTR [r9+0xc],r8d
  41daf3:	jmp    0x41d92a
  41daf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41db00:	mov    rdx,rbx
  41db03:	mov    ecx,0x2b
  41db08:	call   0x41d4d0
  41db0d:	jmp    0x41d9c9
  41db12:	sub    edx,0x1
  41db15:	mov    DWORD PTR [rbx+0xc],edx
  41db18:	nop    DWORD PTR [rax+rax*1+0x0]
  41db20:	mov    rdx,rbx
  41db23:	mov    ecx,0x30
  41db28:	call   0x41d4d0
  41db2d:	mov    eax,DWORD PTR [rbx+0xc]
  41db30:	lea    edx,[rax-0x1]
  41db33:	test   eax,eax
  41db35:	mov    DWORD PTR [rbx+0xc],edx
  41db38:	jg     0x41db20
  41db3a:	test   esi,esi
  41db3c:	jg     0x41d9eb
  41db42:	mov    rdx,rbx
  41db45:	mov    ecx,0x30
  41db4a:	call   0x41d4d0
  41db4f:	mov    eax,DWORD PTR [rbx+0x10]
  41db52:	test   eax,eax
  41db54:	jg     0x41dbc2
  41db56:	test   BYTE PTR [rbx+0x9],0x8
  41db5a:	jne    0x41dbc2
  41db5c:	test   esi,esi
  41db5e:	jne    0x41dc06
  41db64:	sub    eax,0x1
  41db67:	mov    DWORD PTR [rbx+0x10],eax
  41db6a:	add    rsp,0x20
  41db6e:	pop    rbx
  41db6f:	pop    rsi
  41db70:	pop    rdi
  41db71:	pop    rbp
  41db72:	pop    r12
  41db74:	ret    
  41db75:	test   ah,0x6
  41db78:	je     0x41d9a0
  41db7e:	jmp    0x41d9b8
  41db83:	mov    rdx,rbx
  41db86:	mov    ecx,0x20
  41db8b:	call   0x41d4d0
  41db90:	jmp    0x41d9c9
  41db95:	mov    eax,DWORD PTR [rbx+0x8]
  41db98:	test   ah,0x8
  41db9b:	jne    0x41d94e
  41dba1:	test   esi,esi
  41dba3:	jle    0x41d969
  41dba9:	test   ah,0x10
  41dbac:	je     0x41d969
  41dbb2:	cmp    WORD PTR [rbx+0x20],0x0
  41dbb7:	jne    0x41da7a
  41dbbd:	jmp    0x41d969
  41dbc2:	mov    rcx,rbx
  41dbc5:	call   0x41d800
  41dbca:	test   esi,esi
  41dbcc:	je     0x41dbeb
  41dbce:	jmp    0x41dc03
  41dbd0:	movzx  eax,BYTE PTR [rdi]
  41dbd3:	mov    ecx,0x30
  41dbd8:	test   al,al
  41dbda:	je     0x41dbe3
  41dbdc:	add    rdi,0x1
  41dbe0:	movsx  ecx,al
  41dbe3:	mov    rdx,rbx
  41dbe6:	call   0x41d4d0
  41dbeb:	mov    eax,DWORD PTR [rbx+0x10]
  41dbee:	lea    edx,[rax-0x1]
  41dbf1:	test   eax,eax
  41dbf3:	mov    DWORD PTR [rbx+0x10],edx
  41dbf6:	jg     0x41dbd0
  41dbf8:	add    rsp,0x20
  41dbfc:	pop    rbx
  41dbfd:	pop    rsi
  41dbfe:	pop    rdi
  41dbff:	pop    rbp
  41dc00:	pop    r12
  41dc02:	ret    
  41dc03:	mov    eax,DWORD PTR [rbx+0x10]
  41dc06:	add    eax,esi
  41dc08:	mov    DWORD PTR [rbx+0x10],eax
  41dc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc10:	mov    rdx,rbx
  41dc13:	mov    ecx,0x30
  41dc18:	call   0x41d4d0
  41dc1d:	add    esi,0x1
  41dc20:	jne    0x41dc10
  41dc22:	jmp    0x41dbeb
  41dc24:	mov    DWORD PTR [rbx+0xc],0x0
  41dc2b:	jmp    0x41d9ad
  41dc30:	mov    eax,DWORD PTR [rbx+0x10]
  41dc33:	test   eax,eax
  41dc35:	jle    0x41dc41
  41dc37:	mov    rcx,rbx
  41dc3a:	call   0x41d800
  41dc3f:	jmp    0x41dbeb
  41dc41:	test   BYTE PTR [rbx+0x9],0x8
  41dc45:	jne    0x41dc37
  41dc47:	jmp    0x41db64
  41dc4c:	nop    DWORD PTR [rax+0x0]
  41dc50:	push   rsi
  41dc51:	push   rbx
  41dc52:	sub    rsp,0x68
  41dc56:	mov    r8d,DWORD PTR [rdx+0x10]
  41dc5a:	fld    TBYTE PTR [rcx]
  41dc5c:	mov    rbx,rdx
  41dc5f:	test   r8d,r8d
  41dc62:	js     0x41dd00
  41dc68:	lea    rdx,[rsp+0x30]
  41dc6d:	lea    r9,[rsp+0x4c]
  41dc72:	mov    ecx,0x3
  41dc77:	fstp   TBYTE PTR [rsp+0x50]
  41dc7b:	mov    rax,QWORD PTR [rsp+0x50]
  41dc80:	mov    QWORD PTR [rsp+0x30],rax
  41dc85:	mov    rax,QWORD PTR [rsp+0x58]
  41dc8a:	mov    QWORD PTR [rsp+0x38],rax
  41dc8f:	lea    rax,[rsp+0x48]
  41dc94:	mov    QWORD PTR [rsp+0x20],rax
  41dc99:	call   0x41d3d0
  41dc9e:	mov    r8d,DWORD PTR [rsp+0x4c]
  41dca3:	mov    rsi,rax
  41dca6:	cmp    r8d,0xffff8000
  41dcad:	je     0x41dd12
  41dcaf:	mov    ecx,DWORD PTR [rsp+0x48]
  41dcb3:	mov    rdx,rax
  41dcb6:	mov    r9,rbx
  41dcb9:	call   0x41d8f0
  41dcbe:	mov    eax,DWORD PTR [rbx+0xc]
  41dcc1:	lea    edx,[rax-0x1]
  41dcc4:	test   eax,eax
  41dcc6:	mov    DWORD PTR [rbx+0xc],edx
  41dcc9:	jle    0x41dcee
  41dccb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcd0:	mov    rdx,rbx
  41dcd3:	mov    ecx,0x20
  41dcd8:	call   0x41d4d0
  41dcdd:	mov    r8d,DWORD PTR [rbx+0xc]
  41dce1:	lea    r9d,[r8-0x1]
  41dce5:	test   r8d,r8d
  41dce8:	mov    DWORD PTR [rbx+0xc],r9d
  41dcec:	jg     0x41dcd0
  41dcee:	mov    rcx,rsi
  41dcf1:	call   0x41f6e0
  41dcf6:	nop
  41dcf7:	add    rsp,0x68
  41dcfb:	pop    rbx
  41dcfc:	pop    rsi
  41dcfd:	ret    
  41dcfe:	xchg   ax,ax
  41dd00:	mov    DWORD PTR [rdx+0x10],0x6
  41dd07:	mov    r8d,0x6
  41dd0d:	jmp    0x41dc68
  41dd12:	mov    ecx,DWORD PTR [rsp+0x48]
  41dd16:	mov    r8,rbx
  41dd19:	mov    rdx,rax
  41dd1c:	call   0x41d760
  41dd21:	mov    rcx,rsi
  41dd24:	call   0x41f6e0
  41dd29:	nop
  41dd2a:	add    rsp,0x68
  41dd2e:	pop    rbx
  41dd2f:	pop    rsi
  41dd30:	ret    
  41dd31:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd40:	push   rbp
  41dd41:	push   r13
  41dd43:	push   r12
  41dd45:	push   rdi
  41dd46:	push   rsi
  41dd47:	push   rbx
  41dd48:	sub    rsp,0x28
  41dd4c:	lea    rbp,[rsp+0x80]
  41dd54:	mov    ebx,DWORD PTR [rdx+0x10]
  41dd57:	mov    r11d,DWORD PTR [rdx+0x8]
  41dd5b:	mov    r8d,0x0
  41dd61:	mov    rsi,rdx
  41dd64:	test   ebx,ebx
  41dd66:	cmovns r8d,ebx
  41dd6a:	add    r8d,0x17
  41dd6e:	test   r11d,0x1000
  41dd75:	je     0x41dd82
  41dd77:	cmp    WORD PTR [rdx+0x20],0x0
  41dd7c:	jne    0x41df72
  41dd82:	movsxd r13,DWORD PTR [rsi+0xc]
  41dd86:	movsxd rax,r8d
  41dd89:	cmp    r8d,r13d
  41dd8c:	cmovl  rax,r13
  41dd90:	add    rax,0x1e
  41dd94:	and    rax,0xfffffffffffffff0
  41dd98:	call   0x41c880
  41dd9d:	sub    rsp,rax
  41dda0:	test   r11b,0x80
  41dda4:	lea    r12,[rsp+0x20]
  41dda9:	je     0x41ddbc
  41ddab:	test   rcx,rcx
  41ddae:	js     0x41e000
  41ddb4:	and    r11b,0x7f
  41ddb8:	mov    DWORD PTR [rsi+0x8],r11d
  41ddbc:	test   rcx,rcx
  41ddbf:	je     0x41e008
  41ddc5:	mov    r10d,r11d
  41ddc8:	mov    r8,r12
  41ddcb:	movabs r9,0xcccccccccccccccd
  41ddd5:	and    r10d,0x1000
  41dddc:	jmp    0x41de13
  41ddde:	xchg   ax,ax
  41dde0:	cmp    r12,rdi
  41dde3:	je     0x41de10
  41dde5:	test   r10d,r10d
  41dde8:	je     0x41de10
  41ddea:	cmp    WORD PTR [rsi+0x20],0x0
  41ddef:	je     0x41de10
  41ddf1:	mov    rax,rdi
  41ddf4:	sub    rax,r12
  41ddf7:	cqo    
  41ddf9:	shr    rdx,0x3e
  41ddfd:	add    rax,rdx
  41de00:	and    eax,0x3
  41de03:	sub    rax,rdx
  41de06:	cmp    rax,0x3
  41de0a:	je     0x41df50
  41de10:	mov    r8,rdi
  41de13:	mov    rax,rcx
  41de16:	lea    rdi,[r8+0x1]
  41de1a:	mul    r9
  41de1d:	shr    rdx,0x3
  41de21:	lea    rax,[rdx+rdx*4]
  41de25:	add    rax,rax
  41de28:	sub    rcx,rax
  41de2b:	add    ecx,0x30
  41de2e:	test   rdx,rdx
  41de31:	mov    BYTE PTR [r8],cl
  41de34:	mov    rcx,rdx
  41de37:	jne    0x41dde0
  41de39:	test   ebx,ebx
  41de3b:	jle    0x41de75
  41de3d:	mov    rax,r12
  41de40:	sub    rax,rdi
  41de43:	add    eax,ebx
  41de45:	test   eax,eax
  41de47:	jle    0x41de75
  41de49:	sub    eax,0x1
  41de4c:	mov    rdx,rax
  41de4f:	lea    rcx,[rdi+rax*1+0x1]
  41de54:	mov    rax,rdi
  41de57:	nop    WORD PTR [rax+rax*1+0x0]
  41de60:	add    rax,0x1
  41de64:	mov    BYTE PTR [rax-0x1],0x30
  41de68:	cmp    rax,rcx
  41de6b:	jne    0x41de60
  41de6d:	movsxd rax,edx
  41de70:	lea    rdi,[rdi+rax*1+0x1]
  41de75:	cmp    r12,rdi
  41de78:	jne    0x41de85
  41de7a:	test   ebx,ebx
  41de7c:	je     0x41de85
  41de7e:	mov    BYTE PTR [rdi],0x30
  41de81:	add    rdi,0x1
  41de85:	test   r13d,r13d
  41de88:	jle    0x41deee
  41de8a:	mov    rax,r12
  41de8d:	sub    rax,rdi
  41de90:	add    r13d,eax
  41de93:	test   r13d,r13d
  41de96:	mov    DWORD PTR [rsi+0xc],r13d
  41de9a:	jle    0x41deee
  41de9c:	test   r11d,0x1c0
  41dea3:	je     0x41dead
  41dea5:	sub    r13d,0x1
  41dea9:	mov    DWORD PTR [rsi+0xc],r13d
  41dead:	test   ebx,ebx
  41deaf:	js     0x41dfb0
  41deb5:	test   r11d,0x400
  41debc:	jne    0x41deee
  41debe:	mov    eax,DWORD PTR [rsi+0xc]
  41dec1:	lea    edx,[rax-0x1]
  41dec4:	test   eax,eax
  41dec6:	mov    DWORD PTR [rsi+0xc],edx
  41dec9:	jle    0x41deee
  41decb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ded0:	mov    rdx,rsi
  41ded3:	mov    ecx,0x20
  41ded8:	call   0x41d4d0
  41dedd:	mov    eax,DWORD PTR [rsi+0xc]
  41dee0:	lea    edx,[rax-0x1]
  41dee3:	test   eax,eax
  41dee5:	mov    DWORD PTR [rsi+0xc],edx
  41dee8:	jg     0x41ded0
  41deea:	mov    r11d,DWORD PTR [rsi+0x8]
  41deee:	test   r11b,0x80
  41def2:	je     0x41df60
  41def4:	lea    rbx,[rdi+0x1]
  41def8:	mov    BYTE PTR [rdi],0x2d
  41defb:	cmp    r12,rbx
  41defe:	jae    0x41df2e
  41df00:	sub    rbx,0x1
  41df04:	movsx  ecx,BYTE PTR [rbx]
  41df07:	mov    rdx,rsi
  41df0a:	call   0x41d4d0
  41df0f:	cmp    rbx,r12
  41df12:	jne    0x41df00
  41df14:	mov    eax,DWORD PTR [rsi+0xc]
  41df17:	lea    edx,[rax-0x1]
  41df1a:	test   eax,eax
  41df1c:	mov    DWORD PTR [rsi+0xc],edx
  41df1f:	jle    0x41df3b
  41df21:	mov    rdx,rsi
  41df24:	mov    ecx,0x20
  41df29:	call   0x41d4d0
  41df2e:	mov    eax,DWORD PTR [rsi+0xc]
  41df31:	lea    edx,[rax-0x1]
  41df34:	test   eax,eax
  41df36:	mov    DWORD PTR [rsi+0xc],edx
  41df39:	jg     0x41df21
  41df3b:	lea    rsp,[rbp-0x58]
  41df3f:	pop    rbx
  41df40:	pop    rsi
  41df41:	pop    rdi
  41df42:	pop    r12
  41df44:	pop    r13
  41df46:	pop    rbp
  41df47:	ret    
  41df48:	nop    DWORD PTR [rax+rax*1+0x0]
  41df50:	lea    rdi,[r8+0x2]
  41df54:	mov    BYTE PTR [r8+0x1],0x2c
  41df59:	jmp    0x41de10
  41df5e:	xchg   ax,ax
  41df60:	test   r11d,0x100
  41df67:	je     0x41df90
  41df69:	lea    rbx,[rdi+0x1]
  41df6d:	mov    BYTE PTR [rdi],0x2b
  41df70:	jmp    0x41defb
  41df72:	mov    eax,r8d
  41df75:	mov    edx,0x55555556
  41df7a:	imul   edx
  41df7c:	mov    eax,r8d
  41df7f:	sar    eax,0x1f
  41df82:	sub    edx,eax
  41df84:	add    r8d,edx
  41df87:	jmp    0x41dd82
  41df8c:	nop    DWORD PTR [rax+0x0]
  41df90:	and    r11d,0x40
  41df94:	mov    rbx,rdi
  41df97:	je     0x41defb
  41df9d:	add    rbx,0x1
  41dfa1:	mov    BYTE PTR [rdi],0x20
  41dfa4:	jmp    0x41defb
  41dfa9:	nop    DWORD PTR [rax+0x0]
  41dfb0:	mov    eax,r11d
  41dfb3:	and    eax,0x600
  41dfb8:	cmp    eax,0x200
  41dfbd:	jne    0x41deb5
  41dfc3:	mov    eax,DWORD PTR [rsi+0xc]
  41dfc6:	lea    ecx,[rax-0x1]
  41dfc9:	test   eax,eax
  41dfcb:	mov    DWORD PTR [rsi+0xc],ecx
  41dfce:	jle    0x41deee
  41dfd4:	lea    rdx,[rdi+rcx*1+0x1]
  41dfd9:	mov    rax,rdi
  41dfdc:	nop    DWORD PTR [rax+0x0]
  41dfe0:	add    rax,0x1
  41dfe4:	mov    BYTE PTR [rax-0x1],0x30
  41dfe8:	cmp    rax,rdx
  41dfeb:	jne    0x41dfe0
  41dfed:	lea    rdi,[rdi+rcx*1+0x1]
  41dff2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41dff9:	jmp    0x41deee
  41dffe:	xchg   ax,ax
  41e000:	neg    rcx
  41e003:	jmp    0x41ddbc
  41e008:	mov    rdi,r12
  41e00b:	jmp    0x41de39
  41e010:	push   rdi
  41e011:	push   rsi
  41e012:	push   rbx
  41e013:	sub    rsp,0x20
  41e017:	mov    rsi,r9
  41e01a:	lea    r9d,[r8-0x1]
  41e01e:	mov    r8d,0x66666667
  41e024:	mov    r10,rdx
  41e027:	mov    eax,r9d
  41e02a:	movsxd rbx,r9d
  41e02d:	sar    r9d,0x1f
  41e031:	imul   r8d
  41e034:	sar    edx,0x2
  41e037:	mov    r8d,edx
  41e03a:	sub    r8d,r9d
  41e03d:	mov    r9d,0x1
  41e043:	je     0x41e06b
  41e045:	mov    r11d,0x66666667
  41e04b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e050:	mov    eax,r8d
  41e053:	sar    r8d,0x1f
  41e057:	add    r9d,0x1
  41e05b:	imul   r11d
  41e05e:	mov    eax,edx
  41e060:	sar    eax,0x2
  41e063:	sub    eax,r8d
  41e066:	mov    r8d,eax
  41e069:	jne    0x41e050
  41e06b:	mov    edi,DWORD PTR [rsi+0x2c]
  41e06e:	mov    eax,DWORD PTR [rsi+0xc]
  41e071:	cmp    r9d,edi
  41e074:	cmovge edi,r9d
  41e078:	lea    edx,[rdi+0x2]
  41e07b:	cmp    eax,edx
  41e07d:	jg     0x41e0d2
  41e07f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41e086:	mov    r9,rsi
  41e089:	mov    rdx,r10
  41e08c:	mov    r8d,0x1
  41e092:	call   0x41d8f0
  41e097:	mov    ecx,DWORD PTR [rsi+0x8]
  41e09a:	mov    eax,DWORD PTR [rsi+0x2c]
  41e09d:	mov    rdx,rsi
  41e0a0:	mov    DWORD PTR [rsi+0x10],eax
  41e0a3:	mov    eax,ecx
  41e0a5:	and    ecx,0x20
  41e0a8:	or     eax,0x1c0
  41e0ad:	or     ecx,0x45
  41e0b0:	mov    DWORD PTR [rsi+0x8],eax
  41e0b3:	call   0x41d4d0
  41e0b8:	lea    r9d,[rdi+0x1]
  41e0bc:	add    DWORD PTR [rsi+0xc],r9d
  41e0c0:	mov    rdx,rsi
  41e0c3:	mov    rcx,rbx
  41e0c6:	add    rsp,0x20
  41e0ca:	pop    rbx
  41e0cb:	pop    rsi
  41e0cc:	pop    rdi
  41e0cd:	jmp    0x41dd40
  41e0d2:	sub    eax,edx
  41e0d4:	mov    DWORD PTR [rsi+0xc],eax
  41e0d7:	jmp    0x41e086
  41e0d9:	nop    DWORD PTR [rax+0x0]
  41e0e0:	push   rsi
  41e0e1:	push   rbx
  41e0e2:	sub    rsp,0x68
  41e0e6:	mov    eax,DWORD PTR [rdx+0x10]
  41e0e9:	fld    TBYTE PTR [rcx]
  41e0eb:	mov    rbx,rdx
  41e0ee:	test   eax,eax
  41e0f0:	lea    r8d,[rax+0x1]
  41e0f4:	js     0x41e160
  41e0f6:	lea    rdx,[rsp+0x30]
  41e0fb:	lea    r9,[rsp+0x4c]
  41e100:	mov    ecx,0x2
  41e105:	fstp   TBYTE PTR [rsp+0x50]
  41e109:	mov    rax,QWORD PTR [rsp+0x50]
  41e10e:	mov    QWORD PTR [rsp+0x30],rax
  41e113:	mov    rax,QWORD PTR [rsp+0x58]
  41e118:	mov    QWORD PTR [rsp+0x38],rax
  41e11d:	lea    rax,[rsp+0x48]
  41e122:	mov    QWORD PTR [rsp+0x20],rax
  41e127:	call   0x41d3d0
  41e12c:	mov    r8d,DWORD PTR [rsp+0x4c]
  41e131:	mov    rsi,rax
  41e134:	cmp    r8d,0xffff8000
  41e13b:	je     0x41e170
  41e13d:	mov    ecx,DWORD PTR [rsp+0x48]
  41e141:	mov    r9,rbx
  41e144:	mov    rdx,rax
  41e147:	call   0x41e010
  41e14c:	mov    rcx,rsi
  41e14f:	call   0x41f6e0
  41e154:	nop
  41e155:	add    rsp,0x68
  41e159:	pop    rbx
  41e15a:	pop    rsi
  41e15b:	ret    
  41e15c:	nop    DWORD PTR [rax+0x0]
  41e160:	mov    DWORD PTR [rdx+0x10],0x6
  41e167:	mov    r8d,0x7
  41e16d:	jmp    0x41e0f6
  41e16f:	nop
  41e170:	mov    ecx,DWORD PTR [rsp+0x48]
  41e174:	mov    r8,rbx
  41e177:	mov    rdx,rax
  41e17a:	call   0x41d760
  41e17f:	mov    rcx,rsi
  41e182:	call   0x41f6e0
  41e187:	nop
  41e188:	add    rsp,0x68
  41e18c:	pop    rbx
  41e18d:	pop    rsi
  41e18e:	ret    
  41e18f:	nop
  41e190:	push   rsi
  41e191:	push   rbx
  41e192:	sub    rsp,0x78
  41e196:	mov    r8d,DWORD PTR [rdx+0x10]
  41e19a:	fld    TBYTE PTR [rcx]
  41e19c:	mov    rbx,rdx
  41e19f:	test   r8d,r8d
  41e1a2:	js     0x41e2e0
  41e1a8:	je     0x41e2c0
  41e1ae:	lea    rdx,[rsp+0x40]
  41e1b3:	lea    r9,[rsp+0x5c]
  41e1b8:	mov    ecx,0x2
  41e1bd:	fstp   TBYTE PTR [rsp+0x60]
  41e1c1:	mov    rax,QWORD PTR [rsp+0x60]
  41e1c6:	mov    QWORD PTR [rsp+0x40],rax
  41e1cb:	mov    rax,QWORD PTR [rsp+0x68]
  41e1d0:	mov    QWORD PTR [rsp+0x48],rax
  41e1d5:	lea    rax,[rsp+0x58]
  41e1da:	mov    QWORD PTR [rsp+0x20],rax
  41e1df:	call   0x41d3d0
  41e1e4:	mov    r8d,DWORD PTR [rsp+0x5c]
  41e1e9:	mov    rsi,rax
  41e1ec:	cmp    r8d,0xffff8000
  41e1f3:	je     0x41e300
  41e1f9:	cmp    r8d,0xfffffffd
  41e1fd:	jl     0x41e280
  41e203:	mov    eax,DWORD PTR [rbx+0x10]
  41e206:	cmp    r8d,eax
  41e209:	jg     0x41e280
  41e20b:	test   BYTE PTR [rbx+0x9],0x8
  41e20f:	jne    0x41e2f2
  41e215:	mov    rcx,rsi
  41e218:	mov    DWORD PTR [rsp+0x3c],r8d
  41e21d:	call   0x421d98
  41e222:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e227:	sub    eax,r8d
  41e22a:	test   eax,eax
  41e22c:	mov    DWORD PTR [rbx+0x10],eax
  41e22f:	js     0x41e311
  41e235:	mov    ecx,DWORD PTR [rsp+0x58]
  41e239:	mov    rdx,rsi
  41e23c:	mov    r9,rbx
  41e23f:	call   0x41d8f0
  41e244:	mov    eax,DWORD PTR [rbx+0xc]
  41e247:	lea    edx,[rax-0x1]
  41e24a:	test   eax,eax
  41e24c:	mov    DWORD PTR [rbx+0xc],edx
  41e24f:	jle    0x41e2ad
  41e251:	mov    rdx,rbx
  41e254:	mov    ecx,0x20
  41e259:	call   0x41d4d0
  41e25e:	mov    r8d,DWORD PTR [rbx+0xc]
  41e262:	lea    r9d,[r8-0x1]
  41e266:	test   r8d,r8d
  41e269:	mov    DWORD PTR [rbx+0xc],r9d
  41e26d:	jg     0x41e251
  41e26f:	mov    rcx,rsi
  41e272:	call   0x41f6e0
  41e277:	nop
  41e278:	add    rsp,0x78
  41e27c:	pop    rbx
  41e27d:	pop    rsi
  41e27e:	ret    
  41e27f:	nop
  41e280:	test   BYTE PTR [rbx+0x9],0x8
  41e284:	jne    0x41e2d2
  41e286:	mov    rcx,rsi
  41e289:	mov    DWORD PTR [rsp+0x3c],r8d
  41e28e:	call   0x421d98
  41e293:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e298:	sub    eax,0x1
  41e29b:	mov    DWORD PTR [rbx+0x10],eax
  41e29e:	mov    ecx,DWORD PTR [rsp+0x58]
  41e2a2:	mov    r9,rbx
  41e2a5:	mov    rdx,rsi
  41e2a8:	call   0x41e010
  41e2ad:	mov    rcx,rsi
  41e2b0:	call   0x41f6e0
  41e2b5:	nop
  41e2b6:	add    rsp,0x78
  41e2ba:	pop    rbx
  41e2bb:	pop    rsi
  41e2bc:	ret    
  41e2bd:	nop    DWORD PTR [rax]
  41e2c0:	mov    DWORD PTR [rdx+0x10],0x1
  41e2c7:	mov    r8d,0x1
  41e2cd:	jmp    0x41e1ae
  41e2d2:	sub    DWORD PTR [rbx+0x10],0x1
  41e2d6:	jmp    0x41e29e
  41e2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2e0:	mov    DWORD PTR [rdx+0x10],0x6
  41e2e7:	mov    r8d,0x6
  41e2ed:	jmp    0x41e1ae
  41e2f2:	sub    eax,r8d
  41e2f5:	mov    DWORD PTR [rbx+0x10],eax
  41e2f8:	jmp    0x41e235
  41e2fd:	nop    DWORD PTR [rax]
  41e300:	mov    ecx,DWORD PTR [rsp+0x58]
  41e304:	mov    r8,rbx
  41e307:	mov    rdx,rax
  41e30a:	call   0x41d760
  41e30f:	jmp    0x41e2ad
  41e311:	mov    edx,DWORD PTR [rbx+0xc]
  41e314:	test   edx,edx
  41e316:	jle    0x41e235
  41e31c:	add    eax,edx
  41e31e:	mov    DWORD PTR [rbx+0xc],eax
  41e321:	jmp    0x41e235
  41e326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e330:	push   rbp
  41e331:	push   r14
  41e333:	push   r13
  41e335:	push   r12
  41e337:	push   rdi
  41e338:	push   rsi
  41e339:	push   rbx
  41e33a:	mov    rbp,rsp
  41e33d:	sub    rsp,0x20
  41e341:	mov    r10d,0x12
  41e347:	mov    eax,0x18
  41e34c:	cmp    ecx,0x6f
  41e34f:	mov    rbx,r8
  41e352:	mov    r8d,DWORD PTR [r8+0x10]
  41e356:	mov    r11d,ecx
  41e359:	setne  cl
  41e35c:	mov    edi,DWORD PTR [rbx+0x8]
  41e35f:	movzx  ecx,cl
  41e362:	cmovne eax,r10d
  41e366:	mov    r10b,0x0
  41e369:	add    ecx,0x3
  41e36c:	test   r8d,r8d
  41e36f:	mov    r9,rdx
  41e372:	cmovns r10d,r8d
  41e376:	add    r10d,eax
  41e379:	test   edi,0x1000
  41e37f:	je     0x41e38c
  41e381:	cmp    WORD PTR [rbx+0x20],0x0
  41e386:	jne    0x41e553
  41e38c:	movsxd r12,DWORD PTR [rbx+0xc]
  41e390:	movsxd rax,r10d
  41e393:	cmp    r10d,r12d
  41e396:	cmovl  rax,r12
  41e39a:	add    rax,0x1e
  41e39e:	and    rax,0xfffffffffffffff0
  41e3a2:	call   0x41c880
  41e3a7:	xor    edx,edx
  41e3a9:	sub    rsp,rax
  41e3ac:	cmp    r11d,0x6f
  41e3b0:	lea    rsi,[rsp+0x20]
  41e3b5:	setne  dl
  41e3b8:	test   r9,r9
  41e3bb:	lea    edx,[rdx*8+0x7]
  41e3c2:	mov    r10,rsi
  41e3c5:	je     0x41e672
  41e3cb:	mov    r13d,r11d
  41e3ce:	and    r13d,0x20
  41e3d2:	jmp    0x41e3e0
  41e3d4:	shr    r9,cl
  41e3d7:	mov    BYTE PTR [r10-0x1],r14b
  41e3db:	test   r9,r9
  41e3de:	je     0x41e405
  41e3e0:	mov    eax,edx
  41e3e2:	add    r10,0x1
  41e3e6:	and    eax,r9d
  41e3e9:	lea    r14d,[rax+0x30]
  41e3ed:	cmp    r14b,0x39
  41e3f1:	jbe    0x41e3d4
  41e3f3:	add    eax,0x37
  41e3f6:	shr    r9,cl
  41e3f9:	or     eax,r13d
  41e3fc:	test   r9,r9
  41e3ff:	mov    BYTE PTR [r10-0x1],al
  41e403:	jne    0x41e3e0
  41e405:	cmp    rsi,r10
  41e408:	je     0x41e672
  41e40e:	test   r8d,r8d
  41e411:	jle    0x41e5d2
  41e417:	mov    rax,rsi
  41e41a:	sub    rax,r10
  41e41d:	add    eax,r8d
  41e420:	test   eax,eax
  41e422:	jle    0x41e5d2
  41e428:	sub    eax,0x1
  41e42b:	mov    rdx,rax
  41e42e:	lea    rcx,[r10+rax*1+0x1]
  41e433:	mov    rax,r10
  41e436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e440:	add    rax,0x1
  41e444:	mov    BYTE PTR [rax-0x1],0x30
  41e448:	cmp    rax,rcx
  41e44b:	jne    0x41e440
  41e44d:	movsxd rax,edx
  41e450:	lea    r10,[r10+rax*1+0x1]
  41e455:	cmp    rsi,r10
  41e458:	jne    0x41e470
  41e45a:	test   r8d,r8d
  41e45d:	je     0x41e470
  41e45f:	mov    BYTE PTR [r10],0x30
  41e463:	add    r10,0x1
  41e467:	nop    WORD PTR [rax+rax*1+0x0]
  41e470:	mov    rax,r10
  41e473:	sub    rax,rsi
  41e476:	cmp    r12d,eax
  41e479:	jle    0x41e5a0
  41e47f:	sub    r12d,eax
  41e482:	test   r12d,r12d
  41e485:	mov    DWORD PTR [rbx+0xc],r12d
  41e489:	jle    0x41e6d7
  41e48f:	cmp    r11d,0x6f
  41e493:	mov    edx,DWORD PTR [rbx+0x8]
  41e496:	je     0x41e660
  41e49c:	test   dh,0x8
  41e49f:	je     0x41e620
  41e4a5:	lea    r13d,[r12-0x2]
  41e4aa:	test   r13d,r13d
  41e4ad:	jle    0x41e4b8
  41e4af:	test   r8d,r8d
  41e4b2:	js     0x41e56d
  41e4b8:	test   r13d,r13d
  41e4bb:	mov    BYTE PTR [r10],r11b
  41e4be:	lea    rdi,[r10+0x2]
  41e4c2:	mov    BYTE PTR [r10+0x1],0x30
  41e4c7:	jle    0x41e5c8
  41e4cd:	and    dh,0x4
  41e4d0:	jne    0x41e5f3
  41e4d6:	lea    r14d,[r13-0x1]
  41e4da:	mov    r12d,r14d
  41e4dd:	nop    DWORD PTR [rax]
  41e4e0:	sub    r12d,0x1
  41e4e4:	mov    rdx,rbx
  41e4e7:	mov    ecx,0x20
  41e4ec:	call   0x41d4d0
  41e4f1:	lea    eax,[r12+0x1]
  41e4f6:	test   eax,eax
  41e4f8:	jg     0x41e4e0
  41e4fa:	test   r14d,r14d
  41e4fd:	lea    r13d,[r14-0x1]
  41e501:	mov    r12d,0x0
  41e507:	cmovns r12d,r14d
  41e50b:	sub    r13d,r12d
  41e50e:	cmp    rsi,rdi
  41e511:	jb     0x41e600
  41e517:	nop    WORD PTR [rax+rax*1+0x0]
  41e520:	test   r13d,r13d
  41e523:	lea    esi,[r13-0x1]
  41e527:	jle    0x41e545
  41e529:	nop    DWORD PTR [rax+0x0]
  41e530:	mov    rdx,rbx
  41e533:	mov    ecx,0x20
  41e538:	sub    esi,0x1
  41e53b:	call   0x41d4d0
  41e540:	cmp    esi,0xffffffff
  41e543:	jne    0x41e530
  41e545:	mov    rsp,rbp
  41e548:	pop    rbx
  41e549:	pop    rsi
  41e54a:	pop    rdi
  41e54b:	pop    r12
  41e54d:	pop    r13
  41e54f:	pop    r14
  41e551:	pop    rbp
  41e552:	ret    
  41e553:	mov    eax,r10d
  41e556:	mov    edx,0x55555556
  41e55b:	imul   edx
  41e55d:	mov    eax,r10d
  41e560:	sar    eax,0x1f
  41e563:	sub    edx,eax
  41e565:	add    r10d,edx
  41e568:	jmp    0x41e38c
  41e56d:	mov    eax,edx
  41e56f:	and    eax,0x600
  41e574:	cmp    eax,0x200
  41e579:	je     0x41e680
  41e57f:	mov    r12d,r13d
  41e582:	test   dh,0x8
  41e585:	mov    r13d,r12d
  41e588:	mov    rdi,r10
  41e58b:	je     0x41e4cd
  41e591:	mov    r13d,r12d
  41e594:	jmp    0x41e4b8
  41e599:	nop    DWORD PTR [rax+0x0]
  41e5a0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41e5a7:	mov    r13d,0xffffffff
  41e5ad:	cmp    r11d,0x6f
  41e5b1:	je     0x41e5c5
  41e5b3:	mov    edx,DWORD PTR [rbx+0x8]
  41e5b6:	mov    eax,edx
  41e5b8:	and    eax,0x800
  41e5bd:	test   eax,eax
  41e5bf:	jne    0x41e4b8
  41e5c5:	mov    rdi,r10
  41e5c8:	cmp    rsi,rdi
  41e5cb:	jb     0x41e600
  41e5cd:	jmp    0x41e545
  41e5d2:	cmp    r11d,0x6f
  41e5d6:	jne    0x41e455
  41e5dc:	test   BYTE PTR [rbx+0x9],0x8
  41e5e0:	je     0x41e455
  41e5e6:	mov    BYTE PTR [r10],0x30
  41e5ea:	add    r10,0x1
  41e5ee:	jmp    0x41e455
  41e5f3:	cmp    rsi,rdi
  41e5f6:	jae    0x41e6df
  41e5fc:	nop    DWORD PTR [rax+0x0]
  41e600:	sub    rdi,0x1
  41e604:	movsx  ecx,BYTE PTR [rdi]
  41e607:	mov    rdx,rbx
  41e60a:	call   0x41d4d0
  41e60f:	cmp    rsi,rdi
  41e612:	jb     0x41e600
  41e614:	jmp    0x41e520
  41e619:	nop    DWORD PTR [rax+0x0]
  41e620:	test   r8d,r8d
  41e623:	jns    0x41e582
  41e629:	mov    eax,edx
  41e62b:	and    eax,0x600
  41e630:	cmp    eax,0x200
  41e635:	je     0x41e6ce
  41e63b:	cmp    r11d,0x6f
  41e63f:	jne    0x41e582
  41e645:	and    dh,0x4
  41e648:	jne    0x41e66a
  41e64a:	lea    r14d,[r12-0x1]
  41e64f:	mov    rdi,r10
  41e652:	jmp    0x41e4da
  41e657:	nop    WORD PTR [rax+rax*1+0x0]
  41e660:	test   r8d,r8d
  41e663:	js     0x41e629
  41e665:	and    dh,0x4
  41e668:	je     0x41e64a
  41e66a:	mov    rdi,r10
  41e66d:	mov    r13d,r12d
  41e670:	jmp    0x41e60f
  41e672:	and    edi,0xfffff7ff
  41e678:	mov    DWORD PTR [rbx+0x8],edi
  41e67b:	jmp    0x41e40e
  41e680:	lea    r8d,[r12-0x3]
  41e685:	mov    r12d,r8d
  41e688:	mov    eax,r12d
  41e68b:	lea    rcx,[r10+rax*1+0x1]
  41e690:	mov    rax,r10
  41e693:	add    rax,0x1
  41e697:	mov    BYTE PTR [rax-0x1],0x30
  41e69b:	cmp    rax,rcx
  41e69e:	jne    0x41e693
  41e6a0:	movsxd rax,r8d
  41e6a3:	cmp    r11d,0x6f
  41e6a7:	lea    r10,[r10+rax*1+0x1]
  41e6ac:	je     0x41e6c0
  41e6ae:	mov    eax,edx
  41e6b0:	mov    r13d,0xffffffff
  41e6b6:	and    eax,0x800
  41e6bb:	jmp    0x41e5bd
  41e6c0:	mov    rdi,r10
  41e6c3:	mov    r13d,0xffffffff
  41e6c9:	jmp    0x41e5c8
  41e6ce:	sub    r12d,0x1
  41e6d2:	mov    r8d,r12d
  41e6d5:	jmp    0x41e688
  41e6d7:	mov    r13d,r12d
  41e6da:	jmp    0x41e5ad
  41e6df:	lea    esi,[r13-0x1]
  41e6e3:	jmp    0x41e530
  41e6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6f0:	push   r13
  41e6f2:	push   r12
  41e6f4:	push   rbp
  41e6f5:	push   rdi
  41e6f6:	push   rsi
  41e6f7:	push   rbx
  41e6f8:	sub    rsp,0x68
  41e6fc:	mov    r9,QWORD PTR [rcx]
  41e6ff:	mov    r10d,DWORD PTR [rcx+0x8]
  41e703:	mov    rbx,rdx
  41e706:	mov    rax,r9
  41e709:	mov    QWORD PTR [rsp+0x30],r9
  41e70e:	mov    DWORD PTR [rsp+0x38],r10d
  41e713:	shr    rax,0x20
  41e717:	mov    r8,r10
  41e71a:	and    eax,0x7fffffff
  41e71f:	or     r9d,eax
  41e722:	lea    eax,[r10+r10*1]
  41e726:	mov    edx,r9d
  41e729:	neg    edx
  41e72b:	and    eax,0xfffe
  41e730:	or     edx,r9d
  41e733:	shr    edx,0x1f
  41e736:	or     edx,eax
  41e738:	mov    eax,0xfffe
  41e73d:	sub    eax,edx
  41e73f:	sar    eax,0x10
  41e742:	test   eax,eax
  41e744:	jne    0x41eb30
  41e74a:	movzx  esi,WORD PTR [rsp+0x38]
  41e74f:	mov    ecx,esi
  41e751:	and    ecx,0x8000
  41e757:	je     0x41e760
  41e759:	or     DWORD PTR [rbx+0x8],0x80
  41e760:	and    r8w,0x7fff
  41e766:	cmp    r8w,0x7fff
  41e76c:	jne    0x41e790
  41e76e:	test   r9d,r9d
  41e771:	jne    0x41e790
  41e773:	lea    rdx,[rip+0xe87a]        # 0x42cff4
  41e77a:	mov    r8,rbx
  41e77d:	call   0x41d760
  41e782:	jmp    0x41eb05
  41e787:	nop    WORD PTR [rax+rax*1+0x0]
  41e790:	and    si,0x7fff
  41e795:	jne    0x41e8c0
  41e79b:	mov    rax,QWORD PTR [rsp+0x30]
  41e7a0:	test   rax,rax
  41e7a3:	jne    0x41eb4f
  41e7a9:	mov    r9d,DWORD PTR [rbx+0x10]
  41e7ad:	cmp    r9d,0xe
  41e7b1:	jbe    0x41ebcc
  41e7b7:	xor    esi,esi
  41e7b9:	mov    r8d,DWORD PTR [rbx+0x8]
  41e7bd:	lea    rbp,[rsp+0x40]
  41e7c2:	test   r9d,r9d
  41e7c5:	jle    0x41ebdc
  41e7cb:	lea    rax,[rbp+0x1]
  41e7cf:	mov    BYTE PTR [rsp+0x40],0x2e
  41e7d4:	mov    r10d,DWORD PTR [rbx+0xc]
  41e7d8:	lea    rdi,[rax+0x1]
  41e7dc:	mov    BYTE PTR [rax],0x30
  41e7df:	mov    r12d,0x2
  41e7e5:	test   r10d,r10d
  41e7e8:	jg     0x41e9ec
  41e7ee:	xchg   ax,ax
  41e7f0:	test   r8b,0x80
  41e7f4:	jne    0x41eab0
  41e7fa:	test   r8d,0x100
  41e801:	jne    0x41eba0
  41e807:	and    r8d,0x40
  41e80b:	jne    0x41ebb2
  41e811:	mov    rdx,rbx
  41e814:	mov    ecx,0x30
  41e819:	call   0x41d4d0
  41e81e:	mov    ecx,DWORD PTR [rbx+0x8]
  41e821:	mov    rdx,rbx
  41e824:	and    ecx,0x20
  41e827:	or     ecx,0x58
  41e82a:	call   0x41d4d0
  41e82f:	mov    eax,DWORD PTR [rbx+0xc]
  41e832:	test   eax,eax
  41e834:	jle    0x41e85c
  41e836:	test   BYTE PTR [rbx+0x9],0x2
  41e83a:	je     0x41e85c
  41e83c:	sub    eax,0x1
  41e83f:	mov    DWORD PTR [rbx+0xc],eax
  41e842:	mov    rdx,rbx
  41e845:	mov    ecx,0x30
  41e84a:	call   0x41d4d0
  41e84f:	mov    eax,DWORD PTR [rbx+0xc]
  41e852:	lea    edx,[rax-0x1]
  41e855:	test   eax,eax
  41e857:	mov    DWORD PTR [rbx+0xc],edx
  41e85a:	jg     0x41e842
  41e85c:	cmp    rdi,rbp
  41e85f:	lea    r13,[rsp+0x2e]
  41e864:	ja     0x41e899
  41e866:	jmp    0x41eacf
  41e86b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e870:	movzx  eax,WORD PTR [rbx+0x20]
  41e874:	test   ax,ax
  41e877:	mov    WORD PTR [rsp+0x2e],ax
  41e87c:	je     0x41e890
  41e87e:	mov    r8,rbx
  41e881:	mov    edx,0x1
  41e886:	mov    rcx,r13
  41e889:	call   0x41d530
  41e88e:	xchg   ax,ax
  41e890:	cmp    rdi,rbp
  41e893:	je     0x41eacf
  41e899:	sub    rdi,0x1
  41e89d:	movsx  ecx,BYTE PTR [rdi]
  41e8a0:	cmp    ecx,0x2e
  41e8a3:	je     0x41eb12
  41e8a9:	cmp    ecx,0x2c
  41e8ac:	je     0x41e870
  41e8ae:	mov    rdx,rbx
  41e8b1:	call   0x41d4d0
  41e8b6:	jmp    0x41e890
  41e8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8c0:	mov    r9d,DWORD PTR [rbx+0x10]
  41e8c4:	sub    si,0x3fff
  41e8c9:	mov    rax,QWORD PTR [rsp+0x30]
  41e8ce:	cmp    r9d,0xe
  41e8d2:	ja     0x41eb7d
  41e8d8:	test   rax,rax
  41e8db:	js     0x41e8e5
  41e8dd:	nop    DWORD PTR [rax]
  41e8e0:	add    rax,rax
  41e8e3:	jns    0x41e8e0
  41e8e5:	mov    ecx,0xe
  41e8ea:	mov    edx,0x4
  41e8ef:	shr    rax,1
  41e8f2:	sub    ecx,r9d
  41e8f5:	shl    ecx,0x2
  41e8f8:	shl    rdx,cl
  41e8fb:	add    rax,rdx
  41e8fe:	js     0x41ebc4
  41e904:	add    rax,rax
  41e907:	mov    ecx,0xf
  41e90c:	sub    ecx,r9d
  41e90f:	shl    ecx,0x2
  41e912:	shr    rax,cl
  41e915:	mov    r8d,DWORD PTR [rbx+0x8]
  41e919:	lea    rbp,[rsp+0x40]
  41e91e:	mov    rdi,rbp
  41e921:	mov    r11d,r8d
  41e924:	mov    r10d,r8d
  41e927:	and    r11d,0x800
  41e92e:	and    r10d,0x20
  41e932:	jmp    0x41e963
  41e934:	mov    ecx,DWORD PTR [rbx+0x10]
  41e937:	test   ecx,ecx
  41e939:	jle    0x41e941
  41e93b:	sub    ecx,0x1
  41e93e:	mov    DWORD PTR [rbx+0x10],ecx
  41e941:	shr    rax,0x4
  41e945:	mov    r9,rdi
  41e948:	test   edx,edx
  41e94a:	je     0x41e9b4
  41e94c:	cmp    edx,0x9
  41e94f:	lea    rdi,[r9+0x1]
  41e953:	jle    0x41e9c7
  41e955:	add    edx,0x37
  41e958:	or     edx,r10d
  41e95b:	mov    BYTE PTR [r9],dl
  41e95e:	test   rax,rax
  41e961:	je     0x41e9d0
  41e963:	mov    edx,eax
  41e965:	and    edx,0xf
  41e968:	cmp    edx,eax
  41e96a:	jne    0x41e934
  41e96c:	cmp    rdi,rbp
  41e96f:	ja     0x41e982
  41e971:	test   r11d,r11d
  41e974:	jne    0x41e982
  41e976:	mov    r12d,DWORD PTR [rbx+0x10]
  41e97a:	mov    r9,rdi
  41e97d:	test   r12d,r12d
  41e980:	jle    0x41e989
  41e982:	lea    r9,[rdi+0x1]
  41e986:	mov    BYTE PTR [rdi],0x2e
  41e989:	cmp    rax,0x1
  41e98d:	jbe    0x41eb99
  41e993:	lea    ecx,[rsi-0x1]
  41e996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9a0:	shr    rax,1
  41e9a3:	mov    esi,ecx
  41e9a5:	cmp    rax,0x1
  41e9a9:	lea    ecx,[rsi-0x1]
  41e9ac:	jne    0x41e9a0
  41e9ae:	xor    al,al
  41e9b0:	test   edx,edx
  41e9b2:	jne    0x41e94c
  41e9b4:	cmp    r9,rbp
  41e9b7:	ja     0x41e9c3
  41e9b9:	mov    ecx,DWORD PTR [rbx+0x10]
  41e9bc:	mov    rdi,r9
  41e9bf:	test   ecx,ecx
  41e9c1:	js     0x41e95e
  41e9c3:	lea    rdi,[r9+0x1]
  41e9c7:	add    edx,0x30
  41e9ca:	jmp    0x41e95b
  41e9cc:	nop    DWORD PTR [rax+0x0]
  41e9d0:	cmp    rdi,rbp
  41e9d3:	je     0x41ebd3
  41e9d9:	mov    r10d,DWORD PTR [rbx+0xc]
  41e9dd:	mov    r12d,0x2
  41e9e3:	test   r10d,r10d
  41e9e6:	jle    0x41e7f0
  41e9ec:	mov    edx,DWORD PTR [rbx+0x10]
  41e9ef:	mov    rax,rdi
  41e9f2:	movsx  r11d,si
  41e9f6:	sub    rax,rbp
  41e9f9:	lea    ecx,[rdx+rax*1]
  41e9fc:	test   edx,edx
  41e9fe:	mov    edx,r8d
  41ea01:	cmovg  eax,ecx
  41ea04:	and    edx,0x1c0
  41ea0a:	mov    ecx,0x66666667
  41ea0f:	cmp    edx,0x1
  41ea12:	sbb    edx,edx
  41ea14:	lea    r9d,[rax+rdx*1+0x6]
  41ea19:	mov    eax,r11d
  41ea1c:	imul   ecx
  41ea1e:	mov    eax,r11d
  41ea21:	sar    eax,0x1f
  41ea24:	mov    ecx,edx
  41ea26:	sar    ecx,0x2
  41ea29:	sub    ecx,eax
  41ea2b:	je     0x41ea50
  41ea2d:	mov    r11d,0x66666667
  41ea33:	mov    eax,ecx
  41ea35:	sar    ecx,0x1f
  41ea38:	add    r9d,0x1
  41ea3c:	imul   r11d
  41ea3f:	add    r12d,0x1
  41ea43:	sar    edx,0x2
  41ea46:	sub    edx,ecx
  41ea48:	mov    ecx,edx
  41ea4a:	jne    0x41ea33
  41ea4c:	movsx  r12d,r12w
  41ea50:	cmp    r10d,r9d
  41ea53:	jle    0x41eb20
  41ea59:	sub    r10d,r9d
  41ea5c:	test   r8d,0x600
  41ea63:	jne    0x41eb90
  41ea69:	lea    eax,[r10-0x1]
  41ea6d:	test   r10d,r10d
  41ea70:	mov    DWORD PTR [rbx+0xc],eax
  41ea73:	jle    0x41e7f0
  41ea79:	nop    DWORD PTR [rax+0x0]
  41ea80:	mov    rdx,rbx
  41ea83:	mov    ecx,0x20
  41ea88:	call   0x41d4d0
  41ea8d:	mov    eax,DWORD PTR [rbx+0xc]
  41ea90:	lea    edx,[rax-0x1]
  41ea93:	test   eax,eax
  41ea95:	mov    DWORD PTR [rbx+0xc],edx
  41ea98:	jg     0x41ea80
  41ea9a:	mov    r8d,DWORD PTR [rbx+0x8]
  41ea9e:	test   r8b,0x80
  41eaa2:	je     0x41e7fa
  41eaa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eab0:	mov    rdx,rbx
  41eab3:	mov    ecx,0x2d
  41eab8:	call   0x41d4d0
  41eabd:	jmp    0x41e811
  41eac2:	mov    rdx,rbx
  41eac5:	mov    ecx,0x30
  41eaca:	call   0x41d4d0
  41eacf:	mov    eax,DWORD PTR [rbx+0x10]
  41ead2:	lea    edx,[rax-0x1]
  41ead5:	test   eax,eax
  41ead7:	mov    DWORD PTR [rbx+0x10],edx
  41eada:	jg     0x41eac2
  41eadc:	mov    ecx,DWORD PTR [rbx+0x8]
  41eadf:	mov    rdx,rbx
  41eae2:	and    ecx,0x20
  41eae5:	or     ecx,0x50
  41eae8:	call   0x41d4d0
  41eaed:	add    DWORD PTR [rbx+0xc],r12d
  41eaf1:	or     DWORD PTR [rbx+0x8],0x1c0
  41eaf8:	movsx  rcx,si
  41eafc:	mov    rdx,rbx
  41eaff:	call   0x41dd40
  41eb04:	nop
  41eb05:	add    rsp,0x68
  41eb09:	pop    rbx
  41eb0a:	pop    rsi
  41eb0b:	pop    rdi
  41eb0c:	pop    rbp
  41eb0d:	pop    r12
  41eb0f:	pop    r13
  41eb11:	ret    
  41eb12:	mov    rcx,rbx
  41eb15:	call   0x41d800
  41eb1a:	jmp    0x41e890
  41eb1f:	nop
  41eb20:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41eb27:	jmp    0x41e7f0
  41eb2c:	nop    DWORD PTR [rax+0x0]
  41eb30:	lea    rdx,[rip+0xe4b9]        # 0x42cff0
  41eb37:	mov    r8,rbx
  41eb3a:	xor    ecx,ecx
  41eb3c:	call   0x41d760
  41eb41:	nop
  41eb42:	add    rsp,0x68
  41eb46:	pop    rbx
  41eb47:	pop    rsi
  41eb48:	pop    rdi
  41eb49:	pop    rbp
  41eb4a:	pop    r12
  41eb4c:	pop    r13
  41eb4e:	ret    
  41eb4f:	js     0x41ebf1
  41eb55:	mov    edx,0xffffc001
  41eb5a:	nop    WORD PTR [rax+rax*1+0x0]
  41eb60:	mov    esi,edx
  41eb62:	sub    edx,0x1
  41eb65:	add    rax,rax
  41eb68:	jns    0x41eb60
  41eb6a:	mov    r9d,DWORD PTR [rbx+0x10]
  41eb6e:	cmp    r9d,0xe
  41eb72:	jbe    0x41e8e5
  41eb78:	jmp    0x41e915
  41eb7d:	test   rax,rax
  41eb80:	jne    0x41e915
  41eb86:	jmp    0x41e7b9
  41eb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb90:	mov    DWORD PTR [rbx+0xc],r10d
  41eb94:	jmp    0x41e7f0
  41eb99:	xor    eax,eax
  41eb9b:	jmp    0x41e948
  41eba0:	mov    rdx,rbx
  41eba3:	mov    ecx,0x2b
  41eba8:	call   0x41d4d0
  41ebad:	jmp    0x41e811
  41ebb2:	mov    rdx,rbx
  41ebb5:	mov    ecx,0x20
  41ebba:	call   0x41d4d0
  41ebbf:	jmp    0x41e811
  41ebc4:	add    esi,0x1
  41ebc7:	jmp    0x41e907
  41ebcc:	xor    eax,eax
  41ebce:	jmp    0x41e8e0
  41ebd3:	mov    r9d,DWORD PTR [rbx+0x10]
  41ebd7:	jmp    0x41e7c2
  41ebdc:	test   r8d,0x800
  41ebe3:	mov    rax,rbp
  41ebe6:	je     0x41e7d4
  41ebec:	jmp    0x41e7cb
  41ebf1:	mov    esi,0xffffc002
  41ebf6:	jmp    0x41eb6a
  41ebfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec00:	push   r15
  41ec02:	push   r14
  41ec04:	push   r13
  41ec06:	push   r12
  41ec08:	push   rbp
  41ec09:	push   rdi
  41ec0a:	push   rsi
  41ec0b:	push   rbx
  41ec0c:	sub    rsp,0xb8
  41ec13:	mov    r13,QWORD PTR [rsp+0x120]
  41ec1b:	mov    r15d,ecx
  41ec1e:	mov    rdi,rdx
  41ec21:	mov    esi,r8d
  41ec24:	mov    rbx,r9
  41ec27:	and    r15d,0x6000
  41ec2e:	call   0x421f48
  41ec33:	mov    eax,DWORD PTR [rax]
  41ec35:	lea    rcx,[rip+0xe3d1]        # 0x42d00d
  41ec3c:	xor    edx,edx
  41ec3e:	mov    QWORD PTR [rsp+0x80],rdi
  41ec46:	mov    DWORD PTR [rsp+0x88],r15d
  41ec4e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41ec59:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41ec64:	mov    DWORD PTR [rsp+0x34],eax
  41ec68:	xor    eax,eax
  41ec6a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  41ec75:	mov    WORD PTR [rsp+0x98],ax
  41ec7d:	mov    DWORD PTR [rsp+0x9c],0x0
  41ec88:	mov    WORD PTR [rsp+0xa0],dx
  41ec90:	mov    DWORD PTR [rsp+0xa4],0x0
  41ec9b:	mov    DWORD PTR [rsp+0xa8],esi
  41eca2:	call   0x421e30
  41eca7:	test   rax,rax
  41ecaa:	je     0x41ecbc
  41ecac:	movsx  edx,BYTE PTR [rax]
  41ecaf:	mov    eax,0x2
  41ecb4:	sub    edx,0x30
  41ecb7:	cmp    edx,0x2
  41ecba:	jbe    0x41ecc9
  41ecbc:	call   0x422090
  41ecc1:	and    eax,0x1
  41ecc4:	neg    eax
  41ecc6:	add    eax,0x3
  41ecc9:	lea    rdi,[rsp+0x70]
  41ecce:	mov    DWORD PTR [rsp+0xac],eax
  41ecd5:	movzx  eax,BYTE PTR [rbx]
  41ecd8:	lea    rsi,[rsp+0x6e]
  41ecdd:	lea    r12,[rsp+0x80]
  41ece5:	lea    rbp,[rip+0xe338]        # 0x42d024
  41ecec:	mov    QWORD PTR [rsp+0x28],rdi
  41ecf1:	lea    rdi,[rsp+0x50]
  41ecf6:	mov    QWORD PTR [rsp+0x38],rsi
  41ecfb:	mov    QWORD PTR [rsp+0x20],rdi
  41ed00:	mov    edi,r15d
  41ed03:	or     edi,0x200
  41ed09:	mov    DWORD PTR [rsp+0x48],edi
  41ed0d:	nop    DWORD PTR [rax]
  41ed10:	movsx  ecx,al
  41ed13:	lea    rsi,[rbx+0x1]
  41ed17:	test   ecx,ecx
  41ed19:	je     0x41ed9a
  41ed1b:	cmp    ecx,0x25
  41ed1e:	jne    0x41ed80
  41ed20:	movzx  eax,BYTE PTR [rbx+0x1]
  41ed24:	xor    r10d,r10d
  41ed27:	xor    r14d,r14d
  41ed2a:	mov    DWORD PTR [rsp+0x88],r15d
  41ed32:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41ed3d:	mov    rdi,rsi
  41ed40:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41ed4b:	lea    r11,[r12+0xc]
  41ed50:	test   al,al
  41ed52:	je     0x41eefb
  41ed58:	lea    edx,[rax-0x20]
  41ed5b:	lea    rbx,[rdi+0x1]
  41ed5f:	movsx  ecx,al
  41ed62:	cmp    dl,0x5a
  41ed65:	ja     0x41f370
  41ed6b:	movzx  edx,dl
  41ed6e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41ed73:	add    rdx,rbp
  41ed76:	jmp    rdx
  41ed78:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed80:	mov    rdx,r12
  41ed83:	call   0x41d4d0
  41ed88:	movzx  eax,BYTE PTR [rbx+0x1]
  41ed8c:	mov    rbx,rsi
  41ed8f:	lea    rsi,[rbx+0x1]
  41ed93:	movsx  ecx,al
  41ed96:	test   ecx,ecx
  41ed98:	jne    0x41ed1b
  41ed9a:	mov    eax,DWORD PTR [rsp+0xa4]
  41eda1:	add    rsp,0xb8
  41eda8:	pop    rbx
  41eda9:	pop    rsi
  41edaa:	pop    rdi
  41edab:	pop    rbp
  41edac:	pop    r12
  41edae:	pop    r13
  41edb0:	pop    r14
  41edb2:	pop    r15
  41edb4:	ret    
  41edb5:	sub    r10d,0x2
  41edb9:	mov    rax,r13
  41edbc:	cmp    r10d,0x1
  41edc0:	jbe    0x41f3b3
  41edc6:	mov    rsi,QWORD PTR [rax]
  41edc9:	add    r13,0x8
  41edcd:	test   rsi,rsi
  41edd0:	je     0x41ee95
  41edd6:	mov    rcx,rsi
  41edd9:	call   0x421d98
  41edde:	mov    edx,eax
  41ede0:	mov    r8,r12
  41ede3:	mov    rcx,rsi
  41ede6:	call   0x41d650
  41edeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41edf0:	movzx  eax,BYTE PTR [rbx]
  41edf3:	jmp    0x41ed10
  41edf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee00:	test   r14d,r14d
  41ee03:	jne    0x41ee13
  41ee05:	cmp    DWORD PTR [rsp+0x88],r15d
  41ee0d:	je     0x41f57b
  41ee13:	mov    rdx,QWORD PTR [r13+0x0]
  41ee17:	lea    rsi,[r13+0x8]
  41ee1b:	mov    r8,r12
  41ee1e:	mov    ecx,0x78
  41ee23:	mov    QWORD PTR [rsp+0x78],0x0
  41ee2c:	mov    r13,rsi
  41ee2f:	mov    QWORD PTR [rsp+0x70],rdx
  41ee34:	call   0x41e330
  41ee39:	jmp    0x41edf0
  41ee3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee40:	cmp    r10d,0x5
  41ee44:	mov    rax,QWORD PTR [r13+0x0]
  41ee48:	je     0x41f4ba
  41ee4e:	cmp    r10d,0x1
  41ee52:	je     0x41f544
  41ee58:	cmp    r10d,0x2
  41ee5c:	je     0x41ee68
  41ee5e:	cmp    r10d,0x3
  41ee62:	je     0x41f5ec
  41ee68:	mov    edx,DWORD PTR [rsp+0xa4]
  41ee6f:	add    r13,0x8
  41ee73:	mov    DWORD PTR [rax],edx
  41ee75:	jmp    0x41edf0
  41ee7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ee80:	mov    ecx,DWORD PTR [rsp+0x34]
  41ee84:	call   0x421da8
  41ee89:	test   rax,rax
  41ee8c:	mov    rsi,rax
  41ee8f:	jne    0x41edd6
  41ee95:	mov    edx,0x6
  41ee9a:	lea    rsi,[rip+0xe165]        # 0x42d006
  41eea1:	jmp    0x41ede0
  41eea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eeb0:	movzx  eax,BYTE PTR [rdi+0x1]
  41eeb4:	mov    r10d,0x2
  41eeba:	mov    r14d,0x4
  41eec0:	cmp    al,0x6c
  41eec2:	jne    0x41eef0
  41eec4:	lea    rbx,[rdi+0x2]
  41eec8:	movzx  eax,BYTE PTR [rdi+0x2]
  41eecc:	mov    r10d,0x3
  41eed2:	mov    r14d,0x4
  41eed8:	jmp    0x41eef0
  41eeda:	nop    WORD PTR [rax+rax*1+0x0]
  41eee0:	movzx  eax,BYTE PTR [rdi+0x1]
  41eee4:	mov    r10d,0x3
  41eeea:	mov    r14d,0x4
  41eef0:	test   al,al
  41eef2:	mov    rdi,rbx
  41eef5:	jne    0x41ed58
  41eefb:	mov    rbx,rdi
  41eefe:	jmp    0x41ed10
  41ef03:	mov    eax,DWORD PTR [rsp+0x88]
  41ef0a:	mov    rdx,r13
  41ef0d:	add    r13,0x8
  41ef11:	or     eax,0x20
  41ef14:	test   al,0x4
  41ef16:	mov    DWORD PTR [rsp+0x88],eax
  41ef1d:	je     0x41f17b
  41ef23:	mov    rax,QWORD PTR [rdx]
  41ef26:	mov    rcx,QWORD PTR [rsp+0x20]
  41ef2b:	mov    rdx,r12
  41ef2e:	fld    TBYTE PTR [rax]
  41ef30:	fstp   TBYTE PTR [rsp+0x50]
  41ef34:	call   0x41e190
  41ef39:	jmp    0x41edf0
  41ef3e:	xchg   ax,ax
  41ef40:	movzx  eax,BYTE PTR [rdi+0x1]
  41ef44:	mov    r10d,0x1
  41ef4a:	mov    r14d,0x4
  41ef50:	cmp    al,0x68
  41ef52:	jne    0x41eef0
  41ef54:	lea    rbx,[rdi+0x2]
  41ef58:	movzx  eax,BYTE PTR [rdi+0x2]
  41ef5c:	mov    r10d,0x5
  41ef62:	mov    r14d,0x4
  41ef68:	jmp    0x41eef0
  41ef6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef70:	mov    eax,DWORD PTR [rsp+0x88]
  41ef77:	mov    rdx,r13
  41ef7a:	add    r13,0x8
  41ef7e:	or     eax,0x20
  41ef81:	test   al,0x4
  41ef83:	mov    DWORD PTR [rsp+0x88],eax
  41ef8a:	je     0x41f1a9
  41ef90:	mov    rax,QWORD PTR [rdx]
  41ef93:	mov    rcx,QWORD PTR [rsp+0x20]
  41ef98:	mov    rdx,r12
  41ef9b:	fld    TBYTE PTR [rax]
  41ef9d:	fstp   TBYTE PTR [rsp+0x50]
  41efa1:	call   0x41dc50
  41efa6:	jmp    0x41edf0
  41efab:	nop    DWORD PTR [rax+rax*1+0x0]
  41efb0:	mov    eax,DWORD PTR [rsp+0x88]
  41efb7:	mov    rdx,r13
  41efba:	add    r13,0x8
  41efbe:	or     eax,0x20
  41efc1:	test   al,0x4
  41efc3:	mov    DWORD PTR [rsp+0x88],eax
  41efca:	je     0x41f1d7
  41efd0:	mov    rax,QWORD PTR [rdx]
  41efd3:	mov    rcx,QWORD PTR [rsp+0x20]
  41efd8:	mov    rdx,r12
  41efdb:	fld    TBYTE PTR [rax]
  41efdd:	fstp   TBYTE PTR [rsp+0x50]
  41efe1:	call   0x41e0e0
  41efe6:	jmp    0x41edf0
  41efeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41eff0:	cmp    r10d,0x3
  41eff4:	je     0x41f4cc
  41effa:	cmp    r10d,0x2
  41effe:	je     0x41f569
  41f004:	mov    eax,DWORD PTR [r13+0x0]
  41f008:	cmp    r10d,0x1
  41f00c:	lea    rdx,[r13+0x8]
  41f010:	mov    QWORD PTR [rsp+0x70],rax
  41f015:	je     0x41f5ab
  41f01b:	cmp    r10d,0x5
  41f01f:	mov    r13,rdx
  41f022:	je     0x41f600
  41f028:	cmp    ecx,0x75
  41f02b:	je     0x41f50c
  41f031:	mov    r8,r12
  41f034:	mov    rdx,rax
  41f037:	call   0x41e330
  41f03c:	jmp    0x41edf0
  41f041:	sub    r10d,0x2
  41f045:	mov    rax,r13
  41f048:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f053:	cmp    r10d,0x1
  41f057:	jbe    0x41f1fb
  41f05d:	mov    eax,DWORD PTR [rax]
  41f05f:	mov    rcx,QWORD PTR [rsp+0x28]
  41f064:	mov    r8,r12
  41f067:	mov    edx,0x1
  41f06c:	add    r13,0x8
  41f070:	mov    BYTE PTR [rsp+0x70],al
  41f074:	call   0x41d650
  41f079:	jmp    0x41edf0
  41f07e:	xchg   ax,ax
  41f080:	mov    eax,DWORD PTR [rsp+0x88]
  41f087:	mov    rdx,r13
  41f08a:	add    r13,0x8
  41f08e:	or     eax,0x20
  41f091:	test   al,0x4
  41f093:	mov    DWORD PTR [rsp+0x88],eax
  41f09a:	je     0x41f238
  41f0a0:	mov    rax,QWORD PTR [rdx]
  41f0a3:	mov    rcx,QWORD PTR [rsp+0x20]
  41f0a8:	mov    rdx,r12
  41f0ab:	fld    TBYTE PTR [rax]
  41f0ad:	fstp   TBYTE PTR [rsp+0x50]
  41f0b1:	call   0x41e6f0
  41f0b6:	jmp    0x41edf0
  41f0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0c0:	or     DWORD PTR [rsp+0x88],0x80
  41f0cb:	cmp    r10d,0x3
  41f0cf:	je     0x41f4a8
  41f0d5:	cmp    r10d,0x2
  41f0d9:	je     0x41f557
  41f0df:	movsxd rcx,DWORD PTR [r13+0x0]
  41f0e3:	cmp    r10d,0x1
  41f0e7:	lea    rax,[r13+0x8]
  41f0eb:	mov    QWORD PTR [rsp+0x70],rcx
  41f0f0:	je     0x41f5bd
  41f0f6:	cmp    r10d,0x5
  41f0fa:	mov    r13,rax
  41f0fd:	je     0x41f60f
  41f103:	mov    rax,rcx
  41f106:	mov    rdx,r12
  41f109:	sar    rax,0x3f
  41f10d:	mov    QWORD PTR [rsp+0x78],rax
  41f112:	call   0x41dd40
  41f117:	jmp    0x41edf0
  41f11c:	nop    DWORD PTR [rax+0x0]
  41f120:	or     DWORD PTR [rsp+0x88],0x4
  41f128:	movzx  eax,BYTE PTR [rdi+0x1]
  41f12c:	mov    r14d,0x4
  41f132:	jmp    0x41eef0
  41f137:	nop    WORD PTR [rax+rax*1+0x0]
  41f140:	movzx  eax,BYTE PTR [rdi+0x1]
  41f144:	cmp    al,0x36
  41f146:	je     0x41f488
  41f14c:	cmp    al,0x33
  41f14e:	je     0x41f51c
  41f154:	mov    r10d,0x3
  41f15a:	mov    r14d,0x4
  41f160:	jmp    0x41eef0
  41f165:	mov    eax,DWORD PTR [rsp+0x88]
  41f16c:	mov    rdx,r13
  41f16f:	add    r13,0x8
  41f173:	test   al,0x4
  41f175:	jne    0x41ef23
  41f17b:	mov    rcx,QWORD PTR [rsp+0x20]
  41f180:	fld    QWORD PTR [rdx]
  41f182:	mov    rdx,r12
  41f185:	fstp   TBYTE PTR [rsp+0x50]
  41f189:	call   0x41e190
  41f18e:	jmp    0x41edf0
  41f193:	mov    eax,DWORD PTR [rsp+0x88]
  41f19a:	mov    rdx,r13
  41f19d:	add    r13,0x8
  41f1a1:	test   al,0x4
  41f1a3:	jne    0x41ef90
  41f1a9:	mov    rcx,QWORD PTR [rsp+0x20]
  41f1ae:	fld    QWORD PTR [rdx]
  41f1b0:	mov    rdx,r12
  41f1b3:	fstp   TBYTE PTR [rsp+0x50]
  41f1b7:	call   0x41dc50
  41f1bc:	jmp    0x41edf0
  41f1c1:	mov    eax,DWORD PTR [rsp+0x88]
  41f1c8:	mov    rdx,r13
  41f1cb:	add    r13,0x8
  41f1cf:	test   al,0x4
  41f1d1:	jne    0x41efd0
  41f1d7:	mov    rcx,QWORD PTR [rsp+0x20]
  41f1dc:	fld    QWORD PTR [rdx]
  41f1de:	mov    rdx,r12
  41f1e1:	fstp   TBYTE PTR [rsp+0x50]
  41f1e5:	call   0x41e0e0
  41f1ea:	jmp    0x41edf0
  41f1ef:	nop
  41f1f0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f1fb:	mov    eax,DWORD PTR [r13+0x0]
  41f1ff:	mov    rcx,QWORD PTR [rsp+0x28]
  41f204:	lea    rsi,[r13+0x8]
  41f208:	mov    r8,r12
  41f20b:	mov    edx,0x1
  41f210:	mov    r13,rsi
  41f213:	mov    WORD PTR [rsp+0x70],ax
  41f218:	call   0x41d530
  41f21d:	jmp    0x41edf0
  41f222:	mov    eax,DWORD PTR [rsp+0x88]
  41f229:	mov    rdx,r13
  41f22c:	add    r13,0x8
  41f230:	test   al,0x4
  41f232:	jne    0x41f0a0
  41f238:	mov    rcx,QWORD PTR [rsp+0x20]
  41f23d:	fld    QWORD PTR [rdx]
  41f23f:	mov    rdx,r12
  41f242:	fstp   TBYTE PTR [rsp+0x50]
  41f246:	call   0x41e6f0
  41f24b:	jmp    0x41edf0
  41f250:	test   r14d,r14d
  41f253:	jne    0x41f3f0
  41f259:	or     DWORD PTR [rsp+0x88],0x200
  41f264:	movzx  eax,BYTE PTR [rdi+0x1]
  41f268:	jmp    0x41eef0
  41f26d:	nop    DWORD PTR [rax]
  41f270:	cmp    r14d,0x1
  41f274:	jbe    0x41f4de
  41f27a:	movzx  eax,BYTE PTR [rdi+0x1]
  41f27e:	mov    r14d,0x4
  41f284:	jmp    0x41eef0
  41f289:	nop    DWORD PTR [rax+0x0]
  41f290:	test   r14d,r14d
  41f293:	jne    0x41f319
  41f299:	or     DWORD PTR [rsp+0x88],0x400
  41f2a4:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2a8:	jmp    0x41eef0
  41f2ad:	nop    DWORD PTR [rax]
  41f2b0:	test   r14d,r14d
  41f2b3:	jne    0x41f319
  41f2b5:	or     DWORD PTR [rsp+0x88],0x100
  41f2c0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2c4:	jmp    0x41eef0
  41f2c9:	nop    DWORD PTR [rax+0x0]
  41f2d0:	test   r14d,r14d
  41f2d3:	jne    0x41f319
  41f2d5:	or     DWORD PTR [rsp+0x88],0x800
  41f2e0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f2e4:	jmp    0x41eef0
  41f2e9:	nop    DWORD PTR [rax+0x0]
  41f2f0:	test   r14d,r14d
  41f2f3:	jne    0x41f319
  41f2f5:	or     DWORD PTR [rsp+0x88],0x40
  41f2fd:	movzx  eax,BYTE PTR [rdi+0x1]
  41f301:	jmp    0x41eef0
  41f306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f310:	test   r14d,r14d
  41f313:	je     0x41f422
  41f319:	movzx  eax,BYTE PTR [rdi+0x1]
  41f31d:	jmp    0x41eef0
  41f322:	mov    rdx,r12
  41f325:	call   0x41d4d0
  41f32a:	jmp    0x41edf0
  41f32f:	nop
  41f330:	test   r11,r11
  41f333:	je     0x41f27a
  41f339:	test   r14d,0xfffffffd
  41f340:	jne    0x41f410
  41f346:	mov    eax,DWORD PTR [r13+0x0]
  41f34a:	lea    rdx,[r13+0x8]
  41f34e:	test   eax,eax
  41f350:	mov    DWORD PTR [r11],eax
  41f353:	js     0x41f5d0
  41f359:	movzx  eax,BYTE PTR [rdi+0x1]
  41f35d:	mov    r13,rdx
  41f360:	xor    r11d,r11d
  41f363:	jmp    0x41eef0
  41f368:	nop    DWORD PTR [rax+rax*1+0x0]
  41f370:	sub    eax,0x30
  41f373:	cmp    al,0x9
  41f375:	ja     0x41f596
  41f37b:	cmp    r14d,0x3
  41f37f:	ja     0x41f596
  41f385:	test   r14d,r14d
  41f388:	jne    0x41f3fa
  41f38a:	mov    r14d,0x1
  41f390:	test   r11,r11
  41f393:	je     0x41f319
  41f395:	mov    eax,DWORD PTR [r11]
  41f398:	test   eax,eax
  41f39a:	js     0x41f4fd
  41f3a0:	lea    eax,[rax+rax*4]
  41f3a3:	lea    eax,[rcx+rax*2-0x30]
  41f3a7:	mov    DWORD PTR [r11],eax
  41f3aa:	movzx  eax,BYTE PTR [rdi+0x1]
  41f3ae:	jmp    0x41eef0
  41f3b3:	mov    rsi,QWORD PTR [r13+0x0]
  41f3b7:	lea    rax,[rip+0xdc3a]        # 0x42cff8
  41f3be:	lea    rdi,[r13+0x8]
  41f3c2:	mov    r13,rdi
  41f3c5:	test   rsi,rsi
  41f3c8:	cmove  rsi,rax
  41f3cc:	mov    rcx,rsi
  41f3cf:	call   0x421d38
  41f3d4:	mov    r8,r12
  41f3d7:	mov    edx,eax
  41f3d9:	mov    rcx,rsi
  41f3dc:	call   0x41d530
  41f3e1:	jmp    0x41edf0
  41f3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3f0:	cmp    r14d,0x3
  41f3f4:	ja     0x41f596
  41f3fa:	cmp    r14d,0x2
  41f3fe:	mov    eax,0x3
  41f403:	cmove  r14d,eax
  41f407:	jmp    0x41f390
  41f409:	nop    DWORD PTR [rax+0x0]
  41f410:	movzx  eax,BYTE PTR [rdi+0x1]
  41f414:	xor    r11d,r11d
  41f417:	mov    r14d,0x4
  41f41d:	jmp    0x41eef0
  41f422:	mov    DWORD PTR [rsp+0x4c],r10d
  41f427:	mov    QWORD PTR [rsp+0x40],r11
  41f42c:	or     DWORD PTR [rsp+0x88],0x1000
  41f437:	mov    DWORD PTR [rsp+0x70],0x0
  41f43f:	call   0x421e20
  41f444:	mov    r9,QWORD PTR [rsp+0x28]
  41f449:	mov    rdx,QWORD PTR [rax+0x8]
  41f44d:	mov    r8d,0x10
  41f453:	mov    rcx,QWORD PTR [rsp+0x38]
  41f458:	call   0x421ae0
  41f45d:	test   eax,eax
  41f45f:	mov    r11,QWORD PTR [rsp+0x40]
  41f464:	mov    r10d,DWORD PTR [rsp+0x4c]
  41f469:	jle    0x41f478
  41f46b:	movzx  edx,WORD PTR [rsp+0x6e]
  41f470:	mov    WORD PTR [rsp+0xa0],dx
  41f478:	mov    DWORD PTR [rsp+0x9c],eax
  41f47f:	movzx  eax,BYTE PTR [rdi+0x1]
  41f483:	jmp    0x41eef0
  41f488:	cmp    BYTE PTR [rdi+0x2],0x34
  41f48c:	je     0x41f61f
  41f492:	mov    eax,0x36
  41f497:	mov    r10d,0x3
  41f49d:	mov    r14d,0x4
  41f4a3:	jmp    0x41eef0
  41f4a8:	mov    rcx,QWORD PTR [r13+0x0]
  41f4ac:	add    r13,0x8
  41f4b0:	mov    QWORD PTR [rsp+0x70],rcx
  41f4b5:	jmp    0x41f103
  41f4ba:	mov    edx,DWORD PTR [rsp+0xa4]
  41f4c1:	add    r13,0x8
  41f4c5:	mov    BYTE PTR [rax],dl
  41f4c7:	jmp    0x41edf0
  41f4cc:	mov    rax,QWORD PTR [r13+0x0]
  41f4d0:	add    r13,0x8
  41f4d4:	mov    QWORD PTR [rsp+0x70],rax
  41f4d9:	jmp    0x41f028
  41f4de:	mov    DWORD PTR [rsp+0x90],0x0
  41f4e9:	movzx  eax,BYTE PTR [rdi+0x1]
  41f4ed:	lea    r11,[r12+0x10]
  41f4f2:	mov    r14d,0x2
  41f4f8:	jmp    0x41eef0
  41f4fd:	sub    ecx,0x30
  41f500:	movzx  eax,BYTE PTR [rdi+0x1]
  41f504:	mov    DWORD PTR [r11],ecx
  41f507:	jmp    0x41eef0
  41f50c:	mov    rdx,r12
  41f50f:	mov    rcx,rax
  41f512:	call   0x41dd40
  41f517:	jmp    0x41edf0
  41f51c:	cmp    BYTE PTR [rdi+0x2],0x32
  41f520:	mov    eax,0x33
  41f525:	jne    0x41f154
  41f52b:	lea    rbx,[rdi+0x3]
  41f52f:	movzx  eax,BYTE PTR [rdi+0x3]
  41f533:	mov    r10d,0x2
  41f539:	mov    r14d,0x4
  41f53f:	jmp    0x41eef0
  41f544:	mov    edx,DWORD PTR [rsp+0xa4]
  41f54b:	add    r13,0x8
  41f54f:	mov    WORD PTR [rax],dx
  41f552:	jmp    0x41edf0
  41f557:	movsxd rcx,DWORD PTR [r13+0x0]
  41f55b:	add    r13,0x8
  41f55f:	mov    QWORD PTR [rsp+0x70],rcx
  41f564:	jmp    0x41f103
  41f569:	mov    eax,DWORD PTR [r13+0x0]
  41f56d:	add    r13,0x8
  41f571:	mov    QWORD PTR [rsp+0x70],rax
  41f576:	jmp    0x41f028
  41f57b:	mov    eax,DWORD PTR [rsp+0x48]
  41f57f:	mov    DWORD PTR [rsp+0x90],0x10
  41f58a:	mov    DWORD PTR [rsp+0x88],eax
  41f591:	jmp    0x41ee13
  41f596:	mov    rdx,r12
  41f599:	mov    ecx,0x25
  41f59e:	mov    rbx,rsi
  41f5a1:	call   0x41d4d0
  41f5a6:	jmp    0x41edf0
  41f5ab:	movzx  eax,WORD PTR [rsp+0x70]
  41f5b0:	mov    r13,rdx
  41f5b3:	mov    QWORD PTR [rsp+0x70],rax
  41f5b8:	jmp    0x41f028
  41f5bd:	movsx  rcx,WORD PTR [rsp+0x70]
  41f5c3:	mov    r13,rax
  41f5c6:	mov    QWORD PTR [rsp+0x70],rcx
  41f5cb:	jmp    0x41f103
  41f5d0:	test   r14d,r14d
  41f5d3:	jne    0x41f638
  41f5d5:	or     DWORD PTR [rsp+0x88],0x400
  41f5e0:	neg    DWORD PTR [rsp+0x8c]
  41f5e7:	jmp    0x41f359
  41f5ec:	movsxd rdx,DWORD PTR [rsp+0xa4]
  41f5f4:	add    r13,0x8
  41f5f8:	mov    QWORD PTR [rax],rdx
  41f5fb:	jmp    0x41edf0
  41f600:	movzx  eax,BYTE PTR [rsp+0x70]
  41f605:	mov    QWORD PTR [rsp+0x70],rax
  41f60a:	jmp    0x41f028
  41f60f:	movsx  rcx,BYTE PTR [rsp+0x70]
  41f615:	mov    QWORD PTR [rsp+0x70],rcx
  41f61a:	jmp    0x41f103
  41f61f:	lea    rbx,[rdi+0x3]
  41f623:	movzx  eax,BYTE PTR [rdi+0x3]
  41f627:	mov    r10d,0x3
  41f62d:	mov    r14d,0x4
  41f633:	jmp    0x41eef0
  41f638:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f643:	movzx  eax,BYTE PTR [rdi+0x1]
  41f647:	mov    r13,rdx
  41f64a:	xor    r11d,r11d
  41f64d:	jmp    0x41eef0
  41f652:	nop
  41f653:	nop
  41f654:	nop
  41f655:	nop
  41f656:	nop
  41f657:	nop
  41f658:	nop
  41f659:	nop
  41f65a:	nop
  41f65b:	nop
  41f65c:	nop
  41f65d:	nop
  41f65e:	nop
  41f65f:	nop
  41f660:	push   rbx
  41f661:	sub    rsp,0x20
  41f665:	xor    ebx,ebx
  41f667:	cmp    ecx,0x1b
  41f66a:	jle    0x41f67d
  41f66c:	mov    eax,0x4
  41f671:	add    eax,eax
  41f673:	add    ebx,0x1
  41f676:	lea    edx,[rax+0x17]
  41f679:	cmp    edx,ecx
  41f67b:	jl     0x41f671
  41f67d:	mov    ecx,ebx
  41f67f:	call   0x420f50
  41f684:	mov    DWORD PTR [rax],ebx
  41f686:	add    rax,0x4
  41f68a:	add    rsp,0x20
  41f68e:	pop    rbx
  41f68f:	ret    
  41f690:	push   rsi
  41f691:	push   rbx
  41f692:	sub    rsp,0x28
  41f696:	mov    rbx,rcx
  41f699:	mov    ecx,r8d
  41f69c:	mov    rsi,rdx
  41f69f:	call   0x41f660
  41f6a4:	movzx  ecx,BYTE PTR [rbx]
  41f6a7:	lea    r8,[rbx+0x1]
  41f6ab:	test   cl,cl
  41f6ad:	mov    BYTE PTR [rax],cl
  41f6af:	mov    rcx,rax
  41f6b2:	je     0x41f6c9
  41f6b4:	add    r8,0x1
  41f6b8:	movzx  r9d,BYTE PTR [r8-0x1]
  41f6bd:	add    rcx,0x1
  41f6c1:	test   r9b,r9b
  41f6c4:	mov    BYTE PTR [rcx],r9b
  41f6c7:	jne    0x41f6b4
  41f6c9:	test   rsi,rsi
  41f6cc:	je     0x41f6d1
  41f6ce:	mov    QWORD PTR [rsi],rcx
  41f6d1:	add    rsp,0x28
  41f6d5:	pop    rbx
  41f6d6:	pop    rsi
  41f6d7:	ret    
  41f6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6e0:	mov    edx,0x1
  41f6e5:	mov    rax,rcx
  41f6e8:	mov    ecx,DWORD PTR [rcx-0x4]
  41f6eb:	shl    edx,cl
  41f6ed:	mov    DWORD PTR [rax+0x4],ecx
  41f6f0:	lea    rcx,[rax-0x4]
  41f6f4:	mov    DWORD PTR [rax+0x8],edx
  41f6f7:	jmp    0x421060
  41f6fc:	nop    DWORD PTR [rax+0x0]
  41f700:	push   r15
  41f702:	push   r14
  41f704:	push   r13
  41f706:	push   r12
  41f708:	push   rbp
  41f709:	push   rdi
  41f70a:	push   rsi
  41f70b:	push   rbx
  41f70c:	sub    rsp,0x38
  41f710:	xor    eax,eax
  41f712:	mov    edi,DWORD PTR [rdx+0x14]
  41f715:	cmp    edi,DWORD PTR [rcx+0x14]
  41f718:	mov    r15,rdx
  41f71b:	jg     0x41f869
  41f721:	sub    edi,0x1
  41f724:	lea    rbx,[rdx+0x18]
  41f728:	lea    r12,[rcx+0x18]
  41f72c:	movsxd r13,edi
  41f72f:	xor    edx,edx
  41f731:	shl    r13,0x2
  41f735:	lea    rbp,[rbx+r13*1]
  41f739:	add    r13,r12
  41f73c:	mov    eax,DWORD PTR [rbp+0x0]
  41f73f:	lea    r8d,[rax+0x1]
  41f743:	mov    eax,DWORD PTR [r13+0x0]
  41f747:	div    r8d
  41f74a:	test   eax,eax
  41f74c:	mov    r14d,eax
  41f74f:	mov    DWORD PTR [rsp+0x2c],eax
  41f753:	je     0x41f7e7
  41f759:	mov    edx,eax
  41f75b:	mov    rsi,rbx
  41f75e:	mov    r11,r12
  41f761:	xor    eax,eax
  41f763:	xor    r10d,r10d
  41f766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f770:	add    rsi,0x4
  41f774:	mov    r8d,DWORD PTR [rsi-0x4]
  41f778:	mov    r9d,DWORD PTR [r11]
  41f77b:	add    r11,0x4
  41f77f:	imul   r8,rdx
  41f783:	add    r8,rax
  41f786:	mov    rax,r8
  41f789:	mov    r8d,r8d
  41f78c:	sub    r9,r8
  41f78f:	shr    rax,0x20
  41f793:	sub    r9,r10
  41f796:	mov    r10,r9
  41f799:	mov    DWORD PTR [r11-0x4],r9d
  41f79d:	shr    r10,0x20
  41f7a1:	and    r10d,0x1
  41f7a5:	cmp    rbp,rsi
  41f7a8:	jae    0x41f770
  41f7aa:	mov    r11d,DWORD PTR [r13+0x0]
  41f7ae:	test   r11d,r11d
  41f7b1:	jne    0x41f7e7
  41f7b3:	lea    rax,[r13-0x4]
  41f7b7:	cmp    r12,rax
  41f7ba:	jae    0x41f7e4
  41f7bc:	mov    r10d,DWORD PTR [r13-0x4]
  41f7c0:	test   r10d,r10d
  41f7c3:	je     0x41f7d8
  41f7c5:	jmp    0x41f7e4
  41f7c7:	nop    WORD PTR [rax+rax*1+0x0]
  41f7d0:	mov    r9d,DWORD PTR [rax]
  41f7d3:	test   r9d,r9d
  41f7d6:	jne    0x41f7e4
  41f7d8:	sub    rax,0x4
  41f7dc:	sub    edi,0x1
  41f7df:	cmp    r12,rax
  41f7e2:	jb     0x41f7d0
  41f7e4:	mov    DWORD PTR [rcx+0x14],edi
  41f7e7:	mov    rdx,r15
  41f7ea:	mov    rsi,rcx
  41f7ed:	call   0x421580
  41f7f2:	test   eax,eax
  41f7f4:	js     0x41f865
  41f7f6:	lea    eax,[r14+0x1]
  41f7fa:	mov    rcx,r12
  41f7fd:	xor    edx,edx
  41f7ff:	mov    DWORD PTR [rsp+0x2c],eax
  41f803:	add    rbx,0x4
  41f807:	mov    eax,DWORD PTR [rcx]
  41f809:	mov    r8d,DWORD PTR [rbx-0x4]
  41f80d:	add    rcx,0x4
  41f811:	sub    rax,r8
  41f814:	sub    rax,rdx
  41f817:	mov    rdx,rax
  41f81a:	mov    DWORD PTR [rcx-0x4],eax
  41f81d:	shr    rdx,0x20
  41f821:	and    edx,0x1
  41f824:	cmp    rbp,rbx
  41f827:	jae    0x41f803
  41f829:	movsxd rax,edi
  41f82c:	lea    rdx,[r12+rax*4]
  41f830:	mov    r8d,DWORD PTR [rdx]
  41f833:	test   r8d,r8d
  41f836:	jne    0x41f865
  41f838:	lea    rax,[rdx-0x4]
  41f83c:	cmp    r12,rax
  41f83f:	jae    0x41f862
  41f841:	mov    ecx,DWORD PTR [rdx-0x4]
  41f844:	test   ecx,ecx
  41f846:	je     0x41f856
  41f848:	jmp    0x41f862
  41f84a:	nop    WORD PTR [rax+rax*1+0x0]
  41f850:	mov    edx,DWORD PTR [rax]
  41f852:	test   edx,edx
  41f854:	jne    0x41f862
  41f856:	sub    rax,0x4
  41f85a:	sub    edi,0x1
  41f85d:	cmp    r12,rax
  41f860:	jb     0x41f850
  41f862:	mov    DWORD PTR [rsi+0x14],edi
  41f865:	mov    eax,DWORD PTR [rsp+0x2c]
  41f869:	add    rsp,0x38
  41f86d:	pop    rbx
  41f86e:	pop    rsi
  41f86f:	pop    rdi
  41f870:	pop    rbp
  41f871:	pop    r12
  41f873:	pop    r13
  41f875:	pop    r14
  41f877:	pop    r15
  41f879:	ret    
  41f87a:	nop
  41f87b:	nop
  41f87c:	nop
  41f87d:	nop
  41f87e:	nop
  41f87f:	nop
  41f880:	push   r15
  41f882:	push   r14
  41f884:	push   r13
  41f886:	push   r12
  41f888:	push   rbp
  41f889:	push   rdi
  41f88a:	push   rsi
  41f88b:	push   rbx
  41f88c:	sub    rsp,0xb8
  41f893:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41f89b:	mov    r12d,DWORD PTR [r9]
  41f89e:	mov    eax,r12d
  41f8a1:	and    eax,0xffffffcf
  41f8a4:	mov    DWORD PTR [r9],eax
  41f8a7:	mov    eax,r12d
  41f8aa:	and    eax,0x7
  41f8ad:	cmp    eax,0x4
  41f8b0:	ja     0x420ce3
  41f8b6:	mov    r13d,edx
  41f8b9:	lea    rdx,[rip+0xd8e0]        # 0x42d1a0
  41f8c0:	mov    QWORD PTR [rsp+0x28],r9
  41f8c5:	mov    r15,r8
  41f8c8:	mov    rbp,rcx
  41f8cb:	movsxd rax,DWORD PTR [rdx+rax*4]
  41f8cf:	add    rdx,rax
  41f8d2:	jmp    rdx
  41f8d4:	mov    edi,DWORD PTR [rcx]
  41f8d6:	xor    ecx,ecx
  41f8d8:	cmp    edi,0x20
  41f8db:	jle    0x41f8eb
  41f8dd:	mov    eax,0x20
  41f8e2:	add    eax,eax
  41f8e4:	add    ecx,0x1
  41f8e7:	cmp    edi,eax
  41f8e9:	jg     0x41f8e2
  41f8eb:	call   0x420f50
  41f8f0:	mov    rsi,rax
  41f8f3:	lea    eax,[rdi-0x1]
  41f8f6:	lea    r9,[rsi+0x18]
  41f8fa:	sar    eax,0x5
  41f8fd:	cdqe   
  41f8ff:	mov    rdx,r9
  41f902:	lea    r11,[r15+rax*4]
  41f906:	mov    rax,r15
  41f909:	nop    DWORD PTR [rax+0x0]
  41f910:	mov    ecx,DWORD PTR [rax]
  41f912:	add    rax,0x4
  41f916:	add    rdx,0x4
  41f91a:	cmp    r11,rax
  41f91d:	mov    DWORD PTR [rdx-0x4],ecx
  41f920:	jae    0x41f910
  41f922:	sub    rdx,r9
  41f925:	sar    rdx,0x2
  41f929:	mov    r14d,edx
  41f92c:	movsxd rdx,edx
  41f92f:	lea    rax,[r9+rdx*4-0x4]
  41f934:	jmp    0x41f94f
  41f936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f940:	sub    rax,0x4
  41f944:	test   edx,edx
  41f946:	mov    r14d,edx
  41f949:	je     0x41fe50
  41f94f:	mov    r8d,DWORD PTR [rax]
  41f952:	lea    edx,[r14-0x1]
  41f956:	test   r8d,r8d
  41f959:	je     0x41f940
  41f95b:	movsxd rdx,edx
  41f95e:	mov    DWORD PTR [rsi+0x14],r14d
  41f962:	shl    r14d,0x5
  41f966:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41f96b:	xor    eax,0x1f
  41f96e:	sub    r14d,eax
  41f971:	mov    rcx,rsi
  41f974:	call   0x420df0
  41f979:	test   eax,eax
  41f97b:	mov    DWORD PTR [rsp+0x9c],eax
  41f982:	mov    r11d,r13d
  41f985:	jne    0x41fe60
  41f98b:	mov    ecx,DWORD PTR [rsi+0x14]
  41f98e:	test   ecx,ecx
  41f990:	jne    0x41fa40
  41f996:	mov    rcx,rsi
  41f999:	call   0x421060
  41f99e:	mov    rax,QWORD PTR [rsp+0x130]
  41f9a6:	mov    rdx,QWORD PTR [rsp+0x138]
  41f9ae:	lea    rcx,[rip+0xd7e8]        # 0x42d19d
  41f9b5:	mov    r8d,0x1
  41f9bb:	mov    DWORD PTR [rax],0x1
  41f9c1:	call   0x41f690
  41f9c6:	nop
  41f9c7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  41f9cf:	add    rsp,0xb8
  41f9d6:	pop    rbx
  41f9d7:	pop    rsi
  41f9d8:	pop    rdi
  41f9d9:	pop    rbp
  41f9da:	pop    r12
  41f9dc:	pop    r13
  41f9de:	pop    r14
  41f9e0:	pop    r15
  41f9e2:	ret    
  41f9e3:	mov    rax,QWORD PTR [rsp+0x130]
  41f9eb:	mov    rdx,QWORD PTR [rsp+0x138]
  41f9f3:	lea    rcx,[rip+0xd79f]        # 0x42d199
  41f9fa:	mov    r8d,0x3
  41fa00:	mov    DWORD PTR [rax],0xffff8000
  41fa06:	call   0x41f690
  41fa0b:	jmp    0x41f9c7
  41fa0d:	nop    DWORD PTR [rax]
  41fa10:	mov    rax,QWORD PTR [rsp+0x130]
  41fa18:	mov    rdx,QWORD PTR [rsp+0x138]
  41fa20:	lea    rcx,[rip+0xd769]        # 0x42d190
  41fa27:	mov    r8d,0x8
  41fa2d:	mov    DWORD PTR [rax],0xffff8000
  41fa33:	call   0x41f690
  41fa38:	jmp    0x41f9c7
  41fa3a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa40:	lea    rdx,[rsp+0x9c]
  41fa48:	mov    rcx,rsi
  41fa4b:	mov    DWORD PTR [rsp+0x30],r11d
  41fa50:	call   0x421710
  41fa55:	movq   rdx,xmm0
  41fa5a:	movq   r9,xmm0
  41fa5f:	mov    r11d,DWORD PTR [rsp+0x30]
  41fa64:	pxor   xmm0,xmm0
  41fa68:	shr    rdx,0x20
  41fa6c:	mov    r9d,r9d
  41fa6f:	and    edx,0xfffff
  41fa75:	lea    ecx,[r11+r14*1-0x1]
  41fa7a:	or     edx,0x3ff00000
  41fa80:	mov    rax,rdx
  41fa83:	cvtsi2sd xmm0,ecx
  41fa87:	shl    rax,0x20
  41fa8b:	mov    ebx,ecx
  41fa8d:	or     r9,rax
  41fa90:	sar    ebx,0x1f
  41fa93:	mov    QWORD PTR [rsp+0x30],r9
  41fa98:	mov    eax,ebx
  41fa9a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  41faa0:	xor    eax,ecx
  41faa2:	sub    eax,ebx
  41faa4:	subsd  xmm1,QWORD PTR [rip+0xd70c]        # 0x42d1b8
  41faac:	sub    eax,0x435
  41fab1:	test   eax,eax
  41fab3:	mulsd  xmm0,QWORD PTR [rip+0xd715]        # 0x42d1d0
  41fabb:	mulsd  xmm1,QWORD PTR [rip+0xd6fd]        # 0x42d1c0
  41fac3:	addsd  xmm1,QWORD PTR [rip+0xd6fd]        # 0x42d1c8
  41facb:	addsd  xmm1,xmm0
  41facf:	jle    0x41fae5
  41fad1:	pxor   xmm0,xmm0
  41fad5:	cvtsi2sd xmm0,eax
  41fad9:	mulsd  xmm0,QWORD PTR [rip+0xd6f7]        # 0x42d1d8
  41fae1:	addsd  xmm1,xmm0
  41fae5:	cvttsd2si eax,xmm1
  41fae9:	pxor   xmm6,xmm6
  41faed:	ucomisd xmm6,xmm1
  41faf1:	mov    DWORD PTR [rsp+0x30],eax
  41faf5:	ja     0x420383
  41fafb:	mov    eax,ecx
  41fafd:	mov    r9d,r9d
  41fb00:	mov    DWORD PTR [rsp+0x6c],0x1
  41fb08:	shl    eax,0x14
  41fb0b:	add    eax,edx
  41fb0d:	shl    rax,0x20
  41fb11:	or     r9,rax
  41fb14:	cmp    DWORD PTR [rsp+0x30],0x16
  41fb19:	mov    QWORD PTR [rsp+0x80],r9
  41fb21:	ja     0x41fb50
  41fb23:	movsxd rax,DWORD PTR [rsp+0x30]
  41fb28:	mov    rdx,QWORD PTR [rip+0xd9f1]        # 0x42d520
  41fb2f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  41fb34:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41fb3d:	jbe    0x41fea0
  41fb43:	sub    DWORD PTR [rsp+0x30],0x1
  41fb48:	mov    DWORD PTR [rsp+0x6c],0x0
  41fb50:	mov    eax,r14d
  41fb53:	mov    DWORD PTR [rsp+0x50],0x0
  41fb5b:	sub    eax,ecx
  41fb5d:	sub    eax,0x1
  41fb60:	mov    DWORD PTR [rsp+0x40],eax
  41fb64:	js     0x420370
  41fb6a:	mov    eax,DWORD PTR [rsp+0x30]
  41fb6e:	test   eax,eax
  41fb70:	js     0x420350
  41fb76:	add    DWORD PTR [rsp+0x40],eax
  41fb7a:	mov    DWORD PTR [rsp+0x88],eax
  41fb81:	mov    DWORD PTR [rsp+0x58],0x0
  41fb89:	cmp    DWORD PTR [rsp+0x120],0x9
  41fb91:	ja     0x41fe80
  41fb97:	cmp    DWORD PTR [rsp+0x120],0x5
  41fb9f:	jle    0x41fe8b
  41fba5:	sub    DWORD PTR [rsp+0x120],0x4
  41fbad:	xor    eax,eax
  41fbaf:	cmp    DWORD PTR [rsp+0x120],0x3
  41fbb7:	je     0x420544
  41fbbd:	jle    0x4202a3
  41fbc3:	cmp    DWORD PTR [rsp+0x120],0x4
  41fbcb:	mov    DWORD PTR [rsp+0x60],0x1
  41fbd3:	je     0x41feb0
  41fbd9:	cmp    DWORD PTR [rsp+0x120],0x5
  41fbe1:	jne    0x4202b9
  41fbe7:	mov    ebx,DWORD PTR [rsp+0x30]
  41fbeb:	add    ebx,DWORD PTR [rsp+0x128]
  41fbf2:	mov    DWORD PTR [rsp+0x8c],ebx
  41fbf9:	add    ebx,0x1
  41fbfc:	test   ebx,ebx
  41fbfe:	mov    DWORD PTR [rsp+0x68],ebx
  41fc02:	mov    ecx,ebx
  41fc04:	jle    0x420780
  41fc0a:	cmp    ebx,0xe
  41fc0d:	mov    DWORD PTR [rsp+0x9c],ebx
  41fc14:	setbe  bl
  41fc17:	and    ebx,eax
  41fc19:	mov    QWORD PTR [rsp+0x78],r9
  41fc1e:	mov    DWORD PTR [rsp+0x70],r11d
  41fc23:	call   0x41f660
  41fc28:	mov    QWORD PTR [rsp+0x48],rax
  41fc2d:	mov    eax,DWORD PTR [rbp+0xc]
  41fc30:	mov    r11d,DWORD PTR [rsp+0x70]
  41fc35:	mov    r9,QWORD PTR [rsp+0x78]
  41fc3a:	sub    eax,0x1
  41fc3d:	mov    DWORD PTR [rsp+0x38],eax
  41fc41:	je     0x41fc68
  41fc43:	mov    ecx,DWORD PTR [rsp+0x38]
  41fc47:	mov    eax,0x2
  41fc4c:	test   ecx,ecx
  41fc4e:	cmovns eax,ecx
  41fc51:	and    r12d,0x8
  41fc55:	mov    DWORD PTR [rsp+0x38],eax
  41fc59:	je     0x41fc68
  41fc5b:	mov    eax,0x3
  41fc60:	sub    eax,DWORD PTR [rsp+0x38]
  41fc64:	mov    DWORD PTR [rsp+0x38],eax
  41fc68:	test   bl,bl
  41fc6a:	je     0x41ff60
  41fc70:	mov    eax,DWORD PTR [rsp+0x38]
  41fc74:	or     eax,DWORD PTR [rsp+0x30]
  41fc78:	jne    0x41ff60
  41fc7e:	mov    eax,DWORD PTR [rsp+0x6c]
  41fc82:	mov    DWORD PTR [rsp+0x9c],0x0
  41fc8d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  41fc96:	test   eax,eax
  41fc98:	je     0x41fcac
  41fc9a:	movsd  xmm0,QWORD PTR [rip+0xd546]        # 0x42d1e8
  41fca2:	ucomisd xmm0,xmm4
  41fca6:	ja     0x420adb
  41fcac:	movapd xmm0,xmm4
  41fcb0:	mov    r12d,DWORD PTR [rsp+0x68]
  41fcb5:	addsd  xmm0,xmm4
  41fcb9:	addsd  xmm0,QWORD PTR [rip+0xd53f]        # 0x42d200
  41fcc1:	movq   rdx,xmm0
  41fcc6:	movq   rax,xmm0
  41fccb:	shr    rdx,0x20
  41fccf:	mov    eax,eax
  41fcd1:	sub    edx,0x3400000
  41fcd7:	shl    rdx,0x20
  41fcdb:	or     rax,rdx
  41fcde:	test   r12d,r12d
  41fce1:	je     0x41ff17
  41fce7:	mov    r9d,DWORD PTR [rsp+0x68]
  41fcec:	movapd xmm0,xmm4
  41fcf0:	xor    ecx,ecx
  41fcf2:	mov    ebx,DWORD PTR [rsp+0x60]
  41fcf6:	lea    edx,[r9-0x1]
  41fcfa:	movsxd rdx,edx
  41fcfd:	test   ebx,ebx
  41fcff:	je     0x420823
  41fd05:	mov    r10,QWORD PTR [rip+0xd814]        # 0x42d520
  41fd0c:	movsd  xmm1,QWORD PTR [rip+0xd50c]        # 0x42d220
  41fd14:	mov    QWORD PTR [rsp+0x38],rax
  41fd19:	cvttsd2si eax,xmm0
  41fd1d:	pxor   xmm2,xmm2
  41fd21:	mov    DWORD PTR [rsp+0x9c],0x0
  41fd2c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  41fd32:	mov    rdx,QWORD PTR [rsp+0x48]
  41fd37:	mov    rbx,rdx
  41fd3a:	add    rbx,0x1
  41fd3e:	cvtsi2sd xmm2,eax
  41fd42:	add    eax,0x30
  41fd45:	mov    BYTE PTR [rdx],al
  41fd47:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41fd4d:	subsd  xmm0,xmm2
  41fd51:	subsd  xmm1,xmm5
  41fd55:	ucomisd xmm1,xmm0
  41fd59:	ja     0x41fdf4
  41fd5f:	movsd  xmm5,QWORD PTR [rip+0xd481]        # 0x42d1e8
  41fd67:	movapd xmm2,xmm5
  41fd6b:	subsd  xmm2,xmm0
  41fd6f:	ucomisd xmm1,xmm2
  41fd73:	ja     0x4208f7
  41fd79:	mov    eax,DWORD PTR [rsp+0x9c]
  41fd80:	movsd  xmm3,QWORD PTR [rip+0xd468]        # 0x42d1f0
  41fd88:	add    eax,0x1
  41fd8b:	cmp    r9d,eax
  41fd8e:	mov    DWORD PTR [rsp+0x9c],eax
  41fd95:	jg     0x41fdcc
  41fd97:	jmp    0x41ff4e
  41fd9c:	nop    DWORD PTR [rax+0x0]
  41fda0:	movapd xmm2,xmm5
  41fda4:	subsd  xmm2,xmm0
  41fda8:	ucomisd xmm1,xmm2
  41fdac:	ja     0x4208f7
  41fdb2:	mov    eax,DWORD PTR [rsp+0x9c]
  41fdb9:	add    eax,0x1
  41fdbc:	cmp    r9d,eax
  41fdbf:	mov    DWORD PTR [rsp+0x9c],eax
  41fdc6:	jle    0x41ff4e
  41fdcc:	mulsd  xmm0,xmm3
  41fdd0:	add    rbx,0x1
  41fdd4:	pxor   xmm2,xmm2
  41fdd8:	mulsd  xmm1,xmm3
  41fddc:	cvttsd2si eax,xmm0
  41fde0:	cvtsi2sd xmm2,eax
  41fde4:	add    eax,0x30
  41fde7:	mov    BYTE PTR [rbx-0x1],al
  41fdea:	subsd  xmm0,xmm2
  41fdee:	ucomisd xmm1,xmm0
  41fdf2:	jbe    0x41fda0
  41fdf4:	ucomisd xmm0,xmm6
  41fdf8:	lea    ebp,[rcx+0x1]
  41fdfb:	jp     0x41fe03
  41fdfd:	je     0x420757
  41fe03:	mov    r15d,0x10
  41fe09:	nop    DWORD PTR [rax+0x0]
  41fe10:	mov    rcx,rsi
  41fe13:	call   0x421060
  41fe18:	cmp    QWORD PTR [rsp+0x138],0x0
  41fe21:	mov    rax,QWORD PTR [rsp+0x130]
  41fe29:	mov    BYTE PTR [rbx],0x0
  41fe2c:	mov    DWORD PTR [rax],ebp
  41fe2e:	je     0x41fe3b
  41fe30:	mov    rax,QWORD PTR [rsp+0x138]
  41fe38:	mov    QWORD PTR [rax],rbx
  41fe3b:	mov    rax,QWORD PTR [rsp+0x28]
  41fe40:	or     DWORD PTR [rax],r15d
  41fe43:	mov    rax,QWORD PTR [rsp+0x48]
  41fe48:	jmp    0x41f9c7
  41fe4d:	nop    DWORD PTR [rax]
  41fe50:	mov    DWORD PTR [rsi+0x14],0x0
  41fe57:	jmp    0x41f971
  41fe5c:	nop    DWORD PTR [rax+0x0]
  41fe60:	mov    edx,eax
  41fe62:	mov    rcx,rsi
  41fe65:	call   0x420cf0
  41fe6a:	mov    eax,DWORD PTR [rsp+0x9c]
  41fe71:	lea    r11d,[r13+rax*1+0x0]
  41fe76:	sub    r14d,eax
  41fe79:	jmp    0x41f98b
  41fe7e:	xchg   ax,ax
  41fe80:	mov    DWORD PTR [rsp+0x120],0x0
  41fe8b:	add    ecx,0x3fe
  41fe91:	cmp    ecx,0x7f7
  41fe97:	setbe  al
  41fe9a:	jmp    0x41fbaf
  41fe9f:	nop
  41fea0:	mov    DWORD PTR [rsp+0x6c],0x0
  41fea8:	jmp    0x41fb50
  41fead:	nop    DWORD PTR [rax]
  41feb0:	mov    edx,DWORD PTR [rsp+0x128]
  41feb7:	test   edx,edx
  41feb9:	jle    0x42076b
  41febf:	cmp    DWORD PTR [rsp+0x128],0xe
  41fec7:	setbe  bl
  41feca:	mov    ecx,DWORD PTR [rsp+0x128]
  41fed1:	and    ebx,eax
  41fed3:	mov    DWORD PTR [rsp+0x9c],ecx
  41feda:	mov    DWORD PTR [rsp+0x8c],ecx
  41fee1:	mov    DWORD PTR [rsp+0x68],ecx
  41fee5:	jmp    0x41fc19
  41feea:	movapd xmm0,xmm4
  41feee:	addsd  xmm0,xmm4
  41fef2:	addsd  xmm0,QWORD PTR [rip+0xd306]        # 0x42d200
  41fefa:	movq   rdx,xmm0
  41feff:	movq   rax,xmm0
  41ff04:	shr    rdx,0x20
  41ff08:	mov    eax,eax
  41ff0a:	sub    edx,0x3400000
  41ff10:	shl    rdx,0x20
  41ff14:	or     rax,rdx
  41ff17:	movapd xmm1,xmm4
  41ff1b:	mov    QWORD PTR [rsp+0x38],rax
  41ff20:	movsd  xmm0,QWORD PTR [rsp+0x38]
  41ff26:	subsd  xmm1,QWORD PTR [rip+0xd2da]        # 0x42d208
  41ff2e:	ucomisd xmm1,xmm0
  41ff32:	ja     0x420814
  41ff38:	movsd  xmm2,QWORD PTR [rip+0xd2d0]        # 0x42d210
  41ff40:	xorpd  xmm0,xmm2
  41ff44:	ucomisd xmm0,xmm1
  41ff48:	ja     0x42032d
  41ff4e:	movq   r9,xmm4
  41ff53:	mov    DWORD PTR [rsp+0x38],0x0
  41ff5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff60:	test   r11d,r11d
  41ff63:	js     0x420002
  41ff69:	movsxd rax,DWORD PTR [rsp+0x30]
  41ff6e:	cmp    eax,DWORD PTR [rbp+0x14]
  41ff71:	jg     0x420002
  41ff77:	mov    ebx,DWORD PTR [rsp+0x68]
  41ff7b:	mov    rdx,QWORD PTR [rip+0xd59e]        # 0x42d520
  41ff82:	test   ebx,ebx
  41ff84:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  41ff89:	jg     0x420693
  41ff8f:	mov    eax,DWORD PTR [rsp+0x128]
  41ff96:	shr    eax,0x1f
  41ff99:	test   al,al
  41ff9b:	je     0x420693
  41ffa1:	test   ebx,ebx
  41ffa3:	jne    0x42032d
  41ffa9:	mulsd  xmm2,QWORD PTR [rip+0xd257]        # 0x42d208
  41ffb1:	mov    QWORD PTR [rsp+0x38],r9
  41ffb6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41ffbc:	ucomisd xmm2,xmm5
  41ffc0:	jae    0x42032d
  41ffc6:	mov    ebp,DWORD PTR [rsp+0x30]
  41ffca:	xor    r12d,r12d
  41ffcd:	xor    edi,edi
  41ffcf:	add    ebp,0x2
  41ffd2:	mov    rax,QWORD PTR [rsp+0x48]
  41ffd7:	mov    r15d,0x20
  41ffdd:	lea    rbx,[rax+0x1]
  41ffe1:	mov    BYTE PTR [rax],0x31
  41ffe4:	mov    rcx,r12
  41ffe7:	call   0x421060
  41ffec:	test   rdi,rdi
  41ffef:	je     0x41fe10
  41fff5:	mov    rcx,rdi
  41fff8:	call   0x421060
  41fffd:	jmp    0x41fe10
  420002:	mov    r9d,DWORD PTR [rsp+0x60]
  420007:	test   r9d,r9d
  42000a:	je     0x420510
  420010:	mov    edx,DWORD PTR [rbp+0x4]
  420013:	sub    edi,r14d
  420016:	mov    ecx,r11d
  420019:	lea    eax,[rdi+0x1]
  42001c:	sub    ecx,edi
  42001e:	cmp    ecx,edx
  420020:	mov    DWORD PTR [rsp+0x9c],eax
  420027:	jge    0x42005c
  420029:	mov    ebx,DWORD PTR [rsp+0x120]
  420030:	lea    ecx,[rbx-0x3]
  420033:	and    ecx,0xfffffffd
  420036:	je     0x42005c
  420038:	mov    ebx,DWORD PTR [rsp+0x68]
  42003c:	sub    r11d,edx
  42003f:	lea    eax,[r11+0x1]
  420043:	test   ebx,ebx
  420045:	mov    DWORD PTR [rsp+0x9c],eax
  42004c:	setg   cl
  42004f:	cmp    ebx,eax
  420051:	setl   dl
  420054:	test   cl,dl
  420056:	je     0x42079f
  42005c:	cmp    DWORD PTR [rsp+0x120],0x1
  420064:	jle    0x42079f
  42006a:	mov    ebx,DWORD PTR [rsp+0x58]
  42006e:	mov    eax,DWORD PTR [rsp+0x68]
  420072:	mov    r12d,ebx
  420075:	sub    eax,0x1
  420078:	sub    r12d,eax
  42007b:	cmp    ebx,eax
  42007d:	jge    0x420093
  42007f:	mov    edx,eax
  420081:	sub    edx,DWORD PTR [rsp+0x58]
  420085:	xor    r12d,r12d
  420088:	add    DWORD PTR [rsp+0x88],edx
  42008f:	mov    DWORD PTR [rsp+0x58],eax
  420093:	mov    eax,DWORD PTR [rsp+0x68]
  420097:	test   eax,eax
  420099:	js     0x420a32
  42009f:	mov    ebx,DWORD PTR [rsp+0x50]
  4200a3:	mov    DWORD PTR [rsp+0x9c],eax
  4200aa:	mov    ecx,0x1
  4200af:	add    DWORD PTR [rsp+0x50],eax
  4200b3:	add    DWORD PTR [rsp+0x40],eax
  4200b7:	call   0x421190
  4200bc:	mov    rdi,rax
  4200bf:	mov    ecx,DWORD PTR [rsp+0x40]
  4200c3:	test   ecx,ecx
  4200c5:	mov    eax,ecx
  4200c7:	jle    0x4200e5
  4200c9:	test   ebx,ebx
  4200cb:	jle    0x4200e5
  4200cd:	cmp    ecx,ebx
  4200cf:	cmovg  eax,ebx
  4200d2:	sub    DWORD PTR [rsp+0x50],eax
  4200d6:	sub    ecx,eax
  4200d8:	mov    DWORD PTR [rsp+0x9c],eax
  4200df:	sub    ebx,eax
  4200e1:	mov    DWORD PTR [rsp+0x40],ecx
  4200e5:	mov    r8d,DWORD PTR [rsp+0x58]
  4200ea:	test   r8d,r8d
  4200ed:	jle    0x42013b
  4200ef:	mov    ecx,DWORD PTR [rsp+0x60]
  4200f3:	test   ecx,ecx
  4200f5:	je     0x420530
  4200fb:	test   r12d,r12d
  4200fe:	jle    0x42012e
  420100:	mov    rcx,rdi
  420103:	mov    edx,r12d
  420106:	call   0x4212f0
  42010b:	mov    rdx,rsi
  42010e:	mov    rcx,rax
  420111:	mov    rdi,rax
  420114:	call   0x4211c0
  420119:	mov    rcx,rsi
  42011c:	mov    QWORD PTR [rsp+0x70],rax
  420121:	call   0x421060
  420126:	mov    rax,QWORD PTR [rsp+0x70]
  42012b:	mov    rsi,rax
  42012e:	mov    edx,DWORD PTR [rsp+0x58]
  420132:	sub    edx,r12d
  420135:	jne    0x420534
  42013b:	mov    ecx,0x1
  420140:	call   0x421190
  420145:	mov    r12,rax
  420148:	mov    eax,DWORD PTR [rsp+0x88]
  42014f:	test   eax,eax
  420151:	jle    0x420280
  420157:	mov    rcx,r12
  42015a:	mov    edx,eax
  42015c:	call   0x4212f0
  420161:	cmp    DWORD PTR [rsp+0x120],0x1
  420169:	mov    r12,rax
  42016c:	jg     0x420178
  42016e:	cmp    r14d,0x1
  420172:	je     0x42023c
  420178:	xor    ebp,ebp
  42017a:	mov    eax,DWORD PTR [r12+0x14]
  42017f:	sub    eax,0x1
  420182:	cdqe   
  420184:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42018a:	xor    eax,0x1f
  42018d:	sub    eax,DWORD PTR [rsp+0x40]
  420191:	mov    edx,DWORD PTR [rsp+0x50]
  420195:	sub    eax,0x4
  420198:	and    eax,0x1f
  42019b:	add    edx,eax
  42019d:	mov    r13d,eax
  4201a0:	mov    DWORD PTR [rsp+0x9c],eax
  4201a7:	test   edx,edx
  4201a9:	mov    ecx,eax
  4201ab:	jle    0x4201bf
  4201ad:	mov    rcx,rsi
  4201b0:	call   0x421460
  4201b5:	mov    ecx,DWORD PTR [rsp+0x9c]
  4201bc:	mov    rsi,rax
  4201bf:	mov    edx,DWORD PTR [rsp+0x40]
  4201c3:	add    edx,ecx
  4201c5:	test   edx,edx
  4201c7:	jle    0x4201d4
  4201c9:	mov    rcx,r12
  4201cc:	call   0x421460
  4201d1:	mov    r12,rax
  4201d4:	mov    eax,DWORD PTR [rsp+0x6c]
  4201d8:	test   eax,eax
  4201da:	jne    0x420551
  4201e0:	mov    r14d,DWORD PTR [rsp+0x68]
  4201e5:	test   r14d,r14d
  4201e8:	jg     0x4203a1
  4201ee:	cmp    DWORD PTR [rsp+0x120],0x2
  4201f6:	jle    0x4203a1
  4201fc:	mov    r11d,DWORD PTR [rsp+0x68]
  420201:	test   r11d,r11d
  420204:	jne    0x420332
  42020a:	xor    r8d,r8d
  42020d:	mov    rcx,r12
  420210:	mov    edx,0x5
  420215:	call   0x4210d0
  42021a:	mov    rcx,rsi
  42021d:	mov    rdx,rax
  420220:	mov    r12,rax
  420223:	call   0x421580
  420228:	test   eax,eax
  42022a:	jle    0x420332
  420230:	mov    ebp,DWORD PTR [rsp+0x30]
  420234:	add    ebp,0x2
  420237:	jmp    0x41ffd2
  42023c:	mov    eax,DWORD PTR [rbp+0x4]
  42023f:	add    eax,0x1
  420242:	cmp    r13d,eax
  420245:	jle    0x420178
  42024b:	add    DWORD PTR [rsp+0x50],0x1
  420250:	add    DWORD PTR [rsp+0x40],0x1
  420255:	mov    ebp,0x1
  42025a:	nop    WORD PTR [rax+rax*1+0x0]
  420260:	mov    edx,DWORD PTR [rsp+0x88]
  420267:	mov    eax,0x1f
  42026c:	test   edx,edx
  42026e:	je     0x42018d
  420274:	jmp    0x42017a
  420279:	nop    DWORD PTR [rax+0x0]
  420280:	cmp    DWORD PTR [rsp+0x120],0x1
  420288:	jg     0x420290
  42028a:	cmp    r14d,0x1
  42028e:	je     0x420294
  420290:	xor    ebp,ebp
  420292:	jmp    0x420260
  420294:	mov    eax,DWORD PTR [rbp+0x4]
  420297:	xor    ebp,ebp
  420299:	add    eax,0x1
  42029c:	cmp    r13d,eax
  42029f:	jle    0x420260
  4202a1:	jmp    0x42024b
  4202a3:	cmp    DWORD PTR [rsp+0x120],0x2
  4202ab:	mov    DWORD PTR [rsp+0x60],0x0
  4202b3:	je     0x41feb0
  4202b9:	pxor   xmm0,xmm0
  4202bd:	mov    QWORD PTR [rsp+0x60],r9
  4202c2:	mov    DWORD PTR [rsp+0x68],r11d
  4202c7:	cvtsi2sd xmm0,edi
  4202cb:	mulsd  xmm0,QWORD PTR [rip+0xcf0d]        # 0x42d1e0
  4202d3:	cvttsd2si ecx,xmm0
  4202d7:	add    ecx,0x3
  4202da:	mov    DWORD PTR [rsp+0x9c],ecx
  4202e1:	call   0x41f660
  4202e6:	mov    QWORD PTR [rsp+0x48],rax
  4202eb:	mov    eax,DWORD PTR [rbp+0xc]
  4202ee:	mov    r11d,DWORD PTR [rsp+0x68]
  4202f3:	mov    r9,QWORD PTR [rsp+0x60]
  4202f8:	sub    eax,0x1
  4202fb:	mov    DWORD PTR [rsp+0x38],eax
  4202ff:	jne    0x4207ad
  420305:	mov    eax,0xffffffff
  42030a:	mov    DWORD PTR [rsp+0x60],0x1
  420312:	mov    DWORD PTR [rsp+0x128],0x0
  42031d:	mov    DWORD PTR [rsp+0x8c],eax
  420324:	mov    DWORD PTR [rsp+0x68],eax
  420328:	jmp    0x41ff60
  42032d:	xor    r12d,r12d
  420330:	xor    edi,edi
  420332:	mov    ebp,DWORD PTR [rsp+0x128]
  420339:	mov    rbx,QWORD PTR [rsp+0x48]
  42033e:	mov    r15d,0x10
  420344:	neg    ebp
  420346:	jmp    0x41ffe4
  42034b:	nop    DWORD PTR [rax+rax*1+0x0]
  420350:	mov    eax,DWORD PTR [rsp+0x30]
  420354:	sub    DWORD PTR [rsp+0x50],eax
  420358:	mov    DWORD PTR [rsp+0x88],0x0
  420363:	neg    eax
  420365:	mov    DWORD PTR [rsp+0x58],eax
  420369:	jmp    0x41fb89
  42036e:	xchg   ax,ax
  420370:	neg    eax
  420372:	mov    DWORD PTR [rsp+0x40],0x0
  42037a:	mov    DWORD PTR [rsp+0x50],eax
  42037e:	jmp    0x41fb6a
  420383:	pxor   xmm0,xmm0
  420387:	cvtsi2sd xmm0,eax
  42038b:	ucomisd xmm0,xmm1
  42038f:	jp     0x420397
  420391:	je     0x41fafb
  420397:	sub    DWORD PTR [rsp+0x30],0x1
  42039c:	jmp    0x41fafb
  4203a1:	mov    r10d,DWORD PTR [rsp+0x60]
  4203a6:	test   r10d,r10d
  4203a9:	je     0x4205b0
  4203af:	lea    edx,[rbx+r13*1]
  4203b3:	test   edx,edx
  4203b5:	jle    0x4203c2
  4203b7:	mov    rcx,rdi
  4203ba:	call   0x421460
  4203bf:	mov    rdi,rax
  4203c2:	test   ebp,ebp
  4203c4:	mov    r13,rdi
  4203c7:	jne    0x420a65
  4203cd:	mov    DWORD PTR [rsp+0x9c],0x1
  4203d8:	mov    rbx,QWORD PTR [rsp+0x48]
  4203dd:	mov    QWORD PTR [rsp+0x40],r12
  4203e2:	mov    QWORD PTR [rsp+0x50],r15
  4203e7:	jmp    0x4204ae
  4203ec:	nop    DWORD PTR [rax+0x0]
  4203f0:	mov    rcx,r8
  4203f3:	call   0x421060
  4203f8:	mov    eax,r12d
  4203fb:	or     eax,DWORD PTR [rsp+0x120]
  420402:	jne    0x42041a
  420404:	mov    ecx,DWORD PTR [rsp+0x38]
  420408:	test   ecx,ecx
  42040a:	jne    0x42041a
  42040c:	mov    rax,QWORD PTR [rsp+0x50]
  420411:	test   BYTE PTR [rax],0x1
  420414:	je     0x420bd5
  42041a:	test   r14d,r14d
  42041d:	js     0x420930
  420423:	or     r14d,DWORD PTR [rsp+0x120]
  42042b:	jne    0x42043b
  42042d:	mov    rax,QWORD PTR [rsp+0x50]
  420432:	test   BYTE PTR [rax],0x1
  420435:	je     0x420930
  42043b:	test   r12d,r12d
  42043e:	jle    0x42044b
  420440:	cmp    DWORD PTR [rsp+0x38],0x2
  420445:	jne    0x420b3f
  42044b:	add    rbx,0x1
  42044f:	mov    BYTE PTR [rbx-0x1],bpl
  420453:	mov    eax,DWORD PTR [rsp+0x68]
  420457:	cmp    DWORD PTR [rsp+0x9c],eax
  42045e:	je     0x420acb
  420464:	xor    r8d,r8d
  420467:	mov    rcx,rsi
  42046a:	mov    edx,0xa
  42046f:	call   0x4210d0
  420474:	xor    r8d,r8d
  420477:	cmp    rdi,r13
  42047a:	mov    rsi,rax
  42047d:	mov    edx,0xa
  420482:	mov    rcx,rdi
  420485:	je     0x420520
  42048b:	call   0x4210d0
  420490:	mov    rcx,r13
  420493:	xor    r8d,r8d
  420496:	mov    edx,0xa
  42049b:	mov    rdi,rax
  42049e:	call   0x4210d0
  4204a3:	mov    r13,rax
  4204a6:	add    DWORD PTR [rsp+0x9c],0x1
  4204ae:	mov    r12,QWORD PTR [rsp+0x40]
  4204b3:	mov    rcx,rsi
  4204b6:	mov    rdx,r12
  4204b9:	call   0x41f700
  4204be:	mov    rdx,rdi
  4204c1:	mov    rcx,rsi
  4204c4:	mov    r15d,eax
  4204c7:	lea    ebp,[rax+0x30]
  4204ca:	call   0x421580
  4204cf:	mov    rcx,r12
  4204d2:	mov    rdx,r13
  4204d5:	mov    r14d,eax
  4204d8:	call   0x4215d0
  4204dd:	mov    r9d,DWORD PTR [rax+0x10]
  4204e1:	mov    r8,rax
  4204e4:	mov    r12d,0x1
  4204ea:	test   r9d,r9d
  4204ed:	jne    0x4203f0
  4204f3:	mov    rdx,rax
  4204f6:	mov    rcx,rsi
  4204f9:	mov    QWORD PTR [rsp+0x58],rax
  4204fe:	call   0x421580
  420503:	mov    r8,QWORD PTR [rsp+0x58]
  420508:	mov    r12d,eax
  42050b:	jmp    0x4203f0
  420510:	mov    r12d,DWORD PTR [rsp+0x58]
  420515:	mov    ebx,DWORD PTR [rsp+0x50]
  420519:	xor    edi,edi
  42051b:	jmp    0x4200bf
  420520:	call   0x4210d0
  420525:	mov    rdi,rax
  420528:	mov    r13,rax
  42052b:	jmp    0x4204a6
  420530:	mov    edx,DWORD PTR [rsp+0x58]
  420534:	mov    rcx,rsi
  420537:	call   0x4212f0
  42053c:	mov    rsi,rax
  42053f:	jmp    0x42013b
  420544:	mov    DWORD PTR [rsp+0x60],0x0
  42054c:	jmp    0x41fbe7
  420551:	mov    rdx,r12
  420554:	mov    rcx,rsi
  420557:	call   0x421580
  42055c:	test   eax,eax
  42055e:	jns    0x4201e0
  420564:	xor    r8d,r8d
  420567:	mov    rcx,rsi
  42056a:	mov    edx,0xa
  42056f:	sub    DWORD PTR [rsp+0x30],0x1
  420574:	call   0x4210d0
  420579:	mov    rsi,rax
  42057c:	mov    eax,DWORD PTR [rsp+0x60]
  420580:	test   eax,eax
  420582:	jne    0x420c48
  420588:	mov    eax,DWORD PTR [rsp+0x8c]
  42058f:	test   eax,eax
  420591:	jg     0x4205a5
  420593:	cmp    DWORD PTR [rsp+0x120],0x2
  42059b:	mov    DWORD PTR [rsp+0x68],eax
  42059f:	jg     0x4201fc
  4205a5:	mov    eax,DWORD PTR [rsp+0x8c]
  4205ac:	mov    DWORD PTR [rsp+0x68],eax
  4205b0:	mov    DWORD PTR [rsp+0x9c],0x1
  4205bb:	mov    rbx,QWORD PTR [rsp+0x48]
  4205c0:	mov    r13d,DWORD PTR [rsp+0x68]
  4205c5:	jmp    0x4205eb
  4205c7:	nop    WORD PTR [rax+rax*1+0x0]
  4205d0:	mov    rcx,rsi
  4205d3:	xor    r8d,r8d
  4205d6:	mov    edx,0xa
  4205db:	call   0x4210d0
  4205e0:	add    DWORD PTR [rsp+0x9c],0x1
  4205e8:	mov    rsi,rax
  4205eb:	mov    rdx,r12
  4205ee:	mov    rcx,rsi
  4205f1:	add    rbx,0x1
  4205f5:	call   0x41f700
  4205fa:	lea    ebp,[rax+0x30]
  4205fd:	mov    BYTE PTR [rbx-0x1],bpl
  420601:	cmp    DWORD PTR [rsp+0x9c],r13d
  420609:	jl     0x4205d0
  42060b:	xor    r14d,r14d
  42060e:	mov    eax,DWORD PTR [rsp+0x38]
  420612:	test   eax,eax
  420614:	je     0x4209dc
  42061a:	cmp    eax,0x2
  42061d:	je     0x420a0c
  420623:	cmp    DWORD PTR [rsi+0x14],0x1
  420627:	jle    0x420ba3
  42062d:	movzx  edx,BYTE PTR [rbx-0x1]
  420631:	mov    rcx,QWORD PTR [rsp+0x48]
  420636:	jmp    0x420650
  420638:	nop    DWORD PTR [rax+rax*1+0x0]
  420640:	cmp    rax,rcx
  420643:	je     0x4207fc
  420649:	movzx  edx,BYTE PTR [rax-0x1]
  42064d:	mov    rbx,rax
  420650:	cmp    dl,0x39
  420653:	lea    rax,[rbx-0x1]
  420657:	je     0x420640
  420659:	add    edx,0x1
  42065c:	mov    r15d,0x20
  420662:	mov    BYTE PTR [rax],dl
  420664:	mov    rcx,r12
  420667:	call   0x421060
  42066c:	test   rdi,rdi
  42066f:	je     0x42075f
  420675:	cmp    r14,rdi
  420678:	je     0x420687
  42067a:	test   r14,r14
  42067d:	je     0x420687
  42067f:	mov    rcx,r14
  420682:	call   0x421060
  420687:	mov    ebp,DWORD PTR [rsp+0x30]
  42068b:	add    ebp,0x1
  42068e:	jmp    0x41fff5
  420693:	mov    QWORD PTR [rsp+0x40],r9
  420698:	mov    rdi,QWORD PTR [rsp+0x48]
  42069d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  4206a3:	mov    DWORD PTR [rsp+0x9c],0x1
  4206ae:	movapd xmm1,xmm0
  4206b2:	mov    rbx,rdi
  4206b5:	add    rbx,0x1
  4206b9:	divsd  xmm1,xmm2
  4206bd:	cvttsd2si eax,xmm1
  4206c1:	pxor   xmm1,xmm1
  4206c5:	cvtsi2sd xmm1,eax
  4206c9:	lea    edx,[rax+0x30]
  4206cc:	mov    BYTE PTR [rdi],dl
  4206ce:	mulsd  xmm1,xmm2
  4206d2:	subsd  xmm0,xmm1
  4206d6:	ucomisd xmm0,xmm6
  4206da:	jp     0x4206de
  4206dc:	je     0x420750
  4206de:	mov    edx,DWORD PTR [rsp+0x9c]
  4206e5:	cmp    DWORD PTR [rsp+0x68],edx
  4206e9:	je     0x4207d7
  4206ef:	movsd  xmm3,QWORD PTR [rip+0xcaf9]        # 0x42d1f0
  4206f7:	movapd xmm4,xmm6
  4206fb:	mov    ecx,DWORD PTR [rsp+0x68]
  4206ff:	jmp    0x420710
  420701:	mov    edx,DWORD PTR [rsp+0x9c]
  420708:	cmp    ecx,edx
  42070a:	je     0x4207d7
  420710:	mulsd  xmm0,xmm3
  420714:	add    edx,0x1
  420717:	add    rbx,0x1
  42071b:	mov    DWORD PTR [rsp+0x9c],edx
  420722:	movapd xmm1,xmm0
  420726:	divsd  xmm1,xmm2
  42072a:	cvttsd2si eax,xmm1
  42072e:	pxor   xmm1,xmm1
  420732:	cvtsi2sd xmm1,eax
  420736:	lea    edx,[rax+0x30]
  420739:	mov    BYTE PTR [rbx-0x1],dl
  42073c:	mulsd  xmm1,xmm2
  420740:	subsd  xmm0,xmm1
  420744:	ucomisd xmm0,xmm6
  420748:	jp     0x420701
  42074a:	ucomisd xmm0,xmm4
  42074e:	jne    0x420701
  420750:	mov    ebp,DWORD PTR [rsp+0x30]
  420754:	add    ebp,0x1
  420757:	xor    r15d,r15d
  42075a:	jmp    0x41fe10
  42075f:	mov    ebp,DWORD PTR [rsp+0x30]
  420763:	add    ebp,0x1
  420766:	jmp    0x41fe10
  42076b:	mov    ebx,0x1
  420770:	mov    DWORD PTR [rsp+0x128],0x1
  42077b:	jmp    0x41feca
  420780:	cmp    DWORD PTR [rsp+0x68],0xe
  420785:	mov    DWORD PTR [rsp+0x9c],0x1
  420790:	mov    ecx,0x1
  420795:	setbe  bl
  420798:	and    ebx,eax
  42079a:	jmp    0x41fc19
  42079f:	mov    r12d,DWORD PTR [rsp+0x58]
  4207a4:	mov    ebx,DWORD PTR [rsp+0x50]
  4207a8:	jmp    0x4200aa
  4207ad:	mov    eax,0xffffffff
  4207b2:	xor    ebx,ebx
  4207b4:	mov    DWORD PTR [rsp+0x60],0x1
  4207bc:	mov    DWORD PTR [rsp+0x8c],eax
  4207c3:	mov    DWORD PTR [rsp+0x68],eax
  4207c7:	mov    DWORD PTR [rsp+0x128],0x0
  4207d2:	jmp    0x41fc43
  4207d7:	mov    r10d,DWORD PTR [rsp+0x38]
  4207dc:	test   r10d,r10d
  4207df:	je     0x420a9e
  4207e5:	cmp    DWORD PTR [rsp+0x38],0x1
  4207ea:	je     0x420b91
  4207f0:	mov    ebp,DWORD PTR [rsp+0x30]
  4207f4:	add    ebp,0x1
  4207f7:	jmp    0x41fe03
  4207fc:	mov    rax,QWORD PTR [rsp+0x48]
  420801:	add    DWORD PTR [rsp+0x30],0x1
  420806:	mov    r15d,0x20
  42080c:	mov    BYTE PTR [rax],0x31
  42080f:	jmp    0x420664
  420814:	mov    ebp,0x2
  420819:	xor    r12d,r12d
  42081c:	xor    edi,edi
  42081e:	jmp    0x41ffd2
  420823:	mov    r10,QWORD PTR [rip+0xccf6]        # 0x42d520
  42082a:	mov    QWORD PTR [rsp+0x38],rax
  42082f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  420835:	mov    DWORD PTR [rsp+0x9c],0x1
  420840:	mov    rbx,QWORD PTR [rsp+0x48]
  420845:	movsd  xmm1,QWORD PTR [rip+0xc9a3]        # 0x42d1f0
  42084d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  420853:	jmp    0x420863
  420855:	mulsd  xmm0,xmm1
  420859:	add    edx,0x1
  42085c:	mov    DWORD PTR [rsp+0x9c],edx
  420863:	cvttsd2si eax,xmm0
  420867:	test   eax,eax
  420869:	je     0x420877
  42086b:	pxor   xmm2,xmm2
  42086f:	cvtsi2sd xmm2,eax
  420873:	subsd  xmm0,xmm2
  420877:	add    rbx,0x1
  42087b:	add    eax,0x30
  42087e:	mov    BYTE PTR [rbx-0x1],al
  420881:	mov    edx,DWORD PTR [rsp+0x9c]
  420888:	cmp    edx,r9d
  42088b:	jne    0x420855
  42088d:	movsd  xmm1,QWORD PTR [rip+0xc98b]        # 0x42d220
  420895:	movapd xmm2,xmm3
  420899:	addsd  xmm2,xmm1
  42089d:	ucomisd xmm0,xmm2
  4208a1:	ja     0x4208f7
  4208a3:	subsd  xmm1,xmm3
  4208a7:	ucomisd xmm1,xmm0
  4208ab:	jbe    0x41ff4e
  4208b1:	ucomisd xmm0,xmm6
  4208b5:	jp     0x420c3d
  4208bb:	jne    0x420c3d
  4208c1:	xor    r15d,r15d
  4208c4:	jmp    0x4208d7
  4208c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208d0:	movzx  eax,BYTE PTR [rbx-0x2]
  4208d4:	mov    rbx,rdx
  4208d7:	cmp    al,0x30
  4208d9:	lea    rdx,[rbx-0x1]
  4208dd:	je     0x4208d0
  4208df:	lea    ebp,[rcx+0x1]
  4208e2:	jmp    0x41fe10
  4208e7:	test   al,0x1
  4208e9:	mov    ecx,DWORD PTR [rsp+0x30]
  4208ed:	movzx  eax,BYTE PTR [rbx-0x1]
  4208f1:	je     0x420c3d
  4208f7:	mov    r8,QWORD PTR [rsp+0x48]
  4208fc:	jmp    0x420910
  4208fe:	xchg   ax,ax
  420900:	cmp    rdx,r8
  420903:	je     0x420a4c
  420909:	movzx  eax,BYTE PTR [rdx-0x1]
  42090d:	mov    rbx,rdx
  420910:	cmp    al,0x39
  420912:	lea    rdx,[rbx-0x1]
  420916:	je     0x420900
  420918:	mov    QWORD PTR [rsp+0x48],r8
  42091d:	add    eax,0x1
  420920:	mov    BYTE PTR [rdx],al
  420922:	lea    ebp,[rcx+0x1]
  420925:	mov    r15d,0x20
  42092b:	jmp    0x41fe10
  420930:	mov    edx,DWORD PTR [rsp+0x38]
  420934:	mov    eax,r12d
  420937:	mov    r14d,ebp
  42093a:	mov    r12,QWORD PTR [rsp+0x40]
  42093f:	test   edx,edx
  420941:	je     0x420b71
  420947:	cmp    DWORD PTR [rsi+0x14],0x1
  42094b:	jle    0x420b67
  420951:	cmp    DWORD PTR [rsp+0x38],0x2
  420956:	jne    0x4209a7
  420958:	jmp    0x420b86
  42095d:	nop    DWORD PTR [rax]
  420960:	add    rbx,0x1
  420964:	xor    r8d,r8d
  420967:	mov    rcx,r13
  42096a:	mov    BYTE PTR [rbx-0x1],r14b
  42096e:	mov    edx,0xa
  420973:	call   0x4210d0
  420978:	cmp    rdi,r13
  42097b:	mov    rcx,rsi
  42097e:	mov    edx,0xa
  420983:	cmove  rdi,rax
  420987:	xor    r8d,r8d
  42098a:	mov    rbp,rax
  42098d:	call   0x4210d0
  420992:	mov    rdx,r12
  420995:	mov    rcx,rax
  420998:	mov    rsi,rax
  42099b:	call   0x41f700
  4209a0:	lea    r14d,[rax+0x30]
  4209a4:	mov    r13,rbp
  4209a7:	mov    rdx,r13
  4209aa:	mov    rcx,r12
  4209ad:	call   0x421580
  4209b2:	test   eax,eax
  4209b4:	jg     0x420960
  4209b6:	cmp    r14d,0x39
  4209ba:	je     0x420bb6
  4209c0:	add    r14d,0x1
  4209c4:	mov    r15d,0x20
  4209ca:	mov    BYTE PTR [rbx],r14b
  4209cd:	mov    r14,rdi
  4209d0:	add    rbx,0x1
  4209d4:	mov    rdi,r13
  4209d7:	jmp    0x420664
  4209dc:	mov    rcx,rsi
  4209df:	mov    edx,0x1
  4209e4:	call   0x421460
  4209e9:	mov    rdx,r12
  4209ec:	mov    rcx,rax
  4209ef:	mov    rsi,rax
  4209f2:	call   0x421580
  4209f7:	cmp    eax,0x0
  4209fa:	jg     0x42062d
  420a00:	jne    0x420a0c
  420a02:	and    bpl,0x1
  420a06:	jne    0x42062d
  420a0c:	cmp    DWORD PTR [rsi+0x14],0x1
  420a10:	mov    r15d,0x10
  420a16:	jg     0x420a23
  420a18:	jmp    0x420cad
  420a1d:	nop    DWORD PTR [rax]
  420a20:	mov    rbx,rax
  420a23:	cmp    BYTE PTR [rbx-0x1],0x30
  420a27:	lea    rax,[rbx-0x1]
  420a2b:	je     0x420a20
  420a2d:	jmp    0x420664
  420a32:	mov    ebx,DWORD PTR [rsp+0x50]
  420a36:	mov    DWORD PTR [rsp+0x9c],0x0
  420a41:	xor    eax,eax
  420a43:	sub    ebx,DWORD PTR [rsp+0x68]
  420a47:	jmp    0x4200aa
  420a4c:	mov    QWORD PTR [rsp+0x48],r8
  420a51:	add    ecx,0x1
  420a54:	mov    BYTE PTR [r8],0x30
  420a58:	mov    rdx,r8
  420a5b:	mov    eax,0x31
  420a60:	jmp    0x420920
  420a65:	mov    ecx,DWORD PTR [rdi+0x8]
  420a68:	call   0x420f50
  420a6d:	lea    rcx,[rax+0x10]
  420a71:	mov    rbx,rax
  420a74:	movsxd rax,DWORD PTR [rdi+0x14]
  420a78:	lea    rdx,[rdi+0x10]
  420a7c:	lea    r8,[rax*4+0x8]
  420a84:	call   0x421e08
  420a89:	mov    edx,0x1
  420a8e:	mov    rcx,rbx
  420a91:	call   0x421460
  420a96:	mov    r13,rax
  420a99:	jmp    0x4203cd
  420a9e:	addsd  xmm0,xmm0
  420aa2:	ucomisd xmm0,xmm2
  420aa6:	ja     0x420b91
  420aac:	ucomisd xmm2,xmm0
  420ab0:	jp     0x420ab8
  420ab2:	je     0x4208e7
  420ab8:	movzx  eax,BYTE PTR [rbx-0x1]
  420abc:	mov    ecx,DWORD PTR [rsp+0x30]
  420ac0:	mov    r15d,0x10
  420ac6:	jmp    0x4208d7
  420acb:	mov    r14,rdi
  420ace:	mov    r12,QWORD PTR [rsp+0x40]
  420ad3:	mov    rdi,r13
  420ad6:	jmp    0x42060e
  420adb:	mov    eax,DWORD PTR [rsp+0x68]
  420adf:	test   eax,eax
  420ae1:	je     0x41feea
  420ae7:	mov    r9d,DWORD PTR [rsp+0x8c]
  420aef:	test   r9d,r9d
  420af2:	jle    0x41ff4e
  420af8:	movsd  xmm0,QWORD PTR [rip+0xc6f0]        # 0x42d1f0
  420b00:	mov    ecx,0xffffffff
  420b05:	movsd  xmm1,QWORD PTR [rip+0xc6eb]        # 0x42d1f8
  420b0d:	mulsd  xmm0,xmm4
  420b11:	mulsd  xmm1,xmm0
  420b15:	addsd  xmm1,QWORD PTR [rip+0xc6e3]        # 0x42d200
  420b1d:	movq   rdx,xmm1
  420b22:	movq   rax,xmm1
  420b27:	shr    rdx,0x20
  420b2b:	mov    eax,eax
  420b2d:	sub    edx,0x3400000
  420b33:	shl    rdx,0x20
  420b37:	or     rax,rdx
  420b3a:	jmp    0x41fcf2
  420b3f:	cmp    ebp,0x39
  420b42:	mov    r12,QWORD PTR [rsp+0x40]
  420b47:	mov    rax,rbx
  420b4a:	je     0x420bb9
  420b4c:	add    ebp,0x1
  420b4f:	mov    r14,rdi
  420b52:	add    rbx,0x1
  420b56:	mov    BYTE PTR [rax],bpl
  420b59:	mov    rdi,r13
  420b5c:	mov    r15d,0x20
  420b62:	jmp    0x420664
  420b67:	cmp    DWORD PTR [rsi+0x18],0x0
  420b6b:	jne    0x420951
  420b71:	test   eax,eax
  420b73:	jg     0x420c09
  420b79:	xor    r15d,r15d
  420b7c:	cmp    DWORD PTR [rsi+0x14],0x1
  420b80:	jle    0x420c88
  420b86:	mov    r15d,0x10
  420b8c:	jmp    0x4209ca
  420b91:	movzx  eax,BYTE PTR [rbx-0x1]
  420b95:	mov    ecx,DWORD PTR [rsp+0x30]
  420b99:	mov    r8,QWORD PTR [rsp+0x48]
  420b9e:	jmp    0x420910
  420ba3:	mov    eax,DWORD PTR [rsi+0x18]
  420ba6:	test   eax,eax
  420ba8:	jne    0x42062d
  420bae:	xor    r15d,r15d
  420bb1:	jmp    0x420a23
  420bb6:	mov    rax,rbx
  420bb9:	mov    r14,rdi
  420bbc:	add    rbx,0x1
  420bc0:	mov    rdi,r13
  420bc3:	mov    BYTE PTR [rax],0x39
  420bc6:	mov    edx,0x39
  420bcb:	mov    rcx,QWORD PTR [rsp+0x48]
  420bd0:	jmp    0x420650
  420bd5:	cmp    ebp,0x39
  420bd8:	mov    r12,QWORD PTR [rsp+0x40]
  420bdd:	mov    rax,rbx
  420be0:	je     0x420bb6
  420be2:	test   r14d,r14d
  420be5:	jle    0x420cc0
  420beb:	mov    ebp,r15d
  420bee:	mov    r15d,0x20
  420bf4:	add    ebp,0x31
  420bf7:	mov    r14,rdi
  420bfa:	add    rbx,0x1
  420bfe:	mov    BYTE PTR [rax],bpl
  420c01:	mov    rdi,r13
  420c04:	jmp    0x420664
  420c09:	mov    rcx,rsi
  420c0c:	mov    edx,0x1
  420c11:	call   0x421460
  420c16:	mov    rdx,r12
  420c19:	mov    rcx,rax
  420c1c:	mov    rsi,rax
  420c1f:	call   0x421580
  420c24:	cmp    eax,0x0
  420c27:	jle    0x420c9a
  420c29:	cmp    ebp,0x39
  420c2c:	je     0x420bb6
  420c2e:	lea    r14d,[rbp+0x1]
  420c32:	mov    r15d,0x20
  420c38:	jmp    0x420b7c
  420c3d:	mov    r15d,0x10
  420c43:	jmp    0x4208d7
  420c48:	xor    r8d,r8d
  420c4b:	mov    rcx,rdi
  420c4e:	mov    edx,0xa
  420c53:	call   0x4210d0
  420c58:	mov    rdi,rax
  420c5b:	mov    eax,DWORD PTR [rsp+0x8c]
  420c62:	test   eax,eax
  420c64:	jg     0x420c78
  420c66:	cmp    DWORD PTR [rsp+0x120],0x2
  420c6e:	mov    DWORD PTR [rsp+0x68],eax
  420c72:	jg     0x4201fc
  420c78:	mov    eax,DWORD PTR [rsp+0x8c]
  420c7f:	mov    DWORD PTR [rsp+0x68],eax
  420c83:	jmp    0x4203af
  420c88:	cmp    DWORD PTR [rsi+0x18],0x0
  420c8c:	mov    eax,0x10
  420c91:	cmovne r15d,eax
  420c95:	jmp    0x4209ca
  420c9a:	jne    0x420ca2
  420c9c:	test   bpl,0x1
  420ca0:	jne    0x420c29
  420ca2:	mov    r15d,0x20
  420ca8:	jmp    0x420b7c
  420cad:	cmp    DWORD PTR [rsi+0x18],0x1
  420cb1:	sbb    r15d,r15d
  420cb4:	not    r15d
  420cb7:	and    r15d,0x10
  420cbb:	jmp    0x420a23
  420cc0:	cmp    DWORD PTR [rsi+0x14],0x1
  420cc4:	mov    r15d,0x10
  420cca:	jg     0x420bf7
  420cd0:	cmp    DWORD PTR [rsi+0x18],0x1
  420cd4:	sbb    r15d,r15d
  420cd7:	not    r15d
  420cda:	and    r15d,0x10
  420cde:	jmp    0x420bf7
  420ce3:	xor    eax,eax
  420ce5:	jmp    0x41f9c7
  420cea:	nop
  420ceb:	nop
  420cec:	nop
  420ced:	nop
  420cee:	nop
  420cef:	nop
  420cf0:	push   rbp
  420cf1:	push   rdi
  420cf2:	push   rsi
  420cf3:	push   rbx
  420cf4:	mov    rsi,rcx
  420cf7:	lea    r10,[rcx+0x18]
  420cfb:	movsxd rcx,DWORD PTR [rcx+0x14]
  420cff:	mov    eax,edx
  420d01:	sar    eax,0x5
  420d04:	cmp    eax,ecx
  420d06:	jge    0x420d90
  420d0c:	cdqe   
  420d0e:	and    edx,0x1f
  420d11:	lea    rbx,[r10+rcx*4]
  420d15:	lea    rdi,[r10+rax*4]
  420d19:	je     0x420da3
  420d1f:	mov    r9d,DWORD PTR [rdi]
  420d22:	lea    r8,[rdi+0x4]
  420d26:	mov    ebp,0x20
  420d2b:	mov    ecx,edx
  420d2d:	sub    ebp,edx
  420d2f:	shr    r9d,cl
  420d32:	cmp    rbx,r8
  420d35:	jbe    0x420de8
  420d3b:	mov    r11,r10
  420d3e:	xchg   ax,ax
  420d40:	mov    eax,DWORD PTR [r8]
  420d43:	mov    ecx,ebp
  420d45:	add    r11,0x4
  420d49:	add    r8,0x4
  420d4d:	shl    eax,cl
  420d4f:	mov    ecx,edx
  420d51:	or     eax,r9d
  420d54:	mov    DWORD PTR [r11-0x4],eax
  420d58:	mov    r9d,DWORD PTR [r8-0x4]
  420d5c:	shr    r9d,cl
  420d5f:	cmp    rbx,r8
  420d62:	ja     0x420d40
  420d64:	sub    rbx,rdi
  420d67:	lea    rax,[rbx-0x5]
  420d6b:	shr    rax,0x2
  420d6f:	lea    rax,[r10+rax*4+0x4]
  420d74:	test   r9d,r9d
  420d77:	mov    DWORD PTR [rax],r9d
  420d7a:	je     0x420d80
  420d7c:	add    rax,0x4
  420d80:	sub    rax,r10
  420d83:	shr    rax,0x2
  420d87:	jmp    0x420ddc
  420d89:	nop    DWORD PTR [rax+0x0]
  420d90:	mov    DWORD PTR [rsi+0x14],0x0
  420d97:	mov    DWORD PTR [rsi+0x18],0x0
  420d9e:	pop    rbx
  420d9f:	pop    rsi
  420da0:	pop    rdi
  420da1:	pop    rbp
  420da2:	ret    
  420da3:	cmp    rbx,rdi
  420da6:	mov    rdx,r10
  420da9:	mov    rax,rdi
  420dac:	jbe    0x420d90
  420dae:	xchg   ax,ax
  420db0:	add    rax,0x4
  420db4:	mov    r8d,DWORD PTR [rax-0x4]
  420db8:	add    rdx,0x4
  420dbc:	cmp    rbx,rax
  420dbf:	mov    DWORD PTR [rdx-0x4],r8d
  420dc3:	ja     0x420db0
  420dc5:	not    rdi
  420dc8:	lea    rax,[rdi+rbx*1]
  420dcc:	shr    rax,0x2
  420dd0:	lea    rax,[rax*4+0x4]
  420dd8:	shr    rax,0x2
  420ddc:	test   eax,eax
  420dde:	mov    DWORD PTR [rsi+0x14],eax
  420de1:	je     0x420d97
  420de3:	pop    rbx
  420de4:	pop    rsi
  420de5:	pop    rdi
  420de6:	pop    rbp
  420de7:	ret    
  420de8:	mov    rax,r10
  420deb:	jmp    0x420d74
  420ded:	nop    DWORD PTR [rax]
  420df0:	movsxd rax,DWORD PTR [rcx+0x14]
  420df4:	lea    rdx,[rcx+0x18]
  420df8:	lea    r8,[rdx+rax*4]
  420dfc:	cmp    rdx,r8
  420dff:	jae    0x420e2b
  420e01:	mov    ecx,DWORD PTR [rcx+0x18]
  420e04:	xor    eax,eax
  420e06:	test   ecx,ecx
  420e08:	je     0x420e16
  420e0a:	jmp    0x420e24
  420e0c:	nop    DWORD PTR [rax+0x0]
  420e10:	mov    ecx,DWORD PTR [rdx]
  420e12:	test   ecx,ecx
  420e14:	jne    0x420e24
  420e16:	add    rdx,0x4
  420e1a:	add    eax,0x20
  420e1d:	cmp    r8,rdx
  420e20:	ja     0x420e10
  420e22:	repz ret 
  420e24:	tzcnt  ecx,ecx
  420e28:	add    eax,ecx
  420e2a:	ret    
  420e2b:	xor    eax,eax
  420e2d:	ret    
  420e2e:	nop
  420e2f:	nop
  420e30:	push   rsi
  420e31:	push   rbx
  420e32:	sub    rsp,0x28
  420e36:	mov    eax,DWORD PTR [rip+0x16194]        # 0x436fd0
  420e3c:	movsxd rsi,ecx
  420e3f:	cmp    eax,0x2
  420e42:	je     0x420ead
  420e44:	test   eax,eax
  420e46:	je     0x420e72
  420e48:	cmp    eax,0x1
  420e4b:	jne    0x420e6b
  420e4d:	mov    rbx,QWORD PTR [rip+0x180b0]        # 0x438f04
  420e54:	mov    ecx,0x1
  420e59:	call   rbx
  420e5b:	mov    eax,DWORD PTR [rip+0x1616f]        # 0x436fd0
  420e61:	cmp    eax,0x1
  420e64:	je     0x420e54
  420e66:	cmp    eax,0x2
  420e69:	je     0x420ead
  420e6b:	add    rsp,0x28
  420e6f:	pop    rbx
  420e70:	pop    rsi
  420e71:	ret    
  420e72:	mov    al,0x1
  420e74:	xchg   DWORD PTR [rip+0x16156],eax        # 0x436fd0
  420e7a:	test   eax,eax
  420e7c:	jne    0x420ed0
  420e7e:	lea    rcx,[rip+0x1617b]        # 0x437000
  420e85:	mov    rbx,QWORD PTR [rip+0x18018]        # 0x438ea4
  420e8c:	call   rbx
  420e8e:	lea    rcx,[rip+0x16193]        # 0x437028
  420e95:	call   rbx
  420e97:	lea    rcx,[rip+0x62]        # 0x420f00
  420e9e:	call   0x41b410
  420ea3:	mov    DWORD PTR [rip+0x16123],0x2        # 0x436fd0
  420ead:	lea    rdx,[rsi+rsi*4]
  420eb1:	lea    rax,[rip+0x16148]        # 0x437000
  420eb8:	lea    rcx,[rax+rdx*8]
  420ebc:	mov    rax,QWORD PTR [rip+0x17f59]        # 0x438e1c
  420ec3:	add    rsp,0x28
  420ec7:	pop    rbx
  420ec8:	pop    rsi
  420ec9:	rex.W jmp rax
  420ecc:	nop    DWORD PTR [rax+0x0]
  420ed0:	cmp    eax,0x2
  420ed3:	je     0x420ef0
  420ed5:	mov    eax,DWORD PTR [rip+0x160f5]        # 0x436fd0
  420edb:	cmp    eax,0x1
  420ede:	je     0x420e4d
  420ee4:	jmp    0x420e66
  420ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ef0:	mov    DWORD PTR [rip+0x160d6],0x2        # 0x436fd0
  420efa:	jmp    0x420ead
  420efc:	nop    DWORD PTR [rax+0x0]
  420f00:	push   rbx
  420f01:	sub    rsp,0x20
  420f05:	mov    eax,0x3
  420f0a:	xchg   DWORD PTR [rip+0x160c0],eax        # 0x436fd0
  420f10:	cmp    eax,0x2
  420f13:	je     0x420f20
  420f15:	add    rsp,0x20
  420f19:	pop    rbx
  420f1a:	ret    
  420f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  420f20:	mov    rbx,QWORD PTR [rip+0x17eed]        # 0x438e14
  420f27:	lea    rcx,[rip+0x160d2]        # 0x437000
  420f2e:	call   rbx
  420f30:	lea    rcx,[rip+0x160f1]        # 0x437028
  420f37:	mov    rax,rbx
  420f3a:	add    rsp,0x20
  420f3e:	pop    rbx
  420f3f:	rex.W jmp rax
  420f42:	nop    DWORD PTR [rax+0x0]
  420f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f50:	push   rdi
  420f51:	push   rsi
  420f52:	push   rbx
  420f53:	sub    rsp,0x20
  420f57:	mov    ebx,ecx
  420f59:	xor    ecx,ecx
  420f5b:	call   0x420e30
  420f60:	cmp    ebx,0x9
  420f63:	jg     0x420fa0
  420f65:	lea    rdx,[rip+0x16014]        # 0x436f80
  420f6c:	movsxd rcx,ebx
  420f6f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  420f73:	test   rdi,rdi
  420f76:	je     0x421000
  420f7c:	cmp    DWORD PTR [rip+0x1604d],0x2        # 0x436fd0
  420f83:	mov    r8,QWORD PTR [rdi]
  420f86:	mov    QWORD PTR [rdx+rcx*8],r8
  420f8a:	jne    0x420fe6
  420f8c:	lea    rcx,[rip+0x1606d]        # 0x437000
  420f93:	call   QWORD PTR [rip+0x17f1b]        # 0x438eb4
  420f99:	jmp    0x420fe6
  420f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  420fa0:	mov    eax,0x1
  420fa5:	mov    ecx,ebx
  420fa7:	shl    eax,cl
  420fa9:	mov    esi,eax
  420fab:	lea    eax,[rax-0x1]
  420fae:	cdqe   
  420fb0:	lea    rdx,[rax*4+0x27]
  420fb8:	shr    rdx,0x3
  420fbc:	mov    edx,edx
  420fbe:	lea    rcx,[rdx*8+0x0]
  420fc6:	call   0x421e18
  420fcb:	test   rax,rax
  420fce:	mov    rdi,rax
  420fd1:	je     0x42105a
  420fd7:	cmp    DWORD PTR [rip+0x15ff2],0x2        # 0x436fd0
  420fde:	mov    DWORD PTR [rdi+0x8],ebx
  420fe1:	mov    DWORD PTR [rdi+0xc],esi
  420fe4:	je     0x420f8c
  420fe6:	mov    DWORD PTR [rdi+0x14],0x0
  420fed:	mov    DWORD PTR [rdi+0x10],0x0
  420ff4:	mov    rax,rdi
  420ff7:	add    rsp,0x20
  420ffb:	pop    rbx
  420ffc:	pop    rsi
  420ffd:	pop    rdi
  420ffe:	ret    
  420fff:	nop
  421000:	mov    ecx,ebx
  421002:	mov    eax,0x1
  421007:	mov    rdi,QWORD PTR [rip+0x2e02]        # 0x423e10
  42100e:	shl    eax,cl
  421010:	lea    rcx,[rip+0x15669]        # 0x436680
  421017:	lea    edx,[rax-0x1]
  42101a:	mov    esi,eax
  42101c:	mov    rax,rdi
  42101f:	movsxd rdx,edx
  421022:	sub    rax,rcx
  421025:	lea    rdx,[rdx*4+0x27]
  42102d:	mov    rcx,rax
  421030:	sar    rcx,0x3
  421034:	shr    rdx,0x3
  421038:	mov    edx,edx
  42103a:	add    rcx,rdx
  42103d:	cmp    rcx,0x120
  421044:	ja     0x420fbe
  42104a:	lea    rdx,[rdi+rdx*8]
  42104e:	mov    QWORD PTR [rip+0x2dbb],rdx        # 0x423e10
  421055:	jmp    0x420fd7
  42105a:	xor    eax,eax
  42105c:	jmp    0x420ff7
  42105e:	xchg   ax,ax
  421060:	push   rbx
  421061:	sub    rsp,0x20
  421065:	test   rcx,rcx
  421068:	je     0x421099
  42106a:	cmp    DWORD PTR [rcx+0x8],0x9
  42106e:	jg     0x4210a0
  421070:	mov    rbx,rcx
  421073:	xor    ecx,ecx
  421075:	call   0x420e30
  42107a:	movsxd rdx,DWORD PTR [rbx+0x8]
  42107e:	lea    rax,[rip+0x15efb]        # 0x436f80
  421085:	cmp    DWORD PTR [rip+0x15f44],0x2        # 0x436fd0
  42108c:	mov    rcx,QWORD PTR [rax+rdx*8]
  421090:	mov    QWORD PTR [rax+rdx*8],rbx
  421094:	mov    QWORD PTR [rbx],rcx
  421097:	je     0x4210b0
  421099:	add    rsp,0x20
  42109d:	pop    rbx
  42109e:	ret    
  42109f:	nop
  4210a0:	add    rsp,0x20
  4210a4:	pop    rbx
  4210a5:	jmp    0x421e50
  4210aa:	nop    WORD PTR [rax+rax*1+0x0]
  4210b0:	mov    rax,QWORD PTR [rip+0x17dfd]        # 0x438eb4
  4210b7:	lea    rcx,[rip+0x15f42]        # 0x437000
  4210be:	add    rsp,0x20
  4210c2:	pop    rbx
  4210c3:	rex.W jmp rax
  4210c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210d0:	push   rbp
  4210d1:	push   rdi
  4210d2:	push   rsi
  4210d3:	push   rbx
  4210d4:	sub    rsp,0x28
  4210d8:	mov    esi,DWORD PTR [rcx+0x14]
  4210db:	xor    r9d,r9d
  4210de:	lea    r10,[rcx+0x18]
  4210e2:	mov    rdi,rcx
  4210e5:	movsxd rbx,r8d
  4210e8:	movsxd rdx,edx
  4210eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4210f0:	mov    eax,DWORD PTR [r10+r9*4]
  4210f4:	imul   rax,rdx
  4210f8:	add    rax,rbx
  4210fb:	mov    rbx,rax
  4210fe:	mov    DWORD PTR [r10+r9*4],eax
  421102:	add    r9,0x1
  421106:	shr    rbx,0x20
  42110a:	cmp    esi,r9d
  42110d:	jg     0x4210f0
  42110f:	test   rbx,rbx
  421112:	mov    rax,rdi
  421115:	je     0x42112c
  421117:	cmp    esi,DWORD PTR [rdi+0xc]
  42111a:	jge    0x421135
  42111c:	movsxd rax,esi
  42111f:	add    esi,0x1
  421122:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421126:	mov    DWORD PTR [rdi+0x14],esi
  421129:	mov    rax,rdi
  42112c:	add    rsp,0x28
  421130:	pop    rbx
  421131:	pop    rsi
  421132:	pop    rdi
  421133:	pop    rbp
  421134:	ret    
  421135:	mov    eax,DWORD PTR [rdi+0x8]
  421138:	lea    ecx,[rax+0x1]
  42113b:	call   0x420f50
  421140:	test   rax,rax
  421143:	mov    rbp,rax
  421146:	je     0x42117e
  421148:	lea    rcx,[rax+0x10]
  42114c:	movsxd rax,DWORD PTR [rdi+0x14]
  421150:	lea    rdx,[rdi+0x10]
  421154:	lea    r8,[rax*4+0x8]
  42115c:	call   0x421e08
  421161:	mov    rcx,rdi
  421164:	mov    rdi,rbp
  421167:	call   0x421060
  42116c:	movsxd rax,esi
  42116f:	add    esi,0x1
  421172:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421176:	mov    DWORD PTR [rdi+0x14],esi
  421179:	mov    rax,rdi
  42117c:	jmp    0x42112c
  42117e:	xor    eax,eax
  421180:	jmp    0x42112c
  421182:	nop    DWORD PTR [rax+0x0]
  421186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421190:	push   rbx
  421191:	sub    rsp,0x20
  421195:	mov    ebx,ecx
  421197:	mov    ecx,0x1
  42119c:	call   0x420f50
  4211a1:	test   rax,rax
  4211a4:	je     0x4211b0
  4211a6:	mov    DWORD PTR [rax+0x18],ebx
  4211a9:	mov    DWORD PTR [rax+0x14],0x1
  4211b0:	add    rsp,0x20
  4211b4:	pop    rbx
  4211b5:	ret    
  4211b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4211c0:	push   r14
  4211c2:	push   r13
  4211c4:	push   r12
  4211c6:	push   rbp
  4211c7:	push   rdi
  4211c8:	push   rsi
  4211c9:	push   rbx
  4211ca:	sub    rsp,0x20
  4211ce:	movsxd r13,DWORD PTR [rcx+0x14]
  4211d2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4211d6:	mov    r12,rcx
  4211d9:	mov    r14,rdx
  4211dc:	cmp    r13d,ebx
  4211df:	jl     0x4212e1
  4211e5:	mov    eax,ebx
  4211e7:	movsxd rbx,r13d
  4211ea:	movsxd r13,eax
  4211ed:	xor    eax,eax
  4211ef:	lea    esi,[rbx+r13*1]
  4211f3:	cmp    esi,DWORD PTR [r12+0xc]
  4211f8:	setg   al
  4211fb:	add    eax,DWORD PTR [r12+0x8]
  421200:	mov    ecx,eax
  421202:	call   0x420f50
  421207:	test   rax,rax
  42120a:	je     0x4212ec
  421210:	lea    rdi,[rax+0x18]
  421214:	movsxd rdx,esi
  421217:	lea    rbp,[rdi+rdx*4]
  42121b:	mov    r8,rdi
  42121e:	cmp    rdi,rbp
  421221:	jae    0x421233
  421223:	mov    DWORD PTR [r8],0x0
  42122a:	add    r8,0x4
  42122e:	cmp    rbp,r8
  421231:	ja     0x421223
  421233:	lea    rdx,[r14+0x18]
  421237:	add    r12,0x18
  42123b:	lea    rbx,[r12+rbx*4]
  42123f:	lea    r13,[rdx+r13*4]
  421243:	cmp    rdx,r13
  421246:	jae    0x4212a9
  421248:	nop    DWORD PTR [rax+rax*1+0x0]
  421250:	add    rdx,0x4
  421254:	mov    r11d,DWORD PTR [rdx-0x4]
  421258:	test   r11d,r11d
  42125b:	je     0x4212a0
  42125d:	mov    r9,rdi
  421260:	mov    r8,r12
  421263:	xor    r10d,r10d
  421266:	jmp    0x421273
  421268:	nop    DWORD PTR [rax+rax*1+0x0]
  421270:	mov    r9,r14
  421273:	add    r8,0x4
  421277:	mov    ecx,DWORD PTR [r8-0x4]
  42127b:	mov    r14d,DWORD PTR [r9]
  42127e:	imul   rcx,r11
  421282:	add    rcx,r14
  421285:	lea    r14,[r9+0x4]
  421289:	add    rcx,r10
  42128c:	mov    r10,rcx
  42128f:	mov    DWORD PTR [r14-0x4],ecx
  421293:	shr    r10,0x20
  421297:	cmp    rbx,r8
  42129a:	ja     0x421270
  42129c:	mov    DWORD PTR [r9+0x4],r10d
  4212a0:	add    rdi,0x4
  4212a4:	cmp    r13,rdx
  4212a7:	ja     0x421250
  4212a9:	test   esi,esi
  4212ab:	jle    0x4212cf
  4212ad:	mov    r8d,DWORD PTR [rbp-0x4]
  4212b1:	lea    rdx,[rbp-0x4]
  4212b5:	test   r8d,r8d
  4212b8:	je     0x4212ca
  4212ba:	jmp    0x4212cf
  4212bc:	nop    DWORD PTR [rax+0x0]
  4212c0:	sub    rdx,0x4
  4212c4:	mov    ecx,DWORD PTR [rdx]
  4212c6:	test   ecx,ecx
  4212c8:	jne    0x4212cf
  4212ca:	sub    esi,0x1
  4212cd:	jne    0x4212c0
  4212cf:	mov    DWORD PTR [rax+0x14],esi
  4212d2:	add    rsp,0x20
  4212d6:	pop    rbx
  4212d7:	pop    rsi
  4212d8:	pop    rdi
  4212d9:	pop    rbp
  4212da:	pop    r12
  4212dc:	pop    r13
  4212de:	pop    r14
  4212e0:	ret    
  4212e1:	mov    r12,rdx
  4212e4:	mov    r14,rcx
  4212e7:	jmp    0x4211ed
  4212ec:	xor    eax,eax
  4212ee:	jmp    0x4212d2
  4212f0:	push   rbp
  4212f1:	push   rdi
  4212f2:	push   rsi
  4212f3:	push   rbx
  4212f4:	sub    rsp,0x28
  4212f8:	mov    eax,edx
  4212fa:	mov    rbp,rcx
  4212fd:	mov    ebx,edx
  4212ff:	and    eax,0x3
  421302:	jne    0x421390
  421308:	sar    ebx,0x2
  42130b:	mov    rax,rbp
  42130e:	test   ebx,ebx
  421310:	je     0x42135c
  421312:	mov    rdi,QWORD PTR [rip+0x15327]        # 0x436640
  421319:	test   rdi,rdi
  42131c:	jne    0x421332
  42131e:	jmp    0x4213dd
  421323:	sar    ebx,1
  421325:	je     0x421359
  421327:	mov    rsi,QWORD PTR [rdi]
  42132a:	test   rsi,rsi
  42132d:	je     0x421365
  42132f:	mov    rdi,rsi
  421332:	test   bl,0x1
  421335:	je     0x421323
  421337:	mov    rdx,rdi
  42133a:	mov    rcx,rbp
  42133d:	call   0x4211c0
  421342:	test   rax,rax
  421345:	mov    rsi,rax
  421348:	je     0x4213b3
  42134a:	mov    rcx,rbp
  42134d:	mov    rbp,rsi
  421350:	call   0x421060
  421355:	sar    ebx,1
  421357:	jne    0x421327
  421359:	mov    rax,rbp
  42135c:	add    rsp,0x28
  421360:	pop    rbx
  421361:	pop    rsi
  421362:	pop    rdi
  421363:	pop    rbp
  421364:	ret    
  421365:	mov    ecx,0x1
  42136a:	call   0x420e30
  42136f:	mov    rsi,QWORD PTR [rdi]
  421372:	test   rsi,rsi
  421375:	je     0x4213be
  421377:	cmp    DWORD PTR [rip+0x15c52],0x2        # 0x436fd0
  42137e:	jne    0x42132f
  421380:	lea    rcx,[rip+0x15ca1]        # 0x437028
  421387:	call   QWORD PTR [rip+0x17b27]        # 0x438eb4
  42138d:	jmp    0x42132f
  42138f:	nop
  421390:	sub    eax,0x1
  421393:	lea    rdx,[rip+0xbea6]        # 0x42d240
  42139a:	xor    r8d,r8d
  42139d:	cdqe   
  42139f:	mov    edx,DWORD PTR [rdx+rax*4]
  4213a2:	call   0x4210d0
  4213a7:	test   rax,rax
  4213aa:	mov    rbp,rax
  4213ad:	jne    0x421308
  4213b3:	xor    eax,eax
  4213b5:	add    rsp,0x28
  4213b9:	pop    rbx
  4213ba:	pop    rsi
  4213bb:	pop    rdi
  4213bc:	pop    rbp
  4213bd:	ret    
  4213be:	mov    rdx,rdi
  4213c1:	mov    rcx,rdi
  4213c4:	call   0x4211c0
  4213c9:	test   rax,rax
  4213cc:	mov    rsi,rax
  4213cf:	mov    QWORD PTR [rdi],rax
  4213d2:	je     0x4213b3
  4213d4:	mov    QWORD PTR [rax],0x0
  4213db:	jmp    0x421377
  4213dd:	mov    ecx,0x1
  4213e2:	call   0x420e30
  4213e7:	mov    rdi,QWORD PTR [rip+0x15252]        # 0x436640
  4213ee:	test   rdi,rdi
  4213f1:	je     0x421412
  4213f3:	cmp    DWORD PTR [rip+0x15bd6],0x2        # 0x436fd0
  4213fa:	jne    0x421332
  421400:	lea    rcx,[rip+0x15c21]        # 0x437028
  421407:	call   QWORD PTR [rip+0x17aa7]        # 0x438eb4
  42140d:	jmp    0x421332
  421412:	mov    ecx,0x1
  421417:	call   0x420f50
  42141c:	test   rax,rax
  42141f:	mov    rdi,rax
  421422:	je     0x421442
  421424:	mov    DWORD PTR [rax+0x18],0x271
  42142b:	mov    DWORD PTR [rax+0x14],0x1
  421432:	mov    QWORD PTR [rip+0x15207],rax        # 0x436640
  421439:	mov    QWORD PTR [rax],0x0
  421440:	jmp    0x4213f3
  421442:	mov    QWORD PTR [rip+0x151f3],0x0        # 0x436640
  42144d:	xor    eax,eax
  42144f:	jmp    0x4213b5
  421454:	xchg   ax,ax
  421456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421460:	push   r13
  421462:	push   r12
  421464:	push   rbp
  421465:	push   rdi
  421466:	push   rsi
  421467:	push   rbx
  421468:	sub    rsp,0x28
  42146c:	mov    rdi,rcx
  42146f:	mov    ebp,edx
  421471:	mov    esi,edx
  421473:	mov    r12d,DWORD PTR [rdi+0x14]
  421477:	sar    ebp,0x5
  42147a:	mov    eax,DWORD PTR [rdi+0xc]
  42147d:	mov    ecx,DWORD PTR [rcx+0x8]
  421480:	add    r12d,ebp
  421483:	lea    ebx,[r12+0x1]
  421488:	cmp    ebx,eax
  42148a:	jle    0x421499
  42148c:	nop    DWORD PTR [rax+0x0]
  421490:	add    eax,eax
  421492:	add    ecx,0x1
  421495:	cmp    ebx,eax
  421497:	jg     0x421490
  421499:	call   0x420f50
  42149e:	test   rax,rax
  4214a1:	mov    r13,rax
  4214a4:	je     0x42156f
  4214aa:	test   ebp,ebp
  4214ac:	lea    r8,[rax+0x18]
  4214b0:	jle    0x421567
  4214b6:	lea    eax,[rbp-0x1]
  4214b9:	lea    r9,[r8+rax*4+0x4]
  4214be:	xchg   ax,ax
  4214c0:	add    r8,0x4
  4214c4:	mov    DWORD PTR [r8-0x4],0x0
  4214cc:	cmp    r8,r9
  4214cf:	jne    0x4214c0
  4214d1:	movsxd rax,DWORD PTR [rdi+0x14]
  4214d5:	lea    r8,[rdi+0x18]
  4214d9:	mov    edx,esi
  4214db:	and    edx,0x1f
  4214de:	lea    rbp,[r8+rax*4]
  4214e2:	je     0x421550
  4214e4:	mov    eax,0x20
  4214e9:	xor    r11d,r11d
  4214ec:	sub    eax,edx
  4214ee:	jmp    0x4214f3
  4214f0:	mov    r9,rsi
  4214f3:	mov    r10d,DWORD PTR [r8]
  4214f6:	mov    ecx,edx
  4214f8:	lea    rsi,[r9+0x4]
  4214fc:	add    r8,0x4
  421500:	shl    r10d,cl
  421503:	mov    ecx,eax
  421505:	or     r10d,r11d
  421508:	mov    DWORD PTR [rsi-0x4],r10d
  42150c:	mov    r11d,DWORD PTR [r8-0x4]
  421510:	shr    r11d,cl
  421513:	cmp    rbp,r8
  421516:	ja     0x4214f0
  421518:	add    r12d,0x2
  42151c:	test   r11d,r11d
  42151f:	mov    DWORD PTR [r9+0x4],r11d
  421523:	cmovne ebx,r12d
  421527:	sub    ebx,0x1
  42152a:	mov    rcx,rdi
  42152d:	mov    DWORD PTR [r13+0x14],ebx
  421531:	call   0x421060
  421536:	mov    rax,r13
  421539:	add    rsp,0x28
  42153d:	pop    rbx
  42153e:	pop    rsi
  42153f:	pop    rdi
  421540:	pop    rbp
  421541:	pop    r12
  421543:	pop    r13
  421545:	ret    
  421546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421550:	add    r8,0x4
  421554:	mov    edx,DWORD PTR [r8-0x4]
  421558:	add    r9,0x4
  42155c:	cmp    rbp,r8
  42155f:	mov    DWORD PTR [r9-0x4],edx
  421563:	ja     0x421550
  421565:	jmp    0x421527
  421567:	mov    r9,r8
  42156a:	jmp    0x4214d1
  42156f:	xor    eax,eax
  421571:	jmp    0x421539
  421573:	nop    DWORD PTR [rax]
  421576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421580:	movsxd r8,DWORD PTR [rdx+0x14]
  421584:	mov    eax,DWORD PTR [rcx+0x14]
  421587:	sub    eax,r8d
  42158a:	test   eax,eax
  42158c:	jne    0x4215c2
  42158e:	shl    r8,0x2
  421592:	add    rcx,0x18
  421596:	lea    rax,[rcx+r8*1]
  42159a:	lea    rdx,[rdx+r8*1+0x18]
  42159f:	jmp    0x4215a6
  4215a1:	cmp    rcx,rax
  4215a4:	jae    0x4215c0
  4215a6:	sub    rdx,0x4
  4215aa:	sub    rax,0x4
  4215ae:	mov    r9d,DWORD PTR [rdx]
  4215b1:	cmp    DWORD PTR [rax],r9d
  4215b4:	je     0x4215a1
  4215b6:	sbb    eax,eax
  4215b8:	or     eax,0x1
  4215bb:	ret    
  4215bc:	nop    DWORD PTR [rax+0x0]
  4215c0:	xor    eax,eax
  4215c2:	repz ret 
  4215c4:	xchg   ax,ax
  4215c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4215d0:	push   rdi
  4215d1:	push   rsi
  4215d2:	push   rbx
  4215d3:	sub    rsp,0x20
  4215d7:	mov    rsi,rcx
  4215da:	mov    rdi,rdx
  4215dd:	call   0x421580
  4215e2:	test   eax,eax
  4215e4:	je     0x4216d0
  4215ea:	mov    ebx,0x0
  4215ef:	js     0x4216f2
  4215f5:	mov    ecx,DWORD PTR [rsi+0x8]
  4215f8:	call   0x420f50
  4215fd:	test   rax,rax
  421600:	je     0x421702
  421606:	movsxd rdx,DWORD PTR [rsi+0x14]
  42160a:	lea    rcx,[rsi+0x18]
  42160e:	mov    DWORD PTR [rax+0x10],ebx
  421611:	lea    r10,[rdi+0x18]
  421615:	xor    r9d,r9d
  421618:	mov    rbx,rdx
  42161b:	lea    rsi,[rcx+rdx*4]
  42161f:	movsxd rdx,DWORD PTR [rdi+0x14]
  421623:	lea    rdi,[r10+rdx*4]
  421627:	lea    rdx,[rax+0x18]
  42162b:	nop    DWORD PTR [rax+rax*1+0x0]
  421630:	add    rcx,0x4
  421634:	add    r10,0x4
  421638:	mov    r11d,DWORD PTR [r10-0x4]
  42163c:	mov    r8d,DWORD PTR [rcx-0x4]
  421640:	add    rdx,0x4
  421644:	sub    r8,r11
  421647:	sub    r8,r9
  42164a:	mov    r9,r8
  42164d:	mov    r11d,r8d
  421650:	mov    DWORD PTR [rdx-0x4],r8d
  421654:	shr    r9,0x20
  421658:	and    r9d,0x1
  42165c:	cmp    rdi,r10
  42165f:	ja     0x421630
  421661:	cmp    rsi,rcx
  421664:	mov    rdi,rdx
  421667:	mov    r10,rcx
  42166a:	jbe    0x4216a6
  42166c:	nop    DWORD PTR [rax+0x0]
  421670:	add    rcx,0x4
  421674:	mov    r8d,DWORD PTR [rcx-0x4]
  421678:	add    rdx,0x4
  42167c:	sub    r8,r9
  42167f:	mov    r9,r8
  421682:	mov    r11d,r8d
  421685:	mov    DWORD PTR [rdx-0x4],r8d
  421689:	shr    r9,0x20
  42168d:	and    r9d,0x1
  421691:	cmp    rsi,rcx
  421694:	ja     0x421670
  421696:	not    r10
  421699:	lea    rdx,[r10+rsi*1]
  42169d:	shr    rdx,0x2
  4216a1:	lea    rdx,[rdi+rdx*4+0x4]
  4216a6:	sub    rdx,0x4
  4216aa:	test   r11d,r11d
  4216ad:	jne    0x4216bd
  4216af:	nop
  4216b0:	sub    rdx,0x4
  4216b4:	mov    ecx,DWORD PTR [rdx]
  4216b6:	sub    ebx,0x1
  4216b9:	test   ecx,ecx
  4216bb:	je     0x4216b0
  4216bd:	mov    DWORD PTR [rax+0x14],ebx
  4216c0:	add    rsp,0x20
  4216c4:	pop    rbx
  4216c5:	pop    rsi
  4216c6:	pop    rdi
  4216c7:	ret    
  4216c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4216d0:	xor    ecx,ecx
  4216d2:	call   0x420f50
  4216d7:	test   rax,rax
  4216da:	je     0x421702
  4216dc:	mov    DWORD PTR [rax+0x14],0x1
  4216e3:	mov    DWORD PTR [rax+0x18],0x0
  4216ea:	add    rsp,0x20
  4216ee:	pop    rbx
  4216ef:	pop    rsi
  4216f0:	pop    rdi
  4216f1:	ret    
  4216f2:	mov    rax,rsi
  4216f5:	mov    bl,0x1
  4216f7:	mov    rsi,rdi
  4216fa:	mov    rdi,rax
  4216fd:	jmp    0x4215f5
  421702:	xor    eax,eax
  421704:	jmp    0x4216c0
  421706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421710:	push   rsi
  421711:	push   rbx
  421712:	sub    rsp,0x18
  421716:	movsxd rax,DWORD PTR [rcx+0x14]
  42171a:	lea    r10,[rcx+0x18]
  42171e:	mov    ecx,0x20
  421723:	lea    r9,[r10+rax*4]
  421727:	mov    eax,DWORD PTR [r9-0x4]
  42172b:	lea    rbx,[r9-0x4]
  42172f:	bsr    r8d,eax
  421733:	xor    r8d,0x1f
  421737:	sub    ecx,r8d
  42173a:	cmp    r8d,0xa
  42173e:	mov    DWORD PTR [rdx],ecx
  421740:	jg     0x421790
  421742:	mov    ecx,0xb
  421747:	mov    r11d,eax
  42174a:	xor    esi,esi
  42174c:	sub    ecx,r8d
  42174f:	shr    r11d,cl
  421752:	or     r11d,0x3ff00000
  421759:	shl    r11,0x20
  42175d:	cmp    r10,rbx
  421760:	jae    0x421768
  421762:	mov    esi,DWORD PTR [r9-0x8]
  421766:	shr    esi,cl
  421768:	lea    ecx,[r8+0x15]
  42176c:	shl    eax,cl
  42176e:	mov    edx,eax
  421770:	mov    eax,esi
  421772:	or     eax,edx
  421774:	or     rax,r11
  421777:	mov    QWORD PTR [rsp+0x8],rax
  42177c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  421782:	add    rsp,0x18
  421786:	pop    rbx
  421787:	pop    rsi
  421788:	ret    
  421789:	nop    DWORD PTR [rax+0x0]
  421790:	cmp    r10,rbx
  421793:	jae    0x4217f0
  421795:	mov    r11d,r8d
  421798:	lea    rsi,[r9-0x8]
  42179c:	mov    edx,DWORD PTR [r9-0x8]
  4217a0:	sub    r11d,0xb
  4217a4:	je     0x421812
  4217a6:	mov    ebx,0x2b
  4217ab:	mov    ecx,r11d
  4217ae:	sub    ebx,r8d
  4217b1:	shl    eax,cl
  4217b3:	mov    r8d,edx
  4217b6:	mov    ecx,ebx
  4217b8:	shr    r8d,cl
  4217bb:	or     eax,r8d
  4217be:	xor    r8d,r8d
  4217c1:	or     eax,0x3ff00000
  4217c6:	shl    rax,0x20
  4217ca:	cmp    r10,rsi
  4217cd:	jae    0x4217d6
  4217cf:	mov    r8d,DWORD PTR [r9-0xc]
  4217d3:	shr    r8d,cl
  4217d6:	mov    ecx,r11d
  4217d9:	shl    edx,cl
  4217db:	or     r8d,edx
  4217de:	movabs rdx,0xffffffff00000000
  4217e8:	and    rax,rdx
  4217eb:	or     rax,r8
  4217ee:	jmp    0x421777
  4217f0:	mov    r11d,r8d
  4217f3:	sub    r11d,0xb
  4217f7:	je     0x421810
  4217f9:	mov    ecx,r11d
  4217fc:	xor    r8d,r8d
  4217ff:	xor    edx,edx
  421801:	shl    eax,cl
  421803:	or     eax,0x3ff00000
  421808:	shl    rax,0x20
  42180c:	jmp    0x4217d6
  42180e:	xchg   ax,ax
  421810:	xor    edx,edx
  421812:	or     eax,0x3ff00000
  421817:	shl    rax,0x20
  42181b:	or     rax,rdx
  42181e:	jmp    0x421777
  421823:	nop    DWORD PTR [rax]
  421826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421830:	push   rdi
  421831:	push   rsi
  421832:	push   rbx
  421833:	sub    rsp,0x20
  421837:	mov    ecx,0x1
  42183c:	movq   rbx,xmm0
  421841:	mov    rdi,rdx
  421844:	mov    rsi,r8
  421847:	call   0x420f50
  42184c:	test   rax,rax
  42184f:	je     0x421935
  421855:	mov    r9,rbx
  421858:	shr    r9,0x20
  42185c:	mov    r10d,r9d
  42185f:	and    r9d,0x7fffffff
  421866:	and    r10d,0xfffff
  42186d:	shr    r9d,0x14
  421871:	mov    edx,r10d
  421874:	or     edx,0x100000
  42187a:	test   r9d,r9d
  42187d:	cmovne r10d,edx
  421881:	test   ebx,ebx
  421883:	jne    0x4218c4
  421885:	xor    ecx,ecx
  421887:	mov    DWORD PTR [rax+0x14],0x1
  42188e:	mov    edx,0x1
  421893:	tzcnt  ecx,r10d
  421898:	shr    r10d,cl
  42189b:	test   r9d,r9d
  42189e:	lea    r11d,[rcx+0x20]
  4218a2:	mov    DWORD PTR [rax+0x18],r10d
  4218a6:	je     0x421903
  4218a8:	lea    edx,[r11+r9*1-0x433]
  4218b0:	mov    DWORD PTR [rdi],edx
  4218b2:	mov    edx,0x35
  4218b7:	sub    edx,r11d
  4218ba:	mov    DWORD PTR [rsi],edx
  4218bc:	add    rsp,0x20
  4218c0:	pop    rbx
  4218c1:	pop    rsi
  4218c2:	pop    rdi
  4218c3:	ret    
  4218c4:	xor    r11d,r11d
  4218c7:	tzcnt  r11d,ebx
  4218cc:	mov    ecx,r11d
  4218cf:	shr    ebx,cl
  4218d1:	test   r11d,r11d
  4218d4:	je     0x421930
  4218d6:	mov    ecx,0x20
  4218db:	mov    edx,r10d
  4218de:	sub    ecx,r11d
  4218e1:	shl    edx,cl
  4218e3:	mov    ecx,r11d
  4218e6:	or     ebx,edx
  4218e8:	shr    r10d,cl
  4218eb:	mov    DWORD PTR [rax+0x18],ebx
  4218ee:	cmp    r10d,0x1
  4218f2:	mov    DWORD PTR [rax+0x1c],r10d
  4218f6:	sbb    edx,edx
  4218f8:	add    edx,0x2
  4218fb:	test   r9d,r9d
  4218fe:	mov    DWORD PTR [rax+0x14],edx
  421901:	jne    0x4218a8
  421903:	movsxd rcx,edx
  421906:	shl    edx,0x5
  421909:	sub    r11d,0x432
  421910:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  421915:	mov    DWORD PTR [rdi],r11d
  421918:	xor    ecx,0x1f
  42191b:	sub    edx,ecx
  42191d:	mov    DWORD PTR [rsi],edx
  42191f:	add    rsp,0x20
  421923:	pop    rbx
  421924:	pop    rsi
  421925:	pop    rdi
  421926:	ret    
  421927:	nop    WORD PTR [rax+rax*1+0x0]
  421930:	mov    DWORD PTR [rax+0x18],ebx
  421933:	jmp    0x4218ee
  421935:	xor    eax,eax
  421937:	jmp    0x4218bc
  421939:	nop    DWORD PTR [rax+0x0]
  421940:	mov    rax,rcx
  421943:	lea    rcx,[rdx+0x1]
  421947:	movzx  edx,BYTE PTR [rdx]
  42194a:	test   dl,dl
  42194c:	mov    BYTE PTR [rax],dl
  42194e:	je     0x421962
  421950:	add    rcx,0x1
  421954:	movzx  edx,BYTE PTR [rcx-0x1]
  421958:	add    rax,0x1
  42195c:	test   dl,dl
  42195e:	mov    BYTE PTR [rax],dl
  421960:	jne    0x421950
  421962:	repz ret 
  421964:	nop
  421965:	nop
  421966:	nop
  421967:	nop
  421968:	nop
  421969:	nop
  42196a:	nop
  42196b:	nop
  42196c:	nop
  42196d:	nop
  42196e:	nop
  42196f:	nop
  421970:	push   rbp
  421971:	push   rdi
  421972:	push   rsi
  421973:	push   rbx
  421974:	sub    rsp,0x48
  421978:	test   rdx,rdx
  42197b:	je     0x421aa3
  421981:	test   r8,r8
  421984:	je     0x421ab0
  42198a:	mov    eax,DWORD PTR [r9]
  42198d:	mov    DWORD PTR [r9],0x0
  421994:	mov    DWORD PTR [rsp+0x30],eax
  421998:	movzx  eax,BYTE PTR [rdx]
  42199b:	test   al,al
  42199d:	je     0x421a40
  4219a3:	cmp    DWORD PTR [rsp+0x98],0x1
  4219ab:	mov    rsi,r9
  4219ae:	mov    rdi,r8
  4219b1:	mov    rbx,rdx
  4219b4:	mov    rbp,rcx
  4219b7:	jbe    0x421a20
  4219b9:	cmp    BYTE PTR [rsp+0x30],0x0
  4219be:	jne    0x421a50
  4219c4:	movzx  edx,al
  4219c7:	mov    ecx,DWORD PTR [rsp+0x90]
  4219ce:	call   QWORD PTR [rip+0x174d8]        # 0x438eac
  4219d4:	test   eax,eax
  4219d6:	je     0x421a20
  4219d8:	cmp    rdi,0x1
  4219dc:	jbe    0x421acc
  4219e2:	mov    DWORD PTR [rsp+0x28],0x1
  4219ea:	mov    QWORD PTR [rsp+0x20],rbp
  4219ef:	mov    r9d,0x2
  4219f5:	mov    r8,rbx
  4219f8:	mov    edx,0x8
  4219fd:	mov    ecx,DWORD PTR [rsp+0x90]
  421a04:	call   QWORD PTR [rip+0x174b2]        # 0x438ebc
  421a0a:	test   eax,eax
  421a0c:	je     0x421ab7
  421a12:	mov    eax,0x2
  421a17:	add    rsp,0x48
  421a1b:	pop    rbx
  421a1c:	pop    rsi
  421a1d:	pop    rdi
  421a1e:	pop    rbp
  421a1f:	ret    
  421a20:	mov    eax,DWORD PTR [rsp+0x90]
  421a27:	test   eax,eax
  421a29:	jne    0x421a70
  421a2b:	movzx  eax,BYTE PTR [rbx]
  421a2e:	mov    WORD PTR [rbp+0x0],ax
  421a32:	mov    eax,0x1
  421a37:	add    rsp,0x48
  421a3b:	pop    rbx
  421a3c:	pop    rsi
  421a3d:	pop    rdi
  421a3e:	pop    rbp
  421a3f:	ret    
  421a40:	xor    edx,edx
  421a42:	xor    eax,eax
  421a44:	mov    WORD PTR [rcx],dx
  421a47:	add    rsp,0x48
  421a4b:	pop    rbx
  421a4c:	pop    rsi
  421a4d:	pop    rdi
  421a4e:	pop    rbp
  421a4f:	ret    
  421a50:	mov    BYTE PTR [rsp+0x31],al
  421a54:	mov    DWORD PTR [rsp+0x28],0x1
  421a5c:	mov    r9d,0x2
  421a62:	mov    QWORD PTR [rsp+0x20],rcx
  421a67:	lea    r8,[rsp+0x30]
  421a6c:	jmp    0x4219f8
  421a6e:	xchg   ax,ax
  421a70:	mov    DWORD PTR [rsp+0x28],0x1
  421a78:	mov    QWORD PTR [rsp+0x20],rbp
  421a7d:	mov    r9d,0x1
  421a83:	mov    r8,rbx
  421a86:	mov    edx,0x8
  421a8b:	mov    ecx,DWORD PTR [rsp+0x90]
  421a92:	call   QWORD PTR [rip+0x17424]        # 0x438ebc
  421a98:	test   eax,eax
  421a9a:	je     0x421ab7
  421a9c:	mov    eax,0x1
  421aa1:	jmp    0x421a47
  421aa3:	xor    eax,eax
  421aa5:	add    rsp,0x48
  421aa9:	pop    rbx
  421aaa:	pop    rsi
  421aab:	pop    rdi
  421aac:	pop    rbp
  421aad:	ret    
  421aae:	xchg   ax,ax
  421ab0:	mov    eax,0xfffffffe
  421ab5:	jmp    0x421a47
  421ab7:	call   0x421f48
  421abc:	mov    DWORD PTR [rax],0x2a
  421ac2:	mov    eax,0xffffffff
  421ac7:	jmp    0x421a47
  421acc:	movzx  eax,BYTE PTR [rbx]
  421acf:	mov    BYTE PTR [rsi],al
  421ad1:	mov    eax,0xfffffffe
  421ad6:	jmp    0x421a47
  421adb:	nop    DWORD PTR [rax+rax*1+0x0]
  421ae0:	push   rbp
  421ae1:	push   rdi
  421ae2:	push   rsi
  421ae3:	push   rbx
  421ae4:	sub    rsp,0x58
  421ae8:	xor    eax,eax
  421aea:	mov    WORD PTR [rsp+0x4e],ax
  421aef:	lea    rax,[rsp+0x4e]
  421af4:	test   rcx,rcx
  421af7:	mov    rbx,rcx
  421afa:	mov    rsi,r9
  421afd:	mov    rdi,rdx
  421b00:	cmove  rbx,rax
  421b04:	mov    rax,QWORD PTR [rip+0xb985]        # 0x42d490
  421b0b:	mov    QWORD PTR [rsp+0x38],r8
  421b10:	mov    rax,QWORD PTR [rax]
  421b13:	mov    ebp,DWORD PTR [rax]
  421b15:	call   0x421fa0
  421b1a:	mov    r8,QWORD PTR [rsp+0x38]
  421b1f:	lea    r9,[rip+0x15562]        # 0x437088
  421b26:	test   rsi,rsi
  421b29:	mov    DWORD PTR [rsp+0x28],ebp
  421b2d:	mov    DWORD PTR [rsp+0x20],eax
  421b31:	mov    rdx,rdi
  421b34:	cmovne r9,rsi
  421b38:	mov    rcx,rbx
  421b3b:	call   0x421970
  421b40:	cdqe   
  421b42:	add    rsp,0x58
  421b46:	pop    rbx
  421b47:	pop    rsi
  421b48:	pop    rdi
  421b49:	pop    rbp
  421b4a:	ret    
  421b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  421b50:	push   r15
  421b52:	push   r14
  421b54:	push   r13
  421b56:	push   r12
  421b58:	push   rbp
  421b59:	push   rdi
  421b5a:	push   rsi
  421b5b:	push   rbx
  421b5c:	sub    rsp,0x48
  421b60:	lea    rax,[rip+0x1551d]        # 0x437084
  421b67:	test   r9,r9
  421b6a:	mov    rdi,r9
  421b6d:	mov    r13,rdx
  421b70:	cmove  rdi,rax
  421b74:	mov    r14,rcx
  421b77:	mov    rsi,r8
  421b7a:	call   0x421fa0
  421b7f:	mov    r12d,eax
  421b82:	mov    rax,QWORD PTR [rip+0xb907]        # 0x42d490
  421b89:	test   r13,r13
  421b8c:	mov    rax,QWORD PTR [rax]
  421b8f:	mov    ebp,DWORD PTR [rax]
  421b91:	je     0x421c15
  421b97:	mov    rdx,QWORD PTR [r13+0x0]
  421b9b:	test   rdx,rdx
  421b9e:	je     0x421c15
  421ba0:	test   r14,r14
  421ba3:	je     0x421c20
  421ba5:	xor    ebx,ebx
  421ba7:	test   rsi,rsi
  421baa:	jne    0x421bca
  421bac:	jmp    0x421c15
  421bae:	xchg   ax,ax
  421bb0:	movsxd r10,eax
  421bb3:	add    r14,0x2
  421bb7:	mov    rdx,r10
  421bba:	add    rdx,QWORD PTR [r13+0x0]
  421bbe:	add    rbx,r10
  421bc1:	cmp    rsi,rbx
  421bc4:	mov    QWORD PTR [r13+0x0],rdx
  421bc8:	jbe    0x421c10
  421bca:	mov    r8,rsi
  421bcd:	mov    DWORD PTR [rsp+0x28],ebp
  421bd1:	mov    DWORD PTR [rsp+0x20],r12d
  421bd6:	sub    r8,rbx
  421bd9:	mov    r9,rdi
  421bdc:	mov    rcx,r14
  421bdf:	call   0x421970
  421be4:	cmp    eax,0x0
  421be7:	jg     0x421bb0
  421be9:	jne    0x421c10
  421beb:	cmp    rbx,rsi
  421bee:	jae    0x421c10
  421bf0:	mov    QWORD PTR [r13+0x0],0x0
  421bf8:	mov    rax,rbx
  421bfb:	add    rsp,0x48
  421bff:	pop    rbx
  421c00:	pop    rsi
  421c01:	pop    rdi
  421c02:	pop    rbp
  421c03:	pop    r12
  421c05:	pop    r13
  421c07:	pop    r14
  421c09:	pop    r15
  421c0b:	ret    
  421c0c:	xor    ebx,ebx
  421c0e:	xchg   ax,ax
  421c10:	mov    rax,rbx
  421c13:	jmp    0x421bfb
  421c15:	xor    eax,eax
  421c17:	jmp    0x421bfb
  421c19:	nop    DWORD PTR [rax+0x0]
  421c20:	xor    eax,eax
  421c22:	test   rsi,rsi
  421c25:	mov    WORD PTR [rsp+0x3e],ax
  421c2a:	je     0x421c0c
  421c2c:	mov    r15d,ebp
  421c2f:	xor    ebx,ebx
  421c31:	lea    r14,[rsp+0x3e]
  421c36:	jmp    0x421c55
  421c38:	nop    DWORD PTR [rax+rax*1+0x0]
  421c40:	cdqe   
  421c42:	mov    rdx,rax
  421c45:	add    rdx,QWORD PTR [r13+0x0]
  421c49:	add    rbx,rax
  421c4c:	cmp    rsi,rbx
  421c4f:	mov    QWORD PTR [r13+0x0],rdx
  421c53:	jbe    0x421c10
  421c55:	mov    DWORD PTR [rsp+0x28],ebp
  421c59:	mov    DWORD PTR [rsp+0x20],r12d
  421c5e:	mov    r9,rdi
  421c61:	mov    r8,r15
  421c64:	mov    rcx,r14
  421c67:	call   0x421970
  421c6c:	test   eax,eax
  421c6e:	jg     0x421c40
  421c70:	jmp    0x421c10
  421c72:	nop    DWORD PTR [rax+0x0]
  421c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c80:	push   rbp
  421c81:	push   rdi
  421c82:	push   rsi
  421c83:	push   rbx
  421c84:	sub    rsp,0x48
  421c88:	xor    eax,eax
  421c8a:	mov    WORD PTR [rsp+0x3e],ax
  421c8f:	mov    rax,QWORD PTR [rip+0xb7fa]        # 0x42d490
  421c96:	mov    rbx,r8
  421c99:	mov    rsi,rcx
  421c9c:	mov    rdi,rdx
  421c9f:	mov    rax,QWORD PTR [rax]
  421ca2:	mov    ebp,DWORD PTR [rax]
  421ca4:	call   0x421fa0
  421ca9:	lea    r9,[rip+0x153d0]        # 0x437080
  421cb0:	test   rbx,rbx
  421cb3:	lea    rcx,[rsp+0x3e]
  421cb8:	mov    DWORD PTR [rsp+0x28],ebp
  421cbc:	mov    DWORD PTR [rsp+0x20],eax
  421cc0:	mov    r8,rdi
  421cc3:	cmovne r9,rbx
  421cc7:	mov    rdx,rsi
  421cca:	call   0x421970
  421ccf:	cdqe   
  421cd1:	add    rsp,0x48
  421cd5:	pop    rbx
  421cd6:	pop    rsi
  421cd7:	pop    rdi
  421cd8:	pop    rbp
  421cd9:	ret    
  421cda:	nop
  421cdb:	nop
  421cdc:	nop
  421cdd:	nop
  421cde:	nop
  421cdf:	nop
  421ce0:	jmp    QWORD PTR [rip+0x17556]        # 0x43923c
  421ce6:	nop
  421ce7:	nop
  421ce8:	jmp    QWORD PTR [rip+0x17546]        # 0x439234
  421cee:	nop
  421cef:	nop
  421cf0:	jmp    QWORD PTR [rip+0x17536]        # 0x43922c
  421cf6:	nop
  421cf7:	nop
  421cf8:	jmp    QWORD PTR [rip+0x17526]        # 0x439224
  421cfe:	nop
  421cff:	nop
  421d00:	jmp    QWORD PTR [rip+0x17516]        # 0x43921c
  421d06:	nop
  421d07:	nop
  421d08:	jmp    QWORD PTR [rip+0x17506]        # 0x439214
  421d0e:	nop
  421d0f:	nop
  421d10:	jmp    QWORD PTR [rip+0x174f6]        # 0x43920c
  421d16:	nop
  421d17:	nop
  421d18:	jmp    QWORD PTR [rip+0x174e6]        # 0x439204
  421d1e:	nop
  421d1f:	nop
  421d20:	jmp    QWORD PTR [rip+0x174d6]        # 0x4391fc
  421d26:	nop
  421d27:	nop
  421d28:	jmp    QWORD PTR [rip+0x174c6]        # 0x4391f4
  421d2e:	nop
  421d2f:	nop
  421d30:	jmp    QWORD PTR [rip+0x174b6]        # 0x4391ec
  421d36:	nop
  421d37:	nop
  421d38:	jmp    QWORD PTR [rip+0x174a6]        # 0x4391e4
  421d3e:	nop
  421d3f:	nop
  421d40:	jmp    QWORD PTR [rip+0x17496]        # 0x4391dc
  421d46:	nop
  421d47:	nop
  421d48:	jmp    QWORD PTR [rip+0x17486]        # 0x4391d4
  421d4e:	nop
  421d4f:	nop
  421d50:	jmp    QWORD PTR [rip+0x17476]        # 0x4391cc
  421d56:	nop
  421d57:	nop
  421d58:	jmp    QWORD PTR [rip+0x17466]        # 0x4391c4
  421d5e:	nop
  421d5f:	nop
  421d60:	jmp    QWORD PTR [rip+0x17456]        # 0x4391bc
  421d66:	nop
  421d67:	nop
  421d68:	jmp    QWORD PTR [rip+0x17446]        # 0x4391b4
  421d6e:	nop
  421d6f:	nop
  421d70:	jmp    QWORD PTR [rip+0x17436]        # 0x4391ac
  421d76:	nop
  421d77:	nop
  421d78:	jmp    QWORD PTR [rip+0x17426]        # 0x4391a4
  421d7e:	nop
  421d7f:	nop
  421d80:	jmp    QWORD PTR [rip+0x17416]        # 0x43919c
  421d86:	nop
  421d87:	nop
  421d88:	jmp    QWORD PTR [rip+0x17406]        # 0x439194
  421d8e:	nop
  421d8f:	nop
  421d90:	jmp    QWORD PTR [rip+0x173f6]        # 0x43918c
  421d96:	nop
  421d97:	nop
  421d98:	jmp    QWORD PTR [rip+0x173e6]        # 0x439184
  421d9e:	nop
  421d9f:	nop
  421da0:	jmp    QWORD PTR [rip+0x173d6]        # 0x43917c
  421da6:	nop
  421da7:	nop
  421da8:	jmp    QWORD PTR [rip+0x173c6]        # 0x439174
  421dae:	nop
  421daf:	nop
  421db0:	jmp    QWORD PTR [rip+0x173b6]        # 0x43916c
  421db6:	nop
  421db7:	nop
  421db8:	jmp    QWORD PTR [rip+0x173a6]        # 0x439164
  421dbe:	nop
  421dbf:	nop
  421dc0:	jmp    QWORD PTR [rip+0x17396]        # 0x43915c
  421dc6:	nop
  421dc7:	nop
  421dc8:	jmp    QWORD PTR [rip+0x17386]        # 0x439154
  421dce:	nop
  421dcf:	nop
  421dd0:	jmp    QWORD PTR [rip+0x17376]        # 0x43914c
  421dd6:	nop
  421dd7:	nop
  421dd8:	jmp    QWORD PTR [rip+0x17366]        # 0x439144
  421dde:	nop
  421ddf:	nop
  421de0:	jmp    QWORD PTR [rip+0x17356]        # 0x43913c
  421de6:	nop
  421de7:	nop
  421de8:	jmp    QWORD PTR [rip+0x17346]        # 0x439134
  421dee:	nop
  421def:	nop
  421df0:	jmp    QWORD PTR [rip+0x17336]        # 0x43912c
  421df6:	nop
  421df7:	nop
  421df8:	jmp    QWORD PTR [rip+0x17326]        # 0x439124
  421dfe:	nop
  421dff:	nop
  421e00:	jmp    QWORD PTR [rip+0x17316]        # 0x43911c
  421e06:	nop
  421e07:	nop
  421e08:	jmp    QWORD PTR [rip+0x17306]        # 0x439114
  421e0e:	nop
  421e0f:	nop
  421e10:	jmp    QWORD PTR [rip+0x172f6]        # 0x43910c
  421e16:	nop
  421e17:	nop
  421e18:	jmp    QWORD PTR [rip+0x172e6]        # 0x439104
  421e1e:	nop
  421e1f:	nop
  421e20:	jmp    QWORD PTR [rip+0x172d6]        # 0x4390fc
  421e26:	nop
  421e27:	nop
  421e28:	jmp    QWORD PTR [rip+0x172c6]        # 0x4390f4
  421e2e:	nop
  421e2f:	nop
  421e30:	jmp    QWORD PTR [rip+0x172b6]        # 0x4390ec
  421e36:	nop
  421e37:	nop
  421e38:	jmp    QWORD PTR [rip+0x172a6]        # 0x4390e4
  421e3e:	nop
  421e3f:	nop
  421e40:	jmp    QWORD PTR [rip+0x17296]        # 0x4390dc
  421e46:	nop
  421e47:	nop
  421e48:	jmp    QWORD PTR [rip+0x17286]        # 0x4390d4
  421e4e:	nop
  421e4f:	nop
  421e50:	jmp    QWORD PTR [rip+0x17276]        # 0x4390cc
  421e56:	nop
  421e57:	nop
  421e58:	jmp    QWORD PTR [rip+0x17266]        # 0x4390c4
  421e5e:	nop
  421e5f:	nop
  421e60:	jmp    QWORD PTR [rip+0x17256]        # 0x4390bc
  421e66:	nop
  421e67:	nop
  421e68:	jmp    QWORD PTR [rip+0x17246]        # 0x4390b4
  421e6e:	nop
  421e6f:	nop
  421e70:	jmp    QWORD PTR [rip+0x17236]        # 0x4390ac
  421e76:	nop
  421e77:	nop
  421e78:	jmp    QWORD PTR [rip+0x17226]        # 0x4390a4
  421e7e:	nop
  421e7f:	nop
  421e80:	jmp    QWORD PTR [rip+0x17216]        # 0x43909c
  421e86:	nop
  421e87:	nop
  421e88:	jmp    QWORD PTR [rip+0x17206]        # 0x439094
  421e8e:	nop
  421e8f:	nop
  421e90:	jmp    QWORD PTR [rip+0x171f6]        # 0x43908c
  421e96:	nop
  421e97:	nop
  421e98:	jmp    QWORD PTR [rip+0x171e6]        # 0x439084
  421e9e:	nop
  421e9f:	nop
  421ea0:	jmp    QWORD PTR [rip+0x171d6]        # 0x43907c
  421ea6:	nop
  421ea7:	nop
  421ea8:	jmp    QWORD PTR [rip+0x171c6]        # 0x439074
  421eae:	nop
  421eaf:	nop
  421eb0:	jmp    QWORD PTR [rip+0x171b6]        # 0x43906c
  421eb6:	nop
  421eb7:	nop
  421eb8:	jmp    QWORD PTR [rip+0x171a6]        # 0x439064
  421ebe:	nop
  421ebf:	nop
  421ec0:	jmp    QWORD PTR [rip+0x17196]        # 0x43905c
  421ec6:	nop
  421ec7:	nop
  421ec8:	jmp    QWORD PTR [rip+0x17186]        # 0x439054
  421ece:	nop
  421ecf:	nop
  421ed0:	jmp    QWORD PTR [rip+0x17176]        # 0x43904c
  421ed6:	nop
  421ed7:	nop
  421ed8:	jmp    QWORD PTR [rip+0x17166]        # 0x439044
  421ede:	nop
  421edf:	nop
  421ee0:	jmp    QWORD PTR [rip+0x17156]        # 0x43903c
  421ee6:	nop
  421ee7:	nop
  421ee8:	jmp    QWORD PTR [rip+0x17146]        # 0x439034
  421eee:	nop
  421eef:	nop
  421ef0:	jmp    QWORD PTR [rip+0x17136]        # 0x43902c
  421ef6:	nop
  421ef7:	nop
  421ef8:	jmp    QWORD PTR [rip+0x17126]        # 0x439024
  421efe:	nop
  421eff:	nop
  421f00:	jmp    QWORD PTR [rip+0x17116]        # 0x43901c
  421f06:	nop
  421f07:	nop
  421f08:	jmp    QWORD PTR [rip+0x17106]        # 0x439014
  421f0e:	nop
  421f0f:	nop
  421f10:	jmp    QWORD PTR [rip+0x170f6]        # 0x43900c
  421f16:	nop
  421f17:	nop
  421f18:	jmp    QWORD PTR [rip+0x170e6]        # 0x439004
  421f1e:	nop
  421f1f:	nop
  421f20:	jmp    QWORD PTR [rip+0x170d6]        # 0x438ffc
  421f26:	nop
  421f27:	nop
  421f28:	jmp    QWORD PTR [rip+0x170c6]        # 0x438ff4
  421f2e:	nop
  421f2f:	nop
  421f30:	jmp    QWORD PTR [rip+0x170ae]        # 0x438fe4
  421f36:	nop
  421f37:	nop
  421f38:	jmp    QWORD PTR [rip+0x1709e]        # 0x438fdc
  421f3e:	nop
  421f3f:	nop
  421f40:	jmp    QWORD PTR [rip+0x1708e]        # 0x438fd4
  421f46:	nop
  421f47:	nop
  421f48:	jmp    QWORD PTR [rip+0x1707e]        # 0x438fcc
  421f4e:	nop
  421f4f:	nop
  421f50:	jmp    QWORD PTR [rip+0x1706e]        # 0x438fc4
  421f56:	nop
  421f57:	nop
  421f58:	jmp    QWORD PTR [rip+0x1705e]        # 0x438fbc
  421f5e:	nop
  421f5f:	nop
  421f60:	jmp    QWORD PTR [rip+0x1704e]        # 0x438fb4
  421f66:	nop
  421f67:	nop
  421f68:	jmp    QWORD PTR [rip+0x1703e]        # 0x438fac
  421f6e:	nop
  421f6f:	nop
  421f70:	jmp    QWORD PTR [rip+0x17026]        # 0x438f9c
  421f76:	nop
  421f77:	nop
  421f78:	jmp    QWORD PTR [rip+0x17016]        # 0x438f94
  421f7e:	nop
  421f7f:	nop
  421f80:	jmp    QWORD PTR [rip+0x16ffe]        # 0x438f84
  421f86:	nop
  421f87:	nop
  421f88:	jmp    QWORD PTR [rip+0x16fee]        # 0x438f7c
  421f8e:	nop
  421f8f:	nop
  421f90:	jmp    QWORD PTR [rip+0x16fd6]        # 0x438f6c
  421f96:	nop
  421f97:	nop
  421f98:	jmp    QWORD PTR [rip+0x16fc6]        # 0x438f64
  421f9e:	nop
  421f9f:	nop
  421fa0:	jmp    QWORD PTR [rip+0x16fb6]        # 0x438f5c
  421fa6:	nop
  421fa7:	nop
  421fa8:	jmp    QWORD PTR [rip+0x16fa6]        # 0x438f54
  421fae:	nop
  421faf:	nop
  421fb0:	mov    rax,QWORD PTR [rip+0x150d9]        # 0x437090
  421fb7:	ret    
  421fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  421fc0:	mov    rax,rcx
  421fc3:	xchg   QWORD PTR [rip+0x150c6],rax        # 0x437090
  421fca:	ret    
  421fcb:	nop
  421fcc:	nop
  421fcd:	nop
  421fce:	nop
  421fcf:	nop
  421fd0:	mov    eax,DWORD PTR [rip+0x150ca]        # 0x4370a0
  421fd6:	ret    
  421fd7:	nop    WORD PTR [rax+rax*1+0x0]
  421fe0:	mov    eax,ecx
  421fe2:	xchg   DWORD PTR [rip+0x150b8],eax        # 0x4370a0
  421fe8:	ret    
  421fe9:	nop    DWORD PTR [rax+0x0]
  421ff0:	push   rbx
  421ff1:	sub    rsp,0x20
  421ff5:	mov    ebx,ecx
  421ff7:	lea    rcx,[rip+0xb3c2]        # 0x42d3c0
  421ffe:	call   QWORD PTR [rip+0x16e70]        # 0x438e74
  422004:	lea    rdx,[rip+0xb3cb]        # 0x42d3d6
  42200b:	mov    rcx,rax
  42200e:	call   QWORD PTR [rip+0x16e70]        # 0x438e84
  422014:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x421fe0
  42201b:	test   rax,rax
  42201e:	mov    ecx,ebx
  422020:	cmove  rax,rdx
  422024:	mov    QWORD PTR [rip+0x1e0d],rax        # 0x423e38
  42202b:	add    rsp,0x20
  42202f:	pop    rbx
  422030:	rex.W jmp rax
  422033:	nop    DWORD PTR [rax]
  422036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422040:	sub    rsp,0x28
  422044:	lea    rcx,[rip+0xb375]        # 0x42d3c0
  42204b:	call   QWORD PTR [rip+0x16e23]        # 0x438e74
  422051:	lea    rdx,[rip+0xb391]        # 0x42d3e9
  422058:	mov    rcx,rax
  42205b:	call   QWORD PTR [rip+0x16e23]        # 0x438e84
  422061:	lea    rdx,[rip+0xffffffffffffff68]        # 0x421fd0
  422068:	test   rax,rax
  42206b:	cmove  rax,rdx
  42206f:	mov    QWORD PTR [rip+0x1dba],rax        # 0x423e30
  422076:	add    rsp,0x28
  42207a:	rex.W jmp rax
  42207d:	nop    DWORD PTR [rax]
  422080:	mov    rax,QWORD PTR [rip+0x1db1]        # 0x423e38
  422087:	rex.W jmp rax
  42208a:	nop    WORD PTR [rax+rax*1+0x0]
  422090:	mov    rax,QWORD PTR [rip+0x1d99]        # 0x423e30
  422097:	rex.W jmp rax
  42209a:	nop
  42209b:	nop
  42209c:	nop
  42209d:	nop
  42209e:	nop
  42209f:	nop
  4220a0:	jmp    QWORD PTR [rip+0x171e6]        # 0x43928c
  4220a6:	nop
  4220a7:	nop
  4220a8:	jmp    QWORD PTR [rip+0x171d6]        # 0x439284
  4220ae:	nop
  4220af:	nop
  4220b0:	jmp    QWORD PTR [rip+0x171c6]        # 0x43927c
  4220b6:	nop
  4220b7:	nop
  4220b8:	jmp    QWORD PTR [rip+0x171b6]        # 0x439274
  4220be:	nop
  4220bf:	nop
  4220c0:	jmp    QWORD PTR [rip+0x171a6]        # 0x43926c
  4220c6:	nop
  4220c7:	nop
  4220c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220d0:	jmp    QWORD PTR [rip+0x16e6e]        # 0x438f44
  4220d6:	nop
  4220d7:	nop
  4220d8:	jmp    QWORD PTR [rip+0x16e5e]        # 0x438f3c
  4220de:	nop
  4220df:	nop
  4220e0:	jmp    QWORD PTR [rip+0x16e4e]        # 0x438f34
  4220e6:	nop
  4220e7:	nop
  4220e8:	jmp    QWORD PTR [rip+0x16e3e]        # 0x438f2c
  4220ee:	nop
  4220ef:	nop
  4220f0:	jmp    QWORD PTR [rip+0x16e2e]        # 0x438f24
  4220f6:	nop
  4220f7:	nop
  4220f8:	jmp    QWORD PTR [rip+0x16e1e]        # 0x438f1c
  4220fe:	nop
  4220ff:	nop
  422100:	jmp    QWORD PTR [rip+0x16e0e]        # 0x438f14
  422106:	nop
  422107:	nop
  422108:	jmp    QWORD PTR [rip+0x16dfe]        # 0x438f0c
  42210e:	nop
  42210f:	nop
  422110:	jmp    QWORD PTR [rip+0x16dee]        # 0x438f04
  422116:	nop
  422117:	nop
  422118:	jmp    QWORD PTR [rip+0x16dde]        # 0x438efc
  42211e:	nop
  42211f:	nop
  422120:	jmp    QWORD PTR [rip+0x16dce]        # 0x438ef4
  422126:	nop
  422127:	nop
  422128:	jmp    QWORD PTR [rip+0x16dbe]        # 0x438eec
  42212e:	nop
  42212f:	nop
  422130:	jmp    QWORD PTR [rip+0x16dae]        # 0x438ee4
  422136:	nop
  422137:	nop
  422138:	jmp    QWORD PTR [rip+0x16d9e]        # 0x438edc
  42213e:	nop
  42213f:	nop
  422140:	jmp    QWORD PTR [rip+0x16d8e]        # 0x438ed4
  422146:	nop
  422147:	nop
  422148:	jmp    QWORD PTR [rip+0x16d7e]        # 0x438ecc
  42214e:	nop
  42214f:	nop
  422150:	jmp    QWORD PTR [rip+0x16d6e]        # 0x438ec4
  422156:	nop
  422157:	nop
  422158:	jmp    QWORD PTR [rip+0x16d5e]        # 0x438ebc
  42215e:	nop
  42215f:	nop
  422160:	jmp    QWORD PTR [rip+0x16d4e]        # 0x438eb4
  422166:	nop
  422167:	nop
  422168:	jmp    QWORD PTR [rip+0x16d3e]        # 0x438eac
  42216e:	nop
  42216f:	nop
  422170:	jmp    QWORD PTR [rip+0x16d2e]        # 0x438ea4
  422176:	nop
  422177:	nop
  422178:	jmp    QWORD PTR [rip+0x16d1e]        # 0x438e9c
  42217e:	nop
  42217f:	nop
  422180:	jmp    QWORD PTR [rip+0x16d0e]        # 0x438e94
  422186:	nop
  422187:	nop
  422188:	jmp    QWORD PTR [rip+0x16cfe]        # 0x438e8c
  42218e:	nop
  42218f:	nop
  422190:	jmp    QWORD PTR [rip+0x16cee]        # 0x438e84
  422196:	nop
  422197:	nop
  422198:	jmp    QWORD PTR [rip+0x16cde]        # 0x438e7c
  42219e:	nop
  42219f:	nop
  4221a0:	jmp    QWORD PTR [rip+0x16cce]        # 0x438e74
  4221a6:	nop
  4221a7:	nop
  4221a8:	jmp    QWORD PTR [rip+0x16cbe]        # 0x438e6c
  4221ae:	nop
  4221af:	nop
  4221b0:	jmp    QWORD PTR [rip+0x16cae]        # 0x438e64
  4221b6:	nop
  4221b7:	nop
  4221b8:	jmp    QWORD PTR [rip+0x16c9e]        # 0x438e5c
  4221be:	nop
  4221bf:	nop
  4221c0:	jmp    QWORD PTR [rip+0x16c8e]        # 0x438e54
  4221c6:	nop
  4221c7:	nop
  4221c8:	jmp    QWORD PTR [rip+0x16c7e]        # 0x438e4c
  4221ce:	nop
  4221cf:	nop
  4221d0:	jmp    QWORD PTR [rip+0x16c6e]        # 0x438e44
  4221d6:	nop
  4221d7:	nop
  4221d8:	jmp    QWORD PTR [rip+0x16c5e]        # 0x438e3c
  4221de:	nop
  4221df:	nop
  4221e0:	jmp    QWORD PTR [rip+0x16c4e]        # 0x438e34
  4221e6:	nop
  4221e7:	nop
  4221e8:	jmp    QWORD PTR [rip+0x16c3e]        # 0x438e2c
  4221ee:	nop
  4221ef:	nop
  4221f0:	jmp    QWORD PTR [rip+0x16c2e]        # 0x438e24
  4221f6:	nop
  4221f7:	nop
  4221f8:	jmp    QWORD PTR [rip+0x16c1e]        # 0x438e1c
  4221fe:	nop
  4221ff:	nop
  422200:	jmp    QWORD PTR [rip+0x16c0e]        # 0x438e14
  422206:	nop
  422207:	nop
  422208:	jmp    QWORD PTR [rip+0x16bfe]        # 0x438e0c
  42220e:	nop
  42220f:	nop
  422210:	push   r15
  422212:	push   r14
  422214:	push   r13
  422216:	push   r12
  422218:	push   rbp
  422219:	push   rdi
  42221a:	push   rsi
  42221b:	push   rbx
  42221c:	sub    rsp,0xd8
  422223:	mov    ebx,ecx
  422225:	mov    rsi,rdx
  422228:	call   0x41b4d0
  42222d:	mov    rcx,QWORD PTR [rip+0xb3ac]        # 0x42d5e0
  422234:	mov    edx,ebx
  422236:	mov    r8,rsi
  422239:	mov    QWORD PTR [rsp+0x60],0x0
  422242:	mov    QWORD PTR [rsp+0x68],0x0
  42224b:	mov    QWORD PTR [rsp+0x70],0x0
  422254:	mov    QWORD PTR [rsp+0x78],0x0
  42225d:	call   0x413490
  422262:	sub    ebx,eax
  422264:	mov    ecx,ebx
  422266:	xor    ebx,ebx
  422268:	test   ecx,ecx
  42226a:	jle    0x422272
  42226c:	cdqe   
  42226e:	mov    rbx,QWORD PTR [rsi+rax*8]
  422272:	mov    rsi,QWORD PTR [rip+0xb367]        # 0x42d5e0
  422279:	mov    rax,QWORD PTR [rsi+0x78]
  42227d:	test   BYTE PTR [rax+0xe0],0xf
  422284:	je     0x4226fe
  42228a:	mov    eax,DWORD PTR [rax+0xe8]
  422290:	mov    DWORD PTR [rip+0x14e52],eax        # 0x4370e8
  422296:	lea    rax,[rip+0x1d6d]        # 0x42400a
  42229d:	test   rbx,rbx
  4222a0:	cmove  rbx,rax
  4222a4:	mov    rax,QWORD PTR [rsi+0x78]
  4222a8:	mov    QWORD PTR [rip+0x10d89],rbx        # 0x433038
  4222af:	test   BYTE PTR [rax+0x10],0xf
  4222b3:	je     0x4222be
  4222b5:	mov    edx,DWORD PTR [rax+0x18]
  4222b8:	mov    DWORD PTR [rip+0x10d82],edx        # 0x433040
  4222be:	test   BYTE PTR [rax+0x78],0xf
  4222c2:	je     0x4222cb
  4222c4:	add    DWORD PTR [rip+0x10d65],0x1        # 0x433030
  4222cb:	call   0x4058a0
  4222d0:	call   0x407ad0
  4222d5:	test   eax,eax
  4222d7:	js     0x42277a
  4222dd:	lea    rcx,[rip+0xfffffffffffdf27c]        # 0x401560
  4222e4:	call   0x407ac8
  4222e9:	mov    ecx,DWORD PTR [rip+0x10d51]        # 0x433040
  4222ef:	call   0x407ac0
  4222f4:	lea    rax,[rsp+0x50]
  4222f9:	mov    r9d,DWORD PTR [rip+0x14de8]        # 0x4370e8
  422300:	lea    r8,[rip+0x1d34]        # 0x42403b
  422307:	mov    edx,0x6
  42230c:	mov    rcx,rax
  42230f:	mov    QWORD PTR [rsp+0x40],rax
  422314:	call   0x414cf0
  422319:	lea    rcx,[rip+0x14db0]        # 0x4370d0
  422320:	call   0x407c08
  422325:	test   eax,eax
  422327:	js     0x42279a
  42232d:	lea    rcx,[rip+0x14da4]        # 0x4370d8
  422334:	call   0x4078e8
  422339:	test   eax,eax
  42233b:	js     0x42279a
  422341:	lea    rcx,[rip+0x14d78]        # 0x4370c0
  422348:	call   0x407c28
  42234d:	test   eax,eax
  42234f:	js     0x42279a
  422355:	mov    rax,QWORD PTR [rsi+0x78]
  422359:	lea    r12,[rsp+0x60]
  42235e:	test   BYTE PTR [rax+0x1b0],0xf
  422365:	jne    0x422743
  42236b:	cmp    BYTE PTR [rsp+0x60],0x0
  422370:	je     0x422716
  422376:	call   0x4058a0
  42237b:	xor    ecx,ecx
  42237d:	lea    r14,[rip+0x1d1e]        # 0x4240a2
  422384:	lea    rbp,[rip+0x25b5]        # 0x424940
  42238b:	call   0x407bb0
  422390:	lea    rcx,[rip+0x1d1e]        # 0x4240b5
  422397:	mov    rdx,rax
  42239a:	xor    ebx,ebx
  42239c:	call   0x401640
  4223a1:	mov    r8,QWORD PTR [rsp+0x40]
  4223a6:	mov    rdx,QWORD PTR [rip+0x10c8b]        # 0x433038
  4223ad:	lea    rcx,[rip+0x1d19]        # 0x4240cd
  4223b4:	call   0x401640
  4223b9:	lea    rax,[rsp+0x80]
  4223c1:	mov    r15,QWORD PTR [rip+0x16bb4]        # 0x438f7c
  4223c8:	mov    QWORD PTR [rsp+0x38],rax
  4223cd:	lea    rax,[rsp+0x58]
  4223d2:	mov    QWORD PTR [rsp+0x48],rax
  4223d7:	nop    WORD PTR [rax+rax*1+0x0]
  4223e0:	mov    rdi,QWORD PTR [rsp+0x38]
  4223e5:	mov    r8,QWORD PTR [rsp+0x40]
  4223ea:	xor    r9d,r9d
  4223ed:	mov    rdx,QWORD PTR [rip+0x10c44]        # 0x433038
  4223f4:	mov    QWORD PTR [rsp+0x20],0x0
  4223fd:	mov    rcx,rdi
  422400:	call   0x4055d0
  422405:	mov    eax,DWORD PTR [rip+0x10c25]        # 0x433030
  42240b:	mov    rdx,r12
  42240e:	mov    rcx,rdi
  422411:	mov    DWORD PTR [rsp+0xc0],eax
  422418:	call   0x4050f0
  42241d:	mov    rcx,QWORD PTR [rsp+0x48]
  422422:	mov    edx,0x12
  422427:	call   0x407a90
  42242c:	mov    ecx,DWORD PTR [rsp+0x80]
  422433:	call   0x414c80
  422438:	mov    rcx,QWORD PTR [rsp+0x58]
  42243d:	mov    rdx,rax
  422440:	call   0x4078b0
  422445:	mov    rsi,QWORD PTR [rsp+0x58]
  42244a:	lea    rdx,[rip+0xfffffffffffdf1df]        # 0x401630
  422451:	mov    rcx,rsi
  422454:	call   0x407898
  422459:	lea    rdx,[rip+0xfffffffffffdf1c0]        # 0x401620
  422460:	mov    rcx,rsi
  422463:	call   0x4078a8
  422468:	lea    rdx,[rip+0xfffffffffffdf121]        # 0x401590
  42246f:	mov    rcx,rsi
  422472:	call   0x4078a0
  422477:	mov    rsi,QWORD PTR [rip+0x10bba]        # 0x433038
  42247e:	test   rsi,rsi
  422481:	je     0x4224a4
  422483:	mov    rcx,rsi
  422486:	call   0x421d98
  42248b:	mov    edx,0x3a
  422490:	mov    rcx,rsi
  422493:	mov    rdi,rax
  422496:	call   0x421dc0
  42249b:	test   rax,rax
  42249e:	je     0x4226c0
  4224a4:	movsxd rax,ebx
  4224a7:	mov    r13d,0x6
  4224ad:	nop    DWORD PTR [rax]
  4224b0:	mov    rsi,r12
  4224b3:	mov    rdi,r14
  4224b6:	mov    rcx,r13
  4224b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4224bb:	je     0x4224d1
  4224bd:	lea    rdx,[rax+rax*2]
  4224c1:	shl    rdx,0x4
  4224c5:	mov    edx,DWORD PTR [rbp+rdx*1+0x28]
  4224c9:	test   edx,edx
  4224cb:	jne    0x4226a0
  4224d1:	lea    rsi,[rax+rax*2]
  4224d5:	mov    rcx,QWORD PTR [rsp+0x58]
  4224da:	shl    rsi,0x4
  4224de:	add    rsi,rbp
  4224e1:	call   QWORD PTR [rsi+0x8]
  4224e4:	cmp    eax,0x3
  4224e7:	je     0x422600
  4224ed:	mov    rdx,QWORD PTR [rsi]
  4224f0:	lea    rcx,[rip+0x1bb1]        # 0x4240a8
  4224f7:	mov    edi,eax
  4224f9:	call   0x401640
  4224fe:	call   r15
  422501:	lea    rcx,[rax+0x30]
  422505:	call   0x421e80
  42250a:	test   edi,edi
  42250c:	jne    0x4225d0
  422512:	mov    rdx,QWORD PTR [rsi+0x10]
  422516:	test   rdx,rdx
  422519:	je     0x422673
  42251f:	lea    rcx,[rip+0x1b8a]        # 0x4240b0
  422526:	call   0x401640
  42252b:	add    ebx,0x1
  42252e:	movsxd rax,ebx
  422531:	lea    rax,[rax+rax*2]
  422535:	shl    rax,0x4
  422539:	mov    rsi,QWORD PTR [rbp+rax*1+0x0]
  42253e:	mov    rcx,QWORD PTR [rsp+0x58]
  422543:	call   0x407b68
  422548:	mov    rcx,QWORD PTR [rsp+0x38]
  42254d:	call   0x405500
  422552:	test   rsi,rsi
  422555:	je     0x422634
  42255b:	cmp    ebx,0xa
  42255e:	jle    0x4223e0
  422564:	mov    rax,QWORD PTR [rip+0xb125]        # 0x42d690
  42256b:	mov    r10d,DWORD PTR [rax]
  42256e:	test   r10d,r10d
  422571:	jne    0x4223e0
  422577:	mov    rax,QWORD PTR [rip+0xb102]        # 0x42d680
  42257e:	mov    r9d,DWORD PTR [rax]
  422581:	test   r9d,r9d
  422584:	jne    0x4223e0
  42258a:	mov    rax,QWORD PTR [rip+0xb10f]        # 0x42d6a0
  422591:	mov    r8d,DWORD PTR [rax]
  422594:	test   r8d,r8d
  422597:	jne    0x4223e0
  42259d:	mov    rax,QWORD PTR [rip+0xb0cc]        # 0x42d670
  4225a4:	mov    ecx,DWORD PTR [rax]
  4225a6:	test   ecx,ecx
  4225a8:	jne    0x4223e0
  4225ae:	call   QWORD PTR [rip+0x169c8]        # 0x438f7c
  4225b4:	lea    rdx,[rip+0x1a9d]        # 0x424058
  4225bb:	lea    rcx,[rax+0x60]
  4225bf:	call   0x401530
  4225c4:	jmp    0x422634
  4225c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4225d0:	cmp    edi,0x1
  4225d3:	je     0x422690
  4225d9:	cmp    edi,0x2
  4225dc:	jne    0x42252b
  4225e2:	mov    rdx,QWORD PTR [rsi+0x20]
  4225e6:	lea    rcx,[rip+0x1ac3]        # 0x4240b0
  4225ed:	call   0x401640
  4225f2:	jmp    0x42252b
  4225f7:	nop    WORD PTR [rax+rax*1+0x0]
  422600:	add    ebx,0x1
  422603:	lea    rcx,[rip+0x2336]        # 0x424940
  42260a:	movsxd rax,ebx
  42260d:	lea    rdx,[rax+rax*2]
  422611:	shl    rdx,0x4
  422615:	cmp    QWORD PTR [rcx+rdx*1],0x0
  42261a:	jne    0x4224b0
  422620:	mov    rcx,QWORD PTR [rsp+0x58]
  422625:	call   0x407b68
  42262a:	mov    rcx,QWORD PTR [rsp+0x38]
  42262f:	call   0x405500
  422634:	mov    rcx,QWORD PTR [rip+0x14a9d]        # 0x4370d8
  42263b:	call   0x4078e0
  422640:	mov    rcx,QWORD PTR [rip+0x14a89]        # 0x4370d0
  422647:	call   0x407bf8
  42264c:	mov    rcx,QWORD PTR [rip+0x14a6d]        # 0x4370c0
  422653:	call   0x407c20
  422658:	call   0x407ad8
  42265d:	xor    eax,eax
  42265f:	add    rsp,0xd8
  422666:	pop    rbx
  422667:	pop    rsi
  422668:	pop    rdi
  422669:	pop    rbp
  42266a:	pop    r12
  42266c:	pop    r13
  42266e:	pop    r14
  422670:	pop    r15
  422672:	ret    
  422673:	mov    rax,QWORD PTR [rip+0xaf56]        # 0x42d5d0
  42267a:	lea    rcx,[rip+0x1a2f]        # 0x4240b0
  422681:	mov    rdx,QWORD PTR [rax]
  422684:	call   0x401640
  422689:	jmp    0x42252b
  42268e:	xchg   ax,ax
  422690:	mov    rdx,QWORD PTR [rsi+0x18]
  422694:	jmp    0x42251f
  422699:	nop    DWORD PTR [rax+0x0]
  4226a0:	add    ebx,0x2
  4226a3:	lea    rdx,[rip+0x2296]        # 0x424940
  4226aa:	movsxd rax,ebx
  4226ad:	lea    rax,[rax+rax*2]
  4226b1:	shl    rax,0x4
  4226b5:	mov    rsi,QWORD PTR [rdx+rax*1]
  4226b9:	jmp    0x42253e
  4226be:	xchg   ax,ax
  4226c0:	cmp    edi,0x2
  4226c3:	jle    0x4226e4
  4226c5:	movsx  eax,BYTE PTR [rsi]
  4226c8:	sub    eax,0x30
  4226cb:	cmp    eax,0x9
  4226ce:	ja     0x4226e4
  4226d0:	movsxd rax,edi
  4226d3:	movsx  eax,BYTE PTR [rsi+rax*1-0x1]
  4226d8:	sub    eax,0x30
  4226db:	cmp    eax,0x9
  4226de:	jbe    0x4224a4
  4226e4:	mov    rcx,QWORD PTR [rsp+0x58]
  4226e9:	mov    r9,rdi
  4226ec:	mov    r8,rsi
  4226ef:	mov    edx,0x1
  4226f4:	call   0x407950
  4226f9:	jmp    0x4224a4
  4226fe:	test   BYTE PTR [rax+0x1b0],0xf
  422705:	jne    0x422763
  422707:	mov    DWORD PTR [rip+0x149d7],0x1bb        # 0x4370e8
  422711:	jmp    0x422296
  422716:	mov    rcx,QWORD PTR [rsp+0x40]
  42271b:	lea    rdx,[rip+0x192d]        # 0x42404f
  422722:	call   0x4058d0
  422727:	lea    r8,[rip+0x191e]        # 0x42404c
  42272e:	mov    r9,rax
  422731:	mov    edx,0x20
  422736:	mov    rcx,r12
  422739:	call   0x414cf0
  42273e:	jmp    0x422376
  422743:	mov    r9,QWORD PTR [rax+0x1b8]
  42274a:	lea    r8,[rip+0x18fb]        # 0x42404c
  422751:	mov    edx,0x20
  422756:	mov    rcx,r12
  422759:	call   0x414cf0
  42275e:	jmp    0x42236b
  422763:	mov    rcx,QWORD PTR [rax+0x1b8]
  42276a:	call   0x405460
  42276f:	mov    DWORD PTR [rip+0x14973],eax        # 0x4370e8
  422775:	jmp    0x422296
  42277a:	call   QWORD PTR [rip+0x167fc]        # 0x438f7c
  422780:	lea    rdx,[rip+0x1891]        # 0x424018
  422787:	lea    rcx,[rax+0x60]
  42278b:	call   0x401530
  422790:	mov    ecx,0x1
  422795:	call   0x421e98
  42279a:	call   QWORD PTR [rip+0x167dc]        # 0x438f7c
  4227a0:	lea    rdx,[rip+0x1897]        # 0x42403e
  4227a7:	lea    rcx,[rax+0x60]
  4227ab:	call   0x401530
  4227b0:	mov    ecx,0x1
  4227b5:	call   0x421e98
  4227ba:	nop
  4227bb:	nop
  4227bc:	nop
  4227bd:	nop
  4227be:	nop
  4227bf:	nop
  4227c0:	(bad)  
  4227c1:	(bad)  
  4227c2:	(bad)  
  4227c3:	(bad)  
  4227c4:	(bad)  
  4227c5:	(bad)  
  4227c6:	(bad)  
  4227c7:	inc    DWORD PTR [rax]
  4227c9:	add    BYTE PTR [rax],al
  4227cb:	add    BYTE PTR [rax],al
  4227cd:	add    BYTE PTR [rax],al
  4227cf:	add    bh,bh
  4227d1:	(bad)  
  4227d2:	(bad)  
  4227d3:	(bad)  
  4227d4:	(bad)  
  4227d5:	(bad)  
  4227d6:	(bad)  
  4227d7:	inc    DWORD PTR [rax]
  4227d9:	add    BYTE PTR [rax],al
  4227db:	add    BYTE PTR [rax],al
  4227dd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000423000 <.data>:
  423000:	or     al,BYTE PTR [rax]
	...
  42303e:	add    BYTE PTR [rax],al
  423040:	and    eax,0x41534e55
  423045:	rex.RX
  423046:	rex.RB pop r15
  423048:	push   rdx
  423049:	rex.RB
  42304a:	rex.WRX
  42304b:	rex.RB
  42304c:	rex.RXB
  42304d:	rex.WRXB push r12
  42304f:	rex.WB
  423050:	push   r12
  423052:	rex.WB
  423053:	rex.WRXB
  423054:	rex.WRX cmp r13b,BYTE PTR [rbx]
  423057:	push   rbx
  423058:	rex.WB
  423059:	rex.RXB
  42305a:	rex.WRX sub rax,0x3a4c4c41
  423060:	sub    eax,DWORD PTR [rbx+0x55]
  423063:	push   rdx
  423064:	push   rsi
  423065:	rex.RB sub eax,0x4c4c41
	...
  4230bf:	add    BYTE PTR [rbx],ch
  4230c1:	push   rsi
  4230c2:	rex.RB push r10
  4230c4:	push   rbx
  4230c5:	sub    eax,0x31534c54
  4230ca:	xor    bh,BYTE PTR cs:[rdx]
  4230cd:	sub    edx,DWORD PTR [rsi+0x45]
  4230d0:	push   rdx
  4230d1:	push   rbx
  4230d2:	sub    eax,0x31534c54
  4230d7:	xor    DWORD PTR cs:[rdx],edi
  4230da:	sub    edx,DWORD PTR [rsi+0x45]
  4230dd:	push   rdx
  4230de:	push   rbx
  4230df:	sub    eax,0x31534c54
  4230e4:	xor    BYTE PTR cs:[rdx],bh
  4230e7:	sub    edx,DWORD PTR [rsi+0x45]
  4230ea:	push   rdx
  4230eb:	push   rbx
  4230ec:	sub    eax,0x334c5353
  4230f1:	xor    BYTE PTR cs:[rax],al
	...
  423100:	sub    edx,DWORD PTR [rsi+0x45]
  423103:	push   rdx
  423104:	push   rbx
  423105:	sub    eax,0x31534c54
  42310a:	xor    bh,BYTE PTR cs:[rdx]
  42310d:	sub    edx,DWORD PTR [rsi+0x45]
  423110:	push   rdx
  423111:	push   rbx
  423112:	sub    eax,0x31534c54
  423117:	xor    DWORD PTR cs:[rdx],edi
  42311a:	sub    edx,DWORD PTR [rsi+0x45]
  42311d:	push   rdx
  42311e:	push   rbx
  42311f:	sub    eax,0x31534c54
  423124:	xor    BYTE PTR cs:[rdx],bh
  423127:	sub    edx,DWORD PTR [rsi+0x45]
  42312a:	push   rdx
  42312b:	push   rbx
  42312c:	sub    eax,0x334c5353
  423131:	xor    BYTE PTR cs:[rax],al
  423134:	add    DWORD PTR [rax],eax
  423136:	add    BYTE PTR [rax],al
  423138:	rex.B ins BYTE PTR es:[rdi],dx
  42313a:	rex.X add BYTE PTR [rax],al
  42313d:	add    BYTE PTR [rax],al
  42313f:	add    BYTE PTR [rcx],al
  423141:	nop
  423142:	add    al,BYTE PTR [rax]
	...
  423150:	(bad)  
  423151:	pop    rsp
	...
  42316e:	add    BYTE PTR [rax],al
  423170:	(bad)  
  423171:	jg     0x4231b5
	...
  42317f:	add    BYTE PTR [rax+0x427a],al
  423185:	add    BYTE PTR [rax],al
  423187:	add    BYTE PTR [rbx+rdi*2+0x42],ah
  42318e:	add    BYTE PTR [rax],al
  423190:	jmp    0x423113
  423192:	rex.X add BYTE PTR [rax],al
	...
  42319d:	add    BYTE PTR [rax],al
  42319f:	add    ch,dl
  4231a1:	jg     0x4231e5
  4231a3:	add    BYTE PTR [rax],al
  4231a5:	add    BYTE PTR [rax],al
  4231a7:	add    BYTE PTR [rdi-0x80],al
  4231aa:	rex.X add BYTE PTR [rax],al
  4231ad:	add    BYTE PTR [rax],al
  4231af:	add    BYTE PTR [rcx-0x80],cl
  4231b2:	rex.X add BYTE PTR [rax],al
  4231b5:	add    BYTE PTR [rax],al
  4231b7:	add    BYTE PTR [rax+0x32],al
  4231ba:	rex.X add BYTE PTR [rax],al
  4231bd:	add    BYTE PTR [rax],al
  4231bf:	add    BYTE PTR [rdi],dh
  4231c1:	add    BYTE PTR [rdx+0x0],0x0
	...
  4231d5:	add    BYTE PTR [rax],al
  4231d7:	add    BYTE PTR [rax+0x413e],dl
	...
  4231e5:	add    BYTE PTR [rax],al
  4231e7:	add    BYTE PTR [rdi],al
  4231e9:	add    BYTE PTR [rax],al
  4231eb:	add    BYTE PTR [rax],0x80
  4231ee:	add    BYTE PTR [rax+0x8],al
  4231f4:	add    eax,0x0
  4231f9:	add    BYTE PTR [rax],al
  4231fb:	add    BYTE PTR [rax],al
  4231fd:	add    BYTE PTR [rax],al
  4231ff:	add    BYTE PTR [rbx],al
  423201:	(bad)  
  423202:	rex.X add BYTE PTR [rax],al
	...
  423215:	add    BYTE PTR [rax],al
  423217:	add    BYTE PTR [rax+0x7a],dl
  42321a:	rex.X add BYTE PTR [rax],al
	...
  423241:	add    BYTE PTR [rax+rax*1+0x0],ah
  423245:	add    BYTE PTR [rax+rax*1+0x0],ah
  423249:	add    BYTE PTR [rax],0x0
  42324c:	add    DWORD PTR [rax],eax
  42324e:	add    BYTE PTR [rax],al
  423250:	and    BYTE PTR [rax+0x0],dl
	...
  423277:	add    al,ah
  423279:	jl     0x4232bb
  42327b:	add    BYTE PTR [rax],al
  42327d:	add    BYTE PTR [rax],al
  42327f:	add    BYTE PTR [rcx],dl
  423281:	jle    0x4232c5
  423283:	add    BYTE PTR [rax],al
  423285:	add    BYTE PTR [rax],al
  423287:	add    BYTE PTR [rdx],ah
  423289:	jle    0x4232cd
  42328b:	add    BYTE PTR [rax],al
  42328d:	add    BYTE PTR [rax],al
  42328f:	add    BYTE PTR [rax],ch
  423291:	jle    0x4232d5
	...
  4232a7:	add    BYTE PTR [rcx],al
  4232a9:	add    BYTE PTR [rsi+0x0],dl
  4232ac:	add    DWORD PTR [rax],eax
  4232ae:	push   rsi
  4232af:	add    BYTE PTR [rax],al
  4232b1:	add    BYTE PTR [rax],0x0
  4232b4:	(bad)  
  4232b5:	inc    DWORD PTR [rax]
  4232b7:	add    BYTE PTR [rax],ah
	...
  4232e5:	add    BYTE PTR [rax],al
  4232e7:	add    BYTE PTR [rsi],ch
  4232e9:	jle    0x42332d
  4232eb:	add    BYTE PTR [rax],al
  4232ed:	add    BYTE PTR [rax],al
  4232ef:	add    BYTE PTR [rdx+0x7e],al
  4232f2:	rex.X add BYTE PTR [rax],al
  4232f5:	add    BYTE PTR [rax],al
  4232f7:	add    BYTE PTR [rdx+0x7e],cl
  4232fa:	rex.X add BYTE PTR [rax],al
	...
  42330d:	add    BYTE PTR [rax],al
  42330f:	add    BYTE PTR [rdx],al
  423311:	add    BYTE PTR [rax+0x0],dh
  423314:	add    al,BYTE PTR [rax]
  423316:	jo     0x423318
  423318:	add    BYTE PTR [rax+0x10000],al
  42331e:	add    BYTE PTR [rax],al
  423320:	and    BYTE PTR [rax+0x0],dl
	...
  423347:	add    BYTE PTR [rax+0x407c],al
  42334d:	add    BYTE PTR [rax],al
  42334f:	add    BYTE PTR [rdx+0x7e],dl
  423352:	rex.X add BYTE PTR [rax],al
  423355:	add    BYTE PTR [rax],al
  423357:	add    BYTE PTR [rcx+0x7e],ch
  42335a:	rex.X add BYTE PTR [rax],al
  42335d:	add    BYTE PTR [rax],al
  42335f:	add    BYTE PTR [rsi+0x7e],ch
  423362:	rex.X add BYTE PTR [rax],al
	...
  423375:	add    BYTE PTR [rax],al
  423377:	add    BYTE PTR [rbx],al
  423379:	add    BYTE PTR [rcx],al
  42337b:	adc    BYTE PTR [rbx],al
  42337d:	add    BYTE PTR [rcx],al
  42337f:	adc    BYTE PTR [rax],al
  423381:	add    BYTE PTR [rax],0x0
  423384:	add    DWORD PTR [rax],eax
  423386:	add    BYTE PTR [rax],al
  423388:	and    BYTE PTR [rax],dl
  42338a:	add    BYTE PTR [rax],cl
	...
  4233b0:	rex jge 0x4233f3
  4233b3:	add    BYTE PTR [rax],al
  4233b5:	add    BYTE PTR [rax],al
  4233b7:	add    BYTE PTR [rbx+0x7e],dh
  4233ba:	rex.X add BYTE PTR [rax],al
	...
  4233c5:	add    BYTE PTR [rax],al
  4233c7:	add    BYTE PTR [rsi+rdi*2+0x42],bl
	...
  4233de:	add    BYTE PTR [rax],al
  4233e0:	add    al,0x0
  4233e2:	add    dl,BYTE PTR [rax]
  4233e4:	add    al,0x0
  4233e6:	add    dl,BYTE PTR [rax]
  4233e8:	add    BYTE PTR [rax+0x10000],al
  4233ee:	add    BYTE PTR [rax],al
  4233f0:	and    BYTE PTR [rax],dl
	...
  42341e:	add    BYTE PTR [rax],al
  423420:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423421:	jle    0x423465
  423423:	add    BYTE PTR [rax],al
  423425:	add    BYTE PTR [rax],al
  423427:	add    BYTE PTR [rdx],dl
  423429:	jg     0x42346d
  42342b:	add    BYTE PTR [rax],al
  42342d:	add    BYTE PTR [rax],al
  42342f:	add    BYTE PTR [rcx],ah
  423431:	jg     0x423475
	...
  423447:	add    BYTE PTR [rip+0x7600],al        # 0x42aa4d
  42344d:	xor    BYTE PTR [rsi+0x0],0x0
  423451:	add    BYTE PTR [rax],0x0
  423454:	add    DWORD PTR [rax],eax
  423456:	add    BYTE PTR [rax],al
  423458:	add    BYTE PTR [rcx],dl
  42345a:	add    eax,DWORD PTR [rax]
  42345c:	add    al,BYTE PTR [rax]
	...
  42347e:	add    BYTE PTR [rax],al
  423480:	(bad)  
  423481:	sbb    eax,DWORD PTR [rcx+0x0]
  423484:	add    BYTE PTR [rax],al
  423486:	add    BYTE PTR [rax],al
  423488:	cwde   
  423489:	jg     0x4234cd
	...
  423497:	add    BYTE PTR [rdi+rdi*2+0x42],bh
	...
  4234ae:	add    BYTE PTR [rax],al
  4234b0:	(bad)  
  4234b1:	add    BYTE PTR [rax+0x0],ch
  4234b4:	add    BYTE PTR [rax-0x7fffff98],al
  4234ba:	add    BYTE PTR [rax],al
  4234bc:	add    DWORD PTR [rax],eax
  4234be:	add    BYTE PTR [rax],al
  4234c0:	add    BYTE PTR [rcx],al
  4234c2:	add    al,BYTE PTR [rax]
  4234c4:	add    eax,DWORD PTR [rax]
	...
  4234e6:	add    BYTE PTR [rax],al
  4234e8:	(bad)  
  4234e9:	jl     0x42352b
  4234eb:	add    BYTE PTR [rax],al
  4234ed:	add    BYTE PTR [rax],al
  4234ef:	add    BYTE PTR [rax],dh
  4234f1:	jg     0x423535
	...
  4234ff:	add    BYTE PTR [rdi+rdi*2+0x42],bl
	...
  423517:	add    BYTE PTR [rdi],al
  423519:	add    BYTE PTR [rcx],ah
  42351b:	add    BYTE PTR [rax],al
  42351d:	and    BYTE PTR [rcx],0x0
  423520:	add    BYTE PTR [rax+0x10000],al
  423526:	add    BYTE PTR [rax],al
  423528:	add    BYTE PTR [rcx],al
  42352a:	or     BYTE PTR [rax],al
  42352c:	add    al,0x0
	...
  42354e:	add    BYTE PTR [rax],al
  423550:	nop
  423551:	mov    eax,DWORD PTR [rax+0x0]
  423554:	add    BYTE PTR [rax],al
  423556:	add    BYTE PTR [rax],al
  423558:	xor    BYTE PTR [rdi+0x42],bh
	...
  423567:	add    BYTE PTR [rdi+rdi*2+0x42],bl
	...
  42357f:	add    BYTE PTR [rcx],al
	...
  4235c1:	add    DWORD PTR [rdx],eax
  4235c3:	add    eax,DWORD PTR [rax*1+0x9080706]
  4235ca:	or     cl,BYTE PTR [rbx]
  4235cc:	or     al,0xd
  4235ce:	(bad)  
  4235cf:	movups xmm2,XMMWORD PTR [rcx]
  4235d2:	adc    dl,BYTE PTR [rbx]
  4235d4:	adc    al,0x15
  4235d6:	(bad)  
  4235d7:	(bad)  
  4235d8:	sbb    BYTE PTR [rcx],bl
  4235da:	sbb    bl,BYTE PTR [rbx]
  4235dc:	sbb    al,0x1d
  4235de:	(bad)  
  4235df:	(bad)  
  4235e0:	and    BYTE PTR [rcx],ah
  4235e2:	and    ah,BYTE PTR [rbx]
  4235e4:	and    al,0x25
  4235e6:	es (bad) 
  4235e8:	sub    BYTE PTR [rcx],ch
  4235ea:	sub    ch,BYTE PTR [rbx]
  4235ec:	sub    al,0x2d
  4235ee:	cs (bad) 
  4235f0:	xor    BYTE PTR [rcx],dh
  4235f2:	xor    dh,BYTE PTR [rbx]
  4235f4:	xor    al,0x35
  4235f6:	ss (bad) 
  4235f8:	cmp    BYTE PTR [rcx],bh
  4235fa:	cmp    bh,BYTE PTR [rbx]
  4235fc:	cmp    al,0x3d
  4235fe:	ds (bad) 
  423600:	rex (bad) 
  423602:	(bad)
  423607:	addr32 push 0x6c6b6a69
  42360d:	ins    DWORD PTR es:[rdi],dx
  42360e:	outs   dx,BYTE PTR ds:[rsi]
  42360f:	outs   dx,DWORD PTR ds:[rsi]
  423610:	jo     0x423683
  423612:	jb     0x423687
  423614:	je     0x42368b
  423616:	jbe    0x42368f
  423618:	js     0x423693
  42361a:	jp     0x423677
  42361c:	pop    rsp
  42361d:	pop    rbp
  42361e:	pop    rsi
  42361f:	pop    rdi
  423620:	(bad)  
  423621:	(bad)  
  423622:	(bad)
  423627:	addr32 push 0x6c6b6a69
  42362d:	ins    DWORD PTR es:[rdi],dx
  42362e:	outs   dx,BYTE PTR ds:[rsi]
  42362f:	outs   dx,DWORD PTR ds:[rsi]
  423630:	jo     0x4236a3
  423632:	jb     0x4236a7
  423634:	je     0x4236ab
  423636:	jbe    0x4236af
  423638:	js     0x4236b3
  42363a:	jp     0x4236b7
  42363c:	jl     0x4236bb
  42363e:	jle    0x4236bf
  423640:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  423647:	xchg   DWORD PTR [rax-0x73747577],ecx
  42364d:	lea    ecx,[rsi-0x6d6e6f71]
  423653:	xchg   ebx,eax
  423654:	xchg   esp,eax
  423655:	xchg   ebp,eax
  423656:	xchg   esi,eax
  423657:	xchg   edi,eax
  423658:	cwde   
  423659:	cdq    
  42365a:	(bad)  
  42365b:	fwait
  42365c:	pushf  
  42365d:	popf   
  42365e:	sahf   
  42365f:	lahf   
  423660:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  423669:	test   eax,0xadacabaa
  42366e:	scas   al,BYTE PTR es:[rdi]
  42366f:	scas   eax,DWORD PTR es:[rdi]
  423670:	mov    al,0xb1
  423672:	mov    dl,0xb3
  423674:	mov    ah,0xb5
  423676:	mov    dh,0xb7
  423678:	mov    eax,0xbcbbbab9
  42367d:	mov    ebp,0xc1c0bfbe
  423682:	ret    0xc4c3
  423685:	(bad)
  423688:	enter  0xcac9,0xcb
  42368c:	int3   
  42368d:	int    0xce
  42368f:	iret   
  423690:	rcl    cl,1
  423692:	rcl    bl,cl
  423694:	(bad)  
  423695:	(bad)  
  423696:	(bad)  
  423697:	xlat   BYTE PTR ds:[rbx]
  423698:	fcomp  st(1)
  42369a:	fcmovu st,st(3)
  42369c:	(bad)  
  42369e:	(bad)  
  4236a0:	loopne 0x423683
  4236a2:	loop   0x423687
  4236a4:	in     al,0xe5
  4236a6:	out    0xe7,al
  4236a8:	call   0xffffffffed2e2196
  4236ad:	in     eax,dx
  4236ae:	out    dx,al
  4236af:	out    dx,eax
  4236b0:	lock icebp 
  4236b2:	repnz repz hlt 
  4236b5:	cmc    
  4236b6:	div    bh
  4236b8:	clc    
  4236b9:	stc    
  4236ba:	cli    
  4236bb:	sti    
  4236bc:	cld    
  4236bd:	std    
  4236be:	(bad)  
  4236bf:	inc    DWORD PTR [rcx]
  4236c1:	nop
  4236c2:	add    al,BYTE PTR [rax]
	...
  4236d0:	xchg   edi,eax
  4236d1:	add    al,BYTE PTR [rax]
	...
  4236ef:	add    ah,ah
  4236f1:	xchg   ecx,eax
  4236f2:	rex.X add BYTE PTR [rax],al
	...
  4236fd:	add    BYTE PTR [rax],al
  4236ff:	add    BYTE PTR [rax-0x73],al
  423702:	rex.X add BYTE PTR [rax],al
  423705:	add    BYTE PTR [rax],al
  423707:	add    BYTE PTR [rbp-0x72],bl
  42370a:	rex.X add BYTE PTR [rax],al
  42370d:	add    BYTE PTR [rax],al
  42370f:	add    BYTE PTR [rbx],bl
  423711:	xchg   esp,eax
  423712:	rex.X add BYTE PTR [rax],al
	...
  42371d:	add    BYTE PTR [rax],al
  42371f:	add    al,dh
  423721:	xchg   ecx,eax
  423722:	rex.X add BYTE PTR [rax],al
  423725:	add    BYTE PTR [rax],al
  423727:	add    BYTE PTR [rbp+0x4292],cl
  42372d:	add    BYTE PTR [rax],al
  42372f:	add    BYTE PTR [rsi],bh
  423731:	xchg   ebx,eax
  423732:	rex.X add BYTE PTR [rax],al
  423735:	add    BYTE PTR [rax],al
  423737:	add    al,al
  423739:	(bad)  
  42373a:	rex.X add BYTE PTR [rax],al
  42373d:	add    BYTE PTR [rax],al
  42373f:	add    BYTE PTR [rcx-0x6e],ch
  423742:	rex.X add BYTE PTR [rax],al
	...
  423755:	add    BYTE PTR [rax],al
  423757:	add    al,ah
  423759:	rex.R
  42375a:	add    BYTE PTR [r8],al
	...
  423765:	add    BYTE PTR [rax],al
  423767:	add    BYTE PTR [rax+rax*1],al
  42376a:	add    BYTE PTR [rax-0x7fff8000],al
  423770:	add    eax,0x2000000
	...
  423795:	add    BYTE PTR [rax],al
  423797:	add    BYTE PTR [rsi],al
  423799:	xchg   DWORD PTR [rdx+0x0],eax
	...
  4237c0:	add    BYTE PTR [rax],al
  4237c2:	outs   dx,DWORD PTR ds:[rsi]
  4237c3:	add    BYTE PTR [rax],al
  4237c5:	add    BYTE PTR [rdi+0x0],ch
  4237c8:	add    BYTE PTR [rax+0x10000],al
  4237ce:	add    BYTE PTR [rax],al
  4237d0:	and    BYTE PTR [rax],dl
	...
  4237fe:	add    BYTE PTR [rax],al
  423800:	std    
  423801:	nop
  423802:	rex.X add BYTE PTR [rax],al
  423805:	add    BYTE PTR [rax],al
  423807:	add    BYTE PTR [rax],dl
  423809:	xchg   ecx,eax
  42380a:	rex.X add BYTE PTR [rax],al
  42380d:	add    BYTE PTR [rax],al
  42380f:	add    BYTE PTR [rdi],dl
  423811:	xchg   ecx,eax
  423812:	rex.X add BYTE PTR [rax],al
	...
  423825:	add    BYTE PTR [rax],al
  423827:	add    BYTE PTR [rcx],al
  423829:	add    BYTE PTR [rbx+0x0],dh
  42382c:	add    DWORD PTR [rax],eax
  42382e:	jae    0x423830
  423830:	add    BYTE PTR [rax+0x10000],al
  423836:	add    BYTE PTR [rax],al
  423838:	add    BYTE PTR [rax],bl
	...
  423866:	add    BYTE PTR [rax],al
  423868:	(bad)  
  423869:	xchg   ecx,eax
  42386a:	rex.X add BYTE PTR [rax],al
  42386d:	add    BYTE PTR [rax],al
  42386f:	add    BYTE PTR [rsi],bh
  423871:	xchg   ecx,eax
  423872:	rex.X add BYTE PTR [rax],al
  423875:	add    BYTE PTR [rax],al
  423877:	add    BYTE PTR [rdi-0x6f],al
  42387a:	rex.X add BYTE PTR [rax],al
  42387d:	add    BYTE PTR [rax],al
  42387f:	add    BYTE PTR [rcx+rdx*4+0x42],al
  423883:	add    BYTE PTR [rax],al
  423885:	add    BYTE PTR [rax],al
  423887:	add    BYTE PTR [rbp-0x6f],cl
  42388a:	rex.X add BYTE PTR [rax],al
  42388d:	add    BYTE PTR [rax],al
  42388f:	add    BYTE PTR [rdx],al
  423891:	add    BYTE PTR [rsi+0x0],dh
  423894:	add    BYTE PTR [rax-0x7fffff8a],al
  42389a:	add    BYTE PTR [rax],al
  42389c:	add    DWORD PTR [rax],eax
  42389e:	add    BYTE PTR [rax],al
  4238a0:	add    BYTE PTR [rcx],dl
  4238a2:	add    eax,DWORD PTR [rax]
  4238a4:	add    al,BYTE PTR [rax]
	...
  4238c6:	add    BYTE PTR [rax],al
  4238c8:	(bad)  
  4238c9:	sbb    eax,DWORD PTR [rcx+0x0]
  4238cc:	add    BYTE PTR [rax],al
  4238ce:	add    BYTE PTR [rax],al
  4238d0:	mov    eax,0x4291
	...
  4238dd:	add    BYTE PTR [rax],al
  4238df:	add    ah,bl
  4238e1:	xchg   ecx,eax
  4238e2:	rex.X add BYTE PTR [rax],al
	...
  4238f5:	add    BYTE PTR [rax],al
  4238f7:	add    BYTE PTR [rbx],al
  4238f9:	add    BYTE PTR [rdi],bh
  4238fb:	add    BYTE PTR [rax],al
  4238fd:	cmp    BYTE PTR [rdi],0x0
  423900:	add    BYTE PTR [rax+0x10000],al
  423906:	add    BYTE PTR [rax],al
  423908:	add    BYTE PTR [rcx],al
  42390a:	add    al,BYTE PTR [rax]
  42390c:	add    eax,DWORD PTR [rax]
	...
  42392e:	add    BYTE PTR [rax],al
  423930:	lock rex.R
  423932:	add    BYTE PTR [r8],al
  423935:	add    BYTE PTR [rax],al
  423937:	add    BYTE PTR [rax-0x6f],dl
  42393a:	rex.X add BYTE PTR [rax],al
	...
  423945:	add    BYTE PTR [rax],al
  423947:	add    BYTE PTR [rcx+rdx*4+0x42],bh
	...
  42395f:	add    BYTE PTR [rax+rax*1],al
  423962:	and    DWORD PTR [rax],eax
  423964:	add    BYTE PTR [rax-0x7fffffdf],al
  42396a:	add    BYTE PTR [rax],al
  42396c:	add    DWORD PTR [rax],eax
  42396e:	add    BYTE PTR [rax],al
  423970:	add    BYTE PTR [rcx],al
  423972:	or     BYTE PTR [rax],al
  423974:	add    al,0x0
	...
  423996:	add    BYTE PTR [rax],al
  423998:	nop
  423999:	mov    eax,DWORD PTR [rax+0x0]
  42399c:	add    BYTE PTR [rax],al
  42399e:	add    BYTE PTR [rax],al
  4239a0:	push   rax
  4239a1:	xchg   ecx,eax
  4239a2:	rex.X add BYTE PTR [rax],al
	...
  4239ad:	add    BYTE PTR [rax],al
  4239af:	add    BYTE PTR [rcx+rdx*4+0x42],bh
	...
  4239c7:	add    dh,cl
  4239c9:	mov    al,0x42
  4239cb:	add    BYTE PTR [rax],al
  4239cd:	add    BYTE PTR [rax],al
  4239cf:	add    BYTE PTR [rcx],al
	...
  4239fd:	add    BYTE PTR [rax],al
  4239ff:	add    BYTE PTR [rax+rax*1+0x0],ch
  423a03:	add    BYTE PTR [rax],al
  423a05:	add    BYTE PTR [rax],al
  423a07:	add    BYTE PTR [rdi+0x3d],dh
  423a0a:	rex.X add BYTE PTR [rax],al
  423a0d:	add    BYTE PTR [rax],al
  423a0f:	add    BYTE PTR [rdx+0x3d],dh
  423a12:	rex.X add BYTE PTR [rax],al
  423a15:	add    BYTE PTR [rax],al
  423a17:	add    BYTE PTR [rbp+0x3d],ch
  423a1a:	rex.X add BYTE PTR [rax],al
  423a1d:	add    BYTE PTR [rax],al
  423a1f:	add    BYTE PTR [rax+0x3d],ch
  423a22:	rex.X add BYTE PTR [rax],al
  423a25:	add    BYTE PTR [rax],al
  423a27:	add    BYTE PTR [rax],al
  423a29:	mov    cl,0x42
  423a2b:	add    BYTE PTR [rax],al
  423a2d:	add    BYTE PTR [rax],al
  423a2f:	add    BYTE PTR [rdi],bl
  423a31:	mov    cl,0x42
  423a33:	add    BYTE PTR [rax],al
  423a35:	add    BYTE PTR [rax],al
  423a37:	add    BYTE PTR [rbx-0x4f],dl
  423a3a:	rex.X add BYTE PTR [rax],al
  423a3d:	add    BYTE PTR [rax],al
  423a3f:	add    BYTE PTR [rcx+0x42b1],al
  423a45:	add    BYTE PTR [rax],al
  423a47:	add    ah,ah
  423a49:	mov    cl,0x42
  423a4b:	add    BYTE PTR [rax],al
  423a4d:	add    BYTE PTR [rax],al
  423a4f:	add    BYTE PTR [rax],cl
  423a51:	mov    dl,0x42
  423a53:	add    BYTE PTR [rax],al
  423a55:	add    BYTE PTR [rax],al
  423a57:	add    BYTE PTR [rdx],bh
  423a59:	mov    dl,0x42
  423a5b:	add    BYTE PTR [rax],al
  423a5d:	add    BYTE PTR [rax],al
  423a5f:	add    BYTE PTR [rbp+0x42b2],dl
  423a65:	add    BYTE PTR [rax],al
  423a67:	add    BYTE PTR [rbx+0x42b2],ch
  423a6d:	add    BYTE PTR [rax],al
  423a6f:	add    ah,ah
  423a71:	mov    dl,0x42
  423a73:	add    BYTE PTR [rax],al
  423a75:	add    BYTE PTR [rax],al
  423a77:	add    BYTE PTR [rdi],al
  423a79:	mov    bl,0x42
  423a7b:	add    BYTE PTR [rax],al
  423a7d:	add    BYTE PTR [rax],al
  423a7f:	add    BYTE PTR [rbx+rsi*4],dh
  423a82:	rex.X add BYTE PTR [rax],al
  423a85:	add    BYTE PTR [rax],al
  423a87:	add    BYTE PTR [rbx+rsi*4+0x42],dl
  423a8b:	add    BYTE PTR [rax],al
  423a8d:	add    BYTE PTR [rax],al
  423a8f:	add    BYTE PTR [rdx-0x4d],bh
  423a92:	rex.X add BYTE PTR [rax],al
  423a95:	add    BYTE PTR [rax],al
  423a97:	add    BYTE PTR [rbx+0x42b3],bl
  423a9d:	add    BYTE PTR [rax],al
  423a9f:	add    ah,cl
  423aa1:	mov    bl,0x42
  423aa3:	add    BYTE PTR [rax],al
  423aa5:	add    BYTE PTR [rax],al
  423aa7:	add    ah,ch
  423aa9:	mov    bl,0x42
  423aab:	add    BYTE PTR [rax],al
  423aad:	add    BYTE PTR [rax],al
  423aaf:	add    BYTE PTR [rax],ah
  423ab1:	mov    ah,0x42
  423ab3:	add    BYTE PTR [rax],al
  423ab5:	add    BYTE PTR [rax],al
  423ab7:	add    BYTE PTR [rbp-0x4c],al
  423aba:	rex.X add BYTE PTR [rax],al
  423abd:	add    BYTE PTR [rax],al
  423abf:	add    BYTE PTR [rsi-0x4c],bl
  423ac2:	rex.X add BYTE PTR [rax],al
  423ac5:	add    BYTE PTR [rax],al
  423ac7:	add    BYTE PTR [rsp+rsi*4+0x42],al
  423ace:	add    BYTE PTR [rax],al
  423ad0:	xchg   esi,eax
  423ad1:	mov    ah,0x42
  423ad3:	add    BYTE PTR [rax],al
  423ad5:	add    BYTE PTR [rax],al
  423ad7:	add    BYTE PTR [rsi*4+0x42],ah
  423ade:	add    BYTE PTR [rax],al
  423ae0:	push   rbx
  423ae1:	mov    ch,0x42
  423ae3:	add    BYTE PTR [rax],al
  423ae5:	add    BYTE PTR [rax],al
  423ae7:	add    BYTE PTR [rdx-0x4b],bh
  423aea:	rex.X add BYTE PTR [rax],al
  423aed:	add    BYTE PTR [rax],al
  423aef:	add    BYTE PTR [rdi+0x42b5],al
  423af5:	add    BYTE PTR [rax],al
  423af7:	add    BYTE PTR [rcx+0x42b5],ah
  423afd:	add    BYTE PTR [rax],al
  423aff:	add    BYTE PTR [rbx+0x42b5],bh
  423b05:	add    BYTE PTR [rax],al
  423b07:	add    dh,ah
  423b09:	mov    ch,0x42
  423b0b:	add    BYTE PTR [rax],al
  423b0d:	add    BYTE PTR [rax],al
  423b0f:	add    BYTE PTR [rdx],cl
  423b11:	mov    dh,0x42
  423b13:	add    BYTE PTR [rax],al
  423b15:	add    BYTE PTR [rax],al
  423b17:	add    BYTE PTR [rdi],dh
  423b19:	mov    dh,0x42
  423b1b:	add    BYTE PTR [rax],al
  423b1d:	add    BYTE PTR [rax],al
  423b1f:	add    BYTE PTR [rsi+rsi*4+0x42],dl
  423b23:	add    BYTE PTR [rax],al
  423b25:	add    BYTE PTR [rax],al
  423b27:	add    BYTE PTR [rdi-0x4a],bh
  423b2a:	rex.X add BYTE PTR [rax],al
  423b2d:	add    BYTE PTR [rax],al
  423b2f:	add    dl,dl
  423b31:	mov    dh,0x42
  423b33:	add    BYTE PTR [rax],al
  423b35:	add    BYTE PTR [rax],al
  423b37:	add    al,bh
  423b39:	mov    dh,0x42
  423b3b:	add    BYTE PTR [rax],al
  423b3d:	add    BYTE PTR [rax],al
  423b3f:	add    BYTE PTR [rsi],ah
  423b41:	mov    bh,0x42
  423b43:	add    BYTE PTR [rax],al
  423b45:	add    BYTE PTR [rax],al
  423b47:	add    BYTE PTR [rbx-0x49],dl
  423b4a:	rex.X add BYTE PTR [rax],al
  423b4d:	add    BYTE PTR [rax],al
  423b4f:	add    BYTE PTR [rsi-0x49],ch
  423b52:	rex.X add BYTE PTR [rax],al
  423b55:	add    BYTE PTR [rax],al
  423b57:	add    BYTE PTR [rdi+0x42b7],bl
  423b5d:	add    BYTE PTR [rax],al
  423b5f:	add    al,dl
  423b61:	mov    bh,0x42
  423b63:	add    BYTE PTR [rax],al
  423b65:	add    BYTE PTR [rax],al
  423b67:	add    bl,ch
  423b69:	mov    bh,0x42
  423b6b:	add    BYTE PTR [rax],al
  423b6d:	add    BYTE PTR [rax],al
  423b6f:	add    BYTE PTR [rax+rdi*4],cl
  423b72:	rex.X add BYTE PTR [rax],al
  423b75:	add    BYTE PTR [rax],al
  423b77:	add    BYTE PTR [rax],dh
  423b79:	mov    eax,0x42
  423b7e:	add    BYTE PTR [rax],al
  423b80:	(bad)  
  423b81:	mov    eax,0x42
  423b86:	add    BYTE PTR [rax],al
  423b88:	je     0x423b42
  423b8a:	rex.X add BYTE PTR [rax],al
  423b8d:	add    BYTE PTR [rax],al
  423b8f:	add    BYTE PTR [rdx+0x42b8],ch
  423b95:	add    BYTE PTR [rax],al
  423b97:	add    dl,bl
  423b99:	mov    eax,0x42
  423b9e:	add    BYTE PTR [rax],al
  423ba0:	or     DWORD PTR [rcx+0x42],edi
  423ba6:	add    BYTE PTR [rax],al
  423ba8:	xor    DWORD PTR [rcx+0x42],edi
  423bae:	add    BYTE PTR [rax],al
  423bb0:	push   rsp
  423bb1:	mov    ecx,0x42
  423bb6:	add    BYTE PTR [rax],al
  423bb8:	ins    DWORD PTR es:[rdi],dx
  423bb9:	mov    ecx,0x42
  423bbe:	add    BYTE PTR [rax],al
  423bc0:	jge    0x423b7b
  423bc2:	rex.X add BYTE PTR [rax],al
  423bc5:	add    BYTE PTR [rax],al
  423bc7:	add    BYTE PTR [rcx+rdi*4+0x42],cl
  423bce:	add    BYTE PTR [rax],al
  423bd0:	xchg   edx,eax
  423bd1:	mov    ecx,0x42
  423bd6:	add    BYTE PTR [rax],al
  423bd8:	ret    
  423bd9:	mov    ecx,0x42
  423bde:	add    BYTE PTR [rax],al
  423be0:	lock mov ecx,0x42
  423be6:	add    BYTE PTR [rax],al
  423be8:	sub    BYTE PTR [rdx+0x42],bh
  423bee:	add    BYTE PTR [rax],al
  423bf0:	rex.RB mov r10d,0x42
  423bf6:	add    BYTE PTR [rax],al
  423bf8:	outs   dx,DWORD PTR ds:[rsi]
  423bf9:	mov    edx,0x42
  423bfe:	add    BYTE PTR [rax],al
  423c00:	cdq    
  423c01:	mov    edx,0x42
  423c06:	add    BYTE PTR [rax],al
  423c08:	mov    bl,0xba
  423c0a:	rex.X add BYTE PTR [rax],al
  423c0d:	add    BYTE PTR [rax],al
  423c0f:	add    dl,al
  423c11:	mov    edx,0x42
  423c16:	add    BYTE PTR [rax],al
  423c18:	loopne 0x423bd4
  423c1a:	rex.X add BYTE PTR [rax],al
  423c1d:	add    BYTE PTR [rax],al
  423c1f:	add    dl,bh
  423c21:	mov    edx,0x42
  423c26:	add    BYTE PTR [rax],al
  423c28:	or     edi,DWORD PTR [rbx+0x42]
  423c2e:	add    BYTE PTR [rax],al
  423c30:	cmp    bh,BYTE PTR [rbx+0x42]
  423c36:	add    BYTE PTR [rax],al
  423c38:	pop    rcx
  423c39:	mov    ebx,0x42
  423c3e:	add    BYTE PTR [rax],al
  423c40:	je     0x423bfd
  423c42:	rex.X add BYTE PTR [rax],al
  423c45:	add    BYTE PTR [rax],al
  423c47:	add    bl,bl
  423c49:	mov    ebx,0x42
  423c4e:	add    BYTE PTR [rax],al
  423c50:	rex.RB mov r12d,0x42
  423c56:	add    BYTE PTR [rax],al
  423c58:	jge    0x423c16
  423c5a:	rex.X add BYTE PTR [rax],al
  423c5d:	add    BYTE PTR [rax],al
  423c5f:	add    BYTE PTR [rdi+0x42bc],bl
  423c65:	add    BYTE PTR [rax],al
  423c67:	add    dl,cl
  423c69:	mov    esp,0x42
  423c6e:	add    BYTE PTR [rax],al
  423c70:	or     eax,0x42bd
  423c75:	add    BYTE PTR [rax],al
  423c77:	add    BYTE PTR [rsi],ch
  423c79:	mov    ebp,0x42
  423c7e:	add    BYTE PTR [rax],al
  423c80:	rex.RXB mov r13d,0x42
  423c86:	add    BYTE PTR [rax],al
  423c88:	push   0xffffffffffffffbd
  423c8a:	rex.X add BYTE PTR [rax],al
  423c8d:	add    BYTE PTR [rax],al
  423c8f:	add    BYTE PTR [rax+0x42bd],dl
  423c95:	add    BYTE PTR [rax],al
  423c97:	add    BYTE PTR [rax+0x42bd],bl
  423c9d:	add    BYTE PTR [rax],al
  423c9f:	add    al,cl
  423ca1:	mov    ebp,0x42
  423ca6:	add    BYTE PTR [rax],al
  423ca8:	(bad)  
  423ca9:	mov    ebp,0x42
  423cae:	add    BYTE PTR [rax],al
  423cb0:	std    
  423cb1:	mov    ebp,0x42
  423cb6:	add    BYTE PTR [rax],al
  423cb8:	and    DWORD PTR [rsi+0x42],edi
  423cbe:	add    BYTE PTR [rax],al
  423cc0:	rex.RB mov r14d,0x42
  423cc6:	add    BYTE PTR [rax],al
  423cc8:	jge    0x423c88
  423cca:	rex.X add BYTE PTR [rax],al
  423ccd:	add    BYTE PTR [rax],al
  423ccf:	add    BYTE PTR [rdi+0x42be],dl
  423cd5:	add    BYTE PTR [rax],al
  423cd7:	add    BYTE PTR [rdx+0x42be],dh
  423cdd:	add    BYTE PTR [rax],al
  423cdf:	add    BYTE PTR [rdi+0x42be],bh
  423ce5:	add    BYTE PTR [rax],al
  423ce7:	add    dh,bl
  423ce9:	mov    esi,0x42
  423cee:	add    BYTE PTR [rax],al
  423cf0:	in     al,dx
  423cf1:	mov    esi,0x42
  423cf6:	add    BYTE PTR [rax],al
  423cf8:	adc    DWORD PTR [rdi+0x42],edi
  423cfe:	add    BYTE PTR [rax],al
  423d00:	sub    eax,0x42bf
  423d05:	add    BYTE PTR [rax],al
  423d07:	add    BYTE PTR [rbx],dh
  423d09:	mov    edi,0x42
  423d0e:	add    BYTE PTR [rax],al
  423d10:	(bad)  
  423d11:	mov    edi,0x42
  423d16:	add    BYTE PTR [rax],al
  423d18:	jge    0x423cd9
  423d1a:	rex.X add BYTE PTR [rax],al
  423d1d:	add    BYTE PTR [rax],al
  423d1f:	add    BYTE PTR [rdi+0x42bf],bh
  423d25:	add    BYTE PTR [rax],al
  423d27:	add    cl,bl
  423d29:	mov    edi,0x42
  423d2e:	add    BYTE PTR [rax],al
  423d30:	repnz mov edi,0x42
  423d36:	add    BYTE PTR [rax],al
  423d38:	sbb    al,al
  423d3a:	rex.X add BYTE PTR [rax],al
  423d3d:	add    BYTE PTR [rax],al
  423d3f:	add    BYTE PTR [rbp-0x40],al
  423d42:	rex.X add BYTE PTR [rax],al
  423d45:	add    BYTE PTR [rax],al
  423d47:	add    BYTE PTR [rax],ah
  423d49:	rol    DWORD PTR [rdx+0x0],0x0
  423d4d:	add    BYTE PTR [rax],al
  423d4f:	add    BYTE PTR [rcx-0x3f],al
  423d52:	rex.X add BYTE PTR [rax],al
  423d55:	add    BYTE PTR [rax],al
  423d57:	add    BYTE PTR [rsi-0x3f],ah
  423d5a:	rex.X add BYTE PTR [rax],al
  423d5d:	add    BYTE PTR [rax],al
  423d5f:	add    BYTE PTR [rdi+0x42c1],bl
  423d65:	add    BYTE PTR [rax],al
  423d67:	add    BYTE PTR [rip+0x727473],bh        # 0xb4b1e0
  423d6d:	cmp    eax,0x6d756e
  423d72:	cmp    eax,0x64574b
  423d77:	cmp    eax,0x462f54
  423d7c:	add    BYTE PTR [rax],al
  423d7e:	add    BYTE PTR [rax],al
  423d80:	cmp    BYTE PTR [rip+0x42],0x0        # 0x423dc9
  423d87:	add    BYTE PTR [rax+0x423d],al
	...
  423d9d:	add    BYTE PTR [rax],al
  423d9f:	add    al,bl
  423da1:	(bad)  
  423da2:	rex.X add BYTE PTR [rax],al
	...
  423dad:	add    BYTE PTR [rax],al
  423daf:	add    bh,bh
  423db1:	(bad)  
  423db2:	(bad)  
  423db3:	(bad)  
  423db4:	(bad)  
  423db5:	(bad)  
  423db6:	(bad)  
  423db7:	inc    DWORD PTR [rax]
  423db9:	add    BYTE PTR [rax],al
  423dbb:	add    BYTE PTR [rax],al
  423dbd:	add    BYTE PTR [rax],al
  423dbf:	add    bh,bh
	...
  423dcd:	add    BYTE PTR [rax],al
  423dcf:	add    BYTE PTR [rdx],al
	...
  423ddd:	add    BYTE PTR [rax],al
  423ddf:	add    bh,bh
  423de1:	(bad)  
  423de2:	(bad)  
  423de3:	inc    DWORD PTR [rax]
	...
  423ded:	add    BYTE PTR [rax],al
  423def:	add    BYTE PTR [rax+0x0],al
  423df2:	add    BYTE PTR [rax],al
  423df4:	ret    
  423df5:	mov    edi,0x3fc0ffff
  423dfa:	add    BYTE PTR [rax],al
  423dfc:	add    DWORD PTR [rax],eax
  423dfe:	add    BYTE PTR [rax],al
  423e00:	add    BYTE PTR [rax],al
  423e02:	add    BYTE PTR [rax],al
  423e04:	(bad)  
	...
  423e0d:	add    BYTE PTR [rax],al
  423e0f:	add    BYTE PTR [rax+0x4366],al
	...
  423e1d:	add    BYTE PTR [rax],al
  423e1f:	add    BYTE PTR [rax+0x421f],dh
  423e25:	add    BYTE PTR [rax],al
  423e27:	add    al,al
  423e29:	(bad)  
  423e2a:	rex.X add BYTE PTR [rax],al
  423e2d:	add    BYTE PTR [rax],al
  423e2f:	add    BYTE PTR [rax+0x20],al
  423e32:	rex.X add BYTE PTR [rax],al
  423e35:	add    BYTE PTR [rax],al
  423e37:	add    al,dh
  423e39:	(bad)  
  423e3a:	rex.X add BYTE PTR [rax],al
  423e3d:	add    BYTE PTR [rax],al
  423e3f:	add    BYTE PTR [rdx],dh
  423e41:	movabs ds:0x2b992ddf,al
  423e4a:	add    BYTE PTR [rax],al
  423e4c:	add    BYTE PTR [rax],al
  423e4e:	add    BYTE PTR [rax],al
  423e50:	int    0x5d
  423e52:	and    dl,dl
  423e54:	data16 (bad) 
  423e56:	(bad)  
  423e57:	inc    DWORD PTR [rax]
  423e59:	add    BYTE PTR [rax],al
  423e5b:	add    BYTE PTR [rax],al
  423e5d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000424000 <.rdata>:
  424000:	jl     0x42403e
  424002:	and    eax,0x207c3e64
  424007:	and    eax,0x6f6c0073
  42400c:	movsxd esp,DWORD PTR [rcx+0x6c]
  42400f:	push   0x74736f
  424014:	add    BYTE PTR [rax],al
  424016:	add    BYTE PTR [rax],al
  424018:	ins    BYTE PTR es:[edi],dx
  42401a:	outs   dx,DWORD PTR ds:[rsi]
  42401b:	(bad)
  424020:	je     0x424083
  424022:	je     0x424089
  424024:	and    BYTE PTR [rcx+0x6e],ch
  424027:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
  42402f:	je     0x42409a
  424031:	outs   dx,DWORD PTR ds:[rsi]
  424032:	outs   dx,BYTE PTR ds:[rsi]
  424033:	and    BYTE PTR [rbp+0x72],ah
  424036:	jb     0x4240a7
  424038:	jb     0x424044
  42403a:	add    BYTE PTR [rip+0x656d0064],ah        # 0x65af40a4
  424040:	ins    DWORD PTR es:[rdi],dx
  424041:	outs   dx,DWORD PTR ds:[rsi]
  424042:	jb     0x4240bd
  424044:	and    BYTE PTR [rbp+0x72],ah
  424047:	jb     0x4240b8
  424049:	jb     0x424055
  42404b:	add    BYTE PTR [rip+0x63740073],ah        # 0x63b640c4
  424051:	jo     0x424053
  424053:	add    BYTE PTR [rax],al
  424055:	add    BYTE PTR [rax],al
  424057:	add    BYTE PTR [rdx],cl
  424059:	push   rbx
  42405a:	gs jb  0x4240d3
  42405d:	gs jb  0x424080
  424060:	outs   dx,DWORD PTR fs:[rsi]
  424062:	gs jae 0x424085
  424065:	outs   dx,BYTE PTR ds:[rsi]
  424066:	outs   dx,DWORD PTR ds:[rsi]
  424067:	je     0x424089
  424069:	jae    0x4240e0
  42406b:	jo     0x4240dd
  42406d:	outs   dx,DWORD PTR ds:[rsi]
  42406e:	jb     0x4240e4
  424070:	and    BYTE PTR [rcx+0x6e],ah
  424073:	jns    0x424095
  424075:	outs   dx,DWORD PTR ds:[rsi]
  424076:	data16 and BYTE PTR [rbx+0x53],dl
  42407a:	rex.WR and BYTE PTR [rbx],r14b
  42407d:	xor    BYTE PTR cs:[rax+riz*1],ch
  424081:	push   rsp
  424082:	rex.WR push rbx
  424084:	and    BYTE PTR [rcx],dh
  424086:	xor    BYTE PTR cs:[rax],ah
  424089:	(bad)  
  42408a:	outs   dx,BYTE PTR ds:[rsi]
  42408b:	and    BYTE PTR fs:[rsp+rcx*2+0x53],dl
  424090:	and    BYTE PTR [rcx],dh
  424092:	xor    DWORD PTR cs:[rax],esp
  424095:	(bad)  
  424096:	outs   dx,BYTE PTR ds:[rsi]
  424097:	and    BYTE PTR fs:[rsp+rcx*2+0x53],dl
  42409c:	and    BYTE PTR [rcx],dh
  42409e:	xor    cl,BYTE PTR cs:[rdx]
  4240a1:	add    BYTE PTR [rax+0x74],ch
  4240a4:	je     0x424116
  4240a6:	jae    0x4240a8
  4240a8:	and    eax,0x2e733835
  4240ad:	cs add BYTE PTR cs:[rax],ah
  4240b1:	and    eax,0x47000a73
  4240b6:	outs   dx,BYTE PTR ds:[rsi]
  4240b7:	jne    0x42410d
  4240b9:	rex.WR push rbx
  4240bb:	and    BYTE PTR [rbp+riz*2+0x62],ah
  4240bf:	jne    0x424128
  4240c1:	and    BYTE PTR [rbx+0x6c],ah
  4240c4:	imul   esp,DWORD PTR [rbp+0x6e],0x73252074
  4240cb:	or     al,BYTE PTR [rax]
  4240cd:	rex.XB push 0x696b6365
  4240d3:	outs   dx,BYTE PTR ds:[rsi]
  4240d4:	and    BYTE PTR [eip+0x73253a73],ah        # 0x73677b4e
  4240db:	or     al,BYTE PTR [rax]
  4240dd:	outs   dx,WORD PTR ds:[rsi]
  4240df:	jb     0x424101
  4240e1:	push   rbx
  4240e2:	push   rbx
  4240e3:	rex.WR and BYTE PTR [rbx],r14b
  4240e6:	xor    BYTE PTR cs:[rax],ah
  4240e9:	sub    BYTE PTR [rdx+0x46],dl
  4240ec:	rex.XB
  4240ed:	xor    DWORD PTR ss:[rax],esi
  4240f0:	xor    DWORD PTR [rcx],ebp
  4240f2:	and    BYTE PTR [rbx+0x75],dh
  4240f5:	jo     0x424167
  4240f7:	outs   dx,DWORD PTR ds:[rsi]
  4240f8:	jb     0x42416e
  4240fa:	add    BYTE PTR [rcx+0x65],bh
  4240fd:	jae    0x4240ff
  4240ff:	outs   dx,BYTE PTR ds:[rsi]
  424100:	outs   dx,DWORD PTR ds:[rsi]
  424101:	add    BYTE PTR [rbp+rsi*2+0x6e],ah
  424105:	outs   dx,BYTE PTR ds:[rsi]
  424106:	outs   dx,DWORD PTR ds:[rsi]
  424107:	add    BYTE PTR [rdi+0x68],dh
  42410a:	gs je  0x424175
  42410d:	gs jb  0x424130
  424110:	ja     0x424177
  424112:	and    BYTE PTR [rsi+0x65],ch
  424115:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42411b:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  424123:	push   rsp
  424124:	rex.WR push rbx
  424126:	and    BYTE PTR [rcx],dh
  424128:	xor    al,BYTE PTR cs:[rax]
  42412b:	add    BYTE PTR [rax],al
  42412d:	add    BYTE PTR [rax],al
  42412f:	add    BYTE PTR [rdi+0x68],dh
  424132:	gs je  0x42419d
  424135:	gs jb  0x424158
  424138:	ja     0x42419f
  42413a:	and    BYTE PTR [rsi+0x65],ch
  42413d:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  424143:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  42414b:	push   rsp
  42414c:	rex.WR push rbx
  42414e:	and    BYTE PTR [rcx],dh
  424150:	xor    DWORD PTR cs:[rax],eax
  424153:	add    BYTE PTR [rax],al
  424155:	add    BYTE PTR [rax],al
  424157:	add    BYTE PTR [rdi+0x68],dh
  42415a:	gs je  0x4241c5
  42415d:	gs jb  0x424180
  424160:	ja     0x4241c7
  424162:	and    BYTE PTR [rsi+0x65],ch
  424165:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42416b:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  424173:	push   rsp
  424174:	rex.WR push rbx
  424176:	and    BYTE PTR [rcx],dh
  424178:	xor    BYTE PTR cs:[rax],al
  42417b:	add    BYTE PTR [rax],al
  42417d:	add    BYTE PTR [rax],al
  42417f:	add    BYTE PTR [rdi+0x68],dh
  424182:	gs je  0x4241ed
  424185:	gs jb  0x4241a8
  424188:	and    eax,0x455f4f4e
  42418d:	pop    rax
  42418e:	push   rsp
  42418f:	rex.RB
  424190:	rex.WRX push rbx
  424192:	rex.WB
  424193:	rex.WRXB
  424194:	rex.WRX push rbx
  424196:	and    BYTE PTR [rcx+0x73],ch
  424199:	and    BYTE PTR [rdx+0x65],dh
  42419c:	jno    0x424213
  42419e:	imul   esi,DWORD PTR [rdx+0x65],0x68770064
  4241a5:	gs je  0x424210
  4241a8:	gs jb  0x4241cb
  4241ab:	and    eax,0x504d4f43
  4241b0:	push   r12
  4241b2:	and    BYTE PTR [rcx+0x73],ch
  4241b5:	and    BYTE PTR [rdx+0x65],dh
  4241b8:	jno    0x42422f
  4241ba:	imul   esi,DWORD PTR [rdx+0x65],0x6f660064
  4241c1:	jb     0x4241e3
  4241c3:	push   rsp
  4241c4:	rex.WR push rbx
  4241c6:	and    BYTE PTR [rcx],dh
  4241c8:	xor    BYTE PTR cs:[rax],ah
  4241cb:	sub    BYTE PTR [rdx+0x46],dl
  4241ce:	rex.XB xor sil,BYTE PTR [r10]
  4241d1:	xor    al,0x36
  4241d3:	sub    DWORD PTR [rax],esp
  4241d5:	jae    0x42424c
  4241d7:	jo     0x424249
  4241d9:	outs   dx,DWORD PTR ds:[rsi]
  4241da:	jb     0x424250
  4241dc:	add    BYTE PTR [rax],al
  4241de:	add    BYTE PTR [rax],al
  4241e0:	outs   dx,WORD PTR ds:[rsi]
  4241e2:	jb     0x424204
  4241e4:	push   rsp
  4241e5:	rex.WR push rbx
  4241e7:	and    BYTE PTR [rcx],dh
  4241e9:	xor    BYTE PTR cs:[rax],ah
  4241ec:	sub    BYTE PTR [rdx+0x46],dl
  4241ef:	rex.XB xor sil,BYTE PTR [r10]
  4241f2:	xor    al,0x36
  4241f4:	sub    DWORD PTR [rax],esp
  4241f6:	jae    0x42426d
  4241f8:	jo     0x42426a
  4241fa:	outs   dx,DWORD PTR ds:[rsi]
  4241fb:	jb     0x424271
  4241fd:	and    BYTE PTR [rdi+0x69],dh
  424200:	je     0x42426a
  424202:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  424206:	and    BYTE PTR [rcx],dh
  424208:	xor    BYTE PTR cs:[rax],ah
  42420b:	jb     0x424272
  42420d:	movsxd ebp,DWORD PTR [rdi+0x72]
  424210:	and    BYTE PTR fs:[rsi+0x65],dh
  424214:	jb     0x424289
  424216:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6600
  42421d:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  424221:	and    BYTE PTR [rcx],dh
  424223:	xor    DWORD PTR cs:[rax],esp
  424226:	sub    BYTE PTR [rdx+0x46],dl
  424229:	rex.XB xor al,0x33
  42422c:	xor    al,0x36
  42422e:	sub    DWORD PTR [rax],esp
  424230:	jae    0x4242a7
  424232:	jo     0x4242a4
  424234:	outs   dx,DWORD PTR ds:[rsi]
  424235:	jb     0x4242ab
  424237:	add    BYTE PTR [rsi+0x61],ah
  42423a:	ins    BYTE PTR es:[rdi],dx
  42423b:	ins    BYTE PTR es:[rdi],dx
  42423c:	(bad)  
  42423e:	movsxd ebp,DWORD PTR [rbx+0x20]
  424241:	data16 jb 0x4242b3
  424244:	ins    DWORD PTR es:[rdi],dx
  424245:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  424249:	and    BYTE PTR [rcx],dh
  42424b:	xor    DWORD PTR cs:[rax],esp
  42424e:	je     0x4242bf
  424250:	add    BYTE PTR [rsp+rcx*2+0x53],dl
  424254:	and    BYTE PTR [rcx],dh
  424256:	xor    BYTE PTR cs:[rax],al
  424259:	data16 (bad) 
  42425b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4c535300
  424263:	and    BYTE PTR [rbx],dh
  424265:	xor    BYTE PTR cs:[rax],al
  424268:	outs   dx,WORD PTR ds:[rsi]
  42426a:	jb     0x42428c
  42426c:	push   rsp
  42426d:	rex.WR push rbx
  42426f:	and    BYTE PTR [rcx],dh
  424271:	xor    ah,BYTE PTR cs:[rax]
  424274:	sub    BYTE PTR [rdx+0x46],dl
  424277:	rex.XB xor eax,0x29363432
  42427d:	and    BYTE PTR [rbx+0x75],dh
  424280:	jo     0x4242f2
  424282:	outs   dx,DWORD PTR ds:[rsi]
  424283:	jb     0x4242f9
  424285:	add    BYTE PTR [rsi+0x61],ah
  424288:	ins    BYTE PTR es:[rdi],dx
  424289:	ins    BYTE PTR es:[rdi],dx
  42428a:	(bad)  
  42428c:	movsxd ebp,DWORD PTR [rbx+0x20]
  42428f:	data16 jb 0x424301
  424292:	ins    DWORD PTR es:[rdi],dx
  424293:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  424297:	and    BYTE PTR [rcx],dh
  424299:	cs and BYTE PTR ss:[rdi+rbp*2+0x0],dh
  42429f:	add    BYTE PTR [rsi+0x61],ah
  4242a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65732820
  4242aa:	jb     0x424322
  4242ac:	gs jb  0x4242cf
  4242af:	jb     0x424316
  4242b1:	jno    0x424328
  4242b3:	imul   esi,DWORD PTR [rdx+0x65],0x61662073
  4242ba:	ins    BYTE PTR es:[rdi],dx
  4242bb:	ins    BYTE PTR es:[rdi],dx
  4242bc:	(bad)  
  4242be:	movsxd ebp,DWORD PTR [rbx+0x20]
  4242c1:	fs (bad) 
  4242c3:	outs   dx,BYTE PTR ds:[rsi]
  4242c4:	movsxd esp,DWORD PTR [rbp+0x29]
  4242c7:	add    BYTE PTR [rsi+0x6f],ah
  4242ca:	jb     0x4242ec
  4242cc:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
  4242d3:	jo     0x424347
  4242d5:	imul   esp,DWORD PTR [rcx+0x74],0x61662065
  4242dc:	ins    BYTE PTR es:[rdi],dx
  4242dd:	ins    BYTE PTR es:[rdi],dx
  4242de:	(bad)  
  4242e0:	movsxd ebp,DWORD PTR [rbx+0x20]
  4242e3:	sub    BYTE PTR [rdx+0x46],dl
  4242e6:	rex.XB (bad) 
  4242e8:	xor    eax,0x20293730
  4242ed:	jae    0x424364
  4242ef:	jo     0x424361
  4242f1:	outs   dx,DWORD PTR ds:[rsi]
  4242f2:	jb     0x424368
  4242f4:	add    BYTE PTR [rsi+0x6f],ah
  4242f7:	jb     0x424319
  4242f9:	rex.W push rsp
  4242fb:	push   rsp
  4242fc:	push   rax
  4242fd:	push   rbx
  4242fe:	and    BYTE PTR [rbx+0x65],dh
  424301:	jb     0x424379
  424303:	gs jb  0x424326
  424306:	outs   dx,BYTE PTR ds:[rsi]
  424307:	(bad)  
  424308:	ins    DWORD PTR es:[rdi],dx
  424309:	add    BYTE PTR gs:[rsi+0x6f],ch
  42430d:	je     0x42432f
  42430f:	movsxd ebp,DWORD PTR [rax+0x65]
  424312:	movsxd ebp,DWORD PTR [rbx+0x65]
  424315:	add    BYTE PTR fs:[rsi+0x6f],ah
  424319:	jb     0x42433b
  42431b:	movsxd esp,DWORD PTR [rbp+0x72]
  42431e:	je     0x424389
  424320:	imul   sp,WORD PTR [rbx+0x61],0x6574
  424326:	and    BYTE PTR [rcx+0x6e],ch
  424329:	outs   dx,WORD PTR ds:[rsi]
  42432b:	jb     0x42439a
  42432d:	(bad)  
  42432e:	je     0x424399
  424330:	outs   dx,DWORD PTR ds:[rsi]
  424331:	outs   dx,BYTE PTR ds:[rsi]
  424332:	add    BYTE PTR [rax],al
  424334:	outs   dx,WORD PTR ds:[rsi]
  424336:	jb     0x424358
  424338:	movsxd esp,DWORD PTR [rbp+0x72]
  42433b:	je     0x4243a6
  42433d:	imul   sp,WORD PTR [rbx+0x61],0x6574
  424343:	and    BYTE PTR [rbx+0x68],ah
  424346:	(bad)  
  424347:	imul   ebp,DWORD PTR [rsi+0x20],0x6564726f
  42434e:	jb     0x424350
  424350:	jae    0x4243c1
  424352:	jb     0x4243c8
  424354:	gs add BYTE PTR fs:[rbp+0x6e],dh
  424359:	jae    0x4243ca
  42435b:	jb     0x4243d1
  42435d:	gs add BYTE PTR fs:[rbp+0x6e],dh
  424362:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  424366:	outs   dx,BYTE PTR ds:[rsi]
  424367:	add    BYTE PTR [rsi+0x6f],ah
  42436a:	jb     0x42438c
  42436c:	je     0x4243e0
  42436e:	jne    0x4243e3
  424370:	je     0x4243d7
  424372:	and    BYTE PTR fs:[rbx+0x41],al
  424376:	jae    0x424378
  424378:	outs   dx,WORD PTR ds:[rsi]
  42437a:	jb     0x42439c
  42437c:	jae    0x4243df
  42437e:	data16 and BYTE PTR gs:[rdx+0x65],dh
  424383:	outs   dx,BYTE PTR ds:[rsi]
  424384:	outs   dx,DWORD PTR gs:[esi]
  424387:	je     0x4243f2
  424389:	(bad)  
  42438a:	je     0x4243f5
  42438c:	outs   dx,DWORD PTR ds:[rsi]
  42438d:	outs   dx,BYTE PTR ds:[rsi]
  42438e:	and    BYTE PTR [rax],ch
  424390:	push   rdx
  424391:	rex.RX
  424392:	rex.XB xor eax,0x29363437
  424398:	and    BYTE PTR [rbx+0x75],dh
  42439b:	jo     0x42440d
  42439d:	outs   dx,DWORD PTR ds:[rsi]
  42439e:	jb     0x424414
	...
  4243a8:	outs   dx,WORD PTR ds:[rsi]
  4243aa:	jb     0x4243cc
  4243ac:	push   rbx
  4243ad:	(bad)  
  4243ae:	data16 and BYTE PTR gs:[rdx+0x65],dh
  4243b3:	outs   dx,BYTE PTR ds:[rsi]
  4243b4:	outs   dx,DWORD PTR gs:[esi]
  4243b7:	je     0x424422
  4243b9:	(bad)  
  4243ba:	je     0x424425
  4243bc:	outs   dx,DWORD PTR ds:[rsi]
  4243bd:	outs   dx,BYTE PTR ds:[rsi]
  4243be:	and    BYTE PTR [rbx+0x75],dh
  4243c1:	jo     0x424433
  4243c3:	outs   dx,DWORD PTR ds:[rsi]
  4243c4:	jb     0x42443a
  4243c6:	and    BYTE PTR [rax],ch
  4243c8:	push   rbx
  4243c9:	rex.XB push r11
  4243cb:	push   rsi
  4243cc:	sub    DWORD PTR [rax],eax
  4243ce:	add    BYTE PTR [rax],al
  4243d0:	outs   dx,WORD PTR ds:[rsi]
  4243d2:	jb     0x4243f4
  4243d4:	outs   dx,BYTE PTR gs:[rsi]
  4243d6:	movsxd esi,DWORD PTR [rdx+0x79]
  4243d9:	jo     0x42444f
  4243db:	sub    eax,0x6e656874
  4243e0:	sub    eax,0x2043414d
  4243e5:	sub    BYTE PTR [rdx+0x46],dl
  4243e8:	rex.XB (bad) 
  4243ea:	xor    esi,DWORD PTR [rsi]
  4243ec:	sub    DWORD PTR ss:[rax],esp
  4243ef:	jae    0x424466
  4243f1:	jo     0x424463
  4243f3:	outs   dx,DWORD PTR ds:[rsi]
  4243f4:	jb     0x42446a
  4243f6:	add    BYTE PTR [rax],al
  4243f8:	outs   dx,WORD PTR ds:[rsi]
  4243fa:	jb     0x42441c
  4243fc:	gs js  0x424473
  4243ff:	and    BYTE PTR [rbp+0x61],ch
  424402:	jae    0x424478
  424404:	gs jb  0x424427
  424407:	jae    0x42446e
  424409:	movsxd esi,DWORD PTR [rdx+0x65]
  42440c:	je     0x42442e
  42440e:	sub    BYTE PTR [rdx+0x46],dl
  424411:	rex.XB (bad) 
  424413:	xor    dh,BYTE PTR ss:[rdi]
  424416:	sub    DWORD PTR [rax],esp
  424418:	jae    0x42448f
  42441a:	jo     0x42448c
  42441c:	outs   dx,DWORD PTR ds:[rsi]
  42441d:	jb     0x424493
  42441f:	add    BYTE PTR [rsi+0x6f],ah
  424422:	jb     0x424444
  424424:	push   0x74726165
  424429:	(bad)  
  42442a:	gs (bad) 
  42442c:	je     0x42444e
  42442e:	sub    BYTE PTR [rdx+0x46],dl
  424431:	rex.XB
  424432:	ss xor eax,0x20293032
  424438:	jae    0x4244af
  42443a:	jo     0x4244ac
  42443c:	outs   dx,DWORD PTR ds:[rsi]
  42443d:	jb     0x4244b3
  42443f:	add    BYTE PTR [rsi+0x6f],ah
  424442:	jb     0x424464
  424444:	jbe    0x4244ab
  424446:	jb     0x4244bb
  424448:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6f7220
  42444f:	ins    BYTE PTR es:[rdi],dx
  424450:	(bad)  
  424452:	movsxd ebp,DWORD PTR [rbx+0x20]
  424455:	(bad)  
  424456:	jne    0x4244bf
  424458:	and    BYTE PTR [rcx+0x6e],ch
  42445b:	and    BYTE PTR [rdx+0x53],dl
  42445e:	and    BYTE PTR [r8+0x4d],dl
  424462:	push   rbx
  424463:	add    BYTE PTR [rax],al
  424465:	add    BYTE PTR [rax],al
  424467:	add    BYTE PTR [rsi+0x6f],ah
  42446a:	jb     0x42448c
  42446c:	jbe    0x4244d3
  42446e:	jb     0x4244e3
  424470:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6f7220
  424477:	ins    BYTE PTR es:[rdi],dx
  424478:	(bad)  
  42447a:	movsxd ebp,DWORD PTR [rbx+0x20]
  42447d:	(bad)  
  42447e:	jne    0x4244e7
  424480:	and    BYTE PTR [rcx+0x6e],ch
  424483:	and    BYTE PTR [rbx+0x6c],al
  424486:	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
  42448d:	ins    BYTE PTR es:[rdi],dx
  42448e:	ins    BYTE PTR es:[rdi],dx
  42448f:	outs   dx,DWORD PTR ds:[rsi]
	...
  424498:	ja     0x424502
  42449a:	gs je  0x424505
  42449d:	gs jb  0x4244c0
  4244a0:	je     0x42450a
  4244a2:	and    BYTE PTR gs:[rbx+0x65],dh
  4244a6:	jb     0x42451e
  4244a8:	gs jb  0x4244cb
  4244ab:	imul   esp,DWORD PTR [rdi+0x6e],0x7365726f
  4244b2:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4244b6:	and    BYTE PTR [rdx+0x53],dl
  4244b9:	and    BYTE PTR [r8+0x4d],dl
  4244bd:	push   rbx
  4244be:	and    BYTE PTR [rsi+0x65],dh
  4244c1:	jb     0x424536
  4244c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x68770000
  4244ca:	gs je  0x424535
  4244cd:	gs jb  0x4244f0
  4244d0:	jae    0x42453f
  4244d2:	(bad)  
  4244d3:	ins    BYTE PTR es:[rdi],dx
  4244d4:	ins    BYTE PTR es:[rdi],dx
  4244d5:	and    BYTE PTR [rdx+0x65],dh
  4244d8:	movsxd ebp,DWORD PTR [rdi+0x72]
  4244db:	fs jae 0x4244fe
  4244de:	sub    BYTE PTR [rip+0x62203231],dh        # 0x62627715
  4244e4:	jns    0x42455a
  4244e6:	gs jae 0x424512
  4244e9:	and    BYTE PTR [rcx+0x72],ah
  4244ec:	and    BYTE PTR gs:[rdi+rbp*2+0x6c],dh
  4244f1:	gs jb  0x424555
  4244f4:	je     0x42455b
  4244f6:	and    BYTE PTR fs:[rdi+0x6e],ch
  4244fa:	and    BYTE PTR [rax+0x61],ch
  4244fd:	outs   dx,BYTE PTR ds:[rsi]
  4244fe:	fs jae 0x424569
  424501:	(bad)  
  424502:	imul   esp,DWORD PTR [rbp+0x0],0x0
  424506:	add    BYTE PTR [rax],al
  424508:	ja     0x424572
  42450a:	gs je  0x424575
  42450d:	gs jb  0x424530
  424510:	movsxd ebp,DWORD PTR [rcx+0x70]
  424513:	push   0x73207265
  424518:	jne    0x424583
  42451a:	je     0x424581
  42451c:	jae    0x42453e
  42451e:	outs   dx,BYTE PTR ds:[rsi]
  42451f:	outs   dx,DWORD PTR ds:[rsi]
  424520:	je     0x424542
  424522:	imul   ebp,DWORD PTR [rsi+0x20],0x204c5353
  424529:	xor    ebp,DWORD PTR [rsi]
  42452b:	xor    BYTE PTR [rax],ah
  42452d:	jae    0x42459f
  42452f:	movsxd esp,DWORD PTR gs:[rax]
  424532:	(bad)  
  424533:	jb     0x42459a
  424535:	and    BYTE PTR [rcx+0x63],ah
  424538:	movsxd esp,DWORD PTR [rbp+0x70]
  42453b:	je     0x4245a2
  42453d:	add    BYTE PTR fs:[rax],al
  424540:	ja     0x4245aa
  424542:	gs je  0x4245ad
  424545:	gs jb  0x424568
  424548:	(bad)  
  424549:	and    BYTE PTR [rdx+0x6f],ah
  42454c:	addr32 jne 0x4245c2
  42454f:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  424553:	and    BYTE PTR [rdx+0x65],dh
  424556:	movsxd ebp,DWORD PTR [rdi+0x72]
  424559:	and    BYTE PTR fs:[rsi+0x65],dh
  42455d:	jb     0x4245d2
  42455f:	imul   ebp,DWORD PTR [rdi+0x6e],0x206e6920
  424566:	je     0x4245d0
  424568:	and    BYTE PTR gs:[rbx+0x6c],ah
  42456c:	imul   esp,DWORD PTR [rbp+0x6e],0x65682074
  424573:	ins    BYTE PTR es:[rdi],dx
  424574:	ins    BYTE PTR es:[rdi],dx
  424575:	outs   dx,DWORD PTR ds:[rsi]
  424576:	and    BYTE PTR [rcx+0x73],ch
  424579:	and    BYTE PTR [rcx+0x63],ah
  42457c:	movsxd esp,DWORD PTR [rbp+0x70]
  42457f:	je     0x4245e6
  424581:	add    BYTE PTR fs:[rax],al
  424584:	add    BYTE PTR [rax],al
  424586:	add    BYTE PTR [rax],al
  424588:	ja     0x4245f2
  42458a:	gs je  0x4245f5
  42458d:	gs jb  0x4245b0
  424590:	je     0x4245fa
  424592:	and    BYTE PTR gs:[rbx+0x65],dh
  424596:	jb     0x42460e
  424598:	gs jb  0x4245bb
  42459b:	jne    0x42460b
  42459d:	fs gs jb 0x424614
  4245a1:	je     0x424604
  4245a3:	outs   dx,BYTE PTR ds:[rsi]
  4245a4:	fs jae 0x4245c7
  4245a7:	push   rsp
  4245a8:	rex.WR push rbx
  4245aa:	and    BYTE PTR [rbx+0x6c],ah
  4245ad:	outs   dx,DWORD PTR ds:[rsi]
  4245ae:	jae    0x424625
  4245b0:	jb     0x424617
  4245b2:	and    BYTE PTR [rcx+0x6c],ah
  4245b5:	gs jb  0x42462c
  4245b8:	jae    0x4245ba
  4245ba:	jo     0x42461d
  4245bc:	jb     0x424632
  4245be:	imul   esp,DWORD PTR [rcx+0x6c],0x796c
  4245c5:	add    BYTE PTR [rax],al
  4245c7:	add    BYTE PTR [rdi+0x68],dh
  4245ca:	gs je  0x424635
  4245cd:	gs jb  0x4245f0
  4245d0:	je     0x42463a
  4245d2:	and    BYTE PTR gs:[rbx+0x65],dh
  4245d6:	jb     0x42464e
  4245d8:	gs jb  0x4245fb
  4245db:	jae    0x424652
  4245dd:	jo     0x42464f
  4245df:	outs   dx,DWORD PTR ds:[rsi]
  4245e0:	jb     0x424656
  4245e2:	jae    0x424604
  4245e4:	jae    0x42464b
  4245e6:	jae    0x42465b
  4245e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x73657220
  4245ef:	jne    0x42465e
  4245f1:	jo     0x424667
  4245f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f660000
  4245fa:	jb     0x42461c
  4245fc:	(bad)  
  4245fd:	outs   dx,BYTE PTR ds:[rsi]
  4245fe:	outs   dx,DWORD PTR ds:[rsi]
  4245ff:	outs   dx,BYTE PTR ds:[rsi]
  424600:	jns    0x42466f
  424602:	outs   dx,DWORD PTR ds:[rsi]
  424603:	jne    0x424678
  424605:	and    BYTE PTR [rcx+0x75],ah
  424608:	je     0x424672
  42460a:	outs   dx,BYTE PTR gs:[rsi]
  42460c:	je     0x424677
  42460e:	movsxd esp,DWORD PTR [rcx+0x74]
  424611:	imul   ebp,DWORD PTR [rdi+0x6e],0x70757320
  424618:	jo     0x424689
  42461a:	jb     0x424690
  42461c:	add    BYTE PTR [rax],al
  42461e:	add    BYTE PTR [rax],al
  424620:	(bad)  
  424621:	outs   dx,BYTE PTR ds:[rsi]
  424622:	outs   dx,DWORD PTR ds:[rsi]
  424623:	outs   dx,BYTE PTR ds:[rsi]
  424624:	jns    0x424693
  424626:	outs   dx,DWORD PTR ds:[rsi]
  424627:	jne    0x42469c
  424629:	and    BYTE PTR [rcx+rbp*2+0x66],al
  42462d:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  424633:	ins    BYTE PTR es:[rdi],dx
  424634:	ins    BYTE PTR es:[rdi],dx
  424635:	ins    DWORD PTR es:[rdi],dx
  424636:	(bad)  
  424637:	outs   dx,BYTE PTR ds:[rsi]
  424638:	and    BYTE PTR [rdi+0x72],ah
  42463b:	outs   dx,DWORD PTR ds:[rsi]
  42463c:	jne    0x4246ae
  42463e:	and    BYTE PTR [rcx+0x6e],ch
  424641:	outs   dx,WORD PTR ds:[rsi]
  424643:	add    BYTE PTR [rsi+0x2f],cl
  424646:	add    BYTE PTR [r14+0x6f],spl
  42464a:	jb     0x42466c
  42464c:	gs jo  0x4246b7
  42464f:	gs ins DWORD PTR es:[rdi],dx
  424651:	gs jb  0x4246b5
  424654:	ins    BYTE PTR es:[rdi],dx
  424655:	and    BYTE PTR [rcx+rbp*2+0x66],al
  424659:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  42465f:	ins    BYTE PTR es:[rdi],dx
  424660:	ins    BYTE PTR es:[rdi],dx
  424661:	ins    DWORD PTR es:[rdi],dx
  424662:	(bad)  
  424663:	outs   dx,BYTE PTR ds:[rsi]
  424664:	and    BYTE PTR [rbx+0x75],dh
  424667:	jo     0x4246d9
  424669:	outs   dx,DWORD PTR ds:[rsi]
  42466a:	jb     0x4246e0
  42466c:	add    BYTE PTR [rax],al
  42466e:	add    BYTE PTR [rax],al
  424670:	gs jo  0x4246db
  424673:	gs ins DWORD PTR es:[rdi],dx
  424675:	gs jb  0x4246d9
  424678:	ins    BYTE PTR es:[rdi],dx
  424679:	and    BYTE PTR [rcx+rbp*2+0x66],al
  42467d:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  424683:	ins    BYTE PTR es:[rdi],dx
  424684:	ins    BYTE PTR es:[rdi],dx
  424685:	ins    DWORD PTR es:[rdi],dx
  424686:	(bad)  
  424687:	outs   dx,BYTE PTR ds:[rsi]
  424688:	and    BYTE PTR [rdi+0x72],ah
  42468b:	outs   dx,DWORD PTR ds:[rsi]
  42468c:	jne    0x4246fe
  42468e:	and    BYTE PTR [rcx+0x6e],ch
  424691:	outs   dx,WORD PTR ds:[rsi]
  424693:	add    BYTE PTR [rax],al
  424695:	add    BYTE PTR [rax],al
  424697:	add    BYTE PTR [rsi+0x6f],ah
  42469a:	jb     0x4246bc
  42469c:	gs jo  0x424707
  42469f:	gs ins DWORD PTR es:[rdi],dx
  4246a1:	gs jb  0x424705
  4246a4:	ins    BYTE PTR es:[rdi],dx
  4246a5:	and    BYTE PTR [rbp+0x43],al
  4246a8:	and    BYTE PTR [rcx+rbp*2+0x66],al
  4246ac:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  4246b2:	ins    BYTE PTR es:[rdi],dx
  4246b3:	ins    BYTE PTR es:[rdi],dx
  4246b4:	ins    DWORD PTR es:[rdi],dx
  4246b5:	(bad)  
  4246b6:	outs   dx,BYTE PTR ds:[rsi]
  4246b7:	and    BYTE PTR [rbx+0x75],dh
  4246ba:	jo     0x42472c
  4246bc:	outs   dx,DWORD PTR ds:[rsi]
  4246bd:	jb     0x424733
  4246bf:	add    BYTE PTR [rbp+0x70],ah
  4246c2:	push   0x72656d65
  4246c7:	(bad)  
  4246c8:	ins    BYTE PTR es:[rdi],dx
  4246c9:	and    BYTE PTR [rbp+0x43],al
  4246cc:	and    BYTE PTR [rcx+rbp*2+0x66],al
  4246d0:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  4246d6:	ins    BYTE PTR es:[rdi],dx
  4246d7:	ins    BYTE PTR es:[rdi],dx
  4246d8:	ins    DWORD PTR es:[rdi],dx
  4246d9:	(bad)  
  4246da:	outs   dx,BYTE PTR ds:[rsi]
  4246db:	and    BYTE PTR [rdi+0x72],ah
  4246de:	outs   dx,DWORD PTR ds:[rsi]
  4246df:	jne    0x424751
  4246e1:	and    BYTE PTR [rcx+0x6e],ch
  4246e4:	outs   dx,WORD PTR ds:[rsi]
  4246e6:	add    BYTE PTR [rax],al
  4246e8:	outs   dx,WORD PTR ds:[rsi]
  4246ea:	jb     0x42470c
  4246ec:	rex.B
  4246ed:	rex.RB push r11
  4246ef:	sub    eax,0x2d383231
  4246f4:	rex.RXB
  4246f5:	rex.XB
  4246f6:	rex.WRB and BYTE PTR [r11+0x69],r12b
  4246fa:	jo     0x424764
  4246fc:	gs jb  0x42471f
  4246ff:	sub    BYTE PTR [rdx+0x46],dl
  424702:	rex.XB xor eax,0x29383832
  424708:	and    BYTE PTR [rbx+0x75],dh
  42470b:	jo     0x42477d
  42470d:	outs   dx,DWORD PTR ds:[rsi]
  42470e:	jb     0x424784
	...
  424718:	outs   dx,WORD PTR ds:[rsi]
  42471a:	jb     0x42473c
  42471c:	rex.B
  42471d:	rex.RB push r11
  42471f:	sub    eax,0x2d383231
  424724:	rex.XB
  424725:	rex.XB
  424726:	rex.WRB and BYTE PTR [r11+0x69],r12b
  42472a:	jo     0x424794
  42472c:	gs jb  0x42474f
  42472f:	sub    BYTE PTR [rdx+0x46],dl
  424732:	rex.XB
  424733:	ss ss xor eax,0x73202935
  42473a:	jne    0x4247ac
  42473c:	jo     0x4247ad
  42473e:	jb     0x4247b4
	...
  424748:	outs   dx,WORD PTR ds:[rsi]
  42474a:	jb     0x42476c
  42474c:	rex.B
  42474d:	rex.RB push r11
  42474f:	sub    eax,0x2d383231
  424754:	rex.XB
  424755:	rex.XB
  424756:	rex.WRB sub rax,0x69632038
  42475c:	jo     0x4247c6
  42475e:	gs jb  0x424781
  424761:	sub    BYTE PTR [rdx+0x46],dl
  424764:	rex.XB
  424765:	ss ss xor eax,0x73202935
  42476c:	jne    0x4247de
  42476e:	jo     0x4247df
  424770:	jb     0x4247e6
  424772:	add    BYTE PTR [rax],al
  424774:	add    BYTE PTR [rax],al
  424776:	add    BYTE PTR [rax],al
  424778:	outs   dx,WORD PTR ds:[rsi]
  42477a:	jb     0x42479c
  42477c:	rex.B
  42477d:	rex.RB push r11
  42477f:	sub    eax,0x2d383231
  424784:	rex.XB
  424785:	rex.X
  424786:	rex.XB and BYTE PTR [r11+0x69],spl
  42478a:	jo     0x4247f4
  42478c:	gs jb  0x4247af
  42478f:	sub    BYTE PTR [rdx+0x46],dl
  424792:	rex.XB xor esi,DWORD PTR [r10]
  424795:	cmp    BYTE PTR ss:[rcx],ch
  424798:	and    BYTE PTR [rbx+0x75],dh
  42479b:	jo     0x42480d
  42479d:	outs   dx,DWORD PTR ds:[rsi]
  42479e:	jb     0x424814
	...
  4247a8:	outs   dx,WORD PTR ds:[rsi]
  4247aa:	jb     0x4247cc
  4247ac:	rex.XB
  4247ad:	rex.B
  4247ae:	rex.WRB
  4247af:	rex.RB
  4247b0:	rex.WR
  4247b1:	rex.WR
  4247b2:	rex.WB
  4247b3:	rex.B sub eax,0x2d383231
  4247b9:	rex.RXB
  4247ba:	rex.XB
  4247bb:	rex.WRB and BYTE PTR [r11+0x69],r12b
  4247bf:	jo     0x424829
  4247c1:	gs jb  0x4247e4
  4247c4:	sub    BYTE PTR [rdx+0x46],dl
  4247c7:	rex.XB
  4247c8:	xor    esi,DWORD PTR ss:[rsi]
  4247cb:	(bad)  
  4247cc:	sub    DWORD PTR [rax],esp
  4247ce:	jae    0x424845
  4247d0:	jo     0x424842
  4247d2:	outs   dx,DWORD PTR ds:[rsi]
  4247d3:	jb     0x424849
  4247d5:	add    BYTE PTR [rax],al
  4247d7:	add    BYTE PTR [rsi+0x6f],ah
  4247da:	jb     0x4247fc
  4247dc:	rex.XB
  4247dd:	rex.B
  4247de:	rex.WRB
  4247df:	rex.RB
  4247e0:	rex.WR
  4247e1:	rex.WR
  4247e2:	rex.WB
  4247e3:	rex.B sub eax,0x2d383231
  4247e9:	rex.XB
  4247ea:	rex.X
  4247eb:	rex.XB and BYTE PTR [r11+0x69],spl
  4247ef:	jo     0x424859
  4247f1:	gs jb  0x424814
  4247f4:	sub    BYTE PTR [rdx+0x46],dl
  4247f7:	rex.XB xor eax,0x29323339
  4247fd:	and    BYTE PTR [rbx+0x75],dh
  424800:	jo     0x424872
  424802:	outs   dx,DWORD PTR ds:[rsi]
  424803:	jb     0x424879
  424805:	add    BYTE PTR [rax],al
  424807:	add    BYTE PTR [rsi+0x6f],ah
  42480a:	jb     0x42482c
  42480c:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  424810:	sub    eax,0x20434243
  424815:	movsxd ebp,DWORD PTR [rcx+0x70]
  424818:	push   0x28207265
  42481d:	push   rdx
  42481e:	rex.RX
  42481f:	rex.XB xor sil,BYTE PTR [r10]
  424822:	xor    al,0x36
  424824:	sub    DWORD PTR [rax],esp
  424826:	jae    0x42489d
  424828:	jo     0x42489a
  42482a:	outs   dx,DWORD PTR ds:[rsi]
  42482b:	jb     0x4248a1
  42482d:	add    BYTE PTR [rax],al
  42482f:	add    BYTE PTR [rsi+0x6f],ah
  424832:	jb     0x424854
  424834:	push   r10
  424836:	rex.XB
  424837:	rex.RX
  424838:	rex.WRXB push r13
  42483a:	push   rdx
  42483b:	and    BYTE PTR [rcx],dh
  42483d:	xor    bh,BYTE PTR [rax]
  42483f:	and    BYTE PTR [rbx+0x69],ah
  424842:	jo     0x4248ac
  424844:	gs jb  0x424867
  424847:	sub    BYTE PTR [rdx+0x46],dl
  42484a:	rex.XB xor sil,BYTE PTR [r10]
  42484d:	xor    al,0x36
  42484f:	sub    DWORD PTR [rax],esp
  424851:	jae    0x4248c8
  424853:	jo     0x4248c5
  424855:	outs   dx,DWORD PTR ds:[rsi]
  424856:	jb     0x4248cc
  424858:	add    BYTE PTR [rsi+0x6f],ah
  42485b:	jb     0x42487d
  42485d:	rex.WRB
  42485e:	rex.R xor eax,0x43414d20
  424864:	and    BYTE PTR [rbx+0x75],dh
  424867:	jo     0x4248d9
  424869:	outs   dx,DWORD PTR ds:[rsi]
  42486a:	jb     0x4248e0
  42486c:	add    BYTE PTR [rsi+0x6f],ah
  42486f:	jb     0x424891
  424871:	push   rbx
  424872:	rex.W
  424873:	xor    DWORD PTR [r8],esp
  424876:	rex.WRB
  424877:	rex.B
  424878:	rex.XB and BYTE PTR [r11+0x75],sil
  42487c:	jo     0x4248ee
  42487e:	outs   dx,DWORD PTR ds:[rsi]
  42487f:	jb     0x4248f5
  424881:	add    BYTE PTR [rsi+0x6f],ah
  424884:	jb     0x4248a6
  424886:	push   rbx
  424887:	rex.W
  424888:	xor    sil,BYTE PTR [rip+0x414d2036]        # 0x418f68c5
  42488f:	rex.XB and BYTE PTR [r11+0x75],sil
  424893:	jo     0x424905
  424895:	outs   dx,DWORD PTR ds:[rsi]
  424896:	jb     0x42490c
  424898:	add    BYTE PTR [rsi+0x6f],ah
  42489b:	jb     0x4248bd
  42489d:	pop    rdx
  42489e:	rex.WR
  42489f:	rex.WB
  4248a0:	rex.X and BYTE PTR [rbx+0x6f],spl
  4248a4:	ins    DWORD PTR es:[rdi],dx
  4248a5:	jo     0x424919
  4248a7:	gs jae 0x42491d
  4248aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x70757320
  4248b1:	jo     0x424922
  4248b3:	jb     0x424929
  4248b5:	add    BYTE PTR [rax],al
  4248b7:	add    BYTE PTR [rsi+0x6f],ah
  4248ba:	jb     0x4248dc
  4248bc:	ins    DWORD PTR es:[rdi],dx
  4248bd:	(bad)  
  4248be:	js     0x4248e0
  4248c0:	jb     0x424927
  4248c2:	movsxd ebp,DWORD PTR [rdi+0x72]
  4248c5:	and    BYTE PTR fs:[rbx+0x69],dh
  4248c9:	jp     0x424930
  4248cb:	and    BYTE PTR [rax],ch
  4248cd:	push   rdx
  4248ce:	rex.RX
  4248cf:	rex.XB
  4248d0:	xor    BYTE PTR ss:[rsi],dh
  4248d3:	sub    DWORD PTR ss:[rax],esp
  4248d6:	jae    0x42494d
  4248d8:	jo     0x42494a
  4248da:	outs   dx,DWORD PTR ds:[rsi]
  4248db:	jb     0x424951
  4248dd:	add    BYTE PTR [rax],al
  4248df:	add    BYTE PTR [rsi+0x6f],ah
  4248e2:	jb     0x424904
  4248e4:	rex.WRXB
  4248e5:	rex.XB push r11
  4248e7:	push   rax
  4248e8:	and    BYTE PTR [rbx+0x74],dh
  4248eb:	(bad)  
  4248ec:	je     0x424963
  4248ee:	jae    0x424910
  4248f0:	jb     0x424957
  4248f2:	jae    0x424964
  4248f4:	outs   dx,DWORD PTR ds:[rsi]
  4248f5:	outs   dx,BYTE PTR ds:[rsi]
  4248f6:	jae    0x42495d
  4248f8:	and    BYTE PTR [rax],ch
  4248fa:	push   rdx
  4248fb:	rex.RX
  4248fc:	rex.XB
  4248fd:	xor    BYTE PTR ss:[rsi],dh
  424900:	sub    DWORD PTR ss:[rax],esp
  424903:	jae    0x42497a
  424905:	jo     0x424977
  424907:	outs   dx,DWORD PTR ds:[rsi]
  424908:	jb     0x42497e
  42490a:	add    BYTE PTR [rax],al
  42490c:	add    BYTE PTR [rax],al
  42490e:	add    BYTE PTR [rax],al
  424910:	outs   dx,WORD PTR ds:[rsi]
  424912:	jb     0x424934
  424914:	rex.WRXB jo 0x42497c
  424917:	outs   dx,BYTE PTR ds:[rsi]
  424918:	push   rax
  424919:	rex.RXB push r8
  42491b:	and    BYTE PTR [rcx+0x75],ah
  42491e:	je     0x424988
  424920:	outs   dx,BYTE PTR gs:[rsi]
  424922:	je     0x42498d
  424924:	movsxd esp,DWORD PTR [rcx+0x74]
  424927:	imul   ebp,DWORD PTR [rdi+0x6e],0x46522820
  42492e:	rex.XB
  42492f:	xor    BYTE PTR ss:[rcx],bh
  424932:	xor    DWORD PTR [rcx],ebp
  424934:	and    BYTE PTR [rbx+0x75],dh
  424937:	jo     0x4249a9
  424939:	outs   dx,DWORD PTR ds:[rsi]
  42493a:	jb     0x4249b0
  42493c:	add    BYTE PTR [rax],al
  42493e:	add    BYTE PTR [rax],al
  424940:	fld    QWORD PTR [rax+0x42]
  424943:	add    BYTE PTR [rax],al
  424945:	add    BYTE PTR [rax],al
  424947:	add    BYTE PTR [rax],al
  424949:	add    BYTE PTR es:[rax],al
  42494d:	add    BYTE PTR [rax],al
  42494f:	add    bl,bh
  424951:	rex
  424952:	rex.X add BYTE PTR [rax],al
  424955:	add    BYTE PTR [rax],al
  424957:	add    bh,bh
  424959:	rex
  42495a:	rex.X add BYTE PTR [rax],al
  42495d:	add    BYTE PTR [rax],al
  42495f:	add    BYTE PTR [rdx],al
  424961:	rex.B
  424962:	rex.X add BYTE PTR [rax],al
	...
  42496d:	add    BYTE PTR [rax],al
  42496f:	add    BYTE PTR [rax],cl
  424971:	rex.B
  424972:	rex.X add BYTE PTR [rax],al
  424975:	add    BYTE PTR [rax],al
  424977:	add    BYTE PTR [rax+0x3d],dh
  42497a:	add    BYTE PTR [rax],al
  42497d:	add    BYTE PTR [rax],al
  42497f:	add    bh,bh
  424981:	rex
  424982:	rex.X add BYTE PTR [rax],al
  424985:	add    BYTE PTR [rax],al
  424987:	add    bl,bh
  424989:	rex
  42498a:	rex.X add BYTE PTR [rax],al
  42498d:	add    BYTE PTR [rax],al
  42498f:	add    BYTE PTR [rdx],al
  424991:	rex.B
  424992:	rex.X add BYTE PTR [rax],al
	...
  42499d:	add    BYTE PTR [rax],al
  42499f:	add    BYTE PTR [rax],dh
  4249a1:	rex.B
  4249a2:	rex.X add BYTE PTR [rax],al
  4249a5:	add    BYTE PTR [rax],al
  4249a7:	add    BYTE PTR [rax+0x3c],dh
  4249aa:	add    BYTE PTR [rax],al
  4249ad:	add    BYTE PTR [rax],al
  4249af:	add    bh,bh
  4249b1:	rex
  4249b2:	rex.X add BYTE PTR [rax],al
  4249b5:	add    BYTE PTR [rax],al
  4249b7:	add    bl,bh
  4249b9:	rex
  4249ba:	rex.X add BYTE PTR [rax],al
  4249bd:	add    BYTE PTR [rax],al
  4249bf:	add    BYTE PTR [rdx],al
  4249c1:	rex.B
  4249c2:	rex.X add BYTE PTR [rax],al
	...
  4249cd:	add    BYTE PTR [rax],al
  4249cf:	add    BYTE PTR [rax+0x41],bl
  4249d2:	rex.X add BYTE PTR [rax],al
  4249d5:	add    BYTE PTR [rax],al
  4249d7:	add    BYTE PTR [rax+0x3b],ah
  4249da:	add    BYTE PTR [rax],al
  4249dd:	add    BYTE PTR [rax],al
  4249df:	add    bh,bh
  4249e1:	rex
  4249e2:	rex.X add BYTE PTR [rax],al
  4249e5:	add    BYTE PTR [rax],al
  4249e7:	add    bl,bh
  4249e9:	rex
  4249ea:	rex.X add BYTE PTR [rax],al
  4249ed:	add    BYTE PTR [rax],al
  4249ef:	add    BYTE PTR [rdx],al
  4249f1:	rex.B
  4249f2:	rex.X add BYTE PTR [rax],al
	...
  4249fd:	add    BYTE PTR [rax],al
  4249ff:	add    BYTE PTR [rax+0x4241],al
  424a05:	add    BYTE PTR [rax],al
  424a07:	add    BYTE PTR [rax+0x36],dh
  424a0a:	add    BYTE PTR [rax],al
  424a0d:	add    BYTE PTR [rax],al
  424a0f:	add    bh,bh
  424a11:	rex
  424a12:	rex.X add BYTE PTR [rax],al
  424a15:	add    BYTE PTR [rax],al
  424a17:	add    bl,bh
  424a19:	rex
  424a1a:	rex.X add BYTE PTR [rax],al
  424a1d:	add    BYTE PTR [rax],al
  424a1f:	add    BYTE PTR [rdx],al
  424a21:	rex.B
  424a22:	rex.X add BYTE PTR [rax],al
	...
  424a2d:	add    BYTE PTR [rax],al
  424a2f:	add    BYTE PTR [rbx+0x4241],ah
  424a35:	add    BYTE PTR [rax],al
  424a37:	add    BYTE PTR [rax],dh
  424a39:	xor    eax,0x40
  424a3e:	add    BYTE PTR [rax],al
  424a40:	inc    DWORD PTR [rax+0x42]
  424a43:	add    BYTE PTR [rax],al
  424a45:	add    BYTE PTR [rax],al
  424a47:	add    bl,bh
  424a49:	rex
  424a4a:	rex.X add BYTE PTR [rax],al
  424a4d:	add    BYTE PTR [rax],al
  424a4f:	add    BYTE PTR [rdx],al
  424a51:	rex.B
  424a52:	rex.X add BYTE PTR [rax],al
	...
  424a5d:	add    BYTE PTR [rax],al
  424a5f:	add    BYTE PTR [rdi+0x4241],bh
  424a65:	add    BYTE PTR [rax],al
  424a67:	add    BYTE PTR [rax],al
  424a69:	xor    eax,DWORD PTR [rax+0x0]
  424a6c:	add    BYTE PTR [rax],al
  424a6e:	add    BYTE PTR [rax],al
  424a70:	sti    
  424a71:	rex
  424a72:	rex.X add BYTE PTR [rax],al
  424a75:	add    BYTE PTR [rax],al
  424a77:	add    bh,bh
  424a79:	rex
  424a7a:	rex.X add BYTE PTR [rax],al
  424a7d:	add    BYTE PTR [rax],al
  424a7f:	add    BYTE PTR [rdx],al
  424a81:	rex.B
  424a82:	rex.X add BYTE PTR [rax],al
	...
  424a8d:	add    BYTE PTR [rax],al
  424a8f:	add    al,ah
  424a91:	rex.B
  424a92:	rex.X add BYTE PTR [rax],al
  424a95:	add    BYTE PTR [rax],al
  424a97:	add    al,dl
  424a99:	xor    eax,DWORD PTR [rax+0x0]
  424a9c:	add    BYTE PTR [rax],al
  424a9e:	add    BYTE PTR [rax],al
  424aa0:	sti    
  424aa1:	rex
  424aa2:	rex.X add BYTE PTR [rax],al
  424aa5:	add    BYTE PTR [rax],al
  424aa7:	add    bh,bh
  424aa9:	rex
  424aaa:	rex.X add BYTE PTR [rax],al
  424aad:	add    BYTE PTR [rax],al
  424aaf:	add    BYTE PTR [rdx],al
  424ab1:	rex.B
  424ab2:	rex.X add BYTE PTR [rax],al
	...
  424abd:	add    BYTE PTR [rax],al
  424abf:	add    BYTE PTR [rdx],bl
  424ac1:	rex.X
  424ac2:	rex.X add BYTE PTR [rax],al
  424ac5:	add    BYTE PTR [rax],al
  424ac7:	add    BYTE PTR [rax+0x4038],ah
  424acd:	add    BYTE PTR [rax],al
  424acf:	add    bl,bh
  424ad1:	rex
  424ad2:	rex.X add BYTE PTR [rax],al
  424ad5:	add    BYTE PTR [rax],al
  424ad7:	add    bh,bh
  424ad9:	rex
  424ada:	rex.X add BYTE PTR [rax],al
  424add:	add    BYTE PTR [rax],al
  424adf:	add    BYTE PTR [rdx],al
  424ae1:	rex.B
  424ae2:	rex.X add BYTE PTR [rax],al
	...
  424aed:	add    BYTE PTR [rax],al
  424aef:	add    BYTE PTR [rax],bh
  424af1:	rex.X
  424af2:	rex.X add BYTE PTR [rax],al
  424af5:	add    BYTE PTR [rax],al
  424af7:	add    BYTE PTR [rax+0x39],dh
  424afa:	add    BYTE PTR [rax],al
  424afd:	add    BYTE PTR [rax],al
  424aff:	add    BYTE PTR [rcx+0x42],dl
  424b02:	rex.X add BYTE PTR [rax],al
  424b05:	add    BYTE PTR [rax],al
  424b07:	add    BYTE PTR [rcx+0x42],bl
  424b0a:	rex.X add BYTE PTR [rax],al
  424b0d:	add    BYTE PTR [rax],al
  424b0f:	add    BYTE PTR [rax+0x42],ah
  424b12:	rex.X add BYTE PTR [rax],al
	...
  424b1d:	add    BYTE PTR [rax],al
  424b1f:	add    BYTE PTR [rax+0x42],ch
  424b22:	rex.X add BYTE PTR [rax],al
  424b25:	add    BYTE PTR [rax],al
  424b27:	add    al,dl
  424b29:	(bad)  
  424b2a:	add    BYTE PTR [rax],al
  424b2d:	add    BYTE PTR [rax],al
  424b2f:	add    bl,bh
  424b31:	rex
  424b32:	rex.X add BYTE PTR [rax],al
  424b35:	add    BYTE PTR [rax],al
  424b37:	add    bh,bh
  424b39:	rex
  424b3a:	rex.X add BYTE PTR [rax],al
  424b3d:	add    BYTE PTR [rax],al
  424b3f:	add    BYTE PTR [rdx],al
  424b41:	rex.B
  424b42:	rex.X add BYTE PTR [rax],al
	...
  424b4d:	add    BYTE PTR [rax],al
  424b4f:	add    BYTE PTR [rsi+0x4242],al
  424b55:	add    BYTE PTR [rax],al
  424b57:	add    BYTE PTR [rax+0x3a],dh
  424b5a:	add    BYTE PTR [rax],al
	...
  424b65:	add    BYTE PTR [rax],al
  424b67:	add    BYTE PTR [rax+0x4242],ah
  424b6d:	add    BYTE PTR [rax],al
  424b6f:	add    BYTE PTR [rdx],al
  424b71:	rex.B
  424b72:	rex.X add BYTE PTR [rax],al
	...
  424b7d:	add    BYTE PTR [rax],al
  424b7f:	add    al,cl
  424b81:	rex.X
  424b82:	rex.X add BYTE PTR [rax],al
  424b85:	add    BYTE PTR [rax],al
  424b87:	add    BYTE PTR [rax],al
  424b89:	sbb    eax,0x40
  424b8e:	add    BYTE PTR [rax],al
  424b90:	sti    
  424b91:	rex
  424b92:	rex.X add BYTE PTR [rax],al
  424b95:	add    BYTE PTR [rax],al
  424b97:	add    bh,bh
  424b99:	rex
  424b9a:	rex.X add BYTE PTR [rax],al
  424b9d:	add    BYTE PTR [rax],al
  424b9f:	add    BYTE PTR [rdx],al
  424ba1:	rex.B
  424ba2:	rex.X add BYTE PTR [rax],al
	...
  424bad:	add    BYTE PTR [rax],al
  424baf:	add    ch,dh
  424bb1:	rex.X
  424bb2:	rex.X add BYTE PTR [rax],al
  424bb5:	add    BYTE PTR [rax],al
  424bb7:	add    BYTE PTR [rax+0x19],ah
  424bba:	add    BYTE PTR [rax],al
	...
  424bc5:	add    BYTE PTR [rax],al
  424bc7:	add    BYTE PTR [rcx+0x42],bl
  424bca:	rex.X add BYTE PTR [rax],al
  424bcd:	add    BYTE PTR [rax],al
  424bcf:	add    BYTE PTR [rbx],cl
  424bd1:	rex.XB
  424bd2:	rex.X add BYTE PTR [rax],al
  424bd5:	add    BYTE PTR [rax],al
  424bd7:	add    BYTE PTR [rcx],al
  424bd9:	add    BYTE PTR [rax],al
  424bdb:	add    BYTE PTR [rax],al
  424bdd:	add    BYTE PTR [rax],al
  424bdf:	add    BYTE PTR [rdi],dl
  424be1:	rex.XB
  424be2:	rex.X add BYTE PTR [rax],al
  424be5:	add    BYTE PTR [rax],al
  424be7:	add    BYTE PTR [rax+0x4047],dl
	...
  424bf5:	add    BYTE PTR [rax],al
  424bf7:	add    BYTE PTR [rbx],dh
  424bf9:	rex.XB
  424bfa:	rex.X add BYTE PTR [rax],al
  424bfd:	add    BYTE PTR [rax],al
  424bff:	add    BYTE PTR [rbx],dh
  424c01:	rex.XB
  424c02:	rex.X add BYTE PTR [rax],al
	...
  424c0d:	add    BYTE PTR [rax],al
  424c0f:	add    BYTE PTR [rbx+rax*2],dh
  424c12:	rex.X add BYTE PTR [rax],al
  424c15:	add    BYTE PTR [rax],al
  424c17:	add    al,ah
  424c19:	rex.W
  424c1a:	add    BYTE PTR [rax],al
  424c1d:	add    BYTE PTR [rax],al
  424c1f:	add    BYTE PTR [rax+0x43],dl
  424c22:	rex.X add BYTE PTR [rax],al
  424c25:	add    BYTE PTR [rax],al
  424c27:	add    BYTE PTR [rdi+0x43],dl
  424c2a:	rex.X add BYTE PTR [rax],al
  424c2d:	add    BYTE PTR [rax],al
  424c2f:	add    BYTE PTR [rax+0x43],ah
  424c32:	rex.X add BYTE PTR [rax],al
	...
  424c3d:	add    BYTE PTR [rax],al
  424c3f:	add    BYTE PTR [rax+0x43],ch
  424c42:	rex.X add BYTE PTR [rax],al
  424c45:	add    BYTE PTR [rax],al
  424c47:	add    BYTE PTR [rax+0x4b],al
  424c4a:	add    BYTE PTR [rax],al
	...
  424c55:	add    BYTE PTR [rax],al
  424c57:	add    BYTE PTR [rbx],dh
  424c59:	rex.XB
  424c5a:	rex.X add BYTE PTR [rax],al
  424c5d:	add    BYTE PTR [rax],al
  424c5f:	add    BYTE PTR [rbx],dh
  424c61:	rex.XB
  424c62:	rex.X add BYTE PTR [rax],al
	...
  424c6d:	add    BYTE PTR [rax],al
  424c6f:	add    BYTE PTR [rax+0x43],bh
  424c72:	rex.X add BYTE PTR [rax],al
  424c75:	add    BYTE PTR [rax],al
  424c77:	add    BYTE PTR [rax+0x1e],dl
  424c7a:	add    BYTE PTR [rax],al
  424c7d:	add    BYTE PTR [rax],al
  424c7f:	add    bl,bh
  424c81:	rex
  424c82:	rex.X add BYTE PTR [rax],al
  424c85:	add    BYTE PTR [rax],al
  424c87:	add    bh,bh
  424c89:	rex
  424c8a:	rex.X add BYTE PTR [rax],al
  424c8d:	add    BYTE PTR [rax],al
  424c8f:	add    BYTE PTR [rdx],al
  424c91:	rex.B
  424c92:	rex.X add BYTE PTR [rax],al
	...
  424c9d:	add    BYTE PTR [rax],al
  424c9f:	add    BYTE PTR [rax+0x4243],ch
  424ca5:	add    BYTE PTR [rax],al
  424ca7:	add    BYTE PTR [rax+0x22],al
  424caa:	add    BYTE PTR [rax],al
  424cad:	add    BYTE PTR [rax],al
  424caf:	add    bl,bh
  424cb1:	rex
  424cb2:	rex.X add BYTE PTR [rax],al
  424cb5:	add    BYTE PTR [rax],al
  424cb7:	add    bh,bh
  424cb9:	rex
  424cba:	rex.X add BYTE PTR [rax],al
  424cbd:	add    BYTE PTR [rax],al
  424cbf:	add    BYTE PTR [rdx],al
  424cc1:	rex.B
  424cc2:	rex.X add BYTE PTR [rax],al
	...
  424ccd:	add    BYTE PTR [rax],al
  424ccf:	add    al,dl
  424cd1:	rex.XB
  424cd2:	rex.X add BYTE PTR [rax],al
  424cd5:	add    BYTE PTR [rax],al
  424cd7:	add    BYTE PTR [rax+0x21],al
  424cda:	add    BYTE PTR [rax],al
  424cdd:	add    BYTE PTR [rax],al
  424cdf:	add    bl,bh
  424ce1:	rex
  424ce2:	rex.X add BYTE PTR [rax],al
  424ce5:	add    BYTE PTR [rax],al
  424ce7:	add    bh,bh
  424ce9:	rex
  424cea:	rex.X add BYTE PTR [rax],al
  424ced:	add    BYTE PTR [rax],al
  424cef:	add    BYTE PTR [rdx],al
  424cf1:	rex.B
  424cf2:	rex.X add BYTE PTR [rax],al
	...
  424cfd:	add    BYTE PTR [rax],al
  424cff:	add    al,bh
  424d01:	rex.XB
  424d02:	rex.X add BYTE PTR [rax],al
  424d05:	add    BYTE PTR [rax],al
  424d07:	add    BYTE PTR [rax+0x20],al
  424d0a:	add    BYTE PTR [rax],al
  424d0d:	add    BYTE PTR [rax],al
  424d0f:	add    bl,bh
  424d11:	rex
  424d12:	rex.X add BYTE PTR [rax],al
  424d15:	add    BYTE PTR [rax],al
  424d17:	add    bh,bh
  424d19:	rex
  424d1a:	rex.X add BYTE PTR [rax],al
  424d1d:	add    BYTE PTR [rax],al
  424d1f:	add    BYTE PTR [rdx],al
  424d21:	rex.B
  424d22:	rex.X add BYTE PTR [rax],al
	...
  424d2d:	add    BYTE PTR [rax],al
  424d2f:	add    BYTE PTR [rax],ah
  424d31:	rex.R
  424d32:	rex.X add BYTE PTR [rax],al
  424d35:	add    BYTE PTR [rax],al
  424d37:	add    BYTE PTR [rax+0x40],ah
  424d3a:	add    BYTE PTR [rax],al
  424d3d:	add    BYTE PTR [rax],al
  424d3f:	add    bl,bh
  424d41:	rex
  424d42:	rex.X add BYTE PTR [rax],al
  424d45:	add    BYTE PTR [rax],al
  424d47:	add    bh,bh
  424d49:	rex
  424d4a:	rex.X add BYTE PTR [rax],al
  424d4d:	add    BYTE PTR [rax],al
  424d4f:	add    BYTE PTR [rdx],al
  424d51:	rex.B
  424d52:	rex.X add BYTE PTR [rax],al
	...
  424d5d:	add    BYTE PTR [rax],al
  424d5f:	add    BYTE PTR [rax+0x44],al
  424d62:	rex.X add BYTE PTR [rax],al
  424d65:	add    BYTE PTR [rax],al
  424d67:	add    BYTE PTR [rax+0x3e],dh
  424d6a:	add    BYTE PTR [rax],al
  424d6d:	add    BYTE PTR [rax],al
  424d6f:	add    bh,bh
  424d71:	rex
  424d72:	rex.X add BYTE PTR [rax],al
  424d75:	add    BYTE PTR [rax],al
  424d77:	add    bl,bh
  424d79:	rex
  424d7a:	rex.X add BYTE PTR [rax],al
  424d7d:	add    BYTE PTR [rax],al
  424d7f:	add    BYTE PTR [rdx],al
  424d81:	rex.B
  424d82:	rex.X add BYTE PTR [rax],al
	...
  424d8d:	add    BYTE PTR [rax],al
  424d8f:	add    BYTE PTR [rax+0x44],ch
  424d92:	rex.X add BYTE PTR [rax],al
  424d95:	add    BYTE PTR [rax],al
  424d97:	add    BYTE PTR [rax+0x42],al
  424d9a:	add    BYTE PTR [rax],al
  424d9d:	add    BYTE PTR [rax],al
  424d9f:	add    bh,bh
  424da1:	rex
  424da2:	rex.X add BYTE PTR [rax],al
  424da5:	add    BYTE PTR [rax],al
  424da7:	add    bl,bh
  424da9:	rex
  424daa:	rex.X add BYTE PTR [rax],al
  424dad:	add    BYTE PTR [rax],al
  424daf:	add    BYTE PTR [rdx],al
  424db1:	rex.B
  424db2:	rex.X add BYTE PTR [rax],al
	...
  424dbd:	add    BYTE PTR [rax],al
  424dbf:	add    BYTE PTR [rax+0x4244],bl
  424dc5:	add    BYTE PTR [rax],al
  424dc7:	add    BYTE PTR [rax],dh
  424dc9:	rex.R
  424dca:	add    BYTE PTR [rax],al
  424dcd:	add    BYTE PTR [rax],al
  424dcf:	add    bl,bh
  424dd1:	rex
  424dd2:	rex.X add BYTE PTR [rax],al
  424dd5:	add    BYTE PTR [rax],al
  424dd7:	add    bh,bh
  424dd9:	rex
  424dda:	rex.X add BYTE PTR [rax],al
  424ddd:	add    BYTE PTR [rax],al
  424ddf:	add    BYTE PTR [rdx],al
  424de1:	rex.B
  424de2:	rex.X add BYTE PTR [rax],al
	...
  424ded:	add    BYTE PTR [rax],al
  424def:	add    al,cl
  424df1:	rex.R
  424df2:	rex.X add BYTE PTR [rax],al
  424df5:	add    BYTE PTR [rax],al
  424df7:	add    BYTE PTR [rax+0x41],dh
  424dfa:	add    BYTE PTR [rax],al
  424dfd:	add    BYTE PTR [rax],al
  424dff:	add    bl,bh
  424e01:	rex
  424e02:	rex.X add BYTE PTR [rax],al
  424e05:	add    BYTE PTR [rax],al
  424e07:	add    bh,bh
  424e09:	rex
  424e0a:	rex.X add BYTE PTR [rax],al
  424e0d:	add    BYTE PTR [rax],al
  424e0f:	add    BYTE PTR [rdx],al
  424e11:	rex.B
  424e12:	rex.X add BYTE PTR [rax],al
	...
  424e1d:	add    BYTE PTR [rax],al
  424e1f:	add    BYTE PTR [rax],cl
  424e21:	rex.RB
  424e22:	rex.X add BYTE PTR [rax],al
  424e25:	add    BYTE PTR [rax],al
  424e27:	add    al,al
  424e29:	sub    eax,0x40
  424e2e:	add    BYTE PTR [rax],al
  424e30:	sti    
  424e31:	rex
  424e32:	rex.X add BYTE PTR [rax],al
  424e35:	add    BYTE PTR [rax],al
  424e37:	add    bh,bh
  424e39:	rex
  424e3a:	rex.X add BYTE PTR [rax],al
  424e3d:	add    BYTE PTR [rax],al
  424e3f:	add    BYTE PTR [rdx],al
  424e41:	rex.B
  424e42:	rex.X add BYTE PTR [rax],al
	...
  424e4d:	add    BYTE PTR [rax],al
  424e4f:	add    BYTE PTR [rax+0x45],al
  424e52:	rex.X add BYTE PTR [rax],al
  424e55:	add    BYTE PTR [rax],al
  424e57:	add    BYTE PTR [rax+0x43],dl
  424e5a:	add    BYTE PTR [rax],al
  424e5d:	add    BYTE PTR [rax],al
  424e5f:	add    bl,bh
  424e61:	rex
  424e62:	rex.X add BYTE PTR [rax],al
  424e65:	add    BYTE PTR [rax],al
  424e67:	add    bh,bh
  424e69:	rex
  424e6a:	rex.X add BYTE PTR [rax],al
  424e6d:	add    BYTE PTR [rax],al
  424e6f:	add    BYTE PTR [rdx],al
  424e71:	rex.B
  424e72:	rex.X add BYTE PTR [rax],al
	...
  424e7d:	add    BYTE PTR [rax],al
  424e7f:	add    BYTE PTR [rax+0x4245],cl
  424e85:	add    BYTE PTR [rax],al
  424e87:	add    al,dl
  424e89:	add    BYTE PTR es:[rax],al
  424e8d:	add    BYTE PTR [rax],al
  424e8f:	add    bl,bh
  424e91:	rex
  424e92:	rex.X add BYTE PTR [rax],al
  424e95:	add    BYTE PTR [rax],al
  424e97:	add    bh,bh
  424e99:	rex
  424e9a:	rex.X add BYTE PTR [rax],al
  424e9d:	add    BYTE PTR [rax],al
  424e9f:	add    BYTE PTR [rdx+0x4245],bh
	...
  424ead:	add    BYTE PTR [rax],al
  424eaf:	add    al,cl
  424eb1:	rex.RB
  424eb2:	rex.X add BYTE PTR [rax],al
  424eb5:	add    BYTE PTR [rax],al
  424eb7:	add    al,dh
  424eb9:	rex.RB
  424eba:	add    BYTE PTR [rax],al
  424ebd:	add    BYTE PTR [rax],al
  424ebf:	add    bl,bh
  424ec1:	rex
  424ec2:	rex.X add BYTE PTR [rax],al
  424ec5:	add    BYTE PTR [rax],al
  424ec7:	add    bh,bh
  424ec9:	rex
  424eca:	rex.X add BYTE PTR [rax],al
  424ecd:	add    BYTE PTR [rax],al
  424ecf:	add    BYTE PTR [rdx],al
  424ed1:	rex.B
  424ed2:	rex.X add BYTE PTR [rax],al
	...
  424edd:	add    BYTE PTR [rax],al
  424edf:	add    al,bh
  424ee1:	rex.RB
  424ee2:	rex.X add BYTE PTR [rax],al
  424ee5:	add    BYTE PTR [rax],al
  424ee7:	add    BYTE PTR [rax],dl
  424ee9:	rex.RB
  424eea:	add    BYTE PTR [rax],al
  424eed:	add    BYTE PTR [rax],al
  424eef:	add    bl,bh
  424ef1:	rex
  424ef2:	rex.X add BYTE PTR [rax],al
  424ef5:	add    BYTE PTR [rax],al
  424ef7:	add    bh,bh
  424ef9:	rex
  424efa:	rex.X add BYTE PTR [rax],al
  424efd:	add    BYTE PTR [rax],al
  424eff:	add    BYTE PTR [rdx],al
  424f01:	rex.B
  424f02:	rex.X add BYTE PTR [rax],al
	...
  424f0d:	add    BYTE PTR [rax],al
  424f0f:	add    BYTE PTR [rax],ah
  424f11:	rex.RX
  424f12:	rex.X add BYTE PTR [rax],al
  424f15:	add    BYTE PTR [rax],al
  424f17:	add    BYTE PTR [rax],dl
  424f19:	and    eax,DWORD PTR [rax+0x0]
	...
  424f28:	rex.R
  424f29:	rex.RX
  424f2a:	rex.X add BYTE PTR [rax],al
  424f2d:	add    BYTE PTR [rax],al
  424f2f:	add    BYTE PTR [rsi+rax*2+0x42],al
	...
  424f3f:	add    BYTE PTR [rax+0x46],cl
  424f42:	rex.X add BYTE PTR [rax],al
  424f45:	add    BYTE PTR [rax],al
  424f47:	add    BYTE PTR [rax],ah
  424f49:	sbb    eax,DWORD PTR [rax+0x0]
  424f4c:	add    BYTE PTR [rax],al
  424f4e:	add    BYTE PTR [rax],al
  424f50:	sti    
  424f51:	rex
  424f52:	rex.X add BYTE PTR [rax],al
  424f55:	add    BYTE PTR [rax],al
  424f57:	add    bh,bh
  424f59:	rex
  424f5a:	rex.X add BYTE PTR [rax],al
  424f5d:	add    BYTE PTR [rax],al
  424f5f:	add    BYTE PTR [rdx],al
  424f61:	rex.B
  424f62:	rex.X add BYTE PTR [rax],al
	...
  424f6d:	add    BYTE PTR [rax],al
  424f6f:	add    BYTE PTR [rax+0x46],dh
  424f72:	rex.X add BYTE PTR [rax],al
  424f75:	add    BYTE PTR [rax],al
  424f77:	add    BYTE PTR [rax],dl
  424f79:	and    eax,DWORD PTR [rax+0x0]
	...
  424f88:	rex.R
  424f89:	rex.RX
  424f8a:	rex.X add BYTE PTR [rax],al
  424f8d:	add    BYTE PTR [rax],al
  424f8f:	add    BYTE PTR [rsi+rax*2+0x42],al
	...
  424f9f:	add    BYTE PTR [rax+0x4246],bl
  424fa5:	add    BYTE PTR [rax],al
  424fa7:	add    BYTE PTR [rax],al
  424fa9:	sbb    al,0x40
  424fab:	add    BYTE PTR [rax],al
  424fad:	add    BYTE PTR [rax],al
  424faf:	add    bl,bh
  424fb1:	rex
  424fb2:	rex.X add BYTE PTR [rax],al
  424fb5:	add    BYTE PTR [rax],al
  424fb7:	add    bh,bh
  424fb9:	rex
  424fba:	rex.X add BYTE PTR [rax],al
  424fbd:	add    BYTE PTR [rax],al
  424fbf:	add    BYTE PTR [rdx],al
  424fc1:	rex.B
  424fc2:	rex.X add BYTE PTR [rax],al
	...
  424fcd:	add    BYTE PTR [rax],al
  424fcf:	add    al,al
  424fd1:	rex.RX
  424fd2:	rex.X add BYTE PTR [rax],al
  424fd5:	add    BYTE PTR [rax],al
  424fd7:	add    al,al
  424fd9:	and    eax,0x40
	...
  424fe6:	add    BYTE PTR [rax],al
  424fe8:	rex.R
  424fe9:	rex.RX
  424fea:	rex.X add BYTE PTR [rax],al
  424fed:	add    BYTE PTR [rax],al
  424fef:	add    BYTE PTR [rsi+rax*2+0x42],al
	...
  424fff:	add    al,ch
  425001:	rex.RX
  425002:	rex.X add BYTE PTR [rax],al
  425005:	add    BYTE PTR [rax],al
  425007:	add    BYTE PTR [rax],al
  425009:	sub    DWORD PTR [rax+0x0],eax
  42500c:	add    BYTE PTR [rax],al
  42500e:	add    BYTE PTR [rax],al
  425010:	sti    
  425011:	rex
  425012:	rex.X add BYTE PTR [rax],al
  425015:	add    BYTE PTR [rax],al
  425017:	add    bh,bh
  425019:	rex
  42501a:	rex.X add BYTE PTR [rax],al
  42501d:	add    BYTE PTR [rax],al
  42501f:	add    BYTE PTR [rdx],al
  425021:	rex.B
  425022:	rex.X add BYTE PTR [rax],al
	...
  42502d:	add    BYTE PTR [rax],al
  42502f:	add    BYTE PTR [rax],bl
  425031:	rex.RXB
  425032:	rex.X add BYTE PTR [rax],al
  425035:	add    BYTE PTR [rax],al
  425037:	add    al,al
  425039:	sub    DWORD PTR [rax+0x0],eax
  42503c:	add    BYTE PTR [rax],al
  42503e:	add    BYTE PTR [rax],al
  425040:	sti    
  425041:	rex
  425042:	rex.X add BYTE PTR [rax],al
  425045:	add    BYTE PTR [rax],al
  425047:	add    bh,bh
  425049:	rex
  42504a:	rex.X add BYTE PTR [rax],al
  42504d:	add    BYTE PTR [rax],al
  42504f:	add    BYTE PTR [rdx],al
  425051:	rex.B
  425052:	rex.X add BYTE PTR [rax],al
	...
  42505d:	add    BYTE PTR [rax],al
  42505f:	add    BYTE PTR [rax+0x47],cl
  425062:	rex.X add BYTE PTR [rax],al
  425065:	add    BYTE PTR [rax],al
  425067:	add    BYTE PTR [rax+0x402a],al
  42506d:	add    BYTE PTR [rax],al
  42506f:	add    bl,bh
  425071:	rex
  425072:	rex.X add BYTE PTR [rax],al
  425075:	add    BYTE PTR [rax],al
  425077:	add    bh,bh
  425079:	rex
  42507a:	rex.X add BYTE PTR [rax],al
  42507d:	add    BYTE PTR [rax],al
  42507f:	add    BYTE PTR [rdx],al
  425081:	rex.B
  425082:	rex.X add BYTE PTR [rax],al
	...
  42508d:	add    BYTE PTR [rax],al
  42508f:	add    BYTE PTR [rax+0x47],bh
  425092:	rex.X add BYTE PTR [rax],al
  425095:	add    BYTE PTR [rax],al
  425097:	add    BYTE PTR [rax+0x28],al
  42509a:	add    BYTE PTR [rax],al
  42509d:	add    BYTE PTR [rax],al
  42509f:	add    bl,bh
  4250a1:	rex
  4250a2:	rex.X add BYTE PTR [rax],al
  4250a5:	add    BYTE PTR [rax],al
  4250a7:	add    bh,bh
  4250a9:	rex
  4250aa:	rex.X add BYTE PTR [rax],al
  4250ad:	add    BYTE PTR [rax],al
  4250af:	add    BYTE PTR [rdx],al
  4250b1:	rex.B
  4250b2:	rex.X add BYTE PTR [rax],al
	...
  4250bd:	add    BYTE PTR [rax],al
  4250bf:	add    BYTE PTR [rax+0x4247],ch
  4250c5:	add    BYTE PTR [rax],al
  4250c7:	add    BYTE PTR [rax],al
  4250c9:	sub    al,0x40
  4250cb:	add    BYTE PTR [rax],al
  4250cd:	add    BYTE PTR [rax],al
  4250cf:	add    bl,bh
  4250d1:	rex
  4250d2:	rex.X add BYTE PTR [rax],al
  4250d5:	add    BYTE PTR [rax],al
  4250d7:	add    bh,bh
  4250d9:	rex
  4250da:	rex.X add BYTE PTR [rax],al
  4250dd:	add    BYTE PTR [rax],al
  4250df:	add    BYTE PTR [rdx],al
  4250e1:	rex.B
  4250e2:	rex.X add BYTE PTR [rax],al
	...
  4250ed:	add    BYTE PTR [rax],al
  4250ef:	add    al,bl
  4250f1:	rex.RXB
  4250f2:	rex.X add BYTE PTR [rax],al
  4250f5:	add    BYTE PTR [rax],al
  4250f7:	add    BYTE PTR [rax+0x2b],al
  4250fa:	add    BYTE PTR [rax],al
  4250fd:	add    BYTE PTR [rax],al
  4250ff:	add    bl,bh
  425101:	rex
  425102:	rex.X add BYTE PTR [rax],al
  425105:	add    BYTE PTR [rax],al
  425107:	add    bh,bh
  425109:	rex
  42510a:	rex.X add BYTE PTR [rax],al
  42510d:	add    BYTE PTR [rax],al
  42510f:	add    BYTE PTR [rdx],al
  425111:	rex.B
  425112:	rex.X add BYTE PTR [rax],al
	...
  42511d:	add    BYTE PTR [rax],al
  42511f:	add    BYTE PTR [rax],cl
  425121:	rex.W
  425122:	rex.X add BYTE PTR [rax],al
  425125:	add    BYTE PTR [rax],al
  425127:	add    BYTE PTR [rax+0x4031],al
  42512d:	add    BYTE PTR [rax],al
  42512f:	add    bl,bh
  425131:	rex
  425132:	rex.X add BYTE PTR [rax],al
  425135:	add    BYTE PTR [rax],al
  425137:	add    bh,bh
  425139:	rex
  42513a:	rex.X add BYTE PTR [rax],al
  42513d:	add    BYTE PTR [rax],al
  42513f:	add    BYTE PTR [rdx],al
  425141:	rex.B
  425142:	rex.X add BYTE PTR [rax],al
	...
  42514d:	add    BYTE PTR [rax],al
  42514f:	add    BYTE PTR [rax],dh
  425151:	rex.W
  425152:	rex.X add BYTE PTR [rax],al
  425155:	add    BYTE PTR [rax],al
  425157:	add    BYTE PTR [rax+0x32],al
  42515a:	add    BYTE PTR [rax],al
  42515d:	add    BYTE PTR [rax],al
  42515f:	add    bl,bh
  425161:	rex
  425162:	rex.X add BYTE PTR [rax],al
  425165:	add    BYTE PTR [rax],al
  425167:	add    bh,bh
  425169:	rex
  42516a:	rex.X add BYTE PTR [rax],al
  42516d:	add    BYTE PTR [rax],al
  42516f:	add    BYTE PTR [rdx],al
  425171:	rex.B
  425172:	rex.X add BYTE PTR [rax],al
	...
  42517d:	add    BYTE PTR [rax],al
  42517f:	add    BYTE PTR [rcx+0x48],bl
  425182:	rex.X add BYTE PTR [rax],al
  425185:	add    BYTE PTR [rax],al
  425187:	add    BYTE PTR [rax+0x402e],al
  42518d:	add    BYTE PTR [rax],al
  42518f:	add    bl,bh
  425191:	rex
  425192:	rex.X add BYTE PTR [rax],al
  425195:	add    BYTE PTR [rax],al
  425197:	add    bh,bh
  425199:	rex
  42519a:	rex.X add BYTE PTR [rax],al
  42519d:	add    BYTE PTR [rax],al
  42519f:	add    BYTE PTR [rdx],al
  4251a1:	rex.B
  4251a2:	rex.X add BYTE PTR [rax],al
	...
  4251ad:	add    BYTE PTR [rax],al
  4251af:	add    BYTE PTR [rbp+0x48],ch
  4251b2:	rex.X add BYTE PTR [rax],al
  4251b5:	add    BYTE PTR [rax],al
  4251b7:	add    BYTE PTR [rax],al
  4251b9:	xor    BYTE PTR [rax+0x0],al
  4251bc:	add    BYTE PTR [rax],al
  4251be:	add    BYTE PTR [rax],al
  4251c0:	sti    
  4251c1:	rex
  4251c2:	rex.X add BYTE PTR [rax],al
  4251c5:	add    BYTE PTR [rax],al
  4251c7:	add    bh,bh
  4251c9:	rex
  4251ca:	rex.X add BYTE PTR [rax],al
  4251cd:	add    BYTE PTR [rax],al
  4251cf:	add    BYTE PTR [rdx],al
  4251d1:	rex.B
  4251d2:	rex.X add BYTE PTR [rax],al
	...
  4251dd:	add    BYTE PTR [rax],al
  4251df:	add    BYTE PTR [rdx+0x4248],al
  4251e5:	add    BYTE PTR [rax],al
  4251e7:	add    al,al
  4251e9:	xor    BYTE PTR [rax+0x0],al
  4251ec:	add    BYTE PTR [rax],al
  4251ee:	add    BYTE PTR [rax],al
  4251f0:	sti    
  4251f1:	rex
  4251f2:	rex.X add BYTE PTR [rax],al
  4251f5:	add    BYTE PTR [rax],al
  4251f7:	add    bh,bh
  4251f9:	rex
  4251fa:	rex.X add BYTE PTR [rax],al
  4251fd:	add    BYTE PTR [rax],al
  4251ff:	add    BYTE PTR [rdx],al
  425201:	rex.B
  425202:	rex.X add BYTE PTR [rax],al
	...
  42520d:	add    BYTE PTR [rax],al
  42520f:	add    BYTE PTR [rcx+0x4248],bl
  425215:	add    BYTE PTR [rax],al
  425217:	add    BYTE PTR [rax+0x2f],al
  42521a:	add    BYTE PTR [rax],al
  42521d:	add    BYTE PTR [rax],al
  42521f:	add    bl,bh
  425221:	rex
  425222:	rex.X add BYTE PTR [rax],al
  425225:	add    BYTE PTR [rax],al
  425227:	add    bh,bh
  425229:	rex
  42522a:	rex.X add BYTE PTR [rax],al
  42522d:	add    BYTE PTR [rax],al
  42522f:	add    BYTE PTR [rdx],al
  425231:	rex.B
  425232:	rex.X add BYTE PTR [rax],al
	...
  42523d:	add    BYTE PTR [rax],al
  42523f:	add    BYTE PTR [rax+0x4248],bh
  425245:	add    BYTE PTR [rax],al
  425247:	add    BYTE PTR [rax+0x3f],dl
  42524a:	add    BYTE PTR [rax],al
  42524d:	add    BYTE PTR [rax],al
  42524f:	add    bl,bh
  425251:	rex
  425252:	rex.X add BYTE PTR [rax],al
  425255:	add    BYTE PTR [rax],al
  425257:	add    bh,bh
  425259:	rex
  42525a:	rex.X add BYTE PTR [rax],al
  42525d:	add    BYTE PTR [rax],al
  42525f:	add    BYTE PTR [rdx],al
  425261:	rex.B
  425262:	rex.X add BYTE PTR [rax],al
	...
  42526d:	add    BYTE PTR [rax],al
  42526f:	add    al,ah
  425271:	rex.W
  425272:	rex.X add BYTE PTR [rax],al
  425275:	add    BYTE PTR [rax],al
  425277:	add    BYTE PTR [rax],dh
  425279:	(bad)  
  42527a:	add    BYTE PTR [rax],al
  42527d:	add    BYTE PTR [rax],al
  42527f:	add    bl,bh
  425281:	rex
  425282:	rex.X add BYTE PTR [rax],al
  425285:	add    BYTE PTR [rax],al
  425287:	add    bh,bh
  425289:	rex
  42528a:	rex.X add BYTE PTR [rax],al
  42528d:	add    BYTE PTR [rax],al
  42528f:	add    BYTE PTR [rdx],al
  425291:	rex.B
  425292:	rex.X add BYTE PTR [rax],al
	...
  42529d:	add    BYTE PTR [rax],al
  42529f:	add    BYTE PTR [rax],dl
  4252a1:	rex.WB
  4252a2:	rex.X add BYTE PTR [rax],al
  4252a5:	add    BYTE PTR [rax],al
  4252a7:	add    al,al
  4252a9:	sub    al,0x40
  4252ab:	add    BYTE PTR [rax],al
  4252ad:	add    BYTE PTR [rax],al
  4252af:	add    bl,bh
  4252b1:	rex
  4252b2:	rex.X add BYTE PTR [rax],al
  4252b5:	add    BYTE PTR [rax],al
  4252b7:	add    bh,bh
  4252b9:	rex
  4252ba:	rex.X add BYTE PTR [rax],al
  4252bd:	add    BYTE PTR [rax],al
  4252bf:	add    BYTE PTR [rdx],al
  4252c1:	rex.B
  4252c2:	rex.X add BYTE PTR [rax],al
	...
  4252fd:	add    BYTE PTR [rax],al
  4252ff:	add    BYTE PTR [rdx],cl
  425301:	add    BYTE PTR [rdx],ch
  425303:	sub    ch,BYTE PTR [rdx]
  425305:	and    BYTE PTR [rdx+0x65],dl
  425308:	movsxd esp,DWORD PTR [rbp+0x69]
  42530b:	jbe    0x425372
  42530d:	and    BYTE PTR fs:[rcx+0x6c],ah
  425311:	gs jb  0x425388
  425314:	and    BYTE PTR [rbx+0x25],bl
  425317:	fs pop rbp
  425319:	cmp    ah,BYTE PTR [rax]
  42531b:	and    eax,0x4d000a73
  425320:	gs ins DWORD PTR es:[rdi],dx
  425322:	outs   dx,DWORD PTR ds:[rsi]
  425323:	jb     0x42539e
  425325:	and    BYTE PTR [rbp+0x72],ah
  425328:	jb     0x425399
  42532a:	jb     0x425336
  42532c:	add    BYTE PTR [rdi+0x0],dh
  42532f:	fs gs (bad) 
  425332:	jne    0x42539b
  425334:	sub    eax,0x2e736163
  425339:	outs   dx,DWORD PTR ds:[rsi]
  42533a:	jne    0x4253b0
  42533c:	add    BYTE PTR [rax],al
  42533e:	add    BYTE PTR [rax],al
  425340:	sub    eax,0x72655320
  425345:	jbe    0x4253ac
  425347:	jb     0x425370
  425349:	jae    0x42536b
  42534b:	je     0x4253bf
  42534d:	jne    0x4253c2
  42534f:	je     0x4253b6
  425351:	and    BYTE PTR fs:[rcx+0x75],ah
  425355:	je     0x4253bf
  425357:	outs   dx,DWORD PTR ds:[rsi]
  425358:	jb     0x4253c3
  42535a:	je     0x4253c5
  42535c:	gs jae 0x425399
  42535f:	or     al,BYTE PTR [rax]
  425361:	add    BYTE PTR [rax],al
  425363:	add    BYTE PTR [rax],al
  425365:	add    BYTE PTR [rax],al
  425367:	add    BYTE PTR [rip+0x72655320],ch        # 0x72a7a68d
  42536d:	jbe    0x4253d4
  42536f:	jb     0x425391
  425371:	imul   esp,DWORD PTR fs:[rax+riz*1+0x6e],0x7320746f
  42537a:	outs   dx,BYTE PTR gs:[rsi]
  42537c:	and    BYTE PTR fs:[rbp+0x73],dh
  425380:	and    BYTE PTR [rcx+0x6e],ah
  425383:	jns    0x4253a5
  425385:	je     0x4253f9
  425387:	jne    0x4253fc
  425389:	je     0x4253f0
  42538b:	and    BYTE PTR fs:[rcx+0x75],ah
  42538f:	je     0x4253f9
  425391:	outs   dx,DWORD PTR ds:[rsi]
  425392:	jb     0x4253fd
  425394:	je     0x4253ff
  425396:	gs jae 0x4253b9
  425399:	outs   dx,BYTE PTR ds:[rsi]
  42539a:	(bad)  
  42539b:	ins    DWORD PTR es:[rdi],dx
  42539c:	gs jae 0x4253cd
  42539f:	or     al,BYTE PTR [rax]
  4253a1:	and    BYTE PTR [rax],ah
  4253a3:	and    BYTE PTR [rbx+0x25],bl
  4253a6:	fs pop rbp
  4253a8:	cmp    ah,BYTE PTR [rax]
  4253aa:	add    BYTE PTR [rip+0xa73],ah        # 0x425e23
  4253b0:	rex.WRX
  4253b1:	rex.WRXB
  4253b2:	rex.WRX
  4253b3:	cmp    r13b,BYTE PTR [r11]
  4253b6:	rex.B
  4253b7:	rex.RB push r11
  4253b9:	sub    eax,0x2d383231
  4253be:	rex.RXB
  4253bf:	rex.XB
  4253c0:	rex.WRB cmp r13b,BYTE PTR [r11]
  4253c3:	rex.XB
  4253c4:	rex.B
  4253c5:	rex.WRB
  4253c6:	rex.RB
  4253c7:	rex.WR
  4253c8:	rex.WR
  4253c9:	rex.WB
  4253ca:	rex.B sub eax,0x2d383231
  4253d0:	rex.RXB
  4253d1:	rex.XB
  4253d2:	rex.WRB cmp r13b,BYTE PTR [r11]
  4253d5:	rex.B
  4253d6:	rex.RB push r11
  4253d8:	sub    eax,0x2d383231
  4253dd:	rex.XB
  4253de:	rex.X
  4253df:	rex.XB cmp bpl,BYTE PTR [r11]
  4253e2:	rex.XB
  4253e3:	rex.B
  4253e4:	rex.WRB
  4253e5:	rex.RB
  4253e6:	rex.WR
  4253e7:	rex.WR
  4253e8:	rex.WB
  4253e9:	rex.B sub eax,0x2d383231
  4253ef:	rex.XB
  4253f0:	rex.X
  4253f1:	rex.XB cmp bpl,BYTE PTR [r11]
  4253f4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4253f8:	sub    eax,0x3a434243
  4253fd:	sub    eax,DWORD PTR [rcx+0x52]
  425400:	rex.XB
  425401:	rex.RX
  425402:	rex.WRXB push r13
  425404:	push   rdx
  425405:	sub    eax,0x3a383231
  42540a:	sub    eax,DWORD PTR [rbx+0x4f]
  42540d:	rex.WRB push r8
  42540f:	sub    eax,0x4c4c554e
  425414:	cmp    ch,BYTE PTR [rbx]
  425416:	rex.XB push r12
  425418:	pop    rcx
  425419:	push   rax
  42541a:	rex.RB sub eax,0x39303558
  425420:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d8e99
  425426:	rex.W
  425427:	xor    DWORD PTR [r10],edi
  42542a:	sub    ecx,DWORD PTR [rbp+0x44]
  42542d:	xor    eax,0x53522b3a
  425432:	cmp    bpl,BYTE PTR [r11]
  425435:	rex.R
  425436:	rex.W
  425437:	rex.RB sub eax,0x3a415352
  42543d:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425441:	sub    eax,0x3a535344
  425446:	sub    eax,DWORD PTR [rcx+0x4e]
  425449:	rex.WRXB
  42544a:	rex.WRX sub rax,0x2b3a4844
  425450:	rex.RB
  425451:	rex.XB
  425452:	rex.R
  425453:	rex.W
  425454:	rex.RB sub eax,0x3a415352
  42545a:	sub    eax,DWORD PTR [rbp+0x43]
  42545d:	rex.R
  42545e:	rex.W
  42545f:	rex.RB sub eax,0x53444345
  425465:	cmp    bpl,BYTE PTR [r11]
  425468:	rex.B
  425469:	rex.WRX
  42546a:	rex.WRXB
  42546b:	rex.WRX sub rax,0x48444345
  425471:	cmp    ah,BYTE PTR [rip+0x72450073]        # 0x728754ea
  425477:	jb     0x4254e8
  425479:	jb     0x42549b
  42547b:	ja     0x4254e6
  42547d:	je     0x4254e7
  42547f:	and    BYTE PTR [rbx+0x74],dh
  425482:	jb     0x4254ed
  425484:	outs   dx,BYTE PTR ds:[rsi]
  425485:	and    BYTE PTR [eip+0x45000a73],ah        # 0x45425eff
  42548c:	jb     0x425500
  42548e:	outs   dx,DWORD PTR ds:[rsi]
  42548f:	jb     0x4254b1
  425491:	(bad)  
  425492:	je     0x4254b4
  425494:	and    eax,0x25203a73
  425499:	jae    0x4254a5
  42549b:	add    BYTE PTR [rbp+0x6e],dh
  42549e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4254a2:	outs   dx,BYTE PTR ds:[rsi]
  4254a3:	add    BYTE PTR [rbx+0x65],dl
  4254a6:	jb     0x42551e
  4254a8:	gs jb  0x4254e5
  4254ab:	add    BYTE PTR [rax],al
  4254ad:	add    BYTE PTR [rax],al
  4254af:	add    BYTE PTR [rsi+0x4f],cl
  4254b2:	rex.WRX
  4254b3:	cmp    r13b,BYTE PTR [r11]
  4254b6:	rex.B
  4254b7:	rex.RB push r11
  4254b9:	sub    eax,0x2d383231
  4254be:	rex.RXB
  4254bf:	rex.XB
  4254c0:	rex.WRB cmp r13b,BYTE PTR [r11]
  4254c3:	rex.XB
  4254c4:	rex.B
  4254c5:	rex.WRB
  4254c6:	rex.RB
  4254c7:	rex.WR
  4254c8:	rex.WR
  4254c9:	rex.WB
  4254ca:	rex.B sub eax,0x2d383231
  4254d0:	rex.RXB
  4254d1:	rex.XB
  4254d2:	rex.WRB cmp r13b,BYTE PTR [r11]
  4254d5:	rex.B
  4254d6:	rex.RB push r11
  4254d8:	sub    eax,0x2d383231
  4254dd:	rex.XB
  4254de:	rex.X
  4254df:	rex.XB cmp bpl,BYTE PTR [r11]
  4254e2:	rex.XB
  4254e3:	rex.B
  4254e4:	rex.WRB
  4254e5:	rex.RB
  4254e6:	rex.WR
  4254e7:	rex.WR
  4254e8:	rex.WB
  4254e9:	rex.B sub eax,0x2d383231
  4254ef:	rex.XB
  4254f0:	rex.X
  4254f1:	rex.XB cmp bpl,BYTE PTR [r11]
  4254f4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4254f8:	sub    eax,0x3a434243
  4254fd:	sub    eax,DWORD PTR [rcx+0x52]
  425500:	rex.XB
  425501:	rex.RX
  425502:	rex.WRXB push r13
  425504:	push   rdx
  425505:	sub    eax,0x3a383231
  42550a:	sub    eax,DWORD PTR [rbx+0x4f]
  42550d:	rex.WRB push r8
  42550f:	sub    eax,0x4c4c554e
  425514:	cmp    ch,BYTE PTR [rbx]
  425516:	rex.XB push r12
  425518:	pop    rcx
  425519:	push   rax
  42551a:	rex.RB sub eax,0x39303558
  425520:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d8f99
  425526:	rex.W
  425527:	xor    DWORD PTR [r10],edi
  42552a:	sub    ecx,DWORD PTR [rbp+0x44]
  42552d:	xor    eax,0x48442b3a
  425532:	rex.RB sub eax,0x3a415352
  425538:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  42553c:	sub    eax,0x3a535344
  425541:	and    eax,0x73
  425546:	add    BYTE PTR [rax],al
  425548:	rex.WRX
  425549:	rex.WRXB
  42554a:	rex.WRX
  42554b:	cmp    r13b,BYTE PTR [r11]
  42554e:	rex.B
  42554f:	rex.RB push r11
  425551:	sub    eax,0x2d383231
  425556:	rex.RXB
  425557:	rex.XB
  425558:	rex.WRB cmp r13b,BYTE PTR [r11]
  42555b:	rex.XB
  42555c:	rex.B
  42555d:	rex.WRB
  42555e:	rex.RB
  42555f:	rex.WR
  425560:	rex.WR
  425561:	rex.WB
  425562:	rex.B sub eax,0x2d383231
  425568:	rex.RXB
  425569:	rex.XB
  42556a:	rex.WRB cmp r13b,BYTE PTR [r11]
  42556d:	rex.B
  42556e:	rex.RB push r11
  425570:	sub    eax,0x2d383231
  425575:	rex.XB
  425576:	rex.X
  425577:	rex.XB cmp bpl,BYTE PTR [r11]
  42557a:	rex.XB
  42557b:	rex.B
  42557c:	rex.WRB
  42557d:	rex.RB
  42557e:	rex.WR
  42557f:	rex.WR
  425580:	rex.WB
  425581:	rex.B sub eax,0x2d383231
  425587:	rex.XB
  425588:	rex.X
  425589:	rex.XB cmp bpl,BYTE PTR [r11]
  42558c:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425590:	sub    eax,0x3a434243
  425595:	sub    eax,DWORD PTR [rcx+0x52]
  425598:	rex.XB
  425599:	rex.RX
  42559a:	rex.WRXB push r13
  42559c:	push   rdx
  42559d:	sub    eax,0x3a383231
  4255a2:	sub    eax,DWORD PTR [rbx+0x4f]
  4255a5:	rex.WRB push r8
  4255a7:	sub    eax,0x4c4c554e
  4255ac:	cmp    ch,BYTE PTR [rbx]
  4255ae:	rex.XB push r12
  4255b0:	pop    rcx
  4255b1:	push   rax
  4255b2:	rex.RB sub eax,0x39303558
  4255b8:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9031
  4255be:	rex.W
  4255bf:	xor    DWORD PTR [r10],edi
  4255c2:	sub    ecx,DWORD PTR [rbp+0x44]
  4255c5:	xor    eax,0x43452b3a
  4255ca:	rex.R
  4255cb:	rex.W
  4255cc:	rex.RB sub eax,0x3a415352
  4255d2:	sub    eax,DWORD PTR [rbp+0x43]
  4255d5:	rex.R
  4255d6:	rex.W
  4255d7:	rex.RB sub eax,0x53444345
  4255dd:	cmp    bpl,BYTE PTR [r11]
  4255e0:	rex.XB push r13
  4255e2:	push   rdx
  4255e3:	push   rsi
  4255e4:	rex.RB sub eax,0x3a4c4c41
  4255ea:	and    eax,0x73
  4255ef:	add    BYTE PTR [rip+0x53524556],ch        # 0x53949b4b
  4255f5:	sub    eax,0x2d534c54
  4255fa:	rex.B
  4255fb:	rex.WR
  4255fc:	rex.WR cmp r13b,BYTE PTR [rbx]
  4255ff:	push   rsi
  425600:	rex.RB push r10
  425602:	push   rbx
  425603:	sub    eax,0x31534c54
  425608:	xor    DWORD PTR cs:[rdx],edi
  42560b:	and    eax,0x4c4c4146
  425610:	rex.X
  425611:	rex.B
  425612:	rex.XB
  425613:	rex.WXB pop r15
  425615:	push   rbx
  425616:	rex.XB push r11
  425618:	push   rsi
  425619:	add    BYTE PTR [rax],al
  42561b:	add    BYTE PTR [rax],al
  42561d:	add    BYTE PTR [rax],al
  42561f:	add    BYTE PTR [rip+0x53524556],ch        # 0x53949b7b
  425625:	sub    eax,0x2d534c54
  42562a:	rex.B
  42562b:	rex.WR
  42562c:	rex.WR cmp r13b,BYTE PTR [rbx]
  42562f:	push   rsi
  425630:	rex.RB push r10
  425632:	push   rbx
  425633:	sub    eax,0x31534c54
  425638:	xor    BYTE PTR cs:[rdx],bh
  42563b:	and    eax,0x4c4c4146
  425640:	rex.X
  425641:	rex.B
  425642:	rex.XB
  425643:	rex.WXB pop r15
  425645:	push   rbx
  425646:	rex.XB push r11
  425648:	push   rsi
  425649:	add    BYTE PTR [rax],al
  42564b:	add    BYTE PTR [rax],al
  42564d:	add    BYTE PTR [rax],al
  42564f:	add    BYTE PTR [rip+0x53524556],ch        # 0x53949bab
  425655:	sub    eax,0x2d534c54
  42565a:	rex.B
  42565b:	rex.WR
  42565c:	rex.WR cmp r13b,BYTE PTR [rbx]
  42565f:	push   rsi
  425660:	rex.RB push r10
  425662:	push   rbx
  425663:	sub    eax,0x334c5353
  425668:	xor    BYTE PTR cs:[rdx],bh
  42566b:	and    eax,0x4c4c4146
  425670:	rex.X
  425671:	rex.B
  425672:	rex.XB
  425673:	rex.WXB pop r15
  425675:	push   rbx
  425676:	rex.XB push r11
  425678:	push   rsi
  425679:	add    BYTE PTR [rax],al
  42567b:	add    BYTE PTR [rax],al
  42567d:	add    BYTE PTR [rax],al
  42567f:	add    BYTE PTR [rsi+0x4f],cl
  425682:	rex.WRX
  425683:	cmp    r13b,BYTE PTR [r11]
  425686:	rex.B
  425687:	rex.RB push r11
  425689:	sub    eax,0x2d383231
  42568e:	rex.RXB
  42568f:	rex.XB
  425690:	rex.WRB cmp r13b,BYTE PTR [r11]
  425693:	rex.XB
  425694:	rex.B
  425695:	rex.WRB
  425696:	rex.RB
  425697:	rex.WR
  425698:	rex.WR
  425699:	rex.WB
  42569a:	rex.B sub eax,0x2d383231
  4256a0:	rex.RXB
  4256a1:	rex.XB
  4256a2:	rex.WRB cmp r13b,BYTE PTR [r11]
  4256a5:	rex.B
  4256a6:	rex.RB push r11
  4256a8:	sub    eax,0x2d383231
  4256ad:	rex.XB
  4256ae:	rex.X
  4256af:	rex.XB cmp bpl,BYTE PTR [r11]
  4256b2:	rex.XB
  4256b3:	rex.B
  4256b4:	rex.WRB
  4256b5:	rex.RB
  4256b6:	rex.WR
  4256b7:	rex.WR
  4256b8:	rex.WB
  4256b9:	rex.B sub eax,0x2d383231
  4256bf:	rex.XB
  4256c0:	rex.X
  4256c1:	rex.XB cmp bpl,BYTE PTR [r11]
  4256c4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4256c8:	sub    eax,0x3a434243
  4256cd:	sub    eax,DWORD PTR [rcx+0x52]
  4256d0:	rex.XB
  4256d1:	rex.RX
  4256d2:	rex.WRXB push r13
  4256d4:	push   rdx
  4256d5:	sub    eax,0x3a383231
  4256da:	sub    eax,DWORD PTR [rbx+0x4f]
  4256dd:	rex.WRB push r8
  4256df:	sub    eax,0x4c4c554e
  4256e4:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d915d
  4256ea:	rex.W
  4256eb:	xor    DWORD PTR [r10],edi
  4256ee:	sub    ecx,DWORD PTR [rbp+0x44]
  4256f1:	xor    eax,0x53522b3a
  4256f6:	cmp    bpl,BYTE PTR [r11]
  4256f9:	rex.R
  4256fa:	rex.W
  4256fb:	rex.RB sub eax,0x3a415352
  425701:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425705:	sub    eax,0x3a535344
  42570a:	sub    eax,DWORD PTR [rcx+0x4e]
  42570d:	rex.WRXB
  42570e:	rex.WRX sub rax,0x2b3a4844
  425714:	rex.RB
  425715:	rex.XB
  425716:	rex.R
  425717:	rex.W
  425718:	rex.RB sub eax,0x3a415352
  42571e:	sub    eax,DWORD PTR [rbp+0x43]
  425721:	rex.R
  425722:	rex.W
  425723:	rex.RB sub eax,0x53444345
  425729:	cmp    bpl,BYTE PTR [r11]
  42572c:	rex.B
  42572d:	rex.WRX
  42572e:	rex.WRXB
  42572f:	rex.WRX sub rax,0x48444345
  425735:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4257ae
  42573b:	add    BYTE PTR [rax],al
  42573d:	add    BYTE PTR [rax],al
  42573f:	add    BYTE PTR [rsi+0x4f],cl
  425742:	rex.WRX
  425743:	cmp    r13b,BYTE PTR [r11]
  425746:	rex.B
  425747:	rex.RB push r11
  425749:	sub    eax,0x2d383231
  42574e:	rex.RXB
  42574f:	rex.XB
  425750:	rex.WRB cmp r13b,BYTE PTR [r11]
  425753:	rex.XB
  425754:	rex.B
  425755:	rex.WRB
  425756:	rex.RB
  425757:	rex.WR
  425758:	rex.WR
  425759:	rex.WB
  42575a:	rex.B sub eax,0x2d383231
  425760:	rex.RXB
  425761:	rex.XB
  425762:	rex.WRB cmp r13b,BYTE PTR [r11]
  425765:	rex.B
  425766:	rex.RB push r11
  425768:	sub    eax,0x2d383231
  42576d:	rex.XB
  42576e:	rex.X
  42576f:	rex.XB cmp bpl,BYTE PTR [r11]
  425772:	rex.XB
  425773:	rex.B
  425774:	rex.WRB
  425775:	rex.RB
  425776:	rex.WR
  425777:	rex.WR
  425778:	rex.WB
  425779:	rex.B sub eax,0x2d383231
  42577f:	rex.XB
  425780:	rex.X
  425781:	rex.XB cmp bpl,BYTE PTR [r11]
  425784:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425788:	sub    eax,0x3a434243
  42578d:	sub    eax,DWORD PTR [rcx+0x52]
  425790:	rex.XB
  425791:	rex.RX
  425792:	rex.WRXB push r13
  425794:	push   rdx
  425795:	sub    eax,0x3a383231
  42579a:	sub    eax,DWORD PTR [rbx+0x4f]
  42579d:	rex.WRB push r8
  42579f:	sub    eax,0x4c4c554e
  4257a4:	cmp    ch,BYTE PTR [rbx]
  4257a6:	rex.XB push r12
  4257a8:	pop    rcx
  4257a9:	push   rax
  4257aa:	rex.RB sub eax,0x39303558
  4257b0:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9229
  4257b6:	rex.W
  4257b7:	xor    DWORD PTR [r10],edi
  4257ba:	sub    ecx,DWORD PTR [rbp+0x44]
  4257bd:	xor    eax,0x53522b3a
  4257c2:	cmp    bpl,BYTE PTR [r11]
  4257c5:	rex.R
  4257c6:	rex.W
  4257c7:	rex.RB sub eax,0x3a415352
  4257cd:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  4257d1:	sub    eax,0x3a535344
  4257d6:	sub    eax,DWORD PTR [rcx+0x4e]
  4257d9:	rex.WRXB
  4257da:	rex.WRX sub rax,0x2b3a4844
  4257e0:	rex.RB
  4257e1:	rex.XB
  4257e2:	rex.R
  4257e3:	rex.W
  4257e4:	rex.RB sub eax,0x3a415352
  4257ea:	sub    eax,DWORD PTR [rbp+0x43]
  4257ed:	rex.R
  4257ee:	rex.W
  4257ef:	rex.RB sub eax,0x53444345
  4257f5:	cmp    bpl,BYTE PTR [r11]
  4257f8:	rex.B
  4257f9:	rex.WRX
  4257fa:	rex.WRXB
  4257fb:	rex.WRX sub rax,0x48444345
  425801:	cmp    ah,BYTE PTR [rip+0x25253a73]        # 0x2567927a
  425807:	push   rbx
  425808:	rex.B
  425809:	rex.RX
  42580a:	rex.RB pop r15
  42580c:	push   rdx
  42580d:	rex.RB
  42580e:	rex.WRX
  42580f:	rex.RB
  425810:	rex.RXB
  425811:	rex.WRXB push r12
  425813:	rex.WB
  425814:	push   r12
  425816:	rex.WB
  425817:	rex.WRXB
  425818:	rex.WRX add BYTE PTR [rax],r8b
  42581b:	add    BYTE PTR [rax],al
  42581d:	add    BYTE PTR [rax],al
  42581f:	add    BYTE PTR [rsi+0x4f],cl
  425822:	rex.WRX
  425823:	cmp    r13b,BYTE PTR [r11]
  425826:	rex.B
  425827:	rex.RB push r11
  425829:	sub    eax,0x2d383231
  42582e:	rex.RXB
  42582f:	rex.XB
  425830:	rex.WRB cmp r13b,BYTE PTR [r11]
  425833:	rex.XB
  425834:	rex.B
  425835:	rex.WRB
  425836:	rex.RB
  425837:	rex.WR
  425838:	rex.WR
  425839:	rex.WB
  42583a:	rex.B sub eax,0x2d383231
  425840:	rex.RXB
  425841:	rex.XB
  425842:	rex.WRB cmp r13b,BYTE PTR [r11]
  425845:	rex.B
  425846:	rex.RB push r11
  425848:	sub    eax,0x2d383231
  42584d:	rex.XB
  42584e:	rex.X
  42584f:	rex.XB cmp bpl,BYTE PTR [r11]
  425852:	rex.XB
  425853:	rex.B
  425854:	rex.WRB
  425855:	rex.RB
  425856:	rex.WR
  425857:	rex.WR
  425858:	rex.WB
  425859:	rex.B sub eax,0x2d383231
  42585f:	rex.XB
  425860:	rex.X
  425861:	rex.XB cmp bpl,BYTE PTR [r11]
  425864:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425868:	sub    eax,0x3a434243
  42586d:	sub    eax,DWORD PTR [rcx+0x52]
  425870:	rex.XB
  425871:	rex.RX
  425872:	rex.WRXB push r13
  425874:	push   rdx
  425875:	sub    eax,0x3a383231
  42587a:	sub    eax,DWORD PTR [rbx+0x4f]
  42587d:	rex.WRB push r8
  42587f:	sub    eax,0x4c4c554e
  425884:	cmp    ch,BYTE PTR [rbx]
  425886:	rex.XB push r12
  425888:	pop    rcx
  425889:	push   rax
  42588a:	rex.RB sub eax,0x39303558
  425890:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9309
  425896:	rex.W
  425897:	xor    DWORD PTR [r10],edi
  42589a:	sub    ecx,DWORD PTR [rbp+0x44]
  42589d:	xor    eax,0x3a73253a
  4258a2:	sub    edx,DWORD PTR [rdx+0x53]
  4258a5:	cmp    bpl,BYTE PTR [r11]
  4258a8:	rex.R
  4258a9:	rex.W
  4258aa:	rex.RB sub eax,0x3a415352
  4258b0:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  4258b4:	sub    eax,0x3a535344
  4258b9:	sub    eax,DWORD PTR [rcx+0x4e]
  4258bc:	rex.WRXB
  4258bd:	rex.WRX sub rax,0x2b3a4844
  4258c3:	rex.RB
  4258c4:	rex.XB
  4258c5:	rex.R
  4258c6:	rex.W
  4258c7:	rex.RB sub eax,0x3a415352
  4258cd:	sub    eax,DWORD PTR [rbp+0x43]
  4258d0:	rex.R
  4258d1:	rex.W
  4258d2:	rex.RB sub eax,0x53444345
  4258d8:	cmp    bpl,BYTE PTR [r11]
  4258db:	rex.B
  4258dc:	rex.WRX
  4258dd:	rex.WRXB
  4258de:	rex.WRX sub rax,0x48444345
  4258e4:	add    BYTE PTR [rax],al
  4258e6:	add    BYTE PTR [rax],al
  4258e8:	rex.WRX
  4258e9:	rex.WRXB
  4258ea:	rex.WRX
  4258eb:	cmp    r13b,BYTE PTR [r11]
  4258ee:	rex.B
  4258ef:	rex.RB push r11
  4258f1:	sub    eax,0x2d383231
  4258f6:	rex.RXB
  4258f7:	rex.XB
  4258f8:	rex.WRB cmp r13b,BYTE PTR [r11]
  4258fb:	rex.XB
  4258fc:	rex.B
  4258fd:	rex.WRB
  4258fe:	rex.RB
  4258ff:	rex.WR
  425900:	rex.WR
  425901:	rex.WB
  425902:	rex.B sub eax,0x2d383231
  425908:	rex.RXB
  425909:	rex.XB
  42590a:	rex.WRB cmp r13b,BYTE PTR [r11]
  42590d:	rex.B
  42590e:	rex.RB push r11
  425910:	sub    eax,0x2d383231
  425915:	rex.XB
  425916:	rex.X
  425917:	rex.XB cmp bpl,BYTE PTR [r11]
  42591a:	rex.XB
  42591b:	rex.B
  42591c:	rex.WRB
  42591d:	rex.RB
  42591e:	rex.WR
  42591f:	rex.WR
  425920:	rex.WB
  425921:	rex.B sub eax,0x2d383231
  425927:	rex.XB
  425928:	rex.X
  425929:	rex.XB cmp bpl,BYTE PTR [r11]
  42592c:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425930:	sub    eax,0x3a434243
  425935:	sub    eax,DWORD PTR [rcx+0x52]
  425938:	rex.XB
  425939:	rex.RX
  42593a:	rex.WRXB push r13
  42593c:	push   rdx
  42593d:	sub    eax,0x3a383231
  425942:	sub    eax,DWORD PTR [rbx+0x4f]
  425945:	rex.WRB push r8
  425947:	sub    eax,0x4c4c554e
  42594c:	cmp    ch,BYTE PTR [rbx]
  42594e:	rex.XB push r12
  425950:	pop    rcx
  425951:	push   rax
  425952:	rex.RB sub eax,0x39303558
  425958:	cmp    ch,BYTE PTR [rbx]
  42595a:	push   rsi
  42595b:	rex.RB push r10
  42595d:	push   rbx
  42595e:	sub    eax,0x334c5353
  425963:	xor    BYTE PTR cs:[rdx],bh
  425966:	sub    edx,DWORD PTR [rbx+0x48]
  425969:	xor    DWORD PTR [r10],edi
  42596c:	sub    ecx,DWORD PTR [rbp+0x44]
  42596f:	xor    eax,0x53522b3a
  425974:	cmp    bpl,BYTE PTR [r11]
  425977:	rex.R
  425978:	rex.W
  425979:	rex.RB sub eax,0x3a415352
  42597f:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425983:	sub    eax,0x3a535344
  425988:	sub    eax,DWORD PTR [rcx+0x4e]
  42598b:	rex.WRXB
  42598c:	rex.WRX sub rax,0x2b3a4844
  425992:	rex.RB
  425993:	rex.XB
  425994:	rex.R
  425995:	rex.W
  425996:	rex.RB sub eax,0x3a415352
  42599c:	sub    eax,DWORD PTR [rbp+0x43]
  42599f:	rex.R
  4259a0:	rex.W
  4259a1:	rex.RB sub eax,0x53444345
  4259a7:	cmp    bpl,BYTE PTR [r11]
  4259aa:	rex.B
  4259ab:	rex.WRX
  4259ac:	rex.WRXB
  4259ad:	rex.WRX sub rax,0x48444345
  4259b3:	cmp    ah,BYTE PTR [rip+0x46415325]        # 0x4683acde
  4259b9:	rex.RB pop r15
  4259bb:	push   rdx
  4259bc:	rex.RB
  4259bd:	rex.WRX
  4259be:	rex.RB
  4259bf:	rex.RXB
  4259c0:	rex.WRXB push r12
  4259c2:	rex.WB
  4259c3:	push   r12
  4259c5:	rex.WB
  4259c6:	rex.WRXB
  4259c7:	rex.WRX add BYTE PTR [rbp+r12*2+0x62],r12b
  4259cc:	jne    0x425a35
  4259ce:	sub    eax,0x6f2e6864
  4259d3:	jne    0x425a49
  4259d5:	add    BYTE PTR [rbx+0x61],dh
  4259d8:	jbe    0x425a3f
  4259da:	and    BYTE PTR fs:[rcx+0x6e],ch
  4259de:	and    BYTE PTR [rbp+riz*2+0x62],ah
  4259e2:	jne    0x425a4b
  4259e4:	sub    eax,0x6f2e6864
  4259e9:	jne    0x425a5f
  4259eb:	add    BYTE PTR [rax],ah
  4259ed:	rex.RXB
  4259ee:	outs   dx,BYTE PTR gs:[rsi]
  4259f0:	gs jb  0x425a54
  4259f3:	je     0x425a64
  4259f5:	jb     0x425a17
  4259f7:	pop    rbx
  4259f8:	and    eax,0x69622064
  4259fd:	je     0x425a72
  4259ff:	pop    rbp
  425a00:	cmp    ah,BYTE PTR [rax]
  425a02:	and    eax,0x20000a73
  425a07:	push   rax
  425a08:	jb     0x425a73
  425a0a:	ins    DWORD PTR es:[rdi],dx
  425a0b:	and    BYTE PTR gs:[rbx+0x25],bl
  425a0f:	and    BYTE PTR fs:[rdx+0x69],ah
  425a13:	je     0x425a88
  425a15:	pop    rbp
  425a16:	cmp    ah,BYTE PTR [rax]
  425a18:	and    eax,0x20000a73
  425a1d:	push   rax
  425a1e:	jne    0x425a82
  425a20:	imul   esp,DWORD PTR [rbp+0x79],0x20
  425a24:	pop    rbx
  425a25:	and    eax,0x69622064
  425a2a:	je     0x425a9f
  425a2c:	pop    rbp
  425a2d:	cmp    ah,BYTE PTR [rax]
  425a2f:	and    eax,0xa73
  425a34:	add    BYTE PTR [rax],al
  425a36:	add    BYTE PTR [rax],al
  425a38:	and    BYTE PTR [rax],ch
  425a3a:	jo     0x425ab1
  425a3c:	(bad)  
  425a3d:	ins    BYTE PTR es:[rdi],dx
  425a3e:	imul   esp,DWORD PTR [rbx+0x20],0x2079656b
  425a45:	jae    0x425aac
  425a47:	gs ins DWORD PTR es:[rdi],dx
  425a49:	jae    0x425a6b
  425a4b:	je     0x425abc
  425a4d:	and    BYTE PTR [rdx+0x65],ah
  425a50:	and    BYTE PTR [rbx+0x74],dh
  425a53:	(bad)  
  425a54:	je     0x425abf
  425a56:	movsxd esp,DWORD PTR [rax]
  425a58:	(bad)  
  425a59:	ins    DWORD PTR es:[rdi],dx
  425a5a:	outs   dx,DWORD PTR ds:[rsi]
  425a5b:	outs   dx,BYTE PTR ds:[rsi]
  425a5c:	and    BYTE PTR [ebx+0x65],dh
  425a60:	jae    0x425ad5
  425a62:	imul   ebp,DWORD PTR [rdi+0x6e],0xa2973
  425a69:	or     ah,BYTE PTR [rip+0xa73]        # 0x4264e2
  425a6f:	add    BYTE PTR [rsi+0x4f],cl
  425a72:	rex.WRX
  425a73:	cmp    r13b,BYTE PTR [r11]
  425a76:	rex.B
  425a77:	rex.RB push r11
  425a79:	sub    eax,0x2d383231
  425a7e:	rex.RXB
  425a7f:	rex.XB
  425a80:	rex.WRB cmp r13b,BYTE PTR [r11]
  425a83:	rex.XB
  425a84:	rex.B
  425a85:	rex.WRB
  425a86:	rex.RB
  425a87:	rex.WR
  425a88:	rex.WR
  425a89:	rex.WB
  425a8a:	rex.B sub eax,0x2d383231
  425a90:	rex.RXB
  425a91:	rex.XB
  425a92:	rex.WRB cmp r13b,BYTE PTR [r11]
  425a95:	rex.B
  425a96:	rex.RB push r11
  425a98:	sub    eax,0x2d383231
  425a9d:	rex.XB
  425a9e:	rex.X
  425a9f:	rex.XB cmp bpl,BYTE PTR [r11]
  425aa2:	rex.XB
  425aa3:	rex.B
  425aa4:	rex.WRB
  425aa5:	rex.RB
  425aa6:	rex.WR
  425aa7:	rex.WR
  425aa8:	rex.WB
  425aa9:	rex.B sub eax,0x2d383231
  425aaf:	rex.XB
  425ab0:	rex.X
  425ab1:	rex.XB cmp bpl,BYTE PTR [r11]
  425ab4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425ab8:	sub    eax,0x3a434243
  425abd:	sub    eax,DWORD PTR [rcx+0x52]
  425ac0:	rex.XB
  425ac1:	rex.RX
  425ac2:	rex.WRXB push r13
  425ac4:	push   rdx
  425ac5:	sub    eax,0x3a383231
  425aca:	sub    eax,DWORD PTR [rbx+0x4f]
  425acd:	rex.WRB push r8
  425acf:	sub    eax,0x4c4c554e
  425ad4:	cmp    ch,BYTE PTR [rbx]
  425ad6:	rex.XB push r12
  425ad8:	pop    rcx
  425ad9:	push   rax
  425ada:	rex.RB sub eax,0x39303558
  425ae0:	cmp    ch,BYTE PTR [rbx]
  425ae2:	push   rsi
  425ae3:	rex.RB push r10
  425ae5:	push   rbx
  425ae6:	sub    eax,0x334c5353
  425aeb:	xor    BYTE PTR cs:[rdx],bh
  425aee:	sub    edx,DWORD PTR [rbx+0x48]
  425af1:	xor    DWORD PTR [r10],edi
  425af4:	sub    ecx,DWORD PTR [rbp+0x44]
  425af7:	xor    eax,0x53522b3a
  425afc:	cmp    bpl,BYTE PTR [r11]
  425aff:	rex.R
  425b00:	rex.W
  425b01:	rex.RB sub eax,0x3a415352
  425b07:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425b0b:	sub    eax,0x3a535344
  425b10:	sub    eax,DWORD PTR [rcx+0x4e]
  425b13:	rex.WRXB
  425b14:	rex.WRX sub rax,0x2b3a4844
  425b1a:	rex.RB
  425b1b:	rex.XB
  425b1c:	rex.R
  425b1d:	rex.W
  425b1e:	rex.RB sub eax,0x3a415352
  425b24:	sub    eax,DWORD PTR [rbp+0x43]
  425b27:	rex.R
  425b28:	rex.W
  425b29:	rex.RB sub eax,0x53444345
  425b2f:	cmp    bpl,BYTE PTR [r11]
  425b32:	rex.B
  425b33:	rex.WRX
  425b34:	rex.WRXB
  425b35:	rex.WRX sub rax,0x48444345
  425b3b:	cmp    ah,BYTE PTR [rip+0x4e000073]        # 0x4e425bb4
  425b41:	rex.WRXB
  425b42:	rex.WRX
  425b43:	cmp    r13b,BYTE PTR [r11]
  425b46:	rex.B
  425b47:	rex.RB push r11
  425b49:	sub    eax,0x2d383231
  425b4e:	rex.XB
  425b4f:	rex.X
  425b50:	rex.XB cmp bpl,BYTE PTR [r11]
  425b53:	rex.XB
  425b54:	rex.WRXB
  425b55:	rex.WRB push r8
  425b57:	sub    eax,0x4c4c554e
  425b5c:	cmp    ch,BYTE PTR [rbx]
  425b5e:	rex.XB push r12
  425b60:	pop    rcx
  425b61:	push   rax
  425b62:	rex.RB sub eax,0x39303558
  425b68:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d95e1
  425b6e:	rex.W
  425b6f:	xor    DWORD PTR [r10],edi
  425b72:	sub    ecx,DWORD PTR [rbp+0x44]
  425b75:	xor    eax,0x53522b3a
  425b7a:	cmp    bpl,BYTE PTR [r11]
  425b7d:	rex.R
  425b7e:	rex.W
  425b7f:	rex.RB sub eax,0x3a415352
  425b85:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425b89:	sub    eax,0x3a535344
  425b8e:	sub    eax,DWORD PTR [rcx+0x4e]
  425b91:	rex.WRXB
  425b92:	rex.WRX sub rax,0x2b3a4844
  425b98:	rex.RB
  425b99:	rex.XB
  425b9a:	rex.R
  425b9b:	rex.W
  425b9c:	rex.RB sub eax,0x3a415352
  425ba2:	sub    eax,DWORD PTR [rbp+0x43]
  425ba5:	rex.R
  425ba6:	rex.W
  425ba7:	rex.RB sub eax,0x53444345
  425bad:	cmp    bpl,BYTE PTR [r11]
  425bb0:	rex.B
  425bb1:	rex.WRX
  425bb2:	rex.WRXB
  425bb3:	rex.WRX sub rax,0x48444345
  425bb9:	cmp    ah,BYTE PTR [rip+0x73]        # 0x425c32
  425bbf:	add    BYTE PTR [rsi+0x4f],cl
  425bc2:	rex.WRX
  425bc3:	cmp    r13b,BYTE PTR [r11]
  425bc6:	rex.B
  425bc7:	rex.RB push r11
  425bc9:	sub    eax,0x2d383231
  425bce:	rex.RXB
  425bcf:	rex.XB
  425bd0:	rex.WRB cmp r13b,BYTE PTR [r11]
  425bd3:	rex.B
  425bd4:	rex.RB push r11
  425bd6:	sub    eax,0x2d363532
  425bdb:	rex.RXB
  425bdc:	rex.XB
  425bdd:	rex.WRB cmp r13b,BYTE PTR [r11]
  425be0:	rex.B
  425be1:	rex.RB
  425be2:	rex.B
  425be3:	cmp    r13b,BYTE PTR [rbx]
  425be6:	rex.XB
  425be7:	rex.WRXB
  425be8:	rex.WRB push r8
  425bea:	sub    eax,0x4c4c554e
  425bef:	cmp    ch,BYTE PTR [rbx]
  425bf1:	rex.XB push r12
  425bf3:	pop    rcx
  425bf4:	push   rax
  425bf5:	rex.RB sub eax,0x39303558
  425bfb:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9674
  425c01:	rex.W
  425c02:	xor    DWORD PTR [r10],edi
  425c05:	sub    ecx,DWORD PTR [rbp+0x44]
  425c08:	xor    eax,0x53522b3a
  425c0d:	cmp    bpl,BYTE PTR [r11]
  425c10:	rex.R
  425c11:	rex.W
  425c12:	rex.RB sub eax,0x3a415352
  425c18:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425c1c:	sub    eax,0x3a535344
  425c21:	sub    eax,DWORD PTR [rcx+0x4e]
  425c24:	rex.WRXB
  425c25:	rex.WRX sub rax,0x2b3a4844
  425c2b:	rex.RB
  425c2c:	rex.XB
  425c2d:	rex.R
  425c2e:	rex.W
  425c2f:	rex.RB sub eax,0x3a415352
  425c35:	sub    eax,DWORD PTR [rbp+0x43]
  425c38:	rex.R
  425c39:	rex.W
  425c3a:	rex.RB sub eax,0x53444345
  425c40:	cmp    bpl,BYTE PTR [r11]
  425c43:	rex.B
  425c44:	rex.WRX
  425c45:	rex.WRXB
  425c46:	rex.WRX sub rax,0x48444345
  425c4c:	cmp    ah,BYTE PTR [rip+0x4f4e0073]        # 0x4f905cc5
  425c52:	rex.WRX
  425c53:	cmp    r13b,BYTE PTR [r11]
  425c56:	rex.B
  425c57:	rex.RB push r11
  425c59:	sub    eax,0x2d383231
  425c5e:	rex.XB
  425c5f:	rex.XB
  425c60:	rex.WRB cmp r13b,BYTE PTR [r11]
  425c63:	rex.B
  425c64:	rex.RB push r11
  425c66:	sub    eax,0x2d363532
  425c6b:	rex.XB
  425c6c:	rex.XB
  425c6d:	rex.WRB cmp r13b,BYTE PTR [r11]
  425c70:	rex.B
  425c71:	rex.RB
  425c72:	rex.B
  425c73:	cmp    r13b,BYTE PTR [rbx]
  425c76:	rex.XB
  425c77:	rex.WRXB
  425c78:	rex.WRB push r8
  425c7a:	sub    eax,0x4c4c554e
  425c7f:	cmp    ch,BYTE PTR [rbx]
  425c81:	rex.XB push r12
  425c83:	pop    rcx
  425c84:	push   rax
  425c85:	rex.RB sub eax,0x39303558
  425c8b:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9704
  425c91:	rex.W
  425c92:	xor    DWORD PTR [r10],edi
  425c95:	sub    ecx,DWORD PTR [rbp+0x44]
  425c98:	xor    eax,0x53522b3a
  425c9d:	cmp    bpl,BYTE PTR [r11]
  425ca0:	rex.R
  425ca1:	rex.W
  425ca2:	rex.RB sub eax,0x3a415352
  425ca8:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425cac:	sub    eax,0x3a535344
  425cb1:	sub    eax,DWORD PTR [rcx+0x4e]
  425cb4:	rex.WRXB
  425cb5:	rex.WRX sub rax,0x2b3a4844
  425cbb:	rex.RB
  425cbc:	rex.XB
  425cbd:	rex.R
  425cbe:	rex.W
  425cbf:	rex.RB sub eax,0x3a415352
  425cc5:	sub    eax,DWORD PTR [rbp+0x43]
  425cc8:	rex.R
  425cc9:	rex.W
  425cca:	rex.RB sub eax,0x53444345
  425cd0:	cmp    bpl,BYTE PTR [r11]
  425cd3:	rex.B
  425cd4:	rex.WRX
  425cd5:	rex.WRXB
  425cd6:	rex.WRX sub rax,0x48444345
  425cdc:	cmp    ah,BYTE PTR [rip+0x4f4e0073]        # 0x4f905d55
  425ce2:	rex.WRX
  425ce3:	cmp    r13b,BYTE PTR [r11]
  425ce6:	rex.B
  425ce7:	rex.RB push r11
  425ce9:	sub    eax,0x2d383231
  425cee:	rex.XB
  425cef:	rex.XB
  425cf0:	rex.WRB sub rax,0x412b3a38
  425cf6:	rex.RB push r11
  425cf8:	sub    eax,0x2d363532
  425cfd:	rex.XB
  425cfe:	rex.XB
  425cff:	rex.WRB sub rax,0x412b3a38
  425d05:	rex.RB
  425d06:	rex.B
  425d07:	cmp    r13b,BYTE PTR [rbx]
  425d0a:	rex.XB
  425d0b:	rex.WRXB
  425d0c:	rex.WRB push r8
  425d0e:	sub    eax,0x4c4c554e
  425d13:	cmp    ch,BYTE PTR [rbx]
  425d15:	rex.XB push r12
  425d17:	pop    rcx
  425d18:	push   rax
  425d19:	rex.RB sub eax,0x39303558
  425d1f:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9798
  425d25:	rex.W
  425d26:	xor    DWORD PTR [r10],edi
  425d29:	sub    ecx,DWORD PTR [rbp+0x44]
  425d2c:	xor    eax,0x53522b3a
  425d31:	cmp    bpl,BYTE PTR [r11]
  425d34:	rex.R
  425d35:	rex.W
  425d36:	rex.RB sub eax,0x3a415352
  425d3c:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425d40:	sub    eax,0x3a535344
  425d45:	sub    eax,DWORD PTR [rcx+0x4e]
  425d48:	rex.WRXB
  425d49:	rex.WRX sub rax,0x2b3a4844
  425d4f:	rex.RB
  425d50:	rex.XB
  425d51:	rex.R
  425d52:	rex.W
  425d53:	rex.RB sub eax,0x3a415352
  425d59:	sub    eax,DWORD PTR [rbp+0x43]
  425d5c:	rex.R
  425d5d:	rex.W
  425d5e:	rex.RB sub eax,0x53444345
  425d64:	cmp    bpl,BYTE PTR [r11]
  425d67:	rex.B
  425d68:	rex.WRX
  425d69:	rex.WRXB
  425d6a:	rex.WRX sub rax,0x48444345
  425d70:	cmp    ah,BYTE PTR [rip+0x73]        # 0x425de9
  425d76:	add    BYTE PTR [rax],al
  425d78:	rex.WRX
  425d79:	rex.WRXB
  425d7a:	rex.WRX
  425d7b:	cmp    r13b,BYTE PTR [r11]
  425d7e:	rex.XB
  425d7f:	rex.B
  425d80:	rex.WRB
  425d81:	rex.RB
  425d82:	rex.WR
  425d83:	rex.WR
  425d84:	rex.WB
  425d85:	rex.B sub eax,0x2d383231
  425d8b:	rex.XB
  425d8c:	rex.X
  425d8d:	rex.XB cmp bpl,BYTE PTR [r11]
  425d90:	rex.XB
  425d91:	rex.WRXB
  425d92:	rex.WRB push r8
  425d94:	sub    eax,0x4c4c554e
  425d99:	cmp    ch,BYTE PTR [rbx]
  425d9b:	rex.XB push r12
  425d9d:	pop    rcx
  425d9e:	push   rax
  425d9f:	rex.RB sub eax,0x39303558
  425da5:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d981e
  425dab:	rex.W
  425dac:	xor    DWORD PTR [r10],edi
  425daf:	sub    ecx,DWORD PTR [rbp+0x44]
  425db2:	xor    eax,0x53522b3a
  425db7:	cmp    bpl,BYTE PTR [r11]
  425dba:	rex.R
  425dbb:	rex.W
  425dbc:	rex.RB sub eax,0x3a415352
  425dc2:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425dc6:	sub    eax,0x3a535344
  425dcb:	sub    eax,DWORD PTR [rcx+0x4e]
  425dce:	rex.WRXB
  425dcf:	rex.WRX sub rax,0x2b3a4844
  425dd5:	rex.RB
  425dd6:	rex.XB
  425dd7:	rex.R
  425dd8:	rex.W
  425dd9:	rex.RB sub eax,0x3a415352
  425ddf:	sub    eax,DWORD PTR [rbp+0x43]
  425de2:	rex.R
  425de3:	rex.W
  425de4:	rex.RB sub eax,0x53444345
  425dea:	cmp    bpl,BYTE PTR [r11]
  425ded:	rex.B
  425dee:	rex.WRX
  425def:	rex.WRXB
  425df0:	rex.WRX sub rax,0x48444345
  425df6:	cmp    ah,BYTE PTR [rip+0x73]        # 0x425e6f
  425dfc:	add    BYTE PTR [rax],al
  425dfe:	add    BYTE PTR [rax],al
  425e00:	rex.WRX
  425e01:	rex.WRXB
  425e02:	rex.WRX
  425e03:	cmp    r13b,BYTE PTR [r11]
  425e06:	rex.XB
  425e07:	rex.B
  425e08:	rex.WRB
  425e09:	rex.RB
  425e0a:	rex.WR
  425e0b:	rex.WR
  425e0c:	rex.WB
  425e0d:	rex.B sub eax,0x2d383231
  425e13:	rex.RXB
  425e14:	rex.XB
  425e15:	rex.WRB cmp r13b,BYTE PTR [r11]
  425e18:	rex.B
  425e19:	rex.RB
  425e1a:	rex.B
  425e1b:	cmp    r13b,BYTE PTR [rbx]
  425e1e:	rex.XB
  425e1f:	rex.WRXB
  425e20:	rex.WRB push r8
  425e22:	sub    eax,0x4c4c554e
  425e27:	cmp    ch,BYTE PTR [rbx]
  425e29:	rex.XB push r12
  425e2b:	pop    rcx
  425e2c:	push   rax
  425e2d:	rex.RB sub eax,0x39303558
  425e33:	cmp    ah,BYTE PTR [rip+0x522b3a73]        # 0x526d98ac
  425e39:	push   rbx
  425e3a:	cmp    bpl,BYTE PTR [r11]
  425e3d:	rex.R
  425e3e:	rex.W
  425e3f:	rex.RB sub eax,0x3a415352
  425e45:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425e49:	sub    eax,0x3a535344
  425e4e:	sub    eax,DWORD PTR [rcx+0x4e]
  425e51:	rex.WRXB
  425e52:	rex.WRX sub rax,0x2b3a4844
  425e58:	rex.RB
  425e59:	rex.XB
  425e5a:	rex.R
  425e5b:	rex.W
  425e5c:	rex.RB sub eax,0x3a415352
  425e62:	sub    eax,DWORD PTR [rbp+0x43]
  425e65:	rex.R
  425e66:	rex.W
  425e67:	rex.RB sub eax,0x53444345
  425e6d:	cmp    bpl,BYTE PTR [r11]
  425e70:	rex.B
  425e71:	rex.WRX
  425e72:	rex.WRXB
  425e73:	rex.WRX sub rax,0x48444345
  425e79:	cmp    ah,BYTE PTR [rip+0x73]        # 0x425ef2
  425e7f:	add    BYTE PTR [rsi+0x4f],cl
  425e82:	rex.WRX
  425e83:	cmp    r13b,BYTE PTR [r11]
  425e86:	rex.B
  425e87:	rex.RB push r11
  425e89:	sub    eax,0x2d383231
  425e8e:	rex.RXB
  425e8f:	rex.XB
  425e90:	rex.WRB cmp r13b,BYTE PTR [r11]
  425e93:	rex.XB
  425e94:	rex.B
  425e95:	rex.WRB
  425e96:	rex.RB
  425e97:	rex.WR
  425e98:	rex.WR
  425e99:	rex.WB
  425e9a:	rex.B sub eax,0x2d383231
  425ea0:	rex.RXB
  425ea1:	rex.XB
  425ea2:	rex.WRB cmp r13b,BYTE PTR [r11]
  425ea5:	rex.B
  425ea6:	rex.RB push r11
  425ea8:	sub    eax,0x2d383231
  425ead:	rex.XB
  425eae:	rex.X
  425eaf:	rex.XB cmp bpl,BYTE PTR [r11]
  425eb2:	rex.XB
  425eb3:	rex.B
  425eb4:	rex.WRB
  425eb5:	rex.RB
  425eb6:	rex.WR
  425eb7:	rex.WR
  425eb8:	rex.WB
  425eb9:	rex.B sub eax,0x2d383231
  425ebf:	rex.XB
  425ec0:	rex.X
  425ec1:	rex.XB cmp bpl,BYTE PTR [r11]
  425ec4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425ec8:	sub    eax,0x3a434243
  425ecd:	sub    eax,DWORD PTR [rcx+0x52]
  425ed0:	rex.XB
  425ed1:	rex.RX
  425ed2:	rex.WRXB push r13
  425ed4:	push   rdx
  425ed5:	sub    eax,0x3a383231
  425eda:	sub    eax,DWORD PTR [rbx+0x4f]
  425edd:	rex.WRB push r8
  425edf:	sub    eax,0x4c4c554e
  425ee4:	cmp    ch,BYTE PTR [rbx]
  425ee6:	rex.XB push r12
  425ee8:	pop    rcx
  425ee9:	push   rax
  425eea:	rex.RB sub eax,0x4e45504f
  425ef0:	push   rax
  425ef1:	rex.RXB push r8
  425ef3:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d996c
  425ef9:	rex.W
  425efa:	xor    DWORD PTR [r10],edi
  425efd:	sub    ecx,DWORD PTR [rbp+0x44]
  425f00:	xor    eax,0x53522b3a
  425f05:	cmp    bpl,BYTE PTR [r11]
  425f08:	rex.R
  425f09:	rex.W
  425f0a:	rex.RB sub eax,0x3a415352
  425f10:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425f14:	sub    eax,0x3a535344
  425f19:	sub    eax,DWORD PTR [rcx+0x4e]
  425f1c:	rex.WRXB
  425f1d:	rex.WRX sub rax,0x2b3a4844
  425f23:	rex.RB
  425f24:	rex.XB
  425f25:	rex.R
  425f26:	rex.W
  425f27:	rex.RB sub eax,0x3a415352
  425f2d:	sub    eax,DWORD PTR [rbp+0x43]
  425f30:	rex.R
  425f31:	rex.W
  425f32:	rex.RB sub eax,0x53444345
  425f38:	cmp    bpl,BYTE PTR [r11]
  425f3b:	rex.B
  425f3c:	rex.WRX
  425f3d:	rex.WRXB
  425f3e:	rex.WRX sub rax,0x48444345
  425f44:	cmp    ah,BYTE PTR [rip+0x4f4e0073]        # 0x4f905fbd
  425f4a:	rex.WRX
  425f4b:	cmp    r13b,BYTE PTR [r11]
  425f4e:	rex.B
  425f4f:	rex.RB push r11
  425f51:	sub    eax,0x2d383231
  425f56:	rex.XB
  425f57:	rex.X
  425f58:	rex.XB cmp bpl,BYTE PTR [r11]
  425f5b:	rex.B
  425f5c:	rex.RB push r11
  425f5e:	sub    eax,0x2d383231
  425f63:	rex.RXB
  425f64:	rex.XB
  425f65:	rex.WRB cmp r13b,BYTE PTR [r11]
  425f68:	rex.XB
  425f69:	rex.B
  425f6a:	rex.WRB
  425f6b:	rex.RB
  425f6c:	rex.WR
  425f6d:	rex.WR
  425f6e:	rex.WB
  425f6f:	rex.B sub eax,0x2d383231
  425f75:	rex.RXB
  425f76:	rex.XB
  425f77:	rex.WRB cmp r13b,BYTE PTR [r11]
  425f7a:	rex.B
  425f7b:	rex.RB push r11
  425f7d:	sub    eax,0x2d383231
  425f82:	rex.XB
  425f83:	rex.X
  425f84:	rex.XB cmp bpl,BYTE PTR [r11]
  425f87:	rex.XB
  425f88:	rex.B
  425f89:	rex.WRB
  425f8a:	rex.RB
  425f8b:	rex.WR
  425f8c:	rex.WR
  425f8d:	rex.WB
  425f8e:	rex.B sub eax,0x2d383231
  425f94:	rex.XB
  425f95:	rex.X
  425f96:	rex.XB cmp bpl,BYTE PTR [r11]
  425f99:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  425f9d:	sub    eax,0x3a434243
  425fa2:	sub    eax,DWORD PTR [rcx+0x52]
  425fa5:	rex.XB
  425fa6:	rex.RX
  425fa7:	rex.WRXB push r13
  425fa9:	push   rdx
  425faa:	sub    eax,0x3a383231
  425faf:	sub    eax,DWORD PTR [rbx+0x4f]
  425fb2:	rex.WRB push r8
  425fb4:	sub    eax,0x4c4c554e
  425fb9:	cmp    ch,BYTE PTR [rbx]
  425fbb:	rex.XB push r12
  425fbd:	pop    rcx
  425fbe:	push   rax
  425fbf:	rex.RB sub eax,0x39303558
  425fc5:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9a3e
  425fcb:	rex.W
  425fcc:	xor    DWORD PTR [r10],edi
  425fcf:	sub    ecx,DWORD PTR [rbp+0x44]
  425fd2:	xor    eax,0x53522b3a
  425fd7:	cmp    bpl,BYTE PTR [r11]
  425fda:	rex.R
  425fdb:	rex.W
  425fdc:	rex.RB sub eax,0x3a415352
  425fe2:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  425fe6:	sub    eax,0x3a535344
  425feb:	sub    eax,DWORD PTR [rcx+0x4e]
  425fee:	rex.WRXB
  425fef:	rex.WRX sub rax,0x2b3a4844
  425ff5:	rex.RB
  425ff6:	rex.XB
  425ff7:	rex.R
  425ff8:	rex.W
  425ff9:	rex.RB sub eax,0x3a415352
  425fff:	sub    eax,DWORD PTR [rbp+0x43]
  426002:	rex.R
  426003:	rex.W
  426004:	rex.RB sub eax,0x53444345
  42600a:	cmp    bpl,BYTE PTR [r11]
  42600d:	rex.B
  42600e:	rex.WRX
  42600f:	rex.WRXB
  426010:	rex.WRX sub rax,0x48444345
  426016:	cmp    ah,BYTE PTR [rip+0x73]        # 0x42608f
  42601c:	add    BYTE PTR [rax],al
  42601e:	add    BYTE PTR [rax],al
  426020:	rex.WRX
  426021:	rex.WRXB
  426022:	rex.WRX
  426023:	cmp    r13b,BYTE PTR [r11]
  426026:	rex.B
  426027:	rex.RB push r11
  426029:	sub    eax,0x2d383231
  42602e:	rex.XB
  42602f:	rex.X
  426030:	rex.XB cmp bpl,BYTE PTR [r11]
  426033:	rex.B
  426034:	rex.RB push r11
  426036:	sub    eax,0x2d383231
  42603b:	rex.RXB
  42603c:	rex.XB
  42603d:	rex.WRB cmp r13b,BYTE PTR [r11]
  426040:	rex.XB
  426041:	rex.B
  426042:	rex.WRB
  426043:	rex.RB
  426044:	rex.WR
  426045:	rex.WR
  426046:	rex.WB
  426047:	rex.B sub eax,0x2d383231
  42604d:	rex.RXB
  42604e:	rex.XB
  42604f:	rex.WRB cmp r13b,BYTE PTR [r11]
  426052:	rex.B
  426053:	rex.RB push r11
  426055:	sub    eax,0x2d383231
  42605a:	rex.XB
  42605b:	rex.X
  42605c:	rex.XB cmp bpl,BYTE PTR [r11]
  42605f:	rex.XB
  426060:	rex.B
  426061:	rex.WRB
  426062:	rex.RB
  426063:	rex.WR
  426064:	rex.WR
  426065:	rex.WB
  426066:	rex.B sub eax,0x2d383231
  42606c:	rex.XB
  42606d:	rex.X
  42606e:	rex.XB cmp bpl,BYTE PTR [r11]
  426071:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426075:	sub    eax,0x3a434243
  42607a:	sub    eax,DWORD PTR [rcx+0x52]
  42607d:	rex.XB
  42607e:	rex.RX
  42607f:	rex.WRXB push r13
  426081:	push   rdx
  426082:	sub    eax,0x3a383231
  426087:	sub    eax,DWORD PTR [rbx+0x4f]
  42608a:	rex.WRB push r8
  42608c:	sub    eax,0x4c4c554e
  426091:	cmp    ch,BYTE PTR [rbx]
  426093:	rex.XB push r12
  426095:	pop    rcx
  426096:	push   rax
  426097:	rex.RB sub eax,0x39303558
  42609d:	cmp    ah,BYTE PTR [rip+0x4d2b3a73]        # 0x4d6d9b16
  4260a3:	rex.R xor eax,0x53522b3a
  4260a9:	cmp    bpl,BYTE PTR [r11]
  4260ac:	rex.R
  4260ad:	rex.W
  4260ae:	rex.RB sub eax,0x3a415352
  4260b4:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  4260b8:	sub    eax,0x3a535344
  4260bd:	sub    eax,DWORD PTR [rcx+0x4e]
  4260c0:	rex.WRXB
  4260c1:	rex.WRX sub rax,0x2b3a4844
  4260c7:	rex.RB
  4260c8:	rex.XB
  4260c9:	rex.R
  4260ca:	rex.W
  4260cb:	rex.RB sub eax,0x3a415352
  4260d1:	sub    eax,DWORD PTR [rbp+0x43]
  4260d4:	rex.R
  4260d5:	rex.W
  4260d6:	rex.RB sub eax,0x53444345
  4260dc:	cmp    bpl,BYTE PTR [r11]
  4260df:	rex.B
  4260e0:	rex.WRX
  4260e1:	rex.WRXB
  4260e2:	rex.WRX sub rax,0x48444345
  4260e8:	cmp    ah,BYTE PTR [rip+0x73]        # 0x426161
  4260ee:	add    BYTE PTR [rax],al
  4260f0:	rex.WRX
  4260f1:	rex.WRXB
  4260f2:	rex.WRX
  4260f3:	cmp    r13b,BYTE PTR [r11]
  4260f6:	rex.B
  4260f7:	rex.RB push r11
  4260f9:	sub    eax,0x2d383231
  4260fe:	rex.RXB
  4260ff:	rex.XB
  426100:	rex.WRB cmp r13b,BYTE PTR [r11]
  426103:	rex.XB
  426104:	rex.B
  426105:	rex.WRB
  426106:	rex.RB
  426107:	rex.WR
  426108:	rex.WR
  426109:	rex.WB
  42610a:	rex.B sub eax,0x2d383231
  426110:	rex.RXB
  426111:	rex.XB
  426112:	rex.WRB cmp r13b,BYTE PTR [r11]
  426115:	rex.B
  426116:	rex.RB push r11
  426118:	sub    eax,0x2d383231
  42611d:	rex.XB
  42611e:	rex.X
  42611f:	rex.XB cmp bpl,BYTE PTR [r11]
  426122:	rex.XB
  426123:	rex.B
  426124:	rex.WRB
  426125:	rex.RB
  426126:	rex.WR
  426127:	rex.WR
  426128:	rex.WB
  426129:	rex.B sub eax,0x2d383231
  42612f:	rex.XB
  426130:	rex.X
  426131:	rex.XB cmp bpl,BYTE PTR [r11]
  426134:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426138:	sub    eax,0x3a434243
  42613d:	sub    eax,DWORD PTR [rcx+0x52]
  426140:	rex.XB
  426141:	rex.RX
  426142:	rex.WRXB push r13
  426144:	push   rdx
  426145:	sub    eax,0x3a383231
  42614a:	sub    eax,DWORD PTR [rbx+0x4f]
  42614d:	rex.WRB push r8
  42614f:	sub    eax,0x4c464544
  426154:	push   r12
  426156:	cmp    r13b,BYTE PTR [r11]
  426159:	rex.XB push r12
  42615b:	pop    rcx
  42615c:	push   rax
  42615d:	rex.RB sub eax,0x39303558
  426163:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9bdc
  426169:	rex.W
  42616a:	xor    DWORD PTR [r10],edi
  42616d:	sub    ecx,DWORD PTR [rbp+0x44]
  426170:	xor    eax,0x53522b3a
  426175:	cmp    bpl,BYTE PTR [r11]
  426178:	rex.R
  426179:	rex.W
  42617a:	rex.RB sub eax,0x3a415352
  426180:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426184:	sub    eax,0x3a535344
  426189:	sub    eax,DWORD PTR [rcx+0x4e]
  42618c:	rex.WRXB
  42618d:	rex.WRX sub rax,0x2b3a4844
  426193:	rex.RB
  426194:	rex.XB
  426195:	rex.R
  426196:	rex.W
  426197:	rex.RB sub eax,0x3a415352
  42619d:	sub    eax,DWORD PTR [rbp+0x43]
  4261a0:	rex.R
  4261a1:	rex.W
  4261a2:	rex.RB sub eax,0x53444345
  4261a8:	cmp    bpl,BYTE PTR [r11]
  4261ab:	rex.B
  4261ac:	rex.WRX
  4261ad:	rex.WRXB
  4261ae:	rex.WRX sub rax,0x48444345
  4261b4:	cmp    ah,BYTE PTR [rip+0x4f4e0073]        # 0x4f90622d
  4261ba:	rex.WRX
  4261bb:	cmp    r13b,BYTE PTR [r11]
  4261be:	rex.B
  4261bf:	rex.RB push r11
  4261c1:	sub    eax,0x2d383231
  4261c6:	rex.XB
  4261c7:	rex.X
  4261c8:	rex.XB cmp bpl,BYTE PTR [r11]
  4261cb:	rex.B
  4261cc:	rex.RB push r11
  4261ce:	sub    eax,0x2d383231
  4261d3:	rex.RXB
  4261d4:	rex.XB
  4261d5:	rex.WRB cmp r13b,BYTE PTR [r11]
  4261d8:	rex.XB
  4261d9:	rex.B
  4261da:	rex.WRB
  4261db:	rex.RB
  4261dc:	rex.WR
  4261dd:	rex.WR
  4261de:	rex.WB
  4261df:	rex.B sub eax,0x2d383231
  4261e5:	rex.RXB
  4261e6:	rex.XB
  4261e7:	rex.WRB cmp r13b,BYTE PTR [r11]
  4261ea:	rex.B
  4261eb:	rex.RB push r11
  4261ed:	sub    eax,0x2d383231
  4261f2:	rex.XB
  4261f3:	rex.X
  4261f4:	rex.XB cmp bpl,BYTE PTR [r11]
  4261f7:	rex.XB
  4261f8:	rex.B
  4261f9:	rex.WRB
  4261fa:	rex.RB
  4261fb:	rex.WR
  4261fc:	rex.WR
  4261fd:	rex.WB
  4261fe:	rex.B sub eax,0x2d383231
  426204:	rex.XB
  426205:	rex.X
  426206:	rex.XB cmp bpl,BYTE PTR [r11]
  426209:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  42620d:	sub    eax,0x3a434243
  426212:	sub    eax,DWORD PTR [rcx+0x52]
  426215:	rex.XB
  426216:	rex.RX
  426217:	rex.WRXB push r13
  426219:	push   rdx
  42621a:	sub    eax,0x3a383231
  42621f:	sub    eax,DWORD PTR [rbx+0x4f]
  426222:	rex.WRB push r8
  426224:	sub    eax,0x4c4c554e
  426229:	cmp    ch,BYTE PTR [rbx]
  42622b:	rex.XB push r12
  42622d:	pop    rcx
  42622e:	push   rax
  42622f:	rex.RB sub eax,0x39303558
  426235:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9cae
  42623b:	rex.W
  42623c:	xor    DWORD PTR [r10],edi
  42623f:	sub    edx,DWORD PTR [rdx+0x53]
  426242:	cmp    bpl,BYTE PTR [r11]
  426245:	rex.R
  426246:	rex.W
  426247:	rex.RB sub eax,0x3a415352
  42624d:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426251:	sub    eax,0x3a535344
  426256:	sub    eax,DWORD PTR [rcx+0x4e]
  426259:	rex.WRXB
  42625a:	rex.WRX sub rax,0x2b3a4844
  426260:	rex.RB
  426261:	rex.XB
  426262:	rex.R
  426263:	rex.W
  426264:	rex.RB sub eax,0x3a415352
  42626a:	sub    eax,DWORD PTR [rbp+0x43]
  42626d:	rex.R
  42626e:	rex.W
  42626f:	rex.RB sub eax,0x53444345
  426275:	cmp    bpl,BYTE PTR [r11]
  426278:	rex.B
  426279:	rex.WRX
  42627a:	rex.WRXB
  42627b:	rex.WRX sub rax,0x48444345
  426281:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4262fa
  426287:	add    BYTE PTR [rsi+0x4f],cl
  42628a:	rex.WRX
  42628b:	cmp    r13b,BYTE PTR [r11]
  42628e:	rex.B
  42628f:	rex.RB push r11
  426291:	sub    eax,0x2d383231
  426296:	rex.XB
  426297:	rex.X
  426298:	rex.XB cmp bpl,BYTE PTR [r11]
  42629b:	rex.B
  42629c:	rex.RB push r11
  42629e:	sub    eax,0x2d383231
  4262a3:	rex.RXB
  4262a4:	rex.XB
  4262a5:	rex.WRB cmp r13b,BYTE PTR [r11]
  4262a8:	rex.XB
  4262a9:	rex.B
  4262aa:	rex.WRB
  4262ab:	rex.RB
  4262ac:	rex.WR
  4262ad:	rex.WR
  4262ae:	rex.WB
  4262af:	rex.B sub eax,0x2d383231
  4262b5:	rex.RXB
  4262b6:	rex.XB
  4262b7:	rex.WRB cmp r13b,BYTE PTR [r11]
  4262ba:	rex.B
  4262bb:	rex.RB push r11
  4262bd:	sub    eax,0x2d383231
  4262c2:	rex.XB
  4262c3:	rex.X
  4262c4:	rex.XB cmp bpl,BYTE PTR [r11]
  4262c7:	rex.XB
  4262c8:	rex.B
  4262c9:	rex.WRB
  4262ca:	rex.RB
  4262cb:	rex.WR
  4262cc:	rex.WR
  4262cd:	rex.WB
  4262ce:	rex.B sub eax,0x2d383231
  4262d4:	rex.XB
  4262d5:	rex.X
  4262d6:	rex.XB cmp bpl,BYTE PTR [r11]
  4262d9:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4262dd:	sub    eax,0x3a434243
  4262e2:	sub    eax,DWORD PTR [rcx+0x52]
  4262e5:	rex.XB
  4262e6:	rex.RX
  4262e7:	rex.WRXB push r13
  4262e9:	push   rdx
  4262ea:	sub    eax,0x3a383231
  4262ef:	sub    eax,DWORD PTR [rbx+0x4f]
  4262f2:	rex.WRB push r8
  4262f4:	sub    eax,0x4c4c554e
  4262f9:	cmp    ch,BYTE PTR [rbx]
  4262fb:	rex.XB push r12
  4262fd:	pop    rcx
  4262fe:	push   rax
  4262ff:	rex.RB sub eax,0x39303558
  426305:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9d7e
  42630b:	rex.W
  42630c:	xor    sil,BYTE PTR [rip+0x522b3a36]        # 0x526d9d49
  426313:	push   rbx
  426314:	cmp    bpl,BYTE PTR [r11]
  426317:	rex.R
  426318:	rex.W
  426319:	rex.RB sub eax,0x3a415352
  42631f:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426323:	sub    eax,0x3a535344
  426328:	sub    eax,DWORD PTR [rcx+0x4e]
  42632b:	rex.WRXB
  42632c:	rex.WRX sub rax,0x2b3a4844
  426332:	rex.RB
  426333:	rex.XB
  426334:	rex.R
  426335:	rex.W
  426336:	rex.RB sub eax,0x3a415352
  42633c:	sub    eax,DWORD PTR [rbp+0x43]
  42633f:	rex.R
  426340:	rex.W
  426341:	rex.RB sub eax,0x53444345
  426347:	cmp    bpl,BYTE PTR [r11]
  42634a:	rex.B
  42634b:	rex.WRX
  42634c:	rex.WRXB
  42634d:	rex.WRX sub rax,0x48444345
  426353:	cmp    ah,BYTE PTR [rip+0x4e000073]        # 0x4e4263cc
  426359:	rex.WRXB
  42635a:	rex.WRX
  42635b:	cmp    r13b,BYTE PTR [r11]
  42635e:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426362:	sub    eax,0x3a434243
  426367:	sub    eax,DWORD PTR [rbx+0x4f]
  42636a:	rex.WRB push r8
  42636c:	sub    eax,0x4c4c554e
  426371:	cmp    ch,BYTE PTR [rbx]
  426373:	rex.XB push r12
  426375:	pop    rcx
  426376:	push   rax
  426377:	rex.RB sub eax,0x39303558
  42637d:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9df6
  426383:	rex.W
  426384:	xor    DWORD PTR [r10],edi
  426387:	sub    ecx,DWORD PTR [rbp+0x44]
  42638a:	xor    eax,0x53522b3a
  42638f:	cmp    bpl,BYTE PTR [r11]
  426392:	rex.R
  426393:	rex.W
  426394:	rex.RB sub eax,0x3a415352
  42639a:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  42639e:	sub    eax,0x3a535344
  4263a3:	sub    eax,DWORD PTR [rcx+0x4e]
  4263a6:	rex.WRXB
  4263a7:	rex.WRX sub rax,0x2b3a4844
  4263ad:	rex.RB
  4263ae:	rex.XB
  4263af:	rex.R
  4263b0:	rex.W
  4263b1:	rex.RB sub eax,0x3a415352
  4263b7:	sub    eax,DWORD PTR [rbp+0x43]
  4263ba:	rex.R
  4263bb:	rex.W
  4263bc:	rex.RB sub eax,0x53444345
  4263c2:	cmp    bpl,BYTE PTR [r11]
  4263c5:	rex.B
  4263c6:	rex.WRX
  4263c7:	rex.WRXB
  4263c8:	rex.WRX sub rax,0x48444345
  4263ce:	cmp    ah,BYTE PTR [rip+0x73]        # 0x426447
  4263d4:	add    BYTE PTR [rax],al
  4263d6:	add    BYTE PTR [rax],al
  4263d8:	rex.WRX
  4263d9:	rex.WRXB
  4263da:	rex.WRX
  4263db:	cmp    r13b,BYTE PTR [r11]
  4263de:	push   r10
  4263e0:	rex.XB
  4263e1:	rex.RX
  4263e2:	rex.WRXB push r13
  4263e4:	push   rdx
  4263e5:	sub    eax,0x3a383231
  4263ea:	sub    eax,DWORD PTR [rbx+0x4f]
  4263ed:	rex.WRB push r8
  4263ef:	sub    eax,0x4c4c554e
  4263f4:	cmp    ch,BYTE PTR [rbx]
  4263f6:	rex.XB push r12
  4263f8:	pop    rcx
  4263f9:	push   rax
  4263fa:	rex.RB sub eax,0x39303558
  426400:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536d9e79
  426406:	rex.W
  426407:	xor    DWORD PTR [r10],edi
  42640a:	sub    ecx,DWORD PTR [rbp+0x44]
  42640d:	xor    eax,0x53522b3a
  426412:	cmp    bpl,BYTE PTR [r11]
  426415:	rex.R
  426416:	rex.W
  426417:	rex.RB sub eax,0x3a415352
  42641d:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426421:	sub    eax,0x3a535344
  426426:	sub    eax,DWORD PTR [rcx+0x4e]
  426429:	rex.WRXB
  42642a:	rex.WRX sub rax,0x2b3a4844
  426430:	rex.RB
  426431:	rex.XB
  426432:	rex.R
  426433:	rex.W
  426434:	rex.RB sub eax,0x3a415352
  42643a:	sub    eax,DWORD PTR [rbp+0x43]
  42643d:	rex.R
  42643e:	rex.W
  42643f:	rex.RB sub eax,0x53444345
  426445:	cmp    bpl,BYTE PTR [r11]
  426448:	rex.B
  426449:	rex.WRX
  42644a:	rex.WRXB
  42644b:	rex.WRX sub rax,0x48444345
  426451:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4264ca
  426457:	add    BYTE PTR [rsi+0x4f],cl
  42645a:	rex.WRX
  42645b:	cmp    r13b,BYTE PTR [r11]
  42645e:	rex.B
  42645f:	rex.RB push r11
  426461:	sub    eax,0x2d383231
  426466:	rex.RXB
  426467:	rex.XB
  426468:	rex.WRB cmp r13b,BYTE PTR [r11]
  42646b:	rex.XB
  42646c:	rex.B
  42646d:	rex.WRB
  42646e:	rex.RB
  42646f:	rex.WR
  426470:	rex.WR
  426471:	rex.WB
  426472:	rex.B sub eax,0x2d383231
  426478:	rex.RXB
  426479:	rex.XB
  42647a:	rex.WRB cmp r13b,BYTE PTR [r11]
  42647d:	rex.B
  42647e:	rex.RB push r11
  426480:	sub    eax,0x2d383231
  426485:	rex.XB
  426486:	rex.X
  426487:	rex.XB cmp bpl,BYTE PTR [r11]
  42648a:	rex.XB
  42648b:	rex.B
  42648c:	rex.WRB
  42648d:	rex.RB
  42648e:	rex.WR
  42648f:	rex.WR
  426490:	rex.WB
  426491:	rex.B sub eax,0x2d383231
  426497:	rex.XB
  426498:	rex.X
  426499:	rex.XB cmp bpl,BYTE PTR [r11]
  42649c:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4264a0:	sub    eax,0x3a434243
  4264a5:	sub    eax,DWORD PTR [rcx+0x52]
  4264a8:	rex.XB
  4264a9:	rex.RX
  4264aa:	rex.WRXB push r13
  4264ac:	push   rdx
  4264ad:	sub    eax,0x3a383231
  4264b2:	sub    eax,DWORD PTR [rbx+0x4f]
  4264b5:	rex.WRB push r8
  4264b7:	sub    eax,0x4c4c554e
  4264bc:	cmp    ch,BYTE PTR [rbx]
  4264be:	rex.XB push r12
  4264c0:	pop    rcx
  4264c1:	push   rax
  4264c2:	rex.RB sub eax,0x39303558
  4264c8:	cmp    ch,BYTE PTR [rbx]
  4264ca:	push   rsi
  4264cb:	rex.RB push r10
  4264cd:	push   rbx
  4264ce:	sub    eax,0x31534c54
  4264d3:	xor    BYTE PTR cs:[rdx],bh
  4264d6:	and    eax,0x4c535325
  4264db:	xor    ebx,DWORD PTR [rdi+0x52]
  4264de:	rex.RB
  4264df:	rex.XB
  4264e0:	rex.WRXB push r10
  4264e2:	rex.R pop rdi
  4264e4:	push   rsi
  4264e5:	rex.RB push r10
  4264e7:	push   rbx
  4264e8:	rex.WB
  4264e9:	rex.WRXB
  4264ea:	rex.WRX cmp r13b,BYTE PTR [rbx]
  4264ed:	push   rbx
  4264ee:	rex.W
  4264ef:	xor    DWORD PTR [r10],edi
  4264f2:	sub    ecx,DWORD PTR [rbp+0x44]
  4264f5:	xor    eax,0x53522b3a
  4264fa:	cmp    bpl,BYTE PTR [r11]
  4264fd:	rex.R
  4264fe:	rex.W
  4264ff:	rex.RB sub eax,0x3a415352
  426505:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426509:	sub    eax,0x3a535344
  42650e:	sub    eax,DWORD PTR [rcx+0x4e]
  426511:	rex.WRXB
  426512:	rex.WRX sub rax,0x2b3a4844
  426518:	rex.RB
  426519:	rex.XB
  42651a:	rex.R
  42651b:	rex.W
  42651c:	rex.RB sub eax,0x3a415352
  426522:	sub    eax,DWORD PTR [rbp+0x43]
  426525:	rex.R
  426526:	rex.W
  426527:	rex.RB sub eax,0x53444345
  42652d:	cmp    bpl,BYTE PTR [r11]
  426530:	rex.B
  426531:	rex.WRX
  426532:	rex.WRXB
  426533:	rex.WRX sub rax,0x48444345
  426539:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4265b2
  42653f:	add    BYTE PTR [rsi+0x4f],cl
  426542:	rex.WRX
  426543:	cmp    r13b,BYTE PTR [r11]
  426546:	rex.B
  426547:	rex.RB push r11
  426549:	sub    eax,0x2d383231
  42654e:	rex.RXB
  42654f:	rex.XB
  426550:	rex.WRB cmp r13b,BYTE PTR [r11]
  426553:	rex.XB
  426554:	rex.B
  426555:	rex.WRB
  426556:	rex.RB
  426557:	rex.WR
  426558:	rex.WR
  426559:	rex.WB
  42655a:	rex.B sub eax,0x2d383231
  426560:	rex.RXB
  426561:	rex.XB
  426562:	rex.WRB cmp r13b,BYTE PTR [r11]
  426565:	rex.B
  426566:	rex.RB push r11
  426568:	sub    eax,0x2d383231
  42656d:	rex.XB
  42656e:	rex.X
  42656f:	rex.XB cmp bpl,BYTE PTR [r11]
  426572:	rex.XB
  426573:	rex.B
  426574:	rex.WRB
  426575:	rex.RB
  426576:	rex.WR
  426577:	rex.WR
  426578:	rex.WB
  426579:	rex.B sub eax,0x2d383231
  42657f:	rex.XB
  426580:	rex.X
  426581:	rex.XB cmp bpl,BYTE PTR [r11]
  426584:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426588:	sub    eax,0x3a434243
  42658d:	sub    eax,DWORD PTR [rcx+0x52]
  426590:	rex.XB
  426591:	rex.RX
  426592:	rex.WRXB push r13
  426594:	push   rdx
  426595:	sub    eax,0x3a383231
  42659a:	sub    eax,DWORD PTR [rbx+0x4f]
  42659d:	rex.WRB push r8
  42659f:	sub    eax,0x4c4c554e
  4265a4:	cmp    ch,BYTE PTR [rbx]
  4265a6:	rex.XB push r12
  4265a8:	pop    rcx
  4265a9:	push   rax
  4265aa:	rex.RB sub eax,0x39303558
  4265b0:	cmp    ch,BYTE PTR [rbx]
  4265b2:	push   rsi
  4265b3:	rex.RB push r10
  4265b5:	push   rbx
  4265b6:	sub    eax,0x31534c54
  4265bb:	xor    BYTE PTR cs:[rdx],bh
  4265be:	and    eax,0x54414c25
  4265c3:	rex.RB push r11
  4265c5:	push   rsp
  4265c6:	pop    rdi
  4265c7:	push   rdx
  4265c8:	rex.RB
  4265c9:	rex.XB
  4265ca:	rex.WRXB push r10
  4265cc:	rex.R pop rdi
  4265ce:	push   rsi
  4265cf:	rex.RB push r10
  4265d1:	push   rbx
  4265d2:	rex.WB
  4265d3:	rex.WRXB
  4265d4:	rex.WRX cmp r13b,BYTE PTR [rbx]
  4265d7:	push   rbx
  4265d8:	rex.W
  4265d9:	xor    DWORD PTR [r10],edi
  4265dc:	sub    ecx,DWORD PTR [rbp+0x44]
  4265df:	xor    eax,0x53522b3a
  4265e4:	cmp    bpl,BYTE PTR [r11]
  4265e7:	rex.R
  4265e8:	rex.W
  4265e9:	rex.RB sub eax,0x3a415352
  4265ef:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  4265f3:	sub    eax,0x3a535344
  4265f8:	sub    eax,DWORD PTR [rcx+0x4e]
  4265fb:	rex.WRXB
  4265fc:	rex.WRX sub rax,0x2b3a4844
  426602:	rex.RB
  426603:	rex.XB
  426604:	rex.R
  426605:	rex.W
  426606:	rex.RB sub eax,0x3a415352
  42660c:	sub    eax,DWORD PTR [rbp+0x43]
  42660f:	rex.R
  426610:	rex.W
  426611:	rex.RB sub eax,0x53444345
  426617:	cmp    bpl,BYTE PTR [r11]
  42661a:	rex.B
  42661b:	rex.WRX
  42661c:	rex.WRXB
  42661d:	rex.WRX sub rax,0x48444345
  426623:	cmp    ah,BYTE PTR [rip+0x4e000073]        # 0x4e42669c
  426629:	rex.WRXB
  42662a:	rex.WRX
  42662b:	cmp    r13b,BYTE PTR [r11]
  42662e:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426632:	sub    eax,0x3a434243
  426637:	sub    eax,DWORD PTR [rcx+0x45]
  42663a:	push   rbx
  42663b:	sub    eax,0x2d383231
  426640:	rex.XB
  426641:	rex.X
  426642:	rex.XB cmp bpl,BYTE PTR [r11]
  426645:	rex.XB
  426646:	rex.B
  426647:	rex.WRB
  426648:	rex.RB
  426649:	rex.WR
  42664a:	rex.WR
  42664b:	rex.WB
  42664c:	rex.B sub eax,0x2d383231
  426652:	rex.XB
  426653:	rex.X
  426654:	rex.XB cmp bpl,BYTE PTR [r11]
  426657:	rex.XB
  426658:	rex.WRXB
  426659:	rex.WRB push r8
  42665b:	sub    eax,0x4c4c554e
  426660:	cmp    ch,BYTE PTR [rbx]
  426662:	rex.XB push r12
  426664:	pop    rcx
  426665:	push   rax
  426666:	rex.RB sub eax,0x39303558
  42666c:	cmp    ch,BYTE PTR [rbx]
  42666e:	push   rsi
  42666f:	rex.RB push r10
  426671:	push   rbx
  426672:	sub    eax,0x2d534c54
  426677:	rex.B
  426678:	rex.WR
  426679:	rex.WR cmp r13b,BYTE PTR [rip+0x53524556]        # 0x5394abd6
  426680:	sub    eax,0x334c5353
  426685:	xor    BYTE PTR cs:[rdx],bh
  426688:	sub    edx,DWORD PTR [rbx+0x48]
  42668b:	xor    DWORD PTR [r10],edi
  42668e:	sub    ecx,DWORD PTR [rbp+0x44]
  426691:	xor    eax,0x53522b3a
  426696:	cmp    bpl,BYTE PTR [r11]
  426699:	rex.R
  42669a:	rex.W
  42669b:	rex.RB sub eax,0x3a415352
  4266a1:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  4266a5:	sub    eax,0x3a535344
  4266aa:	sub    eax,DWORD PTR [rcx+0x4e]
  4266ad:	rex.WRXB
  4266ae:	rex.WRX sub rax,0x2b3a4844
  4266b4:	rex.RB
  4266b5:	rex.XB
  4266b6:	rex.R
  4266b7:	rex.W
  4266b8:	rex.RB sub eax,0x3a415352
  4266be:	sub    eax,DWORD PTR [rbp+0x43]
  4266c1:	rex.R
  4266c2:	rex.W
  4266c3:	rex.RB sub eax,0x53444345
  4266c9:	cmp    bpl,BYTE PTR [r11]
  4266cc:	rex.B
  4266cd:	rex.WRX
  4266ce:	rex.WRXB
  4266cf:	rex.WRX sub rax,0x48444345
  4266d5:	cmp    ah,BYTE PTR [rip+0x73]        # 0x42674e
  4266db:	add    BYTE PTR [rax],al
  4266dd:	add    BYTE PTR [rax],al
  4266df:	add    BYTE PTR [rsi+0x4f],cl
  4266e2:	rex.WRX
  4266e3:	cmp    r13b,BYTE PTR [r11]
  4266e6:	rex.B
  4266e7:	rex.RB push r11
  4266e9:	sub    eax,0x2d383231
  4266ee:	rex.RXB
  4266ef:	rex.XB
  4266f0:	rex.WRB cmp r13b,BYTE PTR [r11]
  4266f3:	rex.XB
  4266f4:	rex.B
  4266f5:	rex.WRB
  4266f6:	rex.RB
  4266f7:	rex.WR
  4266f8:	rex.WR
  4266f9:	rex.WB
  4266fa:	rex.B sub eax,0x2d383231
  426700:	rex.RXB
  426701:	rex.XB
  426702:	rex.WRB cmp r13b,BYTE PTR [r11]
  426705:	rex.B
  426706:	rex.RB push r11
  426708:	sub    eax,0x2d383231
  42670d:	rex.XB
  42670e:	rex.X
  42670f:	rex.XB cmp bpl,BYTE PTR [r11]
  426712:	rex.XB
  426713:	rex.B
  426714:	rex.WRB
  426715:	rex.RB
  426716:	rex.WR
  426717:	rex.WR
  426718:	rex.WB
  426719:	rex.B sub eax,0x2d383231
  42671f:	rex.XB
  426720:	rex.X
  426721:	rex.XB cmp bpl,BYTE PTR [r11]
  426724:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426728:	sub    eax,0x3a434243
  42672d:	sub    eax,DWORD PTR [rcx+0x52]
  426730:	rex.XB
  426731:	rex.RX
  426732:	rex.WRXB push r13
  426734:	push   rdx
  426735:	sub    eax,0x3a383231
  42673a:	sub    eax,DWORD PTR [rbx+0x4f]
  42673d:	rex.WRB push r8
  42673f:	sub    eax,0x4c4c554e
  426744:	cmp    ch,BYTE PTR [rbx]
  426746:	rex.XB push r12
  426748:	pop    rcx
  426749:	push   rax
  42674a:	rex.RB sub eax,0x39303558
  426750:	cmp    ch,BYTE PTR [rbx]
  426752:	push   rsi
  426753:	rex.RB push r10
  426755:	push   rbx
  426756:	sub    eax,0x31534c54
  42675b:	xor    bh,BYTE PTR cs:[rdx]
  42675e:	sub    edx,DWORD PTR [rbx+0x48]
  426761:	xor    DWORD PTR [r10],edi
  426764:	sub    ecx,DWORD PTR [rbp+0x44]
  426767:	xor    eax,0x53522b3a
  42676c:	cmp    bpl,BYTE PTR [r11]
  42676f:	rex.R
  426770:	rex.W
  426771:	rex.RB sub eax,0x3a415352
  426777:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  42677b:	sub    eax,0x3a535344
  426780:	sub    eax,DWORD PTR [rcx+0x4e]
  426783:	rex.WRXB
  426784:	rex.WRX sub rax,0x2b3a4844
  42678a:	rex.RB
  42678b:	rex.XB
  42678c:	rex.R
  42678d:	rex.W
  42678e:	rex.RB sub eax,0x3a415352
  426794:	sub    eax,DWORD PTR [rbp+0x43]
  426797:	rex.R
  426798:	rex.W
  426799:	rex.RB sub eax,0x53444345
  42679f:	cmp    bpl,BYTE PTR [r11]
  4267a2:	rex.B
  4267a3:	rex.WRX
  4267a4:	rex.WRXB
  4267a5:	rex.WRX sub rax,0x48444345
  4267ab:	cmp    ah,BYTE PTR [rip+0x4e000073]        # 0x4e426824
  4267b1:	rex.WRXB
  4267b2:	rex.WRX
  4267b3:	cmp    r13b,BYTE PTR [r11]
  4267b6:	rex.B
  4267b7:	rex.RB push r11
  4267b9:	sub    eax,0x2d383231
  4267be:	rex.RXB
  4267bf:	rex.XB
  4267c0:	rex.WRB cmp r13b,BYTE PTR [r11]
  4267c3:	rex.XB
  4267c4:	rex.B
  4267c5:	rex.WRB
  4267c6:	rex.RB
  4267c7:	rex.WR
  4267c8:	rex.WR
  4267c9:	rex.WB
  4267ca:	rex.B sub eax,0x2d383231
  4267d0:	rex.RXB
  4267d1:	rex.XB
  4267d2:	rex.WRB cmp r13b,BYTE PTR [r11]
  4267d5:	rex.B
  4267d6:	rex.RB push r11
  4267d8:	sub    eax,0x2d383231
  4267dd:	rex.XB
  4267de:	rex.X
  4267df:	rex.XB cmp bpl,BYTE PTR [r11]
  4267e2:	rex.XB
  4267e3:	rex.B
  4267e4:	rex.WRB
  4267e5:	rex.RB
  4267e6:	rex.WR
  4267e7:	rex.WR
  4267e8:	rex.WB
  4267e9:	rex.B sub eax,0x2d383231
  4267ef:	rex.XB
  4267f0:	rex.X
  4267f1:	rex.XB cmp bpl,BYTE PTR [r11]
  4267f4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4267f8:	sub    eax,0x3a434243
  4267fd:	sub    eax,DWORD PTR [rcx+0x52]
  426800:	rex.XB
  426801:	rex.RX
  426802:	rex.WRXB push r13
  426804:	push   rdx
  426805:	sub    eax,0x3a383231
  42680a:	sub    eax,DWORD PTR [rbx+0x4f]
  42680d:	rex.WRB push r8
  42680f:	sub    eax,0x4c4c554e
  426814:	cmp    ch,BYTE PTR [rbx]
  426816:	rex.XB push r12
  426818:	pop    rcx
  426819:	push   rax
  42681a:	rex.RB sub eax,0x39303558
  426820:	cmp    ch,BYTE PTR [rbx]
  426822:	push   rsi
  426823:	rex.RB push r10
  426825:	push   rbx
  426826:	sub    eax,0x31534c54
  42682b:	xor    DWORD PTR cs:[rdx],edi
  42682e:	sub    edx,DWORD PTR [rbx+0x48]
  426831:	xor    DWORD PTR [r10],edi
  426834:	sub    ecx,DWORD PTR [rbp+0x44]
  426837:	xor    eax,0x53522b3a
  42683c:	cmp    bpl,BYTE PTR [r11]
  42683f:	rex.R
  426840:	rex.W
  426841:	rex.RB sub eax,0x3a415352
  426847:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  42684b:	sub    eax,0x3a535344
  426850:	sub    eax,DWORD PTR [rcx+0x4e]
  426853:	rex.WRXB
  426854:	rex.WRX sub rax,0x2b3a4844
  42685a:	rex.RB
  42685b:	rex.XB
  42685c:	rex.R
  42685d:	rex.W
  42685e:	rex.RB sub eax,0x3a415352
  426864:	sub    eax,DWORD PTR [rbp+0x43]
  426867:	rex.R
  426868:	rex.W
  426869:	rex.RB sub eax,0x53444345
  42686f:	cmp    bpl,BYTE PTR [r11]
  426872:	rex.B
  426873:	rex.WRX
  426874:	rex.WRXB
  426875:	rex.WRX sub rax,0x48444345
  42687b:	cmp    ah,BYTE PTR [rip+0x4e000073]        # 0x4e4268f4
  426881:	rex.WRXB
  426882:	rex.WRX
  426883:	cmp    r13b,BYTE PTR [r11]
  426886:	rex.B
  426887:	rex.RB push r11
  426889:	sub    eax,0x2d383231
  42688e:	rex.RXB
  42688f:	rex.XB
  426890:	rex.WRB cmp r13b,BYTE PTR [r11]
  426893:	rex.XB
  426894:	rex.B
  426895:	rex.WRB
  426896:	rex.RB
  426897:	rex.WR
  426898:	rex.WR
  426899:	rex.WB
  42689a:	rex.B sub eax,0x2d383231
  4268a0:	rex.RXB
  4268a1:	rex.XB
  4268a2:	rex.WRB cmp r13b,BYTE PTR [r11]
  4268a5:	rex.B
  4268a6:	rex.RB push r11
  4268a8:	sub    eax,0x2d383231
  4268ad:	rex.XB
  4268ae:	rex.X
  4268af:	rex.XB cmp bpl,BYTE PTR [r11]
  4268b2:	rex.XB
  4268b3:	rex.B
  4268b4:	rex.WRB
  4268b5:	rex.RB
  4268b6:	rex.WR
  4268b7:	rex.WR
  4268b8:	rex.WB
  4268b9:	rex.B sub eax,0x2d383231
  4268bf:	rex.XB
  4268c0:	rex.X
  4268c1:	rex.XB cmp bpl,BYTE PTR [r11]
  4268c4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4268c8:	sub    eax,0x3a434243
  4268cd:	sub    eax,DWORD PTR [rcx+0x52]
  4268d0:	rex.XB
  4268d1:	rex.RX
  4268d2:	rex.WRXB push r13
  4268d4:	push   rdx
  4268d5:	sub    eax,0x3a383231
  4268da:	sub    eax,DWORD PTR [rbx+0x4f]
  4268dd:	rex.WRB push r8
  4268df:	sub    eax,0x4c4c554e
  4268e4:	cmp    ch,BYTE PTR [rbx]
  4268e6:	rex.XB push r12
  4268e8:	pop    rcx
  4268e9:	push   rax
  4268ea:	rex.RB sub eax,0x39303558
  4268f0:	cmp    ch,BYTE PTR [rbx]
  4268f2:	push   rsi
  4268f3:	rex.RB push r10
  4268f5:	push   rbx
  4268f6:	sub    eax,0x31534c54
  4268fb:	xor    DWORD PTR cs:[rdx],edi
  4268fe:	sub    edx,DWORD PTR [rsi+0x45]
  426901:	push   rdx
  426902:	push   rbx
  426903:	sub    eax,0x31534c54
  426908:	xor    BYTE PTR cs:[rdx],bh
  42690b:	sub    edx,DWORD PTR [rsi+0x45]
  42690e:	push   rdx
  42690f:	push   rbx
  426910:	sub    eax,0x334c5353
  426915:	xor    BYTE PTR cs:[rdx],bh
  426918:	sub    edx,DWORD PTR [rbx+0x48]
  42691b:	xor    DWORD PTR [r10],edi
  42691e:	sub    ecx,DWORD PTR [rbp+0x44]
  426921:	xor    eax,0x53522b3a
  426926:	cmp    bpl,BYTE PTR [r11]
  426929:	rex.R
  42692a:	rex.W
  42692b:	rex.RB sub eax,0x3a415352
  426931:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426935:	sub    eax,0x3a535344
  42693a:	sub    eax,DWORD PTR [rcx+0x4e]
  42693d:	rex.WRXB
  42693e:	rex.WRX sub rax,0x2b3a4844
  426944:	rex.RB
  426945:	rex.XB
  426946:	rex.R
  426947:	rex.W
  426948:	rex.RB sub eax,0x3a415352
  42694e:	sub    eax,DWORD PTR [rbp+0x43]
  426951:	rex.R
  426952:	rex.W
  426953:	rex.RB sub eax,0x53444345
  426959:	cmp    bpl,BYTE PTR [r11]
  42695c:	rex.B
  42695d:	rex.WRX
  42695e:	rex.WRXB
  42695f:	rex.WRX sub rax,0x48444345
  426965:	cmp    ah,BYTE PTR [rip+0x73]        # 0x4269de
  42696b:	add    BYTE PTR [rax],al
  42696d:	add    BYTE PTR [rax],al
  42696f:	add    BYTE PTR [rsi+0x4f],cl
  426972:	rex.WRX
  426973:	cmp    r13b,BYTE PTR [r11]
  426976:	rex.B
  426977:	rex.RB push r11
  426979:	sub    eax,0x2d383231
  42697e:	rex.RXB
  42697f:	rex.XB
  426980:	rex.WRB cmp r13b,BYTE PTR [r11]
  426983:	rex.XB
  426984:	rex.B
  426985:	rex.WRB
  426986:	rex.RB
  426987:	rex.WR
  426988:	rex.WR
  426989:	rex.WB
  42698a:	rex.B sub eax,0x2d383231
  426990:	rex.RXB
  426991:	rex.XB
  426992:	rex.WRB cmp r13b,BYTE PTR [r11]
  426995:	rex.B
  426996:	rex.RB push r11
  426998:	sub    eax,0x2d383231
  42699d:	rex.XB
  42699e:	rex.X
  42699f:	rex.XB cmp bpl,BYTE PTR [r11]
  4269a2:	rex.XB
  4269a3:	rex.B
  4269a4:	rex.WRB
  4269a5:	rex.RB
  4269a6:	rex.WR
  4269a7:	rex.WR
  4269a8:	rex.WB
  4269a9:	rex.B sub eax,0x2d383231
  4269af:	rex.XB
  4269b0:	rex.X
  4269b1:	rex.XB cmp bpl,BYTE PTR [r11]
  4269b4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  4269b8:	sub    eax,0x3a434243
  4269bd:	sub    eax,DWORD PTR [rcx+0x52]
  4269c0:	rex.XB
  4269c1:	rex.RX
  4269c2:	rex.WRXB push r13
  4269c4:	push   rdx
  4269c5:	sub    eax,0x3a383231
  4269ca:	sub    eax,DWORD PTR [rbx+0x4f]
  4269cd:	rex.WRB push r8
  4269cf:	sub    eax,0x4c4c554e
  4269d4:	cmp    ch,BYTE PTR [rbx]
  4269d6:	rex.XB push r12
  4269d8:	pop    rcx
  4269d9:	push   rax
  4269da:	rex.RB sub eax,0x39303558
  4269e0:	cmp    ch,BYTE PTR [rbx]
  4269e2:	push   rsi
  4269e3:	rex.RB push r10
  4269e5:	push   rbx
  4269e6:	sub    eax,0x31534c54
  4269eb:	xor    bh,BYTE PTR cs:[rdx]
  4269ee:	sub    edx,DWORD PTR [rsi+0x45]
  4269f1:	push   rdx
  4269f2:	push   rbx
  4269f3:	sub    eax,0x31534c54
  4269f8:	xor    DWORD PTR cs:[rdx],edi
  4269fb:	sub    edx,DWORD PTR [rsi+0x45]
  4269fe:	push   rdx
  4269ff:	push   rbx
  426a00:	sub    eax,0x31534c54
  426a05:	xor    BYTE PTR cs:[rdx],bh
  426a08:	sub    edx,DWORD PTR [rsi+0x45]
  426a0b:	push   rdx
  426a0c:	push   rbx
  426a0d:	sub    eax,0x334c5353
  426a12:	xor    BYTE PTR cs:[rdx],bh
  426a15:	sub    edx,DWORD PTR [rbx+0x48]
  426a18:	xor    DWORD PTR [r10],edi
  426a1b:	sub    ecx,DWORD PTR [rbp+0x44]
  426a1e:	xor    eax,0x53522b3a
  426a23:	cmp    bpl,BYTE PTR [r11]
  426a26:	rex.R
  426a27:	rex.W
  426a28:	rex.RB sub eax,0x3a415352
  426a2e:	sub    eax,DWORD PTR [rax+rcx*2+0x45]
  426a32:	sub    eax,0x3a535344
  426a37:	sub    eax,DWORD PTR [rcx+0x4e]
  426a3a:	rex.WRXB
  426a3b:	rex.WRX sub rax,0x2b3a4844
  426a41:	rex.RB
  426a42:	rex.XB
  426a43:	rex.R
  426a44:	rex.W
  426a45:	rex.RB sub eax,0x3a415352
  426a4b:	sub    eax,DWORD PTR [rbp+0x43]
  426a4e:	rex.R
  426a4f:	rex.W
  426a50:	rex.RB sub eax,0x53444345
  426a56:	cmp    bpl,BYTE PTR [r11]
  426a59:	rex.B
  426a5a:	rex.WRX
  426a5b:	rex.WRXB
  426a5c:	rex.WRX sub rax,0x48444345
  426a62:	cmp    ch,BYTE PTR [rip+0x3a415352]        # 0x3a83bdba
  426a68:	and    eax,0x562b0073
  426a6d:	rex.RB push r10
  426a6f:	push   rbx
  426a70:	sub    eax,0x31534c54
  426a75:	xor    BYTE PTR cs:[rdx],bh
  426a78:	sub    edx,DWORD PTR [rsi+0x45]
  426a7b:	push   rdx
  426a7c:	push   rbx
  426a7d:	sub    eax,0x334c5353
  426a82:	xor    BYTE PTR cs:[rax],al
  426a85:	add    BYTE PTR [rax],al
  426a87:	add    BYTE PTR [rbx],ch
  426a89:	push   rsi
  426a8a:	rex.RB push r10
  426a8c:	push   rbx
  426a8d:	sub    eax,0x31534c54
  426a92:	xor    DWORD PTR cs:[rdx],edi
  426a95:	sub    edx,DWORD PTR [rsi+0x45]
  426a98:	push   rdx
  426a99:	push   rbx
  426a9a:	sub    eax,0x31534c54
  426a9f:	xor    BYTE PTR cs:[rdx],bh
  426aa2:	sub    edx,DWORD PTR [rsi+0x45]
  426aa5:	push   rdx
  426aa6:	push   rbx
  426aa7:	sub    eax,0x334c5353
  426aac:	xor    BYTE PTR cs:[rax],al
  426aaf:	add    BYTE PTR [rsi+0x4f],cl
  426ab2:	rex.WRX
  426ab3:	cmp    r13b,BYTE PTR [r11]
  426ab6:	rex.B
  426ab7:	rex.RB push r11
  426ab9:	sub    eax,0x2d383231
  426abe:	rex.RXB
  426abf:	rex.XB
  426ac0:	rex.WRB cmp r13b,BYTE PTR [r11]
  426ac3:	rex.XB
  426ac4:	rex.B
  426ac5:	rex.WRB
  426ac6:	rex.RB
  426ac7:	rex.WR
  426ac8:	rex.WR
  426ac9:	rex.WB
  426aca:	rex.B sub eax,0x2d383231
  426ad0:	rex.RXB
  426ad1:	rex.XB
  426ad2:	rex.WRB cmp r13b,BYTE PTR [r11]
  426ad5:	rex.B
  426ad6:	rex.RB push r11
  426ad8:	sub    eax,0x2d383231
  426add:	rex.XB
  426ade:	rex.X
  426adf:	rex.XB cmp bpl,BYTE PTR [r11]
  426ae2:	rex.XB
  426ae3:	rex.B
  426ae4:	rex.WRB
  426ae5:	rex.RB
  426ae6:	rex.WR
  426ae7:	rex.WR
  426ae8:	rex.WB
  426ae9:	rex.B sub eax,0x2d383231
  426aef:	rex.XB
  426af0:	rex.X
  426af1:	rex.XB cmp bpl,BYTE PTR [r11]
  426af4:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426af8:	sub    eax,0x3a434243
  426afd:	sub    eax,DWORD PTR [rcx+0x52]
  426b00:	rex.XB
  426b01:	rex.RX
  426b02:	rex.WRXB push r13
  426b04:	push   rdx
  426b05:	sub    eax,0x3a383231
  426b0a:	sub    eax,DWORD PTR [rbx+0x4f]
  426b0d:	rex.WRB push r8
  426b0f:	sub    eax,0x4c4c554e
  426b14:	cmp    ch,BYTE PTR [rbx]
  426b16:	rex.XB push r12
  426b18:	pop    rcx
  426b19:	push   rax
  426b1a:	rex.RB sub eax,0x39303558
  426b20:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536da599
  426b26:	rex.W
  426b27:	xor    DWORD PTR [r10],edi
  426b2a:	sub    ecx,DWORD PTR [rbp+0x44]
  426b2d:	xor    eax,0x53522b3a
  426b32:	cmp    spl,BYTE PTR [rip+0x4e000073]        # 0x4e426bac
  426b39:	rex.WRXB
  426b3a:	rex.WRX
  426b3b:	cmp    r13b,BYTE PTR [r11]
  426b3e:	rex.B
  426b3f:	rex.RB push r11
  426b41:	sub    eax,0x2d383231
  426b46:	rex.RXB
  426b47:	rex.XB
  426b48:	rex.WRB cmp r13b,BYTE PTR [r11]
  426b4b:	rex.XB
  426b4c:	rex.B
  426b4d:	rex.WRB
  426b4e:	rex.RB
  426b4f:	rex.WR
  426b50:	rex.WR
  426b51:	rex.WB
  426b52:	rex.B sub eax,0x2d383231
  426b58:	rex.RXB
  426b59:	rex.XB
  426b5a:	rex.WRB cmp r13b,BYTE PTR [r11]
  426b5d:	rex.B
  426b5e:	rex.RB push r11
  426b60:	sub    eax,0x2d383231
  426b65:	rex.XB
  426b66:	rex.X
  426b67:	rex.XB cmp bpl,BYTE PTR [r11]
  426b6a:	rex.XB
  426b6b:	rex.B
  426b6c:	rex.WRB
  426b6d:	rex.RB
  426b6e:	rex.WR
  426b6f:	rex.WR
  426b70:	rex.WB
  426b71:	rex.B sub eax,0x2d383231
  426b77:	rex.XB
  426b78:	rex.X
  426b79:	rex.XB cmp bpl,BYTE PTR [r11]
  426b7c:	xor    eax,DWORD PTR [rbp+rax*2+0x53]
  426b80:	sub    eax,0x3a434243
  426b85:	sub    eax,DWORD PTR [rcx+0x52]
  426b88:	rex.XB
  426b89:	rex.RX
  426b8a:	rex.WRXB push r13
  426b8c:	push   rdx
  426b8d:	sub    eax,0x3a383231
  426b92:	sub    eax,DWORD PTR [rbx+0x4f]
  426b95:	rex.WRB push r8
  426b97:	sub    eax,0x4c4c554e
  426b9c:	cmp    ch,BYTE PTR [rbx]
  426b9e:	rex.XB push r12
  426ba0:	pop    rcx
  426ba1:	push   rax
  426ba2:	rex.RB sub eax,0x39303558
  426ba8:	cmp    ah,BYTE PTR [rip+0x532b3a73]        # 0x536da621
  426bae:	rex.W
  426baf:	xor    DWORD PTR [r10],edi
  426bb2:	sub    ecx,DWORD PTR [rbp+0x44]
  426bb5:	xor    eax,0x4e412b3a
  426bba:	rex.WRXB
  426bbb:	rex.WRX sub rax,0x2b3a4844
  426bc1:	rex.B
  426bc2:	rex.WRX
  426bc3:	rex.WRXB
  426bc4:	rex.WRX sub rax,0x48444345
  426bca:	cmp    ch,BYTE PTR [rbx]
  426bcc:	rex.XB push r13
  426bce:	push   rdx
  426bcf:	push   rsi
  426bd0:	rex.RB sub eax,0x3a4c4c41
  426bd6:	and    eax,0x65640073
  426bdb:	(bad)  
  426bdc:	jne    0x426c45
  426bde:	sub    eax,0x74726563
  426be3:	jae    0x426c13
  426be5:	outs   dx,DWORD PTR ds:[rsi]
  426be6:	jne    0x426c5c
  426be8:	add    BYTE PTR [rbx+0x61],dh
  426beb:	jbe    0x426c52
  426bed:	and    BYTE PTR fs:[rcx+0x6e],ch
  426bf1:	and    BYTE PTR [rbp+riz*2+0x62],ah
  426bf5:	jne    0x426c5e
  426bf7:	sub    eax,0x74726563
  426bfc:	jae    0x426c2c
  426bfe:	outs   dx,DWORD PTR ds:[rsi]
  426bff:	jne    0x426c75
  426c01:	add    BYTE PTR [rsi+0x6f],cl
  426c04:	and    BYTE PTR [rbx+0x65],ah
  426c07:	jb     0x426c7d
  426c09:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  426c10:	jae    0x426c32
  426c12:	outs   dx,WORD PTR ds:[rsi]
  426c14:	jne    0x426c84
  426c16:	and    DWORD PTR fs:[rax],eax
  426c19:	rex.XB
  426c1a:	rex.RB push r10
  426c1c:	push   rsp
  426c1d:	rex.WB
  426c1e:	rex.RX
  426c1f:	rex.WB
  426c20:	rex.XB
  426c21:	push   r12
  426c23:	add    BYTE PTR [r11+0x61],r14b
  426c27:	jbe    0x426c8e
  426c29:	and    BYTE PTR fs:[rcx+0x6e],ch
  426c2d:	and    BYTE PTR [rbp+riz*2+0x62],ah
  426c31:	jne    0x426c9a
  426c33:	sub    eax,0x2e736163
  426c38:	outs   dx,DWORD PTR ds:[rsi]
  426c39:	jne    0x426caf
  426c3b:	add    BYTE PTR [rsi+0x6f],ch
  426c3e:	outs   dx,BYTE PTR ds:[rsi]
  426c3f:	add    BYTE PTR gs:[rax],al
	...
  426c4e:	add    BYTE PTR [rax],al
  426c50:	jae    0x426cc6
  426c52:	(bad)  
  426c53:	jb     0x426cc9
  426c55:	je     0x426cc3
  426c57:	jae    0x426c93
  426c59:	and    BYTE PTR [rbx+0x65],dh
  426c5c:	outs   dx,BYTE PTR ds:[rsi]
  426c5d:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
  426c65:	or     al,BYTE PTR [rax]
  426c67:	gs jb  0x426cdc
  426c6a:	outs   dx,DWORD PTR ds:[rsi]
  426c6b:	jb     0x426c8d
  426c6d:	jae    0x426cd4
  426c6f:	outs   dx,BYTE PTR ds:[rsi]
  426c70:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252220
  426c78:	and    cl,BYTE PTR [rdx]
  426c7a:	add    BYTE PTR [rax],al
  426c7c:	add    BYTE PTR [rax],al
  426c7e:	add    BYTE PTR [rax],al
  426c80:	jae    0x426cf6
  426c82:	(bad)  
  426c83:	jb     0x426cf9
  426c85:	je     0x426cf3
  426c87:	jae    0x426cc3
  426c89:	and    BYTE PTR [rdi+0x61],dh
  426c8c:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x6f662067
  426c94:	jb     0x426cd0
  426c96:	and    BYTE PTR [rdx],ah
  426c98:	and    eax,0x22732a2e
  426c9d:	or     al,BYTE PTR [rax]
  426c9f:	gs jb  0x426d14
  426ca2:	outs   dx,DWORD PTR ds:[rsi]
  426ca3:	jb     0x426cc5
  426ca5:	jb     0x426d0c
  426ca7:	movsxd esp,DWORD PTR [rbp+0x69]
  426caa:	jbe    0x426d15
  426cac:	outs   dx,BYTE PTR ds:[rsi]
  426cad:	and    BYTE PTR [eip+0x73000a73],ah        # 0x73427727
  426cb4:	je     0x426d17
  426cb6:	jb     0x426d2c
  426cb8:	je     0x426d26
  426cba:	jae    0x426cf6
  426cbc:	and    BYTE PTR [rdx+0x65],dh
  426cbf:	movsxd esp,DWORD PTR [rbp+0x69]
  426cc2:	jbe    0x426d29
  426cc4:	cmp    ah,BYTE PTR fs:[rax]
  426cc7:	and    eax,0xa73
  426ccc:	add    BYTE PTR [rax],al
  426cce:	add    BYTE PTR [rax],al
  426cd0:	sub    ch,BYTE PTR [rdx]
  426cd2:	sub    ah,BYTE PTR [rax]
  426cd4:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  426cd6:	ins    BYTE PTR es:[rdi],dx
  426cd7:	jns    0x426cf9
  426cd9:	jae    0x426d40
  426cdb:	outs   dx,BYTE PTR ds:[rsi]
  426cdc:	je     0x426cfe
  426cde:	and    eax,0x79622064
  426ce3:	je     0x426d4a
  426ce5:	jae    0x426d07
  426ce7:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  426cee:	and    BYTE PTR [rdi+0x66],ch
  426cf1:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4c9b5b
  426cf7:	push   0x73707474
  426cfc:	add    BYTE PTR [rbx+0x6d],dh
  426cff:	je     0x426d71
  426d01:	add    BYTE PTR [rbx+0x75],dh
  426d04:	(bad)  
  426d05:	ins    DWORD PTR es:[rdi],dx
  426d06:	imul   esi,DWORD PTR [rbx+0x73],0x6e6f69
  426d0d:	rex.WRX
  426d0e:	outs   dx,DWORD PTR gs:[esi]
  426d11:	je     0x426d7c
  426d13:	(bad)  
  426d14:	je     0x426d7f
  426d16:	outs   dx,BYTE PTR ds:[rsi]
  426d17:	and    BYTE PTR [ebx+0x4d],dl
  426d1b:	push   rsp
  426d1c:	push   rax
  426d1d:	and    BYTE PTR [rbx+0x54],dl
  426d20:	push   r10
  426d22:	push   rsp
  426d23:	push   rsp
  426d24:	rex.WR push rbx
  426d26:	or     al,BYTE PTR [rax]
  426d28:	xor    dh,BYTE PTR [rdx]
  426d2a:	xor    BYTE PTR [rax],ah
  426d2c:	add    BYTE PTR [rbp+0x48],al
  426d2f:	rex.WR
  426d30:	rex.WRXB and BYTE PTR [rip+0x32000a73],r12b        # 0x324277aa
  426d37:	xor    eax,0x53002030
  426d3c:	push   rsp
  426d3d:	push   r10
  426d3f:	push   rsp
  426d40:	push   rsp
  426d41:	rex.WR push rbx
  426d43:	or     al,BYTE PTR [rax]
  426d45:	imul   ebp,DWORD PTR [rbp+0x61],0x6d690070
  426d4c:	(bad)  
  426d4d:	jo     0x426d81
  426d4f:	add    BYTE PTR [rsi+0x65],cl
  426d52:	outs   dx,DWORD PTR ds:[esi]
  426d54:	je     0x426dbf
  426d56:	(bad)  
  426d57:	je     0x426dc2
  426d59:	outs   dx,BYTE PTR ds:[rsi]
  426d5a:	and    BYTE PTR [ecx+0x4d],cl
  426d5e:	push   r8
  426d60:	and    BYTE PTR [rbx+0x54],dl
  426d63:	push   r10
  426d65:	push   rsp
  426d66:	push   rsp
  426d67:	rex.WR push rbx
  426d69:	or     al,BYTE PTR [rax]
  426d6b:	(bad)  
  426d6c:	and    BYTE PTR [rbx+0x41],al
  426d6f:	push   rax
  426d70:	rex.B
  426d71:	rex.X
  426d72:	rex.WB
  426d73:	rex.WR
  426d74:	rex.WB push r12
  426d76:	pop    rcx
  426d77:	or     eax,0x2061000a
  426d7c:	rex.WRXB
  426d7d:	rex.WXB add BYTE PTR [r9+0x20],spl
  426d81:	push   rbx
  426d82:	push   rsp
  426d83:	push   r10
  426d85:	push   rsp
  426d86:	push   rsp
  426d87:	rex.WR push rbx
  426d89:	or     eax,0x6d78000a
  426d8e:	jo     0x426e00
  426d90:	add    BYTE PTR [rsi+0x65],cl
  426d93:	outs   dx,DWORD PTR ds:[esi]
  426d95:	je     0x426e00
  426d97:	(bad)  
  426d98:	je     0x426e03
  426d9a:	outs   dx,BYTE PTR ds:[rsi]
  426d9b:	and    BYTE PTR [eax+0x4d],bl
  426d9f:	push   rax
  426da0:	push   rax
  426da1:	and    BYTE PTR [rbx+0x54],dl
  426da4:	push   r10
  426da6:	push   rsp
  426da7:	push   rsp
  426da8:	rex.WR push rbx
  426daa:	or     al,BYTE PTR [rax]
  426dac:	add    BYTE PTR [rax],al
  426dae:	add    BYTE PTR [rax],al
  426db0:	cmp    al,0x73
  426db2:	je     0x426e26
  426db4:	gs (bad) 
  426db6:	ins    DWORD PTR es:[rdi],dx
  426db7:	cmp    dh,BYTE PTR [rbx+0x74]
  426dba:	jb     0x426e21
  426dbc:	(bad)  
  426dbd:	ins    DWORD PTR es:[rdi],dx
  426dbe:	and    BYTE PTR [rax+0x6d],bh
  426dc1:	ins    BYTE PTR es:[rdi],dx
  426dc2:	outs   dx,BYTE PTR ds:[rsi]
  426dc3:	jae    0x426dff
  426dc5:	jae    0x426e3b
  426dc7:	jb     0x426e2e
  426dc9:	(bad)  
  426dca:	ins    DWORD PTR es:[rdi],dx
  426dcb:	cmp    eax,0x74746827
  426dd0:	jo     0x426e0c
  426dd2:	(bad)  
  426dd3:	(bad)  
  426dd4:	gs je  0x426e3f
  426dd7:	gs jb  0x426e52
  426dda:	cs push 0x61
  426ddd:	(bad)
  426de2:	outs   dx,DWORD PTR ds:[rsi]
  426de3:	jb     0x426e4c
  426de5:	(bad)  
  426de6:	jae    0x426e5c
  426de8:	jb     0x426e4f
  426dea:	(bad)  
  426deb:	ins    DWORD PTR es:[rdi],dx
  426dec:	jae    0x426e15
  426dee:	and    BYTE PTR [rax+0x6d],bh
  426df1:	ins    BYTE PTR es:[rdi],dx
  426df2:	outs   dx,BYTE PTR ds:[rsi]
  426df3:	jae    0x426e32
  426df5:	(bad)  
  426df6:	push   0x61
  426df8:	(bad)
  426dfd:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  426e01:	outs   dx,BYTE PTR ds:[rsi]
  426e02:	je     0x426e2b
  426e04:	and    BYTE PTR [rdi+rbp*2+0x3d],dh
  426e08:	(bad)  
  426e09:	and    eax,0x76202773
  426e0e:	gs jb  0x426e84
  426e11:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
  426e18:	xor    BYTE PTR [rdi],ah
  426e1a:	or     al,BYTE PTR ds:[rax]
  426e1d:	cmp    al,0x3f
  426e1f:	add    BYTE PTR [rbx+rsi*2],bh
  426e22:	je     0x426e85
  426e24:	jb     0x426e9a
  426e26:	je     0x426e94
  426e28:	jae    0x426e4a
  426e2a:	js     0x426e99
  426e2c:	ins    BYTE PTR es:[rdi],dx
  426e2d:	outs   dx,BYTE PTR ds:[rsi]
  426e2e:	jae    0x426e6d
  426e30:	(bad)  
  426e31:	jne    0x426ea5
  426e33:	outs   dx,BYTE PTR ds:[rsi]
  426e34:	cmp    ch,BYTE PTR [rcx+0x65]
  426e37:	je     0x426e9f
  426e39:	cmp    dh,BYTE PTR [rax+0x61]
  426e3c:	jb     0x426e9f
  426e3e:	ins    DWORD PTR es:[rdi],dx
  426e3f:	jae    0x426e7b
  426e41:	js     0x426eb0
  426e43:	ins    BYTE PTR es:[rdi],dx
  426e44:	cmp    ch,BYTE PTR [rsi+0x73]
  426e47:	cmp    bh,BYTE PTR [rax+0x6d]
  426e4a:	jo     0x426ebc
  426e4c:	sub    eax,0x27736c74
  426e51:	(bad)  
  426e52:	add    BYTE PTR ds:[rax+rsi*2],bh
  426e56:	jb     0x426ec7
  426e58:	movsxd esp,DWORD PTR [rbp+0x65]
  426e5b:	add    BYTE PTR fs:[rsp+riz*2+0x61],ch
  426e60:	jo     0x426e62
  426e62:	rex.WRX
  426e63:	outs   dx,DWORD PTR gs:[esi]
  426e66:	je     0x426ed1
  426e68:	(bad)  
  426e69:	je     0x426ed4
  426e6b:	outs   dx,BYTE PTR ds:[rsi]
  426e6c:	and    BYTE PTR [esp+eax*2+0x41],cl
  426e71:	push   rax
  426e72:	and    BYTE PTR [rbx+0x54],dl
  426e75:	push   r10
  426e77:	push   rsp
  426e78:	push   rsp
  426e79:	rex.WR push rbx
  426e7b:	or     al,BYTE PTR [rax]
  426e7d:	add    BYTE PTR [rax],al
  426e7f:	add    BYTE PTR [rax],dh
  426e81:	sbb    eax,0x77010102
  426e86:	sbb    BYTE PTR [rax+0x332e3116],al
  426e8c:	cs ss xor DWORD PTR cs:[rsi],ebp
  426e91:	xor    al,0x2e
  426e93:	xor    DWORD PTR [rsi],ebp
  426e95:	xor    DWORD PTR [rsi+rsi*1],esi
  426e98:	ss xor dh,BYTE PTR cs:[rax]
  426e9c:	xor    BYTE PTR [rbx],dh
  426e9e:	(bad)  
  426e9f:	add    BYTE PTR [rsi+0x74],ah
  426ea2:	jo     0x426ea4
  426ea4:	data16 je 0x426f17
  426ea7:	jae    0x426ea9
  426ea9:	rex.WRX
  426eaa:	outs   dx,DWORD PTR gs:[esi]
  426ead:	je     0x426f18
  426eaf:	(bad)  
  426eb0:	je     0x426f1b
  426eb2:	outs   dx,BYTE PTR ds:[rsi]
  426eb3:	and    BYTE PTR [esi+0x54],al
  426eb7:	push   rax
  426eb8:	and    BYTE PTR [rbx+0x54],dl
  426ebb:	push   r10
  426ebd:	push   rsp
  426ebe:	push   rsp
  426ebf:	rex.WR push rbx
  426ec1:	or     al,BYTE PTR [rax]
  426ec3:	rex.RX
  426ec4:	rex.RB
  426ec5:	push   r12
  426ec7:	or     eax,0x3132000a
  426ecc:	xor    DWORD PTR [rax],esp
  426ece:	add    BYTE PTR [rcx+0x55],al
  426ed1:	push   rsp
  426ed2:	rex.W and BYTE PTR [rsp+rcx*2+0x53],dl
  426ed7:	or     eax,0x3332000a
  426edc:	xor    al,0x0
  426ede:	jne    0x426f4e
  426ee0:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  426ee4:	outs   dx,BYTE PTR ds:[rsi]
  426ee5:	and    BYTE PTR [rax+0x72],dh
  426ee8:	outs   dx,DWORD PTR ds:[rsi]
  426ee9:	je     0x426f5a
  426eeb:	movsxd ebp,DWORD PTR [rdi+0x6c]
  426eee:	and    BYTE PTR [rdi],ah
  426ef0:	and    eax,0xa2773
  426ef5:	js     0x426f64
  426ef7:	jo     0x426f69
  426ef9:	sub    eax,0x76726573
  426efe:	gs jb  0x426f01
  426f01:	xor    al,0x34
  426f03:	xor    eax,DWORD PTR [rax]
  426f05:	sub    ch,BYTE PTR [rdx]
  426f07:	sub    ah,BYTE PTR [rax]
  426f09:	outs   dx,BYTE PTR ds:[esi]
  426f0b:	jne    0x426f81
  426f0d:	ins    BYTE PTR es:[rdi],dx
  426f0e:	jae    0x426f6f
  426f10:	(bad)  
  426f11:	jns    0x426f78
  426f13:	sub    BYTE PTR [rcx],ch
  426f15:	and    BYTE PTR [rbp+0x72],ah
  426f18:	jb     0x426f89
  426f1a:	jb     0x426f56
  426f1c:	and    BYTE PTR [rip+0x52000a73],ah        # 0x52427995
  426f22:	gs jae 0x426f94
  426f25:	ins    BYTE PTR es:[rdi],dx
  426f26:	jbe    0x426f91
  426f28:	outs   dx,BYTE PTR ds:[rsi]
  426f29:	and    BYTE PTR [edi],ah
  426f2c:	and    eax,0x2e2e2773
  426f31:	or     al,BYTE PTR cs:[rax]
  426f34:	rex.XB (bad) 
  426f36:	outs   dx,BYTE PTR ds:[rsi]
  426f37:	outs   dx,BYTE PTR ds:[rsi]
  426f38:	outs   dx,DWORD PTR ds:[rsi]
  426f39:	je     0x426f5b
  426f3b:	jb     0x426fa2
  426f3d:	jae    0x426fae
  426f3f:	ins    BYTE PTR es:[rdi],dx
  426f40:	jbe    0x426fa7
  426f42:	and    BYTE PTR [rip+0x73253a73],ah        # 0x7367a9bb
  426f48:	cmp    ah,BYTE PTR [rax]
  426f4a:	and    eax,0xa73
  426f4f:	add    BYTE PTR [rbx+0x6f],al
  426f52:	jne    0x426fc0
  426f54:	and    BYTE PTR fs:[rsi+0x6f],ch
  426f58:	je     0x426f7a
  426f5a:	imul   bp,WORD PTR [rsi+0x64],0x6120
  426f60:	and    BYTE PTR [rbx+0x75],dh
  426f63:	jo     0x426fd5
  426f65:	outs   dx,DWORD PTR ds:[rsi]
  426f66:	jb     0x426fdc
  426f68:	gs and BYTE PTR fs:[rbx+0x6f],dh
  426f6d:	movsxd ebp,DWORD PTR [rbx+0x65]
  426f70:	je     0x426f7c
  426f72:	add    BYTE PTR [rdi+0x65],ah
  426f75:	je     0x426fe5
  426f77:	(bad)  
  426f78:	ins    DWORD PTR es:[rdi],dx
  426f79:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x3a29286f
  426f81:	and    BYTE PTR [rip+0x25000a73],ah        # 0x254279fa
  426f87:	jae    0x426fa9
  426f89:	(bad)  
  426f8a:	and    eax,0x73253a73
  426f8f:	(bad)  
  426f90:	cs cs or al,BYTE PTR cs:[rax]
  426f95:	add    BYTE PTR [rax],al
  426f97:	add    BYTE PTR [rbx+0x6f],al
  426f9a:	jne    0x427008
  426f9c:	and    BYTE PTR fs:[rsi+0x6f],ch
  426fa0:	je     0x426fc2
  426fa2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  426fa5:	outs   dx,BYTE PTR ds:[rsi]
  426fa6:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  426fab:	outs   dx,DWORD PTR ds:[rsi]
  426fac:	and    BYTE PTR [rip+0x73253a73],ah        # 0x7367aa25
  426fb2:	cmp    ah,BYTE PTR [rax]
  426fb4:	and    eax,0x57000a73
  426fb9:	push   rbx
  426fba:	pop    r15
  426fbc:	push   rbx
  426fbd:	push   rsp
  426fbe:	push   r10
  426fc0:	push   rsp
  426fc1:	push   rbp
  426fc2:	push   rax
  426fc3:	pop    rdi
  426fc4:	rex.RB push r10
  426fc6:	push   rdx
  426fc7:	rex.WRXB push r10
  426fc9:	add    BYTE PTR [rax],al
  426fcb:	add    BYTE PTR [rax],al
  426fcd:	add    BYTE PTR [rax],al
  426fcf:	add    BYTE PTR [rdi+0x61],dl
  426fd2:	jb     0x427042
  426fd4:	imul   ebp,DWORD PTR [rsi+0x67],0x6567203a
  426fdb:	je     0x427050
  426fdd:	gs jb  0x427056
  426fe0:	(bad)  
  426fe1:	jns    0x427053
  426fe3:	outs   dx,DWORD PTR ds:[rsi]
  426fe4:	jb     0x42705a
  426fe6:	sub    BYTE PTR [rip+0x66202973],ah        # 0x6662995f
  426fec:	(bad)  
  426fed:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7355202e
  426ff5:	imul   ebp,DWORD PTR [rsi+0x67],0x726f7020
  426ffc:	je     0x42701e
  426ffe:	outs   dx,BYTE PTR ds:[rsi]
  426fff:	jne    0x42706e
  427001:	(bad)  
  427002:	gs jb  0x427025
  427005:	(bad)  
  427006:	jae    0x427028
  427008:	jae    0x42706f
  42700a:	jb     0x427082
  42700c:	imul   esp,DWORD PTR [rbx+0x65],0xa2e
  427013:	add    BYTE PTR [rax],al
  427015:	add    BYTE PTR [rax],al
  427017:	add    BYTE PTR [rdi+0x61],dl
  42701a:	jb     0x42708a
  42701c:	imul   ebp,DWORD PTR [rsi+0x67],0x6567203a
  427023:	je     0x427098
  427025:	gs jb  0x42709e
  427028:	(bad)  
  427029:	jns    0x427099
  42702b:	(bad)  
  42702c:	ins    DWORD PTR es:[rdi],dx
  42702d:	sub    BYTE PTR gs:[rcx],ch
  427030:	and    BYTE PTR [rsi+0x61],ah
  427033:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa2e
  42703b:	add    BYTE PTR [rax],al
  42703d:	add    BYTE PTR [rax],al
  42703f:	add    BYTE PTR [rip+0x45732520],ch        # 0x45b59565
  427045:	and    BYTE PTR [r9+r13*2+0x66],al
  42704a:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  427050:	ins    BYTE PTR es:[rdi],dx
  427051:	ins    BYTE PTR es:[rdi],dx
  427052:	ins    DWORD PTR es:[rdi],dx
  427053:	(bad)  
  427054:	outs   dx,BYTE PTR ds:[rsi]
  427055:	and    BYTE PTR [rax+0x61],dh
  427058:	jb     0x4270bb
  42705a:	ins    DWORD PTR es:[rdi],dx
  42705b:	gs je  0x4270c3
  42705e:	jb     0x4270d3
  427060:	or     al,BYTE PTR [rax]
  427062:	and    BYTE PTR [rip+0x69735520],ch        # 0x69b5c588
  427068:	outs   dx,BYTE PTR ds:[rsi]
  427069:	and    BYTE PTR [ebx+0x75],ah
  42706d:	jb     0x4270e5
  42706f:	cmp    ah,BYTE PTR gs:[rax]
  427072:	and    eax,0x20000a73
  427077:	sub    eax,0x72754320
  42707c:	jbe    0x4270e3
  42707e:	and    BYTE PTR [rbx+0x69],dh
  427081:	jp     0x4270e8
  427083:	cmp    ah,BYTE PTR [rax]
  427085:	and    eax,0x69622064
  42708a:	je     0x4270ff
  42708c:	or     al,BYTE PTR [rax]
  42708e:	add    BYTE PTR [rax],al
  427090:	sub    eax,0x44732520
  427095:	imul   esp,DWORD PTR [rsi+0x66],0x482d6569
  42709c:	gs ins BYTE PTR es:[rdi],dx
  42709e:	ins    BYTE PTR es:[rdi],dx
  42709f:	ins    DWORD PTR es:[rdi],dx
  4270a0:	(bad)  
  4270a1:	outs   dx,BYTE PTR ds:[rsi]
  4270a2:	and    BYTE PTR [rax+0x61],dh
  4270a5:	jb     0x427108
  4270a7:	ins    DWORD PTR es:[rdi],dx
  4270a8:	gs je  0x427110
  4270ab:	jb     0x427120
  4270ad:	or     al,BYTE PTR [rax]
  4270af:	and    BYTE PTR [rip+0x69735520],ch        # 0x69b5c5d5
  4270b5:	outs   dx,BYTE PTR ds:[rsi]
  4270b6:	and    BYTE PTR [eax+0x72],dh
  4270ba:	imul   ebp,DWORD PTR [rbp+0x65],0x6425203a
  4270c1:	and    BYTE PTR [rdx+0x69],ah
  4270c4:	je     0x427139
  4270c6:	or     al,BYTE PTR [rax]
  4270c8:	and    BYTE PTR [rip+0x63655320],ch        # 0x63a7c3ee
  4270ce:	jb     0x427135
  4270d0:	je     0x4270f2
  4270d2:	imul   esp,DWORD PTR [rbp+0x79],0x3a
  4270d6:	and    BYTE PTR [rip+0x69622064],ah        # 0x69a49140
  4270dc:	je     0x427151
  4270de:	or     al,BYTE PTR [rax]
  4270e0:	and    BYTE PTR [rip+0x65655020],ch        # 0x65a7c106
  4270e6:	jb     0x42710f
  4270e8:	jae    0x42710a
  4270ea:	jo     0x427161
  4270ec:	(bad)  
  4270ed:	ins    BYTE PTR es:[rdi],dx
  4270ee:	imul   esp,DWORD PTR [rbx+0x20],0x3a79656b
  4270f5:	and    BYTE PTR [rip+0x69622064],ah        # 0x69a4915f
  4270fb:	je     0x427170
  4270fd:	or     al,BYTE PTR [rax]
  4270ff:	outs   dx,BYTE PTR ds:[esi]
  427101:	jne    0x427177
  427103:	ins    BYTE PTR es:[rdi],dx
  427104:	jae    0x427165
  427106:	fs push 0x7465675f
  42710c:	pop    rdi
  42710d:	addr32 jb 0x42717f
  427110:	jne    0x427182
  427112:	and    BYTE PTR [rip+0x67000a64],ah        # 0x67427b7c
  427118:	outs   dx,BYTE PTR ds:[rsi]
  427119:	jne    0x42718f
  42711b:	ins    BYTE PTR es:[rdi],dx
  42711c:	jae    0x42717d
  42711e:	fs push 0x7261705f
  427124:	(bad)  
  427125:	ins    DWORD PTR es:[rdi],dx
  427126:	jae    0x427187
  427128:	imul   ebp,DWORD PTR [rsi+0x69],0x64252074
  42712f:	or     al,BYTE PTR [rax]
  427131:	add    BYTE PTR [rax],al
  427133:	add    BYTE PTR [rax],al
  427135:	add    BYTE PTR [rax],al
  427137:	add    BYTE PTR [rdi+0x6e],ah
  42713a:	jne    0x4271b0
  42713c:	ins    BYTE PTR es:[rdi],dx
  42713d:	jae    0x42719e
  42713f:	fs push 0x7261705f
  427145:	(bad)  
  427146:	ins    DWORD PTR es:[rdi],dx
  427147:	jae    0x4271a8
  427149:	imul   ebp,DWORD PTR [rbp+0x70],0x5f74726f
  427150:	jb     0x4271b3
  427152:	ja     0x427174
  427154:	and    eax,0x67000a64
  427159:	outs   dx,BYTE PTR ds:[rsi]
  42715a:	jne    0x4271d0
  42715c:	ins    BYTE PTR es:[rdi],dx
  42715d:	jae    0x4271be
  42715f:	fs push 0x7261705f
  427165:	(bad)  
  427166:	ins    DWORD PTR es:[rdi],dx
  427167:	jae    0x4271c8
  427169:	gs js  0x4271dc
  42716c:	outs   dx,DWORD PTR ds:[rsi]
  42716d:	jb     0x4271e3
  42716f:	pop    rdi
  427170:	jo     0x4271dd
  427172:	movsxd esi,DWORD PTR [rbx+0x33]
  427175:	and    BYTE PTR [rip+0x67000a64],ah        # 0x67427bdf
  42717b:	outs   dx,BYTE PTR ds:[rsi]
  42717c:	jne    0x4271f2
  42717e:	ins    BYTE PTR es:[rdi],dx
  42717f:	jae    0x4271e0
  427181:	ins    DWORD PTR es:[rdi],dx
  427182:	(bad)  
  427183:	ins    BYTE PTR es:[rdi],dx
  427184:	ins    BYTE PTR es:[rdi],dx
  427185:	outs   dx,DWORD PTR ds:[rsi]
  427186:	movsxd esp,DWORD PTR [rax]
  427188:	and    eax,0xa64
  42718d:	add    BYTE PTR [rax],al
  42718f:	add    BYTE PTR [rdi+0x6e],ah
  427192:	jne    0x427208
  427194:	ins    BYTE PTR es:[rdi],dx
  427195:	jae    0x4271f6
  427197:	fs push 0x7261705f
  42719d:	(bad)  
  42719e:	ins    DWORD PTR es:[rdi],dx
  42719f:	jae    0x427200
  4271a1:	gs js  0x427214
  4271a4:	outs   dx,DWORD PTR ds:[rsi]
  4271a5:	jb     0x42721b
  4271a7:	pop    rdi
  4271a8:	jo     0x427215
  4271aa:	movsxd esi,DWORD PTR [rbx+0x33]
  4271ad:	sub    eax,0x64252032
  4271b2:	or     al,BYTE PTR [rax]
  4271b4:	and    BYTE PTR [rip+0x434b5020],ch        # 0x438dc1da
  4271ba:	push   rbx
  4271bb:	and    esi,DWORD PTR [rbx]
  4271bd:	and    BYTE PTR [rsi+0x6f],ah
  4271c0:	jb     0x42722f
  4271c2:	(bad)  
  4271c3:	je     0x4271ff
  4271c5:	or     cl,BYTE PTR [rdx]
  4271c7:	and    eax,0xa732a2e
  4271cc:	add    BYTE PTR [rip+0x25583230],ah        # 0x259aa402
  4271d2:	jae    0x4271d4
  4271d4:	add    BYTE PTR [rdx],bh
  4271d6:	add    BYTE PTR [rax],ch
  4271d8:	gs ins DWORD PTR es:[rdi],dx
  4271da:	jo     0x427250
  4271dc:	jns    0x427207
  4271de:	add    BYTE PTR [rax],ch
  4271e0:	je     0x427251
  4271e2:	outs   dx,DWORD PTR ds:[rsi]
  4271e3:	and    BYTE PTR [rcx+riz*2+0x72],ch
  4271e7:	sub    DWORD PTR gs:[eax],eax
  4271eb:	add    BYTE PTR [rax],al
  4271ed:	add    BYTE PTR [rax],al
  4271ef:	add    BYTE PTR [rip+0x65655020],ch        # 0x65a7c215
  4271f5:	jb     0x427217
  4271f7:	imul   esp,DWORD PTR fs:[rax+riz*1+0x6e],0x7320746f
  427200:	outs   dx,BYTE PTR gs:[rsi]
  427202:	and    BYTE PTR fs:[rcx+0x6e],ah
  427206:	jns    0x427228
  427208:	movsxd esp,DWORD PTR [rbp+0x72]
  42720b:	je     0x427276
  42720d:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427213:	or     al,BYTE PTR cs:[rax]
  427216:	add    BYTE PTR [rax],al
  427218:	sub    eax,0x756f4320
  42721d:	ins    BYTE PTR es:[rdi],dx
  42721e:	and    BYTE PTR fs:[rsi+0x6f],ch
  427222:	je     0x427244
  427224:	jbe    0x42728b
  427226:	jb     0x427291
  427228:	data16 jns 0x42724b
  42722b:	movsxd esp,DWORD PTR [rbp+0x72]
  42722e:	je     0x427299
  427230:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427236:	and    BYTE PTR [rax],ch
  427238:	gs jb  0x4272ad
  42723b:	cmp    ah,BYTE PTR [rax]
  42723d:	and    eax,0xa2973
  427242:	add    BYTE PTR [rax],al
  427244:	add    BYTE PTR [rax],al
  427246:	add    BYTE PTR [rax],al
  427248:	sub    eax,0x756f4320
  42724d:	ins    BYTE PTR es:[rdi],dx
  42724e:	and    BYTE PTR fs:[rsi+0x6f],ch
  427252:	je     0x427274
  427254:	jo     0x4272c8
  427256:	imul   ebp,DWORD PTR [rsi+0x74],0x72657620
  42725d:	imul   esp,DWORD PTR [rsi+0x69],0x69746163
  427264:	outs   dx,DWORD PTR ds:[rsi]
  427265:	outs   dx,BYTE PTR ds:[rsi]
  427266:	and    BYTE PTR [rsi+0x6c],ah
  427269:	(bad)  
  42726a:	addr32 jae 0x42728d
  42726d:	sub    BYTE PTR [rbp+0x72],ah
  427270:	jb     0x4272ac
  427272:	and    BYTE PTR [rip+0xa2973],ah        # 0x4c9beb
  427278:	sub    eax,0x61745320
  42727d:	je     0x4272f4
  42727f:	jae    0x4272bb
  427281:	and    BYTE PTR [rip+0xa73],ah        # 0x427cfa
  427287:	add    BYTE PTR [rip+0x72655320],ch        # 0x72a7c5ad
  42728d:	jbe    0x4272f4
  42728f:	jb     0x4272b1
  427291:	push   0x72207361
  427296:	gs jno 0x42730e
  427299:	gs jae 0x427310
  42729c:	gs and BYTE PTR fs:[rcx+0x20],ah
  4272a1:	movsxd esp,DWORD PTR [rbp+0x72]
  4272a4:	je     0x42730f
  4272a6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4272ac:	or     al,BYTE PTR cs:[rax]
  4272af:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4272b1:	and    BYTE PTR [rbx+0x65],ah
  4272b4:	jb     0x42732a
  4272b6:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4272bd:	jae    0x4272df
  4272bf:	outs   dx,WORD PTR ds:[rsi]
  4272c1:	jne    0x427331
  4272c3:	and    DWORD PTR fs:[rdx],ecx
  4272c6:	add    BYTE PTR [rip+0x72654320],ch        # 0x72a7b5ec
  4272cc:	je     0x427337
  4272ce:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4272d4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4272d8:	cmp    ah,BYTE PTR gs:[rax]
  4272db:	pop    rax
  4272dc:	cs xor eax,0xa3930
  4272e2:	add    BYTE PTR [rax],al
  4272e4:	add    BYTE PTR [rax],al
  4272e6:	add    BYTE PTR [rax],al
  4272e8:	sub    eax,0x746f4720
  4272ed:	and    BYTE PTR [rcx+0x20],ah
  4272f0:	movsxd esp,DWORD PTR [rbp+0x72]
  4272f3:	je     0x42735e
  4272f5:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4272fb:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4272ff:	je     0x427321
  427301:	outs   dx,DWORD PTR ds:[rsi]
  427302:	data16 and BYTE PTR [rip+0x65632064],ah        # 0x65a5936d
  427309:	jb     0x42737f
  42730b:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  427312:	jae    0x427342
  427314:	or     al,BYTE PTR [rax]
  427316:	rex.R
  427317:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42731b:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  427322:	outs   dx,DWORD PTR ds:[rsi]
  427323:	jb     0x42735f
  427325:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427d9e
  42732b:	and    BYTE PTR [rbx+0x65],al
  42732e:	jb     0x4273a4
  427330:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  427337:	pop    rbx
  427338:	and    eax,0x69205d64
  42733d:	outs   dx,BYTE PTR ds:[rsi]
  42733e:	outs   dx,WORD PTR ds:[rsi]
  427340:	cmp    cl,BYTE PTR [rdx]
  427342:	and    BYTE PTR [rip+0x73250020],ch        # 0x73677368
  427348:	or     al,BYTE PTR [rax]
  42734a:	outs   dx,BYTE PTR ds:[esi]
  42734c:	jne    0x4273c2
  42734e:	ins    BYTE PTR es:[rdi],dx
  42734f:	jae    0x4273b0
  427351:	ins    DWORD PTR es:[rdi],dx
  427352:	(bad)  
  427353:	ins    BYTE PTR es:[rdi],dx
  427354:	ins    BYTE PTR es:[rdi],dx
  427355:	outs   dx,DWORD PTR ds:[rsi]
  427356:	movsxd ecx,DWORD PTR [rdx]
  427358:	add    BYTE PTR [rbp+0x6e],al
  42735b:	movsxd ebp,DWORD PTR [rdi+0x64]
  42735e:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  427365:	outs   dx,DWORD PTR ds:[rsi]
  427366:	jb     0x4273a2
  427368:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427de1
  42736e:	and    BYTE PTR [rbx+0x65],al
  427371:	jb     0x4273e7
  427373:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42737a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42737e:	cmp    ah,BYTE PTR gs:[rax]
  427381:	rex.WRXB jo 0x4273e9
  427384:	outs   dx,BYTE PTR ds:[rsi]
  427385:	push   rax
  427386:	rex.RXB push r8
  427388:	or     al,BYTE PTR [rax]
  42738a:	sub    eax,0xa732520
  42738f:	add    BYTE PTR [rbp+0x6e],dl
  427392:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  427396:	outs   dx,BYTE PTR ds:[rsi]
  427397:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42739b:	or     al,BYTE PTR gs:[rax]
  42739e:	push   rbp
  42739f:	outs   dx,BYTE PTR ds:[rsi]
  4273a0:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4273a4:	outs   dx,BYTE PTR ds:[rsi]
  4273a5:	add    BYTE PTR [rbx+0x69],bl
  4273a8:	outs   dx,BYTE PTR ds:[esi]
  4273aa:	outs   dx,DWORD PTR ds:[rsi]
  4273ab:	jb     0x427412
  4273ad:	fs pop rbp
  4273af:	add    BYTE PTR [rip+0x73654420],ch        # 0x73a7b7d5
  4273b5:	movsxd esi,DWORD PTR [rdx+0x69]
  4273b8:	jo     0x42742e
  4273ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  4273c1:	or     al,BYTE PTR [rax]
  4273c3:	sub    eax,0x73655320
  4273c8:	jae    0x427433
  4273ca:	outs   dx,DWORD PTR ds:[rsi]
  4273cb:	outs   dx,BYTE PTR ds:[rsi]
  4273cc:	and    BYTE PTR [rcx+0x44],cl
  4273cf:	cmp    ah,BYTE PTR [rax]
  4273d1:	and    eax,0x41000a73
  4273d6:	outs   dx,BYTE PTR ds:[rsi]
  4273d7:	outs   dx,DWORD PTR ds:[rsi]
  4273d8:	outs   dx,BYTE PTR ds:[rsi]
  4273d9:	jns    0x427448
  4273db:	outs   dx,DWORD PTR ds:[rsi]
  4273dc:	jne    0x427451
  4273de:	and    BYTE PTR [rax],al
  4273e0:	sub    eax,0x50525320
  4273e5:	and    BYTE PTR [rcx+0x75],ah
  4273e8:	je     0x427452
  4273ea:	outs   dx,BYTE PTR gs:[rsi]
  4273ec:	je     0x427457
  4273ee:	movsxd esp,DWORD PTR [rcx+0x74]
  4273f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43202e
  4273f8:	outs   dx,BYTE PTR ds:[rsi]
  4273f9:	outs   dx,BYTE PTR ds:[rsi]
  4273fa:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4273ff:	and    BYTE PTR [rcx+0x73],ah
  427402:	and    BYTE PTR [rdi],ah
  427404:	and    eax,0xa2773
  427409:	add    BYTE PTR [rax],al
  42740b:	add    BYTE PTR [rax],al
  42740d:	add    BYTE PTR [rax],al
  42740f:	add    BYTE PTR [rip+0x4b535020],ch        # 0x4b95c435
  427415:	and    BYTE PTR [rcx+0x75],ah
  427418:	je     0x427482
  42741a:	outs   dx,BYTE PTR gs:[rsi]
  42741c:	je     0x427487
  42741e:	movsxd esp,DWORD PTR [rcx+0x74]
  427421:	imul   ebp,DWORD PTR [rdi+0x6e],0x5350202e
  427428:	rex.WXB and BYTE PTR [r8+0x69],bpl
  42742c:	outs   dx,BYTE PTR ds:[rsi]
  42742d:	je     0x42744f
  42742f:	(bad)  
  427430:	and    eax,0xa2773
  427435:	add    BYTE PTR [rax],al
  427437:	add    BYTE PTR [rip+0x4b535020],ch        # 0x4b95c45d
  42743d:	and    BYTE PTR [rcx+0x75],ah
  427440:	je     0x4274aa
  427442:	outs   dx,BYTE PTR gs:[rsi]
  427444:	je     0x4274af
  427446:	movsxd esp,DWORD PTR [rcx+0x74]
  427449:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43202e
  427450:	outs   dx,BYTE PTR ds:[rsi]
  427451:	outs   dx,BYTE PTR ds:[rsi]
  427452:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  427457:	and    BYTE PTR [rcx+0x73],ah
  42745a:	and    BYTE PTR [rdi],ah
  42745c:	and    eax,0xa2773
  427461:	rex.RB jo 0x4274cc
  427464:	gs ins DWORD PTR es:[rdi],dx
  427466:	gs jb  0x4274ca
  427469:	ins    BYTE PTR es:[rdi],dx
  42746a:	and    BYTE PTR [rax],al
  42746c:	sub    eax,0x534c5420
  427471:	(bad)  
  427472:	rex.WB
  427473:	and    BYTE PTR [r9+0x75],spl
  427477:	je     0x4274e1
  427479:	outs   dx,BYTE PTR gs:[rsi]
  42747b:	je     0x4274e6
  42747d:	movsxd esp,DWORD PTR [rcx+0x74]
  427480:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d000a
  427487:	rex.RXB imul r14d,DWORD PTR [r14+0x65],0x6573206e
  42748f:	jb     0x427507
  427491:	gs jb  0x4274b4
  427494:	outs   dx,BYTE PTR ds:[rsi]
  427495:	(bad)  
  427496:	ins    DWORD PTR es:[rdi],dx
  427497:	gs pop rbx
  427499:	and    eax,0x203a5d64
  42749e:	and    eax,0xa73
  4274a3:	add    BYTE PTR [rax],al
  4274a5:	add    BYTE PTR [rax],al
  4274a7:	add    BYTE PTR [rip+0x206f4e20],ch        # 0x20b1c2cd
  4274ad:	movsxd esp,DWORD PTR [rbp+0x72]
  4274b0:	je     0x42751b
  4274b2:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4274b8:	and    BYTE PTR [rdi+0x61],dh
  4274bb:	jae    0x4274dd
  4274bd:	jae    0x427524
  4274bf:	outs   dx,BYTE PTR ds:[rsi]
  4274c0:	je     0x4274e2
  4274c2:	je     0x427533
  4274c4:	and    BYTE PTR [rax+0x65],dh
  4274c7:	gs jb  0x4274d4
  4274ca:	add    BYTE PTR [rip+0x72655620],ch        # 0x72a7caf0
  4274d0:	jae    0x42753b
  4274d2:	outs   dx,DWORD PTR ds:[rsi]
  4274d3:	outs   dx,BYTE PTR ds:[rsi]
  4274d4:	cmp    ah,BYTE PTR [rax]
  4274d6:	and    eax,0x2d000a73
  4274db:	and    BYTE PTR [rbx+0x65],cl
  4274de:	jns    0x427500
  4274e0:	rex.RB js 0x427546
  4274e3:	push   0x65676e61
  4274e8:	cmp    ah,BYTE PTR [rax]
  4274ea:	and    eax,0x2d000a73
  4274ef:	and    BYTE PTR [rbx+0x65],dl
  4274f2:	jb     0x42756a
  4274f4:	gs jb  0x427517
  4274f7:	push   rbx
  4274f8:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
  4274ff:	cmp    ah,BYTE PTR gs:[rax]
  427502:	and    eax,0x2d000a73
  427507:	and    BYTE PTR [rbx+0x6c],al
  42750a:	imul   esp,DWORD PTR [rbp+0x6e],0x69532074
  427511:	outs   dx,BYTE PTR ds:[esi]
  427513:	(bad)  
  427514:	je     0x42758b
  427516:	jb     0x42757d
  427518:	cmp    ah,BYTE PTR [rax]
  42751a:	and    eax,0x2d000a73
  42751f:	and    BYTE PTR [rbx+0x69],al
  427522:	jo     0x42758c
  427524:	gs jb  0x427561
  427527:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427fa0
  42752d:	and    BYTE PTR [rbp+0x41],cl
  427530:	rex.XB cmp spl,BYTE PTR [r8]
  427533:	and    eax,0x2d000a73
  427538:	and    BYTE PTR [rbx+0x6f],al
  42753b:	ins    DWORD PTR es:[rdi],dx
  42753c:	jo     0x4275b0
  42753e:	gs jae 0x4275b4
  427541:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  427548:	or     al,BYTE PTR [rax]
  42754a:	sub    eax,0x74704f20
  42754f:	imul   ebp,DWORD PTR [rdi+0x6e],0x20003a73
  427556:	gs js  0x4275cd
  427559:	outs   dx,BYTE PTR gs:[rsi]
  42755b:	fs gs and BYTE PTR fs:[rbp+0x61],ch
  427561:	jae    0x4275d7
  427563:	gs jb  0x427586
  427566:	jae    0x4275cd
  427568:	movsxd esi,DWORD PTR [rdx+0x65]
  42756b:	je     0x427599
  42756d:	add    BYTE PTR [rax],ah
  42756f:	jae    0x4275d2
  427571:	data16 and BYTE PTR gs:[rdx+0x65],dh
  427576:	outs   dx,BYTE PTR ds:[rsi]
  427577:	outs   dx,DWORD PTR gs:[esi]
  42757a:	je     0x4275e5
  42757c:	(bad)  
  42757d:	je     0x4275e8
  42757f:	outs   dx,DWORD PTR ds:[rsi]
  427580:	outs   dx,BYTE PTR ds:[rsi]
  427581:	sub    al,0x0
  427583:	and    BYTE PTR [rbp+0x74],al
  427586:	rex.WRB sub al,0x0
  427589:	and    BYTE PTR [rdi+0x43],cl
  42758c:	push   rbx
  42758d:	push   rax
  42758e:	and    BYTE PTR [rbx+0x74],dh
  427591:	(bad)  
  427592:	je     0x427609
  427594:	jae    0x4275b6
  427596:	jb     0x4275fd
  427598:	jno    0x42760f
  42759a:	gs jae 0x427611
  42759d:	and    eax,0xa002c73
  4275a2:	add    BYTE PTR [rip+0x54525320],ch        # 0x5494c8c8
  4275a8:	push   rax
  4275a9:	and    BYTE PTR [rax+0x72],dh
  4275ac:	outs   dx,DWORD PTR ds:[rsi]
  4275ad:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
  4275b4:	jae    0x4275c0
  4275b6:	add    BYTE PTR [rip+0x70704120],ch        # 0x70b2b6dc
  4275bc:	ins    BYTE PTR es:[rdi],dx
  4275bd:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4275c4:	and    BYTE PTR [rax+0x72],dh
  4275c7:	outs   dx,DWORD PTR ds:[rsi]
  4275c8:	je     0x427639
  4275ca:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4275cd:	cmp    ah,BYTE PTR [rax]
  4275cf:	and    eax,0xa732a2e
  4275d4:	add    BYTE PTR [rbx+0x68],al
  4275d7:	(bad)  
  4275d8:	outs   dx,BYTE PTR ds:[rsi]
  4275d9:	outs   dx,BYTE PTR ds:[rsi]
  4275da:	gs ins BYTE PTR es:[rdi],dx
  4275dc:	and    BYTE PTR [rdx+0x69],ah
  4275df:	outs   dx,BYTE PTR ds:[rsi]
  4275e0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72726520
  4275e8:	outs   dx,DWORD PTR ds:[rsi]
  4275e9:	jb     0x427625
  4275eb:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d428064
  4275f1:	and    BYTE PTR [rbx+0x68],al
  4275f4:	(bad)  
  4275f5:	outs   dx,BYTE PTR ds:[rsi]
  4275f6:	outs   dx,BYTE PTR ds:[rsi]
  4275f7:	gs ins BYTE PTR es:[rdi],dx
  4275f9:	and    BYTE PTR [rdx+0x69],ah
  4275fc:	outs   dx,BYTE PTR ds:[rsi]
  4275fd:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c742720
  427605:	jae    0x427634
  427607:	jne    0x427677
  427609:	imul   esi,DWORD PTR [rcx+0x75],0x203a2765
  427610:	add    BYTE PTR [rip+0x783230],ah        # 0xbaa846
  427616:	add    BYTE PTR [rax],al
  427618:	test   ebp,ebp
  42761a:	std    
  42761b:	call   FWORD PTR [rcx+rsi*8]
  42761e:	std    
  42761f:	call   FWORD PTR [rax-0x3700020f]
  427625:	icebp  
  427626:	std    
  427627:	dec    DWORD PTR [rax]
  427629:	repnz std 
  42762b:	(bad)  
  42762c:	jns    0x42761b
  42762e:	std    
  42762f:	jmp    FWORD PTR [rip+0x352e5820]        # 0x3570ce55
  427635:	xor    BYTE PTR [rcx],bh
  427637:	and    BYTE PTR [rbx+0x65],ah
  42763a:	jb     0x4276b0
  42763c:	cmp    ah,BYTE PTR [rax]
  42763e:	and    eax,0x2d000a73
  427643:	and    BYTE PTR [rdi+0x70],cl
  427646:	outs   dx,BYTE PTR gs:[rsi]
  427648:	push   rax
  427649:	rex.RXB push r8
  42764b:	and    BYTE PTR [rbx+0x65],ah
  42764e:	jb     0x4276c4
  427650:	cmp    ah,BYTE PTR [rax]
  427652:	and    eax,0x43000a73
  427657:	imul   esi,DWORD PTR [rax+0x68],0x73207265
  42765e:	jne    0x4276c9
  427660:	je     0x4276c7
  427662:	jae    0x427684
  427664:	outs   dx,WORD PTR ds:[rsi]
  427666:	jb     0x427688
  427668:	and    eax,0x53000a73
  42766d:	jns    0x4276dd
  42766f:	je     0x4276d2
  427671:	js     0x427693
  427673:	gs jb  0x4276e8
  427676:	outs   dx,DWORD PTR ds:[rsi]
  427677:	jb     0x427699
  427679:	(bad)  
  42767a:	je     0x4276b6
  42767c:	and    BYTE PTR [rip+0x25000a73],ah        # 0x254280f5
  427682:	sub    eax,0x9733035
  427687:	xor    BYTE PTR [rax+0x25],bh
  42768a:	xor    BYTE PTR [rdx],dh
  42768c:	js     0x4276ba
  42768e:	and    BYTE PTR [rax],dh
  427690:	js     0x4276b7
  427692:	xor    BYTE PTR [rdx],dh
  427694:	js     0x42769f
  427696:	and    eax,0x43000a73
  42769b:	gs jb  0x427712
  42769e:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4276a5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4276a9:	gs jae 0x4276e6
  4276ac:	and    BYTE PTR [rax],al
  4276ae:	outs   dx,BYTE PTR ds:[rsi]
  4276af:	outs   dx,DWORD PTR ds:[rsi]
  4276b0:	outs   dx,BYTE PTR ds:[rsi]
  4276b1:	or     al,BYTE PTR gs:[rax]
  4276b4:	rex.XB push r12
  4276b6:	pop    rcx
  4276b7:	push   rax
  4276b8:	rex.RB sub eax,0x2c007325
  4276be:	and    BYTE PTR [rax],al
  4276c0:	push   rax
  4276c1:	jb     0x427732
  4276c3:	je     0x427734
  4276c5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4276c8:	jae    0x427704
  4276ca:	and    BYTE PTR [rax],al
  4276cc:	push   rsi
  4276cd:	rex.RB push r10
  4276cf:	push   rbx
  4276d0:	sub    eax,0x43007325
  4276d5:	outs   dx,DWORD PTR ds:[rsi]
  4276d6:	ins    DWORD PTR es:[rdi],dx
  4276d7:	jo     0x42774b
  4276d9:	gs jae 0x42774f
  4276dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x4300203a
  4276e3:	rex.WRXB
  4276e4:	rex.WRB push r8
  4276e6:	sub    eax,0x45007325
  4276eb:	ins    BYTE PTR es:[rdi],dx
  4276ec:	ins    BYTE PTR es:[rdi],dx
  4276ed:	imul   esi,DWORD PTR [rax+0x74],0x63206369
  4276f4:	jne    0x427768
  4276f6:	jbe    0x42775d
  4276f8:	jae    0x427734
  4276fa:	and    BYTE PTR [rax],al
  4276fc:	rex.XB push r13
  4276fe:	push   rdx
  4276ff:	push   rsi
  427700:	rex.RB sub eax,0x50007325
  427706:	rex.WXB sub rax,0x6e676973
  42770c:	(bad)  
  42770d:	je     0x427784
  42770f:	jb     0x427776
  427711:	jae    0x42774d
  427713:	and    BYTE PTR [rax],al
  427715:	push   rbx
  427716:	rex.WB
  427717:	rex.RXB
  427718:	rex.WRX sub rax,0x43007325
  42771e:	imul   esi,DWORD PTR [rax+0x68],0x73207265
  427725:	jne    0x427790
  427727:	je     0x42778e
  427729:	jae    0x427765
  42772b:	or     al,BYTE PTR [rax]
  42772d:	add    BYTE PTR [rax],al
  42772f:	add    BYTE PTR [rcx],cl
  427731:	rex.WXB
  427732:	gs jns 0x427755
  427735:	gs js  0x42779b
  427738:	push   0x65676e61
  42773d:	cmp    ah,BYTE PTR [rax]
  42773f:	and    eax,0x43090a73
  427744:	imul   esi,DWORD PTR [rax+0x68],0x203a7265
  42774b:	and    eax,0x4d090a73
  427750:	rex.B
  427751:	rex.XB cmp spl,BYTE PTR [r8]
  427754:	and    eax,0xa0a73
  427759:	rex.XB imul esi,DWORD PTR [r8+0x68],0x3a737265
  427761:	and    BYTE PTR [rax],al
  427763:	rex.WRB
  427764:	rex.B
  427765:	rex.XB jae 0x4277a2
  427768:	and    BYTE PTR [rax],al
  42776a:	and    eax,0x69440073
  42776f:	addr32 gs jae 0x4277e7
  427773:	jae    0x4277af
  427775:	and    BYTE PTR [rax],al
  427777:	rex.WXB
  427778:	gs jns 0x42779b
  42777b:	gs js  0x4277e1
  42777e:	push   0x65676e61
  427783:	and    BYTE PTR [rcx+0x6c],ah
  427786:	outs   dx,DWORD PTR ds:[esi]
  427788:	jb     0x4277f3
  42778a:	je     0x4277f4
  42778c:	ins    DWORD PTR es:[rdi],dx
  42778d:	jae    0x4277c9
  42778f:	and    BYTE PTR [rax],al
  427791:	push   rax
  427792:	jne    0x4277f6
  427794:	ins    BYTE PTR es:[rdi],dx
  427795:	imul   esp,DWORD PTR [rbx+0x20],0x2079654b
  42779c:	push   rbx
  42779d:	jns    0x427812
  42779f:	je     0x427806
  4277a1:	ins    DWORD PTR es:[rdi],dx
  4277a2:	jae    0x4277de
  4277a4:	and    BYTE PTR [rax],al
  4277a6:	add    BYTE PTR [rax],al
  4277a8:	sub    ch,BYTE PTR [rdx]
  4277aa:	sub    ah,BYTE PTR [rax]
  4277ac:	push   rax
  4277ad:	jb     0x42781e
  4277af:	movsxd esp,DWORD PTR [rbp+0x73]
  4277b2:	jae    0x42781d
  4277b4:	outs   dx,BYTE PTR ds:[rsi]
  4277b5:	and    BYTE PTR [eip+0x79622075],ah        # 0x79a49831
  4277bc:	je     0x427823
  4277be:	jae    0x4277e0
  4277c0:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4277c3:	ins    DWORD PTR es:[rdi],dx
  4277c4:	(bad)  
  4277c5:	outs   dx,BYTE PTR ds:[rsi]
  4277c6:	cmp    ah,BYTE PTR fs:[rax]
  4277c9:	and    eax,0x2a000a73
  4277ce:	sub    dl,BYTE PTR [rdx+0x45]
  4277d1:	rex.W
  4277d2:	rex.B
  4277d3:	rex.WRX
  4277d4:	rex.R push rbx
  4277d6:	rex.W
  4277d7:	rex.B
  4277d8:	rex.WXB
  4277d9:	sub    r13b,BYTE PTR [r10]
  4277dc:	add    BYTE PTR [rax],al
  4277de:	add    BYTE PTR [rax],al
  4277e0:	sub    ch,BYTE PTR [rdx]
  4277e2:	sub    ah,BYTE PTR [rax]
  4277e4:	push   rbx
  4277e5:	outs   dx,BYTE PTR gs:[rsi]
  4277e7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x68657220
  4277ef:	(bad)  
  4277f0:	outs   dx,BYTE PTR ds:[rsi]
  4277f1:	fs jae 0x42785c
  4277f4:	(bad)  
  4277f5:	imul   esp,DWORD PTR [rbp+0x20],0x72
  4277f9:	gs jno 0x427871
  4277fc:	gs jae 0x427873
  4277ff:	or     al,BYTE PTR [rax]
  427801:	sub    ch,BYTE PTR [rdx]
  427803:	rex.W
  427804:	rex.RB
  427805:	push   r10
  427807:	push   rsp
  427808:	rex.X
  427809:	rex.RB
  42780a:	push   r12
  42780c:	sub    ch,BYTE PTR [rdx]
  42780e:	add    BYTE PTR [rsi+0x6f],cl
  427811:	and    BYTE PTR [rax+0x65],ch
  427814:	(bad)  
  427815:	jb     0x42788b
  427817:	(bad)  
  427818:	gs (bad) 
  42781a:	je     0x42783c
  42781c:	imul   ebp,DWORD PTR [rsi+0x20],0x73696874
  427823:	and    BYTE PTR [rbx+0x65],dh
  427826:	jae    0x42789b
  427828:	imul   ebp,DWORD PTR [rdi+0x6e],0x6970000a
  42782f:	outs   dx,BYTE PTR ds:[rsi]
  427830:	cmp    ah,BYTE PTR [eax]
  427833:	and    eax,0x47000a73
  427838:	rex.WRX push rbp
  42783a:	push   rsp
  42783b:	rex.WR push rbx
  42783d:	pop    rdi
  42783e:	push   rbx
  42783f:	rex.WRXB pop r15
  427841:	push   rax
  427842:	rex.WB
  427843:	rex.WRX add BYTE PTR [rbx+0x65],r14b
  427847:	movsxd esi,DWORD PTR [rbp+0x72]
  42784a:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6966666f
  427852:	movsxd esp,DWORD PTR [rbp+0x72]
  427855:	add    BYTE PTR [rdi+0x4e],al
  427858:	push   rbp
  427859:	push   rsp
  42785a:	rex.WR push rbx
  42785c:	pop    rdi
  42785d:	push   rax
  42785e:	rex.WB
  42785f:	rex.WRX add BYTE PTR [rbp+0x73],r14b
  427863:	gs jb  0x427866
  427866:	add    BYTE PTR [rax],al
  427868:	sub    ch,BYTE PTR [rdx]
  42786a:	sub    ah,BYTE PTR [rax]
  42786c:	push   rsp
  42786d:	push   0x69207369
  427872:	jae    0x427894
  427874:	je     0x4278de
  427876:	and    BYTE PTR gs:[rsi+0x69],ah
  42787a:	outs   dx,BYTE PTR ds:[rsi]
  42787b:	(bad)  
  42787c:	ins    BYTE PTR es:[rdi],dx
  42787d:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  427881:	and    BYTE PTR [rdx+0x65],ah
  427884:	outs   dx,WORD PTR ds:[rsi]
  427886:	jb     0x4278ed
  427888:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  42788c:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  427890:	and    DWORD PTR [rdx],ecx
  427892:	add    BYTE PTR [rax],al
  427894:	add    BYTE PTR [rax],al
  427896:	add    BYTE PTR [rax],al
  427898:	sub    ch,BYTE PTR [rdx]
  42789a:	sub    ah,BYTE PTR [rax]
  42789c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  42789e:	ins    BYTE PTR es:[rdi],dx
  42789f:	jns    0x4278c1
  4278a1:	data16 gs ja 0x4278c5
  4278a5:	je     0x427919
  4278a7:	imul   esp,DWORD PTR [rbp+0x73],0x66656c20
  4278ae:	je     0x4278d0
  4278b0:	(bad)  
  4278b1:	outs   dx,WORD PTR gs:[rsi]
  4278b4:	jb     0x42791b
  4278b6:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  4278ba:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  4278be:	and    DWORD PTR [rdx],ecx
	...
  4278c8:	sub    ch,BYTE PTR [rdx]
  4278ca:	sub    ah,BYTE PTR [rax]
  4278cc:	push   rdi
  4278cd:	jb     0x42793e
  4278cf:	outs   dx,BYTE PTR ds:[rsi]
  4278d0:	and    BYTE PTR [eax+0x49],dl
  4278d4:	rex.WRX and BYTE PTR [rax+0x61],r13b
  4278d8:	jae    0x4278fa
  4278da:	(bad)  
  4278db:	gs outs dx,BYTE PTR gs:[rsi]
  4278de:	and    BYTE PTR [rax+0x72],dh
  4278e1:	outs   dx,DWORD PTR ds:[rsi]
  4278e2:	jbe    0x42794d
  4278e4:	fs gs and DWORD PTR fs:[rdx],ecx
  4278e9:	add    BYTE PTR [rdi+rbp*2+0x6b],dl
  4278ed:	outs   dx,BYTE PTR gs:[rsi]
  4278ef:	and    BYTE PTR [rdi],ah
  4278f1:	and    eax,0x77202773
  4278f6:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x204c5255
  4278fe:	(bad)  
  4278ff:	and    eax,0x202773
  427904:	jb     0x42796b
  427906:	jno    0x42797d
  427908:	imul   esi,DWORD PTR [rdx+0x65],0x73252073
  42790f:	and    BYTE PTR [rax+0x49],dl
  427912:	rex.WRX or r8b,BYTE PTR [rax]
  427915:	push   rsp
  427916:	outs   dx,DWORD PTR ds:[rsi]
  427917:	outs   dx,DWORD PTR ds:[rsi]
  427918:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  42791c:	and    BYTE PTR [eax+0x49],dl
  427920:	rex.WRX and BYTE PTR [rdi+0x69],r12b
  427924:	jbe    0x42798b
  427926:	outs   dx,BYTE PTR ds:[rsi]
  427927:	or     al,BYTE PTR [rax]
  427929:	add    BYTE PTR [rax],al
  42792b:	add    BYTE PTR [rax],al
  42792d:	add    BYTE PTR [rax],al
  42792f:	add    BYTE PTR [rdx+0x65],dl
  427932:	sub    eax,0x6e697375
  427937:	and    BYTE PTR [ebx+0x61],ah
  42793b:	movsxd ebp,DWORD PTR [rax+0x65]
  42793e:	and    BYTE PTR fs:[rax+0x49],dl
  427942:	rex.WRX and BYTE PTR [rsi+0x6f],r12b
  427946:	jb     0x427968
  427948:	je     0x4279b9
  42794a:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  42794e:	(bad)  
  42794f:	and    eax,0xa2773
  427954:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  427956:	and    BYTE PTR [rax+0x49],dl
  427959:	rex.WRX and BYTE PTR [rdi+0x69],r12b
  42795d:	jbe    0x4279c4
  42795f:	outs   dx,BYTE PTR ds:[rsi]
  427960:	or     al,BYTE PTR cs:[rax]
  427963:	add    BYTE PTR [rax],al
  427965:	add    BYTE PTR [rax],al
  427967:	add    BYTE PTR [rbx+0x61],al
  42796a:	outs   dx,BYTE PTR ds:[rsi]
  42796b:	outs   dx,BYTE PTR ds:[rsi]
  42796c:	outs   dx,DWORD PTR ds:[rsi]
  42796d:	je     0x42798f
  42796f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  427972:	je     0x4279dd
  427974:	outs   dx,BYTE PTR ds:[rsi]
  427975:	jne    0x4279dc
  427977:	and    BYTE PTR [rdi+0x69],dh
  42797a:	je     0x4279e4
  42797c:	and    BYTE PTR [rcx+0x20],ah
  42797f:	ja     0x4279f3
  427981:	outs   dx,DWORD PTR ds:[rsi]
  427982:	outs   dx,BYTE PTR ds:[rsi]
  427983:	and    BYTE PTR [eax+0x61],dh
  427987:	jae    0x4279fc
  427989:	ja     0x4279fa
  42798b:	jb     0x4279f1
  42798d:	and    BYTE PTR [rcx+0x6e],ch
  427990:	and    BYTE PTR [rax+rbp*2+0x65],dh
  427994:	and    BYTE PTR [rbp+0x6e],ah
  427997:	jbe    0x427a02
  427999:	jb     0x427a0a
  42799b:	outs   dx,BYTE PTR ds:[rsi]
  42799c:	ins    DWORD PTR es:[rdi],dx
  42799d:	outs   dx,BYTE PTR gs:[rsi]
  42799f:	je     0x4279cf
  4279a1:	or     al,BYTE PTR [rax]
  4279a3:	add    BYTE PTR [rax],al
  4279a5:	add    BYTE PTR [rax],al
  4279a7:	add    BYTE PTR [rsi+0x6f],ch
  4279aa:	je     0x427a11
  4279ac:	cmp    ah,BYTE PTR [rax]
  4279ae:	ja     0x427a18
  4279b0:	outs   dx,BYTE PTR gs:[rsi]
  4279b2:	and    BYTE PTR [rdi+0x70],ch
  4279b5:	gs jb  0x427a19
  4279b8:	je     0x427a23
  4279ba:	outs   dx,BYTE PTR ds:[rsi]
  4279bb:	and    BYTE PTR [ecx+0x6e],ch
  4279bf:	and    BYTE PTR [rdx+0x61],ah
  4279c2:	je     0x427a27
  4279c4:	push   0x646f6d20
  4279c9:	gs sub al,0x20
  4279cc:	jae    0x427a33
  4279ce:	je     0x4279f0
  4279d0:	je     0x427a3a
  4279d2:	and    BYTE PTR gs:[rdi+0x4e],al
  4279d6:	push   rbp
  4279d7:	push   rsp
  4279d8:	rex.WR push rbx
  4279da:	pop    rdi
  4279db:	push   rax
  4279dc:	rex.WB
  4279dd:	rex.WRX and BYTE PTR [rdi+0x72],r13b
  4279e1:	and    BYTE PTR [rdi+0x4e],al
  4279e4:	push   rbp
  4279e5:	push   rsp
  4279e6:	rex.WR push rbx
  4279e8:	pop    rdi
  4279e9:	push   rbx
  4279ea:	rex.WRXB pop r15
  4279ec:	push   rax
  4279ed:	rex.WB
  4279ee:	rex.WRX and BYTE PTR [rbp+0x6e],r12b
  4279f2:	jbe    0x427a5d
  4279f4:	jb     0x427a65
  4279f6:	outs   dx,BYTE PTR ds:[rsi]
  4279f7:	ins    DWORD PTR es:[rdi],dx
  4279f8:	outs   dx,BYTE PTR gs:[rsi]
  4279fa:	je     0x427a1c
  4279fc:	jbe    0x427a5f
  4279fe:	jb     0x427a69
  427a00:	(bad)  
  427a01:	(bad)  
  427a02:	ins    BYTE PTR es:[rdi],dx
  427a03:	gs jae 0x427a10
  427a06:	add    BYTE PTR [rbp+0x6e],al
  427a09:	je     0x427a70
  427a0b:	jb     0x427a2d
  427a0d:	push   rax
  427a0e:	rex.WB
  427a0f:	rex.WRX cmp r12b,BYTE PTR [rax]
  427a12:	add    BYTE PTR [rax],ch
  427a14:	jne    0x427a84
  427a16:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  427a1a:	outs   dx,BYTE PTR ds:[rsi]
  427a1b:	sub    DWORD PTR [rax],eax
	...
  427a41:	add    BYTE PTR [rax],al
  427a43:	add    BYTE PTR [rdi],cl
  427a45:	(bad)  
	...
  427a4e:	add    DWORD PTR [rax],eax
	...
  427a80:	outs   dx,BYTE PTR ds:[esi]
  427a82:	jne    0x427af8
  427a84:	ins    BYTE PTR es:[rdi],dx
  427a85:	jae    0x427ab4
  427a87:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  427a8b:	fs gs (bad) 
  427a8e:	jne    0x427af7
  427a90:	and    BYTE PTR [rbx],dh
  427a92:	cs xor al,0x2e
  427a95:	xor    DWORD PTR [rdi],esi
  427a97:	or     al,BYTE PTR [rbx+0x6f]
  427a9a:	jo     0x427b15
  427a9c:	jb     0x427b07
  427a9e:	addr32 push 0x43282074
  427aa4:	sub    DWORD PTR [rax],esp
  427aa6:	xor    dh,BYTE PTR [rax]
  427aa8:	xor    BYTE PTR [rax],dh
  427aaa:	sub    eax,0x36313032
  427aaf:	and    BYTE PTR [rsi+0x72],al
  427ab2:	gs and BYTE PTR gs:[rbx+0x6f],dl
  427ab7:	data16 je 0x427b31
  427aba:	(bad)  
  427abb:	jb     0x427b22
  427abd:	and    BYTE PTR [rsi+0x6f],al
  427ac0:	jne    0x427b30
  427ac2:	fs (bad) 
  427ac4:	je     0x427b2f
  427ac6:	outs   dx,DWORD PTR ds:[rsi]
  427ac7:	outs   dx,BYTE PTR ds:[rsi]
  427ac8:	sub    al,0x20
  427aca:	(bad)  
  427acb:	outs   dx,BYTE PTR ds:[rsi]
  427acc:	and    BYTE PTR fs:[rdi+0x74],ch
  427ad0:	push   0x2c737265
  427ad5:	and    BYTE PTR [rcx+0x6c],ah
  427ad8:	ins    BYTE PTR es:[rdi],dx
  427ad9:	and    BYTE PTR [rdx+0x69],dh
  427adc:	addr32 push 0x72207374
  427ae2:	gs jae 0x427b4a
  427ae5:	jb     0x427b5d
  427ae7:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  427aee:	jae    0x427b10
  427af0:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  427af7:	and    BYTE PTR [rbx+0x6f],dh
  427afa:	data16 je 0x427b74
  427afd:	(bad)  
  427afe:	jb     0x427b65
  427b00:	and    BYTE PTR cs:[rcx+0x74],cl
  427b04:	and    BYTE PTR [rcx+0x73],ch
  427b07:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  427b0b:	outs   dx,BYTE PTR gs:[rsi]
  427b0d:	jae    0x427b74
  427b0f:	and    BYTE PTR fs:[rsi+0x6f],ah
  427b13:	jb     0x427b35
  427b15:	jne    0x427b8a
  427b17:	gs sub al,0x20
  427b1a:	ins    DWORD PTR es:[rdi],dx
  427b1b:	outs   dx,DWORD PTR ds:[rsi]
  427b1c:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  427b24:	outs   dx,DWORD PTR ds:[rsi]
  427b25:	outs   dx,BYTE PTR ds:[rsi]
  427b26:	and    BYTE PTR [rcx+0x6e],ah
  427b29:	or     dh,BYTE PTR fs:[rdx+0x65]
  427b2d:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  427b35:	je     0x427ba0
  427b37:	outs   dx,DWORD PTR ds:[rsi]
  427b38:	outs   dx,BYTE PTR ds:[rsi]
  427b39:	and    BYTE PTR [rbp+0x6e],dh
  427b3c:	fs gs jb 0x427b60
  427b40:	je     0x427baa
  427b42:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  427b47:	ins    DWORD PTR es:[rdi],dx
  427b48:	jae    0x427b6a
  427b4a:	outs   dx,DWORD PTR ds:[rsi]
  427b4b:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427b50:	and    BYTE PTR [rdi+0x4e],al
  427b53:	push   rbp
  427b54:	and    BYTE PTR [rdi+0x65],al
  427b57:	outs   dx,BYTE PTR ds:[rsi]
  427b58:	gs jb  0x427bbc
  427b5b:	ins    BYTE PTR es:[rdi],dx
  427b5c:	and    BYTE PTR [rax+0x75],dl
  427b5f:	(bad)  
  427b60:	ins    BYTE PTR es:[rdi],dx
  427b61:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427b68:	outs   dx,BYTE PTR ds:[rsi]
  427b69:	jae    0x427bd0
  427b6b:	sub    al,0xa
  427b6d:	jbe    0x427bd4
  427b6f:	jb     0x427be4
  427b71:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  427b78:	jb     0x427b9a
  427b7a:	ins    BYTE PTR es:[rdi],dx
  427b7b:	(bad)  
  427b7c:	je     0x427be3
  427b7e:	jb     0x427ba0
  427b80:	cmp    al,0x68
  427b82:	je     0x427bf8
  427b84:	jo     0x427bc0
  427b86:	(bad)  
  427b87:	(bad)  
  427b88:	outs   dx,BYTE PTR ds:[esi]
  427b8a:	jne    0x427bba
  427b8c:	outs   dx,DWORD PTR ds:[rsi]
  427b8d:	jb     0x427bf6
  427b8f:	(bad)  
  427b90:	ins    BYTE PTR es:[rdi],dx
  427b91:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  427b98:	(bad)  
  427b99:	addr32 jo 0x427c08
  427b9c:	cs push 0x3e6c6d74
  427ba2:	or     al,BYTE PTR [rax]
  427ba4:	outs   dx,BYTE PTR ds:[esi]
  427ba6:	jne    0x427c1c
  427ba8:	ins    BYTE PTR es:[rdi],dx
  427ba9:	jae    0x427bd8
  427bab:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  427baf:	fs gs (bad) 
  427bb2:	jne    0x427c1b
  427bb4:	and    BYTE PTR [rcx+0x73],ch
  427bb7:	and    BYTE PTR [rsi+0x72],ah
  427bba:	gs and BYTE PTR gs:[rbx+0x6f],dh
  427bbf:	data16 je 0x427c39
  427bc2:	(bad)  
  427bc3:	jb     0x427c2a
  427bc5:	cmp    ah,BYTE PTR [rax]
  427bc7:	jns    0x427c38
  427bc9:	jne    0x427beb
  427bcb:	movsxd esp,DWORD PTR [rcx+0x6e]
  427bce:	and    BYTE PTR [rdx+0x65],dh
  427bd1:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  427bd9:	je     0x427c40
  427bdb:	and    BYTE PTR [rcx+0x74],ch
  427bde:	and    BYTE PTR [rcx+0x6e],ah
  427be1:	fs (bad) 
  427be3:	outs   dx,DWORD PTR ds:[rsi]
  427be4:	jb     0x427c06
  427be6:	ins    DWORD PTR es:[rdi],dx
  427be7:	outs   dx,DWORD PTR ds:[rsi]
  427be8:	imul   esp,DWORD PTR fs:[rsi+0x79],0xa746920
  427bf0:	jne    0x427c60
  427bf2:	fs gs jb 0x427c16
  427bf6:	je     0x427c60
  427bf8:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  427bfd:	ins    DWORD PTR es:[rdi],dx
  427bfe:	jae    0x427c20
  427c00:	outs   dx,DWORD PTR ds:[rsi]
  427c01:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427c06:	and    BYTE PTR [rdi+0x4e],al
  427c09:	push   rbp
  427c0a:	and    BYTE PTR [rdi+0x65],al
  427c0d:	outs   dx,BYTE PTR ds:[rsi]
  427c0e:	gs jb  0x427c72
  427c11:	ins    BYTE PTR es:[rdi],dx
  427c12:	and    BYTE PTR [rax+0x75],dl
  427c15:	(bad)  
  427c16:	ins    BYTE PTR es:[rdi],dx
  427c17:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427c1e:	outs   dx,BYTE PTR ds:[rsi]
  427c1f:	jae    0x427c86
  427c21:	and    BYTE PTR [rcx+0x73],ah
  427c24:	and    BYTE PTR [rax+0x75],dh
  427c27:	(bad)  
  427c28:	ins    BYTE PTR es:[rdi],dx
  427c29:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  427c30:	jns    0x427c52
  427c32:	je     0x427c9c
  427c34:	and    BYTE PTR gs:[rsi+0x72],al
  427c38:	gs or  dl,BYTE PTR gs:[rbx+0x6f]
  427c3d:	data16 je 0x427cb7
  427c40:	(bad)  
  427c41:	jb     0x427ca8
  427c43:	and    BYTE PTR [rsi+0x6f],al
  427c46:	jne    0x427cb6
  427c48:	fs (bad) 
  427c4a:	je     0x427cb5
  427c4c:	outs   dx,DWORD PTR ds:[rsi]
  427c4d:	outs   dx,BYTE PTR ds:[rsi]
  427c4e:	sub    al,0x20
  427c50:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  427c59:	jb     0x427cce
  427c5b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  427c62:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427c67:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  427c6b:	outs   dx,BYTE PTR gs:[rsi]
  427c6d:	jae    0x427cd4
  427c6f:	sub    al,0x20
  427c71:	outs   dx,DWORD PTR ds:[rsi]
  427c72:	jb     0x427c94
  427c74:	sub    BYTE PTR [rcx+0x74],ah
  427c77:	and    BYTE PTR [rcx+0x6f],bh
  427c7a:	jne    0x427cee
  427c7c:	and    BYTE PTR [rdi+0x70],ch
  427c7f:	je     0x427cea
  427c81:	outs   dx,DWORD PTR ds:[rsi]
  427c82:	outs   dx,BYTE PTR ds:[rsi]
  427c83:	sub    DWORD PTR [rdx],ecx
  427c85:	(bad)  
  427c86:	outs   dx,BYTE PTR ds:[rsi]
  427c87:	jns    0x427ca9
  427c89:	ins    BYTE PTR es:[rdi],dx
  427c8a:	(bad)  
  427c8b:	je     0x427cf2
  427c8d:	jb     0x427caf
  427c8f:	jbe    0x427cf6
  427c91:	jb     0x427d06
  427c93:	imul   ebp,DWORD PTR [rdi+0x6e],0x670a0a2e
  427c9a:	outs   dx,BYTE PTR ds:[rsi]
  427c9b:	jne    0x427d11
  427c9d:	ins    BYTE PTR es:[rdi],dx
  427c9e:	jae    0x427ccd
  427ca0:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  427ca4:	fs gs (bad) 
  427ca7:	jne    0x427d10
  427ca9:	and    BYTE PTR [rcx+0x73],ch
  427cac:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  427cb0:	je     0x427d24
  427cb2:	imul   esp,DWORD PTR [rdx+0x75],0x20646574
  427cb9:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  427cc0:	push   0x2065706f
  427cc5:	je     0x427d2f
  427cc7:	(bad)  
  427cc8:	je     0x427cea
  427cca:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  427cd2:	(bad)  
  427cd3:	and    BYTE PTR gs:[rbp+0x73],dh
  427cd7:	gs data16 jne 0x427d47
  427cdb:	sub    al,0x20
  427cdd:	(bad)  
  427cde:	jne    0x427d54
  427ce0:	or     dl,BYTE PTR [rdi+0x49]
  427ce3:	push   rsp
  427ce4:	rex.W
  427ce5:	rex.WRXB push r13
  427ce7:	push   rsp
  427ce8:	and    BYTE PTR [rcx+0x4e],al
  427ceb:	pop    rcx
  427cec:	and    BYTE PTR [rdi+0x41],dl
  427cef:	push   rdx
  427cf0:	push   rdx
  427cf1:	rex.B
  427cf2:	rex.WRX push rsp
  427cf4:	pop    rcx
  427cf5:	cmp    esp,DWORD PTR [rax]
  427cf7:	ja     0x427d62
  427cf9:	je     0x427d63
  427cfb:	outs   dx,DWORD PTR ds:[rsi]
  427cfc:	jne    0x427d72
  427cfe:	and    BYTE PTR [rbp+0x76],ah
  427d01:	outs   dx,BYTE PTR gs:[rsi]
  427d03:	and    BYTE PTR [rax+rbp*2+0x65],dh
  427d07:	and    BYTE PTR [rcx+0x6d],ch
  427d0a:	jo     0x427d78
  427d0c:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  427d13:	jb     0x427d76
  427d15:	outs   dx,BYTE PTR ds:[rsi]
  427d16:	je     0x427d91
  427d18:	and    BYTE PTR [rdi+0x66],ch
  427d1b:	and    BYTE PTR [rbp+0x45],cl
  427d1e:	push   rdx
  427d1f:	rex.XB
  427d20:	rex.W
  427d21:	rex.B
  427d22:	rex.WRX push rsp
  427d24:	rex.B
  427d25:	rex.X
  427d26:	rex.WB
  427d27:	rex.WR
  427d28:	rex.WB push r12
  427d2a:	pop    rcx
  427d2b:	or     ch,BYTE PTR [rdi+0x72]
  427d2e:	and    BYTE PTR [rsi+0x49],al
  427d31:	push   rsp
  427d32:	rex.WRX
  427d33:	rex.RB push r11
  427d35:	push   rbx
  427d36:	and    BYTE PTR [rsi+0x4f],al
  427d39:	push   rdx
  427d3a:	and    BYTE PTR [rcx+0x20],al
  427d3d:	push   rax
  427d3e:	push   r10
  427d40:	push   rsp
  427d41:	rex.WB
  427d42:	rex.XB push r13
  427d44:	rex.WR
  427d45:	push   r10
  427d47:	and    BYTE PTR [rax+0x55],dl
  427d4a:	push   rdx
  427d4b:	push   rax
  427d4c:	rex.WRXB push r11
  427d4e:	rex.RB
  427d4f:	and    BYTE PTR cs:[rax],ah
  427d52:	push   rbx
  427d53:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  427d59:	and    BYTE PTR [rdi+0x4e],al
  427d5c:	push   rbp
  427d5d:	and    BYTE PTR [rdi+0x65],al
  427d60:	outs   dx,BYTE PTR ds:[rsi]
  427d61:	gs jb  0x427dc5
  427d64:	ins    BYTE PTR es:[rdi],dx
  427d65:	and    BYTE PTR [rax+0x75],dl
  427d68:	(bad)  
  427d69:	ins    BYTE PTR es:[rdi],dx
  427d6a:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427d71:	outs   dx,BYTE PTR ds:[rsi]
  427d72:	jae    0x427dd9
  427d74:	or     ah,BYTE PTR [rsi+0x6f]
  427d77:	jb     0x427d99
  427d79:	ins    DWORD PTR es:[rdi],dx
  427d7a:	outs   dx,DWORD PTR ds:[rsi]
  427d7b:	jb     0x427de2
  427d7d:	and    BYTE PTR [rbp+riz*2+0x74],ah
  427d81:	(bad)  
  427d82:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  427d8a:	jne    0x427dac
  427d8c:	jae    0x427df6
  427d8e:	outs   dx,DWORD PTR ds:[rsi]
  427d8f:	jne    0x427dfd
  427d91:	and    BYTE PTR fs:[rax+0x61],ch
  427d95:	jbe    0x427dfc
  427d97:	and    BYTE PTR [rdx+0x65],dh
  427d9a:	movsxd esp,DWORD PTR [rbp+0x69]
  427d9d:	jbe    0x427e04
  427d9f:	and    BYTE PTR fs:[rcx+0x20],ah
  427da3:	movsxd ebp,DWORD PTR [rdi+0x70]
  427da6:	jns    0x427dc8
  427da8:	outs   dx,DWORD PTR ds:[rsi]
  427da9:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427dae:	and    BYTE PTR [rdi+0x4e],al
  427db1:	push   rbp
  427db2:	and    BYTE PTR [rdi+0x65],al
  427db5:	outs   dx,BYTE PTR ds:[rsi]
  427db6:	gs jb  0x427e1a
  427db9:	ins    BYTE PTR es:[rdi],dx
  427dba:	and    BYTE PTR [rax+0x75],dl
  427dbd:	(bad)  
  427dbe:	ins    BYTE PTR es:[rdi],dx
  427dbf:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427dc6:	outs   dx,BYTE PTR ds:[rsi]
  427dc7:	jae    0x427e2e
  427dc9:	and    BYTE PTR [rcx+0x6c],ah
  427dcc:	outs   dx,DWORD PTR ds:[rsi]
  427dcd:	outs   dx,BYTE PTR ds:[rsi]
  427dce:	or     dh,BYTE PTR [edi+0x69]
  427dd2:	je     0x427e3c
  427dd4:	and    BYTE PTR [rax+rbp*2+0x69],dh
  427dd8:	jae    0x427dfa
  427dda:	jo     0x427e4e
  427ddc:	outs   dx,DWORD PTR ds:[rsi]
  427ddd:	addr32 jb 0x427e41
  427de0:	ins    DWORD PTR es:[rdi],dx
  427de1:	and    BYTE PTR cs:[rax],ah
  427de4:	rex.WB
  427de5:	data16 and BYTE PTR [rsi+0x6f],ch
  427de9:	je     0x427e17
  427deb:	and    BYTE PTR [rbx+0x65],dh
  427dee:	and    BYTE PTR gs:[rax+rbp*2],bh
  427df2:	je     0x427e68
  427df4:	jo     0x427e30
  427df6:	(bad)  
  427df7:	(bad)  
  427df8:	ja     0x427e71
  427dfa:	ja     0x427e2a
  427dfc:	outs   dx,BYTE PTR ds:[esi]
  427dfe:	jne    0x427e2e
  427e00:	outs   dx,DWORD PTR ds:[rsi]
  427e01:	jb     0x427e6a
  427e03:	(bad)  
  427e04:	ins    BYTE PTR es:[rdi],dx
  427e05:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  427e0c:	(bad)  
  427e0d:	ds or  al,BYTE PTR cs:[rax]
  427e11:	rex.RB outs dx,BYTE PTR ds:[rsi]
  427e13:	(bad)  
  427e14:	(bad)  
  427e15:	ins    BYTE PTR es:[rdi],dx
  427e16:	and    BYTE PTR gs:[rbp+riz*2+0x62],ah
  427e1b:	jne    0x427e84
  427e1d:	imul   ebp,DWORD PTR [esi+0x67],0x42454400
  427e25:	push   rbp
  427e26:	add    BYTE PTR [r13+r12*2+0x62],r12b
  427e2b:	jne    0x427e94
  427e2d:	add    BYTE PTR [rbp+0x6f],cl
  427e30:	jb     0x427e97
  427e32:	and    BYTE PTR [rsi+0x65],dh
  427e35:	jb     0x427e99
  427e37:	outs   dx,DWORD PTR ds:[rsi]
  427e38:	jae    0x427e9f
  427e3a:	and    BYTE PTR [rdi+0x75],ch
  427e3d:	je     0x427eaf
  427e3f:	jne    0x427eb5
  427e41:	add    BYTE PTR [rsi+0x45],dl
  427e44:	push   rdx
  427e45:	rex.X
  427e46:	rex.WRXB push r11
  427e48:	add    BYTE PTR [r14+0x65],r14b
  427e4c:	jb     0x427eb0
  427e4e:	outs   dx,DWORD PTR ds:[rsi]
  427e4f:	jae    0x427eb6
  427e51:	add    BYTE PTR [rax+rbp*2+0x65],dl
  427e55:	and    BYTE PTR [rax+0x6f],dh
  427e58:	jb     0x427ece
  427e5a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  427e5e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  427e61:	outs   dx,BYTE PTR ds:[rsi]
  427e62:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  427e67:	outs   dx,DWORD PTR ds:[rsi]
  427e68:	add    BYTE PTR [rax+0x4f],dl
  427e6b:	push   rdx
  427e6c:	push   rsp
  427e6d:	add    BYTE PTR [rax+0x6f],dh
  427e70:	jb     0x427ee6
  427e72:	add    BYTE PTR [rcx+0x6e],ah
  427e75:	and    BYTE PTR [rcx+0x6c],ah
  427e78:	imul   esp,DWORD PTR [rcx+0x73],0x726f6620
  427e7f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  427e83:	and    BYTE PTR [rdi],ah
  427e85:	jae    0x427efb
  427e87:	(bad)  
  427e88:	jb     0x427efe
  427e8a:	je     0x427ef8
  427e8c:	jae    0x427ebb
  427e8e:	jo     0x427f02
  427e90:	outs   dx,DWORD PTR ds:[rsi]
  427e91:	je     0x427f02
  427e93:	(bad)  
  427e94:	and    BYTE PTR [rdi+0x70],ch
  427e97:	je     0x427f02
  427e99:	outs   dx,DWORD PTR ds:[rsi]
  427e9a:	outs   dx,BYTE PTR ds:[rsi]
  427e9b:	add    BYTE PTR [rcx+0x70],ah
  427e9e:	jo     0x427ecd
  427ea0:	jo     0x427f14
  427ea2:	outs   dx,DWORD PTR ds:[rsi]
  427ea3:	je     0x427f14
  427ea5:	add    BYTE PTR [rax+rbp*2+0x65],dl
  427ea9:	and    BYTE PTR [rcx+0x70],ah
  427eac:	jo     0x427f1a
  427eae:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  427eb5:	and    BYTE PTR [rax+0x72],dh
  427eb8:	outs   dx,DWORD PTR ds:[rsi]
  427eb9:	je     0x427f2a
  427ebb:	movsxd ebp,DWORD PTR [rdi+0x6c]
  427ebe:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  427ec2:	(bad)  
  427ec3:	and    BYTE PTR gs:[rbp+0x73],dh
  427ec7:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  427ecd:	outs   dx,DWORD PTR ds:[rsi]
  427ece:	(bad)  
  427ecf:	je     0x427f32
  427ed1:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  427ed8:	jae    0x427f3f
  427eda:	jb     0x427f52
  427edc:	gs jb  0x427f06
  427edf:	jae    0x427f01
  427ee1:	movsxd esp,DWORD PTR [rbp+0x72]
  427ee4:	je     0x427f4f
  427ee6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427eec:	or     ch,BYTE PTR [rax]
  427eee:	push   0x73707474
  427ef3:	sub    al,0x20
  427ef5:	data16 je 0x427f68
  427ef8:	sub    al,0x20
  427efa:	jae    0x427f69
  427efc:	je     0x427f6e
  427efe:	sub    al,0x20
  427f00:	imul   ebp,DWORD PTR [rbp+0x61],0x6c202c70
  427f07:	fs (bad) 
  427f09:	jo     0x427f37
  427f0b:	and    BYTE PTR [rax+0x6d],bh
  427f0e:	jo     0x427f80
  427f10:	sub    DWORD PTR [rax],eax
  427f12:	push   rbx
  427f13:	push   rsp
  427f14:	push   r10
  427f16:	push   rsp
  427f17:	push   rsp
  427f18:	rex.WR push rbx
  427f1a:	pop    rdi
  427f1b:	push   rax
  427f1c:	push   rdx
  427f1d:	rex.WRXB push r12
  427f1f:	rex.WRXB add BYTE PTR [r11+0x74],r14b
  427f23:	(bad)  
  427f24:	jb     0x427f9a
  427f26:	je     0x427f94
  427f28:	jae    0x427f57
  427f2a:	jo     0x427f9e
  427f2c:	outs   dx,DWORD PTR ds:[rsi]
  427f2d:	je     0x427f9e
  427f2f:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  427f33:	jo     0x427fa1
  427f35:	(bad)  
  427f36:	jns    0x427f58
  427f38:	gs js  0x427faf
  427f3b:	outs   dx,BYTE PTR gs:[rsi]
  427f3d:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  427f43:	(bad)  
  427f44:	and    BYTE PTR gs:[ecx+0x6e],ch
  427f49:	outs   dx,WORD PTR ds:[rsi]
  427f4b:	jb     0x427fba
  427f4d:	(bad)  
  427f4e:	je     0x427fb9
  427f50:	outs   dx,DWORD PTR ds:[rsi]
  427f51:	outs   dx,BYTE PTR ds:[rsi]
  427f52:	and    BYTE PTR [rcx+0x6e],ah
  427f55:	and    BYTE PTR fs:[rbp+0x78],ah
  427f59:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  427f61:	gs js  0x427fd8
  427f64:	outs   dx,BYTE PTR gs:[rsi]
  427f66:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  427f6c:	(bad)  
  427f6d:	and    BYTE PTR gs:[ecx+0x6e],ch
  427f72:	outs   dx,WORD PTR ds:[rsi]
  427f74:	jb     0x427fe3
  427f76:	(bad)  
  427f77:	je     0x427fe2
  427f79:	outs   dx,DWORD PTR ds:[rsi]
  427f7a:	outs   dx,BYTE PTR ds:[rsi]
  427f7b:	and    BYTE PTR [rax+0x61],dh
  427f7e:	jae    0x427ff3
  427f80:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  427f86:	jne    0x427fa8
  427f88:	jo     0x427feb
  427f8a:	addr32 gs jb 0x427f8e
  427f8e:	ins    DWORD PTR es:[rdi],dx
  427f8f:	outs   dx,DWORD PTR ds:[rsi]
  427f90:	jb     0x427ff7
  427f92:	sub    eax,0x706c6568
  427f97:	add    BYTE PTR [rdi+0x75],ch
  427f9a:	je     0x42800c
  427f9c:	jne    0x428012
  427f9e:	and    BYTE PTR [rsi+0x65],dh
  427fa1:	jb     0x428016
  427fa3:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  427faa:	outs   dx,DWORD PTR ds:[rsi]
  427fab:	jb     0x42801a
  427fad:	(bad)  
  427fae:	je     0x428019
  427fb0:	outs   dx,DWORD PTR ds:[rsi]
  427fb1:	outs   dx,BYTE PTR ds:[rsi]
  427fb2:	and    BYTE PTR [rcx+0x6e],ah
  427fb5:	and    BYTE PTR fs:[rbp+0x78],ah
  427fb9:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  427fc1:	outs   dx,DWORD PTR ds:[rsi]
  427fc2:	outs   dx,BYTE PTR ds:[rsi]
  427fc3:	add    BYTE PTR [rdi+0x4e],al
  427fc6:	push   rbp
  427fc7:	push   rsp
  427fc8:	rex.WR push rbx
  427fca:	pop    rdi
  427fcb:	rex.XB
  427fcc:	rex.WR
  427fcd:	rex.WB pop r15
  427fcf:	rex.R
  427fd0:	rex.RB
  427fd1:	rex.X push rbp
  427fd3:	rex.RXB add BYTE PTR [r15+0x6e],r12b
  427fd7:	jne    0x42804d
  427fd9:	ins    BYTE PTR es:[rdi],dx
  427fda:	jae    0x428009
  427fdc:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  427fe0:	fs gs (bad) 
  427fe3:	jne    0x42804c
  427fe5:	and    BYTE PTR [rip+0x756e4720],ch        # 0x75b0c70b
  427feb:	push   rsp
  427fec:	rex.WR push rbx
  427fee:	and    BYTE PTR [rbp+riz*2+0x62],ah
  427ff2:	jne    0x42805b
  427ff4:	and    BYTE PTR [rbx+0x6c],ah
  427ff7:	imul   esp,DWORD PTR [rbp+0x6e],0x73550a74
  427ffe:	(bad)  
  427fff:	cmp    ah,BYTE PTR gs:[eax]
  428003:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209da07c
  428009:	sub    eax,0x616c663c
  42800e:	and    BYTE PTR ds:[ebx+0x3c],bl
  428013:	jbe    0x428076
  428015:	ins    BYTE PTR es:[rdi],dx
  428016:	ds pop rbp
  428018:	and    BYTE PTR [rax+riz*1+0x2d],bh
  42801c:	sub    eax,0x6d616e3c
  428021:	gs ds pop rbx
  428024:	jnp    0x428063
  428026:	jl     0x428048
  428028:	jge    0x428066
  42802a:	jbe    0x42808d
  42802c:	ins    BYTE PTR es:[rdi],dx
  42802d:	ds pop rbp
  42802f:	and    BYTE PTR [rbp+0x2e],bl
  428032:	cs and BYTE PTR cs:[rdx],cl
  428036:	add    BYTE PTR [rdx+0x75],ah
  428039:	addr32 jae 0x42807c
  42803c:	outs   dx,BYTE PTR ds:[esi]
  42803e:	jne    0x4280b4
  428040:	ins    BYTE PTR es:[rdi],dx
  428041:	jae    0x428071
  428043:	outs   dx,DWORD PTR ds:[rsi]
  428044:	jb     0x4280ad
  428046:	add    BYTE PTR [rdx],cl
  428048:	add    BYTE PTR [rsp+rcx*2+0x53],dl
  42804c:	and    BYTE PTR [rbp+riz*2+0x62],ah
  428050:	jne    0x4280b9
  428052:	and    BYTE PTR [rbx+0x6c],ah
  428055:	imul   esp,DWORD PTR [rbp+0x6e],0x20202e74
  42805c:	rex.WB je 0x42807f
  42805f:	jae    0x4280c6
  428061:	je     0x4280d6
  428063:	and    BYTE PTR [rbp+0x70],dh
  428066:	and    BYTE PTR [rbp+0x75],ch
  428069:	ins    BYTE PTR es:[rdi],dx
  42806a:	je     0x4280d5
  42806c:	jo     0x4280da
  42806e:	and    BYTE PTR gs:[rsp+rcx*2+0x53],dl
  428073:	and    BYTE PTR [rbx+0x6f],ah
  428076:	outs   dx,BYTE PTR ds:[rsi]
  428077:	outs   dx,BYTE PTR ds:[rsi]
  428078:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42807d:	outs   dx,BYTE PTR ds:[rsi]
  42807e:	jae    0x4280a0
  428080:	je     0x4280f1
  428082:	and    BYTE PTR [rcx+0x20],ah
  428085:	jae    0x4280ec
  428087:	jb     0x4280ff
  428089:	gs jb  0x4280ac
  42808c:	(bad)  
  42808d:	outs   dx,BYTE PTR ds:[rsi]
  42808e:	or     dh,BYTE PTR fs:[rcx+0x75]
  428092:	gs jb  0x4280fe
  428095:	gs jae 0x4280b8
  428098:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x61706163
  4280a0:	(bad)  
  4280a1:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2e736569
  4280a9:	and    BYTE PTR [rax],ah
  4280ab:	rex.WB je 0x4280ce
  4280ae:	ja     0x428111
  4280b0:	jae    0x4280d2
  4280b2:	movsxd esi,DWORD PTR [rdx+0x65]
  4280b5:	(bad)  
  4280b6:	je     0x42811d
  4280b8:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4280bd:	(bad)  
  4280be:	jae    0x428133
  4280c0:	imul   esi,DWORD PTR [rbx+0x74],0x206e6920
  4280c7:	fs gs (bad) 
  4280ca:	jne    0x428133
  4280cc:	imul   ebp,DWORD PTR [esi+0x67],0x756e4720
  4280d4:	push   rsp
  4280d5:	rex.WR push rbx
  4280d7:	sub    al,0xa
  4280d9:	(bad)  
  4280da:	jne    0x428150
  4280dc:	and    BYTE PTR [rcx+0x74],ch
  4280df:	and    BYTE PTR [rbp+0x69],ch
  4280e2:	addr32 push 0x65622074
  4280e8:	and    BYTE PTR [rbp+0x73],dh
  4280eb:	gs data16 jne 0x42815b
  4280ef:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4280f3:	gs js  0x42816a
  4280f6:	jb     0x428159
  4280f8:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  4280fc:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  428100:	and    BYTE PTR [rbx+0x65],dh
  428103:	jb     0x42817b
  428105:	gs jb  0x42812f
  428108:	jae    0x42812a
  42810a:	movsxd esp,DWORD PTR [rcx+0x70]
  42810d:	(bad)  
  42810e:	(bad)  
  42810f:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2e736569
  428117:	and    BYTE PTR [rax],ah
  428119:	rex.WB je 0x42813c
  42811c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42811f:	outs   dx,BYTE PTR ds:[rsi]
  428120:	movsxd esi,DWORD PTR gs:[rbx+rsi*2+0xa]
  428125:	je     0x428196
  428127:	and    BYTE PTR [rcx+0x20],ah
  42812a:	push   rsp
  42812b:	rex.WR push rbx
  42812d:	and    BYTE PTR [rbx+0x65],dh
  428130:	jb     0x4281a8
  428132:	gs jb  0x428161
  428135:	and    BYTE PTR [rax+0x65],dh
  428138:	jb     0x4281a0
  42813a:	outs   dx,DWORD PTR ds:[rsi]
  42813b:	jb     0x4281aa
  42813d:	jae    0x42815f
  42813f:	je     0x4281a6
  428141:	jae    0x4281b7
  428143:	jae    0x428165
  428145:	(bad)  
  428146:	outs   dx,BYTE PTR ds:[rsi]
  428147:	and    BYTE PTR fs:[rax+0x72],dh
  42814b:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  428152:	and    BYTE PTR [rbx+0x65],dh
  428155:	jb     0x4281cd
  428157:	gs jb  0x428181
  42815a:	jae    0x42817c
  42815c:	movsxd esp,DWORD PTR [rcx+0x70]
  42815f:	(bad)  
  428160:	(bad)  
  428161:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2e736569
  428169:	and    BYTE PTR [rax],ah
  42816b:	rex.WB
  42816c:	data16 or ah,BYTE PTR [rbx+0x61]
  428170:	ins    BYTE PTR es:[rdi],dx
  428171:	ins    BYTE PTR es:[rdi],dx
  428172:	gs and BYTE PTR fs:[rdi+0x69],dh
  428177:	je     0x4281e1
  428179:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42817d:	and    BYTE PTR [rax+0x2d],ah
  428180:	jbe    0x4281a9
  428182:	and    BYTE PTR [rax+0x61],dh
  428185:	jb     0x4281e8
  428187:	ins    DWORD PTR es:[rdi],dx
  428188:	gs je  0x4281f0
  42818b:	jb     0x4281ad
  42818d:	ins    DWORD PTR es:[rdi],dx
  42818e:	outs   dx,DWORD PTR ds:[rsi]
  42818f:	jb     0x4281f6
  428191:	and    BYTE PTR [rbx+0x68],ah
  428194:	movsxd ebp,DWORD PTR gs:[rbx+0x73]
  428198:	and    BYTE PTR [rdi+0x69],dh
  42819b:	ins    BYTE PTR es:[rdi],dx
  42819c:	ins    BYTE PTR es:[rdi],dx
  42819d:	and    BYTE PTR [rdx+0x65],ah
  4281a0:	and    BYTE PTR [rax+0x65],dh
  4281a3:	jb     0x42820b
  4281a5:	outs   dx,DWORD PTR ds:[rsi]
  4281a6:	jb     0x428215
  4281a8:	gs fs and BYTE PTR cs:[rax],ah
  4281ad:	rex.XB (bad) 
  4281af:	outs   dx,BYTE PTR ds:[rsi]
  4281b0:	and    BYTE PTR [rdx+0x65],ah
  4281b3:	and    BYTE PTR [rbp+0x73],dh
  4281b6:	gs or  dh,BYTE PTR fs:[rdi+rbp*2+0x20]
  4281bc:	movsxd ebp,DWORD PTR [rax+0x65]
  4281bf:	movsxd ebp,DWORD PTR [rbx+0x20]
  4281c2:	outs   dx,WORD PTR ds:[rsi]
  4281c4:	jb     0x4281e6
  4281c6:	jae    0x42822d
  4281c8:	jb     0x428240
  4281ca:	gs jb  0x428240
  4281cd:	and    BYTE PTR [rdi+0x69],dh
  4281d0:	je     0x42823a
  4281d2:	and    BYTE PTR [rbx+0x70],dh
  4281d5:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  4281d9:	ins    BYTE PTR es:[rdi],dx
  4281da:	and    BYTE PTR [rsi+0x65],ch
  4281dd:	gs fs jae 0x428201
  4281e1:	outs   dx,DWORD PTR ds:[rsi]
  4281e2:	jb     0x428204
  4281e4:	(bad)  
  4281e5:	jne    0x42824e
  4281e7:	jae    0x428217
  4281e9:	or     al,BYTE PTR [rax]
  4281eb:	outs   dx,BYTE PTR ds:[esi]
  4281ed:	jne    0x428263
  4281ef:	ins    BYTE PTR es:[rdi],dx
  4281f0:	jae    0x42821f
  4281f2:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  4281f6:	fs gs (bad) 
  4281f9:	jne    0x428262
  4281fb:	and    BYTE PTR [rbx],dh
  4281fd:	cs xor al,0x2e
  428200:	xor    DWORD PTR [rdi],esi
  428202:	add    BYTE PTR [rbp+0x73],dl
  428205:	(bad)  
  428206:	cmp    ah,BYTE PTR gs:[eax]
  42820a:	outs   dx,BYTE PTR ds:[esi]
  42820c:	jne    0x428282
  42820e:	ins    BYTE PTR es:[rdi],dx
  42820f:	jae    0x42823e
  428211:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2d]
  428215:	fs gs (bad) 
  428218:	jne    0x428281
  42821a:	and    BYTE PTR [rbx+0x6f],bl
  42821d:	jo     0x428293
  42821f:	imul   ebp,DWORD PTR [rdi+0x6e],0x68205d73
  428226:	outs   dx,DWORD PTR ds:[rsi]
  428227:	jae    0x42829d
  428229:	outs   dx,BYTE PTR ds:[rsi]
  42822a:	(bad)  
  42822b:	ins    DWORD PTR es:[rdi],dx
  42822c:	or     ah,BYTE PTR gs:[rdi+0x6e]
  428230:	jne    0x4282a6
  428232:	ins    BYTE PTR es:[rdi],dx
  428233:	jae    0x428262
  428235:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x20]
  428239:	sub    eax,0x6c65682d
  42823e:	jo     0x428260
  428240:	outs   dx,WORD PTR ds:[rsi]
  428242:	jb     0x428264
  428244:	jne    0x4282b9
  428246:	(bad)  
  428247:	and    BYTE PTR gs:[ecx+0x6e],ch
  42824c:	jae    0x4282c2
  42824e:	jb     0x4282c5
  428250:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428254:	outs   dx,BYTE PTR ds:[rsi]
  428255:	jae    0x428285
  428257:	or     al,BYTE PTR [rax]
	...
  42827d:	add    BYTE PTR [rax],al
  42827f:	add    BYTE PTR [rax],ah
  428281:	cmp    eax,0x64250020
  428286:	add    BYTE PTR [rdx+rcx*1+0x0],bl
  42828a:	or     ah,BYTE PTR [rbp+0x78]
  42828d:	imul   esi,DWORD PTR [rax+riz*1+0x25],0x6b000a64
  428295:	gs jns 0x42830f
  428298:	outs   dx,DWORD PTR ds:[rsi]
  428299:	jb     0x4282ff
  42829b:	add    BYTE PTR [rbx+0x65],dh
  42829e:	je     0x4282cd
  4282a0:	ins    DWORD PTR es:[rdi],dx
  4282a1:	gs ins DWORD PTR es:[rdi],dx
  4282a3:	(bad)  
  4282a4:	gs jb  0x42831a
  4282a7:	push   0x74007069
  4282ac:	jb     0x428323
  4282ae:	add    BYTE PTR gs:[rsi+0x61],ah
  4282b2:	ins    BYTE PTR es:[rdi],dx
  4282b3:	jae    0x42831a
  4282b5:	add    BYTE PTR [rdi+rbp*1],bh
  4282b8:	and    eax,0xa3e73
  4282bd:	add    BYTE PTR [rax],al
  4282bf:	add    BYTE PTR [rax+rcx*1],dh
  4282c2:	(bad)  
  4282c3:	jmp    QWORD PTR [rdx]
  4282c5:	(bad)  
  4282c6:	(bad)  
  4282c7:	inc    DWORD PTR [rax+0xfffe07]
  4282cd:	or     dh,bh
  4282cf:	inc    DWORD PTR [rax+0x50fffe07]
  4282d5:	(bad)  
  4282d6:	(bad)  
  4282d7:	push   QWORD PTR [rcx+0x6]
  4282da:	(bad)  
  4282db:	jmp    QWORD PTR [rax]
  4282dd:	pop    rbx
  4282de:	(bad)  
  4282df:	jb     0x428348
  4282e1:	pop    rbp
  4282e2:	add    BYTE PTR [rax+0x4d],cl
  4282e5:	push   rbx
  4282e6:	add    BYTE PTR [rax+riz*1],ch
  4282e9:	add    BYTE PTR [rax],ah
  4282eb:	and    BYTE PTR [rax],ah
  4282ed:	sub    eax,0x6325
  4282f2:	add    BYTE PTR [rax],al
  4282f4:	add    BYTE PTR [rax],al
  4282f6:	add    BYTE PTR [rax],al
  4282f8:	outs   dx,BYTE PTR ds:[rsi]
  4282f9:	outs   dx,DWORD PTR ds:[rsi]
  4282fa:	and    BYTE PTR [rbp+0x65],ch
  4282fd:	ins    DWORD PTR es:[rdi],dx
  4282fe:	outs   dx,DWORD PTR ds:[rsi]
  4282ff:	jb     0x42837a
  428301:	and    BYTE PTR [rsi+0x6f],ah
  428304:	jb     0x428326
  428306:	movsxd ebp,DWORD PTR [rax+0x61]
  428309:	jb     0x428338
  42830b:	ins    DWORD PTR es:[rdi],dx
  42830c:	(bad)  
  42830d:	jo     0x42837f
  42830f:	gs jb  0x428332
  428312:	jae    0x428384
  428314:	(bad)  
  428315:	outs   dx,BYTE PTR ds:[rsi]
  428316:	and    BYTE PTR [rbp+0x61],ch
  428319:	jo     0x428325
  42831b:	add    BYTE PTR [rip+0x73252f73],ah        # 0x7367b294
  428321:	add    BYTE PTR [rax+0x41],dl
  428324:	push   rsp
  428325:	rex.W add BYTE PTR [rip+0x73250073],spl        # 0x7367839f
  42832c:	cmp    eax,0x27007325
  428331:	xor    eax,0x351bfffe
  428336:	(bad)  
  428337:	dec    DWORD PTR [rdi]
  428339:	xor    eax,0x3503fffe
  42833e:	(bad)  
  42833f:	push   rdi
  428341:	xor    al,0xfe
  428343:	(bad)  
  428344:	jmp    0x42837a
  428346:	(bad)  
  428347:	(bad)  
  428348:	fbstp  TBYTE PTR [rsi+rdi*8]
  42834b:	call   rbx
  42834d:	xor    al,0xfe
  42834f:	push   QWORD PTR [rbx]
  428351:	xor    eax,0x2d2dfffe
  428356:	and    eax,0x732573
  42835b:	and    eax,0x732573
  428360:	jge    0x42839a
  428362:	(bad)  
  428363:	dec    DWORD PTR [rcx-0x6a0001c8]
  428369:	cmp    dh,bh
  42836b:	jmp    QWORD PTR [rcx-0x520001c8]
  428371:	cmp    dh,bh
  428373:	(bad)  
  428374:	mov    ecx,0xc5fffe38
  428379:	cmp    dh,bh
  42837b:	push   QWORD PTR [rcx+0x38]
  42837e:	(bad)  
  42837f:	(bad)  
  428380:	fnsave [rsi]
  428382:	(bad)  
  428383:	jmp    QWORD PTR [rdx+rdi*1]
  428386:	(bad)  
  428387:	(bad)  
  428388:	out    dx,eax
  428389:	cmp    bh,dh
  42838b:	dec    DWORD PTR [rbx+rdi*1-0x2]
  42838f:	inc    DWORD PTR [rbx+rdi*1+0x3bb8fffe]
  428396:	(bad)  
  428397:	(bad)  
  428398:	in     al,dx
  428399:	cmp    edi,esi
  42839b:	(bad)  
  42839c:	jl     0x4283d8
  42839e:	(bad)  
  42839f:	jmp    rbx
  4283a1:	cmp    bh,dh
  4283a3:	call   FWORD PTR [rdi+0x3d]
  4283a6:	(bad)  
  4283a7:	call   QWORD PTR [rbx+0x3d]
  4283aa:	(bad)  
  4283ab:	inc    DWORD PTR [rdi+0x3d]
  4283ae:	(bad)  
  4283af:	inc    DWORD PTR [rdi+0x3d]
  4283b2:	(bad)  
  4283b3:	(bad)  
  4283b4:	cmp    edi,DWORD PTR [rip+0x3d2ffffe]        # 0x3d7283b8
  4283ba:	(bad)  
  4283bb:	jmp    FWORD PTR [rdi]
  4283bd:	cmp    eax,0x3d23fffe
  4283c2:	(bad)  
  4283c3:	jmp    QWORD PTR [rbx]
  4283c5:	cmp    eax,0x4d59fffe
  4283ca:	push   rdi
  4283cb:	add    BYTE PTR [rax],r8b
  4283ce:	add    BYTE PTR [rax],al
  4283d0:	or     BYTE PTR [rcx-0x2],0xff
  4283d4:	xchg   ebx,eax
  4283d5:	rex.WX (bad) 
  4283d7:	call   QWORD PTR [rbx-0x6c0001b6]
  4283dd:	rex.WX (bad) 
  4283df:	call   QWORD PTR [rbx-0x6c0001b6]
  4283e5:	rex.WX (bad) 
  4283e7:	call   QWORD PTR [rbx-0x6c0001b6]
  4283ed:	rex.WX (bad) 
  4283ef:	call   QWORD PTR [rbx-0x6c0001b6]
  4283f5:	rex.WX (bad) 
  4283f7:	jmp    QWORD PTR [rax+0x49]
  4283fa:	(bad)  
  4283fb:	call   QWORD PTR [rbx-0x6c0001b6]
  428401:	rex.WX (bad) 
  428403:	push   QWORD PTR [rax-0x6c0001b7]
  428409:	rex.WX (bad) 
  42840b:	call   QWORD PTR [rbx-0x6c0001b6]
  428411:	rex.WX (bad) 
  428413:	call   QWORD PTR [rbx-0x6c0001b6]
  428419:	rex.WX (bad) 
  42841b:	call   QWORD PTR [rbx-0x6c0001b6]
  428421:	rex.WX (bad) 
  428423:	call   QWORD PTR [rbx-0x6c0001b6]
  428429:	rex.WX (bad) 
  42842b:	call   QWORD PTR [rbx-0x6c0001b6]
  428431:	rex.WX (bad) 
  428433:	call   QWORD PTR [rbx-0x6c0001b6]
  428439:	rex.WX (bad) 
  42843b:	call   QWORD PTR [rbx-0x6c0001b6]
  428441:	rex.WX (bad) 
  428443:	call   QWORD PTR [rbx-0x6c0001b6]
  428449:	rex.WX (bad) 
  42844b:	call   QWORD PTR [rbx-0x6c0001b6]
  428451:	rex.WX (bad) 
  428453:	call   QWORD PTR [rbx-0x6c0001b6]
  428459:	rex.WX (bad) 
  42845b:	call   QWORD PTR [rbx-0x6c0001b6]
  428461:	rex.WX (bad) 
  428463:	call   QWORD PTR [rbx-0x6c0001b6]
  428469:	rex.WX (bad) 
  42846b:	call   QWORD PTR [rbx-0x6c0001b6]
  428471:	rex.WX (bad) 
  428473:	call   QWORD PTR [rbx-0x6c0001b6]
  428479:	rex.WX (bad) 
  42847b:	call   QWORD PTR [rbx-0x6c0001b6]
  428481:	rex.WX (bad) 
  428483:	call   QWORD PTR [rbx-0x6c0001b6]
  428489:	rex.WX (bad) 
  42848b:	call   QWORD PTR [rbx-0x3f0001b6]
  428491:	rex.WB (bad) 
  428493:	inc    eax
  428495:	rex.WB (bad) 
  428497:	inc    eax
  428499:	rex.WB (bad) 
  42849b:	inc    eax
  42849d:	rex.WB (bad) 
  42849f:	inc    eax
  4284a1:	rex.WB (bad) 
  4284a3:	inc    eax
  4284a5:	rex.WB (bad) 
  4284a7:	inc    eax
  4284a9:	rex.WB (bad) 
  4284ab:	inc    eax
  4284ad:	rex.WB (bad) 
  4284af:	call   QWORD PTR [rbx-0x6c0001b6]
  4284b5:	rex.WX (bad) 
  4284b7:	call   QWORD PTR [rbx-0x6c0001b6]
  4284bd:	rex.WX (bad) 
  4284bf:	call   QWORD PTR [rbx-0x6c0001b6]
  4284c5:	rex.WX (bad) 
  4284c7:	call   QWORD PTR [rbx-0x6c0001b6]
  4284cd:	rex.WX (bad) 
  4284cf:	call   QWORD PTR [rbx-0x6c0001b6]
  4284d5:	rex.WX (bad) 
  4284d7:	call   QWORD PTR [rbx-0x6c0001b6]
  4284dd:	rex.WX (bad) 
  4284df:	call   QWORD PTR [rbx-0x6c0001b6]
  4284e5:	rex.WX (bad) 
  4284e7:	call   QWORD PTR [rbx-0x6c0001b6]
  4284ed:	rex.WX (bad) 
  4284ef:	call   QWORD PTR [rbx-0x6c0001b6]
  4284f5:	rex.WX (bad) 
  4284f7:	call   QWORD PTR [rbx-0x6c0001b6]
  4284fd:	rex.WX (bad) 
  4284ff:	call   QWORD PTR [rbx-0x6c0001b6]
  428505:	rex.WX (bad) 
  428507:	call   QWORD PTR [rbx-0x6c0001b6]
  42850d:	rex.WX (bad) 
  42850f:	call   QWORD PTR [rbx-0x6c0001b6]
  428515:	rex.WX (bad) 
  428517:	call   QWORD PTR [rbx-0x6c0001b6]
  42851d:	rex.WX (bad) 
  42851f:	call   QWORD PTR [rbx-0x6c0001b6]
  428525:	rex.WX (bad) 
  428527:	call   QWORD PTR [rbx-0x6c0001b6]
  42852d:	rex.WX (bad) 
  42852f:	call   QWORD PTR [rax]
  428531:	rex.WX (bad) 
  428533:	call   QWORD PTR [rbx-0x6c0001b6]
  428539:	rex.WX (bad) 
  42853b:	call   QWORD PTR [rbx-0x6c0001b6]
  428541:	rex.WX (bad) 
  428543:	call   QWORD PTR [rbx-0x6c0001b6]
  428549:	rex.WX (bad) 
  42854b:	call   QWORD PTR [rbx-0x6c0001b6]
  428551:	rex.WX (bad) 
  428553:	call   QWORD PTR [rax-0x5e0001b6]
  428559:	rex.WX (bad) 
  42855b:	call   QWORD PTR [rbx-0x6c0001b6]
  428561:	rex.WX (bad) 
  428563:	call   QWORD PTR [rbx-0x4f0001b6]
  428569:	rex.WX (bad) 
  42856b:	call   QWORD PTR [rbx-0x6c0001b6]
  428571:	rex.WX (bad) 
  428573:	call   QWORD PTR [rbx-0x6c0001b6]
  428579:	rex.WX (bad) 
  42857b:	call   QWORD PTR [rbx-0x6c0001b6]
  428581:	rex.WX (bad) 
  428583:	call   QWORD PTR [rbx-0x3f0001b6]
  428589:	rex.WX (bad) 
  42858b:	call   QWORD PTR [rbx-0x6c0001b6]
  428591:	rex.WX (bad) 
  428593:	call   QWORD PTR [rbx-0x6f0001b6]
  428599:	rex.WB (bad) 
  42859b:	call   QWORD PTR [rbx-0x5f0001b6]
  4285a1:	rex.WB (bad) 
  4285a3:	call   QWORD PTR [rbx-0x7b0001b6]
  4285a9:	rex.WB (bad) 
  4285ab:	call   QWORD PTR [rbx+0x10fffe4a]
  4285b1:	rex.WX (bad) 
  4285b3:	jmp    FWORD PTR [rdx]
  4285b5:	(bad)  
  4285b6:	add    BYTE PTR [rip+0x3e2d],ch        # 0x42c3e9
  4285bc:	rex.RB
  4285bd:	rex.WRB (bad) 
  4285bf:	push   QWORD PTR [rsi]
  4285c1:	rex.WRXB (bad) 
  4285c3:	push   QWORD PTR [rsi]
  4285c5:	rex.WRXB (bad) 
  4285c7:	push   QWORD PTR [rsi]
  4285c9:	rex.WRXB (bad) 
  4285cb:	push   QWORD PTR [rsi]
  4285cd:	rex.WRXB (bad) 
  4285cf:	push   QWORD PTR [rsi]
  4285d1:	rex.WRXB (bad) 
  4285d3:	push   QWORD PTR [rsi]
  4285d5:	rex.WRXB (bad) 
  4285d7:	push   QWORD PTR [rsi]
  4285d9:	rex.WRXB (bad) 
  4285db:	push   QWORD PTR [rsi]
  4285dd:	rex.WRXB (bad) 
  4285df:	push   QWORD PTR [rsi]
  4285e1:	rex.WRXB (bad) 
  4285e3:	inc    DWORD PTR [rcx+0x4d]
  4285e6:	(bad)  
  4285e7:	push   QWORD PTR [rsi]
  4285e9:	rex.WRXB (bad) 
  4285eb:	push   QWORD PTR [rsi]
  4285ed:	rex.WRXB (bad) 
  4285ef:	push   QWORD PTR [rsi]
  4285f1:	rex.WRXB (bad) 
  4285f3:	push   QWORD PTR [rsi]
  4285f5:	rex.WRXB (bad) 
  4285f7:	push   QWORD PTR [rsi]
  4285f9:	rex.WRXB (bad) 
  4285fb:	push   QWORD PTR [rsi]
  4285fd:	rex.WRXB (bad) 
  4285ff:	push   QWORD PTR [rsi]
  428601:	rex.WRXB (bad) 
  428603:	push   QWORD PTR [rsi]
  428605:	rex.WRXB (bad) 
  428607:	push   QWORD PTR [rsi]
  428609:	rex.WRXB (bad) 
  42860b:	push   QWORD PTR [rsi]
  42860d:	rex.WRXB (bad) 
  42860f:	push   QWORD PTR [rsi]
  428611:	rex.WRXB (bad) 
  428613:	push   QWORD PTR [rsi]
  428615:	rex.WRXB (bad) 
  428617:	push   QWORD PTR [rsi]
  428619:	rex.WRXB (bad) 
  42861b:	push   QWORD PTR [rsi]
  42861d:	rex.WRXB (bad) 
  42861f:	push   QWORD PTR [rsi]
  428621:	rex.WRXB (bad) 
  428623:	push   QWORD PTR [rsi]
  428625:	rex.WRXB (bad) 
  428627:	push   QWORD PTR [rsi]
  428629:	rex.WRXB (bad) 
  42862b:	push   QWORD PTR [rsi]
  42862d:	rex.WRXB (bad) 
  42862f:	push   QWORD PTR [rsi]
  428631:	rex.WRXB (bad) 
  428633:	push   QWORD PTR [rsi]
  428635:	rex.WRXB (bad) 
  428637:	push   QWORD PTR [rsi]
  428639:	rex.WRXB (bad) 
  42863b:	push   QWORD PTR [rsi]
  42863d:	rex.WRXB (bad) 
  42863f:	push   QWORD PTR [rsi]
  428641:	rex.WRXB (bad) 
  428643:	push   QWORD PTR [rdi+rcx*2+0x4f36fffe]
  42864a:	(bad)  
  42864b:	push   QWORD PTR [rsi]
  42864d:	rex.WRXB (bad) 
  42864f:	push   QWORD PTR [rsi]
  428651:	rex.WRXB (bad) 
  428653:	push   QWORD PTR [rsi]
  428655:	rex.WRXB (bad) 
  428657:	push   QWORD PTR [rdi+rcx*2+0x4f36fffe]
  42865e:	(bad)  
  42865f:	push   QWORD PTR [rsi]
  428661:	rex.WRXB (bad) 
  428663:	push   QWORD PTR [rsi]
  428665:	rex.WRXB (bad) 
  428667:	push   QWORD PTR [rsi]
  428669:	rex.WRXB (bad) 
  42866b:	inc    DWORD PTR [rcx+0x4d]
  42866e:	(bad)  
  42866f:	push   QWORD PTR [rsi]
  428671:	rex.WRXB (bad) 
  428673:	push   QWORD PTR [rsi]
  428675:	rex.WRXB (bad) 
  428677:	push   QWORD PTR [rsi]
  428679:	rex.WRXB (bad) 
  42867b:	push   QWORD PTR [rsi]
  42867d:	rex.WRXB (bad) 
  42867f:	push   QWORD PTR [rsi]
  428681:	rex.WRXB (bad) 
  428683:	push   QWORD PTR [rsi]
  428685:	rex.WRXB (bad) 
  428687:	push   QWORD PTR [rsi]
  428689:	rex.WRXB (bad) 
  42868b:	push   QWORD PTR [rsi]
  42868d:	rex.WRXB (bad) 
  42868f:	push   QWORD PTR [rsi]
  428691:	rex.WRXB (bad) 
  428693:	push   QWORD PTR [rsi]
  428695:	rex.WRXB (bad) 
  428697:	push   QWORD PTR [rsi]
  428699:	rex.WRXB (bad) 
  42869b:	push   QWORD PTR [rsi]
  42869d:	rex.WRXB (bad) 
  42869f:	push   QWORD PTR [rsi]
  4286a1:	rex.WRXB (bad) 
  4286a3:	(bad)  
  4286a4:	jmp    0x4286f4
  4286a6:	(bad)  
  4286a7:	push   QWORD PTR [rsi]
  4286a9:	rex.WRXB (bad) 
  4286ab:	push   QWORD PTR [rsi]
  4286ad:	rex.WRXB (bad) 
  4286af:	(bad)  
  4286b0:	jmp    0x428700
  4286b2:	(bad)  
  4286b3:	inc    DWORD PTR [rdi+rdx*2+0x5437fffe]
  4286ba:	(bad)  
  4286bb:	jmp    FWORD PTR [rdi]
  4286bd:	push   rcx
  4286be:	(bad)  
  4286bf:	inc    DWORD PTR [rbx+rdx*2+0x512ffffe]
  4286c6:	(bad)  
  4286c7:	(bad)  
  4286c8:	in     al,dx
  4286c9:	push   rdx
  4286ca:	(bad)  
  4286cb:	jmp    FWORD PTR [rax+0x52]
  4286ce:	(bad)  
  4286cf:	push   QWORD PTR [rbx+0x74]
  4286d2:	(bad)  
  4286d3:	je     0x4286d5
  4286d5:	outs   dx,DWORD PTR ds:[rsi]
  4286d6:	jo     0x42873d
  4286d8:	outs   dx,BYTE PTR ds:[rsi]
  4286d9:	add    BYTE PTR [rsi+0x6f],ah
  4286dc:	jo     0x428743
  4286de:	outs   dx,BYTE PTR ds:[rsi]
  4286df:	add    BYTE PTR [rbx+0x48],dl
  4286e2:	rex.RB
  4286e3:	rex.WR
  4286e4:	rex.WR add BYTE PTR [rdi],r13b
  4286e7:	(bad)  
  4286e8:	imul   ebp,DWORD PTR [rsi+0x2f],0x68736162
  4286ef:	add    BYTE PTR [rdx+0x0],dh
  4286f2:	data16 jae 0x428769
  4286f5:	(bad)  
  4286f6:	je     0x4286f8
  4286f8:	ja     0x4286fa
  4286fa:	data16 jb 0x428762
  4286fd:	outs   dx,DWORD PTR ds:[rsi]
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[rsi]
  428701:	add    BYTE PTR [rip+0x756c],ah        # 0x42fc73
  428707:	add    BYTE PTR [rax+0x43fffe71],bh
  42870d:	jb     0x42870d
  42870f:	inc    DWORD PTR [rbx+0x72]
  428712:	(bad)  
  428713:	inc    DWORD PTR [rbx+0x72]
  428716:	(bad)  
  428717:	inc    DWORD PTR [rbx+0x72]
  42871a:	(bad)  
  42871b:	inc    DWORD PTR [rbx+0x72]
  42871e:	(bad)  
  42871f:	inc    DWORD PTR [rbx+0x72]
  428722:	(bad)  
  428723:	push   QWORD PTR [rbx]
  428725:	jb     0x428725
  428727:	jmp    QWORD PTR [rbx]
  428729:	jb     0x428729
  42872b:	call   QWORD PTR [rbx]
  42872d:	jb     0x42872d
  42872f:	(bad)  
  428730:	jg     0x4287a3
  428732:	(bad)  
  428733:	inc    DWORD PTR [rbx]
  428735:	jb     0x428735
  428737:	push   rbx
  428739:	jno    0x428739
  42873b:	jmp    rbx
  42873d:	jno    0x42873d
  42873f:	push   QWORD PTR [rdx+0x65]
  428742:	(bad)  
  428743:	outs   dx,DWORD PTR fs:[rsi]
  428745:	outs   dx,BYTE PTR ds:[rsi]
  428746:	ins    BYTE PTR es:[rdi],dx
  428747:	jns    0x428769
  428749:	and    eax,0x2e005f73
  42874e:	sub    al,BYTE PTR [rax]
  428750:	and    esp,DWORD PTR [rax]
  428752:	and    BYTE PTR [rax],al
  428754:	and    eax,0xba000a73
  428759:	jl     0x428759
  42875b:	(bad)  
  42875c:	call   0x394285dd
  428761:	jge    0x428761
  428763:	jmp    FWORD PTR [rax+0x7d]
  428766:	(bad)  
  428767:	call   FWORD PTR [rax-0x3000183]
  42876d:	jge    0x42876d
  42876f:	(bad)  
  428770:	clc    
  428771:	jnp    0x428771
  428773:	call   FWORD PTR [rbp+0x72fffe7c]
  428779:	gs jae 0x4287e1
  42877c:	je     0x4287ac
  42877e:	movsxd eax,DWORD PTR [rax]
  428780:	xor    BYTE PTR [rax],ah
  428782:	cmp    eax,0x31203d
  428787:	push   r13
  428789:	push   rsp
  42878a:	rex.WRXB
  42878b:	rex.WRXB push r8
  42878d:	push   rsp
  42878e:	push   rbx
  42878f:	pop    rdi
  428790:	push   rbp
  428791:	push   rbx
  428792:	rex.B
  428793:	rex.RXB
  428794:	add    BYTE PTR [r8],r8b
  428797:	add    BYTE PTR [rax-0x6e],ch
  42879a:	(bad)  
  42879b:	(bad)  
  42879c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287a2:	(bad)  
  4287a3:	(bad)  
  4287a4:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287aa:	(bad)  
  4287ab:	(bad)  
  4287ac:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287b2:	(bad)  
  4287b3:	(bad)  
  4287b4:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287ba:	(bad)  
  4287bb:	(bad)  
  4287bc:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287c2:	(bad)  
  4287c3:	jmp    FWORD PTR [rbp+0x38fffe92]
  4287c9:	xchg   ebx,eax
  4287ca:	(bad)  
  4287cb:	(bad)  
  4287cc:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287d2:	(bad)  
  4287d3:	(bad)  
  4287d4:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287da:	(bad)  
  4287db:	(bad)  
  4287dc:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287e2:	(bad)  
  4287e3:	jmp    FWORD PTR [rcx]
  4287e5:	xchg   edx,eax
  4287e6:	(bad)  
  4287e7:	(bad)  
  4287e8:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287ee:	(bad)  
  4287ef:	(bad)  
  4287f0:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287f6:	(bad)  
  4287f7:	(bad)  
  4287f8:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  4287fe:	(bad)  
  4287ff:	(bad)  
  428800:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428806:	(bad)  
  428807:	(bad)  
  428808:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  42880e:	(bad)  
  42880f:	(bad)  
  428810:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428816:	(bad)  
  428817:	jmp    FWORD PTR [rax-0x6e]
  42881a:	(bad)  
  42881b:	(bad)  
  42881c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428822:	(bad)  
  428823:	(bad)  
  428824:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  42882a:	(bad)  
  42882b:	(bad)  
  42882c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428832:	(bad)  
  428833:	(bad)  
  428834:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  42883a:	(bad)  
  42883b:	(bad)  
  42883c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428842:	(bad)  
  428843:	jmp    FWORD PTR [rbp+0x38fffe92]
  428849:	xchg   ebx,eax
  42884a:	(bad)  
  42884b:	(bad)  
  42884c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428852:	(bad)  
  428853:	(bad)  
  428854:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  42885a:	(bad)  
  42885b:	(bad)  
  42885c:	cmp    BYTE PTR [rbx-0x6cc70002],dl
  428862:	(bad)  
  428863:	jmp    FWORD PTR [rcx]
  428865:	xchg   edx,eax
  428866:	(bad)  
  428867:	push   QWORD PTR [rdx+0x65]
  42886a:	(bad)  
  42886b:	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  428870:	outs   dx,DWORD PTR ds:[rsi]
  428871:	jo     0x4288e7
  428873:	jae    0x428875
  428875:	and    eax,0x50005f73
  42887a:	rex.WRXB push r11
  42887c:	rex.WB pop r8
  42887e:	rex.WR pop rcx
  428880:	pop    rdi
  428881:	rex.XB
  428882:	rex.WRXB push r10
  428884:	push   rdx
  428885:	rex.RB
  428886:	rex.XB push r12
  428888:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca7f0bb
  42888e:	jo     0x428890
  428890:	xor    al,0x31
  428892:	xor    DWORD PTR cs:[rax],eax
  428895:	and    eax,0x75252d25
  42889a:	jae    0x4288bc
  42889c:	and    eax,0xa7325
  4288a1:	and    BYTE PTR [rax],al
  4288a3:	rex.WR
  4288a4:	rex.WRXB
  4288a5:	rex.WRX
  4288a6:	rex.RXB push r13
  4288a8:	push   rbx
  4288a9:	rex.B
  4288aa:	rex.RXB
  4288ab:	add    BYTE PTR [r13+0x53],r10b
  4288af:	rex.B
  4288b0:	rex.RXB
  4288b1:	add    BYTE PTR [r14+0x45],r10b
  4288b5:	push   rdx
  4288b6:	push   rbx
  4288b7:	rex.WB
  4288b8:	rex.WRXB
  4288b9:	rex.WRX add BYTE PTR [rdi+0x6e],r12b
  4288bd:	jne    0x4288bf
  4288bf:	(bad)  
  4288c0:	jne    0x428936
  4288c2:	outs   dx,DWORD PTR ds:[rsi]
  4288c3:	outs   dx,DWORD PTR ds:[rsi]
  4288c4:	jo     0x42893a
  4288c6:	jae    0x4288c8
  4288c8:	outs   dx,BYTE PTR ds:[rsi]
  4288c9:	outs   dx,DWORD PTR ds:[rsi]
  4288ca:	pop    rdi
  4288cb:	ins    DWORD PTR es:[rdi],dx
  4288cc:	imul   esi,DWORD PTR [rbx+0x75],0x755f6573
  4288d3:	jae    0x428936
  4288d5:	add    BYTE PTR gs:[ebp+0x69],ch
  4288da:	jae    0x428951
  4288dc:	jae    0x428943
  4288de:	pop    rdi
  4288df:	jne    0x428954
  4288e1:	(bad)  
  4288e2:	add    BYTE PTR gs:[ebx+0x6f],ah
  4288e7:	ins    DWORD PTR es:[rdi],dx
  4288e8:	jo     0x42895f
  4288ea:	je     0x428951
	...
  428900:	add    eax,DWORD PTR [rax]
  428902:	add    BYTE PTR [rax],al
  428904:	add    BYTE PTR [rax],al
  428906:	add    BYTE PTR [rax],al
  428908:	add    BYTE PTR [rax],dl
  42890a:	add    BYTE PTR [rax],al
  42890c:	add    BYTE PTR [rax],al
  42890e:	add    BYTE PTR [rax],al
  428910:	mov    ebx,0x4288
  428915:	add    BYTE PTR [rax],al
  428917:	add    BYTE PTR [rax],cl
  428919:	add    BYTE PTR [rax],al
  42891b:	add    BYTE PTR [rax],al
  42891d:	add    BYTE PTR [rax],al
  42891f:	add    bh,bh
  428921:	out    dx,eax
  428922:	(bad)  
  428923:	inc    DWORD PTR [rax]
  428925:	add    BYTE PTR [rax],al
  428927:	add    BYTE PTR [rdi+0x4288],bh
  42892d:	add    BYTE PTR [rax],al
  42892f:	add    BYTE PTR [rdi],cl
	...
  428939:	add    BYTE PTR [rax],al
  42893c:	add    BYTE PTR [rax],al
  42893e:	add    BYTE PTR [rax],al
  428940:	enter  0x4288,0x0
  428944:	add    BYTE PTR [rax],al
  428946:	add    BYTE PTR [rax],al
  428948:	or     al,0x0
  42894a:	add    BYTE PTR [rax],al
  42894c:	add    BYTE PTR [rax],al
  42894e:	add    BYTE PTR [rax],al
  428950:	(bad)  
  428951:	mov    edi,0xffff
  428956:	add    BYTE PTR [rax],al
  428958:	fmul   DWORD PTR [rax+0x42]
  42895e:	add    BYTE PTR [rax],al
  428960:	(bad)  
	...
  428969:	add    BYTE PTR [rax],dl
  42896b:	add    BYTE PTR [rax],al
  42896d:	add    BYTE PTR [rax],al
  42896f:	add    ch,ah
  428971:	mov    BYTE PTR [rdx+0x0],al
	...
  428980:	mov    al,0x15
  428982:	add    BYTE PTR [r8],al
  428985:	add    BYTE PTR [rax],al
  428987:	add    BYTE PTR [rax+0x4118],ah
  42898d:	add    BYTE PTR [rax],al
  42898f:	add    BYTE PTR [rcx+0x6d],ah
  428992:	jo     0x4289cf
  428994:	add    BYTE PTR [rsp+rsi*2+0x3b],ch
  428998:	add    BYTE PTR [rdi+0x74],ah
  42899b:	cmp    eax,DWORD PTR [rax]
  42899d:	data16 cmp ax,WORD PTR [rax]
  4289a1:	push   0x63003b74
  4289a6:	jb     0x4289e3
  4289a8:	add    BYTE PTR [rsi+0x74],dh
  4289ab:	cmp    eax,DWORD PTR [rax]
  4289ad:	(bad)  
  4289ae:	gs ins BYTE PTR es:[rdi],dx
  4289b0:	cmp    eax,DWORD PTR [rax]
  4289b2:	outs   dx,BYTE PTR ds:[rsi]
  4289b3:	ins    BYTE PTR es:[rdi],dx
  4289b4:	cmp    eax,DWORD PTR [rax]
  4289b6:	jae    0x428a28
  4289b8:	(bad)  
  4289b9:	movsxd esp,DWORD PTR [rbp+0x3b]
  4289bc:	add    BYTE PTR [rcx+0x75],dh
  4289bf:	outs   dx,DWORD PTR ds:[rsi]
  4289c0:	je     0x4289fd
  4289c2:	add    BYTE PTR [rcx+0x70],ah
  4289c5:	outs   dx,DWORD PTR ds:[rsi]
  4289c6:	jae    0x428a03
	...
  428a00:	nop
  428a01:	mov    DWORD PTR [rdx+0x0],eax
  428a04:	add    BYTE PTR [rax],al
  428a06:	add    BYTE PTR [rax],al
  428a08:	add    al,0x0
  428a0a:	add    BYTE PTR es:[rax],al
  428a0d:	add    BYTE PTR [rax],al
  428a0f:	add    BYTE PTR [rbp+0x4289],dl
  428a15:	add    BYTE PTR [rax],al
  428a17:	add    BYTE PTR [rbx],al
  428a19:	add    BYTE PTR [rax+rax*1],bh
  428a1c:	add    BYTE PTR [rax],al
  428a1e:	add    BYTE PTR [rax],al
  428a20:	cdq    
  428a21:	mov    DWORD PTR [rdx+0x0],eax
  428a24:	add    BYTE PTR [rax],al
  428a26:	add    BYTE PTR [rax],al
  428a28:	add    eax,DWORD PTR [rax]
  428a2a:	add    BYTE PTR ds:[rax],al
  428a2d:	add    BYTE PTR [rax],al
  428a2f:	add    BYTE PTR [rbp+0x4289],bl
  428a35:	add    BYTE PTR [rax],al
  428a37:	add    BYTE PTR [rbx],al
  428a39:	add    BYTE PTR [rax+rax*1],cl
  428a3c:	add    BYTE PTR [rax],al
  428a3e:	add    BYTE PTR [rax],al
  428a40:	movabs eax,ds:0x300000000004289
  428a49:	add    BYTE PTR [rcx],cl
  428a4b:	add    BYTE PTR [rax],al
  428a4d:	add    BYTE PTR [rax],al
  428a4f:	add    BYTE PTR [rbp+0x4289],ah
  428a55:	add    BYTE PTR [rax],al
  428a57:	add    BYTE PTR [rbx],al
  428a59:	add    BYTE PTR [rip+0x0],cl        # 0x428a5f
  428a5f:	add    BYTE PTR [rcx+0x4289],ch
  428a65:	add    BYTE PTR [rax],al
  428a67:	add    BYTE PTR [rbx],al
  428a69:	add    BYTE PTR [rbx],cl
  428a6b:	add    BYTE PTR [rax],al
  428a6d:	add    BYTE PTR [rax],al
  428a6f:	add    BYTE PTR [rbp+0x4289],ch
  428a75:	add    BYTE PTR [rax],al
  428a77:	add    BYTE PTR [rax+rax*1],al
  428a7a:	(bad)  
  428a7b:	add    BYTE PTR [rax],al
  428a7d:	add    BYTE PTR [rax],al
  428a7f:	add    BYTE PTR [rdx+0x4289],dh
  428a85:	add    BYTE PTR [rax],al
  428a87:	add    BYTE PTR [rbx],al
  428a89:	add    BYTE PTR [rdx],cl
  428a8b:	add    BYTE PTR [rax],al
  428a8d:	add    BYTE PTR [rax],al
  428a8f:	add    BYTE PTR [rsi+0x4289],dh
  428a95:	add    BYTE PTR [rax],al
  428a97:	add    BYTE PTR [rsi],al
  428a99:	add    BYTE PTR [rax],ah
  428a9b:	add    BYTE PTR [rax],al
  428a9d:	add    BYTE PTR [rax],al
  428a9f:	add    BYTE PTR [rbp+0x4289],bh
  428aa5:	add    BYTE PTR [rax],al
  428aa7:	add    BYTE PTR [rip+0x2200],al        # 0x42acad
  428aad:	add    BYTE PTR [rax],al
  428aaf:	add    bl,al
  428ab1:	mov    DWORD PTR [rdx+0x0],eax
  428ab4:	add    BYTE PTR [rax],al
  428ab6:	add    BYTE PTR [rax],al
  428ab8:	add    eax,0x2700
  428abd:	add    BYTE PTR [rax],al
  428abf:	add    BYTE PTR [rdx],cl
  428ac1:	or     cl,BYTE PTR [rdx]
  428ac3:	or     cl,BYTE PTR [rdx]
  428ac5:	or     cl,BYTE PTR [rdx]
  428ac7:	or     cl,BYTE PTR [rdx]
  428ac9:	or     cl,BYTE PTR [rdx]
  428acb:	or     cl,BYTE PTR [rdx]
  428acd:	or     cl,BYTE PTR [rdx]
  428acf:	or     cl,BYTE PTR [rdx]
  428ad1:	or     cl,BYTE PTR [rdx]
  428ad3:	or     cl,BYTE PTR [rdx]
  428ad5:	or     cl,BYTE PTR [rdx]
  428ad7:	or     cl,BYTE PTR [rdx]
  428ad9:	or     cl,BYTE PTR [rdx]
  428adb:	or     cl,BYTE PTR [rdx]
  428add:	or     cl,BYTE PTR [rdx]
  428adf:	or     cl,BYTE PTR [rdx]
  428ae1:	or     cl,BYTE PTR [rdx]
  428ae3:	or     cl,BYTE PTR [rdx]
  428ae5:	or     cl,BYTE PTR [rdx]
  428ae7:	or     cl,BYTE PTR [rdx]
  428ae9:	or     cl,BYTE PTR [rdx]
  428aeb:	or     cl,BYTE PTR [rdx]
  428aed:	or     cl,BYTE PTR [rdx]
  428aef:	or     cl,BYTE PTR [rdx]
  428af1:	or     cl,BYTE PTR [rdx]
  428af3:	or     cl,BYTE PTR [rdx]
  428af5:	or     cl,BYTE PTR [rdx]
  428af7:	or     cl,BYTE PTR [rdx]
  428af9:	or     cl,BYTE PTR [rdx]
  428afb:	or     cl,BYTE PTR [rdx]
  428afd:	or     cl,BYTE PTR [rdx]
  428aff:	or     cl,BYTE PTR [rdx]
  428b01:	or     cl,BYTE PTR [rdx]
  428b03:	or     cl,BYTE PTR [rdx]
  428b05:	or     cl,BYTE PTR [rdx]
  428b07:	or     cl,BYTE PTR [rdx]
  428b09:	or     cl,BYTE PTR [rdx]
  428b0b:	or     cl,BYTE PTR [rdx]
  428b0d:	or     cl,BYTE PTR [rdx]
  428b0f:	or     cl,BYTE PTR [rdx]
  428b11:	or     cl,BYTE PTR [rdx]
  428b13:	or     cl,BYTE PTR [rdx]
  428b15:	or     cl,BYTE PTR [rdx]
  428b17:	or     cl,BYTE PTR [rdx]
  428b19:	or     cl,BYTE PTR [rdx]
  428b1b:	or     cl,BYTE PTR [rdx]
  428b1d:	or     cl,BYTE PTR [rdx]
  428b1f:	or     cl,BYTE PTR [rdx]
  428b21:	or     cl,BYTE PTR [rdx]
  428b23:	add    BYTE PTR [rdx],cl
  428b25:	or     cl,BYTE PTR [rdx]
  428b27:	or     cl,BYTE PTR [rdx]
  428b29:	or     cl,BYTE PTR [rdx]
  428b2b:	add    eax,0xa0a000a
  428b30:	or     cl,BYTE PTR [rdx]
  428b32:	or     cl,BYTE PTR [rdx]
  428b34:	add    BYTE PTR [rax],al
  428b36:	or     al,BYTE PTR [rax]
  428b38:	or     cl,BYTE PTR [rdx]
  428b3a:	or     cl,BYTE PTR [rdx]
  428b3c:	or     cl,BYTE PTR [rdx]
  428b3e:	or     cl,BYTE PTR [rdx]
  428b40:	or     cl,BYTE PTR [rdx]
  428b42:	or     cl,BYTE PTR [rdx]
  428b44:	or     cl,BYTE PTR [rdx]
  428b46:	or     cl,BYTE PTR [rdx]
  428b48:	or     cl,BYTE PTR [rdx]
  428b4a:	or     cl,BYTE PTR [rdx]
  428b4c:	or     cl,BYTE PTR [rdx]
  428b4e:	or     cl,BYTE PTR [rdx]
  428b50:	or     cl,BYTE PTR [rdx]
  428b52:	or     cl,BYTE PTR [rdx]
  428b54:	or     cl,BYTE PTR [rdx]
  428b56:	or     cl,BYTE PTR [rdx]
  428b58:	or     cl,BYTE PTR [rdx]
  428b5a:	or     cl,BYTE PTR [rdx]
  428b5c:	or     cl,BYTE PTR [rdx]
  428b5e:	or     cl,BYTE PTR [rdx]
  428b60:	or     cl,BYTE PTR [rdx]
  428b62:	or     cl,BYTE PTR [rdx]
  428b64:	or     cl,BYTE PTR [rdx]
  428b66:	or     cl,BYTE PTR [rdx]
  428b68:	or     cl,BYTE PTR [rdx]
  428b6a:	or     cl,BYTE PTR [rdx]
  428b6c:	or     cl,BYTE PTR [rdx]
  428b6e:	or     cl,BYTE PTR [rdx]
  428b70:	or     cl,BYTE PTR [rdx]
  428b72:	or     cl,BYTE PTR [rdx]
  428b74:	or     cl,BYTE PTR [rdx]
  428b76:	or     cl,BYTE PTR [rdx]
  428b78:	or     cl,BYTE PTR [rdx]
  428b7a:	or     cl,BYTE PTR [rdx]
  428b7c:	or     cl,BYTE PTR [rdx]
  428b7e:	or     cl,BYTE PTR [rdx]
  428b80:	or     cl,BYTE PTR [rdx]
  428b82:	or     cl,BYTE PTR [rdx]
  428b84:	or     cl,BYTE PTR [rdx]
  428b86:	or     cl,BYTE PTR [rdx]
  428b88:	or     cl,BYTE PTR [rdx]
  428b8a:	or     cl,BYTE PTR [rdx]
  428b8c:	or     cl,BYTE PTR [rdx]
  428b8e:	or     cl,BYTE PTR [rdx]
  428b90:	or     cl,BYTE PTR [rdx]
  428b92:	or     cl,BYTE PTR [rdx]
  428b94:	or     cl,BYTE PTR [rdx]
  428b96:	or     cl,BYTE PTR [rdx]
  428b98:	or     cl,BYTE PTR [rdx]
  428b9a:	or     cl,BYTE PTR [rdx]
  428b9c:	or     cl,BYTE PTR [rdx]
  428b9e:	or     cl,BYTE PTR [rdx]
  428ba0:	or     cl,BYTE PTR [rdx]
  428ba2:	or     cl,BYTE PTR [rdx]
  428ba4:	or     cl,BYTE PTR [rdx]
  428ba6:	or     cl,BYTE PTR [rdx]
  428ba8:	or     cl,BYTE PTR [rdx]
  428baa:	or     cl,BYTE PTR [rdx]
  428bac:	or     cl,BYTE PTR [rdx]
  428bae:	or     cl,BYTE PTR [rdx]
  428bb0:	or     cl,BYTE PTR [rdx]
  428bb2:	or     cl,BYTE PTR [rdx]
  428bb4:	or     cl,BYTE PTR [rdx]
  428bb6:	or     cl,BYTE PTR [rdx]
  428bb8:	or     cl,BYTE PTR [rdx]
  428bba:	or     cl,BYTE PTR [rdx]
  428bbc:	or     cl,BYTE PTR [rdx]
  428bbe:	or     cl,BYTE PTR [rdx]
  428bc0:	adc    dl,BYTE PTR [rdx]
  428bc2:	adc    dl,BYTE PTR [rdx]
  428bc4:	adc    dl,BYTE PTR [rdx]
  428bc6:	adc    dl,BYTE PTR [rdx]
  428bc8:	adc    dl,BYTE PTR [rdx]
  428bca:	adc    dl,BYTE PTR [rdx]
  428bcc:	adc    dl,BYTE PTR [rdx]
  428bce:	adc    dl,BYTE PTR [rdx]
  428bd0:	adc    dl,BYTE PTR [rdx]
  428bd2:	adc    dl,BYTE PTR [rdx]
  428bd4:	adc    dl,BYTE PTR [rdx]
  428bd6:	adc    dl,BYTE PTR [rdx]
  428bd8:	adc    dl,BYTE PTR [rdx]
  428bda:	adc    dl,BYTE PTR [rdx]
  428bdc:	adc    dl,BYTE PTR [rdx]
  428bde:	adc    dl,BYTE PTR [rdx]
  428be0:	adc    dl,BYTE PTR [rdx]
  428be2:	adc    dl,BYTE PTR [rdx]
  428be4:	adc    dl,BYTE PTR [rdx]
  428be6:	adc    dl,BYTE PTR [rdx]
  428be8:	adc    dl,BYTE PTR [rdx]
  428bea:	adc    dl,BYTE PTR [rdx]
  428bec:	adc    dl,BYTE PTR [rdx]
  428bee:	adc    dl,BYTE PTR [rdx]
  428bf0:	adc    dl,BYTE PTR [rdx]
  428bf2:	adc    dl,BYTE PTR [rdx]
  428bf4:	adc    dl,BYTE PTR [rdx]
  428bf6:	adc    dl,BYTE PTR [rdx]
  428bf8:	adc    dl,BYTE PTR [rdx]
  428bfa:	adc    dl,BYTE PTR [rdx]
  428bfc:	adc    dl,BYTE PTR [rdx]
  428bfe:	adc    dl,BYTE PTR [rdx]
  428c00:	adc    dl,BYTE PTR [rdx]
  428c02:	adc    dl,BYTE PTR [rdx]
  428c04:	adc    dl,BYTE PTR [rdx]
  428c06:	adc    dl,BYTE PTR [rdx]
  428c08:	adc    dl,BYTE PTR [rdx]
  428c0a:	adc    dl,BYTE PTR [rdx]
  428c0c:	adc    dl,BYTE PTR [rdx]
  428c0e:	adc    dl,BYTE PTR [rdx]
  428c10:	adc    dl,BYTE PTR [rdx]
  428c12:	adc    dl,BYTE PTR [rdx]
  428c14:	adc    dl,BYTE PTR [rdx]
  428c16:	adc    dl,BYTE PTR [rdx]
  428c18:	adc    dl,BYTE PTR [rdx]
  428c1a:	adc    dl,BYTE PTR [rdx]
  428c1c:	adc    dl,BYTE PTR [rdx]
  428c1e:	adc    dl,BYTE PTR [rdx]
  428c20:	adc    dl,BYTE PTR [rdx]
  428c22:	add    BYTE PTR [rdx],dl
  428c24:	adc    dl,BYTE PTR [rdx]
  428c26:	adc    dl,BYTE PTR [rdx]
  428c28:	add    BYTE PTR [rdx],cl
  428c2a:	adc    al,BYTE PTR [rip+0x12051212]        # 0x12479e42
  428c30:	adc    dl,BYTE PTR [rdx]
  428c32:	adc    al,BYTE PTR [rax]
  428c34:	adc    dl,BYTE PTR [rdx]
  428c36:	adc    dl,BYTE PTR [rdx]
  428c38:	adc    dl,BYTE PTR [rdx]
  428c3a:	adc    dl,BYTE PTR [rdx]
  428c3c:	adc    dl,BYTE PTR [rdx]
  428c3e:	adc    dl,BYTE PTR [rdx]
  428c40:	adc    dl,BYTE PTR [rdx]
  428c42:	adc    dl,BYTE PTR [rdx]
  428c44:	adc    dl,BYTE PTR [rdx]
  428c46:	adc    dl,BYTE PTR [rdx]
  428c48:	adc    dl,BYTE PTR [rdx]
  428c4a:	adc    dl,BYTE PTR [rdx]
  428c4c:	adc    dl,BYTE PTR [rdx]
  428c4e:	adc    dl,BYTE PTR [rdx]
  428c50:	adc    dl,BYTE PTR [rdx]
  428c52:	adc    dl,BYTE PTR [rdx]
  428c54:	adc    dl,BYTE PTR [rdx]
  428c56:	adc    dl,BYTE PTR [rdx]
  428c58:	adc    dl,BYTE PTR [rdx]
  428c5a:	adc    dl,BYTE PTR [rdx]
  428c5c:	adc    dl,BYTE PTR [rdx]
  428c5e:	adc    dl,BYTE PTR [rdx]
  428c60:	adc    dl,BYTE PTR [rdx]
  428c62:	adc    dl,BYTE PTR [rdx]
  428c64:	adc    dl,BYTE PTR [rdx]
  428c66:	adc    dl,BYTE PTR [rdx]
  428c68:	adc    dl,BYTE PTR [rdx]
  428c6a:	adc    dl,BYTE PTR [rdx]
  428c6c:	adc    dl,BYTE PTR [rdx]
  428c6e:	adc    dl,BYTE PTR [rdx]
  428c70:	adc    dl,BYTE PTR [rdx]
  428c72:	adc    dl,BYTE PTR [rdx]
  428c74:	adc    dl,BYTE PTR [rdx]
  428c76:	adc    dl,BYTE PTR [rdx]
  428c78:	adc    dl,BYTE PTR [rdx]
  428c7a:	adc    dl,BYTE PTR [rdx]
  428c7c:	adc    dl,BYTE PTR [rdx]
  428c7e:	adc    dl,BYTE PTR [rdx]
  428c80:	adc    dl,BYTE PTR [rdx]
  428c82:	adc    dl,BYTE PTR [rdx]
  428c84:	adc    dl,BYTE PTR [rdx]
  428c86:	adc    dl,BYTE PTR [rdx]
  428c88:	adc    dl,BYTE PTR [rdx]
  428c8a:	adc    dl,BYTE PTR [rdx]
  428c8c:	adc    dl,BYTE PTR [rdx]
  428c8e:	adc    dl,BYTE PTR [rdx]
  428c90:	adc    dl,BYTE PTR [rdx]
  428c92:	adc    dl,BYTE PTR [rdx]
  428c94:	adc    dl,BYTE PTR [rdx]
  428c96:	adc    dl,BYTE PTR [rdx]
  428c98:	adc    dl,BYTE PTR [rdx]
  428c9a:	adc    dl,BYTE PTR [rdx]
  428c9c:	adc    dl,BYTE PTR [rdx]
  428c9e:	adc    dl,BYTE PTR [rdx]
  428ca0:	adc    dl,BYTE PTR [rdx]
  428ca2:	adc    dl,BYTE PTR [rdx]
  428ca4:	adc    dl,BYTE PTR [rdx]
  428ca6:	adc    dl,BYTE PTR [rdx]
  428ca8:	adc    dl,BYTE PTR [rdx]
  428caa:	adc    dl,BYTE PTR [rdx]
  428cac:	adc    dl,BYTE PTR [rdx]
  428cae:	adc    dl,BYTE PTR [rdx]
  428cb0:	adc    dl,BYTE PTR [rdx]
  428cb2:	adc    dl,BYTE PTR [rdx]
  428cb4:	adc    dl,BYTE PTR [rdx]
  428cb6:	adc    dl,BYTE PTR [rdx]
  428cb8:	adc    dl,BYTE PTR [rdx]
  428cba:	adc    dl,BYTE PTR [rdx]
  428cbc:	adc    dl,BYTE PTR [rdx]
  428cbe:	adc    dl,BYTE PTR [rdx]
  428cc0:	add    BYTE PTR es:[rax],al
  428cc3:	add    BYTE PTR [rax+rax*1],al
  428cc6:	add    BYTE PTR [rax],al
  428cc8:	(bad)  
  428cc9:	ins    DWORD PTR es:[rdi],dx
  428cca:	jo     0x428d07
  428ccc:	add    BYTE PTR [rax],al
  428cce:	add    BYTE PTR [rax],al
  428cd0:	cmp    al,0x0
  428cd2:	add    BYTE PTR [rax],al
  428cd4:	add    eax,DWORD PTR [rax]
  428cd6:	add    BYTE PTR [rax],al
  428cd8:	ins    BYTE PTR es:[rdi],dx
  428cd9:	je     0x428d16
  428cdb:	add    BYTE PTR [rax],al
  428cdd:	add    BYTE PTR [rax],al
  428cdf:	add    BYTE PTR [rsi],bh
  428ce1:	add    BYTE PTR [rax],al
  428ce3:	add    BYTE PTR [rbx],al
  428ce5:	add    BYTE PTR [rax],al
  428ce7:	add    BYTE PTR [rdi+0x74],ah
  428cea:	cmp    eax,DWORD PTR [rax]
  428cec:	add    BYTE PTR [rax],al
  428cee:	add    BYTE PTR [rax],al
  428cf0:	and    al,BYTE PTR [rax]
  428cf2:	add    BYTE PTR [rax],al
  428cf4:	add    eax,0x71000000
  428cf9:	jne    0x428d6a
  428cfb:	je     0x428d38
  428cfd:	add    BYTE PTR [rax],al
  428cff:	add    BYTE PTR [rdi],ah
  428d01:	add    BYTE PTR [rax],al
  428d03:	add    BYTE PTR [rip+0x61000000],al        # 0x61428d09
  428d09:	jo     0x428d7a
  428d0b:	jae    0x428d48
	...
  428d3d:	add    BYTE PTR [rax],al
  428d3f:	add    BYTE PTR [rdi+0x65],ah
  428d42:	outs   dx,BYTE PTR ds:[rsi]
  428d43:	jae    0x428dad
  428d45:	gs ins BYTE PTR es:[rdi],dx
  428d47:	ins    BYTE PTR es:[rdi],dx
  428d48:	outs   dx,DWORD PTR ds:[rsi]
  428d49:	jo     0x428dbf
  428d4b:	and    BYTE PTR [rcx],dh
  428d4d:	or     al,BYTE PTR [rbx+0x6f]
  428d50:	jo     0x428dcb
  428d52:	jb     0x428dbd
  428d54:	addr32 push 0x43282074
  428d5a:	sub    DWORD PTR [rax],esp
  428d5c:	xor    DWORD PTR [rcx],edi
  428d5e:	cmp    DWORD PTR [rcx],edi
  428d60:	sub    eax,0x34313032
  428d65:	and    BYTE PTR [rdx+0x72],al
  428d68:	jne    0x428dcd
  428d6a:	and    BYTE PTR gs:[rbx+0x6f],cl
  428d6e:	jb     0x428dd2
  428d70:	sub    al,0x20
  428d72:	(bad)  
  428d73:	ins    BYTE PTR es:[rdi],dx
  428d74:	ins    BYTE PTR es:[rdi],dx
  428d75:	and    BYTE PTR [rdx+0x69],dh
  428d78:	addr32 push 0x72207374
  428d7e:	gs jae 0x428de6
  428d81:	jb     0x428df9
  428d83:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  428d8a:	jae    0x428dac
  428d8c:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  428d93:	and    BYTE PTR [rbx+0x6f],dh
  428d96:	data16 je 0x428e10
  428d99:	(bad)  
  428d9a:	jb     0x428e01
  428d9c:	and    BYTE PTR cs:[rcx+0x74],cl
  428da0:	and    BYTE PTR [rcx+0x73],ch
  428da3:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  428da7:	outs   dx,BYTE PTR gs:[rsi]
  428da9:	jae    0x428e10
  428dab:	and    BYTE PTR fs:[rsi+0x6f],ah
  428daf:	jb     0x428dd1
  428db1:	jne    0x428e26
  428db3:	gs sub al,0x20
  428db6:	ins    DWORD PTR es:[rdi],dx
  428db7:	outs   dx,DWORD PTR ds:[rsi]
  428db8:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  428dc0:	outs   dx,DWORD PTR ds:[rsi]
  428dc1:	outs   dx,BYTE PTR ds:[rsi]
  428dc2:	and    BYTE PTR [rcx+0x6e],ah
  428dc5:	or     dh,BYTE PTR fs:[rdx+0x65]
  428dc9:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  428dd1:	je     0x428e3c
  428dd3:	outs   dx,DWORD PTR ds:[rsi]
  428dd4:	outs   dx,BYTE PTR ds:[rsi]
  428dd5:	and    BYTE PTR [rbp+0x6e],dh
  428dd8:	fs gs jb 0x428dfc
  428ddc:	je     0x428e46
  428dde:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  428de3:	ins    DWORD PTR es:[rdi],dx
  428de4:	jae    0x428e06
  428de6:	outs   dx,DWORD PTR ds:[rsi]
  428de7:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  428dec:	and    BYTE PTR [rdi+0x4e],al
  428def:	push   rbp
  428df0:	and    BYTE PTR [rbp+riz*2+0x73],cl
  428df4:	jae    0x428e5b
  428df6:	jb     0x428e18
  428df8:	rex.RXB
  428df9:	outs   dx,BYTE PTR gs:[rsi]
  428dfb:	gs jb  0x428e5f
  428dfe:	ins    BYTE PTR es:[rdi],dx
  428dff:	and    BYTE PTR [rax+0x75],dl
  428e02:	(bad)  
  428e03:	ins    BYTE PTR es:[rdi],dx
  428e04:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  428e0b:	outs   dx,BYTE PTR ds:[rsi]
  428e0c:	jae    0x428e73
  428e0e:	sub    al,0xa
  428e10:	jbe    0x428e77
  428e12:	jb     0x428e87
  428e14:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  428e1b:	jb     0x428e3d
  428e1d:	ins    BYTE PTR es:[rdi],dx
  428e1e:	(bad)  
  428e1f:	je     0x428e86
  428e21:	jb     0x428e43
  428e23:	cmp    al,0x68
  428e25:	je     0x428e9b
  428e27:	jo     0x428e63
  428e29:	(bad)  
  428e2a:	(bad)  
  428e2b:	ja     0x428ea4
  428e2d:	ja     0x428e5d
  428e2f:	outs   dx,BYTE PTR ds:[esi]
  428e31:	jne    0x428e61
  428e33:	outs   dx,DWORD PTR ds:[rsi]
  428e34:	jb     0x428e9d
  428e36:	(bad)  
  428e37:	ins    BYTE PTR es:[rdi],dx
  428e38:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  428e3f:	(bad)  
  428e40:	outs   dx,DWORD PTR ds:[rsi]
  428e41:	ins    BYTE PTR es:[rdi],dx
  428e42:	fs sub eax,0x6563696c
  428e48:	outs   dx,BYTE PTR ds:[rsi]
  428e49:	jae    0x428eb0
  428e4b:	jae    0x428e7c
  428e4d:	ins    BYTE PTR es:[rdi],dx
  428e4e:	addr32 jo 0x428ebd
  428e51:	sub    eax,0x2e302e32
  428e56:	push   0x3e6c6d74
  428e5b:	or     al,BYTE PTR [rax]
  428e5d:	push   rsp
  428e5e:	push   0x65672065
  428e63:	outs   dx,BYTE PTR ds:[rsi]
  428e64:	jae    0x428ece
  428e66:	gs ins BYTE PTR es:[rdi],dx
  428e68:	ins    BYTE PTR es:[rdi],dx
  428e69:	outs   dx,DWORD PTR ds:[rsi]
  428e6a:	jo     0x428ee0
  428e6c:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  428e70:	jb     0x428ed3
  428e72:	jb     0x428eed
  428e74:	and    BYTE PTR [rcx+0x73],ch
  428e77:	and    BYTE PTR [rsi+0x72],ah
  428e7a:	gs and BYTE PTR gs:[rbx+0x6f],dh
  428e7f:	data16 je 0x428ef9
  428e82:	(bad)  
  428e83:	jb     0x428eea
  428e85:	cmp    esp,DWORD PTR [rax]
  428e87:	jns    0x428ef8
  428e89:	jne    0x428eab
  428e8b:	movsxd esp,DWORD PTR [rcx+0x6e]
  428e8e:	and    BYTE PTR [rdx+0x65],dh
  428e91:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  428e99:	je     0x428f00
  428e9b:	and    BYTE PTR [rcx+0x74],ch
  428e9e:	and    BYTE PTR [rcx+0x6e],ah
  428ea1:	fs (bad) 
  428ea3:	outs   dx,DWORD PTR ds:[rsi]
  428ea4:	jb     0x428eb0
  428ea6:	ins    DWORD PTR es:[rdi],dx
  428ea7:	outs   dx,DWORD PTR ds:[rsi]
  428ea8:	imul   esp,DWORD PTR fs:[rsi+0x79],0x20746920
  428eb0:	jne    0x428f20
  428eb2:	fs gs jb 0x428ed6
  428eb6:	je     0x428f20
  428eb8:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  428ebd:	ins    DWORD PTR es:[rdi],dx
  428ebe:	jae    0x428ee0
  428ec0:	outs   dx,DWORD PTR ds:[rsi]
  428ec1:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  428ec6:	and    BYTE PTR [rdi+0x4e],al
  428ec9:	push   rbp
  428eca:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  428ece:	jb     0x428f31
  428ed0:	jb     0x428f4b
  428ed2:	and    BYTE PTR [rdi+0x65],al
  428ed5:	outs   dx,BYTE PTR ds:[rsi]
  428ed6:	gs jb  0x428f3a
  428ed9:	ins    BYTE PTR es:[rdi],dx
  428eda:	and    BYTE PTR [rax+0x75],dl
  428edd:	(bad)  
  428ede:	ins    BYTE PTR es:[rdi],dx
  428edf:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  428ee6:	outs   dx,BYTE PTR ds:[rsi]
  428ee7:	jae    0x428f4e
  428ee9:	and    BYTE PTR [rcx+0x73],ah
  428eec:	or     dh,BYTE PTR [rax+0x75]
  428eef:	(bad)  
  428ef0:	ins    BYTE PTR es:[rdi],dx
  428ef1:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  428ef8:	jns    0x428f1a
  428efa:	je     0x428f64
  428efc:	and    BYTE PTR gs:[rsi+0x72],al
  428f00:	gs and BYTE PTR gs:[rbx+0x6f],dl
  428f05:	data16 je 0x428f7f
  428f08:	(bad)  
  428f09:	jb     0x428f70
  428f0b:	and    BYTE PTR [rsi+0x6f],al
  428f0e:	jne    0x428f7e
  428f10:	fs (bad) 
  428f12:	je     0x428f7d
  428f14:	outs   dx,DWORD PTR ds:[rsi]
  428f15:	outs   dx,BYTE PTR ds:[rsi]
  428f16:	cmp    esp,DWORD PTR [rax]
  428f18:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  428f21:	jb     0x428f96
  428f23:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  428f2a:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  428f2f:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  428f33:	outs   dx,BYTE PTR gs:[rsi]
  428f35:	jae    0x428f9c
  428f37:	sub    al,0xa
  428f39:	outs   dx,DWORD PTR ds:[rsi]
  428f3a:	jb     0x428f5c
  428f3c:	sub    BYTE PTR [rcx+0x74],ah
  428f3f:	and    BYTE PTR [rcx+0x6f],bh
  428f42:	jne    0x428fb6
  428f44:	and    BYTE PTR [rdi+0x70],ch
  428f47:	je     0x428fb2
  428f49:	outs   dx,DWORD PTR ds:[rsi]
  428f4a:	outs   dx,BYTE PTR ds:[rsi]
  428f4b:	sub    DWORD PTR [rax],esp
  428f4d:	(bad)  
  428f4e:	outs   dx,BYTE PTR ds:[rsi]
  428f4f:	jns    0x428f71
  428f51:	ins    BYTE PTR es:[rdi],dx
  428f52:	(bad)  
  428f53:	je     0x428fba
  428f55:	jb     0x428f77
  428f57:	jbe    0x428fbe
  428f59:	jb     0x428fce
  428f5b:	imul   ebp,DWORD PTR [rdi+0x6e],0x540a0a2e
  428f62:	push   0x6c207369
  428f67:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  428f6e:	imul   esi,DWORD PTR [rbx+0x20],0x74736964
  428f75:	jb     0x428fe0
  428f77:	(bad)  
  428f78:	jne    0x428fee
  428f7a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  428f7f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  428f83:	and    BYTE PTR [rax+0x6f],ch
  428f86:	jo     0x428fed
  428f88:	and    BYTE PTR [rax+rbp*2+0x61],dh
  428f8c:	je     0x428fae
  428f8e:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  428f96:	(bad)  
  428f97:	and    BYTE PTR gs:[rbp+0x73],dh
  428f9b:	gs data16 jne 0x42900b
  428f9f:	sub    al,0x20
  428fa1:	(bad)  
  428fa2:	jne    0x429018
  428fa4:	and    BYTE PTR [rdi+0x49],dl
  428fa7:	push   rsp
  428fa8:	rex.W
  428fa9:	rex.WRXB push r13
  428fab:	push   rsp
  428fac:	or     al,BYTE PTR [rcx+0x4e]
  428faf:	pop    rcx
  428fb0:	and    BYTE PTR [rdi+0x41],dl
  428fb3:	push   rdx
  428fb4:	push   rdx
  428fb5:	rex.B
  428fb6:	rex.WRX push rsp
  428fb8:	pop    rcx
  428fb9:	cmp    esp,DWORD PTR [rax]
  428fbb:	ja     0x429026
  428fbd:	je     0x429027
  428fbf:	outs   dx,DWORD PTR ds:[rsi]
  428fc0:	jne    0x429036
  428fc2:	and    BYTE PTR [rbp+0x76],ah
  428fc5:	outs   dx,BYTE PTR gs:[rsi]
  428fc7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  428fcb:	and    BYTE PTR [rcx+0x6d],ch
  428fce:	jo     0x42903c
  428fd0:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  428fd7:	jb     0x42903a
  428fd9:	outs   dx,BYTE PTR ds:[rsi]
  428fda:	je     0x429055
  428fdc:	and    BYTE PTR [rdi+0x66],ch
  428fdf:	and    BYTE PTR [rbp+0x45],cl
  428fe2:	push   rdx
  428fe3:	rex.XB
  428fe4:	rex.W
  428fe5:	rex.B
  428fe6:	rex.WRX push rsp
  428fe8:	rex.B
  428fe9:	rex.X
  428fea:	rex.WB
  428feb:	rex.WR
  428fec:	rex.WB push r12
  428fee:	pop    rcx
  428fef:	and    BYTE PTR [rdi+0x72],ch
  428ff2:	or     al,BYTE PTR [rsi+0x49]
  428ff5:	push   rsp
  428ff6:	rex.WRX
  428ff7:	rex.RB push r11
  428ff9:	push   rbx
  428ffa:	and    BYTE PTR [rsi+0x4f],al
  428ffd:	push   rdx
  428ffe:	and    BYTE PTR [rcx+0x20],al
  429001:	push   rax
  429002:	push   r10
  429004:	push   rsp
  429005:	rex.WB
  429006:	rex.XB push r13
  429008:	rex.WR
  429009:	push   r10
  42900b:	and    BYTE PTR [rax+0x55],dl
  42900e:	push   rdx
  42900f:	push   rax
  429010:	rex.WRXB push r11
  429012:	rex.RB
  429013:	and    BYTE PTR cs:[rax],ah
  429016:	push   rbx
  429017:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  42901d:	and    BYTE PTR [rdi+0x4e],al
  429020:	push   rbp
  429021:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  429025:	jb     0x429088
  429027:	jb     0x4290a2
  429029:	and    BYTE PTR [rdi+0x65],al
  42902c:	outs   dx,BYTE PTR ds:[rsi]
  42902d:	gs jb  0x429091
  429030:	ins    BYTE PTR es:[rdi],dx
  429031:	and    BYTE PTR [rax+0x75],dl
  429034:	(bad)  
  429035:	ins    BYTE PTR es:[rdi],dx
  429036:	imul   esp,DWORD PTR [rbx+0xa],0x6563694c
  42903d:	outs   dx,BYTE PTR ds:[rsi]
  42903e:	jae    0x4290a5
  429040:	and    BYTE PTR [rsi+0x6f],ah
  429043:	jb     0x429065
  429045:	ins    DWORD PTR es:[rdi],dx
  429046:	outs   dx,DWORD PTR ds:[rsi]
  429047:	jb     0x4290ae
  429049:	and    BYTE PTR [rbp+riz*2+0x74],ah
  42904d:	(bad)  
  42904e:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  429056:	jne    0x429078
  429058:	jae    0x4290c2
  42905a:	outs   dx,DWORD PTR ds:[rsi]
  42905b:	jne    0x4290c9
  42905d:	and    BYTE PTR fs:[rax+0x61],ch
  429061:	jbe    0x4290c8
  429063:	and    BYTE PTR [rdx+0x65],dh
  429066:	movsxd esp,DWORD PTR [rbp+0x69]
  429069:	jbe    0x4290d0
  42906b:	and    BYTE PTR fs:[rcx+0x20],ah
  42906f:	movsxd ebp,DWORD PTR [rdi+0x70]
  429072:	jns    0x429094
  429074:	outs   dx,DWORD PTR ds:[rsi]
  429075:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42907a:	and    BYTE PTR [rdi+0x4e],al
  42907d:	push   rbp
  42907e:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  429082:	jb     0x4290e5
  429084:	jb     0x4290ff
  429086:	and    BYTE PTR [rdi+0x65],al
  429089:	outs   dx,BYTE PTR ds:[rsi]
  42908a:	gs jb  0x4290ee
  42908d:	ins    BYTE PTR es:[rdi],dx
  42908e:	and    BYTE PTR [rax+0x75],dl
  429091:	(bad)  
  429092:	ins    BYTE PTR es:[rdi],dx
  429093:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  42909a:	outs   dx,BYTE PTR ds:[rsi]
  42909b:	jae    0x429102
  42909d:	or     ah,BYTE PTR [rcx+0x6c]
  4290a0:	outs   dx,DWORD PTR ds:[rsi]
  4290a1:	outs   dx,BYTE PTR ds:[rsi]
  4290a2:	and    BYTE PTR [edi+0x69],dh
  4290a6:	je     0x429110
  4290a8:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4290ac:	jae    0x4290ce
  4290ae:	ins    BYTE PTR es:[rdi],dx
  4290af:	imul   esp,DWORD PTR [rdx+0x72],0x3b797261
  4290b6:	and    BYTE PTR [rcx+0x66],ch
  4290b9:	and    BYTE PTR [rsi+0x6f],ch
  4290bc:	je     0x4290ea
  4290be:	and    BYTE PTR [rbx+0x65],dh
  4290c1:	or     bh,BYTE PTR gs:[rax+rbp*2]
  4290c5:	je     0x42913b
  4290c7:	jo     0x429103
  4290c9:	(bad)  
  4290ca:	(bad)  
  4290cb:	ja     0x429144
  4290cd:	ja     0x4290fd
  4290cf:	outs   dx,BYTE PTR ds:[esi]
  4290d1:	jne    0x429101
  4290d3:	outs   dx,DWORD PTR ds:[rsi]
  4290d4:	jb     0x42913d
  4290d6:	(bad)  
  4290d7:	ins    BYTE PTR es:[rdi],dx
  4290d8:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  4290df:	(bad)  
  4290e0:	outs   dx,DWORD PTR ds:[rsi]
  4290e1:	ins    BYTE PTR es:[rdi],dx
  4290e2:	fs sub eax,0x6563696c
  4290e8:	outs   dx,BYTE PTR ds:[rsi]
  4290e9:	jae    0x429150
  4290eb:	jae    0x42911c
  4290ed:	ins    BYTE PTR es:[rdi],dx
  4290ee:	addr32 jo 0x42915d
  4290f1:	sub    eax,0x2e302e32
  4290f6:	push   0x3e6c6d74
  4290fb:	or     al,BYTE PTR [rax]
  4290fd:	rex.WRXB jne 0x429174
  429100:	jo     0x429177
  429102:	je     0x429124
  429104:	push   rbx
  429105:	movsxd esi,DWORD PTR [rdx+0x69]
  429108:	jo     0x42917e
  42910a:	and    BYTE PTR [rsi+0x69],al
  42910d:	ins    BYTE PTR es:[rdi],dx
  42910e:	add    BYTE PTR gs:[rbx+0x43],dl
  429112:	push   rdx
  429113:	rex.WB push r8
  429115:	push   rsp
  429116:	add    BYTE PTR [rbx+0x63],dh
  429119:	jb     0x429184
  42911b:	jo     0x429191
  42911d:	add    BYTE PTR [rbx+0x68],dl
  429120:	gs ins BYTE PTR es:[rdi],dx
  429122:	ins    BYTE PTR es:[rdi],dx
  429123:	and    BYTE PTR [rsi+0x61],ch
  429126:	ins    DWORD PTR es:[rdi],dx
  429127:	and    BYTE PTR gs:[rax],ch
  42912a:	outs   dx,WORD PTR ds:[rsi]
  42912c:	ins    BYTE PTR es:[rdi],dx
  42912d:	ins    BYTE PTR es:[rdi],dx
  42912e:	outs   dx,DWORD PTR ds:[rsi]
  42912f:	ja     0x4291a4
  429131:	and    BYTE PTR [rdx],ah
  429133:	and    esp,DWORD PTR [rcx]
  429135:	and    ah,BYTE PTR [rax]
  429137:	ins    DWORD PTR es:[rdi],dx
  429138:	(bad)  
  429139:	imul   esp,DWORD PTR [ebx+0x29],0x45485300
  429141:	rex.WR
  429142:	rex.WR add BYTE PTR [rsi+0x6f],r13b
  429146:	sub    eax,0x6c656873
  42914b:	ins    BYTE PTR es:[rdi],dx
  42914c:	add    BYTE PTR [rsi+0x6f],ch
  42914f:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  429153:	jo     0x4291c1
  429155:	(bad)  
  429156:	jns    0x429178
  429158:	gs js  0x4291cf
  42915b:	outs   dx,BYTE PTR gs:[rsi]
  42915d:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  429163:	(bad)  
  429164:	and    BYTE PTR gs:[ecx+0x6e],ch
  429169:	outs   dx,WORD PTR ds:[rsi]
  42916b:	jb     0x4291da
  42916d:	(bad)  
  42916e:	je     0x4291d9
  429170:	outs   dx,DWORD PTR ds:[rsi]
  429171:	outs   dx,BYTE PTR ds:[rsi]
  429172:	and    BYTE PTR [rcx+0x6e],ah
  429175:	and    BYTE PTR fs:[rbp+0x78],ah
  429179:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  429181:	gs js  0x4291f8
  429184:	outs   dx,BYTE PTR gs:[rsi]
  429186:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  42918c:	(bad)  
  42918d:	and    BYTE PTR gs:[ecx+0x6e],ch
  429192:	outs   dx,WORD PTR ds:[rsi]
  429194:	jb     0x429203
  429196:	(bad)  
  429197:	je     0x429202
  429199:	outs   dx,DWORD PTR ds:[rsi]
  42919a:	outs   dx,BYTE PTR ds:[rsi]
  42919b:	and    BYTE PTR [rax+0x61],dh
  42919e:	jae    0x429213
  4291a0:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  4291a6:	jne    0x4291c8
  4291a8:	jo     0x42920b
  4291aa:	addr32 gs jb 0x4291ae
  4291ae:	ins    DWORD PTR es:[rdi],dx
  4291af:	outs   dx,DWORD PTR ds:[rsi]
  4291b0:	jb     0x429217
  4291b2:	sub    eax,0x706c6568
  4291b7:	add    BYTE PTR [rdi+0x75],ch
  4291ba:	je     0x42922c
  4291bc:	jne    0x429232
  4291be:	and    BYTE PTR [rsi+0x65],dh
  4291c1:	jb     0x429236
  4291c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  4291ca:	outs   dx,DWORD PTR ds:[rsi]
  4291cb:	jb     0x42923a
  4291cd:	(bad)  
  4291ce:	je     0x429239
  4291d0:	outs   dx,DWORD PTR ds:[rsi]
  4291d1:	outs   dx,BYTE PTR ds:[rsi]
  4291d2:	and    BYTE PTR [rcx+0x6e],ah
  4291d5:	and    BYTE PTR fs:[rbp+0x78],ah
  4291d9:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  4291e1:	outs   dx,DWORD PTR ds:[rsi]
  4291e2:	outs   dx,BYTE PTR ds:[rsi]
  4291e3:	add    BYTE PTR [rdi+0x45],al
  4291e6:	rex.WRX push rbx
  4291e8:	rex.W
  4291e9:	rex.RB
  4291ea:	rex.WR
  4291eb:	rex.WR
  4291ec:	rex.WRXB push r8
  4291ee:	push   rsp
  4291ef:	add    BYTE PTR [rdi+0x65],ah
  4291f2:	outs   dx,BYTE PTR ds:[rsi]
  4291f3:	jae    0x42925d
  4291f5:	gs ins BYTE PTR es:[rdi],dx
  4291f7:	ins    BYTE PTR es:[rdi],dx
  4291f8:	outs   dx,DWORD PTR ds:[rsi]
  4291f9:	jo     0x42926f
  4291fb:	and    BYTE PTR [rip+0x6e654720],ch        # 0x6ea7d921
  429201:	gs jb  0x429265
  429204:	je     0x42926b
  429206:	and    BYTE PTR [rbx+0x68],dl
  429209:	gs ins BYTE PTR es:[rdi],dx
  42920b:	ins    BYTE PTR es:[rdi],dx
  42920c:	and    BYTE PTR [rdi+0x70],cl
  42920f:	je     0x42927a
  429211:	outs   dx,DWORD PTR ds:[rsi]
  429212:	outs   dx,BYTE PTR ds:[rsi]
  429213:	and    BYTE PTR [rax+0x72],dl
  429216:	outs   dx,DWORD PTR ds:[rsi]
  429217:	movsxd esp,DWORD PTR [rbp+0x73]
  42921a:	jae    0x429285
  42921c:	outs   dx,BYTE PTR ds:[rsi]
  42921d:	and    BYTE PTR [ebx+0x63],dl
  429221:	jb     0x42928c
  429223:	jo     0x429299
  429225:	and    BYTE PTR [rip+0x72655620],ch        # 0x72a7e84b
  42922b:	and    BYTE PTR cs:[rcx],dh
  42922e:	or     dl,BYTE PTR [rbp+0x73]
  429231:	(bad)  
  429232:	cmp    ah,BYTE PTR gs:[eax]
  429236:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209db2af
  42923c:	sub    eax,0x616c663c
  429241:	and    BYTE PTR ds:[ebx+0x3c],bl
  429246:	jbe    0x4292a9
  429248:	ins    BYTE PTR es:[rdi],dx
  429249:	ds pop rbp
  42924b:	and    BYTE PTR [rax+riz*1+0x2d],bh
  42924f:	sub    eax,0x6d616e3c
  429254:	gs ds pop rbx
  429257:	jnp    0x429296
  429259:	jl     0x42927b
  42925b:	jge    0x429299
  42925d:	jbe    0x4292c0
  42925f:	ins    BYTE PTR es:[rdi],dx
  429260:	ds pop rbp
  429262:	and    BYTE PTR [rbp+0x2e],bl
  429265:	cs or  al,BYTE PTR cs:[rax]
  429269:	(bad)  
  42926a:	jne    0x4292e0
  42926c:	outs   dx,DWORD PTR ds:[rsi]
  42926d:	outs   dx,BYTE PTR gs:[esi]
  429270:	sub    eax,0x72657375
  429275:	jae    0x4292b7
  429277:	ins    BYTE PTR es:[rdi],dx
  429278:	imul   esi,DWORD PTR [rbx+0x74],0x6f732e73
  42927f:	jne    0x4292f3
  429281:	movsxd esp,DWORD PTR [rbp+0x66]
  429284:	outs   dx,DWORD PTR ds:[rsi]
  429285:	jb     0x4292ee
  429287:	gs outs dx,BYTE PTR cs:[rsi]
  42928a:	gs je  0x42928d
  42928d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42928f:	je     0x4292f6
  429291:	and    BYTE PTR [rax+rbp*2+0x61],dh
  429295:	je     0x4292b7
  429297:	(bad)  
  429298:	jae    0x429302
  42929a:	gs ins BYTE PTR es:[rdi],dx
  42929c:	ins    BYTE PTR es:[rdi],dx
  42929d:	(bad)  
  42929e:	and    BYTE PTR [rcx+0x73],ch
  4292a1:	and    BYTE PTR [rdi+0x6e],ch
  4292a4:	ins    BYTE PTR es:[rdi],dx
  4292a5:	jns    0x4292c7
  4292a7:	jne    0x42931c
  4292a9:	gs data16 jne 0x429319
  4292ad:	and    BYTE PTR [rcx+0x66],ch
  4292b0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4292b4:	and    BYTE PTR [rdi+0x75],ch
  4292b7:	je     0x429329
  4292b9:	jne    0x42932f
  4292bb:	and    BYTE PTR [rsi+0x69],ah
  4292be:	ins    BYTE PTR es:[rdi],dx
  4292bf:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
  4292c4:	jae    0x4292e6
  4292c6:	outs   dx,BYTE PTR ds:[rsi]
  4292c7:	outs   dx,DWORD PTR ds:[rsi]
  4292c8:	je     0x4292ea
  4292ca:	(bad)  
  4292cb:	ins    BYTE PTR es:[rdi],dx
  4292cc:	jb     0x429333
  4292ce:	(bad)  
  4292cf:	fs jns 0x4292f2
  4292d2:	gs js  0x42933e
  4292d5:	jae    0x42934b
  4292d7:	or     cl,BYTE PTR cs:[rcx+0x66]
  4292db:	and    BYTE PTR [rcx+0x74],ch
  4292de:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  4292e2:	jae    0x429310
  4292e4:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4292e8:	outs   dx,BYTE PTR ds:[rsi]
  4292e9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4292ed:	and    BYTE PTR [rbx+0x68],dh
  4292f0:	gs ins BYTE PTR es:[rdi],dx
  4292f2:	ins    BYTE PTR es:[rdi],dx
  4292f3:	and    BYTE PTR [rsi+0x61],ch
  4292f6:	ins    DWORD PTR es:[rdi],dx
  4292f7:	and    BYTE PTR gs:[rcx+0x6e],ah
  4292fb:	and    BYTE PTR fs:[rdi+0x70],ch
  4292ff:	je     0x42936a
  429301:	outs   dx,DWORD PTR ds:[rsi]
  429302:	outs   dx,BYTE PTR ds:[rsi]
  429303:	(bad)  
  429304:	ins    BYTE PTR es:[rdi],dx
  429305:	and    BYTE PTR [rsi+0x69],ah
  429308:	jb     0x42937d
  42930a:	je     0x42932c
  42930c:	(bad)  
  42930d:	jb     0x429376
  42930f:	jne    0x42937e
  429311:	outs   dx,BYTE PTR gs:[rsi]
  429313:	je     0x429335
  429315:	ja     0x429380
  429317:	ins    BYTE PTR es:[rdi],dx
  429318:	ins    BYTE PTR es:[rdi],dx
  429319:	and    BYTE PTR [rdx+0x65],ah
  42931c:	or     ah,BYTE PTR [rbp+0x78]
  42931f:	je     0x429393
  429321:	(bad)  
  429322:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  429326:	and    BYTE PTR [rsi+0x72],ah
  429329:	outs   dx,DWORD PTR ds:[rsi]
  42932a:	ins    DWORD PTR es:[rdi],dx
  42932b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42932f:	and    BYTE PTR [rbx+0x63],dh
  429332:	jb     0x42939d
  429334:	jo     0x4293aa
  429336:	and    BYTE PTR [rsi+0x69],ah
  429339:	ins    BYTE PTR es:[rdi],dx
  42933a:	gs or  al,BYTE PTR cs:[rax]
  42933e:	rex.WB
  42933f:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  429344:	and    BYTE PTR [rbx+0x63],dh
  429347:	jb     0x4293b2
  429349:	jo     0x4293bf
  42934b:	and    BYTE PTR [rsi+0x69],ah
  42934e:	ins    BYTE PTR es:[rdi],dx
  42934f:	and    BYTE PTR gs:[rcx+0x6c],ah
  429353:	jb     0x4293ba
  429355:	(bad)  
  429356:	fs jns 0x429379
  429359:	gs js  0x4293c5
  42935c:	jae    0x4293d2
  42935e:	jae    0x429380
  429360:	(bad)  
  429361:	outs   dx,BYTE PTR ds:[rsi]
  429362:	and    BYTE PTR fs:[rbx+0x6f],ah
  429366:	outs   dx,BYTE PTR ds:[rsi]
  429367:	je     0x4293ca
  429369:	imul   ebp,DWORD PTR [rsi+0x73],0x74754120
  429370:	outs   dx,DWORD PTR ds:[rsi]
  429371:	ins    DWORD PTR es:[rdi],dx
  429372:	(bad)  
  429373:	je     0x4293da
  429375:	and    BYTE PTR fs:[rdi+0x70],cl
  429379:	je     0x4293e4
  42937b:	outs   dx,DWORD PTR ds:[rsi]
  42937c:	outs   dx,BYTE PTR ds:[rsi]
  42937d:	and    BYTE PTR [rax+0x72],dl
  429380:	outs   dx,DWORD PTR ds:[rsi]
  429381:	movsxd esp,DWORD PTR [rbp+0x73]
  429384:	jae    0x4293ef
  429386:	outs   dx,BYTE PTR ds:[rsi]
  429387:	or     dh,BYTE PTR [ebp+eiz*2+0x78]
  42938c:	je     0x4293ba
  42938e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429392:	and    BYTE PTR [rbx+0x65],dh
  429395:	movsxd ebp,DWORD PTR [rdi+0x6e]
  429398:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42939d:	and    BYTE PTR gs:[rdi+0x66],ch
  4293a1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4293a5:	and    BYTE PTR [rsi+0x69],ah
  4293a8:	ins    BYTE PTR es:[rdi],dx
  4293a9:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  4293ae:	outs   dx,DWORD PTR ds:[rsi]
  4293af:	jne    0x429418
  4293b1:	push   0x65687420
  4293b6:	and    BYTE PTR [rbp+0x6e],ah
  4293b9:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x67617420
  4293c1:	and    BYTE PTR [rdi+0x69],dh
  4293c4:	ins    BYTE PTR es:[rdi],dx
  4293c5:	ins    BYTE PTR es:[rdi],dx
  4293c6:	and    BYTE PTR [rdx+0x65],ah
  4293c9:	and    BYTE PTR [rdx+0x65],dh
  4293cc:	jo     0x42943a
  4293ce:	(bad)  
  4293cf:	movsxd esp,DWORD PTR [rbp+0x64]
  4293d2:	or     ah,BYTE PTR [rdx+0x79]
  4293d5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4293d9:	and    BYTE PTR [rsi+0x65],ch
  4293dc:	ja     0x42944a
  4293de:	jns    0x429400
  4293e0:	outs   dx,BYTE PTR gs:[esi]
  4293e3:	gs jb  0x429447
  4293e6:	je     0x42944d
  4293e8:	and    BYTE PTR fs:[rbp+riz*2+0x78],dh
  4293ed:	je     0x42941d
  4293ef:	and    BYTE PTR [rax],ah
  4293f1:	push   rsp
  4293f2:	push   0x69662065
  4293f7:	jb     0x42946c
  4293f9:	je     0x42941b
  4293fb:	(bad)  
  4293fc:	and    esp,DWORD PTR [rcx]
  4293fe:	(bad)  
  4293ff:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  429403:	and    BYTE PTR gs:[rdi+0x69],dh
  429407:	ins    BYTE PTR es:[rdi],dx
  429408:	ins    BYTE PTR es:[rdi],dx
  429409:	and    BYTE PTR [rdx+0x65],ah
  42940c:	and    BYTE PTR [rdx+0x65],dh
  42940f:	outs   dx,BYTE PTR gs:[esi]
  429412:	gs jb  0x429476
  429415:	je     0x42947c
  429417:	fs or  al,BYTE PTR cs:[rax]
  42941b:	outs   dx,BYTE PTR gs:[esi]
  42941e:	jae    0x429488
  429420:	gs ins BYTE PTR es:[rdi],dx
  429422:	ins    BYTE PTR es:[rdi],dx
  429423:	outs   dx,DWORD PTR ds:[rsi]
  429424:	jo     0x42949a
  429426:	and    BYTE PTR [rcx],dh
  429428:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  42942c:	add    BYTE PTR gs:[rdi+0x6f],dh
  429430:	jb     0x429496
  429432:	jae    0x429434
  429434:	movsxd ebp,DWORD PTR [rdi+0x6f]
  429437:	imul   esp,DWORD PTR [rbp+0x64],0x0
  42943b:	ins    DWORD PTR es:[rdi],dx
  42943c:	gs ins DWORD PTR es:[rdi],dx
  42943e:	(bad)  
  42943f:	gs jb  0x4294b5
  429442:	add    BYTE PTR [rbp+0x6e],dh
  429445:	movsxd ebp,DWORD PTR [rdi+0x6f]
  429448:	imul   esp,DWORD PTR [rbp+0x64],0x0
  42944c:	imul   esp,DWORD PTR [rbp+0x65],0x70
	...
  429480:	(bad)  
  429481:	xchg   DWORD PTR [rdx+0x0],eax
  429484:	add    BYTE PTR [rax],al
  429486:	add    BYTE PTR [rax],al
  429488:	(bad)  
  429489:	add    BYTE PTR [rax],al
  42948b:	add    BYTE PTR [rax],al
  42948d:	add    BYTE PTR [rax],al
  42948f:	add    BYTE PTR [rsi],al
  429491:	xchg   DWORD PTR [rdx+0x0],eax
  429494:	add    BYTE PTR [rax],al
  429496:	add    BYTE PTR [rax],al
  429498:	(bad)  
  429499:	add    BYTE PTR [rax],al
  42949b:	add    BYTE PTR [rax],al
  42949d:	add    BYTE PTR [rax],al
  42949f:	add    BYTE PTR [rsi],al
  4294a1:	xchg   DWORD PTR [rdx+0x0],eax
  4294a4:	add    BYTE PTR [rax],al
  4294a6:	add    BYTE PTR [rax],al
  4294a8:	(bad)  
  4294a9:	add    BYTE PTR [rax],al
  4294ab:	add    BYTE PTR [rax],al
  4294ad:	add    BYTE PTR [rax],al
  4294af:	add    BYTE PTR [rsi],al
  4294b1:	xchg   DWORD PTR [rdx+0x0],eax
  4294b4:	add    BYTE PTR [rax],al
  4294b6:	add    BYTE PTR [rax],al
  4294b8:	(bad)  
  4294b9:	add    BYTE PTR [rax],al
  4294bb:	add    BYTE PTR [rax],al
  4294bd:	add    BYTE PTR [rax],al
  4294bf:	add    BYTE PTR [rcx],ch
  4294c1:	xchg   esp,eax
  4294c2:	rex.X add BYTE PTR [rax],al
  4294c5:	add    BYTE PTR [rax],al
  4294c7:	add    BYTE PTR [rcx],al
  4294c9:	add    BYTE PTR [rax],al
  4294cb:	add    BYTE PTR [rax],al
  4294cd:	add    BYTE PTR [rax],al
  4294cf:	add    BYTE PTR [rsi],ch
  4294d1:	xchg   esp,eax
  4294d2:	rex.X add BYTE PTR [rax],al
  4294d5:	add    BYTE PTR [rax],al
  4294d7:	add    BYTE PTR [rdx],al
  4294d9:	add    BYTE PTR [rax],al
  4294db:	add    BYTE PTR [rax],al
  4294dd:	add    BYTE PTR [rax],al
  4294df:	add    BYTE PTR [rsp+rdx*4],dh
  4294e2:	rex.X add BYTE PTR [rax],al
  4294e5:	add    BYTE PTR [rax],al
  4294e7:	add    BYTE PTR [rax+rax*1],al
  4294ea:	add    BYTE PTR [rax],al
  4294ec:	add    BYTE PTR [rax],al
  4294ee:	add    BYTE PTR [rax],al
  4294f0:	cmp    edx,DWORD PTR [rdx+rax*2+0x0]
  4294f7:	add    BYTE PTR [rbx],al
  4294f9:	add    BYTE PTR [rax],al
  4294fb:	add    BYTE PTR [rax],al
  4294fd:	add    BYTE PTR [rax],al
  4294ff:	add    BYTE PTR [rbx-0x6c],al
  429502:	rex.X add BYTE PTR [rax],al
  429505:	add    BYTE PTR [rax],al
  429507:	add    BYTE PTR [rip+0x0],al        # 0x42950d
  42950d:	add    BYTE PTR [rax],al
  42950f:	add    BYTE PTR [rsp+rdx*4+0x42],cl
  429513:	add    BYTE PTR [rax],al
  429515:	add    BYTE PTR [rax],al
  429517:	add    BYTE PTR [rsi],al
  429519:	add    BYTE PTR [rax],al
  42951b:	add    BYTE PTR [rax],al
  42951d:	add    BYTE PTR [rax],al
  42951f:	add    BYTE PTR [rbx+0x65],dh
  429522:	je     0x429524
  429524:	(bad)  
  429525:	outs   dx,DWORD PTR ds:[rsi]
  429526:	outs   dx,DWORD PTR ds:[rsi]
  429527:	ins    BYTE PTR es:[rdi],dx
  429528:	add    BYTE PTR [rbx+0x74],dh
  42952b:	jb     0x429596
  42952d:	outs   dx,BYTE PTR ds:[rsi]
  42952e:	add    BYTE PTR [edx+0x6f],ah
  429532:	outs   dx,DWORD PTR ds:[rsi]
  429533:	ins    BYTE PTR es:[rdi],dx
  429534:	gs (bad) 
  429536:	outs   dx,BYTE PTR ds:[rsi]
  429537:	add    BYTE PTR [rax+0x69],ch
  42953a:	gs jb  0x42959e
  42953d:	jb     0x4295a2
  42953f:	push   0x656e0079
  429544:	jae    0x4295ba
  429546:	gs add BYTE PTR fs:[rcx+0x6e],ch
  42954b:	je     0x4295b2
  42954d:	addr32 gs jb 0x429551
	...
  42957d:	add    BYTE PTR [rax],al
  42957f:	add    BYTE PTR [rsi],al
  429581:	xchg   DWORD PTR [rdx+0x0],eax
  429584:	add    BYTE PTR [rax],al
  429586:	add    BYTE PTR [rax],al
  429588:	or     al,BYTE PTR [rax]
  42958a:	add    BYTE PTR [rax],al
  42958c:	add    BYTE PTR [rax],al
  42958e:	add    BYTE PTR [rax],al
  429590:	(bad)  
  429591:	xchg   DWORD PTR [rdx+0x0],eax
  429594:	add    BYTE PTR [rax],al
  429596:	add    BYTE PTR [rax],al
  429598:	or     al,BYTE PTR [rax]
  42959a:	add    BYTE PTR [rax],al
  42959c:	add    BYTE PTR [rax],al
  42959e:	add    BYTE PTR [rax],al
  4295a0:	(bad)  
  4295a1:	xchg   DWORD PTR [rdx+0x0],eax
  4295a4:	add    BYTE PTR [rax],al
  4295a6:	add    BYTE PTR [rax],al
  4295a8:	or     al,BYTE PTR [rax]
  4295aa:	add    BYTE PTR [rax],al
  4295ac:	add    BYTE PTR [rax],al
  4295ae:	add    BYTE PTR [rax],al
  4295b0:	and    BYTE PTR [rbp+0x42],dl
  4295b6:	add    BYTE PTR [rax],al
  4295b8:	(bad)  
  4295b9:	add    BYTE PTR [rax],al
  4295bb:	add    BYTE PTR [rax],al
  4295bd:	add    BYTE PTR [rax],al
  4295bf:	add    BYTE PTR [rdx*4+0x42],ah
  4295c6:	add    BYTE PTR [rax],al
  4295c8:	add    eax,DWORD PTR [rax]
  4295ca:	add    BYTE PTR [rax],al
  4295cc:	add    BYTE PTR [rax],al
  4295ce:	add    BYTE PTR [rax],al
  4295d0:	(bad)  
  4295d1:	xchg   DWORD PTR [rdx+0x0],eax
  4295d4:	add    BYTE PTR [rax],al
  4295d6:	add    BYTE PTR [rax],al
  4295d8:	or     al,BYTE PTR [rax]
  4295da:	add    BYTE PTR [rax],al
  4295dc:	add    BYTE PTR [rax],al
  4295de:	add    BYTE PTR [rax],al
  4295e0:	sub    DWORD PTR [rbp+0x42],edx
  4295e6:	add    BYTE PTR [rax],al
  4295e8:	add    DWORD PTR [rax],eax
  4295ea:	add    BYTE PTR [rax],al
  4295ec:	add    BYTE PTR [rax],al
  4295ee:	add    BYTE PTR [rax],al
  4295f0:	xor    BYTE PTR [rbp+0x42],dl
  4295f6:	add    BYTE PTR [rax],al
  4295f8:	add    al,0x0
  4295fa:	add    BYTE PTR [rax],al
  4295fc:	add    BYTE PTR [rax],al
  4295fe:	add    BYTE PTR [rax],al
  429600:	(bad)  
  429601:	xchg   DWORD PTR [rdx+0x0],eax
  429604:	add    BYTE PTR [rax],al
  429606:	add    BYTE PTR [rax],al
  429608:	or     al,BYTE PTR [rax]
  42960a:	add    BYTE PTR [rax],al
  42960c:	add    BYTE PTR [rax],al
  42960e:	add    BYTE PTR [rax],al
  429610:	cmp    BYTE PTR [rbp+0x42],dl
  429616:	add    BYTE PTR [rax],al
  429618:	or     DWORD PTR [rax],eax
  42961a:	add    BYTE PTR [rax],al
  42961c:	add    BYTE PTR [rax],al
  42961e:	add    BYTE PTR [rax],al
  429620:	(bad)  
  429621:	xchg   DWORD PTR [rdx+0x0],eax
  429624:	add    BYTE PTR [rax],al
  429626:	add    BYTE PTR [rax],al
  429628:	or     al,BYTE PTR [rax]
  42962a:	add    BYTE PTR [rax],al
  42962c:	add    BYTE PTR [rax],al
  42962e:	add    BYTE PTR [rax],al
  429630:	rex.X xchg ebp,eax
  429632:	rex.X add BYTE PTR [rax],al
  429635:	add    BYTE PTR [rax],al
  429637:	add    BYTE PTR [rax],cl
  429639:	add    BYTE PTR [rax],al
  42963b:	add    BYTE PTR [rax],al
  42963d:	add    BYTE PTR [rax],al
  42963f:	add    BYTE PTR [rdx+rax*4+0x42],dl
  429646:	add    BYTE PTR [rax],al
  429648:	add    eax,0x0
  42964d:	add    BYTE PTR [rax],al
  42964f:	add    BYTE PTR [rsi],al
  429651:	xchg   DWORD PTR [rdx+0x0],eax
  429654:	add    BYTE PTR [rax],al
  429656:	add    BYTE PTR [rax],al
  429658:	or     al,BYTE PTR [rax]
  42965a:	add    BYTE PTR [rax],al
  42965c:	add    BYTE PTR [rax],al
  42965e:	add    BYTE PTR [rax],al
  429660:	pushf  
  429661:	(bad)  
  429662:	rex.X add BYTE PTR [rax],al
  429665:	add    BYTE PTR [rax],al
  429667:	add    BYTE PTR [rdi],al
  429669:	add    BYTE PTR [rax],al
  42966b:	add    BYTE PTR [rax],al
  42966d:	add    BYTE PTR [rax],al
  42966f:	add    BYTE PTR [rsi],al
  429671:	xchg   DWORD PTR [rdx+0x0],eax
  429674:	add    BYTE PTR [rax],al
  429676:	add    BYTE PTR [rax],al
  429678:	or     al,BYTE PTR [rax]
  42967a:	add    BYTE PTR [rax],al
  42967c:	add    BYTE PTR [rax],al
  42967e:	add    BYTE PTR [rax],al
  429680:	(bad)  
  429681:	xchg   DWORD PTR [rdx+0x0],eax
  429684:	add    BYTE PTR [rax],al
  429686:	add    BYTE PTR [rax],al
  429688:	or     al,BYTE PTR [rax]
  42968a:	add    BYTE PTR [rax],al
  42968c:	add    BYTE PTR [rax],al
  42968e:	add    BYTE PTR [rax],al
  429690:	xchg   r13,rax
  429692:	rex.X add BYTE PTR [rax],al
  429695:	add    BYTE PTR [rax],al
  429697:	add    BYTE PTR [rdx],al
	...
  4296bd:	add    BYTE PTR [rax],al
  4296bf:	add    BYTE PTR [rip+0x20005e5f],ch        # 0x2042f524
  4296c5:	and    BYTE PTR [rip+0xa732573],ah        # 0xab5bc3e
  4296cb:	add    BYTE PTR [rcx+0x75],ah
  4296ce:	je     0x42973f
  4296d0:	sub    eax,0x6974706f
  4296d5:	outs   dx,DWORD PTR ds:[rsi]
  4296d6:	outs   dx,BYTE PTR ds:[rsi]
  4296d7:	jae    0x4296d9
  4296d9:	jo     0x42974d
  4296db:	outs   dx,DWORD PTR ds:[rsi]
  4296dc:	addr32 jb 0x429740
  4296df:	ins    DWORD PTR es:[rdi],dx
  4296e0:	add    BYTE PTR [rip+0x64252d25],ah        # 0x6467c40b
  4296e6:	jae    0x429708
  4296e8:	and    eax,0xa7325
  4296ed:	or     ah,BYTE PTR [rip+0xa0a73]        # 0x4ca166
  4296f3:	cmp    eax,0x656c6966
  4296f8:	add    BYTE PTR [rip+0x72624d],bh        # 0xb4f94b
  4296fe:	cmp    eax,0x786c7043
  429703:	add    BYTE PTR [rbx+0x3d],bl
  429706:	(bad)  
  429707:	jb     0x429770
  429709:	pop    rbp
  42970a:	add    BYTE PTR [rip+0x2432252d],ch        # 0x2474bc3d
  429710:	jae    0x429737
  429712:	xor    DWORD PTR [rbx+rsi*2],esp
  429715:	add    BYTE PTR [rip+0x6d6954],bh        # 0xb0006f
  42971b:	outs   dx,BYTE PTR ds:[rsi]
  42971c:	outs   dx,DWORD PTR ds:[rsi]
  42971d:	outs   dx,BYTE PTR ds:[rsi]
  42971e:	add    BYTE PTR gs:[rbx],ah
  429721:	and    BYTE PTR [rax],ah
  429723:	jo     0x429797
  429725:	gs jae 0x42978d
  429728:	je     0x429759
  42972a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  429731:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  429738:	and    BYTE PTR [rsi+0x69],ah
  42973b:	ins    BYTE PTR es:[rdi],dx
  42973c:	or     ah,BYTE PTR gs:[rbx]
  42973f:	and    BYTE PTR [rax],ah
  429741:	and    eax,0xa2373
  429746:	and    BYTE PTR [rip+0x25207333],ah        # 0x25630a7f
  42974c:	sub    eax,0x20733431
  429751:	and    eax,0x73250073
  429756:	add    BYTE PTR [rdi+rbp*1+0x46],dl
  42975a:	add    BYTE PTR [rdx],cl
  42975c:	and    eax,0x250a0a73
  429761:	jae    0x429763
  429763:	imul   r13d,DWORD PTR [rax+r8*1+0x4b],0x4d006457
  42976c:	(bad)  
  42976e:	add    BYTE PTR [rbx+0x70],al
  429771:	js     0x429773
  429773:	outs   dx,BYTE PTR ds:[rsi]
  429774:	outs   dx,DWORD PTR ds:[rsi]
  429775:	and    BYTE PTR [rax],al
  429777:	rex.WRX jne 0x4297e7
  42977a:	add    BYTE PTR [rdi+0x70],ch
  42977d:	je     0x42977f
  42977f:	pop    rcx
  429780:	rex.RB push r11
  429782:	add    BYTE PTR [rbx+0x74],dl
  429785:	jb     0x429787
  429787:	push   rsp
  429788:	imul   ebp,DWORD PTR [rbp+0x0],0x9090909
  42978f:	sub    eax,0x9090020
  429794:	or     DWORD PTR [rcx],ecx
  429796:	and    BYTE PTR [rax],ah
  429798:	add    BYTE PTR [rcx],cl
  42979a:	or     DWORD PTR [rcx],ecx
  42979c:	or     DWORD PTR [rip+0x6e61202d],ebp        # 0x6ea3b7cf
  4297a2:	and    BYTE PTR fs:[rax],al
  4297a5:	or     DWORD PTR [rcx],ecx
  4297a7:	or     DWORD PTR [rcx],ecx
  4297a9:	and    eax,0x20000a73
  4297ae:	and    BYTE PTR [rax],ah
  4297b0:	and    BYTE PTR [rax],ah
  4297b2:	and    BYTE PTR [rax],al
  4297b4:	and    BYTE PTR [rax],ah
  4297b6:	and    BYTE PTR [rax],ah
  4297b8:	and    BYTE PTR [rax],al
  4297ba:	and    BYTE PTR [rax],ah
  4297bc:	and    BYTE PTR [rax],al
  4297be:	and    BYTE PTR [rax],ah
  4297c0:	add    BYTE PTR [rcx+0x6c],ah
  4297c3:	ins    BYTE PTR es:[rdi],dx
  4297c4:	add    BYTE PTR [rax],ah
  4297c6:	or     DWORD PTR [rdx],ecx
  4297c8:	cmp    bh,BYTE PTR [rip+0x5f732500]        # 0x5fb5bcce
  4297ce:	and    eax,0x64255f73
  4297d3:	cmp    eax,0x272700
  4297d8:	and    BYTE PTR [rax],ah
  4297da:	and    BYTE PTR [rax],ah
  4297dc:	and    BYTE PTR [rax],ah
  4297de:	and    BYTE PTR [rax],ah
  4297e0:	cmp    edi,DWORD PTR [rbx]
  4297e2:	or     cl,BYTE PTR [rdx]
  4297e4:	add    BYTE PTR [rdi],ah
  4297e6:	or     cl,BYTE PTR [rdx]
  4297e8:	add    BYTE PTR [rdi+rbp*1],bh
  4297eb:	and    eax,0xa3e73
  4297f0:	and    BYTE PTR [rax],ah
  4297f2:	and    eax,0x25000a73
  4297f7:	and    eax,0x7364252d
  4297fc:	add    BYTE PTR [rdx],cl
  4297fe:	gs js  0x429871
  429801:	outs   dx,DWORD PTR ds:[rsi]
  429802:	jb     0x429878
  429804:	and    BYTE PTR [rip+0x73255f73],ah        # 0x7367f77d
  42980a:	pop    rdi
  42980b:	and    eax,0x66000a64
  429810:	(bad)  
  429811:	ins    BYTE PTR es:[rdi],dx
  429812:	jae    0x429879
  429814:	add    BYTE PTR [rax],ah
  429816:	and    BYTE PTR [rax],ah
  429818:	and    BYTE PTR [rip+0xa29202a],ch        # 0xa6bb848
  42981e:	add    BYTE PTR [rsi+0x6c],ah
  429821:	(bad)  
  429822:	add    BYTE PTR [ecx+0x4e],cl
  429826:	push   rsi
  429827:	rex.B
  429828:	rex.WR
  429829:	rex.WB
  42982a:	rex.R sub eax,0x2a006425
  429830:	rex.WB
  429831:	rex.WRX push rsi
  429833:	rex.B
  429834:	rex.WR
  429835:	rex.WB
  429836:	sub    r8b,BYTE PTR [rax]
  429839:	pop    rsp
  42983a:	outs   dx,BYTE PTR ds:[rsi]
  42983b:	pop    rsp
  42983c:	or     al,BYTE PTR [rax]
  42983e:	and    BYTE PTR [rax],ah
  429840:	and    BYTE PTR [rax],ah
  429842:	sub    eax,0x29202a2d
  429847:	or     al,BYTE PTR [rax]
  429849:	sub    eax,0x4f4c002d
  42984e:	rex.WRX
  42984f:	rex.RXB push r13
  429851:	push   rbx
  429852:	rex.B
  429853:	rex.RXB
  429854:	add    BYTE PTR [r8],r12b
  429857:	and    BYTE PTR [rax],ah
  429859:	and    BYTE PTR [rax],ah
  42985b:	and    BYTE PTR [rax],ah
  42985d:	and    BYTE PTR [rax],ah
  42985f:	and    BYTE PTR [rax],ah
  429861:	and    BYTE PTR [rip+0x5c000a73],ah        # 0x5c42a2da
  429867:	and    eax,0x6f3330
  42986c:	ins    DWORD PTR es:[rdi],dx
  42986d:	outs   dx,DWORD PTR ds:[rsi]
  42986e:	jb     0x4298d5
  429870:	add    BYTE PTR ds:0x79742073,bh
  429877:	jo     0x4298de
  429879:	cmp    eax,0x7473656e
  42987e:	gs fs or al,BYTE PTR ds:[rax]
  429883:	and    eax,0x25000a73
  429888:	jae    0x429894
  42988a:	and    BYTE PTR [rax],ah
  42988c:	add    BYTE PTR [rdi+0x50],cl
  42988f:	push   rsp
  429890:	pop    rdi
  429891:	push   r10
  429893:	rex.RXB pop r15
  429895:	rex.WRX
  429896:	rex.RB
  429897:	rex.RB
  429898:	rex.R
  429899:	rex.RB
  42989a:	rex.R cmp eax,0x3c004f4e
  4298a0:	and    eax,0xa3e2f73
  4298a5:	add    BYTE PTR [rdi+0x50],cl
  4298a8:	push   rsp
  4298a9:	pop    rdi
  4298aa:	push   r10
  4298ac:	rex.RXB pop r15
  4298ae:	rex.WRX
  4298af:	rex.RB
  4298b0:	rex.RB
  4298b1:	rex.R
  4298b2:	rex.RB
  4298b3:	rex.R cmp eax,0x9004b4f
  4298b9:	add    BYTE PTR ds:0x6f003e73,bh
  4298c0:	jo     0x429936
  4298c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x78650a00
  4298c9:	jo     0x42993a
  4298cb:	jb     0x429941
  4298cd:	and    BYTE PTR [rip+0x73255f73],ah        # 0x7367f846
  4298d3:	or     al,BYTE PTR [rax]
  4298d5:	and    eax,0x73255f73
  4298da:	cmp    eax,0x207c2000
  4298df:	add    BYTE PTR [rax+0x41],dl
  4298e2:	rex.RXB
  4298e3:	rex.RB push r10
  4298e5:	add    BYTE PTR [rip+0x20732431],ah        # 0x20b5bd1c
  4298eb:	and    eax,0x20732432
  4298f0:	cmp    esp,DWORD PTR [rax]
  4298f2:	jb     0x429961
  4298f4:	and    BYTE PTR [rip+0x32252066],ch        # 0x3267b960
  4298fa:	and    al,0x73
  4298fc:	add    BYTE PTR [rax],ah
  4298fe:	sub    esp,DWORD PTR [rax]
  429900:	add    BYTE PTR [rax],ah
  429902:	and    BYTE PTR [rax+0x75],dh
  429905:	je     0x42997a
  429907:	sub    BYTE PTR [rdi+0x28],bl
  42990a:	and    eax,0x3b292973
  42990f:	or     al,BYTE PTR [rax]
  429911:	pop    rsp
  429912:	(bad)  
  429913:	add    BYTE PTR [rdi],ah
  429915:	and    eax,0x20002773
  42991a:	sub    eax,0x7325202d
  42991f:	add    BYTE PTR [rip+0x73255f73],ah        # 0x7367f898
  429925:	pop    rdi
  429926:	push   rsp
  429927:	rex.RB pop r8
  429929:	push   rsp
  42992a:	cmp    eax,0x21230027
  42992f:	and    BYTE PTR [rip+0xa000a73],ah        # 0xa42a3a8
  429935:	outs   dx,BYTE PTR gs:[rsi]
  429937:	jbe    0x429959
  429939:	jl     0x42995b
  42993b:	addr32 jb 0x4299a3
  42993e:	jo     0x429960
  429940:	(bad)  
  429941:	pop    rsi
  429942:	and    eax,0xa275f73
  429947:	add    BYTE PTR [rip+0x6c243125],bh        # 0x6c66ca72
  42994d:	jne    0x42996f
  42994f:	and    esp,DWORD PTR [rax]
  429951:	xor    BYTE PTR [rax+0x25],bh
  429954:	xor    DWORD PTR [rsp+rbp*2],esp
  429957:	pop    rax
  429958:	or     al,BYTE PTR [rax]
  42995a:	jae    0x4299d0
  42995c:	outs   dx,DWORD PTR fs:[rsi]
  42995e:	jne    0x4299d4
  429960:	add    BYTE PTR [rip+0x42252041],ah        # 0x4267b9a7
  429966:	and    BYTE PTR [rip+0x25202c65],ah        # 0x2562c5d1
  42996c:	pop    rcx
  42996d:	and    BYTE PTR [rcx+0x74],ah
  429970:	and    BYTE PTR [rip+0x5a252072],ah        # 0x5a67b9e8
  429976:	add    BYTE PTR [rbp+rcx*2+0x50],dl
  42997a:	rex.R
  42997b:	rex.WB push r10
  42997d:	add    BYTE PTR [rip+0x73752f73],ah        # 0x73b7c8f6
  429983:	gs sub eax,0x582e7525
  429989:	pop    rax
  42998a:	pop    rax
  42998b:	pop    rax
  42998c:	pop    rax
  42998d:	pop    rax
  42998e:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  429992:	add    BYTE PTR gs:0x79742073,bh
  42999a:	jo     0x429a01
  42999c:	cmp    eax,0x3e7325
  4299a1:	push   rsi
  4299a2:	rex.RB push r10
  4299a4:	push   rbx
  4299a5:	rex.WB
  4299a6:	rex.WRXB
  4299a7:	rex.WRX add BYTE PTR [rbx],r12b
  4299aa:	js     0x4299d1
  4299ac:	xor    BYTE PTR [rdx],dh
  4299ae:	pop    rax
  4299af:	cmp    eax,DWORD PTR [rax]
  4299b1:	rex.WRXB push r8
  4299b3:	push   rsp
  4299b4:	pop    rdi
  4299b5:	push   r10
  4299b7:	rex.RXB pop r15
  4299b9:	rex.WRX
  4299ba:	rex.RB
  4299bb:	rex.RB
  4299bc:	rex.R
  4299bd:	rex.RB
  4299be:	rex.R cmp eax,0x534559
  4299c4:	(bad)  
  4299c5:	pop    rsp
  4299c6:	(bad)  
  4299c7:	(bad)  
  4299c8:	add    BYTE PTR [rax],ah
  4299ca:	(bad)  
  4299cb:	and    eax,0x6c002773
  4299d0:	imul   esp,DWORD PTR [rdx+0x6f],0x20737470
  4299d7:	ins    DWORD PTR es:[rdi],dx
  4299d8:	imul   esi,DWORD PTR [rbx+0x67],0x73736575
  4299df:	gs and BYTE PTR fs:[rbp+riz*2+0x6e],ch
  4299e5:	addr32 je 0x429a50
  4299e8:	and    BYTE PTR [rdi+0x66],ch
  4299eb:	and    BYTE PTR [rbx+0x74],dh
  4299ee:	jb     0x429a59
  4299f0:	outs   dx,BYTE PTR ds:[rsi]
  4299f1:	or     al,BYTE PTR [eax]
  4299f4:	or     cl,BYTE PTR [rdi+0x50]
  4299f7:	push   rsp
  4299f8:	rex.WB
  4299f9:	rex.WRXB
  4299fa:	rex.WRX pop rdi
  4299fc:	rex.XB push r12
  4299fe:	cmp    eax,0x73000a30
  429a03:	gs je  0x429a26
  429a06:	sub    eax,0x742f002d
  429a0b:	ins    DWORD PTR es:[rdi],dx
  429a0c:	jo     0x429a0e
  429a0e:	and    BYTE PTR [rax],ah
  429a10:	and    BYTE PTR [rax],ah
  429a12:	and    BYTE PTR [rax],ah
  429a14:	and    BYTE PTR [rax],ah
  429a16:	and    BYTE PTR [rax],ah
  429a18:	and    BYTE PTR [rax],ah
  429a1a:	cmp    edi,DWORD PTR [rbx]
  429a1c:	or     cl,BYTE PTR [rdx]
  429a1e:	add    BYTE PTR [rax],ah
  429a20:	and    BYTE PTR [rax],ah
  429a22:	and    BYTE PTR [rax],ah
  429a24:	and    BYTE PTR [rax],ah
  429a26:	and    BYTE PTR [rdi],ah
  429a28:	and    eax,0x29202763
  429a2d:	or     al,BYTE PTR [rax]
  429a2f:	and    BYTE PTR [rax],ah
  429a31:	and    BYTE PTR [rax],ah
  429a33:	and    BYTE PTR [rax],ah
  429a35:	and    BYTE PTR [rax],ah
  429a37:	(bad)  
  429a38:	and    eax,0x29202773
  429a3d:	or     al,BYTE PTR [rax]
  429a3f:	and    BYTE PTR [rax],ah
  429a41:	and    BYTE PTR [rax],ah
  429a43:	and    BYTE PTR [rax],ah
  429a45:	and    BYTE PTR [rax],ah
  429a47:	(bad)  
  429a48:	and    eax,0x7c202773
  429a4d:	and    BYTE PTR [rdx+rcx*1+0x0],bl
  429a51:	cmp    al,0x25
  429a53:	xor    DWORD PTR [rbx+rsi*2],esp
  429a56:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  429a5a:	gs cmp eax,0x6c6f6f62
  429a60:	gs (bad) 
  429a62:	outs   dx,BYTE PTR ds:[rsi]
  429a63:	ds and eax,0x3c732432
  429a69:	(bad)  
  429a6a:	and    eax,0x3e732431
  429a6f:	or     al,BYTE PTR [rax]
  429a71:	and    esp,DWORD PTR [rax]
  429a73:	and    BYTE PTR [rsi+0x72],al
  429a76:	outs   dx,DWORD PTR ds:[rsi]
  429a77:	ins    DWORD PTR es:[rdi],dx
  429a78:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429a7c:	and    BYTE PTR [rip+0x706f2073],ah        # 0x70b1baf5
  429a82:	je     0x429aed
  429a84:	outs   dx,DWORD PTR ds:[rsi]
  429a85:	outs   dx,BYTE PTR ds:[rsi]
  429a86:	and    BYTE PTR [rbp+riz*2+0x66],ah
  429a8a:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  429a91:	jae    0x429a9d
  429a93:	and    ecx,DWORD PTR [rdx]
  429a95:	add    BYTE PTR [rbp+0x63],ah
  429a98:	push   0x5727206f
  429a9d:	(bad)  
  429a9e:	jb     0x429b0e
  429aa0:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429aa7:	(bad)  
  429aa8:	outs   dx,BYTE PTR ds:[rsi]
  429aa9:	outs   dx,BYTE PTR ds:[rsi]
  429aaa:	outs   dx,DWORD PTR ds:[rsi]
  429aab:	je     0x429acd
  429aad:	ins    BYTE PTR es:[rdi],dx
  429aae:	outs   dx,DWORD PTR ds:[rsi]
  429aaf:	(bad)  
  429ab0:	and    BYTE PTR fs:[rdi+0x70],ch
  429ab4:	je     0x429b1f
  429ab6:	outs   dx,DWORD PTR ds:[rsi]
  429ab7:	outs   dx,BYTE PTR ds:[rsi]
  429ab8:	jae    0x429ada
  429aba:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  429ac1:	ds xor al,BYTE PTR es:[rax]
  429ac5:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429ac9:	and    BYTE PTR [rdi],ah
  429acb:	push   rdi
  429acc:	(bad)  
  429acd:	jb     0x429b3d
  429acf:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429ad6:	(bad)  
  429ad7:	outs   dx,BYTE PTR ds:[rsi]
  429ad8:	outs   dx,BYTE PTR ds:[rsi]
  429ad9:	outs   dx,DWORD PTR ds:[rsi]
  429ada:	je     0x429afc
  429adc:	jae    0x429b3f
  429ade:	jbe    0x429b45
  429ae0:	and    BYTE PTR [rdi+0x70],ch
  429ae3:	je     0x429b4e
  429ae5:	outs   dx,DWORD PTR ds:[rsi]
  429ae6:	outs   dx,BYTE PTR ds:[rsi]
  429ae7:	jae    0x429b09
  429ae9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  429af0:	ds xor al,BYTE PTR es:[rax]
  429af4:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429af8:	and    BYTE PTR [rdi],ah
  429afa:	push   rdi
  429afb:	(bad)  
  429afc:	jb     0x429b6c
  429afe:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429b05:	(bad)  
  429b06:	outs   dx,BYTE PTR ds:[rsi]
  429b07:	outs   dx,BYTE PTR ds:[rsi]
  429b08:	outs   dx,DWORD PTR ds:[rsi]
  429b09:	je     0x429b2b
  429b0b:	jae    0x429b82
  429b0d:	jo     0x429b7f
  429b0f:	jb     0x429b76
  429b11:	jae    0x429b86
  429b13:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429b17:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  429b1b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
  429b23:	outs   dx,DWORD PTR ds:[rsi]
  429b24:	jo     0x429b9a
  429b26:	imul   ebp,DWORD PTR [rdi+0x6e],0x69662073
  429b2d:	ins    BYTE PTR es:[rdi],dx
  429b2e:	gs jae 0x429b58
  429b31:	and    BYTE PTR [rsi],bh
  429b33:	xor    al,BYTE PTR es:[rax]
  429b36:	cmp    al,0x25
  429b38:	xor    DWORD PTR [rbx+rsi*2],esp
  429b3b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  429b3f:	gs cmp eax,0x65746e69
  429b45:	addr32 gs jb 0x429b87
  429b49:	xor    BYTE PTR [rax+0x25],bh
  429b4c:	xor    ah,BYTE PTR [rsp+rbp*2]
  429b4f:	pop    rax
  429b50:	cmp    al,0x2f
  429b52:	and    eax,0x3e732431
  429b57:	or     al,BYTE PTR [rax]
  429b59:	and    eax,0x5f732431
  429b5e:	and    eax,0x5f732432
  429b63:	push   rsp
  429b64:	rex.RB pop r8
  429b66:	push   rsp
  429b67:	cmp    eax,0x206f6e27
  429b6c:	and    eax,0x20732432
  429b71:	je     0x429bd8
  429b73:	js     0x429be9
  429b75:	(bad)  
  429b76:	or     al,BYTE PTR [rax]
  429b78:	and    eax,0x5f732431
  429b7d:	and    eax,0x5f732432
  429b82:	rex.WRB
  429b83:	rex.WRXB
  429b84:	rex.R
  429b85:	rex.RB cmp eax,0x24332527
  429b8b:	jae    0x429bb4
  429b8d:	or     ah,BYTE PTR [rbp+0x78]
  429b90:	jo     0x429c01
  429b92:	jb     0x429c08
  429b94:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5bfcb
  429b9a:	and    eax,0x5f732432
  429b9f:	rex.WRB
  429ba0:	rex.WRXB
  429ba1:	rex.R
  429ba2:	or     r8b,BYTE PTR [r8]
  429ba5:	and    eax,0x5f732431
  429baa:	and    eax,0x3d732432
  429baf:	(bad)  
  429bb0:	and    eax,0x27732433
  429bb5:	or     ah,BYTE PTR [rbp+0x78]
  429bb8:	jo     0x429c29
  429bba:	jb     0x429c30
  429bbc:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5bff3
  429bc2:	and    eax,0xa732432
  429bc7:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5bffe
  429bcd:	and    eax,0x5f732432
  429bd2:	rex.XB push r12
  429bd4:	cmp    eax,0x64243325
  429bd9:	or     ah,BYTE PTR [rbp+0x78]
  429bdc:	jo     0x429c4d
  429bde:	jb     0x429c54
  429be0:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c017
  429be6:	and    eax,0x5f732432
  429beb:	rex.XB push r12
  429bed:	or     al,BYTE PTR [rax]
  429bef:	rex.WRXB push r8
  429bf1:	push   rsp
  429bf2:	rex.WB
  429bf3:	rex.WRXB
  429bf4:	rex.WRX pop rdi
  429bf6:	rex.XB push r12
  429bf8:	cmp    eax,0x650a6425
  429bfd:	js     0x429c6f
  429bff:	outs   dx,DWORD PTR ds:[rsi]
  429c00:	jb     0x429c76
  429c02:	and    BYTE PTR [rdi+0x50],cl
  429c05:	push   rsp
  429c06:	rex.WB
  429c07:	rex.WRXB
  429c08:	rex.WRX pop rdi
  429c0a:	rex.XB push r12
  429c0c:	or     al,BYTE PTR [rax]
  429c0e:	and    eax,0x5f732431
  429c13:	and    eax,0x3d732432
  429c18:	and    eax,0xa732433
  429c1d:	gs js  0x429c90
  429c20:	outs   dx,DWORD PTR ds:[rsi]
  429c21:	jb     0x429c97
  429c23:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c05a
  429c29:	and    eax,0xa732432
  429c2e:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c065
  429c34:	and    eax,0x3d732432
  429c39:	and    eax,0x20642433
  429c3e:	and    esp,DWORD PTR [rax]
  429c40:	xor    BYTE PTR [rax+0x25],bh
  429c43:	xor    esp,DWORD PTR [rax+rbx*2]
  429c46:	or     ah,BYTE PTR [rbp+0x78]
  429c49:	jo     0x429cba
  429c4b:	jb     0x429cc1
  429c4d:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c084
  429c53:	and    eax,0xa732432
  429c58:	add    BYTE PTR [rax],ah
  429c5a:	and    BYTE PTR [rax],ah
  429c5c:	and    BYTE PTR [rax],ah
  429c5e:	and    BYTE PTR [rax],ah
  429c60:	and    BYTE PTR [rbx+0x61],ah
  429c63:	jae    0x429cca
  429c65:	and    BYTE PTR [rdx],ah
  429c67:	and    al,0x7b
  429c69:	rex.WRXB push r8
  429c6b:	push   rsp
  429c6c:	pop    rdi
  429c6d:	rex.XB
  429c6e:	rex.WRXB
  429c6f:	rex.R
  429c70:	rex.RB jge 0x429c95
  429c73:	and    BYTE PTR [rcx+0x6e],ch
  429c76:	or     al,BYTE PTR [rax]
  429c78:	and    BYTE PTR [rax],ah
  429c7a:	and    BYTE PTR [rax],ah
  429c7c:	and    BYTE PTR [rax],ah
  429c7e:	and    BYTE PTR [rax],ah
  429c80:	and    BYTE PTR [rax],ah
  429c82:	and    BYTE PTR [rax],ah
  429c84:	imul   esp,DWORD PTR [rsi+0x20],0x2524205b
  429c8b:	xor    DWORD PTR [rbx+rsi*2],esp
  429c8e:	pop    rdi
  429c8f:	and    eax,0x5f732432
  429c94:	rex.XB push r12
  429c96:	and    BYTE PTR [rip+0x25207467],ch        # 0x25631103
  429c9c:	xor    esp,DWORD PTR [rsi*2+0x3b205d20]
  429ca3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429ca7:	outs   dx,BYTE PTR ds:[rsi]
  429ca8:	or     ah,BYTE PTR [rax]
  429caa:	and    BYTE PTR [rax],ah
  429cac:	and    BYTE PTR [rax],ah
  429cae:	and    BYTE PTR [rax],ah
  429cb0:	and    BYTE PTR [rax],ah
  429cb2:	and    BYTE PTR [rax],ah
  429cb4:	and    BYTE PTR [rax],ah
  429cb6:	and    BYTE PTR [rax],ah
  429cb8:	and    BYTE PTR [rbp+0x63],ah
  429cbb:	push   0x4527206f
  429cc0:	jb     0x429d34
  429cc2:	outs   dx,DWORD PTR ds:[rsi]
  429cc3:	jb     0x429cff
  429cc5:	and    BYTE PTR [rax],ah
  429cc7:	ins    DWORD PTR es:[rdi],dx
  429cc8:	outs   dx,DWORD PTR ds:[rsi]
  429cc9:	jb     0x429d30
  429ccb:	and    BYTE PTR [rax+rbp*2+0x61],dh
  429ccf:	outs   dx,BYTE PTR ds:[rsi]
  429cd0:	and    BYTE PTR [rip+0x20642433],ah        # 0x20a6c109
  429cd6:	and    eax,0x20732432
  429cdb:	outs   dx,DWORD PTR ds:[rsi]
  429cdc:	jo     0x429d52
  429cde:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a2773
  429ce5:	and    BYTE PTR [rax],ah
  429ce7:	and    BYTE PTR [rax],ah
  429ce9:	and    BYTE PTR [rax],ah
  429ceb:	and    BYTE PTR [rax],ah
  429ced:	and    BYTE PTR [rax],ah
  429cef:	and    BYTE PTR [rax],ah
  429cf1:	and    BYTE PTR [rax],ah
  429cf3:	and    BYTE PTR [rbp+0x63],ah
  429cf6:	push   0x2422206f
  429cfb:	and    eax,0x5f732431
  429d00:	push   rbp
  429d01:	push   rbx
  429d02:	rex.B
  429d03:	rex.RXB
  429d04:	rex.RB pop r15
  429d06:	push   rsp
  429d07:	rex.RB pop r8
  429d09:	push   rsp
  429d0a:	and    cl,BYTE PTR [rdx]
  429d0c:	and    BYTE PTR [rax],ah
  429d0e:	and    BYTE PTR [rax],ah
  429d10:	and    BYTE PTR [rax],ah
  429d12:	and    BYTE PTR [rax],ah
  429d14:	and    BYTE PTR [rax],ah
  429d16:	and    BYTE PTR [rax],ah
  429d18:	and    BYTE PTR [rax],ah
  429d1a:	and    BYTE PTR [rax],ah
  429d1c:	gs js  0x429d88
  429d1f:	je     0x429d41
  429d21:	xor    DWORD PTR [rdx],ecx
  429d23:	and    BYTE PTR [rax],ah
  429d25:	and    BYTE PTR [rax],ah
  429d27:	and    BYTE PTR [rax],ah
  429d29:	and    BYTE PTR [rax],ah
  429d2b:	and    BYTE PTR [rax],ah
  429d2d:	and    BYTE PTR [rax],ah
  429d2f:	imul   sp,WORD PTR [rax],0x263e
  429d34:	xor    cl,BYTE PTR [rdx]
  429d36:	add    BYTE PTR [rbp+riz*2+0x73],dh
  429d3a:	je     0x429d5c
  429d3c:	and    al,0x7b
  429d3e:	and    eax,0x5f732431
  429d43:	and    eax,0x5f732432
  429d48:	rex.XB push r12
  429d4a:	sub    eax,0x2d207d30
  429d4f:	and    BYTE PTR gs:[eip+0x20752433],ah        # 0x20b7c18a
  429d57:	jl     0x429dd5
  429d59:	and    BYTE PTR [rbx+0xa],bh
  429d5c:	and    BYTE PTR [rax],ah
  429d5e:	and    BYTE PTR [rax],ah
  429d60:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429d64:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c19b
  429d6a:	and    eax,0x20732432
  429d6f:	push   0x6e207361
  429d74:	outs   dx,DWORD PTR ds:[rsi]
  429d75:	je     0x429d97
  429d77:	(bad)  
  429d78:	gs outs dx,BYTE PTR gs:[rsi]
  429d7b:	and    BYTE PTR [rbx+0x65],dh
  429d7e:	je     0x429d8a
  429d80:	and    BYTE PTR [rax],ah
  429d82:	and    BYTE PTR [rax],ah
  429d84:	gs js  0x429df0
  429d87:	je     0x429da9
  429d89:	xor    DWORD PTR [rdx],ecx
  429d8b:	jge    0x429dad
  429d8d:	xor    DWORD PTR [rsi],edi
  429d8f:	xor    cl,BYTE PTR es:[rdx]
  429d92:	add    BYTE PTR [rbp+riz*2+0x73],dh
  429d96:	je     0x429db8
  429d98:	sub    eax,0x2422206e
  429d9d:	and    eax,0x5f732431
  429da2:	and    eax,0x22732432
  429da7:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  429dab:	jnp    0x429db7
  429dad:	and    BYTE PTR [rax],ah
  429daf:	and    BYTE PTR [rax],ah
  429db1:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429db5:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c1ec
  429dbb:	and    eax,0x20732432
  429dc0:	push   0x6e207361
  429dc5:	outs   dx,DWORD PTR ds:[rsi]
  429dc6:	je     0x429de8
  429dc8:	(bad)  
  429dc9:	gs outs dx,BYTE PTR gs:[rsi]
  429dcc:	and    BYTE PTR [rbx+0x65],dh
  429dcf:	je     0x429ddb
  429dd1:	and    BYTE PTR [rax],ah
  429dd3:	and    BYTE PTR [rax],ah
  429dd5:	gs js  0x429e41
  429dd8:	je     0x429dfa
  429dda:	xor    DWORD PTR [rdx],ecx
  429ddc:	jge    0x429dfe
  429dde:	xor    DWORD PTR [rsi],edi
  429de0:	xor    cl,BYTE PTR es:[rdx]
  429de3:	add    BYTE PTR [rax],ah
  429de5:	and    BYTE PTR [rax],ah
  429de7:	and    BYTE PTR [rax],ah
  429de9:	and    BYTE PTR [rax],ah
  429deb:	and    BYTE PTR [rax],ah
  429ded:	and    BYTE PTR [rax],ah
  429def:	and    BYTE PTR [rbp+0x63],ah
  429df2:	push   0x2422206f
  429df7:	and    eax,0x73255f73
  429dfc:	pop    rdi
  429dfd:	push   rsp
  429dfe:	rex.RB pop r8
  429e00:	push   rsp
  429e01:	and    cl,BYTE PTR [rdx]
  429e03:	and    BYTE PTR [rax],ah
  429e05:	and    BYTE PTR [rax],ah
  429e07:	and    BYTE PTR [rax],ah
  429e09:	and    BYTE PTR [rax],ah
  429e0b:	and    BYTE PTR [rax],ah
  429e0d:	and    BYTE PTR [rax],ah
  429e0f:	gs js  0x429e7b
  429e12:	je     0x429e34
  429e14:	xor    BYTE PTR [rdx],cl
  429e16:	add    BYTE PTR [rdx],cl
  429e18:	and    esp,DWORD PTR [rax]
  429e1a:	and    esp,DWORD PTR [rax]
  429e1c:	and    esp,DWORD PTR [rax]
  429e1e:	and    esp,DWORD PTR [rax]
  429e20:	and    esp,DWORD PTR [rax]
  429e22:	and    esp,DWORD PTR [rax]
  429e24:	and    esp,DWORD PTR [rax]
  429e26:	and    esp,DWORD PTR [rax]
  429e28:	and    esp,DWORD PTR [rax]
  429e2a:	and    ecx,DWORD PTR [rdx]
  429e2c:	and    ecx,DWORD PTR [rdx]
  429e2e:	and    esp,DWORD PTR [rax]
  429e30:	and    BYTE PTR [rbp+0x4e],al
  429e33:	and    BYTE PTR [rdi+0x46],r9b
  429e37:	and    BYTE PTR [rcx+0x55],al
  429e3a:	push   rsp
  429e3b:	rex.WRXB
  429e3c:	rex.WRB
  429e3d:	push   r12
  429e3f:	rex.RB
  429e40:	and    BYTE PTR [rdi+0x50],r9b
  429e44:	push   rsp
  429e45:	rex.WB
  429e46:	rex.WRXB
  429e47:	rex.WRX and BYTE PTR [rax+0x52],r10b
  429e4b:	rex.WRXB
  429e4c:	rex.XB
  429e4d:	rex.RB push r11
  429e4f:	push   rbx
  429e50:	rex.WB
  429e51:	rex.WRX
  429e52:	rex.RXB or r12b,BYTE PTR [r11]
  429e55:	or     ah,BYTE PTR [rbx]
  429e57:	and    BYTE PTR [rbx],ah
  429e59:	and    BYTE PTR [rbx],ah
  429e5b:	and    BYTE PTR [rbx],ah
  429e5d:	and    BYTE PTR [rbx],ah
  429e5f:	and    BYTE PTR [rbx],ah
  429e61:	and    BYTE PTR [rbx],ah
  429e63:	and    BYTE PTR [rbx],ah
  429e65:	and    BYTE PTR [rbx],ah
  429e67:	and    BYTE PTR [rbx],ah
  429e69:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa6be9c
  429e6f:	and    BYTE PTR [rsi+0x6f],ch
  429e72:	je     0x429e94
  429e74:	ins    DWORD PTR es:[rdi],dx
  429e75:	outs   dx,DWORD PTR ds:[rsi]
  429e76:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  429e7e:	jae    0x429ea0
  429e80:	ins    DWORD PTR es:[rdi],dx
  429e81:	(bad)  
  429e82:	jb     0x429eef
  429e84:	gs jb  0x429ea7
  429e87:	sub    eax,0x20000a2d
  429e8c:	and    BYTE PTR [rax],ah
  429e8e:	and    BYTE PTR [rcx+0x66],ch
  429e91:	and    BYTE PTR [rbx+0x20],bl
  429e94:	sub    eax,0x2422206e
  429e99:	jnp    0x429eea
  429e9b:	push   rax
  429e9c:	push   rsp
  429e9d:	pop    rdi
  429e9e:	push   r10
  429ea0:	rex.RXB pop r15
  429ea2:	push   rsi
  429ea3:	rex.B
  429ea4:	rex.WR jge 0x429ec9
  429ea7:	and    BYTE PTR [rbp+0xa],bl
  429eaa:	and    BYTE PTR [rax],ah
  429eac:	and    BYTE PTR [rax],ah
  429eae:	je     0x429f18
  429eb0:	outs   dx,BYTE PTR gs:[rsi]
  429eb2:	or     ah,BYTE PTR [rax]
  429eb4:	and    BYTE PTR [rax],ah
  429eb6:	and    BYTE PTR [rax],ah
  429eb8:	and    BYTE PTR [rax],ah
  429eba:	and    BYTE PTR [rbp+0x76],ah
  429ebd:	(bad)  
  429ebe:	ins    BYTE PTR es:[rdi],dx
  429ebf:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c2f6
  429ec5:	and    al,0x7b
  429ec7:	rex.WRXB push r8
  429ec9:	push   rsp
  429eca:	pop    rdi
  429ecb:	rex.WRX
  429ecc:	rex.B
  429ecd:	rex.WRB
  429ece:	rex.RB jge 0x429ef5
  429ed1:	jnp    0x429f22
  429ed3:	push   rax
  429ed4:	push   rsp
  429ed5:	pop    rdi
  429ed6:	rex.RB
  429ed7:	rex.WR
  429ed8:	rex.RB
  429ed9:	rex.WRB
  429eda:	rex.RB
  429edb:	rex.WRX push rsp
  429edd:	jge    0x429f1c
  429edf:	and    ah,BYTE PTR [rdi]
  429ee1:	and    al,0x7b
  429ee3:	rex.WRXB push r8
  429ee5:	push   rsp
  429ee6:	pop    rdi
  429ee7:	push   r10
  429ee9:	rex.RXB pop r15
  429eeb:	push   rsi
  429eec:	rex.B
  429eed:	rex.WR jge 0x429f17
  429ef0:	and    cl,BYTE PTR [rdx]
  429ef2:	and    BYTE PTR [rax],ah
  429ef4:	and    BYTE PTR [rax],ah
  429ef6:	and    BYTE PTR [rax],ah
  429ef8:	and    BYTE PTR [rax],ah
  429efa:	gs js  0x429f6d
  429efd:	outs   dx,DWORD PTR ds:[rsi]
  429efe:	jb     0x429f74
  429f00:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c337
  429f06:	and    al,0x7b
  429f08:	rex.WRXB push r8
  429f0a:	push   rsp
  429f0b:	pop    rdi
  429f0c:	rex.WRX
  429f0d:	rex.B
  429f0e:	rex.WRB
  429f0f:	rex.RB jge 0x429f36
  429f12:	jnp    0x429f63
  429f14:	push   rax
  429f15:	push   rsp
  429f16:	pop    rdi
  429f17:	rex.RB
  429f18:	rex.WR
  429f19:	rex.RB
  429f1a:	rex.WRB
  429f1b:	rex.RB
  429f1c:	rex.WRX push rsp
  429f1e:	jge    0x429f2a
  429f20:	and    BYTE PTR [rax],ah
  429f22:	and    BYTE PTR [rax],ah
  429f24:	imul   cx,WORD PTR [rdx],0x6f64
  429f29:	outs   dx,BYTE PTR ds:[rsi]
  429f2a:	or     cl,BYTE PTR gs:[rdi+0x50]
  429f2e:	push   rsp
  429f2f:	rex.WB
  429f30:	rex.WRXB
  429f31:	rex.WRX pop rdi
  429f33:	rex.XB
  429f34:	rex.WRXB push r13
  429f36:	rex.WRX push rsp
  429f38:	cmp    eax,0x70786560
  429f3d:	jb     0x429f5f
  429f3f:	and    al,0x41
  429f41:	push   rdx
  429f42:	rex.RXB pop r15
  429f44:	rex.XB
  429f45:	rex.WRXB push r13
  429f47:	rex.WRX push rsp
  429f49:	and    BYTE PTR [rip+0x60232420],ch        # 0x6065c36f
  429f4f:	or     cl,BYTE PTR [rdi+0x50]
  429f52:	rex.RB push r10
  429f54:	rex.B
  429f55:	rex.WRX
  429f56:	rex.R pop rdi
  429f58:	rex.XB
  429f59:	rex.WRXB push r13
  429f5b:	rex.WRX push rsp
  429f5d:	cmp    eax,0x750a2324
  429f62:	outs   dx,BYTE PTR ds:[rsi]
  429f63:	jae    0x429fca
  429f65:	je     0x429f87
  429f67:	rex.WRXB push r8
  429f69:	push   rsp
  429f6a:	pop    rdi
  429f6b:	push   rax
  429f6c:	push   rdx
  429f6d:	rex.WRXB
  429f6e:	rex.XB
  429f6f:	rex.RB push r11
  429f71:	push   rbx
  429f72:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  429f76:	cmp    cl,BYTE PTR [rdx]
  429f78:	jne    0x429fe8
  429f7a:	jae    0x429fe1
  429f7c:	je     0x429f9e
  429f7e:	rex.WRXB push r8
  429f80:	push   rsp
  429f81:	pop    rdi
  429f82:	rex.RB
  429f83:	rex.WR
  429f84:	rex.RB
  429f85:	rex.WRB
  429f86:	rex.RB
  429f87:	rex.WRX push rsp
  429f89:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  429f8d:	cmp    cl,BYTE PTR [rdx]
  429f8f:	jne    0x429fff
  429f91:	jae    0x429ff8
  429f93:	je     0x429fb5
  429f95:	rex.WRXB push r8
  429f97:	push   rsp
  429f98:	pop    rdi
  429f99:	push   r10
  429f9b:	rex.RXB and BYTE PTR [r8],r12b
  429f9e:	and    BYTE PTR [rax],ah
  429fa0:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  429fa4:	cmp    cl,BYTE PTR [rdx]
  429fa6:	jne    0x42a016
  429fa8:	jae    0x42a00f
  429faa:	je     0x429fcc
  429fac:	rex.WRXB push r8
  429fae:	push   rsp
  429faf:	pop    rdi
  429fb0:	push   r10
  429fb2:	rex.RXB pop r15
  429fb4:	rex.WRX
  429fb5:	rex.RB
  429fb6:	rex.RB
  429fb7:	rex.R
  429fb8:	rex.RB
  429fb9:	and    BYTE PTR [rsp+rdi*2+0x20],r15b
  429fbe:	cmp    cl,BYTE PTR [rdx]
  429fc0:	jne    0x42a030
  429fc2:	jae    0x42a029
  429fc4:	je     0x429fe6
  429fc6:	rex.WRXB push r8
  429fc8:	push   rsp
  429fc9:	pop    rdi
  429fca:	rex.WRX
  429fcb:	rex.B
  429fcc:	rex.WRB
  429fcd:	and    BYTE PTR [r8],r12b
  429fd0:	and    BYTE PTR [rax],ah
  429fd2:	jl     0x42a050
  429fd4:	and    BYTE PTR [rdx],bh
  429fd6:	or     dh,BYTE PTR [rbp+0x6e]
  429fd9:	jae    0x42a040
  429fdb:	je     0x429ffd
  429fdd:	rex.WRXB push r8
  429fdf:	push   rsp
  429fe0:	pop    rdi
  429fe1:	rex.XB
  429fe2:	rex.WRXB
  429fe3:	rex.R
  429fe4:	and    BYTE PTR [r8],r12b
  429fe7:	and    BYTE PTR [rax],ah
  429fe9:	jl     0x42a067
  429feb:	and    BYTE PTR [rdx],bh
  429fed:	or     dh,BYTE PTR [rbp+0x6e]
  429ff0:	jae    0x42a057
  429ff2:	je     0x42a014
  429ff4:	rex.WRXB push r8
  429ff6:	push   rsp
  429ff7:	pop    rdi
  429ff8:	push   r10
  429ffa:	rex.RXB pop r15
  429ffc:	push   rsi
  429ffd:	rex.B
  429ffe:	rex.WR and BYTE PTR [rsp+rdi*2+0x20],r15b
  42a003:	cmp    cl,BYTE PTR [rdx]
  42a005:	add    BYTE PTR [rax],ah
  42a007:	and    BYTE PTR [rax],ah
  42a009:	and    BYTE PTR [rax],ah
  42a00b:	and    BYTE PTR [rax],ah
  42a00d:	and    BYTE PTR [rdi+0x50],cl
  42a010:	push   rsp
  42a011:	pop    rdi
  42a012:	rex.XB
  42a013:	rex.WRXB
  42a014:	rex.R
  42a015:	rex.RB cmp eax,0x68636560
  42a01b:	outs   dx,DWORD PTR ds:[rsi]
  42a01c:	and    BYTE PTR [rdx],ah
  42a01e:	pop    rax
  42a01f:	and    al,0x7b
  42a021:	rex.WRXB push r8
  42a023:	push   rsp
  42a024:	pop    rdi
  42a025:	push   r10
  42a027:	rex.RXB jge 0x42a04c
  42a02a:	jl     0x42a09f
  42a02c:	gs and BYTE PTR fs:[rdi],ah
  42a030:	jae    0x42a061
  42a032:	pop    rsi
  42a033:	pop    rax
  42a034:	sub    eax,0x272f2f2a
  42a039:	(bad)  
  42a03a:	or     ah,BYTE PTR [rax]
  42a03c:	and    BYTE PTR [rax],ah
  42a03e:	and    BYTE PTR [rax],ah
  42a040:	and    BYTE PTR [rax],ah
  42a042:	and    BYTE PTR [rbx+0x68],dh
  42a045:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a04c:	and    BYTE PTR [rax],ah
  42a04e:	and    BYTE PTR [rax],ah
  42a050:	and    BYTE PTR [rdi+0x50],cl
  42a053:	push   rsp
  42a054:	pop    rdi
  42a055:	push   r10
  42a057:	rex.RXB cmp eax,0x200a3124
  42a05d:	and    BYTE PTR [rax],ah
  42a05f:	and    BYTE PTR [rax],ah
  42a061:	and    BYTE PTR [rax],ah
  42a063:	and    BYTE PTR [rbx+0x61],ah
  42a066:	jae    0x42a0cd
  42a068:	and    BYTE PTR [rdx],ah
  42a06a:	and    al,0x7b
  42a06c:	rex.WRXB push r8
  42a06e:	push   rsp
  42a06f:	pop    rdi
  42a070:	rex.XB
  42a071:	rex.WRXB
  42a072:	rex.R
  42a073:	rex.RB jge 0x42a098
  42a076:	and    BYTE PTR [rcx+0x6e],ch
  42a079:	and    BYTE PTR [rdx],ch
  42a07b:	cmp    eax,0xa29202a
  42a080:	and    BYTE PTR [rax],ah
  42a082:	and    BYTE PTR [rax],ah
  42a084:	and    BYTE PTR [rax],ah
  42a086:	and    BYTE PTR [rax],ah
  42a088:	and    BYTE PTR [rax],ah
  42a08a:	and    BYTE PTR [rax],ah
  42a08c:	rex.WRXB push r8
  42a08e:	push   rsp
  42a08f:	pop    rdi
  42a090:	push   r10
  42a092:	rex.RXB pop r15
  42a094:	push   rsi
  42a095:	rex.B
  42a096:	rex.WR cmp rax,0x68636560
  42a09c:	outs   dx,DWORD PTR ds:[rsi]
  42a09d:	and    BYTE PTR [rdx],ah
  42a09f:	and    al,0x7b
  42a0a1:	rex.WRXB push r8
  42a0a3:	push   rsp
  42a0a4:	pop    rdi
  42a0a5:	rex.XB
  42a0a6:	rex.WRXB
  42a0a7:	rex.R
  42a0a8:	rex.RB jge 0x42a0cd
  42a0ab:	jl     0x42a120
  42a0ad:	gs and BYTE PTR fs:[rdi],ah
  42a0b1:	jae    0x42a0e2
  42a0b3:	pop    rsi
  42a0b4:	pop    rbx
  42a0b5:	pop    rsi
  42a0b6:	cmp    eax,0x2f3d2a5d
  42a0bb:	(bad)  
  42a0bc:	(bad)  
  42a0bd:	(bad)  
  42a0be:	or     ah,BYTE PTR [rax]
  42a0c0:	and    BYTE PTR [rax],ah
  42a0c2:	and    BYTE PTR [rax],ah
  42a0c4:	and    BYTE PTR [rax],ah
  42a0c6:	and    BYTE PTR [rax],ah
  42a0c8:	and    BYTE PTR [rax],ah
  42a0ca:	and    BYTE PTR [rdi+0x50],cl
  42a0cd:	push   rsp
  42a0ce:	pop    rdi
  42a0cf:	rex.XB
  42a0d0:	rex.WRXB
  42a0d1:	rex.R
  42a0d2:	rex.RB cmp eax,0x68636560
  42a0d8:	outs   dx,DWORD PTR ds:[rsi]
  42a0d9:	and    BYTE PTR [rdx],ah
  42a0db:	and    al,0x7b
  42a0dd:	rex.WRXB push r8
  42a0df:	push   rsp
  42a0e0:	pop    rdi
  42a0e1:	rex.XB
  42a0e2:	rex.WRXB
  42a0e3:	rex.R
  42a0e4:	rex.RB jge 0x42a109
  42a0e7:	jl     0x42a15c
  42a0e9:	gs and BYTE PTR fs:[rdi],ah
  42a0ed:	jae    0x42a11e
  42a0ef:	cmp    eax,0x2f242a2e
  42a0f4:	(bad)  
  42a0f5:	(bad)  
  42a0f6:	(bad)  
  42a0f7:	and    BYTE PTR [rbx],bh
  42a0f9:	cmp    esp,DWORD PTR [rax]
  42a0fb:	gs jae 0x42a15f
  42a0fe:	movsxd ecx,DWORD PTR [rdx]
  42a100:	add    BYTE PTR [rax],ah
  42a102:	and    BYTE PTR [rax],ah
  42a104:	and    BYTE PTR [rax],ah
  42a106:	and    BYTE PTR [rax],ah
  42a108:	and    BYTE PTR [rdi+0x50],cl
  42a10b:	push   rsp
  42a10c:	pop    rdi
  42a10d:	rex.XB
  42a10e:	rex.WRXB
  42a10f:	rex.R
  42a110:	rex.RB cmp eax,0x68636560
  42a116:	outs   dx,DWORD PTR ds:[rsi]
  42a117:	and    BYTE PTR [rdx],ah
  42a119:	pop    rax
  42a11a:	and    al,0x7b
  42a11c:	rex.WRXB push r8
  42a11e:	push   rsp
  42a11f:	pop    rdi
  42a120:	push   r10
  42a122:	rex.RXB jge 0x42a147
  42a125:	and    BYTE PTR [rax+riz*1+0x73],bh
  42a129:	gs and BYTE PTR fs:[rdi],ah
  42a12d:	jae    0x42a15e
  42a12f:	pop    rax
  42a130:	sub    eax,0x5c2e285c
  42a135:	sub    DWORD PTR [rsi],ebp
  42a137:	sub    ch,BYTE PTR [rdi]
  42a139:	pop    rsp
  42a13a:	xor    DWORD PTR [rdi],ebp
  42a13c:	(bad)  
  42a13d:	(bad)  
  42a13e:	or     ah,BYTE PTR [rax]
  42a140:	and    BYTE PTR [rax],ah
  42a142:	and    BYTE PTR [rax],ah
  42a144:	and    BYTE PTR [rax],ah
  42a146:	and    BYTE PTR [rdi+0x50],cl
  42a149:	push   rsp
  42a14a:	pop    rdi
  42a14b:	push   r10
  42a14d:	rex.RXB cmp eax,0x63652060
  42a153:	push   0x5822206f
  42a158:	and    al,0x7b
  42a15a:	rex.WRXB push r8
  42a15c:	push   rsp
  42a15d:	pop    rdi
  42a15e:	push   r10
  42a160:	rex.RXB jge 0x42a185
  42a163:	and    BYTE PTR [rax+riz*1+0x73],bh
  42a167:	gs and BYTE PTR fs:[rdi],ah
  42a16b:	jae    0x42a19c
  42a16d:	pop    rax
  42a16e:	sub    eax,0x272f2f2e
  42a173:	(bad)  
  42a174:	or     al,BYTE PTR [rax]
  42a176:	or     al,BYTE PTR [rcx+0x52]
  42a179:	rex.RXB pop r15
  42a17b:	rex.XB
  42a17c:	rex.WRXB push r13
  42a17e:	rex.WRX push rsp
  42a180:	cmp    eax,0x4f0a2324
  42a185:	push   rax
  42a186:	push   rsp
  42a187:	pop    rdi
  42a188:	push   rax
  42a189:	push   rdx
  42a18a:	rex.WRXB
  42a18b:	rex.XB
  42a18c:	rex.RB push r11
  42a18e:	push   rbx
  42a18f:	cmp    eax,0x65757274
  42a194:	or     cl,BYTE PTR [rdi+0x50]
  42a197:	push   rsp
  42a198:	pop    rdi
  42a199:	push   r10
  42a19b:	rex.RXB cmp eax,0x770a3124
  42a1a1:	push   0x20656c69
  42a1a6:	and    al,0x7b
  42a1a8:	rex.WRXB push r8
  42a1aa:	push   rsp
  42a1ab:	pop    rdi
  42a1ac:	push   rax
  42a1ad:	push   rdx
  42a1ae:	rex.WRXB
  42a1af:	rex.XB
  42a1b0:	rex.RB push r11
  42a1b2:	push   rbx
  42a1b3:	jge    0x42a1d5
  42a1b5:	es and BYTE PTR es:[rbx+0x20],bl
  42a1ba:	and    al,0x23
  42a1bc:	and    BYTE PTR [rip+0x30207467],ch        # 0x30631629
  42a1c2:	and    BYTE PTR [rbp+0xa],bl
  42a1c5:	outs   dx,DWORD PTR fs:[rsi]
  42a1c7:	or     ah,BYTE PTR [rax]
  42a1c9:	and    BYTE PTR [rax],ah
  42a1cb:	and    BYTE PTR [rdi+0x50],cl
  42a1ce:	push   rsp
  42a1cf:	pop    rdi
  42a1d0:	rex.RB
  42a1d1:	rex.WR
  42a1d2:	rex.RB
  42a1d3:	rex.WRB
  42a1d4:	rex.RB
  42a1d5:	rex.WRX push rsp
  42a1d7:	cmp    eax,0x200a2727
  42a1dc:	and    BYTE PTR [rax],ah
  42a1de:	and    BYTE PTR [rdi+0x50],cl
  42a1e1:	push   rsp
  42a1e2:	pop    rdi
  42a1e3:	push   r10
  42a1e5:	rex.RXB pop r15
  42a1e7:	push   rsi
  42a1e8:	rex.B
  42a1e9:	rex.WR cmp rax,0xa0a2727
  42a1ef:	and    BYTE PTR [rax],ah
  42a1f1:	and    BYTE PTR [rax],ah
  42a1f3:	movsxd esp,DWORD PTR [rcx+0x73]
  42a1f6:	and    BYTE PTR gs:[rdx],ah
  42a1f9:	and    al,0x7b
  42a1fb:	rex.WRXB push r8
  42a1fd:	push   rsp
  42a1fe:	pop    rdi
  42a1ff:	push   r10
  42a201:	rex.RXB jge 0x42a226
  42a204:	and    BYTE PTR [rcx+0x6e],ch
  42a207:	or     ah,BYTE PTR [rax]
  42a209:	and    BYTE PTR [rax],ah
  42a20b:	and    BYTE PTR [rip+0xa29202d],ch        # 0xa6bc23e
  42a211:	and    BYTE PTR [rax],ah
  42a213:	and    BYTE PTR [rax],ah
  42a215:	and    BYTE PTR [rax],ah
  42a217:	and    BYTE PTR [rax],ah
  42a219:	rex.WRXB push r8
  42a21b:	push   rsp
  42a21c:	pop    rdi
  42a21d:	push   rax
  42a21e:	push   rdx
  42a21f:	rex.WRXB
  42a220:	rex.XB
  42a221:	rex.RB push r11
  42a223:	push   rbx
  42a224:	cmp    eax,0x736c6166
  42a229:	or     ah,BYTE PTR gs:[rax]
  42a22c:	and    BYTE PTR [rax],ah
  42a22e:	and    BYTE PTR [rax],ah
  42a230:	and    BYTE PTR [rax],ah
  42a232:	and    BYTE PTR [rbx+0x68],dh
  42a235:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a23c:	and    BYTE PTR [rax],ah
  42a23e:	and    BYTE PTR [rax],ah
  42a240:	and    BYTE PTR [rbx],bh
  42a242:	cmp    ecx,DWORD PTR [rdx]
  42a244:	add    BYTE PTR [rax],ah
  42a246:	and    BYTE PTR [rax],ah
  42a248:	and    BYTE PTR [rax],ah
  42a24a:	and    BYTE PTR [rax],ah
  42a24c:	and    BYTE PTR [rbx+0x61],ah
  42a24f:	jae    0x42a2b6
  42a251:	and    BYTE PTR [rdx],ah
  42a253:	and    al,0x7b
  42a255:	rex.WRXB push r8
  42a257:	push   rsp
  42a258:	pop    rdi
  42a259:	push   r10
  42a25b:	rex.RXB pop r15
  42a25d:	rex.WRX
  42a25e:	rex.RB
  42a25f:	rex.RB
  42a260:	rex.R
  42a261:	rex.RB
  42a262:	rex.R jge 0x42a287
  42a265:	and    BYTE PTR [rcx+0x6e],ch
  42a268:	or     ah,BYTE PTR [rax]
  42a26a:	and    BYTE PTR [rax],ah
  42a26c:	and    BYTE PTR [rax],ah
  42a26e:	and    BYTE PTR [rax],ah
  42a270:	and    BYTE PTR [rsi+0x4f],cl
  42a273:	and    BYTE PTR [rcx],ch
  42a275:	or     ah,BYTE PTR [rax]
  42a277:	and    BYTE PTR [rax],ah
  42a279:	and    BYTE PTR [rax],ah
  42a27b:	and    BYTE PTR [rax],ah
  42a27d:	and    BYTE PTR [rax],ah
  42a27f:	and    BYTE PTR [rax],ah
  42a281:	and    BYTE PTR [rdi+0x50],cl
  42a284:	push   rsp
  42a285:	pop    rdi
  42a286:	push   r10
  42a288:	rex.RXB pop r15
  42a28a:	push   rsi
  42a28b:	rex.B
  42a28c:	rex.WR cmp rax,0x200a2727
  42a292:	and    BYTE PTR [rax],ah
  42a294:	and    BYTE PTR [rax],ah
  42a296:	and    BYTE PTR [rax],ah
  42a298:	and    BYTE PTR [rax],ah
  42a29a:	and    BYTE PTR [rax],ah
  42a29c:	and    BYTE PTR [rbx],bh
  42a29e:	cmp    ecx,DWORD PTR [rdx]
  42a2a0:	and    BYTE PTR [rax],ah
  42a2a2:	and    BYTE PTR [rax],ah
  42a2a4:	and    BYTE PTR [rax],ah
  42a2a6:	and    BYTE PTR [rax],ah
  42a2a8:	pop    rcx
  42a2a9:	rex.RB push r11
  42a2ab:	and    BYTE PTR [rcx],ch
  42a2ad:	or     ah,BYTE PTR [rax]
  42a2af:	and    BYTE PTR [rax],ah
  42a2b1:	and    BYTE PTR [rax],ah
  42a2b3:	and    BYTE PTR [rax],ah
  42a2b5:	and    BYTE PTR [rax],ah
  42a2b7:	and    BYTE PTR [rax],ah
  42a2b9:	and    BYTE PTR [rcx+0x66],ch
  42a2bc:	and    BYTE PTR [rbx+0x20],bl
  42a2bf:	sub    eax,0x2422207a
  42a2c4:	jnp    0x42a315
  42a2c6:	push   rax
  42a2c7:	push   rsp
  42a2c8:	pop    rdi
  42a2c9:	push   r10
  42a2cb:	rex.RXB pop r15
  42a2cd:	push   rsi
  42a2ce:	rex.B
  42a2cf:	rex.WR jge 0x42a2f4
  42a2d2:	and    BYTE PTR [rbp+0xa],bl
  42a2d5:	and    BYTE PTR [rax],ah
  42a2d7:	and    BYTE PTR [rax],ah
  42a2d9:	and    BYTE PTR [rax],ah
  42a2db:	and    BYTE PTR [rax],ah
  42a2dd:	and    BYTE PTR [rax],ah
  42a2df:	and    BYTE PTR [rax],ah
  42a2e1:	je     0x42a34b
  42a2e3:	outs   dx,BYTE PTR gs:[rsi]
  42a2e5:	or     ah,BYTE PTR [rax]
  42a2e7:	and    BYTE PTR [rax],ah
  42a2e9:	and    BYTE PTR [rax],ah
  42a2eb:	and    BYTE PTR [rax],ah
  42a2ed:	and    BYTE PTR [rax],ah
  42a2ef:	and    BYTE PTR [rax],ah
  42a2f1:	and    BYTE PTR [rax],ah
  42a2f3:	and    BYTE PTR [rax],ah
  42a2f5:	and    BYTE PTR [rcx+0x66],ch
  42a2f8:	and    BYTE PTR [rbx+0x20],bl
  42a2fb:	and    al,0x23
  42a2fd:	and    BYTE PTR [rip+0x30207165],ch        # 0x30631468
  42a303:	and    BYTE PTR [rbp+0xa],bl
  42a306:	and    BYTE PTR [rax],ah
  42a308:	and    BYTE PTR [rax],ah
  42a30a:	and    BYTE PTR [rax],ah
  42a30c:	and    BYTE PTR [rax],ah
  42a30e:	and    BYTE PTR [rax],ah
  42a310:	and    BYTE PTR [rax],ah
  42a312:	and    BYTE PTR [rax],ah
  42a314:	and    BYTE PTR [rax],ah
  42a316:	je     0x42a380
  42a318:	outs   dx,BYTE PTR gs:[rsi]
  42a31a:	or     ah,BYTE PTR [rax]
  42a31c:	and    BYTE PTR [rax],ah
  42a31e:	and    BYTE PTR [rax],ah
  42a320:	and    BYTE PTR [rax],ah
  42a322:	and    BYTE PTR [rax],ah
  42a324:	and    BYTE PTR [rax],ah
  42a326:	and    BYTE PTR [rax],ah
  42a328:	and    BYTE PTR [rax],ah
  42a32a:	and    BYTE PTR [rax],ah
  42a32c:	and    BYTE PTR [rax],ah
  42a32e:	and    BYTE PTR [rbp+0x63],ah
  42a331:	push   0x6f4e206f
  42a336:	and    BYTE PTR [rcx+0x72],ah
  42a339:	addr32 jne 0x42a3a9
  42a33c:	outs   dx,BYTE PTR gs:[rsi]
  42a33e:	je     0x42a360
  42a340:	jo     0x42a3b4
  42a342:	outs   dx,DWORD PTR ds:[rsi]
  42a343:	jbe    0x42a3ae
  42a345:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  42a34b:	jb     0x42a36d
  42a34d:	and    al,0x7b
  42a34f:	rex.WRXB push r8
  42a351:	push   rsp
  42a352:	pop    rdi
  42a353:	rex.WRX
  42a354:	rex.B
  42a355:	rex.WRB
  42a356:	rex.RB jge 0x42a379
  42a359:	outs   dx,DWORD PTR ds:[rsi]
  42a35a:	jo     0x42a3d0
  42a35c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  42a363:	and    BYTE PTR [rax],ah
  42a365:	and    BYTE PTR [rax],ah
  42a367:	and    BYTE PTR [rax],ah
  42a369:	and    BYTE PTR [rax],ah
  42a36b:	and    BYTE PTR [rax],ah
  42a36d:	and    BYTE PTR [rax],ah
  42a36f:	and    BYTE PTR [rax],ah
  42a371:	and    BYTE PTR [rax],ah
  42a373:	and    BYTE PTR [rbp+0x63],ah
  42a376:	push   0x2422206f
  42a37b:	and    eax,0x53555f73
  42a380:	rex.B
  42a381:	rex.RXB
  42a382:	rex.RB pop r15
  42a384:	push   rsp
  42a385:	rex.RB pop r8
  42a387:	push   rsp
  42a388:	and    cl,BYTE PTR [rdx]
  42a38a:	and    BYTE PTR [rax],ah
  42a38c:	and    BYTE PTR [rax],ah
  42a38e:	and    BYTE PTR [rax],ah
  42a390:	and    BYTE PTR [rax],ah
  42a392:	and    BYTE PTR [rax],ah
  42a394:	and    BYTE PTR [rax],ah
  42a396:	and    BYTE PTR [rax],ah
  42a398:	and    BYTE PTR [rax],ah
  42a39a:	and    BYTE PTR [rax],ah
  42a39c:	and    BYTE PTR [rax],ah
  42a39e:	gs js  0x42a40a
  42a3a1:	je     0x42a3c3
  42a3a3:	xor    DWORD PTR [rdx],ecx
  42a3a5:	and    BYTE PTR [rax],ah
  42a3a7:	and    BYTE PTR [rax],ah
  42a3a9:	and    BYTE PTR [rax],ah
  42a3ab:	and    BYTE PTR [rax],ah
  42a3ad:	and    BYTE PTR [rax],ah
  42a3af:	and    BYTE PTR [rax],ah
  42a3b1:	and    BYTE PTR [rax],ah
  42a3b3:	and    BYTE PTR [rax],ah
  42a3b5:	imul   sp,WORD PTR [rax],0x263e
  42a3ba:	xor    cl,BYTE PTR [rdx]
  42a3bc:	and    BYTE PTR [rax],ah
  42a3be:	and    BYTE PTR [rax],ah
  42a3c0:	and    BYTE PTR [rax],ah
  42a3c2:	and    BYTE PTR [rax],ah
  42a3c4:	and    BYTE PTR [rax],ah
  42a3c6:	and    BYTE PTR [rax],ah
  42a3c8:	and    BYTE PTR [rax],ah
  42a3ca:	and    BYTE PTR [rax],ah
  42a3cc:	rex.WRXB push r8
  42a3ce:	push   rsp
  42a3cf:	pop    rdi
  42a3d0:	push   r10
  42a3d2:	rex.RXB pop r15
  42a3d4:	push   rsi
  42a3d5:	rex.B
  42a3d6:	rex.WR cmp rax,0x504f7b24
  42a3dc:	push   rsp
  42a3dd:	pop    rdi
  42a3de:	push   r10
  42a3e0:	rex.RXB jge 0x42a3ed
  42a3e3:	and    BYTE PTR [rax],ah
  42a3e5:	and    BYTE PTR [rax],ah
  42a3e7:	and    BYTE PTR [rax],ah
  42a3e9:	and    BYTE PTR [rax],ah
  42a3eb:	and    BYTE PTR [rax],ah
  42a3ed:	and    BYTE PTR [rax],ah
  42a3ef:	and    BYTE PTR [rax],ah
  42a3f1:	and    BYTE PTR [rax],ah
  42a3f3:	jae    0x42a45d
  42a3f5:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a3fc:	and    BYTE PTR [rax],ah
  42a3fe:	and    BYTE PTR [rax],ah
  42a400:	and    BYTE PTR [rax],ah
  42a402:	and    BYTE PTR [rax],ah
  42a404:	and    BYTE PTR [rax],ah
  42a406:	and    BYTE PTR [rax],ah
  42a408:	and    BYTE PTR [rdi+0x50],cl
  42a40b:	push   rsp
  42a40c:	pop    rdi
  42a40d:	push   r10
  42a40f:	rex.RXB cmp eax,0x200a3124
  42a415:	and    BYTE PTR [rax],ah
  42a417:	and    BYTE PTR [rax],ah
  42a419:	and    BYTE PTR [rax],ah
  42a41b:	and    BYTE PTR [rax],ah
  42a41d:	and    BYTE PTR [rax],ah
  42a41f:	and    BYTE PTR [rsi+0x69],ah
  42a422:	or     ah,BYTE PTR [rax]
  42a424:	and    BYTE PTR [rax],ah
  42a426:	and    BYTE PTR [rax],ah
  42a428:	and    BYTE PTR [rax],ah
  42a42a:	and    BYTE PTR [rax],ah
  42a42c:	and    BYTE PTR [rax],ah
  42a42e:	and    BYTE PTR [rbx],bh
  42a430:	cmp    ecx,DWORD PTR [rdx]
  42a432:	and    BYTE PTR [rax],ah
  42a434:	and    BYTE PTR [rax],ah
  42a436:	and    BYTE PTR [rax],ah
  42a438:	and    BYTE PTR [rax],ah
  42a43a:	rex.WRXB
  42a43b:	rex.WXB and BYTE PTR [r9],bpl
  42a43e:	or     ah,BYTE PTR [rax]
  42a440:	and    BYTE PTR [rax],ah
  42a442:	and    BYTE PTR [rax],ah
  42a444:	and    BYTE PTR [rax],ah
  42a446:	and    BYTE PTR [rax],ah
  42a448:	and    BYTE PTR [rax],ah
  42a44a:	and    BYTE PTR [rcx+0x66],ch
  42a44d:	and    BYTE PTR [rbx+0x20],bl
  42a450:	sub    eax,0x2422207a
  42a455:	jnp    0x42a4a6
  42a457:	push   rax
  42a458:	push   rsp
  42a459:	pop    rdi
  42a45a:	push   r10
  42a45c:	rex.RXB pop r15
  42a45e:	push   rsi
  42a45f:	rex.B
  42a460:	rex.WR jge 0x42a485
  42a463:	and    BYTE PTR [rbp+0x20],bl
  42a466:	es and BYTE PTR es:[rbx+0x20],bl
  42a46b:	and    al,0x23
  42a46d:	and    BYTE PTR [rip+0x30207467],ch        # 0x306318da
  42a473:	and    BYTE PTR [rbp+0xa],bl
  42a476:	and    BYTE PTR [rax],ah
  42a478:	and    BYTE PTR [rax],ah
  42a47a:	and    BYTE PTR [rax],ah
  42a47c:	and    BYTE PTR [rax],ah
  42a47e:	and    BYTE PTR [rax],ah
  42a480:	and    BYTE PTR [rax],ah
  42a482:	je     0x42a4ec
  42a484:	outs   dx,BYTE PTR gs:[rsi]
  42a486:	or     ah,BYTE PTR [rax]
  42a488:	and    BYTE PTR [rax],ah
  42a48a:	and    BYTE PTR [rax],ah
  42a48c:	and    BYTE PTR [rax],ah
  42a48e:	and    BYTE PTR [rax],ah
  42a490:	and    BYTE PTR [rax],ah
  42a492:	and    BYTE PTR [rax],ah
  42a494:	and    BYTE PTR [rax],ah
  42a496:	and    BYTE PTR [rbx+0x61],ah
  42a499:	jae    0x42a500
  42a49b:	and    BYTE PTR [rdx],ah
  42a49d:	and    al,0x7b
  42a49f:	rex.WRXB push r8
  42a4a1:	push   rsp
  42a4a2:	pop    rdi
  42a4a3:	push   r10
  42a4a5:	rex.RXB jge 0x42a4ca
  42a4a8:	and    BYTE PTR [rcx+0x6e],ch
  42a4ab:	and    BYTE PTR [rip+0x2029202a],ch        # 0x206bc4db
  42a4b1:	cmp    edi,DWORD PTR [rbx]
  42a4b3:	and    BYTE PTR [rdx],ch
  42a4b5:	and    BYTE PTR [rcx],ch
  42a4b7:	or     ah,BYTE PTR [rax]
  42a4b9:	and    BYTE PTR [rax],ah
  42a4bb:	and    BYTE PTR [rax],ah
  42a4bd:	and    BYTE PTR [rax],ah
  42a4bf:	and    BYTE PTR [rax],ah
  42a4c1:	and    BYTE PTR [rax],ah
  42a4c3:	and    BYTE PTR [rax],ah
  42a4c5:	and    BYTE PTR [rax],ah
  42a4c7:	and    BYTE PTR [rax],ah
  42a4c9:	and    BYTE PTR [rax],ah
  42a4cb:	and    BYTE PTR [rdi+0x50],cl
  42a4ce:	push   rsp
  42a4cf:	pop    rdi
  42a4d0:	push   r10
  42a4d2:	rex.RXB pop r15
  42a4d4:	push   rsi
  42a4d5:	rex.B
  42a4d6:	rex.WR cmp rax,0x504f7b24
  42a4dc:	push   rsp
  42a4dd:	pop    rdi
  42a4de:	push   r10
  42a4e0:	rex.RXB jge 0x42a4ed
  42a4e3:	and    BYTE PTR [rax],ah
  42a4e5:	and    BYTE PTR [rax],ah
  42a4e7:	and    BYTE PTR [rax],ah
  42a4e9:	and    BYTE PTR [rax],ah
  42a4eb:	and    BYTE PTR [rax],ah
  42a4ed:	and    BYTE PTR [rax],ah
  42a4ef:	and    BYTE PTR [rax],ah
  42a4f1:	and    BYTE PTR [rax],ah
  42a4f3:	and    BYTE PTR [rax],ah
  42a4f5:	and    BYTE PTR [rax],ah
  42a4f7:	jae    0x42a561
  42a4f9:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a500:	and    BYTE PTR [rax],ah
  42a502:	and    BYTE PTR [rax],ah
  42a504:	and    BYTE PTR [rax],ah
  42a506:	and    BYTE PTR [rax],ah
  42a508:	and    BYTE PTR [rax],ah
  42a50a:	and    BYTE PTR [rax],ah
  42a50c:	and    BYTE PTR [rax],ah
  42a50e:	and    BYTE PTR [rax],ah
  42a510:	and    BYTE PTR [rdi+0x50],cl
  42a513:	push   rsp
  42a514:	pop    rdi
  42a515:	push   r10
  42a517:	rex.RXB cmp eax,0x3b203124
  42a51d:	cmp    esp,DWORD PTR [rax]
  42a51f:	gs jae 0x42a583
  42a522:	movsxd ecx,DWORD PTR [rdx]
  42a524:	and    BYTE PTR [rax],ah
  42a526:	and    BYTE PTR [rax],ah
  42a528:	and    BYTE PTR [rax],ah
  42a52a:	and    BYTE PTR [rax],ah
  42a52c:	and    BYTE PTR [rax],ah
  42a52e:	and    BYTE PTR [rax],ah
  42a530:	imul   cx,WORD PTR [rdx],0x2020
  42a535:	and    BYTE PTR [rax],ah
  42a537:	and    BYTE PTR [rax],ah
  42a539:	and    BYTE PTR [rax],ah
  42a53b:	and    BYTE PTR [rax],ah
  42a53d:	and    BYTE PTR [rax],ah
  42a53f:	cmp    edi,DWORD PTR [rbx]
  42a541:	or     ah,BYTE PTR [rax]
  42a543:	and    BYTE PTR [rax],ah
  42a545:	and    BYTE PTR [rax],ah
  42a547:	and    BYTE PTR [rax],ah
  42a549:	and    BYTE PTR [rbp+0x73],ah
  42a54c:	(bad)  
  42a54d:	movsxd ecx,DWORD PTR [rdx]
  42a54f:	add    BYTE PTR [rax],ah
  42a551:	and    BYTE PTR [rax],ah
  42a553:	and    BYTE PTR [rax],ah
  42a555:	and    BYTE PTR [rax],ah
  42a557:	and    BYTE PTR [rax],ah
  42a559:	and    BYTE PTR [rax],ah
  42a55b:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c992
  42a561:	and    eax,0x5f732432
  42a566:	rex.XB push r12
  42a568:	cmp    eax,0x70786560
  42a56d:	jb     0x42a58f
  42a56f:	and    al,0x7b
  42a571:	and    eax,0x5f732431
  42a576:	and    eax,0x5f732432
  42a57b:	rex.XB push r12
  42a57d:	jge    0x42a59f
  42a57f:	sub    esp,DWORD PTR [rax]
  42a581:	xor    DWORD PTR [rax+0xa],esp
  42a584:	and    BYTE PTR [rax],ah
  42a586:	and    BYTE PTR [rax],ah
  42a588:	and    BYTE PTR [rax],ah
  42a58a:	and    BYTE PTR [rax],ah
  42a58c:	and    BYTE PTR [rax],ah
  42a58e:	and    BYTE PTR [rax],ah
  42a590:	rex.WRXB push r8
  42a592:	push   rsp
  42a593:	pop    rdi
  42a594:	rex.RB
  42a595:	rex.WR
  42a596:	rex.RB
  42a597:	rex.WRB
  42a598:	rex.RB
  42a599:	rex.WRX push rsp
  42a59b:	cmp    eax,0x7b245f22
  42a5a0:	and    eax,0x5f732431
  42a5a5:	and    eax,0x5f732432
  42a5aa:	rex.XB push r12
  42a5ac:	jge    0x42a5d0
  42a5ae:	or     ah,BYTE PTR [rax]
  42a5b0:	and    BYTE PTR [rax],ah
  42a5b2:	and    BYTE PTR [rax],ah
  42a5b4:	and    BYTE PTR [rax],ah
  42a5b6:	and    BYTE PTR [rax],ah
  42a5b8:	and    BYTE PTR [rax],ah
  42a5ba:	and    BYTE PTR [rdi+0x50],cl
  42a5bd:	push   rsp
  42a5be:	pop    rdi
  42a5bf:	rex.WRX
  42a5c0:	rex.B
  42a5c1:	rex.WRB
  42a5c2:	rex.RB cmp eax,0x24322527
  42a5c8:	jae    0x42a5f1
  42a5ca:	or     al,BYTE PTR [rax]
  42a5cc:	or     ch,BYTE PTR [rcx+0x66]
  42a5cf:	and    BYTE PTR [rbp+riz*2+0x73],dh
  42a5d3:	je     0x42a5f5
  42a5d5:	sub    eax,0x2422207a
  42a5da:	jnp    0x42a601
  42a5dc:	xor    DWORD PTR [rbx+rsi*2],esp
  42a5df:	pop    rdi
  42a5e0:	and    eax,0x7d732432
  42a5e5:	and    cl,BYTE PTR [rdx]
  42a5e7:	je     0x42a651
  42a5e9:	outs   dx,BYTE PTR gs:[rsi]
  42a5eb:	or     ah,BYTE PTR [rax]
  42a5ed:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ca24
  42a5f3:	and    eax,0x5f732432
  42a5f8:	rex.XB push r12
  42a5fa:	cmp    eax,0x20200a30
  42a5ff:	gs js  0x42a672
  42a602:	outs   dx,DWORD PTR ds:[rsi]
  42a603:	jb     0x42a679
  42a605:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ca3c
  42a60b:	and    eax,0x5f732432
  42a610:	rex.XB push r12
  42a612:	or     ah,BYTE PTR [rbp+0x6c]
  42a615:	jae    0x42a67c
  42a617:	or     ah,BYTE PTR [rax]
  42a619:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ca50
  42a61f:	and    eax,0x5f732432
  42a624:	rex.XB push r12
  42a626:	cmp    eax,0x20200a31
  42a62b:	and    eax,0x5f732431
  42a630:	and    eax,0x5f732432
  42a635:	xor    DWORD PTR [rip+0x31257b24],edi        # 0x3168215f
  42a63b:	and    al,0x73
  42a63d:	pop    rdi
  42a63e:	and    eax,0x7d732432
  42a643:	or     ah,BYTE PTR [rax]
  42a645:	and    BYTE PTR [rbp+0x78],ah
  42a648:	jo     0x42a6b9
  42a64a:	jb     0x42a6c0
  42a64c:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ca83
  42a652:	and    eax,0x5f732432
  42a657:	rex.XB push r12
  42a659:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ca90
  42a65f:	and    eax,0x5f732432
  42a664:	xor    DWORD PTR [rdx],ecx
  42a666:	imul   cx,WORD PTR [rdx],0x2000
  42a66b:	and    BYTE PTR [rax],ah
  42a66d:	and    BYTE PTR [rdx],ch
  42a66f:	and    BYTE PTR [rcx],ch
  42a671:	or     ah,BYTE PTR [rax]
  42a673:	and    BYTE PTR [rax],ah
  42a675:	and    BYTE PTR [rax],ah
  42a677:	and    BYTE PTR [rax],ah
  42a679:	and    BYTE PTR [rax],ah
  42a67b:	rex.WRXB push r8
  42a67d:	push   rsp
  42a67e:	pop    rdi
  42a67f:	push   rax
  42a680:	push   rdx
  42a681:	rex.WRXB
  42a682:	rex.XB
  42a683:	rex.RB push r11
  42a685:	push   rbx
  42a686:	cmp    eax,0x736c6166
  42a68b:	or     ah,BYTE PTR gs:[rax]
  42a68e:	and    BYTE PTR [rax],ah
  42a690:	and    BYTE PTR [rax],ah
  42a692:	and    BYTE PTR [rax],ah
  42a694:	and    BYTE PTR [rax],ah
  42a696:	cmp    edi,DWORD PTR [rbx]
  42a698:	or     ah,BYTE PTR [rax]
  42a69a:	and    BYTE PTR [rax],ah
  42a69c:	and    BYTE PTR [rbp+0x73],ah
  42a69f:	(bad)  
  42a6a0:	movsxd ecx,DWORD PTR [rdx]
  42a6a2:	add    BYTE PTR [rax],ah
  42a6a4:	and    BYTE PTR [rax],ah
  42a6a6:	and    BYTE PTR [rax],ah
  42a6a8:	and    BYTE PTR [rax],ah
  42a6aa:	and    BYTE PTR [rax],ah
  42a6ac:	and    BYTE PTR [rax],ah
  42a6ae:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cae5
  42a6b4:	and    eax,0x5f732432
  42a6b9:	rex.XB push r12
  42a6bb:	cmp    eax,0x20200a30
  42a6c0:	and    BYTE PTR [rax],ah
  42a6c2:	and    BYTE PTR [rax],ah
  42a6c4:	and    BYTE PTR [rax],ah
  42a6c6:	and    BYTE PTR [rax],ah
  42a6c8:	and    BYTE PTR [rax],ah
  42a6ca:	rex.WRXB push r8
  42a6cc:	push   rsp
  42a6cd:	pop    rdi
  42a6ce:	rex.RB
  42a6cf:	rex.WR
  42a6d0:	rex.RB
  42a6d1:	rex.WRB
  42a6d2:	rex.RB
  42a6d3:	rex.WRX push rsp
  42a6d5:	cmp    eax,0x200a2727
  42a6da:	and    BYTE PTR [rax],ah
  42a6dc:	and    BYTE PTR [rax],ah
  42a6de:	and    BYTE PTR [rax],ah
  42a6e0:	and    BYTE PTR [rax],ah
  42a6e2:	and    BYTE PTR [rax],ah
  42a6e4:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cb1b
  42a6ea:	and    eax,0x3d732432
  42a6ef:	(bad)  
  42a6f0:	and    eax,0x27732433
  42a6f5:	or     ah,BYTE PTR [rax]
  42a6f7:	and    BYTE PTR [rax],ah
  42a6f9:	and    BYTE PTR [rax],ah
  42a6fb:	and    BYTE PTR [rax],ah
  42a6fd:	and    BYTE PTR [rax],ah
  42a6ff:	and    BYTE PTR [rax],ah
  42a701:	and    BYTE PTR [rbp+0x78],ah
  42a704:	jo     0x42a775
  42a706:	jb     0x42a77c
  42a708:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cb3f
  42a70e:	and    eax,0xa732432
  42a713:	and    BYTE PTR [rax],ah
  42a715:	and    BYTE PTR [rax],ah
  42a717:	and    BYTE PTR [rax],ah
  42a719:	and    BYTE PTR [rax],ah
  42a71b:	and    BYTE PTR [rax],ah
  42a71d:	and    BYTE PTR [rax],ah
  42a71f:	rex.WRXB push r8
  42a721:	push   rsp
  42a722:	pop    rdi
  42a723:	rex.WRX
  42a724:	rex.B
  42a725:	rex.WRB
  42a726:	rex.RB cmp eax,0x24322527
  42a72c:	jae    0x42a755
  42a72e:	or     al,BYTE PTR [rax]
  42a730:	and    BYTE PTR [rax],ah
  42a732:	and    BYTE PTR [rax],ah
  42a734:	and    BYTE PTR [rax],ah
  42a736:	and    BYTE PTR [rax],ah
  42a738:	and    BYTE PTR [rax],ah
  42a73a:	and    BYTE PTR [rax],ah
  42a73c:	imul   esp,DWORD PTR [rsi+0x20],0x6e2d205b
  42a743:	and    BYTE PTR [rdx],ah
  42a745:	and    al,0x7b
  42a747:	and    eax,0x5f732431
  42a74c:	and    eax,0x7d732432
  42a751:	and    ah,BYTE PTR [rax]
  42a753:	pop    rbp
  42a754:	and    BYTE PTR [rsi],ah
  42a756:	and    BYTE PTR es:[rbx+rdi*2],ah
  42a75a:	and    eax,0x5f732431
  42a75f:	and    eax,0x5f732432
  42a764:	jae    0x42a7cb
  42a766:	je     0x42a7e5
  42a768:	and    BYTE PTR [rbx],bh
  42a76a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42a76e:	outs   dx,BYTE PTR ds:[rsi]
  42a76f:	or     ah,BYTE PTR [rax]
  42a771:	and    BYTE PTR [rax],ah
  42a773:	and    BYTE PTR [rax],ah
  42a775:	and    BYTE PTR [rax],ah
  42a777:	and    BYTE PTR [rax],ah
  42a779:	and    BYTE PTR [rax],ah
  42a77b:	and    BYTE PTR [rax],ah
  42a77d:	and    BYTE PTR [rax],ah
  42a77f:	and    BYTE PTR [rbp+0x63],ah
  42a782:	push   0x4527206f
  42a787:	jb     0x42a7fb
  42a789:	outs   dx,DWORD PTR ds:[rsi]
  42a78a:	jb     0x42a7c6
  42a78c:	and    BYTE PTR [rax],ah
  42a78e:	fs jne 0x42a801
  42a791:	ins    BYTE PTR es:[rdi],dx
  42a792:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  42a799:	xor    ah,BYTE PTR [rbx+rsi*2]
  42a79c:	and    BYTE PTR [rdi+0x70],ch
  42a79f:	je     0x42a80a
  42a7a1:	outs   dx,DWORD PTR ds:[rsi]
  42a7a2:	outs   dx,BYTE PTR ds:[rsi]
  42a7a3:	(bad)  
  42a7a4:	or     ah,BYTE PTR [rax]
  42a7a6:	and    BYTE PTR [rax],ah
  42a7a8:	and    BYTE PTR [rax],ah
  42a7aa:	and    BYTE PTR [rax],ah
  42a7ac:	and    BYTE PTR [rax],ah
  42a7ae:	and    BYTE PTR [rax],ah
  42a7b0:	and    BYTE PTR [rax],ah
  42a7b2:	and    BYTE PTR [rax],ah
  42a7b4:	and    BYTE PTR [rbp+0x63],ah
  42a7b7:	push   0x2422206f
  42a7bc:	and    eax,0x5f732431
  42a7c1:	push   rbp
  42a7c2:	push   rbx
  42a7c3:	rex.B
  42a7c4:	rex.RXB
  42a7c5:	rex.RB pop r15
  42a7c7:	push   rsp
  42a7c8:	rex.RB pop r8
  42a7ca:	push   rsp
  42a7cb:	and    cl,BYTE PTR [rdx]
  42a7cd:	and    BYTE PTR [rax],ah
  42a7cf:	and    BYTE PTR [rax],ah
  42a7d1:	and    BYTE PTR [rax],ah
  42a7d3:	and    BYTE PTR [rax],ah
  42a7d5:	and    BYTE PTR [rax],ah
  42a7d7:	and    BYTE PTR [rax],ah
  42a7d9:	and    BYTE PTR [rax],ah
  42a7db:	and    BYTE PTR [rax],ah
  42a7dd:	gs js  0x42a849
  42a7e0:	je     0x42a802
  42a7e2:	xor    DWORD PTR [rdx],ecx
  42a7e4:	and    BYTE PTR [rax],ah
  42a7e6:	and    BYTE PTR [rax],ah
  42a7e8:	and    BYTE PTR [rax],ah
  42a7ea:	and    BYTE PTR [rax],ah
  42a7ec:	and    BYTE PTR [rax],ah
  42a7ee:	and    BYTE PTR [rax],ah
  42a7f0:	imul   sp,WORD PTR [rax],0x263e
  42a7f5:	xor    cl,BYTE PTR [rdx]
  42a7f7:	and    BYTE PTR [rax],ah
  42a7f9:	and    BYTE PTR [rax],ah
  42a7fb:	and    BYTE PTR [rax],ah
  42a7fd:	and    BYTE PTR [rax],ah
  42a7ff:	and    BYTE PTR [rax],ah
  42a801:	and    BYTE PTR [rax],ah
  42a803:	and    eax,0x5f732431
  42a808:	and    eax,0x5f732432
  42a80d:	jae    0x42a874
  42a80f:	je     0x42a84e
  42a811:	je     0x42a885
  42a813:	jne    0x42a87a
  42a815:	or     ah,BYTE PTR [rax]
  42a817:	and    BYTE PTR [rax],ah
  42a819:	and    BYTE PTR [rax],ah
  42a81b:	and    BYTE PTR [rax],ah
  42a81d:	and    BYTE PTR [rax],ah
  42a81f:	and    BYTE PTR [rax],ah
  42a821:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cc58
  42a827:	and    eax,0x3d732432
  42a82c:	(bad)  
  42a82d:	and    eax,0x27732433
  42a832:	or     ah,BYTE PTR [rax]
  42a834:	and    BYTE PTR [rax],ah
  42a836:	and    BYTE PTR [rax],ah
  42a838:	and    BYTE PTR [rax],ah
  42a83a:	and    BYTE PTR [rax],ah
  42a83c:	and    BYTE PTR [rax],ah
  42a83e:	and    BYTE PTR [rbp+0x78],ah
  42a841:	jo     0x42a8b2
  42a843:	jb     0x42a8b9
  42a845:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cc7c
  42a84b:	and    eax,0xa732432
  42a850:	and    BYTE PTR [rax],ah
  42a852:	and    BYTE PTR [rax],ah
  42a854:	and    BYTE PTR [rax],ah
  42a856:	and    BYTE PTR [rax],ah
  42a858:	and    BYTE PTR [rax],ah
  42a85a:	and    BYTE PTR [rax],ah
  42a85c:	rex.WRXB push r8
  42a85e:	push   rsp
  42a85f:	pop    rdi
  42a860:	rex.WRX
  42a861:	rex.B
  42a862:	rex.WRB
  42a863:	rex.RB cmp eax,0x24322527
  42a869:	jae    0x42a892
  42a86b:	or     al,BYTE PTR [rax]
  42a86d:	or     al,BYTE PTR [rcx+0x52]
  42a870:	rex.RXB pop r15
  42a872:	rex.XB
  42a873:	rex.WRXB push r13
  42a875:	rex.WRX push rsp
  42a877:	cmp    eax,0x4f0a2324
  42a87c:	push   rax
  42a87d:	push   rsp
  42a87e:	pop    rdi
  42a87f:	push   r10
  42a881:	rex.RXB cmp eax,0x770a3124
  42a887:	push   0x20656c69
  42a88c:	pop    rbx
  42a88d:	and    BYTE PTR [rbx+riz*1],ah
  42a890:	and    BYTE PTR [rip+0x30207467],ch        # 0x30631cfd
  42a896:	and    BYTE PTR [rbp+0xa],bl
  42a899:	outs   dx,DWORD PTR fs:[rsi]
  42a89b:	or     ah,BYTE PTR [rax]
  42a89d:	and    BYTE PTR [rax],ah
  42a89f:	and    BYTE PTR [rdi+0x50],cl
  42a8a2:	push   rsp
  42a8a3:	pop    rdi
  42a8a4:	rex.RB
  42a8a5:	rex.WR
  42a8a6:	rex.RB
  42a8a7:	rex.WRB
  42a8a8:	rex.RB
  42a8a9:	rex.WRX push rsp
  42a8ab:	cmp    eax,0x200a2727
  42a8b0:	and    BYTE PTR [rax],ah
  42a8b2:	and    BYTE PTR [rdi+0x50],cl
  42a8b5:	push   rsp
  42a8b6:	pop    rdi
  42a8b7:	push   r10
  42a8b9:	rex.RXB pop r15
  42a8bb:	push   rsi
  42a8bc:	rex.B
  42a8bd:	rex.WR cmp rax,0x200a2727
  42a8c3:	and    BYTE PTR [rax],ah
  42a8c5:	and    BYTE PTR [rdi+0x50],cl
  42a8c8:	push   rsp
  42a8c9:	pop    rdi
  42a8ca:	push   r10
  42a8cc:	rex.RXB cmp eax,0x7d317b24
  42a8d2:	or     al,BYTE PTR [rax]
  42a8d4:	and    BYTE PTR [rax],ah
  42a8d6:	and    BYTE PTR [rax],ah
  42a8d8:	and    BYTE PTR [rax],ah
  42a8da:	and    BYTE PTR [rax],ah
  42a8dc:	movsxd esp,DWORD PTR [rcx+0x73]
  42a8df:	and    BYTE PTR gs:[rdx],ah
  42a8e2:	and    al,0x7b
  42a8e4:	rex.WRXB push r8
  42a8e6:	push   rsp
  42a8e7:	pop    rdi
  42a8e8:	push   r10
  42a8ea:	rex.RXB pop r15
  42a8ec:	rex.WRX
  42a8ed:	rex.RB
  42a8ee:	rex.RB
  42a8ef:	rex.R
  42a8f0:	rex.RB
  42a8f1:	rex.R jge 0x42a916
  42a8f4:	and    BYTE PTR [rcx+0x6e],ch
  42a8f7:	or     ah,BYTE PTR [rax]
  42a8f9:	and    BYTE PTR [rax],ah
  42a8fb:	and    BYTE PTR [rax],ah
  42a8fd:	and    BYTE PTR [rax],ah
  42a8ff:	and    BYTE PTR [rsi+0x4f],cl
  42a902:	and    BYTE PTR [rcx],ch
  42a904:	or     ah,BYTE PTR [rax]
  42a906:	and    BYTE PTR [rax],ah
  42a908:	and    BYTE PTR [rax],ah
  42a90a:	and    BYTE PTR [rax],ah
  42a90c:	and    BYTE PTR [rax],ah
  42a90e:	and    BYTE PTR [rax],ah
  42a910:	and    BYTE PTR [rcx+0x66],ch
  42a913:	and    BYTE PTR [rbx+0x20],bl
  42a916:	sub    eax,0x2422206e
  42a91b:	jnp    0x42a96c
  42a91d:	push   rax
  42a91e:	push   rsp
  42a91f:	pop    rdi
  42a920:	push   r10
  42a922:	rex.RXB jge 0x42a947
  42a925:	and    BYTE PTR [rbp+0xa],bl
  42a928:	and    BYTE PTR [rax],ah
  42a92a:	and    BYTE PTR [rax],ah
  42a92c:	and    BYTE PTR [rax],ah
  42a92e:	and    BYTE PTR [rax],ah
  42a930:	and    BYTE PTR [rax],ah
  42a932:	and    BYTE PTR [rax],ah
  42a934:	je     0x42a99e
  42a936:	outs   dx,BYTE PTR gs:[rsi]
  42a938:	or     ah,BYTE PTR [rax]
  42a93a:	and    BYTE PTR [rax],ah
  42a93c:	and    BYTE PTR [rax],ah
  42a93e:	and    BYTE PTR [rax],ah
  42a940:	and    BYTE PTR [rax],ah
  42a942:	and    BYTE PTR [rax],ah
  42a944:	and    BYTE PTR [rax],ah
  42a946:	and    BYTE PTR [rax],ah
  42a948:	and    BYTE PTR [rdi+0x50],cl
  42a94b:	push   rsp
  42a94c:	pop    rdi
  42a94d:	push   r10
  42a94f:	rex.RXB cmp eax,0x4f7b242d
  42a955:	push   rax
  42a956:	push   rsp
  42a957:	pop    rdi
  42a958:	push   r10
  42a95a:	rex.RXB jge 0x42a967
  42a95d:	and    BYTE PTR [rax],ah
  42a95f:	and    BYTE PTR [rax],ah
  42a961:	and    BYTE PTR [rax],ah
  42a963:	and    BYTE PTR [rax],ah
  42a965:	and    BYTE PTR [rax],ah
  42a967:	and    BYTE PTR [rax],ah
  42a969:	gs ins BYTE PTR es:[rdi],dx
  42a96b:	jae    0x42a9d2
  42a96d:	or     ah,BYTE PTR [rax]
  42a96f:	and    BYTE PTR [rax],ah
  42a971:	and    BYTE PTR [rax],ah
  42a973:	and    BYTE PTR [rax],ah
  42a975:	and    BYTE PTR [rax],ah
  42a977:	and    BYTE PTR [rax],ah
  42a979:	and    BYTE PTR [rax],ah
  42a97b:	and    BYTE PTR [rax],ah
  42a97d:	and    BYTE PTR [rbx+0x68],dh
  42a980:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a987:	and    BYTE PTR [rax],ah
  42a989:	and    BYTE PTR [rax],ah
  42a98b:	and    BYTE PTR [rax],ah
  42a98d:	and    BYTE PTR [rax],ah
  42a98f:	and    BYTE PTR [rax],ah
  42a991:	and    BYTE PTR [rax],ah
  42a993:	and    BYTE PTR [rdi+0x50],cl
  42a996:	push   rsp
  42a997:	pop    rdi
  42a998:	push   r10
  42a99a:	rex.RXB cmp eax,0x200a3124
  42a9a0:	and    BYTE PTR [rax],ah
  42a9a2:	and    BYTE PTR [rax],ah
  42a9a4:	and    BYTE PTR [rax],ah
  42a9a6:	and    BYTE PTR [rax],ah
  42a9a8:	and    BYTE PTR [rax],ah
  42a9aa:	and    BYTE PTR [rsi+0x69],ah
  42a9ad:	or     ah,BYTE PTR [rax]
  42a9af:	and    BYTE PTR [rax],ah
  42a9b1:	and    BYTE PTR [rax],ah
  42a9b3:	and    BYTE PTR [rax],ah
  42a9b5:	and    BYTE PTR [rax],ah
  42a9b7:	and    BYTE PTR [rax],ah
  42a9b9:	and    BYTE PTR [rbx],bh
  42a9bb:	cmp    ecx,DWORD PTR [rdx]
  42a9bd:	and    BYTE PTR [rax],ah
  42a9bf:	and    BYTE PTR [rax],ah
  42a9c1:	and    BYTE PTR [rax],ah
  42a9c3:	and    BYTE PTR [rax],ah
  42a9c5:	pop    rcx
  42a9c6:	rex.RB push r11
  42a9c8:	and    BYTE PTR [rcx],ch
  42a9ca:	or     ah,BYTE PTR [rax]
  42a9cc:	and    BYTE PTR [rax],ah
  42a9ce:	and    BYTE PTR [rax],ah
  42a9d0:	and    BYTE PTR [rax],ah
  42a9d2:	and    BYTE PTR [rax],ah
  42a9d4:	and    BYTE PTR [rax],ah
  42a9d6:	and    BYTE PTR [rcx+0x66],ch
  42a9d9:	and    BYTE PTR [rbx+0x20],bl
  42a9dc:	sub    eax,0x2422206e
  42a9e1:	jnp    0x42aa32
  42a9e3:	push   rax
  42a9e4:	push   rsp
  42a9e5:	pop    rdi
  42a9e6:	push   r10
  42a9e8:	rex.RXB jge 0x42aa0d
  42a9eb:	and    BYTE PTR [rbp+0xa],bl
  42a9ee:	and    BYTE PTR [rax],ah
  42a9f0:	and    BYTE PTR [rax],ah
  42a9f2:	and    BYTE PTR [rax],ah
  42a9f4:	and    BYTE PTR [rax],ah
  42a9f6:	and    BYTE PTR [rax],ah
  42a9f8:	and    BYTE PTR [rax],ah
  42a9fa:	je     0x42aa64
  42a9fc:	outs   dx,BYTE PTR gs:[rsi]
  42a9fe:	or     ah,BYTE PTR [rax]
  42aa00:	and    BYTE PTR [rax],ah
  42aa02:	and    BYTE PTR [rax],ah
  42aa04:	and    BYTE PTR [rax],ah
  42aa06:	and    BYTE PTR [rax],ah
  42aa08:	and    BYTE PTR [rax],ah
  42aa0a:	and    BYTE PTR [rax],ah
  42aa0c:	and    BYTE PTR [rax],ah
  42aa0e:	and    BYTE PTR [rdi+0x50],cl
  42aa11:	push   rsp
  42aa12:	pop    rdi
  42aa13:	push   r10
  42aa15:	rex.RXB pop r15
  42aa17:	push   rsi
  42aa18:	rex.B
  42aa19:	rex.WR cmp rax,0x504f7b24
  42aa1f:	push   rsp
  42aa20:	pop    rdi
  42aa21:	push   r10
  42aa23:	rex.RXB jge 0x42aa30
  42aa26:	and    BYTE PTR [rax],ah
  42aa28:	and    BYTE PTR [rax],ah
  42aa2a:	and    BYTE PTR [rax],ah
  42aa2c:	and    BYTE PTR [rax],ah
  42aa2e:	and    BYTE PTR [rax],ah
  42aa30:	and    BYTE PTR [rax],ah
  42aa32:	gs ins BYTE PTR es:[rdi],dx
  42aa34:	jae    0x42aa9b
  42aa36:	or     ah,BYTE PTR [rax]
  42aa38:	and    BYTE PTR [rax],ah
  42aa3a:	and    BYTE PTR [rax],ah
  42aa3c:	and    BYTE PTR [rax],ah
  42aa3e:	and    BYTE PTR [rax],ah
  42aa40:	and    BYTE PTR [rax],ah
  42aa42:	and    BYTE PTR [rax],ah
  42aa44:	and    BYTE PTR [rax],ah
  42aa46:	and    BYTE PTR [rcx+0x66],ch
  42aa49:	and    BYTE PTR [rbx+0x20],bl
  42aa4c:	and    al,0x23
  42aa4e:	and    BYTE PTR [rip+0x30207165],ch        # 0x30631bb9
  42aa54:	and    BYTE PTR [rbp+0xa],bl
  42aa57:	and    BYTE PTR [rax],ah
  42aa59:	and    BYTE PTR [rax],ah
  42aa5b:	and    BYTE PTR [rax],ah
  42aa5d:	and    BYTE PTR [rax],ah
  42aa5f:	and    BYTE PTR [rax],ah
  42aa61:	and    BYTE PTR [rax],ah
  42aa63:	and    BYTE PTR [rax],ah
  42aa65:	and    BYTE PTR [rax],ah
  42aa67:	je     0x42aad1
  42aa69:	outs   dx,BYTE PTR gs:[rsi]
  42aa6b:	or     ah,BYTE PTR [rax]
  42aa6d:	and    BYTE PTR [rax],ah
  42aa6f:	and    BYTE PTR [rax],ah
  42aa71:	and    BYTE PTR [rax],ah
  42aa73:	and    BYTE PTR [rax],ah
  42aa75:	and    BYTE PTR [rax],ah
  42aa77:	and    BYTE PTR [rax],ah
  42aa79:	and    BYTE PTR [rax],ah
  42aa7b:	and    BYTE PTR [rax],ah
  42aa7d:	and    BYTE PTR [rax],ah
  42aa7f:	and    BYTE PTR [rbp+0x63],ah
  42aa82:	push   0x6f4e206f
  42aa87:	and    BYTE PTR [rcx+0x72],ah
  42aa8a:	addr32 jne 0x42aafa
  42aa8d:	outs   dx,BYTE PTR gs:[rsi]
  42aa8f:	je     0x42aab1
  42aa91:	jo     0x42ab05
  42aa93:	outs   dx,DWORD PTR ds:[rsi]
  42aa94:	jbe    0x42aaff
  42aa96:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  42aa9c:	jb     0x42aabe
  42aa9e:	and    al,0x7b
  42aaa0:	rex.WRXB push r8
  42aaa2:	push   rsp
  42aaa3:	pop    rdi
  42aaa4:	rex.WRX
  42aaa5:	rex.B
  42aaa6:	rex.WRB
  42aaa7:	rex.RB jge 0x42aaca
  42aaaa:	outs   dx,DWORD PTR ds:[rsi]
  42aaab:	jo     0x42ab21
  42aaad:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  42aab4:	and    BYTE PTR [rax],ah
  42aab6:	and    BYTE PTR [rax],ah
  42aab8:	and    BYTE PTR [rax],ah
  42aaba:	and    BYTE PTR [rax],ah
  42aabc:	and    BYTE PTR [rax],ah
  42aabe:	and    BYTE PTR [rax],ah
  42aac0:	and    BYTE PTR [rax],ah
  42aac2:	and    BYTE PTR [rax],ah
  42aac4:	and    BYTE PTR [rbp+0x63],ah
  42aac7:	push   0x2422206f
  42aacc:	and    eax,0x53555f73
  42aad1:	rex.B
  42aad2:	rex.RXB
  42aad3:	rex.RB pop r15
  42aad5:	push   rsp
  42aad6:	rex.RB pop r8
  42aad8:	push   rsp
  42aad9:	and    cl,BYTE PTR [rdx]
  42aadb:	and    BYTE PTR [rax],ah
  42aadd:	and    BYTE PTR [rax],ah
  42aadf:	and    BYTE PTR [rax],ah
  42aae1:	and    BYTE PTR [rax],ah
  42aae3:	and    BYTE PTR [rax],ah
  42aae5:	and    BYTE PTR [rax],ah
  42aae7:	and    BYTE PTR [rax],ah
  42aae9:	and    BYTE PTR [rax],ah
  42aaeb:	and    BYTE PTR [rax],ah
  42aaed:	and    BYTE PTR [rax],ah
  42aaef:	gs js  0x42ab5b
  42aaf2:	je     0x42ab14
  42aaf4:	xor    DWORD PTR [rdx],ecx
  42aaf6:	and    BYTE PTR [rax],ah
  42aaf8:	and    BYTE PTR [rax],ah
  42aafa:	and    BYTE PTR [rax],ah
  42aafc:	and    BYTE PTR [rax],ah
  42aafe:	and    BYTE PTR [rax],ah
  42ab00:	and    BYTE PTR [rax],ah
  42ab02:	and    BYTE PTR [rax],ah
  42ab04:	and    BYTE PTR [rax],ah
  42ab06:	imul   sp,WORD PTR [rax],0x263e
  42ab0b:	xor    cl,BYTE PTR [rdx]
  42ab0d:	and    BYTE PTR [rax],ah
  42ab0f:	and    BYTE PTR [rax],ah
  42ab11:	and    BYTE PTR [rax],ah
  42ab13:	and    BYTE PTR [rax],ah
  42ab15:	and    BYTE PTR [rax],ah
  42ab17:	and    BYTE PTR [rax],ah
  42ab19:	and    BYTE PTR [rax],ah
  42ab1b:	and    BYTE PTR [rax],ah
  42ab1d:	jae    0x42ab87
  42ab1f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42ab26:	and    BYTE PTR [rax],ah
  42ab28:	and    BYTE PTR [rax],ah
  42ab2a:	and    BYTE PTR [rax],ah
  42ab2c:	and    BYTE PTR [rax],ah
  42ab2e:	and    BYTE PTR [rax],ah
  42ab30:	and    BYTE PTR [rax],ah
  42ab32:	and    BYTE PTR [rdi+0x50],cl
  42ab35:	push   rsp
  42ab36:	pop    rdi
  42ab37:	push   r10
  42ab39:	rex.RXB pop r15
  42ab3b:	push   rsi
  42ab3c:	rex.B
  42ab3d:	rex.WR cmp rax,0x200a3124
  42ab43:	and    BYTE PTR [rax],ah
  42ab45:	and    BYTE PTR [rax],ah
  42ab47:	and    BYTE PTR [rax],ah
  42ab49:	and    BYTE PTR [rax],ah
  42ab4b:	and    BYTE PTR [rax],ah
  42ab4d:	and    BYTE PTR [rsi+0x69],ah
  42ab50:	or     ah,BYTE PTR [rax]
  42ab52:	and    BYTE PTR [rax],ah
  42ab54:	and    BYTE PTR [rax],ah
  42ab56:	and    BYTE PTR [rax],ah
  42ab58:	and    BYTE PTR [rax],ah
  42ab5a:	and    BYTE PTR [rax],ah
  42ab5c:	and    BYTE PTR [rbx+0x68],dh
  42ab5f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42ab66:	and    BYTE PTR [rax],ah
  42ab68:	and    BYTE PTR [rax],ah
  42ab6a:	and    BYTE PTR [rax],ah
  42ab6c:	and    BYTE PTR [rax],ah
  42ab6e:	and    BYTE PTR [rdi+0x50],cl
  42ab71:	push   rsp
  42ab72:	pop    rdi
  42ab73:	push   r10
  42ab75:	rex.RXB cmp eax,0x200a3124
  42ab7b:	and    BYTE PTR [rax],ah
  42ab7d:	and    BYTE PTR [rax],ah
  42ab7f:	and    BYTE PTR [rax],ah
  42ab81:	and    BYTE PTR [rax],ah
  42ab83:	and    BYTE PTR [rax],ah
  42ab85:	and    BYTE PTR [rbx],bh
  42ab87:	cmp    ecx,DWORD PTR [rdx]
  42ab89:	and    BYTE PTR [rax],ah
  42ab8b:	and    BYTE PTR [rax],ah
  42ab8d:	and    BYTE PTR [rax],ah
  42ab8f:	and    BYTE PTR [rax],ah
  42ab91:	rex.WRXB
  42ab92:	rex.WXB and BYTE PTR [r9],bpl
  42ab95:	or     ah,BYTE PTR [rax]
  42ab97:	and    BYTE PTR [rax],ah
  42ab99:	and    BYTE PTR [rax],ah
  42ab9b:	and    BYTE PTR [rax],ah
  42ab9d:	and    BYTE PTR [rax],ah
  42ab9f:	and    BYTE PTR [rax],ah
  42aba1:	and    BYTE PTR [rcx+0x66],ch
  42aba4:	and    BYTE PTR [rbx+0x20],bl
  42aba7:	sub    eax,0x2422206e
  42abac:	jnp    0x42abfd
  42abae:	push   rax
  42abaf:	push   rsp
  42abb0:	pop    rdi
  42abb1:	push   r10
  42abb3:	rex.RXB jge 0x42abd8
  42abb6:	and    BYTE PTR [rbp+0xa],bl
  42abb9:	and    BYTE PTR [rax],ah
  42abbb:	and    BYTE PTR [rax],ah
  42abbd:	and    BYTE PTR [rax],ah
  42abbf:	and    BYTE PTR [rax],ah
  42abc1:	and    BYTE PTR [rax],ah
  42abc3:	and    BYTE PTR [rax],ah
  42abc5:	je     0x42ac2f
  42abc7:	outs   dx,BYTE PTR gs:[rsi]
  42abc9:	or     ah,BYTE PTR [rax]
  42abcb:	and    BYTE PTR [rax],ah
  42abcd:	and    BYTE PTR [rax],ah
  42abcf:	and    BYTE PTR [rax],ah
  42abd1:	and    BYTE PTR [rax],ah
  42abd3:	and    BYTE PTR [rax],ah
  42abd5:	and    BYTE PTR [rax],ah
  42abd7:	and    BYTE PTR [rax],ah
  42abd9:	and    BYTE PTR [rdi+0x50],cl
  42abdc:	push   rsp
  42abdd:	pop    rdi
  42abde:	push   r10
  42abe0:	rex.RXB pop r15
  42abe2:	push   rsi
  42abe3:	rex.B
  42abe4:	rex.WR cmp rax,0x504f7b24
  42abea:	push   rsp
  42abeb:	pop    rdi
  42abec:	push   r10
  42abee:	rex.RXB jge 0x42abfb
  42abf1:	and    BYTE PTR [rax],ah
  42abf3:	and    BYTE PTR [rax],ah
  42abf5:	and    BYTE PTR [rax],ah
  42abf7:	and    BYTE PTR [rax],ah
  42abf9:	and    BYTE PTR [rax],ah
  42abfb:	and    BYTE PTR [rax],ah
  42abfd:	and    BYTE PTR [rax],ah
  42abff:	and    BYTE PTR [rax],ah
  42ac01:	jae    0x42ac6b
  42ac03:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42ac0a:	and    BYTE PTR [rax],ah
  42ac0c:	and    BYTE PTR [rax],ah
  42ac0e:	and    BYTE PTR [rax],ah
  42ac10:	and    BYTE PTR [rax],ah
  42ac12:	and    BYTE PTR [rax],ah
  42ac14:	and    BYTE PTR [rax],ah
  42ac16:	and    BYTE PTR [rdi+0x50],cl
  42ac19:	push   rsp
  42ac1a:	pop    rdi
  42ac1b:	push   r10
  42ac1d:	rex.RXB cmp eax,0x200a3124
  42ac23:	and    BYTE PTR [rax],ah
  42ac25:	and    BYTE PTR [rax],ah
  42ac27:	and    BYTE PTR [rax],ah
  42ac29:	and    BYTE PTR [rax],ah
  42ac2b:	and    BYTE PTR [rax],ah
  42ac2d:	and    BYTE PTR [rbp+0x6c],ah
  42ac30:	jae    0x42ac97
  42ac32:	or     ah,BYTE PTR [rax]
  42ac34:	and    BYTE PTR [rax],ah
  42ac36:	and    BYTE PTR [rax],ah
  42ac38:	and    BYTE PTR [rax],ah
  42ac3a:	and    BYTE PTR [rax],ah
  42ac3c:	and    BYTE PTR [rax],ah
  42ac3e:	and    BYTE PTR [rax],ah
  42ac40:	and    BYTE PTR [rax],ah
  42ac42:	and    BYTE PTR [rbx+0x68],dh
  42ac45:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42ac4c:	and    BYTE PTR [rax],ah
  42ac4e:	and    BYTE PTR [rax],ah
  42ac50:	and    BYTE PTR [rax],ah
  42ac52:	and    BYTE PTR [rax],ah
  42ac54:	and    BYTE PTR [rax],ah
  42ac56:	and    BYTE PTR [rax],ah
  42ac58:	and    BYTE PTR [rcx+0x66],ch
  42ac5b:	and    BYTE PTR [rbx+0x20],bl
  42ac5e:	and    al,0x23
  42ac60:	and    BYTE PTR [rip+0x30207467],ch        # 0x306320cd
  42ac66:	and    BYTE PTR [rbp+0xa],bl
  42ac69:	and    BYTE PTR [rax],ah
  42ac6b:	and    BYTE PTR [rax],ah
  42ac6d:	and    BYTE PTR [rax],ah
  42ac6f:	and    BYTE PTR [rax],ah
  42ac71:	and    BYTE PTR [rax],ah
  42ac73:	and    BYTE PTR [rax],ah
  42ac75:	and    BYTE PTR [rax],ah
  42ac77:	and    BYTE PTR [rax],ah
  42ac79:	je     0x42ace3
  42ac7b:	outs   dx,BYTE PTR gs:[rsi]
  42ac7d:	or     ah,BYTE PTR [rax]
  42ac7f:	and    BYTE PTR [rax],ah
  42ac81:	and    BYTE PTR [rax],ah
  42ac83:	and    BYTE PTR [rax],ah
  42ac85:	and    BYTE PTR [rax],ah
  42ac87:	and    BYTE PTR [rax],ah
  42ac89:	and    BYTE PTR [rax],ah
  42ac8b:	and    BYTE PTR [rax],ah
  42ac8d:	and    BYTE PTR [rax],ah
  42ac8f:	and    BYTE PTR [rax],ah
  42ac91:	and    BYTE PTR [rbx+0x61],ah
  42ac94:	jae    0x42acfb
  42ac96:	and    BYTE PTR [rdx],ah
  42ac98:	and    al,0x31
  42ac9a:	and    ah,BYTE PTR [rax]
  42ac9c:	imul   ebp,DWORD PTR [rsi+0x20],0x29202a2d
  42aca3:	and    BYTE PTR [rbx],bh
  42aca5:	cmp    esp,DWORD PTR [rax]
  42aca7:	sub    ah,BYTE PTR [rax]
  42aca9:	sub    DWORD PTR [rdx],ecx
  42acab:	and    BYTE PTR [rax],ah
  42acad:	and    BYTE PTR [rax],ah
  42acaf:	and    BYTE PTR [rax],ah
  42acb1:	and    BYTE PTR [rax],ah
  42acb3:	and    BYTE PTR [rax],ah
  42acb5:	and    BYTE PTR [rax],ah
  42acb7:	and    BYTE PTR [rax],ah
  42acb9:	and    BYTE PTR [rax],ah
  42acbb:	and    BYTE PTR [rax],ah
  42acbd:	and    BYTE PTR [rax],ah
  42acbf:	and    BYTE PTR [rax],ah
  42acc1:	and    BYTE PTR [rax],ah
  42acc3:	rex.WRXB push r8
  42acc5:	push   rsp
  42acc6:	pop    rdi
  42acc7:	push   r10
  42acc9:	rex.RXB pop r15
  42accb:	push   rsi
  42accc:	rex.B
  42accd:	rex.WR cmp rax,0x200a3124
  42acd3:	and    BYTE PTR [rax],ah
  42acd5:	and    BYTE PTR [rax],ah
  42acd7:	and    BYTE PTR [rax],ah
  42acd9:	and    BYTE PTR [rax],ah
  42acdb:	and    BYTE PTR [rax],ah
  42acdd:	and    BYTE PTR [rax],ah
  42acdf:	and    BYTE PTR [rax],ah
  42ace1:	and    BYTE PTR [rax],ah
  42ace3:	and    BYTE PTR [rax],ah
  42ace5:	and    BYTE PTR [rax],ah
  42ace7:	and    BYTE PTR [rax],ah
  42ace9:	and    BYTE PTR [rbx+0x68],dh
  42acec:	imul   esp,DWORD PTR [rsi+0x74],0x203b3b20
  42acf3:	gs jae 0x42ad57
  42acf6:	movsxd ecx,DWORD PTR [rdx]
  42acf8:	and    BYTE PTR [rax],ah
  42acfa:	and    BYTE PTR [rax],ah
  42acfc:	and    BYTE PTR [rax],ah
  42acfe:	and    BYTE PTR [rax],ah
  42ad00:	and    BYTE PTR [rax],ah
  42ad02:	and    BYTE PTR [rax],ah
  42ad04:	and    BYTE PTR [rax],ah
  42ad06:	and    BYTE PTR [rax],ah
  42ad08:	and    BYTE PTR [rax],ah
  42ad0a:	and    BYTE PTR [rax],ah
  42ad0c:	rex.WRXB push r8
  42ad0e:	push   rsp
  42ad0f:	pop    rdi
  42ad10:	push   r10
  42ad12:	rex.RXB cmp eax,0x200a3124
  42ad18:	and    BYTE PTR [rax],ah
  42ad1a:	and    BYTE PTR [rax],ah
  42ad1c:	and    BYTE PTR [rax],ah
  42ad1e:	and    BYTE PTR [rax],ah
  42ad20:	and    BYTE PTR [rax],ah
  42ad22:	and    BYTE PTR [rax],ah
  42ad24:	and    BYTE PTR [rax],ah
  42ad26:	and    BYTE PTR [rsi+0x69],ah
  42ad29:	or     ah,BYTE PTR [rax]
  42ad2b:	and    BYTE PTR [rax],ah
  42ad2d:	and    BYTE PTR [rax],ah
  42ad2f:	and    BYTE PTR [rax],ah
  42ad31:	and    BYTE PTR [rax],ah
  42ad33:	and    BYTE PTR [rax],ah
  42ad35:	and    BYTE PTR [rsi+0x69],ah
  42ad38:	or     ah,BYTE PTR [rax]
  42ad3a:	and    BYTE PTR [rax],ah
  42ad3c:	and    BYTE PTR [rax],ah
  42ad3e:	and    BYTE PTR [rax],ah
  42ad40:	and    BYTE PTR [rax],ah
  42ad42:	and    BYTE PTR [rax],ah
  42ad44:	and    BYTE PTR [rbx],bh
  42ad46:	cmp    ecx,DWORD PTR [rdx]
  42ad48:	and    BYTE PTR [rax],ah
  42ad4a:	and    BYTE PTR [rax],ah
  42ad4c:	and    BYTE PTR [rax],ah
  42ad4e:	and    BYTE PTR [rax],ah
  42ad50:	gs jae 0x42adb4
  42ad53:	movsxd ecx,DWORD PTR [rdx]
  42ad55:	add    BYTE PTR [rax],ah
  42ad57:	and    BYTE PTR [rax],ah
  42ad59:	and    BYTE PTR [rax],ah
  42ad5b:	and    BYTE PTR [rax],ah
  42ad5d:	and    BYTE PTR [rax],ah
  42ad5f:	and    BYTE PTR [rax],ah
  42ad61:	and    BYTE PTR [rbp+0x63],ah
  42ad64:	push   0x2422206f
  42ad69:	and    eax,0x4f4c5f73
  42ad6e:	rex.WRX
  42ad6f:	rex.RXB push r13
  42ad71:	push   rbx
  42ad72:	rex.B
  42ad73:	rex.RXB
  42ad74:	rex.RB pop r15
  42ad76:	push   rsp
  42ad77:	rex.RB pop r8
  42ad79:	push   rsp
  42ad7a:	and    ah,BYTE PTR [rax]
  42ad7c:	jl     0x42ad9e
  42ad7e:	and    al,0x7b
  42ad80:	push   rax
  42ad81:	rex.B
  42ad82:	rex.RXB
  42ad83:	rex.RB push r10
  42ad85:	sub    eax,0x65726f6d
  42ad8a:	jge    0x42ad96
  42ad8c:	and    BYTE PTR [rax],ah
  42ad8e:	and    BYTE PTR [rax],ah
  42ad90:	and    BYTE PTR [rax],ah
  42ad92:	and    BYTE PTR [rax],ah
  42ad94:	and    BYTE PTR [rax],ah
  42ad96:	and    BYTE PTR [rax],ah
  42ad98:	gs js  0x42ae04
  42ad9b:	je     0x42adbd
  42ad9d:	xor    BYTE PTR [rdx],cl
  42ad9f:	add    BYTE PTR [rip+0x464f2073],ah        # 0x4691ce18
  42ada5:	and    BYTE PTR [rip+0xa230a73],ah        # 0xa65b81e
  42adab:	and    esp,DWORD PTR [rax]
  42adad:	and    BYTE PTR [rsi+0x72],al
  42adb0:	outs   dx,DWORD PTR ds:[rsi]
  42adb1:	ins    DWORD PTR es:[rdi],dx
  42adb2:	and    BYTE PTR [rax+0x65],ch
  42adb5:	jb     0x42ae1c
  42adb7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42adbb:	je     0x42ae25
  42adbd:	and    BYTE PTR gs:[rsi+0x65],ch
  42adc1:	js     0x42ae37
  42adc3:	and    BYTE PTR [rax+0x2d],ah
  42adc6:	sub    eax,0x206f6420
  42adcb:	outs   dx,BYTE PTR ds:[rsi]
  42adcc:	outs   dx,DWORD PTR ds:[rsi]
  42adcd:	je     0x42adef
  42adcf:	ins    DWORD PTR es:[rdi],dx
  42add0:	outs   dx,DWORD PTR ds:[rsi]
  42add1:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  42add9:	jae    0x42adfb
  42addb:	ins    DWORD PTR es:[rdi],dx
  42addc:	(bad)  
  42addd:	jb     0x42ae4a
  42addf:	gs jb  0x42ae02
  42ade2:	sub    eax,0xa2c272d
  42ade7:	and    esp,DWORD PTR [rax]
  42ade9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42aded:	and    BYTE PTR [rbp+riz*2+0x78],dh
  42adf1:	je     0x42ae13
  42adf3:	push   0x62207361
  42adf8:	gs outs dx,BYTE PTR gs:[rsi]
  42adfb:	and    BYTE PTR [rdi+0x65],ah
  42adfe:	outs   dx,BYTE PTR ds:[rsi]
  42adff:	gs jb  0x42ae63
  42ae02:	je     0x42ae69
  42ae04:	and    BYTE PTR fs:[rip+0x20000a73],ah        # 0x2042b87e
  42ae0b:	and    BYTE PTR [rax],ah
  42ae0d:	and    BYTE PTR [rax],ah
  42ae0f:	and    BYTE PTR [rax],ah
  42ae11:	and    BYTE PTR [rax],ah
  42ae13:	and    BYTE PTR [rax],ah
  42ae15:	and    BYTE PTR [rbp+0x76],ah
  42ae18:	(bad)  
  42ae19:	ins    BYTE PTR es:[rdi],dx
  42ae1a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d251
  42ae20:	and    eax,0x24732432
  42ae25:	jnp    0x42ae76
  42ae27:	push   rax
  42ae28:	push   rsp
  42ae29:	pop    rdi
  42ae2a:	rex.RB
  42ae2b:	rex.WR
  42ae2c:	rex.RB
  42ae2d:	rex.WRB
  42ae2e:	rex.RB
  42ae2f:	rex.WRX push rsp
  42ae31:	jge    0x42ae70
  42ae33:	je     0x42aea7
  42ae35:	jne    0x42ae9c
  42ae37:	or     ah,BYTE PTR [rax]
  42ae39:	and    BYTE PTR [rax],ah
  42ae3b:	and    BYTE PTR [rax],ah
  42ae3d:	and    BYTE PTR [rax],ah
  42ae3f:	and    BYTE PTR [rax],ah
  42ae41:	and    BYTE PTR [rax],ah
  42ae43:	and    BYTE PTR [rbp+0x78],ah
  42ae46:	jo     0x42aeb7
  42ae48:	jb     0x42aebe
  42ae4a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d281
  42ae50:	and    eax,0x24732432
  42ae55:	jnp    0x42aea6
  42ae57:	push   rax
  42ae58:	push   rsp
  42ae59:	pop    rdi
  42ae5a:	rex.RB
  42ae5b:	rex.WR
  42ae5c:	rex.RB
  42ae5d:	rex.WRB
  42ae5e:	rex.RB
  42ae5f:	rex.WRX push rsp
  42ae61:	jge    0x42ae6d
  42ae63:	add    BYTE PTR [rax],ah
  42ae65:	and    BYTE PTR [rax],ah
  42ae67:	and    BYTE PTR [rax],ah
  42ae69:	and    BYTE PTR [rax],ah
  42ae6b:	and    BYTE PTR [rax],ah
  42ae6d:	and    BYTE PTR [rax],ah
  42ae6f:	and    BYTE PTR [rcx+0x66],ch
  42ae72:	and    BYTE PTR [rbx+0x20],bl
  42ae75:	sub    eax,0x2422206e
  42ae7a:	jnp    0x42aea1
  42ae7c:	xor    DWORD PTR [rbx+rsi*2],esp
  42ae7f:	pop    rdi
  42ae80:	and    eax,0x7d732432
  42ae85:	and    ah,BYTE PTR [rax]
  42ae87:	pop    rbp
  42ae88:	and    BYTE PTR [rsi],ah
  42ae8a:	and    BYTE PTR es:[rbx+rdi*2],ah
  42ae8e:	and    eax,0x5f732431
  42ae93:	and    eax,0x5f732432
  42ae98:	jae    0x42aeff
  42ae9a:	je     0x42af19
  42ae9c:	and    BYTE PTR [rbx],bh
  42ae9e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42aea2:	outs   dx,BYTE PTR ds:[rsi]
  42aea3:	or     ah,BYTE PTR [rax]
  42aea5:	and    BYTE PTR [rax],ah
  42aea7:	and    BYTE PTR [rax],ah
  42aea9:	and    BYTE PTR [rax],ah
  42aeab:	and    BYTE PTR [rax],ah
  42aead:	and    BYTE PTR [rax],ah
  42aeaf:	and    BYTE PTR [rax],ah
  42aeb1:	and    BYTE PTR [rax],ah
  42aeb3:	and    BYTE PTR [rbp+0x63],ah
  42aeb6:	push   0x4527206f
  42aebb:	jb     0x42af2f
  42aebd:	outs   dx,DWORD PTR ds:[rsi]
  42aebe:	jb     0x42aefa
  42aec0:	and    BYTE PTR [rax],ah
  42aec2:	fs jne 0x42af35
  42aec5:	ins    BYTE PTR es:[rdi],dx
  42aec6:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  42aecd:	xor    ah,BYTE PTR [rbx+rsi*2]
  42aed0:	and    BYTE PTR [rdi+0x70],ch
  42aed3:	je     0x42af3e
  42aed5:	outs   dx,DWORD PTR ds:[rsi]
  42aed6:	outs   dx,BYTE PTR ds:[rsi]
  42aed7:	(bad)  
  42aed8:	or     ah,BYTE PTR [rax]
  42aeda:	and    BYTE PTR [rax],ah
  42aedc:	and    BYTE PTR [rax],ah
  42aede:	and    BYTE PTR [rax],ah
  42aee0:	and    BYTE PTR [rax],ah
  42aee2:	and    BYTE PTR [rax],ah
  42aee4:	and    BYTE PTR [rax],ah
  42aee6:	and    BYTE PTR [rax],ah
  42aee8:	and    BYTE PTR [rbp+0x63],ah
  42aeeb:	push   0x2422206f
  42aef0:	and    eax,0x5f732431
  42aef5:	push   rbp
  42aef6:	push   rbx
  42aef7:	rex.B
  42aef8:	rex.RXB
  42aef9:	rex.RB pop r15
  42aefb:	push   rsp
  42aefc:	rex.RB pop r8
  42aefe:	push   rsp
  42aeff:	and    cl,BYTE PTR [rdx]
  42af01:	and    BYTE PTR [rax],ah
  42af03:	and    BYTE PTR [rax],ah
  42af05:	and    BYTE PTR [rax],ah
  42af07:	and    BYTE PTR [rax],ah
  42af09:	and    BYTE PTR [rax],ah
  42af0b:	and    BYTE PTR [rax],ah
  42af0d:	and    BYTE PTR [rax],ah
  42af0f:	and    BYTE PTR [rax],ah
  42af11:	gs js  0x42af7d
  42af14:	je     0x42af36
  42af16:	xor    DWORD PTR [rdx],ecx
  42af18:	and    BYTE PTR [rax],ah
  42af1a:	and    BYTE PTR [rax],ah
  42af1c:	and    BYTE PTR [rax],ah
  42af1e:	and    BYTE PTR [rax],ah
  42af20:	and    BYTE PTR [rax],ah
  42af22:	and    BYTE PTR [rax],ah
  42af24:	imul   sp,WORD PTR [rax],0x263e
  42af29:	xor    cl,BYTE PTR [rdx]
  42af2b:	and    BYTE PTR [rax],ah
  42af2d:	and    BYTE PTR [rax],ah
  42af2f:	and    BYTE PTR [rax],ah
  42af31:	and    BYTE PTR [rax],ah
  42af33:	and    BYTE PTR [rax],ah
  42af35:	and    BYTE PTR [rax],ah
  42af37:	and    eax,0x5f732431
  42af3c:	and    eax,0x5f732432
  42af41:	jae    0x42afa8
  42af43:	je     0x42af82
  42af45:	je     0x42afb9
  42af47:	jne    0x42afae
  42af49:	or     ah,BYTE PTR [rax]
  42af4b:	and    BYTE PTR [rax],ah
  42af4d:	and    BYTE PTR [rax],ah
  42af4f:	and    BYTE PTR [rax],ah
  42af51:	and    BYTE PTR [rax],ah
  42af53:	and    BYTE PTR [rax],ah
  42af55:	and    BYTE PTR [rdi+0x50],cl
  42af58:	push   rsp
  42af59:	pop    rdi
  42af5a:	rex.WRX
  42af5b:	rex.B
  42af5c:	rex.WRB
  42af5d:	rex.RB cmp eax,0x24322527
  42af63:	jae    0x42af8c
  42af65:	or     al,BYTE PTR [rax]
  42af67:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb5d39e
  42af6d:	and    eax,0x3d732432
  42af72:	and    al,0x7b
  42af74:	and    eax,0x5f732431
  42af79:	and    eax,0x2d732432
  42af7e:	(bad)  
  42af7f:	and    eax,0x27732433
  42af84:	jge    0x42af90
  42af86:	and    eax,0x5f732431
  42af8b:	and    eax,0x5f732432
  42af90:	jae    0x42aff7
  42af92:	je     0x42afd1
  42af94:	data16 (bad) 
  42af96:	ins    BYTE PTR es:[rdi],dx
  42af97:	jae    0x42affe
  42af99:	or     ah,BYTE PTR [rbp+0x78]
  42af9c:	jo     0x42b00d
  42af9e:	jb     0x42b014
  42afa0:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d3d7
  42afa6:	and    eax,0xa732432
  42afab:	add    BYTE PTR [rdx],cl
  42afad:	and    eax,0x5f732431
  42afb2:	and    eax,0x3d732432
  42afb7:	and    al,0x7b
  42afb9:	and    eax,0x5f732431
  42afbe:	and    eax,0x7d732432
  42afc3:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb5d3fa
  42afc9:	and    eax,0x5f732432
  42afce:	jae    0x42b035
  42afd0:	je     0x42b00f
  42afd2:	data16 (bad) 
  42afd4:	ins    BYTE PTR es:[rdi],dx
  42afd5:	jae    0x42b03c
  42afd7:	or     ah,BYTE PTR [rbp+0x78]
  42afda:	jo     0x42b04b
  42afdc:	jb     0x42b052
  42afde:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d415
  42afe4:	and    eax,0xa732432
  42afe9:	add    BYTE PTR [rbx],ah
  42afeb:	and    BYTE PTR [rbx],ah
  42afed:	and    BYTE PTR [rbx],ah
  42afef:	and    BYTE PTR [rbx],ah
  42aff1:	and    BYTE PTR [rbx],ah
  42aff3:	and    BYTE PTR [rbx],ah
  42aff5:	and    BYTE PTR [rbx],ah
  42aff7:	and    BYTE PTR [rbx],ah
  42aff9:	and    BYTE PTR [rbx],ah
  42affb:	and    BYTE PTR [rbx],ah
  42affd:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa6d030
  42b003:	and    BYTE PTR [rsi+0x6f],ch
  42b006:	je     0x42b028
  42b008:	ins    DWORD PTR es:[rdi],dx
  42b009:	outs   dx,DWORD PTR ds:[rsi]
  42b00a:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  42b012:	jae    0x42b034
  42b014:	ins    DWORD PTR es:[rdi],dx
  42b015:	(bad)  
  42b016:	jb     0x42b083
  42b018:	gs jb  0x42b03b
  42b01b:	sub    eax,0xa230a2d
  42b020:	and    esp,DWORD PTR [rax]
  42b022:	and    BYTE PTR [rdi+rcx*2+0x20],al
  42b026:	rex.WRX
  42b027:	rex.WRXB push r12
  42b029:	and    BYTE PTR [rbp+0x44],al
  42b02c:	rex.WB push r12
  42b02e:	and    BYTE PTR [rax+rcx*2+0x49],dl
  42b032:	push   rbx
  42b033:	and    BYTE PTR [rbx+0x45],dl
  42b036:	rex.XB push r12
  42b038:	rex.WB
  42b039:	rex.WRXB
  42b03a:	rex.WRX or r8b,BYTE PTR [rax]
  42b03d:	and    BYTE PTR [rax],ah
  42b03f:	and    BYTE PTR [rax],ah
  42b041:	and    BYTE PTR [rax],ah
  42b043:	and    BYTE PTR [rax],ah
  42b045:	sub    ah,BYTE PTR [rax]
  42b047:	sub    DWORD PTR [rdx],ecx
  42b049:	and    BYTE PTR [rax],ah
  42b04b:	and    BYTE PTR [rax],ah
  42b04d:	and    BYTE PTR [rax],ah
  42b04f:	and    BYTE PTR [rax],ah
  42b051:	and    BYTE PTR [rax],ah
  42b053:	and    BYTE PTR [rax],ah
  42b055:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42b059:	and    BYTE PTR [rbp+0x6e],dl
  42b05c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b060:	outs   dx,BYTE PTR ds:[rsi]
  42b061:	and    BYTE PTR [rip+0x22203a73],ah        # 0x2262eada
  42b067:	and    al,0x7b
  42b069:	rex.WRXB push r8
  42b06b:	push   rsp
  42b06c:	pop    rdi
  42b06d:	rex.XB
  42b06e:	rex.WRXB
  42b06f:	rex.R
  42b070:	rex.RB jge 0x42b095
  42b073:	and    BYTE PTR [rsi],bh
  42b075:	xor    cl,BYTE PTR es:[rdx]
  42b078:	and    BYTE PTR [rax],ah
  42b07a:	and    BYTE PTR [rax],ah
  42b07c:	and    BYTE PTR [rax],ah
  42b07e:	and    BYTE PTR [rax],ah
  42b080:	and    BYTE PTR [rax],ah
  42b082:	and    BYTE PTR [rax],ah
  42b084:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42b088:	and    BYTE PTR [rdx],ah
  42b08a:	and    al,0x25
  42b08c:	jae    0x42b0ed
  42b08e:	push   rbp
  42b08f:	push   rbx
  42b090:	rex.B
  42b091:	rex.RXB
  42b092:	rex.RB pop r15
  42b094:	push   rsp
  42b095:	rex.RB pop r8
  42b097:	push   rsp
  42b098:	and    ah,BYTE PTR [rax]
  42b09a:	ds xor cl,BYTE PTR es:[rdx]
  42b09e:	and    BYTE PTR [rax],ah
  42b0a0:	and    BYTE PTR [rax],ah
  42b0a2:	and    BYTE PTR [rax],ah
  42b0a4:	and    BYTE PTR [rax],ah
  42b0a6:	and    BYTE PTR [rax],ah
  42b0a8:	and    BYTE PTR [rax],ah
  42b0aa:	gs js  0x42b116
  42b0ad:	je     0x42b0cf
  42b0af:	xor    DWORD PTR [rdx],ecx
  42b0b1:	and    BYTE PTR [rax],ah
  42b0b3:	and    BYTE PTR [rax],ah
  42b0b5:	and    BYTE PTR [rax],ah
  42b0b7:	and    BYTE PTR [rax],ah
  42b0b9:	and    BYTE PTR [rax],ah
  42b0bb:	and    BYTE PTR [rax],ah
  42b0bd:	cmp    edi,DWORD PTR [rbx]
  42b0bf:	or     ah,BYTE PTR [rax]
  42b0c1:	and    BYTE PTR [rax],ah
  42b0c3:	and    BYTE PTR [rax],ah
  42b0c5:	and    BYTE PTR [rax],ah
  42b0c7:	and    BYTE PTR [rbp+0x73],ah
  42b0ca:	(bad)  
  42b0cb:	movsxd ecx,DWORD PTR [rdx]
	...
  42b0fd:	add    BYTE PTR [rax],al
  42b0ff:	add    BYTE PTR [rcx+0x6c],ah
  42b102:	ins    BYTE PTR es:[rdi],dx
  42b103:	outs   dx,DWORD PTR ds:[rsi]
  42b104:	movsxd esp,DWORD PTR [rcx+0x74]
  42b107:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  42b10e:	and    eax,0x79622064
  42b113:	je     0x42b17a
  42b115:	jae    0x42b137
  42b117:	data16 (bad) 
  42b119:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7541000a
  42b121:	je     0x42b192
  42b123:	rex.WRXB jo 0x42b19a
  42b126:	jae    0x42b148
  42b128:	data16 jne 0x42b199
  42b12b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42b12f:	outs   dx,BYTE PTR ds:[rsi]
  42b130:	and    BYTE PTR [rbx+0x61],ah
  42b133:	ins    BYTE PTR es:[rdi],dx
  42b134:	ins    BYTE PTR es:[rdi],dx
  42b135:	gs and BYTE PTR fs:[rdi+0x69],dh
  42b13a:	je     0x42b1a4
  42b13c:	outs   dx,DWORD PTR ds:[rsi]
  42b13d:	jne    0x42b1b3
  42b13f:	and    BYTE PTR [rdi+0x70],ch
  42b142:	je     0x42b1ad
  42b144:	outs   dx,DWORD PTR ds:[rsi]
  42b145:	outs   dx,BYTE PTR ds:[rsi]
  42b146:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42b14a:	movsxd esi,DWORD PTR [rdx+0x69]
  42b14d:	jo     0x42b1c3
  42b14f:	outs   dx,DWORD PTR ds:[rsi]
  42b150:	jb     0x42b15c
  42b152:	add    BYTE PTR [rcx],cl
  42b154:	push   rsp
  42b155:	push   0x65207369
  42b15a:	js     0x42b1bf
  42b15c:	gs gs fs jae 0x42b181
  42b161:	je     0x42b1cb
  42b163:	and    BYTE PTR gs:[rbx+0x6f],ah
  42b167:	ins    DWORD PTR es:[rdi],dx
  42b168:	jo     0x42b1d3
  42b16a:	ins    BYTE PTR es:[rdi],dx
  42b16b:	gs and BYTE PTR fs:[rcx+rbp*2+0x62],ch
  42b171:	jb     0x42b1d4
  42b173:	jb     0x42b1ee
  42b175:	and    BYTE PTR [rsi+0x65],dh
  42b178:	jb     0x42b1ed
  42b17a:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  42b181:	rex.B jne 0x42b1f8
  42b184:	outs   dx,DWORD PTR ds:[rsi]
  42b185:	ins    DWORD PTR es:[rdi],dx
  42b186:	(bad)  
  42b187:	je     0x42b1ee
  42b189:	and    BYTE PTR fs:[rdi+0x70],cl
  42b18d:	je     0x42b1f8
  42b18f:	outs   dx,DWORD PTR ds:[rsi]
  42b190:	outs   dx,BYTE PTR ds:[rsi]
  42b191:	jae    0x42b1b3
  42b193:	push   rax
  42b194:	jb     0x42b205
  42b196:	movsxd esp,DWORD PTR [rbp+0x73]
  42b199:	jae    0x42b204
  42b19b:	outs   dx,BYTE PTR ds:[rsi]
  42b19c:	and    BYTE PTR [ebp+0x72],al
  42b1a0:	jb     0x42b211
  42b1a2:	jb     0x42b1c5
  42b1a4:	or     cl,BYTE PTR [rcx]
  42b1a6:	and    eax,0x61632073
  42b1ab:	ins    BYTE PTR es:[rdi],dx
  42b1ac:	ins    BYTE PTR es:[rdi],dx
  42b1ad:	gs and BYTE PTR fs:[rcx+0x75],al
  42b1b2:	je     0x42b223
  42b1b4:	rex.WRXB jo 0x42b22b
  42b1b7:	jae    0x42b1d9
  42b1b9:	data16 jne 0x42b22a
  42b1bc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42b1c0:	outs   dx,BYTE PTR ds:[rsi]
  42b1c1:	and    BYTE PTR [rdi+0x69],dh
  42b1c4:	je     0x42b22e
  42b1c6:	and    BYTE PTR [rbx+0x74],dh
  42b1c9:	jb     0x42b240
  42b1cb:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  42b1cf:	and    BYTE PTR gs:[rsi+0x65],dh
  42b1d3:	jb     0x42b248
  42b1d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a642520
  42b1dc:	and    eax,0x64253a64
  42b1e1:	or     al,BYTE PTR cs:[rax]
  42b1e4:	jb     0x42b24b
  42b1e6:	(bad)  
  42b1e7:	ins    BYTE PTR es:[rdi],dx
  42b1e8:	ins    BYTE PTR es:[rdi],dx
  42b1e9:	outs   dx,DWORD PTR ds:[rsi]
  42b1ea:	movsxd esp,DWORD PTR [rax]
  42b1ec:	outs   dx,DWORD PTR ds:[rsi]
  42b1ed:	data16 and BYTE PTR [rip+0x79622064],ah        # 0x79a4d258
  42b1f4:	je     0x42b25b
  42b1f6:	jae    0x42b218
  42b1f8:	(bad)  
  42b1f9:	je     0x42b21b
  42b1fb:	xor    BYTE PTR [rax+0x25],bh
  42b1fe:	jo     0x42b220
  42b200:	data16 (bad) 
  42b202:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5409000a
  42b20a:	push   0x69207369
  42b20f:	jae    0x42b231
  42b211:	ins    BYTE PTR es:[rdi],dx
  42b212:	gs jae 0x42b288
  42b215:	and    BYTE PTR [rax+rbp*2+0x61],dh
  42b219:	outs   dx,BYTE PTR ds:[rsi]
  42b21a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42b21e:	and    BYTE PTR [rbp+0x69],ch
  42b221:	outs   dx,BYTE PTR ds:[rsi]
  42b222:	imul   ebp,DWORD PTR [rbp+0x75],0x696c206d
  42b229:	(bad)  
  42b22b:	(bad)  
  42b22c:	jb     0x42b2a7
  42b22e:	and    BYTE PTR [rsi+0x65],dh
  42b231:	jb     0x42b2a6
  42b233:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  42b23a:	rex.B jne 0x42b2b1
  42b23d:	outs   dx,DWORD PTR ds:[rsi]
  42b23e:	ins    DWORD PTR es:[rdi],dx
  42b23f:	(bad)  
  42b240:	je     0x42b2a7
  42b242:	and    BYTE PTR fs:[rdi+0x70],cl
  42b246:	je     0x42b2b1
  42b248:	outs   dx,DWORD PTR ds:[rsi]
  42b249:	outs   dx,BYTE PTR ds:[rsi]
  42b24a:	jae    0x42b26c
  42b24c:	jbe    0x42b2b3
  42b24e:	jb     0x42b2c3
  42b250:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  42b257:	or     DWORD PTR [rbx+0x6f],eax
  42b25a:	jo     0x42b2d5
  42b25c:	jb     0x42b2c7
  42b25e:	addr32 push 0x43282074
  42b264:	sub    DWORD PTR [rax],esp
  42b266:	xor    DWORD PTR [rcx],edi
  42b268:	cmp    DWORD PTR [rcx],edi
  42b26a:	sub    eax,0x34313032
  42b26f:	and    BYTE PTR [rdx+0x79],ah
  42b272:	and    BYTE PTR [rdx+0x72],al
  42b275:	jne    0x42b2da
  42b277:	and    BYTE PTR gs:[rbx+0x6f],cl
  42b27b:	jb     0x42b2df
  42b27d:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6caf13a3
  42b283:	and    BYTE PTR [rdx+0x69],dh
  42b286:	addr32 push 0x72207374
  42b28c:	gs jae 0x42b2f4
  42b28f:	jb     0x42b307
  42b291:	gs or  al,BYTE PTR fs:[rax]
  42b295:	sub    BYTE PTR [rcx+0x75],al
  42b298:	je     0x42b309
  42b29a:	rex.WRXB jo 0x42b311
  42b29d:	jae    0x42b2bf
  42b29f:	(bad)  
  42b2a0:	jne    0x42b309
  42b2a2:	sub    DWORD PTR [rdx],edi
  42b2a4:	and    BYTE PTR [rax],ah
  42b2a6:	and    eax,0xa2e73
  42b2ab:	outs   dx,DWORD PTR ds:[rsi]
  42b2ac:	jo     0x42b322
  42b2ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x65736552
  42b2b5:	je     0x42b306
  42b2b7:	jo     0x42b32d
  42b2b9:	sub    BYTE PTR [rcx],ch
  42b2bb:	and    BYTE PTR [rbx+0x61],ah
  42b2be:	ins    BYTE PTR es:[rdi],dx
  42b2bf:	ins    BYTE PTR es:[rdi],dx
  42b2c0:	gs fs sub al,0x20
  42b2c4:	(bad)  
  42b2c5:	jne    0x42b33b
  42b2c7:	and    BYTE PTR [rdx+0x65],dh
  42b2ca:	jae    0x42b331
  42b2cc:	je     0x42b2fb
  42b2ce:	outs   dx,DWORD PTR ds:[rsi]
  42b2cf:	jo     0x42b345
  42b2d1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e20
  42b2d8:	and    BYTE PTR [rbx+0x6f],ah
  42b2db:	outs   dx,BYTE PTR ds:[rsi]
  42b2dc:	imul   sp,WORD PTR [rdi+0x75],0x6572
  42b2e2:	add    BYTE PTR fs:[rbx+0x6f],ah
  42b2e6:	jne    0x42b354
  42b2e8:	and    BYTE PTR fs:[rsi+0x6f],ch
  42b2ec:	je     0x42b30e
  42b2ee:	ins    BYTE PTR es:[rdi],dx
  42b2ef:	outs   dx,DWORD PTR ds:[rsi]
  42b2f0:	movsxd esp,DWORD PTR [rcx+0x74]
  42b2f3:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  42b2f8:	and    BYTE PTR [rdi],ah
  42b2fa:	push   0x27706c65
  42b2ff:	and    BYTE PTR [rdi+0x70],ch
  42b302:	je     0x42b36d
  42b304:	outs   dx,DWORD PTR ds:[rsi]
  42b305:	outs   dx,BYTE PTR ds:[rsi]
  42b306:	add    BYTE PTR [rdi+0x70],ch
  42b309:	je     0x42b374
  42b30b:	outs   dx,DWORD PTR ds:[rsi]
  42b30c:	outs   dx,BYTE PTR ds:[rsi]
  42b30d:	push   rax
  42b30e:	jb     0x42b37f
  42b310:	movsxd esp,DWORD PTR [rbp+0x73]
  42b313:	jae    0x42b33d
  42b315:	sub    DWORD PTR [rax],esp
  42b317:	ja     0x42b37a
  42b319:	jae    0x42b33b
  42b31b:	movsxd esp,DWORD PTR [rcx+0x6c]
  42b31e:	ins    BYTE PTR es:[rdi],dx
  42b31f:	gs and BYTE PTR fs:[rdi+0x69],dh
  42b324:	je     0x42b38e
  42b326:	and    BYTE PTR [rcx+0x6e],ch
  42b329:	jbe    0x42b38c
  42b32b:	ins    BYTE PTR es:[rdi],dx
  42b32c:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x617461
  42b334:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42b33b:	and    BYTE PTR [rcx+0x72],ah
  42b33e:	addr32 jne 0x42b3ae
  42b341:	outs   dx,BYTE PTR gs:[rsi]
  42b343:	je     0x42b365
  42b345:	je     0x42b3c0
  42b347:	jo     0x42b3ae
  42b349:	and    BYTE PTR [rbx+0x70],dh
  42b34c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42b350:	imul   esp,DWORD PTR [rbp+0x64],0x66656400
  42b357:	(bad)  
  42b358:	jne    0x42b3c6
  42b35a:	je     0x42b3c1
  42b35c:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42b361:	outs   dx,DWORD PTR ds:[rsi]
  42b362:	jo     0x42b3d8
  42b364:	imul   ebp,DWORD PTR [rdi+0x6e],0x74697720
  42b36b:	push   0x74706f20
  42b370:	imul   ebp,DWORD PTR [rdi+0x6e],0x61206c61
  42b377:	jb     0x42b3e0
  42b379:	add    BYTE PTR [rcx+0x6c],ah
  42b37c:	imul   esp,DWORD PTR [rcx+0x73],0x20676e69
  42b383:	outs   dx,DWORD PTR ds:[rsi]
  42b384:	jo     0x42b3fa
  42b386:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  42b38d:	outs   dx,DWORD PTR ds:[rsi]
  42b38e:	jne    0x42b404
  42b390:	and    BYTE PTR [rdi+0x66],ch
  42b393:	and    BYTE PTR [rdx+0x61],dh
  42b396:	outs   dx,BYTE PTR ds:[rsi]
  42b397:	gs add BYTE PTR cs:[eip+0x72652073],ah        # 0x72a7d413
  42b3a0:	jb     0x42b411
  42b3a2:	jb     0x42b3de
  42b3a4:	and    BYTE PTR [rax],ah
  42b3a6:	je     0x42b410
  42b3a8:	and    BYTE PTR gs:[rbx+0x65],ch
  42b3ac:	jns    0x42b425
  42b3ae:	outs   dx,DWORD PTR ds:[rsi]
  42b3af:	jb     0x42b415
  42b3b1:	and    BYTE PTR [rdi],ah
  42b3b3:	and    eax,0x69202773
  42b3b8:	jae    0x42b3da
  42b3ba:	(bad)  
  42b3bb:	ins    DWORD PTR es:[rdi],dx
  42b3bc:	(bad)  
  42b3bd:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  42b3c4:	outs   dx,WORD PTR ds:[rsi]
  42b3c6:	jb     0x42b3e8
  42b3c8:	and    eax,0x20000a73
  42b3cd:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42b3d1:	and    BYTE PTR [rsi+0x6f],ah
  42b3d4:	ins    BYTE PTR es:[rdi],dx
  42b3d5:	ins    BYTE PTR es:[rdi],dx
  42b3d6:	outs   dx,DWORD PTR ds:[rsi]
  42b3d7:	ja     0x42b442
  42b3d9:	outs   dx,BYTE PTR ds:[rsi]
  42b3da:	and    BYTE PTR [edi+0x70],ch
  42b3de:	je     0x42b449
  42b3e0:	outs   dx,DWORD PTR ds:[rsi]
  42b3e1:	outs   dx,BYTE PTR ds:[rsi]
  42b3e2:	jae    0x42b404
  42b3e4:	ins    DWORD PTR es:[rdi],dx
  42b3e5:	(bad)  
  42b3e6:	je     0x42b44b
  42b3e8:	push   0x25000a3a
  42b3ed:	jae    0x42b429
  42b3ef:	and    BYTE PTR [rcx+0x6d],ah
  42b3f2:	(bad)  
  42b3f3:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  42b3fa:	outs   dx,DWORD PTR ds:[rsi]
  42b3fb:	jo     0x42b471
  42b3fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d616e20
  42b404:	cmp    ah,BYTE PTR gs:[rax]
  42b407:	and    eax,0x6d282073
  42b40c:	(bad)  
  42b40d:	je     0x42b472
  42b40f:	push   0x25207365
  42b414:	and    BYTE PTR fs:[rdi+0x70],ch
  42b418:	je     0x42b483
  42b41a:	outs   dx,DWORD PTR ds:[rsi]
  42b41b:	outs   dx,BYTE PTR ds:[rsi]
  42b41c:	jae    0x42b447
  42b41e:	or     al,BYTE PTR [rax]
  42b420:	and    eax,0x43203a73
  42b425:	outs   dx,DWORD PTR ds:[rsi]
  42b426:	ins    DWORD PTR es:[rdi],dx
  42b427:	ins    DWORD PTR es:[rdi],dx
  42b428:	(bad)  
  42b429:	outs   dx,BYTE PTR ds:[rsi]
  42b42a:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42b42f:	and    BYTE PTR gs:[rcx+0x72],ah
  42b433:	addr32 jne 0x42b4a3
  42b436:	outs   dx,BYTE PTR gs:[rsi]
  42b438:	je     0x42b4ad
  42b43a:	and    BYTE PTR [rdx+0x65],dh
  42b43d:	jno    0x42b4b4
  42b43f:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  42b446:	and    BYTE PTR fs:[rip+0x20732573],ah        # 0x20b5d9c0
  42b44d:	outs   dx,DWORD PTR ds:[rsi]
  42b44e:	jo     0x42b4c4
  42b450:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c612073
  42b457:	ins    BYTE PTR es:[rdi],dx
  42b458:	outs   dx,DWORD PTR ds:[rsi]
  42b459:	ja     0x42b4c0
  42b45b:	or     al,BYTE PTR fs:[rax]
  42b45e:	and    eax,0x72652073
  42b463:	jb     0x42b4d4
  42b465:	jb     0x42b487
  42b467:	and    eax,0x25282064
  42b46c:	jae    0x42b497
  42b46e:	and    BYTE PTR [rbx+0x61],ah
  42b471:	ins    BYTE PTR es:[rdi],dx
  42b472:	ins    BYTE PTR es:[rdi],dx
  42b473:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  42b47a:	outs   dx,WORD PTR ds:[rsi]
  42b47c:	jb     0x42b49e
  42b47e:	(bad)  
  42b47f:	and    eax,0xa2773
  42b484:	imul   ebp,DWORD PTR [rsi+0x74],0x72707265
  42b48b:	outs   dx,DWORD PTR ds:[rsi]
  42b48c:	movsxd esp,DWORD PTR [rbp+0x73]
  42b48f:	jae    0x42b4b1
  42b491:	jo     0x42b4fc
  42b493:	jo     0x42b4fa
  42b495:	add    BYTE PTR [rbp+0x72],ah
  42b498:	jb     0x42b509
  42b49a:	jb     0x42b4d6
  42b49c:	and    BYTE PTR [rsi+0x65],dh
  42b49f:	jb     0x42b514
  42b4a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  42b4a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x67726120
  42b4af:	jne    0x42b51e
  42b4b1:	outs   dx,BYTE PTR gs:[rsi]
  42b4b3:	je     0x42b4d5
  42b4b5:	(bad)  
  42b4b6:	and    eax,0x69202763
  42b4bb:	outs   dx,BYTE PTR ds:[rsi]
  42b4bc:	jbe    0x42b51f
  42b4be:	ins    BYTE PTR es:[rdi],dx
  42b4bf:	imul   esp,DWORD PTR [rsi+rbp*1+0x20],0x65735520
  42b4c7:	cmp    cl,BYTE PTR [rdx]
  42b4c9:	or     DWORD PTR [rdi],esp
  42b4cb:	jbe    0x42b4f4
  42b4cd:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82af3
  42b4d3:	jae    0x42b53e
  42b4d5:	outs   dx,DWORD PTR ds:[rsi]
  42b4d6:	outs   dx,BYTE PTR ds:[rsi]
  42b4d7:	and    BYTE PTR [rdi+0x6e],ch
  42b4da:	ins    BYTE PTR es:[rdi],dx
  42b4db:	jns    0x42b4e7
  42b4dd:	or     DWORD PTR [rdi],esp
  42b4df:	movsxd esp,DWORD PTR [rdi]
  42b4e1:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82b07
  42b4e7:	jae    0x42b552
  42b4e9:	outs   dx,DWORD PTR ds:[rsi]
  42b4ea:	outs   dx,BYTE PTR ds:[rsi]
  42b4eb:	and    BYTE PTR [rcx+0x6e],ah
  42b4ee:	and    BYTE PTR fs:[rbx+0x6f],ah
  42b4f2:	jo     0x42b56d
  42b4f4:	jb     0x42b55f
  42b4f6:	addr32 push 0x27090a74
  42b4fc:	outs   dx,BYTE PTR ds:[rsi]
  42b4fd:	(bad)  
  42b4fe:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82b24
  42b504:	jae    0x42b56f
  42b506:	outs   dx,DWORD PTR ds:[rsi]
  42b507:	outs   dx,BYTE PTR ds:[rsi]
  42b508:	and    BYTE PTR [rcx+0x6e],ah
  42b50b:	and    BYTE PTR fs:[rsi+0x75],ah
  42b50f:	ins    BYTE PTR es:[rdi],dx
  42b510:	ins    BYTE PTR es:[rdi],dx
  42b511:	and    BYTE PTR [rbx+0x6f],ah
  42b514:	jo     0x42b58f
  42b516:	jb     0x42b581
  42b518:	addr32 push 0x6f6e2074
  42b51e:	je     0x42b589
  42b520:	movsxd esp,DWORD PTR [rbp+0xa]
  42b523:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7d59c
  42b529:	jb     0x42b59a
  42b52b:	jb     0x42b567
  42b52d:	and    BYTE PTR [rax],ah
  42b52f:	je     0x42b599
  42b531:	and    BYTE PTR gs:[rdi],ah
  42b534:	and    eax,0x61202773
  42b539:	outs   dx,BYTE PTR ds:[rsi]
  42b53a:	and    BYTE PTR fs:[rdi],ah
  42b53d:	and    eax,0x6f202773
  42b542:	jo     0x42b5b8
  42b544:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f632073
  42b54b:	outs   dx,BYTE PTR ds:[rsi]
  42b54c:	data16 ins BYTE PTR es:[rdi],dx
  42b54e:	imul   esp,DWORD PTR [rbx+0x74],0x7325000a
  42b555:	cmp    ah,BYTE PTR [rax]
  42b557:	push   rsp
  42b558:	push   0x25272065
  42b55d:	jae    0x42b586
  42b55f:	and    BYTE PTR [rdi+0x70],ch
  42b562:	je     0x42b5cd
  42b564:	outs   dx,DWORD PTR ds:[rsi]
  42b565:	outs   dx,BYTE PTR ds:[rsi]
  42b566:	and    BYTE PTR [rax+0x61],ch
  42b569:	jae    0x42b58b
  42b56b:	(bad)  
  42b56c:	gs outs dx,BYTE PTR gs:[rsi]
  42b56f:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  42b573:	(bad)  
  42b574:	(bad)  
  42b575:	ins    BYTE PTR es:[rdi],dx
  42b576:	gs fs add BYTE PTR cs:[rip+0x69757165],ch        # 0x69b826e4
  42b57f:	jbe    0x42b5e2
  42b581:	ins    BYTE PTR es:[rdi],dx
  42b582:	outs   dx,BYTE PTR gs:[rsi]
  42b584:	movsxd esp,DWORD PTR [rbp+0x0]
  42b587:	and    eax,0x69203a73
  42b58c:	ins    BYTE PTR es:[rdi],dx
  42b58d:	ins    BYTE PTR es:[rdi],dx
  42b58e:	gs addr32 (bad) 
  42b591:	ins    BYTE PTR es:[rdi],dx
  42b592:	and    BYTE PTR [rdi+0x70],ch
  42b595:	je     0x42b600
  42b597:	outs   dx,DWORD PTR ds:[rsi]
  42b598:	outs   dx,BYTE PTR ds:[rsi]
  42b599:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6367d5cc
  42b59f:	or     al,BYTE PTR [rax]
  42b5a1:	and    eax,0x69203a73
  42b5a6:	ins    BYTE PTR es:[rdi],dx
  42b5a7:	ins    BYTE PTR es:[rdi],dx
  42b5a8:	gs addr32 (bad) 
  42b5ab:	ins    BYTE PTR es:[rdi],dx
  42b5ac:	and    BYTE PTR [rdi+0x70],ch
  42b5af:	je     0x42b61a
  42b5b1:	outs   dx,DWORD PTR ds:[rsi]
  42b5b2:	outs   dx,BYTE PTR ds:[rsi]
  42b5b3:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7367d5e6
  42b5b9:	or     al,BYTE PTR [rax]
  42b5bb:	and    eax,0x75203a73
  42b5c0:	outs   dx,BYTE PTR ds:[rsi]
  42b5c1:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b5c5:	outs   dx,BYTE PTR ds:[rsi]
  42b5c6:	and    BYTE PTR [rsi+0x65],dh
  42b5c9:	outs   dx,BYTE PTR ds:[rsi]
  42b5ca:	outs   dx,DWORD PTR fs:[rsi]
  42b5cc:	jb     0x42b5ee
  42b5ce:	gs js  0x42b645
  42b5d1:	outs   dx,BYTE PTR gs:[rsi]
  42b5d3:	jae    0x42b63e
  42b5d5:	outs   dx,DWORD PTR ds:[rsi]
  42b5d6:	outs   dx,BYTE PTR ds:[rsi]
  42b5d7:	and    BYTE PTR [rdi+0x70],ch
  42b5da:	je     0x42b645
  42b5dc:	outs   dx,DWORD PTR ds:[rsi]
  42b5dd:	outs   dx,BYTE PTR ds:[rsi]
  42b5de:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7367d611
  42b5e4:	or     al,BYTE PTR [rax]
  42b5e6:	and    BYTE PTR [rax],ah
  42b5e8:	outs   dx,DWORD PTR ds:[rsi]
  42b5e9:	jb     0x42b60b
  42b5eb:	(bad)  
  42b5ec:	outs   dx,BYTE PTR ds:[rsi]
  42b5ed:	and    BYTE PTR [rcx+0x6e],ch
  42b5f0:	je     0x42b657
  42b5f2:	addr32 gs jb 0x42b616
  42b5f6:	data16 jb 0x42b668
  42b5f9:	ins    DWORD PTR es:[rdi],dx
  42b5fa:	and    BYTE PTR [rip+0x68742064],ah        # 0x68b6d664
  42b600:	jb     0x42b671
  42b602:	jne    0x42b66b
  42b604:	push   0xa642520
  42b609:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7d682
  42b60f:	jb     0x42b680
  42b611:	jb     0x42b64d
  42b613:	and    BYTE PTR [rax],ah
  42b615:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42b61c:	and    BYTE PTR [rdi+0x70],ch
  42b61f:	je     0x42b68a
  42b621:	outs   dx,DWORD PTR ds:[rsi]
  42b622:	outs   dx,BYTE PTR ds:[rsi]
  42b623:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42b627:	movsxd esi,DWORD PTR [rdx+0x69]
  42b62a:	jo     0x42b6a0
  42b62c:	outs   dx,DWORD PTR ds:[rsi]
  42b62d:	jb     0x42b64f
  42b62f:	outs   dx,WORD PTR ds:[rsi]
  42b631:	jb     0x42b653
  42b633:	and    eax,0x25000a73
  42b638:	jae    0x42b674
  42b63a:	and    BYTE PTR [rcx+0x6e],ch
  42b63d:	jbe    0x42b6a0
  42b63f:	ins    BYTE PTR es:[rdi],dx
  42b640:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  42b648:	outs   dx,BYTE PTR ds:[rsi]
  42b649:	and    BYTE PTR [rsi+0x61],ch
  42b64c:	ins    DWORD PTR es:[rdi],dx
  42b64d:	cmp    ah,BYTE PTR gs:[rax]
  42b650:	and    eax,0x25000a73
  42b655:	jae    0x42b691
  42b657:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42b65b:	and    BYTE PTR [rdi],ah
  42b65d:	and    eax,0x6f202773
  42b662:	jo     0x42b6d8
  42b664:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  42b66b:	jne    0x42b6d6
  42b66d:	jb     0x42b6d4
  42b66f:	jae    0x42b691
  42b671:	(bad)  
  42b672:	outs   dx,BYTE PTR ds:[rsi]
  42b673:	and    BYTE PTR [rcx+0x72],ah
  42b676:	addr32 jne 0x42b6e6
  42b679:	outs   dx,BYTE PTR gs:[rsi]
  42b67b:	je     0x42b6ab
  42b67d:	or     al,BYTE PTR [rax]
  42b67f:	sub    BYTE PTR [rcx+0x75],al
  42b682:	je     0x42b6f3
  42b684:	rex.WRXB jo 0x42b6fb
  42b687:	jae    0x42b6a9
  42b689:	(bad)  
  42b68a:	jne    0x42b6f3
  42b68c:	sub    DWORD PTR [rdx],edi
  42b68e:	and    BYTE PTR [rax],ah
  42b690:	rex.RB jno 0x42b708
  42b693:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  42b69a:	gs and BYTE PTR fs:[rdi+0x70],ch
  42b69f:	je     0x42b70a
  42b6a1:	outs   dx,DWORD PTR ds:[rsi]
  42b6a2:	outs   dx,BYTE PTR ds:[rsi]
  42b6a3:	and    BYTE PTR [rdi],ah
  42b6a5:	and    eax,0x77202773
  42b6aa:	(bad)  
  42b6ab:	jae    0x42b6cd
  42b6ad:	gs jno 0x42b725
  42b6b0:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  42b6b7:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42b6bd:	(bad)  
  42b6be:	outs   dx,DWORD PTR ds:[rsi]
  42b6bf:	je     0x42b729
  42b6c1:	or     cl,BYTE PTR [rcx]
  42b6c3:	(bad)  
  42b6c4:	and    eax,0x61202773
  42b6c9:	outs   dx,BYTE PTR ds:[rsi]
  42b6ca:	and    BYTE PTR fs:[rdi],ah
  42b6cd:	and    eax,0x2e2773
  42b6d2:	and    eax,0x72652073
  42b6d7:	jb     0x42b748
  42b6d9:	jb     0x42b715
  42b6db:	and    BYTE PTR [rax],ah
  42b6dd:	push   rsp
  42b6de:	push   0x73252065
  42b6e3:	and    BYTE PTR [rdi+0x70],ch
  42b6e6:	je     0x42b751
  42b6e8:	outs   dx,DWORD PTR ds:[rsi]
  42b6e9:	outs   dx,BYTE PTR ds:[rsi]
  42b6ea:	and    BYTE PTR [rcx+0x73],ch
  42b6ed:	and    BYTE PTR [rdx+0x65],dh
  42b6f0:	jno    0x42b767
  42b6f2:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  42b6f9:	jae    0x42b735
  42b6fb:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42b6ff:	and    BYTE PTR [rdi],ah
  42b701:	and    eax,0x6f202773
  42b706:	jo     0x42b77c
  42b708:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616320
  42b70f:	outs   dx,BYTE PTR ds:[rsi]
  42b710:	outs   dx,DWORD PTR ds:[rsi]
  42b711:	je     0x42b733
  42b713:	push   0x20657661
  42b718:	(bad)  
  42b719:	outs   dx,BYTE PTR ds:[rsi]
  42b71a:	and    BYTE PTR [rcx+0x72],ah
  42b71d:	addr32 jne 0x42b78d
  42b720:	outs   dx,BYTE PTR gs:[rsi]
  42b722:	je     0x42b752
  42b724:	or     al,BYTE PTR [rax]
  42b726:	and    eax,0x43203a73
  42b72b:	outs   dx,DWORD PTR ds:[rsi]
  42b72c:	ins    DWORD PTR es:[rdi],dx
  42b72d:	ins    DWORD PTR es:[rdi],dx
  42b72e:	(bad)  
  42b72f:	outs   dx,BYTE PTR ds:[rsi]
  42b730:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42b735:	and    BYTE PTR gs:[rcx+0x72],ah
  42b739:	addr32 jne 0x42b7a9
  42b73c:	outs   dx,BYTE PTR gs:[rsi]
  42b73e:	je     0x42b7b3
  42b740:	and    BYTE PTR [rcx+0x72],ah
  42b743:	and    BYTE PTR gs:[rsi+0x6f],ch
  42b747:	je     0x42b769
  42b749:	(bad)  
  42b74a:	ins    BYTE PTR es:[rdi],dx
  42b74b:	ins    BYTE PTR es:[rdi],dx
  42b74c:	outs   dx,DWORD PTR ds:[rsi]
  42b74d:	ja     0x42b7b4
  42b74f:	fs or  al,BYTE PTR cs:[rax]
  42b753:	gs jb  0x42b7c8
  42b756:	outs   dx,DWORD PTR ds:[rsi]
  42b757:	jb     0x42b779
  42b759:	and    eax,0x25282064
  42b75e:	jae    0x42b789
  42b760:	and    BYTE PTR [rbx+0x72],ah
  42b763:	gs (bad) 
  42b765:	je     0x42b7d0
  42b767:	outs   dx,BYTE PTR ds:[rsi]
  42b768:	and    BYTE PTR [eip+0x25000a73],ah        # 0x2542c1e2
  42b76f:	jae    0x42b791
  42b771:	gs jb  0x42b7e6
  42b774:	outs   dx,DWORD PTR ds:[rsi]
  42b775:	jb     0x42b7b1
  42b777:	and    BYTE PTR [rax],ah
  42b779:	(bad)  
  42b77a:	and    eax,0x64202773
  42b77f:	outs   dx,DWORD PTR ds:[rsi]
  42b780:	gs jae 0x42b7a3
  42b783:	outs   dx,BYTE PTR ds:[rsi]
  42b784:	outs   dx,DWORD PTR ds:[rsi]
  42b785:	je     0x42b7a7
  42b787:	ins    DWORD PTR es:[rdi],dx
  42b788:	(bad)  
  42b789:	je     0x42b7ee
  42b78b:	push   0x796e6120
  42b790:	and    BYTE PTR [rip+0x656b2073],ah        # 0x65add809
  42b796:	jns    0x42b80f
  42b798:	outs   dx,DWORD PTR ds:[rsi]
  42b799:	jb     0x42b7ff
  42b79b:	jae    0x42b7cb
  42b79d:	or     al,BYTE PTR [rax]
  42b79f:	and    eax,0x72652073
  42b7a4:	jb     0x42b815
  42b7a6:	jb     0x42b7e2
  42b7a8:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42b7ac:	and    BYTE PTR [rdi],ah
  42b7ae:	and    eax,0x6f202773
  42b7b3:	jo     0x42b829
  42b7b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  42b7bc:	jne    0x42b827
  42b7be:	jb     0x42b825
  42b7c0:	jae    0x42b7e2
  42b7c2:	(bad)  
  42b7c3:	outs   dx,BYTE PTR ds:[rsi]
  42b7c4:	and    BYTE PTR [rcx+0x72],ah
  42b7c7:	addr32 jne 0x42b837
  42b7ca:	outs   dx,BYTE PTR gs:[rsi]
  42b7cc:	je     0x42b7fc
  42b7ce:	or     al,BYTE PTR [rax]
  42b7d0:	gs jb  0x42b845
  42b7d3:	outs   dx,DWORD PTR ds:[rsi]
  42b7d4:	jb     0x42b7f6
  42b7d6:	and    eax,0x25282064
  42b7db:	jae    0x42b806
  42b7dd:	and    BYTE PTR [rbx+0x74],dh
  42b7e0:	(bad)  
  42b7e1:	je     0x42b810
  42b7e3:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  42b7ea:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7d863
  42b7f0:	jb     0x42b861
  42b7f2:	jb     0x42b82e
  42b7f4:	and    BYTE PTR [rsi+0x6f],ch
  42b7f7:	and    BYTE PTR [rbx+0x61],dh
  42b7fa:	jbe    0x42b861
  42b7fc:	and    BYTE PTR fs:[rdi+0x70],ch
  42b800:	je     0x42b86b
  42b802:	outs   dx,DWORD PTR ds:[rsi]
  42b803:	outs   dx,BYTE PTR ds:[rsi]
  42b804:	and    BYTE PTR [rbx+0x74],dh
  42b807:	(bad)  
  42b808:	je     0x42b86f
  42b80a:	or     al,BYTE PTR [rax]
  42b80c:	(bad)  
  42b80d:	and    eax,0x69202773
  42b812:	jae    0x42b834
  42b814:	outs   dx,BYTE PTR ds:[rsi]
  42b815:	outs   dx,DWORD PTR ds:[rsi]
  42b816:	je     0x42b838
  42b818:	(bad)  
  42b819:	and    BYTE PTR [rbx+0x6f],ah
  42b81c:	ins    DWORD PTR es:[rdi],dx
  42b81d:	ins    DWORD PTR es:[rdi],dx
  42b81e:	(bad)  
  42b81f:	outs   dx,BYTE PTR ds:[rsi]
  42b820:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42b825:	and    BYTE PTR gs:[rdi+0x70],ch
  42b829:	je     0x42b894
  42b82b:	outs   dx,DWORD PTR ds:[rsi]
  42b82c:	outs   dx,BYTE PTR ds:[rsi]
  42b82d:	or     al,BYTE PTR cs:[rax]
  42b830:	and    eax,0x72652073
  42b835:	jb     0x42b8a6
  42b837:	jb     0x42b873
  42b839:	and    BYTE PTR [rax],ah
  42b83b:	(bad)  
  42b83c:	and    eax,0x69202773
  42b841:	jae    0x42b863
  42b843:	outs   dx,BYTE PTR ds:[rsi]
  42b844:	outs   dx,DWORD PTR ds:[rsi]
  42b845:	je     0x42b867
  42b847:	(bad)  
  42b848:	and    BYTE PTR [rdx+0x65],dh
  42b84b:	movsxd ebp,DWORD PTR [rdi+0x67]
  42b84e:	outs   dx,BYTE PTR ds:[rsi]
  42b84f:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42b856:	fs (bad) 
  42b858:	je     0x42b8bf
  42b85a:	(bad)  
  42b85b:	je     0x42b8c6
  42b85d:	ins    DWORD PTR es:[rdi],dx
  42b85e:	gs or  al,BYTE PTR cs:[rax]
  42b862:	(bad)  
  42b863:	and    eax,0x6e202773
  42b868:	outs   dx,DWORD PTR ds:[rsi]
  42b869:	je     0x42b88b
  42b86b:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  42b873:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7d8ec
  42b879:	jb     0x42b8ea
  42b87b:	jb     0x42b8b7
  42b87d:	and    BYTE PTR [rax],ah
  42b87f:	(bad)  
  42b880:	and    eax,0x69202773
  42b885:	jae    0x42b8a7
  42b887:	outs   dx,BYTE PTR ds:[rsi]
  42b888:	outs   dx,DWORD PTR ds:[rsi]
  42b889:	je     0x42b8ab
  42b88b:	(bad)  
  42b88c:	and    BYTE PTR [rdx+0x65],dh
  42b88f:	movsxd ebp,DWORD PTR [rdi+0x67]
  42b892:	outs   dx,BYTE PTR ds:[rsi]
  42b893:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42b89a:	je     0x42b905
  42b89c:	ins    DWORD PTR es:[rdi],dx
  42b89d:	and    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  42b8a2:	(bad)  
  42b8a3:	je     0x42b90e
  42b8a5:	outs   dx,DWORD PTR ds:[rsi]
  42b8a6:	outs   dx,BYTE PTR ds:[rsi]
  42b8a7:	or     al,BYTE PTR cs:[rax]
  42b8aa:	and    eax,0x72652073
  42b8af:	jb     0x42b920
  42b8b1:	jb     0x42b8ed
  42b8b3:	and    BYTE PTR [rax],ah
  42b8b5:	push   rsp
  42b8b6:	push   0x73252065
  42b8bb:	and    BYTE PTR [rdi+0x70],ch
  42b8be:	je     0x42b929
  42b8c0:	outs   dx,DWORD PTR ds:[rsi]
  42b8c1:	outs   dx,BYTE PTR ds:[rsi]
  42b8c2:	and    BYTE PTR [rbp+0x75],ch
  42b8c5:	jae    0x42b93b
  42b8c7:	and    BYTE PTR [rcx+0x70],ah
  42b8ca:	jo     0x42b931
  42b8cc:	(bad)  
  42b8cd:	jb     0x42b8ef
  42b8cf:	and    eax,0x69742064
  42b8d4:	ins    DWORD PTR es:[rdi],dx
  42b8d5:	gs jae 0x42b906
  42b8d8:	or     al,BYTE PTR [rax]
  42b8da:	and    eax,0x72652073
  42b8df:	jb     0x42b950
  42b8e1:	jb     0x42b91d
  42b8e3:	and    BYTE PTR [rax],ah
  42b8e5:	(bad)  
  42b8e6:	and    eax,0x69202773
  42b8eb:	jae    0x42b90d
  42b8ed:	outs   dx,BYTE PTR ds:[rsi]
  42b8ee:	outs   dx,DWORD PTR ds:[rsi]
  42b8ef:	je     0x42b911
  42b8f1:	(bad)  
  42b8f2:	and    BYTE PTR [rdx+0x65],dh
  42b8f5:	movsxd ebp,DWORD PTR [rdi+0x67]
  42b8f8:	outs   dx,BYTE PTR ds:[rsi]
  42b8f9:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42b900:	outs   dx,BYTE PTR ds:[rsi]
  42b901:	jne    0x42b970
  42b903:	(bad)  
  42b904:	gs jb  0x42b935
  42b907:	or     al,BYTE PTR [rax]
  42b909:	and    eax,0x72652073
  42b90e:	jb     0x42b97f
  42b910:	jb     0x42b94c
  42b912:	and    BYTE PTR [rax],ah
  42b914:	and    eax,0x78652073
  42b919:	movsxd esp,DWORD PTR [rbp+0x65]
  42b91c:	fs jae 0x42b93f
  42b91f:	and    eax,0x656b2073
  42b924:	jns    0x42b99d
  42b926:	outs   dx,DWORD PTR ds:[rsi]
  42b927:	jb     0x42b98d
  42b929:	and    BYTE PTR [rbx+0x6f],ah
  42b92c:	jne    0x42b99c
  42b92e:	je     0x42b93a
  42b930:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  42b934:	and    BYTE PTR [rdi],ah
  42b936:	and    eax,0x73252073
  42b93b:	(bad)  
  42b93c:	and    BYTE PTR [rsi+0x6f],ah
  42b93f:	jb     0x42b961
  42b941:	ins    DWORD PTR es:[rdi],dx
  42b942:	outs   dx,DWORD PTR ds:[rsi]
  42b943:	jb     0x42b9aa
  42b945:	and    BYTE PTR [rcx+0x6e],ch
  42b948:	outs   dx,WORD PTR ds:[rsi]
  42b94a:	jb     0x42b9b9
  42b94c:	(bad)  
  42b94d:	je     0x42b9b8
  42b94f:	outs   dx,DWORD PTR ds:[rsi]
  42b950:	outs   dx,BYTE PTR ds:[rsi]
  42b951:	or     al,BYTE PTR cs:[rax]
  42b954:	outs   dx,DWORD PTR ds:[rsi]
  42b955:	outs   dx,BYTE PTR ds:[rsi]
  42b956:	and    BYTE PTR gs:[rip+0x20732573],ah        # 0x20b5ded0
  42b95d:	outs   dx,DWORD PTR ds:[rsi]
  42b95e:	jo     0x42b9d4
  42b960:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6c6120
  42b967:	outs   dx,DWORD PTR ds:[rsi]
  42b968:	ja     0x42b9cf
  42b96a:	or     al,BYTE PTR fs:[rax]
  42b96d:	jae    0x42b9e3
  42b96f:	(bad)  
  42b970:	outs   dx,BYTE PTR ds:[rsi]
  42b971:	fs (bad) 
  42b973:	jb     0x42b9d9
  42b975:	and    BYTE PTR [rdi+0x75],ch
  42b978:	je     0x42b9ea
  42b97a:	jne    0x42b9f0
  42b97c:	add    BYTE PTR [rbx+0x74],dh
  42b97f:	(bad)  
  42b980:	outs   dx,BYTE PTR ds:[rsi]
  42b981:	fs (bad) 
  42b983:	jb     0x42b9e9
  42b985:	and    BYTE PTR [rbp+0x72],ah
  42b988:	jb     0x42b9f9
  42b98a:	jb     0x42b98c
  42b98c:	ja     0x42ba00
  42b98e:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x65207325
  42b996:	jb     0x42ba0a
  42b998:	outs   dx,DWORD PTR ds:[rsi]
  42b999:	jb     0x42b9d5
  42b99b:	and    BYTE PTR [rax],ah
  42b99d:	and    eax,0x706f2073
  42b9a2:	je     0x42ba0d
  42b9a4:	outs   dx,DWORD PTR ds:[rsi]
  42b9a5:	outs   dx,BYTE PTR ds:[rsi]
  42b9a6:	and    BYTE PTR [rsi+0x61],dh
  42b9a9:	ins    BYTE PTR es:[rdi],dx
  42b9aa:	jne    0x42ba11
  42b9ac:	and    BYTE PTR [rip+0x6920646c],ah        # 0x69631e1e
  42b9b2:	jae    0x42b9d4
  42b9b4:	outs   dx,DWORD PTR ds:[rsi]
  42b9b5:	jne    0x42ba2b
  42b9b7:	and    BYTE PTR [rdi+0x66],ch
  42b9ba:	and    BYTE PTR [rdx+0x61],dh
  42b9bd:	outs   dx,BYTE PTR ds:[rsi]
  42b9be:	gs or  al,BYTE PTR cs:[eax]
  42b9c3:	and    eax,0x72652073
  42b9c8:	jb     0x42ba39
  42b9ca:	jb     0x42ba06
  42b9cc:	and    BYTE PTR [rax],ah
  42b9ce:	and    eax,0x706f2073
  42b9d3:	je     0x42ba3e
  42b9d5:	outs   dx,DWORD PTR ds:[rsi]
  42b9d6:	outs   dx,BYTE PTR ds:[rsi]
  42b9d7:	and    BYTE PTR [rdx+0x65],dh
  42b9da:	jno    0x42ba51
  42b9dc:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42b9e3:	and    BYTE PTR gs:[rip+0x706f2073],ah        # 0x70b1da5d
  42b9ea:	je     0x42ba55
  42b9ec:	outs   dx,DWORD PTR ds:[rsi]
  42b9ed:	outs   dx,BYTE PTR ds:[rsi]
  42b9ee:	or     al,BYTE PTR [rax]
  42b9f0:	and    eax,0x61772073
  42b9f5:	jb     0x42ba65
  42b9f7:	imul   ebp,DWORD PTR [rsi+0x67],0x6320203a
  42b9fe:	(bad)  
  42b9ff:	outs   dx,BYTE PTR ds:[rsi]
  42ba00:	outs   dx,BYTE PTR ds:[rsi]
  42ba01:	outs   dx,DWORD PTR ds:[rsi]
  42ba02:	je     0x42ba24
  42ba04:	jae    0x42ba67
  42ba06:	jbe    0x42ba6d
  42ba08:	and    BYTE PTR [rdi+0x70],ch
  42ba0b:	je     0x42ba76
  42ba0d:	outs   dx,DWORD PTR ds:[rsi]
  42ba0e:	outs   dx,BYTE PTR ds:[rsi]
  42ba0f:	jae    0x42ba31
  42ba11:	sub    eax,0x20732520
  42ba16:	outs   dx,BYTE PTR ds:[rsi]
  42ba17:	outs   dx,DWORD PTR ds:[rsi]
  42ba18:	je     0x42ba3a
  42ba1a:	jb     0x42ba81
  42ba1c:	addr32 jne 0x42ba8b
  42ba1f:	(bad)  
  42ba20:	jb     0x42ba42
  42ba22:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x900
  42ba29:	or     DWORD PTR [rcx],ecx
  42ba2b:	or     DWORD PTR [rip+0x206e6120],ebp        # 0x20b11b51
  42ba31:	(bad)  
  42ba32:	ins    BYTE PTR es:[rdi],dx
  42ba33:	je     0x42ba9a
  42ba35:	jb     0x42baa5
  42ba37:	(bad)  
  42ba38:	je     0x42ba9f
  42ba3a:	and    BYTE PTR [rsi+0x6f],ah
  42ba3d:	jb     0x42ba5f
  42ba3f:	(bad)  
  42ba40:	and    eax,0xa2773
  42ba45:	push   rsi
  42ba46:	gs jb  0x42babc
  42ba49:	imul   ebp,DWORD PTR [rdi+0x6e],0x7375202c
  42ba50:	(bad)  
  42ba51:	and    BYTE PTR gs:[ecx+0x6e],ah
  42ba56:	and    BYTE PTR fs:[rbx+0x6f],ah
  42ba5a:	outs   dx,BYTE PTR ds:[rsi]
  42ba5b:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42ba61:	je     0x42bacc
  42ba63:	outs   dx,DWORD PTR ds:[rsi]
  42ba64:	outs   dx,BYTE PTR ds:[rsi]
  42ba65:	and    BYTE PTR [rdi+0x70],ch
  42ba68:	je     0x42bad3
  42ba6a:	outs   dx,DWORD PTR ds:[rsi]
  42ba6b:	outs   dx,BYTE PTR ds:[rsi]
  42ba6c:	jae    0x42baa8
  42ba6e:	add    BYTE PTR [rcx],cl
  42ba70:	or     DWORD PTR [rcx],ecx
  42ba72:	or     DWORD PTR [rip+0x66656420],ebp        # 0x66a81e98
  42ba78:	(bad)  
  42ba79:	jne    0x42bae7
  42ba7b:	je     0x42ba9d
  42ba7d:	outs   dx,DWORD PTR ds:[rsi]
  42ba7e:	jo     0x42baf4
  42ba80:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  42ba87:	and    BYTE PTR [rbp+0x6e],dh
  42ba8a:	outs   dx,BYTE PTR ds:[rsi]
  42ba8b:	(bad)  
  42ba8c:	ins    DWORD PTR es:[rdi],dx
  42ba8d:	gs and BYTE PTR fs:[rdi+0x70],ch
  42ba92:	je     0x42bafd
  42ba94:	outs   dx,DWORD PTR ds:[rsi]
  42ba95:	outs   dx,BYTE PTR ds:[rsi]
  42ba96:	jae    0x42baa2
  42ba98:	add    BYTE PTR [rcx],cl
  42ba9a:	or     DWORD PTR [rcx],ecx
  42ba9c:	or     DWORD PTR [rip+0x73696420],ebp        # 0x73ac1ec2
  42baa2:	(bad)  
  42baa3:	(bad)  
  42baa4:	ins    BYTE PTR es:[rdi],dx
  42baa5:	gs and BYTE PTR fs:[rcx+0x73],ah
  42baaa:	and    BYTE PTR [rdi],ah
  42baac:	sub    eax,0x2773252d
  42bab1:	or     al,BYTE PTR [rax]
  42bab3:	and    BYTE PTR [rip+0x25202d2d],ch        # 0x2562e7e6
  42bab9:	sub    eax,0x20733431
  42babe:	and    eax,0x54000a73
  42bac3:	push   0x6f207369
  42bac8:	jo     0x42bb3e
  42baca:	imul   ebp,DWORD PTR [rdi+0x6e],0x73616820
  42bad1:	and    BYTE PTR [rdx+0x65],ah
  42bad4:	outs   dx,BYTE PTR gs:[rsi]
  42bad6:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  42bada:	(bad)  
  42badb:	(bad)  
  42badc:	ins    BYTE PTR es:[rdi],dx
  42badd:	gs add BYTE PTR fs:[rcx],cl
  42bae1:	or     DWORD PTR [rcx],ecx
  42bae3:	or     DWORD PTR [rip+0x616e6520],ebp        # 0x61b12009
  42bae9:	(bad)  
  42baea:	ins    BYTE PTR es:[rdi],dx
  42baeb:	gs and BYTE PTR fs:[rdx+0x79],ah
  42baf0:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42baf4:	(bad)  
  42baf5:	jne    0x42bb63
  42baf7:	je     0x42bb03
  42baf9:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7db72
  42baff:	jb     0x42bb70
  42bb01:	jb     0x42bb3d
  42bb03:	and    BYTE PTR [rax],ah
  42bb05:	outs   dx,DWORD PTR ds:[rsi]
  42bb06:	outs   dx,BYTE PTR ds:[rsi]
  42bb07:	ins    BYTE PTR es:[rdi],dx
  42bb08:	jns    0x42bb2a
  42bb0a:	add    BYTE PTR [rax],ah
  42bb0c:	sub    eax,0x61786520
  42bb11:	ins    DWORD PTR es:[rdi],dx
  42bb12:	imul   ebp,DWORD PTR [rsi+0x69],0x6520676e
  42bb19:	outs   dx,BYTE PTR ds:[rsi]
  42bb1a:	jbe    0x42bb85
  42bb1c:	jb     0x42bb8d
  42bb1e:	outs   dx,BYTE PTR ds:[rsi]
  42bb1f:	ins    DWORD PTR es:[rdi],dx
  42bb20:	outs   dx,BYTE PTR gs:[rsi]
  42bb22:	je     0x42bb44
  42bb24:	jbe    0x42bb87
  42bb26:	jb     0x42bb91
  42bb28:	(bad)  
  42bb29:	(bad)  
  42bb2a:	ins    BYTE PTR es:[rdi],dx
  42bb2b:	gs jae 0x42bb4e
  42bb2e:	outs   dx,BYTE PTR ds:[rsi]
  42bb2f:	(bad)  
  42bb30:	ins    DWORD PTR es:[rdi],dx
  42bb31:	gs and BYTE PTR fs:[rip+0xa2a5f73],ah        # 0xa6d1aac
  42bb39:	add    BYTE PTR [rcx],cl
  42bb3b:	or     DWORD PTR [rcx],ecx
  42bb3d:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cac2163
  42bb43:	and    BYTE PTR gs:[rbp+0x75],ch
  42bb47:	jae    0x42bbbd
  42bb49:	and    BYTE PTR [rsi+0x6f],ch
  42bb4c:	je     0x42bb6e
  42bb4e:	jo     0x42bbc2
  42bb50:	gs sub eax,0x73697865
  42bb56:	je     0x42bb62
  42bb58:	add    BYTE PTR [rcx],cl
  42bb5a:	or     DWORD PTR [rcx],ecx
  42bb5c:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cac2182
  42bb62:	and    BYTE PTR gs:[rbp+0x75],ch
  42bb66:	jae    0x42bbdc
  42bb68:	and    BYTE PTR [rax+0x72],dh
  42bb6b:	gs sub eax,0x73697865
  42bb71:	je     0x42bb7d
  42bb73:	add    BYTE PTR [rdi+0x70],cl
  42bb76:	je     0x42bbe1
  42bb78:	outs   dx,DWORD PTR ds:[rsi]
  42bb79:	outs   dx,BYTE PTR ds:[rsi]
  42bb7a:	jae    0x42bb9c
  42bb7c:	(bad)  
  42bb7d:	jb     0x42bbe4
  42bb7f:	and    BYTE PTR [rbx+0x70],dh
  42bb82:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42bb86:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  42bb8d:	outs   dx,DWORD PTR fs:[rsi]
  42bb8f:	jne    0x42bbf3
  42bb91:	ins    BYTE PTR es:[rdi],dx
  42bb92:	gs and BYTE PTR fs:[rax+0x79],ch
  42bb97:	jo     0x42bc01
  42bb99:	outs   dx,BYTE PTR gs:[rsi]
  42bb9b:	jae    0x42bbbd
  42bb9d:	(bad)  
  42bb9e:	outs   dx,BYTE PTR ds:[rsi]
  42bb9f:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42bba4:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  42bbab:	and    BYTE PTR [rdi+0x72],ch
  42bbae:	and    BYTE PTR [rdx+0x79],ah
  42bbb1:	and    BYTE PTR [rcx+0x20],ah
  42bbb4:	jae    0x42bc1f
  42bbb6:	outs   dx,BYTE PTR ds:[rsi]
  42bbb7:	ins    BYTE PTR es:[edi],dx
  42bbb9:	or     ch,BYTE PTR gs:[rax+0x79]
  42bbbd:	jo     0x42bc27
  42bbbf:	outs   dx,BYTE PTR gs:[rsi]
  42bbc1:	and    BYTE PTR [rcx+0x6e],ah
  42bbc4:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42bbc9:	and    BYTE PTR [rsi+0x6c],ah
  42bbcc:	(bad)  
  42bbcd:	and    BYTE PTR [ebx+0x68],ah
  42bbd1:	(bad)  
  42bbd2:	jb     0x42bc35
  42bbd4:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42bbd8:	or     al,BYTE PTR cs:[rax]
  42bbdb:	or     bh,BYTE PTR [rip+0x3d203d20]        # 0x3d62f901
  42bbe1:	and    BYTE PTR [rip+0x3d203d20],bh        # 0x3d62f907
  42bbe7:	and    BYTE PTR [rip+0xa0a3d20],bh        # 0xa4cf90d
  42bbed:	push   rsp
  42bbee:	push   0x69207369
  42bbf3:	outs   dx,BYTE PTR ds:[rsi]
  42bbf4:	movsxd esp,DWORD PTR [rcx+0x72]
  42bbf7:	outs   dx,BYTE PTR ds:[rsi]
  42bbf8:	(bad)  
  42bbf9:	je     0x42bc64
  42bbfb:	outs   dx,DWORD PTR ds:[rsi]
  42bbfc:	outs   dx,BYTE PTR ds:[rsi]
  42bbfd:	and    BYTE PTR [rdi+0x66],ch
  42bc00:	and    BYTE PTR [rdi+0x65],ah
  42bc03:	outs   dx,BYTE PTR ds:[rsi]
  42bc04:	jae    0x42bc6e
  42bc06:	gs ins BYTE PTR es:[rdi],dx
  42bc08:	ins    BYTE PTR es:[rdi],dx
  42bc09:	and    BYTE PTR [rdi+0x69],dh
  42bc0c:	ins    BYTE PTR es:[rdi],dx
  42bc0d:	ins    BYTE PTR es:[rdi],dx
  42bc0e:	and    BYTE PTR [rax+0x72],dh
  42bc11:	outs   dx,DWORD PTR ds:[rsi]
  42bc12:	fs jne 0x42bc78
  42bc15:	or     ah,BYTE PTR gs:[rcx+0x20]
  42bc19:	jae    0x42bc83
  42bc1b:	gs ins BYTE PTR es:[rdi],dx
  42bc1d:	ins    BYTE PTR es:[rdi],dx
  42bc1e:	and    BYTE PTR [rbx+0x63],dh
  42bc21:	jb     0x42bc8c
  42bc23:	jo     0x42bc99
  42bc25:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42bc29:	jo     0x42bc8c
  42bc2b:	jb     0x42bca0
  42bc2d:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  42bc32:	and    BYTE PTR [rdi+0x70],ch
  42bc35:	je     0x42bca0
  42bc37:	outs   dx,DWORD PTR ds:[rsi]
  42bc38:	outs   dx,BYTE PTR ds:[rsi]
  42bc39:	jae    0x42bc5b
  42bc3b:	outs   dx,WORD PTR ds:[rsi]
  42bc3d:	jb     0x42bc5f
  42bc3f:	and    eax,0xa0a3a73
  42bc44:	add    BYTE PTR [rax],ah
  42bc46:	and    BYTE PTR [rdi+0x72],ch
  42bc49:	and    BYTE PTR [rcx+0x6e],ah
  42bc4c:	and    BYTE PTR [rcx+0x6e],ch
  42bc4f:	je     0x42bcb6
  42bc51:	addr32 gs jb 0x42bc75
  42bc55:	ins    DWORD PTR es:[rdi],dx
  42bc56:	(bad)  
  42bc57:	jae    0x42bcc4
  42bc59:	and    BYTE PTR [rdi+0x69],dh
  42bc5c:	je     0x42bcc6
  42bc5e:	and    BYTE PTR [rcx+0x6e],ah
  42bc61:	jns    0x42bc83
  42bc63:	outs   dx,DWORD PTR ds:[rsi]
  42bc64:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42bc69:	and    BYTE PTR [rdi+rbp*2+0x77],ch
  42bc6d:	gs jb  0x42bc90
  42bc70:	and    eax,0x69622064
  42bc75:	je     0x42bcea
  42bc77:	and    BYTE PTR [rbx+0x65],dh
  42bc7a:	je     0x42bc86
  42bc7c:	add    BYTE PTR [rcx],cl
  42bc7e:	or     DWORD PTR [rcx],ecx
  42bc80:	or     DWORD PTR [rip+0x20736920],ebp        # 0x20b625a6
  42bc86:	(bad)  
  42bc87:	and    BYTE PTR [rbx+0x65],dh
  42bc8a:	je     0x42bcac
  42bc8c:	ins    DWORD PTR es:[rdi],dx
  42bc8d:	gs ins DWORD PTR es:[rdi],dx
  42bc8f:	(bad)  
  42bc90:	gs jb  0x42bd06
  42bc93:	push   0x6f207069
  42bc98:	jo     0x42bd0e
  42bc9a:	imul   ebp,DWORD PTR [rdi+0x6e],0x909000a
  42bca1:	or     DWORD PTR [rcx],ecx
  42bca3:	sub    eax,0x73756d20
  42bca8:	je     0x42bcca
  42bcaa:	(bad)  
  42bcab:	jo     0x42bd1d
  42bcad:	gs (bad) 
  42bcaf:	jb     0x42bcd1
  42bcb1:	(bad)  
  42bcb2:	gs je  0x42bd2c
  42bcb5:	gs outs dx,BYTE PTR gs:[rsi]
  42bcb8:	and    BYTE PTR [rip+0x6e612064],ah        # 0x6ea3dd22
  42bcbe:	and    BYTE PTR fs:[rip+0x69742064],ah        # 0x69b6dd29
  42bcc5:	ins    DWORD PTR es:[rdi],dx
  42bcc6:	gs jae 0x42bcd3
  42bcc9:	add    BYTE PTR [rdi+0x70],cl
  42bccc:	je     0x42bd37
  42bcce:	outs   dx,DWORD PTR ds:[rsi]
  42bccf:	outs   dx,BYTE PTR ds:[rsi]
  42bcd0:	jae    0x42bcf2
  42bcd2:	(bad)  
  42bcd3:	jb     0x42bd3a
  42bcd5:	and    BYTE PTR [rbx+0x70],dh
  42bcd8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42bcdc:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  42bce3:	jae    0x42bd4e
  42bce5:	outs   dx,BYTE PTR ds:[rsi]
  42bce6:	ins    BYTE PTR es:[edi],dx
  42bce8:	and    BYTE PTR gs:[rdi+0x72],ch
  42bcec:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  42bcf0:	(bad)  
  42bcf1:	ins    BYTE PTR es:[rdi],dx
  42bcf2:	and    BYTE PTR gs:[rax+0x79],ch
  42bcf6:	jo     0x42bd60
  42bcf8:	outs   dx,BYTE PTR gs:[rsi]
  42bcfa:	jae    0x42bd1c
  42bcfc:	(bad)  
  42bcfd:	outs   dx,BYTE PTR ds:[rsi]
  42bcfe:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42bd03:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  42bd0a:	or     al,BYTE PTR cs:[rax]
  42bd0d:	or     DWORD PTR [rcx],ecx
  42bd0f:	or     DWORD PTR [rcx],ecx
  42bd11:	sub    eax,0x79616d20
  42bd16:	and    BYTE PTR [rcx+0x70],ah
  42bd19:	jo     0x42bd80
  42bd1b:	(bad)  
  42bd1c:	jb     0x42bd3e
  42bd1e:	ins    DWORD PTR es:[rdi],dx
  42bd1f:	jne    0x42bd8d
  42bd21:	je     0x42bd8c
  42bd23:	jo     0x42bd91
  42bd25:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  42bd2a:	gs jae 0x42bd37
  42bd2d:	add    BYTE PTR [rcx],cl
  42bd2f:	or     DWORD PTR [rcx],ecx
  42bd31:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a42a57
  42bd37:	and    BYTE PTR [rsi+0x6f],ch
  42bd3a:	je     0x42bd5c
  42bd3c:	(bad)  
  42bd3d:	and    BYTE PTR gs:[rax+0x72],dh
  42bd41:	gs jae 0x42bda9
  42bd44:	je     0x42bd50
  42bd46:	add    BYTE PTR [rax],ah
  42bd48:	and    BYTE PTR [rax],ah
  42bd4a:	rex.B jb 0x42bdb4
  42bd4d:	and    BYTE PTR [rdi+0x70],cl
  42bd50:	je     0x42bdbb
  42bd52:	outs   dx,DWORD PTR ds:[rsi]
  42bd53:	outs   dx,BYTE PTR ds:[rsi]
  42bd54:	sub    eax,0x656d614e
  42bd59:	and    BYTE PTR [rax],ah
  42bd5b:	and    BYTE PTR [rax],ah
  42bd5d:	rex.R
  42bd5e:	gs jae 0x42bdc4
  42bd61:	jb     0x42bdcc
  42bd63:	jo     0x42bdd9
  42bd65:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  42bd6c:	rex.RX ins BYTE PTR es:[rdi],dx
  42bd6e:	and    BYTE PTR [ecx+0x72],al
  42bd72:	and    BYTE PTR [edi+0x70],cl
  42bd76:	je     0x42bde1
  42bd78:	outs   dx,DWORD PTR ds:[rsi]
  42bd79:	outs   dx,BYTE PTR ds:[rsi]
  42bd7a:	sub    eax,0x656d614e
  42bd7f:	and    BYTE PTR [rax],ah
  42bd81:	and    BYTE PTR [rax],ah
  42bd83:	rex.R
  42bd84:	gs jae 0x42bdea
  42bd87:	jb     0x42bdf2
  42bd89:	jo     0x42bdff
  42bd8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2520000a
  42bd92:	xor    esi,DWORD PTR [rbx+0x20]
  42bd95:	and    eax,0x68540073
  42bd9a:	and    BYTE PTR gs:[rdi],ah
  42bd9d:	sub    eax,0x756e3c23
  42bda2:	ins    DWORD PTR es:[rdi],dx
  42bda3:	(bad)  
  42bda4:	gs jb  0x42bde5
  42bda7:	(bad)  
  42bda8:	and    BYTE PTR [rdi+0x70],ch
  42bdab:	je     0x42be16
  42bdad:	outs   dx,DWORD PTR ds:[rsi]
  42bdae:	outs   dx,BYTE PTR ds:[rsi]
  42bdaf:	and    BYTE PTR [rbp+0x61],ch
  42bdb2:	jns    0x42bdd4
  42bdb4:	outs   dx,DWORD PTR ds:[rsi]
  42bdb5:	ins    DWORD PTR es:[rdi],dx
  42bdb6:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x68206568
  42bdbe:	(bad)  
  42bdbf:	jae    0x42be29
  42bdc1:	and    BYTE PTR [rbx+0x68],ah
  42bdc4:	(bad)  
  42bdc5:	jb     0x42bdd1
  42bdc7:	add    BYTE PTR [rcx+0x6c],al
  42bdca:	ins    BYTE PTR es:[rdi],dx
  42bdcb:	and    BYTE PTR [rcx+0x72],ah
  42bdce:	addr32 jne 0x42be3e
  42bdd1:	outs   dx,BYTE PTR gs:[rsi]
  42bdd3:	je     0x42be48
  42bdd5:	and    BYTE PTR [rcx+0x72],ah
  42bdd8:	and    BYTE PTR gs:[rsi+0x61],ch
  42bddc:	ins    DWORD PTR es:[rdi],dx
  42bddd:	gs and BYTE PTR fs:[rdi+0x70],ch
  42bde2:	je     0x42be4d
  42bde4:	outs   dx,DWORD PTR ds:[rsi]
  42bde5:	outs   dx,BYTE PTR ds:[rsi]
  42bde6:	jae    0x42be16
  42bde8:	or     al,BYTE PTR [rax]
  42bdea:	and    BYTE PTR [rip+0x61657220],ch        # 0x61a83010
  42bdf0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  42bdf8:	and    BYTE PTR gs:[rip+0x500a0073],ah        # 0x504cbe72
  42bdff:	ins    BYTE PTR es:[rdi],dx
  42be00:	gs (bad) 
  42be02:	jae    0x42be69
  42be04:	and    BYTE PTR [rbx+0x65],dh
  42be07:	outs   dx,BYTE PTR ds:[rsi]
  42be08:	and    BYTE PTR fs:[rdx+0x75],ah
  42be0c:	and    BYTE PTR [edx+0x65],dh
  42be10:	jo     0x42be81
  42be12:	jb     0x42be88
  42be14:	jae    0x42be36
  42be16:	je     0x42be87
  42be18:	cmp    ah,BYTE PTR [rax]
  42be1a:	and    BYTE PTR ds:0xa3e73,bh
  42be21:	or     DWORD PTR [rcx],ecx
  42be23:	or     DWORD PTR [rcx],ecx
  42be25:	sub    eax,0x79616d20
  42be2a:	and    BYTE PTR [rsi+0x4f],cl
  42be2d:	push   rsp
  42be2e:	and    BYTE PTR [rcx+0x70],ah
  42be31:	jo     0x42be98
  42be33:	(bad)  
  42be34:	jb     0x42be56
  42be36:	sub    eax,0x65727020
  42be3b:	jae    0x42bea2
  42be3d:	je     0x42be5f
  42be3f:	outs   dx,DWORD PTR ds:[rsi]
  42be40:	outs   dx,BYTE PTR ds:[rsi]
  42be41:	ins    BYTE PTR es:[rdi],dx
  42be42:	jns    0x42be4e
  42be44:	add    BYTE PTR [rdx],cl
  42be46:	push   rsp
  42be47:	push   0x6f662065
  42be4c:	ins    BYTE PTR es:[rdi],dx
  42be4d:	ins    BYTE PTR es:[rdi],dx
  42be4e:	outs   dx,DWORD PTR ds:[rsi]
  42be4f:	ja     0x42beba
  42be51:	outs   dx,BYTE PTR ds:[rsi]
  42be52:	and    BYTE PTR [edi+0x70],ch
  42be56:	je     0x42bec1
  42be58:	outs   dx,DWORD PTR ds:[rsi]
  42be59:	outs   dx,BYTE PTR ds:[rsi]
  42be5a:	and    BYTE PTR [rax+0x72],dh
  42be5d:	gs jae 0x42bec5
  42be60:	je     0x42be82
  42be62:	ins    DWORD PTR es:[rdi],dx
  42be63:	movsxd ebp,DWORD PTR gs:[rax+0x61]
  42be67:	outs   dx,BYTE PTR ds:[rsi]
  42be68:	imul   esi,DWORD PTR [rbx+0x6d],0x72612073
  42be6f:	and    BYTE PTR gs:[rbx+0x75],dh
  42be73:	jo     0x42bee5
  42be75:	outs   dx,DWORD PTR ds:[rsi]
  42be76:	jb     0x42beec
  42be78:	gs cmp cl,BYTE PTR fs:[rdx]
  42be7c:	add    BYTE PTR [rax+0x72],dh
  42be7f:	outs   dx,DWORD PTR ds:[rsi]
  42be80:	push   0x74696269
  42be85:	jae    0x42bea7
  42be87:	je     0x42bef1
  42be89:	gs jae 0x42bef1
  42be8c:	and    BYTE PTR [rdi+0x70],ch
  42be8f:	je     0x42befa
  42be91:	outs   dx,DWORD PTR ds:[rsi]
  42be92:	outs   dx,BYTE PTR ds:[rsi]
  42be93:	jae    0x42becf
  42be95:	or     al,BYTE PTR [rax]
  42be97:	jo     0x42bf0b
  42be99:	outs   dx,DWORD PTR ds:[rsi]
  42be9a:	push   0x74696269
  42be9f:	jae    0x42bec1
  42bea1:	je     0x42bf0b
  42bea3:	and    BYTE PTR gs:[rdi+0x70],ch
  42bea7:	je     0x42bf12
  42bea9:	outs   dx,DWORD PTR ds:[rsi]
  42beaa:	outs   dx,BYTE PTR ds:[rsi]
  42beab:	and    BYTE PTR [rdi],ah
  42bead:	and    eax,0xa2773
  42beb2:	and    eax,0x646c2573
  42beb7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42bebb:	and    eax,0x2500646c
  42bec0:	jae    0x42bf29
  42bec2:	jb     0x42bf29
  42bec4:	(bad)  
  42bec5:	je     0x42bf2c
  42bec7:	jb     0x42bee9
  42bec9:	je     0x42bf33
  42becb:	(bad)  
  42becc:	outs   dx,BYTE PTR ds:[rsi]
  42becd:	and    BYTE PTR [rdi+0x72],ch
  42bed0:	and    BYTE PTR [rbp+0x71],ah
  42bed3:	jne    0x42bf36
  42bed5:	ins    BYTE PTR es:[rdi],dx
  42bed6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42beda:	and    eax,0x2500646c
  42bedf:	jae    0x42bf06
  42bee1:	ins    BYTE PTR es:[rdi],dx
  42bee2:	and    BYTE PTR fs:[rbp+0x78],ah
  42bee6:	(bad)  
  42bee7:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  42beeb:	add    BYTE PTR [rip+0x20746973],ah        # 0x20b72864
  42bef1:	ins    DWORD PTR es:[rdi],dx
  42bef2:	jne    0x42bf67
  42bef4:	je     0x42bf16
  42bef6:	ins    BYTE PTR es:[rdi],dx
  42bef7:	imul   esp,DWORD PTR [rbp+0x20],0x6f206e69
  42befe:	outs   dx,BYTE PTR ds:[rsi]
  42beff:	and    BYTE PTR gs:[rdi+0x66],ch
  42bf03:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42bf07:	and    BYTE PTR [rdx+0x61],dh
  42bf0a:	outs   dx,BYTE PTR ds:[rsi]
  42bf0b:	addr32 gs jae 0x42bf49
  42bf0f:	or     al,BYTE PTR [rax]
  42bf11:	and    eax,0x20746973
  42bf16:	ins    DWORD PTR es:[rdi],dx
  42bf17:	jne    0x42bf8c
  42bf19:	je     0x42bf3b
  42bf1b:	(bad)  
  42bf1c:	and    BYTE PTR gs:[rcx+0x6e],ch
  42bf20:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42bf24:	and    BYTE PTR [rdx+0x61],dh
  42bf27:	outs   dx,BYTE PTR ds:[rsi]
  42bf28:	cmp    cl,BYTE PTR gs:[edx]
  42bf2c:	add    BYTE PTR [rax+riz*1],ch
  42bf2f:	outs   dx,DWORD PTR ds:[rsi]
  42bf30:	jb     0x42bf3c
  42bf32:	add    BYTE PTR [rip+0x20736973],ah        # 0x20b628ab
  42bf38:	jae    0x42bf9d
  42bf3a:	(bad)  
  42bf3b:	ins    BYTE PTR es:[rdi],dx
  42bf3c:	(bad)  
  42bf3d:	(bad)  
  42bf3e:	ins    BYTE PTR es:[rdi],dx
  42bf3f:	and    BYTE PTR gs:[rdi+0x69],dh
  42bf43:	je     0x42bfad
  42bf45:	and    BYTE PTR [rcx+0x20],ah
  42bf48:	jae    0x42bfbf
  42bf4a:	data16 imul di,WORD PTR [rax+0x3a],0x6b20
  42bf51:	(bad)  
  42bf52:	rex.WXB (bad) 
  42bf54:	ins    DWORD PTR es:[rdi],dx
  42bf55:	(bad)  
  42bf56:	rex.WRB (bad) 
  42bf58:	addr32 (bad) 
  42bf5a:	rex.RXB (bad) 
  42bf5c:	je     0x42bf8d
  42bf5e:	push   rsp
  42bf5f:	or     al,BYTE PTR [rax]
  42bf61:	and    eax,0x73656c73
  42bf66:	jae    0x42bf88
  42bf68:	je     0x42bfd2
  42bf6a:	(bad)  
  42bf6b:	outs   dx,BYTE PTR ds:[rsi]
  42bf6c:	and    BYTE PTR [rdi+0x72],ch
  42bf6f:	and    BYTE PTR [rbp+0x71],ah
  42bf72:	jne    0x42bfd5
  42bf74:	ins    BYTE PTR es:[rdi],dx
  42bf75:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42bf79:	and    eax,0x4f00646c
  42bf7e:	jo     0x42bfe5
  42bf80:	jb     0x42bfe3
  42bf82:	outs   dx,BYTE PTR ds:[rsi]
  42bf83:	fs jae 0x42bfa6
  42bf86:	(bad)  
  42bf87:	outs   dx,BYTE PTR ds:[rsi]
  42bf88:	and    BYTE PTR fs:[rdi+0x70],ch
  42bf8c:	je     0x42bff7
  42bf8e:	outs   dx,DWORD PTR ds:[rsi]
  42bf8f:	outs   dx,BYTE PTR ds:[rsi]
  42bf90:	jae    0x42bfb2
  42bf92:	ins    DWORD PTR es:[rdi],dx
  42bf93:	(bad)  
  42bf94:	jns    0x42bfb6
  42bf96:	(bad)  
  42bf97:	and    BYTE PTR gs:[rcx+0x6e],ch
  42bf9b:	je     0x42c002
  42bf9d:	jb     0x42c00c
  42bf9f:	imul   edi,DWORD PTR [rax+0x65],0x20202e64
  42bfa6:	push   rsp
  42bfa7:	push   0x77207965
  42bfac:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x72206562
  42bfb4:	outs   dx,DWORD PTR gs:[rsi]
  42bfb6:	jb     0x42c01c
  42bfb8:	gs jb  0x42c020
  42bfbb:	fs or  al,BYTE PTR cs:[rax]
  42bfbf:	jb     0x42c026
  42bfc1:	jno    0x42c038
  42bfc3:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42bfca:	and    BYTE PTR gs:[rdi+0x70],ch
  42bfce:	je     0x42c039
  42bfd0:	outs   dx,DWORD PTR ds:[rsi]
  42bfd1:	outs   dx,BYTE PTR ds:[rsi]
  42bfd2:	and    BYTE PTR [rdi],ah
  42bfd4:	and    eax,0xa2773
  42bfd9:	jb     0x42c040
  42bfdb:	jno    0x42c052
  42bfdd:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42bfe4:	gs jae 0x42c04c
  42bfe7:	and    BYTE PTR [rdi+0x70],ch
  42bfea:	je     0x42c055
  42bfec:	outs   dx,DWORD PTR ds:[rsi]
  42bfed:	outs   dx,BYTE PTR ds:[rsi]
  42bfee:	jae    0x42c02a
  42bff0:	or     al,BYTE PTR [rax]
  42bff2:	and    BYTE PTR [rax],ah
  42bff4:	and    BYTE PTR [rcx+0x72],al
  42bff7:	and    BYTE PTR [edi+0x70],cl
  42bffb:	je     0x42c066
  42bffd:	outs   dx,DWORD PTR ds:[rsi]
  42bffe:	outs   dx,BYTE PTR ds:[rsi]
  42bfff:	sub    eax,0x656d614e
  42c004:	and    BYTE PTR [rax],ah
  42c006:	and    BYTE PTR [rdx+0x65],dl
  42c009:	jno    0x42c04a
  42c00b:	and    BYTE PTR [rax],ah
  42c00d:	rex.R
  42c00e:	gs jae 0x42c074
  42c011:	jb     0x42c07c
  42c013:	jo     0x42c089
  42c015:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  42c01c:	rex.RX ins BYTE PTR es:[rdi],dx
  42c01e:	and    BYTE PTR [ecx+0x72],al
  42c022:	and    BYTE PTR [edi+0x70],cl
  42c026:	je     0x42c091
  42c028:	outs   dx,DWORD PTR ds:[rsi]
  42c029:	outs   dx,BYTE PTR ds:[rsi]
  42c02a:	sub    eax,0x656d614e
  42c02f:	and    BYTE PTR [rax],ah
  42c031:	and    BYTE PTR [rdx+0x65],dl
  42c034:	jno    0x42c075
  42c036:	and    BYTE PTR [rax],ah
  42c038:	rex.R
  42c039:	gs jae 0x42c09f
  42c03c:	jb     0x42c0a7
  42c03e:	jo     0x42c0b4
  42c040:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f000a
  42c047:	and    BYTE PTR [rcx+0x6f],bh
  42c04a:	jne    0x42c06c
  42c04c:	ins    DWORD PTR es:[rdi],dx
  42c04d:	(bad)  
  42c04e:	jns    0x42c070
  42c050:	jne    0x42c0c5
  42c052:	and    BYTE PTR gs:[rcx+0x20],ah
  42c056:	outs   dx,BYTE PTR ds:[rsi]
  42c057:	jne    0x42c0c6
  42c059:	gs jb  0x42c0c5
  42c05c:	movsxd esp,DWORD PTR [rax]
  42c05e:	jb     0x42c0c5
  42c060:	jo     0x42c0d4
  42c062:	gs jae 0x42c0ca
  42c065:	outs   dx,BYTE PTR ds:[rsi]
  42c066:	je     0x42c0c9
  42c068:	je     0x42c0d3
  42c06a:	outs   dx,DWORD PTR ds:[rsi]
  42c06b:	outs   dx,BYTE PTR ds:[rsi]
  42c06c:	and    BYTE PTR cs:[rax],ah
  42c06f:	push   rax
  42c070:	jb     0x42c0d7
  42c072:	movsxd esp,DWORD PTR [rbp+0x64]
  42c075:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  42c07c:	jae    0x42c0e3
  42c07e:	and    BYTE PTR [rdi+0x69],dh
  42c081:	je     0x42c0eb
  42c083:	and    BYTE PTR [rcx+0x20],ah
  42c086:	(bad)  
  42c087:	and    DWORD PTR [rdi],esp
  42c089:	or     dh,BYTE PTR [rdi+0x69]
  42c08c:	ins    BYTE PTR es:[rdi],dx
  42c08d:	ins    BYTE PTR es:[rdi],dx
  42c08e:	and    BYTE PTR [rbx+0x6c],ah
  42c091:	gs (bad) 
  42c093:	jb     0x42c0b5
  42c095:	je     0x42c0ff
  42c097:	and    BYTE PTR gs:[rdx+0x69],ah
  42c09b:	je     0x42c110
  42c09d:	sub    al,0x20
  42c09f:	jae    0x42c111
  42c0a1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42c0a5:	jns    0x42c110
  42c0a7:	outs   dx,BYTE PTR ds:[rsi]
  42c0a8:	and    BYTE PTR [edi],ah
  42c0ab:	outs   dx,BYTE PTR ds:[rsi]
  42c0ac:	outs   dx,DWORD PTR ds:[rsi]
  42c0ad:	outs   dx,BYTE PTR ds:[rsi]
  42c0ae:	gs (bad) 
  42c0b0:	and    BYTE PTR [rdi+0x69],dh
  42c0b3:	ins    BYTE PTR es:[rdi],dx
  42c0b4:	ins    BYTE PTR es:[rdi],dx
  42c0b5:	and    BYTE PTR [rbx+0x6c],ah
  42c0b8:	gs (bad) 
  42c0ba:	jb     0x42c0dc
  42c0bc:	(bad)  
  42c0bd:	ins    BYTE PTR es:[rdi],dx
  42c0be:	ins    BYTE PTR es:[rdi],dx
  42c0bf:	and    BYTE PTR [rdx+0x69],ah
  42c0c2:	je     0x42c137
  42c0c4:	sub    al,0x20
  42c0c6:	(bad)  
  42c0c7:	outs   dx,BYTE PTR ds:[rsi]
  42c0c8:	and    BYTE PTR fs:[rdi],ah
  42c0cb:	(bad)  
  42c0cc:	ins    BYTE PTR es:[rdi],dx
  42c0cd:	ins    BYTE PTR es:[rdi],dx
  42c0ce:	(bad)  
  42c0cf:	or     dh,BYTE PTR [rdi+0x69]
  42c0d2:	ins    BYTE PTR es:[rdi],dx
  42c0d3:	ins    BYTE PTR es:[rdi],dx
  42c0d4:	and    BYTE PTR [rbx+0x65],dh
  42c0d7:	je     0x42c0f9
  42c0d9:	je     0x42c143
  42c0db:	gs ins DWORD PTR es:[rdi],dx
  42c0dd:	and    BYTE PTR [rcx+0x6c],ah
  42c0e0:	ins    BYTE PTR es:[rdi],dx
  42c0e1:	and    BYTE PTR cs:[rax],ah
  42c0e4:	rex.WRB jne 0x42c153
  42c0e7:	je     0x42c152
  42c0e9:	jo     0x42c157
  42c0eb:	and    BYTE PTR gs:[rbp+0x6e],ah
  42c0ef:	je     0x42c163
  42c0f1:	imul   esp,DWORD PTR [rbp+0x73],0x79616d20
  42c0f8:	and    BYTE PTR [rdx+0x65],ah
  42c0fb:	and    BYTE PTR [rax+0x61],dh
  42c0fe:	jae    0x42c173
  42c100:	gs and BYTE PTR fs:[rcx+0x73],ah
  42c105:	and    BYTE PTR [rcx+0x6e],ah
  42c108:	and    BYTE PTR [rdi+0x70],ch
  42c10b:	je     0x42c176
  42c10d:	outs   dx,DWORD PTR ds:[rsi]
  42c10e:	outs   dx,BYTE PTR ds:[rsi]
  42c10f:	or     ah,BYTE PTR [rcx+0x72]
  42c112:	addr32 jne 0x42c182
  42c115:	outs   dx,BYTE PTR gs:[rsi]
  42c117:	je     0x42c139
  42c119:	ins    BYTE PTR es:[rdi],dx
  42c11a:	imul   esi,DWORD PTR [rbx+0x74],0x9000a2e
  42c121:	or     DWORD PTR [rcx],ecx
  42c123:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a42e49
  42c129:	and    BYTE PTR [rcx+0x70],ah
  42c12c:	jo     0x42c193
  42c12e:	(bad)  
  42c12f:	jb     0x42c151
  42c131:	jne    0x42c1a3
  42c133:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c137:	and    eax,0x69742064
  42c13c:	ins    DWORD PTR es:[rdi],dx
  42c13d:	gs jae 0x42c14a
  42c140:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c144:	and    BYTE PTR [rsi+0x61],dh
  42c147:	ins    BYTE PTR es:[rdi],dx
  42c148:	imul   esp,DWORD PTR [rax+riz*1+0x22],0x20227325
  42c150:	outs   dx,DWORD PTR ds:[rsi]
  42c151:	jo     0x42c1c7
  42c153:	imul   ebp,DWORD PTR [rdi+0x6e],0x79656b20
  42c15a:	ja     0x42c1cb
  42c15c:	jb     0x42c1c2
  42c15e:	jae    0x42c180
  42c160:	(bad)  
  42c161:	jb     0x42c1c8
  42c163:	cmp    cl,BYTE PTR [rdx]
  42c165:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c169:	and    BYTE PTR [rsi+0x65],ch
  42c16c:	js     0x42c1e2
  42c16e:	and    BYTE PTR [rdi+0x70],ch
  42c171:	je     0x42c1dc
  42c173:	outs   dx,DWORD PTR ds:[rsi]
  42c174:	outs   dx,BYTE PTR ds:[rsi]
  42c175:	and    BYTE PTR [rbx+0x75],dh
  42c178:	jo     0x42c1ea
  42c17a:	outs   dx,DWORD PTR ds:[rsi]
  42c17b:	jb     0x42c1f1
  42c17d:	jae    0x42c19f
  42c17f:	jbe    0x42c1e6
  42c181:	outs   dx,BYTE PTR ds:[rsi]
  42c182:	outs   dx,DWORD PTR fs:[rsi]
  42c184:	jb     0x42c1a6
  42c186:	jae    0x42c1fd
  42c188:	jo     0x42c1fa
  42c18a:	outs   dx,DWORD PTR ds:[rsi]
  42c18b:	jb     0x42c201
  42c18d:	gs and BYTE PTR fs:[rbp+0x78],ah
  42c192:	je     0x42c206
  42c194:	(bad)  
  42c195:	and    BYTE PTR [rdi+0x70],ch
  42c198:	je     0x42c203
  42c19a:	outs   dx,DWORD PTR ds:[rsi]
  42c19b:	outs   dx,BYTE PTR ds:[rsi]
  42c19c:	jae    0x42c1d8
  42c19e:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c1a2:	jae    0x42c209
  42c1a4:	and    BYTE PTR [rcx+0x64],ah
  42c1a7:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  42c1b0:	outs   dx,DWORD PTR ds:[rsi]
  42c1b1:	jo     0x42c227
  42c1b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x72612073
  42c1ba:	cmp    al,BYTE PTR gs:[rax]
  42c1bd:	xor    al,0x31
  42c1bf:	cmp    dh,BYTE PTR [rcx]
  42c1c1:	cmp    dh,BYTE PTR [rcx]
  42c1c3:	or     al,BYTE PTR ss:[rax]
	...
  42c1fe:	add    BYTE PTR [rax],al
  42c200:	add    DWORD PTR [rax],eax
  42c202:	add    BYTE PTR [rax],al
  42c204:	add    al,BYTE PTR [rax]
  42c206:	add    BYTE PTR [rax],al
  42c208:	add    al,0x0
  42c20a:	add    BYTE PTR [rax],al
  42c20c:	or     BYTE PTR [rax],al
  42c20e:	add    BYTE PTR [rax],al
  42c210:	adc    BYTE PTR [rax],al
  42c212:	add    BYTE PTR [rax],al
  42c214:	and    BYTE PTR [rax],al
  42c216:	add    BYTE PTR [rax],al
  42c218:	add    BYTE PTR [rax],al
  42c21b:	add    BYTE PTR [rax+0x0],al
  42c221:	add    DWORD PTR [rax],eax
  42c223:	add    BYTE PTR [rax],al
  42c225:	add    al,BYTE PTR [rax]
  42c227:	add    BYTE PTR [rax],al
  42c229:	add    al,0x0
  42c22b:	add    BYTE PTR [rax],al
  42c22d:	or     BYTE PTR [rax],al
  42c22f:	add    BYTE PTR [rcx],al
  42c231:	or     al,0x0
  42c233:	add    BYTE PTR [rax],al
  42c235:	or     al,0x0
  42c237:	add    BYTE PTR [rax],al
  42c239:	adc    BYTE PTR [rax],al
  42c23b:	add    BYTE PTR [rax],al
  42c23d:	and    BYTE PTR [rax],al
  42c23f:	add    BYTE PTR [rax],al
  42c241:	add    BYTE PTR [rax],al
  42c244:	add    BYTE PTR [rax+0x0],al
  42c24a:	add    DWORD PTR [rax],eax
  42c24c:	add    BYTE PTR [rax],al
  42c24e:	add    eax,DWORD PTR [rax]
  42c250:	add    BYTE PTR [rax],al
  42c252:	(bad)  
  42c253:	add    BYTE PTR [rax],al
  42c255:	add    BYTE PTR [rax],cl
  42c257:	add    BYTE PTR [rax],al
  42c259:	add    BYTE PTR [rax],dl
  42c25b:	add    BYTE PTR [rax],al
  42c25d:	add    BYTE PTR [rax],bl
  42c25f:	add    BYTE PTR [rax],al
  42c261:	add    BYTE PTR [rbx],bl
  42c263:	add    BYTE PTR [rax+0x0],al
  42c266:	sbb    BYTE PTR [rax],al
  42c268:	add    BYTE PTR [rbx],bl
  42c26b:	add    BYTE PTR [rax+0x0],al
  42c26e:	cmp    eax,DWORD PTR [rax]
  42c270:	(bad)  
  42c271:	add    BYTE PTR [rbx],bh
  42c273:	add    BYTE PTR [rax],al
  42c275:	add    BYTE PTR [rax+0x0],al
  42c278:	(bad)  
  42c279:	add    al,0x7b
  42c27b:	add    BYTE PTR [rax],al
  42c27d:	xor    BYTE PTR [rax],al
  42c27f:	add    BYTE PTR [rax],al
  42c281:	add    BYTE PTR [rax+0xc0100],al
  42c287:	add    DWORD PTR [rcx+0xc],eax
  42c28d:	add    BYTE PTR [rax],al
  42c28f:	add    al,BYTE PTR [rax]
  42c291:	add    BYTE PTR [rbx],bl
  42c293:	add    al,0xc
  42c295:	add    BYTE PTR [rbx],bl
  42c297:	add    al,0x2
  42c299:	add    BYTE PTR [rax],al
  42c29b:	or     BYTE PTR [rax+rax*1],al
  42c29e:	sbb    eax,DWORD PTR [rbx+rax*1]
  42c2a1:	or     al,0x0
  42c2a3:	add    BYTE PTR [rbx],dl
  42c2a5:	or     al,0x0
  42c2a7:	add    BYTE PTR [rbx],dl
  42c2a9:	or     al,0x0
  42c2ab:	adc    BYTE PTR [rax],al
  42c2ad:	add    BYTE PTR [rbx],0x0
  42c2b0:	add    DWORD PTR [rcx],eax
  42c2b2:	add    BYTE PTR [rax],al
  42c2b4:	add    BYTE PTR [rsi],al
	...
  42c2be:	add    BYTE PTR [rax],al
  42c2c0:	add    al,BYTE PTR [rax]
	...
  42c2de:	add    BYTE PTR [rax],al
  42c2e0:	add    BYTE PTR [rax],cl
  42c2e2:	add    BYTE PTR [rax],al
  42c2e4:	add    BYTE PTR [rax+rax*1],al
  42c2e7:	add    BYTE PTR [rcx],al
  42c2e9:	add    BYTE PTR [rax],al
  42c2eb:	add    BYTE PTR [rax],al
  42c2ed:	or     BYTE PTR [rax],al
  42c2ef:	add    BYTE PTR [rax],al
  42c2f1:	or     BYTE PTR [rax],al
  42c2f3:	add    BYTE PTR [rax],al
  42c2f5:	or     BYTE PTR [rax],al
	...
  42c33f:	add    BYTE PTR [rax],al
  42c341:	add    al,0x0
  42c343:	add    BYTE PTR [rax],al
  42c345:	rex add BYTE PTR [rdx],0x0
  42c349:	push   rax
  42c34a:	add    BYTE PTR [rdx],al
  42c34c:	add    BYTE PTR [rax+0x0],al
  42c34f:	add    al,BYTE PTR [rax]
  42c351:	add    BYTE PTR [r10],0x8
  42c355:	rex add BYTE PTR [rdx],0x0
  42c359:	rex add BYTE PTR [rdx],0x0
  42c35d:	push   rax
  42c35e:	add    BYTE PTR [rdx],al
  42c360:	add    BYTE PTR [rax+0x0],ah
  42c363:	add    al,BYTE PTR [rax]
  42c365:	(bad)  
  42c366:	add    BYTE PTR [rdx],al
  42c368:	add    BYTE PTR [rax+0x0],al
  42c36b:	add    al,BYTE PTR [rax+0x10128040]
  42c371:	add    BYTE PTR [rdx],al
  42c374:	add    dl,al
  42c376:	movabs al,ds:0x80400406c0400006
  42c37f:	add    eax,DWORD PTR [rax]
  42c381:	rex or DWORD PTR [rax],0x814000
  42c388:	add    BYTE PTR [rax-0x7f],al
  42c38b:	add    BYTE PTR [rax],al
  42c38d:	rex add DWORD PTR [rax],0x814000
  42c394:	add    BYTE PTR [rax-0x7f],al
  42c397:	add    BYTE PTR [rax],al
  42c399:	rex add DWORD PTR [rax],0x814000
  42c3a0:	add    BYTE PTR [rax-0x7e],al
  42c3a3:	add    BYTE PTR [rax],al
  42c3a5:	rex (bad) 
  42c3a7:	add    BYTE PTR [rax],ah
  42c3a9:	rex add BYTE PTR [rdx],0x0
  42c3ad:	add    BYTE PTR [rdx],al
  42c3b0:	add    BYTE PTR [rax+0x0],al
  42c3b3:	add    al,BYTE PTR [rax]
  42c3b5:	add    BYTE PTR [rdx],al
  42c3b8:	add    BYTE PTR [rax+0x0],al
  42c3bb:	add    eax,DWORD PTR [rax]
  42c3bd:	add    BYTE PTR [rdx],al
  42c3c0:	add    BYTE PTR [rax-0x80],al
  42c3c3:	add    al,BYTE PTR [rax]
  42c3c5:	rex xchg esp,eax
  42c3c7:	add    BYTE PTR [rax],al
  42c3c9:	rex xchg esp,eax
  42c3cb:	add    BYTE PTR [rax],al
  42c3cd:	rex xchg esp,eax
  42c3cf:	add    BYTE PTR [rax],al
  42c3d1:	rex xchg esp,eax
  42c3d3:	add    BYTE PTR [rax],al
  42c3d5:	rex xchg esp,eax
  42c3d7:	add    BYTE PTR [rax],al
  42c3d9:	rex xchg esp,eax
  42c3db:	or     BYTE PTR [rax],al
  42c3dd:	rex xchg eax,eax
  42c3df:	add    BYTE PTR [rax],al
  42c3e1:	rex xchg eax,eax
  42c3e3:	add    BYTE PTR [rax],al
  42c3e5:	rex xchg eax,eax
  42c3e7:	add    BYTE PTR [rax],al
  42c3e9:	rex xchg eax,eax
  42c3eb:	add    BYTE PTR [rax],al
  42c3ed:	rex xchg eax,eax
  42c3ef:	add    BYTE PTR [rax],al
  42c3f1:	rex xchg eax,eax
  42c3f3:	add    BYTE PTR [rax],al
  42c3f5:	rex xchg eax,eax
  42c3f7:	add    BYTE PTR [rax],al
  42c3f9:	rex xchg eax,eax
  42c3fb:	or     BYTE PTR [rax],al
  42c3fd:	rex xchg eax,eax
  42c3ff:	add    BYTE PTR [rax],al
  42c401:	rex xchg eax,eax
  42c403:	add    BYTE PTR [rax],al
  42c405:	rex xchg eax,eax
  42c407:	add    BYTE PTR [rax],al
  42c409:	rex xchg eax,eax
  42c40b:	add    BYTE PTR [rax],al
  42c40d:	rex xchg eax,eax
  42c40f:	add    BYTE PTR [rax],al
  42c411:	rex xchg eax,eax
  42c413:	add    BYTE PTR [rax],al
  42c415:	rex xchg eax,eax
  42c417:	add    BYTE PTR [rax],al
  42c419:	rex xchg eax,eax
  42c41b:	add    BYTE PTR [rax],al
  42c41d:	rex xchg eax,eax
  42c41f:	add    BYTE PTR [rax],al
  42c421:	rex xchg eax,eax
  42c423:	add    BYTE PTR [rax],al
  42c425:	rex xchg eax,eax
  42c427:	add    BYTE PTR [rax],al
  42c429:	rex xchg eax,eax
  42c42b:	add    BYTE PTR [rax],al
  42c42d:	rex
  42c42e:	add    al,BYTE PTR [rax+rax*2]
  42c432:	add    BYTE PTR [rdx],al
  42c434:	add    BYTE PTR [rax+0x40],al
  42c437:	add    al,BYTE PTR [rax]
  42c439:	movabs al,ds:0x40000480404002
  42c443:	add    al,BYTE PTR [rax]
  42c445:	rex mov WORD PTR [rax],es
  42c448:	add    BYTE PTR [rax-0x74],al
  42c44b:	add    BYTE PTR [rax],al
  42c44d:	rex mov WORD PTR [rax],es
  42c450:	add    BYTE PTR [rax-0x74],al
  42c453:	add    BYTE PTR [rax],al
  42c455:	rex mov WORD PTR [rax],es
  42c458:	add    BYTE PTR [rax-0x74],al
  42c45b:	or     BYTE PTR [rax],al
  42c45d:	mov    BYTE PTR [rax],al
  42c460:	add    BYTE PTR [rax-0x78],al
  42c463:	add    BYTE PTR [rax],al
  42c465:	mov    BYTE PTR [rax],al
  42c468:	add    BYTE PTR [rax-0x78],al
  42c46b:	add    BYTE PTR [rax],al
  42c46d:	mov    BYTE PTR [rax],al
  42c470:	add    BYTE PTR [rax-0x78],al
  42c473:	add    BYTE PTR [rax],al
  42c475:	mov    BYTE PTR [rax],al
  42c478:	add    BYTE PTR [rax-0x78],al
  42c47b:	or     BYTE PTR [rax],al
  42c47d:	mov    BYTE PTR [rax],al
  42c480:	add    BYTE PTR [rax-0x78],al
  42c483:	add    BYTE PTR [rax],al
  42c485:	mov    BYTE PTR [rax],al
  42c488:	add    BYTE PTR [rax-0x78],al
  42c48b:	add    BYTE PTR [rax],al
  42c48d:	mov    BYTE PTR [rax],al
  42c490:	add    BYTE PTR [rax-0x78],al
  42c493:	add    BYTE PTR [rax],al
  42c495:	mov    BYTE PTR [rax],al
  42c498:	add    BYTE PTR [rax-0x78],al
  42c49b:	add    BYTE PTR [rax],al
  42c49d:	mov    BYTE PTR [rax],al
  42c4a0:	add    BYTE PTR [rax-0x78],al
  42c4a3:	add    BYTE PTR [rax],al
  42c4a5:	mov    BYTE PTR [rax],al
  42c4a8:	add    BYTE PTR [rax-0x78],al
  42c4ab:	add    BYTE PTR [rax],al
  42c4ad:	add    BYTE PTR [rdx],al
  42c4b0:	add    BYTE PTR [rax-0x80],al
  42c4b3:	adc    al,BYTE PTR [rax]
  42c4b5:	add    BYTE PTR [rdx],al
  42c4b8:	add    al,al
  42c4ba:	add    BYTE PTR [rdx],0x0
  42c4bd:	add    BYTE PTR [rax],al
  42c4bf:	add    ch,dh
  42c4c1:	cdq    
  42c4c2:	(bad)  
  42c4c3:	jmp    rdx
  42c4c5:	cdq    
  42c4c6:	(bad)  
  42c4c7:	push   QWORD PTR [rax-0x4f00016e]
  42c4cd:	xchg   edx,eax
  42c4ce:	(bad)  
  42c4cf:	call   rax
  42c4d1:	cdq    
  42c4d2:	(bad)  
  42c4d3:	jmp    FWORD PTR [rsi+rdx*4]
  42c4d6:	(bad)  
  42c4d7:	(bad)  
  42c4d8:	cld    
  42c4d9:	xchg   esp,eax
  42c4da:	(bad)  
  42c4db:	inc    DWORD PTR [rcx]
  42c4dd:	xchg   esi,eax
  42c4de:	(bad)  
  42c4df:	(bad)  
  42c4e0:	fcom   QWORD PTR [rbp-0x6b630002]
  42c4e6:	(bad)  
  42c4e7:	jmp    FWORD PTR [rsi-0x5100016e]
  42c4ed:	xchg   edx,eax
  42c4ee:	(bad)  
  42c4ef:	jmp    FWORD PTR [rsi-0x5100016e]
  42c4f5:	xchg   edx,eax
  42c4f6:	(bad)  
  42c4f7:	dec    DWORD PTR [rsp+rdx*4]
  42c4fa:	(bad)  
  42c4fb:	dec    DWORD PTR [rsp+rdx*4]
  42c4fe:	(bad)  
  42c4ff:	call   FWORD PTR [rsi]
  42c501:	xchg   ebp,eax
  42c502:	(bad)  
  42c503:	dec    DWORD PTR [rbp+rdx*4-0x6d510002]
  42c50a:	(bad)  
  42c50b:	call   FWORD PTR [rsp+rdx*4-0x6bf30002]
  42c512:	(bad)  
  42c513:	dec    DWORD PTR [rsp+rdx*4]
  42c516:	(bad)  
  42c517:	dec    DWORD PTR [rsp+rdx*4]
  42c51a:	(bad)  
  42c51b:	call   FWORD PTR [rdi-0x65]
  42c51e:	(bad)  
  42c51f:	jmp    rsp
  42c521:	xchg   ebp,eax
  42c522:	(bad)  
  42c523:	jmp    rsp
  42c525:	xchg   ebp,eax
  42c526:	(bad)  
  42c527:	jmp    rsp
  42c529:	xchg   ebp,eax
  42c52a:	(bad)  
  42c52b:	(bad)  
  42c52c:	(bad)  
  42c52d:	fwait
  42c52e:	(bad)  
  42c52f:	jmp    FWORD PTR [rbx+rbx*4]
  42c532:	(bad)  
  42c533:	(bad)  
  42c534:	(bad)  
  42c535:	fwait
  42c536:	(bad)  
  42c537:	jmp    rsp
  42c539:	xchg   ebp,eax
  42c53a:	(bad)  
  42c53b:	jmp    rsp
  42c53d:	xchg   ebp,eax
  42c53e:	(bad)  
  42c53f:	jmp    rsp
  42c541:	xchg   ebp,eax
  42c542:	(bad)  
  42c543:	jmp    rsp
  42c545:	xchg   ebp,eax
  42c546:	(bad)  
  42c547:	jmp    rsp
  42c549:	xchg   ebp,eax
  42c54a:	(bad)  
  42c54b:	jmp    rsp
  42c54d:	xchg   ebp,eax
  42c54e:	(bad)  
  42c54f:	jmp    rsp
  42c551:	xchg   ebp,eax
  42c552:	(bad)  
  42c553:	jmp    rsp
  42c555:	xchg   ebp,eax
  42c556:	(bad)  
  42c557:	jmp    rsp
  42c559:	xchg   ebp,eax
  42c55a:	(bad)  
  42c55b:	jmp    rsp
  42c55d:	xchg   ebp,eax
  42c55e:	(bad)  
  42c55f:	jmp    rsp
  42c561:	xchg   ebp,eax
  42c562:	(bad)  
  42c563:	jmp    rsp
  42c565:	xchg   ebp,eax
  42c566:	(bad)  
  42c567:	jmp    rsp
  42c569:	xchg   ebp,eax
  42c56a:	(bad)  
  42c56b:	jmp    rsp
  42c56d:	xchg   ebp,eax
  42c56e:	(bad)  
  42c56f:	jmp    rsp
  42c571:	xchg   ebp,eax
  42c572:	(bad)  
  42c573:	jmp    rsp
  42c575:	xchg   ebp,eax
  42c576:	(bad)  
  42c577:	call   FWORD PTR [rcx]
  42c579:	fwait
  42c57a:	(bad)  
  42c57b:	jmp    rsp
  42c57d:	xchg   ebp,eax
  42c57e:	(bad)  
  42c57f:	jmp    rsp
  42c581:	xchg   ebp,eax
  42c582:	(bad)  
  42c583:	jmp    rsp
  42c585:	xchg   ebp,eax
  42c586:	(bad)  
  42c587:	jmp    rsp
  42c589:	xchg   ebp,eax
  42c58a:	(bad)  
  42c58b:	jmp    rsp
  42c58d:	xchg   ebp,eax
  42c58e:	(bad)  
  42c58f:	jmp    rsp
  42c591:	xchg   ebp,eax
  42c592:	(bad)  
  42c593:	jmp    rsp
  42c595:	xchg   ebp,eax
  42c596:	(bad)  
  42c597:	jmp    rsp
  42c599:	xchg   ebp,eax
  42c59a:	(bad)  
  42c59b:	call   FWORD PTR [rdi-0x65]
  42c59e:	(bad)  
  42c59f:	jmp    rsp
  42c5a1:	xchg   ebp,eax
  42c5a2:	(bad)  
  42c5a3:	push   rbp
  42c5a5:	(bad)  
  42c5a6:	(bad)  
  42c5a7:	dec    ebx
  42c5a9:	(bad)  
  42c5aa:	(bad)  
  42c5ab:	(bad)  
  42c5ac:	(bad)  
  42c5ad:	fwait
  42c5ae:	(bad)  
  42c5af:	jmp    FWORD PTR [rbx+rbx*4]
  42c5b2:	(bad)  
  42c5b3:	(bad)  
  42c5b4:	(bad)  
  42c5b5:	fwait
  42c5b6:	(bad)  
  42c5b7:	jmp    rsp
  42c5b9:	xchg   ebp,eax
  42c5ba:	(bad)  
  42c5bb:	dec    ebx
  42c5bd:	(bad)  
  42c5be:	(bad)  
  42c5bf:	jmp    rsp
  42c5c1:	xchg   ebp,eax
  42c5c2:	(bad)  
  42c5c3:	jmp    rsp
  42c5c5:	xchg   ebp,eax
  42c5c6:	(bad)  
  42c5c7:	jmp    rsp
  42c5c9:	xchg   ebp,eax
  42c5ca:	(bad)  
  42c5cb:	jmp    rsp
  42c5cd:	xchg   ebp,eax
  42c5ce:	(bad)  
  42c5cf:	jmp    rsp
  42c5d1:	xchg   ebp,eax
  42c5d2:	(bad)  
  42c5d3:	push   QWORD PTR [rdi-0x4f000166]
  42c5d9:	(bad)  
  42c5da:	(bad)  
  42c5db:	jmp    rsp
  42c5dd:	xchg   ebp,eax
  42c5de:	(bad)  
  42c5df:	jmp    rsp
  42c5e1:	xchg   ebp,eax
  42c5e2:	(bad)  
  42c5e3:	jmp    QWORD PTR [rcx]
  42c5e5:	(bad)  
  42c5e6:	(bad)  
  42c5e7:	jmp    rsp
  42c5e9:	xchg   ebp,eax
  42c5ea:	(bad)  
  42c5eb:	dec    ebx
  42c5ed:	(bad)  
  42c5ee:	(bad)  
  42c5ef:	jmp    rsp
  42c5f1:	xchg   ebp,eax
  42c5f2:	(bad)  
  42c5f3:	jmp    rsp
  42c5f5:	xchg   ebp,eax
  42c5f6:	(bad)  
  42c5f7:	call   FWORD PTR [rcx]
  42c5f9:	fwait
  42c5fa:	(bad)  
  42c5fb:	inc    DWORD PTR [rax]
  42c5fd:	add    BYTE PTR [rax],al
  42c5ff:	add    BYTE PTR [rax],ch
  42c601:	rex.WRX push rbp
  42c603:	rex.WR
  42c604:	sub    QWORD PTR [rax],r8
  42c607:	add    BYTE PTR [rdi+riz*4],cl
  42c60a:	(bad)  
  42c60b:	call   FWORD PTR [rax-0x6700015a]
  42c611:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c612:	(bad)  
  42c613:	dec    DWORD PTR [rax-0x7700015a]
  42c619:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c61a:	(bad)  
  42c61b:	(bad)  
  42c61c:	js     0x42c5c4
  42c61e:	(bad)  
  42c61f:	(bad)  
  42c620:	js     0x42c5c8
  42c622:	(bad)  
  42c623:	(bad)  
  42c624:	js     0x42c5cc
  42c626:	(bad)  
  42c627:	(bad)  
  42c628:	js     0x42c5d0
  42c62a:	(bad)  
  42c62b:	call   FWORD PTR [rax-0x5a]
  42c62e:	(bad)  
  42c62f:	call   FWORD PTR [rax-0x5a]
  42c632:	(bad)  
  42c633:	jmp    FWORD PTR [rax-0x4700015a]
  42c639:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c63a:	(bad)  
  42c63b:	(bad)  
  42c63c:	js     0x42c5e4
  42c63e:	(bad)  
  42c63f:	dec    DWORD PTR [rax-0x3700015a]
  42c645:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c646:	(bad)  
  42c647:	(bad)  
  42c648:	call   0x5942c4f3
  42c64d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c64e:	(bad)  
  42c64f:	call   FWORD PTR [rax-0x5a]
  42c652:	(bad)  
  42c653:	call   FWORD PTR [rax-0x5a]
  42c656:	(bad)  
  42c657:	call   FWORD PTR [rax-0x5a]
  42c65a:	(bad)  
  42c65b:	call   FWORD PTR [rax-0x5a]
  42c65e:	(bad)  
  42c65f:	call   FWORD PTR [rax-0x5a]
  42c662:	(bad)  
  42c663:	jmp    FWORD PTR [rax]
  42c665:	add    BYTE PTR [rsi+0x0],cl
  42c668:	push   rbp
  42c669:	add    BYTE PTR [rax+rax*1+0x4c],cl
  42c66d:	add    BYTE PTR [rcx],ch
	...
  42c67f:	add    BYTE PTR [rdi+0x6ffffeb0],ch
  42c685:	test   eax,0xa96ffffe
  42c68a:	(bad)  
  42c68b:	jmp    FWORD PTR [rdi-0x57]
  42c68e:	(bad)  
  42c68f:	jmp    FWORD PTR [rdi-0x57]
  42c692:	(bad)  
  42c693:	jmp    FWORD PTR [rdi-0x57]
  42c696:	(bad)  
  42c697:	jmp    FWORD PTR [rdi-0x57]
  42c69a:	(bad)  
  42c69b:	jmp    FWORD PTR [rdi-0x57]
  42c69e:	(bad)  
  42c69f:	jmp    FWORD PTR [rdi-0x57]
  42c6a2:	(bad)  
  42c6a3:	jmp    FWORD PTR [rdi-0x57]
  42c6a6:	(bad)  
  42c6a7:	jmp    FWORD PTR [rdi-0x57]
  42c6aa:	(bad)  
  42c6ab:	jmp    FWORD PTR [rdi-0x57]
  42c6ae:	(bad)  
  42c6af:	jmp    FWORD PTR [rdi-0x57]
  42c6b2:	(bad)  
  42c6b3:	jmp    FWORD PTR [rdi-0x57]
  42c6b6:	(bad)  
  42c6b7:	jmp    FWORD PTR [rdi-0x57]
  42c6ba:	(bad)  
  42c6bb:	jmp    FWORD PTR [rdi-0x57]
  42c6be:	(bad)  
  42c6bf:	jmp    FWORD PTR [rdi-0x57]
  42c6c2:	(bad)  
  42c6c3:	jmp    FWORD PTR [rdi-0x57]
  42c6c6:	(bad)  
  42c6c7:	jmp    FWORD PTR [rdi-0x57]
  42c6ca:	(bad)  
  42c6cb:	jmp    FWORD PTR [rdi-0x57]
  42c6ce:	(bad)  
  42c6cf:	jmp    FWORD PTR [rdi-0x57]
  42c6d2:	(bad)  
  42c6d3:	jmp    FWORD PTR [rdi-0x57]
  42c6d6:	(bad)  
  42c6d7:	jmp    FWORD PTR [rdi-0x57]
  42c6da:	(bad)  
  42c6db:	jmp    FWORD PTR [rdi-0x57]
  42c6de:	(bad)  
  42c6df:	jmp    FWORD PTR [rdi-0x57]
  42c6e2:	(bad)  
  42c6e3:	jmp    FWORD PTR [rdi-0x57]
  42c6e6:	(bad)  
  42c6e7:	jmp    FWORD PTR [rdi-0x57]
  42c6ea:	(bad)  
  42c6eb:	jmp    FWORD PTR [rdi-0x57]
  42c6ee:	(bad)  
  42c6ef:	call   QWORD PTR [rax]
  42c6f1:	lods   al,BYTE PTR ds:[rsi]
  42c6f2:	(bad)  
  42c6f3:	jmp    FWORD PTR [rdi-0x57]
  42c6f6:	(bad)  
  42c6f7:	call   FWORD PTR [rdi+0x6ffffeb0]
  42c6fd:	test   eax,0xac10fffe
  42c702:	(bad)  
  42c703:	call   QWORD PTR [rax]
  42c705:	lods   al,BYTE PTR ds:[rsi]
  42c706:	(bad)  
  42c707:	call   QWORD PTR [rax]
  42c709:	lods   al,BYTE PTR ds:[rsi]
  42c70a:	(bad)  
  42c70b:	jmp    FWORD PTR [rdi-0x57]
  42c70e:	(bad)  
  42c70f:	jmp    FWORD PTR [rdi-0x57]
  42c712:	(bad)  
  42c713:	jmp    FWORD PTR [rdi-0x57]
  42c716:	(bad)  
  42c717:	jmp    FWORD PTR [rdi-0x57]
  42c71a:	(bad)  
  42c71b:	jmp    FWORD PTR [rdi-0x57]
  42c71e:	(bad)  
  42c71f:	jmp    FWORD PTR [rdi-0x57]
  42c722:	(bad)  
  42c723:	jmp    FWORD PTR [rdi-0x57]
  42c726:	(bad)  
  42c727:	jmp    FWORD PTR [rdi-0x57]
  42c72a:	(bad)  
  42c72b:	jmp    FWORD PTR [rdi-0x57]
  42c72e:	(bad)  
  42c72f:	jmp    FWORD PTR [rdi-0x57]
  42c732:	(bad)  
  42c733:	jmp    FWORD PTR [rdi-0x57]
  42c736:	(bad)  
  42c737:	inc    ebx
  42c739:	mov    al,0xfe
  42c73b:	jmp    FWORD PTR [rdi-0x57]
  42c73e:	(bad)  
  42c73f:	jmp    FWORD PTR [rdi-0x57]
  42c742:	(bad)  
  42c743:	jmp    FWORD PTR [rdi-0x57]
  42c746:	(bad)  
  42c747:	jmp    FWORD PTR [rdi-0x57]
  42c74a:	(bad)  
  42c74b:	call   FWORD PTR [rax-0x53]
  42c74e:	(bad)  
  42c74f:	jmp    FWORD PTR [rdi-0x57]
  42c752:	(bad)  
  42c753:	jmp    FWORD PTR [rdi-0x57]
  42c756:	(bad)  
  42c757:	jmp    FWORD PTR [rdi-0x57]
  42c75a:	(bad)  
  42c75b:	jmp    FWORD PTR [rdi-0x57]
  42c75e:	(bad)  
  42c75f:	jmp    FWORD PTR [rdi-0x57]
  42c762:	(bad)  
  42c763:	jmp    FWORD PTR [rdi-0x57]
  42c766:	(bad)  
  42c767:	jmp    FWORD PTR [rdi-0x57]
  42c76a:	(bad)  
  42c76b:	jmp    FWORD PTR [rdi-0x57]
  42c76e:	(bad)  
  42c76f:	call   QWORD PTR [rax]
  42c771:	lods   al,BYTE PTR ds:[rsi]
  42c772:	(bad)  
  42c773:	jmp    FWORD PTR [rdi-0x57]
  42c776:	(bad)  
  42c777:	inc    DWORD PTR [rbx-0x53]
  42c77a:	(bad)  
  42c77b:	(bad)  
  42c77c:	std    
  42c77d:	lods   al,BYTE PTR ds:[rsi]
  42c77e:	(bad)  
  42c77f:	call   QWORD PTR [rax]
  42c781:	lods   al,BYTE PTR ds:[rsi]
  42c782:	(bad)  
  42c783:	call   QWORD PTR [rax]
  42c785:	lods   al,BYTE PTR ds:[rsi]
  42c786:	(bad)  
  42c787:	call   QWORD PTR [rax]
  42c789:	lods   al,BYTE PTR ds:[rsi]
  42c78a:	(bad)  
  42c78b:	jmp    FWORD PTR [rdi-0x57]
  42c78e:	(bad)  
  42c78f:	(bad)  
  42c790:	std    
  42c791:	lods   al,BYTE PTR ds:[rsi]
  42c792:	(bad)  
  42c793:	jmp    FWORD PTR [rdi-0x57]
  42c796:	(bad)  
  42c797:	jmp    FWORD PTR [rdi-0x57]
  42c79a:	(bad)  
  42c79b:	jmp    FWORD PTR [rdi-0x57]
  42c79e:	(bad)  
  42c79f:	jmp    FWORD PTR [rdi-0x57]
  42c7a2:	(bad)  
  42c7a3:	(bad)  
  42c7a4:	mov    edx,0x58fffeac
  42c7a9:	lods   eax,DWORD PTR ds:[rsi]
  42c7aa:	(bad)  
  42c7ab:	push   QWORD PTR [rsi+0x6ffffeb0]
  42c7b1:	test   eax,0xa96ffffe
  42c7b6:	(bad)  
  42c7b7:	jmp    QWORD PTR [rbp+0x6ffffeac]
  42c7bd:	test   eax,0xad58fffe
  42c7c2:	(bad)  
  42c7c3:	jmp    FWORD PTR [rdi-0x57]
  42c7c6:	(bad)  
  42c7c7:	jmp    FWORD PTR [rdi-0x57]
  42c7ca:	(bad)  
  42c7cb:	call   FWORD PTR [rax-0x53]
  42c7ce:	(bad)  
  42c7cf:	dec    DWORD PTR [rip+0xa]        # 0x42c7df
	...
  42c7dd:	add    BYTE PTR [rax],al
  42c7df:	add    BYTE PTR [rsi+0x74],ch
  42c7e2:	fs ins BYTE PTR es:[rdi],dx
  42c7e4:	ins    BYTE PTR es:[rdi],dx
  42c7e5:	cs fs ins BYTE PTR es:[rdi],dx
  42c7e8:	ins    BYTE PTR es:[rdi],dx
  42c7e9:	add    BYTE PTR [rsi+0x74],cl
  42c7ec:	push   rcx
  42c7ed:	jne    0x42c854
  42c7ef:	jb     0x42c86a
  42c7f1:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42c7f3:	outs   dx,WORD PTR ds:[rsi]
  42c7f5:	jb     0x42c864
  42c7f7:	(bad)  
  42c7f8:	je     0x42c863
  42c7fa:	outs   dx,DWORD PTR ds:[rsi]
  42c7fb:	outs   dx,BYTE PTR ds:[rsi]
  42c7fc:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x656c6573
  42c805:	movsxd esi,DWORD PTR [rsi+rbp*1+0x63]
  42c809:	add    BYTE PTR [rdx+0x52],ah
  42c80c:	gs je  0x42c80f
  42c80f:	add    BYTE PTR [rbp+0x6e],dl
  42c812:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42c816:	outs   dx,BYTE PTR ds:[rsi]
  42c817:	and    BYTE PTR [rbp+0x72],ah
  42c81a:	jb     0x42c88b
  42c81c:	jb     0x42c83e
  42c81e:	and    eax,0x64
	...
  42c82f:	add    BYTE PTR [rbx+0x75],dl
  42c832:	movsxd esp,DWORD PTR [rbx+0x65]
  42c835:	jae    0x42c8aa
  42c837:	add    BYTE PTR [rbp+riz*2+0x78],dl
  42c83b:	je     0x42c85d
  42c83d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7562
  42c844:	jae    0x42c8bf
  42c846:	add    BYTE PTR [rsi+0x6f],cl
  42c849:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42c84d:	(bad)  
  42c84e:	and    BYTE PTR [rcx+0x76],ah
  42c851:	(bad)  
  42c852:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4f00656c
  42c85a:	jne    0x42c8d0
  42c85c:	and    BYTE PTR [rdi+0x66],ch
  42c85f:	and    BYTE PTR [rbx+0x74],dh
  42c862:	jb     0x42c8c9
  42c864:	(bad)  
  42c865:	ins    DWORD PTR es:[rdi],dx
  42c866:	jae    0x42c888
  42c868:	jb     0x42c8cf
  42c86a:	jae    0x42c8db
  42c86c:	jne    0x42c8e0
  42c86e:	movsxd esp,DWORD PTR [rbp+0x73]
  42c871:	add    BYTE PTR [rbp+riz*2+0x76],al
  42c875:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  42c87c:	and    BYTE PTR [rcx+0x20],ah
  42c87f:	jae    0x42c8f5
  42c881:	jb     0x42c8e8
  42c883:	(bad)  
  42c884:	ins    DWORD PTR es:[rdi],dx
  42c885:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
  42c889:	gs jb  0x42c8ac
  42c88c:	gs js  0x42c8ff
  42c88f:	imul   esi,DWORD PTR [rdx+0x65],0x744f0064
  42c896:	push   0x65207265
  42c89b:	jb     0x42c90f
  42c89d:	outs   dx,DWORD PTR ds:[rsi]
  42c89e:	jb     0x42c8a0
  42c8a0:	push   rbx
  42c8a1:	outs   dx,DWORD PTR ds:[rsi]
  42c8a2:	movsxd ebp,DWORD PTR [rbx+0x65]
  42c8a5:	je     0x42c8c7
  42c8a7:	je     0x42c922
  42c8a9:	jo     0x42c910
  42c8ab:	and    BYTE PTR [rsi+0x6f],ch
  42c8ae:	je     0x42c8d0
  42c8b0:	jae    0x42c927
  42c8b2:	jo     0x42c924
  42c8b4:	outs   dx,DWORD PTR ds:[rsi]
  42c8b5:	jb     0x42c92b
  42c8b7:	gs add BYTE PTR fs:[rax+0x72],dl
  42c8bc:	outs   dx,DWORD PTR ds:[rsi]
  42c8bd:	je     0x42c92e
  42c8bf:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42c8c2:	and    BYTE PTR [rsi+0x61],ah
  42c8c5:	ins    DWORD PTR es:[rdi],dx
  42c8c6:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  42c8ce:	jae    0x42c945
  42c8d0:	jo     0x42c942
  42c8d2:	outs   dx,DWORD PTR ds:[rsi]
  42c8d3:	jb     0x42c949
  42c8d5:	gs add BYTE PTR fs:[rbx+0x61],al
  42c8da:	outs   dx,BYTE PTR ds:[rsi]
  42c8db:	outs   dx,BYTE PTR ds:[rsi]
  42c8dc:	outs   dx,DWORD PTR ds:[rsi]
  42c8dd:	je     0x42c8ff
  42c8df:	jae    0x42c946
  42c8e1:	outs   dx,BYTE PTR ds:[rsi]
  42c8e2:	and    BYTE PTR fs:[rcx+0x66],ah
  42c8e6:	je     0x42c94d
  42c8e8:	jb     0x42c90a
  42c8ea:	je     0x42c95e
  42c8ec:	(bad)  
  42c8ed:	outs   dx,BYTE PTR ds:[rsi]
  42c8ee:	jae    0x42c960
  42c8f0:	outs   dx,DWORD PTR ds:[rsi]
  42c8f1:	jb     0x42c967
  42c8f3:	and    BYTE PTR [rbp+0x6e],ah
  42c8f6:	fs jo  0x42c968
  42c8f9:	imul   ebp,DWORD PTR [rsi+0x74],0x75687320
  42c900:	je     0x42c966
  42c902:	outs   dx,DWORD PTR ds:[rsi]
  42c903:	ja     0x42c973
  42c905:	add    BYTE PTR [rax],al
  42c907:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  42c90b:	and    BYTE PTR [rbp+0x61],ch
  42c90e:	outs   dx,BYTE PTR ds:[rsi]
  42c90f:	jns    0x42c931
  42c911:	jb     0x42c978
  42c913:	data16 gs jb 0x42c97c
  42c917:	outs   dx,BYTE PTR ds:[rsi]
  42c918:	movsxd esp,DWORD PTR [rbp+0x73]
  42c91b:	cmp    ah,BYTE PTR [rax]
  42c91d:	movsxd esp,DWORD PTR [rcx+0x6e]
  42c920:	outs   dx,BYTE PTR ds:[rsi]
  42c921:	outs   dx,DWORD PTR ds:[rsi]
  42c922:	je     0x42c944
  42c924:	jae    0x42c996
  42c926:	ins    BYTE PTR es:[rdi],dx
  42c927:	imul   esp,DWORD PTR [rbx+0x65],0x736f4800
  42c92e:	je     0x42c950
  42c930:	imul   esi,DWORD PTR [rbx+0x20],0x6e776f64
  42c937:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  42c93b:	and    BYTE PTR [rbp+0x61],ch
  42c93e:	outs   dx,BYTE PTR ds:[rsi]
  42c93f:	jns    0x42c961
  42c941:	jo     0x42c9b5
  42c943:	outs   dx,DWORD PTR ds:[rsi]
  42c944:	movsxd esp,DWORD PTR [rbp+0x73]
  42c947:	jae    0x42c9ae
  42c949:	jae    0x42c94b
  42c94b:	push   rsp
  42c94c:	outs   dx,DWORD PTR ds:[rsi]
  42c94d:	outs   dx,DWORD PTR ds:[rsi]
  42c94e:	and    BYTE PTR [rbp+0x61],ch
  42c951:	outs   dx,BYTE PTR ds:[rsi]
  42c952:	jns    0x42c974
  42c954:	jne    0x42c9c9
  42c956:	gs jb  0x42c9cc
  42c959:	add    BYTE PTR [rcx+rbp*2+0x73],al
  42c95d:	imul   esp,DWORD PTR [rax],0x71
  42c960:	jne    0x42c9d1
  42c962:	je     0x42c9c5
  42c964:	and    BYTE PTR [rbp+0x78],ah
  42c967:	movsxd esp,DWORD PTR [rbp+0x65]
  42c96a:	fs gs add BYTE PTR fs:[rbx+0x74],dl
  42c970:	(bad)  
  42c971:	ins    BYTE PTR es:[rdi],dx
  42c972:	and    BYTE PTR gs:[rsi+0x46],cl
  42c976:	push   rbx
  42c977:	and    BYTE PTR [rsi+0x69],ah
  42c97a:	ins    BYTE PTR es:[rdi],dx
  42c97b:	and    BYTE PTR gs:[rax+0x61],ch
  42c97f:	outs   dx,BYTE PTR ds:[rsi]
  42c980:	fs ins BYTE PTR es:[rdi],dx
  42c982:	add    BYTE PTR gs:[rdi+0x62],cl
  42c986:	push   0x65
  42c988:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  42c98c:	jae    0x42c9ae
  42c98e:	jb     0x42c9f5
  42c990:	ins    DWORD PTR es:[rdi],dx
  42c991:	outs   dx,DWORD PTR ds:[rsi]
  42c992:	je     0x42c9f9
  42c994:	add    BYTE PTR [rdi+0x76],cl
  42c997:	gs jb  0x42ca06
  42c99a:	(bad)  
  42c99b:	jo     0x42ca0d
  42c99d:	gs and BYTE PTR fs:[rdi+0x70],ch
  42c9a2:	gs jb  0x42ca06
  42c9a5:	je     0x42ca10
  42c9a7:	outs   dx,DWORD PTR ds:[rsi]
  42c9a8:	outs   dx,BYTE PTR ds:[rsi]
  42c9a9:	and    BYTE PTR [rcx+0x62],ah
  42c9ac:	outs   dx,DWORD PTR ds:[rsi]
  42c9ad:	jb     0x42ca23
  42c9af:	gs add BYTE PTR fs:[rax],al
  42c9b3:	add    BYTE PTR [rax],al
  42c9b5:	add    BYTE PTR [rax],al
  42c9b7:	add    BYTE PTR [rdi+0x76],cl
  42c9ba:	gs jb  0x42ca29
  42c9bd:	(bad)  
  42c9be:	jo     0x42ca30
  42c9c0:	gs and BYTE PTR fs:[rcx+0x2f],cl
  42c9c5:	rex.WRXB and BYTE PTR [r13+0x76],r12b
  42c9c9:	outs   dx,BYTE PTR gs:[rsi]
  42c9cb:	je     0x42c9ed
  42c9cd:	outs   dx,DWORD PTR ds:[rsi]
  42c9ce:	(bad)  
  42c9cf:	push   0x65
  42c9d1:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  42c9d5:	outs   dx,DWORD PTR ds:[rsi]
  42c9d6:	je     0x42c9f8
  42c9d8:	imul   ebp,DWORD PTR [rsi+0x20],0x6e676973
  42c9df:	(bad)  
  42c9e0:	ins    BYTE PTR es:[rdi],dx
  42c9e1:	gs and BYTE PTR fs:[rbx+0x74],dh
  42c9e6:	(bad)  
  42c9e7:	je     0x42ca4e
  42c9e9:	add    BYTE PTR [rax],al
  42c9eb:	add    BYTE PTR [rax],al
  42c9ed:	add    BYTE PTR [rax],al
  42c9ef:	add    BYTE PTR [rdi+0x76],cl
  42c9f2:	gs jb  0x42ca61
  42c9f5:	(bad)  
  42c9f6:	jo     0x42ca68
  42c9f8:	gs and BYTE PTR fs:[rdi+0x70],ch
  42c9fd:	gs jb  0x42ca61
  42ca00:	je     0x42ca6b
  42ca02:	outs   dx,DWORD PTR ds:[rsi]
  42ca03:	outs   dx,BYTE PTR ds:[rsi]
  42ca04:	jae    0x42ca26
  42ca06:	ja     0x42ca71
  42ca08:	ins    BYTE PTR es:[rdi],dx
  42ca09:	ins    BYTE PTR es:[rdi],dx
  42ca0a:	and    BYTE PTR [rbx+0x6f],ah
  42ca0d:	ins    DWORD PTR es:[rdi],dx
  42ca0e:	jo     0x42ca7c
  42ca10:	gs je  0x42ca78
  42ca13:	and    BYTE PTR [rcx+riz*2+0x74],ch
  42ca17:	gs jb  0x42ca1a
  42ca1a:	add    BYTE PTR [rax],al
  42ca1c:	add    BYTE PTR [rax],al
  42ca1e:	add    BYTE PTR [rax],al
  42ca20:	rex.WRX
  42ca21:	gs je  0x42ca9b
  42ca24:	outs   dx,DWORD PTR ds:[rsi]
  42ca25:	jb     0x42ca92
  42ca27:	and    BYTE PTR [rbx+0x75],dh
  42ca2a:	(bad)  
  42ca2c:	jns    0x42caa1
  42ca2e:	je     0x42ca95
  42ca30:	ins    DWORD PTR es:[rdi],dx
  42ca31:	and    BYTE PTR [rcx+0x73],ch
  42ca34:	and    BYTE PTR [rbp+0x6e],dh
  42ca37:	(bad)  
  42ca38:	jbe    0x42ca9b
  42ca3a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  42ca42:	add    BYTE PTR [rax],al
  42ca44:	add    BYTE PTR [rax],al
  42ca46:	add    BYTE PTR [rax],al
  42ca48:	push   rdi
  42ca49:	imul   ebp,DWORD PTR [rsi+0x73],0x2e6b636f
  42ca50:	fs ins BYTE PTR es:[rdi],dx
  42ca52:	ins    BYTE PTR es:[rdi],dx
  42ca53:	and    BYTE PTR [rsi+0x65],dh
  42ca56:	jb     0x42cacb
  42ca58:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756f20
  42ca5f:	and    BYTE PTR [rdi+0x66],ch
  42ca62:	and    BYTE PTR [rdx+0x61],dh
  42ca65:	outs   dx,BYTE PTR ds:[rsi]
  42ca66:	add    BYTE PTR gs:[eax],al
  42ca6a:	add    BYTE PTR [rax],al
  42ca6c:	add    BYTE PTR [rax],al
  42ca6e:	add    BYTE PTR [rax],al
  42ca70:	push   rbx
  42ca71:	jne    0x42cad6
  42ca73:	movsxd esp,DWORD PTR [rbp+0x73]
  42ca76:	jae    0x42cade
  42ca78:	jne    0x42cae6
  42ca7a:	and    BYTE PTR [rdi+0x53],dl
  42ca7d:	push   r11
  42ca7f:	je     0x42cae2
  42ca81:	jb     0x42caf7
  42ca83:	jne    0x42caf5
  42ca85:	and    BYTE PTR [rsi+0x6f],ch
  42ca88:	je     0x42caaa
  42ca8a:	jns    0x42caf1
  42ca8c:	je     0x42caae
  42ca8e:	jo     0x42caf5
  42ca90:	jb     0x42caf8
  42ca92:	outs   dx,DWORD PTR ds:[rsi]
  42ca93:	jb     0x42cb02
  42ca95:	gs add BYTE PTR fs:[rdi+0x72],al
  42ca9a:	(bad)  
  42ca9b:	movsxd esp,DWORD PTR [rbp+0x66]
  42ca9e:	jne    0x42cb0c
  42caa0:	and    BYTE PTR [rbx+0x68],dh
  42caa3:	jne    0x42cb19
  42caa5:	outs   dx,DWORD PTR fs:[rsi]
  42caa7:	ja     0x42cb17
  42caa9:	and    BYTE PTR [rcx+0x6e],ch
  42caac:	and    BYTE PTR [rax+0x72],dh
  42caaf:	outs   dx,DWORD PTR ds:[rsi]
  42cab0:	addr32 jb 0x42cb18
  42cab3:	jae    0x42cb28
  42cab5:	add    BYTE PTR [rsi+0x6f],cl
  42cab8:	and    BYTE PTR [rbp+0x6f],ch
  42cabb:	jb     0x42cb22
  42cabd:	and    BYTE PTR [rdx+0x65],dh
  42cac0:	jae    0x42cb37
  42cac2:	ins    BYTE PTR es:[rdi],dx
  42cac3:	je     0x42cb38
  42cac5:	add    BYTE PTR [rbx+0x61],al
  42cac8:	ins    BYTE PTR es:[rdi],dx
  42cac9:	ins    BYTE PTR es:[rdi],dx
  42caca:	and    BYTE PTR [rdi+0x61],dh
  42cacd:	jae    0x42caef
  42cacf:	movsxd esp,DWORD PTR [rcx+0x6e]
  42cad2:	movsxd esp,DWORD PTR [rbp+0x6c]
  42cad5:	gs add BYTE PTR fs:[rax+0x72],dl
  42cada:	outs   dx,DWORD PTR ds:[rsi]
  42cadb:	movsxd esp,DWORD PTR [rbp+0x64]
  42cade:	jne    0x42cb52
  42cae0:	and    BYTE PTR gs:[rbx+0x61],ah
  42cae4:	ins    BYTE PTR es:[rdi],dx
  42cae5:	ins    BYTE PTR es:[rdi],dx
  42cae6:	and    BYTE PTR [rcx+riz*2+0x62],dh
  42caea:	ins    BYTE PTR es:[rdi],dx
  42caeb:	and    BYTE PTR gs:[rcx+0x73],ch
  42caef:	and    BYTE PTR [rcx+0x6e],ch
  42caf2:	jbe    0x42cb55
  42caf4:	ins    BYTE PTR es:[rdi],dx
  42caf5:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x69767265
  42cafd:	movsxd esp,DWORD PTR [rbp+0x20]
  42cb00:	jo     0x42cb74
  42cb02:	outs   dx,DWORD PTR ds:[rsi]
  42cb03:	jbe    0x42cb6e
  42cb05:	fs gs jb 0x42cb29
  42cb09:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
  42cb10:	ins    BYTE PTR es:[rdi],dx
  42cb11:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x53000000
  42cb19:	gs jb  0x42cb92
  42cb1c:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
  42cb23:	jbe    0x42cb8e
  42cb25:	fs gs jb 0x42cb49
  42cb29:	data16 (bad) 
  42cb2b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42cb33:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42cb3a:	imul   edi,DWORD PTR [rdx+0x65],0x73795300
  42cb41:	je     0x42cba8
  42cb43:	ins    DWORD PTR es:[rdi],dx
  42cb44:	and    BYTE PTR [rbx+0x61],ah
  42cb47:	ins    BYTE PTR es:[rdi],dx
  42cb48:	ins    BYTE PTR es:[rdi],dx
  42cb49:	and    BYTE PTR [rsi+0x61],ah
  42cb4c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65530065
  42cb54:	jb     0x42cbcc
  42cb56:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  42cb5d:	and    BYTE PTR [rsi+0x6f],ah
  42cb60:	jne    0x42cbd0
  42cb62:	add    BYTE PTR fs:[rbx+0x6c],al
  42cb66:	(bad)  
  42cb67:	jae    0x42cbdc
  42cb69:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42cb6d:	and    BYTE PTR gs:[rsi+0x6f],ch
  42cb71:	je     0x42cb93
  42cb73:	outs   dx,WORD PTR ds:[rsi]
  42cb75:	jne    0x42cbe5
  42cb77:	add    BYTE PTR fs:[rcx+riz*2+0x74],al
  42cb7c:	(bad)  
  42cb7d:	(bad)  
  42cb7f:	jae    0x42cbe6
  42cb81:	and    BYTE PTR [rcx+0x75],dh
  42cb84:	gs jb  0x42cc00
  42cb87:	and    BYTE PTR [rdi+0x61],dh
  42cb8a:	jae    0x42cbac
  42cb8c:	jb     0x42cbf3
  42cb8e:	data16 jne 0x42cc04
  42cb91:	gs add BYTE PTR fs:[rax+0x6f],cl
  42cb96:	jae    0x42cc0c
  42cb98:	and    BYTE PTR [rsi+0x6f],ch
  42cb9b:	je     0x42cbbd
  42cb9d:	outs   dx,WORD PTR ds:[rsi]
  42cb9f:	jne    0x42cc0f
  42cba1:	add    BYTE PTR fs:[rax],al
  42cba4:	add    BYTE PTR [rax],al
  42cba6:	add    BYTE PTR [rax],al
  42cba8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42cbaa:	outs   dx,BYTE PTR ds:[rsi]
  42cbab:	(bad)  
  42cbac:	jne    0x42cc22
  42cbae:	push   0x7469726f
  42cbb3:	(bad)  
  42cbb4:	je     0x42cc1f
  42cbb6:	jbe    0x42cc1d
  42cbb8:	and    BYTE PTR [rax+0x6f],ch
  42cbbb:	jae    0x42cc31
  42cbbd:	and    BYTE PTR [rsi+0x6f],ch
  42cbc0:	je     0x42cbe2
  42cbc2:	outs   dx,WORD PTR ds:[rsi]
  42cbc4:	jne    0x42cc34
  42cbc6:	add    BYTE PTR fs:[rsi+0x6f],cl
  42cbca:	outs   dx,BYTE PTR ds:[rsi]
  42cbcb:	jb     0x42cc32
  42cbcd:	movsxd ebp,DWORD PTR [rdi+0x76]
  42cbd0:	gs jb  0x42cc34
  42cbd3:	(bad)  
  42cbd4:	ins    BYTE PTR es:[rdi],dx
  42cbd5:	and    BYTE PTR gs:[rbp+0x72],ah
  42cbd9:	jb     0x42cc4a
  42cbdb:	jb     0x42cbdd
  42cbdd:	add    BYTE PTR [rax],al
  42cbdf:	add    BYTE PTR [rsi+0x61],dl
  42cbe2:	ins    BYTE PTR es:[rdi],dx
  42cbe3:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x2c656d61
  42cbeb:	and    BYTE PTR [rsi+0x6f],ch
  42cbee:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42cbf2:	(bad)  
  42cbf3:	and    BYTE PTR [rdx+0x65],dh
  42cbf6:	movsxd ebp,DWORD PTR [rdi+0x72]
  42cbf9:	and    BYTE PTR fs:[rdi+0x66],ch
  42cbfd:	and    BYTE PTR [rdx+0x65],dh
  42cc00:	jno    0x42cc77
  42cc02:	gs jae 0x42cc79
  42cc05:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  42cc0b:	add    BYTE PTR gs:[rsi+0x6f],cl
  42cc0f:	and    BYTE PTR [rbp+0x65],ch
  42cc12:	jae    0x42cc87
  42cc14:	(bad)  
  42cc15:	and    BYTE PTR gs:[edi+0x66],ch
  42cc1a:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42cc1e:	imul   esi,DWORD PTR [rdx+0x65],0x79742064
  42cc25:	jo     0x42cc8c
  42cc27:	add    BYTE PTR [rcx+0x64],cl
  42cc2a:	outs   dx,BYTE PTR gs:[rsi]
  42cc2c:	je     0x42cc97
  42cc2e:	imul   sp,WORD PTR [rbp+0x72],0x7220
  42cc34:	gs ins DWORD PTR es:[rdi],dx
  42cc36:	outs   dx,DWORD PTR ds:[rsi]
  42cc37:	jbe    0x42cc9e
  42cc39:	add    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
  42cc3e:	imul   esp,DWORD PTR [rax],0x68
  42cc41:	(bad)  
  42cc42:	jae    0x42cc64
  42cc44:	(bad)  
  42cc45:	gs outs dx,BYTE PTR gs:[rsi]
  42cc48:	and    BYTE PTR [rbx+0x65],dh
  42cc4b:	jbe    0x42ccb2
  42cc4d:	jb     0x42ccb4
  42cc4f:	add    BYTE PTR fs:[rbp+0x75],cl
  42cc53:	ins    BYTE PTR es:[rdi],dx
  42cc54:	je     0x42ccbf
  42cc56:	push   0x6120706f
  42cc5b:	je     0x42ccd1
  42cc5d:	gs ins DWORD PTR es:[rdi],dx
  42cc5f:	jo     0x42ccd5
  42cc61:	gs add BYTE PTR fs:[rdx+0x61],al
  42cc66:	and    BYTE PTR fs:[rbp+0x65],ch
  42cc6a:	jae    0x42ccdf
  42cc6c:	(bad)  
  42cc6d:	add    BYTE PTR gs:[ebx+0x74],dl
  42cc72:	(bad)  
  42cc73:	je     0x42ccda
  42cc75:	and    BYTE PTR [rsi+0x6f],ch
  42cc78:	je     0x42cc9a
  42cc7a:	jb     0x42cce1
  42cc7c:	movsxd ebp,DWORD PTR [rdi+0x76]
  42cc7f:	gs jb  0x42cce3
  42cc82:	(bad)  
  42cc83:	ins    BYTE PTR es:[rdi],dx
  42cc84:	add    BYTE PTR gs:[rax],al
	...
  42cc8f:	add    al,al
  42cc91:	(bad)  
  42cc92:	rex.XB add BYTE PTR [r8],al
  42cc95:	add    BYTE PTR [rax],al
  42cc97:	add    al,al
  42cc99:	pop    rsp
  42cc9a:	rex.XB add BYTE PTR [r8],al
  42cc9d:	add    BYTE PTR [rax],al
  42cc9f:	add    BYTE PTR [rax],ah
  42cca1:	mov    bh,0x41
	...
  42ccaf:	add    BYTE PTR [rcx+0x72],al
  42ccb2:	addr32 jne 0x42cd22
  42ccb5:	outs   dx,BYTE PTR gs:[rsi]
  42ccb7:	je     0x42ccd9
  42ccb9:	outs   dx,DWORD PTR fs:[rsi]
  42ccbb:	ins    DWORD PTR es:[rdi],dx
  42ccbc:	(bad)  
  42ccbd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  42ccc4:	jb     0x42cce6
  42ccc6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  42ccca:	rex.B
  42cccb:	rex.WB
  42cccc:	rex.WRX sub QWORD PTR [rax],r8
  42cccf:	rex.B jb 0x42cd39
  42ccd2:	jne    0x42cd41
  42ccd4:	outs   dx,BYTE PTR gs:[rsi]
  42ccd6:	je     0x42ccf8
  42ccd8:	jae    0x42cd43
  42ccda:	outs   dx,BYTE PTR ds:[rsi]
  42ccdb:	addr32 jne 0x42cd4a
  42ccde:	(bad)  
  42ccdf:	jb     0x42cd4a
  42cce1:	je     0x42cd5c
  42cce3:	and    BYTE PTR [rax],ch
  42cce5:	push   rbx
  42cce6:	rex.WB
  42cce7:	rex.RXB
  42cce8:	rex.WRX sub QWORD PTR [rax],r8
  42cceb:	add    BYTE PTR [rax],al
  42cced:	add    BYTE PTR [rax],al
  42ccef:	add    BYTE PTR [rdi+0x76],cl
  42ccf2:	gs jb  0x42cd5b
  42ccf5:	ins    BYTE PTR es:[rdi],dx
  42ccf6:	outs   dx,DWORD PTR ds:[rsi]
  42ccf7:	ja     0x42cd19
  42ccf9:	jb     0x42cd5c
  42ccfb:	outs   dx,BYTE PTR ds:[rsi]
  42ccfc:	and    BYTE PTR gs:[ebp+0x72],ah
  42cd01:	jb     0x42cd72
  42cd03:	jb     0x42cd25
  42cd05:	sub    BYTE PTR [rdi+0x56],cl
  42cd08:	rex.RB push r10
  42cd0a:	rex.RX
  42cd0b:	rex.WR
  42cd0c:	rex.WRXB push r15
  42cd0e:	sub    DWORD PTR [rax],eax
  42cd10:	push   rax
  42cd11:	(bad)  
  42cd12:	jb     0x42cd88
  42cd14:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  42cd1b:	jae    0x42cd3d
  42cd1d:	outs   dx,DWORD PTR ds:[rsi]
  42cd1e:	data16 and BYTE PTR [rbx+0x69],dh
  42cd22:	outs   dx,BYTE PTR ds:[esi]
  42cd24:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42cd2b:	and    BYTE PTR gs:[rax],ch
  42cd2e:	push   rax
  42cd2f:	rex.WR
  42cd30:	rex.WRXB push r11
  42cd32:	push   rbx
  42cd33:	sub    DWORD PTR [rax],eax
  42cd35:	add    BYTE PTR [rax],al
  42cd37:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42cd3b:	(bad)  
  42cd3c:	ins    BYTE PTR es:[rdi],dx
  42cd3d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  42cd41:	jae    0x42cd63
  42cd43:	outs   dx,DWORD PTR ds:[rsi]
  42cd44:	data16 and BYTE PTR [rbx+0x69],dh
  42cd48:	outs   dx,BYTE PTR ds:[esi]
  42cd4a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42cd51:	and    BYTE PTR gs:[rax],ch
  42cd54:	push   rsp
  42cd55:	rex.WR
  42cd56:	rex.WRXB push r11
  42cd58:	push   rbx
  42cd59:	sub    DWORD PTR [rax],eax
  42cd5b:	add    BYTE PTR [rax],al
  42cd5d:	add    BYTE PTR [rax],al
  42cd5f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42cd63:	and    BYTE PTR [rdx+0x65],dh
  42cd66:	jae    0x42cddd
  42cd68:	ins    BYTE PTR es:[rdi],dx
  42cd69:	je     0x42cd8b
  42cd6b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  42cd72:	jae    0x42cde1
  42cd74:	(bad)  
  42cd75:	ins    BYTE PTR es:[rdi],dx
  42cd76:	ins    BYTE PTR es:[rdi],dx
  42cd77:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42cd7b:	(bad)  
  42cd7c:	and    BYTE PTR gs:[rdx+0x65],dh
  42cd80:	jo     0x42cdf4
  42cd82:	gs jae 0x42cdea
  42cd85:	outs   dx,BYTE PTR ds:[rsi]
  42cd86:	je     0x42cded
  42cd88:	and    BYTE PTR fs:[rax],ch
  42cd8b:	push   rbp
  42cd8c:	rex.WRX
  42cd8d:	rex.R
  42cd8e:	rex.RB push r10
  42cd90:	rex.RX
  42cd91:	rex.WR
  42cd92:	rex.WRXB push r15
  42cd94:	sub    DWORD PTR [rax],eax
  42cd96:	push   rbp
  42cd97:	outs   dx,BYTE PTR ds:[rsi]
  42cd98:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42cd9c:	outs   dx,BYTE PTR ds:[rsi]
  42cd9d:	and    BYTE PTR [rbp+0x72],ah
  42cda0:	jb     0x42ce11
  42cda2:	jb     0x42cda4
  42cda4:	add    BYTE PTR [rax],al
  42cda6:	add    BYTE PTR [rax],al
  42cda8:	pop    rdi
  42cda9:	ins    DWORD PTR es:[rdi],dx
  42cdaa:	(bad)  
  42cdab:	je     0x42ce15
  42cdad:	gs jb  0x42ce22
  42cdb0:	sub    BYTE PTR [rcx],ch
  42cdb2:	cmp    ah,BYTE PTR [rax]
  42cdb4:	and    eax,0x6e692073
  42cdb9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6767f632
  42cdbf:	sub    al,0x20
  42cdc1:	and    eax,0x20202967
  42cdc6:	sub    BYTE PTR [rdx+0x65],dh
  42cdc9:	je     0x42ce41
  42cdcb:	(bad)  
  42cdcc:	ins    BYTE PTR es:[rdi],dx
  42cdcd:	cmp    eax,0xa296725
  42cdd2:	add    BYTE PTR [rax],al
  42cdd4:	sbb    al,0xeb
  42cdd6:	(bad)  
  42cdd7:	call   FWORD PTR [rbp-0x16]
  42cdda:	(bad)  
  42cddb:	dec    esp
  42cddd:	(bad)  
  42cdde:	(bad)  
  42cddf:	(bad)  
  42cde0:	fsub   st(2),st
  42cde2:	(bad)  
  42cde3:	(bad)  
  42cde4:	in     al,dx
  42cde5:	(bad)  
  42cde6:	(bad)  
  42cde7:	(bad)  
  42cde8:	cld    
  42cde9:	(bad)  
  42cdea:	(bad)  
  42cdeb:	dec    DWORD PTR [rbx+rbp*8]
  42cdee:	(bad)  
  42cdef:	dec    DWORD PTR [rbp+0x69]
  42cdf2:	outs   dx,BYTE PTR ds:[rsi]
  42cdf3:	addr32 ja 0x42ce23
  42cdf6:	ja     0x42ce2e
  42cdf8:	xor    al,0x20
  42cdfa:	jb     0x42ce71
  42cdfc:	outs   dx,BYTE PTR ds:[rsi]
  42cdfd:	je     0x42ce68
  42cdff:	ins    DWORD PTR es:[rdi],dx
  42ce00:	and    BYTE PTR gs:[rsi+0x61],ah
  42ce04:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  42ce0c:	add    BYTE PTR [rax],al
  42ce0e:	add    BYTE PTR [rax],al
  42ce10:	rex.B
  42ce11:	fs fs jb 0x42ce7a
  42ce15:	jae    0x42ce8a
  42ce17:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aaee8d
  42ce1d:	jae    0x42ce3f
  42ce1f:	outs   dx,BYTE PTR ds:[rsi]
  42ce20:	outs   dx,DWORD PTR ds:[rsi]
  42ce21:	and    BYTE PTR [rcx+0x6d],ch
  42ce24:	(bad)  
  42ce25:	addr32 gs sub eax,0x74636573
  42ce2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  42ce33:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42ce3a:	jne    0x42cea1
  42ce3c:	jb     0x42ceb7
  42ce3e:	and    BYTE PTR [rsi+0x61],ah
  42ce41:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  42ce49:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a4eeb3
  42ce4f:	je     0x42ceb6
  42ce51:	jae    0x42ce73
  42ce53:	(bad)  
  42ce54:	je     0x42ce76
  42ce56:	(bad)  
  42ce57:	fs fs jb 0x42cec0
  42ce5b:	jae    0x42ced0
  42ce5d:	and    BYTE PTR [rip+0x70],ah        # 0x42ced3
  42ce63:	add    BYTE PTR [rax],al
  42ce65:	add    BYTE PTR [rax],al
  42ce67:	add    BYTE PTR [rax],ah
  42ce69:	and    BYTE PTR [rsi+0x69],dl
  42ce6c:	jb     0x42cee2
  42ce6e:	jne    0x42ced1
  42ce70:	ins    BYTE PTR es:[rdi],dx
  42ce71:	push   rax
  42ce72:	jb     0x42cee3
  42ce74:	je     0x42cedb
  42ce76:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  42ce7a:	(bad)  
  42ce7b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  42ce83:	push   0x646f6320
  42ce88:	and    BYTE PTR gs:[rax],dh
  42ce8b:	js     0x42ceb2
  42ce8d:	js     0x42ce8f
  42ce8f:	add    BYTE PTR [rax],ah
  42ce91:	and    BYTE PTR [rbp+0x6e],dl
  42ce94:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42ce98:	outs   dx,BYTE PTR ds:[rsi]
  42ce99:	and    BYTE PTR [rax+0x73],dh
  42ce9c:	gs jne 0x42cf03
  42ce9f:	outs   dx,DWORD PTR ds:[rsi]
  42cea0:	and    BYTE PTR [rdx+0x65],dh
  42cea3:	ins    BYTE PTR es:[rdi],dx
  42cea4:	outs   dx,DWORD PTR ds:[rsi]
  42cea5:	movsxd esp,DWORD PTR [rcx+0x74]
  42cea8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42ceaf:	je     0x42cf20
  42ceb1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42ceb4:	and    BYTE PTR [rsi+0x65],dh
  42ceb7:	jb     0x42cf2c
  42ceb9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42cec0:	or     al,BYTE PTR [rax]
  42cec2:	add    BYTE PTR [rax],al
  42cec4:	add    BYTE PTR [rax],al
  42cec6:	add    BYTE PTR [rax],al
  42cec8:	and    BYTE PTR [rax],ah
  42ceca:	push   rbp
  42cecb:	outs   dx,BYTE PTR ds:[rsi]
  42cecc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42ced0:	outs   dx,BYTE PTR ds:[rsi]
  42ced1:	and    BYTE PTR [rax+0x73],dh
  42ced4:	gs jne 0x42cf3b
  42ced7:	outs   dx,DWORD PTR ds:[rsi]
  42ced8:	and    BYTE PTR [rdx+0x65],dh
  42cedb:	ins    BYTE PTR es:[rdi],dx
  42cedc:	outs   dx,DWORD PTR ds:[rsi]
  42cedd:	movsxd esp,DWORD PTR [rcx+0x74]
  42cee0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  42cee7:	and    BYTE PTR [rbx+0x69],dh
  42ceea:	jp     0x42cf51
  42ceec:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4cfd56
	...
  42cefe:	add    BYTE PTR [rax],al
  42cf00:	cs jo  0x42cf67
  42cf03:	(bad)  
  42cf04:	je     0x42cf67
	...
  42cf0e:	add    BYTE PTR [rax],al
  42cf10:	cmp    al,0x0
  42cf12:	jne    0x42cf14
  42cf14:	outs   dx,BYTE PTR ds:[rsi]
  42cf15:	add    BYTE PTR [rbx+0x0],ch
  42cf18:	outs   dx,BYTE PTR ds:[rsi]
  42cf19:	add    BYTE PTR [rdi+0x0],ch
  42cf1c:	ja     0x42cf1e
  42cf1e:	outs   dx,BYTE PTR ds:[rsi]
  42cf1f:	add    BYTE PTR [rsi],bh
  42cf21:	add    BYTE PTR [rax],al
  42cf23:	add    BYTE PTR [rdi],bh
  42cf25:	add    BYTE PTR [rax],al
  42cf27:	add    BYTE PTR [rcx+0x0],al
  42cf2a:	jae    0x42cf2c
  42cf2c:	jae    0x42cf2e
  42cf2e:	add    BYTE PTR gs:[rdx+0x0],dh
  42cf32:	je     0x42cf34
  42cf34:	imul   eax,DWORD PTR [rax],0x6e006f
  42cf3a:	and    BYTE PTR [rax],al
  42cf3c:	data16 add BYTE PTR [rcx+0x0],ah
  42cf40:	imul   eax,DWORD PTR [rax],0x65006c
  42cf46:	add    BYTE PTR fs:[rcx],ah
  42cf49:	add    BYTE PTR [rdx],cl
  42cf4b:	add    BYTE PTR [rdx],cl
  42cf4d:	add    BYTE PTR [rax+0x0],dl
  42cf50:	jb     0x42cf52
  42cf52:	outs   dx,DWORD PTR ds:[rsi]
  42cf53:	add    BYTE PTR [rdi+0x0],ah
  42cf56:	jb     0x42cf58
  42cf58:	(bad)  
  42cf59:	add    BYTE PTR [rbp+0x0],ch
  42cf5c:	cmp    al,BYTE PTR [rax]
  42cf5e:	and    BYTE PTR [rax],al
  42cf60:	and    eax,0x73007700
  42cf65:	add    BYTE PTR [rdx],cl
  42cf67:	add    BYTE PTR [rsi+0x0],al
  42cf6a:	imul   eax,DWORD PTR [rax],0x65006c
  42cf70:	cmp    al,BYTE PTR [rax]
  42cf72:	and    BYTE PTR [rax],al
  42cf74:	and    eax,0x73007700
  42cf79:	add    BYTE PTR [rax+rax*1],ch
  42cf7c:	and    BYTE PTR [rax],al
  42cf7e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  42cf82:	outs   dx,BYTE PTR ds:[rsi]
  42cf83:	add    BYTE PTR [rbp+0x0],ah
  42cf86:	and    BYTE PTR [rax],al
  42cf88:	and    eax,0xa007500
  42cf8d:	add    BYTE PTR [rdx],cl
  42cf8f:	add    BYTE PTR [rbp+0x0],al
  42cf92:	js     0x42cf94
  42cf94:	jo     0x42cf96
  42cf96:	jb     0x42cf98
  42cf98:	add    BYTE PTR gs:[rbx+0x0],dh
  42cf9c:	jae    0x42cf9e
  42cf9e:	imul   eax,DWORD PTR [rax],0x6e006f
  42cfa4:	cmp    al,BYTE PTR [rax]
  42cfa6:	and    BYTE PTR [rax],al
  42cfa8:	and    eax,0x73007700
  42cfad:	add    BYTE PTR [rax],al
  42cfaf:	add    BYTE PTR [rip+0x73007700],ah        # 0x734346b5
  42cfb5:	add    BYTE PTR [rdx],cl
	...
  42cfbf:	add    BYTE PTR [rbp+0x0],cl
  42cfc2:	imul   eax,DWORD PTR [rax],0x47006e
  42cfc8:	push   rdi
  42cfc9:	add    BYTE PTR [rax],ah
  42cfcb:	add    BYTE PTR [rdx+0x0],dl
  42cfce:	jne    0x42cfd0
  42cfd0:	outs   dx,BYTE PTR ds:[rsi]
  42cfd1:	add    BYTE PTR [rax+rax*1+0x69],dh
  42cfd5:	add    BYTE PTR [rbp+0x0],ch
  42cfd8:	add    BYTE PTR gs:[rax],ah
  42cfdb:	add    BYTE PTR [rcx+0x0],al
  42cfde:	jae    0x42cfe0
  42cfe0:	jae    0x42cfe2
  42cfe2:	add    BYTE PTR gs:[rdx+0x0],dh
  42cfe6:	je     0x42cfe8
  42cfe8:	imul   eax,DWORD PTR [rax],0x6e006f
  42cfee:	add    BYTE PTR [rax],al
  42cff0:	rex.WRX (bad) 
  42cff2:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  42cff6:	data16 add BYTE PTR [rax],ch
  42cff9:	add    BYTE PTR [rsi+0x0],ch
  42cffc:	jne    0x42cffe
  42cffe:	ins    BYTE PTR es:[rdi],dx
  42cfff:	add    BYTE PTR [rax+rax*1+0x29],ch
  42d003:	add    BYTE PTR [rax],al
  42d005:	add    BYTE PTR [rax],ch
  42d007:	outs   dx,BYTE PTR ds:[rsi]
  42d008:	jne    0x42d076
  42d00a:	ins    BYTE PTR es:[rdi],dx
  42d00b:	sub    DWORD PTR [rax],eax
  42d00d:	push   rax
  42d00e:	push   rdx
  42d00f:	rex.WB
  42d010:	rex.WRX push rsp
  42d012:	rex.RX pop rdi
  42d014:	rex.RB pop r8
  42d016:	push   rax
  42d017:	rex.WRXB
  42d018:	rex.WRX
  42d019:	rex.RB
  42d01a:	rex.WRX push rsp
  42d01c:	pop    rdi
  42d01d:	rex.R
  42d01e:	rex.WB
  42d01f:	rex.RXB
  42d020:	rex.WB push r12
  42d022:	push   rbx
  42d023:	add    ah,cl
  42d025:	and    bh,bh
  42d027:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d02b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d02f:	jmp    FWORD PTR [rdx+riz*1+0x234cffff]
  42d036:	(bad)  
  42d037:	(bad)  
  42d038:	(bad)  
  42d039:	and    bh,bh
  42d03b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d03f:	(bad)  
  42d040:	in     al,dx
  42d041:	and    bh,bh
  42d043:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d047:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d04b:	dec    DWORD PTR [rbx+riz*1]
  42d04e:	(bad)  
  42d04f:	dec    DWORD PTR [rdx+riz*1+0x234cffff]
  42d056:	(bad)  
  42d057:	jmp    FWORD PTR [rdx+riz*1-0x1]
  42d05b:	dec    DWORD PTR [rdx+riz*1-0x1]
  42d05f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d063:	jmp    FWORD PTR [rdx+riz*1]
  42d066:	(bad)  
  42d067:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d06b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d06f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d073:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d077:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d07b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d07f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d083:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d087:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d08b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d08f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d093:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d097:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d09b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d09f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0a3:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0a7:	(bad)  
  42d0a8:	(bad)  
  42d0a9:	and    edi,edi
  42d0ab:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0af:	dec    esp
  42d0b1:	and    edi,edi
  42d0b3:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0b7:	call   FWORD PTR [rbp+0x6fffff21]
  42d0bd:	and    edi,edi
  42d0bf:	inc    DWORD PTR [rcx+0x21]
  42d0c2:	(bad)  
  42d0c3:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0c7:	call   FWORD PTR [rcx+riz*1]
  42d0ca:	(bad)  
  42d0cb:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0cf:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0d3:	(bad)  
  42d0d4:	cld    
  42d0d5:	and    bh,bh
  42d0d7:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0db:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0df:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0e3:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0e7:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0eb:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0ef:	dec    DWORD PTR [rdi+0x4cffff23]
  42d0f5:	and    edi,edi
  42d0f7:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0fb:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d0ff:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d103:	dec    esp
  42d105:	(bad)  
  42d106:	(bad)  
  42d107:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d10b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d10f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d113:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d117:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d11b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d11f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d123:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d127:	call   FWORD PTR [rax+riz*1-0x1]
  42d12b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d12f:	call   FWORD PTR [rip+0xffffffff9cffff20]        # 0xffffffff9d42d055
  42d135:	and    bh,bh
  42d137:	dec    DWORD PTR [rdi+rbx*1+0x1f4cffff]
  42d13e:	(bad)  
  42d13f:	(bad)  
  42d140:	fistp  WORD PTR [rsi]
  42d142:	(bad)  
  42d143:	call   FWORD PTR [rdi+rbx*1]
  42d146:	(bad)  
  42d147:	call   FWORD PTR [rax+riz*1+0x1ebcffff]
  42d14e:	(bad)  
  42d14f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d153:	dec    DWORD PTR [rsi+rbx*1+0x1e5cffff]
  42d15a:	(bad)  
  42d15b:	call   FWORD PTR [rsi+rbx*1]
  42d15e:	(bad)  
  42d15f:	dec    esp
  42d161:	(bad)  
  42d162:	(bad)  
  42d163:	(bad)  
  42d164:	fcomp  QWORD PTR [rip+0x234cffff]        # 0x238fd169
  42d16a:	(bad)  
  42d16b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d16f:	call   QWORD PTR [rcx-0x430000e3]
  42d175:	(bad)  
  42d176:	(bad)  
  42d177:	dec    esp
  42d179:	(bad)  
  42d17a:	(bad)  
  42d17b:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d17f:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d183:	dec    esp
  42d185:	(bad)  
  42d186:	(bad)  
  42d187:	dec    DWORD PTR [rbx+riz*1-0x1]
  42d18b:	(bad)  
  42d18c:	mov    esp,0x49ffff1e
  42d191:	outs   dx,BYTE PTR ds:[rsi]
  42d192:	imul   bp,WORD PTR [rsi+0x69],0x7974
  42d198:	add    BYTE PTR [rsi+0x61],cl
  42d19b:	rex.WRX add BYTE PTR [rax],r14b
  42d19e:	add    BYTE PTR [rax],al
  42d1a0:	(bad)  
  42d1a1:	(bad)  
  42d1a2:	(bad)  
  42d1a3:	push   QWORD PTR [rdi+riz*1]
  42d1a6:	(bad)  
  42d1a7:	push   QWORD PTR [rdi+riz*1]
  42d1aa:	(bad)  
  42d1ab:	push   QWORD PTR [rax+0x28]
  42d1ae:	(bad)  
  42d1af:	inc    DWORD PTR [rbx+0x28]
  42d1b2:	(bad)  
  42d1b3:	inc    DWORD PTR [rax]
	...
  42d1bd:	add    al,bh
  42d1bf:	(bad)  
  42d1c0:	(bad)  
  42d1c1:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42d1c3:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  42d1c9:	enter  0x8b60,0x28
  42d1cd:	mov    al,dh
  42d1cf:	(bad)  
  42d1d0:	sti    
  42d1d1:	jns    0x42d172
  42d1d3:	push   rax
  42d1d4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  42d1d8:	add    al,0xfa
  42d1da:	jge    0x42d179
  42d1dc:	(bad)  
  42d1dd:	sub    eax,0x5a323c94
  42d1e2:	rex.RXB push r13
  42d1e4:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  42d1e8:	add    BYTE PTR [rax],al
  42d1ea:	add    BYTE PTR [rax],al
  42d1ec:	add    BYTE PTR [rax],al
  42d1ee:	lock (bad) 
  42d1f0:	add    BYTE PTR [rax],al
  42d1f2:	add    BYTE PTR [rax],al
  42d1f4:	add    BYTE PTR [rax],al
  42d1f6:	and    al,0x40
  42d1f8:	add    BYTE PTR [rax],al
  42d1fa:	add    BYTE PTR [rax],al
  42d1fc:	add    BYTE PTR [rax],al
  42d1fe:	or     BYTE PTR [rax+0x0],al
  42d201:	add    BYTE PTR [rax],al
  42d203:	add    BYTE PTR [rax],al
  42d205:	add    BYTE PTR [rax+rax*2],bl
  42d208:	add    BYTE PTR [rax],al
  42d20a:	add    BYTE PTR [rax],al
  42d20c:	add    BYTE PTR [rax],al
  42d20e:	adc    al,0x40
  42d210:	add    BYTE PTR [rax],al
  42d212:	add    BYTE PTR [rax],al
  42d214:	add    BYTE PTR [rax],al
  42d216:	add    BYTE PTR [rax+0x0],al
	...
  42d224:	add    BYTE PTR [rax],al
  42d226:	loopne 0x42d267
	...
  42d240:	add    eax,0x19000000
  42d245:	add    BYTE PTR [rax],al
  42d247:	add    BYTE PTR [rbp+0x0],bh
	...
  42d286:	lock (bad) 
  42d288:	add    BYTE PTR [rax],al
  42d28a:	add    BYTE PTR [rax],al
  42d28c:	add    BYTE PTR [rax],al
  42d28e:	and    al,0x40
  42d290:	add    BYTE PTR [rax],al
  42d292:	add    BYTE PTR [rax],al
  42d294:	add    BYTE PTR [rax],al
  42d296:	pop    rcx
  42d297:	add    BYTE PTR [rax],al
  42d29a:	add    BYTE PTR [rax],al
  42d29c:	add    BYTE PTR [rax-0x71],al
  42d29f:	add    BYTE PTR [rax],al
  42d2a2:	add    BYTE PTR [rax],al
  42d2a4:	add    BYTE PTR [rax+0x40c3],cl
  42d2aa:	add    BYTE PTR [rax],al
  42d2ac:	add    BYTE PTR [rdx-0x8],ch
  42d2af:	add    BYTE PTR [rax],al
  42d2b2:	add    BYTE PTR [rax],al
  42d2b4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  42d2bc:	rcl    BYTE PTR [rdx],1
  42d2be:	movsxd eax,DWORD PTR [rcx+0x0]
  42d2c1:	add    BYTE PTR [rax],al
  42d2c3:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  42d2ca:	add    BYTE PTR [rax],al
  42d2cc:	gs int 0xcd
  42d2cf:	add    BYTE PTR [r8],al
  42d2d2:	add    BYTE PTR [rax],ah
  42d2d4:	pop    rdi
  42d2d5:	movabs al,ds:0x4876e80000004202
  42d2de:	(bad)  
  42d2df:	rex.X add BYTE PTR [rax],al
  42d2e2:	add    BYTE PTR [rdx+0x426d1a94],ah
  42d2e8:	add    BYTE PTR [rax],al
  42d2ea:	rex in eax,0x9c
  42d2ed:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  42d2f3:	(bad)  
  42d2f4:	(bad)  
  42d2f5:	mov    esp,0x42d6
  42d2fa:	xor    al,0x26
  42d2fc:	cmc    
  42d2fd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  42d301:	and    al,0x37
  42d304:	jns    0x42d2c9
  42d306:	rex.B
  42d307:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  42d30e:	jbe    0x42d353
  42d310:	add    al,cl
  42d312:	rex.WRX
  42d313:	ins    DWORD PTR es:[edi],dx
  42d315:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  42d31c:	in     al,0x58
  42d31e:	loope  0x42d363
  42d320:	rex mov WORD PTR [rbp+0x15af1d78],?
  42d327:	rex.R push rax
  42d329:	out    dx,eax
  42d32a:	loop   0x42d302
  42d32c:	in     al,0x1a
  42d32e:	rex.WXB
  42d32f:	rex.R xchg edx,eax
  42d331:	(bad)  
  42d332:	rex.WRB (bad) 
  42d334:	iret   
  42d335:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  42d33b:	add    BYTE PTR [rax],al
  42d33d:	add    BYTE PTR [rax],al
  42d33f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  42d346:	pushf  
  42d347:	cmp    al,0x33
  42d349:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42d34a:	test   al,0xd5
  42d34c:	and    esi,esi
  42d34e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd87c7fc
  42d355:	shld   DWORD PTR [rdx],esi,cl
  42d358:	popf   
  42d359:	xchg   edi,eax
  42d35a:	mov    edi,cs
  42d35c:	or     BYTE PTR [rdx+0x6f43255b],bh
  42d362:	lods   al,BYTE PTR ds:[rsi]
  42d363:	sub    BYTE PTR fs:[rsi],al
  42d366:	enter  0xa,0x0
	...
  42d37e:	add    BYTE PTR [rax],al
  42d380:	add    BYTE PTR [rax-0x3c86c820],al
  42d386:	rex.B
  42d387:	rex.XB (bad) 
  42d389:	outs   dx,BYTE PTR ds:[rsi]
  42d38a:	add    eax,0x93b8b5b5
  42d38f:	rex.RX cmc 
  42d391:	stc    
  42d392:	(bad)  
  42d393:	jmp    0x4d7b229b
  42d398:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778bccce
  42d39e:	(bad)  
  42d39f:	pop    rdx
  42d3a0:	cmp    al,0xbf
  42d3a2:	jae    0x42d423
  42d3a4:	fisttp QWORD PTR [rdi+0x15]
  42d3a7:	jne    0x42d3a9
	...
  42d3bd:	add    BYTE PTR [rax],al
  42d3bf:	add    BYTE PTR [rbp+0x0],ch
  42d3c2:	jae    0x42d3c4
  42d3c4:	jbe    0x42d3c6
  42d3c6:	movsxd eax,DWORD PTR [rax]
  42d3c8:	jb     0x42d3ca
  42d3ca:	je     0x42d3cc
  42d3cc:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  42d3d1:	add    BYTE PTR [rax+rax*1+0x0],ch
  42d3d5:	add    BYTE PTR [rdi+0x73],bl
  42d3d8:	gs je  0x42d43a
  42d3db:	outs   dx,DWORD PTR ds:[rsi]
  42d3dc:	jne    0x42d452
  42d3de:	jo     0x42d455
  42d3e0:	je     0x42d441
  42d3e2:	outs   dx,WORD PTR ds:[rsi]
  42d3e4:	jb     0x42d453
  42d3e6:	(bad)  
  42d3e7:	je     0x42d3e9
  42d3e9:	pop    rdi
  42d3ea:	addr32 gs je 0x42d44d
  42d3ee:	outs   dx,DWORD PTR ds:[rsi]
  42d3ef:	jne    0x42d465
  42d3f1:	jo     0x42d468
  42d3f3:	je     0x42d454
  42d3f5:	outs   dx,WORD PTR ds:[rsi]
  42d3f7:	jb     0x42d466
  42d3f9:	(bad)  
  42d3fa:	je     0x42d3fc
  42d3fc:	add    BYTE PTR [rax],al
  42d3fe:	add    BYTE PTR [rax],al
  42d400:	adc    BYTE PTR [rbx+0x1],bh
	...
  42d40e:	add    BYTE PTR [rax],al
  42d410:	sar    BYTE PTR [rip+0x42],1        # 0x42d458
	...
  42d41e:	add    BYTE PTR [rax],al
  42d420:	loopne 0x42d45f
  42d422:	rex.X add BYTE PTR [rax],al
	...
  42d42d:	add    BYTE PTR [rax],al
  42d42f:	add    al,al
  42d431:	(bad)  
  42d432:	rex.X add BYTE PTR [rax],al
	...
  42d43d:	add    BYTE PTR [rax],al
  42d43f:	add    BYTE PTR [rax+riz*8+0x42],dl
	...
  42d44f:	add    BYTE PTR [rax],dh
  42d451:	loopne 0x42d495
	...
  42d45f:	add    BYTE PTR [rax+0x42cc],ah
	...
  42d471:	add    BYTE PTR [rax+0x0],al
	...
  42d480:	je     0x42d411
  42d482:	rex.XB add BYTE PTR [r8],al
	...
  42d48d:	add    BYTE PTR [rax],al
  42d48f:	add    BYTE PTR [rdi+rcx*4+0x43],cl
	...
  42d49e:	add    BYTE PTR [rax],al
  42d4a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42d4a1:	pop    QWORD PTR [rbx+0x0]
	...
  42d4b0:	in     al,dx
  42d4b1:	pop    QWORD PTR [rbx+0x0]
	...
  42d4c0:	xor    al,0x90
  42d4c2:	rex.XB add BYTE PTR [r8],al
	...
  42d4d1:	movsxd eax,DWORD PTR [rbx+0x0]
	...
  42d4e0:	or     BYTE PTR [rcx+0x43],dh
	...
  42d4ef:	add    BYTE PTR [rax],al
  42d4f1:	jno    0x42d536
	...
  42d4ff:	add    al,dh
  42d501:	jo     0x42d546
	...
  42d50f:	add    al,bh
  42d511:	jo     0x42d556
	...
  42d51f:	add    BYTE PTR [rax+0x42d2],al
	...
  42d531:	rol    BYTE PTR [rbx+0x0],0x0
	...
  42d53d:	add    BYTE PTR [rax],al
  42d53f:	add    BYTE PTR [rax],dl
  42d541:	rol    BYTE PTR [rbx+0x0],0x0
	...
  42d54d:	add    BYTE PTR [rax],al
  42d54f:	add    BYTE PTR [rax],bl
  42d551:	rol    BYTE PTR [rbx+0x0],0x0
	...
  42d55d:	add    BYTE PTR [rax],al
  42d55f:	add    BYTE PTR [rax],dh
  42d561:	rol    BYTE PTR [rbx+0x0],0x0
	...
  42d56d:	add    BYTE PTR [rax],al
  42d56f:	add    BYTE PTR [rax+0x435c],dl
	...
  42d57d:	add    BYTE PTR [rax],al
  42d57f:	add    al,dl
  42d581:	(bad)  
	...
  42d58f:	add    BYTE PTR [rax+0x41c0],dh
	...
  42d5a1:	mov    eax,0x41
	...
  42d5ae:	add    BYTE PTR [rax],al
  42d5b0:	and    BYTE PTR [rdx+0x43],0x0
	...
  42d5c0:	shl    BYTE PTR [rax+0x43],0x0
	...
  42d5d0:	cmp    BYTE PTR [rcx],dh
  42d5d2:	rex.X add BYTE PTR [rax],al
	...
  42d5dd:	add    BYTE PTR [rax],al
  42d5df:	add    BYTE PTR [rax+0x31],al
  42d5e2:	rex.X add BYTE PTR [rax],al
	...
  42d5ed:	add    BYTE PTR [rax],al
  42d5ef:	add    BYTE PTR [rbx+rcx*4+0x43],dh
	...
  42d5ff:	add    ah,bh
  42d601:	mov    eax,DWORD PTR [rbx+0x0]
	...
  42d610:	mov    al,0x62
  42d612:	rex.XB add BYTE PTR [r8],al
	...
  42d61d:	add    BYTE PTR [rax],al
  42d61f:	add    BYTE PTR [rax+0x435c],ah
	...
  42d62d:	add    BYTE PTR [rax],al
  42d62f:	add    BYTE PTR [rax+0x4362],bl
	...
  42d63d:	add    BYTE PTR [rax],al
  42d63f:	add    BYTE PTR [rdx+riz*2+0x43],dl
	...
  42d64e:	add    BYTE PTR [rax],al
  42d650:	nop
  42d651:	(bad)  
	...
  42d65f:	add    al,cl
  42d661:	rex.WXB
  42d662:	rex.XB add BYTE PTR [r8],al
	...
  42d66d:	add    BYTE PTR [rax],al
  42d66f:	add    BYTE PTR [rax+0x4332],cl
	...
  42d67d:	add    BYTE PTR [rax],al
  42d67f:	add    BYTE PTR [rdx+rsi*1+0x43],al
	...
  42d68e:	add    BYTE PTR [rax],al
  42d690:	xor    BYTE PTR [rdx],0x43
	...
  42d69f:	add    BYTE PTR [rdx+rsi*1+0x43],cl
	...
  42d6ae:	add    BYTE PTR [rax],al
  42d6b0:	xor    BYTE PTR [rax],dh
  42d6b2:	rex.XB add BYTE PTR [r8],al
	...
  42d6bd:	add    BYTE PTR [rax],al
  42d6bf:	add    al,dl
  42d6c1:	jo     0x42d706
	...
  42d6cf:	add    BYTE PTR [rdi+0x43],al
  42d6d2:	rex.XB cmp spl,BYTE PTR [r8]
  42d6d5:	sub    BYTE PTR [rdi+0x4e],al
  42d6d8:	push   rbp
  42d6d9:	sub    DWORD PTR [rax],esp
  42d6db:	xor    al,0x2e
  42d6dd:	cmp    DWORD PTR [rsi],ebp
  42d6df:	xor    al,0x0
	...
  42d6ed:	add    BYTE PTR [rax],al
  42d6ef:	add    BYTE PTR [rdi+0x43],al
  42d6f2:	rex.XB cmp spl,BYTE PTR [r8]
  42d6f5:	sub    BYTE PTR [rdi+0x4e],al
  42d6f8:	push   rbp
  42d6f9:	sub    DWORD PTR [rax],esp
  42d6fb:	xor    al,0x2e
  42d6fd:	cmp    DWORD PTR [rsi],ebp
  42d6ff:	xor    al,0x0
	...
  42d70d:	add    BYTE PTR [rax],al
  42d70f:	add    BYTE PTR [rdi+0x43],al
  42d712:	rex.XB cmp spl,BYTE PTR [r8]
  42d715:	sub    BYTE PTR [rdi+0x4e],al
  42d718:	push   rbp
  42d719:	sub    DWORD PTR [rax],esp
  42d71b:	xor    al,0x2e
  42d71d:	cmp    DWORD PTR [rsi],ebp
  42d71f:	xor    al,0x0
	...
  42d72d:	add    BYTE PTR [rax],al
  42d72f:	add    BYTE PTR [rdi+0x43],al
  42d732:	rex.XB cmp spl,BYTE PTR [r8]
  42d735:	sub    BYTE PTR [rdi+0x4e],al
  42d738:	push   rbp
  42d739:	sub    DWORD PTR [rax],esp
  42d73b:	xor    al,0x2e
  42d73d:	cmp    DWORD PTR [rsi],ebp
  42d73f:	xor    al,0x0
	...
  42d74d:	add    BYTE PTR [rax],al
  42d74f:	add    BYTE PTR [rdi+0x43],al
  42d752:	rex.XB cmp spl,BYTE PTR [r8]
  42d755:	sub    BYTE PTR [rdi+0x4e],al
  42d758:	push   rbp
  42d759:	sub    DWORD PTR [rax],esp
  42d75b:	xor    al,0x2e
  42d75d:	cmp    DWORD PTR [rsi],ebp
  42d75f:	xor    al,0x0
	...
  42d76d:	add    BYTE PTR [rax],al
  42d76f:	add    BYTE PTR [rdi+0x43],al
  42d772:	rex.XB cmp spl,BYTE PTR [r8]
  42d775:	sub    BYTE PTR [rdi+0x4e],al
  42d778:	push   rbp
  42d779:	sub    DWORD PTR [rax],esp
  42d77b:	xor    al,0x2e
  42d77d:	cmp    DWORD PTR [rsi],ebp
  42d77f:	xor    al,0x0
	...
  42d78d:	add    BYTE PTR [rax],al
  42d78f:	add    BYTE PTR [rdi+0x43],al
  42d792:	rex.XB cmp spl,BYTE PTR [r8]
  42d795:	sub    BYTE PTR [rdi+0x4e],al
  42d798:	push   rbp
  42d799:	sub    DWORD PTR [rax],esp
  42d79b:	xor    al,0x2e
  42d79d:	cmp    DWORD PTR [rsi],ebp
  42d79f:	xor    al,0x0
	...
  42d7ad:	add    BYTE PTR [rax],al
  42d7af:	add    BYTE PTR [rdi+0x43],al
  42d7b2:	rex.XB cmp spl,BYTE PTR [r8]
  42d7b5:	sub    BYTE PTR [rdi+0x4e],al
  42d7b8:	push   rbp
  42d7b9:	sub    DWORD PTR [rax],esp
  42d7bb:	xor    al,0x2e
  42d7bd:	cmp    DWORD PTR [rsi],ebp
  42d7bf:	xor    al,0x0
	...
  42d7cd:	add    BYTE PTR [rax],al
  42d7cf:	add    BYTE PTR [rdi+0x43],al
  42d7d2:	rex.XB cmp spl,BYTE PTR [r8]
  42d7d5:	sub    BYTE PTR [rdi+0x4e],al
  42d7d8:	push   rbp
  42d7d9:	sub    DWORD PTR [rax],esp
  42d7db:	xor    al,0x2e
  42d7dd:	cmp    DWORD PTR [rsi],ebp
  42d7df:	xor    al,0x0
	...
  42d7ed:	add    BYTE PTR [rax],al
  42d7ef:	add    BYTE PTR [rdi+0x43],al
  42d7f2:	rex.XB cmp spl,BYTE PTR [r8]
  42d7f5:	sub    BYTE PTR [rdi+0x4e],al
  42d7f8:	push   rbp
  42d7f9:	sub    DWORD PTR [rax],esp
  42d7fb:	xor    al,0x2e
  42d7fd:	cmp    DWORD PTR [rsi],ebp
  42d7ff:	xor    al,0x0
	...
  42d80d:	add    BYTE PTR [rax],al
  42d80f:	add    BYTE PTR [rdi+0x43],al
  42d812:	rex.XB cmp spl,BYTE PTR [r8]
  42d815:	sub    BYTE PTR [rdi+0x4e],al
  42d818:	push   rbp
  42d819:	sub    DWORD PTR [rax],esp
  42d81b:	xor    al,0x2e
  42d81d:	cmp    DWORD PTR [rsi],ebp
  42d81f:	xor    al,0x0
	...
  42d82d:	add    BYTE PTR [rax],al
  42d82f:	add    BYTE PTR [rdi+0x43],al
  42d832:	rex.XB cmp spl,BYTE PTR [r8]
  42d835:	sub    BYTE PTR [rdi+0x4e],al
  42d838:	push   rbp
  42d839:	sub    DWORD PTR [rax],esp
  42d83b:	xor    al,0x2e
  42d83d:	cmp    DWORD PTR [rsi],ebp
  42d83f:	xor    al,0x0
	...
  42d84d:	add    BYTE PTR [rax],al
  42d84f:	add    BYTE PTR [rdi+0x43],al
  42d852:	rex.XB cmp spl,BYTE PTR [r8]
  42d855:	sub    BYTE PTR [rdi+0x4e],al
  42d858:	push   rbp
  42d859:	sub    DWORD PTR [rax],esp
  42d85b:	xor    al,0x2e
  42d85d:	cmp    DWORD PTR [rsi],ebp
  42d85f:	xor    al,0x0
	...
  42d86d:	add    BYTE PTR [rax],al
  42d86f:	add    BYTE PTR [rdi+0x43],al
  42d872:	rex.XB cmp spl,BYTE PTR [r8]
  42d875:	sub    BYTE PTR [rdi+0x4e],al
  42d878:	push   rbp
  42d879:	sub    DWORD PTR [rax],esp
  42d87b:	xor    al,0x2e
  42d87d:	cmp    DWORD PTR [rsi],ebp
  42d87f:	xor    al,0x0
	...
  42d88d:	add    BYTE PTR [rax],al
  42d88f:	add    BYTE PTR [rdi+0x43],al
  42d892:	rex.XB cmp spl,BYTE PTR [r8]
  42d895:	sub    BYTE PTR [rdi+0x4e],al
  42d898:	push   rbp
  42d899:	sub    DWORD PTR [rax],esp
  42d89b:	xor    al,0x2e
  42d89d:	cmp    DWORD PTR [rsi],ebp
  42d89f:	xor    al,0x0
	...
  42d8ad:	add    BYTE PTR [rax],al
  42d8af:	add    BYTE PTR [rdi+0x43],al
  42d8b2:	rex.XB cmp spl,BYTE PTR [r8]
  42d8b5:	sub    BYTE PTR [rdi+0x4e],al
  42d8b8:	push   rbp
  42d8b9:	sub    DWORD PTR [rax],esp
  42d8bb:	xor    al,0x2e
  42d8bd:	cmp    DWORD PTR [rsi],ebp
  42d8bf:	xor    al,0x0
	...
  42d8cd:	add    BYTE PTR [rax],al
  42d8cf:	add    BYTE PTR [rdi+0x43],al
  42d8d2:	rex.XB cmp spl,BYTE PTR [r8]
  42d8d5:	sub    BYTE PTR [rdi+0x4e],al
  42d8d8:	push   rbp
  42d8d9:	sub    DWORD PTR [rax],esp
  42d8db:	xor    al,0x2e
  42d8dd:	cmp    DWORD PTR [rsi],ebp
  42d8df:	xor    al,0x0
	...
  42d8ed:	add    BYTE PTR [rax],al
  42d8ef:	add    BYTE PTR [rdi+0x43],al
  42d8f2:	rex.XB cmp spl,BYTE PTR [r8]
  42d8f5:	sub    BYTE PTR [rdi+0x4e],al
  42d8f8:	push   rbp
  42d8f9:	sub    DWORD PTR [rax],esp
  42d8fb:	xor    al,0x2e
  42d8fd:	cmp    DWORD PTR [rsi],ebp
  42d8ff:	xor    al,0x0
	...
  42d90d:	add    BYTE PTR [rax],al
  42d90f:	add    BYTE PTR [rdi+0x43],al
  42d912:	rex.XB cmp spl,BYTE PTR [r8]
  42d915:	sub    BYTE PTR [rdi+0x4e],al
  42d918:	push   rbp
  42d919:	sub    DWORD PTR [rax],esp
  42d91b:	xor    al,0x2e
  42d91d:	cmp    DWORD PTR [rsi],ebp
  42d91f:	xor    al,0x0
	...
  42d92d:	add    BYTE PTR [rax],al
  42d92f:	add    BYTE PTR [rdi+0x43],al
  42d932:	rex.XB cmp spl,BYTE PTR [r8]
  42d935:	sub    BYTE PTR [rdi+0x4e],al
  42d938:	push   rbp
  42d939:	sub    DWORD PTR [rax],esp
  42d93b:	xor    al,0x2e
  42d93d:	cmp    DWORD PTR [rsi],ebp
  42d93f:	xor    al,0x0
	...
  42d94d:	add    BYTE PTR [rax],al
  42d94f:	add    BYTE PTR [rdi+0x43],al
  42d952:	rex.XB cmp spl,BYTE PTR [r8]
  42d955:	sub    BYTE PTR [rdi+0x4e],al
  42d958:	push   rbp
  42d959:	sub    DWORD PTR [rax],esp
  42d95b:	xor    al,0x2e
  42d95d:	cmp    DWORD PTR [rsi],ebp
  42d95f:	xor    al,0x0
	...
  42d96d:	add    BYTE PTR [rax],al
  42d96f:	add    BYTE PTR [rdi+0x43],al
  42d972:	rex.XB cmp spl,BYTE PTR [r8]
  42d975:	sub    BYTE PTR [rdi+0x4e],al
  42d978:	push   rbp
  42d979:	sub    DWORD PTR [rax],esp
  42d97b:	xor    al,0x2e
  42d97d:	cmp    DWORD PTR [rsi],ebp
  42d97f:	xor    al,0x0
	...
  42d98d:	add    BYTE PTR [rax],al
  42d98f:	add    BYTE PTR [rdi+0x43],al
  42d992:	rex.XB cmp spl,BYTE PTR [r8]
  42d995:	sub    BYTE PTR [rdi+0x4e],al
  42d998:	push   rbp
  42d999:	sub    DWORD PTR [rax],esp
  42d99b:	xor    al,0x2e
  42d99d:	cmp    DWORD PTR [rsi],ebp
  42d99f:	xor    al,0x0
	...
  42d9ad:	add    BYTE PTR [rax],al
  42d9af:	add    BYTE PTR [rdi+0x43],al
  42d9b2:	rex.XB cmp spl,BYTE PTR [r8]
  42d9b5:	sub    BYTE PTR [rdi+0x4e],al
  42d9b8:	push   rbp
  42d9b9:	sub    DWORD PTR [rax],esp
  42d9bb:	xor    al,0x2e
  42d9bd:	cmp    DWORD PTR [rsi],ebp
  42d9bf:	xor    al,0x0
	...
  42d9cd:	add    BYTE PTR [rax],al
  42d9cf:	add    BYTE PTR [rdi+0x43],al
  42d9d2:	rex.XB cmp spl,BYTE PTR [r8]
  42d9d5:	sub    BYTE PTR [rdi+0x4e],al
  42d9d8:	push   rbp
  42d9d9:	sub    DWORD PTR [rax],esp
  42d9db:	xor    al,0x2e
  42d9dd:	cmp    DWORD PTR [rsi],ebp
  42d9df:	xor    al,0x0
	...
  42d9ed:	add    BYTE PTR [rax],al
  42d9ef:	add    BYTE PTR [rdi+0x43],al
  42d9f2:	rex.XB cmp spl,BYTE PTR [r8]
  42d9f5:	sub    BYTE PTR [rdi+0x4e],al
  42d9f8:	push   rbp
  42d9f9:	sub    DWORD PTR [rax],esp
  42d9fb:	xor    al,0x2e
  42d9fd:	cmp    DWORD PTR [rsi],ebp
  42d9ff:	xor    al,0x0
	...
  42da0d:	add    BYTE PTR [rax],al
  42da0f:	add    BYTE PTR [rdi+0x43],al
  42da12:	rex.XB cmp spl,BYTE PTR [r8]
  42da15:	sub    BYTE PTR [rdi+0x4e],al
  42da18:	push   rbp
  42da19:	sub    DWORD PTR [rax],esp
  42da1b:	xor    al,0x2e
  42da1d:	cmp    DWORD PTR [rsi],ebp
  42da1f:	xor    al,0x0
	...
  42da2d:	add    BYTE PTR [rax],al
  42da2f:	add    BYTE PTR [rdi+0x43],al
  42da32:	rex.XB cmp spl,BYTE PTR [r8]
  42da35:	sub    BYTE PTR [rdi+0x4e],al
  42da38:	push   rbp
  42da39:	sub    DWORD PTR [rax],esp
  42da3b:	xor    al,0x2e
  42da3d:	cmp    DWORD PTR [rsi],ebp
  42da3f:	xor    al,0x0
	...
  42da4d:	add    BYTE PTR [rax],al
  42da4f:	add    BYTE PTR [rdi+0x43],al
  42da52:	rex.XB cmp spl,BYTE PTR [r8]
  42da55:	sub    BYTE PTR [rdi+0x4e],al
  42da58:	push   rbp
  42da59:	sub    DWORD PTR [rax],esp
  42da5b:	xor    al,0x2e
  42da5d:	cmp    DWORD PTR [rsi],ebp
  42da5f:	xor    al,0x0
	...
  42da6d:	add    BYTE PTR [rax],al
  42da6f:	add    BYTE PTR [rdi+0x43],al
  42da72:	rex.XB cmp spl,BYTE PTR [r8]
  42da75:	sub    BYTE PTR [rdi+0x4e],al
  42da78:	push   rbp
  42da79:	sub    DWORD PTR [rax],esp
  42da7b:	xor    al,0x2e
  42da7d:	cmp    DWORD PTR [rsi],ebp
  42da7f:	xor    al,0x0
	...
  42da8d:	add    BYTE PTR [rax],al
  42da8f:	add    BYTE PTR [rdi+0x43],al
  42da92:	rex.XB cmp spl,BYTE PTR [r8]
  42da95:	sub    BYTE PTR [rdi+0x4e],al
  42da98:	push   rbp
  42da99:	sub    DWORD PTR [rax],esp
  42da9b:	xor    al,0x2e
  42da9d:	cmp    DWORD PTR [rsi],ebp
  42da9f:	xor    al,0x0
	...
  42daad:	add    BYTE PTR [rax],al
  42daaf:	add    BYTE PTR [rdi+0x43],al
  42dab2:	rex.XB cmp spl,BYTE PTR [r8]
  42dab5:	sub    BYTE PTR [rdi+0x4e],al
  42dab8:	push   rbp
  42dab9:	sub    DWORD PTR [rax],esp
  42dabb:	xor    al,0x2e
  42dabd:	cmp    DWORD PTR [rsi],ebp
  42dabf:	xor    al,0x0
	...
  42dacd:	add    BYTE PTR [rax],al
  42dacf:	add    BYTE PTR [rdi+0x43],al
  42dad2:	rex.XB cmp spl,BYTE PTR [r8]
  42dad5:	sub    BYTE PTR [rdi+0x4e],al
  42dad8:	push   rbp
  42dad9:	sub    DWORD PTR [rax],esp
  42dadb:	xor    al,0x2e
  42dadd:	cmp    DWORD PTR [rsi],ebp
  42dadf:	xor    al,0x0
	...
  42daed:	add    BYTE PTR [rax],al
  42daef:	add    BYTE PTR [rdi+0x43],al
  42daf2:	rex.XB cmp spl,BYTE PTR [r8]
  42daf5:	sub    BYTE PTR [rdi+0x4e],al
  42daf8:	push   rbp
  42daf9:	sub    DWORD PTR [rax],esp
  42dafb:	xor    al,0x2e
  42dafd:	cmp    DWORD PTR [rsi],ebp
  42daff:	xor    al,0x0
	...
  42db0d:	add    BYTE PTR [rax],al
  42db0f:	add    BYTE PTR [rdi+0x43],al
  42db12:	rex.XB cmp spl,BYTE PTR [r8]
  42db15:	sub    BYTE PTR [rdi+0x4e],al
  42db18:	push   rbp
  42db19:	sub    DWORD PTR [rax],esp
  42db1b:	xor    al,0x2e
  42db1d:	cmp    DWORD PTR [rsi],ebp
  42db1f:	xor    al,0x0
	...
  42db2d:	add    BYTE PTR [rax],al
  42db2f:	add    BYTE PTR [rdi+0x43],al
  42db32:	rex.XB cmp spl,BYTE PTR [r8]
  42db35:	sub    BYTE PTR [rdi+0x4e],al
  42db38:	push   rbp
  42db39:	sub    DWORD PTR [rax],esp
  42db3b:	xor    al,0x2e
  42db3d:	cmp    DWORD PTR [rsi],ebp
  42db3f:	xor    al,0x0
	...
  42db4d:	add    BYTE PTR [rax],al
  42db4f:	add    BYTE PTR [rdi+0x43],al
  42db52:	rex.XB cmp spl,BYTE PTR [r8]
  42db55:	sub    BYTE PTR [rdi+0x4e],al
  42db58:	push   rbp
  42db59:	sub    DWORD PTR [rax],esp
  42db5b:	xor    al,0x2e
  42db5d:	cmp    DWORD PTR [rsi],ebp
  42db5f:	xor    al,0x0
	...
  42db6d:	add    BYTE PTR [rax],al
  42db6f:	add    BYTE PTR [rdi+0x43],al
  42db72:	rex.XB cmp spl,BYTE PTR [r8]
  42db75:	sub    BYTE PTR [rdi+0x4e],al
  42db78:	push   rbp
  42db79:	sub    DWORD PTR [rax],esp
  42db7b:	xor    al,0x2e
  42db7d:	cmp    DWORD PTR [rsi],ebp
  42db7f:	xor    al,0x0
	...
  42db8d:	add    BYTE PTR [rax],al
  42db8f:	add    BYTE PTR [rdi+0x43],al
  42db92:	rex.XB cmp spl,BYTE PTR [r8]
  42db95:	sub    BYTE PTR [rdi+0x4e],al
  42db98:	push   rbp
  42db99:	sub    DWORD PTR [rax],esp
  42db9b:	xor    al,0x2e
  42db9d:	cmp    DWORD PTR [rsi],ebp
  42db9f:	xor    al,0x0
	...
  42dbad:	add    BYTE PTR [rax],al
  42dbaf:	add    BYTE PTR [rdi+0x43],al
  42dbb2:	rex.XB cmp spl,BYTE PTR [r8]
  42dbb5:	sub    BYTE PTR [rdi+0x4e],al
  42dbb8:	push   rbp
  42dbb9:	sub    DWORD PTR [rax],esp
  42dbbb:	xor    al,0x2e
  42dbbd:	cmp    DWORD PTR [rsi],ebp
  42dbbf:	xor    al,0x0
	...
  42dbcd:	add    BYTE PTR [rax],al
  42dbcf:	add    BYTE PTR [rdi+0x43],al
  42dbd2:	rex.XB cmp spl,BYTE PTR [r8]
  42dbd5:	sub    BYTE PTR [rdi+0x4e],al
  42dbd8:	push   rbp
  42dbd9:	sub    DWORD PTR [rax],esp
  42dbdb:	xor    al,0x2e
  42dbdd:	cmp    DWORD PTR [rsi],ebp
  42dbdf:	xor    al,0x0
	...
  42dbed:	add    BYTE PTR [rax],al
  42dbef:	add    BYTE PTR [rdi+0x43],al
  42dbf2:	rex.XB cmp spl,BYTE PTR [r8]
  42dbf5:	sub    BYTE PTR [rdi+0x4e],al
  42dbf8:	push   rbp
  42dbf9:	sub    DWORD PTR [rax],esp
  42dbfb:	xor    al,0x2e
  42dbfd:	cmp    DWORD PTR [rsi],ebp
  42dbff:	xor    al,0x0
	...
  42dc0d:	add    BYTE PTR [rax],al
  42dc0f:	add    BYTE PTR [rdi+0x43],al
  42dc12:	rex.XB cmp spl,BYTE PTR [r8]
  42dc15:	sub    BYTE PTR [rdi+0x4e],al
  42dc18:	push   rbp
  42dc19:	sub    DWORD PTR [rax],esp
  42dc1b:	xor    al,0x2e
  42dc1d:	cmp    DWORD PTR [rsi],ebp
  42dc1f:	xor    al,0x0
	...
  42dc2d:	add    BYTE PTR [rax],al
  42dc2f:	add    BYTE PTR [rdi+0x43],al
  42dc32:	rex.XB cmp spl,BYTE PTR [r8]
  42dc35:	sub    BYTE PTR [rdi+0x4e],al
  42dc38:	push   rbp
  42dc39:	sub    DWORD PTR [rax],esp
  42dc3b:	xor    al,0x2e
  42dc3d:	cmp    DWORD PTR [rsi],ebp
  42dc3f:	xor    al,0x0
	...
  42dc4d:	add    BYTE PTR [rax],al
  42dc4f:	add    BYTE PTR [rdi+0x43],al
  42dc52:	rex.XB cmp spl,BYTE PTR [r8]
  42dc55:	sub    BYTE PTR [rdi+0x4e],al
  42dc58:	push   rbp
  42dc59:	sub    DWORD PTR [rax],esp
  42dc5b:	xor    al,0x2e
  42dc5d:	cmp    DWORD PTR [rsi],ebp
  42dc5f:	xor    al,0x0
	...
  42dc6d:	add    BYTE PTR [rax],al
  42dc6f:	add    BYTE PTR [rdi+0x43],al
  42dc72:	rex.XB cmp spl,BYTE PTR [r8]
  42dc75:	sub    BYTE PTR [rdi+0x4e],al
  42dc78:	push   rbp
  42dc79:	sub    DWORD PTR [rax],esp
  42dc7b:	xor    al,0x2e
  42dc7d:	cmp    DWORD PTR [rsi],ebp
  42dc7f:	xor    al,0x0
	...
  42dc8d:	add    BYTE PTR [rax],al
  42dc8f:	add    BYTE PTR [rdi+0x43],al
  42dc92:	rex.XB cmp spl,BYTE PTR [r8]
  42dc95:	sub    BYTE PTR [rdi+0x4e],al
  42dc98:	push   rbp
  42dc99:	sub    DWORD PTR [rax],esp
  42dc9b:	xor    al,0x2e
  42dc9d:	cmp    DWORD PTR [rsi],ebp
  42dc9f:	xor    al,0x0
	...
  42dcad:	add    BYTE PTR [rax],al
  42dcaf:	add    BYTE PTR [rdi+0x43],al
  42dcb2:	rex.XB cmp spl,BYTE PTR [r8]
  42dcb5:	sub    BYTE PTR [rdi+0x4e],al
  42dcb8:	push   rbp
  42dcb9:	sub    DWORD PTR [rax],esp
  42dcbb:	xor    al,0x2e
  42dcbd:	cmp    DWORD PTR [rsi],ebp
  42dcbf:	xor    al,0x0
	...
  42dccd:	add    BYTE PTR [rax],al
  42dccf:	add    BYTE PTR [rdi+0x43],al
  42dcd2:	rex.XB cmp spl,BYTE PTR [r8]
  42dcd5:	sub    BYTE PTR [rdi+0x4e],al
  42dcd8:	push   rbp
  42dcd9:	sub    DWORD PTR [rax],esp
  42dcdb:	xor    al,0x2e
  42dcdd:	cmp    DWORD PTR [rsi],ebp
  42dcdf:	xor    al,0x0
	...
  42dced:	add    BYTE PTR [rax],al
  42dcef:	add    BYTE PTR [rdi+0x43],al
  42dcf2:	rex.XB cmp spl,BYTE PTR [r8]
  42dcf5:	sub    BYTE PTR [rdi+0x4e],al
  42dcf8:	push   rbp
  42dcf9:	sub    DWORD PTR [rax],esp
  42dcfb:	xor    al,0x2e
  42dcfd:	cmp    DWORD PTR [rsi],ebp
  42dcff:	xor    al,0x0
	...
  42dd0d:	add    BYTE PTR [rax],al
  42dd0f:	add    BYTE PTR [rdi+0x43],al
  42dd12:	rex.XB cmp spl,BYTE PTR [r8]
  42dd15:	sub    BYTE PTR [rdi+0x4e],al
  42dd18:	push   rbp
  42dd19:	sub    DWORD PTR [rax],esp
  42dd1b:	xor    al,0x2e
  42dd1d:	cmp    DWORD PTR [rsi],ebp
  42dd1f:	xor    al,0x0
	...
  42dd2d:	add    BYTE PTR [rax],al
  42dd2f:	add    BYTE PTR [rdi+0x43],al
  42dd32:	rex.XB cmp spl,BYTE PTR [r8]
  42dd35:	sub    BYTE PTR [rdi+0x4e],al
  42dd38:	push   rbp
  42dd39:	sub    DWORD PTR [rax],esp
  42dd3b:	xor    al,0x2e
  42dd3d:	cmp    DWORD PTR [rsi],ebp
  42dd3f:	xor    al,0x0
	...
  42dd4d:	add    BYTE PTR [rax],al
  42dd4f:	add    BYTE PTR [rdi+0x43],al
  42dd52:	rex.XB cmp spl,BYTE PTR [r8]
  42dd55:	sub    BYTE PTR [rdi+0x4e],al
  42dd58:	push   rbp
  42dd59:	sub    DWORD PTR [rax],esp
  42dd5b:	xor    al,0x2e
  42dd5d:	cmp    DWORD PTR [rsi],ebp
  42dd5f:	xor    al,0x0
	...
  42dd6d:	add    BYTE PTR [rax],al
  42dd6f:	add    BYTE PTR [rdi+0x43],al
  42dd72:	rex.XB cmp spl,BYTE PTR [r8]
  42dd75:	sub    BYTE PTR [rdi+0x4e],al
  42dd78:	push   rbp
  42dd79:	sub    DWORD PTR [rax],esp
  42dd7b:	xor    al,0x2e
  42dd7d:	cmp    DWORD PTR [rsi],ebp
  42dd7f:	xor    al,0x0
	...
  42dd8d:	add    BYTE PTR [rax],al
  42dd8f:	add    BYTE PTR [rdi+0x43],al
  42dd92:	rex.XB cmp spl,BYTE PTR [r8]
  42dd95:	sub    BYTE PTR [rdi+0x4e],al
  42dd98:	push   rbp
  42dd99:	sub    DWORD PTR [rax],esp
  42dd9b:	xor    al,0x2e
  42dd9d:	cmp    DWORD PTR [rsi],ebp
  42dd9f:	xor    al,0x0
	...
  42ddad:	add    BYTE PTR [rax],al
  42ddaf:	add    BYTE PTR [rdi+0x43],al
  42ddb2:	rex.XB cmp spl,BYTE PTR [r8]
  42ddb5:	sub    BYTE PTR [rdi+0x4e],al
  42ddb8:	push   rbp
  42ddb9:	sub    DWORD PTR [rax],esp
  42ddbb:	xor    al,0x2e
  42ddbd:	cmp    DWORD PTR [rsi],ebp
  42ddbf:	xor    al,0x0
	...
  42ddcd:	add    BYTE PTR [rax],al
  42ddcf:	add    BYTE PTR [rdi+0x43],al
  42ddd2:	rex.XB cmp spl,BYTE PTR [r8]
  42ddd5:	sub    BYTE PTR [rdi+0x4e],al
  42ddd8:	push   rbp
  42ddd9:	sub    DWORD PTR [rax],esp
  42dddb:	xor    al,0x2e
  42dddd:	cmp    DWORD PTR [rsi],ebp
  42dddf:	xor    al,0x0
	...
  42dded:	add    BYTE PTR [rax],al
  42ddef:	add    BYTE PTR [rdi+0x43],al
  42ddf2:	rex.XB cmp spl,BYTE PTR [r8]
  42ddf5:	sub    BYTE PTR [rdi+0x4e],al
  42ddf8:	push   rbp
  42ddf9:	sub    DWORD PTR [rax],esp
  42ddfb:	xor    al,0x2e
  42ddfd:	cmp    DWORD PTR [rsi],ebp
  42ddff:	xor    al,0x0
	...
  42de0d:	add    BYTE PTR [rax],al
  42de0f:	add    BYTE PTR [rdi+0x43],al
  42de12:	rex.XB cmp spl,BYTE PTR [r8]
  42de15:	sub    BYTE PTR [rdi+0x4e],al
  42de18:	push   rbp
  42de19:	sub    DWORD PTR [rax],esp
  42de1b:	xor    al,0x2e
  42de1d:	cmp    DWORD PTR [rsi],ebp
  42de1f:	xor    al,0x0
	...
  42de2d:	add    BYTE PTR [rax],al
  42de2f:	add    BYTE PTR [rdi+0x43],al
  42de32:	rex.XB cmp spl,BYTE PTR [r8]
  42de35:	sub    BYTE PTR [rdi+0x4e],al
  42de38:	push   rbp
  42de39:	sub    DWORD PTR [rax],esp
  42de3b:	xor    al,0x2e
  42de3d:	cmp    DWORD PTR [rsi],ebp
  42de3f:	xor    al,0x0
	...
  42de4d:	add    BYTE PTR [rax],al
  42de4f:	add    BYTE PTR [rdi+0x43],al
  42de52:	rex.XB cmp spl,BYTE PTR [r8]
  42de55:	sub    BYTE PTR [rdi+0x4e],al
  42de58:	push   rbp
  42de59:	sub    DWORD PTR [rax],esp
  42de5b:	xor    al,0x2e
  42de5d:	cmp    DWORD PTR [rsi],ebp
  42de5f:	xor    al,0x0
	...
  42de6d:	add    BYTE PTR [rax],al
  42de6f:	add    BYTE PTR [rdi+0x43],al
  42de72:	rex.XB cmp spl,BYTE PTR [r8]
  42de75:	sub    BYTE PTR [rdi+0x4e],al
  42de78:	push   rbp
  42de79:	sub    DWORD PTR [rax],esp
  42de7b:	xor    al,0x2e
  42de7d:	cmp    DWORD PTR [rsi],ebp
  42de7f:	xor    al,0x0
	...
  42de8d:	add    BYTE PTR [rax],al
  42de8f:	add    BYTE PTR [rdi+0x43],al
  42de92:	rex.XB cmp spl,BYTE PTR [r8]
  42de95:	sub    BYTE PTR [rdi+0x4e],al
  42de98:	push   rbp
  42de99:	sub    DWORD PTR [rax],esp
  42de9b:	xor    al,0x2e
  42de9d:	cmp    DWORD PTR [rsi],ebp
  42de9f:	xor    al,0x0
	...
  42dead:	add    BYTE PTR [rax],al
  42deaf:	add    BYTE PTR [rdi+0x43],al
  42deb2:	rex.XB cmp spl,BYTE PTR [r8]
  42deb5:	sub    BYTE PTR [rdi+0x4e],al
  42deb8:	push   rbp
  42deb9:	sub    DWORD PTR [rax],esp
  42debb:	xor    al,0x2e
  42debd:	cmp    DWORD PTR [rsi],ebp
  42debf:	xor    al,0x0
	...
  42decd:	add    BYTE PTR [rax],al
  42decf:	add    BYTE PTR [rdi+0x43],al
  42ded2:	rex.XB cmp spl,BYTE PTR [r8]
  42ded5:	sub    BYTE PTR [rdi+0x4e],al
  42ded8:	push   rbp
  42ded9:	sub    DWORD PTR [rax],esp
  42dedb:	xor    al,0x2e
  42dedd:	cmp    DWORD PTR [rsi],ebp
  42dedf:	xor    al,0x0
	...
  42deed:	add    BYTE PTR [rax],al
  42deef:	add    BYTE PTR [rdi+0x43],al
  42def2:	rex.XB cmp spl,BYTE PTR [r8]
  42def5:	sub    BYTE PTR [rdi+0x4e],al
  42def8:	push   rbp
  42def9:	sub    DWORD PTR [rax],esp
  42defb:	xor    al,0x2e
  42defd:	cmp    DWORD PTR [rsi],ebp
  42deff:	xor    al,0x0
	...
  42df0d:	add    BYTE PTR [rax],al
  42df0f:	add    BYTE PTR [rdi+0x43],al
  42df12:	rex.XB cmp spl,BYTE PTR [r8]
  42df15:	sub    BYTE PTR [rdi+0x4e],al
  42df18:	push   rbp
  42df19:	sub    DWORD PTR [rax],esp
  42df1b:	xor    al,0x2e
  42df1d:	cmp    DWORD PTR [rsi],ebp
  42df1f:	xor    al,0x0
	...
  42df2d:	add    BYTE PTR [rax],al
  42df2f:	add    BYTE PTR [rdi+0x43],al
  42df32:	rex.XB cmp spl,BYTE PTR [r8]
  42df35:	sub    BYTE PTR [rdi+0x4e],al
  42df38:	push   rbp
  42df39:	sub    DWORD PTR [rax],esp
  42df3b:	xor    al,0x2e
  42df3d:	cmp    DWORD PTR [rsi],ebp
  42df3f:	xor    al,0x0
	...
  42df4d:	add    BYTE PTR [rax],al
  42df4f:	add    BYTE PTR [rdi+0x43],al
  42df52:	rex.XB cmp spl,BYTE PTR [r8]
  42df55:	sub    BYTE PTR [rdi+0x4e],al
  42df58:	push   rbp
  42df59:	sub    DWORD PTR [rax],esp
  42df5b:	xor    al,0x2e
  42df5d:	cmp    DWORD PTR [rsi],ebp
  42df5f:	xor    al,0x0
	...
  42df6d:	add    BYTE PTR [rax],al
  42df6f:	add    BYTE PTR [rdi+0x43],al
  42df72:	rex.XB cmp spl,BYTE PTR [r8]
  42df75:	sub    BYTE PTR [rdi+0x4e],al
  42df78:	push   rbp
  42df79:	sub    DWORD PTR [rax],esp
  42df7b:	xor    al,0x2e
  42df7d:	cmp    DWORD PTR [rsi],ebp
  42df7f:	xor    al,0x0
	...
  42df8d:	add    BYTE PTR [rax],al
  42df8f:	add    BYTE PTR [rdi+0x43],al
  42df92:	rex.XB cmp spl,BYTE PTR [r8]
  42df95:	sub    BYTE PTR [rdi+0x4e],al
  42df98:	push   rbp
  42df99:	sub    DWORD PTR [rax],esp
  42df9b:	xor    al,0x2e
  42df9d:	cmp    DWORD PTR [rsi],ebp
  42df9f:	xor    al,0x0
	...
  42dfad:	add    BYTE PTR [rax],al
  42dfaf:	add    BYTE PTR [rdi+0x43],al
  42dfb2:	rex.XB cmp spl,BYTE PTR [r8]
  42dfb5:	sub    BYTE PTR [rdi+0x4e],al
  42dfb8:	push   rbp
  42dfb9:	sub    DWORD PTR [rax],esp
  42dfbb:	xor    al,0x2e
  42dfbd:	cmp    DWORD PTR [rsi],ebp
  42dfbf:	xor    al,0x0
	...
  42dfcd:	add    BYTE PTR [rax],al
  42dfcf:	add    BYTE PTR [rdi+0x43],al
  42dfd2:	rex.XB cmp spl,BYTE PTR [r8]
  42dfd5:	sub    BYTE PTR [rdi+0x4e],al
  42dfd8:	push   rbp
  42dfd9:	sub    DWORD PTR [rax],esp
  42dfdb:	xor    al,0x2e
  42dfdd:	cmp    DWORD PTR [rsi],ebp
  42dfdf:	xor    al,0x0
	...
  42dfed:	add    BYTE PTR [rax],al
  42dfef:	add    BYTE PTR [rdi+0x43],al
  42dff2:	rex.XB cmp spl,BYTE PTR [r8]
  42dff5:	sub    BYTE PTR [rdi+0x4e],al
  42dff8:	push   rbp
  42dff9:	sub    DWORD PTR [rax],esp
  42dffb:	xor    al,0x2e
  42dffd:	cmp    DWORD PTR [rsi],ebp
  42dfff:	xor    al,0x0
	...
  42e00d:	add    BYTE PTR [rax],al
  42e00f:	add    BYTE PTR [rdi+0x43],al
  42e012:	rex.XB cmp spl,BYTE PTR [r8]
  42e015:	sub    BYTE PTR [rdi+0x4e],al
  42e018:	push   rbp
  42e019:	sub    DWORD PTR [rax],esp
  42e01b:	xor    al,0x2e
  42e01d:	cmp    DWORD PTR [rsi],ebp
  42e01f:	xor    al,0x0
	...
  42e035:	add    BYTE PTR [rax],al
  42e037:	add    BYTE PTR [rcx],al
  42e039:	add    BYTE PTR [rax],al
  42e03b:	add    BYTE PTR [rbx+rcx*4+0x3],dh
  42e03f:	add    al,dh
  42e041:	(bad)  
  42e042:	add    al,BYTE PTR [rax]
  42e044:	add    BYTE PTR [rax],al
  42e047:	add    ah,bh
  42e049:	mov    eax,DWORD PTR [rbx]
  42e04b:	add    BYTE PTR [rax],al
  42e04d:	(bad)  
  42e04e:	add    al,BYTE PTR [rax]
  42e050:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000000042f000 <.pdata>:
  42f000:	add    BYTE PTR [rax],dl
  42f002:	add    BYTE PTR [rax],al
  42f004:	add    DWORD PTR [rax],edx
  42f006:	add    BYTE PTR [rax],al
  42f008:	add    BYTE PTR [rax],dl
  42f00a:	add    eax,DWORD PTR [rax]
  42f00c:	adc    BYTE PTR [rax],dl
  42f00e:	add    BYTE PTR [rax],al
  42f010:	push   rcx
  42f011:	adc    DWORD PTR [rax],eax
  42f013:	add    BYTE PTR [rax+rdx*1],al
  42f016:	add    eax,DWORD PTR [rax]
  42f018:	(bad)  
  42f019:	adc    DWORD PTR [rax],eax
  42f01b:	add    BYTE PTR [rsi+0xc000011],ch
  42f021:	adc    BYTE PTR [rbx],al
  42f023:	add    BYTE PTR [rax-0x31ffffef],dh
  42f029:	adc    al,0x0
  42f02b:	add    BYTE PTR [rax+rdx*1],dl
  42f02e:	add    eax,DWORD PTR [rax]
  42f030:	rcl    BYTE PTR [rax+rax*1],1
  42f033:	add    dl,dh
  42f035:	adc    al,0x0
  42f037:	add    BYTE PTR [rax],ch
  42f039:	adc    BYTE PTR [rbx],al
  42f03b:	add    BYTE PTR [rax],al
  42f03d:	adc    eax,0x15220000
  42f042:	add    BYTE PTR [rax],al
  42f044:	rex.W adc BYTE PTR [rbx],al
  42f047:	add    BYTE PTR [rax],dh
  42f049:	adc    eax,0x15520000
  42f04e:	add    BYTE PTR [rax],al
  42f050:	push   0x60000310
  42f055:	adc    eax,0x158a0000
  42f05a:	add    BYTE PTR [rax],al
  42f05c:	jo     0x42f06e
  42f05e:	add    eax,DWORD PTR [rax]
  42f060:	nop
  42f061:	adc    eax,0x16130000
  42f066:	add    BYTE PTR [rax],al
  42f068:	jl     0x42f07a
  42f06a:	add    eax,DWORD PTR [rax]
  42f06c:	and    BYTE PTR [rsi],dl
  42f06e:	add    BYTE PTR [rax],al
  42f070:	sub    BYTE PTR [rsi],dl
  42f072:	add    BYTE PTR [rax],al
  42f074:	test   BYTE PTR [rax],dl
  42f076:	add    eax,DWORD PTR [rax]
  42f078:	xor    BYTE PTR [rsi],dl
  42f07a:	add    BYTE PTR [rax],al
  42f07c:	cmp    BYTE PTR [rsi],dl
  42f07e:	add    BYTE PTR [rax],al
  42f080:	mov    BYTE PTR [rax],dl
  42f082:	add    eax,DWORD PTR [rax]
  42f084:	rex (bad) 
  42f086:	add    BYTE PTR [rax],al
  42f088:	addr32 (bad) 
  42f08a:	add    BYTE PTR [rax],al
  42f08c:	mov    WORD PTR [rax],ss
  42f08e:	add    eax,DWORD PTR [rax]
  42f090:	jo     0x42f0a8
  42f092:	add    BYTE PTR [rax],al
  42f094:	xchg   edx,eax
  42f095:	(bad)  
  42f096:	add    BYTE PTR [rax],al
  42f098:	lods   al,BYTE PTR ds:[rsi]
  42f099:	adc    BYTE PTR [rbx],al
  42f09b:	add    BYTE PTR [rax-0x38ffffea],ah
  42f0a1:	(bad)  
  42f0a2:	add    BYTE PTR [rax],al
  42f0a4:	mov    ah,0x10
  42f0a6:	add    eax,DWORD PTR [rax]
  42f0a8:	rcl    BYTE PTR [rsi],1
  42f0aa:	add    BYTE PTR [rax],al
  42f0ac:	sbb    al,0x18
  42f0ae:	add    BYTE PTR [rax],al
  42f0b0:	mov    esp,0x20000310
  42f0b5:	sbb    BYTE PTR [rax],al
  42f0b7:	add    ah,dh
  42f0b9:	sbb    BYTE PTR [rax],al
  42f0bb:	add    al,cl
  42f0bd:	adc    BYTE PTR [rbx],al
  42f0bf:	add    BYTE PTR [rax],al
  42f0c1:	sbb    DWORD PTR [rax],eax
  42f0c3:	add    BYTE PTR [rsi],ah
  42f0c5:	sbb    DWORD PTR [rax],eax
  42f0c7:	add    ah,bl
  42f0c9:	adc    BYTE PTR [rbx],al
  42f0cb:	add    BYTE PTR [rax],dh
  42f0cd:	sbb    DWORD PTR [rax],eax
  42f0cf:	add    BYTE PTR [rcx+0x19],bl
  42f0d2:	add    BYTE PTR [rax],al
  42f0d4:	in     al,0x10
  42f0d6:	add    eax,DWORD PTR [rax]
  42f0d8:	(bad)  
  42f0d9:	sbb    DWORD PTR [rax],eax
  42f0db:	add    BYTE PTR [rbx],dl
  42f0dd:	sbb    eax,DWORD PTR [rax]
  42f0df:	add    ah,ch
  42f0e1:	adc    BYTE PTR [rbx],al
  42f0e3:	add    BYTE PTR [rax],ah
  42f0e5:	sbb    eax,DWORD PTR [rax]
  42f0e7:	add    cl,dh
  42f0e9:	sbb    eax,DWORD PTR [rax]
  42f0eb:	add    al,bh
  42f0ed:	adc    BYTE PTR [rbx],al
  42f0ef:	add    BYTE PTR [rax],al
  42f0f1:	sbb    al,0x0
  42f0f3:	add    dl,dh
  42f0f5:	sbb    al,0x0
  42f0f7:	add    BYTE PTR [rcx+rdx*1],al
  42f0fa:	add    eax,DWORD PTR [rax]
  42f0fc:	add    BYTE PTR [rip+0x1e4e0000],bl        # 0x1e90f102
  42f102:	add    BYTE PTR [rax],al
  42f104:	adc    BYTE PTR [rcx],dl
  42f106:	add    eax,DWORD PTR [rax]
  42f108:	push   rax
  42f109:	(bad)  
  42f10a:	add    BYTE PTR [rax],al
  42f10c:	(bad)  
  42f10d:	(bad)  
  42f10e:	add    BYTE PTR [rax],al
  42f110:	sbb    al,0x11
  42f112:	add    eax,DWORD PTR [rax]
  42f114:	xor    BYTE PTR [rdi],bl
  42f116:	add    BYTE PTR [rax],al
  42f118:	cmp    al,0x20
  42f11a:	add    BYTE PTR [rax],al
  42f11c:	sub    BYTE PTR [rcx],dl
  42f11e:	add    eax,DWORD PTR [rax]
  42f120:	and    BYTE PTR [rax],al
  42f123:	add    BYTE PTR [rdx],dh
  42f125:	and    DWORD PTR [rax],eax
  42f127:	add    BYTE PTR [rcx+rdx*1],dh
  42f12a:	add    eax,DWORD PTR [rax]
  42f12c:	rex and DWORD PTR [rax],eax
  42f12f:	add    BYTE PTR [rdx],dh
  42f131:	and    al,BYTE PTR [rax]
  42f133:	add    BYTE PTR [rax+0x11],al
  42f136:	add    eax,DWORD PTR [rax]
  42f138:	and    al,BYTE PTR [rax]
  42f13b:	add    BYTE PTR [rcx],cl
  42f13d:	and    eax,DWORD PTR [rax]
  42f13f:	add    BYTE PTR [rcx+rdx*1+0x3],cl
  42f143:	add    BYTE PTR [rax],dl
  42f145:	and    eax,DWORD PTR [rax]
  42f147:	add    BYTE PTR [rdx+0x58000025],bh
  42f14d:	adc    DWORD PTR [rbx],eax
  42f14f:	add    al,al
  42f151:	and    eax,0x25f30000
  42f156:	add    BYTE PTR [rax],al
  42f158:	ins    BYTE PTR es:[rdi],dx
  42f159:	adc    DWORD PTR [rbx],eax
  42f15b:	add    BYTE PTR [rax],al
  42f15d:	add    BYTE PTR es:[rax],al
  42f160:	(bad)
  42f163:	add    BYTE PTR [rcx+rdx*1+0x3],dh
  42f167:	add    al,dl
  42f169:	add    BYTE PTR es:[rax],al
  42f16c:	sub    BYTE PTR ds:[rax],al
  42f16f:	add    BYTE PTR [rax+0x40000311],al
  42f175:	sub    BYTE PTR [rax],al
  42f177:	add    dh,bh
  42f179:	sub    BYTE PTR [rax],al
  42f17b:	add    BYTE PTR [rcx+rdx*1+0x29000003],cl
  42f182:	add    BYTE PTR [rax],al
  42f184:	mov    esi,0x98000029
  42f189:	adc    DWORD PTR [rbx],eax
  42f18b:	add    al,al
  42f18d:	sub    DWORD PTR [rax],eax
  42f18f:	add    BYTE PTR [rsi+0x2a],bh
  42f192:	add    BYTE PTR [rax],al
  42f194:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42f195:	adc    DWORD PTR [rbx],eax
  42f197:	add    BYTE PTR [rax+0x3e00002a],al
  42f19d:	sub    eax,DWORD PTR [rax]
  42f19f:	add    BYTE PTR [rax+0x40000311],dh
  42f1a5:	sub    eax,DWORD PTR [rax]
  42f1a7:	add    dh,bh
  42f1a9:	sub    eax,DWORD PTR [rax]
  42f1ab:	add    BYTE PTR [rcx+rdx*1+0x2c000003],bh
  42f1b2:	add    BYTE PTR [rax],al
  42f1b4:	mov    esi,0xc800002c
  42f1b9:	adc    DWORD PTR [rbx],eax
  42f1bb:	add    al,al
  42f1bd:	sub    al,0x0
  42f1bf:	add    BYTE PTR [rbp+rbp*1+0x11d40000],dh
  42f1c6:	add    eax,DWORD PTR [rax]
  42f1c8:	shr    BYTE PTR [rip+0x2e7e0000],0x0        # 0x2ec0f1cf
  42f1cf:	add    al,ah
  42f1d1:	adc    DWORD PTR [rbx],eax
  42f1d3:	add    BYTE PTR [rax+0x3e00002e],al
  42f1d9:	(bad)  
  42f1da:	add    BYTE PTR [rax],al
  42f1dc:	in     al,dx
  42f1dd:	adc    DWORD PTR [rbx],eax
  42f1df:	add    BYTE PTR [rax+0x2f],al
  42f1e2:	add    BYTE PTR [rax],al
  42f1e4:	(bad)  
  42f1e5:	(bad)  
  42f1e6:	add    BYTE PTR [rax],al
  42f1e8:	clc    
  42f1e9:	adc    DWORD PTR [rbx],eax
  42f1eb:	add    BYTE PTR [rax],al
  42f1ed:	xor    BYTE PTR [rax],al
  42f1ef:	add    BYTE PTR [rsi+0x4000030],bh
  42f1f5:	adc    al,BYTE PTR [rbx]
  42f1f7:	add    al,al
  42f1f9:	xor    BYTE PTR [rax],al
  42f1fb:	add    BYTE PTR [rsi+0x31],bh
  42f1fe:	add    BYTE PTR [rax],al
  42f200:	adc    BYTE PTR [rdx],dl
  42f202:	add    eax,DWORD PTR [rax]
  42f204:	xor    BYTE PTR [rcx],0x0
  42f207:	add    BYTE PTR [rsi],bh
  42f209:	xor    al,BYTE PTR [rax]
  42f20b:	add    BYTE PTR [rdx+rdx*1],bl
  42f20e:	add    eax,DWORD PTR [rax]
  42f210:	xor    al,BYTE PTR [rax]
  42f213:	add    dh,bh
  42f215:	xor    al,BYTE PTR [rax]
  42f217:	add    BYTE PTR [rax],ch
  42f219:	adc    al,BYTE PTR [rbx]
  42f21b:	add    BYTE PTR [rax],al
  42f21d:	xor    eax,DWORD PTR [rax]
  42f21f:	add    ch,al
  42f221:	xor    eax,DWORD PTR [rax]
  42f223:	add    BYTE PTR [rdx+rdx*1],dh
  42f226:	add    eax,DWORD PTR [rax]
  42f228:	shl    BYTE PTR [rbx],1
  42f22a:	add    BYTE PTR [rax],al
  42f22c:	es xor eax,0x12400000
  42f232:	add    eax,DWORD PTR [rax]
  42f234:	xor    BYTE PTR [rip+0x36690000],dh        # 0x36abf23a
  42f23a:	add    BYTE PTR [rax],al
  42f23c:	rex.WR adc r8b,BYTE PTR [rbx]
  42f23f:	add    BYTE PTR [rax+0x36],dh
  42f242:	add    BYTE PTR [rax],al
  42f244:	int    0x37
  42f246:	add    BYTE PTR [rax],al
  42f248:	pop    rax
  42f249:	adc    al,BYTE PTR [rbx]
  42f24b:	add    al,dl
  42f24d:	(bad)  
  42f24e:	add    BYTE PTR [rax],al
  42f250:	xchg   ebp,eax
  42f251:	cmp    BYTE PTR [rax],al
  42f253:	add    BYTE PTR [rdx+rdx*1+0x3],ah
  42f257:	add    BYTE PTR [rax+0x65000038],ah
  42f25d:	cmp    DWORD PTR [rax],eax
  42f25f:	add    BYTE PTR [rax+0x12],dh
  42f262:	add    eax,DWORD PTR [rax]
  42f264:	jo     0x42f29f
  42f266:	add    BYTE PTR [rax],al
  42f268:	ins    DWORD PTR es:[rdi],dx
  42f269:	cmp    al,BYTE PTR [rax]
  42f26b:	add    BYTE PTR [rdx+rdx*1+0x3],bh
  42f26f:	add    BYTE PTR [rax+0x3a],dh
  42f272:	add    BYTE PTR [rax],al
  42f274:	pop    rbp
  42f275:	cmp    eax,DWORD PTR [rax]
  42f277:	add    BYTE PTR [rax+0x60000312],cl
  42f27d:	cmp    eax,DWORD PTR [rax]
  42f27f:	add    BYTE PTR [rbp+0x3c],ah
  42f282:	add    BYTE PTR [rax],al
  42f284:	xchg   esp,eax
  42f285:	adc    al,BYTE PTR [rbx]
  42f287:	add    BYTE PTR [rax+0x3c],dh
  42f28a:	add    BYTE PTR [rax],al
  42f28c:	outs   dx,BYTE PTR ds:[rsi]
  42f28d:	cmp    eax,0x12a00000
  42f292:	add    eax,DWORD PTR [rax]
  42f294:	jo     0x42f2d3
  42f296:	add    BYTE PTR [rax],al
  42f298:	outs   dx,BYTE PTR ds:[rsi]
  42f299:	add    BYTE PTR ds:[rax],al
  42f29c:	lods   al,BYTE PTR ds:[rsi]
  42f29d:	adc    al,BYTE PTR [rbx]
  42f29f:	add    BYTE PTR [rax+0x3e],dh
  42f2a2:	add    BYTE PTR [rax],al
  42f2a4:	rex.WR (bad) 
  42f2a6:	add    BYTE PTR [rax],al
  42f2a8:	mov    eax,0x50000312
  42f2ad:	(bad)  
  42f2ae:	add    BYTE PTR [rax],al
  42f2b0:	push   rbx
  42f2b1:	add    BYTE PTR [rax],al
  42f2b4:	(bad)  
  42f2b5:	adc    al,BYTE PTR [rbx]
  42f2b7:	add    BYTE PTR [rax+0x40],ah
  42f2ba:	add    BYTE PTR [rax],al
  42f2bc:	data16 add BYTE PTR [r8],al
  42f2c0:	rcl    BYTE PTR [rdx],1
  42f2c2:	add    eax,DWORD PTR [rax]
  42f2c4:	jo     0x42f307
  42f2c6:	add    BYTE PTR [rax],al
  42f2c8:	cmp    eax,DWORD PTR [rdx+0x0]
  42f2cb:	add    ah,bl
  42f2cd:	adc    al,BYTE PTR [rbx]
  42f2cf:	add    BYTE PTR [rax+0x42],al
  42f2d2:	add    BYTE PTR [rax],al
  42f2d4:	rex.WB
  42f2d5:	rex.XB add BYTE PTR [r8],al
  42f2d8:	call   0x5042f5ef
  42f2dd:	rex.XB add BYTE PTR [r8],al
  42f2e0:	and    DWORD PTR [rax+rax*1+0x0],eax
  42f2e4:	hlt    
  42f2e5:	adc    al,BYTE PTR [rbx]
  42f2e7:	add    BYTE PTR [rax],dh
  42f2e9:	add    BYTE PTR [rax],r8b
  42f2ec:	add    DWORD PTR [rbp+0x0],eax
  42f2ef:	add    BYTE PTR [rax],al
  42f2f1:	adc    eax,DWORD PTR [rbx]
  42f2f3:	add    BYTE PTR [rax],dl
  42f2f5:	add    BYTE PTR [r8],r8b
  42f2f8:	in     eax,0x45
  42f2fa:	add    BYTE PTR [rax],al
  42f2fc:	or     al,0x13
  42f2fe:	add    eax,DWORD PTR [rax]
  42f300:	lock add BYTE PTR [r8],r8b
  42f304:	mov    DWORD PTR [rdi+0x0],eax
  42f307:	add    BYTE PTR [rax],bl
  42f309:	adc    eax,DWORD PTR [rbx]
  42f30b:	add    BYTE PTR [rax-0x23ffffb9],dl
  42f311:	rex.W add BYTE PTR [rax],al
  42f314:	and    al,0x13
  42f316:	add    eax,DWORD PTR [rax]
  42f318:	loopne 0x42f362
  42f31a:	add    BYTE PTR [rax],al
  42f31c:	cmp    cl,BYTE PTR [rbx+0x0]
  42f31f:	add    BYTE PTR [rax],dh
  42f321:	adc    eax,DWORD PTR [rbx]
  42f323:	add    BYTE PTR [rax+0x4b],al
  42f326:	add    BYTE PTR [rax],al
  42f328:	mov    BYTE PTR [rax+rax*1+0x0],cl
  42f32c:	adc    r8d,DWORD PTR [rbx]
  42f32f:	add    BYTE PTR [rax-0x4dffffb4],dl
  42f335:	rex.WR add BYTE PTR [rax],r8b
  42f338:	push   rax
  42f339:	adc    eax,DWORD PTR [rbx]
  42f33b:	add    al,al
  42f33d:	rex.WR add BYTE PTR [rax],r8b
  42f340:	out    0x4c,eax
  42f342:	add    BYTE PTR [rax],al
  42f344:	pop    rax
  42f345:	adc    eax,DWORD PTR [rbx]
  42f347:	add    al,dh
  42f349:	rex.WR add BYTE PTR [rax],r8b
  42f34c:	outs   dx,DWORD PTR ds:[rsi]
  42f34d:	rex.WRB add BYTE PTR [r8],r8b
  42f350:	(bad)  
  42f351:	adc    eax,DWORD PTR [rbx]
  42f353:	add    BYTE PTR [rax+0x4d],dh
  42f356:	add    BYTE PTR [rax],al
  42f358:	sti    
  42f359:	rex.WRX add BYTE PTR [rax],r8b
  42f35c:	jo     0x42f371
  42f35e:	add    eax,DWORD PTR [rax]
  42f360:	add    BYTE PTR [rdi+0x0],cl
  42f363:	add    BYTE PTR [rbp-0x77ffffb1],dl
  42f369:	adc    eax,DWORD PTR [rbx]
  42f36b:	add    BYTE PTR [rax-0x7ffffb1],ah
  42f371:	rex.WRXB add BYTE PTR [r8],r8b
  42f374:	cwde   
  42f375:	adc    eax,DWORD PTR [rbx]
  42f377:	add    BYTE PTR [rax],al
  42f379:	push   rax
  42f37a:	add    BYTE PTR [rax],al
  42f37c:	(bad)  
  42f37d:	push   rax
  42f37e:	add    BYTE PTR [rax],al
  42f380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42f381:	adc    eax,DWORD PTR [rbx]
  42f383:	add    al,ah
  42f385:	push   rax
  42f386:	add    BYTE PTR [rax],al
  42f388:	call   0xffffffffb842f3dd
  42f38d:	adc    eax,DWORD PTR [rbx]
  42f38f:	add    al,dh
  42f391:	push   rax
  42f392:	add    BYTE PTR [rax],al
  42f394:	pop    rsp
  42f395:	push   rsp
  42f396:	add    BYTE PTR [rax],al
  42f398:	mov    esp,0x60000313
  42f39d:	push   rsp
  42f39e:	add    BYTE PTR [rax],al
  42f3a0:	movabs ds:0xb0000313cc000054,eax
  42f3a9:	push   rsp
  42f3aa:	add    BYTE PTR [rax],al
  42f3ac:	std    
  42f3ad:	push   rsp
  42f3ae:	add    BYTE PTR [rax],al
  42f3b0:	(bad)  
  42f3b1:	adc    eax,DWORD PTR [rbx]
  42f3b3:	add    BYTE PTR [rax],al
  42f3b5:	push   rbp
  42f3b6:	add    BYTE PTR [rax],al
  42f3b8:	enter  0x55,0x0
  42f3bc:	fcom   QWORD PTR [rbx]
  42f3be:	add    eax,DWORD PTR [rax]
  42f3c0:	rcl    BYTE PTR [rbp+0x0],1
  42f3c3:	add    BYTE PTR [rbx-0x17ffffa8],dl
  42f3c9:	adc    eax,DWORD PTR [rbx]
  42f3cb:	add    BYTE PTR [rax-0x2fffffa8],ah
  42f3d1:	pop    rax
  42f3d2:	add    BYTE PTR [rax],al
  42f3d4:	add    BYTE PTR [rbx+rax*1],dl
  42f3d7:	add    al,dl
  42f3d9:	pop    rax
  42f3da:	add    BYTE PTR [rax],al
  42f3dc:	cmp    DWORD PTR [rcx+0x0],ebx
  42f3df:	add    BYTE PTR [rax],cl
  42f3e1:	adc    al,0x3
  42f3e3:	add    BYTE PTR [rax+0x59],al
  42f3e6:	add    BYTE PTR [rax],al
  42f3e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f3e9:	pop    rcx
  42f3ea:	add    BYTE PTR [rax],al
  42f3ec:	adc    al,0x14
  42f3ee:	add    eax,DWORD PTR [rax]
  42f3f0:	mov    al,0x59
  42f3f2:	add    BYTE PTR [rax],al
  42f3f4:	xlat   BYTE PTR ds:[rbx]
  42f3f5:	pop    rcx
  42f3f6:	add    BYTE PTR [rax],al
  42f3f8:	and    BYTE PTR [rbx+rax*1],dl
  42f3fb:	add    al,ah
  42f3fd:	pop    rcx
  42f3fe:	add    BYTE PTR [rax],al
  42f400:	xor    BYTE PTR [rdx+0x0],bl
  42f403:	add    BYTE PTR [rax],ch
  42f405:	adc    al,0x3
  42f407:	add    BYTE PTR [rax],dh
  42f409:	pop    rdx
  42f40a:	add    BYTE PTR [rax],al
  42f40c:	push   rdx
  42f40d:	pop    rdx
  42f40e:	add    BYTE PTR [rax],al
  42f410:	xor    BYTE PTR [rbx+rax*1],dl
  42f413:	add    BYTE PTR [rax+0x5a],ah
  42f416:	add    BYTE PTR [rax],al
  42f418:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42f419:	pop    rsp
  42f41a:	add    BYTE PTR [rax],al
  42f41c:	cmp    BYTE PTR [rbx+rax*1],dl
  42f41f:	add    BYTE PTR [rax-0x26ffffa4],dh
  42f425:	pop    rsp
  42f426:	add    BYTE PTR [rax],al
  42f428:	rex.R adc al,0x3
  42f42b:	add    al,ah
  42f42d:	pop    rsp
  42f42e:	add    BYTE PTR [rax],al
  42f430:	jns    0x42f48f
  42f432:	add    BYTE PTR [rax],al
  42f434:	rex.WR adc al,0x3
  42f437:	add    BYTE PTR [rax-0x4fffffa3],al
  42f43d:	pop    rsi
  42f43e:	add    BYTE PTR [rax],al
  42f440:	(bad)  
  42f441:	adc    al,0x3
  42f443:	add    BYTE PTR [rax-0x43ffffa2],dh
  42f449:	(bad)  
  42f44a:	add    BYTE PTR [rax],al
  42f44c:	ins    BYTE PTR es:[rdi],dx
  42f44d:	adc    al,0x3
  42f44f:	add    al,al
  42f451:	(bad)  
  42f452:	add    BYTE PTR [rax],al
  42f454:	in     eax,dx
  42f455:	(bad)  
  42f456:	add    BYTE PTR [rax],al
  42f458:	test   BYTE PTR [rbx+rax*1],dl
  42f45b:	add    al,dh
  42f45d:	(bad)  
  42f45e:	add    BYTE PTR [rax],al
  42f460:	or     ebp,DWORD PTR [rcx+0x0]
  42f463:	add    BYTE PTR [rax+0x10000314],dl
  42f469:	imul   eax,DWORD PTR [rax],0x6ad400
  42f46f:	add    BYTE PTR [rax-0x1ffffcec],ch
  42f475:	push   0x0
  42f477:	add    BYTE PTR [rbx+rsi*2+0x14b00000],cl
  42f47e:	add    eax,DWORD PTR [rax]
  42f480:	nop
  42f481:	jae    0x42f483
  42f483:	add    BYTE PTR [rbx-0x37ffff8c],ch
  42f489:	adc    al,0x3
  42f48b:	add    BYTE PTR [rax+0x5b000074],dh
  42f491:	js     0x42f493
  42f493:	add    al,bl
  42f495:	adc    al,0x3
  42f497:	add    BYTE PTR [rax+0x7c],ah
  42f49a:	add    BYTE PTR [rax],al
  42f49c:	jge    0x42f51a
  42f49e:	add    BYTE PTR [rax],al
  42f4a0:	lock adc al,0x3
  42f4a3:	add    BYTE PTR [rax-0x24ffff84],al
  42f4a9:	jl     0x42f4ab
  42f4ab:	add    al,bh
  42f4ad:	adc    al,0x3
  42f4af:	add    al,ah
  42f4b1:	jl     0x42f4b3
  42f4b3:	add    BYTE PTR [rbx],bh
  42f4b5:	jge    0x42f4b7
  42f4b7:	add    BYTE PTR [rdx*1+0x7d400003],al
  42f4be:	add    BYTE PTR [rax],al
  42f4c0:	jle    0x42f53f
  42f4c2:	add    BYTE PTR [rax],al
  42f4c4:	adc    BYTE PTR [rip+0x7d800003],dl        # 0x7dc2f4cd
  42f4ca:	add    BYTE PTR [rax],al
  42f4cc:	fnstcw WORD PTR [rbp+0x0]
  42f4cf:	add    BYTE PTR [rax],bl
  42f4d1:	adc    eax,0x7de00003
  42f4d6:	add    BYTE PTR [rax],al
  42f4d8:	rex jle 0x42f4db
  42f4db:	add    BYTE PTR [rdx*1+0x7e400003],ah
  42f4e2:	add    BYTE PTR [rax],al
  42f4e4:	xchg   esp,eax
  42f4e5:	jle    0x42f4e7
  42f4e7:	add    BYTE PTR [rdx*1+0x7ea00003],dh
  42f4ee:	add    BYTE PTR [rax],al
  42f4f0:	ret    0x7e
  42f4f3:	add    BYTE PTR [rax+0x15],al
  42f4f6:	add    eax,DWORD PTR [rax]
  42f4f8:	sar    BYTE PTR [rsi+0x0],1
  42f4fb:	add    BYTE PTR [rcx-0x80],ah
  42f4fe:	add    BYTE PTR [rax],al
  42f500:	adc    rax,0xffffffff80700003
  42f506:	add    BYTE PTR [rax],al
  42f508:	out    0x80,al
  42f50a:	add    BYTE PTR [rax],al
  42f50c:	pop    rsp
  42f50d:	adc    eax,0x80f00003
  42f512:	add    BYTE PTR [rax],al
  42f514:	xor    eax,0x68000081
  42f519:	adc    eax,0x81400003
  42f51e:	add    BYTE PTR [rax],al
  42f520:	lea    eax,[rdx+0x15740000]
  42f526:	add    eax,DWORD PTR [rax]
  42f528:	nop
  42f529:	(bad)  
  42f52a:	add    BYTE PTR [rax],al
  42f52c:	lods   eax,DWORD PTR ds:[rsi]
  42f52d:	(bad)  
  42f52e:	add    BYTE PTR [rax],al
  42f530:	test   BYTE PTR [rip+0xffffffff82b00003],dl        # 0xffffffff82f2f539
  42f536:	add    BYTE PTR [rax],al
  42f538:	xlat   BYTE PTR ds:[rbx]
  42f539:	(bad)  
  42f53a:	add    BYTE PTR [rax],al
  42f53c:	mov    WORD PTR [rip+0xffffffff82e00003],ss        # 0xffffffff8322f545
  42f542:	add    BYTE PTR [rax],al
  42f544:	(bad)  
  42f545:	add    DWORD PTR [rax],0x0
  42f548:	xchg   esp,eax
  42f549:	adc    eax,0x83100003
  42f54e:	add    BYTE PTR [rax],al
  42f550:	rex add DWORD PTR [rax],0x0
  42f554:	pushf  
  42f555:	adc    eax,0x83400003
  42f55a:	add    BYTE PTR [rax],al
  42f55c:	xchg   BYTE PTR [eax],al
  42f55f:	add    BYTE PTR [rax+0x70000315],ch
  42f565:	xchg   BYTE PTR [rax],al
  42f567:	add    bh,ch
  42f569:	xchg   DWORD PTR [rax],eax
  42f56b:	add    al,al
  42f56d:	adc    eax,0x87f00003
  42f572:	add    BYTE PTR [rax],al
  42f574:	pop    rax
  42f575:	mov    BYTE PTR [rax],al
  42f577:	add    al,bl
  42f579:	adc    eax,0x88600003
  42f57e:	add    BYTE PTR [rax],al
  42f580:	je     0x42f50a
  42f582:	add    BYTE PTR [rax],al
  42f584:	in     al,dx
  42f585:	adc    eax,0x88800003
  42f58a:	add    BYTE PTR [rax],al
  42f58c:	movabs ds:0xb0000315f4000088,al
  42f595:	mov    BYTE PTR [rax],al
  42f597:	add    BYTE PTR [rax-0x3ffff75],dl
  42f59d:	adc    eax,0x8b900003
  42f5a2:	add    BYTE PTR [rax],al
  42f5a4:	lods   al,BYTE PTR ds:[rsi]
  42f5a5:	mov    eax,DWORD PTR [rax]
  42f5a7:	add    BYTE PTR [rsi+rdx*1],cl
  42f5aa:	add    eax,DWORD PTR [rax]
  42f5ac:	mov    al,0x8b
  42f5ae:	add    BYTE PTR [rax],al
  42f5b0:	lock mov WORD PTR [rax],es
  42f5b3:	add    BYTE PTR [rax],dl
  42f5b5:	(bad)  
  42f5b6:	add    eax,DWORD PTR [rax]
  42f5b8:	lock mov WORD PTR [rax],es
  42f5bb:	add    BYTE PTR [rbx-0x72],dl
  42f5be:	add    BYTE PTR [rax],al
  42f5c0:	adc    al,0x16
  42f5c2:	add    eax,DWORD PTR [rax]
  42f5c4:	(bad)  
  42f5c5:	mov    es,WORD PTR [rax]
  42f5c7:	add    ch,ah
  42f5c9:	mov    es,WORD PTR [rax]
  42f5cb:	add    BYTE PTR [rax],bl
  42f5cd:	(bad)  
  42f5ce:	add    eax,DWORD PTR [rax]
  42f5d0:	lock mov es,WORD PTR [rax]
  42f5d3:	add    BYTE PTR [rcx+0x2400008f],dh
  42f5d9:	(bad)  
  42f5da:	add    eax,DWORD PTR [rax]
  42f5dc:	ror    BYTE PTR [rdi-0x6de80000],0x0
  42f5e3:	add    BYTE PTR [rsi+rdx*1],bh
  42f5e6:	add    eax,DWORD PTR [rax]
  42f5e8:	and    BYTE PTR [rdx-0x6d1f0000],dl
  42f5ee:	add    BYTE PTR [rax],al
  42f5f0:	rex.WR (bad) 
  42f5f2:	add    eax,DWORD PTR [rax]
  42f5f4:	lock xchg edx,eax
  42f5f6:	add    BYTE PTR [rax],al
  42f5f8:	xchg   ebx,eax
  42f5f9:	xchg   esp,eax
  42f5fa:	add    BYTE PTR [rax],al
  42f5fc:	(bad)  
  42f5fd:	(bad)  
  42f5fe:	add    eax,DWORD PTR [rax]
  42f600:	movabs al,ds:0x7000009620000094
  42f609:	(bad)  
  42f60a:	add    eax,DWORD PTR [rax]
  42f60c:	and    BYTE PTR [rsi-0x68fc0000],dl
  42f612:	add    BYTE PTR [rax],al
  42f614:	test   BYTE PTR [rsi],dl
  42f616:	add    eax,DWORD PTR [rax]
  42f618:	adc    BYTE PTR [rdi-0x68190000],dl
  42f61e:	add    BYTE PTR [rax],al
  42f620:	nop
  42f621:	(bad)  
  42f622:	add    eax,DWORD PTR [rax]
  42f624:	lock xchg edi,eax
  42f626:	add    BYTE PTR [rax],al
  42f628:	xchg   DWORD PTR [rax+0x169c0000],ebx
  42f62e:	add    eax,DWORD PTR [rax]
  42f630:	nop
  42f631:	cwde   
  42f632:	add    BYTE PTR [rax],al
  42f634:	rex.WRB (bad) 
  42f636:	add    BYTE PTR [rax],al
  42f638:	test   al,0x16
  42f63a:	add    eax,DWORD PTR [rax]
  42f63c:	push   rax
  42f63d:	(bad)  
  42f63e:	add    BYTE PTR [rax],al
  42f640:	movabs eax,ds:0xb0000316b400009a
  42f649:	(bad)  
  42f64a:	add    BYTE PTR [rax],al
  42f64c:	outs   dx,DWORD PTR ds:[rsi]
  42f64d:	fwait
  42f64e:	add    BYTE PTR [rax],al
  42f650:	rcl    BYTE PTR [rsi],0x3
  42f653:	add    BYTE PTR [rax-0x65],dh
  42f656:	add    BYTE PTR [rax],al
  42f658:	(bad)  
  42f659:	pushf  
  42f65a:	add    BYTE PTR [rax],al
  42f65c:	rcl    BYTE PTR [rsi],1
  42f65e:	add    eax,DWORD PTR [rax]
  42f660:	loopne 0x42f5fe
  42f662:	add    BYTE PTR [rax],al
  42f664:	and    DWORD PTR [rbp+0x16e40000],ebx
  42f66a:	add    eax,DWORD PTR [rax]
  42f66c:	xor    BYTE PTR [rbp-0x62160000],bl
  42f672:	add    BYTE PTR [rax],al
  42f674:	lock (bad) 
  42f676:	add    eax,DWORD PTR [rax]
  42f678:	lock popf 
  42f67a:	add    BYTE PTR [rax],al
  42f67c:	sbb    BYTE PTR [rax+0x17000000],ah
  42f682:	add    eax,DWORD PTR [rax]
  42f684:	and    BYTE PTR [rax-0x5de50000],ah
  42f68a:	add    BYTE PTR [rax],al
  42f68c:	sbb    BYTE PTR [rdi],dl
  42f68e:	add    eax,DWORD PTR [rax]
  42f690:	and    BYTE PTR [rdx-0x5d280000],ah
  42f696:	add    BYTE PTR [rax],al
  42f698:	and    al,0x17
  42f69a:	add    eax,DWORD PTR [rax]
  42f69c:	loopne 0x42f640
  42f69e:	add    BYTE PTR [rax],al
  42f6a0:	test   eax,0x340000a4
  42f6a5:	(bad)  
  42f6a6:	add    eax,DWORD PTR [rax]
  42f6a8:	mov    al,0xa4
  42f6aa:	add    BYTE PTR [rax],al
  42f6ac:	or     BYTE PTR [rsi+0x174c0000],ah
  42f6b2:	add    eax,DWORD PTR [rax]
  42f6b4:	adc    BYTE PTR [rsi-0x587b0000],ah
  42f6ba:	add    BYTE PTR [rax],al
  42f6bc:	(bad)  
  42f6bd:	(bad)  
  42f6be:	add    eax,DWORD PTR [rax]
  42f6c0:	nop
  42f6c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42f6c2:	add    BYTE PTR [rax],al
  42f6c4:	fsub   QWORD PTR [rdi+0x17780000]
  42f6ca:	add    eax,DWORD PTR [rax]
  42f6cc:	loopne 0x42f675
  42f6ce:	add    BYTE PTR [rax],al
  42f6d0:	rex.W lods al,BYTE PTR ds:[rsi]
  42f6d2:	add    BYTE PTR [rax],al
  42f6d4:	test   BYTE PTR [rdi],dl
  42f6d6:	add    eax,DWORD PTR [rax]
  42f6d8:	push   rax
  42f6d9:	lods   al,BYTE PTR ds:[rsi]
  42f6da:	add    BYTE PTR [rax],al
  42f6dc:	sbb    esi,DWORD PTR [rax+0x179c0000]
  42f6e2:	add    eax,DWORD PTR [rax]
  42f6e4:	and    BYTE PTR [rax-0x4e280000],dh
  42f6ea:	add    BYTE PTR [rax],al
  42f6ec:	mov    ah,0x17
  42f6ee:	add    eax,DWORD PTR [rax]
  42f6f0:	loopne 0x42f6a3
  42f6f2:	add    BYTE PTR [rax],al
  42f6f4:	sar    BYTE PTR [rax+0x17c40000],1
  42f6fa:	add    eax,DWORD PTR [rax]
  42f6fc:	sar    BYTE PTR [rax-0x43470000],1
  42f702:	add    BYTE PTR [rax],al
  42f704:	fcom   QWORD PTR [rdi]
  42f706:	add    eax,DWORD PTR [rax]
  42f708:	sar    BYTE PTR [rax+rax*1+0xc14700],0x0
  42f710:	hlt    
  42f711:	(bad)  
  42f712:	add    eax,DWORD PTR [rax]
  42f714:	push   rax
  42f715:	rol    DWORD PTR [rax],0x0
  42f718:	or     ecx,eax
  42f71a:	add    BYTE PTR [rax],al
  42f71c:	or     al,0x18
  42f71e:	add    eax,DWORD PTR [rax]
  42f720:	adc    al,cl
  42f722:	add    BYTE PTR [rax],al
  42f724:	(bad)  
  42f725:	enter  0x0,0x24
  42f729:	sbb    BYTE PTR [rbx],al
  42f72b:	add    BYTE PTR [rax+0xd0000c8],dl
  42f731:	leave  
  42f732:	add    BYTE PTR [rax],al
  42f734:	xor    al,0x18
  42f736:	add    eax,DWORD PTR [rax]
  42f738:	adc    cl,cl
  42f73a:	add    BYTE PTR [rax],al
  42f73c:	(bad)  
  42f73d:	leave  
  42f73e:	add    BYTE PTR [rax],al
  42f740:	sbb    BYTE PTR [rbx],r8b
  42f743:	add    al,ah
  42f745:	leave  
  42f746:	add    BYTE PTR [rax],al
  42f748:	xchg   esi,eax
  42f749:	retf   0x0
  42f74c:	rex.WR sbb BYTE PTR [rbx],r8b
  42f74f:	add    BYTE PTR [rax+0x230000ca],ah
  42f755:	retf   
  42f756:	add    BYTE PTR [rax],al
  42f758:	pop    rax
  42f759:	sbb    BYTE PTR [rbx],al
  42f75b:	add    BYTE PTR [rax],dh
  42f75d:	retf   
  42f75e:	add    BYTE PTR [rax],al
  42f760:	ror    bl,1
  42f762:	add    BYTE PTR [rax],al
  42f764:	(bad)  
  42f765:	sbb    BYTE PTR [rbx],al
  42f767:	add    al,dl
  42f769:	retf   
  42f76a:	add    BYTE PTR [rax],al
  42f76c:	jg     0x42f73a
  42f76e:	add    BYTE PTR [rax],al
  42f770:	jo     0x42f78a
  42f772:	add    eax,DWORD PTR [rax]
  42f774:	or     ah,0x0
  42f777:	add    dh,bh
  42f779:	int3   
  42f77a:	add    BYTE PTR [rax],al
  42f77c:	sbb    BYTE PTR [rax],0x3
  42f77f:	add    BYTE PTR [rax],al
  42f781:	int    0x0
  42f783:	add    ah,ah
  42f785:	(bad)  
  42f786:	add    BYTE PTR [rax],al
  42f788:	mov    BYTE PTR [rax],bl
  42f78a:	add    eax,DWORD PTR [rax]
  42f78c:	lock (bad) 
  42f78e:	add    BYTE PTR [rax],al
  42f790:	sub    ecx,edx
  42f792:	add    BYTE PTR [rax],al
  42f794:	xchg   esp,eax
  42f795:	sbb    BYTE PTR [rbx],al
  42f797:	add    BYTE PTR [rax],dh
  42f799:	rol    DWORD PTR [rax],1
  42f79b:	add    BYTE PTR [rax-0x22],al
  42f79e:	add    BYTE PTR [rax],al
  42f7a0:	test   al,0x18
  42f7a2:	add    eax,DWORD PTR [rax]
  42f7a4:	rex fiadd WORD PTR [rax]
  42f7a7:	add    BYTE PTR [rdx-0x22],bh
  42f7aa:	add    BYTE PTR [rax],al
  42f7ac:	rcr    BYTE PTR [rax],0x3
  42f7af:	add    BYTE PTR [rax-0x7affff22],al
  42f7b5:	fild   WORD PTR [rax]
  42f7b7:	add    ah,cl
  42f7b9:	sbb    BYTE PTR [rbx],al
  42f7bb:	add    BYTE PTR [rax-0x48ffff21],dl
  42f7c1:	fild   WORD PTR [rax]
  42f7c3:	add    ah,dl
  42f7c5:	sbb    BYTE PTR [rbx],al
  42f7c7:	add    al,al
  42f7c9:	fild   WORD PTR [rax]
  42f7cb:	add    ch,cl
  42f7cd:	in     eax,0x0
  42f7cf:	add    al,ah
  42f7d1:	sbb    BYTE PTR [rbx],al
  42f7d3:	add    al,dl
  42f7d5:	in     eax,0x0
  42f7d7:	add    BYTE PTR [rsi-0x18],bh
  42f7da:	add    BYTE PTR [rax],al
  42f7dc:	clc    
  42f7dd:	sbb    BYTE PTR [rbx],al
  42f7df:	add    BYTE PTR [rax-0x16ffff18],al
  42f7e5:	(bad)  
  42f7e6:	add    BYTE PTR [rax],al
  42f7e8:	adc    BYTE PTR [rcx],bl
  42f7ea:	add    eax,DWORD PTR [rax]
  42f7ec:	lock (bad) 
  42f7ee:	add    BYTE PTR [rax],al
  42f7f0:	adc    al,0xec
  42f7f2:	add    BYTE PTR [rax],al
  42f7f4:	sub    BYTE PTR [rcx],bl
  42f7f6:	add    eax,DWORD PTR [rax]
  42f7f8:	and    ah,ch
  42f7fa:	add    BYTE PTR [rax],al
  42f7fc:	sahf   
  42f7fd:	hlt    
  42f7fe:	add    BYTE PTR [rax],al
  42f800:	rex sbb DWORD PTR [rbx],eax
  42f803:	add    BYTE PTR [rax-0x25ffff0c],ah
  42f809:	hlt    
  42f80a:	add    BYTE PTR [rax],al
  42f80c:	pop    rax
  42f80d:	sbb    DWORD PTR [rbx],eax
  42f80f:	add    al,ah
  42f811:	hlt    
  42f812:	add    BYTE PTR [rax],al
  42f814:	jae    0x42f80b
  42f816:	add    BYTE PTR [rax],al
  42f818:	(bad)  
  42f819:	sbb    DWORD PTR [rbx],eax
  42f81b:	add    BYTE PTR [rax+0x6a0000f5],al
  42f821:	test   DWORD PTR [rax],0x3196c00
  42f827:	add    BYTE PTR [rax-0x9],dh
  42f82a:	add    BYTE PTR [rax],al
  42f82c:	mov    ch,0xf9
  42f82e:	add    BYTE PTR [rax],al
  42f830:	jl     0x42f84b
  42f832:	add    eax,DWORD PTR [rax]
  42f834:	sar    cl,0x0
  42f837:	add    BYTE PTR [rsi],cl
  42f839:	cli    
  42f83a:	add    BYTE PTR [rax],al
  42f83c:	xchg   esp,eax
  42f83d:	sbb    DWORD PTR [rbx],eax
  42f83f:	add    BYTE PTR [rax],dl
  42f841:	cli    
  42f842:	add    BYTE PTR [rax],al
  42f844:	or     edi,edi
  42f846:	add    BYTE PTR [rax],al
  42f848:	movabs al,ds:0xb90000ff10000319
  42f851:	inc    DWORD PTR [rax]
  42f853:	add    BYTE PTR [rax-0x3ffffce7],bh
  42f859:	inc    DWORD PTR [rax]
  42f85b:	add    dh,bh
  42f85d:	add    BYTE PTR [rcx],al
  42f85f:	add    ah,al
  42f861:	sbb    DWORD PTR [rbx],eax
  42f863:	add    BYTE PTR [rax],al
  42f865:	add    DWORD PTR [rcx],eax
  42f867:	add    dh,bl
  42f869:	add    DWORD PTR [rcx],eax
  42f86b:	add    al,bl
  42f86d:	sbb    DWORD PTR [rbx],eax
  42f86f:	add    al,ah
  42f871:	add    DWORD PTR [rcx],eax
  42f873:	add    BYTE PTR [rdi],ah
  42f875:	(bad)  
  42f876:	add    DWORD PTR [rax],eax
  42f878:	call   0x3042fb96
  42f87d:	(bad)  
  42f87e:	add    DWORD PTR [rax],eax
  42f880:	rex.RB (bad) 
  42f882:	add    DWORD PTR [rax],eax
  42f884:	add    BYTE PTR [rdx],bl
  42f886:	add    eax,DWORD PTR [rax]
  42f888:	push   rax
  42f889:	(bad)  
  42f88a:	add    DWORD PTR [rax],eax
  42f88c:	xchg   esi,eax
  42f88d:	(bad)  
  42f88e:	add    DWORD PTR [rax],eax
  42f890:	add    al,0x1a
  42f892:	add    eax,DWORD PTR [rax]
  42f894:	movabs al,ds:0xc000106ee000106
  42f89d:	sbb    al,BYTE PTR [rbx]
  42f89f:	add    al,dh
  42f8a1:	(bad)  
  42f8a2:	add    DWORD PTR [rax],eax
  42f8a4:	ins    BYTE PTR es:[rdi],dx
  42f8a5:	or     eax,DWORD PTR [rcx]
  42f8a7:	add    BYTE PTR [rdx+rbx*1],dl
  42f8aa:	add    eax,DWORD PTR [rax]
  42f8ac:	jo     0x42f8b9
  42f8ae:	add    DWORD PTR [rax],eax
  42f8b0:	scas   eax,DWORD PTR es:[rdi]
  42f8b1:	or     al,0x1
  42f8b3:	add    BYTE PTR [rdx+rbx*1],ch
  42f8b6:	add    eax,DWORD PTR [rax]
  42f8b8:	mov    al,0xc
  42f8ba:	add    DWORD PTR [rax],eax
  42f8bc:	stos   BYTE PTR es:[rdi],al
  42f8bd:	or     eax,0x1a380001
  42f8c2:	add    eax,DWORD PTR [rax]
  42f8c4:	mov    al,0xd
  42f8c6:	add    DWORD PTR [rax],eax
  42f8c8:	popf   
  42f8c9:	(bad)  
  42f8ca:	add    DWORD PTR [rax],eax
  42f8cc:	sbb    r8b,BYTE PTR [rbx]
  42f8cf:	add    BYTE PTR [rax-0x17fffef2],ah
  42f8d5:	adc    DWORD PTR [rcx],eax
  42f8d7:	add    BYTE PTR [rax+0x1a],dl
  42f8da:	add    eax,DWORD PTR [rax]
  42f8dc:	lock adc DWORD PTR [rcx],eax
  42f8df:	add    BYTE PTR [rax+0x12],ah
  42f8e2:	add    DWORD PTR [rax],eax
  42f8e4:	sbb    al,BYTE PTR fs:[rbx]
  42f8e7:	add    BYTE PTR [rax+0x12],ah
  42f8ea:	add    DWORD PTR [rax],eax
  42f8ec:	scas   al,BYTE PTR es:[rdi]
  42f8ed:	adc    eax,DWORD PTR [rcx]
  42f8ef:	add    BYTE PTR [rax+0x1a],dh
  42f8f2:	add    eax,DWORD PTR [rax]
  42f8f4:	mov    al,0x13
  42f8f6:	add    DWORD PTR [rax],eax
  42f8f8:	test   al,0x15
  42f8fa:	add    DWORD PTR [rax],eax
  42f8fc:	sbb    BYTE PTR [rdx],0x3
  42f8ff:	add    BYTE PTR [rax-0x4afffeeb],dh
  42f905:	(bad)  
  42f906:	add    DWORD PTR [rax],eax
  42f908:	nop
  42f909:	sbb    al,BYTE PTR [rbx]
  42f90b:	add    al,al
  42f90d:	(bad)  
  42f90e:	add    DWORD PTR [rax],eax
  42f910:	xchg   edi,eax
  42f911:	sbb    BYTE PTR [rcx],al
  42f913:	add    BYTE PTR [rdx+rbx*1+0x18a00003],ah
  42f91a:	add    DWORD PTR [rax],eax
  42f91c:	push   rdi
  42f91d:	sbb    DWORD PTR [rcx],eax
  42f91f:	add    BYTE PTR [rax+0x6000031a],bh
  42f925:	sbb    DWORD PTR [rcx],eax
  42f927:	add    BYTE PTR [rax+0x1b],bl
  42f92a:	add    DWORD PTR [rax],eax
  42f92c:	enter  0x31a,0x0
  42f930:	(bad)  
  42f931:	sbb    eax,DWORD PTR [rcx]
  42f933:	add    BYTE PTR [rdi-0x27fffee5],dh
  42f939:	sbb    al,BYTE PTR [rbx]
  42f93b:	add    al,al
  42f93d:	sbb    eax,DWORD PTR [rcx]
  42f93f:	add    dl,bh
  42f941:	sbb    eax,DWORD PTR [rcx]
  42f943:	add    ah,ah
  42f945:	sbb    al,BYTE PTR [rbx]
  42f947:	add    BYTE PTR [rax],al
  42f949:	sbb    al,0x1
  42f94b:	add    BYTE PTR [rsi+0x1c],dl
  42f94e:	add    DWORD PTR [rax],eax
  42f950:	call   0x6042fc6f
  42f955:	sbb    al,0x1
  42f957:	add    BYTE PTR [rcx-0x13fffee4],dl
  42f95d:	sbb    al,BYTE PTR [rbx]
  42f95f:	add    BYTE PTR [rax-0x35fffee4],ah
  42f965:	sbb    al,0x1
  42f967:	add    al,dh
  42f969:	sbb    al,BYTE PTR [rbx]
  42f96b:	add    al,dl
  42f96d:	sbb    al,0x1
  42f96f:	add    BYTE PTR [rbx],al
  42f971:	(bad)  
  42f972:	add    DWORD PTR [rax],eax
  42f974:	hlt    
  42f975:	sbb    al,BYTE PTR [rbx]
  42f977:	add    BYTE PTR [rax],dl
  42f979:	(bad)  
  42f97a:	add    DWORD PTR [rax],eax
  42f97c:	xchg   ebx,eax
  42f97d:	(bad)  
  42f97e:	add    DWORD PTR [rax],eax
  42f980:	add    al,0x1b
  42f982:	add    eax,DWORD PTR [rax]
  42f984:	movabs al,ds:0x1000012a3200011f
  42f98d:	sbb    eax,DWORD PTR [rbx]
  42f98f:	add    BYTE PTR [rax+0x2a],al
  42f992:	add    DWORD PTR [rax],eax
  42f994:	or     ch,BYTE PTR [rcx+rax*1]
  42f997:	add    BYTE PTR [rax],ch
  42f999:	sbb    eax,DWORD PTR [rbx]
  42f99b:	add    BYTE PTR [rax],dl
  42f99d:	sub    al,0x1
  42f99f:	add    BYTE PTR [rdi+0x2c],al
  42f9a2:	add    DWORD PTR [rax],eax
  42f9a4:	rex sbb eax,DWORD PTR [rbx]
  42f9a7:	add    BYTE PTR [rax+0x2c],dl
  42f9aa:	add    DWORD PTR [rax],eax
  42f9ac:	loope  0x42f9da
  42f9ae:	add    DWORD PTR [rax],eax
  42f9b0:	sbb    r8,QWORD PTR [rbx]
  42f9b3:	add    al,dh
  42f9b5:	sub    al,0x1
  42f9b7:	add    BYTE PTR [rbp+rbp*1+0x1b580001],dl
  42f9be:	add    eax,DWORD PTR [rax]
  42f9c0:	movabs al,ds:0x6800012e4d00012d
  42f9c9:	sbb    eax,DWORD PTR [rbx]
  42f9cb:	add    BYTE PTR [rax+0x2e],dl
  42f9ce:	add    DWORD PTR [rax],eax
  42f9d0:	je     0x42fa00
  42f9d2:	add    DWORD PTR [rax],eax
  42f9d4:	jl     0x42f9f1
  42f9d6:	add    eax,DWORD PTR [rax]
  42f9d8:	sub    BYTE PTR [rsi],0x1
  42f9db:	add    BYTE PTR [rbp+0x32],dh
  42f9de:	add    DWORD PTR [rax],eax
  42f9e0:	test   BYTE PTR [rbx],bl
  42f9e2:	add    eax,DWORD PTR [rax]
  42f9e4:	xor    BYTE PTR [rdx],0x1
  42f9e7:	add    BYTE PTR [rsp+rsi*1+0x1b940001],cl
  42f9ee:	add    eax,DWORD PTR [rax]
  42f9f0:	nop
  42f9f1:	xor    al,0x1
  42f9f3:	add    BYTE PTR [rdx-0x53fffec4],bl
  42f9f9:	sbb    eax,DWORD PTR [rbx]
  42f9fb:	add    BYTE PTR [rax+0x4700013c],ah
  42fa01:	cmp    eax,0x1bc40001
  42fa06:	add    eax,DWORD PTR [rax]
  42fa08:	push   rax
  42fa09:	cmp    eax,0x3e840001
  42fa0e:	add    DWORD PTR [rax],eax
  42fa10:	rcr    BYTE PTR [rbx],1
  42fa12:	add    eax,DWORD PTR [rax]
  42fa14:	nop
  42fa15:	add    DWORD PTR ds:[rax],eax
  42fa18:	fadd   QWORD PTR [rcx+rax*1+0x0]
  42fa1c:	call   0xffffffffe042fd3c
  42fa21:	add    DWORD PTR [rax],r8d
  42fa24:	(bad)  
  42fa25:	add    DWORD PTR [rax],r8d
  42fa28:	clc    
  42fa29:	sbb    eax,DWORD PTR [rbx]
  42fa2b:	add    al,dh
  42fa2d:	add    DWORD PTR [rax],r8d
  42fa30:	add    eax,DWORD PTR [rbp+0x1]
  42fa33:	add    BYTE PTR [rax],al
  42fa35:	sbb    al,0x3
  42fa37:	add    BYTE PTR [rax],dl
  42fa39:	add    DWORD PTR [r8],r8d
  42fa3c:	sbb    BYTE PTR [rbp+0x1],al
  42fa3f:	add    BYTE PTR [rax],cl
  42fa41:	sbb    al,0x3
  42fa43:	add    BYTE PTR [rax],ah
  42fa45:	add    DWORD PTR [r8],r8d
  42fa48:	je     0x42fa8f
  42fa4a:	add    DWORD PTR [rax],eax
  42fa4c:	or     al,0x1c
  42fa4e:	add    eax,DWORD PTR [rax]
  42fa50:	add    BYTE PTR [rbp+0x1],0x0
  42fa54:	mov    ebx,0x18000145
  42fa59:	sbb    al,0x3
  42fa5b:	add    al,al
  42fa5d:	add    DWORD PTR [r8],r8d
  42fa60:	cmc    
  42fa61:	add    DWORD PTR [r8],r8d
  42fa64:	and    al,0x1c
  42fa66:	add    eax,DWORD PTR [rax]
  42fa68:	add    BYTE PTR [rsi+0x1],al
  42fa6b:	add    BYTE PTR [rdx+0x47],al
  42fa6e:	add    DWORD PTR [rax],eax
  42fa70:	sub    al,0x1c
  42fa72:	add    eax,DWORD PTR [rax]
  42fa74:	push   rax
  42fa75:	rex.RXB add DWORD PTR [r8],r8d
  42fa78:	fimul  WORD PTR [rcx+0x1]
  42fa7b:	add    BYTE PTR [rax],bh
  42fa7d:	sbb    al,0x3
  42fa7f:	add    al,ah
  42fa81:	add    QWORD PTR [r8],rax
  42fa84:	jnp    0x42fad2
  42fa86:	add    DWORD PTR [rax],eax
  42fa88:	push   rax
  42fa89:	sbb    al,0x3
  42fa8b:	add    BYTE PTR [rax-0x62fffeb4],al
  42fa91:	add    QWORD PTR [rax],r8
  42fa94:	push   0xffffffffa000031c
  42fa99:	add    QWORD PTR [rax],r8
  42fa9c:	in     eax,0x4c
  42fa9e:	add    DWORD PTR [rax],eax
  42faa0:	jo     0x42fabe
  42faa2:	add    eax,DWORD PTR [rax]
  42faa4:	lock add QWORD PTR [rax],r8
  42faa8:	mov    WORD PTR [rbp+0x1],cs
  42faab:	add    BYTE PTR [rax+0x1c],bh
  42faae:	add    eax,DWORD PTR [rax]
  42fab0:	nop
  42fab1:	add    QWORD PTR [r8],r8
  42fab4:	lods   eax,DWORD PTR ds:[rsi]
  42fab5:	add    QWORD PTR [r8],r8
  42fab8:	mov    BYTE PTR [rbx+rax*1],bl
  42fabb:	add    BYTE PTR [rax+0x3d00014d],dh
  42fac1:	imul   eax,DWORD PTR [rcx],0x0
  42fac4:	nop
  42fac5:	sbb    al,0x3
  42fac7:	add    BYTE PTR [rax+0x6b],al
  42faca:	add    DWORD PTR [rax],eax
  42facc:	out    0x6b,eax
  42face:	add    DWORD PTR [rax],eax
  42fad0:	lods   al,BYTE PTR ds:[rsi]
  42fad1:	sbb    al,0x3
  42fad3:	add    al,dh
  42fad5:	imul   eax,DWORD PTR [rcx],0x0
  42fad8:	icebp  
  42fad9:	imul   eax,DWORD PTR [rcx],0x0
  42fadc:	mov    al,0x1c
  42fade:	add    eax,DWORD PTR [rax]
  42fae0:	add    BYTE PTR [rcx+rax*1+0x0],ch
  42fae4:	sub    ch,BYTE PTR [rcx+rax*1+0x0]
  42fae8:	mov    ah,0x1c
  42faea:	add    eax,DWORD PTR [rax]
  42faec:	xor    BYTE PTR [rcx+rax*1+0x0],ch
  42faf0:	sbb    ch,BYTE PTR [rbp+0x1]
  42faf3:	add    BYTE PTR [rsp+rbx*1+0x6d200003],bh
  42fafa:	add    DWORD PTR [rax],eax
  42fafc:	(bad)  
  42fafd:	js     0x42fb00
  42faff:	add    al,al
  42fb01:	sbb    al,0x3
  42fb03:	add    BYTE PTR [rax],al
  42fb05:	jns    0x42fb08
  42fb07:	add    BYTE PTR [rax],bl
  42fb09:	jns    0x42fb0c
  42fb0b:	add    al,bl
  42fb0d:	sbb    al,0x3
  42fb0f:	add    BYTE PTR [rax],ah
  42fb11:	jns    0x42fb14
  42fb13:	add    BYTE PTR [rsi],ch
  42fb15:	jns    0x42fb18
  42fb17:	add    al,ah
  42fb19:	sbb    al,0x3
  42fb1b:	add    BYTE PTR [rax],dh
  42fb1d:	jns    0x42fb20
  42fb1f:	add    BYTE PTR [rdi*2+0x1ce40001],bh
  42fb26:	add    eax,DWORD PTR [rax]
  42fb28:	rex jge 0x42fb2c
  42fb2b:	add    BYTE PTR [rbp+0x7d],al
  42fb2e:	add    DWORD PTR [rax],eax
  42fb30:	lock sbb al,0x3
  42fb33:	add    BYTE PTR [rax+0x7d],dl
  42fb36:	add    DWORD PTR [rax],eax
  42fb38:	add    DWORD PTR [rsi+0x1],edi
  42fb3b:	add    ah,dh
  42fb3d:	sbb    al,0x3
  42fb3f:	add    BYTE PTR [rax],dl
  42fb41:	jle    0x42fb44
  42fb43:	add    dl,al
  42fb45:	add    DWORD PTR [rcx],0x31d0400
  42fb4b:	add    al,dl
  42fb4d:	add    DWORD PTR [rcx],0x185c400
  42fb53:	add    BYTE PTR [rax],dl
  42fb55:	sbb    eax,0x85d00003
  42fb5a:	add    DWORD PTR [rax],eax
  42fb5c:	mov    esi,0x2c000192
  42fb61:	sbb    eax,0x92c00003
  42fb66:	add    DWORD PTR [rax],eax
  42fb68:	jb     0x42fb00
  42fb6a:	add    DWORD PTR [rax],eax
  42fb6c:	sbb    rax,0xffffffff96800003
  42fb72:	add    DWORD PTR [rax],eax
  42fb74:	xchg   ebp,eax
  42fb75:	(bad)  
  42fb76:	add    DWORD PTR [rax],eax
  42fb78:	push   rsp
  42fb79:	sbb    eax,0x9aa00003
  42fb7e:	add    DWORD PTR [rax],eax
  42fb80:	fs sahf 
  42fb82:	add    DWORD PTR [rax],eax
  42fb84:	(bad)  
  42fb85:	sbb    eax,0x9e700003
  42fb8a:	add    DWORD PTR [rax],eax
  42fb8c:	adc    eax,0x6c0001a2
  42fb91:	sbb    eax,0xa2200003
  42fb96:	add    DWORD PTR [rax],eax
  42fb98:	pop    rsp
  42fb99:	movabs ds:0xa26000031d780001,al
  42fba2:	add    DWORD PTR [rax],eax
  42fba4:	nop
  42fba5:	movabs ds:0xa29000031d840001,al
  42fbae:	add    DWORD PTR [rax],eax
  42fbb0:	je     0x42fb55
  42fbb2:	add    DWORD PTR [rax],eax
  42fbb4:	mov    WORD PTR [rip+0xffffffffa3800003],ds        # 0xffffffffa3c2fbbd
  42fbba:	add    DWORD PTR [rax],eax
  42fbbc:	push   0xffffffff980001a7
  42fbc1:	sbb    eax,0xa7700003
  42fbc6:	add    DWORD PTR [rax],eax
  42fbc8:	xchg   esi,eax
  42fbc9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42fbca:	add    DWORD PTR [rax],eax
  42fbcc:	pushf  
  42fbcd:	sbb    eax,0xa7a00003
  42fbd2:	add    DWORD PTR [rax],eax
  42fbd4:	(bad)  
  42fbd5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42fbd6:	add    DWORD PTR [rax],eax
  42fbd8:	movabs al,ds:0xef0001a7e000031d
  42fbe1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42fbe2:	add    DWORD PTR [rax],eax
  42fbe4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42fbe5:	sbb    eax,0xa7f00003
  42fbea:	add    DWORD PTR [rax],eax
  42fbec:	adc    ebp,DWORD PTR [rax+0x1da80001]
  42fbf2:	add    eax,DWORD PTR [rax]
  42fbf4:	and    BYTE PTR [rax-0x5761ffff],ch
  42fbfa:	add    DWORD PTR [rax],eax
  42fbfc:	mov    al,0x1d
  42fbfe:	add    eax,DWORD PTR [rax]
  42fc00:	movabs al,ds:0xb80001a8d90001a8
  42fc09:	sbb    eax,0xa8e00003
  42fc0e:	add    DWORD PTR [rax],eax
  42fc10:	(bad)  
  42fc11:	lods   eax,DWORD PTR ds:[rsi]
  42fc12:	add    DWORD PTR [rax],eax
  42fc14:	mov    esp,0x2000031d
  42fc19:	lods   eax,DWORD PTR ds:[rsi]
  42fc1a:	add    DWORD PTR [rax],eax
  42fc1c:	rex.X mov cl,0x1
  42fc1f:	add    ah,cl
  42fc21:	sbb    eax,0xb1500003
  42fc26:	add    DWORD PTR [rax],eax
  42fc28:	ret    0x1b1
  42fc2b:	add    ah,bl
  42fc2d:	sbb    eax,0xb1d00003
  42fc32:	add    DWORD PTR [rax],eax
  42fc34:	std    
  42fc35:	mov    cl,0x1
  42fc37:	add    al,ch
  42fc39:	sbb    eax,0xb2c00003
  42fc3e:	add    DWORD PTR [rax],eax
  42fc40:	(bad)  
  42fc41:	mov    dl,0x1
  42fc43:	add    al,dh
  42fc45:	sbb    eax,0xb2f00003
  42fc4a:	add    DWORD PTR [rax],eax
  42fc4c:	xor    DWORD PTR [rbx+0x1df80001],esi
  42fc52:	add    eax,DWORD PTR [rax]
  42fc54:	(bad)  
  42fc55:	mov    bl,0x1
  42fc57:	add    BYTE PTR [rdi],al
  42fc59:	mov    ah,0x1
  42fc5b:	add    BYTE PTR [rax],al
  42fc5d:	(bad)  
  42fc5e:	add    eax,DWORD PTR [rax]
  42fc60:	adc    BYTE PTR [rcx+rax*1+0x1b42900],dh
  42fc67:	add    BYTE PTR [rax],cl
  42fc69:	(bad)  
  42fc6a:	add    eax,DWORD PTR [rax]
  42fc6c:	xor    BYTE PTR [rcx+rax*1+0x1b46500],dh
  42fc73:	add    BYTE PTR [rax],dl
  42fc75:	(bad)  
  42fc76:	add    eax,DWORD PTR [rax]
  42fc78:	jo     0x42fc2e
  42fc7a:	add    DWORD PTR [rax],eax
  42fc7c:	(bad)
  42fc7f:	add    BYTE PTR [rax],bl
  42fc81:	(bad)  
  42fc82:	add    eax,DWORD PTR [rax]
  42fc84:	shl    BYTE PTR [rcx+rax*1+0x1b4ec00],1
  42fc8b:	add    BYTE PTR [rsi+rbx*1],ah
  42fc8e:	add    eax,DWORD PTR [rax]
  42fc90:	lock mov ah,0x1
  42fc93:	add    dl,bh
  42fc95:	mov    ah,0x1
  42fc97:	add    BYTE PTR [rax],ch
  42fc99:	(bad)  
  42fc9a:	add    eax,DWORD PTR [rax]
  42fc9c:	add    BYTE PTR [rbp-0x4afcffff],dh
  42fca2:	add    DWORD PTR [rax],eax
  42fca4:	sub    al,0x1e
  42fca6:	add    eax,DWORD PTR [rax]
  42fca8:	adc    BYTE PTR [rbp-0x4a19ffff],dh
  42fcae:	add    DWORD PTR [rax],eax
  42fcb0:	xor    BYTE PTR [rsi],bl
  42fcb2:	add    eax,DWORD PTR [rax]
  42fcb4:	lock mov ch,0x1
  42fcb7:	add    bl,ch
  42fcb9:	mov    dh,0x1
  42fcbb:	add    BYTE PTR [rax+0x1e],al
  42fcbe:	add    eax,DWORD PTR [rax]
  42fcc0:	lock mov dh,0x1
  42fcc3:	add    BYTE PTR [rdi],bl
  42fcc5:	mov    bh,0x1
  42fcc7:	add    BYTE PTR [rax+0x1e],dl
  42fcca:	add    eax,DWORD PTR [rax]
  42fccc:	and    BYTE PTR [rdi-0x4876ffff],dh
  42fcd2:	add    DWORD PTR [rax],eax
  42fcd4:	pop    rax
  42fcd5:	(bad)  
  42fcd6:	add    eax,DWORD PTR [rax]
  42fcd8:	nop
  42fcd9:	mov    bh,0x1
  42fcdb:	add    BYTE PTR [rbx+0x640001b7],dl
  42fce1:	(bad)  
  42fce2:	add    eax,DWORD PTR [rax]
  42fce4:	movabs al,ds:0x680001b7e10001b7
  42fced:	(bad)  
  42fcee:	add    eax,DWORD PTR [rax]
  42fcf0:	lock mov bh,0x1
  42fcf3:	add    ah,bh
  42fcf5:	mov    bh,0x1
  42fcf7:	add    BYTE PTR [rax+0x1e],dh
  42fcfa:	add    eax,DWORD PTR [rax]
  42fcfc:	add    BYTE PTR [rax-0x4703ffff],bh
  42fd02:	add    DWORD PTR [rax],eax
  42fd04:	je     0x42fd24
  42fd06:	add    eax,DWORD PTR [rax]
  42fd08:	add    BYTE PTR [rcx-0x46fcffff],bh
  42fd0e:	add    DWORD PTR [rax],eax
  42fd10:	mov    WORD PTR [rsi],ds
  42fd12:	add    eax,DWORD PTR [rax]
  42fd14:	adc    BYTE PTR [rcx-0x46ebffff],bh
  42fd1a:	add    DWORD PTR [rax],eax
  42fd1c:	nop
  42fd1d:	(bad)  
  42fd1e:	add    eax,DWORD PTR [rax]
  42fd20:	and    BYTE PTR [rcx-0x46dbffff],bh
  42fd26:	add    DWORD PTR [rax],eax
  42fd28:	xchg   esp,eax
  42fd29:	(bad)  
  42fd2a:	add    eax,DWORD PTR [rax]
  42fd2c:	xor    BYTE PTR [rcx-0x466effff],bh
  42fd32:	add    DWORD PTR [rax],eax
  42fd34:	cwde   
  42fd35:	(bad)  
  42fd36:	add    eax,DWORD PTR [rax]
  42fd38:	movabs al,ds:0xa40001bb020001b9
  42fd41:	(bad)  
  42fd42:	add    eax,DWORD PTR [rax]
  42fd44:	adc    BYTE PTR [rbx-0x41f6ffff],bh
  42fd4a:	add    DWORD PTR [rax],eax
  42fd4c:	mov    eax,0x1000031e
  42fd51:	mov    esi,0xbfb60001
  42fd56:	add    DWORD PTR [rax],eax
  42fd58:	rcr    BYTE PTR [rsi],1
  42fd5a:	add    eax,DWORD PTR [rax]
  42fd5c:	sar    BYTE PTR [rdi-0x3f53ffff],0x1
  42fd63:	add    al,bl
  42fd65:	(bad)  
  42fd66:	add    eax,DWORD PTR [rax]
  42fd68:	mov    al,0xc0
  42fd6a:	add    DWORD PTR [rax],eax
  42fd6c:	push   0xffffffffe80001c2
  42fd71:	(bad)  
  42fd72:	add    eax,DWORD PTR [rax]
  42fd74:	jo     0x42fd38
  42fd76:	add    DWORD PTR [rax],eax
  42fd78:	ffree  st(2)
  42fd7a:	add    DWORD PTR [rax],eax
  42fd7c:	lock (bad) 
  42fd7e:	add    eax,DWORD PTR [rax]
  42fd80:	loopne 0x42fd44
  42fd82:	add    DWORD PTR [rax],eax
  42fd84:	pop    rdi
  42fd85:	ret    
  42fd86:	add    DWORD PTR [rax],eax
  42fd88:	add    BYTE PTR [rdi],bl
  42fd8a:	add    eax,DWORD PTR [rax]
  42fd8c:	(bad)  
  42fd8d:	ret    
  42fd8e:	add    DWORD PTR [rax],eax
  42fd90:	inc    ebx
  42fd92:	add    DWORD PTR [rax],eax
  42fd94:	or     al,0x1f
  42fd96:	add    eax,DWORD PTR [rax]
  42fd98:	add    ah,al
  42fd9a:	add    DWORD PTR [rax],eax
  42fd9c:	fcmovb st,st(4)
  42fd9e:	add    DWORD PTR [rax],eax
  42fda0:	adc    al,0x1f
  42fda2:	add    eax,DWORD PTR [rax]
  42fda4:	loopne 0x42fd6a
  42fda6:	add    DWORD PTR [rax],eax
  42fda8:	inc    esp
  42fdaa:	add    DWORD PTR [rax],eax
  42fdac:	sbb    al,0x1f
  42fdae:	add    eax,DWORD PTR [rax]
  42fdb0:	add    ch,al
  42fdb2:	add    DWORD PTR [rax],eax
  42fdb4:	adc    al,ch
  42fdb6:	add    DWORD PTR [rax],eax
  42fdb8:	and    BYTE PTR [rdi],bl
  42fdba:	add    eax,DWORD PTR [rax]
  42fdbc:	and    ch,al
  42fdbe:	add    DWORD PTR [rax],eax
  42fdc0:	(bad)
  42fdc4:	and    al,0x1f
  42fdc6:	add    eax,DWORD PTR [rax]
  42fdc8:	jo     0x42fd8f
  42fdca:	add    DWORD PTR [rax],eax
  42fdcc:	(bad)  
  42fdcd:	mov    BYTE PTR [rcx],0x0
  42fdd0:	sub    BYTE PTR [rdi],bl
  42fdd2:	add    eax,DWORD PTR [rax]
  42fdd4:	adc    dh,al
  42fdd6:	add    DWORD PTR [rax],eax
  42fdd8:	push   rbx
  42fdd9:	mov    BYTE PTR [rcx],0x0
  42fddc:	xor    al,0x1f
  42fdde:	add    eax,DWORD PTR [rax]
  42fde0:	(bad)  
  42fde1:	mov    BYTE PTR [rcx],0x0
  42fde4:	fwait
  42fde5:	mov    BYTE PTR [rcx],0x0
  42fde8:	rex (bad) 
  42fdea:	add    eax,DWORD PTR [rax]
  42fdec:	movabs al,ds:0x480001c72e0001c6
  42fdf5:	(bad)  
  42fdf6:	add    eax,DWORD PTR [rax]
  42fdf8:	xor    bh,al
  42fdfa:	add    DWORD PTR [rax],eax
  42fdfc:	push   0x540001c7
  42fe01:	(bad)  
  42fe02:	add    eax,DWORD PTR [rax]
  42fe04:	jo     0x42fdcd
  42fe06:	add    DWORD PTR [rax],eax
  42fe08:	(bad)
  42fe0b:	add    BYTE PTR [rax+0x1f],ah
  42fe0e:	add    eax,DWORD PTR [rax]
  42fe10:	rol    bh,1
  42fe12:	add    DWORD PTR [rax],eax
  42fe14:	jle    0x42fdde
  42fe16:	add    DWORD PTR [rax],eax
  42fe18:	ins    BYTE PTR es:[rdi],dx
  42fe19:	(bad)  
  42fe1a:	add    eax,DWORD PTR [rax]
  42fe1c:	ror    al,0x1
  42fe1f:	add    BYTE PTR [rbp+0x7c0001ca],bl
  42fe25:	(bad)  
  42fe26:	add    eax,DWORD PTR [rax]
  42fe28:	movabs al,ds:0x8c0001ccbf0001ca
  42fe31:	(bad)  
  42fe32:	add    eax,DWORD PTR [rax]
  42fe34:	ror    ah,0x1
  42fe37:	add    BYTE PTR [rdx],dl
  42fe39:	int    0x1
  42fe3b:	add    BYTE PTR [rdi+rbx*1-0x32dffffd],bl
  42fe42:	add    DWORD PTR [rax],eax
  42fe44:	jb     0x42fe13
  42fe46:	add    DWORD PTR [rax],eax
  42fe48:	test   al,0x1f
  42fe4a:	add    eax,DWORD PTR [rax]
  42fe4c:	or     ch,0x1
  42fe4f:	add    BYTE PTR [rsi-0x4ffffe33],dh
  42fe55:	(bad)  
  42fe56:	add    eax,DWORD PTR [rax]
  42fe58:	ror    ch,0x1
  42fe5b:	add    BYTE PTR [rdx-0x32],bl
  42fe5e:	add    DWORD PTR [rax],eax
  42fe60:	mov    eax,0x6000031f
  42fe65:	(bad)  
  42fe66:	add    DWORD PTR [rax],eax
  42fe68:	xchg   ebp,eax
  42fe69:	(bad)  
  42fe6a:	add    DWORD PTR [rax],eax
  42fe6c:	(bad)  
  42fe6d:	(bad)  
  42fe6e:	add    eax,DWORD PTR [rax]
  42fe70:	movabs al,ds:0xc80001cfd30001ce
  42fe79:	(bad)  
  42fe7a:	add    eax,DWORD PTR [rax]
  42fe7c:	loopne 0x42fe4d
  42fe7e:	add    DWORD PTR [rax],eax
  42fe80:	movabs al,ds:0xa000031fdc0001d0
  42fe89:	rol    BYTE PTR [rcx],1
  42fe8b:	add    BYTE PTR [rdi],bl
  42fe8d:	rol    DWORD PTR [rcx],1
  42fe8f:	add    ah,ch
  42fe91:	(bad)  
  42fe92:	add    eax,DWORD PTR [rax]
  42fe94:	and    cl,dl
  42fe96:	add    DWORD PTR [rax],eax
  42fe98:	rol    DWORD PTR fs:[rcx],1
  42fe9b:	add    ah,dh
  42fe9d:	(bad)  
  42fe9e:	add    eax,DWORD PTR [rax]
  42fea0:	jo     0x42fe73
  42fea2:	add    DWORD PTR [rax],eax
  42fea4:	mov    dl,0xd2
  42fea6:	add    DWORD PTR [rax],eax
  42fea8:	add    BYTE PTR [rax],ah
  42feaa:	add    eax,DWORD PTR [rax]
  42feac:	rcl    dl,0x1
  42feaf:	add    ch,al
  42feb1:	rol    BYTE PTR [rcx],cl
  42feb3:	add    BYTE PTR [rax+riz*1],dl
  42feb6:	add    eax,DWORD PTR [rax]
  42feb8:	rcl    dl,1
  42feba:	add    DWORD PTR [rax],eax
  42febc:	icebp  
  42febd:	rol    BYTE PTR [rcx],cl
  42febf:	add    BYTE PTR [rax],bl
  42fec1:	and    BYTE PTR [rbx],al
  42fec3:	add    BYTE PTR [rax],al
  42fec5:	rol    DWORD PTR [rcx],cl
  42fec7:	add    BYTE PTR [rcx],dh
  42fec9:	rol    DWORD PTR [rcx],cl
  42fecb:	add    BYTE PTR [rax],ah
  42fecd:	and    BYTE PTR [rbx],al
  42fecf:	add    BYTE PTR [rax-0x2d],al
  42fed2:	add    DWORD PTR [rax],eax
  42fed4:	pushf  
  42fed5:	rol    DWORD PTR [rcx],cl
  42fed7:	add    BYTE PTR [rax+riz*1],ch
  42feda:	add    eax,DWORD PTR [rax]
  42fedc:	movabs al,ds:0x380001d3cd0001d3
  42fee5:	and    BYTE PTR [rbx],al
  42fee7:	add    al,dl
  42fee9:	rol    DWORD PTR [rcx],cl
  42feeb:	add    dh,al
  42feed:	(bad)  
  42feee:	add    DWORD PTR [rax],eax
  42fef0:	and    BYTE PTR [rbx],al
  42fef3:	add    al,dl
  42fef5:	(bad)  
  42fef6:	add    DWORD PTR [rax],eax
  42fef8:	(bad)  
  42fef9:	(bad)  
  42fefa:	add    DWORD PTR [rax],eax
  42fefc:	rex.W and BYTE PTR [rbx],al
  42feff:	add    BYTE PTR [rax],dh
  42ff01:	(bad)  
  42ff02:	add    DWORD PTR [rax],eax
  42ff04:	rex.WRXB (bad) 
  42ff06:	add    DWORD PTR [rax],eax
  42ff08:	push   rax
  42ff09:	and    BYTE PTR [rbx],al
  42ff0b:	add    BYTE PTR [rax-0x2a],dl
  42ff0e:	add    DWORD PTR [rax],eax
  42ff10:	push   rbp
  42ff11:	xlat   BYTE PTR ds:[rbx]
  42ff12:	add    DWORD PTR [rax],eax
  42ff14:	and    BYTE PTR fs:[rbx],al
  42ff17:	add    BYTE PTR [rax-0x29],ah
  42ff1a:	add    DWORD PTR [rax],eax
  42ff1c:	cli    
  42ff1d:	xlat   BYTE PTR ds:[rbx]
  42ff1e:	add    DWORD PTR [rax],eax
  42ff20:	jo     0x42ff42
  42ff22:	add    eax,DWORD PTR [rax]
  42ff24:	add    al,bl
  42ff26:	add    DWORD PTR [rax],eax
  42ff28:	in     al,dx
  42ff29:	fadd   DWORD PTR [rcx]
  42ff2b:	add    BYTE PTR [rax+0x20],bh
  42ff2e:	add    eax,DWORD PTR [rax]
  42ff30:	lock fadd DWORD PTR [rcx]
  42ff33:	add    BYTE PTR [rsp+rbx*8+0x1],cl
  42ff37:	add    BYTE PTR [rax+riz*1-0x23affffd],cl
  42ff3e:	add    DWORD PTR [rax],eax
  42ff40:	xor    ebp,ebx
  42ff42:	add    DWORD PTR [rax],eax
  42ff44:	pushf  
  42ff45:	and    BYTE PTR [rbx],al
  42ff47:	add    BYTE PTR [rax-0x23],al
  42ff4a:	add    DWORD PTR [rax],eax
  42ff4c:	adc    al,ah
  42ff4e:	add    DWORD PTR [rax],eax
  42ff50:	test   al,0x20
  42ff52:	add    eax,DWORD PTR [rax]
  42ff54:	adc    al,ah
  42ff56:	add    DWORD PTR [rax],eax
  42ff58:	fchs   
  42ff5a:	add    DWORD PTR [rax],eax
  42ff5c:	mov    esp,0xe0000320
  42ff61:	loopne 0x42ff64
  42ff63:	add    BYTE PTR [rdi-0x37fffe1f],cl
  42ff69:	and    BYTE PTR [rbx],al
  42ff6b:	add    BYTE PTR [rax+0x260001e1],dl
  42ff71:	jrcxz  0x42ff74
  42ff73:	add    ah,dl
  42ff75:	and    BYTE PTR [rbx],al
  42ff77:	add    BYTE PTR [rax],dh
  42ff79:	jrcxz  0x42ff7c
  42ff7b:	add    al,ch
  42ff7d:	out    0x1,al
  42ff7f:	add    al,ah
  42ff81:	and    BYTE PTR [rbx],al
  42ff83:	add    al,dh
  42ff85:	out    0x1,al
  42ff87:	add    bl,bh
  42ff89:	jmp    0x42ff8c
  42ff8b:	add    al,bh
  42ff8d:	and    BYTE PTR [rbx],al
  42ff8f:	add    BYTE PTR [rax],al
  42ff91:	in     al,dx
  42ff92:	add    DWORD PTR [rax],eax
  42ff94:	push   rdx
  42ff95:	test   BYTE PTR [rcx],0x0
  42ff98:	or     al,0x21
  42ff9a:	add    eax,DWORD PTR [rax]
  42ff9c:	(bad)  
  42ff9d:	test   BYTE PTR [rcx],0x0
  42ffa0:	nop
  42ffa1:	test   BYTE PTR [rcx],0x0
  42ffa4:	and    al,0x21
  42ffa6:	add    eax,DWORD PTR [rax]
  42ffa8:	nop
  42ffa9:	test   BYTE PTR [rcx],0x0
  42ffac:	fdiv   st,st(6)
  42ffae:	add    DWORD PTR [rax],eax
  42ffb0:	sub    al,0x21
  42ffb2:	add    eax,DWORD PTR [rax]
  42ffb4:	loopne 0x42ffac
  42ffb6:	add    DWORD PTR [rax],eax
  42ffb8:	cld    
  42ffb9:	test   BYTE PTR [rcx],0x0
  42ffbc:	cmp    BYTE PTR [rcx],ah
  42ffbe:	add    eax,DWORD PTR [rax]
  42ffc0:	add    bh,dh
  42ffc2:	add    DWORD PTR [rax],eax
  42ffc4:	jp     0x42ffbe
  42ffc6:	add    DWORD PTR [rax],eax
  42ffc8:	cmp    al,0x21
  42ffca:	add    eax,DWORD PTR [rax]
  42ffcc:	cmp    al,0x1
  42ffcf:	add    dl,ch
  42ffd1:	or     al,0x2
  42ffd3:	add    BYTE PTR [rcx+riz*1+0x3],dl
  42ffd7:	add    al,dh
  42ffd9:	or     al,0x2
  42ffdb:	add    ch,ch
  42ffdd:	or     eax,0x21700002
  42ffe2:	add    eax,DWORD PTR [rax]
  42ffe4:	lock or eax,0xe2e0002
  42ffea:	add    al,BYTE PTR [rax]
  42ffec:	jl     0x43000f
  42ffee:	add    eax,DWORD PTR [rax]
  42fff0:	xor    BYTE PTR [rsi],cl
  42fff2:	add    al,BYTE PTR [rax]
  42fff4:	cld    
  42fff5:	(bad)  
  42fff6:	add    al,BYTE PTR [rax]
  42fff8:	and    BYTE PTR [rcx],0x3
  42fffb:	add    BYTE PTR [rax],al
  42fffd:	lar    eax,WORD PTR [rax]
  430000:	rex.X lar eax,WORD PTR [rax]
  430004:	mov    WORD PTR [rcx],fs
  430006:	add    eax,DWORD PTR [rax]
  430008:	push   rax
  430009:	lar    eax,WORD PTR [rax]
  43000c:	pop    rsi
  43000d:	adc    BYTE PTR [rdx],al
  43000f:	add    BYTE PTR [rcx+riz*1+0x10600003],dl
  430016:	add    al,BYTE PTR [rax]
  430018:	(bad)  
  430019:	adc    BYTE PTR [rdx],al
  43001b:	add    BYTE PTR [rax-0x2ffffcdf],ah
  430021:	adc    BYTE PTR [rdx],al
  430023:	add    BYTE PTR [rdx-0x57fffdef],al
  430029:	and    DWORD PTR [rbx],eax
  43002b:	add    BYTE PTR [rax-0x49fffdef],dl
  430031:	adc    DWORD PTR [rdx],eax
  430033:	add    BYTE PTR [rax-0x3ffffcdf],bh
  430039:	adc    DWORD PTR [rdx],eax
  43003b:	add    al,dh
  43003d:	adc    al,BYTE PTR [rdx]
  43003f:	add    al,al
  430041:	and    DWORD PTR [rbx],eax
  430043:	add    al,dh
  430045:	adc    al,BYTE PTR [rdx]
  430047:	add    BYTE PTR [rsp+rdx*1+0x2],dl
  43004b:	add    ah,dl
  43004d:	and    DWORD PTR [rbx],eax
  43004f:	add    BYTE PTR [rax+0x14],ah
  430052:	add    al,BYTE PTR [rax]
  430054:	jae    0x43006b
  430056:	add    al,BYTE PTR [rax]
  430058:	in     al,0x21
  43005a:	add    eax,DWORD PTR [rax]
  43005c:	adc    BYTE PTR [rip+0x15c40002],0x2        # 0x16070065
  430063:	add    al,bh
  430065:	and    DWORD PTR [rbx],eax
  430067:	add    al,dl
  430069:	adc    eax,0x17060002
  43006e:	add    al,BYTE PTR [rax]
  430070:	cld    
  430071:	and    DWORD PTR [rbx],eax
  430073:	add    BYTE PTR [rax],dl
  430075:	(bad)  
  430076:	add    al,BYTE PTR [rax]
  430078:	and    ebx,DWORD PTR [rax]
  43007a:	add    al,BYTE PTR [rax]
  43007c:	or     BYTE PTR [rdx],ah
  43007e:	add    eax,DWORD PTR [rax]
  430080:	xor    BYTE PTR [rax],bl
  430082:	add    al,BYTE PTR [rax]
  430084:	cmp    DWORD PTR [rcx],ebx
  430086:	add    al,BYTE PTR [rax]
  430088:	adc    al,0x22
  43008a:	add    eax,DWORD PTR [rax]
  43008c:	rex sbb DWORD PTR [rdx],eax
  43008f:	add    BYTE PTR [rcx+rbx*1+0x2],ah
  430093:	add    BYTE PTR [rax],ah
  430095:	and    al,BYTE PTR [rbx]
  430097:	add    BYTE PTR [rax+0x19],dh
  43009a:	add    al,BYTE PTR [rax]
  43009c:	fistp  DWORD PTR [rdx]
  43009e:	add    al,BYTE PTR [rax]
  4300a0:	and    al,0x22
  4300a2:	add    eax,DWORD PTR [rax]
  4300a4:	loopne 0x4300c0
  4300a6:	add    al,BYTE PTR [rax]
  4300a8:	rex.WXB sbb rax,QWORD PTR [r10]
  4300ab:	add    BYTE PTR [rdx+riz*1],dh
  4300ae:	add    eax,DWORD PTR [rax]
  4300b0:	push   rax
  4300b1:	sbb    eax,DWORD PTR [rdx]
  4300b3:	add    BYTE PTR [rdx+0x1c],dh
  4300b6:	add    al,BYTE PTR [rax]
  4300b8:	and    r8b,BYTE PTR [rbx]
  4300bb:	add    BYTE PTR [rax-0x25fffde4],al
  4300c1:	sbb    al,0x2
  4300c3:	add    BYTE PTR [rdx+riz*1+0x3],bl
  4300c7:	add    BYTE PTR [rax-0x47fffde1],dh
  4300cd:	(bad)  
  4300ce:	add    al,BYTE PTR [rax]
  4300d0:	ins    BYTE PTR es:[rdi],dx
  4300d1:	and    al,BYTE PTR [rbx]
  4300d3:	add    al,al
  4300d5:	(bad)  
  4300d6:	add    al,BYTE PTR [rax]
  4300d8:	retf   
  4300d9:	(bad)  
  4300da:	add    al,BYTE PTR [rax]
  4300dc:	jo     0x430100
  4300de:	add    eax,DWORD PTR [rax]
  4300e0:	rcr    BYTE PTR [rdi],1
  4300e2:	add    al,BYTE PTR [rax]
  4300e4:	xlat   BYTE PTR ds:[rbx]
  4300e5:	(bad)  
  4300e6:	add    al,BYTE PTR [rax]
  4300e8:	je     0x43010c
  4300ea:	add    eax,DWORD PTR [rax]
  4300ec:	loopne 0x43010d
  4300ee:	add    al,BYTE PTR [rax]
  4300f0:	jmp    0x78430314
  4300f5:	and    al,BYTE PTR [rbx]
  4300f7:	add    al,dh
  4300f9:	(bad)  
  4300fa:	add    al,BYTE PTR [rax]
  4300fc:	xor    esp,DWORD PTR [rax]
  4300fe:	add    al,BYTE PTR [rax]
  430100:	jl     0x430124
  430102:	add    eax,DWORD PTR [rax]
  430104:	and    BYTE PTR [rdx],al
  430107:	add    BYTE PTR [rbp+0x20],bh
  43010a:	add    al,BYTE PTR [rax]
  43010c:	test   BYTE PTR [rdx],ah
  43010e:	add    eax,DWORD PTR [rax]
  430110:	and    BYTE PTR [rax],0x2
  430113:	add    BYTE PTR [rdx-0x73fffde0],cl
  430119:	and    al,BYTE PTR [rbx]
  43011b:	add    BYTE PTR [rax-0x65fffde0],dl
  430121:	and    BYTE PTR [rdx],al
  430123:	add    BYTE PTR [rax+0x10000322],dl
  430129:	and    al,BYTE PTR [rdx]
  43012b:	add    BYTE PTR [rbx-0x6bfffdd9],bh
  430131:	adc    BYTE PTR [rbx],al
	...

Disassembly of section .xdata:

0000000000431000 <.xdata>:
  431000:	add    DWORD PTR [rax],eax
  431002:	add    BYTE PTR [rax],al
  431004:	add    DWORD PTR [rcx+rax*1],eax
  431007:	add    BYTE PTR [rdx+rax*2],al
  43100a:	add    BYTE PTR [rax],al
  43100c:	add    DWORD PTR [rcx+rax*1],eax
  43100f:	add    BYTE PTR [rdx+riz*2],al
  431012:	add    BYTE PTR [rax],al
  431014:	add    DWORD PTR [rdi],ecx
  431016:	or     BYTE PTR [rax],al
  431018:	lgdt   [rbx]
  43101b:	add    BYTE PTR [rax],cl
  43101d:	xor    BYTE PTR [rdi],al
  43101f:	(bad)  
  431020:	(bad)  
  431021:	jo     0x431028
  431023:	push   rax
  431024:	add    al,0xc0
  431026:	add    dl,al
  431028:	or     DWORD PTR [rcx+rax*1],eax
  43102b:	add    BYTE PTR [rdx+rax*2],al
  43102e:	add    BYTE PTR [rax],al
  431030:	test   al,0x1f
  431032:	add    al,BYTE PTR [rax]
  431034:	add    DWORD PTR [rax],eax
  431036:	add    BYTE PTR [rax],al
  431038:	(bad)  
  431039:	adc    al,0x0
  43103b:	add    ah,ch
  43103d:	adc    al,0x0
  43103f:	add    BYTE PTR [rax-0x13fffe40],dh
  431045:	adc    al,0x0
  431047:	add    BYTE PTR [rcx],cl
  431049:	add    al,0x1
  43104b:	add    BYTE PTR [rdx+rax*2],al
  43104e:	add    BYTE PTR [rax],al
  431050:	test   al,0x1f
  431052:	add    al,BYTE PTR [rax]
  431054:	add    DWORD PTR [rax],eax
  431056:	add    BYTE PTR [rax],al
  431058:	add    al,0x15
  43105a:	add    BYTE PTR [rax],al
  43105c:	sbb    al,0x15
  43105e:	add    BYTE PTR [rax],al
  431060:	mov    al,0xc0
  431062:	add    DWORD PTR [rax],eax
  431064:	sbb    al,0x15
  431066:	add    BYTE PTR [rax],al
  431068:	add    DWORD PTR [rcx+rax*1],eax
  43106b:	add    BYTE PTR [rdx+riz*2],al
  43106e:	add    BYTE PTR [rax],al
  431070:	add    DWORD PTR [rsi],eax
  431072:	add    eax,DWORD PTR [rax]
  431074:	(bad)  
  431075:	rex.X add sil,BYTE PTR [rax]
  431078:	add    DWORD PTR [rax+0x0],esp
  43107b:	add    BYTE PTR [rcx],al
  43107d:	(bad)  
  43107e:	add    al,BYTE PTR [rax]
  431080:	(bad)  
  431081:	add    DWORD PTR [rbx+0x0],ecx
  431084:	add    DWORD PTR [rax],eax
  431086:	add    BYTE PTR [rax],al
  431088:	add    DWORD PTR [rax],eax
  43108a:	add    BYTE PTR [rax],al
  43108c:	add    DWORD PTR [rcx+rax*1],eax
  43108f:	add    BYTE PTR [rdx+riz*2],al
  431092:	add    BYTE PTR [rax],al
  431094:	add    DWORD PTR [rbx],edx
  431096:	or     al,BYTE PTR [rax]
  431098:	adc    eax,DWORD PTR [rcx]
  43109a:	sbb    eax,DWORD PTR [rax]
  43109c:	or     al,0x30
  43109e:	or     esp,DWORD PTR [rax+0xa]
  4310a1:	jo     0x4310ac
  4310a3:	push   rax
  4310a4:	or     al,al
  4310a6:	(bad)  
  4310a7:	rol    BYTE PTR [rax+riz*8],1
  4310aa:	add    dh,al
  4310ac:	add    DWORD PTR [rcx+rax*1],eax
  4310af:	add    BYTE PTR [rdx+riz*2],al
  4310b2:	add    BYTE PTR [rax],al
  4310b4:	add    DWORD PTR [rcx+rax*1],eax
  4310b7:	add    BYTE PTR [rdx+riz*2],al
  4310ba:	add    BYTE PTR [rax],al
  4310bc:	add    DWORD PTR [rsi],eax
  4310be:	add    eax,DWORD PTR [rax]
  4310c0:	(bad)  
  4310c1:	rex.X add sil,BYTE PTR [rax]
  4310c4:	add    DWORD PTR [rax+0x0],esp
  4310c7:	add    BYTE PTR [rcx],al
  4310c9:	invd   
  4310cb:	add    BYTE PTR [rdi],cl
  4310cd:	add    DWORD PTR [rdi],esp
  4310cf:	add    BYTE PTR [rax],cl
  4310d1:	xor    BYTE PTR [rdi],al
  4310d3:	(bad)  
  4310d4:	(bad)  
  4310d5:	jo     0x4310dc
  4310d7:	push   rax
  4310d8:	add    al,0xc0
  4310da:	add    dl,al
  4310dc:	add    DWORD PTR [rcx+rax*1],eax
  4310df:	add    BYTE PTR [rdx+rax*2],al
  4310e2:	add    BYTE PTR [rax],al
  4310e4:	add    DWORD PTR [rcx+rax*1],eax
  4310e7:	add    BYTE PTR [rdx+riz*2],al
  4310ea:	add    BYTE PTR [rax],al
  4310ec:	add    DWORD PTR [rdi],eax
  4310ee:	add    al,0x0
  4310f0:	(bad)  
  4310f1:	xchg   edx,eax
  4310f2:	add    esi,DWORD PTR [rax]
  4310f4:	add    ah,BYTE PTR [rax+0x1]
  4310f7:	jo     0x4310fa
  4310f9:	(bad)  
  4310fa:	add    al,0x0
  4310fc:	(bad)  
  4310fd:	push   rdx
  4310fe:	add    esi,DWORD PTR [rax]
  431100:	add    ah,BYTE PTR [rax+0x1]
  431103:	jo     0x431106
  431105:	(bad)  
  431106:	add    al,0x0
  431108:	(bad)  
  431109:	push   rdx
  43110a:	add    esi,DWORD PTR [rax]
  43110c:	add    ah,BYTE PTR [rax+0x1]
  43110f:	jo     0x431112
  431111:	(bad)  
  431112:	add    al,0x0
  431114:	(bad)  
  431115:	push   rdx
  431116:	add    esi,DWORD PTR [rax]
  431118:	add    ah,BYTE PTR [rax+0x1]
  43111b:	jo     0x43111e
  43111d:	(bad)  
  43111e:	add    al,0x0
  431120:	(bad)  
  431121:	push   rdx
  431122:	add    esi,DWORD PTR [rax]
  431124:	add    ah,BYTE PTR [rax+0x1]
  431127:	jo     0x43112a
  431129:	(bad)  
  43112a:	add    al,0x0
  43112c:	(bad)  
  43112d:	push   rdx
  43112e:	add    esi,DWORD PTR [rax]
  431130:	add    ah,BYTE PTR [rax+0x1]
  431133:	jo     0x431136
  431135:	(bad)  
  431136:	add    al,0x0
  431138:	(bad)  
  431139:	push   rdx
  43113a:	add    esi,DWORD PTR [rax]
  43113c:	add    ah,BYTE PTR [rax+0x1]
  43113f:	jo     0x431142
  431141:	(bad)  
  431142:	add    al,0x0
  431144:	(bad)  
  431145:	push   rdx
  431146:	add    esi,DWORD PTR [rax]
  431148:	add    ah,BYTE PTR [rax+0x1]
  43114b:	jo     0x43114e
  43114d:	(bad)  
  43114e:	add    al,0x0
  431150:	(bad)  
  431151:	push   rdx
  431152:	add    esi,DWORD PTR [rax]
  431154:	add    ah,BYTE PTR [rax+0x1]
  431157:	jo     0x43115a
  431159:	or     al,0x7
  43115b:	add    BYTE PTR [rdx+riz*8],cl
  43115e:	or     BYTE PTR [rax],dh
  431160:	(bad)  
  431161:	(bad)  
  431162:	(bad)  
  431163:	jo     0x43116a
  431165:	push   rax
  431166:	add    al,0xc0
  431168:	add    dl,al
  43116a:	add    BYTE PTR [rax],al
  43116c:	add    DWORD PTR [rcx+rax*1],eax
  43116f:	add    BYTE PTR [rdx+rax*2],al
  431172:	add    BYTE PTR [rax],al
  431174:	add    DWORD PTR [rdi],eax
  431176:	add    al,0x0
  431178:	(bad)  
  431179:	push   rdx
  43117a:	add    esi,DWORD PTR [rax]
  43117c:	add    ah,BYTE PTR [rax+0x1]
  43117f:	jo     0x431182
  431181:	(bad)  
  431182:	add    al,0x0
  431184:	(bad)  
  431185:	mov    dl,0x3
  431187:	xor    BYTE PTR [rdx],al
  431189:	(bad)  
  43118a:	add    DWORD PTR [rax+0x1],esi
  43118d:	(bad)  
  43118e:	add    al,0x0
  431190:	(bad)  
  431191:	push   rdx
  431192:	add    esi,DWORD PTR [rax]
  431194:	add    ah,BYTE PTR [rax+0x1]
  431197:	jo     0x43119a
  431199:	(bad)  
  43119a:	add    al,0x0
  43119c:	(bad)  
  43119d:	push   rdx
  43119e:	add    esi,DWORD PTR [rax]
  4311a0:	add    ah,BYTE PTR [rax+0x1]
  4311a3:	jo     0x4311a6
  4311a5:	(bad)  
  4311a6:	add    al,0x0
  4311a8:	(bad)  
  4311a9:	push   rdx
  4311aa:	add    esi,DWORD PTR [rax]
  4311ac:	add    ah,BYTE PTR [rax+0x1]
  4311af:	jo     0x4311b2
  4311b1:	(bad)  
  4311b2:	add    al,0x0
  4311b4:	(bad)  
  4311b5:	push   rdx
  4311b6:	add    esi,DWORD PTR [rax]
  4311b8:	add    ah,BYTE PTR [rax+0x1]
  4311bb:	jo     0x4311be
  4311bd:	(bad)  
  4311be:	add    al,0x0
  4311c0:	(bad)  
  4311c1:	push   rdx
  4311c2:	add    esi,DWORD PTR [rax]
  4311c4:	add    ah,BYTE PTR [rax+0x1]
  4311c7:	jo     0x4311ca
  4311c9:	(bad)  
  4311ca:	add    al,0x0
  4311cc:	(bad)  
  4311cd:	push   rdx
  4311ce:	add    esi,DWORD PTR [rax]
  4311d0:	add    ah,BYTE PTR [rax+0x1]
  4311d3:	jo     0x4311d6
  4311d5:	(bad)  
  4311d6:	add    al,0x0
  4311d8:	(bad)  
  4311d9:	push   rdx
  4311da:	add    esi,DWORD PTR [rax]
  4311dc:	add    ah,BYTE PTR [rax+0x1]
  4311df:	jo     0x4311e2
  4311e1:	(bad)  
  4311e2:	add    al,0x0
  4311e4:	(bad)  
  4311e5:	push   rdx
  4311e6:	add    esi,DWORD PTR [rax]
  4311e8:	add    ah,BYTE PTR [rax+0x1]
  4311eb:	jo     0x4311ee
  4311ed:	(bad)  
  4311ee:	add    al,0x0
  4311f0:	(bad)  
  4311f1:	push   rdx
  4311f2:	add    esi,DWORD PTR [rax]
  4311f4:	add    ah,BYTE PTR [rax+0x1]
  4311f7:	jo     0x4311fa
  4311f9:	(bad)  
  4311fa:	add    al,0x0
  4311fc:	(bad)  
  4311fd:	push   rdx
  4311fe:	add    esi,DWORD PTR [rax]
  431200:	add    ah,BYTE PTR [rax+0x1]
  431203:	jo     0x431206
  431205:	(bad)  
  431206:	add    al,0x0
  431208:	(bad)  
  431209:	push   rdx
  43120a:	add    esi,DWORD PTR [rax]
  43120c:	add    ah,BYTE PTR [rax+0x1]
  43120f:	jo     0x431212
  431211:	(bad)  
  431212:	add    al,0x0
  431214:	(bad)  
  431215:	push   rdx
  431216:	add    esi,DWORD PTR [rax]
  431218:	add    ah,BYTE PTR [rax+0x1]
  43121b:	jo     0x43121e
  43121d:	(bad)  
  43121e:	add    al,0x0
  431220:	(bad)  
  431221:	push   rdx
  431222:	add    esi,DWORD PTR [rax]
  431224:	add    ah,BYTE PTR [rax+0x1]
  431227:	jo     0x43122a
  431229:	(bad)  
  43122a:	add    al,0x0
  43122c:	(bad)  
  43122d:	push   rdx
  43122e:	add    esi,DWORD PTR [rax]
  431230:	add    ah,BYTE PTR [rax+0x1]
  431233:	jo     0x431236
  431235:	(bad)  
  431236:	add    al,0x0
  431238:	(bad)  
  431239:	push   rdx
  43123a:	add    esi,DWORD PTR [rax]
  43123c:	add    ah,BYTE PTR [rax+0x1]
  43123f:	jo     0x431242
  431241:	(bad)  
  431242:	add    al,0x0
  431244:	(bad)  
  431245:	push   rdx
  431246:	add    esi,DWORD PTR [rax]
  431248:	add    ah,BYTE PTR [rax+0x1]
  43124b:	jo     0x43124e
  43124d:	(bad)  
  43124e:	add    al,0x0
  431250:	(bad)  
  431251:	push   rdx
  431252:	add    esi,DWORD PTR [rax]
  431254:	add    ah,BYTE PTR [rax+0x1]
  431257:	jo     0x43125a
  431259:	(bad)  
  43125a:	add    al,0x0
  43125c:	(bad)  
  43125d:	push   rdx
  43125e:	add    esi,DWORD PTR [rax]
  431260:	add    ah,BYTE PTR [rax+0x1]
  431263:	jo     0x431266
  431265:	(bad)  
  431266:	add    al,0x0
  431268:	(bad)  
  431269:	push   rdx
  43126a:	add    esi,DWORD PTR [rax]
  43126c:	add    ah,BYTE PTR [rax+0x1]
  43126f:	jo     0x431272
  431271:	(bad)  
  431272:	add    al,0x0
  431274:	(bad)  
  431275:	push   rdx
  431276:	add    esi,DWORD PTR [rax]
  431278:	add    ah,BYTE PTR [rax+0x1]
  43127b:	jo     0x43127e
  43127d:	(bad)  
  43127e:	add    al,0x0
  431280:	(bad)  
  431281:	push   rdx
  431282:	add    esi,DWORD PTR [rax]
  431284:	add    ah,BYTE PTR [rax+0x1]
  431287:	jo     0x43128a
  431289:	(bad)  
  43128a:	add    al,0x0
  43128c:	(bad)  
  43128d:	push   rdx
  43128e:	add    esi,DWORD PTR [rax]
  431290:	add    ah,BYTE PTR [rax+0x1]
  431293:	jo     0x431296
  431295:	(bad)  
  431296:	add    al,0x0
  431298:	(bad)  
  431299:	push   rdx
  43129a:	add    esi,DWORD PTR [rax]
  43129c:	add    ah,BYTE PTR [rax+0x1]
  43129f:	jo     0x4312a2
  4312a1:	(bad)  
  4312a2:	add    al,0x0
  4312a4:	(bad)  
  4312a5:	push   rdx
  4312a6:	add    esi,DWORD PTR [rax]
  4312a8:	add    ah,BYTE PTR [rax+0x1]
  4312ab:	jo     0x4312ae
  4312ad:	(bad)  
  4312ae:	add    al,0x0
  4312b0:	(bad)  
  4312b1:	push   rdx
  4312b2:	add    esi,DWORD PTR [rax]
  4312b4:	add    ah,BYTE PTR [rax+0x1]
  4312b7:	jo     0x4312ba
  4312b9:	(bad)  
  4312ba:	add    al,0x0
  4312bc:	(bad)  
  4312bd:	push   rdx
  4312be:	add    esi,DWORD PTR [rax]
  4312c0:	add    ah,BYTE PTR [rax+0x1]
  4312c3:	jo     0x4312c6
  4312c5:	(bad)  
  4312c6:	add    al,0x0
  4312c8:	(bad)  
  4312c9:	push   rdx
  4312ca:	add    esi,DWORD PTR [rax]
  4312cc:	add    ah,BYTE PTR [rax+0x1]
  4312cf:	jo     0x4312d2
  4312d1:	(bad)  
  4312d2:	add    al,0x0
  4312d4:	(bad)  
  4312d5:	push   rdx
  4312d6:	add    esi,DWORD PTR [rax]
  4312d8:	add    ah,BYTE PTR [rax+0x1]
  4312db:	jo     0x4312de
  4312dd:	(bad)  
  4312de:	add    al,0x0
  4312e0:	(bad)  
  4312e1:	push   rdx
  4312e2:	add    esi,DWORD PTR [rax]
  4312e4:	add    ah,BYTE PTR [rax+0x1]
  4312e7:	jo     0x4312ea
  4312e9:	(bad)  
  4312ea:	add    al,0x0
  4312ec:	(bad)  
  4312ed:	push   rdx
  4312ee:	add    esi,DWORD PTR [rax]
  4312f0:	add    ah,BYTE PTR [rax+0x1]
  4312f3:	jo     0x4312f6
  4312f5:	(bad)  
  4312f6:	add    al,0x0
  4312f8:	(bad)  
  4312f9:	push   rdx
  4312fa:	add    esi,DWORD PTR [rax]
  4312fc:	add    ah,BYTE PTR [rax+0x1]
  4312ff:	jo     0x431302
  431301:	(bad)  
  431302:	add    al,0x0
  431304:	(bad)  
  431305:	push   rdx
  431306:	add    esi,DWORD PTR [rax]
  431308:	add    ah,BYTE PTR [rax+0x1]
  43130b:	jo     0x43130e
  43130d:	(bad)  
  43130e:	add    al,0x0
  431310:	(bad)  
  431311:	push   rdx
  431312:	add    esi,DWORD PTR [rax]
  431314:	add    ah,BYTE PTR [rax+0x1]
  431317:	jo     0x43131a
  431319:	(bad)  
  43131a:	add    al,0x0
  43131c:	(bad)  
  43131d:	jb     0x431322
  43131f:	xor    BYTE PTR [rdx],al
  431321:	(bad)  
  431322:	add    DWORD PTR [rax+0x1],esi
  431325:	(bad)  
  431326:	add    al,0x0
  431328:	(bad)  
  431329:	push   rdx
  43132a:	add    esi,DWORD PTR [rax]
  43132c:	add    ah,BYTE PTR [rax+0x1]
  43132f:	jo     0x431332
  431331:	(bad)  
  431332:	or     BYTE PTR [rax],al
  431334:	(bad)  
  431335:	xchg   edx,eax
  431336:	or     dh,BYTE PTR [rax]
  431338:	or     DWORD PTR [rax+0x8],esp
  43133b:	jo     0x431344
  43133d:	push   rax
  43133e:	(bad)  
  43133f:	rol    BYTE PTR [rax+rdx*8],0x2
  431343:	loopne 0x431346
  431345:	(bad)  
  431346:	add    al,0x0
  431348:	(bad)  
  431349:	push   rdx
  43134a:	add    esi,DWORD PTR [rax]
  43134c:	add    ah,BYTE PTR [rax+0x1]
  43134f:	jo     0x431352
  431351:	add    al,0x1
  431353:	add    BYTE PTR [rdx+riz*2],al
  431356:	add    BYTE PTR [rax],al
  431358:	add    DWORD PTR [rcx+rax*1],eax
  43135b:	add    BYTE PTR [rdx+riz*2],al
  43135e:	add    BYTE PTR [rax],al
  431360:	add    DWORD PTR [rax],ecx
  431362:	add    eax,0x4420800
  431367:	xor    BYTE PTR [rbx],al
  431369:	(bad)  
  43136a:	add    dh,BYTE PTR [rax+0x1]
  43136d:	push   rax
  43136e:	add    BYTE PTR [rax],al
  431370:	add    DWORD PTR [rbx],edx
  431372:	or     al,BYTE PTR [rax]
  431374:	adc    eax,DWORD PTR [rcx]
  431376:	iret   
  431377:	add    BYTE PTR [rax+rsi*1],cl
  43137a:	or     esp,DWORD PTR [rax+0xa]
  43137d:	jo     0x431388
  43137f:	push   rax
  431380:	or     al,al
  431382:	(bad)  
  431383:	rol    BYTE PTR [rax+riz*8],1
  431386:	add    dh,al
  431388:	add    DWORD PTR [rax],ecx
  43138a:	add    eax,0x4420800
  43138f:	xor    BYTE PTR [rbx],al
  431391:	(bad)  
  431392:	add    dh,BYTE PTR [rax+0x1]
  431395:	push   rax
  431396:	add    BYTE PTR [rax],al
  431398:	add    DWORD PTR [rsi],eax
  43139a:	add    eax,DWORD PTR [rax]
  43139c:	(bad)  
  43139d:	(bad)  
  43139f:	xor    BYTE PTR [rcx],al
  4313a1:	(bad)  
  4313a2:	add    BYTE PTR [rax],al
  4313a4:	add    DWORD PTR [rdi+rax*1],ecx
  4313a7:	add    BYTE PTR [rdx+rax*2],cl
  4313aa:	or     BYTE PTR [rax],dh
  4313ac:	(bad)  
  4313ad:	(bad)  
  4313ae:	(bad)  
  4313af:	jo     0x4313b6
  4313b1:	push   rax
  4313b2:	add    al,0xc0
  4313b4:	add    dl,al
  4313b6:	add    BYTE PTR [rax],al
  4313b8:	add    DWORD PTR [rax],eax
  4313ba:	add    BYTE PTR [rax],al
  4313bc:	add    DWORD PTR [rdx],ecx
  4313be:	add    eax,0x44010a00
  4313c3:	add    BYTE PTR [rbx],al
  4313c5:	xor    BYTE PTR [rdx],al
  4313c7:	(bad)  
  4313c8:	add    DWORD PTR [rax+0x0],esi
  4313cb:	add    BYTE PTR [rcx],al
  4313cd:	add    eax,0x32050002
  4313d2:	add    DWORD PTR [rax],esi
  4313d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324813dc
  4313da:	add    DWORD PTR [rax],esi
  4313dc:	add    DWORD PTR [rsi],eax
  4313de:	add    eax,DWORD PTR [rax]
  4313e0:	(bad)  
  4313e1:	rex.X add sil,BYTE PTR [rax]
  4313e4:	add    DWORD PTR [rax+0x0],esp
  4313e7:	add    BYTE PTR [rcx],al
  4313e9:	sbb    DWORD PTR [rdx],ecx
  4313eb:	add    BYTE PTR [rcx],bl
  4313ed:	add    DWORD PTR [rip+0x10301102],edx        # 0x107324f5
  4313f3:	(bad)  
  4313f4:	pshufw mm1,QWORD PTR [rsi],0x50
  4313f8:	or     eax,0x4d00bc0
  4313fd:	loopne 0x431401
  4313ff:	lock add DWORD PTR [rdi],eax
  431402:	add    al,BYTE PTR [rax]
  431404:	(bad)  
  431405:	add    DWORD PTR [rcx],edi
  431407:	add    BYTE PTR [rcx],al
  431409:	(bad)  
  43140a:	add    eax,DWORD PTR [rax]
  43140c:	(bad)  
  43140d:	rex.X add sil,BYTE PTR [rax]
  431410:	add    DWORD PTR [rax+0x0],esp
  431413:	add    BYTE PTR [rcx],al
  431415:	(bad)  
  431416:	add    eax,DWORD PTR [rax]
  431418:	(bad)  
  431419:	rex.X add sil,BYTE PTR [rax]
  43141c:	add    DWORD PTR [rax+0x0],esp
  43141f:	add    BYTE PTR [rcx],al
  431421:	add    al,0x1
  431423:	add    BYTE PTR [rdx+riz*2],al
  431426:	add    BYTE PTR [rax],al
  431428:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481430
  43142e:	add    DWORD PTR [rax],esi
  431430:	add    DWORD PTR [rcx+rax*1],eax
  431433:	add    BYTE PTR [rdx+riz*2],al
  431436:	add    BYTE PTR [rax],al
  431438:	add    DWORD PTR [rdi],eax
  43143a:	add    al,0x0
  43143c:	(bad)  
  43143d:	xchg   edx,eax
  43143e:	add    esi,DWORD PTR [rax]
  431440:	add    ah,BYTE PTR [rax+0x1]
  431443:	jo     0x431446
  431445:	add    al,0x1
  431447:	add    BYTE PTR [rdx+riz*2],al
  43144a:	add    BYTE PTR [rax],al
  43144c:	add    DWORD PTR [rsi],ecx
  43144e:	or     BYTE PTR [rax],al
  431450:	(bad)  
  431451:	xor    cl,BYTE PTR [rdx]
  431453:	xor    BYTE PTR [rcx],cl
  431455:	(bad)  
  431456:	or     BYTE PTR [rax+0x7],dh
  431459:	push   rax
  43145a:	(bad)  
  43145b:	rol    BYTE PTR [rax+rdx*8],0x2
  43145f:	loopne 0x431462
  431461:	(bad)  
  431462:	add    eax,DWORD PTR [rax]
  431464:	(bad)  
  431465:	loop   0x431469
  431467:	xor    BYTE PTR [rcx],al
  431469:	jo     0x43146b
  43146b:	add    BYTE PTR [rcx],al
  43146d:	adc    BYTE PTR [rcx],cl
  43146f:	add    BYTE PTR [rax],dl
  431471:	ret    0x300c
  431474:	or     esp,DWORD PTR [rax+0xa]
  431477:	jo     0x431482
  431479:	push   rax
  43147a:	or     al,al
  43147c:	(bad)  
  43147d:	rol    BYTE PTR [rax+riz*8],1
  431480:	add    dh,al
  431482:	add    BYTE PTR [rax],al
  431484:	add    DWORD PTR [rdi],eax
  431486:	add    al,0x0
  431488:	(bad)  
  431489:	xor    al,BYTE PTR [rbx]
  43148b:	xor    BYTE PTR [rdx],al
  43148d:	(bad)  
  43148e:	add    DWORD PTR [rax+0x1],esi
  431491:	adc    DWORD PTR [rcx],ecx
  431493:	add    BYTE PTR [rcx],dl
  431495:	add    DWORD PTR [rax],esi
  431497:	add    BYTE PTR [rdx],cl
  431499:	xor    BYTE PTR [rcx],cl
  43149b:	(bad)  
  43149c:	or     BYTE PTR [rax+0x7],dh
  43149f:	push   rax
  4314a0:	(bad)  
  4314a1:	rol    BYTE PTR [rax+rdx*8],0x2
  4314a5:	loopne 0x4314a7
  4314a7:	add    BYTE PTR [rcx],al
  4314a9:	add    eax,0x72050002
  4314ae:	add    DWORD PTR [rax],esi
  4314b0:	add    DWORD PTR [rax],edx
  4314b2:	or     DWORD PTR [rax],eax
  4314b4:	adc    dl,ah
  4314b6:	or     al,0x30
  4314b8:	or     esp,DWORD PTR [rax+0xa]
  4314bb:	jo     0x4314c6
  4314bd:	push   rax
  4314be:	or     al,al
  4314c0:	(bad)  
  4314c1:	rol    BYTE PTR [rax+riz*8],1
  4314c4:	add    dh,al
  4314c6:	add    BYTE PTR [rax],al
  4314c8:	add    DWORD PTR [rdx],ecx
  4314ca:	(bad)  
  4314cb:	add    BYTE PTR [rdx],cl
  4314cd:	xor    al,BYTE PTR [rsi]
  4314cf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31935
  4314d5:	push   rax
  4314d6:	add    al,al
  4314d8:	add    DWORD PTR [rax],edx
  4314da:	or     DWORD PTR [rax],eax
  4314dc:	adc    BYTE PTR [rdx+0xc],al
  4314df:	xor    BYTE PTR [rbx],cl
  4314e1:	(bad)  
  4314e2:	or     dh,BYTE PTR [rax+0x9]
  4314e5:	push   rax
  4314e6:	or     al,al
  4314e8:	(bad)  
  4314e9:	rol    BYTE PTR [rax+riz*8],1
  4314ec:	add    dh,al
  4314ee:	add    BYTE PTR [rax],al
  4314f0:	add    DWORD PTR [rcx+rax*1],eax
  4314f3:	add    BYTE PTR [rdx+rax*2],al
  4314f6:	add    BYTE PTR [rax],al
  4314f8:	add    DWORD PTR [rsi],eax
  4314fa:	add    eax,DWORD PTR [rax]
  4314fc:	(bad)  
  4314fd:	rex.X add sil,BYTE PTR [rax]
  431500:	add    DWORD PTR [rax+0x0],esp
  431503:	add    BYTE PTR [rcx],al
  431505:	(bad)  
  431506:	add    eax,DWORD PTR [rax]
  431508:	(bad)  
  431509:	rex.X add sil,BYTE PTR [rax]
  43150c:	add    DWORD PTR [rax+0x0],esp
  43150f:	add    BYTE PTR [rcx],al
  431511:	add    eax,0x32050002
  431516:	add    DWORD PTR [rax],esi
  431518:	add    DWORD PTR [rsi],eax
  43151a:	add    eax,DWORD PTR [rax]
  43151c:	(bad)  
  43151d:	rex.X add sil,BYTE PTR [rax]
  431520:	add    DWORD PTR [rax+0x0],esp
  431523:	add    BYTE PTR [rcx],al
  431525:	or     BYTE PTR [rip+0x4420800],al        # 0x4851d2b
  43152b:	xor    BYTE PTR [rbx],al
  43152d:	(bad)  
  43152e:	add    dh,BYTE PTR [rax+0x1]
  431531:	push   rax
  431532:	add    BYTE PTR [rax],al
  431534:	add    DWORD PTR [rdi],eax
  431536:	add    al,0x0
  431538:	(bad)  
  431539:	xor    al,BYTE PTR [rbx]
  43153b:	xor    BYTE PTR [rdx],al
  43153d:	(bad)  
  43153e:	add    DWORD PTR [rax+0x1],esi
  431541:	add    al,0x1
  431543:	add    BYTE PTR [rdx+riz*2],al
  431546:	add    BYTE PTR [rax],al
  431548:	add    DWORD PTR [rdi+rax*1],ecx
  43154b:	add    BYTE PTR [rdx+riz*2],cl
  43154e:	or     BYTE PTR [rax],dh
  431550:	(bad)  
  431551:	(bad)  
  431552:	(bad)  
  431553:	jo     0x43155a
  431555:	push   rax
  431556:	add    al,0xc0
  431558:	add    dl,al
  43155a:	add    BYTE PTR [rax],al
  43155c:	add    DWORD PTR [rsi],eax
  43155e:	add    eax,DWORD PTR [rax]
  431560:	(bad)  
  431561:	rex.X add sil,BYTE PTR [rax]
  431564:	add    DWORD PTR [rax+0x0],esp
  431567:	add    BYTE PTR [rcx],al
  431569:	(bad)  
  43156a:	add    eax,DWORD PTR [rax]
  43156c:	(bad)  
  43156d:	rex.X add sil,BYTE PTR [rax]
  431570:	add    DWORD PTR [rax+0x0],esp
  431573:	add    BYTE PTR [rcx],al
  431575:	or     al,BYTE PTR [rsi]
  431577:	add    BYTE PTR [rdx],cl
  431579:	xor    al,BYTE PTR [rsi]
  43157b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b319e1
  431581:	push   rax
  431582:	add    al,al
  431584:	add    DWORD PTR [rcx+rax*1],eax
  431587:	add    BYTE PTR [rdx+riz*2],al
  43158a:	add    BYTE PTR [rax],al
  43158c:	add    DWORD PTR [rcx+rax*1],eax
  43158f:	add    BYTE PTR [rdx+riz*2],al
  431592:	add    BYTE PTR [rax],al
  431594:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248159c
  43159a:	add    DWORD PTR [rax],esi
  43159c:	add    DWORD PTR [rsi],eax
  43159e:	add    eax,DWORD PTR [rax]
  4315a0:	(bad)  
  4315a1:	rex.X add sil,BYTE PTR [rax]
  4315a4:	add    DWORD PTR [rax+0x0],esp
  4315a7:	add    BYTE PTR [rcx],al
  4315a9:	adc    BYTE PTR [rcx],cl
  4315ab:	add    BYTE PTR [rax],dl
  4315ad:	movabs ds:0x5009700a600b300c,al
  4315b6:	or     al,al
  4315b8:	(bad)  
  4315b9:	rol    BYTE PTR [rax+riz*8],1
  4315bc:	add    dh,al
  4315be:	add    BYTE PTR [rax],al
  4315c0:	add    DWORD PTR [rax],edx
  4315c2:	or     DWORD PTR [rax],eax
  4315c4:	adc    BYTE PTR [rdx+0xc],ah
  4315c7:	xor    BYTE PTR [rbx],cl
  4315c9:	(bad)  
  4315ca:	or     dh,BYTE PTR [rax+0x9]
  4315cd:	push   rax
  4315ce:	or     al,al
  4315d0:	(bad)  
  4315d1:	rol    BYTE PTR [rax+riz*8],1
  4315d4:	add    dh,al
  4315d6:	add    BYTE PTR [rax],al
  4315d8:	add    DWORD PTR [rdi+rax*1],ecx
  4315db:	add    BYTE PTR [rdx+rax*4],cl
  4315de:	or     BYTE PTR [rax],dh
  4315e0:	(bad)  
  4315e1:	(bad)  
  4315e2:	(bad)  
  4315e3:	jo     0x4315ea
  4315e5:	push   rax
  4315e6:	add    al,0xc0
  4315e8:	add    dl,al
  4315ea:	add    BYTE PTR [rax],al
  4315ec:	add    DWORD PTR [rcx+rax*1],eax
  4315ef:	add    BYTE PTR [rdx+rax*2],al
  4315f2:	add    BYTE PTR [rax],al
  4315f4:	add    DWORD PTR [rcx+rax*1],eax
  4315f7:	add    BYTE PTR [rdx+riz*2],al
  4315fa:	add    BYTE PTR [rax],al
  4315fc:	add    DWORD PTR [rdx],ecx
  4315fe:	(bad)  
  4315ff:	add    BYTE PTR [rdx],cl
  431601:	xor    al,BYTE PTR [rsi]
  431603:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31a69
  431609:	push   rax
  43160a:	add    al,al
  43160c:	add    DWORD PTR [rax],eax
  43160e:	add    BYTE PTR [rax],al
  431610:	add    DWORD PTR [rax],eax
  431612:	add    BYTE PTR [rax],al
  431614:	add    DWORD PTR [rax],eax
  431616:	add    BYTE PTR [rax],al
  431618:	add    DWORD PTR [rsi],eax
  43161a:	add    eax,DWORD PTR [rax]
  43161c:	(bad)  
  43161d:	(bad)  
  43161f:	xor    BYTE PTR [rcx],al
  431621:	(bad)  
  431622:	add    BYTE PTR [rax],al
  431624:	add    DWORD PTR [rax],edx
  431626:	or     DWORD PTR [rax],eax
  431628:	adc    BYTE PTR [rdx+0x600b300c],al
  43162e:	or     dh,BYTE PTR [rax+0x9]
  431631:	push   rax
  431632:	or     al,al
  431634:	(bad)  
  431635:	rol    BYTE PTR [rax+riz*8],1
  431638:	add    dh,al
  43163a:	add    BYTE PTR [rax],al
  43163c:	add    DWORD PTR [rax],ecx
  43163e:	add    eax,0x4620800
  431643:	xor    BYTE PTR [rbx],al
  431645:	(bad)  
  431646:	add    dh,BYTE PTR [rax+0x1]
  431649:	push   rax
  43164a:	add    BYTE PTR [rax],al
  43164c:	add    DWORD PTR [rdi+rax*1],ecx
  43164f:	add    BYTE PTR [rdx+riz*2],cl
  431652:	or     BYTE PTR [rax],dh
  431654:	(bad)  
  431655:	(bad)  
  431656:	(bad)  
  431657:	jo     0x43165e
  431659:	push   rax
  43165a:	add    al,0xc0
  43165c:	add    dl,al
  43165e:	add    BYTE PTR [rax],al
  431660:	add    DWORD PTR [rax],ecx
  431662:	add    eax,0x4820800
  431667:	xor    BYTE PTR [rbx],al
  431669:	(bad)  
  43166a:	add    dh,BYTE PTR [rax+0x1]
  43166d:	push   rax
  43166e:	add    BYTE PTR [rax],al
  431670:	add    DWORD PTR [rdi+rax*1],ecx
  431673:	add    BYTE PTR [rdx+riz*2],cl
  431676:	or     BYTE PTR [rax],dh
  431678:	(bad)  
  431679:	(bad)  
  43167a:	(bad)  
  43167b:	jo     0x431682
  43167d:	push   rax
  43167e:	add    al,0xc0
  431680:	add    dl,al
  431682:	add    BYTE PTR [rax],al
  431684:	add    DWORD PTR [rdi],eax
  431686:	add    al,0x0
  431688:	(bad)  
  431689:	xor    al,BYTE PTR [rbx]
  43168b:	xor    BYTE PTR [rdx],al
  43168d:	(bad)  
  43168e:	add    DWORD PTR [rax+0x1],esi
  431691:	(bad)  
  431692:	add    eax,DWORD PTR [rax]
  431694:	(bad)  
  431695:	rex.X add sil,BYTE PTR [rax]
  431698:	add    DWORD PTR [rax+0x0],esp
  43169b:	add    BYTE PTR [rcx],al
  43169d:	(bad)  
  43169e:	add    al,0x0
  4316a0:	(bad)  
  4316a1:	xor    al,BYTE PTR [rbx]
  4316a3:	xor    BYTE PTR [rdx],al
  4316a5:	(bad)  
  4316a6:	add    DWORD PTR [rax+0x1],esi
  4316a9:	(bad)  
  4316aa:	add    al,0x0
  4316ac:	(bad)  
  4316ad:	xor    al,BYTE PTR [rbx]
  4316af:	xor    BYTE PTR [rdx],al
  4316b1:	(bad)  
  4316b2:	add    DWORD PTR [rax+0x1],esi
  4316b5:	(bad)  
  4316b6:	add    eax,DWORD PTR [rax]
  4316b8:	(bad)  
  4316b9:	rex.X add sil,BYTE PTR [rax]
  4316bc:	add    DWORD PTR [rax+0x0],esi
  4316bf:	add    BYTE PTR [rcx],al
  4316c1:	or     al,BYTE PTR [rsi]
  4316c3:	add    BYTE PTR [rdx],cl
  4316c5:	xor    al,BYTE PTR [rsi]
  4316c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31b2d
  4316cd:	push   rax
  4316ce:	add    al,al
  4316d0:	add    DWORD PTR [rdi+rax*1],ecx
  4316d3:	add    BYTE PTR [rdx+rax*2],cl
  4316d6:	or     BYTE PTR [rax],dh
  4316d8:	(bad)  
  4316d9:	(bad)  
  4316da:	(bad)  
  4316db:	jo     0x4316e2
  4316dd:	push   rax
  4316de:	add    al,0xc0
  4316e0:	add    dl,al
  4316e2:	add    BYTE PTR [rax],al
  4316e4:	add    DWORD PTR [rsi],eax
  4316e6:	add    eax,DWORD PTR [rax]
  4316e8:	(bad)  
  4316e9:	rex.X add sil,BYTE PTR [rax]
  4316ec:	add    DWORD PTR [rax+0x0],esp
  4316ef:	add    BYTE PTR [rcx],al
  4316f1:	or     BYTE PTR [rip+0x4420800],al        # 0x4851ef7
  4316f7:	xor    BYTE PTR [rbx],al
  4316f9:	(bad)  
  4316fa:	add    dh,BYTE PTR [rax+0x1]
  4316fd:	push   rax
  4316fe:	add    BYTE PTR [rax],al
  431700:	add    DWORD PTR [rax],edx
  431702:	or     DWORD PTR [rax],eax
  431704:	adc    BYTE PTR [rdx+0x600b300c],ah
  43170a:	or     dh,BYTE PTR [rax+0x9]
  43170d:	push   rax
  43170e:	or     al,al
  431710:	(bad)  
  431711:	rol    BYTE PTR [rax+riz*8],1
  431714:	add    dh,al
  431716:	add    BYTE PTR [rax],al
  431718:	add    DWORD PTR [rsi],eax
  43171a:	add    eax,DWORD PTR [rax]
  43171c:	(bad)  
  43171d:	rex.X add sil,BYTE PTR [rax]
  431720:	add    DWORD PTR [rax+0x0],esp
  431723:	add    BYTE PTR [rcx],al
  431725:	or     BYTE PTR [rip+0x4420800],al        # 0x4851f2b
  43172b:	xor    BYTE PTR [rbx],al
  43172d:	(bad)  
  43172e:	add    dh,BYTE PTR [rax+0x1]
  431731:	push   rax
  431732:	add    BYTE PTR [rax],al
  431734:	add    DWORD PTR [rax],edx
  431736:	or     DWORD PTR [rax],eax
  431738:	adc    BYTE PTR [rdx+0x600b300c],ah
  43173e:	or     dh,BYTE PTR [rax+0x9]
  431741:	push   rax
  431742:	or     al,al
  431744:	(bad)  
  431745:	rol    BYTE PTR [rax+riz*8],1
  431748:	add    dh,al
  43174a:	add    BYTE PTR [rax],al
  43174c:	add    DWORD PTR [rsi],ecx
  43174e:	or     BYTE PTR [rax],al
  431750:	(bad)  
  431751:	xor    cl,BYTE PTR [rdx]
  431753:	xor    BYTE PTR [rcx],cl
  431755:	(bad)  
  431756:	or     BYTE PTR [rax+0x7],dh
  431759:	push   rax
  43175a:	(bad)  
  43175b:	rol    BYTE PTR [rax+rdx*8],0x2
  43175f:	loopne 0x431762
  431761:	adc    BYTE PTR [rcx],cl
  431763:	add    BYTE PTR [rax],dl
  431765:	ret    0x300c
  431768:	or     esp,DWORD PTR [rax+0xa]
  43176b:	jo     0x431776
  43176d:	push   rax
  43176e:	or     al,al
  431770:	(bad)  
  431771:	rol    BYTE PTR [rax+riz*8],1
  431774:	add    dh,al
  431776:	add    BYTE PTR [rax],al
  431778:	add    DWORD PTR [rsi],eax
  43177a:	add    eax,DWORD PTR [rax]
  43177c:	(bad)  
  43177d:	rex.X add sil,BYTE PTR [rax]
  431780:	add    DWORD PTR [rax+0x0],esp
  431783:	add    BYTE PTR [rcx],al
  431785:	adc    ecx,DWORD PTR [rdx]
  431787:	add    BYTE PTR [rbx],dl
  431789:	add    DWORD PTR [rcx],esi
  43178b:	add    BYTE PTR [rax+rsi*1],cl
  43178e:	or     esp,DWORD PTR [rax+0xa]
  431791:	jo     0x43179c
  431793:	push   rax
  431794:	or     al,al
  431796:	(bad)  
  431797:	rol    BYTE PTR [rax+riz*8],1
  43179a:	add    dh,al
  43179c:	add    DWORD PTR [rbx],edx
  43179e:	or     al,BYTE PTR [rax]
  4317a0:	adc    eax,DWORD PTR [rcx]
  4317a2:	sub    DWORD PTR [rax],eax
  4317a4:	or     al,0x30
  4317a6:	or     esp,DWORD PTR [rax+0xa]
  4317a9:	jo     0x4317b4
  4317ab:	push   rax
  4317ac:	or     al,al
  4317ae:	(bad)  
  4317af:	rol    BYTE PTR [rax+riz*8],1
  4317b2:	add    dh,al
  4317b4:	add    DWORD PTR [rdx],ecx
  4317b6:	(bad)  
  4317b7:	add    BYTE PTR [rdx],cl
  4317b9:	push   rdx
  4317ba:	(bad)  
  4317bb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31c21
  4317c1:	push   rax
  4317c2:	add    al,al
  4317c4:	add    DWORD PTR [rbx],edx
  4317c6:	or     al,BYTE PTR [rax]
  4317c8:	adc    eax,DWORD PTR [rcx]
  4317ca:	adc    eax,DWORD PTR [rax]
  4317cc:	or     al,0x30
  4317ce:	or     esp,DWORD PTR [rax+0xa]
  4317d1:	jo     0x4317dc
  4317d3:	push   rax
  4317d4:	or     al,al
  4317d6:	(bad)  
  4317d7:	rol    BYTE PTR [rax+riz*8],1
  4317da:	add    dh,al
  4317dc:	add    DWORD PTR [rbx],edx
  4317de:	or     al,BYTE PTR [rax]
  4317e0:	adc    eax,DWORD PTR [rcx]
  4317e2:	adc    eax,DWORD PTR [rax]
  4317e4:	or     al,0x30
  4317e6:	or     esp,DWORD PTR [rax+0xa]
  4317e9:	jo     0x4317f4
  4317eb:	push   rax
  4317ec:	or     al,al
  4317ee:	(bad)  
  4317ef:	rol    BYTE PTR [rax+riz*8],1
  4317f2:	add    dh,al
  4317f4:	add    DWORD PTR [rax],edx
  4317f6:	or     DWORD PTR [rax],eax
  4317f8:	adc    BYTE PTR [rdx+0xc],ah
  4317fb:	xor    BYTE PTR [rbx],cl
  4317fd:	(bad)  
  4317fe:	or     dh,BYTE PTR [rax+0x9]
  431801:	push   rax
  431802:	or     al,al
  431804:	(bad)  
  431805:	rol    BYTE PTR [rax+riz*8],1
  431808:	add    dh,al
  43180a:	add    BYTE PTR [rax],al
  43180c:	add    DWORD PTR [rax],edx
  43180e:	or     DWORD PTR [rax],eax
  431810:	adc    BYTE PTR [rdx+0x600b300c],al
  431816:	or     dh,BYTE PTR [rax+0x9]
  431819:	push   rax
  43181a:	or     al,al
  43181c:	(bad)  
  43181d:	rol    BYTE PTR [rax+riz*8],1
  431820:	add    dh,al
  431822:	add    BYTE PTR [rax],al
  431824:	add    DWORD PTR [rax],ecx
  431826:	add    eax,0x4420800
  43182b:	xor    BYTE PTR [rbx],al
  43182d:	(bad)  
  43182e:	add    dh,BYTE PTR [rax+0x1]
  431831:	push   rax
  431832:	add    BYTE PTR [rax],al
  431834:	add    DWORD PTR [rax],ecx
  431836:	add    eax,0x4420800
  43183b:	xor    BYTE PTR [rbx],al
  43183d:	(bad)  
  43183e:	add    dh,BYTE PTR [rax+0x1]
  431841:	push   rax
  431842:	add    BYTE PTR [rax],al
  431844:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248184c
  43184a:	add    DWORD PTR [rax],esi
  43184c:	add    DWORD PTR [rsi],eax
  43184e:	add    eax,DWORD PTR [rax]
  431850:	(bad)  
  431851:	(bad)  
  431853:	xor    BYTE PTR [rcx],al
  431855:	(bad)  
  431856:	add    BYTE PTR [rax],al
  431858:	add    DWORD PTR [rcx+rax*1],eax
  43185b:	add    BYTE PTR [rdx+rax*2],al
  43185e:	add    BYTE PTR [rax],al
  431860:	add    DWORD PTR [rax],ecx
  431862:	add    eax,0x4420800
  431867:	xor    BYTE PTR [rbx],al
  431869:	(bad)  
  43186a:	add    dh,BYTE PTR [rax+0x1]
  43186d:	push   rax
  43186e:	add    BYTE PTR [rax],al
  431870:	add    DWORD PTR [rdx],ecx
  431872:	(bad)  
  431873:	add    BYTE PTR [rdx],cl
  431875:	xor    al,BYTE PTR [rsi]
  431877:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31cdd
  43187d:	push   rax
  43187e:	add    al,al
  431880:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481888
  431886:	add    DWORD PTR [rax],esi
  431888:	add    DWORD PTR [rsi],eax
  43188a:	add    eax,DWORD PTR [rax]
  43188c:	(bad)  
  43188d:	(bad)  
  43188f:	xor    BYTE PTR [rcx],al
  431891:	(bad)  
  431892:	add    BYTE PTR [rax],al
  431894:	add    DWORD PTR [rsi],ecx
  431896:	or     BYTE PTR [rax],al
  431898:	(bad)  
  431899:	push   rdx
  43189a:	or     dh,BYTE PTR [rax]
  43189c:	or     DWORD PTR [rax+0x8],esp
  43189f:	jo     0x4318a8
  4318a1:	push   rax
  4318a2:	(bad)  
  4318a3:	rol    BYTE PTR [rax+rdx*8],0x2
  4318a7:	loopne 0x4318aa
  4318a9:	adc    ecx,DWORD PTR [rdx]
  4318ab:	add    BYTE PTR [rbx],dl
  4318ad:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb7324b3
  4318b3:	(bad)  
  4318b4:	or     dh,BYTE PTR [rax+0x9]
  4318b7:	push   rax
  4318b8:	or     al,al
  4318ba:	(bad)  
  4318bb:	rol    BYTE PTR [rax+riz*8],1
  4318be:	add    dh,al
  4318c0:	add    DWORD PTR [rax],ecx
  4318c2:	add    eax,DWORD PTR [rax]
  4318c4:	or     BYTE PTR [rcx],al
  4318c6:	adc    al,BYTE PTR [rax]
  4318c8:	add    DWORD PTR [rax+0x0],esi
  4318cb:	add    BYTE PTR [rcx],al
  4318cd:	add    eax,0x72050002
  4318d2:	add    DWORD PTR [rax],esi
  4318d4:	add    DWORD PTR [rsi],eax
  4318d6:	add    eax,DWORD PTR [rax]
  4318d8:	(bad)  
  4318d9:	rex.X add sil,BYTE PTR [rax]
  4318dc:	add    DWORD PTR [rax+0x0],esp
  4318df:	add    BYTE PTR [rcx],al
  4318e1:	adc    ecx,DWORD PTR [rdx]
  4318e3:	add    BYTE PTR [rbx],dl
  4318e5:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb7324eb
  4318eb:	(bad)  
  4318ec:	or     dh,BYTE PTR [rax+0x9]
  4318ef:	push   rax
  4318f0:	or     al,al
  4318f2:	(bad)  
  4318f3:	rol    BYTE PTR [rax+riz*8],1
  4318f6:	add    dh,al
  4318f8:	add    DWORD PTR [rax],edx
  4318fa:	or     DWORD PTR [rax],eax
  4318fc:	adc    dl,al
  4318fe:	or     al,0x30
  431900:	or     esp,DWORD PTR [rax+0xa]
  431903:	jo     0x43190e
  431905:	push   rax
  431906:	or     al,al
  431908:	(bad)  
  431909:	rol    BYTE PTR [rax+riz*8],1
  43190c:	add    dh,al
  43190e:	add    BYTE PTR [rax],al
  431910:	add    DWORD PTR [rax],edx
  431912:	or     DWORD PTR [rax],eax
  431914:	adc    BYTE PTR [rdx+0xc],ah
  431917:	xor    BYTE PTR [rbx],cl
  431919:	(bad)  
  43191a:	or     dh,BYTE PTR [rax+0x9]
  43191d:	push   rax
  43191e:	or     al,al
  431920:	(bad)  
  431921:	rol    BYTE PTR [rax+riz*8],1
  431924:	add    dh,al
  431926:	add    BYTE PTR [rax],al
  431928:	add    DWORD PTR [rbx],edx
  43192a:	or     al,BYTE PTR [rax]
  43192c:	adc    eax,DWORD PTR [rcx]
  43192e:	(bad)  
  43192f:	add    BYTE PTR [rax+rsi*1],cl
  431932:	or     esp,DWORD PTR [rax+0xa]
  431935:	jo     0x431940
  431937:	push   rax
  431938:	or     al,al
  43193a:	(bad)  
  43193b:	rol    BYTE PTR [rax+riz*8],1
  43193e:	add    dh,al
  431940:	add    DWORD PTR [rbx],edx
  431942:	or     al,BYTE PTR [rax]
  431944:	adc    eax,DWORD PTR [rcx]
  431946:	sbb    DWORD PTR [rax],eax
  431948:	or     al,0x30
  43194a:	or     esp,DWORD PTR [rax+0xa]
  43194d:	jo     0x431958
  43194f:	push   rax
  431950:	or     al,al
  431952:	(bad)  
  431953:	rol    BYTE PTR [rax+riz*8],1
  431956:	add    dh,al
  431958:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481960
  43195e:	add    DWORD PTR [rax],esi
  431960:	add    DWORD PTR [rdi],eax
  431962:	add    al,0x0
  431964:	(bad)  
  431965:	xor    al,BYTE PTR [rbx]
  431967:	xor    BYTE PTR [rdx],al
  431969:	(bad)  
  43196a:	add    DWORD PTR [rax+0x1],esi
  43196d:	or     al,BYTE PTR [rsi]
  43196f:	add    BYTE PTR [rdx],cl
  431971:	push   rdx
  431972:	(bad)  
  431973:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31dd9
  431979:	push   rax
  43197a:	add    al,al
  43197c:	add    DWORD PTR [rax],edx
  43197e:	or     DWORD PTR [rax],eax
  431980:	adc    BYTE PTR [rdx+0xc],al
  431983:	xor    BYTE PTR [rbx],cl
  431985:	(bad)  
  431986:	or     dh,BYTE PTR [rax+0x9]
  431989:	push   rax
  43198a:	or     al,al
  43198c:	(bad)  
  43198d:	rol    BYTE PTR [rax+riz*8],1
  431990:	add    dh,al
  431992:	add    BYTE PTR [rax],al
  431994:	add    DWORD PTR [rsi],eax
  431996:	add    eax,DWORD PTR [rax]
  431998:	(bad)  
  431999:	rex.X add sil,BYTE PTR [rax]
  43199c:	add    DWORD PTR [rax+0x0],esp
  43199f:	add    BYTE PTR [rcx],al
  4319a1:	adc    BYTE PTR [rcx],cl
  4319a3:	add    BYTE PTR [rax],dl
  4319a5:	(bad)  
  4319a6:	or     al,0x30
  4319a8:	or     esp,DWORD PTR [rax+0xa]
  4319ab:	jo     0x4319b6
  4319ad:	push   rax
  4319ae:	or     al,al
  4319b0:	(bad)  
  4319b1:	rol    BYTE PTR [rax+riz*8],1
  4319b4:	add    dh,al
  4319b6:	add    BYTE PTR [rax],al
  4319b8:	add    DWORD PTR [rdi],eax
  4319ba:	add    al,0x0
  4319bc:	(bad)  
  4319bd:	xor    al,BYTE PTR [rbx]
  4319bf:	xor    BYTE PTR [rdx],al
  4319c1:	(bad)  
  4319c2:	add    DWORD PTR [rax+0x1],esi
  4319c5:	(bad)  
  4319c6:	or     BYTE PTR [rax],al
  4319c8:	(bad)  
  4319c9:	xor    cl,BYTE PTR [rdx]
  4319cb:	xor    BYTE PTR [rcx],cl
  4319cd:	(bad)  
  4319ce:	or     BYTE PTR [rax+0x7],dh
  4319d1:	push   rax
  4319d2:	(bad)  
  4319d3:	rol    BYTE PTR [rax+rdx*8],0x2
  4319d7:	loopne 0x4319da
  4319d9:	or     BYTE PTR [rip+0x4420800],al        # 0x48521df
  4319df:	xor    BYTE PTR [rbx],al
  4319e1:	(bad)  
  4319e2:	add    dh,BYTE PTR [rax+0x1]
  4319e5:	push   rax
  4319e6:	add    BYTE PTR [rax],al
  4319e8:	add    DWORD PTR [rax],edx
  4319ea:	or     DWORD PTR [rax],eax
  4319ec:	adc    BYTE PTR [rdx+0x600b300c],ah
  4319f2:	or     dh,BYTE PTR [rax+0x9]
  4319f5:	push   rax
  4319f6:	or     al,al
  4319f8:	(bad)  
  4319f9:	rol    BYTE PTR [rax+riz*8],1
  4319fc:	add    dh,al
  4319fe:	add    BYTE PTR [rax],al
  431a00:	add    DWORD PTR [rax],eax
  431a02:	add    BYTE PTR [rax],al
  431a04:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481a0c
  431a0a:	add    DWORD PTR [rax],esi
  431a0c:	add    DWORD PTR [rcx],eax
  431a0e:	add    DWORD PTR [rax],eax
  431a10:	add    DWORD PTR [rax],esi
  431a12:	add    BYTE PTR [rax],al
  431a14:	add    DWORD PTR [rbx],edx
  431a16:	or     al,BYTE PTR [rax]
  431a18:	adc    eax,DWORD PTR [rcx]
  431a1a:	sbb    eax,DWORD PTR [rax]
  431a1c:	or     al,0x30
  431a1e:	or     esp,DWORD PTR [rax+0xa]
  431a21:	jo     0x431a2c
  431a23:	push   rax
  431a24:	or     al,al
  431a26:	(bad)  
  431a27:	rol    BYTE PTR [rax+riz*8],1
  431a2a:	add    dh,al
  431a2c:	add    DWORD PTR [rsi],eax
  431a2e:	add    eax,DWORD PTR [rax]
  431a30:	(bad)  
  431a31:	(bad)  
  431a33:	xor    BYTE PTR [rcx],al
  431a35:	(bad)  
  431a36:	add    BYTE PTR [rax],al
  431a38:	add    DWORD PTR [rdi],eax
  431a3a:	add    al,0x0
  431a3c:	(bad)  
  431a3d:	xchg   edx,eax
  431a3e:	add    esi,DWORD PTR [rax]
  431a40:	add    ah,BYTE PTR [rax+0x1]
  431a43:	jo     0x431a46
  431a45:	(bad)  
  431a46:	add    eax,DWORD PTR [rax]
  431a48:	(bad)  
  431a49:	movabs ds:0xe01000060013002,al
  431a52:	or     BYTE PTR [rax],al
  431a54:	(bad)  
  431a55:	xor    cl,BYTE PTR [rdx]
  431a57:	xor    BYTE PTR [rcx],cl
  431a59:	(bad)  
  431a5a:	or     BYTE PTR [rax+0x7],dh
  431a5d:	push   rax
  431a5e:	(bad)  
  431a5f:	rol    BYTE PTR [rax+rdx*8],0x2
  431a63:	loopne 0x431a66
  431a65:	(bad)  
  431a66:	add    al,0x0
  431a68:	(bad)  
  431a69:	xchg   edx,eax
  431a6a:	add    esi,DWORD PTR [rax]
  431a6c:	add    ah,BYTE PTR [rax+0x1]
  431a6f:	jo     0x431a72
  431a71:	or     BYTE PTR [rip+0x4820800],al        # 0x4c52277
  431a77:	xor    BYTE PTR [rbx],al
  431a79:	(bad)  
  431a7a:	add    dh,BYTE PTR [rax+0x1]
  431a7d:	push   rax
  431a7e:	add    BYTE PTR [rax],al
  431a80:	add    DWORD PTR [rdx],ecx
  431a82:	(bad)  
  431a83:	add    BYTE PTR [rdx],cl
  431a85:	jb     0x431a8d
  431a87:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31eed
  431a8d:	push   rax
  431a8e:	add    al,al
  431a90:	add    DWORD PTR [rdi+rax*1],ecx
  431a93:	add    BYTE PTR [rdx+rax*2],cl
  431a96:	or     BYTE PTR [rax],dh
  431a98:	(bad)  
  431a99:	(bad)  
  431a9a:	(bad)  
  431a9b:	jo     0x431aa2
  431a9d:	push   rax
  431a9e:	add    al,0xc0
  431aa0:	add    dl,al
  431aa2:	add    BYTE PTR [rax],al
  431aa4:	add    DWORD PTR [rsi],ecx
  431aa6:	or     BYTE PTR [rax],al
  431aa8:	(bad)  
  431aa9:	xor    cl,BYTE PTR [rdx]
  431aab:	xor    BYTE PTR [rcx],cl
  431aad:	(bad)  
  431aae:	or     BYTE PTR [rax+0x7],dh
  431ab1:	push   rax
  431ab2:	(bad)  
  431ab3:	rol    BYTE PTR [rax+rdx*8],0x2
  431ab7:	loopne 0x431aba
  431ab9:	or     al,BYTE PTR [rsi]
  431abb:	add    BYTE PTR [rdx],cl
  431abd:	push   rdx
  431abe:	(bad)  
  431abf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31f25
  431ac5:	push   rax
  431ac6:	add    al,al
  431ac8:	add    DWORD PTR [rax],ecx
  431aca:	add    eax,0x4420800
  431acf:	xor    BYTE PTR [rbx],al
  431ad1:	(bad)  
  431ad2:	add    dh,BYTE PTR [rax+0x1]
  431ad5:	push   rax
  431ad6:	add    BYTE PTR [rax],al
  431ad8:	add    DWORD PTR [rsi],eax
  431ada:	add    eax,DWORD PTR [rax]
  431adc:	(bad)  
  431add:	rex.X add sil,BYTE PTR [rax]
  431ae0:	add    DWORD PTR [rax+0x0],esp
  431ae3:	add    BYTE PTR [rcx],al
  431ae5:	add    BYTE PTR [rax],al
  431ae7:	add    BYTE PTR [rcx],al
  431ae9:	add    BYTE PTR [rax],al
  431aeb:	add    BYTE PTR [rcx],al
  431aed:	add    BYTE PTR [rax],al
  431aef:	add    BYTE PTR [rcx],al
  431af1:	add    BYTE PTR [rax],al
  431af3:	add    BYTE PTR [rcx],al
  431af5:	or     BYTE PTR [rip+0x4c20800],al        # 0x50522fb
  431afb:	xor    BYTE PTR [rbx],al
  431afd:	(bad)  
  431afe:	add    dh,BYTE PTR [rax+0x1]
  431b01:	push   rax
  431b02:	add    BYTE PTR [rax],al
  431b04:	add    DWORD PTR [rsi],eax
  431b06:	add    eax,DWORD PTR [rax]
  431b08:	(bad)  
  431b09:	rex.X add sil,BYTE PTR [rax]
  431b0c:	add    DWORD PTR [rax+0x0],esp
  431b0f:	add    BYTE PTR [rcx],al
  431b11:	adc    ecx,DWORD PTR [rdx]
  431b13:	add    BYTE PTR [rbx],dl
  431b15:	add    DWORD PTR [rbx],ebp
  431b17:	add    BYTE PTR [rax+rsi*1],cl
  431b1a:	or     esp,DWORD PTR [rax+0xa]
  431b1d:	jo     0x431b28
  431b1f:	push   rax
  431b20:	or     al,al
  431b22:	(bad)  
  431b23:	rol    BYTE PTR [rax+riz*8],1
  431b26:	add    dh,al
  431b28:	add    DWORD PTR [rbx],edx
  431b2a:	or     al,BYTE PTR [rax]
  431b2c:	adc    eax,DWORD PTR [rcx]
  431b2e:	xor    DWORD PTR [rax],eax
  431b30:	or     al,0x30
  431b32:	or     esp,DWORD PTR [rax+0xa]
  431b35:	jo     0x431b40
  431b37:	push   rax
  431b38:	or     al,al
  431b3a:	(bad)  
  431b3b:	rol    BYTE PTR [rax+riz*8],1
  431b3e:	add    dh,al
  431b40:	add    DWORD PTR [rdi],eax
  431b42:	add    al,0x0
  431b44:	(bad)  
  431b45:	xor    al,BYTE PTR [rbx]
  431b47:	xor    BYTE PTR [rdx],al
  431b49:	(bad)  
  431b4a:	add    DWORD PTR [rax+0x1],esi
  431b4d:	(bad)  
  431b4e:	add    eax,DWORD PTR [rax]
  431b50:	(bad)  
  431b51:	ret    0x3002
  431b54:	add    DWORD PTR [rax+0x0],esp
  431b57:	add    BYTE PTR [rcx],al
  431b59:	or     al,BYTE PTR [rsi]
  431b5b:	add    BYTE PTR [rdx],cl
  431b5d:	xchg   edx,eax
  431b5e:	(bad)  
  431b5f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31fc5
  431b65:	push   rax
  431b66:	add    al,al
  431b68:	add    DWORD PTR [rdi+rax*1],ecx
  431b6b:	add    BYTE PTR [rdx+rax*2],cl
  431b6e:	or     BYTE PTR [rax],dh
  431b70:	(bad)  
  431b71:	(bad)  
  431b72:	(bad)  
  431b73:	jo     0x431b7a
  431b75:	push   rax
  431b76:	add    al,0xc0
  431b78:	add    dl,al
  431b7a:	add    BYTE PTR [rax],al
  431b7c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481b84
  431b82:	add    DWORD PTR [rax],esi
  431b84:	add    DWORD PTR [rdx],ecx
  431b86:	(bad)  
  431b87:	add    BYTE PTR [rdx],cl
  431b89:	push   rdx
  431b8a:	(bad)  
  431b8b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31ff1
  431b91:	push   rax
  431b92:	add    al,al
  431b94:	add    DWORD PTR [rbx],edx
  431b96:	or     al,BYTE PTR [rax]
  431b98:	adc    eax,DWORD PTR [rcx]
  431b9a:	sbb    eax,DWORD PTR [rax]
  431b9c:	or     al,0x30
  431b9e:	or     esp,DWORD PTR [rax+0xa]
  431ba1:	jo     0x431bac
  431ba3:	push   rax
  431ba4:	or     al,al
  431ba6:	(bad)  
  431ba7:	rol    BYTE PTR [rax+riz*8],1
  431baa:	add    dh,al
  431bac:	add    DWORD PTR [rax],edx
  431bae:	or     DWORD PTR [rax],eax
  431bb0:	adc    dl,al
  431bb2:	or     al,0x30
  431bb4:	or     esp,DWORD PTR [rax+0xa]
  431bb7:	jo     0x431bc2
  431bb9:	push   rax
  431bba:	or     al,al
  431bbc:	(bad)  
  431bbd:	rol    BYTE PTR [rax+riz*8],1
  431bc0:	add    dh,al
  431bc2:	add    BYTE PTR [rax],al
  431bc4:	add    DWORD PTR [rsi],eax
  431bc6:	add    eax,DWORD PTR [rax]
  431bc8:	(bad)  
  431bc9:	(bad)  
  431bcb:	xor    BYTE PTR [rcx],al
  431bcd:	(bad)  
  431bce:	add    BYTE PTR [rax],al
  431bd0:	add    DWORD PTR [rax],edx
  431bd2:	or     DWORD PTR [rax],eax
  431bd4:	adc    BYTE PTR [rdx+0xc],al
  431bd7:	xor    BYTE PTR [rbx],cl
  431bd9:	(bad)  
  431bda:	or     dh,BYTE PTR [rax+0x9]
  431bdd:	push   rax
  431bde:	or     al,al
  431be0:	(bad)  
  431be1:	rol    BYTE PTR [rax+riz*8],1
  431be4:	add    dh,al
  431be6:	add    BYTE PTR [rax],al
  431be8:	add    DWORD PTR [rax],ecx
  431bea:	add    eax,0x4a20800
  431bef:	xor    BYTE PTR [rbx],al
  431bf1:	(bad)  
  431bf2:	add    dh,BYTE PTR [rax+0x1]
  431bf5:	push   rax
  431bf6:	add    BYTE PTR [rax],al
  431bf8:	add    DWORD PTR [rcx+rax*1],eax
  431bfb:	add    BYTE PTR [rdx+rax*2],al
  431bfe:	add    BYTE PTR [rax],al
  431c00:	add    DWORD PTR [rcx+rax*1],eax
  431c03:	add    BYTE PTR [rdx+rax*2],al
  431c06:	add    BYTE PTR [rax],al
  431c08:	add    DWORD PTR [rax],eax
  431c0a:	add    BYTE PTR [rax],al
  431c0c:	add    DWORD PTR [rsi],eax
  431c0e:	add    eax,DWORD PTR [rax]
  431c10:	(bad)  
  431c11:	rex.X add sil,BYTE PTR [rax]
  431c14:	add    DWORD PTR [rax+0x0],esp
  431c17:	add    BYTE PTR [rcx],al
  431c19:	(bad)  
  431c1a:	add    eax,DWORD PTR [rax]
  431c1c:	(bad)  
  431c1d:	rex.X add sil,BYTE PTR [rax]
  431c20:	add    DWORD PTR [rax+0x0],esp
  431c23:	add    BYTE PTR [rcx],al
  431c25:	add    eax,0x32050002
  431c2a:	add    DWORD PTR [rax],esi
  431c2c:	add    DWORD PTR [rbx],eax
  431c2e:	add    eax,DWORD PTR [rax]
  431c30:	add    esi,DWORD PTR [rax]
  431c32:	add    ah,BYTE PTR [rax+0x1]
  431c35:	jo     0x431c37
  431c37:	add    BYTE PTR [rcx],al
  431c39:	adc    ecx,DWORD PTR [rdx]
  431c3b:	add    BYTE PTR [rbx],dl
  431c3d:	add    DWORD PTR [rcx],ecx
  431c3f:	add    DWORD PTR [rax+rsi*1],ecx
  431c42:	or     esp,DWORD PTR [rax+0xa]
  431c45:	jo     0x431c50
  431c47:	push   rax
  431c48:	or     al,al
  431c4a:	(bad)  
  431c4b:	rol    BYTE PTR [rax+riz*8],1
  431c4e:	add    dh,al
  431c50:	add    DWORD PTR [rax],edx
  431c52:	or     DWORD PTR [rax],eax
  431c54:	adc    BYTE PTR [rdx+0x600b300c],al
  431c5a:	or     dh,BYTE PTR [rax+0x9]
  431c5d:	push   rax
  431c5e:	or     al,al
  431c60:	(bad)  
  431c61:	rol    BYTE PTR [rax+riz*8],1
  431c64:	add    dh,al
  431c66:	add    BYTE PTR [rax],al
  431c68:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481c70
  431c6e:	add    DWORD PTR [rax],esi
  431c70:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481c78
  431c76:	add    DWORD PTR [rax],esi
  431c78:	add    DWORD PTR [rax],ecx
  431c7a:	add    eax,0x4620800
  431c7f:	xor    BYTE PTR [rbx],al
  431c81:	(bad)  
  431c82:	add    dh,BYTE PTR [rax+0x1]
  431c85:	push   rax
  431c86:	add    BYTE PTR [rax],al
  431c88:	add    DWORD PTR [rcx+rax*1],eax
  431c8b:	add    BYTE PTR [rdx+riz*2],al
  431c8e:	add    BYTE PTR [rax],al
  431c90:	add    DWORD PTR [rbx],ebx
  431c92:	or     eax,DWORD PTR [rbp+0x113031b]
  431c98:	movabs ds:0x9700a600b300c00,eax
  431ca1:	rol    BYTE PTR [rdi],0xd0
  431ca4:	add    eax,0x1f003e0
  431ca9:	push   rax
  431caa:	add    BYTE PTR [rax],al
  431cac:	add    DWORD PTR [rax],eax
  431cae:	add    BYTE PTR [rax],al
  431cb0:	add    DWORD PTR [rax],eax
  431cb2:	add    BYTE PTR [rax],al
  431cb4:	add    DWORD PTR [rcx+rax*1],eax
  431cb7:	add    BYTE PTR [rdx+rax*2],al
  431cba:	add    BYTE PTR [rax],al
  431cbc:	add    DWORD PTR [rax],eax
  431cbe:	add    BYTE PTR [rax],al
  431cc0:	add    DWORD PTR [rax],edx
  431cc2:	or     DWORD PTR [rax],eax
  431cc4:	adc    BYTE PTR [rdx+0x600b300c],ah
  431cca:	or     dh,BYTE PTR [rax+0x9]
  431ccd:	push   rax
  431cce:	or     al,al
  431cd0:	(bad)  
  431cd1:	rol    BYTE PTR [rax+riz*8],1
  431cd4:	add    dh,al
  431cd6:	add    BYTE PTR [rax],al
  431cd8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481ce0
  431cde:	add    DWORD PTR [rax],esi
  431ce0:	add    DWORD PTR [rax],eax
  431ce2:	add    BYTE PTR [rax],al
  431ce4:	add    DWORD PTR [rsi],eax
  431ce6:	add    eax,DWORD PTR [rax]
  431ce8:	(bad)  
  431ce9:	(bad)  
  431ceb:	xor    BYTE PTR [rcx],al
  431ced:	(bad)  
  431cee:	add    BYTE PTR [rax],al
  431cf0:	add    DWORD PTR [rax],eax
  431cf2:	add    BYTE PTR [rax],al
  431cf4:	add    DWORD PTR [rbx],ecx
  431cf6:	(bad)  
  431cf7:	add    BYTE PTR [rbx],cl
  431cf9:	add    DWORD PTR [rdi+0x0],eax
  431cfc:	add    al,0x30
  431cfe:	add    esp,DWORD PTR [rax+0x2]
  431d01:	jo     0x431d04
  431d03:	push   rax
  431d04:	add    DWORD PTR [rdi],eax
  431d06:	add    al,0x0
  431d08:	(bad)  
  431d09:	push   rdx
  431d0a:	add    esi,DWORD PTR [rax]
  431d0c:	add    ah,BYTE PTR [rax+0x1]
  431d0f:	jo     0x431d12
  431d11:	sbb    ecx,DWORD PTR [rbx]
  431d13:	test   DWORD PTR [rbx],ebx
  431d15:	add    edx,DWORD PTR [rbx]
  431d17:	add    DWORD PTR [rbx],edx
  431d19:	add    BYTE PTR [rax+rsi*1],cl
  431d1c:	or     esp,DWORD PTR [rax+0xa]
  431d1f:	jo     0x431d2a
  431d21:	rol    BYTE PTR [rdi],0xd0
  431d24:	add    eax,0x1f003e0
  431d29:	push   rax
  431d2a:	add    BYTE PTR [rax],al
  431d2c:	add    DWORD PTR [rbx],ebx
  431d2e:	or     eax,DWORD PTR [rbp+0x113031b]
  431d34:	sub    DWORD PTR [rcx],eax
  431d36:	or     al,0x30
  431d38:	or     esp,DWORD PTR [rax+0xa]
  431d3b:	jo     0x431d46
  431d3d:	rol    BYTE PTR [rdi],0xd0
  431d40:	add    eax,0x1f003e0
  431d45:	push   rax
  431d46:	add    BYTE PTR [rax],al
  431d48:	add    DWORD PTR [rdi],eax
  431d4a:	add    al,0x0
  431d4c:	(bad)  
  431d4d:	push   rdx
  431d4e:	add    esi,DWORD PTR [rax]
  431d50:	add    ah,BYTE PTR [rax+0x1]
  431d53:	jo     0x431d56
  431d55:	(bad)  
  431d56:	add    al,0x0
  431d58:	(bad)  
  431d59:	xchg   edx,eax
  431d5a:	add    esi,DWORD PTR [rax]
  431d5c:	add    ah,BYTE PTR [rax+0x1]
  431d5f:	jo     0x431d62
  431d61:	(bad)  
  431d62:	add    al,0x0
  431d64:	(bad)  
  431d65:	push   rdx
  431d66:	add    esi,DWORD PTR [rax]
  431d68:	add    ah,BYTE PTR [rax+0x1]
  431d6b:	jo     0x431d6e
  431d6d:	(bad)  
  431d6e:	add    eax,DWORD PTR [rax]
  431d70:	(bad)  
  431d71:	(bad)  
  431d72:	add    dh,BYTE PTR [rax]
  431d74:	add    DWORD PTR [rax+0x0],esp
  431d77:	add    BYTE PTR [rcx],al
  431d79:	(bad)  
  431d7a:	add    eax,DWORD PTR [rax]
  431d7c:	(bad)  
  431d7d:	rex.X add sil,BYTE PTR [rax]
  431d80:	add    DWORD PTR [rax+0x0],esp
  431d83:	add    BYTE PTR [rcx],al
  431d85:	add    al,0x1
  431d87:	add    BYTE PTR [rdx+riz*2],al
  431d8a:	add    BYTE PTR [rax],al
  431d8c:	add    DWORD PTR [rdi],eax
  431d8e:	add    al,0x0
  431d90:	(bad)  
  431d91:	xor    al,BYTE PTR [rbx]
  431d93:	xor    BYTE PTR [rdx],al
  431d95:	(bad)  
  431d96:	add    DWORD PTR [rax+0x1],esi
  431d99:	add    BYTE PTR [rax],al
  431d9b:	add    BYTE PTR [rcx],al
  431d9d:	add    BYTE PTR [rax],al
  431d9f:	add    BYTE PTR [rcx],al
  431da1:	add    BYTE PTR [rax],al
  431da3:	add    BYTE PTR [rcx],al
  431da5:	add    BYTE PTR [rax],al
  431da7:	add    BYTE PTR [rcx],al
  431da9:	add    al,0x1
  431dab:	add    BYTE PTR [rdx+riz*2],al
  431dae:	add    BYTE PTR [rax],al
  431db0:	add    DWORD PTR [rcx+rax*1],eax
  431db3:	add    BYTE PTR [rdx+rax*2],al
  431db6:	add    BYTE PTR [rax],al
  431db8:	add    DWORD PTR [rax],eax
  431dba:	add    BYTE PTR [rax],al
  431dbc:	add    DWORD PTR [rdx],ecx
  431dbe:	(bad)  
  431dbf:	add    BYTE PTR [rdx],cl
  431dc1:	mov    dl,0x6
  431dc3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32229
  431dc9:	push   rax
  431dca:	add    al,al
  431dcc:	add    DWORD PTR [rax],ecx
  431dce:	add    eax,0x4a20800
  431dd3:	xor    BYTE PTR [rbx],al
  431dd5:	(bad)  
  431dd6:	add    dh,BYTE PTR [rax+0x1]
  431dd9:	push   rax
  431dda:	add    BYTE PTR [rax],al
  431ddc:	add    DWORD PTR [rax],ecx
  431dde:	add    eax,DWORD PTR [rax]
  431de0:	or     BYTE PTR [rcx],al
  431de2:	cmp    BYTE PTR [rax],al
  431de4:	add    DWORD PTR [rax],esi
  431de6:	add    BYTE PTR [rax],al
  431de8:	add    DWORD PTR [rcx+rax*1],eax
  431deb:	add    BYTE PTR [rdx+rax*2],al
  431dee:	add    BYTE PTR [rax],al
  431df0:	add    DWORD PTR [rcx+rax*1],eax
  431df3:	add    BYTE PTR [rdx+rax*2],al
  431df6:	add    BYTE PTR [rax],al
  431df8:	add    DWORD PTR [rip+0x72050002],eax        # 0x72481e00
  431dfe:	add    DWORD PTR [rax],esi
  431e00:	add    DWORD PTR [rip+0x52050002],eax        # 0x52481e08
  431e06:	add    DWORD PTR [rax],esi
  431e08:	add    DWORD PTR [rcx+rax*1],eax
  431e0b:	add    BYTE PTR [rdx+rax*2],al
  431e0e:	add    BYTE PTR [rax],al
  431e10:	add    DWORD PTR [rcx+rax*1],eax
  431e13:	add    BYTE PTR [rdx+rax*2],al
  431e16:	add    BYTE PTR [rax],al
  431e18:	add    DWORD PTR [rsi],eax
  431e1a:	add    eax,DWORD PTR [rax]
  431e1c:	(bad)  
  431e1d:	rex.X add sil,BYTE PTR [rax]
  431e20:	add    DWORD PTR [rax+0x0],esp
  431e23:	add    BYTE PTR [rcx],al
  431e25:	add    BYTE PTR [rax],al
  431e27:	add    BYTE PTR [rcx],al
  431e29:	add    BYTE PTR [rax],al
  431e2b:	add    BYTE PTR [rcx],al
  431e2d:	add    BYTE PTR [rax],al
  431e2f:	add    BYTE PTR [rcx],al
  431e31:	or     al,BYTE PTR [rsi]
  431e33:	add    BYTE PTR [rdx],cl
  431e35:	jb     0x431e3d
  431e37:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3229d
  431e3d:	push   rax
  431e3e:	add    al,al
  431e40:	add    DWORD PTR [rdx],ecx
  431e42:	add    eax,0x6d20a05
  431e47:	add    eax,DWORD PTR [rbx]
  431e49:	xor    BYTE PTR [rdx],al
  431e4b:	(bad)  
  431e4c:	add    DWORD PTR [rax+0x0],edx
  431e4f:	add    BYTE PTR [rcx],al
  431e51:	add    al,0x1
  431e53:	add    BYTE PTR [rdx+rax*2],al
  431e56:	add    BYTE PTR [rax],al
  431e58:	add    DWORD PTR [rsi],eax
  431e5a:	add    eax,DWORD PTR [rax]
  431e5c:	(bad)  
  431e5d:	rex.X add sil,BYTE PTR [rax]
  431e60:	add    DWORD PTR [rax+0x0],esp
  431e63:	add    BYTE PTR [rcx],al
  431e65:	add    BYTE PTR [rax],al
  431e67:	add    BYTE PTR [rcx],al
  431e69:	add    al,0x1
  431e6b:	add    BYTE PTR [rdx+riz*4],al
  431e6e:	add    BYTE PTR [rax],al
  431e70:	add    DWORD PTR [rax],eax
  431e72:	add    BYTE PTR [rax],al
  431e74:	add    DWORD PTR [rsi],edx
  431e76:	or     DWORD PTR [rax],eax
  431e78:	(bad)  
  431e79:	mov    BYTE PTR [rsi],al
  431e7b:	add    BYTE PTR [rax],dl
  431e7d:	js     0x431e84
  431e7f:	add    BYTE PTR [rbx],cl
  431e81:	push   0xffffffffe2060004
  431e86:	add    dh,BYTE PTR [rax]
  431e88:	add    DWORD PTR [rax+0x0],esp
  431e8b:	add    BYTE PTR [rcx],al
  431e8d:	add    BYTE PTR [rax],al
  431e8f:	add    BYTE PTR [rcx],al
  431e91:	add    BYTE PTR [rax],al
  431e93:	add    BYTE PTR [rcx],al
  431e95:	add    BYTE PTR [rax],al
  431e97:	add    BYTE PTR [rcx],al
  431e99:	(bad)  
  431e9a:	add    eax,DWORD PTR [rax]
  431e9c:	(bad)  
  431e9d:	(bad)  
  431e9f:	xor    BYTE PTR [rcx],al
  431ea1:	(bad)  
  431ea2:	add    BYTE PTR [rax],al
  431ea4:	add    DWORD PTR [rdi+rax*1],ecx
  431ea7:	add    BYTE PTR [rdx+riz*4],cl
  431eaa:	or     BYTE PTR [rax],dh
  431eac:	(bad)  
  431ead:	(bad)  
  431eae:	(bad)  
  431eaf:	jo     0x431eb6
  431eb1:	push   rax
  431eb2:	add    al,0xc0
  431eb4:	add    dl,al
  431eb6:	add    BYTE PTR [rax],al
  431eb8:	add    DWORD PTR [rcx],edx
  431eba:	or     DWORD PTR [rip+0x30db211],eax        # 0x350d0d1
  431ec0:	or     dh,BYTE PTR [rax]
  431ec2:	or     DWORD PTR [rax+0x8],esp
  431ec5:	jo     0x431ece
  431ec7:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x223229e
  431ece:	add    BYTE PTR [rax],al
  431ed0:	add    DWORD PTR [rcx+rax*1],eax
  431ed3:	add    BYTE PTR [rdx+rax*2],al
  431ed6:	add    BYTE PTR [rax],al
  431ed8:	add    DWORD PTR [rdx],ecx
  431eda:	(bad)  
  431edb:	add    BYTE PTR [rdx],cl
  431edd:	xor    al,BYTE PTR [rsi]
  431edf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32345
  431ee5:	push   rax
  431ee6:	add    al,al
  431ee8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481ef0
  431eee:	add    DWORD PTR [rax],esi
  431ef0:	add    DWORD PTR [rax],ecx
  431ef2:	add    eax,0x4420800
  431ef7:	xor    BYTE PTR [rbx],al
  431ef9:	(bad)  
  431efa:	add    dh,BYTE PTR [rax+0x1]
  431efd:	push   rax
  431efe:	add    BYTE PTR [rax],al
  431f00:	add    DWORD PTR [rdi],eax
  431f02:	add    al,0x0
  431f04:	(bad)  
  431f05:	xor    al,BYTE PTR [rbx]
  431f07:	xor    BYTE PTR [rdx],al
  431f09:	(bad)  
  431f0a:	add    DWORD PTR [rax+0x1],esi
  431f0d:	add    eax,0x32050002
  431f12:	add    DWORD PTR [rax],esi
  431f14:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481f1c
  431f1a:	add    DWORD PTR [rax],esi
  431f1c:	add    DWORD PTR [rax],eax
  431f1e:	add    BYTE PTR [rax],al
  431f20:	add    DWORD PTR [rax],eax
  431f22:	add    BYTE PTR [rax],al
  431f24:	add    DWORD PTR [rax],eax
  431f26:	add    BYTE PTR [rax],al
  431f28:	add    DWORD PTR [rdi],eax
  431f2a:	add    al,0x0
  431f2c:	(bad)  
  431f2d:	xor    al,BYTE PTR [rbx]
  431f2f:	xor    BYTE PTR [rdx],al
  431f31:	(bad)  
  431f32:	add    DWORD PTR [rax+0x1],esi
  431f35:	(bad)  
  431f36:	add    eax,DWORD PTR [rax]
  431f38:	(bad)  
  431f39:	rex.X add sil,BYTE PTR [rax]
  431f3c:	add    DWORD PTR [rax+0x0],esp
  431f3f:	add    BYTE PTR [rcx],al
  431f41:	add    eax,0x32050002
  431f46:	add    DWORD PTR [rax],esi
  431f48:	add    DWORD PTR [rdi],eax
  431f4a:	add    al,0x0
  431f4c:	(bad)  
  431f4d:	xor    al,BYTE PTR [rbx]
  431f4f:	xor    BYTE PTR [rdx],al
  431f51:	(bad)  
  431f52:	add    DWORD PTR [rax+0x1],esi
  431f55:	(bad)  
  431f56:	add    eax,DWORD PTR [rax]
  431f58:	(bad)  
  431f59:	rex.X add sil,BYTE PTR [rax]
  431f5c:	add    DWORD PTR [rax+0x0],esp
  431f5f:	add    BYTE PTR [rcx],al
  431f61:	(bad)  
  431f62:	add    eax,DWORD PTR [rax]
  431f64:	(bad)  
  431f65:	rex.X add sil,BYTE PTR [rax]
  431f68:	add    DWORD PTR [rax+0x0],esp
  431f6b:	add    BYTE PTR [rcx],al
  431f6d:	or     BYTE PTR [rip+0x4420800],al        # 0x4852773
  431f73:	xor    BYTE PTR [rbx],al
  431f75:	(bad)  
  431f76:	add    dh,BYTE PTR [rax+0x1]
  431f79:	push   rax
  431f7a:	add    BYTE PTR [rax],al
  431f7c:	add    DWORD PTR [rdx],ecx
  431f7e:	add    eax,0x26010a00
  431f83:	add    BYTE PTR [rbx],al
  431f85:	xor    BYTE PTR [rdx],al
  431f87:	(bad)  
  431f88:	add    DWORD PTR [rax+0x0],esi
  431f8b:	add    BYTE PTR [rcx],al
  431f8d:	or     eax,DWORD PTR [rsi]
  431f8f:	add    BYTE PTR [rbx],cl
  431f91:	add    DWORD PTR [rbx],ebp
  431f93:	add    BYTE PTR [rax+rsi*1],al
  431f96:	add    esp,DWORD PTR [rax+0x2]
  431f99:	jo     0x431f9c
  431f9b:	push   rax
  431f9c:	add    DWORD PTR [rsi],eax
  431f9e:	add    eax,DWORD PTR [rax]
  431fa0:	(bad)  
  431fa1:	rex.X add sil,BYTE PTR [rax]
  431fa4:	add    DWORD PTR [rax+0x0],esp
  431fa7:	add    BYTE PTR [rcx],al
  431fa9:	add    eax,0x32050002
  431fae:	add    DWORD PTR [rax],esi
  431fb0:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481fb8
  431fb6:	add    DWORD PTR [rax],esi
  431fb8:	add    DWORD PTR [rsi],eax
  431fba:	add    eax,DWORD PTR [rax]
  431fbc:	(bad)  
  431fbd:	rex.X add sil,BYTE PTR [rax]
  431fc0:	add    DWORD PTR [rax+0x0],esp
  431fc3:	add    BYTE PTR [rcx],al
  431fc5:	add    BYTE PTR [rax],al
  431fc7:	add    BYTE PTR [rcx],al
  431fc9:	or     eax,0x10d0007
  431fce:	rex.WX add BYTE PTR [rsi],al
  431fd1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32437
  431fd7:	push   rax
  431fd8:	add    al,al
  431fda:	add    BYTE PTR [rax],al
  431fdc:	add    DWORD PTR [rax],ecx
  431fde:	add    eax,0x4620800
  431fe3:	xor    BYTE PTR [rbx],al
  431fe5:	(bad)  
  431fe6:	add    dh,BYTE PTR [rax+0x1]
  431fe9:	push   rax
  431fea:	add    BYTE PTR [rax],al
  431fec:	add    DWORD PTR [rcx+rax*1],eax
  431fef:	add    BYTE PTR [rdx+riz*4],al
  431ff2:	add    BYTE PTR [rax],al
  431ff4:	add    DWORD PTR [rdi],eax
  431ff6:	add    al,0x0
  431ff8:	(bad)  
  431ff9:	push   rdx
  431ffa:	add    esi,DWORD PTR [rax]
  431ffc:	add    ah,BYTE PTR [rax+0x1]
  431fff:	jo     0x432002
  432001:	(bad)  
  432002:	or     BYTE PTR [rax],al
  432004:	(bad)  
  432005:	push   rdx
  432006:	or     dh,BYTE PTR [rax]
  432008:	or     DWORD PTR [rax+0x8],esp
  43200b:	jo     0x432014
  43200d:	push   rax
  43200e:	(bad)  
  43200f:	rol    BYTE PTR [rax+rdx*8],0x2
  432013:	loopne 0x432016
  432015:	add    BYTE PTR [rax],al
  432017:	add    BYTE PTR [rcx],al
  432019:	add    al,0x1
  43201b:	add    BYTE PTR [rdx+riz*2],al
  43201e:	add    BYTE PTR [rax],al
  432020:	add    DWORD PTR [rsi],eax
  432022:	add    eax,DWORD PTR [rax]
  432024:	(bad)  
  432025:	(bad)  
  432027:	xor    BYTE PTR [rcx],al
  432029:	(bad)  
  43202a:	add    BYTE PTR [rax],al
  43202c:	add    DWORD PTR [rsi],eax
  43202e:	add    eax,DWORD PTR [rax]
  432030:	(bad)  
  432031:	(bad)  
  432033:	xor    BYTE PTR [rcx],al
  432035:	(bad)  
  432036:	add    BYTE PTR [rax],al
  432038:	add    DWORD PTR [rip+0x52050002],eax        # 0x52482040
  43203e:	add    DWORD PTR [rax],esi
  432040:	add    DWORD PTR [rcx+rax*1],eax
  432043:	add    BYTE PTR [rdx+riz*4],al
  432046:	add    BYTE PTR [rax],al
  432048:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482050
  43204e:	add    DWORD PTR [rax],esi
  432050:	add    DWORD PTR [rsi],ecx
  432052:	or     BYTE PTR [rax],al
  432054:	(bad)  
  432055:	jb     0x432061
  432057:	xor    BYTE PTR [rcx],cl
  432059:	(bad)  
  43205a:	or     BYTE PTR [rax+0x7],dh
  43205d:	push   rax
  43205e:	(bad)  
  43205f:	rol    BYTE PTR [rax+rdx*8],0x2
  432063:	loopne 0x432066
  432065:	(bad)  
  432066:	add    al,0x0
  432068:	(bad)  
  432069:	xor    al,BYTE PTR [rbx]
  43206b:	xor    BYTE PTR [rdx],al
  43206d:	(bad)  
  43206e:	add    DWORD PTR [rax+0x1],esi
  432071:	add    al,0x1
  432073:	add    BYTE PTR [rdx+riz*2],al
  432076:	add    BYTE PTR [rax],al
  432078:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x52502585
  43207e:	or     DWORD PTR [rbx],eax
  432080:	(bad)  
  432081:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b324e7
  432087:	rol    BYTE PTR [rcx],0x50
  43208a:	add    BYTE PTR [rax],al
  43208c:	add    DWORD PTR [rdx],ecx
  43208e:	(bad)  
  43208f:	add    BYTE PTR [rdx],cl
  432091:	xor    al,BYTE PTR [rsi]
  432093:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b324f9
  432099:	push   rax
  43209a:	add    al,al
  43209c:	add    DWORD PTR [rsi],eax
  43209e:	add    eax,DWORD PTR [rax]
  4320a0:	(bad)  
  4320a1:	ret    0x3002
  4320a4:	add    DWORD PTR [rax+0x0],esp
  4320a7:	add    BYTE PTR [rcx],al
  4320a9:	adc    al,0x8
  4320ab:	test   DWORD PTR [rbx+rax*1],edx
  4320ae:	or     al,0x42
  4320b0:	or     BYTE PTR [rax],dh
  4320b2:	(bad)  
  4320b3:	(bad)  
  4320b4:	(bad)  
  4320b5:	jo     0x4320bc
  4320b7:	rol    BYTE PTR [rbx],0xd0
  4320ba:	add    DWORD PTR [rax+0x1],edx
  4320bd:	(bad)  
  4320be:	add    al,0x0
  4320c0:	(bad)  
  4320c1:	xor    al,BYTE PTR [rbx]
  4320c3:	xor    BYTE PTR [rdx],al
  4320c5:	(bad)  
  4320c6:	add    DWORD PTR [rax+0x1],esi
  4320c9:	(bad)  
  4320ca:	add    eax,DWORD PTR [rax]
  4320cc:	(bad)  
  4320cd:	ret    0x3002
  4320d0:	add    DWORD PTR [rax+0x0],esp
  4320d3:	add    BYTE PTR [rcx],al
  4320d5:	(bad)  
  4320d6:	add    eax,DWORD PTR [rax]
  4320d8:	(bad)  
  4320d9:	loop   0x4320dd
  4320db:	xor    BYTE PTR [rcx],al
  4320dd:	(bad)  
  4320de:	add    BYTE PTR [rax],al
  4320e0:	add    DWORD PTR [rcx],edx
  4320e2:	or     DWORD PTR [rip+0x30d3211],eax        # 0x35052f9
  4320e8:	or     dh,BYTE PTR [rax]
  4320ea:	or     DWORD PTR [rax+0x8],esp
  4320ed:	jo     0x4320f6
  4320ef:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22324c6
  4320f6:	add    BYTE PTR [rax],al
  4320f8:	add    DWORD PTR [rdi+rax*1],ecx
  4320fb:	add    BYTE PTR [rdx+rax*8],cl
  4320fe:	or     BYTE PTR [rax],dh
  432100:	(bad)  
  432101:	(bad)  
  432102:	(bad)  
  432103:	jo     0x43210a
  432105:	push   rax
  432106:	add    al,0xc0
  432108:	add    dl,al
  43210a:	add    BYTE PTR [rax],al
  43210c:	add    DWORD PTR [rbx],edx
  43210e:	or     al,BYTE PTR [rax]
  432110:	adc    eax,DWORD PTR [rcx]
  432112:	(bad)  
  432113:	add    BYTE PTR [rax+rsi*1],cl
  432116:	or     esp,DWORD PTR [rax+0xa]
  432119:	jo     0x432124
  43211b:	push   rax
  43211c:	or     al,al
  43211e:	(bad)  
  43211f:	rol    BYTE PTR [rax+riz*8],1
  432122:	add    dh,al
  432124:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248212c
  43212a:	add    DWORD PTR [rax],esi
  43212c:	add    DWORD PTR [rsi],eax
  43212e:	add    eax,DWORD PTR [rax]
  432130:	(bad)  
  432131:	rex.X add sil,BYTE PTR [rax]
  432134:	add    DWORD PTR [rax+0x0],esp
  432137:	add    BYTE PTR [rcx],al
  432139:	add    BYTE PTR [rax],al
  43213b:	add    BYTE PTR [rcx],al
  43213d:	adc    BYTE PTR [rcx],cl
  43213f:	add    BYTE PTR [rax],dl
  432141:	(bad)  
  432142:	or     al,0x30
  432144:	or     esp,DWORD PTR [rax+0xa]
  432147:	jo     0x432152
  432149:	push   rax
  43214a:	or     al,al
  43214c:	(bad)  
  43214d:	rol    BYTE PTR [rax+riz*8],1
  432150:	add    dh,al
  432152:	add    BYTE PTR [rax],al
  432154:	add    DWORD PTR [rbx],ebx
  432156:	or     al,0x0
  432158:	sbb    ebp,DWORD PTR [rax+0xa]
  43215b:	add    BYTE PTR [rbx],dl
  43215d:	add    DWORD PTR [rdi],edx
  43215f:	add    BYTE PTR [rax+rsi*1],cl
  432162:	or     esp,DWORD PTR [rax+0xa]
  432165:	jo     0x432170
  432167:	push   rax
  432168:	or     al,al
  43216a:	(bad)  
  43216b:	rol    BYTE PTR [rax+riz*8],1
  43216e:	add    dh,al
  432170:	add    DWORD PTR [rsp+rax*1],eax
  432173:	add    BYTE PTR [rax+rsi*1],al
  432176:	add    esp,DWORD PTR [rax+0x2]
  432179:	jo     0x43217c
  43217b:	push   rax
  43217c:	add    DWORD PTR [rax],eax
  43217e:	add    BYTE PTR [rax],al
  432180:	add    DWORD PTR [rsi],eax
  432182:	add    eax,DWORD PTR [rax]
  432184:	(bad)  
  432185:	rex.X add sil,BYTE PTR [rax]
  432188:	add    DWORD PTR [rax+0x0],esp
  43218b:	add    BYTE PTR [rcx],al
  43218d:	add    eax,0x32050002
  432192:	add    DWORD PTR [rax],esi
  432194:	add    DWORD PTR [rdi],eax
  432196:	add    al,0x0
  432198:	(bad)  
  432199:	xor    al,BYTE PTR [rbx]
  43219b:	xor    BYTE PTR [rdx],al
  43219d:	(bad)  
  43219e:	add    DWORD PTR [rax+0x1],esi
  4321a1:	add    eax,0x32050002
  4321a6:	add    DWORD PTR [rax],esi
  4321a8:	add    DWORD PTR [rax],ecx
  4321aa:	add    eax,0x4420800
  4321af:	xor    BYTE PTR [rbx],al
  4321b1:	(bad)  
  4321b2:	add    dh,BYTE PTR [rax+0x1]
  4321b5:	push   rax
  4321b6:	add    BYTE PTR [rax],al
  4321b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324821c0
  4321be:	add    DWORD PTR [rax],esi
  4321c0:	add    DWORD PTR [rsi],ecx
  4321c2:	or     BYTE PTR [rax],al
  4321c4:	(bad)  
  4321c5:	xor    cl,BYTE PTR [rdx]
  4321c7:	xor    BYTE PTR [rcx],cl
  4321c9:	(bad)  
  4321ca:	or     BYTE PTR [rax+0x7],dh
  4321cd:	push   rax
  4321ce:	(bad)  
  4321cf:	rol    BYTE PTR [rax+rdx*8],0x2
  4321d3:	loopne 0x4321d6
  4321d5:	or     BYTE PTR [rip+0x4420800],al        # 0x48529db
  4321db:	xor    BYTE PTR [rbx],al
  4321dd:	(bad)  
  4321de:	add    dh,BYTE PTR [rax+0x1]
  4321e1:	push   rax
  4321e2:	add    BYTE PTR [rax],al
  4321e4:	add    DWORD PTR [rdi+rax*1],ecx
  4321e7:	add    BYTE PTR [rdx+rax*2],cl
  4321ea:	or     BYTE PTR [rax],dh
  4321ec:	(bad)  
  4321ed:	(bad)  
  4321ee:	(bad)  
  4321ef:	jo     0x4321f6
  4321f1:	push   rax
  4321f2:	add    al,0xc0
  4321f4:	add    dl,al
  4321f6:	add    BYTE PTR [rax],al
  4321f8:	add    DWORD PTR [rax],eax
  4321fa:	add    BYTE PTR [rax],al
  4321fc:	add    DWORD PTR [rdi],eax
  4321fe:	add    al,0x0
  432200:	(bad)  
  432201:	xor    al,BYTE PTR [rbx]
  432203:	xor    BYTE PTR [rdx],al
  432205:	(bad)  
  432206:	add    DWORD PTR [rax+0x1],esi
  432209:	(bad)  
  43220a:	add    eax,DWORD PTR [rax]
  43220c:	(bad)  
  43220d:	and    al,BYTE PTR [rdx]
  43220f:	xor    BYTE PTR [rcx],al
  432211:	(bad)  
  432212:	add    BYTE PTR [rax],al
  432214:	add    DWORD PTR [rdi],eax
  432216:	add    al,0x0
  432218:	(bad)  
  432219:	xor    al,BYTE PTR [rbx]
  43221b:	xor    BYTE PTR [rdx],al
  43221d:	(bad)  
  43221e:	add    DWORD PTR [rax+0x1],esi
  432221:	add    BYTE PTR [rax],al
  432223:	add    BYTE PTR [rcx],al
  432225:	or     BYTE PTR [rip+0x4820800],al        # 0x4c52a2b
  43222b:	xor    BYTE PTR [rbx],al
  43222d:	(bad)  
  43222e:	add    dh,BYTE PTR [rax+0x1]
  432231:	push   rax
  432232:	add    BYTE PTR [rax],al
  432234:	add    DWORD PTR [rax],ecx
  432236:	add    eax,0x4a20800
  43223b:	xor    BYTE PTR [rbx],al
  43223d:	(bad)  
  43223e:	add    dh,BYTE PTR [rax+0x1]
  432241:	push   rax
  432242:	add    BYTE PTR [rax],al
  432244:	add    DWORD PTR [rax],edx
  432246:	or     DWORD PTR [rax],eax
  432248:	adc    BYTE PTR [rdx+0x600b300c],al
  43224e:	or     dh,BYTE PTR [rax+0x9]
  432251:	push   rax
  432252:	or     al,al
  432254:	(bad)  
  432255:	rol    BYTE PTR [rax+riz*8],1
  432258:	add    dh,al
  43225a:	add    BYTE PTR [rax],al
  43225c:	add    DWORD PTR [rax],ecx
  43225e:	add    eax,0x4820800
  432263:	xor    BYTE PTR [rbx],al
  432265:	(bad)  
  432266:	add    dh,BYTE PTR [rax+0x1]
  432269:	push   rax
  43226a:	add    BYTE PTR [rax],al
  43226c:	add    DWORD PTR [rax],eax
  43226e:	add    BYTE PTR [rax],al
  432270:	add    DWORD PTR [rax],eax
  432272:	add    BYTE PTR [rax],al
  432274:	add    DWORD PTR [rax],eax
  432276:	add    BYTE PTR [rax],al
  432278:	add    DWORD PTR [rax],eax
  43227a:	add    BYTE PTR [rax],al
  43227c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482284
  432282:	add    DWORD PTR [rax],esi
  432284:	add    DWORD PTR [rcx+rax*1],eax
  432287:	add    BYTE PTR [rdx+rax*2],al
  43228a:	add    BYTE PTR [rax],al
  43228c:	add    DWORD PTR [rax],eax
  43228e:	add    BYTE PTR [rax],al
  432290:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000433000 <.bss>:
	...

Disassembly of section .idata:

0000000000438000 <.idata>:
  438000:	mov    WORD PTR [rax+0x3],es
  438006:	add    BYTE PTR [rax],al
  438008:	add    BYTE PTR [rax],al
  43800a:	add    BYTE PTR [rax],al
  43800c:	mov    BYTE PTR [rbp-0x760bfffd],ch
  438012:	add    eax,DWORD PTR [rax]
  438014:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438015:	test   BYTE PTR [rbx],al
	...
  43801f:	add    BYTE PTR [rsi+rbp*4],bh
  438022:	add    eax,DWORD PTR [rax]
  438024:	or     al,0x8e
  438026:	add    eax,DWORD PTR [rax]
  438028:	in     al,dx
  438029:	test   DWORD PTR [rbx],eax
	...
  438033:	add    ah,al
  438035:	scas   eax,DWORD PTR es:[rdi]
  438036:	add    eax,DWORD PTR [rax]
  438038:	push   rsp
  438039:	pop    QWORD PTR [rbx]
  43803b:	add    ah,ah
  43803d:	mov    BYTE PTR [rbx],al
	...
  438047:	add    ah,bl
  438049:	scas   eax,DWORD PTR es:[rdi]
  43804a:	add    eax,DWORD PTR [rax]
  43804c:	rex.WR xchg rdx,rax
  43804e:	add    eax,DWORD PTR [rax]
  438050:	add    al,0x89
  438052:	add    eax,DWORD PTR [rax]
	...
  43805c:	add    al,0xb0
  43805e:	add    eax,DWORD PTR [rax]
  438060:	ins    BYTE PTR es:[rdi],dx
  438061:	xchg   edx,eax
  438062:	add    eax,DWORD PTR [rax]
  438064:	xor    al,0x89
  438066:	add    eax,DWORD PTR [rax]
	...
  438070:	ins    BYTE PTR es:[rdi],dx
  438071:	mov    al,0x3
  438073:	add    BYTE PTR [rdx+rdx*4+0x3],bl
	...
  43808a:	add    BYTE PTR [rax],al
  43808c:	pop    rsp
  43808d:	xchg   ebx,eax
  43808e:	add    eax,DWORD PTR [rax]
  438090:	add    BYTE PTR [rax],al
  438092:	add    BYTE PTR [rax],al
  438094:	adc    BYTE PTR [rbx+0x3],0x0
  43809b:	add    BYTE PTR [rax+0x393],ch
  4380a1:	add    BYTE PTR [rax],al
  4380a3:	add    al,cl
  4380a5:	xchg   ebx,eax
  4380a6:	add    eax,DWORD PTR [rax]
  4380a8:	add    BYTE PTR [rax],al
  4380aa:	add    BYTE PTR [rax],al
  4380ac:	fcom   QWORD PTR [rbx+0x3]
  4380b2:	add    BYTE PTR [rax],al
  4380b4:	hlt    
  4380b5:	xchg   ebx,eax
  4380b6:	add    eax,DWORD PTR [rax]
  4380b8:	add    BYTE PTR [rax],al
  4380ba:	add    BYTE PTR [rax],al
  4380bc:	sbb    BYTE PTR [rbx+rax*1+0x0],dl
  4380c3:	add    BYTE PTR [rsp+rdx*4+0x3],al
  4380c7:	add    BYTE PTR [rax],al
  4380c9:	add    BYTE PTR [rax],al
  4380cb:	add    BYTE PTR [rsp+rdx*4+0x3],ch
  4380cf:	add    BYTE PTR [rax],al
  4380d1:	add    BYTE PTR [rax],al
  4380d3:	add    BYTE PTR [rsp+rdx*4+0x3],al
  4380da:	add    BYTE PTR [rax],al
  4380dc:	xchg   esp,eax
  4380dd:	xchg   esp,eax
  4380de:	add    eax,DWORD PTR [rax]
  4380e0:	add    BYTE PTR [rax],al
  4380e2:	add    BYTE PTR [rax],al
  4380e4:	rcl    BYTE PTR [rbx+rax*1+0x0],0x0
  4380ec:	lock xchg esp,eax
  4380ee:	add    eax,DWORD PTR [rax]
  4380f0:	add    BYTE PTR [rax],al
  4380f2:	add    BYTE PTR [rax],al
  4380f4:	sbb    BYTE PTR [rbp+0x3],dl
  4380fa:	add    BYTE PTR [rax],al
  4380fc:	cmp    BYTE PTR [rbp+0x3],dl
  438102:	add    BYTE PTR [rax],al
  438104:	pop    rax
  438105:	xchg   ebp,eax
  438106:	add    eax,DWORD PTR [rax]
  438108:	add    BYTE PTR [rax],al
  43810a:	add    BYTE PTR [rax],al
  43810c:	test   BYTE PTR [rbp+0x3],dl
  438112:	add    BYTE PTR [rax],al
  438114:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438115:	xchg   ebp,eax
  438116:	add    eax,DWORD PTR [rax]
  438118:	add    BYTE PTR [rax],al
  43811a:	add    BYTE PTR [rax],al
  43811c:	enter  0x395,0x0
  438120:	add    BYTE PTR [rax],al
  438122:	add    BYTE PTR [rax],al
  438124:	call   0x4384be
  438129:	add    BYTE PTR [rax],al
  43812b:	add    BYTE PTR [rax],bl
  43812d:	xchg   esi,eax
  43812e:	add    eax,DWORD PTR [rax]
  438130:	add    BYTE PTR [rax],al
  438132:	add    BYTE PTR [rax],al
  438134:	cmp    al,0x96
  438136:	add    eax,DWORD PTR [rax]
  438138:	add    BYTE PTR [rax],al
  43813a:	add    BYTE PTR [rax],al
  43813c:	push   rsp
  43813d:	xchg   esi,eax
  43813e:	add    eax,DWORD PTR [rax]
  438140:	add    BYTE PTR [rax],al
  438142:	add    BYTE PTR [rax],al
  438144:	push   0x396
  438149:	add    BYTE PTR [rax],al
  43814b:	add    BYTE PTR [rsi+rdx*4+0x3],al
  438152:	add    BYTE PTR [rax],al
  438154:	pushf  
  438155:	xchg   esi,eax
  438156:	add    eax,DWORD PTR [rax]
  438158:	add    BYTE PTR [rax],al
  43815a:	add    BYTE PTR [rax],al
  43815c:	mov    eax,0x396
  438161:	add    BYTE PTR [rax],al
  438163:	add    ah,dl
  438165:	xchg   esi,eax
  438166:	add    eax,DWORD PTR [rax]
  438168:	add    BYTE PTR [rax],al
  43816a:	add    BYTE PTR [rax],al
  43816c:	hlt    
  43816d:	xchg   esi,eax
  43816e:	add    eax,DWORD PTR [rax]
  438170:	add    BYTE PTR [rax],al
  438172:	add    BYTE PTR [rax],al
  438174:	adc    BYTE PTR [rdi+0x3],dl
  43817a:	add    BYTE PTR [rax],al
  43817c:	sub    al,0x97
  43817e:	add    eax,DWORD PTR [rax]
  438180:	add    BYTE PTR [rax],al
  438182:	add    BYTE PTR [rax],al
  438184:	cmp    al,0x97
  438186:	add    eax,DWORD PTR [rax]
  438188:	add    BYTE PTR [rax],al
  43818a:	add    BYTE PTR [rax],al
  43818c:	push   rsp
  43818d:	xchg   edi,eax
  43818e:	add    eax,DWORD PTR [rax]
  438190:	add    BYTE PTR [rax],al
  438192:	add    BYTE PTR [rax],al
  438194:	js     0x43812d
  438196:	add    eax,DWORD PTR [rax]
  438198:	add    BYTE PTR [rax],al
  43819a:	add    BYTE PTR [rax],al
  43819c:	xchg   esp,eax
  43819d:	xchg   edi,eax
  43819e:	add    eax,DWORD PTR [rax]
  4381a0:	add    BYTE PTR [rax],al
  4381a2:	add    BYTE PTR [rax],al
  4381a4:	lods   al,BYTE PTR ds:[rsi]
  4381a5:	xchg   edi,eax
  4381a6:	add    eax,DWORD PTR [rax]
  4381a8:	add    BYTE PTR [rax],al
  4381aa:	add    BYTE PTR [rax],al
  4381ac:	enter  0x397,0x0
  4381b0:	add    BYTE PTR [rax],al
  4381b2:	add    BYTE PTR [rax],al
  4381b4:	in     al,0x97
  4381b6:	add    eax,DWORD PTR [rax]
  4381b8:	add    BYTE PTR [rax],al
  4381ba:	add    BYTE PTR [rax],al
  4381bc:	or     BYTE PTR [rax+0x3],bl
  4381c2:	add    BYTE PTR [rax],al
  4381c4:	sub    BYTE PTR [rax+0x3],bl
  4381ca:	add    BYTE PTR [rax],al
  4381cc:	cdqe   
  4381ce:	add    eax,DWORD PTR [rax]
  4381d0:	add    BYTE PTR [rax],al
  4381d2:	add    BYTE PTR [rax],al
  4381d4:	(bad)  
  4381d5:	cwde   
  4381d6:	add    eax,DWORD PTR [rax]
  4381d8:	add    BYTE PTR [rax],al
  4381da:	add    BYTE PTR [rax],al
  4381dc:	jl     0x438176
  4381de:	add    eax,DWORD PTR [rax]
  4381e0:	add    BYTE PTR [rax],al
  4381e2:	add    BYTE PTR [rax],al
  4381e4:	xchg   esp,eax
  4381e5:	cwde   
  4381e6:	add    eax,DWORD PTR [rax]
  4381e8:	add    BYTE PTR [rax],al
  4381ea:	add    BYTE PTR [rax],al
  4381ec:	lods   al,BYTE PTR ds:[rsi]
  4381ed:	cwde   
  4381ee:	add    eax,DWORD PTR [rax]
  4381f0:	add    BYTE PTR [rax],al
  4381f2:	add    BYTE PTR [rax],al
  4381f4:	enter  0x398,0x0
  4381f8:	add    BYTE PTR [rax],al
  4381fa:	add    BYTE PTR [rax],al
  4381fc:	in     al,0x98
  4381fe:	add    eax,DWORD PTR [rax]
  438200:	add    BYTE PTR [rax],al
  438202:	add    BYTE PTR [rax],al
  438204:	cld    
  438205:	cwde   
  438206:	add    eax,DWORD PTR [rax]
  438208:	add    BYTE PTR [rax],al
  43820a:	add    BYTE PTR [rax],al
  43820c:	adc    al,0x99
  43820e:	add    eax,DWORD PTR [rax]
  438210:	add    BYTE PTR [rax],al
  438212:	add    BYTE PTR [rax],al
  438214:	and    al,0x99
  438216:	add    eax,DWORD PTR [rax]
  438218:	add    BYTE PTR [rax],al
  43821a:	add    BYTE PTR [rax],al
  43821c:	cmp    al,0x99
  43821e:	add    eax,DWORD PTR [rax]
  438220:	add    BYTE PTR [rax],al
  438222:	add    BYTE PTR [rax],al
  438224:	push   rsp
  438225:	cdq    
  438226:	add    eax,DWORD PTR [rax]
  438228:	add    BYTE PTR [rax],al
  43822a:	add    BYTE PTR [rax],al
  43822c:	js     0x4381c7
  43822e:	add    eax,DWORD PTR [rax]
  438230:	add    BYTE PTR [rax],al
  438232:	add    BYTE PTR [rax],al
  438234:	cwde   
  438235:	cdq    
  438236:	add    eax,DWORD PTR [rax]
  438238:	add    BYTE PTR [rax],al
  43823a:	add    BYTE PTR [rax],al
  43823c:	lods   al,BYTE PTR ds:[rsi]
  43823d:	cdq    
  43823e:	add    eax,DWORD PTR [rax]
  438240:	add    BYTE PTR [rax],al
  438242:	add    BYTE PTR [rax],al
  438244:	enter  0x399,0x0
  438248:	add    BYTE PTR [rax],al
  43824a:	add    BYTE PTR [rax],al
  43824c:	in     al,0x99
  43824e:	add    eax,DWORD PTR [rax]
  438250:	add    BYTE PTR [rax],al
  438252:	add    BYTE PTR [rax],al
  438254:	cld    
  438255:	cdq    
  438256:	add    eax,DWORD PTR [rax]
  438258:	add    BYTE PTR [rax],al
  43825a:	add    BYTE PTR [rax],al
  43825c:	adc    al,0x9a
  43825e:	add    eax,DWORD PTR [rax]
  438260:	add    BYTE PTR [rax],al
  438262:	add    BYTE PTR [rax],al
  438264:	and    al,0x9a
  438266:	add    eax,DWORD PTR [rax]
  438268:	add    BYTE PTR [rax],al
  43826a:	add    BYTE PTR [rax],al
  43826c:	xor    al,0x9a
  43826e:	add    eax,DWORD PTR [rax]
  438270:	add    BYTE PTR [rax],al
  438272:	add    BYTE PTR [rax],al
  438274:	rex.WR (bad) 
  438276:	add    eax,DWORD PTR [rax]
  438278:	add    BYTE PTR [rax],al
  43827a:	add    BYTE PTR [rax],al
  43827c:	(bad)  
  43827d:	(bad)  
  43827e:	add    eax,DWORD PTR [rax]
  438280:	add    BYTE PTR [rax],al
  438282:	add    BYTE PTR [rax],al
  438284:	je     0x438220
  438286:	add    eax,DWORD PTR [rax]
  438288:	add    BYTE PTR [rax],al
  43828a:	add    BYTE PTR [rax],al
  43828c:	mov    WORD PTR [rdx+0x3],ds
  438292:	add    BYTE PTR [rax],al
  438294:	movabs al,ds:0xb00000000000039a
  43829d:	(bad)  
  43829e:	add    eax,DWORD PTR [rax]
  4382a0:	add    BYTE PTR [rax],al
  4382a2:	add    BYTE PTR [rax],al
  4382a4:	fcomp  QWORD PTR [rdx+0x3]
  4382aa:	add    BYTE PTR [rax],al
  4382ac:	add    BYTE PTR [rbx+0x3],bl
  4382b2:	add    BYTE PTR [rax],al
  4382b4:	sub    BYTE PTR [rbx+0x3],bl
  4382ba:	add    BYTE PTR [rax],al
  4382bc:	rex.R
  4382bd:	fwait
  4382be:	add    eax,DWORD PTR [rax]
  4382c0:	add    BYTE PTR [rax],al
  4382c2:	add    BYTE PTR [rax],al
  4382c4:	(bad)  
  4382c5:	fwait
  4382c6:	add    eax,DWORD PTR [rax]
  4382c8:	add    BYTE PTR [rax],al
  4382ca:	add    BYTE PTR [rax],al
  4382cc:	jl     0x438269
  4382ce:	add    eax,DWORD PTR [rax]
  4382d0:	add    BYTE PTR [rax],al
  4382d2:	add    BYTE PTR [rax],al
  4382d4:	cwde   
  4382d5:	fwait
  4382d6:	add    eax,DWORD PTR [rax]
  4382d8:	add    BYTE PTR [rax],al
  4382da:	add    BYTE PTR [rax],al
  4382dc:	mov    ah,0x9b
  4382de:	add    eax,DWORD PTR [rax]
  4382e0:	add    BYTE PTR [rax],al
  4382e2:	add    BYTE PTR [rax],al
  4382e4:	rcr    BYTE PTR [rbx+0x3],1
  4382ea:	add    BYTE PTR [rax],al
  4382ec:	lock fwait
  4382ee:	add    eax,DWORD PTR [rax]
  4382f0:	add    BYTE PTR [rax],al
  4382f2:	add    BYTE PTR [rax],al
  4382f4:	add    al,0x9c
  4382f6:	add    eax,DWORD PTR [rax]
  4382f8:	add    BYTE PTR [rax],al
  4382fa:	add    BYTE PTR [rax],al
  4382fc:	sub    al,0x9c
  4382fe:	add    eax,DWORD PTR [rax]
  438300:	add    BYTE PTR [rax],al
  438302:	add    BYTE PTR [rax],al
  438304:	push   rax
  438305:	pushf  
  438306:	add    eax,DWORD PTR [rax]
  438308:	add    BYTE PTR [rax],al
  43830a:	add    BYTE PTR [rax],al
  43830c:	je     0x4382aa
  43830e:	add    eax,DWORD PTR [rax]
  438310:	add    BYTE PTR [rax],al
  438312:	add    BYTE PTR [rax],al
  438314:	movabs al,ds:0xb80000000000039c
  43831d:	pushf  
  43831e:	add    eax,DWORD PTR [rax]
  438320:	add    BYTE PTR [rax],al
  438322:	add    BYTE PTR [rax],al
  438324:	fcomp  DWORD PTR [rbx+rax*1+0x0]
  43832b:	add    al,bh
  43832d:	pushf  
  43832e:	add    eax,DWORD PTR [rax]
  438330:	add    BYTE PTR [rax],al
  438332:	add    BYTE PTR [rax],al
  438334:	adc    al,0x9d
  438336:	add    eax,DWORD PTR [rax]
  438338:	add    BYTE PTR [rax],al
  43833a:	add    BYTE PTR [rax],al
  43833c:	xor    BYTE PTR [rbp+0x3],bl
  438342:	add    BYTE PTR [rax],al
  438344:	push   rax
  438345:	popf   
  438346:	add    eax,DWORD PTR [rax]
  438348:	add    BYTE PTR [rax],al
  43834a:	add    BYTE PTR [rax],al
  43834c:	push   0x39d
  438351:	add    BYTE PTR [rax],al
  438353:	add    BYTE PTR [rax+0x39d],cl
  438359:	add    BYTE PTR [rax],al
  43835b:	add    BYTE PTR [rbp+rbx*4+0x3],ch
  438362:	add    BYTE PTR [rax],al
  438364:	int3   
  438365:	popf   
  438366:	add    eax,DWORD PTR [rax]
  438368:	add    BYTE PTR [rax],al
  43836a:	add    BYTE PTR [rax],al
  43836c:	in     al,0x9d
  43836e:	add    eax,DWORD PTR [rax]
  438370:	add    BYTE PTR [rax],al
  438372:	add    BYTE PTR [rax],al
  438374:	cld    
  438375:	popf   
  438376:	add    eax,DWORD PTR [rax]
  438378:	add    BYTE PTR [rax],al
  43837a:	add    BYTE PTR [rax],al
  43837c:	sbb    BYTE PTR [rsi+0x3],bl
  438382:	add    BYTE PTR [rax],al
  438384:	cmp    BYTE PTR [rsi+0x3],bl
  43838a:	add    BYTE PTR [rax],al
  43838c:	push   rsp
  43838d:	sahf   
  43838e:	add    eax,DWORD PTR [rax]
  438390:	add    BYTE PTR [rax],al
  438392:	add    BYTE PTR [rax],al
  438394:	ins    BYTE PTR es:[rdi],dx
  438395:	sahf   
  438396:	add    eax,DWORD PTR [rax]
  438398:	add    BYTE PTR [rax],al
  43839a:	add    BYTE PTR [rax],al
  43839c:	nop
  43839d:	sahf   
  43839e:	add    eax,DWORD PTR [rax]
  4383a0:	add    BYTE PTR [rax],al
  4383a2:	add    BYTE PTR [rax],al
  4383a4:	lods   al,BYTE PTR ds:[rsi]
  4383a5:	sahf   
  4383a6:	add    eax,DWORD PTR [rax]
  4383a8:	add    BYTE PTR [rax],al
  4383aa:	add    BYTE PTR [rax],al
  4383ac:	enter  0x39e,0x0
  4383b0:	add    BYTE PTR [rax],al
  4383b2:	add    BYTE PTR [rax],al
  4383b4:	in     al,dx
  4383b5:	sahf   
  4383b6:	add    eax,DWORD PTR [rax]
  4383b8:	add    BYTE PTR [rax],al
  4383ba:	add    BYTE PTR [rax],al
  4383bc:	or     BYTE PTR [rdi+0x3],bl
  4383c2:	add    BYTE PTR [rax],al
  4383c4:	xor    al,0x9f
  4383c6:	add    eax,DWORD PTR [rax]
  4383c8:	add    BYTE PTR [rax],al
  4383ca:	add    BYTE PTR [rax],al
  4383cc:	push   rax
  4383cd:	lahf   
  4383ce:	add    eax,DWORD PTR [rax]
  4383d0:	add    BYTE PTR [rax],al
  4383d2:	add    BYTE PTR [rax],al
  4383d4:	ins    BYTE PTR es:[rdi],dx
  4383d5:	lahf   
  4383d6:	add    eax,DWORD PTR [rax]
  4383d8:	add    BYTE PTR [rax],al
  4383da:	add    BYTE PTR [rax],al
  4383dc:	test   BYTE PTR [rdi+0x3],bl
  4383e2:	add    BYTE PTR [rax],al
  4383e4:	movabs al,ds:0xbc0000000000039f
  4383ed:	lahf   
  4383ee:	add    eax,DWORD PTR [rax]
  4383f0:	add    BYTE PTR [rax],al
  4383f2:	add    BYTE PTR [rax],al
  4383f4:	fcomp  DWORD PTR [rdi+0x3]
  4383fa:	add    BYTE PTR [rax],al
  4383fc:	cld    
  4383fd:	lahf   
  4383fe:	add    eax,DWORD PTR [rax]
  438400:	add    BYTE PTR [rax],al
  438402:	add    BYTE PTR [rax],al
  438404:	adc    al,0xa0
  438406:	add    eax,DWORD PTR [rax]
  438408:	add    BYTE PTR [rax],al
  43840a:	add    BYTE PTR [rax],al
  43840c:	sub    BYTE PTR [rax+0x3],ah
  438412:	add    BYTE PTR [rax],al
  438414:	push   rsp
  438415:	movabs al,ds:0xa07c000000000003
  43841e:	add    eax,DWORD PTR [rax]
  438420:	add    BYTE PTR [rax],al
  438422:	add    BYTE PTR [rax],al
  438424:	movabs al,ds:0xc0000000000003a0
  43842d:	movabs al,ds:0xa0e4000000000003
  438436:	add    eax,DWORD PTR [rax]
  438438:	add    BYTE PTR [rax],al
  43843a:	add    BYTE PTR [rax],al
  43843c:	clc    
  43843d:	movabs al,ds:0xa114000000000003
  438446:	add    eax,DWORD PTR [rax]
  438448:	add    BYTE PTR [rax],al
  43844a:	add    BYTE PTR [rax],al
  43844c:	xor    BYTE PTR [rcx+0x3],ah
  438452:	add    BYTE PTR [rax],al
  438454:	pop    rax
  438455:	movabs eax,ds:0xa188000000000003
  43845e:	add    eax,DWORD PTR [rax]
  438460:	add    BYTE PTR [rax],al
  438462:	add    BYTE PTR [rax],al
  438464:	mov    al,0xa1
  438466:	add    eax,DWORD PTR [rax]
  438468:	add    BYTE PTR [rax],al
  43846a:	add    BYTE PTR [rax],al
  43846c:	int3   
  43846d:	movabs eax,ds:0xa1e8000000000003
  438476:	add    eax,DWORD PTR [rax]
  438478:	add    BYTE PTR [rax],al
  43847a:	add    BYTE PTR [rax],al
  43847c:	add    al,0xa2
  43847e:	add    eax,DWORD PTR [rax]
  438480:	add    BYTE PTR [rax],al
  438482:	add    BYTE PTR [rax],al
  438484:	sbb    al,0xa2
  438486:	add    eax,DWORD PTR [rax]
  438488:	add    BYTE PTR [rax],al
  43848a:	add    BYTE PTR [rax],al
  43848c:	cmp    al,0xa2
  43848e:	add    eax,DWORD PTR [rax]
  438490:	add    BYTE PTR [rax],al
  438492:	add    BYTE PTR [rax],al
  438494:	push   rsp
  438495:	movabs ds:0x3,al
  43849e:	add    BYTE PTR [rax],al
  4384a0:	add    BYTE PTR [rax],al
  4384a2:	add    BYTE PTR [rax],al
  4384a4:	ins    BYTE PTR es:[rdi],dx
  4384a5:	movabs ds:0xa27c000000000003,al
  4384ae:	add    eax,DWORD PTR [rax]
  4384b0:	add    BYTE PTR [rax],al
  4384b2:	add    BYTE PTR [rax],al
  4384b4:	xchg   esp,eax
  4384b5:	movabs ds:0xa2ac000000000003,al
  4384be:	add    eax,DWORD PTR [rax]
  4384c0:	add    BYTE PTR [rax],al
  4384c2:	add    BYTE PTR [rax],al
  4384c4:	mov    esi,0x3a2
  4384c9:	add    BYTE PTR [rax],al
  4384cb:	add    al,dl
  4384cd:	movabs ds:0xa2e4000000000003,al
  4384d6:	add    eax,DWORD PTR [rax]
  4384d8:	add    BYTE PTR [rax],al
  4384da:	add    BYTE PTR [rax],al
  4384dc:	cli    
  4384dd:	movabs ds:0xa310000000000003,al
  4384e6:	add    eax,DWORD PTR [rax]
  4384e8:	add    BYTE PTR [rax],al
  4384ea:	add    BYTE PTR [rax],al
  4384ec:	movabs es:0xa334000000000003,eax
  4384f6:	add    eax,DWORD PTR [rax]
  4384f8:	add    BYTE PTR [rax],al
  4384fa:	add    BYTE PTR [rax],al
  4384fc:	rex.R movabs ds:0xa35a000000000003,eax
  438506:	add    eax,DWORD PTR [rax]
  438508:	add    BYTE PTR [rax],al
  43850a:	add    BYTE PTR [rax],al
  43850c:	outs   dx,BYTE PTR ds:[rsi]
  43850d:	movabs ds:0xa382000000000003,eax
  438516:	add    eax,DWORD PTR [rax]
  438518:	add    BYTE PTR [rax],al
  43851a:	add    BYTE PTR [rax],al
  43851c:	movabs ds:0xb4000000000003a3,al
  438525:	movabs ds:0xa3c6000000000003,eax
  43852e:	add    eax,DWORD PTR [rax]
  438530:	add    BYTE PTR [rax],al
  438532:	add    BYTE PTR [rax],al
  438534:	loopne 0x4384d9
  438536:	add    eax,DWORD PTR [rax]
  438538:	add    BYTE PTR [rax],al
  43853a:	add    BYTE PTR [rax],al
  43853c:	lock movabs ds:0xa40c000000000003,eax
  438546:	add    eax,DWORD PTR [rax]
  438548:	add    BYTE PTR [rax],al
  43854a:	add    BYTE PTR [rax],al
  43854c:	and    BYTE PTR [rbx+rax*1+0x0],ah
  438553:	add    BYTE PTR [rax],bh
  438555:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438556:	add    eax,DWORD PTR [rax]
  438558:	add    BYTE PTR [rax],al
  43855a:	add    BYTE PTR [rax],al
  43855c:	rex.WRX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43855e:	add    eax,DWORD PTR [rax]
  438560:	add    BYTE PTR [rax],al
  438562:	add    BYTE PTR [rax],al
  438564:	(bad)  
  438565:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438566:	add    eax,DWORD PTR [rax]
  438568:	add    BYTE PTR [rax],al
  43856a:	add    BYTE PTR [rax],al
  43856c:	jb     0x438512
  43856e:	add    eax,DWORD PTR [rax]
  438570:	add    BYTE PTR [rax],al
  438572:	add    BYTE PTR [rax],al
  438574:	mov    WORD PTR [rbx+rax*1+0x0],fs
  43857b:	add    BYTE PTR [rdx+0x3a4],ah
  438581:	add    BYTE PTR [rax],al
  438583:	add    BYTE PTR [rsi+0x3a4],dh
  438589:	add    BYTE PTR [rax],al
  43858b:	add    al,dl
  43858d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43858e:	add    eax,DWORD PTR [rax]
  438590:	add    BYTE PTR [rax],al
  438592:	add    BYTE PTR [rax],al
  438594:	in     al,0xa4
  438596:	add    eax,DWORD PTR [rax]
  438598:	add    BYTE PTR [rax],al
  43859a:	add    BYTE PTR [rax],al
  43859c:	add    ah,BYTE PTR [rbp+0x3]
  4385a2:	add    BYTE PTR [rax],al
  4385a4:	or     ah,BYTE PTR [rbp+0x3]
  4385aa:	add    BYTE PTR [rax],al
  4385ac:	adc    al,0xa5
  4385ae:	add    eax,DWORD PTR [rax]
  4385b0:	add    BYTE PTR [rax],al
  4385b2:	add    BYTE PTR [rax],al
  4385b4:	sub    BYTE PTR [rbp+0x3],ah
  4385ba:	add    BYTE PTR [rax],al
  4385bc:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
  4385be:	add    eax,DWORD PTR [rax]
  4385c0:	add    BYTE PTR [rax],al
  4385c2:	add    BYTE PTR [rax],al
  4385c4:	push   rdx
  4385c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4385c6:	add    eax,DWORD PTR [rax]
  4385c8:	add    BYTE PTR [rax],al
  4385ca:	add    BYTE PTR [rax],al
  4385cc:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
  4385ce:	add    eax,DWORD PTR [rax]
  4385d0:	add    BYTE PTR [rax],al
  4385d2:	add    BYTE PTR [rax],al
  4385d4:	je     0x43857b
  4385d6:	add    eax,DWORD PTR [rax]
  4385d8:	add    BYTE PTR [rax],al
  4385da:	add    BYTE PTR [rax],al
  4385dc:	mov    ah,BYTE PTR [rbp+0x3]
	...
  4385ea:	add    BYTE PTR [rax],al
  4385ec:	movabs al,ds:0xb8000000000003a5
  4385f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4385f6:	add    eax,DWORD PTR [rax]
  4385f8:	add    BYTE PTR [rax],al
  4385fa:	add    BYTE PTR [rax],al
  4385fc:	(bad)  
  4385fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4385fe:	add    eax,DWORD PTR [rax]
  438600:	add    BYTE PTR [rax],al
  438602:	add    BYTE PTR [rax],al
  438604:	fsub   QWORD PTR [rbp+0x3]
  43860a:	add    BYTE PTR [rax],al
  43860c:	in     al,dx
  43860d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43860e:	add    eax,DWORD PTR [rax]
  438610:	add    BYTE PTR [rax],al
  438612:	add    BYTE PTR [rax],al
  438614:	clc    
  438615:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438616:	add    eax,DWORD PTR [rax]
  438618:	add    BYTE PTR [rax],al
  43861a:	add    BYTE PTR [rax],al
  43861c:	(bad)  
  43861d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43861e:	add    eax,DWORD PTR [rax]
  438620:	add    BYTE PTR [rax],al
  438622:	add    BYTE PTR [rax],al
  438624:	(bad)  
  438625:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438626:	add    eax,DWORD PTR [rax]
  438628:	add    BYTE PTR [rax],al
  43862a:	add    BYTE PTR [rax],al
  43862c:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
  43862e:	add    eax,DWORD PTR [rax]
  438630:	add    BYTE PTR [rax],al
  438632:	add    BYTE PTR [rax],al
  438634:	cmp    BYTE PTR [rsi+0x3],ah
  43863a:	add    BYTE PTR [rax],al
  43863c:	rex.WR cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43863e:	add    eax,DWORD PTR [rax]
  438640:	add    BYTE PTR [rax],al
  438642:	add    BYTE PTR [rax],al
  438644:	push   rsi
  438645:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438646:	add    eax,DWORD PTR [rax]
  438648:	add    BYTE PTR [rax],al
  43864a:	add    BYTE PTR [rax],al
  43864c:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
  43864e:	add    eax,DWORD PTR [rax]
  438650:	add    BYTE PTR [rax],al
  438652:	add    BYTE PTR [rax],al
  438654:	outs   dx,BYTE PTR ds:[rsi]
  438655:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438656:	add    eax,DWORD PTR [rax]
  438658:	add    BYTE PTR [rax],al
  43865a:	add    BYTE PTR [rax],al
  43865c:	js     0x438604
  43865e:	add    eax,DWORD PTR [rax]
  438660:	add    BYTE PTR [rax],al
  438662:	add    BYTE PTR [rax],al
  438664:	test   BYTE PTR [rsi+0x3],ah
  43866a:	add    BYTE PTR [rax],al
  43866c:	mov    fs,WORD PTR [rsi+0x3]
  438672:	add    BYTE PTR [rax],al
  438674:	xchg   esi,eax
  438675:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438676:	add    eax,DWORD PTR [rax]
  438678:	add    BYTE PTR [rax],al
  43867a:	add    BYTE PTR [rax],al
  43867c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43867d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43867e:	add    eax,DWORD PTR [rax]
  438680:	add    BYTE PTR [rax],al
  438682:	add    BYTE PTR [rax],al
  438684:	mov    ah,0xa6
  438686:	add    eax,DWORD PTR [rax]
  438688:	add    BYTE PTR [rax],al
  43868a:	add    BYTE PTR [rax],al
  43868c:	mov    esi,0x3a6
  438691:	add    BYTE PTR [rax],al
  438693:	add    dl,cl
  438695:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438696:	add    eax,DWORD PTR [rax]
  438698:	add    BYTE PTR [rax],al
  43869a:	add    BYTE PTR [rax],al
  43869c:	(bad)  
  43869d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43869e:	add    eax,DWORD PTR [rax]
  4386a0:	add    BYTE PTR [rax],al
  4386a2:	add    BYTE PTR [rax],al
  4386a4:	call   0x438a4f
  4386a9:	add    BYTE PTR [rax],al
  4386ab:	add    dl,dh
  4386ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4386ae:	add    eax,DWORD PTR [rax]
  4386b0:	add    BYTE PTR [rax],al
  4386b2:	add    BYTE PTR [rax],al
  4386b4:	(bad)  
  4386b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4386b6:	add    eax,DWORD PTR [rax]
  4386b8:	add    BYTE PTR [rax],al
  4386ba:	add    BYTE PTR [rax],al
  4386bc:	(bad)  
  4386bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386be:	add    eax,DWORD PTR [rax]
  4386c0:	add    BYTE PTR [rax],al
  4386c2:	add    BYTE PTR [rax],al
  4386c4:	(bad)  
  4386c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386c6:	add    eax,DWORD PTR [rax]
  4386c8:	add    BYTE PTR [rax],al
  4386ca:	add    BYTE PTR [rax],al
  4386cc:	and    ah,BYTE PTR [rdi+0x3]
  4386d2:	add    BYTE PTR [rax],al
  4386d4:	sub    al,0xa7
  4386d6:	add    eax,DWORD PTR [rax]
  4386d8:	add    BYTE PTR [rax],al
  4386da:	add    BYTE PTR [rax],al
  4386dc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386de:	add    eax,DWORD PTR [rax]
  4386e0:	add    BYTE PTR [rax],al
  4386e2:	add    BYTE PTR [rax],al
  4386e4:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  4386e6:	add    eax,DWORD PTR [rax]
  4386e8:	add    BYTE PTR [rax],al
  4386ea:	add    BYTE PTR [rax],al
  4386ec:	pop    rax
  4386ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386ee:	add    eax,DWORD PTR [rax]
  4386f0:	add    BYTE PTR [rax],al
  4386f2:	add    BYTE PTR [rax],al
  4386f4:	(bad)  
  4386f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386f6:	add    eax,DWORD PTR [rax]
  4386f8:	add    BYTE PTR [rax],al
  4386fa:	add    BYTE PTR [rax],al
  4386fc:	ins    BYTE PTR es:[rdi],dx
  4386fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4386fe:	add    eax,DWORD PTR [rax]
  438700:	add    BYTE PTR [rax],al
  438702:	add    BYTE PTR [rax],al
  438704:	je     0x4386ad
  438706:	add    eax,DWORD PTR [rax]
  438708:	add    BYTE PTR [rax],al
  43870a:	add    BYTE PTR [rax],al
  43870c:	jl     0x4386b5
  43870e:	add    eax,DWORD PTR [rax]
  438710:	add    BYTE PTR [rax],al
  438712:	add    BYTE PTR [rax],al
  438714:	xchg   BYTE PTR [rdi+0x3],ah
  43871a:	add    BYTE PTR [rax],al
  43871c:	mov    fs,WORD PTR [rdi+0x3]
  438722:	add    BYTE PTR [rax],al
  438724:	xchg   esi,eax
  438725:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438726:	add    eax,DWORD PTR [rax]
  438728:	add    BYTE PTR [rax],al
  43872a:	add    BYTE PTR [rax],al
  43872c:	movabs al,ds:0xaa000000000003a7
  438735:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438736:	add    eax,DWORD PTR [rax]
  438738:	add    BYTE PTR [rax],al
  43873a:	add    BYTE PTR [rax],al
  43873c:	mov    ah,0xa7
  43873e:	add    eax,DWORD PTR [rax]
  438740:	add    BYTE PTR [rax],al
  438742:	add    BYTE PTR [rax],al
  438744:	mov    esp,0x3a7
  438749:	add    BYTE PTR [rax],al
  43874b:	add    dh,al
  43874d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43874e:	add    eax,DWORD PTR [rax]
  438750:	add    BYTE PTR [rax],al
  438752:	add    BYTE PTR [rax],al
  438754:	(bad)  
  438755:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438756:	add    eax,DWORD PTR [rax]
  438758:	add    BYTE PTR [rax],al
  43875a:	add    BYTE PTR [rax],al
  43875c:	(bad)  
  43875d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43875e:	add    eax,DWORD PTR [rax]
  438760:	add    BYTE PTR [rax],al
  438762:	add    BYTE PTR [rax],al
  438764:	fisub  WORD PTR [rdi+0x3]
  43876a:	add    BYTE PTR [rax],al
  43876c:	out    0xa7,al
  43876e:	add    eax,DWORD PTR [rax]
  438770:	add    BYTE PTR [rax],al
  438772:	add    BYTE PTR [rax],al
  438774:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438776:	add    eax,DWORD PTR [rax]
  438778:	add    BYTE PTR [rax],al
  43877a:	add    BYTE PTR [rax],al
  43877c:	cld    
  43877d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43877e:	add    eax,DWORD PTR [rax]
  438780:	add    BYTE PTR [rax],al
  438782:	add    BYTE PTR [rax],al
  438784:	(bad)  
  438785:	test   al,0x3
  438787:	add    BYTE PTR [rax],al
  438789:	add    BYTE PTR [rax],al
  43878b:	add    BYTE PTR [rax],dl
  43878d:	test   al,0x3
  43878f:	add    BYTE PTR [rax],al
  438791:	add    BYTE PTR [rax],al
  438793:	add    BYTE PTR [rdx],bl
  438795:	test   al,0x3
  438797:	add    BYTE PTR [rax],al
  438799:	add    BYTE PTR [rax],al
  43879b:	add    BYTE PTR [rax],ch
  43879d:	test   al,0x3
  43879f:	add    BYTE PTR [rax],al
  4387a1:	add    BYTE PTR [rax],al
  4387a3:	add    BYTE PTR [rdx],dh
  4387a5:	test   al,0x3
  4387a7:	add    BYTE PTR [rax],al
  4387a9:	add    BYTE PTR [rax],al
  4387ab:	add    BYTE PTR [rax+rbp*4],bh
  4387ae:	add    eax,DWORD PTR [rax]
  4387b0:	add    BYTE PTR [rax],al
  4387b2:	add    BYTE PTR [rax],al
  4387b4:	rex.RX test al,0x3
  4387b7:	add    BYTE PTR [rax],al
  4387b9:	add    BYTE PTR [rax],al
  4387bb:	add    BYTE PTR [rax-0x58],dl
  4387be:	add    eax,DWORD PTR [rax]
  4387c0:	add    BYTE PTR [rax],al
  4387c2:	add    BYTE PTR [rax],al
  4387c4:	pop    rdx
  4387c5:	test   al,0x3
  4387c7:	add    BYTE PTR [rax],al
  4387c9:	add    BYTE PTR [rax],al
  4387cb:	add    BYTE PTR [rax+rbp*4+0x3],ah
  4387cf:	add    BYTE PTR [rax],al
  4387d1:	add    BYTE PTR [rax],al
  4387d3:	add    BYTE PTR [rax+rbp*4+0x3],ch
  4387d7:	add    BYTE PTR [rax],al
  4387d9:	add    BYTE PTR [rax],al
  4387db:	add    BYTE PTR [rax+rbp*4+0x3],dh
  4387df:	add    BYTE PTR [rax],al
  4387e1:	add    BYTE PTR [rax],al
  4387e3:	add    BYTE PTR [rsi-0x58],bh
  4387e6:	add    eax,DWORD PTR [rax]
  4387e8:	add    BYTE PTR [rax],al
  4387ea:	add    BYTE PTR [rax],al
  4387ec:	mov    BYTE PTR [rax+0x3],ch
  4387f2:	add    BYTE PTR [rax],al
  4387f4:	xchg   edx,eax
  4387f5:	test   al,0x3
  4387f7:	add    BYTE PTR [rax],al
  4387f9:	add    BYTE PTR [rax],al
  4387fb:	add    BYTE PTR [rax+rbp*4+0x3],bl
  438802:	add    BYTE PTR [rax],al
  438804:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438805:	test   al,0x3
  438807:	add    BYTE PTR [rax],al
  438809:	add    BYTE PTR [rax],al
  43880b:	add    BYTE PTR [rax+0x3a8],dh
  438811:	add    BYTE PTR [rax],al
  438813:	add    BYTE PTR [rax+rbp*4+0x3],bh
  43881a:	add    BYTE PTR [rax],al
  43881c:	enter  0x3a8,0x0
  438820:	add    BYTE PTR [rax],al
  438822:	add    BYTE PTR [rax],al
  438824:	shr    BYTE PTR [rax+0x3],cl
  43882a:	add    BYTE PTR [rax],al
  43882c:	fsubr  QWORD PTR [rax+0x3]
  438832:	add    BYTE PTR [rax],al
  438834:	out    0xa8,al
  438836:	add    eax,DWORD PTR [rax]
  438838:	add    BYTE PTR [rax],al
  43883a:	add    BYTE PTR [rax],al
  43883c:	lock test al,0x3
  43883f:	add    BYTE PTR [rax],al
  438841:	add    BYTE PTR [rax],al
  438843:	add    dl,bh
  438845:	test   al,0x3
  438847:	add    BYTE PTR [rax],al
  438849:	add    BYTE PTR [rax],al
  43884b:	add    BYTE PTR [rcx+rbp*4],al
  43884e:	add    eax,DWORD PTR [rax]
  438850:	add    BYTE PTR [rax],al
  438852:	add    BYTE PTR [rax],al
  438854:	(bad)  
  438855:	test   eax,0x3
  43885a:	add    BYTE PTR [rax],al
  43885c:	sbb    BYTE PTR [rcx+0x3],ch
  438862:	add    BYTE PTR [rax],al
  438864:	and    ch,BYTE PTR [rcx+0x3]
  43886a:	add    BYTE PTR [rax],al
  43886c:	sub    al,0xa9
  43886e:	add    eax,DWORD PTR [rax]
  438870:	add    BYTE PTR [rax],al
  438872:	add    BYTE PTR [rax],al
  438874:	cmp    BYTE PTR [rcx+0x3],ch
  43887a:	add    BYTE PTR [rax],al
  43887c:	rex.X test eax,0x3
  438882:	add    BYTE PTR [rax],al
  438884:	rex.WR test rax,0x3
  43888a:	add    BYTE PTR [rax],al
  43888c:	pop    rax
  43888d:	test   eax,0x3
  438892:	add    BYTE PTR [rax],al
  438894:	(bad)  
  438895:	test   eax,0x3
  43889a:	add    BYTE PTR [rax],al
  43889c:	jo     0x438847
  43889e:	add    eax,DWORD PTR [rax]
  4388a0:	add    BYTE PTR [rax],al
  4388a2:	add    BYTE PTR [rax],al
  4388a4:	jp     0x43884f
  4388a6:	add    eax,DWORD PTR [rax]
  4388a8:	add    BYTE PTR [rax],al
  4388aa:	add    BYTE PTR [rax],al
  4388ac:	test   BYTE PTR [rcx+0x3],ch
  4388b2:	add    BYTE PTR [rax],al
  4388b4:	mov    gs,WORD PTR [rcx+0x3]
  4388ba:	add    BYTE PTR [rax],al
  4388bc:	xchg   esi,eax
  4388bd:	test   eax,0x3
  4388c2:	add    BYTE PTR [rax],al
  4388c4:	sahf   
  4388c5:	test   eax,0x3
  4388ca:	add    BYTE PTR [rax],al
  4388cc:	test   al,0xa9
  4388ce:	add    eax,DWORD PTR [rax]
  4388d0:	add    BYTE PTR [rax],al
  4388d2:	add    BYTE PTR [rax],al
  4388d4:	mov    dl,0xa9
  4388d6:	add    eax,DWORD PTR [rax]
	...
  4388e4:	mov    esp,0x3a9
  4388e9:	add    BYTE PTR [rax],al
  4388eb:	add    al,cl
  4388ed:	test   eax,0x3
  4388f2:	add    BYTE PTR [rax],al
  4388f4:	(bad)  
  4388f5:	test   eax,0x3
	...
  438902:	add    BYTE PTR [rax],al
  438904:	loopne 0x4388af
  438906:	add    eax,DWORD PTR [rax]
  438908:	add    BYTE PTR [rax],al
  43890a:	add    BYTE PTR [rax],al
  43890c:	hlt    
  43890d:	test   eax,0x3
  438912:	add    BYTE PTR [rax],al
  438914:	add    ch,BYTE PTR [rdx+0x3]
  43891a:	add    BYTE PTR [rax],al
  43891c:	(bad)  
  43891d:	stos   BYTE PTR es:[rdi],al
  43891e:	add    eax,DWORD PTR [rax]
  438920:	add    BYTE PTR [rax],al
  438922:	add    BYTE PTR [rax],al
  438924:	cs stos BYTE PTR es:[rdi],al
  438926:	add    eax,DWORD PTR [rax]
	...
  438934:	rex.X stos BYTE PTR es:[rdi],al
  438936:	add    eax,DWORD PTR [rax]
  438938:	add    BYTE PTR [rax],al
  43893a:	add    BYTE PTR [rax],al
  43893c:	push   rax
  43893d:	stos   BYTE PTR es:[rdi],al
  43893e:	add    eax,DWORD PTR [rax]
  438940:	add    BYTE PTR [rax],al
  438942:	add    BYTE PTR [rax],al
  438944:	push   0x3aa
  438949:	add    BYTE PTR [rax],al
  43894b:	add    BYTE PTR [rdx-0x56],bh
  43894e:	add    eax,DWORD PTR [rax]
  438950:	add    BYTE PTR [rax],al
  438952:	add    BYTE PTR [rax],al
  438954:	mov    WORD PTR [rdx+0x3],gs
  43895a:	add    BYTE PTR [rax],al
  43895c:	sahf   
  43895d:	stos   BYTE PTR es:[rdi],al
  43895e:	add    eax,DWORD PTR [rax]
  438960:	add    BYTE PTR [rax],al
  438962:	add    BYTE PTR [rax],al
  438964:	lods   al,BYTE PTR ds:[rsi]
  438965:	stos   BYTE PTR es:[rdi],al
  438966:	add    eax,DWORD PTR [rax]
  438968:	add    BYTE PTR [rax],al
  43896a:	add    BYTE PTR [rax],al
  43896c:	mov    edx,0x3aa
  438971:	add    BYTE PTR [rax],al
  438973:	add    dl,cl
  438975:	stos   BYTE PTR es:[rdi],al
  438976:	add    eax,DWORD PTR [rax]
  438978:	add    BYTE PTR [rax],al
  43897a:	add    BYTE PTR [rax],al
  43897c:	fsubr  DWORD PTR [rdx+0x3]
  438982:	add    BYTE PTR [rax],al
  438984:	loop   0x438930
  438986:	add    eax,DWORD PTR [rax]
  438988:	add    BYTE PTR [rax],al
  43898a:	add    BYTE PTR [rax],al
  43898c:	repnz stos BYTE PTR es:[rdi],al
  43898e:	add    eax,DWORD PTR [rax]
  438990:	add    BYTE PTR [rax],al
  438992:	add    BYTE PTR [rax],al
  438994:	add    BYTE PTR [rbx+0x3],ch
  43899a:	add    BYTE PTR [rax],al
  43899c:	(bad)  
  43899d:	stos   DWORD PTR es:[rdi],eax
  43899e:	add    eax,DWORD PTR [rax]
  4389a0:	add    BYTE PTR [rax],al
  4389a2:	add    BYTE PTR [rax],al
  4389a4:	(bad)  
  4389a5:	stos   DWORD PTR es:[rdi],eax
  4389a6:	add    eax,DWORD PTR [rax]
  4389a8:	add    BYTE PTR [rax],al
  4389aa:	add    BYTE PTR [rax],al
  4389ac:	cs stos DWORD PTR es:[rdi],eax
  4389ae:	add    eax,DWORD PTR [rax]
  4389b0:	add    BYTE PTR [rax],al
  4389b2:	add    BYTE PTR [rax],al
  4389b4:	ss stos DWORD PTR es:[rdi],eax
  4389b6:	add    eax,DWORD PTR [rax]
  4389b8:	add    BYTE PTR [rax],al
  4389ba:	add    BYTE PTR [rax],al
  4389bc:	rex.R stos DWORD PTR es:[rdi],eax
  4389be:	add    eax,DWORD PTR [rax]
  4389c0:	add    BYTE PTR [rax],al
  4389c2:	add    BYTE PTR [rax],al
  4389c4:	rex.WR stos QWORD PTR es:[rdi],rax
  4389c6:	add    eax,DWORD PTR [rax]
  4389c8:	add    BYTE PTR [rax],al
  4389ca:	add    BYTE PTR [rax],al
  4389cc:	push   rsp
  4389cd:	stos   DWORD PTR es:[rdi],eax
  4389ce:	add    eax,DWORD PTR [rax]
  4389d0:	add    BYTE PTR [rax],al
  4389d2:	add    BYTE PTR [rax],al
  4389d4:	pop    rsi
  4389d5:	stos   DWORD PTR es:[rdi],eax
  4389d6:	add    eax,DWORD PTR [rax]
  4389d8:	add    BYTE PTR [rax],al
  4389da:	add    BYTE PTR [rax],al
  4389dc:	stos   WORD PTR es:[rdi],ax
  4389de:	add    eax,DWORD PTR [rax]
  4389e0:	add    BYTE PTR [rax],al
  4389e2:	add    BYTE PTR [rax],al
  4389e4:	je     0x438991
  4389e6:	add    eax,DWORD PTR [rax]
	...
  4389f4:	pop    rsp
  4389f5:	xchg   ebx,eax
  4389f6:	add    eax,DWORD PTR [rax]
  4389f8:	add    BYTE PTR [rax],al
  4389fa:	add    BYTE PTR [rax],al
  4389fc:	adc    BYTE PTR [rbx+0x3],0x0
  438a03:	add    BYTE PTR [rax+0x393],ch
  438a09:	add    BYTE PTR [rax],al
  438a0b:	add    al,cl
  438a0d:	xchg   ebx,eax
  438a0e:	add    eax,DWORD PTR [rax]
  438a10:	add    BYTE PTR [rax],al
  438a12:	add    BYTE PTR [rax],al
  438a14:	fcom   QWORD PTR [rbx+0x3]
  438a1a:	add    BYTE PTR [rax],al
  438a1c:	hlt    
  438a1d:	xchg   ebx,eax
  438a1e:	add    eax,DWORD PTR [rax]
  438a20:	add    BYTE PTR [rax],al
  438a22:	add    BYTE PTR [rax],al
  438a24:	sbb    BYTE PTR [rbx+rax*1+0x0],dl
  438a2b:	add    BYTE PTR [rsp+rdx*4+0x3],al
  438a2f:	add    BYTE PTR [rax],al
  438a31:	add    BYTE PTR [rax],al
  438a33:	add    BYTE PTR [rsp+rdx*4+0x3],ch
  438a37:	add    BYTE PTR [rax],al
  438a39:	add    BYTE PTR [rax],al
  438a3b:	add    BYTE PTR [rsp+rdx*4+0x3],al
  438a42:	add    BYTE PTR [rax],al
  438a44:	xchg   esp,eax
  438a45:	xchg   esp,eax
  438a46:	add    eax,DWORD PTR [rax]
  438a48:	add    BYTE PTR [rax],al
  438a4a:	add    BYTE PTR [rax],al
  438a4c:	rcl    BYTE PTR [rbx+rax*1+0x0],0x0
  438a54:	lock xchg esp,eax
  438a56:	add    eax,DWORD PTR [rax]
  438a58:	add    BYTE PTR [rax],al
  438a5a:	add    BYTE PTR [rax],al
  438a5c:	sbb    BYTE PTR [rbp+0x3],dl
  438a62:	add    BYTE PTR [rax],al
  438a64:	cmp    BYTE PTR [rbp+0x3],dl
  438a6a:	add    BYTE PTR [rax],al
  438a6c:	pop    rax
  438a6d:	xchg   ebp,eax
  438a6e:	add    eax,DWORD PTR [rax]
  438a70:	add    BYTE PTR [rax],al
  438a72:	add    BYTE PTR [rax],al
  438a74:	test   BYTE PTR [rbp+0x3],dl
  438a7a:	add    BYTE PTR [rax],al
  438a7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438a7d:	xchg   ebp,eax
  438a7e:	add    eax,DWORD PTR [rax]
  438a80:	add    BYTE PTR [rax],al
  438a82:	add    BYTE PTR [rax],al
  438a84:	enter  0x395,0x0
  438a88:	add    BYTE PTR [rax],al
  438a8a:	add    BYTE PTR [rax],al
  438a8c:	call   0x438e26
  438a91:	add    BYTE PTR [rax],al
  438a93:	add    BYTE PTR [rax],bl
  438a95:	xchg   esi,eax
  438a96:	add    eax,DWORD PTR [rax]
  438a98:	add    BYTE PTR [rax],al
  438a9a:	add    BYTE PTR [rax],al
  438a9c:	cmp    al,0x96
  438a9e:	add    eax,DWORD PTR [rax]
  438aa0:	add    BYTE PTR [rax],al
  438aa2:	add    BYTE PTR [rax],al
  438aa4:	push   rsp
  438aa5:	xchg   esi,eax
  438aa6:	add    eax,DWORD PTR [rax]
  438aa8:	add    BYTE PTR [rax],al
  438aaa:	add    BYTE PTR [rax],al
  438aac:	push   0x396
  438ab1:	add    BYTE PTR [rax],al
  438ab3:	add    BYTE PTR [rsi+rdx*4+0x3],al
  438aba:	add    BYTE PTR [rax],al
  438abc:	pushf  
  438abd:	xchg   esi,eax
  438abe:	add    eax,DWORD PTR [rax]
  438ac0:	add    BYTE PTR [rax],al
  438ac2:	add    BYTE PTR [rax],al
  438ac4:	mov    eax,0x396
  438ac9:	add    BYTE PTR [rax],al
  438acb:	add    ah,dl
  438acd:	xchg   esi,eax
  438ace:	add    eax,DWORD PTR [rax]
  438ad0:	add    BYTE PTR [rax],al
  438ad2:	add    BYTE PTR [rax],al
  438ad4:	hlt    
  438ad5:	xchg   esi,eax
  438ad6:	add    eax,DWORD PTR [rax]
  438ad8:	add    BYTE PTR [rax],al
  438ada:	add    BYTE PTR [rax],al
  438adc:	adc    BYTE PTR [rdi+0x3],dl
  438ae2:	add    BYTE PTR [rax],al
  438ae4:	sub    al,0x97
  438ae6:	add    eax,DWORD PTR [rax]
  438ae8:	add    BYTE PTR [rax],al
  438aea:	add    BYTE PTR [rax],al
  438aec:	cmp    al,0x97
  438aee:	add    eax,DWORD PTR [rax]
  438af0:	add    BYTE PTR [rax],al
  438af2:	add    BYTE PTR [rax],al
  438af4:	push   rsp
  438af5:	xchg   edi,eax
  438af6:	add    eax,DWORD PTR [rax]
  438af8:	add    BYTE PTR [rax],al
  438afa:	add    BYTE PTR [rax],al
  438afc:	js     0x438a95
  438afe:	add    eax,DWORD PTR [rax]
  438b00:	add    BYTE PTR [rax],al
  438b02:	add    BYTE PTR [rax],al
  438b04:	xchg   esp,eax
  438b05:	xchg   edi,eax
  438b06:	add    eax,DWORD PTR [rax]
  438b08:	add    BYTE PTR [rax],al
  438b0a:	add    BYTE PTR [rax],al
  438b0c:	lods   al,BYTE PTR ds:[rsi]
  438b0d:	xchg   edi,eax
  438b0e:	add    eax,DWORD PTR [rax]
  438b10:	add    BYTE PTR [rax],al
  438b12:	add    BYTE PTR [rax],al
  438b14:	enter  0x397,0x0
  438b18:	add    BYTE PTR [rax],al
  438b1a:	add    BYTE PTR [rax],al
  438b1c:	in     al,0x97
  438b1e:	add    eax,DWORD PTR [rax]
  438b20:	add    BYTE PTR [rax],al
  438b22:	add    BYTE PTR [rax],al
  438b24:	or     BYTE PTR [rax+0x3],bl
  438b2a:	add    BYTE PTR [rax],al
  438b2c:	sub    BYTE PTR [rax+0x3],bl
  438b32:	add    BYTE PTR [rax],al
  438b34:	cdqe   
  438b36:	add    eax,DWORD PTR [rax]
  438b38:	add    BYTE PTR [rax],al
  438b3a:	add    BYTE PTR [rax],al
  438b3c:	(bad)  
  438b3d:	cwde   
  438b3e:	add    eax,DWORD PTR [rax]
  438b40:	add    BYTE PTR [rax],al
  438b42:	add    BYTE PTR [rax],al
  438b44:	jl     0x438ade
  438b46:	add    eax,DWORD PTR [rax]
  438b48:	add    BYTE PTR [rax],al
  438b4a:	add    BYTE PTR [rax],al
  438b4c:	xchg   esp,eax
  438b4d:	cwde   
  438b4e:	add    eax,DWORD PTR [rax]
  438b50:	add    BYTE PTR [rax],al
  438b52:	add    BYTE PTR [rax],al
  438b54:	lods   al,BYTE PTR ds:[rsi]
  438b55:	cwde   
  438b56:	add    eax,DWORD PTR [rax]
  438b58:	add    BYTE PTR [rax],al
  438b5a:	add    BYTE PTR [rax],al
  438b5c:	enter  0x398,0x0
  438b60:	add    BYTE PTR [rax],al
  438b62:	add    BYTE PTR [rax],al
  438b64:	in     al,0x98
  438b66:	add    eax,DWORD PTR [rax]
  438b68:	add    BYTE PTR [rax],al
  438b6a:	add    BYTE PTR [rax],al
  438b6c:	cld    
  438b6d:	cwde   
  438b6e:	add    eax,DWORD PTR [rax]
  438b70:	add    BYTE PTR [rax],al
  438b72:	add    BYTE PTR [rax],al
  438b74:	adc    al,0x99
  438b76:	add    eax,DWORD PTR [rax]
  438b78:	add    BYTE PTR [rax],al
  438b7a:	add    BYTE PTR [rax],al
  438b7c:	and    al,0x99
  438b7e:	add    eax,DWORD PTR [rax]
  438b80:	add    BYTE PTR [rax],al
  438b82:	add    BYTE PTR [rax],al
  438b84:	cmp    al,0x99
  438b86:	add    eax,DWORD PTR [rax]
  438b88:	add    BYTE PTR [rax],al
  438b8a:	add    BYTE PTR [rax],al
  438b8c:	push   rsp
  438b8d:	cdq    
  438b8e:	add    eax,DWORD PTR [rax]
  438b90:	add    BYTE PTR [rax],al
  438b92:	add    BYTE PTR [rax],al
  438b94:	js     0x438b2f
  438b96:	add    eax,DWORD PTR [rax]
  438b98:	add    BYTE PTR [rax],al
  438b9a:	add    BYTE PTR [rax],al
  438b9c:	cwde   
  438b9d:	cdq    
  438b9e:	add    eax,DWORD PTR [rax]
  438ba0:	add    BYTE PTR [rax],al
  438ba2:	add    BYTE PTR [rax],al
  438ba4:	lods   al,BYTE PTR ds:[rsi]
  438ba5:	cdq    
  438ba6:	add    eax,DWORD PTR [rax]
  438ba8:	add    BYTE PTR [rax],al
  438baa:	add    BYTE PTR [rax],al
  438bac:	enter  0x399,0x0
  438bb0:	add    BYTE PTR [rax],al
  438bb2:	add    BYTE PTR [rax],al
  438bb4:	in     al,0x99
  438bb6:	add    eax,DWORD PTR [rax]
  438bb8:	add    BYTE PTR [rax],al
  438bba:	add    BYTE PTR [rax],al
  438bbc:	cld    
  438bbd:	cdq    
  438bbe:	add    eax,DWORD PTR [rax]
  438bc0:	add    BYTE PTR [rax],al
  438bc2:	add    BYTE PTR [rax],al
  438bc4:	adc    al,0x9a
  438bc6:	add    eax,DWORD PTR [rax]
  438bc8:	add    BYTE PTR [rax],al
  438bca:	add    BYTE PTR [rax],al
  438bcc:	and    al,0x9a
  438bce:	add    eax,DWORD PTR [rax]
  438bd0:	add    BYTE PTR [rax],al
  438bd2:	add    BYTE PTR [rax],al
  438bd4:	xor    al,0x9a
  438bd6:	add    eax,DWORD PTR [rax]
  438bd8:	add    BYTE PTR [rax],al
  438bda:	add    BYTE PTR [rax],al
  438bdc:	rex.WR (bad) 
  438bde:	add    eax,DWORD PTR [rax]
  438be0:	add    BYTE PTR [rax],al
  438be2:	add    BYTE PTR [rax],al
  438be4:	(bad)  
  438be5:	(bad)  
  438be6:	add    eax,DWORD PTR [rax]
  438be8:	add    BYTE PTR [rax],al
  438bea:	add    BYTE PTR [rax],al
  438bec:	je     0x438b88
  438bee:	add    eax,DWORD PTR [rax]
  438bf0:	add    BYTE PTR [rax],al
  438bf2:	add    BYTE PTR [rax],al
  438bf4:	mov    WORD PTR [rdx+0x3],ds
  438bfa:	add    BYTE PTR [rax],al
  438bfc:	movabs al,ds:0xb00000000000039a
  438c05:	(bad)  
  438c06:	add    eax,DWORD PTR [rax]
  438c08:	add    BYTE PTR [rax],al
  438c0a:	add    BYTE PTR [rax],al
  438c0c:	fcomp  QWORD PTR [rdx+0x3]
  438c12:	add    BYTE PTR [rax],al
  438c14:	add    BYTE PTR [rbx+0x3],bl
  438c1a:	add    BYTE PTR [rax],al
  438c1c:	sub    BYTE PTR [rbx+0x3],bl
  438c22:	add    BYTE PTR [rax],al
  438c24:	rex.R
  438c25:	fwait
  438c26:	add    eax,DWORD PTR [rax]
  438c28:	add    BYTE PTR [rax],al
  438c2a:	add    BYTE PTR [rax],al
  438c2c:	(bad)  
  438c2d:	fwait
  438c2e:	add    eax,DWORD PTR [rax]
  438c30:	add    BYTE PTR [rax],al
  438c32:	add    BYTE PTR [rax],al
  438c34:	jl     0x438bd1
  438c36:	add    eax,DWORD PTR [rax]
  438c38:	add    BYTE PTR [rax],al
  438c3a:	add    BYTE PTR [rax],al
  438c3c:	cwde   
  438c3d:	fwait
  438c3e:	add    eax,DWORD PTR [rax]
  438c40:	add    BYTE PTR [rax],al
  438c42:	add    BYTE PTR [rax],al
  438c44:	mov    ah,0x9b
  438c46:	add    eax,DWORD PTR [rax]
  438c48:	add    BYTE PTR [rax],al
  438c4a:	add    BYTE PTR [rax],al
  438c4c:	rcr    BYTE PTR [rbx+0x3],1
  438c52:	add    BYTE PTR [rax],al
  438c54:	lock fwait
  438c56:	add    eax,DWORD PTR [rax]
  438c58:	add    BYTE PTR [rax],al
  438c5a:	add    BYTE PTR [rax],al
  438c5c:	add    al,0x9c
  438c5e:	add    eax,DWORD PTR [rax]
  438c60:	add    BYTE PTR [rax],al
  438c62:	add    BYTE PTR [rax],al
  438c64:	sub    al,0x9c
  438c66:	add    eax,DWORD PTR [rax]
  438c68:	add    BYTE PTR [rax],al
  438c6a:	add    BYTE PTR [rax],al
  438c6c:	push   rax
  438c6d:	pushf  
  438c6e:	add    eax,DWORD PTR [rax]
  438c70:	add    BYTE PTR [rax],al
  438c72:	add    BYTE PTR [rax],al
  438c74:	je     0x438c12
  438c76:	add    eax,DWORD PTR [rax]
  438c78:	add    BYTE PTR [rax],al
  438c7a:	add    BYTE PTR [rax],al
  438c7c:	movabs al,ds:0xb80000000000039c
  438c85:	pushf  
  438c86:	add    eax,DWORD PTR [rax]
  438c88:	add    BYTE PTR [rax],al
  438c8a:	add    BYTE PTR [rax],al
  438c8c:	fcomp  DWORD PTR [rbx+rax*1+0x0]
  438c93:	add    al,bh
  438c95:	pushf  
  438c96:	add    eax,DWORD PTR [rax]
  438c98:	add    BYTE PTR [rax],al
  438c9a:	add    BYTE PTR [rax],al
  438c9c:	adc    al,0x9d
  438c9e:	add    eax,DWORD PTR [rax]
  438ca0:	add    BYTE PTR [rax],al
  438ca2:	add    BYTE PTR [rax],al
  438ca4:	xor    BYTE PTR [rbp+0x3],bl
  438caa:	add    BYTE PTR [rax],al
  438cac:	push   rax
  438cad:	popf   
  438cae:	add    eax,DWORD PTR [rax]
  438cb0:	add    BYTE PTR [rax],al
  438cb2:	add    BYTE PTR [rax],al
  438cb4:	push   0x39d
  438cb9:	add    BYTE PTR [rax],al
  438cbb:	add    BYTE PTR [rax+0x39d],cl
  438cc1:	add    BYTE PTR [rax],al
  438cc3:	add    BYTE PTR [rbp+rbx*4+0x3],ch
  438cca:	add    BYTE PTR [rax],al
  438ccc:	int3   
  438ccd:	popf   
  438cce:	add    eax,DWORD PTR [rax]
  438cd0:	add    BYTE PTR [rax],al
  438cd2:	add    BYTE PTR [rax],al
  438cd4:	in     al,0x9d
  438cd6:	add    eax,DWORD PTR [rax]
  438cd8:	add    BYTE PTR [rax],al
  438cda:	add    BYTE PTR [rax],al
  438cdc:	cld    
  438cdd:	popf   
  438cde:	add    eax,DWORD PTR [rax]
  438ce0:	add    BYTE PTR [rax],al
  438ce2:	add    BYTE PTR [rax],al
  438ce4:	sbb    BYTE PTR [rsi+0x3],bl
  438cea:	add    BYTE PTR [rax],al
  438cec:	cmp    BYTE PTR [rsi+0x3],bl
  438cf2:	add    BYTE PTR [rax],al
  438cf4:	push   rsp
  438cf5:	sahf   
  438cf6:	add    eax,DWORD PTR [rax]
  438cf8:	add    BYTE PTR [rax],al
  438cfa:	add    BYTE PTR [rax],al
  438cfc:	ins    BYTE PTR es:[rdi],dx
  438cfd:	sahf   
  438cfe:	add    eax,DWORD PTR [rax]
  438d00:	add    BYTE PTR [rax],al
  438d02:	add    BYTE PTR [rax],al
  438d04:	nop
  438d05:	sahf   
  438d06:	add    eax,DWORD PTR [rax]
  438d08:	add    BYTE PTR [rax],al
  438d0a:	add    BYTE PTR [rax],al
  438d0c:	lods   al,BYTE PTR ds:[rsi]
  438d0d:	sahf   
  438d0e:	add    eax,DWORD PTR [rax]
  438d10:	add    BYTE PTR [rax],al
  438d12:	add    BYTE PTR [rax],al
  438d14:	enter  0x39e,0x0
  438d18:	add    BYTE PTR [rax],al
  438d1a:	add    BYTE PTR [rax],al
  438d1c:	in     al,dx
  438d1d:	sahf   
  438d1e:	add    eax,DWORD PTR [rax]
  438d20:	add    BYTE PTR [rax],al
  438d22:	add    BYTE PTR [rax],al
  438d24:	or     BYTE PTR [rdi+0x3],bl
  438d2a:	add    BYTE PTR [rax],al
  438d2c:	xor    al,0x9f
  438d2e:	add    eax,DWORD PTR [rax]
  438d30:	add    BYTE PTR [rax],al
  438d32:	add    BYTE PTR [rax],al
  438d34:	push   rax
  438d35:	lahf   
  438d36:	add    eax,DWORD PTR [rax]
  438d38:	add    BYTE PTR [rax],al
  438d3a:	add    BYTE PTR [rax],al
  438d3c:	ins    BYTE PTR es:[rdi],dx
  438d3d:	lahf   
  438d3e:	add    eax,DWORD PTR [rax]
  438d40:	add    BYTE PTR [rax],al
  438d42:	add    BYTE PTR [rax],al
  438d44:	test   BYTE PTR [rdi+0x3],bl
  438d4a:	add    BYTE PTR [rax],al
  438d4c:	movabs al,ds:0xbc0000000000039f
  438d55:	lahf   
  438d56:	add    eax,DWORD PTR [rax]
  438d58:	add    BYTE PTR [rax],al
  438d5a:	add    BYTE PTR [rax],al
  438d5c:	fcomp  DWORD PTR [rdi+0x3]
  438d62:	add    BYTE PTR [rax],al
  438d64:	cld    
  438d65:	lahf   
  438d66:	add    eax,DWORD PTR [rax]
  438d68:	add    BYTE PTR [rax],al
  438d6a:	add    BYTE PTR [rax],al
  438d6c:	adc    al,0xa0
  438d6e:	add    eax,DWORD PTR [rax]
  438d70:	add    BYTE PTR [rax],al
  438d72:	add    BYTE PTR [rax],al
  438d74:	sub    BYTE PTR [rax+0x3],ah
  438d7a:	add    BYTE PTR [rax],al
  438d7c:	push   rsp
  438d7d:	movabs al,ds:0xa07c000000000003
  438d86:	add    eax,DWORD PTR [rax]
  438d88:	add    BYTE PTR [rax],al
  438d8a:	add    BYTE PTR [rax],al
  438d8c:	movabs al,ds:0xc0000000000003a0
  438d95:	movabs al,ds:0xa0e4000000000003
  438d9e:	add    eax,DWORD PTR [rax]
  438da0:	add    BYTE PTR [rax],al
  438da2:	add    BYTE PTR [rax],al
  438da4:	clc    
  438da5:	movabs al,ds:0xa114000000000003
  438dae:	add    eax,DWORD PTR [rax]
  438db0:	add    BYTE PTR [rax],al
  438db2:	add    BYTE PTR [rax],al
  438db4:	xor    BYTE PTR [rcx+0x3],ah
  438dba:	add    BYTE PTR [rax],al
  438dbc:	pop    rax
  438dbd:	movabs eax,ds:0xa188000000000003
  438dc6:	add    eax,DWORD PTR [rax]
  438dc8:	add    BYTE PTR [rax],al
  438dca:	add    BYTE PTR [rax],al
  438dcc:	mov    al,0xa1
  438dce:	add    eax,DWORD PTR [rax]
  438dd0:	add    BYTE PTR [rax],al
  438dd2:	add    BYTE PTR [rax],al
  438dd4:	int3   
  438dd5:	movabs eax,ds:0xa1e8000000000003
  438dde:	add    eax,DWORD PTR [rax]
  438de0:	add    BYTE PTR [rax],al
  438de2:	add    BYTE PTR [rax],al
  438de4:	add    al,0xa2
  438de6:	add    eax,DWORD PTR [rax]
  438de8:	add    BYTE PTR [rax],al
  438dea:	add    BYTE PTR [rax],al
  438dec:	sbb    al,0xa2
  438dee:	add    eax,DWORD PTR [rax]
  438df0:	add    BYTE PTR [rax],al
  438df2:	add    BYTE PTR [rax],al
  438df4:	cmp    al,0xa2
  438df6:	add    eax,DWORD PTR [rax]
  438df8:	add    BYTE PTR [rax],al
  438dfa:	add    BYTE PTR [rax],al
  438dfc:	push   rsp
  438dfd:	movabs ds:0x3,al
  438e06:	add    BYTE PTR [rax],al
  438e08:	add    BYTE PTR [rax],al
  438e0a:	add    BYTE PTR [rax],al
  438e0c:	ins    BYTE PTR es:[rdi],dx
  438e0d:	movabs ds:0xa27c000000000003,al
  438e16:	add    eax,DWORD PTR [rax]
  438e18:	add    BYTE PTR [rax],al
  438e1a:	add    BYTE PTR [rax],al
  438e1c:	xchg   esp,eax
  438e1d:	movabs ds:0xa2ac000000000003,al
  438e26:	add    eax,DWORD PTR [rax]
  438e28:	add    BYTE PTR [rax],al
  438e2a:	add    BYTE PTR [rax],al
  438e2c:	mov    esi,0x3a2
  438e31:	add    BYTE PTR [rax],al
  438e33:	add    al,dl
  438e35:	movabs ds:0xa2e4000000000003,al
  438e3e:	add    eax,DWORD PTR [rax]
  438e40:	add    BYTE PTR [rax],al
  438e42:	add    BYTE PTR [rax],al
  438e44:	cli    
  438e45:	movabs ds:0xa310000000000003,al
  438e4e:	add    eax,DWORD PTR [rax]
  438e50:	add    BYTE PTR [rax],al
  438e52:	add    BYTE PTR [rax],al
  438e54:	movabs es:0xa334000000000003,eax
  438e5e:	add    eax,DWORD PTR [rax]
  438e60:	add    BYTE PTR [rax],al
  438e62:	add    BYTE PTR [rax],al
  438e64:	rex.R movabs ds:0xa35a000000000003,eax
  438e6e:	add    eax,DWORD PTR [rax]
  438e70:	add    BYTE PTR [rax],al
  438e72:	add    BYTE PTR [rax],al
  438e74:	outs   dx,BYTE PTR ds:[rsi]
  438e75:	movabs ds:0xa382000000000003,eax
  438e7e:	add    eax,DWORD PTR [rax]
  438e80:	add    BYTE PTR [rax],al
  438e82:	add    BYTE PTR [rax],al
  438e84:	movabs ds:0xb4000000000003a3,al
  438e8d:	movabs ds:0xa3c6000000000003,eax
  438e96:	add    eax,DWORD PTR [rax]
  438e98:	add    BYTE PTR [rax],al
  438e9a:	add    BYTE PTR [rax],al
  438e9c:	loopne 0x438e41
  438e9e:	add    eax,DWORD PTR [rax]
  438ea0:	add    BYTE PTR [rax],al
  438ea2:	add    BYTE PTR [rax],al
  438ea4:	lock movabs ds:0xa40c000000000003,eax
  438eae:	add    eax,DWORD PTR [rax]
  438eb0:	add    BYTE PTR [rax],al
  438eb2:	add    BYTE PTR [rax],al
  438eb4:	and    BYTE PTR [rbx+rax*1+0x0],ah
  438ebb:	add    BYTE PTR [rax],bh
  438ebd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438ebe:	add    eax,DWORD PTR [rax]
  438ec0:	add    BYTE PTR [rax],al
  438ec2:	add    BYTE PTR [rax],al
  438ec4:	rex.WRX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438ec6:	add    eax,DWORD PTR [rax]
  438ec8:	add    BYTE PTR [rax],al
  438eca:	add    BYTE PTR [rax],al
  438ecc:	(bad)  
  438ecd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438ece:	add    eax,DWORD PTR [rax]
  438ed0:	add    BYTE PTR [rax],al
  438ed2:	add    BYTE PTR [rax],al
  438ed4:	jb     0x438e7a
  438ed6:	add    eax,DWORD PTR [rax]
  438ed8:	add    BYTE PTR [rax],al
  438eda:	add    BYTE PTR [rax],al
  438edc:	mov    WORD PTR [rbx+rax*1+0x0],fs
  438ee3:	add    BYTE PTR [rdx+0x3a4],ah
  438ee9:	add    BYTE PTR [rax],al
  438eeb:	add    BYTE PTR [rsi+0x3a4],dh
  438ef1:	add    BYTE PTR [rax],al
  438ef3:	add    al,dl
  438ef5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438ef6:	add    eax,DWORD PTR [rax]
  438ef8:	add    BYTE PTR [rax],al
  438efa:	add    BYTE PTR [rax],al
  438efc:	in     al,0xa4
  438efe:	add    eax,DWORD PTR [rax]
  438f00:	add    BYTE PTR [rax],al
  438f02:	add    BYTE PTR [rax],al
  438f04:	add    ah,BYTE PTR [rbp+0x3]
  438f0a:	add    BYTE PTR [rax],al
  438f0c:	or     ah,BYTE PTR [rbp+0x3]
  438f12:	add    BYTE PTR [rax],al
  438f14:	adc    al,0xa5
  438f16:	add    eax,DWORD PTR [rax]
  438f18:	add    BYTE PTR [rax],al
  438f1a:	add    BYTE PTR [rax],al
  438f1c:	sub    BYTE PTR [rbp+0x3],ah
  438f22:	add    BYTE PTR [rax],al
  438f24:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
  438f26:	add    eax,DWORD PTR [rax]
  438f28:	add    BYTE PTR [rax],al
  438f2a:	add    BYTE PTR [rax],al
  438f2c:	push   rdx
  438f2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438f2e:	add    eax,DWORD PTR [rax]
  438f30:	add    BYTE PTR [rax],al
  438f32:	add    BYTE PTR [rax],al
  438f34:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
  438f36:	add    eax,DWORD PTR [rax]
  438f38:	add    BYTE PTR [rax],al
  438f3a:	add    BYTE PTR [rax],al
  438f3c:	je     0x438ee3
  438f3e:	add    eax,DWORD PTR [rax]
  438f40:	add    BYTE PTR [rax],al
  438f42:	add    BYTE PTR [rax],al
  438f44:	mov    ah,BYTE PTR [rbp+0x3]
	...
  438f52:	add    BYTE PTR [rax],al
  438f54:	movabs al,ds:0xb8000000000003a5
  438f5d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438f5e:	add    eax,DWORD PTR [rax]
  438f60:	add    BYTE PTR [rax],al
  438f62:	add    BYTE PTR [rax],al
  438f64:	(bad)  
  438f65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438f66:	add    eax,DWORD PTR [rax]
  438f68:	add    BYTE PTR [rax],al
  438f6a:	add    BYTE PTR [rax],al
  438f6c:	fsub   QWORD PTR [rbp+0x3]
  438f72:	add    BYTE PTR [rax],al
  438f74:	in     al,dx
  438f75:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438f76:	add    eax,DWORD PTR [rax]
  438f78:	add    BYTE PTR [rax],al
  438f7a:	add    BYTE PTR [rax],al
  438f7c:	clc    
  438f7d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438f7e:	add    eax,DWORD PTR [rax]
  438f80:	add    BYTE PTR [rax],al
  438f82:	add    BYTE PTR [rax],al
  438f84:	(bad)  
  438f85:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438f86:	add    eax,DWORD PTR [rax]
  438f88:	add    BYTE PTR [rax],al
  438f8a:	add    BYTE PTR [rax],al
  438f8c:	(bad)  
  438f8d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438f8e:	add    eax,DWORD PTR [rax]
  438f90:	add    BYTE PTR [rax],al
  438f92:	add    BYTE PTR [rax],al
  438f94:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
  438f96:	add    eax,DWORD PTR [rax]
  438f98:	add    BYTE PTR [rax],al
  438f9a:	add    BYTE PTR [rax],al
  438f9c:	cmp    BYTE PTR [rsi+0x3],ah
  438fa2:	add    BYTE PTR [rax],al
  438fa4:	rex.WR cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438fa6:	add    eax,DWORD PTR [rax]
  438fa8:	add    BYTE PTR [rax],al
  438faa:	add    BYTE PTR [rax],al
  438fac:	push   rsi
  438fad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438fae:	add    eax,DWORD PTR [rax]
  438fb0:	add    BYTE PTR [rax],al
  438fb2:	add    BYTE PTR [rax],al
  438fb4:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
  438fb6:	add    eax,DWORD PTR [rax]
  438fb8:	add    BYTE PTR [rax],al
  438fba:	add    BYTE PTR [rax],al
  438fbc:	outs   dx,BYTE PTR ds:[rsi]
  438fbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438fbe:	add    eax,DWORD PTR [rax]
  438fc0:	add    BYTE PTR [rax],al
  438fc2:	add    BYTE PTR [rax],al
  438fc4:	js     0x438f6c
  438fc6:	add    eax,DWORD PTR [rax]
  438fc8:	add    BYTE PTR [rax],al
  438fca:	add    BYTE PTR [rax],al
  438fcc:	test   BYTE PTR [rsi+0x3],ah
  438fd2:	add    BYTE PTR [rax],al
  438fd4:	mov    fs,WORD PTR [rsi+0x3]
  438fda:	add    BYTE PTR [rax],al
  438fdc:	xchg   esi,eax
  438fdd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438fde:	add    eax,DWORD PTR [rax]
  438fe0:	add    BYTE PTR [rax],al
  438fe2:	add    BYTE PTR [rax],al
  438fe4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  438fe5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438fe6:	add    eax,DWORD PTR [rax]
  438fe8:	add    BYTE PTR [rax],al
  438fea:	add    BYTE PTR [rax],al
  438fec:	mov    ah,0xa6
  438fee:	add    eax,DWORD PTR [rax]
  438ff0:	add    BYTE PTR [rax],al
  438ff2:	add    BYTE PTR [rax],al
  438ff4:	mov    esi,0x3a6
  438ff9:	add    BYTE PTR [rax],al
  438ffb:	add    dl,cl
  438ffd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438ffe:	add    eax,DWORD PTR [rax]
  439000:	add    BYTE PTR [rax],al
  439002:	add    BYTE PTR [rax],al
  439004:	(bad)  
  439005:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  439006:	add    eax,DWORD PTR [rax]
  439008:	add    BYTE PTR [rax],al
  43900a:	add    BYTE PTR [rax],al
  43900c:	call   0x4393b7
  439011:	add    BYTE PTR [rax],al
  439013:	add    dl,dh
  439015:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  439016:	add    eax,DWORD PTR [rax]
  439018:	add    BYTE PTR [rax],al
  43901a:	add    BYTE PTR [rax],al
  43901c:	(bad)  
  43901d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43901e:	add    eax,DWORD PTR [rax]
  439020:	add    BYTE PTR [rax],al
  439022:	add    BYTE PTR [rax],al
  439024:	(bad)  
  439025:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  439026:	add    eax,DWORD PTR [rax]
  439028:	add    BYTE PTR [rax],al
  43902a:	add    BYTE PTR [rax],al
  43902c:	(bad)  
  43902d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43902e:	add    eax,DWORD PTR [rax]
  439030:	add    BYTE PTR [rax],al
  439032:	add    BYTE PTR [rax],al
  439034:	and    ah,BYTE PTR [rdi+0x3]
  43903a:	add    BYTE PTR [rax],al
  43903c:	sub    al,0xa7
  43903e:	add    eax,DWORD PTR [rax]
  439040:	add    BYTE PTR [rax],al
  439042:	add    BYTE PTR [rax],al
  439044:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  439046:	add    eax,DWORD PTR [rax]
  439048:	add    BYTE PTR [rax],al
  43904a:	add    BYTE PTR [rax],al
  43904c:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  43904e:	add    eax,DWORD PTR [rax]
  439050:	add    BYTE PTR [rax],al
  439052:	add    BYTE PTR [rax],al
  439054:	pop    rax
  439055:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  439056:	add    eax,DWORD PTR [rax]
  439058:	add    BYTE PTR [rax],al
  43905a:	add    BYTE PTR [rax],al
  43905c:	(bad)  
  43905d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43905e:	add    eax,DWORD PTR [rax]
  439060:	add    BYTE PTR [rax],al
  439062:	add    BYTE PTR [rax],al
  439064:	ins    BYTE PTR es:[rdi],dx
  439065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  439066:	add    eax,DWORD PTR [rax]
  439068:	add    BYTE PTR [rax],al
  43906a:	add    BYTE PTR [rax],al
  43906c:	je     0x439015
  43906e:	add    eax,DWORD PTR [rax]
  439070:	add    BYTE PTR [rax],al
  439072:	add    BYTE PTR [rax],al
  439074:	jl     0x43901d
  439076:	add    eax,DWORD PTR [rax]
  439078:	add    BYTE PTR [rax],al
  43907a:	add    BYTE PTR [rax],al
  43907c:	xchg   BYTE PTR [rdi+0x3],ah
  439082:	add    BYTE PTR [rax],al
  439084:	mov    fs,WORD PTR [rdi+0x3]
  43908a:	add    BYTE PTR [rax],al
  43908c:	xchg   esi,eax
  43908d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43908e:	add    eax,DWORD PTR [rax]
  439090:	add    BYTE PTR [rax],al
  439092:	add    BYTE PTR [rax],al
  439094:	movabs al,ds:0xaa000000000003a7
  43909d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43909e:	add    eax,DWORD PTR [rax]
  4390a0:	add    BYTE PTR [rax],al
  4390a2:	add    BYTE PTR [rax],al
  4390a4:	mov    ah,0xa7
  4390a6:	add    eax,DWORD PTR [rax]
  4390a8:	add    BYTE PTR [rax],al
  4390aa:	add    BYTE PTR [rax],al
  4390ac:	mov    esp,0x3a7
  4390b1:	add    BYTE PTR [rax],al
  4390b3:	add    dh,al
  4390b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4390b6:	add    eax,DWORD PTR [rax]
  4390b8:	add    BYTE PTR [rax],al
  4390ba:	add    BYTE PTR [rax],al
  4390bc:	(bad)  
  4390bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4390be:	add    eax,DWORD PTR [rax]
  4390c0:	add    BYTE PTR [rax],al
  4390c2:	add    BYTE PTR [rax],al
  4390c4:	(bad)  
  4390c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4390c6:	add    eax,DWORD PTR [rax]
  4390c8:	add    BYTE PTR [rax],al
  4390ca:	add    BYTE PTR [rax],al
  4390cc:	fisub  WORD PTR [rdi+0x3]
  4390d2:	add    BYTE PTR [rax],al
  4390d4:	out    0xa7,al
  4390d6:	add    eax,DWORD PTR [rax]
  4390d8:	add    BYTE PTR [rax],al
  4390da:	add    BYTE PTR [rax],al
  4390dc:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4390de:	add    eax,DWORD PTR [rax]
  4390e0:	add    BYTE PTR [rax],al
  4390e2:	add    BYTE PTR [rax],al
  4390e4:	cld    
  4390e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4390e6:	add    eax,DWORD PTR [rax]
  4390e8:	add    BYTE PTR [rax],al
  4390ea:	add    BYTE PTR [rax],al
  4390ec:	(bad)  
  4390ed:	test   al,0x3
  4390ef:	add    BYTE PTR [rax],al
  4390f1:	add    BYTE PTR [rax],al
  4390f3:	add    BYTE PTR [rax],dl
  4390f5:	test   al,0x3
  4390f7:	add    BYTE PTR [rax],al
  4390f9:	add    BYTE PTR [rax],al
  4390fb:	add    BYTE PTR [rdx],bl
  4390fd:	test   al,0x3
  4390ff:	add    BYTE PTR [rax],al
  439101:	add    BYTE PTR [rax],al
  439103:	add    BYTE PTR [rax],ch
  439105:	test   al,0x3
  439107:	add    BYTE PTR [rax],al
  439109:	add    BYTE PTR [rax],al
  43910b:	add    BYTE PTR [rdx],dh
  43910d:	test   al,0x3
  43910f:	add    BYTE PTR [rax],al
  439111:	add    BYTE PTR [rax],al
  439113:	add    BYTE PTR [rax+rbp*4],bh
  439116:	add    eax,DWORD PTR [rax]
  439118:	add    BYTE PTR [rax],al
  43911a:	add    BYTE PTR [rax],al
  43911c:	rex.RX test al,0x3
  43911f:	add    BYTE PTR [rax],al
  439121:	add    BYTE PTR [rax],al
  439123:	add    BYTE PTR [rax-0x58],dl
  439126:	add    eax,DWORD PTR [rax]
  439128:	add    BYTE PTR [rax],al
  43912a:	add    BYTE PTR [rax],al
  43912c:	pop    rdx
  43912d:	test   al,0x3
  43912f:	add    BYTE PTR [rax],al
  439131:	add    BYTE PTR [rax],al
  439133:	add    BYTE PTR [rax+rbp*4+0x3],ah
  439137:	add    BYTE PTR [rax],al
  439139:	add    BYTE PTR [rax],al
  43913b:	add    BYTE PTR [rax+rbp*4+0x3],ch
  43913f:	add    BYTE PTR [rax],al
  439141:	add    BYTE PTR [rax],al
  439143:	add    BYTE PTR [rax+rbp*4+0x3],dh
  439147:	add    BYTE PTR [rax],al
  439149:	add    BYTE PTR [rax],al
  43914b:	add    BYTE PTR [rsi-0x58],bh
  43914e:	add    eax,DWORD PTR [rax]
  439150:	add    BYTE PTR [rax],al
  439152:	add    BYTE PTR [rax],al
  439154:	mov    BYTE PTR [rax+0x3],ch
  43915a:	add    BYTE PTR [rax],al
  43915c:	xchg   edx,eax
  43915d:	test   al,0x3
  43915f:	add    BYTE PTR [rax],al
  439161:	add    BYTE PTR [rax],al
  439163:	add    BYTE PTR [rax+rbp*4+0x3],bl
  43916a:	add    BYTE PTR [rax],al
  43916c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43916d:	test   al,0x3
  43916f:	add    BYTE PTR [rax],al
  439171:	add    BYTE PTR [rax],al
  439173:	add    BYTE PTR [rax+0x3a8],dh
  439179:	add    BYTE PTR [rax],al
  43917b:	add    BYTE PTR [rax+rbp*4+0x3],bh
  439182:	add    BYTE PTR [rax],al
  439184:	enter  0x3a8,0x0
  439188:	add    BYTE PTR [rax],al
  43918a:	add    BYTE PTR [rax],al
  43918c:	shr    BYTE PTR [rax+0x3],cl
  439192:	add    BYTE PTR [rax],al
  439194:	fsubr  QWORD PTR [rax+0x3]
  43919a:	add    BYTE PTR [rax],al
  43919c:	out    0xa8,al
  43919e:	add    eax,DWORD PTR [rax]
  4391a0:	add    BYTE PTR [rax],al
  4391a2:	add    BYTE PTR [rax],al
  4391a4:	lock test al,0x3
  4391a7:	add    BYTE PTR [rax],al
  4391a9:	add    BYTE PTR [rax],al
  4391ab:	add    dl,bh
  4391ad:	test   al,0x3
  4391af:	add    BYTE PTR [rax],al
  4391b1:	add    BYTE PTR [rax],al
  4391b3:	add    BYTE PTR [rcx+rbp*4],al
  4391b6:	add    eax,DWORD PTR [rax]
  4391b8:	add    BYTE PTR [rax],al
  4391ba:	add    BYTE PTR [rax],al
  4391bc:	(bad)  
  4391bd:	test   eax,0x3
  4391c2:	add    BYTE PTR [rax],al
  4391c4:	sbb    BYTE PTR [rcx+0x3],ch
  4391ca:	add    BYTE PTR [rax],al
  4391cc:	and    ch,BYTE PTR [rcx+0x3]
  4391d2:	add    BYTE PTR [rax],al
  4391d4:	sub    al,0xa9
  4391d6:	add    eax,DWORD PTR [rax]
  4391d8:	add    BYTE PTR [rax],al
  4391da:	add    BYTE PTR [rax],al
  4391dc:	cmp    BYTE PTR [rcx+0x3],ch
  4391e2:	add    BYTE PTR [rax],al
  4391e4:	rex.X test eax,0x3
  4391ea:	add    BYTE PTR [rax],al
  4391ec:	rex.WR test rax,0x3
  4391f2:	add    BYTE PTR [rax],al
  4391f4:	pop    rax
  4391f5:	test   eax,0x3
  4391fa:	add    BYTE PTR [rax],al
  4391fc:	(bad)  
  4391fd:	test   eax,0x3
  439202:	add    BYTE PTR [rax],al
  439204:	jo     0x4391af
  439206:	add    eax,DWORD PTR [rax]
  439208:	add    BYTE PTR [rax],al
  43920a:	add    BYTE PTR [rax],al
  43920c:	jp     0x4391b7
  43920e:	add    eax,DWORD PTR [rax]
  439210:	add    BYTE PTR [rax],al
  439212:	add    BYTE PTR [rax],al
  439214:	test   BYTE PTR [rcx+0x3],ch
  43921a:	add    BYTE PTR [rax],al
  43921c:	mov    gs,WORD PTR [rcx+0x3]
  439222:	add    BYTE PTR [rax],al
  439224:	xchg   esi,eax
  439225:	test   eax,0x3
  43922a:	add    BYTE PTR [rax],al
  43922c:	sahf   
  43922d:	test   eax,0x3
  439232:	add    BYTE PTR [rax],al
  439234:	test   al,0xa9
  439236:	add    eax,DWORD PTR [rax]
  439238:	add    BYTE PTR [rax],al
  43923a:	add    BYTE PTR [rax],al
  43923c:	mov    dl,0xa9
  43923e:	add    eax,DWORD PTR [rax]
	...
  43924c:	mov    esp,0x3a9
  439251:	add    BYTE PTR [rax],al
  439253:	add    al,cl
  439255:	test   eax,0x3
  43925a:	add    BYTE PTR [rax],al
  43925c:	(bad)  
  43925d:	test   eax,0x3
	...
  43926a:	add    BYTE PTR [rax],al
  43926c:	loopne 0x439217
  43926e:	add    eax,DWORD PTR [rax]
  439270:	add    BYTE PTR [rax],al
  439272:	add    BYTE PTR [rax],al
  439274:	hlt    
  439275:	test   eax,0x3
  43927a:	add    BYTE PTR [rax],al
  43927c:	add    ch,BYTE PTR [rdx+0x3]
  439282:	add    BYTE PTR [rax],al
  439284:	(bad)  
  439285:	stos   BYTE PTR es:[rdi],al
  439286:	add    eax,DWORD PTR [rax]
  439288:	add    BYTE PTR [rax],al
  43928a:	add    BYTE PTR [rax],al
  43928c:	cs stos BYTE PTR es:[rdi],al
  43928e:	add    eax,DWORD PTR [rax]
	...
  43929c:	rex.X stos BYTE PTR es:[rdi],al
  43929e:	add    eax,DWORD PTR [rax]
  4392a0:	add    BYTE PTR [rax],al
  4392a2:	add    BYTE PTR [rax],al
  4392a4:	push   rax
  4392a5:	stos   BYTE PTR es:[rdi],al
  4392a6:	add    eax,DWORD PTR [rax]
  4392a8:	add    BYTE PTR [rax],al
  4392aa:	add    BYTE PTR [rax],al
  4392ac:	push   0x3aa
  4392b1:	add    BYTE PTR [rax],al
  4392b3:	add    BYTE PTR [rdx-0x56],bh
  4392b6:	add    eax,DWORD PTR [rax]
  4392b8:	add    BYTE PTR [rax],al
  4392ba:	add    BYTE PTR [rax],al
  4392bc:	mov    WORD PTR [rdx+0x3],gs
  4392c2:	add    BYTE PTR [rax],al
  4392c4:	sahf   
  4392c5:	stos   BYTE PTR es:[rdi],al
  4392c6:	add    eax,DWORD PTR [rax]
  4392c8:	add    BYTE PTR [rax],al
  4392ca:	add    BYTE PTR [rax],al
  4392cc:	lods   al,BYTE PTR ds:[rsi]
  4392cd:	stos   BYTE PTR es:[rdi],al
  4392ce:	add    eax,DWORD PTR [rax]
  4392d0:	add    BYTE PTR [rax],al
  4392d2:	add    BYTE PTR [rax],al
  4392d4:	mov    edx,0x3aa
  4392d9:	add    BYTE PTR [rax],al
  4392db:	add    dl,cl
  4392dd:	stos   BYTE PTR es:[rdi],al
  4392de:	add    eax,DWORD PTR [rax]
  4392e0:	add    BYTE PTR [rax],al
  4392e2:	add    BYTE PTR [rax],al
  4392e4:	fsubr  DWORD PTR [rdx+0x3]
  4392ea:	add    BYTE PTR [rax],al
  4392ec:	loop   0x439298
  4392ee:	add    eax,DWORD PTR [rax]
  4392f0:	add    BYTE PTR [rax],al
  4392f2:	add    BYTE PTR [rax],al
  4392f4:	repnz stos BYTE PTR es:[rdi],al
  4392f6:	add    eax,DWORD PTR [rax]
  4392f8:	add    BYTE PTR [rax],al
  4392fa:	add    BYTE PTR [rax],al
  4392fc:	add    BYTE PTR [rbx+0x3],ch
  439302:	add    BYTE PTR [rax],al
  439304:	(bad)  
  439305:	stos   DWORD PTR es:[rdi],eax
  439306:	add    eax,DWORD PTR [rax]
  439308:	add    BYTE PTR [rax],al
  43930a:	add    BYTE PTR [rax],al
  43930c:	(bad)  
  43930d:	stos   DWORD PTR es:[rdi],eax
  43930e:	add    eax,DWORD PTR [rax]
  439310:	add    BYTE PTR [rax],al
  439312:	add    BYTE PTR [rax],al
  439314:	cs stos DWORD PTR es:[rdi],eax
  439316:	add    eax,DWORD PTR [rax]
  439318:	add    BYTE PTR [rax],al
  43931a:	add    BYTE PTR [rax],al
  43931c:	ss stos DWORD PTR es:[rdi],eax
  43931e:	add    eax,DWORD PTR [rax]
  439320:	add    BYTE PTR [rax],al
  439322:	add    BYTE PTR [rax],al
  439324:	rex.R stos DWORD PTR es:[rdi],eax
  439326:	add    eax,DWORD PTR [rax]
  439328:	add    BYTE PTR [rax],al
  43932a:	add    BYTE PTR [rax],al
  43932c:	rex.WR stos QWORD PTR es:[rdi],rax
  43932e:	add    eax,DWORD PTR [rax]
  439330:	add    BYTE PTR [rax],al
  439332:	add    BYTE PTR [rax],al
  439334:	push   rsp
  439335:	stos   DWORD PTR es:[rdi],eax
  439336:	add    eax,DWORD PTR [rax]
  439338:	add    BYTE PTR [rax],al
  43933a:	add    BYTE PTR [rax],al
  43933c:	pop    rsi
  43933d:	stos   DWORD PTR es:[rdi],eax
  43933e:	add    eax,DWORD PTR [rax]
  439340:	add    BYTE PTR [rax],al
  439342:	add    BYTE PTR [rax],al
  439344:	stos   WORD PTR es:[rdi],ax
  439346:	add    eax,DWORD PTR [rax]
  439348:	add    BYTE PTR [rax],al
  43934a:	add    BYTE PTR [rax],al
  43934c:	je     0x4392f9
  43934e:	add    eax,DWORD PTR [rax]
	...
  43935c:	add    eax,0x6e675f00
  439361:	jne    0x4393d7
  439363:	ins    BYTE PTR es:[rdi],dx
  439364:	jae    0x4393c5
  439366:	push   0x6f6c6c65
  43936b:	pop    rdi
  43936c:	jae    0x4393d3
  43936e:	je     0x4393cf
  439370:	fs gs data16 (bad) 
  439374:	jne    0x4393e2
  439376:	je     0x4393d7
  439378:	jbe    0x4393df
  43937a:	jb     0x4393ef
  43937c:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f000d00
  439383:	outs   dx,BYTE PTR ds:[esi]
  439385:	jne    0x4393fb
  439387:	ins    BYTE PTR es:[rdi],dx
  439388:	jae    0x4393e9
  43938a:	jb     0x4393f1
  43938c:	movsxd ebp,DWORD PTR [rdi+0x72]
  43938f:	fs pop rdi
  439391:	jae    0x4393f8
  439393:	je     0x4393f4
  439395:	fs gs data16 (bad) 
  439399:	jne    0x439407
  43939b:	je     0x4393fc
  43939d:	jbe    0x439404
  43939f:	jb     0x439414
  4393a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4393a8:	(bad)  
  4393a9:	add    BYTE PTR [rdi+0x67],bl
  4393ac:	outs   dx,BYTE PTR ds:[rsi]
  4393ad:	jne    0x439423
  4393af:	ins    BYTE PTR es:[rdi],dx
  4393b0:	jae    0x439411
  4393b2:	jb     0x439427
  4393b4:	(bad)  
  4393b5:	pop    rdi
  4393b6:	jo     0x439425
  4393b8:	jae    0x439419
  4393ba:	jae    0x439421
  4393bc:	je     0x43941d
  4393be:	jbe    0x439425
  4393c0:	jb     0x439435
  4393c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x13000000
  4393c9:	add    BYTE PTR [rdi+0x6e],ah
  4393cc:	jne    0x439442
  4393ce:	ins    BYTE PTR es:[rdi],dx
  4393cf:	jae    0x439430
  4393d1:	(bad)  
  4393d2:	ins    BYTE PTR es:[rdi],dx
  4393d3:	gs jb  0x43944a
  4393d6:	pop    rdi
  4393d7:	addr32 gs je 0x4393db
  4393db:	add    BYTE PTR [rax+rax*1],dl
  4393de:	outs   dx,BYTE PTR ds:[esi]
  4393e0:	jne    0x439456
  4393e2:	ins    BYTE PTR es:[rdi],dx
  4393e3:	jae    0x439444
  4393e5:	(bad)  
  4393e6:	ins    BYTE PTR es:[rdi],dx
  4393e7:	gs jb  0x43945e
  4393ea:	pop    rdi
  4393eb:	addr32 gs je 0x43944e
  4393ef:	outs   dx,BYTE PTR ds:[rsi]
  4393f0:	(bad)  
  4393f1:	ins    DWORD PTR es:[rdi],dx
  4393f2:	add    BYTE PTR gs:[rax],bl
  4393f5:	add    BYTE PTR [rdi+0x6e],ah
  4393f8:	jne    0x43946e
  4393fa:	ins    BYTE PTR es:[rdi],dx
  4393fb:	jae    0x43945c
  4393fd:	(bad)  
  4393fe:	ins    BYTE PTR es:[rdi],dx
  4393ff:	jo     0x43946f
  439401:	pop    rdi
  439402:	addr32 gs je 0x439465
  439406:	jae    0x43946d
  439408:	ins    BYTE PTR es:[rdi],dx
  439409:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43940e:	pop    rdi
  43940f:	jo     0x439483
  439411:	outs   dx,DWORD PTR ds:[rsi]
  439412:	je     0x439483
  439414:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439417:	add    BYTE PTR [rdx],bl
  439419:	add    BYTE PTR [rdi+0x6e],ah
  43941c:	jne    0x439492
  43941e:	ins    BYTE PTR es:[rdi],dx
  43941f:	jae    0x439480
  439421:	(bad)  
  439422:	outs   dx,BYTE PTR ds:[rsi]
  439423:	outs   dx,DWORD PTR ds:[rsi]
  439424:	outs   dx,BYTE PTR ds:[rsi]
  439425:	pop    rdi
  439426:	(bad)  
  439427:	ins    BYTE PTR es:[rdi],dx
  439428:	ins    BYTE PTR es:[rdi],dx
  439429:	outs   dx,DWORD PTR ds:[rsi]
  43942a:	movsxd esp,DWORD PTR [rcx+0x74]
  43942d:	gs pop rdi
  43942f:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  439433:	outs   dx,BYTE PTR ds:[rsi]
  439434:	je     0x439495
  439436:	movsxd esi,DWORD PTR [rdx+0x65]
  439439:	fs outs dx,BYTE PTR gs:[rsi]
  43943c:	je     0x4394a7
  43943e:	(bad)  
  43943f:	ins    BYTE PTR es:[rdi],dx
  439440:	jae    0x439442
  439442:	add    BYTE PTR [rax],al
  439444:	sbb    al,0x0
  439446:	outs   dx,BYTE PTR ds:[esi]
  439448:	jne    0x4394be
  43944a:	ins    BYTE PTR es:[rdi],dx
  43944b:	jae    0x4394ac
  43944d:	(bad)  
  43944e:	outs   dx,BYTE PTR ds:[rsi]
  43944f:	outs   dx,DWORD PTR ds:[rsi]
  439450:	outs   dx,BYTE PTR ds:[rsi]
  439451:	pop    rdi
  439452:	data16 jb 0x4394ba
  439455:	gs pop rdi
  439457:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  43945b:	outs   dx,BYTE PTR ds:[rsi]
  43945c:	je     0x4394bd
  43945e:	movsxd esi,DWORD PTR [rdx+0x65]
  439461:	fs outs dx,BYTE PTR gs:[rsi]
  439464:	je     0x4394cf
  439466:	(bad)  
  439467:	ins    BYTE PTR es:[rdi],dx
  439468:	jae    0x43946a
  43946a:	add    BYTE PTR [rax],al
  43946c:	and    al,BYTE PTR [rax]
  43946e:	outs   dx,BYTE PTR ds:[esi]
  439470:	jne    0x4394e6
  439472:	ins    BYTE PTR es:[rdi],dx
  439473:	jae    0x4394d4
  439475:	(bad)  
  439476:	jne    0x4394ec
  439478:	push   0x7465675f
  43947d:	pop    rdi
  43947e:	je     0x4394f9
  439480:	jo     0x4394e7
  439482:	add    BYTE PTR [rax],al
  439484:	and    eax,0x756e6700
  439489:	je     0x4394f7
  43948b:	jae    0x4394ec
  43948d:	(bad)  
  43948e:	jns    0x4394f5
  439490:	add    BYTE PTR [rax],al
  439492:	add    BYTE PTR [rax],al
  439494:	sub    BYTE PTR [rax],al
  439496:	outs   dx,BYTE PTR ds:[esi]
  439498:	jne    0x43950e
  43949a:	ins    BYTE PTR es:[rdi],dx
  43949b:	jae    0x4394fc
  43949d:	movsxd esp,DWORD PTR [rbp+0x72]
  4394a0:	je     0x43950b
  4394a2:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4394a8:	pop    rdi
  4394a9:	(bad)  
  4394aa:	ins    BYTE PTR es:[rdi],dx
  4394ab:	ins    BYTE PTR es:[rdi],dx
  4394ac:	outs   dx,DWORD PTR ds:[rsi]
  4394ad:	movsxd esp,DWORD PTR [rcx+0x74]
  4394b0:	gs pop rdi
  4394b2:	movsxd esi,DWORD PTR [rdx+0x65]
  4394b5:	fs outs dx,BYTE PTR gs:[rsi]
  4394b8:	je     0x439523
  4394ba:	(bad)  
  4394bb:	ins    BYTE PTR es:[rdi],dx
  4394bc:	jae    0x4394be
  4394be:	add    BYTE PTR [rax],al
  4394c0:	sub    DWORD PTR [rax],eax
  4394c2:	outs   dx,BYTE PTR ds:[esi]
  4394c4:	jne    0x43953a
  4394c6:	ins    BYTE PTR es:[rdi],dx
  4394c7:	jae    0x439528
  4394c9:	movsxd esp,DWORD PTR [rbp+0x72]
  4394cc:	je     0x439537
  4394ce:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4394d4:	pop    rdi
  4394d5:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  4394d9:	outs   dx,BYTE PTR ds:[rsi]
  4394da:	je     0x43953b
  4394dc:	addr32 gs je 0x43953f
  4394e0:	jb     0x439547
  4394e2:	jno    0x439559
  4394e4:	gs jae 0x43955b
  4394e7:	pop    rdi
  4394e8:	jae    0x43955e
  4394ea:	(bad)  
  4394eb:	je     0x439562
  4394ed:	jae    0x4394ef
  4394ef:	add    BYTE PTR [rip+0x756e6700],ch        # 0x75b1fbf5
  4394f5:	je     0x439563
  4394f7:	jae    0x439558
  4394f9:	movsxd esp,DWORD PTR [rbp+0x72]
  4394fc:	je     0x439567
  4394fe:	imul   sp,WORD PTR [rbx+0x61],0x6574
  439504:	pop    rdi
  439505:	data16 jb 0x43956d
  439508:	gs pop rdi
  43950a:	movsxd esi,DWORD PTR [rdx+0x65]
  43950d:	fs outs dx,BYTE PTR gs:[rsi]
  439510:	je     0x43957b
  439512:	(bad)  
  439513:	ins    BYTE PTR es:[rdi],dx
  439514:	jae    0x439516
  439516:	add    BYTE PTR [rax],al
  439518:	xor    al,0x0
  43951a:	outs   dx,BYTE PTR ds:[esi]
  43951c:	jne    0x439592
  43951e:	ins    BYTE PTR es:[rdi],dx
  43951f:	jae    0x439580
  439521:	movsxd esp,DWORD PTR [rbp+0x72]
  439524:	je     0x43958f
  439526:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43952c:	pop    rdi
  43952d:	addr32 gs je 0x439590
  439531:	outs   dx,DWORD PTR ds:[rsi]
  439532:	jne    0x4395a6
  439534:	jae    0x439536
  439536:	add    BYTE PTR [rax],al
  439538:	xor    eax,0x756e6700
  43953d:	je     0x4395ab
  43953f:	jae    0x4395a0
  439541:	movsxd esp,DWORD PTR [rbp+0x72]
  439544:	je     0x4395af
  439546:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43954c:	pop    rdi
  43954d:	addr32 gs je 0x4395b0
  439551:	jo     0x4395b8
  439553:	gs jb  0x4395c9
  439556:	add    BYTE PTR [rax],al
  439558:	rex.WXB add BYTE PTR [r15+0x6e],spl
  43955c:	jne    0x4395d2
  43955e:	ins    BYTE PTR es:[rdi],dx
  43955f:	jae    0x4395c0
  439561:	movsxd esp,DWORD PTR [rbp+0x72]
  439564:	je     0x4395cf
  439566:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43956c:	pop    rdi
  43956d:	jae    0x4395d4
  43956f:	je     0x4395d0
  439571:	jb     0x4395d8
  439573:	je     0x4395e7
  439575:	imul   esp,DWORD PTR [rbp+0x76],0x75665f65
  43957c:	outs   dx,BYTE PTR ds:[rsi]
  43957d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  439581:	outs   dx,BYTE PTR ds:[rsi]
  439582:	add    BYTE PTR [rax],al
  439584:	(bad)  
  439585:	add    BYTE PTR [rdi+0x6e],ah
  439588:	jne    0x4395fe
  43958a:	ins    BYTE PTR es:[rdi],dx
  43958b:	jae    0x4395ec
  43958d:	movsxd esp,DWORD PTR [rbp+0x72]
  439590:	je     0x4395fb
  439592:	imul   sp,WORD PTR [rbx+0x61],0x6574
  439598:	pop    rdi
  439599:	je     0x439614
  43959b:	jo     0x439602
  43959d:	pop    rdi
  43959e:	addr32 gs je 0x4395a2
  4395a2:	add    BYTE PTR [rax],al
  4395a4:	(bad)  
  4395a5:	add    BYTE PTR [rdi+0x6e],ah
  4395a8:	jne    0x43961e
  4395aa:	ins    BYTE PTR es:[rdi],dx
  4395ab:	jae    0x43960c
  4395ad:	movsxd esp,DWORD PTR [rbp+0x72]
  4395b0:	je     0x43961b
  4395b2:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4395b8:	pop    rdi
  4395b9:	je     0x439634
  4395bb:	jo     0x439622
  4395bd:	pop    rdi
  4395be:	addr32 gs je 0x439621
  4395c2:	outs   dx,BYTE PTR ds:[rsi]
  4395c3:	(bad)  
  4395c4:	ins    DWORD PTR es:[rdi],dx
  4395c5:	add    BYTE PTR gs:[rax],al
  4395c8:	movsxd eax,DWORD PTR [rax]
  4395ca:	outs   dx,BYTE PTR ds:[esi]
  4395cc:	jne    0x439642
  4395ce:	ins    BYTE PTR es:[rdi],dx
  4395cf:	jae    0x439630
  4395d1:	movsxd esp,DWORD PTR [rbp+0x72]
  4395d4:	je     0x43963f
  4395d6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4395dc:	pop    rdi
  4395dd:	je     0x439658
  4395df:	jo     0x439646
  4395e1:	pop    rdi
  4395e2:	ins    BYTE PTR es:[rdi],dx
  4395e3:	imul   esi,DWORD PTR [rbx+0x74],0x640000
  4395ea:	outs   dx,BYTE PTR ds:[esi]
  4395ec:	jne    0x439662
  4395ee:	ins    BYTE PTR es:[rdi],dx
  4395ef:	jae    0x439650
  4395f1:	movsxd esp,DWORD PTR [rbp+0x72]
  4395f4:	je     0x43965f
  4395f6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4395fc:	pop    rdi
  4395fd:	jbe    0x439664
  4395ff:	jb     0x43966a
  439601:	imul   sp,WORD PTR [rbx+0x61],0x6974
  439607:	outs   dx,DWORD PTR ds:[rsi]
  439608:	outs   dx,BYTE PTR ds:[rsi]
  439609:	pop    rdi
  43960a:	jae    0x439680
  43960c:	(bad)  
  43960d:	je     0x439684
  43960f:	jae    0x439670
  439611:	jo     0x439685
  439613:	imul   ebp,DWORD PTR [rsi+0x74],0x650000
  43961a:	outs   dx,BYTE PTR ds:[esi]
  43961c:	jne    0x439692
  43961e:	ins    BYTE PTR es:[rdi],dx
  43961f:	jae    0x439680
  439621:	movsxd esp,DWORD PTR [rbp+0x72]
  439624:	je     0x43968f
  439626:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43962c:	pop    rdi
  43962d:	jbe    0x439694
  43962f:	jb     0x43969a
  439631:	data16 jns 0x439693
  439634:	jo     0x43969b
  439636:	gs jb  0x4396ac
  439639:	add    BYTE PTR [rax],al
  43963b:	add    BYTE PTR [rax+0x0],ch
  43963e:	outs   dx,BYTE PTR ds:[esi]
  439640:	jne    0x4396b6
  439642:	ins    BYTE PTR es:[rdi],dx
  439643:	jae    0x4396a4
  439645:	movsxd ebp,DWORD PTR [rax+0x65]
  439648:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43964b:	jbe    0x4396b2
  43964d:	jb     0x4396c2
  43964f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f0000
  439656:	outs   dx,BYTE PTR ds:[esi]
  439658:	jne    0x4396ce
  43965a:	ins    BYTE PTR es:[rdi],dx
  43965b:	jae    0x4396bc
  43965d:	movsxd ebp,DWORD PTR [rcx+0x70]
  439660:	push   0x675f7265
  439665:	gs je  0x439668
  439668:	je     0x43966a
  43966a:	outs   dx,BYTE PTR ds:[esi]
  43966c:	jne    0x4396e2
  43966e:	ins    BYTE PTR es:[rdi],dx
  43966f:	jae    0x4396d0
  439671:	movsxd ebp,DWORD PTR [rcx+0x70]
  439674:	push   0x675f7265
  439679:	gs je  0x4396db
  43967c:	outs   dx,BYTE PTR ds:[rsi]
  43967d:	(bad)  
  43967e:	ins    DWORD PTR es:[rdi],dx
  43967f:	add    BYTE PTR gs:[rax],al
  439682:	add    BYTE PTR [rax],al
  439684:	ja     0x439686
  439686:	outs   dx,BYTE PTR ds:[esi]
  439688:	jne    0x4396fe
  43968a:	ins    BYTE PTR es:[rdi],dx
  43968b:	jae    0x4396ec
  43968d:	movsxd ebp,DWORD PTR [rcx+0x70]
  439690:	push   0x6c5f7265
  439695:	imul   esi,DWORD PTR [rbx+0x74],0x0
  43969c:	jp     0x43969e
  43969e:	outs   dx,BYTE PTR ds:[esi]
  4396a0:	jne    0x439716
  4396a2:	ins    BYTE PTR es:[rdi],dx
  4396a3:	jae    0x439704
  4396a5:	movsxd ebp,DWORD PTR [rcx+0x70]
  4396a8:	push   0x735f7265
  4396ad:	jne    0x439718
  4396af:	je     0x439716
  4396b1:	pop    rdi
  4396b2:	imul   ebp,DWORD PTR [rsi+0x66],0x7c00006f
  4396b9:	add    BYTE PTR [rdi+0x6e],ah
  4396bc:	jne    0x439732
  4396be:	ins    BYTE PTR es:[rdi],dx
  4396bf:	jae    0x439720
  4396c1:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4396c4:	jo     0x439738
  4396c6:	gs jae 0x43973c
  4396c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  4396d0:	add    BYTE PTR [rax],al
  4396d2:	add    BYTE PTR [rax],al
  4396d4:	jle    0x4396d6
  4396d6:	outs   dx,BYTE PTR ds:[esi]
  4396d8:	jne    0x43974e
  4396da:	ins    BYTE PTR es:[rdi],dx
  4396db:	jae    0x43973c
  4396dd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4396e0:	jo     0x439754
  4396e2:	gs jae 0x439758
  4396e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  4396ec:	pop    rdi
  4396ed:	outs   dx,BYTE PTR ds:[rsi]
  4396ee:	(bad)  
  4396ef:	ins    DWORD PTR es:[rdi],dx
  4396f0:	add    BYTE PTR gs:[rax],al
  4396f3:	add    BYTE PTR [rdi+0x0],bh
  4396f6:	outs   dx,BYTE PTR ds:[esi]
  4396f8:	jne    0x43976e
  4396fa:	ins    BYTE PTR es:[rdi],dx
  4396fb:	jae    0x43975c
  4396fd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  439700:	jo     0x439774
  439702:	gs jae 0x439778
  439705:	imul   ebp,DWORD PTR [rdi+0x6e],0x73696c5f
  43970c:	je     0x43970e
  43970e:	add    BYTE PTR [rax],al
  439710:	(bad)  
  439711:	add    BYTE PTR [rdi+0x6e],ah
  439714:	jne    0x43978a
  439716:	ins    BYTE PTR es:[rdi],dx
  439717:	jae    0x439778
  439719:	movsxd esi,DWORD PTR [rdx+0x65]
  43971c:	fs outs dx,BYTE PTR gs:[rsi]
  43971f:	je     0x43978a
  439721:	(bad)  
  439722:	ins    BYTE PTR es:[rdi],dx
  439723:	jae    0x439784
  439725:	jae    0x43978c
  439727:	je     0x439729
  439729:	add    BYTE PTR [rax],al
  43972b:	add    BYTE PTR [rcx+0x756e6700],dl
  439731:	je     0x43979f
  439733:	jae    0x439794
  439735:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x920074
  43973e:	outs   dx,BYTE PTR ds:[esi]
  439740:	jne    0x4397b6
  439742:	ins    BYTE PTR es:[rdi],dx
  439743:	jae    0x4397a4
  439745:	fs push 0x7465675f
  43974b:	pop    rdi
  43974c:	addr32 jb 0x4397be
  43974f:	jne    0x4397c1
  439751:	add    BYTE PTR [rax],al
  439753:	add    BYTE PTR [rbx+0x756e6700],dl
  439759:	je     0x4397c7
  43975b:	jae    0x4397bc
  43975d:	fs push 0x7465675f
  439763:	pop    rdi
  439764:	jo     0x4397cb
  439766:	gs jb  0x4397dc
  439769:	pop    rdi
  43976a:	jo     0x4397e1
  43976c:	(bad)  
  43976d:	ins    BYTE PTR es:[rdi],dx
  43976e:	imul   esp,DWORD PTR [rbx+0x5f],0x73746962
  439775:	add    BYTE PTR [rax],al
  439777:	add    BYTE PTR [rax+rax*1+0x74756e67],dl
  43977e:	ins    BYTE PTR es:[rdi],dx
  43977f:	jae    0x4397e0
  439781:	fs push 0x7465675f
  439787:	pop    rdi
  439788:	jo     0x4397fc
  43978a:	imul   ebp,DWORD PTR [rbp+0x65],0x7469625f
  439791:	jae    0x439793
  439793:	add    BYTE PTR [rbp+0x756e6700],dl
  439799:	je     0x439807
  43979b:	jae    0x4397fc
  43979d:	fs push 0x7465675f
  4397a3:	pop    rdi
  4397a4:	jo     0x43981b
  4397a6:	(bad)  
  4397a7:	imul   esp,DWORD PTR [rbp+0x79],0x0
  4397ab:	add    BYTE PTR [rsi+0x756e6700],dl
  4397b1:	je     0x43981f
  4397b3:	jae    0x439814
  4397b5:	fs push 0x7465675f
  4397bb:	pop    rdi
  4397bc:	jae    0x439823
  4397be:	movsxd esi,DWORD PTR [rdx+0x65]
  4397c1:	je     0x439822
  4397c3:	(bad)  
  4397c4:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x6e670098
  4397cc:	jne    0x439842
  4397ce:	ins    BYTE PTR es:[rdi],dx
  4397cf:	jae    0x439830
  4397d1:	fs push 0x7261705f
  4397d7:	(bad)  
  4397d8:	ins    DWORD PTR es:[rdi],dx
  4397d9:	jae    0x43983a
  4397db:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  4397e4:	cdq    
  4397e5:	add    BYTE PTR [rdi+0x6e],ah
  4397e8:	jne    0x43985e
  4397ea:	ins    BYTE PTR es:[rdi],dx
  4397eb:	jae    0x43984c
  4397ed:	fs push 0x7261705f
  4397f3:	(bad)  
  4397f4:	ins    DWORD PTR es:[rdi],dx
  4397f5:	jae    0x439856
  4397f7:	gs js  0x43986a
  4397fa:	outs   dx,DWORD PTR ds:[rsi]
  4397fb:	jb     0x439871
  4397fd:	xor    bl,BYTE PTR [rdi+0x70]
  439800:	imul   esp,DWORD PTR [rbx+0x73],0x33
  439804:	add    BYTE PTR [rax],al
  439806:	add    BYTE PTR [rax],al
  439808:	(bad)  
  439809:	add    BYTE PTR [rdi+0x6e],ah
  43980c:	jne    0x439882
  43980e:	ins    BYTE PTR es:[rdi],dx
  43980f:	jae    0x439870
  439811:	fs push 0x7261705f
  439817:	(bad)  
  439818:	ins    DWORD PTR es:[rdi],dx
  439819:	jae    0x43987a
  43981b:	gs js  0x43988e
  43981e:	outs   dx,DWORD PTR ds:[rsi]
  43981f:	jb     0x439895
  439821:	pop    rdi
  439822:	jo     0x43988f
  439824:	movsxd esi,DWORD PTR [rbx+0x33]
  439827:	add    BYTE PTR [rsi+0x756e6700],bl
  43982d:	je     0x43989b
  43982f:	jae    0x439890
  439831:	fs push 0x7261705f
  439837:	(bad)  
  439838:	ins    DWORD PTR es:[rdi],dx
  439839:	jae    0x43989a
  43983b:	imul   ebp,DWORD PTR [rbp+0x70],0x5f74726f
  439842:	jb     0x4398a5
  439844:	ja     0x439846
  439846:	add    BYTE PTR [rax],al
  439848:	movabs al,ds:0x5f736c74756e6700
  439851:	fs push 0x7261705f
  439857:	(bad)  
  439858:	ins    DWORD PTR es:[rdi],dx
  439859:	jae    0x4398ba
  43985b:	imul   ebp,DWORD PTR [rsi+0x69],0xa30074
  439862:	outs   dx,BYTE PTR ds:[esi]
  439864:	jne    0x4398da
  439866:	ins    BYTE PTR es:[rdi],dx
  439867:	jae    0x4398c8
  439869:	imul   esp,DWORD PTR fs:[rdi+0x65],0x675f7473
  439871:	gs je  0x4398d3
  439874:	outs   dx,BYTE PTR ds:[rsi]
  439875:	(bad)  
  439876:	ins    DWORD PTR es:[rdi],dx
  439877:	add    BYTE PTR gs:[rax],al
  43987a:	add    BYTE PTR [rax],al
  43987c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43987d:	add    BYTE PTR [rdi+0x6e],ah
  439880:	jne    0x4398f6
  439882:	ins    BYTE PTR es:[rdi],dx
  439883:	jae    0x4398e4
  439885:	imul   esp,DWORD PTR fs:[rdi+0x65],0x6c5f7473
  43988d:	imul   esi,DWORD PTR [rbx+0x74],0x0
  439894:	scas   eax,DWORD PTR es:[rdi]
  439895:	add    BYTE PTR [rdi+0x6e],ah
  439898:	jne    0x43990e
  43989a:	ins    BYTE PTR es:[rdi],dx
  43989b:	jae    0x4398fc
  43989d:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  4398a1:	movsxd esi,DWORD PTR [rbp+0x72]
  4398a4:	jbe    0x43990b
  4398a6:	pop    rdi
  4398a7:	addr32 gs je 0x4398ab
  4398ab:	add    BYTE PTR [rcx+0x756e6700],dh
  4398b1:	je     0x43991f
  4398b3:	jae    0x439914
  4398b5:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  4398b9:	movsxd esi,DWORD PTR [rbp+0x72]
  4398bc:	jbe    0x439923
  4398be:	pop    rdi
  4398bf:	addr32 gs je 0x439922
  4398c3:	outs   dx,BYTE PTR ds:[rsi]
  4398c4:	(bad)  
  4398c5:	ins    DWORD PTR es:[rdi],dx
  4398c6:	add    BYTE PTR gs:[rbx+0x756e6700],dh
  4398cd:	je     0x43993b
  4398cf:	jae    0x439930
  4398d1:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  4398d5:	movsxd esi,DWORD PTR [rbp+0x72]
  4398d8:	jbe    0x43993f
  4398da:	pop    rdi
  4398db:	addr32 gs je 0x43993e
  4398df:	jae    0x43994a
  4398e1:	jp     0x439948
  4398e3:	add    BYTE PTR [rax+rax*1+0x74756e67],dh
  4398ea:	ins    BYTE PTR es:[rdi],dx
  4398eb:	jae    0x43994c
  4398ed:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  4398f1:	movsxd esi,DWORD PTR [rbp+0x72]
  4398f4:	jbe    0x43995b
  4398f6:	pop    rdi
  4398f7:	ins    BYTE PTR es:[rdi],dx
  4398f8:	imul   esi,DWORD PTR [rbx+0x74],0x6700b500
  4398ff:	outs   dx,BYTE PTR ds:[rsi]
  439900:	jne    0x439976
  439902:	ins    BYTE PTR es:[rdi],dx
  439903:	jae    0x439964
  439905:	gs jb  0x43997a
  439908:	outs   dx,DWORD PTR ds:[rsi]
  439909:	jb     0x43996a
  43990b:	imul   esi,DWORD PTR [rbx+0x5f],0x61746166
  439912:	ins    BYTE PTR es:[rdi],dx
  439913:	add    BYTE PTR [rbp+0x756e6700],bh
  439919:	je     0x439987
  43991b:	jae    0x43997c
  43991d:	data16 jb 0x439985
  439920:	add    BYTE PTR gs:[rax],al
  439923:	add    BYTE PTR [rsi+0x756e6700],bh
  439929:	je     0x439997
  43992b:	jae    0x43998c
  43992d:	ins    BYTE PTR es:[edi],dx
  43992f:	outs   dx,DWORD PTR ds:[rsi]
  439930:	(bad)
  439935:	imul   ebp,DWORD PTR gs:[rsi+0x69],0xbf000074
  43993d:	add    BYTE PTR [rdi+0x6e],ah
  439940:	jne    0x4399b6
  439942:	ins    BYTE PTR es:[rdi],dx
  439943:	jae    0x4399a4
  439945:	ins    BYTE PTR es:[edi],dx
  439947:	outs   dx,DWORD PTR ds:[rsi]
  439948:	(bad)
  43994d:	outs   dx,BYTE PTR ds:[rsi]
  43994e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xc10000
  439956:	outs   dx,BYTE PTR ds:[esi]
  439958:	jne    0x4399ce
  43995a:	ins    BYTE PTR es:[rdi],dx
  43995b:	jae    0x4399bc
  43995d:	ins    BYTE PTR es:[edi],dx
  43995f:	outs   dx,DWORD PTR ds:[rsi]
  439960:	(bad)
  439965:	gs je  0x4399c7
  439968:	ins    BYTE PTR es:[rdi],dx
  439969:	outs   dx,DWORD PTR ds:[rsi]
  43996a:	addr32 pop rdi
  43996c:	data16 jne 0x4399dd
  43996f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  439973:	outs   dx,BYTE PTR ds:[rsi]
  439974:	add    BYTE PTR [rax],al
  439976:	add    BYTE PTR [rax],al
  439978:	ret    0x6700
  43997b:	outs   dx,BYTE PTR ds:[rsi]
  43997c:	jne    0x4399f2
  43997e:	ins    BYTE PTR es:[rdi],dx
  43997f:	jae    0x4399e0
  439981:	ins    BYTE PTR es:[edi],dx
  439983:	outs   dx,DWORD PTR ds:[rsi]
  439984:	(bad)
  439989:	gs je  0x4399eb
  43998c:	ins    BYTE PTR es:[rdi],dx
  43998d:	outs   dx,DWORD PTR ds:[rsi]
  43998e:	addr32 pop rdi
  439990:	ins    BYTE PTR es:[rdi],dx
  439991:	gs jbe 0x4399f9
  439994:	ins    BYTE PTR es:[rdi],dx
  439995:	add    BYTE PTR [rax],al
  439997:	add    dh,al
  439999:	add    BYTE PTR [rdi+0x6e],ah
  43999c:	jne    0x439a12
  43999e:	ins    BYTE PTR es:[rdi],dx
  43999f:	jae    0x439a00
  4399a1:	push   0x73646e61
  4399a6:	push   0x656b61
  4399ab:	add    dh,dl
  4399ad:	add    BYTE PTR [rdi+0x6e],ah
  4399b0:	jne    0x439a26
  4399b2:	ins    BYTE PTR es:[rdi],dx
  4399b3:	jae    0x439a14
  4399b5:	push   0x74726165
  4399ba:	(bad)  
  4399bb:	gs (bad) 
  4399bd:	je     0x439a1e
  4399bf:	(bad)  
  4399c0:	ins    BYTE PTR es:[rdi],dx
  4399c1:	ins    BYTE PTR es:[rdi],dx
  4399c2:	outs   dx,DWORD PTR ds:[rsi]
  4399c3:	ja     0x439a2a
  4399c5:	add    BYTE PTR fs:[rax],al
  4399c8:	xlat   BYTE PTR ds:[rbx]
  4399c9:	add    BYTE PTR [rdi+0x6e],ah
  4399cc:	jne    0x439a42
  4399ce:	ins    BYTE PTR es:[rdi],dx
  4399cf:	jae    0x439a30
  4399d1:	push   0x74726165
  4399d6:	(bad)  
  4399d7:	gs (bad) 
  4399d9:	je     0x439a3a
  4399db:	outs   dx,BYTE PTR gs:[rsi]
  4399dd:	(bad)  
  4399de:	(bad)  
  4399df:	ins    BYTE PTR es:[rdi],dx
  4399e0:	add    BYTE PTR gs:[rax],al
  4399e3:	add    cl,bl
  4399e5:	add    BYTE PTR [rdi+0x6e],ah
  4399e8:	jne    0x439a5e
  4399ea:	ins    BYTE PTR es:[rdi],dx
  4399eb:	jae    0x439a4c
  4399ed:	push   0x74726165
  4399f2:	(bad)  
  4399f3:	gs (bad) 
  4399f5:	je     0x439a56
  4399f7:	jo     0x439a62
  4399f9:	outs   dx,BYTE PTR ds:[rsi]
  4399fa:	addr32 add dl,bl
  4399fd:	add    BYTE PTR [rdi+0x6e],ah
  439a00:	jne    0x439a76
  439a02:	ins    BYTE PTR es:[rdi],dx
  439a03:	jae    0x439a64
  439a05:	push   0x74726165
  439a0a:	(bad)  
  439a0b:	gs (bad) 
  439a0d:	je     0x439a6e
  439a0f:	jo     0x439a80
  439a11:	outs   dx,BYTE PTR ds:[rsi]
  439a12:	addr32 add al,ch
  439a15:	add    BYTE PTR [rdi+0x6e],ah
  439a18:	jne    0x439a8e
  439a1a:	ins    BYTE PTR es:[rdi],dx
  439a1b:	jae    0x439a7c
  439a1d:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  439a24:	(bad)  
  439a25:	add    BYTE PTR [rdi+0x6e],ah
  439a28:	jne    0x439a9e
  439a2a:	ins    BYTE PTR es:[rdi],dx
  439a2b:	jae    0x439a8c
  439a2d:	imul   edi,DWORD PTR [rax+0x5f],0x67
  439a31:	gs je  0x439a34
  439a34:	in     al,dx
  439a35:	add    BYTE PTR [rdi+0x6e],ah
  439a38:	jne    0x439aae
  439a3a:	ins    BYTE PTR es:[rdi],dx
  439a3b:	jae    0x439a9c
  439a3d:	imul   edi,DWORD PTR [rax+0x5f],0x67
  439a41:	gs je  0x439aa3
  439a44:	outs   dx,BYTE PTR ds:[rsi]
  439a45:	(bad)  
  439a46:	ins    DWORD PTR es:[rdi],dx
  439a47:	add    BYTE PTR gs:[rax],al
  439a4a:	add    BYTE PTR [rax],al
  439a4c:	in     eax,dx
  439a4d:	add    BYTE PTR [rdi+0x6e],ah
  439a50:	jne    0x439ac6
  439a52:	ins    BYTE PTR es:[rdi],dx
  439a53:	jae    0x439ab4
  439a55:	imul   edi,DWORD PTR [rax+0x5f],0x6c
  439a59:	imul   esi,DWORD PTR [rbx+0x74],0x0
  439a60:	out    dx,eax
  439a61:	add    BYTE PTR [rdi+0x6e],ah
  439a64:	jne    0x439ada
  439a66:	ins    BYTE PTR es:[rdi],dx
  439a67:	jae    0x439ac8
  439a69:	ins    DWORD PTR es:[rdi],dx
  439a6a:	(bad)  
  439a6b:	movsxd ebx,DWORD PTR [rdi+0x67]
  439a6e:	gs je  0x439a71
  439a71:	add    BYTE PTR [rax],al
  439a73:	add    dl,dh
  439a75:	add    BYTE PTR [rdi+0x6e],ah
  439a78:	jne    0x439aee
  439a7a:	ins    BYTE PTR es:[rdi],dx
  439a7b:	jae    0x439adc
  439a7d:	ins    DWORD PTR es:[rdi],dx
  439a7e:	(bad)  
  439a7f:	movsxd ebx,DWORD PTR [rdi+0x67]
  439a82:	gs je  0x439ae4
  439a85:	outs   dx,BYTE PTR ds:[rsi]
  439a86:	(bad)  
  439a87:	ins    DWORD PTR es:[rdi],dx
  439a88:	add    BYTE PTR gs:[rax],al
  439a8b:	add    ah,dh
  439a8d:	add    BYTE PTR [rdi+0x6e],ah
  439a90:	jne    0x439b06
  439a92:	ins    BYTE PTR es:[rdi],dx
  439a93:	jae    0x439af4
  439a95:	ins    DWORD PTR es:[rdi],dx
  439a96:	(bad)  
  439a97:	movsxd ebx,DWORD PTR [rdi+0x6c]
  439a9a:	imul   esi,DWORD PTR [rbx+0x74],0xf5000000
  439aa1:	add    BYTE PTR [rdi+0x6e],ah
  439aa4:	jne    0x439b1a
  439aa6:	ins    BYTE PTR es:[rdi],dx
  439aa7:	jae    0x439b08
  439aa9:	ins    DWORD PTR es:[rdi],dx
  439aaa:	(bad)  
  439aab:	ins    BYTE PTR es:[rdi],dx
  439aac:	ins    BYTE PTR es:[rdi],dx
  439aad:	outs   dx,DWORD PTR ds:[rsi]
  439aae:	movsxd eax,DWORD PTR [rax]
  439ab0:	sbb    al,BYTE PTR [rcx]
  439ab2:	outs   dx,BYTE PTR ds:[esi]
  439ab4:	jne    0x439b2a
  439ab6:	ins    BYTE PTR es:[rdi],dx
  439ab7:	jae    0x439b18
  439ab9:	outs   dx,DWORD PTR ds:[rsi]
  439aba:	movsxd esi,DWORD PTR [rbx+0x70]
  439abd:	pop    rdi
  439abe:	jae    0x439b34
  439ac0:	(bad)  
  439ac1:	je     0x439b38
  439ac3:	jae    0x439b24
  439ac5:	jb     0x439b2c
  439ac7:	jno    0x439b3e
  439ac9:	gs jae 0x439b40
  439acc:	pop    rdi
  439acd:	outs   dx,BYTE PTR gs:[rsi]
  439acf:	(bad)  
  439ad0:	(bad)  
  439ad1:	ins    BYTE PTR es:[rdi],dx
  439ad2:	gs pop rdi
  439ad4:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  439ad8:	outs   dx,BYTE PTR ds:[rsi]
  439ad9:	je     0x439adb
  439adb:	add    BYTE PTR [rbx],bl
  439add:	add    DWORD PTR [rdi+0x6e],esp
  439ae0:	jne    0x439b56
  439ae2:	ins    BYTE PTR es:[rdi],dx
  439ae3:	jae    0x439b44
  439ae5:	outs   dx,DWORD PTR ds:[rsi]
  439ae6:	movsxd esi,DWORD PTR [rbx+0x70]
  439ae9:	pop    rdi
  439aea:	jae    0x439b60
  439aec:	(bad)  
  439aed:	je     0x439b64
  439aef:	jae    0x439b50
  439af1:	jb     0x439b58
  439af3:	jno    0x439b6a
  439af5:	gs jae 0x439b6c
  439af8:	pop    rdi
  439af9:	addr32 gs je 0x439afd
  439afd:	add    BYTE PTR [rax],al
  439aff:	add    BYTE PTR [rcx+rax*1],bl
  439b02:	outs   dx,BYTE PTR ds:[esi]
  439b04:	jne    0x439b7a
  439b06:	ins    BYTE PTR es:[rdi],dx
  439b07:	jae    0x439b68
  439b09:	outs   dx,DWORD PTR ds:[rsi]
  439b0a:	movsxd esi,DWORD PTR [rbx+0x70]
  439b0d:	pop    rdi
  439b0e:	jae    0x439b84
  439b10:	(bad)  
  439b11:	je     0x439b88
  439b13:	jae    0x439b74
  439b15:	jb     0x439b7c
  439b17:	jno    0x439b8e
  439b19:	gs jae 0x439b90
  439b1c:	pop    rdi
  439b1d:	imul   esi,DWORD PTR [rbx+0x5f],0x63656863
  439b24:	imul   esp,DWORD PTR [rbp+0x64],0x0
  439b28:	and    al,0x1
  439b2a:	outs   dx,BYTE PTR ds:[esi]
  439b2c:	jne    0x439ba2
  439b2e:	ins    BYTE PTR es:[rdi],dx
  439b2f:	jae    0x439b90
  439b31:	outs   dx,DWORD PTR ds:[rsi]
  439b32:	jo     0x439b99
  439b34:	outs   dx,BYTE PTR ds:[rsi]
  439b35:	jo     0x439b9e
  439b37:	jo     0x439b98
  439b39:	movsxd esi,DWORD PTR [rdx+0x74]
  439b3c:	pop    rdi
  439b3d:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x1250074
  439b46:	outs   dx,BYTE PTR ds:[esi]
  439b48:	jne    0x439bbe
  439b4a:	ins    BYTE PTR es:[rdi],dx
  439b4b:	jae    0x439bac
  439b4d:	outs   dx,DWORD PTR ds:[rsi]
  439b4e:	jo     0x439bb5
  439b50:	outs   dx,BYTE PTR ds:[rsi]
  439b51:	jo     0x439bba
  439b53:	jo     0x439bb4
  439b55:	movsxd esi,DWORD PTR [rdx+0x74]
  439b58:	pop    rdi
  439b59:	gs js  0x439bcc
  439b5c:	outs   dx,DWORD PTR ds:[rsi]
  439b5d:	jb     0x439bd3
  439b5f:	add    BYTE PTR [rdi],bh
  439b61:	add    DWORD PTR [rdi+0x6e],esp
  439b64:	jne    0x439bda
  439b66:	ins    BYTE PTR es:[rdi],dx
  439b67:	jae    0x439bc8
  439b69:	outs   dx,DWORD PTR ds:[rsi]
  439b6a:	jo     0x439bd1
  439b6c:	outs   dx,BYTE PTR ds:[rsi]
  439b6d:	jo     0x439bd6
  439b6f:	jo     0x439bd0
  439b71:	movsxd esi,DWORD PTR [rdx+0x74]
  439b74:	pop    rdi
  439b75:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  439b7c:	rex add DWORD PTR [rdi+0x6e],esp
  439b80:	jne    0x439bf6
  439b82:	ins    BYTE PTR es:[rdi],dx
  439b83:	jae    0x439be4
  439b85:	outs   dx,DWORD PTR ds:[rsi]
  439b86:	jo     0x439bed
  439b88:	outs   dx,BYTE PTR ds:[rsi]
  439b89:	jo     0x439bf2
  439b8b:	jo     0x439bec
  439b8d:	movsxd esi,DWORD PTR [rdx+0x74]
  439b90:	pop    rdi
  439b91:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  439b98:	add    DWORD PTR [r15+0x6e],esp
  439b9c:	jne    0x439c12
  439b9e:	ins    BYTE PTR es:[rdi],dx
  439b9f:	jae    0x439c00
  439ba1:	outs   dx,DWORD PTR ds:[rsi]
  439ba2:	jo     0x439c09
  439ba4:	outs   dx,BYTE PTR ds:[rsi]
  439ba5:	jo     0x439c0e
  439ba7:	jo     0x439c08
  439ba9:	movsxd esi,DWORD PTR [rdx+0x74]
  439bac:	pop    rdi
  439bad:	jo     0x439c21
  439baf:	imul   ebp,DWORD PTR [rsi+0x74],0x1740000
  439bb6:	outs   dx,BYTE PTR ds:[esi]
  439bb8:	jne    0x439c2e
  439bba:	ins    BYTE PTR es:[rdi],dx
  439bbb:	jae    0x439c1c
  439bbd:	jo     0x439c24
  439bbf:	ins    DWORD PTR es:[rdi],dx
  439bc0:	pop    rdi
  439bc1:	(bad)  
  439bc3:	jae    0x439c2a
  439bc5:	ss xor al,0x5f
  439bc8:	outs   dx,BYTE PTR gs:[rsi]
  439bca:	movsxd ebp,DWORD PTR [rdi+0x64]
  439bcd:	xor    al,BYTE PTR gs:[rax]
  439bd0:	jbe    0x439bd3
  439bd2:	outs   dx,BYTE PTR ds:[esi]
  439bd4:	jne    0x439c4a
  439bd6:	ins    BYTE PTR es:[rdi],dx
  439bd7:	jae    0x439c38
  439bd9:	jo     0x439c46
  439bdb:	pop    rdi
  439bdc:	(bad)  
  439bdd:	ins    BYTE PTR es:[rdi],dx
  439bde:	outs   dx,DWORD PTR ds:[esi]
  439be0:	jb     0x439c4b
  439be2:	je     0x439c4c
  439be4:	ins    DWORD PTR es:[rdi],dx
  439be5:	pop    rdi
  439be6:	addr32 gs je 0x439c49
  439bea:	outs   dx,BYTE PTR ds:[rsi]
  439beb:	(bad)  
  439bec:	ins    DWORD PTR es:[rdi],dx
  439bed:	add    BYTE PTR gs:[rax],al
  439bf0:	jnp    0x439bf3
  439bf2:	outs   dx,BYTE PTR ds:[esi]
  439bf4:	jne    0x439c6a
  439bf6:	ins    BYTE PTR es:[rdi],dx
  439bf7:	jae    0x439c58
  439bf9:	jo     0x439c66
  439bfb:	pop    rdi
  439bfc:	ins    BYTE PTR es:[rdi],dx
  439bfd:	imul   esi,DWORD PTR [rbx+0x74],0x0
  439c04:	mov    esi,0x756e6701
  439c09:	je     0x439c77
  439c0b:	jae    0x439c6c
  439c0d:	jo     0x439c81
  439c0f:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439c16:	movsxd esp,DWORD PTR [rbp+0x72]
  439c19:	je     0x439c84
  439c1b:	imul   sp,WORD PTR [rbx+0x61],0x6574
  439c21:	pop    rdi
  439c22:	je     0x439c9d
  439c24:	jo     0x439c8b
  439c26:	pop    rdi
  439c27:	ins    BYTE PTR es:[rdi],dx
  439c28:	imul   esi,DWORD PTR [rbx+0x74],0x6701c000
  439c2f:	outs   dx,BYTE PTR ds:[rsi]
  439c30:	jne    0x439ca6
  439c32:	ins    BYTE PTR es:[rdi],dx
  439c33:	jae    0x439c94
  439c35:	jo     0x439ca9
  439c37:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439c3e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  439c41:	jo     0x439cb5
  439c43:	gs jae 0x439cb9
  439c46:	imul   ebp,DWORD PTR [rdi+0x6e],0x73696c5f
  439c4d:	je     0x439c4f
  439c4f:	add    dl,al
  439c51:	add    DWORD PTR [rdi+0x6e],esp
  439c54:	jne    0x439cca
  439c56:	ins    BYTE PTR es:[rdi],dx
  439c57:	jae    0x439cb8
  439c59:	jo     0x439ccd
  439c5b:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439c62:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  439c66:	movsxd esi,DWORD PTR [rbp+0x72]
  439c69:	jbe    0x439cd0
  439c6b:	pop    rdi
  439c6c:	ins    BYTE PTR es:[rdi],dx
  439c6d:	imul   esi,DWORD PTR [rbx+0x74],0x0
  439c74:	ret    
  439c75:	add    DWORD PTR [rdi+0x6e],esp
  439c78:	jne    0x439cee
  439c7a:	ins    BYTE PTR es:[rdi],dx
  439c7b:	jae    0x439cdc
  439c7d:	jo     0x439cf1
  439c7f:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439c86:	addr32 gs je 0x439ce9
  439c8a:	movsxd ebp,DWORD PTR [rcx+0x70]
  439c8d:	push   0x735f7265
  439c92:	jne    0x439cfd
  439c94:	je     0x439cfb
  439c96:	pop    rdi
  439c97:	imul   ebp,DWORD PTR [rsi+0x64],0x7865
  439c9e:	add    BYTE PTR [rax],al
  439ca0:	(bad)
  439ca4:	jne    0x439d1a
  439ca6:	ins    BYTE PTR es:[rdi],dx
  439ca7:	jae    0x439d08
  439ca9:	jo     0x439d1d
  439cab:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439cb2:	imul   ebp,DWORD PTR [rsi+0x69],0xc7000074
  439cb9:	add    DWORD PTR [rdi+0x6e],esp
  439cbc:	jne    0x439d32
  439cbe:	ins    BYTE PTR es:[rdi],dx
  439cbf:	jae    0x439d20
  439cc1:	jo     0x439d35
  439cc3:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439cca:	jo     0x439d3e
  439ccc:	outs   dx,DWORD PTR ds:[rsi]
  439ccd:	je     0x439d3e
  439ccf:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439cd2:	pop    rdi
  439cd3:	ins    BYTE PTR es:[rdi],dx
  439cd4:	imul   esi,DWORD PTR [rbx+0x74],0x6701c900
  439cdb:	outs   dx,BYTE PTR ds:[rsi]
  439cdc:	jne    0x439d52
  439cde:	ins    BYTE PTR es:[rdi],dx
  439cdf:	jae    0x439d40
  439ce1:	jo     0x439d55
  439ce3:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439cea:	jae    0x439d51
  439cec:	je     0x439d4d
  439cee:	imul   esi,DWORD PTR fs:[rdx+0x65],0x7463
  439cf6:	add    BYTE PTR [rax],al
  439cf8:	retf   0x6701
  439cfb:	outs   dx,BYTE PTR ds:[rsi]
  439cfc:	jne    0x439d72
  439cfe:	ins    BYTE PTR es:[rdi],dx
  439cff:	jae    0x439d60
  439d01:	jo     0x439d75
  439d03:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  439d0a:	jae    0x439d75
  439d0c:	outs   dx,BYTE PTR ds:[esi]
  439d0e:	pop    rdi
  439d0f:	ins    BYTE PTR es:[rdi],dx
  439d10:	imul   esi,DWORD PTR [rbx+0x74],0x6701ea00
  439d17:	outs   dx,BYTE PTR ds:[rsi]
  439d18:	jne    0x439d8e
  439d1a:	ins    BYTE PTR es:[rdi],dx
  439d1b:	jae    0x439d7c
  439d1d:	jo     0x439d91
  439d1f:	outs   dx,DWORD PTR ds:[rsi]
  439d20:	je     0x439d91
  439d22:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439d25:	pop    rdi
  439d26:	addr32 gs je 0x439d89
  439d2a:	outs   dx,BYTE PTR ds:[rsi]
  439d2b:	(bad)  
  439d2c:	ins    DWORD PTR es:[rdi],dx
  439d2d:	add    BYTE PTR gs:[rax],al
  439d30:	jmp    0x439d33
  439d32:	outs   dx,BYTE PTR ds:[esi]
  439d34:	jne    0x439daa
  439d36:	ins    BYTE PTR es:[rdi],dx
  439d37:	jae    0x439d98
  439d39:	jo     0x439dad
  439d3b:	outs   dx,DWORD PTR ds:[rsi]
  439d3c:	je     0x439dad
  439d3e:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439d41:	pop    rdi
  439d42:	addr32 gs je 0x439da5
  439d46:	jbe    0x439dad
  439d48:	jb     0x439dbd
  439d4a:	imul   ebp,DWORD PTR [rdi+0x6e],0xec000000
  439d51:	add    DWORD PTR [rdi+0x6e],esp
  439d54:	jne    0x439dca
  439d56:	ins    BYTE PTR es:[rdi],dx
  439d57:	jae    0x439db8
  439d59:	jo     0x439dcd
  439d5b:	outs   dx,DWORD PTR ds:[rsi]
  439d5c:	je     0x439dcd
  439d5e:	movsxd ebp,DWORD PTR [rdi+0x6c]
  439d61:	pop    rdi
  439d62:	ins    BYTE PTR es:[rdi],dx
  439d63:	imul   esi,DWORD PTR [rbx+0x74],0x1ef0000
  439d6a:	outs   dx,BYTE PTR ds:[esi]
  439d6c:	jne    0x439de2
  439d6e:	ins    BYTE PTR es:[rdi],dx
  439d6f:	jae    0x439dd0
  439d71:	jo     0x439de6
  439d73:	imul   ebx,DWORD PTR [rdi+0x63],0x6c
  439d77:	imul   esp,DWORD PTR [rbp+0x6e],0x65675f74
  439d7e:	je     0x439ddf
  439d80:	push   0x746e69
  439d85:	add    BYTE PTR [rax],al
  439d87:	add    dl,dh
  439d89:	add    DWORD PTR [rdi+0x6e],esp
  439d8c:	jne    0x439e02
  439d8e:	ins    BYTE PTR es:[rdi],dx
  439d8f:	jae    0x439df0
  439d91:	jo     0x439e06
  439d93:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  439d97:	jb     0x439e0f
  439d99:	gs jb  0x439dfb
  439d9c:	addr32 gs je 0x439dff
  439da0:	jne    0x439e15
  439da2:	gs jb  0x439e13
  439da5:	(bad)  
  439da6:	ins    DWORD PTR es:[rdi],dx
  439da7:	add    BYTE PTR gs:[rax],al
  439daa:	add    BYTE PTR [rax],al
  439dac:	sub    BYTE PTR [rdx],al
  439dae:	outs   dx,BYTE PTR ds:[esi]
  439db0:	jne    0x439e26
  439db2:	ins    BYTE PTR es:[rdi],dx
  439db3:	jae    0x439e14
  439db5:	jb     0x439e1c
  439db7:	movsxd ebp,DWORD PTR [rdi+0x72]
  439dba:	fs pop rdi
  439dbc:	addr32 gs je 0x439e1f
  439dc0:	ins    DWORD PTR es:[rdi],dx
  439dc1:	(bad)  
  439dc2:	js     0x439e23
  439dc4:	jae    0x439e2f
  439dc6:	jp     0x439e2d
  439dc8:	add    BYTE PTR [rax],al
  439dca:	add    BYTE PTR [rax],al
  439dcc:	sub    eax,DWORD PTR [rdx]
  439dce:	outs   dx,BYTE PTR ds:[esi]
  439dd0:	jne    0x439e46
  439dd2:	ins    BYTE PTR es:[rdi],dx
  439dd3:	jae    0x439e34
  439dd5:	jb     0x439e3c
  439dd7:	movsxd ebp,DWORD PTR [rdi+0x72]
  439dda:	fs pop rdi
  439ddc:	jb     0x439e43
  439dde:	movsxd esi,DWORD PTR [rsi+0x0]
  439de1:	add    BYTE PTR [rax],al
  439de3:	add    BYTE PTR [rsi],ch
  439de5:	add    ah,BYTE PTR [rdi+0x6e]
  439de8:	jne    0x439e5e
  439dea:	ins    BYTE PTR es:[rdi],dx
  439deb:	jae    0x439e4c
  439ded:	jb     0x439e54
  439def:	movsxd ebp,DWORD PTR [rdi+0x72]
  439df2:	fs pop rdi
  439df4:	jae    0x439e5b
  439df6:	outs   dx,BYTE PTR ds:[rsi]
  439df7:	add    BYTE PTR fs:[rax],al
  439dfa:	add    BYTE PTR [rax],al
  439dfc:	(bad)  
  439dfd:	add    ah,BYTE PTR [rdi+0x6e]
  439e00:	jne    0x439e76
  439e02:	ins    BYTE PTR es:[rdi],dx
  439e03:	jae    0x439e64
  439e05:	jb     0x439e6c
  439e07:	movsxd ebp,DWORD PTR [rdi+0x72]
  439e0a:	fs pop rdi
  439e0c:	jae    0x439e73
  439e0e:	outs   dx,BYTE PTR ds:[rsi]
  439e0f:	fs pop rdi
  439e11:	jb     0x439e74
  439e13:	outs   dx,BYTE PTR ds:[rsi]
  439e14:	add    BYTE PTR gs:[eax],al
  439e18:	xor    BYTE PTR [rdx],al
  439e1a:	outs   dx,BYTE PTR ds:[esi]
  439e1c:	jne    0x439e92
  439e1e:	ins    BYTE PTR es:[rdi],dx
  439e1f:	jae    0x439e80
  439e21:	jb     0x439e88
  439e23:	movsxd ebp,DWORD PTR [rdi+0x72]
  439e26:	fs pop rdi
  439e28:	jae    0x439e8f
  439e2a:	je     0x439e8b
  439e2c:	ins    DWORD PTR es:[rdi],dx
  439e2d:	(bad)  
  439e2e:	js     0x439e8f
  439e30:	jae    0x439e9b
  439e32:	jp     0x439e99
  439e34:	add    BYTE PTR [rax],al
  439e36:	add    BYTE PTR [rax],al
  439e38:	xor    al,BYTE PTR [rdx]
  439e3a:	outs   dx,BYTE PTR ds:[esi]
  439e3c:	jne    0x439eb2
  439e3e:	ins    BYTE PTR es:[rdi],dx
  439e3f:	jae    0x439ea0
  439e41:	jb     0x439ea8
  439e43:	movsxd ebp,DWORD PTR [rdi+0x72]
  439e46:	fs pop rdi
  439e48:	jae    0x439eaf
  439e4a:	je     0x439eab
  439e4c:	je     0x439eb7
  439e4e:	ins    DWORD PTR es:[rdi],dx
  439e4f:	outs   dx,DWORD PTR gs:[rsi]
  439e51:	jne    0x439ec7
  439e53:	add    BYTE PTR [rip+0x756e6702],dh        # 0x75b2055b
  439e59:	je     0x439ec7
  439e5b:	jae    0x439ebc
  439e5d:	jb     0x439ec4
  439e5f:	push   0x73646e61
  439e64:	push   0x656b61
  439e69:	add    BYTE PTR [rax],al
  439e6b:	add    BYTE PTR [rax],bh
  439e6d:	add    ah,BYTE PTR [rdi+0x6e]
  439e70:	jne    0x439ee6
  439e72:	ins    BYTE PTR es:[rdi],dx
  439e73:	jae    0x439ed4
  439e75:	jae    0x439ed8
  439e77:	gs pop di
  439e7a:	jb     0x439ee1
  439e7c:	outs   dx,BYTE PTR ds:[rsi]
  439e7d:	outs   dx,DWORD PTR gs:[esi]
  439e80:	je     0x439eeb
  439e82:	(bad)  
  439e83:	je     0x439eee
  439e85:	outs   dx,DWORD PTR ds:[rsi]
  439e86:	outs   dx,BYTE PTR ds:[rsi]
  439e87:	pop    rdi
  439e88:	jae    0x439efe
  439e8a:	(bad)  
  439e8b:	je     0x439f02
  439e8d:	jae    0x439e8f
  439e8f:	add    BYTE PTR [rip+0x756e6702],bh        # 0x75b20597
  439e95:	je     0x439f03
  439e97:	jae    0x439ef8
  439e99:	jae    0x439f00
  439e9b:	jb     0x439f13
  439e9d:	gs jb  0x439eff
  439ea0:	outs   dx,BYTE PTR ds:[rsi]
  439ea1:	(bad)  
  439ea2:	ins    DWORD PTR es:[rdi],dx
  439ea3:	gs pop rdi
  439ea5:	addr32 gs je 0x439ea9
  439ea9:	add    BYTE PTR [rax],al
  439eab:	add    BYTE PTR [rsi],bh
  439ead:	add    ah,BYTE PTR [rdi+0x6e]
  439eb0:	jne    0x439f26
  439eb2:	ins    BYTE PTR es:[rdi],dx
  439eb3:	jae    0x439f14
  439eb5:	jae    0x439f1c
  439eb7:	jb     0x439f2f
  439eb9:	gs jb  0x439f1b
  439ebc:	outs   dx,BYTE PTR ds:[rsi]
  439ebd:	(bad)  
  439ebe:	ins    DWORD PTR es:[rdi],dx
  439ebf:	gs pop rdi
  439ec1:	jae    0x439f28
  439ec3:	je     0x439ec5
  439ec5:	add    BYTE PTR [rax],al
  439ec7:	add    BYTE PTR [rdi],bh
  439ec9:	add    ah,BYTE PTR [rdi+0x6e]
  439ecc:	jne    0x439f42
  439ece:	ins    BYTE PTR es:[rdi],dx
  439ecf:	jae    0x439f30
  439ed1:	jae    0x439f38
  439ed3:	jae    0x439f48
  439ed5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6168635f
  439edc:	outs   dx,BYTE PTR ds:[rsi]
  439edd:	outs   dx,BYTE PTR ds:[rsi]
  439ede:	gs ins BYTE PTR es:[rdi],dx
  439ee0:	pop    rdi
  439ee1:	(bad)  
  439ee2:	imul   ebp,DWORD PTR [rsi+0x64],0x676e69
  439ee9:	add    BYTE PTR [rax],al
  439eeb:	add    BYTE PTR [rcx+0x2],al
  439eee:	outs   dx,BYTE PTR ds:[esi]
  439ef0:	jne    0x439f66
  439ef2:	ins    BYTE PTR es:[rdi],dx
  439ef3:	jae    0x439f54
  439ef5:	jae    0x439f5c
  439ef7:	jae    0x439f6c
  439ef9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d74655f
  439f00:	pop    rdi
  439f01:	jae    0x439f77
  439f03:	(bad)  
  439f04:	je     0x439f7b
  439f06:	jae    0x439f08
  439f08:	rex.X add spl,BYTE PTR [rdi+0x6e]
  439f0c:	jne    0x439f82
  439f0e:	ins    BYTE PTR es:[rdi],dx
  439f0f:	jae    0x439f70
  439f11:	jae    0x439f78
  439f13:	jae    0x439f88
  439f15:	imul   ebp,DWORD PTR [rdi+0x6e],0x7478655f
  439f1c:	pop    rdi
  439f1d:	ins    DWORD PTR es:[rdi],dx
  439f1e:	(bad)  
  439f1f:	jae    0x439f95
  439f21:	gs jb  0x439f83
  439f24:	jae    0x439f8b
  439f26:	movsxd esi,DWORD PTR [rdx+0x65]
  439f29:	je     0x439f8a
  439f2b:	jae    0x439fa1
  439f2d:	(bad)  
  439f2e:	je     0x439fa5
  439f30:	jae    0x439f32
  439f32:	add    BYTE PTR [rax],al
  439f34:	add    r12b,BYTE PTR [rdi+0x6e]
  439f38:	jne    0x439fae
  439f3a:	ins    BYTE PTR es:[rdi],dx
  439f3b:	jae    0x439f9c
  439f3d:	jae    0x439fa4
  439f3f:	jae    0x439fb4
  439f41:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  439f48:	pop    rdi
  439f49:	fs (bad) 
  439f4b:	je     0x439fae
  439f4d:	add    BYTE PTR [rax],al
  439f4f:	add    BYTE PTR [rsi+0x2],al
  439f52:	outs   dx,BYTE PTR ds:[esi]
  439f54:	jne    0x439fca
  439f56:	ins    BYTE PTR es:[rdi],dx
  439f57:	jae    0x439fb8
  439f59:	jae    0x439fc0
  439f5b:	jae    0x439fd0
  439f5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  439f64:	pop    rdi
  439f65:	fs gs jae 0x439fcc
  439f69:	add    BYTE PTR [rax],al
  439f6b:	add    BYTE PTR [rdi+0x2],al
  439f6e:	outs   dx,BYTE PTR ds:[esi]
  439f70:	jne    0x439fe6
  439f72:	ins    BYTE PTR es:[rdi],dx
  439f73:	jae    0x439fd4
  439f75:	jae    0x439fdc
  439f77:	jae    0x439fec
  439f79:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  439f80:	pop    rdi
  439f81:	imul   esp,DWORD PTR [rax+rax*1+0x4c],0x756e6702
  439f89:	je     0x439ff7
  439f8b:	jae    0x439fec
  439f8d:	jae    0x439ff4
  439f8f:	jae    0x43a004
  439f91:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f73695f
  439f98:	jb     0x439fff
  439f9a:	jae    0x43a011
  439f9c:	ins    DWORD PTR es:[rdi],dx
  439f9d:	gs add BYTE PTR fs:[rsi+0x2],cl
  439fa2:	outs   dx,BYTE PTR ds:[esi]
  439fa4:	jne    0x43a01a
  439fa6:	ins    BYTE PTR es:[rdi],dx
  439fa7:	jae    0x43a008
  439fa9:	jae    0x43a010
  439fab:	jae    0x43a020
  439fad:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465735f
  439fb4:	pop    rdi
  439fb5:	fs (bad) 
  439fb7:	je     0x43a01a
  439fb9:	add    BYTE PTR [rax],al
  439fbb:	add    BYTE PTR [rcx+0x2],bl
  439fbe:	outs   dx,BYTE PTR ds:[esi]
  439fc0:	jne    0x43a036
  439fc2:	ins    BYTE PTR es:[rdi],dx
  439fc3:	jae    0x43a024
  439fc5:	jae    0x43a030
  439fc7:	outs   dx,BYTE PTR ds:[esi]
  439fc9:	pop    rdi
  439fca:	(bad)  
  439fcb:	ins    BYTE PTR es:[rdi],dx
  439fcc:	outs   dx,DWORD PTR ds:[esi]
  439fce:	jb     0x43a039
  439fd0:	je     0x43a03a
  439fd2:	ins    DWORD PTR es:[rdi],dx
  439fd3:	pop    rdi
  439fd4:	addr32 gs je 0x439fd8
  439fd8:	pop    rdx
  439fd9:	add    ah,BYTE PTR [rdi+0x6e]
  439fdc:	jne    0x43a052
  439fde:	ins    BYTE PTR es:[rdi],dx
  439fdf:	jae    0x43a040
  439fe1:	jae    0x43a04c
  439fe3:	outs   dx,BYTE PTR ds:[esi]
  439fe5:	pop    rdi
  439fe6:	(bad)  
  439fe7:	ins    BYTE PTR es:[rdi],dx
  439fe8:	outs   dx,DWORD PTR ds:[esi]
  439fea:	jb     0x43a055
  439fec:	je     0x43a056
  439fee:	ins    DWORD PTR es:[rdi],dx
  439fef:	pop    rdi
  439ff0:	addr32 gs je 0x43a053
  439ff4:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  439ff8:	outs   dx,BYTE PTR ds:[rsi]
  439ff9:	je     0x439ffb
  439ffb:	add    BYTE PTR [rsi+0x2],bl
  439ffe:	outs   dx,BYTE PTR ds:[esi]
  43a000:	jne    0x43a076
  43a002:	ins    BYTE PTR es:[rdi],dx
  43a003:	jae    0x43a064
  43a005:	jae    0x43a070
  43a007:	outs   dx,BYTE PTR ds:[esi]
  43a009:	pop    rdi
  43a00a:	addr32 gs je 0x43a06d
  43a00e:	outs   dx,BYTE PTR ds:[rsi]
  43a00f:	(bad)  
  43a010:	ins    DWORD PTR es:[rdi],dx
  43a011:	add    BYTE PTR gs:[rax],al
  43a014:	(bad)
  43a019:	je     0x43a087
  43a01b:	jae    0x43a07c
  43a01d:	jae    0x43a088
  43a01f:	outs   dx,BYTE PTR ds:[esi]
  43a021:	pop    rdi
  43a022:	ins    BYTE PTR es:[rdi],dx
  43a023:	imul   esi,DWORD PTR [rbx+0x74],0x26d0000
  43a02a:	outs   dx,BYTE PTR ds:[esi]
  43a02c:	jne    0x43a0a2
  43a02e:	ins    BYTE PTR es:[rdi],dx
  43a02f:	jae    0x43a090
  43a031:	jae    0x43a0a5
  43a033:	jo     0x43a094
  43a035:	(bad)  
  43a036:	ins    BYTE PTR es:[rdi],dx
  43a037:	ins    BYTE PTR es:[rdi],dx
  43a038:	outs   dx,DWORD PTR ds:[rsi]
  43a039:	movsxd esp,DWORD PTR [rcx+0x74]
  43a03c:	gs pop rdi
  43a03e:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  43a042:	outs   dx,BYTE PTR ds:[rsi]
  43a043:	je     0x43a0a4
  43a045:	movsxd esi,DWORD PTR [rdx+0x65]
  43a048:	fs outs dx,BYTE PTR gs:[rsi]
  43a04b:	je     0x43a0b6
  43a04d:	(bad)  
  43a04e:	ins    BYTE PTR es:[rdi],dx
  43a04f:	jae    0x43a051
  43a051:	add    BYTE PTR [rax],al
  43a053:	add    BYTE PTR [rbx+0x2],dh
  43a056:	outs   dx,BYTE PTR ds:[esi]
  43a058:	jne    0x43a0ce
  43a05a:	ins    BYTE PTR es:[rdi],dx
  43a05b:	jae    0x43a0bc
  43a05d:	jae    0x43a0d1
  43a05f:	jo     0x43a0c0
  43a061:	data16 jb 0x43a0c9
  43a064:	gs pop rdi
  43a066:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  43a06a:	outs   dx,BYTE PTR ds:[rsi]
  43a06b:	je     0x43a0cc
  43a06d:	movsxd esi,DWORD PTR [rdx+0x65]
  43a070:	fs outs dx,BYTE PTR gs:[rsi]
  43a073:	je     0x43a0de
  43a075:	(bad)  
  43a076:	ins    BYTE PTR es:[rdi],dx
  43a077:	jae    0x43a079
  43a079:	add    BYTE PTR [rax],al
  43a07b:	add    BYTE PTR [rbp+0x2],dh
  43a07e:	outs   dx,BYTE PTR ds:[esi]
  43a080:	jne    0x43a0f6
  43a082:	ins    BYTE PTR es:[rdi],dx
  43a083:	jae    0x43a0e4
  43a085:	jae    0x43a0f9
  43a087:	jo     0x43a0e8
  43a089:	jae    0x43a0f0
  43a08b:	jb     0x43a103
  43a08d:	gs jb  0x43a0ef
  43a090:	addr32 gs je 0x43a0f3
  43a094:	jne    0x43a109
  43a096:	gs jb  0x43a107
  43a099:	(bad)  
  43a09a:	ins    DWORD PTR es:[rdi],dx
  43a09b:	add    BYTE PTR gs:[rax],al
  43a09e:	add    BYTE PTR [rax],al
  43a0a0:	add    BYTE PTR [rdx],0x67
  43a0a3:	outs   dx,BYTE PTR ds:[rsi]
  43a0a4:	jne    0x43a11a
  43a0a6:	ins    BYTE PTR es:[rdi],dx
  43a0a7:	jae    0x43a108
  43a0a9:	jae    0x43a11d
  43a0ab:	je     0x43a11d
  43a0ad:	pop    rdi
  43a0ae:	addr32 gs je 0x43a111
  43a0b2:	jo     0x43a126
  43a0b4:	outs   dx,DWORD PTR ds:[rsi]
  43a0b5:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x616e
  43a0bc:	ins    DWORD PTR es:[rdi],dx
  43a0bd:	add    BYTE PTR gs:[rax],al
  43a0c0:	add    DWORD PTR [rdx],0x74756e67
  43a0c6:	ins    BYTE PTR es:[rdi],dx
  43a0c7:	jae    0x43a128
  43a0c9:	jae    0x43a13d
  43a0cb:	je     0x43a13d
  43a0cd:	pop    rdi
  43a0ce:	addr32 gs je 0x43a131
  43a0d2:	jae    0x43a139
  43a0d4:	ins    BYTE PTR es:[rdi],dx
  43a0d5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  43a0da:	pop    rdi
  43a0db:	jo     0x43a14f
  43a0dd:	outs   dx,DWORD PTR ds:[rsi]
  43a0de:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x8800
  43a0e5:	add    ah,BYTE PTR [rdi+0x6e]
  43a0e8:	jne    0x43a15e
  43a0ea:	ins    BYTE PTR es:[rdi],dx
  43a0eb:	jae    0x43a14c
  43a0ed:	jae    0x43a163
  43a0ef:	jb     0x43a156
  43a0f1:	jb     0x43a165
  43a0f3:	outs   dx,DWORD PTR ds:[rsi]
  43a0f4:	jb     0x43a0f6
  43a0f6:	add    BYTE PTR [rax],al
  43a0f8:	movabs ds:0x5f736c74756e6702,eax
  43a101:	je     0x43a175
  43a103:	(bad)  
  43a104:	outs   dx,BYTE PTR ds:[rsi]
  43a105:	jae    0x43a177
  43a107:	outs   dx,DWORD PTR ds:[rsi]
  43a108:	jb     0x43a17e
  43a10a:	pop    rdi
  43a10b:	addr32 gs je 0x43a16e
  43a10f:	jo     0x43a185
  43a111:	jb     0x43a113
  43a113:	add    BYTE PTR [rax+0x756e6702],ch
  43a119:	je     0x43a187
  43a11b:	jae    0x43a17c
  43a11d:	je     0x43a191
  43a11f:	(bad)  
  43a120:	outs   dx,BYTE PTR ds:[rsi]
  43a121:	jae    0x43a193
  43a123:	outs   dx,DWORD PTR ds:[rsi]
  43a124:	jb     0x43a19a
  43a126:	pop    rdi
  43a127:	jae    0x43a18e
  43a129:	je     0x43a18a
  43a12b:	jo     0x43a1a1
  43a12d:	jb     0x43a12f
  43a12f:	add    BYTE PTR [rdx+0x756e6702],ch
  43a135:	je     0x43a1a3
  43a137:	jae    0x43a198
  43a139:	je     0x43a1ad
  43a13b:	(bad)  
  43a13c:	outs   dx,BYTE PTR ds:[rsi]
  43a13d:	jae    0x43a1af
  43a13f:	outs   dx,DWORD PTR ds:[rsi]
  43a140:	jb     0x43a1b6
  43a142:	pop    rdi
  43a143:	jae    0x43a1aa
  43a145:	je     0x43a1a6
  43a147:	jo     0x43a1be
  43a149:	ins    BYTE PTR es:[rdi],dx
  43a14a:	ins    BYTE PTR es:[rdi],dx
  43a14b:	pop    rdi
  43a14c:	data16 jne 0x43a1bd
  43a14f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a153:	outs   dx,BYTE PTR ds:[rsi]
  43a154:	add    BYTE PTR [rax],al
  43a156:	add    BYTE PTR [rax],al
  43a158:	stos   DWORD PTR es:[rdi],eax
  43a159:	add    ah,BYTE PTR [rdi+0x6e]
  43a15c:	jne    0x43a1d2
  43a15e:	ins    BYTE PTR es:[rdi],dx
  43a15f:	jae    0x43a1c0
  43a161:	je     0x43a1d5
  43a163:	(bad)  
  43a164:	outs   dx,BYTE PTR ds:[rsi]
  43a165:	jae    0x43a1d7
  43a167:	outs   dx,DWORD PTR ds:[rsi]
  43a168:	jb     0x43a1de
  43a16a:	pop    rdi
  43a16b:	jae    0x43a1d2
  43a16d:	je     0x43a1ce
  43a16f:	jo     0x43a1e6
  43a171:	ins    BYTE PTR es:[rdi],dx
  43a172:	ins    BYTE PTR es:[rdi],dx
  43a173:	pop    rdi
  43a174:	je     0x43a1df
  43a176:	ins    DWORD PTR es:[rdi],dx
  43a177:	outs   dx,DWORD PTR gs:[rsi]
  43a179:	jne    0x43a1ef
  43a17b:	pop    rdi
  43a17c:	data16 jne 0x43a1ed
  43a17f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a183:	outs   dx,BYTE PTR ds:[rsi]
  43a184:	add    BYTE PTR [rax],al
  43a186:	add    BYTE PTR [rax],al
  43a188:	lods   al,BYTE PTR ds:[rsi]
  43a189:	add    ah,BYTE PTR [rdi+0x6e]
  43a18c:	jne    0x43a202
  43a18e:	ins    BYTE PTR es:[rdi],dx
  43a18f:	jae    0x43a1f0
  43a191:	je     0x43a205
  43a193:	(bad)  
  43a194:	outs   dx,BYTE PTR ds:[rsi]
  43a195:	jae    0x43a207
  43a197:	outs   dx,DWORD PTR ds:[rsi]
  43a198:	jb     0x43a20e
  43a19a:	pop    rdi
  43a19b:	jae    0x43a202
  43a19d:	je     0x43a1fe
  43a19f:	jo     0x43a216
  43a1a1:	jae    0x43a20b
  43a1a3:	pop    rdi
  43a1a4:	data16 jne 0x43a215
  43a1a7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a1ab:	outs   dx,BYTE PTR ds:[rsi]
  43a1ac:	add    BYTE PTR [rax],al
  43a1ae:	add    BYTE PTR [rax],al
  43a1b0:	sbb    al,0x3
  43a1b2:	outs   dx,BYTE PTR ds:[esi]
  43a1b4:	jne    0x43a22a
  43a1b6:	ins    BYTE PTR es:[rdi],dx
  43a1b7:	jae    0x43a218
  43a1b9:	js     0x43a1f0
  43a1bb:	xor    BYTE PTR [rcx],bh
  43a1bd:	pop    rdi
  43a1be:	movsxd esi,DWORD PTR [rdx+0x74]
  43a1c1:	pop    rdi
  43a1c2:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  43a1cb:	add    BYTE PTR [rip+0x756e6703],bl        # 0x75b208d4
  43a1d1:	je     0x43a23f
  43a1d3:	jae    0x43a234
  43a1d5:	js     0x43a20c
  43a1d7:	xor    BYTE PTR [rcx],bh
  43a1d9:	pop    rdi
  43a1da:	movsxd esi,DWORD PTR [rdx+0x74]
  43a1dd:	pop    rdi
  43a1de:	gs js  0x43a251
  43a1e1:	outs   dx,DWORD PTR ds:[rsi]
  43a1e2:	jb     0x43a258
  43a1e4:	add    BYTE PTR [rax],al
  43a1e6:	add    BYTE PTR [rax],al
  43a1e8:	push   rbx
  43a1e9:	add    esp,DWORD PTR [rdi+0x6e]
  43a1ec:	jne    0x43a262
  43a1ee:	ins    BYTE PTR es:[rdi],dx
  43a1ef:	jae    0x43a250
  43a1f1:	js     0x43a228
  43a1f3:	xor    BYTE PTR [rcx],bh
  43a1f5:	pop    rdi
  43a1f6:	movsxd esi,DWORD PTR [rdx+0x74]
  43a1f9:	pop    rdi
  43a1fa:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  43a201:	add    BYTE PTR [rax],al
  43a203:	add    BYTE PTR [rbp+0x3],dl
  43a206:	outs   dx,BYTE PTR ds:[esi]
  43a208:	jne    0x43a27e
  43a20a:	ins    BYTE PTR es:[rdi],dx
  43a20b:	jae    0x43a26c
  43a20d:	js     0x43a244
  43a20f:	xor    BYTE PTR [rcx],bh
  43a211:	pop    rdi
  43a212:	movsxd esi,DWORD PTR [rdx+0x74]
  43a215:	pop    rdi
  43a216:	imul   ebp,DWORD PTR [rsi+0x69],0x57000074
  43a21d:	add    esp,DWORD PTR [rdi+0x6e]
  43a220:	jne    0x43a296
  43a222:	ins    BYTE PTR es:[rdi],dx
  43a223:	jae    0x43a284
  43a225:	js     0x43a25c
  43a227:	xor    BYTE PTR [rcx],bh
  43a229:	pop    rdi
  43a22a:	movsxd esi,DWORD PTR [rdx+0x74]
  43a22d:	pop    rdi
  43a22e:	ins    BYTE PTR es:[rdi],dx
  43a22f:	imul   esi,DWORD PTR [rbx+0x74],0x706d695f
  43a236:	outs   dx,DWORD PTR ds:[rsi]
  43a237:	jb     0x43a2ad
  43a239:	xor    al,BYTE PTR [rax]
  43a23b:	add    BYTE PTR [rcx+0x3],bl
  43a23e:	outs   dx,BYTE PTR ds:[esi]
  43a240:	jne    0x43a2b6
  43a242:	ins    BYTE PTR es:[rdi],dx
  43a243:	jae    0x43a2a4
  43a245:	js     0x43a27c
  43a247:	xor    BYTE PTR [rcx],bh
  43a249:	pop    rdi
  43a24a:	movsxd esi,DWORD PTR [rdx+0x74]
  43a24d:	pop    rdi
  43a24e:	jo     0x43a2c2
  43a250:	imul   ebp,DWORD PTR [rsi+0x74],0x6703d200
  43a257:	outs   dx,BYTE PTR ds:[rsi]
  43a258:	jne    0x43a2ce
  43a25a:	ins    BYTE PTR es:[rdi],dx
  43a25b:	jae    0x43a2bc
  43a25d:	js     0x43a294
  43a25f:	xor    BYTE PTR [rcx],bh
  43a261:	pop    rdi
  43a262:	jb     0x43a2c8
  43a264:	outs   dx,BYTE PTR ds:[rsi]
  43a265:	pop    rdi
  43a266:	addr32 gs je 0x43a26a
  43a26a:	add    BYTE PTR [rax],al
  43a26c:	xchg   BYTE PTR [rax],al
  43a26e:	rex.XB jb 0x43a2d6
  43a271:	(bad)  
  43a272:	je     0x43a2d9
  43a274:	rex.RB jbe 0x43a2dc
  43a277:	outs   dx,BYTE PTR ds:[rsi]
  43a278:	je     0x43a2bb
  43a27a:	add    BYTE PTR [rax],al
  43a27c:	fadd   DWORD PTR [rax]
  43a27e:	rex.R
  43a27f:	gs ins BYTE PTR es:[rdi],dx
  43a281:	gs je  0x43a2e9
  43a284:	rex.XB jb 0x43a2f0
  43a287:	je     0x43a2f2
  43a289:	movsxd esp,DWORD PTR [rcx+0x6c]
  43a28c:	push   rbx
  43a28d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43a292:	outs   dx,BYTE PTR ds:[rsi]
  43a293:	add    al,bh
  43a295:	add    BYTE PTR [rbp+0x6e],al
  43a298:	je     0x43a2ff
  43a29a:	jb     0x43a2df
  43a29c:	jb     0x43a307
  43a29e:	je     0x43a309
  43a2a0:	movsxd esp,DWORD PTR [rcx+0x6c]
  43a2a3:	push   rbx
  43a2a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43a2a9:	outs   dx,BYTE PTR ds:[rsi]
  43a2aa:	add    BYTE PTR [rax],al
  43a2ac:	push   0x1
  43a2ae:	rex.RX outs dx,DWORD PTR ds:[rsi]
  43a2b0:	jb     0x43a31f
  43a2b2:	(bad)  
  43a2b3:	je     0x43a302
  43a2b5:	gs jae 0x43a32b
  43a2b8:	(bad)  
  43a2b9:	addr32 gs push rdi
  43a2bc:	add    BYTE PTR [rax],al
  43a2be:	mov    ecx,0x74654701
  43a2c3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43a2c5:	outs   dx,BYTE PTR ds:[rsi]
  43a2c6:	jae    0x43a337
  43a2c8:	ins    BYTE PTR es:[rdi],dx
  43a2c9:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  43a2cc:	fs add BYTE PTR gs:[rax],al
  43a2d0:	int    0x1
  43a2d2:	rex.RXB
  43a2d3:	gs je  0x43a319
  43a2d6:	jne    0x43a34a
  43a2d8:	jb     0x43a33f
  43a2da:	outs   dx,BYTE PTR ds:[rsi]
  43a2db:	je     0x43a32d
  43a2dd:	jb     0x43a34e
  43a2df:	movsxd esp,DWORD PTR [rbp+0x73]
  43a2e2:	jae    0x43a2e4
  43a2e4:	(bad)  
  43a2e5:	add    DWORD PTR [rdi+0x65],eax
  43a2e8:	je     0x43a32d
  43a2ea:	jne    0x43a35e
  43a2ec:	jb     0x43a353
  43a2ee:	outs   dx,BYTE PTR ds:[rsi]
  43a2ef:	je     0x43a341
  43a2f1:	jb     0x43a362
  43a2f3:	movsxd esp,DWORD PTR [rbp+0x73]
  43a2f6:	jae    0x43a341
  43a2f8:	fs add dl,dl
  43a2fb:	add    DWORD PTR [rdi+0x65],eax
  43a2fe:	je     0x43a343
  43a300:	jne    0x43a374
  43a302:	jb     0x43a369
  43a304:	outs   dx,BYTE PTR ds:[rsi]
  43a305:	je     0x43a35b
  43a307:	push   0x64616572
  43a30c:	rex.WB
  43a30d:	add    BYTE PTR fs:[rax],al
  43a310:	hlt    
  43a311:	add    DWORD PTR [rdi+0x65],eax
  43a314:	je     0x43a35c
  43a316:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  43a31e:	(bad)  
  43a31f:	jne    0x43a395
  43a321:	gs jae 0x43a365
  43a324:	add    BYTE PTR [rax],al
  43a326:	add    al,BYTE PTR [rdx]
  43a328:	rex.RXB
  43a329:	gs je  0x43a372
  43a32c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  43a334:	adc    BYTE PTR [rdx],al
  43a336:	rex.RXB
  43a337:	gs je  0x43a386
  43a33a:	(bad)  
  43a33b:	jae    0x43a3b1
  43a33d:	rex.RB jb 0x43a3b2
  43a340:	outs   dx,DWORD PTR ds:[rsi]
  43a341:	jb     0x43a343
  43a343:	add    BYTE PTR [rbx],ah
  43a345:	add    al,BYTE PTR [rdi+0x65]
  43a348:	je     0x43a397
  43a34a:	outs   dx,DWORD PTR ds:[rsi]
  43a34b:	fs jne 0x43a3ba
  43a34e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  43a358:	add    BYTE PTR [rax],al
  43a35a:	and    al,0x2
  43a35c:	rex.RXB
  43a35d:	gs je  0x43a3ad
  43a360:	outs   dx,DWORD PTR ds:[rsi]
  43a361:	fs jne 0x43a3d0
  43a364:	gs rex.W (bad) 
  43a367:	outs   dx,BYTE PTR ds:[rsi]
  43a368:	fs ins BYTE PTR es:[rdi],dx
  43a36a:	add    BYTE PTR gs:[r8],al
  43a36e:	(bad)  
  43a36f:	add    al,BYTE PTR [rdi+0x65]
  43a372:	je     0x43a3c1
  43a374:	outs   dx,DWORD PTR ds:[rsi]
  43a375:	fs jne 0x43a3e4
  43a378:	gs rex.W (bad) 
  43a37b:	outs   dx,BYTE PTR ds:[rsi]
  43a37c:	fs ins BYTE PTR es:[rdi],dx
  43a37e:	gs push rdi
  43a380:	add    BYTE PTR [rax],al
  43a382:	rex.RX add r8b,BYTE PTR [rdi+0x65]
  43a386:	je     0x43a3d6
  43a388:	jne    0x43a3f7
  43a38a:	(bad)  
  43a38b:	gs jb  0x43a3dd
  43a38e:	rex.XB outs dx,WORD PTR ds:[rsi]
  43a391:	outs   dx,BYTE PTR ds:[rsi]
  43a392:	jae    0x43a403
  43a394:	ins    BYTE PTR es:[rdi],dx
  43a395:	rex.WB outs dx,BYTE PTR gs:[rsi]
  43a398:	jo     0x43a40f
  43a39a:	je     0x43a3e1
  43a39c:	jbe    0x43a403
  43a39e:	outs   dx,BYTE PTR ds:[rsi]
  43a39f:	je     0x43a414
  43a3a1:	add    BYTE PTR [rsi+0x2],dl
  43a3a4:	rex.RXB
  43a3a5:	gs je  0x43a3f8
  43a3a8:	jb     0x43a419
  43a3aa:	movsxd eax,DWORD PTR [rcx+0x64]
  43a3ad:	fs jb  0x43a415
  43a3b0:	jae    0x43a425
  43a3b2:	add    BYTE PTR [rax],al
  43a3b4:	jae    0x43a3b8
  43a3b6:	rex.RXB
  43a3b7:	gs je  0x43a40d
  43a3ba:	je     0x43a41d
  43a3bc:	jb     0x43a432
  43a3be:	jne    0x43a430
  43a3c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43a3c2:	outs   dx,WORD PTR ds:[rsi]
  43a3c4:	add    BYTE PTR [r10+0x74654702],cl
  43a3cb:	push   rbx
  43a3cc:	jns    0x43a441
  43a3ce:	je     0x43a435
  43a3d0:	ins    DWORD PTR es:[rdi],dx
  43a3d1:	push   rsp
  43a3d2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  43a3d9:	ins    BYTE PTR es:[rdi],dx
  43a3da:	gs push rsp
  43a3dc:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  43a3e3:	gs je  0x43a43a
  43a3e6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  43a3ed:	je     0x43a3ef
  43a3ef:	add    cl,bh
  43a3f1:	add    cl,BYTE PTR [rcx+0x6e]
  43a3f4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  43a3fc:	rex.XB jb 0x43a468
  43a3ff:	je     0x43a46a
  43a401:	movsxd esp,DWORD PTR [rcx+0x6c]
  43a404:	push   rbx
  43a405:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43a40a:	outs   dx,BYTE PTR ds:[rsi]
  43a40b:	add    BYTE PTR [rax],dl
  43a40d:	add    ecx,DWORD PTR [rcx+0x73]
  43a410:	rex.R
  43a411:	rex.X
  43a412:	rex.XB push r11
  43a414:	rex.WR
  43a415:	gs (bad) 
  43a417:	fs rex.X jns 0x43a48f
  43a41b:	gs rex.RB js 0x43a41f
  43a41f:	add    BYTE PTR [rbx+0x3],cl
  43a422:	rex.WR
  43a423:	gs (bad) 
  43a425:	jbe    0x43a48c
  43a427:	rex.XB jb 0x43a493
  43a42a:	je     0x43a495
  43a42c:	movsxd esp,DWORD PTR [rcx+0x6c]
  43a42f:	push   rbx
  43a430:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43a435:	outs   dx,BYTE PTR ds:[rsi]
  43a436:	add    BYTE PTR [rax],al
  43a438:	jp     0x43a43d
  43a43a:	rex.WRB jne 0x43a4a9
  43a43d:	je     0x43a4a8
  43a43f:	rex.X jns 0x43a4b6
  43a442:	gs push rsp
  43a444:	outs   dx,DWORD PTR ds:[rsi]
  43a445:	push   rdi
  43a446:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  43a44e:	lahf   
  43a44f:	add    edx,DWORD PTR [rax+0x65]
  43a452:	imul   eax,DWORD PTR gs:[rbx+0x6f],0x6e
  43a457:	jae    0x43a4c8
  43a459:	ins    BYTE PTR es:[rdi],dx
  43a45a:	rex.WB outs dx,BYTE PTR gs:[rsi]
  43a45d:	jo     0x43a4d4
  43a45f:	je     0x43a4a2
  43a461:	add    BYTE PTR [rcx+0x65655003],ah
  43a467:	imul   ecx,DWORD PTR [rsi+0x61],0x6d
  43a46b:	gs fs push rax
  43a46e:	imul   esi,DWORD PTR [rax+0x65],0x5103bb00
  43a475:	jne    0x43a4dc
  43a477:	jb     0x43a4f2
  43a479:	push   rax
  43a47a:	gs jb  0x43a4e3
  43a47d:	outs   dx,DWORD PTR ds:[rsi]
  43a47e:	jb     0x43a4ed
  43a480:	(bad)  
  43a481:	outs   dx,BYTE PTR ds:[rsi]
  43a482:	movsxd esp,DWORD PTR [rbp+0x43]
  43a485:	outs   dx,DWORD PTR ds:[rsi]
  43a486:	jne    0x43a4f6
  43a488:	je     0x43a4ef
  43a48a:	jb     0x43a48c
  43a48c:	add    DWORD PTR [rdx+rdx*2],eax
  43a48f:	je     0x43a4fd
  43a491:	rex.B
  43a492:	fs fs rex.RX jne 0x43a505
  43a497:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a49b:	outs   dx,BYTE PTR ds:[rsi]
  43a49c:	push   rsp
  43a49d:	(bad)  
  43a49e:	(bad)  
  43a49f:	ins    BYTE PTR es:[rdi],dx
  43a4a0:	add    BYTE PTR gs:[rdx],al
  43a4a3:	add    al,0x52
  43a4a5:	je     0x43a513
  43a4a7:	rex.XB (bad) 
  43a4a9:	jo     0x43a51f
  43a4ab:	jne    0x43a51f
  43a4ad:	rex.XB outs dx,DWORD PTR gs:[rsi]
  43a4b0:	outs   dx,BYTE PTR ds:[rsi]
  43a4b1:	je     0x43a518
  43a4b3:	js     0x43a529
  43a4b5:	add    BYTE PTR [rcx],cl
  43a4b7:	add    al,0x52
  43a4b9:	je     0x43a527
  43a4bb:	rex.WR outs dx,DWORD PTR ds:[rsi]
  43a4bd:	outs   dx,DWORD PTR ds:[rsi]
  43a4be:	imul   esi,DWORD PTR [rbp+0x70],0x46
  43a4c2:	jne    0x43a532
  43a4c4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43a4c8:	outs   dx,BYTE PTR ds:[rsi]
  43a4c9:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43a4cb:	je     0x43a53f
  43a4cd:	jns    0x43a4cf
  43a4cf:	add    BYTE PTR [rax],dl
  43a4d1:	add    al,0x52
  43a4d3:	je     0x43a541
  43a4d5:	push   rsi
  43a4d6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  43a4dd:	outs   dx,BYTE PTR ds:[rsi]
  43a4de:	ja     0x43a549
  43a4e0:	outs   dx,BYTE PTR ds:[rsi]
  43a4e1:	add    BYTE PTR fs:[rax],al
  43a4e4:	lahf   
  43a4e5:	add    al,0x53
  43a4e7:	gs je  0x43a53f
  43a4ea:	outs   dx,BYTE PTR ds:[rsi]
  43a4eb:	push   0x6c646e61
  43a4f0:	gs fs rex.RB js 0x43a558
  43a4f5:	gs jo  0x43a56c
  43a4f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  43a4ff:	gs jb  0x43a502
  43a502:	lods   al,BYTE PTR ds:[rsi]
  43a503:	add    al,0x53
  43a505:	ins    BYTE PTR es:[rdi],dx
  43a506:	gs gs jo 0x43a50a
  43a50a:	scas   eax,DWORD PTR es:[rdi]
  43a50b:	add    al,0x53
  43a50d:	ins    BYTE PTR es:[rdi],dx
  43a50e:	gs gs jo 0x43a557
  43a512:	js     0x43a514
  43a514:	mov    edx,0x72655404
  43a519:	ins    DWORD PTR es:[rdi],dx
  43a51a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  43a521:	outs   dx,DWORD PTR ds:[rsi]
  43a522:	movsxd esp,DWORD PTR [rbp+0x73]
  43a525:	jae    0x43a527
  43a527:	add    cl,al
  43a529:	add    al,0x54
  43a52b:	ins    BYTE PTR es:[rdi],dx
  43a52c:	jae    0x43a575
  43a52e:	gs je  0x43a587
  43a531:	(bad)  
  43a532:	ins    BYTE PTR es:[rdi],dx
  43a533:	jne    0x43a59a
  43a535:	add    dh,cl
  43a537:	add    al,0x55
  43a539:	outs   dx,BYTE PTR ds:[rsi]
  43a53a:	push   0x6c646e61
  43a53f:	gs fs rex.RB js 0x43a5a7
  43a544:	gs jo  0x43a5bb
  43a547:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  43a54e:	gs jb  0x43a551
  43a551:	add    ah,ch
  43a553:	add    al,0x56
  43a555:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  43a55c:	jb     0x43a5cd
  43a55e:	je     0x43a5c5
  43a560:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  43a564:	out    dx,al
  43a565:	add    al,0x56
  43a567:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  43a56e:	jne    0x43a5d5
  43a570:	jb     0x43a5eb
  43a572:	add    BYTE PTR [rax],al
  43a574:	test   BYTE PTR [rdi+rdx*2],0x61
  43a578:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  43a580:	ins    BYTE PTR es:[edi],dx
  43a582:	gs rex.WRXB (bad) 
  43a585:	push   0x65
  43a587:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  43a58b:	add    eax,0x65646957
  43a590:	rex.XB push 0x6f547261
  43a596:	rex.WRB jne 0x43a605
  43a599:	je     0x43a604
  43a59b:	rex.X jns 0x43a612
  43a59e:	add    BYTE PTR gs:[rdi],dh
  43a5a1:	add    BYTE PTR [rdi+0x5f],bl
  43a5a4:	rex.XB pop r15
  43a5a6:	jae    0x43a618
  43a5a8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  43a5ac:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  43a5b3:	ins    BYTE PTR es:[rdi],dx
  43a5b4:	gs jb  0x43a5b7
  43a5b7:	add    BYTE PTR [rdi],bh
  43a5b9:	add    BYTE PTR [rdi+0x5f],bl
  43a5bc:	pop    rdi
  43a5bd:	ins    BYTE PTR es:[rdi],dx
  43a5be:	movsxd ebx,DWORD PTR [rdi+0x63]
  43a5c1:	outs   dx,DWORD PTR ds:[rsi]
  43a5c2:	fs gs jo 0x43a627
  43a5c6:	addr32 gs pop rdi
  43a5c9:	data16 jne 0x43a63a
  43a5cc:	movsxd eax,DWORD PTR [rax]
  43a5ce:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  43a5d2:	fs ins BYTE PTR es:[rdi],dx
  43a5d4:	ins    BYTE PTR es:[rdi],dx
  43a5d5:	outs   dx,DWORD PTR ds:[rsi]
  43a5d6:	outs   dx,BYTE PTR ds:[rsi]
  43a5d7:	gs js  0x43a643
  43a5da:	je     0x43a5dc
  43a5dc:	push   rcx
  43a5dd:	add    BYTE PTR [rdi+0x5f],bl
  43a5e0:	addr32 gs je 0x43a651
  43a5e4:	(bad)  
  43a5e5:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  43a5ec:	push   rdx
  43a5ed:	add    BYTE PTR [rdi+0x5f],bl
  43a5f0:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  43a5f7:	add    BYTE PTR [rbx+0x0],dl
  43a5fa:	pop    rdi
  43a5fb:	pop    rdi
  43a5fc:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  43a603:	movsxd eax,DWORD PTR [rax]
  43a605:	add    BYTE PTR [rdx+0x0],bl
  43a608:	pop    rdi
  43a609:	pop    rdi
  43a60a:	ins    BYTE PTR es:[rdi],dx
  43a60b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43a60e:	jbe    0x43a66f
  43a610:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  43a617:	add    BYTE PTR [rdi+0x5f],bl
  43a61a:	ins    DWORD PTR es:[rdi],dx
  43a61b:	(bad)  
  43a61c:	pop    rdi
  43a61d:	movsxd esi,DWORD PTR [rbp+0x72]
  43a620:	pop    rdi
  43a621:	ins    DWORD PTR es:[rdi],dx
  43a622:	(bad)  
  43a623:	js     0x43a625
  43a625:	add    BYTE PTR [rax+0x0],ah
  43a628:	pop    rdi
  43a629:	pop    rdi
  43a62a:	jae    0x43a691
  43a62c:	je     0x43a68d
  43a62e:	(bad)  
  43a62f:	jo     0x43a6a1
  43a631:	pop    rdi
  43a632:	je     0x43a6ad
  43a634:	jo     0x43a69b
  43a636:	add    BYTE PTR [rax],al
  43a638:	(bad)  
  43a639:	add    BYTE PTR [rdi+0x5f],bl
  43a63c:	jae    0x43a6a3
  43a63e:	je     0x43a6b5
  43a640:	jae    0x43a6a7
  43a642:	jb     0x43a6b1
  43a644:	(bad)  
  43a645:	je     0x43a6af
  43a647:	gs jb  0x43a6bc
  43a64a:	add    BYTE PTR [rax],al
  43a64c:	jno    0x43a64e
  43a64e:	pop    rdi
  43a64f:	(bad)  
  43a650:	movsxd ebp,DWORD PTR [rbp+0x64]
  43a653:	ins    BYTE PTR es:[rdi],dx
  43a654:	outs   dx,BYTE PTR ds:[rsi]
  43a655:	add    BYTE PTR [rax+0x0],bh
  43a658:	pop    rdi
  43a659:	(bad)  
  43a65a:	ins    DWORD PTR es:[rdi],dx
  43a65b:	jae    0x43a6c4
  43a65d:	pop    rdi
  43a65e:	gs js  0x43a6ca
  43a661:	je     0x43a663
  43a663:	add    BYTE PTR [rdx+0x65635f00],cl
  43a669:	js     0x43a6d4
  43a66b:	je     0x43a66d
  43a66d:	add    BYTE PTR [rax+rax*1+0x6f6c635f],dl
  43a674:	jae    0x43a6db
  43a676:	add    BYTE PTR [rax],al
  43a678:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43a679:	add    BYTE PTR [rdi+0x63],bl
  43a67c:	je     0x43a6e7
  43a67e:	ins    DWORD PTR es:[rdi],dx
  43a67f:	gs ss xor al,0x0
  43a683:	add    BYTE PTR [rdx+0x72655f00],bh
  43a689:	jb     0x43a6f9
  43a68b:	outs   dx,DWORD PTR ds:[rsi]
  43a68c:	add    BYTE PTR [rax],al
  43a68e:	ret    
  43a68f:	add    BYTE PTR [rdi+0x65],bl
  43a692:	js     0x43a6fd
  43a694:	je     0x43a696
  43a696:	rol    BYTE PTR [rax],1
  43a698:	pop    rdi
  43a699:	imul   bp,WORD PTR [rsi+0x64],0x6c63
  43a69f:	outs   dx,DWORD PTR ds:[rsi]
  43a6a0:	jae    0x43a707
  43a6a2:	add    BYTE PTR [rax],al
  43a6a4:	rol    BYTE PTR [rax],cl
  43a6a6:	pop    rdi
  43a6a7:	imul   bp,WORD PTR [rsi+0x64],0x6966
  43a6ad:	jb     0x43a722
  43a6af:	je     0x43a6e7
  43a6b1:	xor    al,0x0
  43a6b3:	add    dl,bl
  43a6b5:	add    BYTE PTR [rdi+0x66],bl
  43a6b8:	ins    DWORD PTR es:[rdi],dx
  43a6b9:	outs   dx,DWORD PTR ds:[rsi]
  43a6ba:	fs add BYTE PTR gs:[rax],al
  43a6be:	call   0x73aa05c3
  43a6c3:	je     0x43a726
  43a6c5:	je     0x43a6fd
  43a6c7:	xor    al,0x0
  43a6c9:	add    dh,ch
  43a6cb:	add    BYTE PTR [rdi+0x66],bl
  43a6ce:	jne    0x43a73c
  43a6d0:	ins    BYTE PTR es:[rdi],dx
  43a6d1:	jo     0x43a734
  43a6d3:	je     0x43a73d
  43a6d5:	add    dl,bh
  43a6d7:	add    BYTE PTR [rdi+0x67],bl
  43a6da:	gs je  0x43a73c
  43a6dd:	outs   dx,DWORD PTR ds:[rsi]
  43a6de:	jae    0x43a746
  43a6e0:	push   0x6c646e61
  43a6e5:	add    BYTE PTR gs:[rax],al
  43a6e8:	cld    
  43a6e9:	add    BYTE PTR [rdi+0x67],bl
  43a6ec:	gs je  0x43a752
  43a6ef:	push   0x11a0000
  43a6f4:	pop    rdi
  43a6f5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  43a6fc:	ins    DWORD PTR es:[rdi],dx
  43a6fd:	add    BYTE PTR [rdi+0x1],bh
  43a700:	pop    rdi
  43a701:	ins    BYTE PTR es:[rdi],dx
  43a702:	outs   dx,DWORD PTR ds:[rsi]
  43a703:	movsxd esp,DWORD PTR [rcx+0x6c]
  43a706:	je     0x43a771
  43a708:	ins    DWORD PTR es:[rdi],dx
  43a709:	gs ss xor al,0x0
  43a70d:	add    BYTE PTR [rax+0x6f6c5f01],al
  43a713:	movsxd ebp,DWORD PTR [rbx+0x0]
  43a716:	mov    DWORD PTR [rcx],eax
  43a718:	pop    rdi
  43a719:	ins    BYTE PTR es:[rdi],dx
  43a71a:	jae    0x43a781
  43a71c:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  43a721:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eb30629
  43a727:	gs js  0x43a793
  43a72a:	je     0x43a72c
  43a72c:	(bad)  
  43a72d:	add    bl,BYTE PTR [rdi+0x6f]
  43a730:	jo     0x43a797
  43a732:	outs   dx,BYTE PTR ds:[rsi]
  43a733:	pop    rdi
  43a734:	outs   dx,DWORD PTR ds:[rsi]
  43a735:	jae    0x43a79d
  43a737:	push   0x6c646e61
  43a73c:	add    BYTE PTR gs:[rbx+0x2],ah
  43a740:	pop    rdi
  43a741:	jae    0x43a7b1
  43a743:	ja     0x43a7b5
  43a745:	jb     0x43a7b0
  43a747:	outs   dx,BYTE PTR ds:[rsi]
  43a748:	je     0x43a7b0
  43a74a:	add    BYTE PTR [rax],al
  43a74c:	add    DWORD PTR [rdx],0x5f
  43a74f:	jae    0x43a7c5
  43a751:	jb     0x43a7bc
  43a753:	movsxd ebp,DWORD PTR [rbp+0x70]
  43a756:	add    BYTE PTR [rax],al
  43a758:	scas   eax,DWORD PTR es:[rdi]
  43a759:	add    bl,BYTE PTR [rdi+0x74]
  43a75c:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  43a763:	add    bl,BYTE PTR [rdi+0x75]
  43a766:	outs   dx,BYTE PTR ds:[rsi]
  43a767:	ins    BYTE PTR es:[rdi],dx
  43a768:	outs   dx,DWORD PTR ds:[rsi]
  43a769:	movsxd ebp,DWORD PTR [rbx+0x0]
  43a76c:	jg     0x43a771
  43a76e:	(bad)  
  43a76f:	(bad)  
  43a770:	outs   dx,DWORD PTR ds:[rsi]
  43a771:	jb     0x43a7e7
  43a773:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  43a77a:	add    BYTE PTR [rax],al
  43a77c:	nop
  43a77d:	add    esp,DWORD PTR [rbx+0x61]
  43a780:	ins    BYTE PTR es:[rdi],dx
  43a781:	ins    BYTE PTR es:[rdi],dx
  43a782:	outs   dx,DWORD PTR ds:[rsi]
  43a783:	movsxd eax,DWORD PTR [rax]
  43a785:	add    BYTE PTR [rbp+0x6f6c6303],dl
  43a78b:	movsxd ebp,DWORD PTR [rbx+0x0]
  43a78e:	popf   
  43a78f:	add    esp,DWORD PTR [rbp+0x78]
  43a792:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x636603a1
  43a79a:	ins    BYTE PTR es:[rdi],dx
  43a79b:	outs   dx,DWORD PTR ds:[rsi]
  43a79c:	jae    0x43a803
  43a79e:	add    BYTE PTR [rax],al
  43a7a0:	movabs ds:0x726f7272656603,eax
  43a7a9:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  43a7b0:	jae    0x43a81a
  43a7b2:	add    BYTE PTR [rax],al
  43a7b4:	scas   al,BYTE PTR es:[rdi]
  43a7b5:	add    esp,DWORD PTR [rsi+0x6f]
  43a7b8:	jo     0x43a81f
  43a7ba:	outs   dx,BYTE PTR ds:[rsi]
  43a7bb:	add    BYTE PTR [rax+0x72706603],dh
  43a7c1:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  43a7c8:	data16 jo 0x43a840
  43a7cb:	je     0x43a830
  43a7cd:	add    BYTE PTR [rbx+0x75706603],dh
  43a7d3:	je     0x43a848
  43a7d5:	add    BYTE PTR [rsi+0x65726603],dh
  43a7db:	(bad)  
  43a7dc:	add    BYTE PTR fs:[rdi+0x65726603],dh
  43a7e3:	add    BYTE PTR gs:[rax],al
  43a7e6:	mov    eax,0x65726603
  43a7eb:	outs   dx,DWORD PTR ds:[rsi]
  43a7ec:	jo     0x43a853
  43a7ee:	outs   dx,BYTE PTR ds:[rsi]
  43a7ef:	add    al,al
  43a7f1:	add    esp,DWORD PTR [rsi+0x77]
  43a7f4:	jo     0x43a868
  43a7f6:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  43a7fd:	add    esp,DWORD PTR [rsi+0x77]
  43a800:	jb     0x43a86b
  43a802:	je     0x43a869
  43a804:	add    BYTE PTR [rax],al
  43a806:	mov    DWORD PTR [rbx],0x65746567
  43a80c:	outs   dx,BYTE PTR ds:[rsi]
  43a80d:	jbe    0x43a80f
  43a80f:	add    bh,dl
  43a811:	add    ebp,DWORD PTR [rcx+0x73]
  43a814:	jae    0x43a886
  43a816:	(bad)  
  43a817:	movsxd esp,DWORD PTR [rbp+0x0]
  43a81a:	(bad)  
  43a81b:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  43a81f:	(bad)  
  43a820:	ins    BYTE PTR es:[rdi],dx
  43a821:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  43a825:	jbe    0x43a827
  43a827:	add    al,dh
  43a829:	add    ebp,DWORD PTR [rbp+0x61]
  43a82c:	ins    BYTE PTR es:[rdi],dx
  43a82d:	ins    BYTE PTR es:[rdi],dx
  43a82e:	outs   dx,DWORD PTR ds:[rsi]
  43a82f:	movsxd eax,DWORD PTR [rax]
  43a831:	add    bh,dh
  43a833:	add    ebp,DWORD PTR [rbp+0x65]
  43a836:	ins    DWORD PTR es:[rdi],dx
  43a837:	movsxd ebp,DWORD PTR [rbp+0x70]
  43a83a:	add    BYTE PTR [rax],al
  43a83c:	clc    
  43a83d:	add    ebp,DWORD PTR [rbp+0x65]
  43a840:	ins    DWORD PTR es:[rdi],dx
  43a841:	movsxd esi,DWORD PTR [rax+0x79]
  43a844:	add    BYTE PTR [rax],al
  43a846:	stc    
  43a847:	add    ebp,DWORD PTR [rbp+0x65]
  43a84a:	ins    DWORD PTR es:[rdi],dx
  43a84b:	ins    DWORD PTR es:[rdi],dx
  43a84c:	outs   dx,DWORD PTR ds:[rsi]
  43a84d:	jbe    0x43a8b4
  43a84f:	add    dl,bh
  43a851:	add    ebp,DWORD PTR [rbp+0x65]
  43a854:	ins    DWORD PTR es:[rdi],dx
  43a855:	jae    0x43a8bc
  43a857:	je     0x43a859
  43a859:	add    dh,bh
  43a85b:	add    esi,DWORD PTR [rax+0x65]
  43a85e:	jb     0x43a8d2
  43a860:	outs   dx,DWORD PTR ds:[rsi]
  43a861:	jb     0x43a863
  43a863:	add    BYTE PTR [rbx],al
  43a865:	add    al,0x70
  43a867:	jne    0x43a8dd
  43a869:	movsxd eax,DWORD PTR [rax]
  43a86b:	add    BYTE PTR [rdx],cl
  43a86d:	add    al,0x72
  43a86f:	(bad)  
  43a870:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  43a877:	gs (bad) 
  43a879:	ins    BYTE PTR es:[rdi],dx
  43a87a:	ins    BYTE PTR es:[rdi],dx
  43a87b:	outs   dx,DWORD PTR ds:[rsi]
  43a87c:	movsxd eax,DWORD PTR [rax]
  43a87e:	or     eax,0x6d657204
  43a883:	outs   dx,DWORD PTR ds:[rsi]
  43a884:	jbe    0x43a8eb
  43a886:	add    BYTE PTR [rax],al
  43a888:	(bad)  
  43a889:	add    al,0x73
  43a88b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  43a892:	and    eax,DWORD PTR [rbx+rsi*2]
  43a895:	je     0x43a909
  43a897:	movsxd ebp,DWORD PTR [rax+0x72]
  43a89a:	add    BYTE PTR [rax],al
  43a89c:	and    al,0x4
  43a89e:	jae    0x43a914
  43a8a0:	jb     0x43a905
  43a8a2:	ins    DWORD PTR es:[rdi],dx
  43a8a3:	jo     0x43a8a5
  43a8a5:	add    BYTE PTR [rsi],ah
  43a8a7:	add    al,0x73
  43a8a9:	je     0x43a91d
  43a8ab:	movsxd esi,DWORD PTR [rax+0x79]
  43a8ae:	add    BYTE PTR [rax],al
  43a8b0:	sub    DWORD PTR [rbx+rsi*2],eax
  43a8b3:	je     0x43a927
  43a8b5:	gs jb  0x43a92a
  43a8b8:	outs   dx,DWORD PTR ds:[rsi]
  43a8b9:	jb     0x43a8bb
  43a8bb:	add    BYTE PTR [rdx],ch
  43a8bd:	add    al,0x73
  43a8bf:	je     0x43a933
  43a8c1:	data16 je 0x43a92d
  43a8c4:	ins    DWORD PTR es:[rdi],dx
  43a8c5:	add    BYTE PTR gs:[rax],al
  43a8c8:	sub    eax,DWORD PTR [rbx+rsi*2]
  43a8cb:	je     0x43a93f
  43a8cd:	ins    BYTE PTR es:[rdi],dx
  43a8ce:	outs   dx,BYTE PTR gs:[rsi]
  43a8d0:	add    BYTE PTR [rax],al
  43a8d2:	cs add al,0x73
  43a8d5:	je     0x43a949
  43a8d7:	outs   dx,BYTE PTR ds:[rsi]
  43a8d8:	movsxd ebp,DWORD PTR [rbp+0x70]
  43a8db:	add    BYTE PTR [rdi],ch
  43a8dd:	add    al,0x73
  43a8df:	je     0x43a953
  43a8e1:	outs   dx,BYTE PTR ds:[rsi]
  43a8e2:	movsxd esi,DWORD PTR [rax+0x79]
  43a8e5:	add    BYTE PTR [rcx],dh
  43a8e7:	add    al,0x73
  43a8e9:	je     0x43a95d
  43a8eb:	jo     0x43a94f
  43a8ed:	jb     0x43a95a
  43a8ef:	add    BYTE PTR [rdx],dh
  43a8f1:	add    al,0x73
  43a8f3:	je     0x43a967
  43a8f5:	jb     0x43a95a
  43a8f7:	push   0x4340072
  43a8fc:	jae    0x43a972
  43a8fe:	jb     0x43a973
  43a900:	je     0x43a974
  43a902:	add    BYTE PTR [rax],al
  43a904:	cmp    BYTE PTR [rbx+rsi*2],al
  43a907:	je     0x43a97b
  43a909:	je     0x43a97a
  43a90b:	ins    BYTE PTR es:[rdi],dx
  43a90c:	add    BYTE PTR [rax],al
  43a90e:	cmp    DWORD PTR [rbx+rsi*2],eax
  43a911:	je     0x43a985
  43a913:	je     0x43a984
  43a915:	jne    0x43a983
  43a917:	add    BYTE PTR [rax+0x4],cl
  43a91a:	je     0x43a98b
  43a91c:	ins    BYTE PTR es:[rdi],dx
  43a91d:	outs   dx,DWORD PTR ds:[rsi]
  43a91e:	ja     0x43a985
  43a920:	jb     0x43a922
  43a922:	rex.WB add al,0x74
  43a925:	outs   dx,DWORD PTR ds:[rsi]
  43a926:	jne    0x43a998
  43a928:	jo     0x43a98f
  43a92a:	jb     0x43a92c
  43a92c:	rex.WRX add al,0x76
  43a92f:	data16 jo 0x43a9a4
  43a932:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  43a939:	add    al,0x77
  43a93b:	movsxd esi,DWORD PTR [rbx+0x63]
  43a93e:	jo     0x43a9b9
  43a940:	add    BYTE PTR [rax],al
  43a942:	(bad)  
  43a943:	add    al,0x77
  43a945:	movsxd esi,DWORD PTR [rbx+0x6c]
  43a948:	outs   dx,BYTE PTR gs:[rsi]
  43a94a:	add    BYTE PTR [rax],al
  43a94c:	jno    0x43a952
  43a94e:	ja     0x43a9b3
  43a950:	jae    0x43a9c6
  43a952:	outs   dx,DWORD PTR ds:[rsi]
  43a953:	ins    DWORD PTR es:[rdi],dx
  43a954:	(bad)  
  43a956:	add    BYTE PTR [rax],al
  43a958:	mov    DWORD PTR [rdi+rbx*2],eax
  43a95b:	jae    0x43a9d1
  43a95d:	(bad)  
  43a95e:	je     0x43a996
  43a960:	xor    al,0x0
  43a962:	pop    QWORD PTR [rdi+rbx*2]
  43a965:	imul   bp,WORD PTR [rsi+0x64],0x656e
  43a96b:	js     0x43a9e1
  43a96d:	ss xor al,0x0
  43a970:	movabs ds:0x65746972775f04,eax
  43a979:	add    BYTE PTR [rdi+0x6e755f04],ch
  43a97f:	ins    BYTE PTR es:[rdi],dx
  43a980:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04be00
  43a987:	jae    0x43a9fd
  43a989:	jb     0x43a9ef
  43a98b:	jne    0x43a9fd
  43a98d:	add    ch,cl
  43a98f:	add    al,0x5f
  43a991:	jb     0x43a9f8
  43a993:	(bad)  
  43a994:	fs add bl,dl
  43a997:	add    al,0x5f
  43a999:	outs   dx,DWORD PTR ds:[rsi]
  43a99a:	jo     0x43aa01
  43a99c:	outs   dx,BYTE PTR ds:[rsi]
  43a99d:	add    al,ch
  43a99f:	add    al,0x5f
  43a9a1:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  43a9a8:	cld    
  43a9a9:	add    al,0x5f
  43a9ab:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  43a9af:	add    BYTE PTR gs:[rax],al
  43a9b2:	add    BYTE PTR [rip+0x6363615f],al        # 0x63a70b17
  43a9b8:	gs jae 0x43aa2e
  43a9bb:	add    BYTE PTR [rax],al
  43a9bd:	add    BYTE PTR [rdx+0x65],dh
  43a9c0:	movsxd ebp,DWORD PTR [edi+0x6d]
  43a9c4:	jo     0x43a9c6
  43a9c6:	add    BYTE PTR [rax],al
  43a9c8:	add    al,BYTE PTR [rax]
  43a9ca:	jb     0x43aa31
  43a9cc:	addr32 gs js 0x43aa35
  43a9d0:	movsxd eax,DWORD PTR [rax]
  43a9d2:	add    BYTE PTR [rax],al
  43a9d4:	add    eax,DWORD PTR [rax]
  43a9d6:	jb     0x43aa3d
  43a9d8:	addr32 data16 jb 0x43aa41
  43a9dc:	add    BYTE PTR gs:[rax],al
  43a9df:	add    BYTE PTR [rbx+0x73694400],ah
  43a9e5:	jo     0x43aa48
  43a9e7:	je     0x43aa4c
  43a9e9:	push   0x7373654d
  43a9ee:	(bad)  
  43a9ef:	add    BYTE PTR gs:[r8d],al
  43a9f4:	lock add DWORD PTR [rbp+0x65],ecx
  43a9f8:	jae    0x43aa6d
  43a9fa:	(bad)  
  43a9fb:	rex.X outs dx,DWORD PTR gs:[esi]
  43a9ff:	js     0x43aa58
  43aa01:	add    bh,dh
  43aa03:	add    DWORD PTR [rbp+0x73],ecx
  43aa06:	addr32 push rdi
  43aa08:	(bad)  
  43aa09:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
  43aa11:	je     0x43aa7c
  43aa13:	jo     0x43aa81
  43aa15:	gs rex.WRXB (bad) 
  43aa18:	push   0x65
  43aa1a:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
  43aa1e:	or     al,BYTE PTR [rdx]
  43aa20:	push   rax
  43aa21:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
  43aa27:	jae    0x43aa8a
  43aa29:	add    BYTE PTR gs:[r8d],al
  43aa2e:	mov    ebx,0x61725402
  43aa33:	outs   dx,BYTE PTR ds:[rsi]
  43aa34:	jae    0x43aaa2
  43aa36:	(bad)  
  43aa37:	je     0x43aa9e
  43aa39:	rex.WRB
  43aa3a:	gs jae 0x43aab0
  43aa3d:	(bad)  
  43aa3e:	add    BYTE PTR gs:[eax],al
  43aa42:	sbb    al,BYTE PTR [rax]
  43aa44:	push   rdi
  43aa45:	push   rbx
  43aa46:	rex.B
  43aa47:	rex.XB ins BYTE PTR es:[rdi],dx
  43aa49:	gs (bad) 
  43aa4b:	outs   dx,BYTE PTR ds:[rsi]
  43aa4c:	jne    0x43aabe
  43aa4e:	add    BYTE PTR [rax],al
  43aa50:	(bad)  
  43aa51:	add    BYTE PTR [rdi+0x53],dl
  43aa54:	rex.B
  43aa55:	rex.RB outs dx,BYTE PTR ds:[rsi]
  43aa57:	jne    0x43aac6
  43aa59:	rex.WRX
  43aa5a:	gs je  0x43aad4
  43aa5d:	outs   dx,DWORD PTR ds:[rsi]
  43aa5e:	jb     0x43aacb
  43aa60:	rex.RB jbe 0x43aac8
  43aa63:	outs   dx,BYTE PTR ds:[rsi]
  43aa64:	je     0x43aad9
  43aa66:	add    BYTE PTR [rax],al
  43aa68:	sub    al,BYTE PTR [rax]
  43aa6a:	push   rdi
  43aa6b:	push   rbx
  43aa6c:	rex.B
  43aa6d:	rex.RB jbe 0x43aad5
  43aa70:	outs   dx,BYTE PTR ds:[rsi]
  43aa71:	je     0x43aac6
  43aa73:	gs ins BYTE PTR es:[rdi],dx
  43aa75:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  43aa7a:	sub    eax,DWORD PTR [rax]
  43aa7c:	push   rdi
  43aa7d:	push   rbx
  43aa7e:	rex.B
  43aa7f:	rex.RXB
  43aa80:	gs je  0x43aacf
  43aa83:	(bad)  
  43aa84:	jae    0x43aafa
  43aa86:	rex.RB jb 0x43aafb
  43aa89:	outs   dx,DWORD PTR ds:[rsi]
  43aa8a:	jb     0x43aa8c
  43aa8c:	rex.WRXB add BYTE PTR [r15+0x53],r10b
  43aa90:	push   r11
  43aa92:	gs je  0x43aae1
  43aa95:	(bad)  
  43aa96:	jae    0x43ab0c
  43aa98:	rex.RB jb 0x43ab0d
  43aa9b:	outs   dx,DWORD PTR ds:[rsi]
  43aa9c:	jb     0x43aa9e
  43aa9e:	push   rdx
  43aa9f:	add    BYTE PTR [rdi+0x53],dl
  43aaa2:	push   r11
  43aaa4:	outs   dx,DWORD PTR ds:[rsi]
  43aaa5:	movsxd ebp,DWORD PTR [rbx+0x65]
  43aaa8:	je     0x43aaeb
  43aaaa:	add    BYTE PTR [rax],al
  43aaac:	push   rsp
  43aaad:	add    BYTE PTR [rdi+0x53],dl
  43aab0:	push   r11
  43aab2:	je     0x43ab15
  43aab4:	jb     0x43ab2a
  43aab6:	jne    0x43ab28
  43aab8:	add    BYTE PTR [rax],al
  43aaba:	xchg   edx,eax
  43aabb:	add    BYTE PTR [rdi+0x5f],bl
  43aabe:	push   rdi
  43aabf:	push   rbx
  43aac0:	rex.B
  43aac1:	rex.RX
  43aac2:	rex.R
  43aac3:	rex.WB jae 0x43ab19
  43aac6:	gs je  0x43aac9
  43aac9:	add    BYTE PTR [rbp+0x6f6c6300],dl
  43aacf:	jae    0x43ab36
  43aad1:	jae    0x43ab42
  43aad3:	movsxd ebp,DWORD PTR [rbx+0x65]
  43aad6:	je     0x43aad8
  43aad8:	xchg   esi,eax
  43aad9:	add    BYTE PTR [rbx+0x6f],ah
  43aadc:	outs   dx,BYTE PTR ds:[rsi]
  43aadd:	outs   dx,BYTE PTR ds:[rsi]
  43aade:	movsxd esi,DWORD PTR gs:[rax+rax*1-0x69]
  43aae3:	add    BYTE PTR [rsi+0x72],ah
  43aae6:	gs gs (bad) 
  43aae9:	fs fs jb 0x43ab56
  43aaed:	outs   dx,BYTE PTR ds:[rsi]
  43aaee:	outs   dx,WORD PTR ds:[rsi]
  43aaf0:	add    BYTE PTR [rax],al
  43aaf2:	cwde   
  43aaf3:	add    BYTE PTR [rdi+0x65],ah
  43aaf6:	je     0x43ab59
  43aaf8:	fs fs jb 0x43ab65
  43aafc:	outs   dx,BYTE PTR ds:[rsi]
  43aafd:	outs   dx,WORD PTR ds:[rsi]
  43aaff:	add    BYTE PTR [rax+rax*1+0x6e746567],bl
  43ab06:	(bad)  
  43ab07:	ins    DWORD PTR es:[rdi],dx
  43ab08:	imul   ebp,DWORD PTR gs:[rsi+0x66],0xa0006f
  43ab10:	addr32 gs je 0x43ab87
  43ab14:	gs jb  0x43ab8d
  43ab17:	(bad)  
  43ab18:	jns    0x43ab88
  43ab1a:	(bad)  
  43ab1b:	ins    DWORD PTR es:[rdi],dx
  43ab1c:	add    BYTE PTR gs:[rcx+0x74656700],ah
  43ab23:	jae    0x43ab8a
  43ab25:	jb     0x43ab9d
  43ab27:	(bad)  
  43ab28:	jns    0x43ab9a
  43ab2a:	outs   dx,DWORD PTR ds:[rsi]
  43ab2b:	jb     0x43aba1
  43ab2d:	add    BYTE PTR [rbp+0x6f746800],ah
  43ab33:	outs   dx,BYTE PTR ds:[rsi]
  43ab34:	jae    0x43ab36
  43ab36:	stos   BYTE PTR es:[rdi],al
  43ab37:	add    BYTE PTR [rcx+0x6f],ch
  43ab3a:	movsxd esi,DWORD PTR [rsp+rbp*2+0x73]
  43ab3e:	outs   dx,DWORD PTR ds:[rsi]
  43ab3f:	movsxd ebp,DWORD PTR [rbx+0x65]
  43ab42:	je     0x43ab44
  43ab44:	lods   eax,DWORD PTR ds:[rsi]
  43ab45:	add    BYTE PTR [rsi+0x74],ch
  43ab48:	outs   dx,DWORD PTR ds:[rsi]
  43ab49:	push   0xae0073
  43ab4e:	jb     0x43abb5
  43ab50:	movsxd esi,DWORD PTR [rsi+0x0]
  43ab53:	add    BYTE PTR [rax+0x6c657300],dh
  43ab59:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  43ab5e:	mov    cl,0x0
  43ab60:	jae    0x43abc7
  43ab62:	outs   dx,BYTE PTR ds:[rsi]
  43ab63:	add    BYTE PTR fs:[rax],al
  43ab66:	mov    bl,0x0
  43ab68:	jae    0x43abcf
  43ab6a:	je     0x43abdf
  43ab6c:	outs   dx,DWORD PTR ds:[rsi]
  43ab6d:	movsxd ebp,DWORD PTR [rbx+0x6f]
  43ab70:	jo     0x43abe6
  43ab72:	add    BYTE PTR [rax],al
  43ab74:	mov    ah,0x0
  43ab76:	jae    0x43abe0
  43ab78:	jne    0x43abee
  43ab7a:	outs   dx,DWORD PTR fs:[rsi]
  43ab7c:	ja     0x43abec
  43ab7e:	add    BYTE PTR [rax],al
  43ab80:	add    BYTE PTR [rax-0x7ffffffd],al
  43ab86:	add    eax,DWORD PTR [rax]
  43ab88:	add    BYTE PTR [rax-0x7ffffffd],al
  43ab8e:	add    eax,DWORD PTR [rax]
  43ab90:	add    BYTE PTR [rax-0x7ffffffd],al
  43ab96:	add    eax,DWORD PTR [rax]
  43ab98:	add    BYTE PTR [rax-0x7ffffffd],al
  43ab9e:	add    eax,DWORD PTR [rax]
  43aba0:	add    BYTE PTR [rax-0x7ffffffd],al
  43aba6:	add    eax,DWORD PTR [rax]
  43aba8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abae:	add    eax,DWORD PTR [rax]
  43abb0:	add    BYTE PTR [rax-0x7ffffffd],al
  43abb6:	add    eax,DWORD PTR [rax]
  43abb8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abbe:	add    eax,DWORD PTR [rax]
  43abc0:	add    BYTE PTR [rax-0x7ffffffd],al
  43abc6:	add    eax,DWORD PTR [rax]
  43abc8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abce:	add    eax,DWORD PTR [rax]
  43abd0:	add    BYTE PTR [rax-0x7ffffffd],al
  43abd6:	add    eax,DWORD PTR [rax]
  43abd8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abde:	add    eax,DWORD PTR [rax]
  43abe0:	add    BYTE PTR [rax-0x7ffffffd],al
  43abe6:	add    eax,DWORD PTR [rax]
  43abe8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abee:	add    eax,DWORD PTR [rax]
  43abf0:	add    BYTE PTR [rax-0x7ffffffd],al
  43abf6:	add    eax,DWORD PTR [rax]
  43abf8:	add    BYTE PTR [rax-0x7ffffffd],al
  43abfe:	add    eax,DWORD PTR [rax]
  43ac00:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac06:	add    eax,DWORD PTR [rax]
  43ac08:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac0e:	add    eax,DWORD PTR [rax]
  43ac10:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac16:	add    eax,DWORD PTR [rax]
  43ac18:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac1e:	add    eax,DWORD PTR [rax]
  43ac20:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac26:	add    eax,DWORD PTR [rax]
  43ac28:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac2e:	add    eax,DWORD PTR [rax]
  43ac30:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac36:	add    eax,DWORD PTR [rax]
  43ac38:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac3e:	add    eax,DWORD PTR [rax]
  43ac40:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac46:	add    eax,DWORD PTR [rax]
  43ac48:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac4e:	add    eax,DWORD PTR [rax]
  43ac50:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac56:	add    eax,DWORD PTR [rax]
  43ac58:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac5e:	add    eax,DWORD PTR [rax]
  43ac60:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac66:	add    eax,DWORD PTR [rax]
  43ac68:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac6e:	add    eax,DWORD PTR [rax]
  43ac70:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac76:	add    eax,DWORD PTR [rax]
  43ac78:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac7e:	add    eax,DWORD PTR [rax]
  43ac80:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac86:	add    eax,DWORD PTR [rax]
  43ac88:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac8e:	add    eax,DWORD PTR [rax]
  43ac90:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac96:	add    eax,DWORD PTR [rax]
  43ac98:	add    BYTE PTR [rax-0x7ffffffd],al
  43ac9e:	add    eax,DWORD PTR [rax]
  43aca0:	add    BYTE PTR [rax-0x7ffffffd],al
  43aca6:	add    eax,DWORD PTR [rax]
  43aca8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acae:	add    eax,DWORD PTR [rax]
  43acb0:	add    BYTE PTR [rax-0x7ffffffd],al
  43acb6:	add    eax,DWORD PTR [rax]
  43acb8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acbe:	add    eax,DWORD PTR [rax]
  43acc0:	add    BYTE PTR [rax-0x7ffffffd],al
  43acc6:	add    eax,DWORD PTR [rax]
  43acc8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acce:	add    eax,DWORD PTR [rax]
  43acd0:	add    BYTE PTR [rax-0x7ffffffd],al
  43acd6:	add    eax,DWORD PTR [rax]
  43acd8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acde:	add    eax,DWORD PTR [rax]
  43ace0:	add    BYTE PTR [rax-0x7ffffffd],al
  43ace6:	add    eax,DWORD PTR [rax]
  43ace8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acee:	add    eax,DWORD PTR [rax]
  43acf0:	add    BYTE PTR [rax-0x7ffffffd],al
  43acf6:	add    eax,DWORD PTR [rax]
  43acf8:	add    BYTE PTR [rax-0x7ffffffd],al
  43acfe:	add    eax,DWORD PTR [rax]
  43ad00:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad06:	add    eax,DWORD PTR [rax]
  43ad08:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad0e:	add    eax,DWORD PTR [rax]
  43ad10:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad16:	add    eax,DWORD PTR [rax]
  43ad18:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad1e:	add    eax,DWORD PTR [rax]
  43ad20:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad26:	add    eax,DWORD PTR [rax]
  43ad28:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad2e:	add    eax,DWORD PTR [rax]
  43ad30:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad36:	add    eax,DWORD PTR [rax]
  43ad38:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad3e:	add    eax,DWORD PTR [rax]
  43ad40:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad46:	add    eax,DWORD PTR [rax]
  43ad48:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad4e:	add    eax,DWORD PTR [rax]
  43ad50:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad56:	add    eax,DWORD PTR [rax]
  43ad58:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad5e:	add    eax,DWORD PTR [rax]
  43ad60:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad66:	add    eax,DWORD PTR [rax]
  43ad68:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad6e:	add    eax,DWORD PTR [rax]
  43ad70:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad76:	add    eax,DWORD PTR [rax]
  43ad78:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad7e:	add    eax,DWORD PTR [rax]
  43ad80:	add    BYTE PTR [rax-0x7ffffffd],al
  43ad86:	add    eax,DWORD PTR [rax]
  43ad88:	ins    BYTE PTR es:[rdi],dx
  43ad89:	imul   esp,DWORD PTR [rdx+0x67],0x6c74756e
  43ad90:	jae    0x43adbf
  43ad92:	xor    esi,DWORD PTR [rax]
  43ad94:	cs fs ins BYTE PTR es:[rdi],dx
  43ad97:	ins    BYTE PTR es:[rdi],dx
  43ad98:	add    BYTE PTR [rax],al
  43ad9a:	add    BYTE PTR [rax],al
  43ad9c:	adc    al,0x80
  43ad9e:	add    eax,DWORD PTR [rax]
  43ada0:	adc    al,0x80
  43ada2:	add    eax,DWORD PTR [rax]
  43ada4:	adc    al,0x80
  43ada6:	add    eax,DWORD PTR [rax]
  43ada8:	adc    al,0x80
  43adaa:	add    eax,DWORD PTR [rax]
  43adac:	adc    al,0x80
  43adae:	add    eax,DWORD PTR [rax]
  43adb0:	adc    al,0x80
  43adb2:	add    eax,DWORD PTR [rax]
  43adb4:	adc    al,0x80
  43adb6:	add    eax,DWORD PTR [rax]
  43adb8:	adc    al,0x80
  43adba:	add    eax,DWORD PTR [rax]
  43adbc:	adc    al,0x80
  43adbe:	add    eax,DWORD PTR [rax]
  43adc0:	adc    al,0x80
  43adc2:	add    eax,DWORD PTR [rax]
  43adc4:	adc    al,0x80
  43adc6:	add    eax,DWORD PTR [rax]
  43adc8:	adc    al,0x80
  43adca:	add    eax,DWORD PTR [rax]
  43adcc:	adc    al,0x80
  43adce:	add    eax,DWORD PTR [rax]
  43add0:	adc    al,0x80
  43add2:	add    eax,DWORD PTR [rax]
  43add4:	adc    al,0x80
  43add6:	add    eax,DWORD PTR [rax]
  43add8:	adc    al,0x80
  43adda:	add    eax,DWORD PTR [rax]
  43addc:	adc    al,0x80
  43adde:	add    eax,DWORD PTR [rax]
  43ade0:	adc    al,0x80
  43ade2:	add    eax,DWORD PTR [rax]
  43ade4:	adc    al,0x80
  43ade6:	add    eax,DWORD PTR [rax]
  43ade8:	adc    al,0x80
  43adea:	add    eax,DWORD PTR [rax]
  43adec:	adc    al,0x80
  43adee:	add    eax,DWORD PTR [rax]
  43adf0:	adc    al,0x80
  43adf2:	add    eax,DWORD PTR [rax]
  43adf4:	adc    al,0x80
  43adf6:	add    eax,DWORD PTR [rax]
  43adf8:	adc    al,0x80
  43adfa:	add    eax,DWORD PTR [rax]
  43adfc:	adc    al,0x80
  43adfe:	add    eax,DWORD PTR [rax]
  43ae00:	adc    al,0x80
  43ae02:	add    eax,DWORD PTR [rax]
  43ae04:	adc    al,0x80
  43ae06:	add    eax,DWORD PTR [rax]
  43ae08:	adc    al,0x80
  43ae0a:	add    eax,DWORD PTR [rax]
  43ae0c:	adc    al,0x80
  43ae0e:	add    eax,DWORD PTR [rax]
  43ae10:	adc    al,0x80
  43ae12:	add    eax,DWORD PTR [rax]
  43ae14:	adc    al,0x80
  43ae16:	add    eax,DWORD PTR [rax]
  43ae18:	adc    al,0x80
  43ae1a:	add    eax,DWORD PTR [rax]
  43ae1c:	adc    al,0x80
  43ae1e:	add    eax,DWORD PTR [rax]
  43ae20:	adc    al,0x80
  43ae22:	add    eax,DWORD PTR [rax]
  43ae24:	adc    al,0x80
  43ae26:	add    eax,DWORD PTR [rax]
  43ae28:	adc    al,0x80
  43ae2a:	add    eax,DWORD PTR [rax]
  43ae2c:	adc    al,0x80
  43ae2e:	add    eax,DWORD PTR [rax]
  43ae30:	adc    al,0x80
  43ae32:	add    eax,DWORD PTR [rax]
  43ae34:	adc    al,0x80
  43ae36:	add    eax,DWORD PTR [rax]
  43ae38:	adc    al,0x80
  43ae3a:	add    eax,DWORD PTR [rax]
  43ae3c:	rex.WXB
  43ae3d:	rex.RB push r10
  43ae3f:	rex.WRX
  43ae40:	rex.RB
  43ae41:	xor    r14,QWORD PTR [rdx]
  43ae44:	cs fs ins BYTE PTR es:[rdi],dx
  43ae47:	ins    BYTE PTR es:[rdi],dx
  43ae48:	add    BYTE PTR [rax],al
  43ae4a:	add    BYTE PTR [rax],al
  43ae4c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae52:	add    eax,DWORD PTR [rax]
  43ae54:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae5a:	add    eax,DWORD PTR [rax]
  43ae5c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae62:	add    eax,DWORD PTR [rax]
  43ae64:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae6a:	add    eax,DWORD PTR [rax]
  43ae6c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae72:	add    eax,DWORD PTR [rax]
  43ae74:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae7a:	add    eax,DWORD PTR [rax]
  43ae7c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae82:	add    eax,DWORD PTR [rax]
  43ae84:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae8a:	add    eax,DWORD PTR [rax]
  43ae8c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae92:	add    eax,DWORD PTR [rax]
  43ae94:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43ae9a:	add    eax,DWORD PTR [rax]
  43ae9c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aea2:	add    eax,DWORD PTR [rax]
  43aea4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeaa:	add    eax,DWORD PTR [rax]
  43aeac:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeb2:	add    eax,DWORD PTR [rax]
  43aeb4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeba:	add    eax,DWORD PTR [rax]
  43aebc:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aec2:	add    eax,DWORD PTR [rax]
  43aec4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeca:	add    eax,DWORD PTR [rax]
  43aecc:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aed2:	add    eax,DWORD PTR [rax]
  43aed4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeda:	add    eax,DWORD PTR [rax]
  43aedc:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aee2:	add    eax,DWORD PTR [rax]
  43aee4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aeea:	add    eax,DWORD PTR [rax]
  43aeec:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aef2:	add    eax,DWORD PTR [rax]
  43aef4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43aefa:	add    eax,DWORD PTR [rax]
  43aefc:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af02:	add    eax,DWORD PTR [rax]
  43af04:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af0a:	add    eax,DWORD PTR [rax]
  43af0c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af12:	add    eax,DWORD PTR [rax]
  43af14:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af1a:	add    eax,DWORD PTR [rax]
  43af1c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af22:	add    eax,DWORD PTR [rax]
  43af24:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af2a:	add    eax,DWORD PTR [rax]
  43af2c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af32:	add    eax,DWORD PTR [rax]
  43af34:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af3a:	add    eax,DWORD PTR [rax]
  43af3c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af42:	add    eax,DWORD PTR [rax]
  43af44:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af4a:	add    eax,DWORD PTR [rax]
  43af4c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af52:	add    eax,DWORD PTR [rax]
  43af54:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af5a:	add    eax,DWORD PTR [rax]
  43af5c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af62:	add    eax,DWORD PTR [rax]
  43af64:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af6a:	add    eax,DWORD PTR [rax]
  43af6c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af72:	add    eax,DWORD PTR [rax]
  43af74:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af7a:	add    eax,DWORD PTR [rax]
  43af7c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af82:	add    eax,DWORD PTR [rax]
  43af84:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af8a:	add    eax,DWORD PTR [rax]
  43af8c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af92:	add    eax,DWORD PTR [rax]
  43af94:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43af9a:	add    eax,DWORD PTR [rax]
  43af9c:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43afa2:	add    eax,DWORD PTR [rax]
  43afa4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43afaa:	add    eax,DWORD PTR [rax]
  43afac:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43afb2:	add    eax,DWORD PTR [rax]
  43afb4:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43afba:	add    eax,DWORD PTR [rax]
  43afbc:	sub    BYTE PTR [rax-0x7fd7fffd],al
  43afc2:	add    eax,DWORD PTR [rax]
  43afc4:	ins    DWORD PTR es:[rdi],dx
  43afc5:	jae    0x43b03d
  43afc7:	movsxd esi,DWORD PTR [rdx+0x74]
  43afca:	cs fs ins BYTE PTR es:[rdi],dx
  43afcd:	ins    BYTE PTR es:[rdi],dx
  43afce:	add    BYTE PTR [rax],al
  43afd0:	cmp    al,0x80
  43afd2:	add    eax,DWORD PTR [rax]
  43afd4:	cmp    al,0x80
  43afd6:	add    eax,DWORD PTR [rax]
  43afd8:	cmp    al,0x80
  43afda:	add    eax,DWORD PTR [rax]
  43afdc:	ins    BYTE PTR es:[rdi],dx
  43afdd:	imul   esp,DWORD PTR [rdx+0x70],0x70657263
  43afe4:	outs   dx,DWORD PTR ds:[rsi]
  43afe5:	jae    0x43b050
  43afe7:	js     0x43b016
  43afe9:	xor    BYTE PTR [rsi],ch
  43afeb:	fs ins BYTE PTR es:[rdi],dx
  43afed:	ins    BYTE PTR es:[rdi],dx
  43afee:	add    BYTE PTR [rax],al
  43aff0:	push   rax
  43aff1:	add    BYTE PTR [rbx],0x0
  43aff4:	push   rax
  43aff5:	add    BYTE PTR [rbx],0x0
  43aff8:	push   rax
  43aff9:	add    BYTE PTR [rbx],0x0
  43affc:	push   rax
  43affd:	add    BYTE PTR [rbx],0x0
  43b000:	push   rax
  43b001:	add    BYTE PTR [rbx],0x0
  43b004:	push   rbp
  43b005:	push   rbx
  43b006:	rex.RB push r10
  43b008:	xor    esi,DWORD PTR [rdx]
  43b00a:	cs fs ins BYTE PTR es:[rdi],dx
  43b00d:	ins    BYTE PTR es:[rdi],dx
  43b00e:	add    BYTE PTR [rax],al
  43b010:	add    BYTE PTR fs:[rbx],0x0
  43b014:	add    BYTE PTR fs:[rbx],0x0
  43b018:	add    BYTE PTR fs:[rbx],0x0
  43b01c:	add    BYTE PTR fs:[rbx],0x0
  43b020:	add    BYTE PTR fs:[rbx],0x0
  43b024:	add    BYTE PTR fs:[rbx],0x0
  43b028:	add    BYTE PTR fs:[rbx],0x0
  43b02c:	add    BYTE PTR fs:[rbx],0x0
  43b030:	add    BYTE PTR fs:[rbx],0x0
  43b034:	add    BYTE PTR fs:[rbx],0x0
  43b038:	add    BYTE PTR fs:[rbx],0x0
  43b03c:	add    BYTE PTR fs:[rbx],0x0
  43b040:	add    BYTE PTR fs:[rbx],0x0
  43b044:	add    BYTE PTR fs:[rbx],0x0
  43b048:	add    BYTE PTR fs:[rbx],0x0
  43b04c:	add    BYTE PTR fs:[rbx],0x0
  43b050:	add    BYTE PTR fs:[rbx],0x0
  43b054:	add    BYTE PTR fs:[rbx],0x0
  43b058:	add    BYTE PTR fs:[rbx],0x0
  43b05c:	add    BYTE PTR fs:[rbx],0x0
  43b060:	add    BYTE PTR fs:[rbx],0x0
  43b064:	add    BYTE PTR fs:[rbx],0x0
  43b068:	add    BYTE PTR fs:[rbx],0x0
  43b06c:	push   rdi
  43b06d:	push   rbx
  43b06e:	xor    bl,BYTE PTR [rdi+0x33]
  43b071:	xor    ch,BYTE PTR [rsi]
  43b073:	fs ins BYTE PTR es:[rdi],dx
  43b075:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000043c000 <.CRT>:
	...
  43c008:	(bad)  
  43c009:	adc    DWORD PTR [rax+0x0],eax
	...
  43c020:	adc    BYTE PTR [rax],dl
  43c022:	add    BYTE PTR [rax],al
  43c025:	add    BYTE PTR [rax],al
  43c027:	add    al,dh
  43c029:	mov    ah,0x41
	...
  43c03f:	add    BYTE PTR [rax],ah
  43c041:	mov    bh,0x41
  43c043:	add    BYTE PTR [rax],al
  43c045:	add    BYTE PTR [rax],al
  43c047:	add    al,dh
  43c049:	mov    dh,0x41
	...

Disassembly of section .tls:

000000000043d000 <.tls>:
	...
  43d020:	add    al,dl
  43d022:	rex.XB add BYTE PTR [r8],al
  43d025:	add    BYTE PTR [rax],al
  43d027:	add    BYTE PTR [rax-0x30],ah
  43d02a:	rex.XB add BYTE PTR [r8],al
  43d02d:	add    BYTE PTR [rax],al
  43d02f:	add    BYTE PTR [rdx+riz*2+0x43],bl
  43d036:	add    BYTE PTR [rax],al
  43d038:	rex rol BYTE PTR [rbx+0x0],0x0
	...
