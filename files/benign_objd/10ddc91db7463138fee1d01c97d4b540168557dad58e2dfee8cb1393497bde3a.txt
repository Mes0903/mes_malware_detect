
10ddc91db7463138fee1d01c97d4b540168557dad58e2dfee8cb1393497bde3a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x49f5]        # 0x405a10
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x49f6]        # 0x405a20
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x49f9]        # 0x405a30
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x49bc]        # 0x405a00
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x484f]        # 0x4058a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4991]        # 0x4059f0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402d80
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401d30
  401081:	mov    rdx,QWORD PTR [rip+0x48a8]        # 0x405930
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x488e]        # 0x405920
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x48f4]        # 0x405990
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x482b]        # 0x4058d0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401910
  4010af:	mov    rax,QWORD PTR [rip+0x479a]        # 0x405850
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402d80
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xae9]        # 0x401c10
  401127:	call   0x401c00
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4855]        # 0x4059c0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x47e5]        # 0x405980
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402d98
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x482a]        # 0x4059f0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x470b]        # 0x405900
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x823a]        # 0x40943c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x46e7]        # 0x405910
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x462c]        # 0x405890
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401f20
  40127d:	lea    rcx,[rip+0x123c]        # 0x4024c0
  401284:	call   QWORD PTR [rip+0x81aa]        # 0x409434
  40128a:	mov    rdx,QWORD PTR [rip+0x465f]        # 0x4058f0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4023d0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402dc0
  4012a5:	call   0x401d10
  4012aa:	mov    rax,QWORD PTR [rip+0x45ef]        # 0x4058a0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4601]        # 0x4058c0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402cf8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402ce0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402cf8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402cf0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x4018e0
  4013bb:	mov    rax,QWORD PTR [rip+0x44ee]        # 0x4058b0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402e90
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402d68
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x44d9]        # 0x405910
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402d70
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x44ed]        # 0x405950
  401463:	mov    rcx,QWORD PTR [rip+0x44d6]        # 0x405940
  40146a:	call   0x402d58
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7f4b]        # 0x4093e4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x44c9]        # 0x405970
  4014a7:	mov    rcx,QWORD PTR [rip+0x44b2]        # 0x405960
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402d58
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402d28
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4515]        # 0x4059f0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401920
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x44e5]        # 0x4059f0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401920
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x58
  401534:	mov    r9d,0x1
  40153a:	mov    QWORD PTR [rsp+0x48],0x0
  401543:	mov    DWORD PTR [rsp+0x40],0x0
  40154b:	mov    DWORD PTR [rsp+0x38],0x1
  401553:	mov    DWORD PTR [rsp+0x30],0x0
  40155b:	mov    DWORD PTR [rsp+0x28],0x0
  401563:	mov    DWORD PTR [rsp+0x20],0x1
  40156b:	call   0x401740
  401570:	mov    DWORD PTR [rip+0x6ac2],eax        # 0x408038
  401576:	and    eax,0xfffffffd
  401579:	setne  al
  40157c:	add    rsp,0x58
  401580:	ret    
  401581:	nop    DWORD PTR [rax+rax*1+0x0]
  401586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401590:	push   r14
  401592:	push   r13
  401594:	mov    eax,0x1020
  401599:	push   r12
  40159b:	push   rbp
  40159c:	push   rdi
  40159d:	push   rsi
  40159e:	push   rbx
  40159f:	call   0x402c90
  4015a4:	sub    rsp,rax
  4015a7:	mov    edx,0x8000
  4015ac:	mov    r13,rcx
  4015af:	call   0x4016f0
  4015b4:	test   eax,eax
  4015b6:	mov    edi,eax
  4015b8:	js     0x401696
  4015be:	mov    rbp,QWORD PTR [rip+0x7f07]        # 0x4094cc
  4015c5:	lea    rsi,[rsp+0x20]
  4015ca:	mov    r12,rbp
  4015cd:	nop    DWORD PTR [rax]
  4015d0:	mov    r8d,0x1000
  4015d6:	mov    rdx,rsi
  4015d9:	mov    ecx,edi
  4015db:	call   0x4016e0
  4015e0:	test   rax,rax
  4015e3:	mov    rbx,rax
  4015e6:	js     0x401621
  4015e8:	je     0x401650
  4015ea:	mov    r8,rbx
  4015ed:	mov    rdx,rsi
  4015f0:	mov    ecx,0x1
  4015f5:	call   0x401730
  4015fa:	cmp    rbx,rax
  4015fd:	jbe    0x4015d0
  4015ff:	lea    rcx,[rip+0x3a32]        # 0x405038
  401606:	call   0x401760
  40160b:	mov    rbx,rax
  40160e:	call   rbp
  401610:	mov    edx,DWORD PTR [rax]
  401612:	mov    r8,rbx
  401615:	mov    ecx,0x1
  40161a:	call   0x401748
  40161f:	jmp    0x4015d0
  401621:	call   r12
  401624:	cmp    DWORD PTR [rax],0x4
  401627:	je     0x4015d0
  401629:	lea    rcx,[rip+0x39f5]        # 0x405025
  401630:	call   0x401760
  401635:	mov    r14,rax
  401638:	call   r12
  40163b:	mov    edx,DWORD PTR [rax]
  40163d:	mov    r9,r13
  401640:	mov    r8,r14
  401643:	mov    ecx,0x1
  401648:	call   0x401748
  40164d:	jmp    0x4015ea
  40164f:	nop
  401650:	mov    ecx,edi
  401652:	call   0x401710
  401657:	test   eax,eax
  401659:	js     0x40166d
  40165b:	add    rsp,0x1020
  401662:	pop    rbx
  401663:	pop    rsi
  401664:	pop    rdi
  401665:	pop    rbp
  401666:	pop    r12
  401668:	pop    r13
  40166a:	pop    r14
  40166c:	ret    
  40166d:	lea    rcx,[rip+0x39d9]        # 0x40504d
  401674:	call   0x401760
  401679:	mov    rbx,rax
  40167c:	call   QWORD PTR [rip+0x7e4a]        # 0x4094cc
  401682:	mov    edx,DWORD PTR [rax]
  401684:	mov    r9,r13
  401687:	mov    r8,rbx
  40168a:	mov    ecx,0x1
  40168f:	call   0x401748
  401694:	jmp    0x40165b
  401696:	lea    rcx,[rip+0x3963]        # 0x405000
  40169d:	call   0x401760
  4016a2:	mov    rbx,rax
  4016a5:	call   QWORD PTR [rip+0x7e21]        # 0x4094cc
  4016ab:	mov    edx,DWORD PTR [rax]
  4016ad:	mov    r9,r13
  4016b0:	mov    r8,rbx
  4016b3:	mov    ecx,0x1
  4016b8:	call   0x401748
  4016bd:	jmp    0x4015be
  4016c2:	nop
  4016c3:	nop
  4016c4:	nop
  4016c5:	nop
  4016c6:	nop
  4016c7:	nop
  4016c8:	nop
  4016c9:	nop
  4016ca:	nop
  4016cb:	nop
  4016cc:	nop
  4016cd:	nop
  4016ce:	nop
  4016cf:	nop
  4016d0:	jmp    QWORD PTR [rip+0x7cae]        # 0x409384
  4016d6:	nop
  4016d7:	nop
  4016d8:	jmp    QWORD PTR [rip+0x7c9e]        # 0x40937c
  4016de:	nop
  4016df:	nop
  4016e0:	jmp    QWORD PTR [rip+0x7c8e]        # 0x409374
  4016e6:	nop
  4016e7:	nop
  4016e8:	jmp    QWORD PTR [rip+0x7c7e]        # 0x40936c
  4016ee:	nop
  4016ef:	nop
  4016f0:	jmp    QWORD PTR [rip+0x7c66]        # 0x40935c
  4016f6:	nop
  4016f7:	nop
  4016f8:	jmp    QWORD PTR [rip+0x7c56]        # 0x409354
  4016fe:	nop
  4016ff:	nop
  401700:	jmp    QWORD PTR [rip+0x7c46]        # 0x40934c
  401706:	nop
  401707:	nop
  401708:	jmp    QWORD PTR [rip+0x7c36]        # 0x409344
  40170e:	nop
  40170f:	nop
  401710:	jmp    QWORD PTR [rip+0x7c1e]        # 0x409334
  401716:	nop
  401717:	nop
  401718:	jmp    QWORD PTR [rip+0x7c0e]        # 0x40932c
  40171e:	nop
  40171f:	nop
  401720:	jmp    QWORD PTR [rip+0x7bf6]        # 0x40931c
  401726:	nop
  401727:	nop
  401728:	jmp    QWORD PTR [rip+0x7be6]        # 0x409314
  40172e:	nop
  40172f:	nop
  401730:	jmp    QWORD PTR [rip+0x7bd6]        # 0x40930c
  401736:	nop
  401737:	nop
  401738:	jmp    QWORD PTR [rip+0x7bc6]        # 0x409304
  40173e:	nop
  40173f:	nop
  401740:	jmp    QWORD PTR [rip+0x7bb6]        # 0x4092fc
  401746:	nop
  401747:	nop
  401748:	jmp    QWORD PTR [rip+0x7ba6]        # 0x4092f4
  40174e:	nop
  40174f:	nop
  401750:	jmp    QWORD PTR [rip+0x7b96]        # 0x4092ec
  401756:	nop
  401757:	nop
  401758:	jmp    QWORD PTR [rip+0x7c46]        # 0x4093a4
  40175e:	nop
  40175f:	nop
  401760:	jmp    QWORD PTR [rip+0x7c36]        # 0x40939c
  401766:	nop
  401767:	nop
  401768:	jmp    QWORD PTR [rip+0x7c26]        # 0x409394
  40176e:	nop
  40176f:	nop
  401770:	push   rbx
  401771:	sub    rsp,0x30
  401775:	mov    rbx,rcx
  401778:	mov    rcx,QWORD PTR [rip+0x7291]        # 0x408a10
  40177f:	call   0x401d20
  401784:	cmp    rax,0xffffffffffffffff
  401788:	mov    QWORD PTR [rsp+0x20],rax
  40178d:	je     0x401805
  40178f:	mov    ecx,0x8
  401794:	call   0x402d50
  401799:	mov    rcx,QWORD PTR [rip+0x7270]        # 0x408a10
  4017a0:	call   0x401d20
  4017a5:	mov    rcx,QWORD PTR [rip+0x726c]        # 0x408a18
  4017ac:	mov    QWORD PTR [rsp+0x20],rax
  4017b1:	call   0x401d20
  4017b6:	lea    rdx,[rsp+0x20]
  4017bb:	lea    r8,[rsp+0x28]
  4017c0:	mov    rcx,rbx
  4017c3:	mov    QWORD PTR [rsp+0x28],rax
  4017c8:	call   0x402da0
  4017cd:	mov    rcx,QWORD PTR [rsp+0x20]
  4017d2:	mov    rbx,rax
  4017d5:	call   0x401d30
  4017da:	mov    rcx,QWORD PTR [rsp+0x28]
  4017df:	mov    QWORD PTR [rip+0x722a],rax        # 0x408a10
  4017e6:	call   0x401d30
  4017eb:	mov    ecx,0x8
  4017f0:	mov    QWORD PTR [rip+0x7221],rax        # 0x408a18
  4017f7:	call   0x402d40
  4017fc:	mov    rax,rbx
  4017ff:	add    rsp,0x30
  401803:	pop    rbx
  401804:	ret    
  401805:	mov    rax,QWORD PTR [rip+0x40d4]        # 0x4058e0
  40180c:	mov    rcx,rbx
  40180f:	call   QWORD PTR [rax]
  401811:	add    rsp,0x30
  401815:	pop    rbx
  401816:	ret    
  401817:	nop    WORD PTR [rax+rax*1+0x0]
  401820:	sub    rsp,0x28
  401824:	call   0x401770
  401829:	test   rax,rax
  40182c:	sete   al
  40182f:	movzx  eax,al
  401832:	neg    eax
  401834:	add    rsp,0x28
  401838:	ret    
  401839:	nop
  40183a:	nop
  40183b:	nop
  40183c:	nop
  40183d:	nop
  40183e:	nop
  40183f:	nop
  401840:	sub    rsp,0x28
  401844:	mov    rax,QWORD PTR [rip+0x27d5]        # 0x404020
  40184b:	mov    rax,QWORD PTR [rax]
  40184e:	test   rax,rax
  401851:	je     0x401870
  401853:	call   rax
  401855:	mov    rax,QWORD PTR [rip+0x27c4]        # 0x404020
  40185c:	lea    rdx,[rax+0x8]
  401860:	mov    rax,QWORD PTR [rax+0x8]
  401864:	mov    QWORD PTR [rip+0x27b5],rdx        # 0x404020
  40186b:	test   rax,rax
  40186e:	jne    0x401853
  401870:	add    rsp,0x28
  401874:	ret    
  401875:	nop
  401876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401880:	push   rsi
  401881:	push   rbx
  401882:	sub    rsp,0x28
  401886:	mov    rsi,QWORD PTR [rip+0x3fd3]        # 0x405860
  40188d:	mov    rax,QWORD PTR [rsi]
  401890:	cmp    eax,0xffffffff
  401893:	mov    ebx,eax
  401895:	je     0x4018c0
  401897:	test   ebx,ebx
  401899:	je     0x4018aa
  40189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4018a0:	mov    eax,ebx
  4018a2:	call   QWORD PTR [rsi+rax*8]
  4018a5:	sub    ebx,0x1
  4018a8:	jne    0x4018a0
  4018aa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401840
  4018b1:	add    rsp,0x28
  4018b5:	pop    rbx
  4018b6:	pop    rsi
  4018b7:	jmp    0x401820
  4018bc:	nop    DWORD PTR [rax+0x0]
  4018c0:	xor    ebx,ebx
  4018c2:	jmp    0x4018c6
  4018c4:	mov    ebx,eax
  4018c6:	lea    edx,[rbx+0x1]
  4018c9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4018ce:	mov    rax,rdx
  4018d1:	jne    0x4018c4
  4018d3:	jmp    0x401897
  4018d5:	nop
  4018d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018e0:	mov    eax,DWORD PTR [rip+0x675a]        # 0x408040
  4018e6:	test   eax,eax
  4018e8:	je     0x4018f0
  4018ea:	repz ret 
  4018ec:	nop    DWORD PTR [rax+0x0]
  4018f0:	mov    DWORD PTR [rip+0x6746],0x1        # 0x408040
  4018fa:	jmp    0x401880
  4018fc:	nop
  4018fd:	nop
  4018fe:	nop
  4018ff:	nop
  401900:	mov    rax,QWORD PTR [rip+0x7b95]        # 0x40949c
  401907:	rex.W jmp rax
  40190a:	nop
  40190b:	nop
  40190c:	nop
  40190d:	nop
  40190e:	nop
  40190f:	nop
  401910:	xor    eax,eax
  401912:	ret    
  401913:	nop
  401914:	nop
  401915:	nop
  401916:	nop
  401917:	nop
  401918:	nop
  401919:	nop
  40191a:	nop
  40191b:	nop
  40191c:	nop
  40191d:	nop
  40191e:	nop
  40191f:	nop
  401920:	push   r12
  401922:	push   rbp
  401923:	push   rdi
  401924:	push   rsi
  401925:	push   rbx
  401926:	sub    rsp,0x40
  40192a:	mov    rbx,QWORD PTR [rip+0x274f]        # 0x404080
  401931:	movabs rax,0x2b992ddfa232
  40193b:	mov    QWORD PTR [rsp+0x20],0x0
  401944:	cmp    rbx,rax
  401947:	je     0x401960
  401949:	not    rbx
  40194c:	mov    QWORD PTR [rip+0x273d],rbx        # 0x404090
  401953:	add    rsp,0x40
  401957:	pop    rbx
  401958:	pop    rsi
  401959:	pop    rdi
  40195a:	pop    rbp
  40195b:	pop    r12
  40195d:	ret    
  40195e:	xchg   ax,ax
  401960:	lea    rcx,[rsp+0x20]
  401965:	call   QWORD PTR [rip+0x7a81]        # 0x4093ec
  40196b:	mov    r12,QWORD PTR [rsp+0x20]
  401970:	call   QWORD PTR [rip+0x7a56]        # 0x4093cc
  401976:	mov    ebp,eax
  401978:	call   QWORD PTR [rip+0x7a56]        # 0x4093d4
  40197e:	mov    edi,eax
  401980:	call   QWORD PTR [rip+0x7a6e]        # 0x4093f4
  401986:	lea    rcx,[rsp+0x30]
  40198b:	mov    esi,eax
  40198d:	call   QWORD PTR [rip+0x7a79]        # 0x40940c
  401993:	xor    r12,QWORD PTR [rsp+0x30]
  401998:	mov    edx,edi
  40199a:	movabs rax,0xffffffffffff
  4019a4:	xor    rbp,r12
  4019a7:	mov    rdi,rbp
  4019aa:	xor    rdi,rdx
  4019ad:	mov    edx,esi
  4019af:	xor    rdi,rdx
  4019b2:	mov    rsi,rdi
  4019b5:	and    rsi,rax
  4019b8:	cmp    rsi,rbx
  4019bb:	je     0x4019e0
  4019bd:	mov    rax,rsi
  4019c0:	not    rax
  4019c3:	mov    QWORD PTR [rip+0x26b6],rsi        # 0x404080
  4019ca:	mov    QWORD PTR [rip+0x26bf],rax        # 0x404090
  4019d1:	add    rsp,0x40
  4019d5:	pop    rbx
  4019d6:	pop    rsi
  4019d7:	pop    rdi
  4019d8:	pop    rbp
  4019d9:	pop    r12
  4019db:	ret    
  4019dc:	nop    DWORD PTR [rax+0x0]
  4019e0:	movabs rax,0xffffd466d2205dcc
  4019ea:	movabs rsi,0x2b992ddfa233
  4019f4:	jmp    0x4019c3
  4019f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a00:	push   rbp
  401a01:	push   rsi
  401a02:	push   rbx
  401a03:	mov    rbp,rsp
  401a06:	sub    rsp,0x70
  401a0a:	mov    rsi,rcx
  401a0d:	lea    rcx,[rip+0x666c]        # 0x408080
  401a14:	call   QWORD PTR [rip+0x7a02]        # 0x40941c
  401a1a:	mov    rbx,QWORD PTR [rip+0x6757]        # 0x408178
  401a21:	xor    r8d,r8d
  401a24:	lea    rdx,[rbp-0x28]
  401a28:	mov    rcx,rbx
  401a2b:	call   QWORD PTR [rip+0x79f3]        # 0x409424
  401a31:	test   rax,rax
  401a34:	mov    r9,rax
  401a37:	je     0x401ae0
  401a3d:	lea    rax,[rbp-0x20]
  401a41:	mov    QWORD PTR [rsp+0x38],0x0
  401a4a:	mov    r8,rbx
  401a4d:	mov    rdx,QWORD PTR [rbp-0x28]
  401a51:	xor    ecx,ecx
  401a53:	mov    QWORD PTR [rsp+0x30],rax
  401a58:	lea    rax,[rbp-0x18]
  401a5c:	mov    QWORD PTR [rsp+0x28],rax
  401a61:	lea    rax,[rip+0x6618]        # 0x408080
  401a68:	mov    QWORD PTR [rsp+0x20],rax
  401a6d:	call   QWORD PTR [rip+0x79b9]        # 0x40942c
  401a73:	mov    rax,QWORD PTR [rip+0x66fe]        # 0x408178
  401a7a:	xor    ecx,ecx
  401a7c:	mov    QWORD PTR [rip+0x667d],rsi        # 0x408100
  401a83:	mov    DWORD PTR [rip+0x6af3],0xc0000409        # 0x408580
  401a8d:	mov    DWORD PTR [rip+0x6aed],0x1        # 0x408584
  401a97:	mov    QWORD PTR [rip+0x6af2],rax        # 0x408590
  401a9e:	mov    rax,QWORD PTR [rip+0x25db]        # 0x404080
  401aa5:	mov    QWORD PTR [rbp-0x10],rax
  401aa9:	mov    rax,QWORD PTR [rip+0x25e0]        # 0x404090
  401ab0:	mov    QWORD PTR [rbp-0x8],rax
  401ab4:	call   QWORD PTR [rip+0x797a]        # 0x409434
  401aba:	lea    rcx,[rip+0x3aff]        # 0x4055c0
  401ac1:	call   QWORD PTR [rip+0x798d]        # 0x409454
  401ac7:	call   QWORD PTR [rip+0x78f7]        # 0x4093c4
  401acd:	mov    edx,0xc0000409
  401ad2:	mov    rcx,rax
  401ad5:	call   QWORD PTR [rip+0x7969]        # 0x409444
  401adb:	call   0x402d38
  401ae0:	mov    rax,QWORD PTR [rbp+0x18]
  401ae4:	mov    QWORD PTR [rip+0x668d],rax        # 0x408178
  401aeb:	lea    rax,[rbp+0x8]
  401aef:	mov    QWORD PTR [rip+0x6622],rax        # 0x408118
  401af6:	jmp    0x401a73
  401afb:	nop
  401afc:	nop
  401afd:	nop
  401afe:	nop
  401aff:	nop
  401b00:	sub    rsp,0x28
  401b04:	test   edx,edx
  401b06:	je     0x401b20
  401b08:	cmp    edx,0x3
  401b0b:	je     0x401b20
  401b0d:	mov    eax,0x1
  401b12:	add    rsp,0x28
  401b16:	ret    
  401b17:	nop    WORD PTR [rax+rax*1+0x0]
  401b20:	call   0x402810
  401b25:	mov    eax,0x1
  401b2a:	add    rsp,0x28
  401b2e:	ret    
  401b2f:	nop
  401b30:	push   rsi
  401b31:	push   rbx
  401b32:	sub    rsp,0x28
  401b36:	mov    rax,QWORD PTR [rip+0x3d03]        # 0x405840
  401b3d:	cmp    DWORD PTR [rax],0x2
  401b40:	je     0x401b48
  401b42:	mov    DWORD PTR [rax],0x2
  401b48:	cmp    edx,0x2
  401b4b:	je     0x401b60
  401b4d:	cmp    edx,0x1
  401b50:	je     0x401b92
  401b52:	mov    eax,0x1
  401b57:	add    rsp,0x28
  401b5b:	pop    rbx
  401b5c:	pop    rsi
  401b5d:	ret    
  401b5e:	xchg   ax,ax
  401b60:	lea    rbx,[rip+0x84f9]        # 0x40a060
  401b67:	lea    rsi,[rip+0x84f2]        # 0x40a060
  401b6e:	cmp    rbx,rsi
  401b71:	je     0x401b52
  401b73:	mov    rax,QWORD PTR [rbx]
  401b76:	test   rax,rax
  401b79:	je     0x401b7d
  401b7b:	call   rax
  401b7d:	add    rbx,0x8
  401b81:	cmp    rbx,rsi
  401b84:	jne    0x401b73
  401b86:	mov    eax,0x1
  401b8b:	add    rsp,0x28
  401b8f:	pop    rbx
  401b90:	pop    rsi
  401b91:	ret    
  401b92:	call   0x402810
  401b97:	jmp    0x401b52
  401b99:	nop    DWORD PTR [rax+0x0]
  401ba0:	xor    eax,eax
  401ba2:	ret    
  401ba3:	nop
  401ba4:	nop
  401ba5:	nop
  401ba6:	nop
  401ba7:	nop
  401ba8:	nop
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	sub    rsp,0x58
  401bb4:	mov    rax,QWORD PTR [rip+0x6aa5]        # 0x408660
  401bbb:	test   rax,rax
  401bbe:	je     0x401bec
  401bc0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401bc9:	mov    DWORD PTR [rsp+0x20],ecx
  401bcd:	lea    rcx,[rsp+0x20]
  401bd2:	mov    QWORD PTR [rsp+0x28],rdx
  401bd7:	movsd  QWORD PTR [rsp+0x30],xmm2
  401bdd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401be3:	movsd  QWORD PTR [rsp+0x40],xmm0
  401be9:	call   rax
  401beb:	nop
  401bec:	add    rsp,0x58
  401bf0:	ret    
  401bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	mov    QWORD PTR [rip+0x6a59],rcx        # 0x408660
  401c07:	jmp    0x402d78
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	push   rsi
  401c11:	push   rbx
  401c12:	sub    rsp,0x78
  401c16:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401c1b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401c20:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401c26:	cmp    DWORD PTR [rcx],0x6
  401c29:	ja     0x401d00
  401c2f:	mov    edx,DWORD PTR [rcx]
  401c31:	lea    rax,[rip+0x3acc]        # 0x405704
  401c38:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c3c:	add    rax,rdx
  401c3f:	jmp    rax
  401c41:	lea    rbx,[rip+0x3998]        # 0x4055e0
  401c48:	nop    DWORD PTR [rax+rax*1+0x0]
  401c50:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401c56:	mov    rsi,QWORD PTR [rcx+0x8]
  401c5a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401c5f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401c64:	call   0x402d90
  401c69:	movsd  QWORD PTR [rsp+0x30],xmm8
  401c70:	lea    rcx,[rax+0x60]
  401c74:	lea    rdx,[rip+0x3a5d]        # 0x4056d8
  401c7b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401c81:	mov    r9,rsi
  401c84:	mov    r8,rbx
  401c87:	movsd  QWORD PTR [rsp+0x20],xmm6
  401c8d:	call   0x402d18
  401c92:	nop
  401c93:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401c98:	xor    eax,eax
  401c9a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401c9f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ca5:	add    rsp,0x78
  401ca9:	pop    rbx
  401caa:	pop    rsi
  401cab:	ret    
  401cac:	nop    DWORD PTR [rax+0x0]
  401cb0:	lea    rbx,[rip+0x3948]        # 0x4055ff
  401cb7:	jmp    0x401c50
  401cb9:	nop    DWORD PTR [rax+0x0]
  401cc0:	lea    rbx,[rip+0x3959]        # 0x405620
  401cc7:	jmp    0x401c50
  401cc9:	nop    DWORD PTR [rax+0x0]
  401cd0:	lea    rbx,[rip+0x39b9]        # 0x405690
  401cd7:	jmp    0x401c50
  401cdc:	nop    DWORD PTR [rax+0x0]
  401ce0:	lea    rbx,[rip+0x3981]        # 0x405668
  401ce7:	jmp    0x401c50
  401cec:	nop    DWORD PTR [rax+0x0]
  401cf0:	lea    rbx,[rip+0x3949]        # 0x405640
  401cf7:	jmp    0x401c50
  401cfc:	nop    DWORD PTR [rax+0x0]
  401d00:	lea    rbx,[rip+0x39bf]        # 0x4056c6
  401d07:	jmp    0x401c50
  401d0c:	nop
  401d0d:	nop
  401d0e:	nop
  401d0f:	nop
  401d10:	fninit 
  401d12:	ret    
  401d13:	nop
  401d14:	nop
  401d15:	nop
  401d16:	nop
  401d17:	nop
  401d18:	nop
  401d19:	nop
  401d1a:	nop
  401d1b:	nop
  401d1c:	nop
  401d1d:	nop
  401d1e:	nop
  401d1f:	nop
  401d20:	mov    rax,rcx
  401d23:	ret    
  401d24:	xchg   ax,ax
  401d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d30:	mov    rax,rcx
  401d33:	ret    
  401d34:	nop
  401d35:	nop
  401d36:	nop
  401d37:	nop
  401d38:	nop
  401d39:	nop
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	push   rsi
  401d41:	push   rbx
  401d42:	sub    rsp,0x38
  401d46:	lea    rax,[rsp+0x58]
  401d4b:	mov    rbx,rcx
  401d4e:	mov    QWORD PTR [rsp+0x58],rdx
  401d53:	mov    QWORD PTR [rsp+0x60],r8
  401d58:	mov    QWORD PTR [rsp+0x68],r9
  401d5d:	mov    QWORD PTR [rsp+0x28],rax
  401d62:	call   0x402d90
  401d67:	lea    rcx,[rip+0x39b2]        # 0x405720
  401d6e:	lea    r9,[rax+0x60]
  401d72:	mov    r8d,0x1b
  401d78:	mov    edx,0x1
  401d7d:	call   0x402d08
  401d82:	mov    rsi,QWORD PTR [rsp+0x28]
  401d87:	call   0x402d90
  401d8c:	lea    rcx,[rax+0x60]
  401d90:	mov    rdx,rbx
  401d93:	mov    r8,rsi
  401d96:	call   0x402cd0
  401d9b:	call   0x402d38
  401da0:	nop
  401da1:	nop    DWORD PTR [rax+rax*1+0x0]
  401da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401db0:	push   r13
  401db2:	push   r12
  401db4:	push   rbp
  401db5:	push   rdi
  401db6:	push   rsi
  401db7:	push   rbx
  401db8:	sub    rsp,0x58
  401dbc:	movsxd rbp,DWORD PTR [rip+0x68c1]        # 0x408684
  401dc3:	mov    rbx,rcx
  401dc6:	mov    rsi,rdx
  401dc9:	mov    rdi,r8
  401dcc:	test   ebp,ebp
  401dce:	jle    0x401eca
  401dd4:	mov    rax,QWORD PTR [rip+0x68ad]        # 0x408688
  401ddb:	xor    r9d,r9d
  401dde:	add    rax,0x8
  401de2:	mov    r10,QWORD PTR [rax]
  401de5:	cmp    rbx,r10
  401de8:	jb     0x401dfe
  401dea:	mov    rdx,QWORD PTR [rax+0x8]
  401dee:	mov    r11d,DWORD PTR [rdx+0x8]
  401df2:	add    r10,r11
  401df5:	cmp    rbx,r10
  401df8:	jb     0x401eb0
  401dfe:	add    r9d,0x1
  401e02:	add    rax,0x18
  401e06:	cmp    r9d,ebp
  401e09:	jne    0x401de2
  401e0b:	mov    rcx,rbx
  401e0e:	call   0x402a20
  401e13:	test   rax,rax
  401e16:	mov    r12,rax
  401e19:	je     0x401f02
  401e1f:	lea    rbp,[rbp+rbp*2+0x0]
  401e24:	shl    rbp,0x3
  401e28:	mov    r13,rbp
  401e2b:	add    r13,QWORD PTR [rip+0x6856]        # 0x408688
  401e32:	mov    QWORD PTR [r13+0x10],rax
  401e36:	mov    DWORD PTR [r13+0x0],0x0
  401e3e:	call   0x402b40
  401e43:	mov    edx,DWORD PTR [r12+0xc]
  401e48:	mov    r8d,0x30
  401e4e:	add    rax,rdx
  401e51:	lea    rdx,[rsp+0x20]
  401e56:	mov    QWORD PTR [r13+0x8],rax
  401e5a:	mov    rax,QWORD PTR [rip+0x6827]        # 0x408688
  401e61:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401e66:	call   QWORD PTR [rip+0x75f8]        # 0x409464
  401e6c:	test   rax,rax
  401e6f:	je     0x401ee5
  401e71:	mov    eax,DWORD PTR [rsp+0x44]
  401e75:	lea    edx,[rax-0x4]
  401e78:	and    edx,0xfffffffb
  401e7b:	je     0x401ea9
  401e7d:	sub    eax,0x40
  401e80:	and    eax,0xffffffbf
  401e83:	je     0x401ea9
  401e85:	mov    r9,rbp
  401e88:	add    r9,QWORD PTR [rip+0x67f9]        # 0x408688
  401e8f:	mov    r8d,0x40
  401e95:	mov    rdx,QWORD PTR [rsp+0x38]
  401e9a:	mov    rcx,QWORD PTR [rsp+0x20]
  401e9f:	call   QWORD PTR [rip+0x75b7]        # 0x40945c
  401ea5:	test   eax,eax
  401ea7:	je     0x401ed1
  401ea9:	add    DWORD PTR [rip+0x67d4],0x1        # 0x408684
  401eb0:	mov    r8,rdi
  401eb3:	mov    rdx,rsi
  401eb6:	mov    rcx,rbx
  401eb9:	add    rsp,0x58
  401ebd:	pop    rbx
  401ebe:	pop    rsi
  401ebf:	pop    rdi
  401ec0:	pop    rbp
  401ec1:	pop    r12
  401ec3:	pop    r13
  401ec5:	jmp    0x402cf0
  401eca:	xor    ebp,ebp
  401ecc:	jmp    0x401e0b
  401ed1:	call   QWORD PTR [rip+0x7505]        # 0x4093dc
  401ed7:	lea    rcx,[rip+0x38ba]        # 0x405798
  401ede:	mov    edx,eax
  401ee0:	call   0x401d40
  401ee5:	mov    rax,QWORD PTR [rip+0x679c]        # 0x408688
  401eec:	mov    edx,DWORD PTR [r12+0x8]
  401ef1:	lea    rcx,[rip+0x3868]        # 0x405760
  401ef8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401efd:	call   0x401d40
  401f02:	lea    rcx,[rip+0x3837]        # 0x405740
  401f09:	mov    rdx,rbx
  401f0c:	call   0x401d40
  401f11:	nop
  401f12:	nop    DWORD PTR [rax+0x0]
  401f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f20:	push   rbp
  401f21:	push   r14
  401f23:	push   r13
  401f25:	push   r12
  401f27:	push   rdi
  401f28:	push   rsi
  401f29:	push   rbx
  401f2a:	mov    rbp,rsp
  401f2d:	sub    rsp,0x60
  401f31:	mov    ebx,DWORD PTR [rip+0x6749]        # 0x408680
  401f37:	test   ebx,ebx
  401f39:	je     0x401f50
  401f3b:	mov    rsp,rbp
  401f3e:	pop    rbx
  401f3f:	pop    rsi
  401f40:	pop    rdi
  401f41:	pop    r12
  401f43:	pop    r13
  401f45:	pop    r14
  401f47:	pop    rbp
  401f48:	ret    
  401f49:	nop    DWORD PTR [rax+0x0]
  401f50:	mov    DWORD PTR [rip+0x6726],0x1        # 0x408680
  401f5a:	call   0x402a70
  401f5f:	cdqe   
  401f61:	lea    rax,[rax+rax*2]
  401f65:	lea    rax,[rax*8+0x1e]
  401f6d:	and    rax,0xfffffffffffffff0
  401f71:	call   0x402c90
  401f76:	mov    rsi,QWORD PTR [rip+0x38f3]        # 0x405870
  401f7d:	mov    rbx,QWORD PTR [rip+0x38fc]        # 0x405880
  401f84:	sub    rsp,rax
  401f87:	mov    DWORD PTR [rip+0x66f3],0x0        # 0x408684
  401f91:	lea    rax,[rsp+0x20]
  401f96:	mov    QWORD PTR [rip+0x66eb],rax        # 0x408688
  401f9d:	mov    rax,rsi
  401fa0:	sub    rax,rbx
  401fa3:	cmp    rax,0x7
  401fa7:	jle    0x401f3b
  401fa9:	cmp    rax,0xb
  401fad:	jle    0x401fd5
  401faf:	mov    r11d,DWORD PTR [rbx]
  401fb2:	test   r11d,r11d
  401fb5:	jne    0x402100
  401fbb:	mov    r10d,DWORD PTR [rbx+0x4]
  401fbf:	test   r10d,r10d
  401fc2:	jne    0x402100
  401fc8:	mov    r9d,DWORD PTR [rbx+0x8]
  401fcc:	test   r9d,r9d
  401fcf:	jne    0x401fec
  401fd1:	add    rbx,0xc
  401fd5:	mov    r8d,DWORD PTR [rbx]
  401fd8:	test   r8d,r8d
  401fdb:	jne    0x402100
  401fe1:	mov    ecx,DWORD PTR [rbx+0x4]
  401fe4:	test   ecx,ecx
  401fe6:	jne    0x402100
  401fec:	mov    edx,DWORD PTR [rbx+0x8]
  401fef:	cmp    edx,0x1
  401ff2:	jne    0x40220c
  401ff8:	add    rbx,0xc
  401ffc:	cmp    rbx,rsi
  401fff:	jae    0x401f3b
  402005:	mov    r12,QWORD PTR [rip+0x3894]        # 0x4058a0
  40200c:	lea    r13,[rbp-0x30]
  402010:	movabs r14,0xffffffff00000000
  40201a:	mov    ecx,DWORD PTR [rbx+0x4]
  40201d:	mov    eax,DWORD PTR [rbx]
  40201f:	movzx  edx,BYTE PTR [rbx+0x8]
  402023:	add    rax,r12
  402026:	add    rcx,r12
  402029:	cmp    edx,0x10
  40202c:	mov    r8,QWORD PTR [rax]
  40202f:	je     0x402176
  402035:	jbe    0x40213d
  40203b:	cmp    edx,0x20
  40203e:	je     0x4021bf
  402044:	cmp    edx,0x40
  402047:	jne    0x4021ab
  40204d:	sub    r8,rax
  402050:	mov    rdx,r13
  402053:	mov    rdi,r13
  402056:	mov    rax,r8
  402059:	add    rax,QWORD PTR [rcx]
  40205c:	mov    r8d,0x8
  402062:	mov    QWORD PTR [rbp-0x30],rax
  402066:	call   0x401db0
  40206b:	add    rbx,0xc
  40206f:	cmp    rbx,rsi
  402072:	jb     0x40201a
  402074:	mov    eax,DWORD PTR [rip+0x660a]        # 0x408684
  40207a:	xor    ebx,ebx
  40207c:	xor    esi,esi
  40207e:	test   eax,eax
  402080:	jle    0x401f3b
  402086:	mov    r14,QWORD PTR [rip+0x73d7]        # 0x409464
  40208d:	lea    r13,[rbp-0x34]
  402091:	mov    r12,QWORD PTR [rip+0x73c4]        # 0x40945c
  402098:	jmp    0x4020b3
  40209a:	nop    WORD PTR [rax+rax*1+0x0]
  4020a0:	add    esi,0x1
  4020a3:	add    rbx,0x18
  4020a7:	cmp    esi,DWORD PTR [rip+0x65d7]        # 0x408684
  4020ad:	jge    0x401f3b
  4020b3:	mov    rax,rbx
  4020b6:	add    rax,QWORD PTR [rip+0x65cb]        # 0x408688
  4020bd:	mov    edx,DWORD PTR [rax]
  4020bf:	test   edx,edx
  4020c1:	je     0x4020a0
  4020c3:	mov    rcx,QWORD PTR [rax+0x8]
  4020c7:	mov    r8d,0x30
  4020cd:	mov    rdx,rdi
  4020d0:	call   r14
  4020d3:	test   rax,rax
  4020d6:	je     0x4021ee
  4020dc:	mov    rax,QWORD PTR [rip+0x65a5]        # 0x408688
  4020e3:	mov    r9,r13
  4020e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4020ea:	mov    rcx,QWORD PTR [rbp-0x30]
  4020ee:	mov    r8d,DWORD PTR [rax+rbx*1]
  4020f2:	call   r12
  4020f5:	jmp    0x4020a0
  4020f7:	nop    WORD PTR [rax+rax*1+0x0]
  402100:	cmp    rbx,rsi
  402103:	jae    0x401f3b
  402109:	mov    r12,QWORD PTR [rip+0x3790]        # 0x4058a0
  402110:	lea    rdi,[rbp-0x30]
  402114:	mov    ecx,DWORD PTR [rbx+0x4]
  402117:	mov    eax,DWORD PTR [rbx]
  402119:	mov    r8d,0x4
  40211f:	mov    rdx,rdi
  402122:	add    rbx,0x8
  402126:	add    rcx,r12
  402129:	add    eax,DWORD PTR [rcx]
  40212b:	mov    DWORD PTR [rbp-0x30],eax
  40212e:	call   0x401db0
  402133:	cmp    rbx,rsi
  402136:	jb     0x402114
  402138:	jmp    0x402074
  40213d:	cmp    edx,0x8
  402140:	jne    0x4021ab
  402142:	movzx  edx,BYTE PTR [rcx]
  402145:	mov    rdi,r13
  402148:	mov    r10,rdx
  40214b:	or     r10,0xffffffffffffff00
  402152:	test   dl,dl
  402154:	cmovs  rdx,r10
  402158:	sub    rdx,rax
  40215b:	lea    rax,[r8+rdx*1]
  40215f:	mov    r8d,0x1
  402165:	mov    rdx,r13
  402168:	mov    QWORD PTR [rbp-0x30],rax
  40216c:	call   0x401db0
  402171:	jmp    0x40206b
  402176:	movzx  edx,WORD PTR [rcx]
  402179:	mov    rdi,r13
  40217c:	mov    r10,rdx
  40217f:	or     r10,0xffffffffffff0000
  402186:	test   dx,dx
  402189:	cmovs  rdx,r10
  40218d:	sub    rdx,rax
  402190:	lea    rax,[r8+rdx*1]
  402194:	mov    r8d,0x2
  40219a:	mov    rdx,r13
  40219d:	mov    QWORD PTR [rbp-0x30],rax
  4021a1:	call   0x401db0
  4021a6:	jmp    0x40206b
  4021ab:	lea    rcx,[rip+0x3646]        # 0x4057f8
  4021b2:	mov    QWORD PTR [rbp-0x30],0x0
  4021ba:	call   0x401d40
  4021bf:	mov    edx,DWORD PTR [rcx]
  4021c1:	mov    rdi,r13
  4021c4:	mov    r10,rdx
  4021c7:	or     r10,r14
  4021ca:	test   edx,edx
  4021cc:	cmovs  rdx,r10
  4021d0:	sub    rdx,rax
  4021d3:	lea    rax,[r8+rdx*1]
  4021d7:	mov    r8d,0x4
  4021dd:	mov    rdx,r13
  4021e0:	mov    QWORD PTR [rbp-0x30],rax
  4021e4:	call   0x401db0
  4021e9:	jmp    0x40206b
  4021ee:	add    rbx,QWORD PTR [rip+0x6493]        # 0x408688
  4021f5:	lea    rcx,[rip+0x3564]        # 0x405760
  4021fc:	mov    rax,QWORD PTR [rbx+0x10]
  402200:	mov    r8,QWORD PTR [rbx+0x8]
  402204:	mov    edx,DWORD PTR [rax+0x8]
  402207:	call   0x401d40
  40220c:	lea    rcx,[rip+0x35ad]        # 0x4057c0
  402213:	call   0x401d40
  402218:	nop
  402219:	nop
  40221a:	nop
  40221b:	nop
  40221c:	nop
  40221d:	nop
  40221e:	nop
  40221f:	nop
  402220:	sub    rsp,0x28
  402224:	mov    eax,DWORD PTR [rcx]
  402226:	cmp    eax,0xc0000091
  40222b:	ja     0x402290
  40222d:	cmp    eax,0xc000008d
  402232:	jae    0x4022af
  402234:	cmp    eax,0xc0000008
  402239:	je     0x402350
  40223f:	ja     0x402320
  402245:	cmp    eax,0x80000002
  40224a:	je     0x402350
  402250:	cmp    eax,0xc0000005
  402255:	jne    0x40232e
  40225b:	xor    edx,edx
  40225d:	mov    ecx,0xb
  402262:	call   0x402ce8
  402267:	cmp    rax,0x1
  40226b:	je     0x4023b0
  402271:	test   rax,rax
  402274:	je     0x402390
  40227a:	mov    ecx,0xb
  40227f:	call   rax
  402281:	xor    eax,eax
  402283:	add    rsp,0x28
  402287:	ret    
  402288:	nop    DWORD PTR [rax+rax*1+0x0]
  402290:	cmp    eax,0xc0000094
  402295:	je     0x402360
  40229b:	ja     0x4022e0
  40229d:	cmp    eax,0xc0000092
  4022a2:	je     0x402350
  4022a8:	cmp    eax,0xc0000093
  4022ad:	jne    0x40232e
  4022af:	xor    edx,edx
  4022b1:	mov    ecx,0x8
  4022b6:	call   0x402ce8
  4022bb:	cmp    rax,0x1
  4022bf:	mov    rdx,rax
  4022c2:	je     0x402338
  4022c4:	test   rdx,rdx
  4022c7:	mov    eax,0x1
  4022cc:	je     0x402283
  4022ce:	mov    ecx,0x8
  4022d3:	call   rdx
  4022d5:	xor    eax,eax
  4022d7:	add    rsp,0x28
  4022db:	ret    
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	cmp    eax,0xc0000095
  4022e5:	je     0x402350
  4022e7:	cmp    eax,0xc0000096
  4022ec:	jne    0x40232e
  4022ee:	xor    edx,edx
  4022f0:	mov    ecx,0x4
  4022f5:	call   0x402ce8
  4022fa:	cmp    rax,0x1
  4022fe:	je     0x40239a
  402304:	test   rax,rax
  402307:	je     0x402390
  40230d:	mov    ecx,0x4
  402312:	call   rax
  402314:	xor    eax,eax
  402316:	jmp    0x402283
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	cmp    eax,0xc000001d
  402325:	je     0x4022ee
  402327:	cmp    eax,0xc000008c
  40232c:	je     0x402350
  40232e:	mov    eax,0x1
  402333:	add    rsp,0x28
  402337:	ret    
  402338:	mov    edx,0x1
  40233d:	mov    ecx,0x8
  402342:	call   0x402ce8
  402347:	call   0x401d10
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	xor    eax,eax
  402352:	add    rsp,0x28
  402356:	ret    
  402357:	nop    WORD PTR [rax+rax*1+0x0]
  402360:	xor    edx,edx
  402362:	mov    ecx,0x8
  402367:	call   0x402ce8
  40236c:	cmp    rax,0x1
  402370:	mov    rdx,rax
  402373:	jne    0x4022c4
  402379:	mov    edx,0x1
  40237e:	mov    ecx,0x8
  402383:	call   0x402ce8
  402388:	xor    eax,eax
  40238a:	jmp    0x402283
  40238f:	nop
  402390:	mov    eax,0x4
  402395:	add    rsp,0x28
  402399:	ret    
  40239a:	mov    edx,0x1
  40239f:	mov    ecx,0x4
  4023a4:	call   0x402ce8
  4023a9:	xor    eax,eax
  4023ab:	jmp    0x402283
  4023b0:	mov    edx,0x1
  4023b5:	mov    ecx,0xb
  4023ba:	call   0x402ce8
  4023bf:	xor    eax,eax
  4023c1:	jmp    0x402283
  4023c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023d0:	push   r12
  4023d2:	push   rbp
  4023d3:	push   rdi
  4023d4:	push   rsi
  4023d5:	push   rbx
  4023d6:	sub    rsp,0x20
  4023da:	call   0x402b40
  4023df:	mov    rbp,rax
  4023e2:	mov    eax,DWORD PTR [rip+0x62e0]        # 0x4086c8
  4023e8:	test   eax,eax
  4023ea:	jne    0x402411
  4023ec:	test   rbp,rbp
  4023ef:	je     0x402411
  4023f1:	lea    rcx,[rip+0x3438]        # 0x405830
  4023f8:	mov    DWORD PTR [rip+0x62c6],0x1        # 0x4086c8
  402402:	call   0x402980
  402407:	test   rax,rax
  40240a:	je     0x402420
  40240c:	mov    eax,0x1
  402411:	add    rsp,0x20
  402415:	pop    rbx
  402416:	pop    rsi
  402417:	pop    rdi
  402418:	pop    rbp
  402419:	pop    r12
  40241b:	ret    
  40241c:	nop    DWORD PTR [rax+0x0]
  402420:	lea    rbx,[rip+0x63d9]        # 0x408800
  402427:	mov    ecx,0x30
  40242c:	lea    rdx,[rip+0x62cd]        # 0x408700
  402433:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402220
  40243a:	xor    esi,esi
  40243c:	mov    rdi,rbx
  40243f:	rep stos QWORD PTR es:[rdi],rax
  402442:	mov    rdi,rdx
  402445:	sub    r12,rbp
  402448:	mov    cl,0x20
  40244a:	rep stos QWORD PTR es:[rdi],rax
  40244d:	mov    rdi,rdx
  402450:	jmp    0x402480
  402452:	mov    BYTE PTR [rdi],0x9
  402455:	mov    DWORD PTR [rdi+0x4],r12d
  402459:	add    rsi,0x1
  40245d:	mov    edx,DWORD PTR [rax+0xc]
  402460:	add    rbx,0xc
  402464:	mov    DWORD PTR [rbx-0xc],edx
  402467:	add    edx,DWORD PTR [rax+0x8]
  40246a:	mov    rax,rdi
  40246d:	sub    rax,rbp
  402470:	add    rdi,0x8
  402474:	mov    DWORD PTR [rbx-0x4],eax
  402477:	mov    DWORD PTR [rbx-0x8],edx
  40247a:	cmp    rsi,0x20
  40247e:	je     0x4024b5
  402480:	mov    rcx,rsi
  402483:	call   0x402ab0
  402488:	test   rax,rax
  40248b:	jne    0x402452
  40248d:	test   rsi,rsi
  402490:	je     0x40240c
  402496:	mov    edx,esi
  402498:	nop    DWORD PTR [rax+rax*1+0x0]
  4024a0:	mov    r8,rbp
  4024a3:	lea    rcx,[rip+0x6356]        # 0x408800
  4024aa:	call   QWORD PTR [rip+0x6f64]        # 0x409414
  4024b0:	jmp    0x40240c
  4024b5:	mov    edx,0x20
  4024ba:	jmp    0x4024a0
  4024bc:	nop    DWORD PTR [rax+0x0]
  4024c0:	push   rbx
  4024c1:	sub    rsp,0x20
  4024c5:	mov    rdx,QWORD PTR [rcx]
  4024c8:	mov    eax,DWORD PTR [rdx]
  4024ca:	mov    r8d,eax
  4024cd:	and    r8d,0x20ffffff
  4024d4:	cmp    r8d,0x20474343
  4024db:	je     0x4025e0
  4024e1:	cmp    eax,0xc0000091
  4024e6:	mov    rbx,rcx
  4024e9:	ja     0x402570
  4024ef:	cmp    eax,0xc000008d
  4024f4:	jae    0x402587
  4024fa:	cmp    eax,0xc0000008
  4024ff:	je     0x402533
  402501:	ja     0x402540
  402503:	cmp    eax,0x80000002
  402508:	je     0x402533
  40250a:	cmp    eax,0xc0000005
  40250f:	jne    0x402552
  402511:	xor    edx,edx
  402513:	mov    ecx,0xb
  402518:	call   0x402ce8
  40251d:	cmp    rax,0x1
  402521:	je     0x402650
  402527:	test   rax,rax
  40252a:	je     0x402552
  40252c:	mov    ecx,0xb
  402531:	call   rax
  402533:	mov    eax,0xffffffff
  402538:	add    rsp,0x20
  40253c:	pop    rbx
  40253d:	ret    
  40253e:	xchg   ax,ax
  402540:	cmp    eax,0xc000001d
  402545:	je     0x402606
  40254b:	cmp    eax,0xc000008c
  402550:	je     0x402533
  402552:	mov    rax,QWORD PTR [rip+0x6167]        # 0x4086c0
  402559:	test   rax,rax
  40255c:	je     0x402538
  40255e:	mov    rcx,rbx
  402561:	add    rsp,0x20
  402565:	pop    rbx
  402566:	rex.W jmp rax
  402569:	nop    DWORD PTR [rax+0x0]
  402570:	cmp    eax,0xc0000094
  402575:	je     0x4025b2
  402577:	ja     0x4025f0
  402579:	cmp    eax,0xc0000092
  40257e:	je     0x402533
  402580:	cmp    eax,0xc0000093
  402585:	jne    0x402552
  402587:	xor    edx,edx
  402589:	mov    ecx,0x8
  40258e:	call   0x402ce8
  402593:	cmp    rax,0x1
  402597:	jne    0x4025c4
  402599:	mov    edx,0x1
  40259e:	mov    ecx,0x8
  4025a3:	call   0x402ce8
  4025a8:	call   0x401d10
  4025ad:	jmp    0x402533
  4025b2:	xor    edx,edx
  4025b4:	mov    ecx,0x8
  4025b9:	call   0x402ce8
  4025be:	cmp    rax,0x1
  4025c2:	je     0x402632
  4025c4:	test   rax,rax
  4025c7:	je     0x402552
  4025c9:	mov    ecx,0x8
  4025ce:	call   rax
  4025d0:	mov    eax,0xffffffff
  4025d5:	jmp    0x402538
  4025da:	nop    WORD PTR [rax+rax*1+0x0]
  4025e0:	test   BYTE PTR [rdx+0x4],0x1
  4025e4:	jne    0x4024e1
  4025ea:	jmp    0x402533
  4025ef:	nop
  4025f0:	cmp    eax,0xc0000095
  4025f5:	je     0x402533
  4025fb:	cmp    eax,0xc0000096
  402600:	jne    0x402552
  402606:	xor    edx,edx
  402608:	mov    ecx,0x4
  40260d:	call   0x402ce8
  402612:	cmp    rax,0x1
  402616:	je     0x402664
  402618:	test   rax,rax
  40261b:	je     0x402552
  402621:	mov    ecx,0x4
  402626:	call   rax
  402628:	mov    eax,0xffffffff
  40262d:	jmp    0x402538
  402632:	mov    edx,0x1
  402637:	mov    ecx,0x8
  40263c:	call   0x402ce8
  402641:	jmp    0x402533
  402646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402650:	mov    edx,0x1
  402655:	mov    ecx,0xb
  40265a:	call   0x402ce8
  40265f:	jmp    0x402533
  402664:	mov    edx,0x1
  402669:	mov    ecx,0x4
  40266e:	call   0x402ce8
  402673:	jmp    0x402533
  402678:	nop
  402679:	nop
  40267a:	nop
  40267b:	nop
  40267c:	nop
  40267d:	nop
  40267e:	nop
  40267f:	nop
  402680:	push   rbp
  402681:	push   rdi
  402682:	push   rsi
  402683:	push   rbx
  402684:	sub    rsp,0x28
  402688:	lea    rcx,[rip+0x6311]        # 0x4089a0
  40268f:	call   QWORD PTR [rip+0x6d27]        # 0x4093bc
  402695:	mov    rbx,QWORD PTR [rip+0x62e4]        # 0x408980
  40269c:	test   rbx,rbx
  40269f:	je     0x4026d4
  4026a1:	mov    rbp,QWORD PTR [rip+0x6da4]        # 0x40944c
  4026a8:	mov    rdi,QWORD PTR [rip+0x6d2d]        # 0x4093dc
  4026af:	nop
  4026b0:	mov    ecx,DWORD PTR [rbx]
  4026b2:	call   rbp
  4026b4:	mov    rsi,rax
  4026b7:	call   rdi
  4026b9:	test   eax,eax
  4026bb:	jne    0x4026cb
  4026bd:	test   rsi,rsi
  4026c0:	je     0x4026cb
  4026c2:	mov    rax,QWORD PTR [rbx+0x8]
  4026c6:	mov    rcx,rsi
  4026c9:	call   rax
  4026cb:	mov    rbx,QWORD PTR [rbx+0x10]
  4026cf:	test   rbx,rbx
  4026d2:	jne    0x4026b0
  4026d4:	mov    rax,QWORD PTR [rip+0x6d29]        # 0x409404
  4026db:	lea    rcx,[rip+0x62be]        # 0x4089a0
  4026e2:	add    rsp,0x28
  4026e6:	pop    rbx
  4026e7:	pop    rsi
  4026e8:	pop    rdi
  4026e9:	pop    rbp
  4026ea:	rex.W jmp rax
  4026ed:	nop    DWORD PTR [rax]
  4026f0:	push   rdi
  4026f1:	push   rsi
  4026f2:	push   rbx
  4026f3:	sub    rsp,0x20
  4026f7:	mov    eax,DWORD PTR [rip+0x628b]        # 0x408988
  4026fd:	test   eax,eax
  4026ff:	jne    0x402710
  402701:	add    rsp,0x20
  402705:	pop    rbx
  402706:	pop    rsi
  402707:	pop    rdi
  402708:	ret    
  402709:	nop    DWORD PTR [rax+0x0]
  402710:	mov    rsi,rdx
  402713:	mov    edi,ecx
  402715:	mov    edx,0x18
  40271a:	mov    ecx,0x1
  40271f:	call   0x402d30
  402724:	test   rax,rax
  402727:	mov    rbx,rax
  40272a:	je     0x402768
  40272c:	mov    DWORD PTR [rax],edi
  40272e:	mov    QWORD PTR [rax+0x8],rsi
  402732:	lea    rcx,[rip+0x6267]        # 0x4089a0
  402739:	call   QWORD PTR [rip+0x6c7d]        # 0x4093bc
  40273f:	mov    rax,QWORD PTR [rip+0x623a]        # 0x408980
  402746:	lea    rcx,[rip+0x6253]        # 0x4089a0
  40274d:	mov    QWORD PTR [rip+0x622c],rbx        # 0x408980
  402754:	mov    QWORD PTR [rbx+0x10],rax
  402758:	call   QWORD PTR [rip+0x6ca6]        # 0x409404
  40275e:	xor    eax,eax
  402760:	add    rsp,0x20
  402764:	pop    rbx
  402765:	pop    rsi
  402766:	pop    rdi
  402767:	ret    
  402768:	mov    eax,0xffffffff
  40276d:	jmp    0x402701
  40276f:	nop
  402770:	push   rbx
  402771:	sub    rsp,0x20
  402775:	mov    eax,DWORD PTR [rip+0x620d]        # 0x408988
  40277b:	test   eax,eax
  40277d:	jne    0x402790
  40277f:	xor    eax,eax
  402781:	add    rsp,0x20
  402785:	pop    rbx
  402786:	ret    
  402787:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	mov    ebx,ecx
  402792:	lea    rcx,[rip+0x6207]        # 0x4089a0
  402799:	call   QWORD PTR [rip+0x6c1d]        # 0x4093bc
  40279f:	mov    rdx,QWORD PTR [rip+0x61da]        # 0x408980
  4027a6:	test   rdx,rdx
  4027a9:	je     0x4027c7
  4027ab:	mov    eax,DWORD PTR [rdx]
  4027ad:	cmp    eax,ebx
  4027af:	jne    0x4027be
  4027b1:	jmp    0x4027ff
  4027b3:	mov    r8d,DWORD PTR [rax]
  4027b6:	cmp    r8d,ebx
  4027b9:	je     0x4027e0
  4027bb:	mov    rdx,rax
  4027be:	mov    rax,QWORD PTR [rdx+0x10]
  4027c2:	test   rax,rax
  4027c5:	jne    0x4027b3
  4027c7:	lea    rcx,[rip+0x61d2]        # 0x4089a0
  4027ce:	call   QWORD PTR [rip+0x6c30]        # 0x409404
  4027d4:	xor    eax,eax
  4027d6:	add    rsp,0x20
  4027da:	pop    rbx
  4027db:	ret    
  4027dc:	nop    DWORD PTR [rax+0x0]
  4027e0:	mov    rcx,rax
  4027e3:	mov    rax,QWORD PTR [rax+0x10]
  4027e7:	mov    QWORD PTR [rdx+0x10],rax
  4027eb:	call   0x402d10
  4027f0:	lea    rcx,[rip+0x61a9]        # 0x4089a0
  4027f7:	call   QWORD PTR [rip+0x6c07]        # 0x409404
  4027fd:	jmp    0x4027d4
  4027ff:	mov    rax,QWORD PTR [rdx+0x10]
  402803:	mov    rcx,rdx
  402806:	mov    QWORD PTR [rip+0x6173],rax        # 0x408980
  40280d:	jmp    0x4027eb
  40280f:	nop
  402810:	push   rbx
  402811:	sub    rsp,0x20
  402815:	cmp    edx,0x1
  402818:	je     0x4028b0
  40281e:	jb     0x402850
  402820:	cmp    edx,0x2
  402823:	je     0x402840
  402825:	cmp    edx,0x3
  402828:	jne    0x402845
  40282a:	mov    eax,DWORD PTR [rip+0x6158]        # 0x408988
  402830:	test   eax,eax
  402832:	je     0x402845
  402834:	call   0x402680
  402839:	jmp    0x402845
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]
  402840:	call   0x401d10
  402845:	mov    eax,0x1
  40284a:	add    rsp,0x20
  40284e:	pop    rbx
  40284f:	ret    
  402850:	mov    eax,DWORD PTR [rip+0x6132]        # 0x408988
  402856:	test   eax,eax
  402858:	jne    0x4028e0
  40285e:	mov    eax,DWORD PTR [rip+0x6124]        # 0x408988
  402864:	cmp    eax,0x1
  402867:	jne    0x402845
  402869:	mov    rcx,QWORD PTR [rip+0x6110]        # 0x408980
  402870:	test   rcx,rcx
  402873:	je     0x402886
  402875:	mov    rbx,QWORD PTR [rcx+0x10]
  402879:	call   0x402d10
  40287e:	test   rbx,rbx
  402881:	mov    rcx,rbx
  402884:	jne    0x402875
  402886:	lea    rcx,[rip+0x6113]        # 0x4089a0
  40288d:	mov    QWORD PTR [rip+0x60e8],0x0        # 0x408980
  402898:	mov    DWORD PTR [rip+0x60e6],0x0        # 0x408988
  4028a2:	call   QWORD PTR [rip+0x6b0c]        # 0x4093b4
  4028a8:	jmp    0x402845
  4028aa:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	mov    eax,DWORD PTR [rip+0x60d2]        # 0x408988
  4028b6:	test   eax,eax
  4028b8:	je     0x4028d0
  4028ba:	mov    eax,0x1
  4028bf:	mov    DWORD PTR [rip+0x60bf],0x1        # 0x408988
  4028c9:	add    rsp,0x20
  4028cd:	pop    rbx
  4028ce:	ret    
  4028cf:	nop
  4028d0:	lea    rcx,[rip+0x60c9]        # 0x4089a0
  4028d7:	call   QWORD PTR [rip+0x6b1f]        # 0x4093fc
  4028dd:	jmp    0x4028ba
  4028df:	nop
  4028e0:	call   0x402680
  4028e5:	jmp    0x40285e
  4028ea:	nop
  4028eb:	nop
  4028ec:	nop
  4028ed:	nop
  4028ee:	nop
  4028ef:	nop
  4028f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4028f4:	add    rcx,rax
  4028f7:	xor    eax,eax
  4028f9:	cmp    DWORD PTR [rcx],0x4550
  4028ff:	je     0x402903
  402901:	repz ret 
  402903:	xor    eax,eax
  402905:	cmp    WORD PTR [rcx+0x18],0x20b
  40290b:	sete   al
  40290e:	ret    
  40290f:	nop
  402910:	cmp    WORD PTR [rcx],0x5a4d
  402915:	je     0x402920
  402917:	xor    eax,eax
  402919:	ret    
  40291a:	nop    WORD PTR [rax+rax*1+0x0]
  402920:	jmp    0x4028f0
  402922:	nop    DWORD PTR [rax+0x0]
  402926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402930:	movsxd rax,DWORD PTR [rcx+0x3c]
  402934:	add    rcx,rax
  402937:	movzx  eax,WORD PTR [rcx+0x14]
  40293b:	lea    rax,[rcx+rax*1+0x18]
  402940:	movzx  ecx,WORD PTR [rcx+0x6]
  402944:	test   ecx,ecx
  402946:	je     0x402971
  402948:	sub    ecx,0x1
  40294b:	lea    rcx,[rcx+rcx*4]
  40294f:	lea    r9,[rax+rcx*8+0x28]
  402954:	mov    r8d,DWORD PTR [rax+0xc]
  402958:	cmp    r8,rdx
  40295b:	mov    rcx,r8
  40295e:	ja     0x402968
  402960:	add    ecx,DWORD PTR [rax+0x8]
  402963:	cmp    rdx,rcx
  402966:	jb     0x402973
  402968:	add    rax,0x28
  40296c:	cmp    rax,r9
  40296f:	jne    0x402954
  402971:	xor    eax,eax
  402973:	repz ret 
  402975:	nop
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	push   rdi
  402981:	push   rsi
  402982:	push   rbx
  402983:	sub    rsp,0x20
  402987:	mov    rsi,rcx
  40298a:	call   0x402ce0
  40298f:	cmp    rax,0x8
  402993:	ja     0x4029b0
  402995:	mov    rbx,QWORD PTR [rip+0x2f04]        # 0x4058a0
  40299c:	xor    edi,edi
  40299e:	cmp    WORD PTR [rbx],0x5a4d
  4029a3:	je     0x4029c0
  4029a5:	mov    rax,rdi
  4029a8:	add    rsp,0x20
  4029ac:	pop    rbx
  4029ad:	pop    rsi
  4029ae:	pop    rdi
  4029af:	ret    
  4029b0:	xor    edi,edi
  4029b2:	mov    rax,rdi
  4029b5:	add    rsp,0x20
  4029b9:	pop    rbx
  4029ba:	pop    rsi
  4029bb:	pop    rdi
  4029bc:	ret    
  4029bd:	nop    DWORD PTR [rax]
  4029c0:	mov    rcx,rbx
  4029c3:	call   0x4028f0
  4029c8:	test   eax,eax
  4029ca:	je     0x4029a5
  4029cc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4029d0:	add    rdx,rbx
  4029d3:	movzx  eax,WORD PTR [rdx+0x14]
  4029d7:	lea    rbx,[rdx+rax*1+0x18]
  4029dc:	movzx  eax,WORD PTR [rdx+0x6]
  4029e0:	test   eax,eax
  4029e2:	je     0x4029a5
  4029e4:	sub    eax,0x1
  4029e7:	lea    rax,[rax+rax*4]
  4029eb:	lea    rdi,[rbx+rax*8+0x28]
  4029f0:	jmp    0x4029fb
  4029f2:	add    rbx,0x28
  4029f6:	cmp    rbx,rdi
  4029f9:	je     0x4029b0
  4029fb:	mov    r8d,0x8
  402a01:	mov    rdx,rsi
  402a04:	mov    rcx,rbx
  402a07:	call   0x402cd8
  402a0c:	test   eax,eax
  402a0e:	jne    0x4029f2
  402a10:	mov    rdi,rbx
  402a13:	mov    rax,rdi
  402a16:	add    rsp,0x20
  402a1a:	pop    rbx
  402a1b:	pop    rsi
  402a1c:	pop    rdi
  402a1d:	ret    
  402a1e:	xchg   ax,ax
  402a20:	push   rsi
  402a21:	push   rbx
  402a22:	sub    rsp,0x28
  402a26:	mov    rbx,QWORD PTR [rip+0x2e73]        # 0x4058a0
  402a2d:	cmp    WORD PTR [rbx],0x5a4d
  402a32:	je     0x402a40
  402a34:	xor    eax,eax
  402a36:	add    rsp,0x28
  402a3a:	pop    rbx
  402a3b:	pop    rsi
  402a3c:	ret    
  402a3d:	nop    DWORD PTR [rax]
  402a40:	mov    rsi,rcx
  402a43:	mov    rcx,rbx
  402a46:	call   0x4028f0
  402a4b:	test   eax,eax
  402a4d:	je     0x402a34
  402a4f:	sub    rsi,rbx
  402a52:	mov    rcx,rbx
  402a55:	mov    rdx,rsi
  402a58:	add    rsp,0x28
  402a5c:	pop    rbx
  402a5d:	pop    rsi
  402a5e:	jmp    0x402930
  402a63:	nop    DWORD PTR [rax]
  402a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a70:	push   rbx
  402a71:	sub    rsp,0x20
  402a75:	mov    rbx,QWORD PTR [rip+0x2e24]        # 0x4058a0
  402a7c:	xor    eax,eax
  402a7e:	cmp    WORD PTR [rbx],0x5a4d
  402a83:	je     0x402a90
  402a85:	add    rsp,0x20
  402a89:	pop    rbx
  402a8a:	ret    
  402a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	mov    rcx,rbx
  402a93:	call   0x4028f0
  402a98:	test   eax,eax
  402a9a:	je     0x402a85
  402a9c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402aa0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402aa5:	add    rsp,0x20
  402aa9:	pop    rbx
  402aaa:	ret    
  402aab:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	push   rdi
  402ab1:	push   rsi
  402ab2:	push   rbx
  402ab3:	sub    rsp,0x20
  402ab7:	mov    rsi,QWORD PTR [rip+0x2de2]        # 0x4058a0
  402abe:	xor    edi,edi
  402ac0:	mov    rbx,rcx
  402ac3:	cmp    WORD PTR [rsi],0x5a4d
  402ac8:	je     0x402ad5
  402aca:	mov    rax,rdi
  402acd:	add    rsp,0x20
  402ad1:	pop    rbx
  402ad2:	pop    rsi
  402ad3:	pop    rdi
  402ad4:	ret    
  402ad5:	mov    rcx,rsi
  402ad8:	call   0x4028f0
  402add:	test   eax,eax
  402adf:	je     0x402aca
  402ae1:	movsxd rax,DWORD PTR [rsi+0x3c]
  402ae5:	add    rsi,rax
  402ae8:	movzx  eax,WORD PTR [rsi+0x14]
  402aec:	lea    rdx,[rsi+rax*1+0x18]
  402af1:	movzx  eax,WORD PTR [rsi+0x6]
  402af5:	test   eax,eax
  402af7:	je     0x402aca
  402af9:	sub    eax,0x1
  402afc:	lea    rax,[rax+rax*4]
  402b00:	lea    rax,[rdx+rax*8+0x28]
  402b05:	test   BYTE PTR [rdx+0x27],0x20
  402b09:	je     0x402b14
  402b0b:	test   rbx,rbx
  402b0e:	je     0x402b30
  402b10:	sub    rbx,0x1
  402b14:	add    rdx,0x28
  402b18:	cmp    rdx,rax
  402b1b:	jne    0x402b05
  402b1d:	xor    edi,edi
  402b1f:	mov    rax,rdi
  402b22:	add    rsp,0x20
  402b26:	pop    rbx
  402b27:	pop    rsi
  402b28:	pop    rdi
  402b29:	ret    
  402b2a:	nop    WORD PTR [rax+rax*1+0x0]
  402b30:	mov    rdi,rdx
  402b33:	mov    rax,rdi
  402b36:	add    rsp,0x20
  402b3a:	pop    rbx
  402b3b:	pop    rsi
  402b3c:	pop    rdi
  402b3d:	ret    
  402b3e:	xchg   ax,ax
  402b40:	push   rsi
  402b41:	push   rbx
  402b42:	sub    rsp,0x28
  402b46:	mov    rsi,QWORD PTR [rip+0x2d53]        # 0x4058a0
  402b4d:	xor    ebx,ebx
  402b4f:	cmp    WORD PTR [rsi],0x5a4d
  402b54:	je     0x402b60
  402b56:	mov    rax,rbx
  402b59:	add    rsp,0x28
  402b5d:	pop    rbx
  402b5e:	pop    rsi
  402b5f:	ret    
  402b60:	mov    rcx,rsi
  402b63:	call   0x4028f0
  402b68:	test   eax,eax
  402b6a:	cmovne rbx,rsi
  402b6e:	mov    rax,rbx
  402b71:	add    rsp,0x28
  402b75:	pop    rbx
  402b76:	pop    rsi
  402b77:	ret    
  402b78:	nop    DWORD PTR [rax+rax*1+0x0]
  402b80:	push   rsi
  402b81:	push   rbx
  402b82:	sub    rsp,0x28
  402b86:	mov    rbx,QWORD PTR [rip+0x2d13]        # 0x4058a0
  402b8d:	xor    eax,eax
  402b8f:	cmp    WORD PTR [rbx],0x5a4d
  402b94:	je     0x402ba0
  402b96:	add    rsp,0x28
  402b9a:	pop    rbx
  402b9b:	pop    rsi
  402b9c:	ret    
  402b9d:	nop    DWORD PTR [rax]
  402ba0:	mov    rsi,rcx
  402ba3:	mov    rcx,rbx
  402ba6:	call   0x4028f0
  402bab:	test   eax,eax
  402bad:	je     0x402b96
  402baf:	sub    rsi,rbx
  402bb2:	mov    rcx,rbx
  402bb5:	mov    rdx,rsi
  402bb8:	call   0x402930
  402bbd:	test   rax,rax
  402bc0:	je     0x402bd1
  402bc2:	mov    eax,DWORD PTR [rax+0x24]
  402bc5:	not    eax
  402bc7:	shr    eax,0x1f
  402bca:	add    rsp,0x28
  402bce:	pop    rbx
  402bcf:	pop    rsi
  402bd0:	ret    
  402bd1:	xor    eax,eax
  402bd3:	jmp    0x402b96
  402bd5:	nop
  402bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402be0:	push   rbp
  402be1:	push   rdi
  402be2:	push   rsi
  402be3:	push   rbx
  402be4:	sub    rsp,0x28
  402be8:	mov    rdi,QWORD PTR [rip+0x2cb1]        # 0x4058a0
  402bef:	xor    ebp,ebp
  402bf1:	mov    esi,ecx
  402bf3:	cmp    WORD PTR [rdi],0x5a4d
  402bf8:	je     0x402c10
  402bfa:	mov    rax,rbp
  402bfd:	add    rsp,0x28
  402c01:	pop    rbx
  402c02:	pop    rsi
  402c03:	pop    rdi
  402c04:	pop    rbp
  402c05:	ret    
  402c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c10:	mov    rcx,rdi
  402c13:	call   0x4028f0
  402c18:	test   eax,eax
  402c1a:	je     0x402bfa
  402c1c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402c20:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402c27:	test   edx,edx
  402c29:	je     0x402bfa
  402c2b:	mov    ebx,edx
  402c2d:	mov    rcx,rdi
  402c30:	mov    rdx,rbx
  402c33:	call   0x402930
  402c38:	test   rax,rax
  402c3b:	je     0x402bfa
  402c3d:	add    rbx,rdi
  402c40:	mov    rdx,rbx
  402c43:	jne    0x402c57
  402c45:	jmp    0x402bfa
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	sub    esi,0x1
  402c53:	add    rdx,0x14
  402c57:	mov    ecx,DWORD PTR [rdx+0x4]
  402c5a:	test   ecx,ecx
  402c5c:	jne    0x402c65
  402c5e:	mov    eax,DWORD PTR [rdx+0xc]
  402c61:	test   eax,eax
  402c63:	je     0x402c80
  402c65:	test   esi,esi
  402c67:	jg     0x402c50
  402c69:	mov    ebp,DWORD PTR [rdx+0xc]
  402c6c:	add    rbp,rdi
  402c6f:	mov    rax,rbp
  402c72:	add    rsp,0x28
  402c76:	pop    rbx
  402c77:	pop    rsi
  402c78:	pop    rdi
  402c79:	pop    rbp
  402c7a:	ret    
  402c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c80:	xor    ebp,ebp
  402c82:	mov    rax,rbp
  402c85:	add    rsp,0x28
  402c89:	pop    rbx
  402c8a:	pop    rsi
  402c8b:	pop    rdi
  402c8c:	pop    rbp
  402c8d:	ret    
  402c8e:	nop
  402c8f:	nop
  402c90:	push   rcx
  402c91:	push   rax
  402c92:	cmp    rax,0x1000
  402c98:	lea    rcx,[rsp+0x18]
  402c9d:	jb     0x402cb8
  402c9f:	sub    rcx,0x1000
  402ca6:	or     QWORD PTR [rcx],0x0
  402caa:	sub    rax,0x1000
  402cb0:	cmp    rax,0x1000
  402cb6:	ja     0x402c9f
  402cb8:	sub    rcx,rax
  402cbb:	or     QWORD PTR [rcx],0x0
  402cbf:	pop    rax
  402cc0:	pop    rcx
  402cc1:	ret    
  402cc2:	nop
  402cc3:	nop
  402cc4:	nop
  402cc5:	nop
  402cc6:	nop
  402cc7:	nop
  402cc8:	nop
  402cc9:	nop
  402cca:	nop
  402ccb:	nop
  402ccc:	nop
  402ccd:	nop
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0x688e]        # 0x409564
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0x687e]        # 0x40955c
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0x686e]        # 0x409554
  402ce6:	nop
  402ce7:	nop
  402ce8:	jmp    QWORD PTR [rip+0x685e]        # 0x40954c
  402cee:	nop
  402cef:	nop
  402cf0:	jmp    QWORD PTR [rip+0x684e]        # 0x409544
  402cf6:	nop
  402cf7:	nop
  402cf8:	jmp    QWORD PTR [rip+0x683e]        # 0x40953c
  402cfe:	nop
  402cff:	nop
  402d00:	jmp    QWORD PTR [rip+0x682e]        # 0x409534
  402d06:	nop
  402d07:	nop
  402d08:	jmp    QWORD PTR [rip+0x681e]        # 0x40952c
  402d0e:	nop
  402d0f:	nop
  402d10:	jmp    QWORD PTR [rip+0x680e]        # 0x409524
  402d16:	nop
  402d17:	nop
  402d18:	jmp    QWORD PTR [rip+0x67fe]        # 0x40951c
  402d1e:	nop
  402d1f:	nop
  402d20:	jmp    QWORD PTR [rip+0x67ee]        # 0x409514
  402d26:	nop
  402d27:	nop
  402d28:	jmp    QWORD PTR [rip+0x67de]        # 0x40950c
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0x67ce]        # 0x409504
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0x67be]        # 0x4094fc
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0x67ae]        # 0x4094f4
  402d46:	nop
  402d47:	nop
  402d48:	jmp    QWORD PTR [rip+0x679e]        # 0x4094ec
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0x678e]        # 0x4094e4
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0x677e]        # 0x4094dc
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0x6766]        # 0x4094cc
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0x6756]        # 0x4094c4
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0x6746]        # 0x4094bc
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0x672e]        # 0x4094ac
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0x671e]        # 0x4094a4
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0x670e]        # 0x40949c
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0x66fe]        # 0x409494
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0x66e6]        # 0x409484
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0x66d6]        # 0x40947c
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0x66c6]        # 0x409474
  402dae:	nop
  402daf:	nop
  402db0:	mov    rax,QWORD PTR [rip+0x5c39]        # 0x4089f0
  402db7:	ret    
  402db8:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	mov    rax,rcx
  402dc3:	xchg   QWORD PTR [rip+0x5c26],rax        # 0x4089f0
  402dca:	ret    
  402dcb:	nop
  402dcc:	nop
  402dcd:	nop
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0x668e]        # 0x409464
  402dd6:	nop
  402dd7:	nop
  402dd8:	jmp    QWORD PTR [rip+0x667e]        # 0x40945c
  402dde:	nop
  402ddf:	nop
  402de0:	jmp    QWORD PTR [rip+0x666e]        # 0x409454
  402de6:	nop
  402de7:	nop
  402de8:	jmp    QWORD PTR [rip+0x665e]        # 0x40944c
  402dee:	nop
  402def:	nop
  402df0:	jmp    QWORD PTR [rip+0x664e]        # 0x409444
  402df6:	nop
  402df7:	nop
  402df8:	jmp    QWORD PTR [rip+0x663e]        # 0x40943c
  402dfe:	nop
  402dff:	nop
  402e00:	jmp    QWORD PTR [rip+0x662e]        # 0x409434
  402e06:	nop
  402e07:	nop
  402e08:	jmp    QWORD PTR [rip+0x661e]        # 0x40942c
  402e0e:	nop
  402e0f:	nop
  402e10:	jmp    QWORD PTR [rip+0x660e]        # 0x409424
  402e16:	nop
  402e17:	nop
  402e18:	jmp    QWORD PTR [rip+0x65fe]        # 0x40941c
  402e1e:	nop
  402e1f:	nop
  402e20:	jmp    QWORD PTR [rip+0x65ee]        # 0x409414
  402e26:	nop
  402e27:	nop
  402e28:	jmp    QWORD PTR [rip+0x65de]        # 0x40940c
  402e2e:	nop
  402e2f:	nop
  402e30:	jmp    QWORD PTR [rip+0x65ce]        # 0x409404
  402e36:	nop
  402e37:	nop
  402e38:	jmp    QWORD PTR [rip+0x65be]        # 0x4093fc
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0x65ae]        # 0x4093f4
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0x659e]        # 0x4093ec
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0x658e]        # 0x4093e4
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0x657e]        # 0x4093dc
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0x656e]        # 0x4093d4
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0x655e]        # 0x4093cc
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0x654e]        # 0x4093c4
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0x653e]        # 0x4093bc
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0x652e]        # 0x4093b4
  402e86:	nop
  402e87:	nop
  402e88:	nop    DWORD PTR [rax+rax*1+0x0]
  402e90:	push   rbp
  402e91:	push   rdi
  402e92:	push   rsi
  402e93:	push   rbx
  402e94:	sub    rsp,0xa8
  402e9b:	xor    edi,edi
  402e9d:	xor    ebp,ebp
  402e9f:	mov    rbx,rdx
  402ea2:	mov    esi,ecx
  402ea4:	call   0x4018e0
  402ea9:	mov    rcx,QWORD PTR [rbx]
  402eac:	call   0x4016d0
  402eb1:	mov    rdx,QWORD PTR [rip+0x2b28]        # 0x4059e0
  402eb8:	mov    rax,QWORD PTR [rip+0x647d]        # 0x40933c
  402ebf:	xor    ecx,ecx
  402ec1:	mov    QWORD PTR [rax],rdx
  402ec4:	lea    rdx,[rip+0x219b]        # 0x405066
  402ecb:	call   0x4016d8
  402ed0:	lea    rdx,[rip+0x2191]        # 0x405068
  402ed7:	lea    rcx,[rip+0x21d3]        # 0x4050b1
  402ede:	call   0x401768
  402ee3:	lea    rcx,[rip+0x21c7]        # 0x4050b1
  402eea:	call   0x401758
  402eef:	lea    rcx,[rip+0xffffffffffffe85a]        # 0x401750
  402ef6:	call   0x401820
  402efb:	lea    r9,[rip+0x25fe]        # 0x405500
  402f02:	lea    r8,[rip+0x21de]        # 0x4050e7
  402f09:	mov    QWORD PTR [rsp+0x20],0x0
  402f12:	mov    rdx,rbx
  402f15:	mov    ecx,esi
  402f17:	call   0x4016f8
  402f1c:	cmp    eax,0xffffffff
  402f1f:	je     0x402f9a
  402f21:	cmp    eax,0x56
  402f24:	je     0x402f80
  402f26:	jle    0x402f40
  402f28:	cmp    eax,0x68
  402f2b:	je     0x402f90
  402f2d:	cmp    eax,0x71
  402f30:	jne    0x402f44
  402f32:	mov    BYTE PTR [rip+0x10d7],0x0        # 0x404010
  402f39:	jmp    0x402efb
  402f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f40:	test   eax,eax
  402f42:	je     0x402efb
  402f44:	mov    rax,QWORD PTR [rip+0x63d9]        # 0x409324
  402f4b:	lea    rcx,[rip+0x216e]        # 0x4050c0
  402f52:	mov    rsi,QWORD PTR [rax]
  402f55:	call   0x401760
  402f5a:	mov    rbx,rax
  402f5d:	call   QWORD PTR [rip+0x6531]        # 0x409494
  402f63:	lea    rcx,[rax+0x60]
  402f67:	mov    r8,rsi
  402f6a:	mov    rdx,rbx
  402f6d:	call   0x401708
  402f72:	mov    ecx,0x1
  402f77:	call   0x402d28
  402f7c:	nop    DWORD PTR [rax+0x0]
  402f80:	mov    edi,0x1
  402f85:	jmp    0x402efb
  402f8a:	nop    WORD PTR [rax+rax*1+0x0]
  402f90:	mov    ebp,0x1
  402f95:	jmp    0x402efb
  402f9a:	test   dil,dil
  402f9d:	jne    0x4030fa
  402fa3:	test   bpl,bpl
  402fa6:	jne    0x4031b8
  402fac:	mov    rdi,QWORD PTR [rip+0x63b1]        # 0x409364
  402fb3:	mov    eax,DWORD PTR [rdi]
  402fb5:	add    eax,0x2
  402fb8:	cmp    eax,esi
  402fba:	je     0x402fd7
  402fbc:	lea    rcx,[rip+0x2418]        # 0x4053db
  402fc3:	call   0x401760
  402fc8:	xor    edx,edx
  402fca:	mov    r8,rax
  402fcd:	mov    ecx,0x1
  402fd2:	call   0x401748
  402fd7:	movsxd rax,DWORD PTR [rdi]
  402fda:	add    rax,0x1
  402fde:	cmp    BYTE PTR [rip+0x102b],0x0        # 0x404010
  402fe5:	mov    rdi,QWORD PTR [rbx+rax*8]
  402fe9:	mov    rsi,QWORD PTR [rbx+rax*8-0x8]
  402fee:	jne    0x403289
  402ff4:	lea    rcx,[rip+0x2408]        # 0x405403
  402ffb:	call   0x402d00
  403000:	test   rax,rax
  403003:	mov    QWORD PTR [rsp+0x58],rax
  403008:	je     0x40300f
  40300a:	cmp    BYTE PTR [rax],0x0
  40300d:	jne    0x40301b
  40300f:	lea    rax,[rip+0x23fa]        # 0x405410
  403016:	mov    QWORD PTR [rsp+0x58],rax
  40301b:	lea    rax,[rip+0xffffffffffffe50e]        # 0x401530
  403022:	lea    rbx,[rsp+0x60]
  403027:	lea    rdx,[rsp+0x58]
  40302c:	lea    rcx,[rip+0x2433]        # 0x405466
  403033:	mov    QWORD PTR [rsp+0x48],0x0
  40303c:	mov    DWORD PTR [rsp+0x38],0x1
  403044:	mov    QWORD PTR [rsp+0x40],rax
  403049:	mov    DWORD PTR [rsp+0x30],0x0
  403051:	mov    r9d,0x1
  403057:	mov    QWORD PTR [rsp+0x28],rbx
  40305c:	mov    QWORD PTR [rsp+0x20],0x0
  403065:	mov    r8d,0x1
  40306b:	mov    QWORD PTR [rsp+0x60],rsi
  403070:	mov    QWORD PTR [rsp+0x68],0x0
  403079:	mov    DWORD PTR [rip+0x4fb5],0x7f        # 0x408038
  403083:	call   0x401738
  403088:	test   al,al
  40308a:	je     0x40316e
  403090:	cmp    BYTE PTR [rip+0x4f9e],0x0        # 0x408035
  403097:	je     0x403395
  40309d:	cmp    BYTE PTR [rip+0x4f90],0x0        # 0x408034
  4030a4:	jne    0x4032c0
  4030aa:	cmp    BYTE PTR [rip+0x4f82],0x0        # 0x408033
  4030b1:	je     0x40348e
  4030b7:	cmp    BYTE PTR [rip+0x4f74],0x0        # 0x408032
  4030be:	jne    0x403411
  4030c4:	cmp    BYTE PTR [rip+0x4f66],0x0        # 0x408031
  4030cb:	je     0x4035ad
  4030d1:	cmp    BYTE PTR [rip+0x4f58],0x0        # 0x408030
  4030d8:	jne    0x403530
  4030de:	cmp    BYTE PTR [rip+0xf2b],0x0        # 0x404010
  4030e5:	jne    0x40350a
  4030eb:	mov    rcx,rdi
  4030ee:	call   0x401590
  4030f3:	xor    ecx,ecx
  4030f5:	call   0x402d28
  4030fa:	mov    rax,QWORD PTR [rip+0x6223]        # 0x409324
  403101:	mov    rcx,QWORD PTR [rax]
  403104:	call   0x401728
  403109:	lea    r9,[rip+0x1fdb]        # 0x4050eb
  403110:	lea    r8,[rip+0x1f9a]        # 0x4050b1
  403117:	lea    rcx,[rip+0x1fd6]        # 0x4050f4
  40311e:	mov    rdx,rax
  403121:	call   0x4016e8
  403126:	lea    rcx,[rip+0x1fdb]        # 0x405108
  40312d:	call   0x401760
  403132:	lea    rdx,[rip+0x20c7]        # 0x405200
  403139:	mov    rcx,rax
  40313c:	call   0x4016e8
  403141:	lea    rcx,[rip+0x20cd]        # 0x405215
  403148:	call   0x401718
  40314d:	lea    rcx,[rip+0x20ce]        # 0x405222
  403154:	mov    rbx,rax
  403157:	call   0x401760
  40315c:	mov    rdx,rbx
  40315f:	mov    rcx,rax
  403162:	call   0x4016e8
  403167:	xor    ecx,ecx
  403169:	call   0x402d28
  40316e:	cmp    BYTE PTR [rip+0xe9b],0x0        # 0x404010
  403175:	je     0x4030f3
  40317b:	mov    eax,DWORD PTR [rip+0x4eb7]        # 0x408038
  403181:	test   eax,eax
  403183:	je     0x403389
  403189:	cmp    eax,0x2
  40318c:	lea    rcx,[rip+0x22ee]        # 0x405481
  403193:	jne    0x4030f3
  403199:	call   0x401760
  40319e:	mov    rbx,rax
  4031a1:	call   QWORD PTR [rip+0x62ed]        # 0x409494
  4031a7:	lea    rcx,[rax+0x60]
  4031ab:	mov    rdx,rbx
  4031ae:	call   0x401708
  4031b3:	jmp    0x4030f3
  4031b8:	mov    rax,QWORD PTR [rip+0x6165]        # 0x409324
  4031bf:	lea    rcx,[rip+0x206c]        # 0x405232
  4031c6:	mov    rbx,QWORD PTR [rax]
  4031c9:	call   0x401760
  4031ce:	mov    rcx,rax
  4031d1:	mov    rdx,rbx
  4031d4:	call   0x4016e8
  4031d9:	lea    rcx,[rip+0x206f]        # 0x40524f
  4031e0:	call   0x4016e8
  4031e5:	lea    rcx,[rip+0x206c]        # 0x405258
  4031ec:	call   0x401760
  4031f1:	mov    rcx,rax
  4031f4:	call   0x4016e8
  4031f9:	lea    rcx,[rip+0x204f]        # 0x40524f
  403200:	call   0x4016e8
  403205:	lea    rcx,[rip+0x20c6]        # 0x4052d2
  40320c:	call   0x401760
  403211:	mov    rcx,rax
  403214:	call   0x4016e8
  403219:	lea    rcx,[rip+0x20c8]        # 0x4052e8
  403220:	call   0x401760
  403225:	mov    rcx,rax
  403228:	call   0x4016e8
  40322d:	lea    rcx,[rip+0x20f4]        # 0x405328
  403234:	call   0x401760
  403239:	mov    rcx,rax
  40323c:	call   0x4016e8
  403241:	lea    rcx,[rip+0x2128]        # 0x405370
  403248:	call   0x401760
  40324d:	mov    rcx,rax
  403250:	call   0x4016e8
  403255:	lea    rcx,[rip+0x1ff3]        # 0x40524f
  40325c:	call   0x4016e8
  403261:	call   QWORD PTR [rip+0x622d]        # 0x409494
  403267:	lea    rcx,[rip+0x2142]        # 0x4053b0
  40326e:	mov    rbx,rax
  403271:	call   0x401760
  403276:	lea    rdx,[rbx+0x30]
  40327a:	mov    rcx,rax
  40327d:	call   0x401700
  403282:	xor    ecx,ecx
  403284:	call   0x402d28
  403289:	lea    rcx,[rip+0x2162]        # 0x4053f2
  403290:	call   0x401760
  403295:	mov    rbx,QWORD PTR [rip+0x61f8]        # 0x409494
  40329c:	mov    rbp,rax
  40329f:	call   rbx
  4032a1:	lea    rcx,[rax+0x60]
  4032a5:	mov    r8,rsi
  4032a8:	mov    rdx,rbp
  4032ab:	call   0x401708
  4032b0:	call   rbx
  4032b2:	lea    rcx,[rax+0x60]
  4032b6:	call   0x402d20
  4032bb:	jmp    0x402ff4
  4032c0:	lea    rax,[rip+0x21c7]        # 0x40548e
  4032c7:	lea    rdx,[rip+0x21c0]        # 0x40548e
  4032ce:	mov    QWORD PTR [rsp+0x48],0x0
  4032d7:	mov    DWORD PTR [rsp+0x40],0x0
  4032df:	mov    DWORD PTR [rsp+0x38],0x1
  4032e7:	mov    r9d,0x1
  4032ed:	mov    QWORD PTR [rsp+0x60],rax
  4032f2:	lea    rax,[rip+0x21a4]        # 0x40549d
  4032f9:	mov    DWORD PTR [rsp+0x30],0x0
  403301:	mov    DWORD PTR [rsp+0x28],0x0
  403309:	mov    DWORD PTR [rsp+0x20],0x0
  403311:	mov    r8,rbx
  403314:	mov    QWORD PTR [rsp+0x68],rax
  403319:	lea    rax,[rip+0x2180]        # 0x4054a0
  403320:	mov    rcx,rdx
  403323:	mov    QWORD PTR [rsp+0x90],rsi
  40332b:	mov    QWORD PTR [rsp+0x98],0x0
  403337:	mov    QWORD PTR [rsp+0x70],rax
  40333c:	lea    rax,[rip+0x2160]        # 0x4054a3
  403343:	mov    QWORD PTR [rsp+0x78],rax
  403348:	lea    rax,[rip+0x2156]        # 0x4054a5
  40334f:	mov    QWORD PTR [rsp+0x80],rax
  403357:	lea    rax,[rip+0x214a]        # 0x4054a8
  40335e:	mov    QWORD PTR [rsp+0x88],rax
  403366:	call   0x401740
  40336b:	cmp    eax,0x7f
  40336e:	je     0x4030aa
  403374:	test   eax,eax
  403376:	jne    0x4030de
  40337c:	cmp    BYTE PTR [rip+0xc8d],0x0        # 0x404010
  403383:	je     0x4030f3
  403389:	lea    rcx,[rip+0x20e9]        # 0x405479
  403390:	jmp    0x403199
  403395:	lea    rax,[rip+0x20f2]        # 0x40548e
  40339c:	lea    rdx,[rip+0x20eb]        # 0x40548e
  4033a3:	xor    r9d,r9d
  4033a6:	mov    QWORD PTR [rsp+0x48],0x0
  4033af:	mov    DWORD PTR [rsp+0x40],0x0
  4033b7:	mov    r8,rbx
  4033ba:	mov    QWORD PTR [rsp+0x60],rax
  4033bf:	lea    rax,[rip+0x20cd]        # 0x405493
  4033c6:	mov    DWORD PTR [rsp+0x38],0x1
  4033ce:	mov    DWORD PTR [rsp+0x30],0x1
  4033d6:	mov    DWORD PTR [rsp+0x28],0x1
  4033de:	mov    rcx,rdx
  4033e1:	mov    DWORD PTR [rsp+0x20],0x0
  4033e9:	mov    QWORD PTR [rsp+0x68],rax
  4033ee:	mov    QWORD PTR [rsp+0x70],0x0
  4033f7:	call   0x401740
  4033fc:	test   eax,eax
  4033fe:	mov    BYTE PTR [rip+0x4c30],0x1        # 0x408035
  403405:	sete   BYTE PTR [rip+0x4c28]        # 0x408034
  40340c:	jmp    0x40309d
  403411:	lea    rax,[rip+0x2093]        # 0x4054ab
  403418:	lea    rdx,[rip+0x208c]        # 0x4054ab
  40341f:	mov    QWORD PTR [rsp+0x48],0x0
  403428:	mov    DWORD PTR [rsp+0x40],0x0
  403430:	mov    DWORD PTR [rsp+0x38],0x1
  403438:	mov    r9d,0x1
  40343e:	mov    QWORD PTR [rsp+0x60],rax
  403443:	lea    rax,[rip+0x2066]        # 0x4054b0
  40344a:	mov    DWORD PTR [rsp+0x30],0x0
  403452:	mov    DWORD PTR [rsp+0x28],0x0
  40345a:	mov    DWORD PTR [rsp+0x20],0x0
  403462:	mov    r8,rbx
  403465:	mov    rcx,rdx
  403468:	mov    QWORD PTR [rsp+0x68],rax
  40346d:	mov    QWORD PTR [rsp+0x70],rsi
  403472:	mov    QWORD PTR [rsp+0x78],0x0
  40347b:	call   0x401740
  403480:	cmp    eax,0x7f
  403483:	jne    0x403374
  403489:	jmp    0x4030c4
  40348e:	lea    rax,[rip+0x2016]        # 0x4054ab
  403495:	lea    rdx,[rip+0x200f]        # 0x4054ab
  40349c:	xor    r9d,r9d
  40349f:	mov    QWORD PTR [rsp+0x48],0x0
  4034a8:	mov    DWORD PTR [rsp+0x40],0x0
  4034b0:	mov    r8,rbx
  4034b3:	mov    QWORD PTR [rsp+0x60],rax
  4034b8:	lea    rax,[rip+0x1fd4]        # 0x405493
  4034bf:	mov    DWORD PTR [rsp+0x38],0x1
  4034c7:	mov    DWORD PTR [rsp+0x30],0x1
  4034cf:	mov    DWORD PTR [rsp+0x28],0x1
  4034d7:	mov    rcx,rdx
  4034da:	mov    DWORD PTR [rsp+0x20],0x0
  4034e2:	mov    QWORD PTR [rsp+0x68],rax
  4034e7:	mov    QWORD PTR [rsp+0x70],0x0
  4034f0:	call   0x401740
  4034f5:	test   eax,eax
  4034f7:	mov    BYTE PTR [rip+0x4b35],0x1        # 0x408033
  4034fe:	sete   BYTE PTR [rip+0x4b2d]        # 0x408032
  403505:	jmp    0x4030b7
  40350a:	lea    rcx,[rip+0x1fb5]        # 0x4054c6
  403511:	call   0x401760
  403516:	mov    rbx,rax
  403519:	call   QWORD PTR [rip+0x5f75]        # 0x409494
  40351f:	lea    rcx,[rax+0x60]
  403523:	mov    rdx,rbx
  403526:	call   0x401708
  40352b:	jmp    0x4030eb
  403530:	lea    rax,[rip+0x1f81]        # 0x4054b8
  403537:	lea    rdx,[rip+0x1f7a]        # 0x4054b8
  40353e:	mov    QWORD PTR [rsp+0x48],0x0
  403547:	mov    DWORD PTR [rsp+0x40],0x0
  40354f:	mov    DWORD PTR [rsp+0x38],0x1
  403557:	mov    r9d,0x1
  40355d:	mov    QWORD PTR [rsp+0x60],rax
  403562:	lea    rax,[rip+0x1f54]        # 0x4054bd
  403569:	mov    DWORD PTR [rsp+0x30],0x0
  403571:	mov    DWORD PTR [rsp+0x28],0x0
  403579:	mov    DWORD PTR [rsp+0x20],0x0
  403581:	mov    r8,rbx
  403584:	mov    rcx,rdx
  403587:	mov    QWORD PTR [rsp+0x68],rax
  40358c:	mov    QWORD PTR [rsp+0x70],rsi
  403591:	mov    QWORD PTR [rsp+0x78],0x0
  40359a:	call   0x401740
  40359f:	cmp    eax,0x7f
  4035a2:	jne    0x403374
  4035a8:	jmp    0x4030de
  4035ad:	lea    rax,[rip+0x1f04]        # 0x4054b8
  4035b4:	lea    rdx,[rip+0x1efd]        # 0x4054b8
  4035bb:	xor    r9d,r9d
  4035be:	mov    QWORD PTR [rsp+0x48],0x0
  4035c7:	mov    DWORD PTR [rsp+0x40],0x0
  4035cf:	mov    r8,rbx
  4035d2:	mov    QWORD PTR [rsp+0x60],rax
  4035d7:	lea    rax,[rip+0x1eb5]        # 0x405493
  4035de:	mov    DWORD PTR [rsp+0x38],0x1
  4035e6:	mov    DWORD PTR [rsp+0x30],0x1
  4035ee:	mov    DWORD PTR [rsp+0x28],0x1
  4035f6:	mov    rcx,rdx
  4035f9:	mov    DWORD PTR [rsp+0x20],0x0
  403601:	mov    QWORD PTR [rsp+0x68],rax
  403606:	mov    QWORD PTR [rsp+0x70],0x0
  40360f:	call   0x401740
  403614:	and    eax,0xfffffffd
  403617:	mov    BYTE PTR [rip+0x4a13],0x1        # 0x408031
  40361e:	sete   BYTE PTR [rip+0x4a0b]        # 0x408030
  403625:	jmp    0x4030d1
  40362a:	nop
  40362b:	nop
  40362c:	nop
  40362d:	nop
  40362e:	nop
  40362f:	nop
  403630:	(bad)  
  403631:	(bad)  
  403632:	(bad)  
  403633:	(bad)  
  403634:	(bad)  
  403635:	(bad)  
  403636:	(bad)  
  403637:	inc    DWORD PTR [rax]
  403639:	add    BYTE PTR [rax],al
  40363b:	add    BYTE PTR [rax],al
  40363d:	add    BYTE PTR [rax],al
  40363f:	add    bh,bh
  403641:	(bad)  
  403642:	(bad)  
  403643:	(bad)  
  403644:	(bad)  
  403645:	(bad)  
  403646:	(bad)  
  403647:	inc    DWORD PTR [rax]
  403649:	add    BYTE PTR [rax],al
  40364b:	add    BYTE PTR [rax],al
  40364d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	add    DWORD PTR [rax],eax
	...
  40401e:	add    BYTE PTR [rax],al
  404020:	rex.W
  404021:	add    BYTE PTR ss:[rax],al
	...
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
  404031:	(bad)  
  404032:	(bad)  
  404033:	(bad)  
  404034:	(bad)  
  404035:	(bad)  
  404036:	(bad)  
  404037:	inc    DWORD PTR [rax]
  404039:	add    BYTE PTR [rax],al
  40403b:	add    BYTE PTR [rax],al
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    bh,bh
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    BYTE PTR [rdx],al
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    bh,bh
  404061:	(bad)  
  404062:	(bad)  
  404063:	inc    DWORD PTR [rax]
	...
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rax+0x402d],dh
  404075:	add    BYTE PTR [rax],al
  404077:	add    al,al
  404079:	sub    eax,0x40
  40407e:	add    BYTE PTR [rax],al
  404080:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40408e:	add    BYTE PTR [rax],al
  404090:	int    0x5d
  404092:	and    dl,dl
  404094:	data16 (bad) 
  404096:	(bad)  
  404097:	inc    DWORD PTR [rax]
  404099:	add    BYTE PTR [rax],al
  40409b:	add    BYTE PTR [rax],al
  40409d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	gs jb  0x405075
  405003:	outs   dx,DWORD PTR ds:[rsi]
  405004:	jb     0x405026
  405006:	ja     0x405070
  405008:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6e65706f
  405010:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
  405017:	and    ah,BYTE PTR [rax]
  405019:	outs   dx,WORD PTR ds:[rsi]
  40501b:	jb     0x40503d
  40501d:	jb     0x405084
  40501f:	(bad)  
  405020:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72726500
  405028:	outs   dx,DWORD PTR ds:[rsi]
  405029:	jb     0x40504b
  40502b:	jb     0x405092
  40502d:	(bad)  
  40502e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252220
  405036:	and    al,BYTE PTR [rax]
  405038:	gs jb  0x4050ad
  40503b:	outs   dx,DWORD PTR ds:[rsi]
  40503c:	jb     0x40505e
  40503e:	ja     0x4050b2
  405040:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x74732067
  405048:	outs   dx,DWORD PTR fs:[rsi]
  40504a:	jne    0x4050c0
  40504c:	add    BYTE PTR [rbp+0x72],ah
  40504f:	jb     0x4050c0
  405051:	jb     0x405073
  405053:	(bad)  
  405054:	data16 je 0x4050bc
  405057:	jb     0x405079
  405059:	jb     0x4050c0
  40505b:	(bad)  
  40505c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252220
  405064:	and    al,BYTE PTR [rax]
  405066:	add    BYTE PTR [rax],al
  405068:	(bad)  
  405069:	jae    0x4050ce
  40506b:	jb     0x4050ce
  40506d:	je     0x4050d2
  40506f:	push   0x65776a2f
  405074:	(bad)  
  405075:	ins    DWORD PTR es:[rdi],dx
  405076:	js     0x4050dd
  405078:	sub    eax,0x6174636f
  40507d:	jbe    0x4050e4
  40507f:	(bad)  
  405080:	xor    al,0x2e
  405082:	xor    ch,BYTE PTR [rsi]
  405084:	xor    DWORD PTR [rdi],ebp
  405086:	ja     0x4050be
  405088:	xor    al,0x2d
  40508a:	xor    esi,DWORD PTR [rdx]
  40508c:	(bad)  
  40508d:	jne    0x405102
  40508f:	jb     0x4050c0
  405091:	js     0x4050cb
  405093:	ss pop rdi
  405095:	ss xor al,0x2d
  405098:	ja     0x4050d0
  40509a:	xor    al,0x2d
  40509c:	ins    DWORD PTR es:[rdi],dx
  40509d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4050a4:	jae    0x40510e
  4050a6:	(bad)  
  4050a7:	jb     0x40510e
  4050a9:	(bad)  
  4050aa:	ins    BYTE PTR es:[rdi],dx
  4050ab:	outs   dx,DWORD PTR ds:[rsi]
  4050ac:	movsxd esp,DWORD PTR [rcx+0x6c]
  4050af:	add    BYTE PTR gs:[rdi+0x65],ah
  4050b3:	je     0x405129
  4050b5:	gs js  0x40512c
  4050b8:	sub    eax,0x6c6f6f74
  4050bd:	jae    0x4050bf
  4050bf:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  4050c3:	and    BYTE PTR [rdi],ah
  4050c5:	and    eax,0x2d2d2073
  4050ca:	push   0x27706c65
  4050cf:	and    BYTE PTR [rsi+0x6f],ah
  4050d2:	jb     0x4050f4
  4050d4:	ins    DWORD PTR es:[rdi],dx
  4050d5:	outs   dx,DWORD PTR ds:[rsi]
  4050d6:	jb     0x40513d
  4050d8:	and    BYTE PTR [rcx+0x6e],ch
  4050db:	outs   dx,WORD PTR ds:[rsi]
  4050dd:	jb     0x40514c
  4050df:	(bad)  
  4050e0:	je     0x40514b
  4050e2:	outs   dx,DWORD PTR ds:[rsi]
  4050e3:	outs   dx,BYTE PTR ds:[rsi]
  4050e4:	or     al,BYTE PTR cs:[rax]
  4050e7:	push   0x30005671
  4050ec:	xor    DWORD PTR cs:[rcx],edi
  4050ef:	cs xor eax,0x2500312e
  4050f5:	jae    0x405117
  4050f7:	sub    BYTE PTR [rdi+0x4e],al
  4050fa:	push   rbp
  4050fb:	and    BYTE PTR [rip+0x25202973],ah        # 0x25607a74
  405101:	jae    0x40510d
  405103:	add    BYTE PTR [rax],al
  405105:	add    BYTE PTR [rax],al
  405107:	add    BYTE PTR [rbx+0x6f],al
  40510a:	jo     0x405185
  40510c:	jb     0x405177
  40510e:	addr32 push 0x43282074
  405114:	sub    DWORD PTR [rax],esp
  405116:	and    eax,0x72462073
  40511b:	gs and BYTE PTR gs:[rbx+0x6f],dl
  405120:	data16 je 0x40519a
  405123:	(bad)  
  405124:	jb     0x40518b
  405126:	and    BYTE PTR [rsi+0x6f],al
  405129:	jne    0x405199
  40512b:	fs (bad) 
  40512d:	je     0x405198
  40512f:	outs   dx,DWORD PTR ds:[rsi]
  405130:	outs   dx,BYTE PTR ds:[rsi]
  405131:	sub    al,0x20
  405133:	rex.WB outs dx,BYTE PTR ds:[rsi]
  405135:	movsxd ebp,DWORD PTR [rsi]
  405137:	or     cl,BYTE PTR [rcx+rbp*2+0x63]
  40513b:	outs   dx,BYTE PTR gs:[rsi]
  40513d:	jae    0x4051a4
  40513f:	and    BYTE PTR [rdi+0x50],al
  405142:	rex.WR jbe 0x405178
  405145:	sub    edi,DWORD PTR [rdx]
  405147:	and    BYTE PTR [rdi+0x4e],al
  40514a:	push   rbp
  40514b:	and    BYTE PTR [rdi+0x50],al
  40514e:	rex.WR and BYTE PTR [rsi+0x65],r14b
  405152:	jb     0x4051c7
  405154:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  40515b:	jb     0x40517d
  40515d:	ins    BYTE PTR es:[rdi],dx
  40515e:	(bad)  
  40515f:	je     0x4051c6
  405161:	jb     0x405183
  405163:	cmp    al,0x68
  405165:	je     0x4051db
  405167:	jo     0x4051a3
  405169:	(bad)  
  40516a:	(bad)  
  40516b:	outs   dx,BYTE PTR ds:[esi]
  40516d:	jne    0x40519d
  40516f:	outs   dx,DWORD PTR ds:[rsi]
  405170:	jb     0x4051d9
  405172:	(bad)  
  405173:	ins    BYTE PTR es:[rdi],dx
  405174:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  40517b:	(bad)  
  40517c:	addr32 jo 0x4051eb
  40517f:	cs push 0x3e6c6d74
  405185:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  405189:	jae    0x4051ab
  40518b:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  405192:	and    BYTE PTR [rbx+0x6f],dh
  405195:	data16 je 0x40520f
  405198:	(bad)  
  405199:	jb     0x405200
  40519b:	cmp    ah,BYTE PTR [rax]
  40519d:	jns    0x40520e
  40519f:	jne    0x4051c1
  4051a1:	(bad)  
  4051a2:	jb     0x405209
  4051a4:	and    BYTE PTR [rsi+0x72],ah
  4051a7:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4051ad:	movsxd ebp,DWORD PTR [rax+0x61]
  4051b0:	outs   dx,BYTE PTR ds:[rsi]
  4051b1:	and    BYTE PTR gs:[ecx+0x6e],ah
  4051b6:	and    BYTE PTR fs:[rdx+0x65],dh
  4051ba:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4051c2:	je     0x405229
  4051c4:	and    BYTE PTR [rcx+0x74],ch
  4051c7:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  4051cc:	jb     0x405233
  4051ce:	and    BYTE PTR [rcx+0x73],ch
  4051d1:	and    BYTE PTR [rsi+0x4f],cl
  4051d4:	and    BYTE PTR [rdi+0x41],dl
  4051d7:	push   rdx
  4051d8:	push   rdx
  4051d9:	rex.B
  4051da:	rex.WRX push rsp
  4051dc:	pop    rcx
  4051dd:	sub    al,0x20
  4051df:	je     0x405250
  4051e1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4051e5:	and    BYTE PTR [rbp+0x78],ah
  4051e8:	je     0x40524f
  4051ea:	outs   dx,BYTE PTR ds:[rsi]
  4051eb:	je     0x40520d
  4051ed:	jo     0x405254
  4051ef:	jb     0x40525e
  4051f1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  4051f9:	and    BYTE PTR [rcx+riz*2+0x77],ch
  4051fd:	or     al,BYTE PTR cs:[rax]
  405200:	xor    dh,BYTE PTR [rax]
  405202:	xor    BYTE PTR [rcx],dh
  405204:	sub    eax,0x33303032
  405209:	sub    al,0x20
  40520b:	xor    dh,BYTE PTR [rax]
  40520d:	xor    BYTE PTR [rip+0x3030322d],dh        # 0x30708440
  405213:	cmp    DWORD PTR [rax],eax
  405215:	rex.X jb 0x40528d
  405218:	outs   dx,BYTE PTR ds:[rsi]
  405219:	outs   dx,DWORD PTR ds:[rsi]
  40521a:	and    BYTE PTR [rax+0x61],cl
  40521d:	imul   esp,DWORD PTR [rdx+0x6c],0x72570065
  405224:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7962206e
  40522c:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4a80a5
  405232:	push   rbp
  405233:	jae    0x405296
  405235:	cmp    ah,BYTE PTR gs:[eax]
  405239:	and    eax,0x4f5b2073
  40523e:	push   rax
  40523f:	push   rsp
  405240:	rex.WB
  405241:	rex.WRXB
  405242:	rex.WRX pop rbp
  405244:	and    BYTE PTR [rbp+0x52],dl
  405247:	rex.WR and BYTE PTR [rsi+0x49],r8b
  40524b:	rex.WR
  40524c:	or     r8b,BYTE PTR [r8]
  40524f:	or     al,BYTE PTR [rax]
  405251:	add    BYTE PTR [rax],al
  405253:	add    BYTE PTR [rax],al
  405255:	add    BYTE PTR [rax],al
  405257:	add    BYTE PTR [rsi+0x65],al
  40525a:	je     0x4052bf
  40525c:	push   0x61207365
  405261:	outs   dx,BYTE PTR ds:[rsi]
  405262:	and    BYTE PTR fs:[rdi+0x75],ch
  405266:	je     0x4052d8
  405268:	jne    0x4052de
  40526a:	jae    0x40528c
  40526c:	je     0x4052d6
  40526e:	and    BYTE PTR gs:[rbx+0x6f],ah
  405272:	outs   dx,BYTE PTR ds:[rsi]
  405273:	je     0x4052da
  405275:	outs   dx,BYTE PTR ds:[rsi]
  405276:	je     0x4052eb
  405278:	and    BYTE PTR [rdi+0x66],ch
  40527b:	and    BYTE PTR [rcx+0x6e],ah
  40527e:	and    BYTE PTR [rbp+0x52],dl
  405281:	rex.WR
  405282:	and    BYTE PTR cs:[rax],ah
  405285:	rex.WB
  405286:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  40528b:	and    BYTE PTR [rbp+0x52],dl
  40528e:	rex.WR and BYTE PTR [rbx+0x61],r12b
  405292:	outs   dx,BYTE PTR ds:[rsi]
  405293:	outs   dx,BYTE PTR ds:[rsi]
  405294:	outs   dx,DWORD PTR ds:[rsi]
  405295:	je     0x4052b7
  405297:	(bad)  
  405298:	and    BYTE PTR gs:[rcx+0x63],ah
  40529c:	movsxd esp,DWORD PTR [rbp+0x73]
  40529f:	jae    0x405306
  4052a1:	fs sub al,0xa
  4052a4:	je     0x40530e
  4052a6:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ch
  4052ab:	(bad)  
  4052ac:	ins    BYTE PTR es:[rdi],dx
  4052ad:	ins    BYTE PTR es:[rdi],dx
  4052ae:	jns    0x4052d0
  4052b0:	(bad)  
  4052b1:	movsxd esp,DWORD PTR [rbx+0x65]
  4052b4:	jae    0x405329
  4052b6:	imul   esp,DWORD PTR [rdx+0x6c],0x49462065
  4052bd:	rex.WR
  4052be:	and    BYTE PTR [r9+0x73],r13b
  4052c2:	and    BYTE PTR [rbp+0x73],dh
  4052c5:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4052ca:	jae    0x405340
  4052cc:	gs (bad) 
  4052ce:	fs or  al,BYTE PTR cs:[rax]
  4052d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4052d4:	outs   dx,WORD PTR ds:[rsi]
  4052d6:	jb     0x405345
  4052d8:	(bad)  
  4052d9:	je     0x405344
  4052db:	jbe    0x405342
  4052dd:	and    BYTE PTR [rdi+0x75],ch
  4052e0:	je     0x405352
  4052e2:	jne    0x405358
  4052e4:	cmp    cl,BYTE PTR [rdx]
  4052e6:	add    BYTE PTR [rax],al
  4052e8:	and    BYTE PTR [rax],ah
  4052ea:	sub    eax,0x2d202c68
  4052ef:	sub    eax,0x706c6568
  4052f4:	and    BYTE PTR [rax],ah
  4052f6:	and    BYTE PTR [rax],ah
  4052f8:	and    BYTE PTR [rax],ah
  4052fa:	and    BYTE PTR [rax],ah
  4052fc:	and    BYTE PTR [rax],ah
  4052fe:	and    BYTE PTR [rax],ah
  405300:	and    BYTE PTR [rax],ah
  405302:	and    BYTE PTR [rax],ah
  405304:	and    BYTE PTR [rax],ah
  405306:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  40530e:	je     0x405378
  405310:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  405317:	and    BYTE PTR [rcx+0x6e],ah
  40531a:	and    BYTE PTR fs:[rbp+0x78],ah
  40531e:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  405326:	add    BYTE PTR [rax],al
  405328:	and    BYTE PTR [rax],ah
  40532a:	sub    eax,0x2d202c56
  40532f:	sub    eax,0x73726576
  405334:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  40533b:	and    BYTE PTR [rax],ah
  40533d:	and    BYTE PTR [rax],ah
  40533f:	and    BYTE PTR [rax],ah
  405341:	and    BYTE PTR [rax],ah
  405343:	and    BYTE PTR [rax],ah
  405345:	and    BYTE PTR [rdi+0x75],ch
  405348:	je     0x4053ba
  40534a:	jne    0x4053c0
  40534c:	and    BYTE PTR [rsi+0x65],dh
  40534f:	jb     0x4053c4
  405351:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  405358:	outs   dx,DWORD PTR ds:[rsi]
  405359:	jb     0x4053c8
  40535b:	(bad)  
  40535c:	je     0x4053c7
  40535e:	outs   dx,DWORD PTR ds:[rsi]
  40535f:	outs   dx,BYTE PTR ds:[rsi]
  405360:	and    BYTE PTR [rcx+0x6e],ah
  405363:	and    BYTE PTR fs:[rbp+0x78],ah
  405367:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  40536f:	add    BYTE PTR [rax],ah
  405371:	and    BYTE PTR [rip+0x2d202c71],ch        # 0x2d607fe8
  405377:	sub    eax,0x65697571
  40537c:	je     0x4053aa
  40537e:	and    BYTE PTR [rip+0x6c69732d],ch        # 0x6ca9c6b1
  405384:	outs   dx,BYTE PTR gs:[rsi]
  405386:	je     0x4053a8
  405388:	and    BYTE PTR [rax],ah
  40538a:	and    BYTE PTR [rax],ah
  40538c:	and    BYTE PTR [rax],ah
  40538e:	jae    0x405405
  405390:	jo     0x405402
  405392:	jb     0x4053f9
  405394:	jae    0x405409
  405396:	and    BYTE PTR [rax+0x72],dh
  405399:	outs   dx,DWORD PTR ds:[rsi]
  40539a:	addr32 jb 0x405402
  40539d:	jae    0x405412
  40539f:	and    BYTE PTR [rcx+0x6e],ch
  4053a2:	imul   esp,DWORD PTR fs:[rbx+0x61],0x73726f74
  4053aa:	or     al,BYTE PTR [rax]
  4053ac:	add    BYTE PTR [rax],al
  4053ae:	add    BYTE PTR [rax],al
  4053b0:	push   rdx
  4053b1:	gs jo  0x405423
  4053b4:	jb     0x40542a
  4053b6:	and    BYTE PTR [rdx+0x75],ah
  4053b9:	addr32 jae 0x4053dc
  4053bc:	je     0x40542d
  4053be:	and    BYTE PTR [rdx+riz*2],bh
  4053c1:	jne    0x40542a
  4053c3:	sub    eax,0x2d756e67
  4053c8:	addr32 gs je 0x405440
  4053cc:	gs js  0x405443
  4053cf:	rex
  4053d0:	outs   dx,BYTE PTR ds:[esi]
  4053d2:	jne    0x405402
  4053d4:	outs   dx,DWORD PTR ds:[rsi]
  4053d5:	jb     0x40543e
  4053d7:	ds or  al,BYTE PTR cs:[rax]
  4053db:	gs js  0x40544e
  4053de:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4053e3:	and    BYTE PTR [rdi+rsi*2+0x6f],dh
  4053e7:	and    BYTE PTR [rcx+0x72],ah
  4053ea:	addr32 jne 0x40545a
  4053ed:	outs   dx,BYTE PTR gs:[rsi]
  4053ef:	je     0x405464
  4053f1:	add    BYTE PTR [rdx+0x65],dl
  4053f4:	je     0x405468
  4053f6:	imul   esp,DWORD PTR [rbp+0x76],0x20676e69
  4053fd:	and    eax,0x2e2e2e73
  405402:	add    BYTE PTR [rdi+0x45],al
  405405:	push   rsp
  405406:	push   rsp
  405407:	rex.RB pop r8
  405409:	push   rsp
  40540a:	rex.WX
  40540b:	push   r10
  40540d:	add    BYTE PTR [rax],al
  40540f:	add    BYTE PTR [rdi],ch
  405411:	jae    0x405476
  405413:	jb     0x405476
  405415:	je     0x40547a
  405417:	push   0x65776a2f
  40541c:	(bad)  
  40541d:	ins    DWORD PTR es:[rdi],dx
  40541e:	js     0x405485
  405420:	sub    eax,0x6174636f
  405425:	jbe    0x40548c
  405427:	(bad)  
  405428:	xor    al,0x2e
  40542a:	xor    ch,BYTE PTR [rsi]
  40542c:	xor    DWORD PTR [rdi],ebp
  40542e:	ja     0x405466
  405430:	xor    al,0x2d
  405432:	xor    esi,DWORD PTR [rdx]
  405434:	(bad)  
  405435:	jne    0x4054aa
  405437:	jb     0x405468
  405439:	js     0x405473
  40543b:	ss pop rdi
  40543d:	ss xor al,0x2d
  405440:	ja     0x405478
  405442:	xor    al,0x2d
  405444:	ins    DWORD PTR es:[rdi],dx
  405445:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40544c:	jae    0x4054b6
  40544e:	(bad)  
  40544f:	jb     0x4054b6
  405451:	(bad)  
  405452:	addr32 gs je 0x4054ca
  405456:	gs js  0x4054cd
  405459:	(bad)  
  40545a:	addr32 gs je 0x4054d2
  40545e:	gs js  0x4054d5
  405461:	cs push 0x61
  405464:	jb     0x405466
  405466:	outs   dx,BYTE PTR ds:[esi]
  405468:	jne    0x405498
  40546a:	addr32 gs je 0x4054e2
  40546e:	gs js  0x4054e5
  405471:	cs rex.RXB
  405473:	gs je  0x4054cb
  405476:	push   rdx
  405477:	rex.WR add BYTE PTR [rax],r12b
  40547a:	outs   dx,DWORD PTR fs:[rsi]
  40547c:	outs   dx,BYTE PTR ds:[rsi]
  40547d:	gs or  al,BYTE PTR cs:[rax]
  405481:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  405485:	gs and BYTE PTR fs:[rdi+0x75],ch
  40548a:	je     0x4054ba
  40548c:	or     al,BYTE PTR [rax]
  40548e:	ja     0x4054f7
  405490:	gs je  0x405493
  405493:	sub    eax,0x7265762d
  405498:	jae    0x405503
  40549a:	outs   dx,DWORD PTR ds:[rsi]
  40549b:	outs   dx,BYTE PTR ds:[rsi]
  40549c:	add    BYTE PTR [rip+0x4f2d0071],ch        # 0x4f6d5513
  4054a2:	add    BYTE PTR [rip+0x542d00],ch        # 0x9481a8
  4054a8:	xor    esi,DWORD PTR [rax]
  4054aa:	add    BYTE PTR [rcx+rdi*2+0x6e],ch
  4054ae:	js     0x4054b0
  4054b0:	sub    eax,0x72756f73
  4054b5:	movsxd esp,DWORD PTR [rbp+0x0]
  4054b8:	movsxd esi,DWORD PTR [rbp+0x72]
  4054bb:	ins    BYTE PTR es:[rdi],dx
  4054bc:	add    BYTE PTR [rip+0x6c69732d],ch        # 0x6ca9c7ef
  4054c2:	outs   dx,BYTE PTR gs:[rsi]
  4054c4:	je     0x4054c6
  4054c6:	and    BYTE PTR [rsi+0x61],ah
  4054c9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x68000a2e
  4054d1:	gs ins BYTE PTR es:[rdi],dx
  4054d3:	jo     0x4054d5
  4054d5:	jno    0x40554c
  4054d7:	imul   esp,DWORD PTR [rbp+0x74],0x6c697300
  4054de:	outs   dx,BYTE PTR gs:[rsi]
  4054e0:	je     0x4054e2
  4054e2:	jbe    0x405549
  4054e4:	jb     0x405559
  4054e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    al,dl
  405501:	push   rsp
  405502:	add    BYTE PTR [rax],al
	...
  405515:	add    BYTE PTR [rax],al
  405517:	add    BYTE PTR [rax+0x0],ch
  40551a:	add    BYTE PTR [rax],al
  40551c:	add    BYTE PTR [rax],al
  40551e:	add    BYTE PTR [rax],al
  405520:	(bad)  
  405521:	push   rsp
  405522:	add    BYTE PTR [rax],al
	...
  405535:	add    BYTE PTR [rax],al
  405537:	add    BYTE PTR [rcx+0x0],dh
  40553a:	add    BYTE PTR [rax],al
  40553c:	add    BYTE PTR [rax],al
  40553e:	add    BYTE PTR [rax],al
  405540:	fist   DWORD PTR [rax+rax*2+0x0]
	...
  405558:	jno    0x40555a
  40555a:	add    BYTE PTR [rax],al
  40555c:	add    BYTE PTR [rax],al
  40555e:	add    BYTE PTR [rax],al
  405560:	loop   0x4055b6
  405562:	add    BYTE PTR [rax],al
	...
  405575:	add    BYTE PTR [rax],al
  405577:	add    BYTE PTR [rsi+0x0],dl
	...
  4055be:	add    BYTE PTR [rax],al
  4055c0:	add    BYTE PTR [rbp+0x40],0x0
  4055c7:	add    BYTE PTR [rax+0x4080],al
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rax],dh
  4055d1:	sbb    eax,DWORD PTR [rax+0x0]
	...
  4055e0:	rex.B jb 0x40564a
  4055e3:	jne    0x405652
  4055e5:	outs   dx,BYTE PTR gs:[rsi]
  4055e7:	je     0x405609
  4055e9:	outs   dx,DWORD PTR fs:[rsi]
  4055eb:	ins    DWORD PTR es:[rdi],dx
  4055ec:	(bad)  
  4055ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4055f4:	jb     0x405616
  4055f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4055fa:	rex.B
  4055fb:	rex.WB
  4055fc:	rex.WRX sub QWORD PTR [rax],r8
  4055ff:	rex.B jb 0x405669
  405602:	jne    0x405671
  405604:	outs   dx,BYTE PTR gs:[rsi]
  405606:	je     0x405628
  405608:	jae    0x405673
  40560a:	outs   dx,BYTE PTR ds:[rsi]
  40560b:	addr32 jne 0x40567a
  40560e:	(bad)  
  40560f:	jb     0x40567a
  405611:	je     0x40568c
  405613:	and    BYTE PTR [rax],ch
  405615:	push   rbx
  405616:	rex.WB
  405617:	rex.RXB
  405618:	rex.WRX sub QWORD PTR [rax],r8
  40561b:	add    BYTE PTR [rax],al
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rdi+0x76],cl
  405622:	gs jb  0x40568b
  405625:	ins    BYTE PTR es:[rdi],dx
  405626:	outs   dx,DWORD PTR ds:[rsi]
  405627:	ja     0x405649
  405629:	jb     0x40568c
  40562b:	outs   dx,BYTE PTR ds:[rsi]
  40562c:	and    BYTE PTR gs:[ebp+0x72],ah
  405631:	jb     0x4056a2
  405633:	jb     0x405655
  405635:	sub    BYTE PTR [rdi+0x56],cl
  405638:	rex.RB push r10
  40563a:	rex.RX
  40563b:	rex.WR
  40563c:	rex.WRXB push r15
  40563e:	sub    DWORD PTR [rax],eax
  405640:	push   rax
  405641:	(bad)  
  405642:	jb     0x4056b8
  405644:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40564b:	jae    0x40566d
  40564d:	outs   dx,DWORD PTR ds:[rsi]
  40564e:	data16 and BYTE PTR [rbx+0x69],dh
  405652:	outs   dx,BYTE PTR ds:[esi]
  405654:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40565b:	and    BYTE PTR gs:[rax],ch
  40565e:	push   rax
  40565f:	rex.WR
  405660:	rex.WRXB push r11
  405662:	push   rbx
  405663:	sub    DWORD PTR [rax],eax
  405665:	add    BYTE PTR [rax],al
  405667:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40566b:	(bad)  
  40566c:	ins    BYTE PTR es:[rdi],dx
  40566d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405671:	jae    0x405693
  405673:	outs   dx,DWORD PTR ds:[rsi]
  405674:	data16 and BYTE PTR [rbx+0x69],dh
  405678:	outs   dx,BYTE PTR ds:[esi]
  40567a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405681:	and    BYTE PTR gs:[rax],ch
  405684:	push   rsp
  405685:	rex.WR
  405686:	rex.WRXB push r11
  405688:	push   rbx
  405689:	sub    DWORD PTR [rax],eax
  40568b:	add    BYTE PTR [rax],al
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405693:	and    BYTE PTR [rdx+0x65],dh
  405696:	jae    0x40570d
  405698:	ins    BYTE PTR es:[rdi],dx
  405699:	je     0x4056bb
  40569b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4056a2:	jae    0x405711
  4056a4:	(bad)  
  4056a5:	ins    BYTE PTR es:[rdi],dx
  4056a6:	ins    BYTE PTR es:[rdi],dx
  4056a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4056ab:	(bad)  
  4056ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4056b0:	jo     0x405724
  4056b2:	gs jae 0x40571a
  4056b5:	outs   dx,BYTE PTR ds:[rsi]
  4056b6:	je     0x40571d
  4056b8:	and    BYTE PTR fs:[rax],ch
  4056bb:	push   rbp
  4056bc:	rex.WRX
  4056bd:	rex.R
  4056be:	rex.RB push r10
  4056c0:	rex.RX
  4056c1:	rex.WR
  4056c2:	rex.WRXB push r15
  4056c4:	sub    DWORD PTR [rax],eax
  4056c6:	push   rbp
  4056c7:	outs   dx,BYTE PTR ds:[rsi]
  4056c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056cc:	outs   dx,BYTE PTR ds:[rsi]
  4056cd:	and    BYTE PTR [rbp+0x72],ah
  4056d0:	jb     0x405741
  4056d2:	jb     0x4056d4
  4056d4:	add    BYTE PTR [rax],al
  4056d6:	add    BYTE PTR [rax],al
  4056d8:	pop    rdi
  4056d9:	ins    DWORD PTR es:[rdi],dx
  4056da:	(bad)  
  4056db:	je     0x405745
  4056dd:	gs jb  0x405752
  4056e0:	sub    BYTE PTR [rcx],ch
  4056e2:	cmp    ah,BYTE PTR [rax]
  4056e4:	and    eax,0x6e692073
  4056e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657f62
  4056ef:	sub    al,0x20
  4056f1:	and    eax,0x20202967
  4056f6:	sub    BYTE PTR [rdx+0x65],dh
  4056f9:	je     0x405771
  4056fb:	(bad)  
  4056fc:	ins    BYTE PTR es:[rdi],dx
  4056fd:	cmp    eax,0xa296725
  405702:	add    BYTE PTR [rax],al
  405704:	cld    
  405705:	(bad)  
  405708:	cmp    eax,0xacffffc5
  40570d:	(bad)  
  405710:	mov    esp,0xccffffc5
  405715:	(bad)  
  405718:	fadd   st(5),st
  40571a:	(bad)  
  40571b:	(bad)  
  40571c:	in     al,dx
  40571d:	(bad)  
  405720:	imul   r13,QWORD PTR [r14+0x67],0x36772d77
  405728:	xor    al,0x20
  40572a:	jb     0x4057a1
  40572c:	outs   dx,BYTE PTR ds:[rsi]
  40572d:	je     0x405798
  40572f:	ins    DWORD PTR es:[rdi],dx
  405730:	and    BYTE PTR gs:[rsi+0x61],ah
  405734:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40573c:	add    BYTE PTR [rax],al
  40573e:	add    BYTE PTR [rax],al
  405740:	rex.B
  405741:	fs fs jb 0x4057aa
  405745:	jae    0x4057ba
  405747:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a877bd
  40574d:	jae    0x40576f
  40574f:	outs   dx,BYTE PTR ds:[rsi]
  405750:	outs   dx,DWORD PTR ds:[rsi]
  405751:	and    BYTE PTR [rcx+0x6d],ch
  405754:	(bad)  
  405755:	addr32 gs sub eax,0x74636573
  40575c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405763:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40576a:	jne    0x4057d1
  40576c:	jb     0x4057e7
  40576e:	and    BYTE PTR [rsi+0x61],ah
  405771:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405779:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a277e3
  40577f:	je     0x4057e6
  405781:	jae    0x4057a3
  405783:	(bad)  
  405784:	je     0x4057a6
  405786:	(bad)  
  405787:	fs fs jb 0x4057f0
  40578b:	jae    0x405800
  40578d:	and    BYTE PTR [rip+0x70],ah        # 0x405803
  405793:	add    BYTE PTR [rax],al
  405795:	add    BYTE PTR [rax],al
  405797:	add    BYTE PTR [rax],ah
  405799:	and    BYTE PTR [rsi+0x69],dl
  40579c:	jb     0x405812
  40579e:	jne    0x405801
  4057a0:	ins    BYTE PTR es:[rdi],dx
  4057a1:	push   rax
  4057a2:	jb     0x405813
  4057a4:	je     0x40580b
  4057a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4057aa:	(bad)  
  4057ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4057b3:	push   0x646f6320
  4057b8:	and    BYTE PTR gs:[rax],dh
  4057bb:	js     0x4057e2
  4057bd:	js     0x4057bf
  4057bf:	add    BYTE PTR [rax],ah
  4057c1:	and    BYTE PTR [rbp+0x6e],dl
  4057c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4057c8:	outs   dx,BYTE PTR ds:[rsi]
  4057c9:	and    BYTE PTR [rax+0x73],dh
  4057cc:	gs jne 0x405833
  4057cf:	outs   dx,DWORD PTR ds:[rsi]
  4057d0:	and    BYTE PTR [rdx+0x65],dh
  4057d3:	ins    BYTE PTR es:[rdi],dx
  4057d4:	outs   dx,DWORD PTR ds:[rsi]
  4057d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4057d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4057df:	je     0x405850
  4057e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4057e4:	and    BYTE PTR [rsi+0x65],dh
  4057e7:	jb     0x40585c
  4057e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4057f0:	or     al,BYTE PTR [rax]
  4057f2:	add    BYTE PTR [rax],al
  4057f4:	add    BYTE PTR [rax],al
  4057f6:	add    BYTE PTR [rax],al
  4057f8:	and    BYTE PTR [rax],ah
  4057fa:	push   rbp
  4057fb:	outs   dx,BYTE PTR ds:[rsi]
  4057fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405800:	outs   dx,BYTE PTR ds:[rsi]
  405801:	and    BYTE PTR [rax+0x73],dh
  405804:	gs jne 0x40586b
  405807:	outs   dx,DWORD PTR ds:[rsi]
  405808:	and    BYTE PTR [rdx+0x65],dh
  40580b:	ins    BYTE PTR es:[rdi],dx
  40580c:	outs   dx,DWORD PTR ds:[rsi]
  40580d:	movsxd esp,DWORD PTR [rcx+0x74]
  405810:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405817:	and    BYTE PTR [rbx+0x69],dh
  40581a:	jp     0x405881
  40581c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8686
	...
  40582e:	add    BYTE PTR [rax],al
  405830:	cs jo  0x405897
  405833:	(bad)  
  405834:	je     0x405897
	...
  40583e:	add    BYTE PTR [rax],al
  405840:	push   rax
  405841:	rex
  405842:	add    BYTE PTR [rax],al
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rax+0x40],ah
  405852:	add    BYTE PTR [rax],al
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rax],dh
  405861:	add    BYTE PTR ss:[rax],al
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rax+0x405d],ah
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rax+0x405d],ah
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    al,dl
  405891:	push   rbp
  405892:	add    BYTE PTR [rax],al
	...
  4058a1:	add    BYTE PTR [rax+0x0],al
	...
  4058b0:	mov    WORD PTR [rax+rax*2+0x0],ss
	...
  4058bf:	add    BYTE PTR [rsp+rdx*4+0x40],dh
	...
  4058ce:	add    BYTE PTR [rax],al
  4058d0:	(bad)  
  4058d1:	xchg   esp,eax
  4058d2:	add    BYTE PTR [rax],al
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    ah,ch
  4058e1:	xchg   esp,eax
  4058e2:	add    BYTE PTR [rax],al
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    al,al
  4058f1:	xchg   BYTE PTR [rax+0x0],al
	...
  405900:	sub    BYTE PTR [rdx+0x40],cl
	...
  40590e:	add    BYTE PTR [rax],al
  405910:	and    BYTE PTR [rdx+0x40],cl
	...
  40591e:	add    BYTE PTR [rax],al
  405920:	adc    BYTE PTR [rdx+0x40],cl
	...
  40592e:	add    BYTE PTR [rax],al
  405930:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40593e:	add    BYTE PTR [rax],al
  405940:	add    BYTE PTR [rax+0x40],ah
	...
  40594e:	add    BYTE PTR [rax],al
  405950:	adc    BYTE PTR [rax+0x40],ah
	...
  40595e:	add    BYTE PTR [rax],al
  405960:	sbb    BYTE PTR [rax+0x40],ah
	...
  40596e:	add    BYTE PTR [rax],al
  405970:	xor    BYTE PTR [rax+0x40],ah
	...
  40597e:	add    BYTE PTR [rax],al
  405980:	push   rax
  405981:	add    BYTE PTR [rax+0x0],0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rax+0x4086],dl
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    al,al
  4059a1:	and    al,0x40
	...
  4059af:	add    BYTE PTR [rax],dl
  4059b1:	sbb    al,0x40
	...
  4059bf:	add    BYTE PTR [rax-0x7a],al
  4059c2:	add    BYTE PTR [rax],al
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rax+0x17],dl
  4059d2:	add    BYTE PTR [rax],al
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rax],ah
  4059e1:	(bad)  
  4059e2:	add    BYTE PTR [rax],al
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rax-0x7a],dh
  4059f2:	add    BYTE PTR [rax],al
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rax-0x80],ah
  405a02:	add    BYTE PTR [rax],al
	...
  405a0d:	add    BYTE PTR [rax],al
  405a0f:	add    BYTE PTR [rax-0x7a],bl
  405a12:	add    BYTE PTR [rax],al
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  405a2f:	add    BYTE PTR [rax-0x7a],dl
  405a32:	add    BYTE PTR [rax],al
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b3d:	add    BYTE PTR [rax],al
  405b3f:	add    BYTE PTR [rdi+0x43],al
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x4e],al
  405b48:	push   rbp
  405b49:	sub    DWORD PTR [rax],esp
  405b4b:	xor    al,0x2e
  405b4d:	cmp    DWORD PTR [rsi],ebp
  405b4f:	xor    al,0x0
	...
  405b5d:	add    BYTE PTR [rax],al
  405b5f:	add    BYTE PTR [rdi+0x43],al
  405b62:	rex.XB cmp spl,BYTE PTR [r8]
  405b65:	sub    BYTE PTR [rdi+0x4e],al
  405b68:	push   rbp
  405b69:	sub    DWORD PTR [rax],esp
  405b6b:	xor    al,0x2e
  405b6d:	cmp    DWORD PTR [rsi],ebp
  405b6f:	xor    al,0x0
	...
  405b7d:	add    BYTE PTR [rax],al
  405b7f:	add    BYTE PTR [rdi+0x43],al
  405b82:	rex.XB cmp spl,BYTE PTR [r8]
  405b85:	sub    BYTE PTR [rdi+0x4e],al
  405b88:	push   rbp
  405b89:	sub    DWORD PTR [rax],esp
  405b8b:	xor    al,0x2e
  405b8d:	cmp    DWORD PTR [rsi],ebp
  405b8f:	xor    al,0x0
	...
  405b9d:	add    BYTE PTR [rax],al
  405b9f:	add    BYTE PTR [rdi+0x43],al
  405ba2:	rex.XB cmp spl,BYTE PTR [r8]
  405ba5:	sub    BYTE PTR [rdi+0x4e],al
  405ba8:	push   rbp
  405ba9:	sub    DWORD PTR [rax],esp
  405bab:	xor    al,0x2e
  405bad:	cmp    DWORD PTR [rsi],ebp
  405baf:	xor    al,0x0
	...
  405bbd:	add    BYTE PTR [rax],al
  405bbf:	add    BYTE PTR [rdi+0x43],al
  405bc2:	rex.XB cmp spl,BYTE PTR [r8]
  405bc5:	sub    BYTE PTR [rdi+0x4e],al
  405bc8:	push   rbp
  405bc9:	sub    DWORD PTR [rax],esp
  405bcb:	xor    al,0x2e
  405bcd:	cmp    DWORD PTR [rsi],ebp
  405bcf:	xor    al,0x0
	...
  405bdd:	add    BYTE PTR [rax],al
  405bdf:	add    BYTE PTR [rdi+0x43],al
  405be2:	rex.XB cmp spl,BYTE PTR [r8]
  405be5:	sub    BYTE PTR [rdi+0x4e],al
  405be8:	push   rbp
  405be9:	sub    DWORD PTR [rax],esp
  405beb:	xor    al,0x2e
  405bed:	cmp    DWORD PTR [rsi],ebp
  405bef:	xor    al,0x0
	...
  405bfd:	add    BYTE PTR [rax],al
  405bff:	add    BYTE PTR [rdi+0x43],al
  405c02:	rex.XB cmp spl,BYTE PTR [r8]
  405c05:	sub    BYTE PTR [rdi+0x4e],al
  405c08:	push   rbp
  405c09:	sub    DWORD PTR [rax],esp
  405c0b:	xor    al,0x2e
  405c0d:	cmp    DWORD PTR [rsi],ebp
  405c0f:	xor    al,0x0
	...
  405c1d:	add    BYTE PTR [rax],al
  405c1f:	add    BYTE PTR [rdi+0x43],al
  405c22:	rex.XB cmp spl,BYTE PTR [r8]
  405c25:	sub    BYTE PTR [rdi+0x4e],al
  405c28:	push   rbp
  405c29:	sub    DWORD PTR [rax],esp
  405c2b:	xor    al,0x2e
  405c2d:	cmp    DWORD PTR [rsi],ebp
  405c2f:	xor    al,0x0
	...
  405c3d:	add    BYTE PTR [rax],al
  405c3f:	add    BYTE PTR [rdi+0x43],al
  405c42:	rex.XB cmp spl,BYTE PTR [r8]
  405c45:	sub    BYTE PTR [rdi+0x4e],al
  405c48:	push   rbp
  405c49:	sub    DWORD PTR [rax],esp
  405c4b:	xor    al,0x2e
  405c4d:	cmp    DWORD PTR [rsi],ebp
  405c4f:	xor    al,0x0
	...
  405c5d:	add    BYTE PTR [rax],al
  405c5f:	add    BYTE PTR [rdi+0x43],al
  405c62:	rex.XB cmp spl,BYTE PTR [r8]
  405c65:	sub    BYTE PTR [rdi+0x4e],al
  405c68:	push   rbp
  405c69:	sub    DWORD PTR [rax],esp
  405c6b:	xor    al,0x2e
  405c6d:	cmp    DWORD PTR [rsi],ebp
  405c6f:	xor    al,0x0
	...
  405c7d:	add    BYTE PTR [rax],al
  405c7f:	add    BYTE PTR [rdi+0x43],al
  405c82:	rex.XB cmp spl,BYTE PTR [r8]
  405c85:	sub    BYTE PTR [rdi+0x4e],al
  405c88:	push   rbp
  405c89:	sub    DWORD PTR [rax],esp
  405c8b:	xor    al,0x2e
  405c8d:	cmp    DWORD PTR [rsi],ebp
  405c8f:	xor    al,0x0
	...
  405c9d:	add    BYTE PTR [rax],al
  405c9f:	add    BYTE PTR [rdi+0x43],al
  405ca2:	rex.XB cmp spl,BYTE PTR [r8]
  405ca5:	sub    BYTE PTR [rdi+0x4e],al
  405ca8:	push   rbp
  405ca9:	sub    DWORD PTR [rax],esp
  405cab:	xor    al,0x2e
  405cad:	cmp    DWORD PTR [rsi],ebp
  405caf:	xor    al,0x0
	...
  405cbd:	add    BYTE PTR [rax],al
  405cbf:	add    BYTE PTR [rdi+0x43],al
  405cc2:	rex.XB cmp spl,BYTE PTR [r8]
  405cc5:	sub    BYTE PTR [rdi+0x4e],al
  405cc8:	push   rbp
  405cc9:	sub    DWORD PTR [rax],esp
  405ccb:	xor    al,0x2e
  405ccd:	cmp    DWORD PTR [rsi],ebp
  405ccf:	xor    al,0x0
	...
  405cdd:	add    BYTE PTR [rax],al
  405cdf:	add    BYTE PTR [rdi+0x43],al
  405ce2:	rex.XB cmp spl,BYTE PTR [r8]
  405ce5:	sub    BYTE PTR [rdi+0x4e],al
  405ce8:	push   rbp
  405ce9:	sub    DWORD PTR [rax],esp
  405ceb:	xor    al,0x2e
  405ced:	cmp    DWORD PTR [rsi],ebp
  405cef:	xor    al,0x0
	...
  405cfd:	add    BYTE PTR [rax],al
  405cff:	add    BYTE PTR [rdi+0x43],al
  405d02:	rex.XB cmp spl,BYTE PTR [r8]
  405d05:	sub    BYTE PTR [rdi+0x4e],al
  405d08:	push   rbp
  405d09:	sub    DWORD PTR [rax],esp
  405d0b:	xor    al,0x2e
  405d0d:	cmp    DWORD PTR [rsi],ebp
  405d0f:	xor    al,0x0
	...
  405d1d:	add    BYTE PTR [rax],al
  405d1f:	add    BYTE PTR [rdi+0x43],al
  405d22:	rex.XB cmp spl,BYTE PTR [r8]
  405d25:	sub    BYTE PTR [rdi+0x4e],al
  405d28:	push   rbp
  405d29:	sub    DWORD PTR [rax],esp
  405d2b:	xor    al,0x2e
  405d2d:	cmp    DWORD PTR [rsi],ebp
  405d2f:	xor    al,0x0
	...
  405d3d:	add    BYTE PTR [rax],al
  405d3f:	add    BYTE PTR [rdi+0x43],al
  405d42:	rex.XB cmp spl,BYTE PTR [r8]
  405d45:	sub    BYTE PTR [rdi+0x4e],al
  405d48:	push   rbp
  405d49:	sub    DWORD PTR [rax],esp
  405d4b:	xor    al,0x2e
  405d4d:	cmp    DWORD PTR [rsi],ebp
  405d4f:	xor    al,0x0
	...
  405d5d:	add    BYTE PTR [rax],al
  405d5f:	add    BYTE PTR [rdi+0x43],al
  405d62:	rex.XB cmp spl,BYTE PTR [r8]
  405d65:	sub    BYTE PTR [rdi+0x4e],al
  405d68:	push   rbp
  405d69:	sub    DWORD PTR [rax],esp
  405d6b:	xor    al,0x2e
  405d6d:	cmp    DWORD PTR [rsi],ebp
  405d6f:	xor    al,0x0
	...
  405d7d:	add    BYTE PTR [rax],al
  405d7f:	add    BYTE PTR [rdi+0x43],al
  405d82:	rex.XB cmp spl,BYTE PTR [r8]
  405d85:	sub    BYTE PTR [rdi+0x4e],al
  405d88:	push   rbp
  405d89:	sub    DWORD PTR [rax],esp
  405d8b:	xor    al,0x2e
  405d8d:	cmp    DWORD PTR [rsi],ebp
  405d8f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15810000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffff90000070
  406055:	adc    eax,0x16c20000
  40605a:	add    BYTE PTR [rax],al
  40605c:	jo     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	jo     0x406079
  406062:	add    BYTE PTR [rax],al
  406064:	(bad)  
  406065:	sbb    BYTE PTR [rax],al
  406067:	add    BYTE PTR [rax+0x20000070],bl
  40606d:	sbb    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rcx],bh
  406071:	sbb    BYTE PTR [rax],al
  406073:	add    BYTE PTR [rax+0x40000070],ah
  406079:	sbb    BYTE PTR [rax],al
  40607b:	add    BYTE PTR [rbp+0x18],dh
  40607e:	add    BYTE PTR [rax],al
  406080:	test   al,0x70
  406082:	add    BYTE PTR [rax],al
  406084:	sbb    BYTE PTR [rax],0x0
  406087:	add    ch,dl
  406089:	sbb    BYTE PTR [rax],al
  40608b:	add    BYTE PTR [rax-0x1fffff90],dh
  406091:	sbb    BYTE PTR [rax],al
  406093:	add    ah,bh
  406095:	sbb    BYTE PTR [rax],al
  406097:	add    BYTE PTR [rax+rsi*2+0x19000000],bh
  40609e:	add    BYTE PTR [rax],al
  4060a0:	or     bl,BYTE PTR [rcx]
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	shl    BYTE PTR [rax+0x0],0x0
  4060a8:	adc    BYTE PTR [rcx],bl
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	adc    ebx,DWORD PTR [rcx]
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	(bad)  
  4060b1:	jo     0x4060b3
  4060b3:	add    BYTE PTR [rax],ah
  4060b5:	sbb    DWORD PTR [rax],eax
  4060b7:	add    dh,dh
  4060b9:	sbb    DWORD PTR [rax],eax
  4060bb:	add    al,cl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax],al
  4060c1:	sbb    al,BYTE PTR [rax]
  4060c3:	add    bl,bh
  4060c5:	sbb    al,BYTE PTR [rax]
  4060c7:	add    al,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax],al
  4060cd:	sbb    eax,DWORD PTR [rax]
  4060cf:	add    BYTE PTR [rdi],ch
  4060d1:	sbb    eax,DWORD PTR [rax]
  4060d3:	add    al,ch
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax],dh
  4060d9:	sbb    eax,DWORD PTR [rax]
  4060db:	add    BYTE PTR [rcx-0xfffffe5],bl
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax-0x5cffffe5],ah
  4060e9:	sbb    eax,DWORD PTR [rax]
  4060eb:	add    ah,bh
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax-0xeffffe5],dh
  4060f5:	sbb    eax,DWORD PTR [rax]
  4060f7:	add    BYTE PTR [rax],al
  4060f9:	jno    0x4060fb
  4060fb:	add    BYTE PTR [rax],al
  4060fd:	sbb    al,0x0
  4060ff:	add    BYTE PTR [rsp+rbx*1],cl
  406102:	add    BYTE PTR [rax],al
  406104:	or     BYTE PTR [rcx+0x0],dh
  406107:	add    BYTE PTR [rax],dl
  406109:	sbb    al,0x0
  40610b:	add    BYTE PTR [rbx*1+0x710c0000],cl
  406112:	add    BYTE PTR [rax],al
  406114:	adc    BYTE PTR [rip+0x1d130000],bl        # 0x1d53611a
  40611a:	add    BYTE PTR [rax],al
  40611c:	and    al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	and    BYTE PTR [rip+0x1d240000],bl        # 0x1d646126
  406126:	add    BYTE PTR [rax],al
  406128:	sub    BYTE PTR [rcx+0x0],dh
  40612b:	add    BYTE PTR [rax],dh
  40612d:	sbb    eax,0x1d340000
  406132:	add    BYTE PTR [rax],al
  406134:	sub    al,0x71
  406136:	add    BYTE PTR [rax],al
  406138:	rex sbb eax,0x1da10000
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    BYTE PTR [rcx+0x0],dh
  406143:	add    BYTE PTR [rax+0x1200001d],dh
  406149:	(bad)  
  40614a:	add    BYTE PTR [rax],al
  40614c:	cmp    al,0x71
  40614e:	add    BYTE PTR [rax],al
  406150:	and    BYTE PTR [rdi],bl
  406152:	add    BYTE PTR [rax],al
  406154:	sbb    DWORD PTR [rdx],esp
  406156:	add    BYTE PTR [rax],al
  406158:	push   rax
  406159:	jno    0x40615b
  40615b:	add    BYTE PTR [rax],ah
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    dh,al
  406161:	and    eax,DWORD PTR [rax]
  406163:	add    BYTE PTR [rax+0x71],ch
  406166:	add    BYTE PTR [rax],al
  406168:	shl    BYTE PTR [rbx],1
  40616a:	add    BYTE PTR [rax],al
  40616c:	mov    esp,0x70000024
  406171:	jno    0x406173
  406173:	add    al,al
  406175:	and    al,0x0
  406177:	add    BYTE PTR [rax+0x26],bh
  40617a:	add    BYTE PTR [rax],al
  40617c:	xor    BYTE PTR [rcx+0x0],0x0
  406180:	and    BYTE PTR [rsi],0x0
  406183:	add    ch,ch
  406185:	add    BYTE PTR es:[rax],al
  406188:	mov    BYTE PTR [rcx+0x0],dh
  40618b:	add    al,dh
  40618d:	add    BYTE PTR es:[rax],al
  406190:	outs   dx,DWORD PTR ds:[rsi]
  406191:	(bad)  
  406192:	add    BYTE PTR [rax],al
  406194:	cwde   
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax+0x27],dh
  40619a:	add    BYTE PTR [rax],al
  40619c:	movaps xmm0,XMMWORD PTR [rax]
  40619f:	add    BYTE PTR [rcx+rsi*2+0x28100000],ah
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	(bad)  
  4061a9:	sub    BYTE PTR [rax],al
  4061ab:	add    BYTE PTR [rcx+rsi*2+0x28f00000],ch
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	movaps XMMWORD PTR [rax],xmm0
  4061b7:	add    BYTE PTR [rcx+rsi*2+0x29100000],dh
  4061be:	add    BYTE PTR [rax],al
  4061c0:	and    ch,BYTE PTR [rcx]
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	mov    eax,0x30000071
  4061c9:	sub    DWORD PTR [rax],eax
  4061cb:	add    BYTE PTR [rbp+0x29],dh
  4061ce:	add    BYTE PTR [rax],al
  4061d0:	mov    esp,0x80000071
  4061d5:	sub    DWORD PTR [rax],eax
  4061d7:	add    BYTE PTR [rsi],bl
  4061d9:	sub    al,BYTE PTR [rax]
  4061db:	add    al,al
  4061dd:	jno    0x4061df
  4061df:	add    BYTE PTR [rax],ah
  4061e1:	sub    al,BYTE PTR [rax]
  4061e3:	add    BYTE PTR [rbx+0x2a],ah
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	int3   
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x2a],dh
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	stos   DWORD PTR es:[rdi],eax
  4061f1:	sub    al,BYTE PTR [rax]
  4061f3:	add    al,bl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax+0x3e00002a],dh
  4061fd:	sub    eax,DWORD PTR [rax]
  4061ff:	add    al,ah
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax+0x2b],al
  406206:	add    BYTE PTR [rax],al
  406208:	js     0x406235
  40620a:	add    BYTE PTR [rax],al
  40620c:	in     al,dx
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax-0x2affffd5],al
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bh
  406219:	jno    0x40621b
  40621b:	add    al,ah
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    BYTE PTR [rsi+0x400002c],cl
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax-0x47ffffd3],dh
  40622d:	sub    eax,0x72140000
  406232:	add    BYTE PTR [rax],al
  406234:	shr    BYTE PTR [rip+0x2dcb0000],0x0        # 0x2e0b623b
  40623b:	add    BYTE PTR [rax],bl
  40623d:	jb     0x40623f
  40623f:	add    BYTE PTR [rax+0x2a00002e],dl
  406245:	add    BYTE PTR ss:[rax],al
  406248:	mov    BYTE PTR [rax+0x0],dh
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	test   al,0x2d
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,al
  407041:	and    al,0x0
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	test   al,0x2d
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	shl    BYTE PTR [rax+rax*1],0x0
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rcx+rax*1],eax
  40706b:	add    BYTE PTR [rdx+riz*4],al
  40706e:	add    BYTE PTR [rax],al
  407070:	add    DWORD PTR [rdi],edx
  407072:	or     DWORD PTR [rax],eax
  407074:	(bad)  
  407075:	add    DWORD PTR [rdx+rax*1],eax
  407078:	wrmsr  
  40707a:	(bad)  
  40707b:	(bad)  
  40707c:	or     eax,0xb500c70
  407081:	rol    BYTE PTR [rax+rdx*8],0x2
  407085:	loopne 0x407087
  407087:	add    BYTE PTR [rcx],al
  407089:	or     eax,DWORD PTR [rsi]
  40708b:	add    BYTE PTR [rbx],cl
  40708d:	add    DWORD PTR [rip+0x3300400],edx        # 0x3707493
  407093:	(bad)  
  407094:	add    dh,BYTE PTR [rax+0x1]
  407097:	push   rax
  407098:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570a0
  40709e:	add    DWORD PTR [rax],esi
  4070a0:	add    DWORD PTR [rcx+rax*1],eax
  4070a3:	add    BYTE PTR [rdx+rax*2],al
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	add    DWORD PTR [rcx+rax*1],eax
  4070ab:	add    BYTE PTR [rdx+rax*2],al
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	add    DWORD PTR [rsi],eax
  4070b2:	add    eax,DWORD PTR [rax]
  4070b4:	(bad)  
  4070b5:	rex.X add sil,BYTE PTR [rax]
  4070b8:	add    DWORD PTR [rax+0x0],esp
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rcx],al
  4070c1:	add    BYTE PTR [rax],al
  4070c3:	add    BYTE PTR [rcx],al
  4070c5:	add    BYTE PTR [rax],al
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	or     al,BYTE PTR [rsi]
  4070cb:	add    BYTE PTR [rdx],cl
  4070cd:	jb     0x4070d5
  4070cf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07535
  4070d5:	push   rax
  4070d6:	add    al,al
  4070d8:	add    DWORD PTR [rdx],ecx
  4070da:	add    eax,0x6d20a05
  4070df:	add    eax,DWORD PTR [rbx]
  4070e1:	xor    BYTE PTR [rdx],al
  4070e3:	(bad)  
  4070e4:	add    DWORD PTR [rax+0x0],edx
  4070e7:	add    BYTE PTR [rcx],al
  4070e9:	add    al,0x1
  4070eb:	add    BYTE PTR [rdx+rax*2],al
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rsi],eax
  4070f2:	add    eax,DWORD PTR [rax]
  4070f4:	(bad)  
  4070f5:	rex.X add sil,BYTE PTR [rax]
  4070f8:	add    DWORD PTR [rax+0x0],esp
  4070fb:	add    BYTE PTR [rcx],al
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rcx],al
  407101:	add    al,0x1
  407103:	add    BYTE PTR [rdx+riz*4],al
  407106:	add    BYTE PTR [rax],al
  407108:	add    DWORD PTR [rax],eax
  40710a:	add    BYTE PTR [rax],al
  40710c:	add    DWORD PTR [rsi],edx
  40710e:	or     DWORD PTR [rax],eax
  407110:	(bad)  
  407111:	mov    BYTE PTR [rsi],al
  407113:	add    BYTE PTR [rax],dl
  407115:	js     0x40711c
  407117:	add    BYTE PTR [rbx],cl
  407119:	push   0xffffffffe2060004
  40711e:	add    dh,BYTE PTR [rax]
  407120:	add    DWORD PTR [rax+0x0],esp
  407123:	add    BYTE PTR [rcx],al
  407125:	add    BYTE PTR [rax],al
  407127:	add    BYTE PTR [rcx],al
  407129:	add    BYTE PTR [rax],al
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rcx],al
  407131:	(bad)  
  407132:	add    eax,DWORD PTR [rax]
  407134:	(bad)  
  407135:	(bad)  
  407137:	xor    BYTE PTR [rcx],al
  407139:	(bad)  
  40713a:	add    BYTE PTR [rax],al
  40713c:	add    DWORD PTR [rdi+rax*1],ecx
  40713f:	add    BYTE PTR [rdx+riz*4],cl
  407142:	or     BYTE PTR [rax],dh
  407144:	(bad)  
  407145:	(bad)  
  407146:	(bad)  
  407147:	jo     0x40714e
  407149:	push   rax
  40714a:	add    al,0xc0
  40714c:	add    dl,al
  40714e:	add    BYTE PTR [rax],al
  407150:	add    DWORD PTR [rcx],edx
  407152:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2369
  407158:	or     dh,BYTE PTR [rax]
  40715a:	or     DWORD PTR [rax+0x8],esp
  40715d:	jo     0x407166
  40715f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2207536
  407166:	add    BYTE PTR [rax],al
  407168:	add    DWORD PTR [rcx+rax*1],eax
  40716b:	add    BYTE PTR [rdx+rax*2],al
  40716e:	add    BYTE PTR [rax],al
  407170:	add    DWORD PTR [rdx],ecx
  407172:	(bad)  
  407173:	add    BYTE PTR [rdx],cl
  407175:	xor    al,BYTE PTR [rsi]
  407177:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075dd
  40717d:	push   rax
  40717e:	add    al,al
  407180:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457188
  407186:	add    DWORD PTR [rax],esi
  407188:	add    DWORD PTR [rax],ecx
  40718a:	add    eax,0x4420800
  40718f:	xor    BYTE PTR [rbx],al
  407191:	(bad)  
  407192:	add    dh,BYTE PTR [rax+0x1]
  407195:	push   rax
  407196:	add    BYTE PTR [rax],al
  407198:	add    DWORD PTR [rdi],eax
  40719a:	add    al,0x0
  40719c:	(bad)  
  40719d:	xor    al,BYTE PTR [rbx]
  40719f:	xor    BYTE PTR [rdx],al
  4071a1:	(bad)  
  4071a2:	add    DWORD PTR [rax+0x1],esi
  4071a5:	add    eax,0x32050002
  4071aa:	add    DWORD PTR [rax],esi
  4071ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571b4
  4071b2:	add    DWORD PTR [rax],esi
  4071b4:	add    DWORD PTR [rax],eax
  4071b6:	add    BYTE PTR [rax],al
  4071b8:	add    DWORD PTR [rax],eax
  4071ba:	add    BYTE PTR [rax],al
  4071bc:	add    DWORD PTR [rax],eax
  4071be:	add    BYTE PTR [rax],al
  4071c0:	add    DWORD PTR [rdi],eax
  4071c2:	add    al,0x0
  4071c4:	(bad)  
  4071c5:	xor    al,BYTE PTR [rbx]
  4071c7:	xor    BYTE PTR [rdx],al
  4071c9:	(bad)  
  4071ca:	add    DWORD PTR [rax+0x1],esi
  4071cd:	(bad)  
  4071ce:	add    eax,DWORD PTR [rax]
  4071d0:	(bad)  
  4071d1:	rex.X add sil,BYTE PTR [rax]
  4071d4:	add    DWORD PTR [rax+0x0],esp
  4071d7:	add    BYTE PTR [rcx],al
  4071d9:	add    eax,0x32050002
  4071de:	add    DWORD PTR [rax],esi
  4071e0:	add    DWORD PTR [rdi],eax
  4071e2:	add    al,0x0
  4071e4:	(bad)  
  4071e5:	xor    al,BYTE PTR [rbx]
  4071e7:	xor    BYTE PTR [rdx],al
  4071e9:	(bad)  
  4071ea:	add    DWORD PTR [rax+0x1],esi
  4071ed:	(bad)  
  4071ee:	add    eax,DWORD PTR [rax]
  4071f0:	(bad)  
  4071f1:	rex.X add sil,BYTE PTR [rax]
  4071f4:	add    DWORD PTR [rax+0x0],esp
  4071f7:	add    BYTE PTR [rcx],al
  4071f9:	(bad)  
  4071fa:	add    eax,DWORD PTR [rax]
  4071fc:	(bad)  
  4071fd:	rex.X add sil,BYTE PTR [rax]
  407200:	add    DWORD PTR [rax+0x0],esp
  407203:	add    BYTE PTR [rcx],al
  407205:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a0b
  40720b:	xor    BYTE PTR [rbx],al
  40720d:	(bad)  
  40720e:	add    dh,BYTE PTR [rax+0x1]
  407211:	push   rax
  407212:	add    BYTE PTR [rax],al
  407214:	add    DWORD PTR [rax],eax
  407216:	add    BYTE PTR [rax],al
  407218:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	test   al,0x9a
  40900e:	add    BYTE PTR [rax],al
  409010:	in     al,dx
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	or     al,0x91
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	rcr    BYTE PTR [rdx-0x6c6c0000],1
  409026:	add    BYTE PTR [rax],al
  409028:	sub    al,0x91
	...
  409032:	add    BYTE PTR [rax],al
  409034:	cmp    al,0x9b
  409036:	add    BYTE PTR [rax],al
  409038:	mov    ah,0x93
  40903a:	add    BYTE PTR [rax],al
  40903c:	in     al,dx
  40903d:	xchg   ecx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	enter  0x9b,0x0
  40904c:	je     0x408fe2
	...
  409062:	add    BYTE PTR [rax],al
  409064:	je     0x408ffb
  409066:	add    BYTE PTR [rax],al
  409068:	add    BYTE PTR [rax],al
  40906a:	add    BYTE PTR [rax],al
  40906c:	test   BYTE PTR [rbp+0x0],dl
  409072:	add    BYTE PTR [rax],al
  409074:	mov    WORD PTR [rbp+0x0],ss
  40907a:	add    BYTE PTR [rax],al
  40907c:	cwde   
  40907d:	xchg   ebp,eax
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rax],al
  409082:	add    BYTE PTR [rax],al
  409084:	mov    al,0x95
  409086:	add    BYTE PTR [rax],al
  409088:	add    BYTE PTR [rax],al
  40908a:	add    BYTE PTR [rax],al
  40908c:	rcl    BYTE PTR [rbp+0x0],0x0
  409093:	add    al,dl
  409095:	xchg   ebp,eax
  409096:	add    BYTE PTR [rax],al
  409098:	add    BYTE PTR [rax],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	call   0x409136
  4090a1:	add    BYTE PTR [rax],al
  4090a3:	add    al,bh
  4090a5:	xchg   ebp,eax
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	add    BYTE PTR [rax],al
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	or     BYTE PTR [rsi+0x0],dl
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	adc    al,0x96
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	xor    BYTE PTR [rsi+0x0],dl
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	rex xchg esi,eax
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	rex.WR xchg rsi,rax
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	(bad)  
  4090d5:	xchg   esi,eax
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	add    BYTE PTR [rax],al
  4090da:	add    BYTE PTR [rax],al
  4090dc:	ins    BYTE PTR es:[rdi],dx
  4090dd:	xchg   esi,eax
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rax],al
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	jl     0x40907c
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	mov    WORD PTR [rsi+0x0],ss
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	cwde   
  4090f5:	xchg   esi,eax
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	add    BYTE PTR [rax],al
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	test   al,0x96
	...
  40910a:	add    BYTE PTR [rax],al
  40910c:	mov    esp,0x96
  409111:	add    BYTE PTR [rax],al
  409113:	add    al,bl
  409115:	xchg   esi,eax
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	in     al,dx
  40911d:	xchg   esi,eax
	...
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    al,0x97
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	sbb    al,0x97
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	xor    al,0x97
  40913e:	add    BYTE PTR [rax],al
  409140:	add    BYTE PTR [rax],al
  409142:	add    BYTE PTR [rax],al
  409144:	xchg   rdi,rax
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	pop    rsi
  40914d:	xchg   edi,eax
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	je     0x4090ed
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	test   BYTE PTR [rdi+0x0],dl
  409162:	add    BYTE PTR [rax],al
  409164:	xchg   esi,eax
  409165:	xchg   edi,eax
  409166:	add    BYTE PTR [rax],al
  409168:	add    BYTE PTR [rax],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	mov    al,0x97
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	rcl    BYTE PTR [rdi+0x0],0x0
  40917b:	add    ah,bl
  40917d:	xchg   edi,eax
  40917e:	add    BYTE PTR [rax],al
  409180:	add    BYTE PTR [rax],al
  409182:	add    BYTE PTR [rax],al
  409184:	hlt    
  409185:	xchg   edi,eax
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	(bad)  
  40918d:	cwde   
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	and    al,0x98
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	cmp    BYTE PTR [rax+0x0],bl
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	push   rdx
  4091a5:	cwde   
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	add    BYTE PTR [rax],al
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	cbw    
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	add    BYTE PTR [rax],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	test   BYTE PTR [rax+0x0],bl
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	mov    WORD PTR [rax+0x0],ds
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	movabs al,ds:0xae00000000000098
  4091cd:	cwde   
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	retf   0x98
  4091d7:	add    BYTE PTR [rax],al
  4091d9:	add    BYTE PTR [rax],al
  4091db:	add    ah,bl
  4091dd:	cwde   
	...
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	in     al,dx
  4091ed:	cwde   
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    al,0x99
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	add    BYTE PTR [rax],al
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	adc    bl,BYTE PTR [rcx+0x0]
  409202:	add    BYTE PTR [rax],al
  409204:	and    bl,BYTE PTR [rcx+0x0]
  40920a:	add    BYTE PTR [rax],al
  40920c:	cs cdq 
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	cmp    al,0x99
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	rex.WR cqo 
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	pop    rsi
  409225:	cdq    
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	jb     0x4091c7
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	jl     0x4091cf
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	mov    bl,BYTE PTR [rcx+0x0]
  409242:	add    BYTE PTR [rax],al
  409244:	xchg   esp,eax
  409245:	cdq    
  409246:	add    BYTE PTR [rax],al
  409248:	add    BYTE PTR [rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	sahf   
  40924d:	cdq    
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	test   al,0x99
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rax],al
  40925a:	add    BYTE PTR [rax],al
  40925c:	mov    ah,0x99
  40925e:	add    BYTE PTR [rax],al
  409260:	add    BYTE PTR [rax],al
  409262:	add    BYTE PTR [rax],al
  409264:	mov    esp,0x99
  409269:	add    BYTE PTR [rax],al
  40926b:	add    dh,al
  40926d:	cdq    
  40926e:	add    BYTE PTR [rax],al
  409270:	add    BYTE PTR [rax],al
  409272:	add    BYTE PTR [rax],al
  409274:	rcr    BYTE PTR [rcx+0x0],1
  40927a:	add    BYTE PTR [rax],al
  40927c:	fcomp  DWORD PTR [rcx+0x0]
  409282:	add    BYTE PTR [rax],al
  409284:	loop   0x40921f
  409286:	add    BYTE PTR [rax],al
  409288:	add    BYTE PTR [rax],al
  40928a:	add    BYTE PTR [rax],al
  40928c:	(bad)  
  40928d:	cdq    
  40928e:	add    BYTE PTR [rax],al
  409290:	add    BYTE PTR [rax],al
  409292:	add    BYTE PTR [rax],al
  409294:	hlt    
  409295:	cdq    
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	(bad)  
  40929d:	cdq    
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	(bad)  
  4092a5:	(bad)  
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    BYTE PTR [rax],al
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	adc    BYTE PTR [rdx+0x0],bl
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	sbb    bl,BYTE PTR [rdx+0x0]
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	and    al,0x9a
  4092be:	add    BYTE PTR [rax],al
  4092c0:	add    BYTE PTR [rax],al
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	cs (bad) 
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	cmp    BYTE PTR [rdx+0x0],bl
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	rex.X (bad) 
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	rex.WR (bad) 
	...
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	je     0x409283
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	add    BYTE PTR [rax],al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	test   BYTE PTR [rbp+0x0],dl
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	mov    WORD PTR [rbp+0x0],ss
  409302:	add    BYTE PTR [rax],al
  409304:	cwde   
  409305:	xchg   ebp,eax
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
  40930a:	add    BYTE PTR [rax],al
  40930c:	mov    al,0x95
  40930e:	add    BYTE PTR [rax],al
  409310:	add    BYTE PTR [rax],al
  409312:	add    BYTE PTR [rax],al
  409314:	rcl    BYTE PTR [rbp+0x0],0x0
  40931b:	add    al,dl
  40931d:	xchg   ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	call   0x4093be
  409329:	add    BYTE PTR [rax],al
  40932b:	add    al,bh
  40932d:	xchg   ebp,eax
  40932e:	add    BYTE PTR [rax],al
  409330:	add    BYTE PTR [rax],al
  409332:	add    BYTE PTR [rax],al
  409334:	or     BYTE PTR [rsi+0x0],dl
  40933a:	add    BYTE PTR [rax],al
  40933c:	adc    al,0x96
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
  409342:	add    BYTE PTR [rax],al
  409344:	xor    BYTE PTR [rsi+0x0],dl
  40934a:	add    BYTE PTR [rax],al
  40934c:	rex xchg esi,eax
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
  409352:	add    BYTE PTR [rax],al
  409354:	rex.WR xchg rsi,rax
  409356:	add    BYTE PTR [rax],al
  409358:	add    BYTE PTR [rax],al
  40935a:	add    BYTE PTR [rax],al
  40935c:	(bad)  
  40935d:	xchg   esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	ins    BYTE PTR es:[rdi],dx
  409365:	xchg   esi,eax
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	jl     0x409304
  40936e:	add    BYTE PTR [rax],al
  409370:	add    BYTE PTR [rax],al
  409372:	add    BYTE PTR [rax],al
  409374:	mov    WORD PTR [rsi+0x0],ss
  40937a:	add    BYTE PTR [rax],al
  40937c:	cwde   
  40937d:	xchg   esi,eax
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
  409382:	add    BYTE PTR [rax],al
  409384:	test   al,0x96
	...
  409392:	add    BYTE PTR [rax],al
  409394:	mov    esp,0x96
  409399:	add    BYTE PTR [rax],al
  40939b:	add    al,bl
  40939d:	xchg   esi,eax
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	in     al,dx
  4093a5:	xchg   esi,eax
	...
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    al,0x97
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rax],al
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	sbb    al,0x97
  4093be:	add    BYTE PTR [rax],al
  4093c0:	add    BYTE PTR [rax],al
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	xor    al,0x97
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	add    BYTE PTR [rax],al
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	xchg   rdi,rax
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	add    BYTE PTR [rax],al
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	pop    rsi
  4093d5:	xchg   edi,eax
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	je     0x409375
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	test   BYTE PTR [rdi+0x0],dl
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	xchg   esi,eax
  4093ed:	xchg   edi,eax
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	mov    al,0x97
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	add    BYTE PTR [rax],al
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	rcl    BYTE PTR [rdi+0x0],0x0
  409403:	add    ah,bl
  409405:	xchg   edi,eax
  409406:	add    BYTE PTR [rax],al
  409408:	add    BYTE PTR [rax],al
  40940a:	add    BYTE PTR [rax],al
  40940c:	hlt    
  40940d:	xchg   edi,eax
  40940e:	add    BYTE PTR [rax],al
  409410:	add    BYTE PTR [rax],al
  409412:	add    BYTE PTR [rax],al
  409414:	(bad)  
  409415:	cwde   
  409416:	add    BYTE PTR [rax],al
  409418:	add    BYTE PTR [rax],al
  40941a:	add    BYTE PTR [rax],al
  40941c:	and    al,0x98
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
  409422:	add    BYTE PTR [rax],al
  409424:	cmp    BYTE PTR [rax+0x0],bl
  40942a:	add    BYTE PTR [rax],al
  40942c:	push   rdx
  40942d:	cwde   
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	cbw    
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
  40943a:	add    BYTE PTR [rax],al
  40943c:	test   BYTE PTR [rax+0x0],bl
  409442:	add    BYTE PTR [rax],al
  409444:	mov    WORD PTR [rax+0x0],ds
  40944a:	add    BYTE PTR [rax],al
  40944c:	movabs al,ds:0xae00000000000098
  409455:	cwde   
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
  40945a:	add    BYTE PTR [rax],al
  40945c:	retf   0x98
  40945f:	add    BYTE PTR [rax],al
  409461:	add    BYTE PTR [rax],al
  409463:	add    ah,bl
  409465:	cwde   
	...
  409472:	add    BYTE PTR [rax],al
  409474:	in     al,dx
  409475:	cwde   
  409476:	add    BYTE PTR [rax],al
  409478:	add    BYTE PTR [rax],al
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    al,0x99
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
  409482:	add    BYTE PTR [rax],al
  409484:	adc    bl,BYTE PTR [rcx+0x0]
  40948a:	add    BYTE PTR [rax],al
  40948c:	and    bl,BYTE PTR [rcx+0x0]
  409492:	add    BYTE PTR [rax],al
  409494:	cs cdq 
  409496:	add    BYTE PTR [rax],al
  409498:	add    BYTE PTR [rax],al
  40949a:	add    BYTE PTR [rax],al
  40949c:	cmp    al,0x99
  40949e:	add    BYTE PTR [rax],al
  4094a0:	add    BYTE PTR [rax],al
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	rex.WR cqo 
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	pop    rsi
  4094ad:	cdq    
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	jb     0x40944f
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	add    BYTE PTR [rax],al
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	jl     0x409457
  4094be:	add    BYTE PTR [rax],al
  4094c0:	add    BYTE PTR [rax],al
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	mov    bl,BYTE PTR [rcx+0x0]
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	xchg   esp,eax
  4094cd:	cdq    
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    BYTE PTR [rax],al
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	sahf   
  4094d5:	cdq    
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	test   al,0x99
  4094de:	add    BYTE PTR [rax],al
  4094e0:	add    BYTE PTR [rax],al
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	mov    ah,0x99
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	add    BYTE PTR [rax],al
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	mov    esp,0x99
  4094f1:	add    BYTE PTR [rax],al
  4094f3:	add    dh,al
  4094f5:	cdq    
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	add    BYTE PTR [rax],al
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	rcr    BYTE PTR [rcx+0x0],1
  409502:	add    BYTE PTR [rax],al
  409504:	fcomp  DWORD PTR [rcx+0x0]
  40950a:	add    BYTE PTR [rax],al
  40950c:	loop   0x4094a7
  40950e:	add    BYTE PTR [rax],al
  409510:	add    BYTE PTR [rax],al
  409512:	add    BYTE PTR [rax],al
  409514:	(bad)  
  409515:	cdq    
  409516:	add    BYTE PTR [rax],al
  409518:	add    BYTE PTR [rax],al
  40951a:	add    BYTE PTR [rax],al
  40951c:	hlt    
  40951d:	cdq    
  40951e:	add    BYTE PTR [rax],al
  409520:	add    BYTE PTR [rax],al
  409522:	add    BYTE PTR [rax],al
  409524:	(bad)  
  409525:	cdq    
  409526:	add    BYTE PTR [rax],al
  409528:	add    BYTE PTR [rax],al
  40952a:	add    BYTE PTR [rax],al
  40952c:	(bad)  
  40952d:	(bad)  
  40952e:	add    BYTE PTR [rax],al
  409530:	add    BYTE PTR [rax],al
  409532:	add    BYTE PTR [rax],al
  409534:	adc    BYTE PTR [rdx+0x0],bl
  40953a:	add    BYTE PTR [rax],al
  40953c:	sbb    bl,BYTE PTR [rdx+0x0]
  409542:	add    BYTE PTR [rax],al
  409544:	and    al,0x9a
  409546:	add    BYTE PTR [rax],al
  409548:	add    BYTE PTR [rax],al
  40954a:	add    BYTE PTR [rax],al
  40954c:	cs (bad) 
  40954e:	add    BYTE PTR [rax],al
  409550:	add    BYTE PTR [rax],al
  409552:	add    BYTE PTR [rax],al
  409554:	cmp    BYTE PTR [rdx+0x0],bl
  40955a:	add    BYTE PTR [rax],al
  40955c:	rex.X (bad) 
  40955e:	add    BYTE PTR [rax],al
  409560:	add    BYTE PTR [rax],al
  409562:	add    BYTE PTR [rax],al
  409564:	rex.WR (bad) 
	...
  409572:	add    BYTE PTR [rax],al
  409574:	push   rsi
  409575:	add    BYTE PTR [rbx+0x6c],ah
  409578:	outs   dx,DWORD PTR ds:[rsi]
  409579:	jae    0x4095e0
  40957b:	pop    rdi
  40957c:	jae    0x4095f2
  40957e:	outs   dx,DWORD PTR fs:[rsi]
  409580:	jne    0x4095f6
  409582:	add    BYTE PTR [rax],al
  409584:	add    DWORD PTR [rdx],eax
  409586:	gs jb  0x4095fb
  409589:	outs   dx,DWORD PTR ds:[rsi]
  40958a:	jb     0x40958c
  40958c:	add    al,0x2
  40958e:	gs js  0x4095f6
  409591:	movsxd esi,DWORD PTR [rbp+0x74]
  409594:	add    BYTE PTR gs:[rax],al
  409597:	add    BYTE PTR [rsi],al
  409599:	add    ah,BYTE PTR [rbp+0x78]
  40959c:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  4095a0:	gs pop rdi
  4095a2:	push   0x61
  4095a4:	jbe    0x409607
  4095a6:	pop    rdi
  4095a7:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4095ab:	jae    0x4095ad
  4095ad:	add    BYTE PTR [rax],al
  4095af:	add    BYTE PTR [rax],bl
  4095b1:	add    ah,BYTE PTR [rsi+0x75]
  4095b4:	ins    BYTE PTR es:[rdi],dx
  4095b5:	ins    BYTE PTR es:[rdi],dx
  4095b6:	pop    rdi
  4095b7:	ja     0x40962b
  4095b9:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7f000000
  4095c1:	add    ah,BYTE PTR [rdi+0x6e]
  4095c4:	jne    0x409625
  4095c6:	(bad)  
  4095c8:	jae    0x40962f
  4095ca:	outs   dx,BYTE PTR ds:[rsi]
  4095cb:	(bad)  
  4095cc:	ins    DWORD PTR es:[rdi],dx
  4095cd:	add    BYTE PTR gs:[rax],al
  4095d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4095d1:	add    ch,BYTE PTR [rbp+0x61]
  4095d4:	jns    0x409638
  4095d6:	gs pop rdi
  4095d8:	jo     0x40964c
  4095da:	imul   ebp,DWORD PTR [rsi+0x74],0x6f72705f
  4095e1:	outs   dx,BYTE PTR ds:[esi]
  4095e3:	(bad)  
  4095e4:	ins    DWORD PTR es:[rdi],dx
  4095e5:	add    BYTE PTR gs:[rax],al
  4095e8:	fild   WORD PTR [rdx]
  4095ea:	jo     0x40965e
  4095ec:	outs   dx,DWORD PTR ds:[rsi]
  4095ed:	addr32 jb 0x409651
  4095f0:	ins    DWORD PTR es:[rdi],dx
  4095f1:	pop    rdi
  4095f2:	outs   dx,BYTE PTR ds:[rsi]
  4095f3:	(bad)  
  4095f4:	ins    DWORD PTR es:[rdi],dx
  4095f5:	add    BYTE PTR gs:[rax],al
  4095f8:	loopne 0x4095fc
  4095fa:	jo     0x40966e
  4095fc:	outs   dx,DWORD PTR ds:[rsi]
  4095fd:	jo     0x409664
  4095ff:	jb     0x409660
  409601:	outs   dx,BYTE PTR ds:[rsi]
  409602:	(bad)  
  409603:	ins    DWORD PTR es:[rdi],dx
  409604:	add    BYTE PTR gs:[rax],al
  409607:	add    BYTE PTR [rcx],cl
  409609:	add    esi,DWORD PTR [rdx+0x70]
  40960c:	ins    BYTE PTR es:[rdi],dx
  40960d:	pop    rdi
  40960e:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  409612:	add    BYTE PTR gs:[rip+0x6c707203],cl        # 0x6cb1081c
  409619:	pop    rdi
  40961a:	gs jb  0x40968f
  40961d:	outs   dx,DWORD PTR ds:[rsi]
  40961e:	jb     0x40967f
  409620:	jo     0x409694
  409622:	imul   ebp,DWORD PTR [rsi+0x74],0x6f72705f
  409629:	outs   dx,BYTE PTR ds:[esi]
  40962b:	(bad)  
  40962c:	ins    DWORD PTR es:[rdi],dx
  40962d:	add    BYTE PTR gs:[rax],al
  409630:	lsl    esi,WORD PTR [rdx+0x70]
  409634:	ins    BYTE PTR es:[rdi],dx
  409635:	pop    rdi
  409636:	data16 jo 0x4096ab
  409639:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409640:	adc    DWORD PTR [rbx],eax
  409642:	jb     0x4096b4
  409644:	ins    BYTE PTR es:[rdi],dx
  409645:	pop    rdi
  409646:	data16 jo 0x4096be
  409649:	je     0x4096be
  40964b:	add    BYTE PTR [rdi],dl
  40964d:	add    esi,DWORD PTR [rdx+0x70]
  409650:	ins    BYTE PTR es:[rdi],dx
  409651:	pop    rdi
  409652:	addr32 gs je 0x4096c5
  409656:	jo     0x4096cc
  409658:	pop    rdi
  409659:	ins    BYTE PTR es:[rdi],dx
  40965a:	outs   dx,DWORD PTR ds:[rsi]
  40965b:	outs   dx,BYTE PTR ds:[rsi]
  40965c:	add    BYTE PTR [eax],al
  40965f:	add    BYTE PTR [rcx],ah
  409661:	add    esi,DWORD PTR [rdx+0x70]
  409664:	ins    BYTE PTR es:[rdi],dx
  409665:	pop    rdi
  409666:	outs   dx,DWORD PTR ds:[rsi]
  409667:	jo     0x4096ce
  409669:	outs   dx,BYTE PTR ds:[rsi]
  40966a:	add    BYTE PTR [rax],al
  40966c:	and    al,0x3
  40966e:	jb     0x4096e0
  409670:	ins    BYTE PTR es:[rdi],dx
  409671:	pop    rdi
  409672:	outs   dx,DWORD PTR ds:[rsi]
  409673:	jo     0x4096e9
  409675:	imul   ebp,DWORD PTR [rsi+0x64],0x0
  40967c:	add    esi,DWORD PTR es:[rdx+0x70]
  409680:	ins    BYTE PTR es:[rdi],dx
  409681:	pop    rdi
  409682:	jo     0x4096f6
  409684:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40968b:	add    BYTE PTR [rdx],ch
  40968d:	add    esi,DWORD PTR [rdx+0x70]
  409690:	ins    BYTE PTR es:[rdi],dx
  409691:	pop    rdi
  409692:	jb     0x4096f9
  409694:	(bad)  
  409695:	add    BYTE PTR fs:[rax],al
  409698:	sub    eax,0x6c707203
  40969d:	pop    rdi
  40969e:	jae    0x409705
  4096a0:	je     0x40970e
  4096a2:	outs   dx,DWORD PTR ds:[rsi]
  4096a3:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096a6:	add    BYTE PTR gs:[rbx+rax*1+0x73],al
  4096ab:	gs je  0x40970d
  4096ae:	jo     0x409722
  4096b0:	outs   dx,DWORD PTR ds:[rsi]
  4096b1:	addr32 jb 0x409715
  4096b4:	ins    DWORD PTR es:[rdi],dx
  4096b5:	pop    rdi
  4096b6:	outs   dx,BYTE PTR ds:[rsi]
  4096b7:	(bad)  
  4096b8:	ins    DWORD PTR es:[rdi],dx
  4096b9:	add    BYTE PTR gs:[rax],al
  4096bc:	(bad)  
  4096bd:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4096c1:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  4096c8:	outs   dx,BYTE PTR ds:[rsi]
  4096c9:	fs je  0x409731
  4096cc:	js     0x409742
  4096ce:	outs   dx,DWORD PTR fs:[rsi]
  4096d0:	ins    DWORD PTR es:[rdi],dx
  4096d1:	(bad)  
  4096d2:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  4096d9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4096dd:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  4096e4:	je     0x40975a
  4096e6:	gs js  0x40975d
  4096e9:	add    BYTE PTR [rax],al
  4096eb:	add    BYTE PTR [rbp+0x0],al
  4096ee:	ins    BYTE PTR es:[rdi],dx
  4096ef:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  4096f6:	je     0x40975d
  4096f8:	js     0x40976e
  4096fa:	outs   dx,DWORD PTR fs:[rsi]
  4096fc:	ins    DWORD PTR es:[rdi],dx
  4096fd:	(bad)  
  4096fe:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  409705:	add    BYTE PTR [rbp+riz*2+0x6c],al
  409709:	gs je  0x409771
  40970c:	rex.XB jb 0x409778
  40970f:	je     0x40977a
  409711:	movsxd esp,DWORD PTR [rcx+0x6c]
  409714:	push   rbx
  409715:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40971a:	outs   dx,BYTE PTR ds:[rsi]
  40971b:	add    al,bh
  40971d:	add    BYTE PTR [rbp+0x6e],al
  409720:	je     0x409787
  409722:	jb     0x409767
  409724:	jb     0x40978f
  409726:	je     0x409791
  409728:	movsxd esp,DWORD PTR [rcx+0x6c]
  40972b:	push   rbx
  40972c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409731:	outs   dx,BYTE PTR ds:[rsi]
  409732:	add    BYTE PTR [rax],al
  409734:	int    0x1
  409736:	rex.RXB
  409737:	gs je  0x40977d
  40973a:	jne    0x4097ae
  40973c:	jb     0x4097a3
  40973e:	outs   dx,BYTE PTR ds:[rsi]
  40973f:	je     0x409791
  409741:	jb     0x4097b2
  409743:	movsxd esp,DWORD PTR [rbp+0x73]
  409746:	jae    0x409748
  409748:	(bad)  
  409749:	add    DWORD PTR [rdi+0x65],eax
  40974c:	je     0x409791
  40974e:	jne    0x4097c2
  409750:	jb     0x4097b7
  409752:	outs   dx,BYTE PTR ds:[rsi]
  409753:	je     0x4097a5
  409755:	jb     0x4097c6
  409757:	movsxd esp,DWORD PTR [rbp+0x73]
  40975a:	jae    0x4097a5
  40975c:	fs add dl,dl
  40975f:	add    DWORD PTR [rdi+0x65],eax
  409762:	je     0x4097a7
  409764:	jne    0x4097d8
  409766:	jb     0x4097cd
  409768:	outs   dx,BYTE PTR ds:[rsi]
  409769:	je     0x4097bf
  40976b:	push   0x64616572
  409770:	rex.WB
  409771:	add    BYTE PTR fs:[rax],al
  409774:	adc    BYTE PTR [rdx],al
  409776:	rex.RXB
  409777:	gs je  0x4097c6
  40977a:	(bad)  
  40977b:	jae    0x4097f1
  40977d:	rex.RB jb 0x4097f2
  409780:	outs   dx,DWORD PTR ds:[rsi]
  409781:	jb     0x409783
  409783:	add    BYTE PTR [rbx+0x2],dh
  409786:	rex.RXB
  409787:	gs je  0x4097dd
  40978a:	je     0x4097ed
  40978c:	jb     0x409802
  40978e:	jne    0x409800
  409790:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409792:	outs   dx,WORD PTR ds:[rsi]
  409794:	add    BYTE PTR [r10+0x74654702],cl
  40979b:	push   rbx
  40979c:	jns    0x409811
  40979e:	je     0x409805
  4097a0:	ins    DWORD PTR es:[rdi],dx
  4097a1:	push   rsp
  4097a2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4097a9:	ins    BYTE PTR es:[rdi],dx
  4097aa:	gs push rsp
  4097ac:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4097b3:	gs je  0x40980a
  4097b6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4097bd:	je     0x4097bf
  4097bf:	add    cl,bh
  4097c1:	add    cl,BYTE PTR [rcx+0x6e]
  4097c4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4097cc:	rex.XB jb 0x409838
  4097cf:	je     0x40983a
  4097d1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097d4:	push   rbx
  4097d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097da:	outs   dx,BYTE PTR ds:[rsi]
  4097db:	add    BYTE PTR [rbx+0x3],cl
  4097de:	rex.WR
  4097df:	gs (bad) 
  4097e1:	jbe    0x409848
  4097e3:	rex.XB jb 0x40984f
  4097e6:	je     0x409851
  4097e8:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097eb:	push   rbx
  4097ec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097f1:	outs   dx,BYTE PTR ds:[rsi]
  4097f2:	add    BYTE PTR [rax],al
  4097f4:	mov    ebx,0x65755103
  4097f9:	jb     0x409874
  4097fb:	push   rax
  4097fc:	gs jb  0x409865
  4097ff:	outs   dx,DWORD PTR ds:[rsi]
  409800:	jb     0x40986f
  409802:	(bad)  
  409803:	outs   dx,BYTE PTR ds:[rsi]
  409804:	movsxd esp,DWORD PTR [rbp+0x43]
  409807:	outs   dx,DWORD PTR ds:[rsi]
  409808:	jne    0x409878
  40980a:	je     0x409871
  40980c:	jb     0x40980e
  40980e:	add    DWORD PTR [rdx+rdx*2],eax
  409811:	je     0x40987f
  409813:	rex.B
  409814:	fs fs rex.RX jne 0x409887
  409819:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40981d:	outs   dx,BYTE PTR ds:[rsi]
  40981e:	push   rsp
  40981f:	(bad)  
  409820:	(bad)  
  409821:	ins    BYTE PTR es:[rdi],dx
  409822:	add    BYTE PTR gs:[rdx],al
  409825:	add    al,0x52
  409827:	je     0x409895
  409829:	rex.XB (bad) 
  40982b:	jo     0x4098a1
  40982d:	jne    0x4098a1
  40982f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409832:	outs   dx,BYTE PTR ds:[rsi]
  409833:	je     0x40989a
  409835:	js     0x4098ab
  409837:	add    BYTE PTR [rcx],cl
  409839:	add    al,0x52
  40983b:	je     0x4098a9
  40983d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40983f:	outs   dx,DWORD PTR ds:[rsi]
  409840:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409844:	jne    0x4098b4
  409846:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40984a:	outs   dx,BYTE PTR ds:[rsi]
  40984b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40984d:	je     0x4098c1
  40984f:	jns    0x409851
  409851:	add    BYTE PTR [rax],dl
  409853:	add    al,0x52
  409855:	je     0x4098c3
  409857:	push   rsi
  409858:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40985f:	outs   dx,BYTE PTR ds:[rsi]
  409860:	ja     0x4098cb
  409862:	outs   dx,BYTE PTR ds:[rsi]
  409863:	add    BYTE PTR fs:[rax],al
  409866:	lahf   
  409867:	add    al,0x53
  409869:	gs je  0x4098c1
  40986c:	outs   dx,BYTE PTR ds:[rsi]
  40986d:	push   0x6c646e61
  409872:	gs fs rex.RB js 0x4098da
  409877:	gs jo  0x4098ee
  40987a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409881:	gs jb  0x409884
  409884:	lods   al,BYTE PTR ds:[rsi]
  409885:	add    al,0x53
  409887:	ins    BYTE PTR es:[rdi],dx
  409888:	gs gs jo 0x40988c
  40988c:	mov    edx,0x72655404
  409891:	ins    DWORD PTR es:[rdi],dx
  409892:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409899:	outs   dx,DWORD PTR ds:[rsi]
  40989a:	movsxd esp,DWORD PTR [rbp+0x73]
  40989d:	jae    0x40989f
  40989f:	add    cl,al
  4098a1:	add    al,0x54
  4098a3:	ins    BYTE PTR es:[rdi],dx
  4098a4:	jae    0x4098ed
  4098a6:	gs je  0x4098ff
  4098a9:	(bad)  
  4098aa:	ins    BYTE PTR es:[rdi],dx
  4098ab:	jne    0x409912
  4098ad:	add    dh,cl
  4098af:	add    al,0x55
  4098b1:	outs   dx,BYTE PTR ds:[rsi]
  4098b2:	push   0x6c646e61
  4098b7:	gs fs rex.RB js 0x40991f
  4098bc:	gs jo  0x409933
  4098bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4098c6:	gs jb  0x4098c9
  4098c9:	add    ah,ch
  4098cb:	add    al,0x56
  4098cd:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4098d4:	jb     0x409945
  4098d6:	je     0x40993d
  4098d8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4098dc:	out    dx,al
  4098dd:	add    al,0x56
  4098df:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098e6:	jne    0x40994d
  4098e8:	jb     0x409963
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	(bad)  
  4098ed:	add    BYTE PTR [rdi+0x5f],bl
  4098f0:	rex.XB pop r15
  4098f2:	jae    0x409964
  4098f4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4098f8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4098ff:	ins    BYTE PTR es:[rdi],dx
  409900:	gs jb  0x409903
  409903:	add    BYTE PTR [rsi+0x0],cl
  409906:	pop    rdi
  409907:	pop    rdi
  409908:	fs ins BYTE PTR es:[rdi],dx
  40990a:	ins    BYTE PTR es:[rdi],dx
  40990b:	outs   dx,DWORD PTR ds:[rsi]
  40990c:	outs   dx,BYTE PTR ds:[rsi]
  40990d:	gs js  0x409979
  409910:	je     0x409912
  409912:	push   rcx
  409913:	add    BYTE PTR [rdi+0x5f],bl
  409916:	addr32 gs je 0x409987
  40991a:	(bad)  
  40991b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409922:	push   rdx
  409923:	add    BYTE PTR [rdi+0x5f],bl
  409926:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40992d:	add    BYTE PTR [rbx+0x0],dl
  409930:	pop    rdi
  409931:	pop    rdi
  409932:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409939:	movsxd eax,DWORD PTR [rax]
  40993b:	add    BYTE PTR [rdx+0x0],bl
  40993e:	pop    rdi
  40993f:	pop    rdi
  409940:	ins    BYTE PTR es:[rdi],dx
  409941:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409944:	jbe    0x4099a5
  409946:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40994d:	add    BYTE PTR [rdi+0x5f],bl
  409950:	jae    0x4099b7
  409952:	je     0x4099b3
  409954:	(bad)  
  409955:	jo     0x4099c7
  409957:	pop    rdi
  409958:	je     0x4099d3
  40995a:	jo     0x4099c1
  40995c:	add    BYTE PTR [rax],al
  40995e:	(bad)  
  40995f:	add    BYTE PTR [rdi+0x5f],bl
  409962:	jae    0x4099c9
  409964:	je     0x4099db
  409966:	jae    0x4099cd
  409968:	jb     0x4099d7
  40996a:	(bad)  
  40996b:	je     0x4099d5
  40996d:	gs jb  0x4099e2
  409970:	add    BYTE PTR [rax],al
  409972:	jno    0x409974
  409974:	pop    rdi
  409975:	(bad)  
  409976:	movsxd ebp,DWORD PTR [rbp+0x64]
  409979:	ins    BYTE PTR es:[rdi],dx
  40997a:	outs   dx,BYTE PTR ds:[rsi]
  40997b:	add    BYTE PTR [rax+0x0],bh
  40997e:	pop    rdi
  40997f:	(bad)  
  409980:	ins    DWORD PTR es:[rdi],dx
  409981:	jae    0x4099ea
  409983:	pop    rdi
  409984:	gs js  0x4099f0
  409987:	je     0x409989
  409989:	add    BYTE PTR [rdx+0x65635f00],cl
  40998f:	js     0x4099fa
  409991:	je     0x409993
  409993:	add    BYTE PTR [rdx+0x72655f00],bh
  409999:	jb     0x409a09
  40999b:	outs   dx,DWORD PTR ds:[rsi]
  40999c:	add    BYTE PTR [rax],al
  40999e:	fiadd  DWORD PTR [rax]
  4099a0:	pop    rdi
  4099a1:	ins    WORD PTR es:[rdi],dx
  4099a3:	outs   dx,DWORD PTR ds:[rsi]
  4099a4:	fs add BYTE PTR gs:[rax],al
  4099a8:	sbb    al,BYTE PTR [rcx]
  4099aa:	pop    rdi
  4099ab:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4099b2:	ins    DWORD PTR es:[rdi],dx
  4099b3:	add    BYTE PTR [rax+0x6f6c5f01],al
  4099b9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099bc:	and    eax,0x6e6f5f02
  4099c1:	gs js  0x409a2d
  4099c4:	je     0x4099c6
  4099c6:	(bad)
  4099ca:	outs   dx,BYTE PTR ds:[rsi]
  4099cb:	ins    BYTE PTR es:[rdi],dx
  4099cc:	outs   dx,DWORD PTR ds:[rsi]
  4099cd:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099d0:	jg     0x4099d5
  4099d2:	(bad)  
  4099d3:	(bad)  
  4099d4:	outs   dx,DWORD PTR ds:[rsi]
  4099d5:	jb     0x409a4b
  4099d7:	add    BYTE PTR [rax+0x6c616303],dl
  4099dd:	ins    BYTE PTR es:[rdi],dx
  4099de:	outs   dx,DWORD PTR ds:[rsi]
  4099df:	movsxd eax,DWORD PTR [rax]
  4099e1:	add    BYTE PTR [rbp+0x69786503],bl
  4099e7:	je     0x4099e9
  4099e9:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  4099f0:	jae    0x409a5a
  4099f2:	add    BYTE PTR [rax],al
  4099f4:	mov    al,0x3
  4099f6:	data16 jo 0x409a6b
  4099f9:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  409a00:	data16 jb 0x409a68
  409a03:	add    BYTE PTR gs:[rax],al
  409a06:	ret    0x6603
  409a09:	ja     0x409a7d
  409a0b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  409a13:	gs je  0x409a7b
  409a16:	outs   dx,BYTE PTR ds:[rsi]
  409a17:	jbe    0x409a19
  409a19:	add    al,dh
  409a1b:	add    ebp,DWORD PTR [rbp+0x61]
  409a1e:	ins    BYTE PTR es:[rdi],dx
  409a1f:	ins    BYTE PTR es:[rdi],dx
  409a20:	outs   dx,DWORD PTR ds:[rsi]
  409a21:	movsxd eax,DWORD PTR [rax]
  409a23:	add    al,bh
  409a25:	add    ebp,DWORD PTR [rbp+0x65]
  409a28:	ins    DWORD PTR es:[rdi],dx
  409a29:	movsxd esi,DWORD PTR [rax+0x79]
  409a2c:	add    BYTE PTR [rax],al
  409a2e:	(bad)  
  409a2f:	add    al,0x73
  409a31:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409a38:	sub    eax,DWORD PTR [rbx+rsi*2]
  409a3b:	je     0x409aaf
  409a3d:	ins    BYTE PTR es:[rdi],dx
  409a3e:	outs   dx,BYTE PTR gs:[rsi]
  409a40:	add    BYTE PTR [rax],al
  409a42:	cs add al,0x73
  409a45:	je     0x409ab9
  409a47:	outs   dx,BYTE PTR ds:[rsi]
  409a48:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a4b:	add    BYTE PTR [rsi+0x4],cl
  409a4e:	jbe    0x409ab6
  409a50:	jo     0x409ac4
  409a52:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409a59:	nop
  409a5a:	add    BYTE PTR [rax],al
  409a5c:	add    BYTE PTR [rax-0x70000000],dl
  409a62:	add    BYTE PTR [rax],al
  409a64:	add    BYTE PTR [rax-0x70000000],dl
  409a6a:	add    BYTE PTR [rax],al
  409a6c:	add    BYTE PTR [rax-0x70000000],dl
  409a72:	add    BYTE PTR [rax],al
  409a74:	add    BYTE PTR [rax-0x70000000],dl
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	add    BYTE PTR [rax-0x70000000],dl
  409a82:	add    BYTE PTR [rax],al
  409a84:	add    BYTE PTR [rax-0x70000000],dl
  409a8a:	add    BYTE PTR [rax],al
  409a8c:	add    BYTE PTR [rax-0x70000000],dl
  409a92:	add    BYTE PTR [rax],al
  409a94:	add    BYTE PTR [rax-0x70000000],dl
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	add    BYTE PTR [rax-0x70000000],dl
  409aa2:	add    BYTE PTR [rax],al
  409aa4:	add    BYTE PTR [rax+0x696c0000],dl
  409aaa:	(bad)  
  409aab:	addr32 gs je 0x409b23
  409aaf:	gs js  0x409b26
  409ab2:	ins    BYTE PTR es:[rdi],dx
  409ab3:	imul   esp,DWORD PTR [rdx+0x2d],0x39312d30
  409aba:	sub    eax,0x2e312d35
  409abf:	fs ins BYTE PTR es:[rdi],dx
  409ac1:	ins    BYTE PTR es:[rdi],dx
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	adc    al,0x90
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	adc    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	adc    al,0x90
  409ace:	add    BYTE PTR [rax],al
  409ad0:	ins    BYTE PTR es:[rdi],dx
  409ad1:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  409ad8:	cmp    BYTE PTR [rsi],ch
  409ada:	fs ins BYTE PTR es:[rdi],dx
  409adc:	ins    BYTE PTR es:[rdi],dx
  409add:	add    BYTE PTR [rax],al
  409adf:	add    BYTE PTR [rax],ch
  409ae1:	nop
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aea:	add    BYTE PTR [rax],al
  409aec:	sub    BYTE PTR [rax-0x6fd80000],dl
  409af2:	add    BYTE PTR [rax],al
  409af4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409afa:	add    BYTE PTR [rax],al
  409afc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b02:	add    BYTE PTR [rax],al
  409b04:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b0a:	add    BYTE PTR [rax],al
  409b0c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b12:	add    BYTE PTR [rax],al
  409b14:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b1a:	add    BYTE PTR [rax],al
  409b1c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b22:	add    BYTE PTR [rax],al
  409b24:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b2a:	add    BYTE PTR [rax],al
  409b2c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b32:	add    BYTE PTR [rax],al
  409b34:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b3a:	add    BYTE PTR [rax],al
  409b3c:	rex.WXB
  409b3d:	rex.RB push r10
  409b3f:	rex.WRX
  409b40:	rex.RB
  409b41:	xor    r14,QWORD PTR [rdx]
  409b44:	cs fs ins BYTE PTR es:[rdi],dx
  409b47:	ins    BYTE PTR es:[rdi],dx
  409b48:	add    BYTE PTR [rax],al
  409b4a:	add    BYTE PTR [rax],al
  409b4c:	cmp    al,0x90
  409b4e:	add    BYTE PTR [rax],al
  409b50:	cmp    al,0x90
  409b52:	add    BYTE PTR [rax],al
  409b54:	cmp    al,0x90
  409b56:	add    BYTE PTR [rax],al
  409b58:	cmp    al,0x90
  409b5a:	add    BYTE PTR [rax],al
  409b5c:	cmp    al,0x90
  409b5e:	add    BYTE PTR [rax],al
  409b60:	cmp    al,0x90
  409b62:	add    BYTE PTR [rax],al
  409b64:	cmp    al,0x90
  409b66:	add    BYTE PTR [rax],al
  409b68:	cmp    al,0x90
  409b6a:	add    BYTE PTR [rax],al
  409b6c:	cmp    al,0x90
  409b6e:	add    BYTE PTR [rax],al
  409b70:	cmp    al,0x90
  409b72:	add    BYTE PTR [rax],al
  409b74:	cmp    al,0x90
  409b76:	add    BYTE PTR [rax],al
  409b78:	cmp    al,0x90
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	cmp    al,0x90
  409b7e:	add    BYTE PTR [rax],al
  409b80:	cmp    al,0x90
  409b82:	add    BYTE PTR [rax],al
  409b84:	cmp    al,0x90
  409b86:	add    BYTE PTR [rax],al
  409b88:	cmp    al,0x90
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	cmp    al,0x90
  409b8e:	add    BYTE PTR [rax],al
  409b90:	cmp    al,0x90
  409b92:	add    BYTE PTR [rax],al
  409b94:	cmp    al,0x90
  409b96:	add    BYTE PTR [rax],al
  409b98:	cmp    al,0x90
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	cmp    al,0x90
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	cmp    al,0x90
  409ba2:	add    BYTE PTR [rax],al
  409ba4:	cmp    al,0x90
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	cmp    al,0x90
  409baa:	add    BYTE PTR [rax],al
  409bac:	cmp    al,0x90
  409bae:	add    BYTE PTR [rax],al
  409bb0:	cmp    al,0x90
  409bb2:	add    BYTE PTR [rax],al
  409bb4:	cmp    al,0x90
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	cmp    al,0x90
  409bba:	add    BYTE PTR [rax],al
  409bbc:	cmp    al,0x90
  409bbe:	add    BYTE PTR [rax],al
  409bc0:	cmp    al,0x90
  409bc2:	add    BYTE PTR [rax],al
  409bc4:	cmp    al,0x90
  409bc6:	add    BYTE PTR [rax],al
  409bc8:	ins    DWORD PTR es:[rdi],dx
  409bc9:	jae    0x409c41
  409bcb:	movsxd esi,DWORD PTR [rdx+0x74]
  409bce:	cs fs ins BYTE PTR es:[rdi],dx
  409bd1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],al
  40a029:	sbb    DWORD PTR [rax+0x0],eax
	...
  40a040:	xor    BYTE PTR [rbx],bl
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],al
  40a049:	sbb    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

000000000040c000 <.rsrc>:
	...
  40c00c:	add    BYTE PTR [rax],al
  40c00e:	add    DWORD PTR [rax],eax
  40c010:	adc    BYTE PTR [rax],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	sbb    BYTE PTR [rax],al
  40c016:	add    BYTE PTR [rax+0x0],al
	...
  40c024:	add    BYTE PTR [rax],al
  40c026:	add    DWORD PTR [rax],eax
  40c028:	add    DWORD PTR [rax],eax
  40c02a:	add    BYTE PTR [rax],al
  40c02c:	xor    BYTE PTR [rax],al
  40c02e:	add    BYTE PTR [rax+0x0],al
	...
  40c03c:	add    BYTE PTR [rax],al
  40c03e:	add    DWORD PTR [rax],eax
  40c040:	or     DWORD PTR [rax+rax*1],eax
  40c043:	add    BYTE PTR [rax+0x0],cl
  40c046:	add    BYTE PTR [rax],al
  40c048:	pop    rax
  40c049:	rol    BYTE PTR [rax],0x0
  40c04c:	mov    BYTE PTR [rip+0x0],al        # 0x40c052
  40c052:	add    BYTE PTR [rax],al
  40c054:	add    BYTE PTR [rax],al
  40c056:	add    BYTE PTR [rax],al
  40c058:	mov    BYTE PTR [rip+0x34],al        # 0x40c092
  40c05e:	push   rsi
  40c05f:	add    BYTE PTR [rbx+0x0],dl
  40c062:	pop    rdi
  40c063:	add    BYTE PTR [rsi+0x0],dl
  40c066:	add    BYTE PTR [r10+0x0],r10b
  40c06a:	push   rbx
  40c06b:	add    BYTE PTR [rcx+0x0],cl
  40c06e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
  40c072:	pop    rdi
  40c073:	add    BYTE PTR [rcx+0x0],cl
  40c076:	rex.WRX add BYTE PTR [rsi+0x0],r8b
  40c07a:	rex.WRXB add BYTE PTR [r8],r8b
  40c07d:	add    BYTE PTR [rax],al
  40c07f:	add    BYTE PTR [rbp+0xfeef04],bh
  40c085:	add    BYTE PTR [rcx],al
  40c087:	add    BYTE PTR [rbx],dl
  40c089:	add    BYTE PTR [rax],al
  40c08b:	add    BYTE PTR [rax],al
  40c08d:	add    BYTE PTR [rip+0x1300],al        # 0x40d393
  40c093:	add    BYTE PTR [rax],al
  40c095:	add    BYTE PTR [rip+0x3f00],al        # 0x40ff9b
  40c09b:	add    BYTE PTR [rax],al
  40c09d:	add    BYTE PTR [rax],al
  40c09f:	add    BYTE PTR [rax+rax*1],al
  40c0a2:	add    DWORD PTR [rax],eax
  40c0a4:	add    DWORD PTR [rax],eax
	...
  40c0b2:	add    BYTE PTR [rax],al
  40c0b4:	out    0x4,al
  40c0b6:	add    BYTE PTR [rax],al
  40c0b8:	add    DWORD PTR [rax],eax
  40c0ba:	push   rbx
  40c0bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  40c0bf:	add    BYTE PTR [rcx+0x0],ch
  40c0c2:	outs   dx,BYTE PTR ds:[rsi]
  40c0c3:	add    BYTE PTR [rdi+0x0],ah
  40c0c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c0ca:	ins    BYTE PTR es:[rdi],dx
  40c0cb:	add    BYTE PTR [rbp+0x0],ah
  40c0ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  40c0d2:	data16 add BYTE PTR [rdi+0x0],ch
  40c0d6:	add    BYTE PTR [rax],al
  40c0d8:	ret    0x4
  40c0db:	add    BYTE PTR [rcx],al
  40c0dd:	add    BYTE PTR [rax],dh
  40c0df:	add    BYTE PTR [rax+rax*1],dh
  40c0e2:	xor    BYTE PTR [rax],al
  40c0e4:	cmp    DWORD PTR [rax],eax
  40c0e6:	xor    BYTE PTR [rax],al
  40c0e8:	xor    BYTE PTR [rax],al
  40c0ea:	xor    BYTE PTR [rax],al
  40c0ec:	xor    BYTE PTR [rax],al
  40c0ee:	add    BYTE PTR [rax],al
  40c0f0:	sbb    al,0x2
  40c0f2:	add    al,BYTE PTR [rcx]
  40c0f4:	add    DWORD PTR [rax],eax
  40c0f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c0fa:	ins    DWORD PTR es:[rdi],dx
  40c0fb:	add    BYTE PTR [rbp+0x0],ch
  40c0fe:	add    BYTE PTR gs:[rsi+0x0],ch
  40c102:	je     0x40c104
  40c104:	jae    0x40c106
  40c106:	add    BYTE PTR [rax],al
  40c108:	push   rsp
  40c109:	add    BYTE PTR [rax+0x0],ch
  40c10c:	imul   eax,DWORD PTR [rax],0x200073
  40c112:	jo     0x40c114
  40c114:	jb     0x40c116
  40c116:	outs   dx,DWORD PTR ds:[rsi]
  40c117:	add    BYTE PTR [rdi+0x0],ah
  40c11a:	jb     0x40c11c
  40c11c:	(bad)  
  40c11d:	add    BYTE PTR [rbp+0x0],ch
  40c120:	and    BYTE PTR [rax],al
  40c122:	imul   eax,DWORD PTR [rax],0x200073
  40c128:	data16 add BYTE PTR [rdx+0x0],dh
  40c12c:	add    BYTE PTR gs:[rbp+0x0],ah
  40c130:	and    BYTE PTR [rax],al
  40c132:	jae    0x40c134
  40c134:	outs   dx,DWORD PTR ds:[rsi]
  40c135:	add    BYTE PTR [rsi+0x0],ah
  40c138:	je     0x40c13a
  40c13a:	ja     0x40c13c
  40c13c:	(bad)  
  40c13d:	add    BYTE PTR [rdx+0x0],dh
  40c140:	add    BYTE PTR gs:[rdx],bh
  40c143:	add    BYTE PTR [rax],ah
  40c145:	add    BYTE PTR [rcx+0x0],bh
  40c148:	outs   dx,DWORD PTR ds:[rsi]
  40c149:	add    BYTE PTR [rbp+0x0],dh
  40c14c:	and    BYTE PTR [rax],al
  40c14e:	movsxd eax,DWORD PTR [rax]
  40c150:	(bad)  
  40c151:	add    BYTE PTR [rsi+0x0],ch
  40c154:	and    BYTE PTR [rax],al
  40c156:	jb     0x40c158
  40c158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  40c15d:	add    BYTE PTR [rbx+0x0],dh
  40c160:	je     0x40c162
  40c162:	jb     0x40c164
  40c164:	imul   eax,DWORD PTR [rax],0x750062
  40c16a:	je     0x40c16c
  40c16c:	add    BYTE PTR gs:[rax],ah
  40c16f:	add    BYTE PTR [rcx+0x0],ch
  40c172:	je     0x40c174
  40c174:	and    BYTE PTR [rax],al
  40c176:	(bad)  
  40c177:	add    BYTE PTR [rsi+0x0],ch
  40c17a:	add    BYTE PTR fs:[rdi],ch
  40c17d:	add    BYTE PTR [rdi+0x0],ch
  40c180:	jb     0x40c182
  40c182:	and    BYTE PTR [rax],al
  40c184:	ins    DWORD PTR es:[rdi],dx
  40c185:	add    BYTE PTR [rdi+0x0],ch
  40c188:	add    BYTE PTR fs:[rcx+0x0],ch
  40c18c:	data16 add BYTE PTR [rcx+0x0],bh
  40c190:	and    BYTE PTR [rax],al
  40c192:	imul   eax,DWORD PTR [rax],0x200074
  40c198:	jne    0x40c19a
  40c19a:	outs   dx,BYTE PTR ds:[rsi]
  40c19b:	add    BYTE PTR [rax+rax*1+0x65],ah
  40c19f:	add    BYTE PTR [rdx+0x0],dh
  40c1a2:	and    BYTE PTR [rax],al
  40c1a4:	je     0x40c1a6
  40c1a6:	push   0x20006500
  40c1ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  40c1af:	add    BYTE PTR [rdx+0x0],dh
  40c1b2:	ins    DWORD PTR es:[rdi],dx
  40c1b3:	add    BYTE PTR [rbx+0x0],dh
  40c1b6:	and    BYTE PTR [rax],al
  40c1b8:	outs   dx,DWORD PTR ds:[rsi]
  40c1b9:	add    BYTE PTR [rsi+0x0],ah
  40c1bc:	and    BYTE PTR [rax],al
  40c1be:	je     0x40c1c0
  40c1c0:	push   0x20006500
  40c1c5:	add    BYTE PTR [rdi+0x0],al
  40c1c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40c1cc:	and    BYTE PTR [rax],al
  40c1ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40c1d2:	outs   dx,BYTE PTR ds:[rsi]
  40c1d3:	add    BYTE PTR [rbp+0x0],ah
  40c1d6:	jb     0x40c1d8
  40c1d8:	(bad)  
  40c1d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  40c1dd:	add    BYTE PTR [rax+0x0],dl
  40c1e0:	jne    0x40c1e2
  40c1e2:	(bad)  
  40c1e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c1e7:	add    BYTE PTR [rbx+0x0],ah
  40c1ea:	and    BYTE PTR [rax],al
  40c1ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40c1f0:	movsxd eax,DWORD PTR [rax]
  40c1f2:	add    BYTE PTR gs:[rsi+0x0],ch
  40c1f6:	jae    0x40c1f8
  40c1f8:	add    BYTE PTR gs:[rsi],ch
  40c1fb:	add    BYTE PTR [rax],ah
  40c1fd:	add    BYTE PTR [rcx+0x0],bl
  40c200:	outs   dx,DWORD PTR ds:[rsi]
  40c201:	add    BYTE PTR [rbp+0x0],dh
  40c204:	and    BYTE PTR [rax],al
  40c206:	jae    0x40c208
  40c208:	push   0x75006f00
  40c20d:	add    BYTE PTR [rax+rax*1+0x64],ch
  40c211:	add    BYTE PTR [rax],ah
  40c213:	add    BYTE PTR [rax+0x0],ch
  40c216:	(bad)  
  40c217:	add    BYTE PTR [rsi+0x0],dh
  40c21a:	add    BYTE PTR gs:[rax],ah
  40c21d:	add    BYTE PTR [rdx+0x0],dh
  40c220:	add    BYTE PTR gs:[rbx+0x0],ah
  40c224:	add    BYTE PTR gs:[rcx+0x0],ch
  40c228:	jbe    0x40c22a
  40c22a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40c22f:	add    BYTE PTR [rcx+0x0],ah
  40c232:	and    BYTE PTR [rax],al
  40c234:	movsxd eax,DWORD PTR [rax]
  40c236:	outs   dx,DWORD PTR ds:[rsi]
  40c237:	add    BYTE PTR [rax+0x0],dh
  40c23a:	jns    0x40c23c
  40c23c:	and    BYTE PTR [rax],al
  40c23e:	outs   dx,DWORD PTR ds:[rsi]
  40c23f:	add    BYTE PTR [rsi+0x0],ah
  40c242:	and    BYTE PTR [rax],al
  40c244:	je     0x40c246
  40c246:	push   0x20006500
  40c24b:	add    BYTE PTR [rdi+0x0],al
  40c24e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  40c252:	and    BYTE PTR [rax],al
  40c254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  40c258:	outs   dx,BYTE PTR ds:[rsi]
  40c259:	add    BYTE PTR [rbp+0x0],ah
  40c25c:	jb     0x40c25e
  40c25e:	(bad)  
  40c25f:	add    BYTE PTR [rax+rax*1+0x20],ch
  40c263:	add    BYTE PTR [rax+0x0],dl
  40c266:	jne    0x40c268
  40c268:	(bad)  
  40c269:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c26d:	add    BYTE PTR [rbx+0x0],ah
  40c270:	and    BYTE PTR [rax],al
  40c272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  40c276:	movsxd eax,DWORD PTR [rax]
  40c278:	add    BYTE PTR gs:[rsi+0x0],ch
  40c27c:	jae    0x40c27e
  40c27e:	add    BYTE PTR gs:[rax],ah
  40c281:	add    BYTE PTR [rcx+0x0],ah
  40c284:	ins    BYTE PTR es:[rdi],dx
  40c285:	add    BYTE PTR [rdi+0x0],ch
  40c288:	outs   dx,BYTE PTR ds:[rsi]
  40c289:	add    BYTE PTR [rdi+0x0],ah
  40c28c:	and    BYTE PTR [rax],al
  40c28e:	ja     0x40c290
  40c290:	imul   eax,DWORD PTR [rax],0x680074
  40c296:	and    BYTE PTR [rax],al
  40c298:	je     0x40c29a
  40c29a:	push   0x73006900
  40c29f:	add    BYTE PTR [rax],ah
  40c2a1:	add    BYTE PTR [rax+0x0],dh
  40c2a4:	jb     0x40c2a6
  40c2a6:	outs   dx,DWORD PTR ds:[rsi]
  40c2a7:	add    BYTE PTR [rdi+0x0],ah
  40c2aa:	jb     0x40c2ac
  40c2ac:	(bad)  
  40c2ad:	add    BYTE PTR [rbp+0x0],ch
  40c2b0:	add    BYTE PTR cs:[rax],ah
  40c2b3:	add    BYTE PTR [rcx+0x0],cl
  40c2b6:	data16 add BYTE PTR [rax],ah
  40c2b9:	add    BYTE PTR [rsi+0x0],ch
  40c2bc:	outs   dx,DWORD PTR ds:[rsi]
  40c2bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  40c2c1:	add    BYTE PTR [rax],ah
  40c2c3:	add    BYTE PTR [rbx+0x0],dh
  40c2c6:	add    BYTE PTR gs:[rbp+0x0],ah
  40c2ca:	and    BYTE PTR [rax],al
  40c2cc:	cmp    al,0x0
  40c2ce:	push   0x74007400
  40c2d3:	add    BYTE PTR [rax+0x0],dh
  40c2d6:	cmp    al,BYTE PTR [rax]
  40c2d8:	(bad)  
  40c2d9:	add    BYTE PTR [rdi],ch
  40c2db:	add    BYTE PTR [rdi+0x0],dh
  40c2de:	ja     0x40c2e0
  40c2e0:	ja     0x40c2e2
  40c2e2:	add    BYTE PTR cs:[rdi+0x0],ah
  40c2e6:	outs   dx,BYTE PTR ds:[rsi]
  40c2e7:	add    BYTE PTR [rbp+0x0],dh
  40c2ea:	add    BYTE PTR cs:[rdi+0x0],ch
  40c2ee:	jb     0x40c2f0
  40c2f0:	add    BYTE PTR [edi],ch
  40c2f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  40c2f7:	add    BYTE PTR [rbx+0x0],ah
  40c2fa:	add    BYTE PTR gs:[rsi+0x0],ch
  40c2fe:	jae    0x40c300
  40c300:	add    BYTE PTR gs:[rbx+0x0],dh
  40c304:	(bad)  
  40c305:	add    BYTE PTR [rsi],bh
  40c307:	add    BYTE PTR [rsi],ch
  40c309:	add    BYTE PTR [rax],al
  40c30b:	add    BYTE PTR [rdx+0x0],dl
  40c30e:	sbb    DWORD PTR [rax],eax
  40c310:	add    DWORD PTR [rax],eax
  40c312:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c316:	ins    DWORD PTR es:[rdi],dx
  40c317:	add    BYTE PTR [rax+0x0],dh
  40c31a:	(bad)  
  40c31b:	add    BYTE PTR [rsi+0x0],ch
  40c31e:	jns    0x40c320
  40c320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40c324:	ins    DWORD PTR es:[rdi],dx
  40c325:	add    BYTE PTR [rbp+0x0],ah
  40c328:	add    BYTE PTR [rax],al
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  40c330:	add    BYTE PTR gs:[rbp+0x0],ah
  40c334:	and    BYTE PTR [rax],al
  40c336:	push   rbx
  40c337:	add    BYTE PTR [rdi+0x0],ch
  40c33a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  40c33f:	add    BYTE PTR [rcx+0x0],ah
  40c342:	jb     0x40c344
  40c344:	add    BYTE PTR gs:[rax],ah
  40c347:	add    BYTE PTR [rsi+0x0],al
  40c34a:	outs   dx,DWORD PTR ds:[rsi]
  40c34b:	add    BYTE PTR [rbp+0x0],dh
  40c34e:	outs   dx,BYTE PTR ds:[rsi]
  40c34f:	add    BYTE PTR [rax+rax*1+0x61],ah
  40c353:	add    BYTE PTR [rax+rax*1+0x69],dh
  40c357:	add    BYTE PTR [rdi+0x0],ch
  40c35a:	outs   dx,BYTE PTR ds:[rsi]
  40c35b:	add    BYTE PTR [rax],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rax+rax*1+0x10042],ch
  40c366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c36a:	ins    BYTE PTR es:[rdi],dx
  40c36b:	add    BYTE PTR [rbp+0x0],ah
  40c36e:	add    BYTE PTR [rbp+0x0],r12b
  40c372:	jae    0x40c374
  40c374:	movsxd eax,DWORD PTR [rax]
  40c376:	jb     0x40c378
  40c378:	imul   eax,DWORD PTR [rax],0x740070
  40c37e:	imul   eax,DWORD PTR [rax],0x6e006f
  40c384:	add    BYTE PTR [rax],al
  40c386:	add    BYTE PTR [rax],al
  40c388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  40c38c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  40c390:	add    BYTE PTR fs:[rax],ah
  40c393:	add    BYTE PTR [rax+0x0],dh
  40c396:	jb     0x40c398
  40c398:	outs   dx,DWORD PTR ds:[rsi]
  40c399:	add    BYTE PTR [rdi+0x0],ah
  40c39c:	jb     0x40c39e
  40c39e:	(bad)  
  40c39f:	add    BYTE PTR [rbp+0x0],ch
  40c3a2:	and    BYTE PTR [rax],al
  40c3a4:	data16 add BYTE PTR [rdi+0x0],ch
  40c3a8:	jb     0x40c3aa
  40c3aa:	and    BYTE PTR [rax],al
  40c3ac:	push   rdi
  40c3ad:	add    BYTE PTR [rcx+0x0],ch
  40c3b0:	outs   dx,BYTE PTR ds:[rsi]
  40c3b1:	add    BYTE PTR [rax+rax*1+0x6f],ah
  40c3b5:	add    BYTE PTR [rdi+0x0],dh
  40c3b8:	jae    0x40c3ba
  40c3ba:	and    BYTE PTR [rax],al
  40c3bc:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  40c3c1:	add    BYTE PTR [rdx],dh
  40c3c3:	add    BYTE PTR [rax],dh
  40c3c5:	add    BYTE PTR [rax],dh
  40c3c7:	add    BYTE PTR [rax],dh
  40c3c9:	add    BYTE PTR [rdi],ch
  40c3cb:	add    BYTE PTR [rax+0x0],bl
  40c3ce:	push   rax
  40c3cf:	add    BYTE PTR [rdi],ch
  40c3d1:	add    BYTE PTR [rsi+0x0],dl
  40c3d4:	imul   eax,DWORD PTR [rax],0x740073
  40c3da:	(bad)  
  40c3db:	add    BYTE PTR [rdi],ch
  40c3dd:	add    BYTE PTR [rdi],dh
  40c3df:	add    BYTE PTR [rax],ah
  40c3e1:	add    BYTE PTR [rcx+0x0],ah
  40c3e4:	outs   dx,BYTE PTR ds:[rsi]
  40c3e5:	add    BYTE PTR [rax+rax*1+0x20],ah
  40c3e9:	add    BYTE PTR [rdi+0x0],dl
  40c3ec:	imul   eax,DWORD PTR [rax],0x64006e
  40c3f2:	outs   dx,DWORD PTR ds:[rsi]
  40c3f3:	add    BYTE PTR [rdi+0x0],dh
  40c3f6:	jae    0x40c3f8
  40c3f8:	and    BYTE PTR [rax],al
  40c3fa:	cmp    DWORD PTR [rax],eax
  40c3fc:	xor    eax,0x39002f00
  40c401:	add    BYTE PTR [rax],bh
  40c403:	add    BYTE PTR [rdi],ch
  40c405:	add    BYTE PTR [rbp+0x0],cl
  40c408:	add    BYTE PTR [r8],r8b
  40c40b:	add    BYTE PTR [rdx],dh
  40c40d:	add    BYTE PTR [rcx],cl
  40c40f:	add    BYTE PTR [rcx],al
  40c411:	add    BYTE PTR [rsi+0x0],al
  40c414:	imul   eax,DWORD PTR [rax],0x65006c
  40c41a:	push   rsi
  40c41b:	add    BYTE PTR [rbp+0x0],ah
  40c41e:	jb     0x40c420
  40c420:	jae    0x40c422
  40c422:	imul   eax,DWORD PTR [rax],0x6e006f
  40c428:	add    BYTE PTR [rax],al
  40c42a:	add    BYTE PTR [rax],al
  40c42c:	xor    BYTE PTR [rax],al
  40c42e:	add    BYTE PTR cs:[rcx],dh
  40c431:	add    BYTE PTR [rcx],bh
  40c433:	add    BYTE PTR [rsi],ch
  40c435:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3140f23b
  40c43b:	add    BYTE PTR [rax],al
  40c43d:	add    BYTE PTR [rax],al
  40c43f:	add    BYTE PTR [rax+rax*1],ch
  40c442:	(bad)  
  40c443:	add    BYTE PTR [rcx],al
  40c445:	add    BYTE PTR [rcx+0x0],cl
  40c448:	outs   dx,BYTE PTR ds:[rsi]
  40c449:	add    BYTE PTR [rax+rax*1+0x65],dh
  40c44d:	add    BYTE PTR [rdx+0x0],dh
  40c450:	outs   dx,BYTE PTR ds:[rsi]
  40c451:	add    BYTE PTR [rcx+0x0],ah
  40c454:	ins    BYTE PTR es:[rdi],dx
  40c455:	add    BYTE PTR [rsi+0x0],cl
  40c458:	(bad)  
  40c459:	add    BYTE PTR [rbp+0x0],ch
  40c45c:	add    BYTE PTR gs:[rax],al
  40c45f:	add    BYTE PTR [rdx],ch
  40c461:	add    BYTE PTR [rsi],ch
  40c463:	add    BYTE PTR [rbp+0x0],ah
  40c466:	js     0x40c468
  40c468:	add    BYTE PTR gs:[rax],al
  40c46b:	add    BYTE PTR [rax+rax*1+0x18],dl
  40c46f:	add    BYTE PTR [rcx],al
  40c471:	add    BYTE PTR [rax+rax*1+0x65],cl
  40c475:	add    BYTE PTR [rdi+0x0],ah
  40c478:	(bad)  
  40c479:	add    BYTE PTR [rax+rax*1+0x43],ch
  40c47d:	add    BYTE PTR [rdi+0x0],ch
  40c480:	jo     0x40c482
  40c482:	jns    0x40c484
  40c484:	jb     0x40c486
  40c486:	imul   eax,DWORD PTR [rax],0x680067
  40c48c:	je     0x40c48e
  40c48e:	add    BYTE PTR [rax],al
  40c490:	rex.XB add BYTE PTR [r15+0x0],bpl
  40c494:	jo     0x40c496
  40c496:	jns    0x40c498
  40c498:	jb     0x40c49a
  40c49a:	imul   eax,DWORD PTR [rax],0x680067
  40c4a0:	je     0x40c4a2
  40c4a2:	and    BYTE PTR [rax],al
  40c4a4:	sub    BYTE PTR [rax],al
  40c4a6:	rex.XB add BYTE PTR [r9],bpl
  40c4a9:	add    BYTE PTR [rax],ah
  40c4ab:	add    BYTE PTR [rcx],dh
  40c4ad:	add    BYTE PTR [rcx],bh
  40c4af:	add    BYTE PTR [rcx],bh
  40c4b1:	add    BYTE PTR [rip+0x32002d00],dh        # 0x3240f1b7
  40c4b7:	add    BYTE PTR [rax],dh
  40c4b9:	add    BYTE PTR [rcx],dh
  40c4bb:	add    BYTE PTR [rbx],dh
  40c4bd:	add    BYTE PTR [rax],al
  40c4bf:	add    BYTE PTR [rdx],ch
  40c4c1:	add    BYTE PTR [rcx],al
  40c4c3:	add    BYTE PTR [rcx],al
  40c4c5:	add    BYTE PTR [rax+rax*1+0x65],cl
  40c4c9:	add    BYTE PTR [rdi+0x0],ah
  40c4cc:	(bad)  
  40c4cd:	add    BYTE PTR [rax+rax*1+0x54],ch
  40c4d1:	add    BYTE PTR [rdx+0x0],dh
  40c4d4:	(bad)  
  40c4d5:	add    BYTE PTR [rax+rax*1+0x65],ah
  40c4d9:	add    BYTE PTR [rbp+0x0],ch
  40c4dc:	(bad)  
  40c4dd:	add    BYTE PTR [rdx+0x0],dh
  40c4e0:	imul   eax,DWORD PTR [rax],0x73
	...
  40c4eb:	add    BYTE PTR [rax+rax*1],dh
  40c4ee:	(bad)  
  40c4ef:	add    BYTE PTR [rcx],al
  40c4f1:	add    BYTE PTR [rdi+0x0],cl
  40c4f4:	jb     0x40c4f6
  40c4f6:	imul   eax,DWORD PTR [rax],0x690067
  40c4fc:	outs   dx,BYTE PTR ds:[rsi]
  40c4fd:	add    BYTE PTR [rcx+0x0],ah
  40c500:	ins    BYTE PTR es:[rdi],dx
  40c501:	add    BYTE PTR [rsi+0x0],al
  40c504:	imul   eax,DWORD PTR [rax],0x65006c
  40c50a:	outs   dx,BYTE PTR ds:[rsi]
  40c50b:	add    BYTE PTR [rcx+0x0],ah
  40c50e:	ins    DWORD PTR es:[rdi],dx
  40c50f:	add    BYTE PTR [rbp+0x0],ah
  40c512:	add    BYTE PTR [rax],al
  40c514:	sub    al,BYTE PTR [rax]
  40c516:	add    BYTE PTR cs:[rbp+0x0],ah
  40c51a:	js     0x40c51c
  40c51c:	add    BYTE PTR gs:[rax],al
  40c51f:	add    BYTE PTR [rax+rax*1+0x12],al
  40c523:	add    BYTE PTR [rcx],al
  40c525:	add    BYTE PTR [rax+0x0],dl
  40c528:	jb     0x40c52a
  40c52a:	outs   dx,DWORD PTR ds:[rsi]
  40c52b:	add    BYTE PTR [rax+rax*1+0x75],ah
  40c52f:	add    BYTE PTR [rbx+0x0],ah
  40c532:	je     0x40c534
  40c534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40c538:	ins    DWORD PTR es:[rdi],dx
  40c539:	add    BYTE PTR [rbp+0x0],ah
  40c53c:	add    BYTE PTR [rax],al
  40c53e:	add    BYTE PTR [rax],al
  40c540:	add    BYTE PTR [ebp+0x0],ah
  40c544:	je     0x40c546
  40c546:	je     0x40c548
  40c548:	add    BYTE PTR gs:[rax+0x0],bh
  40c54c:	je     0x40c54e
  40c54e:	and    BYTE PTR [rax],al
  40c550:	jne    0x40c552
  40c552:	je     0x40c554
  40c554:	imul   eax,DWORD PTR [rax],0x69006c
  40c55a:	je     0x40c55c
  40c55c:	imul   eax,DWORD PTR [rax],0x730065
  40c562:	add    BYTE PTR [rax],al
  40c564:	add    BYTE PTR ss:[rcx],cl
  40c567:	add    BYTE PTR [rcx],al
  40c569:	add    BYTE PTR [rax+0x0],dl
  40c56c:	jb     0x40c56e
  40c56e:	outs   dx,DWORD PTR ds:[rsi]
  40c56f:	add    BYTE PTR [rax+rax*1+0x75],ah
  40c573:	add    BYTE PTR [rbx+0x0],ah
  40c576:	je     0x40c578
  40c578:	push   rsi
  40c579:	add    BYTE PTR [rbp+0x0],ah
  40c57c:	jb     0x40c57e
  40c57e:	jae    0x40c580
  40c580:	imul   eax,DWORD PTR [rax],0x6e006f
  40c586:	add    BYTE PTR [rax],al
  40c588:	xor    BYTE PTR [rax],al
  40c58a:	add    BYTE PTR cs:[rcx],dh
  40c58d:	add    BYTE PTR [rcx],bh
  40c58f:	add    BYTE PTR [rsi],ch
  40c591:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3140f397
  40c597:	add    BYTE PTR [rax],al
  40c599:	add    BYTE PTR [rax],al
  40c59b:	add    BYTE PTR [rax+rax*1+0x0],al
  40c59f:	add    BYTE PTR [rcx],al
  40c5a1:	add    BYTE PTR [rsi+0x0],dl
  40c5a4:	(bad)  
  40c5a5:	add    BYTE PTR [rdx+0x0],dh
  40c5a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40c5ac:	ins    BYTE PTR es:[rdi],dx
  40c5ad:	add    BYTE PTR [rbp+0x0],ah
  40c5b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  40c5b4:	data16 add BYTE PTR [rdi+0x0],ch
  40c5b8:	add    BYTE PTR [rax],al
  40c5ba:	add    BYTE PTR [rax],al
  40c5bc:	and    al,0x0
  40c5be:	add    al,0x0
  40c5c0:	add    BYTE PTR [rax],al
  40c5c2:	push   rsp
  40c5c3:	add    BYTE PTR [rdx+0x0],dh
  40c5c6:	(bad)  
  40c5c7:	add    BYTE PTR [rsi+0x0],ch
  40c5ca:	jae    0x40c5cc
  40c5cc:	ins    BYTE PTR es:[rdi],dx
  40c5cd:	add    BYTE PTR [rcx+0x0],ah
  40c5d0:	je     0x40c5d2
  40c5d2:	imul   eax,DWORD PTR [rax],0x6e006f
  40c5d8:	add    BYTE PTR [rax],al
  40c5da:	add    BYTE PTR [rax],al
  40c5dc:	or     DWORD PTR [rax+rax*1],eax
	...
