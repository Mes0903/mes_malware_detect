
c7269592ece77706917a1242e19690f7a9f92f213f4a00540827591e4b2e3abb.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8f55]        # 0x409f70
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8f56]        # 0x409f80
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8f59]        # 0x409f90
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x8f1c]        # 0x409f60
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x8dcf]        # 0x409e20
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x8ef1]        # 0x409f50
  40105f:	mov    DWORD PTR [rip+0xbfa3],edx        # 0x40d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4057e0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x404700
  401081:	mov    rdx,QWORD PTR [rip+0x8e28]        # 0x409eb0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x8e0e]        # 0x409ea0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x8e74]        # 0x409f10
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x8dab]        # 0x409e50
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4042e0
  4010af:	mov    rax,QWORD PTR [rip+0x8d1a]        # 0x409dd0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4057e0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x34b9]        # 0x4045e0
  401127:	call   0x4045d0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8dd5]        # 0x409f40
  40116b:	lea    r8,[rip+0xbea6]        # 0x40d018
  401172:	lea    rdx,[rip+0xbea7]        # 0x40d020
  401179:	lea    rcx,[rip+0xbea8]        # 0x40d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xbe78],eax        # 0x40d000
  401188:	lea    rax,[rip+0xbe71]        # 0x40d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x8d65]        # 0x409f00
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4057f8
  4011a3:	mov    DWORD PTR [rip+0xbe67],eax        # 0x40d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x8d8a]        # 0x409f50
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x8c8b]        # 0x409e80
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xd1c6]        # 0x40e3c8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x8c67]        # 0x409e90
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xbdba],0x1        # 0x40d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x8bac]        # 0x409e10
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4048f0
  40127d:	lea    rcx,[rip+0x3c0c]        # 0x404e90
  401284:	call   QWORD PTR [rip+0xd136]        # 0x40e3c0
  40128a:	mov    rdx,QWORD PTR [rip+0x8bdf]        # 0x409e70
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x404da0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x405820
  4012a5:	call   0x4046e0
  4012aa:	mov    rax,QWORD PTR [rip+0x8b6f]        # 0x409e20
  4012b1:	mov    QWORD PTR [rip+0xca50],rax        # 0x40dd08
  4012b8:	mov    rax,QWORD PTR [rip+0x8b81]        # 0x409e40
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xc9e9],rax        # 0x40dd00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x5cca],eax        # 0x407000
  401336:	mov    r12d,DWORD PTR [rip+0xbceb]        # 0x40d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x405720
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xbcc2]        # 0x40d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4056c8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x405720
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x405718
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xbc6a],rbp        # 0x40d020
  4013b6:	call   0x4042b0
  4013bb:	mov    rax,QWORD PTR [rip+0x8a6e]        # 0x409e30
  4013c2:	mov    rdx,QWORD PTR [rip+0xbc4f]        # 0x40d018
  4013c9:	mov    ecx,DWORD PTR [rip+0xbc59]        # 0x40d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xbc3c]        # 0x40d018
  4013dc:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 0x40d020
  4013e3:	call   0x405900
  4013e8:	mov    ecx,DWORD PTR [rip+0xbc1a]        # 0x40d008
  4013ee:	mov    DWORD PTR [rip+0xbc18],eax        # 0x40d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xbc02]        # 0x40d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4057c8
  40140b:	mov    eax,DWORD PTR [rip+0xbbfb]        # 0x40d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x8a59]        # 0x409e90
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4057d0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x8a6d]        # 0x409ed0
  401463:	mov    rcx,QWORD PTR [rip+0x8a56]        # 0x409ec0
  40146a:	call   0x4057a8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xcecf]        # 0x40e368
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x8a49]        # 0x409ef0
  4014a7:	mov    rcx,QWORD PTR [rip+0x8a32]        # 0x409ee0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4057a8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x405770
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8a75]        # 0x409f50
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4042f0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x8a45]        # 0x409f50
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4042f0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	movzx  r10d,BYTE PTR [rcx+0x4]
  40153b:	xor    eax,eax
  40153d:	mov    r11d,DWORD PTR [rsp+0x60]
  401542:	mov    ebx,DWORD PTR [rsp+0x68]
  401546:	mov    esi,DWORD PTR [rsp+0x70]
  40154a:	cmp    r10b,r8b
  40154d:	je     0x401556
  40154f:	add    rsp,0x28
  401553:	pop    rbx
  401554:	pop    rsi
  401555:	ret    
  401556:	test   r10b,r10b
  401559:	mov    al,0x1
  40155b:	je     0x40154f
  40155d:	xor    al,al
  40155f:	cmp    r9b,BYTE PTR [rcx+0x5]
  401563:	jne    0x40154f
  401565:	test   r9b,r9b
  401568:	mov    al,0x1
  40156a:	je     0x40154f
  40156c:	xor    al,al
  40156e:	cmp    r11b,BYTE PTR [rcx+0x6]
  401572:	jne    0x40154f
  401574:	test   r11b,r11b
  401577:	mov    al,0x1
  401579:	je     0x40154f
  40157b:	xor    al,al
  40157d:	cmp    bl,BYTE PTR [rcx+0x7]
  401580:	jne    0x40154f
  401582:	test   bl,bl
  401584:	mov    al,0x1
  401586:	je     0x40154f
  401588:	xor    al,al
  40158a:	cmp    sil,BYTE PTR [rcx+0x8]
  40158e:	jne    0x40154f
  401590:	test   sil,sil
  401593:	mov    al,0x1
  401595:	je     0x40154f
  401597:	add    rdx,0x9
  40159b:	add    rcx,0x9
  40159f:	call   0x4056d8
  4015a4:	test   eax,eax
  4015a6:	sete   al
  4015a9:	movzx  eax,al
  4015ac:	jmp    0x40154f
  4015ae:	xchg   ax,ax
  4015b0:	push   rbp
  4015b1:	push   rdi
  4015b2:	push   rsi
  4015b3:	push   rbx
  4015b4:	sub    rsp,0x58
  4015b8:	mov    rdi,rdx
  4015bb:	mov    rbp,r8
  4015be:	mov    rdx,QWORD PTR [rip+0xbaf3]        # 0x40d0b8
  4015c5:	movzx  r8d,cx
  4015c9:	mov    rcx,QWORD PTR [rip+0xbab8]        # 0x40d088
  4015d0:	lea    rbx,[rsp+0x40]
  4015d5:	lea    rsi,[rsp+0x48]
  4015da:	call   0x4056e0
  4015df:	mov    rcx,QWORD PTR [rip+0xbaa2]        # 0x40d088
  4015e6:	mov    QWORD PTR [rsp+0x30],rcx
  4015eb:	call   0x4056c8
  4015f0:	mov    QWORD PTR [rsp+0x38],rax
  4015f5:	mov    rax,QWORD PTR [rip+0xba44]        # 0x40d040
  4015fc:	xor    r9d,r9d
  4015ff:	mov    rcx,QWORD PTR [rip+0xba42]        # 0x40d048
  401606:	xor    r8d,r8d
  401609:	xor    edx,edx
  40160b:	mov    QWORD PTR [rsp+0x20],0x0
  401614:	mov    QWORD PTR [rsp+0x40],rax
  401619:	mov    rax,QWORD PTR [rip+0xba80]        # 0x40d0a0
  401620:	shl    rax,0x2
  401624:	mov    QWORD PTR [rsp+0x48],rax
  401629:	call   0x404130
  40162e:	mov    rcx,QWORD PTR [rip+0xba13]        # 0x40d048
  401635:	lea    rdx,[rsp+0x30]
  40163a:	lea    r8,[rsp+0x38]
  40163f:	mov    QWORD PTR [rsp+0x20],rsi
  401644:	mov    r9,rbx
  401647:	call   0x404130
  40164c:	cmp    rax,0xffffffffffffffff
  401650:	je     0x4016a0
  401652:	mov    rcx,QWORD PTR [rip+0xb9ef]        # 0x40d048
  401659:	xor    r8d,r8d
  40165c:	xor    edx,edx
  40165e:	mov    QWORD PTR [rsp+0x20],rsi
  401663:	mov    r9,rbx
  401666:	call   0x404130
  40166b:	cmp    rax,0xffffffffffffffff
  40166f:	je     0x4016a0
  401671:	mov    rax,QWORD PTR [rip+0xba28]        # 0x40d0a0
  401678:	mov    rcx,QWORD PTR [rip+0xb9c1]        # 0x40d040
  40167f:	mov    r8,rbp
  401682:	shl    rax,0x2
  401686:	sub    rax,QWORD PTR [rsp+0x48]
  40168b:	mov    rdx,rax
  40168e:	call   rdi
  401690:	nop
  401691:	add    rsp,0x58
  401695:	pop    rbx
  401696:	pop    rsi
  401697:	pop    rdi
  401698:	pop    rbp
  401699:	ret    
  40169a:	nop    WORD PTR [rax+rax*1+0x0]
  4016a0:	mov    r9,QWORD PTR [rip+0xb9e1]        # 0x40d088
  4016a7:	lea    r8,[rip+0x6952]        # 0x408000
  4016ae:	xor    edx,edx
  4016b0:	mov    ecx,0x1
  4016b5:	call   0x403140
  4016ba:	jmp    0x401671
  4016bc:	nop    DWORD PTR [rax+0x0]
  4016c0:	push   rbp
  4016c1:	push   rdi
  4016c2:	push   rsi
  4016c3:	push   rbx
  4016c4:	sub    rsp,0x58
  4016c8:	mov    rdi,rdx
  4016cb:	mov    rbp,r8
  4016ce:	mov    rdx,QWORD PTR [rip+0xb9db]        # 0x40d0b0
  4016d5:	mov    r8d,ecx
  4016d8:	mov    rcx,QWORD PTR [rip+0xb9a1]        # 0x40d080
  4016df:	lea    rbx,[rsp+0x40]
  4016e4:	lea    rsi,[rsp+0x48]
  4016e9:	call   0x4056e0
  4016ee:	mov    rcx,QWORD PTR [rip+0xb98b]        # 0x40d080
  4016f5:	mov    QWORD PTR [rsp+0x30],rcx
  4016fa:	call   0x4056c8
  4016ff:	mov    QWORD PTR [rsp+0x38],rax
  401704:	mov    rax,QWORD PTR [rip+0xb955]        # 0x40d060
  40170b:	xor    r9d,r9d
  40170e:	mov    rcx,QWORD PTR [rip+0xb953]        # 0x40d068
  401715:	xor    r8d,r8d
  401718:	xor    edx,edx
  40171a:	mov    QWORD PTR [rsp+0x20],0x0
  401723:	mov    QWORD PTR [rsp+0x40],rax
  401728:	mov    rax,QWORD PTR [rip+0xb969]        # 0x40d098
  40172f:	shl    rax,0x2
  401733:	mov    QWORD PTR [rsp+0x48],rax
  401738:	call   0x404130
  40173d:	mov    rcx,QWORD PTR [rip+0xb924]        # 0x40d068
  401744:	lea    rdx,[rsp+0x30]
  401749:	lea    r8,[rsp+0x38]
  40174e:	mov    QWORD PTR [rsp+0x20],rsi
  401753:	mov    r9,rbx
  401756:	call   0x404130
  40175b:	cmp    rax,0xffffffffffffffff
  40175f:	je     0x4017b0
  401761:	mov    rcx,QWORD PTR [rip+0xb900]        # 0x40d068
  401768:	xor    r8d,r8d
  40176b:	xor    edx,edx
  40176d:	mov    QWORD PTR [rsp+0x20],rsi
  401772:	mov    r9,rbx
  401775:	call   0x404130
  40177a:	cmp    rax,0xffffffffffffffff
  40177e:	je     0x4017b0
  401780:	mov    rax,QWORD PTR [rip+0xb911]        # 0x40d098
  401787:	mov    rcx,QWORD PTR [rip+0xb8d2]        # 0x40d060
  40178e:	mov    r8,rbp
  401791:	shl    rax,0x2
  401795:	sub    rax,QWORD PTR [rsp+0x48]
  40179a:	mov    rdx,rax
  40179d:	call   rdi
  40179f:	nop
  4017a0:	add    rsp,0x58
  4017a4:	pop    rbx
  4017a5:	pop    rsi
  4017a6:	pop    rdi
  4017a7:	pop    rbp
  4017a8:	ret    
  4017a9:	nop    DWORD PTR [rax+0x0]
  4017b0:	mov    r9,QWORD PTR [rip+0xb8c9]        # 0x40d080
  4017b7:	lea    r8,[rip+0x6882]        # 0x408040
  4017be:	xor    edx,edx
  4017c0:	mov    ecx,0x1
  4017c5:	call   0x403140
  4017ca:	jmp    0x401780
  4017cc:	nop    DWORD PTR [rax+0x0]
  4017d0:	push   r15
  4017d2:	push   r14
  4017d4:	push   r13
  4017d6:	push   r12
  4017d8:	push   rbp
  4017d9:	push   rdi
  4017da:	push   rsi
  4017db:	push   rbx
  4017dc:	sub    rsp,0x58
  4017e0:	test   rdx,rdx
  4017e3:	mov    rsi,rcx
  4017e6:	mov    rbx,rdx
  4017e9:	mov    r12,r8
  4017ec:	mov    r13,r9
  4017ef:	je     0x401910
  4017f5:	lea    rbp,[rsp+0x40]
  4017fa:	lea    r15,[rsp+0x38]
  4017ff:	lea    r14,[rsp+0x30]
  401804:	lea    rdi,[rsp+0x48]
  401809:	jmp    0x401868
  40180b:	nop    DWORD PTR [rax+rax*1+0x0]
  401810:	mov    rcx,QWORD PTR [rip+0xb841]        # 0x40d058
  401817:	xor    r8d,r8d
  40181a:	xor    edx,edx
  40181c:	mov    QWORD PTR [rsp+0x20],rdi
  401821:	mov    r9,rbp
  401824:	call   0x404130
  401829:	cmp    rax,0xffffffffffffffff
  40182d:	je     0x4018f1
  401833:	mov    rax,QWORD PTR [rsp+0x48]
  401838:	test   al,0x1
  40183a:	jne    0x401921
  401840:	mov    rdx,QWORD PTR [rip+0xb861]        # 0x40d0a8
  401847:	shr    rax,1
  40184a:	mov    r8,r13
  40184d:	mov    rcx,QWORD PTR [rip+0xb7fc]        # 0x40d050
  401854:	add    rsi,0x1
  401858:	sub    rdx,rax
  40185b:	call   r12
  40185e:	sub    rbx,0x1
  401862:	je     0x401910
  401868:	movzx  r8d,BYTE PTR [rsi]
  40186c:	mov    rdx,QWORD PTR [rip+0xb84d]        # 0x40d0c0
  401873:	mov    rcx,QWORD PTR [rip+0xb816]        # 0x40d090
  40187a:	call   0x4056e0
  40187f:	mov    rcx,QWORD PTR [rip+0xb80a]        # 0x40d090
  401886:	mov    QWORD PTR [rsp+0x30],rcx
  40188b:	call   0x4056c8
  401890:	mov    QWORD PTR [rsp+0x38],rax
  401895:	mov    rax,QWORD PTR [rip+0xb7b4]        # 0x40d050
  40189c:	xor    r9d,r9d
  40189f:	mov    rcx,QWORD PTR [rip+0xb7b2]        # 0x40d058
  4018a6:	xor    r8d,r8d
  4018a9:	xor    edx,edx
  4018ab:	mov    QWORD PTR [rsp+0x20],0x0
  4018b4:	mov    QWORD PTR [rsp+0x40],rax
  4018b9:	mov    rax,QWORD PTR [rip+0xb7e8]        # 0x40d0a8
  4018c0:	add    rax,rax
  4018c3:	mov    QWORD PTR [rsp+0x48],rax
  4018c8:	call   0x404130
  4018cd:	mov    rcx,QWORD PTR [rip+0xb784]        # 0x40d058
  4018d4:	mov    QWORD PTR [rsp+0x20],rdi
  4018d9:	mov    r9,rbp
  4018dc:	mov    r8,r15
  4018df:	mov    rdx,r14
  4018e2:	call   0x404130
  4018e7:	cmp    rax,0xffffffffffffffff
  4018eb:	jne    0x401810
  4018f1:	mov    r9,QWORD PTR [rip+0xb798]        # 0x40d090
  4018f8:	lea    r8,[rip+0x6781]        # 0x408080
  4018ff:	xor    edx,edx
  401901:	mov    ecx,0x1
  401906:	call   0x403140
  40190b:	jmp    0x401833
  401910:	add    rsp,0x58
  401914:	pop    rbx
  401915:	pop    rsi
  401916:	pop    rdi
  401917:	pop    rbp
  401918:	pop    r12
  40191a:	pop    r13
  40191c:	pop    r14
  40191e:	pop    r15
  401920:	ret    
  401921:	call   0x405780
  401926:	nop
  401927:	nop    WORD PTR [rax+rax*1+0x0]
  401930:	push   r15
  401932:	push   r14
  401934:	push   r13
  401936:	push   r12
  401938:	push   rbp
  401939:	push   rdi
  40193a:	push   rsi
  40193b:	push   rbx
  40193c:	sub    rsp,0x58
  401940:	test   rdx,rdx
  401943:	mov    rsi,rcx
  401946:	mov    rbx,rdx
  401949:	mov    r12,r8
  40194c:	mov    r13,r9
  40194f:	je     0x401a72
  401955:	lea    rbp,[rsp+0x40]
  40195a:	lea    r15,[rsp+0x38]
  40195f:	lea    r14,[rsp+0x30]
  401964:	lea    rdi,[rsp+0x48]
  401969:	jmp    0x4019c9
  40196b:	nop    DWORD PTR [rax+rax*1+0x0]
  401970:	mov    rcx,QWORD PTR [rip+0xb701]        # 0x40d078
  401977:	xor    r8d,r8d
  40197a:	xor    edx,edx
  40197c:	mov    QWORD PTR [rsp+0x20],rdi
  401981:	mov    r9,rbp
  401984:	call   0x404130
  401989:	cmp    rax,0xffffffffffffffff
  40198d:	je     0x401a53
  401993:	mov    rax,QWORD PTR [rsp+0x48]
  401998:	test   al,0x3
  40199a:	jne    0x401a83
  4019a0:	mov    rdx,QWORD PTR [rip+0xb701]        # 0x40d0a8
  4019a7:	shr    rax,0x2
  4019ab:	mov    r8,r13
  4019ae:	mov    rcx,QWORD PTR [rip+0xb6bb]        # 0x40d070
  4019b5:	add    rsi,0x1
  4019b9:	sub    rdx,rax
  4019bc:	call   r12
  4019bf:	sub    rbx,0x1
  4019c3:	je     0x401a72
  4019c9:	movzx  r8d,BYTE PTR [rsi]
  4019cd:	mov    rdx,QWORD PTR [rip+0xb6ec]        # 0x40d0c0
  4019d4:	mov    rcx,QWORD PTR [rip+0xb6b5]        # 0x40d090
  4019db:	call   0x4056e0
  4019e0:	mov    rcx,QWORD PTR [rip+0xb6a9]        # 0x40d090
  4019e7:	mov    QWORD PTR [rsp+0x30],rcx
  4019ec:	call   0x4056c8
  4019f1:	mov    QWORD PTR [rsp+0x38],rax
  4019f6:	mov    rax,QWORD PTR [rip+0xb673]        # 0x40d070
  4019fd:	xor    r9d,r9d
  401a00:	mov    rcx,QWORD PTR [rip+0xb671]        # 0x40d078
  401a07:	xor    r8d,r8d
  401a0a:	xor    edx,edx
  401a0c:	mov    QWORD PTR [rsp+0x20],0x0
  401a15:	mov    QWORD PTR [rsp+0x40],rax
  401a1a:	mov    rax,QWORD PTR [rip+0xb687]        # 0x40d0a8
  401a21:	shl    rax,0x2
  401a25:	mov    QWORD PTR [rsp+0x48],rax
  401a2a:	call   0x404130
  401a2f:	mov    rcx,QWORD PTR [rip+0xb642]        # 0x40d078
  401a36:	mov    QWORD PTR [rsp+0x20],rdi
  401a3b:	mov    r9,rbp
  401a3e:	mov    r8,r15
  401a41:	mov    rdx,r14
  401a44:	call   0x404130
  401a49:	cmp    rax,0xffffffffffffffff
  401a4d:	jne    0x401970
  401a53:	mov    r9,QWORD PTR [rip+0xb636]        # 0x40d090
  401a5a:	lea    r8,[rip+0x6657]        # 0x4080b8
  401a61:	xor    edx,edx
  401a63:	mov    ecx,0x1
  401a68:	call   0x403140
  401a6d:	jmp    0x401993
  401a72:	add    rsp,0x58
  401a76:	pop    rbx
  401a77:	pop    rsi
  401a78:	pop    rdi
  401a79:	pop    rbp
  401a7a:	pop    r12
  401a7c:	pop    r13
  401a7e:	pop    r14
  401a80:	pop    r15
  401a82:	ret    
  401a83:	call   0x405780
  401a88:	nop
  401a89:	nop    DWORD PTR [rax+0x0]
  401a90:	push   r15
  401a92:	push   r14
  401a94:	push   r13
  401a96:	push   r12
  401a98:	push   rbp
  401a99:	push   rdi
  401a9a:	push   rsi
  401a9b:	push   rbx
  401a9c:	sub    rsp,0x48
  401aa0:	xor    r12d,r12d
  401aa3:	xor    esi,esi
  401aa5:	mov    edi,0x9
  401aaa:	mov    r13,rdx
  401aad:	mov    ebp,0xb
  401ab2:	movabs r14,0x412150004001
  401abc:	movzx  eax,BYTE PTR [rcx]
  401abf:	test   al,al
  401ac1:	je     0x401ad9
  401ac3:	cmp    al,0x25
  401ac5:	lea    rbx,[rcx+0x1]
  401ac9:	je     0x401b10
  401acb:	mov    rcx,rbx
  401ace:	add    rsi,0x1
  401ad2:	movzx  eax,BYTE PTR [rcx]
  401ad5:	test   al,al
  401ad7:	jne    0x401ac3
  401ad9:	cmp    r12d,0x1
  401add:	jbe    0x401afa
  401adf:	lea    r8,[rip+0x67da]        # 0x4082c0
  401ae6:	mov    DWORD PTR [rsp+0x20],r12d
  401aeb:	mov    r9,r13
  401aee:	xor    edx,edx
  401af0:	mov    ecx,0x1
  401af5:	call   0x403140
  401afa:	mov    rax,rsi
  401afd:	add    rsp,0x48
  401b01:	pop    rbx
  401b02:	pop    rsi
  401b03:	pop    rdi
  401b04:	pop    rbp
  401b05:	pop    r12
  401b07:	pop    r13
  401b09:	pop    r14
  401b0b:	pop    r15
  401b0d:	ret    
  401b0e:	xchg   ax,ax
  401b10:	movzx  ecx,BYTE PTR [rcx+0x1]
  401b14:	mov    eax,ecx
  401b16:	and    eax,0xfffffffb
  401b19:	cmp    al,0x23
  401b1b:	mov    eax,ecx
  401b1d:	sete   dl
  401b20:	and    eax,0xffffffef
  401b23:	cmp    al,0x20
  401b25:	sete   al
  401b28:	or     dl,al
  401b2a:	je     0x401b56
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	add    rbx,0x1
  401b34:	movzx  ecx,BYTE PTR [rbx]
  401b37:	mov    eax,ecx
  401b39:	mov    r8d,ecx
  401b3c:	and    eax,0xfffffffb
  401b3f:	cmp    al,0x23
  401b41:	sete   r10b
  401b45:	and    r8d,0xffffffef
  401b49:	cmp    r8b,0x20
  401b4d:	sete   r8b
  401b51:	or     r10b,r8b
  401b54:	jne    0x401b30
  401b56:	lea    eax,[rcx-0x2b]
  401b59:	test   al,0xfd
  401b5b:	je     0x401b30
  401b5d:	cmp    cl,0x2a
  401b60:	je     0x401cdc
  401b66:	movsx  edx,BYTE PTR [rbx]
  401b69:	xor    r15d,r15d
  401b6c:	mov    eax,edx
  401b6e:	sub    edx,0x30
  401b71:	cmp    edx,0x9
  401b74:	jbe    0x401bc0
  401b76:	xor    r10d,r10d
  401b79:	cmp    al,0x2e
  401b7b:	je     0x401c59
  401b81:	lea    edx,[rax-0x4c]
  401b84:	cmp    dl,0x2e
  401b87:	ja     0x401bdd
  401b89:	bt     r14,rdx
  401b8d:	jb     0x401c9f
  401b93:	cmp    al,0x6f
  401b95:	je     0x401cca
  401b9b:	jg     0x401c31
  401ba1:	cmp    al,0x25
  401ba3:	mov    edx,0x1
  401ba8:	jne    0x401bfe
  401baa:	cmp    edx,r15d
  401bad:	mov    eax,r15d
  401bb0:	lea    rcx,[rbx+0x1]
  401bb4:	cmovae rax,rdx
  401bb8:	add    rsi,rax
  401bbb:	jmp    0x401abc
  401bc0:	lea    edx,[r15+r15*4]
  401bc4:	add    rbx,0x1
  401bc8:	lea    r15d,[rax+rdx*2-0x30]
  401bcd:	movsx  eax,BYTE PTR [rbx]
  401bd0:	movsx  edx,al
  401bd3:	sub    edx,0x30
  401bd6:	cmp    edx,0x9
  401bd9:	jbe    0x401bc0
  401bdb:	jmp    0x401b76
  401bdd:	cmp    al,0x6f
  401bdf:	je     0x401cca
  401be5:	jle    0x401ba1
  401be7:	cmp    al,0x75
  401be9:	jne    0x401c39
  401beb:	cmp    r10d,0x9
  401bef:	mov    edx,r10d
  401bf2:	cmovb  edx,edi
  401bf5:	add    edx,0x2
  401bf8:	add    r12d,0x1
  401bfc:	jmp    0x401baa
  401bfe:	cmp    al,0x58
  401c00:	je     0x401beb
  401c02:	test   al,al
  401c04:	je     0x401c41
  401c06:	lea    edx,[rax-0x20]
  401c09:	cmp    dl,0x5e
  401c0c:	ja     0x401cf7
  401c12:	lea    r8,[rip+0x65f7]        # 0x408210
  401c19:	mov    DWORD PTR [rsp+0x20],eax
  401c1d:	mov    r9,r13
  401c20:	xor    edx,edx
  401c22:	mov    ecx,0x1
  401c27:	call   0x403140
  401c2c:	call   0x405780
  401c31:	cmp    al,0x75
  401c33:	je     0x401d12
  401c39:	cmp    al,0x78
  401c3b:	je     0x401beb
  401c3d:	test   al,al
  401c3f:	jne    0x401c06
  401c41:	lea    r8,[rip+0x6588]        # 0x4081d0
  401c48:	mov    r9,r13
  401c4b:	xor    edx,edx
  401c4d:	mov    ecx,0x1
  401c52:	call   0x403140
  401c57:	jmp    0x401c2c
  401c59:	movsx  eax,BYTE PTR [rbx+0x1]
  401c5d:	lea    r10,[rbx+0x1]
  401c61:	cmp    al,0x2a
  401c63:	je     0x401d29
  401c69:	movsx  edx,al
  401c6c:	mov    rbx,r10
  401c6f:	xor    r10d,r10d
  401c72:	lea    ecx,[rdx-0x30]
  401c75:	cmp    ecx,0x9
  401c78:	ja     0x401b81
  401c7e:	xchg   ax,ax
  401c80:	lea    eax,[r10+r10*4]
  401c84:	add    rbx,0x1
  401c88:	lea    r10d,[rdx+rax*2-0x30]
  401c8d:	movsx  edx,BYTE PTR [rbx]
  401c90:	lea    ecx,[rdx-0x30]
  401c93:	mov    eax,edx
  401c95:	cmp    ecx,0x9
  401c98:	jbe    0x401c80
  401c9a:	jmp    0x401b81
  401c9f:	lea    r8,[rip+0x64e2]        # 0x408188
  401ca6:	xor    edx,edx
  401ca8:	mov    r9,r13
  401cab:	mov    ecx,0x1
  401cb0:	mov    DWORD PTR [rsp+0x38],r10d
  401cb5:	call   0x403140
  401cba:	movsx  eax,BYTE PTR [rbx]
  401cbd:	mov    r10d,DWORD PTR [rsp+0x38]
  401cc2:	cmp    al,0x6f
  401cc4:	jne    0x401b9b
  401cca:	cmp    r10d,0xb
  401cce:	mov    edx,r10d
  401cd1:	cmovb  edx,ebp
  401cd4:	add    edx,0x1
  401cd7:	jmp    0x401bf8
  401cdc:	lea    r8,[rip+0x6405]        # 0x4080e8
  401ce3:	mov    r9,r13
  401ce6:	xor    edx,edx
  401ce8:	mov    ecx,0x1
  401ced:	call   0x403140
  401cf2:	jmp    0x401b66
  401cf7:	lea    r8,[rip+0x655a]        # 0x408258
  401cfe:	mov    r9,r13
  401d01:	xor    edx,edx
  401d03:	mov    ecx,0x1
  401d08:	call   0x403140
  401d0d:	jmp    0x401c2c
  401d12:	cmp    r10d,0xa
  401d16:	mov    eax,0xa
  401d1b:	cmovb  r10d,eax
  401d1f:	lea    edx,[r10+r10*1+0x1]
  401d24:	jmp    0x401bf8
  401d29:	lea    r8,[rip+0x6408]        # 0x408138
  401d30:	mov    r9,r13
  401d33:	xor    edx,edx
  401d35:	mov    ecx,0x1
  401d3a:	mov    QWORD PTR [rsp+0x38],r10
  401d3f:	call   0x403140
  401d44:	movsx  eax,BYTE PTR [rbx+0x1]
  401d48:	mov    r10,QWORD PTR [rsp+0x38]
  401d4d:	jmp    0x401c69
  401d52:	nop    DWORD PTR [rax+0x0]
  401d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d60:	push   rbp
  401d61:	push   rdi
  401d62:	push   rsi
  401d63:	push   rbx
  401d64:	sub    rsp,0x28
  401d68:	mov    rbp,QWORD PTR [rip+0xc6b1]        # 0x40e420
  401d6f:	test   ecx,ecx
  401d71:	mov    edi,ecx
  401d73:	je     0x401db0
  401d75:	mov    rsi,rdx
  401d78:	xor    ebx,ebx
  401d7a:	mov    rbp,QWORD PTR [rip+0xc69f]        # 0x40e420
  401d81:	jmp    0x401d9b
  401d83:	test   ebx,ebx
  401d85:	je     0x401d97
  401d87:	call   rbp
  401d89:	lea    rdx,[rax+0x30]
  401d8d:	mov    ecx,0x20
  401d92:	call   0x403460
  401d97:	add    rsi,0x8
  401d9b:	call   rbp
  401d9d:	mov    rcx,QWORD PTR [rsi]
  401da0:	lea    rdx,[rax+0x30]
  401da4:	add    ebx,0x1
  401da7:	call   0x403530
  401dac:	cmp    ebx,edi
  401dae:	jne    0x401d83
  401db0:	call   rbp
  401db2:	lea    rdx,[rax+0x30]
  401db6:	mov    ecx,0xa
  401dbb:	call   0x403460
  401dc0:	xor    eax,eax
  401dc2:	add    rsp,0x28
  401dc6:	pop    rbx
  401dc7:	pop    rsi
  401dc8:	pop    rdi
  401dc9:	pop    rbp
  401dca:	ret    
  401dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401dd0:	push   rdi
  401dd1:	push   rsi
  401dd2:	push   rbx
  401dd3:	sub    rsp,0x20
  401dd7:	test   ecx,ecx
  401dd9:	mov    ebx,ecx
  401ddb:	je     0x401e2a
  401ddd:	mov    rsi,QWORD PTR [rip+0xc63c]        # 0x40e420
  401de4:	call   rsi
  401de6:	lea    r8,[rip+0x6533]        # 0x408320
  401ded:	lea    rcx,[rax+0x60]
  401df1:	lea    rdx,[rip+0x6564]        # 0x40835c
  401df8:	lea    r9,[rip+0x650f]        # 0x40830e
  401dff:	call   0x403400
  401e04:	mov    rax,QWORD PTR [rip+0x8195]        # 0x409fa0
  401e0b:	mov    rdi,QWORD PTR [rax]
  401e0e:	call   rsi
  401e10:	lea    rdx,[rip+0x6551]        # 0x408368
  401e17:	lea    rcx,[rax+0x60]
  401e1b:	mov    r8,rdi
  401e1e:	call   0x403400
  401e23:	mov    ecx,ebx
  401e25:	call   0x405770
  401e2a:	mov    rsi,QWORD PTR [rip+0x816f]        # 0x409fa0
  401e31:	lea    rcx,[rip+0x6558]        # 0x408390
  401e38:	mov    rdx,QWORD PTR [rsi]
  401e3b:	call   0x4033c0
  401e40:	mov    rdx,QWORD PTR [rsi]
  401e43:	lea    rcx,[rip+0x6588]        # 0x4083d2
  401e4a:	call   0x4033c0
  401e4f:	lea    rcx,[rip+0x658a]        # 0x4083e0
  401e56:	call   0x4033c0
  401e5b:	lea    rcx,[rip+0x6586]        # 0x4083e8
  401e62:	call   0x4033c0
  401e67:	lea    rcx,[rip+0x6572]        # 0x4083e0
  401e6e:	call   0x4033c0
  401e73:	lea    rcx,[rip+0x65a6]        # 0x408420
  401e7a:	call   0x4033c0
  401e7f:	lea    rcx,[rip+0x65d2]        # 0x408458
  401e86:	call   0x4033c0
  401e8b:	lea    rcx,[rip+0x6626]        # 0x4084b8
  401e92:	call   0x4033c0
  401e97:	lea    rcx,[rip+0x6542]        # 0x4083e0
  401e9e:	call   0x4033c0
  401ea3:	lea    rcx,[rip+0x666e]        # 0x408518
  401eaa:	call   0x4033c0
  401eaf:	lea    rcx,[rip+0x6692]        # 0x408548
  401eb6:	call   0x4033c0
  401ebb:	lea    rcx,[rip+0x66c6]        # 0x408588
  401ec2:	call   0x4033c0
  401ec7:	lea    rcx,[rip+0x672a]        # 0x4085f8
  401ece:	call   0x4033c0
  401ed3:	lea    rcx,[rip+0x6766]        # 0x408640
  401eda:	call   0x4033c0
  401edf:	lea    rcx,[rip+0x64fa]        # 0x4083e0
  401ee6:	call   0x4033c0
  401eeb:	lea    rcx,[rip+0x67be]        # 0x4086b0
  401ef2:	call   0x4033c0
  401ef7:	lea    rcx,[rip+0x67da]        # 0x4086d8
  401efe:	call   0x4033c0
  401f03:	lea    rcx,[rip+0x64d6]        # 0x4083e0
  401f0a:	call   0x4033c0
  401f0f:	lea    rcx,[rip+0x6813]        # 0x408729
  401f16:	call   0x4033c0
  401f1b:	lea    rcx,[rip+0x681e]        # 0x408740
  401f22:	call   0x4033c0
  401f27:	lea    rcx,[rip+0x6852]        # 0x408780
  401f2e:	call   0x4033c0
  401f33:	lea    rcx,[rip+0x6886]        # 0x4087c0
  401f3a:	call   0x4033c0
  401f3f:	lea    rcx,[rip+0x649a]        # 0x4083e0
  401f46:	call   0x4033c0
  401f4b:	call   QWORD PTR [rip+0xc4cf]        # 0x40e420
  401f51:	lea    rcx,[rip+0x68b0]        # 0x408808
  401f58:	lea    rdx,[rax+0x30]
  401f5c:	call   0x403530
  401f61:	jmp    0x401e23
  401f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f70:	push   rsi
  401f71:	push   rbx
  401f72:	sub    rsp,0x38
  401f76:	mov    rbx,QWORD PTR [rip+0xc4a3]        # 0x40e420
  401f7d:	mov    rsi,rcx
  401f80:	call   rbx
  401f82:	lea    rcx,[rax+0x30]
  401f86:	call   0x405758
  401f8b:	mov    eax,DWORD PTR [rip+0xb13f]        # 0x40d0d0
  401f91:	test   eax,eax
  401f93:	je     0x401fab
  401f95:	call   rbx
  401f97:	lea    rdx,[rax+0x60]
  401f9b:	mov    ecx,0xa
  401fa0:	call   0x403460
  401fa5:	mov    eax,DWORD PTR [rip+0xb125]        # 0x40d0d0
  401fab:	mov    DWORD PTR [rsp+0x28],eax
  401faf:	mov    eax,DWORD PTR [rip+0xb11f]        # 0x40d0d4
  401fb5:	lea    r8,[rip+0x6878]        # 0x408834
  401fbc:	mov    r9,rsi
  401fbf:	xor    edx,edx
  401fc1:	xor    ecx,ecx
  401fc3:	mov    DWORD PTR [rsp+0x20],eax
  401fc7:	call   0x403140
  401fcc:	nop
  401fcd:	add    rsp,0x38
  401fd1:	pop    rbx
  401fd2:	pop    rsi
  401fd3:	ret    
  401fd4:	xchg   ax,ax
  401fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fe0:	push   rsi
  401fe1:	push   rbx
  401fe2:	sub    rsp,0x38
  401fe6:	mov    rbx,QWORD PTR [rip+0xc433]        # 0x40e420
  401fed:	mov    rsi,rcx
  401ff0:	call   rbx
  401ff2:	lea    rcx,[rax+0x30]
  401ff6:	call   0x405758
  401ffb:	mov    eax,DWORD PTR [rip+0xb0cf]        # 0x40d0d0
  402001:	test   eax,eax
  402003:	je     0x40201b
  402005:	call   rbx
  402007:	lea    rdx,[rax+0x60]
  40200b:	mov    ecx,0xa
  402010:	call   0x403460
  402015:	mov    eax,DWORD PTR [rip+0xb0b5]        # 0x40d0d0
  40201b:	mov    DWORD PTR [rsp+0x28],eax
  40201f:	mov    eax,DWORD PTR [rip+0xb0af]        # 0x40d0d4
  402025:	lea    r8,[rip+0x6824]        # 0x408850
  40202c:	mov    r9,rsi
  40202f:	xor    edx,edx
  402031:	xor    ecx,ecx
  402033:	mov    DWORD PTR [rsp+0x20],eax
  402037:	call   0x403140
  40203c:	nop
  40203d:	add    rsp,0x38
  402041:	pop    rbx
  402042:	pop    rsi
  402043:	ret    
  402044:	xchg   ax,ax
  402046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402050:	push   rdi
  402051:	push   rsi
  402052:	push   rbx
  402053:	sub    rsp,0x30
  402057:	mov    rbx,QWORD PTR [rip+0xc3c2]        # 0x40e420
  40205e:	mov    esi,ecx
  402060:	mov    rdi,rdx
  402063:	call   rbx
  402065:	lea    rcx,[rax+0x30]
  402069:	call   0x405758
  40206e:	mov    eax,DWORD PTR [rip+0xb05c]        # 0x40d0d0
  402074:	test   eax,eax
  402076:	je     0x40208e
  402078:	call   rbx
  40207a:	lea    rdx,[rax+0x60]
  40207e:	mov    ecx,0xa
  402083:	call   0x403460
  402088:	mov    eax,DWORD PTR [rip+0xb042]        # 0x40d0d0
  40208e:	mov    DWORD PTR [rsp+0x28],eax
  402092:	mov    eax,DWORD PTR [rip+0xb03c]        # 0x40d0d4
  402098:	lea    r8,[rip+0x67e2]        # 0x408881
  40209f:	mov    r9,rdi
  4020a2:	mov    edx,esi
  4020a4:	xor    ecx,ecx
  4020a6:	mov    DWORD PTR [rsp+0x20],eax
  4020aa:	call   0x403140
  4020af:	nop
  4020b0:	add    rsp,0x30
  4020b4:	pop    rbx
  4020b5:	pop    rsi
  4020b6:	pop    rdi
  4020b7:	ret    
  4020b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020c0:	push   r15
  4020c2:	push   r14
  4020c4:	mov    eax,0x30a8
  4020c9:	push   r13
  4020cb:	push   r12
  4020cd:	push   rbp
  4020ce:	push   rdi
  4020cf:	push   rsi
  4020d0:	push   rbx
  4020d1:	call   0x405660
  4020d6:	sub    rsp,rax
  4020d9:	mov    r12d,0x1000
  4020df:	xor    esi,esi
  4020e1:	mov    r15,rcx
  4020e4:	mov    DWORD PTR [rsp+0x30f8],edx
  4020eb:	mov    QWORD PTR [rsp+0x3100],r8
  4020f3:	mov    edx,0x8000
  4020f8:	mov    ecx,DWORD PTR [rsp+0x30f8]
  4020ff:	lea    r14,[rsp+0x88]
  402107:	call   QWORD PTR [rip+0xc383]        # 0x40e490
  40210d:	mov    QWORD PTR [rsp+0x20],0x0
  402116:	xor    r9d,r9d
  402119:	xor    r8d,r8d
  40211c:	xor    edx,edx
  40211e:	mov    rcx,r15
  402121:	mov    DWORD PTR [rip+0xafa9],0x1        # 0x40d0d4
  40212b:	mov    DWORD PTR [rip+0xaf9b],0x0        # 0x40d0d0
  402135:	lea    r13,[rsp+0x80]
  40213d:	call   0x404130
  402142:	lea    rax,[rsp+0xa0]
  40214a:	mov    rdi,QWORD PTR [rip+0xc307]        # 0x40e458
  402151:	mov    DWORD PTR [rsp+0x54],0x0
  402159:	mov    QWORD PTR [rsp+0x68],rax
  40215e:	mov    rbx,rax
  402161:	lea    rax,[rsp+0x10a0]
  402169:	mov    QWORD PTR [rsp+0x48],rdi
  40216e:	mov    QWORD PTR [rsp+0x60],rax
  402173:	lea    rax,[rsp+0x78]
  402178:	mov    QWORD PTR [rsp+0x38],rax
  40217d:	lea    rax,[rsp+0x70]
  402182:	mov    QWORD PTR [rsp+0x40],rax
  402187:	call   QWORD PTR [rip+0xc293]        # 0x40e420
  40218d:	lea    rcx,[rax+0x30]
  402191:	call   0x405758
  402196:	mov    rax,QWORD PTR [rsp+0x60]
  40219b:	mov    ecx,DWORD PTR [rsp+0x30f8]
  4021a2:	mov    r8d,0x1000
  4021a8:	lea    rdx,[rax+0x1000]
  4021af:	call   0x402930
  4021b4:	lea    rdx,[rax-0x1]
  4021b8:	cmp    rdx,0xfffffffffffffffd
  4021bc:	ja     0x402470
  4021c2:	mov    rdx,QWORD PTR [rsp+0x60]
  4021c7:	add    rax,rsi
  4021ca:	mov    QWORD PTR [rsp+0x78],rax
  4021cf:	sub    rdx,rsi
  4021d2:	add    rdx,0x1000
  4021d9:	test   rax,rax
  4021dc:	mov    QWORD PTR [rsp+0x70],rdx
  4021e1:	je     0x4022e0
  4021e7:	lea    rax,[rsp+0x98]
  4021ef:	mov    QWORD PTR [rsp+0x58],rax
  4021f4:	jmp    0x40220c
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	cmp    QWORD PTR [rsp+0x78],0x0
  402206:	je     0x4022e0
  40220c:	mov    r8,QWORD PTR [rsp+0x38]
  402211:	mov    rdx,QWORD PTR [rsp+0x40]
  402216:	mov    r9,r13
  402219:	mov    QWORD PTR [rsp+0x20],r14
  40221e:	mov    rcx,r15
  402221:	mov    QWORD PTR [rsp+0x80],rbx
  402229:	mov    QWORD PTR [rsp+0x88],r12
  402231:	call   0x404130
  402236:	cmp    QWORD PTR [rsp+0x80],rbx
  40223e:	mov    rsi,rax
  402241:	je     0x402281
  402243:	call   rdi
  402245:	mov    ebp,DWORD PTR [rax]
  402247:	call   QWORD PTR [rip+0xc1d3]        # 0x40e420
  40224d:	mov    r8,QWORD PTR [rsp+0x80]
  402255:	lea    r9,[rax+0x30]
  402259:	mov    edx,0x1
  40225e:	mov    rcx,rbx
  402261:	sub    r8,rbx
  402264:	call   0x403690
  402269:	mov    rdx,QWORD PTR [rsp+0x80]
  402271:	sub    rdx,rbx
  402274:	cmp    rax,rdx
  402277:	jb     0x402395
  40227d:	call   rdi
  40227f:	mov    DWORD PTR [rax],ebp
  402281:	cmp    rsi,0xffffffffffffffff
  402285:	jne    0x402200
  40228b:	mov    rax,QWORD PTR [rsp+0x48]
  402290:	call   rax
  402292:	cmp    DWORD PTR [rax],0x2a
  402295:	jne    0x4022f0
  402297:	cmp    DWORD PTR [rip+0xae3e],0x1        # 0x40d0dc
  40229e:	jne    0x402423
  4022a4:	mov    r8,QWORD PTR [rsp+0x58]
  4022a9:	mov    edx,0x4
  4022ae:	mov    rcx,r15
  4022b1:	mov    DWORD PTR [rsp+0x98],0x1
  4022bc:	call   0x404118
  4022c1:	cmp    QWORD PTR [rsp+0x78],0x0
  4022c7:	mov    DWORD PTR [rip+0xae0b],0x2        # 0x40d0dc
  4022d1:	mov    DWORD PTR [rsp+0x54],0x1
  4022d9:	jne    0x40220c
  4022df:	nop
  4022e0:	xor    esi,esi
  4022e2:	jmp    0x402187
  4022e7:	nop    WORD PTR [rax+rax*1+0x0]
  4022f0:	mov    rax,QWORD PTR [rsp+0x48]
  4022f5:	call   rax
  4022f7:	cmp    DWORD PTR [rax],0x16
  4022fa:	je     0x4023c4
  402300:	mov    rax,QWORD PTR [rsp+0x48]
  402305:	call   rax
  402307:	cmp    DWORD PTR [rax],0x7
  40230a:	jne    0x402445
  402310:	cmp    QWORD PTR [rsp+0x80],rbx
  402318:	jne    0x402200
  40231e:	cmp    rbx,QWORD PTR [rsp+0x68]
  402323:	je     0x40232d
  402325:	mov    rcx,rbx
  402328:	call   0x405730
  40232d:	add    r12,r12
  402330:	je     0x4027a8
  402336:	mov    rcx,r12
  402339:	call   0x402f70
  40233e:	mov    rbx,rax
  402341:	jmp    0x402200
  402346:	mov    edx,DWORD PTR [rsp+0x38]
  40234a:	test   edx,edx
  40234c:	je     0x40239d
  40234e:	call   QWORD PTR [rip+0xc0cc]        # 0x40e420
  402354:	lea    rcx,[rax+0x30]
  402358:	call   0x405758
  40235d:	mov    eax,DWORD PTR [rip+0xad6d]        # 0x40d0d0
  402363:	test   eax,eax
  402365:	je     0x40237b
  402367:	call   QWORD PTR [rip+0xc0b3]        # 0x40e420
  40236d:	lea    rdx,[rax+0x60]
  402371:	mov    ecx,0xa
  402376:	call   0x403460
  40237b:	mov    r9,QWORD PTR [rsp+0x3100]
  402383:	mov    edx,DWORD PTR [rsp+0x38]
  402387:	lea    r8,[rip+0x653a]        # 0x4088c8
  40238e:	xor    ecx,ecx
  402390:	call   0x403140
  402395:	mov    DWORD PTR [rsp+0x54],0x1
  40239d:	cmp    rbx,QWORD PTR [rsp+0x68]
  4023a2:	je     0x4023ac
  4023a4:	mov    rcx,rbx
  4023a7:	call   0x405730
  4023ac:	mov    eax,DWORD PTR [rsp+0x54]
  4023b0:	add    rsp,0x30a8
  4023b7:	pop    rbx
  4023b8:	pop    rsi
  4023b9:	pop    rdi
  4023ba:	pop    rbp
  4023bb:	pop    r12
  4023bd:	pop    r13
  4023bf:	pop    r14
  4023c1:	pop    r15
  4023c3:	ret    
  4023c4:	mov    rsi,QWORD PTR [rsp+0x78]
  4023c9:	cmp    rsi,0x1000
  4023d0:	ja     0x402762
  4023d6:	test   rsi,rsi
  4023d9:	je     0x402187
  4023df:	mov    rax,QWORD PTR [rsp+0x60]
  4023e4:	mov    rdx,rsi
  4023e7:	sub    rax,rsi
  4023ea:	lea    rcx,[rax+0x1000]
  4023f1:	mov    rax,QWORD PTR [rsp+0x70]
  4023f6:	add    rax,0x1
  4023fa:	mov    QWORD PTR [rsp+0x70],rax
  4023ff:	movzx  r8d,BYTE PTR [rax-0x1]
  402404:	sub    rdx,0x1
  402408:	add    rcx,0x1
  40240c:	add    rax,0x1
  402410:	test   rdx,rdx
  402413:	mov    QWORD PTR [rsp+0x78],rdx
  402418:	mov    BYTE PTR [rcx-0x1],r8b
  40241c:	jne    0x4023fa
  40241e:	jmp    0x402187
  402423:	mov    r9d,DWORD PTR [rip+0xacae]        # 0x40d0d8
  40242a:	test   r9d,r9d
  40242d:	jne    0x402395
  402433:	mov    rcx,QWORD PTR [rsp+0x3100]
  40243b:	call   0x401f70
  402440:	jmp    0x402395
  402445:	mov    r10d,DWORD PTR [rip+0xac8c]        # 0x40d0d8
  40244c:	test   r10d,r10d
  40244f:	jne    0x402395
  402455:	mov    rax,QWORD PTR [rsp+0x48]
  40245a:	call   rax
  40245c:	mov    rdx,QWORD PTR [rsp+0x3100]
  402464:	mov    ecx,DWORD PTR [rax]
  402466:	call   0x402050
  40246b:	jmp    0x402395
  402470:	cmp    rax,0xffffffffffffffff
  402474:	mov    DWORD PTR [rsp+0x38],0x0
  40247c:	je     0x4026df
  402482:	test   rsi,rsi
  402485:	jne    0x40257d
  40248b:	lea    rax,[rsp+0x88]
  402493:	mov    rsi,QWORD PTR [rip+0xbfbe]        # 0x40e458
  40249a:	lea    r14,[rsp+0x90]
  4024a2:	lea    r13,[rsp+0x98]
  4024aa:	mov    QWORD PTR [rsp+0x40],rax
  4024af:	xor    r8d,r8d
  4024b2:	xor    edx,edx
  4024b4:	mov    QWORD PTR [rsp+0x20],r13
  4024b9:	mov    r9,r14
  4024bc:	mov    rcx,r15
  4024bf:	mov    QWORD PTR [rsp+0x90],rbx
  4024c7:	mov    QWORD PTR [rsp+0x98],r12
  4024cf:	call   0x404130
  4024d4:	cmp    QWORD PTR [rsp+0x90],rbx
  4024dc:	mov    rdi,rax
  4024df:	je     0x402527
  4024e1:	call   QWORD PTR [rip+0xbf71]        # 0x40e458
  4024e7:	mov    ebp,DWORD PTR [rax]
  4024e9:	call   QWORD PTR [rip+0xbf31]        # 0x40e420
  4024ef:	mov    r8,QWORD PTR [rsp+0x90]
  4024f7:	lea    r9,[rax+0x30]
  4024fb:	mov    edx,0x1
  402500:	mov    rcx,rbx
  402503:	sub    r8,rbx
  402506:	call   0x403690
  40250b:	mov    rdx,QWORD PTR [rsp+0x90]
  402513:	sub    rdx,rbx
  402516:	cmp    rax,rdx
  402519:	jb     0x402395
  40251f:	call   QWORD PTR [rip+0xbf33]        # 0x40e458
  402525:	mov    DWORD PTR [rax],ebp
  402527:	cmp    rdi,0xffffffffffffffff
  40252b:	jne    0x402346
  402531:	call   rsi
  402533:	cmp    DWORD PTR [rax],0x2a
  402536:	jne    0x4026f0
  40253c:	cmp    DWORD PTR [rip+0xab99],0x1        # 0x40d0dc
  402543:	jne    0x402423
  402549:	mov    r8,QWORD PTR [rsp+0x40]
  40254e:	mov    edx,0x4
  402553:	mov    rcx,r15
  402556:	mov    DWORD PTR [rsp+0x88],0x1
  402561:	call   0x404118
  402566:	mov    DWORD PTR [rip+0xab6c],0x2        # 0x40d0dc
  402570:	mov    DWORD PTR [rsp+0x54],0x1
  402578:	jmp    0x4024af
  40257d:	mov    rdx,QWORD PTR [rip+0xab3c]        # 0x40d0c0
  402584:	test   rdx,rdx
  402587:	je     0x402738
  40258d:	mov    rax,QWORD PTR [rsp+0x60]
  402592:	lea    r14,[rsp+0x90]
  40259a:	lea    r12,[rsp+0x88]
  4025a2:	lea    rbp,[rsp+0x80]
  4025aa:	lea    r13,[rsp+0x98]
  4025b2:	sub    rax,rsi
  4025b5:	lea    rdi,[rax+0x1001]
  4025bc:	add    rax,0x1000
  4025c2:	add    rsi,rax
  4025c5:	jmp    0x402630
  4025c7:	mov    rcx,QWORD PTR [rip+0xaa6a]        # 0x40d038
  4025ce:	xor    r8d,r8d
  4025d1:	xor    edx,edx
  4025d3:	mov    QWORD PTR [rsp+0x20],r13
  4025d8:	mov    r9,r14
  4025db:	call   0x404130
  4025e0:	cmp    rax,0xffffffffffffffff
  4025e4:	je     0x4026c0
  4025ea:	call   QWORD PTR [rip+0xbe30]        # 0x40e420
  4025f0:	mov    rcx,QWORD PTR [rip+0xaab1]        # 0x40d0a8
  4025f7:	lea    r9,[rax+0x30]
  4025fb:	mov    edx,0x1
  402600:	lea    r8,[rcx*4+0x0]
  402608:	sub    r8,QWORD PTR [rsp+0x98]
  402610:	mov    rcx,QWORD PTR [rip+0xaa19]        # 0x40d030
  402617:	call   0x403690
  40261c:	cmp    rdi,rsi
  40261f:	je     0x402738
  402625:	mov    rdx,QWORD PTR [rip+0xaa94]        # 0x40d0c0
  40262c:	add    rdi,0x1
  402630:	movzx  r8d,BYTE PTR [rdi-0x1]
  402635:	mov    rcx,QWORD PTR [rip+0xaa54]        # 0x40d090
  40263c:	call   0x4056e0
  402641:	mov    rcx,QWORD PTR [rip+0xaa48]        # 0x40d090
  402648:	mov    QWORD PTR [rsp+0x80],rcx
  402650:	call   0x4056c8
  402655:	mov    QWORD PTR [rsp+0x88],rax
  40265d:	mov    rax,QWORD PTR [rip+0xa9cc]        # 0x40d030
  402664:	xor    r9d,r9d
  402667:	mov    rcx,QWORD PTR [rip+0xa9ca]        # 0x40d038
  40266e:	xor    r8d,r8d
  402671:	xor    edx,edx
  402673:	mov    QWORD PTR [rsp+0x20],0x0
  40267c:	mov    QWORD PTR [rsp+0x90],rax
  402684:	mov    rax,QWORD PTR [rip+0xaa1d]        # 0x40d0a8
  40268b:	shl    rax,0x2
  40268f:	mov    QWORD PTR [rsp+0x98],rax
  402697:	call   0x404130
  40269c:	mov    rcx,QWORD PTR [rip+0xa995]        # 0x40d038
  4026a3:	mov    QWORD PTR [rsp+0x20],r13
  4026a8:	mov    r9,r14
  4026ab:	mov    r8,r12
  4026ae:	mov    rdx,rbp
  4026b1:	call   0x404130
  4026b6:	cmp    rax,0xffffffffffffffff
  4026ba:	jne    0x4025c7
  4026c0:	mov    r9,QWORD PTR [rip+0xa9c9]        # 0x40d090
  4026c7:	lea    r8,[rip+0x61c2]        # 0x408890
  4026ce:	xor    edx,edx
  4026d0:	mov    ecx,0x1
  4026d5:	call   0x403140
  4026da:	jmp    0x4025ea
  4026df:	call   QWORD PTR [rip+0xbd73]        # 0x40e458
  4026e5:	mov    eax,DWORD PTR [rax]
  4026e7:	mov    DWORD PTR [rsp+0x38],eax
  4026eb:	jmp    0x402482
  4026f0:	call   rsi
  4026f2:	cmp    DWORD PTR [rax],0x16
  4026f5:	je     0x402762
  4026f7:	call   rsi
  4026f9:	cmp    DWORD PTR [rax],0x7
  4026fc:	jne    0x402784
  402702:	cmp    QWORD PTR [rsp+0x90],rbx
  40270a:	jne    0x4024af
  402710:	cmp    rbx,QWORD PTR [rsp+0x68]
  402715:	je     0x40271f
  402717:	mov    rcx,rbx
  40271a:	call   0x405730
  40271f:	add    r12,r12
  402722:	je     0x4027a8
  402728:	mov    rcx,r12
  40272b:	call   0x402f70
  402730:	mov    rbx,rax
  402733:	jmp    0x4024af
  402738:	mov    r11d,DWORD PTR [rip+0xa999]        # 0x40d0d8
  40273f:	test   r11d,r11d
  402742:	jne    0x402395
  402748:	mov    rcx,QWORD PTR [rsp+0x3100]
  402750:	call   0x401fe0
  402755:	mov    DWORD PTR [rsp+0x54],0x1
  40275d:	jmp    0x40239d
  402762:	mov    r8d,DWORD PTR [rip+0xa96f]        # 0x40d0d8
  402769:	test   r8d,r8d
  40276c:	jne    0x402395
  402772:	mov    rcx,QWORD PTR [rsp+0x3100]
  40277a:	call   0x401fe0
  40277f:	jmp    0x402395
  402784:	mov    ecx,DWORD PTR [rip+0xa94e]        # 0x40d0d8
  40278a:	test   ecx,ecx
  40278c:	jne    0x402395
  402792:	call   rsi
  402794:	mov    rdx,QWORD PTR [rsp+0x3100]
  40279c:	mov    ecx,DWORD PTR [rax]
  40279e:	call   0x402050
  4027a3:	jmp    0x402395
  4027a8:	call   0x402f10
  4027ad:	nop
  4027ae:	xchg   ax,ax
  4027b0:	push   rbx
  4027b1:	sub    rsp,0x20
  4027b5:	cmp    ecx,0xa
  4027b8:	je     0x402800
  4027ba:	mov    rdx,QWORD PTR [rip+0xa907]        # 0x40d0c8
  4027c1:	mov    ebx,ecx
  4027c3:	call   0x402a90
  4027c8:	test   eax,eax
  4027ca:	js     0x4027e0
  4027cc:	add    DWORD PTR [rip+0xa8fe],eax        # 0x40d0d0
  4027d2:	add    rsp,0x20
  4027d6:	pop    rbx
  4027d7:	ret    
  4027d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e0:	cmp    ebx,0x9
  4027e3:	jne    0x4027d2
  4027e5:	mov    eax,DWORD PTR [rip+0xa8e5]        # 0x40d0d0
  4027eb:	and    eax,0xfffffff8
  4027ee:	add    eax,0x8
  4027f1:	mov    DWORD PTR [rip+0xa8d9],eax        # 0x40d0d0
  4027f7:	jmp    0x4027d2
  4027f9:	nop    DWORD PTR [rax+0x0]
  402800:	add    DWORD PTR [rip+0xa8cd],0x1        # 0x40d0d4
  402807:	mov    DWORD PTR [rip+0xa8bf],0x0        # 0x40d0d0
  402811:	add    rsp,0x20
  402815:	pop    rbx
  402816:	ret    
  402817:	nop    WORD PTR [rax+rax*1+0x0]
  402820:	push   rsi
  402821:	push   rbx
  402822:	movzx  r10d,BYTE PTR [rcx+0x1]
  402827:	xor    eax,eax
  402829:	mov    r11d,DWORD PTR [rsp+0x38]
  40282e:	mov    ebx,DWORD PTR [rsp+0x40]
  402832:	mov    esi,DWORD PTR [rsp+0x48]
  402836:	cmp    r10b,r8b
  402839:	je     0x40283e
  40283b:	pop    rbx
  40283c:	pop    rsi
  40283d:	ret    
  40283e:	test   r10b,r10b
  402841:	je     0x402880
  402843:	cmp    r9b,BYTE PTR [rcx+0x2]
  402847:	jne    0x40283b
  402849:	test   r9b,r9b
  40284c:	je     0x402880
  40284e:	cmp    r11b,BYTE PTR [rcx+0x3]
  402852:	jne    0x40283b
  402854:	test   r11b,r11b
  402857:	je     0x402880
  402859:	movsx  r9d,sil
  40285d:	movsx  r8d,bl
  402861:	mov    DWORD PTR [rsp+0x48],0x0
  402869:	mov    DWORD PTR [rsp+0x40],0x0
  402871:	mov    DWORD PTR [rsp+0x38],0x0
  402879:	pop    rbx
  40287a:	pop    rsi
  40287b:	jmp    0x401530
  402880:	mov    eax,0x1
  402885:	jmp    0x40283b
  402887:	nop
  402888:	nop
  402889:	nop
  40288a:	nop
  40288b:	nop
  40288c:	nop
  40288d:	nop
  40288e:	nop
  40288f:	nop
  402890:	push   rdi
  402891:	push   rsi
  402892:	push   rbx
  402893:	sub    rsp,0x20
  402897:	test   rcx,rcx
  40289a:	mov    rbx,rcx
  40289d:	je     0x402907
  40289f:	mov    edx,0x2f
  4028a4:	call   0x4056b8
  4028a9:	test   rax,rax
  4028ac:	je     0x4028f8
  4028ae:	lea    rdx,[rax+0x1]
  4028b2:	mov    rcx,rdx
  4028b5:	sub    rcx,rbx
  4028b8:	cmp    rcx,0x6
  4028bc:	jle    0x4028f8
  4028be:	lea    rsi,[rax-0x6]
  4028c2:	lea    rdi,[rip+0x635f]        # 0x408c28
  4028c9:	mov    ecx,0x7
  4028ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028d0:	jne    0x4028f8
  4028d2:	lea    rdi,[rip+0x6357]        # 0x408c30
  4028d9:	mov    ecx,0x3
  4028de:	mov    rsi,rdx
  4028e1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028e3:	seta   r8b
  4028e7:	setb   cl
  4028ea:	add    rax,0x4
  4028ee:	cmp    r8b,cl
  4028f1:	cmovne rax,rdx
  4028f5:	mov    rbx,rax
  4028f8:	mov    QWORD PTR [rip+0xa7e1],rbx        # 0x40d0e0
  4028ff:	add    rsp,0x20
  402903:	pop    rbx
  402904:	pop    rsi
  402905:	pop    rdi
  402906:	ret    
  402907:	call   QWORD PTR [rip+0xbb13]        # 0x40e420
  40290d:	lea    rcx,[rip+0x62dc]        # 0x408bf0
  402914:	lea    rdx,[rax+0x60]
  402918:	call   0x403530
  40291d:	call   0x405780
  402922:	nop
  402923:	nop
  402924:	nop
  402925:	nop
  402926:	nop
  402927:	nop
  402928:	nop
  402929:	nop
  40292a:	nop
  40292b:	nop
  40292c:	nop
  40292d:	nop
  40292e:	nop
  40292f:	nop
  402930:	push   r13
  402932:	push   r12
  402934:	push   rbp
  402935:	push   rdi
  402936:	push   rsi
  402937:	push   rbx
  402938:	sub    rsp,0x28
  40293c:	mov    rbp,QWORD PTR [rip+0xbb15]        # 0x40e458
  402943:	mov    r13d,ecx
  402946:	mov    r12,rdx
  402949:	mov    rsi,r8
  40294c:	nop    DWORD PTR [rax+0x0]
  402950:	mov    edi,esi
  402952:	mov    r8d,edi
  402955:	mov    rdx,r12
  402958:	mov    ecx,r13d
  40295b:	call   0x4056a8
  402960:	test   eax,eax
  402962:	mov    ebx,eax
  402964:	jns    0x402988
  402966:	call   rbp
  402968:	cmp    DWORD PTR [rax],0x4
  40296b:	je     0x402952
  40296d:	call   rbp
  40296f:	cmp    DWORD PTR [rax],0x16
  402972:	sete   dl
  402975:	cmp    rsi,0x7fffe000
  40297c:	mov    esi,0x7fffe000
  402981:	seta   al
  402984:	test   dl,al
  402986:	jne    0x402950
  402988:	movsxd rax,ebx
  40298b:	add    rsp,0x28
  40298f:	pop    rbx
  402990:	pop    rsi
  402991:	pop    rdi
  402992:	pop    rbp
  402993:	pop    r12
  402995:	pop    r13
  402997:	ret    
  402998:	nop
  402999:	nop
  40299a:	nop
  40299b:	nop
  40299c:	nop
  40299d:	nop
  40299e:	nop
  40299f:	nop
  4029a0:	sub    rsp,0x28
  4029a4:	movzx  r10d,BYTE PTR [rcx+0x6]
  4029a9:	xor    eax,eax
  4029ab:	mov    r11d,DWORD PTR [rsp+0x50]
  4029b0:	cmp    r10b,r8b
  4029b3:	je     0x4029c0
  4029b5:	add    rsp,0x28
  4029b9:	ret    
  4029ba:	nop    WORD PTR [rax+rax*1+0x0]
  4029c0:	test   r10b,r10b
  4029c3:	mov    al,0x1
  4029c5:	je     0x4029b5
  4029c7:	xor    al,al
  4029c9:	cmp    r9b,BYTE PTR [rcx+0x7]
  4029cd:	jne    0x4029b5
  4029cf:	test   r9b,r9b
  4029d2:	mov    al,0x1
  4029d4:	je     0x4029b5
  4029d6:	xor    al,al
  4029d8:	cmp    r11b,BYTE PTR [rcx+0x8]
  4029dc:	jne    0x4029b5
  4029de:	test   r11b,r11b
  4029e1:	mov    al,0x1
  4029e3:	je     0x4029b5
  4029e5:	add    rdx,0x9
  4029e9:	add    rcx,0x9
  4029ed:	call   0x4056d8
  4029f2:	test   eax,eax
  4029f4:	sete   al
  4029f7:	movzx  eax,al
  4029fa:	jmp    0x4029b5
  4029fc:	nop    DWORD PTR [rax+0x0]
  402a00:	push   rsi
  402a01:	push   rbx
  402a02:	sub    rsp,0x28
  402a06:	movzx  r10d,BYTE PTR [rcx+0x4]
  402a0b:	xor    eax,eax
  402a0d:	mov    r11d,DWORD PTR [rsp+0x60]
  402a12:	mov    ebx,DWORD PTR [rsp+0x68]
  402a16:	mov    esi,DWORD PTR [rsp+0x70]
  402a1a:	cmp    r10b,r8b
  402a1d:	je     0x402a30
  402a1f:	add    rsp,0x28
  402a23:	pop    rbx
  402a24:	pop    rsi
  402a25:	ret    
  402a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a30:	test   r10b,r10b
  402a33:	mov    al,0x1
  402a35:	je     0x402a1f
  402a37:	xor    al,al
  402a39:	cmp    r9b,BYTE PTR [rcx+0x5]
  402a3d:	jne    0x402a1f
  402a3f:	test   r9b,r9b
  402a42:	mov    al,0x1
  402a44:	je     0x402a1f
  402a46:	xor    al,al
  402a48:	cmp    r11b,BYTE PTR [rcx+0x6]
  402a4c:	jne    0x402a1f
  402a4e:	test   r11b,r11b
  402a51:	mov    al,0x1
  402a53:	je     0x402a1f
  402a55:	xor    al,al
  402a57:	cmp    bl,BYTE PTR [rcx+0x7]
  402a5a:	jne    0x402a1f
  402a5c:	test   bl,bl
  402a5e:	mov    al,0x1
  402a60:	je     0x402a1f
  402a62:	xor    al,al
  402a64:	cmp    sil,BYTE PTR [rcx+0x8]
  402a68:	jne    0x402a1f
  402a6a:	test   sil,sil
  402a6d:	mov    al,0x1
  402a6f:	je     0x402a1f
  402a71:	add    rdx,0x9
  402a75:	add    rcx,0x9
  402a79:	call   0x4056d8
  402a7e:	test   eax,eax
  402a80:	sete   al
  402a83:	movzx  eax,al
  402a86:	jmp    0x402a1f
  402a88:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	push   rbx
  402a91:	sub    rsp,0x40
  402a95:	mov    eax,ecx
  402a97:	shr    eax,0x9
  402a9a:	cmp    eax,0xef
  402a9f:	ja     0x402b60
  402aa5:	lea    r8,[rip+0x61d4]        # 0x408c80
  402aac:	movsx  eax,BYTE PTR [r8+rax*1]
  402ab1:	test   eax,eax
  402ab3:	js     0x402ae1
  402ab5:	mov    r8d,ecx
  402ab8:	shl    eax,0x6
  402abb:	shr    r8d,0x3
  402abf:	and    r8d,0x3f
  402ac3:	add    eax,r8d
  402ac6:	lea    r8,[rip+0x62b3]        # 0x408d80
  402acd:	movzx  r8d,BYTE PTR [r8+rax*1]
  402ad2:	mov    eax,ecx
  402ad4:	and    eax,0x7
  402ad7:	bt     r8d,eax
  402adb:	jb     0x402b85
  402ae1:	cmp    ecx,0x10ff
  402ae7:	ja     0x402b67
  402ae9:	lea    eax,[rcx-0xa1]
  402aef:	cmp    eax,0xfebf
  402af4:	ja     0x402c70
  402afa:	cmp    ecx,0x20a9
  402b00:	je     0x402c70
  402b06:	mov    rbx,rdx
  402b09:	movzx  edx,BYTE PTR [rdx]
  402b0c:	cmp    dl,0x45
  402b0f:	je     0x402cb0
  402b15:	cmp    dl,0x47
  402b18:	je     0x402d90
  402b1e:	cmp    dl,0x42
  402b21:	je     0x402d40
  402b27:	cmp    dl,0x43
  402b2a:	mov    eax,0x1
  402b2f:	je     0x402e20
  402b35:	cmp    dl,0x4a
  402b38:	jne    0x402b7f
  402b3a:	cmp    BYTE PTR [rbx+0x1],0x4f
  402b3e:	jne    0x402b7f
  402b40:	cmp    BYTE PTR [rbx+0x2],0x48
  402b44:	jne    0x402b7f
  402b46:	cmp    BYTE PTR [rbx+0x3],0x41
  402b4a:	jne    0x402b7f
  402b4c:	cmp    BYTE PTR [rbx+0x4],0x42
  402b50:	jne    0x402b7f
  402b52:	cmp    BYTE PTR [rbx+0x5],0x1
  402b56:	sbb    eax,eax
  402b58:	not    eax
  402b5a:	add    eax,0x2
  402b5d:	jmp    0x402b7f
  402b5f:	nop
  402b60:	cmp    eax,0x700
  402b65:	je     0x402ba0
  402b67:	lea    eax,[rcx-0x2329]
  402b6d:	cmp    eax,0x1
  402b70:	jbe    0x402b7a
  402b72:	cmp    ecx,0x115f
  402b78:	ja     0x402bc0
  402b7a:	mov    eax,0x2
  402b7f:	add    rsp,0x40
  402b83:	pop    rbx
  402b84:	ret    
  402b85:	sub    ecx,0x1
  402b88:	xor    eax,eax
  402b8a:	cmp    ecx,0x9e
  402b90:	setbe  al
  402b93:	neg    eax
  402b95:	add    rsp,0x40
  402b99:	pop    rbx
  402b9a:	ret    
  402b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	cmp    ecx,0xe00ff
  402ba6:	jbe    0x402c80
  402bac:	xor    ax,ax
  402baf:	cmp    ecx,0xe01ef
  402bb5:	ja     0x402b67
  402bb7:	jmp    0x402b7f
  402bb9:	nop    DWORD PTR [rax+0x0]
  402bc0:	lea    eax,[rcx-0x2e80]
  402bc6:	cmp    eax,0x764f
  402bcb:	ja     0x402be7
  402bcd:	cmp    ecx,0x303f
  402bd3:	je     0x402be7
  402bd5:	lea    r8d,[rcx-0x4dc0]
  402bdc:	mov    eax,0x2
  402be1:	cmp    r8d,0x3f
  402be5:	ja     0x402b7f
  402be7:	lea    r8d,[rcx-0xac00]
  402bee:	mov    eax,0x2
  402bf3:	cmp    r8d,0x2ba3
  402bfa:	jbe    0x402b7f
  402bfc:	lea    r8d,[rcx-0xf900]
  402c03:	cmp    r8d,0x1ff
  402c0a:	jbe    0x402b7f
  402c10:	lea    r8d,[rcx-0xfe10]
  402c17:	cmp    r8d,0xf
  402c1b:	jbe    0x402b7f
  402c21:	lea    r8d,[rcx-0xfe30]
  402c28:	cmp    r8d,0x3f
  402c2c:	jbe    0x402b7f
  402c32:	lea    r8d,[rcx-0xff00]
  402c39:	cmp    r8d,0x60
  402c3d:	jbe    0x402b7f
  402c43:	lea    r8d,[rcx-0xffe0]
  402c4a:	cmp    r8d,0x6
  402c4e:	jbe    0x402b7f
  402c54:	lea    r8d,[rcx-0x20000]
  402c5b:	cmp    r8d,0x1ffff
  402c62:	jbe    0x402b7f
  402c68:	jmp    0x402ae9
  402c6d:	nop    DWORD PTR [rax]
  402c70:	mov    eax,0x1
  402c75:	add    rsp,0x40
  402c79:	pop    rbx
  402c7a:	ret    
  402c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c80:	cmp    ecx,0xe001f
  402c86:	ja     0x402d30
  402c8c:	cmp    ecx,0xe0001
  402c92:	sete   r8b
  402c96:	xor    eax,eax
  402c98:	test   r8b,r8b
  402c9b:	je     0x402b67
  402ca1:	jmp    0x402b7f
  402ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	cmp    BYTE PTR [rbx+0x1],0x55
  402cb4:	mov    eax,0x1
  402cb9:	jne    0x402b7f
  402cbf:	cmp    BYTE PTR [rbx+0x2],0x43
  402cc3:	je     0x402dc8
  402cc9:	cmp    BYTE PTR [rbx+0x2],0x43
  402ccd:	je     0x402ec1
  402cd3:	cmp    BYTE PTR [rbx+0x2],0x43
  402cd7:	mov    eax,0x1
  402cdc:	jne    0x402b7f
  402ce2:	cmp    BYTE PTR [rbx+0x3],0x2d
  402ce6:	jne    0x402b7f
  402cec:	lea    rdx,[rip+0x5f67]        # 0x408c5a
  402cf3:	mov    DWORD PTR [rsp+0x30],0x0
  402cfb:	mov    DWORD PTR [rsp+0x28],0x0
  402d03:	mov    DWORD PTR [rsp+0x20],0x0
  402d0b:	mov    r9d,0x52
  402d11:	mov    r8d,0x4b
  402d17:	mov    rcx,rbx
  402d1a:	call   0x402a00
  402d1f:	cmp    eax,0x1
  402d22:	sbb    eax,eax
  402d24:	add    eax,0x2
  402d27:	jmp    0x402b7f
  402d2c:	nop    DWORD PTR [rax+0x0]
  402d30:	cmp    ecx,0xe007f
  402d36:	setbe  r8b
  402d3a:	jmp    0x402c96
  402d3f:	nop
  402d40:	cmp    BYTE PTR [rbx+0x1],0x49
  402d44:	mov    eax,0x1
  402d49:	jne    0x402b7f
  402d4f:	cmp    BYTE PTR [rbx+0x2],0x47
  402d53:	jne    0x402b7f
  402d59:	cmp    BYTE PTR [rbx+0x3],0x35
  402d5d:	jne    0x402b7f
  402d63:	mov    DWORD PTR [rsp+0x30],0x0
  402d6b:	mov    DWORD PTR [rsp+0x28],0x0
  402d73:	xor    r9d,r9d
  402d76:	mov    DWORD PTR [rsp+0x20],0x0
  402d7e:	xor    r8d,r8d
  402d81:	lea    rdx,[rip+0x5ecd]        # 0x408c55
  402d88:	jmp    0x402d17
  402d8a:	nop    WORD PTR [rax+rax*1+0x0]
  402d90:	cmp    BYTE PTR [rbx+0x1],0x42
  402d94:	mov    eax,0x1
  402d99:	jne    0x402b7f
  402d9f:	cmp    BYTE PTR [rbx+0x2],0x32
  402da3:	je     0x402e70
  402da9:	cmp    BYTE PTR [rbx+0x2],0x4b
  402dad:	mov    eax,0x1
  402db2:	jne    0x402b7f
  402db8:	cmp    BYTE PTR [rbx+0x3],0x1
  402dbc:	sbb    eax,eax
  402dbe:	not    eax
  402dc0:	add    eax,0x2
  402dc3:	jmp    0x402b7f
  402dc8:	cmp    BYTE PTR [rbx+0x3],0x2d
  402dcc:	jne    0x402cc9
  402dd2:	lea    rdx,[rip+0x5e67]        # 0x408c40
  402dd9:	mov    DWORD PTR [rsp+0x30],0x0
  402de1:	mov    DWORD PTR [rsp+0x28],0x0
  402de9:	mov    DWORD PTR [rsp+0x20],0x0
  402df1:	mov    r9d,0x50
  402df7:	mov    r8d,0x4a
  402dfd:	mov    rcx,rbx
  402e00:	call   0x402a00
  402e05:	mov    edx,eax
  402e07:	mov    eax,0x2
  402e0c:	test   edx,edx
  402e0e:	jne    0x402b7f
  402e14:	jmp    0x402cc9
  402e19:	nop    DWORD PTR [rax+0x0]
  402e20:	cmp    BYTE PTR [rbx+0x1],0x50
  402e24:	jne    0x402b7f
  402e2a:	cmp    BYTE PTR [rbx+0x2],0x39
  402e2e:	jne    0x402b7f
  402e34:	cmp    BYTE PTR [rbx+0x3],0x34
  402e38:	jne    0x402b7f
  402e3e:	mov    DWORD PTR [rsp+0x30],0x0
  402e46:	mov    DWORD PTR [rsp+0x28],0x0
  402e4e:	xor    r9d,r9d
  402e51:	mov    DWORD PTR [rsp+0x20],0x0
  402e59:	mov    r8d,0x39
  402e5f:	lea    rdx,[rip+0x5dfb]        # 0x408c61
  402e66:	jmp    0x402d17
  402e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	cmp    BYTE PTR [rbx+0x3],0x33
  402e74:	jne    0x402da9
  402e7a:	lea    rdx,[rip+0x5dc6]        # 0x408c47
  402e81:	mov    DWORD PTR [rsp+0x30],0x0
  402e89:	mov    DWORD PTR [rsp+0x28],0x0
  402e91:	mov    DWORD PTR [rsp+0x20],0x0
  402e99:	mov    r9d,0x32
  402e9f:	mov    r8d,0x31
  402ea5:	mov    rcx,rbx
  402ea8:	call   0x402a00
  402ead:	mov    edx,eax
  402eaf:	mov    eax,0x2
  402eb4:	test   edx,edx
  402eb6:	jne    0x402b7f
  402ebc:	jmp    0x402da9
  402ec1:	cmp    BYTE PTR [rbx+0x3],0x2d
  402ec5:	jne    0x402cd3
  402ecb:	cmp    BYTE PTR [rbx+0x4],0x54
  402ecf:	jne    0x402cd3
  402ed5:	cmp    BYTE PTR [rbx+0x5],0x57
  402ed9:	jne    0x402cd3
  402edf:	lea    rdx,[rip+0x5d68]        # 0x408c4e
  402ee6:	xor    r9d,r9d
  402ee9:	xor    r8d,r8d
  402eec:	mov    DWORD PTR [rsp+0x20],0x0
  402ef4:	mov    rcx,rbx
  402ef7:	call   0x4029a0
  402efc:	mov    edx,eax
  402efe:	mov    eax,0x2
  402f03:	test   edx,edx
  402f05:	jne    0x402b7f
  402f0b:	jmp    0x402cd3
  402f10:	sub    rsp,0x28
  402f14:	mov    ecx,DWORD PTR [rip+0x40f6]        # 0x407010
  402f1a:	lea    r8,[rip+0x651f]        # 0x409440
  402f21:	xor    edx,edx
  402f23:	call   0x403140
  402f28:	mov    ecx,0x1
  402f2d:	call   0x405770
  402f32:	nop
  402f33:	nop    DWORD PTR [rax]
  402f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f40:	sub    rsp,0x28
  402f44:	test   rcx,rcx
  402f47:	jne    0x402f60
  402f49:	mov    ecx,0x1
  402f4e:	call   0x405720
  402f53:	test   rax,rax
  402f56:	je     0x402f60
  402f58:	add    rsp,0x28
  402f5c:	ret    
  402f5d:	nop    DWORD PTR [rax]
  402f60:	call   0x402f10
  402f65:	nop
  402f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f70:	push   rbx
  402f71:	sub    rsp,0x20
  402f75:	mov    rbx,rcx
  402f78:	call   0x405720
  402f7d:	test   rax,rax
  402f80:	je     0x402f90
  402f82:	add    rsp,0x20
  402f86:	pop    rbx
  402f87:	ret    
  402f88:	nop    DWORD PTR [rax+rax*1+0x0]
  402f90:	mov    rcx,rbx
  402f93:	add    rsp,0x20
  402f97:	pop    rbx
  402f98:	jmp    0x402f40
  402f9a:	nop    WORD PTR [rax+rax*1+0x0]
  402fa0:	push   rbx
  402fa1:	sub    rsp,0x20
  402fa5:	mov    rax,0xffffffffffffffff
  402fac:	mov    rbx,rdx
  402faf:	xor    edx,edx
  402fb1:	div    rbx
  402fb4:	cmp    rax,rcx
  402fb7:	jb     0x402fdd
  402fb9:	imul   rbx,rcx
  402fbd:	mov    rcx,rbx
  402fc0:	call   0x405720
  402fc5:	test   rax,rax
  402fc8:	je     0x402fd0
  402fca:	add    rsp,0x20
  402fce:	pop    rbx
  402fcf:	ret    
  402fd0:	mov    rcx,rbx
  402fd3:	add    rsp,0x20
  402fd7:	pop    rbx
  402fd8:	jmp    0x402f40
  402fdd:	call   0x402f10
  402fe2:	nop
  402fe3:	nop    DWORD PTR [rax]
  402fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ff0:	push   rsi
  402ff1:	push   rbx
  402ff2:	sub    rsp,0x28
  402ff6:	mov    rsi,rcx
  402ff9:	call   0x402f70
  402ffe:	mov    r8,rsi
  403001:	mov    rbx,rax
  403004:	xor    edx,edx
  403006:	mov    rcx,rax
  403009:	call   0x405710
  40300e:	mov    rax,rbx
  403011:	add    rsp,0x28
  403015:	pop    rbx
  403016:	pop    rsi
  403017:	ret    
  403018:	nop    DWORD PTR [rax+rax*1+0x0]
  403020:	push   rbx
  403021:	sub    rsp,0x20
  403025:	mov    rbx,rcx
  403028:	call   0x405778
  40302d:	test   rax,rax
  403030:	je     0x403040
  403032:	add    rsp,0x20
  403036:	pop    rbx
  403037:	ret    
  403038:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	mov    rcx,rbx
  403043:	add    rsp,0x20
  403047:	pop    rbx
  403048:	jmp    0x402f40
  40304d:	nop    DWORD PTR [rax]
  403050:	push   rbx
  403051:	sub    rsp,0x20
  403055:	test   rcx,rcx
  403058:	je     0x403070
  40305a:	mov    rbx,rdx
  40305d:	call   0x4056f8
  403062:	test   rax,rax
  403065:	je     0x403080
  403067:	add    rsp,0x20
  40306b:	pop    rbx
  40306c:	ret    
  40306d:	nop    DWORD PTR [rax]
  403070:	mov    rcx,rdx
  403073:	add    rsp,0x20
  403077:	pop    rbx
  403078:	jmp    0x402f70
  40307d:	nop    DWORD PTR [rax]
  403080:	mov    rcx,rbx
  403083:	add    rsp,0x20
  403087:	pop    rbx
  403088:	jmp    0x402f40
  40308d:	nop
  40308e:	nop
  40308f:	nop
  403090:	push   r12
  403092:	push   rbp
  403093:	push   rdi
  403094:	push   rsi
  403095:	push   rbx
  403096:	sub    rsp,0x20
  40309a:	mov    rbx,QWORD PTR [rip+0xb37f]        # 0x40e420
  4030a1:	mov    edi,edx
  4030a3:	mov    rbp,r8
  4030a6:	mov    r12,r9
  4030a9:	mov    esi,ecx
  4030ab:	mov    QWORD PTR [rsp+0x68],r9
  4030b0:	call   rbx
  4030b2:	lea    rcx,[rax+0x60]
  4030b6:	mov    r8,r12
  4030b9:	mov    rdx,rbp
  4030bc:	call   0x403300
  4030c1:	add    DWORD PTR [rip+0xac48],0x1        # 0x40dd10
  4030c8:	test   edi,edi
  4030ca:	jne    0x403100
  4030cc:	call   rbx
  4030ce:	lea    rdx,[rax+0x60]
  4030d2:	mov    ecx,0xa
  4030d7:	call   0x403460
  4030dc:	call   rbx
  4030de:	lea    rcx,[rax+0x60]
  4030e2:	call   0x405758
  4030e7:	test   esi,esi
  4030e9:	jne    0x40312f
  4030eb:	add    rsp,0x20
  4030ef:	pop    rbx
  4030f0:	pop    rsi
  4030f1:	pop    rdi
  4030f2:	pop    rbp
  4030f3:	pop    r12
  4030f5:	ret    
  4030f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403100:	mov    ecx,edi
  403102:	call   0x403760
  403107:	test   rax,rax
  40310a:	mov    rdi,rax
  40310d:	lea    rax,[rip+0x634c]        # 0x409460
  403114:	cmove  rdi,rax
  403118:	call   rbx
  40311a:	lea    rdx,[rip+0x6354]        # 0x409475
  403121:	lea    rcx,[rax+0x60]
  403125:	mov    r8,rdi
  403128:	call   0x403400
  40312d:	jmp    0x4030cc
  40312f:	mov    ecx,esi
  403131:	call   0x405770
  403136:	nop
  403137:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	push   r12
  403142:	push   rbp
  403143:	push   rdi
  403144:	push   rsi
  403145:	push   rbx
  403146:	sub    rsp,0x30
  40314a:	mov    rbx,QWORD PTR [rip+0xb2cf]        # 0x40e420
  403151:	mov    esi,ecx
  403153:	mov    edi,edx
  403155:	mov    QWORD PTR [rsp+0x78],r9
  40315a:	mov    rbp,r8
  40315d:	call   rbx
  40315f:	lea    rcx,[rax+0x30]
  403163:	call   0x4056a0
  403168:	test   eax,eax
  40316a:	js     0x403185
  40316c:	mov    ecx,eax
  40316e:	call   QWORD PTR [rip+0xb2fc]        # 0x40e470
  403174:	cmp    rax,0xffffffffffffffff
  403178:	je     0x403185
  40317a:	call   rbx
  40317c:	lea    rcx,[rax+0x30]
  403180:	call   0x405758
  403185:	mov    rax,QWORD PTR [rip+0xab8c]        # 0x40dd18
  40318c:	test   rax,rax
  40318f:	je     0x4031b5
  403191:	call   rax
  403193:	lea    r9,[rsp+0x78]
  403198:	mov    r8,rbp
  40319b:	mov    edx,edi
  40319d:	mov    ecx,esi
  40319f:	mov    QWORD PTR [rsp+0x28],r9
  4031a4:	call   0x403090
  4031a9:	nop
  4031aa:	add    rsp,0x30
  4031ae:	pop    rbx
  4031af:	pop    rsi
  4031b0:	pop    rdi
  4031b1:	pop    rbp
  4031b2:	pop    r12
  4031b4:	ret    
  4031b5:	mov    rax,QWORD PTR [rip+0x6de4]        # 0x409fa0
  4031bc:	mov    r12,QWORD PTR [rax]
  4031bf:	call   rbx
  4031c1:	lea    rdx,[rip+0x62b2]        # 0x40947a
  4031c8:	lea    rcx,[rax+0x60]
  4031cc:	mov    r8,r12
  4031cf:	call   0x403400
  4031d4:	jmp    0x403193
  4031d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031e0:	push   r13
  4031e2:	push   r12
  4031e4:	push   rbp
  4031e5:	push   rdi
  4031e6:	push   rsi
  4031e7:	push   rbx
  4031e8:	sub    rsp,0x38
  4031ec:	mov    eax,DWORD PTR [rip+0xab2e]        # 0x40dd20
  4031f2:	mov    ebp,ecx
  4031f4:	mov    r12d,edx
  4031f7:	mov    rbx,r8
  4031fa:	mov    edi,r9d
  4031fd:	test   eax,eax
  4031ff:	je     0x40321b
  403201:	cmp    DWORD PTR [rip+0x9ef0],r9d        # 0x40d0f8
  403208:	je     0x4032b1
  40320e:	mov    QWORD PTR [rip+0x9edb],rbx        # 0x40d0f0
  403215:	mov    DWORD PTR [rip+0x9edd],edi        # 0x40d0f8
  40321b:	mov    r13,QWORD PTR [rip+0xb1fe]        # 0x40e420
  403222:	call   r13
  403225:	lea    rcx,[rax+0x30]
  403229:	call   0x4056a0
  40322e:	test   eax,eax
  403230:	js     0x40324c
  403232:	mov    ecx,eax
  403234:	call   QWORD PTR [rip+0xb236]        # 0x40e470
  40323a:	cmp    rax,0xffffffffffffffff
  40323e:	je     0x40324c
  403240:	call   r13
  403243:	lea    rcx,[rax+0x30]
  403247:	call   0x405758
  40324c:	mov    rax,QWORD PTR [rip+0xaac5]        # 0x40dd18
  403253:	test   rax,rax
  403256:	je     0x4032d0
  403258:	call   rax
  40325a:	lea    rax,[rip+0x621e]        # 0x40947f
  403261:	lea    rsi,[rip+0x621f]        # 0x409487
  403268:	test   rbx,rbx
  40326b:	cmovne rsi,rax
  40326f:	call   r13
  403272:	lea    rcx,[rax+0x60]
  403276:	mov    r9d,edi
  403279:	mov    r8,rbx
  40327c:	mov    rdx,rsi
  40327f:	call   0x403400
  403284:	mov    r8,QWORD PTR [rsp+0x90]
  40328c:	lea    r9,[rsp+0x98]
  403294:	mov    edx,r12d
  403297:	mov    ecx,ebp
  403299:	mov    QWORD PTR [rsp+0x28],r9
  40329e:	call   0x403090
  4032a3:	nop
  4032a4:	add    rsp,0x38
  4032a8:	pop    rbx
  4032a9:	pop    rsi
  4032aa:	pop    rdi
  4032ab:	pop    rbp
  4032ac:	pop    r12
  4032ae:	pop    r13
  4032b0:	ret    
  4032b1:	mov    rcx,QWORD PTR [rip+0x9e38]        # 0x40d0f0
  4032b8:	cmp    r8,rcx
  4032bb:	je     0x4032a4
  4032bd:	mov    rdx,r8
  4032c0:	call   0x4056d8
  4032c5:	test   eax,eax
  4032c7:	je     0x4032a4
  4032c9:	jmp    0x40320e
  4032ce:	xchg   ax,ax
  4032d0:	mov    rax,QWORD PTR [rip+0x6cc9]        # 0x409fa0
  4032d7:	mov    rsi,QWORD PTR [rax]
  4032da:	call   r13
  4032dd:	lea    rdx,[rip+0x61a5]        # 0x409489
  4032e4:	lea    rcx,[rax+0x60]
  4032e8:	mov    r8,rsi
  4032eb:	call   0x403400
  4032f0:	jmp    0x40325a
  4032f5:	nop
  4032f6:	nop
  4032f7:	nop
  4032f8:	nop
  4032f9:	nop
  4032fa:	nop
  4032fb:	nop
  4032fc:	nop
  4032fd:	nop
  4032fe:	nop
  4032ff:	nop
  403300:	push   rdi
  403301:	push   rsi
  403302:	push   rbx
  403303:	sub    rsp,0x20
  403307:	mov    rbx,rcx
  40330a:	mov    rsi,rdx
  40330d:	mov    rdi,r8
  403310:	call   0x405760
  403315:	test   eax,eax
  403317:	jne    0x403340
  403319:	xor    ecx,ecx
  40331b:	call   QWORD PTR [rip+0xb097]        # 0x40e3b8
  403321:	mov    rdx,rsi
  403324:	mov    r8,rdi
  403327:	mov    rcx,rbx
  40332a:	call   0x4056b0
  40332f:	cmp    eax,0xffffffff
  403332:	mov    esi,eax
  403334:	je     0x403355
  403336:	mov    eax,esi
  403338:	add    rsp,0x20
  40333c:	pop    rbx
  40333d:	pop    rsi
  40333e:	pop    rdi
  40333f:	ret    
  403340:	mov    r8,rdi
  403343:	mov    rdx,rsi
  403346:	mov    rcx,rbx
  403349:	add    rsp,0x20
  40334d:	pop    rbx
  40334e:	pop    rsi
  40334f:	pop    rdi
  403350:	jmp    0x4056b0
  403355:	call   QWORD PTR [rip+0xb005]        # 0x40e360
  40335b:	cmp    eax,0xe8
  403360:	je     0x403370
  403362:	mov    esi,0xffffffff
  403367:	jmp    0x403336
  403369:	nop    DWORD PTR [rax+0x0]
  403370:	mov    rcx,rbx
  403373:	call   0x405760
  403378:	test   eax,eax
  40337a:	je     0x403362
  40337c:	mov    rcx,rbx
  40337f:	call   0x4056a0
  403384:	test   eax,eax
  403386:	js     0x403362
  403388:	mov    ecx,eax
  40338a:	call   QWORD PTR [rip+0xb0e0]        # 0x40e470
  403390:	mov    rcx,rax
  403393:	call   QWORD PTR [rip+0xafbf]        # 0x40e358
  403399:	cmp    eax,0x3
  40339c:	jne    0x403362
  40339e:	mov    ecx,0xd
  4033a3:	call   0x403ec0
  4033a8:	call   QWORD PTR [rip+0xb0aa]        # 0x40e458
  4033ae:	mov    DWORD PTR [rax],0x20
  4033b4:	jmp    0x403336
  4033b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033c0:	push   rsi
  4033c1:	push   rbx
  4033c2:	sub    rsp,0x38
  4033c6:	lea    rbx,[rsp+0x58]
  4033cb:	mov    rsi,rcx
  4033ce:	mov    QWORD PTR [rsp+0x58],rdx
  4033d3:	mov    QWORD PTR [rsp+0x60],r8
  4033d8:	mov    QWORD PTR [rsp+0x68],r9
  4033dd:	mov    QWORD PTR [rsp+0x28],rbx
  4033e2:	call   QWORD PTR [rip+0xb038]        # 0x40e420
  4033e8:	lea    rcx,[rax+0x30]
  4033ec:	mov    r8,rbx
  4033ef:	mov    rdx,rsi
  4033f2:	call   0x403300
  4033f7:	add    rsp,0x38
  4033fb:	pop    rbx
  4033fc:	pop    rsi
  4033fd:	ret    
  4033fe:	xchg   ax,ax
  403400:	sub    rsp,0x38
  403404:	mov    QWORD PTR [rsp+0x50],r8
  403409:	lea    r8,[rsp+0x50]
  40340e:	mov    QWORD PTR [rsp+0x58],r9
  403413:	mov    QWORD PTR [rsp+0x28],r8
  403418:	call   0x403300
  40341d:	add    rsp,0x38
  403421:	ret    
  403422:	nop    DWORD PTR [rax+0x0]
  403426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403430:	push   rsi
  403431:	push   rbx
  403432:	sub    rsp,0x28
  403436:	mov    rbx,rcx
  403439:	mov    rsi,rdx
  40343c:	call   QWORD PTR [rip+0xafde]        # 0x40e420
  403442:	lea    rcx,[rax+0x30]
  403446:	mov    r8,rsi
  403449:	mov    rdx,rbx
  40344c:	add    rsp,0x28
  403450:	pop    rbx
  403451:	pop    rsi
  403452:	jmp    0x403300
  403457:	nop    WORD PTR [rax+rax*1+0x0]
  403460:	push   rsi
  403461:	push   rbx
  403462:	sub    rsp,0x28
  403466:	mov    esi,ecx
  403468:	mov    rcx,rdx
  40346b:	mov    rbx,rdx
  40346e:	call   0x405760
  403473:	test   eax,eax
  403475:	jne    0x4034a0
  403477:	xor    ecx,ecx
  403479:	call   QWORD PTR [rip+0xaf39]        # 0x40e3b8
  40347f:	mov    ecx,esi
  403481:	mov    rdx,rbx
  403484:	call   0x405740
  403489:	cmp    eax,0xffffffff
  40348c:	mov    esi,eax
  40348e:	je     0x4034b0
  403490:	mov    eax,esi
  403492:	add    rsp,0x28
  403496:	pop    rbx
  403497:	pop    rsi
  403498:	ret    
  403499:	nop    DWORD PTR [rax+0x0]
  4034a0:	mov    rdx,rbx
  4034a3:	mov    ecx,esi
  4034a5:	add    rsp,0x28
  4034a9:	pop    rbx
  4034aa:	pop    rsi
  4034ab:	jmp    0x405740
  4034b0:	call   QWORD PTR [rip+0xaeaa]        # 0x40e360
  4034b6:	cmp    eax,0xe8
  4034bb:	je     0x4034c4
  4034bd:	mov    esi,0xffffffff
  4034c2:	jmp    0x403490
  4034c4:	mov    rcx,rbx
  4034c7:	call   0x405760
  4034cc:	test   eax,eax
  4034ce:	je     0x4034bd
  4034d0:	mov    rcx,rbx
  4034d3:	call   0x4056a0
  4034d8:	test   eax,eax
  4034da:	js     0x4034bd
  4034dc:	mov    ecx,eax
  4034de:	call   QWORD PTR [rip+0xaf8c]        # 0x40e470
  4034e4:	mov    rcx,rax
  4034e7:	call   QWORD PTR [rip+0xae6b]        # 0x40e358
  4034ed:	cmp    eax,0x3
  4034f0:	jne    0x4034bd
  4034f2:	mov    ecx,0xd
  4034f7:	call   0x403ec0
  4034fc:	call   QWORD PTR [rip+0xaf56]        # 0x40e458
  403502:	mov    DWORD PTR [rax],0x20
  403508:	jmp    0x403490
  40350a:	nop    WORD PTR [rax+rax*1+0x0]
  403510:	push   rbx
  403511:	sub    rsp,0x20
  403515:	mov    ebx,ecx
  403517:	call   QWORD PTR [rip+0xaf03]        # 0x40e420
  40351d:	lea    rdx,[rax+0x30]
  403521:	mov    ecx,ebx
  403523:	add    rsp,0x20
  403527:	pop    rbx
  403528:	jmp    0x403460
  40352d:	nop    DWORD PTR [rax]
  403530:	push   rsi
  403531:	push   rbx
  403532:	sub    rsp,0x28
  403536:	mov    rsi,rcx
  403539:	mov    rcx,rdx
  40353c:	mov    rbx,rdx
  40353f:	call   0x405760
  403544:	test   eax,eax
  403546:	jne    0x403570
  403548:	xor    ecx,ecx
  40354a:	call   QWORD PTR [rip+0xae68]        # 0x40e3b8
  403550:	mov    rcx,rsi
  403553:	mov    rdx,rbx
  403556:	call   0x405738
  40355b:	cmp    eax,0xffffffff
  40355e:	mov    esi,eax
  403560:	je     0x403581
  403562:	mov    eax,esi
  403564:	add    rsp,0x28
  403568:	pop    rbx
  403569:	pop    rsi
  40356a:	ret    
  40356b:	nop    DWORD PTR [rax+rax*1+0x0]
  403570:	mov    rdx,rbx
  403573:	mov    rcx,rsi
  403576:	add    rsp,0x28
  40357a:	pop    rbx
  40357b:	pop    rsi
  40357c:	jmp    0x405738
  403581:	call   QWORD PTR [rip+0xadd9]        # 0x40e360
  403587:	cmp    eax,0xe8
  40358c:	je     0x403595
  40358e:	mov    esi,0xffffffff
  403593:	jmp    0x403562
  403595:	mov    rcx,rbx
  403598:	call   0x405760
  40359d:	test   eax,eax
  40359f:	je     0x40358e
  4035a1:	mov    rcx,rbx
  4035a4:	call   0x4056a0
  4035a9:	test   eax,eax
  4035ab:	js     0x40358e
  4035ad:	mov    ecx,eax
  4035af:	call   QWORD PTR [rip+0xaebb]        # 0x40e470
  4035b5:	mov    rcx,rax
  4035b8:	call   QWORD PTR [rip+0xad9a]        # 0x40e358
  4035be:	cmp    eax,0x3
  4035c1:	jne    0x40358e
  4035c3:	mov    ecx,0xd
  4035c8:	call   0x403ec0
  4035cd:	call   QWORD PTR [rip+0xae85]        # 0x40e458
  4035d3:	mov    DWORD PTR [rax],0x20
  4035d9:	jmp    0x403562
  4035db:	nop    DWORD PTR [rax+rax*1+0x0]
  4035e0:	push   rsi
  4035e1:	push   rbx
  4035e2:	sub    rsp,0x28
  4035e6:	mov    rsi,rcx
  4035e9:	call   QWORD PTR [rip+0xae31]        # 0x40e420
  4035ef:	lea    rbx,[rax+0x30]
  4035f3:	mov    rcx,rbx
  4035f6:	call   0x405760
  4035fb:	test   eax,eax
  4035fd:	jne    0x403620
  4035ff:	xor    ecx,ecx
  403601:	call   QWORD PTR [rip+0xadb1]        # 0x40e3b8
  403607:	mov    rcx,rsi
  40360a:	call   0x405708
  40360f:	cmp    eax,0xffffffff
  403612:	mov    esi,eax
  403614:	je     0x403630
  403616:	mov    eax,esi
  403618:	add    rsp,0x28
  40361c:	pop    rbx
  40361d:	pop    rsi
  40361e:	ret    
  40361f:	nop
  403620:	mov    rcx,rsi
  403623:	add    rsp,0x28
  403627:	pop    rbx
  403628:	pop    rsi
  403629:	jmp    0x405708
  40362e:	xchg   ax,ax
  403630:	call   QWORD PTR [rip+0xad2a]        # 0x40e360
  403636:	cmp    eax,0xe8
  40363b:	je     0x403644
  40363d:	mov    esi,0xffffffff
  403642:	jmp    0x403616
  403644:	mov    rcx,rbx
  403647:	call   0x405760
  40364c:	test   eax,eax
  40364e:	je     0x40363d
  403650:	mov    rcx,rbx
  403653:	call   0x4056a0
  403658:	test   eax,eax
  40365a:	js     0x40363d
  40365c:	mov    ecx,eax
  40365e:	call   QWORD PTR [rip+0xae0c]        # 0x40e470
  403664:	mov    rcx,rax
  403667:	call   QWORD PTR [rip+0xaceb]        # 0x40e358
  40366d:	cmp    eax,0x3
  403670:	jne    0x40363d
  403672:	mov    ecx,0xd
  403677:	call   0x403ec0
  40367c:	call   QWORD PTR [rip+0xadd6]        # 0x40e458
  403682:	mov    DWORD PTR [rax],0x20
  403688:	jmp    0x403616
  40368a:	nop    WORD PTR [rax+rax*1+0x0]
  403690:	push   rbp
  403691:	push   rdi
  403692:	push   rsi
  403693:	push   rbx
  403694:	sub    rsp,0x28
  403698:	mov    rdi,rcx
  40369b:	mov    rcx,r9
  40369e:	mov    rbp,rdx
  4036a1:	mov    rsi,r8
  4036a4:	mov    rbx,r9
  4036a7:	call   0x405760
  4036ac:	test   eax,eax
  4036ae:	jne    0x4036e0
  4036b0:	xor    ecx,ecx
  4036b2:	call   QWORD PTR [rip+0xad00]        # 0x40e3b8
  4036b8:	mov    rcx,rdi
  4036bb:	mov    r9,rbx
  4036be:	mov    r8,rsi
  4036c1:	mov    rdx,rbp
  4036c4:	call   0x405728
  4036c9:	cmp    rsi,rax
  4036cc:	mov    rdi,rax
  4036cf:	ja     0x403700
  4036d1:	mov    rax,rdi
  4036d4:	add    rsp,0x28
  4036d8:	pop    rbx
  4036d9:	pop    rsi
  4036da:	pop    rdi
  4036db:	pop    rbp
  4036dc:	ret    
  4036dd:	nop    DWORD PTR [rax]
  4036e0:	mov    r9,rbx
  4036e3:	mov    r8,rsi
  4036e6:	mov    rdx,rbp
  4036e9:	mov    rcx,rdi
  4036ec:	add    rsp,0x28
  4036f0:	pop    rbx
  4036f1:	pop    rsi
  4036f2:	pop    rdi
  4036f3:	pop    rbp
  4036f4:	jmp    0x405728
  4036f9:	nop    DWORD PTR [rax+0x0]
  403700:	call   QWORD PTR [rip+0xac5a]        # 0x40e360
  403706:	cmp    eax,0xe8
  40370b:	jne    0x4036d1
  40370d:	mov    rcx,rbx
  403710:	call   0x405760
  403715:	test   eax,eax
  403717:	je     0x4036d1
  403719:	mov    rcx,rbx
  40371c:	call   0x4056a0
  403721:	test   eax,eax
  403723:	js     0x4036d1
  403725:	mov    ecx,eax
  403727:	call   QWORD PTR [rip+0xad43]        # 0x40e470
  40372d:	mov    rcx,rax
  403730:	call   QWORD PTR [rip+0xac22]        # 0x40e358
  403736:	cmp    eax,0x3
  403739:	jne    0x4036d1
  40373b:	mov    ecx,0xd
  403740:	call   0x403ec0
  403745:	call   QWORD PTR [rip+0xad0d]        # 0x40e458
  40374b:	mov    DWORD PTR [rax],0x20
  403751:	jmp    0x4036d1
  403756:	nop
  403757:	nop
  403758:	nop
  403759:	nop
  40375a:	nop
  40375b:	nop
  40375c:	nop
  40375d:	nop
  40375e:	nop
  40375f:	nop
  403760:	push   rdi
  403761:	push   rsi
  403762:	push   rbx
  403763:	sub    rsp,0x20
  403767:	mov    ebx,ecx
  403769:	call   0x403850
  40376e:	test   rax,rax
  403771:	je     0x403780
  403773:	add    rsp,0x20
  403777:	pop    rbx
  403778:	pop    rsi
  403779:	pop    rdi
  40377a:	ret    
  40377b:	nop    DWORD PTR [rax+rax*1+0x0]
  403780:	mov    ecx,ebx
  403782:	call   0x4056d0
  403787:	test   rax,rax
  40378a:	mov    rsi,rax
  40378d:	je     0x403810
  403793:	cmp    BYTE PTR [rax],0x0
  403796:	je     0x403810
  403798:	mov    rcx,rax
  40379b:	call   0x4056c8
  4037a0:	cmp    rax,0xff
  4037a6:	ja     0x40383e
  4037ac:	add    rax,0x1
  4037b0:	lea    rdi,[rip+0x9949]        # 0x40d100
  4037b7:	cmp    eax,0x8
  4037ba:	jae    0x403800
  4037bc:	xor    edx,edx
  4037be:	test   al,0x4
  4037c0:	jne    0x4037f0
  4037c2:	test   al,0x2
  4037c4:	jne    0x4037e0
  4037c6:	test   al,0x1
  4037c8:	jne    0x4037d3
  4037ca:	lea    rax,[rip+0x992f]        # 0x40d100
  4037d1:	jmp    0x403773
  4037d3:	movzx  eax,BYTE PTR [rsi+rdx*1]
  4037d7:	mov    BYTE PTR [rdi+rdx*1],al
  4037da:	jmp    0x4037ca
  4037dc:	nop    DWORD PTR [rax+0x0]
  4037e0:	movzx  ecx,WORD PTR [rsi+rdx*1]
  4037e4:	mov    WORD PTR [rdi+rdx*1],cx
  4037e8:	add    rdx,0x2
  4037ec:	jmp    0x4037c6
  4037ee:	xchg   ax,ax
  4037f0:	mov    edx,DWORD PTR [rsi]
  4037f2:	mov    DWORD PTR [rdi],edx
  4037f4:	mov    edx,0x4
  4037f9:	jmp    0x4037c2
  4037fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403800:	mov    ecx,eax
  403802:	shr    ecx,0x3
  403805:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  403808:	jmp    0x4037bc
  40380a:	nop    WORD PTR [rax+rax*1+0x0]
  403810:	lea    rdx,[rip+0x5c79]        # 0x409490
  403817:	lea    rcx,[rip+0x98e2]        # 0x40d100
  40381e:	mov    r8d,ebx
  403821:	call   0x4056e0
  403826:	call   QWORD PTR [rip+0xac2c]        # 0x40e458
  40382c:	mov    DWORD PTR [rax],0x16
  403832:	lea    rax,[rip+0x98c7]        # 0x40d100
  403839:	jmp    0x403773
  40383e:	call   0x405780
  403843:	nop
  403844:	nop
  403845:	nop
  403846:	nop
  403847:	nop
  403848:	nop
  403849:	nop
  40384a:	nop
  40384b:	nop
  40384c:	nop
  40384d:	nop
  40384e:	nop
  40384f:	nop
  403850:	cmp    ecx,0x2749
  403856:	je     0x403c80
  40385c:	jg     0x4038e0
  403862:	cmp    ecx,0x2739
  403868:	je     0x403c70
  40386e:	jg     0x403960
  403874:	cmp    ecx,0x7d2
  40387a:	je     0x403ca0
  403880:	jle    0x403a91
  403886:	cmp    ecx,0x2735
  40388c:	lea    rax,[rip+0x5c4e]        # 0x4094e1
  403893:	je     0x403b02
  403899:	jg     0x403b42
  40389f:	cmp    ecx,0x7d5
  4038a5:	lea    rax,[rip+0x6288]        # 0x409b34
  4038ac:	je     0x403b02
  4038b2:	cmp    ecx,0x2734
  4038b8:	lea    rax,[rip+0x5c08]        # 0x4094c7
  4038bf:	je     0x403b02
  4038c5:	cmp    ecx,0x7d4
  4038cb:	lea    rax,[rip+0x624f]        # 0x409b21
  4038d2:	jne    0x403b00
  4038d8:	repz ret 
  4038da:	nop    WORD PTR [rax+rax*1+0x0]
  4038e0:	cmp    ecx,0x2775
  4038e6:	je     0x403cb0
  4038ec:	jg     0x4039b1
  4038f2:	cmp    ecx,0x2753
  4038f8:	je     0x403cc0
  4038fe:	jle    0x403a41
  403904:	cmp    ecx,0x2757
  40390a:	lea    rax,[rip+0x5f43]        # 0x409854
  403911:	je     0x403b02
  403917:	jle    0x403b64
  40391d:	cmp    ecx,0x276c
  403923:	lea    rax,[rip+0x5fee]        # 0x409918
  40392a:	je     0x403b02
  403930:	cmp    ecx,0x276d
  403936:	lea    rax,[rip+0x6003]        # 0x409940
  40393d:	je     0x403b02
  403943:	cmp    ecx,0x276b
  403949:	lea    rax,[rip+0x5fa0]        # 0x4098f0
  403950:	jne    0x403b00
  403956:	repz ret 
  403958:	nop    DWORD PTR [rax+rax*1+0x0]
  403960:	cmp    ecx,0x2741
  403966:	je     0x403cd0
  40396c:	jle    0x403a02
  403972:	cmp    ecx,0x2745
  403978:	lea    rax,[rip+0x5d21]        # 0x4096a0
  40397f:	je     0x403b02
  403985:	jle    0x403bc0
  40398b:	cmp    ecx,0x2747
  403991:	lea    rax,[rip+0x5d42]        # 0x4096da
  403998:	je     0x403b02
  40399e:	lea    rdx,[rip+0x5d1c]        # 0x4096c1
  4039a5:	lea    rax,[rip+0x5d4c]        # 0x4096f8
  4039ac:	cmovle rax,rdx
  4039b0:	ret    
  4039b1:	cmp    ecx,0x277d
  4039b7:	je     0x403c60
  4039bd:	jg     0x403b04
  4039c3:	cmp    ecx,0x2779
  4039c9:	lea    rax,[rip+0x5ff8]        # 0x4099c8
  4039d0:	je     0x403b02
  4039d6:	jle    0x403c20
  4039dc:	cmp    ecx,0x277b
  4039e2:	lea    rax,[rip+0x6025]        # 0x409a0e
  4039e9:	je     0x403b02
  4039ef:	lea    rdx,[rip+0x5ff2]        # 0x4099e8
  4039f6:	lea    rax,[rip+0x6025]        # 0x409a22
  4039fd:	cmovle rax,rdx
  403a01:	ret    
  403a02:	cmp    ecx,0x273d
  403a08:	lea    rax,[rip+0x5ba8]        # 0x4095b7
  403a0f:	je     0x403b02
  403a15:	jle    0x403bf0
  403a1b:	cmp    ecx,0x273f
  403a21:	lea    rax,[rip+0x5bc8]        # 0x4095f0
  403a28:	je     0x403b02
  403a2e:	lea    rdx,[rip+0x5b9a]        # 0x4095cf
  403a35:	lea    rax,[rip+0x5bdd]        # 0x409619
  403a3c:	cmovle rax,rdx
  403a40:	ret    
  403a41:	cmp    ecx,0x274d
  403a47:	lea    rax,[rip+0x5d62]        # 0x4097b0
  403a4e:	je     0x403b02
  403a54:	jle    0x403b90
  403a5a:	cmp    ecx,0x2750
  403a60:	lea    rax,[rip+0x5d83]        # 0x4097ea
  403a67:	je     0x403b02
  403a6d:	cmp    ecx,0x2751
  403a73:	lea    rax,[rip+0x5d7d]        # 0x4097f7
  403a7a:	je     0x403b02
  403a80:	cmp    ecx,0x274e
  403a86:	lea    rax,[rip+0x5d3b]        # 0x4097c8
  403a8d:	jne    0x403b00
  403a8f:	repz ret 
  403a91:	cmp    ecx,0x3e4
  403a97:	lea    rax,[rip+0x5dea]        # 0x409888
  403a9e:	je     0x403b02
  403aa0:	jg     0x403ad0
  403aa2:	cmp    ecx,0x64
  403aa5:	lea    rax,[rip+0x5a0c]        # 0x4094b8
  403aac:	je     0x403b02
  403aae:	cmp    ecx,0x3e3
  403ab4:	lea    rax,[rip+0x5daa]        # 0x409865
  403abb:	je     0x403b02
  403abd:	test   ecx,ecx
  403abf:	lea    rax,[rip+0x59ea]        # 0x4094b0
  403ac6:	jne    0x403b00
  403ac8:	repz ret 
  403aca:	nop    WORD PTR [rax+rax*1+0x0]
  403ad0:	cmp    ecx,0x7d0
  403ad6:	lea    rax,[rip+0x6000]        # 0x409add
  403add:	je     0x403b02
  403adf:	lea    rax,[rip+0x6012]        # 0x409af8
  403ae6:	jg     0x403b02
  403ae8:	cmp    ecx,0x3e5
  403aee:	lea    rax,[rip+0x5dcb]        # 0x4098c0
  403af5:	je     0x403b02
  403af7:	nop    WORD PTR [rax+rax*1+0x0]
  403b00:	xor    eax,eax
  403b02:	repz ret 
  403b04:	cmp    ecx,0x2af9
  403b0a:	lea    rax,[rip+0x5f53]        # 0x409a64
  403b11:	je     0x403b02
  403b13:	jle    0x403c40
  403b19:	cmp    ecx,0x2afb
  403b1f:	lea    rax,[rip+0x5f72]        # 0x409a98
  403b26:	je     0x403b02
  403b28:	lea    rax,[rip+0x5f49]        # 0x409a78
  403b2f:	jl     0x403b02
  403b31:	cmp    ecx,0x2afc
  403b37:	lea    rax,[rip+0x5f72]        # 0x409ab0
  403b3e:	jne    0x403b00
  403b40:	repz ret 
  403b42:	cmp    ecx,0x2737
  403b48:	lea    rax,[rip+0x59d0]        # 0x40951f
  403b4f:	je     0x403b02
  403b51:	lea    rdx,[rip+0x59a8]        # 0x409500
  403b58:	lea    rax,[rip+0x59dd]        # 0x40953c
  403b5f:	cmovle rax,rdx
  403b63:	ret    
  403b64:	cmp    ecx,0x2755
  403b6a:	lea    rax,[rip+0x5cb9]        # 0x40982a
  403b71:	je     0x403b02
  403b73:	lea    rdx,[rip+0x5ca1]        # 0x40981b
  403b7a:	lea    rax,[rip+0x5cbd]        # 0x40983e
  403b81:	cmovle rax,rdx
  403b85:	ret    
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b90:	cmp    ecx,0x274b
  403b96:	lea    rax,[rip+0x5bdb]        # 0x409778
  403b9d:	je     0x403b02
  403ba3:	lea    rdx,[rip+0x5b9e]        # 0x409748
  403baa:	lea    rax,[rip+0x5bea]        # 0x40979b
  403bb1:	cmovle rax,rdx
  403bb5:	ret    
  403bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bc0:	cmp    ecx,0x2743
  403bc6:	lea    rax,[rip+0x5a93]        # 0x409660
  403bcd:	je     0x403b02
  403bd3:	lea    rdx,[rip+0x5a76]        # 0x409650
  403bda:	lea    rax,[rip+0x5a97]        # 0x409678
  403be1:	cmovle rax,rdx
  403be5:	ret    
  403be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bf0:	cmp    ecx,0x273b
  403bf6:	lea    rax,[rip+0x5989]        # 0x409586
  403bfd:	je     0x403b02
  403c03:	lea    rdx,[rip+0x5965]        # 0x40956f
  403c0a:	lea    rax,[rip+0x598c]        # 0x40959d
  403c11:	cmovle rax,rdx
  403c15:	ret    
  403c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c20:	cmp    ecx,0x2777
  403c26:	je     0x403c90
  403c28:	lea    rax,[rip+0x5d79]        # 0x4099a8
  403c2f:	jg     0x403b02
  403c35:	lea    rax,[rip+0x5d4a]        # 0x409986
  403c3c:	ret    
  403c3d:	nop    DWORD PTR [rax]
  403c40:	cmp    ecx,0x277f
  403c46:	je     0x403c90
  403c48:	jl     0x403c35
  403c4a:	cmp    ecx,0x2780
  403c50:	lea    rax,[rip+0x5df2]        # 0x409a49
  403c57:	jne    0x403b00
  403c5d:	repz ret 
  403c5f:	nop
  403c60:	lea    rax,[rip+0x5dcd]        # 0x409a34
  403c67:	ret    
  403c68:	nop    DWORD PTR [rax+rax*1+0x0]
  403c70:	lea    rax,[rip+0x58d9]        # 0x409550
  403c77:	ret    
  403c78:	nop    DWORD PTR [rax+rax*1+0x0]
  403c80:	lea    rax,[rip+0x5a99]        # 0x409720
  403c87:	ret    
  403c88:	nop    DWORD PTR [rax+rax*1+0x0]
  403c90:	lea    rax,[rip+0x5cff]        # 0x409996
  403c97:	ret    
  403c98:	nop    DWORD PTR [rax+rax*1+0x0]
  403ca0:	lea    rax,[rip+0x5e64]        # 0x409b0b
  403ca7:	ret    
  403ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cb0:	lea    rax,[rip+0x5cb1]        # 0x409968
  403cb7:	ret    
  403cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cc0:	lea    rax,[rip+0x5b41]        # 0x409808
  403cc7:	ret    
  403cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cd0:	lea    rax,[rip+0x5959]        # 0x409630
  403cd7:	ret    
  403cd8:	nop
  403cd9:	nop
  403cda:	nop
  403cdb:	nop
  403cdc:	nop
  403cdd:	nop
  403cde:	nop
  403cdf:	nop
  403ce0:	cmp    ecx,0xd
  403ce3:	jne    0x403cf4
  403ce5:	mov    rax,QWORD PTR [rip+0x9634]        # 0x40d320
  403cec:	mov    QWORD PTR [rip+0x962d],rdx        # 0x40d320
  403cf3:	ret    
  403cf4:	jmp    0x4056e8
  403cf9:	nop    DWORD PTR [rax+0x0]
  403d00:	push   rbx
  403d01:	sub    rsp,0x20
  403d05:	lea    rdx,[rip+0xfffffffffffffff4]        # 0x403d00
  403d0c:	movsxd rbx,ecx
  403d0f:	mov    ecx,ebx
  403d11:	call   0x403ce0
  403d16:	cmp    ebx,0x16
  403d19:	ja     0x403d29
  403d1b:	lea    rax,[rip+0x959e]        # 0x40d2c0
  403d22:	mov    DWORD PTR [rax+rbx*4],0x1
  403d29:	add    rsp,0x20
  403d2d:	pop    rbx
  403d2e:	ret    
  403d2f:	nop
  403d30:	xor    eax,eax
  403d32:	cmp    edx,0x16
  403d35:	ja     0x403d48
  403d37:	cmp    edx,0x6
  403d3a:	mov    al,0x16
  403d3c:	cmove  edx,eax
  403d3f:	mov    eax,DWORD PTR [rcx]
  403d41:	mov    ecx,edx
  403d43:	shr    eax,cl
  403d45:	and    eax,0x1
  403d48:	repz ret 
  403d4a:	nop    WORD PTR [rax+rax*1+0x0]
  403d50:	xor    eax,eax
  403d52:	mov    DWORD PTR [rcx],0x0
  403d58:	ret    
  403d59:	nop    DWORD PTR [rax+0x0]
  403d60:	sub    rsp,0x28
  403d64:	cmp    edx,0x16
  403d67:	mov    r8,rcx
  403d6a:	ja     0x403d90
  403d6c:	cmp    edx,0x6
  403d6f:	mov    eax,0x400000
  403d74:	je     0x403d7f
  403d76:	mov    eax,0x1
  403d7b:	mov    ecx,edx
  403d7d:	shl    eax,cl
  403d7f:	or     DWORD PTR [r8],eax
  403d82:	xor    eax,eax
  403d84:	add    rsp,0x28
  403d88:	ret    
  403d89:	nop    DWORD PTR [rax+0x0]
  403d90:	call   QWORD PTR [rip+0xa6c2]        # 0x40e458
  403d96:	mov    DWORD PTR [rax],0x16
  403d9c:	mov    eax,0xffffffff
  403da1:	jmp    0x403d84
  403da3:	nop    DWORD PTR [rax]
  403da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403db0:	sub    rsp,0x28
  403db4:	cmp    edx,0x16
  403db7:	mov    r8,rcx
  403dba:	ja     0x403de0
  403dbc:	cmp    edx,0x6
  403dbf:	mov    eax,0xffbfffff
  403dc4:	je     0x403dcf
  403dc6:	mov    eax,0xfffffffe
  403dcb:	mov    ecx,edx
  403dcd:	rol    eax,cl
  403dcf:	and    DWORD PTR [r8],eax
  403dd2:	xor    eax,eax
  403dd4:	add    rsp,0x28
  403dd8:	ret    
  403dd9:	nop    DWORD PTR [rax+0x0]
  403de0:	call   QWORD PTR [rip+0xa672]        # 0x40e458
  403de6:	mov    DWORD PTR [rax],0x16
  403dec:	mov    eax,0xffffffff
  403df1:	jmp    0x403dd4
  403df3:	nop    DWORD PTR [rax]
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	xor    eax,eax
  403e02:	mov    DWORD PTR [rcx],0x7fffbf
  403e08:	ret    
  403e09:	nop    DWORD PTR [rax+0x0]
  403e10:	lea    r8,[rip+0x94a9]        # 0x40d2c0
  403e17:	xor    edx,edx
  403e19:	mov    r9d,0x1
  403e1f:	mov    r10,rcx
  403e22:	xor    ecx,ecx
  403e24:	movsxd rax,ecx
  403e27:	mov    eax,DWORD PTR [r8+rax*4]
  403e2b:	test   eax,eax
  403e2d:	je     0x403e36
  403e2f:	mov    eax,r9d
  403e32:	shl    eax,cl
  403e34:	or     edx,eax
  403e36:	add    ecx,0x1
  403e39:	cmp    ecx,0x17
  403e3c:	jne    0x403e24
  403e3e:	mov    DWORD PTR [r10],edx
  403e41:	xor    eax,eax
  403e43:	ret    
  403e44:	xchg   ax,ax
  403e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e50:	sub    rsp,0x28
  403e54:	cmp    ecx,0x16
  403e57:	ja     0x403e90
  403e59:	cmp    rdx,0xffffffffffffffff
  403e5d:	je     0x403e90
  403e5f:	cmp    ecx,0x6
  403e62:	mov    eax,0x16
  403e67:	cmove  ecx,eax
  403e6a:	mov    eax,DWORD PTR [rip+0x94ac]        # 0x40d31c
  403e70:	bt     eax,ecx
  403e73:	jae    0x403eb0
  403e75:	lea    r8,[rip+0x9384]        # 0x40d200
  403e7c:	movsxd rcx,ecx
  403e7f:	mov    rax,QWORD PTR [r8+rcx*8]
  403e83:	mov    QWORD PTR [r8+rcx*8],rdx
  403e87:	add    rsp,0x28
  403e8b:	ret    
  403e8c:	nop    DWORD PTR [rax+0x0]
  403e90:	call   QWORD PTR [rip+0xa5c2]        # 0x40e458
  403e96:	mov    DWORD PTR [rax],0x16
  403e9c:	mov    rax,0xffffffffffffffff
  403ea3:	add    rsp,0x28
  403ea7:	ret    
  403ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  403eb0:	add    rsp,0x28
  403eb4:	jmp    0x403ce0
  403eb9:	nop    DWORD PTR [rax+0x0]
  403ec0:	sub    rsp,0x28
  403ec4:	cmp    ecx,0xd
  403ec7:	jne    0x403f05
  403ec9:	mov    eax,DWORD PTR [rip+0x944d]        # 0x40d31c
  403ecf:	test   ah,0x20
  403ed2:	jne    0x403ef4
  403ed4:	mov    rax,QWORD PTR [rip+0x9445]        # 0x40d320
  403edb:	test   rax,rax
  403ede:	je     0x403f0e
  403ee0:	cmp    rax,0x1
  403ee4:	je     0x403eed
  403ee6:	mov    ecx,0xd
  403eeb:	call   rax
  403eed:	xor    eax,eax
  403eef:	add    rsp,0x28
  403ef3:	ret    
  403ef4:	xor    eax,eax
  403ef6:	mov    DWORD PTR [rip+0x93f4],0x1        # 0x40d2f4
  403f00:	add    rsp,0x28
  403f04:	ret    
  403f05:	add    rsp,0x28
  403f09:	jmp    0x405700
  403f0e:	mov    ecx,0x8d
  403f13:	call   0x405770
  403f18:	nop
  403f19:	nop    DWORD PTR [rax+0x0]
  403f20:	push   r14
  403f22:	push   r13
  403f24:	push   r12
  403f26:	push   rbp
  403f27:	push   rdi
  403f28:	push   rsi
  403f29:	push   rbx
  403f2a:	add    rsp,0xffffffffffffff80
  403f2e:	test   r8,r8
  403f31:	je     0x403f3c
  403f33:	mov    eax,DWORD PTR [rip+0x93e3]        # 0x40d31c
  403f39:	mov    DWORD PTR [r8],eax
  403f3c:	test   rdx,rdx
  403f3f:	je     0x403f80
  403f41:	cmp    ecx,0x1
  403f44:	je     0x4040e0
  403f4a:	cmp    ecx,0x2
  403f4d:	je     0x403f91
  403f4f:	test   ecx,ecx
  403f51:	je     0x4040f0
  403f57:	call   QWORD PTR [rip+0xa4fb]        # 0x40e458
  403f5d:	mov    DWORD PTR [rax],0x16
  403f63:	mov    eax,0xffffffff
  403f68:	sub    rsp,0xffffffffffffff80
  403f6c:	pop    rbx
  403f6d:	pop    rsi
  403f6e:	pop    rdi
  403f6f:	pop    rbp
  403f70:	pop    r12
  403f72:	pop    r13
  403f74:	pop    r14
  403f76:	ret    
  403f77:	nop    WORD PTR [rax+rax*1+0x0]
  403f80:	xor    eax,eax
  403f82:	sub    rsp,0xffffffffffffff80
  403f86:	pop    rbx
  403f87:	pop    rsi
  403f88:	pop    rdi
  403f89:	pop    rbp
  403f8a:	pop    r12
  403f8c:	pop    r13
  403f8e:	pop    r14
  403f90:	ret    
  403f91:	mov    esi,DWORD PTR [rdx]
  403f93:	mov    ecx,DWORD PTR [rip+0x9383]        # 0x40d31c
  403f99:	not    esi
  403f9b:	mov    eax,esi
  403f9d:	and    eax,ecx
  403f9f:	mov    edx,DWORD PTR [rip+0x9377]        # 0x40d31c
  403fa5:	mov    esi,DWORD PTR [rip+0x9371]        # 0x40d31c
  403fab:	mov    ebp,eax
  403fad:	not    ebp
  403faf:	not    esi
  403fb1:	and    ebp,edx
  403fb3:	and    esi,eax
  403fb5:	je     0x404020
  403fb7:	xor    ebx,ebx
  403fb9:	mov    r12d,0x1
  403fbf:	jmp    0x403fc9
  403fc1:	add    ebx,0x1
  403fc4:	cmp    ebx,0x17
  403fc7:	je     0x404020
  403fc9:	bt     esi,ebx
  403fcc:	jae    0x403fc1
  403fce:	lea    rax,[rip+0x92eb]        # 0x40d2c0
  403fd5:	lea    rdx,[rip+0xfffffffffffffd24]        # 0x403d00
  403fdc:	movsxd rdi,ebx
  403fdf:	mov    ecx,ebx
  403fe1:	mov    DWORD PTR [rax+rdi*4],0x0
  403fe8:	call   0x403ce0
  403fed:	lea    rdx,[rip+0x920c]        # 0x40d200
  403ff4:	cmp    rax,0xffffffffffffffff
  403ff8:	mov    QWORD PTR [rdx+rdi*8],rax
  403ffc:	je     0x403fc1
  403ffe:	mov    eax,DWORD PTR [rip+0x9318]        # 0x40d31c
  404004:	mov    ecx,ebx
  404006:	mov    edx,r12d
  404009:	shl    edx,cl
  40400b:	add    ebx,0x1
  40400e:	or     eax,edx
  404010:	cmp    ebx,0x17
  404013:	mov    DWORD PTR [rip+0x9303],eax        # 0x40d31c
  404019:	jne    0x403fc9
  40401b:	nop    DWORD PTR [rax+rax*1+0x0]
  404020:	xor    ebx,ebx
  404022:	test   ebp,ebp
  404024:	lea    r14,[rip+0xfffffffffffffcd5]        # 0x403d00
  40402b:	mov    r13d,0x1
  404031:	jne    0x404057
  404033:	jmp    0x403f80
  404038:	nop    DWORD PTR [rax+rax*1+0x0]
  404040:	mov    DWORD PTR [rsp+rbx*4+0x20],0x0
  404048:	add    rbx,0x1
  40404c:	lea    rsi,[rsp+0x20]
  404051:	cmp    rbx,0x17
  404055:	je     0x4040b7
  404057:	bt     ebp,ebx
  40405a:	jae    0x404040
  40405c:	lea    rax,[rip+0x919d]        # 0x40d200
  404063:	movsxd r12,ebx
  404066:	mov    ecx,ebx
  404068:	mov    rdx,QWORD PTR [rax+r12*8]
  40406c:	call   0x403ce0
  404071:	cmp    rax,r14
  404074:	jne    0x4040ff
  40407a:	lea    r8,[rip+0x923f]        # 0x40d2c0
  404081:	mov    ecx,ebx
  404083:	mov    edx,r13d
  404086:	shl    edx,cl
  404088:	lea    rsi,[rsp+0x20]
  40408d:	mov    eax,DWORD PTR [r8+r12*4]
  404091:	not    edx
  404093:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
  404097:	mov    eax,DWORD PTR [rip+0x927f]        # 0x40d31c
  40409d:	add    rbx,0x1
  4040a1:	and    eax,edx
  4040a3:	cmp    rbx,0x17
  4040a7:	mov    DWORD PTR [rip+0x926f],eax        # 0x40d31c
  4040ad:	mov    DWORD PTR [r8+r12*4],0x0
  4040b5:	jne    0x404057
  4040b7:	xor    bl,bl
  4040b9:	jmp    0x4040ce
  4040bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4040c0:	add    rbx,0x1
  4040c4:	cmp    rbx,0x17
  4040c8:	je     0x403f80
  4040ce:	mov    eax,DWORD PTR [rsi+rbx*4]
  4040d1:	test   eax,eax
  4040d3:	je     0x4040c0
  4040d5:	mov    ecx,ebx
  4040d7:	call   0x403ec0
  4040dc:	jmp    0x4040c0
  4040de:	xchg   ax,ax
  4040e0:	mov    eax,DWORD PTR [rdx]
  4040e2:	jmp    0x403f9f
  4040e7:	nop    WORD PTR [rax+rax*1+0x0]
  4040f0:	mov    esi,DWORD PTR [rip+0x9226]        # 0x40d31c
  4040f6:	mov    eax,DWORD PTR [rdx]
  4040f8:	or     eax,esi
  4040fa:	jmp    0x403f9f
  4040ff:	call   0x405780
  404104:	nop
  404105:	nop
  404106:	nop
  404107:	nop
  404108:	nop
  404109:	nop
  40410a:	nop
  40410b:	nop
  40410c:	nop
  40410d:	nop
  40410e:	nop
  40410f:	nop
  404110:	jmp    QWORD PTR [rip+0xa20a]        # 0x40e320
  404116:	nop
  404117:	nop
  404118:	jmp    QWORD PTR [rip+0xa1fa]        # 0x40e318
  40411e:	nop
  40411f:	nop
  404120:	jmp    QWORD PTR [rip+0xa1ea]        # 0x40e310
  404126:	nop
  404127:	nop
  404128:	jmp    QWORD PTR [rip+0xa1da]        # 0x40e308
  40412e:	nop
  40412f:	nop
  404130:	jmp    QWORD PTR [rip+0xa1ca]        # 0x40e300
  404136:	nop
  404137:	nop
  404138:	jmp    QWORD PTR [rip+0xa1ba]        # 0x40e2f8
  40413e:	nop
  40413f:	nop
  404140:	push   rbx
  404141:	sub    rsp,0x30
  404145:	mov    rbx,rcx
  404148:	mov    rcx,QWORD PTR [rip+0x9bd9]        # 0x40dd28
  40414f:	call   0x4046f0
  404154:	cmp    rax,0xffffffffffffffff
  404158:	mov    QWORD PTR [rsp+0x20],rax
  40415d:	je     0x4041d5
  40415f:	mov    ecx,0x8
  404164:	call   0x4057a0
  404169:	mov    rcx,QWORD PTR [rip+0x9bb8]        # 0x40dd28
  404170:	call   0x4046f0
  404175:	mov    rcx,QWORD PTR [rip+0x9bb4]        # 0x40dd30
  40417c:	mov    QWORD PTR [rsp+0x20],rax
  404181:	call   0x4046f0
  404186:	lea    rdx,[rsp+0x20]
  40418b:	lea    r8,[rsp+0x28]
  404190:	mov    rcx,rbx
  404193:	mov    QWORD PTR [rsp+0x28],rax
  404198:	call   0x405800
  40419d:	mov    rcx,QWORD PTR [rsp+0x20]
  4041a2:	mov    rbx,rax
  4041a5:	call   0x404700
  4041aa:	mov    rcx,QWORD PTR [rsp+0x28]
  4041af:	mov    QWORD PTR [rip+0x9b72],rax        # 0x40dd28
  4041b6:	call   0x404700
  4041bb:	mov    ecx,0x8
  4041c0:	mov    QWORD PTR [rip+0x9b69],rax        # 0x40dd30
  4041c7:	call   0x405788
  4041cc:	mov    rax,rbx
  4041cf:	add    rsp,0x30
  4041d3:	pop    rbx
  4041d4:	ret    
  4041d5:	mov    rax,QWORD PTR [rip+0x5c84]        # 0x409e60
  4041dc:	mov    rcx,rbx
  4041df:	call   QWORD PTR [rax]
  4041e1:	add    rsp,0x30
  4041e5:	pop    rbx
  4041e6:	ret    
  4041e7:	nop    WORD PTR [rax+rax*1+0x0]
  4041f0:	sub    rsp,0x28
  4041f4:	call   0x404140
  4041f9:	test   rax,rax
  4041fc:	sete   al
  4041ff:	movzx  eax,al
  404202:	neg    eax
  404204:	add    rsp,0x28
  404208:	ret    
  404209:	nop
  40420a:	nop
  40420b:	nop
  40420c:	nop
  40420d:	nop
  40420e:	nop
  40420f:	nop
  404210:	sub    rsp,0x28
  404214:	mov    rax,QWORD PTR [rip+0x2e05]        # 0x407020
  40421b:	mov    rax,QWORD PTR [rax]
  40421e:	test   rax,rax
  404221:	je     0x404240
  404223:	call   rax
  404225:	mov    rax,QWORD PTR [rip+0x2df4]        # 0x407020
  40422c:	lea    rdx,[rax+0x8]
  404230:	mov    rax,QWORD PTR [rax+0x8]
  404234:	mov    QWORD PTR [rip+0x2de5],rdx        # 0x407020
  40423b:	test   rax,rax
  40423e:	jne    0x404223
  404240:	add    rsp,0x28
  404244:	ret    
  404245:	nop
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404250:	push   rsi
  404251:	push   rbx
  404252:	sub    rsp,0x28
  404256:	mov    rsi,QWORD PTR [rip+0x5b83]        # 0x409de0
  40425d:	mov    rax,QWORD PTR [rsi]
  404260:	cmp    eax,0xffffffff
  404263:	mov    ebx,eax
  404265:	je     0x404290
  404267:	test   ebx,ebx
  404269:	je     0x40427a
  40426b:	nop    DWORD PTR [rax+rax*1+0x0]
  404270:	mov    eax,ebx
  404272:	call   QWORD PTR [rsi+rax*8]
  404275:	sub    ebx,0x1
  404278:	jne    0x404270
  40427a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x404210
  404281:	add    rsp,0x28
  404285:	pop    rbx
  404286:	pop    rsi
  404287:	jmp    0x4041f0
  40428c:	nop    DWORD PTR [rax+0x0]
  404290:	xor    ebx,ebx
  404292:	jmp    0x404296
  404294:	mov    ebx,eax
  404296:	lea    edx,[rbx+0x1]
  404299:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40429e:	mov    rax,rdx
  4042a1:	jne    0x404294
  4042a3:	jmp    0x404267
  4042a5:	nop
  4042a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042b0:	mov    eax,DWORD PTR [rip+0x908a]        # 0x40d340
  4042b6:	test   eax,eax
  4042b8:	je     0x4042c0
  4042ba:	repz ret 
  4042bc:	nop    DWORD PTR [rax+0x0]
  4042c0:	mov    DWORD PTR [rip+0x9076],0x1        # 0x40d340
  4042ca:	jmp    0x404250
  4042cc:	nop
  4042cd:	nop
  4042ce:	nop
  4042cf:	nop
  4042d0:	mov    rax,QWORD PTR [rip+0xa151]        # 0x40e428
  4042d7:	rex.W jmp rax
  4042da:	nop
  4042db:	nop
  4042dc:	nop
  4042dd:	nop
  4042de:	nop
  4042df:	nop
  4042e0:	xor    eax,eax
  4042e2:	ret    
  4042e3:	nop
  4042e4:	nop
  4042e5:	nop
  4042e6:	nop
  4042e7:	nop
  4042e8:	nop
  4042e9:	nop
  4042ea:	nop
  4042eb:	nop
  4042ec:	nop
  4042ed:	nop
  4042ee:	nop
  4042ef:	nop
  4042f0:	push   r12
  4042f2:	push   rbp
  4042f3:	push   rdi
  4042f4:	push   rsi
  4042f5:	push   rbx
  4042f6:	sub    rsp,0x40
  4042fa:	mov    rbx,QWORD PTR [rip+0x2d7f]        # 0x407080
  404301:	movabs rax,0x2b992ddfa232
  40430b:	mov    QWORD PTR [rsp+0x20],0x0
  404314:	cmp    rbx,rax
  404317:	je     0x404330
  404319:	not    rbx
  40431c:	mov    QWORD PTR [rip+0x2d6d],rbx        # 0x407090
  404323:	add    rsp,0x40
  404327:	pop    rbx
  404328:	pop    rsi
  404329:	pop    rdi
  40432a:	pop    rbp
  40432b:	pop    r12
  40432d:	ret    
  40432e:	xchg   ax,ax
  404330:	lea    rcx,[rsp+0x20]
  404335:	call   QWORD PTR [rip+0xa035]        # 0x40e370
  40433b:	mov    r12,QWORD PTR [rsp+0x20]
  404340:	call   QWORD PTR [rip+0xa002]        # 0x40e348
  404346:	mov    ebp,eax
  404348:	call   QWORD PTR [rip+0xa002]        # 0x40e350
  40434e:	mov    edi,eax
  404350:	call   QWORD PTR [rip+0xa022]        # 0x40e378
  404356:	lea    rcx,[rsp+0x30]
  40435b:	mov    esi,eax
  40435d:	call   QWORD PTR [rip+0xa02d]        # 0x40e390
  404363:	xor    r12,QWORD PTR [rsp+0x30]
  404368:	mov    edx,edi
  40436a:	movabs rax,0xffffffffffff
  404374:	xor    rbp,r12
  404377:	mov    rdi,rbp
  40437a:	xor    rdi,rdx
  40437d:	mov    edx,esi
  40437f:	xor    rdi,rdx
  404382:	mov    rsi,rdi
  404385:	and    rsi,rax
  404388:	cmp    rsi,rbx
  40438b:	je     0x4043b0
  40438d:	mov    rax,rsi
  404390:	not    rax
  404393:	mov    QWORD PTR [rip+0x2ce6],rsi        # 0x407080
  40439a:	mov    QWORD PTR [rip+0x2cef],rax        # 0x407090
  4043a1:	add    rsp,0x40
  4043a5:	pop    rbx
  4043a6:	pop    rsi
  4043a7:	pop    rdi
  4043a8:	pop    rbp
  4043a9:	pop    r12
  4043ab:	ret    
  4043ac:	nop    DWORD PTR [rax+0x0]
  4043b0:	movabs rax,0xffffd466d2205dcc
  4043ba:	movabs rsi,0x2b992ddfa233
  4043c4:	jmp    0x404393
  4043c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043d0:	push   rbp
  4043d1:	push   rsi
  4043d2:	push   rbx
  4043d3:	mov    rbp,rsp
  4043d6:	sub    rsp,0x70
  4043da:	mov    rsi,rcx
  4043dd:	lea    rcx,[rip+0x8f9c]        # 0x40d380
  4043e4:	call   QWORD PTR [rip+0x9fb6]        # 0x40e3a0
  4043ea:	mov    rbx,QWORD PTR [rip+0x9087]        # 0x40d478
  4043f1:	xor    r8d,r8d
  4043f4:	lea    rdx,[rbp-0x28]
  4043f8:	mov    rcx,rbx
  4043fb:	call   QWORD PTR [rip+0x9fa7]        # 0x40e3a8
  404401:	test   rax,rax
  404404:	mov    r9,rax
  404407:	je     0x4044b0
  40440d:	lea    rax,[rbp-0x20]
  404411:	mov    QWORD PTR [rsp+0x38],0x0
  40441a:	mov    r8,rbx
  40441d:	mov    rdx,QWORD PTR [rbp-0x28]
  404421:	xor    ecx,ecx
  404423:	mov    QWORD PTR [rsp+0x30],rax
  404428:	lea    rax,[rbp-0x18]
  40442c:	mov    QWORD PTR [rsp+0x28],rax
  404431:	lea    rax,[rip+0x8f48]        # 0x40d380
  404438:	mov    QWORD PTR [rsp+0x20],rax
  40443d:	call   QWORD PTR [rip+0x9f6d]        # 0x40e3b0
  404443:	mov    rax,QWORD PTR [rip+0x902e]        # 0x40d478
  40444a:	xor    ecx,ecx
  40444c:	mov    QWORD PTR [rip+0x8fad],rsi        # 0x40d400
  404453:	mov    DWORD PTR [rip+0x9423],0xc0000409        # 0x40d880
  40445d:	mov    DWORD PTR [rip+0x941d],0x1        # 0x40d884
  404467:	mov    QWORD PTR [rip+0x9422],rax        # 0x40d890
  40446e:	mov    rax,QWORD PTR [rip+0x2c0b]        # 0x407080
  404475:	mov    QWORD PTR [rbp-0x10],rax
  404479:	mov    rax,QWORD PTR [rip+0x2c10]        # 0x407090
  404480:	mov    QWORD PTR [rbp-0x8],rax
  404484:	call   QWORD PTR [rip+0x9f36]        # 0x40e3c0
  40448a:	lea    rcx,[rip+0x56af]        # 0x409b40
  404491:	call   QWORD PTR [rip+0x9f49]        # 0x40e3e0
  404497:	call   QWORD PTR [rip+0x9ea3]        # 0x40e340
  40449d:	mov    edx,0xc0000409
  4044a2:	mov    rcx,rax
  4044a5:	call   QWORD PTR [rip+0x9f25]        # 0x40e3d0
  4044ab:	call   0x405780
  4044b0:	mov    rax,QWORD PTR [rbp+0x18]
  4044b4:	mov    QWORD PTR [rip+0x8fbd],rax        # 0x40d478
  4044bb:	lea    rax,[rbp+0x8]
  4044bf:	mov    QWORD PTR [rip+0x8f52],rax        # 0x40d418
  4044c6:	jmp    0x404443
  4044cb:	nop
  4044cc:	nop
  4044cd:	nop
  4044ce:	nop
  4044cf:	nop
  4044d0:	sub    rsp,0x28
  4044d4:	test   edx,edx
  4044d6:	je     0x4044f0
  4044d8:	cmp    edx,0x3
  4044db:	je     0x4044f0
  4044dd:	mov    eax,0x1
  4044e2:	add    rsp,0x28
  4044e6:	ret    
  4044e7:	nop    WORD PTR [rax+rax*1+0x0]
  4044f0:	call   0x4051e0
  4044f5:	mov    eax,0x1
  4044fa:	add    rsp,0x28
  4044fe:	ret    
  4044ff:	nop
  404500:	push   rsi
  404501:	push   rbx
  404502:	sub    rsp,0x28
  404506:	mov    rax,QWORD PTR [rip+0x58b3]        # 0x409dc0
  40450d:	cmp    DWORD PTR [rax],0x2
  404510:	je     0x404518
  404512:	mov    DWORD PTR [rax],0x2
  404518:	cmp    edx,0x2
  40451b:	je     0x404530
  40451d:	cmp    edx,0x1
  404520:	je     0x404562
  404522:	mov    eax,0x1
  404527:	add    rsp,0x28
  40452b:	pop    rbx
  40452c:	pop    rsi
  40452d:	ret    
  40452e:	xchg   ax,ax
  404530:	lea    rbx,[rip+0xab29]        # 0x40f060
  404537:	lea    rsi,[rip+0xab22]        # 0x40f060
  40453e:	cmp    rbx,rsi
  404541:	je     0x404522
  404543:	mov    rax,QWORD PTR [rbx]
  404546:	test   rax,rax
  404549:	je     0x40454d
  40454b:	call   rax
  40454d:	add    rbx,0x8
  404551:	cmp    rbx,rsi
  404554:	jne    0x404543
  404556:	mov    eax,0x1
  40455b:	add    rsp,0x28
  40455f:	pop    rbx
  404560:	pop    rsi
  404561:	ret    
  404562:	call   0x4051e0
  404567:	jmp    0x404522
  404569:	nop    DWORD PTR [rax+0x0]
  404570:	xor    eax,eax
  404572:	ret    
  404573:	nop
  404574:	nop
  404575:	nop
  404576:	nop
  404577:	nop
  404578:	nop
  404579:	nop
  40457a:	nop
  40457b:	nop
  40457c:	nop
  40457d:	nop
  40457e:	nop
  40457f:	nop
  404580:	sub    rsp,0x58
  404584:	mov    rax,QWORD PTR [rip+0x93d5]        # 0x40d960
  40458b:	test   rax,rax
  40458e:	je     0x4045bc
  404590:	movsd  xmm0,QWORD PTR [rsp+0x80]
  404599:	mov    DWORD PTR [rsp+0x20],ecx
  40459d:	lea    rcx,[rsp+0x20]
  4045a2:	mov    QWORD PTR [rsp+0x28],rdx
  4045a7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4045ad:	movsd  QWORD PTR [rsp+0x38],xmm3
  4045b3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4045b9:	call   rax
  4045bb:	nop
  4045bc:	add    rsp,0x58
  4045c0:	ret    
  4045c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4045c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045d0:	mov    QWORD PTR [rip+0x9389],rcx        # 0x40d960
  4045d7:	jmp    0x4057d8
  4045dc:	nop    DWORD PTR [rax+0x0]
  4045e0:	push   rsi
  4045e1:	push   rbx
  4045e2:	sub    rsp,0x78
  4045e6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4045eb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4045f0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4045f6:	cmp    DWORD PTR [rcx],0x6
  4045f9:	ja     0x4046d0
  4045ff:	mov    edx,DWORD PTR [rcx]
  404601:	lea    rax,[rip+0x567c]        # 0x409c84
  404608:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40460c:	add    rax,rdx
  40460f:	jmp    rax
  404611:	lea    rbx,[rip+0x5548]        # 0x409b60
  404618:	nop    DWORD PTR [rax+rax*1+0x0]
  404620:	movsd  xmm8,QWORD PTR [rcx+0x20]
  404626:	mov    rsi,QWORD PTR [rcx+0x8]
  40462a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40462f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  404634:	call   0x4057f0
  404639:	movsd  QWORD PTR [rsp+0x30],xmm8
  404640:	lea    rcx,[rax+0x60]
  404644:	lea    rdx,[rip+0x560d]        # 0x409c58
  40464b:	movsd  QWORD PTR [rsp+0x28],xmm7
  404651:	mov    r9,rsi
  404654:	mov    r8,rbx
  404657:	movsd  QWORD PTR [rsp+0x20],xmm6
  40465d:	call   0x405748
  404662:	nop
  404663:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  404668:	xor    eax,eax
  40466a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40466f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  404675:	add    rsp,0x78
  404679:	pop    rbx
  40467a:	pop    rsi
  40467b:	ret    
  40467c:	nop    DWORD PTR [rax+0x0]
  404680:	lea    rbx,[rip+0x54f8]        # 0x409b7f
  404687:	jmp    0x404620
  404689:	nop    DWORD PTR [rax+0x0]
  404690:	lea    rbx,[rip+0x5509]        # 0x409ba0
  404697:	jmp    0x404620
  404699:	nop    DWORD PTR [rax+0x0]
  4046a0:	lea    rbx,[rip+0x5569]        # 0x409c10
  4046a7:	jmp    0x404620
  4046ac:	nop    DWORD PTR [rax+0x0]
  4046b0:	lea    rbx,[rip+0x5531]        # 0x409be8
  4046b7:	jmp    0x404620
  4046bc:	nop    DWORD PTR [rax+0x0]
  4046c0:	lea    rbx,[rip+0x54f9]        # 0x409bc0
  4046c7:	jmp    0x404620
  4046cc:	nop    DWORD PTR [rax+0x0]
  4046d0:	lea    rbx,[rip+0x556f]        # 0x409c46
  4046d7:	jmp    0x404620
  4046dc:	nop
  4046dd:	nop
  4046de:	nop
  4046df:	nop
  4046e0:	fninit 
  4046e2:	ret    
  4046e3:	nop
  4046e4:	nop
  4046e5:	nop
  4046e6:	nop
  4046e7:	nop
  4046e8:	nop
  4046e9:	nop
  4046ea:	nop
  4046eb:	nop
  4046ec:	nop
  4046ed:	nop
  4046ee:	nop
  4046ef:	nop
  4046f0:	mov    rax,rcx
  4046f3:	ret    
  4046f4:	xchg   ax,ax
  4046f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404700:	mov    rax,rcx
  404703:	ret    
  404704:	nop
  404705:	nop
  404706:	nop
  404707:	nop
  404708:	nop
  404709:	nop
  40470a:	nop
  40470b:	nop
  40470c:	nop
  40470d:	nop
  40470e:	nop
  40470f:	nop
  404710:	push   rsi
  404711:	push   rbx
  404712:	sub    rsp,0x38
  404716:	lea    rax,[rsp+0x58]
  40471b:	mov    rbx,rcx
  40471e:	mov    QWORD PTR [rsp+0x58],rdx
  404723:	mov    QWORD PTR [rsp+0x60],r8
  404728:	mov    QWORD PTR [rsp+0x68],r9
  40472d:	mov    QWORD PTR [rsp+0x28],rax
  404732:	call   0x4057f0
  404737:	lea    rcx,[rip+0x5562]        # 0x409ca0
  40473e:	lea    r9,[rax+0x60]
  404742:	mov    r8d,0x1b
  404748:	mov    edx,0x1
  40474d:	call   0x405728
  404752:	mov    rsi,QWORD PTR [rsp+0x28]
  404757:	call   0x4057f0
  40475c:	lea    rcx,[rax+0x60]
  404760:	mov    rdx,rbx
  404763:	mov    r8,rsi
  404766:	call   0x4056b0
  40476b:	call   0x405780
  404770:	nop
  404771:	nop    DWORD PTR [rax+rax*1+0x0]
  404776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404780:	push   r13
  404782:	push   r12
  404784:	push   rbp
  404785:	push   rdi
  404786:	push   rsi
  404787:	push   rbx
  404788:	sub    rsp,0x58
  40478c:	movsxd rbp,DWORD PTR [rip+0x91f1]        # 0x40d984
  404793:	mov    rbx,rcx
  404796:	mov    rsi,rdx
  404799:	mov    rdi,r8
  40479c:	test   ebp,ebp
  40479e:	jle    0x40489a
  4047a4:	mov    rax,QWORD PTR [rip+0x91dd]        # 0x40d988
  4047ab:	xor    r9d,r9d
  4047ae:	add    rax,0x8
  4047b2:	mov    r10,QWORD PTR [rax]
  4047b5:	cmp    rbx,r10
  4047b8:	jb     0x4047ce
  4047ba:	mov    rdx,QWORD PTR [rax+0x8]
  4047be:	mov    r11d,DWORD PTR [rdx+0x8]
  4047c2:	add    r10,r11
  4047c5:	cmp    rbx,r10
  4047c8:	jb     0x404880
  4047ce:	add    r9d,0x1
  4047d2:	add    rax,0x18
  4047d6:	cmp    r9d,ebp
  4047d9:	jne    0x4047b2
  4047db:	mov    rcx,rbx
  4047de:	call   0x4053f0
  4047e3:	test   rax,rax
  4047e6:	mov    r12,rax
  4047e9:	je     0x4048d2
  4047ef:	lea    rbp,[rbp+rbp*2+0x0]
  4047f4:	shl    rbp,0x3
  4047f8:	mov    r13,rbp
  4047fb:	add    r13,QWORD PTR [rip+0x9186]        # 0x40d988
  404802:	mov    QWORD PTR [r13+0x10],rax
  404806:	mov    DWORD PTR [r13+0x0],0x0
  40480e:	call   0x405510
  404813:	mov    edx,DWORD PTR [r12+0xc]
  404818:	mov    r8d,0x30
  40481e:	add    rax,rdx
  404821:	lea    rdx,[rsp+0x20]
  404826:	mov    QWORD PTR [r13+0x8],rax
  40482a:	mov    rax,QWORD PTR [rip+0x9157]        # 0x40d988
  404831:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  404836:	call   QWORD PTR [rip+0x9bb4]        # 0x40e3f0
  40483c:	test   rax,rax
  40483f:	je     0x4048b5
  404841:	mov    eax,DWORD PTR [rsp+0x44]
  404845:	lea    edx,[rax-0x4]
  404848:	and    edx,0xfffffffb
  40484b:	je     0x404879
  40484d:	sub    eax,0x40
  404850:	and    eax,0xffffffbf
  404853:	je     0x404879
  404855:	mov    r9,rbp
  404858:	add    r9,QWORD PTR [rip+0x9129]        # 0x40d988
  40485f:	mov    r8d,0x40
  404865:	mov    rdx,QWORD PTR [rsp+0x38]
  40486a:	mov    rcx,QWORD PTR [rsp+0x20]
  40486f:	call   QWORD PTR [rip+0x9b73]        # 0x40e3e8
  404875:	test   eax,eax
  404877:	je     0x4048a1
  404879:	add    DWORD PTR [rip+0x9104],0x1        # 0x40d984
  404880:	mov    r8,rdi
  404883:	mov    rdx,rsi
  404886:	mov    rcx,rbx
  404889:	add    rsp,0x58
  40488d:	pop    rbx
  40488e:	pop    rsi
  40488f:	pop    rdi
  404890:	pop    rbp
  404891:	pop    r12
  404893:	pop    r13
  404895:	jmp    0x405718
  40489a:	xor    ebp,ebp
  40489c:	jmp    0x4047db
  4048a1:	call   QWORD PTR [rip+0x9ab9]        # 0x40e360
  4048a7:	lea    rcx,[rip+0x546a]        # 0x409d18
  4048ae:	mov    edx,eax
  4048b0:	call   0x404710
  4048b5:	mov    rax,QWORD PTR [rip+0x90cc]        # 0x40d988
  4048bc:	mov    edx,DWORD PTR [r12+0x8]
  4048c1:	lea    rcx,[rip+0x5418]        # 0x409ce0
  4048c8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4048cd:	call   0x404710
  4048d2:	lea    rcx,[rip+0x53e7]        # 0x409cc0
  4048d9:	mov    rdx,rbx
  4048dc:	call   0x404710
  4048e1:	nop
  4048e2:	nop    DWORD PTR [rax+0x0]
  4048e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048f0:	push   rbp
  4048f1:	push   r14
  4048f3:	push   r13
  4048f5:	push   r12
  4048f7:	push   rdi
  4048f8:	push   rsi
  4048f9:	push   rbx
  4048fa:	mov    rbp,rsp
  4048fd:	sub    rsp,0x60
  404901:	mov    ebx,DWORD PTR [rip+0x9079]        # 0x40d980
  404907:	test   ebx,ebx
  404909:	je     0x404920
  40490b:	mov    rsp,rbp
  40490e:	pop    rbx
  40490f:	pop    rsi
  404910:	pop    rdi
  404911:	pop    r12
  404913:	pop    r13
  404915:	pop    r14
  404917:	pop    rbp
  404918:	ret    
  404919:	nop    DWORD PTR [rax+0x0]
  404920:	mov    DWORD PTR [rip+0x9056],0x1        # 0x40d980
  40492a:	call   0x405440
  40492f:	cdqe   
  404931:	lea    rax,[rax+rax*2]
  404935:	lea    rax,[rax*8+0x1e]
  40493d:	and    rax,0xfffffffffffffff0
  404941:	call   0x405660
  404946:	mov    rsi,QWORD PTR [rip+0x54a3]        # 0x409df0
  40494d:	mov    rbx,QWORD PTR [rip+0x54ac]        # 0x409e00
  404954:	sub    rsp,rax
  404957:	mov    DWORD PTR [rip+0x9023],0x0        # 0x40d984
  404961:	lea    rax,[rsp+0x20]
  404966:	mov    QWORD PTR [rip+0x901b],rax        # 0x40d988
  40496d:	mov    rax,rsi
  404970:	sub    rax,rbx
  404973:	cmp    rax,0x7
  404977:	jle    0x40490b
  404979:	cmp    rax,0xb
  40497d:	jle    0x4049a5
  40497f:	mov    r11d,DWORD PTR [rbx]
  404982:	test   r11d,r11d
  404985:	jne    0x404ad0
  40498b:	mov    r10d,DWORD PTR [rbx+0x4]
  40498f:	test   r10d,r10d
  404992:	jne    0x404ad0
  404998:	mov    r9d,DWORD PTR [rbx+0x8]
  40499c:	test   r9d,r9d
  40499f:	jne    0x4049bc
  4049a1:	add    rbx,0xc
  4049a5:	mov    r8d,DWORD PTR [rbx]
  4049a8:	test   r8d,r8d
  4049ab:	jne    0x404ad0
  4049b1:	mov    ecx,DWORD PTR [rbx+0x4]
  4049b4:	test   ecx,ecx
  4049b6:	jne    0x404ad0
  4049bc:	mov    edx,DWORD PTR [rbx+0x8]
  4049bf:	cmp    edx,0x1
  4049c2:	jne    0x404bdc
  4049c8:	add    rbx,0xc
  4049cc:	cmp    rbx,rsi
  4049cf:	jae    0x40490b
  4049d5:	mov    r12,QWORD PTR [rip+0x5444]        # 0x409e20
  4049dc:	lea    r13,[rbp-0x30]
  4049e0:	movabs r14,0xffffffff00000000
  4049ea:	mov    ecx,DWORD PTR [rbx+0x4]
  4049ed:	mov    eax,DWORD PTR [rbx]
  4049ef:	movzx  edx,BYTE PTR [rbx+0x8]
  4049f3:	add    rax,r12
  4049f6:	add    rcx,r12
  4049f9:	cmp    edx,0x10
  4049fc:	mov    r8,QWORD PTR [rax]
  4049ff:	je     0x404b46
  404a05:	jbe    0x404b0d
  404a0b:	cmp    edx,0x20
  404a0e:	je     0x404b8f
  404a14:	cmp    edx,0x40
  404a17:	jne    0x404b7b
  404a1d:	sub    r8,rax
  404a20:	mov    rdx,r13
  404a23:	mov    rdi,r13
  404a26:	mov    rax,r8
  404a29:	add    rax,QWORD PTR [rcx]
  404a2c:	mov    r8d,0x8
  404a32:	mov    QWORD PTR [rbp-0x30],rax
  404a36:	call   0x404780
  404a3b:	add    rbx,0xc
  404a3f:	cmp    rbx,rsi
  404a42:	jb     0x4049ea
  404a44:	mov    eax,DWORD PTR [rip+0x8f3a]        # 0x40d984
  404a4a:	xor    ebx,ebx
  404a4c:	xor    esi,esi
  404a4e:	test   eax,eax
  404a50:	jle    0x40490b
  404a56:	mov    r14,QWORD PTR [rip+0x9993]        # 0x40e3f0
  404a5d:	lea    r13,[rbp-0x34]
  404a61:	mov    r12,QWORD PTR [rip+0x9980]        # 0x40e3e8
  404a68:	jmp    0x404a83
  404a6a:	nop    WORD PTR [rax+rax*1+0x0]
  404a70:	add    esi,0x1
  404a73:	add    rbx,0x18
  404a77:	cmp    esi,DWORD PTR [rip+0x8f07]        # 0x40d984
  404a7d:	jge    0x40490b
  404a83:	mov    rax,rbx
  404a86:	add    rax,QWORD PTR [rip+0x8efb]        # 0x40d988
  404a8d:	mov    edx,DWORD PTR [rax]
  404a8f:	test   edx,edx
  404a91:	je     0x404a70
  404a93:	mov    rcx,QWORD PTR [rax+0x8]
  404a97:	mov    r8d,0x30
  404a9d:	mov    rdx,rdi
  404aa0:	call   r14
  404aa3:	test   rax,rax
  404aa6:	je     0x404bbe
  404aac:	mov    rax,QWORD PTR [rip+0x8ed5]        # 0x40d988
  404ab3:	mov    r9,r13
  404ab6:	mov    rdx,QWORD PTR [rbp-0x18]
  404aba:	mov    rcx,QWORD PTR [rbp-0x30]
  404abe:	mov    r8d,DWORD PTR [rax+rbx*1]
  404ac2:	call   r12
  404ac5:	jmp    0x404a70
  404ac7:	nop    WORD PTR [rax+rax*1+0x0]
  404ad0:	cmp    rbx,rsi
  404ad3:	jae    0x40490b
  404ad9:	mov    r12,QWORD PTR [rip+0x5340]        # 0x409e20
  404ae0:	lea    rdi,[rbp-0x30]
  404ae4:	mov    ecx,DWORD PTR [rbx+0x4]
  404ae7:	mov    eax,DWORD PTR [rbx]
  404ae9:	mov    r8d,0x4
  404aef:	mov    rdx,rdi
  404af2:	add    rbx,0x8
  404af6:	add    rcx,r12
  404af9:	add    eax,DWORD PTR [rcx]
  404afb:	mov    DWORD PTR [rbp-0x30],eax
  404afe:	call   0x404780
  404b03:	cmp    rbx,rsi
  404b06:	jb     0x404ae4
  404b08:	jmp    0x404a44
  404b0d:	cmp    edx,0x8
  404b10:	jne    0x404b7b
  404b12:	movzx  edx,BYTE PTR [rcx]
  404b15:	mov    rdi,r13
  404b18:	mov    r10,rdx
  404b1b:	or     r10,0xffffffffffffff00
  404b22:	test   dl,dl
  404b24:	cmovs  rdx,r10
  404b28:	sub    rdx,rax
  404b2b:	lea    rax,[r8+rdx*1]
  404b2f:	mov    r8d,0x1
  404b35:	mov    rdx,r13
  404b38:	mov    QWORD PTR [rbp-0x30],rax
  404b3c:	call   0x404780
  404b41:	jmp    0x404a3b
  404b46:	movzx  edx,WORD PTR [rcx]
  404b49:	mov    rdi,r13
  404b4c:	mov    r10,rdx
  404b4f:	or     r10,0xffffffffffff0000
  404b56:	test   dx,dx
  404b59:	cmovs  rdx,r10
  404b5d:	sub    rdx,rax
  404b60:	lea    rax,[r8+rdx*1]
  404b64:	mov    r8d,0x2
  404b6a:	mov    rdx,r13
  404b6d:	mov    QWORD PTR [rbp-0x30],rax
  404b71:	call   0x404780
  404b76:	jmp    0x404a3b
  404b7b:	lea    rcx,[rip+0x51f6]        # 0x409d78
  404b82:	mov    QWORD PTR [rbp-0x30],0x0
  404b8a:	call   0x404710
  404b8f:	mov    edx,DWORD PTR [rcx]
  404b91:	mov    rdi,r13
  404b94:	mov    r10,rdx
  404b97:	or     r10,r14
  404b9a:	test   edx,edx
  404b9c:	cmovs  rdx,r10
  404ba0:	sub    rdx,rax
  404ba3:	lea    rax,[r8+rdx*1]
  404ba7:	mov    r8d,0x4
  404bad:	mov    rdx,r13
  404bb0:	mov    QWORD PTR [rbp-0x30],rax
  404bb4:	call   0x404780
  404bb9:	jmp    0x404a3b
  404bbe:	add    rbx,QWORD PTR [rip+0x8dc3]        # 0x40d988
  404bc5:	lea    rcx,[rip+0x5114]        # 0x409ce0
  404bcc:	mov    rax,QWORD PTR [rbx+0x10]
  404bd0:	mov    r8,QWORD PTR [rbx+0x8]
  404bd4:	mov    edx,DWORD PTR [rax+0x8]
  404bd7:	call   0x404710
  404bdc:	lea    rcx,[rip+0x515d]        # 0x409d40
  404be3:	call   0x404710
  404be8:	nop
  404be9:	nop
  404bea:	nop
  404beb:	nop
  404bec:	nop
  404bed:	nop
  404bee:	nop
  404bef:	nop
  404bf0:	sub    rsp,0x28
  404bf4:	mov    eax,DWORD PTR [rcx]
  404bf6:	cmp    eax,0xc0000091
  404bfb:	ja     0x404c60
  404bfd:	cmp    eax,0xc000008d
  404c02:	jae    0x404c7f
  404c04:	cmp    eax,0xc0000008
  404c09:	je     0x404d20
  404c0f:	ja     0x404cf0
  404c15:	cmp    eax,0x80000002
  404c1a:	je     0x404d20
  404c20:	cmp    eax,0xc0000005
  404c25:	jne    0x404cfe
  404c2b:	xor    edx,edx
  404c2d:	mov    ecx,0xb
  404c32:	call   0x4056e8
  404c37:	cmp    rax,0x1
  404c3b:	je     0x404d80
  404c41:	test   rax,rax
  404c44:	je     0x404d60
  404c4a:	mov    ecx,0xb
  404c4f:	call   rax
  404c51:	xor    eax,eax
  404c53:	add    rsp,0x28
  404c57:	ret    
  404c58:	nop    DWORD PTR [rax+rax*1+0x0]
  404c60:	cmp    eax,0xc0000094
  404c65:	je     0x404d30
  404c6b:	ja     0x404cb0
  404c6d:	cmp    eax,0xc0000092
  404c72:	je     0x404d20
  404c78:	cmp    eax,0xc0000093
  404c7d:	jne    0x404cfe
  404c7f:	xor    edx,edx
  404c81:	mov    ecx,0x8
  404c86:	call   0x4056e8
  404c8b:	cmp    rax,0x1
  404c8f:	mov    rdx,rax
  404c92:	je     0x404d08
  404c94:	test   rdx,rdx
  404c97:	mov    eax,0x1
  404c9c:	je     0x404c53
  404c9e:	mov    ecx,0x8
  404ca3:	call   rdx
  404ca5:	xor    eax,eax
  404ca7:	add    rsp,0x28
  404cab:	ret    
  404cac:	nop    DWORD PTR [rax+0x0]
  404cb0:	cmp    eax,0xc0000095
  404cb5:	je     0x404d20
  404cb7:	cmp    eax,0xc0000096
  404cbc:	jne    0x404cfe
  404cbe:	xor    edx,edx
  404cc0:	mov    ecx,0x4
  404cc5:	call   0x4056e8
  404cca:	cmp    rax,0x1
  404cce:	je     0x404d6a
  404cd4:	test   rax,rax
  404cd7:	je     0x404d60
  404cdd:	mov    ecx,0x4
  404ce2:	call   rax
  404ce4:	xor    eax,eax
  404ce6:	jmp    0x404c53
  404ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  404cf0:	cmp    eax,0xc000001d
  404cf5:	je     0x404cbe
  404cf7:	cmp    eax,0xc000008c
  404cfc:	je     0x404d20
  404cfe:	mov    eax,0x1
  404d03:	add    rsp,0x28
  404d07:	ret    
  404d08:	mov    edx,0x1
  404d0d:	mov    ecx,0x8
  404d12:	call   0x4056e8
  404d17:	call   0x4046e0
  404d1c:	nop    DWORD PTR [rax+0x0]
  404d20:	xor    eax,eax
  404d22:	add    rsp,0x28
  404d26:	ret    
  404d27:	nop    WORD PTR [rax+rax*1+0x0]
  404d30:	xor    edx,edx
  404d32:	mov    ecx,0x8
  404d37:	call   0x4056e8
  404d3c:	cmp    rax,0x1
  404d40:	mov    rdx,rax
  404d43:	jne    0x404c94
  404d49:	mov    edx,0x1
  404d4e:	mov    ecx,0x8
  404d53:	call   0x4056e8
  404d58:	xor    eax,eax
  404d5a:	jmp    0x404c53
  404d5f:	nop
  404d60:	mov    eax,0x4
  404d65:	add    rsp,0x28
  404d69:	ret    
  404d6a:	mov    edx,0x1
  404d6f:	mov    ecx,0x4
  404d74:	call   0x4056e8
  404d79:	xor    eax,eax
  404d7b:	jmp    0x404c53
  404d80:	mov    edx,0x1
  404d85:	mov    ecx,0xb
  404d8a:	call   0x4056e8
  404d8f:	xor    eax,eax
  404d91:	jmp    0x404c53
  404d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404da0:	push   r12
  404da2:	push   rbp
  404da3:	push   rdi
  404da4:	push   rsi
  404da5:	push   rbx
  404da6:	sub    rsp,0x20
  404daa:	call   0x405510
  404daf:	mov    rbp,rax
  404db2:	mov    eax,DWORD PTR [rip+0x8c10]        # 0x40d9c8
  404db8:	test   eax,eax
  404dba:	jne    0x404de1
  404dbc:	test   rbp,rbp
  404dbf:	je     0x404de1
  404dc1:	lea    rcx,[rip+0x4fe8]        # 0x409db0
  404dc8:	mov    DWORD PTR [rip+0x8bf6],0x1        # 0x40d9c8
  404dd2:	call   0x405350
  404dd7:	test   rax,rax
  404dda:	je     0x404df0
  404ddc:	mov    eax,0x1
  404de1:	add    rsp,0x20
  404de5:	pop    rbx
  404de6:	pop    rsi
  404de7:	pop    rdi
  404de8:	pop    rbp
  404de9:	pop    r12
  404deb:	ret    
  404dec:	nop    DWORD PTR [rax+0x0]
  404df0:	lea    rbx,[rip+0x8d09]        # 0x40db00
  404df7:	mov    ecx,0x30
  404dfc:	lea    rdx,[rip+0x8bfd]        # 0x40da00
  404e03:	lea    r12,[rip+0xfffffffffffffde6]        # 0x404bf0
  404e0a:	xor    esi,esi
  404e0c:	mov    rdi,rbx
  404e0f:	rep stos QWORD PTR es:[rdi],rax
  404e12:	mov    rdi,rdx
  404e15:	sub    r12,rbp
  404e18:	mov    cl,0x20
  404e1a:	rep stos QWORD PTR es:[rdi],rax
  404e1d:	mov    rdi,rdx
  404e20:	jmp    0x404e50
  404e22:	mov    BYTE PTR [rdi],0x9
  404e25:	mov    DWORD PTR [rdi+0x4],r12d
  404e29:	add    rsi,0x1
  404e2d:	mov    edx,DWORD PTR [rax+0xc]
  404e30:	add    rbx,0xc
  404e34:	mov    DWORD PTR [rbx-0xc],edx
  404e37:	add    edx,DWORD PTR [rax+0x8]
  404e3a:	mov    rax,rdi
  404e3d:	sub    rax,rbp
  404e40:	add    rdi,0x8
  404e44:	mov    DWORD PTR [rbx-0x4],eax
  404e47:	mov    DWORD PTR [rbx-0x8],edx
  404e4a:	cmp    rsi,0x20
  404e4e:	je     0x404e85
  404e50:	mov    rcx,rsi
  404e53:	call   0x405480
  404e58:	test   rax,rax
  404e5b:	jne    0x404e22
  404e5d:	test   rsi,rsi
  404e60:	je     0x404ddc
  404e66:	mov    edx,esi
  404e68:	nop    DWORD PTR [rax+rax*1+0x0]
  404e70:	mov    r8,rbp
  404e73:	lea    rcx,[rip+0x8c86]        # 0x40db00
  404e7a:	call   QWORD PTR [rip+0x9518]        # 0x40e398
  404e80:	jmp    0x404ddc
  404e85:	mov    edx,0x20
  404e8a:	jmp    0x404e70
  404e8c:	nop    DWORD PTR [rax+0x0]
  404e90:	push   rbx
  404e91:	sub    rsp,0x20
  404e95:	mov    rdx,QWORD PTR [rcx]
  404e98:	mov    eax,DWORD PTR [rdx]
  404e9a:	mov    r8d,eax
  404e9d:	and    r8d,0x20ffffff
  404ea4:	cmp    r8d,0x20474343
  404eab:	je     0x404fb0
  404eb1:	cmp    eax,0xc0000091
  404eb6:	mov    rbx,rcx
  404eb9:	ja     0x404f40
  404ebf:	cmp    eax,0xc000008d
  404ec4:	jae    0x404f57
  404eca:	cmp    eax,0xc0000008
  404ecf:	je     0x404f03
  404ed1:	ja     0x404f10
  404ed3:	cmp    eax,0x80000002
  404ed8:	je     0x404f03
  404eda:	cmp    eax,0xc0000005
  404edf:	jne    0x404f22
  404ee1:	xor    edx,edx
  404ee3:	mov    ecx,0xb
  404ee8:	call   0x4056e8
  404eed:	cmp    rax,0x1
  404ef1:	je     0x405020
  404ef7:	test   rax,rax
  404efa:	je     0x404f22
  404efc:	mov    ecx,0xb
  404f01:	call   rax
  404f03:	mov    eax,0xffffffff
  404f08:	add    rsp,0x20
  404f0c:	pop    rbx
  404f0d:	ret    
  404f0e:	xchg   ax,ax
  404f10:	cmp    eax,0xc000001d
  404f15:	je     0x404fd6
  404f1b:	cmp    eax,0xc000008c
  404f20:	je     0x404f03
  404f22:	mov    rax,QWORD PTR [rip+0x8a97]        # 0x40d9c0
  404f29:	test   rax,rax
  404f2c:	je     0x404f08
  404f2e:	mov    rcx,rbx
  404f31:	add    rsp,0x20
  404f35:	pop    rbx
  404f36:	rex.W jmp rax
  404f39:	nop    DWORD PTR [rax+0x0]
  404f40:	cmp    eax,0xc0000094
  404f45:	je     0x404f82
  404f47:	ja     0x404fc0
  404f49:	cmp    eax,0xc0000092
  404f4e:	je     0x404f03
  404f50:	cmp    eax,0xc0000093
  404f55:	jne    0x404f22
  404f57:	xor    edx,edx
  404f59:	mov    ecx,0x8
  404f5e:	call   0x4056e8
  404f63:	cmp    rax,0x1
  404f67:	jne    0x404f94
  404f69:	mov    edx,0x1
  404f6e:	mov    ecx,0x8
  404f73:	call   0x4056e8
  404f78:	call   0x4046e0
  404f7d:	jmp    0x404f03
  404f82:	xor    edx,edx
  404f84:	mov    ecx,0x8
  404f89:	call   0x4056e8
  404f8e:	cmp    rax,0x1
  404f92:	je     0x405002
  404f94:	test   rax,rax
  404f97:	je     0x404f22
  404f99:	mov    ecx,0x8
  404f9e:	call   rax
  404fa0:	mov    eax,0xffffffff
  404fa5:	jmp    0x404f08
  404faa:	nop    WORD PTR [rax+rax*1+0x0]
  404fb0:	test   BYTE PTR [rdx+0x4],0x1
  404fb4:	jne    0x404eb1
  404fba:	jmp    0x404f03
  404fbf:	nop
  404fc0:	cmp    eax,0xc0000095
  404fc5:	je     0x404f03
  404fcb:	cmp    eax,0xc0000096
  404fd0:	jne    0x404f22
  404fd6:	xor    edx,edx
  404fd8:	mov    ecx,0x4
  404fdd:	call   0x4056e8
  404fe2:	cmp    rax,0x1
  404fe6:	je     0x405034
  404fe8:	test   rax,rax
  404feb:	je     0x404f22
  404ff1:	mov    ecx,0x4
  404ff6:	call   rax
  404ff8:	mov    eax,0xffffffff
  404ffd:	jmp    0x404f08
  405002:	mov    edx,0x1
  405007:	mov    ecx,0x8
  40500c:	call   0x4056e8
  405011:	jmp    0x404f03
  405016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405020:	mov    edx,0x1
  405025:	mov    ecx,0xb
  40502a:	call   0x4056e8
  40502f:	jmp    0x404f03
  405034:	mov    edx,0x1
  405039:	mov    ecx,0x4
  40503e:	call   0x4056e8
  405043:	jmp    0x404f03
  405048:	nop
  405049:	nop
  40504a:	nop
  40504b:	nop
  40504c:	nop
  40504d:	nop
  40504e:	nop
  40504f:	nop
  405050:	push   rbp
  405051:	push   rdi
  405052:	push   rsi
  405053:	push   rbx
  405054:	sub    rsp,0x28
  405058:	lea    rcx,[rip+0x8c41]        # 0x40dca0
  40505f:	call   QWORD PTR [rip+0x92d3]        # 0x40e338
  405065:	mov    rbx,QWORD PTR [rip+0x8c14]        # 0x40dc80
  40506c:	test   rbx,rbx
  40506f:	je     0x4050a4
  405071:	mov    rbp,QWORD PTR [rip+0x9360]        # 0x40e3d8
  405078:	mov    rdi,QWORD PTR [rip+0x92e1]        # 0x40e360
  40507f:	nop
  405080:	mov    ecx,DWORD PTR [rbx]
  405082:	call   rbp
  405084:	mov    rsi,rax
  405087:	call   rdi
  405089:	test   eax,eax
  40508b:	jne    0x40509b
  40508d:	test   rsi,rsi
  405090:	je     0x40509b
  405092:	mov    rax,QWORD PTR [rbx+0x8]
  405096:	mov    rcx,rsi
  405099:	call   rax
  40509b:	mov    rbx,QWORD PTR [rbx+0x10]
  40509f:	test   rbx,rbx
  4050a2:	jne    0x405080
  4050a4:	mov    rax,QWORD PTR [rip+0x92dd]        # 0x40e388
  4050ab:	lea    rcx,[rip+0x8bee]        # 0x40dca0
  4050b2:	add    rsp,0x28
  4050b6:	pop    rbx
  4050b7:	pop    rsi
  4050b8:	pop    rdi
  4050b9:	pop    rbp
  4050ba:	rex.W jmp rax
  4050bd:	nop    DWORD PTR [rax]
  4050c0:	push   rdi
  4050c1:	push   rsi
  4050c2:	push   rbx
  4050c3:	sub    rsp,0x20
  4050c7:	mov    eax,DWORD PTR [rip+0x8bbb]        # 0x40dc88
  4050cd:	test   eax,eax
  4050cf:	jne    0x4050e0
  4050d1:	add    rsp,0x20
  4050d5:	pop    rbx
  4050d6:	pop    rsi
  4050d7:	pop    rdi
  4050d8:	ret    
  4050d9:	nop    DWORD PTR [rax+0x0]
  4050e0:	mov    rsi,rdx
  4050e3:	mov    edi,ecx
  4050e5:	mov    edx,0x18
  4050ea:	mov    ecx,0x1
  4050ef:	call   0x405778
  4050f4:	test   rax,rax
  4050f7:	mov    rbx,rax
  4050fa:	je     0x405138
  4050fc:	mov    DWORD PTR [rax],edi
  4050fe:	mov    QWORD PTR [rax+0x8],rsi
  405102:	lea    rcx,[rip+0x8b97]        # 0x40dca0
  405109:	call   QWORD PTR [rip+0x9229]        # 0x40e338
  40510f:	mov    rax,QWORD PTR [rip+0x8b6a]        # 0x40dc80
  405116:	lea    rcx,[rip+0x8b83]        # 0x40dca0
  40511d:	mov    QWORD PTR [rip+0x8b5c],rbx        # 0x40dc80
  405124:	mov    QWORD PTR [rbx+0x10],rax
  405128:	call   QWORD PTR [rip+0x925a]        # 0x40e388
  40512e:	xor    eax,eax
  405130:	add    rsp,0x20
  405134:	pop    rbx
  405135:	pop    rsi
  405136:	pop    rdi
  405137:	ret    
  405138:	mov    eax,0xffffffff
  40513d:	jmp    0x4050d1
  40513f:	nop
  405140:	push   rbx
  405141:	sub    rsp,0x20
  405145:	mov    eax,DWORD PTR [rip+0x8b3d]        # 0x40dc88
  40514b:	test   eax,eax
  40514d:	jne    0x405160
  40514f:	xor    eax,eax
  405151:	add    rsp,0x20
  405155:	pop    rbx
  405156:	ret    
  405157:	nop    WORD PTR [rax+rax*1+0x0]
  405160:	mov    ebx,ecx
  405162:	lea    rcx,[rip+0x8b37]        # 0x40dca0
  405169:	call   QWORD PTR [rip+0x91c9]        # 0x40e338
  40516f:	mov    rdx,QWORD PTR [rip+0x8b0a]        # 0x40dc80
  405176:	test   rdx,rdx
  405179:	je     0x405197
  40517b:	mov    eax,DWORD PTR [rdx]
  40517d:	cmp    eax,ebx
  40517f:	jne    0x40518e
  405181:	jmp    0x4051cf
  405183:	mov    r8d,DWORD PTR [rax]
  405186:	cmp    r8d,ebx
  405189:	je     0x4051b0
  40518b:	mov    rdx,rax
  40518e:	mov    rax,QWORD PTR [rdx+0x10]
  405192:	test   rax,rax
  405195:	jne    0x405183
  405197:	lea    rcx,[rip+0x8b02]        # 0x40dca0
  40519e:	call   QWORD PTR [rip+0x91e4]        # 0x40e388
  4051a4:	xor    eax,eax
  4051a6:	add    rsp,0x20
  4051aa:	pop    rbx
  4051ab:	ret    
  4051ac:	nop    DWORD PTR [rax+0x0]
  4051b0:	mov    rcx,rax
  4051b3:	mov    rax,QWORD PTR [rax+0x10]
  4051b7:	mov    QWORD PTR [rdx+0x10],rax
  4051bb:	call   0x405730
  4051c0:	lea    rcx,[rip+0x8ad9]        # 0x40dca0
  4051c7:	call   QWORD PTR [rip+0x91bb]        # 0x40e388
  4051cd:	jmp    0x4051a4
  4051cf:	mov    rax,QWORD PTR [rdx+0x10]
  4051d3:	mov    rcx,rdx
  4051d6:	mov    QWORD PTR [rip+0x8aa3],rax        # 0x40dc80
  4051dd:	jmp    0x4051bb
  4051df:	nop
  4051e0:	push   rbx
  4051e1:	sub    rsp,0x20
  4051e5:	cmp    edx,0x1
  4051e8:	je     0x405280
  4051ee:	jb     0x405220
  4051f0:	cmp    edx,0x2
  4051f3:	je     0x405210
  4051f5:	cmp    edx,0x3
  4051f8:	jne    0x405215
  4051fa:	mov    eax,DWORD PTR [rip+0x8a88]        # 0x40dc88
  405200:	test   eax,eax
  405202:	je     0x405215
  405204:	call   0x405050
  405209:	jmp    0x405215
  40520b:	nop    DWORD PTR [rax+rax*1+0x0]
  405210:	call   0x4046e0
  405215:	mov    eax,0x1
  40521a:	add    rsp,0x20
  40521e:	pop    rbx
  40521f:	ret    
  405220:	mov    eax,DWORD PTR [rip+0x8a62]        # 0x40dc88
  405226:	test   eax,eax
  405228:	jne    0x4052b0
  40522e:	mov    eax,DWORD PTR [rip+0x8a54]        # 0x40dc88
  405234:	cmp    eax,0x1
  405237:	jne    0x405215
  405239:	mov    rcx,QWORD PTR [rip+0x8a40]        # 0x40dc80
  405240:	test   rcx,rcx
  405243:	je     0x405256
  405245:	mov    rbx,QWORD PTR [rcx+0x10]
  405249:	call   0x405730
  40524e:	test   rbx,rbx
  405251:	mov    rcx,rbx
  405254:	jne    0x405245
  405256:	lea    rcx,[rip+0x8a43]        # 0x40dca0
  40525d:	mov    QWORD PTR [rip+0x8a18],0x0        # 0x40dc80
  405268:	mov    DWORD PTR [rip+0x8a16],0x0        # 0x40dc88
  405272:	call   QWORD PTR [rip+0x90b8]        # 0x40e330
  405278:	jmp    0x405215
  40527a:	nop    WORD PTR [rax+rax*1+0x0]
  405280:	mov    eax,DWORD PTR [rip+0x8a02]        # 0x40dc88
  405286:	test   eax,eax
  405288:	je     0x4052a0
  40528a:	mov    eax,0x1
  40528f:	mov    DWORD PTR [rip+0x89ef],0x1        # 0x40dc88
  405299:	add    rsp,0x20
  40529d:	pop    rbx
  40529e:	ret    
  40529f:	nop
  4052a0:	lea    rcx,[rip+0x89f9]        # 0x40dca0
  4052a7:	call   QWORD PTR [rip+0x90d3]        # 0x40e380
  4052ad:	jmp    0x40528a
  4052af:	nop
  4052b0:	call   0x405050
  4052b5:	jmp    0x40522e
  4052ba:	nop
  4052bb:	nop
  4052bc:	nop
  4052bd:	nop
  4052be:	nop
  4052bf:	nop
  4052c0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4052c4:	add    rcx,rax
  4052c7:	xor    eax,eax
  4052c9:	cmp    DWORD PTR [rcx],0x4550
  4052cf:	je     0x4052d3
  4052d1:	repz ret 
  4052d3:	xor    eax,eax
  4052d5:	cmp    WORD PTR [rcx+0x18],0x20b
  4052db:	sete   al
  4052de:	ret    
  4052df:	nop
  4052e0:	cmp    WORD PTR [rcx],0x5a4d
  4052e5:	je     0x4052f0
  4052e7:	xor    eax,eax
  4052e9:	ret    
  4052ea:	nop    WORD PTR [rax+rax*1+0x0]
  4052f0:	jmp    0x4052c0
  4052f2:	nop    DWORD PTR [rax+0x0]
  4052f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405300:	movsxd rax,DWORD PTR [rcx+0x3c]
  405304:	add    rcx,rax
  405307:	movzx  eax,WORD PTR [rcx+0x14]
  40530b:	lea    rax,[rcx+rax*1+0x18]
  405310:	movzx  ecx,WORD PTR [rcx+0x6]
  405314:	test   ecx,ecx
  405316:	je     0x405341
  405318:	sub    ecx,0x1
  40531b:	lea    rcx,[rcx+rcx*4]
  40531f:	lea    r9,[rax+rcx*8+0x28]
  405324:	mov    r8d,DWORD PTR [rax+0xc]
  405328:	cmp    r8,rdx
  40532b:	mov    rcx,r8
  40532e:	ja     0x405338
  405330:	add    ecx,DWORD PTR [rax+0x8]
  405333:	cmp    rdx,rcx
  405336:	jb     0x405343
  405338:	add    rax,0x28
  40533c:	cmp    rax,r9
  40533f:	jne    0x405324
  405341:	xor    eax,eax
  405343:	repz ret 
  405345:	nop
  405346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405350:	push   rdi
  405351:	push   rsi
  405352:	push   rbx
  405353:	sub    rsp,0x20
  405357:	mov    rsi,rcx
  40535a:	call   0x4056c8
  40535f:	cmp    rax,0x8
  405363:	ja     0x405380
  405365:	mov    rbx,QWORD PTR [rip+0x4ab4]        # 0x409e20
  40536c:	xor    edi,edi
  40536e:	cmp    WORD PTR [rbx],0x5a4d
  405373:	je     0x405390
  405375:	mov    rax,rdi
  405378:	add    rsp,0x20
  40537c:	pop    rbx
  40537d:	pop    rsi
  40537e:	pop    rdi
  40537f:	ret    
  405380:	xor    edi,edi
  405382:	mov    rax,rdi
  405385:	add    rsp,0x20
  405389:	pop    rbx
  40538a:	pop    rsi
  40538b:	pop    rdi
  40538c:	ret    
  40538d:	nop    DWORD PTR [rax]
  405390:	mov    rcx,rbx
  405393:	call   0x4052c0
  405398:	test   eax,eax
  40539a:	je     0x405375
  40539c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4053a0:	add    rdx,rbx
  4053a3:	movzx  eax,WORD PTR [rdx+0x14]
  4053a7:	lea    rbx,[rdx+rax*1+0x18]
  4053ac:	movzx  eax,WORD PTR [rdx+0x6]
  4053b0:	test   eax,eax
  4053b2:	je     0x405375
  4053b4:	sub    eax,0x1
  4053b7:	lea    rax,[rax+rax*4]
  4053bb:	lea    rdi,[rbx+rax*8+0x28]
  4053c0:	jmp    0x4053cb
  4053c2:	add    rbx,0x28
  4053c6:	cmp    rbx,rdi
  4053c9:	je     0x405380
  4053cb:	mov    r8d,0x8
  4053d1:	mov    rdx,rsi
  4053d4:	mov    rcx,rbx
  4053d7:	call   0x4056c0
  4053dc:	test   eax,eax
  4053de:	jne    0x4053c2
  4053e0:	mov    rdi,rbx
  4053e3:	mov    rax,rdi
  4053e6:	add    rsp,0x20
  4053ea:	pop    rbx
  4053eb:	pop    rsi
  4053ec:	pop    rdi
  4053ed:	ret    
  4053ee:	xchg   ax,ax
  4053f0:	push   rsi
  4053f1:	push   rbx
  4053f2:	sub    rsp,0x28
  4053f6:	mov    rbx,QWORD PTR [rip+0x4a23]        # 0x409e20
  4053fd:	cmp    WORD PTR [rbx],0x5a4d
  405402:	je     0x405410
  405404:	xor    eax,eax
  405406:	add    rsp,0x28
  40540a:	pop    rbx
  40540b:	pop    rsi
  40540c:	ret    
  40540d:	nop    DWORD PTR [rax]
  405410:	mov    rsi,rcx
  405413:	mov    rcx,rbx
  405416:	call   0x4052c0
  40541b:	test   eax,eax
  40541d:	je     0x405404
  40541f:	sub    rsi,rbx
  405422:	mov    rcx,rbx
  405425:	mov    rdx,rsi
  405428:	add    rsp,0x28
  40542c:	pop    rbx
  40542d:	pop    rsi
  40542e:	jmp    0x405300
  405433:	nop    DWORD PTR [rax]
  405436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405440:	push   rbx
  405441:	sub    rsp,0x20
  405445:	mov    rbx,QWORD PTR [rip+0x49d4]        # 0x409e20
  40544c:	xor    eax,eax
  40544e:	cmp    WORD PTR [rbx],0x5a4d
  405453:	je     0x405460
  405455:	add    rsp,0x20
  405459:	pop    rbx
  40545a:	ret    
  40545b:	nop    DWORD PTR [rax+rax*1+0x0]
  405460:	mov    rcx,rbx
  405463:	call   0x4052c0
  405468:	test   eax,eax
  40546a:	je     0x405455
  40546c:	movsxd rax,DWORD PTR [rbx+0x3c]
  405470:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  405475:	add    rsp,0x20
  405479:	pop    rbx
  40547a:	ret    
  40547b:	nop    DWORD PTR [rax+rax*1+0x0]
  405480:	push   rdi
  405481:	push   rsi
  405482:	push   rbx
  405483:	sub    rsp,0x20
  405487:	mov    rsi,QWORD PTR [rip+0x4992]        # 0x409e20
  40548e:	xor    edi,edi
  405490:	mov    rbx,rcx
  405493:	cmp    WORD PTR [rsi],0x5a4d
  405498:	je     0x4054a5
  40549a:	mov    rax,rdi
  40549d:	add    rsp,0x20
  4054a1:	pop    rbx
  4054a2:	pop    rsi
  4054a3:	pop    rdi
  4054a4:	ret    
  4054a5:	mov    rcx,rsi
  4054a8:	call   0x4052c0
  4054ad:	test   eax,eax
  4054af:	je     0x40549a
  4054b1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4054b5:	add    rsi,rax
  4054b8:	movzx  eax,WORD PTR [rsi+0x14]
  4054bc:	lea    rdx,[rsi+rax*1+0x18]
  4054c1:	movzx  eax,WORD PTR [rsi+0x6]
  4054c5:	test   eax,eax
  4054c7:	je     0x40549a
  4054c9:	sub    eax,0x1
  4054cc:	lea    rax,[rax+rax*4]
  4054d0:	lea    rax,[rdx+rax*8+0x28]
  4054d5:	test   BYTE PTR [rdx+0x27],0x20
  4054d9:	je     0x4054e4
  4054db:	test   rbx,rbx
  4054de:	je     0x405500
  4054e0:	sub    rbx,0x1
  4054e4:	add    rdx,0x28
  4054e8:	cmp    rdx,rax
  4054eb:	jne    0x4054d5
  4054ed:	xor    edi,edi
  4054ef:	mov    rax,rdi
  4054f2:	add    rsp,0x20
  4054f6:	pop    rbx
  4054f7:	pop    rsi
  4054f8:	pop    rdi
  4054f9:	ret    
  4054fa:	nop    WORD PTR [rax+rax*1+0x0]
  405500:	mov    rdi,rdx
  405503:	mov    rax,rdi
  405506:	add    rsp,0x20
  40550a:	pop    rbx
  40550b:	pop    rsi
  40550c:	pop    rdi
  40550d:	ret    
  40550e:	xchg   ax,ax
  405510:	push   rsi
  405511:	push   rbx
  405512:	sub    rsp,0x28
  405516:	mov    rsi,QWORD PTR [rip+0x4903]        # 0x409e20
  40551d:	xor    ebx,ebx
  40551f:	cmp    WORD PTR [rsi],0x5a4d
  405524:	je     0x405530
  405526:	mov    rax,rbx
  405529:	add    rsp,0x28
  40552d:	pop    rbx
  40552e:	pop    rsi
  40552f:	ret    
  405530:	mov    rcx,rsi
  405533:	call   0x4052c0
  405538:	test   eax,eax
  40553a:	cmovne rbx,rsi
  40553e:	mov    rax,rbx
  405541:	add    rsp,0x28
  405545:	pop    rbx
  405546:	pop    rsi
  405547:	ret    
  405548:	nop    DWORD PTR [rax+rax*1+0x0]
  405550:	push   rsi
  405551:	push   rbx
  405552:	sub    rsp,0x28
  405556:	mov    rbx,QWORD PTR [rip+0x48c3]        # 0x409e20
  40555d:	xor    eax,eax
  40555f:	cmp    WORD PTR [rbx],0x5a4d
  405564:	je     0x405570
  405566:	add    rsp,0x28
  40556a:	pop    rbx
  40556b:	pop    rsi
  40556c:	ret    
  40556d:	nop    DWORD PTR [rax]
  405570:	mov    rsi,rcx
  405573:	mov    rcx,rbx
  405576:	call   0x4052c0
  40557b:	test   eax,eax
  40557d:	je     0x405566
  40557f:	sub    rsi,rbx
  405582:	mov    rcx,rbx
  405585:	mov    rdx,rsi
  405588:	call   0x405300
  40558d:	test   rax,rax
  405590:	je     0x4055a1
  405592:	mov    eax,DWORD PTR [rax+0x24]
  405595:	not    eax
  405597:	shr    eax,0x1f
  40559a:	add    rsp,0x28
  40559e:	pop    rbx
  40559f:	pop    rsi
  4055a0:	ret    
  4055a1:	xor    eax,eax
  4055a3:	jmp    0x405566
  4055a5:	nop
  4055a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055b0:	push   rbp
  4055b1:	push   rdi
  4055b2:	push   rsi
  4055b3:	push   rbx
  4055b4:	sub    rsp,0x28
  4055b8:	mov    rdi,QWORD PTR [rip+0x4861]        # 0x409e20
  4055bf:	xor    ebp,ebp
  4055c1:	mov    esi,ecx
  4055c3:	cmp    WORD PTR [rdi],0x5a4d
  4055c8:	je     0x4055e0
  4055ca:	mov    rax,rbp
  4055cd:	add    rsp,0x28
  4055d1:	pop    rbx
  4055d2:	pop    rsi
  4055d3:	pop    rdi
  4055d4:	pop    rbp
  4055d5:	ret    
  4055d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055e0:	mov    rcx,rdi
  4055e3:	call   0x4052c0
  4055e8:	test   eax,eax
  4055ea:	je     0x4055ca
  4055ec:	movsxd rax,DWORD PTR [rdi+0x3c]
  4055f0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  4055f7:	test   edx,edx
  4055f9:	je     0x4055ca
  4055fb:	mov    ebx,edx
  4055fd:	mov    rcx,rdi
  405600:	mov    rdx,rbx
  405603:	call   0x405300
  405608:	test   rax,rax
  40560b:	je     0x4055ca
  40560d:	add    rbx,rdi
  405610:	mov    rdx,rbx
  405613:	jne    0x405627
  405615:	jmp    0x4055ca
  405617:	nop    WORD PTR [rax+rax*1+0x0]
  405620:	sub    esi,0x1
  405623:	add    rdx,0x14
  405627:	mov    ecx,DWORD PTR [rdx+0x4]
  40562a:	test   ecx,ecx
  40562c:	jne    0x405635
  40562e:	mov    eax,DWORD PTR [rdx+0xc]
  405631:	test   eax,eax
  405633:	je     0x405650
  405635:	test   esi,esi
  405637:	jg     0x405620
  405639:	mov    ebp,DWORD PTR [rdx+0xc]
  40563c:	add    rbp,rdi
  40563f:	mov    rax,rbp
  405642:	add    rsp,0x28
  405646:	pop    rbx
  405647:	pop    rsi
  405648:	pop    rdi
  405649:	pop    rbp
  40564a:	ret    
  40564b:	nop    DWORD PTR [rax+rax*1+0x0]
  405650:	xor    ebp,ebp
  405652:	mov    rax,rbp
  405655:	add    rsp,0x28
  405659:	pop    rbx
  40565a:	pop    rsi
  40565b:	pop    rdi
  40565c:	pop    rbp
  40565d:	ret    
  40565e:	nop
  40565f:	nop
  405660:	push   rcx
  405661:	push   rax
  405662:	cmp    rax,0x1000
  405668:	lea    rcx,[rsp+0x18]
  40566d:	jb     0x405688
  40566f:	sub    rcx,0x1000
  405676:	or     QWORD PTR [rcx],0x0
  40567a:	sub    rax,0x1000
  405680:	cmp    rax,0x1000
  405686:	ja     0x40566f
  405688:	sub    rcx,rax
  40568b:	or     QWORD PTR [rcx],0x0
  40568f:	pop    rax
  405690:	pop    rcx
  405691:	ret    
  405692:	nop
  405693:	nop
  405694:	nop
  405695:	nop
  405696:	nop
  405697:	nop
  405698:	nop
  405699:	nop
  40569a:	nop
  40569b:	nop
  40569c:	nop
  40569d:	nop
  40569e:	nop
  40569f:	nop
  4056a0:	jmp    QWORD PTR [rip+0x8eda]        # 0x40e580
  4056a6:	nop
  4056a7:	nop
  4056a8:	jmp    QWORD PTR [rip+0x8eca]        # 0x40e578
  4056ae:	nop
  4056af:	nop
  4056b0:	jmp    QWORD PTR [rip+0x8eba]        # 0x40e570
  4056b6:	nop
  4056b7:	nop
  4056b8:	jmp    QWORD PTR [rip+0x8eaa]        # 0x40e568
  4056be:	nop
  4056bf:	nop
  4056c0:	jmp    QWORD PTR [rip+0x8e9a]        # 0x40e560
  4056c6:	nop
  4056c7:	nop
  4056c8:	jmp    QWORD PTR [rip+0x8e8a]        # 0x40e558
  4056ce:	nop
  4056cf:	nop
  4056d0:	jmp    QWORD PTR [rip+0x8e7a]        # 0x40e550
  4056d6:	nop
  4056d7:	nop
  4056d8:	jmp    QWORD PTR [rip+0x8e6a]        # 0x40e548
  4056de:	nop
  4056df:	nop
  4056e0:	jmp    QWORD PTR [rip+0x8e5a]        # 0x40e540
  4056e6:	nop
  4056e7:	nop
  4056e8:	jmp    QWORD PTR [rip+0x8e4a]        # 0x40e538
  4056ee:	nop
  4056ef:	nop
  4056f0:	jmp    QWORD PTR [rip+0x8e3a]        # 0x40e530
  4056f6:	nop
  4056f7:	nop
  4056f8:	jmp    QWORD PTR [rip+0x8e2a]        # 0x40e528
  4056fe:	nop
  4056ff:	nop
  405700:	jmp    QWORD PTR [rip+0x8e1a]        # 0x40e520
  405706:	nop
  405707:	nop
  405708:	jmp    QWORD PTR [rip+0x8e0a]        # 0x40e518
  40570e:	nop
  40570f:	nop
  405710:	jmp    QWORD PTR [rip+0x8dfa]        # 0x40e510
  405716:	nop
  405717:	nop
  405718:	jmp    QWORD PTR [rip+0x8dea]        # 0x40e508
  40571e:	nop
  40571f:	nop
  405720:	jmp    QWORD PTR [rip+0x8dda]        # 0x40e500
  405726:	nop
  405727:	nop
  405728:	jmp    QWORD PTR [rip+0x8dca]        # 0x40e4f8
  40572e:	nop
  40572f:	nop
  405730:	jmp    QWORD PTR [rip+0x8dba]        # 0x40e4f0
  405736:	nop
  405737:	nop
  405738:	jmp    QWORD PTR [rip+0x8daa]        # 0x40e4e8
  40573e:	nop
  40573f:	nop
  405740:	jmp    QWORD PTR [rip+0x8d9a]        # 0x40e4e0
  405746:	nop
  405747:	nop
  405748:	jmp    QWORD PTR [rip+0x8d8a]        # 0x40e4d8
  40574e:	nop
  40574f:	nop
  405750:	jmp    QWORD PTR [rip+0x8d7a]        # 0x40e4d0
  405756:	nop
  405757:	nop
  405758:	jmp    QWORD PTR [rip+0x8d6a]        # 0x40e4c8
  40575e:	nop
  40575f:	nop
  405760:	jmp    QWORD PTR [rip+0x8d5a]        # 0x40e4c0
  405766:	nop
  405767:	nop
  405768:	jmp    QWORD PTR [rip+0x8d4a]        # 0x40e4b8
  40576e:	nop
  40576f:	nop
  405770:	jmp    QWORD PTR [rip+0x8d3a]        # 0x40e4b0
  405776:	nop
  405777:	nop
  405778:	jmp    QWORD PTR [rip+0x8d2a]        # 0x40e4a8
  40577e:	nop
  40577f:	nop
  405780:	jmp    QWORD PTR [rip+0x8d1a]        # 0x40e4a0
  405786:	nop
  405787:	nop
  405788:	jmp    QWORD PTR [rip+0x8d0a]        # 0x40e498
  40578e:	nop
  40578f:	nop
  405790:	jmp    QWORD PTR [rip+0x8cfa]        # 0x40e490
  405796:	nop
  405797:	nop
  405798:	jmp    QWORD PTR [rip+0x8cea]        # 0x40e488
  40579e:	nop
  40579f:	nop
  4057a0:	jmp    QWORD PTR [rip+0x8cda]        # 0x40e480
  4057a6:	nop
  4057a7:	nop
  4057a8:	jmp    QWORD PTR [rip+0x8cca]        # 0x40e478
  4057ae:	nop
  4057af:	nop
  4057b0:	jmp    QWORD PTR [rip+0x8cba]        # 0x40e470
  4057b6:	nop
  4057b7:	nop
  4057b8:	jmp    QWORD PTR [rip+0x8ca2]        # 0x40e460
  4057be:	nop
  4057bf:	nop
  4057c0:	jmp    QWORD PTR [rip+0x8c92]        # 0x40e458
  4057c6:	nop
  4057c7:	nop
  4057c8:	jmp    QWORD PTR [rip+0x8c82]        # 0x40e450
  4057ce:	nop
  4057cf:	nop
  4057d0:	jmp    QWORD PTR [rip+0x8c72]        # 0x40e448
  4057d6:	nop
  4057d7:	nop
  4057d8:	jmp    QWORD PTR [rip+0x8c5a]        # 0x40e438
  4057de:	nop
  4057df:	nop
  4057e0:	jmp    QWORD PTR [rip+0x8c4a]        # 0x40e430
  4057e6:	nop
  4057e7:	nop
  4057e8:	jmp    QWORD PTR [rip+0x8c3a]        # 0x40e428
  4057ee:	nop
  4057ef:	nop
  4057f0:	jmp    QWORD PTR [rip+0x8c2a]        # 0x40e420
  4057f6:	nop
  4057f7:	nop
  4057f8:	jmp    QWORD PTR [rip+0x8c12]        # 0x40e410
  4057fe:	nop
  4057ff:	nop
  405800:	jmp    QWORD PTR [rip+0x8c02]        # 0x40e408
  405806:	nop
  405807:	nop
  405808:	jmp    QWORD PTR [rip+0x8bf2]        # 0x40e400
  40580e:	nop
  40580f:	nop
  405810:	mov    rax,QWORD PTR [rip+0x84d9]        # 0x40dcf0
  405817:	ret    
  405818:	nop    DWORD PTR [rax+rax*1+0x0]
  405820:	mov    rax,rcx
  405823:	xchg   QWORD PTR [rip+0x84c6],rax        # 0x40dcf0
  40582a:	ret    
  40582b:	nop
  40582c:	nop
  40582d:	nop
  40582e:	nop
  40582f:	nop
  405830:	jmp    QWORD PTR [rip+0x8bba]        # 0x40e3f0
  405836:	nop
  405837:	nop
  405838:	jmp    QWORD PTR [rip+0x8baa]        # 0x40e3e8
  40583e:	nop
  40583f:	nop
  405840:	jmp    QWORD PTR [rip+0x8b9a]        # 0x40e3e0
  405846:	nop
  405847:	nop
  405848:	jmp    QWORD PTR [rip+0x8b8a]        # 0x40e3d8
  40584e:	nop
  40584f:	nop
  405850:	jmp    QWORD PTR [rip+0x8b7a]        # 0x40e3d0
  405856:	nop
  405857:	nop
  405858:	jmp    QWORD PTR [rip+0x8b6a]        # 0x40e3c8
  40585e:	nop
  40585f:	nop
  405860:	jmp    QWORD PTR [rip+0x8b5a]        # 0x40e3c0
  405866:	nop
  405867:	nop
  405868:	jmp    QWORD PTR [rip+0x8b4a]        # 0x40e3b8
  40586e:	nop
  40586f:	nop
  405870:	jmp    QWORD PTR [rip+0x8b3a]        # 0x40e3b0
  405876:	nop
  405877:	nop
  405878:	jmp    QWORD PTR [rip+0x8b2a]        # 0x40e3a8
  40587e:	nop
  40587f:	nop
  405880:	jmp    QWORD PTR [rip+0x8b1a]        # 0x40e3a0
  405886:	nop
  405887:	nop
  405888:	jmp    QWORD PTR [rip+0x8b0a]        # 0x40e398
  40588e:	nop
  40588f:	nop
  405890:	jmp    QWORD PTR [rip+0x8afa]        # 0x40e390
  405896:	nop
  405897:	nop
  405898:	jmp    QWORD PTR [rip+0x8aea]        # 0x40e388
  40589e:	nop
  40589f:	nop
  4058a0:	jmp    QWORD PTR [rip+0x8ada]        # 0x40e380
  4058a6:	nop
  4058a7:	nop
  4058a8:	jmp    QWORD PTR [rip+0x8aca]        # 0x40e378
  4058ae:	nop
  4058af:	nop
  4058b0:	jmp    QWORD PTR [rip+0x8aba]        # 0x40e370
  4058b6:	nop
  4058b7:	nop
  4058b8:	jmp    QWORD PTR [rip+0x8aaa]        # 0x40e368
  4058be:	nop
  4058bf:	nop
  4058c0:	jmp    QWORD PTR [rip+0x8a9a]        # 0x40e360
  4058c6:	nop
  4058c7:	nop
  4058c8:	jmp    QWORD PTR [rip+0x8a8a]        # 0x40e358
  4058ce:	nop
  4058cf:	nop
  4058d0:	jmp    QWORD PTR [rip+0x8a7a]        # 0x40e350
  4058d6:	nop
  4058d7:	nop
  4058d8:	jmp    QWORD PTR [rip+0x8a6a]        # 0x40e348
  4058de:	nop
  4058df:	nop
  4058e0:	jmp    QWORD PTR [rip+0x8a5a]        # 0x40e340
  4058e6:	nop
  4058e7:	nop
  4058e8:	jmp    QWORD PTR [rip+0x8a4a]        # 0x40e338
  4058ee:	nop
  4058ef:	nop
  4058f0:	jmp    QWORD PTR [rip+0x8a3a]        # 0x40e330
  4058f6:	nop
  4058f7:	nop
  4058f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405900:	push   r15
  405902:	push   r14
  405904:	push   r13
  405906:	push   r12
  405908:	push   rbp
  405909:	push   rdi
  40590a:	push   rsi
  40590b:	push   rbx
  40590c:	sub    rsp,0xb8
  405913:	mov    rbp,rdx
  405916:	mov    r15d,ecx
  405919:	call   0x4042b0
  40591e:	mov    rcx,QWORD PTR [rbp+0x0]
  405922:	call   0x402890
  405927:	lea    rdx,[rip+0x2fad]        # 0x4088db
  40592e:	mov    ecx,0x2
  405933:	call   0x4056f0
  405938:	cmp    r15d,0x1
  40593c:	jle    0x405cfa
  405942:	lea    eax,[r15-0x1]
  405946:	mov    ebx,0x1
  40594b:	mov    DWORD PTR [rsp+0x58],0x0
  405953:	mov    QWORD PTR [rsp+0x50],0x0
  40595c:	xor    r14d,r14d
  40595f:	mov    DWORD PTR [rsp+0x100],r15d
  405967:	mov    DWORD PTR [rsp+0x48],eax
  40596b:	movsxd rax,ebx
  40596e:	lea    rdi,[rip+0x2f67]        # 0x4088dc
  405975:	mov    r12,QWORD PTR [rbp+rax*8+0x0]
  40597a:	lea    r13,[rax*8+0x0]
  405982:	mov    rcx,r12
  405985:	mov    rsi,r12
  405988:	call   0x4056c8
  40598d:	mov    ecx,0x3
  405992:	mov    r15,rax
  405995:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405997:	je     0x405c4d
  40599d:	lea    rdi,[rip+0x2f3b]        # 0x4088df
  4059a4:	mov    rsi,r12
  4059a7:	mov    ecx,0x3
  4059ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4059ae:	je     0x405ab0
  4059b4:	lea    rsi,[rax-0x3]
  4059b8:	cmp    rsi,0x8
  4059bc:	jbe    0x405ac5
  4059c2:	cmp    rax,0xb
  4059c6:	jbe    0x4059e5
  4059c8:	lea    rdx,[rip+0x2f1f]        # 0x4088ee
  4059cf:	mov    r8d,0xc
  4059d5:	mov    rcx,r12
  4059d8:	call   0x4056c0
  4059dd:	test   eax,eax
  4059df:	je     0x405ab6
  4059e5:	lea    rdx,[rip+0x2f0f]        # 0x4088fb
  4059ec:	mov    rcx,r12
  4059ef:	call   0x4056d8
  4059f4:	test   eax,eax
  4059f6:	je     0x405b91
  4059fc:	cmp    rsi,0x6
  405a00:	ja     0x405bc2
  405a06:	cmp    r15,0xa
  405a0a:	mov    r8d,0xa
  405a10:	lea    rdx,[rip+0x2ee7]        # 0x4088fe
  405a17:	cmovle r8,r15
  405a1b:	mov    rcx,r12
  405a1e:	call   0x4056c0
  405a23:	test   eax,eax
  405a25:	je     0x405bea
  405a2b:	lea    rdx,[rip+0x2ee1]        # 0x408913
  405a32:	mov    rcx,r12
  405a35:	call   0x4056d8
  405a3a:	test   eax,eax
  405a3c:	je     0x405c3d
  405a42:	cmp    rsi,0x3
  405a46:	jbe    0x405c18
  405a4c:	lea    rdi,[r15-0x4]
  405a50:	cmp    rdi,0x8
  405a54:	ja     0x405cc4
  405a5a:	cmp    r15,0xd
  405a5e:	mov    r8d,0xd
  405a64:	lea    rdx,[rip+0x2eb2]        # 0x40891d
  405a6b:	cmovle r8,r15
  405a6f:	mov    rcx,r12
  405a72:	call   0x4056c0
  405a77:	test   eax,eax
  405a79:	jne    0x405c5d
  405a7f:	cmp    DWORD PTR [rsp+0x48],ebx
  405a83:	je     0x405abb
  405a85:	mov    rax,QWORD PTR [rbp+r13*1+0x8]
  405a8a:	add    ebx,0x2
  405a8d:	mov    QWORD PTR [rip+0x762c],rax        # 0x40d0c0
  405a94:	mov    rcx,QWORD PTR [rip+0x7625]        # 0x40d0c0
  405a9b:	lea    rdx,[rip+0x2e7b]        # 0x40891d
  405aa2:	call   0x401a90
  405aa7:	mov    QWORD PTR [rip+0x75fa],rax        # 0x40d0a8
  405aae:	jmp    0x405b07
  405ab0:	cmp    rax,0xb
  405ab4:	jbe    0x405aea
  405ab6:	test   r14,r14
  405ab9:	je     0x405aff
  405abb:	mov    ecx,0x1
  405ac0:	call   0x401dd0
  405ac5:	cmp    rax,0xc
  405ac9:	mov    r8d,0xc
  405acf:	lea    rdx,[rip+0x2e0c]        # 0x4088e2
  405ad6:	cmovle r8,rax
  405ada:	mov    rcx,r12
  405add:	call   0x4056c0
  405ae2:	test   eax,eax
  405ae4:	jne    0x4059e5
  405aea:	cmp    DWORD PTR [rsp+0x48],ebx
  405aee:	je     0x405abb
  405af0:	test   r14,r14
  405af3:	jne    0x405abb
  405af5:	cmp    r15,0xb
  405af9:	jbe    0x405bb5
  405aff:	lea    r14,[r12+0xc]
  405b04:	add    ebx,0x1
  405b07:	cmp    ebx,DWORD PTR [rsp+0x100]
  405b0e:	jl     0x40596b
  405b14:	mov    r15d,DWORD PTR [rsp+0x100]
  405b1c:	cmp    DWORD PTR [rsp+0x58],0x0
  405b21:	je     0x406093
  405b27:	cmp    ebx,r15d
  405b2a:	jne    0x405abb
  405b2c:	cmp    ebx,0x2
  405b2f:	jne    0x405abb
  405b31:	lea    rcx,[rip+0xffffffffffffc228]        # 0x401d60
  405b38:	xor    edx,edx
  405b3a:	xor    ebp,ebp
  405b3c:	call   0x404110
  405b41:	mov    rax,QWORD PTR [rip+0x88d8]        # 0x40e420
  405b48:	mov    QWORD PTR [rsp+0x58],rax
  405b4d:	mov    rax,QWORD PTR [rsp+0x58]
  405b52:	call   rax
  405b54:	lea    rcx,[rax+0x30]
  405b58:	call   0x405760
  405b5d:	test   eax,eax
  405b5f:	jne    0x405b75
  405b61:	mov    rax,QWORD PTR [rsp+0x58]
  405b66:	call   rax
  405b68:	lea    rcx,[rax+0x30]
  405b6c:	call   0x405768
  405b71:	test   eax,eax
  405b73:	je     0x405b8a
  405b75:	lea    r8,[rip+0x3060]        # 0x408bdc
  405b7c:	xor    edx,edx
  405b7e:	xor    ecx,ecx
  405b80:	mov    ebp,0x1
  405b85:	call   0x403140
  405b8a:	mov    ecx,ebp
  405b8c:	call   0x405770
  405b91:	cmp    r15,0x9
  405b95:	jbe    0x405bea
  405b97:	cmp    QWORD PTR [rsp+0x50],0x0
  405b9d:	jne    0x405abb
  405ba3:	lea    rax,[r12+0xa]
  405ba8:	add    ebx,0x1
  405bab:	mov    QWORD PTR [rsp+0x50],rax
  405bb0:	jmp    0x405b07
  405bb5:	mov    r14,QWORD PTR [rbp+r13*1+0x8]
  405bba:	add    ebx,0x2
  405bbd:	jmp    0x405b07
  405bc2:	cmp    r15,0x9
  405bc6:	jbe    0x405a2b
  405bcc:	lea    rdx,[rip+0x2d35]        # 0x408908
  405bd3:	mov    r8d,0xa
  405bd9:	mov    rcx,r12
  405bdc:	call   0x4056c0
  405be1:	test   eax,eax
  405be3:	je     0x405b97
  405be5:	jmp    0x405a2b
  405bea:	cmp    DWORD PTR [rsp+0x48],ebx
  405bee:	je     0x405abb
  405bf4:	cmp    QWORD PTR [rsp+0x50],0x0
  405bfa:	jne    0x405abb
  405c00:	cmp    r15,0x9
  405c04:	ja     0x405ba3
  405c06:	mov    rax,QWORD PTR [rbp+r13*1+0x8]
  405c0b:	add    ebx,0x2
  405c0e:	mov    QWORD PTR [rsp+0x50],rax
  405c13:	jmp    0x405b07
  405c18:	cmp    r15,0x7
  405c1c:	mov    r8d,0x7
  405c22:	lea    rdx,[rip+0x2ced]        # 0x408916
  405c29:	cmovle r8,r15
  405c2d:	mov    rcx,r12
  405c30:	call   0x4056c0
  405c35:	test   eax,eax
  405c37:	jne    0x405a4c
  405c3d:	add    ebx,0x1
  405c40:	mov    DWORD PTR [rsp+0x58],0x1
  405c48:	jmp    0x405b07
  405c4d:	mov    r15d,DWORD PTR [rsp+0x100]
  405c55:	add    ebx,0x1
  405c58:	jmp    0x405b1c
  405c5d:	cmp    rsi,0xd
  405c61:	ja     0x4060e0
  405c67:	cmp    r15,0x11
  405c6b:	mov    r8d,0x11
  405c71:	lea    rdx,[rip+0x2cc0]        # 0x408938
  405c78:	cmovle r8,r15
  405c7c:	mov    rcx,r12
  405c7f:	call   0x4056c0
  405c84:	test   eax,eax
  405c86:	jne    0x406166
  405c8c:	cmp    DWORD PTR [rsp+0x48],ebx
  405c90:	je     0x405abb
  405c96:	mov    rax,QWORD PTR [rbp+r13*1+0x8]
  405c9b:	add    ebx,0x2
  405c9e:	mov    QWORD PTR [rip+0x7413],rax        # 0x40d0b8
  405ca5:	mov    rcx,QWORD PTR [rip+0x740c]        # 0x40d0b8
  405cac:	lea    rdx,[rip+0x2c85]        # 0x408938
  405cb3:	call   0x401a90
  405cb8:	mov    QWORD PTR [rip+0x73e1],rax        # 0x40d0a0
  405cbf:	jmp    0x405b07
  405cc4:	cmp    r15,0xc
  405cc8:	jbe    0x405c5d
  405cca:	lea    rdx,[rip+0x2c59]        # 0x40892a
  405cd1:	mov    r8d,0xd
  405cd7:	mov    rcx,r12
  405cda:	call   0x4056c0
  405cdf:	test   eax,eax
  405ce1:	jne    0x405c5d
  405ce7:	add    r12,0xd
  405ceb:	add    ebx,0x1
  405cee:	mov    QWORD PTR [rip+0x73cb],r12        # 0x40d0c0
  405cf5:	jmp    0x405a94
  405cfa:	mov    rax,QWORD PTR [rip+0x871f]        # 0x40e420
  405d01:	lea    r14,[rip+0x2bce]        # 0x4088d6
  405d08:	mov    ebx,0x1
  405d0d:	mov    QWORD PTR [rsp+0x58],rax
  405d12:	call   rax
  405d14:	mov    r13,QWORD PTR [rip+0x8745]        # 0x40e460
  405d1b:	lea    rcx,[rax+0x30]
  405d1f:	call   r13
  405d22:	mov    edx,0x8000
  405d27:	mov    ecx,eax
  405d29:	call   QWORD PTR [rip+0x8761]        # 0x40e490
  405d2f:	mov    QWORD PTR [rsp+0x50],r14
  405d34:	mov    rcx,QWORD PTR [rsp+0x50]
  405d39:	mov    rdx,r14
  405d3c:	call   0x404120
  405d41:	mov    QWORD PTR [rsp+0x48],rax
  405d46:	add    rax,0x1
  405d4a:	je     0x40644f
  405d50:	mov    rcx,QWORD PTR [rsp+0x50]
  405d55:	call   0x404138
  405d5a:	mov    rsi,rax
  405d5d:	mov    QWORD PTR [rip+0x7364],rax        # 0x40d0c8
  405d64:	movzx  eax,BYTE PTR [rax]
  405d67:	cmp    al,0x45
  405d69:	je     0x4061ac
  405d6f:	cmp    al,0x47
  405d71:	je     0x40629c
  405d77:	cmp    al,0x42
  405d79:	je     0x4064f0
  405d7f:	cmp    al,0x43
  405d81:	je     0x406530
  405d87:	cmp    al,0x4a
  405d89:	je     0x406570
  405d8f:	mov    rcx,r14
  405d92:	call   0x404138
  405d97:	mov    QWORD PTR [rip+0x732a],rax        # 0x40d0c8
  405d9e:	cmp    QWORD PTR [rip+0x731a],0x0        # 0x40d0c0
  405da6:	je     0x405dbf
  405da8:	mov    rax,QWORD PTR [rip+0x72f9]        # 0x40d0a8
  405daf:	lea    rcx,[rax+0x1]
  405db3:	call   0x402f70
  405db8:	mov    QWORD PTR [rip+0x72d1],rax        # 0x40d090
  405dbf:	cmp    DWORD PTR [rip+0x7316],0x0        # 0x40d0dc
  405dc6:	jne    0x405fb7
  405dcc:	cmp    QWORD PTR [rip+0x72e4],0x0        # 0x40d0b8
  405dd4:	je     0x405ded
  405dd6:	mov    rax,QWORD PTR [rip+0x72c3]        # 0x40d0a0
  405ddd:	lea    rcx,[rax+0x1]
  405de1:	call   0x402f70
  405de6:	mov    QWORD PTR [rip+0x729b],rax        # 0x40d088
  405ded:	cmp    QWORD PTR [rip+0x72bb],0x0        # 0x40d0b0
  405df5:	je     0x405e0e
  405df7:	mov    rax,QWORD PTR [rip+0x729a]        # 0x40d098
  405dfe:	lea    rcx,[rax+0x1]
  405e02:	call   0x402f70
  405e07:	mov    QWORD PTR [rip+0x7272],rax        # 0x40d080
  405e0e:	cmp    QWORD PTR [rip+0x72aa],0x0        # 0x40d0c0
  405e16:	je     0x405eb4
  405e1c:	lea    rdx,[rip+0x2ab3]        # 0x4088d6
  405e23:	lea    rcx,[rip+0x2d8e]        # 0x408bb8
  405e2a:	call   0x404120
  405e2f:	mov    QWORD PTR [rip+0x7242],rax        # 0x40d078
  405e36:	mov    rax,QWORD PTR [rip+0x726b]        # 0x40d0a8
  405e3d:	lea    rcx,[rax*4+0x0]
  405e45:	call   0x402f70
  405e4a:	lea    rdx,[rip+0x2a85]        # 0x4088d6
  405e51:	lea    rcx,[rip+0x2d6f]        # 0x408bc7
  405e58:	mov    QWORD PTR [rip+0x7211],rax        # 0x40d070
  405e5f:	call   0x404120
  405e64:	mov    rcx,QWORD PTR [rip+0x723d]        # 0x40d0a8
  405e6b:	mov    QWORD PTR [rip+0x71e6],rax        # 0x40d058
  405e72:	add    rcx,rcx
  405e75:	call   0x402f70
  405e7a:	mov    rcx,QWORD PTR [rsp+0x50]
  405e7f:	lea    rdx,[rip+0x2a50]        # 0x4088d6
  405e86:	mov    QWORD PTR [rip+0x71c3],rax        # 0x40d050
  405e8d:	call   0x404120
  405e92:	mov    QWORD PTR [rip+0x719f],rax        # 0x40d038
  405e99:	mov    rax,QWORD PTR [rip+0x7208]        # 0x40d0a8
  405ea0:	lea    rcx,[rax*4+0x0]
  405ea8:	call   0x402f70
  405ead:	mov    QWORD PTR [rip+0x717c],rax        # 0x40d030
  405eb4:	cmp    QWORD PTR [rip+0x71fc],0x0        # 0x40d0b8
  405ebc:	je     0x405ef1
  405ebe:	mov    rcx,QWORD PTR [rsp+0x50]
  405ec3:	lea    rdx,[rip+0x2a0c]        # 0x4088d6
  405eca:	call   0x404120
  405ecf:	mov    QWORD PTR [rip+0x7172],rax        # 0x40d048
  405ed6:	mov    rax,QWORD PTR [rip+0x71c3]        # 0x40d0a0
  405edd:	lea    rcx,[rax*4+0x0]
  405ee5:	call   0x402f70
  405eea:	mov    QWORD PTR [rip+0x714f],rax        # 0x40d040
  405ef1:	cmp    QWORD PTR [rip+0x71b7],0x0        # 0x40d0b0
  405ef9:	je     0x405f2e
  405efb:	mov    rcx,QWORD PTR [rsp+0x50]
  405f00:	lea    rdx,[rip+0x29cf]        # 0x4088d6
  405f07:	call   0x404120
  405f0c:	mov    QWORD PTR [rip+0x7155],rax        # 0x40d068
  405f13:	mov    rax,QWORD PTR [rip+0x717e]        # 0x40d098
  405f1a:	lea    rcx,[rax*4+0x0]
  405f22:	call   0x402f70
  405f27:	mov    QWORD PTR [rip+0x7132],rax        # 0x40d060
  405f2e:	cmp    QWORD PTR [rip+0x718a],0x0        # 0x40d0c0
  405f36:	je     0x40641f
  405f3c:	cmp    QWORD PTR [rip+0x716c],0x0        # 0x40d0b0
  405f44:	lea    rax,[rip+0xffffffffffffb9e5]        # 0x401930
  405f4b:	mov    QWORD PTR [rsp+0x80],rax
  405f53:	je     0x4064c2
  405f59:	lea    rax,[rip+0xffffffffffffb760]        # 0x4016c0
  405f60:	mov    QWORD PTR [rsp+0x88],rax
  405f68:	lea    rax,[rip+0xffffffffffffb861]        # 0x4017d0
  405f6f:	cmp    QWORD PTR [rip+0x7141],0x0        # 0x40d0b8
  405f77:	mov    QWORD PTR [rsp+0x90],rax
  405f7f:	lea    rax,[rip+0xffffffffffffb62a]        # 0x4015b0
  405f86:	mov    rcx,QWORD PTR [rsp+0x48]
  405f8b:	mov    edx,0x0
  405f90:	lea    r8,[rsp+0x80]
  405f98:	mov    QWORD PTR [rsp+0xa0],0x0
  405fa4:	cmove  rax,rdx
  405fa8:	mov    dl,0x6
  405faa:	mov    QWORD PTR [rsp+0x98],rax
  405fb2:	call   0x404118
  405fb7:	mov    rcx,QWORD PTR [rsp+0x48]
  405fbc:	lea    rax,[rip+0xffffffffffffc7ed]        # 0x4027b0
  405fc3:	lea    r8,[rsp+0x60]
  405fc8:	mov    edx,0x5
  405fcd:	mov    QWORD PTR [rsp+0x68],0x0
  405fd6:	mov    QWORD PTR [rsp+0x70],0x0
  405fdf:	mov    QWORD PTR [rsp+0x60],rax
  405fe4:	call   0x404118
  405fe9:	cmp    ebx,r15d
  405fec:	je     0x406062
  405fee:	movsxd rax,ebx
  405ff1:	xor    esi,esi
  405ff3:	lea    r14,[rbp+rax*8+0x0]
  405ff8:	xor    ebp,ebp
  405ffa:	jmp    0x40601f
  405ffc:	mov    rcx,rax
  405fff:	call   r13
  406002:	mov    rcx,QWORD PTR [rsp+0x48]
  406007:	mov    r8,rdi
  40600a:	mov    edx,eax
  40600c:	call   0x4020c0
  406011:	mov    rcx,r12
  406014:	or     ebp,eax
  406016:	call   0x405768
  40601b:	add    rsi,0x1
  40601f:	lea    eax,[rbx+rsi*1]
  406022:	cmp    r15d,eax
  406025:	jle    0x406084
  406027:	mov    rdi,QWORD PTR [r14+rsi*8]
  40602b:	lea    rdx,[rip+0x2ba5]        # 0x408bd7
  406032:	mov    rcx,rdi
  406035:	call   0x405750
  40603a:	test   rax,rax
  40603d:	mov    r12,rax
  406040:	jne    0x405ffc
  406042:	call   QWORD PTR [rip+0x8410]        # 0x40e458
  406048:	mov    edx,DWORD PTR [rax]
  40604a:	lea    r8,[rip+0x2b88]        # 0x408bd9
  406051:	mov    r9,rdi
  406054:	xor    ecx,ecx
  406056:	mov    ebp,0x1
  40605b:	call   0x403140
  406060:	jmp    0x40601b
  406062:	mov    rax,QWORD PTR [rsp+0x58]
  406067:	call   rax
  406069:	mov    rcx,rax
  40606c:	call   r13
  40606f:	mov    rcx,QWORD PTR [rsp+0x48]
  406074:	lea    r8,[rip+0x2b54]        # 0x408bcf
  40607b:	mov    edx,eax
  40607d:	call   0x4020c0
  406082:	mov    ebp,eax
  406084:	mov    rcx,QWORD PTR [rsp+0x48]
  406089:	call   0x404128
  40608e:	jmp    0x405b4d
  406093:	mov    rax,QWORD PTR [rip+0x8386]        # 0x40e420
  40609a:	mov    QWORD PTR [rsp+0x58],rax
  40609f:	call   rax
  4060a1:	mov    r13,QWORD PTR [rip+0x83b8]        # 0x40e460
  4060a8:	lea    rcx,[rax+0x30]
  4060ac:	call   r13
  4060af:	mov    edx,0x8000
  4060b4:	mov    ecx,eax
  4060b6:	call   QWORD PTR [rip+0x83d4]        # 0x40e490
  4060bc:	mov    rdi,QWORD PTR [rsp+0x50]
  4060c1:	lea    rax,[rip+0x280e]        # 0x4088d6
  4060c8:	test   r14,r14
  4060cb:	cmove  r14,rax
  4060cf:	test   rdi,rdi
  4060d2:	cmovne rax,rdi
  4060d6:	mov    QWORD PTR [rsp+0x50],rax
  4060db:	jmp    0x405d34
  4060e0:	cmp    r15,0x10
  4060e4:	jbe    0x406112
  4060e6:	lea    rdx,[rip+0x285c]        # 0x408949
  4060ed:	mov    r8d,0x11
  4060f3:	mov    rcx,r12
  4060f6:	call   0x4056c0
  4060fb:	test   eax,eax
  4060fd:	jne    0x406112
  4060ff:	add    r12,0x11
  406103:	add    ebx,0x1
  406106:	mov    QWORD PTR [rip+0x6fab],r12        # 0x40d0b8
  40610d:	jmp    0x405ca5
  406112:	cmp    r15,0xf
  406116:	jbe    0x4062c9
  40611c:	lea    rdx,[rip+0x2848]        # 0x40896b
  406123:	mov    r8d,0x10
  406129:	mov    rcx,r12
  40612c:	call   0x4056c0
  406131:	test   eax,eax
  406133:	jne    0x4062c9
  406139:	add    r12,0x10
  40613d:	add    ebx,0x1
  406140:	mov    QWORD PTR [rip+0x6f69],r12        # 0x40d0b0
  406147:	mov    rcx,QWORD PTR [rip+0x6f62]        # 0x40d0b0
  40614e:	lea    rdx,[rip+0x2806]        # 0x40895b
  406155:	call   0x401a90
  40615a:	mov    QWORD PTR [rip+0x6f37],rax        # 0x40d098
  406161:	jmp    0x405b07
  406166:	cmp    rsi,0xc
  40616a:	ja     0x406112
  40616c:	cmp    r15,0x10
  406170:	mov    r8d,0x10
  406176:	lea    rdx,[rip+0x27de]        # 0x40895b
  40617d:	cmovle r8,r15
  406181:	mov    rcx,r12
  406184:	call   0x4056c0
  406189:	test   eax,eax
  40618b:	jne    0x406262
  406191:	cmp    DWORD PTR [rsp+0x48],ebx
  406195:	je     0x405abb
  40619b:	mov    rax,QWORD PTR [rbp+r13*1+0x8]
  4061a0:	add    ebx,0x2
  4061a3:	mov    QWORD PTR [rip+0x6f06],rax        # 0x40d0b0
  4061aa:	jmp    0x406147
  4061ac:	lea    rdx,[rip+0x29d8]        # 0x408b8b
  4061b3:	mov    DWORD PTR [rsp+0x30],0x50
  4061bb:	mov    DWORD PTR [rsp+0x28],0x4a
  4061c3:	mov    DWORD PTR [rsp+0x20],0x2d
  4061cb:	mov    r9d,0x43
  4061d1:	mov    r8d,0x55
  4061d7:	mov    rcx,rsi
  4061da:	call   0x402820
  4061df:	test   eax,eax
  4061e1:	jne    0x405d9e
  4061e7:	lea    rdx,[rip+0x29ab]        # 0x408b99
  4061ee:	mov    DWORD PTR [rsp+0x30],0x57
  4061f6:	mov    DWORD PTR [rsp+0x28],0x54
  4061fe:	mov    DWORD PTR [rsp+0x20],0x2d
  406206:	mov    r9d,0x43
  40620c:	mov    r8d,0x55
  406212:	mov    rcx,rsi
  406215:	call   0x402820
  40621a:	test   eax,eax
  40621c:	jne    0x405d9e
  406222:	lea    rdx,[rip+0x297c]        # 0x408ba5
  406229:	mov    DWORD PTR [rsp+0x30],0x52
  406231:	mov    DWORD PTR [rsp+0x28],0x4b
  406239:	mov    DWORD PTR [rsp+0x20],0x2d
  406241:	mov    r9d,0x43
  406247:	mov    r8d,0x55
  40624d:	mov    rcx,rsi
  406250:	call   0x402820
  406255:	test   eax,eax
  406257:	jne    0x405d9e
  40625d:	jmp    0x405d8f
  406262:	cmp    rsi,0x5
  406266:	ja     0x4062c9
  406268:	cmp    r15,0x9
  40626c:	mov    r8d,0x9
  406272:	lea    rdx,[rip+0x2703]        # 0x40897c
  406279:	cmovle r8,r15
  40627d:	mov    rcx,r12
  406280:	call   0x4056c0
  406285:	test   eax,eax
  406287:	jne    0x4063e9
  40628d:	mov    DWORD PTR [rip+0x6e41],0x1        # 0x40d0d8
  406297:	jmp    0x405b07
  40629c:	cmp    BYTE PTR [rsi+0x1],0x42
  4062a0:	jne    0x405d8f
  4062a6:	cmp    BYTE PTR [rsi+0x2],0x32
  4062aa:	je     0x4065e2
  4062b0:	cmp    BYTE PTR [rsi+0x2],0x4b
  4062b4:	jne    0x405d8f
  4062ba:	cmp    BYTE PTR [rsi+0x3],0x0
  4062be:	jne    0x405d8f
  4062c4:	jmp    0x405d9e
  4062c9:	cmp    rsi,0x6
  4062cd:	jbe    0x406361
  4062d3:	cmp    rdi,0x4
  4062d7:	ja     0x4062fa
  4062d9:	cmp    r15,0x9
  4062dd:	mov    r8d,0x9
  4062e3:	lea    rdx,[rip+0x27f3]        # 0x408add
  4062ea:	cmovle r8,r15
  4062ee:	mov    rcx,r12
  4062f1:	call   0x4056c0
  4062f6:	test   eax,eax
  4062f8:	je     0x406337
  4062fa:	cmp    BYTE PTR [r12],0x2d
  4062ff:	jne    0x405b14
  406305:	cmp    BYTE PTR [r12+0x1],0x0
  40630b:	lea    rdx,[r12+0x1]
  406310:	je     0x405abb
  406316:	mov    r8d,DWORD PTR [rip+0x6dbf]        # 0x40d0dc
  40631d:	mov    ecx,DWORD PTR [rip+0x6db5]        # 0x40d0d8
  406323:	movzx  eax,BYTE PTR [rdx]
  406326:	test   al,al
  406328:	jne    0x40633f
  40632a:	mov    DWORD PTR [rip+0x6dab],r8d        # 0x40d0dc
  406331:	mov    DWORD PTR [rip+0x6da1],ecx        # 0x40d0d8
  406337:	add    ebx,0x1
  40633a:	jmp    0x405b07
  40633f:	cmp    al,0x63
  406341:	je     0x4064e8
  406347:	cmp    al,0x73
  406349:	je     0x4064da
  40634f:	mov    DWORD PTR [rip+0x6d86],r8d        # 0x40d0dc
  406356:	mov    DWORD PTR [rip+0x6d7c],ecx        # 0x40d0d8
  40635c:	jmp    0x405abb
  406361:	cmp    r15,0xa
  406365:	mov    r8d,0xa
  40636b:	lea    rdx,[rip+0x261a]        # 0x40898c
  406372:	cmovle r8,r15
  406376:	mov    rcx,r12
  406379:	call   0x4056c0
  40637e:	test   eax,eax
  406380:	jne    0x4062d3
  406386:	mov    rax,QWORD PTR [rip+0x7f63]        # 0x40e2f0
  40638d:	lea    rcx,[rip+0x2602]        # 0x408996
  406394:	mov    r8d,DWORD PTR [rax]
  406397:	mov    edx,r8d
  40639a:	movzx  r8d,r8b
  40639e:	sar    edx,0x8
  4063a1:	call   0x4033c0
  4063a6:	lea    rdx,[rip+0x2605]        # 0x4089b2
  4063ad:	lea    rcx,[rip+0x260c]        # 0x4089c0
  4063b4:	call   0x4033c0
  4063b9:	call   QWORD PTR [rip+0x8061]        # 0x40e420
  4063bf:	lea    rcx,[rip+0x2632]        # 0x4089f8
  4063c6:	lea    rdx,[rax+0x30]
  4063ca:	call   0x403530
  4063cf:	lea    rcx,[rip+0x26f7]        # 0x408acd
  4063d6:	lea    rdx,[rip+0x26e3]        # 0x408ac0
  4063dd:	call   0x4033c0
  4063e2:	xor    ecx,ecx
  4063e4:	call   0x405770
  4063e9:	cmp    rsi,0x3
  4063ed:	ja     0x406361
  4063f3:	cmp    r15,0x7
  4063f7:	mov    r8d,0x7
  4063fd:	lea    rdx,[rip+0x2581]        # 0x408985
  406404:	cmovle r8,r15
  406408:	mov    rcx,r12
  40640b:	call   0x4056c0
  406410:	test   eax,eax
  406412:	jne    0x406361
  406418:	xor    ecx,ecx
  40641a:	call   0x401dd0
  40641f:	cmp    QWORD PTR [rip+0x6c89],0x0        # 0x40d0b0
  406427:	mov    QWORD PTR [rsp+0x80],0x0
  406433:	je     0x40662c
  406439:	lea    rax,[rip+0xffffffffffffb280]        # 0x4016c0
  406440:	mov    QWORD PTR [rsp+0x88],rax
  406448:	xor    eax,eax
  40644a:	jmp    0x405f6f
  40644f:	lea    rcx,[rip+0x2690]        # 0x408ae6
  406456:	mov    rdx,r14
  406459:	call   0x404120
  40645e:	add    rax,0x1
  406462:	je     0x4065ca
  406468:	mov    rcx,QWORD PTR [rsp+0x50]
  40646d:	lea    rdx,[rip+0x2672]        # 0x408ae6
  406474:	call   0x404120
  406479:	add    rax,0x1
  40647d:	je     0x4065b0
  406483:	mov    rax,QWORD PTR [rsp+0x50]
  406488:	lea    r8,[rip+0x26a1]        # 0x408b30
  40648f:	mov    r9,r14
  406492:	xor    edx,edx
  406494:	xor    ecx,ecx
  406496:	mov    QWORD PTR [rsp+0x20],rax
  40649b:	call   0x403140
  4064a0:	mov    rax,QWORD PTR [rip+0x3af9]        # 0x409fa0
  4064a7:	lea    r8,[rip+0x26aa]        # 0x408b58
  4064ae:	xor    edx,edx
  4064b0:	mov    ecx,0x1
  4064b5:	mov    r9,QWORD PTR [rax]
  4064b8:	call   0x403140
  4064bd:	jmp    0x405d50
  4064c2:	mov    QWORD PTR [rsp+0x88],0x0
  4064ce:	lea    rax,[rip+0xffffffffffffb2fb]        # 0x4017d0
  4064d5:	jmp    0x405f6f
  4064da:	mov    ecx,0x1
  4064df:	add    rdx,0x1
  4064e3:	jmp    0x406323
  4064e8:	mov    r8d,0x1
  4064ee:	jmp    0x4064df
  4064f0:	lea    rdx,[rip+0x26a9]        # 0x408ba0
  4064f7:	mov    DWORD PTR [rsp+0x30],0x0
  4064ff:	mov    DWORD PTR [rsp+0x28],0x0
  406507:	mov    DWORD PTR [rsp+0x20],0x35
  40650f:	mov    r9d,0x47
  406515:	mov    r8d,0x49
  40651b:	mov    rcx,rsi
  40651e:	call   0x402820
  406523:	test   eax,eax
  406525:	jne    0x405d9e
  40652b:	jmp    0x405d8f
  406530:	lea    rdx,[rip+0x2675]        # 0x408bac
  406537:	mov    DWORD PTR [rsp+0x30],0x0
  40653f:	mov    DWORD PTR [rsp+0x28],0x39
  406547:	mov    DWORD PTR [rsp+0x20],0x34
  40654f:	mov    r9d,0x39
  406555:	mov    r8d,0x50
  40655b:	mov    rcx,rsi
  40655e:	call   0x402820
  406563:	test   eax,eax
  406565:	jne    0x405d9e
  40656b:	jmp    0x405d8f
  406570:	lea    rdx,[rip+0x263b]        # 0x408bb2
  406577:	mov    DWORD PTR [rsp+0x30],0x0
  40657f:	mov    DWORD PTR [rsp+0x28],0x42
  406587:	mov    DWORD PTR [rsp+0x20],0x41
  40658f:	mov    r9d,0x48
  406595:	mov    r8d,0x4f
  40659b:	mov    rcx,rsi
  40659e:	call   0x402820
  4065a3:	test   eax,eax
  4065a5:	je     0x405d8f
  4065ab:	jmp    0x405d9e
  4065b0:	mov    r9,QWORD PTR [rsp+0x50]
  4065b5:	lea    r8,[rip+0x2553]        # 0x408b0f
  4065bc:	xor    edx,edx
  4065be:	xor    ecx,ecx
  4065c0:	call   0x403140
  4065c5:	jmp    0x4064a0
  4065ca:	lea    r8,[rip+0x251f]        # 0x408af0
  4065d1:	mov    r9,r14
  4065d4:	xor    edx,edx
  4065d6:	xor    ecx,ecx
  4065d8:	call   0x403140
  4065dd:	jmp    0x4064a0
  4065e2:	cmp    BYTE PTR [rsi+0x3],0x33
  4065e6:	jne    0x4062b0
  4065ec:	lea    rdx,[rip+0x259f]        # 0x408b92
  4065f3:	mov    DWORD PTR [rsp+0x30],0x0
  4065fb:	mov    DWORD PTR [rsp+0x28],0x0
  406603:	mov    DWORD PTR [rsp+0x20],0x0
  40660b:	mov    r9d,0x32
  406611:	mov    r8d,0x31
  406617:	mov    rcx,rsi
  40661a:	call   0x401530
  40661f:	test   eax,eax
  406621:	jne    0x405d9e
  406627:	jmp    0x4062b0
  40662c:	mov    QWORD PTR [rsp+0x88],0x0
  406638:	xor    eax,eax
  40663a:	jmp    0x405f6f
  40663f:	nop
  406640:	(bad)  
  406641:	(bad)  
  406642:	(bad)  
  406643:	(bad)  
  406644:	(bad)  
  406645:	(bad)  
  406646:	(bad)  
  406647:	inc    DWORD PTR [rax]
  406649:	add    BYTE PTR [rax],al
  40664b:	add    BYTE PTR [rax],al
  40664d:	add    BYTE PTR [rax],al
  40664f:	add    bh,bh
  406651:	(bad)  
  406652:	(bad)  
  406653:	(bad)  
  406654:	(bad)  
  406655:	(bad)  
  406656:	(bad)  
  406657:	inc    DWORD PTR [rax]
  406659:	add    BYTE PTR [rax],al
  40665b:	add    BYTE PTR [rax],al
  40665d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000407000 <.data>:
  407000:	or     al,BYTE PTR [rax]
	...
  40700e:	add    BYTE PTR [rax],al
  407010:	add    DWORD PTR [rax],eax
	...
  40701e:	add    BYTE PTR [rax],al
  407020:	pop    rax
  407021:	data16 add BYTE PTR [rax],al
	...
  40702d:	add    BYTE PTR [rax],al
  40702f:	add    bh,bh
  407031:	(bad)  
  407032:	(bad)  
  407033:	(bad)  
  407034:	(bad)  
  407035:	(bad)  
  407036:	(bad)  
  407037:	inc    DWORD PTR [rax]
  407039:	add    BYTE PTR [rax],al
  40703b:	add    BYTE PTR [rax],al
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    bh,bh
	...
  40704d:	add    BYTE PTR [rax],al
  40704f:	add    BYTE PTR [rdx],al
	...
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    bh,bh
  407061:	(bad)  
  407062:	(bad)  
  407063:	inc    DWORD PTR [rax]
	...
  40706d:	add    BYTE PTR [rax],al
  40706f:	add    BYTE PTR [rax],dl
  407071:	pop    rax
  407072:	add    BYTE PTR [rax],al
  407075:	add    BYTE PTR [rax],al
  407077:	add    BYTE PTR [rax],ah
  407079:	pop    rax
  40707a:	add    BYTE PTR [rax],al
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rdx],dh
  407081:	movabs ds:0x2b992ddf,al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    BYTE PTR [rax],al
  40708e:	add    BYTE PTR [rax],al
  407090:	int    0x5d
  407092:	and    dl,dl
  407094:	data16 (bad) 
  407096:	(bad)  
  407097:	inc    DWORD PTR [rax]
  407099:	add    BYTE PTR [rax],al
  40709b:	add    BYTE PTR [rax],al
  40709d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000408000 <.rdata>:
  408000:	movsxd esp,DWORD PTR [rcx+0x6e]
  408003:	outs   dx,BYTE PTR ds:[rsi]
  408004:	outs   dx,DWORD PTR ds:[rsi]
  408005:	je     0x408027
  408007:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40800a:	jbe    0x408071
  40800c:	jb     0x408082
  40800e:	and    BYTE PTR [rdi+0x69],dh
  408011:	fs movsxd ebp,DWORD PTR gs:[rax+0x61]
  408016:	jb     0x408038
  408018:	jae    0x40808f
  40801a:	(bad)
  40801f:	jne    0x408095
  408021:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  408028:	je     0x40808b
  40802a:	jb     0x408093
  40802c:	gs je  0x40804f
  40802f:	outs   dx,BYTE PTR gs:[rsi]
  408031:	movsxd ebp,DWORD PTR [rdi+0x64]
  408034:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
  40803b:	add    BYTE PTR [rax],al
  40803d:	add    BYTE PTR [rax],al
  40803f:	add    BYTE PTR [rbx+0x61],ah
  408042:	outs   dx,BYTE PTR ds:[rsi]
  408043:	outs   dx,BYTE PTR ds:[rsi]
  408044:	outs   dx,DWORD PTR ds:[rsi]
  408045:	je     0x408067
  408047:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40804a:	jbe    0x4080b1
  40804c:	jb     0x4080c2
  40804e:	and    BYTE PTR [rbp+0x6e],dh
  408051:	imul   esp,DWORD PTR [rbx+0x6f],0x73206564
  408058:	jne    0x4080bc
  40805a:	jae    0x4080d0
  40805c:	imul   esi,DWORD PTR [rbp+rsi*2+0x74],0x206e6f69
  408064:	je     0x4080d5
  408066:	and    BYTE PTR [rcx+riz*2+0x72],dh
  40806a:	addr32 gs je 0x40808e
  40806e:	outs   dx,BYTE PTR gs:[rsi]
  408070:	movsxd ebp,DWORD PTR [rdi+0x64]
  408073:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
  40807a:	add    BYTE PTR [rax],al
  40807c:	add    BYTE PTR [rax],al
  40807e:	add    BYTE PTR [rax],al
  408080:	movsxd esp,DWORD PTR [rcx+0x6e]
  408083:	outs   dx,BYTE PTR ds:[rsi]
  408084:	outs   dx,DWORD PTR ds:[rsi]
  408085:	je     0x4080a7
  408087:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40808a:	jbe    0x4080f1
  40808c:	jb     0x408102
  40808e:	and    BYTE PTR [rdx+0x79],ah
  408091:	je     0x4080f8
  408093:	and    BYTE PTR [rbx+0x75],dh
  408096:	(bad)
  40809b:	jne    0x408111
  40809d:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  4080a4:	ja     0x40810f
  4080a6:	fs and BYTE PTR gs:[rbx+0x74],dh
  4080ab:	jb     0x408116
  4080ad:	outs   dx,BYTE PTR ds:[rsi]
  4080ae:	cmp    ah,BYTE PTR [eax]
  4080b1:	and    eax,0x73
  4080b6:	add    BYTE PTR [rax],al
  4080b8:	movsxd esp,DWORD PTR [rcx+0x6e]
  4080bb:	outs   dx,BYTE PTR ds:[rsi]
  4080bc:	outs   dx,DWORD PTR ds:[rsi]
  4080bd:	je     0x4080df
  4080bf:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4080c2:	jbe    0x408129
  4080c4:	jb     0x40813a
  4080c6:	and    BYTE PTR [rdx+0x79],ah
  4080c9:	je     0x408130
  4080cb:	and    BYTE PTR [rbx+0x75],dh
  4080ce:	(bad)
  4080d3:	jne    0x408149
  4080d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  4080dc:	push   rbp
  4080dd:	outs   dx,BYTE PTR ds:[rsi]
  4080de:	imul   esp,DWORD PTR [rbx+0x6f],0x203a6564
  4080e5:	and    eax,0x73250073
  4080ea:	and    BYTE PTR [rcx+0x72],ah
  4080ed:	addr32 jne 0x40815d
  4080f0:	outs   dx,BYTE PTR gs:[rsi]
  4080f2:	je     0x40812e
  4080f4:	and    BYTE PTR [rcx+0x20],al
  4080f7:	outs   dx,WORD PTR ds:[rsi]
  4080f9:	jb     0x408168
  4080fb:	(bad)  
  4080fc:	je     0x40811e
  4080fe:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  408106:	and    BYTE PTR gs:[rdi+0x69],dh
  40810a:	je     0x408174
  40810c:	and    BYTE PTR [rcx+0x20],ah
  40810f:	jbe    0x408172
  408111:	jb     0x40817c
  408113:	(bad)  
  408114:	(bad)  
  408115:	ins    BYTE PTR es:[rdi],dx
  408116:	and    BYTE PTR gs:[rdi+0x69],dh
  40811a:	fs je  0x408185
  40811d:	and    BYTE PTR [rcx+0x73],ch
  408120:	and    BYTE PTR [rsi+0x6f],ch
  408123:	je     0x408145
  408125:	(bad)  
  408126:	ins    BYTE PTR es:[rdi],dx
  408127:	ins    BYTE PTR es:[rdi],dx
  408128:	outs   dx,DWORD PTR ds:[rsi]
  408129:	ja     0x408190
  40812b:	and    BYTE PTR fs:[rax+0x65],ch
  40812f:	jb     0x408196
  408131:	add    BYTE PTR cs:[rax],al
  408134:	add    BYTE PTR [rax],al
  408136:	add    BYTE PTR [rax],al
  408138:	and    eax,0x72612073
  40813d:	addr32 jne 0x4081ad
  408140:	outs   dx,BYTE PTR gs:[rsi]
  408142:	je     0x40817e
  408144:	and    BYTE PTR [rcx+0x20],al
  408147:	outs   dx,WORD PTR ds:[rsi]
  408149:	jb     0x4081b8
  40814b:	(bad)  
  40814c:	je     0x40816e
  40814e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  408156:	and    BYTE PTR gs:[rdi+0x69],dh
  40815a:	je     0x4081c4
  40815c:	and    BYTE PTR [rcx+0x20],ah
  40815f:	jbe    0x4081c2
  408161:	jb     0x4081cc
  408163:	(bad)  
  408164:	(bad)  
  408165:	ins    BYTE PTR es:[rdi],dx
  408166:	and    BYTE PTR gs:[rax+0x72],dh
  40816a:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  40816e:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  408175:	outs   dx,BYTE PTR ds:[rsi]
  408176:	outs   dx,DWORD PTR ds:[rsi]
  408177:	je     0x408199
  408179:	(bad)  
  40817a:	ins    BYTE PTR es:[rdi],dx
  40817b:	ins    BYTE PTR es:[rdi],dx
  40817c:	outs   dx,DWORD PTR ds:[rsi]
  40817d:	ja     0x4081e4
  40817f:	and    BYTE PTR fs:[rax+0x65],ch
  408183:	jb     0x4081ea
  408185:	add    BYTE PTR cs:[rax],al
  408188:	and    eax,0x72612073
  40818d:	addr32 jne 0x4081fd
  408190:	outs   dx,BYTE PTR gs:[rsi]
  408192:	je     0x4081ce
  408194:	and    BYTE PTR [rcx+0x20],al
  408197:	outs   dx,WORD PTR ds:[rsi]
  408199:	jb     0x408208
  40819b:	(bad)  
  40819c:	je     0x4081be
  40819e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  4081a6:	and    BYTE PTR gs:[rdi+0x69],dh
  4081aa:	je     0x408214
  4081ac:	and    BYTE PTR [rcx+0x20],ah
  4081af:	jae    0x40821a
  4081b1:	jp     0x408218
  4081b3:	and    BYTE PTR [rcx+0x73],ch
  4081b6:	and    BYTE PTR [rsi+0x6f],ch
  4081b9:	je     0x4081db
  4081bb:	(bad)  
  4081bc:	ins    BYTE PTR es:[rdi],dx
  4081bd:	ins    BYTE PTR es:[rdi],dx
  4081be:	outs   dx,DWORD PTR ds:[rsi]
  4081bf:	ja     0x408226
  4081c1:	and    BYTE PTR fs:[rax+0x65],ch
  4081c5:	jb     0x40822c
  4081c7:	add    BYTE PTR cs:[rax],al
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	add    BYTE PTR [rax],al
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	and    eax,0x72612073
  4081d5:	addr32 jne 0x408245
  4081d8:	outs   dx,BYTE PTR gs:[rsi]
  4081da:	je     0x408216
  4081dc:	and    BYTE PTR [rax+rbp*2+0x65],dl
  4081e0:	and    BYTE PTR [rbx+0x74],dh
  4081e3:	jb     0x40824e
  4081e5:	outs   dx,BYTE PTR ds:[rsi]
  4081e6:	and    BYTE PTR [ebp+0x6e],ah
  4081ea:	fs jae 0x40820d
  4081ed:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4081f4:	ins    DWORD PTR es:[rdi],dx
  4081f5:	imul   esp,DWORD PTR [rsp+riz*2+0x6c],0x666f2065
  4081fd:	and    BYTE PTR [rcx+0x20],ah
  408200:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  408208:	gs add BYTE PTR cs:[rax],al
  40820c:	add    BYTE PTR [rax],al
  40820e:	add    BYTE PTR [rax],al
  408210:	and    eax,0x72612073
  408215:	addr32 jne 0x408285
  408218:	outs   dx,BYTE PTR gs:[rsi]
  40821a:	je     0x408256
  40821c:	and    BYTE PTR [rax+rbp*2+0x65],dl
  408220:	and    BYTE PTR [rbx+0x68],ah
  408223:	(bad)  
  408224:	jb     0x408287
  408226:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40822a:	and    BYTE PTR [rdi],ah
  40822c:	and    eax,0x69202763
  408231:	jae    0x408253
  408233:	outs   dx,BYTE PTR ds:[rsi]
  408234:	outs   dx,DWORD PTR ds:[rsi]
  408235:	je     0x408257
  408237:	(bad)  
  408238:	and    BYTE PTR [rsi+0x61],dh
  40823b:	ins    BYTE PTR es:[rdi],dx
  40823c:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x65766e6f
  408244:	jb     0x4082b9
  408246:	imul   ebp,DWORD PTR [rdi+0x6e],0x65707320
  40824d:	movsxd ebp,DWORD PTR [rcx+0x66]
  408250:	imul   esp,DWORD PTR [rbp+0x72],0x2e
  408257:	add    BYTE PTR [rip+0x72612073],ah        # 0x72a1a2d0
  40825d:	addr32 jne 0x4082cd
  408260:	outs   dx,BYTE PTR gs:[rsi]
  408262:	je     0x40829e
  408264:	and    BYTE PTR [rax+rbp*2+0x65],dl
  408268:	and    BYTE PTR [rbx+0x68],ah
  40826b:	(bad)  
  40826c:	jb     0x4082cf
  40826e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  408272:	and    BYTE PTR [rax+rbp*2+0x61],dh
  408276:	je     0x408298
  408278:	je     0x4082df
  40827a:	jb     0x4082e9
  40827c:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  408283:	je     0x4082ed
  408285:	and    BYTE PTR gs:[rsi+0x6f],ah
  408289:	jb     0x4082f8
  40828b:	(bad)  
  40828c:	je     0x4082ae
  40828e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x76697463
  408296:	and    BYTE PTR gs:[rcx+0x73],ch
  40829a:	and    BYTE PTR [rsi+0x6f],ch
  40829d:	je     0x4082bf
  40829f:	(bad)  
  4082a0:	and    BYTE PTR [rsi+0x61],dh
  4082a3:	ins    BYTE PTR es:[rdi],dx
  4082a4:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x65766e6f
  4082ac:	jb     0x408321
  4082ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x65707320
  4082b5:	movsxd ebp,DWORD PTR [rcx+0x66]
  4082b8:	imul   esp,DWORD PTR [rbp+0x72],0x2e
  4082bf:	add    BYTE PTR [rip+0x72612073],ah        # 0x72a1a338
  4082c5:	addr32 jne 0x408335
  4082c8:	outs   dx,BYTE PTR gs:[rsi]
  4082ca:	je     0x408306
  4082cc:	and    BYTE PTR [rax+rbp*2+0x65],dl
  4082d0:	and    BYTE PTR [rsi+0x6f],ah
  4082d3:	jb     0x408342
  4082d5:	(bad)  
  4082d6:	je     0x4082f8
  4082d8:	jae    0x40834e
  4082da:	jb     0x408345
  4082dc:	outs   dx,BYTE PTR ds:[rsi]
  4082dd:	and    BYTE PTR [ebx+0x6f],ah
  4082e1:	outs   dx,BYTE PTR ds:[rsi]
  4082e2:	jae    0x408359
  4082e4:	ins    DWORD PTR es:[rdi],dx
  4082e5:	gs jae 0x408308
  4082e8:	ins    DWORD PTR es:[rdi],dx
  4082e9:	outs   dx,DWORD PTR ds:[rsi]
  4082ea:	jb     0x408351
  4082ec:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4082f0:	outs   dx,BYTE PTR ds:[rsi]
  4082f1:	and    BYTE PTR [rdi+0x6e],ch
  4082f4:	and    BYTE PTR gs:[rcx+0x72],ah
  4082f8:	addr32 jne 0x408368
  4082fb:	outs   dx,BYTE PTR gs:[rsi]
  4082fd:	je     0x408339
  4082ff:	and    BYTE PTR [rip+0x72612075],ah        # 0x72a1a37a
  408305:	addr32 jne 0x408375
  408308:	outs   dx,BYTE PTR gs:[rsi]
  40830a:	je     0x40837f
  40830c:	add    BYTE PTR cs:[rdi+0x72],ch
  408310:	cmp    ah,BYTE PTR [rax]
  408312:	and    BYTE PTR [rax],ah
  408314:	and    BYTE PTR [rcx+0x63],ch
  408317:	outs   dx,DWORD PTR ds:[rsi]
  408318:	outs   dx,BYTE PTR ds:[rsi]
  408319:	jbe    0x40833b
  40831b:	sub    eax,0x6c
  408320:	push   rbp
  408321:	jae    0x408384
  408323:	cmp    ah,BYTE PTR gs:[eax]
  408327:	imul   esp,DWORD PTR [rbx+0x6f],0x5b20766e
  40832e:	sub    eax,0x5b205d63
  408333:	sub    eax,0x5b205d73
  408338:	sub    eax,0x72662066
  40833d:	outs   dx,DWORD PTR ds:[rsi]
  40833e:	ins    DWORD PTR es:[rdi],dx
  40833f:	movsxd ebp,DWORD PTR [rdi+0x64]
  408342:	gs pop rbp
  408344:	and    BYTE PTR [rbx+0x2d],bl
  408347:	je     0x408369
  408349:	je     0x4083ba
  40834b:	movsxd ebp,DWORD PTR [rdi+0x64]
  40834e:	gs pop rbp
  408350:	and    BYTE PTR [rbx+0x66],bl
  408353:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x5d2e2e2e
  40835b:	add    BYTE PTR [rip+0x73250a73],ah        # 0x73658dd4
  408361:	or     al,BYTE PTR [rax]
  408363:	add    BYTE PTR [rax],al
  408365:	add    BYTE PTR [rax],al
  408367:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  40836b:	and    BYTE PTR [rax+0x25],ah
  40836e:	jae    0x408390
  408370:	sub    eax,0x6c65682d
  408375:	jo     0x40839e
  408377:	and    BYTE PTR [rsi+0x6f],ah
  40837a:	jb     0x40839c
  40837c:	ins    DWORD PTR es:[rdi],dx
  40837d:	outs   dx,DWORD PTR ds:[rsi]
  40837e:	jb     0x4083e5
  408380:	and    BYTE PTR [rcx+0x6e],ch
  408383:	outs   dx,WORD PTR ds:[rsi]
  408385:	jb     0x4083f4
  408387:	(bad)  
  408388:	je     0x4083f3
  40838a:	outs   dx,DWORD PTR ds:[rsi]
  40838b:	outs   dx,BYTE PTR ds:[rsi]
  40838c:	or     al,BYTE PTR cs:[rax]
  40838f:	add    BYTE PTR [rbp+0x73],dl
  408392:	(bad)  
  408393:	cmp    ah,BYTE PTR gs:[eax]
  408397:	and    eax,0x4f5b2073
  40839c:	push   rax
  40839d:	push   rsp
  40839e:	rex.WB
  40839f:	rex.WRXB
  4083a0:	rex.WRX
  4083a1:	cs cs cs pop rbp
  4083a5:	and    BYTE PTR [rbx+0x2d],bl
  4083a8:	data16 and BYTE PTR [rbp+0x4e],al
  4083ac:	rex.XB
  4083ad:	rex.WRXB
  4083ae:	rex.R
  4083af:	rex.WB
  4083b0:	rex.WRX
  4083b1:	rex.RXB pop r13
  4083b3:	and    BYTE PTR [rbx+0x2d],bl
  4083b6:	je     0x4083d8
  4083b8:	rex.RB
  4083b9:	rex.WRX
  4083ba:	rex.XB
  4083bb:	rex.WRXB
  4083bc:	rex.R
  4083bd:	rex.WB
  4083be:	rex.WRX
  4083bf:	rex.RXB pop r13
  4083c1:	and    BYTE PTR [rbx+0x49],bl
  4083c4:	rex.WRX push rax
  4083c6:	push   rbp
  4083c7:	push   rsp
  4083c8:	rex.RX
  4083c9:	rex.WB
  4083ca:	rex.WR
  4083cb:	rex.RB
  4083cc:	cs cs cs pop rbp
  4083d0:	or     al,BYTE PTR [rax]
  4083d2:	outs   dx,DWORD PTR ds:[rsi]
  4083d3:	jb     0x40840f
  4083d5:	and    BYTE PTR [rax],ah
  4083d7:	and    BYTE PTR [rax],ah
  4083d9:	and    eax,0x6c2d2073
  4083de:	or     al,BYTE PTR [rax]
  4083e0:	or     al,BYTE PTR [rax]
  4083e2:	add    BYTE PTR [rax],al
  4083e4:	add    BYTE PTR [rax],al
  4083e6:	add    BYTE PTR [rax],al
  4083e8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4083ea:	outs   dx,BYTE PTR ds:[rsi]
  4083eb:	jbe    0x408452
  4083ed:	jb     0x408463
  4083ef:	jae    0x408411
  4083f1:	je     0x408458
  4083f3:	js     0x408469
  4083f5:	and    BYTE PTR [rsi+0x72],ah
  4083f8:	outs   dx,DWORD PTR ds:[rsi]
  4083f9:	ins    DWORD PTR es:[rdi],dx
  4083fa:	and    BYTE PTR [rdi+0x6e],ch
  4083fd:	and    BYTE PTR gs:[rbp+0x6e],ah
  408401:	movsxd ebp,DWORD PTR [rdi+0x64]
  408404:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  40840b:	(bad)  
  40840c:	outs   dx,BYTE PTR ds:[rsi]
  40840d:	outs   dx,DWORD PTR ds:[rsi]
  40840e:	je     0x408478
  408410:	gs jb  0x408433
  408413:	outs   dx,BYTE PTR gs:[rsi]
  408415:	movsxd ebp,DWORD PTR [rdi+0x64]
  408418:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e
  40841f:	add    BYTE PTR [rdi+0x70],cl
  408422:	je     0x40848d
  408424:	outs   dx,DWORD PTR ds:[rsi]
  408425:	outs   dx,BYTE PTR ds:[rsi]
  408426:	jae    0x408448
  408428:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40842b:	je     0x40849f
  40842d:	outs   dx,DWORD PTR ds:[rsi]
  40842e:	ins    BYTE PTR es:[rdi],dx
  40842f:	ins    BYTE PTR es:[rdi],dx
  408430:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  408437:	and    BYTE PTR [rcx+0x6e],ch
  40843a:	jo     0x4084b1
  40843c:	je     0x40845e
  40843e:	(bad)  
  40843f:	outs   dx,BYTE PTR ds:[rsi]
  408440:	and    BYTE PTR fs:[rdi+0x75],ch
  408444:	je     0x4084b6
  408446:	jne    0x4084bc
  408448:	and    BYTE PTR [rsi+0x6f],ah
  40844b:	jb     0x4084ba
  40844d:	(bad)  
  40844e:	je     0x40848a
  408450:	or     al,BYTE PTR [rax]
  408452:	add    BYTE PTR [rax],al
  408454:	add    BYTE PTR [rax],al
  408456:	add    BYTE PTR [rax],al
  408458:	and    BYTE PTR [rax],ah
  40845a:	sub    eax,0x4e452066
  40845f:	rex.XB
  408460:	rex.WRXB
  408461:	rex.R
  408462:	rex.WB
  408463:	rex.WRX
  408464:	rex.RXB sub al,0x20
  408467:	sub    eax,0x6f72662d
  40846c:	ins    DWORD PTR es:[rdi],dx
  40846d:	sub    eax,0x65646f63
  408472:	cmp    eax,0x4f434e45
  408477:	rex.R
  408478:	rex.WB
  408479:	rex.WRX
  40847a:	rex.RXB or r12b,BYTE PTR [r8]
  40847d:	and    BYTE PTR [rax],ah
  40847f:	and    BYTE PTR [rax],ah
  408481:	and    BYTE PTR [rax],ah
  408483:	and    BYTE PTR [rax],ah
  408485:	and    BYTE PTR [rax],ah
  408487:	and    BYTE PTR [rax],ah
  408489:	and    BYTE PTR [rax],ah
  40848b:	and    BYTE PTR [rax],ah
  40848d:	and    BYTE PTR [rax],ah
  40848f:	and    BYTE PTR [rax],ah
  408491:	and    BYTE PTR [rax],ah
  408493:	and    BYTE PTR [rax],ah
  408495:	and    BYTE PTR [rax],ah
  408497:	and    BYTE PTR [rax],ah
  408499:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40849d:	and    BYTE PTR [rbp+0x6e],ah
  4084a0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4084a3:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  4084aa:	je     0x408514
  4084ac:	and    BYTE PTR gs:[rcx+0x6e],ch
  4084b0:	jo     0x408527
  4084b2:	je     0x4084be
  4084b4:	add    BYTE PTR [rax],al
  4084b6:	add    BYTE PTR [rax],al
  4084b8:	and    BYTE PTR [rax],ah
  4084ba:	sub    eax,0x4e452074
  4084bf:	rex.XB
  4084c0:	rex.WRXB
  4084c1:	rex.R
  4084c2:	rex.WB
  4084c3:	rex.WRX
  4084c4:	rex.RXB sub al,0x20
  4084c7:	sub    eax,0x2d6f742d
  4084cc:	movsxd ebp,DWORD PTR [rdi+0x64]
  4084cf:	gs cmp eax,0x4f434e45
  4084d5:	rex.R
  4084d6:	rex.WB
  4084d7:	rex.WRX
  4084d8:	rex.RXB or r12b,BYTE PTR [r8]
  4084db:	and    BYTE PTR [rax],ah
  4084dd:	and    BYTE PTR [rax],ah
  4084df:	and    BYTE PTR [rax],ah
  4084e1:	and    BYTE PTR [rax],ah
  4084e3:	and    BYTE PTR [rax],ah
  4084e5:	and    BYTE PTR [rax],ah
  4084e7:	and    BYTE PTR [rax],ah
  4084e9:	and    BYTE PTR [rax],ah
  4084eb:	and    BYTE PTR [rax],ah
  4084ed:	and    BYTE PTR [rax],ah
  4084ef:	and    BYTE PTR [rax],ah
  4084f1:	and    BYTE PTR [rax],ah
  4084f3:	and    BYTE PTR [rax],ah
  4084f5:	and    BYTE PTR [rax],ah
  4084f7:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4084fb:	and    BYTE PTR [rbp+0x6e],ah
  4084fe:	movsxd ebp,DWORD PTR [rdi+0x64]
  408501:	imul   ebp,DWORD PTR [rsi+0x67],0x20666f20
  408508:	je     0x408572
  40850a:	and    BYTE PTR gs:[rdi+0x75],ch
  40850e:	je     0x408580
  408510:	jne    0x408586
  408512:	or     al,BYTE PTR [rax]
  408514:	add    BYTE PTR [rax],al
  408516:	add    BYTE PTR [rax],al
  408518:	rex.WRXB jo 0x40858f
  40851b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f632073
  408522:	outs   dx,BYTE PTR ds:[rsi]
  408523:	je     0x408597
  408525:	outs   dx,DWORD PTR ds:[rsi]
  408526:	ins    BYTE PTR es:[rdi],dx
  408527:	ins    BYTE PTR es:[rdi],dx
  408528:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  40852f:	jbe    0x408596
  408531:	jb     0x4085a6
  408533:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40853a:	(bad)  
  40853b:	ins    BYTE PTR es:[rdi],dx
  40853c:	gs ins DWORD PTR es:[rdi],dx
  40853e:	jae    0x40857a
  408540:	or     al,BYTE PTR [rax]
  408542:	add    BYTE PTR [rax],al
  408544:	add    BYTE PTR [rax],al
  408546:	add    BYTE PTR [rax],al
  408548:	and    BYTE PTR [rax],ah
  40854a:	sub    eax,0x20202063
  40854f:	and    BYTE PTR [rax],ah
  408551:	and    BYTE PTR [rax],ah
  408553:	and    BYTE PTR [rax],ah
  408555:	and    BYTE PTR [rax],ah
  408557:	and    BYTE PTR [rax],ah
  408559:	and    BYTE PTR [rax],ah
  40855b:	and    BYTE PTR [rax],ah
  40855d:	and    BYTE PTR [rax],ah
  40855f:	and    BYTE PTR [rax],ah
  408561:	and    BYTE PTR [rax],ah
  408563:	and    BYTE PTR [rax],ah
  408565:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  408569:	movsxd esp,DWORD PTR [rcx+0x72]
  40856c:	and    BYTE PTR fs:[rbp+0x6e],dh
  408570:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408573:	jbe    0x4085da
  408575:	jb     0x4085eb
  408577:	imul   esp,DWORD PTR [rdx+0x6c],0x68632065
  40857e:	(bad)  
  40857f:	jb     0x4085e2
  408581:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  408585:	jae    0x408591
  408587:	add    BYTE PTR [rax],ah
  408589:	and    BYTE PTR [rip+0x696e752d],ch        # 0x69aefabc
  40858f:	movsxd ebp,DWORD PTR [rdi+0x64]
  408592:	gs sub eax,0x73627573
  408598:	je     0x4085d7
  40859a:	rex.RX
  40859b:	rex.WRXB push r10
  40859d:	rex.WRB
  40859e:	push   r12
  4085a0:	push   rbx
  4085a1:	push   rsp
  4085a2:	push   rdx
  4085a3:	rex.WB
  4085a4:	rex.WRX
  4085a5:	rex.RXB or r12b,BYTE PTR [r8]
  4085a8:	and    BYTE PTR [rax],ah
  4085aa:	and    BYTE PTR [rax],ah
  4085ac:	and    BYTE PTR [rax],ah
  4085ae:	and    BYTE PTR [rax],ah
  4085b0:	and    BYTE PTR [rax],ah
  4085b2:	and    BYTE PTR [rax],ah
  4085b4:	and    BYTE PTR [rax],ah
  4085b6:	and    BYTE PTR [rax],ah
  4085b8:	and    BYTE PTR [rax],ah
  4085ba:	and    BYTE PTR [rax],ah
  4085bc:	and    BYTE PTR [rax],ah
  4085be:	and    BYTE PTR [rax],ah
  4085c0:	and    BYTE PTR [rax],ah
  4085c2:	and    BYTE PTR [rax],ah
  4085c4:	and    BYTE PTR [rbx+0x75],dh
  4085c7:	(bad)
  4085cc:	jne    0x408642
  4085ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  4085d5:	and    BYTE PTR [rbp+0x6e],dh
  4085d8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4085db:	jbe    0x408642
  4085dd:	jb     0x408653
  4085df:	imul   esp,DWORD PTR [rdx+0x6c],0x6e552065
  4085e6:	imul   esp,DWORD PTR [rbx+0x6f],0x63206564
  4085ed:	push   0x63617261
  4085f2:	je     0x408659
  4085f4:	jb     0x408669
  4085f6:	or     al,BYTE PTR [rax]
  4085f8:	and    BYTE PTR [rax],ah
  4085fa:	sub    eax,0x7479622d
  4085ff:	gs sub eax,0x73627573
  408605:	je     0x408644
  408607:	rex.RX
  408608:	rex.WRXB push r10
  40860a:	rex.WRB
  40860b:	push   r12
  40860d:	push   rbx
  40860e:	push   rsp
  40860f:	push   rdx
  408610:	rex.WB
  408611:	rex.WRX
  408612:	rex.RXB and BYTE PTR [r8],r12b
  408615:	and    BYTE PTR [rbx+0x75],dh
  408618:	(bad)
  40861d:	jne    0x408693
  40861f:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  408626:	and    BYTE PTR [rbp+0x6e],dh
  408629:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40862c:	jbe    0x408693
  40862e:	jb     0x4086a4
  408630:	imul   esp,DWORD PTR [rdx+0x6c],0x79622065
  408637:	je     0x40869e
  408639:	jae    0x408645
  40863b:	add    BYTE PTR [rax],al
  40863d:	add    BYTE PTR [rax],al
  40863f:	add    BYTE PTR [rax],ah
  408641:	and    BYTE PTR [rip+0x6469772d],ch        # 0x64a9fd74
  408647:	movsxd ebp,DWORD PTR gs:[rax+0x61]
  40864b:	jb     0x40867a
  40864d:	jae    0x4086c4
  40864f:	(bad)
  408654:	rex.WRXB push r10
  408656:	rex.WRB
  408657:	push   r12
  408659:	push   rbx
  40865a:	push   rsp
  40865b:	push   rdx
  40865c:	rex.WB
  40865d:	rex.WRX
  40865e:	rex.RXB or r12b,BYTE PTR [r8]
  408661:	and    BYTE PTR [rax],ah
  408663:	and    BYTE PTR [rax],ah
  408665:	and    BYTE PTR [rax],ah
  408667:	and    BYTE PTR [rax],ah
  408669:	and    BYTE PTR [rax],ah
  40866b:	and    BYTE PTR [rax],ah
  40866d:	and    BYTE PTR [rax],ah
  40866f:	and    BYTE PTR [rax],ah
  408671:	and    BYTE PTR [rax],ah
  408673:	and    BYTE PTR [rax],ah
  408675:	and    BYTE PTR [rax],ah
  408677:	and    BYTE PTR [rax],ah
  408679:	and    BYTE PTR [rax],ah
  40867b:	and    BYTE PTR [rax],ah
  40867d:	and    BYTE PTR [rbx+0x75],dh
  408680:	(bad)
  408685:	jne    0x4086fb
  408687:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  40868e:	and    BYTE PTR [rbp+0x6e],dh
  408691:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408694:	jbe    0x4086fb
  408696:	jb     0x40870c
  408698:	imul   esp,DWORD PTR [rdx+0x6c],0x69772065
  40869f:	fs and BYTE PTR gs:[rbx+0x68],ah
  4086a4:	(bad)  
  4086a5:	jb     0x408708
  4086a7:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  4086ab:	jae    0x4086b7
  4086ad:	add    BYTE PTR [rax],al
  4086af:	add    BYTE PTR [rdi+0x70],cl
  4086b2:	je     0x40871d
  4086b4:	outs   dx,DWORD PTR ds:[rsi]
  4086b5:	outs   dx,BYTE PTR ds:[rsi]
  4086b6:	jae    0x4086d8
  4086b8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4086bb:	je     0x40872f
  4086bd:	outs   dx,DWORD PTR ds:[rsi]
  4086be:	ins    BYTE PTR es:[rdi],dx
  4086bf:	ins    BYTE PTR es:[rdi],dx
  4086c0:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  4086c7:	outs   dx,DWORD PTR ds:[rsi]
  4086c8:	jb     0x4086ea
  4086ca:	outs   dx,DWORD PTR ds:[rsi]
  4086cb:	jne    0x408741
  4086cd:	jo     0x408744
  4086cf:	je     0x40870b
  4086d1:	or     al,BYTE PTR [rax]
  4086d3:	add    BYTE PTR [rax],al
  4086d5:	add    BYTE PTR [rax],al
  4086d7:	add    BYTE PTR [rax],ah
  4086d9:	and    BYTE PTR [rip+0x2d202c73],ch        # 0x2d60b352
  4086df:	sub    eax,0x656c6973
  4086e4:	outs   dx,BYTE PTR ds:[rsi]
  4086e5:	je     0x408707
  4086e7:	and    BYTE PTR [rax],ah
  4086e9:	and    BYTE PTR [rax],ah
  4086eb:	and    BYTE PTR [rax],ah
  4086ed:	and    BYTE PTR [rax],ah
  4086ef:	and    BYTE PTR [rax],ah
  4086f1:	and    BYTE PTR [rax],ah
  4086f3:	and    BYTE PTR [rax],ah
  4086f5:	and    BYTE PTR [rbx+0x75],dh
  4086f8:	jo     0x40876a
  4086fa:	jb     0x408761
  4086fc:	jae    0x408771
  4086fe:	and    BYTE PTR [rbp+0x72],ah
  408701:	jb     0x408772
  408703:	jb     0x408725
  408705:	ins    DWORD PTR es:[rdi],dx
  408706:	gs jae 0x40877c
  408709:	(bad)  
  40870a:	addr32 gs jae 0x40872e
  40870e:	(bad)  
  40870f:	(bad)  
  408710:	outs   dx,DWORD PTR ds:[rsi]
  408711:	jne    0x408787
  408713:	and    BYTE PTR [rbx+0x6f],ah
  408716:	outs   dx,BYTE PTR ds:[rsi]
  408717:	jbe    0x40877e
  408719:	jb     0x40878e
  40871b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  408722:	(bad)  
  408723:	ins    BYTE PTR es:[rdi],dx
  408724:	gs ins DWORD PTR es:[rdi],dx
  408726:	jae    0x408732
  408728:	add    BYTE PTR [rcx+0x6e],cl
  40872b:	outs   dx,WORD PTR ds:[rsi]
  40872d:	jb     0x40879c
  40872f:	(bad)  
  408730:	je     0x40879b
  408732:	jbe    0x408799
  408734:	and    BYTE PTR [rdi+0x75],ch
  408737:	je     0x4087a9
  408739:	jne    0x4087af
  40873b:	cmp    cl,BYTE PTR [rdx]
  40873d:	add    BYTE PTR [rax],al
  40873f:	add    BYTE PTR [rax],ah
  408741:	and    BYTE PTR [rip+0x2d202c6c],ch        # 0x2d60b3b3
  408747:	sub    eax,0x7473696c
  40874c:	and    BYTE PTR [rax],ah
  40874e:	and    BYTE PTR [rax],ah
  408750:	and    BYTE PTR [rax],ah
  408752:	and    BYTE PTR [rax],ah
  408754:	and    BYTE PTR [rax],ah
  408756:	and    BYTE PTR [rax],ah
  408758:	and    BYTE PTR [rax],ah
  40875a:	and    BYTE PTR [rax],ah
  40875c:	and    BYTE PTR [rax],ah
  40875e:	ins    BYTE PTR es:[rdi],dx
  40875f:	imul   esi,DWORD PTR [rbx+0x74],0x65687420
  408766:	and    BYTE PTR [rbx+0x75],dh
  408769:	jo     0x4087db
  40876b:	outs   dx,DWORD PTR ds:[rsi]
  40876c:	jb     0x4087e2
  40876e:	gs and BYTE PTR fs:[rbp+0x6e],ah
  408773:	movsxd ebp,DWORD PTR [rdi+0x64]
  408776:	imul   ebp,DWORD PTR [rsi+0x67],0xa73
  40877d:	add    BYTE PTR [rax],al
  40877f:	add    BYTE PTR [rax],ah
  408781:	and    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca5efb4
  408787:	jo     0x4087a9
  408789:	and    BYTE PTR [rax],ah
  40878b:	and    BYTE PTR [rax],ah
  40878d:	and    BYTE PTR [rax],ah
  40878f:	and    BYTE PTR [rax],ah
  408791:	and    BYTE PTR [rax],ah
  408793:	and    BYTE PTR [rax],ah
  408795:	and    BYTE PTR [rax],ah
  408797:	and    BYTE PTR [rax],ah
  408799:	and    BYTE PTR [rax],ah
  40879b:	and    BYTE PTR [rax],ah
  40879d:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4087a1:	jo     0x40880f
  4087a3:	(bad)  
  4087a4:	jns    0x4087c6
  4087a6:	je     0x408810
  4087a8:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4087af:	and    BYTE PTR [rcx+0x6e],ah
  4087b2:	and    BYTE PTR fs:[rbp+0x78],ah
  4087b6:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  4087be:	add    BYTE PTR [rax],al
  4087c0:	and    BYTE PTR [rax],ah
  4087c2:	sub    eax,0x7265762d
  4087c7:	jae    0x408832
  4087c9:	outs   dx,DWORD PTR ds:[rsi]
  4087ca:	outs   dx,BYTE PTR ds:[rsi]
  4087cb:	and    BYTE PTR [rax],ah
  4087cd:	and    BYTE PTR [rax],ah
  4087cf:	and    BYTE PTR [rax],ah
  4087d1:	and    BYTE PTR [rax],ah
  4087d3:	and    BYTE PTR [rax],ah
  4087d5:	and    BYTE PTR [rax],ah
  4087d7:	and    BYTE PTR [rax],ah
  4087d9:	and    BYTE PTR [rax],ah
  4087db:	and    BYTE PTR [rax],ah
  4087dd:	and    BYTE PTR [rdi+0x75],ch
  4087e0:	je     0x408852
  4087e2:	jne    0x408858
  4087e4:	and    BYTE PTR [rsi+0x65],dh
  4087e7:	jb     0x40885c
  4087e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  4087f0:	outs   dx,DWORD PTR ds:[rsi]
  4087f1:	jb     0x408860
  4087f3:	(bad)  
  4087f4:	je     0x40885f
  4087f6:	outs   dx,DWORD PTR ds:[rsi]
  4087f7:	outs   dx,BYTE PTR ds:[rsi]
  4087f8:	and    BYTE PTR [rcx+0x6e],ah
  4087fb:	and    BYTE PTR fs:[rbp+0x78],ah
  4087ff:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  408807:	add    BYTE PTR [rdx+0x65],dl
  40880a:	jo     0x40887b
  40880c:	jb     0x408882
  40880e:	and    BYTE PTR [rdx+0x75],ah
  408811:	addr32 jae 0x408834
  408814:	je     0x408885
  408816:	and    BYTE PTR [rdx+riz*2],bh
  408819:	jne    0x408882
  40881b:	sub    eax,0x2d756e67
  408820:	ins    BYTE PTR es:[rdi],dx
  408821:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  408828:	rex
  408829:	outs   dx,BYTE PTR ds:[esi]
  40882b:	jne    0x40885b
  40882d:	outs   dx,DWORD PTR ds:[rsi]
  40882e:	jb     0x408897
  408830:	ds or  al,BYTE PTR cs:[rax]
  408834:	and    eax,0x75253a73
  408839:	cmp    ah,BYTE PTR [rip+0x63203a75]        # 0x6360c2b4
  40883f:	(bad)  
  408840:	outs   dx,BYTE PTR ds:[rsi]
  408841:	outs   dx,BYTE PTR ds:[rsi]
  408842:	outs   dx,DWORD PTR ds:[rsi]
  408843:	je     0x408865
  408845:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408848:	jbe    0x4088af
  40884a:	jb     0x4088c0
  40884c:	add    BYTE PTR [rax],al
  40884e:	add    BYTE PTR [rax],al
  408850:	and    eax,0x75253a73
  408855:	cmp    ah,BYTE PTR [rip+0x69203a75]        # 0x6960c2d0
  40885b:	outs   dx,BYTE PTR ds:[rsi]
  40885c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40885f:	jo     0x4088cd
  408861:	gs je  0x4088c9
  408864:	and    BYTE PTR [rbx+0x68],ah
  408867:	(bad)  
  408868:	jb     0x4088cb
  40886a:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40886e:	and    BYTE PTR [rdi+0x72],ch
  408871:	and    BYTE PTR [rbx+0x68],dh
  408874:	imul   esp,DWORD PTR [rsi+0x74],0x71657320
  40887b:	jne    0x4088e2
  40887d:	outs   dx,BYTE PTR ds:[rsi]
  40887e:	movsxd esp,DWORD PTR [rbp+0x0]
  408881:	and    eax,0x75253a73
  408886:	cmp    ah,BYTE PTR [rip+0x75]        # 0x408901
  40888c:	add    BYTE PTR [rax],al
  40888e:	add    BYTE PTR [rax],al
  408890:	movsxd esp,DWORD PTR [rcx+0x6e]
  408893:	outs   dx,BYTE PTR ds:[rsi]
  408894:	outs   dx,DWORD PTR ds:[rsi]
  408895:	je     0x4088b7
  408897:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40889a:	jbe    0x408901
  40889c:	jb     0x408912
  40889e:	and    BYTE PTR [rdx+0x79],ah
  4088a1:	je     0x408908
  4088a3:	and    BYTE PTR [rbx+0x75],dh
  4088a6:	(bad)
  4088ab:	jne    0x408921
  4088ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  4088b4:	je     0x408917
  4088b6:	jb     0x40891f
  4088b8:	gs je  0x4088db
  4088bb:	outs   dx,BYTE PTR gs:[rsi]
  4088bd:	movsxd ebp,DWORD PTR [rdi+0x64]
  4088c0:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
  4088c7:	add    BYTE PTR [rip+0x49203a73],ah        # 0x4960c340
  4088cd:	(bad)  
  4088ce:	rex.WRXB and BYTE PTR [r13+0x72],r12b
  4088d2:	jb     0x408943
  4088d4:	jb     0x4088d6
  4088d6:	movsxd ebp,DWORD PTR [rax+0x61]
  4088d9:	jb     0x4088db
  4088db:	add    BYTE PTR [rip+0x662d002d],ch        # 0x666d890e
  4088e1:	add    BYTE PTR [rip+0x6f72662d],ch        # 0x6fb2ef14
  4088e7:	ins    DWORD PTR es:[rdi],dx
  4088e8:	sub    eax,0x65646f63
  4088ed:	add    BYTE PTR [rip+0x6f72662d],ch        # 0x6fb2ef20
  4088f3:	ins    DWORD PTR es:[rdi],dx
  4088f4:	sub    eax,0x65646f63
  4088f9:	cmp    eax,0x742d00
  4088fe:	sub    eax,0x2d6f742d
  408903:	movsxd ebp,DWORD PTR [rdi+0x64]
  408906:	add    BYTE PTR gs:[rip+0x2d6f742d],ch        # 0x2daffd3a
  40890d:	movsxd ebp,DWORD PTR [rdi+0x64]
  408910:	gs cmp eax,0x6c2d00
  408916:	sub    eax,0x73696c2d
  40891b:	je     0x40891d
  40891d:	sub    eax,0x7479622d
  408922:	gs sub eax,0x73627573
  408928:	je     0x40892a
  40892a:	sub    eax,0x7479622d
  40892f:	gs sub eax,0x73627573
  408935:	je     0x408974
  408937:	add    BYTE PTR [rip+0x6469772d],ch        # 0x64aa006a
  40893d:	movsxd ebp,DWORD PTR gs:[rax+0x61]
  408941:	jb     0x408970
  408943:	jae    0x4089ba
  408945:	(bad)
  40894a:	sub    eax,0x65646977
  40894f:	movsxd ebp,DWORD PTR [rax+0x61]
  408952:	jb     0x408981
  408954:	jae    0x4089cb
  408956:	(bad)
  40895b:	sub    eax,0x696e752d
  408960:	movsxd ebp,DWORD PTR [rdi+0x64]
  408963:	gs sub eax,0x73627573
  408969:	je     0x40896b
  40896b:	sub    eax,0x696e752d
  408970:	movsxd ebp,DWORD PTR [rdi+0x64]
  408973:	gs sub eax,0x73627573
  408979:	je     0x4089b8
  40897b:	add    BYTE PTR [rip+0x6c69732d],ch        # 0x6ca9fcae
  408981:	outs   dx,BYTE PTR gs:[rsi]
  408983:	je     0x408985
  408985:	sub    eax,0x6c65682d
  40898a:	jo     0x40898c
  40898c:	sub    eax,0x7265762d
  408991:	jae    0x4089fc
  408993:	outs   dx,DWORD PTR ds:[rsi]
  408994:	outs   dx,BYTE PTR ds:[rsi]
  408995:	add    BYTE PTR [rcx+0x63],ch
  408998:	outs   dx,DWORD PTR ds:[rsi]
  408999:	outs   dx,BYTE PTR ds:[rsi]
  40899a:	jbe    0x4089bc
  40899c:	sub    BYTE PTR [rdi+0x4e],al
  40899f:	push   rbp
  4089a0:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  4089a4:	imul   esp,DWORD PTR [rbx+0x6f],0x2520766e
  4089ab:	fs cs and eax,0xa2964
  4089b2:	xor    dh,BYTE PTR [rax]
  4089b4:	xor    BYTE PTR [rax],dh
  4089b6:	sub    eax,0x31313032
  4089bb:	add    BYTE PTR [rax],al
  4089bd:	add    BYTE PTR [rax],al
  4089bf:	add    BYTE PTR [rbx+0x6f],al
  4089c2:	jo     0x408a3d
  4089c4:	jb     0x408a2f
  4089c6:	addr32 push 0x43282074
  4089cc:	sub    DWORD PTR [rax],esp
  4089ce:	and    eax,0x72462073
  4089d3:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4089d8:	data16 je 0x408a52
  4089db:	(bad)  
  4089dc:	jb     0x408a43
  4089de:	and    BYTE PTR [rsi+0x6f],al
  4089e1:	jne    0x408a51
  4089e3:	fs (bad) 
  4089e5:	je     0x408a50
  4089e7:	outs   dx,DWORD PTR ds:[rsi]
  4089e8:	outs   dx,BYTE PTR ds:[rsi]
  4089e9:	sub    al,0x20
  4089eb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4089ed:	movsxd ebp,DWORD PTR [rsi]
  4089ef:	or     al,BYTE PTR [rax]
  4089f1:	add    BYTE PTR [rax],al
  4089f3:	add    BYTE PTR [rax],al
  4089f5:	add    BYTE PTR [rax],al
  4089f7:	add    BYTE PTR [rcx+rbp*2+0x63],cl
  4089fb:	outs   dx,BYTE PTR gs:[rsi]
  4089fd:	jae    0x408a64
  4089ff:	and    BYTE PTR [rdi+0x50],al
  408a02:	rex.WR jbe 0x408a38
  408a05:	sub    edi,DWORD PTR [rdx]
  408a07:	and    BYTE PTR [rdi+0x4e],al
  408a0a:	push   rbp
  408a0b:	and    BYTE PTR [rdi+0x50],al
  408a0e:	rex.WR and BYTE PTR [rsi+0x65],r14b
  408a12:	jb     0x408a87
  408a14:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  408a1b:	jb     0x408a3d
  408a1d:	ins    BYTE PTR es:[rdi],dx
  408a1e:	(bad)  
  408a1f:	je     0x408a86
  408a21:	jb     0x408a43
  408a23:	cmp    al,0x68
  408a25:	je     0x408a9b
  408a27:	jo     0x408a63
  408a29:	(bad)  
  408a2a:	(bad)  
  408a2b:	outs   dx,BYTE PTR ds:[esi]
  408a2d:	jne    0x408a5d
  408a2f:	outs   dx,DWORD PTR ds:[rsi]
  408a30:	jb     0x408a99
  408a32:	(bad)  
  408a33:	ins    BYTE PTR es:[rdi],dx
  408a34:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  408a3b:	(bad)  
  408a3c:	addr32 jo 0x408aab
  408a3f:	cs push 0x3e6c6d74
  408a45:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  408a49:	jae    0x408a6b
  408a4b:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  408a52:	and    BYTE PTR [rbx+0x6f],dh
  408a55:	data16 je 0x408acf
  408a58:	(bad)  
  408a59:	jb     0x408ac0
  408a5b:	cmp    ah,BYTE PTR [rax]
  408a5d:	jns    0x408ace
  408a5f:	jne    0x408a81
  408a61:	(bad)  
  408a62:	jb     0x408ac9
  408a64:	and    BYTE PTR [rsi+0x72],ah
  408a67:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  408a6d:	movsxd ebp,DWORD PTR [rax+0x61]
  408a70:	outs   dx,BYTE PTR ds:[rsi]
  408a71:	and    BYTE PTR gs:[ecx+0x6e],ah
  408a76:	and    BYTE PTR fs:[rdx+0x65],dh
  408a7a:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  408a82:	je     0x408ae9
  408a84:	and    BYTE PTR [rcx+0x74],ch
  408a87:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  408a8c:	jb     0x408af3
  408a8e:	and    BYTE PTR [rcx+0x73],ch
  408a91:	and    BYTE PTR [rsi+0x4f],cl
  408a94:	and    BYTE PTR [rdi+0x41],dl
  408a97:	push   rdx
  408a98:	push   rdx
  408a99:	rex.B
  408a9a:	rex.WRX push rsp
  408a9c:	pop    rcx
  408a9d:	sub    al,0x20
  408a9f:	je     0x408b10
  408aa1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408aa5:	and    BYTE PTR [rbp+0x78],ah
  408aa8:	je     0x408b0f
  408aaa:	outs   dx,BYTE PTR ds:[rsi]
  408aab:	je     0x408acd
  408aad:	jo     0x408b14
  408aaf:	jb     0x408b1e
  408ab1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  408ab9:	and    BYTE PTR [rcx+riz*2+0x77],ch
  408abd:	or     al,BYTE PTR cs:[rax]
  408ac0:	rex.X jb 0x408b38
  408ac3:	outs   dx,BYTE PTR ds:[rsi]
  408ac4:	outs   dx,DWORD PTR ds:[rsi]
  408ac5:	and    BYTE PTR [rax+0x61],cl
  408ac8:	imul   esp,DWORD PTR [rdx+0x6c],0x72570065
  408acf:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7962206e
  408ad7:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4ab950
  408add:	sub    eax,0x6e69622d
  408ae2:	(bad)  
  408ae3:	jb     0x408b5e
  408ae5:	add    BYTE PTR [rbp+0x43],dl
  408ae8:	push   rbx
  408ae9:	sub    eax,0x34
  408aee:	add    BYTE PTR [rax],al
  408af0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408af3:	jbe    0x408b5a
  408af5:	jb     0x408b6a
  408af7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
  408afe:	ins    DWORD PTR es:[rdi],dx
  408aff:	and    BYTE PTR [rip+0x6e752073],ah        # 0x6eb5ab78
  408b05:	jae    0x408b7c
  408b07:	jo     0x408b79
  408b09:	outs   dx,DWORD PTR ds:[rsi]
  408b0a:	jb     0x408b80
  408b0c:	gs add BYTE PTR fs:[rbx+0x6f],ah
  408b11:	outs   dx,BYTE PTR ds:[rsi]
  408b12:	jbe    0x408b79
  408b14:	jb     0x408b89
  408b16:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  408b1d:	and    eax,0x6e752073
  408b22:	jae    0x408b99
  408b24:	jo     0x408b96
  408b26:	outs   dx,DWORD PTR ds:[rsi]
  408b27:	jb     0x408b9d
  408b29:	gs add BYTE PTR fs:[rax],al
  408b2d:	add    BYTE PTR [rax],al
  408b2f:	add    BYTE PTR [rbx+0x6f],ah
  408b32:	outs   dx,BYTE PTR ds:[rsi]
  408b33:	jbe    0x408b9a
  408b35:	jb     0x408baa
  408b37:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
  408b3e:	ins    DWORD PTR es:[rdi],dx
  408b3f:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb4abb8
  408b45:	and    BYTE PTR [rip+0x6e752073],ah        # 0x6eb5abbe
  408b4b:	jae    0x408bc2
  408b4d:	jo     0x408bbf
  408b4f:	outs   dx,DWORD PTR ds:[rsi]
  408b50:	jb     0x408bc6
  408b52:	gs add BYTE PTR fs:[rax],al
  408b56:	add    BYTE PTR [rax],al
  408b58:	je     0x408bcc
  408b5a:	jns    0x408b7c
  408b5c:	(bad)  
  408b5d:	and    eax,0x6c2d2073
  408b62:	(bad)  
  408b63:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408b67:	addr32 gs je 0x408b8b
  408b6b:	je     0x408bd5
  408b6d:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
  408b72:	je     0x408b94
  408b74:	outs   dx,DWORD PTR ds:[rsi]
  408b75:	data16 and BYTE PTR [rbx+0x75],dh
  408b79:	jo     0x408beb
  408b7b:	outs   dx,DWORD PTR ds:[rsi]
  408b7c:	jb     0x408bf2
  408b7e:	gs and BYTE PTR fs:[rbp+0x6e],ah
  408b83:	movsxd ebp,DWORD PTR [rdi+0x64]
  408b86:	imul   ebp,DWORD PTR [rsi+0x67],0x55450073
  408b8d:	rex.XB sub eax,0x4700504a
  408b93:	rex.X xor sil,BYTE PTR [rbx]
  408b96:	xor    DWORD PTR [rdx],esi
  408b98:	add    BYTE PTR [rbp+0x55],al
  408b9b:	rex.XB sub eax,0x42005754
  408ba1:	rex.WB
  408ba2:	rex.RXB xor eax,0x43554500
  408ba8:	sub    eax,0x4300524b
  408bad:	push   rax
  408bae:	cmp    DWORD PTR [rcx+rdi*1],esi
  408bb1:	add    BYTE PTR [rdx+0x4f],cl
  408bb4:	rex.W
  408bb5:	rex.B
  408bb6:	rex.X add BYTE PTR [rbp+0x43],dl
  408bba:	push   rbx
  408bbb:	sub    eax,0x4e492d34
  408bc0:	push   rsp
  408bc1:	rex.RB push r10
  408bc3:	rex.WRX
  408bc4:	rex.B
  408bc5:	rex.WR add BYTE PTR [rdi+0x63],r14b
  408bc9:	push   0x745f7261
  408bce:	add    BYTE PTR [rax],ch
  408bd0:	jae    0x408c46
  408bd2:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x25007200
  408bda:	jae    0x408bdc
  408bdc:	rex.WB (bad) 
  408bde:	rex.WRXB and BYTE PTR [r13+0x72],r12b
  408be2:	jb     0x408c53
  408be4:	jb     0x408be6
	...
  408bee:	add    BYTE PTR [rax],al
  408bf0:	and    BYTE PTR [r14+0x55],cl
  408bf4:	rex.WR
  408bf5:	rex.WR and BYTE PTR [rcx+0x72],r12b
  408bf9:	addr32 jbe 0x408c57
  408bfc:	xor    BYTE PTR [rbp+0x20],bl
  408bff:	ja     0x408c62
  408c01:	jae    0x408c23
  408c03:	jo     0x408c66
  408c05:	jae    0x408c7a
  408c07:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  408c0d:	outs   dx,DWORD PTR ds:[rsi]
  408c0e:	jne    0x408c77
  408c10:	push   0x206e6120
  408c15:	gs js  0x408c7d
  408c18:	movsxd esp,DWORD PTR [rax]
  408c1a:	jae    0x408c95
  408c1c:	jae    0x408c92
  408c1e:	gs ins DWORD PTR es:[rdi],dx
  408c20:	and    BYTE PTR [rbx+0x61],ah
  408c23:	ins    BYTE PTR es:[rdi],dx
  408c24:	ins    BYTE PTR es:[rdi],dx
  408c25:	or     al,BYTE PTR cs:[rax]
  408c28:	(bad)  
  408c29:	cs ins BYTE PTR es:[rdi],dx
  408c2b:	imul   esp,DWORD PTR [rdx+0x73],0x746c002f
  408c32:	sub    eax,0x0
	...
  408c3f:	add    BYTE PTR [rbp+0x55],al
  408c42:	rex.XB sub eax,0x4700504a
  408c48:	rex.X xor sil,BYTE PTR [rbx]
  408c4b:	xor    DWORD PTR [rdx],esi
  408c4d:	add    BYTE PTR [rbp+0x55],al
  408c50:	rex.XB sub eax,0x42005754
  408c56:	rex.WB
  408c57:	rex.RXB xor eax,0x43554500
  408c5d:	sub    eax,0x4300524b
  408c62:	push   rax
  408c63:	cmp    DWORD PTR [rcx+rdi*1],esi
	...
  408c7e:	add    BYTE PTR [rax],al
  408c80:	add    BYTE PTR [rcx],al
  408c82:	add    al,BYTE PTR [rbx]
  408c84:	add    al,0x5
  408c86:	(bad)  
  408c87:	(bad)  
  408c88:	or     BYTE PTR [rcx],cl
  408c8a:	dec    DWORD PTR [rdx]
  408c8c:	or     ecx,DWORD PTR [rcx*1-0xf101]
  408c93:	(bad)  
  408c94:	(bad)  
  408c95:	dec    DWORD PTR [rdi]
  408c97:	call   QWORD PTR [rax]
  408c99:	(bad)  
  408c9a:	(bad)  
  408c9b:	(bad)  
  408c9c:	(bad)  
  408c9d:	(bad)  
  408c9e:	(bad)  
  408c9f:	(bad)  
  408ca0:	(bad)  
  408ca1:	(bad)  
  408ca2:	(bad)  
  408ca3:	(bad)  
  408ca4:	(bad)  
  408ca5:	(bad)  
  408ca6:	(bad)  
  408ca7:	(bad)  
  408ca8:	(bad)  
  408ca9:	(bad)  
  408caa:	(bad)  
  408cab:	(bad)  
  408cac:	(bad)  
  408cad:	(bad)  
  408cae:	(bad)  
  408caf:	(bad)  
  408cb0:	(bad)  
  408cb1:	(bad)  
  408cb2:	(bad)  
  408cb3:	(bad)  
  408cb4:	(bad)  
  408cb5:	(bad)  
  408cb6:	(bad)  
  408cb7:	(bad)  
  408cb8:	(bad)  
  408cb9:	(bad)  
  408cba:	(bad)  
  408cbb:	(bad)  
  408cbc:	(bad)  
  408cbd:	(bad)  
  408cbe:	(bad)  
  408cbf:	(bad)  
  408cc0:	(bad)  
  408cc1:	(bad)  
  408cc2:	(bad)  
  408cc3:	(bad)  
  408cc4:	(bad)  
  408cc5:	(bad)  
  408cc6:	(bad)  
  408cc7:	(bad)  
  408cc8:	(bad)  
  408cc9:	(bad)  
  408cca:	(bad)  
  408ccb:	(bad)  
  408ccc:	(bad)  
  408ccd:	(bad)  
  408cce:	(bad)  
  408ccf:	(bad)  
  408cd0:	(bad)  
  408cd1:	(bad)  
  408cd2:	call   QWORD PTR [rcx]
  408cd4:	adc    dl,BYTE PTR [rbx]
  408cd6:	(bad)  
  408cd7:	(bad)  
  408cd8:	(bad)  
  408cd9:	(bad)  
  408cda:	(bad)  
  408cdb:	(bad)  
  408cdc:	(bad)  
  408cdd:	(bad)  
  408cde:	(bad)  
  408cdf:	(bad)  
  408ce0:	(bad)  
  408ce1:	(bad)  
  408ce2:	(bad)  
  408ce3:	(bad)  
  408ce4:	(bad)  
  408ce5:	(bad)  
  408ce6:	(bad)  
  408ce7:	(bad)  
  408ce8:	(bad)  
  408ce9:	(bad)  
  408cea:	(bad)  
  408ceb:	(bad)  
  408cec:	(bad)  
  408ced:	(bad)  
  408cee:	(bad)  
  408cef:	(bad)  
  408cf0:	(bad)  
  408cf1:	(bad)  
  408cf2:	(bad)  
  408cf3:	(bad)  
  408cf4:	(bad)  
  408cf5:	(bad)  
  408cf6:	(bad)  
  408cf7:	(bad)  
  408cf8:	(bad)  
  408cf9:	(bad)  
  408cfa:	(bad)  
  408cfb:	(bad)  
  408cfc:	call   QWORD PTR [rdi+rdi*8]
  408cff:	adc    eax,0xffffff16
  408d04:	call   QWORD PTR [rdi]
  408d06:	(bad)  
  408d07:	call   FWORD PTR [rax]
  408d09:	(bad)  
  408d0a:	(bad)  
  408d0b:	(bad)  
  408d0c:	(bad)  
  408d0d:	(bad)  
  408d0e:	(bad)  
  408d0f:	(bad)  
  408d10:	(bad)  
  408d11:	(bad)  
  408d12:	(bad)  
  408d13:	(bad)  
  408d14:	(bad)  
  408d15:	(bad)  
  408d16:	(bad)  
  408d17:	(bad)  
  408d18:	(bad)  
  408d19:	(bad)  
  408d1a:	(bad)  
  408d1b:	(bad)  
  408d1c:	(bad)  
  408d1d:	(bad)  
  408d1e:	(bad)  
  408d1f:	(bad)  
  408d20:	(bad)  
  408d21:	(bad)  
  408d22:	(bad)  
  408d23:	(bad)  
  408d24:	(bad)  
  408d25:	(bad)  
  408d26:	(bad)  
  408d27:	(bad)  
  408d28:	(bad)  
  408d29:	(bad)  
  408d2a:	(bad)  
  408d2b:	(bad)  
  408d2c:	(bad)  
  408d2d:	(bad)  
  408d2e:	(bad)  
  408d2f:	(bad)  
  408d30:	(bad)  
  408d31:	(bad)  
  408d32:	(bad)  
  408d33:	(bad)  
  408d34:	(bad)  
  408d35:	(bad)  
  408d36:	(bad)  
  408d37:	(bad)  
  408d38:	(bad)  
  408d39:	(bad)  
  408d3a:	(bad)  
  408d3b:	(bad)  
  408d3c:	(bad)  
  408d3d:	(bad)  
  408d3e:	(bad)  
  408d3f:	(bad)  
  408d40:	(bad)  
  408d41:	(bad)  
  408d42:	(bad)  
  408d43:	(bad)  
  408d44:	(bad)  
  408d45:	(bad)  
  408d46:	(bad)  
  408d47:	(bad)  
  408d48:	(bad)  
  408d49:	(bad)  
  408d4a:	(bad)  
  408d4b:	(bad)  
  408d4c:	(bad)  
  408d4d:	(bad)  
  408d4e:	(bad)  
  408d4f:	(bad)  
  408d50:	(bad)  
  408d51:	(bad)  
  408d52:	(bad)  
  408d53:	(bad)  
  408d54:	(bad)  
  408d55:	(bad)  
  408d56:	(bad)  
  408d57:	(bad)  
  408d58:	(bad)  
  408d59:	(bad)  
  408d5a:	(bad)  
  408d5b:	(bad)  
  408d5c:	(bad)  
  408d5d:	(bad)  
  408d5e:	(bad)  
  408d5f:	(bad)  
  408d60:	(bad)  
  408d61:	(bad)  
  408d62:	(bad)  
  408d63:	(bad)  
  408d64:	(bad)  
  408d65:	(bad)  
  408d66:	(bad)  
  408d67:	call   FWORD PTR [rcx]
  408d69:	sbb    bh,bh
  408d6b:	(bad)  
  408d6c:	(bad)  
  408d6d:	(bad)  
  408d6e:	(bad)  
  408d6f:	inc    DWORD PTR [rax]
	...
  408d7d:	add    BYTE PTR [rax],al
  408d7f:	add    bh,bh
  408d81:	(bad)  
  408d82:	(bad)  
  408d83:	inc    DWORD PTR [rax]
	...
  408d8d:	add    BYTE PTR [rax],al
  408d8f:	cmp    bh,0xff
  408d92:	(bad)  
  408d93:	inc    DWORD PTR [rax]
  408d95:	and    BYTE PTR [rax],al
	...
  408ddf:	add    bh,bh
  408de1:	(bad)  
  408de2:	(bad)  
  408de3:	(bad)  
  408de4:	(bad)  
  408de5:	(bad)  
  408de6:	(bad)  
  408de7:	(bad)  
  408de8:	(bad)  
  408de9:	(bad)  
  408dea:	(bad)  
  408deb:	(bad)  
  408dec:	(bad)  
  408ded:	inc    DWORD PTR [rax]
	...
  408e0f:	add    al,bh
  408e11:	add    eax,DWORD PTR [rax]
	...
  408e2f:	add    BYTE PTR [rax],al
  408e31:	add    dh,bh
  408e33:	(bad)  
  408e34:	(bad)  
  408e35:	(bad)  
  408e36:	(bad)  
  408e37:	mov    edi,0xb6
  408e3c:	add    BYTE PTR [rax],al
  408e3e:	add    BYTE PTR [rax],al
  408e40:	(bad)  
  408e42:	inc    DWORD PTR [rdi]
  408e44:	add    BYTE PTR [rax],al
  408e46:	add    BYTE PTR [rax],al
  408e48:	add    al,bh
  408e4a:	(bad)  
  408e4b:	inc    DWORD PTR [rax]
  408e4d:	add    BYTE PTR [rcx],al
	...
  408e57:	add    BYTE PTR [rax],al
  408e59:	add    al,al
  408e5b:	mov    edi,0x3d9f
  408e60:	add    BYTE PTR [rax+0x2],al
  408e66:	(bad)  
  408e67:	(bad)  
  408e68:	inc    DWORD PTR [rdi]
	...
  408e72:	add    BYTE PTR [rax],al
  408e74:	sar    bh,0x1
  408e77:	add    BYTE PTR [rax],al
  408e79:	add    BYTE PTR [rax],al
  408e7b:	add    BYTE PTR [rax],al
  408e7d:	clc    
  408e7e:	sldt   WORD PTR [rax]
  408e81:	add    al,al
  408e83:	sti    
  408e84:	out    dx,eax
  408e85:	add    BYTE PTR ds:[rax],al
  408e88:	add    BYTE PTR [rax],al
  408e8a:	add    BYTE PTR [rsi],cl
	...
  408ea0:	(bad)  
  408ea1:	add    BYTE PTR [rax],al
  408ea3:	add    BYTE PTR [rax],al
  408ea5:	add    BYTE PTR [rax],al
  408ea7:	adc    al,0xfe
  408ea9:	and    esi,edi
  408eab:	add    BYTE PTR [rax+rax*1],cl
  408eae:	add    BYTE PTR [rax],al
  408eb0:	add    al,BYTE PTR [rax]
  408eb2:	add    BYTE PTR [rax],al
  408eb4:	add    BYTE PTR [rax],al
  408eb6:	add    BYTE PTR [rax],dl
  408eb8:	(bad)  
  408eb9:	and    BYTE PTR [rax],al
  408ebb:	add    BYTE PTR [rax+rax*1],cl
  408ebe:	add    BYTE PTR [rax],al
  408ec0:	(bad)  
  408ec1:	add    BYTE PTR [rax],al
  408ec3:	add    BYTE PTR [rax],al
  408ec5:	add    BYTE PTR [rax],al
  408ec7:	adc    BYTE PTR [rsi+0x239],al
  408ecd:	add    BYTE PTR [rbx],ah
  408ecf:	add    BYTE PTR [rsi],al
  408ed1:	add    BYTE PTR [rax],al
  408ed3:	add    BYTE PTR [rax],al
  408ed5:	add    BYTE PTR [rax],al
  408ed7:	adc    BYTE PTR [rsi+0xc000021],bh
  408edd:	add    BYTE PTR [rax],al
  408edf:	add    BYTE PTR [rdx],al
  408ee1:	add    BYTE PTR [rax],al
  408ee3:	add    BYTE PTR [rax],al
  408ee5:	add    BYTE PTR [rax],al
  408ee7:	nop
  408ee8:	(bad)  
  408ee9:	and    BYTE PTR [rax+0x0],al
  408eec:	or     al,0x0
  408eee:	add    BYTE PTR [rax],al
  408ef0:	add    al,0x0
  408ef2:	add    BYTE PTR [rax],al
  408ef4:	add    BYTE PTR [rax],al
  408ef6:	add    BYTE PTR [rax],al
  408ef8:	add    DWORD PTR [rax],esp
	...
  408f06:	add    al,al
  408f08:	sar    DWORD PTR [rip+0xc0060],0x0        # 0x4c8f6f
	...
  408f17:	adc    BYTE PTR [rax],al
  408f19:	xor    BYTE PTR [rax],al
  408f1b:	add    BYTE PTR [rax+rax*1],cl
	...
  408f26:	add    BYTE PTR [rax],al
  408f28:	(bad)  
  408f29:	and    BYTE PTR [rax],al
  408f2b:	add    BYTE PTR [rax+rax*1],cl
	...
  408f36:	add    BYTE PTR [rax],al
  408f38:	add    BYTE PTR [rsp+rbx*2],al
	...
  408f43:	add    BYTE PTR [rax],al
  408f45:	add    dl,dh
  408f47:	(bad)  
  408f48:	cmp    BYTE PTR [rdi+0x0],0x0
	...
  408f54:	add    BYTE PTR [rax],al
  408f56:	repnz sbb eax,DWORD PTR [rax]
  408f59:	(bad)  
	...
  408f62:	add    BYTE PTR [rbx],al
  408f64:	add    BYTE PTR [rax],al
  408f66:	movabs al,ds:0xfe00000000000002
  408f6f:	jg     0x408f50
  408f71:	loopne 0x408f72
  408f73:	(bad)  
  408f74:	(bad)  
  408f75:	(bad)  
  408f76:	call   FWORD PTR [rdi]
  408f78:	add    BYTE PTR [rax],al
	...
  408f83:	add    BYTE PTR [rax],al
  408f85:	loopne 0x408f84
  408f87:	data16 add BYTE PTR [rax],al
  408f8a:	add    bl,al
  408f8c:	add    DWORD PTR [rax],eax
  408f8e:	(bad)  
  408f8f:	add    BYTE PTR [rax+riz*1+0x0],ah
  408f93:	and    BYTE PTR [rax],al
	...
  408fe9:	add    BYTE PTR [rax],al
  408feb:	loopne 0x408fed
	...
  409021:	add    BYTE PTR [rax+rax*1],bl
  409024:	add    BYTE PTR [rax],al
  409026:	sbb    al,0x0
  409028:	add    BYTE PTR [rax],al
  40902a:	or     al,0x0
  40902c:	add    BYTE PTR [rax],al
  40902e:	or     al,0x0
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	add    BYTE PTR [rax],al
  409036:	mov    al,0x3f
  409038:	rex dec BYTE PTR [rdi]
  40903b:	and    BYTE PTR [rax],al
  40903d:	add    BYTE PTR [rax],al
  40903f:	add    BYTE PTR [rax],al
  409041:	cmp    BYTE PTR [rax],al
	...
  409053:	add    BYTE PTR [rax],al
  409055:	add    al,BYTE PTR [rax]
	...
  409063:	add    BYTE PTR [rdi+0xe0401],al
	...
  409081:	add    BYTE PTR [rax+0x1],al
  409087:	add    BYTE PTR [rax],al
  409089:	add    BYTE PTR [rax+0x7f],al
  40908c:	in     eax,0x1f
  40908e:	clc    
  40908f:	lahf   
	...
  4090a0:	sldt   WORD PTR [rax]
  4090a3:	add    BYTE PTR [rax],al
  4090a5:	add    al,dl
  4090a7:	(bad)  
  4090a8:	add    al,0x0
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    al,bh
  4090ae:	sldt   WORD PTR [rbx]
  4090b1:	add    BYTE PTR [rax],al
  4090b3:	add    BYTE PTR [rbx+rax*1],bh
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	rex movabs ds:0xf000000000000003,eax
  4090c6:	iret   
	...
  4090d7:	add    BYTE PTR [rax],al
  4090d9:	add    bh,dh
  4090db:	(bad)  
  4090dc:	std    
  4090dd:	and    DWORD PTR [rax],eax
	...
  4090f7:	add    bh,bh
  4090f9:	(bad)  
  4090fa:	(bad)  
  4090fb:	(bad)  
  4090fc:	jg     0x4090fe
  4090fe:	add    al,dh
  409100:	add    al,bh
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax+rax*1+0x0],bh
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	(bad)  
  40910d:	cld    
	...
  40911a:	(bad)  
  40911b:	(bad)  
  40911c:	(bad)  
  40911d:	inc    DWORD PTR [rcx]
	...
  40915b:	add    BYTE PTR [rax],al
  40915d:	add    BYTE PTR [rbx],0x0
	...
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax+0x0],al
	...
  40917c:	(bad)  
  40917d:	(bad)  
  40917e:	(bad)  
  40917f:	inc    DWORD PTR [rax]
  409181:	add    BYTE PTR [rax],al
  409183:	add    BYTE PTR [rax],al
  409185:	cld    
	...
  409192:	add    BYTE PTR [rsi],al
	...
  4091cc:	add    BYTE PTR [rax+0x3007],al
	...
  4091de:	add    eax,DWORD PTR [rax]
	...
  409200:	or     BYTE PTR [rax],r8b
  409203:	add    BYTE PTR [rax+0x0],ah
	...
  409216:	add    BYTE PTR [rax],al
  409218:	adc    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	(bad)  
  40921d:	inc    DWORD PTR [rbx]
  40921f:	add    BYTE PTR [rax],al
  409221:	add    BYTE PTR [rax],al
  409223:	add    al,al
  409225:	(bad)  
  409226:	add    BYTE PTR [rax],al
  409228:	cmp    bh,0x3
  40922b:	add    BYTE PTR [rax],al
  40922d:	add    BYTE PTR [rax],al
  40922f:	add    BYTE PTR [rdi],al
  409231:	add    BYTE PTR [rax],al
  409233:	add    BYTE PTR [rax],al
  409235:	add    al,cl
  409237:	adc    eax,DWORD PTR [rax]
	...
  409245:	jle    0x4092ad
  409247:	add    BYTE PTR [rax],cl
  409249:	adc    BYTE PTR [rax],al
	...
  409253:	add    BYTE PTR [rax],al
  409255:	add    BYTE PTR [rbp+0x2c1],bl
	...
  40927b:	add    BYTE PTR [rax],ah
  40927d:	and    DWORD PTR [rax],eax
	...
  4092a3:	add    BYTE PTR [rax],al
	...
  4092be:	add    BYTE PTR [rax],al
  4092c0:	(bad)  
  4092c1:	inc    DWORD PTR [rax]
  4092c3:	add    BYTE PTR [rdi+0x0],bh
	...
  4092de:	add    BYTE PTR [rax+0x0],al
	...
  4092fc:	add    BYTE PTR [rax],al
  4092fe:	add    BYTE PTR [rsi],cl
	...
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],ah
  409340:	outs   dx,BYTE PTR ds:[rsi]
  409341:	lock add BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rdi+0x0],al
	...
  409380:	add    al,BYTE PTR [rax]
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    bh,bh
  409388:	jg     0x40938a
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	add    eax,DWORD PTR [rax]
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	js     0x4093be
	...
  4093ec:	add    BYTE PTR [rbx],0xf8
  4093ef:	jmp    rdi
  4093f1:	sldt   WORD PTR [rax]
  4093f4:	add    BYTE PTR [rax+rax*1],bh
	...
  409407:	add    BYTE PTR [rax+rax*1],bl
	...
  40943e:	add    BYTE PTR [rax],al
  409440:	ins    DWORD PTR es:[rdi],dx
  409441:	gs ins DWORD PTR es:[rdi],dx
  409443:	outs   dx,DWORD PTR ds:[rsi]
  409444:	jb     0x4094bf
  409446:	and    BYTE PTR [rbp+0x78],ah
  409449:	push   0x74737561
  40944e:	gs add BYTE PTR fs:[rax],al
	...
  40945e:	add    BYTE PTR [rax],al
  409460:	push   rbp
  409461:	outs   dx,BYTE PTR ds:[rsi]
  409462:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409466:	outs   dx,BYTE PTR ds:[rsi]
  409467:	and    BYTE PTR [rbx+0x79],dh
  40946a:	jae    0x4094e0
  40946c:	gs ins DWORD PTR es:[rdi],dx
  40946e:	and    BYTE PTR [rbp+0x72],ah
  409471:	jb     0x4094e2
  409473:	jb     0x409475
  409475:	cmp    ah,BYTE PTR [rax]
  409477:	and    eax,0x73250073
  40947c:	cmp    ah,BYTE PTR [rax]
  40947e:	add    BYTE PTR [rip+0x64253a73],ah        # 0x6465cef7
  409484:	cmp    ah,BYTE PTR [rax]
  409486:	add    BYTE PTR [rax],ah
  409488:	add    BYTE PTR [rip+0x3a73],ah        # 0x40cf01
  40948e:	add    BYTE PTR [rax],al
  409490:	push   rbp
  409491:	outs   dx,BYTE PTR ds:[rsi]
  409492:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409496:	outs   dx,BYTE PTR ds:[rsi]
  409497:	and    BYTE PTR [rbp+0x72],ah
  40949a:	jb     0x40950b
  40949c:	jb     0x4094be
  40949e:	and    eax,0x64
	...
  4094af:	add    BYTE PTR [rbx+0x75],dl
  4094b2:	movsxd esp,DWORD PTR [rbx+0x65]
  4094b5:	jae    0x40952a
  4094b7:	add    BYTE PTR [rbp+riz*2+0x78],dl
  4094bb:	je     0x4094dd
  4094bd:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7562
  4094c4:	jae    0x40953f
  4094c6:	add    BYTE PTR [rdi+0x70],cl
  4094c9:	gs jb  0x40952d
  4094cc:	je     0x409537
  4094ce:	outs   dx,DWORD PTR ds:[rsi]
  4094cf:	outs   dx,BYTE PTR ds:[rsi]
  4094d0:	and    BYTE PTR [rsi+0x6f],ch
  4094d3:	ja     0x4094f5
  4094d5:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
  4094dc:	jb     0x409543
  4094de:	jae    0x409553
  4094e0:	add    BYTE PTR [rdi+0x70],cl
  4094e3:	gs jb  0x409547
  4094e6:	je     0x409551
  4094e8:	outs   dx,DWORD PTR ds:[rsi]
  4094e9:	outs   dx,BYTE PTR ds:[rsi]
  4094ea:	and    BYTE PTR [rcx+0x6c],ah
  4094ed:	jb     0x409554
  4094ef:	(bad)  
  4094f0:	fs jns 0x409513
  4094f3:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
  4094fa:	jb     0x409561
  4094fc:	jae    0x409571
  4094fe:	add    BYTE PTR [rax],al
  409500:	push   rbx
  409501:	outs   dx,DWORD PTR ds:[rsi]
  409502:	movsxd ebp,DWORD PTR [rbx+0x65]
  409505:	je     0x409527
  409507:	outs   dx,DWORD PTR ds:[rsi]
  409508:	jo     0x40956f
  40950a:	jb     0x40956d
  40950c:	je     0x409577
  40950e:	outs   dx,DWORD PTR ds:[rsi]
  40950f:	outs   dx,BYTE PTR ds:[rsi]
  409510:	and    BYTE PTR [rdi+0x6e],ch
  409513:	and    BYTE PTR [rsi+0x6f],ch
  409516:	outs   dx,BYTE PTR ds:[rsi]
  409517:	sub    eax,0x6b636f73
  40951c:	gs je  0x40951f
  40951f:	rex.R
  409520:	gs jae 0x409597
  409523:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  40952a:	and    BYTE PTR [rcx+0x64],ah
  40952d:	fs jb  0x409595
  409530:	jae    0x4095a5
  409532:	and    BYTE PTR [rdx+0x65],dh
  409535:	jno    0x4095ac
  409537:	imul   esi,DWORD PTR [rdx+0x65],0x654d0064
  40953e:	jae    0x4095b3
  409540:	(bad)  
  409541:	and    BYTE PTR gs:[edi+ebp*2+0x6f],dh
  409547:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  40954b:	add    BYTE PTR [eax],al
  40954e:	add    BYTE PTR [rax],al
  409550:	push   rax
  409551:	jb     0x4095c2
  409553:	je     0x4095c4
  409555:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409558:	and    BYTE PTR [rdi+0x72],dh
  40955b:	outs   dx,DWORD PTR ds:[rsi]
  40955c:	outs   dx,BYTE PTR ds:[rsi]
  40955d:	and    BYTE PTR [ecx+edi*2+0x70],dh
  409562:	and    BYTE PTR gs:[rsi+0x6f],ah
  409566:	jb     0x409588
  409568:	jae    0x4095d9
  40956a:	movsxd ebp,DWORD PTR [rbx+0x65]
  40956d:	je     0x40956f
  40956f:	push   rax
  409570:	jb     0x4095e1
  409572:	je     0x4095e3
  409574:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409577:	and    BYTE PTR [rsi+0x6f],ch
  40957a:	je     0x40959c
  40957c:	(bad)  
  40957d:	jbe    0x4095e0
  40957f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x5000656c
  409587:	jb     0x4095f8
  409589:	je     0x4095fa
  40958b:	movsxd ebp,DWORD PTR [rdi+0x6c]
  40958e:	and    BYTE PTR [rsi+0x6f],ch
  409591:	je     0x4095b3
  409593:	jae    0x40960a
  409595:	jo     0x409607
  409597:	outs   dx,DWORD PTR ds:[rsi]
  409598:	jb     0x40960e
  40959a:	gs add BYTE PTR fs:[rbx+0x6f],dl
  40959f:	movsxd ebp,DWORD PTR [rbx+0x65]
  4095a2:	je     0x4095c4
  4095a4:	je     0x40961f
  4095a6:	jo     0x40960d
  4095a8:	and    BYTE PTR [rsi+0x6f],ch
  4095ab:	je     0x4095cd
  4095ad:	jae    0x409624
  4095af:	jo     0x409621
  4095b1:	outs   dx,DWORD PTR ds:[rsi]
  4095b2:	jb     0x409628
  4095b4:	gs add BYTE PTR fs:[rdi+0x70],cl
  4095b9:	gs jb  0x40961d
  4095bc:	je     0x409627
  4095be:	outs   dx,DWORD PTR ds:[rsi]
  4095bf:	outs   dx,BYTE PTR ds:[rsi]
  4095c0:	and    BYTE PTR [rsi+0x6f],ch
  4095c3:	je     0x4095e5
  4095c5:	jae    0x40963c
  4095c7:	jo     0x409639
  4095c9:	outs   dx,DWORD PTR ds:[rsi]
  4095ca:	jb     0x409640
  4095cc:	gs add BYTE PTR fs:[rax+0x72],dl
  4095d1:	outs   dx,DWORD PTR ds:[rsi]
  4095d2:	je     0x409643
  4095d4:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4095d7:	and    BYTE PTR [rsi+0x61],ah
  4095da:	ins    DWORD PTR es:[rdi],dx
  4095db:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  4095e3:	jae    0x40965a
  4095e5:	jo     0x409657
  4095e7:	outs   dx,DWORD PTR ds:[rsi]
  4095e8:	jb     0x40965e
  4095ea:	gs add BYTE PTR fs:[rax],al
  4095ee:	add    BYTE PTR [rax],al
  4095f0:	rex.B
  4095f1:	fs fs jb 0x40965a
  4095f5:	jae    0x40966a
  4095f7:	and    BYTE PTR [rsi+0x61],ah
  4095fa:	ins    DWORD PTR es:[rdi],dx
  4095fb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  409603:	jae    0x40967a
  409605:	jo     0x409677
  409607:	outs   dx,DWORD PTR ds:[rsi]
  409608:	jb     0x40967e
  40960a:	gs and BYTE PTR fs:[rdx+0x79],ah
  40960f:	and    BYTE PTR [rax+0x72],dh
  409612:	outs   dx,DWORD PTR ds:[rsi]
  409613:	je     0x409684
  409615:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409618:	add    BYTE PTR [rcx+0x64],al
  40961b:	fs jb  0x409683
  40961e:	jae    0x409693
  409620:	and    BYTE PTR [rcx+0x6c],ah
  409623:	jb     0x40968a
  409625:	(bad)  
  409626:	fs jns 0x409649
  409629:	imul   ebp,DWORD PTR [rsi+0x20],0x657375
  409630:	rex.XB (bad) 
  409632:	outs   dx,BYTE PTR ds:[rsi]
  409633:	outs   dx,BYTE PTR ds:[rsi]
  409634:	outs   dx,DWORD PTR ds:[rsi]
  409635:	je     0x409657
  409637:	(bad)  
  409638:	jae    0x4096ad
  40963a:	imul   esp,DWORD PTR [rdi+0x6e],0x71657220
  409641:	jne    0x4096a8
  409643:	jae    0x4096b9
  409645:	gs and BYTE PTR fs:[rcx+0x64],ah
  40964a:	fs jb  0x4096b2
  40964d:	jae    0x4096c2
  40964f:	add    BYTE PTR [rsi+0x65],cl
  409652:	je     0x4096cb
  409654:	outs   dx,DWORD PTR ds:[rsi]
  409655:	jb     0x4096c2
  409657:	and    BYTE PTR [rcx+0x73],ch
  40965a:	and    BYTE PTR [rdi+rbp*2+0x77],ah
  40965e:	outs   dx,BYTE PTR ds:[rsi]
  40965f:	add    BYTE PTR [rsi+0x65],cl
  409662:	je     0x4096db
  409664:	outs   dx,DWORD PTR ds:[rsi]
  409665:	jb     0x4096d2
  409667:	and    BYTE PTR [rcx+0x73],ch
  40966a:	and    BYTE PTR [rbp+0x6e],dh
  40966d:	jb     0x4096d4
  40966f:	(bad)  
  409670:	movsxd ebp,DWORD PTR [rax+0x61]
  409673:	(bad)  
  409674:	ins    BYTE PTR es:[rdi],dx
  409675:	add    BYTE PTR gs:[rax],al
  409678:	rex.WRX
  409679:	gs je  0x4096f3
  40967c:	outs   dx,DWORD PTR ds:[rsi]
  40967d:	jb     0x4096ea
  40967f:	and    BYTE PTR [rdx+rsi*2+0x6f],ah
  409683:	jo     0x4096f5
  409685:	gs and BYTE PTR fs:[rbx+0x6f],ah
  40968a:	outs   dx,BYTE PTR ds:[rsi]
  40968b:	outs   dx,BYTE PTR ds:[rsi]
  40968c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409691:	outs   dx,BYTE PTR ds:[rsi]
  409692:	and    BYTE PTR [rdi+0x6e],ch
  409695:	and    BYTE PTR [rdx+0x65],dh
  409698:	jae    0x4096ff
  40969a:	je     0x40969c
  40969c:	add    BYTE PTR [rax],al
  40969e:	add    BYTE PTR [rax],al
  4096a0:	push   rbx
  4096a1:	outs   dx,DWORD PTR ds:[rsi]
  4096a2:	data16 je 0x40971c
  4096a5:	(bad)  
  4096a6:	jb     0x40970d
  4096a8:	and    BYTE PTR [rbx+0x61],ah
  4096ab:	jne    0x409720
  4096ad:	gs and BYTE PTR fs:[rbx+0x6f],ah
  4096b2:	outs   dx,BYTE PTR ds:[rsi]
  4096b3:	outs   dx,BYTE PTR ds:[rsi]
  4096b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096b9:	outs   dx,BYTE PTR ds:[rsi]
  4096ba:	and    BYTE PTR [rcx+0x62],ah
  4096bd:	outs   dx,DWORD PTR ds:[rsi]
  4096be:	jb     0x409734
  4096c0:	add    BYTE PTR [rbx+0x6f],al
  4096c3:	outs   dx,BYTE PTR ds:[rsi]
  4096c4:	outs   dx,BYTE PTR ds:[rsi]
  4096c5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096ca:	outs   dx,BYTE PTR ds:[rsi]
  4096cb:	and    BYTE PTR [rdx+0x65],dh
  4096ce:	jae    0x409735
  4096d0:	je     0x4096f2
  4096d2:	(bad)  
  4096d3:	jns    0x4096f5
  4096d5:	jo     0x40973c
  4096d7:	gs jb  0x4096da
  4096da:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4096dc:	and    BYTE PTR [rdx+0x75],ah
  4096df:	data16 data16 gs jb 0x409704
  4096e4:	jae    0x409756
  4096e6:	(bad)  
  4096e7:	movsxd esp,DWORD PTR [rbp+0x20]
  4096ea:	(bad)  
  4096eb:	jbe    0x40974e
  4096ed:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  4096f5:	add    BYTE PTR [rax],al
  4096f7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  4096fb:	outs   dx,BYTE PTR ds:[rsi]
  4096fc:	jae    0x40976e
  4096fe:	outs   dx,DWORD PTR ds:[rsi]
  4096ff:	jb     0x409775
  409701:	and    BYTE PTR [rbp+0x6e],ah
  409704:	fs jo  0x409776
  409707:	imul   ebp,DWORD PTR [rsi+0x74],0x20736920
  40970e:	(bad)  
  40970f:	ins    BYTE PTR es:[rdi],dx
  409710:	jb     0x409777
  409712:	(bad)  
  409713:	fs jns 0x409736
  409716:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409719:	outs   dx,BYTE PTR ds:[rsi]
  40971a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  40971f:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  409723:	outs   dx,BYTE PTR ds:[rsi]
  409724:	jae    0x409796
  409726:	outs   dx,DWORD PTR ds:[rsi]
  409727:	jb     0x40979d
  409729:	and    BYTE PTR [rbp+0x6e],ah
  40972c:	fs jo  0x40979e
  40972f:	imul   ebp,DWORD PTR [rsi+0x74],0x20736920
  409736:	outs   dx,BYTE PTR ds:[rsi]
  409737:	outs   dx,DWORD PTR ds:[rsi]
  409738:	je     0x40975a
  40973a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40973d:	outs   dx,BYTE PTR ds:[rsi]
  40973e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  409743:	add    BYTE PTR [rax],al
  409745:	add    BYTE PTR [rax],al
  409747:	add    BYTE PTR [rbx+0x61],al
  40974a:	outs   dx,BYTE PTR ds:[rsi]
  40974b:	outs   dx,BYTE PTR ds:[rsi]
  40974c:	outs   dx,DWORD PTR ds:[rsi]
  40974d:	je     0x40976f
  40974f:	jae    0x4097b6
  409751:	outs   dx,BYTE PTR ds:[rsi]
  409752:	and    BYTE PTR fs:[rcx+0x66],ah
  409756:	je     0x4097bd
  409758:	jb     0x40977a
  40975a:	je     0x4097ce
  40975c:	(bad)  
  40975d:	outs   dx,BYTE PTR ds:[rsi]
  40975e:	jae    0x4097d0
  409760:	outs   dx,DWORD PTR ds:[rsi]
  409761:	jb     0x4097d7
  409763:	and    BYTE PTR [rbp+0x6e],ah
  409766:	fs jo  0x4097d8
  409769:	imul   ebp,DWORD PTR [rsi+0x74],0x75687320
  409770:	je     0x4097d6
  409772:	outs   dx,DWORD PTR ds:[rsi]
  409773:	ja     0x4097e3
  409775:	add    BYTE PTR [rax],al
  409777:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  40977b:	and    BYTE PTR [rbp+0x61],ch
  40977e:	outs   dx,BYTE PTR ds:[rsi]
  40977f:	jns    0x4097a1
  409781:	jb     0x4097e8
  409783:	data16 gs jb 0x4097ec
  409787:	outs   dx,BYTE PTR ds:[rsi]
  409788:	movsxd esp,DWORD PTR [rbp+0x73]
  40978b:	cmp    ah,BYTE PTR [rax]
  40978d:	movsxd esp,DWORD PTR [rcx+0x6e]
  409790:	outs   dx,BYTE PTR ds:[rsi]
  409791:	outs   dx,DWORD PTR ds:[rsi]
  409792:	je     0x4097b4
  409794:	jae    0x409806
  409796:	ins    BYTE PTR es:[rdi],dx
  409797:	imul   esp,DWORD PTR [rbx+0x65],0x6e6f4300
  40979e:	outs   dx,BYTE PTR ds:[rsi]
  40979f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097a4:	outs   dx,BYTE PTR ds:[rsi]
  4097a5:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  4097a9:	gs and BYTE PTR fs:[rdi+0x75],ch
  4097ae:	je     0x4097b0
  4097b0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4097b2:	outs   dx,BYTE PTR ds:[rsi]
  4097b3:	outs   dx,BYTE PTR ds:[rsi]
  4097b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097b9:	outs   dx,BYTE PTR ds:[rsi]
  4097ba:	and    BYTE PTR [rdx+0x65],dh
  4097bd:	data16 jne 0x409833
  4097c0:	gs add BYTE PTR fs:[rax],al
  4097c4:	add    BYTE PTR [rax],al
  4097c6:	add    BYTE PTR [rax],al
  4097c8:	push   rsp
  4097c9:	outs   dx,DWORD PTR ds:[rsi]
  4097ca:	outs   dx,DWORD PTR ds:[rsi]
  4097cb:	and    BYTE PTR [rbp+0x61],ch
  4097ce:	outs   dx,BYTE PTR ds:[rsi]
  4097cf:	jns    0x4097f1
  4097d1:	ins    BYTE PTR es:[rdi],dx
  4097d2:	gs jbe 0x40983a
  4097d5:	ins    BYTE PTR es:[rdi],dx
  4097d6:	jae    0x4097f8
  4097d8:	outs   dx,DWORD PTR ds:[rsi]
  4097d9:	data16 and BYTE PTR [rbx+0x79],dh
  4097dd:	ins    DWORD PTR es:[rdi],dx
  4097de:	(bad)  
  4097df:	outs   dx,DWORD PTR ds:[rsi]
  4097e0:	ins    BYTE PTR es:[rdi],dx
  4097e1:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
  4097e8:	jae    0x4097ea
  4097ea:	rex.W outs dx,DWORD PTR ds:[rsi]
  4097ec:	jae    0x409862
  4097ee:	and    BYTE PTR [rcx+0x73],ch
  4097f1:	and    BYTE PTR [rdi+rbp*2+0x77],ah
  4097f5:	outs   dx,BYTE PTR ds:[rsi]
  4097f6:	add    BYTE PTR [rsi+0x6f],cl
  4097f9:	and    BYTE PTR [rdx+0x6f],dh
  4097fc:	jne    0x409872
  4097fe:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  409803:	push   0x74736f
  409808:	push   rsp
  409809:	outs   dx,DWORD PTR ds:[rsi]
  40980a:	outs   dx,DWORD PTR ds:[rsi]
  40980b:	and    BYTE PTR [rbp+0x61],ch
  40980e:	outs   dx,BYTE PTR ds:[rsi]
  40980f:	jns    0x409831
  409811:	jo     0x409885
  409813:	outs   dx,DWORD PTR ds:[rsi]
  409814:	movsxd esp,DWORD PTR [rbp+0x73]
  409817:	jae    0x40987e
  409819:	jae    0x40981b
  40981b:	push   rsp
  40981c:	outs   dx,DWORD PTR ds:[rsi]
  40981d:	outs   dx,DWORD PTR ds:[rsi]
  40981e:	and    BYTE PTR [rbp+0x61],ch
  409821:	outs   dx,BYTE PTR ds:[rsi]
  409822:	jns    0x409844
  409824:	jne    0x409899
  409826:	gs jb  0x40989c
  409829:	add    BYTE PTR [rcx+rbp*2+0x73],al
  40982d:	imul   esp,DWORD PTR [rax],0x71
  409830:	jne    0x4098a1
  409832:	je     0x409895
  409834:	and    BYTE PTR [rbp+0x78],ah
  409837:	movsxd esp,DWORD PTR [rbp+0x65]
  40983a:	fs gs add BYTE PTR fs:[rbx+0x74],dl
  409840:	(bad)  
  409841:	ins    BYTE PTR es:[rdi],dx
  409842:	and    BYTE PTR gs:[rsi+0x46],cl
  409846:	push   rbx
  409847:	and    BYTE PTR [rsi+0x69],ah
  40984a:	ins    BYTE PTR es:[rdi],dx
  40984b:	and    BYTE PTR gs:[rax+0x61],ch
  40984f:	outs   dx,BYTE PTR ds:[rsi]
  409850:	fs ins BYTE PTR es:[rdi],dx
  409852:	add    BYTE PTR gs:[rdi+0x62],cl
  409856:	push   0x65
  409858:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  40985c:	jae    0x40987e
  40985e:	jb     0x4098c5
  409860:	ins    DWORD PTR es:[rdi],dx
  409861:	outs   dx,DWORD PTR ds:[rsi]
  409862:	je     0x4098c9
  409864:	add    BYTE PTR [rdi+0x76],cl
  409867:	gs jb  0x4098d6
  40986a:	(bad)  
  40986b:	jo     0x4098dd
  40986d:	gs and BYTE PTR fs:[rdi+0x70],ch
  409872:	gs jb  0x4098d6
  409875:	je     0x4098e0
  409877:	outs   dx,DWORD PTR ds:[rsi]
  409878:	outs   dx,BYTE PTR ds:[rsi]
  409879:	and    BYTE PTR [rcx+0x62],ah
  40987c:	outs   dx,DWORD PTR ds:[rsi]
  40987d:	jb     0x4098f3
  40987f:	gs add BYTE PTR fs:[rax],al
  409883:	add    BYTE PTR [rax],al
  409885:	add    BYTE PTR [rax],al
  409887:	add    BYTE PTR [rdi+0x76],cl
  40988a:	gs jb  0x4098f9
  40988d:	(bad)  
  40988e:	jo     0x409900
  409890:	gs and BYTE PTR fs:[rcx+0x2f],cl
  409895:	rex.WRXB and BYTE PTR [r13+0x76],r12b
  409899:	outs   dx,BYTE PTR gs:[rsi]
  40989b:	je     0x4098bd
  40989d:	outs   dx,DWORD PTR ds:[rsi]
  40989e:	(bad)  
  40989f:	push   0x65
  4098a1:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  4098a5:	outs   dx,DWORD PTR ds:[rsi]
  4098a6:	je     0x4098c8
  4098a8:	imul   ebp,DWORD PTR [rsi+0x20],0x6e676973
  4098af:	(bad)  
  4098b0:	ins    BYTE PTR es:[rdi],dx
  4098b1:	gs and BYTE PTR fs:[rbx+0x74],dh
  4098b6:	(bad)  
  4098b7:	je     0x40991e
  4098b9:	add    BYTE PTR [rax],al
  4098bb:	add    BYTE PTR [rax],al
  4098bd:	add    BYTE PTR [rax],al
  4098bf:	add    BYTE PTR [rdi+0x76],cl
  4098c2:	gs jb  0x409931
  4098c5:	(bad)  
  4098c6:	jo     0x409938
  4098c8:	gs and BYTE PTR fs:[rdi+0x70],ch
  4098cd:	gs jb  0x409931
  4098d0:	je     0x40993b
  4098d2:	outs   dx,DWORD PTR ds:[rsi]
  4098d3:	outs   dx,BYTE PTR ds:[rsi]
  4098d4:	jae    0x4098f6
  4098d6:	ja     0x409941
  4098d8:	ins    BYTE PTR es:[rdi],dx
  4098d9:	ins    BYTE PTR es:[rdi],dx
  4098da:	and    BYTE PTR [rbx+0x6f],ah
  4098dd:	ins    DWORD PTR es:[rdi],dx
  4098de:	jo     0x40994c
  4098e0:	gs je  0x409948
  4098e3:	and    BYTE PTR [rcx+riz*2+0x74],ch
  4098e7:	gs jb  0x4098ea
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	add    BYTE PTR [rax],al
  4098ee:	add    BYTE PTR [rax],al
  4098f0:	rex.WRX
  4098f1:	gs je  0x40996b
  4098f4:	outs   dx,DWORD PTR ds:[rsi]
  4098f5:	jb     0x409962
  4098f7:	and    BYTE PTR [rbx+0x75],dh
  4098fa:	(bad)  
  4098fc:	jns    0x409971
  4098fe:	je     0x409965
  409900:	ins    DWORD PTR es:[rdi],dx
  409901:	and    BYTE PTR [rcx+0x73],ch
  409904:	and    BYTE PTR [rbp+0x6e],dh
  409907:	(bad)  
  409908:	jbe    0x40996b
  40990a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  409912:	add    BYTE PTR [rax],al
  409914:	add    BYTE PTR [rax],al
  409916:	add    BYTE PTR [rax],al
  409918:	push   rdi
  409919:	imul   ebp,DWORD PTR [rsi+0x73],0x2e6b636f
  409920:	fs ins BYTE PTR es:[rdi],dx
  409922:	ins    BYTE PTR es:[rdi],dx
  409923:	and    BYTE PTR [rsi+0x65],dh
  409926:	jb     0x40999b
  409928:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756f20
  40992f:	and    BYTE PTR [rdi+0x66],ch
  409932:	and    BYTE PTR [rdx+0x61],dh
  409935:	outs   dx,BYTE PTR ds:[rsi]
  409936:	add    BYTE PTR gs:[eax],al
  40993a:	add    BYTE PTR [rax],al
  40993c:	add    BYTE PTR [rax],al
  40993e:	add    BYTE PTR [rax],al
  409940:	push   rbx
  409941:	jne    0x4099a6
  409943:	movsxd esp,DWORD PTR [rbp+0x73]
  409946:	jae    0x4099ae
  409948:	jne    0x4099b6
  40994a:	and    BYTE PTR [rdi+0x53],dl
  40994d:	push   r11
  40994f:	je     0x4099b2
  409951:	jb     0x4099c7
  409953:	jne    0x4099c5
  409955:	and    BYTE PTR [rsi+0x6f],ch
  409958:	je     0x40997a
  40995a:	jns    0x4099c1
  40995c:	je     0x40997e
  40995e:	jo     0x4099c5
  409960:	jb     0x4099c8
  409962:	outs   dx,DWORD PTR ds:[rsi]
  409963:	jb     0x4099d2
  409965:	gs add BYTE PTR fs:[rdi+0x72],al
  40996a:	(bad)  
  40996b:	movsxd esp,DWORD PTR [rbp+0x66]
  40996e:	jne    0x4099dc
  409970:	and    BYTE PTR [rbx+0x68],dh
  409973:	jne    0x4099e9
  409975:	outs   dx,DWORD PTR fs:[rsi]
  409977:	ja     0x4099e7
  409979:	and    BYTE PTR [rcx+0x6e],ch
  40997c:	and    BYTE PTR [rax+0x72],dh
  40997f:	outs   dx,DWORD PTR ds:[rsi]
  409980:	addr32 jb 0x4099e8
  409983:	jae    0x4099f8
  409985:	add    BYTE PTR [rsi+0x6f],cl
  409988:	and    BYTE PTR [rbp+0x6f],ch
  40998b:	jb     0x4099f2
  40998d:	and    BYTE PTR [rdx+0x65],dh
  409990:	jae    0x409a07
  409992:	ins    BYTE PTR es:[rdi],dx
  409993:	je     0x409a08
  409995:	add    BYTE PTR [rbx+0x61],al
  409998:	ins    BYTE PTR es:[rdi],dx
  409999:	ins    BYTE PTR es:[rdi],dx
  40999a:	and    BYTE PTR [rdi+0x61],dh
  40999d:	jae    0x4099bf
  40999f:	movsxd esp,DWORD PTR [rcx+0x6e]
  4099a2:	movsxd esp,DWORD PTR [rbp+0x6c]
  4099a5:	gs add BYTE PTR fs:[rax+0x72],dl
  4099aa:	outs   dx,DWORD PTR ds:[rsi]
  4099ab:	movsxd esp,DWORD PTR [rbp+0x64]
  4099ae:	jne    0x409a22
  4099b0:	and    BYTE PTR gs:[rbx+0x61],ah
  4099b4:	ins    BYTE PTR es:[rdi],dx
  4099b5:	ins    BYTE PTR es:[rdi],dx
  4099b6:	and    BYTE PTR [rcx+riz*2+0x62],dh
  4099ba:	ins    BYTE PTR es:[rdi],dx
  4099bb:	and    BYTE PTR gs:[rcx+0x73],ch
  4099bf:	and    BYTE PTR [rcx+0x6e],ch
  4099c2:	jbe    0x409a25
  4099c4:	ins    BYTE PTR es:[rdi],dx
  4099c5:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x69767265
  4099cd:	movsxd esp,DWORD PTR [rbp+0x20]
  4099d0:	jo     0x409a44
  4099d2:	outs   dx,DWORD PTR ds:[rsi]
  4099d3:	jbe    0x409a3e
  4099d5:	fs gs jb 0x4099f9
  4099d9:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
  4099e0:	ins    BYTE PTR es:[rdi],dx
  4099e1:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x53000000
  4099e9:	gs jb  0x409a62
  4099ec:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
  4099f3:	jbe    0x409a5e
  4099f5:	fs gs jb 0x409a19
  4099f9:	data16 (bad) 
  4099fb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  409a03:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  409a0a:	imul   edi,DWORD PTR [rdx+0x65],0x73795300
  409a11:	je     0x409a78
  409a13:	ins    DWORD PTR es:[rdi],dx
  409a14:	and    BYTE PTR [rbx+0x61],ah
  409a17:	ins    BYTE PTR es:[rdi],dx
  409a18:	ins    BYTE PTR es:[rdi],dx
  409a19:	and    BYTE PTR [rsi+0x61],ah
  409a1c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65530065
  409a24:	jb     0x409a9c
  409a26:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  409a2d:	and    BYTE PTR [rsi+0x6f],ah
  409a30:	jne    0x409aa0
  409a32:	add    BYTE PTR fs:[rbx+0x6c],al
  409a36:	(bad)  
  409a37:	jae    0x409aac
  409a39:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  409a3d:	and    BYTE PTR gs:[rsi+0x6f],ch
  409a41:	je     0x409a63
  409a43:	outs   dx,WORD PTR ds:[rsi]
  409a45:	jne    0x409ab5
  409a47:	add    BYTE PTR fs:[rcx+riz*2+0x74],al
  409a4c:	(bad)  
  409a4d:	(bad)  
  409a4f:	jae    0x409ab6
  409a51:	and    BYTE PTR [rcx+0x75],dh
  409a54:	gs jb  0x409ad0
  409a57:	and    BYTE PTR [rdi+0x61],dh
  409a5a:	jae    0x409a7c
  409a5c:	jb     0x409ac3
  409a5e:	data16 jne 0x409ad4
  409a61:	gs add BYTE PTR fs:[rax+0x6f],cl
  409a66:	jae    0x409adc
  409a68:	and    BYTE PTR [rsi+0x6f],ch
  409a6b:	je     0x409a8d
  409a6d:	outs   dx,WORD PTR ds:[rsi]
  409a6f:	jne    0x409adf
  409a71:	add    BYTE PTR fs:[rax],al
  409a74:	add    BYTE PTR [rax],al
  409a76:	add    BYTE PTR [rax],al
  409a78:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  409a7a:	outs   dx,BYTE PTR ds:[rsi]
  409a7b:	(bad)  
  409a7c:	jne    0x409af2
  409a7e:	push   0x7469726f
  409a83:	(bad)  
  409a84:	je     0x409aef
  409a86:	jbe    0x409aed
  409a88:	and    BYTE PTR [rax+0x6f],ch
  409a8b:	jae    0x409b01
  409a8d:	and    BYTE PTR [rsi+0x6f],ch
  409a90:	je     0x409ab2
  409a92:	outs   dx,WORD PTR ds:[rsi]
  409a94:	jne    0x409b04
  409a96:	add    BYTE PTR fs:[rsi+0x6f],cl
  409a9a:	outs   dx,BYTE PTR ds:[rsi]
  409a9b:	jb     0x409b02
  409a9d:	movsxd ebp,DWORD PTR [rdi+0x76]
  409aa0:	gs jb  0x409b04
  409aa3:	(bad)  
  409aa4:	ins    BYTE PTR es:[rdi],dx
  409aa5:	and    BYTE PTR gs:[rbp+0x72],ah
  409aa9:	jb     0x409b1a
  409aab:	jb     0x409aad
  409aad:	add    BYTE PTR [rax],al
  409aaf:	add    BYTE PTR [rsi+0x61],dl
  409ab2:	ins    BYTE PTR es:[rdi],dx
  409ab3:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x2c656d61
  409abb:	and    BYTE PTR [rsi+0x6f],ch
  409abe:	and    BYTE PTR [rcx+riz*2+0x74],ah
  409ac2:	(bad)  
  409ac3:	and    BYTE PTR [rdx+0x65],dh
  409ac6:	movsxd ebp,DWORD PTR [rdi+0x72]
  409ac9:	and    BYTE PTR fs:[rdi+0x66],ch
  409acd:	and    BYTE PTR [rdx+0x65],dh
  409ad0:	jno    0x409b47
  409ad2:	gs jae 0x409b49
  409ad5:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  409adb:	add    BYTE PTR gs:[rsi+0x6f],cl
  409adf:	and    BYTE PTR [rbp+0x65],ch
  409ae2:	jae    0x409b57
  409ae4:	(bad)  
  409ae5:	and    BYTE PTR gs:[edi+0x66],ch
  409aea:	and    BYTE PTR [rbp+riz*2+0x73],ah
  409aee:	imul   esi,DWORD PTR [rdx+0x65],0x79742064
  409af5:	jo     0x409b5c
  409af7:	add    BYTE PTR [rcx+0x64],cl
  409afa:	outs   dx,BYTE PTR gs:[rsi]
  409afc:	je     0x409b67
  409afe:	imul   sp,WORD PTR [rbp+0x72],0x7220
  409b04:	gs ins DWORD PTR es:[rdi],dx
  409b06:	outs   dx,DWORD PTR ds:[rsi]
  409b07:	jbe    0x409b6e
  409b09:	add    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
  409b0e:	imul   esp,DWORD PTR [rax],0x68
  409b11:	(bad)  
  409b12:	jae    0x409b34
  409b14:	(bad)  
  409b15:	gs outs dx,BYTE PTR gs:[rsi]
  409b18:	and    BYTE PTR [rbx+0x65],dh
  409b1b:	jbe    0x409b82
  409b1d:	jb     0x409b84
  409b1f:	add    BYTE PTR fs:[rbp+0x75],cl
  409b23:	ins    BYTE PTR es:[rdi],dx
  409b24:	je     0x409b8f
  409b26:	push   0x6120706f
  409b2b:	je     0x409ba1
  409b2d:	gs ins DWORD PTR es:[rdi],dx
  409b2f:	jo     0x409ba5
  409b31:	gs add BYTE PTR fs:[rdx+0x61],al
  409b36:	and    BYTE PTR fs:[rbp+0x65],ch
  409b3a:	jae    0x409baf
  409b3c:	(bad)  
  409b3d:	add    BYTE PTR gs:[eax+0x40d8],al
  409b45:	add    BYTE PTR [rax],al
  409b47:	add    BYTE PTR [rax+0x40d3],al
  409b4d:	add    BYTE PTR [rax],al
  409b4f:	add    BYTE PTR [rax],al
  409b51:	rex.RB
  409b52:	add    BYTE PTR [rax],al
	...
  409b5d:	add    BYTE PTR [rax],al
  409b5f:	add    BYTE PTR [rcx+0x72],al
  409b62:	addr32 jne 0x409bd2
  409b65:	outs   dx,BYTE PTR gs:[rsi]
  409b67:	je     0x409b89
  409b69:	outs   dx,DWORD PTR fs:[rsi]
  409b6b:	ins    DWORD PTR es:[rdi],dx
  409b6c:	(bad)  
  409b6d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  409b74:	jb     0x409b96
  409b76:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  409b7a:	rex.B
  409b7b:	rex.WB
  409b7c:	rex.WRX sub QWORD PTR [rax],r8
  409b7f:	rex.B jb 0x409be9
  409b82:	jne    0x409bf1
  409b84:	outs   dx,BYTE PTR gs:[rsi]
  409b86:	je     0x409ba8
  409b88:	jae    0x409bf3
  409b8a:	outs   dx,BYTE PTR ds:[rsi]
  409b8b:	addr32 jne 0x409bfa
  409b8e:	(bad)  
  409b8f:	jb     0x409bfa
  409b91:	je     0x409c0c
  409b93:	and    BYTE PTR [rax],ch
  409b95:	push   rbx
  409b96:	rex.WB
  409b97:	rex.RXB
  409b98:	rex.WRX sub QWORD PTR [rax],r8
  409b9b:	add    BYTE PTR [rax],al
  409b9d:	add    BYTE PTR [rax],al
  409b9f:	add    BYTE PTR [rdi+0x76],cl
  409ba2:	gs jb  0x409c0b
  409ba5:	ins    BYTE PTR es:[rdi],dx
  409ba6:	outs   dx,DWORD PTR ds:[rsi]
  409ba7:	ja     0x409bc9
  409ba9:	jb     0x409c0c
  409bab:	outs   dx,BYTE PTR ds:[rsi]
  409bac:	and    BYTE PTR gs:[ebp+0x72],ah
  409bb1:	jb     0x409c22
  409bb3:	jb     0x409bd5
  409bb5:	sub    BYTE PTR [rdi+0x56],cl
  409bb8:	rex.RB push r10
  409bba:	rex.RX
  409bbb:	rex.WR
  409bbc:	rex.WRXB push r15
  409bbe:	sub    DWORD PTR [rax],eax
  409bc0:	push   rax
  409bc1:	(bad)  
  409bc2:	jb     0x409c38
  409bc4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  409bcb:	jae    0x409bed
  409bcd:	outs   dx,DWORD PTR ds:[rsi]
  409bce:	data16 and BYTE PTR [rbx+0x69],dh
  409bd2:	outs   dx,BYTE PTR ds:[esi]
  409bd4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409bdb:	and    BYTE PTR gs:[rax],ch
  409bde:	push   rax
  409bdf:	rex.WR
  409be0:	rex.WRXB push r11
  409be2:	push   rbx
  409be3:	sub    DWORD PTR [rax],eax
  409be5:	add    BYTE PTR [rax],al
  409be7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  409beb:	(bad)  
  409bec:	ins    BYTE PTR es:[rdi],dx
  409bed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  409bf1:	jae    0x409c13
  409bf3:	outs   dx,DWORD PTR ds:[rsi]
  409bf4:	data16 and BYTE PTR [rbx+0x69],dh
  409bf8:	outs   dx,BYTE PTR ds:[esi]
  409bfa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409c01:	and    BYTE PTR gs:[rax],ch
  409c04:	push   rsp
  409c05:	rex.WR
  409c06:	rex.WRXB push r11
  409c08:	push   rbx
  409c09:	sub    DWORD PTR [rax],eax
  409c0b:	add    BYTE PTR [rax],al
  409c0d:	add    BYTE PTR [rax],al
  409c0f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  409c13:	and    BYTE PTR [rdx+0x65],dh
  409c16:	jae    0x409c8d
  409c18:	ins    BYTE PTR es:[rdi],dx
  409c19:	je     0x409c3b
  409c1b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  409c22:	jae    0x409c91
  409c24:	(bad)  
  409c25:	ins    BYTE PTR es:[rdi],dx
  409c26:	ins    BYTE PTR es:[rdi],dx
  409c27:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  409c2b:	(bad)  
  409c2c:	and    BYTE PTR gs:[rdx+0x65],dh
  409c30:	jo     0x409ca4
  409c32:	gs jae 0x409c9a
  409c35:	outs   dx,BYTE PTR ds:[rsi]
  409c36:	je     0x409c9d
  409c38:	and    BYTE PTR fs:[rax],ch
  409c3b:	push   rbp
  409c3c:	rex.WRX
  409c3d:	rex.R
  409c3e:	rex.RB push r10
  409c40:	rex.RX
  409c41:	rex.WR
  409c42:	rex.WRXB push r15
  409c44:	sub    DWORD PTR [rax],eax
  409c46:	push   rbp
  409c47:	outs   dx,BYTE PTR ds:[rsi]
  409c48:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409c4c:	outs   dx,BYTE PTR ds:[rsi]
  409c4d:	and    BYTE PTR [rbp+0x72],ah
  409c50:	jb     0x409cc1
  409c52:	jb     0x409c54
  409c54:	add    BYTE PTR [rax],al
  409c56:	add    BYTE PTR [rax],al
  409c58:	pop    rdi
  409c59:	ins    DWORD PTR es:[rdi],dx
  409c5a:	(bad)  
  409c5b:	je     0x409cc5
  409c5d:	gs jb  0x409cd2
  409c60:	sub    BYTE PTR [rcx],ch
  409c62:	cmp    ah,BYTE PTR [rax]
  409c64:	and    eax,0x6e692073
  409c69:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765c4e2
  409c6f:	sub    al,0x20
  409c71:	and    eax,0x20202967
  409c76:	sub    BYTE PTR [rdx+0x65],dh
  409c79:	je     0x409cf1
  409c7b:	(bad)  
  409c7c:	ins    BYTE PTR es:[rdi],dx
  409c7d:	cmp    eax,0xa296725
  409c82:	add    BYTE PTR [rax],al
  409c84:	rex.WR stos BYTE PTR es:[rdi],al
  409c86:	(bad)  
  409c87:	dec    DWORD PTR [rbp-0x3000057]
  409c8d:	test   eax,0xaa0cffff
  409c92:	(bad)  
  409c93:	call   FWORD PTR [rdx+rbp*4]
  409c96:	(bad)  
  409c97:	jmp    FWORD PTR [rdx+rbp*4]
  409c9a:	(bad)  
  409c9b:	(bad)  
  409c9c:	cmp    al,0xaa
  409c9e:	(bad)  
  409c9f:	dec    DWORD PTR [rbp+0x69]
  409ca2:	outs   dx,BYTE PTR ds:[rsi]
  409ca3:	addr32 ja 0x409cd3
  409ca6:	ja     0x409cde
  409ca8:	xor    al,0x20
  409caa:	jb     0x409d21
  409cac:	outs   dx,BYTE PTR ds:[rsi]
  409cad:	je     0x409d18
  409caf:	ins    DWORD PTR es:[rdi],dx
  409cb0:	and    BYTE PTR gs:[rsi+0x61],ah
  409cb4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  409cbc:	add    BYTE PTR [rax],al
  409cbe:	add    BYTE PTR [rax],al
  409cc0:	rex.B
  409cc1:	fs fs jb 0x409d2a
  409cc5:	jae    0x409d3a
  409cc7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8bd3d
  409ccd:	jae    0x409cef
  409ccf:	outs   dx,BYTE PTR ds:[rsi]
  409cd0:	outs   dx,DWORD PTR ds:[rsi]
  409cd1:	and    BYTE PTR [rcx+0x6d],ch
  409cd4:	(bad)  
  409cd5:	addr32 gs sub eax,0x74636573
  409cdc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  409ce3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409cea:	jne    0x409d51
  409cec:	jb     0x409d67
  409cee:	and    BYTE PTR [rsi+0x61],ah
  409cf1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  409cf9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2bd63
  409cff:	je     0x409d66
  409d01:	jae    0x409d23
  409d03:	(bad)  
  409d04:	je     0x409d26
  409d06:	(bad)  
  409d07:	fs fs jb 0x409d70
  409d0b:	jae    0x409d80
  409d0d:	and    BYTE PTR [rip+0x70],ah        # 0x409d83
  409d13:	add    BYTE PTR [rax],al
  409d15:	add    BYTE PTR [rax],al
  409d17:	add    BYTE PTR [rax],ah
  409d19:	and    BYTE PTR [rsi+0x69],dl
  409d1c:	jb     0x409d92
  409d1e:	jne    0x409d81
  409d20:	ins    BYTE PTR es:[rdi],dx
  409d21:	push   rax
  409d22:	jb     0x409d93
  409d24:	je     0x409d8b
  409d26:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  409d2a:	(bad)  
  409d2b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  409d33:	push   0x646f6320
  409d38:	and    BYTE PTR gs:[rax],dh
  409d3b:	js     0x409d62
  409d3d:	js     0x409d3f
  409d3f:	add    BYTE PTR [rax],ah
  409d41:	and    BYTE PTR [rbp+0x6e],dl
  409d44:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409d48:	outs   dx,BYTE PTR ds:[rsi]
  409d49:	and    BYTE PTR [rax+0x73],dh
  409d4c:	gs jne 0x409db3
  409d4f:	outs   dx,DWORD PTR ds:[rsi]
  409d50:	and    BYTE PTR [rdx+0x65],dh
  409d53:	ins    BYTE PTR es:[rdi],dx
  409d54:	outs   dx,DWORD PTR ds:[rsi]
  409d55:	movsxd esp,DWORD PTR [rcx+0x74]
  409d58:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  409d5f:	je     0x409dd0
  409d61:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409d64:	and    BYTE PTR [rsi+0x65],dh
  409d67:	jb     0x409ddc
  409d69:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  409d70:	or     al,BYTE PTR [rax]
  409d72:	add    BYTE PTR [rax],al
  409d74:	add    BYTE PTR [rax],al
  409d76:	add    BYTE PTR [rax],al
  409d78:	and    BYTE PTR [rax],ah
  409d7a:	push   rbp
  409d7b:	outs   dx,BYTE PTR ds:[rsi]
  409d7c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409d80:	outs   dx,BYTE PTR ds:[rsi]
  409d81:	and    BYTE PTR [rax+0x73],dh
  409d84:	gs jne 0x409deb
  409d87:	outs   dx,DWORD PTR ds:[rsi]
  409d88:	and    BYTE PTR [rdx+0x65],dh
  409d8b:	ins    BYTE PTR es:[rdi],dx
  409d8c:	outs   dx,DWORD PTR ds:[rsi]
  409d8d:	movsxd esp,DWORD PTR [rcx+0x74]
  409d90:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  409d97:	and    BYTE PTR [rbx+0x69],dh
  409d9a:	jp     0x409e01
  409d9c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4acc06
	...
  409dae:	add    BYTE PTR [rax],al
  409db0:	cs jo  0x409e17
  409db3:	(bad)  
  409db4:	je     0x409e17
	...
  409dbe:	add    BYTE PTR [rax],al
  409dc0:	push   rax
  409dc1:	jo     0x409e03
	...
  409dcf:	add    BYTE PTR [rax+0x70],ah
  409dd2:	add    BYTE PTR [rax],al
	...
  409ddd:	add    BYTE PTR [rax],al
  409ddf:	add    BYTE PTR [rax+0x66],al
  409de2:	add    BYTE PTR [rax],al
	...
  409ded:	add    BYTE PTR [rax],al
  409def:	add    BYTE PTR [rax],dh
  409df1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409df2:	add    BYTE PTR [rax],al
	...
  409dfd:	add    BYTE PTR [rax],al
  409dff:	add    BYTE PTR [rax],dh
  409e01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409e02:	add    BYTE PTR [rax],al
	...
  409e0d:	add    BYTE PTR [rax],al
  409e0f:	add    BYTE PTR [rax-0x65],dl
  409e12:	add    BYTE PTR [rax],al
	...
  409e21:	add    BYTE PTR [rax+0x0],al
	...
  409e30:	sbb    ah,ah
  409e32:	add    BYTE PTR [rax],al
	...
  409e3d:	add    BYTE PTR [rax],al
  409e3f:	add    BYTE PTR [rax-0x1c],al
  409e42:	add    BYTE PTR [rax],al
	...
  409e4d:	add    BYTE PTR [rax],al
  409e4f:	add    BYTE PTR [rax-0x1c],ch
  409e52:	add    BYTE PTR [rax],al
	...
  409e5d:	add    BYTE PTR [rax],al
  409e5f:	add    BYTE PTR [rax+0x40e4],cl
	...
  409e6d:	add    BYTE PTR [rax],al
  409e6f:	add    al,al
  409e71:	fld    DWORD PTR [rax+0x0]
	...
  409e80:	rex fld QWORD PTR [rax+0x0]
	...
  409e90:	cmp    ch,bl
  409e92:	add    BYTE PTR [rax],al
	...
  409e9d:	add    BYTE PTR [rax],al
  409e9f:	add    BYTE PTR [rax],ch
  409ea1:	fld    QWORD PTR [rax+0x0]
	...
  409eb0:	xor    ch,bl
  409eb2:	add    BYTE PTR [rax],al
	...
  409ec1:	lock add BYTE PTR [rax],al
	...
  409ecd:	add    BYTE PTR [rax],al
  409ecf:	add    BYTE PTR [rax],dl
  409ed1:	lock add BYTE PTR [rax],al
	...
  409edd:	add    BYTE PTR [rax],al
  409edf:	add    BYTE PTR [rax],bl
  409ee1:	lock add BYTE PTR [rax],al
	...
  409eed:	add    BYTE PTR [rax],al
  409eef:	add    BYTE PTR [rax],dh
  409ef1:	lock add BYTE PTR [rax],al
	...
  409efd:	add    BYTE PTR [rax],al
  409eff:	add    BYTE PTR [rax-0x2d],dl
  409f02:	add    BYTE PTR [rax],al
	...
  409f0d:	add    BYTE PTR [rax],al
  409f0f:	add    BYTE PTR [rax+0x40d9],dl
	...
  409f1d:	add    BYTE PTR [rax],al
  409f1f:	add    BYTE PTR [rax+0x404e],dl
	...
  409f2d:	add    BYTE PTR [rax],al
  409f2f:	add    al,ah
  409f31:	rex.RB
  409f32:	add    BYTE PTR [rax],al
	...
  409f3d:	add    BYTE PTR [rax],al
  409f3f:	add    BYTE PTR [rax-0x27],al
  409f42:	add    BYTE PTR [rax],al
	...
  409f4d:	add    BYTE PTR [rax],al
  409f4f:	add    BYTE PTR [rax-0x27],dh
  409f52:	add    BYTE PTR [rax],al
	...
  409f5d:	add    BYTE PTR [rax],al
  409f5f:	add    BYTE PTR [rax-0x2d],ah
  409f62:	add    BYTE PTR [rax],al
	...
  409f6d:	add    BYTE PTR [rax],al
  409f6f:	add    BYTE PTR [rax-0x27],bl
  409f72:	add    BYTE PTR [rax],al
	...
  409f7d:	add    BYTE PTR [rax],al
  409f7f:	add    BYTE PTR [rcx+rbx*8+0x40],dl
	...
  409f8f:	add    BYTE PTR [rax-0x27],dl
  409f92:	add    BYTE PTR [rax],al
	...
  409f9d:	add    BYTE PTR [rax],al
  409f9f:	add    al,ah
  409fa1:	rol    BYTE PTR [rax+0x0],1
	...
  409fb0:	rex.RXB
  409fb1:	rex.XB
  409fb2:	rex.XB cmp spl,BYTE PTR [r8]
  409fb5:	sub    BYTE PTR [rdi+0x4e],al
  409fb8:	push   rbp
  409fb9:	sub    DWORD PTR [rax],esp
  409fbb:	xor    al,0x2e
  409fbd:	cmp    DWORD PTR [rsi],ebp
  409fbf:	xor    al,0x0
	...
  409fcd:	add    BYTE PTR [rax],al
  409fcf:	add    BYTE PTR [rdi+0x43],al
  409fd2:	rex.XB cmp spl,BYTE PTR [r8]
  409fd5:	sub    BYTE PTR [rdi+0x4e],al
  409fd8:	push   rbp
  409fd9:	sub    DWORD PTR [rax],esp
  409fdb:	xor    al,0x2e
  409fdd:	cmp    DWORD PTR [rsi],ebp
  409fdf:	xor    al,0x0
	...
  409fed:	add    BYTE PTR [rax],al
  409fef:	add    BYTE PTR [rdi+0x43],al
  409ff2:	rex.XB cmp spl,BYTE PTR [r8]
  409ff5:	sub    BYTE PTR [rdi+0x4e],al
  409ff8:	push   rbp
  409ff9:	sub    DWORD PTR [rax],esp
  409ffb:	xor    al,0x2e
  409ffd:	cmp    DWORD PTR [rsi],ebp
  409fff:	xor    al,0x0
	...
  40a00d:	add    BYTE PTR [rax],al
  40a00f:	add    BYTE PTR [rdi+0x43],al
  40a012:	rex.XB cmp spl,BYTE PTR [r8]
  40a015:	sub    BYTE PTR [rdi+0x4e],al
  40a018:	push   rbp
  40a019:	sub    DWORD PTR [rax],esp
  40a01b:	xor    al,0x2e
  40a01d:	cmp    DWORD PTR [rsi],ebp
  40a01f:	xor    al,0x0
	...
  40a02d:	add    BYTE PTR [rax],al
  40a02f:	add    BYTE PTR [rdi+0x43],al
  40a032:	rex.XB cmp spl,BYTE PTR [r8]
  40a035:	sub    BYTE PTR [rdi+0x4e],al
  40a038:	push   rbp
  40a039:	sub    DWORD PTR [rax],esp
  40a03b:	xor    al,0x2e
  40a03d:	cmp    DWORD PTR [rsi],ebp
  40a03f:	xor    al,0x0
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    BYTE PTR [rdi+0x43],al
  40a052:	rex.XB cmp spl,BYTE PTR [r8]
  40a055:	sub    BYTE PTR [rdi+0x4e],al
  40a058:	push   rbp
  40a059:	sub    DWORD PTR [rax],esp
  40a05b:	xor    al,0x2e
  40a05d:	cmp    DWORD PTR [rsi],ebp
  40a05f:	xor    al,0x0
	...
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    BYTE PTR [rdi+0x43],al
  40a072:	rex.XB cmp spl,BYTE PTR [r8]
  40a075:	sub    BYTE PTR [rdi+0x4e],al
  40a078:	push   rbp
  40a079:	sub    DWORD PTR [rax],esp
  40a07b:	xor    al,0x2e
  40a07d:	cmp    DWORD PTR [rsi],ebp
  40a07f:	xor    al,0x0
	...
  40a08d:	add    BYTE PTR [rax],al
  40a08f:	add    BYTE PTR [rdi+0x43],al
  40a092:	rex.XB cmp spl,BYTE PTR [r8]
  40a095:	sub    BYTE PTR [rdi+0x4e],al
  40a098:	push   rbp
  40a099:	sub    DWORD PTR [rax],esp
  40a09b:	xor    al,0x2e
  40a09d:	cmp    DWORD PTR [rsi],ebp
  40a09f:	xor    al,0x0
	...
  40a0ad:	add    BYTE PTR [rax],al
  40a0af:	add    BYTE PTR [rdi+0x43],al
  40a0b2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0b5:	sub    BYTE PTR [rdi+0x4e],al
  40a0b8:	push   rbp
  40a0b9:	sub    DWORD PTR [rax],esp
  40a0bb:	xor    al,0x2e
  40a0bd:	cmp    DWORD PTR [rsi],ebp
  40a0bf:	xor    al,0x0
	...
  40a0cd:	add    BYTE PTR [rax],al
  40a0cf:	add    BYTE PTR [rdi+0x43],al
  40a0d2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0d5:	sub    BYTE PTR [rdi+0x4e],al
  40a0d8:	push   rbp
  40a0d9:	sub    DWORD PTR [rax],esp
  40a0db:	xor    al,0x2e
  40a0dd:	cmp    DWORD PTR [rsi],ebp
  40a0df:	xor    al,0x0
	...
  40a0ed:	add    BYTE PTR [rax],al
  40a0ef:	add    BYTE PTR [rdi+0x43],al
  40a0f2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0f5:	sub    BYTE PTR [rdi+0x4e],al
  40a0f8:	push   rbp
  40a0f9:	sub    DWORD PTR [rax],esp
  40a0fb:	xor    al,0x2e
  40a0fd:	cmp    DWORD PTR [rsi],ebp
  40a0ff:	xor    al,0x0
	...
  40a10d:	add    BYTE PTR [rax],al
  40a10f:	add    BYTE PTR [rdi+0x43],al
  40a112:	rex.XB cmp spl,BYTE PTR [r8]
  40a115:	sub    BYTE PTR [rdi+0x4e],al
  40a118:	push   rbp
  40a119:	sub    DWORD PTR [rax],esp
  40a11b:	xor    al,0x2e
  40a11d:	cmp    DWORD PTR [rsi],ebp
  40a11f:	xor    al,0x0
	...
  40a12d:	add    BYTE PTR [rax],al
  40a12f:	add    BYTE PTR [rdi+0x43],al
  40a132:	rex.XB cmp spl,BYTE PTR [r8]
  40a135:	sub    BYTE PTR [rdi+0x4e],al
  40a138:	push   rbp
  40a139:	sub    DWORD PTR [rax],esp
  40a13b:	xor    al,0x2e
  40a13d:	cmp    DWORD PTR [rsi],ebp
  40a13f:	xor    al,0x0
	...
  40a14d:	add    BYTE PTR [rax],al
  40a14f:	add    BYTE PTR [rdi+0x43],al
  40a152:	rex.XB cmp spl,BYTE PTR [r8]
  40a155:	sub    BYTE PTR [rdi+0x4e],al
  40a158:	push   rbp
  40a159:	sub    DWORD PTR [rax],esp
  40a15b:	xor    al,0x2e
  40a15d:	cmp    DWORD PTR [rsi],ebp
  40a15f:	xor    al,0x0
	...
  40a16d:	add    BYTE PTR [rax],al
  40a16f:	add    BYTE PTR [rdi+0x43],al
  40a172:	rex.XB cmp spl,BYTE PTR [r8]
  40a175:	sub    BYTE PTR [rdi+0x4e],al
  40a178:	push   rbp
  40a179:	sub    DWORD PTR [rax],esp
  40a17b:	xor    al,0x2e
  40a17d:	cmp    DWORD PTR [rsi],ebp
  40a17f:	xor    al,0x0
	...
  40a18d:	add    BYTE PTR [rax],al
  40a18f:	add    BYTE PTR [rdi+0x43],al
  40a192:	rex.XB cmp spl,BYTE PTR [r8]
  40a195:	sub    BYTE PTR [rdi+0x4e],al
  40a198:	push   rbp
  40a199:	sub    DWORD PTR [rax],esp
  40a19b:	xor    al,0x2e
  40a19d:	cmp    DWORD PTR [rsi],ebp
  40a19f:	xor    al,0x0
	...
  40a1ad:	add    BYTE PTR [rax],al
  40a1af:	add    BYTE PTR [rdi+0x43],al
  40a1b2:	rex.XB cmp spl,BYTE PTR [r8]
  40a1b5:	sub    BYTE PTR [rdi+0x4e],al
  40a1b8:	push   rbp
  40a1b9:	sub    DWORD PTR [rax],esp
  40a1bb:	xor    al,0x2e
  40a1bd:	cmp    DWORD PTR [rsi],ebp
  40a1bf:	xor    al,0x0
	...
  40a1cd:	add    BYTE PTR [rax],al
  40a1cf:	add    BYTE PTR [rdi+0x43],al
  40a1d2:	rex.XB cmp spl,BYTE PTR [r8]
  40a1d5:	sub    BYTE PTR [rdi+0x4e],al
  40a1d8:	push   rbp
  40a1d9:	sub    DWORD PTR [rax],esp
  40a1db:	xor    al,0x2e
  40a1dd:	cmp    DWORD PTR [rsi],ebp
  40a1df:	xor    al,0x0
	...
  40a1ed:	add    BYTE PTR [rax],al
  40a1ef:	add    BYTE PTR [rdi+0x43],al
  40a1f2:	rex.XB cmp spl,BYTE PTR [r8]
  40a1f5:	sub    BYTE PTR [rdi+0x4e],al
  40a1f8:	push   rbp
  40a1f9:	sub    DWORD PTR [rax],esp
  40a1fb:	xor    al,0x2e
  40a1fd:	cmp    DWORD PTR [rsi],ebp
  40a1ff:	xor    al,0x0
	...
  40a20d:	add    BYTE PTR [rax],al
  40a20f:	add    BYTE PTR [rdi+0x43],al
  40a212:	rex.XB cmp spl,BYTE PTR [r8]
  40a215:	sub    BYTE PTR [rdi+0x4e],al
  40a218:	push   rbp
  40a219:	sub    DWORD PTR [rax],esp
  40a21b:	xor    al,0x2e
  40a21d:	cmp    DWORD PTR [rsi],ebp
  40a21f:	xor    al,0x0
	...
  40a22d:	add    BYTE PTR [rax],al
  40a22f:	add    BYTE PTR [rdi+0x43],al
  40a232:	rex.XB cmp spl,BYTE PTR [r8]
  40a235:	sub    BYTE PTR [rdi+0x4e],al
  40a238:	push   rbp
  40a239:	sub    DWORD PTR [rax],esp
  40a23b:	xor    al,0x2e
  40a23d:	cmp    DWORD PTR [rsi],ebp
  40a23f:	xor    al,0x0
	...
  40a24d:	add    BYTE PTR [rax],al
  40a24f:	add    BYTE PTR [rdi+0x43],al
  40a252:	rex.XB cmp spl,BYTE PTR [r8]
  40a255:	sub    BYTE PTR [rdi+0x4e],al
  40a258:	push   rbp
  40a259:	sub    DWORD PTR [rax],esp
  40a25b:	xor    al,0x2e
  40a25d:	cmp    DWORD PTR [rsi],ebp
  40a25f:	xor    al,0x0
	...
  40a26d:	add    BYTE PTR [rax],al
  40a26f:	add    BYTE PTR [rdi+0x43],al
  40a272:	rex.XB cmp spl,BYTE PTR [r8]
  40a275:	sub    BYTE PTR [rdi+0x4e],al
  40a278:	push   rbp
  40a279:	sub    DWORD PTR [rax],esp
  40a27b:	xor    al,0x2e
  40a27d:	cmp    DWORD PTR [rsi],ebp
  40a27f:	xor    al,0x0
	...
  40a28d:	add    BYTE PTR [rax],al
  40a28f:	add    BYTE PTR [rdi+0x43],al
  40a292:	rex.XB cmp spl,BYTE PTR [r8]
  40a295:	sub    BYTE PTR [rdi+0x4e],al
  40a298:	push   rbp
  40a299:	sub    DWORD PTR [rax],esp
  40a29b:	xor    al,0x2e
  40a29d:	cmp    DWORD PTR [rsi],ebp
  40a29f:	xor    al,0x0
	...
  40a2ad:	add    BYTE PTR [rax],al
  40a2af:	add    BYTE PTR [rdi+0x43],al
  40a2b2:	rex.XB cmp spl,BYTE PTR [r8]
  40a2b5:	sub    BYTE PTR [rdi+0x4e],al
  40a2b8:	push   rbp
  40a2b9:	sub    DWORD PTR [rax],esp
  40a2bb:	xor    al,0x2e
  40a2bd:	cmp    DWORD PTR [rsi],ebp
  40a2bf:	xor    al,0x0
	...
  40a2cd:	add    BYTE PTR [rax],al
  40a2cf:	add    BYTE PTR [rdi+0x43],al
  40a2d2:	rex.XB cmp spl,BYTE PTR [r8]
  40a2d5:	sub    BYTE PTR [rdi+0x4e],al
  40a2d8:	push   rbp
  40a2d9:	sub    DWORD PTR [rax],esp
  40a2db:	xor    al,0x2e
  40a2dd:	cmp    DWORD PTR [rsi],ebp
  40a2df:	xor    al,0x0
	...
  40a2ed:	add    BYTE PTR [rax],al
  40a2ef:	add    BYTE PTR [rdi+0x43],al
  40a2f2:	rex.XB cmp spl,BYTE PTR [r8]
  40a2f5:	sub    BYTE PTR [rdi+0x4e],al
  40a2f8:	push   rbp
  40a2f9:	sub    DWORD PTR [rax],esp
  40a2fb:	xor    al,0x2e
  40a2fd:	cmp    DWORD PTR [rsi],ebp
  40a2ff:	xor    al,0x0
	...
  40a30d:	add    BYTE PTR [rax],al
  40a30f:	add    BYTE PTR [rdi+0x43],al
  40a312:	rex.XB cmp spl,BYTE PTR [r8]
  40a315:	sub    BYTE PTR [rdi+0x4e],al
  40a318:	push   rbp
  40a319:	sub    DWORD PTR [rax],esp
  40a31b:	xor    al,0x2e
  40a31d:	cmp    DWORD PTR [rsi],ebp
  40a31f:	xor    al,0x0
	...
  40a32d:	add    BYTE PTR [rax],al
  40a32f:	add    BYTE PTR [rdi+0x43],al
  40a332:	rex.XB cmp spl,BYTE PTR [r8]
  40a335:	sub    BYTE PTR [rdi+0x4e],al
  40a338:	push   rbp
  40a339:	sub    DWORD PTR [rax],esp
  40a33b:	xor    al,0x2e
  40a33d:	cmp    DWORD PTR [rsi],ebp
  40a33f:	xor    al,0x0
	...
  40a34d:	add    BYTE PTR [rax],al
  40a34f:	add    BYTE PTR [rdi+0x43],al
  40a352:	rex.XB cmp spl,BYTE PTR [r8]
  40a355:	sub    BYTE PTR [rdi+0x4e],al
  40a358:	push   rbp
  40a359:	sub    DWORD PTR [rax],esp
  40a35b:	xor    al,0x2e
  40a35d:	cmp    DWORD PTR [rsi],ebp
  40a35f:	xor    al,0x0
	...
  40a36d:	add    BYTE PTR [rax],al
  40a36f:	add    BYTE PTR [rdi+0x43],al
  40a372:	rex.XB cmp spl,BYTE PTR [r8]
  40a375:	sub    BYTE PTR [rdi+0x4e],al
  40a378:	push   rbp
  40a379:	sub    DWORD PTR [rax],esp
  40a37b:	xor    al,0x2e
  40a37d:	cmp    DWORD PTR [rsi],ebp
  40a37f:	xor    al,0x0
	...
  40a38d:	add    BYTE PTR [rax],al
  40a38f:	add    BYTE PTR [rdi+0x43],al
  40a392:	rex.XB cmp spl,BYTE PTR [r8]
  40a395:	sub    BYTE PTR [rdi+0x4e],al
  40a398:	push   rbp
  40a399:	sub    DWORD PTR [rax],esp
  40a39b:	xor    al,0x2e
  40a39d:	cmp    DWORD PTR [rsi],ebp
  40a39f:	xor    al,0x0
	...
  40a3ad:	add    BYTE PTR [rax],al
  40a3af:	add    BYTE PTR [rdi+0x43],al
  40a3b2:	rex.XB cmp spl,BYTE PTR [r8]
  40a3b5:	sub    BYTE PTR [rdi+0x4e],al
  40a3b8:	push   rbp
  40a3b9:	sub    DWORD PTR [rax],esp
  40a3bb:	xor    al,0x2e
  40a3bd:	cmp    DWORD PTR [rsi],ebp
  40a3bf:	xor    al,0x0
	...
  40a3cd:	add    BYTE PTR [rax],al
  40a3cf:	add    BYTE PTR [rdi+0x43],al
  40a3d2:	rex.XB cmp spl,BYTE PTR [r8]
  40a3d5:	sub    BYTE PTR [rdi+0x4e],al
  40a3d8:	push   rbp
  40a3d9:	sub    DWORD PTR [rax],esp
  40a3db:	xor    al,0x2e
  40a3dd:	cmp    DWORD PTR [rsi],ebp
  40a3df:	xor    al,0x0
	...
  40a3ed:	add    BYTE PTR [rax],al
  40a3ef:	add    BYTE PTR [rdi+0x43],al
  40a3f2:	rex.XB cmp spl,BYTE PTR [r8]
  40a3f5:	sub    BYTE PTR [rdi+0x4e],al
  40a3f8:	push   rbp
  40a3f9:	sub    DWORD PTR [rax],esp
  40a3fb:	xor    al,0x2e
  40a3fd:	cmp    DWORD PTR [rsi],ebp
  40a3ff:	xor    al,0x0
	...
  40a40d:	add    BYTE PTR [rax],al
  40a40f:	add    BYTE PTR [rdi+0x43],al
  40a412:	rex.XB cmp spl,BYTE PTR [r8]
  40a415:	sub    BYTE PTR [rdi+0x4e],al
  40a418:	push   rbp
  40a419:	sub    DWORD PTR [rax],esp
  40a41b:	xor    al,0x2e
  40a41d:	cmp    DWORD PTR [rsi],ebp
  40a41f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040b000 <.pdata>:
  40b000:	add    BYTE PTR [rax],dl
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rax],edx
  40b006:	add    BYTE PTR [rax],al
  40b008:	add    al,al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	adc    BYTE PTR [rax],dl
  40b00e:	add    BYTE PTR [rax],al
  40b010:	push   rcx
  40b011:	adc    DWORD PTR [rax],eax
  40b013:	add    BYTE PTR [rax+rax*8],al
  40b016:	add    BYTE PTR [rax],al
  40b018:	(bad)  
  40b019:	adc    DWORD PTR [rax],eax
  40b01b:	add    BYTE PTR [rsi+0xc000011],ch
  40b021:	rol    BYTE PTR [rax],0x0
  40b024:	mov    al,0x11
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	adc    al,0x0
  40b02b:	add    BYTE PTR [rax+rax*8],dl
  40b02e:	add    BYTE PTR [rax],al
  40b030:	rcl    BYTE PTR [rax+rax*1],1
  40b033:	add    dl,dh
  40b035:	adc    al,0x0
  40b037:	add    BYTE PTR [rax],ch
  40b039:	rol    BYTE PTR [rax],0x0
  40b03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562b042
  40b042:	add    BYTE PTR [rax],al
  40b044:	rex.W rol BYTE PTR [rax],0x0
  40b048:	xor    BYTE PTR [rip+0x15ae0000],dl        # 0x15eeb04e
  40b04e:	add    BYTE PTR [rax],al
  40b050:	push   0xffffffffb00000c0
  40b055:	adc    eax,0x16bc0000
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	je     0x40b01e
  40b05e:	add    BYTE PTR [rax],al
  40b060:	rcl    BYTE PTR [rsi],0x0
  40b063:	add    ah,cl
  40b065:	(bad)  
  40b066:	add    BYTE PTR [rax],al
  40b068:	test   al,al
  40b06a:	add    BYTE PTR [rax],al
  40b06c:	rcl    BYTE PTR [rdi],1
  40b06e:	add    BYTE PTR [rax],al
  40b070:	(bad)  
  40b071:	sbb    DWORD PTR [rax],eax
  40b073:	add    BYTE PTR [rax+rax*8+0x19300000],dl
  40b07a:	add    BYTE PTR [rax],al
  40b07c:	mov    DWORD PTR [rdx],ebx
  40b07e:	add    BYTE PTR [rax],al
  40b080:	lods   al,BYTE PTR ds:[rsi]
  40b081:	rol    BYTE PTR [rax],0x0
  40b084:	nop
  40b085:	sbb    al,BYTE PTR [rax]
  40b087:	add    BYTE PTR [rdx+0x1d],dl
  40b08a:	add    BYTE PTR [rax],al
  40b08c:	(bad)  
  40b08d:	rol    BYTE PTR [rax],0x0
  40b090:	(bad)  
  40b091:	sbb    eax,0x1dcb0000
  40b096:	add    BYTE PTR [rax],al
  40b098:	fadd   st(0),st
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	rcr    BYTE PTR [rip+0x1f660000],1        # 0x1fa6b0a2
  40b0a2:	add    BYTE PTR [rax],al
  40b0a4:	in     al,dx
  40b0a5:	rol    BYTE PTR [rax],0x0
  40b0a8:	jo     0x40b0c9
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	(bad)  
  40b0ad:	(bad)  
  40b0ae:	add    BYTE PTR [rax],al
  40b0b0:	clc    
  40b0b1:	rol    BYTE PTR [rax],0x0
  40b0b4:	loopne 0x40b0d5
  40b0b6:	add    BYTE PTR [rax],al
  40b0b8:	and    BYTE PTR [rax],r8b
  40b0bb:	add    BYTE PTR [rcx+rax*8],al
  40b0be:	add    BYTE PTR [rax],al
  40b0c0:	push   rax
  40b0c1:	and    BYTE PTR [rax],al
  40b0c3:	add    BYTE PTR [rax+0x10000020],bh
  40b0c9:	rol    DWORD PTR [rax],0x0
  40b0cc:	shl    BYTE PTR [rax],0x0
  40b0cf:	add    BYTE PTR [rsi+0x1c000027],ch
  40b0d5:	rol    DWORD PTR [rax],0x0
  40b0d8:	mov    al,0x27
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	(bad)  
  40b0dd:	sub    BYTE PTR [rax],al
  40b0df:	add    BYTE PTR [rcx+rax*8],dh
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	and    BYTE PTR [rax],ch
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	xchg   DWORD PTR [rax],ebp
  40b0ea:	add    BYTE PTR [rax],al
  40b0ec:	cmp    al,0xc1
  40b0ee:	add    BYTE PTR [rax],al
  40b0f0:	nop
  40b0f1:	sub    BYTE PTR [rax],al
  40b0f3:	add    BYTE PTR [rbx],ah
  40b0f5:	sub    DWORD PTR [rax],eax
  40b0f7:	add    BYTE PTR [rcx+rax*8+0x0],bl
  40b0fb:	add    BYTE PTR [rax],dh
  40b0fd:	sub    DWORD PTR [rax],eax
  40b0ff:	add    BYTE PTR [rax+0x68000029],bl
  40b105:	rol    DWORD PTR [rax],0x0
  40b108:	movabs al,ds:0x7c000029fc000029
  40b111:	rol    DWORD PTR [rax],0x0
  40b114:	add    BYTE PTR [rdx],ch
  40b116:	add    BYTE PTR [rax],al
  40b118:	mov    BYTE PTR [rdx],ch
  40b11a:	add    BYTE PTR [rax],al
  40b11c:	test   cl,al
  40b11e:	add    BYTE PTR [rax],al
  40b120:	nop
  40b121:	sub    al,BYTE PTR [rax]
  40b123:	add    BYTE PTR [rax],dl
  40b125:	(bad)  
  40b126:	add    BYTE PTR [rax],al
  40b128:	nop
  40b129:	rol    DWORD PTR [rax],0x0
  40b12c:	adc    BYTE PTR [rdi],ch
  40b12e:	add    BYTE PTR [rax],al
  40b130:	xor    ebp,DWORD PTR [rdi]
  40b132:	add    BYTE PTR [rax],al
  40b134:	cwde   
  40b135:	rol    DWORD PTR [rax],0x0
  40b138:	rex (bad) 
  40b13a:	add    BYTE PTR [rax],al
  40b13c:	data16 (bad) 
  40b13e:	add    BYTE PTR [rax],al
  40b140:	movabs al,ds:0x9a00002f700000c1
  40b149:	(bad)  
  40b14a:	add    BYTE PTR [rax],al
  40b14c:	test   al,0xc1
  40b14e:	add    BYTE PTR [rax],al
  40b150:	movabs al,ds:0xb000002fe300002f
  40b159:	rol    DWORD PTR [rax],0x0
  40b15c:	lock (bad) 
  40b15e:	add    BYTE PTR [rax],al
  40b160:	sbb    BYTE PTR [rax],dh
  40b162:	add    BYTE PTR [rax],al
  40b164:	mov    eax,0x200000c1
  40b169:	xor    BYTE PTR [rax],al
  40b16b:	add    BYTE PTR [rbp+0x30],cl
  40b16e:	add    BYTE PTR [rax],al
  40b170:	(bad)
  40b174:	push   rax
  40b175:	xor    BYTE PTR [rax],al
  40b177:	add    BYTE PTR [rbp-0x33ffffd0],cl
  40b17d:	rol    DWORD PTR [rax],0x0
  40b180:	nop
  40b181:	xor    BYTE PTR [rax],al
  40b183:	add    BYTE PTR [rdi],dh
  40b185:	xor    DWORD PTR [rax],eax
  40b187:	add    ah,dl
  40b189:	rol    DWORD PTR [rax],0x0
  40b18c:	rex xor DWORD PTR [rax],eax
  40b18f:	add    dh,dl
  40b191:	xor    DWORD PTR [rax],eax
  40b193:	add    ah,ah
  40b195:	rol    DWORD PTR [rax],0x0
  40b198:	loopne 0x40b1cb
  40b19a:	add    BYTE PTR [rax],al
  40b19c:	cmc    
  40b19d:	xor    al,BYTE PTR [rax]
  40b19f:	add    ah,dh
  40b1a1:	rol    DWORD PTR [rax],0x0
  40b1a4:	add    BYTE PTR [rbx],dh
  40b1a6:	add    BYTE PTR [rax],al
  40b1a8:	mov    dh,0x33
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	or     dl,al
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	shl    BYTE PTR [rbx],0x0
  40b1b3:	add    dh,bh
  40b1b5:	xor    eax,DWORD PTR [rax]
  40b1b7:	add    BYTE PTR [rdx+rax*8],dl
  40b1ba:	add    BYTE PTR [rax],al
  40b1bc:	add    BYTE PTR [rax+rax*1],dh
  40b1bf:	add    BYTE PTR [rdx],ah
  40b1c1:	xor    al,0x0
  40b1c3:	add    BYTE PTR [rax],ah
  40b1c5:	ret    0x0
  40b1c8:	xor    BYTE PTR [rax+rax*1],dh
  40b1cb:	add    BYTE PTR [rdi+0x34],dl
  40b1ce:	add    BYTE PTR [rax],al
  40b1d0:	sub    dl,al
  40b1d2:	add    BYTE PTR [rax],al
  40b1d4:	(bad)  
  40b1d5:	xor    al,0x0
  40b1d7:	add    BYTE PTR [rdx],cl
  40b1d9:	xor    eax,0xc2340000
  40b1de:	add    BYTE PTR [rax],al
  40b1e0:	adc    BYTE PTR [rip+0x352d0000],dh        # 0x356db1e6
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	rex ret 0x0
  40b1ec:	xor    BYTE PTR [rip+0x35db0000],dh        # 0x361bb1f2
  40b1f2:	add    BYTE PTR [rax],al
  40b1f4:	rex.W ret 0x0
  40b1f8:	loopne 0x40b22f
  40b1fa:	add    BYTE PTR [rax],al
  40b1fc:	mov    dh,BYTE PTR [rsi]
  40b1fe:	add    BYTE PTR [rax],al
  40b200:	push   rsp
  40b201:	ret    0x0
  40b204:	nop
  40b205:	add    BYTE PTR ss:[rax],al
  40b208:	push   rsi
  40b209:	(bad)  
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	(bad)  
  40b20d:	ret    0x0
  40b210:	(bad)  
  40b211:	(bad)  
  40b212:	add    BYTE PTR [rax],al
  40b214:	cmp    BYTE PTR [rax],r8b
  40b217:	add    BYTE PTR [rax-0x3e],dh
  40b21a:	add    BYTE PTR [rax],al
  40b21c:	push   rax
  40b21d:	cmp    BYTE PTR [rax],al
  40b21f:	add    al,bl
  40b221:	cmp    al,0x0
  40b223:	add    BYTE PTR [rdx+rax*8+0x0],bh
  40b227:	add    al,ah
  40b229:	cmp    al,0x0
  40b22b:	add    cl,bh
  40b22d:	cmp    al,0x0
  40b22f:	add    BYTE PTR [rax+0xc2],al
  40b235:	cmp    eax,0x3d2f0000
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	test   dl,al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	xor    BYTE PTR [rip+0x3d4a0000],bh        # 0x3d8ab246
  40b246:	add    BYTE PTR [rax],al
  40b248:	mov    edx,es
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	push   rax
  40b24d:	cmp    eax,0x3d590000
  40b252:	add    BYTE PTR [rax],al
  40b254:	nop
  40b255:	ret    0x0
  40b258:	(bad)  
  40b259:	cmp    eax,0x3da30000
  40b25e:	add    BYTE PTR [rax],al
  40b260:	xchg   esp,eax
  40b261:	ret    0x0
  40b264:	mov    al,0x3d
  40b266:	add    BYTE PTR [rax],al
  40b268:	repz cmp eax,0xc29c0000
  40b26e:	add    BYTE PTR [rax],al
  40b270:	add    BYTE PTR [rsi],bh
  40b272:	add    BYTE PTR [rax],al
  40b274:	or     DWORD PTR [rsi],edi
  40b276:	add    BYTE PTR [rax],al
  40b278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b279:	ret    0x0
  40b27c:	adc    BYTE PTR [rsi],bh
  40b27e:	add    BYTE PTR [rax],al
  40b280:	rex.R
  40b281:	add    BYTE PTR ds:[rax],al
  40b284:	test   al,0xc2
  40b286:	add    BYTE PTR [rax],al
  40b288:	push   rax
  40b289:	add    BYTE PTR ds:[rax],al
  40b28c:	mov    ecx,0xac00003e
  40b291:	ret    0x0
  40b294:	sar    BYTE PTR [rsi],0x0
  40b297:	add    BYTE PTR [rcx],bl
  40b299:	(bad)  
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	mov    ah,0xc2
  40b29e:	add    BYTE PTR [rax],al
  40b2a0:	and    BYTE PTR [rdi],bh
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	add    eax,0xbc000041
  40b2a9:	ret    0x0
  40b2ac:	rex
  40b2ad:	add    BYTE PTR [r8],al
  40b2b0:	out    0x41,eax
  40b2b2:	add    BYTE PTR [rax],al
  40b2b4:	rol    dl,1
  40b2b6:	add    BYTE PTR [rax],al
  40b2b8:	lock add BYTE PTR [r8],al
  40b2bc:	or     DWORD PTR [rdx+0x0],eax
  40b2bf:	add    al,bl
  40b2c1:	ret    0x0
  40b2c4:	adc    BYTE PTR [rdx+0x0],al
  40b2c7:	add    BYTE PTR [rbp+0x42],al
  40b2ca:	add    BYTE PTR [rax],al
  40b2cc:	loopne 0x40b290
  40b2ce:	add    BYTE PTR [rax],al
  40b2d0:	push   rax
  40b2d1:	rex.X add BYTE PTR [rax],al
  40b2d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b2d5:	rex.X add BYTE PTR [rax],al
  40b2d8:	call   0xffffffffb040b39f
  40b2dd:	rex.X add BYTE PTR [rax],al
  40b2e0:	int3   
  40b2e1:	rex.X add BYTE PTR [rax],al
  40b2e4:	hlt    
  40b2e5:	ret    0x0
  40b2e8:	rol    BYTE PTR [rdx+0x0],1
  40b2eb:	add    dl,bl
  40b2ed:	rex.X add BYTE PTR [rax],al
  40b2f0:	clc    
  40b2f1:	ret    0x0
  40b2f4:	loopne 0x40b338
  40b2f6:	add    BYTE PTR [rax],al
  40b2f8:	jrcxz  0x40b33c
  40b2fa:	add    BYTE PTR [rax],al
  40b2fc:	cld    
  40b2fd:	ret    0x0
  40b300:	lock rex.X add BYTE PTR [rax],al
  40b304:	mov    BYTE PTR [rbx+0x0],0x0
  40b308:	add    bl,al
  40b30a:	add    BYTE PTR [rax],al
  40b30c:	rol    BYTE PTR [rbx+0x0],1
  40b30f:	add    bl,cl
  40b311:	add    BYTE PTR [rax],r8b
  40b314:	adc    bl,al
  40b316:	add    BYTE PTR [rax],al
  40b318:	rol    BYTE PTR [rax+rax*1+0x0],1
  40b31c:	inc    DWORD PTR [rax+rax*1+0x0]
  40b320:	and    bl,al
  40b322:	add    BYTE PTR [rax],al
  40b324:	add    BYTE PTR [rbp+0x0],al
  40b327:	add    BYTE PTR [rcx+0x45],ch
  40b32a:	add    BYTE PTR [rax],al
  40b32c:	sub    bl,al
  40b32e:	add    BYTE PTR [rax],al
  40b330:	jo     0x40b377
  40b332:	add    BYTE PTR [rax],al
  40b334:	jae    0x40b37b
  40b336:	add    BYTE PTR [rax],al
  40b338:	xor    al,0xc3
  40b33a:	add    BYTE PTR [rax],al
  40b33c:	add    BYTE PTR [rbp+0x0],0x0
  40b340:	rol    DWORD PTR [rbp+0x0],0x0
  40b344:	cmp    bl,al
  40b346:	add    BYTE PTR [rax],al
  40b348:	rol    BYTE PTR [rbp+0x0],1
  40b34b:	add    ah,bl
  40b34d:	add    BYTE PTR [r8],r8b
  40b350:	rex ret 
  40b352:	add    BYTE PTR [rax],al
  40b354:	loopne 0x40b39b
  40b356:	add    BYTE PTR [rax],al
  40b358:	fadd   QWORD PTR [rsi+0x0]
  40b35b:	add    BYTE PTR [rbx+rax*8+0x0],al
  40b35f:	add    al,ah
  40b361:	rex.RX add BYTE PTR [rax],r8b
  40b364:	jrcxz  0x40b3ac
  40b366:	add    BYTE PTR [rax],al
  40b368:	pop    rsp
  40b369:	ret    
  40b36a:	add    BYTE PTR [rax],al
  40b36c:	lock rex.RX add BYTE PTR [rax],r8b
  40b370:	hlt    
  40b371:	rex.RX add BYTE PTR [rax],r8b
  40b374:	(bad)  
  40b375:	ret    
  40b376:	add    BYTE PTR [rax],al
  40b378:	add    BYTE PTR [rdi+0x0],al
  40b37b:	add    BYTE PTR [rdi+rax*2],al
  40b37e:	add    BYTE PTR [rax],al
  40b380:	fs ret 
  40b382:	add    BYTE PTR [rax],al
  40b384:	adc    BYTE PTR [rdi+0x0],al
  40b387:	add    BYTE PTR [rcx+0x47],dh
  40b38a:	add    BYTE PTR [rax],al
  40b38c:	push   0xffffffff800000c3
  40b391:	rex.RXB add BYTE PTR [r8],r8b
  40b394:	loop   0x40b3de
  40b396:	add    BYTE PTR [rax],al
  40b398:	je     0x40b35d
  40b39a:	add    BYTE PTR [rax],al
  40b39c:	lock rex.W add BYTE PTR [rax],al
  40b3a0:	jmp    0xffffffff8840b3f0
  40b3a5:	ret    
  40b3a6:	add    BYTE PTR [rax],al
  40b3a8:	lock rex.WXB add BYTE PTR [r8],al
  40b3ac:	xchg   esi,eax
  40b3ad:	rex.WRB add BYTE PTR [r8],r8b
  40b3b0:	movabs al,ds:0x8c00004da00000c3
  40b3b9:	rex.WRX add BYTE PTR [rax],r8b
  40b3bc:	test   al,0xc3
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	nop
  40b3c1:	rex.WRX add BYTE PTR [rax],r8b
  40b3c4:	rex.W push rax
  40b3c6:	add    BYTE PTR [rax],al
  40b3c8:	mov    eax,0x500000c3
  40b3cd:	push   rax
  40b3ce:	add    BYTE PTR [rax],al
  40b3d0:	mov    ebp,0xc0000050
  40b3d5:	ret    
  40b3d6:	add    BYTE PTR [rax],al
  40b3d8:	rcl    BYTE PTR [rax+0x0],0x0
  40b3dc:	(bad)  
  40b3dd:	push   rcx
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	rol    bl,1
  40b3e2:	add    BYTE PTR [rax],al
  40b3e4:	rex push rcx
  40b3e6:	add    BYTE PTR [rax],al
  40b3e8:	fist   WORD PTR [rcx+0x0]
  40b3eb:	add    ah,bl
  40b3ed:	ret    
  40b3ee:	add    BYTE PTR [rax],al
  40b3f0:	loopne 0x40b443
  40b3f2:	add    BYTE PTR [rax],al
  40b3f4:	mov    edx,0xe4000052
  40b3f9:	ret    
  40b3fa:	add    BYTE PTR [rax],al
  40b3fc:	rcl    BYTE PTR [rdx+0x0],0x0
  40b400:	fist   WORD PTR [rdx+0x0]
  40b403:	add    ah,ch
  40b405:	ret    
  40b406:	add    BYTE PTR [rax],al
  40b408:	loopne 0x40b45c
  40b40a:	add    BYTE PTR [rax],al
  40b40c:	repnz push rdx
  40b40e:	add    BYTE PTR [rax],al
  40b410:	lock ret 
  40b412:	add    BYTE PTR [rax],al
  40b414:	add    BYTE PTR [rbx+0x0],dl
  40b417:	add    BYTE PTR [rbp+0x53],al
  40b41a:	add    BYTE PTR [rax],al
  40b41c:	hlt    
  40b41d:	ret    
  40b41e:	add    BYTE PTR [rax],al
  40b420:	push   rax
  40b421:	push   rbx
  40b422:	add    BYTE PTR [rax],al
  40b424:	out    dx,al
  40b425:	push   rbx
  40b426:	add    BYTE PTR [rax],al
  40b428:	clc    
  40b429:	ret    
  40b42a:	add    BYTE PTR [rax],al
  40b42c:	lock push rbx
  40b42e:	add    BYTE PTR [rax],al
  40b430:	xor    edx,DWORD PTR [rax+rax*1+0x0]
  40b434:	add    al,0xc4
  40b436:	add    BYTE PTR [rax],al
  40b438:	rex push rsp
  40b43a:	add    BYTE PTR [rax],al
  40b43c:	jnp    0x40b492
  40b43e:	add    BYTE PTR [rax],al
  40b440:	adc    ah,al
  40b442:	add    BYTE PTR [rax],al
  40b444:	adc    BYTE PTR [rax+rax*1+0x0],0xe
  40b449:	push   rbp
  40b44a:	add    BYTE PTR [rax],al
  40b44c:	sbb    ah,al
  40b44e:	add    BYTE PTR [rax],al
  40b450:	adc    BYTE PTR [rbp+0x0],dl
  40b453:	add    BYTE PTR [rax+0x55],cl
  40b456:	add    BYTE PTR [rax],al
  40b458:	and    al,0xc4
  40b45a:	add    BYTE PTR [rax],al
  40b45c:	push   rax
  40b45d:	push   rbp
  40b45e:	add    BYTE PTR [rax],al
  40b460:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40b461:	push   rbp
  40b462:	add    BYTE PTR [rax],al
  40b464:	xor    ah,al
  40b466:	add    BYTE PTR [rax],al
  40b468:	mov    al,0x55
  40b46a:	add    BYTE PTR [rax],al
  40b46c:	pop    rsi
  40b46d:	push   rsi
  40b46e:	add    BYTE PTR [rax],al
  40b470:	cmp    al,0xc4
  40b472:	add    BYTE PTR [rax],al
  40b474:	adc    BYTE PTR [rax+0x0],bl
  40b477:	add    BYTE PTR [rax],bl
  40b479:	pop    rax
  40b47a:	add    BYTE PTR [rax],al
  40b47c:	rex.WR (bad) 
  40b47e:	add    BYTE PTR [rax],al
  40b480:	and    BYTE PTR [rax+0x0],bl
  40b483:	add    BYTE PTR [rbx],ch
  40b485:	pop    rax
  40b486:	add    BYTE PTR [rax],al
  40b488:	push   rax
  40b489:	(bad)  
  40b48a:	add    BYTE PTR [rax],al
  40b48c:	add    BYTE PTR [rcx+0x0],bl
  40b48f:	add    BYTE PTR [rdi],bh
  40b491:	data16 add BYTE PTR [rax],al
  40b494:	rex.R rol DWORD PTR [rax],0x0

Disassembly of section .xdata:

000000000040c000 <.xdata>:
  40c000:	add    DWORD PTR [rax],eax
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    DWORD PTR [rcx+rax*1],eax
  40c007:	add    BYTE PTR [rdx+rax*2],al
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	add    DWORD PTR [rcx+rax*1],eax
  40c00f:	add    BYTE PTR [rdx+riz*2],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	add    DWORD PTR [rdi],ecx
  40c016:	or     BYTE PTR [rax],al
  40c018:	lgdt   [rbx]
  40c01b:	add    BYTE PTR [rax],cl
  40c01d:	xor    BYTE PTR [rdi],al
  40c01f:	(bad)  
  40c020:	(bad)  
  40c021:	jo     0x40c028
  40c023:	push   rax
  40c024:	add    al,0xc0
  40c026:	add    dl,al
  40c028:	or     DWORD PTR [rcx+rax*1],eax
  40c02b:	add    BYTE PTR [rdx+rax*2],al
  40c02e:	add    BYTE PTR [rax],al
  40c030:	or     BYTE PTR [rax+0x0],bl
  40c033:	add    BYTE PTR [rcx],al
  40c035:	add    BYTE PTR [rax],al
  40c037:	add    ah,dl
  40c039:	adc    al,0x0
  40c03b:	add    ah,ch
  40c03d:	adc    al,0x0
  40c03f:	add    BYTE PTR [rax-0x13ffffb2],dl
  40c045:	adc    al,0x0
  40c047:	add    BYTE PTR [rcx],cl
  40c049:	add    al,0x1
  40c04b:	add    BYTE PTR [rdx+rax*2],al
  40c04e:	add    BYTE PTR [rax],al
  40c050:	or     BYTE PTR [rax+0x0],bl
  40c053:	add    BYTE PTR [rcx],al
  40c055:	add    BYTE PTR [rax],al
  40c057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40c05e:	add    BYTE PTR [rax],al
  40c060:	nop
  40c061:	rex.WRX add BYTE PTR [rax],r8b
  40c064:	sbb    al,0x15
  40c066:	add    BYTE PTR [rax],al
  40c068:	add    DWORD PTR [rsi],eax
  40c06a:	add    eax,DWORD PTR [rax]
  40c06c:	(bad)  
  40c06d:	rex.X add sil,BYTE PTR [rax]
  40c070:	add    DWORD PTR [rax+0x0],esp
  40c073:	add    BYTE PTR [rcx],al
  40c075:	or     BYTE PTR [rip+0x4a20800],al        # 0x4e2c87b
  40c07b:	xor    BYTE PTR [rbx],al
  40c07d:	(bad)  
  40c07e:	add    dh,BYTE PTR [rax+0x1]
  40c081:	push   rax
  40c082:	add    BYTE PTR [rax],al
  40c084:	add    DWORD PTR [rax],ecx
  40c086:	add    eax,0x4a20800
  40c08b:	xor    BYTE PTR [rbx],al
  40c08d:	(bad)  
  40c08e:	add    dh,BYTE PTR [rax+0x1]
  40c091:	push   rax
  40c092:	add    BYTE PTR [rax],al
  40c094:	add    DWORD PTR [rax],edx
  40c096:	or     DWORD PTR [rax],eax
  40c098:	adc    BYTE PTR [rdx+0x600b300c],ah
  40c09e:	or     dh,BYTE PTR [rax+0x9]
  40c0a1:	push   rax
  40c0a2:	or     al,al
  40c0a4:	(bad)  
  40c0a5:	rol    BYTE PTR [rax+riz*8],1
  40c0a8:	add    dh,al
  40c0aa:	add    BYTE PTR [rax],al
  40c0ac:	add    DWORD PTR [rax],edx
  40c0ae:	or     DWORD PTR [rax],eax
  40c0b0:	adc    BYTE PTR [rdx+0x600b300c],ah
  40c0b6:	or     dh,BYTE PTR [rax+0x9]
  40c0b9:	push   rax
  40c0ba:	or     al,al
  40c0bc:	(bad)  
  40c0bd:	rol    BYTE PTR [rax+riz*8],1
  40c0c0:	add    dh,al
  40c0c2:	add    BYTE PTR [rax],al
  40c0c4:	add    DWORD PTR [rax],edx
  40c0c6:	or     DWORD PTR [rax],eax
  40c0c8:	adc    BYTE PTR [rdx+0x600b300c],al
  40c0ce:	or     dh,BYTE PTR [rax+0x9]
  40c0d1:	push   rax
  40c0d2:	or     al,al
  40c0d4:	(bad)  
  40c0d5:	rol    BYTE PTR [rax+riz*8],1
  40c0d8:	add    dh,al
  40c0da:	add    BYTE PTR [rax],al
  40c0dc:	add    DWORD PTR [rax],ecx
  40c0de:	add    eax,0x4420800
  40c0e3:	xor    BYTE PTR [rbx],al
  40c0e5:	(bad)  
  40c0e6:	add    dh,BYTE PTR [rax+0x1]
  40c0e9:	push   rax
  40c0ea:	add    BYTE PTR [rax],al
  40c0ec:	add    DWORD PTR [rdi],eax
  40c0ee:	add    al,0x0
  40c0f0:	(bad)  
  40c0f1:	xor    al,BYTE PTR [rbx]
  40c0f3:	xor    BYTE PTR [rdx],al
  40c0f5:	(bad)  
  40c0f6:	add    DWORD PTR [rax+0x1],esi
  40c0f9:	(bad)  
  40c0fa:	add    eax,DWORD PTR [rax]
  40c0fc:	(bad)  
  40c0fd:	(bad)  
  40c0ff:	xor    BYTE PTR [rcx],al
  40c101:	(bad)  
  40c102:	add    BYTE PTR [rax],al
  40c104:	add    DWORD PTR [rsi],eax
  40c106:	add    eax,DWORD PTR [rax]
  40c108:	(bad)  
  40c109:	(bad)  
  40c10b:	xor    BYTE PTR [rcx],al
  40c10d:	(bad)  
  40c10e:	add    BYTE PTR [rax],al
  40c110:	add    DWORD PTR [rdi],eax
  40c112:	add    al,0x0
  40c114:	(bad)  
  40c115:	push   rdx
  40c116:	add    esi,DWORD PTR [rax]
  40c118:	add    ah,BYTE PTR [rax+0x1]
  40c11b:	jo     0x40c11e
  40c11d:	sbb    DWORD PTR [rdx],ecx
  40c11f:	add    BYTE PTR [rcx],bl
  40c121:	add    DWORD PTR [rip+0x10301106],edx        # 0x1070d22d
  40c127:	(bad)  
  40c128:	pshufw mm1,QWORD PTR [rsi],0x50
  40c12c:	or     eax,0x4d00bc0
  40c131:	loopne 0x40c135
  40c133:	lock add DWORD PTR [rip+0x32050002],eax        # 0x3245c13c
  40c13a:	add    DWORD PTR [rax],esi
  40c13c:	add    DWORD PTR [rdx],eax
  40c13e:	add    al,BYTE PTR [rax]
  40c140:	add    dh,BYTE PTR [rax]
  40c142:	add    DWORD PTR [rax+0x1],esp
  40c145:	adc    ecx,DWORD PTR [rdx]
  40c147:	add    BYTE PTR [rbx],dl
  40c149:	add    DWORD PTR [rdi],edx
  40c14b:	add    BYTE PTR [rax+rsi*1],cl
  40c14e:	or     esp,DWORD PTR [rax+0xa]
  40c151:	jo     0x40c15c
  40c153:	push   rax
  40c154:	or     al,al
  40c156:	(bad)  
  40c157:	rol    BYTE PTR [rax+riz*8],1
  40c15a:	add    dh,al
  40c15c:	add    DWORD PTR [rdi],eax
  40c15e:	add    al,0x0
  40c160:	(bad)  
  40c161:	xor    al,BYTE PTR [rbx]
  40c163:	xor    BYTE PTR [rdx],al
  40c165:	(bad)  
  40c166:	add    DWORD PTR [rax+0x1],esi
  40c169:	or     al,0x7
  40c16b:	add    BYTE PTR [rdx+rax*2],cl
  40c16e:	or     BYTE PTR [rax],dh
  40c170:	(bad)  
  40c171:	(bad)  
  40c172:	(bad)  
  40c173:	jo     0x40c17a
  40c175:	push   rax
  40c176:	add    al,0xc0
  40c178:	add    dl,al
  40c17a:	add    BYTE PTR [rax],al
  40c17c:	add    DWORD PTR [rcx+rax*1],eax
  40c17f:	add    BYTE PTR [rdx+rax*2],al
  40c182:	add    BYTE PTR [rax],al
  40c184:	add    DWORD PTR [rsi],eax
  40c186:	add    eax,DWORD PTR [rax]
  40c188:	(bad)  
  40c189:	rex.X add sil,BYTE PTR [rax]
  40c18c:	add    DWORD PTR [rax+0x0],esp
  40c18f:	add    BYTE PTR [rcx],al
  40c191:	add    eax,0x72050002
  40c196:	add    DWORD PTR [rax],esi
  40c198:	add    DWORD PTR [rcx+rax*1],eax
  40c19b:	add    BYTE PTR [rdx+rax*2],al
  40c19e:	add    BYTE PTR [rax],al
  40c1a0:	add    DWORD PTR [rcx+rax*1],eax
  40c1a3:	add    BYTE PTR [rdx+rax*2],al
  40c1a6:	add    BYTE PTR [rax],al
  40c1a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c1b0
  40c1ae:	add    DWORD PTR [rax],esi
  40c1b0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c1b8
  40c1b6:	add    DWORD PTR [rax],esi
  40c1b8:	add    DWORD PTR [rsi],eax
  40c1ba:	add    eax,DWORD PTR [rax]
  40c1bc:	(bad)  
  40c1bd:	rex.X add sil,BYTE PTR [rax]
  40c1c0:	add    DWORD PTR [rax+0x0],esp
  40c1c3:	add    BYTE PTR [rcx],al
  40c1c5:	add    eax,0x32050002
  40c1ca:	add    DWORD PTR [rax],esi
  40c1cc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c1d4
  40c1d2:	add    DWORD PTR [rax],esi
  40c1d4:	add    DWORD PTR [rdx],ecx
  40c1d6:	(bad)  
  40c1d7:	add    BYTE PTR [rdx],cl
  40c1d9:	xor    al,BYTE PTR [rsi]
  40c1db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c641
  40c1e1:	push   rax
  40c1e2:	add    al,al
  40c1e4:	add    DWORD PTR [rdx],ecx
  40c1e6:	(bad)  
  40c1e7:	add    BYTE PTR [rdx],cl
  40c1e9:	push   rdx
  40c1ea:	(bad)  
  40c1eb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c651
  40c1f1:	push   rax
  40c1f2:	add    al,al
  40c1f4:	add    DWORD PTR [rdi+rax*1],ecx
  40c1f7:	add    BYTE PTR [rdx+riz*2],cl
  40c1fa:	or     BYTE PTR [rax],dh
  40c1fc:	(bad)  
  40c1fd:	(bad)  
  40c1fe:	(bad)  
  40c1ff:	jo     0x40c206
  40c201:	push   rax
  40c202:	add    al,0xc0
  40c204:	add    dl,al
  40c206:	add    BYTE PTR [rax],al
  40c208:	add    DWORD PTR [rdi],eax
  40c20a:	add    al,0x0
  40c20c:	(bad)  
  40c20d:	xor    al,BYTE PTR [rbx]
  40c20f:	xor    BYTE PTR [rdx],al
  40c211:	(bad)  
  40c212:	add    DWORD PTR [rax+0x1],esi
  40c215:	(bad)  
  40c216:	add    eax,DWORD PTR [rax]
  40c218:	(bad)  
  40c219:	(bad)  
  40c21b:	xor    BYTE PTR [rcx],al
  40c21d:	(bad)  
  40c21e:	add    BYTE PTR [rax],al
  40c220:	add    DWORD PTR [rcx+rax*1],eax
  40c223:	add    BYTE PTR [rdx+riz*2],al
  40c226:	add    BYTE PTR [rax],al
  40c228:	add    DWORD PTR [rsi],eax
  40c22a:	add    eax,DWORD PTR [rax]
  40c22c:	(bad)  
  40c22d:	rex.X add sil,BYTE PTR [rax]
  40c230:	add    DWORD PTR [rax+0x0],esp
  40c233:	add    BYTE PTR [rcx],al
  40c235:	(bad)  
  40c236:	add    eax,DWORD PTR [rax]
  40c238:	(bad)  
  40c239:	rex.X add sil,BYTE PTR [rax]
  40c23c:	add    DWORD PTR [rax+0x0],esp
  40c23f:	add    BYTE PTR [rcx],al
  40c241:	add    eax,0x32050002
  40c246:	add    DWORD PTR [rax],esi
  40c248:	add    DWORD PTR [rsi],eax
  40c24a:	add    eax,DWORD PTR [rax]
  40c24c:	(bad)  
  40c24d:	rex.X add sil,BYTE PTR [rax]
  40c250:	add    DWORD PTR [rax+0x0],esp
  40c253:	add    BYTE PTR [rcx],al
  40c255:	(bad)  
  40c256:	add    eax,DWORD PTR [rax]
  40c258:	(bad)  
  40c259:	rex.X add sil,BYTE PTR [rax]
  40c25c:	add    DWORD PTR [rax+0x0],esp
  40c25f:	add    BYTE PTR [rcx],al
  40c261:	or     BYTE PTR [rip+0x4420800],al        # 0x482ca67
  40c267:	xor    BYTE PTR [rbx],al
  40c269:	(bad)  
  40c26a:	add    dh,BYTE PTR [rax+0x1]
  40c26d:	push   rax
  40c26e:	add    BYTE PTR [rax],al
  40c270:	add    DWORD PTR [rdi],eax
  40c272:	add    al,0x0
  40c274:	(bad)  
  40c275:	xor    al,BYTE PTR [rbx]
  40c277:	xor    BYTE PTR [rdx],al
  40c279:	(bad)  
  40c27a:	add    DWORD PTR [rax+0x1],esi
  40c27d:	add    BYTE PTR [rax],al
  40c27f:	add    BYTE PTR [rcx],al
  40c281:	add    BYTE PTR [rax],al
  40c283:	add    BYTE PTR [rcx],al
  40c285:	add    eax,0x32050002
  40c28a:	add    DWORD PTR [rax],esi
  40c28c:	add    DWORD PTR [rax],eax
  40c28e:	add    BYTE PTR [rax],al
  40c290:	add    DWORD PTR [rax],eax
  40c292:	add    BYTE PTR [rax],al
  40c294:	add    DWORD PTR [rcx+rax*1],eax
  40c297:	add    BYTE PTR [rdx+rax*2],al
  40c29a:	add    BYTE PTR [rax],al
  40c29c:	add    DWORD PTR [rcx+rax*1],eax
  40c29f:	add    BYTE PTR [rdx+rax*2],al
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	add    DWORD PTR [rax],eax
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	add    DWORD PTR [rax],eax
  40c2aa:	add    BYTE PTR [rax],al
  40c2ac:	add    DWORD PTR [rcx+rax*1],eax
  40c2af:	add    BYTE PTR [rdx+rax*2],al
  40c2b2:	add    BYTE PTR [rax],al
  40c2b4:	add    DWORD PTR [rcx+rax*1],eax
  40c2b7:	add    BYTE PTR [rdx+rax*2],al
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	add    DWORD PTR [rsi],ecx
  40c2be:	or     BYTE PTR [rax],al
  40c2c0:	(bad)  
  40c2c1:	repnz or dh,BYTE PTR [rax]
  40c2c4:	or     DWORD PTR [rax+0x8],esp
  40c2c7:	jo     0x40c2d0
  40c2c9:	push   rax
  40c2ca:	(bad)  
  40c2cb:	rol    BYTE PTR [rax+rdx*8],0x2
  40c2cf:	loopne 0x40c2d2
  40c2d1:	add    eax,0x52050002
  40c2d6:	add    DWORD PTR [rax],esi
  40c2d8:	add    DWORD PTR [rcx+rax*1],eax
  40c2db:	add    BYTE PTR [rdx+rax*2],al
  40c2de:	add    BYTE PTR [rax],al
  40c2e0:	add    DWORD PTR [rcx+rax*1],eax
  40c2e3:	add    BYTE PTR [rdx+rax*2],al
  40c2e6:	add    BYTE PTR [rax],al
  40c2e8:	add    DWORD PTR [rsi],eax
  40c2ea:	add    eax,DWORD PTR [rax]
  40c2ec:	(bad)  
  40c2ed:	rex.X add sil,BYTE PTR [rax]
  40c2f0:	add    DWORD PTR [rax+0x0],esp
  40c2f3:	add    BYTE PTR [rcx],al
  40c2f5:	add    BYTE PTR [rax],al
  40c2f7:	add    BYTE PTR [rcx],al
  40c2f9:	add    BYTE PTR [rax],al
  40c2fb:	add    BYTE PTR [rcx],al
  40c2fd:	add    BYTE PTR [rax],al
  40c2ff:	add    BYTE PTR [rcx],al
  40c301:	or     al,BYTE PTR [rsi]
  40c303:	add    BYTE PTR [rdx],cl
  40c305:	jb     0x40c30d
  40c307:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c76d
  40c30d:	push   rax
  40c30e:	add    al,al
  40c310:	add    DWORD PTR [rdx],ecx
  40c312:	add    eax,0x6d20a05
  40c317:	add    eax,DWORD PTR [rbx]
  40c319:	xor    BYTE PTR [rdx],al
  40c31b:	(bad)  
  40c31c:	add    DWORD PTR [rax+0x0],edx
  40c31f:	add    BYTE PTR [rcx],al
  40c321:	add    al,0x1
  40c323:	add    BYTE PTR [rdx+rax*2],al
  40c326:	add    BYTE PTR [rax],al
  40c328:	add    DWORD PTR [rsi],eax
  40c32a:	add    eax,DWORD PTR [rax]
  40c32c:	(bad)  
  40c32d:	rex.X add sil,BYTE PTR [rax]
  40c330:	add    DWORD PTR [rax+0x0],esp
  40c333:	add    BYTE PTR [rcx],al
  40c335:	add    BYTE PTR [rax],al
  40c337:	add    BYTE PTR [rcx],al
  40c339:	add    al,0x1
  40c33b:	add    BYTE PTR [rdx+riz*4],al
  40c33e:	add    BYTE PTR [rax],al
  40c340:	add    DWORD PTR [rax],eax
  40c342:	add    BYTE PTR [rax],al
  40c344:	add    DWORD PTR [rsi],edx
  40c346:	or     DWORD PTR [rax],eax
  40c348:	(bad)  
  40c349:	mov    BYTE PTR [rsi],al
  40c34b:	add    BYTE PTR [rax],dl
  40c34d:	js     0x40c354
  40c34f:	add    BYTE PTR [rbx],cl
  40c351:	push   0xffffffffe2060004
  40c356:	add    dh,BYTE PTR [rax]
  40c358:	add    DWORD PTR [rax+0x0],esp
  40c35b:	add    BYTE PTR [rcx],al
  40c35d:	add    BYTE PTR [rax],al
  40c35f:	add    BYTE PTR [rcx],al
  40c361:	add    BYTE PTR [rax],al
  40c363:	add    BYTE PTR [rcx],al
  40c365:	add    BYTE PTR [rax],al
  40c367:	add    BYTE PTR [rcx],al
  40c369:	(bad)  
  40c36a:	add    eax,DWORD PTR [rax]
  40c36c:	(bad)  
  40c36d:	(bad)  
  40c36f:	xor    BYTE PTR [rcx],al
  40c371:	(bad)  
  40c372:	add    BYTE PTR [rax],al
  40c374:	add    DWORD PTR [rdi+rax*1],ecx
  40c377:	add    BYTE PTR [rdx+riz*4],cl
  40c37a:	or     BYTE PTR [rax],dh
  40c37c:	(bad)  
  40c37d:	(bad)  
  40c37e:	(bad)  
  40c37f:	jo     0x40c386
  40c381:	push   rax
  40c382:	add    al,0xc0
  40c384:	add    dl,al
  40c386:	add    BYTE PTR [rax],al
  40c388:	add    DWORD PTR [rcx],edx
  40c38a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e75a1
  40c390:	or     dh,BYTE PTR [rax]
  40c392:	or     DWORD PTR [rax+0x8],esp
  40c395:	jo     0x40c39e
  40c397:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220c76e
  40c39e:	add    BYTE PTR [rax],al
  40c3a0:	add    DWORD PTR [rcx+rax*1],eax
  40c3a3:	add    BYTE PTR [rdx+rax*2],al
  40c3a6:	add    BYTE PTR [rax],al
  40c3a8:	add    DWORD PTR [rdx],ecx
  40c3aa:	(bad)  
  40c3ab:	add    BYTE PTR [rdx],cl
  40c3ad:	xor    al,BYTE PTR [rsi]
  40c3af:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c815
  40c3b5:	push   rax
  40c3b6:	add    al,al
  40c3b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c3c0
  40c3be:	add    DWORD PTR [rax],esi
  40c3c0:	add    DWORD PTR [rax],ecx
  40c3c2:	add    eax,0x4420800
  40c3c7:	xor    BYTE PTR [rbx],al
  40c3c9:	(bad)  
  40c3ca:	add    dh,BYTE PTR [rax+0x1]
  40c3cd:	push   rax
  40c3ce:	add    BYTE PTR [rax],al
  40c3d0:	add    DWORD PTR [rdi],eax
  40c3d2:	add    al,0x0
  40c3d4:	(bad)  
  40c3d5:	xor    al,BYTE PTR [rbx]
  40c3d7:	xor    BYTE PTR [rdx],al
  40c3d9:	(bad)  
  40c3da:	add    DWORD PTR [rax+0x1],esi
  40c3dd:	add    eax,0x32050002
  40c3e2:	add    DWORD PTR [rax],esi
  40c3e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c3ec
  40c3ea:	add    DWORD PTR [rax],esi
  40c3ec:	add    DWORD PTR [rax],eax
  40c3ee:	add    BYTE PTR [rax],al
  40c3f0:	add    DWORD PTR [rax],eax
  40c3f2:	add    BYTE PTR [rax],al
  40c3f4:	add    DWORD PTR [rax],eax
  40c3f6:	add    BYTE PTR [rax],al
  40c3f8:	add    DWORD PTR [rdi],eax
  40c3fa:	add    al,0x0
  40c3fc:	(bad)  
  40c3fd:	xor    al,BYTE PTR [rbx]
  40c3ff:	xor    BYTE PTR [rdx],al
  40c401:	(bad)  
  40c402:	add    DWORD PTR [rax+0x1],esi
  40c405:	(bad)  
  40c406:	add    eax,DWORD PTR [rax]
  40c408:	(bad)  
  40c409:	rex.X add sil,BYTE PTR [rax]
  40c40c:	add    DWORD PTR [rax+0x0],esp
  40c40f:	add    BYTE PTR [rcx],al
  40c411:	add    eax,0x32050002
  40c416:	add    DWORD PTR [rax],esi
  40c418:	add    DWORD PTR [rdi],eax
  40c41a:	add    al,0x0
  40c41c:	(bad)  
  40c41d:	xor    al,BYTE PTR [rbx]
  40c41f:	xor    BYTE PTR [rdx],al
  40c421:	(bad)  
  40c422:	add    DWORD PTR [rax+0x1],esi
  40c425:	(bad)  
  40c426:	add    eax,DWORD PTR [rax]
  40c428:	(bad)  
  40c429:	rex.X add sil,BYTE PTR [rax]
  40c42c:	add    DWORD PTR [rax+0x0],esp
  40c42f:	add    BYTE PTR [rcx],al
  40c431:	(bad)  
  40c432:	add    eax,DWORD PTR [rax]
  40c434:	(bad)  
  40c435:	rex.X add sil,BYTE PTR [rax]
  40c438:	add    DWORD PTR [rax+0x0],esp
  40c43b:	add    BYTE PTR [rcx],al
  40c43d:	or     BYTE PTR [rip+0x4420800],al        # 0x482cc43
  40c443:	xor    BYTE PTR [rbx],al
  40c445:	(bad)  
  40c446:	add    dh,BYTE PTR [rax+0x1]
  40c449:	push   rax
  40c44a:	add    BYTE PTR [rax],al
  40c44c:	add    DWORD PTR [rax],eax
  40c44e:	add    BYTE PTR [rax],al
  40c450:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040d000 <.bss>:
	...

Disassembly of section .idata:

000000000040e000 <.idata>:
  40e000:	push   rax
  40e001:	loopne 0x40e003
	...
  40e00b:	add    BYTE PTR [rax-0x16],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	lock loop 0x40e013
  40e013:	add    BYTE PTR [rax+0xe0],dl
  40e019:	add    BYTE PTR [rax],al
  40e01b:	add    BYTE PTR [rax],al
  40e01d:	add    BYTE PTR [rax],al
  40e01f:	add    ah,al
  40e021:	(bad)  
  40e022:	add    BYTE PTR [rax],al
  40e024:	xor    bl,ah
  40e026:	add    BYTE PTR [rax],al
  40e028:	(bad)  
  40e029:	loope  0x40e02b
	...
  40e033:	add    BYTE PTR [rax+0xeb],bl
  40e039:	in     al,0x0
	...
  40e04f:	add    BYTE PTR [rax+0xe5],dl
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    BYTE PTR [rbp+riz*8+0x0],ah
  40e05e:	add    BYTE PTR [rax],al
  40e060:	mov    esp,0xe5
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    al,cl
  40e069:	in     eax,0x0
  40e06b:	add    BYTE PTR [rax],al
  40e06d:	add    BYTE PTR [rax],al
  40e06f:	add    ah,bl
  40e071:	in     eax,0x0
  40e073:	add    BYTE PTR [rax],al
  40e075:	add    BYTE PTR [rax],al
  40e077:	add    ah,ch
  40e079:	in     eax,0x0
  40e07b:	add    BYTE PTR [rax],al
  40e07d:	add    BYTE PTR [rax],al
  40e07f:	add    ah,bh
  40e081:	in     eax,0x0
	...
  40e08f:	add    BYTE PTR [rsi+riz*8],cl
  40e092:	add    BYTE PTR [rax],al
  40e094:	add    BYTE PTR [rax],al
  40e096:	add    BYTE PTR [rax],al
  40e098:	and    al,0xe6
  40e09a:	add    BYTE PTR [rax],al
  40e09c:	add    BYTE PTR [rax],al
  40e09e:	add    BYTE PTR [rax],al
  40e0a0:	cmp    al,0xe6
  40e0a2:	add    BYTE PTR [rax],al
  40e0a4:	add    BYTE PTR [rax],al
  40e0a6:	add    BYTE PTR [rax],al
  40e0a8:	push   rax
  40e0a9:	out    0x0,al
  40e0ab:	add    BYTE PTR [rax],al
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    BYTE PTR [rsi-0x1a],ah
  40e0b2:	add    BYTE PTR [rax],al
  40e0b4:	add    BYTE PTR [rax],al
  40e0b6:	add    BYTE PTR [rax],al
  40e0b8:	jl     0x40e0a0
  40e0ba:	add    BYTE PTR [rax],al
  40e0bc:	add    BYTE PTR [rax],al
  40e0be:	add    BYTE PTR [rax],al
  40e0c0:	mov    ah,dh
  40e0c2:	add    BYTE PTR [rax],al
  40e0c4:	add    BYTE PTR [rax],al
  40e0c6:	add    BYTE PTR [rax],al
  40e0c8:	(bad)  
  40e0c9:	out    0x0,al
  40e0cb:	add    BYTE PTR [rax],al
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rsi+riz*8+0x0],ch
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	(bad)  
  40e0d9:	out    0x0,al
  40e0db:	add    BYTE PTR [rax],al
  40e0dd:	add    BYTE PTR [rax],al
  40e0df:	add    dh,dl
  40e0e1:	out    0x0,al
  40e0e3:	add    BYTE PTR [rax],al
  40e0e5:	add    BYTE PTR [rax],al
  40e0e7:	add    dl,dh
  40e0e9:	out    0x0,al
  40e0eb:	add    BYTE PTR [rax],al
  40e0ed:	add    BYTE PTR [rax],al
  40e0ef:	add    BYTE PTR [rdx],cl
  40e0f1:	out    0x0,eax
  40e0f3:	add    BYTE PTR [rax],al
  40e0f5:	add    BYTE PTR [rax],al
  40e0f7:	add    BYTE PTR [rdi+riz*8],ah
  40e0fa:	add    BYTE PTR [rax],al
  40e0fc:	add    BYTE PTR [rax],al
  40e0fe:	add    BYTE PTR [rax],al
  40e100:	cmp    ah,bh
  40e102:	add    BYTE PTR [rax],al
  40e104:	add    BYTE PTR [rax],al
  40e106:	add    BYTE PTR [rax],al
  40e108:	rex.WRX out 0x0,eax
  40e10b:	add    BYTE PTR [rax],al
  40e10d:	add    BYTE PTR [rax],al
  40e10f:	add    BYTE PTR [rax-0x19],ch
  40e112:	add    BYTE PTR [rax],al
  40e114:	add    BYTE PTR [rax],al
  40e116:	add    BYTE PTR [rax],al
  40e118:	jl     0x40e101
  40e11a:	add    BYTE PTR [rax],al
  40e11c:	add    BYTE PTR [rax],al
  40e11e:	add    BYTE PTR [rax],al
  40e120:	mov    edi,fs
  40e122:	add    BYTE PTR [rax],al
  40e124:	add    BYTE PTR [rax],al
  40e126:	add    BYTE PTR [rax],al
  40e128:	stos   BYTE PTR es:[rdi],al
  40e129:	out    0x0,eax
  40e12b:	add    BYTE PTR [rax],al
  40e12d:	add    BYTE PTR [rax],al
  40e12f:	add    BYTE PTR [rdx+0xe7],dh
  40e135:	add    BYTE PTR [rax],al
  40e137:	add    dh,al
  40e139:	out    0x0,eax
  40e13b:	add    BYTE PTR [rax],al
  40e13d:	add    BYTE PTR [rax],al
  40e13f:	add    ah,dl
  40e141:	out    0x0,eax
  40e143:	add    BYTE PTR [rax],al
  40e145:	add    BYTE PTR [rax],al
  40e147:	add    al,dh
  40e149:	out    0x0,eax
  40e14b:	add    BYTE PTR [rax],al
  40e14d:	add    BYTE PTR [rax],al
  40e14f:	add    BYTE PTR [rdx],al
  40e151:	call   0x40e156
	...
  40e15e:	add    BYTE PTR [rax],al
  40e160:	adc    ch,al
  40e162:	add    BYTE PTR [rax],al
  40e164:	add    BYTE PTR [rax],al
  40e166:	add    BYTE PTR [rax],al
  40e168:	sub    ch,al
  40e16a:	add    BYTE PTR [rax],al
  40e16c:	add    BYTE PTR [rax],al
  40e16e:	add    BYTE PTR [rax],al
  40e170:	cmp    al,ch
  40e172:	add    BYTE PTR [rax],al
  40e174:	add    BYTE PTR [rax],al
  40e176:	add    BYTE PTR [rax],al
  40e178:	call   0x40e17e
  40e17e:	add    BYTE PTR [rax],al
  40e180:	push   rsp
  40e181:	call   0x40e186
  40e186:	add    BYTE PTR [rax],al
  40e188:	(bad)  
  40e189:	call   0x40e18e
  40e18e:	add    BYTE PTR [rax],al
  40e190:	jb     0x40e17a
  40e192:	add    BYTE PTR [rax],al
  40e194:	add    BYTE PTR [rax],al
  40e196:	add    BYTE PTR [rax],al
  40e198:	test   al,ch
  40e19a:	add    BYTE PTR [rax],al
  40e19c:	add    BYTE PTR [rax],al
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	cwde   
  40e1a1:	call   0x40e1a6
  40e1a6:	add    BYTE PTR [rax],al
  40e1a8:	movabs ds:0xb0000000000000e8,al
  40e1b1:	call   0x40e1b6
  40e1b6:	add    BYTE PTR [rax],al
  40e1b8:	mov    edx,0xe8
  40e1bd:	add    BYTE PTR [rax],al
  40e1bf:	add    ah,al
  40e1c1:	call   0x40e1c6
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	(bad)  
  40e1c9:	call   0x40e1ce
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	fsubr  st,st(0)
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	add    BYTE PTR [rax],al
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	(bad)  
  40e1d9:	call   0x40e1de
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	imul   al
  40e1e2:	add    BYTE PTR [rax],al
  40e1e4:	add    BYTE PTR [rax],al
  40e1e6:	add    BYTE PTR [rax],al
  40e1e8:	(bad)  
  40e1e9:	call   0x40e1ee
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	or     cl,ch
  40e1f2:	add    BYTE PTR [rax],al
  40e1f4:	add    BYTE PTR [rax],al
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	adc    al,0xe9
  40e1fa:	add    BYTE PTR [rax],al
  40e1fc:	add    BYTE PTR [rax],al
  40e1fe:	add    BYTE PTR [rax],al
  40e200:	(bad)  
  40e201:	jmp    0x40e206
  40e206:	add    BYTE PTR [rax],al
  40e208:	es jmp 0x40e20e
  40e20e:	add    BYTE PTR [rax],al
  40e210:	xor    cl,ch
  40e212:	add    BYTE PTR [rax],al
  40e214:	add    BYTE PTR [rax],al
  40e216:	add    BYTE PTR [rax],al
  40e218:	cmp    cl,ch
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	add    BYTE PTR [rax],al
  40e21e:	add    BYTE PTR [rax],al
  40e220:	rex.X jmp 0x40e226
  40e226:	add    BYTE PTR [rax],al
  40e228:	rex.WR jmp 0x40e22e
  40e22e:	add    BYTE PTR [rax],al
  40e230:	push   rsi
  40e231:	jmp    0x40e236
  40e236:	add    BYTE PTR [rax],al
  40e238:	pop    rsi
  40e239:	jmp    0x40e23e
  40e23e:	add    BYTE PTR [rax],al
  40e240:	push   0xe9
  40e245:	add    BYTE PTR [rax],al
  40e247:	add    BYTE PTR [rax-0x17],dh
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	add    BYTE PTR [rax],al
  40e24e:	add    BYTE PTR [rax],al
  40e250:	js     0x40e23b
  40e252:	add    BYTE PTR [rax],al
  40e254:	add    BYTE PTR [rax],al
  40e256:	add    BYTE PTR [rax],al
  40e258:	sub    cl,0x0
  40e25b:	add    BYTE PTR [rax],al
  40e25d:	add    BYTE PTR [rax],al
  40e25f:	add    BYTE PTR [rdx+0xe9],cl
  40e265:	add    BYTE PTR [rax],al
  40e267:	add    BYTE PTR [rcx+rbp*8+0x0],dl
  40e26e:	add    BYTE PTR [rax],al
  40e270:	sahf   
  40e271:	jmp    0x40e276
  40e276:	add    BYTE PTR [rax],al
  40e278:	test   al,0xe9
  40e27a:	add    BYTE PTR [rax],al
  40e27c:	add    BYTE PTR [rax],al
  40e27e:	add    BYTE PTR [rax],al
  40e280:	mov    al,0xe9
  40e282:	add    BYTE PTR [rax],al
  40e284:	add    BYTE PTR [rax],al
  40e286:	add    BYTE PTR [rax],al
  40e288:	mov    eax,0xe9
  40e28d:	add    BYTE PTR [rax],al
  40e28f:	add    dl,al
  40e291:	jmp    0x40e296
  40e296:	add    BYTE PTR [rax],al
  40e298:	(bad)  
  40e299:	jmp    0x40e29e
  40e29e:	add    BYTE PTR [rax],al
  40e2a0:	fsubr  st,st(1)
  40e2a2:	add    BYTE PTR [rax],al
  40e2a4:	add    BYTE PTR [rax],al
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	loop   0x40e293
  40e2aa:	add    BYTE PTR [rax],al
  40e2ac:	add    BYTE PTR [rax],al
  40e2ae:	add    BYTE PTR [rax],al
  40e2b0:	in     al,dx
  40e2b1:	jmp    0x40e2b6
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	clc    
  40e2b9:	jmp    0x40e2be
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	add    ch,dl
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	add    BYTE PTR [rax],al
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	or     al,0xea
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	add    BYTE PTR [rax],al
  40e2ce:	add    BYTE PTR [rax],al
  40e2d0:	(bad)  
  40e2d1:	(bad)  
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	add    BYTE PTR [rax],al
  40e2d6:	add    BYTE PTR [rax],al
  40e2d8:	and    ch,dl
  40e2da:	add    BYTE PTR [rax],al
  40e2dc:	add    BYTE PTR [rax],al
  40e2de:	add    BYTE PTR [rax],al
  40e2e0:	sub    ch,dl
	...
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	nop
  40e2f1:	in     eax,0x0
  40e2f3:	add    BYTE PTR [rax],al
  40e2f5:	add    BYTE PTR [rax],al
  40e2f7:	add    BYTE PTR [rbp+riz*8+0x0],ah
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	mov    esp,0xe5
  40e305:	add    BYTE PTR [rax],al
  40e307:	add    al,cl
  40e309:	in     eax,0x0
  40e30b:	add    BYTE PTR [rax],al
  40e30d:	add    BYTE PTR [rax],al
  40e30f:	add    ah,bl
  40e311:	in     eax,0x0
  40e313:	add    BYTE PTR [rax],al
  40e315:	add    BYTE PTR [rax],al
  40e317:	add    ah,ch
  40e319:	in     eax,0x0
  40e31b:	add    BYTE PTR [rax],al
  40e31d:	add    BYTE PTR [rax],al
  40e31f:	add    ah,bh
  40e321:	in     eax,0x0
	...
  40e32f:	add    BYTE PTR [rsi+riz*8],cl
  40e332:	add    BYTE PTR [rax],al
  40e334:	add    BYTE PTR [rax],al
  40e336:	add    BYTE PTR [rax],al
  40e338:	and    al,0xe6
  40e33a:	add    BYTE PTR [rax],al
  40e33c:	add    BYTE PTR [rax],al
  40e33e:	add    BYTE PTR [rax],al
  40e340:	cmp    al,0xe6
  40e342:	add    BYTE PTR [rax],al
  40e344:	add    BYTE PTR [rax],al
  40e346:	add    BYTE PTR [rax],al
  40e348:	push   rax
  40e349:	out    0x0,al
  40e34b:	add    BYTE PTR [rax],al
  40e34d:	add    BYTE PTR [rax],al
  40e34f:	add    BYTE PTR [rsi-0x1a],ah
  40e352:	add    BYTE PTR [rax],al
  40e354:	add    BYTE PTR [rax],al
  40e356:	add    BYTE PTR [rax],al
  40e358:	jl     0x40e340
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	add    BYTE PTR [rax],al
  40e35e:	add    BYTE PTR [rax],al
  40e360:	mov    ah,dh
  40e362:	add    BYTE PTR [rax],al
  40e364:	add    BYTE PTR [rax],al
  40e366:	add    BYTE PTR [rax],al
  40e368:	(bad)  
  40e369:	out    0x0,al
  40e36b:	add    BYTE PTR [rax],al
  40e36d:	add    BYTE PTR [rax],al
  40e36f:	add    BYTE PTR [rsi+riz*8+0x0],ch
  40e376:	add    BYTE PTR [rax],al
  40e378:	(bad)  
  40e379:	out    0x0,al
  40e37b:	add    BYTE PTR [rax],al
  40e37d:	add    BYTE PTR [rax],al
  40e37f:	add    dh,dl
  40e381:	out    0x0,al
  40e383:	add    BYTE PTR [rax],al
  40e385:	add    BYTE PTR [rax],al
  40e387:	add    dl,dh
  40e389:	out    0x0,al
  40e38b:	add    BYTE PTR [rax],al
  40e38d:	add    BYTE PTR [rax],al
  40e38f:	add    BYTE PTR [rdx],cl
  40e391:	out    0x0,eax
  40e393:	add    BYTE PTR [rax],al
  40e395:	add    BYTE PTR [rax],al
  40e397:	add    BYTE PTR [rdi+riz*8],ah
  40e39a:	add    BYTE PTR [rax],al
  40e39c:	add    BYTE PTR [rax],al
  40e39e:	add    BYTE PTR [rax],al
  40e3a0:	cmp    ah,bh
  40e3a2:	add    BYTE PTR [rax],al
  40e3a4:	add    BYTE PTR [rax],al
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	rex.WRX out 0x0,eax
  40e3ab:	add    BYTE PTR [rax],al
  40e3ad:	add    BYTE PTR [rax],al
  40e3af:	add    BYTE PTR [rax-0x19],ch
  40e3b2:	add    BYTE PTR [rax],al
  40e3b4:	add    BYTE PTR [rax],al
  40e3b6:	add    BYTE PTR [rax],al
  40e3b8:	jl     0x40e3a1
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	add    BYTE PTR [rax],al
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	mov    edi,fs
  40e3c2:	add    BYTE PTR [rax],al
  40e3c4:	add    BYTE PTR [rax],al
  40e3c6:	add    BYTE PTR [rax],al
  40e3c8:	stos   BYTE PTR es:[rdi],al
  40e3c9:	out    0x0,eax
  40e3cb:	add    BYTE PTR [rax],al
  40e3cd:	add    BYTE PTR [rax],al
  40e3cf:	add    BYTE PTR [rdx+0xe7],dh
  40e3d5:	add    BYTE PTR [rax],al
  40e3d7:	add    dh,al
  40e3d9:	out    0x0,eax
  40e3db:	add    BYTE PTR [rax],al
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    ah,dl
  40e3e1:	out    0x0,eax
  40e3e3:	add    BYTE PTR [rax],al
  40e3e5:	add    BYTE PTR [rax],al
  40e3e7:	add    al,dh
  40e3e9:	out    0x0,eax
  40e3eb:	add    BYTE PTR [rax],al
  40e3ed:	add    BYTE PTR [rax],al
  40e3ef:	add    BYTE PTR [rdx],al
  40e3f1:	call   0x40e3f6
	...
  40e3fe:	add    BYTE PTR [rax],al
  40e400:	adc    ch,al
  40e402:	add    BYTE PTR [rax],al
  40e404:	add    BYTE PTR [rax],al
  40e406:	add    BYTE PTR [rax],al
  40e408:	sub    ch,al
  40e40a:	add    BYTE PTR [rax],al
  40e40c:	add    BYTE PTR [rax],al
  40e40e:	add    BYTE PTR [rax],al
  40e410:	cmp    al,ch
  40e412:	add    BYTE PTR [rax],al
  40e414:	add    BYTE PTR [rax],al
  40e416:	add    BYTE PTR [rax],al
  40e418:	call   0x40e41e
  40e41e:	add    BYTE PTR [rax],al
  40e420:	push   rsp
  40e421:	call   0x40e426
  40e426:	add    BYTE PTR [rax],al
  40e428:	(bad)  
  40e429:	call   0x40e42e
  40e42e:	add    BYTE PTR [rax],al
  40e430:	jb     0x40e41a
  40e432:	add    BYTE PTR [rax],al
  40e434:	add    BYTE PTR [rax],al
  40e436:	add    BYTE PTR [rax],al
  40e438:	test   al,ch
  40e43a:	add    BYTE PTR [rax],al
  40e43c:	add    BYTE PTR [rax],al
  40e43e:	add    BYTE PTR [rax],al
  40e440:	cwde   
  40e441:	call   0x40e446
  40e446:	add    BYTE PTR [rax],al
  40e448:	movabs ds:0xb0000000000000e8,al
  40e451:	call   0x40e456
  40e456:	add    BYTE PTR [rax],al
  40e458:	mov    edx,0xe8
  40e45d:	add    BYTE PTR [rax],al
  40e45f:	add    ah,al
  40e461:	call   0x40e466
  40e466:	add    BYTE PTR [rax],al
  40e468:	(bad)  
  40e469:	call   0x40e46e
  40e46e:	add    BYTE PTR [rax],al
  40e470:	fsubr  st,st(0)
  40e472:	add    BYTE PTR [rax],al
  40e474:	add    BYTE PTR [rax],al
  40e476:	add    BYTE PTR [rax],al
  40e478:	(bad)  
  40e479:	call   0x40e47e
  40e47e:	add    BYTE PTR [rax],al
  40e480:	imul   al
  40e482:	add    BYTE PTR [rax],al
  40e484:	add    BYTE PTR [rax],al
  40e486:	add    BYTE PTR [rax],al
  40e488:	(bad)  
  40e489:	call   0x40e48e
  40e48e:	add    BYTE PTR [rax],al
  40e490:	or     cl,ch
  40e492:	add    BYTE PTR [rax],al
  40e494:	add    BYTE PTR [rax],al
  40e496:	add    BYTE PTR [rax],al
  40e498:	adc    al,0xe9
  40e49a:	add    BYTE PTR [rax],al
  40e49c:	add    BYTE PTR [rax],al
  40e49e:	add    BYTE PTR [rax],al
  40e4a0:	(bad)  
  40e4a1:	jmp    0x40e4a6
  40e4a6:	add    BYTE PTR [rax],al
  40e4a8:	es jmp 0x40e4ae
  40e4ae:	add    BYTE PTR [rax],al
  40e4b0:	xor    cl,ch
  40e4b2:	add    BYTE PTR [rax],al
  40e4b4:	add    BYTE PTR [rax],al
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	cmp    cl,ch
  40e4ba:	add    BYTE PTR [rax],al
  40e4bc:	add    BYTE PTR [rax],al
  40e4be:	add    BYTE PTR [rax],al
  40e4c0:	rex.X jmp 0x40e4c6
  40e4c6:	add    BYTE PTR [rax],al
  40e4c8:	rex.WR jmp 0x40e4ce
  40e4ce:	add    BYTE PTR [rax],al
  40e4d0:	push   rsi
  40e4d1:	jmp    0x40e4d6
  40e4d6:	add    BYTE PTR [rax],al
  40e4d8:	pop    rsi
  40e4d9:	jmp    0x40e4de
  40e4de:	add    BYTE PTR [rax],al
  40e4e0:	push   0xe9
  40e4e5:	add    BYTE PTR [rax],al
  40e4e7:	add    BYTE PTR [rax-0x17],dh
  40e4ea:	add    BYTE PTR [rax],al
  40e4ec:	add    BYTE PTR [rax],al
  40e4ee:	add    BYTE PTR [rax],al
  40e4f0:	js     0x40e4db
  40e4f2:	add    BYTE PTR [rax],al
  40e4f4:	add    BYTE PTR [rax],al
  40e4f6:	add    BYTE PTR [rax],al
  40e4f8:	sub    cl,0x0
  40e4fb:	add    BYTE PTR [rax],al
  40e4fd:	add    BYTE PTR [rax],al
  40e4ff:	add    BYTE PTR [rdx+0xe9],cl
  40e505:	add    BYTE PTR [rax],al
  40e507:	add    BYTE PTR [rcx+rbp*8+0x0],dl
  40e50e:	add    BYTE PTR [rax],al
  40e510:	sahf   
  40e511:	jmp    0x40e516
  40e516:	add    BYTE PTR [rax],al
  40e518:	test   al,0xe9
  40e51a:	add    BYTE PTR [rax],al
  40e51c:	add    BYTE PTR [rax],al
  40e51e:	add    BYTE PTR [rax],al
  40e520:	mov    al,0xe9
  40e522:	add    BYTE PTR [rax],al
  40e524:	add    BYTE PTR [rax],al
  40e526:	add    BYTE PTR [rax],al
  40e528:	mov    eax,0xe9
  40e52d:	add    BYTE PTR [rax],al
  40e52f:	add    dl,al
  40e531:	jmp    0x40e536
  40e536:	add    BYTE PTR [rax],al
  40e538:	(bad)  
  40e539:	jmp    0x40e53e
  40e53e:	add    BYTE PTR [rax],al
  40e540:	fsubr  st,st(1)
  40e542:	add    BYTE PTR [rax],al
  40e544:	add    BYTE PTR [rax],al
  40e546:	add    BYTE PTR [rax],al
  40e548:	loop   0x40e533
  40e54a:	add    BYTE PTR [rax],al
  40e54c:	add    BYTE PTR [rax],al
  40e54e:	add    BYTE PTR [rax],al
  40e550:	in     al,dx
  40e551:	jmp    0x40e556
  40e556:	add    BYTE PTR [rax],al
  40e558:	clc    
  40e559:	jmp    0x40e55e
  40e55e:	add    BYTE PTR [rax],al
  40e560:	add    ch,dl
  40e562:	add    BYTE PTR [rax],al
  40e564:	add    BYTE PTR [rax],al
  40e566:	add    BYTE PTR [rax],al
  40e568:	or     al,0xea
  40e56a:	add    BYTE PTR [rax],al
  40e56c:	add    BYTE PTR [rax],al
  40e56e:	add    BYTE PTR [rax],al
  40e570:	(bad)  
  40e571:	(bad)  
  40e572:	add    BYTE PTR [rax],al
  40e574:	add    BYTE PTR [rax],al
  40e576:	add    BYTE PTR [rax],al
  40e578:	and    ch,dl
  40e57a:	add    BYTE PTR [rax],al
  40e57c:	add    BYTE PTR [rax],al
  40e57e:	add    BYTE PTR [rax],al
  40e580:	sub    ch,dl
	...
  40e58e:	add    BYTE PTR [rax],al
  40e590:	add    DWORD PTR [rax],eax
  40e592:	pop    rdi
  40e593:	ins    BYTE PTR es:[rdi],dx
  40e594:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  40e59b:	pop    rdi
  40e59c:	jbe    0x40e603
  40e59e:	jb     0x40e613
  40e5a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x69000400
  40e5a7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e5aa:	jbe    0x40e60b
  40e5ac:	movsxd esp,DWORD PTR [rcx+0x6e]
  40e5af:	outs   dx,DWORD PTR ds:[rsi]
  40e5b0:	outs   dx,BYTE PTR ds:[rsi]
  40e5b1:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
  40e5b8:	add    BYTE PTR [rax],al
  40e5ba:	add    BYTE PTR [rax],al
  40e5bc:	add    eax,0x62696c00
  40e5c1:	imul   esp,DWORD PTR [rbx+0x6f],0x766e
  40e5c8:	(bad)  
  40e5c9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e5cd:	imul   esp,DWORD PTR [rbx+0x6f],0x635f766e
  40e5d4:	ins    BYTE PTR es:[rdi],dx
  40e5d5:	outs   dx,DWORD PTR ds:[rsi]
  40e5d6:	jae    0x40e63d
  40e5d8:	add    BYTE PTR [rax],al
  40e5da:	add    BYTE PTR [rax],al
  40e5dc:	(bad)  
  40e5dd:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e5e1:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  40e5e8:	jo     0x40e64f
  40e5ea:	outs   dx,BYTE PTR ds:[rsi]
  40e5eb:	add    BYTE PTR [rbx],cl
  40e5ed:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40e5f1:	imul   esp,DWORD PTR [rbx+0x6f],0x7463766e
  40e5f8:	ins    BYTE PTR es:[rdi],dx
  40e5f9:	add    BYTE PTR [rax],al
  40e5fb:	add    BYTE PTR [rax+rax*1],cl
  40e5fe:	ins    BYTE PTR es:[rdi],dx
  40e5ff:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  40e606:	ins    BYTE PTR es:[rdi],dx
  40e607:	imul   esi,DWORD PTR [rbx+0x74],0xd80000
  40e60e:	rex.R
  40e60f:	gs ins BYTE PTR es:[rdi],dx
  40e611:	gs je  0x40e679
  40e614:	rex.XB jb 0x40e680
  40e617:	je     0x40e682
  40e619:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e61c:	push   rbx
  40e61d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e622:	outs   dx,BYTE PTR ds:[rsi]
  40e623:	add    al,bh
  40e625:	add    BYTE PTR [rbp+0x6e],al
  40e628:	je     0x40e68f
  40e62a:	jb     0x40e66f
  40e62c:	jb     0x40e697
  40e62e:	je     0x40e699
  40e630:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e633:	push   rbx
  40e634:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e639:	outs   dx,BYTE PTR ds:[rsi]
  40e63a:	add    BYTE PTR [rax],al
  40e63c:	int    0x1
  40e63e:	rex.RXB
  40e63f:	gs je  0x40e685
  40e642:	jne    0x40e6b6
  40e644:	jb     0x40e6ab
  40e646:	outs   dx,BYTE PTR ds:[rsi]
  40e647:	je     0x40e699
  40e649:	jb     0x40e6ba
  40e64b:	movsxd esp,DWORD PTR [rbp+0x73]
  40e64e:	jae    0x40e650
  40e650:	(bad)  
  40e651:	add    DWORD PTR [rdi+0x65],eax
  40e654:	je     0x40e699
  40e656:	jne    0x40e6ca
  40e658:	jb     0x40e6bf
  40e65a:	outs   dx,BYTE PTR ds:[rsi]
  40e65b:	je     0x40e6ad
  40e65d:	jb     0x40e6ce
  40e65f:	movsxd esp,DWORD PTR [rbp+0x73]
  40e662:	jae    0x40e6ad
  40e664:	fs add dl,dl
  40e667:	add    DWORD PTR [rdi+0x65],eax
  40e66a:	je     0x40e6af
  40e66c:	jne    0x40e6e0
  40e66e:	jb     0x40e6d5
  40e670:	outs   dx,BYTE PTR ds:[rsi]
  40e671:	je     0x40e6c7
  40e673:	push   0x64616572
  40e678:	rex.WB
  40e679:	add    BYTE PTR fs:[rax],al
  40e67c:	add    al,BYTE PTR [rdx]
  40e67e:	rex.RXB
  40e67f:	gs je  0x40e6c8
  40e682:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  40e68a:	adc    BYTE PTR [rdx],al
  40e68c:	rex.RXB
  40e68d:	gs je  0x40e6dc
  40e690:	(bad)  
  40e691:	jae    0x40e707
  40e693:	rex.RB jb 0x40e708
  40e696:	outs   dx,DWORD PTR ds:[rsi]
  40e697:	jb     0x40e699
  40e699:	add    BYTE PTR [rbx+0x2],dh
  40e69c:	rex.RXB
  40e69d:	gs je  0x40e6f3
  40e6a0:	je     0x40e703
  40e6a2:	jb     0x40e718
  40e6a4:	jne    0x40e716
  40e6a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e6a8:	outs   dx,WORD PTR ds:[rsi]
  40e6aa:	add    BYTE PTR [r10+0x74654702],cl
  40e6b1:	push   rbx
  40e6b2:	jns    0x40e727
  40e6b4:	je     0x40e71b
  40e6b6:	ins    DWORD PTR es:[rdi],dx
  40e6b7:	push   rsp
  40e6b8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40e6bf:	ins    BYTE PTR es:[rdi],dx
  40e6c0:	gs push rsp
  40e6c2:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40e6c9:	gs je  0x40e720
  40e6cc:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40e6d3:	je     0x40e6d5
  40e6d5:	add    cl,bh
  40e6d7:	add    cl,BYTE PTR [rcx+0x6e]
  40e6da:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e6e2:	rex.XB jb 0x40e74e
  40e6e5:	je     0x40e750
  40e6e7:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e6ea:	push   rbx
  40e6eb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e6f0:	outs   dx,BYTE PTR ds:[rsi]
  40e6f1:	add    BYTE PTR [rbx+0x3],cl
  40e6f4:	rex.WR
  40e6f5:	gs (bad) 
  40e6f7:	jbe    0x40e75e
  40e6f9:	rex.XB jb 0x40e765
  40e6fc:	je     0x40e767
  40e6fe:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e701:	push   rbx
  40e702:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e707:	outs   dx,BYTE PTR ds:[rsi]
  40e708:	add    BYTE PTR [rax],al
  40e70a:	mov    ebx,0x65755103
  40e70f:	jb     0x40e78a
  40e711:	push   rax
  40e712:	gs jb  0x40e77b
  40e715:	outs   dx,DWORD PTR ds:[rsi]
  40e716:	jb     0x40e785
  40e718:	(bad)  
  40e719:	outs   dx,BYTE PTR ds:[rsi]
  40e71a:	movsxd esp,DWORD PTR [rbp+0x43]
  40e71d:	outs   dx,DWORD PTR ds:[rsi]
  40e71e:	jne    0x40e78e
  40e720:	je     0x40e787
  40e722:	jb     0x40e724
  40e724:	add    DWORD PTR [rdx+rdx*2],eax
  40e727:	je     0x40e795
  40e729:	rex.B
  40e72a:	fs fs rex.RX jne 0x40e79d
  40e72f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e733:	outs   dx,BYTE PTR ds:[rsi]
  40e734:	push   rsp
  40e735:	(bad)  
  40e736:	(bad)  
  40e737:	ins    BYTE PTR es:[rdi],dx
  40e738:	add    BYTE PTR gs:[rdx],al
  40e73b:	add    al,0x52
  40e73d:	je     0x40e7ab
  40e73f:	rex.XB (bad) 
  40e741:	jo     0x40e7b7
  40e743:	jne    0x40e7b7
  40e745:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40e748:	outs   dx,BYTE PTR ds:[rsi]
  40e749:	je     0x40e7b0
  40e74b:	js     0x40e7c1
  40e74d:	add    BYTE PTR [rcx],cl
  40e74f:	add    al,0x52
  40e751:	je     0x40e7bf
  40e753:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e755:	outs   dx,DWORD PTR ds:[rsi]
  40e756:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40e75a:	jne    0x40e7ca
  40e75c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e760:	outs   dx,BYTE PTR ds:[rsi]
  40e761:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e763:	je     0x40e7d7
  40e765:	jns    0x40e767
  40e767:	add    BYTE PTR [rax],dl
  40e769:	add    al,0x52
  40e76b:	je     0x40e7d9
  40e76d:	push   rsi
  40e76e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40e775:	outs   dx,BYTE PTR ds:[rsi]
  40e776:	ja     0x40e7e1
  40e778:	outs   dx,BYTE PTR ds:[rsi]
  40e779:	add    BYTE PTR fs:[rax],al
  40e77c:	ins    BYTE PTR es:[rdi],dx
  40e77d:	add    al,0x53
  40e77f:	gs je  0x40e7ce
  40e782:	(bad)  
  40e783:	jae    0x40e7f9
  40e785:	rex.RB jb 0x40e7fa
  40e788:	outs   dx,DWORD PTR ds:[rsi]
  40e789:	jb     0x40e78b
  40e78b:	add    BYTE PTR [rdi+0x74655304],bl
  40e791:	push   rbp
  40e792:	outs   dx,BYTE PTR ds:[rsi]
  40e793:	push   0x6c646e61
  40e798:	gs fs rex.RB js 0x40e800
  40e79d:	gs jo  0x40e814
  40e7a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e7a7:	gs jb  0x40e7aa
  40e7aa:	lods   al,BYTE PTR ds:[rsi]
  40e7ab:	add    al,0x53
  40e7ad:	ins    BYTE PTR es:[rdi],dx
  40e7ae:	gs gs jo 0x40e7b2
  40e7b2:	mov    edx,0x72655404
  40e7b7:	ins    DWORD PTR es:[rdi],dx
  40e7b8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40e7bf:	outs   dx,DWORD PTR ds:[rsi]
  40e7c0:	movsxd esp,DWORD PTR [rbp+0x73]
  40e7c3:	jae    0x40e7c5
  40e7c5:	add    cl,al
  40e7c7:	add    al,0x54
  40e7c9:	ins    BYTE PTR es:[rdi],dx
  40e7ca:	jae    0x40e813
  40e7cc:	gs je  0x40e825
  40e7cf:	(bad)  
  40e7d0:	ins    BYTE PTR es:[rdi],dx
  40e7d1:	jne    0x40e838
  40e7d3:	add    dh,cl
  40e7d5:	add    al,0x55
  40e7d7:	outs   dx,BYTE PTR ds:[rsi]
  40e7d8:	push   0x6c646e61
  40e7dd:	gs fs rex.RB js 0x40e845
  40e7e2:	gs jo  0x40e859
  40e7e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e7ec:	gs jb  0x40e7ef
  40e7ef:	add    ah,ch
  40e7f1:	add    al,0x56
  40e7f3:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40e7fa:	jb     0x40e86b
  40e7fc:	je     0x40e863
  40e7fe:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40e802:	out    dx,al
  40e803:	add    al,0x56
  40e805:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40e80c:	jne    0x40e873
  40e80e:	jb     0x40e889
  40e810:	add    BYTE PTR [rax],al
  40e812:	(bad)  
  40e813:	add    BYTE PTR [rdi+0x5f],bl
  40e816:	rex.XB pop r15
  40e818:	jae    0x40e88a
  40e81a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40e81e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40e825:	ins    BYTE PTR es:[rdi],dx
  40e826:	gs jb  0x40e829
  40e829:	add    BYTE PTR [rsi+0x0],cl
  40e82c:	pop    rdi
  40e82d:	pop    rdi
  40e82e:	fs ins BYTE PTR es:[rdi],dx
  40e830:	ins    BYTE PTR es:[rdi],dx
  40e831:	outs   dx,DWORD PTR ds:[rsi]
  40e832:	outs   dx,BYTE PTR ds:[rsi]
  40e833:	gs js  0x40e89f
  40e836:	je     0x40e838
  40e838:	push   rcx
  40e839:	add    BYTE PTR [rdi+0x5f],bl
  40e83c:	addr32 gs je 0x40e8ad
  40e840:	(bad)  
  40e841:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40e848:	push   rdx
  40e849:	add    BYTE PTR [rdi+0x5f],bl
  40e84c:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40e853:	add    BYTE PTR [rbx+0x0],dl
  40e856:	pop    rdi
  40e857:	pop    rdi
  40e858:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40e85f:	movsxd eax,DWORD PTR [rax]
  40e861:	add    BYTE PTR [rdx+0x0],bl
  40e864:	pop    rdi
  40e865:	pop    rdi
  40e866:	ins    BYTE PTR es:[rdi],dx
  40e867:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e86a:	jbe    0x40e8cb
  40e86c:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40e873:	add    BYTE PTR [rdi+0x5f],bl
  40e876:	jae    0x40e8dd
  40e878:	je     0x40e8d9
  40e87a:	(bad)  
  40e87b:	jo     0x40e8ed
  40e87d:	pop    rdi
  40e87e:	je     0x40e8f9
  40e880:	jo     0x40e8e7
  40e882:	add    BYTE PTR [rax],al
  40e884:	(bad)  
  40e885:	add    BYTE PTR [rdi+0x5f],bl
  40e888:	jae    0x40e8ef
  40e88a:	je     0x40e901
  40e88c:	jae    0x40e8f3
  40e88e:	jb     0x40e8fd
  40e890:	(bad)  
  40e891:	je     0x40e8fb
  40e893:	gs jb  0x40e908
  40e896:	add    BYTE PTR [rax],al
  40e898:	jno    0x40e89a
  40e89a:	pop    rdi
  40e89b:	(bad)  
  40e89c:	movsxd ebp,DWORD PTR [rbp+0x64]
  40e89f:	ins    BYTE PTR es:[rdi],dx
  40e8a0:	outs   dx,BYTE PTR ds:[rsi]
  40e8a1:	add    BYTE PTR [rax+0x0],bh
  40e8a4:	pop    rdi
  40e8a5:	(bad)  
  40e8a6:	ins    DWORD PTR es:[rdi],dx
  40e8a7:	jae    0x40e910
  40e8a9:	pop    rdi
  40e8aa:	gs js  0x40e916
  40e8ad:	je     0x40e8af
  40e8af:	add    BYTE PTR [rdx+0x65635f00],cl
  40e8b5:	js     0x40e920
  40e8b7:	je     0x40e8b9
  40e8b9:	add    BYTE PTR [rdx+0x72655f00],bh
  40e8bf:	jb     0x40e92f
  40e8c1:	outs   dx,DWORD PTR ds:[rsi]
  40e8c2:	add    BYTE PTR [rax],al
  40e8c4:	iret   
  40e8c5:	add    BYTE PTR [rdi+0x66],bl
  40e8c8:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0xda006f
  40e8d0:	pop    rdi
  40e8d1:	ins    WORD PTR es:[rdi],dx
  40e8d3:	outs   dx,DWORD PTR ds:[rsi]
  40e8d4:	fs add BYTE PTR gs:[rax],al
  40e8d8:	cli    
  40e8d9:	add    BYTE PTR [rdi+0x67],bl
  40e8dc:	gs je  0x40e93e
  40e8df:	outs   dx,DWORD PTR ds:[rsi]
  40e8e0:	jae    0x40e948
  40e8e2:	push   0x6c646e61
  40e8e7:	add    BYTE PTR gs:[rax],al
  40e8ea:	sbb    al,BYTE PTR [rcx]
  40e8ec:	pop    rdi
  40e8ed:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40e8f4:	ins    DWORD PTR es:[rdi],dx
  40e8f5:	add    BYTE PTR [rax+0x6f6c5f01],al
  40e8fb:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e8fe:	and    eax,0x6e6f5f02
  40e903:	gs js  0x40e96f
  40e906:	je     0x40e908
  40e908:	push   rsi
  40e909:	add    bl,BYTE PTR [rdi+0x73]
  40e90c:	gs je  0x40e97c
  40e90f:	outs   dx,DWORD PTR ds:[rsi]
  40e910:	fs add BYTE PTR gs:[rax],al
  40e914:	(bad)
  40e918:	outs   dx,BYTE PTR ds:[rsi]
  40e919:	ins    BYTE PTR es:[rdi],dx
  40e91a:	outs   dx,DWORD PTR ds:[rsi]
  40e91b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e91e:	jg     0x40e923
  40e920:	(bad)  
  40e921:	(bad)  
  40e922:	outs   dx,DWORD PTR ds:[rsi]
  40e923:	jb     0x40e999
  40e925:	add    BYTE PTR [rax+0x6c616303],dl
  40e92b:	ins    BYTE PTR es:[rdi],dx
  40e92c:	outs   dx,DWORD PTR ds:[rsi]
  40e92d:	movsxd eax,DWORD PTR [rax]
  40e92f:	add    BYTE PTR [rbp+0x69786503],bl
  40e935:	je     0x40e937
  40e937:	add    BYTE PTR [rcx+0x6c636603],ah
  40e93d:	outs   dx,DWORD PTR ds:[rsi]
  40e93e:	jae    0x40e9a5
  40e940:	add    BYTE PTR [rax],al
  40e942:	movabs ds:0x726f7272656603,eax
  40e94b:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  40e952:	jae    0x40e9bc
  40e954:	add    BYTE PTR [rax],al
  40e956:	scas   al,BYTE PTR es:[rdi]
  40e957:	add    esp,DWORD PTR [rsi+0x6f]
  40e95a:	jo     0x40e9c1
  40e95c:	outs   dx,BYTE PTR ds:[rsi]
  40e95d:	add    BYTE PTR [rax+0x72706603],dh
  40e963:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40e96a:	data16 jo 0x40e9e2
  40e96d:	je     0x40e9d2
  40e96f:	add    BYTE PTR [rbx+0x75706603],dh
  40e975:	je     0x40e9ea
  40e977:	add    BYTE PTR [rdi+0x65726603],dh
  40e97d:	add    BYTE PTR gs:[rax],al
  40e980:	ret    0x6603
  40e983:	ja     0x40e9f7
  40e985:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40e98d:	(bad)  
  40e98e:	ins    BYTE PTR es:[rdi],dx
  40e98f:	ins    BYTE PTR es:[rdi],dx
  40e990:	outs   dx,DWORD PTR ds:[rsi]
  40e991:	movsxd eax,DWORD PTR [rax]
  40e993:	add    al,bh
  40e995:	add    ebp,DWORD PTR [rbp+0x65]
  40e998:	ins    DWORD PTR es:[rdi],dx
  40e999:	movsxd esi,DWORD PTR [rax+0x79]
  40e99c:	add    BYTE PTR [rax],al
  40e99e:	cli    
  40e99f:	add    ebp,DWORD PTR [rbp+0x65]
  40e9a2:	ins    DWORD PTR es:[rdi],dx
  40e9a3:	jae    0x40ea0a
  40e9a5:	je     0x40e9a7
  40e9a7:	add    BYTE PTR [rip+0x74757004],al        # 0x74b659b1
  40e9ad:	jae    0x40e9af
  40e9af:	add    BYTE PTR [rdx],cl
  40e9b1:	add    al,0x72
  40e9b3:	(bad)  
  40e9b4:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  40e9bb:	gs (bad) 
  40e9bd:	ins    BYTE PTR es:[rdi],dx
  40e9be:	ins    BYTE PTR es:[rdi],dx
  40e9bf:	outs   dx,DWORD PTR ds:[rsi]
  40e9c0:	movsxd eax,DWORD PTR [rax]
  40e9c2:	adc    al,0x4
  40e9c4:	jae    0x40ea2b
  40e9c6:	je     0x40ea34
  40e9c8:	outs   dx,DWORD PTR ds:[rsi]
  40e9c9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e9cc:	add    BYTE PTR gs:[rsi],dl
  40e9cf:	add    al,0x73
  40e9d1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40e9d8:	sbb    eax,DWORD PTR [rbx+rsi*2]
  40e9db:	jo     0x40ea4f
  40e9dd:	imul   ebp,DWORD PTR [rsi+0x74],0x4240066
  40e9e4:	jae    0x40ea5a
  40e9e6:	jb     0x40ea4b
  40e9e8:	ins    DWORD PTR es:[rdi],dx
  40e9e9:	jo     0x40e9eb
  40e9eb:	add    BYTE PTR [rcx],ch
  40e9ed:	add    al,0x73
  40e9ef:	je     0x40ea63
  40e9f1:	gs jb  0x40ea66
  40e9f4:	outs   dx,DWORD PTR ds:[rsi]
  40e9f5:	jb     0x40e9f7
  40e9f7:	add    BYTE PTR [rbx],ch
  40e9f9:	add    al,0x73
  40e9fb:	je     0x40ea6f
  40e9fd:	ins    BYTE PTR es:[rdi],dx
  40e9fe:	outs   dx,BYTE PTR gs:[rsi]
  40ea00:	add    BYTE PTR [rax],al
  40ea02:	cs add al,0x73
  40ea05:	je     0x40ea79
  40ea07:	outs   dx,BYTE PTR ds:[rsi]
  40ea08:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ea0b:	add    BYTE PTR [rdx],dh
  40ea0d:	add    al,0x73
  40ea0f:	je     0x40ea83
  40ea11:	jb     0x40ea76
  40ea13:	push   0x44e0072
  40ea18:	jbe    0x40ea80
  40ea1a:	jo     0x40ea8e
  40ea1c:	imul   ebp,DWORD PTR [rsi+0x74],0xcd000066
  40ea23:	add    al,0x5f
  40ea25:	jb     0x40ea8c
  40ea27:	(bad)  
  40ea28:	fs add al,ch
  40ea2b:	add    al,0x5f
  40ea2d:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  40ea34:	add    al,ah
  40ea36:	add    BYTE PTR [rax],al
  40ea38:	add    al,ah
  40ea3a:	add    BYTE PTR [rax],al
  40ea3c:	add    al,ah
  40ea3e:	add    BYTE PTR [rax],al
  40ea40:	add    al,ah
  40ea42:	add    BYTE PTR [rax],al
  40ea44:	add    al,ah
  40ea46:	add    BYTE PTR [rax],al
  40ea48:	add    al,ah
  40ea4a:	add    BYTE PTR [rax],al
  40ea4c:	add    al,ah
  40ea4e:	add    BYTE PTR [rax],al
  40ea50:	ins    BYTE PTR es:[rdi],dx
  40ea51:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  40ea58:	sub    eax,0x6c642e32
  40ea5d:	ins    BYTE PTR es:[rdi],dx
  40ea5e:	add    BYTE PTR [rax],al
  40ea60:	adc    al,0xe0
  40ea62:	add    BYTE PTR [rax],al
  40ea64:	adc    al,0xe0
  40ea66:	add    BYTE PTR [rax],al
  40ea68:	adc    al,0xe0
  40ea6a:	add    BYTE PTR [rax],al
  40ea6c:	adc    al,0xe0
  40ea6e:	add    BYTE PTR [rax],al
  40ea70:	adc    al,0xe0
  40ea72:	add    BYTE PTR [rax],al
  40ea74:	adc    al,0xe0
  40ea76:	add    BYTE PTR [rax],al
  40ea78:	adc    al,0xe0
  40ea7a:	add    BYTE PTR [rax],al
  40ea7c:	adc    al,0xe0
  40ea7e:	add    BYTE PTR [rax],al
  40ea80:	adc    al,0xe0
  40ea82:	add    BYTE PTR [rax],al
  40ea84:	adc    al,0xe0
  40ea86:	add    BYTE PTR [rax],al
  40ea88:	adc    al,0xe0
  40ea8a:	add    BYTE PTR [rax],al
  40ea8c:	adc    al,0xe0
  40ea8e:	add    BYTE PTR [rax],al
  40ea90:	adc    al,0xe0
  40ea92:	add    BYTE PTR [rax],al
  40ea94:	adc    al,0xe0
  40ea96:	add    BYTE PTR [rax],al
  40ea98:	adc    al,0xe0
  40ea9a:	add    BYTE PTR [rax],al
  40ea9c:	adc    al,0xe0
  40ea9e:	add    BYTE PTR [rax],al
  40eaa0:	adc    al,0xe0
  40eaa2:	add    BYTE PTR [rax],al
  40eaa4:	adc    al,0xe0
  40eaa6:	add    BYTE PTR [rax],al
  40eaa8:	adc    al,0xe0
  40eaaa:	add    BYTE PTR [rax],al
  40eaac:	adc    al,0xe0
  40eaae:	add    BYTE PTR [rax],al
  40eab0:	adc    al,0xe0
  40eab2:	add    BYTE PTR [rax],al
  40eab4:	adc    al,0xe0
  40eab6:	add    BYTE PTR [rax],al
  40eab8:	adc    al,0xe0
  40eaba:	add    BYTE PTR [rax],al
  40eabc:	adc    al,0xe0
  40eabe:	add    BYTE PTR [rax],al
  40eac0:	adc    al,0xe0
  40eac2:	add    BYTE PTR [rax],al
  40eac4:	rex.WXB
  40eac5:	rex.RB push r10
  40eac7:	rex.WRX
  40eac8:	rex.RB
  40eac9:	xor    r14,QWORD PTR [rdx]
  40eacc:	cs fs ins BYTE PTR es:[rdi],dx
  40eacf:	ins    BYTE PTR es:[rdi],dx
  40ead0:	add    BYTE PTR [rax],al
  40ead2:	add    BYTE PTR [rax],al
  40ead4:	sub    al,ah
  40ead6:	add    BYTE PTR [rax],al
  40ead8:	sub    al,ah
  40eada:	add    BYTE PTR [rax],al
  40eadc:	sub    al,ah
  40eade:	add    BYTE PTR [rax],al
  40eae0:	sub    al,ah
  40eae2:	add    BYTE PTR [rax],al
  40eae4:	sub    al,ah
  40eae6:	add    BYTE PTR [rax],al
  40eae8:	sub    al,ah
  40eaea:	add    BYTE PTR [rax],al
  40eaec:	sub    al,ah
  40eaee:	add    BYTE PTR [rax],al
  40eaf0:	sub    al,ah
  40eaf2:	add    BYTE PTR [rax],al
  40eaf4:	sub    al,ah
  40eaf6:	add    BYTE PTR [rax],al
  40eaf8:	sub    al,ah
  40eafa:	add    BYTE PTR [rax],al
  40eafc:	sub    al,ah
  40eafe:	add    BYTE PTR [rax],al
  40eb00:	sub    al,ah
  40eb02:	add    BYTE PTR [rax],al
  40eb04:	sub    al,ah
  40eb06:	add    BYTE PTR [rax],al
  40eb08:	sub    al,ah
  40eb0a:	add    BYTE PTR [rax],al
  40eb0c:	sub    al,ah
  40eb0e:	add    BYTE PTR [rax],al
  40eb10:	sub    al,ah
  40eb12:	add    BYTE PTR [rax],al
  40eb14:	sub    al,ah
  40eb16:	add    BYTE PTR [rax],al
  40eb18:	sub    al,ah
  40eb1a:	add    BYTE PTR [rax],al
  40eb1c:	sub    al,ah
  40eb1e:	add    BYTE PTR [rax],al
  40eb20:	sub    al,ah
  40eb22:	add    BYTE PTR [rax],al
  40eb24:	sub    al,ah
  40eb26:	add    BYTE PTR [rax],al
  40eb28:	sub    al,ah
  40eb2a:	add    BYTE PTR [rax],al
  40eb2c:	sub    al,ah
  40eb2e:	add    BYTE PTR [rax],al
  40eb30:	sub    al,ah
  40eb32:	add    BYTE PTR [rax],al
  40eb34:	sub    al,ah
  40eb36:	add    BYTE PTR [rax],al
  40eb38:	sub    al,ah
  40eb3a:	add    BYTE PTR [rax],al
  40eb3c:	sub    al,ah
  40eb3e:	add    BYTE PTR [rax],al
  40eb40:	sub    al,ah
  40eb42:	add    BYTE PTR [rax],al
  40eb44:	sub    al,ah
  40eb46:	add    BYTE PTR [rax],al
  40eb48:	sub    al,ah
  40eb4a:	add    BYTE PTR [rax],al
  40eb4c:	sub    al,ah
  40eb4e:	add    BYTE PTR [rax],al
  40eb50:	sub    al,ah
  40eb52:	add    BYTE PTR [rax],al
  40eb54:	sub    al,ah
  40eb56:	add    BYTE PTR [rax],al
  40eb58:	sub    al,ah
  40eb5a:	add    BYTE PTR [rax],al
  40eb5c:	sub    al,ah
  40eb5e:	add    BYTE PTR [rax],al
  40eb60:	sub    al,ah
  40eb62:	add    BYTE PTR [rax],al
  40eb64:	sub    al,ah
  40eb66:	add    BYTE PTR [rax],al
  40eb68:	sub    al,ah
  40eb6a:	add    BYTE PTR [rax],al
  40eb6c:	sub    al,ah
  40eb6e:	add    BYTE PTR [rax],al
  40eb70:	sub    al,ah
  40eb72:	add    BYTE PTR [rax],al
  40eb74:	sub    al,ah
  40eb76:	add    BYTE PTR [rax],al
  40eb78:	sub    al,ah
  40eb7a:	add    BYTE PTR [rax],al
  40eb7c:	sub    al,ah
  40eb7e:	add    BYTE PTR [rax],al
  40eb80:	sub    al,ah
  40eb82:	add    BYTE PTR [rax],al
  40eb84:	sub    al,ah
  40eb86:	add    BYTE PTR [rax],al
  40eb88:	sub    al,ah
  40eb8a:	add    BYTE PTR [rax],al
  40eb8c:	sub    al,ah
  40eb8e:	add    BYTE PTR [rax],al
  40eb90:	sub    al,ah
  40eb92:	add    BYTE PTR [rax],al
  40eb94:	sub    al,ah
  40eb96:	add    BYTE PTR [rax],al
  40eb98:	ins    DWORD PTR es:[rdi],dx
  40eb99:	jae    0x40ec11
  40eb9b:	movsxd esi,DWORD PTR [rdx+0x74]
  40eb9e:	cs fs ins BYTE PTR es:[rdi],dx
  40eba1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040f000 <.CRT>:
	...
  40f008:	(bad)  
  40f009:	adc    DWORD PTR [rax+0x0],eax
	...
  40f020:	adc    BYTE PTR [rax],dl
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    al,dl
  40f029:	rex.X
  40f02a:	add    BYTE PTR [rax],al
	...
  40f041:	rex.RB
  40f042:	add    BYTE PTR [rax],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    al,dl
  40f049:	rex.R
  40f04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000410000 <.tls>:
	...
  410020:	add    BYTE PTR [rax],al
  410022:	add    BYTE PTR [r8],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax+0x0],ah
  41002a:	add    BYTE PTR [r8],al
  41002d:	add    BYTE PTR [rax],al
  41002f:	add    BYTE PTR [rcx+rbx*8+0x40],bl
  410033:	add    BYTE PTR [rax],al
  410035:	add    BYTE PTR [rax],al
  410037:	add    BYTE PTR [rax-0x10],al
  41003a:	add    BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

0000000000411000 <.rsrc>:
	...
  41100c:	add    BYTE PTR [rax],al
  41100e:	add    DWORD PTR [rax],eax
  411010:	adc    BYTE PTR [rax],al
  411012:	add    BYTE PTR [rax],al
  411014:	sbb    BYTE PTR [rax],al
  411016:	add    BYTE PTR [rax+0x0],al
	...
  411024:	add    BYTE PTR [rax],al
  411026:	add    DWORD PTR [rax],eax
  411028:	add    DWORD PTR [rax],eax
  41102a:	add    BYTE PTR [rax],al
  41102c:	xor    BYTE PTR [rax],al
  41102e:	add    BYTE PTR [rax+0x0],al
	...
  41103c:	add    BYTE PTR [rax],al
  41103e:	add    DWORD PTR [rax],eax
  411040:	or     DWORD PTR [rax+rax*1],eax
  411043:	add    BYTE PTR [rax+0x0],cl
  411046:	add    BYTE PTR [rax],al
  411048:	pop    rax
  411049:	adc    BYTE PTR [rcx],al
  41104b:	add    BYTE PTR [rax+0x5],cl
  411051:	add    BYTE PTR [rax],al
  411053:	add    BYTE PTR [rax],al
  411055:	add    BYTE PTR [rax],al
  411057:	add    BYTE PTR [rax+0x3405],cl
  41105d:	add    BYTE PTR [rsi+0x0],dl
  411060:	push   rbx
  411061:	add    BYTE PTR [rdi+0x0],bl
  411064:	push   rsi
  411065:	add    BYTE PTR [rbp+0x0],al
  411068:	push   rdx
  411069:	add    BYTE PTR [rbx+0x0],dl
  41106c:	rex.WB add BYTE PTR [r15+0x0],cl
  411070:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  411074:	rex.WB add BYTE PTR [r14+0x0],cl
  411078:	rex.RX add BYTE PTR [rdi+0x0],r9b
  41107c:	add    BYTE PTR [rax],al
  41107e:	add    BYTE PTR [rax],al
  411080:	mov    ebp,0xfeef04
  411085:	add    BYTE PTR [rcx],al
  411087:	add    BYTE PTR [rsi],cl
  411089:	add    BYTE PTR [rcx],al
  41108b:	add    BYTE PTR [rax],al
  41108d:	add    BYTE PTR [rax],al
  41108f:	add    BYTE PTR [rsi],cl
  411091:	add    BYTE PTR [rcx],al
  411093:	add    BYTE PTR [rax],al
  411095:	add    BYTE PTR [rax],al
  411097:	add    BYTE PTR [rdi],bh
  411099:	add    BYTE PTR [rax],al
  41109b:	add    BYTE PTR [rax],al
  41109d:	add    BYTE PTR [rax],al
  41109f:	add    BYTE PTR [rax+rax*1],al
  4110a2:	add    DWORD PTR [rax],eax
  4110a4:	add    DWORD PTR [rax],eax
	...
  4110b2:	add    BYTE PTR [rax],al
  4110b4:	out    0x4,al
  4110b6:	add    BYTE PTR [rax],al
  4110b8:	add    DWORD PTR [rax],eax
  4110ba:	push   rbx
  4110bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  4110bf:	add    BYTE PTR [rcx+0x0],ch
  4110c2:	outs   dx,BYTE PTR ds:[rsi]
  4110c3:	add    BYTE PTR [rdi+0x0],ah
  4110c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4110ca:	ins    BYTE PTR es:[rdi],dx
  4110cb:	add    BYTE PTR [rbp+0x0],ah
  4110ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  4110d2:	data16 add BYTE PTR [rdi+0x0],ch
  4110d6:	add    BYTE PTR [rax],al
  4110d8:	ret    0x4
  4110db:	add    BYTE PTR [rcx],al
  4110dd:	add    BYTE PTR [rax],dh
  4110df:	add    BYTE PTR [rax+rax*1],dh
  4110e2:	xor    BYTE PTR [rax],al
  4110e4:	cmp    DWORD PTR [rax],eax
  4110e6:	xor    BYTE PTR [rax],al
  4110e8:	xor    BYTE PTR [rax],al
  4110ea:	xor    BYTE PTR [rax],al
  4110ec:	xor    BYTE PTR [rax],al
  4110ee:	add    BYTE PTR [rax],al
  4110f0:	sbb    al,0x2
  4110f2:	add    al,BYTE PTR [rcx]
  4110f4:	add    DWORD PTR [rax],eax
  4110f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  4110fa:	ins    DWORD PTR es:[rdi],dx
  4110fb:	add    BYTE PTR [rbp+0x0],ch
  4110fe:	add    BYTE PTR gs:[rsi+0x0],ch
  411102:	je     0x411104
  411104:	jae    0x411106
  411106:	add    BYTE PTR [rax],al
  411108:	push   rsp
  411109:	add    BYTE PTR [rax+0x0],ch
  41110c:	imul   eax,DWORD PTR [rax],0x200073
  411112:	jo     0x411114
  411114:	jb     0x411116
  411116:	outs   dx,DWORD PTR ds:[rsi]
  411117:	add    BYTE PTR [rdi+0x0],ah
  41111a:	jb     0x41111c
  41111c:	(bad)  
  41111d:	add    BYTE PTR [rbp+0x0],ch
  411120:	and    BYTE PTR [rax],al
  411122:	imul   eax,DWORD PTR [rax],0x200073
  411128:	data16 add BYTE PTR [rdx+0x0],dh
  41112c:	add    BYTE PTR gs:[rbp+0x0],ah
  411130:	and    BYTE PTR [rax],al
  411132:	jae    0x411134
  411134:	outs   dx,DWORD PTR ds:[rsi]
  411135:	add    BYTE PTR [rsi+0x0],ah
  411138:	je     0x41113a
  41113a:	ja     0x41113c
  41113c:	(bad)  
  41113d:	add    BYTE PTR [rdx+0x0],dh
  411140:	add    BYTE PTR gs:[rdx],bh
  411143:	add    BYTE PTR [rax],ah
  411145:	add    BYTE PTR [rcx+0x0],bh
  411148:	outs   dx,DWORD PTR ds:[rsi]
  411149:	add    BYTE PTR [rbp+0x0],dh
  41114c:	and    BYTE PTR [rax],al
  41114e:	movsxd eax,DWORD PTR [rax]
  411150:	(bad)  
  411151:	add    BYTE PTR [rsi+0x0],ch
  411154:	and    BYTE PTR [rax],al
  411156:	jb     0x411158
  411158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  41115d:	add    BYTE PTR [rbx+0x0],dh
  411160:	je     0x411162
  411162:	jb     0x411164
  411164:	imul   eax,DWORD PTR [rax],0x750062
  41116a:	je     0x41116c
  41116c:	add    BYTE PTR gs:[rax],ah
  41116f:	add    BYTE PTR [rcx+0x0],ch
  411172:	je     0x411174
  411174:	and    BYTE PTR [rax],al
  411176:	(bad)  
  411177:	add    BYTE PTR [rsi+0x0],ch
  41117a:	add    BYTE PTR fs:[rdi],ch
  41117d:	add    BYTE PTR [rdi+0x0],ch
  411180:	jb     0x411182
  411182:	and    BYTE PTR [rax],al
  411184:	ins    DWORD PTR es:[rdi],dx
  411185:	add    BYTE PTR [rdi+0x0],ch
  411188:	add    BYTE PTR fs:[rcx+0x0],ch
  41118c:	data16 add BYTE PTR [rcx+0x0],bh
  411190:	and    BYTE PTR [rax],al
  411192:	imul   eax,DWORD PTR [rax],0x200074
  411198:	jne    0x41119a
  41119a:	outs   dx,BYTE PTR ds:[rsi]
  41119b:	add    BYTE PTR [rax+rax*1+0x65],ah
  41119f:	add    BYTE PTR [rdx+0x0],dh
  4111a2:	and    BYTE PTR [rax],al
  4111a4:	je     0x4111a6
  4111a6:	push   0x20006500
  4111ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  4111af:	add    BYTE PTR [rdx+0x0],dh
  4111b2:	ins    DWORD PTR es:[rdi],dx
  4111b3:	add    BYTE PTR [rbx+0x0],dh
  4111b6:	and    BYTE PTR [rax],al
  4111b8:	outs   dx,DWORD PTR ds:[rsi]
  4111b9:	add    BYTE PTR [rsi+0x0],ah
  4111bc:	and    BYTE PTR [rax],al
  4111be:	je     0x4111c0
  4111c0:	push   0x20006500
  4111c5:	add    BYTE PTR [rdi+0x0],al
  4111c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  4111cc:	and    BYTE PTR [rax],al
  4111ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  4111d2:	outs   dx,BYTE PTR ds:[rsi]
  4111d3:	add    BYTE PTR [rbp+0x0],ah
  4111d6:	jb     0x4111d8
  4111d8:	(bad)  
  4111d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  4111dd:	add    BYTE PTR [rax+0x0],dl
  4111e0:	jne    0x4111e2
  4111e2:	(bad)  
  4111e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4111e7:	add    BYTE PTR [rbx+0x0],ah
  4111ea:	and    BYTE PTR [rax],al
  4111ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4111f0:	movsxd eax,DWORD PTR [rax]
  4111f2:	add    BYTE PTR gs:[rsi+0x0],ch
  4111f6:	jae    0x4111f8
  4111f8:	add    BYTE PTR gs:[rsi],ch
  4111fb:	add    BYTE PTR [rax],ah
  4111fd:	add    BYTE PTR [rcx+0x0],bl
  411200:	outs   dx,DWORD PTR ds:[rsi]
  411201:	add    BYTE PTR [rbp+0x0],dh
  411204:	and    BYTE PTR [rax],al
  411206:	jae    0x411208
  411208:	push   0x75006f00
  41120d:	add    BYTE PTR [rax+rax*1+0x64],ch
  411211:	add    BYTE PTR [rax],ah
  411213:	add    BYTE PTR [rax+0x0],ch
  411216:	(bad)  
  411217:	add    BYTE PTR [rsi+0x0],dh
  41121a:	add    BYTE PTR gs:[rax],ah
  41121d:	add    BYTE PTR [rdx+0x0],dh
  411220:	add    BYTE PTR gs:[rbx+0x0],ah
  411224:	add    BYTE PTR gs:[rcx+0x0],ch
  411228:	jbe    0x41122a
  41122a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  41122f:	add    BYTE PTR [rcx+0x0],ah
  411232:	and    BYTE PTR [rax],al
  411234:	movsxd eax,DWORD PTR [rax]
  411236:	outs   dx,DWORD PTR ds:[rsi]
  411237:	add    BYTE PTR [rax+0x0],dh
  41123a:	jns    0x41123c
  41123c:	and    BYTE PTR [rax],al
  41123e:	outs   dx,DWORD PTR ds:[rsi]
  41123f:	add    BYTE PTR [rsi+0x0],ah
  411242:	and    BYTE PTR [rax],al
  411244:	je     0x411246
  411246:	push   0x20006500
  41124b:	add    BYTE PTR [rdi+0x0],al
  41124e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  411252:	and    BYTE PTR [rax],al
  411254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  411258:	outs   dx,BYTE PTR ds:[rsi]
  411259:	add    BYTE PTR [rbp+0x0],ah
  41125c:	jb     0x41125e
  41125e:	(bad)  
  41125f:	add    BYTE PTR [rax+rax*1+0x20],ch
  411263:	add    BYTE PTR [rax+0x0],dl
  411266:	jne    0x411268
  411268:	(bad)  
  411269:	add    BYTE PTR [rax+rax*1+0x69],ch
  41126d:	add    BYTE PTR [rbx+0x0],ah
  411270:	and    BYTE PTR [rax],al
  411272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  411276:	movsxd eax,DWORD PTR [rax]
  411278:	add    BYTE PTR gs:[rsi+0x0],ch
  41127c:	jae    0x41127e
  41127e:	add    BYTE PTR gs:[rax],ah
  411281:	add    BYTE PTR [rcx+0x0],ah
  411284:	ins    BYTE PTR es:[rdi],dx
  411285:	add    BYTE PTR [rdi+0x0],ch
  411288:	outs   dx,BYTE PTR ds:[rsi]
  411289:	add    BYTE PTR [rdi+0x0],ah
  41128c:	and    BYTE PTR [rax],al
  41128e:	ja     0x411290
  411290:	imul   eax,DWORD PTR [rax],0x680074
  411296:	and    BYTE PTR [rax],al
  411298:	je     0x41129a
  41129a:	push   0x73006900
  41129f:	add    BYTE PTR [rax],ah
  4112a1:	add    BYTE PTR [rax+0x0],dh
  4112a4:	jb     0x4112a6
  4112a6:	outs   dx,DWORD PTR ds:[rsi]
  4112a7:	add    BYTE PTR [rdi+0x0],ah
  4112aa:	jb     0x4112ac
  4112ac:	(bad)  
  4112ad:	add    BYTE PTR [rbp+0x0],ch
  4112b0:	add    BYTE PTR cs:[rax],ah
  4112b3:	add    BYTE PTR [rcx+0x0],cl
  4112b6:	data16 add BYTE PTR [rax],ah
  4112b9:	add    BYTE PTR [rsi+0x0],ch
  4112bc:	outs   dx,DWORD PTR ds:[rsi]
  4112bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  4112c1:	add    BYTE PTR [rax],ah
  4112c3:	add    BYTE PTR [rbx+0x0],dh
  4112c6:	add    BYTE PTR gs:[rbp+0x0],ah
  4112ca:	and    BYTE PTR [rax],al
  4112cc:	cmp    al,0x0
  4112ce:	push   0x74007400
  4112d3:	add    BYTE PTR [rax+0x0],dh
  4112d6:	cmp    al,BYTE PTR [rax]
  4112d8:	(bad)  
  4112d9:	add    BYTE PTR [rdi],ch
  4112db:	add    BYTE PTR [rdi+0x0],dh
  4112de:	ja     0x4112e0
  4112e0:	ja     0x4112e2
  4112e2:	add    BYTE PTR cs:[rdi+0x0],ah
  4112e6:	outs   dx,BYTE PTR ds:[rsi]
  4112e7:	add    BYTE PTR [rbp+0x0],dh
  4112ea:	add    BYTE PTR cs:[rdi+0x0],ch
  4112ee:	jb     0x4112f0
  4112f0:	add    BYTE PTR [edi],ch
  4112f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4112f7:	add    BYTE PTR [rbx+0x0],ah
  4112fa:	add    BYTE PTR gs:[rsi+0x0],ch
  4112fe:	jae    0x411300
  411300:	add    BYTE PTR gs:[rbx+0x0],dh
  411304:	(bad)  
  411305:	add    BYTE PTR [rsi],bh
  411307:	add    BYTE PTR [rsi],ch
  411309:	add    BYTE PTR [rax],al
  41130b:	add    BYTE PTR [rdx+0x0],dl
  41130e:	sbb    DWORD PTR [rax],eax
  411310:	add    DWORD PTR [rax],eax
  411312:	rex.XB add BYTE PTR [r15+0x0],bpl
  411316:	ins    DWORD PTR es:[rdi],dx
  411317:	add    BYTE PTR [rax+0x0],dh
  41131a:	(bad)  
  41131b:	add    BYTE PTR [rsi+0x0],ch
  41131e:	jns    0x411320
  411320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  411324:	ins    DWORD PTR es:[rdi],dx
  411325:	add    BYTE PTR [rbp+0x0],ah
  411328:	add    BYTE PTR [rax],al
  41132a:	add    BYTE PTR [rax],al
  41132c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  411330:	add    BYTE PTR gs:[rbp+0x0],ah
  411334:	and    BYTE PTR [rax],al
  411336:	push   rbx
  411337:	add    BYTE PTR [rdi+0x0],ch
  41133a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  41133f:	add    BYTE PTR [rcx+0x0],ah
  411342:	jb     0x411344
  411344:	add    BYTE PTR gs:[rax],ah
  411347:	add    BYTE PTR [rsi+0x0],al
  41134a:	outs   dx,DWORD PTR ds:[rsi]
  41134b:	add    BYTE PTR [rbp+0x0],dh
  41134e:	outs   dx,BYTE PTR ds:[rsi]
  41134f:	add    BYTE PTR [rax+rax*1+0x61],ah
  411353:	add    BYTE PTR [rax+rax*1+0x69],dh
  411357:	add    BYTE PTR [rdi+0x0],ch
  41135a:	outs   dx,BYTE PTR ds:[rsi]
  41135b:	add    BYTE PTR [rax],al
  41135d:	add    BYTE PTR [rax],al
  41135f:	add    BYTE PTR [rsi+0x0],bh
  411362:	sub    eax,DWORD PTR [rax]
  411364:	add    DWORD PTR [rax],eax
  411366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  41136a:	ins    BYTE PTR es:[rdi],dx
  41136b:	add    BYTE PTR [rbp+0x0],ah
  41136e:	add    BYTE PTR [rbp+0x0],r12b
  411372:	jae    0x411374
  411374:	movsxd eax,DWORD PTR [rax]
  411376:	jb     0x411378
  411378:	imul   eax,DWORD PTR [rax],0x740070
  41137e:	imul   eax,DWORD PTR [rax],0x6e006f
  411384:	add    BYTE PTR [rax],al
  411386:	add    BYTE PTR [rax],al
  411388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  41138c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  411390:	add    BYTE PTR fs:[rax],ah
  411393:	add    BYTE PTR [rcx+0x0],ch
  411396:	movsxd eax,DWORD PTR [rax]
  411398:	outs   dx,DWORD PTR ds:[rsi]
  411399:	add    BYTE PTR [rsi+0x0],ch
  41139c:	jbe    0x41139e
  41139e:	and    BYTE PTR [rax],al
  4113a0:	data16 add BYTE PTR [rdi+0x0],ch
  4113a4:	jb     0x4113a6
  4113a6:	and    BYTE PTR [rax],al
  4113a8:	push   rdi
  4113a9:	add    BYTE PTR [rcx+0x0],ch
  4113ac:	outs   dx,BYTE PTR ds:[rsi]
  4113ad:	add    BYTE PTR [rax+rax*1+0x6f],ah
  4113b1:	add    BYTE PTR [rdi+0x0],dh
  4113b4:	jae    0x4113b6
  4113b6:	and    BYTE PTR [rax],al
  4113b8:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  4113bd:	add    BYTE PTR [rdx],dh
  4113bf:	add    BYTE PTR [rax],dh
  4113c1:	add    BYTE PTR [rax],dh
  4113c3:	add    BYTE PTR [rax],dh
  4113c5:	add    BYTE PTR [rdi],ch
  4113c7:	add    BYTE PTR [rax+0x0],bl
  4113ca:	push   rax
  4113cb:	add    BYTE PTR [rdi],ch
  4113cd:	add    BYTE PTR [rsi+0x0],dl
  4113d0:	imul   eax,DWORD PTR [rax],0x740073
  4113d6:	(bad)  
  4113d7:	add    BYTE PTR [rdi],ch
  4113d9:	add    BYTE PTR [rdi],dh
  4113db:	add    BYTE PTR [rax],al
  4113dd:	add    BYTE PTR [rax],al
  4113df:	add    BYTE PTR [rdx],ch
  4113e1:	add    BYTE PTR [rip+0x46000100],al        # 0x464114e7
  4113e7:	add    BYTE PTR [rcx+0x0],ch
  4113ea:	ins    BYTE PTR es:[rdi],dx
  4113eb:	add    BYTE PTR [rbp+0x0],ah
  4113ee:	push   rsi
  4113ef:	add    BYTE PTR [rbp+0x0],ah
  4113f2:	jb     0x4113f4
  4113f4:	jae    0x4113f6
  4113f6:	imul   eax,DWORD PTR [rax],0x6e006f
  4113fc:	add    BYTE PTR [rax],al
  4113fe:	add    BYTE PTR [rax],al
  411400:	xor    DWORD PTR [rax],eax
  411402:	add    BYTE PTR cs:[rcx],dh
  411405:	add    BYTE PTR [rax+rax*1],dh
  411408:	add    BYTE PTR [rax],al
  41140a:	add    BYTE PTR [rax],al
  41140c:	xor    al,0x0
  41140e:	or     al,BYTE PTR [rax]
  411410:	add    DWORD PTR [rax],eax
  411412:	rex.WB add BYTE PTR [r14+0x0],bpl
  411416:	je     0x411418
  411418:	add    BYTE PTR gs:[rdx+0x0],dh
  41141c:	outs   dx,BYTE PTR ds:[rsi]
  41141d:	add    BYTE PTR [rcx+0x0],ah
  411420:	ins    BYTE PTR es:[rdi],dx
  411421:	add    BYTE PTR [rsi+0x0],cl
  411424:	(bad)  
  411425:	add    BYTE PTR [rbp+0x0],ch
  411428:	add    BYTE PTR gs:[rax],al
  41142b:	add    BYTE PTR [rcx+0x0],ch
  41142e:	movsxd eax,DWORD PTR [rax]
  411430:	outs   dx,DWORD PTR ds:[rsi]
  411431:	add    BYTE PTR [rsi+0x0],ch
  411434:	jbe    0x411436
  411436:	add    BYTE PTR cs:[rbp+0x0],ah
  41143a:	js     0x41143c
  41143c:	add    BYTE PTR gs:[rax],al
  41143f:	add    BYTE PTR [rax+rax*1+0x18],dl
  411443:	add    BYTE PTR [rcx],al
  411445:	add    BYTE PTR [rax+rax*1+0x65],cl
  411449:	add    BYTE PTR [rdi+0x0],ah
  41144c:	(bad)  
  41144d:	add    BYTE PTR [rax+rax*1+0x43],ch
  411451:	add    BYTE PTR [rdi+0x0],ch
  411454:	jo     0x411456
  411456:	jns    0x411458
  411458:	jb     0x41145a
  41145a:	imul   eax,DWORD PTR [rax],0x680067
  411460:	je     0x411462
  411462:	add    BYTE PTR [rax],al
  411464:	rex.XB add BYTE PTR [r15+0x0],bpl
  411468:	jo     0x41146a
  41146a:	jns    0x41146c
  41146c:	jb     0x41146e
  41146e:	imul   eax,DWORD PTR [rax],0x680067
  411474:	je     0x411476
  411476:	and    BYTE PTR [rax],al
  411478:	sub    BYTE PTR [rax],al
  41147a:	rex.XB add BYTE PTR [r9],bpl
  41147d:	add    BYTE PTR [rax],ah
  41147f:	add    BYTE PTR [rcx],dh
  411481:	add    BYTE PTR [rcx],bh
  411483:	add    BYTE PTR [rcx],bh
  411485:	add    BYTE PTR [rcx],bh
  411487:	add    BYTE PTR [rip+0x30003200],ch        # 0x3041468d
  41148d:	add    BYTE PTR [rcx],dh
  41148f:	add    BYTE PTR [rcx],dh
  411491:	add    BYTE PTR [rax],al
  411493:	add    BYTE PTR [rdx],ch
  411495:	add    BYTE PTR [rcx],al
  411497:	add    BYTE PTR [rcx],al
  411499:	add    BYTE PTR [rax+rax*1+0x65],cl
  41149d:	add    BYTE PTR [rdi+0x0],ah
  4114a0:	(bad)  
  4114a1:	add    BYTE PTR [rax+rax*1+0x54],ch
  4114a5:	add    BYTE PTR [rdx+0x0],dh
  4114a8:	(bad)  
  4114a9:	add    BYTE PTR [rax+rax*1+0x65],ah
  4114ad:	add    BYTE PTR [rbp+0x0],ch
  4114b0:	(bad)  
  4114b1:	add    BYTE PTR [rdx+0x0],dh
  4114b4:	imul   eax,DWORD PTR [rax],0x73
	...
  4114bf:	add    BYTE PTR [rax+rax*1],bh
  4114c2:	or     al,BYTE PTR [rax]
  4114c4:	add    DWORD PTR [rax],eax
  4114c6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
  4114ca:	imul   eax,DWORD PTR [rax],0x690067
  4114d0:	outs   dx,BYTE PTR ds:[rsi]
  4114d1:	add    BYTE PTR [rcx+0x0],ah
  4114d4:	ins    BYTE PTR es:[rdi],dx
  4114d5:	add    BYTE PTR [rsi+0x0],al
  4114d8:	imul   eax,DWORD PTR [rax],0x65006c
  4114de:	outs   dx,BYTE PTR ds:[rsi]
  4114df:	add    BYTE PTR [rcx+0x0],ah
  4114e2:	ins    DWORD PTR es:[rdi],dx
  4114e3:	add    BYTE PTR [rbp+0x0],ah
  4114e6:	add    BYTE PTR [rax],al
  4114e8:	imul   eax,DWORD PTR [rax],0x6f0063
  4114ee:	outs   dx,BYTE PTR ds:[rsi]
  4114ef:	add    BYTE PTR [rsi+0x0],dh
  4114f2:	add    BYTE PTR cs:[rbp+0x0],ah
  4114f6:	js     0x4114f8
  4114f8:	add    BYTE PTR gs:[rax],al
  4114fb:	add    BYTE PTR [rax+0x0],dh
  4114fe:	sub    BYTE PTR [rax],al
  411500:	add    DWORD PTR [rax],eax
  411502:	push   rax
  411503:	add    BYTE PTR [rdx+0x0],dh
  411506:	outs   dx,DWORD PTR ds:[rsi]
  411507:	add    BYTE PTR [rax+rax*1+0x75],ah
  41150b:	add    BYTE PTR [rbx+0x0],ah
  41150e:	je     0x411510
  411510:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  411514:	ins    DWORD PTR es:[rdi],dx
  411515:	add    BYTE PTR [rbp+0x0],ah
  411518:	add    BYTE PTR [rax],al
  41151a:	add    BYTE PTR [rax],al
  41151c:	imul   eax,DWORD PTR [rax],0x6f0063
  411522:	outs   dx,BYTE PTR ds:[rsi]
  411523:	add    BYTE PTR [rsi+0x0],dh
  411526:	cmp    al,BYTE PTR [rax]
  411528:	and    BYTE PTR [rax],al
  41152a:	movsxd eax,DWORD PTR [rax]
  41152c:	push   0x72006100
  411531:	add    BYTE PTR [rcx+0x0],ah
  411534:	movsxd eax,DWORD PTR [rax]
  411536:	je     0x411538
  411538:	add    BYTE PTR gs:[rdx+0x0],dh
  41153c:	and    BYTE PTR [rax],al
  41153e:	jae    0x411540
  411540:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
  411545:	add    BYTE PTR [rbx+0x0],ah
  411548:	outs   dx,DWORD PTR ds:[rsi]
  411549:	add    BYTE PTR [rsi+0x0],ch
  41154c:	jbe    0x41154e
  41154e:	add    BYTE PTR gs:[rdx+0x0],dh
  411552:	jae    0x411554
  411554:	imul   eax,DWORD PTR [rax],0x6e006f
  41155a:	and    BYTE PTR [rax],al
  41155c:	jo     0x41155e
  41155e:	jb     0x411560
  411560:	outs   dx,DWORD PTR ds:[rsi]
  411561:	add    BYTE PTR [rdi+0x0],ah
  411564:	jb     0x411566
  411566:	(bad)  
  411567:	add    BYTE PTR [rbp+0x0],ch
  41156a:	add    BYTE PTR [rax],al
  41156c:	add    BYTE PTR cs:[rip+0x50000100],al        # 0x50411673
  411573:	add    BYTE PTR [rdx+0x0],dh
  411576:	outs   dx,DWORD PTR ds:[rsi]
  411577:	add    BYTE PTR [rax+rax*1+0x75],ah
  41157b:	add    BYTE PTR [rbx+0x0],ah
  41157e:	je     0x411580
  411580:	push   rsi
  411581:	add    BYTE PTR [rbp+0x0],ah
  411584:	jb     0x411586
  411586:	jae    0x411588
  411588:	imul   eax,DWORD PTR [rax],0x6e006f
  41158e:	add    BYTE PTR [rax],al
  411590:	xor    DWORD PTR [rax],eax
  411592:	add    BYTE PTR cs:[rcx],dh
  411595:	add    BYTE PTR [rax+rax*1],dh
  411598:	add    BYTE PTR [rax],al
  41159a:	add    BYTE PTR [rax],al
  41159c:	add    BYTE PTR [rax],r8b
  41159f:	add    BYTE PTR [rcx],al
  4115a1:	add    BYTE PTR [rsi+0x0],dl
  4115a4:	(bad)  
  4115a5:	add    BYTE PTR [rdx+0x0],dh
  4115a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4115ac:	ins    BYTE PTR es:[rdi],dx
  4115ad:	add    BYTE PTR [rbp+0x0],ah
  4115b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  4115b4:	data16 add BYTE PTR [rdi+0x0],ch
  4115b8:	add    BYTE PTR [rax],al
  4115ba:	add    BYTE PTR [rax],al
  4115bc:	and    al,0x0
  4115be:	add    al,0x0
  4115c0:	add    BYTE PTR [rax],al
  4115c2:	push   rsp
  4115c3:	add    BYTE PTR [rdx+0x0],dh
  4115c6:	(bad)  
  4115c7:	add    BYTE PTR [rsi+0x0],ch
  4115ca:	jae    0x4115cc
  4115cc:	ins    BYTE PTR es:[rdi],dx
  4115cd:	add    BYTE PTR [rcx+0x0],ah
  4115d0:	je     0x4115d2
  4115d2:	imul   eax,DWORD PTR [rax],0x6e006f
  4115d8:	add    BYTE PTR [rax],al
  4115da:	add    BYTE PTR [rax],al
  4115dc:	or     DWORD PTR [rax+rax*1],eax
	...
