
3ce6f5e9aee5a3f921d1a21144ae5b7b557dbfc7999f282adcc2fc522fc787bb.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x45b5]        # 0x4055d0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x45b6]        # 0x4055e0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x45b9]        # 0x4055f0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x457c]        # 0x4055c0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x442f]        # 0x405480
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4551]        # 0x4055b0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402c10
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401ba0
  401081:	mov    rdx,QWORD PTR [rip+0x4488]        # 0x405510
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x446e]        # 0x405500
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x44d4]        # 0x405570
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x440b]        # 0x4054b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401780
  4010af:	mov    rax,QWORD PTR [rip+0x437a]        # 0x405430
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402c10
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x959]        # 0x401a80
  401127:	call   0x401a70
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4435]        # 0x4055a0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x43c5]        # 0x405560
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402c28
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x43ea]        # 0x4055b0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x42eb]        # 0x4054e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x80d6]        # 0x4092d8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x42c7]        # 0x4054f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x420c]        # 0x405470
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d90
  40127d:	lea    rcx,[rip+0x10ac]        # 0x402330
  401284:	call   QWORD PTR [rip+0x8046]        # 0x4092d0
  40128a:	mov    rdx,QWORD PTR [rip+0x423f]        # 0x4054d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402240
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402c50
  4012a5:	call   0x401b80
  4012aa:	mov    rax,QWORD PTR [rip+0x41cf]        # 0x405480
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x41e1]        # 0x4054a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b80
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b50
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b80
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b78
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401750
  4013bb:	mov    rax,QWORD PTR [rip+0x40ce]        # 0x405490
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402d20
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402bf8
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x40b9]        # 0x4054f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402c00
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x40cd]        # 0x405530
  401463:	mov    rcx,QWORD PTR [rip+0x40b6]        # 0x405520
  40146a:	call   0x402bf0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7de7]        # 0x409280
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x40a9]        # 0x405550
  4014a7:	mov    rcx,QWORD PTR [rip+0x4092]        # 0x405540
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402bf0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402bc0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x40d5]        # 0x4055b0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401790
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x40a5]        # 0x4055b0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401790
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r12
  401532:	push   rbp
  401533:	push   rdi
  401534:	push   rsi
  401535:	push   rbx
  401536:	test   r8d,r8d
  401539:	jle    0x401598
  40153b:	mov    esi,edx
  40153d:	movsxd rdi,edx
  401540:	xor    ebx,ebx
  401542:	shr    esi,0x1f
  401545:	lea    rbp,[rdi-0x2]
  401549:	lea    r12,[rdi-0x1]
  40154d:	add    esi,edx
  40154f:	sar    esi,1
  401551:	lea    eax,[rsi-0x1]
  401554:	sub    rbp,rax
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	test   esi,esi
  401562:	jle    0x40158d
  401564:	lea    rax,[rcx+r12*1]
  401568:	lea    r11,[rcx+rbp*1]
  40156c:	mov    rdx,rcx
  40156f:	nop
  401570:	movzx  r9d,BYTE PTR [rdx]
  401574:	movzx  r10d,BYTE PTR [rax]
  401578:	sub    rax,0x1
  40157c:	add    rdx,0x1
  401580:	mov    BYTE PTR [rdx-0x1],r10b
  401584:	mov    BYTE PTR [rax+0x1],r9b
  401588:	cmp    rax,r11
  40158b:	jne    0x401570
  40158d:	add    ebx,0x1
  401590:	add    rcx,rdi
  401593:	cmp    ebx,r8d
  401596:	jne    0x401560
  401598:	pop    rbx
  401599:	pop    rsi
  40159a:	pop    rdi
  40159b:	pop    rbp
  40159c:	pop    r12
  40159e:	ret    
  40159f:	nop
  4015a0:	sub    rsp,0x28
  4015a4:	call   QWORD PTR [rip+0x7d86]        # 0x409330
  4015aa:	lea    rcx,[rip+0x3a4f]        # 0x405000
  4015b1:	lea    r9,[rax+0x60]
  4015b5:	mov    r8d,0x45
  4015bb:	mov    edx,0x1
  4015c0:	call   0x402b88
  4015c5:	mov    ecx,0x1
  4015ca:	call   0x402bc0
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x7c6a]        # 0x409240
  4015d6:	nop
  4015d7:	nop
  4015d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e0:	push   rbx
  4015e1:	sub    rsp,0x30
  4015e5:	mov    rbx,rcx
  4015e8:	mov    rcx,QWORD PTR [rip+0x7421]        # 0x408a10
  4015ef:	call   0x401b90
  4015f4:	cmp    rax,0xffffffffffffffff
  4015f8:	mov    QWORD PTR [rsp+0x20],rax
  4015fd:	je     0x401675
  4015ff:	mov    ecx,0x8
  401604:	call   0x402be8
  401609:	mov    rcx,QWORD PTR [rip+0x7400]        # 0x408a10
  401610:	call   0x401b90
  401615:	mov    rcx,QWORD PTR [rip+0x73fc]        # 0x408a18
  40161c:	mov    QWORD PTR [rsp+0x20],rax
  401621:	call   0x401b90
  401626:	lea    rdx,[rsp+0x20]
  40162b:	lea    r8,[rsp+0x28]
  401630:	mov    rcx,rbx
  401633:	mov    QWORD PTR [rsp+0x28],rax
  401638:	call   0x402c30
  40163d:	mov    rcx,QWORD PTR [rsp+0x20]
  401642:	mov    rbx,rax
  401645:	call   0x401ba0
  40164a:	mov    rcx,QWORD PTR [rsp+0x28]
  40164f:	mov    QWORD PTR [rip+0x73ba],rax        # 0x408a10
  401656:	call   0x401ba0
  40165b:	mov    ecx,0x8
  401660:	mov    QWORD PTR [rip+0x73b1],rax        # 0x408a18
  401667:	call   0x402bd8
  40166c:	mov    rax,rbx
  40166f:	add    rsp,0x30
  401673:	pop    rbx
  401674:	ret    
  401675:	mov    rax,QWORD PTR [rip+0x3e44]        # 0x4054c0
  40167c:	mov    rcx,rbx
  40167f:	call   QWORD PTR [rax]
  401681:	add    rsp,0x30
  401685:	pop    rbx
  401686:	ret    
  401687:	nop    WORD PTR [rax+rax*1+0x0]
  401690:	sub    rsp,0x28
  401694:	call   0x4015e0
  401699:	test   rax,rax
  40169c:	sete   al
  40169f:	movzx  eax,al
  4016a2:	neg    eax
  4016a4:	add    rsp,0x28
  4016a8:	ret    
  4016a9:	nop
  4016aa:	nop
  4016ab:	nop
  4016ac:	nop
  4016ad:	nop
  4016ae:	nop
  4016af:	nop
  4016b0:	sub    rsp,0x28
  4016b4:	mov    rax,QWORD PTR [rip+0x2955]        # 0x404010
  4016bb:	mov    rax,QWORD PTR [rax]
  4016be:	test   rax,rax
  4016c1:	je     0x4016e0
  4016c3:	call   rax
  4016c5:	mov    rax,QWORD PTR [rip+0x2944]        # 0x404010
  4016cc:	lea    rdx,[rax+0x8]
  4016d0:	mov    rax,QWORD PTR [rax+0x8]
  4016d4:	mov    QWORD PTR [rip+0x2935],rdx        # 0x404010
  4016db:	test   rax,rax
  4016de:	jne    0x4016c3
  4016e0:	add    rsp,0x28
  4016e4:	ret    
  4016e5:	nop
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	push   rsi
  4016f1:	push   rbx
  4016f2:	sub    rsp,0x28
  4016f6:	mov    rsi,QWORD PTR [rip+0x3d43]        # 0x405440
  4016fd:	mov    rax,QWORD PTR [rsi]
  401700:	cmp    eax,0xffffffff
  401703:	mov    ebx,eax
  401705:	je     0x401730
  401707:	test   ebx,ebx
  401709:	je     0x40171a
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	mov    eax,ebx
  401712:	call   QWORD PTR [rsi+rax*8]
  401715:	sub    ebx,0x1
  401718:	jne    0x401710
  40171a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4016b0
  401721:	add    rsp,0x28
  401725:	pop    rbx
  401726:	pop    rsi
  401727:	jmp    0x401690
  40172c:	nop    DWORD PTR [rax+0x0]
  401730:	xor    ebx,ebx
  401732:	jmp    0x401736
  401734:	mov    ebx,eax
  401736:	lea    edx,[rbx+0x1]
  401739:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40173e:	mov    rax,rdx
  401741:	jne    0x401734
  401743:	jmp    0x401707
  401745:	nop
  401746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401750:	mov    eax,DWORD PTR [rip+0x68da]        # 0x408030
  401756:	test   eax,eax
  401758:	je     0x401760
  40175a:	repz ret 
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	mov    DWORD PTR [rip+0x68c6],0x1        # 0x408030
  40176a:	jmp    0x4016f0
  40176c:	nop
  40176d:	nop
  40176e:	nop
  40176f:	nop
  401770:	mov    rax,QWORD PTR [rip+0x7bc1]        # 0x409338
  401777:	rex.W jmp rax
  40177a:	nop
  40177b:	nop
  40177c:	nop
  40177d:	nop
  40177e:	nop
  40177f:	nop
  401780:	xor    eax,eax
  401782:	ret    
  401783:	nop
  401784:	nop
  401785:	nop
  401786:	nop
  401787:	nop
  401788:	nop
  401789:	nop
  40178a:	nop
  40178b:	nop
  40178c:	nop
  40178d:	nop
  40178e:	nop
  40178f:	nop
  401790:	push   r12
  401792:	push   rbp
  401793:	push   rdi
  401794:	push   rsi
  401795:	push   rbx
  401796:	sub    rsp,0x40
  40179a:	mov    rbx,QWORD PTR [rip+0x28cf]        # 0x404070
  4017a1:	movabs rax,0x2b992ddfa232
  4017ab:	mov    QWORD PTR [rsp+0x20],0x0
  4017b4:	cmp    rbx,rax
  4017b7:	je     0x4017d0
  4017b9:	not    rbx
  4017bc:	mov    QWORD PTR [rip+0x28bd],rbx        # 0x404080
  4017c3:	add    rsp,0x40
  4017c7:	pop    rbx
  4017c8:	pop    rsi
  4017c9:	pop    rdi
  4017ca:	pop    rbp
  4017cb:	pop    r12
  4017cd:	ret    
  4017ce:	xchg   ax,ax
  4017d0:	lea    rcx,[rsp+0x20]
  4017d5:	call   QWORD PTR [rip+0x7aad]        # 0x409288
  4017db:	mov    r12,QWORD PTR [rsp+0x20]
  4017e0:	call   QWORD PTR [rip+0x7a82]        # 0x409268
  4017e6:	mov    ebp,eax
  4017e8:	call   QWORD PTR [rip+0x7a82]        # 0x409270
  4017ee:	mov    edi,eax
  4017f0:	call   QWORD PTR [rip+0x7a9a]        # 0x409290
  4017f6:	lea    rcx,[rsp+0x30]
  4017fb:	mov    esi,eax
  4017fd:	call   QWORD PTR [rip+0x7aa5]        # 0x4092a8
  401803:	xor    r12,QWORD PTR [rsp+0x30]
  401808:	mov    edx,edi
  40180a:	movabs rax,0xffffffffffff
  401814:	xor    rbp,r12
  401817:	mov    rdi,rbp
  40181a:	xor    rdi,rdx
  40181d:	mov    edx,esi
  40181f:	xor    rdi,rdx
  401822:	mov    rsi,rdi
  401825:	and    rsi,rax
  401828:	cmp    rsi,rbx
  40182b:	je     0x401850
  40182d:	mov    rax,rsi
  401830:	not    rax
  401833:	mov    QWORD PTR [rip+0x2836],rsi        # 0x404070
  40183a:	mov    QWORD PTR [rip+0x283f],rax        # 0x404080
  401841:	add    rsp,0x40
  401845:	pop    rbx
  401846:	pop    rsi
  401847:	pop    rdi
  401848:	pop    rbp
  401849:	pop    r12
  40184b:	ret    
  40184c:	nop    DWORD PTR [rax+0x0]
  401850:	movabs rax,0xffffd466d2205dcc
  40185a:	movabs rsi,0x2b992ddfa233
  401864:	jmp    0x401833
  401866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401870:	push   rbp
  401871:	push   rsi
  401872:	push   rbx
  401873:	mov    rbp,rsp
  401876:	sub    rsp,0x70
  40187a:	mov    rsi,rcx
  40187d:	lea    rcx,[rip+0x67fc]        # 0x408080
  401884:	call   QWORD PTR [rip+0x7a2e]        # 0x4092b8
  40188a:	mov    rbx,QWORD PTR [rip+0x68e7]        # 0x408178
  401891:	xor    r8d,r8d
  401894:	lea    rdx,[rbp-0x28]
  401898:	mov    rcx,rbx
  40189b:	call   QWORD PTR [rip+0x7a1f]        # 0x4092c0
  4018a1:	test   rax,rax
  4018a4:	mov    r9,rax
  4018a7:	je     0x401950
  4018ad:	lea    rax,[rbp-0x20]
  4018b1:	mov    QWORD PTR [rsp+0x38],0x0
  4018ba:	mov    r8,rbx
  4018bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4018c1:	xor    ecx,ecx
  4018c3:	mov    QWORD PTR [rsp+0x30],rax
  4018c8:	lea    rax,[rbp-0x18]
  4018cc:	mov    QWORD PTR [rsp+0x28],rax
  4018d1:	lea    rax,[rip+0x67a8]        # 0x408080
  4018d8:	mov    QWORD PTR [rsp+0x20],rax
  4018dd:	call   QWORD PTR [rip+0x79e5]        # 0x4092c8
  4018e3:	mov    rax,QWORD PTR [rip+0x688e]        # 0x408178
  4018ea:	xor    ecx,ecx
  4018ec:	mov    QWORD PTR [rip+0x680d],rsi        # 0x408100
  4018f3:	mov    DWORD PTR [rip+0x6c83],0xc0000409        # 0x408580
  4018fd:	mov    DWORD PTR [rip+0x6c7d],0x1        # 0x408584
  401907:	mov    QWORD PTR [rip+0x6c82],rax        # 0x408590
  40190e:	mov    rax,QWORD PTR [rip+0x275b]        # 0x404070
  401915:	mov    QWORD PTR [rbp-0x10],rax
  401919:	mov    rax,QWORD PTR [rip+0x2760]        # 0x404080
  401920:	mov    QWORD PTR [rbp-0x8],rax
  401924:	call   QWORD PTR [rip+0x79a6]        # 0x4092d0
  40192a:	lea    rcx,[rip+0x386f]        # 0x4051a0
  401931:	call   QWORD PTR [rip+0x79b9]        # 0x4092f0
  401937:	call   QWORD PTR [rip+0x7923]        # 0x409260
  40193d:	mov    edx,0xc0000409
  401942:	mov    rcx,rax
  401945:	call   QWORD PTR [rip+0x7995]        # 0x4092e0
  40194b:	call   0x402bd0
  401950:	mov    rax,QWORD PTR [rbp+0x18]
  401954:	mov    QWORD PTR [rip+0x681d],rax        # 0x408178
  40195b:	lea    rax,[rbp+0x8]
  40195f:	mov    QWORD PTR [rip+0x67b2],rax        # 0x408118
  401966:	jmp    0x4018e3
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	sub    rsp,0x28
  401974:	test   edx,edx
  401976:	je     0x401990
  401978:	cmp    edx,0x3
  40197b:	je     0x401990
  40197d:	mov    eax,0x1
  401982:	add    rsp,0x28
  401986:	ret    
  401987:	nop    WORD PTR [rax+rax*1+0x0]
  401990:	call   0x402680
  401995:	mov    eax,0x1
  40199a:	add    rsp,0x28
  40199e:	ret    
  40199f:	nop
  4019a0:	push   rsi
  4019a1:	push   rbx
  4019a2:	sub    rsp,0x28
  4019a6:	mov    rax,QWORD PTR [rip+0x3a73]        # 0x405420
  4019ad:	cmp    DWORD PTR [rax],0x2
  4019b0:	je     0x4019b8
  4019b2:	mov    DWORD PTR [rax],0x2
  4019b8:	cmp    edx,0x2
  4019bb:	je     0x4019d0
  4019bd:	cmp    edx,0x1
  4019c0:	je     0x401a02
  4019c2:	mov    eax,0x1
  4019c7:	add    rsp,0x28
  4019cb:	pop    rbx
  4019cc:	pop    rsi
  4019cd:	ret    
  4019ce:	xchg   ax,ax
  4019d0:	lea    rbx,[rip+0x8689]        # 0x40a060
  4019d7:	lea    rsi,[rip+0x8682]        # 0x40a060
  4019de:	cmp    rbx,rsi
  4019e1:	je     0x4019c2
  4019e3:	mov    rax,QWORD PTR [rbx]
  4019e6:	test   rax,rax
  4019e9:	je     0x4019ed
  4019eb:	call   rax
  4019ed:	add    rbx,0x8
  4019f1:	cmp    rbx,rsi
  4019f4:	jne    0x4019e3
  4019f6:	mov    eax,0x1
  4019fb:	add    rsp,0x28
  4019ff:	pop    rbx
  401a00:	pop    rsi
  401a01:	ret    
  401a02:	call   0x402680
  401a07:	jmp    0x4019c2
  401a09:	nop    DWORD PTR [rax+0x0]
  401a10:	xor    eax,eax
  401a12:	ret    
  401a13:	nop
  401a14:	nop
  401a15:	nop
  401a16:	nop
  401a17:	nop
  401a18:	nop
  401a19:	nop
  401a1a:	nop
  401a1b:	nop
  401a1c:	nop
  401a1d:	nop
  401a1e:	nop
  401a1f:	nop
  401a20:	sub    rsp,0x58
  401a24:	mov    rax,QWORD PTR [rip+0x6c35]        # 0x408660
  401a2b:	test   rax,rax
  401a2e:	je     0x401a5c
  401a30:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a39:	mov    DWORD PTR [rsp+0x20],ecx
  401a3d:	lea    rcx,[rsp+0x20]
  401a42:	mov    QWORD PTR [rsp+0x28],rdx
  401a47:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a4d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a53:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a59:	call   rax
  401a5b:	nop
  401a5c:	add    rsp,0x58
  401a60:	ret    
  401a61:	nop    DWORD PTR [rax+rax*1+0x0]
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	mov    QWORD PTR [rip+0x6be9],rcx        # 0x408660
  401a77:	jmp    0x402c08
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	push   rsi
  401a81:	push   rbx
  401a82:	sub    rsp,0x78
  401a86:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a8b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a90:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a96:	cmp    DWORD PTR [rcx],0x6
  401a99:	ja     0x401b70
  401a9f:	mov    edx,DWORD PTR [rcx]
  401aa1:	lea    rax,[rip+0x383c]        # 0x4052e4
  401aa8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401aac:	add    rax,rdx
  401aaf:	jmp    rax
  401ab1:	lea    rbx,[rip+0x3708]        # 0x4051c0
  401ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ac0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401ac6:	mov    rsi,QWORD PTR [rcx+0x8]
  401aca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401acf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ad4:	call   0x402c20
  401ad9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ae0:	lea    rcx,[rax+0x60]
  401ae4:	lea    rdx,[rip+0x37cd]        # 0x4052b8
  401aeb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401af1:	mov    r9,rsi
  401af4:	mov    r8,rbx
  401af7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401afd:	call   0x402b98
  401b02:	nop
  401b03:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b08:	xor    eax,eax
  401b0a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b0f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b15:	add    rsp,0x78
  401b19:	pop    rbx
  401b1a:	pop    rsi
  401b1b:	ret    
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x36b8]        # 0x4051df
  401b27:	jmp    0x401ac0
  401b29:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x36c9]        # 0x405200
  401b37:	jmp    0x401ac0
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x3729]        # 0x405270
  401b47:	jmp    0x401ac0
  401b4c:	nop    DWORD PTR [rax+0x0]
  401b50:	lea    rbx,[rip+0x36f1]        # 0x405248
  401b57:	jmp    0x401ac0
  401b5c:	nop    DWORD PTR [rax+0x0]
  401b60:	lea    rbx,[rip+0x36b9]        # 0x405220
  401b67:	jmp    0x401ac0
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	lea    rbx,[rip+0x372f]        # 0x4052a6
  401b77:	jmp    0x401ac0
  401b7c:	nop
  401b7d:	nop
  401b7e:	nop
  401b7f:	nop
  401b80:	fninit 
  401b82:	ret    
  401b83:	nop
  401b84:	nop
  401b85:	nop
  401b86:	nop
  401b87:	nop
  401b88:	nop
  401b89:	nop
  401b8a:	nop
  401b8b:	nop
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	mov    rax,rcx
  401b93:	ret    
  401b94:	xchg   ax,ax
  401b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ba0:	mov    rax,rcx
  401ba3:	ret    
  401ba4:	nop
  401ba5:	nop
  401ba6:	nop
  401ba7:	nop
  401ba8:	nop
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	push   rsi
  401bb1:	push   rbx
  401bb2:	sub    rsp,0x38
  401bb6:	lea    rax,[rsp+0x58]
  401bbb:	mov    rbx,rcx
  401bbe:	mov    QWORD PTR [rsp+0x58],rdx
  401bc3:	mov    QWORD PTR [rsp+0x60],r8
  401bc8:	mov    QWORD PTR [rsp+0x68],r9
  401bcd:	mov    QWORD PTR [rsp+0x28],rax
  401bd2:	call   0x402c20
  401bd7:	lea    rcx,[rip+0x3722]        # 0x405300
  401bde:	lea    r9,[rax+0x60]
  401be2:	mov    r8d,0x1b
  401be8:	mov    edx,0x1
  401bed:	call   0x402b88
  401bf2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bf7:	call   0x402c20
  401bfc:	lea    rcx,[rax+0x60]
  401c00:	mov    rdx,rbx
  401c03:	mov    r8,rsi
  401c06:	call   0x402b40
  401c0b:	call   0x402bd0
  401c10:	nop
  401c11:	nop    DWORD PTR [rax+rax*1+0x0]
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	push   r13
  401c22:	push   r12
  401c24:	push   rbp
  401c25:	push   rdi
  401c26:	push   rsi
  401c27:	push   rbx
  401c28:	sub    rsp,0x58
  401c2c:	movsxd rbp,DWORD PTR [rip+0x6a51]        # 0x408684
  401c33:	mov    rbx,rcx
  401c36:	mov    rsi,rdx
  401c39:	mov    rdi,r8
  401c3c:	test   ebp,ebp
  401c3e:	jle    0x401d3a
  401c44:	mov    rax,QWORD PTR [rip+0x6a3d]        # 0x408688
  401c4b:	xor    r9d,r9d
  401c4e:	add    rax,0x8
  401c52:	mov    r10,QWORD PTR [rax]
  401c55:	cmp    rbx,r10
  401c58:	jb     0x401c6e
  401c5a:	mov    rdx,QWORD PTR [rax+0x8]
  401c5e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c62:	add    r10,r11
  401c65:	cmp    rbx,r10
  401c68:	jb     0x401d20
  401c6e:	add    r9d,0x1
  401c72:	add    rax,0x18
  401c76:	cmp    r9d,ebp
  401c79:	jne    0x401c52
  401c7b:	mov    rcx,rbx
  401c7e:	call   0x402890
  401c83:	test   rax,rax
  401c86:	mov    r12,rax
  401c89:	je     0x401d72
  401c8f:	lea    rbp,[rbp+rbp*2+0x0]
  401c94:	shl    rbp,0x3
  401c98:	mov    r13,rbp
  401c9b:	add    r13,QWORD PTR [rip+0x69e6]        # 0x408688
  401ca2:	mov    QWORD PTR [r13+0x10],rax
  401ca6:	mov    DWORD PTR [r13+0x0],0x0
  401cae:	call   0x4029b0
  401cb3:	mov    edx,DWORD PTR [r12+0xc]
  401cb8:	mov    r8d,0x30
  401cbe:	add    rax,rdx
  401cc1:	lea    rdx,[rsp+0x20]
  401cc6:	mov    QWORD PTR [r13+0x8],rax
  401cca:	mov    rax,QWORD PTR [rip+0x69b7]        # 0x408688
  401cd1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401cd6:	call   QWORD PTR [rip+0x7624]        # 0x409300
  401cdc:	test   rax,rax
  401cdf:	je     0x401d55
  401ce1:	mov    eax,DWORD PTR [rsp+0x44]
  401ce5:	lea    edx,[rax-0x4]
  401ce8:	and    edx,0xfffffffb
  401ceb:	je     0x401d19
  401ced:	sub    eax,0x40
  401cf0:	and    eax,0xffffffbf
  401cf3:	je     0x401d19
  401cf5:	mov    r9,rbp
  401cf8:	add    r9,QWORD PTR [rip+0x6989]        # 0x408688
  401cff:	mov    r8d,0x40
  401d05:	mov    rdx,QWORD PTR [rsp+0x38]
  401d0a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d0f:	call   QWORD PTR [rip+0x75e3]        # 0x4092f8
  401d15:	test   eax,eax
  401d17:	je     0x401d41
  401d19:	add    DWORD PTR [rip+0x6964],0x1        # 0x408684
  401d20:	mov    r8,rdi
  401d23:	mov    rdx,rsi
  401d26:	mov    rcx,rbx
  401d29:	add    rsp,0x58
  401d2d:	pop    rbx
  401d2e:	pop    rsi
  401d2f:	pop    rdi
  401d30:	pop    rbp
  401d31:	pop    r12
  401d33:	pop    r13
  401d35:	jmp    0x402b78
  401d3a:	xor    ebp,ebp
  401d3c:	jmp    0x401c7b
  401d41:	call   QWORD PTR [rip+0x7531]        # 0x409278
  401d47:	lea    rcx,[rip+0x362a]        # 0x405378
  401d4e:	mov    edx,eax
  401d50:	call   0x401bb0
  401d55:	mov    rax,QWORD PTR [rip+0x692c]        # 0x408688
  401d5c:	mov    edx,DWORD PTR [r12+0x8]
  401d61:	lea    rcx,[rip+0x35d8]        # 0x405340
  401d68:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d6d:	call   0x401bb0
  401d72:	lea    rcx,[rip+0x35a7]        # 0x405320
  401d79:	mov    rdx,rbx
  401d7c:	call   0x401bb0
  401d81:	nop
  401d82:	nop    DWORD PTR [rax+0x0]
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	push   rbp
  401d91:	push   r14
  401d93:	push   r13
  401d95:	push   r12
  401d97:	push   rdi
  401d98:	push   rsi
  401d99:	push   rbx
  401d9a:	mov    rbp,rsp
  401d9d:	sub    rsp,0x60
  401da1:	mov    ebx,DWORD PTR [rip+0x68d9]        # 0x408680
  401da7:	test   ebx,ebx
  401da9:	je     0x401dc0
  401dab:	mov    rsp,rbp
  401dae:	pop    rbx
  401daf:	pop    rsi
  401db0:	pop    rdi
  401db1:	pop    r12
  401db3:	pop    r13
  401db5:	pop    r14
  401db7:	pop    rbp
  401db8:	ret    
  401db9:	nop    DWORD PTR [rax+0x0]
  401dc0:	mov    DWORD PTR [rip+0x68b6],0x1        # 0x408680
  401dca:	call   0x4028e0
  401dcf:	cdqe   
  401dd1:	lea    rax,[rax+rax*2]
  401dd5:	lea    rax,[rax*8+0x1e]
  401ddd:	and    rax,0xfffffffffffffff0
  401de1:	call   0x402b00
  401de6:	mov    rsi,QWORD PTR [rip+0x3663]        # 0x405450
  401ded:	mov    rbx,QWORD PTR [rip+0x366c]        # 0x405460
  401df4:	sub    rsp,rax
  401df7:	mov    DWORD PTR [rip+0x6883],0x0        # 0x408684
  401e01:	lea    rax,[rsp+0x20]
  401e06:	mov    QWORD PTR [rip+0x687b],rax        # 0x408688
  401e0d:	mov    rax,rsi
  401e10:	sub    rax,rbx
  401e13:	cmp    rax,0x7
  401e17:	jle    0x401dab
  401e19:	cmp    rax,0xb
  401e1d:	jle    0x401e45
  401e1f:	mov    r11d,DWORD PTR [rbx]
  401e22:	test   r11d,r11d
  401e25:	jne    0x401f70
  401e2b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e2f:	test   r10d,r10d
  401e32:	jne    0x401f70
  401e38:	mov    r9d,DWORD PTR [rbx+0x8]
  401e3c:	test   r9d,r9d
  401e3f:	jne    0x401e5c
  401e41:	add    rbx,0xc
  401e45:	mov    r8d,DWORD PTR [rbx]
  401e48:	test   r8d,r8d
  401e4b:	jne    0x401f70
  401e51:	mov    ecx,DWORD PTR [rbx+0x4]
  401e54:	test   ecx,ecx
  401e56:	jne    0x401f70
  401e5c:	mov    edx,DWORD PTR [rbx+0x8]
  401e5f:	cmp    edx,0x1
  401e62:	jne    0x40207c
  401e68:	add    rbx,0xc
  401e6c:	cmp    rbx,rsi
  401e6f:	jae    0x401dab
  401e75:	mov    r12,QWORD PTR [rip+0x3604]        # 0x405480
  401e7c:	lea    r13,[rbp-0x30]
  401e80:	movabs r14,0xffffffff00000000
  401e8a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e8d:	mov    eax,DWORD PTR [rbx]
  401e8f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e93:	add    rax,r12
  401e96:	add    rcx,r12
  401e99:	cmp    edx,0x10
  401e9c:	mov    r8,QWORD PTR [rax]
  401e9f:	je     0x401fe6
  401ea5:	jbe    0x401fad
  401eab:	cmp    edx,0x20
  401eae:	je     0x40202f
  401eb4:	cmp    edx,0x40
  401eb7:	jne    0x40201b
  401ebd:	sub    r8,rax
  401ec0:	mov    rdx,r13
  401ec3:	mov    rdi,r13
  401ec6:	mov    rax,r8
  401ec9:	add    rax,QWORD PTR [rcx]
  401ecc:	mov    r8d,0x8
  401ed2:	mov    QWORD PTR [rbp-0x30],rax
  401ed6:	call   0x401c20
  401edb:	add    rbx,0xc
  401edf:	cmp    rbx,rsi
  401ee2:	jb     0x401e8a
  401ee4:	mov    eax,DWORD PTR [rip+0x679a]        # 0x408684
  401eea:	xor    ebx,ebx
  401eec:	xor    esi,esi
  401eee:	test   eax,eax
  401ef0:	jle    0x401dab
  401ef6:	mov    r14,QWORD PTR [rip+0x7403]        # 0x409300
  401efd:	lea    r13,[rbp-0x34]
  401f01:	mov    r12,QWORD PTR [rip+0x73f0]        # 0x4092f8
  401f08:	jmp    0x401f23
  401f0a:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	add    esi,0x1
  401f13:	add    rbx,0x18
  401f17:	cmp    esi,DWORD PTR [rip+0x6767]        # 0x408684
  401f1d:	jge    0x401dab
  401f23:	mov    rax,rbx
  401f26:	add    rax,QWORD PTR [rip+0x675b]        # 0x408688
  401f2d:	mov    edx,DWORD PTR [rax]
  401f2f:	test   edx,edx
  401f31:	je     0x401f10
  401f33:	mov    rcx,QWORD PTR [rax+0x8]
  401f37:	mov    r8d,0x30
  401f3d:	mov    rdx,rdi
  401f40:	call   r14
  401f43:	test   rax,rax
  401f46:	je     0x40205e
  401f4c:	mov    rax,QWORD PTR [rip+0x6735]        # 0x408688
  401f53:	mov    r9,r13
  401f56:	mov    rdx,QWORD PTR [rbp-0x18]
  401f5a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f5e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f62:	call   r12
  401f65:	jmp    0x401f10
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	cmp    rbx,rsi
  401f73:	jae    0x401dab
  401f79:	mov    r12,QWORD PTR [rip+0x3500]        # 0x405480
  401f80:	lea    rdi,[rbp-0x30]
  401f84:	mov    ecx,DWORD PTR [rbx+0x4]
  401f87:	mov    eax,DWORD PTR [rbx]
  401f89:	mov    r8d,0x4
  401f8f:	mov    rdx,rdi
  401f92:	add    rbx,0x8
  401f96:	add    rcx,r12
  401f99:	add    eax,DWORD PTR [rcx]
  401f9b:	mov    DWORD PTR [rbp-0x30],eax
  401f9e:	call   0x401c20
  401fa3:	cmp    rbx,rsi
  401fa6:	jb     0x401f84
  401fa8:	jmp    0x401ee4
  401fad:	cmp    edx,0x8
  401fb0:	jne    0x40201b
  401fb2:	movzx  edx,BYTE PTR [rcx]
  401fb5:	mov    rdi,r13
  401fb8:	mov    r10,rdx
  401fbb:	or     r10,0xffffffffffffff00
  401fc2:	test   dl,dl
  401fc4:	cmovs  rdx,r10
  401fc8:	sub    rdx,rax
  401fcb:	lea    rax,[r8+rdx*1]
  401fcf:	mov    r8d,0x1
  401fd5:	mov    rdx,r13
  401fd8:	mov    QWORD PTR [rbp-0x30],rax
  401fdc:	call   0x401c20
  401fe1:	jmp    0x401edb
  401fe6:	movzx  edx,WORD PTR [rcx]
  401fe9:	mov    rdi,r13
  401fec:	mov    r10,rdx
  401fef:	or     r10,0xffffffffffff0000
  401ff6:	test   dx,dx
  401ff9:	cmovs  rdx,r10
  401ffd:	sub    rdx,rax
  402000:	lea    rax,[r8+rdx*1]
  402004:	mov    r8d,0x2
  40200a:	mov    rdx,r13
  40200d:	mov    QWORD PTR [rbp-0x30],rax
  402011:	call   0x401c20
  402016:	jmp    0x401edb
  40201b:	lea    rcx,[rip+0x33b6]        # 0x4053d8
  402022:	mov    QWORD PTR [rbp-0x30],0x0
  40202a:	call   0x401bb0
  40202f:	mov    edx,DWORD PTR [rcx]
  402031:	mov    rdi,r13
  402034:	mov    r10,rdx
  402037:	or     r10,r14
  40203a:	test   edx,edx
  40203c:	cmovs  rdx,r10
  402040:	sub    rdx,rax
  402043:	lea    rax,[r8+rdx*1]
  402047:	mov    r8d,0x4
  40204d:	mov    rdx,r13
  402050:	mov    QWORD PTR [rbp-0x30],rax
  402054:	call   0x401c20
  402059:	jmp    0x401edb
  40205e:	add    rbx,QWORD PTR [rip+0x6623]        # 0x408688
  402065:	lea    rcx,[rip+0x32d4]        # 0x405340
  40206c:	mov    rax,QWORD PTR [rbx+0x10]
  402070:	mov    r8,QWORD PTR [rbx+0x8]
  402074:	mov    edx,DWORD PTR [rax+0x8]
  402077:	call   0x401bb0
  40207c:	lea    rcx,[rip+0x331d]        # 0x4053a0
  402083:	call   0x401bb0
  402088:	nop
  402089:	nop
  40208a:	nop
  40208b:	nop
  40208c:	nop
  40208d:	nop
  40208e:	nop
  40208f:	nop
  402090:	sub    rsp,0x28
  402094:	mov    eax,DWORD PTR [rcx]
  402096:	cmp    eax,0xc0000091
  40209b:	ja     0x402100
  40209d:	cmp    eax,0xc000008d
  4020a2:	jae    0x40211f
  4020a4:	cmp    eax,0xc0000008
  4020a9:	je     0x4021c0
  4020af:	ja     0x402190
  4020b5:	cmp    eax,0x80000002
  4020ba:	je     0x4021c0
  4020c0:	cmp    eax,0xc0000005
  4020c5:	jne    0x40219e
  4020cb:	xor    edx,edx
  4020cd:	mov    ecx,0xb
  4020d2:	call   0x402b60
  4020d7:	cmp    rax,0x1
  4020db:	je     0x402220
  4020e1:	test   rax,rax
  4020e4:	je     0x402200
  4020ea:	mov    ecx,0xb
  4020ef:	call   rax
  4020f1:	xor    eax,eax
  4020f3:	add    rsp,0x28
  4020f7:	ret    
  4020f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	cmp    eax,0xc0000094
  402105:	je     0x4021d0
  40210b:	ja     0x402150
  40210d:	cmp    eax,0xc0000092
  402112:	je     0x4021c0
  402118:	cmp    eax,0xc0000093
  40211d:	jne    0x40219e
  40211f:	xor    edx,edx
  402121:	mov    ecx,0x8
  402126:	call   0x402b60
  40212b:	cmp    rax,0x1
  40212f:	mov    rdx,rax
  402132:	je     0x4021a8
  402134:	test   rdx,rdx
  402137:	mov    eax,0x1
  40213c:	je     0x4020f3
  40213e:	mov    ecx,0x8
  402143:	call   rdx
  402145:	xor    eax,eax
  402147:	add    rsp,0x28
  40214b:	ret    
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	cmp    eax,0xc0000095
  402155:	je     0x4021c0
  402157:	cmp    eax,0xc0000096
  40215c:	jne    0x40219e
  40215e:	xor    edx,edx
  402160:	mov    ecx,0x4
  402165:	call   0x402b60
  40216a:	cmp    rax,0x1
  40216e:	je     0x40220a
  402174:	test   rax,rax
  402177:	je     0x402200
  40217d:	mov    ecx,0x4
  402182:	call   rax
  402184:	xor    eax,eax
  402186:	jmp    0x4020f3
  40218b:	nop    DWORD PTR [rax+rax*1+0x0]
  402190:	cmp    eax,0xc000001d
  402195:	je     0x40215e
  402197:	cmp    eax,0xc000008c
  40219c:	je     0x4021c0
  40219e:	mov    eax,0x1
  4021a3:	add    rsp,0x28
  4021a7:	ret    
  4021a8:	mov    edx,0x1
  4021ad:	mov    ecx,0x8
  4021b2:	call   0x402b60
  4021b7:	call   0x401b80
  4021bc:	nop    DWORD PTR [rax+0x0]
  4021c0:	xor    eax,eax
  4021c2:	add    rsp,0x28
  4021c6:	ret    
  4021c7:	nop    WORD PTR [rax+rax*1+0x0]
  4021d0:	xor    edx,edx
  4021d2:	mov    ecx,0x8
  4021d7:	call   0x402b60
  4021dc:	cmp    rax,0x1
  4021e0:	mov    rdx,rax
  4021e3:	jne    0x402134
  4021e9:	mov    edx,0x1
  4021ee:	mov    ecx,0x8
  4021f3:	call   0x402b60
  4021f8:	xor    eax,eax
  4021fa:	jmp    0x4020f3
  4021ff:	nop
  402200:	mov    eax,0x4
  402205:	add    rsp,0x28
  402209:	ret    
  40220a:	mov    edx,0x1
  40220f:	mov    ecx,0x4
  402214:	call   0x402b60
  402219:	xor    eax,eax
  40221b:	jmp    0x4020f3
  402220:	mov    edx,0x1
  402225:	mov    ecx,0xb
  40222a:	call   0x402b60
  40222f:	xor    eax,eax
  402231:	jmp    0x4020f3
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rdi
  402244:	push   rsi
  402245:	push   rbx
  402246:	sub    rsp,0x20
  40224a:	call   0x4029b0
  40224f:	mov    rbp,rax
  402252:	mov    eax,DWORD PTR [rip+0x6470]        # 0x4086c8
  402258:	test   eax,eax
  40225a:	jne    0x402281
  40225c:	test   rbp,rbp
  40225f:	je     0x402281
  402261:	lea    rcx,[rip+0x31a8]        # 0x405410
  402268:	mov    DWORD PTR [rip+0x6456],0x1        # 0x4086c8
  402272:	call   0x4027f0
  402277:	test   rax,rax
  40227a:	je     0x402290
  40227c:	mov    eax,0x1
  402281:	add    rsp,0x20
  402285:	pop    rbx
  402286:	pop    rsi
  402287:	pop    rdi
  402288:	pop    rbp
  402289:	pop    r12
  40228b:	ret    
  40228c:	nop    DWORD PTR [rax+0x0]
  402290:	lea    rbx,[rip+0x6569]        # 0x408800
  402297:	mov    ecx,0x30
  40229c:	lea    rdx,[rip+0x645d]        # 0x408700
  4022a3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402090
  4022aa:	xor    esi,esi
  4022ac:	mov    rdi,rbx
  4022af:	rep stos QWORD PTR es:[rdi],rax
  4022b2:	mov    rdi,rdx
  4022b5:	sub    r12,rbp
  4022b8:	mov    cl,0x20
  4022ba:	rep stos QWORD PTR es:[rdi],rax
  4022bd:	mov    rdi,rdx
  4022c0:	jmp    0x4022f0
  4022c2:	mov    BYTE PTR [rdi],0x9
  4022c5:	mov    DWORD PTR [rdi+0x4],r12d
  4022c9:	add    rsi,0x1
  4022cd:	mov    edx,DWORD PTR [rax+0xc]
  4022d0:	add    rbx,0xc
  4022d4:	mov    DWORD PTR [rbx-0xc],edx
  4022d7:	add    edx,DWORD PTR [rax+0x8]
  4022da:	mov    rax,rdi
  4022dd:	sub    rax,rbp
  4022e0:	add    rdi,0x8
  4022e4:	mov    DWORD PTR [rbx-0x4],eax
  4022e7:	mov    DWORD PTR [rbx-0x8],edx
  4022ea:	cmp    rsi,0x20
  4022ee:	je     0x402325
  4022f0:	mov    rcx,rsi
  4022f3:	call   0x402920
  4022f8:	test   rax,rax
  4022fb:	jne    0x4022c2
  4022fd:	test   rsi,rsi
  402300:	je     0x40227c
  402306:	mov    edx,esi
  402308:	nop    DWORD PTR [rax+rax*1+0x0]
  402310:	mov    r8,rbp
  402313:	lea    rcx,[rip+0x64e6]        # 0x408800
  40231a:	call   QWORD PTR [rip+0x6f90]        # 0x4092b0
  402320:	jmp    0x40227c
  402325:	mov    edx,0x20
  40232a:	jmp    0x402310
  40232c:	nop    DWORD PTR [rax+0x0]
  402330:	push   rbx
  402331:	sub    rsp,0x20
  402335:	mov    rdx,QWORD PTR [rcx]
  402338:	mov    eax,DWORD PTR [rdx]
  40233a:	mov    r8d,eax
  40233d:	and    r8d,0x20ffffff
  402344:	cmp    r8d,0x20474343
  40234b:	je     0x402450
  402351:	cmp    eax,0xc0000091
  402356:	mov    rbx,rcx
  402359:	ja     0x4023e0
  40235f:	cmp    eax,0xc000008d
  402364:	jae    0x4023f7
  40236a:	cmp    eax,0xc0000008
  40236f:	je     0x4023a3
  402371:	ja     0x4023b0
  402373:	cmp    eax,0x80000002
  402378:	je     0x4023a3
  40237a:	cmp    eax,0xc0000005
  40237f:	jne    0x4023c2
  402381:	xor    edx,edx
  402383:	mov    ecx,0xb
  402388:	call   0x402b60
  40238d:	cmp    rax,0x1
  402391:	je     0x4024c0
  402397:	test   rax,rax
  40239a:	je     0x4023c2
  40239c:	mov    ecx,0xb
  4023a1:	call   rax
  4023a3:	mov    eax,0xffffffff
  4023a8:	add    rsp,0x20
  4023ac:	pop    rbx
  4023ad:	ret    
  4023ae:	xchg   ax,ax
  4023b0:	cmp    eax,0xc000001d
  4023b5:	je     0x402476
  4023bb:	cmp    eax,0xc000008c
  4023c0:	je     0x4023a3
  4023c2:	mov    rax,QWORD PTR [rip+0x62f7]        # 0x4086c0
  4023c9:	test   rax,rax
  4023cc:	je     0x4023a8
  4023ce:	mov    rcx,rbx
  4023d1:	add    rsp,0x20
  4023d5:	pop    rbx
  4023d6:	rex.W jmp rax
  4023d9:	nop    DWORD PTR [rax+0x0]
  4023e0:	cmp    eax,0xc0000094
  4023e5:	je     0x402422
  4023e7:	ja     0x402460
  4023e9:	cmp    eax,0xc0000092
  4023ee:	je     0x4023a3
  4023f0:	cmp    eax,0xc0000093
  4023f5:	jne    0x4023c2
  4023f7:	xor    edx,edx
  4023f9:	mov    ecx,0x8
  4023fe:	call   0x402b60
  402403:	cmp    rax,0x1
  402407:	jne    0x402434
  402409:	mov    edx,0x1
  40240e:	mov    ecx,0x8
  402413:	call   0x402b60
  402418:	call   0x401b80
  40241d:	jmp    0x4023a3
  402422:	xor    edx,edx
  402424:	mov    ecx,0x8
  402429:	call   0x402b60
  40242e:	cmp    rax,0x1
  402432:	je     0x4024a2
  402434:	test   rax,rax
  402437:	je     0x4023c2
  402439:	mov    ecx,0x8
  40243e:	call   rax
  402440:	mov    eax,0xffffffff
  402445:	jmp    0x4023a8
  40244a:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	test   BYTE PTR [rdx+0x4],0x1
  402454:	jne    0x402351
  40245a:	jmp    0x4023a3
  40245f:	nop
  402460:	cmp    eax,0xc0000095
  402465:	je     0x4023a3
  40246b:	cmp    eax,0xc0000096
  402470:	jne    0x4023c2
  402476:	xor    edx,edx
  402478:	mov    ecx,0x4
  40247d:	call   0x402b60
  402482:	cmp    rax,0x1
  402486:	je     0x4024d4
  402488:	test   rax,rax
  40248b:	je     0x4023c2
  402491:	mov    ecx,0x4
  402496:	call   rax
  402498:	mov    eax,0xffffffff
  40249d:	jmp    0x4023a8
  4024a2:	mov    edx,0x1
  4024a7:	mov    ecx,0x8
  4024ac:	call   0x402b60
  4024b1:	jmp    0x4023a3
  4024b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024c0:	mov    edx,0x1
  4024c5:	mov    ecx,0xb
  4024ca:	call   0x402b60
  4024cf:	jmp    0x4023a3
  4024d4:	mov    edx,0x1
  4024d9:	mov    ecx,0x4
  4024de:	call   0x402b60
  4024e3:	jmp    0x4023a3
  4024e8:	nop
  4024e9:	nop
  4024ea:	nop
  4024eb:	nop
  4024ec:	nop
  4024ed:	nop
  4024ee:	nop
  4024ef:	nop
  4024f0:	push   rbp
  4024f1:	push   rdi
  4024f2:	push   rsi
  4024f3:	push   rbx
  4024f4:	sub    rsp,0x28
  4024f8:	lea    rcx,[rip+0x64a1]        # 0x4089a0
  4024ff:	call   QWORD PTR [rip+0x6d53]        # 0x409258
  402505:	mov    rbx,QWORD PTR [rip+0x6474]        # 0x408980
  40250c:	test   rbx,rbx
  40250f:	je     0x402544
  402511:	mov    rbp,QWORD PTR [rip+0x6dd0]        # 0x4092e8
  402518:	mov    rdi,QWORD PTR [rip+0x6d59]        # 0x409278
  40251f:	nop
  402520:	mov    ecx,DWORD PTR [rbx]
  402522:	call   rbp
  402524:	mov    rsi,rax
  402527:	call   rdi
  402529:	test   eax,eax
  40252b:	jne    0x40253b
  40252d:	test   rsi,rsi
  402530:	je     0x40253b
  402532:	mov    rax,QWORD PTR [rbx+0x8]
  402536:	mov    rcx,rsi
  402539:	call   rax
  40253b:	mov    rbx,QWORD PTR [rbx+0x10]
  40253f:	test   rbx,rbx
  402542:	jne    0x402520
  402544:	mov    rax,QWORD PTR [rip+0x6d55]        # 0x4092a0
  40254b:	lea    rcx,[rip+0x644e]        # 0x4089a0
  402552:	add    rsp,0x28
  402556:	pop    rbx
  402557:	pop    rsi
  402558:	pop    rdi
  402559:	pop    rbp
  40255a:	rex.W jmp rax
  40255d:	nop    DWORD PTR [rax]
  402560:	push   rdi
  402561:	push   rsi
  402562:	push   rbx
  402563:	sub    rsp,0x20
  402567:	mov    eax,DWORD PTR [rip+0x641b]        # 0x408988
  40256d:	test   eax,eax
  40256f:	jne    0x402580
  402571:	add    rsp,0x20
  402575:	pop    rbx
  402576:	pop    rsi
  402577:	pop    rdi
  402578:	ret    
  402579:	nop    DWORD PTR [rax+0x0]
  402580:	mov    rsi,rdx
  402583:	mov    edi,ecx
  402585:	mov    edx,0x18
  40258a:	mov    ecx,0x1
  40258f:	call   0x402bc8
  402594:	test   rax,rax
  402597:	mov    rbx,rax
  40259a:	je     0x4025d8
  40259c:	mov    DWORD PTR [rax],edi
  40259e:	mov    QWORD PTR [rax+0x8],rsi
  4025a2:	lea    rcx,[rip+0x63f7]        # 0x4089a0
  4025a9:	call   QWORD PTR [rip+0x6ca9]        # 0x409258
  4025af:	mov    rax,QWORD PTR [rip+0x63ca]        # 0x408980
  4025b6:	lea    rcx,[rip+0x63e3]        # 0x4089a0
  4025bd:	mov    QWORD PTR [rip+0x63bc],rbx        # 0x408980
  4025c4:	mov    QWORD PTR [rbx+0x10],rax
  4025c8:	call   QWORD PTR [rip+0x6cd2]        # 0x4092a0
  4025ce:	xor    eax,eax
  4025d0:	add    rsp,0x20
  4025d4:	pop    rbx
  4025d5:	pop    rsi
  4025d6:	pop    rdi
  4025d7:	ret    
  4025d8:	mov    eax,0xffffffff
  4025dd:	jmp    0x402571
  4025df:	nop
  4025e0:	push   rbx
  4025e1:	sub    rsp,0x20
  4025e5:	mov    eax,DWORD PTR [rip+0x639d]        # 0x408988
  4025eb:	test   eax,eax
  4025ed:	jne    0x402600
  4025ef:	xor    eax,eax
  4025f1:	add    rsp,0x20
  4025f5:	pop    rbx
  4025f6:	ret    
  4025f7:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    ebx,ecx
  402602:	lea    rcx,[rip+0x6397]        # 0x4089a0
  402609:	call   QWORD PTR [rip+0x6c49]        # 0x409258
  40260f:	mov    rdx,QWORD PTR [rip+0x636a]        # 0x408980
  402616:	test   rdx,rdx
  402619:	je     0x402637
  40261b:	mov    eax,DWORD PTR [rdx]
  40261d:	cmp    eax,ebx
  40261f:	jne    0x40262e
  402621:	jmp    0x40266f
  402623:	mov    r8d,DWORD PTR [rax]
  402626:	cmp    r8d,ebx
  402629:	je     0x402650
  40262b:	mov    rdx,rax
  40262e:	mov    rax,QWORD PTR [rdx+0x10]
  402632:	test   rax,rax
  402635:	jne    0x402623
  402637:	lea    rcx,[rip+0x6362]        # 0x4089a0
  40263e:	call   QWORD PTR [rip+0x6c5c]        # 0x4092a0
  402644:	xor    eax,eax
  402646:	add    rsp,0x20
  40264a:	pop    rbx
  40264b:	ret    
  40264c:	nop    DWORD PTR [rax+0x0]
  402650:	mov    rcx,rax
  402653:	mov    rax,QWORD PTR [rax+0x10]
  402657:	mov    QWORD PTR [rdx+0x10],rax
  40265b:	call   0x402b90
  402660:	lea    rcx,[rip+0x6339]        # 0x4089a0
  402667:	call   QWORD PTR [rip+0x6c33]        # 0x4092a0
  40266d:	jmp    0x402644
  40266f:	mov    rax,QWORD PTR [rdx+0x10]
  402673:	mov    rcx,rdx
  402676:	mov    QWORD PTR [rip+0x6303],rax        # 0x408980
  40267d:	jmp    0x40265b
  40267f:	nop
  402680:	push   rbx
  402681:	sub    rsp,0x20
  402685:	cmp    edx,0x1
  402688:	je     0x402720
  40268e:	jb     0x4026c0
  402690:	cmp    edx,0x2
  402693:	je     0x4026b0
  402695:	cmp    edx,0x3
  402698:	jne    0x4026b5
  40269a:	mov    eax,DWORD PTR [rip+0x62e8]        # 0x408988
  4026a0:	test   eax,eax
  4026a2:	je     0x4026b5
  4026a4:	call   0x4024f0
  4026a9:	jmp    0x4026b5
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4026b0:	call   0x401b80
  4026b5:	mov    eax,0x1
  4026ba:	add    rsp,0x20
  4026be:	pop    rbx
  4026bf:	ret    
  4026c0:	mov    eax,DWORD PTR [rip+0x62c2]        # 0x408988
  4026c6:	test   eax,eax
  4026c8:	jne    0x402750
  4026ce:	mov    eax,DWORD PTR [rip+0x62b4]        # 0x408988
  4026d4:	cmp    eax,0x1
  4026d7:	jne    0x4026b5
  4026d9:	mov    rcx,QWORD PTR [rip+0x62a0]        # 0x408980
  4026e0:	test   rcx,rcx
  4026e3:	je     0x4026f6
  4026e5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026e9:	call   0x402b90
  4026ee:	test   rbx,rbx
  4026f1:	mov    rcx,rbx
  4026f4:	jne    0x4026e5
  4026f6:	lea    rcx,[rip+0x62a3]        # 0x4089a0
  4026fd:	mov    QWORD PTR [rip+0x6278],0x0        # 0x408980
  402708:	mov    DWORD PTR [rip+0x6276],0x0        # 0x408988
  402712:	call   QWORD PTR [rip+0x6b38]        # 0x409250
  402718:	jmp    0x4026b5
  40271a:	nop    WORD PTR [rax+rax*1+0x0]
  402720:	mov    eax,DWORD PTR [rip+0x6262]        # 0x408988
  402726:	test   eax,eax
  402728:	je     0x402740
  40272a:	mov    eax,0x1
  40272f:	mov    DWORD PTR [rip+0x624f],0x1        # 0x408988
  402739:	add    rsp,0x20
  40273d:	pop    rbx
  40273e:	ret    
  40273f:	nop
  402740:	lea    rcx,[rip+0x6259]        # 0x4089a0
  402747:	call   QWORD PTR [rip+0x6b4b]        # 0x409298
  40274d:	jmp    0x40272a
  40274f:	nop
  402750:	call   0x4024f0
  402755:	jmp    0x4026ce
  40275a:	nop
  40275b:	nop
  40275c:	nop
  40275d:	nop
  40275e:	nop
  40275f:	nop
  402760:	movsxd rax,DWORD PTR [rcx+0x3c]
  402764:	add    rcx,rax
  402767:	xor    eax,eax
  402769:	cmp    DWORD PTR [rcx],0x4550
  40276f:	je     0x402773
  402771:	repz ret 
  402773:	xor    eax,eax
  402775:	cmp    WORD PTR [rcx+0x18],0x20b
  40277b:	sete   al
  40277e:	ret    
  40277f:	nop
  402780:	cmp    WORD PTR [rcx],0x5a4d
  402785:	je     0x402790
  402787:	xor    eax,eax
  402789:	ret    
  40278a:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	jmp    0x402760
  402792:	nop    DWORD PTR [rax+0x0]
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027a4:	add    rcx,rax
  4027a7:	movzx  eax,WORD PTR [rcx+0x14]
  4027ab:	lea    rax,[rcx+rax*1+0x18]
  4027b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4027b4:	test   ecx,ecx
  4027b6:	je     0x4027e1
  4027b8:	sub    ecx,0x1
  4027bb:	lea    rcx,[rcx+rcx*4]
  4027bf:	lea    r9,[rax+rcx*8+0x28]
  4027c4:	mov    r8d,DWORD PTR [rax+0xc]
  4027c8:	cmp    r8,rdx
  4027cb:	mov    rcx,r8
  4027ce:	ja     0x4027d8
  4027d0:	add    ecx,DWORD PTR [rax+0x8]
  4027d3:	cmp    rdx,rcx
  4027d6:	jb     0x4027e3
  4027d8:	add    rax,0x28
  4027dc:	cmp    rax,r9
  4027df:	jne    0x4027c4
  4027e1:	xor    eax,eax
  4027e3:	repz ret 
  4027e5:	nop
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	push   rdi
  4027f1:	push   rsi
  4027f2:	push   rbx
  4027f3:	sub    rsp,0x20
  4027f7:	mov    rsi,rcx
  4027fa:	call   0x402b50
  4027ff:	cmp    rax,0x8
  402803:	ja     0x402820
  402805:	mov    rbx,QWORD PTR [rip+0x2c74]        # 0x405480
  40280c:	xor    edi,edi
  40280e:	cmp    WORD PTR [rbx],0x5a4d
  402813:	je     0x402830
  402815:	mov    rax,rdi
  402818:	add    rsp,0x20
  40281c:	pop    rbx
  40281d:	pop    rsi
  40281e:	pop    rdi
  40281f:	ret    
  402820:	xor    edi,edi
  402822:	mov    rax,rdi
  402825:	add    rsp,0x20
  402829:	pop    rbx
  40282a:	pop    rsi
  40282b:	pop    rdi
  40282c:	ret    
  40282d:	nop    DWORD PTR [rax]
  402830:	mov    rcx,rbx
  402833:	call   0x402760
  402838:	test   eax,eax
  40283a:	je     0x402815
  40283c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402840:	add    rdx,rbx
  402843:	movzx  eax,WORD PTR [rdx+0x14]
  402847:	lea    rbx,[rdx+rax*1+0x18]
  40284c:	movzx  eax,WORD PTR [rdx+0x6]
  402850:	test   eax,eax
  402852:	je     0x402815
  402854:	sub    eax,0x1
  402857:	lea    rax,[rax+rax*4]
  40285b:	lea    rdi,[rbx+rax*8+0x28]
  402860:	jmp    0x40286b
  402862:	add    rbx,0x28
  402866:	cmp    rbx,rdi
  402869:	je     0x402820
  40286b:	mov    r8d,0x8
  402871:	mov    rdx,rsi
  402874:	mov    rcx,rbx
  402877:	call   0x402b48
  40287c:	test   eax,eax
  40287e:	jne    0x402862
  402880:	mov    rdi,rbx
  402883:	mov    rax,rdi
  402886:	add    rsp,0x20
  40288a:	pop    rbx
  40288b:	pop    rsi
  40288c:	pop    rdi
  40288d:	ret    
  40288e:	xchg   ax,ax
  402890:	push   rsi
  402891:	push   rbx
  402892:	sub    rsp,0x28
  402896:	mov    rbx,QWORD PTR [rip+0x2be3]        # 0x405480
  40289d:	cmp    WORD PTR [rbx],0x5a4d
  4028a2:	je     0x4028b0
  4028a4:	xor    eax,eax
  4028a6:	add    rsp,0x28
  4028aa:	pop    rbx
  4028ab:	pop    rsi
  4028ac:	ret    
  4028ad:	nop    DWORD PTR [rax]
  4028b0:	mov    rsi,rcx
  4028b3:	mov    rcx,rbx
  4028b6:	call   0x402760
  4028bb:	test   eax,eax
  4028bd:	je     0x4028a4
  4028bf:	sub    rsi,rbx
  4028c2:	mov    rcx,rbx
  4028c5:	mov    rdx,rsi
  4028c8:	add    rsp,0x28
  4028cc:	pop    rbx
  4028cd:	pop    rsi
  4028ce:	jmp    0x4027a0
  4028d3:	nop    DWORD PTR [rax]
  4028d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028e0:	push   rbx
  4028e1:	sub    rsp,0x20
  4028e5:	mov    rbx,QWORD PTR [rip+0x2b94]        # 0x405480
  4028ec:	xor    eax,eax
  4028ee:	cmp    WORD PTR [rbx],0x5a4d
  4028f3:	je     0x402900
  4028f5:	add    rsp,0x20
  4028f9:	pop    rbx
  4028fa:	ret    
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	mov    rcx,rbx
  402903:	call   0x402760
  402908:	test   eax,eax
  40290a:	je     0x4028f5
  40290c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402910:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402915:	add    rsp,0x20
  402919:	pop    rbx
  40291a:	ret    
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	push   rdi
  402921:	push   rsi
  402922:	push   rbx
  402923:	sub    rsp,0x20
  402927:	mov    rsi,QWORD PTR [rip+0x2b52]        # 0x405480
  40292e:	xor    edi,edi
  402930:	mov    rbx,rcx
  402933:	cmp    WORD PTR [rsi],0x5a4d
  402938:	je     0x402945
  40293a:	mov    rax,rdi
  40293d:	add    rsp,0x20
  402941:	pop    rbx
  402942:	pop    rsi
  402943:	pop    rdi
  402944:	ret    
  402945:	mov    rcx,rsi
  402948:	call   0x402760
  40294d:	test   eax,eax
  40294f:	je     0x40293a
  402951:	movsxd rax,DWORD PTR [rsi+0x3c]
  402955:	add    rsi,rax
  402958:	movzx  eax,WORD PTR [rsi+0x14]
  40295c:	lea    rdx,[rsi+rax*1+0x18]
  402961:	movzx  eax,WORD PTR [rsi+0x6]
  402965:	test   eax,eax
  402967:	je     0x40293a
  402969:	sub    eax,0x1
  40296c:	lea    rax,[rax+rax*4]
  402970:	lea    rax,[rdx+rax*8+0x28]
  402975:	test   BYTE PTR [rdx+0x27],0x20
  402979:	je     0x402984
  40297b:	test   rbx,rbx
  40297e:	je     0x4029a0
  402980:	sub    rbx,0x1
  402984:	add    rdx,0x28
  402988:	cmp    rdx,rax
  40298b:	jne    0x402975
  40298d:	xor    edi,edi
  40298f:	mov    rax,rdi
  402992:	add    rsp,0x20
  402996:	pop    rbx
  402997:	pop    rsi
  402998:	pop    rdi
  402999:	ret    
  40299a:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	mov    rdi,rdx
  4029a3:	mov    rax,rdi
  4029a6:	add    rsp,0x20
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	pop    rdi
  4029ad:	ret    
  4029ae:	xchg   ax,ax
  4029b0:	push   rsi
  4029b1:	push   rbx
  4029b2:	sub    rsp,0x28
  4029b6:	mov    rsi,QWORD PTR [rip+0x2ac3]        # 0x405480
  4029bd:	xor    ebx,ebx
  4029bf:	cmp    WORD PTR [rsi],0x5a4d
  4029c4:	je     0x4029d0
  4029c6:	mov    rax,rbx
  4029c9:	add    rsp,0x28
  4029cd:	pop    rbx
  4029ce:	pop    rsi
  4029cf:	ret    
  4029d0:	mov    rcx,rsi
  4029d3:	call   0x402760
  4029d8:	test   eax,eax
  4029da:	cmovne rbx,rsi
  4029de:	mov    rax,rbx
  4029e1:	add    rsp,0x28
  4029e5:	pop    rbx
  4029e6:	pop    rsi
  4029e7:	ret    
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	push   rsi
  4029f1:	push   rbx
  4029f2:	sub    rsp,0x28
  4029f6:	mov    rbx,QWORD PTR [rip+0x2a83]        # 0x405480
  4029fd:	xor    eax,eax
  4029ff:	cmp    WORD PTR [rbx],0x5a4d
  402a04:	je     0x402a10
  402a06:	add    rsp,0x28
  402a0a:	pop    rbx
  402a0b:	pop    rsi
  402a0c:	ret    
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rsi,rcx
  402a13:	mov    rcx,rbx
  402a16:	call   0x402760
  402a1b:	test   eax,eax
  402a1d:	je     0x402a06
  402a1f:	sub    rsi,rbx
  402a22:	mov    rcx,rbx
  402a25:	mov    rdx,rsi
  402a28:	call   0x4027a0
  402a2d:	test   rax,rax
  402a30:	je     0x402a41
  402a32:	mov    eax,DWORD PTR [rax+0x24]
  402a35:	not    eax
  402a37:	shr    eax,0x1f
  402a3a:	add    rsp,0x28
  402a3e:	pop    rbx
  402a3f:	pop    rsi
  402a40:	ret    
  402a41:	xor    eax,eax
  402a43:	jmp    0x402a06
  402a45:	nop
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rbp
  402a51:	push   rdi
  402a52:	push   rsi
  402a53:	push   rbx
  402a54:	sub    rsp,0x28
  402a58:	mov    rdi,QWORD PTR [rip+0x2a21]        # 0x405480
  402a5f:	xor    ebp,ebp
  402a61:	mov    esi,ecx
  402a63:	cmp    WORD PTR [rdi],0x5a4d
  402a68:	je     0x402a80
  402a6a:	mov    rax,rbp
  402a6d:	add    rsp,0x28
  402a71:	pop    rbx
  402a72:	pop    rsi
  402a73:	pop    rdi
  402a74:	pop    rbp
  402a75:	ret    
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    rcx,rdi
  402a83:	call   0x402760
  402a88:	test   eax,eax
  402a8a:	je     0x402a6a
  402a8c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a90:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a97:	test   edx,edx
  402a99:	je     0x402a6a
  402a9b:	mov    ebx,edx
  402a9d:	mov    rcx,rdi
  402aa0:	mov    rdx,rbx
  402aa3:	call   0x4027a0
  402aa8:	test   rax,rax
  402aab:	je     0x402a6a
  402aad:	add    rbx,rdi
  402ab0:	mov    rdx,rbx
  402ab3:	jne    0x402ac7
  402ab5:	jmp    0x402a6a
  402ab7:	nop    WORD PTR [rax+rax*1+0x0]
  402ac0:	sub    esi,0x1
  402ac3:	add    rdx,0x14
  402ac7:	mov    ecx,DWORD PTR [rdx+0x4]
  402aca:	test   ecx,ecx
  402acc:	jne    0x402ad5
  402ace:	mov    eax,DWORD PTR [rdx+0xc]
  402ad1:	test   eax,eax
  402ad3:	je     0x402af0
  402ad5:	test   esi,esi
  402ad7:	jg     0x402ac0
  402ad9:	mov    ebp,DWORD PTR [rdx+0xc]
  402adc:	add    rbp,rdi
  402adf:	mov    rax,rbp
  402ae2:	add    rsp,0x28
  402ae6:	pop    rbx
  402ae7:	pop    rsi
  402ae8:	pop    rdi
  402ae9:	pop    rbp
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	xor    ebp,ebp
  402af2:	mov    rax,rbp
  402af5:	add    rsp,0x28
  402af9:	pop    rbx
  402afa:	pop    rsi
  402afb:	pop    rdi
  402afc:	pop    rbp
  402afd:	ret    
  402afe:	nop
  402aff:	nop
  402b00:	push   rcx
  402b01:	push   rax
  402b02:	cmp    rax,0x1000
  402b08:	lea    rcx,[rsp+0x18]
  402b0d:	jb     0x402b28
  402b0f:	sub    rcx,0x1000
  402b16:	or     QWORD PTR [rcx],0x0
  402b1a:	sub    rax,0x1000
  402b20:	cmp    rax,0x1000
  402b26:	ja     0x402b0f
  402b28:	sub    rcx,rax
  402b2b:	or     QWORD PTR [rcx],0x0
  402b2f:	pop    rax
  402b30:	pop    rcx
  402b31:	ret    
  402b32:	nop
  402b33:	nop
  402b34:	nop
  402b35:	nop
  402b36:	nop
  402b37:	nop
  402b38:	nop
  402b39:	nop
  402b3a:	nop
  402b3b:	nop
  402b3c:	nop
  402b3d:	nop
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x68da]        # 0x409420
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x68ca]        # 0x409418
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x68ba]        # 0x409410
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x68aa]        # 0x409408
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x689a]        # 0x409400
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x688a]        # 0x4093f8
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x687a]        # 0x4093f0
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x686a]        # 0x4093e8
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x685a]        # 0x4093e0
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x684a]        # 0x4093d8
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x683a]        # 0x4093d0
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x682a]        # 0x4093c8
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x681a]        # 0x4093c0
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x680a]        # 0x4093b8
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x67fa]        # 0x4093b0
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x67ea]        # 0x4093a8
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x67da]        # 0x4093a0
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x67ca]        # 0x409398
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x67ba]        # 0x409390
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0x67aa]        # 0x409388
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0x679a]        # 0x409380
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0x678a]        # 0x409378
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x677a]        # 0x409370
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x6762]        # 0x409360
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x6752]        # 0x409358
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x673a]        # 0x409348
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x672a]        # 0x409340
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x671a]        # 0x409338
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x670a]        # 0x409330
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x66f2]        # 0x409320
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x66e2]        # 0x409318
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x66d2]        # 0x409310
  402c3e:	nop
  402c3f:	nop
  402c40:	mov    rax,QWORD PTR [rip+0x5da9]        # 0x4089f0
  402c47:	ret    
  402c48:	nop    DWORD PTR [rax+rax*1+0x0]
  402c50:	mov    rax,rcx
  402c53:	xchg   QWORD PTR [rip+0x5d96],rax        # 0x4089f0
  402c5a:	ret    
  402c5b:	nop
  402c5c:	nop
  402c5d:	nop
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x669a]        # 0x409300
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x668a]        # 0x4092f8
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x667a]        # 0x4092f0
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x666a]        # 0x4092e8
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x665a]        # 0x4092e0
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x664a]        # 0x4092d8
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x663a]        # 0x4092d0
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x662a]        # 0x4092c8
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x661a]        # 0x4092c0
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x660a]        # 0x4092b8
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x65fa]        # 0x4092b0
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0x65ea]        # 0x4092a8
  402cbe:	nop
  402cbf:	nop
  402cc0:	jmp    QWORD PTR [rip+0x65da]        # 0x4092a0
  402cc6:	nop
  402cc7:	nop
  402cc8:	jmp    QWORD PTR [rip+0x65ca]        # 0x409298
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0x65ba]        # 0x409290
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0x65aa]        # 0x409288
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0x659a]        # 0x409280
  402ce6:	nop
  402ce7:	nop
  402ce8:	jmp    QWORD PTR [rip+0x658a]        # 0x409278
  402cee:	nop
  402cef:	nop
  402cf0:	jmp    QWORD PTR [rip+0x657a]        # 0x409270
  402cf6:	nop
  402cf7:	nop
  402cf8:	jmp    QWORD PTR [rip+0x656a]        # 0x409268
  402cfe:	nop
  402cff:	nop
  402d00:	jmp    QWORD PTR [rip+0x655a]        # 0x409260
  402d06:	nop
  402d07:	nop
  402d08:	jmp    QWORD PTR [rip+0x654a]        # 0x409258
  402d0e:	nop
  402d0f:	nop
  402d10:	jmp    QWORD PTR [rip+0x653a]        # 0x409250
  402d16:	nop
  402d17:	nop
  402d18:	nop    DWORD PTR [rax+rax*1+0x0]
  402d20:	push   r15
  402d22:	push   r14
  402d24:	push   r13
  402d26:	push   r12
  402d28:	push   rbp
  402d29:	push   rdi
  402d2a:	push   rsi
  402d2b:	push   rbx
  402d2c:	sub    rsp,0x1e8
  402d33:	movaps XMMWORD PTR [rsp+0x1c0],xmm6
  402d3b:	movaps XMMWORD PTR [rsp+0x1d0],xmm7
  402d43:	mov    r12d,ecx
  402d46:	mov    rbp,rdx
  402d49:	call   0x401750
  402d4e:	cmp    r12d,0x1
  402d52:	jle    0x403071
  402d58:	lea    r13,[rip+0x22e7]        # 0x405046
  402d5f:	xor    ebx,ebx
  402d61:	mov    eax,0x1
  402d66:	lea    r11,[rip+0x22e1]        # 0x40504e
  402d6d:	mov    r10d,0x3
  402d73:	lea    r14d,[r12-0x1]
  402d78:	jmp    0x402d95
  402d7a:	nop    WORD PTR [rax+rax*1+0x0]
  402d80:	cmp    r14d,eax
  402d83:	jle    0x402db2
  402d85:	add    eax,0x1
  402d88:	mov    r13,QWORD PTR [rbp+r8*1+0x8]
  402d8d:	add    eax,0x1
  402d90:	cmp    r12d,eax
  402d93:	jle    0x402dc6
  402d95:	movsxd rdx,eax
  402d98:	mov    rdi,r11
  402d9b:	mov    rcx,r10
  402d9e:	lea    r8,[rdx*8+0x0]
  402da6:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
  402dab:	mov    rsi,rdx
  402dae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402db0:	je     0x402d80
  402db2:	test   rbx,rbx
  402db5:	jne    0x403071
  402dbb:	add    eax,0x1
  402dbe:	mov    rbx,rdx
  402dc1:	cmp    r12d,eax
  402dc4:	jg     0x402d95
  402dc6:	test   rbx,rbx
  402dc9:	je     0x403071
  402dcf:	mov    rax,QWORD PTR [rip+0x655a]        # 0x409330
  402dd6:	lea    rsi,[rsp+0x90]
  402dde:	mov    rdi,rsi
  402de1:	mov    r15,rax
  402de4:	mov    QWORD PTR [rsp+0x60],rax
  402de9:	call   rax
  402deb:	lea    rdx,[rip+0x2266]        # 0x405058
  402df2:	lea    rcx,[rax+0x30]
  402df6:	mov    r8,r13
  402df9:	call   0x402b98
  402dfe:	xor    eax,eax
  402e00:	mov    ecx,0x14
  402e05:	rep stos DWORD PTR es:[rdi],eax
  402e07:	call   r15
  402e0a:	mov    edx,0x50
  402e0f:	mov    r8,rax
  402e12:	mov    rcx,rsi
  402e15:	call   0x402ba8
  402e1a:	test   rax,rax
  402e1d:	je     0x403097
  402e23:	lea    rax,[rsi+0x68]
  402e27:	lea    rdx,[rsi+0x70]
  402e2b:	lea    r9,[rsi+0x50]
  402e2f:	lea    r8,[rsi+0x74]
  402e33:	lea    rcx,[rip+0x2243]        # 0x40507d
  402e3a:	mov    QWORD PTR [rsp+0x30],rax
  402e3f:	lea    rax,[rsi+0x58]
  402e43:	mov    QWORD PTR [rsp+0x28],rax
  402e48:	lea    rax,[rsi+0x60]
  402e4c:	mov    QWORD PTR [rsp+0x20],rax
  402e51:	call   0x402b68
  402e56:	add    eax,0x1
  402e59:	je     0x403081
  402e5f:	mov    eax,DWORD PTR [rsp+0x100]
  402e66:	imul   eax,DWORD PTR [rsp+0x104]
  402e6e:	cdqe   
  402e70:	shl    rax,0x3
  402e74:	mov    rcx,rax
  402e77:	mov    QWORD PTR [rsp+0x68],rax
  402e7c:	call   0x402b80
  402e81:	test   rax,rax
  402e84:	mov    r15,rax
  402e87:	mov    QWORD PTR [rsp+0x108],rax
  402e8f:	je     0x4030ad
  402e95:	movsd  xmm7,QWORD PTR [rip+0x22cb]        # 0x405168
  402e9d:	lea    rax,[rsp+0x8c]
  402ea5:	lea    r12,[rsp+0x88]
  402ead:	movsd  xmm0,QWORD PTR [rsp+0xe0]
  402eb6:	lea    rbp,[rsp+0x80]
  402ebe:	mov    QWORD PTR [rsp+0x48],rax
  402ec3:	lea    rax,[rsp+0x84]
  402ecb:	xor    edi,edi
  402ecd:	mulsd  xmm0,xmm7
  402ed1:	mov    r14,r15
  402ed4:	mov    QWORD PTR [rsp+0x50],rax
  402ed9:	lea    rax,[rsp+0x7c]
  402ede:	movsd  xmm6,QWORD PTR [rip+0x228a]        # 0x405170
  402ee6:	mov    QWORD PTR [rsp+0x58],rax
  402eeb:	movsd  QWORD PTR [rsp+0xe0],xmm0
  402ef4:	movsd  xmm0,QWORD PTR [rsp+0xe8]
  402efd:	mulsd  xmm0,xmm7
  402f01:	movsd  QWORD PTR [rsp+0xe8],xmm0
  402f0a:	movsd  xmm0,QWORD PTR [rsp+0xf0]
  402f13:	mulsd  xmm0,xmm7
  402f17:	movsd  QWORD PTR [rsp+0xf0],xmm0
  402f20:	movsd  xmm0,QWORD PTR [rsp+0xf8]
  402f29:	mulsd  xmm0,xmm7
  402f2d:	movsd  QWORD PTR [rsp+0xf8],xmm0
  402f36:	cmp    edi,DWORD PTR [rsp+0x104]
  402f3d:	jge    0x403105
  402f43:	mov    r9,QWORD PTR [rsp+0x48]
  402f48:	mov    r8,QWORD PTR [rsp+0x50]
  402f4d:	lea    rcx,[rip+0x2154]        # 0x4050a8
  402f54:	mov    rdx,QWORD PTR [rsp+0x58]
  402f59:	call   0x402b68
  402f5e:	add    eax,0x1
  402f61:	je     0x4030c3
  402f67:	cmp    DWORD PTR [rsp+0x7c],edi
  402f6b:	jne    0x4030d9
  402f71:	pxor   xmm0,xmm0
  402f75:	cmp    DWORD PTR [rsp+0x100],0x1
  402f7d:	lea    r15,[r14+0x8]
  402f81:	pxor   xmm1,xmm1
  402f85:	pxor   xmm3,xmm3
  402f89:	cvtsi2sd xmm0,DWORD PTR [rsp+0x8c]
  402f92:	mulsd  xmm0,xmm6
  402f96:	cvtsi2sd xmm1,DWORD PTR [rsp+0x84]
  402f9f:	mulsd  xmm1,xmm6
  402fa3:	pxor   xmm5,xmm5
  402fa7:	cvtsd2ss xmm3,xmm1
  402fab:	cvtsd2ss xmm5,xmm0
  402faf:	movss  DWORD PTR [r14],xmm3
  402fb4:	movss  DWORD PTR [r14+0x4],xmm5
  402fba:	jle    0x403076
  402fc0:	mov    r14d,0x1
  402fc6:	jmp    0x403040
  402fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	mov    edx,DWORD PTR [rsp+0x80]
  402fd7:	add    edx,DWORD PTR [rsp+0x84]
  402fde:	add    r15,0x8
  402fe2:	pxor   xmm0,xmm0
  402fe6:	mov    eax,DWORD PTR [rsp+0x88]
  402fed:	pxor   xmm2,xmm2
  402ff1:	add    eax,DWORD PTR [rsp+0x8c]
  402ff8:	pxor   xmm4,xmm4
  402ffc:	add    r14d,0x1
  403000:	cvtsi2sd xmm0,edx
  403004:	cmp    DWORD PTR [rsp+0x100],r14d
  40300c:	mov    DWORD PTR [rsp+0x84],edx
  403013:	mov    DWORD PTR [rsp+0x8c],eax
  40301a:	mulsd  xmm0,xmm6
  40301e:	cvtsd2ss xmm2,xmm0
  403022:	pxor   xmm0,xmm0
  403026:	cvtsi2sd xmm0,eax
  40302a:	movss  DWORD PTR [r15-0x8],xmm2
  403030:	mulsd  xmm0,xmm6
  403034:	cvtsd2ss xmm4,xmm0
  403038:	movss  DWORD PTR [r15-0x4],xmm4
  40303e:	jle    0x403076
  403040:	lea    rcx,[rip+0x208e]        # 0x4050d5
  403047:	mov    r8,r12
  40304a:	mov    rdx,rbp
  40304d:	call   0x402b68
  403052:	cmp    eax,0xffffffff
  403055:	jne    0x402fd0
  40305b:	lea    rcx,[rip+0x207b]        # 0x4050dd
  403062:	call   0x402b70
  403067:	mov    ecx,0x1
  40306c:	call   0x402bc0
  403071:	call   0x4015a0
  403076:	add    edi,0x1
  403079:	mov    r14,r15
  40307c:	jmp    0x402f36
  403081:	lea    rcx,[rip+0x200f]        # 0x405097
  403088:	call   0x402b70
  40308d:	mov    ecx,0x1
  403092:	call   0x402bc0
  403097:	lea    rcx,[rip+0x1fd9]        # 0x405077
  40309e:	call   0x402b70
  4030a3:	mov    ecx,0x1
  4030a8:	call   0x402bc0
  4030ad:	lea    rcx,[rip+0x1fe9]        # 0x40509d
  4030b4:	call   0x402b70
  4030b9:	mov    ecx,0x1
  4030be:	call   0x402bc0
  4030c3:	lea    rcx,[rip+0x1fe9]        # 0x4050b3
  4030ca:	call   0x402b70
  4030cf:	mov    ecx,0x1
  4030d4:	call   0x402bc0
  4030d9:	mov    rax,QWORD PTR [rsp+0x60]
  4030de:	call   rax
  4030e0:	lea    rcx,[rip+0x1fd9]        # 0x4050c0
  4030e7:	lea    r9,[rax+0x60]
  4030eb:	mov    r8d,0x14
  4030f1:	mov    edx,0x1
  4030f6:	call   0x402b88
  4030fb:	mov    ecx,0x1
  403100:	call   0x402bc0
  403105:	mov    rax,QWORD PTR [rsp+0x60]
  40310a:	call   rax
  40310c:	mov    rcx,rax
  40310f:	call   0x402bb0
  403114:	test   eax,eax
  403116:	jne    0x4036d2
  40311c:	lea    rdx,[rip+0x1fd9]        # 0x4050fc
  403123:	mov    rcx,r13
  403126:	call   0x402b58
  40312b:	test   eax,eax
  40312d:	je     0x40372a
  403133:	lea    rdx,[rip+0x1f0c]        # 0x405046
  40313a:	mov    rcx,r13
  40313d:	call   0x402b58
  403142:	test   eax,eax
  403144:	mov    r12d,eax
  403147:	je     0x403791
  40314d:	lea    rdx,[rip+0x1fc9]        # 0x40511d
  403154:	mov    rcx,r13
  403157:	call   0x402b58
  40315c:	test   eax,eax
  40315e:	mov    r12d,eax
  403161:	jne    0x4036fe
  403167:	lea    rdx,[rip+0x1f95]        # 0x405103
  40316e:	mov    rcx,rbx
  403171:	call   0x402ba0
  403176:	test   rax,rax
  403179:	mov    rbp,rax
  40317c:	je     0x403953
  403182:	lea    rbx,[rsp+0x110]
  40318a:	mov    eax,r12d
  40318d:	mov    ecx,0x2c
  403192:	lea    rsi,[rip+0x1f89]        # 0x405122
  403199:	mov    r8d,0xb0
  40319f:	mov    edx,0x1
  4031a4:	mov    rdi,rbx
  4031a7:	lea    r11,[rbx+0x10]
  4031ab:	lea    r10,[rbx+0x20]
  4031af:	rep stos DWORD PTR es:[rdi],eax
  4031b1:	movabs rax,0x4345524f5f4d554e
  4031bb:	mov    BYTE PTR [rsp+0x118],0xb
  4031c3:	mov    BYTE PTR [rsp+0x128],0xb
  4031cb:	mov    QWORD PTR [rsp+0x110],rax
  4031d3:	movabs rax,0x434552535f4d554e
  4031dd:	mov    BYTE PTR [rsp+0x138],0x1
  4031e5:	mov    QWORD PTR [rsp+0x120],rax
  4031ed:	movabs rax,0x454c49465f4d554e
  4031f7:	mov    r9,rbp
  4031fa:	mov    QWORD PTR [rsp+0x130],rax
  403202:	movabs rax,0x20455059545f5347
  40320c:	mov    QWORD PTR [rsp+0x50],r11
  403211:	mov    QWORD PTR [rsp+0x140],rax
  403219:	movabs rax,0x2020202020202020
  403223:	mov    QWORD PTR [rsp+0x48],r10
  403228:	mov    QWORD PTR [rbx+0x38],rax
  40322c:	lea    rax,[rbx+0x38]
  403230:	mov    cl,0x7
  403232:	lea    r14,[rbx+0x58]
  403236:	lea    r13,[rbx+0x68]
  40323a:	mov    rdi,rax
  40323d:	movabs rax,0x204e4f4953524556
  403247:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  403249:	mov    QWORD PTR [rsp+0x150],rax
  403251:	movabs rax,0x2020202020202020
  40325b:	mov    rcx,rbx
  40325e:	mov    QWORD PTR [rbx+0x48],rax
  403262:	movabs rax,0x465f4d4554535953
  40326c:	mov    rdi,rbx
  40326f:	mov    QWORD PTR [rsp+0x160],rax
  403277:	movabs rax,0x2020202020202020
  403281:	mov    QWORD PTR [rbx+0x58],rax
  403285:	movabs rax,0x545f4d4554535953
  40328f:	mov    DWORD PTR [rsp+0x168],0x3244414e
  40329a:	mov    BYTE PTR [rbx+0x5c],0x37
  40329e:	mov    QWORD PTR [rsp+0x170],rax
  4032a6:	movabs rax,0x2020202020202020
  4032b0:	mov    QWORD PTR [rbx+0x68],rax
  4032b4:	movabs rax,0x20465f524f4a414d
  4032be:	mov    DWORD PTR [rsp+0x178],0x3844414e
  4032c9:	mov    BYTE PTR [rbx+0x6c],0x33
  4032cd:	mov    QWORD PTR [rsp+0x180],rax
  4032d5:	movabs rax,0x20465f524f4e494d
  4032df:	mov    QWORD PTR [rsp+0x190],rax
  4032e7:	movabs rax,0x20545f524f4a414d
  4032f1:	mov    QWORD PTR [rsp+0x1a0],rax
  4032f9:	movabs rax,0x20545f524f4e494d
  403303:	mov    QWORD PTR [rsp+0x1b0],rax
  40330b:	call   0x402b88
  403310:	mov    eax,r12d
  403313:	mov    ecx,0x2c
  403318:	mov    r11,QWORD PTR [rsp+0x50]
  40331d:	rep stos DWORD PTR es:[rdi],eax
  40331f:	movabs rax,0x454d414e5f425553
  403329:	mov    r10,QWORD PTR [rsp+0x48]
  40332e:	mov    edx,DWORD PTR [rsp+0x104]
  403335:	mov    QWORD PTR [rsp+0x110],rax
  40333d:	movabs rax,0x2020202020202020
  403347:	mov    r8d,DWORD PTR [rsp+0x100]
  40334f:	mov    QWORD PTR [rsp+0x118],rax
  403357:	movabs rax,0x2020544e45524150
  403361:	mov    QWORD PTR [rsp+0x120],rax
  403369:	movabs rax,0x2020202020202020
  403373:	mov    QWORD PTR [r11+0x8],rax
  403377:	movabs rax,0x2044455441455243
  403381:	mov    DWORD PTR [rsp+0x128],0x454e4f4e
  40338c:	mov    QWORD PTR [rsp+0x130],rax
  403394:	movabs rax,0x2020202020202020
  40339e:	mov    QWORD PTR [r10+0x8],rax
  4033a2:	movabs rax,0x2044455441445055
  4033ac:	mov    QWORD PTR [rsp+0x140],rax
  4033b4:	movabs rax,0x2020202020202020
  4033be:	mov    QWORD PTR [rbx+0x38],rax
  4033c2:	movabs rax,0x20202054414c5f53
  4033cc:	mov    QWORD PTR [rsp+0x150],rax
  4033d4:	pxor   xmm0,xmm0
  4033d8:	mov    al,0x4e
  4033da:	movsd  xmm3,QWORD PTR [rsp+0xf8]
  4033e3:	mov    QWORD PTR [rsp+0x160],rax
  4033eb:	lea    eax,[rdx-0x1]
  4033ee:	movsd  xmm6,QWORD PTR [rsp+0xe8]
  4033f7:	cvtsi2sd xmm0,eax
  4033fb:	movabs rax,0x2020474e4f4c5f45
  403405:	movsd  xmm1,QWORD PTR [rip+0x1d6b]        # 0x405178
  40340d:	movapd xmm5,xmm6
  403411:	mov    QWORD PTR [rsp+0x170],rax
  403419:	lea    eax,[r8-0x1]
  40341d:	mulsd  xmm5,xmm1
  403421:	movsd  xmm4,QWORD PTR [rsp+0xf0]
  40342a:	movsd  xmm2,QWORD PTR [rsp+0xe0]
  403433:	imul   edx,r8d
  403437:	divsd  xmm5,xmm7
  40343b:	mulsd  xmm0,xmm3
  40343f:	mulsd  xmm3,xmm1
  403443:	movq   QWORD PTR [rsp+0x158],xmm5
  40344c:	addsd  xmm0,xmm6
  403450:	movsd  xmm5,QWORD PTR [rip+0x1d28]        # 0x405180
  403458:	divsd  xmm3,xmm7
  40345c:	mulsd  xmm0,xmm1
  403460:	movq   QWORD PTR [rsp+0x198],xmm3
  403469:	divsd  xmm0,xmm7
  40346d:	movq   QWORD PTR [rsp+0x168],xmm0
  403476:	pxor   xmm0,xmm0
  40347a:	cvtsi2sd xmm0,eax
  40347e:	movabs rax,0x2020474e4f4c5f57
  403488:	mov    QWORD PTR [rsp+0x180],rax
  403490:	movabs rax,0x20434e495f54414c
  40349a:	mov    QWORD PTR [rsp+0x190],rax
  4034a2:	movabs rax,0x434e495f474e4f4c
  4034ac:	mov    QWORD PTR [rsp+0x1a0],rax
  4034b4:	movabs rax,0x544e554f435f5347
  4034be:	mov    QWORD PTR [rsp+0x1b0],rax
  4034c6:	mulsd  xmm0,xmm4
  4034ca:	addsd  xmm0,xmm2
  4034ce:	xorpd  xmm2,xmm5
  4034d2:	xorpd  xmm0,xmm5
  4034d6:	mulsd  xmm0,xmm1
  4034da:	divsd  xmm0,xmm7
  4034de:	movq   QWORD PTR [rsp+0x178],xmm0
  4034e7:	movapd xmm0,xmm2
  4034eb:	mulsd  xmm0,xmm1
  4034ef:	mulsd  xmm1,xmm4
  4034f3:	divsd  xmm0,xmm7
  4034f7:	divsd  xmm1,xmm7
  4034fb:	movq   QWORD PTR [rsp+0x188],xmm0
  403504:	movq   QWORD PTR [rsp+0x1a8],xmm1
  40350d:	mov    DWORD PTR [rsp+0x1b8],edx
  403514:	movzx  esi,BYTE PTR [rip+0x1c45]        # 0x405160
  40351b:	cmp    sil,0x1
  40351f:	je     0x4035b8
  403525:	lea    rcx,[rbx+0x48]
  403529:	mov    r8d,0x1
  40352f:	mov    edx,0x8
  403534:	call   0x401530
  403539:	mov    r8d,0x1
  40353f:	mov    edx,0x8
  403544:	mov    rcx,r14
  403547:	call   0x401530
  40354c:	mov    r8d,0x1
  403552:	mov    edx,0x8
  403557:	mov    rcx,r13
  40355a:	call   0x401530
  40355f:	lea    rcx,[rbx+0x78]
  403563:	mov    r8d,0x1
  403569:	mov    edx,0x8
  40356e:	call   0x401530
  403573:	lea    rcx,[rbx+0x88]
  40357a:	mov    r8d,0x1
  403580:	mov    edx,0x8
  403585:	call   0x401530
  40358a:	lea    rcx,[rbx+0x98]
  403591:	mov    r8d,0x1
  403597:	mov    edx,0x8
  40359c:	call   0x401530
  4035a1:	lea    rcx,[rbx+0xa8]
  4035a8:	mov    r8d,0x1
  4035ae:	mov    edx,0x4
  4035b3:	call   0x401530
  4035b8:	mov    rcx,rbx
  4035bb:	mov    r9,rbp
  4035be:	mov    r8d,0xb0
  4035c4:	mov    edx,0x1
  4035c9:	call   0x402b88
  4035ce:	movsxd rcx,DWORD PTR [rsp+0x100]
  4035d6:	shl    rcx,0x4
  4035da:	call   0x4015d0
  4035df:	mov    rbx,rax
  4035e2:	mov    ecx,0x4
  4035e7:	xor    eax,eax
  4035e9:	mov    rdi,rbx
  4035ec:	movsd  xmm6,QWORD PTR [rip+0x1b9c]        # 0x405190
  4035f4:	rep stos DWORD PTR es:[rdi],eax
  4035f6:	xor    edi,edi
  4035f8:	mov    r12d,edi
  4035fb:	cmp    r12d,DWORD PTR [rsp+0x104]
  403603:	jge    0x4038fa
  403609:	movsxd rdx,DWORD PTR [rsp+0x100]
  403611:	mov    eax,r12d
  403614:	mov    r10,rbx
  403617:	xor    r11d,r11d
  40361a:	imul   eax,edx
  40361d:	mov    r8,rdx
  403620:	cdqe   
  403622:	add    rdx,rax
  403625:	mov    rax,QWORD PTR [rsp+0x108]
  40362d:	lea    rdx,[rax+rdx*8]
  403631:	jmp    0x403670
  403633:	pxor   xmm0,xmm0
  403637:	add    r11d,0x1
  40363b:	pxor   xmm3,xmm3
  40363f:	add    r10,0x10
  403643:	pxor   xmm5,xmm5
  403647:	cvtss2sd xmm0,DWORD PTR [rdx+0x4]
  40364c:	mulsd  xmm0,xmm6
  403650:	cvtsd2ss xmm3,xmm0
  403654:	pxor   xmm0,xmm0
  403658:	movss  DWORD PTR [r10-0x10],xmm3
  40365e:	cvtss2sd xmm0,DWORD PTR [rdx]
  403662:	mulsd  xmm0,xmm6
  403666:	cvtsd2ss xmm5,xmm0
  40366a:	movss  DWORD PTR [r10-0xc],xmm5
  403670:	sub    rdx,0x8
  403674:	cmp    r11d,r8d
  403677:	jl     0x403633
  403679:	cmp    sil,0x1
  40367d:	je     0x403698
  40367f:	shl    r8d,0x2
  403683:	mov    edx,0x4
  403688:	mov    rcx,rbx
  40368b:	call   0x401530
  403690:	mov    r8d,DWORD PTR [rsp+0x100]
  403698:	shl    r8d,0x2
  40369c:	mov    edx,0x4
  4036a1:	mov    r9,rbp
  4036a4:	movsxd r8,r8d
  4036a7:	mov    rcx,rbx
  4036aa:	call   0x402b88
  4036af:	mov    edi,DWORD PTR [rsp+0x100]
  4036b6:	lea    edx,[rdi*4+0x0]
  4036bd:	movsxd rdx,edx
  4036c0:	cmp    rax,rdx
  4036c3:	jne    0x403909
  4036c9:	add    r12d,0x1
  4036cd:	jmp    0x4035fb
  4036d2:	mov    rax,QWORD PTR [rsp+0x60]
  4036d7:	call   rax
  4036d9:	lea    rcx,[rip+0x1a0d]        # 0x4050ed
  4036e0:	lea    r9,[rax+0x60]
  4036e4:	mov    r8d,0xe
  4036ea:	mov    edx,0x1
  4036ef:	call   0x402b88
  4036f4:	mov    ecx,0x1
  4036f9:	call   0x402bc0
  4036fe:	mov    rax,QWORD PTR [rsp+0x60]
  403703:	call   rax
  403705:	lea    rcx,[rip+0x1a2c]        # 0x405138
  40370c:	lea    r9,[rax+0x60]
  403710:	mov    r8d,0x25
  403716:	mov    edx,0x1
  40371b:	call   0x402b88
  403720:	mov    ecx,0x3
  403725:	call   0x402bc0
  40372a:	lea    rdx,[rip+0x19d2]        # 0x405103
  403731:	mov    rcx,rbx
  403734:	call   0x402ba0
  403739:	test   rax,rax
  40373c:	mov    rdi,rax
  40373f:	je     0x403953
  403745:	mov    r9,rax
  403748:	mov    r8d,0x1
  40374e:	mov    edx,0x80
  403753:	mov    rcx,rsi
  403756:	call   0x402b88
  40375b:	sub    rax,0x1
  40375f:	je     0x40391f
  403765:	mov    rax,QWORD PTR [rsp+0x60]
  40376a:	call   rax
  40376c:	lea    rcx,[rip+0x1993]        # 0x405106
  403773:	lea    r9,[rax+0x60]
  403777:	mov    r8d,0xf
  40377d:	mov    edx,0x1
  403782:	call   0x402b88
  403787:	mov    ecx,0x2
  40378c:	call   0x402bc0
  403791:	lea    rdx,[rip+0x196b]        # 0x405103
  403798:	mov    rcx,rbx
  40379b:	call   0x402ba0
  4037a0:	test   rax,rax
  4037a3:	mov    rbp,rax
  4037a6:	je     0x403953
  4037ac:	lea    rbx,[rsp+0x110]
  4037b4:	mov    eax,r12d
  4037b7:	mov    ecx,0x28
  4037bc:	cmp    BYTE PTR [rip+0x199d],0x1        # 0x405160
  4037c3:	mov    rdi,rbx
  4037c6:	rep stos DWORD PTR es:[rdi],eax
  4037c8:	movabs rax,0x5620454c42415443
  4037d2:	lea    rdi,[rsp+0x120]
  4037da:	mov    QWORD PTR [rsp+0x110],rax
  4037e2:	movabs rax,0x2020202020302e32
  4037ec:	mov    QWORD PTR [rsp+0x118],rax
  4037f4:	mov    rax,QWORD PTR [rsp+0xe0]
  4037fc:	mov    cl,0x14
  4037fe:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  403800:	mov    QWORD PTR [rsp+0x170],rax
  403808:	mov    rax,QWORD PTR [rsp+0xe8]
  403810:	mov    QWORD PTR [rsp+0x178],rax
  403818:	mov    rax,QWORD PTR [rsp+0xf0]
  403820:	mov    QWORD PTR [rsp+0x180],rax
  403828:	mov    rax,QWORD PTR [rsp+0xf8]
  403830:	mov    QWORD PTR [rsp+0x188],rax
  403838:	mov    eax,DWORD PTR [rsp+0x100]
  40383f:	mov    DWORD PTR [rsp+0x190],eax
  403846:	mov    eax,DWORD PTR [rsp+0x104]
  40384d:	mov    DWORD PTR [rsp+0x194],eax
  403854:	je     0x4038a7
  403856:	lea    rcx,[rbx+0x60]
  40385a:	mov    r8d,0x4
  403860:	mov    edx,0x8
  403865:	call   0x401530
  40386a:	lea    rcx,[rbx+0x80]
  403871:	mov    r8d,0x2
  403877:	mov    edx,0x4
  40387c:	call   0x401530
  403881:	mov    eax,DWORD PTR [rsp+0x100]
  403888:	mov    rcx,QWORD PTR [rsp+0x108]
  403890:	mov    edx,0x4
  403895:	lea    r8d,[rax+rax*1]
  403899:	imul   r8d,DWORD PTR [rsp+0x104]
  4038a2:	call   0x401530
  4038a7:	mov    r9,rbp
  4038aa:	mov    r8d,0x1
  4038b0:	mov    edx,0xa0
  4038b5:	mov    rcx,rbx
  4038b8:	call   0x402b88
  4038bd:	sub    rax,0x1
  4038c1:	je     0x4038d9
  4038c3:	lea    rcx,[rip+0x184c]        # 0x405116
  4038ca:	call   0x402b70
  4038cf:	mov    ecx,0x2
  4038d4:	call   0x402bc0
  4038d9:	mov    rdx,QWORD PTR [rsp+0x68]
  4038de:	mov    rcx,QWORD PTR [rsp+0x108]
  4038e6:	mov    r9,rbp
  4038e9:	mov    r8d,0x1
  4038ef:	call   0x402b88
  4038f4:	sub    rax,0x1
  4038f8:	jne    0x4038c3
  4038fa:	mov    rcx,rbp
  4038fd:	call   0x402bb8
  403902:	xor    ecx,ecx
  403904:	call   0x402bc0
  403909:	lea    rcx,[rip+0x181a]        # 0x40512a
  403910:	call   0x402b70
  403915:	mov    ecx,0x2
  40391a:	call   0x402bc0
  40391f:	mov    rdx,QWORD PTR [rsp+0x68]
  403924:	mov    rcx,QWORD PTR [rsp+0x108]
  40392c:	mov    r9,rdi
  40392f:	mov    r8d,0x1
  403935:	call   0x402b88
  40393a:	sub    rax,0x1
  40393e:	jne    0x403765
  403944:	mov    rcx,rdi
  403947:	call   0x402bb8
  40394c:	xor    ecx,ecx
  40394e:	call   0x402bc0
  403953:	mov    rcx,rbx
  403956:	call   0x402b70
  40395b:	mov    ecx,0x2
  403960:	call   0x402bc0
  403965:	nop
  403966:	nop
  403967:	nop
  403968:	nop
  403969:	nop
  40396a:	nop
  40396b:	nop
  40396c:	nop
  40396d:	nop
  40396e:	nop
  40396f:	nop
  403970:	(bad)  
  403971:	(bad)  
  403972:	(bad)  
  403973:	(bad)  
  403974:	(bad)  
  403975:	(bad)  
  403976:	(bad)  
  403977:	inc    DWORD PTR [rax]
  403979:	add    BYTE PTR [rax],al
  40397b:	add    BYTE PTR [rax],al
  40397d:	add    BYTE PTR [rax],al
  40397f:	add    bh,bh
  403981:	(bad)  
  403982:	(bad)  
  403983:	(bad)  
  403984:	(bad)  
  403985:	(bad)  
  403986:	(bad)  
  403987:	inc    DWORD PTR [rax]
  403989:	add    BYTE PTR [rax],al
  40398b:	add    BYTE PTR [rax],al
  40398d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	mov    BYTE PTR [rcx],bh
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax+0x2c],al
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax+0x2c],dl
  40406a:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	outs   dx,BYTE PTR ds:[rsi]
  405008:	(bad)  
  405009:	xor    ah,BYTE PTR fs:[rdx+0x69]
  40500d:	outs   dx,BYTE PTR ds:[rsi]
  40500e:	and    BYTE PTR [rbx+0x2d],bl
  405011:	data16 and BYTE PTR [rbx+0x74],ah
  405015:	(bad)  
  405016:	(bad)  
  405017:	ins    BYTE PTR es:[rdi],dx
  405018:	gs (bad) 
  40501a:	movsxd esi,DWORD PTR [rcx+riz*2+0x62]
  40501e:	ins    BYTE PTR es:[rdi],dx
  40501f:	xor    ch,BYTE PTR gs:[rdi]
  405022:	outs   dx,BYTE PTR ds:[rsi]
  405023:	je     0x40509b
  405025:	xor    bl,BYTE PTR [rbp+0x20]
  405028:	(bad)  
  405029:	imul   ebp,DWORD PTR [rsi+0x61],0x6f5f7972
  405030:	jne    0x4050a6
  405032:	jo     0x4050a9
  405034:	je     0x405056
  405036:	cmp    al,0x20
  405038:	(bad)  
  405039:	jae    0x40509e
  40503b:	imul   ebp,DWORD PTR [rcx+0x5f],0x72756f73
  405042:	movsxd esp,DWORD PTR [rbp+0xa]
  405045:	add    BYTE PTR [rbx+0x74],ah
  405048:	(bad)  
  405049:	(bad)  
  40504a:	ins    BYTE PTR es:[rdi],dx
  40504b:	xor    al,BYTE PTR gs:[rax]
  40504e:	sub    eax,0x66
  405053:	add    BYTE PTR [rax],al
  405055:	add    BYTE PTR [rax],al
  405057:	add    BYTE PTR [rdi+0x75],cl
  40505a:	je     0x4050cc
  40505c:	jne    0x4050d2
  40505e:	and    BYTE PTR [rdx+0x69],al
  405061:	outs   dx,BYTE PTR ds:[rsi]
  405062:	(bad)  
  405063:	jb     0x4050de
  405065:	and    BYTE PTR [rsi+0x69],al
  405068:	ins    BYTE PTR es:[rdi],dx
  405069:	and    BYTE PTR gs:[rsi+0x6f],al
  40506d:	jb     0x4050dc
  40506f:	(bad)  
  405070:	je     0x4050ac
  405072:	and    BYTE PTR [rip+0x66000a73],ah        # 0x66405aeb
  405078:	addr32 gs je 0x4050ef
  40507c:	add    BYTE PTR [rip+0x64252064],ah        # 0x646570e6
  405082:	and    BYTE PTR [rip+0x2520642a],ah        # 0x2560b4b2
  405088:	ins    BYTE PTR es:[rdi],dx
  405089:	data16 and BYTE PTR [rip+0x2520666c],ah        # 0x2560b6fc
  405090:	ins    BYTE PTR es:[rdi],dx
  405091:	data16 and BYTE PTR [rip+0x7300666c],ah        # 0x7340b704
  405098:	movsxd esp,DWORD PTR [rcx+0x6e]
  40509b:	data16 add BYTE PTR [rbp+0x65],ch
  40509f:	ins    DWORD PTR es:[rdi],dx
  4050a0:	and    BYTE PTR cs:[rcx+0x6c],ah
  4050a4:	ins    BYTE PTR es:[rdi],dx
  4050a5:	outs   dx,DWORD PTR ds:[rsi]
  4050a6:	movsxd eax,DWORD PTR [rax]
  4050a8:	and    eax,0x6c253a64
  4050ad:	and    BYTE PTR fs:[rip+0x7300646c],ah        # 0x7340b520
  4050b4:	movsxd esp,DWORD PTR [rcx+0x6e]
  4050b7:	data16 and BYTE PTR [rdi+0x6e],ch
  4050bb:	and    BYTE PTR [rdx+0x6f],dh
  4050be:	ja     0x4050c0
  4050c0:	outs   dx,WORD PTR ds:[rsi]
  4050c2:	jb     0x405131
  4050c4:	(bad)  
  4050c5:	je     0x4050e7
  4050c7:	movsxd ebp,DWORD PTR [rax+0x65]
  4050ca:	movsxd ebp,DWORD PTR [rbx+0x20]
  4050cd:	outs   dx,DWORD PTR ds:[rsi]
  4050ce:	outs   dx,BYTE PTR ds:[rsi]
  4050cf:	and    BYTE PTR [rdx+0x6f],dh
  4050d2:	ja     0x4050de
  4050d4:	add    BYTE PTR [rip+0x2520646c],ah        # 0x2560b546
  4050da:	ins    BYTE PTR es:[rdi],dx
  4050db:	add    BYTE PTR fs:[rbx+0x63],dh
  4050df:	(bad)  
  4050e0:	outs   dx,BYTE PTR ds:[rsi]
  4050e1:	data16 and BYTE PTR [rdi+0x6e],ch
  4050e5:	and    BYTE PTR [rbx+0x6f],ah
  4050e8:	ins    BYTE PTR es:[rdi],dx
  4050e9:	jne    0x405158
  4050eb:	outs   dx,BYTE PTR ds:[rsi]
  4050ec:	add    BYTE PTR [rax+0x72],dh
  4050ef:	gs ins DWORD PTR es:[rdi],dx
  4050f1:	(bad)  
  4050f2:	je     0x405169
  4050f4:	jb     0x40515b
  4050f6:	and    BYTE PTR [rbp+0x4f],al
  4050f9:	rex.RX or r8b,BYTE PTR [rax]
  4050fc:	movsxd esi,DWORD PTR [rcx+riz*2+0x62]
  405100:	ins    BYTE PTR es:[rdi],dx
  405101:	add    BYTE PTR gs:[rdi+0x62],dh
  405105:	add    BYTE PTR [rdi+0x75],ch
  405108:	je     0x40517a
  40510a:	jne    0x405180
  40510c:	and    BYTE PTR [rsi+0x61],ah
  40510f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x66000a65
  405117:	ja     0x40518b
  405119:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x3276746e
  405121:	add    BYTE PTR [rbx+0x45],dl
  405124:	rex.XB
  405125:	rex.WRXB
  405126:	rex.WRX
  405127:	rex.R push rbx
  405129:	add    BYTE PTR [rdi+0x72],dh
  40512c:	imul   esi,DWORD PTR [rbp+riz*2+0x28],0x29
  405134:	add    BYTE PTR [rax],al
  405136:	add    BYTE PTR [rax],al
  405138:	push   rbp
  405139:	outs   dx,BYTE PTR ds:[rsi]
  40513a:	jae    0x4051b1
  40513c:	jo     0x4051ae
  40513e:	outs   dx,DWORD PTR ds:[rsi]
  40513f:	jb     0x4051b5
  405141:	gs and BYTE PTR fs:[rsi+0x6f],ah
  405146:	jb     0x4051b5
  405148:	(bad)  
  405149:	je     0x405177
  40514b:	and    BYTE PTR [rsi+0x6f],ch
  40514e:	je     0x4051b8
  405150:	imul   ebp,DWORD PTR [rsi+0x67],0x69727720
  405157:	je     0x4051cd
  405159:	outs   dx,BYTE PTR gs:[rsi]
  40515b:	or     al,BYTE PTR cs:[rax]
  40515e:	add    BYTE PTR [rax],al
  405160:	add    DWORD PTR [rax],eax
  405162:	add    BYTE PTR [rax],al
  405164:	add    BYTE PTR [rax],al
  405166:	add    BYTE PTR [rax],al
  405168:	cmp    DWORD PTR [rbp-0x20b95dae],ebx
  40516e:	xchg   ecx,eax
  40516f:	(bad)  
  405170:	rex push rbp
  405172:	hlt    
  405173:	rex.WXB test BYTE PTR [r10-0x6b],dl
  405177:	cmp    eax,0x0
  40517c:	add    BYTE PTR [rax],ah
  40517e:	lods   al,BYTE PTR ds:[rsi]
  40517f:	add    BYTE PTR [rax],al
  405182:	add    BYTE PTR [rax],al
  405184:	add    BYTE PTR [rax],al
  405186:	add    BYTE PTR [rax+0x0],al
  40518c:	add    BYTE PTR [rax],al
  40518e:	add    BYTE PTR [rax],al
  405190:	jnp    0x40513f
  405192:	xor    DWORD PTR [rbx-0x3a],esi
  405195:	sub    eax,0x4109
  40519a:	add    BYTE PTR [rax],al
  40519c:	add    BYTE PTR [rax],al
  40519e:	add    BYTE PTR [rax],al
  4051a0:	add    BYTE PTR [rbp+0x40],0x0
  4051a7:	add    BYTE PTR [rax+0x4080],al
  4051ad:	add    BYTE PTR [rax],al
  4051af:	add    BYTE PTR [rax+0x4019],ah
	...
  4051bd:	add    BYTE PTR [rax],al
  4051bf:	add    BYTE PTR [rcx+0x72],al
  4051c2:	addr32 jne 0x405232
  4051c5:	outs   dx,BYTE PTR gs:[rsi]
  4051c7:	je     0x4051e9
  4051c9:	outs   dx,DWORD PTR fs:[rsi]
  4051cb:	ins    DWORD PTR es:[rdi],dx
  4051cc:	(bad)  
  4051cd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4051d4:	jb     0x4051f6
  4051d6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4051da:	rex.B
  4051db:	rex.WB
  4051dc:	rex.WRX sub QWORD PTR [rax],r8
  4051df:	rex.B jb 0x405249
  4051e2:	jne    0x405251
  4051e4:	outs   dx,BYTE PTR gs:[rsi]
  4051e6:	je     0x405208
  4051e8:	jae    0x405253
  4051ea:	outs   dx,BYTE PTR ds:[rsi]
  4051eb:	addr32 jne 0x40525a
  4051ee:	(bad)  
  4051ef:	jb     0x40525a
  4051f1:	je     0x40526c
  4051f3:	and    BYTE PTR [rax],ch
  4051f5:	push   rbx
  4051f6:	rex.WB
  4051f7:	rex.RXB
  4051f8:	rex.WRX sub QWORD PTR [rax],r8
  4051fb:	add    BYTE PTR [rax],al
  4051fd:	add    BYTE PTR [rax],al
  4051ff:	add    BYTE PTR [rdi+0x76],cl
  405202:	gs jb  0x40526b
  405205:	ins    BYTE PTR es:[rdi],dx
  405206:	outs   dx,DWORD PTR ds:[rsi]
  405207:	ja     0x405229
  405209:	jb     0x40526c
  40520b:	outs   dx,BYTE PTR ds:[rsi]
  40520c:	and    BYTE PTR gs:[ebp+0x72],ah
  405211:	jb     0x405282
  405213:	jb     0x405235
  405215:	sub    BYTE PTR [rdi+0x56],cl
  405218:	rex.RB push r10
  40521a:	rex.RX
  40521b:	rex.WR
  40521c:	rex.WRXB push r15
  40521e:	sub    DWORD PTR [rax],eax
  405220:	push   rax
  405221:	(bad)  
  405222:	jb     0x405298
  405224:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40522b:	jae    0x40524d
  40522d:	outs   dx,DWORD PTR ds:[rsi]
  40522e:	data16 and BYTE PTR [rbx+0x69],dh
  405232:	outs   dx,BYTE PTR ds:[esi]
  405234:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40523b:	and    BYTE PTR gs:[rax],ch
  40523e:	push   rax
  40523f:	rex.WR
  405240:	rex.WRXB push r11
  405242:	push   rbx
  405243:	sub    DWORD PTR [rax],eax
  405245:	add    BYTE PTR [rax],al
  405247:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40524b:	(bad)  
  40524c:	ins    BYTE PTR es:[rdi],dx
  40524d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405251:	jae    0x405273
  405253:	outs   dx,DWORD PTR ds:[rsi]
  405254:	data16 and BYTE PTR [rbx+0x69],dh
  405258:	outs   dx,BYTE PTR ds:[esi]
  40525a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405261:	and    BYTE PTR gs:[rax],ch
  405264:	push   rsp
  405265:	rex.WR
  405266:	rex.WRXB push r11
  405268:	push   rbx
  405269:	sub    DWORD PTR [rax],eax
  40526b:	add    BYTE PTR [rax],al
  40526d:	add    BYTE PTR [rax],al
  40526f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405273:	and    BYTE PTR [rdx+0x65],dh
  405276:	jae    0x4052ed
  405278:	ins    BYTE PTR es:[rdi],dx
  405279:	je     0x40529b
  40527b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405282:	jae    0x4052f1
  405284:	(bad)  
  405285:	ins    BYTE PTR es:[rdi],dx
  405286:	ins    BYTE PTR es:[rdi],dx
  405287:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40528b:	(bad)  
  40528c:	and    BYTE PTR gs:[rdx+0x65],dh
  405290:	jo     0x405304
  405292:	gs jae 0x4052fa
  405295:	outs   dx,BYTE PTR ds:[rsi]
  405296:	je     0x4052fd
  405298:	and    BYTE PTR fs:[rax],ch
  40529b:	push   rbp
  40529c:	rex.WRX
  40529d:	rex.R
  40529e:	rex.RB push r10
  4052a0:	rex.RX
  4052a1:	rex.WR
  4052a2:	rex.WRXB push r15
  4052a4:	sub    DWORD PTR [rax],eax
  4052a6:	push   rbp
  4052a7:	outs   dx,BYTE PTR ds:[rsi]
  4052a8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052ac:	outs   dx,BYTE PTR ds:[rsi]
  4052ad:	and    BYTE PTR [rbp+0x72],ah
  4052b0:	jb     0x405321
  4052b2:	jb     0x4052b4
  4052b4:	add    BYTE PTR [rax],al
  4052b6:	add    BYTE PTR [rax],al
  4052b8:	pop    rdi
  4052b9:	ins    DWORD PTR es:[rdi],dx
  4052ba:	(bad)  
  4052bb:	je     0x405325
  4052bd:	gs jb  0x405332
  4052c0:	sub    BYTE PTR [rcx],ch
  4052c2:	cmp    ah,BYTE PTR [rax]
  4052c4:	and    eax,0x6e692073
  4052c9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657b42
  4052cf:	sub    al,0x20
  4052d1:	and    eax,0x20202967
  4052d6:	sub    BYTE PTR [rdx+0x65],dh
  4052d9:	je     0x405351
  4052db:	(bad)  
  4052dc:	ins    BYTE PTR es:[rdi],dx
  4052dd:	cmp    eax,0xa296725
  4052e2:	add    BYTE PTR [rax],al
  4052e4:	mov    eax,cs
  4052e6:	(bad)  
  4052e7:	dec    ebp
  4052e9:	(bad)  
  4052ea:	(bad)  
  4052eb:	(bad)  
  4052ec:	cmp    al,0xc8
  4052ee:	(bad)  
  4052ef:	dec    DWORD PTR [rax+rcx*8-0x1]
  4052f3:	call   FWORD PTR [rax+rcx*8-0x1]
  4052f7:	jmp    FWORD PTR [rax+rcx*8-0x1]
  4052fb:	(bad)  
  4052fc:	jl     0x4052c6
  4052fe:	(bad)  
  4052ff:	dec    DWORD PTR [rbp+0x69]
  405302:	outs   dx,BYTE PTR ds:[rsi]
  405303:	addr32 ja 0x405333
  405306:	ja     0x40533e
  405308:	xor    al,0x20
  40530a:	jb     0x405381
  40530c:	outs   dx,BYTE PTR ds:[rsi]
  40530d:	je     0x405378
  40530f:	ins    DWORD PTR es:[rdi],dx
  405310:	and    BYTE PTR gs:[rsi+0x61],ah
  405314:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40531c:	add    BYTE PTR [rax],al
  40531e:	add    BYTE PTR [rax],al
  405320:	rex.B
  405321:	fs fs jb 0x40538a
  405325:	jae    0x40539a
  405327:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8739d
  40532d:	jae    0x40534f
  40532f:	outs   dx,BYTE PTR ds:[rsi]
  405330:	outs   dx,DWORD PTR ds:[rsi]
  405331:	and    BYTE PTR [rcx+0x6d],ch
  405334:	(bad)  
  405335:	addr32 gs sub eax,0x74636573
  40533c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405343:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40534a:	jne    0x4053b1
  40534c:	jb     0x4053c7
  40534e:	and    BYTE PTR [rsi+0x61],ah
  405351:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405359:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a273c3
  40535f:	je     0x4053c6
  405361:	jae    0x405383
  405363:	(bad)  
  405364:	je     0x405386
  405366:	(bad)  
  405367:	fs fs jb 0x4053d0
  40536b:	jae    0x4053e0
  40536d:	and    BYTE PTR [rip+0x70],ah        # 0x4053e3
  405373:	add    BYTE PTR [rax],al
  405375:	add    BYTE PTR [rax],al
  405377:	add    BYTE PTR [rax],ah
  405379:	and    BYTE PTR [rsi+0x69],dl
  40537c:	jb     0x4053f2
  40537e:	jne    0x4053e1
  405380:	ins    BYTE PTR es:[rdi],dx
  405381:	push   rax
  405382:	jb     0x4053f3
  405384:	je     0x4053eb
  405386:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40538a:	(bad)  
  40538b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405393:	push   0x646f6320
  405398:	and    BYTE PTR gs:[rax],dh
  40539b:	js     0x4053c2
  40539d:	js     0x40539f
  40539f:	add    BYTE PTR [rax],ah
  4053a1:	and    BYTE PTR [rbp+0x6e],dl
  4053a4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053a8:	outs   dx,BYTE PTR ds:[rsi]
  4053a9:	and    BYTE PTR [rax+0x73],dh
  4053ac:	gs jne 0x405413
  4053af:	outs   dx,DWORD PTR ds:[rsi]
  4053b0:	and    BYTE PTR [rdx+0x65],dh
  4053b3:	ins    BYTE PTR es:[rdi],dx
  4053b4:	outs   dx,DWORD PTR ds:[rsi]
  4053b5:	movsxd esp,DWORD PTR [rcx+0x74]
  4053b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4053bf:	je     0x405430
  4053c1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4053c4:	and    BYTE PTR [rsi+0x65],dh
  4053c7:	jb     0x40543c
  4053c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4053d0:	or     al,BYTE PTR [rax]
  4053d2:	add    BYTE PTR [rax],al
  4053d4:	add    BYTE PTR [rax],al
  4053d6:	add    BYTE PTR [rax],al
  4053d8:	and    BYTE PTR [rax],ah
  4053da:	push   rbp
  4053db:	outs   dx,BYTE PTR ds:[rsi]
  4053dc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053e0:	outs   dx,BYTE PTR ds:[rsi]
  4053e1:	and    BYTE PTR [rax+0x73],dh
  4053e4:	gs jne 0x40544b
  4053e7:	outs   dx,DWORD PTR ds:[rsi]
  4053e8:	and    BYTE PTR [rdx+0x65],dh
  4053eb:	ins    BYTE PTR es:[rdi],dx
  4053ec:	outs   dx,DWORD PTR ds:[rsi]
  4053ed:	movsxd esp,DWORD PTR [rcx+0x74]
  4053f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4053f7:	and    BYTE PTR [rbx+0x69],dh
  4053fa:	jp     0x405461
  4053fc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8266
	...
  40540e:	add    BYTE PTR [rax],al
  405410:	cs jo  0x405477
  405413:	(bad)  
  405414:	je     0x405477
	...
  40541e:	add    BYTE PTR [rax],al
  405420:	rex
  405421:	rex
  405422:	add    BYTE PTR [rax],al
	...
  40542d:	add    BYTE PTR [rax],al
  40542f:	add    BYTE PTR [rax+0x40],dl
  405432:	add    BYTE PTR [rax],al
	...
  40543d:	add    BYTE PTR [rax],al
  40543f:	add    BYTE PTR [rax+0x39],dh
  405442:	add    BYTE PTR [rax],al
	...
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+0x59],ah
  405452:	add    BYTE PTR [rax],al
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rax+0x59],ah
  405462:	add    BYTE PTR [rax],al
	...
  40546d:	add    BYTE PTR [rax],al
  40546f:	add    BYTE PTR [rax+0x4051],dh
	...
  405481:	add    BYTE PTR [rax+0x0],al
	...
  405490:	sub    BYTE PTR [rbx+0x40],dl
	...
  40549e:	add    BYTE PTR [rax],al
  4054a0:	push   rax
  4054a1:	xchg   ebx,eax
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax-0x6d],ch
  4054b2:	add    BYTE PTR [rax],al
	...
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    BYTE PTR [rax+0x4093],al
	...
  4054cd:	add    BYTE PTR [rax],al
  4054cf:	add    al,al
  4054d1:	xchg   BYTE PTR [rax+0x0],al
	...
  4054e0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4054ee:	add    BYTE PTR [rax],al
  4054f0:	and    BYTE PTR [rdx+0x40],cl
	...
  4054fe:	add    BYTE PTR [rax],al
  405500:	adc    BYTE PTR [rdx+0x40],cl
	...
  40550e:	add    BYTE PTR [rax],al
  405510:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40551e:	add    BYTE PTR [rax],al
  405520:	add    BYTE PTR [rax+0x40],ah
	...
  40552e:	add    BYTE PTR [rax],al
  405530:	adc    BYTE PTR [rax+0x40],ah
	...
  40553e:	add    BYTE PTR [rax],al
  405540:	sbb    BYTE PTR [rax+0x40],ah
	...
  40554e:	add    BYTE PTR [rax],al
  405550:	xor    BYTE PTR [rax+0x40],ah
	...
  40555e:	add    BYTE PTR [rax],al
  405560:	rex add BYTE PTR [rax+0x0],0x0
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rax+0x4086],dl
	...
  40557d:	add    BYTE PTR [rax],al
  40557f:	add    BYTE PTR [rax],dh
  405581:	and    eax,DWORD PTR [rax+0x0]
	...
  405590:	sbb    BYTE PTR [rdx],0x40
	...
  40559f:	add    BYTE PTR [rax-0x7a],al
  4055a2:	add    BYTE PTR [rax],al
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rax-0x7a],dh
  4055b2:	add    BYTE PTR [rax],al
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    BYTE PTR [rax-0x80],dl
  4055c2:	add    BYTE PTR [rax],al
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rax-0x7a],bl
  4055d2:	add    BYTE PTR [rax],al
	...
  4055dd:	add    BYTE PTR [rax],al
  4055df:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4055ef:	add    BYTE PTR [rax-0x7a],dl
  4055f2:	add    BYTE PTR [rax],al
	...
  4055fd:	add    BYTE PTR [rax],al
  4055ff:	add    BYTE PTR [rdi+0x43],al
  405602:	rex.XB cmp spl,BYTE PTR [r8]
  405605:	sub    BYTE PTR [rdi+0x4e],al
  405608:	push   rbp
  405609:	sub    DWORD PTR [rax],esp
  40560b:	xor    al,0x2e
  40560d:	cmp    DWORD PTR [rsi],ebp
  40560f:	xor    al,0x0
	...
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rdi+0x43],al
  405622:	rex.XB cmp spl,BYTE PTR [r8]
  405625:	sub    BYTE PTR [rdi+0x4e],al
  405628:	push   rbp
  405629:	sub    DWORD PTR [rax],esp
  40562b:	xor    al,0x2e
  40562d:	cmp    DWORD PTR [rsi],ebp
  40562f:	xor    al,0x0
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rdi+0x43],al
  405642:	rex.XB cmp spl,BYTE PTR [r8]
  405645:	sub    BYTE PTR [rdi+0x4e],al
  405648:	push   rbp
  405649:	sub    DWORD PTR [rax],esp
  40564b:	xor    al,0x2e
  40564d:	cmp    DWORD PTR [rsi],ebp
  40564f:	xor    al,0x0
	...
  40565d:	add    BYTE PTR [rax],al
  40565f:	add    BYTE PTR [rdi+0x43],al
  405662:	rex.XB cmp spl,BYTE PTR [r8]
  405665:	sub    BYTE PTR [rdi+0x4e],al
  405668:	push   rbp
  405669:	sub    DWORD PTR [rax],esp
  40566b:	xor    al,0x2e
  40566d:	cmp    DWORD PTR [rsi],ebp
  40566f:	xor    al,0x0
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rdi+0x43],al
  405682:	rex.XB cmp spl,BYTE PTR [r8]
  405685:	sub    BYTE PTR [rdi+0x4e],al
  405688:	push   rbp
  405689:	sub    DWORD PTR [rax],esp
  40568b:	xor    al,0x2e
  40568d:	cmp    DWORD PTR [rsi],ebp
  40568f:	xor    al,0x0
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rdi+0x43],al
  4056a2:	rex.XB cmp spl,BYTE PTR [r8]
  4056a5:	sub    BYTE PTR [rdi+0x4e],al
  4056a8:	push   rbp
  4056a9:	sub    DWORD PTR [rax],esp
  4056ab:	xor    al,0x2e
  4056ad:	cmp    DWORD PTR [rsi],ebp
  4056af:	xor    al,0x0
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    BYTE PTR [rdi+0x43],al
  4056c2:	rex.XB cmp spl,BYTE PTR [r8]
  4056c5:	sub    BYTE PTR [rdi+0x4e],al
  4056c8:	push   rbp
  4056c9:	sub    DWORD PTR [rax],esp
  4056cb:	xor    al,0x2e
  4056cd:	cmp    DWORD PTR [rsi],ebp
  4056cf:	xor    al,0x0
	...
  4056dd:	add    BYTE PTR [rax],al
  4056df:	add    BYTE PTR [rdi+0x43],al
  4056e2:	rex.XB cmp spl,BYTE PTR [r8]
  4056e5:	sub    BYTE PTR [rdi+0x4e],al
  4056e8:	push   rbp
  4056e9:	sub    DWORD PTR [rax],esp
  4056eb:	xor    al,0x2e
  4056ed:	cmp    DWORD PTR [rsi],ebp
  4056ef:	xor    al,0x0
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rdi+0x43],al
  405702:	rex.XB cmp spl,BYTE PTR [r8]
  405705:	sub    BYTE PTR [rdi+0x4e],al
  405708:	push   rbp
  405709:	sub    DWORD PTR [rax],esp
  40570b:	xor    al,0x2e
  40570d:	cmp    DWORD PTR [rsi],ebp
  40570f:	xor    al,0x0
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    BYTE PTR [rdi+0x43],al
  405722:	rex.XB cmp spl,BYTE PTR [r8]
  405725:	sub    BYTE PTR [rdi+0x4e],al
  405728:	push   rbp
  405729:	sub    DWORD PTR [rax],esp
  40572b:	xor    al,0x2e
  40572d:	cmp    DWORD PTR [rsi],ebp
  40572f:	xor    al,0x0
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rdi+0x43],al
  405742:	rex.XB cmp spl,BYTE PTR [r8]
  405745:	sub    BYTE PTR [rdi+0x4e],al
  405748:	push   rbp
  405749:	sub    DWORD PTR [rax],esp
  40574b:	xor    al,0x2e
  40574d:	cmp    DWORD PTR [rsi],ebp
  40574f:	xor    al,0x0
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rdi+0x43],al
  405762:	rex.XB cmp spl,BYTE PTR [r8]
  405765:	sub    BYTE PTR [rdi+0x4e],al
  405768:	push   rbp
  405769:	sub    DWORD PTR [rax],esp
  40576b:	xor    al,0x2e
  40576d:	cmp    DWORD PTR [rsi],ebp
  40576f:	xor    al,0x0
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x43],al
  405782:	rex.XB cmp spl,BYTE PTR [r8]
  405785:	sub    BYTE PTR [rdi+0x4e],al
  405788:	push   rbp
  405789:	sub    DWORD PTR [rax],esp
  40578b:	xor    al,0x2e
  40578d:	cmp    DWORD PTR [rsi],ebp
  40578f:	xor    al,0x0
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rdi+0x43],al
  4057a2:	rex.XB cmp spl,BYTE PTR [r8]
  4057a5:	sub    BYTE PTR [rdi+0x4e],al
  4057a8:	push   rbp
  4057a9:	sub    DWORD PTR [rax],esp
  4057ab:	xor    al,0x2e
  4057ad:	cmp    DWORD PTR [rsi],ebp
  4057af:	xor    al,0x0
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x43],al
  4057c2:	rex.XB cmp spl,BYTE PTR [r8]
  4057c5:	sub    BYTE PTR [rdi+0x4e],al
  4057c8:	push   rbp
  4057c9:	sub    DWORD PTR [rax],esp
  4057cb:	xor    al,0x2e
  4057cd:	cmp    DWORD PTR [rsi],ebp
  4057cf:	xor    al,0x0
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdi+0x43],al
  4057e2:	rex.XB cmp spl,BYTE PTR [r8]
  4057e5:	sub    BYTE PTR [rdi+0x4e],al
  4057e8:	push   rbp
  4057e9:	sub    DWORD PTR [rax],esp
  4057eb:	xor    al,0x2e
  4057ed:	cmp    DWORD PTR [rsi],ebp
  4057ef:	xor    al,0x0
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rdi+0x43],al
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rdi+0x43],al
  405862:	rex.XB cmp spl,BYTE PTR [r8]
  405865:	sub    BYTE PTR [rdi+0x4e],al
  405868:	push   rbp
  405869:	sub    DWORD PTR [rax],esp
  40586b:	xor    al,0x2e
  40586d:	cmp    DWORD PTR [rsi],ebp
  40586f:	xor    al,0x0
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rdi+0x43],al
  405882:	rex.XB cmp spl,BYTE PTR [r8]
  405885:	sub    BYTE PTR [rdi+0x4e],al
  405888:	push   rbp
  405889:	sub    DWORD PTR [rax],esp
  40588b:	xor    al,0x2e
  40588d:	cmp    DWORD PTR [rsi],ebp
  40588f:	xor    al,0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x4e],al
  4058a8:	push   rbp
  4058a9:	sub    DWORD PTR [rax],esp
  4058ab:	xor    al,0x2e
  4058ad:	cmp    DWORD PTR [rsi],ebp
  4058af:	xor    al,0x0
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rdi+0x43],al
  4058c2:	rex.XB cmp spl,BYTE PTR [r8]
  4058c5:	sub    BYTE PTR [rdi+0x4e],al
  4058c8:	push   rbp
  4058c9:	sub    DWORD PTR [rax],esp
  4058cb:	xor    al,0x2e
  4058cd:	cmp    DWORD PTR [rsi],ebp
  4058cf:	xor    al,0x0
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rdi+0x43],al
  4058e2:	rex.XB cmp spl,BYTE PTR [r8]
  4058e5:	sub    BYTE PTR [rdi+0x4e],al
  4058e8:	push   rbp
  4058e9:	sub    DWORD PTR [rax],esp
  4058eb:	xor    al,0x2e
  4058ed:	cmp    DWORD PTR [rsi],ebp
  4058ef:	xor    al,0x0
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdi+0x43],al
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x4e],al
  405908:	push   rbp
  405909:	sub    DWORD PTR [rax],esp
  40590b:	xor    al,0x2e
  40590d:	cmp    DWORD PTR [rsi],ebp
  40590f:	xor    al,0x0
	...
  40591d:	add    BYTE PTR [rax],al
  40591f:	add    BYTE PTR [rdi+0x43],al
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x4e],al
  405928:	push   rbp
  405929:	sub    DWORD PTR [rax],esp
  40592b:	xor    al,0x2e
  40592d:	cmp    DWORD PTR [rsi],ebp
  40592f:	xor    al,0x0
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rdi+0x43],al
  405942:	rex.XB cmp spl,BYTE PTR [r8]
  405945:	sub    BYTE PTR [rdi+0x4e],al
  405948:	push   rbp
  405949:	sub    DWORD PTR [rax],esp
  40594b:	xor    al,0x2e
  40594d:	cmp    DWORD PTR [rsi],ebp
  40594f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x159f0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffa0000070
  406055:	adc    eax,0x15d00000
  40605a:	add    BYTE PTR [rax],al
  40605c:	js     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	loopne 0x406077
  406062:	add    BYTE PTR [rax],al
  406064:	xchg   DWORD PTR [rsi],edx
  406066:	add    BYTE PTR [rax],al
  406068:	movabs al,ds:0xa900001690000070
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	test   al,0x70
  406076:	add    BYTE PTR [rax],al
  406078:	mov    al,0x16
  40607a:	add    BYTE PTR [rax],al
  40607c:	in     eax,0x16
  40607e:	add    BYTE PTR [rax],al
  406080:	mov    al,0x70
  406082:	add    BYTE PTR [rax],al
  406084:	lock (bad) 
  406086:	add    BYTE PTR [rax],al
  406088:	rex.RB (bad) 
  40608a:	add    BYTE PTR [rax],al
  40608c:	mov    eax,0x50000070
  406091:	(bad)  
  406092:	add    BYTE PTR [rax],al
  406094:	ins    BYTE PTR es:[rdi],dx
  406095:	(bad)  
  406096:	add    BYTE PTR [rax],al
  406098:	(bad)  
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax+0x17],dh
  40609e:	add    BYTE PTR [rax],al
  4060a0:	jp     0x4060b9
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	enter  0x70,0x0
  4060a8:	adc    BYTE PTR [rdi],0x0
  4060ab:	add    BYTE PTR [rbx-0x33ffffe9],al
  4060b1:	jo     0x4060b3
  4060b3:	add    BYTE PTR [rax+0x66000017],dl
  4060b9:	sbb    BYTE PTR [rax],al
  4060bb:	add    al,dl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x18],dh
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	imul   ebx,DWORD PTR [rcx],0x0
  4060c7:	add    al,ah
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x19],dh
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	lahf   
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    al,dh
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax+0x9000019],ah
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    al,bh
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],dl
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rbx],dl
  4060e9:	sbb    al,BYTE PTR [rax]
  4060eb:	add    BYTE PTR [rcx+rsi*2],al
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	and    BYTE PTR [rdx],bl
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	(bad)  
  4060f5:	sbb    al,BYTE PTR [rax]
  4060f7:	add    BYTE PTR [rax],cl
  4060f9:	jno    0x4060fb
  4060fb:	add    BYTE PTR [rax+0x1a],dh
  4060fe:	add    BYTE PTR [rax],al
  406100:	jl     0x40611c
  406102:	add    BYTE PTR [rax],al
  406104:	adc    BYTE PTR [rcx+0x0],dh
  406107:	add    BYTE PTR [rax+0x7c00001a],al
  40610d:	sbb    eax,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rcx+rsi*2],dl
  406112:	add    BYTE PTR [rax],al
  406114:	sbb    BYTE PTR [rbx],0x0
  406117:	add    BYTE PTR [rbx+0x2c00001b],al
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax-0x6bffffe5],dl
  406125:	sbb    eax,DWORD PTR [rax]
  406127:	add    BYTE PTR [rax],dh
  406129:	jno    0x40612b
  40612b:	add    BYTE PTR [rax-0x5bffffe5],ah
  406131:	sbb    eax,DWORD PTR [rax]
  406133:	add    BYTE PTR [rcx+rsi*2],dh
  406136:	add    BYTE PTR [rax],al
  406138:	mov    al,0x1b
  40613a:	add    BYTE PTR [rax],al
  40613c:	adc    DWORD PTR [rax+rax*1],ebx
  40613f:	add    BYTE PTR [rax],bh
  406141:	jno    0x406143
  406143:	add    BYTE PTR [rax],ah
  406145:	sbb    al,0x0
  406147:	add    BYTE PTR [rdx+0x4400001d],al
  40614d:	jno    0x40614f
  40614f:	add    BYTE PTR [rax-0x76ffffe3],dl
  406155:	and    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rax+0x71],bl
  40615a:	add    BYTE PTR [rax],al
  40615c:	nop
  40615d:	and    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rsi],dh
  406161:	and    al,BYTE PTR [rax]
  406163:	add    BYTE PTR [rax+0x71],dh
  406166:	add    BYTE PTR [rax],al
  406168:	and    al,BYTE PTR [rax]
  40616b:	add    BYTE PTR [rbx+riz*1],ch
  40616e:	add    BYTE PTR [rax],al
  406170:	js     0x4061e3
  406172:	add    BYTE PTR [rax],al
  406174:	xor    BYTE PTR [rbx],ah
  406176:	add    BYTE PTR [rax],al
  406178:	call   0xffffffff884061a1
  40617d:	jno    0x40617f
  40617f:	add    al,dh
  406181:	and    al,0x0
  406183:	add    BYTE PTR [rbp+0x25],bl
  406186:	add    BYTE PTR [rax],al
  406188:	nop
  406189:	jno    0x40618b
  40618b:	add    BYTE PTR [rax+0x25],ah
  40618e:	add    BYTE PTR [rax],al
  406190:	fbld   TBYTE PTR [rip+0x71a00000]        # 0x71e06196
  406196:	add    BYTE PTR [rax],al
  406198:	loopne 0x4061bf
  40619a:	add    BYTE PTR [rax],al
  40619c:	jg     0x4061c4
  40619e:	add    BYTE PTR [rax],al
  4061a0:	lods   al,BYTE PTR ds:[rsi]
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax+0x5a000026],al
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	mov    ah,0x71
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	(bad)  
  4061b1:	(bad)  
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	jg     0x4061dd
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	mov    esp,0x80000071
  4061bd:	(bad)  
  4061be:	add    BYTE PTR [rax],al
  4061c0:	xchg   edx,eax
  4061c1:	(bad)  
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	shl    BYTE PTR [rcx+0x0],0x0
  4061c8:	movabs al,ds:0xc4000027e5000027
  4061d1:	jno    0x4061d3
  4061d3:	add    al,dh
  4061d5:	(bad)  
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	mov    gs,WORD PTR [rax]
  4061da:	add    BYTE PTR [rax],al
  4061dc:	enter  0x71,0x0
  4061e0:	nop
  4061e1:	sub    BYTE PTR [rax],al
  4061e3:	add    bl,dl
  4061e5:	sub    BYTE PTR [rax],al
  4061e7:	add    ah,dl
  4061e9:	jno    0x4061eb
  4061eb:	add    al,ah
  4061ed:	sub    BYTE PTR [rax],al
  4061ef:	add    BYTE PTR [rbx],bl
  4061f1:	sub    DWORD PTR [rax],eax
  4061f3:	add    al,ah
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax],ah
  4061f9:	sub    DWORD PTR [rax],eax
  4061fb:	add    BYTE PTR [rsi-0x17ffffd7],ch
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax-0x17ffffd7],dh
  406209:	sub    DWORD PTR [rax],eax
  40620b:	add    ah,dh
  40620d:	jno    0x40620f
  40620f:	add    al,dh
  406211:	sub    DWORD PTR [rax],eax
  406213:	add    BYTE PTR [rbp+0x2a],al
  406216:	add    BYTE PTR [rax],al
  406218:	add    BYTE PTR [rdx+0x0],dh
  40621b:	add    BYTE PTR [rax+0x2a],dl
  40621e:	add    BYTE PTR [rax],al
  406220:	(bad)  
  406221:	sub    al,BYTE PTR [rax]
  406223:	add    BYTE PTR [rdx+rsi*2],cl
  406226:	add    BYTE PTR [rax],al
  406228:	sub    al,0x0
  40622b:	add    BYTE PTR [rax+0x2c],cl
  40622e:	add    BYTE PTR [rax],al
  406230:	sbb    al,0x72
  406232:	add    BYTE PTR [rax],al
  406234:	push   rax
  406235:	sub    al,0x0
  406237:	add    BYTE PTR [rbx+0x2c],bl
  40623a:	add    BYTE PTR [rax],al
  40623c:	and    BYTE PTR [rdx+0x0],dh
  40623f:	add    BYTE PTR [rax],ah
  406241:	sub    eax,0x39660000
  406246:	add    BYTE PTR [rax],al
  406248:	xor    BYTE PTR [rax+0x0],0x0

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	cmp    BYTE PTR [rax+rax*1],ch
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],dh
  407041:	and    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	cmp    BYTE PTR [rax+rax*1],ch
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	xor    BYTE PTR [rbx],ah
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rsi],eax
  40706a:	add    eax,0x5300600
  40706f:	(bad)  
  407070:	add    al,0x70
  407072:	add    edx,DWORD PTR [rax+0x2]
  407075:	rol    BYTE PTR [rax],0x0
  407078:	add    DWORD PTR [rcx+rax*1],eax
  40707b:	add    BYTE PTR [rdx+rax*2],al
  40707e:	add    BYTE PTR [rax],al
  407080:	add    DWORD PTR [rbx],esp
  407082:	(bad)  
  407083:	add    BYTE PTR [rbx],ah
  407085:	js     0x4070a4
  407087:	add    BYTE PTR [rbx],bl
  407089:	push   0x113001c
  40708e:	cmp    eax,0xb300c00
  407093:	(bad)  
  407094:	or     dh,BYTE PTR [rax+0x9]
  407097:	push   rax
  407098:	or     al,al
  40709a:	(bad)  
  40709b:	rol    BYTE PTR [rax+riz*8],1
  40709e:	add    dh,al
  4070a0:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570a8
  4070a6:	add    DWORD PTR [rax],esi
  4070a8:	add    DWORD PTR [rcx+rax*1],eax
  4070ab:	add    BYTE PTR [rdx+rax*2],al
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	add    DWORD PTR [rcx+rax*1],eax
  4070b3:	add    BYTE PTR [rdx+rax*2],al
  4070b6:	add    BYTE PTR [rax],al
  4070b8:	add    DWORD PTR [rsi],eax
  4070ba:	add    eax,DWORD PTR [rax]
  4070bc:	(bad)  
  4070bd:	rex.X add sil,BYTE PTR [rax]
  4070c0:	add    DWORD PTR [rax+0x0],esp
  4070c3:	add    BYTE PTR [rcx],al
  4070c5:	add    BYTE PTR [rax],al
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    BYTE PTR [rax],al
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rcx],al
  4070d1:	or     al,BYTE PTR [rsi]
  4070d3:	add    BYTE PTR [rdx],cl
  4070d5:	jb     0x4070dd
  4070d7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0753d
  4070dd:	push   rax
  4070de:	add    al,al
  4070e0:	add    DWORD PTR [rdx],ecx
  4070e2:	add    eax,0x6d20a05
  4070e7:	add    eax,DWORD PTR [rbx]
  4070e9:	xor    BYTE PTR [rdx],al
  4070eb:	(bad)  
  4070ec:	add    DWORD PTR [rax+0x0],edx
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    al,0x1
  4070f3:	add    BYTE PTR [rdx+rax*2],al
  4070f6:	add    BYTE PTR [rax],al
  4070f8:	add    DWORD PTR [rsi],eax
  4070fa:	add    eax,DWORD PTR [rax]
  4070fc:	(bad)  
  4070fd:	rex.X add sil,BYTE PTR [rax]
  407100:	add    DWORD PTR [rax+0x0],esp
  407103:	add    BYTE PTR [rcx],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],al
  407109:	add    al,0x1
  40710b:	add    BYTE PTR [rdx+riz*4],al
  40710e:	add    BYTE PTR [rax],al
  407110:	add    DWORD PTR [rax],eax
  407112:	add    BYTE PTR [rax],al
  407114:	add    DWORD PTR [rsi],edx
  407116:	or     DWORD PTR [rax],eax
  407118:	(bad)  
  407119:	mov    BYTE PTR [rsi],al
  40711b:	add    BYTE PTR [rax],dl
  40711d:	js     0x407124
  40711f:	add    BYTE PTR [rbx],cl
  407121:	push   0xffffffffe2060004
  407126:	add    dh,BYTE PTR [rax]
  407128:	add    DWORD PTR [rax+0x0],esp
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rcx],al
  407131:	add    BYTE PTR [rax],al
  407133:	add    BYTE PTR [rcx],al
  407135:	add    BYTE PTR [rax],al
  407137:	add    BYTE PTR [rcx],al
  407139:	(bad)  
  40713a:	add    eax,DWORD PTR [rax]
  40713c:	(bad)  
  40713d:	(bad)  
  40713f:	xor    BYTE PTR [rcx],al
  407141:	(bad)  
  407142:	add    BYTE PTR [rax],al
  407144:	add    DWORD PTR [rdi+rax*1],ecx
  407147:	add    BYTE PTR [rdx+riz*4],cl
  40714a:	or     BYTE PTR [rax],dh
  40714c:	(bad)  
  40714d:	(bad)  
  40714e:	(bad)  
  40714f:	jo     0x407156
  407151:	push   rax
  407152:	add    al,0xc0
  407154:	add    dl,al
  407156:	add    BYTE PTR [rax],al
  407158:	add    DWORD PTR [rcx],edx
  40715a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2371
  407160:	or     dh,BYTE PTR [rax]
  407162:	or     DWORD PTR [rax+0x8],esp
  407165:	jo     0x40716e
  407167:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220753e
  40716e:	add    BYTE PTR [rax],al
  407170:	add    DWORD PTR [rcx+rax*1],eax
  407173:	add    BYTE PTR [rdx+rax*2],al
  407176:	add    BYTE PTR [rax],al
  407178:	add    DWORD PTR [rdx],ecx
  40717a:	(bad)  
  40717b:	add    BYTE PTR [rdx],cl
  40717d:	xor    al,BYTE PTR [rsi]
  40717f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075e5
  407185:	push   rax
  407186:	add    al,al
  407188:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457190
  40718e:	add    DWORD PTR [rax],esi
  407190:	add    DWORD PTR [rax],ecx
  407192:	add    eax,0x4420800
  407197:	xor    BYTE PTR [rbx],al
  407199:	(bad)  
  40719a:	add    dh,BYTE PTR [rax+0x1]
  40719d:	push   rax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rdi],eax
  4071a2:	add    al,0x0
  4071a4:	(bad)  
  4071a5:	xor    al,BYTE PTR [rbx]
  4071a7:	xor    BYTE PTR [rdx],al
  4071a9:	(bad)  
  4071aa:	add    DWORD PTR [rax+0x1],esi
  4071ad:	add    eax,0x32050002
  4071b2:	add    DWORD PTR [rax],esi
  4071b4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571bc
  4071ba:	add    DWORD PTR [rax],esi
  4071bc:	add    DWORD PTR [rax],eax
  4071be:	add    BYTE PTR [rax],al
  4071c0:	add    DWORD PTR [rax],eax
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	add    DWORD PTR [rax],eax
  4071c6:	add    BYTE PTR [rax],al
  4071c8:	add    DWORD PTR [rdi],eax
  4071ca:	add    al,0x0
  4071cc:	(bad)  
  4071cd:	xor    al,BYTE PTR [rbx]
  4071cf:	xor    BYTE PTR [rdx],al
  4071d1:	(bad)  
  4071d2:	add    DWORD PTR [rax+0x1],esi
  4071d5:	(bad)  
  4071d6:	add    eax,DWORD PTR [rax]
  4071d8:	(bad)  
  4071d9:	rex.X add sil,BYTE PTR [rax]
  4071dc:	add    DWORD PTR [rax+0x0],esp
  4071df:	add    BYTE PTR [rcx],al
  4071e1:	add    eax,0x32050002
  4071e6:	add    DWORD PTR [rax],esi
  4071e8:	add    DWORD PTR [rdi],eax
  4071ea:	add    al,0x0
  4071ec:	(bad)  
  4071ed:	xor    al,BYTE PTR [rbx]
  4071ef:	xor    BYTE PTR [rdx],al
  4071f1:	(bad)  
  4071f2:	add    DWORD PTR [rax+0x1],esi
  4071f5:	(bad)  
  4071f6:	add    eax,DWORD PTR [rax]
  4071f8:	(bad)  
  4071f9:	rex.X add sil,BYTE PTR [rax]
  4071fc:	add    DWORD PTR [rax+0x0],esp
  4071ff:	add    BYTE PTR [rcx],al
  407201:	(bad)  
  407202:	add    eax,DWORD PTR [rax]
  407204:	(bad)  
  407205:	rex.X add sil,BYTE PTR [rax]
  407208:	add    DWORD PTR [rax+0x0],esp
  40720b:	add    BYTE PTR [rcx],al
  40720d:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a13
  407213:	xor    BYTE PTR [rbx],al
  407215:	(bad)  
  407216:	add    dh,BYTE PTR [rax+0x1]
  407219:	push   rax
  40721a:	add    BYTE PTR [rax],al
  40721c:	add    DWORD PTR [rax],eax
  40721e:	add    BYTE PTR [rax],al
  407220:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	mov    ah,0x97
  40900e:	add    BYTE PTR [rax],al
  409010:	rex xchg edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	(bad)  
  409015:	nop
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	and    BYTE PTR [rax-0x6db00000],bl
  409026:	add    BYTE PTR [rax],al
  409028:	and    BYTE PTR [rcx+0x0],dl
  40902e:	add    BYTE PTR [rax],al
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	mov    esp,0x10000098
  409039:	xchg   ebx,eax
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	xor    BYTE PTR [rax+rax*1+0x0],dl
	...
  40905f:	add    BYTE PTR [rsp+rdx*4],bh
  409062:	add    BYTE PTR [rax],al
  409064:	add    BYTE PTR [rax],al
  409066:	add    BYTE PTR [rax],al
  409068:	push   rsp
  409069:	xchg   esp,eax
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	ins    BYTE PTR es:[rdi],dx
  409071:	xchg   esp,eax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	adc    BYTE PTR [rax+rax*1+0x0],0x0
  409080:	xchg   esi,eax
  409081:	xchg   esp,eax
  409082:	add    BYTE PTR [rax],al
  409084:	add    BYTE PTR [rax],al
  409086:	add    BYTE PTR [rax],al
  409088:	lods   al,BYTE PTR ds:[rsi]
  409089:	xchg   esp,eax
  40908a:	add    BYTE PTR [rax],al
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	mov    esp,0x94
  409095:	add    BYTE PTR [rax],al
  409097:	add    dh,cl
  409099:	xchg   esp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	call   0x409139
  4090a5:	add    BYTE PTR [rax],al
  4090a7:	add    al,bh
  4090a9:	xchg   esp,eax
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	adc    al,0x95
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	sub    al,0x95
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	rex.RX xchg ebp,eax
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	pop    rsp
  4090c9:	xchg   ebp,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	jo     0x409067
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	mov    dl,BYTE PTR [rbp+0x0]
  4090de:	add    BYTE PTR [rax],al
  4090e0:	sahf   
  4090e1:	xchg   ebp,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	mov    esp,0x95
  4090ed:	add    BYTE PTR [rax],al
  4090ef:	add    ah,al
  4090f1:	xchg   ebp,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	fcom   DWORD PTR [rbp+0x0]
  4090fe:	add    BYTE PTR [rax],al
  409100:	out    0x95,al
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	add    dl,BYTE PTR [rsi+0x0]
  40910e:	add    BYTE PTR [rax],al
  409110:	adc    al,0x96
	...
  40911e:	add    BYTE PTR [rax],al
  409120:	and    al,0x96
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	cmp    al,0x96
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	rex.WX xchg rsi,rax
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	pop    rdx
  409139:	xchg   esi,eax
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	xchg   si,ax
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	je     0x4090e0
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	test   BYTE PTR [rsi+0x0],dl
  409156:	add    BYTE PTR [rax],al
  409158:	xchg   esi,eax
  409159:	xchg   esi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	stos   BYTE PTR es:[rdi],al
  409161:	xchg   esi,eax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	mov    ah,0x96
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	ret    0x96
  409173:	add    BYTE PTR [rax],al
  409175:	add    BYTE PTR [rax],al
  409177:	add    ah,cl
  409179:	xchg   esi,eax
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	(bad)  
  409181:	xchg   esi,eax
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	loop   0x409120
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	(bad)  
  409191:	xchg   esi,eax
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	hlt    
  409199:	xchg   esi,eax
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	(bad)  
  4091a1:	xchg   esi,eax
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	(bad)  
  4091a9:	xchg   edi,eax
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	adc    BYTE PTR [rdi+0x0],dl
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	sbb    BYTE PTR [rdi+0x0],dl
  4091be:	add    BYTE PTR [rax],al
  4091c0:	and    dl,BYTE PTR [rdi+0x0]
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	sub    dl,BYTE PTR [rdi+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	xor    dl,BYTE PTR [rdi+0x0]
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	cmp    dl,BYTE PTR [rdi+0x0]
  4091de:	add    BYTE PTR [rax],al
  4091e0:	rex.R xchg edi,eax
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	rex.WR xchg rdi,rax
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	push   rsi
  4091f1:	xchg   edi,eax
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	(bad)  
  4091f9:	xchg   edi,eax
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	push   0xffffffffffffff97
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	je     0x4091a1
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	jl     0x4091a9
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	xchg   BYTE PTR [rdi+0x0],dl
  40921e:	add    BYTE PTR [rax],al
  409220:	nop
  409221:	xchg   edi,eax
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	(bad)  
  409229:	xchg   edi,eax
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409231:	xchg   edi,eax
	...
  40923e:	add    BYTE PTR [rax],al
  409240:	xor    BYTE PTR [rax+rax*1+0x0],dl
	...
  40924f:	add    BYTE PTR [rsp+rdx*4],bh
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	push   rsp
  409259:	xchg   esp,eax
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	ins    BYTE PTR es:[rdi],dx
  409261:	xchg   esp,eax
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	adc    BYTE PTR [rax+rax*1+0x0],0x0
  409270:	xchg   esi,eax
  409271:	xchg   esp,eax
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	lods   al,BYTE PTR ds:[rsi]
  409279:	xchg   esp,eax
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	mov    esp,0x94
  409285:	add    BYTE PTR [rax],al
  409287:	add    dh,cl
  409289:	xchg   esp,eax
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	call   0x409329
  409295:	add    BYTE PTR [rax],al
  409297:	add    al,bh
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	adc    al,0x95
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	sub    al,0x95
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	rex.RX xchg ebp,eax
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	pop    rsp
  4092b9:	xchg   ebp,eax
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	jo     0x409257
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	mov    dl,BYTE PTR [rbp+0x0]
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	sahf   
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	mov    esp,0x95
  4092dd:	add    BYTE PTR [rax],al
  4092df:	add    ah,al
  4092e1:	xchg   ebp,eax
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	fcom   DWORD PTR [rbp+0x0]
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	out    0x95,al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	add    dl,BYTE PTR [rsi+0x0]
  4092fe:	add    BYTE PTR [rax],al
  409300:	adc    al,0x96
	...
  40930e:	add    BYTE PTR [rax],al
  409310:	and    al,0x96
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	cmp    al,0x96
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	rex.WX xchg rsi,rax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	pop    rdx
  409329:	xchg   esi,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	xchg   si,ax
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	je     0x4092d0
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	test   BYTE PTR [rsi+0x0],dl
  409346:	add    BYTE PTR [rax],al
  409348:	xchg   esi,eax
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	stos   BYTE PTR es:[rdi],al
  409351:	xchg   esi,eax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	mov    ah,0x96
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	ret    0x96
  409363:	add    BYTE PTR [rax],al
  409365:	add    BYTE PTR [rax],al
  409367:	add    ah,cl
  409369:	xchg   esi,eax
  40936a:	add    BYTE PTR [rax],al
  40936c:	add    BYTE PTR [rax],al
  40936e:	add    BYTE PTR [rax],al
  409370:	(bad)  
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	loop   0x409310
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	(bad)  
  409381:	xchg   esi,eax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	hlt    
  409389:	xchg   esi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	(bad)  
  409391:	xchg   esi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	(bad)  
  409399:	xchg   edi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	adc    BYTE PTR [rdi+0x0],dl
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	sbb    BYTE PTR [rdi+0x0],dl
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	and    dl,BYTE PTR [rdi+0x0]
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	sub    dl,BYTE PTR [rdi+0x0]
  4093be:	add    BYTE PTR [rax],al
  4093c0:	xor    dl,BYTE PTR [rdi+0x0]
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	cmp    dl,BYTE PTR [rdi+0x0]
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	rex.R xchg edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	rex.WR xchg rdi,rax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	push   rsi
  4093e1:	xchg   edi,eax
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	(bad)  
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	push   0xffffffffffffff97
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	je     0x409391
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	jl     0x409399
  409402:	add    BYTE PTR [rax],al
  409404:	add    BYTE PTR [rax],al
  409406:	add    BYTE PTR [rax],al
  409408:	xchg   BYTE PTR [rdi+0x0],dl
  40940e:	add    BYTE PTR [rax],al
  409410:	nop
  409411:	xchg   edi,eax
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
  409416:	add    BYTE PTR [rax],al
  409418:	(bad)  
  409419:	xchg   edi,eax
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409421:	xchg   edi,eax
	...
  40942e:	add    BYTE PTR [rax],al
  409430:	adc    al,0x1
  409432:	jo     0x40949e
  409434:	pop    rdi
  409435:	ins    DWORD PTR es:[rdi],dx
  409436:	(bad)  
  409437:	ins    BYTE PTR es:[rdi],dx
  409438:	ins    BYTE PTR es:[rdi],dx
  409439:	outs   dx,DWORD PTR ds:[rsi]
  40943a:	movsxd eax,DWORD PTR [rax]
  40943c:	fadd   DWORD PTR [rax]
  40943e:	rex.R
  40943f:	gs ins BYTE PTR es:[rdi],dx
  409441:	gs je  0x4094a9
  409444:	rex.XB jb 0x4094b0
  409447:	je     0x4094b2
  409449:	movsxd esp,DWORD PTR [rcx+0x6c]
  40944c:	push   rbx
  40944d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409452:	outs   dx,BYTE PTR ds:[rsi]
  409453:	add    al,bh
  409455:	add    BYTE PTR [rbp+0x6e],al
  409458:	je     0x4094bf
  40945a:	jb     0x40949f
  40945c:	jb     0x4094c7
  40945e:	je     0x4094c9
  409460:	movsxd esp,DWORD PTR [rcx+0x6c]
  409463:	push   rbx
  409464:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409469:	outs   dx,BYTE PTR ds:[rsi]
  40946a:	add    BYTE PTR [rax],al
  40946c:	int    0x1
  40946e:	rex.RXB
  40946f:	gs je  0x4094b5
  409472:	jne    0x4094e6
  409474:	jb     0x4094db
  409476:	outs   dx,BYTE PTR ds:[rsi]
  409477:	je     0x4094c9
  409479:	jb     0x4094ea
  40947b:	movsxd esp,DWORD PTR [rbp+0x73]
  40947e:	jae    0x409480
  409480:	(bad)  
  409481:	add    DWORD PTR [rdi+0x65],eax
  409484:	je     0x4094c9
  409486:	jne    0x4094fa
  409488:	jb     0x4094ef
  40948a:	outs   dx,BYTE PTR ds:[rsi]
  40948b:	je     0x4094dd
  40948d:	jb     0x4094fe
  40948f:	movsxd esp,DWORD PTR [rbp+0x73]
  409492:	jae    0x4094dd
  409494:	fs add dl,dl
  409497:	add    DWORD PTR [rdi+0x65],eax
  40949a:	je     0x4094df
  40949c:	jne    0x409510
  40949e:	jb     0x409505
  4094a0:	outs   dx,BYTE PTR ds:[rsi]
  4094a1:	je     0x4094f7
  4094a3:	push   0x64616572
  4094a8:	rex.WB
  4094a9:	add    BYTE PTR fs:[rax],al
  4094ac:	adc    BYTE PTR [rdx],al
  4094ae:	rex.RXB
  4094af:	gs je  0x4094fe
  4094b2:	(bad)  
  4094b3:	jae    0x409529
  4094b5:	rex.RB jb 0x40952a
  4094b8:	outs   dx,DWORD PTR ds:[rsi]
  4094b9:	jb     0x4094bb
  4094bb:	add    BYTE PTR [rbx+0x2],dh
  4094be:	rex.RXB
  4094bf:	gs je  0x409515
  4094c2:	je     0x409525
  4094c4:	jb     0x40953a
  4094c6:	jne    0x409538
  4094c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4094ca:	outs   dx,WORD PTR ds:[rsi]
  4094cc:	add    BYTE PTR [r10+0x74654702],cl
  4094d3:	push   rbx
  4094d4:	jns    0x409549
  4094d6:	je     0x40953d
  4094d8:	ins    DWORD PTR es:[rdi],dx
  4094d9:	push   rsp
  4094da:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4094e1:	ins    BYTE PTR es:[rdi],dx
  4094e2:	gs push rsp
  4094e4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4094eb:	gs je  0x409542
  4094ee:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4094f5:	je     0x4094f7
  4094f7:	add    cl,bh
  4094f9:	add    cl,BYTE PTR [rcx+0x6e]
  4094fc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409504:	rex.XB jb 0x409570
  409507:	je     0x409572
  409509:	movsxd esp,DWORD PTR [rcx+0x6c]
  40950c:	push   rbx
  40950d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409512:	outs   dx,BYTE PTR ds:[rsi]
  409513:	add    BYTE PTR [rbx+0x3],cl
  409516:	rex.WR
  409517:	gs (bad) 
  409519:	jbe    0x409580
  40951b:	rex.XB jb 0x409587
  40951e:	je     0x409589
  409520:	movsxd esp,DWORD PTR [rcx+0x6c]
  409523:	push   rbx
  409524:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409529:	outs   dx,BYTE PTR ds:[rsi]
  40952a:	add    BYTE PTR [rax],al
  40952c:	mov    ebx,0x65755103
  409531:	jb     0x4095ac
  409533:	push   rax
  409534:	gs jb  0x40959d
  409537:	outs   dx,DWORD PTR ds:[rsi]
  409538:	jb     0x4095a7
  40953a:	(bad)  
  40953b:	outs   dx,BYTE PTR ds:[rsi]
  40953c:	movsxd esp,DWORD PTR [rbp+0x43]
  40953f:	outs   dx,DWORD PTR ds:[rsi]
  409540:	jne    0x4095b0
  409542:	je     0x4095a9
  409544:	jb     0x409546
  409546:	add    DWORD PTR [rdx+rdx*2],eax
  409549:	je     0x4095b7
  40954b:	rex.B
  40954c:	fs fs rex.RX jne 0x4095bf
  409551:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409555:	outs   dx,BYTE PTR ds:[rsi]
  409556:	push   rsp
  409557:	(bad)  
  409558:	(bad)  
  409559:	ins    BYTE PTR es:[rdi],dx
  40955a:	add    BYTE PTR gs:[rdx],al
  40955d:	add    al,0x52
  40955f:	je     0x4095cd
  409561:	rex.XB (bad) 
  409563:	jo     0x4095d9
  409565:	jne    0x4095d9
  409567:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40956a:	outs   dx,BYTE PTR ds:[rsi]
  40956b:	je     0x4095d2
  40956d:	js     0x4095e3
  40956f:	add    BYTE PTR [rcx],cl
  409571:	add    al,0x52
  409573:	je     0x4095e1
  409575:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409577:	outs   dx,DWORD PTR ds:[rsi]
  409578:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40957c:	jne    0x4095ec
  40957e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409582:	outs   dx,BYTE PTR ds:[rsi]
  409583:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409585:	je     0x4095f9
  409587:	jns    0x409589
  409589:	add    BYTE PTR [rax],dl
  40958b:	add    al,0x52
  40958d:	je     0x4095fb
  40958f:	push   rsi
  409590:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409597:	outs   dx,BYTE PTR ds:[rsi]
  409598:	ja     0x409603
  40959a:	outs   dx,BYTE PTR ds:[rsi]
  40959b:	add    BYTE PTR fs:[rax],al
  40959e:	lahf   
  40959f:	add    al,0x53
  4095a1:	gs je  0x4095f9
  4095a4:	outs   dx,BYTE PTR ds:[rsi]
  4095a5:	push   0x6c646e61
  4095aa:	gs fs rex.RB js 0x409612
  4095af:	gs jo  0x409626
  4095b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4095b9:	gs jb  0x4095bc
  4095bc:	lods   al,BYTE PTR ds:[rsi]
  4095bd:	add    al,0x53
  4095bf:	ins    BYTE PTR es:[rdi],dx
  4095c0:	gs gs jo 0x4095c4
  4095c4:	mov    edx,0x72655404
  4095c9:	ins    DWORD PTR es:[rdi],dx
  4095ca:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4095d1:	outs   dx,DWORD PTR ds:[rsi]
  4095d2:	movsxd esp,DWORD PTR [rbp+0x73]
  4095d5:	jae    0x4095d7
  4095d7:	add    cl,al
  4095d9:	add    al,0x54
  4095db:	ins    BYTE PTR es:[rdi],dx
  4095dc:	jae    0x409625
  4095de:	gs je  0x409637
  4095e1:	(bad)  
  4095e2:	ins    BYTE PTR es:[rdi],dx
  4095e3:	jne    0x40964a
  4095e5:	add    dh,cl
  4095e7:	add    al,0x55
  4095e9:	outs   dx,BYTE PTR ds:[rsi]
  4095ea:	push   0x6c646e61
  4095ef:	gs fs rex.RB js 0x409657
  4095f4:	gs jo  0x40966b
  4095f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4095fe:	gs jb  0x409601
  409601:	add    ah,ch
  409603:	add    al,0x56
  409605:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40960c:	jb     0x40967d
  40960e:	je     0x409675
  409610:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409614:	out    dx,al
  409615:	add    al,0x56
  409617:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40961e:	jne    0x409685
  409620:	jb     0x40969b
  409622:	add    BYTE PTR [rax],al
  409624:	(bad)  
  409625:	add    BYTE PTR [rdi+0x5f],bl
  409628:	rex.XB pop r15
  40962a:	jae    0x40969c
  40962c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409630:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409637:	ins    BYTE PTR es:[rdi],dx
  409638:	gs jb  0x40963b
  40963b:	add    BYTE PTR [rsi+0x0],cl
  40963e:	pop    rdi
  40963f:	pop    rdi
  409640:	fs ins BYTE PTR es:[rdi],dx
  409642:	ins    BYTE PTR es:[rdi],dx
  409643:	outs   dx,DWORD PTR ds:[rsi]
  409644:	outs   dx,BYTE PTR ds:[rsi]
  409645:	gs js  0x4096b1
  409648:	je     0x40964a
  40964a:	push   rcx
  40964b:	add    BYTE PTR [rdi+0x5f],bl
  40964e:	addr32 gs je 0x4096bf
  409652:	(bad)  
  409653:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40965a:	push   rdx
  40965b:	add    BYTE PTR [rdi+0x5f],bl
  40965e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409665:	add    BYTE PTR [rbx+0x0],dl
  409668:	pop    rdi
  409669:	pop    rdi
  40966a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409671:	movsxd eax,DWORD PTR [rax]
  409673:	add    BYTE PTR [rdx+0x0],bl
  409676:	pop    rdi
  409677:	pop    rdi
  409678:	ins    BYTE PTR es:[rdi],dx
  409679:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40967c:	jbe    0x4096dd
  40967e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409685:	add    BYTE PTR [rdi+0x5f],bl
  409688:	jae    0x4096ef
  40968a:	je     0x4096eb
  40968c:	(bad)  
  40968d:	jo     0x4096ff
  40968f:	pop    rdi
  409690:	je     0x40970b
  409692:	jo     0x4096f9
  409694:	add    BYTE PTR [rax],al
  409696:	(bad)  
  409697:	add    BYTE PTR [rdi+0x5f],bl
  40969a:	jae    0x409701
  40969c:	je     0x409713
  40969e:	jae    0x409705
  4096a0:	jb     0x40970f
  4096a2:	(bad)  
  4096a3:	je     0x40970d
  4096a5:	gs jb  0x40971a
  4096a8:	add    BYTE PTR [rax],al
  4096aa:	jno    0x4096ac
  4096ac:	pop    rdi
  4096ad:	(bad)  
  4096ae:	movsxd ebp,DWORD PTR [rbp+0x64]
  4096b1:	ins    BYTE PTR es:[rdi],dx
  4096b2:	outs   dx,BYTE PTR ds:[rsi]
  4096b3:	add    BYTE PTR [rax+0x0],bh
  4096b6:	pop    rdi
  4096b7:	(bad)  
  4096b8:	ins    DWORD PTR es:[rdi],dx
  4096b9:	jae    0x409722
  4096bb:	pop    rdi
  4096bc:	gs js  0x409728
  4096bf:	je     0x4096c1
  4096c1:	add    BYTE PTR [rdx+0x65635f00],cl
  4096c7:	js     0x409732
  4096c9:	je     0x4096cb
  4096cb:	add    dl,bl
  4096cd:	add    BYTE PTR [rdi+0x66],bl
  4096d0:	ins    DWORD PTR es:[rdi],dx
  4096d1:	outs   dx,DWORD PTR ds:[rsi]
  4096d2:	fs add BYTE PTR gs:[rax],al
  4096d6:	sbb    al,BYTE PTR [rcx]
  4096d8:	pop    rdi
  4096d9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4096e0:	ins    DWORD PTR es:[rdi],dx
  4096e1:	add    BYTE PTR [rax+0x6f6c5f01],al
  4096e7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4096ea:	and    eax,0x6e6f5f02
  4096ef:	gs js  0x40975b
  4096f2:	je     0x4096f4
  4096f4:	(bad)
  4096f8:	outs   dx,BYTE PTR ds:[rsi]
  4096f9:	ins    BYTE PTR es:[rdi],dx
  4096fa:	outs   dx,DWORD PTR ds:[rsi]
  4096fb:	movsxd ebp,DWORD PTR [rbx+0x0]
  4096fe:	jg     0x409703
  409700:	(bad)  
  409701:	(bad)  
  409702:	outs   dx,DWORD PTR ds:[rsi]
  409703:	jb     0x409779
  409705:	add    BYTE PTR [rax+0x6c616303],dl
  40970b:	ins    BYTE PTR es:[rdi],dx
  40970c:	outs   dx,DWORD PTR ds:[rsi]
  40970d:	movsxd eax,DWORD PTR [rax]
  40970f:	add    BYTE PTR [rbp+0x69786503],bl
  409715:	je     0x409717
  409717:	add    BYTE PTR [rcx+0x6c636603],ah
  40971d:	outs   dx,DWORD PTR ds:[rsi]
  40971e:	jae    0x409785
  409720:	add    BYTE PTR [rax],al
  409722:	movabs ds:0xa70000666f656603,al
  40972b:	add    esp,DWORD PTR [rsi+0x67]
  40972e:	gs je  0x4097a4
  409731:	add    BYTE PTR [rsi+0x706f6603],ch
  409737:	outs   dx,BYTE PTR gs:[rsi]
  409739:	add    BYTE PTR [rax+0x72706603],dh
  40973f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  409746:	data16 jb 0x4097ae
  409749:	add    BYTE PTR gs:[rax],al
  40974c:	ret    0x6603
  40974f:	ja     0x4097c3
  409751:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409759:	(bad)  
  40975a:	ins    BYTE PTR es:[rdi],dx
  40975b:	ins    BYTE PTR es:[rdi],dx
  40975c:	outs   dx,DWORD PTR ds:[rsi]
  40975d:	movsxd eax,DWORD PTR [rax]
  40975f:	add    al,bh
  409761:	add    ebp,DWORD PTR [rbp+0x65]
  409764:	ins    DWORD PTR es:[rdi],dx
  409765:	movsxd esi,DWORD PTR [rax+0x79]
  409768:	add    BYTE PTR [rax],al
  40976a:	inc    BYTE PTR [rbx]
  40976c:	jo     0x4097d3
  40976e:	jb     0x4097e2
  409770:	outs   dx,DWORD PTR ds:[rsi]
  409771:	jb     0x409773
  409773:	add    BYTE PTR [rax],dl
  409775:	add    al,0x73
  409777:	movsxd esp,DWORD PTR [rcx+0x6e]
  40977a:	data16 add BYTE PTR [rsi],dl
  40977d:	add    al,0x73
  40977f:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409786:	and    al,0x4
  409788:	jae    0x4097fe
  40978a:	jb     0x4097ef
  40978c:	ins    DWORD PTR es:[rdi],dx
  40978d:	jo     0x40978f
  40978f:	add    BYTE PTR [rbx],ch
  409791:	add    al,0x73
  409793:	je     0x409807
  409795:	ins    BYTE PTR es:[rdi],dx
  409796:	outs   dx,BYTE PTR gs:[rsi]
  409798:	add    BYTE PTR [rax],al
  40979a:	cs add al,0x73
  40979d:	je     0x409811
  40979f:	outs   dx,BYTE PTR ds:[rsi]
  4097a0:	movsxd ebp,DWORD PTR [rbp+0x70]
  4097a3:	add    BYTE PTR [rsi+0x4],cl
  4097a6:	jbe    0x40980e
  4097a8:	jo     0x40981c
  4097aa:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4097b1:	nop
  4097b2:	add    BYTE PTR [rax],al
  4097b4:	ins    BYTE PTR es:[rdi],dx
  4097b5:	imul   esp,DWORD PTR [rdx+0x70],0x2d6a6f72
  4097bc:	xor    DWORD PTR [rdx],esi
  4097be:	cs fs ins BYTE PTR es:[rdi],dx
  4097c1:	ins    BYTE PTR es:[rdi],dx
  4097c2:	add    BYTE PTR [rax],al
  4097c4:	adc    al,0x90
  4097c6:	add    BYTE PTR [rax],al
  4097c8:	adc    al,0x90
  4097ca:	add    BYTE PTR [rax],al
  4097cc:	adc    al,0x90
  4097ce:	add    BYTE PTR [rax],al
  4097d0:	adc    al,0x90
  4097d2:	add    BYTE PTR [rax],al
  4097d4:	adc    al,0x90
  4097d6:	add    BYTE PTR [rax],al
  4097d8:	adc    al,0x90
  4097da:	add    BYTE PTR [rax],al
  4097dc:	adc    al,0x90
  4097de:	add    BYTE PTR [rax],al
  4097e0:	adc    al,0x90
  4097e2:	add    BYTE PTR [rax],al
  4097e4:	adc    al,0x90
  4097e6:	add    BYTE PTR [rax],al
  4097e8:	adc    al,0x90
  4097ea:	add    BYTE PTR [rax],al
  4097ec:	adc    al,0x90
  4097ee:	add    BYTE PTR [rax],al
  4097f0:	adc    al,0x90
  4097f2:	add    BYTE PTR [rax],al
  4097f4:	adc    al,0x90
  4097f6:	add    BYTE PTR [rax],al
  4097f8:	adc    al,0x90
  4097fa:	add    BYTE PTR [rax],al
  4097fc:	adc    al,0x90
  4097fe:	add    BYTE PTR [rax],al
  409800:	adc    al,0x90
  409802:	add    BYTE PTR [rax],al
  409804:	adc    al,0x90
  409806:	add    BYTE PTR [rax],al
  409808:	adc    al,0x90
  40980a:	add    BYTE PTR [rax],al
  40980c:	adc    al,0x90
  40980e:	add    BYTE PTR [rax],al
  409810:	adc    al,0x90
  409812:	add    BYTE PTR [rax],al
  409814:	adc    al,0x90
  409816:	add    BYTE PTR [rax],al
  409818:	adc    al,0x90
  40981a:	add    BYTE PTR [rax],al
  40981c:	adc    al,0x90
  40981e:	add    BYTE PTR [rax],al
  409820:	rex.WXB
  409821:	rex.RB push r10
  409823:	rex.WRX
  409824:	rex.RB
  409825:	xor    r14,QWORD PTR [rdx]
  409828:	cs fs ins BYTE PTR es:[rdi],dx
  40982b:	ins    BYTE PTR es:[rdi],dx
  40982c:	add    BYTE PTR [rax],al
  40982e:	add    BYTE PTR [rax],al
  409830:	sub    BYTE PTR [rax-0x6fd80000],dl
  409836:	add    BYTE PTR [rax],al
  409838:	sub    BYTE PTR [rax-0x6fd80000],dl
  40983e:	add    BYTE PTR [rax],al
  409840:	sub    BYTE PTR [rax-0x6fd80000],dl
  409846:	add    BYTE PTR [rax],al
  409848:	sub    BYTE PTR [rax-0x6fd80000],dl
  40984e:	add    BYTE PTR [rax],al
  409850:	sub    BYTE PTR [rax-0x6fd80000],dl
  409856:	add    BYTE PTR [rax],al
  409858:	sub    BYTE PTR [rax-0x6fd80000],dl
  40985e:	add    BYTE PTR [rax],al
  409860:	sub    BYTE PTR [rax-0x6fd80000],dl
  409866:	add    BYTE PTR [rax],al
  409868:	sub    BYTE PTR [rax-0x6fd80000],dl
  40986e:	add    BYTE PTR [rax],al
  409870:	sub    BYTE PTR [rax-0x6fd80000],dl
  409876:	add    BYTE PTR [rax],al
  409878:	sub    BYTE PTR [rax-0x6fd80000],dl
  40987e:	add    BYTE PTR [rax],al
  409880:	sub    BYTE PTR [rax-0x6fd80000],dl
  409886:	add    BYTE PTR [rax],al
  409888:	sub    BYTE PTR [rax-0x6fd80000],dl
  40988e:	add    BYTE PTR [rax],al
  409890:	sub    BYTE PTR [rax-0x6fd80000],dl
  409896:	add    BYTE PTR [rax],al
  409898:	sub    BYTE PTR [rax-0x6fd80000],dl
  40989e:	add    BYTE PTR [rax],al
  4098a0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098a6:	add    BYTE PTR [rax],al
  4098a8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098ae:	add    BYTE PTR [rax],al
  4098b0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4098b6:	add    BYTE PTR [rax],al
  4098b8:	sub    BYTE PTR [rax+0x736d0000],dl
  4098be:	jbe    0x409923
  4098c0:	jb     0x409936
  4098c2:	cs fs ins BYTE PTR es:[rdi],dx
  4098c5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x17],dh
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x4019],ah
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x19],dh
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
