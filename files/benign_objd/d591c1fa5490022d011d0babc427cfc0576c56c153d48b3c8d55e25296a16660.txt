
d591c1fa5490022d011d0babc427cfc0576c56c153d48b3c8d55e25296a16660.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    QWORD PTR [rsp+0x8],rbx
   140001015:	mov    QWORD PTR [rsp+0x10],rsi
   14000101a:	push   rdi
   14000101b:	sub    rsp,0x20
   14000101f:	mov    rax,r8
   140001022:	neg    rax
   140001025:	sbb    esi,esi
   140001027:	not    esi
   140001029:	and    esi,0x80004003
   14000102f:	jl     0x1400010af
   140001031:	and    QWORD PTR [r8],0x0
   140001035:	mov    rax,QWORD PTR [rip+0x7414]        # 0x140008450
   14000103c:	cmp    rax,QWORD PTR [rdx]
   14000103f:	jne    0x14000104e
   140001041:	mov    rax,QWORD PTR [rip+0x7410]        # 0x140008458
   140001048:	cmp    rax,QWORD PTR [rdx+0x8]
   14000104c:	je     0x140001089
   14000104e:	mov    rax,QWORD PTR [rip+0x743b]        # 0x140008490
   140001055:	cmp    rax,QWORD PTR [rdx]
   140001058:	jne    0x140001067
   14000105a:	mov    rax,QWORD PTR [rip+0x7437]        # 0x140008498
   140001061:	cmp    rax,QWORD PTR [rdx+0x8]
   140001065:	je     0x140001089
   140001067:	mov    rax,QWORD PTR [rip+0x7412]        # 0x140008480
   14000106e:	cmp    rax,QWORD PTR [rdx]
   140001071:	jne    0x14000108e
   140001073:	mov    rax,QWORD PTR [rip+0x740e]        # 0x140008488
   14000107a:	cmp    rax,QWORD PTR [rdx+0x8]
   14000107e:	jne    0x14000108e
   140001080:	test   rcx,rcx
   140001083:	je     0x140001089
   140001085:	add    rcx,0x8
   140001089:	mov    QWORD PTR [r8],rcx
   14000108c:	jmp    0x140001093
   14000108e:	mov    esi,0x80004002
   140001093:	test   esi,esi
   140001095:	js     0x1400010af
   140001097:	mov    rdi,QWORD PTR [r8]
   14000109a:	mov    rdx,QWORD PTR [rdi]
   14000109d:	mov    rbx,QWORD PTR [rdx+0x8]
   1400010a1:	mov    rcx,rbx
   1400010a4:	call   QWORD PTR [rip+0x62ee]        # 0x140007398
   1400010aa:	mov    rcx,rdi
   1400010ad:	call   rbx
   1400010af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010b4:	mov    eax,esi
   1400010b6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400010bb:	add    rsp,0x20
   1400010bf:	pop    rdi
   1400010c0:	ret    
   1400010c1:	int3   
   1400010c2:	int3   
   1400010c3:	int3   
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	cmp    DWORD PTR [rcx+0x38],0x0
   1400010d4:	jne    0x1400010dd
   1400010d6:	lock inc DWORD PTR [rip+0x9507]        # 0x14000a5e4
   1400010dd:	mov    eax,0x1
   1400010e2:	lock xadd DWORD PTR [rcx+0x38],eax
   1400010e7:	inc    eax
   1400010e9:	ret    
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rbx
   1400010f2:	sub    rsp,0x20
   1400010f6:	or     ebx,0xffffffff
   1400010f9:	lock xadd DWORD PTR [rcx+0x38],ebx
   1400010fe:	sub    ebx,0x1
   140001101:	jne    0x140001125
   140001103:	test   rcx,rcx
   140001106:	je     0x14000110d
   140001108:	call   0x140001134
   14000110d:	or     ecx,0xffffffff
   140001110:	lock xadd DWORD PTR [rip+0x94cc],ecx        # 0x14000a5e4
   140001118:	cmp    ecx,0x1
   14000111b:	jne    0x140001125
   14000111d:	xor    ecx,ecx
   14000111f:	call   QWORD PTR [rip+0x6143]        # 0x140007268
   140001125:	mov    eax,ebx
   140001127:	add    rsp,0x20
   14000112b:	pop    rbx
   14000112c:	ret    
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	mov    QWORD PTR [rsp+0x8],rbx
   140001139:	mov    QWORD PTR [rsp+0x10],rsi
   14000113e:	push   rdi
   14000113f:	sub    rsp,0x20
   140001143:	cmp    QWORD PTR [rcx+0x18],0x0
   140001148:	lea    rax,[rip+0x64e9]        # 0x140007638
   14000114f:	mov    QWORD PTR [rcx],rax
   140001152:	mov    rdi,rcx
   140001155:	lea    rax,[rip+0x6454]        # 0x1400075b0
   14000115c:	mov    QWORD PTR [rcx+0x8],rax
   140001160:	je     0x140001167
   140001162:	and    QWORD PTR [rcx+0x18],0x0
   140001167:	mov    rsi,QWORD PTR [rcx+0x20]
   14000116b:	test   rsi,rsi
   14000116e:	je     0x14000118a
   140001170:	mov    rax,QWORD PTR [rsi]
   140001173:	mov    rbx,QWORD PTR [rax+0x10]
   140001177:	mov    rcx,rbx
   14000117a:	call   QWORD PTR [rip+0x6218]        # 0x140007398
   140001180:	mov    rcx,rsi
   140001183:	call   rbx
   140001185:	and    QWORD PTR [rdi+0x20],0x0
   14000118a:	mov    rcx,QWORD PTR [rdi+0x28]
   14000118e:	test   rcx,rcx
   140001191:	je     0x14000119e
   140001193:	call   QWORD PTR [rip+0x5fef]        # 0x140007188
   140001199:	and    QWORD PTR [rdi+0x28],0x0
   14000119e:	mov    rsi,QWORD PTR [rdi+0x10]
   1400011a2:	test   rsi,rsi
   1400011a5:	je     0x1400011c1
   1400011a7:	mov    rax,QWORD PTR [rsi]
   1400011aa:	mov    rbx,QWORD PTR [rax+0x10]
   1400011ae:	mov    rcx,rbx
   1400011b1:	call   QWORD PTR [rip+0x61e1]        # 0x140007398
   1400011b7:	mov    rcx,rsi
   1400011ba:	call   rbx
   1400011bc:	and    QWORD PTR [rdi+0x10],0x0
   1400011c1:	mov    rcx,QWORD PTR [rip+0x8e58]        # 0x14000a020
   1400011c8:	cmp    rcx,0xffffffffffffffff
   1400011cc:	je     0x1400011fb
   1400011ce:	lea    rax,[rcx-0x1]
   1400011d2:	cmp    rax,0xfffffffffffffffd
   1400011d6:	ja     0x1400011f0
   1400011d8:	cmp    DWORD PTR [rcx+0x270],0x0
   1400011df:	jne    0x1400011f0
   1400011e1:	cmp    DWORD PTR [rcx],0x53464c61
   1400011e7:	jne    0x1400011f0
   1400011e9:	call   0x1400054c4
   1400011ee:	jmp    0x1400011fb
   1400011f0:	mov    ecx,0x6
   1400011f5:	call   QWORD PTR [rip+0x5f6d]        # 0x140007168
   1400011fb:	mov    rcx,rdi
   1400011fe:	call   0x140005bd0
   140001203:	mov    rbx,QWORD PTR [rsp+0x30]
   140001208:	mov    rax,rdi
   14000120b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001210:	add    rsp,0x20
   140001214:	pop    rdi
   140001215:	ret    
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	mov    QWORD PTR [rsp+0x10],rbx
   140001221:	mov    QWORD PTR [rsp+0x18],rsi
   140001226:	mov    QWORD PTR [rsp+0x20],rdi
   14000122b:	push   rbp
   14000122c:	push   r14
   14000122e:	push   r15
   140001230:	mov    rbp,rsp
   140001233:	sub    rsp,0x50
   140001237:	mov    rax,QWORD PTR [rcx]
   14000123a:	mov    rdi,rcx
   14000123d:	xor    r14d,r14d
   140001240:	mov    r15,rdx
   140001243:	and    QWORD PTR [rbp+0x20],r14
   140001247:	and    DWORD PTR [rdx],r14d
   14000124a:	mov    rbx,QWORD PTR [rax]
   14000124d:	mov    rcx,rbx
   140001250:	call   QWORD PTR [rip+0x6142]        # 0x140007398
   140001256:	lea    r8,[rbp+0x20]
   14000125a:	mov    rcx,rdi
   14000125d:	lea    rdx,[rip+0x723c]        # 0x1400084a0
   140001264:	call   rbx
   140001266:	mov    esi,eax
   140001268:	test   eax,eax
   14000126a:	js     0x1400012da
   14000126c:	mov    rdi,QWORD PTR [rbp+0x20]
   140001270:	xor    eax,eax
   140001272:	mov    QWORD PTR [rbp-0x20],rax
   140001276:	mov    QWORD PTR [rbp-0x18],rax
   14000127a:	mov    QWORD PTR [rbp-0x10],rax
   14000127e:	mov    DWORD PTR [rbp-0x30],0x1
   140001285:	mov    DWORD PTR [rbp-0x28],0x11
   14000128c:	mov    rax,QWORD PTR [rdi]
   14000128f:	mov    rbx,QWORD PTR [rax+0x18]
   140001293:	mov    rcx,rbx
   140001296:	call   QWORD PTR [rip+0x60fc]        # 0x140007398
   14000129c:	lea    r9,[rbp-0x20]
   1400012a0:	mov    rcx,rdi
   1400012a3:	lea    r8,[rbp-0x30]
   1400012a7:	lea    edx,[r14+0x1]
   1400012ab:	call   rbx
   1400012ad:	mov    esi,eax
   1400012af:	test   eax,eax
   1400012b1:	jne    0x1400012c1
   1400012b3:	mov    r14d,DWORD PTR [rbp-0x18]
   1400012b7:	lea    rcx,[rbp-0x20]
   1400012bb:	call   QWORD PTR [rip+0x60c7]        # 0x140007388
   1400012c1:	mov    rdi,QWORD PTR [rbp+0x20]
   1400012c5:	mov    rax,QWORD PTR [rdi]
   1400012c8:	mov    rbx,QWORD PTR [rax+0x10]
   1400012cc:	mov    rcx,rbx
   1400012cf:	call   QWORD PTR [rip+0x60c3]        # 0x140007398
   1400012d5:	mov    rcx,rdi
   1400012d8:	call   rbx
   1400012da:	test   esi,esi
   1400012dc:	jne    0x1400012ee
   1400012de:	lea    eax,[rsi+0x2]
   1400012e1:	cmp    ax,r14w
   1400012e5:	jne    0x1400012ee
   1400012e7:	mov    DWORD PTR [r15],0x1
   1400012ee:	lea    r11,[rsp+0x50]
   1400012f3:	mov    eax,esi
   1400012f5:	mov    rbx,QWORD PTR [r11+0x28]
   1400012f9:	mov    rsi,QWORD PTR [r11+0x30]
   1400012fd:	mov    rdi,QWORD PTR [r11+0x38]
   140001301:	mov    rsp,r11
   140001304:	pop    r15
   140001306:	pop    r14
   140001308:	pop    rbp
   140001309:	ret    
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	mov    r11,rsp
   140001313:	mov    QWORD PTR [r11+0x8],rbx
   140001317:	mov    QWORD PTR [r11+0x10],rbp
   14000131b:	mov    QWORD PTR [r11+0x18],rsi
   14000131f:	push   rdi
   140001320:	push   r12
   140001322:	push   r13
   140001324:	push   r14
   140001326:	push   r15
   140001328:	sub    rsp,0x40
   14000132c:	mov    r14,QWORD PTR [rsp+0x90]
   140001334:	mov    r15d,r9d
   140001337:	mov    r12d,r8d
   14000133a:	mov    r13,rdx
   14000133d:	test   r14,r14
   140001340:	je     0x1400013df
   140001346:	mov    rbp,QWORD PTR [rsp+0x98]
   14000134e:	test   rbp,rbp
   140001351:	je     0x1400013df
   140001357:	and    QWORD PTR [r11+0x28],0x0
   14000135c:	lea    rax,[r11+0x28]
   140001360:	xor    edx,edx
   140001362:	mov    QWORD PTR [r11-0x48],rax
   140001366:	lea    r9,[rip+0x619b]        # 0x140007508
   14000136d:	lea    rcx,[rip+0x61c4]        # 0x140007538
   140001374:	lea    r8d,[rdx+0x1]
   140001378:	call   QWORD PTR [rip+0x6002]        # 0x140007380
   14000137e:	mov    esi,eax
   140001380:	test   eax,eax
   140001382:	js     0x1400013e4
   140001384:	mov    rdi,QWORD PTR [rsp+0x90]
   14000138c:	test   rdi,rdi
   14000138f:	je     0x1400013e4
   140001391:	mov    rax,QWORD PTR [rdi]
   140001394:	mov    rbx,QWORD PTR [rax+0x18]
   140001398:	mov    rcx,rbx
   14000139b:	call   QWORD PTR [rip+0x5ff7]        # 0x140007398
   1400013a1:	mov    QWORD PTR [rsp+0x30],rbp
   1400013a6:	mov    r9d,r12d
   1400013a9:	mov    QWORD PTR [rsp+0x28],r14
   1400013ae:	xor    r8d,r8d
   1400013b1:	mov    rdx,r13
   1400013b4:	mov    DWORD PTR [rsp+0x20],r15d
   1400013b9:	mov    rcx,rdi
   1400013bc:	call   rbx
   1400013be:	mov    rdi,QWORD PTR [rsp+0x90]
   1400013c6:	mov    esi,eax
   1400013c8:	mov    rax,QWORD PTR [rdi]
   1400013cb:	mov    rbx,QWORD PTR [rax+0x10]
   1400013cf:	mov    rcx,rbx
   1400013d2:	call   QWORD PTR [rip+0x5fc0]        # 0x140007398
   1400013d8:	mov    rcx,rdi
   1400013db:	call   rbx
   1400013dd:	jmp    0x1400013e4
   1400013df:	mov    esi,0x80004003
   1400013e4:	lea    r11,[rsp+0x40]
   1400013e9:	mov    eax,esi
   1400013eb:	mov    rbx,QWORD PTR [r11+0x30]
   1400013ef:	mov    rbp,QWORD PTR [r11+0x38]
   1400013f3:	mov    rsi,QWORD PTR [r11+0x40]
   1400013f7:	mov    rsp,r11
   1400013fa:	pop    r15
   1400013fc:	pop    r14
   1400013fe:	pop    r13
   140001400:	pop    r12
   140001402:	pop    rdi
   140001403:	ret    
   140001404:	int3   
   140001405:	int3   
   140001406:	int3   
   140001407:	int3   
   140001408:	int3   
   140001409:	int3   
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    r11,rsp
   140001413:	mov    QWORD PTR [r11+0x8],rbx
   140001417:	mov    QWORD PTR [r11+0x10],rbp
   14000141b:	mov    QWORD PTR [r11+0x18],rsi
   14000141f:	mov    QWORD PTR [r11+0x20],rdi
   140001423:	push   r12
   140001425:	push   r14
   140001427:	push   r15
   140001429:	sub    rsp,0x40
   14000142d:	mov    rbp,QWORD PTR [rsp+0x80]
   140001435:	mov    r14d,r9d
   140001438:	mov    rax,rbp
   14000143b:	mov    QWORD PTR [r11+0x28],0x0
   140001443:	neg    rax
   140001446:	mov    r15d,r8d
   140001449:	mov    r12,rdx
   14000144c:	sbb    esi,esi
   14000144e:	not    esi
   140001450:	and    esi,0x80004003
   140001456:	jl     0x1400014de
   14000145c:	xor    edx,edx
   14000145e:	lea    rax,[r11+0x28]
   140001462:	lea    r9,[rip+0x609f]        # 0x140007508
   140001469:	mov    QWORD PTR [r11-0x38],rax
   14000146d:	lea    rcx,[rip+0x60c4]        # 0x140007538
   140001474:	lea    r8d,[rdx+0x1]
   140001478:	call   QWORD PTR [rip+0x5f02]        # 0x140007380
   14000147e:	mov    esi,eax
   140001480:	test   eax,eax
   140001482:	js     0x1400014de
   140001484:	mov    rdi,QWORD PTR [rsp+0x80]
   14000148c:	test   rdi,rdi
   14000148f:	je     0x1400014de
   140001491:	mov    rax,QWORD PTR [rdi]
   140001494:	mov    rbx,QWORD PTR [rax+0x18]
   140001498:	mov    rcx,rbx
   14000149b:	call   QWORD PTR [rip+0x5ef7]        # 0x140007398
   1400014a1:	and    QWORD PTR [rsp+0x30],0x0
   1400014a7:	mov    r9d,r15d
   1400014aa:	mov    QWORD PTR [rsp+0x28],rbp
   1400014af:	xor    r8d,r8d
   1400014b2:	mov    rdx,r12
   1400014b5:	mov    DWORD PTR [rsp+0x20],r14d
   1400014ba:	mov    rcx,rdi
   1400014bd:	call   rbx
   1400014bf:	mov    rdi,QWORD PTR [rsp+0x80]
   1400014c7:	mov    esi,eax
   1400014c9:	mov    rax,QWORD PTR [rdi]
   1400014cc:	mov    rbx,QWORD PTR [rax+0x10]
   1400014d0:	mov    rcx,rbx
   1400014d3:	call   QWORD PTR [rip+0x5ebf]        # 0x140007398
   1400014d9:	mov    rcx,rdi
   1400014dc:	call   rbx
   1400014de:	mov    rbx,QWORD PTR [rsp+0x60]
   1400014e3:	mov    eax,esi
   1400014e5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400014ea:	mov    rbp,QWORD PTR [rsp+0x68]
   1400014ef:	mov    rdi,QWORD PTR [rsp+0x78]
   1400014f4:	add    rsp,0x40
   1400014f8:	pop    r15
   1400014fa:	pop    r14
   1400014fc:	pop    r12
   1400014fe:	ret    
   1400014ff:	int3   
   140001500:	int3   
   140001501:	int3   
   140001502:	int3   
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	mov    r11,rsp
   140001513:	mov    QWORD PTR [r11+0x8],rbx
   140001517:	mov    QWORD PTR [r11+0x18],rbp
   14000151b:	mov    QWORD PTR [r11+0x20],rsi
   14000151f:	push   rdi
   140001520:	push   r12
   140001522:	push   r13
   140001524:	push   r14
   140001526:	push   r15
   140001528:	sub    rsp,0x50
   14000152c:	mov    r12d,r9d
   14000152f:	mov    r13,r8
   140001532:	mov    r15,rdx
   140001535:	test   rdx,rdx
   140001538:	je     0x140001606
   14000153e:	mov    rbp,QWORD PTR [rsp+0xb8]
   140001546:	test   rbp,rbp
   140001549:	je     0x140001606
   14000154f:	mov    r14,QWORD PTR [rsp+0xc0]
   140001557:	test   r14,r14
   14000155a:	je     0x140001606
   140001560:	and    QWORD PTR [r11+0x10],0x0
   140001565:	lea    rax,[r11+0x10]
   140001569:	xor    edx,edx
   14000156b:	mov    QWORD PTR [r11-0x58],rax
   14000156f:	lea    r9,[rip+0x5f92]        # 0x140007508
   140001576:	lea    rcx,[rip+0x5fbb]        # 0x140007538
   14000157d:	lea    r8d,[rdx+0x1]
   140001581:	call   QWORD PTR [rip+0x5df9]        # 0x140007380
   140001587:	mov    esi,eax
   140001589:	test   eax,eax
   14000158b:	js     0x14000160b
   14000158d:	mov    rdi,QWORD PTR [rsp+0x88]
   140001595:	test   rdi,rdi
   140001598:	je     0x14000160b
   14000159a:	mov    rax,QWORD PTR [rdi]
   14000159d:	mov    rbx,QWORD PTR [rax+0x20]
   1400015a1:	mov    rcx,rbx
   1400015a4:	call   QWORD PTR [rip+0x5dee]        # 0x140007398
   1400015aa:	mov    rax,QWORD PTR [rsp+0xb0]
   1400015b2:	mov    r9d,r12d
   1400015b5:	mov    QWORD PTR [rsp+0x40],r14
   1400015ba:	mov    r8,r13
   1400015bd:	mov    QWORD PTR [rsp+0x38],rbp
   1400015c2:	mov    rdx,r15
   1400015c5:	mov    QWORD PTR [rsp+0x30],rax
   1400015ca:	mov    rcx,rdi
   1400015cd:	mov    eax,DWORD PTR [rsp+0xa8]
   1400015d4:	mov    DWORD PTR [rsp+0x28],eax
   1400015d8:	mov    eax,DWORD PTR [rsp+0xa0]
   1400015df:	mov    DWORD PTR [rsp+0x20],eax
   1400015e3:	call   rbx
   1400015e5:	mov    rdi,QWORD PTR [rsp+0x88]
   1400015ed:	mov    esi,eax
   1400015ef:	mov    rax,QWORD PTR [rdi]
   1400015f2:	mov    rbx,QWORD PTR [rax+0x10]
   1400015f6:	mov    rcx,rbx
   1400015f9:	call   QWORD PTR [rip+0x5d99]        # 0x140007398
   1400015ff:	mov    rcx,rdi
   140001602:	call   rbx
   140001604:	jmp    0x14000160b
   140001606:	mov    esi,0x80004003
   14000160b:	lea    r11,[rsp+0x50]
   140001610:	mov    eax,esi
   140001612:	mov    rbx,QWORD PTR [r11+0x30]
   140001616:	mov    rbp,QWORD PTR [r11+0x40]
   14000161a:	mov    rsi,QWORD PTR [r11+0x48]
   14000161e:	mov    rsp,r11
   140001621:	pop    r15
   140001623:	pop    r14
   140001625:	pop    r13
   140001627:	pop    r12
   140001629:	pop    rdi
   14000162a:	ret    
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	int3   
   140001631:	int3   
   140001632:	int3   
   140001633:	int3   
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    rax,rsp
   140001643:	mov    QWORD PTR [rax+0x8],rbx
   140001647:	mov    QWORD PTR [rax+0x10],rsi
   14000164b:	mov    QWORD PTR [rax+0x18],rdi
   14000164f:	mov    QWORD PTR [rax+0x20],r14
   140001653:	push   rbp
   140001654:	mov    rbp,rsp
   140001657:	sub    rsp,0x50
   14000165b:	mov    edi,r9d
   14000165e:	mov    rsi,r8
   140001661:	mov    r14,rdx
   140001664:	test   r8,r8
   140001667:	je     0x1400016f2
   14000166d:	mov    rbx,QWORD PTR [rbp+0x38]
   140001671:	test   rbx,rbx
   140001674:	je     0x1400016f2
   140001676:	xor    edx,edx
   140001678:	lea    rcx,[rbp-0x28]
   14000167c:	lea    r8d,[rdx+0x28]
   140001680:	call   0x14000666c
   140001685:	mov    eax,DWORD PTR [rbp+0x30]
   140001688:	lea    rdx,[rbp-0x30]
   14000168c:	mov    DWORD PTR [rbp-0x18],edi
   14000168f:	and    edi,0x4
   140001692:	mov    DWORD PTR [rbp-0x14],eax
   140001695:	mov    rax,QWORD PTR [rbx+0x8]
   140001699:	mov    QWORD PTR [rbp-0x8],rax
   14000169d:	mov    DWORD PTR [rbp-0x30],0x30
   1400016a4:	mov    QWORD PTR [rbp-0x28],r14
   1400016a8:	mov    QWORD PTR [rbp-0x20],rsi
   1400016ac:	test   dil,dil
   1400016af:	jne    0x1400016ca
   1400016b1:	call   0x1400017bc
   1400016b6:	mov    ecx,eax
   1400016b8:	cmp    eax,0x80004001
   1400016bd:	jne    0x1400016e3
   1400016bf:	lea    rdx,[rbp-0x30]
   1400016c3:	call   0x14000171c
   1400016c8:	jmp    0x1400016e1
   1400016ca:	call   0x14000171c
   1400016cf:	mov    ecx,eax
   1400016d1:	cmp    eax,0x80004001
   1400016d6:	jne    0x1400016e3
   1400016d8:	lea    rdx,[rbp-0x30]
   1400016dc:	call   0x1400017bc
   1400016e1:	mov    ecx,eax
   1400016e3:	mov    eax,DWORD PTR [rbp-0x10]
   1400016e6:	mov    DWORD PTR [rbx],eax
   1400016e8:	mov    rax,QWORD PTR [rbp-0x8]
   1400016ec:	mov    QWORD PTR [rbx+0x8],rax
   1400016f0:	jmp    0x1400016f7
   1400016f2:	mov    ecx,0x80004003
   1400016f7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400016fc:	mov    eax,ecx
   1400016fe:	mov    rsi,QWORD PTR [rsp+0x68]
   140001703:	mov    rdi,QWORD PTR [rsp+0x70]
   140001708:	mov    r14,QWORD PTR [rsp+0x78]
   14000170d:	add    rsp,0x50
   140001711:	pop    rbp
   140001712:	ret    
   140001713:	int3   
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	mov    r11,rsp
   14000171f:	mov    QWORD PTR [r11+0x10],rbx
   140001723:	mov    QWORD PTR [r11+0x18],rbp
   140001727:	mov    QWORD PTR [r11+0x20],rsi
   14000172b:	mov    QWORD PTR [r11+0x8],rcx
   14000172f:	push   rdi
   140001730:	sub    rsp,0x30
   140001734:	and    QWORD PTR [r11+0x8],0x0
   140001739:	lea    rax,[r11+0x8]
   14000173d:	mov    rbp,rdx
   140001740:	mov    QWORD PTR [r11-0x18],rax
   140001744:	xor    edx,edx
   140001746:	lea    r9,[rip+0x5dfb]        # 0x140007548
   14000174d:	lea    rcx,[rip+0x5de4]        # 0x140007538
   140001754:	lea    r8d,[rdx+0x1]
   140001758:	call   QWORD PTR [rip+0x5c22]        # 0x140007380
   14000175e:	mov    esi,eax
   140001760:	test   eax,eax
   140001762:	js     0x14000179d
   140001764:	mov    rdi,QWORD PTR [rsp+0x40]
   140001769:	mov    rax,QWORD PTR [rdi]
   14000176c:	mov    rbx,QWORD PTR [rax+0x18]
   140001770:	mov    rcx,rbx
   140001773:	call   QWORD PTR [rip+0x5c1f]        # 0x140007398
   140001779:	mov    rdx,rbp
   14000177c:	mov    rcx,rdi
   14000177f:	call   rbx
   140001781:	mov    rdi,QWORD PTR [rsp+0x40]
   140001786:	mov    esi,eax
   140001788:	mov    rax,QWORD PTR [rdi]
   14000178b:	mov    rbx,QWORD PTR [rax+0x10]
   14000178f:	mov    rcx,rbx
   140001792:	call   QWORD PTR [rip+0x5c00]        # 0x140007398
   140001798:	mov    rcx,rdi
   14000179b:	call   rbx
   14000179d:	mov    rbx,QWORD PTR [rsp+0x48]
   1400017a2:	mov    eax,esi
   1400017a4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400017a9:	mov    rbp,QWORD PTR [rsp+0x50]
   1400017ae:	add    rsp,0x30
   1400017b2:	pop    rdi
   1400017b3:	ret    
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	int3   
   1400017b7:	int3   
   1400017b8:	int3   
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	mov    rax,rsp
   1400017bf:	mov    QWORD PTR [rax+0x10],rbx
   1400017c3:	mov    QWORD PTR [rax+0x8],rcx
   1400017c7:	push   rbp
   1400017c8:	push   rsi
   1400017c9:	push   rdi
   1400017ca:	sub    rsp,0x20
   1400017ce:	and    QWORD PTR [rax+0x18],0x0
   1400017d3:	mov    rsi,rdx
   1400017d6:	lea    rdx,[rax+0x8]
   1400017da:	mov    DWORD PTR [rax+0x8],0x1
   1400017e1:	mov    rcx,QWORD PTR [rsi+0x10]
   1400017e5:	call   0x14000121c
   1400017ea:	mov    ebp,0x80004001
   1400017ef:	test   eax,eax
   1400017f1:	js     0x14000184e
   1400017f3:	cmp    DWORD PTR [rsp+0x40],0x0
   1400017f8:	cmove  eax,ebp
   1400017fb:	test   eax,eax
   1400017fd:	js     0x14000184e
   1400017ff:	mov    rcx,QWORD PTR [rsi+0x10]
   140001803:	lea    r9,[rsp+0x50]
   140001808:	call   0x140002d40
   14000180d:	test   eax,eax
   14000180f:	js     0x14000184e
   140001811:	mov    rdi,QWORD PTR [rsp+0x50]
   140001816:	mov    rax,QWORD PTR [rdi]
   140001819:	mov    rbx,QWORD PTR [rax+0x18]
   14000181d:	mov    rcx,rbx
   140001820:	call   QWORD PTR [rip+0x5b72]        # 0x140007398
   140001826:	mov    rdx,rsi
   140001829:	mov    rcx,rdi
   14000182c:	call   rbx
   14000182e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001833:	mov    esi,eax
   140001835:	mov    rdx,QWORD PTR [rdi]
   140001838:	mov    rbx,QWORD PTR [rdx+0x10]
   14000183c:	mov    rcx,rbx
   14000183f:	call   QWORD PTR [rip+0x5b53]        # 0x140007398
   140001845:	mov    rcx,rdi
   140001848:	call   rbx
   14000184a:	test   esi,esi
   14000184c:	jns    0x140001850
   14000184e:	mov    esi,ebp
   140001850:	mov    eax,esi
   140001852:	mov    rbx,QWORD PTR [rsp+0x48]
   140001857:	add    rsp,0x20
   14000185b:	pop    rdi
   14000185c:	pop    rsi
   14000185d:	pop    rbp
   14000185e:	ret    
   14000185f:	int3   
   140001860:	int3   
   140001861:	int3   
   140001862:	int3   
   140001863:	int3   
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	mov    r11,rsp
   140001873:	sub    rsp,0x58
   140001877:	mov    rax,QWORD PTR [rsp+0x88]
   14000187f:	lea    rcx,[r11-0x38]
   140001883:	mov    DWORD PTR [rsp+0x20],0x30
   14000188b:	and    QWORD PTR [r11-0x28],0x0
   140001890:	mov    QWORD PTR [r11-0x20],rax
   140001894:	mov    rax,QWORD PTR [rsp+0x80]
   14000189c:	mov    QWORD PTR [r11-0x10],rax
   1400018a0:	mov    QWORD PTR [r11-0x30],rdx
   1400018a4:	mov    DWORD PTR [r11-0x14],r8d
   1400018a8:	mov    DWORD PTR [r11-0x18],r9d
   1400018ac:	call   0x140001b80
   1400018b1:	add    rsp,0x58
   1400018b5:	ret    
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	mov    r11,rsp
   1400018c3:	sub    rsp,0x58
   1400018c7:	mov    rax,QWORD PTR [rsp+0x80]
   1400018cf:	lea    rcx,[r11-0x38]
   1400018d3:	mov    DWORD PTR [rsp+0x20],0x30
   1400018db:	and    QWORD PTR [r11-0x28],0x0
   1400018e0:	and    QWORD PTR [r11-0x20],0x0
   1400018e5:	mov    QWORD PTR [r11-0x10],rax
   1400018e9:	mov    QWORD PTR [r11-0x30],rdx
   1400018ed:	mov    DWORD PTR [r11-0x14],r8d
   1400018f1:	mov    DWORD PTR [r11-0x18],r9d
   1400018f5:	call   0x140001b80
   1400018fa:	add    rsp,0x58
   1400018fe:	ret    
   1400018ff:	int3   
   140001900:	int3   
   140001901:	int3   
   140001902:	int3   
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    rax,rsp
   140001913:	mov    QWORD PTR [rax+0x8],rbx
   140001917:	mov    QWORD PTR [rax+0x10],rsi
   14000191b:	mov    QWORD PTR [rax+0x18],rdi
   14000191f:	push   rbp
   140001920:	push   r14
   140001922:	push   r15
   140001924:	lea    rbp,[rax-0x2f]
   140001928:	sub    rsp,0x90
   14000192f:	mov    rsi,QWORD PTR [rbp+0x57]
   140001933:	mov    r14,r9
   140001936:	mov    ebx,r8d
   140001939:	mov    r15,rdx
   14000193c:	test   rsi,rsi
   14000193f:	je     0x140001aac
   140001945:	mov    rdi,QWORD PTR [rbp+0x5f]
   140001949:	test   rdi,rdi
   14000194c:	je     0x140001aac
   140001952:	xor    edx,edx
   140001954:	lea    rcx,[rbp-0x31]
   140001958:	lea    r8d,[rdx+0x40]
   14000195c:	call   0x14000666c
   140001961:	and    QWORD PTR [rbp-0x1],0x0
   140001966:	and    QWORD PTR [rbp+0x7],0x0
   14000196b:	and    DWORD PTR [rbp-0x9],0x0
   14000196f:	mov    DWORD PTR [rbp-0x29],ebx
   140001972:	and    ebx,0x4
   140001975:	mov    DWORD PTR [rbp-0x39],0x48
   14000197c:	mov    QWORD PTR [rbp-0x31],r15
   140001980:	mov    QWORD PTR [rbp-0x21],r14
   140001984:	mov    QWORD PTR [rbp-0x19],rsi
   140001988:	mov    QWORD PTR [rbp-0x11],rdi
   14000198c:	test   bl,bl
   14000198e:	jne    0x1400019dc
   140001990:	lea    rdx,[rbp-0x39]
   140001994:	call   0x140001ad8
   140001999:	mov    edi,eax
   14000199b:	cmp    eax,0x80004001
   1400019a0:	jne    0x140001a21
   1400019a2:	mov    eax,DWORD PTR [rbp+0x7f]
   1400019a5:	lea    r9,[rbp-0x9]
   1400019a9:	mov    r8,QWORD PTR [rbp-0x11]
   1400019ad:	mov    rdx,QWORD PTR [rbp-0x19]
   1400019b1:	mov    rcx,QWORD PTR [rbp-0x21]
   1400019b5:	mov    DWORD PTR [rsp+0x38],eax
   1400019b9:	mov    rax,QWORD PTR [rbp-0x31]
   1400019bd:	mov    QWORD PTR [rsp+0x30],rax
   1400019c2:	lea    rax,[rbp+0x7]
   1400019c6:	mov    QWORD PTR [rsp+0x28],rax
   1400019cb:	lea    rax,[rbp-0x1]
   1400019cf:	mov    QWORD PTR [rsp+0x20],rax
   1400019d4:	call   QWORD PTR [rip+0x5866]        # 0x140007240
   1400019da:	jmp    0x140001a1f
   1400019dc:	mov    eax,DWORD PTR [rbp+0x7f]
   1400019df:	lea    r9,[rbp-0x9]
   1400019e3:	mov    DWORD PTR [rsp+0x38],eax
   1400019e7:	mov    r8,rdi
   1400019ea:	lea    rax,[rbp+0x7]
   1400019ee:	mov    QWORD PTR [rsp+0x30],r15
   1400019f3:	mov    QWORD PTR [rsp+0x28],rax
   1400019f8:	mov    rdx,rsi
   1400019fb:	lea    rax,[rbp-0x1]
   1400019ff:	mov    rcx,r14
   140001a02:	mov    QWORD PTR [rsp+0x20],rax
   140001a07:	call   QWORD PTR [rip+0x5833]        # 0x140007240
   140001a0d:	mov    edi,eax
   140001a0f:	cmp    eax,0x80004001
   140001a14:	jne    0x140001a21
   140001a16:	lea    rdx,[rbp-0x39]
   140001a1a:	call   0x140001ad8
   140001a1f:	mov    edi,eax
   140001a21:	test   edi,edi
   140001a23:	js     0x140001ab1
   140001a29:	mov    rcx,QWORD PTR [rbp+0x77]
   140001a2d:	test   rcx,rcx
   140001a30:	je     0x140001a3b
   140001a32:	mov    rax,QWORD PTR [rbp+0x7]
   140001a36:	mov    QWORD PTR [rcx],rax
   140001a39:	jmp    0x140001a59
   140001a3b:	mov    rsi,QWORD PTR [rbp+0x7]
   140001a3f:	test   rsi,rsi
   140001a42:	je     0x140001a59
   140001a44:	mov    rax,QWORD PTR [rsi]
   140001a47:	mov    rbx,QWORD PTR [rax+0x10]
   140001a4b:	mov    rcx,rbx
   140001a4e:	call   QWORD PTR [rip+0x5944]        # 0x140007398
   140001a54:	mov    rcx,rsi
   140001a57:	call   rbx
   140001a59:	mov    rcx,QWORD PTR [rbp+0x6f]
   140001a5d:	test   rcx,rcx
   140001a60:	je     0x140001a6b
   140001a62:	mov    rax,QWORD PTR [rbp-0x1]
   140001a66:	mov    QWORD PTR [rcx],rax
   140001a69:	jmp    0x140001a9c
   140001a6b:	mov    rcx,QWORD PTR [rbp-0x1]
   140001a6f:	test   rcx,rcx
   140001a72:	je     0x140001a9c
   140001a74:	xor    ebx,ebx
   140001a76:	cmp    DWORD PTR [rbp-0x9],ebx
   140001a79:	jle    0x140001a96
   140001a7b:	xor    esi,esi
   140001a7d:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140001a81:	call   QWORD PTR [rip+0x5769]        # 0x1400071f0
   140001a87:	mov    rcx,QWORD PTR [rbp-0x1]
   140001a8b:	lea    rsi,[rsi+0x8]
   140001a8f:	inc    ebx
   140001a91:	cmp    ebx,DWORD PTR [rbp-0x9]
   140001a94:	jl     0x140001a7d
   140001a96:	call   QWORD PTR [rip+0x58dc]        # 0x140007378
   140001a9c:	mov    rcx,QWORD PTR [rbp+0x67]
   140001aa0:	test   rcx,rcx
   140001aa3:	je     0x140001ab1
   140001aa5:	mov    eax,DWORD PTR [rbp-0x9]
   140001aa8:	mov    DWORD PTR [rcx],eax
   140001aaa:	jmp    0x140001ab1
   140001aac:	mov    edi,0x80070057
   140001ab1:	lea    r11,[rsp+0x90]
   140001ab9:	mov    eax,edi
   140001abb:	mov    rbx,QWORD PTR [r11+0x20]
   140001abf:	mov    rsi,QWORD PTR [r11+0x28]
   140001ac3:	mov    rdi,QWORD PTR [r11+0x30]
   140001ac7:	mov    rsp,r11
   140001aca:	pop    r15
   140001acc:	pop    r14
   140001ace:	pop    rbp
   140001acf:	ret    
   140001ad0:	int3   
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	int3   
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	mov    rax,rsp
   140001adb:	mov    QWORD PTR [rax+0x10],rbx
   140001adf:	mov    QWORD PTR [rax+0x8],rcx
   140001ae3:	push   rbp
   140001ae4:	push   rsi
   140001ae5:	push   rdi
   140001ae6:	sub    rsp,0x20
   140001aea:	and    QWORD PTR [rax+0x18],0x0
   140001aef:	mov    rsi,rdx
   140001af2:	and    DWORD PTR [rax+0x8],0x0
   140001af6:	lea    rdx,[rax+0x8]
   140001afa:	mov    rcx,QWORD PTR [rsi+0x8]
   140001afe:	call   0x14000121c
   140001b03:	mov    ebp,0x80004001
   140001b08:	test   eax,eax
   140001b0a:	js     0x140001b67
   140001b0c:	cmp    DWORD PTR [rsp+0x40],0x1
   140001b11:	cmove  eax,ebp
   140001b14:	test   eax,eax
   140001b16:	js     0x140001b67
   140001b18:	mov    rcx,QWORD PTR [rsi+0x8]
   140001b1c:	lea    r9,[rsp+0x50]
   140001b21:	call   0x140002edc
   140001b26:	test   eax,eax
   140001b28:	js     0x140001b67
   140001b2a:	mov    rdi,QWORD PTR [rsp+0x50]
   140001b2f:	mov    rax,QWORD PTR [rdi]
   140001b32:	mov    rbx,QWORD PTR [rax+0x18]
   140001b36:	mov    rcx,rbx
   140001b39:	call   QWORD PTR [rip+0x5859]        # 0x140007398
   140001b3f:	mov    rdx,rsi
   140001b42:	mov    rcx,rdi
   140001b45:	call   rbx
   140001b47:	mov    rdi,QWORD PTR [rsp+0x50]
   140001b4c:	mov    esi,eax
   140001b4e:	mov    rdx,QWORD PTR [rdi]
   140001b51:	mov    rbx,QWORD PTR [rdx+0x10]
   140001b55:	mov    rcx,rbx
   140001b58:	call   QWORD PTR [rip+0x583a]        # 0x140007398
   140001b5e:	mov    rcx,rdi
   140001b61:	call   rbx
   140001b63:	test   esi,esi
   140001b65:	jns    0x140001b69
   140001b67:	mov    esi,ebp
   140001b69:	mov    eax,esi
   140001b6b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001b70:	add    rsp,0x20
   140001b74:	pop    rdi
   140001b75:	pop    rsi
   140001b76:	pop    rbp
   140001b77:	ret    
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x8],rbx
   140001b85:	mov    QWORD PTR [rsp+0x10],rbp
   140001b8a:	mov    QWORD PTR [rsp+0x18],rsi
   140001b8f:	push   rdi
   140001b90:	sub    rsp,0x20
   140001b94:	mov    rbp,rcx
   140001b97:	xor    ebx,ebx
   140001b99:	lea    rcx,[rip+0x5c08]        # 0x1400077a8
   140001ba0:	call   QWORD PTR [rip+0x552a]        # 0x1400070d0
   140001ba6:	mov    rdi,rax
   140001ba9:	test   rax,rax
   140001bac:	jne    0x140001bc6
   140001bae:	call   QWORD PTR [rip+0x549c]        # 0x140007050
   140001bb4:	movzx  ebx,ax
   140001bb7:	or     ebx,0x80070000
   140001bbd:	test   eax,eax
   140001bbf:	cmovle ebx,eax
   140001bc2:	test   ebx,ebx
   140001bc4:	js     0x140001c0f
   140001bc6:	lea    rdx,[rip+0x5beb]        # 0x1400077b8
   140001bcd:	mov    rcx,rdi
   140001bd0:	call   QWORD PTR [rip+0x5482]        # 0x140007058
   140001bd6:	mov    rsi,rax
   140001bd9:	test   rax,rax
   140001bdc:	jne    0x140001bf2
   140001bde:	call   QWORD PTR [rip+0x546c]        # 0x140007050
   140001be4:	movzx  ebx,ax
   140001be7:	or     ebx,0x80070000
   140001bed:	test   eax,eax
   140001bef:	cmovle ebx,eax
   140001bf2:	test   ebx,ebx
   140001bf4:	js     0x140001c06
   140001bf6:	mov    rcx,rsi
   140001bf9:	call   QWORD PTR [rip+0x5799]        # 0x140007398
   140001bff:	mov    rcx,rbp
   140001c02:	call   rsi
   140001c04:	mov    ebx,eax
   140001c06:	mov    rcx,rdi
   140001c09:	call   QWORD PTR [rip+0x5579]        # 0x140007188
   140001c0f:	mov    rbp,QWORD PTR [rsp+0x38]
   140001c14:	mov    eax,ebx
   140001c16:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c1b:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c20:	add    rsp,0x20
   140001c24:	pop    rdi
   140001c25:	ret    
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    QWORD PTR [rsp+0x8],rbx
   140001c35:	mov    QWORD PTR [rsp+0x10],rsi
   140001c3a:	push   rdi
   140001c3b:	sub    rsp,0x20
   140001c3f:	mov    rax,r8
   140001c42:	neg    rax
   140001c45:	sbb    esi,esi
   140001c47:	not    esi
   140001c49:	and    esi,0x80004003
   140001c4f:	jl     0x140001cad
   140001c51:	and    QWORD PTR [r8],0x0
   140001c55:	mov    rax,QWORD PTR [rip+0x67f4]        # 0x140008450
   140001c5c:	cmp    rax,QWORD PTR [rdx]
   140001c5f:	jne    0x140001c6e
   140001c61:	mov    rax,QWORD PTR [rip+0x67f0]        # 0x140008458
   140001c68:	cmp    rax,QWORD PTR [rdx+0x8]
   140001c6c:	je     0x140001c87
   140001c6e:	mov    rax,QWORD PTR [rip+0x67cb]        # 0x140008440
   140001c75:	cmp    rax,QWORD PTR [rdx]
   140001c78:	jne    0x140001c8c
   140001c7a:	mov    rax,QWORD PTR [rip+0x67c7]        # 0x140008448
   140001c81:	cmp    rax,QWORD PTR [rdx+0x8]
   140001c85:	jne    0x140001c8c
   140001c87:	mov    QWORD PTR [r8],rcx
   140001c8a:	jmp    0x140001c91
   140001c8c:	mov    esi,0x80004002
   140001c91:	test   esi,esi
   140001c93:	js     0x140001cad
   140001c95:	mov    rdi,QWORD PTR [r8]
   140001c98:	mov    rdx,QWORD PTR [rdi]
   140001c9b:	mov    rbx,QWORD PTR [rdx+0x8]
   140001c9f:	mov    rcx,rbx
   140001ca2:	call   QWORD PTR [rip+0x56f0]        # 0x140007398
   140001ca8:	mov    rcx,rdi
   140001cab:	call   rbx
   140001cad:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cb2:	mov    eax,esi
   140001cb4:	mov    rsi,QWORD PTR [rsp+0x38]
   140001cb9:	add    rsp,0x20
   140001cbd:	pop    rdi
   140001cbe:	ret    
   140001cbf:	int3   
   140001cc0:	int3   
   140001cc1:	int3   
   140001cc2:	int3   
   140001cc3:	int3   
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	mov    eax,0x2
   140001cd5:	ret    
   140001cd6:	int3   
   140001cd7:	int3   
   140001cd8:	int3   
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    eax,0x1
   140001ce5:	ret    
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	mov    rax,rsp
   140001cf3:	mov    QWORD PTR [rax+0x8],rbx
   140001cf7:	mov    QWORD PTR [rax+0x10],rbp
   140001cfb:	mov    QWORD PTR [rax+0x18],rsi
   140001cff:	mov    QWORD PTR [rax+0x20],rdi
   140001d03:	push   r14
   140001d05:	sub    rsp,0x20
   140001d09:	mov    rax,r9
   140001d0c:	mov    r14,r9
   140001d0f:	neg    rax
   140001d12:	mov    rbp,r8
   140001d15:	sbb    edi,edi
   140001d17:	not    edi
   140001d19:	and    edi,0x80004003
   140001d1f:	jl     0x140001dd8
   140001d25:	xor    ebx,ebx
   140001d27:	mov    eax,0x80040110
   140001d2c:	test   rdx,rdx
   140001d2f:	mov    QWORD PTR [r9],rbx
   140001d32:	cmovne edi,eax
   140001d35:	test   edi,edi
   140001d37:	js     0x140001dd8
   140001d3d:	lea    ecx,[rbx+0x40]
   140001d40:	call   0x140005bdc
   140001d45:	mov    rsi,rax
   140001d48:	test   rax,rax
   140001d4b:	je     0x140001d7d
   140001d4d:	lea    rax,[rip+0x58e4]        # 0x140007638
   140001d54:	mov    DWORD PTR [rsi+0x38],ebx
   140001d57:	mov    QWORD PTR [rsi],rax
   140001d5a:	lea    rax,[rip+0x584f]        # 0x1400075b0
   140001d61:	mov    QWORD PTR [rsi+0x8],rax
   140001d65:	xor    eax,eax
   140001d67:	mov    QWORD PTR [rsi+0x18],rbx
   140001d6b:	mov    QWORD PTR [rsi+0x20],rbx
   140001d6f:	mov    QWORD PTR [rsi+0x10],rbx
   140001d73:	mov    QWORD PTR [rsi+0x28],rbx
   140001d77:	mov    QWORD PTR [rsi+0x30],rax
   140001d7b:	jmp    0x140001d80
   140001d7d:	mov    rsi,rbx
   140001d80:	mov    rax,rsi
   140001d83:	neg    rax
   140001d86:	sbb    edi,edi
   140001d88:	not    edi
   140001d8a:	and    edi,0x8007000e
   140001d90:	jl     0x140001dd8
   140001d92:	mov    rax,QWORD PTR [rsi]
   140001d95:	mov    rbx,QWORD PTR [rax+0x8]
   140001d99:	mov    rcx,rbx
   140001d9c:	call   QWORD PTR [rip+0x55f6]        # 0x140007398
   140001da2:	mov    rcx,rsi
   140001da5:	call   rbx
   140001da7:	mov    rax,QWORD PTR [rsi]
   140001daa:	mov    rbx,QWORD PTR [rax]
   140001dad:	mov    rcx,rbx
   140001db0:	call   QWORD PTR [rip+0x55e2]        # 0x140007398
   140001db6:	mov    r8,r14
   140001db9:	mov    rdx,rbp
   140001dbc:	mov    rcx,rsi
   140001dbf:	call   rbx
   140001dc1:	mov    rdx,QWORD PTR [rsi]
   140001dc4:	mov    edi,eax
   140001dc6:	mov    rbx,QWORD PTR [rdx+0x10]
   140001dca:	mov    rcx,rbx
   140001dcd:	call   QWORD PTR [rip+0x55c5]        # 0x140007398
   140001dd3:	mov    rcx,rsi
   140001dd6:	call   rbx
   140001dd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ddd:	mov    eax,edi
   140001ddf:	mov    rdi,QWORD PTR [rsp+0x48]
   140001de4:	mov    rbp,QWORD PTR [rsp+0x38]
   140001de9:	mov    rsi,QWORD PTR [rsp+0x40]
   140001dee:	add    rsp,0x20
   140001df2:	pop    r14
   140001df4:	ret    
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	sub    rsp,0x28
   140001e04:	test   edx,edx
   140001e06:	je     0x140001e11
   140001e08:	lock inc DWORD PTR [rip+0x87d5]        # 0x14000a5e4
   140001e0f:	jmp    0x140001e29
   140001e11:	or     eax,0xffffffff
   140001e14:	lock xadd DWORD PTR [rip+0x87c8],eax        # 0x14000a5e4
   140001e1c:	cmp    eax,0x1
   140001e1f:	jne    0x140001e29
   140001e21:	xor    ecx,ecx
   140001e23:	call   QWORD PTR [rip+0x543f]        # 0x140007268
   140001e29:	xor    eax,eax
   140001e2b:	add    rsp,0x28
   140001e2f:	ret    
   140001e30:	int3   
   140001e31:	int3   
   140001e32:	int3   
   140001e33:	int3   
   140001e34:	int3   
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	mov    QWORD PTR [rsp+0x8],rbx
   140001e3d:	mov    QWORD PTR [rsp+0x10],rdi
   140001e42:	push   rbp
   140001e43:	lea    rbp,[rsp-0x57]
   140001e48:	sub    rsp,0x90
   140001e4f:	mov    eax,DWORD PTR [rip+0x8793]        # 0x14000a5e8
   140001e55:	test   al,0x1
   140001e57:	jne    0x140001e70
   140001e59:	or     eax,0x1
   140001e5c:	mov    DWORD PTR [rip+0x8786],eax        # 0x14000a5e8
   140001e62:	lea    rax,[rip+0x571f]        # 0x140007588
   140001e69:	mov    QWORD PTR [rip+0x8780],rax        # 0x14000a5f0
   140001e70:	and    DWORD PTR [rbp+0x17],0x0
   140001e74:	xor    r9d,r9d
   140001e77:	xor    r8d,r8d
   140001e7a:	xor    ecx,ecx
   140001e7c:	lea    edx,[r9+0x1]
   140001e80:	call   QWORD PTR [rip+0x51da]        # 0x140007060
   140001e86:	xor    ecx,ecx
   140001e88:	call   QWORD PTR [rip+0x54e2]        # 0x140007370
   140001e8e:	test   eax,eax
   140001e90:	js     0x140001fb2
   140001e96:	and    QWORD PTR [rsp+0x40],0x0
   140001e9c:	lea    rcx,[rip+0x5685]        # 0x140007528
   140001ea3:	mov    DWORD PTR [rsp+0x38],0x2048
   140001eab:	xor    r9d,r9d
   140001eae:	and    QWORD PTR [rsp+0x30],0x0
   140001eb4:	xor    r8d,r8d
   140001eb7:	mov    DWORD PTR [rsp+0x28],0x3
   140001ebf:	or     edx,0xffffffff
   140001ec2:	mov    DWORD PTR [rsp+0x20],0x2
   140001eca:	call   QWORD PTR [rip+0x5498]        # 0x140007368
   140001ed0:	test   eax,eax
   140001ed2:	js     0x140001fac
   140001ed8:	and    QWORD PTR [rbp+0x1f],0x0
   140001edd:	lea    rax,[rbp+0x1f]
   140001ee1:	xor    edx,edx
   140001ee3:	mov    QWORD PTR [rsp+0x20],rax
   140001ee8:	lea    r9,[rip+0x6571]        # 0x140008460
   140001eef:	lea    rcx,[rip+0x657a]        # 0x140008470
   140001ef6:	lea    r8d,[rdx+0x1]
   140001efa:	call   QWORD PTR [rip+0x5480]        # 0x140007380
   140001f00:	test   eax,eax
   140001f02:	js     0x140001f44
   140001f04:	mov    rdi,QWORD PTR [rbp+0x1f]
   140001f08:	test   rdi,rdi
   140001f0b:	je     0x140001f44
   140001f0d:	mov    rax,QWORD PTR [rdi]
   140001f10:	mov    rbx,QWORD PTR [rax+0x18]
   140001f14:	mov    rcx,rbx
   140001f17:	call   QWORD PTR [rip+0x547b]        # 0x140007398
   140001f1d:	mov    edx,0x5
   140001f22:	mov    rcx,rdi
   140001f25:	lea    r8d,[rdx-0x4]
   140001f29:	call   rbx
   140001f2b:	mov    rdi,QWORD PTR [rbp+0x1f]
   140001f2f:	mov    rax,QWORD PTR [rdi]
   140001f32:	mov    rbx,QWORD PTR [rax+0x10]
   140001f36:	mov    rcx,rbx
   140001f39:	call   QWORD PTR [rip+0x5459]        # 0x140007398
   140001f3f:	mov    rcx,rdi
   140001f42:	call   rbx
   140001f44:	xor    r9d,r9d
   140001f47:	lea    rax,[rbp+0x17]
   140001f4b:	lea    rdx,[rip+0x869e]        # 0x14000a5f0
   140001f52:	mov    QWORD PTR [rsp+0x20],rax
   140001f57:	lea    rcx,[rip+0x55ca]        # 0x140007528
   140001f5e:	lea    r8d,[r9+0x4]
   140001f62:	call   QWORD PTR [rip+0x53f8]        # 0x140007360
   140001f68:	test   eax,eax
   140001f6a:	js     0x140001fac
   140001f6c:	and    QWORD PTR [rbp+0x27],0x0
   140001f71:	lea    rcx,[rbp+0x2f]
   140001f75:	xor    edx,edx
   140001f77:	lea    r8d,[rdx+0x28]
   140001f7b:	call   0x14000666c
   140001f80:	jmp    0x140001f96
   140001f82:	lea    rcx,[rbp+0x27]
   140001f86:	call   QWORD PTR [rip+0x52d4]        # 0x140007260
   140001f8c:	lea    rcx,[rbp+0x27]
   140001f90:	call   QWORD PTR [rip+0x52da]        # 0x140007270
   140001f96:	xor    r9d,r9d
   140001f99:	lea    rcx,[rbp+0x27]
   140001f9d:	xor    r8d,r8d
   140001fa0:	xor    edx,edx
   140001fa2:	call   QWORD PTR [rip+0x52b0]        # 0x140007258
   140001fa8:	test   eax,eax
   140001faa:	jne    0x140001f82
   140001fac:	call   QWORD PTR [rip+0x53a6]        # 0x140007358
   140001fb2:	lea    r11,[rsp+0x90]
   140001fba:	xor    eax,eax
   140001fbc:	mov    rbx,QWORD PTR [r11+0x10]
   140001fc0:	mov    rdi,QWORD PTR [r11+0x18]
   140001fc4:	mov    rsp,r11
   140001fc7:	pop    rbp
   140001fc8:	ret    
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	sub    rcx,0x8
   140001fd4:	jmp    0x1400010f0
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	sub    rcx,0x8
   140001fe4:	jmp    0x1400010d0
   140001fe9:	int3   
   140001fea:	int3   
   140001feb:	int3   
   140001fec:	int3   
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	sub    rcx,0x8
   140001ff4:	jmp    0x140001010
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    QWORD PTR [rsp+0x8],rbx
   140002005:	push   rbp
   140002006:	push   rsi
   140002007:	push   rdi
   140002008:	push   r13
   14000200a:	push   r15
   14000200c:	mov    rbp,rsp
   14000200f:	sub    rsp,0x60
   140002013:	and    QWORD PTR [rbp-0x10],0x0
   140002018:	mov    esi,r8d
   14000201b:	and    QWORD PTR [rbp-0x18],0x0
   140002020:	mov    rdi,rdx
   140002023:	mov    r13,rcx
   140002026:	test   rdx,rdx
   140002029:	jne    0x140002035
   14000202b:	mov    esi,0x80004003
   140002030:	jmp    0x140002245
   140002035:	mov    ecx,0x278
   14000203a:	or     rbx,0xffffffffffffffff
   14000203e:	call   0x140005bdc
   140002043:	test   rax,rax
   140002046:	je     0x140002050
   140002048:	mov    rcx,rax
   14000204b:	call   0x140004a94
   140002050:	test   rax,rax
   140002053:	je     0x14000207c
   140002055:	cmp    DWORD PTR [rax+0x270],0x0
   14000205c:	jne    0x140002072
   14000205e:	cmp    DWORD PTR [rax],0x53464c61
   140002064:	jne    0x140002072
   140002066:	or     DWORD PTR [rax+0x10],0xc0004
   14000206d:	mov    rbx,rax
   140002070:	jmp    0x140002087
   140002072:	mov    rcx,rax
   140002075:	call   0x1400054c4
   14000207a:	jmp    0x140002087
   14000207c:	mov    ecx,0x8
   140002081:	call   QWORD PTR [rip+0x50e1]        # 0x140007168
   140002087:	lea    r8,[rbp-0x18]
   14000208b:	mov    QWORD PTR [rip+0x7f8e],rbx        # 0x14000a020
   140002092:	mov    rcx,rdi
   140002095:	call   0x1400039c4
   14000209a:	test   eax,eax
   14000209c:	jns    0x1400020c0
   14000209e:	lea    r8,[rip+0x574b]        # 0x1400077f0
   1400020a5:	mov    rcx,QWORD PTR [rip+0x7f74]        # 0x14000a020
   1400020ac:	mov    edx,0x4
   1400020b1:	call   0x140005608
   1400020b6:	mov    esi,0x80070057
   1400020bb:	jmp    0x140002236
   1400020c0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400020c4:	lea    r8,[rbp-0x10]
   1400020c8:	lea    rdx,[rip+0x5781]        # 0x140007850
   1400020cf:	call   0x140003364
   1400020d4:	mov    rcx,QWORD PTR [rbp-0x18]
   1400020d8:	xor    edi,edi
   1400020da:	and    DWORD PTR [rbp+0x38],edi
   1400020dd:	mov    DWORD PTR [rbp+0x48],0x4
   1400020e4:	lea    ebx,[rdi+0x1]
   1400020e7:	test   rcx,rcx
   1400020ea:	je     0x140002122
   1400020ec:	lea    rax,[rbp+0x48]
   1400020f0:	xor    r8d,r8d
   1400020f3:	mov    QWORD PTR [rsp+0x28],rax
   1400020f8:	lea    r9,[rbp-0x20]
   1400020fc:	lea    rax,[rbp+0x38]
   140002100:	lea    rdx,[rip+0x5769]        # 0x140007870
   140002107:	mov    QWORD PTR [rsp+0x20],rax
   14000210c:	call   QWORD PTR [rip+0x4efe]        # 0x140007010
   140002112:	test   eax,eax
   140002114:	jne    0x140002122
   140002116:	mov    eax,DWORD PTR [rbp-0x20]
   140002119:	add    eax,0xfffffffd
   14000211c:	cmp    eax,ebx
   14000211e:	cmovbe edi,DWORD PTR [rbp+0x38]
   140002122:	cmp    QWORD PTR [rbp-0x10],0x0
   140002127:	jne    0x140002135
   140002129:	lea    r8,[rip+0x5760]        # 0x140007890
   140002130:	jmp    0x1400020a5
   140002135:	test   dil,0x6
   140002139:	jne    0x140002155
   14000213b:	test   dil,0x10
   14000213f:	je     0x140002148
   140002141:	mov    ebx,0x2
   140002146:	jmp    0x140002155
   140002148:	movzx  ebx,dil
   14000214c:	and    ebx,0x8
   14000214f:	or     ebx,0x4
   140002152:	shr    ebx,0x2
   140002155:	mov    r8,QWORD PTR [rbp-0x10]
   140002159:	lea    r15,[r13+0x8]
   14000215d:	mov    edx,esi
   14000215f:	mov    QWORD PTR [rsp+0x20],r15
   140002164:	mov    ecx,ebx
   140002166:	call   0x1400040d0
   14000216b:	mov    esi,eax
   14000216d:	test   eax,eax
   14000216f:	js     0x140002211
   140002175:	mov    rax,QWORD PTR [r13-0x8]
   140002179:	and    QWORD PTR [rbp+0x38],0x0
   14000217e:	mov    rbx,QWORD PTR [rax]
   140002181:	mov    rcx,rbx
   140002184:	call   QWORD PTR [rip+0x520e]        # 0x140007398
   14000218a:	lea    r8,[rbp+0x38]
   14000218e:	lea    rdx,[rip+0x62bb]        # 0x140008450
   140002195:	lea    rcx,[r13-0x8]
   140002199:	call   rbx
   14000219b:	mov    r8,QWORD PTR [rbp+0x38]
   14000219f:	lea    rax,[r13+0x28]
   1400021a3:	mov    QWORD PTR [rsp+0x30],rax
   1400021a8:	lea    rcx,[r13+0x20]
   1400021ac:	mov    QWORD PTR [rsp+0x28],rcx
   1400021b1:	lea    rdx,[r13+0x18]
   1400021b5:	mov    rcx,QWORD PTR [rbp-0x18]
   1400021b9:	lea    r9,[r13+0x10]
   1400021bd:	mov    QWORD PTR [rsp+0x20],rdx
   1400021c2:	mov    rdx,QWORD PTR [r15]
   1400021c5:	call   0x140003e54
   1400021ca:	mov    rdi,QWORD PTR [rbp+0x38]
   1400021ce:	mov    esi,eax
   1400021d0:	test   rdi,rdi
   1400021d3:	je     0x1400021ef
   1400021d5:	mov    rax,QWORD PTR [rdi]
   1400021d8:	mov    rbx,QWORD PTR [rax+0x10]
   1400021dc:	mov    rcx,rbx
   1400021df:	call   QWORD PTR [rip+0x51b3]        # 0x140007398
   1400021e5:	mov    rcx,rdi
   1400021e8:	call   rbx
   1400021ea:	and    QWORD PTR [rbp+0x38],0x0
   1400021ef:	test   esi,esi
   1400021f1:	jns    0x14000222c
   1400021f3:	mov    rdi,QWORD PTR [r15]
   1400021f6:	mov    rax,QWORD PTR [rdi]
   1400021f9:	mov    rbx,QWORD PTR [rax+0x10]
   1400021fd:	mov    rcx,rbx
   140002200:	call   QWORD PTR [rip+0x5192]        # 0x140007398
   140002206:	mov    rcx,rdi
   140002209:	call   rbx
   14000220b:	and    QWORD PTR [r15],0x0
   14000220f:	jmp    0x14000222c
   140002211:	mov    rcx,QWORD PTR [rip+0x7e08]        # 0x14000a020
   140002218:	lea    r8,[rip+0x56e1]        # 0x140007900
   14000221f:	mov    r9d,eax
   140002222:	mov    edx,0x4
   140002227:	call   0x140005608
   14000222c:	mov    rcx,QWORD PTR [rbp-0x10]
   140002230:	call   QWORD PTR [rip+0x4e32]        # 0x140007068
   140002236:	mov    rcx,QWORD PTR [rbp-0x18]
   14000223a:	test   rcx,rcx
   14000223d:	je     0x140002245
   14000223f:	call   QWORD PTR [rip+0x4deb]        # 0x140007030
   140002245:	mov    eax,esi
   140002247:	mov    rbx,QWORD PTR [rsp+0x90]
   14000224f:	add    rsp,0x60
   140002253:	pop    r15
   140002255:	pop    r13
   140002257:	pop    rdi
   140002258:	pop    rsi
   140002259:	pop    rbp
   14000225a:	ret    
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	int3   
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	int3   
   140002269:	int3   
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	int3   
   14000226d:	int3   
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    rax,rsp
   140002273:	mov    QWORD PTR [rax+0x8],rbx
   140002277:	mov    QWORD PTR [rax+0x20],rsi
   14000227b:	mov    QWORD PTR [rax+0x10],rdx
   14000227f:	push   rdi
   140002280:	sub    rsp,0x30
   140002284:	mov    rsi,rdx
   140002287:	and    DWORD PTR [rax+0x18],0x0
   14000228b:	and    DWORD PTR [rax+0x1c],0x0
   14000228f:	mov    rax,rdx
   140002292:	neg    rax
   140002295:	sbb    r8d,r8d
   140002298:	not    r8d
   14000229b:	and    r8d,0x80070057
   1400022a2:	jl     0x1400022b8
   1400022a4:	mov    rax,QWORD PTR [rcx+0x10]
   1400022a8:	neg    rax
   1400022ab:	sbb    r8d,r8d
   1400022ae:	not    r8d
   1400022b1:	and    r8d,0x8000ffff
   1400022b8:	test   r8d,r8d
   1400022bb:	js     0x1400022fb
   1400022bd:	mov    rdi,QWORD PTR [rcx+0x10]
   1400022c1:	mov    rax,QWORD PTR [rdi]
   1400022c4:	mov    rbx,QWORD PTR [rax+0x20]
   1400022c8:	mov    rcx,rbx
   1400022cb:	call   QWORD PTR [rip+0x50c7]        # 0x140007398
   1400022d1:	lea    rdx,[rsp+0x50]
   1400022d6:	mov    rcx,rdi
   1400022d9:	call   rbx
   1400022db:	mov    r8d,eax
   1400022de:	mov    DWORD PTR [rsp+0x20],eax
   1400022e2:	jmp    0x1400022f0
   1400022e4:	mov    r8d,eax
   1400022e7:	mov    DWORD PTR [rsp+0x20],eax
   1400022eb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400022f0:	test   r8d,r8d
   1400022f3:	js     0x1400022fb
   1400022f5:	mov    eax,DWORD PTR [rsp+0x54]
   1400022f9:	mov    DWORD PTR [rsi],eax
   1400022fb:	mov    eax,r8d
   1400022fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140002303:	mov    rsi,QWORD PTR [rsp+0x58]
   140002308:	add    rsp,0x30
   14000230c:	pop    rdi
   14000230d:	ret    
   14000230e:	int3   
   14000230f:	int3   
   140002310:	int3   
   140002311:	int3   
   140002312:	int3   
   140002313:	int3   
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	mov    QWORD PTR [rsp+0x18],rbx
   140002325:	mov    QWORD PTR [rsp+0x20],rdi
   14000232a:	push   r14
   14000232c:	sub    rsp,0x50
   140002330:	mov    rax,QWORD PTR [rip+0x7cd1]        # 0x14000a008
   140002337:	xor    rax,rsp
   14000233a:	mov    QWORD PTR [rsp+0x48],rax
   14000233f:	mov    r14,rdx
   140002342:	mov    rdi,rcx
   140002345:	mov    QWORD PTR [rsp+0x28],rdx
   14000234a:	and    DWORD PTR [rsp+0x30],0x0
   14000234f:	and    DWORD PTR [rsp+0x34],0x0
   140002354:	and    DWORD PTR [rsp+0x38],0x0
   140002359:	and    DWORD PTR [rsp+0x3c],0x0
   14000235e:	and    DWORD PTR [rsp+0x40],0x0
   140002363:	and    DWORD PTR [rsp+0x44],0x0
   140002368:	mov    rax,rdx
   14000236b:	neg    rax
   14000236e:	sbb    ecx,ecx
   140002370:	not    ecx
   140002372:	and    ecx,0x80070057
   140002378:	jl     0x14000238b
   14000237a:	mov    rax,QWORD PTR [rdi+0x10]
   14000237e:	neg    rax
   140002381:	sbb    ecx,ecx
   140002383:	not    ecx
   140002385:	and    ecx,0x8000ffff
   14000238b:	test   ecx,ecx
   14000238d:	js     0x1400023f2
   14000238f:	mov    DWORD PTR [rsp+0x30],0x18
   140002397:	mov    eax,DWORD PTR [rdx]
   140002399:	mov    DWORD PTR [rsp+0x34],eax
   14000239d:	mov    rdi,QWORD PTR [rdi+0x10]
   1400023a1:	mov    rax,QWORD PTR [rdi]
   1400023a4:	mov    rbx,QWORD PTR [rax+0x28]
   1400023a8:	mov    rcx,rbx
   1400023ab:	call   QWORD PTR [rip+0x4fe7]        # 0x140007398
   1400023b1:	lea    rdx,[rsp+0x30]
   1400023b6:	mov    rcx,rdi
   1400023b9:	call   rbx
   1400023bb:	mov    ecx,eax
   1400023bd:	mov    DWORD PTR [rsp+0x20],eax
   1400023c1:	jmp    0x1400023ce
   1400023c3:	mov    ecx,eax
   1400023c5:	mov    DWORD PTR [rsp+0x20],eax
   1400023c9:	mov    r14,QWORD PTR [rsp+0x28]
   1400023ce:	test   ecx,ecx
   1400023d0:	js     0x1400023f2
   1400023d2:	mov    eax,DWORD PTR [rsp+0x38]
   1400023d6:	mov    DWORD PTR [r14+0x4],eax
   1400023da:	mov    eax,DWORD PTR [rsp+0x3c]
   1400023de:	mov    DWORD PTR [r14+0x8],eax
   1400023e2:	mov    eax,DWORD PTR [rsp+0x40]
   1400023e6:	mov    DWORD PTR [r14+0xc],eax
   1400023ea:	mov    eax,DWORD PTR [rsp+0x44]
   1400023ee:	mov    DWORD PTR [r14+0x10],eax
   1400023f2:	mov    eax,ecx
   1400023f4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400023f9:	xor    rcx,rsp
   1400023fc:	call   0x140005fd0
   140002401:	mov    rbx,QWORD PTR [rsp+0x70]
   140002406:	mov    rdi,QWORD PTR [rsp+0x78]
   14000240b:	add    rsp,0x50
   14000240f:	pop    r14
   140002411:	ret    
   140002412:	int3   
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	int3   
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x8],rbx
   140002425:	push   rdi
   140002426:	sub    rsp,0x30
   14000242a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000242e:	mov    rax,rdi
   140002431:	neg    rax
   140002434:	sbb    eax,eax
   140002436:	not    eax
   140002438:	and    eax,0x8000ffff
   14000243d:	jl     0x14000245e
   14000243f:	mov    rax,QWORD PTR [rdi]
   140002442:	mov    rbx,QWORD PTR [rax+0x30]
   140002446:	mov    rcx,rbx
   140002449:	call   QWORD PTR [rip+0x4f49]        # 0x140007398
   14000244f:	mov    rcx,rdi
   140002452:	call   rbx
   140002454:	mov    DWORD PTR [rsp+0x20],eax
   140002458:	jmp    0x14000245e
   14000245a:	mov    DWORD PTR [rsp+0x20],eax
   14000245e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002463:	add    rsp,0x30
   140002467:	pop    rdi
   140002468:	ret    
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x18],rbx
   140002475:	mov    QWORD PTR [rsp+0x20],rsi
   14000247a:	push   rdi
   14000247b:	sub    rsp,0x260
   140002482:	mov    rax,QWORD PTR [rip+0x7b7f]        # 0x14000a008
   140002489:	xor    rax,rsp
   14000248c:	mov    QWORD PTR [rsp+0x250],rax
   140002494:	mov    rsi,rdx
   140002497:	mov    rdi,rcx
   14000249a:	mov    QWORD PTR [rsp+0x28],rdx
   14000249f:	and    DWORD PTR [rsp+0x30],0x0
   1400024a4:	xor    edx,edx
   1400024a6:	mov    r8d,0x218
   1400024ac:	lea    rcx,[rsp+0x34]
   1400024b1:	call   0x14000666c
   1400024b6:	mov    rax,rsi
   1400024b9:	neg    rax
   1400024bc:	sbb    ebx,ebx
   1400024be:	not    ebx
   1400024c0:	and    ebx,0x80070057
   1400024c6:	jl     0x1400024d9
   1400024c8:	mov    rax,QWORD PTR [rdi+0x10]
   1400024cc:	neg    rax
   1400024cf:	sbb    ebx,ebx
   1400024d1:	not    ebx
   1400024d3:	and    ebx,0x8000ffff
   1400024d9:	test   ebx,ebx
   1400024db:	js     0x140002557
   1400024dd:	mov    DWORD PTR [rsp+0x30],0x21c
   1400024e5:	mov    eax,DWORD PTR [rsi]
   1400024e7:	mov    DWORD PTR [rsp+0x34],eax
   1400024eb:	mov    eax,DWORD PTR [rsi+0x4]
   1400024ee:	mov    DWORD PTR [rsp+0x38],eax
   1400024f2:	mov    eax,DWORD PTR [rsi+0x8]
   1400024f5:	mov    DWORD PTR [rsp+0x3c],eax
   1400024f9:	mov    DWORD PTR [rsp+0x40],0x20c
   140002501:	mov    rdi,QWORD PTR [rdi+0x10]
   140002505:	mov    rax,QWORD PTR [rdi]
   140002508:	mov    rbx,QWORD PTR [rax+0x38]
   14000250c:	mov    rcx,rbx
   14000250f:	call   QWORD PTR [rip+0x4e83]        # 0x140007398
   140002515:	lea    rdx,[rsp+0x30]
   14000251a:	mov    rcx,rdi
   14000251d:	call   rbx
   14000251f:	mov    ebx,eax
   140002521:	mov    DWORD PTR [rsp+0x20],eax
   140002525:	jmp    0x140002532
   140002527:	mov    ebx,eax
   140002529:	mov    DWORD PTR [rsp+0x20],eax
   14000252d:	mov    rsi,QWORD PTR [rsp+0x28]
   140002532:	test   ebx,ebx
   140002534:	js     0x140002557
   140002536:	mov    eax,DWORD PTR [rsp+0x44]
   14000253a:	mov    DWORD PTR [rsi+0xc],eax
   14000253d:	mov    eax,DWORD PTR [rsp+0x48]
   140002541:	mov    DWORD PTR [rsi+0x10],eax
   140002544:	lea    rcx,[rsi+0x14]
   140002548:	lea    r8,[rsp+0x4c]
   14000254d:	mov    edx,0x1fe
   140002552:	call   0x140002aec
   140002557:	mov    eax,ebx
   140002559:	mov    rcx,QWORD PTR [rsp+0x250]
   140002561:	xor    rcx,rsp
   140002564:	call   0x140005fd0
   140002569:	lea    r11,[rsp+0x260]
   140002571:	mov    rbx,QWORD PTR [r11+0x20]
   140002575:	mov    rsi,QWORD PTR [r11+0x28]
   140002579:	mov    rsp,r11
   14000257c:	pop    rdi
   14000257d:	ret    
   14000257e:	int3   
   14000257f:	int3   
   140002580:	int3   
   140002581:	int3   
   140002582:	int3   
   140002583:	int3   
   140002584:	int3   
   140002585:	int3   
   140002586:	int3   
   140002587:	int3   
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,rsp
   140002593:	mov    QWORD PTR [rax+0x8],rbx
   140002597:	mov    DWORD PTR [rax+0x20],r9d
   14000259b:	mov    QWORD PTR [rax+0x18],r8
   14000259f:	mov    DWORD PTR [rax+0x10],edx
   1400025a2:	push   rsi
   1400025a3:	push   rdi
   1400025a4:	push   r12
   1400025a6:	push   r14
   1400025a8:	push   r15
   1400025aa:	sub    rsp,0x50
   1400025ae:	xor    r14d,r14d
   1400025b1:	cmp    QWORD PTR [rcx+0x10],r14
   1400025b5:	je     0x14000266c
   1400025bb:	mov    r15,QWORD PTR [rsp+0xb0]
   1400025c3:	test   r15,r15
   1400025c6:	je     0x14000266c
   1400025cc:	mov    r12d,DWORD PTR [rsp+0xa8]
   1400025d4:	test   r12d,r12d
   1400025d7:	jne    0x1400025e7
   1400025d9:	mov    DWORD PTR [r15],r14d
   1400025dc:	mov    QWORD PTR [rsp+0xa0],r14
   1400025e4:	mov    r15d,r14d
   1400025e7:	cmp    DWORD PTR [rsp+0xb8],r14d
   1400025ef:	je     0x1400025f4
   1400025f1:	mov    DWORD PTR [r15],r14d
   1400025f4:	mov    rsi,QWORD PTR [rcx+0x10]
   1400025f8:	mov    rax,QWORD PTR [rsi]
   1400025fb:	mov    rbx,r15
   1400025fe:	cmp    DWORD PTR [rsp+0xb8],r14d
   140002606:	cmovne rbx,r14
   14000260a:	mov    rdi,QWORD PTR [rax+0x40]
   14000260e:	mov    rcx,rdi
   140002611:	mov    rax,QWORD PTR [rip+0x4d80]        # 0x140007398
   140002618:	call   rax
   14000261a:	mov    QWORD PTR [rsp+0x30],rbx
   14000261f:	mov    DWORD PTR [rsp+0x28],r12d
   140002624:	mov    rax,QWORD PTR [rsp+0xa0]
   14000262c:	mov    QWORD PTR [rsp+0x20],rax
   140002631:	mov    r9d,DWORD PTR [rsp+0x98]
   140002639:	mov    r8,QWORD PTR [rsp+0x90]
   140002641:	mov    edx,DWORD PTR [rsp+0x88]
   140002648:	mov    rcx,rsi
   14000264b:	call   rdi
   14000264d:	mov    DWORD PTR [rsp+0x40],eax
   140002651:	cmp    DWORD PTR [rsp+0xb8],r14d
   140002659:	je     0x140002664
   14000265b:	test   eax,eax
   14000265d:	cmovns r14d,r12d
   140002661:	mov    DWORD PTR [r15],r14d
   140002664:	jmp    0x140002671
   140002666:	mov    DWORD PTR [rsp+0x40],eax
   14000266a:	jmp    0x140002671
   14000266c:	mov    eax,0x8000ffff
   140002671:	mov    rbx,QWORD PTR [rsp+0x80]
   140002679:	add    rsp,0x50
   14000267d:	pop    r15
   14000267f:	pop    r14
   140002681:	pop    r12
   140002683:	pop    rdi
   140002684:	pop    rsi
   140002685:	ret    
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    QWORD PTR [rsp+0x8],rbx
   140002695:	mov    QWORD PTR [rsp+0x10],rsi
   14000269a:	push   rdi
   14000269b:	sub    rsp,0x30
   14000269f:	mov    rsi,rdx
   1400026a2:	mov    rax,rdx
   1400026a5:	neg    rax
   1400026a8:	sbb    eax,eax
   1400026aa:	not    eax
   1400026ac:	and    eax,0x80070057
   1400026b1:	jl     0x1400026c3
   1400026b3:	mov    rax,QWORD PTR [rcx+0x10]
   1400026b7:	neg    rax
   1400026ba:	sbb    eax,eax
   1400026bc:	not    eax
   1400026be:	and    eax,0x8000ffff
   1400026c3:	test   eax,eax
   1400026c5:	js     0x1400026ed
   1400026c7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400026cb:	mov    rax,QWORD PTR [rdi]
   1400026ce:	mov    rbx,QWORD PTR [rax+0x48]
   1400026d2:	mov    rcx,rbx
   1400026d5:	call   QWORD PTR [rip+0x4cbd]        # 0x140007398
   1400026db:	mov    rdx,rsi
   1400026de:	mov    rcx,rdi
   1400026e1:	call   rbx
   1400026e3:	mov    DWORD PTR [rsp+0x20],eax
   1400026e7:	jmp    0x1400026ed
   1400026e9:	mov    DWORD PTR [rsp+0x20],eax
   1400026ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400026f2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400026f7:	add    rsp,0x30
   1400026fb:	pop    rdi
   1400026fc:	ret    
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	int3   
   140002701:	int3   
   140002702:	int3   
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	mov    QWORD PTR [rsp+0x8],rbx
   140002715:	push   rdi
   140002716:	sub    rsp,0x30
   14000271a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000271e:	mov    rax,rdi
   140002721:	neg    rax
   140002724:	sbb    eax,eax
   140002726:	not    eax
   140002728:	and    eax,0x8000ffff
   14000272d:	jl     0x14000274e
   14000272f:	mov    rax,QWORD PTR [rdi]
   140002732:	mov    rbx,QWORD PTR [rax+0x50]
   140002736:	mov    rcx,rbx
   140002739:	call   QWORD PTR [rip+0x4c59]        # 0x140007398
   14000273f:	mov    rcx,rdi
   140002742:	call   rbx
   140002744:	mov    DWORD PTR [rsp+0x20],eax
   140002748:	jmp    0x14000274e
   14000274a:	mov    DWORD PTR [rsp+0x20],eax
   14000274e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002753:	add    rsp,0x30
   140002757:	pop    rdi
   140002758:	ret    
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	mov    QWORD PTR [rsp+0x8],rbx
   140002765:	push   rdi
   140002766:	sub    rsp,0x30
   14000276a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000276e:	mov    rax,rdi
   140002771:	neg    rax
   140002774:	sbb    eax,eax
   140002776:	not    eax
   140002778:	and    eax,0x8000ffff
   14000277d:	jl     0x14000279e
   14000277f:	mov    rax,QWORD PTR [rdi]
   140002782:	mov    rbx,QWORD PTR [rax+0x58]
   140002786:	mov    rcx,rbx
   140002789:	call   QWORD PTR [rip+0x4c09]        # 0x140007398
   14000278f:	mov    rcx,rdi
   140002792:	call   rbx
   140002794:	mov    DWORD PTR [rsp+0x20],eax
   140002798:	jmp    0x14000279e
   14000279a:	mov    DWORD PTR [rsp+0x20],eax
   14000279e:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027a3:	add    rsp,0x30
   1400027a7:	pop    rdi
   1400027a8:	ret    
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400027ba:	push   rdi
   1400027bb:	push   r14
   1400027bd:	push   r15
   1400027bf:	sub    rsp,0x30
   1400027c3:	mov    r14,r9
   1400027c6:	mov    r15,rdx
   1400027c9:	xor    esi,esi
   1400027cb:	test   rdx,rdx
   1400027ce:	je     0x14000282b
   1400027d0:	test   r8d,r8d
   1400027d3:	je     0x14000282b
   1400027d5:	test   r9,r9
   1400027d8:	je     0x14000282b
   1400027da:	mov    rax,QWORD PTR [rcx+0x10]
   1400027de:	neg    rax
   1400027e1:	sbb    eax,eax
   1400027e3:	not    eax
   1400027e5:	and    eax,0x8000ffff
   1400027ea:	jl     0x140002830
   1400027ec:	mov    DWORD PTR [rsp+0x58],r8d
   1400027f1:	mov    rdi,QWORD PTR [rcx+0x10]
   1400027f5:	mov    rax,QWORD PTR [rdi]
   1400027f8:	mov    rbx,QWORD PTR [rax+0x60]
   1400027fc:	mov    rcx,rbx
   1400027ff:	call   QWORD PTR [rip+0x4b93]        # 0x140007398
   140002805:	xor    r9d,r9d
   140002808:	lea    r8,[rsp+0x58]
   14000280d:	mov    rdx,r15
   140002810:	mov    rcx,rdi
   140002813:	call   rbx
   140002815:	mov    DWORD PTR [rsp+0x20],eax
   140002819:	test   eax,eax
   14000281b:	cmovns esi,DWORD PTR [rsp+0x58]
   140002820:	mov    DWORD PTR [r14],esi
   140002823:	jmp    0x140002830
   140002825:	mov    DWORD PTR [rsp+0x20],eax
   140002829:	jmp    0x140002830
   14000282b:	mov    eax,0x80070057
   140002830:	mov    rbx,QWORD PTR [rsp+0x50]
   140002835:	mov    rsi,QWORD PTR [rsp+0x60]
   14000283a:	add    rsp,0x30
   14000283e:	pop    r15
   140002840:	pop    r14
   140002842:	pop    rdi
   140002843:	ret    
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    QWORD PTR [rsp+0x8],rbx
   140002855:	mov    QWORD PTR [rsp+0x10],rsi
   14000285a:	mov    QWORD PTR [rsp+0x18],rdi
   14000285f:	push   r14
   140002861:	sub    rsp,0x30
   140002865:	mov    esi,r8d
   140002868:	mov    r14,rdx
   14000286b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000286f:	mov    rax,rdi
   140002872:	neg    rax
   140002875:	sbb    eax,eax
   140002877:	not    eax
   140002879:	and    eax,0x8000ffff
   14000287e:	jl     0x1400028a8
   140002880:	mov    rax,QWORD PTR [rdi]
   140002883:	mov    rbx,QWORD PTR [rax+0x68]
   140002887:	mov    rcx,rbx
   14000288a:	call   QWORD PTR [rip+0x4b08]        # 0x140007398
   140002890:	xor    r9d,r9d
   140002893:	mov    r8d,esi
   140002896:	mov    rdx,r14
   140002899:	mov    rcx,rdi
   14000289c:	call   rbx
   14000289e:	mov    DWORD PTR [rsp+0x20],eax
   1400028a2:	jmp    0x1400028a8
   1400028a4:	mov    DWORD PTR [rsp+0x20],eax
   1400028a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028ad:	mov    rsi,QWORD PTR [rsp+0x48]
   1400028b2:	mov    rdi,QWORD PTR [rsp+0x50]
   1400028b7:	add    rsp,0x30
   1400028bb:	pop    r14
   1400028bd:	ret    
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400028da:	push   rdi
   1400028db:	push   r14
   1400028dd:	push   r15
   1400028df:	sub    rsp,0x30
   1400028e3:	mov    r14,r9
   1400028e6:	mov    r15,rdx
   1400028e9:	xor    esi,esi
   1400028eb:	test   rdx,rdx
   1400028ee:	je     0x14000294b
   1400028f0:	test   r8d,r8d
   1400028f3:	je     0x14000294b
   1400028f5:	test   r9,r9
   1400028f8:	je     0x14000294b
   1400028fa:	mov    rax,QWORD PTR [rcx+0x10]
   1400028fe:	neg    rax
   140002901:	sbb    eax,eax
   140002903:	not    eax
   140002905:	and    eax,0x8000ffff
   14000290a:	jl     0x140002950
   14000290c:	mov    DWORD PTR [rsp+0x58],r8d
   140002911:	mov    rdi,QWORD PTR [rcx+0x10]
   140002915:	mov    rax,QWORD PTR [rdi]
   140002918:	mov    rbx,QWORD PTR [rax+0x70]
   14000291c:	mov    rcx,rbx
   14000291f:	call   QWORD PTR [rip+0x4a73]        # 0x140007398
   140002925:	xor    r9d,r9d
   140002928:	lea    r8,[rsp+0x58]
   14000292d:	mov    rdx,r15
   140002930:	mov    rcx,rdi
   140002933:	call   rbx
   140002935:	mov    DWORD PTR [rsp+0x20],eax
   140002939:	test   eax,eax
   14000293b:	cmovns esi,DWORD PTR [rsp+0x58]
   140002940:	mov    DWORD PTR [r14],esi
   140002943:	jmp    0x140002950
   140002945:	mov    DWORD PTR [rsp+0x20],eax
   140002949:	jmp    0x140002950
   14000294b:	mov    eax,0x80070057
   140002950:	mov    rbx,QWORD PTR [rsp+0x50]
   140002955:	mov    rsi,QWORD PTR [rsp+0x60]
   14000295a:	add    rsp,0x30
   14000295e:	pop    r15
   140002960:	pop    r14
   140002962:	pop    rdi
   140002963:	ret    
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    QWORD PTR [rsp+0x8],rbx
   140002975:	mov    QWORD PTR [rsp+0x10],rsi
   14000297a:	mov    QWORD PTR [rsp+0x18],rdi
   14000297f:	push   r14
   140002981:	sub    rsp,0x30
   140002985:	mov    esi,r8d
   140002988:	mov    r14,rdx
   14000298b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000298f:	mov    rax,rdi
   140002992:	neg    rax
   140002995:	sbb    eax,eax
   140002997:	not    eax
   140002999:	and    eax,0x8000ffff
   14000299e:	jl     0x1400029c8
   1400029a0:	mov    rax,QWORD PTR [rdi]
   1400029a3:	mov    rbx,QWORD PTR [rax+0x78]
   1400029a7:	mov    rcx,rbx
   1400029aa:	call   QWORD PTR [rip+0x49e8]        # 0x140007398
   1400029b0:	xor    r9d,r9d
   1400029b3:	mov    r8d,esi
   1400029b6:	mov    rdx,r14
   1400029b9:	mov    rcx,rdi
   1400029bc:	call   rbx
   1400029be:	mov    DWORD PTR [rsp+0x20],eax
   1400029c2:	jmp    0x1400029c8
   1400029c4:	mov    DWORD PTR [rsp+0x20],eax
   1400029c8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400029cd:	mov    rsi,QWORD PTR [rsp+0x48]
   1400029d2:	mov    rdi,QWORD PTR [rsp+0x50]
   1400029d7:	add    rsp,0x30
   1400029db:	pop    r14
   1400029dd:	ret    
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	int3   
   1400029e1:	int3   
   1400029e2:	int3   
   1400029e3:	int3   
   1400029e4:	int3   
   1400029e5:	int3   
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400029f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400029fa:	push   rdi
   1400029fb:	sub    rsp,0x250
   140002a02:	mov    rax,QWORD PTR [rip+0x75ff]        # 0x14000a008
   140002a09:	xor    rax,rsp
   140002a0c:	mov    QWORD PTR [rsp+0x240],rax
   140002a14:	mov    rsi,rdx
   140002a17:	mov    rdi,rcx
   140002a1a:	mov    QWORD PTR [rsp+0x28],rdx
   140002a1f:	and    DWORD PTR [rsp+0x30],0x0
   140002a24:	xor    edx,edx
   140002a26:	mov    r8d,0x208
   140002a2c:	lea    rcx,[rsp+0x34]
   140002a31:	call   0x14000666c
   140002a36:	mov    rax,rsi
   140002a39:	neg    rax
   140002a3c:	sbb    ebx,ebx
   140002a3e:	not    ebx
   140002a40:	and    ebx,0x80070057
   140002a46:	jl     0x140002a59
   140002a48:	mov    rax,QWORD PTR [rdi+0x10]
   140002a4c:	neg    rax
   140002a4f:	sbb    ebx,ebx
   140002a51:	not    ebx
   140002a53:	and    ebx,0x8000ffff
   140002a59:	test   ebx,ebx
   140002a5b:	js     0x140002abd
   140002a5d:	mov    DWORD PTR [rsp+0x30],0x20c
   140002a65:	mov    rdi,QWORD PTR [rdi+0x10]
   140002a69:	mov    rax,QWORD PTR [rdi]
   140002a6c:	mov    rbx,QWORD PTR [rax+0x90]
   140002a73:	mov    rcx,rbx
   140002a76:	call   QWORD PTR [rip+0x491c]        # 0x140007398
   140002a7c:	lea    rdx,[rsp+0x30]
   140002a81:	mov    rcx,rdi
   140002a84:	call   rbx
   140002a86:	mov    ebx,eax
   140002a88:	mov    DWORD PTR [rsp+0x20],eax
   140002a8c:	jmp    0x140002a99
   140002a8e:	mov    ebx,eax
   140002a90:	mov    DWORD PTR [rsp+0x20],eax
   140002a94:	mov    rsi,QWORD PTR [rsp+0x28]
   140002a99:	test   ebx,ebx
   140002a9b:	js     0x140002abd
   140002a9d:	mov    eax,DWORD PTR [rsp+0x34]
   140002aa1:	mov    DWORD PTR [rsi],eax
   140002aa3:	mov    eax,DWORD PTR [rsp+0x38]
   140002aa7:	mov    DWORD PTR [rsi+0x4],eax
   140002aaa:	lea    rcx,[rsi+0x8]
   140002aae:	lea    r8,[rsp+0x3c]
   140002ab3:	mov    edx,0x1fe
   140002ab8:	call   0x140002aec
   140002abd:	mov    eax,ebx
   140002abf:	mov    rcx,QWORD PTR [rsp+0x240]
   140002ac7:	xor    rcx,rsp
   140002aca:	call   0x140005fd0
   140002acf:	lea    r11,[rsp+0x250]
   140002ad7:	mov    rbx,QWORD PTR [r11+0x20]
   140002adb:	mov    rsi,QWORD PTR [r11+0x28]
   140002adf:	mov    rsp,r11
   140002ae2:	pop    rdi
   140002ae3:	ret    
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	mov    QWORD PTR [rsp+0x8],rbx
   140002af1:	shr    rdx,1
   140002af4:	xor    ebx,ebx
   140002af6:	mov    r10d,0x7ffffffe
   140002afc:	mov    r9d,ebx
   140002aff:	mov    r11d,0x80070057
   140002b05:	lea    rax,[rdx-0x1]
   140002b09:	cmp    rax,r10
   140002b0c:	cmova  r9d,r11d
   140002b10:	test   r9d,r9d
   140002b13:	js     0x140002b54
   140002b15:	mov    r9d,ebx
   140002b18:	test   rdx,rdx
   140002b1b:	je     0x140002b48
   140002b1d:	sub    r10,rdx
   140002b20:	sub    r8,rcx
   140002b23:	lea    rax,[r10+rdx*1]
   140002b27:	test   rax,rax
   140002b2a:	je     0x140002b43
   140002b2c:	movzx  eax,WORD PTR [r8+rcx*1]
   140002b31:	test   ax,ax
   140002b34:	je     0x140002b43
   140002b36:	mov    WORD PTR [rcx],ax
   140002b39:	add    rcx,0x2
   140002b3d:	sub    rdx,0x1
   140002b41:	jne    0x140002b23
   140002b43:	test   rdx,rdx
   140002b46:	jne    0x140002b59
   140002b48:	sub    rcx,0x2
   140002b4c:	mov    r9d,0x8007007a
   140002b52:	jmp    0x140002b59
   140002b54:	test   rdx,rdx
   140002b57:	je     0x140002b5c
   140002b59:	mov    WORD PTR [rcx],bx
   140002b5c:	mov    rbx,QWORD PTR [rsp+0x8]
   140002b61:	mov    eax,r9d
   140002b64:	ret    
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	mov    QWORD PTR [rsp+0x10],rbx
   140002b71:	push   rbp
   140002b72:	push   rsi
   140002b73:	push   rdi
   140002b74:	push   r14
   140002b76:	push   r15
   140002b78:	lea    rbp,[rsp-0x980]
   140002b80:	sub    rsp,0xa80
   140002b87:	mov    rax,QWORD PTR [rip+0x747a]        # 0x14000a008
   140002b8e:	xor    rax,rsp
   140002b91:	mov    QWORD PTR [rbp+0x970],rax
   140002b98:	xor    eax,eax
   140002b9a:	xor    r14d,r14d
   140002b9d:	mov    DWORD PTR [rsp+0x50],r14d
   140002ba2:	mov    rsi,r9
   140002ba5:	mov    QWORD PTR [rsp+0x54],rax
   140002baa:	mov    rdi,r8
   140002bad:	mov    DWORD PTR [rsp+0x5c],eax
   140002bb1:	mov    rbx,rcx
   140002bb4:	test   rcx,rcx
   140002bb7:	je     0x140002cec
   140002bbd:	call   QWORD PTR [rip+0x44ad]        # 0x140007070
   140002bc3:	test   eax,eax
   140002bc5:	je     0x140002cec
   140002bcb:	lea    r15,[rip+0x4b9e]        # 0x140007770
   140002bd2:	mov    rcx,r15
   140002bd5:	call   QWORD PTR [rip+0x4495]        # 0x140007070
   140002bdb:	test   eax,eax
   140002bdd:	je     0x140002cec
   140002be3:	xor    edx,edx
   140002be5:	mov    WORD PTR [rbp+0x170],r14w
   140002bed:	mov    r8d,0x7fe
   140002bf3:	lea    rcx,[rbp+0x172]
   140002bfa:	call   0x14000666c
   140002bff:	mov    r9,rbx
   140002c02:	mov    QWORD PTR [rsp+0x20],r15
   140002c07:	lea    r8,[rip+0x4d8a]        # 0x140007998
   140002c0e:	mov    edx,0x800
   140002c13:	lea    rcx,[rbp+0x170]
   140002c1a:	call   0x1400030f4
   140002c1f:	test   eax,eax
   140002c21:	js     0x140002ce5
   140002c27:	lea    rax,[rsp+0x48]
   140002c2c:	mov    QWORD PTR [rsp+0x48],r14
   140002c31:	mov    r9d,0x20019
   140002c37:	mov    QWORD PTR [rsp+0x20],rax
   140002c3c:	xor    r8d,r8d
   140002c3f:	lea    rdx,[rbp+0x170]
   140002c46:	mov    rcx,0xffffffff80000000
   140002c4d:	call   QWORD PTR [rip+0x43ad]        # 0x140007000
   140002c53:	test   eax,eax
   140002c55:	jne    0x140002cd5
   140002c57:	xor    edx,edx
   140002c59:	mov    WORD PTR [rsp+0x60],r14w
   140002c5f:	mov    r8d,0x206
   140002c65:	lea    rcx,[rsp+0x62]
   140002c6a:	call   0x14000666c
   140002c6f:	mov    rcx,QWORD PTR [rsp+0x48]
   140002c74:	lea    r9,[rsp+0x40]
   140002c79:	mov    QWORD PTR [rsp+0x38],r14
   140002c7e:	lea    r8,[rsp+0x60]
   140002c83:	mov    QWORD PTR [rsp+0x30],r14
   140002c88:	xor    edx,edx
   140002c8a:	mov    QWORD PTR [rsp+0x28],r14
   140002c8f:	mov    QWORD PTR [rsp+0x20],r14
   140002c94:	mov    DWORD PTR [rsp+0x40],0x104
   140002c9c:	call   QWORD PTR [rip+0x4366]        # 0x140007008
   140002ca2:	test   eax,eax
   140002ca4:	jne    0x140002cba
   140002ca6:	lea    rdx,[rsp+0x50]
   140002cab:	lea    rcx,[rsp+0x60]
   140002cb0:	call   QWORD PTR [rip+0x469a]        # 0x140007350
   140002cb6:	mov    ebx,eax
   140002cb8:	jmp    0x140002cc8
   140002cba:	movzx  ebx,ax
   140002cbd:	or     ebx,0x80070000
   140002cc3:	test   eax,eax
   140002cc5:	cmovle ebx,eax
   140002cc8:	mov    rcx,QWORD PTR [rsp+0x48]
   140002ccd:	call   QWORD PTR [rip+0x435d]        # 0x140007030
   140002cd3:	jmp    0x140002cf1
   140002cd5:	movzx  ebx,ax
   140002cd8:	or     ebx,0x80070000
   140002cde:	test   eax,eax
   140002ce0:	cmovle ebx,eax
   140002ce3:	jmp    0x140002cf1
   140002ce5:	mov    ebx,0x80004005
   140002cea:	jmp    0x140002cf1
   140002cec:	mov    ebx,0x80070057
   140002cf1:	test   ebx,ebx
   140002cf3:	js     0x140002d10
   140002cf5:	xor    edx,edx
   140002cf7:	mov    QWORD PTR [rsp+0x20],rsi
   140002cfc:	mov    r9,rdi
   140002cff:	lea    rcx,[rsp+0x50]
   140002d04:	lea    r8d,[rdx+0x1]
   140002d08:	call   QWORD PTR [rip+0x4672]        # 0x140007380
   140002d0e:	mov    ebx,eax
   140002d10:	mov    eax,ebx
   140002d12:	mov    rcx,QWORD PTR [rbp+0x970]
   140002d19:	xor    rcx,rsp
   140002d1c:	call   0x140005fd0
   140002d21:	mov    rbx,QWORD PTR [rsp+0xab8]
   140002d29:	add    rsp,0xa80
   140002d30:	pop    r15
   140002d32:	pop    r14
   140002d34:	pop    rdi
   140002d35:	pop    rsi
   140002d36:	pop    rbp
   140002d37:	ret    
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    QWORD PTR [rsp+0x10],rbx
   140002d45:	push   rbp
   140002d46:	push   rsi
   140002d47:	push   rdi
   140002d48:	push   r14
   140002d4a:	push   r15
   140002d4c:	lea    rbp,[rsp-0x170]
   140002d54:	sub    rsp,0x270
   140002d5b:	mov    rax,QWORD PTR [rip+0x72a6]        # 0x14000a008
   140002d62:	xor    rax,rsp
   140002d65:	mov    QWORD PTR [rbp+0x160],rax
   140002d6c:	mov    rdi,rcx
   140002d6f:	xor    r15d,r15d
   140002d72:	lea    rcx,[rsp+0x52]
   140002d77:	mov    WORD PTR [rsp+0x50],r15w
   140002d7d:	xor    edx,edx
   140002d7f:	mov    r8d,0x206
   140002d85:	mov    r14,r9
   140002d88:	call   0x14000666c
   140002d8d:	test   rdi,rdi
   140002d90:	je     0x140002e8f
   140002d96:	mov    rax,QWORD PTR [rdi]
   140002d99:	mov    QWORD PTR [rsp+0x20],r15
   140002d9e:	mov    rbx,QWORD PTR [rax]
   140002da1:	mov    rcx,rbx
   140002da4:	call   QWORD PTR [rip+0x45ee]        # 0x140007398
   140002daa:	lea    r8,[rsp+0x20]
   140002daf:	mov    rcx,rdi
   140002db2:	lea    rdx,[rip+0x56e7]        # 0x1400084a0
   140002db9:	call   rbx
   140002dbb:	mov    esi,eax
   140002dbd:	test   eax,eax
   140002dbf:	js     0x140002e94
   140002dc5:	mov    rdi,QWORD PTR [rsp+0x20]
   140002dca:	mov    DWORD PTR [rsp+0x40],0x1
   140002dd2:	mov    DWORD PTR [rsp+0x48],0xa
   140002dda:	mov    rax,QWORD PTR [rdi]
   140002ddd:	mov    rbx,QWORD PTR [rax+0x18]
   140002de1:	mov    rcx,rbx
   140002de4:	call   QWORD PTR [rip+0x45ae]        # 0x140007398
   140002dea:	lea    r9,[rsp+0x28]
   140002def:	mov    rcx,rdi
   140002df2:	lea    r8,[rsp+0x40]
   140002df7:	lea    edx,[r15+0x1]
   140002dfb:	call   rbx
   140002dfd:	mov    esi,eax
   140002dff:	test   eax,eax
   140002e01:	js     0x140002e73
   140002e03:	lea    eax,[r15+0x1f]
   140002e07:	cmp    ax,WORD PTR [rsp+0x28]
   140002e0c:	je     0x140002e19
   140002e0e:	lea    eax,[r15+0x8]
   140002e12:	cmp    ax,WORD PTR [rsp+0x28]
   140002e17:	jne    0x140002e63
   140002e19:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e1e:	lea    rax,[rsp+0x50]
   140002e23:	sub    rcx,rax
   140002e26:	lea    rdx,[rsp+0x50]
   140002e2b:	mov    r8d,0x104
   140002e31:	lea    rax,[r8+0x7ffffefa]
   140002e38:	test   rax,rax
   140002e3b:	je     0x140002e53
   140002e3d:	movzx  eax,WORD PTR [rcx+rdx*1]
   140002e41:	test   ax,ax
   140002e44:	je     0x140002e53
   140002e46:	mov    WORD PTR [rdx],ax
   140002e49:	add    rdx,0x2
   140002e4d:	sub    r8,0x1
   140002e51:	jne    0x140002e31
   140002e53:	test   r8,r8
   140002e56:	jne    0x140002e5c
   140002e58:	sub    rdx,0x2
   140002e5c:	mov    WORD PTR [rdx],r15w
   140002e60:	mov    esi,r15d
   140002e63:	lea    rdx,[rsp+0x28]
   140002e68:	mov    ecx,0x1
   140002e6d:	call   QWORD PTR [rip+0x44d5]        # 0x140007348
   140002e73:	mov    rdi,QWORD PTR [rsp+0x20]
   140002e78:	mov    rax,QWORD PTR [rdi]
   140002e7b:	mov    rbx,QWORD PTR [rax+0x10]
   140002e7f:	mov    rcx,rbx
   140002e82:	call   QWORD PTR [rip+0x4510]        # 0x140007398
   140002e88:	mov    rcx,rdi
   140002e8b:	call   rbx
   140002e8d:	jmp    0x140002e94
   140002e8f:	mov    esi,0x80070057
   140002e94:	test   esi,esi
   140002e96:	js     0x140002eae
   140002e98:	mov    r9,r14
   140002e9b:	lea    r8,[rip+0x46a6]        # 0x140007548
   140002ea2:	lea    rcx,[rsp+0x50]
   140002ea7:	call   0x140002b6c
   140002eac:	mov    esi,eax
   140002eae:	mov    eax,esi
   140002eb0:	mov    rcx,QWORD PTR [rbp+0x160]
   140002eb7:	xor    rcx,rsp
   140002eba:	call   0x140005fd0
   140002ebf:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140002ec7:	add    rsp,0x270
   140002ece:	pop    r15
   140002ed0:	pop    r14
   140002ed2:	pop    rdi
   140002ed3:	pop    rsi
   140002ed4:	pop    rbp
   140002ed5:	ret    
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	mov    QWORD PTR [rsp+0x10],rbx
   140002ee1:	push   rbp
   140002ee2:	push   rsi
   140002ee3:	push   rdi
   140002ee4:	push   r14
   140002ee6:	push   r15
   140002ee8:	lea    rbp,[rsp-0x170]
   140002ef0:	sub    rsp,0x270
   140002ef7:	mov    rax,QWORD PTR [rip+0x710a]        # 0x14000a008
   140002efe:	xor    rax,rsp
   140002f01:	mov    QWORD PTR [rbp+0x160],rax
   140002f08:	mov    rdi,rcx
   140002f0b:	xor    r15d,r15d
   140002f0e:	lea    rcx,[rsp+0x52]
   140002f13:	mov    WORD PTR [rsp+0x50],r15w
   140002f19:	xor    edx,edx
   140002f1b:	mov    r8d,0x206
   140002f21:	mov    r14,r9
   140002f24:	call   0x14000666c
   140002f29:	test   rdi,rdi
   140002f2c:	je     0x14000302b
   140002f32:	mov    rax,QWORD PTR [rdi]
   140002f35:	mov    QWORD PTR [rsp+0x20],r15
   140002f3a:	mov    rbx,QWORD PTR [rax]
   140002f3d:	mov    rcx,rbx
   140002f40:	call   QWORD PTR [rip+0x4452]        # 0x140007398
   140002f46:	lea    r8,[rsp+0x20]
   140002f4b:	mov    rcx,rdi
   140002f4e:	lea    rdx,[rip+0x554b]        # 0x1400084a0
   140002f55:	call   rbx
   140002f57:	mov    esi,eax
   140002f59:	test   eax,eax
   140002f5b:	js     0x140003030
   140002f61:	mov    rdi,QWORD PTR [rsp+0x20]
   140002f66:	mov    DWORD PTR [rsp+0x40],0x1
   140002f6e:	mov    DWORD PTR [rsp+0x48],0xa
   140002f76:	mov    rax,QWORD PTR [rdi]
   140002f79:	mov    rbx,QWORD PTR [rax+0x18]
   140002f7d:	mov    rcx,rbx
   140002f80:	call   QWORD PTR [rip+0x4412]        # 0x140007398
   140002f86:	lea    r9,[rsp+0x28]
   140002f8b:	mov    rcx,rdi
   140002f8e:	lea    r8,[rsp+0x40]
   140002f93:	lea    edx,[r15+0x1]
   140002f97:	call   rbx
   140002f99:	mov    esi,eax
   140002f9b:	test   eax,eax
   140002f9d:	js     0x14000300f
   140002f9f:	lea    eax,[r15+0x1f]
   140002fa3:	cmp    ax,WORD PTR [rsp+0x28]
   140002fa8:	je     0x140002fb5
   140002faa:	lea    eax,[r15+0x8]
   140002fae:	cmp    ax,WORD PTR [rsp+0x28]
   140002fb3:	jne    0x140002fff
   140002fb5:	mov    rcx,QWORD PTR [rsp+0x30]
   140002fba:	lea    rax,[rsp+0x50]
   140002fbf:	sub    rcx,rax
   140002fc2:	lea    rdx,[rsp+0x50]
   140002fc7:	mov    r8d,0x104
   140002fcd:	lea    rax,[r8+0x7ffffefa]
   140002fd4:	test   rax,rax
   140002fd7:	je     0x140002fef
   140002fd9:	movzx  eax,WORD PTR [rcx+rdx*1]
   140002fdd:	test   ax,ax
   140002fe0:	je     0x140002fef
   140002fe2:	mov    WORD PTR [rdx],ax
   140002fe5:	add    rdx,0x2
   140002fe9:	sub    r8,0x1
   140002fed:	jne    0x140002fcd
   140002fef:	test   r8,r8
   140002ff2:	jne    0x140002ff8
   140002ff4:	sub    rdx,0x2
   140002ff8:	mov    WORD PTR [rdx],r15w
   140002ffc:	mov    esi,r15d
   140002fff:	lea    rdx,[rsp+0x28]
   140003004:	mov    ecx,0x1
   140003009:	call   QWORD PTR [rip+0x4339]        # 0x140007348
   14000300f:	mov    rdi,QWORD PTR [rsp+0x20]
   140003014:	mov    rax,QWORD PTR [rdi]
   140003017:	mov    rbx,QWORD PTR [rax+0x10]
   14000301b:	mov    rcx,rbx
   14000301e:	call   QWORD PTR [rip+0x4374]        # 0x140007398
   140003024:	mov    rcx,rdi
   140003027:	call   rbx
   140003029:	jmp    0x140003030
   14000302b:	mov    esi,0x80070057
   140003030:	test   esi,esi
   140003032:	js     0x14000304a
   140003034:	mov    r9,r14
   140003037:	lea    r8,[rip+0x453a]        # 0x140007578
   14000303e:	lea    rcx,[rsp+0x50]
   140003043:	call   0x140002b6c
   140003048:	mov    esi,eax
   14000304a:	mov    eax,esi
   14000304c:	mov    rcx,QWORD PTR [rbp+0x160]
   140003053:	xor    rcx,rsp
   140003056:	call   0x140005fd0
   14000305b:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140003063:	add    rsp,0x270
   14000306a:	pop    r15
   14000306c:	pop    r14
   14000306e:	pop    rdi
   14000306f:	pop    rsi
   140003070:	pop    rbp
   140003071:	ret    
   140003072:	int3   
   140003073:	int3   
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	mov    QWORD PTR [rsp+0x8],rbx
   14000307d:	xor    ebx,ebx
   14000307f:	lea    rax,[rdx-0x1]
   140003083:	mov    r10d,0x7ffffffe
   140003089:	mov    r9d,ebx
   14000308c:	cmp    rax,r10
   14000308f:	mov    r11d,0x80070057
   140003095:	cmova  r9d,r11d
   140003099:	test   r9d,r9d
   14000309c:	js     0x1400030dd
   14000309e:	mov    r9d,ebx
   1400030a1:	test   rdx,rdx
   1400030a4:	je     0x1400030d1
   1400030a6:	sub    r10,rdx
   1400030a9:	sub    r8,rcx
   1400030ac:	lea    rax,[r10+rdx*1]
   1400030b0:	test   rax,rax
   1400030b3:	je     0x1400030cc
   1400030b5:	movzx  eax,WORD PTR [r8+rcx*1]
   1400030ba:	test   ax,ax
   1400030bd:	je     0x1400030cc
   1400030bf:	mov    WORD PTR [rcx],ax
   1400030c2:	add    rcx,0x2
   1400030c6:	sub    rdx,0x1
   1400030ca:	jne    0x1400030ac
   1400030cc:	test   rdx,rdx
   1400030cf:	jne    0x1400030e2
   1400030d1:	sub    rcx,0x2
   1400030d5:	mov    r9d,0x8007007a
   1400030db:	jmp    0x1400030e2
   1400030dd:	test   rdx,rdx
   1400030e0:	je     0x1400030e5
   1400030e2:	mov    WORD PTR [rcx],bx
   1400030e5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400030ea:	mov    eax,r9d
   1400030ed:	ret    
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	int3   
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	mov    QWORD PTR [rsp+0x18],r8
   1400030f9:	mov    QWORD PTR [rsp+0x20],r9
   1400030fe:	push   rbx
   1400030ff:	push   rbp
   140003100:	push   rsi
   140003101:	push   rdi
   140003102:	sub    rsp,0x28
   140003106:	shr    rdx,1
   140003109:	xor    ebp,ebp
   14000310b:	mov    rdi,rcx
   14000310e:	mov    esi,ebp
   140003110:	mov    ecx,0x80070057
   140003115:	lea    rax,[rdx-0x1]
   140003119:	cmp    rax,0x7ffffffe
   14000311f:	cmova  esi,ecx
   140003122:	test   esi,esi
   140003124:	js     0x14000315b
   140003126:	lea    rbx,[rdx-0x1]
   14000312a:	mov    rcx,rdi
   14000312d:	mov    rdx,rbx
   140003130:	lea    r9,[rsp+0x68]
   140003135:	mov    esi,ebp
   140003137:	call   QWORD PTR [rip+0x41f3]        # 0x140007330
   14000313d:	test   eax,eax
   14000313f:	js     0x140003150
   140003141:	cdqe   
   140003143:	cmp    rax,rbx
   140003146:	ja     0x140003150
   140003148:	jne    0x140003163
   14000314a:	mov    WORD PTR [rdi+rbx*2],bp
   14000314e:	jmp    0x140003163
   140003150:	mov    WORD PTR [rdi+rbx*2],bp
   140003154:	mov    esi,0x8007007a
   140003159:	jmp    0x140003163
   14000315b:	test   rdx,rdx
   14000315e:	je     0x140003163
   140003160:	mov    WORD PTR [rdi],bp
   140003163:	mov    eax,esi
   140003165:	add    rsp,0x28
   140003169:	pop    rdi
   14000316a:	pop    rsi
   14000316b:	pop    rbp
   14000316c:	pop    rbx
   14000316d:	ret    
   14000316e:	int3   
   14000316f:	int3   
   140003170:	int3   
   140003171:	int3   
   140003172:	int3   
   140003173:	int3   
   140003174:	int3   
   140003175:	int3   
   140003176:	int3   
   140003177:	int3   
   140003178:	int3   
   140003179:	int3   
   14000317a:	int3   
   14000317b:	int3   
   14000317c:	int3   
   14000317d:	int3   
   14000317e:	int3   
   14000317f:	int3   
   140003180:	mov    QWORD PTR [rsp+0x8],rbx
   140003185:	mov    QWORD PTR [rsp+0x10],rsi
   14000318a:	push   rdi
   14000318b:	sub    rsp,0x20
   14000318f:	mov    rax,r8
   140003192:	neg    rax
   140003195:	sbb    esi,esi
   140003197:	not    esi
   140003199:	and    esi,0x80004003
   14000319f:	jl     0x1400031fd
   1400031a1:	and    QWORD PTR [r8],0x0
   1400031a5:	mov    rax,QWORD PTR [rip+0x52a4]        # 0x140008450
   1400031ac:	cmp    rax,QWORD PTR [rdx]
   1400031af:	jne    0x1400031be
   1400031b1:	mov    rax,QWORD PTR [rip+0x52a0]        # 0x140008458
   1400031b8:	cmp    rax,QWORD PTR [rdx+0x8]
   1400031bc:	je     0x1400031d7
   1400031be:	mov    rax,QWORD PTR [rip+0x43a3]        # 0x140007568
   1400031c5:	cmp    rax,QWORD PTR [rdx]
   1400031c8:	jne    0x1400031dc
   1400031ca:	mov    rax,QWORD PTR [rip+0x439f]        # 0x140007570
   1400031d1:	cmp    rax,QWORD PTR [rdx+0x8]
   1400031d5:	jne    0x1400031dc
   1400031d7:	mov    QWORD PTR [r8],rcx
   1400031da:	jmp    0x1400031e1
   1400031dc:	mov    esi,0x80004002
   1400031e1:	test   esi,esi
   1400031e3:	js     0x1400031fd
   1400031e5:	mov    rdi,QWORD PTR [r8]
   1400031e8:	mov    rdx,QWORD PTR [rdi]
   1400031eb:	mov    rbx,QWORD PTR [rdx+0x8]
   1400031ef:	mov    rcx,rbx
   1400031f2:	call   QWORD PTR [rip+0x41a0]        # 0x140007398
   1400031f8:	mov    rcx,rdi
   1400031fb:	call   rbx
   1400031fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140003202:	mov    eax,esi
   140003204:	mov    rsi,QWORD PTR [rsp+0x38]
   140003209:	add    rsp,0x20
   14000320d:	pop    rdi
   14000320e:	ret    
   14000320f:	int3   
   140003210:	int3   
   140003211:	int3   
   140003212:	int3   
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    eax,0x1
   140003225:	lock xadd DWORD PTR [rcx+0x8],eax
   14000322a:	inc    eax
   14000322c:	ret    
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	int3   
   140003231:	int3   
   140003232:	int3   
   140003233:	int3   
   140003234:	int3   
   140003235:	int3   
   140003236:	int3   
   140003237:	int3   
   140003238:	int3   
   140003239:	int3   
   14000323a:	int3   
   14000323b:	int3   
   14000323c:	int3   
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	mov    QWORD PTR [rsp+0x8],rbx
   140003245:	push   rdi
   140003246:	sub    rsp,0x20
   14000324a:	mov    rbx,rcx
   14000324d:	or     edi,0xffffffff
   140003250:	lock xadd DWORD PTR [rcx+0x8],edi
   140003255:	sub    edi,0x1
   140003258:	jne    0x1400032af
   14000325a:	test   rcx,rcx
   14000325d:	je     0x1400032af
   14000325f:	lea    rax,[rip+0x4492]        # 0x1400076f8
   140003266:	mov    QWORD PTR [rcx],rax
   140003269:	mov    rcx,QWORD PTR [rcx+0x220]
   140003270:	lea    rax,[rcx-0x1]
   140003274:	cmp    rax,0xfffffffffffffffd
   140003278:	ja     0x140003288
   14000327a:	call   QWORD PTR [rip+0x3df8]        # 0x140007078
   140003280:	or     QWORD PTR [rbx+0x220],0xffffffffffffffff
   140003288:	mov    rcx,QWORD PTR [rbx+0x228]
   14000328f:	lea    rdx,[rcx-0x1]
   140003293:	cmp    rdx,0xfffffffffffffffd
   140003297:	ja     0x1400032a7
   140003299:	call   QWORD PTR [rip+0x3dd9]        # 0x140007078
   14000329f:	or     QWORD PTR [rbx+0x228],0xffffffffffffffff
   1400032a7:	mov    rcx,rbx
   1400032aa:	call   0x140005bd0
   1400032af:	mov    eax,edi
   1400032b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032b6:	add    rsp,0x20
   1400032ba:	pop    rdi
   1400032bb:	ret    
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	int3   
   1400032c1:	int3   
   1400032c2:	int3   
   1400032c3:	int3   
   1400032c4:	int3   
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032d5:	push   rdi
   1400032d6:	sub    rsp,0x20
   1400032da:	mov    rbx,rcx
   1400032dd:	or     edi,0xffffffff
   1400032e0:	lock xadd DWORD PTR [rcx+0x8],edi
   1400032e5:	sub    edi,0x1
   1400032e8:	jne    0x14000334f
   1400032ea:	test   rcx,rcx
   1400032ed:	je     0x14000334f
   1400032ef:	lea    rax,[rip+0x4392]        # 0x140007688
   1400032f6:	xor    edx,edx
   1400032f8:	mov    QWORD PTR [rcx],rax
   1400032fb:	mov    rcx,QWORD PTR [rcx+0x220]
   140003302:	call   QWORD PTR [rip+0x3d78]        # 0x140007080
   140003308:	mov    rcx,QWORD PTR [rbx+0x220]
   14000330f:	lea    edx,[rdi+0x6]
   140003312:	call   QWORD PTR [rip+0x3d70]        # 0x140007088
   140003318:	mov    rcx,QWORD PTR [rbx+0x220]
   14000331f:	lea    edx,[rdi+0xf]
   140003322:	call   QWORD PTR [rip+0x3d68]        # 0x140007090
   140003328:	mov    rcx,QWORD PTR [rbx+0x220]
   14000332f:	lea    rdx,[rcx-0x1]
   140003333:	cmp    rdx,0xfffffffffffffffd
   140003337:	ja     0x140003347
   140003339:	call   QWORD PTR [rip+0x3d39]        # 0x140007078
   14000333f:	or     QWORD PTR [rbx+0x220],0xffffffffffffffff
   140003347:	mov    rcx,rbx
   14000334a:	call   0x140005bd0
   14000334f:	mov    eax,edi
   140003351:	mov    rbx,QWORD PTR [rsp+0x30]
   140003356:	add    rsp,0x20
   14000335a:	pop    rdi
   14000335b:	ret    
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	int3   
   140003361:	int3   
   140003362:	int3   
   140003363:	int3   
   140003364:	mov    r11,rsp
   140003367:	mov    QWORD PTR [r11+0x10],rbx
   14000336b:	push   rbp
   14000336c:	push   rsi
   14000336d:	push   rdi
   14000336e:	sub    rsp,0x30
   140003372:	and    DWORD PTR [rsp+0x50],0x0
   140003377:	xor    ebx,ebx
   140003379:	and    DWORD PTR [rsp+0x60],ebx
   14000337d:	mov    rdi,r8
   140003380:	and    QWORD PTR [r8],0x0
   140003384:	mov    rbp,rdx
   140003387:	mov    rsi,rcx
   14000338a:	test   rcx,rcx
   14000338d:	je     0x14000340b
   14000338f:	lea    rax,[r11+0x18]
   140003393:	xor    r8d,r8d
   140003396:	mov    QWORD PTR [r11-0x20],rax
   14000339a:	lea    r9,[r11+0x8]
   14000339e:	and    QWORD PTR [r11-0x28],rbx
   1400033a2:	call   QWORD PTR [rip+0x3c68]        # 0x140007010
   1400033a8:	test   eax,eax
   1400033aa:	je     0x1400033b3
   1400033ac:	cmp    eax,0xea
   1400033b1:	jne    0x140003407
   1400033b3:	mov    ecx,DWORD PTR [rsp+0x50]
   1400033b7:	lea    eax,[rcx-0x1]
   1400033ba:	cmp    eax,0x1
   1400033bd:	jbe    0x1400033c4
   1400033bf:	cmp    ecx,0x7
   1400033c2:	jne    0x14000340b
   1400033c4:	mov    edx,DWORD PTR [rsp+0x60]
   1400033c8:	mov    ecx,0x40
   1400033cd:	add    rdx,0x2
   1400033d1:	call   QWORD PTR [rip+0x3cc1]        # 0x140007098
   1400033d7:	mov    rbx,rax
   1400033da:	test   rax,rax
   1400033dd:	je     0x14000340b
   1400033df:	and    DWORD PTR [rsp+0x50],0x0
   1400033e4:	lea    rax,[rsp+0x60]
   1400033e9:	mov    QWORD PTR [rsp+0x28],rax
   1400033ee:	lea    r9,[rsp+0x50]
   1400033f3:	xor    r8d,r8d
   1400033f6:	mov    QWORD PTR [rsp+0x20],rbx
   1400033fb:	mov    rdx,rbp
   1400033fe:	mov    rcx,rsi
   140003401:	call   QWORD PTR [rip+0x3c09]        # 0x140007010
   140003407:	test   eax,eax
   140003409:	je     0x140003421
   14000340b:	mov    edx,0x2
   140003410:	lea    ecx,[rdx+0x3e]
   140003413:	call   QWORD PTR [rip+0x3c7f]        # 0x140007098
   140003419:	mov    rbx,rax
   14000341c:	test   rax,rax
   14000341f:	je     0x140003428
   140003421:	mov    QWORD PTR [rdi],rbx
   140003424:	xor    eax,eax
   140003426:	jmp    0x14000342d
   140003428:	mov    eax,0x8007000e
   14000342d:	mov    rbx,QWORD PTR [rsp+0x58]
   140003432:	add    rsp,0x30
   140003436:	pop    rdi
   140003437:	pop    rsi
   140003438:	pop    rbp
   140003439:	ret    
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    rax,rsp
   140003443:	mov    QWORD PTR [rax+0x8],rbx
   140003447:	mov    QWORD PTR [rax+0x10],rsi
   14000344b:	mov    QWORD PTR [rax+0x18],rdi
   14000344f:	push   rbp
   140003450:	push   r12
   140003452:	push   r13
   140003454:	push   r14
   140003456:	push   r15
   140003458:	lea    rbp,[rax-0x5f]
   14000345c:	sub    rsp,0xb0
   140003463:	mov    rax,QWORD PTR [rip+0x6b9e]        # 0x14000a008
   14000346a:	xor    rax,rsp
   14000346d:	mov    QWORD PTR [rbp+0x27],rax
   140003471:	movups xmm0,XMMWORD PTR [rip+0x40e0]        # 0x140007558
   140003478:	xor    r14d,r14d
   14000347b:	lea    rcx,[rbp-0x29]
   14000347f:	and    DWORD PTR [rbp-0x49],r14d
   140003483:	xor    edx,edx
   140003485:	and    DWORD PTR [rbp-0x45],r14d
   140003489:	mov    r13d,0x400
   14000348f:	xor    r15d,r15d
   140003492:	lea    edi,[r14+0x20]
   140003496:	lea    r12d,[r14+0x4]
   14000349a:	mov    r8d,edi
   14000349d:	mov    DWORD PTR [rbp-0x39],r12d
   1400034a1:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   1400034a6:	call   0x14000666c
   1400034ab:	mov    r8d,edi
   1400034ae:	lea    rcx,[rbp+0x7]
   1400034b2:	xor    edx,edx
   1400034b4:	call   0x14000666c
   1400034b9:	mov    ecx,r13d
   1400034bc:	call   0x140005bdc
   1400034c1:	mov    rbx,rax
   1400034c4:	test   rax,rax
   1400034c7:	je     0x14000386f
   1400034cd:	mov    r8d,r13d
   1400034d0:	xor    edx,edx
   1400034d2:	mov    rcx,rax
   1400034d5:	call   0x14000666c
   1400034da:	lea    r9d,[r14+0xa]
   1400034de:	xor    r8d,r8d
   1400034e1:	xor    edx,edx
   1400034e3:	lea    rcx,[rbp-0x9]
   1400034e7:	call   QWORD PTR [rip+0x3d13]        # 0x140007200
   1400034ed:	mov    rsi,rax
   1400034f0:	cmp    rax,0xffffffffffffffff
   1400034f4:	je     0x14000385f
   1400034fa:	and    DWORD PTR [rbp-0x41],r14d
   1400034fe:	lea    r8,[rbp-0x29]
   140003502:	xor    edx,edx
   140003504:	mov    DWORD PTR [rbp-0x29],edi
   140003507:	mov    rcx,rax
   14000350a:	call   QWORD PTR [rip+0x3cf8]        # 0x140007208
   140003510:	test   eax,eax
   140003512:	je     0x140003658
   140003518:	xor    r9d,r9d
   14000351b:	mov    DWORD PTR [rsp+0x28],0x2001f
   140003523:	lea    rdx,[rbp-0x29]
   140003527:	mov    DWORD PTR [rsp+0x20],0x2
   14000352f:	mov    rcx,rsi
   140003532:	lea    r8d,[r9+0x1]
   140003536:	call   QWORD PTR [rip+0x3cf4]        # 0x140007230
   14000353c:	mov    rdi,rax
   14000353f:	cmp    rax,0xffffffffffffffff
   140003543:	jne    0x140003576
   140003545:	mov    DWORD PTR [rsp+0x28],0x20019
   14000354d:	lea    r8d,[rax+0x2]
   140003551:	xor    r9d,r9d
   140003554:	mov    DWORD PTR [rsp+0x20],0x2
   14000355c:	lea    rdx,[rbp-0x29]
   140003560:	mov    rcx,rsi
   140003563:	call   QWORD PTR [rip+0x3cc7]        # 0x140007230
   140003569:	mov    rdi,rax
   14000356c:	cmp    rax,0xffffffffffffffff
   140003570:	je     0x140003636
   140003576:	mov    rcx,rdi
   140003579:	call   0x1400038f8
   14000357e:	test   eax,eax
   140003580:	jne    0x140003590
   140003582:	mov    rcx,rdi
   140003585:	call   QWORD PTR [rip+0x3aa5]        # 0x140007030
   14000358b:	jmp    0x140003636
   140003590:	mov    r8d,DWORD PTR [rbp-0x15]
   140003594:	lea    rdx,[rbp-0x45]
   140003598:	and    DWORD PTR [rbp-0x49],r14d
   14000359c:	lea    rcx,[rbp-0x49]
   1400035a0:	and    DWORD PTR [rbp-0x45],r14d
   1400035a4:	xor    r9d,r9d
   1400035a7:	call   QWORD PTR [rip+0x3a93]        # 0x140007040
   1400035ad:	test   eax,eax
   1400035af:	jne    0x140003582
   1400035b1:	test   BYTE PTR [rbp-0x49],0x8
   1400035b5:	je     0x140003582
   1400035b7:	add    r12d,0x18
   1400035bb:	mov    DWORD PTR [rbp-0x39],r12d
   1400035bf:	cmp    r13d,r12d
   1400035c2:	jae    0x140003614
   1400035c4:	lea    eax,[r13+0x400]
   1400035cb:	mov    ecx,eax
   1400035cd:	mov    DWORD PTR [rbp-0x35],eax
   1400035d0:	mov    QWORD PTR [rbp-0x31],rax
   1400035d4:	call   0x140005bdc
   1400035d9:	mov    r12,rax
   1400035dc:	test   rax,rax
   1400035df:	je     0x140003856
   1400035e5:	mov    r8,QWORD PTR [rbp-0x31]
   1400035e9:	xor    edx,edx
   1400035eb:	mov    rcx,rax
   1400035ee:	call   0x14000666c
   1400035f3:	mov    r8d,r13d
   1400035f6:	mov    rdx,rbx
   1400035f9:	mov    rcx,r12
   1400035fc:	call   0x140006660
   140003601:	mov    rcx,rbx
   140003604:	call   0x140005bd0
   140003609:	mov    r13d,DWORD PTR [rbp-0x35]
   14000360d:	mov    rbx,r12
   140003610:	mov    r12d,DWORD PTR [rbp-0x39]
   140003614:	lea    rcx,[r15+r15*2]
   140003618:	inc    r15d
   14000361b:	mov    DWORD PTR [rbx+rcx*8+0x8],0x1
   140003623:	mov    eax,DWORD PTR [rbp-0x45]
   140003626:	mov    DWORD PTR [rbx+rcx*8+0xc],eax
   14000362a:	mov    eax,DWORD PTR [rbp-0x49]
   14000362d:	mov    DWORD PTR [rbx+rcx*8+0x10],eax
   140003631:	mov    QWORD PTR [rbx+rcx*8+0x18],rdi
   140003636:	mov    eax,DWORD PTR [rbp-0x41]
   140003639:	lea    r8,[rbp-0x29]
   14000363d:	inc    eax
   14000363f:	mov    rcx,rsi
   140003642:	mov    edx,eax
   140003644:	mov    DWORD PTR [rbp-0x41],eax
   140003647:	call   QWORD PTR [rip+0x3bbb]        # 0x140007208
   14000364d:	test   eax,eax
   14000364f:	jne    0x140003518
   140003655:	lea    edi,[rax+0x20]
   140003658:	mov    rcx,rsi
   14000365b:	call   QWORD PTR [rip+0x3bc7]        # 0x140007228
   140003661:	mov    r9d,0x18
   140003667:	lea    rcx,[rbp-0x9]
   14000366b:	xor    r8d,r8d
   14000366e:	xor    edx,edx
   140003670:	call   QWORD PTR [rip+0x3b8a]        # 0x140007200
   140003676:	mov    rsi,rax
   140003679:	cmp    rax,0xffffffffffffffff
   14000367d:	je     0x14000385f
   140003683:	and    DWORD PTR [rbp-0x41],r14d
   140003687:	lea    rax,[rbp+0x7]
   14000368b:	mov    QWORD PTR [rsp+0x20],rax
   140003690:	xor    r9d,r9d
   140003693:	mov    DWORD PTR [rbp+0x7],edi
   140003696:	lea    r8,[rbp-0x9]
   14000369a:	xor    edx,edx
   14000369c:	mov    rcx,rsi
   14000369f:	call   QWORD PTR [rip+0x3b7b]        # 0x140007220
   1400036a5:	test   eax,eax
   1400036a7:	je     0x140003849
   1400036ad:	mov    r9d,0x2001f
   1400036b3:	lea    rdx,[rbp+0x7]
   1400036b7:	xor    r8d,r8d
   1400036ba:	mov    rcx,rsi
   1400036bd:	call   QWORD PTR [rip+0x3b55]        # 0x140007218
   1400036c3:	mov    rdi,rax
   1400036c6:	cmp    rax,0xffffffffffffffff
   1400036ca:	jne    0x1400036ef
   1400036cc:	mov    r9d,0x20019
   1400036d2:	lea    rdx,[rbp+0x7]
   1400036d6:	xor    r8d,r8d
   1400036d9:	mov    rcx,rsi
   1400036dc:	call   QWORD PTR [rip+0x3b36]        # 0x140007218
   1400036e2:	mov    rdi,rax
   1400036e5:	cmp    rax,0xffffffffffffffff
   1400036e9:	je     0x140003830
   1400036ef:	mov    rcx,rdi
   1400036f2:	call   0x1400038f8
   1400036f7:	xor    ecx,ecx
   1400036f9:	test   eax,eax
   1400036fb:	jne    0x14000370b
   1400036fd:	mov    rcx,rdi
   140003700:	call   QWORD PTR [rip+0x392a]        # 0x140007030
   140003706:	jmp    0x140003830
   14000370b:	mov    QWORD PTR [rsp+0x28],rcx
   140003710:	lea    rax,[rbp-0x3d]
   140003714:	mov    DWORD PTR [rbp-0x49],ecx
   140003717:	lea    rdx,[rbp+0x7]
   14000371b:	mov    DWORD PTR [rbp-0x45],ecx
   14000371e:	xor    r9d,r9d
   140003721:	mov    rcx,rsi
   140003724:	mov    QWORD PTR [rsp+0x20],rax
   140003729:	xor    r8d,r8d
   14000372c:	call   QWORD PTR [rip+0x3ade]        # 0x140007210
   140003732:	cmp    DWORD PTR [rbp-0x3d],0x8
   140003736:	jb     0x1400036fd
   140003738:	mov    ecx,DWORD PTR [rbp-0x3d]
   14000373b:	call   0x140005bdc
   140003740:	mov    r12,rax
   140003743:	test   rax,rax
   140003746:	je     0x1400036fd
   140003748:	mov    DWORD PTR [rbp-0x29],0x20
   14000374f:	lea    rdx,[rbp+0x7]
   140003753:	mov    DWORD PTR [rax],0x8
   140003759:	mov    r8,r12
   14000375c:	mov    r9d,DWORD PTR [rbp-0x3d]
   140003760:	lea    rax,[rbp-0x29]
   140003764:	mov    QWORD PTR [rsp+0x28],rax
   140003769:	mov    rcx,rsi
   14000376c:	lea    rax,[rbp-0x3d]
   140003770:	mov    QWORD PTR [rsp+0x20],rax
   140003775:	call   QWORD PTR [rip+0x3a95]        # 0x140007210
   14000377b:	mov    rcx,r12
   14000377e:	test   eax,eax
   140003780:	jne    0x14000378c
   140003782:	call   0x140005bd0
   140003787:	jmp    0x1400036fd
   14000378c:	call   0x140005bd0
   140003791:	mov    r8d,DWORD PTR [rbp-0x15]
   140003795:	lea    rdx,[rbp-0x45]
   140003799:	xor    r9d,r9d
   14000379c:	lea    rcx,[rbp-0x49]
   1400037a0:	call   QWORD PTR [rip+0x389a]        # 0x140007040
   1400037a6:	test   eax,eax
   1400037a8:	jne    0x1400036fd
   1400037ae:	test   BYTE PTR [rbp-0x49],0x8
   1400037b2:	je     0x1400036fd
   1400037b8:	mov    eax,DWORD PTR [rbp-0x39]
   1400037bb:	add    eax,0x18
   1400037be:	mov    DWORD PTR [rbp-0x39],eax
   1400037c1:	cmp    r13d,eax
   1400037c4:	jae    0x14000380e
   1400037c6:	lea    eax,[r13+0x400]
   1400037cd:	mov    ecx,eax
   1400037cf:	mov    DWORD PTR [rbp-0x35],eax
   1400037d2:	mov    QWORD PTR [rbp-0x31],rax
   1400037d6:	call   0x140005bdc
   1400037db:	mov    r12,rax
   1400037de:	test   rax,rax
   1400037e1:	je     0x140003856
   1400037e3:	mov    r8,QWORD PTR [rbp-0x31]
   1400037e7:	xor    edx,edx
   1400037e9:	mov    rcx,rax
   1400037ec:	call   0x14000666c
   1400037f1:	mov    r8d,r13d
   1400037f4:	mov    rdx,rbx
   1400037f7:	mov    rcx,r12
   1400037fa:	call   0x140006660
   1400037ff:	mov    rcx,rbx
   140003802:	call   0x140005bd0
   140003807:	mov    r13d,DWORD PTR [rbp-0x35]
   14000380b:	mov    rbx,r12
   14000380e:	lea    rcx,[r15+r15*2]
   140003812:	inc    r15d
   140003815:	mov    DWORD PTR [rbx+rcx*8+0x8],0x1
   14000381d:	mov    eax,DWORD PTR [rbp-0x45]
   140003820:	mov    DWORD PTR [rbx+rcx*8+0xc],eax
   140003824:	mov    eax,DWORD PTR [rbp-0x49]
   140003827:	mov    DWORD PTR [rbx+rcx*8+0x10],eax
   14000382b:	mov    QWORD PTR [rbx+rcx*8+0x18],rdi
   140003830:	mov    eax,DWORD PTR [rbp-0x41]
   140003833:	lea    rcx,[rbp+0x7]
   140003837:	inc    eax
   140003839:	mov    QWORD PTR [rsp+0x20],rcx
   14000383e:	mov    DWORD PTR [rbp-0x41],eax
   140003841:	mov    r9d,eax
   140003844:	jmp    0x140003696
   140003849:	test   r15d,r15d
   14000384c:	je     0x140003856
   14000384e:	mov    DWORD PTR [rbx],r15d
   140003851:	mov    r14,rbx
   140003854:	xor    ebx,ebx
   140003856:	mov    rcx,rsi
   140003859:	call   QWORD PTR [rip+0x39c9]        # 0x140007228
   14000385f:	test   rbx,rbx
   140003862:	je     0x14000386f
   140003864:	mov    rcx,rbx
   140003867:	mov    DWORD PTR [rbx],r15d
   14000386a:	call   0x1400038a8
   14000386f:	mov    rax,r14
   140003872:	mov    rcx,QWORD PTR [rbp+0x27]
   140003876:	xor    rcx,rsp
   140003879:	call   0x140005fd0
   14000387e:	lea    r11,[rsp+0xb0]
   140003886:	mov    rbx,QWORD PTR [r11+0x30]
   14000388a:	mov    rsi,QWORD PTR [r11+0x38]
   14000388e:	mov    rdi,QWORD PTR [r11+0x40]
   140003892:	mov    rsp,r11
   140003895:	pop    r15
   140003897:	pop    r14
   140003899:	pop    r13
   14000389b:	pop    r12
   14000389d:	pop    rbp
   14000389e:	ret    
   14000389f:	int3   
   1400038a0:	int3   
   1400038a1:	int3   
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	int3   
   1400038a5:	int3   
   1400038a6:	int3   
   1400038a7:	int3   
   1400038a8:	test   rcx,rcx
   1400038ab:	je     0x1400038f1
   1400038ad:	mov    QWORD PTR [rsp+0x8],rbx
   1400038b2:	push   rdi
   1400038b3:	sub    rsp,0x20
   1400038b7:	xor    ebx,ebx
   1400038b9:	mov    rdi,rcx
   1400038bc:	cmp    DWORD PTR [rcx],ebx
   1400038be:	jbe    0x1400038df
   1400038c0:	mov    eax,ebx
   1400038c2:	inc    rax
   1400038c5:	lea    rax,[rax+rax*2]
   1400038c9:	mov    rcx,QWORD PTR [rdi+rax*8]
   1400038cd:	cmp    rcx,0xffffffffffffffff
   1400038d1:	je     0x1400038d9
   1400038d3:	call   QWORD PTR [rip+0x3757]        # 0x140007030
   1400038d9:	inc    ebx
   1400038db:	cmp    ebx,DWORD PTR [rdi]
   1400038dd:	jb     0x1400038c0
   1400038df:	mov    rcx,rdi
   1400038e2:	call   0x140005bd0
   1400038e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038ec:	add    rsp,0x20
   1400038f0:	pop    rdi
   1400038f1:	ret    
   1400038f2:	int3   
   1400038f3:	int3   
   1400038f4:	int3   
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400038fd:	push   rdi
   1400038fe:	sub    rsp,0x260
   140003905:	mov    rax,QWORD PTR [rip+0x66fc]        # 0x14000a008
   14000390c:	xor    rax,rsp
   14000390f:	mov    QWORD PTR [rsp+0x250],rax
   140003917:	mov    rbx,rcx
   14000391a:	mov    r8d,0x208
   140003920:	lea    rcx,[rsp+0x40]
   140003925:	mov    DWORD PTR [rsp+0x30],r8d
   14000392a:	xor    edx,edx
   14000392c:	mov    edi,0x1
   140003931:	call   0x14000666c
   140003936:	lea    rax,[rsp+0x30]
   14000393b:	xor    r9d,r9d
   14000393e:	mov    QWORD PTR [rsp+0x28],rax
   140003943:	lea    rdx,[rip+0x407e]        # 0x1400079c8
   14000394a:	lea    rax,[rsp+0x40]
   14000394f:	xor    r8d,r8d
   140003952:	mov    rcx,rbx
   140003955:	mov    QWORD PTR [rsp+0x20],rax
   14000395a:	call   QWORD PTR [rip+0x36b0]        # 0x140007010
   140003960:	lea    rcx,[rsp+0x40]
   140003965:	call   QWORD PTR [rip+0x3705]        # 0x140007070
   14000396b:	test   eax,eax
   14000396d:	je     0x140003999
   14000396f:	or     r9d,0xffffffff
   140003973:	lea    rax,[rip+0x4066]        # 0x1400079e0
   14000397a:	mov    DWORD PTR [rsp+0x28],r9d
   14000397f:	lea    r8,[rsp+0x40]
   140003984:	mov    edx,edi
   140003986:	mov    QWORD PTR [rsp+0x20],rax
   14000398b:	lea    ecx,[rdi+0x7e]
   14000398e:	call   QWORD PTR [rip+0x370c]        # 0x1400070a0
   140003994:	cmp    eax,0x2
   140003997:	je     0x14000399b
   140003999:	xor    edi,edi
   14000399b:	mov    eax,edi
   14000399d:	mov    rcx,QWORD PTR [rsp+0x250]
   1400039a5:	xor    rcx,rsp
   1400039a8:	call   0x140005fd0
   1400039ad:	mov    rbx,QWORD PTR [rsp+0x278]
   1400039b5:	add    rsp,0x260
   1400039bc:	pop    rdi
   1400039bd:	ret    
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	int3   
   1400039c1:	int3   
   1400039c2:	int3   
   1400039c3:	int3   
   1400039c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400039c9:	push   rbp
   1400039ca:	push   rsi
   1400039cb:	push   rdi
   1400039cc:	push   r14
   1400039ce:	push   r15
   1400039d0:	sub    rsp,0x190
   1400039d7:	mov    rax,QWORD PTR [rip+0x662a]        # 0x14000a008
   1400039de:	xor    rax,rsp
   1400039e1:	mov    QWORD PTR [rsp+0x180],rax
   1400039e9:	xor    r15d,r15d
   1400039ec:	mov    r14,r8
   1400039ef:	mov    QWORD PTR [r8],r15
   1400039f2:	mov    rbp,rcx
   1400039f5:	mov    esi,0x8007007b
   1400039fa:	call   0x140003440
   1400039ff:	mov    rbx,rax
   140003a02:	test   rax,rax
   140003a05:	je     0x140003b14
   140003a0b:	mov    edi,r15d
   140003a0e:	cmp    DWORD PTR [rax],r15d
   140003a11:	jbe    0x140003b2c
   140003a17:	mov    DWORD PTR [rsp+0x30],0x100
   140003a1f:	lea    rdx,[rip+0x3fd2]        # 0x1400079f8
   140003a26:	mov    WORD PTR [rsp+0x80],r15w
   140003a2f:	xor    r9d,r9d
   140003a32:	mov    eax,edi
   140003a34:	xor    r8d,r8d
   140003a37:	inc    rax
   140003a3a:	lea    rcx,[rax+rax*2]
   140003a3e:	mov    rcx,QWORD PTR [rbx+rcx*8]
   140003a42:	lea    rax,[rsp+0x30]
   140003a47:	mov    QWORD PTR [rsp+0x28],rax
   140003a4c:	lea    rax,[rsp+0x80]
   140003a54:	mov    QWORD PTR [rsp+0x20],rax
   140003a59:	call   QWORD PTR [rip+0x35b1]        # 0x140007010
   140003a5f:	test   eax,eax
   140003a61:	jne    0x140003a78
   140003a63:	mov    rdx,rbp
   140003a66:	lea    rcx,[rsp+0x80]
   140003a6e:	call   QWORD PTR [rip+0x3634]        # 0x1400070a8
   140003a74:	test   eax,eax
   140003a76:	je     0x140003a84
   140003a78:	inc    edi
   140003a7a:	cmp    edi,DWORD PTR [rbx]
   140003a7c:	jae    0x140003b2c
   140003a82:	jmp    0x140003a17
   140003a84:	mov    eax,edi
   140003a86:	or     rbp,0xffffffffffffffff
   140003a8a:	inc    rax
   140003a8d:	lea    rcx,[rax+rax*2]
   140003a91:	mov    rdi,QWORD PTR [rbx+rcx*8]
   140003a95:	mov    QWORD PTR [rbx+rcx*8],rbp
   140003a99:	cmp    rdi,rbp
   140003a9c:	je     0x140003b2c
   140003aa2:	lea    rax,[rsp+0x30]
   140003aa7:	mov    DWORD PTR [rsp+0x30],0x40
   140003aaf:	mov    QWORD PTR [rsp+0x28],rax
   140003ab4:	lea    rdx,[rip+0x3f0d]        # 0x1400079c8
   140003abb:	lea    rax,[rsp+0x40]
   140003ac0:	xor    r9d,r9d
   140003ac3:	xor    r8d,r8d
   140003ac6:	mov    QWORD PTR [rsp+0x20],rax
   140003acb:	mov    rcx,rdi
   140003ace:	call   QWORD PTR [rip+0x353c]        # 0x140007010
   140003ad4:	test   eax,eax
   140003ad6:	jne    0x140003b09
   140003ad8:	lea    edx,[rbp+0x2]
   140003adb:	mov    DWORD PTR [rsp+0x28],ebp
   140003adf:	lea    rax,[rip+0x3efa]        # 0x1400079e0
   140003ae6:	mov    r9d,ebp
   140003ae9:	lea    ecx,[rdx+0x7e]
   140003aec:	mov    QWORD PTR [rsp+0x20],rax
   140003af1:	lea    r8,[rsp+0x40]
   140003af6:	call   QWORD PTR [rip+0x35a4]        # 0x1400070a0
   140003afc:	cmp    eax,0x2
   140003aff:	jne    0x140003b09
   140003b01:	mov    QWORD PTR [r14],rdi
   140003b04:	mov    esi,r15d
   140003b07:	jmp    0x140003b2c
   140003b09:	mov    rcx,rdi
   140003b0c:	call   QWORD PTR [rip+0x351e]        # 0x140007030
   140003b12:	jmp    0x140003b2c
   140003b14:	mov    rcx,QWORD PTR [rip+0x6505]        # 0x14000a020
   140003b1b:	lea    r8,[rip+0x3eee]        # 0x140007a10
   140003b22:	mov    edx,0x4
   140003b27:	call   0x140005608
   140003b2c:	test   rbx,rbx
   140003b2f:	je     0x140003b39
   140003b31:	mov    rcx,rbx
   140003b34:	call   0x1400038a8
   140003b39:	mov    eax,esi
   140003b3b:	mov    rcx,QWORD PTR [rsp+0x180]
   140003b43:	xor    rcx,rsp
   140003b46:	call   0x140005fd0
   140003b4b:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140003b53:	add    rsp,0x190
   140003b5a:	pop    r15
   140003b5c:	pop    r14
   140003b5e:	pop    rdi
   140003b5f:	pop    rsi
   140003b60:	pop    rbp
   140003b61:	ret    
   140003b62:	int3   
   140003b63:	int3   
   140003b64:	int3   
   140003b65:	int3   
   140003b66:	int3   
   140003b67:	int3   
   140003b68:	mov    QWORD PTR [rsp+0x18],rbx
   140003b6d:	push   rbp
   140003b6e:	push   rsi
   140003b6f:	push   rdi
   140003b70:	push   r12
   140003b72:	push   r13
   140003b74:	push   r14
   140003b76:	push   r15
   140003b78:	lea    rbp,[rsp-0x280]
   140003b80:	sub    rsp,0x380
   140003b87:	mov    rax,QWORD PTR [rip+0x647a]        # 0x14000a008
   140003b8e:	xor    rax,rsp
   140003b91:	mov    QWORD PTR [rbp+0x270],rax
   140003b98:	mov    r12,QWORD PTR [rbp+0x2e0]
   140003b9f:	xor    eax,eax
   140003ba1:	and    QWORD PTR [r9],rax
   140003ba4:	mov    r13,rdx
   140003ba7:	and    DWORD PTR [rsp+0x50],0x0
   140003bac:	lea    rdx,[rsp+0x50]
   140003bb1:	mov    r15,r9
   140003bb4:	mov    QWORD PTR [rsp+0x54],rax
   140003bb9:	and    QWORD PTR [r12],rax
   140003bbd:	mov    rbx,rcx
   140003bc0:	mov    DWORD PTR [rsp+0x5c],eax
   140003bc4:	call   QWORD PTR [rip+0x3786]        # 0x140007350
   140003bca:	test   eax,eax
   140003bcc:	js     0x140003e05
   140003bd2:	mov    r9,rbx
   140003bd5:	lea    r8,[rip+0x3e7c]        # 0x140007a58
   140003bdc:	mov    edx,0x9e
   140003be1:	lea    rcx,[rbp-0x40]
   140003be5:	call   0x1400030f4
   140003bea:	test   eax,eax
   140003bec:	js     0x140003dfc
   140003bf2:	lea    rax,[rsp+0x38]
   140003bf7:	mov    edi,0x1
   140003bfc:	mov    r9d,edi
   140003bff:	mov    QWORD PTR [rsp+0x20],rax
   140003c04:	xor    r8d,r8d
   140003c07:	lea    rdx,[rbp-0x40]
   140003c0b:	mov    rcx,0xffffffff80000000
   140003c12:	call   QWORD PTR [rip+0x33e8]        # 0x140007000
   140003c18:	test   eax,eax
   140003c1a:	jne    0x140003df3
   140003c20:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c25:	lea    r9,[rsp+0x34]
   140003c2a:	lea    r8,[rbp+0x60]
   140003c2e:	mov    DWORD PTR [rsp+0x34],0x208
   140003c36:	xor    edx,edx
   140003c38:	call   QWORD PTR [rip+0x33e2]        # 0x140007020
   140003c3e:	test   eax,eax
   140003c40:	jne    0x140003dc9
   140003c46:	xor    edx,edx
   140003c48:	lea    r8d,[rdi+0x53]
   140003c4c:	lea    rcx,[rsp+0x60]
   140003c51:	call   0x14000666c
   140003c56:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c5b:	lea    rax,[rsp+0x30]
   140003c60:	mov    QWORD PTR [rsp+0x28],rax
   140003c65:	lea    r9,[rsp+0x48]
   140003c6a:	lea    rax,[rsp+0x60]
   140003c6f:	mov    DWORD PTR [rsp+0x30],0x52
   140003c77:	xor    r8d,r8d
   140003c7a:	mov    QWORD PTR [rsp+0x20],rax
   140003c7f:	lea    rdx,[rip+0x3e02]        # 0x140007a88
   140003c86:	call   QWORD PTR [rip+0x3384]        # 0x140007010
   140003c8c:	or     ebx,0xffffffff
   140003c8f:	lea    esi,[rdi+0x7e]
   140003c92:	test   eax,eax
   140003c94:	jne    0x140003cbd
   140003c96:	lea    rax,[rip+0x3e0b]        # 0x140007aa8
   140003c9d:	mov    DWORD PTR [rsp+0x28],ebx
   140003ca1:	mov    r9d,ebx
   140003ca4:	mov    QWORD PTR [rsp+0x20],rax
   140003ca9:	lea    r8,[rsp+0x60]
   140003cae:	mov    edx,edi
   140003cb0:	mov    ecx,esi
   140003cb2:	call   QWORD PTR [rip+0x33e8]        # 0x1400070a0
   140003cb8:	cmp    eax,0x2
   140003cbb:	jne    0x140003ce8
   140003cbd:	lea    rax,[rip+0x3df4]        # 0x140007ab8
   140003cc4:	mov    DWORD PTR [rsp+0x28],ebx
   140003cc8:	mov    r9d,ebx
   140003ccb:	mov    QWORD PTR [rsp+0x20],rax
   140003cd0:	lea    r8,[rsp+0x60]
   140003cd5:	mov    edx,edi
   140003cd7:	mov    ecx,esi
   140003cd9:	call   QWORD PTR [rip+0x33c1]        # 0x1400070a0
   140003cdf:	cmp    eax,0x2
   140003ce2:	je     0x140003dc0
   140003ce8:	lea    rcx,[rbp+0x60]
   140003cec:	call   QWORD PTR [rip+0x33de]        # 0x1400070d0
   140003cf2:	mov    r14,rax
   140003cf5:	test   rax,rax
   140003cf8:	je     0x140003db7
   140003cfe:	lea    rdx,[rip+0x3dc3]        # 0x140007ac8
   140003d05:	mov    rcx,rax
   140003d08:	call   QWORD PTR [rip+0x334a]        # 0x140007058
   140003d0e:	mov    rbx,rax
   140003d11:	test   rax,rax
   140003d14:	je     0x140003d85
   140003d16:	mov    rcx,rax
   140003d19:	call   QWORD PTR [rip+0x3679]        # 0x140007398
   140003d1f:	lea    r8,[rsp+0x40]
   140003d24:	lea    rdx,[rip+0x4715]        # 0x140008440
   140003d2b:	lea    rcx,[rsp+0x50]
   140003d30:	call   rbx
   140003d32:	mov    esi,eax
   140003d34:	test   eax,eax
   140003d36:	js     0x140003dac
   140003d38:	mov    rdi,QWORD PTR [rsp+0x40]
   140003d3d:	mov    rax,QWORD PTR [rdi]
   140003d40:	mov    rbx,QWORD PTR [rax+0x18]
   140003d44:	mov    rcx,rbx
   140003d47:	call   QWORD PTR [rip+0x364b]        # 0x140007398
   140003d4d:	mov    r9,r15
   140003d50:	lea    r8,[rip+0x46f9]        # 0x140008450
   140003d57:	mov    rdx,r13
   140003d5a:	mov    rcx,rdi
   140003d5d:	call   rbx
   140003d5f:	mov    rdi,QWORD PTR [rsp+0x40]
   140003d64:	mov    esi,eax
   140003d66:	mov    rax,QWORD PTR [rdi]
   140003d69:	mov    rbx,QWORD PTR [rax+0x10]
   140003d6d:	mov    rcx,rbx
   140003d70:	call   QWORD PTR [rip+0x3622]        # 0x140007398
   140003d76:	mov    rcx,rdi
   140003d79:	call   rbx
   140003d7b:	test   esi,esi
   140003d7d:	jns    0x140003da6
   140003d7f:	and    QWORD PTR [r15],0x0
   140003d83:	jmp    0x140003da2
   140003d85:	mov    rcx,QWORD PTR [rip+0x6294]        # 0x14000a020
   140003d8c:	lea    r8,[rip+0x3d4d]        # 0x140007ae0
   140003d93:	mov    edx,0x4
   140003d98:	call   0x140005608
   140003d9d:	mov    esi,0x80040154
   140003da2:	test   esi,esi
   140003da4:	js     0x140003dac
   140003da6:	mov    QWORD PTR [r12],r14
   140003daa:	jmp    0x140003de6
   140003dac:	mov    rcx,r14
   140003daf:	call   QWORD PTR [rip+0x33d3]        # 0x140007188
   140003db5:	jmp    0x140003de6
   140003db7:	lea    r8,[rip+0x3d92]        # 0x140007b50
   140003dbe:	jmp    0x140003dd0
   140003dc0:	lea    r8,[rip+0x3dd9]        # 0x140007ba0
   140003dc7:	jmp    0x140003dd0
   140003dc9:	lea    r8,[rip+0x3e50]        # 0x140007c20
   140003dd0:	mov    rcx,QWORD PTR [rip+0x6249]        # 0x14000a020
   140003dd7:	mov    edx,0x4
   140003ddc:	call   0x140005608
   140003de1:	mov    esi,0x80040154
   140003de6:	mov    rcx,QWORD PTR [rsp+0x38]
   140003deb:	call   QWORD PTR [rip+0x323f]        # 0x140007030
   140003df1:	jmp    0x140003e22
   140003df3:	lea    r8,[rip+0x3e76]        # 0x140007c70
   140003dfa:	jmp    0x140003e0c
   140003dfc:	lea    r8,[rip+0x3ec5]        # 0x140007cc8
   140003e03:	jmp    0x140003e0c
   140003e05:	lea    r8,[rip+0x3ef4]        # 0x140007d00
   140003e0c:	mov    rcx,QWORD PTR [rip+0x620d]        # 0x14000a020
   140003e13:	mov    edx,0x4
   140003e18:	call   0x140005608
   140003e1d:	mov    esi,0x80040154
   140003e22:	mov    eax,esi
   140003e24:	mov    rcx,QWORD PTR [rbp+0x270]
   140003e2b:	xor    rcx,rsp
   140003e2e:	call   0x140005fd0
   140003e33:	mov    rbx,QWORD PTR [rsp+0x3d0]
   140003e3b:	add    rsp,0x380
   140003e42:	pop    r15
   140003e44:	pop    r14
   140003e46:	pop    r13
   140003e48:	pop    r12
   140003e4a:	pop    rdi
   140003e4b:	pop    rsi
   140003e4c:	pop    rbp
   140003e4d:	ret    
   140003e4e:	int3   
   140003e4f:	int3   
   140003e50:	int3   
   140003e51:	int3   
   140003e52:	int3   
   140003e53:	int3   
   140003e54:	mov    rax,rsp
   140003e57:	mov    QWORD PTR [rax+0x20],r9
   140003e5b:	mov    QWORD PTR [rax+0x18],r8
   140003e5f:	mov    QWORD PTR [rax+0x10],rdx
   140003e63:	push   rbx
   140003e64:	push   rsi
   140003e65:	push   rdi
   140003e66:	push   r12
   140003e68:	push   r13
   140003e6a:	push   r14
   140003e6c:	push   r15
   140003e6e:	sub    rsp,0x50
   140003e72:	mov    r15,r8
   140003e75:	mov    r13,rcx
   140003e78:	xor    r14d,r14d
   140003e7b:	mov    QWORD PTR [rax-0x50],r14
   140003e7f:	lea    r8,[rip+0x3eda]        # 0x140007d60
   140003e86:	lea    edx,[r14+0x1]
   140003e8a:	mov    rcx,QWORD PTR [rip+0x618f]        # 0x14000a020
   140003e91:	call   0x140005608
   140003e96:	mov    QWORD PTR [rsp+0x40],r14
   140003e9b:	lea    r8,[rsp+0x40]
   140003ea0:	lea    rdx,[rip+0x3f31]        # 0x140007dd8
   140003ea7:	mov    rcx,r13
   140003eaa:	call   0x140003364
   140003eaf:	mov    esi,eax
   140003eb1:	test   eax,eax
   140003eb3:	js     0x140003ef4
   140003eb5:	mov    rbx,QWORD PTR [rsp+0x40]
   140003eba:	test   rbx,rbx
   140003ebd:	je     0x140003ee9
   140003ebf:	cmp    WORD PTR [rbx],r14w
   140003ec3:	je     0x140003ee9
   140003ec5:	mov    rax,QWORD PTR [rsp+0xb8]
   140003ecd:	mov    QWORD PTR [rsp+0x20],rax
   140003ed2:	mov    r9,QWORD PTR [rsp+0xb0]
   140003eda:	mov    rdx,r15
   140003edd:	mov    rcx,rbx
   140003ee0:	call   0x140003b68
   140003ee5:	mov    esi,eax
   140003ee7:	jmp    0x140003f11
   140003ee9:	mov    r12d,0x80004005
   140003eef:	mov    esi,r12d
   140003ef2:	jmp    0x140003f17
   140003ef4:	lea    r8,[rip+0x3ef5]        # 0x140007df0
   140003efb:	mov    edx,0x4
   140003f00:	mov    rcx,QWORD PTR [rip+0x6119]        # 0x14000a020
   140003f07:	call   0x140005608
   140003f0c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f11:	mov    r12d,0x80004005
   140003f17:	test   rbx,rbx
   140003f1a:	je     0x140003f25
   140003f1c:	mov    rcx,rbx
   140003f1f:	call   QWORD PTR [rip+0x3143]        # 0x140007068
   140003f25:	test   esi,esi
   140003f27:	js     0x14000409f
   140003f2d:	mov    rax,QWORD PTR [rsp+0xb0]
   140003f35:	mov    rdi,QWORD PTR [rax]
   140003f38:	mov    rax,QWORD PTR [rdi]
   140003f3b:	mov    rbx,QWORD PTR [rax]
   140003f3e:	mov    rcx,rbx
   140003f41:	call   QWORD PTR [rip+0x3451]        # 0x140007398
   140003f47:	lea    r8,[rsp+0x38]
   140003f4c:	lea    rdx,[rip+0x35c5]        # 0x140007518
   140003f53:	mov    rcx,rdi
   140003f56:	call   rbx
   140003f58:	mov    esi,eax
   140003f5a:	test   eax,eax
   140003f5c:	js     0x140003f67
   140003f5e:	cmp    QWORD PTR [rsp+0x38],r14
   140003f63:	cmove  esi,r12d
   140003f67:	test   esi,esi
   140003f69:	js     0x1400040b7
   140003f6f:	lea    r8,[rip+0x3f4a]        # 0x140007ec0
   140003f76:	mov    edx,0x1
   140003f7b:	mov    rcx,QWORD PTR [rip+0x609e]        # 0x14000a020
   140003f82:	call   0x140005608
   140003f87:	nop
   140003f88:	mov    rdi,QWORD PTR [rsp+0x38]
   140003f8d:	mov    rax,QWORD PTR [rdi]
   140003f90:	mov    rbx,QWORD PTR [rax+0x18]
   140003f94:	mov    rcx,rbx
   140003f97:	call   QWORD PTR [rip+0x33fb]        # 0x140007398
   140003f9d:	mov    r9,r13
   140003fa0:	mov    r8d,0x2
   140003fa6:	mov    rdx,QWORD PTR [rsp+0x98]
   140003fae:	mov    rcx,rdi
   140003fb1:	call   rbx
   140003fb3:	mov    esi,eax
   140003fb5:	mov    DWORD PTR [rsp+0x30],eax
   140003fb9:	jmp    0x140003fc9
   140003fbb:	mov    esi,eax
   140003fbd:	mov    DWORD PTR [rsp+0x30],eax
   140003fc1:	mov    r15,QWORD PTR [rsp+0xa0]
   140003fc9:	test   esi,esi
   140003fcb:	js     0x140004068
   140003fd1:	mov    rdi,QWORD PTR [rsp+0x38]
   140003fd6:	mov    rax,QWORD PTR [rdi]
   140003fd9:	mov    rbx,QWORD PTR [rax+0x20]
   140003fdd:	mov    rcx,rbx
   140003fe0:	call   QWORD PTR [rip+0x33b2]        # 0x140007398
   140003fe6:	mov    r12,QWORD PTR [rsp+0xc0]
   140003fee:	mov    rdx,r12
   140003ff1:	mov    rcx,rdi
   140003ff4:	call   rbx
   140003ff6:	mov    DWORD PTR [rsp+0x34],eax
   140003ffa:	jmp    0x140004014
   140003ffc:	mov    DWORD PTR [rsp+0x34],eax
   140004000:	mov    r12,QWORD PTR [rsp+0xc0]
   140004008:	mov    r15,QWORD PTR [rsp+0xa0]
   140004010:	mov    esi,DWORD PTR [rsp+0x30]
   140004014:	test   eax,eax
   140004016:	js     0x140004049
   140004018:	cmp    DWORD PTR [r12],0x2
   14000401d:	jb     0x140004049
   14000401f:	mov    rcx,QWORD PTR [rsp+0xa8]
   140004027:	mov    rax,QWORD PTR [rsp+0x38]
   14000402c:	mov    QWORD PTR [rcx],rax
   14000402f:	lea    r8,[rip+0x3efa]        # 0x140007f30
   140004036:	mov    edx,0x1
   14000403b:	mov    rcx,QWORD PTR [rip+0x5fde]        # 0x14000a020
   140004042:	call   0x140005608
   140004047:	jmp    0x140004083
   140004049:	lea    r8,[rip+0x3f30]        # 0x140007f80
   140004050:	mov    edx,0x4
   140004055:	mov    rcx,QWORD PTR [rip+0x5fc4]        # 0x14000a020
   14000405c:	call   0x140005608
   140004061:	mov    esi,0x8007047e
   140004066:	jmp    0x140004083
   140004068:	mov    r9d,esi
   14000406b:	lea    r8,[rip+0x3fce]        # 0x140008040
   140004072:	mov    edx,0x4
   140004077:	mov    rcx,QWORD PTR [rip+0x5fa2]        # 0x14000a020
   14000407e:	call   0x140005608
   140004083:	test   r15,r15
   140004086:	je     0x1400040b7
   140004088:	mov    rax,QWORD PTR [r15]
   14000408b:	mov    rbx,QWORD PTR [rax+0x10]
   14000408f:	mov    rcx,rbx
   140004092:	call   QWORD PTR [rip+0x3300]        # 0x140007398
   140004098:	mov    rcx,r15
   14000409b:	call   rbx
   14000409d:	jmp    0x1400040b7
   14000409f:	lea    r8,[rip+0x401a]        # 0x1400080c0
   1400040a6:	mov    edx,0x4
   1400040ab:	mov    rcx,QWORD PTR [rip+0x5f6e]        # 0x14000a020
   1400040b2:	call   0x140005608
   1400040b7:	mov    eax,esi
   1400040b9:	add    rsp,0x50
   1400040bd:	pop    r15
   1400040bf:	pop    r14
   1400040c1:	pop    r13
   1400040c3:	pop    r12
   1400040c5:	pop    rdi
   1400040c6:	pop    rsi
   1400040c7:	pop    rbx
   1400040c8:	ret    
   1400040c9:	int3   
   1400040ca:	int3   
   1400040cb:	int3   
   1400040cc:	int3   
   1400040cd:	int3   
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400040da:	mov    QWORD PTR [rsp+0x18],rsi
   1400040df:	push   rdi
   1400040e0:	push   r14
   1400040e2:	push   r15
   1400040e4:	sub    rsp,0x30
   1400040e8:	xor    r15d,r15d
   1400040eb:	mov    rbp,r8
   1400040ee:	mov    r14d,edx
   1400040f1:	mov    esi,ecx
   1400040f3:	test   r8,r8
   1400040f6:	je     0x1400041d2
   1400040fc:	cmp    WORD PTR [r8],r15w
   140004100:	je     0x1400041d2
   140004106:	mov    rdi,QWORD PTR [rsp+0x70]
   14000410b:	test   rdi,rdi
   14000410e:	je     0x1400041d2
   140004114:	test   ecx,ecx
   140004116:	je     0x1400041d2
   14000411c:	cmp    ecx,0x2
   14000411f:	jbe    0x140004170
   140004121:	cmp    ecx,0x3
   140004124:	jne    0x1400041d2
   14000412a:	mov    ecx,0x228
   14000412f:	call   0x140005bdc
   140004134:	test   rax,rax
   140004137:	je     0x14000415e
   140004139:	lea    rcx,[rip+0x3548]        # 0x140007688
   140004140:	mov    DWORD PTR [rax+0x8],0x1
   140004147:	mov    QWORD PTR [rax],rcx
   14000414a:	or     rcx,0xffffffffffffffff
   14000414e:	mov    QWORD PTR [rax+0x220],rcx
   140004155:	mov    DWORD PTR [rax+0x21c],r15d
   14000415c:	jmp    0x140004161
   14000415e:	mov    rax,r15
   140004161:	mov    QWORD PTR [rdi],rax
   140004164:	test   rax,rax
   140004167:	jne    0x1400041ab
   140004169:	mov    eax,0x8007000e
   14000416e:	jmp    0x1400041d7
   140004170:	mov    ecx,0x230
   140004175:	call   0x140005bdc
   14000417a:	test   rax,rax
   14000417d:	je     0x14000415e
   14000417f:	lea    rcx,[rip+0x3572]        # 0x1400076f8
   140004186:	mov    DWORD PTR [rax+0x8],0x1
   14000418d:	mov    QWORD PTR [rax],rcx
   140004190:	or     rcx,0xffffffffffffffff
   140004194:	mov    QWORD PTR [rax+0x220],rcx
   14000419b:	mov    QWORD PTR [rax+0x228],rcx
   1400041a2:	mov    DWORD PTR [rax+0x21c],r15d
   1400041a9:	jmp    0x140004161
   1400041ab:	mov    rdi,QWORD PTR [rdi]
   1400041ae:	mov    rax,QWORD PTR [rdi]
   1400041b1:	mov    rbx,QWORD PTR [rax+0x18]
   1400041b5:	mov    rcx,rbx
   1400041b8:	call   QWORD PTR [rip+0x31da]        # 0x140007398
   1400041be:	mov    r9,rbp
   1400041c1:	mov    DWORD PTR [rsp+0x20],r15d
   1400041c6:	mov    r8d,r14d
   1400041c9:	mov    edx,esi
   1400041cb:	mov    rcx,rdi
   1400041ce:	call   rbx
   1400041d0:	jmp    0x1400041d7
   1400041d2:	mov    eax,0x80070057
   1400041d7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400041dc:	mov    rbp,QWORD PTR [rsp+0x58]
   1400041e1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400041e6:	add    rsp,0x30
   1400041ea:	pop    r15
   1400041ec:	pop    r14
   1400041ee:	pop    rdi
   1400041ef:	ret    
   1400041f0:	int3   
   1400041f1:	int3   
   1400041f2:	int3   
   1400041f3:	int3   
   1400041f4:	int3   
   1400041f5:	int3   
   1400041f6:	int3   
   1400041f7:	int3   
   1400041f8:	int3   
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	int3   
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	mov    QWORD PTR [rsp+0x8],rbx
   140004205:	mov    QWORD PTR [rsp+0x10],rsi
   14000420a:	push   rdi
   14000420b:	sub    rsp,0x30
   14000420f:	xor    edi,edi
   140004211:	mov    rsi,rcx
   140004214:	test   rdx,rdx
   140004217:	je     0x140004258
   140004219:	test   r8,r8
   14000421c:	je     0x140004258
   14000421e:	mov    rcx,QWORD PTR [rcx+0x220]
   140004225:	mov    QWORD PTR [rsp+0x20],r9
   14000422a:	mov    r9,r8
   14000422d:	mov    r8d,DWORD PTR [r8]
   140004230:	call   QWORD PTR [rip+0x2e7a]        # 0x1400070b0
   140004236:	mov    ebx,eax
   140004238:	call   QWORD PTR [rip+0x2e12]        # 0x140007050
   14000423e:	mov    DWORD PTR [rsi+0x21c],eax
   140004244:	test   ebx,ebx
   140004246:	jne    0x14000425d
   140004248:	movzx  edi,ax
   14000424b:	or     edi,0x80070000
   140004251:	test   eax,eax
   140004253:	cmovle edi,eax
   140004256:	jmp    0x14000425d
   140004258:	mov    edi,0x80070057
   14000425d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004262:	mov    eax,edi
   140004264:	mov    rsi,QWORD PTR [rsp+0x48]
   140004269:	add    rsp,0x30
   14000426d:	pop    rdi
   14000426e:	ret    
   14000426f:	int3   
   140004270:	int3   
   140004271:	int3   
   140004272:	int3   
   140004273:	int3   
   140004274:	int3   
   140004275:	int3   
   140004276:	int3   
   140004277:	int3   
   140004278:	int3   
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	mov    QWORD PTR [rsp+0x8],rbx
   140004285:	push   rdi
   140004286:	sub    rsp,0x30
   14000428a:	and    DWORD PTR [rsp+0x48],0x0
   14000428f:	mov    rax,rdx
   140004292:	neg    rax
   140004295:	mov    rdi,rcx
   140004298:	sbb    eax,eax
   14000429a:	not    eax
   14000429c:	and    eax,0x80070057
   1400042a1:	jl     0x1400042df
   1400042a3:	mov    rcx,QWORD PTR [rcx+0x220]
   1400042aa:	mov    QWORD PTR [rsp+0x20],r9
   1400042af:	lea    r9,[rsp+0x48]
   1400042b4:	call   QWORD PTR [rip+0x2dfe]        # 0x1400070b8
   1400042ba:	mov    ebx,eax
   1400042bc:	call   QWORD PTR [rip+0x2d8e]        # 0x140007050
   1400042c2:	mov    DWORD PTR [rdi+0x21c],eax
   1400042c8:	mov    ecx,eax
   1400042ca:	test   ebx,ebx
   1400042cc:	je     0x1400042d2
   1400042ce:	xor    eax,eax
   1400042d0:	jmp    0x1400042df
   1400042d2:	movzx  eax,ax
   1400042d5:	or     eax,0x80070000
   1400042da:	test   ecx,ecx
   1400042dc:	cmovle eax,ecx
   1400042df:	mov    rbx,QWORD PTR [rsp+0x40]
   1400042e4:	add    rsp,0x30
   1400042e8:	pop    rdi
   1400042e9:	ret    
   1400042ea:	int3   
   1400042eb:	int3   
   1400042ec:	int3   
   1400042ed:	int3   
   1400042ee:	int3   
   1400042ef:	int3   
   1400042f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400042fa:	push   rdi
   1400042fb:	sub    rsp,0x30
   1400042ff:	xor    edi,edi
   140004301:	mov    rsi,rcx
   140004304:	test   rdx,rdx
   140004307:	je     0x140004348
   140004309:	test   r8,r8
   14000430c:	je     0x140004348
   14000430e:	mov    rcx,QWORD PTR [rcx+0x228]
   140004315:	mov    QWORD PTR [rsp+0x20],r9
   14000431a:	mov    r9,r8
   14000431d:	mov    r8d,DWORD PTR [r8]
   140004320:	call   QWORD PTR [rip+0x2d8a]        # 0x1400070b0
   140004326:	mov    ebx,eax
   140004328:	call   QWORD PTR [rip+0x2d22]        # 0x140007050
   14000432e:	mov    DWORD PTR [rsi+0x21c],eax
   140004334:	test   ebx,ebx
   140004336:	jne    0x14000434d
   140004338:	movzx  edi,ax
   14000433b:	or     edi,0x80070000
   140004341:	test   eax,eax
   140004343:	cmovle edi,eax
   140004346:	jmp    0x14000434d
   140004348:	mov    edi,0x80070057
   14000434d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004352:	mov    eax,edi
   140004354:	mov    rsi,QWORD PTR [rsp+0x48]
   140004359:	add    rsp,0x30
   14000435d:	pop    rdi
   14000435e:	ret    
   14000435f:	int3   
   140004360:	int3   
   140004361:	int3   
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    QWORD PTR [rsp+0x8],rbx
   140004375:	push   rdi
   140004376:	sub    rsp,0x30
   14000437a:	and    DWORD PTR [rsp+0x48],0x0
   14000437f:	mov    rax,rdx
   140004382:	neg    rax
   140004385:	mov    rdi,rcx
   140004388:	sbb    eax,eax
   14000438a:	not    eax
   14000438c:	and    eax,0x80070057
   140004391:	jl     0x1400043cf
   140004393:	mov    rcx,QWORD PTR [rcx+0x228]
   14000439a:	mov    QWORD PTR [rsp+0x20],r9
   14000439f:	lea    r9,[rsp+0x48]
   1400043a4:	call   QWORD PTR [rip+0x2d0e]        # 0x1400070b8
   1400043aa:	mov    ebx,eax
   1400043ac:	call   QWORD PTR [rip+0x2c9e]        # 0x140007050
   1400043b2:	mov    DWORD PTR [rdi+0x21c],eax
   1400043b8:	mov    ecx,eax
   1400043ba:	test   ebx,ebx
   1400043bc:	je     0x1400043c2
   1400043be:	xor    eax,eax
   1400043c0:	jmp    0x1400043cf
   1400043c2:	movzx  eax,ax
   1400043c5:	or     eax,0x80070000
   1400043ca:	test   ecx,ecx
   1400043cc:	cmovle eax,ecx
   1400043cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043d4:	add    rsp,0x30
   1400043d8:	pop    rdi
   1400043d9:	ret    
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	mov    rax,rdx
   1400043e3:	neg    rax
   1400043e6:	sbb    eax,eax
   1400043e8:	not    eax
   1400043ea:	and    eax,0x80070057
   1400043ef:	jl     0x1400043fb
   1400043f1:	mov    eax,DWORD PTR [rcx+0x21c]
   1400043f7:	mov    DWORD PTR [rdx],eax
   1400043f9:	xor    eax,eax
   1400043fb:	ret    
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    QWORD PTR [rsp+0x8],rbx
   140004415:	mov    QWORD PTR [rsp+0x10],rsi
   14000441a:	push   rdi
   14000441b:	sub    rsp,0x20
   14000441f:	mov    rax,rdx
   140004422:	mov    edi,r8d
   140004425:	neg    rax
   140004428:	mov    rsi,rdx
   14000442b:	sbb    eax,eax
   14000442d:	not    eax
   14000442f:	and    eax,0x80070057
   140004434:	jl     0x14000445d
   140004436:	lea    rbx,[rcx+0x14]
   14000443a:	mov    rcx,rbx
   14000443d:	call   QWORD PTR [rip+0x2c2d]        # 0x140007070
   140004443:	cmp    edi,eax
   140004445:	jle    0x140004458
   140004447:	mov    edx,edi
   140004449:	mov    r8,rbx
   14000444c:	mov    rcx,rsi
   14000444f:	call   0x140003078
   140004454:	xor    eax,eax
   140004456:	jmp    0x14000445d
   140004458:	mov    eax,0x800700ea
   14000445d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004462:	mov    rsi,QWORD PTR [rsp+0x38]
   140004467:	add    rsp,0x20
   14000446b:	pop    rdi
   14000446c:	ret    
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	int3   
   140004471:	int3   
   140004472:	int3   
   140004473:	int3   
   140004474:	int3   
   140004475:	int3   
   140004476:	int3   
   140004477:	int3   
   140004478:	int3   
   140004479:	int3   
   14000447a:	int3   
   14000447b:	int3   
   14000447c:	int3   
   14000447d:	int3   
   14000447e:	int3   
   14000447f:	int3   
   140004480:	mov    rax,rdx
   140004483:	neg    rax
   140004486:	sbb    eax,eax
   140004488:	not    eax
   14000448a:	and    eax,0x80070057
   14000448f:	jl     0x1400044a9
   140004491:	mov    rax,QWORD PTR [rcx+0x220]
   140004498:	cmp    rax,0xffffffffffffffff
   14000449c:	je     0x1400044a4
   14000449e:	mov    QWORD PTR [rdx],rax
   1400044a1:	xor    eax,eax
   1400044a3:	ret    
   1400044a4:	mov    eax,0x80070006
   1400044a9:	ret    
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	mov    rax,rdx
   1400044b3:	neg    rax
   1400044b6:	sbb    eax,eax
   1400044b8:	not    eax
   1400044ba:	and    eax,0x80070057
   1400044bf:	jl     0x1400044c8
   1400044c1:	mov    eax,DWORD PTR [rcx+0x10]
   1400044c4:	mov    DWORD PTR [rdx],eax
   1400044c6:	xor    eax,eax
   1400044c8:	ret    
   1400044c9:	int3   
   1400044ca:	int3   
   1400044cb:	int3   
   1400044cc:	int3   
   1400044cd:	int3   
   1400044ce:	int3   
   1400044cf:	int3   
   1400044d0:	mov    eax,0x80004001
   1400044d5:	ret    
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	rex push rbx
   1400044e2:	sub    rsp,0x20
   1400044e6:	mov    rax,r8
   1400044e9:	neg    rax
   1400044ec:	sbb    ebx,ebx
   1400044ee:	not    ebx
   1400044f0:	and    ebx,0x80070057
   1400044f6:	jl     0x140004504
   1400044f8:	mov    rcx,QWORD PTR [rip+0x5b21]        # 0x14000a020
   1400044ff:	call   0x140005608
   140004504:	mov    eax,ebx
   140004506:	add    rsp,0x20
   14000450a:	pop    rbx
   14000450b:	ret    
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	int3   
   140004511:	int3   
   140004512:	int3   
   140004513:	int3   
   140004514:	int3   
   140004515:	int3   
   140004516:	int3   
   140004517:	int3   
   140004518:	int3   
   140004519:	int3   
   14000451a:	int3   
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    QWORD PTR [rsp+0x10],rbx
   140004525:	mov    QWORD PTR [rsp+0x18],rbp
   14000452a:	mov    QWORD PTR [rsp+0x20],rsi
   14000452f:	push   rdi
   140004530:	push   r14
   140004532:	push   r15
   140004534:	sub    rsp,0x260
   14000453b:	mov    rax,QWORD PTR [rip+0x5ac6]        # 0x14000a008
   140004542:	xor    rax,rsp
   140004545:	mov    QWORD PTR [rsp+0x250],rax
   14000454d:	mov    esi,r8d
   140004550:	mov    ebx,edx
   140004552:	mov    r14,rcx
   140004555:	xor    r15d,r15d
   140004558:	xor    edx,edx
   14000455a:	mov    WORD PTR [rsp+0x40],r15w
   140004560:	mov    r8d,0x206
   140004566:	lea    rcx,[rsp+0x42]
   14000456b:	mov    ebp,r15d
   14000456e:	mov    rdi,r9
   140004571:	call   0x14000666c
   140004576:	mov    DWORD PTR [r14+0xc],ebx
   14000457a:	mov    r8,rdi
   14000457d:	lea    rbx,[r14+0x14]
   140004581:	mov    edx,0x208
   140004586:	mov    rcx,rbx
   140004589:	call   0x140002aec
   14000458e:	test   BYTE PTR [rsp+0x2a0],0x2
   140004596:	mov    edi,0x80070000
   14000459b:	mov    DWORD PTR [r14+0x10],esi
   14000459f:	lea    esi,[r15+0x4]
   1400045a3:	je     0x140004606
   1400045a5:	mov    r8,rbx
   1400045a8:	lea    rcx,[rsp+0x40]
   1400045ad:	call   0x1400046cc
   1400045b2:	mov    QWORD PTR [rsp+0x30],r15
   1400045b7:	lea    rcx,[rsp+0x40]
   1400045bc:	mov    DWORD PTR [rsp+0x28],esi
   1400045c0:	xor    r9d,r9d
   1400045c3:	xor    r8d,r8d
   1400045c6:	mov    DWORD PTR [rsp+0x20],0x3
   1400045ce:	mov    edx,0xc0000000
   1400045d3:	call   QWORD PTR [rip+0x2ae7]        # 0x1400070c0
   1400045d9:	mov    QWORD PTR [r14+0x220],rax
   1400045e0:	call   QWORD PTR [rip+0x2a6a]        # 0x140007050
   1400045e6:	cmp    QWORD PTR [r14+0x220],0xffffffffffffffff
   1400045ee:	mov    ebp,eax
   1400045f0:	mov    DWORD PTR [r14+0x21c],eax
   1400045f7:	je     0x1400045fe
   1400045f9:	mov    ebp,r15d
   1400045fc:	jmp    0x140004606
   1400045fe:	or     ebp,edi
   140004600:	jl     0x140004696
   140004606:	test   BYTE PTR [rsp+0x2a0],0x1
   14000460e:	je     0x140004696
   140004614:	lea    r8,[rip+0x3b05]        # 0x140008120
   14000461b:	mov    edx,0x208
   140004620:	lea    rcx,[rsp+0x40]
   140004625:	call   0x140002aec
   14000462a:	lea    r8,[rip+0x3b3f]        # 0x140008170
   140004631:	lea    rcx,[rsp+0x40]
   140004636:	call   0x1400046cc
   14000463b:	mov    r8,rbx
   14000463e:	lea    rcx,[rsp+0x40]
   140004643:	call   0x1400046cc
   140004648:	mov    QWORD PTR [rsp+0x30],r15
   14000464d:	lea    rcx,[rsp+0x40]
   140004652:	mov    DWORD PTR [rsp+0x28],esi
   140004656:	xor    r9d,r9d
   140004659:	xor    r8d,r8d
   14000465c:	mov    DWORD PTR [rsp+0x20],0x3
   140004664:	mov    edx,0xc0000000
   140004669:	call   QWORD PTR [rip+0x2a51]        # 0x1400070c0
   14000466f:	mov    QWORD PTR [r14+0x228],rax
   140004676:	call   QWORD PTR [rip+0x29d4]        # 0x140007050
   14000467c:	cmp    QWORD PTR [r14+0x228],0xffffffffffffffff
   140004684:	mov    ebp,eax
   140004686:	mov    DWORD PTR [r14+0x21c],eax
   14000468d:	je     0x140004694
   14000468f:	mov    ebp,r15d
   140004692:	jmp    0x140004696
   140004694:	or     ebp,edi
   140004696:	mov    eax,ebp
   140004698:	mov    rcx,QWORD PTR [rsp+0x250]
   1400046a0:	xor    rcx,rsp
   1400046a3:	call   0x140005fd0
   1400046a8:	lea    r11,[rsp+0x260]
   1400046b0:	mov    rbx,QWORD PTR [r11+0x28]
   1400046b4:	mov    rbp,QWORD PTR [r11+0x30]
   1400046b8:	mov    rsi,QWORD PTR [r11+0x38]
   1400046bc:	mov    rsp,r11
   1400046bf:	pop    r15
   1400046c1:	pop    r14
   1400046c3:	pop    rdi
   1400046c4:	ret    
   1400046c5:	int3   
   1400046c6:	int3   
   1400046c7:	int3   
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	mov    edx,0x104
   1400046d1:	mov    r10,r8
   1400046d4:	mov    eax,edx
   1400046d6:	mov    r9,rcx
   1400046d9:	xor    r11d,r11d
   1400046dc:	cmp    WORD PTR [r9],r11w
   1400046e0:	je     0x1400046ec
   1400046e2:	add    r9,0x2
   1400046e6:	sub    rax,0x1
   1400046ea:	jne    0x1400046dc
   1400046ec:	test   rax,rax
   1400046ef:	je     0x140004745
   1400046f1:	mov    r8,rdx
   1400046f4:	sub    r8,rax
   1400046f7:	lea    rax,[rcx+r8*2]
   1400046fb:	mov    ecx,r11d
   1400046fe:	sub    rdx,r8
   140004701:	je     0x140004736
   140004703:	add    r8,0x7ffffefa
   14000470a:	add    r8,rdx
   14000470d:	sub    r10,rax
   140004710:	test   r8,r8
   140004713:	je     0x140004731
   140004715:	movzx  r9d,WORD PTR [r10+rax*1]
   14000471a:	test   r9w,r9w
   14000471e:	je     0x140004731
   140004720:	mov    WORD PTR [rax],r9w
   140004724:	dec    r8
   140004727:	add    rax,0x2
   14000472b:	sub    rdx,0x1
   14000472f:	jne    0x140004710
   140004731:	test   rdx,rdx
   140004734:	jne    0x14000473f
   140004736:	sub    rax,0x2
   14000473a:	mov    ecx,0x8007007a
   14000473f:	mov    WORD PTR [rax],r11w
   140004743:	jmp    0x14000474a
   140004745:	mov    ecx,0x80070057
   14000474a:	mov    eax,ecx
   14000474c:	ret    
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	int3   
   140004751:	int3   
   140004752:	int3   
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	rex push rbx
   140004762:	push   rbp
   140004763:	push   rsi
   140004764:	push   rdi
   140004765:	sub    rsp,0x78
   140004769:	mov    rax,QWORD PTR [rip+0x5898]        # 0x14000a008
   140004770:	xor    rax,rsp
   140004773:	mov    QWORD PTR [rsp+0x68],rax
   140004778:	mov    rbx,r9
   14000477b:	mov    rdi,r8
   14000477e:	mov    rbp,rdx
   140004781:	mov    rsi,rcx
   140004784:	test   rdx,rdx
   140004787:	je     0x140004824
   14000478d:	test   r8,r8
   140004790:	je     0x140004824
   140004796:	test   rbx,rbx
   140004799:	jne    0x1400047b0
   14000479b:	xor    edx,edx
   14000479d:	lea    r8d,[r9+0x20]
   1400047a1:	lea    rcx,[rsp+0x38]
   1400047a6:	call   0x14000666c
   1400047ab:	lea    rbx,[rsp+0x38]
   1400047b0:	mov    rcx,QWORD PTR [rsi+0x220]
   1400047b7:	lea    r8,[rsp+0x58]
   1400047bc:	lea    rdx,[rsp+0x30]
   1400047c1:	call   QWORD PTR [rip+0x2901]        # 0x1400070c8
   1400047c7:	mov    r8d,DWORD PTR [rsp+0x5c]
   1400047cc:	cmp    DWORD PTR [rdi],r8d
   1400047cf:	cmovb  r8d,DWORD PTR [rdi]
   1400047d3:	mov    DWORD PTR [rdi],r8d
   1400047d6:	test   r8d,r8d
   1400047d9:	jne    0x1400047df
   1400047db:	xor    eax,eax
   1400047dd:	jmp    0x14000482b
   1400047df:	mov    rcx,QWORD PTR [rsi+0x220]
   1400047e6:	mov    r9,rdi
   1400047e9:	mov    rdx,rbp
   1400047ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400047f1:	call   QWORD PTR [rip+0x28b9]        # 0x1400070b0
   1400047f7:	test   eax,eax
   1400047f9:	jne    0x1400047db
   1400047fb:	call   QWORD PTR [rip+0x284f]        # 0x140007050
   140004801:	cmp    eax,0x3e5
   140004806:	jne    0x1400047db
   140004808:	call   QWORD PTR [rip+0x2842]        # 0x140007050
   14000480e:	movzx  ecx,ax
   140004811:	or     ecx,0x80070000
   140004817:	mov    DWORD PTR [rsi+0x21c],eax
   14000481d:	test   eax,eax
   14000481f:	cmovle ecx,eax
   140004822:	jmp    0x140004829
   140004824:	mov    ecx,0x80070057
   140004829:	mov    eax,ecx
   14000482b:	mov    rcx,QWORD PTR [rsp+0x68]
   140004830:	xor    rcx,rsp
   140004833:	call   0x140005fd0
   140004838:	add    rsp,0x78
   14000483c:	pop    rdi
   14000483d:	pop    rsi
   14000483e:	pop    rbp
   14000483f:	pop    rbx
   140004840:	ret    
   140004841:	int3   
   140004842:	int3   
   140004843:	int3   
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	int3   
   140004849:	int3   
   14000484a:	int3   
   14000484b:	int3   
   14000484c:	int3   
   14000484d:	int3   
   14000484e:	int3   
   14000484f:	int3   
   140004850:	mov    QWORD PTR [rsp+0x10],rbx
   140004855:	mov    QWORD PTR [rsp+0x18],rbp
   14000485a:	push   rsi
   14000485b:	push   rdi
   14000485c:	push   r14
   14000485e:	sub    rsp,0x280
   140004865:	mov    rax,QWORD PTR [rip+0x579c]        # 0x14000a008
   14000486c:	xor    rax,rsp
   14000486f:	mov    QWORD PTR [rsp+0x270],rax
   140004877:	mov    r14d,r8d
   14000487a:	mov    ebx,edx
   14000487c:	mov    rsi,rcx
   14000487f:	xor    edi,edi
   140004881:	xor    edx,edx
   140004883:	mov    WORD PTR [rsp+0x60],di
   140004888:	mov    r8d,0x206
   14000488e:	lea    rcx,[rsp+0x62]
   140004893:	mov    rbp,r9
   140004896:	call   0x14000666c
   14000489b:	mov    DWORD PTR [rsi+0xc],ebx
   14000489e:	mov    WORD PTR [rsi+0x14],di
   1400048a2:	test   rbp,rbp
   1400048a5:	je     0x1400048c5
   1400048a7:	mov    rcx,rbp
   1400048aa:	call   QWORD PTR [rip+0x27c0]        # 0x140007070
   1400048b0:	mov    edx,0x104
   1400048b5:	cmp    eax,edx
   1400048b7:	jae    0x1400048c5
   1400048b9:	mov    r8,rbp
   1400048bc:	lea    rcx,[rsi+0x14]
   1400048c0:	call   0x140003078
   1400048c5:	test   BYTE PTR [rsp+0x2c0],0x2
   1400048cd:	mov    DWORD PTR [rsi+0x10],r14d
   1400048d1:	je     0x1400049b0
   1400048d7:	mov    QWORD PTR [rsp+0x30],rdi
   1400048dc:	lea    rcx,[rsp+0x60]
   1400048e1:	mov    DWORD PTR [rsp+0x28],0x40000004
   1400048e9:	xor    r9d,r9d
   1400048ec:	xor    r8d,r8d
   1400048ef:	mov    DWORD PTR [rsp+0x20],0x3
   1400048f7:	mov    edx,0xc0000000
   1400048fc:	call   QWORD PTR [rip+0x27be]        # 0x1400070c0
   140004902:	mov    QWORD PTR [rsi+0x220],rax
   140004909:	call   QWORD PTR [rip+0x2741]        # 0x140007050
   14000490f:	mov    rcx,QWORD PTR [rsi+0x220]
   140004916:	mov    DWORD PTR [rsi+0x21c],eax
   14000491c:	cmp    rcx,0xffffffffffffffff
   140004920:	jne    0x14000492e
   140004922:	or     eax,0x80070000
   140004927:	mov    edi,eax
   140004929:	jmp    0x1400049b0
   14000492e:	mov    ebx,0x1
   140004933:	mov    edx,ebx
   140004935:	call   QWORD PTR [rip+0x2745]        # 0x140007080
   14000493b:	mov    rcx,QWORD PTR [rsi+0x220]
   140004942:	mov    edx,0xff
   140004947:	mov    r8d,edx
   14000494a:	call   QWORD PTR [rip+0x2840]        # 0x140007190
   140004950:	mov    rcx,QWORD PTR [rsi+0x220]
   140004957:	lea    rdx,[rsp+0x40]
   14000495c:	or     DWORD PTR [rsp+0x40],0xffffffff
   140004961:	mov    QWORD PTR [rsp+0x44],rdi
   140004966:	mov    DWORD PTR [rsp+0x4c],edi
   14000496a:	mov    DWORD PTR [rsp+0x50],0x14
   140004972:	call   QWORD PTR [rip+0x2760]        # 0x1400070d8
   140004978:	test   eax,eax
   14000497a:	jne    0x140004980
   14000497c:	mov    ebx,edi
   14000497e:	jmp    0x140004992
   140004980:	mov    rcx,QWORD PTR [rsi+0x220]
   140004987:	mov    edx,0x5
   14000498c:	call   QWORD PTR [rip+0x26f6]        # 0x140007088
   140004992:	call   QWORD PTR [rip+0x26b8]        # 0x140007050
   140004998:	mov    DWORD PTR [rsi+0x21c],eax
   14000499e:	test   ebx,ebx
   1400049a0:	jne    0x1400049b0
   1400049a2:	movzx  edi,ax
   1400049a5:	or     edi,0x80070000
   1400049ab:	test   eax,eax
   1400049ad:	cmovle edi,eax
   1400049b0:	mov    eax,edi
   1400049b2:	mov    rcx,QWORD PTR [rsp+0x270]
   1400049ba:	xor    rcx,rsp
   1400049bd:	call   0x140005fd0
   1400049c2:	lea    r11,[rsp+0x280]
   1400049ca:	mov    rbx,QWORD PTR [r11+0x28]
   1400049ce:	mov    rbp,QWORD PTR [r11+0x30]
   1400049d2:	mov    rsp,r11
   1400049d5:	pop    r14
   1400049d7:	pop    rdi
   1400049d8:	pop    rsi
   1400049d9:	ret    
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400049e5:	mov    QWORD PTR [rsp+0x18],r8
   1400049ea:	mov    QWORD PTR [rsp+0x20],r9
   1400049ef:	push   rbx
   1400049f0:	push   rbp
   1400049f1:	push   rsi
   1400049f2:	push   rdi
   1400049f3:	push   r14
   1400049f5:	sub    rsp,0x20
   1400049f9:	xor    edx,edx
   1400049fb:	mov    rsi,rcx
   1400049fe:	call   0x140005860
   140004a03:	mov    rcx,QWORD PTR [rsp+0x58]
   140004a08:	lea    r14,[rsp+0x60]
   140004a0d:	mov    rdx,r14
   140004a10:	call   QWORD PTR [rip+0x28aa]        # 0x1400072c0
   140004a16:	xor    ebp,ebp
   140004a18:	test   eax,eax
   140004a1a:	js     0x140004a80
   140004a1c:	inc    eax
   140004a1e:	mov    rcx,rsi
   140004a21:	movsxd rdi,eax
   140004a24:	lea    rdx,[rdi+0x1]
   140004a28:	call   0x14000565c
   140004a2d:	test   al,al
   140004a2f:	je     0x140004a3a
   140004a31:	mov    rbx,QWORD PTR [rsi+0x108]
   140004a38:	jmp    0x140004a3d
   140004a3a:	mov    rbx,rbp
   140004a3d:	test   rbx,rbx
   140004a40:	je     0x140004a80
   140004a42:	lea    rax,[rdi-0x1]
   140004a46:	cmp    rax,0x7ffffffe
   140004a4c:	ja     0x140004a78
   140004a4e:	mov    r8,QWORD PTR [rsp+0x58]
   140004a53:	dec    rdi
   140004a56:	mov    rdx,rdi
   140004a59:	mov    r9,r14
   140004a5c:	mov    rcx,rbx
   140004a5f:	call   QWORD PTR [rip+0x28cb]        # 0x140007330
   140004a65:	test   eax,eax
   140004a67:	js     0x140004a72
   140004a69:	cdqe   
   140004a6b:	cmp    rax,rdi
   140004a6e:	ja     0x140004a72
   140004a70:	jne    0x140004a80
   140004a72:	mov    WORD PTR [rbx+rdi*2],bp
   140004a76:	jmp    0x140004a80
   140004a78:	test   rdi,rdi
   140004a7b:	je     0x140004a80
   140004a7d:	mov    WORD PTR [rbx],bp
   140004a80:	mov    rax,rsi
   140004a83:	add    rsp,0x20
   140004a87:	pop    r14
   140004a89:	pop    rdi
   140004a8a:	pop    rsi
   140004a8b:	pop    rbp
   140004a8c:	pop    rbx
   140004a8d:	ret    
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	int3   
   140004a91:	int3   
   140004a92:	int3   
   140004a93:	int3   
   140004a94:	mov    QWORD PTR [rsp+0x10],rbx
   140004a99:	mov    QWORD PTR [rsp+0x18],rsi
   140004a9e:	push   rbp
   140004a9f:	push   rdi
   140004aa0:	push   r12
   140004aa2:	push   r14
   140004aa4:	push   r15
   140004aa6:	lea    rbp,[rsp-0x190]
   140004aae:	sub    rsp,0x290
   140004ab5:	mov    rax,QWORD PTR [rip+0x554c]        # 0x14000a008
   140004abc:	xor    rax,rsp
   140004abf:	mov    QWORD PTR [rbp+0x180],rax
   140004ac6:	mov    rbx,rcx
   140004ac9:	mov    DWORD PTR [rcx],0x53464c61
   140004acf:	xor    r12d,r12d
   140004ad2:	mov    DWORD PTR [rcx+0x28],r12d
   140004ad6:	xor    ecx,ecx
   140004ad8:	call   QWORD PTR [rip+0x2602]        # 0x1400070e0
   140004ade:	or     QWORD PTR [rbx+0x18],0xffffffffffffffff
   140004ae3:	lea    rdi,[rbx+0x2c]
   140004ae7:	mov    QWORD PTR [rsp+0x40],r12
   140004aec:	lea    rdx,[rip+0x368d]        # 0x140008180
   140004af3:	mov    QWORD PTR [rbx+0x20],rax
   140004af7:	lea    r15d,[r12+0x4]
   140004afc:	mov    WORD PTR [rdi],r12w
   140004b00:	lea    rax,[rsp+0x50]
   140004b05:	mov    QWORD PTR [rsp+0x38],rax
   140004b0a:	mov    r14d,0xf4240
   140004b10:	mov    QWORD PTR [rsp+0x30],r12
   140004b15:	xor    r9d,r9d
   140004b18:	mov    DWORD PTR [rsp+0x28],0xf003f
   140004b20:	xor    r8d,r8d
   140004b23:	mov    rcx,0xffffffff80000002
   140004b2a:	mov    DWORD PTR [rsp+0x20],r12d
   140004b2f:	mov    esi,0x50000
   140004b34:	mov    DWORD PTR [rbx+0x14],r14d
   140004b38:	mov    DWORD PTR [rbx+0x270],r12d
   140004b3f:	mov    QWORD PTR [rsp+0x50],r12
   140004b44:	mov    DWORD PTR [rsp+0x5c],r12d
   140004b49:	call   QWORD PTR [rip+0x24c9]        # 0x140007018
   140004b4f:	mov    DWORD PTR [rsp+0x58],eax
   140004b53:	cmp    eax,0x5
   140004b56:	jne    0x140004b97
   140004b58:	mov    QWORD PTR [rsp+0x40],r12
   140004b5d:	lea    rax,[rsp+0x50]
   140004b62:	mov    QWORD PTR [rsp+0x38],rax
   140004b67:	lea    rdx,[rip+0x3612]        # 0x140008180
   140004b6e:	mov    QWORD PTR [rsp+0x30],r12
   140004b73:	xor    r9d,r9d
   140004b76:	mov    DWORD PTR [rsp+0x28],0x20019
   140004b7e:	xor    r8d,r8d
   140004b81:	mov    rcx,0xffffffff80000002
   140004b88:	mov    DWORD PTR [rsp+0x20],r12d
   140004b8d:	call   QWORD PTR [rip+0x2485]        # 0x140007018
   140004b93:	mov    DWORD PTR [rsp+0x58],eax
   140004b97:	test   eax,eax
   140004b99:	je     0x140004ba2
   140004b9b:	mov    DWORD PTR [rsp+0x5c],r12d
   140004ba0:	jmp    0x140004bc1
   140004ba2:	mov    r8d,r14d
   140004ba5:	mov    DWORD PTR [rsp+0x5c],0x1
   140004bad:	lea    rdx,[rip+0x3634]        # 0x1400081e8
   140004bb4:	lea    rcx,[rsp+0x50]
   140004bb9:	call   0x140005b64
   140004bbe:	mov    DWORD PTR [rbx+0x14],eax
   140004bc1:	lea    rcx,[rbx+0x234]
   140004bc8:	mov    edx,0x20
   140004bcd:	lea    r8,[rip+0x2bfc]        # 0x1400077d0
   140004bd4:	call   0x140002aec
   140004bd9:	mov    r14d,0x104
   140004bdf:	mov    WORD PTR [rsp+0x70],r12w
   140004be5:	mov    r8d,r14d
   140004be8:	lea    rdx,[rsp+0x70]
   140004bed:	xor    ecx,ecx
   140004bef:	call   QWORD PTR [rip+0x2503]        # 0x1400070f8
   140004bf5:	mov    edx,0x5c
   140004bfa:	mov    WORD PTR [rbp+0x176],r12w
   140004c02:	lea    rcx,[rsp+0x70]
   140004c07:	call   QWORD PTR [rip+0x26ab]        # 0x1400072b8
   140004c0d:	test   rax,rax
   140004c10:	je     0x140004c23
   140004c12:	cmp    WORD PTR [rax],r12w
   140004c16:	je     0x140004c23
   140004c18:	mov    rcx,rax
   140004c1b:	call   QWORD PTR [rip+0x262f]        # 0x140007250
   140004c21:	jmp    0x140004c28
   140004c23:	lea    rax,[rsp+0x70]
   140004c28:	lea    rcx,[rbx+0x254]
   140004c2f:	mov    r8,rax
   140004c32:	mov    edx,0x1a
   140004c37:	call   0x140002aec
   140004c3c:	cmp    DWORD PTR [rsp+0x5c],r12d
   140004c41:	je     0x140004cb5
   140004c43:	mov    rcx,QWORD PTR [rsp+0x50]
   140004c48:	lea    r8,[rsp+0x60]
   140004c4d:	lea    rdx,[rip+0x2b7c]        # 0x1400077d0
   140004c54:	call   QWORD PTR [rip+0x23ce]        # 0x140007028
   140004c5a:	mov    DWORD PTR [rsp+0x58],eax
   140004c5e:	test   eax,eax
   140004c60:	jne    0x140004c77
   140004c62:	mov    rcx,QWORD PTR [rsp+0x50]
   140004c67:	call   QWORD PTR [rip+0x23c3]        # 0x140007030
   140004c6d:	mov    rax,QWORD PTR [rsp+0x60]
   140004c72:	mov    QWORD PTR [rsp+0x50],rax
   140004c77:	cmp    DWORD PTR [rsp+0x5c],r12d
   140004c7c:	je     0x140004cb5
   140004c7e:	mov    r8d,r15d
   140004c81:	lea    rdx,[rip+0x3570]        # 0x1400081f8
   140004c88:	lea    rcx,[rsp+0x50]
   140004c8d:	call   0x140005b64
   140004c92:	mov    r8d,0x40000
   140004c98:	movzx  r15d,ax
   140004c9c:	lea    rdx,[rip+0x3565]        # 0x140008208
   140004ca3:	lea    rcx,[rsp+0x50]
   140004ca8:	call   0x140005b64
   140004cad:	mov    esi,eax
   140004caf:	and    esi,0xffff0000
   140004cb5:	or     esi,r15d
   140004cb8:	lea    rcx,[rip+0x34b1]        # 0x140008170
   140004cbf:	mov    DWORD PTR [rbx+0x10],esi
   140004cc2:	call   QWORD PTR [rip+0x23a8]        # 0x140007070
   140004cc8:	lea    rcx,[rip+0x3751]        # 0x140008420
   140004ccf:	sub    r14d,eax
   140004cd2:	call   QWORD PTR [rip+0x2398]        # 0x140007070
   140004cd8:	mov    rdx,rdi
   140004cdb:	lea    rcx,[rip+0x3536]        # 0x140008218
   140004ce2:	sub    r14d,eax
   140004ce5:	mov    r8d,r14d
   140004ce8:	call   QWORD PTR [rip+0x2412]        # 0x140007100
   140004cee:	test   eax,eax
   140004cf0:	je     0x140004d81
   140004cf6:	cmp    WORD PTR [rdi],r12w
   140004cfa:	je     0x140004d81
   140004d00:	lea    r8,[rip+0x3469]        # 0x140008170
   140004d07:	mov    WORD PTR [rbx+0x232],r12w
   140004d0f:	mov    rcx,rdi
   140004d12:	call   0x1400046cc
   140004d17:	lea    r8,[rip+0x3702]        # 0x140008420
   140004d1e:	mov    rcx,rdi
   140004d21:	call   0x1400046cc
   140004d26:	xor    r9d,r9d
   140004d29:	mov    QWORD PTR [rsp+0x30],r12
   140004d2e:	mov    DWORD PTR [rsp+0x28],0x80
   140004d36:	mov    edx,0x40000000
   140004d3b:	mov    rcx,rdi
   140004d3e:	mov    DWORD PTR [rsp+0x20],0x4
   140004d46:	lea    r8d,[r9+0x3]
   140004d4a:	call   QWORD PTR [rip+0x2370]        # 0x1400070c0
   140004d50:	mov    QWORD PTR [rbx+0x18],rax
   140004d54:	lea    rcx,[rax-0x1]
   140004d58:	cmp    rcx,0xfffffffffffffffd
   140004d5c:	ja     0x140004d72
   140004d5e:	mov    r9d,0x2
   140004d64:	xor    r8d,r8d
   140004d67:	xor    edx,edx
   140004d69:	mov    rcx,rax
   140004d6c:	call   QWORD PTR [rip+0x2396]        # 0x140007108
   140004d72:	mov    rax,QWORD PTR [rbx+0x18]
   140004d76:	inc    rax
   140004d79:	test   rax,0xfffffffffffffffe
   140004d7f:	jne    0x140004d8d
   140004d81:	call   QWORD PTR [rip+0x22c9]        # 0x140007050
   140004d87:	mov    DWORD PTR [rbx+0x270],eax
   140004d8d:	cmp    DWORD PTR [rsp+0x5c],r12d
   140004d92:	je     0x140004d9f
   140004d94:	mov    rcx,QWORD PTR [rsp+0x50]
   140004d99:	call   QWORD PTR [rip+0x2291]        # 0x140007030
   140004d9f:	mov    rax,rbx
   140004da2:	mov    rcx,QWORD PTR [rbp+0x180]
   140004da9:	xor    rcx,rsp
   140004dac:	call   0x140005fd0
   140004db1:	lea    r11,[rsp+0x290]
   140004db9:	mov    rbx,QWORD PTR [r11+0x38]
   140004dbd:	mov    rsi,QWORD PTR [r11+0x40]
   140004dc1:	mov    rsp,r11
   140004dc4:	pop    r15
   140004dc6:	pop    r14
   140004dc8:	pop    r12
   140004dca:	pop    rdi
   140004dcb:	pop    rbp
   140004dcc:	ret    
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	int3   
   140004dd1:	int3   
   140004dd2:	int3   
   140004dd3:	int3   
   140004dd4:	rex push rbx
   140004dd6:	sub    rsp,0x1e0
   140004ddd:	mov    rax,QWORD PTR [rip+0x5224]        # 0x14000a008
   140004de4:	xor    rax,rsp
   140004de7:	mov    QWORD PTR [rsp+0x1d0],rax
   140004def:	mov    rbx,rcx
   140004df2:	lea    rcx,[rsp+0x40]
   140004df7:	call   QWORD PTR [rip+0x231b]        # 0x140007118
   140004dfd:	lea    rax,[rsp+0x90]
   140004e05:	mov    DWORD PTR [rsp+0x28],0x20
   140004e0d:	xor    r9d,r9d
   140004e10:	mov    QWORD PTR [rsp+0x20],rax
   140004e15:	lea    r8,[rsp+0x40]
   140004e1a:	mov    edx,0x80000000
   140004e1f:	mov    ecx,0x400
   140004e24:	call   QWORD PTR [rip+0x22c6]        # 0x1400070f0
   140004e2a:	lea    rax,[rsp+0x50]
   140004e2f:	mov    DWORD PTR [rsp+0x28],0x20
   140004e37:	xor    r9d,r9d
   140004e3a:	mov    QWORD PTR [rsp+0x20],rax
   140004e3f:	lea    r8,[rsp+0x40]
   140004e44:	mov    edx,0x8000000c
   140004e49:	mov    ecx,0x400
   140004e4e:	call   QWORD PTR [rip+0x2294]        # 0x1400070e8
   140004e54:	call   QWORD PTR [rip+0x22c6]        # 0x140007120
   140004e5a:	mov    DWORD PTR [rsp+0x38],eax
   140004e5e:	lea    rcx,[rbx+0x254]
   140004e65:	mov    QWORD PTR [rsp+0x30],rcx
   140004e6a:	lea    rdx,[rbx+0x234]
   140004e71:	mov    QWORD PTR [rsp+0x28],rdx
   140004e76:	lea    rax,[rsp+0x50]
   140004e7b:	mov    edx,0x100
   140004e80:	mov    QWORD PTR [rsp+0x20],rax
   140004e85:	lea    r9,[rsp+0x90]
   140004e8d:	lea    r8,[rip+0x346c]        # 0x140008300
   140004e94:	lea    rcx,[rsp+0xd0]
   140004e9c:	call   0x1400030f4
   140004ea1:	test   eax,eax
   140004ea3:	js     0x140004eb8
   140004ea5:	xor    r8d,r8d
   140004ea8:	lea    rdx,[rsp+0xd0]
   140004eb0:	mov    rcx,rbx
   140004eb3:	call   0x1400052ec
   140004eb8:	xor    r8d,r8d
   140004ebb:	lea    rdx,[rip+0x34de]        # 0x1400083a0
   140004ec2:	mov    rcx,rbx
   140004ec5:	call   0x1400052ec
   140004eca:	mov    rcx,QWORD PTR [rsp+0x1d0]
   140004ed2:	xor    rcx,rsp
   140004ed5:	call   0x140005fd0
   140004eda:	add    rsp,0x1e0
   140004ee1:	pop    rbx
   140004ee2:	ret    
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	mov    QWORD PTR [rsp+0x10],rbx
   140004ef1:	push   rbp
   140004ef2:	push   rsi
   140004ef3:	push   rdi
   140004ef4:	push   r12
   140004ef6:	push   r13
   140004ef8:	push   r14
   140004efa:	push   r15
   140004efc:	lea    rbp,[rsp-0xb20]
   140004f04:	sub    rsp,0xc20
   140004f0b:	mov    rax,QWORD PTR [rip+0x50f6]        # 0x14000a008
   140004f12:	xor    rax,rsp
   140004f15:	mov    QWORD PTR [rbp+0xb10],rax
   140004f1c:	xor    r12d,r12d
   140004f1f:	lea    rax,[rbp+0x78]
   140004f23:	mov    rdi,rcx
   140004f26:	mov    QWORD PTR [rbp+0x178],rax
   140004f2d:	mov    ebx,edx
   140004f2f:	mov    BYTE PTR [rbp+0x190],r12b
   140004f36:	mov    edx,0x80
   140004f3b:	mov    WORD PTR [rbp+0x78],r12w
   140004f40:	mov    r14,r8
   140004f43:	mov    QWORD PTR [rbp+0x180],rdx
   140004f4a:	lea    rcx,[rip+0x2817]        # 0x140007768
   140004f51:	mov    r15,r9
   140004f54:	mov    QWORD PTR [rbp+0x70],rcx
   140004f58:	lea    r8d,[rdx-0x70]
   140004f5c:	mov    QWORD PTR [rbp+0x188],r8
   140004f63:	cmp    DWORD PTR [rdi+0x270],r12d
   140004f6a:	jne    0x1400052b3
   140004f70:	mov    rax,QWORD PTR [rdi+0x18]
   140004f74:	lea    r13d,[rdx-0x7f]
   140004f78:	sub    rax,r13
   140004f7b:	cmp    rax,0xfffffffffffffffd
   140004f7f:	ja     0x1400052b3
   140004f85:	mov    eax,DWORD PTR [rdi+0x10]
   140004f88:	and    eax,ebx
   140004f8a:	movzx  eax,ax
   140004f8d:	test   eax,eax
   140004f8f:	je     0x1400052b3
   140004f95:	mov    esi,ebx
   140004f97:	and    esi,0x4
   140004f9a:	je     0x140004fa1
   140004f9c:	lea    eax,[rdx-0x1b]
   140004f9f:	jmp    0x140004fbc
   140004fa1:	test   bl,0x2
   140004fa4:	je     0x140004fad
   140004fa6:	mov    eax,0x77
   140004fab:	jmp    0x140004fbc
   140004fad:	mov    eax,0x69
   140004fb2:	test   r13b,bl
   140004fb5:	jne    0x140004fbc
   140004fb7:	mov    eax,0x74
   140004fbc:	mov    QWORD PTR [rsp+0x40],rcx
   140004fc1:	lea    rcx,[rsp+0x48]
   140004fc6:	mov    QWORD PTR [rbp+0x48],rcx
   140004fca:	lea    rcx,[rsp+0x40]
   140004fcf:	mov    QWORD PTR [rbp+0x50],rdx
   140004fd3:	lea    rdx,[rsp+0x30]
   140004fd8:	mov    QWORD PTR [rbp+0x58],r8
   140004fdc:	mov    BYTE PTR [rbp+0x60],r12b
   140004fe0:	mov    WORD PTR [rsp+0x48],r12w
   140004fe6:	mov    WORD PTR [rsp+0x30],ax
   140004feb:	mov    WORD PTR [rsp+0x32],r12w
   140004ff1:	call   0x140005860
   140004ff6:	mov    rdx,QWORD PTR [rbp+0x48]
   140004ffa:	lea    rcx,[rbp+0x70]
   140004ffe:	call   0x140005860
   140005003:	mov    al,BYTE PTR [rbp+0x190]
   140005009:	test   al,al
   14000500b:	jne    0x14000501e
   14000500d:	cmp    BYTE PTR [rbp+0x60],r12b
   140005011:	movzx  eax,al
   140005014:	cmovne eax,r13d
   140005018:	mov    BYTE PTR [rbp+0x190],al
   14000501e:	lea    rcx,[rsp+0x40]
   140005023:	call   0x140005814
   140005028:	lea    r13,[rip+0x3205]        # 0x140008234
   14000502f:	mov    rdx,r13
   140005032:	lea    rcx,[rsp+0x40]
   140005037:	call   0x1400057bc
   14000503c:	lea    rdx,[rsp+0x40]
   140005041:	lea    rcx,[rbp+0x70]
   140005045:	call   0x1400059cc
   14000504a:	lea    rcx,[rsp+0x40]
   14000504f:	call   0x140005814
   140005054:	lea    rdx,[rdi+0x234]
   14000505b:	lea    rcx,[rsp+0x40]
   140005060:	call   0x1400057bc
   140005065:	lea    rdx,[rsp+0x40]
   14000506a:	lea    rcx,[rbp+0x70]
   14000506e:	call   0x1400059cc
   140005073:	lea    rcx,[rsp+0x40]
   140005078:	call   0x140005814
   14000507d:	mov    rdx,r13
   140005080:	lea    rcx,[rsp+0x40]
   140005085:	call   0x1400057bc
   14000508a:	lea    rdx,[rsp+0x40]
   14000508f:	lea    rcx,[rbp+0x70]
   140005093:	call   0x1400059cc
   140005098:	lea    rcx,[rsp+0x40]
   14000509d:	call   0x140005814
   1400050a2:	mov    eax,0xffff0000
   1400050a7:	and    ebx,eax
   1400050a9:	or     ebx,DWORD PTR [rdi+0x10]
   1400050ac:	test   eax,ebx
   1400050ae:	je     0x1400051f4
   1400050b4:	bt     ebx,0x12
   1400050b8:	jae    0x140005151
   1400050be:	lea    rax,[rip+0x26a3]        # 0x140007768
   1400050c5:	mov    QWORD PTR [rbp+0x50],0x80
   1400050cd:	mov    QWORD PTR [rsp+0x40],rax
   1400050d2:	lea    rax,[rsp+0x48]
   1400050d7:	mov    QWORD PTR [rbp+0x48],rax
   1400050db:	mov    QWORD PTR [rbp+0x58],0x10
   1400050e3:	mov    BYTE PTR [rbp+0x60],r12b
   1400050e7:	mov    WORD PTR [rsp+0x48],r12w
   1400050ed:	call   QWORD PTR [rip+0x202d]        # 0x140007120
   1400050f3:	mov    r9d,eax
   1400050f6:	lea    r8,[rdi+0x254]
   1400050fd:	lea    rdx,[rip+0x3134]        # 0x140008238
   140005104:	lea    rcx,[rsp+0x40]
   140005109:	call   0x1400049e0
   14000510e:	lea    rdx,[rsp+0x40]
   140005113:	lea    rcx,[rbp+0x70]
   140005117:	call   0x1400059cc
   14000511c:	mov    rdx,r13
   14000511f:	lea    rcx,[rbp+0x1a0]
   140005126:	call   0x1400057bc
   14000512b:	lea    rdx,[rbp+0x1a0]
   140005132:	lea    rcx,[rbp+0x70]
   140005136:	call   0x1400059cc
   14000513b:	lea    rcx,[rbp+0x1a0]
   140005142:	call   0x140005814
   140005147:	lea    rcx,[rsp+0x40]
   14000514c:	call   0x140005814
   140005151:	bt     ebx,0x10
   140005155:	jae    0x1400051f4
   14000515b:	lea    rcx,[rsp+0x30]
   140005160:	mov    WORD PTR [rbp+0x2d0],r12w
   140005168:	call   QWORD PTR [rip+0x1faa]        # 0x140007118
   14000516e:	lea    rax,[rbp+0x2d0]
   140005175:	mov    DWORD PTR [rsp+0x28],0xf
   14000517d:	xor    r9d,r9d
   140005180:	mov    QWORD PTR [rsp+0x20],rax
   140005185:	lea    r8,[rsp+0x30]
   14000518a:	mov    edx,0x8000000c
   14000518f:	mov    ecx,0x400
   140005194:	call   QWORD PTR [rip+0x1f4e]        # 0x1400070e8
   14000519a:	lea    rdx,[rbp+0x2d0]
   1400051a1:	lea    rcx,[rbp+0x1a0]
   1400051a8:	call   0x1400057bc
   1400051ad:	lea    rdx,[rbp+0x1a0]
   1400051b4:	lea    rcx,[rbp+0x70]
   1400051b8:	call   0x1400059cc
   1400051bd:	lea    rcx,[rbp+0x1a0]
   1400051c4:	call   0x140005814
   1400051c9:	mov    rdx,r13
   1400051cc:	lea    rcx,[rbp+0x1a0]
   1400051d3:	call   0x1400057bc
   1400051d8:	lea    rdx,[rbp+0x1a0]
   1400051df:	lea    rcx,[rbp+0x70]
   1400051e3:	call   0x1400059cc
   1400051e8:	lea    rcx,[rbp+0x1a0]
   1400051ef:	call   0x140005814
   1400051f4:	lea    rdx,[rip+0x3059]        # 0x140008254
   1400051fb:	lea    rcx,[rbp+0x1a0]
   140005202:	call   0x1400057bc
   140005207:	lea    rdx,[rbp+0x1a0]
   14000520e:	lea    rcx,[rbp+0x70]
   140005212:	call   0x1400059cc
   140005217:	lea    rcx,[rbp+0x1a0]
   14000521e:	call   0x140005814
   140005223:	mov    r9,r15
   140005226:	lea    rcx,[rbp+0x310]
   14000522d:	mov    r8,r14
   140005230:	mov    edx,0x3ff
   140005235:	call   QWORD PTR [rip+0x20f5]        # 0x140007330
   14000523b:	lea    rdx,[rbp+0x310]
   140005242:	mov    WORD PTR [rbp+0xb0e],r12w
   14000524a:	lea    rcx,[rbp+0x1a0]
   140005251:	call   0x1400057bc
   140005256:	lea    rdx,[rbp+0x1a0]
   14000525d:	lea    rcx,[rbp+0x70]
   140005261:	call   0x1400059cc
   140005266:	lea    rcx,[rbp+0x1a0]
   14000526d:	call   0x140005814
   140005272:	lea    rdx,[rip+0x2fdf]        # 0x140008258
   140005279:	lea    rcx,[rbp+0x1a0]
   140005280:	call   0x1400057bc
   140005285:	lea    rdx,[rbp+0x1a0]
   14000528c:	lea    rcx,[rbp+0x70]
   140005290:	call   0x1400059cc
   140005295:	lea    rcx,[rbp+0x1a0]
   14000529c:	call   0x140005814
   1400052a1:	mov    rdx,QWORD PTR [rbp+0x178]
   1400052a8:	mov    r8d,esi
   1400052ab:	mov    rcx,rdi
   1400052ae:	call   0x1400052ec
   1400052b3:	lea    rcx,[rbp+0x70]
   1400052b7:	call   0x140005814
   1400052bc:	mov    rcx,QWORD PTR [rbp+0xb10]
   1400052c3:	xor    rcx,rsp
   1400052c6:	call   0x140005fd0
   1400052cb:	mov    rbx,QWORD PTR [rsp+0xc68]
   1400052d3:	add    rsp,0xc20
   1400052da:	pop    r15
   1400052dc:	pop    r14
   1400052de:	pop    r13
   1400052e0:	pop    r12
   1400052e2:	pop    rdi
   1400052e3:	pop    rsi
   1400052e4:	pop    rbp
   1400052e5:	ret    
   1400052e6:	int3   
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	int3   
   1400052eb:	int3   
   1400052ec:	mov    QWORD PTR [rsp+0x18],rbx
   1400052f1:	push   rbp
   1400052f2:	push   rsi
   1400052f3:	push   rdi
   1400052f4:	push   r14
   1400052f6:	push   r15
   1400052f8:	lea    rbp,[rsp-0x37]
   1400052fd:	sub    rsp,0xb0
   140005304:	mov    rax,QWORD PTR [rip+0x4cfd]        # 0x14000a008
   14000530b:	xor    rax,rsp
   14000530e:	mov    QWORD PTR [rbp+0x27],rax
   140005312:	mov    rax,QWORD PTR [rcx+0x18]
   140005316:	mov    r14d,r8d
   140005319:	dec    rax
   14000531c:	mov    r15,rdx
   14000531f:	mov    rdi,rcx
   140005322:	cmp    rax,0xfffffffffffffffd
   140005326:	ja     0x14000549b
   14000532c:	mov    eax,0x1
   140005331:	xchg   DWORD PTR [rcx+0x28],eax
   140005334:	test   eax,eax
   140005336:	jne    0x14000533d
   140005338:	call   0x140004dd4
   14000533d:	mov    rcx,QWORD PTR [rdi+0x18]
   140005341:	lea    rdx,[rbp-0x11]
   140005345:	call   QWORD PTR [rip+0x1de5]        # 0x140007130
   14000534b:	test   eax,eax
   14000534d:	je     0x14000549b
   140005353:	mov    eax,DWORD PTR [rbp+0xf]
   140005356:	test   eax,eax
   140005358:	jne    0x140005362
   14000535a:	mov    ecx,DWORD PTR [rbp+0x13]
   14000535d:	cmp    ecx,DWORD PTR [rdi+0x14]
   140005360:	jbe    0x140005392
   140005362:	mov    rcx,QWORD PTR [rdi+0x18]
   140005366:	xor    r9d,r9d
   140005369:	xor    r8d,r8d
   14000536c:	xor    edx,edx
   14000536e:	call   QWORD PTR [rip+0x1d94]        # 0x140007108
   140005374:	mov    rcx,QWORD PTR [rdi+0x18]
   140005378:	call   QWORD PTR [rip+0x1d92]        # 0x140007110
   14000537e:	mov    rcx,QWORD PTR [rdi+0x18]
   140005382:	lea    rdx,[rbp-0x11]
   140005386:	call   QWORD PTR [rip+0x1da4]        # 0x140007130
   14000538c:	mov    ecx,DWORD PTR [rbp+0x13]
   14000538f:	mov    eax,DWORD PTR [rbp+0xf]
   140005392:	and    QWORD PTR [rbp-0x39],0x0
   140005397:	xor    edx,edx
   140005399:	mov    QWORD PTR [rbp-0x29],rdx
   14000539d:	mov    r9d,0x1000
   1400053a3:	mov    DWORD PTR [rbp-0x25],eax
   1400053a6:	xor    r8d,r8d
   1400053a9:	lea    rax,[rbp-0x39]
   1400053ad:	mov    QWORD PTR [rbp-0x31],rdx
   1400053b1:	mov    QWORD PTR [rsp+0x28],rax
   1400053b6:	lea    ebx,[rdx+0x2]
   1400053b9:	and    DWORD PTR [rsp+0x20],edx
   1400053bd:	mov    QWORD PTR [rbp-0x21],rdx
   1400053c1:	mov    edx,ebx
   1400053c3:	mov    DWORD PTR [rbp-0x29],ecx
   1400053c6:	mov    rcx,QWORD PTR [rdi+0x18]
   1400053ca:	call   QWORD PTR [rip+0x1d68]        # 0x140007138
   1400053d0:	test   eax,eax
   1400053d2:	je     0x14000549b
   1400053d8:	mov    rcx,QWORD PTR [rdi+0x18]
   1400053dc:	mov    r9d,ebx
   1400053df:	xor    r8d,r8d
   1400053e2:	xor    edx,edx
   1400053e4:	call   QWORD PTR [rip+0x1d1e]        # 0x140007108
   1400053ea:	mov    rcx,r15
   1400053ed:	call   QWORD PTR [rip+0x1c7d]        # 0x140007070
   1400053f3:	mov    esi,eax
   1400053f5:	lea    ebx,[rax+0x2]
   1400053f8:	call   QWORD PTR [rip+0x1d4a]        # 0x140007148
   1400053fe:	mov    r8d,ebx
   140005401:	mov    edx,0x8
   140005406:	mov    rcx,rax
   140005409:	call   QWORD PTR [rip+0x1d31]        # 0x140007140
   14000540f:	mov    rbx,rax
   140005412:	test   rax,rax
   140005415:	je     0x14000546e
   140005417:	and    QWORD PTR [rsp+0x38],0x0
   14000541d:	lea    ecx,[rsi+0x1]
   140005420:	and    QWORD PTR [rsp+0x30],0x0
   140005426:	or     r9d,0xffffffff
   14000542a:	mov    DWORD PTR [rsp+0x28],ecx
   14000542e:	mov    r8,r15
   140005431:	xor    ecx,ecx
   140005433:	mov    QWORD PTR [rsp+0x20],rax
   140005438:	xor    edx,edx
   14000543a:	call   QWORD PTR [rip+0x1d10]        # 0x140007150
   140005440:	mov    rcx,QWORD PTR [rdi+0x18]
   140005444:	lea    r9,[rbp-0x19]
   140005448:	and    QWORD PTR [rsp+0x20],0x0
   14000544e:	mov    r8d,esi
   140005451:	mov    rdx,rbx
   140005454:	call   QWORD PTR [rip+0x1c5e]        # 0x1400070b8
   14000545a:	call   QWORD PTR [rip+0x1ce8]        # 0x140007148
   140005460:	mov    r8,rbx
   140005463:	xor    edx,edx
   140005465:	mov    rcx,rax
   140005468:	call   QWORD PTR [rip+0x1cea]        # 0x140007158
   14000546e:	mov    rcx,QWORD PTR [rdi+0x18]
   140005472:	lea    rax,[rbp-0x39]
   140005476:	xor    r9d,r9d
   140005479:	mov    QWORD PTR [rsp+0x20],rax
   14000547e:	xor    edx,edx
   140005480:	mov    r8d,0x1000
   140005486:	call   QWORD PTR [rip+0x1cd4]        # 0x140007160
   14000548c:	test   r14d,r14d
   14000548f:	je     0x14000549b
   140005491:	mov    rcx,QWORD PTR [rdi+0x18]
   140005495:	call   QWORD PTR [rip+0x1c8d]        # 0x140007128
   14000549b:	mov    rcx,QWORD PTR [rbp+0x27]
   14000549f:	xor    rcx,rsp
   1400054a2:	call   0x140005fd0
   1400054a7:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400054af:	add    rsp,0xb0
   1400054b6:	pop    r15
   1400054b8:	pop    r14
   1400054ba:	pop    rdi
   1400054bb:	pop    rsi
   1400054bc:	pop    rbp
   1400054bd:	ret    
   1400054be:	int3   
   1400054bf:	int3   
   1400054c0:	int3   
   1400054c1:	int3   
   1400054c2:	int3   
   1400054c3:	int3   
   1400054c4:	rex push rbx
   1400054c6:	sub    rsp,0x1d0
   1400054cd:	mov    rax,QWORD PTR [rip+0x4b34]        # 0x14000a008
   1400054d4:	xor    rax,rsp
   1400054d7:	mov    QWORD PTR [rsp+0x1c0],rax
   1400054df:	cmp    DWORD PTR [rcx+0x28],0x0
   1400054e3:	mov    rbx,rcx
   1400054e6:	je     0x1400055b2
   1400054ec:	lea    rcx,[rsp+0x40]
   1400054f1:	call   QWORD PTR [rip+0x1c21]        # 0x140007118
   1400054f7:	lea    rax,[rsp+0x50]
   1400054fc:	mov    DWORD PTR [rsp+0x28],0xf
   140005504:	xor    r9d,r9d
   140005507:	mov    QWORD PTR [rsp+0x20],rax
   14000550c:	lea    r8,[rsp+0x40]
   140005511:	mov    edx,0x80000000
   140005516:	mov    ecx,0x400
   14000551b:	call   QWORD PTR [rip+0x1bcf]        # 0x1400070f0
   140005521:	lea    rax,[rsp+0x80]
   140005529:	mov    DWORD PTR [rsp+0x28],0x20
   140005531:	xor    r9d,r9d
   140005534:	mov    QWORD PTR [rsp+0x20],rax
   140005539:	lea    r8,[rsp+0x40]
   14000553e:	mov    edx,0x8000000c
   140005543:	mov    ecx,0x400
   140005548:	call   QWORD PTR [rip+0x1b9a]        # 0x1400070e8
   14000554e:	call   QWORD PTR [rip+0x1bcc]        # 0x140007120
   140005554:	mov    DWORD PTR [rsp+0x38],eax
   140005558:	lea    rcx,[rbx+0x254]
   14000555f:	mov    QWORD PTR [rsp+0x30],rcx
   140005564:	lea    rdx,[rbx+0x234]
   14000556b:	mov    QWORD PTR [rsp+0x28],rdx
   140005570:	lea    rax,[rsp+0x80]
   140005578:	mov    edx,0x100
   14000557d:	mov    QWORD PTR [rsp+0x20],rax
   140005582:	lea    r9,[rsp+0x50]
   140005587:	lea    r8,[rip+0x2cd2]        # 0x140008260
   14000558e:	lea    rcx,[rsp+0xc0]
   140005596:	call   0x1400030f4
   14000559b:	test   eax,eax
   14000559d:	js     0x1400055b2
   14000559f:	xor    r8d,r8d
   1400055a2:	lea    rdx,[rsp+0xc0]
   1400055aa:	mov    rcx,rbx
   1400055ad:	call   0x1400052ec
   1400055b2:	mov    rcx,QWORD PTR [rbx+0x18]
   1400055b6:	lea    rdx,[rcx-0x1]
   1400055ba:	cmp    rdx,0xfffffffffffffffd
   1400055be:	ja     0x1400055d5
   1400055c0:	call   QWORD PTR [rip+0x1b62]        # 0x140007128
   1400055c6:	mov    rcx,QWORD PTR [rbx+0x18]
   1400055ca:	call   QWORD PTR [rip+0x1aa8]        # 0x140007078
   1400055d0:	or     QWORD PTR [rbx+0x18],0xffffffffffffffff
   1400055d5:	mov    rcx,rbx
   1400055d8:	mov    DWORD PTR [rbx],0x53464c66
   1400055de:	call   0x140005bd0
   1400055e3:	mov    rax,rbx
   1400055e6:	mov    rcx,QWORD PTR [rsp+0x1c0]
   1400055ee:	xor    rcx,rsp
   1400055f1:	call   0x140005fd0
   1400055f6:	add    rsp,0x1d0
   1400055fd:	pop    rbx
   1400055fe:	ret    
   1400055ff:	int3   
   140005600:	int3   
   140005601:	int3   
   140005602:	int3   
   140005603:	int3   
   140005604:	int3   
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	mov    QWORD PTR [rsp+0x18],r8
   14000560d:	mov    QWORD PTR [rsp+0x20],r9
   140005612:	sub    rsp,0x28
   140005616:	lea    rax,[rcx-0x1]
   14000561a:	cmp    rax,0xfffffffffffffffd
   14000561e:	ja     0x14000563f
   140005620:	cmp    DWORD PTR [rcx+0x270],0x0
   140005627:	jne    0x14000563f
   140005629:	cmp    DWORD PTR [rcx],0x53464c61
   14000562f:	jne    0x14000563f
   140005631:	lea    r9,[rsp+0x48]
   140005636:	call   0x140004eec
   14000563b:	xor    eax,eax
   14000563d:	jmp    0x14000564f
   14000563f:	mov    ecx,0x6
   140005644:	call   QWORD PTR [rip+0x1b1e]        # 0x140007168
   14000564a:	mov    eax,0x6
   14000564f:	add    rsp,0x28
   140005653:	ret    
   140005654:	int3   
   140005655:	int3   
   140005656:	int3   
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	mov    QWORD PTR [rsp+0x8],rbx
   140005661:	mov    QWORD PTR [rsp+0x10],rbp
   140005666:	mov    QWORD PTR [rsp+0x18],rsi
   14000566b:	push   rdi
   14000566c:	push   r14
   14000566e:	push   r15
   140005670:	sub    rsp,0x20
   140005674:	mov    rdi,rcx
   140005677:	cmp    QWORD PTR [rcx+0x110],rdx
   14000567e:	jb     0x140005687
   140005680:	mov    al,0x1
   140005682:	jmp    0x14000579a
   140005687:	mov    rbx,QWORD PTR [rcx+0x118]
   14000568e:	lea    r14,[rcx+0x8]
   140005692:	xor    r15d,r15d
   140005695:	add    rbx,rdx
   140005698:	mov    ebp,r15d
   14000569b:	cmp    QWORD PTR [rcx+0x108],r14
   1400056a2:	je     0x1400056b5
   1400056a4:	mov    eax,0x80
   1400056a9:	cmp    rbx,rax
   1400056ac:	ja     0x1400056b5
   1400056ae:	mov    rsi,r14
   1400056b1:	mov    ebp,eax
   1400056b3:	jmp    0x1400056e2
   1400056b5:	mov    rcx,0xffffffffffffffff
   1400056bc:	mov    eax,0x2
   1400056c1:	mul    rbx
   1400056c4:	lea    rdx,[rip+0x2de5]        # 0x1400084b0
   1400056cb:	cmovo  rax,rcx
   1400056cf:	mov    rcx,rax
   1400056d2:	call   0x1400061a8
   1400056d7:	mov    rsi,rax
   1400056da:	test   rax,rax
   1400056dd:	je     0x1400056e7
   1400056df:	mov    rbp,rbx
   1400056e2:	test   rsi,rsi
   1400056e5:	jne    0x1400056f7
   1400056e7:	mov    BYTE PTR [rdi+0x120],0x1
   1400056ee:	test   rsi,rsi
   1400056f1:	je     0x140005798
   1400056f7:	cmp    QWORD PTR [rdi+0x108],r15
   1400056fe:	je     0x140005785
   140005704:	mov    rcx,rdi
   140005707:	call   0x140005b28
   14000570c:	mov    r9,QWORD PTR [rdi+0x108]
   140005713:	inc    rax
   140005716:	test   r9,r9
   140005719:	je     0x140005768
   14000571b:	mov    ebx,0x7fffffff
   140005720:	mov    rdx,r9
   140005723:	mov    ecx,ebx
   140005725:	cmp    WORD PTR [rdx],r15w
   140005729:	je     0x140005735
   14000572b:	add    rdx,0x2
   14000572f:	sub    rcx,0x1
   140005733:	jne    0x140005725
   140005735:	test   rcx,rcx
   140005738:	je     0x14000573f
   14000573a:	sub    rbx,rcx
   14000573d:	jmp    0x140005742
   14000573f:	mov    rbx,r15
   140005742:	inc    rbx
   140005745:	cmp    rax,rbx
   140005748:	cmovb  rbx,rax
   14000574c:	test   rbx,rbx
   14000574f:	je     0x140005768
   140005751:	add    rbx,rbx
   140005754:	mov    rdx,r9
   140005757:	mov    r8,rbx
   14000575a:	mov    rcx,rsi
   14000575d:	call   0x140006660
   140005762:	mov    WORD PTR [rbx+rsi*1-0x2],r15w
   140005768:	mov    rcx,QWORD PTR [rdi+0x108]
   14000576f:	test   rcx,rcx
   140005772:	je     0x14000577e
   140005774:	cmp    rcx,r14
   140005777:	je     0x14000577e
   140005779:	call   0x140005bd0
   14000577e:	mov    QWORD PTR [rdi+0x108],r15
   140005785:	mov    QWORD PTR [rdi+0x110],rbp
   14000578c:	mov    QWORD PTR [rdi+0x108],rsi
   140005793:	jmp    0x140005680
   140005798:	xor    al,al
   14000579a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000579f:	mov    rbp,QWORD PTR [rsp+0x48]
   1400057a4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400057a9:	add    rsp,0x20
   1400057ad:	pop    r15
   1400057af:	pop    r14
   1400057b1:	pop    rdi
   1400057b2:	ret    
   1400057b3:	int3   
   1400057b4:	int3   
   1400057b5:	int3   
   1400057b6:	int3   
   1400057b7:	int3   
   1400057b8:	int3   
   1400057b9:	int3   
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	rex push rbx
   1400057be:	sub    rsp,0x20
   1400057c2:	mov    rbx,rcx
   1400057c5:	mov    QWORD PTR [rcx+0x110],0x80
   1400057d0:	mov    QWORD PTR [rcx+0x118],0x10
   1400057db:	lea    rax,[rip+0x1f86]        # 0x140007768
   1400057e2:	mov    QWORD PTR [rcx],rax
   1400057e5:	lea    rax,[rcx+0x8]
   1400057e9:	mov    QWORD PTR [rcx+0x108],rax
   1400057f0:	xor    ecx,ecx
   1400057f2:	mov    BYTE PTR [rbx+0x120],cl
   1400057f8:	mov    WORD PTR [rax],cx
   1400057fb:	mov    rcx,rbx
   1400057fe:	call   0x140005860
   140005803:	mov    rax,rbx
   140005806:	add    rsp,0x20
   14000580a:	pop    rbx
   14000580b:	ret    
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	rex push rbx
   140005816:	sub    rsp,0x20
   14000581a:	lea    rax,[rip+0x1f47]        # 0x140007768
   140005821:	mov    rbx,rcx
   140005824:	mov    QWORD PTR [rcx],rax
   140005827:	mov    rcx,QWORD PTR [rcx+0x108]
   14000582e:	test   rcx,rcx
   140005831:	je     0x140005841
   140005833:	lea    rax,[rbx+0x8]
   140005837:	cmp    rcx,rax
   14000583a:	je     0x140005841
   14000583c:	call   0x140005bd0
   140005841:	and    QWORD PTR [rbx+0x108],0x0
   140005849:	and    QWORD PTR [rbx+0x110],0x0
   140005851:	add    rsp,0x20
   140005855:	pop    rbx
   140005856:	ret    
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	mov    QWORD PTR [rsp+0x8],rbx
   140005865:	mov    QWORD PTR [rsp+0x10],rbp
   14000586a:	mov    QWORD PTR [rsp+0x18],rsi
   14000586f:	push   rdi
   140005870:	push   r14
   140005872:	push   r15
   140005874:	sub    rsp,0x20
   140005878:	xor    r15d,r15d
   14000587b:	mov    rbp,rdx
   14000587e:	mov    rdi,rcx
   140005881:	mov    esi,0x1
   140005886:	test   rdx,rdx
   140005889:	je     0x14000594e
   14000588f:	mov    ebx,0x7fffffff
   140005894:	mov    rcx,rdx
   140005897:	mov    eax,ebx
   140005899:	cmp    WORD PTR [rcx],r15w
   14000589d:	je     0x1400058a8
   14000589f:	add    rcx,0x2
   1400058a3:	sub    rax,rsi
   1400058a6:	jne    0x140005899
   1400058a8:	test   rax,rax
   1400058ab:	je     0x1400058b5
   1400058ad:	mov    rdx,rbx
   1400058b0:	sub    rdx,rax
   1400058b3:	jmp    0x1400058b8
   1400058b5:	mov    rdx,r15
   1400058b8:	inc    rdx
   1400058bb:	mov    rcx,rdi
   1400058be:	call   0x14000565c
   1400058c3:	test   al,al
   1400058c5:	je     0x14000594e
   1400058cb:	mov    rax,rbx
   1400058ce:	mov    rcx,rbp
   1400058d1:	cmp    WORD PTR [rcx],r15w
   1400058d5:	je     0x1400058e0
   1400058d7:	add    rcx,0x2
   1400058db:	sub    rax,rsi
   1400058de:	jne    0x1400058d1
   1400058e0:	test   rax,rax
   1400058e3:	je     0x1400058ed
   1400058e5:	mov    rcx,rbx
   1400058e8:	sub    rcx,rax
   1400058eb:	jmp    0x1400058f0
   1400058ed:	mov    rcx,r15
   1400058f0:	mov    r14,QWORD PTR [rdi+0x108]
   1400058f7:	lea    rdx,[rcx+0x1]
   1400058fb:	test   r14,r14
   1400058fe:	je     0x140005992
   140005904:	mov    rax,rbx
   140005907:	mov    rcx,rbp
   14000590a:	cmp    WORD PTR [rcx],r15w
   14000590e:	je     0x140005919
   140005910:	add    rcx,0x2
   140005914:	sub    rax,rsi
   140005917:	jne    0x14000590a
   140005919:	test   rax,rax
   14000591c:	je     0x140005923
   14000591e:	sub    rbx,rax
   140005921:	jmp    0x140005926
   140005923:	mov    rbx,r15
   140005926:	inc    rbx
   140005929:	cmp    rdx,rbx
   14000592c:	cmovb  rbx,rdx
   140005930:	test   rbx,rbx
   140005933:	je     0x140005992
   140005935:	add    rbx,rbx
   140005938:	mov    rdx,rbp
   14000593b:	mov    r8,rbx
   14000593e:	mov    rcx,r14
   140005941:	call   0x140006660
   140005946:	mov    WORD PTR [rbx+r14*1-0x2],r15w
   14000594c:	jmp    0x140005992
   14000594e:	mov    rdx,rsi
   140005951:	mov    rcx,rdi
   140005954:	call   0x14000565c
   140005959:	test   al,al
   14000595b:	je     0x14000596a
   14000595d:	mov    rax,QWORD PTR [rdi+0x108]
   140005964:	mov    WORD PTR [rax],r15w
   140005968:	jmp    0x140005992
   14000596a:	mov    rcx,QWORD PTR [rdi+0x108]
   140005971:	test   rcx,rcx
   140005974:	je     0x140005984
   140005976:	lea    rax,[rdi+0x8]
   14000597a:	cmp    rcx,rax
   14000597d:	je     0x140005984
   14000597f:	call   0x140005bd0
   140005984:	mov    QWORD PTR [rdi+0x108],r15
   14000598b:	mov    QWORD PTR [rdi+0x110],r15
   140005992:	cmp    BYTE PTR [rdi+0x120],r15b
   140005999:	jne    0x1400059a4
   14000599b:	cmp    QWORD PTR [rdi+0x108],r15
   1400059a2:	jne    0x1400059a7
   1400059a4:	mov    esi,r15d
   1400059a7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059ac:	mov    al,sil
   1400059af:	mov    rsi,QWORD PTR [rsp+0x50]
   1400059b4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400059b9:	add    rsp,0x20
   1400059bd:	pop    r15
   1400059bf:	pop    r14
   1400059c1:	pop    rdi
   1400059c2:	ret    
   1400059c3:	int3   
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	mov    QWORD PTR [rsp+0x18],rbx
   1400059d1:	push   rdi
   1400059d2:	sub    rsp,0x160
   1400059d9:	mov    rax,QWORD PTR [rip+0x4628]        # 0x14000a008
   1400059e0:	xor    rax,rsp
   1400059e3:	mov    QWORD PTR [rsp+0x150],rax
   1400059eb:	mov    rdx,QWORD PTR [rdx+0x108]
   1400059f2:	mov    rbx,rcx
   1400059f5:	lea    rcx,[rsp+0x20]
   1400059fa:	call   0x1400057bc
   1400059ff:	mov    rcx,rbx
   140005a02:	call   0x140005b28
   140005a07:	lea    rcx,[rsp+0x20]
   140005a0c:	mov    r9,rax
   140005a0f:	call   0x140005b28
   140005a14:	mov    rcx,rbx
   140005a17:	lea    rdx,[rax+0x1]
   140005a1b:	add    rdx,r9
   140005a1e:	call   0x14000565c
   140005a23:	xor    edi,edi
   140005a25:	test   al,al
   140005a27:	je     0x140005ab7
   140005a2d:	mov    rcx,QWORD PTR [rbx+0x108]
   140005a34:	mov    rdx,QWORD PTR [rbx+0x110]
   140005a3b:	test   rcx,rcx
   140005a3e:	je     0x140005a9d
   140005a40:	mov    r10,QWORD PTR [rsp+0x128]
   140005a48:	test   r10,r10
   140005a4b:	je     0x140005a9d
   140005a4d:	test   rdx,rdx
   140005a50:	je     0x140005a61
   140005a52:	cmp    WORD PTR [rcx],di
   140005a55:	je     0x140005a61
   140005a57:	add    rcx,0x2
   140005a5b:	sub    rdx,0x1
   140005a5f:	jne    0x140005a52
   140005a61:	mov    eax,0x7fffffff
   140005a66:	mov    r9,r10
   140005a69:	mov    r8d,eax
   140005a6c:	cmp    WORD PTR [r9],di
   140005a70:	je     0x140005a7c
   140005a72:	add    r9,0x2
   140005a76:	sub    r8,0x1
   140005a7a:	jne    0x140005a6c
   140005a7c:	test   r8,r8
   140005a7f:	je     0x140005a86
   140005a81:	sub    rax,r8
   140005a84:	jmp    0x140005a89
   140005a86:	mov    rax,rdi
   140005a89:	lea    r8,[rax+0x1]
   140005a8d:	cmp    rdx,r8
   140005a90:	jb     0x140005a9d
   140005a92:	add    r8,r8
   140005a95:	mov    rdx,r10
   140005a98:	call   0x140006660
   140005a9d:	cmp    BYTE PTR [rbx+0x120],dil
   140005aa4:	jne    0x140005ab7
   140005aa6:	cmp    BYTE PTR [rsp+0x140],dil
   140005aae:	je     0x140005ab7
   140005ab0:	mov    BYTE PTR [rbx+0x120],0x1
   140005ab7:	lea    rcx,[rsp+0x20]
   140005abc:	call   0x140005814
   140005ac1:	mov    rax,rbx
   140005ac4:	mov    rcx,QWORD PTR [rsp+0x150]
   140005acc:	xor    rcx,rsp
   140005acf:	call   0x140005fd0
   140005ad4:	mov    rbx,QWORD PTR [rsp+0x180]
   140005adc:	add    rsp,0x160
   140005ae3:	pop    rdi
   140005ae4:	ret    
   140005ae5:	int3   
   140005ae6:	int3   
   140005ae7:	int3   
   140005ae8:	int3   
   140005ae9:	int3   
   140005aea:	int3   
   140005aeb:	int3   
   140005aec:	int3   
   140005aed:	int3   
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	mov    QWORD PTR [rsp+0x8],rbx
   140005af5:	push   rdi
   140005af6:	sub    rsp,0x20
   140005afa:	mov    ebx,edx
   140005afc:	mov    rdi,rcx
   140005aff:	call   0x140005814
   140005b04:	test   bl,0x1
   140005b07:	je     0x140005b11
   140005b09:	mov    rcx,rdi
   140005b0c:	call   0x140005bd0
   140005b11:	mov    rax,rdi
   140005b14:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b19:	add    rsp,0x20
   140005b1d:	pop    rdi
   140005b1e:	ret    
   140005b1f:	int3   
   140005b20:	int3   
   140005b21:	int3   
   140005b22:	int3   
   140005b23:	int3   
   140005b24:	int3   
   140005b25:	int3   
   140005b26:	int3   
   140005b27:	int3   
   140005b28:	mov    rdx,QWORD PTR [rcx+0x108]
   140005b2f:	xor    r8d,r8d
   140005b32:	test   rdx,rdx
   140005b35:	je     0x140005b57
   140005b37:	mov    eax,0x7fffffff
   140005b3c:	mov    ecx,eax
   140005b3e:	cmp    WORD PTR [rdx],r8w
   140005b42:	je     0x140005b4e
   140005b44:	add    rdx,0x2
   140005b48:	sub    rcx,0x1
   140005b4c:	jne    0x140005b3e
   140005b4e:	test   rcx,rcx
   140005b51:	je     0x140005b57
   140005b53:	sub    rax,rcx
   140005b56:	ret    
   140005b57:	mov    rax,r8
   140005b5a:	ret    
   140005b5b:	int3   
   140005b5c:	int3   
   140005b5d:	int3   
   140005b5e:	int3   
   140005b5f:	int3   
   140005b60:	int3   
   140005b61:	int3   
   140005b62:	int3   
   140005b63:	int3   
   140005b64:	mov    r11,rsp
   140005b67:	mov    QWORD PTR [r11+0x10],rbx
   140005b6b:	push   rdi
   140005b6c:	sub    rsp,0x40
   140005b70:	xor    eax,eax
   140005b72:	mov    DWORD PTR [rsp+0x30],0x3
   140005b7a:	mov    edi,r8d
   140005b7d:	mov    rbx,rcx
   140005b80:	mov    DWORD PTR [rsp+0x50],eax
   140005b84:	mov    DWORD PTR [rsp+0x68],0x4
   140005b8c:	cmp    DWORD PTR [rcx+0xc],eax
   140005b8f:	je     0x140005bb8
   140005b91:	mov    rcx,QWORD PTR [rcx]
   140005b94:	lea    rax,[r11+0x20]
   140005b98:	mov    QWORD PTR [r11-0x20],rax
   140005b9c:	lea    r9,[r11-0x18]
   140005ba0:	lea    rax,[r11+0x8]
   140005ba4:	xor    r8d,r8d
   140005ba7:	mov    QWORD PTR [r11-0x28],rax
   140005bab:	call   QWORD PTR [rip+0x145f]        # 0x140007010
   140005bb1:	mov    DWORD PTR [rbx+0x8],eax
   140005bb4:	mov    eax,DWORD PTR [rsp+0x50]
   140005bb8:	cmp    DWORD PTR [rbx+0x8],0x0
   140005bbc:	mov    rbx,QWORD PTR [rsp+0x58]
   140005bc1:	cmovne eax,edi
   140005bc4:	add    rsp,0x40
   140005bc8:	pop    rdi
   140005bc9:	ret    
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	jmp    0x1400061b4
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	int3   
   140005bd9:	int3   
   140005bda:	int3   
   140005bdb:	int3   
   140005bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140005be1:	push   rdi
   140005be2:	sub    rsp,0x20
   140005be6:	mov    rdi,rcx
   140005be9:	jmp    0x140005bfa
   140005beb:	mov    rcx,rdi
   140005bee:	call   0x1400061cc
   140005bf3:	test   eax,eax
   140005bf5:	je     0x140005c07
   140005bf7:	mov    rcx,rdi
   140005bfa:	call   0x1400061c0
   140005bff:	mov    rbx,rax
   140005c02:	test   rax,rax
   140005c05:	je     0x140005beb
   140005c07:	mov    rax,rbx
   140005c0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c0f:	add    rsp,0x20
   140005c13:	pop    rdi
   140005c14:	ret    
   140005c15:	int3   
   140005c16:	int3   
   140005c17:	int3   
   140005c18:	int3   
   140005c19:	int3   
   140005c1a:	int3   
   140005c1b:	int3   
   140005c1c:	int3   
   140005c1d:	int3   
   140005c1e:	int3   
   140005c1f:	int3   
   140005c20:	sub    rsp,0x28
   140005c24:	mov    eax,0x5a4d
   140005c29:	cmp    WORD PTR [rip+0xffffffffffffa3d0],ax        # 0x140000000
   140005c30:	je     0x140005c36
   140005c32:	xor    eax,eax
   140005c34:	jmp    0x140005c85
   140005c36:	movsxd rcx,DWORD PTR [rip+0xffffffffffffa3ff]        # 0x14000003c
   140005c3d:	lea    rax,[rip+0xffffffffffffa3bc]        # 0x140000000
   140005c44:	add    rcx,rax
   140005c47:	cmp    DWORD PTR [rcx],0x4550
   140005c4d:	jne    0x140005c32
   140005c4f:	movzx  eax,WORD PTR [rcx+0x18]
   140005c53:	cmp    eax,0x10b
   140005c58:	je     0x140005c74
   140005c5a:	cmp    eax,0x20b
   140005c5f:	jne    0x140005c32
   140005c61:	xor    eax,eax
   140005c63:	cmp    DWORD PTR [rcx+0x84],0xe
   140005c6a:	jbe    0x140005c85
   140005c6c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005c72:	jmp    0x140005c82
   140005c74:	xor    eax,eax
   140005c76:	cmp    DWORD PTR [rcx+0x74],0xe
   140005c7a:	jbe    0x140005c85
   140005c7c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005c82:	setne  al
   140005c85:	mov    ecx,0x2
   140005c8a:	mov    DWORD PTR [rip+0x43c0],eax        # 0x14000a050
   140005c90:	call   0x1400062a8
   140005c95:	mov    ecx,eax
   140005c97:	call   QWORD PTR [rip+0x168b]        # 0x140007328
   140005c9d:	mov    rcx,QWORD PTR [rip+0x1634]        # 0x1400072d8
   140005ca4:	or     rax,0xffffffffffffffff
   140005ca8:	mov    QWORD PTR [rip+0x4949],rax        # 0x14000a5f8
   140005caf:	mov    QWORD PTR [rip+0x494a],rax        # 0x14000a600
   140005cb6:	mov    eax,DWORD PTR [rip+0x4920]        # 0x14000a5dc
   140005cbc:	mov    DWORD PTR [rcx],eax
   140005cbe:	mov    rcx,QWORD PTR [rip+0x160b]        # 0x1400072d0
   140005cc5:	mov    eax,DWORD PTR [rip+0x4905]        # 0x14000a5d0
   140005ccb:	mov    DWORD PTR [rcx],eax
   140005ccd:	call   0x140006300
   140005cd2:	cmp    DWORD PTR [rip+0x4327],0x0        # 0x14000a000
   140005cd9:	jne    0x140005ce8
   140005cdb:	lea    rcx,[rip+0x61e]        # 0x140006300
   140005ce2:	call   QWORD PTR [rip+0x1610]        # 0x1400072f8
   140005ce8:	xor    eax,eax
   140005cea:	add    rsp,0x28
   140005cee:	ret    
   140005cef:	int3   
   140005cf0:	int3   
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	sub    rsp,0x38
   140005d04:	mov    eax,DWORD PTR [rip+0x48ce]        # 0x14000a5d8
   140005d0a:	lea    r8,[rip+0x4337]        # 0x14000a048
   140005d11:	mov    r9d,DWORD PTR [rip+0x48bc]        # 0x14000a5d4
   140005d18:	lea    rdx,[rip+0x4321]        # 0x14000a040
   140005d1f:	mov    DWORD PTR [rip+0x432f],eax        # 0x14000a054
   140005d25:	lea    rcx,[rip+0x430c]        # 0x14000a038
   140005d2c:	lea    rax,[rip+0x4321]        # 0x14000a054
   140005d33:	mov    QWORD PTR [rsp+0x20],rax
   140005d38:	call   QWORD PTR [rip+0x1552]        # 0x140007290
   140005d3e:	mov    DWORD PTR [rip+0x42f8],eax        # 0x14000a03c
   140005d44:	add    rsp,0x38
   140005d48:	ret    
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	sub    rsp,0x28
   140005d54:	call   0x1400063f4
   140005d59:	add    rsp,0x28
   140005d5d:	jmp    0x140005d68
   140005d62:	int3   
   140005d63:	int3   
   140005d64:	int3   
   140005d65:	int3   
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	mov    rax,rsp
   140005d6b:	mov    QWORD PTR [rax+0x8],rbx
   140005d6f:	mov    QWORD PTR [rax+0x10],rsi
   140005d73:	mov    QWORD PTR [rax+0x18],rdi
   140005d77:	push   r15
   140005d79:	sub    rsp,0xb0
   140005d80:	and    DWORD PTR [rsp+0x20],0x0
   140005d85:	lea    rcx,[rax-0x78]
   140005d89:	call   QWORD PTR [rip+0x13e9]        # 0x140007178
   140005d8f:	nop
   140005d90:	mov    rax,QWORD PTR gs:0x30
   140005d99:	mov    rbx,QWORD PTR [rax+0x8]
   140005d9d:	xor    esi,esi
   140005d9f:	xor    eax,eax
   140005da1:	lock cmpxchg QWORD PTR [rip+0x485e],rbx        # 0x14000a608
   140005daa:	je     0x140005dc5
   140005dac:	cmp    rax,rbx
   140005daf:	jne    0x140005db8
   140005db1:	mov    esi,0x1
   140005db6:	jmp    0x140005dc5
   140005db8:	mov    ecx,0x3e8
   140005dbd:	call   QWORD PTR [rip+0x13bd]        # 0x140007180
   140005dc3:	jmp    0x140005d9f
   140005dc5:	mov    eax,DWORD PTR [rip+0x4845]        # 0x14000a610
   140005dcb:	cmp    eax,0x1
   140005dce:	jne    0x140005dda
   140005dd0:	lea    ecx,[rax+0x1e]
   140005dd3:	call   0x1400062f4
   140005dd8:	jmp    0x140005e4b
   140005dda:	mov    eax,DWORD PTR [rip+0x4830]        # 0x14000a610
   140005de0:	test   eax,eax
   140005de2:	jne    0x140005e41
   140005de4:	mov    DWORD PTR [rip+0x4822],0x1        # 0x14000a610
   140005dee:	lea    r15,[rip+0x15e3]        # 0x1400073d8
   140005df5:	lea    rbx,[rip+0x15c4]        # 0x1400073c0
   140005dfc:	mov    QWORD PTR [rsp+0x38],rbx
   140005e01:	mov    DWORD PTR [rsp+0x30],eax
   140005e05:	cmp    rbx,r15
   140005e08:	jae    0x140005e33
   140005e0a:	test   eax,eax
   140005e0c:	jne    0x140005e37
   140005e0e:	mov    rdi,QWORD PTR [rbx]
   140005e11:	test   rdi,rdi
   140005e14:	je     0x140005e28
   140005e16:	mov    rcx,rdi
   140005e19:	mov    rax,QWORD PTR [rip+0x1578]        # 0x140007398
   140005e20:	call   rax
   140005e22:	call   rdi
   140005e24:	mov    DWORD PTR [rsp+0x30],eax
   140005e28:	add    rbx,0x8
   140005e2c:	mov    QWORD PTR [rsp+0x38],rbx
   140005e31:	jmp    0x140005e05
   140005e33:	test   eax,eax
   140005e35:	je     0x140005e4b
   140005e37:	mov    eax,0xff
   140005e3c:	jmp    0x140005fa4
   140005e41:	mov    DWORD PTR [rip+0x41e9],0x1        # 0x14000a034
   140005e4b:	mov    eax,DWORD PTR [rip+0x47bf]        # 0x14000a610
   140005e51:	cmp    eax,0x1
   140005e54:	jne    0x140005e73
   140005e56:	lea    rdx,[rip+0x155b]        # 0x1400073b8
   140005e5d:	lea    rcx,[rip+0x1544]        # 0x1400073a8
   140005e64:	call   0x1400064ca
   140005e69:	mov    DWORD PTR [rip+0x479d],0x2        # 0x14000a610
   140005e73:	test   esi,esi
   140005e75:	jne    0x140005e80
   140005e77:	xor    eax,eax
   140005e79:	xchg   QWORD PTR [rip+0x4788],rax        # 0x14000a608
   140005e80:	cmp    QWORD PTR [rip+0x4790],0x0        # 0x14000a618
   140005e88:	je     0x140005eb8
   140005e8a:	lea    rcx,[rip+0x4787]        # 0x14000a618
   140005e91:	call   0x140006360
   140005e96:	test   eax,eax
   140005e98:	je     0x140005eb8
   140005e9a:	mov    rbx,QWORD PTR [rip+0x4777]        # 0x14000a618
   140005ea1:	mov    rcx,rbx
   140005ea4:	mov    rax,QWORD PTR [rip+0x14ed]        # 0x140007398
   140005eab:	call   rax
   140005ead:	xor    r8d,r8d
   140005eb0:	lea    edx,[r8+0x2]
   140005eb4:	xor    ecx,ecx
   140005eb6:	call   rbx
   140005eb8:	mov    rax,QWORD PTR [rip+0x1421]        # 0x1400072e0
   140005ebf:	mov    rbx,QWORD PTR [rax]
   140005ec2:	mov    QWORD PTR [rsp+0x28],rbx
   140005ec7:	mov    edi,DWORD PTR [rsp+0x20]
   140005ecb:	cmp    BYTE PTR [rbx],0x20
   140005ece:	ja     0x140005f43
   140005ed0:	cmp    BYTE PTR [rbx],0x0
   140005ed3:	je     0x140005ed9
   140005ed5:	test   edi,edi
   140005ed7:	jne    0x140005f43
   140005ed9:	mov    al,BYTE PTR [rbx]
   140005edb:	dec    al
   140005edd:	cmp    al,0x1f
   140005edf:	ja     0x140005eeb
   140005ee1:	inc    rbx
   140005ee4:	mov    QWORD PTR [rsp+0x28],rbx
   140005ee9:	jmp    0x140005ed9
   140005eeb:	mov    ecx,DWORD PTR [rsp+0x7c]
   140005eef:	movzx  eax,WORD PTR [rsp+0x80]
   140005ef7:	mov    r9d,0xa
   140005efd:	and    cl,0x1
   140005f00:	cmovne r9d,eax
   140005f04:	mov    r8,rbx
   140005f07:	xor    edx,edx
   140005f09:	lea    rcx,[rip+0xffffffffffffa0f0]        # 0x140000000
   140005f10:	call   0x140001e38
   140005f15:	mov    DWORD PTR [rip+0x4115],eax        # 0x14000a030
   140005f1b:	cmp    DWORD PTR [rip+0x412e],0x0        # 0x14000a050
   140005f22:	jne    0x140005f2c
   140005f24:	mov    ecx,eax
   140005f26:	call   QWORD PTR [rip+0x13ec]        # 0x140007318
   140005f2c:	cmp    DWORD PTR [rip+0x4101],0x0        # 0x14000a034
   140005f33:	jne    0x140005f41
   140005f35:	call   QWORD PTR [rip+0x13cd]        # 0x140007308
   140005f3b:	mov    eax,DWORD PTR [rip+0x40ef]        # 0x14000a030
   140005f41:	jmp    0x140005fa4
   140005f43:	cmp    BYTE PTR [rbx],0x22
   140005f46:	jne    0x140005f55
   140005f48:	xor    eax,eax
   140005f4a:	test   edi,edi
   140005f4c:	sete   al
   140005f4f:	mov    edi,eax
   140005f51:	mov    DWORD PTR [rsp+0x20],eax
   140005f55:	movzx  ecx,BYTE PTR [rbx]
   140005f58:	call   QWORD PTR [rip+0x13a2]        # 0x140007300
   140005f5e:	test   eax,eax
   140005f60:	je     0x140005f6a
   140005f62:	inc    rbx
   140005f65:	mov    QWORD PTR [rsp+0x28],rbx
   140005f6a:	inc    rbx
   140005f6d:	mov    QWORD PTR [rsp+0x28],rbx
   140005f72:	jmp    0x140005ecb
   140005f77:	mov    DWORD PTR [rip+0x40b3],eax        # 0x14000a030
   140005f7d:	cmp    DWORD PTR [rip+0x40cc],0x0        # 0x14000a050
   140005f84:	jne    0x140005f8f
   140005f86:	mov    ecx,eax
   140005f88:	call   QWORD PTR [rip+0x1382]        # 0x140007310
   140005f8e:	int3   
   140005f8f:	cmp    DWORD PTR [rip+0x409e],0x0        # 0x14000a034
   140005f96:	jne    0x140005fa4
   140005f98:	call   QWORD PTR [rip+0x136a]        # 0x140007308
   140005f9e:	mov    eax,DWORD PTR [rip+0x408c]        # 0x14000a030
   140005fa4:	lea    r11,[rsp+0xb0]
   140005fac:	mov    rbx,QWORD PTR [r11+0x10]
   140005fb0:	mov    rsi,QWORD PTR [r11+0x18]
   140005fb4:	mov    rdi,QWORD PTR [r11+0x20]
   140005fb8:	mov    rsp,r11
   140005fbb:	pop    r15
   140005fbd:	ret    
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	int3   
   140005fc1:	int3   
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005fd0:	cmp    rcx,QWORD PTR [rip+0x4031]        # 0x14000a008
   140005fd7:	jne    0x140005fe9
   140005fd9:	rol    rcx,0x10
   140005fdd:	test   cx,0xffff
   140005fe2:	jne    0x140005fe5
   140005fe4:	ret    
   140005fe5:	ror    rcx,0x10
   140005fe9:	jmp    0x140006030
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	int3   
   140005ff1:	int3   
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	rex push rbx
   140005ff6:	sub    rsp,0x20
   140005ffa:	mov    rbx,rcx
   140005ffd:	xor    ecx,ecx
   140005fff:	call   QWORD PTR [rip+0x11ab]        # 0x1400071b0
   140006005:	mov    rcx,rbx
   140006008:	call   QWORD PTR [rip+0x119a]        # 0x1400071a8
   14000600e:	call   QWORD PTR [rip+0x11a4]        # 0x1400071b8
   140006014:	mov    rcx,rax
   140006017:	mov    edx,0xc0000409
   14000601c:	add    rsp,0x20
   140006020:	pop    rbx
   140006021:	rex.W jmp QWORD PTR [rip+0x1198]        # 0x1400071c0
   140006028:	int3   
   140006029:	int3   
   14000602a:	int3   
   14000602b:	int3   
   14000602c:	int3   
   14000602d:	int3   
   14000602e:	int3   
   14000602f:	int3   
   140006030:	mov    QWORD PTR [rsp+0x8],rcx
   140006035:	sub    rsp,0x88
   14000603c:	lea    rcx,[rip+0x40bd]        # 0x14000a100
   140006043:	call   QWORD PTR [rip+0x1127]        # 0x140007170
   140006049:	mov    rax,QWORD PTR [rip+0x41a8]        # 0x14000a1f8
   140006050:	mov    QWORD PTR [rsp+0x48],rax
   140006055:	xor    r8d,r8d
   140006058:	lea    rdx,[rsp+0x50]
   14000605d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006062:	call   QWORD PTR [rip+0x1138]        # 0x1400071a0
   140006068:	mov    QWORD PTR [rsp+0x40],rax
   14000606d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006073:	je     0x1400060b7
   140006075:	mov    QWORD PTR [rsp+0x38],0x0
   14000607e:	lea    rax,[rsp+0x58]
   140006083:	mov    QWORD PTR [rsp+0x30],rax
   140006088:	lea    rax,[rsp+0x60]
   14000608d:	mov    QWORD PTR [rsp+0x28],rax
   140006092:	lea    rax,[rip+0x4067]        # 0x14000a100
   140006099:	mov    QWORD PTR [rsp+0x20],rax
   14000609e:	mov    r9,QWORD PTR [rsp+0x40]
   1400060a3:	mov    r8,QWORD PTR [rsp+0x48]
   1400060a8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400060ad:	xor    ecx,ecx
   1400060af:	call   QWORD PTR [rip+0x10e3]        # 0x140007198
   1400060b5:	jmp    0x1400060da
   1400060b7:	mov    rax,QWORD PTR [rip+0x40da]        # 0x14000a198
   1400060be:	mov    rax,QWORD PTR [rax]
   1400060c1:	mov    QWORD PTR [rip+0x4130],rax        # 0x14000a1f8
   1400060c8:	mov    rax,QWORD PTR [rip+0x40c9]        # 0x14000a198
   1400060cf:	add    rax,0x8
   1400060d3:	mov    QWORD PTR [rip+0x40be],rax        # 0x14000a198
   1400060da:	mov    rax,QWORD PTR [rip+0x4117]        # 0x14000a1f8
   1400060e1:	mov    QWORD PTR [rip+0x3f88],rax        # 0x14000a070
   1400060e8:	mov    rax,QWORD PTR [rsp+0x90]
   1400060f0:	mov    QWORD PTR [rip+0x4089],rax        # 0x14000a180
   1400060f7:	mov    DWORD PTR [rip+0x3f5f],0xc0000409        # 0x14000a060
   140006101:	mov    DWORD PTR [rip+0x3f59],0x1        # 0x14000a064
   14000610b:	mov    DWORD PTR [rip+0x3f63],0x3        # 0x14000a078
   140006115:	mov    eax,0x8
   14000611a:	imul   rax,rax,0x0
   14000611e:	lea    rcx,[rip+0x3f5b]        # 0x14000a080
   140006125:	mov    QWORD PTR [rcx+rax*1],0x2
   14000612d:	mov    eax,0x8
   140006132:	imul   rax,rax,0x1
   140006136:	lea    rcx,[rip+0x3f43]        # 0x14000a080
   14000613d:	mov    rdx,QWORD PTR [rip+0x3ec4]        # 0x14000a008
   140006144:	mov    QWORD PTR [rcx+rax*1],rdx
   140006148:	mov    eax,0x8
   14000614d:	imul   rax,rax,0x2
   140006151:	lea    rcx,[rip+0x3f28]        # 0x14000a080
   140006158:	mov    rdx,QWORD PTR [rip+0x3eb1]        # 0x14000a010
   14000615f:	mov    QWORD PTR [rcx+rax*1],rdx
   140006163:	mov    eax,0x8
   140006168:	imul   rax,rax,0x0
   14000616c:	mov    rcx,QWORD PTR [rip+0x3e95]        # 0x14000a008
   140006173:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006178:	mov    eax,0x8
   14000617d:	imul   rax,rax,0x1
   140006181:	mov    rcx,QWORD PTR [rip+0x3e88]        # 0x14000a010
   140006188:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000618d:	lea    rcx,[rip+0x133c]        # 0x1400074d0
   140006194:	call   0x140005ff4
   140006199:	add    rsp,0x88
   1400061a0:	ret    
   1400061a1:	int3   
   1400061a2:	int3   
   1400061a3:	int3   
   1400061a4:	int3   
   1400061a5:	int3   
   1400061a6:	int3   
   1400061a7:	int3   
   1400061a8:	jmp    0x1400064fc
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	int3   
   1400061b1:	int3   
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	jmp    QWORD PTR [rip+0x10f6]        # 0x1400072b0
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	jmp    QWORD PTR [rip+0x10e2]        # 0x1400072a8
   1400061c6:	int3   
   1400061c7:	int3   
   1400061c8:	int3   
   1400061c9:	int3   
   1400061ca:	int3   
   1400061cb:	int3   
   1400061cc:	jmp    QWORD PTR [rip+0x10ce]        # 0x1400072a0
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	sub    rsp,0x28
   1400061e4:	mov    rax,QWORD PTR [rcx]
   1400061e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400061ed:	jne    0x140006212
   1400061ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400061f3:	jne    0x140006212
   1400061f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400061f8:	lea    eax,[rcx-0x19930520]
   1400061fe:	cmp    eax,0x2
   140006201:	jbe    0x14000620b
   140006203:	cmp    ecx,0x1994000
   140006209:	jne    0x140006212
   14000620b:	call   QWORD PTR [rip+0x10b7]        # 0x1400072c8
   140006211:	int3   
   140006212:	xor    eax,eax
   140006214:	add    rsp,0x28
   140006218:	ret    
   140006219:	int3   
   14000621a:	int3   
   14000621b:	int3   
   14000621c:	int3   
   14000621d:	int3   
   14000621e:	int3   
   14000621f:	int3   
   140006220:	sub    rsp,0x28
   140006224:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400061e0
   14000622b:	call   QWORD PTR [rip+0xf7f]        # 0x1400071b0
   140006231:	xor    eax,eax
   140006233:	add    rsp,0x28
   140006237:	ret    
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	int3   
   14000623d:	int3   
   14000623e:	jmp    QWORD PTR [rip+0x1054]        # 0x140007298
   140006244:	int3   
   140006245:	int3   
   140006246:	int3   
   140006247:	int3   
   140006248:	int3   
   140006249:	int3   
   14000624a:	int3   
   14000624b:	int3   
   14000624c:	sub    rsp,0x18
   140006250:	xor    edx,edx
   140006252:	lea    rax,[rcx-0x1]
   140006256:	cmp    rax,0xfffffffffffffffd
   14000625a:	ja     0x140006298
   14000625c:	mov    eax,0x5a4d
   140006261:	cmp    WORD PTR [rcx],ax
   140006264:	jne    0x140006290
   140006266:	cmp    DWORD PTR [rcx+0x3c],edx
   140006269:	jl     0x140006290
   14000626b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006272:	jae    0x140006290
   140006274:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006278:	add    rax,rcx
   14000627b:	mov    QWORD PTR [rsp],rax
   14000627f:	cmp    DWORD PTR [rax],0x4550
   140006285:	cmovne rax,rdx
   140006289:	mov    rdx,rax
   14000628c:	mov    QWORD PTR [rsp],rax
   140006290:	jmp    0x140006298
   140006292:	xor    edx,edx
   140006294:	mov    QWORD PTR [rsp],rdx
   140006298:	mov    rax,rdx
   14000629b:	add    rsp,0x18
   14000629f:	ret    
   1400062a0:	int3   
   1400062a1:	int3   
   1400062a2:	int3   
   1400062a3:	int3   
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	rex push rbx
   1400062aa:	sub    rsp,0x20
   1400062ae:	mov    ebx,ecx
   1400062b0:	xor    ecx,ecx
   1400062b2:	call   QWORD PTR [rip+0xe28]        # 0x1400070e0
   1400062b8:	test   rax,rax
   1400062bb:	je     0x1400062e5
   1400062bd:	mov    rcx,rax
   1400062c0:	call   0x14000624c
   1400062c5:	test   rax,rax
   1400062c8:	je     0x1400062e5
   1400062ca:	mov    ecx,0x2
   1400062cf:	cmp    WORD PTR [rax+0x5c],cx
   1400062d3:	jne    0x1400062d9
   1400062d5:	mov    eax,ecx
   1400062d7:	jmp    0x1400062e7
   1400062d9:	cmp    WORD PTR [rax+0x5c],0x3
   1400062de:	mov    eax,0x1
   1400062e3:	je     0x1400062e7
   1400062e5:	mov    eax,ebx
   1400062e7:	add    rsp,0x20
   1400062eb:	pop    rbx
   1400062ec:	ret    
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	int3   
   1400062f1:	int3   
   1400062f2:	int3   
   1400062f3:	int3   
   1400062f4:	jmp    QWORD PTR [rip+0x1026]        # 0x140007320
   1400062fa:	int3   
   1400062fb:	int3   
   1400062fc:	int3   
   1400062fd:	int3   
   1400062fe:	int3   
   1400062ff:	int3   
   140006300:	xor    eax,eax
   140006302:	ret    
   140006303:	int3   
   140006304:	int3   
   140006305:	int3   
   140006306:	int3   
   140006307:	int3   
   140006308:	int3   
   140006309:	int3   
   14000630a:	int3   
   14000630b:	int3   
   14000630c:	int3   
   14000630d:	int3   
   14000630e:	int3   
   14000630f:	int3   
   140006310:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006314:	xor    r9d,r9d
   140006317:	add    r8,rcx
   14000631a:	mov    r10,rdx
   14000631d:	movzx  eax,WORD PTR [r8+0x14]
   140006322:	movzx  r11d,WORD PTR [r8+0x6]
   140006327:	add    rax,0x18
   14000632b:	add    rax,r8
   14000632e:	test   r11d,r11d
   140006331:	je     0x140006351
   140006333:	mov    edx,DWORD PTR [rax+0xc]
   140006336:	cmp    r10,rdx
   140006339:	jb     0x140006345
   14000633b:	mov    ecx,DWORD PTR [rax+0x8]
   14000633e:	add    ecx,edx
   140006340:	cmp    r10,rcx
   140006343:	jb     0x140006353
   140006345:	inc    r9d
   140006348:	add    rax,0x28
   14000634c:	cmp    r9d,r11d
   14000634f:	jb     0x140006333
   140006351:	xor    eax,eax
   140006353:	ret    
   140006354:	int3   
   140006355:	int3   
   140006356:	int3   
   140006357:	int3   
   140006358:	int3   
   140006359:	int3   
   14000635a:	int3   
   14000635b:	int3   
   14000635c:	int3   
   14000635d:	int3   
   14000635e:	int3   
   14000635f:	int3   
   140006360:	mov    QWORD PTR [rsp+0x8],rbx
   140006365:	push   rdi
   140006366:	sub    rsp,0x20
   14000636a:	mov    rbx,rcx
   14000636d:	lea    rdi,[rip+0xffffffffffff9c8c]        # 0x140000000
   140006374:	mov    rcx,rdi
   140006377:	call   0x1400063c0
   14000637c:	test   eax,eax
   14000637e:	je     0x1400063a2
   140006380:	sub    rbx,rdi
   140006383:	mov    rdx,rbx
   140006386:	mov    rcx,rdi
   140006389:	call   0x140006310
   14000638e:	test   rax,rax
   140006391:	je     0x1400063a2
   140006393:	mov    eax,DWORD PTR [rax+0x24]
   140006396:	shr    eax,0x1f
   140006399:	not    eax
   14000639b:	and    eax,0x1
   14000639e:	jmp    0x1400063a2
   1400063a0:	xor    eax,eax
   1400063a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063a7:	add    rsp,0x20
   1400063ab:	pop    rdi
   1400063ac:	ret    
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	int3   
   1400063b1:	int3   
   1400063b2:	int3   
   1400063b3:	int3   
   1400063b4:	int3   
   1400063b5:	int3   
   1400063b6:	int3   
   1400063b7:	int3   
   1400063b8:	int3   
   1400063b9:	int3   
   1400063ba:	int3   
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	mov    rax,rcx
   1400063c3:	mov    ecx,0x5a4d
   1400063c8:	cmp    WORD PTR [rax],cx
   1400063cb:	je     0x1400063d0
   1400063cd:	xor    eax,eax
   1400063cf:	ret    
   1400063d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400063d4:	add    rcx,rax
   1400063d7:	xor    eax,eax
   1400063d9:	cmp    DWORD PTR [rcx],0x4550
   1400063df:	jne    0x1400063ed
   1400063e1:	mov    edx,0x20b
   1400063e6:	cmp    WORD PTR [rcx+0x18],dx
   1400063ea:	sete   al
   1400063ed:	ret    
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	int3   
   1400063f1:	int3   
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400063f9:	push   rbp
   1400063fa:	mov    rbp,rsp
   1400063fd:	sub    rsp,0x20
   140006401:	and    QWORD PTR [rbp+0x18],0x0
   140006406:	movabs rbx,0x2b992ddfa232
   140006410:	mov    rax,QWORD PTR [rip+0x3bf1]        # 0x14000a008
   140006417:	cmp    rax,rbx
   14000641a:	jne    0x1400064af
   140006420:	lea    rcx,[rbp+0x18]
   140006424:	call   QWORD PTR [rip+0xdae]        # 0x1400071d8
   14000642a:	mov    rax,QWORD PTR [rbp+0x18]
   14000642e:	mov    QWORD PTR [rbp+0x10],rax
   140006432:	call   QWORD PTR [rip+0xd98]        # 0x1400071d0
   140006438:	mov    eax,eax
   14000643a:	xor    QWORD PTR [rbp+0x10],rax
   14000643e:	call   QWORD PTR [rip+0xcdc]        # 0x140007120
   140006444:	mov    eax,eax
   140006446:	xor    QWORD PTR [rbp+0x10],rax
   14000644a:	call   QWORD PTR [rip+0xd90]        # 0x1400071e0
   140006450:	mov    eax,eax
   140006452:	shl    rax,0x18
   140006456:	xor    QWORD PTR [rbp+0x10],rax
   14000645a:	call   QWORD PTR [rip+0xd80]        # 0x1400071e0
   140006460:	mov    eax,eax
   140006462:	lea    rcx,[rbp+0x10]
   140006466:	xor    rax,QWORD PTR [rbp+0x10]
   14000646a:	xor    rax,rcx
   14000646d:	lea    rcx,[rbp+0x20]
   140006471:	mov    QWORD PTR [rbp+0x10],rax
   140006475:	call   QWORD PTR [rip+0xd4d]        # 0x1400071c8
   14000647b:	mov    eax,DWORD PTR [rbp+0x20]
   14000647e:	movabs rcx,0xffffffffffff
   140006488:	shl    rax,0x20
   14000648c:	xor    rax,QWORD PTR [rbp+0x20]
   140006490:	xor    rax,QWORD PTR [rbp+0x10]
   140006494:	and    rax,rcx
   140006497:	movabs rcx,0x2b992ddfa233
   1400064a1:	cmp    rax,rbx
   1400064a4:	cmove  rax,rcx
   1400064a8:	mov    QWORD PTR [rip+0x3b59],rax        # 0x14000a008
   1400064af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400064b4:	not    rax
   1400064b7:	mov    QWORD PTR [rip+0x3b52],rax        # 0x14000a010
   1400064be:	add    rsp,0x20
   1400064c2:	pop    rbp
   1400064c3:	ret    
   1400064c4:	int3   
   1400064c5:	int3   
   1400064c6:	int3   
   1400064c7:	int3   
   1400064c8:	int3   
   1400064c9:	int3   
   1400064ca:	jmp    QWORD PTR [rip+0xe20]        # 0x1400072f0
   1400064d0:	int3   
   1400064d1:	int3   
   1400064d2:	int3   
   1400064d3:	int3   
   1400064d4:	int3   
   1400064d5:	int3   
   1400064d6:	jmp    QWORD PTR [rip+0xe0c]        # 0x1400072e8
   1400064dc:	int3   
   1400064dd:	int3   
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	int3   
   1400064e1:	int3   
   1400064e2:	int3   
   1400064e3:	int3   
   1400064e4:	int3   
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	ret    0x0
   1400064f3:	int3   
   1400064f4:	int3   
   1400064f5:	int3   
   1400064f6:	int3   
   1400064f7:	int3   
   1400064f8:	int3   
   1400064f9:	int3   
   1400064fa:	int3   
   1400064fb:	int3   
   1400064fc:	sub    rsp,0x38
   140006500:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006509:	call   0x140005bdc
   14000650e:	nop
   14000650f:	jmp    0x140006516
   140006511:	mov    rax,QWORD PTR [rsp+0x50]
   140006516:	add    rsp,0x38
   14000651a:	ret    
   14000651b:	int3   
   14000651c:	int3   
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	int3   
   140006521:	int3   
   140006522:	int3   
   140006523:	int3   
   140006524:	int3   
   140006525:	int3   
   140006526:	jmp    QWORD PTR [rip+0xd54]        # 0x140007280
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	int3   
   140006531:	int3   
   140006532:	int3   
   140006533:	int3   
   140006534:	sub    rsp,0x28
   140006538:	mov    r8,QWORD PTR [r9+0x38]
   14000653c:	mov    rcx,rdx
   14000653f:	mov    rdx,r9
   140006542:	call   0x140006558
   140006547:	mov    eax,0x1
   14000654c:	add    rsp,0x28
   140006550:	ret    
   140006551:	int3   
   140006552:	int3   
   140006553:	int3   
   140006554:	int3   
   140006555:	int3   
   140006556:	int3   
   140006557:	int3   
   140006558:	rex push rbx
   14000655a:	sub    rsp,0x20
   14000655e:	mov    r11d,DWORD PTR [r8]
   140006561:	mov    rbx,rdx
   140006564:	and    r11d,0xfffffff8
   140006568:	mov    r9,rcx
   14000656b:	test   BYTE PTR [r8],0x4
   14000656f:	mov    r10,rcx
   140006572:	je     0x140006587
   140006574:	mov    eax,DWORD PTR [r8+0x8]
   140006578:	movsxd r10,DWORD PTR [r8+0x4]
   14000657c:	neg    eax
   14000657e:	add    r10,rcx
   140006581:	movsxd rcx,eax
   140006584:	and    r10,rcx
   140006587:	movsxd rax,r11d
   14000658a:	mov    rdx,QWORD PTR [rax+r10*1]
   14000658e:	mov    rax,QWORD PTR [rbx+0x10]
   140006592:	mov    ecx,DWORD PTR [rax+0x8]
   140006595:	add    rcx,QWORD PTR [rbx+0x8]
   140006599:	test   BYTE PTR [rcx+0x3],0xf
   14000659d:	je     0x1400065ab
   14000659f:	movzx  eax,BYTE PTR [rcx+0x3]
   1400065a3:	and    eax,0xfffffff0
   1400065a6:	cdqe   
   1400065a8:	add    r9,rax
   1400065ab:	xor    r9,rdx
   1400065ae:	mov    rcx,r9
   1400065b1:	add    rsp,0x20
   1400065b5:	pop    rbx
   1400065b6:	jmp    0x140005fd0
   1400065bb:	int3   
   1400065bc:	int3   
   1400065bd:	int3   
   1400065be:	int3   
   1400065bf:	int3   
   1400065c0:	int3   
   1400065c1:	int3   
   1400065c2:	int3   
   1400065c3:	int3   
   1400065c4:	mov    rax,rsp
   1400065c7:	mov    QWORD PTR [rax+0x8],rbx
   1400065cb:	mov    QWORD PTR [rax+0x10],rbp
   1400065cf:	mov    QWORD PTR [rax+0x18],rsi
   1400065d3:	mov    QWORD PTR [rax+0x20],rdi
   1400065d7:	push   r14
   1400065d9:	sub    rsp,0x20
   1400065dd:	mov    r10,QWORD PTR [r9+0x38]
   1400065e1:	mov    rsi,rdx
   1400065e4:	mov    r14,r8
   1400065e7:	mov    rbp,rcx
   1400065ea:	mov    rdx,r9
   1400065ed:	mov    rcx,rsi
   1400065f0:	mov    rdi,r9
   1400065f3:	mov    ebx,DWORD PTR [r10]
   1400065f6:	shl    rbx,0x4
   1400065fa:	add    rbx,r10
   1400065fd:	lea    r8,[rbx+0x4]
   140006601:	call   0x140006558
   140006606:	mov    r11d,DWORD PTR [rbx+0x4]
   14000660a:	mov    edx,0x1
   14000660f:	mov    r10d,DWORD PTR [rbp+0x4]
   140006613:	mov    eax,r11d
   140006616:	and    eax,edx
   140006618:	and    r11d,0x2
   14000661c:	and    r10b,0x66
   140006620:	cmove  r11d,eax
   140006624:	test   r11d,r11d
   140006627:	je     0x14000663d
   140006629:	mov    r9,rdi
   14000662c:	mov    r8,r14
   14000662f:	mov    rdx,rsi
   140006632:	mov    rcx,rbp
   140006635:	call   QWORD PTR [rip+0xcad]        # 0x1400072e8
   14000663b:	mov    edx,eax
   14000663d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006642:	mov    eax,edx
   140006644:	mov    rbp,QWORD PTR [rsp+0x38]
   140006649:	mov    rsi,QWORD PTR [rsp+0x40]
   14000664e:	mov    rdi,QWORD PTR [rsp+0x48]
   140006653:	add    rsp,0x20
   140006657:	pop    r14
   140006659:	ret    
   14000665a:	int3   
   14000665b:	int3   
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	jmp    QWORD PTR [rip+0xc22]        # 0x140007288
   140006666:	int3   
   140006667:	int3   
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	jmp    QWORD PTR [rip+0xcc6]        # 0x140007338
   140006672:	int3   
   140006673:	int3   
   140006674:	int3   
   140006675:	int3   
   140006676:	int3   
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	int3   
   14000667d:	int3   
   14000667e:	int3   
   14000667f:	int3   
   140006680:	int3   
   140006681:	int3   
   140006682:	int3   
   140006683:	int3   
   140006684:	int3   
   140006685:	int3   
   140006686:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006690:	jmp    rax
   140006692:	int3   
   140006693:	int3   
   140006694:	int3   
   140006695:	int3   
   140006696:	int3   
   140006697:	int3   
   140006698:	int3   
   140006699:	int3   
   14000669a:	int3   
   14000669b:	int3   
   14000669c:	int3   
   14000669d:	int3   
   14000669e:	int3   
   14000669f:	int3   
   1400066a0:	int3   
   1400066a1:	int3   
   1400066a2:	int3   
   1400066a3:	int3   
   1400066a4:	int3   
   1400066a5:	int3   
   1400066a6:	rex push rbp
   1400066a8:	sub    rsp,0x20
   1400066ac:	mov    rbp,rdx
   1400066af:	mov    rax,QWORD PTR [rcx]
   1400066b2:	mov    rdx,rcx
   1400066b5:	mov    ecx,DWORD PTR [rax]
   1400066b7:	call   0x14000623e
   1400066bc:	nop
   1400066bd:	add    rsp,0x20
   1400066c1:	pop    rbp
   1400066c2:	ret    
   1400066c3:	int3   
   1400066c4:	int3   
   1400066c5:	int3   
   1400066c6:	int3   
   1400066c7:	int3   
   1400066c8:	int3   
   1400066c9:	int3   
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	int3   
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	rex push rbp
   1400066d2:	sub    rsp,0x20
   1400066d6:	mov    rbp,rdx
   1400066d9:	mov    rax,QWORD PTR [rcx]
   1400066dc:	xor    ecx,ecx
   1400066de:	cmp    DWORD PTR [rax],0xc0000005
   1400066e4:	sete   cl
   1400066e7:	mov    eax,ecx
   1400066e9:	add    rsp,0x20
   1400066ed:	pop    rbp
   1400066ee:	ret    
   1400066ef:	int3   
   1400066f0:	int3   
   1400066f1:	int3   
   1400066f2:	int3   
   1400066f3:	int3   
   1400066f4:	int3   
   1400066f5:	int3   
   1400066f6:	mov    QWORD PTR [rsp+0x10],rdx
   1400066fb:	push   rbp
   1400066fc:	sub    rsp,0x20
   140006700:	mov    rbp,rdx
   140006703:	and    QWORD PTR [rbp+0x50],0x0
   140006708:	lea    rax,[rip+0xfffffffffffffe02]        # 0x140006511
   14000670f:	add    rsp,0x20
   140006713:	pop    rbp
   140006714:	ret    
   140006715:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	xchg   esi,eax
   140007001:	xchg   ebx,eax
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007009:	xchg   ebx,eax
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	mov    dh,0x93
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	retf   0x93
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    ah,bl
   140007021:	xchg   ebx,eax
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	out    dx,al
   140007029:	xchg   ebx,eax
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	mov    BYTE PTR [rbx+0x0],dl
	...
   14000703e:	add    BYTE PTR [rax],al
   140007040:	cld    
   140007041:	cwde   
	...
   14000704e:	add    BYTE PTR [rax],al
   140007050:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140007057:	add    BYTE PTR [rax],bh
   140007059:	xchg   esp,eax
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	rex.WX xchg rsp,rax
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	(bad)  
   140007069:	xchg   esp,eax
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	ins    BYTE PTR es:[rdi],dx
   140007071:	xchg   esp,eax
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	js     0x14000700e
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	xchg   BYTE PTR [rax+rax*1+0x0],dl
   140007087:	add    BYTE PTR [rsp+rdx*4+0x0],dl
   14000708e:	add    BYTE PTR [rax],al
   140007090:	stos   BYTE PTR es:[rdi],al
   140007091:	xchg   esp,eax
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	mov    dh,0x94
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	(bad)  
   1400070a1:	xchg   esp,eax
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	(bad)  
   1400070a9:	xchg   esp,eax
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	loop   0x140007046
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	out    dx,al
   1400070b9:	xchg   esp,eax
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	cli    
   1400070c1:	xchg   esp,eax
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	or     BYTE PTR [rbp+0x0],dl
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	sbb    BYTE PTR [rax+rax*1+0x0],dl
   1400070d7:	add    BYTE PTR [rsi],ah
   1400070d9:	xchg   ebp,eax
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	cmp    BYTE PTR [rbp+0x0],dl
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	rex.WR xchg rbp,rax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	pop    rsi
   1400070f1:	xchg   ebp,eax
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	jo     0x14000708f
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	xchg   BYTE PTR [rbp+0x0],dl
   140007106:	add    BYTE PTR [rax],al
   140007108:	movabs ds:0xb400000000000095,al
   140007111:	xchg   ebp,eax
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rax],al
   140007118:	(bad)  
   140007119:	xchg   ebp,eax
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	(bad)  
   140007121:	xchg   ebp,eax
   140007122:	add    BYTE PTR [rax],al
   140007124:	add    BYTE PTR [rax],al
   140007126:	add    BYTE PTR [rax],al
   140007128:	(bad)  
   140007129:	xchg   ebp,eax
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	add    BYTE PTR [rax],al
   14000712e:	add    BYTE PTR [rax],al
   140007130:	(bad)  
   140007131:	xchg   ebp,eax
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	sbb    al,0x96
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	add    BYTE PTR [rax],al
   14000713e:	add    BYTE PTR [rax],al
   140007140:	sub    dl,BYTE PTR [rsi+0x0]
   140007146:	add    BYTE PTR [rax],al
   140007148:	ss xchg esi,eax
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	xchg   rsi,rax
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	pop    rsi
   140007159:	xchg   esi,eax
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	push   0xffffffffffffff96
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	jp     0x140007100
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	cmp    bl,BYTE PTR [rdx+0x0]
   140007176:	add    BYTE PTR [rax],al
   140007178:	sub    BYTE PTR [rdx+0x0],bl
   14000717e:	add    BYTE PTR [rax],al
   140007180:	and    BYTE PTR [rdx+0x0],bl
   140007186:	add    BYTE PTR [rax],al
   140007188:	or     dl,BYTE PTR [rax+rax*1+0x0]
   14000718f:	add    BYTE PTR [rdx],bl
   140007191:	xchg   ebp,eax
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	push   0x9a
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rsi-0x66],cl
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	jl     0x140007144
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	cwde   
   1400071b1:	(bad)  
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	add    BYTE PTR [rax],al
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	mov    dh,0x9a
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	retf   0x9a
   1400071c3:	add    BYTE PTR [rax],al
   1400071c5:	add    BYTE PTR [rax],al
   1400071c7:	add    dh,bl
   1400071c9:	(bad)  
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	clc    
   1400071d1:	(bad)  
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	(bad)  
   1400071d9:	fwait
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	sub    BYTE PTR [rbx+0x0],bl
	...
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	(bad)  
   1400071f1:	add    BYTE PTR [rax],al
   1400071f3:	add    BYTE PTR [rax],al
   1400071f5:	add    BYTE PTR [rax],al
   1400071f7:	add    BYTE PTR [rax],0x0
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	and    bl,BYTE PTR [rcx+0x0]
   140007206:	add    BYTE PTR [rax],al
   140007208:	cmp    bl,BYTE PTR [rcx+0x0]
   14000720e:	add    BYTE PTR [rax],al
   140007210:	int3   
   140007211:	cdq    
   140007212:	add    BYTE PTR [rax],al
   140007214:	add    BYTE PTR [rax],al
   140007216:	add    BYTE PTR [rax],al
   140007218:	test   al,0x99
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	add    BYTE PTR [rax],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	mov    bl,BYTE PTR [rcx+0x0]
   140007226:	add    BYTE PTR [rax],al
   140007228:	push   0xffffffffffffff99
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	add    BYTE PTR [rax],al
   14000722e:	add    BYTE PTR [rax],al
   140007230:	push   rdx
   140007231:	cdq    
	...
   14000723e:	add    BYTE PTR [rax],al
   140007240:	(bad)  
   140007241:	cdq    
	...
   14000724e:	add    BYTE PTR [rax],al
   140007250:	loopne 0x1400071e8
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	stos   BYTE PTR es:[rdi],al
   140007259:	xchg   esi,eax
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	add    BYTE PTR [rax],al
   14000725e:	add    BYTE PTR [rax],al
   140007260:	mov    eax,0x96
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rax+0x96],bl
   14000726d:	add    BYTE PTR [rax],al
   14000726f:	add    ah,cl
   140007271:	xchg   esi,eax
	...
   14000727e:	add    BYTE PTR [rax],al
   140007280:	sbb    bl,BYTE PTR [rax+0x0]
   140007286:	add    BYTE PTR [rax],al
   140007288:	cmp    BYTE PTR [rbx+0x0],bl
   14000728e:	add    BYTE PTR [rax],al
   140007290:	pop    rax
   140007291:	xchg   edi,eax
   140007292:	add    BYTE PTR [rax],al
   140007294:	add    BYTE PTR [rax],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	cmp    al,0x97
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	xor    BYTE PTR [rdi+0x0],dl
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	es xchg edi,eax
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	(bad)  
   1400072b1:	xchg   edi,eax
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	adc    al,0x97
   1400072ba:	add    BYTE PTR [rax],al
   1400072bc:	add    BYTE PTR [rax],al
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	(bad)  
   1400072c1:	xchg   edi,eax
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	(bad)  
   1400072c9:	cwde   
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	add    BYTE PTR [rax],al
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	out    dx,al
   1400072d1:	xchg   edi,eax
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	in     al,0x97
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	add    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	ficom  DWORD PTR [rdi+0x0]
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	ret    0x97
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rsi+0x97],dh
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rdx+0x97],ah
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rdi+rdx*4+0x0],dl
   140007306:	add    BYTE PTR [rax],al
   140007308:	mov    dl,BYTE PTR [rdi+0x0]
   14000730e:	add    BYTE PTR [rax],al
   140007310:	(bad)  
   140007311:	xchg   edi,eax
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	jp     0x1400072b1
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    BYTE PTR [rax],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	rex.WX xchg rdi,rax
   140007322:	add    BYTE PTR [rax],al
   140007324:	add    BYTE PTR [rax],al
   140007326:	add    BYTE PTR [rax],al
   140007328:	push   0x97
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    al,bh
   140007331:	xchg   esi,eax
   140007332:	add    BYTE PTR [rax],al
   140007334:	add    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax],al
   140007338:	rex.X
   140007339:	fwait
	...
   140007346:	add    BYTE PTR [rax],al
   140007348:	ficomp DWORD PTR [rax+0x0]
   14000734e:	add    BYTE PTR [rax],al
   140007350:	enter  0x98,0x0
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	mov    dh,0x98
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	sahf   
   140007361:	cwde   
   140007362:	add    BYTE PTR [rax],al
   140007364:	add    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	xchg   BYTE PTR [rax+0x0],bl
   14000736e:	add    BYTE PTR [rax],al
   140007370:	jbe    0x14000730a
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	cbw    
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	add    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	push   rdx
   140007381:	cwde   
   140007382:	add    BYTE PTR [rax],al
   140007384:	add    BYTE PTR [rax],al
   140007386:	add    BYTE PTR [rax],al
   140007388:	ds cwde 
	...
   140007396:	add    BYTE PTR [rax],al
   140007398:	lock add BYTE PTR fs:[rax+0x1],al
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rax+0x1400066],dl
	...
   1400073b1:	pop    rbp
   1400073b2:	add    BYTE PTR [rax+0x1],al
	...
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    BYTE PTR [rax],ah
   1400073c9:	pop    rsp
   1400073ca:	add    BYTE PTR [rax+0x1],al
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rax],ah
   1400073d1:	(bad)  
   1400073d2:	add    BYTE PTR [rax+0x1],al
	...
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax],dl
   1400073e1:	adc    BYTE PTR [rax],al
   1400073e3:	add    al,dl
   1400073e5:	adc    BYTE PTR [rax],al
   1400073e7:	add    al,dh
   1400073e9:	adc    BYTE PTR [rax],al
   1400073eb:	add    BYTE PTR [rax],dl
   1400073ed:	adc    eax,DWORD PTR [rax]
   1400073ef:	add    BYTE PTR [rax],dl
   1400073f1:	adc    al,0x0
   1400073f3:	add    BYTE PTR [rax],dl
   1400073f5:	adc    eax,0x16400000
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	jo     0x140007416
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	rcr    BYTE PTR [rax],0x0
   140007403:	add    BYTE PTR [rax],dl
   140007405:	sbb    DWORD PTR [rax],eax
   140007407:	add    BYTE PTR [rax],dh
   140007409:	sbb    al,0x0
   14000740b:	add    al,dl
   14000740d:	sbb    al,0x0
   14000740f:	add    al,ah
   140007411:	sbb    al,0x0
   140007413:	add    al,dh
   140007415:	sbb    al,0x0
   140007417:	add    BYTE PTR [rax],al
   140007419:	(bad)  
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	rcr    BYTE PTR [rdi],1
   14000741e:	add    BYTE PTR [rax],al
   140007420:	loopne 0x140007441
   140007422:	add    BYTE PTR [rax],al
   140007424:	lock (bad) 
   140007426:	add    BYTE PTR [rax],al
   140007428:	add    BYTE PTR [rax],ah
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	jo     0x140007450
   14000742e:	add    BYTE PTR [rax],al
   140007430:	and    BYTE PTR [rbx],ah
   140007432:	add    BYTE PTR [rax],al
   140007434:	and    BYTE PTR [rax+rax*1],ah
   140007437:	add    BYTE PTR [rax+0x24],dh
   14000743a:	add    BYTE PTR [rax],al
   14000743c:	nop
   14000743d:	and    eax,0x26900000
   140007442:	add    BYTE PTR [rax],al
   140007444:	adc    BYTE PTR [rdi],ah
   140007446:	add    BYTE PTR [rax],al
   140007448:	(bad)  
   140007449:	(bad)  
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	mov    al,0x27
   14000744e:	add    BYTE PTR [rax],al
   140007450:	push   rax
   140007451:	sub    BYTE PTR [rax],al
   140007453:	add    al,dl
   140007455:	sub    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rax+0x29],dh
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	lock sub DWORD PTR [rax],eax
   14000745f:	add    BYTE PTR [rax+0x20000031],al
   140007465:	xor    al,BYTE PTR [rax]
   140007467:	add    BYTE PTR [rax+0x32],al
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	shl    BYTE PTR [rdx],1
   14000746e:	add    BYTE PTR [rax],al
   140007470:	add    BYTE PTR [rdx+0x0],al
   140007473:	add    BYTE PTR [rax-0xfffffbe],al
   140007479:	rex.X add BYTE PTR [rax],al
   14000747c:	jo     0x1400074c1
   14000747e:	add    BYTE PTR [rax],al
   140007480:	loopne 0x1400074c5
   140007482:	add    BYTE PTR [rax],al
   140007484:	adc    BYTE PTR [rax+rax*1+0x0],al
   140007488:	add    BYTE PTR [rax+rax*1+0x0],0xb0
   14000748d:	add    BYTE PTR [rax],r8b
   140007490:	rol    BYTE PTR [rax+rax*1+0x0],1
   140007494:	loopne 0x1400074da
   140007496:	add    BYTE PTR [rax],al
   140007498:	and    BYTE PTR [rbp+0x0],al
   14000749b:	add    BYTE PTR [rax+0x47],ah
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	push   rax
   1400074a1:	rex.W add BYTE PTR [rax],al
   1400074a4:	lock pop rdx
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	and    BYTE PTR [rax+rax*1+0x0],bl
   1400074ac:	add    BYTE PTR [rbp+0x0],bl
   1400074af:	add    BYTE PTR [rax+0x5d],dl
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	xor    BYTE PTR [rax+0x0],ah
   1400074b7:	add    al,ah
   1400074b9:	(bad)  
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	and    BYTE PTR [rdx+0x0],ah
   1400074bf:	add    BYTE PTR [rax],al
   1400074c1:	movsxd eax,DWORD PTR [rax]
   1400074c3:	add    al,dh
   1400074c5:	add    BYTE PTR fs:[rax],al
	...
   1400074d0:	(bad)  
   1400074d1:	movabs al,ds:0xa100000000014000
   1400074da:	add    BYTE PTR [rax+0x1],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rdx],ah
   1400074e1:	add    eax,0x21993
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400074e9:	mov    es,WORD PTR [rax]
   1400074eb:	add    BYTE PTR [rcx],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rsi+rcx*4+0x60000],dh
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	loopne 0x140007488
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	and    BYTE PTR [rax],al
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	add    BYTE PTR [rax],al
   140007502:	add    BYTE PTR [rax],al
   140007504:	add    DWORD PTR [rax],eax
   140007506:	add    BYTE PTR [rax],al
   140007508:	cmp    al,0xad
   14000750a:	addr32 rex.WRXB (bad) 
   14000750d:	sbb    ecx,ebp
   14000750f:	rex.WR and dl,0x3a
   140007513:	ficom  WORD PTR [rax-0x2b]
   140007516:	add    ah,BYTE PTR [rdx+0xc9bb460]
   14000751c:	lods   al,BYTE PTR ds:[rsi]
   14000751d:	push   rcx
   14000751e:	rcl    BYTE PTR [rcx],1
   140007520:	nop
   140007521:	(bad)  
   140007522:	add    BYTE PTR [rdx+0x6cf86000],ch
   140007528:	mov    dl,0x95
   14000752a:	adc    ebx,DWORD PTR [rsi-0x7b]
   14000752d:	mov    dh,0xe3
   14000752f:	mov    r13b,bpl
   140007532:	loop   0x140007564
   140007534:	test   QWORD PTR [r9+rdx*8-0x2e9deed7],r13
   14000753c:	(bad)  
   14000753d:	rex.RB lods eax,DWORD PTR ds:[rsi]
   14000753f:	rex.B movabs eax,ds:0x13dceeabaf7eafd1
   140007549:	xchg   ecx,eax
   14000754a:	xor    edx,ebx
   14000754c:	out    dx,al
   14000754d:	push   rax
   14000754e:	or     BYTE PTR [rsp+rsi*4+0x60],0x57
   140007553:	rol    BYTE PTR [rip+0xffffffffc62c4ad4],1        # 0x1062cc02d
   140007559:	(bad)  
   14000755a:	(bad)  [rbx+0xf]
   14000755d:	adc    eax,0x8c7be11
   140007563:	add    BYTE PTR [rbx],ch
   140007565:	loop   0x140007570
   140007567:	(bad)  
   140007568:	(bad)  
   140007569:	cwde   
   14000756a:	mov    dl,BYTE PTR [rdx]
   14000756c:	fcom   QWORD PTR [rdx-0x30]
   14000756f:	adc    DWORD PTR [rsi+0x534544df],ebx
   140007575:	push   rsp
   140007576:	add    BYTE PTR [rax],al
   140007578:	xlat   BYTE PTR ds:[rbx]
   140007579:	add    BYTE PTR [rsi+0x30],dl
   14000757c:	mov    BYTE PTR [rax-0x29],dl
   14000757f:	rex.RX (bad) 
   140007581:	adc    eax,0xcd097bb7
   140007586:	mov    edx,0x1c307a
   14000758b:	rex add DWORD PTR [rax],eax
   14000758e:	add    BYTE PTR [rax],al
   140007590:	rcr    BYTE PTR [rax+rax*1],1
   140007593:	rex add DWORD PTR [rax],eax
   140007596:	add    BYTE PTR [rax],al
   140007598:	loopne 0x1400075b6
   14000759a:	add    BYTE PTR [rax+0x1],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    al,dh
   1400075a1:	sbb    al,0x0
   1400075a3:	rex add DWORD PTR [rax],eax
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	add    BYTE PTR [rsi],bl
   1400075aa:	add    BYTE PTR [rax+0x1],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    al,dh
   1400075b1:	(bad)  
   1400075b2:	add    BYTE PTR [rax+0x1],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    al,ah
   1400075b9:	(bad)  
   1400075ba:	add    BYTE PTR [rax+0x1],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    al,dl
   1400075c1:	(bad)  
   1400075c2:	add    BYTE PTR [rax+0x1],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rax],al
   1400075c9:	and    BYTE PTR [rax],al
   1400075cb:	rex add DWORD PTR [rax],eax
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	jo     0x1400075f4
   1400075d2:	add    BYTE PTR [rax+0x1],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rax],ah
   1400075d9:	and    eax,DWORD PTR [rax]
   1400075db:	rex add DWORD PTR [rax],eax
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	and    BYTE PTR [rax+rax*1],ah
   1400075e3:	rex add DWORD PTR [rax],eax
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	jo     0x14000760e
   1400075ea:	add    BYTE PTR [rax+0x1],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax+0x1400025],dl
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax+0x1400026],dl
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax],dl
   140007601:	(bad)  
   140007602:	add    BYTE PTR [rax+0x1],al
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rax+0x27],ah
   14000760a:	add    BYTE PTR [rax+0x1],al
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax+0x1400027],dh
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    BYTE PTR [rax+0x28],dl
   14000761a:	add    BYTE PTR [rax+0x1],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    al,dl
   140007621:	sub    BYTE PTR [rax],al
   140007623:	rex add DWORD PTR [rax],eax
   140007626:	add    BYTE PTR [rax],al
   140007628:	jo     0x140007653
   14000762a:	add    BYTE PTR [rax+0x1],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    al,dh
   140007631:	sub    DWORD PTR [rax],eax
   140007633:	rex add DWORD PTR [rax],eax
   140007636:	add    BYTE PTR [rax],al
   140007638:	adc    BYTE PTR [rax],dl
   14000763a:	add    BYTE PTR [rax+0x1],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    al,dl
   140007641:	adc    BYTE PTR [rax],al
   140007643:	rex add DWORD PTR [rax],eax
   140007646:	add    BYTE PTR [rax],al
   140007648:	lock adc BYTE PTR [rax],al
   14000764b:	rex add DWORD PTR [rax],eax
   14000764e:	add    BYTE PTR [rax],al
   140007650:	adc    BYTE PTR [rbx],dl
   140007652:	add    BYTE PTR [rax+0x1],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax],dl
   140007659:	adc    al,0x0
   14000765b:	rex add DWORD PTR [rax],eax
   14000765e:	add    BYTE PTR [rax],al
   140007660:	adc    BYTE PTR [rip+0x14000],dl        # 0x14001b666
   140007666:	add    BYTE PTR [rax],al
   140007668:	rex (bad) 
   14000766a:	add    BYTE PTR [rax+0x1],al
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rax],dl
   140007671:	sbb    DWORD PTR [rax],eax
   140007673:	rex add DWORD PTR [rax],eax
   140007676:	add    BYTE PTR [rax],al
   140007678:	jo     0x140007692
   14000767a:	add    BYTE PTR [rax+0x1],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    al,al
   140007681:	sbb    BYTE PTR [rax],al
   140007683:	rex add DWORD PTR [rax],eax
   140007686:	add    BYTE PTR [rax],al
   140007688:	xor    BYTE PTR [rcx],0x0
   14000768b:	rex add DWORD PTR [rax],eax
   14000768e:	add    BYTE PTR [rax],al
   140007690:	and    BYTE PTR [rdx],dh
   140007692:	add    BYTE PTR [rax+0x1],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    al,dl
   140007699:	xor    al,BYTE PTR [rax]
   14000769b:	rex add DWORD PTR [rax],eax
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	push   rax
   1400076a1:	rex.W add BYTE PTR [rax+0x1],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x47],ah
   1400076aa:	add    BYTE PTR [rax+0x1],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x1400042],al
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    al,dl
   1400076b9:	add    BYTE PTR [rax+0x1],r8b
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    al,dl
   1400076c1:	add    BYTE PTR [rax+0x1],r8b
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    al,dl
   1400076c9:	add    BYTE PTR [rax+0x1],r8b
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    al,ah
   1400076d1:	rex.XB add BYTE PTR [r8+0x1],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax],dl
   1400076d9:	add    BYTE PTR [rax+0x1],r8b
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax+0x1400044],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rax+0x1400044],dh
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    al,ah
   1400076f1:	add    BYTE PTR [rax+0x1],r8b
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rax+0x1400031],al
   1400076fd:	add    BYTE PTR [rax],al
   1400076ff:	add    BYTE PTR [rax],ah
   140007701:	xor    al,BYTE PTR [rax]
   140007703:	rex add DWORD PTR [rax],eax
   140007706:	add    BYTE PTR [rax],al
   140007708:	xor    al,BYTE PTR [rax]
   14000770b:	rex add DWORD PTR [rax],eax
   14000770e:	add    BYTE PTR [rax],al
   140007710:	and    BYTE PTR [rbp+0x0],al
   140007713:	rex add DWORD PTR [rax],eax
   140007716:	add    BYTE PTR [rax],al
   140007718:	add    BYTE PTR [rdx+0x0],al
   14000771b:	rex add DWORD PTR [rax],eax
   14000771e:	add    BYTE PTR [rax],al
   140007720:	add    BYTE PTR [rdx+0x0],0x40
   140007724:	add    DWORD PTR [rax],eax
   140007726:	add    BYTE PTR [rax],al
   140007728:	lock rex.X add BYTE PTR [rax+0x1],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rax+0x43],dh
   140007732:	add    BYTE PTR [rax+0x1],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    al,dl
   140007739:	add    BYTE PTR [rax+0x1],r8b
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    al,ah
   140007741:	rex.XB add BYTE PTR [r8+0x1],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rax],dl
   140007749:	add    BYTE PTR [rax+0x1],r8b
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rax+0x1400044],al
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rax+0x1400044],dh
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    al,ah
   140007761:	add    BYTE PTR [rax+0x1],r8b
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    al,dh
   140007769:	pop    rdx
   14000776a:	add    BYTE PTR [rax+0x1],al
   14000776d:	add    BYTE PTR [rax],al
   14000776f:	add    BYTE PTR [rdi+0x0],dl
   140007772:	imul   eax,DWORD PTR [rax],0x440061
   140007778:	imul   eax,DWORD PTR [rax],0x6c0061
   14000777e:	outs   dx,DWORD PTR ds:[rsi]
   14000777f:	add    BYTE PTR [rdi+0x0],ah
   140007782:	add    BYTE PTR [r8+0x0],r15b
   140007786:	je     0x140007788
   140007788:	add    BYTE PTR gs:[rsi+0x0],ch
   14000778c:	jae    0x14000778e
   14000778e:	imul   eax,DWORD PTR [rax],0x6e006f
   140007794:	rex.W add BYTE PTR [rcx+0x0],spl
   140007798:	outs   dx,BYTE PTR ds:[rsi]
   140007799:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000779d:	add    BYTE PTR [rbp+0x0],ah
   1400077a0:	jb     0x1400077a2
   1400077a2:	jae    0x1400077a4
   1400077a4:	add    BYTE PTR [rax],al
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	jae    0x1400077aa
   1400077aa:	je     0x1400077ac
   1400077ac:	imul   eax,DWORD PTR [rax],0x64002e
   1400077b2:	ins    BYTE PTR es:[rdi],dx
   1400077b3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400077b7:	add    BYTE PTR [rbx+0x65],dl
   1400077ba:	ins    BYTE PTR es:[rdi],dx
   1400077bb:	movsxd esi,DWORD PTR gs:[rsp+rax*2+0x65]
   1400077c0:	jbe    0x14000782b
   1400077c2:	movsxd esp,DWORD PTR [rbp+0x44]
   1400077c5:	imul   esp,DWORD PTR [rcx+0x6c],0x32676f
   1400077cc:	add    BYTE PTR [rax],al
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	push   rbx
   1400077d1:	add    BYTE PTR [rax+rax*1+0x49],dl
   1400077d5:	add    BYTE PTR [rdi+0x0],dl
   1400077d8:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   1400077dc:	add    BYTE PTR ss:[rax+rax*1],dh
	...
   1400077f0:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400077f4:	(bad)  
   1400077f5:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400077f9:	add    BYTE PTR [rsi+0x0],ch
   1400077fc:	add    BYTE PTR [eax],ah
   1400077ff:	add    BYTE PTR [rbp+0x0],dl
   140007802:	push   rbx
   140007803:	add    BYTE PTR [rax+rax*1+0x2c],al
   140007807:	add    BYTE PTR [rax],ah
   140007809:	add    BYTE PTR [rbx+0x0],ah
   14000780c:	(bad)  
   14000780d:	add    BYTE PTR [rsi+0x0],ch
   140007810:	outs   dx,BYTE PTR ds:[rsi]
   140007811:	add    BYTE PTR [rdi+0x0],ch
   140007814:	je     0x140007816
   140007816:	and    BYTE PTR [rax],al
   140007818:	outs   dx,DWORD PTR ds:[rsi]
   140007819:	add    BYTE PTR [rax+0x0],dh
   14000781c:	add    BYTE PTR gs:[rsi+0x0],ch
   140007820:	and    BYTE PTR [rax],al
   140007822:	add    BYTE PTR fs:[rbp+0x0],ah
   140007826:	jbe    0x140007828
   140007828:	imul   eax,DWORD PTR [rax],0x650063
   14000782e:	and    BYTE PTR [rax],al
   140007830:	jb     0x140007832
   140007832:	add    BYTE PTR gs:[rdi+0x0],ah
   140007836:	imul   eax,DWORD PTR [rax],0x740073
   14000783c:	jb     0x14000783e
   14000783e:	jns    0x140007840
   140007840:	and    BYTE PTR [rax],al
   140007842:	imul   eax,DWORD PTR [rax],0x65
   140007845:	add    BYTE PTR [rcx+0x0],bh
   140007848:	add    BYTE PTR cs:[rax],al
   14000784b:	add    BYTE PTR [rax],al
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rbx+0x0],al
   140007852:	jb     0x140007854
   140007854:	add    BYTE PTR gs:[rcx+0x0],ah
   140007858:	je     0x14000785a
   14000785a:	add    BYTE PTR gs:[rsi+0x0],al
   14000785e:	imul   eax,DWORD PTR [rax],0x65006c
   140007864:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140007868:	ins    DWORD PTR es:[rdi],dx
   140007869:	add    BYTE PTR [rbp+0x0],ah
   14000786c:	add    BYTE PTR [rax],al
   14000786e:	add    BYTE PTR [rax],al
   140007870:	rex.W add BYTE PTR [rcx+0x0],spl
   140007874:	jb     0x140007876
   140007876:	add    BYTE PTR fs:[rdi+0x0],dh
   14000787a:	(bad)  
   14000787b:	add    BYTE PTR [rdx+0x0],dh
   14000787e:	add    BYTE PTR gs:[rbx+0x0],al
   140007882:	outs   dx,DWORD PTR ds:[rsi]
   140007883:	add    BYTE PTR [rsi+0x0],ch
   140007886:	data16 add BYTE PTR [rcx+0x0],ch
   14000788a:	add    BYTE PTR [eax],al
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007893:	add    BYTE PTR [rcx+0x0],ah
   140007896:	add    BYTE PTR fs:[rcx+0x0],ch
   14000789a:	outs   dx,BYTE PTR ds:[rsi]
   14000789b:	add    BYTE PTR [rdi+0x0],ah
   14000789e:	and    BYTE PTR [rax],al
   1400078a0:	push   rbp
   1400078a1:	add    BYTE PTR [rbx+0x0],dl
   1400078a4:	add    BYTE PTR [rax+rax*1],r13b
   1400078a8:	and    BYTE PTR [rax],al
   1400078aa:	movsxd eax,DWORD PTR [rax]
   1400078ac:	(bad)  
   1400078ad:	add    BYTE PTR [rsi+0x0],ch
   1400078b0:	outs   dx,BYTE PTR ds:[rsi]
   1400078b1:	add    BYTE PTR [rdi+0x0],ch
   1400078b4:	je     0x1400078b6
   1400078b6:	and    BYTE PTR [rax],al
   1400078b8:	jb     0x1400078ba
   1400078ba:	add    BYTE PTR gs:[rcx+0x0],ah
   1400078be:	add    BYTE PTR fs:[rax],ah
   1400078c1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400078c5:	add    BYTE PTR [rsi+0x0],dh
   1400078c8:	imul   eax,DWORD PTR [rax],0x650063
   1400078ce:	and    BYTE PTR [rax],al
   1400078d0:	outs   dx,BYTE PTR ds:[rsi]
   1400078d1:	add    BYTE PTR [rcx+0x0],ah
   1400078d4:	ins    DWORD PTR es:[rdi],dx
   1400078d5:	add    BYTE PTR [rbp+0x0],ah
   1400078d8:	and    BYTE PTR [rax],al
   1400078da:	data16 add BYTE PTR [rdx+0x0],dh
   1400078de:	outs   dx,DWORD PTR ds:[rsi]
   1400078df:	add    BYTE PTR [rbp+0x0],ch
   1400078e2:	and    BYTE PTR [rax],al
   1400078e4:	jb     0x1400078e6
   1400078e6:	add    BYTE PTR gs:[rdi+0x0],ah
   1400078ea:	imul   eax,DWORD PTR [rax],0x740073
   1400078f0:	jb     0x1400078f2
   1400078f2:	jns    0x1400078f4
   1400078f4:	add    BYTE PTR cs:[rax],al
	...
   1400078ff:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007903:	add    BYTE PTR [rcx+0x0],ah
   140007906:	add    BYTE PTR fs:[rcx+0x0],ch
   14000790a:	outs   dx,BYTE PTR ds:[rsi]
   14000790b:	add    BYTE PTR [rdi+0x0],ah
   14000790e:	and    BYTE PTR [rax],al
   140007910:	push   rbp
   140007911:	add    BYTE PTR [rbx+0x0],dl
   140007914:	add    BYTE PTR [rax+rax*1],r13b
   140007918:	and    BYTE PTR [rax],al
   14000791a:	data16 add BYTE PTR [rcx+0x0],ah
   14000791e:	imul   eax,DWORD PTR [rax],0x65006c
   140007924:	add    BYTE PTR fs:[rax],ah
   140007927:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000792b:	add    BYTE PTR [rax],ah
   14000792d:	add    BYTE PTR [rbx+0x0],ah
   140007930:	jb     0x140007932
   140007932:	add    BYTE PTR gs:[rcx+0x0],ah
   140007936:	je     0x140007938
   140007938:	add    BYTE PTR gs:[rax],ah
   14000793b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000793f:	add    BYTE PTR [rsi+0x0],dh
   140007942:	imul   eax,DWORD PTR [rax],0x650063
   140007948:	and    BYTE PTR [rax],al
   14000794a:	movsxd eax,DWORD PTR [rax]
   14000794c:	outs   dx,DWORD PTR ds:[rsi]
   14000794d:	add    BYTE PTR [rsi+0x0],ch
   140007950:	je     0x140007952
   140007952:	jb     0x140007954
   140007954:	outs   dx,DWORD PTR ds:[rsi]
   140007955:	add    BYTE PTR [rax+rax*1+0x20],ch
   140007959:	add    BYTE PTR [rdx+0x0],ah
   14000795c:	ins    BYTE PTR es:[rdi],dx
   14000795d:	add    BYTE PTR [rdi+0x0],ch
   140007960:	movsxd eax,DWORD PTR [rax]
   140007962:	imul   eax,DWORD PTR [rax],0x2e
   140007965:	add    BYTE PTR [rax],ah
   140007967:	add    BYTE PTR [rbp+0x0],al
   14000796a:	jb     0x14000796c
   14000796c:	jb     0x14000796e
   14000796e:	outs   dx,DWORD PTR ds:[rsi]
   14000796f:	add    BYTE PTR [rdx+0x0],dh
   140007972:	and    BYTE PTR [rax],al
   140007974:	movsxd eax,DWORD PTR [rax]
   140007976:	outs   dx,DWORD PTR ds:[rsi]
   140007977:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000797b:	add    BYTE PTR [rax],ah
   14000797d:	add    BYTE PTR [rax],ch
   14000797f:	add    BYTE PTR [rax+0x0],ch
   140007982:	add    BYTE PTR gs:[rax+0x0],bh
   140007986:	sub    DWORD PTR [rax],eax
   140007988:	cmp    eax,0x31002500
   14000798d:	add    BYTE PTR [rcx],ah
   14000798f:	add    BYTE PTR [rax+0x0],bh
   140007992:	and    DWORD PTR [rax],eax
   140007994:	add    BYTE PTR cs:[rax],al
   140007997:	add    BYTE PTR [rbx+0x0],al
   14000799a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000799e:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   1400079a3:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300f0a9
   1400079a9:	add    BYTE PTR [rax+rax*1+0x73],bl
   1400079ad:	add    BYTE PTR [rax+0x0],ch
   1400079b0:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400079b5:	add    BYTE PTR [rbp+0x0],ah
   1400079b8:	js     0x1400079ba
   1400079ba:	pop    rsp
   1400079bb:	add    BYTE PTR [rip+0x7300],ah        # 0x14000ecc1
   1400079c1:	add    BYTE PTR [rax],al
   1400079c3:	add    BYTE PTR [rax],al
   1400079c5:	add    BYTE PTR [rax],al
   1400079c7:	add    BYTE PTR [rbx+0x0],dl
   1400079ca:	jne    0x1400079cc
   1400079cc:	(bad)  
   1400079cd:	add    BYTE PTR [rbx+0x0],al
   1400079d0:	ins    BYTE PTR es:[rdi],dx
   1400079d1:	add    BYTE PTR [rcx+0x0],ah
   1400079d4:	jae    0x1400079d6
   1400079d6:	jae    0x1400079d8
	...
   1400079e0:	push   rbx
   1400079e1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400079e5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400079e9:	add    BYTE PTR [rcx+0x0],cl
   1400079ec:	ins    DWORD PTR es:[rdi],dx
   1400079ed:	add    BYTE PTR [rcx+0x0],ah
   1400079f0:	add    BYTE PTR [ebp+0x0],ah
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	add    BYTE PTR [rbp+0x0],r12b
   1400079fc:	jbe    0x1400079fe
   1400079fe:	imul   eax,DWORD PTR [rax],0x650063
   140007a04:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140007a09:	add    BYTE PTR [rax],al
   140007a0b:	add    BYTE PTR [rax],al
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    BYTE PTR [rdi+0x0],dl
   140007a12:	imul   eax,DWORD PTR [rax],0x430061
   140007a18:	jb     0x140007a1a
   140007a1a:	add    BYTE PTR gs:[rcx+0x0],ah
   140007a1e:	je     0x140007a20
   140007a20:	add    BYTE PTR gs:[rax+rax*1+0x65],al
   140007a25:	add    BYTE PTR [rsi+0x0],dh
   140007a28:	imul   eax,DWORD PTR [rax],0x650063
   140007a2e:	push   rdx
   140007a2f:	add    BYTE PTR [rbp+0x0],ah
   140007a32:	add    BYTE PTR [ecx+0x0],ch
   140007a36:	jae    0x140007a38
   140007a38:	je     0x140007a3a
   140007a3a:	jb     0x140007a3c
   140007a3c:	jns    0x140007a3e
   140007a3e:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140007a42:	jae    0x140007a44
   140007a44:	je     0x140007a46
   140007a46:	and    BYTE PTR [rax],al
   140007a48:	data16 add BYTE PTR [rcx+0x0],ah
   140007a4c:	imul   eax,DWORD PTR [rax],0x65006c
   140007a52:	add    BYTE PTR fs:[rax],al
   140007a55:	add    BYTE PTR [rax],al
   140007a57:	add    BYTE PTR [rbx+0x0],al
   140007a5a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140007a5e:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   140007a63:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00ed69
   140007a69:	add    BYTE PTR [rcx+0x0],cl
   140007a6c:	outs   dx,BYTE PTR ds:[rsi]
   140007a6d:	add    BYTE PTR [rax+0x0],dl
   140007a70:	jb     0x140007a72
   140007a72:	outs   dx,DWORD PTR ds:[rsi]
   140007a73:	add    BYTE PTR [rbx+0x0],ah
   140007a76:	push   rbx
   140007a77:	add    BYTE PTR [rbp+0x0],ah
   140007a7a:	jb     0x140007a7c
   140007a7c:	jbe    0x140007a7e
   140007a7e:	add    BYTE PTR gs:[rdx+0x0],dh
   140007a82:	xor    eax,DWORD PTR [rax]
   140007a84:	xor    al,BYTE PTR [rax]
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	push   rsp
   140007a89:	add    BYTE PTR [rax+0x0],ch
   140007a8c:	jb     0x140007a8e
   140007a8e:	add    BYTE PTR gs:[rcx+0x0],ah
   140007a92:	add    BYTE PTR fs:[rcx+0x0],ch
   140007a96:	outs   dx,BYTE PTR ds:[rsi]
   140007a97:	add    BYTE PTR [rdi+0x0],ah
   140007a9a:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140007a9e:	add    BYTE PTR fs:[rbp+0x0],ah
   140007aa2:	ins    BYTE PTR es:[rdi],dx
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rdx+0x0],al
   140007aaa:	outs   dx,DWORD PTR ds:[rsi]
   140007aab:	add    BYTE PTR [rax+rax*1+0x68],dh
	...
   140007ab7:	add    BYTE PTR [rsi+0x0],al
   140007aba:	jb     0x140007abc
   140007abc:	add    BYTE PTR gs:[rbp+0x0],ah
	...
   140007ac8:	rex.R ins BYTE PTR es:[rdi],dx
   140007aca:	ins    BYTE PTR es:[rdi],dx
   140007acb:	rex.RXB
   140007acc:	gs je  0x140007b12
   140007acf:	ins    BYTE PTR es:[rdi],dx
   140007ad0:	(bad)  
   140007ad1:	jae    0x140007b46
   140007ad3:	rex.WRXB (bad) 
   140007ad5:	push   0x65
   140007ad7:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140007adb:	add    BYTE PTR [rax],al
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rbp+0x0],cl
   140007ae2:	jns    0x140007ae4
   140007ae4:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007ae8:	rex.XB add BYTE PTR [r10+0x0],sil
   140007aec:	add    BYTE PTR gs:[rcx+0x0],ah
   140007af0:	je     0x140007af2
   140007af2:	add    BYTE PTR gs:[rcx+0x0],cl
   140007af6:	outs   dx,BYTE PTR ds:[rsi]
   140007af7:	add    BYTE PTR [rbx+0x0],dh
   140007afa:	je     0x140007afc
   140007afc:	(bad)  
   140007afd:	add    BYTE PTR [rsi+0x0],ch
   140007b00:	movsxd eax,DWORD PTR [rax]
   140007b02:	add    BYTE PTR gs:[rdi+0x0],dl
   140007b06:	sub    al,0x0
   140007b08:	and    BYTE PTR [rax],al
   140007b0a:	add    BYTE PTR [rax+rax*1+0x4c],r9b
   140007b0f:	add    BYTE PTR [rax],ah
   140007b11:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140007b15:	add    BYTE PTR [rbp+0x0],ah
   140007b18:	jae    0x140007b1a
   140007b1a:	and    BYTE PTR [rax],al
   140007b1c:	outs   dx,BYTE PTR ds:[rsi]
   140007b1d:	add    BYTE PTR [rdi+0x0],ch
   140007b20:	je     0x140007b22
   140007b22:	and    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR gs:[rax+0x0],bh
   140007b28:	jo     0x140007b2a
   140007b2a:	outs   dx,DWORD PTR ds:[rsi]
   140007b2b:	add    BYTE PTR [rdx+0x0],dh
   140007b2e:	je     0x140007b30
   140007b30:	and    BYTE PTR [rax],al
   140007b32:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140007b36:	je     0x140007b38
   140007b38:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140007b3d:	add    BYTE PTR [rbx+0x0],dh
   140007b40:	jae    0x140007b42
   140007b42:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   140007b46:	push   0x0
   140007b48:	add    BYTE PTR gs:[rbx+0x0],ah
   140007b4c:	je     0x140007b4e
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	rex.WRB add BYTE PTR [r9+0x0],r15b
   140007b54:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007b58:	rex.XB add BYTE PTR [r10+0x0],sil
   140007b5c:	add    BYTE PTR gs:[rcx+0x0],ah
   140007b60:	je     0x140007b62
   140007b62:	add    BYTE PTR gs:[rcx+0x0],cl
   140007b66:	outs   dx,BYTE PTR ds:[rsi]
   140007b67:	add    BYTE PTR [rbx+0x0],dh
   140007b6a:	je     0x140007b6c
   140007b6c:	(bad)  
   140007b6d:	add    BYTE PTR [rsi+0x0],ch
   140007b70:	movsxd eax,DWORD PTR [rax]
   140007b72:	add    BYTE PTR gs:[rdi+0x0],dl
   140007b76:	sub    al,0x0
   140007b78:	and    BYTE PTR [rax],al
   140007b7a:	add    BYTE PTR [rax+rax*1+0x4c],r9b
   140007b7f:	add    BYTE PTR [rax],ah
   140007b81:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140007b85:	add    BYTE PTR [rbp+0x0],ah
   140007b88:	jae    0x140007b8a
   140007b8a:	and    BYTE PTR [rax],al
   140007b8c:	outs   dx,BYTE PTR ds:[rsi]
   140007b8d:	add    BYTE PTR [rdi+0x0],ch
   140007b90:	je     0x140007b92
   140007b92:	and    BYTE PTR [rax],al
   140007b94:	add    BYTE PTR gs:[rax+0x0],bh
   140007b98:	imul   eax,DWORD PTR [rax],0x740073
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	rex.WRB add BYTE PTR [r9+0x0],r15b
   140007ba4:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007ba8:	rex.XB add BYTE PTR [r10+0x0],sil
   140007bac:	add    BYTE PTR gs:[rcx+0x0],ah
   140007bb0:	je     0x140007bb2
   140007bb2:	add    BYTE PTR gs:[rcx+0x0],cl
   140007bb6:	outs   dx,BYTE PTR ds:[rsi]
   140007bb7:	add    BYTE PTR [rbx+0x0],dh
   140007bba:	je     0x140007bbc
   140007bbc:	(bad)  
   140007bbd:	add    BYTE PTR [rsi+0x0],ch
   140007bc0:	movsxd eax,DWORD PTR [rax]
   140007bc2:	add    BYTE PTR gs:[rdi+0x0],dl
   140007bc6:	sub    al,0x0
   140007bc8:	and    BYTE PTR [rax],al
   140007bca:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140007bce:	and    BYTE PTR [rax],al
   140007bd0:	je     0x140007bd2
   140007bd2:	push   0x65007200
   140007bd7:	add    BYTE PTR [rcx+0x0],ah
   140007bda:	add    BYTE PTR fs:[rcx+0x0],ch
   140007bde:	outs   dx,BYTE PTR ds:[rsi]
   140007bdf:	add    BYTE PTR [rdi+0x0],ah
   140007be2:	and    BYTE PTR [rax],al
   140007be4:	ins    DWORD PTR es:[rdi],dx
   140007be5:	add    BYTE PTR [rdi+0x0],ch
   140007be8:	add    BYTE PTR fs:[rbp+0x0],ah
   140007bec:	ins    BYTE PTR es:[rdi],dx
   140007bed:	add    BYTE PTR [rax],ah
   140007bef:	add    BYTE PTR [rdi+0x0],ch
   140007bf2:	jb     0x140007bf4
   140007bf4:	and    BYTE PTR [rax],al
   140007bf6:	(bad)  
   140007bf7:	add    BYTE PTR [rcx+0x0],ah
   140007bfa:	add    BYTE PTR fs:[rax],ah
   140007bfd:	add    BYTE PTR [rax+rax*1+0x68],dh
   140007c01:	add    BYTE PTR [rdx+0x0],dh
   140007c04:	add    BYTE PTR gs:[rcx+0x0],ah
   140007c08:	add    BYTE PTR fs:[rcx+0x0],ch
   140007c0c:	outs   dx,BYTE PTR ds:[rsi]
   140007c0d:	add    BYTE PTR [rdi+0x0],ah
   140007c10:	and    BYTE PTR [rax],al
   140007c12:	ins    DWORD PTR es:[rdi],dx
   140007c13:	add    BYTE PTR [rdi+0x0],ch
   140007c16:	add    BYTE PTR fs:[rbp+0x0],ah
   140007c1a:	ins    BYTE PTR es:[rdi],dx
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rbp+0x0],cl
   140007c22:	jns    0x140007c24
   140007c24:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007c28:	rex.XB add BYTE PTR [r10+0x0],sil
   140007c2c:	add    BYTE PTR gs:[rcx+0x0],ah
   140007c30:	je     0x140007c32
   140007c32:	add    BYTE PTR gs:[rcx+0x0],cl
   140007c36:	outs   dx,BYTE PTR ds:[rsi]
   140007c37:	add    BYTE PTR [rbx+0x0],dh
   140007c3a:	je     0x140007c3c
   140007c3c:	(bad)  
   140007c3d:	add    BYTE PTR [rsi+0x0],ch
   140007c40:	movsxd eax,DWORD PTR [rax]
   140007c42:	add    BYTE PTR gs:[rdi+0x0],dl
   140007c46:	sub    al,0x0
   140007c48:	and    BYTE PTR [rax],al
   140007c4a:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140007c4e:	and    BYTE PTR [rax],al
   140007c50:	rex.WB add BYTE PTR [r14+0x0],bpl
   140007c54:	jo     0x140007c56
   140007c56:	jb     0x140007c58
   140007c58:	outs   dx,DWORD PTR ds:[rsi]
   140007c59:	add    BYTE PTR [rbx+0x0],ah
   140007c5c:	push   rbx
   140007c5d:	add    BYTE PTR [rbp+0x0],ah
   140007c60:	jb     0x140007c62
   140007c62:	jbe    0x140007c64
   140007c64:	add    BYTE PTR gs:[rdx+0x0],dh
   140007c68:	xor    eax,DWORD PTR [rax]
   140007c6a:	xor    al,BYTE PTR [rax]
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	rex.WRB add BYTE PTR [r9+0x0],r15b
   140007c74:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007c78:	rex.XB add BYTE PTR [r10+0x0],sil
   140007c7c:	add    BYTE PTR gs:[rcx+0x0],ah
   140007c80:	je     0x140007c82
   140007c82:	add    BYTE PTR gs:[rcx+0x0],cl
   140007c86:	outs   dx,BYTE PTR ds:[rsi]
   140007c87:	add    BYTE PTR [rbx+0x0],dh
   140007c8a:	je     0x140007c8c
   140007c8c:	(bad)  
   140007c8d:	add    BYTE PTR [rsi+0x0],ch
   140007c90:	movsxd eax,DWORD PTR [rax]
   140007c92:	add    BYTE PTR gs:[rdi+0x0],dl
   140007c96:	sub    al,0x0
   140007c98:	and    BYTE PTR [rax],al
   140007c9a:	add    BYTE PTR [r8+r8*1+0x53],cl
   140007c9f:	add    BYTE PTR [rcx+0x0],cl
   140007ca2:	add    BYTE PTR [rax],r12b
   140007ca5:	add    BYTE PTR [rsi+0x0],ch
   140007ca8:	outs   dx,DWORD PTR ds:[rsi]
   140007ca9:	add    BYTE PTR [rax+rax*1+0x20],dh
   140007cad:	add    BYTE PTR [rdx+0x0],dh
   140007cb0:	add    BYTE PTR gs:[rdi+0x0],ah
   140007cb4:	imul   eax,DWORD PTR [rax],0x740073
   140007cba:	add    BYTE PTR gs:[rdx+0x0],dh
   140007cbe:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140007cc3:	add    BYTE PTR [rax],al
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rbx+0x0],dl
   140007cca:	je     0x140007ccc
   140007ccc:	jb     0x140007cce
   140007cce:	imul   eax,DWORD PTR [rax],0x67006e
   140007cd4:	rex.XB add BYTE PTR [r10+0x0],spl
   140007cd8:	push   rax
   140007cd9:	add    BYTE PTR [rdx+0x0],dh
   140007cdc:	imul   eax,DWORD PTR [rax],0x74006e
   140007ce2:	data16 add BYTE PTR [rax+rax*1],ch
   140007ce6:	and    BYTE PTR [rax],al
   140007ce8:	rex.RX add BYTE PTR [rcx+0x0],r12b
   140007cec:	imul   eax,DWORD PTR [rax],0x65006c
   140007cf2:	add    BYTE PTR fs:[rax],al
	...
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    BYTE PTR [rbp+0x0],cl
   140007d02:	jns    0x140007d04
   140007d04:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007d08:	rex.XB add BYTE PTR [r10+0x0],sil
   140007d0c:	add    BYTE PTR gs:[rcx+0x0],ah
   140007d10:	je     0x140007d12
   140007d12:	add    BYTE PTR gs:[rcx+0x0],cl
   140007d16:	outs   dx,BYTE PTR ds:[rsi]
   140007d17:	add    BYTE PTR [rbx+0x0],dh
   140007d1a:	je     0x140007d1c
   140007d1c:	(bad)  
   140007d1d:	add    BYTE PTR [rsi+0x0],ch
   140007d20:	movsxd eax,DWORD PTR [rax]
   140007d22:	add    BYTE PTR gs:[rdi+0x0],dl
   140007d26:	sub    al,0x0
   140007d28:	and    BYTE PTR [rax],al
   140007d2a:	rex.WB add BYTE PTR [r14+0x0],bpl
   140007d2e:	jbe    0x140007d30
   140007d30:	(bad)  
   140007d31:	add    BYTE PTR [rax+rax*1+0x69],ch
   140007d35:	add    BYTE PTR [rax+rax*1+0x20],ah
   140007d39:	add    BYTE PTR [rbx+0x0],al
   140007d3c:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140007d40:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   140007d45:	add    BYTE PTR [rbx+0x0],dh
   140007d48:	je     0x140007d4a
   140007d4a:	jb     0x140007d4c
   140007d4c:	imul   eax,DWORD PTR [rax],0x67006e
	...
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	add    BYTE PTR [r8+rax*1+0x74],sil
   140007d65:	add    BYTE PTR [rbp+0x0],ah
   140007d68:	ins    DWORD PTR es:[rdi],dx
   140007d69:	add    BYTE PTR [rax+0x0],dh
   140007d6c:	je     0x140007d6e
   140007d6e:	imul   eax,DWORD PTR [rax],0x67006e
   140007d74:	and    BYTE PTR [rax],al
   140007d76:	je     0x140007d78
   140007d78:	outs   dx,DWORD PTR ds:[rsi]
   140007d79:	add    BYTE PTR [rax],ah
   140007d7b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140007d7f:	add    BYTE PTR [rcx+0x0],ah
   140007d82:	add    BYTE PTR fs:[rax],ah
   140007d85:	add    BYTE PTR [rbp+0x0],dh
   140007d88:	jae    0x140007d8a
   140007d8a:	add    BYTE PTR gs:[rdx+0x0],dh
   140007d8e:	sub    eax,0x6f006d00
   140007d93:	add    BYTE PTR [rax+rax*1+0x65],ah
   140007d97:	add    BYTE PTR [rax],ah
   140007d99:	add    BYTE PTR [rax+rax*1+0x72],ah
   140007d9d:	add    BYTE PTR [rcx+0x0],ch
   140007da0:	jbe    0x140007da2
   140007da2:	add    BYTE PTR gs:[rdx+0x0],dh
   140007da6:	and    BYTE PTR [rax],al
   140007da8:	sub    BYTE PTR [rax],al
   140007daa:	push   rbp
   140007dab:	add    BYTE PTR [rbx+0x0],dl
   140007dae:	add    BYTE PTR [rcx],r13b
   140007db1:	add    BYTE PTR [rax],ah
   140007db3:	add    BYTE PTR [rsi+0x0],ah
   140007db6:	outs   dx,DWORD PTR ds:[rsi]
   140007db7:	add    BYTE PTR [rdx+0x0],dh
   140007dba:	and    BYTE PTR [rax],al
   140007dbc:	je     0x140007dbe
   140007dbe:	push   0x20006500
   140007dc3:	add    BYTE PTR [rax+rax*1+0x65],ah
   140007dc7:	add    BYTE PTR [rsi+0x0],dh
   140007dca:	imul   eax,DWORD PTR [rax],0x650063
   140007dd0:	add    BYTE PTR cs:[rax],al
   140007dd3:	add    BYTE PTR [rax],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rbp+0x0],dl
   140007dda:	push   rbx
   140007ddb:	add    BYTE PTR [rax+rax*1+0x43],al
   140007ddf:	add    BYTE PTR [rax+rax*1+0x61],ch
   140007de3:	add    BYTE PTR [rbx+0x0],dh
   140007de6:	jae    0x140007de8
	...
   140007df0:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007df4:	jne    0x140007df6
   140007df6:	ins    BYTE PTR es:[rdi],dx
   140007df7:	add    BYTE PTR [rax+rax*1+0x20],ah
   140007dfb:	add    BYTE PTR [rsi+0x0],ch
   140007dfe:	outs   dx,DWORD PTR ds:[rsi]
   140007dff:	add    BYTE PTR [rax+rax*1+0x20],dh
   140007e03:	add    BYTE PTR [rbx+0x0],ah
   140007e06:	jb     0x140007e08
   140007e08:	add    BYTE PTR gs:[rcx+0x0],ah
   140007e0c:	je     0x140007e0e
   140007e0e:	add    BYTE PTR gs:[rax],ah
   140007e11:	add    BYTE PTR [rcx+0x0],ch
   140007e14:	outs   dx,BYTE PTR ds:[rsi]
   140007e15:	add    BYTE PTR [rbx+0x0],dh
   140007e18:	je     0x140007e1a
   140007e1a:	(bad)  
   140007e1b:	add    BYTE PTR [rsi+0x0],ch
   140007e1e:	movsxd eax,DWORD PTR [rax]
   140007e20:	add    BYTE PTR gs:[rax],ah
   140007e23:	add    BYTE PTR [rsi+0x0],ah
   140007e26:	outs   dx,DWORD PTR ds:[rsi]
   140007e27:	add    BYTE PTR [rdx+0x0],dh
   140007e2a:	and    BYTE PTR [rax],al
   140007e2c:	jb     0x140007e2e
   140007e2e:	add    BYTE PTR gs:[rdi+0x0],ah
   140007e32:	imul   eax,DWORD PTR [rax],0x740073
   140007e38:	add    BYTE PTR gs:[rdx+0x0],dh
   140007e3c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140007e41:	add    BYTE PTR [rbp+0x0],dl
   140007e44:	push   rbx
   140007e45:	add    BYTE PTR [rax+rax*1+0x2c],al
   140007e49:	add    BYTE PTR [rax],ah
   140007e4b:	add    BYTE PTR [rax+0x0],dh
   140007e4e:	outs   dx,DWORD PTR ds:[rsi]
   140007e4f:	add    BYTE PTR [rbx+0x0],dh
   140007e52:	jae    0x140007e54
   140007e54:	imul   eax,DWORD PTR [rax],0x6c0062
   140007e5a:	jns    0x140007e5c
   140007e5c:	and    BYTE PTR [rax],al
   140007e5e:	imul   eax,DWORD PTR [rax],0x63006e
   140007e64:	outs   dx,DWORD PTR ds:[rsi]
   140007e65:	add    BYTE PTR [rdx+0x0],dh
   140007e68:	jb     0x140007e6a
   140007e6a:	add    BYTE PTR gs:[rbx+0x0],ah
   140007e6e:	je     0x140007e70
   140007e70:	and    BYTE PTR [rax],al
   140007e72:	movsxd eax,DWORD PTR [rax]
   140007e74:	ins    BYTE PTR es:[rdi],dx
   140007e75:	add    BYTE PTR [rcx+0x0],ah
   140007e78:	jae    0x140007e7a
   140007e7a:	jae    0x140007e7c
   140007e7c:	and    BYTE PTR [rax],al
   140007e7e:	rex.WB add BYTE PTR [r8+rax*1+0x20],al
   140007e83:	add    BYTE PTR [rdi+0x0],ch
   140007e86:	jb     0x140007e88
   140007e88:	and    BYTE PTR [rax],al
   140007e8a:	jo     0x140007e8c
   140007e8c:	jb     0x140007e8e
   140007e8e:	outs   dx,DWORD PTR ds:[rsi]
   140007e8f:	add    BYTE PTR [rdx+0x0],ah
   140007e92:	ins    BYTE PTR es:[rdi],dx
   140007e93:	add    BYTE PTR [rbp+0x0],ah
   140007e96:	ins    DWORD PTR es:[rdi],dx
   140007e97:	add    BYTE PTR [rbx+0x0],dh
   140007e9a:	and    BYTE PTR [rax],al
   140007e9c:	ins    BYTE PTR es:[rdi],dx
   140007e9d:	add    BYTE PTR [rdi+0x0],ch
   140007ea0:	(bad)  
   140007ea1:	add    BYTE PTR [rax+rax*1+0x69],ah
   140007ea5:	add    BYTE PTR [rsi+0x0],ch
   140007ea8:	add    BYTE PTR [eax],ah
   140007eab:	add    BYTE PTR [rax+rax*1+0x4c],al
   140007eaf:	add    BYTE PTR [rax+rax*1+0x0],cl
	...
   140007ebf:	add    BYTE PTR [rbx+0x0],al
   140007ec2:	outs   dx,DWORD PTR ds:[rsi]
   140007ec3:	add    BYTE PTR [rbp+0x0],ch
   140007ec6:	jo     0x140007ec8
   140007ec8:	ins    BYTE PTR es:[rdi],dx
   140007ec9:	add    BYTE PTR [rbp+0x0],ah
   140007ecc:	je     0x140007ece
   140007ece:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140007ed3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140007ed7:	add    BYTE PTR [rcx+0x0],ah
   140007eda:	add    BYTE PTR fs:[rcx+0x0],ch
   140007ede:	outs   dx,BYTE PTR ds:[rsi]
   140007edf:	add    BYTE PTR [rdi+0x0],ah
   140007ee2:	and    BYTE PTR [rax],al
   140007ee4:	push   rbp
   140007ee5:	add    BYTE PTR [rbx+0x0],dl
   140007ee8:	add    BYTE PTR [rax+rax*1],r13b
   140007eec:	and    BYTE PTR [rax],al
   140007eee:	movsxd eax,DWORD PTR [rax]
   140007ef0:	(bad)  
   140007ef1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007ef5:	add    BYTE PTR [rcx+0x0],ch
   140007ef8:	outs   dx,BYTE PTR ds:[rsi]
   140007ef9:	add    BYTE PTR [rdi+0x0],ah
   140007efc:	and    BYTE PTR [rax],al
   140007efe:	imul   eax,DWORD PTR [rax],0x69006e
   140007f04:	je     0x140007f06
   140007f06:	imul   eax,DWORD PTR [rax],0x6c0061
   140007f0c:	imul   eax,DWORD PTR [rax],0x61007a
   140007f12:	je     0x140007f14
   140007f14:	imul   eax,DWORD PTR [rax],0x6e006f
   140007f1a:	and    BYTE PTR [rax],al
   140007f1c:	jb     0x140007f1e
   140007f1e:	outs   dx,DWORD PTR ds:[rsi]
   140007f1f:	add    BYTE PTR [rbp+0x0],dh
   140007f22:	je     0x140007f24
   140007f24:	imul   eax,DWORD PTR [rax],0x65006e
   140007f2a:	add    BYTE PTR cs:[rax],al
   140007f2d:	add    BYTE PTR [rax],al
   140007f2f:	add    BYTE PTR [rbx+0x0],dl
   140007f32:	jne    0x140007f34
   140007f34:	movsxd eax,DWORD PTR [rax]
   140007f36:	movsxd eax,DWORD PTR [rax]
   140007f38:	add    BYTE PTR gs:[rbx+0x0],dh
   140007f3c:	jae    0x140007f3e
   140007f3e:	data16 add BYTE PTR [rbp+0x0],dh
   140007f42:	ins    BYTE PTR es:[rdi],dx
   140007f43:	add    BYTE PTR [rax+rax*1+0x79],ch
   140007f47:	add    BYTE PTR [rax],ah
   140007f49:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140007f4d:	add    BYTE PTR [rcx+0x0],ah
   140007f50:	add    BYTE PTR fs:[rbp+0x0],ah
   140007f54:	add    BYTE PTR fs:[rax],ah
   140007f57:	add    BYTE PTR [rbp+0x0],dh
   140007f5a:	jae    0x140007f5c
   140007f5c:	add    BYTE PTR gs:[rdx+0x0],dh
   140007f60:	and    BYTE PTR [rax],al
   140007f62:	ins    DWORD PTR es:[rdi],dx
   140007f63:	add    BYTE PTR [rdi+0x0],ch
   140007f66:	add    BYTE PTR fs:[rbp+0x0],ah
   140007f6a:	and    BYTE PTR [rax],al
   140007f6c:	add    BYTE PTR fs:[rdx+0x0],dh
   140007f70:	imul   eax,DWORD PTR [rax],0x650076
   140007f76:	jb     0x140007f78
   140007f78:	add    BYTE PTR cs:[rax],al
   140007f7b:	add    BYTE PTR [rax],al
   140007f7d:	add    BYTE PTR [rax],al
   140007f7f:	add    BYTE PTR [rsi+0x0],dl
   140007f82:	add    BYTE PTR gs:[rdx+0x0],dh
   140007f86:	jae    0x140007f88
   140007f88:	imul   eax,DWORD PTR [rax],0x6e006f
   140007f8e:	and    BYTE PTR [rax],al
   140007f90:	outs   dx,DWORD PTR ds:[rsi]
   140007f91:	add    BYTE PTR [rsi+0x0],ah
   140007f94:	and    BYTE PTR [rax],al
   140007f96:	push   rbp
   140007f97:	add    BYTE PTR [rbx+0x0],dl
   140007f9a:	add    BYTE PTR [rax],r12b
   140007f9d:	add    BYTE PTR [rcx+0x0],ch
   140007fa0:	jae    0x140007fa2
   140007fa2:	and    BYTE PTR [rax],al
   140007fa4:	add    BYTE PTR gs:[rcx+0x0],ch
   140007fa8:	je     0x140007faa
   140007faa:	push   0x72006500
   140007faf:	add    BYTE PTR [rax],ah
   140007fb1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140007fb5:	add    BYTE PTR [rdi+0x0],ch
   140007fb8:	and    BYTE PTR [rax],al
   140007fba:	outs   dx,DWORD PTR ds:[rsi]
   140007fbb:	add    BYTE PTR [rax+rax*1+0x64],ch
   140007fbf:	add    BYTE PTR [rax],ah
   140007fc1:	add    BYTE PTR [rdi+0x0],ch
   140007fc4:	jb     0x140007fc6
   140007fc6:	and    BYTE PTR [rax],al
   140007fc8:	je     0x140007fca
   140007fca:	outs   dx,DWORD PTR ds:[rsi]
   140007fcb:	add    BYTE PTR [rdi+0x0],ch
   140007fce:	and    BYTE PTR [rax],al
   140007fd0:	outs   dx,BYTE PTR ds:[rsi]
   140007fd1:	add    BYTE PTR [rbp+0x0],ah
   140007fd4:	ja     0x140007fd6
   140007fd6:	and    BYTE PTR [rax],al
   140007fd8:	sub    al,0x0
   140007fda:	and    BYTE PTR [rax],al
   140007fdc:	ja     0x140007fde
   140007fde:	imul   eax,DWORD PTR [rax],0x6c006c
   140007fe4:	and    BYTE PTR [rax],al
   140007fe6:	outs   dx,BYTE PTR ds:[rsi]
   140007fe7:	add    BYTE PTR [rdi+0x0],ch
   140007fea:	je     0x140007fec
   140007fec:	and    BYTE PTR [rax],al
   140007fee:	ja     0x140007ff0
   140007ff0:	outs   dx,DWORD PTR ds:[rsi]
   140007ff1:	add    BYTE PTR [rdx+0x0],dh
   140007ff4:	imul   eax,DWORD PTR [rax],0x20
   140007ff7:	add    BYTE PTR [rdi+0x0],dh
   140007ffa:	imul   eax,DWORD PTR [rax],0x680074
   140008000:	and    BYTE PTR [rax],al
   140008002:	je     0x140008004
   140008004:	push   0x73006900
   140008009:	add    BYTE PTR [rax],ah
   14000800b:	add    BYTE PTR [rsi+0x0],dh
   14000800e:	add    BYTE PTR gs:[rdx+0x0],dh
   140008012:	jae    0x140008014
   140008014:	imul   eax,DWORD PTR [rax],0x6e006f
   14000801a:	and    BYTE PTR [rax],al
   14000801c:	outs   dx,DWORD PTR ds:[rsi]
   14000801d:	add    BYTE PTR [rsi+0x0],ah
   140008020:	and    BYTE PTR [rax],al
   140008022:	jae    0x140008024
   140008024:	je     0x140008026
   140008026:	imul   eax,DWORD PTR [rax],0x640020
   14000802c:	ins    BYTE PTR es:[rdi],dx
   14000802d:	add    BYTE PTR [rax+rax*1+0x2e],ch
	...
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    BYTE PTR [rbp+0x0],dl
   140008042:	push   rbx
   140008043:	add    BYTE PTR [rax+rax*1+0x20],al
   140008047:	add    BYTE PTR [rsi+0x0],ah
   14000804a:	(bad)  
   14000804b:	add    BYTE PTR [rcx+0x0],ch
   14000804e:	ins    BYTE PTR es:[rdi],dx
   14000804f:	add    BYTE PTR [rbp+0x0],ah
   140008052:	add    BYTE PTR fs:[rax],ah
   140008055:	add    BYTE PTR [rcx+0x0],cl
   140008058:	outs   dx,BYTE PTR ds:[rsi]
   140008059:	add    BYTE PTR [rcx+0x0],ch
   14000805c:	je     0x14000805e
   14000805e:	imul   eax,DWORD PTR [rax],0x6c0061
   140008064:	imul   eax,DWORD PTR [rax],0x65007a
   14000806a:	and    BYTE PTR [rax],al
   14000806c:	ins    DWORD PTR es:[rdi],dx
   14000806d:	add    BYTE PTR [rbp+0x0],ah
   140008070:	je     0x140008072
   140008072:	push   0x64006f00
   140008077:	add    BYTE PTR [rax+rax*1],ch
   14000807a:	and    BYTE PTR [rax],al
   14000807c:	jb     0x14000807e
   14000807e:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140008083:	add    BYTE PTR [rdx+0x0],dh
   140008086:	outs   dx,BYTE PTR ds:[rsi]
   140008087:	add    BYTE PTR [rbp+0x0],ah
   14000808a:	add    BYTE PTR fs:[rax],ah
   14000808d:	add    BYTE PTR [rbp+0x0],ah
   140008090:	jb     0x140008092
   140008092:	jb     0x140008094
   140008094:	outs   dx,DWORD PTR ds:[rsi]
   140008095:	add    BYTE PTR [rdx+0x0],dh
   140008098:	and    BYTE PTR [rax],al
   14000809a:	movsxd eax,DWORD PTR [rax]
   14000809c:	outs   dx,DWORD PTR ds:[rsi]
   14000809d:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400080a1:	add    BYTE PTR [rax],ah
   1400080a3:	add    BYTE PTR [rax],ch
   1400080a5:	add    BYTE PTR [rax+0x0],ch
   1400080a8:	add    BYTE PTR gs:[rax+0x0],bh
   1400080ac:	sub    DWORD PTR [rax],eax
   1400080ae:	cmp    eax,0x31002500
   1400080b3:	add    BYTE PTR [rcx],ah
   1400080b5:	add    BYTE PTR [rax+0x0],bh
   1400080b8:	and    DWORD PTR [rax],eax
   1400080ba:	add    BYTE PTR cs:[rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rsi+0x0],al
   1400080c2:	(bad)  
   1400080c3:	add    BYTE PTR [rcx+0x0],ch
   1400080c6:	ins    BYTE PTR es:[rdi],dx
   1400080c7:	add    BYTE PTR [rbp+0x0],ah
   1400080ca:	add    BYTE PTR fs:[rax],ah
   1400080cd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400080d1:	add    BYTE PTR [rax],ah
   1400080d3:	add    BYTE PTR [rbx+0x0],ah
   1400080d6:	jb     0x1400080d8
   1400080d8:	add    BYTE PTR gs:[rcx+0x0],ah
   1400080dc:	je     0x1400080de
   1400080de:	add    BYTE PTR gs:[rax],ah
   1400080e1:	add    BYTE PTR [rcx+0x0],ch
   1400080e4:	outs   dx,BYTE PTR ds:[rsi]
   1400080e5:	add    BYTE PTR [rbx+0x0],dh
   1400080e8:	je     0x1400080ea
   1400080ea:	(bad)  
   1400080eb:	add    BYTE PTR [rsi+0x0],ch
   1400080ee:	movsxd eax,DWORD PTR [rax]
   1400080f0:	add    BYTE PTR gs:[rax],ah
   1400080f3:	add    BYTE PTR [rdi+0x0],ch
   1400080f6:	data16 add BYTE PTR [rax],ah
   1400080f9:	add    BYTE PTR [rbp+0x0],dl
   1400080fc:	push   rbx
   1400080fd:	add    BYTE PTR [rax+rax*1+0x20],al
   140008101:	add    BYTE PTR [rdi+0x0],ch
   140008104:	(bad)  
   140008105:	add    BYTE PTR [rdx+0x0],ch
   140008108:	add    BYTE PTR gs:[rbx+0x0],ah
   14000810c:	je     0x14000810e
   14000810e:	and    BYTE PTR [rax],al
	...
   140008120:	push   rbx
   140008121:	add    BYTE PTR [rcx+0x0],bh
   140008124:	jae    0x140008126
   140008126:	je     0x140008128
   140008128:	add    BYTE PTR gs:[rbp+0x0],ch
   14000812c:	pop    rsp
   14000812d:	add    BYTE PTR [rbx+0x0],al
   140008130:	jne    0x140008132
   140008132:	jb     0x140008134
   140008134:	jb     0x140008136
   140008136:	add    BYTE PTR gs:[rsi+0x0],ch
   14000813a:	je     0x14000813c
   14000813c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140008140:	outs   dx,BYTE PTR ds:[rsi]
   140008141:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008145:	add    BYTE PTR [rdi+0x0],ch
   140008148:	ins    BYTE PTR es:[rdi],dx
   140008149:	add    BYTE PTR [rbx+0x0],dl
   14000814c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140008151:	add    BYTE PTR [rbx+0x0],dl
   140008154:	add    BYTE PTR gs:[rdx+0x0],dh
   140008158:	jbe    0x14000815a
   14000815a:	imul   eax,DWORD PTR [rax],0x650063
   140008160:	jae    0x140008162
   140008162:	pop    rsp
   140008163:	add    BYTE PTR [rbx+0x0],al
   140008166:	ins    BYTE PTR es:[rdi],dx
   140008167:	add    BYTE PTR [rcx+0x0],ah
   14000816a:	jae    0x14000816c
   14000816c:	jae    0x14000816e
   14000816e:	add    BYTE PTR [rax],al
   140008170:	pop    rsp
	...
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    BYTE PTR [rbx+0x0],dl
   140008182:	jns    0x140008184
   140008184:	jae    0x140008186
   140008186:	je     0x140008188
   140008188:	add    BYTE PTR gs:[rbp+0x0],ch
   14000818c:	pop    rsp
   14000818d:	add    BYTE PTR [rbx+0x0],al
   140008190:	jne    0x140008192
   140008192:	jb     0x140008194
   140008194:	jb     0x140008196
   140008196:	add    BYTE PTR gs:[rsi+0x0],ch
   14000819a:	je     0x14000819c
   14000819c:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400081a0:	outs   dx,BYTE PTR ds:[rsi]
   1400081a1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400081a5:	add    BYTE PTR [rdi+0x0],ch
   1400081a8:	ins    BYTE PTR es:[rdi],dx
   1400081a9:	add    BYTE PTR [rbx+0x0],dl
   1400081ac:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400081b1:	add    BYTE PTR [rbx+0x0],al
   1400081b4:	outs   dx,DWORD PTR ds:[rsi]
   1400081b5:	add    BYTE PTR [rsi+0x0],ch
   1400081b8:	je     0x1400081ba
   1400081ba:	jb     0x1400081bc
   1400081bc:	outs   dx,DWORD PTR ds:[rsi]
   1400081bd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400081c1:	add    BYTE PTR [rbx+0x0],dl
   1400081c4:	je     0x1400081c6
   1400081c6:	imul   eax,DWORD PTR [rax],0x6c006c
   1400081cc:	rex.WB add BYTE PTR [r13+0x0],bpl
   1400081d0:	(bad)  
   1400081d1:	add    BYTE PTR [rdi+0x0],ah
   1400081d4:	add    BYTE PTR gs:[rax+rax*1+0x4c],bl
   1400081d9:	add    BYTE PTR [rdi+0x0],ch
   1400081dc:	add    BYTE PTR [edi+0x0],ah
   1400081e0:	imul   eax,DWORD PTR [rax],0x67006e
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400081ec:	js     0x1400081ee
   1400081ee:	push   rbx
   1400081ef:	add    BYTE PTR [rcx+0x0],ch
   1400081f2:	jp     0x1400081f4
   1400081f4:	add    BYTE PTR gs:[rax],al
   1400081f7:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400081fb:	add    BYTE PTR [rsi+0x0],dh
   1400081fe:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140008203:	add    BYTE PTR [rax],al
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rbp+0x0],cl
   14000820a:	outs   dx,DWORD PTR ds:[rsi]
   14000820b:	add    BYTE PTR [rax+rax*1+0x65],ah
	...
   140008217:	add    BYTE PTR [rip+0x53005500],ah        # 0x19300d71d
   14000821d:	add    BYTE PTR [rbp+0x0],al
   140008220:	push   rdx
   140008221:	add    BYTE PTR [rax+0x0],dl
   140008224:	push   rdx
   140008225:	add    BYTE PTR [rdi+0x0],cl
   140008228:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000822c:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140008230:	and    eax,0x20000000
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rbx+0x0],bl
   14000823a:	and    eax,0x73002300
   14000823f:	add    BYTE PTR [rdx],bh
   140008241:	add    BYTE PTR [rdx],bh
   140008243:	add    BYTE PTR [rip+0x6c002300],ah        # 0x1ac00a549
   140008249:	add    BYTE PTR [rax+0x0],bh
   14000824c:	pop    rbp
   14000824d:	add    BYTE PTR [rax],ah
   14000824f:	add    BYTE PTR [rax],al
   140008251:	add    BYTE PTR [rax],al
   140008253:	add    BYTE PTR [rcx],cl
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rip+0xa00],cl        # 0x140008c5d
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    BYTE PTR [rip+0x2a000a00],cl        # 0x16a008c65
   140008265:	add    BYTE PTR [rdx],ch
   140008267:	add    BYTE PTR [rdx],ch
   140008269:	add    BYTE PTR [rdx],ch
   14000826b:	add    BYTE PTR [rdx],ch
   14000826d:	add    BYTE PTR [rdx],ch
   14000826f:	add    BYTE PTR [rbx+0x0],al
   140008272:	ins    BYTE PTR es:[rdi],dx
   140008273:	add    BYTE PTR [rdi+0x0],ch
   140008276:	jae    0x140008278
   140008278:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000827d:	add    BYTE PTR [rax+rax*1+0x72],dh
   140008281:	add    BYTE PTR [rcx+0x0],ah
   140008284:	movsxd eax,DWORD PTR [rax]
   140008286:	add    BYTE PTR gs:[rax],ah
   140008289:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000828d:	add    BYTE PTR [rdi+0x0],ah
   140008290:	and    BYTE PTR [rax],al
   140008292:	outs   dx,DWORD PTR ds:[rsi]
   140008293:	add    BYTE PTR [rsi+0x0],ch
   140008296:	and    BYTE PTR [rax],al
   140008298:	and    eax,0x20007300
   14000829d:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000f5a3
   1400082a3:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400082a7:	add    BYTE PTR [rcx+0x0],ah
   1400082aa:	movsxd eax,DWORD PTR [rax]
   1400082ac:	add    BYTE PTR gs:[rdx+0x0],dh
   1400082b0:	and    BYTE PTR [rax],al
   1400082b2:	sub    BYTE PTR [rax],al
   1400082b4:	and    eax,0x29007300
   1400082b9:	add    BYTE PTR [rax],ah
   1400082bb:	add    BYTE PTR [rax+rax*1],ch
   1400082be:	and    BYTE PTR [rax],al
   1400082c0:	movsxd eax,DWORD PTR [rax]
   1400082c2:	(bad)  
   1400082c3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400082c7:	add    BYTE PTR [rbp+0x0],ah
   1400082ca:	add    BYTE PTR fs:[rax],ah
   1400082cd:	add    BYTE PTR [rsi+0x0],ah
   1400082d0:	jb     0x1400082d2
   1400082d2:	outs   dx,DWORD PTR ds:[rsi]
   1400082d3:	add    BYTE PTR [rbp+0x0],ch
   1400082d6:	and    BYTE PTR [rax],al
   1400082d8:	pop    rbx
   1400082d9:	add    BYTE PTR [rip+0x73002300],ah        # 0x1b300a5df
   1400082df:	add    BYTE PTR [rdx],bh
   1400082e1:	add    BYTE PTR [rdx],bh
   1400082e3:	add    BYTE PTR [rip+0x6c002300],ah        # 0x1ac00a5e9
   1400082e9:	add    BYTE PTR [rax+0x0],bh
   1400082ec:	pop    rbp
   1400082ed:	add    BYTE PTR [rip+0xa00],cl        # 0x140008cf3
	...
   1400082ff:	add    BYTE PTR [rip+0x2a000a00],cl        # 0x16a008d05
   140008305:	add    BYTE PTR [rdx],ch
   140008307:	add    BYTE PTR [rdx],ch
   140008309:	add    BYTE PTR [rdx],ch
   14000830b:	add    BYTE PTR [rdx],ch
   14000830d:	add    BYTE PTR [rdx],ch
   14000830f:	add    BYTE PTR [rax],ah
   140008311:	add    BYTE PTR [rdi+0x0],cl
   140008314:	jo     0x140008316
   140008316:	add    BYTE PTR gs:[rsi+0x0],ch
   14000831a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000831f:	add    BYTE PTR [rsi+0x0],ah
   140008322:	imul   eax,DWORD PTR [rax],0x65006c
   140008328:	and    BYTE PTR [rax],al
   14000832a:	ins    BYTE PTR es:[rdi],dx
   14000832b:	add    BYTE PTR [rdi+0x0],ch
   14000832e:	add    BYTE PTR [eax],ah
   140008331:	add    BYTE PTR [rcx+0x0],ah
   140008334:	je     0x140008336
   140008336:	and    BYTE PTR [rax],al
   140008338:	and    eax,0x20007300
   14000833d:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000f643
   140008343:	add    BYTE PTR [rsi],ch
   140008345:	add    BYTE PTR [rax+rax*1+0x72],dl
   140008349:	add    BYTE PTR [rcx+0x0],ah
   14000834c:	movsxd eax,DWORD PTR [rax]
   14000834e:	add    BYTE PTR gs:[rdx+0x0],dh
   140008352:	and    BYTE PTR [rax],al
   140008354:	sub    BYTE PTR [rax],al
   140008356:	and    eax,0x29007300
   14000835b:	add    BYTE PTR [rax],ah
   14000835d:	add    BYTE PTR [rax+rax*1],ch
   140008360:	and    BYTE PTR [rax],al
   140008362:	movsxd eax,DWORD PTR [rax]
   140008364:	(bad)  
   140008365:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008369:	add    BYTE PTR [rbp+0x0],ah
   14000836c:	add    BYTE PTR fs:[rax],ah
   14000836f:	add    BYTE PTR [rsi+0x0],ah
   140008372:	jb     0x140008374
   140008374:	outs   dx,DWORD PTR ds:[rsi]
   140008375:	add    BYTE PTR [rbp+0x0],ch
   140008378:	and    BYTE PTR [rax],al
   14000837a:	pop    rbx
   14000837b:	add    BYTE PTR [rip+0x73002300],ah        # 0x1b300a681
   140008381:	add    BYTE PTR [rdx],bh
   140008383:	add    BYTE PTR [rdx],bh
   140008385:	add    BYTE PTR [rip+0x6c002300],ah        # 0x1ac00a68b
   14000838b:	add    BYTE PTR [rax+0x0],bh
   14000838e:	pop    rbp
   14000838f:	add    BYTE PTR [rip+0xa00],cl        # 0x140008d95
	...
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rbx+0x0],dl
   1400083a2:	add    BYTE PTR gs:[rsi+0x0],dh
   1400083a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400083aa:	imul   eax,DWORD PTR [rax],0x790074
   1400083b0:	and    BYTE PTR [rax],al
   1400083b2:	push   rsp
   1400083b3:	add    BYTE PTR [rdx+0x0],dh
   1400083b6:	(bad)  
   1400083b7:	add    BYTE PTR [rbx+0x0],ah
   1400083ba:	add    BYTE PTR gs:[rdx+0x0],dh
   1400083be:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400083c2:	ins    DWORD PTR es:[rdi],dx
   1400083c3:	add    BYTE PTR [rbp+0x0],ah
   1400083c6:	and    BYTE PTR [rax],al
   1400083c8:	pop    rbx
   1400083c9:	add    BYTE PTR [rax+0x0],dl
   1400083cc:	jb     0x1400083ce
   1400083ce:	outs   dx,DWORD PTR ds:[rsi]
   1400083cf:	add    BYTE PTR [rbx+0x0],ah
   1400083d2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400083d6:	jae    0x1400083d8
   1400083d8:	cmp    al,BYTE PTR [rax]
   1400083da:	cmp    al,BYTE PTR [rax]
   1400083dc:	push   rsp
   1400083dd:	add    BYTE PTR [rax+0x0],ch
   1400083e0:	jb     0x1400083e2
   1400083e2:	add    BYTE PTR gs:[rcx+0x0],ah
   1400083e6:	add    BYTE PTR fs:[rcx+0x0],cl
   1400083ea:	add    BYTE PTR fs:[rbp+0x0],bl
   1400083ee:	and    BYTE PTR [rax],al
   1400083f0:	push   rsp
   1400083f1:	add    BYTE PTR [rcx+0x0],ch
   1400083f4:	ins    DWORD PTR es:[rdi],dx
   1400083f5:	add    BYTE PTR [rbp+0x0],ah
   1400083f8:	and    BYTE PTR [rax],al
   1400083fa:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400083fe:	jae    0x140008400
   140008400:	jae    0x140008402
   140008402:	(bad)  
   140008403:	add    BYTE PTR [rdi+0x0],ah
   140008406:	add    BYTE PTR gs:[rax+rax*1+0x65],dl
   14000840b:	add    BYTE PTR [rax+0x0],bh
   14000840e:	je     0x140008410
   140008410:	or     eax,0xd000a00
   140008415:	add    BYTE PTR [rdx],cl
	...
   14000841f:	add    BYTE PTR [rbx+0x0],dl
   140008422:	je     0x140008424
   140008424:	imul   eax,DWORD PTR [rax],0x54005f
   14000842a:	jb     0x14000842c
   14000842c:	(bad)  
   14000842d:	add    BYTE PTR [rbx+0x0],ah
   140008430:	add    BYTE PTR gs:[rsi],ch
   140008433:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140008437:	add    BYTE PTR [rdi+0x0],ah
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	add    BYTE PTR [rax],al
   14000843e:	add    BYTE PTR [rax],al
   140008440:	add    DWORD PTR [rax],eax
   140008442:	add    BYTE PTR [rax],al
   140008444:	add    BYTE PTR [rax],al
   140008446:	add    BYTE PTR [rax],al
   140008448:	rol    BYTE PTR [rax],0x0
   14000844b:	add    BYTE PTR [rax],al
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	rex.RX add BYTE PTR [rax],r8b
   140008452:	add    BYTE PTR [rax],al
   140008454:	add    BYTE PTR [rax],al
   140008456:	add    BYTE PTR [rax],al
   140008458:	rol    BYTE PTR [rax],0x0
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	rex.RX pop rbx
   140008461:	add    DWORD PTR [rax],eax
   140008463:	add    BYTE PTR [rax],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    al,al
   140008469:	add    BYTE PTR [rax],al
   14000846b:	add    BYTE PTR [rax],al
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	rex.RX
   140008470:	rex.WXB add rax,QWORD PTR [r8]
   140008473:	add    BYTE PTR [rax],al
   140008475:	add    BYTE PTR [rax],al
   140008477:	add    al,al
   140008479:	add    BYTE PTR [rax],al
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	rex.RX cwde 
   140008481:	sub    dh,BYTE PTR [rbx]
   140008483:	in     eax,0xfd
   140008485:	cmp    BYTE PTR [rsi+rax*2],0x80
   140008489:	in     al,0xa8
   14000848b:	jrcxz  0x1400084fd
   14000848d:	jne    0x1400084b8
   14000848f:	(bad)  
   140008490:	mov    ?,WORD PTR gs:[rsi-0x670bd985]
   140008497:	rex.RX movabs al,ds:0xa081bab128afd2b7
   1400084a1:	call   0x169cd1d5b
   1400084a6:	sbb    cl,BYTE PTR [rcx-0x56]
   1400084a9:	shl    dh,0xdb
   1400084ac:	rex.WRXB fmul st(6),st
   1400084af:	mov    dh,0x0
	...
   1400084c1:	add    BYTE PTR [rax],al
   1400084c3:	add    BYTE PTR [rsi+0x39],dh
   1400084c6:	lahf   
   1400084c7:	push   rbp
   1400084c8:	add    BYTE PTR [rax],al
   1400084ca:	add    BYTE PTR [rax],al
   1400084cc:	add    al,BYTE PTR [rax]
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	and    eax,0xc0000000
   1400084d5:	test   DWORD PTR [rax],eax
   1400084d7:	add    al,al
   1400084d9:	jno    0x1400084db
   1400084db:	add    BYTE PTR [rax],al
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    BYTE PTR [rsi+0x39],dh
   1400084e2:	lahf   
   1400084e3:	push   rbp
   1400084e4:	add    BYTE PTR [rax],al
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	or     eax,0xe0000000
   1400084ed:	add    DWORD PTR [rax],eax
   1400084ef:	add    ah,bh
   1400084f1:	test   DWORD PTR [rax],eax
   1400084f3:	add    ah,bh
   1400084f5:	jno    0x1400084f7
	...
   14000851f:	add    BYTE PTR [rax+0x0],ah
	...
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax],cl
   140008579:	movabs al,ds:0x14000
	...
   14000858e:	add    BYTE PTR [rax],al
   140008590:	cwde   
   140008591:	jae    0x140008593
   140008593:	rex add DWORD PTR [rax],eax
   140008596:	add    BYTE PTR [rax],al
   140008598:	movabs al,ds:0xe000000001400073
   1400085a1:	jae    0x1400085a3
   1400085a3:	rex add DWORD PTR [rax],eax
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	cmp    al,BYTE PTR [rax]
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	add    BYTE PTR [rax],al
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	add    BYTE PTR [rip+0x0],dh        # 0x1400085b6
	...
   1400085be:	add    BYTE PTR [rax],al
   1400085c0:	push   rdx
   1400085c1:	push   rbx
   1400085c2:	rex.R push rbx
   1400085c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400085c5:	test   BYTE PTR [rbx+0x17],0xf1
   1400085c9:	lea    edx,[rax]
   1400085cb:	rex.X test ebp,ecx
   1400085ce:	mov    BYTE PTR [rdi-0x32a4a2c9],bl
   1400085d4:	add    DWORD PTR [rax],eax
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	ja     0x140008643
   1400085da:	(bad)  
   1400085db:	ja     0x14000864c
   1400085dd:	ja     0x140008615
   1400085df:	xor    al,0x2e
   1400085e1:	jo     0x140008647
   1400085e3:	(bad)  
	...
   1400085fc:	rex.RXB
   1400085fd:	rex.XB push r12
   1400085ff:	rex.WR add BYTE PTR [rax],r10b
   140008602:	add    BYTE PTR [rax],al
   140008604:	jb     0x14000865c
   140008606:	add    BYTE PTR [rax],al
   140008608:	cs je  0x140008670
   14000860b:	js     0x140008681
   14000860d:	and    al,0x6d
   14000860f:	outs   dx,BYTE PTR ds:[rsi]
   140008610:	add    BYTE PTR [rax],al
   140008612:	add    BYTE PTR [rax],al
   140008614:	and    BYTE PTR [rsi+0x0],0x0
   140008618:	adc    al,BYTE PTR [rax]
   14000861a:	add    BYTE PTR [rax],al
   14000861c:	cs je  0x140008684
   14000861f:	js     0x140008695
   140008621:	and    al,0x6d
   140008623:	outs   dx,BYTE PTR ds:[rsi]
   140008624:	and    al,0x30
   140008626:	xor    BYTE PTR [rax],al
   140008628:	movabs al,ds:0x2e00000076000066
   140008631:	je     0x140008698
   140008633:	js     0x1400086a9
   140008635:	and    al,0x78
   140008637:	add    BYTE PTR [rax],al
   140008639:	jo     0x14000863b
   14000863b:	add    BYTE PTR [rax+0x2e000003],bl
   140008641:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140008649:	add    BYTE PTR [rax],al
   14000864b:	add    BYTE PTR [rax+0x10000073],bl
   140008651:	add    BYTE PTR [rax],al
   140008653:	add    BYTE PTR [rsi],ch
   140008655:	xor    BYTE PTR [rax],dh
   140008657:	movsxd esp,DWORD PTR [rsi+0x67]
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	test   al,0x73
   14000865e:	add    BYTE PTR [rax],al
   140008660:	or     BYTE PTR [rax],al
   140008662:	add    BYTE PTR [rax],al
   140008664:	cs rex.XB push r10
   140008667:	push   rsp
   140008668:	and    al,0x58
   14000866a:	rex.XB
   14000866b:	add    BYTE PTR [r8],al
   14000866e:	add    BYTE PTR [rax],al
   140008670:	mov    al,0x73
   140008672:	add    BYTE PTR [rax],al
   140008674:	or     BYTE PTR [rax],al
   140008676:	add    BYTE PTR [rax],al
   140008678:	cs rex.XB push r10
   14000867b:	push   rsp
   14000867c:	and    al,0x58
   14000867e:	rex.XB
   14000867f:	rex.B
   140008680:	add    BYTE PTR [r8],al
   140008683:	add    BYTE PTR [rax+0x8000073],bh
   140008689:	add    BYTE PTR [rax],al
   14000868b:	add    BYTE PTR [rsi],ch
   14000868d:	rex.XB push r10
   14000868f:	push   rsp
   140008690:	and    al,0x58
   140008692:	rex.XB pop r10
   140008694:	add    BYTE PTR [rax],al
   140008696:	add    BYTE PTR [rax],al
   140008698:	shl    BYTE PTR [rbx+0x0],0x0
   14000869c:	or     BYTE PTR [rax],al
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	cs rex.XB push r10
   1400086a3:	push   rsp
   1400086a4:	and    al,0x58
   1400086a6:	rex.WB
   1400086a7:	add    BYTE PTR [r8],al
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	enter  0x73,0x0
   1400086b0:	or     BYTE PTR [rax],al
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	cs rex.XB push r10
   1400086b7:	push   rsp
   1400086b8:	and    al,0x58
   1400086ba:	rex.WB
   1400086bb:	rex.B
   1400086bc:	add    BYTE PTR [r8],al
   1400086bf:	add    al,dl
   1400086c1:	jae    0x1400086c3
   1400086c3:	add    BYTE PTR [rax],cl
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rsi],ch
   1400086c9:	rex.XB push r10
   1400086cb:	push   rsp
   1400086cc:	and    al,0x58
   1400086ce:	rex.WB pop r9
   1400086d0:	add    BYTE PTR [rax],al
   1400086d2:	add    BYTE PTR [rax],al
   1400086d4:	fdiv   DWORD PTR [rbx+0x0]
   1400086d7:	add    BYTE PTR [rax],cl
   1400086d9:	add    BYTE PTR [rax],al
   1400086db:	add    BYTE PTR [rsi],ch
   1400086dd:	rex.XB push r10
   1400086df:	push   rsp
   1400086e0:	and    al,0x58
   1400086e2:	rex.WB pop r10
   1400086e4:	add    BYTE PTR [rax],al
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	loopne 0x14000875d
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	call   0x16e0086f1
   1400086f1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400086f9:	add    BYTE PTR [rax],al
   1400086fb:	add    al,dl
   1400086fd:	je     0x1400086ff
   1400086ff:	add    al,dh
   140008701:	adc    BYTE PTR [rax],al
   140008703:	add    BYTE PTR [rsi],ch
   140008705:	jb     0x14000876b
   140008707:	(bad)  
   140008708:	je     0x14000876b
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	rol    BYTE PTR [rbp+0x21c0000],0x0
   140008713:	add    BYTE PTR [rsi],ch
   140008715:	jb     0x14000877b
   140008717:	(bad)  
   140008718:	je     0x14000877b
   14000871a:	and    al,0x7a
   14000871c:	jp     0x140008798
   14000871e:	fs (bad) 
   140008720:	add    BYTE PTR [eax],al
   140008723:	add    al,ah
   140008725:	xchg   DWORD PTR [rax],eax
   140008727:	add    BYTE PTR [rdi+rax*1+0x0],al
   14000872b:	add    BYTE PTR [rsi],ch
   14000872d:	js     0x140008793
   14000872f:	(bad)  
   140008730:	je     0x140008793
   140008732:	add    BYTE PTR [rax],al
   140008734:	and    al,0x8f
   140008736:	add    BYTE PTR [rax],al
   140008738:	mov    ah,0x0
   14000873a:	add    BYTE PTR [rax],al
   14000873c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    al,bl
   140008749:	pop    QWORD PTR [rax]
   14000874b:	add    BYTE PTR [rax+rax*1],dl
   14000874e:	add    BYTE PTR [rax],al
   140008750:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008759:	add    BYTE PTR [rax],al
   14000875b:	add    al,dh
   14000875d:	pop    QWORD PTR [rax]
   14000875f:	add    BYTE PTR [rax+0x2e000003],bl
   140008765:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rax-0x3bffff6d],cl
   140008775:	(bad)  
   140008776:	add    BYTE PTR [rax],al
   140008778:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140008781:	add    BYTE PTR [rax],al
   140008783:	add    BYTE PTR [rax],al
   140008785:	movabs al,ds:0x642e000000280000
   14000878e:	(bad)  
   14000878f:	je     0x1400087f2
   140008791:	add    BYTE PTR [rax],al
   140008793:	add    BYTE PTR [rax],dh
   140008795:	movabs al,ds:0x622e000005f00000
   14000879e:	jae    0x140008813
   1400087a0:	add    BYTE PTR [rax],al
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	add    BYTE PTR [rax+0x4740000],dh
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	cs jo  0x140008813
   1400087af:	(bad)  
   1400087b0:	je     0x140008813
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	add    al,al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	pop    rax
   1400087b9:	add    BYTE PTR [rax],al
   1400087bb:	add    BYTE PTR [rsi],ch
   1400087bd:	jb     0x140008832
   1400087bf:	jb     0x140008824
   1400087c1:	and    al,0x30
   1400087c3:	xor    DWORD PTR [rax],eax
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax-0x40],ah
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	rol    BYTE PTR [rbx],0x0
   1400087cf:	add    BYTE PTR [rsi],ch
   1400087d1:	jb     0x140008846
   1400087d3:	jb     0x140008838
   1400087d5:	and    al,0x30
   1400087d7:	xor    al,BYTE PTR [rax]
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rax],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rcx],al
   1400087e1:	clts   
   1400087e3:	add    BYTE PTR [rdi],cl
   1400087e5:	fs (bad) 
   1400087e7:	add    BYTE PTR [rdi],cl
   1400087e9:	xor    al,0x6
   1400087eb:	add    BYTE PTR [rdi],cl
   1400087ed:	xor    cl,BYTE PTR [rbx]
   1400087ef:	jo     0x1400087f2
   1400087f1:	(bad)  
   1400087f2:	add    al,BYTE PTR [rax]
   1400087f4:	(bad)  
   1400087f5:	xor    al,BYTE PTR [rdx]
   1400087f7:	xor    BYTE PTR [rcx],al
   1400087f9:	sbb    ecx,DWORD PTR [rdx]
   1400087fb:	add    BYTE PTR [rbx],bl
   1400087fd:	je     0x140008810
   1400087ff:	add    BYTE PTR [rbx],bl
   140008801:	adc    BYTE PTR fs:[rax],al
   140008804:	sbb    esi,DWORD PTR [rdi+rcx*1]
   140008807:	add    BYTE PTR [rbx],bl
   140008809:	xchg   edx,eax
   14000880a:	adc    al,0xf0
   14000880c:	adc    ah,al
   14000880e:	adc    BYTE PTR [rax+0x1],dl
   140008811:	sbb    al,0xc
   140008813:	add    BYTE PTR [rsp+riz*2],bl
   140008816:	adc    BYTE PTR [rax],al
   140008818:	sbb    al,0x54
   14000881a:	ltr    WORD PTR [rsp+rsi*1]
   14000881e:	(bad)  
   14000881f:	add    BYTE PTR [rdx+rsi*2],bl
   140008822:	sbb    al,dh
   140008824:	(bad)  
   140008825:	loopne 0x14000883b
   140008827:	rcl    BYTE PTR [rdx],1
   140008829:	rcl    BYTE PTR [rax],0x70
   14000882c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d883e
   140008832:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00969d
   140008839:	push   rsp
   14000883a:	or     eax,0xc341d00
   14000883f:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0a1b7
   140008845:	loopne 0x14000885c
   140008847:	rol    BYTE PTR [rcx],0x1c
   14000884a:	or     al,0x0
   14000884c:	sbb    al,0x64
   14000884e:	adc    eax,DWORD PTR [rax]
   140008850:	sbb    al,0x54
   140008852:	adc    al,BYTE PTR [rax]
   140008854:	sbb    al,0x34
   140008856:	adc    BYTE PTR [rax],al
   140008858:	sbb    al,0x92
   14000885a:	sbb    al,dh
   14000885c:	(bad)  
   14000885d:	loopne 0x140008873
   14000885f:	rcl    BYTE PTR [rdx],1
   140008861:	rcl    BYTE PTR [rax],0x70
   140008864:	add    DWORD PTR [rbx],ebx
   140008866:	or     al,BYTE PTR [rax]
   140008868:	sbb    esp,esp
   14000886a:	ltr    WORD PTR [rbx]
   14000886d:	je     0x14000887d
   14000886f:	add    BYTE PTR [rbx],bl
   140008871:	fs or  eax,0xc341b00
   140008877:	add    BYTE PTR [rbx],bl
   140008879:	xchg   edx,eax
   14000887a:	adc    al,0x50
   14000887c:	add    DWORD PTR [rax],ebx
   14000887e:	or     BYTE PTR [rax],al
   140008880:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140008884:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140008888:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000888b:	add    BYTE PTR [rax],bl
   14000888d:	push   rdx
   14000888e:	adc    al,0x70
   140008890:	add    DWORD PTR [rdx],edx
   140008892:	(bad)  
   140008893:	add    BYTE PTR [rdx],dl
   140008895:	xor    al,0x9
   140008897:	add    BYTE PTR [rdx],dl
   140008899:	xor    cl,BYTE PTR [rsi]
   14000889b:	jo     0x1400088aa
   14000889d:	(bad)  
   14000889e:	or     al,0x50
   1400088a0:	add    DWORD PTR [rdi],eax
   1400088a2:	add    DWORD PTR [rax],eax
   1400088a4:	(bad)  
   1400088a5:	movabs ds:0x741f000b1f010000,al
   1400088ae:	sbb    BYTE PTR [rax],al
   1400088b0:	(bad)  
   1400088b1:	fs (bad) 
   1400088b3:	add    BYTE PTR [rdi],bl
   1400088b5:	xor    al,0x16
   1400088b7:	add    BYTE PTR [rdi],bl
   1400088b9:	add    DWORD PTR [rdx],edx
   1400088bb:	add    BYTE PTR [rax+rsi*8],dl
   1400088be:	adc    ah,al
   1400088c0:	adc    BYTE PTR [rax+0x0],dl
   1400088c3:	add    BYTE PTR [rcx],al
   1400088c5:	adc    al,0x8
   1400088c7:	add    BYTE PTR [rsp+riz*2],dl
   1400088ca:	or     BYTE PTR [rax],al
   1400088cc:	adc    al,0x54
   1400088ce:	(bad)  
   1400088cf:	add    BYTE PTR [rsp+rsi*1],dl
   1400088d2:	(bad)  
   1400088d3:	add    BYTE PTR [rdx+rsi*1],dl
   1400088d6:	adc    BYTE PTR [rax+0x1],dh
   1400088d9:	sbb    DWORD PTR [rdx],ecx
   1400088db:	add    BYTE PTR [rcx],bl
   1400088dd:	je     0x1400088e8
   1400088df:	add    BYTE PTR [rcx],bl
   1400088e1:	or     BYTE PTR fs:[rax],al
   1400088e4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400088e8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400088eb:	add    BYTE PTR [rcx],bl
   1400088ed:	xor    dl,BYTE PTR [rip+0x10401e0]        # 0x141048ad3
   1400088f3:	add    BYTE PTR [rdx+rax*2],al
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	add    DWORD PTR [rdi],edx
   1400088fa:	(bad)  
   1400088fb:	add    BYTE PTR [rdi],dl
   1400088fd:	je     0x140008914
   1400088ff:	add    BYTE PTR [rdi],dl
   140008901:	xor    al,0x14
   140008903:	add    BYTE PTR [rdi],dl
   140008905:	add    DWORD PTR [rdx],edx
   140008907:	add    BYTE PTR [rbx],cl
   140008909:	push   rax
   14000890a:	add    BYTE PTR [rax],al
   14000890c:	add    DWORD PTR [rbx],edx
   14000890e:	or     BYTE PTR [rax],al
   140008910:	adc    esi,DWORD PTR [rdx+rdx*1]
   140008913:	add    BYTE PTR [rbx],dl
   140008915:	mov    dl,0xc
   140008917:	lock or dl,al
   14000891a:	or     BYTE PTR [rax+0x7],dh
   14000891d:	(bad)  
   14000891e:	(bad)  
   14000891f:	push   rax
   140008920:	or     DWORD PTR [rsi+rax*1],edx
   140008923:	add    BYTE PTR [rsp+riz*2],dl
   140008926:	or     eax,DWORD PTR [rax]
   140008928:	adc    al,0x34
   14000892a:	or     BYTE PTR [rax],al
   14000892c:	adc    al,0x52
   14000892e:	adc    BYTE PTR [rax-0x2a],dh
   140008931:	add    BYTE PTR fs:[rax],al
   140008934:	add    DWORD PTR [rax],eax
   140008936:	add    BYTE PTR [rax],al
   140008938:	mov    ebp,0xe4000022
   14000893d:	and    al,BYTE PTR [rax]
   14000893f:	add    BYTE PTR [rcx],al
   140008941:	add    BYTE PTR [rax],al
   140008943:	add    ah,ah
   140008945:	and    al,BYTE PTR [rax]
   140008947:	add    BYTE PTR [rcx],bl
   140008949:	(bad)  
   14000894a:	(bad)  
   14000894b:	add    BYTE PTR [rax],dl
   14000894d:	je     0x14000895e
   14000894f:	add    BYTE PTR [rax],dl
   140008951:	xor    al,0xe
   140008953:	add    BYTE PTR [rax],dl
   140008955:	xchg   edx,eax
   140008956:	or     al,0xe0
   140008958:	(bad)  
   140008959:	add    BYTE PTR gs:[rax],al
   14000895c:	add    DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	popf   
   140008961:	and    eax,DWORD PTR [rax]
   140008963:	add    bl,al
   140008965:	and    eax,DWORD PTR [rax]
   140008967:	add    BYTE PTR [rcx],al
   140008969:	add    BYTE PTR [rax],al
   14000896b:	add    bl,al
   14000896d:	and    eax,DWORD PTR [rax]
   14000896f:	add    BYTE PTR [rcx+0x0],cl
   140008972:	add    BYTE PTR [rax],al
   140008974:	or     DWORD PTR [rdx],ecx
   140008976:	add    al,0x0
   140008978:	or     dh,BYTE PTR [rax+rcx*1]
   14000897b:	add    BYTE PTR [rdx],cl
   14000897d:	push   rdx
   14000897e:	(bad)  
   14000897f:	jo     0x140008957
   140008981:	add    BYTE PTR fs:[rax],al
   140008984:	add    DWORD PTR [rax],eax
   140008986:	add    BYTE PTR [rax],al
   140008988:	(bad)  
   140008989:	and    al,0x0
   14000898b:	add    BYTE PTR [rdx+0x24],bl
   14000898e:	add    BYTE PTR [rax],al
   140008990:	add    DWORD PTR [rax],eax
   140008992:	add    BYTE PTR [rax],al
   140008994:	pop    rdx
   140008995:	and    al,0x0
   140008997:	add    BYTE PTR [rcx],bl
   140008999:	and    al,0x7
   14000899b:	add    BYTE PTR [rdx],dl
   14000899d:	fs push rcx
   14000899f:	add    BYTE PTR [rdx],dl
   1400089a1:	xor    al,0x50
   1400089a3:	add    BYTE PTR [rdx],dl
   1400089a5:	add    DWORD PTR [rax+rax*1+0xb],ecx
   1400089a9:	jo     0x1400089ab
   1400089ab:	add    ah,al
   1400089ad:	add    BYTE PTR gs:[rax],al
   1400089b0:	add    DWORD PTR [rax],eax
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	add    DWORD PTR [rip+0x25270000],esp        # 0x1652789ba
   1400089ba:	add    BYTE PTR [rax],al
   1400089bc:	add    DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	(bad)  
   1400089c1:	and    eax,0x2510000
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	or     DWORD PTR [rsi],ebx
   1400089ca:	or     BYTE PTR [rax],al
   1400089cc:	(bad)  
   1400089cd:	xor    al,0x10
   1400089cf:	add    BYTE PTR [rsi],bl
   1400089d1:	xchg   edx,eax
   1400089d2:	sbb    dh,al
   1400089d4:	sbb    al,ah
   1400089d6:	(bad)  
   1400089d7:	rcl    BYTE PTR [rax+rsi*2],0x13
   1400089db:	(bad)  
   1400089dc:	(bad)  
   1400089dd:	add    BYTE PTR fs:[rax],al
   1400089e0:	add    DWORD PTR [rax],eax
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	hlt    
   1400089e5:	and    eax,0x26660000
   1400089ea:	add    BYTE PTR [rax],al
   1400089ec:	add    DWORD PTR [rax],eax
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	data16 add BYTE PTR es:[rax],al
   1400089f4:	or     DWORD PTR [rdi],ecx
   1400089f6:	(bad)  
   1400089f7:	add    BYTE PTR [rdi],cl
   1400089f9:	or     DWORD PTR fs:[rax],eax
   1400089fc:	sysenter 
   1400089fe:	or     BYTE PTR [rax],al
   140008a00:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008a03:	jo     0x1400089db
   140008a05:	add    BYTE PTR fs:[rax],al
   140008a08:	add    DWORD PTR [rax],eax
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	(bad)  
   140008a0d:	add    BYTE PTR es:[rax],al
   140008a10:	jmp    0x141008a3b
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    cl,ch
   140008a19:	add    BYTE PTR es:[rax],al
   140008a1c:	or     DWORD PTR [rdx],ecx
   140008a1e:	add    al,0x0
   140008a20:	or     dh,BYTE PTR [rax+rcx*1]
   140008a23:	add    BYTE PTR [rdx],cl
   140008a25:	push   rdx
   140008a26:	(bad)  
   140008a27:	jo     0x1400089ff
   140008a29:	add    BYTE PTR fs:[rax],al
   140008a2c:	add    DWORD PTR [rax],eax
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	(bad)  
   140008a31:	(bad)  
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	rex.WX (bad) 
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	add    DWORD PTR [rax],eax
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	rex.WX (bad) 
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	or     DWORD PTR [rdx],ecx
   140008a42:	add    al,0x0
   140008a44:	or     dh,BYTE PTR [rax+rcx*1]
   140008a47:	add    BYTE PTR [rdx],cl
   140008a49:	push   rdx
   140008a4a:	(bad)  
   140008a4b:	jo     0x140008a23
   140008a4d:	add    BYTE PTR fs:[rax],al
   140008a50:	add    DWORD PTR [rax],eax
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	jg     0x140008a7d
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	(bad)  
   140008a59:	(bad)  
   140008a5a:	add    BYTE PTR [rax],al
   140008a5c:	add    DWORD PTR [rax],eax
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	(bad)  
   140008a61:	(bad)  
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	or     DWORD PTR [rbx],edx
   140008a66:	or     BYTE PTR [rax],al
   140008a68:	adc    esp,DWORD PTR [rsp+rcx*1+0x0]
   140008a6c:	adc    esi,DWORD PTR [rdx+rcx*1]
   140008a6f:	add    BYTE PTR [rbx],dl
   140008a71:	push   rdx
   140008a72:	(bad)  
   140008a74:	or     eax,0xd6700be0
   140008a79:	add    BYTE PTR fs:[rax],al
   140008a7c:	add    DWORD PTR [rax],eax
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	icebp  
   140008a81:	(bad)  
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	and    eax,0x1000028
   140008a89:	add    BYTE PTR [rax],al
   140008a8b:	add    BYTE PTR [rip+0x9000028],ah        # 0x149008ab9
   140008a91:	adc    eax,0x74150008
   140008a96:	or     al,BYTE PTR [rax]
   140008a98:	adc    eax,0x15000964
   140008a9d:	xor    al,0x8
   140008a9f:	add    BYTE PTR [rip+0xffffffffd6e01152],dl        # 0x116e09bf7
   140008aa5:	add    BYTE PTR fs:[rax],al
   140008aa8:	add    DWORD PTR [rax],eax
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	sub    BYTE PTR [rax],0x0
   140008aaf:	add    BYTE PTR [rax+rbp*1+0x10000],ah
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008ab9:	sub    BYTE PTR [rax],al
   140008abb:	add    BYTE PTR [rcx],cl
   140008abd:	adc    ecx,DWORD PTR [rax]
   140008abf:	add    BYTE PTR [rbx],dl
   140008ac1:	fs or  al,0x0
   140008ac4:	adc    esi,DWORD PTR [rdx+rcx*1]
   140008ac7:	add    BYTE PTR [rbx],dl
   140008ac9:	push   rdx
   140008aca:	(bad)  
   140008acc:	or     eax,0xd6700be0
   140008ad1:	add    BYTE PTR fs:[rax],al
   140008ad4:	add    DWORD PTR [rax],eax
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	adc    DWORD PTR [rcx],ebp
   140008ada:	add    BYTE PTR [rax],al
   140008adc:	sub    DWORD PTR [r8],r8d
   140008adf:	add    BYTE PTR [rcx],al
   140008ae1:	add    BYTE PTR [rax],al
   140008ae3:	add    BYTE PTR [rbp+0x29],al
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	or     DWORD PTR [rip+0x74150008],edx        # 0x1b4158af6
   140008aee:	or     al,BYTE PTR [rax]
   140008af0:	adc    eax,0x15000964
   140008af5:	xor    al,0x8
   140008af7:	add    BYTE PTR [rip+0xffffffffd6e01152],dl        # 0x116e09c4f
   140008afd:	add    BYTE PTR fs:[rax],al
   140008b00:	add    DWORD PTR [rax],eax
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	movabs al,ds:0x1000029c4000029
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	add    ah,al
   140008b11:	sub    DWORD PTR [rax],eax
   140008b13:	add    BYTE PTR [rcx],bl
   140008b15:	and    al,0x7
   140008b17:	add    BYTE PTR [rdx],dl
   140008b19:	rex.WRXB add BYTE PTR fs:[r10],r10b
   140008b1d:	xor    al,0x4e
   140008b1f:	add    BYTE PTR [rdx],dl
   140008b21:	add    DWORD PTR [rdx+0x0],ecx
   140008b24:	or     esi,DWORD PTR [rax+0x0]
   140008b27:	add    ah,al
   140008b29:	add    BYTE PTR gs:[rax],al
   140008b2c:	add    DWORD PTR [rax],eax
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	sub    al,BYTE PTR gs:[rax]
   140008b33:	add    BYTE PTR [rsi+0x100002a],cl
   140008b39:	add    BYTE PTR [rax],al
   140008b3b:	add    BYTE PTR [rsi+0x4100002a],cl
   140008b41:	add    al,BYTE PTR [rax]
   140008b43:	add    BYTE PTR [rcx],al
   140008b45:	add    eax,0x34050002
   140008b4a:	add    DWORD PTR [rax],eax
   140008b4c:	sbb    DWORD PTR [rcx+rcx*1],ebp
   140008b4f:	add    BYTE PTR [rbx],bl
   140008b51:	xor    al,0x57
   140008b53:	add    DWORD PTR [rbx],ebx
   140008b55:	add    DWORD PTR [rax+0x1],edx
   140008b58:	or     al,0xf0
   140008b5a:	or     ah,al
   140008b5c:	or     BYTE PTR [rax+0x7],dh
   140008b5f:	(bad)  
   140008b60:	(bad)  
   140008b61:	push   rax
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	xor    al,0x65
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	jo     0x140008b74
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	sbb    DWORD PTR [rcx+rcx*1],ebp
   140008b6f:	add    BYTE PTR [rbx],bl
   140008b71:	xor    al,0x55
   140008b73:	add    BYTE PTR [rbx],bl
   140008b75:	add    DWORD PTR [rsi+0x0],ecx
   140008b78:	or     al,0xf0
   140008b7a:	or     ah,al
   140008b7c:	or     BYTE PTR [rax+0x7],dh
   140008b7f:	(bad)  
   140008b80:	(bad)  
   140008b81:	push   rax
   140008b82:	add    BYTE PTR [rax],al
   140008b84:	xor    al,0x65
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	(bad)  
   140008b89:	add    al,BYTE PTR [rax]
   140008b8b:	add    BYTE PTR [rcx],al
   140008b8d:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e429d93
   140008b93:	jo     0x140008ba2
   140008b95:	(bad)  
   140008b96:	or     al,0x50
   140008b98:	or     esi,DWORD PTR [rax]
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	add    DWORD PTR [rdx],ecx
   140008b9e:	add    al,0x0
   140008ba0:	or     dh,BYTE PTR [rsi+rax*1]
   140008ba3:	add    BYTE PTR [rdx],cl
   140008ba5:	xor    al,BYTE PTR [rsi]
   140008ba7:	jo     0x140008baa
   140008ba9:	(bad)  
   140008baa:	(bad)  
   140008bab:	add    BYTE PTR [rsi],cl
   140008bad:	xor    al,0xb
   140008baf:	add    BYTE PTR [rsi],cl
   140008bb1:	push   rdx
   140008bb2:	or     dh,BYTE PTR [rax+0x9]
   140008bb5:	(bad)  
   140008bb6:	or     BYTE PTR [rax+0x19],dl
   140008bb9:	xor    DWORD PTR [rip+0x1e742300],ecx        # 0x15e74aebf
   140008bbf:	add    BYTE PTR [rbx],ah
   140008bc1:	fs sbb eax,0x1c342300
   140008bc7:	add    BYTE PTR [rbx],ah
   140008bc9:	add    DWORD PTR [rsi],edx
   140008bcb:	add    BYTE PTR [rax],bl
   140008bcd:	lock (bad) 
   140008bcf:	loopne 0x140008be5
   140008bd1:	rcl    BYTE PTR [rdx],1
   140008bd3:	rcl    BYTE PTR [rax],0x50
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	xor    al,0x65
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	movabs al,ds:0xf00040f01000000
   140008be5:	xor    al,0x6
   140008be7:	add    BYTE PTR [rdi],cl
   140008be9:	xor    cl,BYTE PTR [rbx]
   140008beb:	jo     0x140008c06
   140008bed:	(bad)  
   140008bee:	add    eax,0x4f340d00
   140008bf3:	add    BYTE PTR [rip+0x6004c01],cl        # 0x14600d7fa
   140008bf9:	jo     0x140008bfb
   140008bfb:	add    BYTE PTR [riz*2+0x2500000],dh
   140008c02:	add    BYTE PTR [rax],al
   140008c04:	sbb    DWORD PTR [rip+0x34130009],esp        # 0x174138c13
   140008c0a:	cmp    DWORD PTR [rax],eax
   140008c0c:	adc    eax,DWORD PTR [rcx]
   140008c0e:	xor    al,BYTE PTR [rax]
   140008c10:	or     al,0xf0
   140008c12:	or     ah,al
   140008c14:	or     BYTE PTR [rax+0x7],dh
   140008c17:	(bad)  
   140008c18:	(bad)  
   140008c19:	push   rax
   140008c1a:	add    BYTE PTR [rax],al
   140008c1c:	xor    al,0x65
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	add    BYTE PTR [rcx],0x0
   140008c23:	add    BYTE PTR [rcx],bl
   140008c25:	xor    BYTE PTR [rbx],cl
   140008c27:	add    BYTE PTR [rdi],bl
   140008c29:	xor    al,0x7a
   140008c2b:	add    BYTE PTR [rdi],bl
   140008c2d:	add    DWORD PTR [rax+0x0],esi
   140008c30:	adc    al,dh
   140008c32:	(bad)  
   140008c33:	loopne 0x140008c41
   140008c35:	ror    BYTE PTR [rdx],1
   140008c37:	ror    BYTE PTR [rax],0x70
   140008c3a:	(bad)  
   140008c3b:	(bad)  
   140008c3c:	(bad)  
   140008c3d:	push   rax
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	xor    al,0x65
   140008c42:	add    BYTE PTR [rax],al
   140008c44:	jo     0x140008c49
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	or     DWORD PTR [rsi],ebx
   140008c4a:	or     BYTE PTR [rax],al
   140008c4c:	(bad)  
   140008c4d:	xchg   edx,eax
   140008c4e:	sbb    dh,al
   140008c50:	sbb    al,ah
   140008c52:	(bad)  
   140008c53:	rcl    BYTE PTR [rax+rax*8],1
   140008c56:	adc    dh,BYTE PTR [rax+0x11]
   140008c59:	(bad)  
   140008c5a:	adc    BYTE PTR [rax],dh
   140008c5c:	(bad)  
   140008c5d:	add    BYTE PTR fs:[rax],al
   140008c60:	add    al,BYTE PTR [rax]
   140008c62:	add    BYTE PTR [rax],al
   140008c64:	mov    BYTE PTR [rdi],bh
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	mov    ebx,0x100003f
   140008c6d:	add    BYTE PTR [rax],al
   140008c6f:	add    BYTE PTR [rbx-0x2effffc1],bh
   140008c75:	(bad)  
   140008c76:	add    BYTE PTR [rax],al
   140008c78:	cld    
   140008c79:	(bad)  
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	add    DWORD PTR [rax],eax
   140008c7e:	add    BYTE PTR [rax],al
   140008c80:	cld    
   140008c81:	(bad)  
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	add    DWORD PTR [rax],ebx
   140008c86:	or     al,BYTE PTR [rax]
   140008c88:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140008c8c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140008c90:	sbb    BYTE PTR [rdx+rcx*1],dh
   140008c93:	add    BYTE PTR [rax],bl
   140008c95:	push   rdx
   140008c96:	adc    al,0xf0
   140008c98:	adc    ah,al
   140008c9a:	adc    BYTE PTR [rax+0x1],dh
   140008c9d:	clts   
   140008c9f:	add    BYTE PTR [rdi],cl
   140008ca1:	or     DWORD PTR fs:[rax],eax
   140008ca4:	sysenter 
   140008ca6:	or     BYTE PTR [rax],al
   140008ca8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008cab:	jo     0x140008cae
   140008cad:	or     al,BYTE PTR [rax+rax*1]
   140008cb0:	or     dh,BYTE PTR [rax+rcx*1]
   140008cb3:	add    BYTE PTR [rdx],cl
   140008cb5:	push   rdx
   140008cb6:	(bad)  
   140008cb7:	jo     0x140008cd2
   140008cb9:	sub    eax,0x641b000b
   140008cbe:	push   rbx
   140008cbf:	add    BYTE PTR [rbx],bl
   140008cc1:	push   rsp
   140008cc2:	push   rdx
   140008cc3:	add    BYTE PTR [rbx],bl
   140008cc5:	xor    al,0x51
   140008cc7:	add    BYTE PTR [rbx],bl
   140008cc9:	add    DWORD PTR [rax+rax*1+0x14],ecx
   140008ccd:	lock adc ah,al
   140008cd0:	adc    BYTE PTR [rax+0x0],dh
   140008cd3:	add    BYTE PTR [riz*2+0x2500000],dh
   140008cda:	add    BYTE PTR [rax],al
   140008cdc:	sbb    DWORD PTR [rax],ebx
   140008cde:	add    eax,0x5e20900
   140008ce3:	jo     0x140008ce9
   140008ce5:	(bad)  
   140008ce6:	add    edx,DWORD PTR [rax+0x2]
   140008ce9:	xor    BYTE PTR [rax],al
   140008ceb:	add    BYTE PTR [riz*2+0x680000],dh
   140008cf2:	add    BYTE PTR [rax],al
   140008cf4:	sbb    DWORD PTR [rdi],esp
   140008cf6:	or     DWORD PTR [rax],eax
   140008cf8:	adc    eax,0x15005654
   140008cfd:	xor    al,0x55
   140008cff:	add    BYTE PTR [rip+0xe005001],dl        # 0x14e00dd06
   140008d05:	loopne 0x140008d13
   140008d07:	jo     0x140008d14
   140008d09:	(bad)  
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	xor    al,0x65
   140008d0e:	add    BYTE PTR [rax],al
   140008d10:	jo     0x140008d14
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    DWORD PTR [rcx],ebx
   140008d16:	(bad)  
   140008d17:	add    BYTE PTR [rcx],bl
   140008d19:	xor    dl,BYTE PTR [rip+0x127013e0]        # 0x15270a0ff
   140008d1f:	(bad)  
   140008d20:	adc    DWORD PTR [rax+0x10],edx
   140008d23:	xor    BYTE PTR [rcx],bl
   140008d25:	xor    cl,BYTE PTR [rbx]
   140008d27:	add    BYTE PTR [rcx],ah
   140008d29:	fs pop rdx
   140008d2b:	add    BYTE PTR [rcx],ah
   140008d2d:	xor    al,0x59
   140008d2f:	add    BYTE PTR [rcx],ah
   140008d31:	add    DWORD PTR [rdx+0x0],edx
   140008d34:	adc    dh,al
   140008d36:	adc    al,ah
   140008d38:	(bad)  
   140008d39:	ror    BYTE PTR [rax+rsi*2],0xb
   140008d3d:	push   rax
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	xor    al,0x65
   140008d42:	add    BYTE PTR [rax],al
   140008d44:	add    BYTE PTR [rdx],0x0
   140008d47:	add    BYTE PTR [rcx],bl
   140008d49:	sbb    eax,DWORD PTR [rbx]
   140008d4b:	add    BYTE PTR [rcx],cl
   140008d4d:	add    DWORD PTR [rax+rax*1],edi
   140008d50:	add    dh,BYTE PTR [rax]
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	xor    al,0x65
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	rol    BYTE PTR [rcx],1
   140008d5a:	add    BYTE PTR [rax],al
   140008d5c:	sbb    DWORD PTR [rax],esi
   140008d5e:	or     eax,DWORD PTR [rax]
   140008d60:	(bad)  
   140008d61:	xor    al,0x8d
   140008d63:	add    DWORD PTR [rdi],ebx
   140008d65:	add    DWORD PTR [rcx+rax*1-0x1ff10ff0],eax
   140008d6c:	or     al,0xd0
   140008d6e:	or     al,al
   140008d70:	or     BYTE PTR [rax+0x7],dh
   140008d73:	(bad)  
   140008d74:	(bad)  
   140008d75:	push   rax
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	xor    al,0x65
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	adc    BYTE PTR [rax+rax*1],cl
   140008d7f:	add    BYTE PTR [rcx],bl
   140008d81:	or     DWORD PTR es:[rax],eax
   140008d84:	sbb    BYTE PTR [rsi+rbx*1],dh
   140008d87:	add    BYTE PTR [rax],bl
   140008d89:	add    DWORD PTR [rsi],edx
   140008d8b:	add    BYTE PTR [rax+rsi*8],cl
   140008d8e:	or     ah,al
   140008d90:	or     BYTE PTR [rax+0x7],dh
   140008d93:	(bad)  
   140008d94:	(bad)  
   140008d95:	push   rax
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	xor    al,0x65
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	movabs al,ds:0x900031b19000000
   140008da5:	add    DWORD PTR [rdx],edi
   140008da7:	add    BYTE PTR [rdx],al
   140008da9:	xor    BYTE PTR [rax],al
   140008dab:	add    BYTE PTR [riz*2+0x1c00000],dh
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	add    DWORD PTR [rsi],ecx
   140008db6:	add    DWORD PTR [rax],eax
   140008db8:	(bad)  
   140008db9:	rex.X add BYTE PTR [rax],al
   140008dbc:	add    DWORD PTR [rax],ebx
   140008dbe:	or     al,BYTE PTR [rax]
   140008dc0:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140008dc4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008dc8:	sbb    BYTE PTR [rax+rcx*1],dh
   140008dcb:	add    BYTE PTR [rax],bl
   140008dcd:	xor    dl,BYTE PTR [rax+rsi*8]
   140008dd0:	adc    ah,al
   140008dd2:	adc    BYTE PTR [rax+0x19],dh
   140008dd5:	(bad)  
   140008dd6:	add    eax,0x30340d00
   140008ddb:	add    BYTE PTR [rip+0x6002c01],cl        # 0x14600b9e2
   140008de1:	jo     0x140008de3
   140008de3:	add    BYTE PTR [riz*2+0x1500000],dh
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    DWORD PTR [rsp+rax*1],ecx
   140008def:	add    BYTE PTR [rsp+rsi*1],cl
   140008df2:	or     eax,DWORD PTR [rax]
   140008df4:	or     al,0x72
   140008df6:	or     BYTE PTR [rax+0x1],dh
   140008df9:	add    al,0x1
   140008dfb:	add    BYTE PTR [rdx+riz*2],al
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	or     DWORD PTR [rax],ebx
   140008e02:	or     DWORD PTR [rax],eax
   140008e04:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140008e08:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140008e0c:	sbb    BYTE PTR [rax+rbx*1],dh
   140008e0f:	add    BYTE PTR [rax],bl
   140008e11:	add    DWORD PTR [rsi],edx
   140008e13:	add    BYTE PTR [rcx],dl
   140008e15:	lock add BYTE PTR [rax],al
   140008e18:	(bad)  
   140008e19:	add    BYTE PTR fs:[rax],al
   140008e1c:	add    DWORD PTR [rax],eax
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	nop
   140008e21:	pop    rbp
   140008e22:	add    BYTE PTR [rax],al
   140008e24:	ja     0x140008e85
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008e29:	data16 add BYTE PTR [rax],al
   140008e2c:	ja     0x140008e8d
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	add    DWORD PTR [rax],eax
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	add    DWORD PTR [rdx+rax*1],ecx
   140008e37:	add    BYTE PTR [rcx+rax*1],cl
   140008e3a:	adc    DWORD PTR [rax],eax
   140008e3c:	or     DWORD PTR [rcx+rax*1],eax
   140008e3f:	add    BYTE PTR [rdx+riz*1],al
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	(bad)  
   140008e45:	add    BYTE PTR fs:[rax],al
   140008e48:	add    DWORD PTR [rax],eax
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	pop    rsp
   140008e4d:	(bad)  
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	xchg   edx,eax
   140008e51:	(bad)  
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	add    DWORD PTR [rax],eax
   140008e56:	add    BYTE PTR [rax],al
   140008e58:	xchg   edx,eax
   140008e59:	(bad)  
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	or     DWORD PTR [rdx],ecx
   140008e5e:	add    al,0x0
   140008e60:	or     dh,BYTE PTR [rsi+rax*1]
   140008e63:	add    BYTE PTR [rdx],cl
   140008e65:	xor    al,BYTE PTR [rsi]
   140008e67:	jo     0x140008e3f
   140008e69:	add    BYTE PTR fs:[rax],al
   140008e6c:	add    DWORD PTR [rax],eax
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	ins    DWORD PTR es:[rdi],dx
   140008e71:	movsxd eax,DWORD PTR [rax]
   140008e73:	add    BYTE PTR [rax-0x2fffff9d],ah
   140008e79:	data16 add BYTE PTR [rax],al
   140008e7c:	movabs al,ds:0x600020601000063
   140008e85:	xor    al,BYTE PTR [rdx]
   140008e87:	push   rax
   140008e88:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8e92
   140008e8e:	or     DWORD PTR [rax],eax
   140008e90:	or     eax,0x19500632
   140008e95:	or     eax,0x62040001
   140008e9a:	add    BYTE PTR [rax],al
   140008e9c:	es add BYTE PTR gs:[rax],al
   140008ea0:	loopne 0x140008f16
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	(bad)  
   140008ea5:	(bad)  
   140008ea6:	(bad)  
   140008ea7:	inc    DWORD PTR [rax]
   140008ea9:	add    BYTE PTR [rax],al
   140008eab:	add    bh,bh
   140008ead:	(bad)  
   140008eae:	(bad)  
   140008eaf:	inc    DWORD PTR [rax]
	...
   140008eb9:	add    BYTE PTR [rax],al
   140008ebb:	add    BYTE PTR [rcx],al
   140008ebd:	add    BYTE PTR [rax],al
   140008ebf:	add    BYTE PTR [rcx],al
   140008ec1:	add    BYTE PTR [rax],al
   140008ec3:	add    al,cl
   140008ec5:	mov    es,WORD PTR [rax]
   140008ec7:	add    BYTE PTR [rax+0x0],al
	...
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	mul    BYTE PTR [rsi+0x0]
   140008ed7:	add    BYTE PTR [rax],bh
   140008ed9:	add    BYTE PTR [rax],al
   140008edb:	add    BYTE PTR [rax],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    ah,bh
   140008ee1:	add    BYTE PTR fs:[rax],al
   140008ee4:	(bad)  
   140008ee5:	(bad)  
   140008ee6:	(bad)  
   140008ee7:	dec    DWORD PTR [rcx]
   140008ee9:	add    BYTE PTR gs:[rax],al
   140008eec:	add    BYTE PTR [rax],al
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	pcmpgtw mm0,QWORD PTR [rax]
   140008ef3:	add    bh,bh
   140008ef5:	(bad)  
   140008ef6:	(bad)  
   140008ef7:	push   rsi
   140008ef9:	data16 add BYTE PTR [rax],al
   140008efc:	add    BYTE PTR [rax],al
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	add    esp,DWORD PTR [rdi+0x0]
   140008f03:	add    BYTE PTR [rcx],al
   140008f05:	add    BYTE PTR [rax],al
   140008f07:	add    BYTE PTR [rax],cl
   140008f09:	add    BYTE PTR [eax],al
   140008f0c:	add    BYTE PTR [rax],al
   140008f0e:	add    BYTE PTR [rax],al
   140008f10:	sbb    DWORD PTR [rdx],ecx
   140008f12:	add    al,BYTE PTR [rax]
   140008f14:	or     dh,BYTE PTR [rdx]
   140008f16:	(bad)  
   140008f17:	push   rax
   140008f18:	es add BYTE PTR gs:[rax],al
   140008f1c:	loopne 0x140008f92
   140008f1e:	add    BYTE PTR [rax],al
   140008f20:	add    DWORD PTR [rax],eax
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	lock pop QWORD PTR [rax]
	...
   140008f2f:	add    ah,bh
   140008f31:	xchg   ebx,eax
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	add    BYTE PTR [rax+0x0],dh
   140008f37:	add    BYTE PTR [rax-0x70],al
	...
   140008f42:	add    BYTE PTR [rax],al
   140008f44:	mov    dl,BYTE PTR [rsi+0x70500000]
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	rex xchg edx,eax
	...
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	in     al,dx
   140008f59:	xchg   esi,eax
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	push   rax
   140008f5d:	jb     0x140008f5f
   140008f5f:	add    BYTE PTR [rax-0x6e],dh
	...
   140008f6a:	add    BYTE PTR [rax],al
   140008f6c:	cli    
   140008f6d:	xchg   edi,eax
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	xor    BYTE PTR [rdx+0x0],0x0
   140008f74:	loopne 0x140008f07
	...
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	xor    BYTE PTR [rax+0x71f00000],bl
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	cmp    BYTE PTR [rbx+0x0],dl
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	add    BYTE PTR [rax],al
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	repnz cwde 
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	rex.W jae 0x140008f9b
   140008f9b:	add    BYTE PTR [rax],dh
   140008f9d:	nop
	...
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	adc    al,0x99
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	rex jo 0x140008faf
   140008faf:	add    al,dh
   140008fb1:	xchg   ecx,eax
	...
   140008fba:	add    BYTE PTR [rax],al
   140008fbc:	lock cdq 
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	add    BYTE PTR [rdx+0x0],dh
   140008fc3:	add    BYTE PTR [rax],dh
   140008fc5:	xchg   edx,eax
	...
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	adc    BYTE PTR [rdx+0x72400000],bl
	...
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	xchg   esi,eax
   140008ff1:	xchg   ebx,eax
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008ff9:	xchg   ebx,eax
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	mov    dh,0x93
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	retf   0x93
   14000900b:	add    BYTE PTR [rax],al
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    ah,bl
   140009011:	xchg   ebx,eax
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	out    dx,al
   140009019:	xchg   ebx,eax
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	mov    BYTE PTR [rbx+0x0],dl
	...
   14000902e:	add    BYTE PTR [rax],al
   140009030:	cld    
   140009031:	cwde   
	...
   14000903e:	add    BYTE PTR [rax],al
   140009040:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140009047:	add    BYTE PTR [rax],bh
   140009049:	xchg   esp,eax
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	rex.WX xchg rsp,rax
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	(bad)  
   140009059:	xchg   esp,eax
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	ins    BYTE PTR es:[rdi],dx
   140009061:	xchg   esp,eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	js     0x140008ffe
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	xchg   BYTE PTR [rax+rax*1+0x0],dl
   140009077:	add    BYTE PTR [rsp+rdx*4+0x0],dl
   14000907e:	add    BYTE PTR [rax],al
   140009080:	stos   BYTE PTR es:[rdi],al
   140009081:	xchg   esp,eax
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	mov    dh,0x94
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	(bad)  
   140009091:	xchg   esp,eax
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	(bad)  
   140009099:	xchg   esp,eax
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	loop   0x140009036
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	out    dx,al
   1400090a9:	xchg   esp,eax
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	cli    
   1400090b1:	xchg   esp,eax
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	or     BYTE PTR [rbp+0x0],dl
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	sbb    BYTE PTR [rax+rax*1+0x0],dl
   1400090c7:	add    BYTE PTR [rsi],ah
   1400090c9:	xchg   ebp,eax
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	cmp    BYTE PTR [rbp+0x0],dl
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	rex.WR xchg rbp,rax
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	pop    rsi
   1400090e1:	xchg   ebp,eax
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	jo     0x14000907f
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	xchg   BYTE PTR [rbp+0x0],dl
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	movabs ds:0xb400000000000095,al
   140009101:	xchg   ebp,eax
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	(bad)  
   140009109:	xchg   ebp,eax
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	(bad)  
   140009111:	xchg   ebp,eax
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	(bad)  
   140009119:	xchg   ebp,eax
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	(bad)  
   140009121:	xchg   ebp,eax
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	sbb    al,0x96
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	add    BYTE PTR [rax],al
   14000912e:	add    BYTE PTR [rax],al
   140009130:	sub    dl,BYTE PTR [rsi+0x0]
   140009136:	add    BYTE PTR [rax],al
   140009138:	ss xchg esi,eax
   14000913a:	add    BYTE PTR [rax],al
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	add    BYTE PTR [rax],al
   140009140:	xchg   rsi,rax
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	pop    rsi
   140009149:	xchg   esi,eax
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	add    BYTE PTR [rax],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	push   0xffffffffffffff96
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	jp     0x1400090f0
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	cmp    bl,BYTE PTR [rdx+0x0]
   140009166:	add    BYTE PTR [rax],al
   140009168:	sub    BYTE PTR [rdx+0x0],bl
   14000916e:	add    BYTE PTR [rax],al
   140009170:	and    BYTE PTR [rdx+0x0],bl
   140009176:	add    BYTE PTR [rax],al
   140009178:	or     dl,BYTE PTR [rax+rax*1+0x0]
   14000917f:	add    BYTE PTR [rdx],bl
   140009181:	xchg   ebp,eax
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	push   0x9a
   14000918d:	add    BYTE PTR [rax],al
   14000918f:	add    BYTE PTR [rsi-0x66],cl
   140009192:	add    BYTE PTR [rax],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	jl     0x140009134
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	cwde   
   1400091a1:	(bad)  
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	mov    dh,0x9a
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	retf   0x9a
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    dh,bl
   1400091b9:	(bad)  
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	clc    
   1400091c1:	(bad)  
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	(bad)  
   1400091c9:	fwait
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	sub    BYTE PTR [rbx+0x0],bl
	...
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	(bad)  
   1400091e1:	add    BYTE PTR [rax],al
   1400091e3:	add    BYTE PTR [rax],al
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    BYTE PTR [rax],0x0
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	and    bl,BYTE PTR [rcx+0x0]
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	cmp    bl,BYTE PTR [rcx+0x0]
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	int3   
   140009201:	cdq    
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	test   al,0x99
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    BYTE PTR [rax],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	mov    bl,BYTE PTR [rcx+0x0]
   140009216:	add    BYTE PTR [rax],al
   140009218:	push   0xffffffffffffff99
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	add    BYTE PTR [rax],al
   14000921e:	add    BYTE PTR [rax],al
   140009220:	push   rdx
   140009221:	cdq    
	...
   14000922e:	add    BYTE PTR [rax],al
   140009230:	(bad)  
   140009231:	cdq    
	...
   14000923e:	add    BYTE PTR [rax],al
   140009240:	loopne 0x1400091d8
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    BYTE PTR [rax],al
   140009246:	add    BYTE PTR [rax],al
   140009248:	stos   BYTE PTR es:[rdi],al
   140009249:	xchg   esi,eax
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	mov    eax,0x96
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax+0x96],bl
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    ah,cl
   140009261:	xchg   esi,eax
	...
   14000926e:	add    BYTE PTR [rax],al
   140009270:	sbb    bl,BYTE PTR [rax+0x0]
   140009276:	add    BYTE PTR [rax],al
   140009278:	cmp    BYTE PTR [rbx+0x0],bl
   14000927e:	add    BYTE PTR [rax],al
   140009280:	pop    rax
   140009281:	xchg   edi,eax
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	cmp    al,0x97
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	add    BYTE PTR [rax],al
   14000928e:	add    BYTE PTR [rax],al
   140009290:	xor    BYTE PTR [rdi+0x0],dl
   140009296:	add    BYTE PTR [rax],al
   140009298:	es xchg edi,eax
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	add    BYTE PTR [rax],al
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	(bad)  
   1400092a1:	xchg   edi,eax
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	adc    al,0x97
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	add    BYTE PTR [rax],al
   1400092ae:	add    BYTE PTR [rax],al
   1400092b0:	(bad)  
   1400092b1:	xchg   edi,eax
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	(bad)  
   1400092b9:	cwde   
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	add    BYTE PTR [rax],al
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	out    dx,al
   1400092c1:	xchg   edi,eax
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	in     al,0x97
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	ficom  DWORD PTR [rdi+0x0]
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	ret    0x97
   1400092db:	add    BYTE PTR [rax],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rsi+0x97],dh
   1400092e5:	add    BYTE PTR [rax],al
   1400092e7:	add    BYTE PTR [rdx+0x97],ah
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rdi+rdx*4+0x0],dl
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	mov    dl,BYTE PTR [rdi+0x0]
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	(bad)  
   140009301:	xchg   edi,eax
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	jp     0x1400092a1
   14000930a:	add    BYTE PTR [rax],al
   14000930c:	add    BYTE PTR [rax],al
   14000930e:	add    BYTE PTR [rax],al
   140009310:	rex.WX xchg rdi,rax
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	push   0x97
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    al,bh
   140009321:	xchg   esi,eax
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	rex.X
   140009329:	fwait
	...
   140009336:	add    BYTE PTR [rax],al
   140009338:	ficomp DWORD PTR [rax+0x0]
   14000933e:	add    BYTE PTR [rax],al
   140009340:	enter  0x98,0x0
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	mov    dh,0x98
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    BYTE PTR [rax],al
   14000934e:	add    BYTE PTR [rax],al
   140009350:	sahf   
   140009351:	cwde   
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	xchg   BYTE PTR [rax+0x0],bl
   14000935e:	add    BYTE PTR [rax],al
   140009360:	jbe    0x1400092fa
   140009362:	add    BYTE PTR [rax],al
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	cbw    
   14000936a:	add    BYTE PTR [rax],al
   14000936c:	add    BYTE PTR [rax],al
   14000936e:	add    BYTE PTR [rax],al
   140009370:	push   rdx
   140009371:	cwde   
   140009372:	add    BYTE PTR [rax],al
   140009374:	add    BYTE PTR [rax],al
   140009376:	add    BYTE PTR [rax],al
   140009378:	ds cwde 
	...
   140009386:	add    BYTE PTR [rax],al
   140009388:	push   rbp
   140009389:	add    dl,BYTE PTR [rdx+0x65]
   14000938c:	rex.XB ins BYTE PTR es:[edi],dx
   14000938f:	outs   dx,DWORD PTR ds:[rsi]
   140009390:	jae    0x1400093f7
   140009392:	rex.WXB
   140009393:	gs jns 0x140009396
   140009396:	xchg   BYTE PTR [rdx],al
   140009398:	push   rdx
   140009399:	gs addr32 rex.WRXB jo 0x140009403
   14000939e:	outs   dx,BYTE PTR ds:[rsi]
   14000939f:	rex.WXB
   1400093a0:	gs jns 0x1400093e8
   1400093a3:	js     0x1400093fc
   1400093a5:	add    BYTE PTR [rdx+rax*1+0x52],dh
   1400093a9:	rex.RB outs dx,BYTE PTR gs:[esi]
   1400093ad:	jne    0x14000941c
   1400093af:	rex.WXB
   1400093b0:	gs jns 0x1400093f8
   1400093b3:	js     0x14000940c
   1400093b5:	add    BYTE PTR [rbx+0x67655202],dl
   1400093bb:	push   rcx
   1400093bc:	jne    0x140009423
   1400093be:	jb     0x140009439
   1400093c0:	push   rsi
   1400093c1:	(bad)  
   1400093c2:	ins    BYTE PTR es:[rdi],dx
   1400093c3:	jne    0x14000942a
   1400093c5:	rex.RB js 0x14000941f
   1400093c8:	add    BYTE PTR [rax],al
   1400093ca:	pop    rsi
   1400093cb:	add    dl,BYTE PTR [rdx+0x65]
   1400093ce:	addr32 rex.XB jb 0x140009437
   1400093d2:	(bad)  
   1400093d3:	je     0x14000943a
   1400093d5:	rex.WXB
   1400093d6:	gs jns 0x14000941e
   1400093d9:	js     0x140009432
   1400093db:	add    BYTE PTR [rdx+rax*1+0x51676552],dl
   1400093e2:	jne    0x140009449
   1400093e4:	jb     0x14000945f
   1400093e6:	push   rsi
   1400093e7:	(bad)  
   1400093e8:	ins    BYTE PTR es:[rdi],dx
   1400093e9:	jne    0x140009450
   1400093eb:	push   rdi
   1400093ec:	add    BYTE PTR [rax],al
   1400093ee:	mov    DWORD PTR [rdx],eax
   1400093f0:	push   rdx
   1400093f1:	gs addr32 rex.WRXB jo 0x14000945b
   1400093f6:	outs   dx,BYTE PTR ds:[rsi]
   1400093f7:	rex.WXB
   1400093f8:	gs jns 0x140009452
   1400093fb:	add    BYTE PTR [rcx+0x44],al
   1400093fe:	push   rsi
   1400093ff:	push   r8
   140009401:	xor    rsi,QWORD PTR [r10]
   140009404:	cs fs ins BYTE PTR es:[rdi],dx
   140009407:	ins    BYTE PTR es:[rdi],dx
   140009408:	add    BYTE PTR [rax],al
   14000940a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000940b:	add    DWORD PTR [rsi+0x72],eax
   14000940e:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140009418:	scas   eax,DWORD PTR es:[rdi]
   140009419:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000941d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140009426:	add    BYTE PTR [rax],al
   140009428:	push   rdi
   140009429:	add    al,BYTE PTR [rdi+0x65]
   14000942c:	je     0x14000947a
   14000942e:	(bad)  
   14000942f:	jae    0x1400094a5
   140009431:	rex.RB jb 0x1400094a6
   140009434:	outs   dx,DWORD PTR ds:[rsi]
   140009435:	jb     0x140009437
   140009437:	add    BYTE PTR [rbp+0x74654702],ah
   14000943d:	push   rax
   14000943e:	jb     0x1400094af
   140009440:	movsxd eax,DWORD PTR [rcx+0x64]
   140009443:	fs jb  0x1400094ab
   140009446:	jae    0x1400094bb
   140009448:	add    BYTE PTR [rax],al
   14000944a:	add    r9d,DWORD PTR [rax+0x65]
   14000944e:	(bad)  
   14000944f:	jo     0x1400094a4
   140009451:	gs je  0x14000949d
   140009454:	outs   dx,BYTE PTR ds:[rsi]
   140009455:	outs   dx,WORD PTR ds:[rsi]
   140009457:	jb     0x1400094c6
   140009459:	(bad)  
   14000945a:	je     0x1400094c5
   14000945c:	outs   dx,DWORD PTR ds:[rsi]
   14000945d:	outs   dx,BYTE PTR ds:[rsi]
   14000945e:	add    BYTE PTR [rax],al
   140009460:	mov    ecx,0x636f4c03
   140009465:	(bad)  
   140009466:	ins    BYTE PTR es:[rdi],dx
   140009467:	rex.RX jb 0x1400094cf
   14000946a:	add    BYTE PTR gs:[rsi],ch
   14000946d:	(bad)  
   14000946e:	ins    BYTE PTR es:[rdi],dx
   14000946f:	jae    0x1400094e5
   140009471:	jb     0x1400094df
   140009473:	outs   dx,BYTE PTR gs:[rsi]
   140009475:	push   rdi
   140009476:	add    BYTE PTR [rax],al
   140009478:	jge    0x14000947a
   14000947a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000947c:	outs   dx,DWORD PTR ds:[rsi]
   14000947d:	jae    0x1400094e4
   14000947f:	rex.W (bad) 
   140009481:	outs   dx,BYTE PTR ds:[rsi]
   140009482:	fs ins BYTE PTR es:[rdi],dx
   140009484:	gs add cl,dl
   140009487:	add    al,0x53
   140009489:	gs je  0x1400094cf
   14000948c:	outs   dx,DWORD PTR ds:[rsi]
   14000948d:	ins    DWORD PTR es:[rdi],dx
   14000948e:	ins    DWORD PTR es:[rdi],dx
   14000948f:	rex.WRB (bad) 
   140009491:	jae    0x1400094fe
   140009493:	add    BYTE PTR [rbp+0x1],dl
   140009496:	rex.RB jae 0x1400094fc
   140009499:	(bad)  
   14000949a:	jo     0x140009501
   14000949c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000949e:	ins    DWORD PTR es:[rdi],dx
   14000949f:	ins    DWORD PTR es:[rdi],dx
   1400094a0:	rex.RX jne 0x140009511
   1400094a3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400094a7:	outs   dx,BYTE PTR ds:[rsi]
   1400094a8:	add    BYTE PTR [rax],al
   1400094aa:	(bad)  
   1400094ab:	add    al,0x50
   1400094ad:	jne    0x140009521
   1400094af:	rex.XB outs dx,DWORD PTR gs:[esi]
   1400094b3:	ins    DWORD PTR es:[rdi],dx
   1400094b4:	ins    DWORD PTR es:[rdi],dx
   1400094b5:	add    BYTE PTR [rbp+0x636f4c03],dh
   1400094bb:	(bad)  
   1400094bc:	ins    BYTE PTR es:[rdi],dx
   1400094bd:	rex.B ins BYTE PTR es:[rdi],dx
   1400094bf:	ins    BYTE PTR es:[rdi],dx
   1400094c0:	outs   dx,DWORD PTR ds:[rsi]
   1400094c1:	movsxd eax,DWORD PTR [rax]
   1400094c3:	add    BYTE PTR [rcx+0x6d6f4300],dl
   1400094c9:	jo     0x14000952c
   1400094cb:	jb     0x140009532
   1400094cd:	push   rbx
   1400094ce:	je     0x140009542
   1400094d0:	imul   ebp,DWORD PTR [rsi+0x67],0x25000057
   1400094d7:	(bad)  
   1400094d8:	ins    BYTE PTR es:[rdi],dx
   1400094d9:	jae    0x14000954f
   1400094db:	jb     0x140009540
   1400094dd:	ins    DWORD PTR es:[rdi],dx
   1400094de:	jo     0x140009549
   1400094e0:	push   rdi
   1400094e1:	add    BYTE PTR [rsp+rax*1+0x52],bl
   1400094e5:	gs (bad) 
   1400094e7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x57060000
   1400094f1:	jb     0x14000955c
   1400094f3:	je     0x14000955a
   1400094f5:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x724300c0
   1400094fe:	gs (bad) 
   140009500:	je     0x140009567
   140009502:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43007b00
   14000950b:	ins    BYTE PTR es:[rdi],dx
   14000950c:	gs (bad) 
   14000950e:	jb     0x140009553
   140009510:	outs   dx,DWORD PTR ds:[rsi]
   140009511:	ins    DWORD PTR es:[rdi],dx
   140009512:	ins    DWORD PTR es:[rdi],dx
   140009513:	rex.RB jb 0x140009588
   140009516:	outs   dx,DWORD PTR ds:[rsi]
   140009517:	jb     0x140009519
   140009519:	add    BYTE PTR [rcx+0x5],ch
   14000951c:	push   rbx
   14000951d:	gs je  0x140009595
   140009520:	jo     0x140009565
   140009522:	outs   dx,DWORD PTR ds:[rsi]
   140009523:	ins    DWORD PTR es:[rdi],dx
   140009524:	ins    DWORD PTR es:[rdi],dx
   140009525:	add    bl,dl
   140009527:	add    al,0x53
   140009529:	gs je  0x14000956f
   14000952c:	outs   dx,DWORD PTR ds:[rsi]
   14000952d:	ins    DWORD PTR es:[rdi],dx
   14000952e:	ins    DWORD PTR es:[rdi],dx
   14000952f:	push   rsp
   140009530:	imul   ebp,DWORD PTR [rbp+0x65],0x7374756f
   140009537:	add    BYTE PTR [rsi+0x2],ch
   14000953a:	rex.RXB
   14000953b:	gs je  0x14000958b
   14000953e:	outs   dx,DWORD PTR ds:[rsi]
   14000953f:	fs jne 0x1400095ae
   140009542:	gs rex.W (bad) 
   140009545:	outs   dx,BYTE PTR ds:[rsi]
   140009546:	fs ins BYTE PTR es:[rdi],dx
   140009548:	gs push rdi
   14000954a:	add    BYTE PTR [rax],al
   14000954c:	add    al,BYTE PTR [rbx]
   14000954e:	rex.RXB
   14000954f:	gs je  0x1400095a6
   140009552:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140009559:	(bad)  
   14000955a:	je     0x1400095b3
   14000955c:	add    BYTE PTR [rax],al
   14000955e:	sbb    eax,DWORD PTR [rdx]
   140009560:	rex.RXB
   140009561:	gs je  0x1400095a8
   140009564:	(bad)  
   140009565:	je     0x1400095cc
   140009567:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140009569:	jb     0x1400095d8
   14000956b:	(bad)  
   14000956c:	je     0x1400095c5
   14000956e:	add    BYTE PTR [rax],al
   140009570:	push   0x2
   140009572:	rex.RXB
   140009573:	gs je  0x1400095c3
   140009576:	outs   dx,DWORD PTR ds:[rsi]
   140009577:	fs jne 0x1400095e6
   14000957a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140009584:	add    BYTE PTR [rax],al
   140009586:	pop    rbx
   140009587:	add    DWORD PTR [rbp+0x78],eax
   14000958a:	jo     0x1400095ed
   14000958c:	outs   dx,BYTE PTR ds:[rsi]
   14000958d:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140009590:	jbe    0x1400095fb
   140009592:	jb     0x140009603
   140009594:	outs   dx,BYTE PTR ds:[rsi]
   140009595:	ins    DWORD PTR es:[rdi],dx
   140009596:	outs   dx,BYTE PTR gs:[rsi]
   140009598:	je     0x1400095ed
   14000959a:	je     0x14000960e
   14000959c:	imul   ebp,DWORD PTR [rsi+0x67],0x14005773
   1400095a3:	add    eax,0x46746553
   1400095a8:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   1400095b0:	gs jb  0x1400095b3
   1400095b3:	add    BYTE PTR [rdx],al
   1400095b5:	add    eax,0x45746553
   1400095ba:	outs   dx,BYTE PTR ds:[rsi]
   1400095bb:	fs rex.WRXB
   1400095bd:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5800
   1400095c5:	add    al,BYTE PTR [rdi+0x65]
   1400095c8:	je     0x140009616
   1400095ca:	outs   dx,DWORD PTR ds:[rsi]
   1400095cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400095ce:	push   rsp
   1400095cf:	imul   ebp,DWORD PTR [rbp+0x65],0x2150000
   1400095d6:	rex.RXB
   1400095d7:	gs je  0x14000961d
   1400095da:	jne    0x14000964e
   1400095dc:	jb     0x140009643
   1400095de:	outs   dx,BYTE PTR ds:[rsi]
   1400095df:	je     0x140009635
   1400095e1:	push   0x64616572
   1400095e6:	rex.WB
   1400095e7:	add    BYTE PTR fs:[rax],al
   1400095ea:	cwde   
   1400095eb:	add    DWORD PTR [rsi+0x6c],eax
   1400095ee:	jne    0x140009663
   1400095f0:	push   0x656c6946
   1400095f5:	rex.X jne 0x14000965e
   1400095f8:	data16 gs jb 0x14000966f
   1400095fc:	add    BYTE PTR [rax],al
   1400095fe:	(bad)  
   1400095ff:	add    al,BYTE PTR [rdi+0x65]
   140009602:	je     0x14000964a
   140009604:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   14000960c:	ins    DWORD PTR es:[rdi],dx
   14000960d:	(bad)  
   14000960e:	je     0x140009679
   140009610:	outs   dx,DWORD PTR ds:[rsi]
   140009611:	outs   dx,BYTE PTR ds:[rsi]
   140009612:	rex.X jns 0x14000965d
   140009615:	(bad)  
   140009616:	outs   dx,BYTE PTR ds:[rsi]
   140009617:	fs ins BYTE PTR es:[rdi],dx
   140009619:	add    BYTE PTR gs:[rax],al
   14000961c:	ret    
   14000961d:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   140009621:	imul   eax,DWORD PTR [rsi+0x69],0x6c
   140009625:	gs rex.RB js 0x140009629
   140009629:	add    BYTE PTR [rbx+rax*1],bh
   14000962c:	rex.W
   14000962d:	gs (bad) 
   14000962f:	jo     0x140009672
   140009631:	ins    BYTE PTR es:[rdi],dx
   140009632:	ins    BYTE PTR es:[rdi],dx
   140009633:	outs   dx,DWORD PTR ds:[rsi]
   140009634:	movsxd eax,DWORD PTR [rax]
   140009636:	stos   DWORD PTR es:[rdi],eax
   140009637:	add    al,BYTE PTR [rdi+0x65]
   14000963a:	je     0x14000968c
   14000963c:	jb     0x1400096ad
   14000963e:	movsxd esp,DWORD PTR [rbp+0x73]
   140009641:	jae    0x14000968b
   140009643:	gs (bad) 
   140009645:	jo     0x140009647
   140009647:	add    ah,ch
   140009649:	add    eax,0x65646957
   14000964e:	rex.XB push 0x6f547261
   140009654:	rex.WRB jne 0x1400096c3
   140009657:	je     0x1400096c2
   140009659:	rex.X jns 0x1400096d0
   14000965c:	add    BYTE PTR gs:[rax+0x3],al
   140009660:	rex.W
   140009661:	gs (bad) 
   140009663:	jo     0x1400096ab
   140009665:	jb     0x1400096cc
   140009667:	add    BYTE PTR gs:[rax],al
   14000966a:	movabs al,ds:0x466b636f6c6e5505
   140009673:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x23000078
   14000967b:	add    eax,0x4c746553
   140009680:	(bad)  
   140009681:	jae    0x1400096f7
   140009683:	rex.RB jb 0x1400096f8
   140009686:	outs   dx,DWORD PTR ds:[rsi]
   140009687:	jb     0x140009689
   140009689:	add    BYTE PTR [rbx+0x45],cl
   14000968c:	push   rdx
   14000968d:	rex.WRX
   14000968e:	rex.RB
   14000968f:	xor    r14,QWORD PTR [rdx]
   140009692:	cs fs ins BYTE PTR es:[rdi],dx
   140009695:	ins    BYTE PTR es:[rdi],dx
   140009696:	add    BYTE PTR [rax],al
   140009698:	test   BYTE PTR [rdx],al
   14000969a:	push   rax
   14000969b:	outs   dx,DWORD PTR ds:[rsi]
   14000969c:	jae    0x140009712
   14000969e:	push   rcx
   14000969f:	jne    0x14000970a
   1400096a1:	je     0x1400096f0
   1400096a3:	gs jae 0x140009719
   1400096a6:	(bad)  
   1400096a7:	add    BYTE PTR gs:[eax+0x1],bh
   1400096ac:	rex.RXB
   1400096ad:	gs je  0x1400096fd
   1400096b0:	gs jae 0x140009726
   1400096b3:	(bad)  
   1400096b4:	addr32 gs push rdi
   1400096b7:	add    BYTE PTR [rbx+0x3],ch
   1400096ba:	push   rsp
   1400096bb:	jb     0x14000971e
   1400096bd:	outs   dx,BYTE PTR ds:[rsi]
   1400096be:	jae    0x14000972c
   1400096c0:	(bad)  
   1400096c1:	je     0x140009728
   1400096c3:	rex.WRB
   1400096c4:	gs jae 0x14000973a
   1400096c7:	(bad)  
   1400096c8:	add    BYTE PTR gs:[eax],al
   1400096cc:	mov    dh,0x0
   1400096ce:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400096d6:	rex.WRB
   1400096d7:	gs jae 0x14000974d
   1400096da:	(bad)  
   1400096db:	addr32 gs push rdi
   1400096de:	add    BYTE PTR [rax],al
   1400096e0:	xor    DWORD PTR [rax],eax
   1400096e2:	rex.XB push 0x654e7261
   1400096e8:	js     0x14000975e
   1400096ea:	push   rdi
   1400096eb:	add    BYTE PTR [rbp+0x53],dl
   1400096ee:	rex.RB push r10
   1400096f0:	xor    esi,DWORD PTR [rdx]
   1400096f2:	cs fs ins BYTE PTR es:[rdi],dx
   1400096f5:	ins    BYTE PTR es:[rdi],dx
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	imul   eax,DWORD PTR [rbx],0x6e73765f
   1400096fe:	ja     0x140009770
   140009700:	jb     0x14000976b
   140009702:	outs   dx,BYTE PTR ds:[rsi]
   140009703:	je     0x14000976b
   140009705:	add    BYTE PTR [rax+0x3],ah
   140009708:	pop    rdi
   140009709:	jbe    0x14000977e
   14000970b:	movsxd esi,DWORD PTR [rdi+0x70]
   14000970e:	jb     0x140009779
   140009710:	outs   dx,BYTE PTR ds:[rsi]
   140009711:	je     0x140009779
   140009713:	add    BYTE PTR [rax],dl
   140009715:	add    eax,0x72736377
   14000971a:	movsxd ebp,DWORD PTR [rax+0x72]
   14000971d:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140009721:	jb     0x140009788
   140009723:	add    BYTE PTR gs:[rax],al
   140009726:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000972d:	movsxd eax,DWORD PTR [rax]
   14000972f:	add    BYTE PTR [rdi+0x61635f00],bh
   140009735:	ins    BYTE PTR es:[rdi],dx
   140009736:	ins    BYTE PTR es:[rdi],dx
   140009737:	outs   dx,BYTE PTR ds:[rsi]
   140009738:	gs ja  0x1400097a3
   14000973b:	add    BYTE PTR [rbp+0x0],dl
   14000973e:	pop    rdi
   14000973f:	pop    rax
   140009740:	movsxd esi,DWORD PTR [rax+0x74]
   140009743:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000974c:	pop    rdi
   14000974d:	(bad)  
   14000974e:	ins    DWORD PTR es:[rdi],dx
   14000974f:	jae    0x1400097b8
   140009751:	pop    rdi
   140009752:	gs js  0x1400097be
   140009755:	je     0x140009757
   140009757:	add    BYTE PTR [rdi+0x0],bh
   14000975a:	pop    rdi
   14000975b:	pop    rdi
   14000975c:	addr32 gs je 0x1400097cd
   140009760:	(bad)  
   140009761:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140009768:	mov    es,WORD PTR [rax]
   14000976a:	pop    rdi
   14000976b:	pop    rdi
   14000976c:	jae    0x1400097d3
   14000976e:	je     0x1400097cf
   140009770:	(bad)  
   140009771:	jo     0x1400097e3
   140009773:	pop    rdi
   140009774:	je     0x1400097ef
   140009776:	jo     0x1400097dd
   140009778:	add    BYTE PTR [rax],al
   14000977a:	xor    al,BYTE PTR [riz*2+0x746978]
   140009781:	add    BYTE PTR [rsi],cl
   140009783:	add    DWORD PTR [rdi+0x65],ebx
   140009786:	js     0x1400097f1
   140009788:	je     0x14000978a
   14000978a:	rol    DWORD PTR [rax],0x5f
   14000978d:	movsxd esp,DWORD PTR [rbp+0x78]
   140009790:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140009798:	jae    0x140009807
   14000979a:	(bad)
   14000979f:	add    BYTE PTR fs:[rax],al
   1400097a2:	nop
   1400097a3:	add    BYTE PTR [rdi+0x5f],bl
   1400097a6:	jae    0x14000980d
   1400097a8:	je     0x14000981f
   1400097aa:	jae    0x140009811
   1400097ac:	jb     0x14000981b
   1400097ae:	(bad)  
   1400097af:	je     0x140009819
   1400097b1:	gs jb  0x140009826
   1400097b4:	add    BYTE PTR [rax],al
   1400097b6:	jge    0x1400097b9
   1400097b8:	pop    rdi
   1400097b9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400097c0:	ins    DWORD PTR es:[rdi],dx
   1400097c1:	add    BYTE PTR [rdi+0x0],dl
   1400097c4:	pop    rdi
   1400097c5:	pop    rdi
   1400097c6:	rex.XB pop r15
   1400097c8:	jae    0x14000983a
   1400097ca:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400097ce:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400097d5:	ins    BYTE PTR es:[rdi],dx
   1400097d6:	gs jb  0x1400097d9
   1400097d9:	add    BYTE PTR [rdx+0x63615f00],ah
   1400097df:	ins    DWORD PTR es:[rdi],dx
   1400097e0:	fs ins BYTE PTR es:[rdi],dx
   1400097e2:	outs   dx,BYTE PTR ds:[rsi]
   1400097e3:	add    BYTE PTR [rdi],ah
   1400097e5:	add    DWORD PTR [rdi+0x66],ebx
   1400097e8:	ins    DWORD PTR es:[rdi],dx
   1400097e9:	outs   dx,DWORD PTR ds:[rsi]
   1400097ea:	fs add BYTE PTR gs:[rax],al
   1400097ee:	rol    BYTE PTR [rax],cl
   1400097f0:	pop    rdi
   1400097f1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400097f4:	ins    DWORD PTR es:[rdi],dx
   1400097f5:	outs   dx,DWORD PTR ds:[rsi]
   1400097f6:	fs add BYTE PTR gs:[rax],al
   1400097fa:	ins    DWORD PTR es:[rdi],dx
   1400097fb:	jae    0x140009873
   1400097fd:	movsxd esi,DWORD PTR [rdx+0x74]
   140009800:	cs fs ins BYTE PTR es:[rdi],dx
   140009803:	ins    BYTE PTR es:[rdi],dx
   140009804:	add    BYTE PTR [rax],al
   140009806:	(bad)  
   140009807:	add    BYTE PTR [rdi],bh
   140009809:	je     0x140009870
   14000980b:	jb     0x14000987a
   14000980d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140009814:	pop    rcx
   140009815:	pop    r8
   140009817:	pop    rax
   140009818:	pop    rdx
   140009819:	add    BYTE PTR [rbx+0x0],bl
   14000981c:	pop    rdi
   14000981d:	pop    rdi
   14000981e:	rex.XB js 0x140009899
   140009821:	rex.RX jb 0x140009885
   140009824:	ins    DWORD PTR es:[rdi],dx
   140009825:	gs rex.W (bad) 
   140009828:	outs   dx,BYTE PTR ds:[rsi]
   140009829:	fs ins BYTE PTR es:[rdi],dx
   14000982b:	gs jb  0x140009861
   14000982e:	add    BYTE PTR [rax],al
   140009830:	rex.WRXB
   140009831:	rex.WR
   140009832:	rex.RB
   140009833:	push   r13
   140009835:	push   rsp
   140009836:	xor    esi,DWORD PTR [rdx]
   140009838:	cs fs ins BYTE PTR es:[rdi],dx
   14000983b:	ins    BYTE PTR es:[rdi],dx
   14000983c:	add    BYTE PTR [rax],al
   14000983e:	(bad)  
   14000983f:	add    DWORD PTR [rax+0x72],edx
   140009842:	outs   dx,DWORD PTR ds:[rsi]
   140009843:	jo     0x14000989b
   140009845:	(bad)  
   140009846:	jb     0x1400098b1
   140009848:	(bad)  
   140009849:	outs   dx,BYTE PTR ds:[rsi]
   14000984a:	je     0x14000988f
   14000984c:	ins    BYTE PTR es:[rdi],dx
   14000984d:	gs (bad) 
   14000984f:	jb     0x140009851
   140009851:	add    BYTE PTR [rbx],ch
   140009853:	add    BYTE PTR [rbx+0x6f],al
   140009856:	rex.XB jb 0x1400098be
   140009859:	(bad)  
   14000985a:	je     0x1400098c1
   14000985c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000985e:	jae    0x1400098d4
   140009860:	(bad)  
   140009861:	outs   dx,BYTE PTR ds:[rsi]
   140009862:	movsxd esp,DWORD PTR [rbp+0x0]
   140009865:	add    BYTE PTR [rax+rax*1+0x61546f43],cl
   14000986c:	jae    0x1400098d9
   14000986e:	rex.WRB
   14000986f:	gs ins DWORD PTR es:[rdi],dx
   140009871:	rex.RX jb 0x1400098d9
   140009874:	add    BYTE PTR gs:[rax+0x0],ah
   140009878:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000987a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000987c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009884:	add    BYTE PTR [rax],al
   140009886:	(bad)  
   140009887:	add    BYTE PTR [rbx+0x6f],al
   14000988a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000988c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009894:	push   rbx
   140009895:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009899:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43007600
   1400098a1:	outs   dx,DWORD PTR ds:[rsi]
   1400098a2:	push   rdx
   1400098a3:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   1400098ac:	(bad)  
   1400098ad:	jae    0x140009922
   1400098af:	rex.WRXB (bad) 
   1400098b1:	push   0x65
   1400098b3:	movsxd esi,DWORD PTR [rax+rax*1-0x70]
   1400098b7:	add    BYTE PTR [rbx+0x6f],al
   1400098ba:	push   rbp
   1400098bb:	outs   dx,BYTE PTR ds:[rsi]
   1400098bc:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400098c3:	imul   edi,DWORD PTR [rdx+0x65],0x100000
   1400098ca:	rex.XB
   1400098cb:	rex.WR push rbx
   1400098cd:	rex.WB
   1400098ce:	rex.R
   1400098cf:	rex.RX jb 0x140009941
   1400098d2:	ins    DWORD PTR es:[rdi],dx
   1400098d3:	push   rbx
   1400098d4:	je     0x140009948
   1400098d6:	imul   ebp,DWORD PTR [rsi+0x67],0x4600b900
   1400098dd:	jb     0x140009944
   1400098df:	gs push rax
   1400098e1:	jb     0x140009952
   1400098e3:	jo     0x14000993b
   1400098e5:	(bad)  
   1400098e6:	jb     0x140009951
   1400098e8:	(bad)  
   1400098e9:	outs   dx,BYTE PTR ds:[rsi]
   1400098ea:	je     0x14000992d
   1400098ec:	jb     0x140009960
   1400098ee:	(bad)  
   1400098ef:	jns    0x1400098f1
   1400098f1:	add    BYTE PTR [rdi+0x6c],ch
   1400098f4:	xor    esi,DWORD PTR gs:[rdx]
   1400098f7:	cs fs ins BYTE PTR es:[rdi],dx
   1400098fa:	ins    BYTE PTR es:[rdi],dx
   1400098fb:	add    BYTE PTR [rsi+0x0],bl
   1400098fe:	rex.XB
   1400098ff:	rex.WRB pop r15
   140009901:	rex.RXB
   140009902:	gs je  0x140009964
   140009905:	rex.R
   140009906:	gs jbe 0x140009957
   140009909:	outs   dx,DWORD PTR ds:[rsi]
   14000990a:	fs gs pop rdi
   14000990d:	push   rbx
   14000990e:	je     0x140009971
   140009910:	je     0x140009987
   140009912:	jae    0x140009914
   140009914:	rex.XB
   140009915:	rex.RX
   140009916:	rex.RXB
   140009917:	rex.WRB
   140009918:	rex.RXB push r10
   14000991a:	xor    esi,DWORD PTR [rdx]
   14000991c:	cs fs ins BYTE PTR es:[rdi],dx
   14000991f:	ins    BYTE PTR es:[rdi],dx
   140009920:	add    BYTE PTR [rax],al
   140009922:	push   rsp
   140009923:	add    DWORD PTR [rbx+0x65],edx
   140009926:	je     0x14000999d
   140009928:	jo     0x14000996e
   14000992a:	imul   eax,DWORD PTR [rdi+0x65],0x616c4374
   140009931:	jae    0x1400099a6
   140009933:	rex.R
   140009934:	gs jbe 0x1400099aa
   140009937:	push   rdi
   140009938:	add    BYTE PTR [rax],al
   14000993a:	rex add DWORD PTR [rbx+0x65],edx
   14000993e:	je     0x1400099b5
   140009940:	jo     0x140009986
   140009942:	imul   eax,DWORD PTR [rbp+0x6e],0x65446d75
   140009949:	jbe    0x1400099b4
   14000994b:	movsxd esp,DWORD PTR [rbp+0x49]
   14000994e:	outs   dx,BYTE PTR ds:[rsi]
   14000994f:	outs   dx,WORD PTR ds:[rsi]
   140009951:	add    BYTE PTR [rcx+0x74655301],dl
   140009957:	jne    0x1400099c9
   140009959:	imul   r9d,DWORD PTR [rdi+0x70],0x65446e65
   140009961:	jbe    0x1400099b5
   140009963:	gs addr32 rex.WXB
   140009966:	gs jns 0x140009969
   140009969:	add    BYTE PTR [rip+0x74655301],bh        # 0x1b465ec70
   14000996f:	jne    0x1400099e1
   140009971:	imul   r8d,DWORD PTR [rbp+riz*2+0x73],0x796f7274
   14000997a:	rex.R
   14000997b:	gs jbe 0x1400099e7
   14000997e:	movsxd esp,DWORD PTR [rbp+0x49]
   140009981:	outs   dx,BYTE PTR ds:[rsi]
   140009982:	outs   dx,WORD PTR ds:[rsi]
   140009984:	imul   r14,QWORD PTR [rbx+0x74],0x1410000
   14000998c:	push   rbx
   14000998d:	gs je  0x140009a05
   140009990:	jo     0x1400099d6
   140009992:	imul   eax,DWORD PTR [rbp+0x6e],0x65446d75
   140009999:	jbe    0x140009a04
   14000999b:	movsxd esp,DWORD PTR [rbp+0x49]
   14000999e:	outs   dx,BYTE PTR ds:[rsi]
   14000999f:	je     0x140009a06
   1400099a1:	jb     0x140009a09
   1400099a3:	(bad)  
   1400099a4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400099a7:	add    BYTE PTR [rbp+0x74655301],dl
   1400099ad:	jne    0x140009a1f
   1400099af:	imul   r9d,DWORD PTR [rdi+0x70],0x65446e65
   1400099b7:	jbe    0x140009a22
   1400099b9:	movsxd esp,DWORD PTR [rbp+0x49]
   1400099bc:	outs   dx,BYTE PTR ds:[rsi]
   1400099bd:	je     0x140009a24
   1400099bf:	jb     0x140009a27
   1400099c1:	(bad)  
   1400099c2:	movsxd esp,DWORD PTR [rbp+0x52]
   1400099c5:	gs addr32 rex.WXB
   1400099c8:	gs jns 0x1400099cb
   1400099cb:	add    BYTE PTR [rcx+rax*1+0x53],ch
   1400099cf:	gs je  0x140009a47
   1400099d2:	jo     0x140009a18
   1400099d4:	imul   eax,DWORD PTR [rdi+0x65],0x76654474
   1400099db:	imul   esp,DWORD PTR [rbx+0x65],0x65746e49
   1400099e2:	jb     0x140009a4a
   1400099e4:	(bad)  
   1400099e5:	movsxd esp,DWORD PTR [rbp+0x44]
   1400099e8:	gs je  0x140009a4c
   1400099eb:	imul   ebp,DWORD PTR [rdi+rdx*2+0x0],0x54455300
   1400099f3:	push   rbp
   1400099f4:	push   rax
   1400099f5:	push   r8
   1400099f7:	rex.WB
   1400099f8:	cs fs ins BYTE PTR es:[rdi],dx
   1400099fb:	ins    BYTE PTR es:[rdi],dx
   1400099fc:	add    BYTE PTR [rax],al
   1400099fe:	add    eax,DWORD PTR [rax]
   140009a00:	rex.RXB
   140009a01:	gs je  0x140009a4d
   140009a04:	ins    DWORD PTR es:[rdi],dx
   140009a05:	(bad)  
   140009a06:	imul   r12d,DWORD PTR gs:[ecx+0x6c],0x676f
   140009a10:	push   rbx
   140009a11:	movsxd esp,DWORD PTR [rcx+0x6e]
   140009a14:	push   rbx
   140009a15:	gs je  0x140009a8c
   140009a18:	imul   ebp,DWORD PTR [rsi+0x67],0x4c4c442e
   140009a1f:	add    BYTE PTR [rbp+0x5],ch
   140009a22:	push   rbx
   140009a23:	ins    BYTE PTR es:[rdi],dx
   140009a24:	gs gs jo 0x140009a28
   140009a28:	mov    DWORD PTR [rdx],0x53746547
   140009a2e:	je     0x140009a91
   140009a30:	jb     0x140009aa6
   140009a32:	jne    0x140009aa4
   140009a34:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009a36:	outs   dx,WORD PTR ds:[rsi]
   140009a38:	push   rdi
   140009a39:	add    BYTE PTR [rdi+0x6c745204],dh
   140009a3f:	rex.XB (bad) 
   140009a41:	jo     0x140009ab7
   140009a43:	jne    0x140009ab7
   140009a45:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009a48:	outs   dx,BYTE PTR ds:[rsi]
   140009a49:	je     0x140009ab0
   140009a4b:	js     0x140009ac1
   140009a4d:	add    BYTE PTR [rsi+0x6c745204],bh
   140009a53:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009a55:	outs   dx,DWORD PTR ds:[rsi]
   140009a56:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009a5a:	jne    0x140009aca
   140009a5c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009a60:	outs   dx,BYTE PTR ds:[rsi]
   140009a61:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009a63:	je     0x140009ad7
   140009a65:	jns    0x140009a67
   140009a67:	add    ch,al
   140009a69:	add    al,0x52
   140009a6b:	je     0x140009ad9
   140009a6d:	push   rsi
   140009a6e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140009a75:	outs   dx,BYTE PTR ds:[rsi]
   140009a76:	ja     0x140009ae1
   140009a78:	outs   dx,BYTE PTR ds:[rsi]
   140009a79:	add    BYTE PTR fs:[rax],al
   140009a7c:	sahf   
   140009a7d:	add    eax,0x61686e55
   140009a82:	outs   dx,BYTE PTR ds:[rsi]
   140009a83:	fs ins BYTE PTR es:[rdi],dx
   140009a85:	gs fs rex.RB js 0x140009aed
   140009a8a:	gs jo  0x140009b01
   140009a8d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009a94:	gs jb  0x140009a97
   140009a97:	add    BYTE PTR [rsi+0x5],bl
   140009a9a:	push   rbx
   140009a9b:	gs je  0x140009af3
   140009a9e:	outs   dx,BYTE PTR ds:[rsi]
   140009a9f:	push   0x6c646e61
   140009aa4:	gs fs rex.RB js 0x140009b0c
   140009aa9:	gs jo  0x140009b20
   140009aac:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009ab3:	gs jb  0x140009ab6
   140009ab6:	adc    BYTE PTR [rdx],al
   140009ab8:	rex.RXB
   140009ab9:	gs je  0x140009aff
   140009abc:	jne    0x140009b30
   140009abe:	jb     0x140009b25
   140009ac0:	outs   dx,BYTE PTR ds:[rsi]
   140009ac1:	je     0x140009b13
   140009ac3:	jb     0x140009b34
   140009ac5:	movsxd esp,DWORD PTR [rbp+0x73]
   140009ac8:	jae    0x140009aca
   140009aca:	jl     0x140009ad1
   140009acc:	push   rsp
   140009acd:	gs jb  0x140009b3d
   140009ad0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140009ad7:	outs   dx,DWORD PTR ds:[rsi]
   140009ad8:	movsxd esp,DWORD PTR [rbp+0x73]
   140009adb:	jae    0x140009add
   140009add:	add    BYTE PTR [rsi],dh
   140009adf:	add    al,0x51
   140009ae1:	jne    0x140009b48
   140009ae3:	jb     0x140009b5e
   140009ae5:	push   rax
   140009ae6:	gs jb  0x140009b4f
   140009ae9:	outs   dx,DWORD PTR ds:[rsi]
   140009aea:	jb     0x140009b59
   140009aec:	(bad)  
   140009aed:	outs   dx,BYTE PTR ds:[rsi]
   140009aee:	movsxd esp,DWORD PTR [rbp+0x43]
   140009af1:	outs   dx,DWORD PTR ds:[rsi]
   140009af2:	jne    0x140009b62
   140009af4:	je     0x140009b5b
   140009af6:	jb     0x140009af8
   140009af8:	adc    DWORD PTR [rdx],eax
   140009afa:	rex.RXB
   140009afb:	gs je  0x140009b41
   140009afe:	jne    0x140009b72
   140009b00:	jb     0x140009b67
   140009b02:	outs   dx,BYTE PTR ds:[rsi]
   140009b03:	je     0x140009b55
   140009b05:	jb     0x140009b76
   140009b07:	movsxd esp,DWORD PTR [rbp+0x73]
   140009b0a:	jae    0x140009b55
   140009b0c:	fs add al,ah
   140009b0f:	add    al,BYTE PTR [rdi+0x65]
   140009b12:	je     0x140009b67
   140009b14:	jns    0x140009b89
   140009b16:	je     0x140009b7d
   140009b18:	ins    DWORD PTR es:[rdi],dx
   140009b19:	push   rsp
   140009b1a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009b21:	ins    BYTE PTR es:[rdi],dx
   140009b22:	gs push rsp
   140009b24:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140009b2b:	gs je  0x140009b82
   140009b2e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009b35:	je     0x140009b37
   140009b37:	add    BYTE PTR [rdx+0x6d656d04],dl
   140009b3d:	movsxd esi,DWORD PTR [rax+0x79]
   140009b40:	add    BYTE PTR [rax],al
   140009b42:	xchg   esi,eax
   140009b43:	add    al,0x6d
   140009b45:	gs ins DWORD PTR es:[rdi],dx
   140009b47:	jae    0x140009bae
   140009b49:	je     0x140009b4b
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
   14000a019:	add    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    bh,bh
   14000a021:	(bad)  
   14000a022:	(bad)  
   14000a023:	(bad)  
   14000a024:	(bad)  
   14000a025:	(bad)  
   14000a026:	(bad)  
   14000a027:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	adc    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	rcl    DWORD PTR [rax],0x0
   14000b007:	add    al,ah
   14000b009:	xchg   DWORD PTR [rax],eax
   14000b00b:	add    al,dh
   14000b00d:	adc    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rip+0xfffffffff0000011],ch        # 0x13000b026
   14000b015:	xchg   DWORD PTR [rax],eax
   14000b017:	add    BYTE PTR [rcx+rdx*1],dh
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	(bad)  
   14000b01d:	adc    al,BYTE PTR [rax]
   14000b01f:	add    al,ah
   14000b021:	xchg   DWORD PTR [rax],eax
   14000b023:	add    BYTE PTR [rdx+rdx*1],bl
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	or     dl,BYTE PTR [rbx]
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	clc    
   14000b02d:	xchg   DWORD PTR [rax],eax
   14000b02f:	add    BYTE PTR [rax],dl
   14000b031:	adc    eax,DWORD PTR [rax]
   14000b033:	add    BYTE PTR [rsp+rdx*1],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	adc    BYTE PTR [rax+0x14100000],cl
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	call   QWORD PTR [rax+rax*1]
   14000b043:	add    BYTE PTR [rax+rcx*4],ch
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	adc    BYTE PTR [rip+0x162b0000],dl        # 0x1562bb04e
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	rex.W mov BYTE PTR [rax],al
   14000b053:	add    BYTE PTR [rax+0x16],al
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	adc    edx,DWORD PTR [rdi]
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	mov    BYTE PTR fs:[rax],al
   14000b05f:	add    BYTE PTR [rdi+rdx*1],bl
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	mov    ah,0x17
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	jl     0x14000aff2
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	mov    esp,0x5f000017
   14000b071:	sbb    BYTE PTR [rax],al
   14000b073:	add    BYTE PTR [rax+0x70000088],dl
   14000b079:	sbb    BYTE PTR [rax],al
   14000b07b:	add    BYTE PTR [rsi-0x5fffffe8],dh
   14000b081:	mov    BYTE PTR [rax],al
   14000b083:	add    al,al
   14000b085:	sbb    BYTE PTR [rax],al
   14000b087:	add    bh,bh
   14000b089:	sbb    BYTE PTR [rax],al
   14000b08b:	add    BYTE PTR [rax+0x10000088],ah
   14000b091:	sbb    DWORD PTR [rax],eax
   14000b093:	add    al,dl
   14000b095:	sbb    al,BYTE PTR [rax]
   14000b097:	add    BYTE PTR [rax-0x27ffff78],ch
   14000b09d:	sbb    al,BYTE PTR [rax]
   14000b09f:	add    BYTE PTR [rax+0x1b],bh
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	nop
   14000b0a5:	mov    BYTE PTR [rax],al
   14000b0a7:	add    BYTE PTR [rax+0x2600001b],al
   14000b0ad:	sbb    al,0x0
   14000b0af:	add    ah,al
   14000b0b1:	mov    BYTE PTR [rax],al
   14000b0b3:	add    BYTE PTR [rax],dh
   14000b0b5:	sbb    al,0x0
   14000b0b7:	add    BYTE PTR [rdi-0x1fffffe4],bh
   14000b0bd:	xchg   DWORD PTR [rax],eax
   14000b0bf:	add    al,dh
   14000b0c1:	sbb    al,0x0
   14000b0c3:	add    ch,dh
   14000b0c5:	sbb    eax,0x88d80000
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	add    BYTE PTR [rsi],bl
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	xor    BYTE PTR [rsi],bl
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	lock mov BYTE PTR [rax],al
   14000b0d7:	add    BYTE PTR [rax],bh
   14000b0d9:	(bad)  
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	leave  
   14000b0dd:	(bad)  
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	clc    
   14000b0e1:	mov    BYTE PTR [rax],al
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	and    BYTE PTR [rax],al
   14000b0e7:	add    BYTE PTR [rbx+0x22],bl
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	or     al,0x89
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	jo     0x14000b114
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	(bad)  
   14000b0f5:	and    eax,DWORD PTR [rax]
   14000b0f7:	add    BYTE PTR [rax],ah
   14000b0f9:	mov    DWORD PTR [rax],eax
   14000b0fb:	add    BYTE PTR [rax],ah
   14000b0fd:	and    eax,DWORD PTR [rax]
   14000b0ff:	add    BYTE PTR [rdx],dl
   14000b101:	and    al,0x0
   14000b103:	add    BYTE PTR [rax-0x77],cl
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	and    BYTE PTR [rax+rax*1],ah
   14000b10b:	add    BYTE PTR [rcx+0x24],ch
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	je     0x14000b09b
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	jo     0x14000b13a
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	jle    0x14000b13f
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	cwde   
   14000b11d:	mov    DWORD PTR [rax],eax
   14000b11f:	add    BYTE PTR [rax-0x79ffffdb],dl
   14000b125:	add    BYTE PTR es:[rax],al
   14000b128:	enter  0x89,0x0
   14000b12c:	nop
   14000b12d:	add    BYTE PTR es:[rax],al
   14000b130:	std    
   14000b131:	add    BYTE PTR es:[rax],al
   14000b134:	hlt    
   14000b135:	mov    DWORD PTR [rax],eax
   14000b137:	add    BYTE PTR [rax],dl
   14000b139:	(bad)  
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	pop    rcx
   14000b13d:	(bad)  
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	sbb    al,0x8a
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	(bad)  
   14000b145:	(bad)  
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	test   eax,0x40000027
   14000b14d:	mov    al,BYTE PTR [rax]
   14000b14f:	add    BYTE PTR [rax+0x44000027],dh
   14000b155:	sub    BYTE PTR [rax],al
   14000b157:	add    BYTE PTR [rdx+rcx*4+0x0],ah
   14000b15b:	add    BYTE PTR [rax+0x28],dl
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	mov    esi,0x90000028
   14000b165:	mov    al,BYTE PTR [rax]
   14000b167:	add    al,dl
   14000b169:	sub    BYTE PTR [rax],al
   14000b16b:	add    BYTE PTR [rcx+rbp*1+0x0],ah
   14000b16f:	add    BYTE PTR [rdx+rcx*4+0x29700000],bh
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	fisubr WORD PTR [rcx]
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	call   0x13000b20b
   14000b181:	sub    DWORD PTR [rax],eax
   14000b183:	add    ah,ah
   14000b185:	sub    al,BYTE PTR [rax]
   14000b187:	add    BYTE PTR [rbx+rcx*4],dl
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	in     al,dx
   14000b18d:	sub    al,BYTE PTR [rax]
   14000b18f:	add    BYTE PTR [rbp+0x2b],ah
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	mov    r8d,DWORD PTR [rax]
   14000b197:	add    BYTE PTR [rbx+rbp*1+0x0],ch
   14000b19b:	add    BYTE PTR [rax],bh
   14000b19d:	sub    eax,0x8b4c0000
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	rex sub eax,0x2ed60000
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	ins    BYTE PTR es:[rdi],dx
   14000b1ad:	mov    eax,DWORD PTR [rax]
   14000b1af:	add    ah,bl
   14000b1b1:	add    BYTE PTR cs:[rax],al
   14000b1b4:	jb     0x14000b1e6
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	ins    BYTE PTR es:[rdi],dx
   14000b1b9:	mov    eax,DWORD PTR [rax]
   14000b1bb:	add    BYTE PTR [rax+0x30],bh
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	out    dx,al
   14000b1c1:	xor    BYTE PTR [rax],al
   14000b1c3:	add    BYTE PTR [rbx+rcx*4+0x0],al
   14000b1c7:	add    ah,dh
   14000b1c9:	xor    BYTE PTR [rax],al
   14000b1cb:	add    BYTE PTR [rsi+0x31],ch
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	mov    WORD PTR [rbx+0x31800000],cs
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	rdmsr  
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	loopne 0x14000b165
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	xor    al,BYTE PTR [rax]
   14000b1e3:	add    BYTE PTR [rdx+rsi*1-0x74640000],bh
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	shl    BYTE PTR [rdx],1
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	pop    rsp
   14000b1f1:	xor    eax,DWORD PTR [rax]
   14000b1f3:	add    BYTE PTR [rbx+rcx*4+0x33640000],bl
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	cmp    dh,BYTE PTR [rax+rax*1]
   14000b1ff:	add    BYTE PTR [rax+0x4000008b],ch
   14000b205:	xor    al,0x0
   14000b207:	add    BYTE PTR [rdi-0x47ffffc8],bl
   14000b20d:	mov    eax,DWORD PTR [rax]
   14000b20f:	add    BYTE PTR [rax-0xdffffc8],ch
   14000b215:	cmp    BYTE PTR [rax],al
   14000b217:	add    al,ah
   14000b219:	mov    eax,DWORD PTR [rax]
   14000b21b:	add    al,bh
   14000b21d:	cmp    BYTE PTR [rax],al
   14000b21f:	add    BYTE PTR [rsi-0x13ffffc7],bh
   14000b225:	mov    eax,DWORD PTR [rax]
   14000b227:	add    ah,al
   14000b229:	cmp    DWORD PTR [rax],eax
   14000b22b:	add    BYTE PTR [rdx+0x3b],ah
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	add    al,0x8c
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	push   0x4e00003b
   14000b239:	add    BYTE PTR ds:[rax],al
   14000b23c:	and    al,0x8c
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	push   rsp
   14000b241:	add    BYTE PTR ds:[rax],al
   14000b244:	leave  
   14000b245:	add    BYTE PTR [rax],al
   14000b248:	rex.W mov WORD PTR [rax],es
   14000b24b:	add    al,dl
   14000b24d:	add    BYTE PTR [rax],al
   14000b250:	lock add BYTE PTR [r8],al
   14000b254:	test   BYTE PTR [rax+rax*1+0x420000],cl
   14000b25b:	add    BYTE PTR [rdi+0x42],ch
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	pushf  
   14000b261:	mov    WORD PTR [rax],es
   14000b263:	add    BYTE PTR [rax-0x15ffffbe],al
   14000b269:	rex.X add BYTE PTR [rax],al
   14000b26c:	lods   al,BYTE PTR ds:[rsi]
   14000b26d:	mov    WORD PTR [rax],es
   14000b26f:	add    al,dh
   14000b271:	rex.X add BYTE PTR [rax],al
   14000b274:	pop    rdi
   14000b275:	rex.XB add BYTE PTR [r8],al
   14000b278:	pushf  
   14000b279:	mov    WORD PTR [rax],es
   14000b27b:	add    BYTE PTR [rax+0x43],dh
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	fiadd  DWORD PTR [rbx+0x0]
   14000b283:	add    BYTE PTR [rsp+rcx*4+0x44100000],ch
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	ins    DWORD PTR es:[rdi],dx
   14000b28d:	add    BYTE PTR [rax],r8b
   14000b290:	loopne 0x14000b219
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	loopne 0x14000b2da
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	or     al,0x45
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	lock xchg DWORD PTR [rax],eax
   14000b29f:	add    BYTE PTR [rax],ah
   14000b2a1:	add    BYTE PTR [r8],r8b
   14000b2a4:	(bad)
   14000b2a7:	add    BYTE PTR [rax+0x6000008c],bh
   14000b2ad:	rex.RXB add BYTE PTR [r8],r8b
   14000b2b0:	rex.B
   14000b2b1:	rex.W add BYTE PTR [rax],al
   14000b2b4:	fmul   QWORD PTR [rax+rax*1+0x485000]
   14000b2bb:	add    dl,bl
   14000b2bd:	rex.WB add BYTE PTR [r8],al
   14000b2c0:	hlt    
   14000b2c1:	mov    WORD PTR [rax],es
   14000b2c3:	add    al,ah
   14000b2c5:	rex.WB add BYTE PTR [r8],al
   14000b2c8:	mov    cs,WORD PTR [rdx+0x0]
   14000b2cb:	add    BYTE PTR [rcx*4+0x4a940000],dl
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	int    0x4d
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	and    al,0x8d
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	(bad)  
   14000b2dd:	rex.WRB add BYTE PTR [r8],r8b
   14000b2e0:	jrcxz  0x14000b330
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	lea    rax,[rax]
   14000b2e7:	add    ah,ch
   14000b2e9:	rex.WRX add BYTE PTR [rax],r8b
   14000b2ec:	out    0x52,al
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	pop    rsp
   14000b2f1:	lea    eax,[rax]
   14000b2f3:	add    ah,ch
   14000b2f5:	push   rdx
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	mov    esi,0x80000054
   14000b2fd:	lea    eax,[rax]
   14000b2ff:	add    ah,al
   14000b301:	push   rsp
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	call   QWORD PTR [rbp+0x0]
   14000b307:	add    BYTE PTR [rax+0x800008d],ah
   14000b30d:	push   rsi
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	push   rsp
   14000b311:	push   rsi
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	mov    ah,0x8d
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	pop    rsp
   14000b319:	push   rsi
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	mov    bl,0x57
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	mov    esp,0xbc00008d
   14000b325:	push   rdi
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	or     al,0x58
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	lock xchg DWORD PTR [rax],eax
   14000b32f:	add    BYTE PTR [rax+rbx*2],dl
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	push   rdi
   14000b335:	pop    rax
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	lock xchg DWORD PTR [rax],eax
   14000b33b:	add    BYTE PTR [rax+0x58],ah
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	ret    
   14000b341:	pop    rcx
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	mov    esp,0xcc00008d
   14000b349:	pop    rcx
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	in     eax,0x5a
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	(bad)  
   14000b351:	lea    eax,[rax]
   14000b353:	add    al,dh
   14000b355:	pop    rdx
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	(bad)  
   14000b359:	pop    rbx
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	pushf  
   14000b35d:	mov    eax,DWORD PTR [rax]
   14000b35f:	add    BYTE PTR [rbx+rbx*2+0x0],ah
   14000b363:	add    dl,cl
   14000b365:	pop    rbx
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	in     al,dx
   14000b369:	lea    eax,[rax]
   14000b36b:	add    ah,bl
   14000b36d:	pop    rbx
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	adc    eax,0x9c00005c
   14000b375:	mov    eax,DWORD PTR [rax]
   14000b377:	add    BYTE PTR [rax],ah
   14000b379:	pop    rsp
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	out    dx,eax
   14000b37d:	pop    rsp
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	lock mov BYTE PTR [rax],al
   14000b383:	add    BYTE PTR [rax],al
   14000b385:	pop    rbp
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	rex.WB pop r13
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	clc    
   14000b38d:	lea    eax,[rax]
   14000b38f:	add    BYTE PTR [rax+0x5d],dl
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	(bad)  
   14000b395:	pop    rbp
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	lock mov BYTE PTR [rax],al
   14000b39b:	add    BYTE PTR [rax+0x5d],ch
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	mov    esi,0x5f
   14000b3a5:	mov    es,WORD PTR [rax]
   14000b3a7:	add    al,dl
   14000b3a9:	pop    rdi
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	out    dx,al
   14000b3ad:	pop    rdi
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	xor    BYTE PTR [rsi+0x5ff40000],cl
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	sub    BYTE PTR [rax+0x0],ah
   14000b3bb:	add    al,dh
   14000b3bd:	xchg   DWORD PTR [rax],eax
   14000b3bf:	add    BYTE PTR [rax],dh
   14000b3c1:	(bad)  
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	movabs eax,ds:0xe000008e34000061
   14000b3cd:	(bad)  
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	sbb    DWORD PTR [rdx+0x0],esp
   14000b3d3:	add    al,dh
   14000b3d5:	mov    BYTE PTR [rax],al
   14000b3d7:	add    BYTE PTR [rax],ah
   14000b3d9:	(bad)  
   14000b3da:	add    BYTE PTR [rax],al
   14000b3dc:	cmp    BYTE PTR [rdx+0x0],ah
   14000b3df:	add    al,dh
   14000b3e1:	mov    BYTE PTR [rax],al
   14000b3e3:	add    BYTE PTR [rdx+riz*2+0x0],cl
   14000b3e7:	add    BYTE PTR [rax+0x3c000062],ah
   14000b3ed:	mov    es,WORD PTR [rax]
   14000b3ef:	add    BYTE PTR [rax-0x12ffff9e],ch
   14000b3f5:	(bad)  
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	lock xchg DWORD PTR [rax],eax
   14000b3fb:	add    BYTE PTR [rax+0x63],ah
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	lods   eax,DWORD PTR ds:[rsi]
   14000b401:	movsxd eax,DWORD PTR [rax]
   14000b403:	add    BYTE PTR [rsi+rcx*4+0x0],bl
   14000b407:	add    ah,dh
   14000b409:	movsxd eax,DWORD PTR [rax]
   14000b40b:	add    ah,al
   14000b40d:	add    BYTE PTR fs:[rax],al
   14000b410:	mov    BYTE PTR [rsi+0x64fc0000],cl
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	sbb    esp,DWORD PTR [rbp+0x0]
   14000b41b:	add    BYTE PTR [rsi+rcx*4+0x65340000],dl
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	push   rcx
   14000b425:	add    BYTE PTR gs:[rax],al
   14000b428:	lock mov BYTE PTR [rax],al
   14000b42b:	add    BYTE PTR [rax+0x65],bl
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	mov    ebx,0xf0000065
   14000b435:	xchg   DWORD PTR [rax],eax
   14000b437:	add    ah,al
   14000b439:	add    BYTE PTR gs:[rax],al
   14000b43c:	pop    rdx
   14000b43d:	data16 add BYTE PTR [rax],al
   14000b440:	fmul   DWORD PTR [rax+0x66900000]
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	xchg   edx,eax
   14000b449:	data16 add BYTE PTR [rax],al
   14000b44c:	and    BYTE PTR [rdi+0x66a60000],cl
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	(bad)  
   14000b455:	data16 add BYTE PTR [rax],al
   14000b458:	or     BYTE PTR [rsi+0x66d00000],0x0
   14000b45f:	add    al,dh
   14000b461:	data16 add BYTE PTR [rax],al
   14000b464:	or     BYTE PTR [rsi+0x66f60000],0x0
   14000b46b:	add    BYTE PTR [rsi],dl
   14000b46d:	add    BYTE PTR [eax],al
   14000b470:	.byte 0x10
   14000b471:	pop    QWORD PTR [rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	sbb    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x0],al
	...
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    DWORD PTR [rax],eax
   14000c028:	add    DWORD PTR [rax],eax
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	xor    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax+0x0],al
	...
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    DWORD PTR [rax],eax
   14000c040:	or     DWORD PTR [rax+rax*1],eax
   14000c043:	add    BYTE PTR [rax+0x0],cl
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	(bad)  
   14000c049:	rol    BYTE PTR [rax],0x0
   14000c04c:	mov    esp,0x3
	...
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rbx+rax*1+0x34],bh
   14000c066:	push   rsi
   14000c067:	add    BYTE PTR [rbx+0x0],dl
   14000c06a:	pop    rdi
   14000c06b:	add    BYTE PTR [rsi+0x0],dl
   14000c06e:	add    BYTE PTR [r10+0x0],r10b
   14000c072:	push   rbx
   14000c073:	add    BYTE PTR [rcx+0x0],cl
   14000c076:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c07a:	pop    rdi
   14000c07b:	add    BYTE PTR [rcx+0x0],cl
   14000c07e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c082:	rex.WRXB add BYTE PTR [r8],r8b
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c08d:	add    BYTE PTR [rcx],al
   14000c08f:	add    BYTE PTR [rax],al
   14000c091:	add    BYTE PTR [rdx],cl
   14000c093:	add    BYTE PTR [rax],al
   14000c095:	add    BYTE PTR [rax],bpl
   14000c098:	add    BYTE PTR [rax],al
   14000c09a:	or     al,BYTE PTR [rax]
   14000c09c:	add    BYTE PTR [rax+0x0],al
   14000c09f:	sub    BYTE PTR [rdi],bh
   14000c0a1:	add    BYTE PTR [rax],al
   14000c0a3:	add    BYTE PTR [rax],al
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax+rax*1],al
   14000c0aa:	add    al,0x0
   14000c0ac:	add    DWORD PTR [rax],eax
	...
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	sbb    al,BYTE PTR [rbx]
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	add    DWORD PTR [rax],eax
   14000c0c2:	push   rbx
   14000c0c3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c0c7:	add    BYTE PTR [rcx+0x0],ch
   14000c0ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c0cb:	add    BYTE PTR [rdi+0x0],ah
   14000c0ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c0d2:	ins    BYTE PTR es:[rdi],dx
   14000c0d3:	add    BYTE PTR [rbp+0x0],ah
   14000c0d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c0da:	data16 add BYTE PTR [rdi+0x0],ch
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	test   BYTE PTR [rdx],0x0
   14000c0e3:	add    BYTE PTR [rcx],al
   14000c0e5:	add    BYTE PTR [rax],dh
   14000c0e7:	add    BYTE PTR [rax+rax*1],dh
   14000c0ea:	xor    BYTE PTR [rax],al
   14000c0ec:	cmp    DWORD PTR [rax],eax
   14000c0ee:	xor    BYTE PTR [rax],al
   14000c0f0:	xor    al,0x0
   14000c0f2:	rex.X add BYTE PTR [rax],sil
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c0fb:	add    BYTE PTR [rcx],al
   14000c0fd:	add    BYTE PTR [rbx+0x0],al
   14000c100:	outs   dx,DWORD PTR ds:[rsi]
   14000c101:	add    BYTE PTR [rbp+0x0],ch
   14000c104:	jo     0x14000c106
   14000c106:	(bad)  
   14000c107:	add    BYTE PTR [rsi+0x0],ch
   14000c10a:	jns    0x14000c10c
   14000c10c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c110:	ins    DWORD PTR es:[rdi],dx
   14000c111:	add    BYTE PTR [rbp+0x0],ah
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c11c:	movsxd eax,DWORD PTR [rax]
   14000c11e:	jb     0x14000c120
   14000c120:	outs   dx,DWORD PTR ds:[rsi]
   14000c121:	add    BYTE PTR [rbx+0x0],dh
   14000c124:	outs   dx,DWORD PTR ds:[rsi]
   14000c125:	add    BYTE PTR [rsi+0x0],ah
   14000c128:	je     0x14000c12a
   14000c12a:	and    BYTE PTR [rax],al
   14000c12c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c130:	jb     0x14000c132
   14000c132:	jo     0x14000c134
   14000c134:	outs   dx,DWORD PTR ds:[rsi]
   14000c135:	add    BYTE PTR [rdx+0x0],dh
   14000c138:	(bad)  
   14000c139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c13d:	add    BYTE PTR [rdi+0x0],ch
   14000c140:	outs   dx,BYTE PTR ds:[rsi]
   14000c141:	add    BYTE PTR [rax],al
   14000c143:	add    BYTE PTR [rax+0x0],bh
   14000c146:	sub    BYTE PTR [rax],al
   14000c148:	add    DWORD PTR [rax],eax
   14000c14a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c14e:	ins    BYTE PTR es:[rdi],dx
   14000c14f:	add    BYTE PTR [rbp+0x0],ah
   14000c152:	add    BYTE PTR [rbp+0x0],r12b
   14000c156:	jae    0x14000c158
   14000c158:	movsxd eax,DWORD PTR [rax]
   14000c15a:	jb     0x14000c15c
   14000c15c:	imul   eax,DWORD PTR [rax],0x740070
   14000c162:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c168:	add    BYTE PTR [rax],al
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	push   rsp
   14000c16d:	add    BYTE PTR [rax+0x0],ch
   14000c170:	jne    0x14000c172
   14000c172:	outs   dx,BYTE PTR ds:[rsi]
   14000c173:	add    BYTE PTR [rbx+0x0],ch
   14000c176:	imul   eax,DWORD PTR [rax],0x67006e
   14000c17c:	and    BYTE PTR [rax],al
   14000c17e:	push   rdi
   14000c17f:	add    BYTE PTR [rcx+0x0],cl
   14000c182:	add    BYTE PTR [r8],spl
   14000c185:	add    BYTE PTR [rcx+0x0],al
   14000c188:	push   rax
   14000c189:	add    BYTE PTR [rcx+0x0],cl
   14000c18c:	push   rbx
   14000c18d:	add    BYTE PTR [rax],ah
   14000c18f:	add    BYTE PTR [rsi+0x0],ah
   14000c192:	jb     0x14000c194
   14000c194:	outs   dx,DWORD PTR ds:[rsi]
   14000c195:	add    BYTE PTR [rbp+0x0],ch
   14000c198:	and    BYTE PTR [rax],al
   14000c19a:	xor    eax,DWORD PTR [rax]
   14000c19c:	xor    al,BYTE PTR [rax]
   14000c19e:	and    BYTE PTR [rax],al
   14000c1a0:	je     0x14000c1a2
   14000c1a2:	outs   dx,DWORD PTR ds:[rsi]
   14000c1a3:	add    BYTE PTR [rax],ah
   14000c1a5:	add    BYTE PTR [rsi],dh
   14000c1a7:	add    BYTE PTR [rax+rax*1],dh
   14000c1aa:	and    BYTE PTR [rax],al
   14000c1ac:	push   rax
   14000c1ad:	add    BYTE PTR [rdx+0x0],dh
   14000c1b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c1b1:	add    BYTE PTR [rbx+0x0],ah
   14000c1b4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c1b8:	jae    0x14000c1ba
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	data16 add BYTE PTR [rbx],ah
   14000c1bf:	add    BYTE PTR [rcx],al
   14000c1c1:	add    BYTE PTR [rsi+0x0],al
   14000c1c4:	imul   eax,DWORD PTR [rax],0x65006c
   14000c1ca:	push   rsi
   14000c1cb:	add    BYTE PTR [rbp+0x0],ah
   14000c1ce:	jb     0x14000c1d0
   14000c1d0:	jae    0x14000c1d2
   14000c1d2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1d8:	add    BYTE PTR [rax],al
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	xor    DWORD PTR [rax],eax
   14000c1de:	xor    BYTE PTR [rax],al
   14000c1e0:	add    BYTE PTR cs:[rax],dh
   14000c1e3:	add    BYTE PTR [rsi],ch
   14000c1e5:	add    BYTE PTR [rcx],dh
   14000c1e7:	add    BYTE PTR [rax],dh
   14000c1e9:	add    BYTE PTR [rdx],dh
   14000c1eb:	add    BYTE PTR [rax+rax*1],dh
   14000c1ee:	xor    BYTE PTR [rax],al
   14000c1f0:	add    BYTE PTR cs:[rcx],dh
   14000c1f3:	add    BYTE PTR [rsi],dh
   14000c1f5:	add    BYTE PTR [rbx],dh
   14000c1f7:	add    BYTE PTR [rax],bh
   14000c1f9:	add    BYTE PTR [rax+rax*1],dh
   14000c1fc:	and    BYTE PTR [rax],al
   14000c1fe:	sub    BYTE PTR [rax],al
   14000c200:	je     0x14000c202
   14000c202:	push   0x2e003100
   14000c207:	add    BYTE PTR [rcx],dh
   14000c209:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f20f
   14000c20f:	add    BYTE PTR [rax],dh
   14000c211:	add    BYTE PTR [rcx],bh
   14000c213:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f319
   14000c219:	add    BYTE PTR [rax],dh
   14000c21b:	add    BYTE PTR [rax],dh
   14000c21d:	add    BYTE PTR [rcx],ch
   14000c21f:	add    BYTE PTR [rax],al
   14000c221:	add    BYTE PTR [rax],al
   14000c223:	add    BYTE PTR [rdx],bh
   14000c225:	add    BYTE PTR [rip+0x49000100],cl        # 0x18900c32b
   14000c22b:	add    BYTE PTR [rsi+0x0],ch
   14000c22e:	je     0x14000c230
   14000c230:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c234:	outs   dx,BYTE PTR ds:[rsi]
   14000c235:	add    BYTE PTR [rcx+0x0],ah
   14000c238:	ins    BYTE PTR es:[rdi],dx
   14000c239:	add    BYTE PTR [rsi+0x0],cl
   14000c23c:	(bad)  
   14000c23d:	add    BYTE PTR [rbp+0x0],ch
   14000c240:	add    BYTE PTR gs:[rax],al
   14000c243:	add    BYTE PTR [rdi+0x0],dh
   14000c246:	imul   eax,DWORD PTR [rax],0x770061
   14000c24c:	outs   dx,DWORD PTR ds:[rsi]
   14000c24d:	add    BYTE PTR [rdi+0x0],dh
   14000c250:	add    BYTE PTR ss:[rax+rax*1],dh
   14000c254:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c258:	js     0x14000c25a
   14000c25a:	add    BYTE PTR gs:[rax],al
   14000c25d:	add    BYTE PTR [rax],al
   14000c25f:	add    BYTE PTR [rax+0x1002e00],al
   14000c265:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c269:	add    BYTE PTR [rdi+0x0],ah
   14000c26c:	(bad)  
   14000c26d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c271:	add    BYTE PTR [rdi+0x0],ch
   14000c274:	jo     0x14000c276
   14000c276:	jns    0x14000c278
   14000c278:	jb     0x14000c27a
   14000c27a:	imul   eax,DWORD PTR [rax],0x680067
   14000c280:	je     0x14000c282
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	test   eax,0x4d002000
   14000c289:	add    BYTE PTR [rcx+0x0],ch
   14000c28c:	movsxd eax,DWORD PTR [rax]
   14000c28e:	jb     0x14000c290
   14000c290:	outs   dx,DWORD PTR ds:[rsi]
   14000c291:	add    BYTE PTR [rbx+0x0],dh
   14000c294:	outs   dx,DWORD PTR ds:[rsi]
   14000c295:	add    BYTE PTR [rsi+0x0],ah
   14000c298:	je     0x14000c29a
   14000c29a:	and    BYTE PTR [rax],al
   14000c29c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c2a0:	jb     0x14000c2a2
   14000c2a2:	jo     0x14000c2a4
   14000c2a4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2a5:	add    BYTE PTR [rdx+0x0],dh
   14000c2a8:	(bad)  
   14000c2a9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c2ad:	add    BYTE PTR [rdi+0x0],ch
   14000c2b0:	outs   dx,BYTE PTR ds:[rsi]
   14000c2b1:	add    BYTE PTR [rsi],ch
   14000c2b3:	add    BYTE PTR [rax],ah
   14000c2b5:	add    BYTE PTR [rcx+0x0],al
   14000c2b8:	ins    BYTE PTR es:[rdi],dx
   14000c2b9:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c2bd:	add    BYTE PTR [rdx+0x0],dh
   14000c2c0:	imul   eax,DWORD PTR [rax],0x680067
   14000c2c6:	je     0x14000c2c8
   14000c2c8:	jae    0x14000c2ca
   14000c2ca:	and    BYTE PTR [rax],al
   14000c2cc:	jb     0x14000c2ce
   14000c2ce:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c2d2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2d6:	jbe    0x14000c2d8
   14000c2d8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rdx+0x0],al
   14000c2e2:	or     eax,0x4f000100
   14000c2e7:	add    BYTE PTR [rdx+0x0],dh
   14000c2ea:	imul   eax,DWORD PTR [rax],0x690067
   14000c2f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c2f1:	add    BYTE PTR [rcx+0x0],ah
   14000c2f4:	ins    BYTE PTR es:[rdi],dx
   14000c2f5:	add    BYTE PTR [rsi+0x0],al
   14000c2f8:	imul   eax,DWORD PTR [rax],0x65006c
   14000c2fe:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ff:	add    BYTE PTR [rcx+0x0],ah
   14000c302:	ins    DWORD PTR es:[rdi],dx
   14000c303:	add    BYTE PTR [rbp+0x0],ah
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	ja     0x14000c30a
   14000c30a:	imul   eax,DWORD PTR [rax],0x770061
   14000c310:	outs   dx,DWORD PTR ds:[rsi]
   14000c311:	add    BYTE PTR [rdi+0x0],dh
   14000c314:	add    BYTE PTR ss:[rax+rax*1],dh
   14000c318:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c31c:	js     0x14000c31e
   14000c31e:	add    BYTE PTR gs:[rax],al
   14000c321:	add    BYTE PTR [rax],al
   14000c323:	add    BYTE PTR [rdx+0x0],ch
   14000c326:	and    eax,0x50000100
   14000c32b:	add    BYTE PTR [rdx+0x0],dh
   14000c32e:	outs   dx,DWORD PTR ds:[rsi]
   14000c32f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c333:	add    BYTE PTR [rbx+0x0],ah
   14000c336:	je     0x14000c338
   14000c338:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c33c:	ins    DWORD PTR es:[rdi],dx
   14000c33d:	add    BYTE PTR [rbp+0x0],ah
   14000c340:	add    BYTE PTR [rax],al
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c348:	movsxd eax,DWORD PTR [rax]
   14000c34a:	jb     0x14000c34c
   14000c34c:	outs   dx,DWORD PTR ds:[rsi]
   14000c34d:	add    BYTE PTR [rbx+0x0],dh
   14000c350:	outs   dx,DWORD PTR ds:[rsi]
   14000c351:	add    BYTE PTR [rsi+0x0],ah
   14000c354:	je     0x14000c356
   14000c356:	scas   al,BYTE PTR es:[rdi]
   14000c357:	add    BYTE PTR [rax],ah
   14000c359:	add    BYTE PTR [rdi+0x0],dl
   14000c35c:	imul   eax,DWORD PTR [rax],0x64006e
   14000c362:	outs   dx,DWORD PTR ds:[rsi]
   14000c363:	add    BYTE PTR [rdi+0x0],dh
   14000c366:	jae    0x14000c368
   14000c368:	scas   al,BYTE PTR es:[rdi]
   14000c369:	add    BYTE PTR [rax],ah
   14000c36b:	add    BYTE PTR [rdi+0x0],cl
   14000c36e:	jo     0x14000c370
   14000c370:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c374:	(bad)  
   14000c375:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c379:	add    BYTE PTR [rsi+0x0],ch
   14000c37c:	add    BYTE PTR [eax],ah
   14000c37f:	add    BYTE PTR [rbx+0x0],dl
   14000c382:	jns    0x14000c384
   14000c384:	jae    0x14000c386
   14000c386:	je     0x14000c388
   14000c388:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c38c:	add    BYTE PTR [rax],al
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	rex.RX add BYTE PTR [rcx],r10b
   14000c393:	add    BYTE PTR [rcx],al
   14000c395:	add    BYTE PTR [rax+0x0],dl
   14000c398:	jb     0x14000c39a
   14000c39a:	outs   dx,DWORD PTR ds:[rsi]
   14000c39b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c39f:	add    BYTE PTR [rbx+0x0],ah
   14000c3a2:	je     0x14000c3a4
   14000c3a4:	push   rsi
   14000c3a5:	add    BYTE PTR [rbp+0x0],ah
   14000c3a8:	jb     0x14000c3aa
   14000c3aa:	jae    0x14000c3ac
   14000c3ac:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	xor    DWORD PTR [rax],eax
   14000c3b6:	xor    BYTE PTR [rax],al
   14000c3b8:	add    BYTE PTR cs:[rax],dh
   14000c3bb:	add    BYTE PTR [rsi],ch
   14000c3bd:	add    BYTE PTR [rcx],dh
   14000c3bf:	add    BYTE PTR [rax],dh
   14000c3c1:	add    BYTE PTR [rdx],dh
   14000c3c3:	add    BYTE PTR [rax+rax*1],dh
   14000c3c6:	xor    BYTE PTR [rax],al
   14000c3c8:	add    BYTE PTR cs:[rcx],dh
   14000c3cb:	add    BYTE PTR [rsi],dh
   14000c3cd:	add    BYTE PTR [rbx],dh
   14000c3cf:	add    BYTE PTR [rax],bh
   14000c3d1:	add    BYTE PTR [rax+rax*1],dh
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	add    BYTE PTR [rax],r8b
   14000c3db:	add    BYTE PTR [rcx],al
   14000c3dd:	add    BYTE PTR [rsi+0x0],dl
   14000c3e0:	(bad)  
   14000c3e1:	add    BYTE PTR [rdx+0x0],dh
   14000c3e4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c3e8:	ins    BYTE PTR es:[rdi],dx
   14000c3e9:	add    BYTE PTR [rbp+0x0],ah
   14000c3ec:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3f0:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	and    al,0x0
   14000c3fa:	add    al,0x0
   14000c3fc:	add    BYTE PTR [rax],al
   14000c3fe:	push   rsp
   14000c3ff:	add    BYTE PTR [rdx+0x0],dh
   14000c402:	(bad)  
   14000c403:	add    BYTE PTR [rsi+0x0],ch
   14000c406:	jae    0x14000c408
   14000c408:	ins    BYTE PTR es:[rdi],dx
   14000c409:	add    BYTE PTR [rcx+0x0],ah
   14000c40c:	je     0x14000c40e
   14000c40e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	or     DWORD PTR [rax+rsi*4],eax
   14000c41b:	add    al,0x0
   14000c41d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    BYTE PTR [rax-0x68000000],dl
   14000d009:	movabs ds:0xa3d0a3c8a3b0a3a0,eax
   14000d012:	shl    BYTE PTR [rax+rbx*8-0x6f5a775c],1
   14000d019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d01a:	cwde   
   14000d01b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d01c:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14000d025:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d026:	enter  0xd0a5,0xa5
   14000d02a:	fsub   DWORD PTR [rbp-0x5a175a20]
   14000d030:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d032:	clc    
   14000d033:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d034:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000d03a:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14000d040:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14000d046:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d048:	push   rax
   14000d049:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d04a:	pop    rax
   14000d04b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d04c:	(bad)  
   14000d04d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d04e:	push   0x78a670a6
   14000d053:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d054:	and    BYTE PTR [rsi-0x596f5978],0x98
   14000d05b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d05c:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14000d065:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d066:	enter  0xd0a6,0xa6
   14000d06a:	fsub   DWORD PTR [rsi-0x59175920]
   14000d070:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d072:	clc    
   14000d073:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d074:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14000d07a:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14000d080:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14000d086:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000d088:	push   rax
   14000d089:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d08a:	pop    rax
   14000d08b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d08c:	(bad)  
   14000d08d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d08e:	push   0x8000a7
   14000d093:	add    BYTE PTR [rax],dl
   14000d095:	add    BYTE PTR [rax],al
   14000d097:	add    BYTE PTR [rax-0x5b],bh
   14000d09a:	nop
   14000d09b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d09c:	cwde   
   14000d09d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d09e:	.byte 0xa0
   14000d09f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
