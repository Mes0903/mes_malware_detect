
d33281f6c857aba988c049950c07dbbfb034fdc58649dc00869ef1fddbdcb074.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	lea    r9,[rip+0x9675]        # 0x14000a680
   14000100b:	xor    r8d,r8d
   14000100e:	xor    edx,edx
   140001010:	lea    rcx,[rip+0x56d1]        # 0x1400066e8
   140001017:	call   QWORD PTR [rip+0x53cb]        # 0x1400063e8
   14000101d:	lea    rcx,[rip+0x47fc]        # 0x140005820
   140001024:	mov    DWORD PTR [rip+0x965e],eax        # 0x14000a688
   14000102a:	add    rsp,0x28
   14000102e:	jmp    0x140004ba0
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	int3   
   140001041:	int3   
   140001042:	int3   
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	mov    QWORD PTR [rsp+0x8],rbx
   14000104d:	push   rdi
   14000104e:	sub    rsp,0x20
   140001052:	mov    rdi,QWORD PTR [rcx]
   140001055:	test   rdi,rdi
   140001058:	je     0x140001073
   14000105a:	and    QWORD PTR [rcx],0x0
   14000105e:	mov    rax,QWORD PTR [rdi]
   140001061:	mov    rbx,QWORD PTR [rax+0x10]
   140001065:	mov    rcx,rbx
   140001068:	call   QWORD PTR [rip+0x53ba]        # 0x140006428
   14000106e:	mov    rcx,rdi
   140001071:	call   rbx
   140001073:	mov    rbx,QWORD PTR [rsp+0x30]
   140001078:	add    rsp,0x20
   14000107c:	pop    rdi
   14000107d:	ret    
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x18],rbx
   140001095:	push   rbp
   140001096:	lea    rbp,[rsp-0x90]
   14000109e:	sub    rsp,0x190
   1400010a5:	mov    rax,QWORD PTR [rip+0x8f6c]        # 0x14000a018
   1400010ac:	xor    rax,rsp
   1400010af:	mov    QWORD PTR [rbp+0x80],rax
   1400010b6:	xor    r11d,r11d
   1400010b9:	lea    rbx,[rip+0x5cf0]        # 0x140006db0
   1400010c0:	test   r8,r8
   1400010c3:	mov    r10,rcx
   1400010c6:	cmove  r8,rbx
   1400010ca:	or     rcx,0xffffffffffffffff
   1400010ce:	mov    rax,rcx
   1400010d1:	mov    QWORD PTR [rsp+0x20],r8
   1400010d6:	inc    rax
   1400010d9:	cmp    WORD PTR [r8+rax*2],r11w
   1400010de:	jne    0x1400010d6
   1400010e0:	lea    eax,[rax*2+0x2]
   1400010e7:	mov    DWORD PTR [rsp+0x2c],r11d
   1400010ec:	mov    DWORD PTR [rsp+0x28],eax
   1400010f0:	test   r9,r9
   1400010f3:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400010f8:	cmove  r9,rbx
   1400010fc:	mov    QWORD PTR [rsp+0x20],r9
   140001101:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140001107:	inc    rcx
   14000110a:	cmp    WORD PTR [r9+rcx*2],r11w
   14000110f:	jne    0x140001107
   140001111:	mov    DWORD PTR [rsp+0x2c],r11d
   140001116:	lea    eax,[rcx*2+0x2]
   14000111d:	mov    rcx,QWORD PTR [r10+0x10]
   140001121:	lea    r9,[rsp+0x30]
   140001126:	mov    DWORD PTR [rsp+0x28],eax
   14000112a:	mov    r8d,0x4
   140001130:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140001135:	mov    QWORD PTR [rsp+0x28],r8
   14000113a:	lea    rax,[rbp+0xc0]
   140001141:	mov    QWORD PTR [rsp+0x20],rax
   140001146:	lea    rax,[rbp+0xc8]
   14000114d:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140001153:	mov    DWORD PTR [rbp+0x70],r8d
   140001157:	movups xmm0,XMMWORD PTR [rsp+0x20]
   14000115c:	mov    QWORD PTR [rsp+0x20],rax
   140001161:	mov    QWORD PTR [rsp+0x28],r8
   140001166:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   14000116c:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140001171:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   140001177:	call   QWORD PTR [rip+0x5273]        # 0x1400063f0
   14000117d:	mov    rcx,QWORD PTR [rbp+0x80]
   140001184:	xor    rcx,rsp
   140001187:	call   0x140004aa0
   14000118c:	mov    rbx,QWORD PTR [rsp+0x1b0]
   140001194:	add    rsp,0x190
   14000119b:	pop    rbp
   14000119c:	ret    
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	int3   
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011ba:	push   rdi
   1400011bb:	sub    rsp,0x20
   1400011bf:	xor    edi,edi
   1400011c1:	mov    rsi,rcx
   1400011c4:	mov    QWORD PTR [r8],rdi
   1400011c7:	cmp    DWORD PTR [rdx],edi
   1400011c9:	jne    0x1400011ec
   1400011cb:	mov    eax,DWORD PTR [rip+0x5c03]        # 0x140006dd4
   1400011d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400011d4:	jne    0x1400011ec
   1400011d6:	mov    eax,DWORD PTR [rip+0x5bfc]        # 0x140006dd8
   1400011dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400011df:	jne    0x1400011ec
   1400011e1:	mov    eax,DWORD PTR [rip+0x5bf5]        # 0x140006ddc
   1400011e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400011ea:	je     0x140001215
   1400011ec:	cmp    DWORD PTR [rdx],0x2292853
   1400011f2:	jne    0x14000122f
   1400011f4:	mov    eax,DWORD PTR [rip+0x5bca]        # 0x140006dc4
   1400011fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400011fd:	jne    0x14000122f
   1400011ff:	mov    eax,DWORD PTR [rip+0x5bc3]        # 0x140006dc8
   140001205:	cmp    DWORD PTR [rdx+0x8],eax
   140001208:	jne    0x14000122f
   14000120a:	mov    eax,DWORD PTR [rip+0x5bbc]        # 0x140006dcc
   140001210:	cmp    DWORD PTR [rdx+0xc],eax
   140001213:	jne    0x14000122f
   140001215:	mov    QWORD PTR [r8],rcx
   140001218:	mov    rax,QWORD PTR [rcx]
   14000121b:	mov    rbx,QWORD PTR [rax+0x8]
   14000121f:	mov    rcx,rbx
   140001222:	call   QWORD PTR [rip+0x5200]        # 0x140006428
   140001228:	mov    rcx,rsi
   14000122b:	call   rbx
   14000122d:	jmp    0x140001234
   14000122f:	mov    edi,0x80004002
   140001234:	mov    rbx,QWORD PTR [rsp+0x30]
   140001239:	mov    eax,edi
   14000123b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001240:	add    rsp,0x20
   140001244:	pop    rdi
   140001245:	ret    
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    eax,0x1
   140001255:	lock xadd DWORD PTR [rcx+0xc],eax
   14000125a:	inc    eax
   14000125c:	ret    
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rbx
   140001275:	mov    QWORD PTR [rsp+0x10],rsi
   14000127a:	push   rdi
   14000127b:	sub    rsp,0x20
   14000127f:	mov    rsi,rcx
   140001282:	or     edi,0xffffffff
   140001285:	lock xadd DWORD PTR [rcx+0xc],edi
   14000128a:	sub    edi,0x1
   14000128d:	jne    0x1400012cd
   14000128f:	test   rcx,rcx
   140001292:	je     0x1400012ac
   140001294:	mov    rax,QWORD PTR [rcx]
   140001297:	mov    rbx,QWORD PTR [rax+0x20]
   14000129b:	mov    rcx,rbx
   14000129e:	call   QWORD PTR [rip+0x5184]        # 0x140006428
   1400012a4:	lea    edx,[rdi+0x1]
   1400012a7:	mov    rcx,rsi
   1400012aa:	call   rbx
   1400012ac:	mov    rsi,QWORD PTR [rip+0x93a5]        # 0x14000a658
   1400012b3:	test   rsi,rsi
   1400012b6:	je     0x1400012cd
   1400012b8:	mov    rdx,QWORD PTR [rsi]
   1400012bb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400012bf:	mov    rcx,rbx
   1400012c2:	call   QWORD PTR [rip+0x5160]        # 0x140006428
   1400012c8:	mov    rcx,rsi
   1400012cb:	call   rbx
   1400012cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012d2:	mov    eax,edi
   1400012d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400012d9:	add    rsp,0x20
   1400012dd:	pop    rdi
   1400012de:	ret    
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400012ef:	ret    
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	mov    rax,rsp
   1400012fb:	mov    QWORD PTR [rax+0x8],rcx
   1400012ff:	push   rbx
   140001300:	push   rsi
   140001301:	push   rdi
   140001302:	push   r14
   140001304:	sub    rsp,0x38
   140001308:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140001310:	mov    rsi,rcx
   140001313:	and    DWORD PTR [rax-0x38],0x0
   140001317:	and    QWORD PTR [rcx],0x0
   14000131b:	mov    edi,0x1
   140001320:	mov    DWORD PTR [rax-0x38],edi
   140001323:	and    QWORD PTR [rax+0x10],0x0
   140001328:	lea    rdx,[rip+0x5409]        # 0x140006738
   14000132f:	lea    ecx,[rdi+0x1f]
   140001332:	call   0x140004ac4
   140001337:	mov    rbx,rax
   14000133a:	mov    QWORD PTR [rsp+0x68],rax
   14000133f:	mov    QWORD PTR [rsp+0x70],rax
   140001344:	test   rax,rax
   140001347:	je     0x1400013da
   14000134d:	mov    QWORD PTR [rsp+0x78],rax
   140001352:	lea    rax,[rip+0x53e7]        # 0x140006740
   140001359:	mov    QWORD PTR [rbx],rax
   14000135c:	mov    DWORD PTR [rbx+0xc],edi
   14000135f:	lea    rax,[rip+0x53fa]        # 0x140006760
   140001366:	mov    QWORD PTR [rbx],rax
   140001369:	mov    r14,QWORD PTR [rip+0x92e8]        # 0x14000a658
   140001370:	test   r14,r14
   140001373:	je     0x14000138b
   140001375:	mov    rax,QWORD PTR [r14]
   140001378:	mov    rdi,QWORD PTR [rax+0x8]
   14000137c:	mov    rcx,rdi
   14000137f:	call   QWORD PTR [rip+0x50a3]        # 0x140006428
   140001385:	mov    rcx,r14
   140001388:	call   rdi
   14000138a:	nop
   14000138b:	lea    rax,[rip+0x53f6]        # 0x140006788
   140001392:	mov    QWORD PTR [rbx],rax
   140001395:	and    QWORD PTR [rbx+0x10],0x0
   14000139a:	lea    r9,[rbx+0x10]
   14000139e:	xor    r8d,r8d
   1400013a1:	xor    edx,edx
   1400013a3:	lea    rcx,[rip+0x533e]        # 0x1400066e8
   1400013aa:	call   QWORD PTR [rip+0x5038]        # 0x1400063e8
   1400013b0:	mov    DWORD PTR [rbx+0x18],eax
   1400013b3:	mov    r14,QWORD PTR [rsi]
   1400013b6:	test   r14,r14
   1400013b9:	je     0x1400013d0
   1400013bb:	mov    rax,QWORD PTR [r14]
   1400013be:	mov    rdi,QWORD PTR [rax+0x10]
   1400013c2:	mov    rcx,rdi
   1400013c5:	call   QWORD PTR [rip+0x505d]        # 0x140006428
   1400013cb:	mov    rcx,r14
   1400013ce:	call   rdi
   1400013d0:	mov    QWORD PTR [rsi],rbx
   1400013d3:	xor    ebx,ebx
   1400013d5:	mov    QWORD PTR [rsp+0x68],rbx
   1400013da:	test   rbx,rbx
   1400013dd:	je     0x1400013e7
   1400013df:	mov    rcx,rbx
   1400013e2:	call   0x140004640
   1400013e7:	mov    rax,rsi
   1400013ea:	add    rsp,0x38
   1400013ee:	pop    r14
   1400013f0:	pop    rdi
   1400013f1:	pop    rsi
   1400013f2:	pop    rbx
   1400013f3:	ret    
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rcx
   140001405:	push   rdi
   140001406:	sub    rsp,0x30
   14000140a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001413:	mov    QWORD PTR [rsp+0x48],rbx
   140001418:	mov    edi,edx
   14000141a:	mov    rbx,rcx
   14000141d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001421:	test   rcx,rcx
   140001424:	je     0x14000142d
   140001426:	call   QWORD PTR [rip+0x4fb4]        # 0x1400063e0
   14000142c:	nop
   14000142d:	mov    DWORD PTR [rbx+0xc],0xc0000001
   140001434:	test   dil,0x1
   140001438:	je     0x140001442
   14000143a:	mov    rcx,rbx
   14000143d:	call   0x140004640
   140001442:	mov    rax,rbx
   140001445:	mov    rbx,QWORD PTR [rsp+0x48]
   14000144a:	add    rsp,0x30
   14000144e:	pop    rdi
   14000144f:	ret    
   140001450:	int3   
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	mov    QWORD PTR [rsp+0x8],rcx
   14000145d:	sub    rsp,0x18
   140001461:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140001469:	mov    DWORD PTR [rcx+0xc],0xc0000001
   140001470:	add    rsp,0x18
   140001474:	ret    
   140001475:	int3   
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	sub    rsp,0x28
   140001480:	mov    rcx,QWORD PTR [rcx]
   140001483:	test   rcx,rcx
   140001486:	je     0x14000148e
   140001488:	call   QWORD PTR [rip+0x4f52]        # 0x1400063e0
   14000148e:	add    rsp,0x28
   140001492:	ret    
   140001493:	int3   
   140001494:	int3   
   140001495:	int3   
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	sub    rsp,0x28
   1400014a0:	mov    rcx,QWORD PTR [rcx]
   1400014a3:	test   rcx,rcx
   1400014a6:	je     0x1400014ad
   1400014a8:	call   0x140004640
   1400014ad:	add    rsp,0x28
   1400014b1:	ret    
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400014c5:	push   rbx
   1400014c6:	sub    rsp,0x30
   1400014ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400014d3:	mov    rbx,rcx
   1400014d6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400014dd:	test   dl,0x1
   1400014e0:	je     0x1400014e7
   1400014e2:	call   0x140004640
   1400014e7:	mov    rax,rbx
   1400014ea:	add    rsp,0x30
   1400014ee:	pop    rbx
   1400014ef:	ret    
   1400014f0:	int3   
   1400014f1:	int3   
   1400014f2:	int3   
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	ret    0x0
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	rex push rbx
   140001512:	sub    rsp,0x30
   140001516:	mov    rax,QWORD PTR [rsp+0x68]
   14000151b:	mov    r10d,r9d
   14000151e:	mov    r9d,DWORD PTR [rsp+0x60]
   140001523:	mov    r11,r8
   140001526:	mov    rcx,rdx
   140001529:	mov    QWORD PTR [rsp+0x60],rax
   14000152e:	mov    r8d,r10d
   140001531:	mov    rdx,r11
   140001534:	add    rsp,0x30
   140001538:	pop    rbx
   140001539:	rex.W jmp QWORD PTR [rip+0x4ac0]        # 0x140006000
   140001540:	int3   
   140001541:	int3   
   140001542:	int3   
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    rcx,rdx
   140001553:	rex.W jmp QWORD PTR [rip+0x4aae]        # 0x140006008
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	rex push rbx
   140001562:	sub    rsp,0x30
   140001566:	mov    rax,QWORD PTR [rsp+0x70]
   14000156b:	mov    r10,r9
   14000156e:	mov    r9,QWORD PTR [rsp+0x60]
   140001573:	mov    r11,r8
   140001576:	mov    QWORD PTR [rsp+0x28],rax
   14000157b:	mov    rcx,rdx
   14000157e:	mov    rax,QWORD PTR [rsp+0x68]
   140001583:	mov    r8,r10
   140001586:	mov    rdx,r11
   140001589:	mov    QWORD PTR [rsp+0x20],rax
   14000158e:	call   QWORD PTR [rip+0x4a7c]        # 0x140006010
   140001594:	add    rsp,0x30
   140001598:	pop    rbx
   140001599:	ret    
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	rex push rbx
   1400015a2:	sub    rsp,0x40
   1400015a6:	mov    rax,QWORD PTR [rsp+0x90]
   1400015ae:	mov    r10,r9
   1400015b1:	mov    r9,QWORD PTR [rsp+0x70]
   1400015b6:	mov    r11d,r8d
   1400015b9:	mov    QWORD PTR [rsp+0x38],rax
   1400015be:	mov    rcx,rdx
   1400015c1:	mov    rax,QWORD PTR [rsp+0x88]
   1400015c9:	mov    r8,r10
   1400015cc:	mov    QWORD PTR [rsp+0x30],rax
   1400015d1:	mov    edx,r11d
   1400015d4:	mov    rax,QWORD PTR [rsp+0x80]
   1400015dc:	mov    QWORD PTR [rsp+0x28],rax
   1400015e1:	mov    rax,QWORD PTR [rsp+0x78]
   1400015e6:	mov    QWORD PTR [rsp+0x20],rax
   1400015eb:	call   QWORD PTR [rip+0x4a27]        # 0x140006018
   1400015f1:	add    rsp,0x40
   1400015f5:	pop    rbx
   1400015f6:	ret    
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	rex push rbx
   140001602:	sub    rsp,0x40
   140001606:	mov    rax,QWORD PTR [rsp+0x90]
   14000160e:	mov    r10,r9
   140001611:	mov    r9,QWORD PTR [rsp+0x70]
   140001616:	mov    r11d,r8d
   140001619:	mov    QWORD PTR [rsp+0x38],rax
   14000161e:	mov    rcx,rdx
   140001621:	mov    rax,QWORD PTR [rsp+0x88]
   140001629:	mov    r8,r10
   14000162c:	mov    QWORD PTR [rsp+0x30],rax
   140001631:	mov    edx,r11d
   140001634:	mov    rax,QWORD PTR [rsp+0x80]
   14000163c:	mov    QWORD PTR [rsp+0x28],rax
   140001641:	mov    rax,QWORD PTR [rsp+0x78]
   140001646:	mov    QWORD PTR [rsp+0x20],rax
   14000164b:	call   QWORD PTR [rip+0x49cf]        # 0x140006020
   140001651:	add    rsp,0x40
   140001655:	pop    rbx
   140001656:	ret    
   140001657:	int3   
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	mov    rcx,rdx
   140001663:	mov    rdx,r8
   140001666:	rex.W jmp QWORD PTR [rip+0x49bb]        # 0x140006028
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	int3   
   140001671:	int3   
   140001672:	int3   
   140001673:	int3   
   140001674:	int3   
   140001675:	int3   
   140001676:	int3   
   140001677:	int3   
   140001678:	int3   
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    rcx,rdx
   140001683:	mov    rdx,r8
   140001686:	rex.W jmp QWORD PTR [rip+0x49a3]        # 0x140006030
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	int3   
   140001691:	int3   
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	rex push rbx
   1400016a2:	sub    rsp,0x50
   1400016a6:	mov    rax,QWORD PTR [rsp+0xa8]
   1400016ae:	mov    r10d,r9d
   1400016b1:	mov    r9,QWORD PTR [rsp+0x80]
   1400016b9:	mov    r11,r8
   1400016bc:	mov    QWORD PTR [rsp+0x40],rax
   1400016c1:	mov    rcx,rdx
   1400016c4:	mov    rax,QWORD PTR [rsp+0xa0]
   1400016cc:	mov    r8d,r10d
   1400016cf:	mov    QWORD PTR [rsp+0x38],rax
   1400016d4:	mov    rdx,r11
   1400016d7:	mov    rax,QWORD PTR [rsp+0x98]
   1400016df:	mov    QWORD PTR [rsp+0x30],rax
   1400016e4:	mov    eax,DWORD PTR [rsp+0x90]
   1400016eb:	mov    DWORD PTR [rsp+0x28],eax
   1400016ef:	mov    eax,DWORD PTR [rsp+0x88]
   1400016f6:	mov    DWORD PTR [rsp+0x20],eax
   1400016fa:	call   QWORD PTR [rip+0x4938]        # 0x140006038
   140001700:	add    rsp,0x50
   140001704:	pop    rbx
   140001705:	ret    
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	rex push rbx
   140001712:	sub    rsp,0x30
   140001716:	mov    eax,DWORD PTR [rsp+0x70]
   14000171a:	mov    r10d,r9d
   14000171d:	mov    r9d,DWORD PTR [rsp+0x60]
   140001722:	mov    r11,r8
   140001725:	mov    DWORD PTR [rsp+0x28],eax
   140001729:	mov    rcx,rdx
   14000172c:	mov    rax,QWORD PTR [rsp+0x68]
   140001731:	mov    r8d,r10d
   140001734:	mov    rdx,r11
   140001737:	mov    QWORD PTR [rsp+0x20],rax
   14000173c:	call   QWORD PTR [rip+0x48fe]        # 0x140006040
   140001742:	add    rsp,0x30
   140001746:	pop    rbx
   140001747:	ret    
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    rax,rsp
   140001753:	mov    QWORD PTR [rax+0x8],rcx
   140001757:	push   rdi
   140001758:	sub    rsp,0x30
   14000175c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001764:	mov    QWORD PTR [rax+0x10],rbx
   140001768:	mov    QWORD PTR [rax+0x18],rbp
   14000176c:	mov    QWORD PTR [rax+0x20],rsi
   140001770:	mov    ebp,edx
   140001772:	mov    rdi,rcx
   140001775:	lea    rax,[rip+0x51cc]        # 0x140006948
   14000177c:	mov    QWORD PTR [rcx],rax
   14000177f:	mov    rcx,QWORD PTR [rcx+0x20]
   140001783:	test   rcx,rcx
   140001786:	je     0x140001797
   140001788:	call   QWORD PTR [rip+0x4b9a]        # 0x140006328
   14000178e:	xor    ecx,ecx
   140001790:	call   QWORD PTR [rip+0x4b92]        # 0x140006328
   140001796:	nop
   140001797:	mov    rsi,QWORD PTR [rdi+0x18]
   14000179b:	test   rsi,rsi
   14000179e:	je     0x1400017bb
   1400017a0:	and    QWORD PTR [rdi+0x18],0x0
   1400017a5:	mov    rax,QWORD PTR [rsi]
   1400017a8:	mov    rbx,QWORD PTR [rax+0x10]
   1400017ac:	mov    rcx,rbx
   1400017af:	call   QWORD PTR [rip+0x4c73]        # 0x140006428
   1400017b5:	mov    rcx,rsi
   1400017b8:	call   rbx
   1400017ba:	nop
   1400017bb:	mov    rsi,QWORD PTR [rdi+0x10]
   1400017bf:	test   rsi,rsi
   1400017c2:	je     0x1400017df
   1400017c4:	and    QWORD PTR [rdi+0x10],0x0
   1400017c9:	mov    rax,QWORD PTR [rsi]
   1400017cc:	mov    rbx,QWORD PTR [rax+0x10]
   1400017d0:	mov    rcx,rbx
   1400017d3:	call   QWORD PTR [rip+0x4c4f]        # 0x140006428
   1400017d9:	mov    rcx,rsi
   1400017dc:	call   rbx
   1400017de:	nop
   1400017df:	mov    DWORD PTR [rdi+0xc],0xc0000001
   1400017e6:	test   bpl,0x1
   1400017ea:	je     0x1400017f4
   1400017ec:	mov    rcx,rdi
   1400017ef:	call   0x140004640
   1400017f4:	mov    rax,rdi
   1400017f7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400017fc:	mov    rbp,QWORD PTR [rsp+0x50]
   140001801:	mov    rsi,QWORD PTR [rsp+0x58]
   140001806:	add    rsp,0x30
   14000180a:	pop    rdi
   14000180b:	ret    
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	int3   
   140001811:	int3   
   140001812:	int3   
   140001813:	int3   
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	mov    QWORD PTR [rsp+0x8],rbx
   140001825:	push   rdi
   140001826:	sub    rsp,0x20
   14000182a:	mov    rcx,QWORD PTR [rcx+0x20]
   14000182e:	xor    ebx,ebx
   140001830:	mov    rdi,rdx
   140001833:	test   rcx,rcx
   140001836:	jne    0x14000183f
   140001838:	mov    eax,0x8000ffff
   14000183d:	jmp    0x140001855
   14000183f:	call   QWORD PTR [rip+0x494b]        # 0x140006190
   140001845:	test   rax,rax
   140001848:	mov    QWORD PTR [rdi],rax
   14000184b:	mov    ecx,0x8007000e
   140001850:	cmove  ebx,ecx
   140001853:	mov    eax,ebx
   140001855:	mov    rbx,QWORD PTR [rsp+0x30]
   14000185a:	add    rsp,0x20
   14000185e:	pop    rdi
   14000185f:	ret    
   140001860:	int3   
   140001861:	int3   
   140001862:	int3   
   140001863:	int3   
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	mov    rax,rsp
   140001873:	mov    QWORD PTR [rax+0x8],rbx
   140001877:	mov    QWORD PTR [rax+0x10],rbp
   14000187b:	mov    QWORD PTR [rax+0x18],rsi
   14000187f:	mov    QWORD PTR [rax+0x20],rdi
   140001883:	push   r14
   140001885:	sub    rsp,0x30
   140001889:	mov    rdi,QWORD PTR [rcx+0x18]
   14000188d:	mov    rsi,r9
   140001890:	mov    rbp,r8
   140001893:	mov    r14,rdx
   140001896:	test   rdi,rdi
   140001899:	je     0x1400018c9
   14000189b:	mov    rax,QWORD PTR [rdi]
   14000189e:	mov    rbx,QWORD PTR [rax+0x18]
   1400018a2:	mov    rcx,rbx
   1400018a5:	call   QWORD PTR [rip+0x4b7d]        # 0x140006428
   1400018ab:	mov    eax,DWORD PTR [rsp+0x68]
   1400018af:	mov    r9,rsi
   1400018b2:	mov    DWORD PTR [rsp+0x28],eax
   1400018b6:	mov    r8,rbp
   1400018b9:	mov    eax,DWORD PTR [rsp+0x60]
   1400018bd:	mov    rdx,r14
   1400018c0:	mov    rcx,rdi
   1400018c3:	mov    DWORD PTR [rsp+0x20],eax
   1400018c7:	call   rbx
   1400018c9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018ce:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018d3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400018d8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400018dd:	add    rsp,0x30
   1400018e1:	pop    r14
   1400018e3:	ret    
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	xor    eax,eax
   1400018f2:	cmp    QWORD PTR [rcx+0x20],rax
   1400018f6:	setne  al
   1400018f9:	ret    
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	mov    rax,rsp
   140001903:	push   rbp
   140001904:	push   r12
   140001906:	push   r13
   140001908:	push   r14
   14000190a:	push   r15
   14000190c:	lea    rbp,[rax-0x5f]
   140001910:	sub    rsp,0xc0
   140001917:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   14000191f:	mov    QWORD PTR [rax+0x10],rbx
   140001923:	mov    QWORD PTR [rax+0x18],rsi
   140001927:	mov    QWORD PTR [rax+0x20],rdi
   14000192b:	mov    rax,QWORD PTR [rip+0x86e6]        # 0x14000a018
   140001932:	xor    rax,rsp
   140001935:	mov    QWORD PTR [rbp+0x2f],rax
   140001939:	mov    QWORD PTR [rbp-0x1],rcx
   14000193d:	mov    DWORD PTR [rbp-0x35],0x20
   140001944:	xor    ebx,ebx
   140001946:	mov    QWORD PTR [rbp-0x19],rbx
   14000194a:	mov    QWORD PTR [rbp-0x31],rbx
   14000194e:	mov    esi,ebx
   140001950:	mov    QWORD PTR [rbp+0x7],rbx
   140001954:	or     r12d,0xffffffff
   140001958:	mov    BYTE PTR [rbp-0x39],bl
   14000195b:	mov    edi,ebx
   14000195d:	mov    QWORD PTR [rbp-0x21],rbx
   140001961:	mov    QWORD PTR [rbp-0x9],rbx
   140001965:	lea    rcx,[rbp-0x29]
   140001969:	call   0x140002238
   14000196e:	nop
   14000196f:	mov    r15d,ebx
   140001972:	mov    QWORD PTR [rbp-0x11],rbx
   140001976:	lea    rcx,[rbp-0x11]
   14000197a:	cmp    rcx,rax
   14000197d:	je     0x140001989
   14000197f:	mov    r15,QWORD PTR [rax]
   140001982:	mov    QWORD PTR [rbp-0x11],r15
   140001986:	mov    QWORD PTR [rax],rbx
   140001989:	mov    QWORD PTR [rbp-0x11],rbx
   14000198d:	mov    r14,r15
   140001990:	mov    QWORD PTR [rbp-0x9],r15
   140001994:	mov    r13,QWORD PTR [rbp-0x29]
   140001998:	test   r13,r13
   14000199b:	je     0x1400019b7
   14000199d:	mov    QWORD PTR [rbp-0x29],rbx
   1400019a1:	mov    rax,QWORD PTR [r13+0x0]
   1400019a5:	mov    rbx,QWORD PTR [rax+0x10]
   1400019a9:	mov    rcx,rbx
   1400019ac:	call   QWORD PTR [rip+0x4a76]        # 0x140006428
   1400019b2:	mov    rcx,r13
   1400019b5:	call   rbx
   1400019b7:	xor    r13d,r13d
   1400019ba:	test   r15,r15
   1400019bd:	je     0x1400019d2
   1400019bf:	mov    r14d,r13d
   1400019c2:	mov    QWORD PTR [rbp-0x9],r13
   1400019c6:	mov    rdi,r15
   1400019c9:	mov    QWORD PTR [rbp-0x21],r15
   1400019cd:	mov    r15d,r13d
   1400019d0:	jmp    0x1400019d8
   1400019d2:	mov    r15d,0x8007000e
   1400019d8:	test   r14,r14
   1400019db:	je     0x1400019f6
   1400019dd:	mov    QWORD PTR [rbp-0x9],r13
   1400019e1:	mov    rax,QWORD PTR [r14]
   1400019e4:	mov    rbx,QWORD PTR [rax+0x10]
   1400019e8:	mov    rcx,rbx
   1400019eb:	call   QWORD PTR [rip+0x4a37]        # 0x140006428
   1400019f1:	mov    rcx,r14
   1400019f4:	call   rbx
   1400019f6:	test   r15d,r15d
   1400019f9:	jns    0x140001a57
   1400019fb:	mov    r13,QWORD PTR [rbp-0x1]
   1400019ff:	mov    rax,QWORD PTR [r13+0x0]
   140001a03:	mov    rbx,QWORD PTR [rax+0x20]
   140001a07:	mov    rcx,rbx
   140001a0a:	call   QWORD PTR [rip+0x4a18]        # 0x140006428
   140001a10:	mov    DWORD PTR [rsp+0x28],r15d
   140001a15:	and    DWORD PTR [rsp+0x20],0x0
   140001a1a:	xor    r9d,r9d
   140001a1d:	xor    r8d,r8d
   140001a20:	lea    rdx,[rip+0x4c21]        # 0x140006648
   140001a27:	mov    rcx,r13
   140001a2a:	call   rbx
   140001a2c:	nop
   140001a2d:	xor    r13d,r13d
   140001a30:	test   rdi,rdi
   140001a33:	je     0x140001cd3
   140001a39:	mov    QWORD PTR [rbp-0x21],r13
   140001a3d:	mov    rax,QWORD PTR [rdi]
   140001a40:	mov    rbx,QWORD PTR [rax+0x10]
   140001a44:	mov    rcx,rbx
   140001a47:	call   QWORD PTR [rip+0x49db]        # 0x140006428
   140001a4d:	mov    rcx,rdi
   140001a50:	call   rbx
   140001a52:	jmp    0x140001cd3
   140001a57:	mov    QWORD PTR [rbp-0x29],rdi
   140001a5b:	test   rdi,rdi
   140001a5e:	je     0x140001a76
   140001a60:	mov    rax,QWORD PTR [rdi]
   140001a63:	mov    rbx,QWORD PTR [rax+0x8]
   140001a67:	mov    rcx,rbx
   140001a6a:	call   QWORD PTR [rip+0x49b8]        # 0x140006428
   140001a70:	mov    rcx,rdi
   140001a73:	call   rbx
   140001a75:	nop
   140001a76:	mov    QWORD PTR [rbp-0x29],r13
   140001a7a:	mov    rsi,rdi
   140001a7d:	mov    QWORD PTR [rbp+0x7],rdi
   140001a81:	test   rdi,rdi
   140001a84:	je     0x140001a9f
   140001a86:	mov    QWORD PTR [rbp-0x21],r13
   140001a8a:	mov    rax,QWORD PTR [rdi]
   140001a8d:	mov    rbx,QWORD PTR [rax+0x10]
   140001a91:	mov    rcx,rbx
   140001a94:	call   QWORD PTR [rip+0x498e]        # 0x140006428
   140001a9a:	mov    rcx,rdi
   140001a9d:	call   rbx
   140001a9f:	mov    rax,QWORD PTR [rdi]
   140001aa2:	mov    rbx,QWORD PTR [rax+0x50]
   140001aa6:	mov    rcx,rbx
   140001aa9:	call   QWORD PTR [rip+0x4979]        # 0x140006428
   140001aaf:	mov    QWORD PTR [rsp+0x48],r13
   140001ab4:	lea    rax,[rbp-0x19]
   140001ab8:	mov    QWORD PTR [rsp+0x40],rax
   140001abd:	mov    QWORD PTR [rsp+0x38],r13
   140001ac2:	mov    DWORD PTR [rsp+0x30],0x20006
   140001aca:	mov    eax,0x1
   140001acf:	mov    DWORD PTR [rsp+0x28],eax
   140001ad3:	mov    QWORD PTR [rsp+0x20],r13
   140001ad8:	xor    r9d,r9d
   140001adb:	lea    r8,[rip+0x537e]        # 0x140006e60
   140001ae2:	mov    rdx,0xffffffff80000001
   140001ae9:	mov    rcx,rdi
   140001aec:	call   rbx
   140001aee:	mov    r14d,eax
   140001af1:	test   eax,eax
   140001af3:	jne    0x140001c8b
   140001af9:	mov    r15d,r13d
   140001afc:	mov    rdi,QWORD PTR [rbp-0x31]
   140001b00:	test   rdi,rdi
   140001b03:	je     0x140001b1d
   140001b05:	mov    rcx,QWORD PTR [rsi]
   140001b08:	mov    rbx,QWORD PTR [rcx+0x20]
   140001b0c:	mov    rcx,rbx
   140001b0f:	call   QWORD PTR [rip+0x4913]        # 0x140006428
   140001b15:	mov    rdx,rdi
   140001b18:	mov    rcx,rsi
   140001b1b:	call   rbx
   140001b1d:	mov    r9d,r15d
   140001b20:	lea    r8,[rip+0x52b9]        # 0x140006de0
   140001b27:	mov    edx,0xa
   140001b2c:	lea    rcx,[rbp+0x17]
   140001b30:	call   0x140002448
   140001b35:	test   eax,eax
   140001b37:	jns    0x140001b49
   140001b39:	mov    edi,0x1
   140001b3e:	mov    al,dil
   140001b41:	mov    DWORD PTR [rbp-0x39],eax
   140001b44:	jmp    0x140001c6f
   140001b49:	mov    rax,QWORD PTR [rsi]
   140001b4c:	mov    rbx,QWORD PTR [rax+0x50]
   140001b50:	mov    rcx,rbx
   140001b53:	call   QWORD PTR [rip+0x48cf]        # 0x140006428
   140001b59:	mov    QWORD PTR [rsp+0x48],r13
   140001b5e:	lea    rax,[rbp-0x31]
   140001b62:	mov    QWORD PTR [rsp+0x40],rax
   140001b67:	mov    QWORD PTR [rsp+0x38],r13
   140001b6c:	mov    DWORD PTR [rsp+0x30],0x20006
   140001b74:	mov    edi,0x1
   140001b79:	mov    DWORD PTR [rsp+0x28],edi
   140001b7d:	mov    QWORD PTR [rsp+0x20],r13
   140001b82:	xor    r9d,r9d
   140001b85:	lea    r8,[rbp+0x17]
   140001b89:	mov    rdx,QWORD PTR [rbp-0x19]
   140001b8d:	mov    rcx,rsi
   140001b90:	call   rbx
   140001b92:	mov    r14d,eax
   140001b95:	test   eax,eax
   140001b97:	jne    0x140001b3e
   140001b99:	mov    rax,QWORD PTR [rsi]
   140001b9c:	mov    rbx,QWORD PTR [rax+0x58]
   140001ba0:	mov    rcx,rbx
   140001ba3:	call   QWORD PTR [rip+0x487f]        # 0x140006428
   140001ba9:	mov    DWORD PTR [rsp+0x30],0x2
   140001bb1:	lea    rax,[rbp-0x35]
   140001bb5:	mov    QWORD PTR [rsp+0x28],rax
   140001bba:	mov    r14d,edi
   140001bbd:	mov    DWORD PTR [rsp+0x20],edi
   140001bc1:	xor    r9d,r9d
   140001bc4:	lea    r8,[rip+0x521d]        # 0x140006de8
   140001bcb:	mov    rdx,QWORD PTR [rbp-0x31]
   140001bcf:	mov    rcx,rsi
   140001bd2:	call   rbx
   140001bd4:	movzx  edi,BYTE PTR [rbp-0x39]
   140001bd8:	test   eax,eax
   140001bda:	cmovne edi,r14d
   140001bde:	mov    rax,QWORD PTR [rsi]
   140001be1:	mov    rbx,QWORD PTR [rax+0x58]
   140001be5:	mov    rcx,rbx
   140001be8:	call   QWORD PTR [rip+0x483a]        # 0x140006428
   140001bee:	mov    DWORD PTR [rsp+0x30],0x2
   140001bf6:	lea    rax,[rbp-0x35]
   140001bfa:	mov    QWORD PTR [rsp+0x28],rax
   140001bff:	mov    DWORD PTR [rsp+0x20],r14d
   140001c04:	xor    r9d,r9d
   140001c07:	lea    r8,[rip+0x51f2]        # 0x140006e00
   140001c0e:	mov    rdx,QWORD PTR [rbp-0x31]
   140001c12:	mov    rcx,rsi
   140001c15:	call   rbx
   140001c17:	test   eax,eax
   140001c19:	cmovne edi,r14d
   140001c1d:	mov    rax,QWORD PTR [rsi]
   140001c20:	mov    rbx,QWORD PTR [rax+0x58]
   140001c24:	mov    rcx,rbx
   140001c27:	call   QWORD PTR [rip+0x47fb]        # 0x140006428
   140001c2d:	mov    DWORD PTR [rsp+0x30],0x2
   140001c35:	lea    rax,[rbp-0x35]
   140001c39:	mov    QWORD PTR [rsp+0x28],rax
   140001c3e:	mov    DWORD PTR [rsp+0x20],r14d
   140001c43:	xor    r9d,r9d
   140001c46:	lea    r8,[rip+0x51d3]        # 0x140006e20
   140001c4d:	mov    rdx,QWORD PTR [rbp-0x31]
   140001c51:	mov    rcx,rsi
   140001c54:	call   rbx
   140001c56:	mov    r14d,eax
   140001c59:	movzx  eax,dil
   140001c5d:	test   r14d,r14d
   140001c60:	mov    edi,0x1
   140001c65:	cmovne eax,edi
   140001c68:	mov    DWORD PTR [rbp-0x39],eax
   140001c6b:	test   al,al
   140001c6d:	je     0x140001c77
   140001c6f:	cmp    r12d,0xffffffff
   140001c73:	cmove  r12d,r15d
   140001c77:	add    r15d,edi
   140001c7a:	cmp    r15d,0xff
   140001c81:	jl     0x140001afc
   140001c87:	test   al,al
   140001c89:	je     0x140001cd3
   140001c8b:	mov    r13,QWORD PTR [rbp-0x1]
   140001c8f:	mov    rax,QWORD PTR [r13+0x0]
   140001c93:	movzx  ebx,r14w
   140001c97:	or     ebx,0x80070000
   140001c9d:	test   r14d,r14d
   140001ca0:	cmovle ebx,r14d
   140001ca4:	mov    rdi,QWORD PTR [rax+0x20]
   140001ca8:	mov    rcx,rdi
   140001cab:	call   QWORD PTR [rip+0x4777]        # 0x140006428
   140001cb1:	mov    DWORD PTR [rsp+0x28],ebx
   140001cb5:	mov    DWORD PTR [rsp+0x20],r12d
   140001cba:	xor    r9d,r9d
   140001cbd:	lea    r8,[rip+0x519c]        # 0x140006e60
   140001cc4:	lea    rdx,[rip+0x497d]        # 0x140006648
   140001ccb:	mov    rcx,r13
   140001cce:	call   rdi
   140001cd0:	xor    r13d,r13d
   140001cd3:	mov    rdi,QWORD PTR [rbp-0x31]
   140001cd7:	test   rdi,rdi
   140001cda:	je     0x140001cf4
   140001cdc:	mov    rax,QWORD PTR [rsi]
   140001cdf:	mov    rbx,QWORD PTR [rax+0x20]
   140001ce3:	mov    rcx,rbx
   140001ce6:	call   QWORD PTR [rip+0x473c]        # 0x140006428
   140001cec:	mov    rdx,rdi
   140001cef:	mov    rcx,rsi
   140001cf2:	call   rbx
   140001cf4:	mov    rdi,QWORD PTR [rbp-0x19]
   140001cf8:	test   rdi,rdi
   140001cfb:	je     0x140001d16
   140001cfd:	mov    rax,QWORD PTR [rsi]
   140001d00:	mov    rbx,QWORD PTR [rax+0x20]
   140001d04:	mov    rcx,rbx
   140001d07:	call   QWORD PTR [rip+0x471b]        # 0x140006428
   140001d0d:	mov    rdx,rdi
   140001d10:	mov    rcx,rsi
   140001d13:	call   rbx
   140001d15:	nop
   140001d16:	test   rsi,rsi
   140001d19:	je     0x140001d34
   140001d1b:	mov    QWORD PTR [rbp+0x7],r13
   140001d1f:	mov    rax,QWORD PTR [rsi]
   140001d22:	mov    rbx,QWORD PTR [rax+0x10]
   140001d26:	mov    rcx,rbx
   140001d29:	call   QWORD PTR [rip+0x46f9]        # 0x140006428
   140001d2f:	mov    rcx,rsi
   140001d32:	call   rbx
   140001d34:	mov    rcx,QWORD PTR [rbp+0x2f]
   140001d38:	xor    rcx,rsp
   140001d3b:	call   0x140004aa0
   140001d40:	lea    r11,[rsp+0xc0]
   140001d48:	mov    rbx,QWORD PTR [r11+0x38]
   140001d4c:	mov    rsi,QWORD PTR [r11+0x40]
   140001d50:	mov    rdi,QWORD PTR [r11+0x48]
   140001d54:	mov    rsp,r11
   140001d57:	pop    r15
   140001d59:	pop    r14
   140001d5b:	pop    r13
   140001d5d:	pop    r12
   140001d5f:	pop    rbp
   140001d60:	ret    
   140001d61:	int3   
   140001d62:	int3   
   140001d63:	int3   
   140001d64:	int3   
   140001d65:	int3   
   140001d66:	int3   
   140001d67:	int3   
   140001d68:	mov    rax,rsp
   140001d6b:	mov    QWORD PTR [rax+0x18],r8
   140001d6f:	mov    QWORD PTR [rax+0x10],rdx
   140001d73:	mov    QWORD PTR [rax+0x8],rcx
   140001d77:	push   rbp
   140001d78:	push   rsi
   140001d79:	push   rdi
   140001d7a:	push   r12
   140001d7c:	push   r13
   140001d7e:	push   r14
   140001d80:	push   r15
   140001d82:	mov    rbp,rsp
   140001d85:	sub    rsp,0x50
   140001d89:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140001d91:	mov    QWORD PTR [rax+0x20],rbx
   140001d95:	mov    r13,r9
   140001d98:	xor    edi,edi
   140001d9a:	mov    QWORD PTR [rbp-0x10],rdi
   140001d9e:	and    QWORD PTR [rbp-0x18],rdi
   140001da2:	mov    r15d,0x8007000e
   140001da8:	lea    rcx,[rbp+0x50]
   140001dac:	call   0x14000231c
   140001db1:	nop
   140001db2:	xor    r14d,r14d
   140001db5:	mov    QWORD PTR [rbp-0x20],r14
   140001db9:	lea    rcx,[rbp-0x20]
   140001dbd:	cmp    rcx,rax
   140001dc0:	je     0x140001dcc
   140001dc2:	mov    r14,QWORD PTR [rax]
   140001dc5:	mov    QWORD PTR [rbp-0x20],r14
   140001dc9:	and    QWORD PTR [rax],rdi
   140001dcc:	and    QWORD PTR [rbp-0x20],0x0
   140001dd1:	mov    rsi,r14
   140001dd4:	mov    QWORD PTR [rbp-0x18],r14
   140001dd8:	mov    r12,QWORD PTR [rbp+0x50]
   140001ddc:	test   r12,r12
   140001ddf:	je     0x140001dfc
   140001de1:	and    QWORD PTR [rbp+0x50],0x0
   140001de6:	mov    rax,QWORD PTR [r12]
   140001dea:	mov    rbx,QWORD PTR [rax+0x10]
   140001dee:	mov    rcx,rbx
   140001df1:	call   QWORD PTR [rip+0x4631]        # 0x140006428
   140001df7:	mov    rcx,r12
   140001dfa:	call   rbx
   140001dfc:	test   r14,r14
   140001dff:	je     0x140001e11
   140001e01:	xor    esi,esi
   140001e03:	mov    QWORD PTR [rbp-0x18],rsi
   140001e07:	mov    rdi,r14
   140001e0a:	mov    QWORD PTR [rbp-0x10],r14
   140001e0e:	xor    r15d,r15d
   140001e11:	test   rsi,rsi
   140001e14:	je     0x140001e30
   140001e16:	and    QWORD PTR [rbp-0x18],0x0
   140001e1b:	mov    rax,QWORD PTR [rsi]
   140001e1e:	mov    rbx,QWORD PTR [rax+0x10]
   140001e22:	mov    rcx,rbx
   140001e25:	call   QWORD PTR [rip+0x45fd]        # 0x140006428
   140001e2b:	mov    rcx,rsi
   140001e2e:	call   rbx
   140001e30:	test   r15d,r15d
   140001e33:	js     0x140001e6c
   140001e35:	mov    QWORD PTR [rsp+0x20],r13
   140001e3a:	mov    r8,QWORD PTR [rbp+0x48]
   140001e3e:	mov    rdx,QWORD PTR [rbp+0x40]
   140001e42:	mov    rcx,rdi
   140001e45:	call   0x140001eac
   140001e4a:	mov    rax,QWORD PTR [rdi]
   140001e4d:	mov    rbx,QWORD PTR [rax]
   140001e50:	mov    rcx,rbx
   140001e53:	call   QWORD PTR [rip+0x45cf]        # 0x140006428
   140001e59:	mov    r8,QWORD PTR [rbp+0x60]
   140001e5d:	lea    rdx,[rip+0x4fec]        # 0x140006e50
   140001e64:	mov    rcx,rdi
   140001e67:	call   rbx
   140001e69:	mov    r15d,eax
   140001e6c:	test   rdi,rdi
   140001e6f:	je     0x140001e8b
   140001e71:	and    QWORD PTR [rbp-0x10],0x0
   140001e76:	mov    rdx,QWORD PTR [rdi]
   140001e79:	mov    rbx,QWORD PTR [rdx+0x10]
   140001e7d:	mov    rcx,rbx
   140001e80:	call   QWORD PTR [rip+0x45a2]        # 0x140006428
   140001e86:	mov    rcx,rdi
   140001e89:	call   rbx
   140001e8b:	mov    eax,r15d
   140001e8e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140001e96:	add    rsp,0x50
   140001e9a:	pop    r15
   140001e9c:	pop    r14
   140001e9e:	pop    r13
   140001ea0:	pop    r12
   140001ea2:	pop    rdi
   140001ea3:	pop    rsi
   140001ea4:	pop    rbp
   140001ea5:	ret    
   140001ea6:	int3   
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	mov    rax,rsp
   140001eaf:	mov    QWORD PTR [rax+0x20],r9
   140001eb3:	push   rdi
   140001eb4:	push   r14
   140001eb6:	push   r15
   140001eb8:	sub    rsp,0x40
   140001ebc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140001ec4:	mov    QWORD PTR [rax+0x8],rbx
   140001ec8:	mov    QWORD PTR [rax+0x10],rsi
   140001ecc:	mov    r14,r8
   140001ecf:	mov    rsi,rdx
   140001ed2:	mov    rdi,rcx
   140001ed5:	cmp    QWORD PTR [rcx+0x10],r8
   140001ed9:	je     0x140001f27
   140001edb:	mov    QWORD PTR [rax+0x20],r8
   140001edf:	test   r8,r8
   140001ee2:	je     0x140001efa
   140001ee4:	mov    rax,QWORD PTR [r8]
   140001ee7:	mov    rbx,QWORD PTR [rax+0x8]
   140001eeb:	mov    rcx,rbx
   140001eee:	call   QWORD PTR [rip+0x4534]        # 0x140006428
   140001ef4:	mov    rcx,r14
   140001ef7:	call   rbx
   140001ef9:	nop
   140001efa:	mov    r15,QWORD PTR [rdi+0x10]
   140001efe:	mov    QWORD PTR [rsp+0x78],r15
   140001f03:	mov    QWORD PTR [rdi+0x10],r14
   140001f07:	test   r15,r15
   140001f0a:	je     0x140001f27
   140001f0c:	and    QWORD PTR [rsp+0x78],0x0
   140001f12:	mov    rax,QWORD PTR [r15]
   140001f15:	mov    rbx,QWORD PTR [rax+0x10]
   140001f19:	mov    rcx,rbx
   140001f1c:	call   QWORD PTR [rip+0x4506]        # 0x140006428
   140001f22:	mov    rcx,r15
   140001f25:	call   rbx
   140001f27:	cmp    QWORD PTR [rdi+0x18],rsi
   140001f2b:	je     0x140001f7a
   140001f2d:	mov    QWORD PTR [rsp+0x78],rsi
   140001f32:	test   rsi,rsi
   140001f35:	je     0x140001f4d
   140001f37:	mov    rax,QWORD PTR [rsi]
   140001f3a:	mov    rbx,QWORD PTR [rax+0x8]
   140001f3e:	mov    rcx,rbx
   140001f41:	call   QWORD PTR [rip+0x44e1]        # 0x140006428
   140001f47:	mov    rcx,rsi
   140001f4a:	call   rbx
   140001f4c:	nop
   140001f4d:	mov    r14,QWORD PTR [rdi+0x18]
   140001f51:	mov    QWORD PTR [rsp+0x78],r14
   140001f56:	mov    QWORD PTR [rdi+0x18],rsi
   140001f5a:	test   r14,r14
   140001f5d:	je     0x140001f7a
   140001f5f:	and    QWORD PTR [rsp+0x78],0x0
   140001f65:	mov    rax,QWORD PTR [r14]
   140001f68:	mov    rbx,QWORD PTR [rax+0x10]
   140001f6c:	mov    rcx,rbx
   140001f6f:	call   QWORD PTR [rip+0x44b3]        # 0x140006428
   140001f75:	mov    rcx,r14
   140001f78:	call   rbx
   140001f7a:	mov    rsi,QWORD PTR [rsp+0x80]
   140001f82:	mov    QWORD PTR [rdi+0x20],rsi
   140001f86:	mov    rax,QWORD PTR [rdi]
   140001f89:	mov    rbx,QWORD PTR [rax+0x20]
   140001f8d:	mov    rcx,rbx
   140001f90:	call   QWORD PTR [rip+0x4492]        # 0x140006428
   140001f96:	and    DWORD PTR [rsp+0x28],0x0
   140001f9b:	xor    r9d,r9d
   140001f9e:	mov    rcx,rdi
   140001fa1:	test   rsi,rsi
   140001fa4:	je     0x140001fc6
   140001fa6:	mov    eax,DWORD PTR [rsi+0x208]
   140001fac:	mov    DWORD PTR [rsp+0x20],eax
   140001fb0:	mov    r8,rsi
   140001fb3:	lea    rdx,[rip+0x470e]        # 0x1400066c8
   140001fba:	call   rbx
   140001fbc:	mov    rcx,rdi
   140001fbf:	call   0x140001900
   140001fc4:	jmp    0x140001fd7
   140001fc6:	and    DWORD PTR [rsp+0x20],0x0
   140001fcb:	xor    r8d,r8d
   140001fce:	lea    rdx,[rip+0x4683]        # 0x140006658
   140001fd5:	call   rbx
   140001fd7:	mov    rbx,QWORD PTR [rsp+0x60]
   140001fdc:	mov    rsi,QWORD PTR [rsp+0x68]
   140001fe1:	add    rsp,0x40
   140001fe5:	pop    r15
   140001fe7:	pop    r14
   140001fe9:	pop    rdi
   140001fea:	ret    
   140001feb:	int3   
   140001fec:	int3   
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    QWORD PTR [rsp+0x8],rbx
   140002005:	mov    QWORD PTR [rsp+0x10],rsi
   14000200a:	push   rdi
   14000200b:	sub    rsp,0x20
   14000200f:	xor    edi,edi
   140002011:	mov    rsi,rcx
   140002014:	mov    QWORD PTR [r8],rdi
   140002017:	cmp    DWORD PTR [rdx],edi
   140002019:	jne    0x14000203c
   14000201b:	mov    eax,DWORD PTR [rip+0x4db3]        # 0x140006dd4
   140002021:	cmp    DWORD PTR [rdx+0x4],eax
   140002024:	jne    0x14000203c
   140002026:	mov    eax,DWORD PTR [rip+0x4dac]        # 0x140006dd8
   14000202c:	cmp    DWORD PTR [rdx+0x8],eax
   14000202f:	jne    0x14000203c
   140002031:	mov    eax,DWORD PTR [rip+0x4da5]        # 0x140006ddc
   140002037:	cmp    DWORD PTR [rdx+0xc],eax
   14000203a:	je     0x140002065
   14000203c:	cmp    DWORD PTR [rdx],0x7ed55b45
   140002042:	jne    0x14000207f
   140002044:	mov    eax,DWORD PTR [rip+0x4e0a]        # 0x140006e54
   14000204a:	cmp    DWORD PTR [rdx+0x4],eax
   14000204d:	jne    0x14000207f
   14000204f:	mov    eax,DWORD PTR [rip+0x4e03]        # 0x140006e58
   140002055:	cmp    DWORD PTR [rdx+0x8],eax
   140002058:	jne    0x14000207f
   14000205a:	mov    eax,DWORD PTR [rip+0x4dfc]        # 0x140006e5c
   140002060:	cmp    DWORD PTR [rdx+0xc],eax
   140002063:	jne    0x14000207f
   140002065:	mov    QWORD PTR [r8],rcx
   140002068:	mov    rax,QWORD PTR [rcx]
   14000206b:	mov    rbx,QWORD PTR [rax+0x8]
   14000206f:	mov    rcx,rbx
   140002072:	call   QWORD PTR [rip+0x43b0]        # 0x140006428
   140002078:	mov    rcx,rsi
   14000207b:	call   rbx
   14000207d:	jmp    0x140002084
   14000207f:	mov    edi,0x80004002
   140002084:	mov    rbx,QWORD PTR [rsp+0x30]
   140002089:	mov    eax,edi
   14000208b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002090:	add    rsp,0x20
   140002094:	pop    rdi
   140002095:	ret    
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400020aa:	push   rdi
   1400020ab:	sub    rsp,0x20
   1400020af:	mov    rsi,rcx
   1400020b2:	or     edi,0xffffffff
   1400020b5:	lock xadd DWORD PTR [rcx+0xc],edi
   1400020ba:	sub    edi,0x1
   1400020bd:	jne    0x1400020fd
   1400020bf:	test   rcx,rcx
   1400020c2:	je     0x1400020dc
   1400020c4:	mov    rax,QWORD PTR [rcx]
   1400020c7:	mov    rbx,QWORD PTR [rax+0x30]
   1400020cb:	mov    rcx,rbx
   1400020ce:	call   QWORD PTR [rip+0x4354]        # 0x140006428
   1400020d4:	lea    edx,[rdi+0x1]
   1400020d7:	mov    rcx,rsi
   1400020da:	call   rbx
   1400020dc:	mov    rsi,QWORD PTR [rip+0x8575]        # 0x14000a658
   1400020e3:	test   rsi,rsi
   1400020e6:	je     0x1400020fd
   1400020e8:	mov    rdx,QWORD PTR [rsi]
   1400020eb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400020ef:	mov    rcx,rbx
   1400020f2:	call   QWORD PTR [rip+0x4330]        # 0x140006428
   1400020f8:	mov    rcx,rsi
   1400020fb:	call   rbx
   1400020fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140002102:	mov    eax,edi
   140002104:	mov    rsi,QWORD PTR [rsp+0x38]
   140002109:	add    rsp,0x20
   14000210d:	pop    rdi
   14000210e:	ret    
   14000210f:	int3   
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    QWORD PTR [rsp+0x8],rbx
   140002125:	mov    QWORD PTR [rsp+0x10],rsi
   14000212a:	push   rdi
   14000212b:	sub    rsp,0x20
   14000212f:	xor    edi,edi
   140002131:	mov    rsi,rcx
   140002134:	mov    QWORD PTR [r8],rdi
   140002137:	cmp    DWORD PTR [rdx],edi
   140002139:	jne    0x14000215c
   14000213b:	mov    eax,DWORD PTR [rip+0x4c93]        # 0x140006dd4
   140002141:	cmp    DWORD PTR [rdx+0x4],eax
   140002144:	jne    0x14000215c
   140002146:	mov    eax,DWORD PTR [rip+0x4c8c]        # 0x140006dd8
   14000214c:	cmp    DWORD PTR [rdx+0x8],eax
   14000214f:	jne    0x14000215c
   140002151:	mov    eax,DWORD PTR [rip+0x4c85]        # 0x140006ddc
   140002157:	cmp    DWORD PTR [rdx+0xc],eax
   14000215a:	je     0x140002185
   14000215c:	cmp    DWORD PTR [rdx],0x88891374
   140002162:	jne    0x14000219f
   140002164:	mov    eax,DWORD PTR [rip+0x4cda]        # 0x140006e44
   14000216a:	cmp    DWORD PTR [rdx+0x4],eax
   14000216d:	jne    0x14000219f
   14000216f:	mov    eax,DWORD PTR [rip+0x4cd3]        # 0x140006e48
   140002175:	cmp    DWORD PTR [rdx+0x8],eax
   140002178:	jne    0x14000219f
   14000217a:	mov    eax,DWORD PTR [rip+0x4ccc]        # 0x140006e4c
   140002180:	cmp    DWORD PTR [rdx+0xc],eax
   140002183:	jne    0x14000219f
   140002185:	mov    QWORD PTR [r8],rcx
   140002188:	mov    rax,QWORD PTR [rcx]
   14000218b:	mov    rbx,QWORD PTR [rax+0x8]
   14000218f:	mov    rcx,rbx
   140002192:	call   QWORD PTR [rip+0x4290]        # 0x140006428
   140002198:	mov    rcx,rsi
   14000219b:	call   rbx
   14000219d:	jmp    0x1400021a4
   14000219f:	mov    edi,0x80004002
   1400021a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021a9:	mov    eax,edi
   1400021ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400021b0:	add    rsp,0x20
   1400021b4:	pop    rdi
   1400021b5:	ret    
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400021ca:	push   rdi
   1400021cb:	sub    rsp,0x20
   1400021cf:	mov    rsi,rcx
   1400021d2:	or     edi,0xffffffff
   1400021d5:	lock xadd DWORD PTR [rcx+0xc],edi
   1400021da:	sub    edi,0x1
   1400021dd:	jne    0x14000221d
   1400021df:	test   rcx,rcx
   1400021e2:	je     0x1400021fc
   1400021e4:	mov    rax,QWORD PTR [rcx]
   1400021e7:	mov    rbx,QWORD PTR [rax+0x60]
   1400021eb:	mov    rcx,rbx
   1400021ee:	call   QWORD PTR [rip+0x4234]        # 0x140006428
   1400021f4:	lea    edx,[rdi+0x1]
   1400021f7:	mov    rcx,rsi
   1400021fa:	call   rbx
   1400021fc:	mov    rsi,QWORD PTR [rip+0x8455]        # 0x14000a658
   140002203:	test   rsi,rsi
   140002206:	je     0x14000221d
   140002208:	mov    rdx,QWORD PTR [rsi]
   14000220b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000220f:	mov    rcx,rbx
   140002212:	call   QWORD PTR [rip+0x4210]        # 0x140006428
   140002218:	mov    rcx,rsi
   14000221b:	call   rbx
   14000221d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002222:	mov    eax,edi
   140002224:	mov    rsi,QWORD PTR [rsp+0x38]
   140002229:	add    rsp,0x20
   14000222d:	pop    rdi
   14000222e:	ret    
   14000222f:	int3   
   140002230:	int3   
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	mov    rax,rsp
   14000223b:	mov    QWORD PTR [rax+0x8],rcx
   14000223f:	push   rsi
   140002240:	push   rdi
   140002241:	push   r14
   140002243:	sub    rsp,0x30
   140002247:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000224f:	mov    QWORD PTR [rax+0x20],rbx
   140002253:	mov    rsi,rcx
   140002256:	and    DWORD PTR [rax-0x28],0x0
   14000225a:	and    QWORD PTR [rcx],0x0
   14000225e:	mov    edi,0x1
   140002263:	mov    DWORD PTR [rax-0x28],edi
   140002266:	and    QWORD PTR [rax+0x10],0x0
   14000226b:	lea    rdx,[rip+0x44c6]        # 0x140006738
   140002272:	lea    ecx,[rdi+0xf]
   140002275:	call   0x140004ac4
   14000227a:	mov    rbx,rax
   14000227d:	mov    QWORD PTR [rsp+0x58],rax
   140002282:	test   rax,rax
   140002285:	je     0x1400022f6
   140002287:	mov    QWORD PTR [rsp+0x60],rax
   14000228c:	lea    rax,[rip+0x451d]        # 0x1400067b0
   140002293:	mov    QWORD PTR [rbx],rax
   140002296:	mov    DWORD PTR [rbx+0xc],edi
   140002299:	lea    rax,[rip+0x4570]        # 0x140006810
   1400022a0:	mov    QWORD PTR [rbx],rax
   1400022a3:	mov    r14,QWORD PTR [rip+0x83ae]        # 0x14000a658
   1400022aa:	test   r14,r14
   1400022ad:	je     0x1400022c5
   1400022af:	mov    rax,QWORD PTR [r14]
   1400022b2:	mov    rdi,QWORD PTR [rax+0x8]
   1400022b6:	mov    rcx,rdi
   1400022b9:	call   QWORD PTR [rip+0x4169]        # 0x140006428
   1400022bf:	mov    rcx,r14
   1400022c2:	call   rdi
   1400022c4:	nop
   1400022c5:	lea    rax,[rip+0x45ac]        # 0x140006878
   1400022cc:	mov    QWORD PTR [rbx],rax
   1400022cf:	mov    r14,QWORD PTR [rsi]
   1400022d2:	test   r14,r14
   1400022d5:	je     0x1400022ec
   1400022d7:	mov    rax,QWORD PTR [r14]
   1400022da:	mov    rdi,QWORD PTR [rax+0x10]
   1400022de:	mov    rcx,rdi
   1400022e1:	call   QWORD PTR [rip+0x4141]        # 0x140006428
   1400022e7:	mov    rcx,r14
   1400022ea:	call   rdi
   1400022ec:	mov    QWORD PTR [rsi],rbx
   1400022ef:	xor    ebx,ebx
   1400022f1:	mov    QWORD PTR [rsp+0x58],rbx
   1400022f6:	test   rbx,rbx
   1400022f9:	je     0x140002303
   1400022fb:	mov    rcx,rbx
   1400022fe:	call   0x140004640
   140002303:	mov    rax,rsi
   140002306:	mov    rbx,QWORD PTR [rsp+0x68]
   14000230b:	add    rsp,0x30
   14000230f:	pop    r14
   140002311:	pop    rdi
   140002312:	pop    rsi
   140002313:	ret    
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	mov    rax,rsp
   14000231f:	mov    QWORD PTR [rax+0x8],rcx
   140002323:	push   rbx
   140002324:	push   rsi
   140002325:	push   rdi
   140002326:	push   r14
   140002328:	sub    rsp,0x38
   14000232c:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140002334:	mov    rsi,rcx
   140002337:	and    DWORD PTR [rax-0x38],0x0
   14000233b:	and    QWORD PTR [rcx],0x0
   14000233f:	mov    edi,0x1
   140002344:	mov    DWORD PTR [rax-0x38],edi
   140002347:	and    QWORD PTR [rax+0x10],0x0
   14000234c:	lea    rdx,[rip+0x43e5]        # 0x140006738
   140002353:	lea    ecx,[rdi+0x27]
   140002356:	call   0x140004ac4
   14000235b:	mov    rbx,rax
   14000235e:	mov    QWORD PTR [rsp+0x68],rax
   140002363:	mov    QWORD PTR [rsp+0x70],rax
   140002368:	test   rax,rax
   14000236b:	je     0x1400023eb
   14000236d:	mov    QWORD PTR [rsp+0x78],rax
   140002372:	lea    rax,[rip+0x4567]        # 0x1400068e0
   140002379:	mov    QWORD PTR [rbx],rax
   14000237c:	mov    DWORD PTR [rbx+0xc],edi
   14000237f:	lea    rax,[rip+0x458a]        # 0x140006910
   140002386:	mov    QWORD PTR [rbx],rax
   140002389:	mov    r14,QWORD PTR [rip+0x82c8]        # 0x14000a658
   140002390:	test   r14,r14
   140002393:	je     0x1400023ab
   140002395:	mov    rax,QWORD PTR [r14]
   140002398:	mov    rdi,QWORD PTR [rax+0x8]
   14000239c:	mov    rcx,rdi
   14000239f:	call   QWORD PTR [rip+0x4083]        # 0x140006428
   1400023a5:	mov    rcx,r14
   1400023a8:	call   rdi
   1400023aa:	nop
   1400023ab:	lea    rax,[rip+0x4596]        # 0x140006948
   1400023b2:	mov    QWORD PTR [rbx],rax
   1400023b5:	and    QWORD PTR [rbx+0x10],0x0
   1400023ba:	and    QWORD PTR [rbx+0x18],0x0
   1400023bf:	and    QWORD PTR [rbx+0x20],0x0
   1400023c4:	mov    r14,QWORD PTR [rsi]
   1400023c7:	test   r14,r14
   1400023ca:	je     0x1400023e1
   1400023cc:	mov    rax,QWORD PTR [r14]
   1400023cf:	mov    rdi,QWORD PTR [rax+0x10]
   1400023d3:	mov    rcx,rdi
   1400023d6:	call   QWORD PTR [rip+0x404c]        # 0x140006428
   1400023dc:	mov    rcx,r14
   1400023df:	call   rdi
   1400023e1:	mov    QWORD PTR [rsi],rbx
   1400023e4:	xor    ebx,ebx
   1400023e6:	mov    QWORD PTR [rsp+0x68],rbx
   1400023eb:	test   rbx,rbx
   1400023ee:	je     0x1400023f8
   1400023f0:	mov    rcx,rbx
   1400023f3:	call   0x140004640
   1400023f8:	mov    rax,rsi
   1400023fb:	add    rsp,0x38
   1400023ff:	pop    r14
   140002401:	pop    rdi
   140002402:	pop    rsi
   140002403:	pop    rbx
   140002404:	ret    
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x8],rcx
   140002415:	push   rbx
   140002416:	sub    rsp,0x30
   14000241a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002423:	mov    rbx,rcx
   140002426:	mov    DWORD PTR [rcx+0xc],0xc0000001
   14000242d:	test   dl,0x1
   140002430:	je     0x140002437
   140002432:	call   0x140004640
   140002437:	mov    rax,rbx
   14000243a:	add    rsp,0x30
   14000243e:	pop    rbx
   14000243f:	ret    
   140002440:	int3   
   140002441:	int3   
   140002442:	int3   
   140002443:	int3   
   140002444:	int3   
   140002445:	int3   
   140002446:	int3   
   140002447:	int3   
   140002448:	mov    QWORD PTR [rsp+0x18],r8
   14000244d:	mov    QWORD PTR [rsp+0x20],r9
   140002452:	push   rbx
   140002453:	push   rbp
   140002454:	push   rsi
   140002455:	push   rdi
   140002456:	sub    rsp,0x28
   14000245a:	xor    ebp,ebp
   14000245c:	lea    rax,[rdx-0x1]
   140002460:	cmp    rax,0x7ffffffe
   140002466:	mov    rsi,rcx
   140002469:	mov    edi,ebp
   14000246b:	mov    ecx,0x80070057
   140002470:	cmova  edi,ecx
   140002473:	test   edi,edi
   140002475:	js     0x1400024ac
   140002477:	lea    rbx,[rdx-0x1]
   14000247b:	mov    rcx,rsi
   14000247e:	mov    rdx,rbx
   140002481:	lea    r9,[rsp+0x68]
   140002486:	mov    edi,ebp
   140002488:	call   QWORD PTR [rip+0x3ea2]        # 0x140006330
   14000248e:	test   eax,eax
   140002490:	js     0x1400024a1
   140002492:	cdqe   
   140002494:	cmp    rax,rbx
   140002497:	ja     0x1400024a1
   140002499:	jne    0x1400024b4
   14000249b:	mov    WORD PTR [rsi+rbx*2],bp
   14000249f:	jmp    0x1400024b4
   1400024a1:	mov    WORD PTR [rsi+rbx*2],bp
   1400024a5:	mov    edi,0x8007007a
   1400024aa:	jmp    0x1400024b4
   1400024ac:	test   rdx,rdx
   1400024af:	je     0x1400024b4
   1400024b1:	mov    WORD PTR [rsi],bp
   1400024b4:	mov    eax,edi
   1400024b6:	add    rsp,0x28
   1400024ba:	pop    rdi
   1400024bb:	pop    rsi
   1400024bc:	pop    rbp
   1400024bd:	pop    rbx
   1400024be:	ret    
   1400024bf:	int3   
   1400024c0:	int3   
   1400024c1:	int3   
   1400024c2:	int3   
   1400024c3:	int3   
   1400024c4:	int3   
   1400024c5:	int3   
   1400024c6:	int3   
   1400024c7:	int3   
   1400024c8:	mov    rax,rsp
   1400024cb:	mov    QWORD PTR [rax+0x10],rdx
   1400024cf:	mov    QWORD PTR [rax+0x8],rcx
   1400024d3:	push   rbp
   1400024d4:	push   rsi
   1400024d5:	push   rdi
   1400024d6:	push   r12
   1400024d8:	push   r13
   1400024da:	push   r14
   1400024dc:	push   r15
   1400024de:	mov    rbp,rsp
   1400024e1:	sub    rsp,0x50
   1400024e5:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   1400024ed:	mov    QWORD PTR [rax+0x18],rbx
   1400024f1:	mov    r13,r8
   1400024f4:	and    QWORD PTR [rbp+0x58],0x0
   1400024f9:	xor    esi,esi
   1400024fb:	mov    QWORD PTR [rbp-0x18],rsi
   1400024ff:	and    QWORD PTR [rbp-0x20],rsi
   140002503:	mov    edi,0x8007000e
   140002508:	lea    rcx,[rbp+0x48]
   14000250c:	call   0x1400012f8
   140002511:	nop
   140002512:	mov    r15,QWORD PTR [rax]
   140002515:	mov    QWORD PTR [rbp-0x10],r15
   140002519:	and    QWORD PTR [rax],rsi
   14000251c:	and    QWORD PTR [rbp-0x10],rsi
   140002520:	mov    r14,r15
   140002523:	mov    QWORD PTR [rbp-0x20],r15
   140002527:	mov    r12,QWORD PTR [rbp+0x48]
   14000252b:	test   r12,r12
   14000252e:	je     0x14000254a
   140002530:	and    QWORD PTR [rbp+0x48],rsi
   140002534:	mov    rax,QWORD PTR [r12]
   140002538:	mov    rbx,QWORD PTR [rax+0x10]
   14000253c:	mov    rcx,rbx
   14000253f:	call   QWORD PTR [rip+0x3ee3]        # 0x140006428
   140002545:	mov    rcx,r12
   140002548:	call   rbx
   14000254a:	test   r15,r15
   14000254d:	je     0x14000255f
   14000254f:	xor    r14d,r14d
   140002552:	mov    QWORD PTR [rbp-0x20],r14
   140002556:	mov    rsi,r15
   140002559:	mov    QWORD PTR [rbp-0x18],r15
   14000255d:	xor    edi,edi
   14000255f:	test   r14,r14
   140002562:	je     0x14000257e
   140002564:	and    QWORD PTR [rbp-0x20],0x0
   140002569:	mov    rax,QWORD PTR [r14]
   14000256c:	mov    rbx,QWORD PTR [rax+0x10]
   140002570:	mov    rcx,rbx
   140002573:	call   QWORD PTR [rip+0x3eaf]        # 0x140006428
   140002579:	mov    rcx,r14
   14000257c:	call   rbx
   14000257e:	test   edi,edi
   140002580:	js     0x14000267d
   140002586:	call   0x140004408
   14000258b:	cmp    eax,0x1
   14000258e:	je     0x140002678
   140002594:	cmp    eax,0x2
   140002597:	je     0x1400025e4
   140002599:	add    eax,0xfffffffd
   14000259c:	cmp    eax,0x1
   14000259f:	jbe    0x140002678
   1400025a5:	mov    rdi,QWORD PTR [rbp+0x58]
   1400025a9:	test   rdi,rdi
   1400025ac:	je     0x1400025c8
   1400025ae:	and    QWORD PTR [rbp+0x58],0x0
   1400025b3:	mov    rax,QWORD PTR [rdi]
   1400025b6:	mov    rbx,QWORD PTR [rax+0x10]
   1400025ba:	mov    rcx,rbx
   1400025bd:	call   QWORD PTR [rip+0x3e65]        # 0x140006428
   1400025c3:	mov    rcx,rdi
   1400025c6:	call   rbx
   1400025c8:	lea    rax,[rbp+0x58]
   1400025cc:	mov    QWORD PTR [rsp+0x20],rax
   1400025d1:	xor    r9d,r9d
   1400025d4:	mov    rdx,QWORD PTR [rbp+0x40]
   1400025d8:	mov    rcx,rsi
   1400025db:	call   0x140001d68
   1400025e0:	mov    edi,eax
   1400025e2:	jmp    0x140002649
   1400025e4:	call   0x140004270
   1400025e9:	mov    r14,rax
   1400025ec:	test   rax,rax
   1400025ef:	je     0x140002678
   1400025f5:	mov    rdi,QWORD PTR [rbp+0x58]
   1400025f9:	test   rdi,rdi
   1400025fc:	je     0x140002618
   1400025fe:	and    QWORD PTR [rbp+0x58],0x0
   140002603:	mov    rdx,QWORD PTR [rdi]
   140002606:	mov    rbx,QWORD PTR [rdx+0x10]
   14000260a:	mov    rcx,rbx
   14000260d:	call   QWORD PTR [rip+0x3e15]        # 0x140006428
   140002613:	mov    rcx,rdi
   140002616:	call   rbx
   140002618:	lea    rax,[rbp+0x58]
   14000261c:	mov    QWORD PTR [rsp+0x20],rax
   140002621:	mov    r9,r14
   140002624:	mov    rdx,QWORD PTR [rbp+0x40]
   140002628:	mov    rcx,rsi
   14000262b:	call   0x140001d68
   140002630:	mov    edi,eax
   140002632:	test   eax,eax
   140002634:	jns    0x140002649
   140002636:	mov    rcx,r14
   140002639:	call   QWORD PTR [rip+0x3ce9]        # 0x140006328
   14000263f:	xor    ecx,ecx
   140002641:	call   QWORD PTR [rip+0x3ce1]        # 0x140006328
   140002647:	jmp    0x14000267d
   140002649:	test   r13,r13
   14000264c:	je     0x14000267d
   14000264e:	mov    rbx,QWORD PTR [rbp+0x58]
   140002652:	test   rbx,rbx
   140002655:	je     0x140002670
   140002657:	mov    rax,QWORD PTR [rbx]
   14000265a:	mov    rdi,QWORD PTR [rax+0x8]
   14000265e:	mov    rcx,rdi
   140002661:	call   QWORD PTR [rip+0x3dc1]        # 0x140006428
   140002667:	mov    rcx,rbx
   14000266a:	call   rdi
   14000266c:	mov    rbx,QWORD PTR [rbp+0x58]
   140002670:	mov    QWORD PTR [r13+0x0],rbx
   140002674:	xor    edi,edi
   140002676:	jmp    0x14000267d
   140002678:	mov    edi,0x80004005
   14000267d:	test   rsi,rsi
   140002680:	je     0x14000269d
   140002682:	and    QWORD PTR [rbp-0x18],0x0
   140002687:	mov    rax,QWORD PTR [rsi]
   14000268a:	mov    rbx,QWORD PTR [rax+0x10]
   14000268e:	mov    rcx,rbx
   140002691:	call   QWORD PTR [rip+0x3d91]        # 0x140006428
   140002697:	mov    rcx,rsi
   14000269a:	call   rbx
   14000269c:	nop
   14000269d:	mov    rsi,QWORD PTR [rbp+0x58]
   1400026a1:	test   rsi,rsi
   1400026a4:	je     0x1400026c0
   1400026a6:	and    QWORD PTR [rbp+0x58],0x0
   1400026ab:	mov    rax,QWORD PTR [rsi]
   1400026ae:	mov    rbx,QWORD PTR [rax+0x10]
   1400026b2:	mov    rcx,rbx
   1400026b5:	call   QWORD PTR [rip+0x3d6d]        # 0x140006428
   1400026bb:	mov    rcx,rsi
   1400026be:	call   rbx
   1400026c0:	mov    eax,edi
   1400026c2:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400026ca:	add    rsp,0x50
   1400026ce:	pop    r15
   1400026d0:	pop    r14
   1400026d2:	pop    r13
   1400026d4:	pop    r12
   1400026d6:	pop    rdi
   1400026d7:	pop    rsi
   1400026d8:	pop    rbp
   1400026d9:	ret    
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	rex.W jmp QWORD PTR [rip+0x3a91]        # 0x140006178
   1400026e7:	int3   
   1400026e8:	int3   
   1400026e9:	int3   
   1400026ea:	int3   
   1400026eb:	int3   
   1400026ec:	int3   
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	mov    eax,r8d
   1400026f3:	mov    rcx,rdx
   1400026f6:	mov    edx,eax
   1400026f8:	mov    r8,r9
   1400026fb:	rex.W jmp QWORD PTR [rip+0x3946]        # 0x140006048
   140002702:	int3   
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	mov    rax,r8
   140002713:	mov    rcx,rdx
   140002716:	mov    rdx,rax
   140002719:	mov    r8,r9
   14000271c:	rex.W jmp QWORD PTR [rip+0x392d]        # 0x140006050
   140002723:	int3   
   140002724:	int3   
   140002725:	int3   
   140002726:	int3   
   140002727:	int3   
   140002728:	int3   
   140002729:	int3   
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	rex push rbx
   140002732:	sub    rsp,0x30
   140002736:	mov    rax,QWORD PTR [rsp+0x70]
   14000273b:	mov    r10,r9
   14000273e:	mov    r9d,DWORD PTR [rsp+0x60]
   140002743:	mov    r11d,r8d
   140002746:	mov    QWORD PTR [rsp+0x28],rax
   14000274b:	mov    rcx,rdx
   14000274e:	mov    rax,QWORD PTR [rsp+0x68]
   140002753:	mov    r8,r10
   140002756:	mov    edx,r11d
   140002759:	mov    QWORD PTR [rsp+0x20],rax
   14000275e:	call   QWORD PTR [rip+0x38f4]        # 0x140006058
   140002764:	add    rsp,0x30
   140002768:	pop    rbx
   140002769:	ret    
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    ecx,edx
   140002772:	mov    edx,r8d
   140002775:	rex.W jmp QWORD PTR [rip+0x3ad4]        # 0x140006250
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	int3   
   140002781:	int3   
   140002782:	int3   
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	rex push rbx
   140002792:	sub    rsp,0x30
   140002796:	mov    rax,QWORD PTR [rsp+0x68]
   14000279b:	mov    r10,r9
   14000279e:	mov    r9d,DWORD PTR [rsp+0x60]
   1400027a3:	mov    r11d,r8d
   1400027a6:	mov    rcx,rdx
   1400027a9:	mov    QWORD PTR [rsp+0x60],rax
   1400027ae:	mov    r8,r10
   1400027b1:	mov    edx,r11d
   1400027b4:	add    rsp,0x30
   1400027b8:	pop    rbx
   1400027b9:	rex.W jmp QWORD PTR [rip+0x38a0]        # 0x140006060
   1400027c0:	int3   
   1400027c1:	int3   
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	rex push rbx
   1400027d2:	sub    rsp,0x30
   1400027d6:	mov    rax,QWORD PTR [rsp+0x68]
   1400027db:	mov    r10d,r9d
   1400027de:	mov    r9,QWORD PTR [rsp+0x60]
   1400027e3:	mov    r11,r8
   1400027e6:	mov    rcx,rdx
   1400027e9:	mov    QWORD PTR [rsp+0x60],rax
   1400027ee:	mov    r8d,r10d
   1400027f1:	mov    rdx,r11
   1400027f4:	add    rsp,0x30
   1400027f8:	pop    rbx
   1400027f9:	rex.W jmp QWORD PTR [rip+0x3c18]        # 0x140006418
   140002800:	int3   
   140002801:	int3   
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    rcx,rdx
   140002813:	mov    rdx,r8
   140002816:	rex.W jmp QWORD PTR [rip+0x3bf3]        # 0x140006410
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	int3   
   140002821:	int3   
   140002822:	int3   
   140002823:	int3   
   140002824:	int3   
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    eax,r8d
   140002833:	mov    ecx,edx
   140002835:	mov    edx,eax
   140002837:	mov    r8d,r9d
   14000283a:	rex.W jmp QWORD PTR [rip+0x38bf]        # 0x140006100
   140002841:	int3   
   140002842:	int3   
   140002843:	int3   
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    rcx,rdx
   140002853:	mov    edx,r8d
   140002856:	rex.W jmp QWORD PTR [rip+0x38ab]        # 0x140006108
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	int3   
   140002861:	int3   
   140002862:	int3   
   140002863:	int3   
   140002864:	int3   
   140002865:	int3   
   140002866:	int3   
   140002867:	int3   
   140002868:	int3   
   140002869:	int3   
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	mov    eax,r9d
   140002873:	mov    r10,r8
   140002876:	mov    r9d,DWORD PTR [rsp+0x28]
   14000287b:	mov    ecx,edx
   14000287d:	mov    r8d,eax
   140002880:	mov    rdx,r10
   140002883:	rex.W jmp QWORD PTR [rip+0x3886]        # 0x140006110
   14000288a:	int3   
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	mov    rcx,rdx
   140002893:	mov    edx,r8d
   140002896:	rex.W jmp QWORD PTR [rip+0x3b6b]        # 0x140006408
   14000289d:	int3   
   14000289e:	int3   
   14000289f:	int3   
   1400028a0:	int3   
   1400028a1:	int3   
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	int3   
   1400028a5:	int3   
   1400028a6:	int3   
   1400028a7:	int3   
   1400028a8:	int3   
   1400028a9:	int3   
   1400028aa:	int3   
   1400028ab:	int3   
   1400028ac:	int3   
   1400028ad:	int3   
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	mov    rcx,rdx
   1400028b3:	mov    rdx,r8
   1400028b6:	rex.W jmp QWORD PTR [rip+0x38c3]        # 0x140006180
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    rax,r8
   1400028d3:	mov    rcx,rdx
   1400028d6:	mov    rdx,rax
   1400028d9:	mov    r8,r9
   1400028dc:	rex.W jmp QWORD PTR [rip+0x37bd]        # 0x1400060a0
   1400028e3:	int3   
   1400028e4:	int3   
   1400028e5:	int3   
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	int3   
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	int3   
   1400028ed:	int3   
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	mov    rcx,rdx
   1400028f3:	lea    rdx,[rip+0x45de]        # 0x140006ed8
   1400028fa:	rex.W jmp QWORD PTR [rip+0x3977]        # 0x140006278
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    eax,r8d
   140002913:	mov    rcx,rdx
   140002916:	mov    edx,eax
   140002918:	mov    r8,r9
   14000291b:	rex.W jmp QWORD PTR [rip+0x3966]        # 0x140006288
   140002922:	int3   
   140002923:	int3   
   140002924:	int3   
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	int3   
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	mov    rcx,rdx
   140002933:	rex.W jmp QWORD PTR [rip+0x3956]        # 0x140006290
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	mov    rax,rsp
   140002943:	push   rbp
   140002944:	push   rsi
   140002945:	push   rdi
   140002946:	push   r14
   140002948:	push   r15
   14000294a:	sub    rsp,0x30
   14000294e:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140002956:	mov    QWORD PTR [rax+0x20],rbx
   14000295a:	mov    r14,rcx
   14000295d:	xor    edi,edi
   14000295f:	mov    QWORD PTR [rax+0x10],rdi
   140002963:	mov    ebp,0x80070057
   140002968:	test   rcx,rcx
   14000296b:	je     0x1400029dc
   14000296d:	mov    ebp,0x8007000e
   140002972:	lea    rcx,[rax+0x18]
   140002976:	call   0x140002d38
   14000297b:	nop
   14000297c:	xor    esi,esi
   14000297e:	mov    QWORD PTR [rsp+0x60],rsi
   140002983:	lea    rcx,[rsp+0x60]
   140002988:	cmp    rcx,rax
   14000298b:	je     0x140002998
   14000298d:	mov    rsi,QWORD PTR [rax]
   140002990:	mov    QWORD PTR [rsp+0x60],rsi
   140002995:	and    QWORD PTR [rax],rdi
   140002998:	and    QWORD PTR [rsp+0x60],0x0
   14000299e:	mov    rdi,rsi
   1400029a1:	mov    QWORD PTR [rsp+0x68],rsi
   1400029a6:	mov    r15,QWORD PTR [rsp+0x70]
   1400029ab:	test   r15,r15
   1400029ae:	je     0x1400029cb
   1400029b0:	and    QWORD PTR [rsp+0x70],0x0
   1400029b6:	mov    rax,QWORD PTR [r15]
   1400029b9:	mov    rbx,QWORD PTR [rax+0x10]
   1400029bd:	mov    rcx,rbx
   1400029c0:	call   QWORD PTR [rip+0x3a62]        # 0x140006428
   1400029c6:	mov    rcx,r15
   1400029c9:	call   rbx
   1400029cb:	test   rsi,rsi
   1400029ce:	je     0x1400029dc
   1400029d0:	xor    edi,edi
   1400029d2:	mov    QWORD PTR [rsp+0x68],rdi
   1400029d7:	mov    QWORD PTR [r14],rsi
   1400029da:	xor    ebp,ebp
   1400029dc:	test   rdi,rdi
   1400029df:	je     0x1400029fc
   1400029e1:	and    QWORD PTR [rsp+0x68],0x0
   1400029e7:	mov    rdx,QWORD PTR [rdi]
   1400029ea:	mov    rbx,QWORD PTR [rdx+0x10]
   1400029ee:	mov    rcx,rbx
   1400029f1:	call   QWORD PTR [rip+0x3a31]        # 0x140006428
   1400029f7:	mov    rcx,rdi
   1400029fa:	call   rbx
   1400029fc:	mov    eax,ebp
   1400029fe:	mov    rbx,QWORD PTR [rsp+0x78]
   140002a03:	add    rsp,0x30
   140002a07:	pop    r15
   140002a09:	pop    r14
   140002a0b:	pop    rdi
   140002a0c:	pop    rsi
   140002a0d:	pop    rbp
   140002a0e:	ret    
   140002a0f:	int3   
   140002a10:	int3   
   140002a11:	int3   
   140002a12:	int3   
   140002a13:	int3   
   140002a14:	int3   
   140002a15:	int3   
   140002a16:	int3   
   140002a17:	int3   
   140002a18:	int3   
   140002a19:	int3   
   140002a1a:	int3   
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	mov    rax,r8
   140002a23:	mov    ecx,edx
   140002a25:	mov    rdx,rax
   140002a28:	mov    r8,r9
   140002a2b:	rex.W jmp QWORD PTR [rip+0x377e]        # 0x1400061b0
   140002a32:	int3   
   140002a33:	int3   
   140002a34:	int3   
   140002a35:	int3   
   140002a36:	int3   
   140002a37:	int3   
   140002a38:	int3   
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	rex push rbx
   140002a42:	sub    rsp,0x40
   140002a46:	mov    rax,QWORD PTR [rsp+0x88]
   140002a4e:	mov    r10,r9
   140002a51:	mov    r9,QWORD PTR [rsp+0x70]
   140002a56:	mov    r11,r8
   140002a59:	mov    QWORD PTR [rsp+0x30],rax
   140002a5e:	mov    rcx,rdx
   140002a61:	mov    rax,QWORD PTR [rsp+0x80]
   140002a69:	mov    r8,r10
   140002a6c:	mov    QWORD PTR [rsp+0x28],rax
   140002a71:	mov    rdx,r11
   140002a74:	mov    rax,QWORD PTR [rsp+0x78]
   140002a79:	mov    QWORD PTR [rsp+0x20],rax
   140002a7e:	call   QWORD PTR [rip+0x35e4]        # 0x140006068
   140002a84:	add    rsp,0x40
   140002a88:	pop    rbx
   140002a89:	ret    
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	mov    rcx,rdx
   140002a93:	mov    rdx,r8
   140002a96:	rex.W jmp QWORD PTR [rip+0x35d3]        # 0x140006070
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	int3   
   140002aa1:	int3   
   140002aa2:	int3   
   140002aa3:	int3   
   140002aa4:	int3   
   140002aa5:	int3   
   140002aa6:	int3   
   140002aa7:	int3   
   140002aa8:	int3   
   140002aa9:	int3   
   140002aaa:	int3   
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	mov    rax,r9
   140002ab3:	mov    r10,r8
   140002ab6:	mov    r9,QWORD PTR [rsp+0x28]
   140002abb:	mov    ecx,edx
   140002abd:	mov    r8,rax
   140002ac0:	mov    rdx,r10
   140002ac3:	rex.W jmp QWORD PTR [rip+0x35ae]        # 0x140006078
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	mov    rax,r8
   140002ad3:	mov    rcx,rdx
   140002ad6:	mov    rdx,rax
   140002ad9:	mov    r8,r9
   140002adc:	rex.W jmp QWORD PTR [rip+0x359d]        # 0x140006080
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	rex.W jmp QWORD PTR [rip+0x36f9]        # 0x1400061f0
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    rax,r9
   140002b03:	mov    r10,r8
   140002b06:	mov    r9,QWORD PTR [rsp+0x28]
   140002b0b:	mov    rcx,rdx
   140002b0e:	mov    r8,rax
   140002b11:	mov    rdx,r10
   140002b14:	rex.W jmp QWORD PTR [rip+0x36ad]        # 0x1400061c8
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	int3   
   140002b21:	int3   
   140002b22:	int3   
   140002b23:	int3   
   140002b24:	int3   
   140002b25:	int3   
   140002b26:	int3   
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	mov    rcx,rdx
   140002b33:	mov    rdx,r8
   140002b36:	rex.W jmp QWORD PTR [rip+0x3693]        # 0x1400061d0
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	int3   
   140002b41:	int3   
   140002b42:	int3   
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	mov    rcx,rdx
   140002b53:	mov    edx,r8d
   140002b56:	rex.W jmp QWORD PTR [rip+0x367b]        # 0x1400061d8
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	int3   
   140002b61:	int3   
   140002b62:	int3   
   140002b63:	int3   
   140002b64:	int3   
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	mov    rcx,rdx
   140002b73:	rex.W jmp QWORD PTR [rip+0x3666]        # 0x1400061e0
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    rcx,rdx
   140002b83:	rex.W jmp QWORD PTR [rip+0x365e]        # 0x1400061e8
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    rcx,rdx
   140002b93:	rex.W jmp QWORD PTR [rip+0x36a6]        # 0x140006240
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    rcx,rdx
   140002ba3:	rex.W jmp QWORD PTR [rip+0x364e]        # 0x1400061f8
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	mov    eax,r8d
   140002bb3:	mov    rcx,rdx
   140002bb6:	mov    edx,eax
   140002bb8:	mov    r8d,r9d
   140002bbb:	rex.W jmp QWORD PTR [rip+0x3816]        # 0x1400063d8
   140002bc2:	int3   
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	mov    eax,r8d
   140002bd3:	mov    rcx,rdx
   140002bd6:	mov    edx,eax
   140002bd8:	mov    r8d,r9d
   140002bdb:	rex.W jmp QWORD PTR [rip+0x37ee]        # 0x1400063d0
   140002be2:	int3   
   140002be3:	int3   
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	mov    rcx,rdx
   140002bf3:	rex.W jmp QWORD PTR [rip+0x37ce]        # 0x1400063c8
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    eax,r8d
   140002c03:	mov    rcx,rdx
   140002c06:	mov    edx,eax
   140002c08:	mov    r8,r9
   140002c0b:	rex.W jmp QWORD PTR [rip+0x37ae]        # 0x1400063c0
   140002c12:	int3   
   140002c13:	int3   
   140002c14:	int3   
   140002c15:	int3   
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    QWORD PTR [rsp+0x8],rbx
   140002c25:	mov    QWORD PTR [rsp+0x10],rsi
   140002c2a:	push   rdi
   140002c2b:	sub    rsp,0x20
   140002c2f:	xor    edi,edi
   140002c31:	mov    rsi,rcx
   140002c34:	mov    QWORD PTR [r8],rdi
   140002c37:	cmp    DWORD PTR [rdx],edi
   140002c39:	jne    0x140002c5c
   140002c3b:	mov    eax,DWORD PTR [rip+0x4193]        # 0x140006dd4
   140002c41:	cmp    DWORD PTR [rdx+0x4],eax
   140002c44:	jne    0x140002c5c
   140002c46:	mov    eax,DWORD PTR [rip+0x418c]        # 0x140006dd8
   140002c4c:	cmp    DWORD PTR [rdx+0x8],eax
   140002c4f:	jne    0x140002c5c
   140002c51:	mov    eax,DWORD PTR [rip+0x4185]        # 0x140006ddc
   140002c57:	cmp    DWORD PTR [rdx+0xc],eax
   140002c5a:	je     0x140002c85
   140002c5c:	cmp    DWORD PTR [rdx],0xa3739b88
   140002c62:	jne    0x140002c9f
   140002c64:	mov    eax,DWORD PTR [rip+0x4282]        # 0x140006eec
   140002c6a:	cmp    DWORD PTR [rdx+0x4],eax
   140002c6d:	jne    0x140002c9f
   140002c6f:	mov    eax,DWORD PTR [rip+0x427b]        # 0x140006ef0
   140002c75:	cmp    DWORD PTR [rdx+0x8],eax
   140002c78:	jne    0x140002c9f
   140002c7a:	mov    eax,DWORD PTR [rip+0x4274]        # 0x140006ef4
   140002c80:	cmp    DWORD PTR [rdx+0xc],eax
   140002c83:	jne    0x140002c9f
   140002c85:	mov    QWORD PTR [r8],rcx
   140002c88:	mov    rax,QWORD PTR [rcx]
   140002c8b:	mov    rbx,QWORD PTR [rax+0x8]
   140002c8f:	mov    rcx,rbx
   140002c92:	call   QWORD PTR [rip+0x3790]        # 0x140006428
   140002c98:	mov    rcx,rsi
   140002c9b:	call   rbx
   140002c9d:	jmp    0x140002ca4
   140002c9f:	mov    edi,0x80004002
   140002ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ca9:	mov    eax,edi
   140002cab:	mov    rsi,QWORD PTR [rsp+0x38]
   140002cb0:	add    rsp,0x20
   140002cb4:	pop    rdi
   140002cb5:	ret    
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140002cca:	push   rdi
   140002ccb:	sub    rsp,0x20
   140002ccf:	mov    rsi,rcx
   140002cd2:	or     edi,0xffffffff
   140002cd5:	lock xadd DWORD PTR [rcx+0xc],edi
   140002cda:	sub    edi,0x1
   140002cdd:	jne    0x140002d20
   140002cdf:	test   rcx,rcx
   140002ce2:	je     0x140002cff
   140002ce4:	mov    rax,QWORD PTR [rcx]
   140002ce7:	mov    rbx,QWORD PTR [rax+0x108]
   140002cee:	mov    rcx,rbx
   140002cf1:	call   QWORD PTR [rip+0x3731]        # 0x140006428
   140002cf7:	lea    edx,[rdi+0x1]
   140002cfa:	mov    rcx,rsi
   140002cfd:	call   rbx
   140002cff:	mov    rsi,QWORD PTR [rip+0x7952]        # 0x14000a658
   140002d06:	test   rsi,rsi
   140002d09:	je     0x140002d20
   140002d0b:	mov    rdx,QWORD PTR [rsi]
   140002d0e:	mov    rbx,QWORD PTR [rdx+0x10]
   140002d12:	mov    rcx,rbx
   140002d15:	call   QWORD PTR [rip+0x370d]        # 0x140006428
   140002d1b:	mov    rcx,rsi
   140002d1e:	call   rbx
   140002d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d25:	mov    eax,edi
   140002d27:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d2c:	add    rsp,0x20
   140002d30:	pop    rdi
   140002d31:	ret    
   140002d32:	int3   
   140002d33:	int3   
   140002d34:	int3   
   140002d35:	int3   
   140002d36:	int3   
   140002d37:	int3   
   140002d38:	mov    rax,rsp
   140002d3b:	mov    QWORD PTR [rax+0x8],rcx
   140002d3f:	push   rsi
   140002d40:	push   rdi
   140002d41:	push   r14
   140002d43:	sub    rsp,0x30
   140002d47:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140002d4f:	mov    QWORD PTR [rax+0x20],rbx
   140002d53:	mov    rsi,rcx
   140002d56:	and    DWORD PTR [rax-0x28],0x0
   140002d5a:	and    QWORD PTR [rcx],0x0
   140002d5e:	mov    edi,0x1
   140002d63:	mov    DWORD PTR [rax-0x28],edi
   140002d66:	and    QWORD PTR [rax+0x10],0x0
   140002d6b:	lea    rdx,[rip+0x39c6]        # 0x140006738
   140002d72:	lea    ecx,[rdi+0xf]
   140002d75:	call   0x140004ac4
   140002d7a:	mov    rbx,rax
   140002d7d:	mov    QWORD PTR [rsp+0x58],rax
   140002d82:	test   rax,rax
   140002d85:	je     0x140002df6
   140002d87:	mov    QWORD PTR [rsp+0x60],rax
   140002d8c:	lea    rax,[rip+0x3bed]        # 0x140006980
   140002d93:	mov    QWORD PTR [rbx],rax
   140002d96:	mov    DWORD PTR [rbx+0xc],edi
   140002d99:	lea    rax,[rip+0x3ce8]        # 0x140006a88
   140002da0:	mov    QWORD PTR [rbx],rax
   140002da3:	mov    r14,QWORD PTR [rip+0x78ae]        # 0x14000a658
   140002daa:	test   r14,r14
   140002dad:	je     0x140002dc5
   140002daf:	mov    rax,QWORD PTR [r14]
   140002db2:	mov    rdi,QWORD PTR [rax+0x8]
   140002db6:	mov    rcx,rdi
   140002db9:	call   QWORD PTR [rip+0x3669]        # 0x140006428
   140002dbf:	mov    rcx,r14
   140002dc2:	call   rdi
   140002dc4:	nop
   140002dc5:	lea    rax,[rip+0x3dcc]        # 0x140006b98
   140002dcc:	mov    QWORD PTR [rbx],rax
   140002dcf:	mov    r14,QWORD PTR [rsi]
   140002dd2:	test   r14,r14
   140002dd5:	je     0x140002dec
   140002dd7:	mov    rax,QWORD PTR [r14]
   140002dda:	mov    rdi,QWORD PTR [rax+0x10]
   140002dde:	mov    rcx,rdi
   140002de1:	call   QWORD PTR [rip+0x3641]        # 0x140006428
   140002de7:	mov    rcx,r14
   140002dea:	call   rdi
   140002dec:	mov    QWORD PTR [rsi],rbx
   140002def:	xor    ebx,ebx
   140002df1:	mov    QWORD PTR [rsp+0x58],rbx
   140002df6:	test   rbx,rbx
   140002df9:	je     0x140002e03
   140002dfb:	mov    rcx,rbx
   140002dfe:	call   0x140004640
   140002e03:	mov    rax,rsi
   140002e06:	mov    rbx,QWORD PTR [rsp+0x68]
   140002e0b:	add    rsp,0x30
   140002e0f:	pop    r14
   140002e11:	pop    rdi
   140002e12:	pop    rsi
   140002e13:	ret    
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	mov    QWORD PTR [rsp+0x8],rbx
   140002e21:	push   rbp
   140002e22:	lea    rbp,[rsp-0x200]
   140002e2a:	sub    rsp,0x300
   140002e31:	mov    rax,QWORD PTR [rip+0x71e0]        # 0x14000a018
   140002e38:	xor    rax,rsp
   140002e3b:	mov    QWORD PTR [rbp+0x1f0],rax
   140002e42:	xor    ebx,ebx
   140002e44:	lea    rcx,[rbp-0x1e]
   140002e48:	xor    edx,edx
   140002e4a:	mov    WORD PTR [rbp-0x20],bx
   140002e4e:	mov    r8d,0x206
   140002e54:	call   0x14000527e
   140002e59:	lea    r9,[rip+0x40a0]        # 0x140006f00
   140002e60:	mov    edx,0x104
   140002e65:	lea    r8,[rip+0x408c]        # 0x140006ef8
   140002e6c:	lea    rcx,[rbp-0x20]
   140002e70:	call   0x140002448
   140002e75:	test   eax,eax
   140002e77:	js     0x140002f15
   140002e7d:	xor    edx,edx
   140002e7f:	lea    r8d,[rbx+0x60]
   140002e83:	lea    rcx,[rsp+0x78]
   140002e88:	call   0x14000527e
   140002e8d:	xor    eax,eax
   140002e8f:	mov    DWORD PTR [rsp+0x70],0x68
   140002e97:	mov    QWORD PTR [rsp+0x58],rax
   140002e9c:	lea    rdx,[rbp-0x20]
   140002ea0:	mov    QWORD PTR [rsp+0x60],rax
   140002ea5:	xor    r9d,r9d
   140002ea8:	lea    rax,[rsp+0x50]
   140002ead:	mov    WORD PTR [rbp-0x50],bx
   140002eb1:	mov    QWORD PTR [rsp+0x48],rax
   140002eb6:	xor    r8d,r8d
   140002eb9:	lea    rax,[rsp+0x70]
   140002ebe:	mov    QWORD PTR [rsp+0x50],rbx
   140002ec3:	mov    QWORD PTR [rsp+0x40],rax
   140002ec8:	xor    ecx,ecx
   140002eca:	mov    QWORD PTR [rsp+0x38],rbx
   140002ecf:	mov    QWORD PTR [rsp+0x30],rbx
   140002ed4:	mov    DWORD PTR [rsp+0x28],ebx
   140002ed8:	mov    DWORD PTR [rsp+0x20],ebx
   140002edc:	call   QWORD PTR [rip+0x31c6]        # 0x1400060a8
   140002ee2:	test   eax,eax
   140002ee4:	jne    0x140002efd
   140002ee6:	call   QWORD PTR [rip+0x31c4]        # 0x1400060b0
   140002eec:	mov    ecx,eax
   140002eee:	movzx  eax,ax
   140002ef1:	or     eax,0x80070000
   140002ef6:	test   ecx,ecx
   140002ef8:	cmovle eax,ecx
   140002efb:	jmp    0x140002f15
   140002efd:	mov    rcx,QWORD PTR [rsp+0x50]
   140002f02:	call   QWORD PTR [rip+0x31b0]        # 0x1400060b8
   140002f08:	mov    rcx,QWORD PTR [rsp+0x58]
   140002f0d:	call   QWORD PTR [rip+0x31a5]        # 0x1400060b8
   140002f13:	xor    eax,eax
   140002f15:	mov    rcx,QWORD PTR [rbp+0x1f0]
   140002f1c:	xor    rcx,rsp
   140002f1f:	call   0x140004aa0
   140002f24:	mov    rbx,QWORD PTR [rsp+0x310]
   140002f2c:	add    rsp,0x300
   140002f33:	pop    rbp
   140002f34:	ret    
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    QWORD PTR [rsp+0x8],rbx
   140002f45:	mov    QWORD PTR [rsp+0x10],rbp
   140002f4a:	mov    QWORD PTR [rsp+0x18],rsi
   140002f4f:	push   rdi
   140002f50:	sub    rsp,0x20
   140002f54:	mov    eax,edx
   140002f56:	mov    rbx,r9
   140002f59:	mov    rdi,r8
   140002f5c:	mov    esi,edx
   140002f5e:	mov    rbp,rcx
   140002f61:	sub    eax,0x1
   140002f64:	je     0x140002fad
   140002f66:	sub    eax,0x1
   140002f69:	je     0x140002f98
   140002f6b:	cmp    eax,0x2af
   140002f70:	jne    0x140002f85
   140002f72:	cmp    r8,0x8
   140002f76:	jne    0x140002f85
   140002f78:	cmp    DWORD PTR [rip+0x76fa],ebx        # 0x14000a678
   140002f7e:	jne    0x140002f85
   140002f80:	call   0x140002e1c
   140002f85:	mov    r9,rbx
   140002f88:	mov    r8,rdi
   140002f8b:	mov    edx,esi
   140002f8d:	mov    rcx,rbp
   140002f90:	call   QWORD PTR [rip+0x3272]        # 0x140006208
   140002f96:	jmp    0x140002fb2
   140002f98:	mov    rcx,QWORD PTR [rip+0x76c1]        # 0x14000a660
   140002f9f:	call   QWORD PTR [rip+0x311b]        # 0x1400060c0
   140002fa5:	xor    ecx,ecx
   140002fa7:	call   QWORD PTR [rip+0x3253]        # 0x140006200
   140002fad:	mov    eax,0x1
   140002fb2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fb7:	mov    rbp,QWORD PTR [rsp+0x38]
   140002fbc:	mov    rsi,QWORD PTR [rsp+0x40]
   140002fc1:	add    rsp,0x20
   140002fc5:	pop    rdi
   140002fc6:	ret    
   140002fc7:	int3   
   140002fc8:	int3   
   140002fc9:	int3   
   140002fca:	int3   
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	mov    rax,rsp
   140002fd3:	mov    QWORD PTR [rax+0x8],rbx
   140002fd7:	mov    QWORD PTR [rax+0x10],rbp
   140002fdb:	push   rdi
   140002fdc:	sub    rsp,0xe0
   140002fe3:	xor    ebx,ebx
   140002fe5:	mov    rdi,rcx
   140002fe8:	cmp    QWORD PTR [rip+0x7681],rbx        # 0x14000a670
   140002fef:	jne    0x1400030fa
   140002ff5:	mov    ebx,0x50
   140002ffa:	lea    rcx,[rax-0x58]
   140002ffe:	mov    r8d,ebx
   140003001:	xor    edx,edx
   140003003:	call   0x14000527e
   140003008:	mov    DWORD PTR [rsp+0x90],ebx
   14000300f:	lea    rbp,[rip+0xffffffffffffff2a]        # 0x140002f40
   140003016:	lea    rbx,[rip+0x3f33]        # 0x140006f50
   14000301d:	mov    QWORD PTR [rsp+0x98],rbp
   140003025:	lea    rcx,[rsp+0x90]
   14000302d:	mov    QWORD PTR [rsp+0xd0],rbx
   140003035:	mov    QWORD PTR [rsp+0xa8],rdi
   14000303d:	call   QWORD PTR [rip+0x31cd]        # 0x140006210
   140003043:	and    QWORD PTR [rsp+0x58],0x0
   140003049:	xor    r9d,r9d
   14000304c:	mov    QWORD PTR [rsp+0x50],rdi
   140003051:	xor    r8d,r8d
   140003054:	and    QWORD PTR [rsp+0x48],0x0
   14000305a:	mov    rdx,rbx
   14000305d:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffd
   140003066:	xor    ecx,ecx
   140003068:	and    DWORD PTR [rsp+0x38],0x0
   14000306d:	and    DWORD PTR [rsp+0x30],0x0
   140003072:	and    DWORD PTR [rsp+0x28],0x0
   140003077:	and    DWORD PTR [rsp+0x20],0x0
   14000307c:	call   QWORD PTR [rip+0x319e]        # 0x140006220
   140003082:	mov    QWORD PTR [rip+0x75e7],rax        # 0x14000a670
   140003089:	test   rax,rax
   14000308c:	je     0x1400030f5
   14000308e:	mov    r8,rbp
   140003091:	mov    edx,0xfffffffc
   140003096:	mov    rcx,rax
   140003099:	call   QWORD PTR [rip+0x3191]        # 0x140006230
   14000309f:	mov    rcx,QWORD PTR [rip+0x75ca]        # 0x14000a670
   1400030a6:	mov    edx,0x1
   1400030ab:	call   QWORD PTR [rip+0x31b7]        # 0x140006268
   1400030b1:	neg    eax
   1400030b3:	sbb    ebx,ebx
   1400030b5:	not    ebx
   1400030b7:	and    ebx,0x80004005
   1400030bd:	jl     0x1400030fa
   1400030bf:	jmp    0x1400030d7
   1400030c1:	lea    rcx,[rsp+0x60]
   1400030c6:	call   QWORD PTR [rip+0x314c]        # 0x140006218
   1400030cc:	lea    rcx,[rsp+0x60]
   1400030d1:	call   QWORD PTR [rip+0x30e9]        # 0x1400061c0
   1400030d7:	mov    rdx,QWORD PTR [rip+0x7592]        # 0x14000a670
   1400030de:	lea    rcx,[rsp+0x60]
   1400030e3:	xor    r9d,r9d
   1400030e6:	xor    r8d,r8d
   1400030e9:	call   QWORD PTR [rip+0x3149]        # 0x140006238
   1400030ef:	test   eax,eax
   1400030f1:	jne    0x1400030c1
   1400030f3:	jmp    0x1400030fa
   1400030f5:	mov    ebx,0x80004005
   1400030fa:	lea    r11,[rsp+0xe0]
   140003102:	mov    eax,ebx
   140003104:	mov    rbx,QWORD PTR [r11+0x10]
   140003108:	mov    rbp,QWORD PTR [r11+0x18]
   14000310c:	mov    rsp,r11
   14000310f:	pop    rdi
   140003110:	ret    
   140003111:	int3   
   140003112:	int3   
   140003113:	int3   
   140003114:	int3   
   140003115:	int3   
   140003116:	int3   
   140003117:	int3   
   140003118:	mov    QWORD PTR [rsp+0x8],rcx
   14000311d:	push   rbp
   14000311e:	push   rbx
   14000311f:	push   rsi
   140003120:	push   rdi
   140003121:	push   r12
   140003123:	push   r14
   140003125:	mov    rbp,rsp
   140003128:	sub    rsp,0x48
   14000312c:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140003134:	xor    edi,edi
   140003136:	mov    r12d,0x80004005
   14000313c:	cmp    QWORD PTR [rip+0x751d],rdi        # 0x14000a660
   140003143:	jne    0x140003164
   140003145:	xor    r9d,r9d
   140003148:	xor    r8d,r8d
   14000314b:	lea    edx,[rdi+0x1]
   14000314e:	xor    ecx,ecx
   140003150:	call   QWORD PTR [rip+0x2f72]        # 0x1400060c8
   140003156:	mov    QWORD PTR [rip+0x7503],rax        # 0x14000a660
   14000315d:	test   rax,rax
   140003160:	cmove  edi,r12d
   140003164:	cmp    QWORD PTR [rip+0x7504],0x0        # 0x14000a670
   14000316c:	jne    0x1400031f6
   140003172:	test   edi,edi
   140003174:	js     0x140003240
   14000317a:	and    QWORD PTR [rbp+0x50],0x0
   14000317f:	lea    rcx,[rbp+0x48]
   140003183:	call   0x1400034e4
   140003188:	nop
   140003189:	xor    esi,esi
   14000318b:	mov    QWORD PTR [rbp+0x40],rsi
   14000318f:	lea    rcx,[rbp+0x40]
   140003193:	cmp    rcx,rax
   140003196:	je     0x1400031a3
   140003198:	mov    rsi,QWORD PTR [rax]
   14000319b:	mov    QWORD PTR [rbp+0x40],rsi
   14000319f:	and    QWORD PTR [rax],0x0
   1400031a3:	and    QWORD PTR [rbp+0x40],0x0
   1400031a8:	mov    QWORD PTR [rbp+0x50],rsi
   1400031ac:	mov    r14,QWORD PTR [rbp+0x48]
   1400031b0:	test   r14,r14
   1400031b3:	je     0x1400031cf
   1400031b5:	and    QWORD PTR [rbp+0x48],0x0
   1400031ba:	mov    rax,QWORD PTR [r14]
   1400031bd:	mov    rbx,QWORD PTR [rax+0x10]
   1400031c1:	mov    rcx,rbx
   1400031c4:	call   QWORD PTR [rip+0x325e]        # 0x140006428
   1400031ca:	mov    rcx,r14
   1400031cd:	call   rbx
   1400031cf:	mov    eax,0x8007000e
   1400031d4:	test   rsi,rsi
   1400031d7:	cmove  edi,eax
   1400031da:	je     0x1400031f6
   1400031dc:	and    QWORD PTR [rbp+0x50],0x0
   1400031e1:	mov    rax,QWORD PTR [rsi]
   1400031e4:	mov    rbx,QWORD PTR [rax+0x10]
   1400031e8:	mov    rcx,rbx
   1400031eb:	call   QWORD PTR [rip+0x3237]        # 0x140006428
   1400031f1:	mov    rcx,rsi
   1400031f4:	call   rbx
   1400031f6:	test   edi,edi
   1400031f8:	js     0x140003240
   1400031fa:	call   QWORD PTR [rip+0x2ed8]        # 0x1400060d8
   140003200:	mov    ecx,eax
   140003202:	lea    rdx,[rip+0x746f]        # 0x14000a678
   140003209:	call   QWORD PTR [rip+0x2ec1]        # 0x1400060d0
   14000320f:	and    QWORD PTR [rsp+0x28],0x0
   140003215:	and    DWORD PTR [rsp+0x20],0x0
   14000321a:	lea    r9,[rbp+0x38]
   14000321e:	lea    r8,[rip+0xfffffffffffffdab]        # 0x140002fd0
   140003225:	xor    edx,edx
   140003227:	xor    ecx,ecx
   140003229:	call   QWORD PTR [rip+0x2eb1]        # 0x1400060e0
   14000322f:	mov    QWORD PTR [rip+0x7432],rax        # 0x14000a668
   140003236:	neg    rax
   140003239:	sbb    edi,edi
   14000323b:	not    edi
   14000323d:	and    edi,r12d
   140003240:	call   0x140002e1c
   140003245:	mov    eax,edi
   140003247:	add    rsp,0x48
   14000324b:	pop    r14
   14000324d:	pop    r12
   14000324f:	pop    rdi
   140003250:	pop    rsi
   140003251:	pop    rbx
   140003252:	pop    rbp
   140003253:	ret    
   140003254:	int3   
   140003255:	int3   
   140003256:	int3   
   140003257:	int3   
   140003258:	int3   
   140003259:	int3   
   14000325a:	int3   
   14000325b:	int3   
   14000325c:	int3   
   14000325d:	int3   
   14000325e:	int3   
   14000325f:	int3   
   140003260:	mov    QWORD PTR [rsp+0x8],rbx
   140003265:	mov    QWORD PTR [rsp+0x10],rsi
   14000326a:	push   rdi
   14000326b:	sub    rsp,0x20
   14000326f:	xor    edi,edi
   140003271:	mov    rsi,rcx
   140003274:	mov    QWORD PTR [r8],rdi
   140003277:	cmp    DWORD PTR [rdx],edi
   140003279:	jne    0x1400032b9
   14000327b:	mov    eax,DWORD PTR [rip+0x3b53]        # 0x140006dd4
   140003281:	cmp    DWORD PTR [rdx+0x4],eax
   140003284:	jne    0x1400032b9
   140003286:	mov    eax,DWORD PTR [rip+0x3b4c]        # 0x140006dd8
   14000328c:	cmp    DWORD PTR [rdx+0x8],eax
   14000328f:	jne    0x1400032b9
   140003291:	mov    eax,DWORD PTR [rip+0x3b45]        # 0x140006ddc
   140003297:	cmp    DWORD PTR [rdx+0xc],eax
   14000329a:	jne    0x1400032b9
   14000329c:	mov    QWORD PTR [r8],rcx
   14000329f:	mov    rax,QWORD PTR [rcx]
   1400032a2:	mov    rbx,QWORD PTR [rax+0x8]
   1400032a6:	mov    rcx,rbx
   1400032a9:	call   QWORD PTR [rip+0x3179]        # 0x140006428
   1400032af:	mov    rcx,rsi
   1400032b2:	call   rbx
   1400032b4:	jmp    0x140003339
   1400032b9:	cmp    DWORD PTR [rdx],0x94ea2b94
   1400032bf:	jne    0x1400032e9
   1400032c1:	mov    eax,DWORD PTR [rip+0x3cb5]        # 0x140006f7c
   1400032c7:	cmp    DWORD PTR [rdx+0x4],eax
   1400032ca:	jne    0x1400032e9
   1400032cc:	mov    eax,DWORD PTR [rip+0x3cae]        # 0x140006f80
   1400032d2:	cmp    DWORD PTR [rdx+0x8],eax
   1400032d5:	jne    0x1400032e9
   1400032d7:	mov    eax,DWORD PTR [rip+0x3ca7]        # 0x140006f84
   1400032dd:	cmp    DWORD PTR [rdx+0xc],eax
   1400032e0:	jne    0x1400032e9
   1400032e2:	mov    QWORD PTR [r8],rcx
   1400032e5:	mov    esi,edi
   1400032e7:	jmp    0x14000331f
   1400032e9:	cmp    DWORD PTR [rdx],0x3
   1400032ec:	jne    0x140003316
   1400032ee:	mov    eax,DWORD PTR [rip+0x3c98]        # 0x140006f8c
   1400032f4:	cmp    DWORD PTR [rdx+0x4],eax
   1400032f7:	jne    0x140003316
   1400032f9:	mov    eax,DWORD PTR [rip+0x3c91]        # 0x140006f90
   1400032ff:	cmp    DWORD PTR [rdx+0x8],eax
   140003302:	jne    0x140003316
   140003304:	mov    eax,DWORD PTR [rip+0x3c8a]        # 0x140006f94
   14000330a:	cmp    DWORD PTR [rdx+0xc],eax
   14000330d:	jne    0x140003316
   14000330f:	mov    QWORD PTR [r8],rcx
   140003312:	mov    esi,edi
   140003314:	jmp    0x14000331b
   140003316:	mov    esi,0x80004002
   14000331b:	test   esi,esi
   14000331d:	js     0x140003337
   14000331f:	mov    rdi,QWORD PTR [r8]
   140003322:	mov    rax,QWORD PTR [rdi]
   140003325:	mov    rbx,QWORD PTR [rax+0x8]
   140003329:	mov    rcx,rbx
   14000332c:	call   QWORD PTR [rip+0x30f6]        # 0x140006428
   140003332:	mov    rcx,rdi
   140003335:	call   rbx
   140003337:	mov    edi,esi
   140003339:	mov    rbx,QWORD PTR [rsp+0x30]
   14000333e:	mov    eax,edi
   140003340:	mov    rsi,QWORD PTR [rsp+0x38]
   140003345:	add    rsp,0x20
   140003349:	pop    rdi
   14000334a:	ret    
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    eax,0x1
   140003365:	lock xadd DWORD PTR [rcx+0x1c],eax
   14000336a:	inc    eax
   14000336c:	ret    
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	int3   
   140003371:	int3   
   140003372:	int3   
   140003373:	int3   
   140003374:	int3   
   140003375:	int3   
   140003376:	int3   
   140003377:	int3   
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    QWORD PTR [rsp+0x8],rbx
   140003385:	mov    QWORD PTR [rsp+0x10],rsi
   14000338a:	push   rdi
   14000338b:	sub    rsp,0x20
   14000338f:	mov    rsi,rcx
   140003392:	or     edi,0xffffffff
   140003395:	lock xadd DWORD PTR [rcx+0x1c],edi
   14000339a:	sub    edi,0x1
   14000339d:	jne    0x1400033dd
   14000339f:	test   rcx,rcx
   1400033a2:	je     0x1400033bc
   1400033a4:	mov    rax,QWORD PTR [rcx]
   1400033a7:	mov    rbx,QWORD PTR [rax+0x48]
   1400033ab:	mov    rcx,rbx
   1400033ae:	call   QWORD PTR [rip+0x3074]        # 0x140006428
   1400033b4:	lea    edx,[rdi+0x1]
   1400033b7:	mov    rcx,rsi
   1400033ba:	call   rbx
   1400033bc:	mov    rsi,QWORD PTR [rip+0x7295]        # 0x14000a658
   1400033c3:	test   rsi,rsi
   1400033c6:	je     0x1400033dd
   1400033c8:	mov    rdx,QWORD PTR [rsi]
   1400033cb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400033cf:	mov    rcx,rbx
   1400033d2:	call   QWORD PTR [rip+0x3050]        # 0x140006428
   1400033d8:	mov    rcx,rsi
   1400033db:	call   rbx
   1400033dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033e2:	mov    eax,edi
   1400033e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033e9:	add    rsp,0x20
   1400033ed:	pop    rdi
   1400033ee:	ret    
   1400033ef:	int3   
   1400033f0:	int3   
   1400033f1:	int3   
   1400033f2:	int3   
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	mov    QWORD PTR [rsp+0x8],rcx
   1400033fd:	push   rdi
   1400033fe:	sub    rsp,0x30
   140003402:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000340b:	mov    QWORD PTR [rsp+0x48],rbx
   140003410:	mov    DWORD PTR [rcx+0x1c],0xc0000001
   140003417:	mov    rdi,QWORD PTR [rcx+0x10]
   14000341b:	test   rdi,rdi
   14000341e:	je     0x14000343a
   140003420:	and    QWORD PTR [rcx+0x10],0x0
   140003425:	mov    rax,QWORD PTR [rdi]
   140003428:	mov    rbx,QWORD PTR [rax+0x10]
   14000342c:	mov    rcx,rbx
   14000342f:	call   QWORD PTR [rip+0x2ff3]        # 0x140006428
   140003435:	mov    rcx,rdi
   140003438:	call   rbx
   14000343a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000343f:	add    rsp,0x30
   140003443:	pop    rdi
   140003444:	ret    
   140003445:	int3   
   140003446:	int3   
   140003447:	int3   
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	mov    QWORD PTR [rsp+0x8],rcx
   140003451:	push   rdi
   140003452:	sub    rsp,0x30
   140003456:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000345f:	mov    QWORD PTR [rsp+0x48],rbx
   140003464:	mov    rdi,QWORD PTR [rcx+0x10]
   140003468:	test   rdi,rdi
   14000346b:	je     0x140003487
   14000346d:	and    QWORD PTR [rcx+0x10],0x0
   140003472:	mov    rax,QWORD PTR [rdi]
   140003475:	mov    rbx,QWORD PTR [rax+0x10]
   140003479:	mov    rcx,rbx
   14000347c:	call   QWORD PTR [rip+0x2fa6]        # 0x140006428
   140003482:	mov    rcx,rdi
   140003485:	call   rbx
   140003487:	mov    rbx,QWORD PTR [rsp+0x48]
   14000348c:	add    rsp,0x30
   140003490:	pop    rdi
   140003491:	ret    
   140003492:	int3   
   140003493:	int3   
   140003494:	int3   
   140003495:	int3   
   140003496:	int3   
   140003497:	int3   
   140003498:	mov    QWORD PTR [rsp+0x8],rcx
   14000349d:	push   rdi
   14000349e:	sub    rsp,0x30
   1400034a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400034ab:	mov    QWORD PTR [rsp+0x48],rbx
   1400034b0:	mov    rdi,QWORD PTR [rcx+0x10]
   1400034b4:	test   rdi,rdi
   1400034b7:	je     0x1400034d3
   1400034b9:	and    QWORD PTR [rcx+0x10],0x0
   1400034be:	mov    rax,QWORD PTR [rdi]
   1400034c1:	mov    rbx,QWORD PTR [rax+0x10]
   1400034c5:	mov    rcx,rbx
   1400034c8:	call   QWORD PTR [rip+0x2f5a]        # 0x140006428
   1400034ce:	mov    rcx,rdi
   1400034d1:	call   rbx
   1400034d3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400034d8:	add    rsp,0x30
   1400034dc:	pop    rdi
   1400034dd:	ret    
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	int3   
   1400034e1:	int3   
   1400034e2:	int3   
   1400034e3:	int3   
   1400034e4:	mov    rax,rsp
   1400034e7:	mov    QWORD PTR [rax+0x8],rcx
   1400034eb:	push   rbp
   1400034ec:	push   rsi
   1400034ed:	push   rdi
   1400034ee:	sub    rsp,0x30
   1400034f2:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   1400034fa:	mov    QWORD PTR [rax+0x18],rbx
   1400034fe:	mov    rdi,rcx
   140003501:	and    DWORD PTR [rax-0x28],0x0
   140003505:	and    QWORD PTR [rcx],0x0
   140003509:	mov    DWORD PTR [rax-0x28],0x1
   140003510:	and    QWORD PTR [rax+0x10],0x0
   140003515:	lea    rdx,[rip+0x321c]        # 0x140006738
   14000351c:	mov    ecx,0x20
   140003521:	call   0x140004ac4
   140003526:	mov    QWORD PTR [rsp+0x58],rax
   14000352b:	test   rax,rax
   14000352e:	je     0x140003562
   140003530:	mov    rcx,rax
   140003533:	call   0x140003588
   140003538:	mov    rbp,rax
   14000353b:	mov    rsi,QWORD PTR [rdi]
   14000353e:	test   rsi,rsi
   140003541:	je     0x140003558
   140003543:	mov    rdx,QWORD PTR [rsi]
   140003546:	mov    rbx,QWORD PTR [rdx+0x10]
   14000354a:	mov    rcx,rbx
   14000354d:	call   QWORD PTR [rip+0x2ed5]        # 0x140006428
   140003553:	mov    rcx,rsi
   140003556:	call   rbx
   140003558:	mov    QWORD PTR [rdi],rbp
   14000355b:	xor    eax,eax
   14000355d:	mov    QWORD PTR [rsp+0x58],rax
   140003562:	test   rax,rax
   140003565:	je     0x14000356f
   140003567:	mov    rcx,rax
   14000356a:	call   0x140004640
   14000356f:	mov    rax,rdi
   140003572:	mov    rbx,QWORD PTR [rsp+0x60]
   140003577:	add    rsp,0x30
   14000357b:	pop    rdi
   14000357c:	pop    rsi
   14000357d:	pop    rbp
   14000357e:	ret    
   14000357f:	int3   
   140003580:	int3   
   140003581:	int3   
   140003582:	int3   
   140003583:	int3   
   140003584:	int3   
   140003585:	int3   
   140003586:	int3   
   140003587:	int3   
   140003588:	mov    r11,rsp
   14000358b:	mov    QWORD PTR [r11+0x8],rcx
   14000358f:	push   rsi
   140003590:	push   rdi
   140003591:	push   r14
   140003593:	sub    rsp,0x30
   140003597:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   14000359f:	mov    QWORD PTR [r11+0x18],rbx
   1400035a3:	mov    rsi,rcx
   1400035a6:	lea    rax,[rip+0x371b]        # 0x140006cc8
   1400035ad:	mov    QWORD PTR [rcx],rax
   1400035b0:	lea    r14,[rcx+0x10]
   1400035b4:	and    QWORD PTR [r14],0x0
   1400035b8:	and    QWORD PTR [r11+0x10],0x0
   1400035bd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400035c2:	test   rdi,rdi
   1400035c5:	je     0x1400035e1
   1400035c7:	and    QWORD PTR [r11+0x10],0x0
   1400035cc:	mov    rax,QWORD PTR [rdi]
   1400035cf:	mov    rbx,QWORD PTR [rax+0x10]
   1400035d3:	mov    rcx,rbx
   1400035d6:	call   QWORD PTR [rip+0x2e4c]        # 0x140006428
   1400035dc:	mov    rcx,rdi
   1400035df:	call   rbx
   1400035e1:	lea    rdx,[rsp+0x58]
   1400035e6:	xor    ecx,ecx
   1400035e8:	call   QWORD PTR [rip+0x2e12]        # 0x140006400
   1400035ee:	test   eax,eax
   1400035f0:	js     0x140003637
   1400035f2:	mov    rdi,QWORD PTR [r14]
   1400035f5:	test   rdi,rdi
   1400035f8:	je     0x140003613
   1400035fa:	and    QWORD PTR [r14],0x0
   1400035fe:	mov    rax,QWORD PTR [rdi]
   140003601:	mov    rbx,QWORD PTR [rax+0x10]
   140003605:	mov    rcx,rbx
   140003608:	call   QWORD PTR [rip+0x2e1a]        # 0x140006428
   14000360e:	mov    rcx,rdi
   140003611:	call   rbx
   140003613:	mov    rbx,QWORD PTR [rsp+0x58]
   140003618:	mov    rax,QWORD PTR [rbx]
   14000361b:	mov    rdi,QWORD PTR [rax]
   14000361e:	mov    rcx,rdi
   140003621:	call   QWORD PTR [rip+0x2e01]        # 0x140006428
   140003627:	mov    r8,r14
   14000362a:	lea    rdx,[rip+0x3957]        # 0x140006f88
   140003631:	mov    rcx,rbx
   140003634:	call   rdi
   140003636:	nop
   140003637:	mov    rdi,QWORD PTR [rsp+0x58]
   14000363c:	test   rdi,rdi
   14000363f:	je     0x14000365d
   140003641:	and    QWORD PTR [rsp+0x58],0x0
   140003647:	mov    rax,QWORD PTR [rdi]
   14000364a:	mov    rbx,QWORD PTR [rax+0x10]
   14000364e:	mov    rcx,rbx
   140003651:	call   QWORD PTR [rip+0x2dd1]        # 0x140006428
   140003657:	mov    rcx,rdi
   14000365a:	call   rbx
   14000365c:	nop
   14000365d:	mov    DWORD PTR [rsi+0x1c],0x1
   140003664:	lea    rax,[rip+0x36a5]        # 0x140006d10
   14000366b:	mov    QWORD PTR [rsi],rax
   14000366e:	mov    rdi,QWORD PTR [rip+0x6fe3]        # 0x14000a658
   140003675:	test   rdi,rdi
   140003678:	je     0x140003690
   14000367a:	mov    rax,QWORD PTR [rdi]
   14000367d:	mov    rbx,QWORD PTR [rax+0x8]
   140003681:	mov    rcx,rbx
   140003684:	call   QWORD PTR [rip+0x2d9e]        # 0x140006428
   14000368a:	mov    rcx,rdi
   14000368d:	call   rbx
   14000368f:	nop
   140003690:	lea    rax,[rip+0x36c9]        # 0x140006d60
   140003697:	mov    QWORD PTR [rsi],rax
   14000369a:	mov    rax,rsi
   14000369d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400036a2:	add    rsp,0x30
   1400036a6:	pop    r14
   1400036a8:	pop    rdi
   1400036a9:	pop    rsi
   1400036aa:	ret    
   1400036ab:	int3   
   1400036ac:	int3   
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	int3   
   1400036b1:	int3   
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    rax,rsp
   1400036c3:	mov    QWORD PTR [rax+0x8],rcx
   1400036c7:	push   rdi
   1400036c8:	sub    rsp,0x30
   1400036cc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400036d4:	mov    QWORD PTR [rax+0x10],rbx
   1400036d8:	mov    QWORD PTR [rax+0x18],rbp
   1400036dc:	mov    QWORD PTR [rax+0x20],rsi
   1400036e0:	mov    ebp,edx
   1400036e2:	mov    rdi,rcx
   1400036e5:	mov    DWORD PTR [rcx+0x1c],0xc0000001
   1400036ec:	mov    rsi,QWORD PTR [rcx+0x10]
   1400036f0:	test   rsi,rsi
   1400036f3:	je     0x14000370f
   1400036f5:	and    QWORD PTR [rcx+0x10],0x0
   1400036fa:	mov    rax,QWORD PTR [rsi]
   1400036fd:	mov    rbx,QWORD PTR [rax+0x10]
   140003701:	mov    rcx,rbx
   140003704:	call   QWORD PTR [rip+0x2d1e]        # 0x140006428
   14000370a:	mov    rcx,rsi
   14000370d:	call   rbx
   14000370f:	test   bpl,0x1
   140003713:	je     0x14000371d
   140003715:	mov    rcx,rdi
   140003718:	call   0x140004640
   14000371d:	mov    rax,rdi
   140003720:	mov    rbx,QWORD PTR [rsp+0x48]
   140003725:	mov    rbp,QWORD PTR [rsp+0x50]
   14000372a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000372f:	add    rsp,0x30
   140003733:	pop    rdi
   140003734:	ret    
   140003735:	int3   
   140003736:	int3   
   140003737:	int3   
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	mov    QWORD PTR [rsp+0x8],rcx
   140003741:	push   rdi
   140003742:	sub    rsp,0x30
   140003746:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000374f:	mov    QWORD PTR [rsp+0x48],rbx
   140003754:	mov    DWORD PTR [rcx+0x1c],0xc0000001
   14000375b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000375f:	test   rdi,rdi
   140003762:	je     0x14000377e
   140003764:	and    QWORD PTR [rcx+0x10],0x0
   140003769:	mov    rax,QWORD PTR [rdi]
   14000376c:	mov    rbx,QWORD PTR [rax+0x10]
   140003770:	mov    rcx,rbx
   140003773:	call   QWORD PTR [rip+0x2caf]        # 0x140006428
   140003779:	mov    rcx,rdi
   14000377c:	call   rbx
   14000377e:	mov    rbx,QWORD PTR [rsp+0x48]
   140003783:	add    rsp,0x30
   140003787:	pop    rdi
   140003788:	ret    
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    rax,rsp
   140003793:	mov    QWORD PTR [rax+0x8],rcx
   140003797:	push   rdi
   140003798:	sub    rsp,0x30
   14000379c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400037a4:	mov    QWORD PTR [rax+0x10],rbx
   1400037a8:	mov    QWORD PTR [rax+0x18],rbp
   1400037ac:	mov    QWORD PTR [rax+0x20],rsi
   1400037b0:	mov    ebp,edx
   1400037b2:	mov    rdi,rcx
   1400037b5:	mov    DWORD PTR [rcx+0x1c],0xc0000001
   1400037bc:	mov    rsi,QWORD PTR [rcx+0x10]
   1400037c0:	test   rsi,rsi
   1400037c3:	je     0x1400037df
   1400037c5:	and    QWORD PTR [rcx+0x10],0x0
   1400037ca:	mov    rax,QWORD PTR [rsi]
   1400037cd:	mov    rbx,QWORD PTR [rax+0x10]
   1400037d1:	mov    rcx,rbx
   1400037d4:	call   QWORD PTR [rip+0x2c4e]        # 0x140006428
   1400037da:	mov    rcx,rsi
   1400037dd:	call   rbx
   1400037df:	test   bpl,0x1
   1400037e3:	je     0x1400037ed
   1400037e5:	mov    rcx,rdi
   1400037e8:	call   0x140004640
   1400037ed:	mov    rax,rdi
   1400037f0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400037f5:	mov    rbp,QWORD PTR [rsp+0x50]
   1400037fa:	mov    rsi,QWORD PTR [rsp+0x58]
   1400037ff:	add    rsp,0x30
   140003803:	pop    rdi
   140003804:	ret    
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	mov    rax,rsp
   140003813:	mov    QWORD PTR [rax+0x8],rbx
   140003817:	mov    QWORD PTR [rax+0x10],rbp
   14000381b:	mov    QWORD PTR [rax+0x18],rsi
   14000381f:	mov    QWORD PTR [rax+0x20],rdi
   140003823:	push   r14
   140003825:	sub    rsp,0x40
   140003829:	mov    rdi,QWORD PTR [rcx+0x10]
   14000382d:	mov    esi,r9d
   140003830:	mov    rbp,r8
   140003833:	mov    r14,rdx
   140003836:	test   rdi,rdi
   140003839:	je     0x14000387a
   14000383b:	mov    rax,QWORD PTR [rdi]
   14000383e:	mov    rbx,QWORD PTR [rax+0x18]
   140003842:	mov    rcx,rbx
   140003845:	call   QWORD PTR [rip+0x2bdd]        # 0x140006428
   14000384b:	mov    rax,QWORD PTR [rsp+0x80]
   140003853:	mov    r9d,esi
   140003856:	mov    QWORD PTR [rsp+0x30],rax
   14000385b:	mov    r8,rbp
   14000385e:	mov    eax,DWORD PTR [rsp+0x78]
   140003862:	mov    rdx,r14
   140003865:	mov    DWORD PTR [rsp+0x28],eax
   140003869:	mov    rcx,rdi
   14000386c:	mov    rax,QWORD PTR [rsp+0x70]
   140003871:	mov    QWORD PTR [rsp+0x20],rax
   140003876:	call   rbx
   140003878:	jmp    0x14000387f
   14000387a:	mov    eax,0x8007000e
   14000387f:	mov    rbx,QWORD PTR [rsp+0x50]
   140003884:	mov    rbp,QWORD PTR [rsp+0x58]
   140003889:	mov    rsi,QWORD PTR [rsp+0x60]
   14000388e:	mov    rdi,QWORD PTR [rsp+0x68]
   140003893:	add    rsp,0x40
   140003897:	pop    r14
   140003899:	ret    
   14000389a:	int3   
   14000389b:	int3   
   14000389c:	int3   
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	mov    rax,rsp
   1400038a3:	mov    QWORD PTR [rax+0x8],rbx
   1400038a7:	mov    QWORD PTR [rax+0x10],rbp
   1400038ab:	mov    QWORD PTR [rax+0x18],rsi
   1400038af:	mov    QWORD PTR [rax+0x20],rdi
   1400038b3:	push   r14
   1400038b5:	sub    rsp,0x40
   1400038b9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400038bd:	mov    esi,r9d
   1400038c0:	mov    rbp,r8
   1400038c3:	mov    r14,rdx
   1400038c6:	test   rdi,rdi
   1400038c9:	je     0x14000390a
   1400038cb:	mov    rax,QWORD PTR [rdi]
   1400038ce:	mov    rbx,QWORD PTR [rax+0x20]
   1400038d2:	mov    rcx,rbx
   1400038d5:	call   QWORD PTR [rip+0x2b4d]        # 0x140006428
   1400038db:	mov    rax,QWORD PTR [rsp+0x80]
   1400038e3:	mov    r9d,esi
   1400038e6:	mov    QWORD PTR [rsp+0x30],rax
   1400038eb:	mov    r8,rbp
   1400038ee:	mov    eax,DWORD PTR [rsp+0x78]
   1400038f2:	mov    rdx,r14
   1400038f5:	mov    DWORD PTR [rsp+0x28],eax
   1400038f9:	mov    rcx,rdi
   1400038fc:	mov    rax,QWORD PTR [rsp+0x70]
   140003901:	mov    QWORD PTR [rsp+0x20],rax
   140003906:	call   rbx
   140003908:	jmp    0x14000390f
   14000390a:	mov    eax,0x8007000e
   14000390f:	mov    rbx,QWORD PTR [rsp+0x50]
   140003914:	mov    rbp,QWORD PTR [rsp+0x58]
   140003919:	mov    rsi,QWORD PTR [rsp+0x60]
   14000391e:	mov    rdi,QWORD PTR [rsp+0x68]
   140003923:	add    rsp,0x40
   140003927:	pop    r14
   140003929:	ret    
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	mov    rax,rsp
   140003933:	mov    QWORD PTR [rax+0x8],rbx
   140003937:	mov    QWORD PTR [rax+0x10],rbp
   14000393b:	mov    QWORD PTR [rax+0x18],rsi
   14000393f:	mov    QWORD PTR [rax+0x20],rdi
   140003943:	push   r14
   140003945:	sub    rsp,0x40
   140003949:	mov    rdi,QWORD PTR [rcx+0x10]
   14000394d:	mov    rsi,r9
   140003950:	mov    rbp,r8
   140003953:	mov    r14,rdx
   140003956:	test   rdi,rdi
   140003959:	je     0x140003998
   14000395b:	mov    rax,QWORD PTR [rdi]
   14000395e:	mov    rbx,QWORD PTR [rax+0x28]
   140003962:	mov    rcx,rbx
   140003965:	call   QWORD PTR [rip+0x2abd]        # 0x140006428
   14000396b:	mov    eax,DWORD PTR [rsp+0x80]
   140003972:	mov    r9,rsi
   140003975:	mov    DWORD PTR [rsp+0x30],eax
   140003979:	mov    r8,rbp
   14000397c:	mov    rax,QWORD PTR [rsp+0x78]
   140003981:	mov    rdx,r14
   140003984:	mov    QWORD PTR [rsp+0x28],rax
   140003989:	mov    rcx,rdi
   14000398c:	mov    eax,DWORD PTR [rsp+0x70]
   140003990:	mov    DWORD PTR [rsp+0x20],eax
   140003994:	call   rbx
   140003996:	jmp    0x14000399d
   140003998:	mov    eax,0x8007000e
   14000399d:	mov    rbx,QWORD PTR [rsp+0x50]
   1400039a2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400039a7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400039ac:	mov    rdi,QWORD PTR [rsp+0x68]
   1400039b1:	add    rsp,0x40
   1400039b5:	pop    r14
   1400039b7:	ret    
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	mov    rax,rsp
   1400039c3:	mov    QWORD PTR [rax+0x8],rbx
   1400039c7:	mov    QWORD PTR [rax+0x10],rbp
   1400039cb:	mov    QWORD PTR [rax+0x18],rsi
   1400039cf:	mov    QWORD PTR [rax+0x20],rdi
   1400039d3:	push   r14
   1400039d5:	sub    rsp,0x20
   1400039d9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400039dd:	mov    rsi,r9
   1400039e0:	mov    rbp,r8
   1400039e3:	mov    r14,rdx
   1400039e6:	test   rdi,rdi
   1400039e9:	je     0x140003a0b
   1400039eb:	mov    rax,QWORD PTR [rdi]
   1400039ee:	mov    rbx,QWORD PTR [rax+0x30]
   1400039f2:	mov    rcx,rbx
   1400039f5:	call   QWORD PTR [rip+0x2a2d]        # 0x140006428
   1400039fb:	mov    r9,rsi
   1400039fe:	mov    r8,rbp
   140003a01:	mov    rdx,r14
   140003a04:	mov    rcx,rdi
   140003a07:	call   rbx
   140003a09:	jmp    0x140003a10
   140003a0b:	mov    eax,0x8007000e
   140003a10:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a15:	mov    rbp,QWORD PTR [rsp+0x38]
   140003a1a:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a1f:	mov    rdi,QWORD PTR [rsp+0x48]
   140003a24:	add    rsp,0x20
   140003a28:	pop    r14
   140003a2a:	ret    
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	int3   
   140003a31:	int3   
   140003a32:	int3   
   140003a33:	int3   
   140003a34:	int3   
   140003a35:	int3   
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	mov    QWORD PTR [rsp+0x8],rbx
   140003a45:	mov    QWORD PTR [rsp+0x10],rsi
   140003a4a:	push   rdi
   140003a4b:	sub    rsp,0x20
   140003a4f:	mov    rdi,QWORD PTR [rcx+0x10]
   140003a53:	mov    rsi,rdx
   140003a56:	test   rdi,rdi
   140003a59:	je     0x140003a75
   140003a5b:	mov    rax,QWORD PTR [rdi]
   140003a5e:	mov    rbx,QWORD PTR [rax+0x38]
   140003a62:	mov    rcx,rbx
   140003a65:	call   QWORD PTR [rip+0x29bd]        # 0x140006428
   140003a6b:	mov    rdx,rsi
   140003a6e:	mov    rcx,rdi
   140003a71:	call   rbx
   140003a73:	jmp    0x140003a7a
   140003a75:	mov    eax,0x8007000e
   140003a7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a7f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a84:	add    rsp,0x20
   140003a88:	pop    rdi
   140003a89:	ret    
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	mov    QWORD PTR [rsp+0x8],rbx
   140003a95:	mov    QWORD PTR [rsp+0x10],rsi
   140003a9a:	push   rdi
   140003a9b:	sub    rsp,0x20
   140003a9f:	mov    rdi,QWORD PTR [rcx+0x10]
   140003aa3:	mov    esi,edx
   140003aa5:	test   rdi,rdi
   140003aa8:	je     0x140003ac3
   140003aaa:	mov    rax,QWORD PTR [rdi]
   140003aad:	mov    rbx,QWORD PTR [rax+0x40]
   140003ab1:	mov    rcx,rbx
   140003ab4:	call   QWORD PTR [rip+0x296e]        # 0x140006428
   140003aba:	mov    edx,esi
   140003abc:	mov    rcx,rdi
   140003abf:	call   rbx
   140003ac1:	jmp    0x140003ac8
   140003ac3:	mov    eax,0x8007000e
   140003ac8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003acd:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ad2:	add    rsp,0x20
   140003ad6:	pop    rdi
   140003ad7:	ret    
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	mov    r11,rsp
   140003ae3:	sub    rsp,0x1a8
   140003aea:	mov    rax,QWORD PTR [rip+0x6527]        # 0x14000a018
   140003af1:	xor    rax,rsp
   140003af4:	mov    QWORD PTR [rsp+0x190],rax
   140003afc:	and    DWORD PTR [rsp+0x2c],0x0
   140003b01:	lea    rax,[rsp+0x30]
   140003b06:	mov    QWORD PTR [rsp+0x20],rax
   140003b0b:	lea    r9,[rsp+0x40]
   140003b10:	mov    r8d,0x1
   140003b16:	mov    DWORD PTR [rsp+0x28],0x4
   140003b1e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140003b23:	mov    rdx,rcx
   140003b26:	mov    rcx,QWORD PTR [rip+0x6b53]        # 0x14000a680
   140003b2d:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140003b33:	mov    DWORD PTR [r11-0x28],r8d
   140003b37:	call   QWORD PTR [rip+0x28b3]        # 0x1400063f0
   140003b3d:	mov    rcx,QWORD PTR [rsp+0x190]
   140003b45:	xor    rcx,rsp
   140003b48:	call   0x140004aa0
   140003b4d:	add    rsp,0x1a8
   140003b54:	ret    
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	mov    rax,rsp
   140003b5f:	push   rdi
   140003b60:	push   r14
   140003b62:	push   r15
   140003b64:	sub    rsp,0x40
   140003b68:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003b70:	mov    QWORD PTR [rax+0x8],rbx
   140003b74:	mov    QWORD PTR [rax+0x10],rbp
   140003b78:	mov    QWORD PTR [rax+0x18],rsi
   140003b7c:	mov    r15,rcx
   140003b7f:	xor    esi,esi
   140003b81:	mov    QWORD PTR [rax-0x30],rsi
   140003b85:	xor    r14d,r14d
   140003b88:	mov    QWORD PTR [rax-0x38],r14
   140003b8c:	lea    edx,[rsi+0x1]
   140003b8f:	mov    ecx,0x3ff
   140003b94:	call   QWORD PTR [rip+0x254e]        # 0x1400060e8
   140003b9a:	test   eax,eax
   140003b9c:	jne    0x140003bbe
   140003b9e:	call   QWORD PTR [rip+0x250c]        # 0x1400060b0
   140003ba4:	movzx  edi,ax
   140003ba7:	or     edi,0x80070000
   140003bad:	test   eax,eax
   140003baf:	cmovle edi,eax
   140003bb2:	lea    rcx,[rip+0x2adf]        # 0x140006698
   140003bb9:	jmp    0x140003d4a
   140003bbe:	lea    rcx,[rsp+0x28]
   140003bc3:	call   0x140002940
   140003bc8:	mov    edi,eax
   140003bca:	mov    rsi,QWORD PTR [rsp+0x28]
   140003bcf:	test   eax,eax
   140003bd1:	js     0x140003d4f
   140003bd7:	lea    r8,[rsp+0x20]
   140003bdc:	mov    rcx,rsi
   140003bdf:	call   0x1400024c8
   140003be4:	mov    edi,eax
   140003be6:	test   eax,eax
   140003be8:	jns    0x140003c00
   140003bea:	lea    rcx,[rip+0x2ae7]        # 0x1400066d8
   140003bf1:	call   0x140003ae0
   140003bf6:	mov    r14,QWORD PTR [rsp+0x20]
   140003bfb:	jmp    0x140003d4f
   140003c00:	mov    r14,QWORD PTR [rsp+0x20]
   140003c05:	mov    rax,QWORD PTR [r14]
   140003c08:	mov    rbx,QWORD PTR [rax+0x28]
   140003c0c:	mov    rcx,rbx
   140003c0f:	call   QWORD PTR [rip+0x2813]        # 0x140006428
   140003c15:	mov    rcx,r14
   140003c18:	call   rbx
   140003c1a:	test   eax,eax
   140003c1c:	je     0x140003d4f
   140003c22:	mov    ebx,0x3a98
   140003c27:	mov    ebp,0x1f4
   140003c2c:	lea    r8,[rip+0x3365]        # 0x140006f98
   140003c33:	xor    edx,edx
   140003c35:	mov    ecx,0x100000
   140003c3a:	call   QWORD PTR [rip+0x24b0]        # 0x1400060f0
   140003c40:	mov    rdi,rax
   140003c43:	test   rax,rax
   140003c46:	jne    0x140003c6a
   140003c48:	mov    ecx,ebp
   140003c4a:	call   QWORD PTR [rip+0x24a8]        # 0x1400060f8
   140003c50:	sub    ebx,ebp
   140003c52:	test   ebx,ebx
   140003c54:	jg     0x140003c2c
   140003c56:	call   QWORD PTR [rip+0x2454]        # 0x1400060b0
   140003c5c:	lea    rcx,[rip+0x2a45]        # 0x1400066a8
   140003c63:	call   0x140003ae0
   140003c68:	jmp    0x140003cb2
   140003c6a:	mov    edx,ebx
   140003c6c:	mov    rcx,rax
   140003c6f:	call   QWORD PTR [rip+0x2493]        # 0x140006108
   140003c75:	test   eax,eax
   140003c77:	je     0x140003c9d
   140003c79:	cmp    eax,0x102
   140003c7e:	je     0x140003c94
   140003c80:	cmp    eax,0xffffffff
   140003c83:	jne    0x140003c8b
   140003c85:	call   QWORD PTR [rip+0x2425]        # 0x1400060b0
   140003c8b:	lea    rcx,[rip+0x29f6]        # 0x140006688
   140003c92:	jmp    0x140003ca4
   140003c94:	lea    rcx,[rip+0x29dd]        # 0x140006678
   140003c9b:	jmp    0x140003ca4
   140003c9d:	lea    rcx,[rip+0x2a84]        # 0x140006728
   140003ca4:	call   0x140003ae0
   140003ca9:	mov    rcx,rdi
   140003cac:	call   QWORD PTR [rip+0x2406]        # 0x1400060b8
   140003cb2:	mov    rcx,r15
   140003cb5:	call   0x140003118
   140003cba:	mov    edi,eax
   140003cbc:	test   eax,eax
   140003cbe:	jns    0x140003ccc
   140003cc0:	lea    rcx,[rip+0x2a31]        # 0x1400066f8
   140003cc7:	call   0x140003ae0
   140003ccc:	mov    rbp,QWORD PTR [rip+0x698d]        # 0x14000a660
   140003cd3:	test   rbp,rbp
   140003cd6:	je     0x140003d43
   140003cd8:	mov    rax,QWORD PTR [rsi]
   140003cdb:	mov    rbx,QWORD PTR [rax+0x60]
   140003cdf:	mov    rcx,rbx
   140003ce2:	call   QWORD PTR [rip+0x2740]        # 0x140006428
   140003ce8:	or     r8d,0xffffffff
   140003cec:	mov    rdx,rbp
   140003cef:	mov    rcx,rsi
   140003cf2:	call   rbx
   140003cf4:	test   eax,eax
   140003cf6:	je     0x140003d2a
   140003cf8:	cmp    eax,0x102
   140003cfd:	je     0x140003d21
   140003cff:	cmp    eax,0xffffffff
   140003d02:	jne    0x140003d38
   140003d04:	call   QWORD PTR [rip+0x23a6]        # 0x1400060b0
   140003d0a:	movzx  edi,ax
   140003d0d:	or     edi,0x80070000
   140003d13:	test   eax,eax
   140003d15:	cmovle edi,eax
   140003d18:	lea    rcx,[rip+0x2949]        # 0x140006668
   140003d1f:	jmp    0x140003d33
   140003d21:	lea    rcx,[rip+0x2990]        # 0x1400066b8
   140003d28:	jmp    0x140003d33
   140003d2a:	xor    edi,edi
   140003d2c:	lea    rcx,[rip+0x29d5]        # 0x140006708
   140003d33:	call   0x140003ae0
   140003d38:	mov    rcx,rbp
   140003d3b:	call   QWORD PTR [rip+0x2377]        # 0x1400060b8
   140003d41:	jmp    0x140003d4f
   140003d43:	lea    rcx,[rip+0x29ce]        # 0x140006718
   140003d4a:	call   0x140003ae0
   140003d4f:	mov    rcx,QWORD PTR [rip+0x6912]        # 0x14000a668
   140003d56:	test   rcx,rcx
   140003d59:	je     0x140003d69
   140003d5b:	call   QWORD PTR [rip+0x2357]        # 0x1400060b8
   140003d61:	and    QWORD PTR [rip+0x68ff],0x0        # 0x14000a668
   140003d69:	mov    rcx,QWORD PTR [rip+0x6900]        # 0x14000a670
   140003d70:	test   rcx,rcx
   140003d73:	je     0x140003da0
   140003d75:	call   QWORD PTR [rip+0x24e5]        # 0x140006260
   140003d7b:	mov    rcx,QWORD PTR [rip+0x68ee]        # 0x14000a670
   140003d82:	call   QWORD PTR [rip+0x24c0]        # 0x140006248
   140003d88:	and    QWORD PTR [rip+0x68e0],0x0        # 0x14000a670
   140003d90:	mov    rdx,r15
   140003d93:	lea    rcx,[rip+0x31b6]        # 0x140006f50
   140003d9a:	call   QWORD PTR [rip+0x2488]        # 0x140006228
   140003da0:	mov    rcx,QWORD PTR [rip+0x68b9]        # 0x14000a660
   140003da7:	test   rcx,rcx
   140003daa:	je     0x140003dba
   140003dac:	call   QWORD PTR [rip+0x2306]        # 0x1400060b8
   140003db2:	and    QWORD PTR [rip+0x68a6],0x0        # 0x14000a660
   140003dba:	test   r14,r14
   140003dbd:	je     0x140003ddb
   140003dbf:	and    QWORD PTR [rsp+0x20],0x0
   140003dc5:	mov    rax,QWORD PTR [r14]
   140003dc8:	mov    rbx,QWORD PTR [rax+0x10]
   140003dcc:	mov    rcx,rbx
   140003dcf:	call   QWORD PTR [rip+0x2653]        # 0x140006428
   140003dd5:	mov    rcx,r14
   140003dd8:	call   rbx
   140003dda:	nop
   140003ddb:	test   rsi,rsi
   140003dde:	je     0x140003dfb
   140003de0:	and    QWORD PTR [rsp+0x28],0x0
   140003de6:	mov    rax,QWORD PTR [rsi]
   140003de9:	mov    rbx,QWORD PTR [rax+0x10]
   140003ded:	mov    rcx,rbx
   140003df0:	call   QWORD PTR [rip+0x2632]        # 0x140006428
   140003df6:	mov    rcx,rsi
   140003df9:	call   rbx
   140003dfb:	mov    eax,edi
   140003dfd:	mov    rbx,QWORD PTR [rsp+0x60]
   140003e02:	mov    rbp,QWORD PTR [rsp+0x68]
   140003e07:	mov    rsi,QWORD PTR [rsp+0x70]
   140003e0c:	add    rsp,0x40
   140003e10:	pop    r15
   140003e12:	pop    r14
   140003e14:	pop    rdi
   140003e15:	ret    
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	mov    r11,rsp
   140003e1f:	mov    QWORD PTR [r11+0x18],rbx
   140003e23:	mov    QWORD PTR [r11+0x20],rsi
   140003e27:	mov    QWORD PTR [r11+0x10],rdx
   140003e2b:	push   rdi
   140003e2c:	sub    rsp,0x30
   140003e30:	mov    eax,DWORD PTR [r9]
   140003e33:	lea    rdx,[rip+0x32be]        # 0x1400070f8
   140003e3a:	mov    rcx,QWORD PTR [rcx]
   140003e3d:	add    eax,eax
   140003e3f:	mov    rbx,r8
   140003e42:	mov    DWORD PTR [rsp+0x48],eax
   140003e46:	lea    rax,[r11+0x10]
   140003e4a:	mov    rdi,r9
   140003e4d:	mov    QWORD PTR [r11-0x10],rax
   140003e51:	xor    esi,esi
   140003e53:	mov    DWORD PTR [r9],esi
   140003e56:	xor    r8d,r8d
   140003e59:	lea    r9,[r11+0x8]
   140003e5d:	mov    QWORD PTR [r11-0x18],rbx
   140003e61:	call   QWORD PTR [rip+0x21a9]        # 0x140006010
   140003e67:	test   eax,eax
   140003e69:	jne    0x140003ea6
   140003e6b:	mov    eax,DWORD PTR [rsp+0x40]
   140003e6f:	dec    eax
   140003e71:	cmp    eax,0x1
   140003e74:	jbe    0x140003e7d
   140003e76:	mov    eax,0xd
   140003e7b:	jmp    0x140003ea6
   140003e7d:	mov    ecx,DWORD PTR [rsp+0x48]
   140003e81:	test   rbx,rbx
   140003e84:	je     0x140003ea0
   140003e86:	test   ecx,ecx
   140003e88:	je     0x140003e9d
   140003e8a:	test   cl,0x1
   140003e8d:	jne    0x140003e76
   140003e8f:	mov    eax,ecx
   140003e91:	shr    rax,1
   140003e94:	cmp    WORD PTR [rbx+rax*2-0x2],si
   140003e99:	je     0x140003ea0
   140003e9b:	jmp    0x140003e76
   140003e9d:	mov    WORD PTR [rbx],si
   140003ea0:	shr    ecx,1
   140003ea2:	mov    DWORD PTR [rdi],ecx
   140003ea4:	xor    eax,eax
   140003ea6:	mov    rbx,QWORD PTR [rsp+0x50]
   140003eab:	mov    rsi,QWORD PTR [rsp+0x58]
   140003eb0:	add    rsp,0x30
   140003eb4:	pop    rdi
   140003eb5:	ret    
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140003ec1:	push   rbp
   140003ec2:	push   rsi
   140003ec3:	push   rdi
   140003ec4:	sub    rsp,0x30
   140003ec8:	xor    ebx,ebx
   140003eca:	lea    rax,[rsp+0x58]
   140003ecf:	and    DWORD PTR [rsp+0x58],ebx
   140003ed3:	xor    r9d,r9d
   140003ed6:	xor    r8d,r8d
   140003ed9:	mov    QWORD PTR [rsp+0x20],rax
   140003ede:	mov    rdi,rcx
   140003ee1:	lea    esi,[rbx+0x2]
   140003ee4:	mov    edx,esi
   140003ee6:	call   QWORD PTR [rip+0x2174]        # 0x140006060
   140003eec:	test   eax,eax
   140003eee:	jne    0x140003f52
   140003ef0:	call   QWORD PTR [rip+0x21ba]        # 0x1400060b0
   140003ef6:	cmp    eax,0x7a
   140003ef9:	jne    0x140003f30
   140003efb:	mov    edx,DWORD PTR [rsp+0x58]
   140003eff:	xor    ecx,ecx
   140003f01:	call   QWORD PTR [rip+0x2261]        # 0x140006168
   140003f07:	mov    rbx,rax
   140003f0a:	test   rax,rax
   140003f0d:	je     0x140003f48
   140003f0f:	mov    r9d,DWORD PTR [rsp+0x58]
   140003f14:	lea    rax,[rsp+0x58]
   140003f19:	mov    r8,rbx
   140003f1c:	mov    QWORD PTR [rsp+0x20],rax
   140003f21:	mov    edx,esi
   140003f23:	mov    rcx,rdi
   140003f26:	call   QWORD PTR [rip+0x2134]        # 0x140006060
   140003f2c:	test   eax,eax
   140003f2e:	jne    0x140003f52
   140003f30:	call   QWORD PTR [rip+0x217a]        # 0x1400060b0
   140003f36:	movzx  ecx,ax
   140003f39:	or     ecx,0x80070000
   140003f3f:	test   eax,eax
   140003f41:	cmovle ecx,eax
   140003f44:	test   ecx,ecx
   140003f46:	jns    0x140003f52
   140003f48:	mov    esi,0x1
   140003f4d:	jmp    0x140003ff4
   140003f52:	mov    edx,0x44
   140003f57:	xor    ecx,ecx
   140003f59:	mov    DWORD PTR [rsp+0x60],edx
   140003f5d:	call   QWORD PTR [rip+0x2205]        # 0x140006168
   140003f63:	mov    rdi,rax
   140003f66:	mov    esi,0x1
   140003f6b:	test   rax,rax
   140003f6e:	jne    0x140003f7b
   140003f70:	lea    ecx,[rax+0xe]
   140003f73:	call   QWORD PTR [rip+0x21e7]        # 0x140006160
   140003f79:	jmp    0x140003fa2
   140003f7b:	xor    edx,edx
   140003f7d:	lea    r9,[rsp+0x60]
   140003f82:	mov    r8,rax
   140003f85:	lea    ecx,[rdx+0x1a]
   140003f88:	call   QWORD PTR [rip+0x20ea]        # 0x140006078
   140003f8e:	test   eax,eax
   140003f90:	jne    0x140003f9d
   140003f92:	mov    rcx,rdi
   140003f95:	call   QWORD PTR [rip+0x21d5]        # 0x140006170
   140003f9b:	xor    edi,edi
   140003f9d:	test   rdi,rdi
   140003fa0:	jne    0x140003fb8
   140003fa2:	call   QWORD PTR [rip+0x2108]        # 0x1400060b0
   140003fa8:	movzx  ebp,ax
   140003fab:	or     ebp,0x80070000
   140003fb1:	test   eax,eax
   140003fb3:	cmovle ebp,eax
   140003fb6:	jmp    0x140003fee
   140003fb8:	xor    ebp,ebp
   140003fba:	cmp    DWORD PTR [rbx],ebp
   140003fbc:	jbe    0x140003fdb
   140003fbe:	mov    edx,ebp
   140003fc0:	mov    rcx,rdi
   140003fc3:	add    rdx,rdx
   140003fc6:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   140003fcb:	call   QWORD PTR [rip+0x20b7]        # 0x140006088
   140003fd1:	test   eax,eax
   140003fd3:	jne    0x140004012
   140003fd5:	add    ebp,esi
   140003fd7:	cmp    ebp,DWORD PTR [rbx]
   140003fd9:	jb     0x140003fbe
   140003fdb:	xor    eax,eax
   140003fdd:	xor    ebp,ebp
   140003fdf:	mov    rcx,rdi
   140003fe2:	test   eax,eax
   140003fe4:	sete   bpl
   140003fe8:	call   QWORD PTR [rip+0x2182]        # 0x140006170
   140003fee:	cmp    ebp,esi
   140003ff0:	setne  sil
   140003ff4:	test   rbx,rbx
   140003ff7:	je     0x140004002
   140003ff9:	mov    rcx,rbx
   140003ffc:	call   QWORD PTR [rip+0x216e]        # 0x140006170
   140004002:	mov    al,sil
   140004005:	mov    rbx,QWORD PTR [rsp+0x50]
   14000400a:	add    rsp,0x30
   14000400e:	pop    rdi
   14000400f:	pop    rsi
   140004010:	pop    rbp
   140004011:	ret    
   140004012:	mov    eax,esi
   140004014:	jmp    0x140003fdd
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	mov    rax,rsp
   14000401f:	mov    QWORD PTR [rax+0x10],rbx
   140004023:	mov    QWORD PTR [rax+0x18],rsi
   140004027:	mov    QWORD PTR [rax+0x20],rdi
   14000402b:	push   rbp
   14000402c:	push   r14
   14000402e:	push   r15
   140004030:	lea    rbp,[rax-0x198]
   140004037:	sub    rsp,0x280
   14000403e:	mov    rax,QWORD PTR [rip+0x5fd3]        # 0x14000a018
   140004045:	xor    rax,rsp
   140004048:	mov    QWORD PTR [rbp+0x170],rax
   14000404f:	and    QWORD PTR [rsp+0x38],0x0
   140004055:	lea    rax,[rsp+0x38]
   14000405a:	mov    r15,rcx
   14000405d:	mov    QWORD PTR [rsp+0x20],rax
   140004062:	mov    rcx,0xffffffff80000002
   140004069:	lea    rdx,[rip+0x2fd0]        # 0x140007040
   140004070:	mov    r9d,0x20019
   140004076:	xor    r8d,r8d
   140004079:	call   QWORD PTR [rip+0x1f81]        # 0x140006000
   14000407f:	test   eax,eax
   140004081:	jne    0x1400041d0
   140004087:	mov    r14,QWORD PTR [rsp+0x38]
   14000408c:	lea    rax,[rsp+0x30]
   140004091:	xor    esi,esi
   140004093:	mov    QWORD PTR [rsp+0x20],rax
   140004098:	and    QWORD PTR [rsp+0x50],rsi
   14000409d:	xor    ebx,ebx
   14000409f:	and    QWORD PTR [rsp+0x58],rsi
   1400040a4:	xor    edi,edi
   1400040a6:	xor    r9d,r9d
   1400040a9:	mov    QWORD PTR [rsp+0x48],rsi
   1400040ae:	xor    r8d,r8d
   1400040b1:	jmp    0x1400040ea
   1400040b3:	mov    eax,DWORD PTR [rsp+0x30]
   1400040b7:	mov    rcx,rbx
   1400040ba:	cmp    edi,eax
   1400040bc:	jae    0x140004111
   1400040be:	inc    eax
   1400040c0:	mov    edi,0x10
   1400040c5:	cmp    eax,edi
   1400040c7:	cmova  edi,eax
   1400040ca:	mov    edx,edi
   1400040cc:	call   QWORD PTR [rip+0x21de]        # 0x1400062b0
   1400040d2:	test   rax,rax
   1400040d5:	je     0x14000413e
   1400040d7:	lea    rcx,[rsp+0x30]
   1400040dc:	mov    rbx,rax
   1400040df:	mov    QWORD PTR [rsp+0x20],rcx
   1400040e4:	mov    r9d,edi
   1400040e7:	mov    r8,rax
   1400040ea:	mov    edx,0x1
   1400040ef:	mov    rcx,r15
   1400040f2:	call   QWORD PTR [rip+0x1f68]        # 0x140006060
   1400040f8:	test   eax,eax
   1400040fa:	je     0x1400040b3
   1400040fc:	mov    rcx,QWORD PTR [rbx]
   1400040ff:	lea    rdx,[rsp+0x40]
   140004104:	call   QWORD PTR [rip+0x1f66]        # 0x140006070
   14000410a:	mov    rcx,rbx
   14000410d:	test   eax,eax
   14000410f:	jne    0x14000414b
   140004111:	call   QWORD PTR [rip+0x2211]        # 0x140006328
   140004117:	xor    bl,bl
   140004119:	test   rsi,rsi
   14000411c:	je     0x140004127
   14000411e:	mov    rcx,rsi
   140004121:	call   QWORD PTR [rip+0x1ee1]        # 0x140006008
   140004127:	test   r14,r14
   14000412a:	je     0x1400041d2
   140004130:	mov    rcx,r14
   140004133:	call   QWORD PTR [rip+0x1ecf]        # 0x140006008
   140004139:	jmp    0x1400041d2
   14000413e:	mov    rcx,rbx
   140004141:	call   QWORD PTR [rip+0x21e1]        # 0x140006328
   140004147:	xor    edi,edi
   140004149:	jmp    0x140004156
   14000414b:	mov    rdi,QWORD PTR [rsp+0x40]
   140004150:	call   QWORD PTR [rip+0x21d2]        # 0x140006328
   140004156:	test   rdi,rdi
   140004159:	je     0x140004117
   14000415b:	and    QWORD PTR [rsp+0x30],rsi
   140004160:	lea    rax,[rsp+0x30]
   140004165:	mov    r9d,0x20019
   14000416b:	mov    QWORD PTR [rsp+0x20],rax
   140004170:	xor    r8d,r8d
   140004173:	mov    rdx,rdi
   140004176:	mov    rcx,r14
   140004179:	call   QWORD PTR [rip+0x1e81]        # 0x140006000
   14000417f:	mov    ebx,eax
   140004181:	test   eax,eax
   140004183:	jne    0x14000418f
   140004185:	mov    rsi,QWORD PTR [rsp+0x30]
   14000418a:	mov    QWORD PTR [rsp+0x48],rsi
   14000418f:	mov    rcx,rdi
   140004192:	call   QWORD PTR [rip+0x1fd8]        # 0x140006170
   140004198:	test   ebx,ebx
   14000419a:	jne    0x140004117
   1400041a0:	lea    r9,[rsp+0x30]
   1400041a5:	mov    DWORD PTR [rsp+0x30],0x104
   1400041ad:	lea    r8,[rsp+0x60]
   1400041b2:	lea    rcx,[rsp+0x48]
   1400041b7:	call   0x140003e1c
   1400041bc:	test   eax,eax
   1400041be:	jne    0x140004117
   1400041c4:	cmp    DWORD PTR [rsp+0x30],eax
   1400041c8:	seta   bl
   1400041cb:	jmp    0x140004119
   1400041d0:	xor    bl,bl
   1400041d2:	mov    al,bl
   1400041d4:	mov    rcx,QWORD PTR [rbp+0x170]
   1400041db:	xor    rcx,rsp
   1400041de:	call   0x140004aa0
   1400041e3:	lea    r11,[rsp+0x280]
   1400041eb:	mov    rbx,QWORD PTR [r11+0x28]
   1400041ef:	mov    rsi,QWORD PTR [r11+0x30]
   1400041f3:	mov    rdi,QWORD PTR [r11+0x38]
   1400041f7:	mov    rsp,r11
   1400041fa:	pop    r15
   1400041fc:	pop    r14
   1400041fe:	pop    rbp
   1400041ff:	ret    
   140004200:	int3   
   140004201:	int3   
   140004202:	int3   
   140004203:	int3   
   140004204:	int3   
   140004205:	int3   
   140004206:	int3   
   140004207:	int3   
   140004208:	mov    r11,rsp
   14000420b:	mov    QWORD PTR [r11+0x8],rbx
   14000420f:	push   rdi
   140004210:	sub    rsp,0x30
   140004214:	lea    rax,[r11+0x10]
   140004218:	xor    ebx,ebx
   14000421a:	and    QWORD PTR [r11+0x10],rbx
   14000421e:	lea    rdx,[rip+0x2efb]        # 0x140007120
   140004225:	mov    r9d,0x20019
   14000422b:	mov    QWORD PTR [r11-0x18],rax
   14000422f:	xor    r8d,r8d
   140004232:	mov    rcx,0xffffffff80000002
   140004239:	call   QWORD PTR [rip+0x1dc1]        # 0x140006000
   14000423f:	test   eax,eax
   140004241:	jne    0x14000424a
   140004243:	mov    rbx,QWORD PTR [rsp+0x48]
   140004248:	test   eax,eax
   14000424a:	sete   dil
   14000424e:	test   rbx,rbx
   140004251:	je     0x14000425c
   140004253:	mov    rcx,rbx
   140004256:	call   QWORD PTR [rip+0x1dac]        # 0x140006008
   14000425c:	mov    al,dil
   14000425f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004264:	add    rsp,0x30
   140004268:	pop    rdi
   140004269:	ret    
   14000426a:	int3   
   14000426b:	int3   
   14000426c:	int3   
   14000426d:	int3   
   14000426e:	int3   
   14000426f:	int3   
   140004270:	mov    rax,rsp
   140004273:	mov    QWORD PTR [rax+0x8],rbx
   140004277:	mov    QWORD PTR [rax+0x10],rsi
   14000427b:	mov    QWORD PTR [rax+0x18],rdi
   14000427f:	mov    QWORD PTR [rax+0x20],r14
   140004283:	push   rbp
   140004284:	lea    rbp,[rax-0x198]
   14000428b:	sub    rsp,0x290
   140004292:	mov    rax,QWORD PTR [rip+0x5d7f]        # 0x14000a018
   140004299:	xor    rax,rsp
   14000429c:	mov    QWORD PTR [rbp+0x180],rax
   1400042a3:	lea    rax,[rsp+0x50]
   1400042a8:	mov    ebx,0x20019
   1400042ad:	xor    esi,esi
   1400042af:	mov    QWORD PTR [rsp+0x20],rax
   1400042b4:	and    QWORD PTR [rsp+0x50],rsi
   1400042b9:	lea    rdx,[rip+0x2d80]        # 0x140007040
   1400042c0:	mov    r9d,ebx
   1400042c3:	xor    r8d,r8d
   1400042c6:	mov    rcx,0xffffffff80000002
   1400042cd:	call   QWORD PTR [rip+0x1d2d]        # 0x140006000
   1400042d3:	test   eax,eax
   1400042d5:	jne    0x1400043c1
   1400042db:	mov    rsi,QWORD PTR [rsp+0x50]
   1400042e0:	lea    rax,[rsp+0x40]
   1400042e5:	mov    QWORD PTR [rsp+0x38],rax
   1400042ea:	lea    r9,[rsp+0x48]
   1400042ef:	and    QWORD PTR [rsp+0x30],0x0
   1400042f5:	lea    r8,[rsp+0x70]
   1400042fa:	and    QWORD PTR [rsp+0x28],0x0
   140004300:	mov    edi,0x104
   140004305:	and    QWORD PTR [rsp+0x20],0x0
   14000430b:	xor    edx,edx
   14000430d:	mov    rcx,rsi
   140004310:	mov    DWORD PTR [rsp+0x48],edi
   140004314:	call   QWORD PTR [rip+0x1cfe]        # 0x140006018
   14000431a:	test   eax,eax
   14000431c:	jne    0x1400043c1
   140004322:	and    QWORD PTR [rsp+0x58],0x0
   140004328:	lea    rax,[rsp+0x40]
   14000432d:	and    QWORD PTR [rsp+0x60],0x0
   140004333:	lea    rdx,[rsp+0x70]
   140004338:	and    QWORD PTR [rsp+0x68],0x0
   14000433e:	mov    r9d,ebx
   140004341:	and    QWORD PTR [rsp+0x40],0x0
   140004347:	xor    r8d,r8d
   14000434a:	mov    rcx,rsi
   14000434d:	mov    QWORD PTR [rsp+0x20],rax
   140004352:	call   QWORD PTR [rip+0x1ca8]        # 0x140006000
   140004358:	test   eax,eax
   14000435a:	jne    0x1400043c1
   14000435c:	mov    r14,QWORD PTR [rsp+0x40]
   140004361:	mov    ecx,0x20c
   140004366:	mov    QWORD PTR [rsp+0x58],r14
   14000436b:	call   QWORD PTR [rip+0x201f]        # 0x140006390
   140004371:	mov    rbx,rax
   140004374:	test   rax,rax
   140004377:	je     0x1400043a6
   140004379:	lea    r9,[rsp+0x40]
   14000437e:	mov    DWORD PTR [rsp+0x40],edi
   140004382:	mov    r8,rax
   140004385:	lea    rcx,[rsp+0x58]
   14000438a:	call   0x140003e1c
   14000438f:	test   eax,eax
   140004391:	jne    0x1400043a6
   140004393:	cmp    DWORD PTR [rsp+0x40],eax
   140004397:	je     0x1400043a6
   140004399:	and    DWORD PTR [rbx+0x208],eax
   14000439f:	mov    rdi,rbx
   1400043a2:	xor    ebx,ebx
   1400043a4:	jmp    0x1400043a8
   1400043a6:	xor    edi,edi
   1400043a8:	mov    rcx,rbx
   1400043ab:	call   QWORD PTR [rip+0x1f77]        # 0x140006328
   1400043b1:	test   r14,r14
   1400043b4:	je     0x1400043c3
   1400043b6:	mov    rcx,r14
   1400043b9:	call   QWORD PTR [rip+0x1c49]        # 0x140006008
   1400043bf:	jmp    0x1400043c3
   1400043c1:	xor    edi,edi
   1400043c3:	test   rsi,rsi
   1400043c6:	je     0x1400043d1
   1400043c8:	mov    rcx,rsi
   1400043cb:	call   QWORD PTR [rip+0x1c37]        # 0x140006008
   1400043d1:	mov    rax,rdi
   1400043d4:	mov    rcx,QWORD PTR [rbp+0x180]
   1400043db:	xor    rcx,rsp
   1400043de:	call   0x140004aa0
   1400043e3:	lea    r11,[rsp+0x290]
   1400043eb:	mov    rbx,QWORD PTR [r11+0x10]
   1400043ef:	mov    rsi,QWORD PTR [r11+0x18]
   1400043f3:	mov    rdi,QWORD PTR [r11+0x20]
   1400043f7:	mov    r14,QWORD PTR [r11+0x28]
   1400043fb:	mov    rsp,r11
   1400043fe:	pop    rbp
   1400043ff:	ret    
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	mov    r11,rsp
   14000440b:	mov    QWORD PTR [r11+0x10],rdx
   14000440f:	mov    DWORD PTR [rsp+0x8],ecx
   140004413:	push   rbp
   140004414:	push   rbx
   140004415:	mov    rbp,rsp
   140004418:	sub    rsp,0x48
   14000441c:	and    QWORD PTR [rbp+0x30],0x0
   140004421:	lea    rax,[rbp+0x28]
   140004425:	and    DWORD PTR [rbp+0x20],0x0
   140004429:	lea    r8,[rip+0x2bf0]        # 0x140007020
   140004430:	mov    QWORD PTR [r11-0x28],rax
   140004434:	lea    rdx,[rip+0x2b85]        # 0x140006fc0
   14000443b:	lea    rax,[rbp+0x18]
   14000443f:	mov    DWORD PTR [rbp+0x28],0x4
   140004446:	mov    QWORD PTR [r11-0x30],rax
   14000444a:	mov    r9d,0x10000012
   140004450:	lea    rax,[rbp+0x20]
   140004454:	mov    rcx,0xffffffff80000002
   14000445b:	mov    QWORD PTR [r11-0x38],rax
   14000445f:	call   QWORD PTR [rip+0x1c2b]        # 0x140006090
   140004465:	test   eax,eax
   140004467:	jne    0x1400044a4
   140004469:	cmp    DWORD PTR [rbp+0x20],0x4
   14000446d:	jne    0x14000447c
   14000446f:	lea    ebx,[rax+0x1]
   140004472:	cmp    DWORD PTR [rbp+0x18],ebx
   140004475:	ja     0x1400044a4
   140004477:	cmp    DWORD PTR [rbp+0x18],ebx
   14000447a:	jmp    0x14000449d
   14000447c:	cmp    DWORD PTR [rbp+0x28],0x4
   140004480:	jne    0x1400044a4
   140004482:	movzx  eax,WORD PTR [rbp+0x18]
   140004486:	mov    ebx,0x1
   14000448b:	sub    ax,0x30
   14000448f:	cmp    ax,bx
   140004492:	ja     0x1400044a4
   140004494:	lea    ecx,[rbx+0x30]
   140004497:	xor    eax,eax
   140004499:	cmp    cx,WORD PTR [rbp+0x18]
   14000449d:	sete   al
   1400044a0:	test   eax,eax
   1400044a2:	jne    0x1400044b8
   1400044a4:	cmp    QWORD PTR [rbp+0x30],0x0
   1400044a9:	je     0x1400044d0
   1400044ab:	mov    ecx,0x4df
   1400044b0:	call   QWORD PTR [rip+0x1caa]        # 0x140006160
   1400044b6:	xor    ebx,ebx
   1400044b8:	mov    rcx,QWORD PTR [rbp+0x30]
   1400044bc:	test   rcx,rcx
   1400044bf:	je     0x1400044c7
   1400044c1:	call   QWORD PTR [rip+0x1bf1]        # 0x1400060b8
   1400044c7:	mov    eax,ebx
   1400044c9:	add    rsp,0x48
   1400044cd:	pop    rbx
   1400044ce:	pop    rbp
   1400044cf:	ret    
   1400044d0:	call   QWORD PTR [rip+0x1ca2]        # 0x140006178
   1400044d6:	lea    r8,[rbp+0x30]
   1400044da:	mov    edx,0x20028
   1400044df:	mov    rcx,rax
   1400044e2:	call   QWORD PTR [rip+0x1b60]        # 0x140006048
   1400044e8:	test   eax,eax
   1400044ea:	je     0x1400044b6
   1400044ec:	mov    rbx,QWORD PTR [rbp+0x30]
   1400044f0:	mov    rcx,rbx
   1400044f3:	call   0x14000401c
   1400044f8:	test   al,al
   1400044fa:	je     0x140004503
   1400044fc:	mov    ebx,0x2
   140004501:	jmp    0x1400044b8
   140004503:	lea    rdx,[rbp+0x18]
   140004507:	lea    rcx,[rip+0x2b92]        # 0x1400070a0
   14000450e:	call   QWORD PTR [rip+0x1c8c]        # 0x1400061a0
   140004514:	test   eax,eax
   140004516:	jne    0x1400044b6
   140004518:	cmp    DWORD PTR [rbp+0x18],eax
   14000451b:	je     0x1400044b6
   14000451d:	call   0x140004208
   140004522:	test   al,al
   140004524:	je     0x1400044b6
   140004526:	mov    rcx,rbx
   140004529:	call   0x140003ebc
   14000452e:	test   al,al
   140004530:	je     0x14000453c
   140004532:	mov    ebx,0x4
   140004537:	jmp    0x1400044b8
   14000453c:	mov    ebx,0x3
   140004541:	jmp    0x1400044b8
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	rex push rbx
   14000454e:	sub    rsp,0x20
   140004552:	mov    rbx,rcx
   140004555:	call   0x140004bca
   14000455a:	lea    rax,[rip+0x208f]        # 0x1400065f0
   140004561:	mov    QWORD PTR [rbx],rax
   140004564:	mov    rax,rbx
   140004567:	add    rsp,0x20
   14000456b:	pop    rbx
   14000456c:	ret    
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	int3   
   140004571:	int3   
   140004572:	int3   
   140004573:	int3   
   140004574:	rex push rbx
   140004576:	sub    rsp,0x20
   14000457a:	mov    r8d,0x1
   140004580:	lea    rdx,[rip+0x5a79]        # 0x14000a000
   140004587:	mov    rbx,rcx
   14000458a:	call   0x140004bbe
   14000458f:	lea    rax,[rip+0x205a]        # 0x1400065f0
   140004596:	mov    QWORD PTR [rbx],rax
   140004599:	mov    rax,rbx
   14000459c:	add    rsp,0x20
   1400045a0:	pop    rbx
   1400045a1:	ret    
   1400045a2:	int3   
   1400045a3:	int3   
   1400045a4:	int3   
   1400045a5:	int3   
   1400045a6:	int3   
   1400045a7:	int3   
   1400045a8:	lea    rax,[rip+0x2041]        # 0x1400065f0
   1400045af:	mov    QWORD PTR [rcx],rax
   1400045b2:	jmp    0x140004bd6
   1400045b7:	int3   
   1400045b8:	int3   
   1400045b9:	int3   
   1400045ba:	int3   
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	rex push rbx
   1400045c2:	sub    rsp,0x40
   1400045c6:	mov    rbx,rcx
   1400045c9:	jmp    0x1400045da
   1400045cb:	mov    rcx,rbx
   1400045ce:	call   0x140004bfc
   1400045d3:	test   eax,eax
   1400045d5:	je     0x1400045eb
   1400045d7:	mov    rcx,rbx
   1400045da:	call   QWORD PTR [rip+0x1db0]        # 0x140006390
   1400045e0:	test   rax,rax
   1400045e3:	je     0x1400045cb
   1400045e5:	add    rsp,0x40
   1400045e9:	pop    rbx
   1400045ea:	ret    
   1400045eb:	mov    eax,DWORD PTR [rip+0x5aa7]        # 0x14000a098
   1400045f1:	test   al,0x1
   1400045f3:	jne    0x140004616
   1400045f5:	or     eax,0x1
   1400045f8:	lea    rcx,[rip+0x5a81]        # 0x14000a080
   1400045ff:	mov    DWORD PTR [rip+0x5a93],eax        # 0x14000a098
   140004605:	call   0x140004574
   14000460a:	lea    rcx,[rip+0x123f]        # 0x140005850
   140004611:	call   0x140004ba0
   140004616:	lea    rdx,[rip+0x5a63]        # 0x14000a080
   14000461d:	lea    rcx,[rsp+0x20]
   140004622:	call   0x14000454c
   140004627:	lea    rdx,[rip+0x3eb2]        # 0x1400084e0
   14000462e:	lea    rcx,[rsp+0x20]
   140004633:	call   0x140004c08
   140004638:	int3   
   140004639:	int3   
   14000463a:	int3   
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	rex.W jmp QWORD PTR [rip+0x1ce1]        # 0x140006328
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    QWORD PTR [rsp+0x8],rbx
   140004655:	push   rdi
   140004656:	sub    rsp,0x20
   14000465a:	lea    rax,[rip+0x1f8f]        # 0x1400065f0
   140004661:	mov    ebx,edx
   140004663:	mov    QWORD PTR [rcx],rax
   140004666:	mov    rdi,rcx
   140004669:	call   0x140004bd6
   14000466e:	test   bl,0x1
   140004671:	je     0x14000467c
   140004673:	mov    rcx,rdi
   140004676:	call   QWORD PTR [rip+0x1cac]        # 0x140006328
   14000467c:	mov    rax,rdi
   14000467f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004684:	add    rsp,0x20
   140004688:	pop    rdi
   140004689:	ret    
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	sub    rsp,0x48
   140004694:	mov    rdx,rcx
   140004697:	lea    rcx,[rsp+0x20]
   14000469c:	call   0x14000454c
   1400046a1:	lea    rdx,[rip+0x3e38]        # 0x1400084e0
   1400046a8:	lea    rcx,[rsp+0x20]
   1400046ad:	call   0x140004c08
   1400046b2:	int3   
   1400046b3:	int3   
   1400046b4:	int3   
   1400046b5:	int3   
   1400046b6:	int3   
   1400046b7:	int3   
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	sub    rsp,0x28
   1400046c4:	mov    eax,0x5a4d
   1400046c9:	cmp    WORD PTR [rip+0xffffffffffffb930],ax        # 0x140000000
   1400046d0:	je     0x1400046d6
   1400046d2:	xor    eax,eax
   1400046d4:	jmp    0x140004725
   1400046d6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb95f]        # 0x14000003c
   1400046dd:	lea    rax,[rip+0xffffffffffffb91c]        # 0x140000000
   1400046e4:	add    rcx,rax
   1400046e7:	cmp    DWORD PTR [rcx],0x4550
   1400046ed:	jne    0x1400046d2
   1400046ef:	movzx  eax,WORD PTR [rcx+0x18]
   1400046f3:	cmp    eax,0x10b
   1400046f8:	je     0x140004714
   1400046fa:	cmp    eax,0x20b
   1400046ff:	jne    0x1400046d2
   140004701:	xor    eax,eax
   140004703:	cmp    DWORD PTR [rcx+0x84],0xe
   14000470a:	jbe    0x140004725
   14000470c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004712:	jmp    0x140004722
   140004714:	xor    eax,eax
   140004716:	cmp    DWORD PTR [rcx+0x74],0xe
   14000471a:	jbe    0x140004725
   14000471c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004722:	setne  al
   140004725:	mov    ecx,0x2
   14000472a:	mov    DWORD PTR [rip+0x5990],eax        # 0x14000a0c0
   140004730:	call   0x140004d28
   140004735:	mov    ecx,eax
   140004737:	call   QWORD PTR [rip+0x1ba3]        # 0x1400062e0
   14000473d:	mov    rcx,QWORD PTR [rip+0x1b5c]        # 0x1400062a0
   140004744:	or     rax,0xffffffffffffffff
   140004748:	mov    QWORD PTR [rip+0x5f51],rax        # 0x14000a6a0
   14000474f:	mov    QWORD PTR [rip+0x5f52],rax        # 0x14000a6a8
   140004756:	mov    eax,DWORD PTR [rip+0x5978]        # 0x14000a0d4
   14000475c:	mov    DWORD PTR [rcx],eax
   14000475e:	mov    rcx,QWORD PTR [rip+0x1bd3]        # 0x140006338
   140004765:	mov    eax,DWORD PTR [rip+0x595d]        # 0x14000a0c8
   14000476b:	mov    DWORD PTR [rcx],eax
   14000476d:	call   0x140004d80
   140004772:	cmp    DWORD PTR [rip+0x5897],0x0        # 0x14000a010
   140004779:	jne    0x140004788
   14000477b:	lea    rcx,[rip+0x5fe]        # 0x140004d80
   140004782:	call   QWORD PTR [rip+0x1b40]        # 0x1400062c8
   140004788:	xor    eax,eax
   14000478a:	add    rsp,0x28
   14000478e:	ret    
   14000478f:	int3   
   140004790:	int3   
   140004791:	int3   
   140004792:	int3   
   140004793:	int3   
   140004794:	int3   
   140004795:	int3   
   140004796:	int3   
   140004797:	int3   
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	sub    rsp,0x38
   1400047a4:	mov    eax,DWORD PTR [rip+0x5926]        # 0x14000a0d0
   1400047aa:	lea    r8,[rip+0x5907]        # 0x14000a0b8
   1400047b1:	mov    r9d,DWORD PTR [rip+0x5914]        # 0x14000a0cc
   1400047b8:	lea    rdx,[rip+0x58f1]        # 0x14000a0b0
   1400047bf:	mov    DWORD PTR [rip+0x58ff],eax        # 0x14000a0c4
   1400047c5:	lea    rcx,[rip+0x58dc]        # 0x14000a0a8
   1400047cc:	lea    rax,[rip+0x58f1]        # 0x14000a0c4
   1400047d3:	mov    QWORD PTR [rsp+0x20],rax
   1400047d8:	call   QWORD PTR [rip+0x1b8a]        # 0x140006368
   1400047de:	mov    DWORD PTR [rip+0x58c8],eax        # 0x14000a0ac
   1400047e4:	add    rsp,0x38
   1400047e8:	ret    
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400047fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400047ff:	push   r12
   140004801:	push   r14
   140004803:	push   r15
   140004805:	sub    rsp,0xb0
   14000480c:	xor    r15d,r15d
   14000480f:	mov    DWORD PTR [rsp+0x20],r15d
   140004814:	lea    rcx,[rsp+0x40]
   140004819:	call   QWORD PTR [rip+0x18f9]        # 0x140006118
   14000481f:	nop
   140004820:	mov    rax,QWORD PTR gs:0x30
   140004829:	mov    rbx,QWORD PTR [rax+0x8]
   14000482d:	mov    r14d,r15d
   140004830:	xor    eax,eax
   140004832:	lock cmpxchg QWORD PTR [rip+0x5e55],rbx        # 0x14000a690
   14000483b:	je     0x140004859
   14000483d:	cmp    rax,rbx
   140004840:	jne    0x14000484c
   140004842:	mov    edi,0x1
   140004847:	mov    r14d,edi
   14000484a:	jmp    0x14000485e
   14000484c:	mov    ecx,0x3e8
   140004851:	call   QWORD PTR [rip+0x18a1]        # 0x1400060f8
   140004857:	jmp    0x140004830
   140004859:	mov    edi,0x1
   14000485e:	mov    eax,DWORD PTR [rip+0x5e34]        # 0x14000a698
   140004864:	cmp    eax,edi
   140004866:	jne    0x140004876
   140004868:	mov    esi,0x1f
   14000486d:	mov    ecx,esi
   14000486f:	call   0x140004d74
   140004874:	jmp    0x1400048e7
   140004876:	mov    eax,DWORD PTR [rip+0x5e1c]        # 0x14000a698
   14000487c:	test   eax,eax
   14000487e:	jne    0x1400048dc
   140004880:	mov    DWORD PTR [rip+0x5e12],edi        # 0x14000a698
   140004886:	lea    r12,[rip+0x1be3]        # 0x140006470
   14000488d:	lea    rbx,[rip+0x1bc4]        # 0x140006458
   140004894:	mov    QWORD PTR [rsp+0x30],rbx
   140004899:	mov    eax,r15d
   14000489c:	mov    DWORD PTR [rsp+0x24],eax
   1400048a0:	cmp    rbx,r12
   1400048a3:	jae    0x1400048ce
   1400048a5:	test   eax,eax
   1400048a7:	jne    0x1400048d2
   1400048a9:	mov    rsi,QWORD PTR [rbx]
   1400048ac:	test   rsi,rsi
   1400048af:	je     0x1400048c3
   1400048b1:	mov    rcx,rsi
   1400048b4:	mov    rax,QWORD PTR [rip+0x1b6d]        # 0x140006428
   1400048bb:	call   rax
   1400048bd:	call   rsi
   1400048bf:	mov    DWORD PTR [rsp+0x24],eax
   1400048c3:	add    rbx,0x8
   1400048c7:	mov    QWORD PTR [rsp+0x30],rbx
   1400048cc:	jmp    0x1400048a0
   1400048ce:	test   eax,eax
   1400048d0:	je     0x1400048e2
   1400048d2:	mov    eax,0xff
   1400048d7:	jmp    0x140004a43
   1400048dc:	mov    DWORD PTR [rip+0x57be],edi        # 0x14000a0a0
   1400048e2:	mov    esi,0x1f
   1400048e7:	mov    eax,DWORD PTR [rip+0x5dab]        # 0x14000a698
   1400048ed:	cmp    eax,edi
   1400048ef:	jne    0x14000490e
   1400048f1:	lea    rdx,[rip+0x1b58]        # 0x140006450
   1400048f8:	lea    rcx,[rip+0x1b39]        # 0x140006438
   1400048ff:	call   0x140004f4a
   140004904:	mov    DWORD PTR [rip+0x5d8a],0x2        # 0x14000a698
   14000490e:	test   r14d,r14d
   140004911:	jne    0x14000491d
   140004913:	mov    rax,r15
   140004916:	xchg   QWORD PTR [rip+0x5d73],rax        # 0x14000a690
   14000491d:	cmp    QWORD PTR [rip+0x5d8c],r15        # 0x14000a6b0
   140004924:	je     0x140004954
   140004926:	lea    rcx,[rip+0x5d83]        # 0x14000a6b0
   14000492d:	call   0x140004de0
   140004932:	test   eax,eax
   140004934:	je     0x140004954
   140004936:	mov    rbx,QWORD PTR [rip+0x5d73]        # 0x14000a6b0
   14000493d:	mov    rcx,rbx
   140004940:	mov    rax,QWORD PTR [rip+0x1ae1]        # 0x140006428
   140004947:	call   rax
   140004949:	xor    r8d,r8d
   14000494c:	lea    edx,[r8+0x2]
   140004950:	xor    ecx,ecx
   140004952:	call   rbx
   140004954:	mov    rax,QWORD PTR [rip+0x194d]        # 0x1400062a8
   14000495b:	mov    rdx,QWORD PTR [rax]
   14000495e:	test   rdx,rdx
   140004961:	jne    0x14000496d
   140004963:	mov    eax,0xff
   140004968:	jmp    0x140004a43
   14000496d:	mov    QWORD PTR [rsp+0x28],rdx
   140004972:	mov    ecx,DWORD PTR [rsp+0x20]
   140004976:	cmp    WORD PTR [rdx],0x20
   14000497a:	ja     0x1400049f4
   14000497c:	cmp    WORD PTR [rdx],r15w
   140004980:	je     0x140004986
   140004982:	test   ecx,ecx
   140004984:	jne    0x1400049f4
   140004986:	movzx  eax,WORD PTR [rdx]
   140004989:	sub    ax,di
   14000498c:	cmp    ax,si
   14000498f:	ja     0x14000499c
   140004991:	add    rdx,0x2
   140004995:	mov    QWORD PTR [rsp+0x28],rdx
   14000499a:	jmp    0x140004986
   14000499c:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400049a0:	movzx  eax,WORD PTR [rsp+0x80]
   1400049a8:	mov    r9d,0xa
   1400049ae:	and    cl,dil
   1400049b1:	cmovne r9d,eax
   1400049b5:	mov    r8,rdx
   1400049b8:	xor    edx,edx
   1400049ba:	lea    rcx,[rip+0xffffffffffffb63f]        # 0x140000000
   1400049c1:	call   0x140003b5c
   1400049c6:	mov    DWORD PTR [rip+0x56d0],eax        # 0x14000a09c
   1400049cc:	cmp    DWORD PTR [rip+0x56ed],r15d        # 0x14000a0c0
   1400049d3:	jne    0x1400049dd
   1400049d5:	mov    ecx,eax
   1400049d7:	call   QWORD PTR [rip+0x19ab]        # 0x140006388
   1400049dd:	cmp    DWORD PTR [rip+0x56bc],r15d        # 0x14000a0a0
   1400049e4:	jne    0x1400049f2
   1400049e6:	call   QWORD PTR [rip+0x18e4]        # 0x1400062d0
   1400049ec:	mov    eax,DWORD PTR [rip+0x56aa]        # 0x14000a09c
   1400049f2:	jmp    0x140004a43
   1400049f4:	cmp    WORD PTR [rdx],0x22
   1400049f8:	jne    0x140004a08
   1400049fa:	mov    eax,r15d
   1400049fd:	test   ecx,ecx
   1400049ff:	sete   al
   140004a02:	mov    ecx,eax
   140004a04:	mov    DWORD PTR [rsp+0x20],eax
   140004a08:	add    rdx,0x2
   140004a0c:	mov    QWORD PTR [rsp+0x28],rdx
   140004a11:	jmp    0x140004976
   140004a16:	mov    DWORD PTR [rip+0x5680],eax        # 0x14000a09c
   140004a1c:	cmp    DWORD PTR [rip+0x569d],0x0        # 0x14000a0c0
   140004a23:	jne    0x140004a2e
   140004a25:	mov    ecx,eax
   140004a27:	call   QWORD PTR [rip+0x18ab]        # 0x1400062d8
   140004a2d:	int3   
   140004a2e:	cmp    DWORD PTR [rip+0x566b],0x0        # 0x14000a0a0
   140004a35:	jne    0x140004a43
   140004a37:	call   QWORD PTR [rip+0x1893]        # 0x1400062d0
   140004a3d:	mov    eax,DWORD PTR [rip+0x5659]        # 0x14000a09c
   140004a43:	lea    r11,[rsp+0xb0]
   140004a4b:	mov    rbx,QWORD PTR [r11+0x20]
   140004a4f:	mov    rsi,QWORD PTR [r11+0x28]
   140004a53:	mov    rdi,QWORD PTR [r11+0x30]
   140004a57:	mov    rsp,r11
   140004a5a:	pop    r15
   140004a5c:	pop    r14
   140004a5e:	pop    r12
   140004a60:	ret    
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	sub    rsp,0x28
   140004a74:	call   0x140004e74
   140004a79:	add    rsp,0x28
   140004a7d:	jmp    0x1400047f0
   140004a82:	int3   
   140004a83:	int3   
   140004a84:	int3   
   140004a85:	int3   
   140004a86:	int3   
   140004a87:	int3   
   140004a88:	int3   
   140004a89:	int3   
   140004a8a:	int3   
   140004a8b:	int3   
   140004a8c:	int3   
   140004a8d:	int3   
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	int3   
   140004a91:	int3   
   140004a92:	int3   
   140004a93:	int3   
   140004a94:	int3   
   140004a95:	int3   
   140004a96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004aa0:	cmp    rcx,QWORD PTR [rip+0x5571]        # 0x14000a018
   140004aa7:	jne    0x140004ab9
   140004aa9:	rol    rcx,0x10
   140004aad:	test   cx,0xffff
   140004ab2:	jne    0x140004ab5
   140004ab4:	ret    
   140004ab5:	ror    rcx,0x10
   140004ab9:	jmp    0x140004fa0
   140004abe:	int3   
   140004abf:	int3   
   140004ac0:	int3   
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	sub    rsp,0x38
   140004ac8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004ad1:	call   0x1400045c0
   140004ad6:	nop
   140004ad7:	jmp    0x140004ade
   140004ad9:	mov    rax,QWORD PTR [rsp+0x50]
   140004ade:	add    rsp,0x38
   140004ae2:	ret    
   140004ae3:	int3   
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	jmp    QWORD PTR [rip+0x1882]        # 0x140006378
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	mov    QWORD PTR [rsp+0x8],rbx
   140004b01:	push   rdi
   140004b02:	sub    rsp,0x20
   140004b06:	mov    rdi,rcx
   140004b09:	mov    rax,QWORD PTR [rip+0x5b98]        # 0x14000a6a8
   140004b10:	mov    QWORD PTR [rsp+0x38],rax
   140004b15:	cmp    rax,0xffffffffffffffff
   140004b19:	jne    0x140004b32
   140004b1b:	mov    rbx,QWORD PTR [rip+0x181e]        # 0x140006340
   140004b22:	mov    rcx,rbx
   140004b25:	call   QWORD PTR [rip+0x18fd]        # 0x140006428
   140004b2b:	mov    rcx,rdi
   140004b2e:	call   rbx
   140004b30:	jmp    0x140004b8f
   140004b32:	mov    ecx,0x8
   140004b37:	call   0x140005124
   140004b3c:	nop
   140004b3d:	mov    rax,QWORD PTR [rip+0x5b64]        # 0x14000a6a8
   140004b44:	mov    QWORD PTR [rsp+0x38],rax
   140004b49:	mov    rax,QWORD PTR [rip+0x5b50]        # 0x14000a6a0
   140004b50:	mov    QWORD PTR [rsp+0x40],rax
   140004b55:	lea    r8,[rsp+0x40]
   140004b5a:	lea    rdx,[rsp+0x38]
   140004b5f:	mov    rcx,rdi
   140004b62:	call   0x14000513c
   140004b67:	mov    rbx,rax
   140004b6a:	mov    rdx,QWORD PTR [rsp+0x38]
   140004b6f:	mov    QWORD PTR [rip+0x5b32],rdx        # 0x14000a6a8
   140004b76:	mov    rdx,QWORD PTR [rsp+0x40]
   140004b7b:	mov    QWORD PTR [rip+0x5b1e],rdx        # 0x14000a6a0
   140004b82:	mov    ecx,0x8
   140004b87:	call   0x140005130
   140004b8c:	mov    rax,rbx
   140004b8f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b94:	add    rsp,0x20
   140004b98:	pop    rdi
   140004b99:	ret    
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	sub    rsp,0x28
   140004ba4:	call   0x140004afc
   140004ba9:	neg    rax
   140004bac:	sbb    eax,eax
   140004bae:	neg    eax
   140004bb0:	dec    eax
   140004bb2:	add    rsp,0x28
   140004bb6:	ret    
   140004bb7:	int3   
   140004bb8:	int3   
   140004bb9:	int3   
   140004bba:	int3   
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	jmp    QWORD PTR [rip+0x175c]        # 0x140006320
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	jmp    QWORD PTR [rip+0x1748]        # 0x140006318
   140004bd0:	int3   
   140004bd1:	int3   
   140004bd2:	int3   
   140004bd3:	int3   
   140004bd4:	int3   
   140004bd5:	int3   
   140004bd6:	jmp    QWORD PTR [rip+0x1734]        # 0x140006310
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	int3   
   140004be1:	int3   
   140004be2:	int3   
   140004be3:	int3   
   140004be4:	int3   
   140004be5:	int3   
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	int3   
   140004be9:	int3   
   140004bea:	int3   
   140004beb:	int3   
   140004bec:	int3   
   140004bed:	int3   
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	jmp    QWORD PTR [rip+0x1712]        # 0x140006308
   140004bf6:	int3   
   140004bf7:	int3   
   140004bf8:	int3   
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	jmp    QWORD PTR [rip+0x16fe]        # 0x140006300
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	jmp    QWORD PTR [rip+0x16ea]        # 0x1400062f8
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	int3   
   140004c11:	int3   
   140004c12:	int3   
   140004c13:	int3   
   140004c14:	int3   
   140004c15:	int3   
   140004c16:	int3   
   140004c17:	int3   
   140004c18:	int3   
   140004c19:	int3   
   140004c1a:	int3   
   140004c1b:	int3   
   140004c1c:	int3   
   140004c1d:	int3   
   140004c1e:	int3   
   140004c1f:	int3   
   140004c20:	mov    QWORD PTR [rsp+0x8],rbx
   140004c25:	push   rdi
   140004c26:	sub    rsp,0x20
   140004c2a:	mov    ebx,edx
   140004c2c:	mov    rdi,rcx
   140004c2f:	call   QWORD PTR [rip+0x174b]        # 0x140006380
   140004c35:	test   bl,0x1
   140004c38:	je     0x140004c42
   140004c3a:	mov    rcx,rdi
   140004c3d:	call   0x140004640
   140004c42:	mov    rax,rdi
   140004c45:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c4a:	add    rsp,0x20
   140004c4e:	pop    rdi
   140004c4f:	ret    
   140004c50:	int3   
   140004c51:	int3   
   140004c52:	int3   
   140004c53:	int3   
   140004c54:	int3   
   140004c55:	int3   
   140004c56:	int3   
   140004c57:	int3   
   140004c58:	int3   
   140004c59:	int3   
   140004c5a:	int3   
   140004c5b:	int3   
   140004c5c:	int3   
   140004c5d:	int3   
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	sub    rsp,0x28
   140004c64:	mov    rax,QWORD PTR [rcx]
   140004c67:	cmp    DWORD PTR [rax],0xe06d7363
   140004c6d:	jne    0x140004c92
   140004c6f:	cmp    DWORD PTR [rax+0x18],0x4
   140004c73:	jne    0x140004c92
   140004c75:	mov    ecx,DWORD PTR [rax+0x20]
   140004c78:	lea    eax,[rcx-0x19930520]
   140004c7e:	cmp    eax,0x2
   140004c81:	jbe    0x140004c8b
   140004c83:	cmp    ecx,0x1994000
   140004c89:	jne    0x140004c92
   140004c8b:	call   QWORD PTR [rip+0x16df]        # 0x140006370
   140004c91:	int3   
   140004c92:	xor    eax,eax
   140004c94:	add    rsp,0x28
   140004c98:	ret    
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	int3   
   140004c9d:	int3   
   140004c9e:	int3   
   140004c9f:	int3   
   140004ca0:	sub    rsp,0x28
   140004ca4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004c60
   140004cab:	call   QWORD PTR [rip+0x146f]        # 0x140006120
   140004cb1:	xor    eax,eax
   140004cb3:	add    rsp,0x28
   140004cb7:	ret    
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	jmp    QWORD PTR [rip+0x162c]        # 0x1400062f0
   140004cc4:	int3   
   140004cc5:	int3   
   140004cc6:	int3   
   140004cc7:	int3   
   140004cc8:	int3   
   140004cc9:	int3   
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	sub    rsp,0x18
   140004cd0:	xor    edx,edx
   140004cd2:	lea    rax,[rcx-0x1]
   140004cd6:	cmp    rax,0xfffffffffffffffd
   140004cda:	ja     0x140004d18
   140004cdc:	mov    eax,0x5a4d
   140004ce1:	cmp    WORD PTR [rcx],ax
   140004ce4:	jne    0x140004d10
   140004ce6:	cmp    DWORD PTR [rcx+0x3c],edx
   140004ce9:	jl     0x140004d10
   140004ceb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140004cf2:	jae    0x140004d10
   140004cf4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140004cf8:	add    rax,rcx
   140004cfb:	mov    QWORD PTR [rsp],rax
   140004cff:	cmp    DWORD PTR [rax],0x4550
   140004d05:	cmovne rax,rdx
   140004d09:	mov    rdx,rax
   140004d0c:	mov    QWORD PTR [rsp],rax
   140004d10:	jmp    0x140004d18
   140004d12:	xor    edx,edx
   140004d14:	mov    QWORD PTR [rsp],rdx
   140004d18:	mov    rax,rdx
   140004d1b:	add    rsp,0x18
   140004d1f:	ret    
   140004d20:	int3   
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	rex push rbx
   140004d2a:	sub    rsp,0x20
   140004d2e:	mov    ebx,ecx
   140004d30:	xor    ecx,ecx
   140004d32:	call   QWORD PTR [rip+0x13f0]        # 0x140006128
   140004d38:	test   rax,rax
   140004d3b:	je     0x140004d65
   140004d3d:	mov    rcx,rax
   140004d40:	call   0x140004ccc
   140004d45:	test   rax,rax
   140004d48:	je     0x140004d65
   140004d4a:	mov    ecx,0x2
   140004d4f:	cmp    WORD PTR [rax+0x5c],cx
   140004d53:	jne    0x140004d59
   140004d55:	mov    eax,ecx
   140004d57:	jmp    0x140004d67
   140004d59:	cmp    WORD PTR [rax+0x5c],0x3
   140004d5e:	mov    eax,0x1
   140004d63:	je     0x140004d67
   140004d65:	mov    eax,ebx
   140004d67:	add    rsp,0x20
   140004d6b:	pop    rbx
   140004d6c:	ret    
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	int3   
   140004d71:	int3   
   140004d72:	int3   
   140004d73:	int3   
   140004d74:	jmp    QWORD PTR [rip+0x156e]        # 0x1400062e8
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	xor    eax,eax
   140004d82:	ret    
   140004d83:	int3   
   140004d84:	int3   
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004d94:	xor    r9d,r9d
   140004d97:	add    r8,rcx
   140004d9a:	mov    r10,rdx
   140004d9d:	movzx  eax,WORD PTR [r8+0x14]
   140004da2:	movzx  r11d,WORD PTR [r8+0x6]
   140004da7:	add    rax,0x18
   140004dab:	add    rax,r8
   140004dae:	test   r11d,r11d
   140004db1:	je     0x140004dd1
   140004db3:	mov    edx,DWORD PTR [rax+0xc]
   140004db6:	cmp    r10,rdx
   140004db9:	jb     0x140004dc5
   140004dbb:	mov    ecx,DWORD PTR [rax+0x8]
   140004dbe:	add    ecx,edx
   140004dc0:	cmp    r10,rcx
   140004dc3:	jb     0x140004dd3
   140004dc5:	inc    r9d
   140004dc8:	add    rax,0x28
   140004dcc:	cmp    r9d,r11d
   140004dcf:	jb     0x140004db3
   140004dd1:	xor    eax,eax
   140004dd3:	ret    
   140004dd4:	int3   
   140004dd5:	int3   
   140004dd6:	int3   
   140004dd7:	int3   
   140004dd8:	int3   
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	mov    QWORD PTR [rsp+0x8],rbx
   140004de5:	push   rdi
   140004de6:	sub    rsp,0x20
   140004dea:	mov    rbx,rcx
   140004ded:	lea    rdi,[rip+0xffffffffffffb20c]        # 0x140000000
   140004df4:	mov    rcx,rdi
   140004df7:	call   0x140004e40
   140004dfc:	test   eax,eax
   140004dfe:	je     0x140004e22
   140004e00:	sub    rbx,rdi
   140004e03:	mov    rdx,rbx
   140004e06:	mov    rcx,rdi
   140004e09:	call   0x140004d90
   140004e0e:	test   rax,rax
   140004e11:	je     0x140004e22
   140004e13:	mov    eax,DWORD PTR [rax+0x24]
   140004e16:	shr    eax,0x1f
   140004e19:	not    eax
   140004e1b:	and    eax,0x1
   140004e1e:	jmp    0x140004e22
   140004e20:	xor    eax,eax
   140004e22:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e27:	add    rsp,0x20
   140004e2b:	pop    rdi
   140004e2c:	ret    
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	int3   
   140004e31:	int3   
   140004e32:	int3   
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	mov    rax,rcx
   140004e43:	mov    ecx,0x5a4d
   140004e48:	cmp    WORD PTR [rax],cx
   140004e4b:	je     0x140004e50
   140004e4d:	xor    eax,eax
   140004e4f:	ret    
   140004e50:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004e54:	add    rcx,rax
   140004e57:	xor    eax,eax
   140004e59:	cmp    DWORD PTR [rcx],0x4550
   140004e5f:	jne    0x140004e6d
   140004e61:	mov    edx,0x20b
   140004e66:	cmp    WORD PTR [rcx+0x18],dx
   140004e6a:	sete   al
   140004e6d:	ret    
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	int3   
   140004e71:	int3   
   140004e72:	int3   
   140004e73:	int3   
   140004e74:	mov    QWORD PTR [rsp+0x20],rbx
   140004e79:	push   rbp
   140004e7a:	mov    rbp,rsp
   140004e7d:	sub    rsp,0x20
   140004e81:	and    QWORD PTR [rbp+0x18],0x0
   140004e86:	movabs rbx,0x2b992ddfa232
   140004e90:	mov    rax,QWORD PTR [rip+0x5181]        # 0x14000a018
   140004e97:	cmp    rax,rbx
   140004e9a:	jne    0x140004f2f
   140004ea0:	lea    rcx,[rbp+0x18]
   140004ea4:	call   QWORD PTR [rip+0x1296]        # 0x140006140
   140004eaa:	mov    rax,QWORD PTR [rbp+0x18]
   140004eae:	mov    QWORD PTR [rbp+0x10],rax
   140004eb2:	call   QWORD PTR [rip+0x1220]        # 0x1400060d8
   140004eb8:	mov    eax,eax
   140004eba:	xor    QWORD PTR [rbp+0x10],rax
   140004ebe:	call   QWORD PTR [rip+0x1274]        # 0x140006138
   140004ec4:	mov    eax,eax
   140004ec6:	xor    QWORD PTR [rbp+0x10],rax
   140004eca:	call   QWORD PTR [rip+0x1278]        # 0x140006148
   140004ed0:	mov    eax,eax
   140004ed2:	shl    rax,0x18
   140004ed6:	xor    QWORD PTR [rbp+0x10],rax
   140004eda:	call   QWORD PTR [rip+0x1268]        # 0x140006148
   140004ee0:	mov    eax,eax
   140004ee2:	lea    rcx,[rbp+0x10]
   140004ee6:	xor    rax,QWORD PTR [rbp+0x10]
   140004eea:	xor    rax,rcx
   140004eed:	lea    rcx,[rbp+0x20]
   140004ef1:	mov    QWORD PTR [rbp+0x10],rax
   140004ef5:	call   QWORD PTR [rip+0x1235]        # 0x140006130
   140004efb:	mov    eax,DWORD PTR [rbp+0x20]
   140004efe:	movabs rcx,0xffffffffffff
   140004f08:	shl    rax,0x20
   140004f0c:	xor    rax,QWORD PTR [rbp+0x20]
   140004f10:	xor    rax,QWORD PTR [rbp+0x10]
   140004f14:	and    rax,rcx
   140004f17:	movabs rcx,0x2b992ddfa233
   140004f21:	cmp    rax,rbx
   140004f24:	cmove  rax,rcx
   140004f28:	mov    QWORD PTR [rip+0x50e9],rax        # 0x14000a018
   140004f2f:	mov    rbx,QWORD PTR [rsp+0x48]
   140004f34:	not    rax
   140004f37:	mov    QWORD PTR [rip+0x50e2],rax        # 0x14000a020
   140004f3e:	add    rsp,0x20
   140004f42:	pop    rbp
   140004f43:	ret    
   140004f44:	int3   
   140004f45:	int3   
   140004f46:	int3   
   140004f47:	int3   
   140004f48:	int3   
   140004f49:	int3   
   140004f4a:	jmp    QWORD PTR [rip+0x1370]        # 0x1400062c0
   140004f50:	int3   
   140004f51:	int3   
   140004f52:	int3   
   140004f53:	int3   
   140004f54:	int3   
   140004f55:	int3   
   140004f56:	jmp    QWORD PTR [rip+0x135c]        # 0x1400062b8
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	int3   
   140004f61:	int3   
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	rex push rbx
   140004f66:	sub    rsp,0x20
   140004f6a:	mov    rbx,rcx
   140004f6d:	xor    ecx,ecx
   140004f6f:	call   QWORD PTR [rip+0x11ab]        # 0x140006120
   140004f75:	mov    rcx,rbx
   140004f78:	call   QWORD PTR [rip+0x11d2]        # 0x140006150
   140004f7e:	call   QWORD PTR [rip+0x11f4]        # 0x140006178
   140004f84:	mov    rcx,rax
   140004f87:	mov    edx,0xc0000409
   140004f8c:	add    rsp,0x20
   140004f90:	pop    rbx
   140004f91:	rex.W jmp QWORD PTR [rip+0x11c0]        # 0x140006158
   140004f98:	int3   
   140004f99:	int3   
   140004f9a:	int3   
   140004f9b:	int3   
   140004f9c:	int3   
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	mov    QWORD PTR [rsp+0x8],rcx
   140004fa5:	sub    rsp,0x88
   140004fac:	lea    rcx,[rip+0x51cd]        # 0x14000a180
   140004fb3:	call   QWORD PTR [rip+0x13ff]        # 0x1400063b8
   140004fb9:	mov    rax,QWORD PTR [rip+0x52b8]        # 0x14000a278
   140004fc0:	mov    QWORD PTR [rsp+0x48],rax
   140004fc5:	xor    r8d,r8d
   140004fc8:	lea    rdx,[rsp+0x50]
   140004fcd:	mov    rcx,QWORD PTR [rsp+0x48]
   140004fd2:	call   QWORD PTR [rip+0x13d8]        # 0x1400063b0
   140004fd8:	mov    QWORD PTR [rsp+0x40],rax
   140004fdd:	cmp    QWORD PTR [rsp+0x40],0x0
   140004fe3:	je     0x140005027
   140004fe5:	mov    QWORD PTR [rsp+0x38],0x0
   140004fee:	lea    rax,[rsp+0x58]
   140004ff3:	mov    QWORD PTR [rsp+0x30],rax
   140004ff8:	lea    rax,[rsp+0x60]
   140004ffd:	mov    QWORD PTR [rsp+0x28],rax
   140005002:	lea    rax,[rip+0x5177]        # 0x14000a180
   140005009:	mov    QWORD PTR [rsp+0x20],rax
   14000500e:	mov    r9,QWORD PTR [rsp+0x40]
   140005013:	mov    r8,QWORD PTR [rsp+0x48]
   140005018:	mov    rdx,QWORD PTR [rsp+0x50]
   14000501d:	xor    ecx,ecx
   14000501f:	call   QWORD PTR [rip+0x1383]        # 0x1400063a8
   140005025:	jmp    0x14000504a
   140005027:	mov    rax,QWORD PTR [rip+0x51ea]        # 0x14000a218
   14000502e:	mov    rax,QWORD PTR [rax]
   140005031:	mov    QWORD PTR [rip+0x5240],rax        # 0x14000a278
   140005038:	mov    rax,QWORD PTR [rip+0x51d9]        # 0x14000a218
   14000503f:	add    rax,0x8
   140005043:	mov    QWORD PTR [rip+0x51ce],rax        # 0x14000a218
   14000504a:	mov    rax,QWORD PTR [rip+0x5227]        # 0x14000a278
   140005051:	mov    QWORD PTR [rip+0x5098],rax        # 0x14000a0f0
   140005058:	mov    rax,QWORD PTR [rsp+0x90]
   140005060:	mov    QWORD PTR [rip+0x5199],rax        # 0x14000a200
   140005067:	mov    DWORD PTR [rip+0x506f],0xc0000409        # 0x14000a0e0
   140005071:	mov    DWORD PTR [rip+0x5069],0x1        # 0x14000a0e4
   14000507b:	mov    DWORD PTR [rip+0x5073],0x3        # 0x14000a0f8
   140005085:	mov    eax,0x8
   14000508a:	imul   rax,rax,0x0
   14000508e:	lea    rcx,[rip+0x506b]        # 0x14000a100
   140005095:	mov    QWORD PTR [rcx+rax*1],0x2
   14000509d:	mov    eax,0x8
   1400050a2:	imul   rax,rax,0x1
   1400050a6:	lea    rcx,[rip+0x5053]        # 0x14000a100
   1400050ad:	mov    rdx,QWORD PTR [rip+0x4f64]        # 0x14000a018
   1400050b4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400050b8:	mov    eax,0x8
   1400050bd:	imul   rax,rax,0x2
   1400050c1:	lea    rcx,[rip+0x5038]        # 0x14000a100
   1400050c8:	mov    rdx,QWORD PTR [rip+0x4f51]        # 0x14000a020
   1400050cf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400050d3:	mov    eax,0x8
   1400050d8:	imul   rax,rax,0x0
   1400050dc:	mov    rcx,QWORD PTR [rip+0x4f35]        # 0x14000a018
   1400050e3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400050e8:	mov    eax,0x8
   1400050ed:	imul   rax,rax,0x1
   1400050f1:	mov    rcx,QWORD PTR [rip+0x4f28]        # 0x14000a020
   1400050f8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400050fd:	lea    rcx,[rip+0x1534]        # 0x140006638
   140005104:	call   0x140004f64
   140005109:	add    rsp,0x88
   140005110:	ret    
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	int3   
   140005117:	int3   
   140005118:	jmp    QWORD PTR [rip+0x1242]        # 0x140006360
   14000511e:	int3   
   14000511f:	int3   
   140005120:	int3   
   140005121:	int3   
   140005122:	int3   
   140005123:	int3   
   140005124:	jmp    QWORD PTR [rip+0x122e]        # 0x140006358
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	jmp    QWORD PTR [rip+0x121a]        # 0x140006350
   140005136:	int3   
   140005137:	int3   
   140005138:	int3   
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	jmp    QWORD PTR [rip+0x1206]        # 0x140006348
   140005142:	int3   
   140005143:	int3   
   140005144:	int3   
   140005145:	int3   
   140005146:	int3   
   140005147:	int3   
   140005148:	int3   
   140005149:	int3   
   14000514a:	int3   
   14000514b:	int3   
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	int3   
   140005151:	int3   
   140005152:	int3   
   140005153:	int3   
   140005154:	int3   
   140005155:	int3   
   140005156:	int3   
   140005157:	int3   
   140005158:	sub    rsp,0x28
   14000515c:	mov    r8,QWORD PTR [r9+0x38]
   140005160:	mov    rcx,rdx
   140005163:	mov    rdx,r9
   140005166:	call   0x14000517c
   14000516b:	mov    eax,0x1
   140005170:	add    rsp,0x28
   140005174:	ret    
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	rex push rbx
   14000517e:	sub    rsp,0x20
   140005182:	mov    r11d,DWORD PTR [r8]
   140005185:	mov    rbx,rdx
   140005188:	and    r11d,0xfffffff8
   14000518c:	mov    r9,rcx
   14000518f:	test   BYTE PTR [r8],0x4
   140005193:	mov    r10,rcx
   140005196:	je     0x1400051ab
   140005198:	mov    eax,DWORD PTR [r8+0x8]
   14000519c:	movsxd r10,DWORD PTR [r8+0x4]
   1400051a0:	neg    eax
   1400051a2:	add    r10,rcx
   1400051a5:	movsxd rcx,eax
   1400051a8:	and    r10,rcx
   1400051ab:	movsxd rax,r11d
   1400051ae:	mov    rdx,QWORD PTR [rax+r10*1]
   1400051b2:	mov    rax,QWORD PTR [rbx+0x10]
   1400051b6:	mov    ecx,DWORD PTR [rax+0x8]
   1400051b9:	add    rcx,QWORD PTR [rbx+0x8]
   1400051bd:	test   BYTE PTR [rcx+0x3],0xf
   1400051c1:	je     0x1400051cf
   1400051c3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400051c7:	and    eax,0xfffffff0
   1400051ca:	cdqe   
   1400051cc:	add    r9,rax
   1400051cf:	xor    r9,rdx
   1400051d2:	mov    rcx,r9
   1400051d5:	add    rsp,0x20
   1400051d9:	pop    rbx
   1400051da:	jmp    0x140004aa0
   1400051df:	int3   
   1400051e0:	int3   
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	mov    rax,rsp
   1400051eb:	mov    QWORD PTR [rax+0x8],rbx
   1400051ef:	mov    QWORD PTR [rax+0x10],rbp
   1400051f3:	mov    QWORD PTR [rax+0x18],rsi
   1400051f7:	mov    QWORD PTR [rax+0x20],rdi
   1400051fb:	push   r14
   1400051fd:	sub    rsp,0x20
   140005201:	mov    rbx,QWORD PTR [r9+0x38]
   140005205:	mov    rsi,rdx
   140005208:	mov    r14,r8
   14000520b:	mov    rbp,rcx
   14000520e:	mov    rdx,r9
   140005211:	mov    rcx,rsi
   140005214:	mov    rdi,r9
   140005217:	lea    r8,[rbx+0x4]
   14000521b:	call   0x14000517c
   140005220:	mov    r11d,DWORD PTR [rbx+0x4]
   140005224:	mov    r8d,0x1
   14000522a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000522e:	mov    eax,r11d
   140005231:	and    eax,r8d
   140005234:	and    r11d,0x2
   140005238:	and    r10b,0x66
   14000523c:	cmove  r11d,eax
   140005240:	test   r11d,r11d
   140005243:	je     0x140005259
   140005245:	mov    r9,rdi
   140005248:	mov    r8,r14
   14000524b:	mov    rdx,rsi
   14000524e:	mov    rcx,rbp
   140005251:	call   0x140005118
   140005256:	mov    r8d,eax
   140005259:	mov    rbx,QWORD PTR [rsp+0x30]
   14000525e:	mov    eax,r8d
   140005261:	mov    rbp,QWORD PTR [rsp+0x38]
   140005266:	mov    rsi,QWORD PTR [rsp+0x40]
   14000526b:	mov    rdi,QWORD PTR [rsp+0x48]
   140005270:	add    rsp,0x20
   140005274:	pop    r14
   140005276:	ret    
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	jmp    QWORD PTR [rip+0x1114]        # 0x140006398
   140005284:	int3   
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	int3   
   140005291:	int3   
   140005292:	int3   
   140005293:	int3   
   140005294:	int3   
   140005295:	int3   
   140005296:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400052a0:	jmp    rax
   1400052a2:	int3   
   1400052a3:	int3   
   1400052a4:	int3   
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	int3   
   1400052a9:	int3   
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	rex push rbp
   1400052b8:	sub    rsp,0x20
   1400052bc:	mov    rbp,rdx
   1400052bf:	mov    eax,DWORD PTR [rbp+0x20]
   1400052c2:	and    eax,0x1
   1400052c5:	test   eax,eax
   1400052c7:	je     0x1400052d6
   1400052c9:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400052cd:	mov    rcx,QWORD PTR [rbp+0x60]
   1400052d1:	call   0x140001048
   1400052d6:	add    rsp,0x20
   1400052da:	pop    rbp
   1400052db:	ret    
   1400052dc:	lea    rcx,[rdx+0x68]
   1400052e3:	jmp    0x14000149c
   1400052e8:	rex push rbp
   1400052ea:	sub    rsp,0x20
   1400052ee:	mov    rbp,rdx
   1400052f1:	mov    rdx,QWORD PTR [rbp+0x70]
   1400052f5:	mov    rcx,QWORD PTR [rbp+0x78]
   1400052f9:	call   0x140001500
   1400052fe:	add    rsp,0x20
   140005302:	pop    rbp
   140005303:	ret    
   140005304:	mov    rcx,QWORD PTR [rdx+0x78]
   14000530b:	jmp    0x1400012e8
   140005310:	mov    rcx,QWORD PTR [rdx+0x78]
   140005317:	jmp    0x140001458
   14000531c:	mov    rcx,QWORD PTR [rdx+0x78]
   140005323:	add    rcx,0x10
   140005327:	jmp    0x14000147c
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	int3   
   140005331:	int3   
   140005332:	mov    rcx,QWORD PTR [rdx+0x40]
   140005339:	jmp    0x140001458
   14000533e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005345:	add    rcx,0x10
   140005349:	jmp    0x14000147c
   14000534e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005355:	jmp    0x1400012e8
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	mov    rcx,QWORD PTR [rdx+0x20]
   140005367:	jmp    0x1400012e8
   14000536c:	int3   
   14000536d:	int3   
   14000536e:	int3   
   14000536f:	int3   
   140005370:	int3   
   140005371:	int3   
   140005372:	mov    rcx,QWORD PTR [rdx+0x40]
   140005379:	jmp    0x1400012e8
   14000537e:	int3   
   14000537f:	int3   
   140005380:	int3   
   140005381:	int3   
   140005382:	int3   
   140005383:	int3   
   140005384:	mov    rcx,QWORD PTR [rdx+0x40]
   14000538b:	jmp    0x140001458
   140005390:	mov    rcx,QWORD PTR [rdx+0x40]
   140005397:	add    rcx,0x10
   14000539b:	jmp    0x140001048
   1400053a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400053a7:	add    rcx,0x18
   1400053ab:	jmp    0x140001048
   1400053b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400053b7:	jmp    0x1400012e8
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	int3   
   1400053c1:	int3   
   1400053c2:	lea    rcx,[rdx+0x90]
   1400053c9:	jmp    0x140001048
   1400053ce:	lea    rcx,[rdx+0x68]
   1400053d5:	jmp    0x140001048
   1400053da:	lea    rcx,[rdx+0x80]
   1400053e1:	jmp    0x140001048
   1400053e6:	lea    rcx,[rdx+0x60]
   1400053ed:	jmp    0x140001048
   1400053f2:	lea    rcx,[rdx+0x78]
   1400053f9:	jmp    0x140001048
   1400053fe:	lea    rcx,[rdx+0x60]
   140005405:	jmp    0x140001048
   14000540a:	int3   
   14000540b:	int3   
   14000540c:	int3   
   14000540d:	int3   
   14000540e:	int3   
   14000540f:	int3   
   140005410:	lea    rcx,[rdx+0x40]
   140005417:	jmp    0x140001048
   14000541c:	lea    rcx,[rdx+0x38]
   140005423:	jmp    0x140001048
   140005428:	lea    rcx,[rdx+0xa0]
   14000542f:	jmp    0x140001048
   140005434:	lea    rcx,[rdx+0x30]
   14000543b:	jmp    0x140001048
   140005440:	int3   
   140005441:	int3   
   140005442:	int3   
   140005443:	int3   
   140005444:	int3   
   140005445:	int3   
   140005446:	lea    rcx,[rdx+0x78]
   14000544d:	jmp    0x140001048
   140005452:	lea    rcx,[rdx+0x78]
   140005459:	jmp    0x140001048
   14000545e:	int3   
   14000545f:	int3   
   140005460:	int3   
   140005461:	int3   
   140005462:	int3   
   140005463:	int3   
   140005464:	rex push rbp
   140005466:	sub    rsp,0x20
   14000546a:	mov    rbp,rdx
   14000546d:	mov    eax,DWORD PTR [rbp+0x20]
   140005470:	and    eax,0x1
   140005473:	test   eax,eax
   140005475:	je     0x140005484
   140005477:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000547b:	mov    rcx,QWORD PTR [rbp+0x50]
   14000547f:	call   0x140001048
   140005484:	add    rsp,0x20
   140005488:	pop    rbp
   140005489:	ret    
   14000548a:	lea    rcx,[rdx+0x58]
   140005491:	jmp    0x14000149c
   140005496:	mov    rcx,QWORD PTR [rdx+0x60]
   14000549d:	jmp    0x1400012e8
   1400054a2:	mov    rcx,QWORD PTR [rdx+0x60]
   1400054a9:	jmp    0x140001458
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	int3   
   1400054b1:	int3   
   1400054b2:	int3   
   1400054b3:	int3   
   1400054b4:	rex push rbp
   1400054b6:	sub    rsp,0x20
   1400054ba:	mov    rbp,rdx
   1400054bd:	mov    eax,DWORD PTR [rbp+0x20]
   1400054c0:	and    eax,0x1
   1400054c3:	test   eax,eax
   1400054c5:	je     0x1400054d4
   1400054c7:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400054cb:	mov    rcx,QWORD PTR [rbp+0x60]
   1400054cf:	call   0x140001048
   1400054d4:	add    rsp,0x20
   1400054d8:	pop    rbp
   1400054d9:	ret    
   1400054da:	lea    rcx,[rdx+0x68]
   1400054e1:	jmp    0x14000149c
   1400054e6:	rex push rbp
   1400054e8:	sub    rsp,0x20
   1400054ec:	mov    rbp,rdx
   1400054ef:	mov    rdx,QWORD PTR [rbp+0x70]
   1400054f3:	mov    rcx,QWORD PTR [rbp+0x78]
   1400054f7:	call   0x140001500
   1400054fc:	add    rsp,0x20
   140005500:	pop    rbp
   140005501:	ret    
   140005502:	mov    rcx,QWORD PTR [rdx+0x78]
   140005509:	jmp    0x1400012e8
   14000550e:	mov    rcx,QWORD PTR [rdx+0x78]
   140005515:	jmp    0x140001458
   14000551a:	mov    rcx,QWORD PTR [rdx+0x78]
   140005521:	add    rcx,0x10
   140005525:	jmp    0x140001048
   14000552a:	mov    rcx,QWORD PTR [rdx+0x78]
   140005531:	add    rcx,0x18
   140005535:	jmp    0x140001048
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	mov    rcx,QWORD PTR [rdx+0x40]
   140005547:	jmp    0x140001458
   14000554c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005553:	jmp    0x1400012e8
   140005558:	int3   
   140005559:	int3   
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	lea    rcx,[rdx+0xa8]
   140005565:	jmp    0x140001048
   14000556a:	lea    rcx,[rdx+0x38]
   140005571:	jmp    0x140001048
   140005576:	lea    rcx,[rdx+0x30]
   14000557d:	jmp    0x140001048
   140005582:	lea    rcx,[rdx+0x98]
   140005589:	jmp    0x140001048
   14000558e:	lea    rcx,[rdx+0x40]
   140005595:	jmp    0x140001048
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	lea    rcx,[rdx+0x68]
   1400055a7:	jmp    0x140001048
   1400055ac:	lea    rcx,[rdx+0x70]
   1400055b3:	jmp    0x140001048
   1400055b8:	lea    rcx,[rdx+0x60]
   1400055bf:	jmp    0x140001048
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	lea    rcx,[rdx+0x98]
   1400055d1:	jmp    0x140001048
   1400055d6:	lea    rcx,[rdx+0x90]
   1400055dd:	jmp    0x140001048
   1400055e2:	lea    rcx,[rdx+0x88]
   1400055e9:	jmp    0x140001048
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	int3   
   1400055f1:	int3   
   1400055f2:	int3   
   1400055f3:	int3   
   1400055f4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400055fb:	jmp    0x14000344c
   140005600:	mov    rcx,QWORD PTR [rdx+0x40]
   140005607:	jmp    0x140003498
   14000560c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005613:	add    rcx,0x10
   140005617:	jmp    0x140001048
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	int3   
   140005621:	int3   
   140005622:	mov    rcx,QWORD PTR [rdx+0x40]
   140005629:	jmp    0x140003498
   14000562e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005635:	add    rcx,0x10
   140005639:	jmp    0x140001048
   14000563e:	int3   
   14000563f:	int3   
   140005640:	int3   
   140005641:	int3   
   140005642:	int3   
   140005643:	int3   
   140005644:	mov    rcx,QWORD PTR [rdx+0x40]
   14000564b:	add    rcx,0x10
   14000564f:	jmp    0x140001048
   140005654:	int3   
   140005655:	int3   
   140005656:	int3   
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	rex push rbp
   14000565c:	sub    rsp,0x20
   140005660:	mov    rbp,rdx
   140005663:	mov    eax,DWORD PTR [rbp+0x20]
   140005666:	and    eax,0x1
   140005669:	test   eax,eax
   14000566b:	je     0x14000567a
   14000566d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140005671:	mov    rcx,QWORD PTR [rbp+0x50]
   140005675:	call   0x140001048
   14000567a:	add    rsp,0x20
   14000567e:	pop    rbp
   14000567f:	ret    
   140005680:	lea    rcx,[rdx+0x58]
   140005687:	jmp    0x14000149c
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	int3   
   140005691:	int3   
   140005692:	mov    rcx,QWORD PTR [rdx+0x50]
   140005699:	add    rcx,0x10
   14000569d:	jmp    0x140001048
   1400056a2:	lea    rcx,[rdx+0x58]
   1400056a9:	jmp    0x140001048
   1400056ae:	mov    rcx,QWORD PTR [rdx+0x50]
   1400056b5:	jmp    0x140003498
   1400056ba:	mov    rcx,QWORD PTR [rdx+0x50]
   1400056c1:	jmp    0x14000344c
   1400056c6:	mov    rcx,QWORD PTR [rdx+0x50]
   1400056cd:	jmp    0x1400033f8
   1400056d2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400056d9:	jmp    0x14000373c
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	int3   
   1400056e1:	int3   
   1400056e2:	int3   
   1400056e3:	int3   
   1400056e4:	mov    rcx,QWORD PTR [rdx+0x40]
   1400056eb:	jmp    0x14000373c
   1400056f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400056f7:	jmp    0x1400033f8
   1400056fc:	mov    rcx,QWORD PTR [rdx+0x40]
   140005703:	jmp    0x14000344c
   140005708:	mov    rcx,QWORD PTR [rdx+0x40]
   14000570f:	jmp    0x140003498
   140005714:	mov    rcx,QWORD PTR [rdx+0x40]
   14000571b:	add    rcx,0x10
   14000571f:	jmp    0x140001048
   140005724:	int3   
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	mov    rcx,QWORD PTR [rdx+0x40]
   140005731:	jmp    0x1400033f8
   140005736:	mov    rcx,QWORD PTR [rdx+0x40]
   14000573d:	jmp    0x14000344c
   140005742:	mov    rcx,QWORD PTR [rdx+0x40]
   140005749:	jmp    0x140003498
   14000574e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005755:	add    rcx,0x10
   140005759:	jmp    0x140001048
   14000575e:	int3   
   14000575f:	int3   
   140005760:	int3   
   140005761:	int3   
   140005762:	int3   
   140005763:	int3   
   140005764:	lea    rcx,[rdx+0x28]
   14000576b:	jmp    0x140001048
   140005770:	lea    rcx,[rdx+0x20]
   140005777:	jmp    0x140001048
   14000577c:	int3   
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	int3   
   140005781:	int3   
   140005782:	rex push rbp
   140005784:	sub    rsp,0x20
   140005788:	mov    rbp,rdx
   14000578b:	mov    rax,QWORD PTR [rcx]
   14000578e:	mov    rdx,rcx
   140005791:	mov    ecx,DWORD PTR [rax]
   140005793:	call   0x140004cbe
   140005798:	nop
   140005799:	add    rsp,0x20
   14000579d:	pop    rbp
   14000579e:	ret    
   14000579f:	int3   
   1400057a0:	int3   
   1400057a1:	int3   
   1400057a2:	int3   
   1400057a3:	int3   
   1400057a4:	int3   
   1400057a5:	int3   
   1400057a6:	mov    QWORD PTR [rsp+0x10],rdx
   1400057ab:	push   rbp
   1400057ac:	sub    rsp,0x20
   1400057b0:	mov    rbp,rdx
   1400057b3:	and    QWORD PTR [rbp+0x50],0x0
   1400057b8:	lea    rax,[rip+0xfffffffffffff31a]        # 0x140004ad9
   1400057bf:	add    rsp,0x20
   1400057c3:	pop    rbp
   1400057c4:	ret    
   1400057c5:	int3   
   1400057c6:	int3   
   1400057c7:	int3   
   1400057c8:	int3   
   1400057c9:	int3   
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	rex push rbp
   1400057ce:	sub    rsp,0x20
   1400057d2:	mov    rbp,rdx
   1400057d5:	mov    ecx,0x8
   1400057da:	call   0x140005130
   1400057df:	nop
   1400057e0:	add    rsp,0x20
   1400057e4:	pop    rbp
   1400057e5:	ret    
   1400057e6:	int3   
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	rex push rbp
   1400057f2:	sub    rsp,0x20
   1400057f6:	mov    rbp,rdx
   1400057f9:	mov    rax,QWORD PTR [rcx]
   1400057fc:	xor    ecx,ecx
   1400057fe:	cmp    DWORD PTR [rax],0xc0000005
   140005804:	sete   cl
   140005807:	mov    eax,ecx
   140005809:	add    rsp,0x20
   14000580d:	pop    rbp
   14000580e:	ret    
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	int3   
   140005817:	int3   
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	sub    rsp,0x28
   140005824:	mov    rcx,QWORD PTR [rip+0x4e55]        # 0x14000a680
   14000582b:	test   rcx,rcx
   14000582e:	je     0x140005836
   140005830:	call   QWORD PTR [rip+0xbaa]        # 0x1400063e0
   140005836:	add    rsp,0x28
   14000583a:	ret    
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	int3   
   140005841:	int3   
   140005842:	int3   
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	lea    rax,[rip+0xd99]        # 0x1400065f0
   140005857:	lea    rcx,[rip+0x4822]        # 0x14000a080
   14000585e:	mov    QWORD PTR [rip+0x481b],rax        # 0x14000a080
   140005865:	jmp    0x140004bd6

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	jo     0x140005f8c
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	or     BYTE PTR [rdx+0x0],0x0
   14000600f:	add    BYTE PTR [rsi+0x8a],cl
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rdx+0x8a],ah
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rdx+0x8a],dh
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    dl,al
   140006029:	mov    al,BYTE PTR [rax]
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    ah,dl
   140006031:	mov    al,BYTE PTR [rax]
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    dh,ah
   140006039:	mov    al,BYTE PTR [rax]
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    al,bh
   140006041:	mov    al,BYTE PTR [rax]
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdx],cl
   140006049:	mov    eax,DWORD PTR [rax]
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rsi],bl
   140006051:	mov    eax,DWORD PTR [rax]
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rsi],dh
   140006059:	mov    eax,DWORD PTR [rax]
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rsi-0x75],cl
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	mov    eax,DWORD PTR fs:[rax]
   14000606b:	add    BYTE PTR [rax],al
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    BYTE PTR [rdx-0x75],bh
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	xchg   esp,eax
   140006079:	mov    eax,DWORD PTR [rax]
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rdx+0x8b],ch
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rdx+0x92],bh
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    dh,al
   140006091:	xchg   edx,eax
	...
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	cmp    BYTE PTR [rax+rax*1+0x0],cl
   1400060a7:	add    BYTE PTR [rax-0x74],dl
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	(bad)  
   1400060b1:	mov    WORD PTR [rax],es
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdx-0x74],dh
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	or     BYTE PTR [rax+rax*1+0x0],0x0
   1400060c8:	mov    WORD PTR [rax+rax*1+0x0],cs
   1400060cf:	add    BYTE PTR [rsp+rcx*4+0x0],bl
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	mov    ah,0x8c
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	retf   0x8c
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    dl,bl
   1400060e9:	mov    WORD PTR [rax],es
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    dl,bh
   1400060f1:	mov    WORD PTR [rax],es
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax],cl
   1400060f9:	lea    eax,[rax]
   1400060fb:	add    BYTE PTR [rax],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    ah,ah
   140006101:	mov    eax,DWORD PTR [rax]
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    dl,dh
   140006109:	mov    eax,DWORD PTR [rax]
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rax],cl
   140006111:	mov    WORD PTR [rax],es
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    dh,dl
   140006119:	xchg   edx,eax
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	call   0x1400061b7
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rsi],al
   140006129:	xchg   ebx,eax
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	sbb    dl,BYTE PTR [rbx+0x0]
   140006136:	add    BYTE PTR [rax],al
   140006138:	xor    al,0x93
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	rex.WX xchg rbx,rax
   140006142:	add    BYTE PTR [rax],al
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	fs xchg ebx,eax
   14000614a:	add    BYTE PTR [rax],al
   14000614c:	add    BYTE PTR [rax],al
   14000614e:	add    BYTE PTR [rax],al
   140006150:	je     0x1400060e5
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	nop
   140006159:	xchg   ebx,eax
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006161:	xchg   ebx,eax
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	mov    ah,0x93
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	ret    0x93
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    al,dl
   140006179:	mov    eax,DWORD PTR [rax]
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rdx],ah
   140006181:	mov    WORD PTR [rax],es
	...
   14000618f:	add    BYTE PTR [rdx],al
   140006191:	add    BYTE PTR [rax],al
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rax],0x0
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	fcom   DWORD PTR [rbx+0x0]
	...
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	mov    eax,0x91
	...
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rax],bh
   1400061c1:	mov    es,WORD PTR [rax]
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rdx-0x73],al
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	push   rdx
   1400061d1:	lea    eax,[rax]
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    BYTE PTR [rsi-0x73],ch
   1400061da:	add    BYTE PTR [rax],al
   1400061dc:	add    BYTE PTR [rax],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	(bad)  
   1400061e1:	lea    eax,[rax]
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rsi+0x8d],cl
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rsi],ch
   1400061f1:	lea    eax,[rax]
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rbp+rcx*4+0x0],ch
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	mov    eax,0x8d
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    dl,cl
   140006209:	lea    eax,[rax]
   14000620b:	add    BYTE PTR [rax],al
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    ah,bl
   140006211:	lea    eax,[rax]
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rsi+rcx*4],ah
   14000621a:	add    BYTE PTR [rax],al
   14000621c:	add    BYTE PTR [rax],al
   14000621e:	add    BYTE PTR [rax],al
   140006220:	lock lea eax,[rax]
   140006223:	add    BYTE PTR [rax],al
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    BYTE PTR [rsi+rcx*4+0x0],bl
   14000622b:	add    BYTE PTR [rax],al
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    BYTE PTR [rdx],al
   140006231:	mov    es,WORD PTR [rax]
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rsi],dl
   140006239:	mov    es,WORD PTR [rax]
   14000623b:	add    BYTE PTR [rax],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rdx+0x8d],bl
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rsi+rcx*4+0x0],cl
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rsi],bl
   140006251:	lea    eax,[rax]
	...
   14000625f:	add    al,bh
   140006261:	xchg   ecx,eax
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	(bad)  
   140006269:	xchg   ecx,eax
	...
   140006276:	add    BYTE PTR [rax],al
   140006278:	sub    dl,BYTE PTR [rdx+0x0]
	...
   140006286:	add    BYTE PTR [rax],al
   140006288:	xchg   dx,ax
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	add    BYTE PTR [rax],al
   14000628e:	add    BYTE PTR [rax],al
   140006290:	jl     0x140006224
	...
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	fimul  DWORD PTR [rdi+0x0]
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	ror    BYTE PTR [rdi+0x0],1
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	(bad)  
   1400062b1:	xchg   ebx,eax
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	mov    eax,0x8f
   1400062bd:	add    BYTE PTR [rax],al
   1400062bf:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	cwde   
   1400062c9:	pop    QWORD PTR [rax]
   1400062cb:	add    BYTE PTR [rax],al
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rsi+0x8f],cl
   1400062d5:	add    BYTE PTR [rax],al
   1400062d7:	add    BYTE PTR [rsi+0x8f],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rdi+rcx*4+0x0],cl
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rsi],bh
   1400062f1:	pop    QWORD PTR [rax]
   1400062f3:	add    BYTE PTR [rax],al
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    BYTE PTR [rax],ch
   1400062f9:	pop    QWORD PTR [rax]
   1400062fb:	add    BYTE PTR [rax],al
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rdi+rcx*4],bl
   140006302:	add    BYTE PTR [rax],al
   140006304:	add    BYTE PTR [rax],al
   140006306:	add    BYTE PTR [rax],al
   140006308:	dec    BYTE PTR [rsi+0x0]
   14000630e:	add    BYTE PTR [rax],al
   140006310:	out    0x8e,al
   140006312:	add    BYTE PTR [rax],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax],al
   140006318:	enter  0x8e,0x0
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	test   al,0x8e
   140006322:	add    BYTE PTR [rax],al
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	xchg   esi,eax
   140006329:	mov    es,WORD PTR [rax]
   14000632b:	add    BYTE PTR [rax],al
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    BYTE PTR [rax+0x8e],cl
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    ah,ah
   140006339:	pop    QWORD PTR [rax]
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rsi-0x70],al
   140006342:	add    BYTE PTR [rax],al
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    BYTE PTR [rax],al
   140006348:	cmp    BYTE PTR [rax+0x0],dl
   14000634e:	add    BYTE PTR [rax],al
   140006350:	cs nop
   140006352:	add    BYTE PTR [rax],al
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	es nop
   14000635a:	add    BYTE PTR [rax],al
   14000635c:	add    BYTE PTR [rax],al
   14000635e:	add    BYTE PTR [rax],al
   140006360:	add    al,0x90
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	pop    rdx
   140006369:	pop    QWORD PTR [rax]
   14000636b:	add    BYTE PTR [rax],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    al,dh
   140006371:	pop    QWORD PTR [rax]
   140006373:	add    BYTE PTR [rax],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    BYTE PTR [rsi+rcx*4+0x0],bh
   14000637b:	add    BYTE PTR [rax],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    BYTE PTR [rax-0x70],dl
   140006382:	add    BYTE PTR [rax],al
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	jle    0x140006319
   14000638a:	add    BYTE PTR [rax],al
   14000638c:	add    BYTE PTR [rax],al
   14000638e:	add    BYTE PTR [rax],al
   140006390:	sahf   
   140006391:	mov    es,WORD PTR [rax]
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rax],al
   140006399:	xchg   esp,eax
	...
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	(bad)  
   1400063a9:	xchg   ecx,eax
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	adc    BYTE PTR [rcx+0x0],0x0
   1400063b7:	add    BYTE PTR [rcx+rdx*4+0x0],ch
   1400063bb:	add    BYTE PTR [rax],al
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rdx-0x6f],bl
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	rex.RX xchg ecx,eax
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	add    BYTE PTR [rax],al
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	xor    BYTE PTR [rcx+0x0],dl
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	(bad)  
   1400063d9:	xchg   ecx,eax
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	or     BYTE PTR [rcx+0x0],dl
   1400063e6:	add    BYTE PTR [rax],al
   1400063e8:	hlt    
   1400063e9:	nop
   1400063ea:	add    BYTE PTR [rax],al
   1400063ec:	add    BYTE PTR [rax],al
   1400063ee:	add    BYTE PTR [rax],al
   1400063f0:	in     al,0x90
	...
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	lods   al,BYTE PTR ds:[rsi]
   140006401:	nop
   140006402:	add    BYTE PTR [rax],al
   140006404:	add    BYTE PTR [rax],al
   140006406:	add    BYTE PTR [rax],al
   140006408:	(bad)  
   140006409:	nop
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	jl     0x1400063a2
   140006412:	add    BYTE PTR [rax],al
   140006414:	add    BYTE PTR [rax],al
   140006416:	add    BYTE PTR [rax],al
   140006418:	push   0x90
	...
   140006429:	adc    eax,0x14000
   14000642e:	add    BYTE PTR [rax],al
   140006430:	movabs al,ds:0x1400052
   140006439:	add    BYTE PTR [rax],al
   14000643b:	add    BYTE PTR [rax],al
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rax+0x1400047],ah
   140006445:	add    BYTE PTR [rax],al
   140006447:	add    BYTE PTR [rax],al
   140006449:	adc    BYTE PTR [rax],al
   14000644b:	rex add DWORD PTR [rax],eax
	...
   14000645e:	add    BYTE PTR [rax],al
   140006460:	rol    BYTE PTR [rsi+0x0],0x40
   140006464:	add    DWORD PTR [rax],eax
   140006466:	add    BYTE PTR [rax],al
   140006468:	movabs al,ds:0x140004c
	...
   140006479:	adc    BYTE PTR [rax],al
   14000647b:	add    BYTE PTR [rax-0x4ffffff0],dl
   140006481:	adc    DWORD PTR [rax],eax
   140006483:	add    BYTE PTR [rax+0x12],dl
   140006486:	add    BYTE PTR [rax],al
   140006488:	jo     0x14000649c
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	add    BYTE PTR [rax+rax*1],dl
   14000648f:	add    al,al
   140006491:	adc    al,0x0
   140006493:	add    BYTE PTR [rax],al
   140006495:	adc    eax,0x15100000
   14000649a:	add    BYTE PTR [rax],al
   14000649c:	push   rax
   14000649d:	adc    eax,0x15600000
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	movabs al,ds:0x6000001600000015
   1400064ad:	(bad)  
   1400064ae:	add    BYTE PTR [rax],al
   1400064b0:	adc    BYTE PTR [rsi],0x0
   1400064b3:	add    BYTE PTR [rax+0x10000016],ah
   1400064b9:	(bad)  
   1400064ba:	add    BYTE PTR [rax],al
   1400064bc:	push   rax
   1400064bd:	(bad)  
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	and    BYTE PTR [rax],bl
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	jo     0x1400064de
   1400064c6:	add    BYTE PTR [rax],al
   1400064c8:	lock sbb BYTE PTR [rax],al
   1400064cb:	add    BYTE PTR [rax],al
   1400064cd:	and    BYTE PTR [rax],al
   1400064cf:	add    BYTE PTR [rax+0x20000020],ah
   1400064d5:	and    DWORD PTR [rax],eax
   1400064d7:	add    al,al
   1400064d9:	and    DWORD PTR [rax],eax
   1400064db:	add    BYTE PTR [rax],dl
   1400064dd:	and    al,0x0
   1400064df:	add    al,ah
   1400064e1:	add    BYTE PTR es:[rax],al
   1400064e4:	lock add BYTE PTR es:[rax],al
   1400064e8:	adc    BYTE PTR [rdi],ah
   1400064ea:	add    BYTE PTR [rax],al
   1400064ec:	xor    BYTE PTR [rdi],ah
   1400064ee:	add    BYTE PTR [rax],al
   1400064f0:	jo     0x140006519
   1400064f2:	add    BYTE PTR [rax],al
   1400064f4:	nop
   1400064f5:	(bad)  
   1400064f6:	add    BYTE PTR [rax],al
   1400064f8:	shl    BYTE PTR [rdi],1
   1400064fa:	add    BYTE PTR [rax],al
   1400064fc:	adc    BYTE PTR [rax],ch
   1400064fe:	add    BYTE PTR [rax],al
   140006500:	xor    BYTE PTR [rax],ch
   140006502:	add    BYTE PTR [rax],al
   140006504:	push   rax
   140006505:	sub    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rax+0x28],dh
   14000650a:	add    BYTE PTR [rax],al
   14000650c:	nop
   14000650d:	sub    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rax-0x2fffffd8],dh
   140006515:	sub    BYTE PTR [rax],al
   140006517:	add    al,dh
   140006519:	sub    BYTE PTR [rax],al
   14000651b:	add    BYTE PTR [rax],dl
   14000651d:	sub    DWORD PTR [rax],eax
   14000651f:	add    BYTE PTR [rax],dh
   140006521:	sub    DWORD PTR [rax],eax
   140006523:	add    BYTE PTR [rax],ah
   140006525:	sub    al,BYTE PTR [rax]
   140006527:	add    BYTE PTR [rax+0x2a],al
   14000652a:	add    BYTE PTR [rax],al
   14000652c:	nop
   14000652d:	sub    al,BYTE PTR [rax]
   14000652f:	add    BYTE PTR [rax-0x2fffffd6],dh
   140006535:	sub    al,BYTE PTR [rax]
   140006537:	add    al,dh
   140006539:	sub    al,BYTE PTR [rax]
   14000653b:	add    BYTE PTR [rax],al
   14000653d:	sub    eax,DWORD PTR [rax]
   14000653f:	add    BYTE PTR [rax],dh
   140006541:	sub    eax,DWORD PTR [rax]
   140006543:	add    BYTE PTR [rax+0x2b],dl
   140006546:	add    BYTE PTR [rax],al
   140006548:	jo     0x140006575
   14000654a:	add    BYTE PTR [rax],al
   14000654c:	sub    BYTE PTR [rbx],0x0
   14000654f:	add    BYTE PTR [rax-0x5fffffd5],dl
   140006555:	sub    eax,DWORD PTR [rax]
   140006557:	add    BYTE PTR [rax-0x2fffffd5],dh
   14000655d:	sub    eax,DWORD PTR [rax]
   14000655f:	add    al,dh
   140006561:	sub    eax,DWORD PTR [rax]
   140006563:	add    BYTE PTR [rax],al
   140006565:	sub    al,0x0
   140006567:	add    BYTE PTR [rax],ah
   140006569:	sub    al,0x0
   14000656b:	add    al,al
   14000656d:	sub    al,0x0
   14000656f:	add    BYTE PTR [rax+0x2f],al
   140006572:	add    BYTE PTR [rax],al
   140006574:	shr    BYTE PTR [rdi],1
   140006576:	add    BYTE PTR [rax],al
   140006578:	(bad)  
   140006579:	xor    al,BYTE PTR [rax]
   14000657b:	add    BYTE PTR [rax+0x33],ah
   14000657e:	add    BYTE PTR [rax],al
   140006580:	xor    BYTE PTR [rbx],0x0
   140006583:	add    al,al
   140006585:	add    BYTE PTR ss:[rax],al
   140006588:	nop
   140006589:	(bad)  
   14000658a:	add    BYTE PTR [rax],al
   14000658c:	adc    BYTE PTR [rax],bh
   14000658e:	add    BYTE PTR [rax],al
   140006590:	movabs al,ds:0xc000003930000038
   140006599:	cmp    DWORD PTR [rax],eax
   14000659b:	add    BYTE PTR [rax+0x3a],al
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	nop
   1400065a1:	cmp    al,BYTE PTR [rax]
   1400065a3:	add    BYTE PTR [rax+0x46],dl
   1400065a6:	add    BYTE PTR [rax],al
   1400065a8:	nop
   1400065a9:	rex.RX add BYTE PTR [rax],r8b
   1400065ac:	rol    BYTE PTR [rsi+0x0],0x0
   1400065b0:	movabs al,ds:0xf000004a70000047
   1400065b9:	rex.WX add BYTE PTR [rax],al
   1400065bc:	lock rex.WXB add BYTE PTR [r8],al
   1400065c0:	and    BYTE PTR [rax+rax*1+0x0],cl
   1400065c4:	(bad)  
   1400065c5:	rex.WR add BYTE PTR [rax],r8b
   1400065c8:	movabs al,ds:0xa000004d8000004c
   1400065d1:	rex.WRXB add BYTE PTR [r8],r8b
   1400065d4:	and    BYTE PTR [rax+0x0],bl
   1400065d7:	add    BYTE PTR [rax+0x58],dl
   1400065da:	add    BYTE PTR [rax],al
   1400065dc:	add    BYTE PTR [rax],al
   1400065de:	add    BYTE PTR [rax],al
   1400065e0:	(bad)
   1400065e5:	ins    BYTE PTR es:[rdi],dx
   1400065e6:	ins    BYTE PTR es:[rdi],dx
   1400065e7:	outs   dx,DWORD PTR ds:[rsi]
   1400065e8:	movsxd esp,DWORD PTR [rcx+0x74]
   1400065eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x46500000
   1400065f2:	add    BYTE PTR [rax+0x1],al
   1400065f5:	add    BYTE PTR [rax],al
   1400065f7:	add    al,dh
   1400065f9:	rex.WXB add BYTE PTR [r8+0x1],al
   1400065fd:	add    BYTE PTR [rax],al
   1400065ff:	add    BYTE PTR [rax+0x1400046],dl
   140006605:	add    BYTE PTR [rax],al
   140006607:	add    BYTE PTR [rdx],ah
   140006609:	add    eax,0x21993
   14000660e:	add    BYTE PTR [rax],al
   140006610:	mov    ah,0x83
   140006612:	add    BYTE PTR [rax],al
   140006614:	add    DWORD PTR [rax],eax
   140006616:	add    BYTE PTR [rax],al
   140006618:	(bad)
   14000661c:	(bad)  
   14000661d:	add    BYTE PTR [rax],al
   14000661f:	add    al,dh
   140006621:	add    DWORD PTR [rax],0x0
   140006624:	and    BYTE PTR [rax],al
   140006626:	add    BYTE PTR [rax],al
   140006628:	add    BYTE PTR [rax],al
   14000662a:	add    BYTE PTR [rax],al
   14000662c:	add    DWORD PTR [rax],eax
   14000662e:	add    BYTE PTR [rax],al
   140006630:	and    BYTE PTR [rax+rax*1+0x40],cl
   140006634:	add    DWORD PTR [rax],eax
   140006636:	add    BYTE PTR [rax],al
   140006638:	loopne 0x1400065da
   14000663a:	add    BYTE PTR [rax+0x1],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax+0x14000a1],al
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rdi+riz*1+0x0],al
   14000664b:	adc    DWORD PTR [rcx+rax*1],eax
   14000664e:	call   0x140006656
   140006653:	add    BYTE PTR [rax],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	rex
   140006658:	rex.XB (bad) 
   14000665a:	add    BYTE PTR [rcx],dl
   14000665c:	add    al,0x1
   14000665e:	call   0x140006666
   140006663:	add    BYTE PTR [rax],al
   140006665:	add    BYTE PTR [rax],al
   140006667:	rex (bad) 
   140006669:	(bad)  
   14000666a:	add    BYTE PTR [rcx],dl
   14000666c:	add    al,BYTE PTR [rcx]
   14000666e:	call   0x140006676
   140006673:	add    BYTE PTR [rax],al
   140006675:	add    BYTE PTR [rax],al
   140006677:	rex
   140006678:	rex.RB (bad) 
   14000667a:	add    BYTE PTR [rcx],dl
   14000667c:	add    al,BYTE PTR [rcx]
   14000667e:	call   0x140006686
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	rex
   140006688:	rex.RX (bad) 
   14000668a:	add    BYTE PTR [rcx],dl
   14000668c:	add    al,BYTE PTR [rcx]
   14000668e:	call   0x140006696
   140006693:	add    BYTE PTR [rax],al
   140006695:	add    BYTE PTR [rax],al
   140006697:	sub    BYTE PTR [rdi],spl
   14000669a:	add    BYTE PTR [rcx],dl
   14000669c:	add    al,BYTE PTR [rcx]
   14000669e:	call   0x1400066a6
   1400066a3:	add    BYTE PTR [rax],al
   1400066a5:	add    BYTE PTR [rax],al
   1400066a7:	rex
   1400066a8:	rex.RXB (bad) 
   1400066aa:	add    BYTE PTR [rcx],dl
   1400066ac:	add    al,BYTE PTR [rcx]
   1400066ae:	call   0x1400066b6
   1400066b3:	add    BYTE PTR [rax],al
   1400066b5:	add    BYTE PTR [rax],al
   1400066b7:	rex
   1400066b8:	rex.WXB (bad) 
   1400066ba:	add    BYTE PTR [rcx],dl
   1400066bc:	add    al,BYTE PTR [rcx]
   1400066be:	call   0x1400066c6
   1400066c3:	add    BYTE PTR [rax],al
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	rex
   1400066c8:	rex.X (bad) 
   1400066ca:	add    BYTE PTR [rcx],dl
   1400066cc:	add    al,0x1
   1400066ce:	call   0x1400066d6
   1400066d3:	add    BYTE PTR [rax],al
   1400066d5:	add    BYTE PTR [rax],al
   1400066d7:	rex sub DWORD PTR [rdi],esp
   1400066da:	add    BYTE PTR [rcx],dl
   1400066dc:	add    al,BYTE PTR [rcx]
   1400066de:	call   0x1400066e6
   1400066e3:	add    BYTE PTR [rax],al
   1400066e5:	add    BYTE PTR [rax],al
   1400066e7:	rex xchg ecx,eax
   1400066e9:	push   rbx
   1400066ea:	sub    BYTE PTR [rsi-0x6a],dl
   1400066ed:	fwait
   1400066ee:	xchg   esi,eax
   1400066ef:	rex.RX sahf 
   1400066f1:	lods   eax,DWORD PTR ds:[rsi]
   1400066f2:	sub    eax,0xbd8ff917
   1400066f7:	mov    dl,0x3f
   1400066f9:	(bad)  
   1400066fa:	add    BYTE PTR [rcx],dl
   1400066fc:	add    al,BYTE PTR [rcx]
   1400066fe:	call   0x140006706
   140006703:	add    BYTE PTR [rax],al
   140006705:	add    BYTE PTR [rax],al
   140006707:	rex
   140006708:	rex.WB (bad) 
   14000670a:	add    BYTE PTR [rcx],dl
   14000670c:	add    al,0x1
   14000670e:	call   0x140006716
   140006713:	add    BYTE PTR [rax],al
   140006715:	add    BYTE PTR [rax],al
   140006717:	rex
   140006718:	rex.WX (bad) 
   14000671a:	add    BYTE PTR [rcx],dl
   14000671c:	add    al,BYTE PTR [rcx]
   14000671e:	call   0x140006726
   140006723:	add    BYTE PTR [rax],al
   140006725:	add    BYTE PTR [rax],al
   140006727:	rex
   140006728:	rex.W (bad) 
   14000672a:	add    BYTE PTR [rcx],dl
   14000672c:	add    al,0x1
   14000672e:	call   0x140006736
   140006733:	add    BYTE PTR [rax],al
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rax],al
   14000673a:	add    BYTE PTR [rax],al
   14000673c:	add    BYTE PTR [rax],al
   14000673e:	add    BYTE PTR [rax],al
   140006740:	lock rex.WX add BYTE PTR [rax+0x1],al
   140006745:	add    BYTE PTR [rax],al
   140006747:	add    al,dh
   140006749:	rex.WX add BYTE PTR [rax+0x1],al
   14000674d:	add    BYTE PTR [rax],al
   14000674f:	add    al,dh
   140006751:	rex.WX add BYTE PTR [rax+0x1],al
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    al,dh
   140006759:	rex.WX add BYTE PTR [rax+0x1],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rax+0x1400011],dh
   140006765:	add    BYTE PTR [rax],al
   140006767:	add    BYTE PTR [rax+0x12],dl
   14000676a:	add    BYTE PTR [rax+0x1],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rax+0x12],dh
   140006772:	add    BYTE PTR [rax+0x1],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    al,dh
   140006779:	rex.WX add BYTE PTR [rax+0x1],al
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    al,al
   140006781:	adc    al,0x0
   140006783:	rex add DWORD PTR [rax],eax
   140006786:	add    BYTE PTR [rax],al
   140006788:	mov    al,0x11
   14000678a:	add    BYTE PTR [rax+0x1],al
   14000678d:	add    BYTE PTR [rax],al
   14000678f:	add    BYTE PTR [rax+0x12],dl
   140006792:	add    BYTE PTR [rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rax+0x12],dh
   14000679a:	add    BYTE PTR [rax+0x1],al
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rax+0x1400010],dl
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	add    BYTE PTR [rax],al
   1400067a9:	adc    al,0x0
   1400067ab:	rex add DWORD PTR [rax],eax
   1400067ae:	add    BYTE PTR [rax],al
   1400067b0:	lock rex.WX add BYTE PTR [rax+0x1],al
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    al,dh
   1400067b9:	rex.WX add BYTE PTR [rax+0x1],al
   1400067bd:	add    BYTE PTR [rax],al
   1400067bf:	add    al,dh
   1400067c1:	rex.WX add BYTE PTR [rax+0x1],al
   1400067c5:	add    BYTE PTR [rax],al
   1400067c7:	add    al,dh
   1400067c9:	rex.WX add BYTE PTR [rax+0x1],al
   1400067cd:	add    BYTE PTR [rax],al
   1400067cf:	add    al,dh
   1400067d1:	rex.WX add BYTE PTR [rax+0x1],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    al,dh
   1400067d9:	rex.WX add BYTE PTR [rax+0x1],al
   1400067dd:	add    BYTE PTR [rax],al
   1400067df:	add    al,dh
   1400067e1:	rex.WX add BYTE PTR [rax+0x1],al
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    al,dh
   1400067e9:	rex.WX add BYTE PTR [rax+0x1],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    al,dh
   1400067f1:	rex.WX add BYTE PTR [rax+0x1],al
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    al,dh
   1400067f9:	rex.WX add BYTE PTR [rax+0x1],al
   1400067fd:	add    BYTE PTR [rax],al
   1400067ff:	add    al,dh
   140006801:	rex.WX add BYTE PTR [rax+0x1],al
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    al,dh
   140006809:	rex.WX add BYTE PTR [rax+0x1],al
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    BYTE PTR [rax],ah
   140006811:	and    DWORD PTR [rax],eax
   140006813:	rex add DWORD PTR [rax],eax
   140006816:	add    BYTE PTR [rax],al
   140006818:	push   rax
   140006819:	adc    al,BYTE PTR [rax]
   14000681b:	rex add DWORD PTR [rax],eax
   14000681e:	add    BYTE PTR [rax],al
   140006820:	shl    BYTE PTR [rcx],0x0
   140006823:	rex add DWORD PTR [rax],eax
   140006826:	add    BYTE PTR [rax],al
   140006828:	lock rex.WX add BYTE PTR [rax+0x1],al
   14000682d:	add    BYTE PTR [rax],al
   14000682f:	add    al,dh
   140006831:	rex.WX add BYTE PTR [rax+0x1],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    al,dh
   140006839:	rex.WX add BYTE PTR [rax+0x1],al
   14000683d:	add    BYTE PTR [rax],al
   14000683f:	add    al,dh
   140006841:	rex.WX add BYTE PTR [rax+0x1],al
   140006845:	add    BYTE PTR [rax],al
   140006847:	add    al,dh
   140006849:	rex.WX add BYTE PTR [rax+0x1],al
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    al,dh
   140006851:	rex.WX add BYTE PTR [rax+0x1],al
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    al,dh
   140006859:	rex.WX add BYTE PTR [rax+0x1],al
   14000685d:	add    BYTE PTR [rax],al
   14000685f:	add    al,dh
   140006861:	rex.WX add BYTE PTR [rax+0x1],al
   140006865:	add    BYTE PTR [rax],al
   140006867:	add    al,dh
   140006869:	rex.WX add BYTE PTR [rax+0x1],al
   14000686d:	add    BYTE PTR [rax],al
   14000686f:	add    al,al
   140006871:	adc    al,0x0
   140006873:	rex add DWORD PTR [rax],eax
   140006876:	add    BYTE PTR [rax],al
   140006878:	and    BYTE PTR [rcx],ah
   14000687a:	add    BYTE PTR [rax+0x1],al
   14000687d:	add    BYTE PTR [rax],al
   14000687f:	add    BYTE PTR [rax+0x12],dl
   140006882:	add    BYTE PTR [rax+0x1],al
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    al,al
   140006889:	and    DWORD PTR [rax],eax
   14000688b:	rex add DWORD PTR [rax],eax
   14000688e:	add    BYTE PTR [rax],al
   140006890:	adc    BYTE PTR [rip+0x14000],dl        # 0x14001a896
   140006896:	add    BYTE PTR [rax],al
   140006898:	push   rax
   140006899:	adc    eax,0x14000
   14000689e:	add    BYTE PTR [rax],al
   1400068a0:	(bad)  
   1400068a1:	adc    eax,0x14000
   1400068a6:	add    BYTE PTR [rax],al
   1400068a8:	movabs al,ds:0x1400015
   1400068b1:	(bad)  
   1400068b2:	add    BYTE PTR [rax+0x1],al
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rax+0x16],ah
   1400068ba:	add    BYTE PTR [rax+0x1],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rax+0x1400016],al
   1400068c5:	add    BYTE PTR [rax],al
   1400068c7:	add    BYTE PTR [rax+0x1400016],ah
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    BYTE PTR [rax],dl
   1400068d1:	(bad)  
   1400068d2:	add    BYTE PTR [rax+0x1],al
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rax],dl
   1400068d9:	and    al,0x0
   1400068db:	rex add DWORD PTR [rax],eax
   1400068de:	add    BYTE PTR [rax],al
   1400068e0:	lock rex.WX add BYTE PTR [rax+0x1],al
   1400068e5:	add    BYTE PTR [rax],al
   1400068e7:	add    al,dh
   1400068e9:	rex.WX add BYTE PTR [rax+0x1],al
   1400068ed:	add    BYTE PTR [rax],al
   1400068ef:	add    al,dh
   1400068f1:	rex.WX add BYTE PTR [rax+0x1],al
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    al,dh
   1400068f9:	rex.WX add BYTE PTR [rax+0x1],al
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	add    al,dh
   140006901:	rex.WX add BYTE PTR [rax+0x1],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    al,dh
   140006909:	rex.WX add BYTE PTR [rax+0x1],al
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax],al
   140006911:	and    BYTE PTR [rax],al
   140006913:	rex add DWORD PTR [rax],eax
   140006916:	add    BYTE PTR [rax],al
   140006918:	push   rax
   140006919:	adc    al,BYTE PTR [rax]
   14000691b:	rex add DWORD PTR [rax],eax
   14000691e:	add    BYTE PTR [rax],al
   140006920:	movabs al,ds:0xf000000001400020
   140006929:	rex.WX add BYTE PTR [rax+0x1],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    al,dh
   140006931:	rex.WX add BYTE PTR [rax+0x1],al
   140006935:	add    BYTE PTR [rax],al
   140006937:	add    al,dh
   140006939:	rex.WX add BYTE PTR [rax+0x1],al
   14000693d:	add    BYTE PTR [rax],al
   14000693f:	add    al,al
   140006941:	adc    al,0x0
   140006943:	rex add DWORD PTR [rax],eax
   140006946:	add    BYTE PTR [rax],al
   140006948:	add    BYTE PTR [rax],ah
   14000694a:	add    BYTE PTR [rax+0x1],al
   14000694d:	add    BYTE PTR [rax],al
   14000694f:	add    BYTE PTR [rax+0x12],dl
   140006952:	add    BYTE PTR [rax+0x1],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rax+0x1400020],ah
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rax],ah
   140006961:	sbb    BYTE PTR [rax],al
   140006963:	rex add DWORD PTR [rax],eax
   140006966:	add    BYTE PTR [rax],al
   140006968:	jo     0x140006982
   14000696a:	add    BYTE PTR [rax+0x1],al
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    al,dh
   140006971:	sbb    BYTE PTR [rax],al
   140006973:	rex add DWORD PTR [rax],eax
   140006976:	add    BYTE PTR [rax],al
   140006978:	push   rax
   140006979:	(bad)  
   14000697a:	add    BYTE PTR [rax+0x1],al
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    al,dh
   140006981:	rex.WX add BYTE PTR [rax+0x1],al
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    al,dh
   140006989:	rex.WX add BYTE PTR [rax+0x1],al
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    al,dh
   140006991:	rex.WX add BYTE PTR [rax+0x1],al
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    al,dh
   140006999:	rex.WX add BYTE PTR [rax+0x1],al
   14000699d:	add    BYTE PTR [rax],al
   14000699f:	add    al,dh
   1400069a1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    al,dh
   1400069a9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    al,dh
   1400069b1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    al,dh
   1400069b9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    al,dh
   1400069c1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    al,dh
   1400069c9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069cd:	add    BYTE PTR [rax],al
   1400069cf:	add    al,dh
   1400069d1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    al,dh
   1400069d9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    al,dh
   1400069e1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069e5:	add    BYTE PTR [rax],al
   1400069e7:	add    al,dh
   1400069e9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    al,dh
   1400069f1:	rex.WX add BYTE PTR [rax+0x1],al
   1400069f5:	add    BYTE PTR [rax],al
   1400069f7:	add    al,dh
   1400069f9:	rex.WX add BYTE PTR [rax+0x1],al
   1400069fd:	add    BYTE PTR [rax],al
   1400069ff:	add    al,dh
   140006a01:	rex.WX add BYTE PTR [rax+0x1],al
   140006a05:	add    BYTE PTR [rax],al
   140006a07:	add    al,dh
   140006a09:	rex.WX add BYTE PTR [rax+0x1],al
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	add    al,dh
   140006a11:	rex.WX add BYTE PTR [rax+0x1],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    al,dh
   140006a19:	rex.WX add BYTE PTR [rax+0x1],al
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	add    al,dh
   140006a21:	rex.WX add BYTE PTR [rax+0x1],al
   140006a25:	add    BYTE PTR [rax],al
   140006a27:	add    al,dh
   140006a29:	rex.WX add BYTE PTR [rax+0x1],al
   140006a2d:	add    BYTE PTR [rax],al
   140006a2f:	add    al,dh
   140006a31:	rex.WX add BYTE PTR [rax+0x1],al
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    al,dh
   140006a39:	rex.WX add BYTE PTR [rax+0x1],al
   140006a3d:	add    BYTE PTR [rax],al
   140006a3f:	add    al,dh
   140006a41:	rex.WX add BYTE PTR [rax+0x1],al
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    al,dh
   140006a49:	rex.WX add BYTE PTR [rax+0x1],al
   140006a4d:	add    BYTE PTR [rax],al
   140006a4f:	add    al,dh
   140006a51:	rex.WX add BYTE PTR [rax+0x1],al
   140006a55:	add    BYTE PTR [rax],al
   140006a57:	add    al,dh
   140006a59:	rex.WX add BYTE PTR [rax+0x1],al
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    al,dh
   140006a61:	rex.WX add BYTE PTR [rax+0x1],al
   140006a65:	add    BYTE PTR [rax],al
   140006a67:	add    al,dh
   140006a69:	rex.WX add BYTE PTR [rax+0x1],al
   140006a6d:	add    BYTE PTR [rax],al
   140006a6f:	add    al,dh
   140006a71:	rex.WX add BYTE PTR [rax+0x1],al
   140006a75:	add    BYTE PTR [rax],al
   140006a77:	add    al,dh
   140006a79:	rex.WX add BYTE PTR [rax+0x1],al
   140006a7d:	add    BYTE PTR [rax],al
   140006a7f:	add    al,dh
   140006a81:	rex.WX add BYTE PTR [rax+0x1],al
   140006a85:	add    BYTE PTR [rax],al
   140006a87:	add    BYTE PTR [rax],ah
   140006a89:	sub    al,0x0
   140006a8b:	rex add DWORD PTR [rax],eax
   140006a8e:	add    BYTE PTR [rax],al
   140006a90:	push   rax
   140006a91:	adc    al,BYTE PTR [rax]
   140006a93:	rex add DWORD PTR [rax],eax
   140006a96:	add    BYTE PTR [rax],al
   140006a98:	shr    BYTE PTR [rax+rax*1],0x40
   140006a9c:	add    DWORD PTR [rax],eax
   140006a9e:	add    BYTE PTR [rax],al
   140006aa0:	lock rex.WX add BYTE PTR [rax+0x1],al
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    al,dh
   140006aa9:	rex.WX add BYTE PTR [rax+0x1],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	add    al,dh
   140006ab1:	rex.WX add BYTE PTR [rax+0x1],al
   140006ab5:	add    BYTE PTR [rax],al
   140006ab7:	add    al,dh
   140006ab9:	rex.WX add BYTE PTR [rax+0x1],al
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	add    al,dh
   140006ac1:	rex.WX add BYTE PTR [rax+0x1],al
   140006ac5:	add    BYTE PTR [rax],al
   140006ac7:	add    al,dh
   140006ac9:	rex.WX add BYTE PTR [rax+0x1],al
   140006acd:	add    BYTE PTR [rax],al
   140006acf:	add    al,dh
   140006ad1:	rex.WX add BYTE PTR [rax+0x1],al
   140006ad5:	add    BYTE PTR [rax],al
   140006ad7:	add    al,dh
   140006ad9:	rex.WX add BYTE PTR [rax+0x1],al
   140006add:	add    BYTE PTR [rax],al
   140006adf:	add    al,dh
   140006ae1:	rex.WX add BYTE PTR [rax+0x1],al
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    al,dh
   140006ae9:	rex.WX add BYTE PTR [rax+0x1],al
   140006aed:	add    BYTE PTR [rax],al
   140006aef:	add    al,dh
   140006af1:	rex.WX add BYTE PTR [rax+0x1],al
   140006af5:	add    BYTE PTR [rax],al
   140006af7:	add    al,dh
   140006af9:	rex.WX add BYTE PTR [rax+0x1],al
   140006afd:	add    BYTE PTR [rax],al
   140006aff:	add    al,dh
   140006b01:	rex.WX add BYTE PTR [rax+0x1],al
   140006b05:	add    BYTE PTR [rax],al
   140006b07:	add    al,dh
   140006b09:	rex.WX add BYTE PTR [rax+0x1],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    al,dh
   140006b11:	rex.WX add BYTE PTR [rax+0x1],al
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    al,dh
   140006b19:	rex.WX add BYTE PTR [rax+0x1],al
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    al,dh
   140006b21:	rex.WX add BYTE PTR [rax+0x1],al
   140006b25:	add    BYTE PTR [rax],al
   140006b27:	add    al,dh
   140006b29:	rex.WX add BYTE PTR [rax+0x1],al
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    al,dh
   140006b31:	rex.WX add BYTE PTR [rax+0x1],al
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    al,dh
   140006b39:	rex.WX add BYTE PTR [rax+0x1],al
   140006b3d:	add    BYTE PTR [rax],al
   140006b3f:	add    al,dh
   140006b41:	rex.WX add BYTE PTR [rax+0x1],al
   140006b45:	add    BYTE PTR [rax],al
   140006b47:	add    al,dh
   140006b49:	rex.WX add BYTE PTR [rax+0x1],al
   140006b4d:	add    BYTE PTR [rax],al
   140006b4f:	add    al,dh
   140006b51:	rex.WX add BYTE PTR [rax+0x1],al
   140006b55:	add    BYTE PTR [rax],al
   140006b57:	add    al,dh
   140006b59:	rex.WX add BYTE PTR [rax+0x1],al
   140006b5d:	add    BYTE PTR [rax],al
   140006b5f:	add    al,dh
   140006b61:	rex.WX add BYTE PTR [rax+0x1],al
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    al,dh
   140006b69:	rex.WX add BYTE PTR [rax+0x1],al
   140006b6d:	add    BYTE PTR [rax],al
   140006b6f:	add    al,dh
   140006b71:	rex.WX add BYTE PTR [rax+0x1],al
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    al,dh
   140006b79:	rex.WX add BYTE PTR [rax+0x1],al
   140006b7d:	add    BYTE PTR [rax],al
   140006b7f:	add    al,dh
   140006b81:	rex.WX add BYTE PTR [rax+0x1],al
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    al,dh
   140006b89:	rex.WX add BYTE PTR [rax+0x1],al
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    al,al
   140006b91:	adc    al,0x0
   140006b93:	rex add DWORD PTR [rax],eax
   140006b96:	add    BYTE PTR [rax],al
   140006b98:	and    BYTE PTR [rax+rax*1],ch
   140006b9b:	rex add DWORD PTR [rax],eax
   140006b9e:	add    BYTE PTR [rax],al
   140006ba0:	push   rax
   140006ba1:	adc    al,BYTE PTR [rax]
   140006ba3:	rex add DWORD PTR [rax],eax
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	shr    BYTE PTR [rax+rax*1],0x40
   140006bac:	add    DWORD PTR [rax],eax
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	loopne 0x140006bd8
   140006bb2:	add    BYTE PTR [rax+0x1],al
   140006bb5:	add    BYTE PTR [rax],al
   140006bb7:	add    al,dh
   140006bb9:	add    BYTE PTR es:[rax+0x1],al
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rax],dl
   140006bc1:	(bad)  
   140006bc2:	add    BYTE PTR [rax+0x1],al
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rax],dh
   140006bc9:	(bad)  
   140006bca:	add    BYTE PTR [rax+0x1],al
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rax+0x27],dh
   140006bd2:	add    BYTE PTR [rax+0x1],al
   140006bd5:	add    BYTE PTR [rax],al
   140006bd7:	add    BYTE PTR [rax+0x1400027],dl
   140006bdd:	add    BYTE PTR [rax],al
   140006bdf:	add    al,dl
   140006be1:	(bad)  
   140006be2:	add    BYTE PTR [rax+0x1],al
   140006be5:	add    BYTE PTR [rax],al
   140006be7:	add    BYTE PTR [rax],dl
   140006be9:	sub    BYTE PTR [rax],al
   140006beb:	rex add DWORD PTR [rax],eax
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	xor    BYTE PTR [rax],ch
   140006bf2:	add    BYTE PTR [rax+0x1],al
   140006bf5:	add    BYTE PTR [rax],al
   140006bf7:	add    BYTE PTR [rax+0x28],dl
   140006bfa:	add    BYTE PTR [rax+0x1],al
   140006bfd:	add    BYTE PTR [rax],al
   140006bff:	add    BYTE PTR [rax+0x28],dh
   140006c02:	add    BYTE PTR [rax+0x1],al
   140006c05:	add    BYTE PTR [rax],al
   140006c07:	add    BYTE PTR [rax+0x1400028],dl
   140006c0d:	add    BYTE PTR [rax],al
   140006c0f:	add    BYTE PTR [rax+0x1400028],dh
   140006c15:	add    BYTE PTR [rax],al
   140006c17:	add    al,dl
   140006c19:	sub    BYTE PTR [rax],al
   140006c1b:	rex add DWORD PTR [rax],eax
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	lock sub BYTE PTR [rax],al
   140006c23:	rex add DWORD PTR [rax],eax
   140006c26:	add    BYTE PTR [rax],al
   140006c28:	adc    BYTE PTR [rcx],ch
   140006c2a:	add    BYTE PTR [rax+0x1],al
   140006c2d:	add    BYTE PTR [rax],al
   140006c2f:	add    BYTE PTR [rax],dh
   140006c31:	sub    DWORD PTR [rax],eax
   140006c33:	rex add DWORD PTR [rax],eax
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	and    BYTE PTR [rdx],ch
   140006c3a:	add    BYTE PTR [rax+0x1],al
   140006c3d:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rax+0x2a],al
   140006c42:	add    BYTE PTR [rax+0x1],al
   140006c45:	add    BYTE PTR [rax],al
   140006c47:	add    BYTE PTR [rax+0x140002a],dl
   140006c4d:	add    BYTE PTR [rax],al
   140006c4f:	add    BYTE PTR [rax+0x140002a],dh
   140006c55:	add    BYTE PTR [rax],al
   140006c57:	add    al,dl
   140006c59:	sub    al,BYTE PTR [rax]
   140006c5b:	rex add DWORD PTR [rax],eax
   140006c5e:	add    BYTE PTR [rax],al
   140006c60:	lock sub al,BYTE PTR [rax]
   140006c63:	rex add DWORD PTR [rax],eax
   140006c66:	add    BYTE PTR [rax],al
   140006c68:	add    BYTE PTR [rbx],ch
   140006c6a:	add    BYTE PTR [rax+0x1],al
   140006c6d:	add    BYTE PTR [rax],al
   140006c6f:	add    BYTE PTR [rax],dh
   140006c71:	sub    eax,DWORD PTR [rax]
   140006c73:	rex add DWORD PTR [rax],eax
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	push   rax
   140006c79:	sub    eax,DWORD PTR [rax]
   140006c7b:	rex add DWORD PTR [rax],eax
   140006c7e:	add    BYTE PTR [rax],al
   140006c80:	jo     0x140006cad
   140006c82:	add    BYTE PTR [rax+0x1],al
   140006c85:	add    BYTE PTR [rax],al
   140006c87:	add    BYTE PTR [rax+0x140002b],al
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    BYTE PTR [rax+0x140002b],dl
   140006c95:	add    BYTE PTR [rax],al
   140006c97:	add    BYTE PTR [rax+0x140002b],ah
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    BYTE PTR [rax],dl
   140006ca1:	and    al,0x0
   140006ca3:	rex add DWORD PTR [rax],eax
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	mov    al,0x2b
   140006caa:	add    BYTE PTR [rax+0x1],al
   140006cad:	add    BYTE PTR [rax],al
   140006caf:	add    al,dl
   140006cb1:	sub    eax,DWORD PTR [rax]
   140006cb3:	rex add DWORD PTR [rax],eax
   140006cb6:	add    BYTE PTR [rax],al
   140006cb8:	lock sub eax,DWORD PTR [rax]
   140006cbb:	rex add DWORD PTR [rax],eax
   140006cbe:	add    BYTE PTR [rax],al
   140006cc0:	add    BYTE PTR [rax+rax*1],ch
   140006cc3:	rex add DWORD PTR [rax],eax
   140006cc6:	add    BYTE PTR [rax],al
   140006cc8:	lock rex.WX add BYTE PTR [rax+0x1],al
   140006ccd:	add    BYTE PTR [rax],al
   140006ccf:	add    al,dh
   140006cd1:	rex.WX add BYTE PTR [rax+0x1],al
   140006cd5:	add    BYTE PTR [rax],al
   140006cd7:	add    al,dh
   140006cd9:	rex.WX add BYTE PTR [rax+0x1],al
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rax],dl
   140006ce1:	cmp    BYTE PTR [rax],al
   140006ce3:	rex add DWORD PTR [rax],eax
   140006ce6:	add    BYTE PTR [rax],al
   140006ce8:	movabs al,ds:0x3000000001400038
   140006cf1:	cmp    DWORD PTR [rax],eax
   140006cf3:	rex add DWORD PTR [rax],eax
   140006cf6:	add    BYTE PTR [rax],al
   140006cf8:	sar    BYTE PTR [rcx],0x0
   140006cfb:	rex add DWORD PTR [rax],eax
   140006cfe:	add    BYTE PTR [rax],al
   140006d00:	cmp    al,BYTE PTR [rax]
   140006d03:	rex add DWORD PTR [rax],eax
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	nop
   140006d09:	cmp    al,BYTE PTR [rax]
   140006d0b:	rex add DWORD PTR [rax],eax
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	(bad)  
   140006d11:	xor    al,BYTE PTR [rax]
   140006d13:	rex add DWORD PTR [rax],eax
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	(bad)  
   140006d19:	xor    eax,DWORD PTR [rax]
   140006d1b:	rex add DWORD PTR [rax],eax
   140006d1e:	add    BYTE PTR [rax],al
   140006d20:	xor    BYTE PTR [rbx],0x0
   140006d23:	rex add DWORD PTR [rax],eax
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	adc    BYTE PTR [rax],bh
   140006d2a:	add    BYTE PTR [rax+0x1],al
   140006d2d:	add    BYTE PTR [rax],al
   140006d2f:	add    BYTE PTR [rax+0x1400038],ah
   140006d35:	add    BYTE PTR [rax],al
   140006d37:	add    BYTE PTR [rax],dh
   140006d39:	cmp    DWORD PTR [rax],eax
   140006d3b:	rex add DWORD PTR [rax],eax
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	sar    BYTE PTR [rcx],0x0
   140006d43:	rex add DWORD PTR [rax],eax
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	cmp    al,BYTE PTR [rax]
   140006d4b:	rex add DWORD PTR [rax],eax
   140006d4e:	add    BYTE PTR [rax],al
   140006d50:	nop
   140006d51:	cmp    al,BYTE PTR [rax]
   140006d53:	rex add DWORD PTR [rax],eax
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	nop
   140006d59:	(bad)  
   140006d5a:	add    BYTE PTR [rax+0x1],al
   140006d5d:	add    BYTE PTR [rax],al
   140006d5f:	add    BYTE PTR [rax+0x32],ah
   140006d62:	add    BYTE PTR [rax+0x1],al
   140006d65:	add    BYTE PTR [rax],al
   140006d67:	add    BYTE PTR [rax+0x33],ah
   140006d6a:	add    BYTE PTR [rax+0x1],al
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rax+0x1400033],al
   140006d75:	add    BYTE PTR [rax],al
   140006d77:	add    BYTE PTR [rax],dl
   140006d79:	cmp    BYTE PTR [rax],al
   140006d7b:	rex add DWORD PTR [rax],eax
   140006d7e:	add    BYTE PTR [rax],al
   140006d80:	movabs al,ds:0x3000000001400038
   140006d89:	cmp    DWORD PTR [rax],eax
   140006d8b:	rex add DWORD PTR [rax],eax
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	sar    BYTE PTR [rcx],0x0
   140006d93:	rex add DWORD PTR [rax],eax
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	cmp    al,BYTE PTR [rax]
   140006d9b:	rex add DWORD PTR [rax],eax
   140006d9e:	add    BYTE PTR [rax],al
   140006da0:	nop
   140006da1:	cmp    al,BYTE PTR [rax]
   140006da3:	rex add DWORD PTR [rax],eax
   140006da6:	add    BYTE PTR [rax],al
   140006da8:	shl    BYTE PTR [rsi],0x0
   140006dab:	rex add DWORD PTR [rax],eax
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	sub    BYTE PTR [rax],al
   140006db2:	outs   dx,BYTE PTR ds:[rsi]
   140006db3:	add    BYTE PTR [rbp+0x0],dh
   140006db6:	ins    BYTE PTR es:[rdi],dx
   140006db7:	add    BYTE PTR [rax+rax*1+0x29],ch
   140006dbb:	add    BYTE PTR [rax],al
   140006dbd:	add    BYTE PTR [rax],al
   140006dbf:	add    BYTE PTR [rbx+0x28],dl
   140006dc2:	sub    DWORD PTR [rdx],eax
   140006dc4:	(bad)  
   140006dc5:	out    0x7a,al
   140006dc7:	test   DWORD PTR [rax-0x65c30289],r15d
   140006dce:	jo     0x140006d5a
	...
   140006dd8:	rol    BYTE PTR [rax],0x0
   140006ddb:	add    BYTE PTR [rax],al
   140006ddd:	add    BYTE PTR [rax],al
   140006ddf:	rex.RX and eax,0x6400
   140006de5:	add    BYTE PTR [rax],al
   140006de7:	add    BYTE PTR [rcx+0x0],al
   140006dea:	jae    0x140006dec
   140006dec:	jae    0x140006dee
   140006dee:	outs   dx,DWORD PTR ds:[rsi]
   140006def:	add    BYTE PTR [rbx+0x0],ah
   140006df2:	imul   eax,DWORD PTR [rax],0x740061
   140006df8:	imul   eax,DWORD PTR [rax],0x6e006f
   140006dfe:	add    BYTE PTR [rax],al
   140006e00:	push   rbx
   140006e01:	add    BYTE PTR [rax+0x0],ch
   140006e04:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140006e09:	add    BYTE PTR [rbp+0x0],al
   140006e0c:	js     0x140006e0e
   140006e0e:	add    BYTE PTR gs:[rbx+0x0],ah
   140006e12:	jne    0x140006e14
   140006e14:	je     0x140006e16
   140006e16:	add    BYTE PTR gs:[rax],al
   140006e19:	add    BYTE PTR [rax],al
   140006e1b:	add    BYTE PTR [rax],al
   140006e1d:	add    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rdx+0x0],dl
   140006e22:	add    BYTE PTR gs:[rdi+0x0],ah
   140006e26:	imul   eax,DWORD PTR [rax],0x740073
   140006e2c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006e30:	add    BYTE PTR gs:[rax+rax*1+0x41],ah
   140006e35:	add    BYTE PTR [rax+0x0],dh
   140006e38:	jo     0x140006e3a
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	add    BYTE PTR [rax],al
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	je     0x140006e55
   140006e42:	mov    DWORD PTR [rax+0x47c3433c],ecx
   140006e48:	xchg   edx,eax
   140006e49:	xor    esp,esp
   140006e4b:	test   al,0xd6
   140006e4d:	rex.WRXB jns 0x140006e0c
   140006e50:	rex.RB pop r11
   140006e52:	(bad)  
   140006e53:	jle    0x140006e05
   140006e55:	sbb    al,0x43
   140006e57:	test   al,0xde
   140006e5a:	movabs eax,ds:0x4f00534a5860cf2f
   140006e63:	add    BYTE PTR [rsi+0x0],al
   140006e66:	push   rsp
   140006e67:	add    BYTE PTR [rdi+0x0],dl
   140006e6a:	add    BYTE PTR [r10+0x0],dl
   140006e6e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140006e73:	add    BYTE PTR [rcx+0x0],ch
   140006e76:	movsxd eax,DWORD PTR [rax]
   140006e78:	jb     0x140006e7a
   140006e7a:	outs   dx,DWORD PTR ds:[rsi]
   140006e7b:	add    BYTE PTR [rbx+0x0],dh
   140006e7e:	outs   dx,DWORD PTR ds:[rsi]
   140006e7f:	add    BYTE PTR [rsi+0x0],ah
   140006e82:	je     0x140006e84
   140006e84:	pop    rsp
   140006e85:	add    BYTE PTR [rdi+0x0],dl
   140006e88:	imul   eax,DWORD PTR [rax],0x64006e
   140006e8e:	outs   dx,DWORD PTR ds:[rsi]
   140006e8f:	add    BYTE PTR [rdi+0x0],dh
   140006e92:	jae    0x140006e94
   140006e94:	pop    rsp
   140006e95:	add    BYTE PTR [rbx+0x0],al
   140006e98:	jne    0x140006e9a
   140006e9a:	jb     0x140006e9c
   140006e9c:	jb     0x140006e9e
   140006e9e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006ea2:	je     0x140006ea4
   140006ea4:	push   rsi
   140006ea5:	add    BYTE PTR [rbp+0x0],ah
   140006ea8:	jb     0x140006eaa
   140006eaa:	jae    0x140006eac
   140006eac:	imul   eax,DWORD PTR [rax],0x6e006f
   140006eb2:	pop    rsp
   140006eb3:	add    BYTE PTR [rbp+0x0],al
   140006eb6:	js     0x140006eb8
   140006eb8:	jo     0x140006eba
   140006eba:	ins    BYTE PTR es:[rdi],dx
   140006ebb:	add    BYTE PTR [rdi+0x0],ch
   140006ebe:	jb     0x140006ec0
   140006ec0:	add    BYTE PTR gs:[rdx+0x0],dh
   140006ec4:	pop    rsp
   140006ec5:	add    BYTE PTR [rcx+0x0],al
   140006ec8:	jo     0x140006eca
   140006eca:	jo     0x140006ecc
   140006ecc:	rex.WXB add BYTE PTR [r13+0x0],spl
   140006ed0:	jns    0x140006ed2
   140006ed2:	add    BYTE PTR [rax],al
   140006ed4:	add    BYTE PTR [rax],al
   140006ed6:	add    BYTE PTR [rax],al
   140006ed8:	jrcxz  0x140006f3c
   140006eda:	sbb    BYTE PTR [rsi],bl
   140006edc:	mov    gs,WORD PTR [rcx-0x5f]
   140006edf:	xchg   r15,rax
   140006ee1:	push   rdx
   140006ee2:	fsubp  st(1),st
   140006ee4:	rex.WB and rax,0xffffffff9b88b3b9
   140006eea:	jae    0x140006e8f
   140006eec:	cmc    
   140006eed:	sbb    eax,0x42a749e7
   140006ef2:	hlt    
   140006ef3:	add    BYTE PTR [rsi+rbp*2],ah
   140006ef6:	in     al,dx
   140006ef7:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e1fd
   140006efd:	add    BYTE PTR [rax],al
   140006eff:	add    BYTE PTR [rdx+0x0],dh
   140006f02:	jne    0x140006f04
   140006f04:	outs   dx,BYTE PTR ds:[rsi]
   140006f05:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006f09:	add    BYTE PTR [rax+rax*1+0x33],ch
   140006f0d:	add    BYTE PTR [rdx],dh
   140006f0f:	add    BYTE PTR [rsi],ch
   140006f11:	add    BYTE PTR [rbp+0x0],ah
   140006f14:	js     0x140006f16
   140006f16:	add    BYTE PTR gs:[rax],ah
   140006f19:	add    BYTE PTR [rbp+0x0],dh
   140006f1c:	jae    0x140006f1e
   140006f1e:	add    BYTE PTR gs:[rdx+0x0],dh
   140006f22:	xor    eax,DWORD PTR [rax]
   140006f24:	xor    al,BYTE PTR [rax]
   140006f26:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140006f2b:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140006f2f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140006f33:	add    BYTE PTR [rbx+0x0],ah
   140006f36:	imul   eax,DWORD PTR [rax],0x57
   140006f39:	add    BYTE PTR [rdi+0x0],ch
   140006f3c:	jb     0x140006f3e
   140006f3e:	imul   eax,DWORD PTR [rax],0x53
   140006f41:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006f45:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006f49:	add    BYTE PTR [rdi+0x0],ch
   140006f4c:	outs   dx,BYTE PTR ds:[rsi]
   140006f4d:	add    BYTE PTR [rax],al
   140006f4f:	add    BYTE PTR [rbp+0x0],al
   140006f52:	(bad)  
   140006f53:	add    BYTE PTR [rax+rax*1+0x4d],ch
   140006f57:	add    BYTE PTR [rbp+0x0],ah
   140006f5a:	jae    0x140006f5c
   140006f5c:	jae    0x140006f5e
   140006f5e:	(bad)  
   140006f5f:	add    BYTE PTR [rdi+0x0],ah
   140006f62:	add    BYTE PTR gs:[rdi+0x0],dl
   140006f66:	imul   eax,DWORD PTR [rax],0x64006e
   140006f6c:	outs   dx,DWORD PTR ds:[rsi]
   140006f6d:	add    BYTE PTR [rdi+0x0],dh
	...
   140006f78:	xchg   esp,eax
   140006f79:	sub    ebp,edx
   140006f7b:	xchg   esp,eax
   140006f7c:	int3   
   140006f7d:	jmp    0x13fc0b962
   140006f82:	out    dx,al
   140006f83:	fs retf 0x5b8f
   140006f87:	nop
   140006f88:	add    eax,DWORD PTR [rax]
   140006f8a:	add    BYTE PTR [rax],al
   140006f8c:	add    BYTE PTR [rax],al
   140006f8e:	add    BYTE PTR [rax],al
   140006f90:	rol    BYTE PTR [rax],0x0
   140006f93:	add    BYTE PTR [rax],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	rex.RX push rbx
   140006f99:	add    BYTE PTR [rax+0x0],ch
   140006f9c:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140006fa1:	add    BYTE PTR [rdx+0x0],dl
   140006fa4:	add    BYTE PTR gs:[rcx+0x0],ah
   140006fa8:	add    BYTE PTR fs:[rcx+0x0],bh
   140006fac:	add    BYTE PTR [r14+0x0],r14b
   140006fb0:	add    BYTE PTR gs:[rsi+0x0],ch
   140006fb4:	je     0x140006fb6
	...
   140006fbe:	add    BYTE PTR [rax],al
   140006fc0:	push   rbx
   140006fc1:	add    BYTE PTR [rdi+0x0],cl
   140006fc4:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140006fc9:	add    BYTE PTR [rcx+0x0],al
   140006fcc:	push   rdx
   140006fcd:	add    BYTE PTR [rbp+0x0],al
   140006fd0:	pop    rsp
   140006fd1:	add    BYTE PTR [rbp+0x0],cl
   140006fd4:	imul   eax,DWORD PTR [rax],0x720063
   140006fda:	outs   dx,DWORD PTR ds:[rsi]
   140006fdb:	add    BYTE PTR [rbx+0x0],dh
   140006fde:	outs   dx,DWORD PTR ds:[rsi]
   140006fdf:	add    BYTE PTR [rsi+0x0],ah
   140006fe2:	je     0x140006fe4
   140006fe4:	pop    rsp
   140006fe5:	add    BYTE PTR [rdi+0x0],dl
   140006fe8:	imul   eax,DWORD PTR [rax],0x64006e
   140006fee:	outs   dx,DWORD PTR ds:[rsi]
   140006fef:	add    BYTE PTR [rdi+0x0],dh
   140006ff2:	jae    0x140006ff4
   140006ff4:	pop    rsp
   140006ff5:	add    BYTE PTR [rbx+0x0],al
   140006ff8:	jne    0x140006ffa
   140006ffa:	jb     0x140006ffc
   140006ffc:	jb     0x140006ffe
   140006ffe:	add    BYTE PTR gs:[rsi+0x0],ch
   140007002:	je     0x140007004
   140007004:	push   rsi
   140007005:	add    BYTE PTR [rbp+0x0],ah
   140007008:	jb     0x14000700a
   14000700a:	jae    0x14000700c
   14000700c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007012:	pop    rsp
   140007013:	add    BYTE PTR [rdi+0x0],cl
   140007016:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14000701a:	add    BYTE PTR [r8],r8b
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax+rax*1+0x61],cl
   140007023:	add    BYTE PTR [rbp+0x0],dh
   140007026:	outs   dx,BYTE PTR ds:[rsi]
   140007027:	add    BYTE PTR [rbx+0x0],ah
   14000702a:	push   0x73005500
   14000702f:	add    BYTE PTR [rbp+0x0],ah
   140007032:	jb     0x140007034
   140007034:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140007038:	rex.X add BYTE PTR [rbp+0x0],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	push   rbx
   140007041:	add    BYTE PTR [rdi+0x0],cl
   140007044:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140007049:	add    BYTE PTR [rcx+0x0],al
   14000704c:	push   rdx
   14000704d:	add    BYTE PTR [rbp+0x0],al
   140007050:	pop    rsp
   140007051:	add    BYTE PTR [rbp+0x0],cl
   140007054:	imul   eax,DWORD PTR [rax],0x720063
   14000705a:	outs   dx,DWORD PTR ds:[rsi]
   14000705b:	add    BYTE PTR [rbx+0x0],dh
   14000705e:	outs   dx,DWORD PTR ds:[rsi]
   14000705f:	add    BYTE PTR [rsi+0x0],ah
   140007062:	je     0x140007064
   140007064:	pop    rsp
   140007065:	add    BYTE PTR [rdi+0x0],dl
   140007068:	imul   eax,DWORD PTR [rax],0x64006e
   14000706e:	outs   dx,DWORD PTR ds:[rsi]
   14000706f:	add    BYTE PTR [rdi+0x0],dh
   140007072:	jae    0x140007074
   140007074:	and    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [r13+0x0],r13b
   14000707a:	(bad)  
   14000707b:	add    BYTE PTR [rbp+0x0],ah
   14000707e:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   140007083:	add    BYTE PTR [rax+rax*1+0x5c],ah
   140007087:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000708b:	add    BYTE PTR [rbx+0x0],ah
   14000708e:	imul   eax,DWORD PTR [rax],0x64
   140007091:	add    BYTE PTR [rdi+0x0],ch
   140007094:	ja     0x140007096
   140007096:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000709f:	add    BYTE PTR [rbp+0x0],al
   1400070a2:	ins    DWORD PTR es:[rdi],dx
   1400070a3:	add    BYTE PTR [rdx+0x0],ah
   1400070a6:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   1400070ab:	add    BYTE PTR [rbp+0x0],ah
   1400070ae:	add    BYTE PTR fs:[rax+rax*1+0x6f],cl
   1400070b3:	add    BYTE PTR [rbx+0x0],ah
   1400070b6:	imul   eax,DWORD PTR [rax],0x64
   1400070b9:	add    BYTE PTR [rdi+0x0],ch
   1400070bc:	ja     0x1400070be
   1400070be:	outs   dx,BYTE PTR ds:[rsi]
   1400070bf:	add    BYTE PTR [rdi+0x0],dl
   1400070c2:	ins    DWORD PTR es:[rdi],dx
   1400070c3:	add    BYTE PTR [rcx+0x0],ch
   1400070c6:	sub    eax,0x73004900
   1400070cb:	add    BYTE PTR [rcx+0x0],al
   1400070ce:	add    BYTE PTR fs:[rsi+0x0],dh
   1400070d2:	(bad)  
   1400070d3:	add    BYTE PTR [rsi+0x0],ch
   1400070d6:	movsxd eax,DWORD PTR [rax]
   1400070d8:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   1400070dd:	add    BYTE PTR [rdi+0x0],ch
   1400070e0:	outs   dx,BYTE PTR ds:[rsi]
   1400070e1:	add    BYTE PTR [rsi+0x0],ah
   1400070e4:	imul   eax,DWORD PTR [rax],0x450067
   1400070ea:	outs   dx,BYTE PTR ds:[rsi]
   1400070eb:	add    BYTE PTR [rcx+0x0],ah
   1400070ee:	(bad)  
   1400070ef:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400070f3:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400070f7:	add    BYTE PTR [rcx+0x0],al
   1400070fa:	jo     0x1400070fc
   1400070fc:	jo     0x1400070fe
   1400070fe:	push   rbp
   1400070ff:	add    BYTE PTR [rbx+0x0],dh
   140007102:	add    BYTE PTR gs:[rdx+0x0],dh
   140007106:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000710a:	add    BYTE PTR fs:[rbp+0x0],ah
   14000710e:	ins    BYTE PTR es:[rdi],dx
   14000710f:	add    BYTE PTR [rcx+0x0],cl
   140007112:	add    BYTE PTR fs:[rax],al
	...
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rbx+0x0],dl
   140007122:	outs   dx,DWORD PTR ds:[rsi]
   140007123:	add    BYTE PTR [rsi+0x0],ah
   140007126:	je     0x140007128
   140007128:	ja     0x14000712a
   14000712a:	(bad)  
   14000712b:	add    BYTE PTR [rdx+0x0],dh
   14000712e:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   140007133:	add    BYTE PTR [rax+rax*1+0x41],cl
   140007137:	add    BYTE PTR [rbx+0x0],dl
   14000713a:	push   rbx
   14000713b:	add    BYTE PTR [rbp+0x0],al
   14000713e:	push   rbx
   14000713f:	add    BYTE PTR [rax+rax*1+0x43],bl
   140007143:	add    BYTE PTR [rax+rax*1+0x53],cl
   140007147:	add    BYTE PTR [rcx+0x0],cl
   14000714a:	add    BYTE PTR [rax+rax*1+0x7b],r11b
   14000714f:	add    BYTE PTR [rcx+0x0],al
   140007152:	rex.X add BYTE PTR [rdx+0x0],al
   140007156:	xor    eax,DWORD PTR [rax]
   140007158:	rex.RX add BYTE PTR [rdx+0x0],r8b
   14000715c:	add    BYTE PTR [r8+rax*1+0x2d],al
   140007161:	add    BYTE PTR [rbx+0x0],al
   140007164:	rex.RX add BYTE PTR [rdx+0x0],r8b
   140007168:	rex.X add BYTE PTR [rip+0x31003400],bpl        # 0x17100a56f
   14000716f:	add    BYTE PTR [rbx+0x0],al
   140007172:	add    BYTE PTR ss:[rip+0x43003800],ch        # 0x18300a979
   140007179:	add    BYTE PTR [rax+rax*1+0x32],al
   14000717d:	add    BYTE PTR [rip+0x32003700],ch        # 0x17200a883
   140007183:	add    BYTE PTR [rsi+0x0],al
   140007186:	xor    eax,0x45003200
   14000718b:	add    BYTE PTR [rcx+0x0],al
   14000718e:	add    BYTE PTR ss:[rax],dh
   140007191:	add    BYTE PTR [rcx+0x0],al
   140007194:	add    BYTE PTR [rdx+0x0],r8b
   140007198:	jge    0x14000719a
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018b39
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	cmp    BYTE PTR [rdx+0x0],bh
	...
   1400071b3:	add    BYTE PTR [rcx],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rax+0x7a],al
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	and    BYTE PTR [rax],al
	...
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	and    al,BYTE PTR [rip+0x11993]        # 0x140018b61
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	adc    BYTE PTR [rdx+0x0],bh
	...
   1400071db:	add    BYTE PTR [rcx],al
   1400071dd:	add    BYTE PTR [rax],al
   1400071df:	add    BYTE PTR [rax],bl
   1400071e1:	jp     0x1400071e3
	...
   1400071ef:	add    BYTE PTR [rdx],ah
   1400071f1:	add    eax,0x31993
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	int3   
   1400071f9:	jns    0x1400071fb
	...
   140007203:	add    BYTE PTR [rbx],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    al,ch
   140007209:	jns    0x14000720b
   14000720b:	add    BYTE PTR [rax],ah
	...
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rdx],ah
   140007219:	add    eax,0x61993
   14000721e:	add    BYTE PTR [rax],al
   140007220:	cmp    al,0x79
	...
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	or     BYTE PTR [rax],al
   14000722e:	add    BYTE PTR [rax],al
   140007230:	jo     0x1400072ab
   140007232:	add    BYTE PTR [rax],al
   140007234:	sub    BYTE PTR [rax],al
	...
   14000723e:	add    BYTE PTR [rax],al
   140007240:	and    al,BYTE PTR [rip+0x21993]        # 0x140028bd9
   140007246:	add    BYTE PTR [rax],al
   140007248:	sar    BYTE PTR [rbp+0x0],0x0
	...
   140007254:	add    DWORD PTR [rax],eax
   140007256:	add    BYTE PTR [rax],al
   140007258:	sar    BYTE PTR [rbp+0x0],1
   14000725b:	add    BYTE PTR [rax],ah
	...
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rdx],ah
   140007269:	add    eax,0x71993
   14000726e:	add    BYTE PTR [rax],al
   140007270:	and    BYTE PTR [rbp+0x0],bh
	...
   14000727b:	add    BYTE PTR [rdx],cl
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rax+0x7d],ah
   140007282:	add    BYTE PTR [rax],al
   140007284:	sub    BYTE PTR [rax],al
	...
   14000728e:	add    BYTE PTR [rax],al
   140007290:	and    al,BYTE PTR [rip+0x41993]        # 0x140048c29
   140007296:	add    BYTE PTR [rax],al
   140007298:	mov    al,0x7c
	...
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	(bad)  
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    al,dl
   1400072a9:	jl     0x1400072ab
   1400072ab:	add    BYTE PTR [rax],ch
	...
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rdx],ah
   1400072b9:	add    eax,0x21993
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	pop    rsp
   1400072c1:	jl     0x1400072c3
	...
   1400072cb:	add    BYTE PTR [rip+0x70000000],al        # 0x1b00072d1
   1400072d1:	jl     0x1400072d3
   1400072d3:	add    BYTE PTR [rax],dh
	...
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rdx],ah
   1400072e1:	add    eax,0x41993
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	fdivr  DWORD PTR [rbx+0x0]
	...
   1400072f3:	add    BYTE PTR [rax],cl
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rax],al
   1400072f9:	jl     0x1400072fb
   1400072fb:	add    BYTE PTR [rax+0x0],cl
	...
   140007306:	add    BYTE PTR [rax],al
   140007308:	and    al,BYTE PTR [rip+0x71993]        # 0x140078ca1
   14000730e:	add    BYTE PTR [rax],al
   140007310:	or     al,0x7b
	...
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	or     eax,0x50000000
   140007321:	jnp    0x140007323
   140007323:	add    BYTE PTR [rax+0x0],bl
   140007329:	add    BYTE PTR [rax],al
   14000732b:	add    BYTE PTR [rax],al
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    BYTE PTR [rdx],ah
   140007331:	add    eax,0x41993
   140007336:	add    BYTE PTR [rax],al
   140007338:	jl     0x1400073b4
	...
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    eax,0xa0000000
   140007349:	jp     0x14000734b
   14000734b:	add    BYTE PTR [rax],ah
	...
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rdx],ah
   140007359:	add    eax,0x51993
   14000735e:	add    BYTE PTR [rax],al
   140007360:	or     BYTE PTR [rsi+0x0],bh
	...
   14000736b:	add    BYTE PTR [rdx],cl
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rax],dh
   140007371:	jle    0x140007373
   140007373:	add    BYTE PTR [rax+0x0],cl
	...
   14000737e:	add    BYTE PTR [rax],al
   140007380:	and    al,BYTE PTR [rip+0x41993]        # 0x140048d19
   140007386:	add    BYTE PTR [rax],al
   140007388:	mov    al,0x7c
	...
   140007392:	add    BYTE PTR [rax],al
   140007394:	(bad)  
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rax],al
   140007399:	jg     0x14000739b
   14000739b:	add    BYTE PTR [rax],ch
	...
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rdx],ah
   1400073a9:	add    eax,0x31993
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	pushf  
   1400073b1:	jle    0x1400073b3
	...
   1400073bb:	add    BYTE PTR [rsi],al
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rax+0x2000007e],bh
	...
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rdx],ah
   1400073d1:	add    eax,0x41993
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	(bad)
	...
   1400073e4:	add    eax,DWORD PTR [rax]
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	and    BYTE PTR [rdx+0x200000],al
	...
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	and    al,BYTE PTR [rip+0x41993]        # 0x140048d91
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	(bad)
	...
   14000740c:	add    eax,DWORD PTR [rax]
   14000740e:	add    BYTE PTR [rax],al
   140007410:	call   0x160007496
	...
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rdx],ah
   140007421:	add    eax,0x51993
   140007426:	add    BYTE PTR [rax],al
   140007428:	ins    BYTE PTR es:[rdi],dx
   140007429:	add    DWORD PTR [rax],0x0
   14000742f:	add    BYTE PTR [rax],al
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rbx],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rax+0x20000081],bl
	...
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    BYTE PTR [rdx],ah
   140007449:	add    eax,0x61993
   14000744e:	add    BYTE PTR [rax],al
   140007450:	loopne 0x1400073d2
	...
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	or     BYTE PTR [rax],al
   14000745e:	add    BYTE PTR [rax],al
   140007460:	adc    BYTE PTR [rcx+0x200000],al
	...
   14000746e:	add    BYTE PTR [rax],al
   140007470:	and    al,BYTE PTR [rip+0x21993]        # 0x140028e09
   140007476:	add    BYTE PTR [rax],al
   140007478:	cwde   
   140007479:	add    BYTE PTR [rax],0x0
	...
   140007484:	add    al,0x0
   140007486:	add    BYTE PTR [rax],al
   140007488:	test   al,0x80
   14000748a:	add    BYTE PTR [rax],al
   14000748c:	sub    BYTE PTR [rax],al
	...
   140007496:	add    BYTE PTR [rax],al
   140007498:	and    al,BYTE PTR [rip+0x11993]        # 0x140018e31
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	ins    BYTE PTR es:[rdi],dx
   1400074a1:	add    BYTE PTR [rax],0x0
	...
   1400074ac:	add    DWORD PTR [rax],eax
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	js     0x140007432
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	and    BYTE PTR [rax],al
	...
   1400074be:	add    BYTE PTR [rax],al
   1400074c0:	and    al,BYTE PTR [rip+0x21993]        # 0x140028e59
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	cmp    al,0x80
	...
   1400074d2:	add    BYTE PTR [rax],al
   1400074d4:	add    DWORD PTR [rax],eax
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	push   rax
   1400074d9:	add    BYTE PTR [rax],0x0
   1400074dc:	and    BYTE PTR [rax],al
	...
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	and    al,BYTE PTR [rip+0x31993]        # 0x140038e81
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	hlt    
   1400074f1:	jg     0x1400074f3
	...
   1400074fb:	add    BYTE PTR [rbx],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rax],dl
   140007501:	add    BYTE PTR [rax],0x0
   140007504:	and    BYTE PTR [rax],al
	...
   14000750e:	add    BYTE PTR [rax],al
   140007510:	and    al,BYTE PTR [rip+0x31993]        # 0x140038ea9
   140007516:	add    BYTE PTR [rax],al
   140007518:	xchg   esp,eax
   140007519:	jg     0x14000751b
	...
   140007523:	add    BYTE PTR [rsi],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rax+0x3000007f],dh
	...
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rdx],ah
   140007539:	add    eax,0x21993
   14000753e:	add    BYTE PTR [rax],al
   140007540:	cwde   
   140007541:	(bad)  
	...
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	add    eax,0xa8000000
   140007551:	(bad)  
   140007552:	add    BYTE PTR [rax],al
   140007554:	xor    BYTE PTR [rax],al
	...
   140007562:	add    BYTE PTR [rax],al
   140007564:	(bad)  
   140007565:	cmp    BYTE PTR [rdi+0x55],bl
   14000756b:	add    BYTE PTR [rdx],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rax],dh
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax+0x76],ah
   140007576:	add    BYTE PTR [rax],al
   140007578:	(bad)  
   140007579:	add    BYTE PTR fs:[rax],al
   14000757c:	add    BYTE PTR [rax],al
   14000757e:	add    BYTE PTR [rax],al
   140007580:	(bad)  
   140007581:	cmp    BYTE PTR [rdi+0x55],bl
   140007587:	add    BYTE PTR [rip+0x40000000],cl        # 0x18000758d
   14000758d:	add    al,BYTE PTR [rax]
   14000758f:	add    BYTE PTR [rsi+rsi*2+0x64a40000],ah
	...
   1400075be:	add    BYTE PTR [rax],al
   1400075c0:	movabs al,ds:0x0
	...
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    BYTE PTR [rax],bl
   140007619:	movabs al,ds:0x14000
	...
   14000762e:	add    BYTE PTR [rax],al
   140007630:	sub    BYTE PTR [rax+rax*1+0x40],ah
   140007634:	add    DWORD PTR [rax],eax
   140007636:	add    BYTE PTR [rax],al
   140007638:	xor    BYTE PTR [rax+rax*1+0x40],ah
   14000763c:	add    DWORD PTR [rax],eax
   14000763e:	add    BYTE PTR [rax],al
   140007640:	js     0x1400076a6
   140007642:	add    BYTE PTR [rax+0x1],al
   140007645:	add    BYTE PTR [rax],al
   140007647:	add    BYTE PTR [rcx+0x0],bl
   14000764a:	add    BYTE PTR [rax],al
   14000764c:	add    BYTE PTR [rax],al
   14000764e:	add    BYTE PTR [rax],al
   140007650:	add    BYTE PTR [rip+0x0],dh        # 0x140007656
	...
   14000765e:	add    BYTE PTR [rax],al
   140007660:	push   rdx
   140007661:	push   rbx
   140007662:	rex.R push rbx
   140007664:	jmp    0x198a0b082
   140007669:	mov    eax,0x1399481c
   14000766e:	sbb    esp,DWORD PTR [rdx-0x29a74b32]
   140007674:	add    DWORD PTR [rax],eax
   140007676:	add    BYTE PTR [rax],al
   140007678:	rex.RB ins DWORD PTR es:[rdi],dx
   14000767a:	(bad)  
   14000767b:	gs fs fs gs fs rex.B jo 0x1400076f3
   140007683:	rex.WR (bad) 
   140007685:	jne    0x1400076f5
   140007687:	movsxd ebp,DWORD PTR [rax+0x65]
   14000768a:	jb     0x1400076ba
   14000768c:	jo     0x1400076f2
   14000768e:	(bad)  
	...
   1400076a3:	add    BYTE PTR [rdi+0x43],al
   1400076a6:	push   rsp
   1400076a7:	rex.WR add BYTE PTR [rax],r10b
   1400076aa:	add    BYTE PTR [rax],al
   1400076ac:	xor    eax,DWORD PTR [rax]
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	cs je  0x140007718
   1400076b3:	js     0x140007729
   1400076b5:	and    al,0x64
   1400076b7:	imul   eax,DWORD PTR [rax],0x40000000
   1400076bd:	adc    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rdx+rax*2+0x0],al
   1400076c3:	add    BYTE PTR [rsi],ch
   1400076c5:	je     0x14000772c
   1400076c7:	js     0x14000773d
   1400076c9:	and    al,0x6d
   1400076cb:	outs   dx,BYTE PTR ds:[rsi]
   1400076cc:	add    BYTE PTR [rax],al
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	nop
   1400076d1:	push   rdx
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	adc    al,BYTE PTR [rax]
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	cs je  0x140007740
   1400076db:	js     0x140007751
   1400076dd:	and    al,0x6d
   1400076df:	outs   dx,BYTE PTR ds:[rsi]
   1400076e0:	and    al,0x30
   1400076e2:	xor    BYTE PTR [rax],al
   1400076e4:	mov    al,0x52
   1400076e6:	add    BYTE PTR [rax],al
   1400076e8:	(bad)  
   1400076e9:	add    eax,0x742e0000
   1400076ee:	gs js  0x140007765
   1400076f1:	and    al,0x78
   1400076f3:	add    BYTE PTR [rax],dl
   1400076f5:	pop    rax
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	pop    rdx
   1400076f9:	add    BYTE PTR [rax],al
   1400076fb:	add    BYTE PTR [rsi],ch
   1400076fd:	je     0x140007764
   1400076ff:	js     0x140007775
   140007701:	and    al,0x79
   140007703:	add    BYTE PTR fs:[rax],al
   140007706:	add    BYTE PTR [rax],al
   140007708:	add    BYTE PTR [rax+0x0],ah
   14000770b:	add    BYTE PTR [rax],ch
   14000770d:	add    al,0x0
   14000770f:	add    BYTE PTR [rsi],ch
   140007711:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007719:	add    BYTE PTR [rax],al
   14000771b:	add    BYTE PTR [rax],ch
   14000771d:	add    BYTE PTR fs:[rax],al
   140007720:	adc    BYTE PTR [rax],al
   140007722:	add    BYTE PTR [rax],al
   140007724:	xor    BYTE PTR cs:[rax],dh
   140007727:	movsxd esp,DWORD PTR [rsi+0x67]
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   140007730:	or     BYTE PTR [rax],al
   140007732:	add    BYTE PTR [rax],al
   140007734:	cs rex.XB push r10
   140007737:	push   rsp
   140007738:	and    al,0x58
   14000773a:	rex.XB
   14000773b:	add    BYTE PTR [r8],al
   14000773e:	add    BYTE PTR [rax],al
   140007740:	rex
   140007741:	add    BYTE PTR fs:[rax],al
   140007744:	or     BYTE PTR [rax],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	cs rex.XB push r10
   14000774b:	push   rsp
   14000774c:	and    al,0x58
   14000774e:	rex.XB
   14000774f:	rex.B
   140007750:	add    BYTE PTR [r8],al
   140007753:	add    BYTE PTR [rax+0x64],cl
   140007756:	add    BYTE PTR [rax],al
   140007758:	or     BYTE PTR [rax],al
   14000775a:	add    BYTE PTR [rax],al
   14000775c:	cs rex.XB push r10
   14000775f:	push   rsp
   140007760:	and    al,0x58
   140007762:	rex.XB push r13
   140007764:	add    BYTE PTR [rax],al
   140007766:	add    BYTE PTR [rax],al
   140007768:	push   rax
   140007769:	add    BYTE PTR fs:[rax],al
   14000776c:	or     BYTE PTR [rax],al
   14000776e:	add    BYTE PTR [rax],al
   140007770:	cs rex.XB push r10
   140007773:	push   rsp
   140007774:	and    al,0x58
   140007776:	rex.XB pop r10
   140007778:	add    BYTE PTR [rax],al
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	pop    rax
   14000777d:	add    BYTE PTR fs:[rax],al
   140007780:	or     BYTE PTR [rax],al
   140007782:	add    BYTE PTR [rax],al
   140007784:	cs rex.XB push r10
   140007787:	push   rsp
   140007788:	and    al,0x58
   14000778a:	rex.WB
   14000778b:	add    BYTE PTR [r8],al
   14000778e:	add    BYTE PTR [rax],al
   140007790:	(bad)  
   140007791:	add    BYTE PTR fs:[rax],al
   140007794:	or     BYTE PTR [rax],al
   140007796:	add    BYTE PTR [rax],al
   140007798:	cs rex.XB push r10
   14000779b:	push   rsp
   14000779c:	and    al,0x58
   14000779e:	rex.WB
   14000779f:	rex.B
   1400077a0:	add    BYTE PTR [r8],al
   1400077a3:	add    BYTE PTR [rax+0x64],ch
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	or     BYTE PTR [rax],al
   1400077aa:	add    BYTE PTR [rax],al
   1400077ac:	cs rex.XB push r10
   1400077af:	push   rsp
   1400077b0:	and    al,0x58
   1400077b2:	rex.WB pop r9
   1400077b4:	add    BYTE PTR [rax],al
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	jo     0x14000781e
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	or     BYTE PTR [rax],al
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	cs rex.XB push r10
   1400077c3:	push   rsp
   1400077c4:	and    al,0x58
   1400077c6:	rex.WB pop r10
   1400077c8:	add    BYTE PTR [rax],al
   1400077ca:	add    BYTE PTR [rax],al
   1400077cc:	js     0x140007832
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	add    DWORD PTR fs:[rax],eax
   1400077d3:	add    BYTE PTR [rsi],ch
   1400077d5:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400077dd:	add    BYTE PTR [rax],al
   1400077df:	add    al,ah
   1400077e1:	add    BYTE PTR gs:[rax],al
   1400077e4:	adc    BYTE PTR [rax],0x0
   1400077e7:	add    BYTE PTR [rsi],ch
   1400077e9:	jb     0x14000784f
   1400077eb:	(bad)  
   1400077ec:	je     0x14000784f
   1400077ee:	add    BYTE PTR [rax],al
   1400077f0:	(bad)  
   1400077f1:	jbe    0x1400077f3
   1400077f3:	add    BYTE PTR [rdx+rax*1+0x722e0000],al
   1400077fa:	fs (bad) 
   1400077fc:	je     0x14000785f
   1400077fe:	and    al,0x7a
   140007800:	jp     0x14000787c
   140007802:	fs (bad) 
   140007804:	add    BYTE PTR [eax],al
   140007807:	add    al,dh
   140007809:	js     0x14000780b
   14000780b:	add    ah,al
   14000780d:	or     eax,DWORD PTR [rax]
   14000780f:	add    BYTE PTR [rsi],ch
   140007811:	js     0x140007877
   140007813:	(bad)  
   140007814:	je     0x140007877
   140007816:	add    BYTE PTR [rax],al
   140007818:	mov    eax,0x84000084
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rsi],ch
   140007821:	js     0x140007887
   140007823:	(bad)  
   140007824:	je     0x140007887
   140007826:	and    al,0x78
   140007828:	add    BYTE PTR [rax],al
   14000782a:	add    BYTE PTR [rax],al
   14000782c:	rex test DWORD PTR [rax],eax
   14000782f:	add    al,dh
   140007831:	add    BYTE PTR [rax],al
   140007833:	add    BYTE PTR [rsi],ch
   140007835:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000783d:	add    BYTE PTR [rax],al
   14000783f:	add    BYTE PTR [rax],dh
   140007841:	xchg   BYTE PTR [rax],al
   140007843:	add    BYTE PTR [rax+rax*1],dl
   140007846:	add    BYTE PTR [rax],al
   140007848:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007851:	add    BYTE PTR [rax],al
   140007853:	add    BYTE PTR [rax-0x7a],cl
   140007856:	add    BYTE PTR [rax],al
   140007858:	sub    BYTE PTR [rax+rax*1],al
   14000785b:	add    BYTE PTR [rsi],ch
   14000785d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax-0x76],dh
   14000786a:	add    BYTE PTR [rax],al
   14000786c:	(bad)  
   14000786d:	or     DWORD PTR [rax],eax
   14000786f:	add    BYTE PTR [rsi],ch
   140007871:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007879:	add    BYTE PTR [rax],al
   14000787b:	add    BYTE PTR [rax],al
   14000787d:	movabs al,ds:0x642e000000300000
   140007886:	(bad)  
   140007887:	je     0x1400078ea
   140007889:	add    BYTE PTR [rax],al
   14000788b:	add    BYTE PTR [rax],dh
   14000788d:	movabs al,ds:0x642e000000440000
   140007896:	(bad)  
   140007897:	je     0x1400078fa
   140007899:	and    al,0x72
   14000789b:	add    BYTE PTR [rax+0x380000a0],al
   1400078a1:	(bad)  
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	cs (bad) 
   1400078a7:	jae    0x1400078a9
   1400078a9:	add    BYTE PTR [rax],al
   1400078ab:	add    BYTE PTR [rax],al
   1400078ad:	mov    al,0x0
   1400078af:	add    ah,ch
   1400078b1:	add    al,0x0
   1400078b3:	add    BYTE PTR [rsi],ch
   1400078b5:	jo     0x14000791b
   1400078b7:	(bad)  
   1400078b8:	je     0x14000791b
   1400078ba:	add    BYTE PTR [rax],al
   1400078bc:	add    al,al
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	push   rsp
   1400078c1:	add    DWORD PTR [rax],eax
   1400078c3:	add    BYTE PTR [rsi],ch
   1400078c5:	jb     0x14000793a
   1400078c7:	jb     0x14000792c
   1400078c9:	and    al,0x30
   1400078cb:	xor    DWORD PTR [rax],eax
   1400078cd:	add    BYTE PTR [rax],al
   1400078cf:	add    BYTE PTR [rax-0x3f],ah
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	test   al,0x1b
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	cs jb  0x14000794e
   1400078db:	jb     0x140007940
   1400078dd:	and    al,0x30
   1400078df:	xor    al,BYTE PTR [rax]
	...
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rcx],al
   1400078f1:	or     al,BYTE PTR [rax+rax*1]
   1400078f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400078f7:	add    BYTE PTR [rdx],cl
   1400078f9:	xor    al,BYTE PTR [rsi]
   1400078fb:	jo     0x140007916
   1400078fd:	es add eax,0x36341500
   140007903:	add    BYTE PTR [rip+0x6003201],dl        # 0x14600ab0a
   140007909:	push   rax
   14000790a:	add    BYTE PTR [rax],al
   14000790c:	pop    rax
   14000790d:	push   rcx
   14000790e:	add    BYTE PTR [rax],al
   140007910:	add    BYTE PTR [rcx],0x0
   140007913:	add    BYTE PTR [rcx],al
   140007915:	clts   
   140007917:	add    BYTE PTR [rdi],cl
   140007919:	fs (bad) 
   14000791b:	add    BYTE PTR [rdi],cl
   14000791d:	xor    al,0x6
   14000791f:	add    BYTE PTR [rdi],cl
   140007921:	xor    cl,BYTE PTR [rbx]
   140007923:	jo     0x140007936
   140007925:	sbb    BYTE PTR [rip+0xc621000],al        # 0x14c62892b
   14000792b:	loopne 0x140007937
   14000792d:	jo     0x140007938
   14000792f:	(bad)  
   140007930:	or     BYTE PTR [rax],dh
   140007932:	add    BYTE PTR [rax],al
   140007934:	sbb    BYTE PTR [rcx+0x0],dl
   140007937:	add    BYTE PTR [rax],bl
   140007939:	jb     0x14000793b
   14000793b:	add    bh,bh
   14000793d:	(bad)  
   14000793e:	(bad)  
   14000793f:	push   QWORD PTR [rsi+0x52]
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    ah,bl
   140007949:	push   rdx
   14000794a:	add    BYTE PTR [rax],al
   14000794c:	add    DWORD PTR [rax],eax
   14000794e:	add    BYTE PTR [rax],al
   140007950:	call   0x1420079a7
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rbx+rdx*2],al
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	add    al,BYTE PTR [rax]
   14000795e:	add    BYTE PTR [rax],al
   140007960:	adc    BYTE PTR [rbx+0x0],dl
   140007963:	add    BYTE PTR [rax+rax*1],al
   140007966:	add    BYTE PTR [rax],al
   140007968:	sbb    al,0x53
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	clc    
   140007971:	adc    al,BYTE PTR [rax]
   140007973:	add    bh,bh
   140007975:	(bad)  
   140007976:	(bad)  
   140007977:	call   QWORD PTR [rbx]
   140007979:	adc    eax,DWORD PTR [rax]
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rax],ch
   140007981:	adc    eax,DWORD PTR [rax]
   140007983:	add    BYTE PTR [rcx],al
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rdx+0x13],dl
   14000798a:	add    BYTE PTR [rax],al
   14000798c:	add    al,BYTE PTR [rax]
   14000798e:	add    BYTE PTR [rax],al
   140007990:	pop    rdi
   140007991:	adc    eax,DWORD PTR [rax]
   140007993:	add    BYTE PTR [rbx],al
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rbx+0x4000013],cl
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rbx+0x1000013],dh
   1400079a5:	add    BYTE PTR [rax],al
   1400079a7:	add    dl,bl
   1400079a9:	adc    eax,DWORD PTR [rax]
   1400079ab:	add    BYTE PTR [rax],al
   1400079ad:	add    BYTE PTR [rax],al
   1400079af:	add    BYTE PTR [rcx],al
   1400079b1:	(bad)  
   1400079b2:	add    al,BYTE PTR [rax]
   1400079b4:	(bad)  
   1400079b5:	xor    al,BYTE PTR [rdx]
   1400079b7:	push   rax
   1400079b8:	adc    DWORD PTR [rax],ebx
   1400079ba:	add    al,0x0
   1400079bc:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400079bf:	add    BYTE PTR [rdx],cl
   1400079c1:	push   rdx
   1400079c2:	(bad)  
   1400079c3:	jo     0x1400079dd
   1400079c5:	push   rcx
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	lock jno 0x1400079cb
   1400079cb:	add    bh,bh
   1400079cd:	(bad)  
   1400079ce:	(bad)  
   1400079cf:	push   QWORD PTR [rdx]
   1400079d1:	push   rbx
   1400079d2:	add    BYTE PTR [rax],al
   1400079d4:	add    BYTE PTR [rax],al
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	ds push rbx
   1400079da:	add    BYTE PTR [rax],al
   1400079dc:	(bad)  
   1400079dd:	(bad)  
   1400079de:	(bad)  
   1400079df:	dec    DWORD PTR [rsi+0x53]
   1400079e2:	add    BYTE PTR [rax],al
   1400079e4:	add    BYTE PTR [rax],al
   1400079e6:	add    BYTE PTR [rax],al
   1400079e8:	add    BYTE PTR [rax+rax*1],dl
   1400079eb:	add    bh,bh
   1400079ed:	(bad)  
   1400079ee:	(bad)  
   1400079ef:	call   FWORD PTR [rip+0x14]        # 0x140007a09
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rip+0xffffffffff000014],ch        # 0x13f007a11
   1400079fd:	(bad)  
   1400079fe:	(bad)  
   1400079ff:	call   QWORD PTR [rcx]
   140007a01:	adc    DWORD PTR [rcx],eax
   140007a03:	add    BYTE PTR [rcx],cl
   140007a05:	and    al,BYTE PTR [rax]
   140007a07:	add    BYTE PTR [rax],bl
   140007a09:	push   rcx
   140007a0a:	add    BYTE PTR [rax],al
   140007a0c:	enter  0x71,0x0
   140007a10:	(bad)  
   140007a11:	(bad)  
   140007a12:	(bad)  
   140007a13:	jmp    QWORD PTR [rax+0x53]
   140007a16:	add    BYTE PTR [rax],al
   140007a18:	pop    rax
   140007a19:	adc    al,0x0
   140007a1b:	add    bh,bh
   140007a1d:	(bad)  
   140007a1e:	(bad)  
   140007a1f:	inc    DWORD PTR [rcx]
   140007a21:	add    al,0x1
   140007a23:	add    BYTE PTR [rdx+rax*2],al
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	adc    DWORD PTR [rbx],edx
   140007a2a:	add    al,BYTE PTR [rax]
   140007a2c:	or     dl,BYTE PTR [rdx+0x6]
   140007a2f:	xor    BYTE PTR [rax],bl
   140007a31:	push   rcx
   140007a32:	add    BYTE PTR [rax],al
   140007a34:	movabs al,ds:0x72ffffffff000071
   140007a3d:	push   rbx
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	rcl    BYTE PTR [rax+rax*1],0x0
   140007a44:	(bad)  
   140007a45:	(bad)  
   140007a46:	(bad)  
   140007a47:	inc    DWORD PTR [rcx]
   140007a49:	(bad)  
   140007a4a:	add    al,BYTE PTR [rax]
   140007a4c:	(bad)  
   140007a4d:	push   rdx
   140007a4e:	add    dh,BYTE PTR [rax]
   140007a50:	add    DWORD PTR [rsi],eax
   140007a52:	add    al,BYTE PTR [rax]
   140007a54:	(bad)  
   140007a55:	jb     0x140007a59
   140007a57:	xor    BYTE PTR [rcx],al
   140007a59:	(bad)  
   140007a5a:	add    al,BYTE PTR [rax]
   140007a5c:	(bad)  
   140007a5d:	xchg   edx,eax
   140007a5e:	add    dh,BYTE PTR [rax]
   140007a60:	adc    DWORD PTR [rax],esp
   140007a62:	or     BYTE PTR [rax],al
   140007a64:	and    BYTE PTR [rbx+rcx*1+0x0],ah
   140007a68:	sbb    al,0x54
   140007a6a:	or     al,BYTE PTR [rax]
   140007a6c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140007a6f:	add    BYTE PTR [rdx+rdx*2],cl
   140007a72:	or     BYTE PTR [rax+0x18],dh
   140007a75:	push   rcx
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	xor    BYTE PTR [rbx+0x0],dh
   140007a7b:	add    bh,bh
   140007a7d:	(bad)  
   140007a7e:	(bad)  
   140007a7f:	inc    DWORD PTR [rbx+rdx*2+0x0]
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	nop
   140007a89:	push   rbx
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	add    DWORD PTR [rax],eax
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	movabs al,ds:0xb0ffffffff000053
   140007a99:	push   rbx
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	add    BYTE PTR [rax],al
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	push   rax
   140007aa1:	(bad)  
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	(bad)  
   140007aa5:	(bad)  
   140007aa6:	(bad)  
   140007aa7:	(bad)  
   140007aa8:	jg     0x140007ac1
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    al,BYTE PTR [rax]
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	xchg   edi,eax
   140007ab1:	(bad)  
   140007ab2:	add    BYTE PTR [rax],al
   140007ab4:	add    DWORD PTR [rax],eax
   140007ab6:	add    BYTE PTR [rax],al
   140007ab8:	mov    ebx,0x17
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    bh,bl
   140007ac1:	(bad)  
   140007ac2:	add    BYTE PTR [rax],al
   140007ac4:	(bad)  
   140007ac5:	(bad)  
   140007ac6:	(bad)  
   140007ac7:	inc    DWORD PTR [rcx]
   140007ac9:	sbb    DWORD PTR [rdx],ecx
   140007acb:	add    BYTE PTR [rcx],bl
   140007acd:	je     0x140007ada
   140007acf:	add    BYTE PTR [rcx],bl
   140007ad1:	or     al,BYTE PTR fs:[rax]
   140007ad4:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140007ad8:	sbb    DWORD PTR [rax+rcx*1],esi
   140007adb:	add    BYTE PTR [rcx],bl
   140007add:	push   rdx
   140007ade:	adc    eax,0xd3919e0
   140007ae3:	add    BYTE PTR [rbx],ch
   140007ae5:	je     0x140007b08
   140007ae7:	add    BYTE PTR [rdi],ah
   140007ae9:	and    BYTE PTR fs:[rax],al
   140007aec:	and    esi,DWORD PTR [rdi+rbx*1]
   140007aef:	add    BYTE PTR [rdi],dl
   140007af1:	add    DWORD PTR [rax],ebx
   140007af3:	add    BYTE PTR [rax+rsi*8],cl
   140007af6:	or     ah,al
   140007af8:	or     al,dl
   140007afa:	(bad)  
   140007afb:	rol    BYTE PTR [rax+rdx*2],0x0
   140007aff:	add    al,ch
   140007b01:	push   rcx
   140007b02:	add    BYTE PTR [rax],al
   140007b04:	or     BYTE PTR [rbx+0x0],dh
   140007b07:	add    BYTE PTR [rdx-0x1000000],bh
   140007b0d:	(bad)  
   140007b0e:	(bad)  
   140007b0f:	inc    edx
   140007b11:	push   rbx
	...
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	(bad)  
   140007b21:	push   rbx
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    al,BYTE PTR [rax]
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	ficom  DWORD PTR [rbx+0x0]
   140007b2b:	add    BYTE PTR [rbx],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    dh,ah
   140007b31:	push   rbx
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	add    al,0x0
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	repnz push rbx
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	add    al,BYTE PTR [rax]
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	(bad)  
   140007b41:	push   rbx
	...
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	add    BYTE PTR [rcx],bl
   140007b52:	add    BYTE PTR [rax],al
   140007b54:	(bad)  
   140007b55:	(bad)  
   140007b56:	(bad)  
   140007b57:	call   QWORD PTR [rcx+rbx*1+0x0]
   140007b5b:	add    BYTE PTR [rax],al
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    BYTE PTR [rcx+0x19],ah
   140007b62:	add    BYTE PTR [rax],al
   140007b64:	add    al,BYTE PTR [rax]
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	sbb    DWORD PTR gs:[rax],eax
   140007b6b:	add    BYTE PTR [rbx],al
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    BYTE PTR [rdi+0x19],ch
   140007b72:	add    BYTE PTR [rax],al
   140007b74:	add    al,0x0
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	mov    DWORD PTR [rcx],ebx
   140007b7a:	add    BYTE PTR [rax],al
   140007b7c:	add    eax,0x94000000
   140007b81:	sbb    DWORD PTR [rax],eax
   140007b83:	add    BYTE PTR [rbx],al
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    al,bl
   140007b89:	sbb    DWORD PTR [rax],eax
   140007b8b:	add    BYTE PTR [rdx],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rip+0x1a],ch        # 0x140007baf
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    BYTE PTR [rdi+0x1a],dl
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	add    al,BYTE PTR [rax]
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	jbe    0x140007bbc
   140007ba2:	add    BYTE PTR [rax],al
   140007ba4:	(bad)  
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rcx+0x1a],al
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    BYTE PTR [rsi],dl
   140007bb1:	sbb    eax,0xffff0000
   140007bb6:	(bad)  
   140007bb7:	call   QWORD PTR [rcx]
   140007bb9:	sub    eax,0x342d000a
   140007bbe:	adc    eax,0x1a922100
   140007bc3:	lock sbb al,ah
   140007bc6:	(bad)  
   140007bc7:	rcl    BYTE PTR [rax+rax*8],1
   140007bca:	adc    dh,BYTE PTR [rax+0x11]
   140007bcd:	(bad)  
   140007bce:	adc    BYTE PTR [rax+0x18],dl
   140007bd1:	push   rcx
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	loopne 0x140007c48
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	(bad)  
   140007bd9:	(bad)  
   140007bda:	(bad)  
   140007bdb:	call   QWORD PTR [rax]
   140007bdd:	push   rsp
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	add    BYTE PTR [rax],al
   140007be2:	add    BYTE PTR [rax],al
   140007be4:	sbb    al,0x54
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	add    DWORD PTR [rax],eax
   140007bea:	add    BYTE PTR [rax],al
   140007bec:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140007bf0:	add    al,BYTE PTR [rax]
   140007bf2:	add    BYTE PTR [rax],al
   140007bf4:	xor    al,0x54
	...
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	push   0xffffffffff00001d
   140007c05:	(bad)  
   140007c06:	(bad)  
   140007c07:	call   FWORD PTR [rsi+0x1d]
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rdx+0x100001d],ah
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    BYTE PTR [rdx+0x200001d],dh
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    ah,cl
   140007c21:	sbb    eax,0x30000
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	fcomp  DWORD PTR [rip+0x10000]        # 0x140017c2e
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	adc    DWORD PTR [rsi],ebx
   140007c32:	add    BYTE PTR [rax],al
   140007c34:	add    BYTE PTR [rax],al
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	ins    BYTE PTR es:[rdi],dx
   140007c39:	(bad)  
   140007c3a:	add    BYTE PTR [rax],al
   140007c3c:	(bad)  
   140007c3d:	(bad)  
   140007c3e:	(bad)  
   140007c3f:	call   QWORD PTR [rcx]
   140007c41:	and    BYTE PTR [rax],cl
   140007c43:	add    BYTE PTR [rax],ah
   140007c45:	fs or  eax,0xc341c00
   140007c4b:	add    BYTE PTR [rax],dl
   140007c4d:	jb     0x140007c5b
   140007c4f:	lock or ah,al
   140007c52:	or     BYTE PTR [rax+0x18],dh
   140007c55:	push   rcx
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	mov    eax,0xff000072
   140007c5d:	(bad)  
   140007c5e:	(bad)  
   140007c5f:	inc    DWORD PTR [rsi+0x54]
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	(bad)  
   140007c65:	(bad)  
   140007c66:	(bad)  
   140007c67:	call   QWORD PTR [rdx+0x54]
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	lods   al,BYTE PTR ds:[rsi]
   140007c71:	(bad)  
   140007c72:	add    BYTE PTR [rax],al
   140007c74:	(bad)  
   140007c75:	(bad)  
   140007c76:	(bad)  
   140007c77:	(bad)  
   140007c78:	cli    
   140007c79:	(bad)  
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	(bad)  
   140007c81:	(bad)  
   140007c82:	add    BYTE PTR [rax],al
   140007c84:	(bad)  
   140007c85:	(bad)  
   140007c86:	(bad)  
   140007c87:	dec    DWORD PTR [rbp+0x1f]
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	add    DWORD PTR [rax],eax
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	pop    rdx
   140007c91:	(bad)  
   140007c92:	add    BYTE PTR [rax],al
   140007c94:	(bad)  
   140007c95:	(bad)  
   140007c96:	(bad)  
   140007c97:	call   QWORD PTR [rcx]
   140007c99:	sbb    eax,DWORD PTR [rsi]
   140007c9b:	add    BYTE PTR [rbx],bl
   140007c9d:	xor    al,0xd
   140007c9f:	add    BYTE PTR [rdi],cl
   140007ca1:	push   rdx
   140007ca2:	or     esp,eax
   140007ca4:	or     DWORD PTR [rax+0x8],esi
   140007ca7:	(bad)  
   140007ca8:	sbb    BYTE PTR [rcx+0x0],dl
   140007cab:	add    BYTE PTR [rax-0xffff8e],dl
   140007cb1:	(bad)  
   140007cb2:	(bad)  
   140007cb3:	jmp    QWORD PTR [rsp+rdx*2+0x0]
   140007cb7:	add    BYTE PTR [rax],al
   140007cb9:	add    BYTE PTR [rax],al
   140007cbb:	add    BYTE PTR [rdx+0x1000054],cl
   140007cc1:	add    BYTE PTR [rax],al
   140007cc3:	add    BYTE PTR [rsi+0x1000054],dl
   140007cc9:	add    BYTE PTR [rax],al
   140007ccb:	add    BYTE PTR [rdx+0x38000054],ah
   140007cd1:	and    al,BYTE PTR [rax]
   140007cd3:	add    bh,bh
   140007cd5:	(bad)  
   140007cd6:	(bad)  
   140007cd7:	call   QWORD PTR [rsi+0x22]
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	imul   esp,DWORD PTR [rdx],0x0
   140007ce3:	add    BYTE PTR [rcx],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rcx+0x2000022],bl
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    ch,al
   140007cf1:	and    al,BYTE PTR [rax]
   140007cf3:	add    BYTE PTR [rbx],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    bh,cl
   140007cf9:	and    al,BYTE PTR [rax]
   140007cfb:	add    BYTE PTR [rcx],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    dh,dh
   140007d01:	and    al,BYTE PTR [rax]
   140007d03:	add    BYTE PTR [rax],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rcx],dl
   140007d09:	sbb    BYTE PTR [rip+0xc621000],al        # 0x14c628d0f
   140007d0f:	loopne 0x140007d1b
   140007d11:	jo     0x140007d1c
   140007d13:	(bad)  
   140007d14:	or     BYTE PTR [rax],dh
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	sbb    BYTE PTR [rcx+0x0],dl
   140007d1b:	add    BYTE PTR [rax+0x72],ch
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	(bad)  
   140007d21:	(bad)  
   140007d22:	(bad)  
   140007d23:	push   QWORD PTR [rsp+rdx*2+0x0]
   140007d2a:	add    BYTE PTR [rax],al
   140007d2c:	ficom  DWORD PTR [rax+rax*1+0x0]
   140007d30:	add    DWORD PTR [rax],eax
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	out    0x54,al
   140007d36:	add    BYTE PTR [rax],al
   140007d38:	add    al,BYTE PTR [rax]
   140007d3a:	add    BYTE PTR [rax],al
   140007d3c:	add    dl,BYTE PTR [rbp+0x0]
   140007d3f:	add    BYTE PTR [rdx],al
   140007d41:	add    BYTE PTR [rax],al
   140007d43:	add    BYTE PTR [rsi],cl
   140007d45:	push   rbp
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	add    al,0x0
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	sbb    dl,BYTE PTR [rbp+0x0]
   140007d4f:	add    BYTE PTR [rip+0x2a000000],al        # 0x16a007d55
   140007d55:	push   rbp
	...
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	sbb    al,0x23
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	(bad)  
   140007d65:	(bad)  
   140007d66:	(bad)  
   140007d67:	push   QWORD PTR [rdi]
   140007d69:	and    eax,DWORD PTR [rax]
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rbx+riz*1+0x0],cl
   140007d73:	add    BYTE PTR [rcx],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    BYTE PTR [rdx+0x23],dh
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	add    al,BYTE PTR [rax]
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	jg     0x140007da5
   140007d82:	add    BYTE PTR [rax],al
   140007d84:	add    eax,DWORD PTR [rax]
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	stos   DWORD PTR es:[rdi],eax
   140007d89:	and    eax,DWORD PTR [rax]
   140007d8b:	add    BYTE PTR [rax+rax*1],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	mov    edx,0x5000023
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rdi+0x6000023],bh
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    ah,al
   140007da1:	and    eax,DWORD PTR [rax]
   140007da3:	add    BYTE PTR [rcx],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    bl,ch
   140007da9:	and    eax,DWORD PTR [rax]
   140007dab:	add    BYTE PTR [rax],al
   140007dad:	add    BYTE PTR [rax],al
   140007daf:	add    BYTE PTR [rcx],dl
   140007db1:	adc    eax,DWORD PTR [rdx]
   140007db3:	add    BYTE PTR [rdx],cl
   140007db5:	push   rdx
   140007db6:	(bad)  
   140007db7:	xor    BYTE PTR [rax],bl
   140007db9:	push   rcx
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	rex jb 0x140007dbf
   140007dbf:	add    bh,bh
   140007dc1:	(bad)  
   140007dc2:	(bad)  
   140007dc3:	inc    DWORD PTR [rax+0x55]
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	(bad)  
   140007dc9:	(bad)  
   140007dca:	(bad)  
   140007dcb:	dec    DWORD PTR [rbp+rdx*2+0x0]
   140007dcf:	add    BYTE PTR [rax],dl
   140007dd1:	and    al,0x0
   140007dd3:	add    bh,bh
   140007dd5:	(bad)  
   140007dd6:	(bad)  
   140007dd7:	inc    DWORD PTR [rcx]
   140007dd9:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e428fdf
   140007ddf:	jo     0x140007dee
   140007de1:	(bad)  
   140007de2:	or     al,0x50
   140007de4:	or     esi,DWORD PTR [rax]
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	adc    DWORD PTR [rcx],ebp
   140007dea:	or     al,BYTE PTR [rax]
   140007dec:	sub    DWORD PTR [rsp+rdx*1],esi
   140007def:	add    BYTE PTR [rip+0x14f01692],bl        # 0x154f09487
   140007df5:	loopne 0x140007e09
   140007df7:	rcl    BYTE PTR [rax],1
   140007df9:	ror    BYTE PTR [rsi],0x70
   140007dfc:	or     eax,0x18500c60
   140007e01:	push   rcx
   140007e02:	add    BYTE PTR [rax],al
   140007e04:	pop    rax
   140007e05:	jae    0x140007e07
   140007e07:	add    bh,bh
   140007e09:	(bad)  
   140007e0a:	(bad)  
   140007e0b:	call   FWORD PTR [rsi+0x55]
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	add    BYTE PTR [rax],al
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	push   0x55
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	add    DWORD PTR [rax],eax
   140007e1a:	add    BYTE PTR [rax],al
   140007e1c:	jbe    0x140007e73
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	add    al,BYTE PTR [rax]
   140007e22:	add    BYTE PTR [rax],al
   140007e24:	(bad)  
   140007e25:	push   rbp
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	add    eax,DWORD PTR [rax]
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	mov    ss,WORD PTR [rbp+0x0]
   140007e2f:	add    al,cl
   140007e31:	and    al,0x0
   140007e33:	add    bh,bh
   140007e35:	(bad)  
   140007e36:	(bad)  
   140007e37:	(bad)  
   140007e38:	stc    
   140007e39:	and    al,0x0
   140007e3b:	add    BYTE PTR [rax],al
   140007e3d:	add    BYTE PTR [rax],al
   140007e3f:	add    bh,bh
   140007e41:	and    al,0x0
   140007e43:	add    BYTE PTR [rcx],al
   140007e45:	add    BYTE PTR [rax],al
   140007e47:	add    BYTE PTR [rbx],al
   140007e49:	and    eax,0x20000
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	adc    ah,BYTE PTR [rip+0x30000]        # 0x140037e56
   140007e56:	add    BYTE PTR [rax],al
   140007e58:	sbb    al,0x25
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	add    al,0x0
   140007e5e:	add    BYTE PTR [rax],al
   140007e60:	(bad)  
   140007e61:	and    eax,0x20000
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	pop    rdi
   140007e69:	and    eax,0x10000
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	jge    0x140007e98
   140007e72:	add    BYTE PTR [rax],al
   140007e74:	add    BYTE PTR [rax],al
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	popf   
   140007e79:	add    BYTE PTR es:[rax],al
   140007e7c:	(bad)  
   140007e7d:	(bad)  
   140007e7e:	(bad)  
   140007e7f:	call   QWORD PTR [rcx]
   140007e81:	sbb    cl,BYTE PTR [rax]
   140007e83:	add    BYTE PTR [rdx],bl
   140007e85:	xor    al,0xf
   140007e87:	add    BYTE PTR [rsi],cl
   140007e89:	push   rdx
   140007e8a:	or     dh,al
   140007e8c:	or     al,ah
   140007e8e:	(bad)  
   140007e8f:	jo     0x140007e96
   140007e91:	(bad)  
   140007e92:	add    al,0x50
   140007e94:	sbb    BYTE PTR [rcx+0x0],dl
   140007e97:	add    BYTE PTR [rax-0xffff8d],ch
   140007e9d:	(bad)  
   140007e9e:	(bad)  
   140007e9f:	jmp    QWORD PTR [rax+0x55]
   140007ea5:	add    BYTE PTR [rax],al
   140007ea7:	add    BYTE PTR [rbp+rdx*2+0x10000],ch
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	mov    eax,0x55
   140007eb5:	add    BYTE PTR [rax],al
   140007eb7:	add    BYTE PTR [rax+0x29],al
   140007eba:	add    BYTE PTR [rax],al
   140007ebc:	(bad)  
   140007ebd:	(bad)  
   140007ebe:	(bad)  
   140007ebf:	jmp    QWORD PTR [rbx+0x29]
   140007ec2:	add    BYTE PTR [rax],al
   140007ec4:	add    BYTE PTR [rax],al
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	jl     0x140007ef3
   140007eca:	add    BYTE PTR [rax],al
   140007ecc:	add    DWORD PTR [rax],eax
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	cwde   
   140007ed1:	sub    DWORD PTR [rax],eax
   140007ed3:	add    BYTE PTR [rdx],al
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rsi+0x29],ah
   140007edd:	add    BYTE PTR [rax],al
   140007edf:	add    ah,bl
   140007ee1:	sub    DWORD PTR [rax],eax
   140007ee3:	add    bh,bh
   140007ee5:	(bad)  
   140007ee6:	(bad)  
   140007ee7:	call   QWORD PTR [rcx]
   140007ee9:	sbb    eax,DWORD PTR [rsi]
   140007eeb:	add    BYTE PTR [rbx],bl
   140007eed:	xor    al,0xd
   140007eef:	add    BYTE PTR [rdi],cl
   140007ef1:	push   rdx
   140007ef2:	or     esp,eax
   140007ef4:	or     DWORD PTR [rax+0x8],esi
   140007ef7:	(bad)  
   140007ef8:	sbb    BYTE PTR [rcx+0x0],dl
   140007efb:	add    BYTE PTR [rax+0x38000073],al
   140007f01:	sub    eax,0xffff0000
   140007f06:	(bad)  
   140007f07:	call   QWORD PTR [rsi+0x2d]
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    BYTE PTR [rax],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	imul   ebp,DWORD PTR [rip+0x10000],0x0        # 0x140017f17
   140007f17:	add    BYTE PTR [rcx+0x200002d],bl
   140007f1d:	add    BYTE PTR [rax],al
   140007f1f:	add    ch,al
   140007f21:	sub    eax,0x30000
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	iret   
   140007f29:	sub    eax,0x10000
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	imul   BYTE PTR [rip+0x0]        # 0x140007f36
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	sbb    DWORD PTR [rsi],esp
   140007f3a:	add    eax,0x62341500
   140007f3f:	add    BYTE PTR [rip+0x6006001],dl        # 0x14600df46
   140007f45:	push   rax
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	pop    rax
   140007f49:	push   rcx
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	lock add al,BYTE PTR [rax]
   140007f4f:	add    BYTE PTR [rcx],al
   140007f51:	adc    al,0x8
   140007f53:	add    BYTE PTR [rsp+riz*2],dl
   140007f56:	or     BYTE PTR [rax],al
   140007f58:	adc    al,0x54
   140007f5a:	(bad)  
   140007f5b:	add    BYTE PTR [rsp+rsi*1],dl
   140007f5e:	(bad)  
   140007f5f:	add    BYTE PTR [rdx+rsi*1],dl
   140007f62:	adc    BYTE PTR [rax+0x1],dh
   140007f65:	adc    eax,DWORD PTR [rdi]
   140007f67:	add    BYTE PTR [rbx],dl
   140007f69:	push   rsp
   140007f6a:	(bad)  
   140007f6b:	add    BYTE PTR [rbx],dl
   140007f6d:	xor    al,0x1e
   140007f6f:	add    BYTE PTR [rbx],dl
   140007f71:	add    DWORD PTR [rax+rax*1],ebx
   140007f74:	or     al,0x70
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	adc    DWORD PTR [rdi+rax*1],ebx
   140007f7b:	add    BYTE PTR [rdx+rax*4],dl
   140007f7e:	or     eax,0x9c00be0
   140007f83:	jo     0x140007f8d
   140007f85:	(bad)  
   140007f86:	(bad)  
   140007f87:	xor    BYTE PTR [rsi],al
   140007f89:	push   rax
   140007f8a:	add    BYTE PTR [rax],al
   140007f8c:	sbb    BYTE PTR [rcx+0x0],dl
   140007f8f:	add    BYTE PTR [rax],dl
   140007f91:	jne    0x140007f93
   140007f93:	add    bh,bh
   140007f95:	(bad)  
   140007f96:	(bad)  
   140007f97:	dec    edx
   140007f99:	push   rbp
   140007f9a:	add    BYTE PTR [rax],al
   140007f9c:	add    BYTE PTR [rax],al
   140007f9e:	add    BYTE PTR [rax],al
   140007fa0:	(bad)  
   140007fa1:	push   rbp
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	add    DWORD PTR [rax],eax
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	loop   0x140007fff
   140007faa:	add    BYTE PTR [rax],al
   140007fac:	add    BYTE PTR [rax],al
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	sbb    BYTE PTR [rcx],dh
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	(bad)  
   140007fb5:	(bad)  
   140007fb6:	(bad)  
   140007fb7:	(bad)  
   140007fb8:	jg     0x140007feb
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	mov    DWORD PTR [rcx],esi
   140007fc2:	add    BYTE PTR [rax],al
   140007fc4:	add    DWORD PTR [rax],eax
   140007fc6:	add    BYTE PTR [rax],al
   140007fc8:	movabs ds:0xac00000002000031,eax
   140007fd1:	xor    DWORD PTR [rax],eax
   140007fd3:	add    BYTE PTR [rax],al
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    dl,bl
   140007fd9:	xor    DWORD PTR [rax],eax
   140007fdb:	add    bh,bh
   140007fdd:	(bad)  
   140007fde:	(bad)  
   140007fdf:	call   QWORD PTR [rcx]
   140007fe1:	sbb    BYTE PTR [rax+rax*1],al
   140007fe4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140007fe7:	add    BYTE PTR [rdx],cl
   140007fe9:	push   rdx
   140007fea:	(bad)  
   140007feb:	jo     0x140008005
   140007fed:	push   rcx
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	call   0x13f008069
   140007ff5:	(bad)  
   140007ff6:	(bad)  
   140007ff7:	push   rsp
   140007ff9:	push   rbp
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	(bad)  
   140007ffd:	(bad)  
   140007ffe:	(bad)  
   140007fff:	inc    DWORD PTR [rax]
   140008001:	push   rsi
   140008002:	add    BYTE PTR [rax],al
   140008004:	(bad)  
   140008005:	(bad)  
   140008006:	(bad)  
   140008007:	dec    DWORD PTR [rsi+rdx*2]
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	clc    
   140008011:	xor    eax,DWORD PTR [rax]
   140008013:	add    bh,bh
   140008015:	(bad)  
   140008016:	(bad)  
   140008017:	call   QWORD PTR [rax]
   140008019:	xor    al,0x0
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rdi],dl
   140008021:	xor    al,0x0
   140008023:	add    bh,bh
   140008025:	(bad)  
   140008026:	(bad)  
   140008027:	call   QWORD PTR [rcx]
   140008029:	sbb    BYTE PTR [rax+rax*1],al
   14000802c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000802f:	add    BYTE PTR [rdx],cl
   140008031:	push   rdx
   140008032:	(bad)  
   140008033:	jo     0x14000804d
   140008035:	push   rcx
   140008036:	add    BYTE PTR [rax],al
   140008038:	shl    BYTE PTR [rax+rax*1+0x0],0xff
   14000803d:	(bad)  
   14000803e:	(bad)  
   14000803f:	jmp    QWORD PTR [rdx]
   140008041:	push   rsi
   140008042:	add    BYTE PTR [rax],al
   140008044:	(bad)  
   140008045:	(bad)  
   140008046:	(bad)  
   140008047:	jmp    FWORD PTR [rsi]
   140008049:	push   rsi
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax],al
   140008050:	rex.WR xor al,0x0
   140008053:	add    bh,bh
   140008055:	(bad)  
   140008056:	(bad)  
   140008057:	call   QWORD PTR [rcx]
   140008059:	sbb    BYTE PTR [rax+rax*1],al
   14000805c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000805f:	add    BYTE PTR [rdx],cl
   140008061:	push   rdx
   140008062:	(bad)  
   140008063:	jo     0x14000807d
   140008065:	push   rcx
   140008066:	add    BYTE PTR [rax],al
   140008068:	cwde   
   140008069:	je     0x14000806b
   14000806b:	add    bh,bh
   14000806d:	(bad)  
   14000806e:	(bad)  
   14000806f:	inc    DWORD PTR [rsi+rdx*2+0x0]
   140008073:	add    BYTE PTR [rax],al
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    BYTE PTR [rax-0xffffcc],bl
   14000807d:	(bad)  
   14000807e:	(bad)  
   14000807f:	call   QWORD PTR [rcx]
   140008081:	sbb    al,BYTE PTR [rsi]
   140008083:	add    BYTE PTR [rdx],bl
   140008085:	xor    al,0xc
   140008087:	add    BYTE PTR [rsi],cl
   140008089:	push   rdx
   14000808a:	or     dh,BYTE PTR [rax+0x9]
   14000808d:	(bad)  
   14000808e:	or     BYTE PTR [rax+0x18],dl
   140008091:	push   rcx
   140008092:	add    BYTE PTR [rax],al
   140008094:	jo     0x14000810a
   140008096:	add    BYTE PTR [rax],al
   140008098:	(bad)  
   140008099:	(bad)  
   14000809a:	(bad)  
   14000809b:	call   FWORD PTR [rdx+0x56]
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	add    BYTE PTR [rax],al
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	adc    BYTE PTR [rsi+0x0],0x0
   1400080a8:	in     al,0x34
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	(bad)  
   1400080ad:	(bad)  
   1400080ae:	(bad)  
   1400080af:	inc    DWORD PTR [rcx]
   1400080b1:	xor    eax,0x0
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	adc    eax,0x1000035
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rdx+0x35],ah
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	adc    DWORD PTR [rbx],ebx
   1400080ca:	(bad)  
   1400080cb:	add    BYTE PTR [rbx],bl
   1400080cd:	xor    al,0xc
   1400080cf:	add    BYTE PTR [rdi],cl
   1400080d1:	push   rdx
   1400080d2:	or     esp,eax
   1400080d4:	or     DWORD PTR [rax+0x8],esi
   1400080d7:	(bad)  
   1400080d8:	sbb    BYTE PTR [rcx+0x0],dl
   1400080db:	add    BYTE PTR [rax+0x74],cl
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	(bad)  
   1400080e1:	(bad)  
   1400080e2:	(bad)  
   1400080e3:	call   QWORD PTR [rdx+0x56]
   1400080e9:	add    BYTE PTR [rax],al
   1400080eb:	add    BYTE PTR [rdx-0xffffaa],ah
   1400080f1:	(bad)  
   1400080f2:	(bad)  
   1400080f3:	jmp    FWORD PTR [rsi-0xffffaa]
   1400080f9:	(bad)  
   1400080fa:	(bad)  
   1400080fb:	(bad)  
   1400080fc:	mov    edx,0xff000056
   140008101:	(bad)  
   140008102:	(bad)  
   140008103:	inc    esi
   140008105:	push   rsi
   140008106:	add    BYTE PTR [rax],al
   140008108:	(bad)  
   140008109:	(bad)  
   14000810a:	(bad)  
   14000810b:	call   rdx
   14000810d:	push   rsi
   14000810e:	add    BYTE PTR [rax],al
   140008110:	mov    BYTE PTR [rip+0xffffffffffff0000],dh        # 0x13fff8116
   140008116:	(bad)  
   140008117:	(bad)  
   140008118:	mov    eax,0x35
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rbp+0x1000035],bh
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rdi],dh
   140008129:	add    BYTE PTR ss:[rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	pop    rbp
   140008131:	add    BYTE PTR ss:[rax],al
   140008134:	add    eax,DWORD PTR [rax]
   140008136:	add    BYTE PTR [rax],al
   140008138:	fs add BYTE PTR ss:[rax],al
   14000813c:	add    al,0x0
   14000813e:	add    BYTE PTR [rax],al
   140008140:	nop
   140008141:	add    BYTE PTR ss:[rax],al
   140008144:	add    eax,0x9a000000
   140008149:	add    BYTE PTR ss:[rax],al
   14000814c:	(bad)  
   14000814d:	(bad)  
   14000814e:	(bad)  
   14000814f:	call   QWORD PTR [rcx]
   140008151:	and    BYTE PTR [rax],cl
   140008153:	add    BYTE PTR [rax],ah
   140008155:	or     eax,DWORD PTR fs:[rax]
   140008158:	sbb    al,0x54
   14000815a:	or     al,BYTE PTR [rax]
   14000815c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000815f:	add    BYTE PTR [rdx+rdx*2],cl
   140008162:	or     BYTE PTR [rax+0x18],dh
   140008165:	push   rcx
   140008166:	add    BYTE PTR [rax],al
   140008168:	and    BYTE PTR [rax+rax*1+0x0],dh
   14000816c:	(bad)  
   14000816d:	(bad)  
   14000816e:	(bad)  
   14000816f:	jmp    rsp
   140008171:	push   rsi
   140008172:	add    BYTE PTR [rax],al
   140008174:	(bad)  
   140008175:	(bad)  
   140008176:	(bad)  
   140008177:	push   rax
   140008179:	push   rsi
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	(bad)  
   14000817d:	(bad)  
   14000817e:	(bad)  
   14000817f:	(bad)  
   140008180:	cld    
   140008181:	push   rsi
   140008182:	add    BYTE PTR [rax],al
   140008184:	(bad)  
   140008185:	(bad)  
   140008186:	(bad)  
   140008187:	dec    DWORD PTR [rax]
   140008189:	push   rdi
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	(bad)  
   14000818d:	(bad)  
   14000818e:	(bad)  
   14000818f:	call   QWORD PTR [rdi+rdx*2]
   140008192:	add    BYTE PTR [rax],al
   140008194:	add    BYTE PTR [rax],al
   140008196:	add    BYTE PTR [rax],al
   140008198:	shl    BYTE PTR [rsi],0x0
   14000819b:	add    bh,bh
   14000819d:	(bad)  
   14000819e:	(bad)  
   14000819f:	jmp    rbp
   1400081a1:	add    BYTE PTR ss:[rax],al
   1400081a4:	add    al,BYTE PTR [rax]
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	in     al,dx
   1400081a9:	add    BYTE PTR ss:[rax],al
   1400081ac:	(bad)  
   1400081ad:	(bad)  
   1400081ae:	(bad)  
   1400081af:	call   QWORD PTR [rcx]
   1400081b1:	sbb    BYTE PTR [rax+rax*1],al
   1400081b4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400081b7:	add    BYTE PTR [rdx],cl
   1400081b9:	push   rdx
   1400081ba:	(bad)  
   1400081bb:	jo     0x1400081d5
   1400081bd:	push   rcx
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	clc    
   1400081c1:	jae    0x1400081c3
   1400081c3:	add    bh,bh
   1400081c5:	(bad)  
   1400081c6:	(bad)  
   1400081c7:	jmp    FWORD PTR [rdx]
   1400081c9:	push   rdi
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	(bad)  
   1400081cd:	(bad)  
   1400081ce:	(bad)  
   1400081cf:	push   QWORD PTR [rsi]
   1400081d1:	push   rdi
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	(bad)  
   1400081d5:	(bad)  
   1400081d6:	(bad)  
   1400081d7:	inc    DWORD PTR [rdx+0x57]
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	(bad)  
   1400081dd:	(bad)  
   1400081de:	(bad)  
   1400081df:	dec    DWORD PTR [rsi+0x57]
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	cmp    al,0x37
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	(bad)  
   1400081ed:	(bad)  
   1400081ee:	(bad)  
   1400081ef:	call   QWORD PTR [rdi+rsi*1+0x0]
   1400081f3:	add    BYTE PTR [rcx],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rbx+0x37],bl
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	(bad)  
   1400081fd:	(bad)  
   1400081fe:	(bad)  
   1400081ff:	call   QWORD PTR [rcx]
   140008201:	and    BYTE PTR [rax],cl
   140008203:	add    BYTE PTR [rax],ah
   140008205:	or     eax,DWORD PTR fs:[rax]
   140008208:	sbb    al,0x54
   14000820a:	or     al,BYTE PTR [rax]
   14000820c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000820f:	add    BYTE PTR [rdx+rdx*2],cl
   140008212:	or     BYTE PTR [rax+0x18],dh
   140008215:	push   rcx
   140008216:	add    BYTE PTR [rax],al
   140008218:	shl    BYTE PTR [rbx+0x0],1
   14000821b:	add    BYTE PTR [rax],al
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rax-0xffffc9],dl
   140008225:	(bad)  
   140008226:	(bad)  
   140008227:	push   QWORD PTR [rbp+0x1000037]
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdi+rsi*1-0x10000],bh
   140008236:	(bad)  
   140008237:	inc    DWORD PTR [rcx]
   140008239:	sbb    DWORD PTR [rdx],ecx
   14000823b:	add    BYTE PTR [rcx],bl
   14000823d:	je     0x14000824c
   14000823f:	add    BYTE PTR [rcx],bl
   140008241:	fs or  al,0x0
   140008244:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140008248:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000824b:	add    BYTE PTR [rcx],bl
   14000824d:	jb     0x140008264
   14000824f:	loopne 0x140008252
   140008251:	sbb    DWORD PTR [rdx],ecx
   140008253:	add    BYTE PTR [rcx],bl
   140008255:	je     0x140008260
   140008257:	add    BYTE PTR [rcx],bl
   140008259:	or     BYTE PTR fs:[rax],al
   14000825c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008260:	sbb    DWORD PTR [rsi+rax*1],esi
   140008263:	add    BYTE PTR [rcx],bl
   140008265:	xor    dl,BYTE PTR [rip+0x21c19e0]        # 0x1421c9c4b
   14000826b:	add    BYTE PTR [rdx],cl
   14000826d:	add    DWORD PTR [rip+0x515800],esi        # 0x14051da73
   140008273:	add    BYTE PTR [rax+0x11000001],dl
   140008279:	and    BYTE PTR [rdx],cl
   14000827b:	add    BYTE PTR [rax],ah
   14000827d:	fs (bad) 
   14000827f:	add    BYTE PTR [rsp+rdx*2],bl
   140008282:	or     eax,0xc341800
   140008287:	add    BYTE PTR [rdx+rsi*2],cl
   14000828a:	or     al,dh
   14000828c:	(bad)  
   14000828d:	loopne 0x140008293
   14000828f:	jo     0x1400082a9
   140008291:	push   rcx
   140008292:	add    BYTE PTR [rax],al
   140008294:	cmp    BYTE PTR [rbp+0x0],dh
   140008297:	add    bh,bh
   140008299:	(bad)  
   14000829a:	(bad)  
   14000829b:	jmp    QWORD PTR [rdi+rdx*2+0x0]
   14000829f:	add    BYTE PTR [rax],al
   1400082a1:	add    BYTE PTR [rax],al
   1400082a3:	add    BYTE PTR [rax+0x57],dh
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	pop    rsp
   1400082a9:	cmp    eax,DWORD PTR [rax]
   1400082ab:	add    bh,bh
   1400082ad:	(bad)  
   1400082ae:	(bad)  
   1400082af:	inc    DWORD PTR [rbp+0x3b]
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rbx+rdi*1+0x10000],cl
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	mov    edx,0x3d
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    bl,bl
   1400082c9:	cmp    eax,0xffff0000
   1400082ce:	(bad)  
   1400082cf:	inc    DWORD PTR [rcx]
   1400082d1:	adc    al,0x6
   1400082d3:	add    BYTE PTR [rsp+riz*2],dl
   1400082d6:	or     eax,DWORD PTR [rax]
   1400082d8:	adc    al,0x34
   1400082da:	or     al,BYTE PTR [rax]
   1400082dc:	adc    al,0x52
   1400082de:	adc    BYTE PTR [rax+0x1],dh
   1400082e1:	or     al,0x6
   1400082e3:	add    BYTE PTR [rsp+rsi*1],cl
   1400082e6:	or     al,BYTE PTR [rax]
   1400082e8:	or     al,0x52
   1400082ea:	or     BYTE PTR [rax+0x7],dh
   1400082ed:	(bad)  
   1400082ee:	(bad)  
   1400082ef:	push   rax
   1400082f0:	sbb    DWORD PTR [rbx],esi
   1400082f2:	or     eax,DWORD PTR [rax]
   1400082f4:	and    dh,BYTE PTR [rdi+rdx*2+0x0]
   1400082f8:	and    ah,BYTE PTR [rsi+rdx*2+0x0]
   1400082fc:	and    dh,BYTE PTR [rdx*2+0x50012200]
   140008303:	add    BYTE PTR [rax+rsi*8],dl
   140008306:	adc    ah,al
   140008308:	adc    BYTE PTR [rax+0x0],dl
   14000830b:	add    BYTE PTR [rax+0x51],bl
   14000830e:	add    BYTE PTR [rax],al
   140008310:	jo     0x140008314
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    DWORD PTR [rsp+rax*1],ecx
   140008317:	add    BYTE PTR [rsp+rsi*1],cl
   14000831a:	or     BYTE PTR [rax],al
   14000831c:	or     al,0x52
   14000831e:	or     BYTE PTR [rax+0x19],dh
   140008321:	xor    ecx,DWORD PTR [rbx]
   140008323:	add    BYTE PTR [rdx],ah
   140008325:	in     al,0x57
   140008327:	add    BYTE PTR [rdx],ah
   140008329:	je     0x140008381
   14000832b:	add    BYTE PTR [rdx],ah
   14000832d:	fs push rbp
   14000832f:	add    BYTE PTR [rdx],ah
   140008331:	xor    al,0x54
   140008333:	add    BYTE PTR [rdx],ah
   140008335:	add    DWORD PTR [rdx+0x0],edx
   140008338:	adc    al,0x50
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	pop    rax
   14000833d:	push   rcx
   14000833e:	add    BYTE PTR [rax],al
   140008340:	add    BYTE PTR [rdx],0x0
   140008343:	add    BYTE PTR [rcx],al
   140008345:	adc    al,0x3
   140008347:	add    BYTE PTR [rdx+rax*4],dl
   14000834a:	or     eax,0x500c30
   14000834f:	add    BYTE PTR [rcx],al
   140008351:	(bad)  
   140008352:	add    al,BYTE PTR [rax]
   140008354:	(bad)  
   140008355:	xor    al,BYTE PTR [rdx]
   140008357:	xor    BYTE PTR [rcx],al
   140008359:	add    al,0x1
   14000835b:	add    BYTE PTR [rdx+rax*4],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	add    DWORD PTR [rcx+rax*1],eax
   140008363:	add    BYTE PTR [rdx+riz*2],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	or     DWORD PTR [rbx+rcx*1],ebx
   14000836b:	add    BYTE PTR [rsp+rsi*2],bl
   14000836e:	sbb    al,0x0
   140008370:	sbb    al,0x64
   140008372:	sbb    eax,DWORD PTR [rax]
   140008374:	sbb    al,0x34
   140008376:	sbb    al,BYTE PTR [rax]
   140008378:	sbb    al,0x1
   14000837a:	(bad)  
   14000837b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e09771
   140008381:	rol    BYTE PTR [rax],0x0
   140008384:	push   rsi
   140008385:	rex.WRXB add BYTE PTR [r8],r8b
   140008388:	add    DWORD PTR [rax],eax
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	and    BYTE PTR [rax+0x0],cl
   14000838f:	add    BYTE PTR [rsi],dl
   140008391:	rex.WX add BYTE PTR [rax],al
   140008394:	(bad)  
   140008395:	push   rdi
   140008396:	add    BYTE PTR [rax],al
   140008398:	(bad)  
   140008399:	rex.WX add BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	add    DWORD PTR [rax],eax
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a20483ab
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	sbb    BYTE PTR [rcx+0x0],dl
   1400083af:	add    BYTE PTR [rax],cl
   1400083b1:	data16 add BYTE PTR [rax],al
   1400083b4:	(bad)  
   1400083b5:	(bad)  
   1400083b6:	(bad)  
   1400083b7:	inc    DWORD PTR [rax]
   1400083b9:	add    BYTE PTR [rax],al
   1400083bb:	add    bh,bh
   1400083bd:	(bad)  
   1400083be:	(bad)  
   1400083bf:	inc    DWORD PTR [rax]
	...
   1400083c9:	add    BYTE PTR [rax],al
   1400083cb:	add    BYTE PTR [rcx],al
   1400083cd:	add    BYTE PTR [rax],al
   1400083cf:	add    BYTE PTR [rcx],al
   1400083d1:	add    BYTE PTR [rax],al
   1400083d3:	add    al,bl
   1400083d5:	add    DWORD PTR [rax],0x0
   1400083d8:	add    BYTE PTR [rax],al
	...
   1400083e3:	add    BYTE PTR [rsi+0x38000057],ah
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    BYTE PTR [rax],al
   1400083ed:	add    BYTE PTR [rax],al
   1400083ef:	add    ah,al
   1400083f1:	rex.WX add BYTE PTR [rax],al
   1400083f4:	(bad)  
   1400083f5:	(bad)  
   1400083f6:	(bad)  
   1400083f7:	call   rcx
   1400083f9:	rex.WX add BYTE PTR [rax],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	xlat   BYTE PTR ds:[rbx]
   140008401:	rex.WX add BYTE PTR [rax],al
   140008404:	(bad)  
   140008405:	(bad)  
   140008406:	(bad)  
   140008407:	jmp    QWORD PTR [rsi+0x57]
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    BYTE PTR [rbx+0x1000057],dh
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax+0x57],bh
   14000841d:	add    BYTE PTR [rax],al
   14000841f:	add    BYTE PTR [rcx],bl
   140008421:	or     al,BYTE PTR [rdx]
   140008423:	add    BYTE PTR [rdx],cl
   140008425:	xor    al,BYTE PTR [rsi]
   140008427:	push   rax
   140008428:	sbb    BYTE PTR [rcx+0x0],dl
   14000842b:	add    BYTE PTR [rax],cl
   14000842d:	data16 add BYTE PTR [rax],al
   140008430:	adc    DWORD PTR [rdx],ecx
   140008432:	add    al,0x0
   140008434:	or     dh,BYTE PTR [rsi+rax*1]
   140008437:	add    BYTE PTR [rdx],cl
   140008439:	xor    al,BYTE PTR [rsi]
   14000843b:	jo     0x140008493
   14000843d:	rex.WRXB add BYTE PTR [r8],r8b
   140008440:	add    DWORD PTR [rax],eax
   140008442:	add    BYTE PTR [rax],al
   140008444:	cmp    eax,0x8200004b
   140008449:	rex.WXB add BYTE PTR [r8],al
   14000844c:	int3   
   14000844d:	push   rdi
   14000844e:	add    BYTE PTR [rax],al
   140008450:	add    BYTE PTR [rax],al
   140008452:	add    BYTE PTR [rax],al
   140008454:	or     DWORD PTR [rcx+rax*1],eax
   140008457:	add    BYTE PTR [rdx+riz*1],al
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	push   rsi
   14000845d:	rex.WRXB add BYTE PTR [r8],r8b
   140008460:	add    DWORD PTR [rax],eax
   140008462:	add    BYTE PTR [rax],al
   140008464:	fmul   QWORD PTR [rax+rax*1+0x0]
   140008468:	adc    cl,BYTE PTR [rbp+0x0]
   14000846b:	add    BYTE PTR [rcx],al
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rdx],dl
   140008471:	rex.WRB add BYTE PTR [r8],r8b
   140008474:	or     DWORD PTR [rdx],ecx
   140008476:	add    al,0x0
   140008478:	or     dh,BYTE PTR [rsi+rax*1]
   14000847b:	add    BYTE PTR [rdx],cl
   14000847d:	xor    al,BYTE PTR [rsi]
   14000847f:	jo     0x1400084d7
   140008481:	rex.WRXB add BYTE PTR [r8],r8b
   140008484:	add    DWORD PTR [rax],eax
   140008486:	add    BYTE PTR [rax],al
   140008488:	in     eax,dx
   140008489:	rex.WRB add BYTE PTR [r8],r8b
   14000848c:	and    BYTE PTR [rsi+0x0],cl
   14000848f:	add    al,dh
   140008491:	push   rdi
   140008492:	add    BYTE PTR [rax],al
   140008494:	and    BYTE PTR [rsi+0x0],cl
   140008497:	add    BYTE PTR [rcx],al
   140008499:	or     eax,0x340d0004
   14000849e:	or     DWORD PTR [rax],eax
   1400084a0:	or     eax,0x1500632
   1400084a5:	or     al,0x2
   1400084a7:	add    BYTE PTR [rcx+rax*1],cl
   1400084aa:	adc    DWORD PTR [rax],eax
   1400084ac:	add    BYTE PTR [rax],al
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	add    DWORD PTR [rax],eax
	...
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	xor    BYTE PTR [rax+0x0],ah
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	(bad)  
   1400084c5:	(bad)  
   1400084c6:	(bad)  
   1400084c7:	inc    DWORD PTR [rax]
   1400084c9:	add    BYTE PTR [rax],al
   1400084cb:	add    BYTE PTR [rax],bl
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    dl,cl
   1400084d1:	rex.WXB add BYTE PTR [r8],al
	...
   1400084e4:	test   al,0x45
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	add    BYTE PTR [rax],al
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	add    BYTE PTR [rbp+0x0],al
	...
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	add    al,BYTE PTR [rax]
   140008502:	add    BYTE PTR [rax],al
   140008504:	sbb    BYTE PTR [rbp-0x7b480000],al
	...
   140008516:	add    BYTE PTR [rax],al
   140008518:	adc    BYTE PTR [rax],al
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	push   rax
   14000851d:	movabs al,ds:0xffff000000000000
   140008526:	(bad)  
   140008527:	inc    DWORD PTR [rax]
   140008529:	add    BYTE PTR [rax],al
   14000852b:	add    BYTE PTR [rax],bl
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	add    BYTE PTR [rbp+rax*2+0x0],cl
	...
   14000853f:	add    BYTE PTR [rax-0x7a],cl
	...
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	ret    0x8b
   14000854f:	add    BYTE PTR [rax],al
   140008551:	(bad)  
   140008552:	add    BYTE PTR [rax],al
   140008554:	call   0x1400085df
   140008559:	add    BYTE PTR [rax],al
   14000855b:	add    BYTE PTR [rax],al
   14000855d:	add    BYTE PTR [rax],al
   14000855f:	add    BYTE PTR [rax],dl
   140008561:	lea    eax,[rax]
   140008563:	add    BYTE PTR [rax+0x8000060],ah
   140008569:	mov    BYTE PTR [rax],al
	...
   140008573:	add    BYTE PTR [rax-0x72],dh
   140008576:	add    BYTE PTR [rax],al
   140008578:	shl    BYTE PTR [rcx+0x0],0x0
   14000857c:	call   0x140008609
   140008581:	add    BYTE PTR [rax],al
   140008583:	add    BYTE PTR [rax],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rdx],bl
   140008589:	nop
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	movabs al,ds:0x8a48000062
   140008595:	add    BYTE PTR [rax],al
   140008597:	add    BYTE PTR [rax],al
   140008599:	add    BYTE PTR [rax],al
   14000859b:	add    ah,cl
   14000859d:	nop
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400085a4:	fadd   DWORD PTR [rdi+0x0]
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	add    BYTE PTR [rax],al
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	(bad)  
   1400085b1:	nop
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	nop
   1400085b5:	(bad)  
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	lock mov DWORD PTR [rax],eax
	...
   1400085c3:	add    BYTE PTR [rsi-0x57ffff6f],ch
   1400085c9:	movsxd eax,DWORD PTR [rax]
   1400085cb:	add    al,bh
   1400085cd:	xchg   DWORD PTR [rax],eax
	...
   1400085d7:	add    dl,cl
   1400085d9:	xchg   ecx,eax
   1400085da:	add    BYTE PTR [rax],al
   1400085dc:	mov    al,0x61
   1400085de:	add    BYTE PTR [rax],al
   1400085e0:	test   al,0x88
	...
   1400085ea:	add    BYTE PTR [rax],al
   1400085ec:	sbb    al,0x92
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	(bad)  
   1400085f1:	(bad)  
   1400085f2:	add    BYTE PTR [rax],al
   1400085f4:	ror    BYTE PTR [rax+0x0],0x0
   1400085fb:	add    BYTE PTR [rax],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rdx+rdx*4+0x0],al
   140008603:	add    BYTE PTR [rax+0x62],bh
   140008606:	add    BYTE PTR [rax],al
   140008608:	ror    BYTE PTR [rax+0x0],1
   14000860e:	add    BYTE PTR [rax],al
   140008610:	add    BYTE PTR [rax],al
   140008612:	add    BYTE PTR [rax],al
   140008614:	xchg   edx,eax
   140008615:	xchg   edx,eax
   140008616:	add    BYTE PTR [rax],al
   140008618:	mov    BYTE PTR [rdx+0x0],ah
   14000861b:	add    al,ch
   14000861d:	xchg   DWORD PTR [rax],eax
	...
   140008627:	add    al,bh
   140008629:	xchg   ebx,eax
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	movabs al,ds:0x61
	...
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax-0x76],dh
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	add    BYTE PTR [rax],al
   14000864e:	add    BYTE PTR [rax],al
   140008650:	or     BYTE PTR [rdx+0x0],0x0
   140008657:	add    BYTE PTR [rsi+0x8a],cl
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rdx+0x8a],ah
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    BYTE PTR [rdx+0x8a],dh
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    dl,al
   140008671:	mov    al,BYTE PTR [rax]
   140008673:	add    BYTE PTR [rax],al
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    ah,dl
   140008679:	mov    al,BYTE PTR [rax]
   14000867b:	add    BYTE PTR [rax],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    dh,ah
   140008681:	mov    al,BYTE PTR [rax]
   140008683:	add    BYTE PTR [rax],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    al,bh
   140008689:	mov    al,BYTE PTR [rax]
   14000868b:	add    BYTE PTR [rax],al
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rdx],cl
   140008691:	mov    eax,DWORD PTR [rax]
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rsi],bl
   140008699:	mov    eax,DWORD PTR [rax]
   14000869b:	add    BYTE PTR [rax],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    BYTE PTR [rsi],dh
   1400086a1:	mov    eax,DWORD PTR [rax]
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    BYTE PTR [rsi-0x75],cl
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	add    BYTE PTR [rax],al
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	mov    eax,DWORD PTR fs:[rax]
   1400086b3:	add    BYTE PTR [rax],al
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    BYTE PTR [rdx-0x75],bh
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    BYTE PTR [rax],al
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	xchg   esp,eax
   1400086c1:	mov    eax,DWORD PTR [rax]
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rdx+0x8b],ch
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rdx+0x92],bh
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    dh,al
   1400086d9:	xchg   edx,eax
	...
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	cmp    BYTE PTR [rax+rax*1+0x0],cl
   1400086ef:	add    BYTE PTR [rax-0x74],dl
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	(bad)  
   1400086f9:	mov    WORD PTR [rax],es
   1400086fb:	add    BYTE PTR [rax],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rdx-0x74],dh
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    BYTE PTR [rax],al
   140008708:	or     BYTE PTR [rax+rax*1+0x0],0x0
   140008710:	mov    WORD PTR [rax+rax*1+0x0],cs
   140008717:	add    BYTE PTR [rsp+rcx*4+0x0],bl
   14000871e:	add    BYTE PTR [rax],al
   140008720:	mov    ah,0x8c
   140008722:	add    BYTE PTR [rax],al
   140008724:	add    BYTE PTR [rax],al
   140008726:	add    BYTE PTR [rax],al
   140008728:	retf   0x8c
   14000872b:	add    BYTE PTR [rax],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    dl,bl
   140008731:	mov    WORD PTR [rax],es
   140008733:	add    BYTE PTR [rax],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    dl,bh
   140008739:	mov    WORD PTR [rax],es
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rax],cl
   140008741:	lea    eax,[rax]
   140008743:	add    BYTE PTR [rax],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    ah,ah
   140008749:	mov    eax,DWORD PTR [rax]
   14000874b:	add    BYTE PTR [rax],al
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    dl,dh
   140008751:	mov    eax,DWORD PTR [rax]
   140008753:	add    BYTE PTR [rax],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rax],cl
   140008759:	mov    WORD PTR [rax],es
   14000875b:	add    BYTE PTR [rax],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    dh,dl
   140008761:	xchg   edx,eax
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    BYTE PTR [rax],al
   140008766:	add    BYTE PTR [rax],al
   140008768:	call   0x1400087ff
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rsi],al
   140008771:	xchg   ebx,eax
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax],al
   140008778:	sbb    dl,BYTE PTR [rbx+0x0]
   14000877e:	add    BYTE PTR [rax],al
   140008780:	xor    al,0x93
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	rex.WX xchg rbx,rax
   14000878a:	add    BYTE PTR [rax],al
   14000878c:	add    BYTE PTR [rax],al
   14000878e:	add    BYTE PTR [rax],al
   140008790:	fs xchg ebx,eax
   140008792:	add    BYTE PTR [rax],al
   140008794:	add    BYTE PTR [rax],al
   140008796:	add    BYTE PTR [rax],al
   140008798:	je     0x14000872d
   14000879a:	add    BYTE PTR [rax],al
   14000879c:	add    BYTE PTR [rax],al
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	nop
   1400087a1:	xchg   ebx,eax
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	add    BYTE PTR [rax],al
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400087a9:	xchg   ebx,eax
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	add    BYTE PTR [rax],al
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	mov    ah,0x93
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	add    BYTE PTR [rax],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	ret    0x93
   1400087bb:	add    BYTE PTR [rax],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    al,dl
   1400087c1:	mov    eax,DWORD PTR [rax]
   1400087c3:	add    BYTE PTR [rax],al
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rdx],ah
   1400087c9:	mov    WORD PTR [rax],es
	...
   1400087d7:	add    BYTE PTR [rdx],al
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rax],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rax],0x0
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	add    BYTE PTR [rax],al
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	fcom   DWORD PTR [rbx+0x0]
	...
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	mov    eax,0x91
	...
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    BYTE PTR [rax],bh
   140008809:	mov    es,WORD PTR [rax]
   14000880b:	add    BYTE PTR [rax],al
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rdx-0x73],al
   140008812:	add    BYTE PTR [rax],al
   140008814:	add    BYTE PTR [rax],al
   140008816:	add    BYTE PTR [rax],al
   140008818:	push   rdx
   140008819:	lea    eax,[rax]
   14000881b:	add    BYTE PTR [rax],al
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    BYTE PTR [rsi-0x73],ch
   140008822:	add    BYTE PTR [rax],al
   140008824:	add    BYTE PTR [rax],al
   140008826:	add    BYTE PTR [rax],al
   140008828:	(bad)  
   140008829:	lea    eax,[rax]
   14000882b:	add    BYTE PTR [rax],al
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rsi+0x8d],cl
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rsi],ch
   140008839:	lea    eax,[rax]
   14000883b:	add    BYTE PTR [rax],al
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rbp+rcx*4+0x0],ch
   140008846:	add    BYTE PTR [rax],al
   140008848:	mov    eax,0x8d
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    dl,cl
   140008851:	lea    eax,[rax]
   140008853:	add    BYTE PTR [rax],al
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    ah,bl
   140008859:	lea    eax,[rax]
   14000885b:	add    BYTE PTR [rax],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rsi+rcx*4],ah
   140008862:	add    BYTE PTR [rax],al
   140008864:	add    BYTE PTR [rax],al
   140008866:	add    BYTE PTR [rax],al
   140008868:	lock lea eax,[rax]
   14000886b:	add    BYTE PTR [rax],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rsi+rcx*4+0x0],bl
   140008873:	add    BYTE PTR [rax],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rdx],al
   140008879:	mov    es,WORD PTR [rax]
   14000887b:	add    BYTE PTR [rax],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rsi],dl
   140008881:	mov    es,WORD PTR [rax]
   140008883:	add    BYTE PTR [rax],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    BYTE PTR [rdx+0x8d],bl
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    BYTE PTR [rsi+rcx*4+0x0],cl
   140008893:	add    BYTE PTR [rax],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    BYTE PTR [rsi],bl
   140008899:	lea    eax,[rax]
	...
   1400088a7:	add    al,bh
   1400088a9:	xchg   ecx,eax
   1400088aa:	add    BYTE PTR [rax],al
   1400088ac:	add    BYTE PTR [rax],al
   1400088ae:	add    BYTE PTR [rax],al
   1400088b0:	(bad)  
   1400088b1:	xchg   ecx,eax
	...
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	sub    dl,BYTE PTR [rdx+0x0]
	...
   1400088ce:	add    BYTE PTR [rax],al
   1400088d0:	xchg   dx,ax
   1400088d2:	add    BYTE PTR [rax],al
   1400088d4:	add    BYTE PTR [rax],al
   1400088d6:	add    BYTE PTR [rax],al
   1400088d8:	jl     0x14000886c
	...
   1400088e6:	add    BYTE PTR [rax],al
   1400088e8:	fimul  DWORD PTR [rdi+0x0]
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	ror    BYTE PTR [rdi+0x0],1
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	(bad)  
   1400088f9:	xchg   ebx,eax
   1400088fa:	add    BYTE PTR [rax],al
   1400088fc:	add    BYTE PTR [rax],al
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	mov    eax,0x8f
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   14000890e:	add    BYTE PTR [rax],al
   140008910:	cwde   
   140008911:	pop    QWORD PTR [rax]
   140008913:	add    BYTE PTR [rax],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    BYTE PTR [rsi+0x8f],cl
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rsi+0x8f],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   14000892b:	add    BYTE PTR [rax],al
   14000892d:	add    BYTE PTR [rax],al
   14000892f:	add    BYTE PTR [rdi+rcx*4+0x0],cl
   140008933:	add    BYTE PTR [rax],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    BYTE PTR [rsi],bh
   140008939:	pop    QWORD PTR [rax]
   14000893b:	add    BYTE PTR [rax],al
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rax],ch
   140008941:	pop    QWORD PTR [rax]
   140008943:	add    BYTE PTR [rax],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rdi+rcx*4],bl
   14000894a:	add    BYTE PTR [rax],al
   14000894c:	add    BYTE PTR [rax],al
   14000894e:	add    BYTE PTR [rax],al
   140008950:	dec    BYTE PTR [rsi+0x0]
   140008956:	add    BYTE PTR [rax],al
   140008958:	out    0x8e,al
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	add    BYTE PTR [rax],al
   14000895e:	add    BYTE PTR [rax],al
   140008960:	enter  0x8e,0x0
   140008964:	add    BYTE PTR [rax],al
   140008966:	add    BYTE PTR [rax],al
   140008968:	test   al,0x8e
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	add    BYTE PTR [rax],al
   14000896e:	add    BYTE PTR [rax],al
   140008970:	xchg   esi,eax
   140008971:	mov    es,WORD PTR [rax]
   140008973:	add    BYTE PTR [rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rax+0x8e],cl
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    ah,ah
   140008981:	pop    QWORD PTR [rax]
   140008983:	add    BYTE PTR [rax],al
   140008985:	add    BYTE PTR [rax],al
   140008987:	add    BYTE PTR [rsi-0x70],al
   14000898a:	add    BYTE PTR [rax],al
   14000898c:	add    BYTE PTR [rax],al
   14000898e:	add    BYTE PTR [rax],al
   140008990:	cmp    BYTE PTR [rax+0x0],dl
   140008996:	add    BYTE PTR [rax],al
   140008998:	cs nop
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	add    BYTE PTR [rax],al
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	es nop
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	add    BYTE PTR [rax],al
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	add    al,0x90
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	add    BYTE PTR [rax],al
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	pop    rdx
   1400089b1:	pop    QWORD PTR [rax]
   1400089b3:	add    BYTE PTR [rax],al
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    al,dh
   1400089b9:	pop    QWORD PTR [rax]
   1400089bb:	add    BYTE PTR [rax],al
   1400089bd:	add    BYTE PTR [rax],al
   1400089bf:	add    BYTE PTR [rsi+rcx*4+0x0],bh
   1400089c3:	add    BYTE PTR [rax],al
   1400089c5:	add    BYTE PTR [rax],al
   1400089c7:	add    BYTE PTR [rax-0x70],dl
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	add    BYTE PTR [rax],al
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	jle    0x140008961
   1400089d2:	add    BYTE PTR [rax],al
   1400089d4:	add    BYTE PTR [rax],al
   1400089d6:	add    BYTE PTR [rax],al
   1400089d8:	sahf   
   1400089d9:	mov    es,WORD PTR [rax]
   1400089db:	add    BYTE PTR [rax],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax],al
   1400089e1:	xchg   esp,eax
	...
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	(bad)  
   1400089f1:	xchg   ecx,eax
   1400089f2:	add    BYTE PTR [rax],al
   1400089f4:	add    BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	adc    BYTE PTR [rcx+0x0],0x0
   1400089ff:	add    BYTE PTR [rcx+rdx*4+0x0],ch
   140008a03:	add    BYTE PTR [rax],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rdx-0x6f],bl
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	add    BYTE PTR [rax],al
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	rex.RX xchg ecx,eax
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	xor    BYTE PTR [rcx+0x0],dl
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	(bad)  
   140008a21:	xchg   ecx,eax
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	add    BYTE PTR [rax],al
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	or     BYTE PTR [rcx+0x0],dl
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	hlt    
   140008a31:	nop
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	add    BYTE PTR [rax],al
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	in     al,0x90
	...
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	lods   al,BYTE PTR ds:[rsi]
   140008a49:	nop
   140008a4a:	add    BYTE PTR [rax],al
   140008a4c:	add    BYTE PTR [rax],al
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	(bad)  
   140008a51:	nop
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    BYTE PTR [rax],al
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	jl     0x1400089ea
   140008a5a:	add    BYTE PTR [rax],al
   140008a5c:	add    BYTE PTR [rax],al
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	push   0x90
	...
   140008a6d:	add    BYTE PTR [rax],al
   140008a6f:	add    BYTE PTR [rsi+0x67655202],al
   140008a75:	rex.WRXB jo 0x140008add
   140008a78:	outs   dx,BYTE PTR ds:[rsi]
   140008a79:	rex.WXB
   140008a7a:	gs jns 0x140008ac2
   140008a7d:	js     0x140008ad6
   140008a7f:	add    BYTE PTR [rbp+0x2],dl
   140008a82:	push   rdx
   140008a83:	gs rex.XB ins BYTE PTR es:[edi],dx
   140008a87:	outs   dx,DWORD PTR ds:[rsi]
   140008a88:	jae    0x140008aef
   140008a8a:	rex.WXB
   140008a8b:	gs jns 0x140008a8e
   140008a8e:	xchg   ebx,eax
   140008a8f:	add    dl,BYTE PTR [rdx+0x65]
   140008a92:	addr32 push rcx
   140008a94:	jne    0x140008afb
   140008a96:	jb     0x140008b11
   140008a98:	push   rsi
   140008a99:	(bad)  
   140008a9a:	ins    BYTE PTR es:[rdi],dx
   140008a9b:	jne    0x140008b02
   140008a9d:	rex.RB js 0x140008af7
   140008aa0:	add    BYTE PTR [rax],al
   140008aa2:	je     0x140008aa6
   140008aa4:	push   rdx
   140008aa5:	rex.RB outs dx,BYTE PTR gs:[esi]
   140008aa9:	jne    0x140008b18
   140008aab:	rex.WXB
   140008aac:	gs jns 0x140008af4
   140008aaf:	js     0x140008b08
   140008ab1:	add    BYTE PTR [rdi+0x2],dh
   140008ab4:	push   rdx
   140008ab5:	rex.RB outs dx,BYTE PTR gs:[esi]
   140008ab9:	jne    0x140008b28
   140008abb:	push   rsi
   140008abc:	(bad)  
   140008abd:	ins    BYTE PTR es:[rdi],dx
   140008abe:	jne    0x140008b25
   140008ac0:	push   rdi
   140008ac1:	add    BYTE PTR [rbp+0x2],ch
   140008ac4:	push   rdx
   140008ac5:	gs addr32 rex.R
   140008ac8:	gs ins BYTE PTR es:[rdi],dx
   140008aca:	gs je  0x140008b32
   140008acd:	push   rsi
   140008ace:	(bad)  
   140008acf:	ins    BYTE PTR es:[rdi],dx
   140008ad0:	jne    0x140008b37
   140008ad2:	push   rdi
   140008ad3:	add    BYTE PTR [rbx+0x2],ch
   140008ad6:	push   rdx
   140008ad7:	gs addr32 rex.R
   140008ada:	gs ins BYTE PTR es:[rdi],dx
   140008adc:	gs je  0x140008b44
   140008adf:	push   rsp
   140008ae0:	jb     0x140008b47
   140008ae2:	gs push rdi
   140008ae4:	add    BYTE PTR [rax],al
   140008ae6:	pop    rsi
   140008ae7:	add    dl,BYTE PTR [rdx+0x65]
   140008aea:	addr32 rex.XB jb 0x140008b53
   140008aee:	(bad)  
   140008aef:	je     0x140008b56
   140008af1:	rex.WXB
   140008af2:	gs jns 0x140008b3a
   140008af5:	js     0x140008b4e
   140008af7:	add    BYTE PTR [rbx+0x67655202],ah
   140008afd:	push   rbx
   140008afe:	gs je  0x140008b57
   140008b01:	(bad)  
   140008b02:	ins    BYTE PTR es:[rdi],dx
   140008b03:	jne    0x140008b6a
   140008b05:	rex.RB js 0x140008b5f
   140008b08:	add    BYTE PTR [rax],al
   140008b0a:	adc    eax,DWORD PTR [rdx]
   140008b0c:	rex.WRXB jo 0x140008b74
   140008b0f:	outs   dx,BYTE PTR ds:[rsi]
   140008b10:	push   rax
   140008b11:	jb     0x140008b82
   140008b13:	movsxd esp,DWORD PTR [rbp+0x73]
   140008b16:	jae    0x140008b6c
   140008b18:	outs   dx,DWORD PTR ds:[rsi]
   140008b19:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140008b1d:	add    BYTE PTR [rbp+0x6f6f4c01],ch
   140008b23:	imul   esi,DWORD PTR [rbp+0x70],0x50
   140008b27:	jb     0x140008b92
   140008b29:	jbe    0x140008b94
   140008b2b:	ins    BYTE PTR es:[rdi],dx
   140008b2c:	gs addr32 gs push rsi
   140008b30:	(bad)  
   140008b31:	ins    BYTE PTR es:[rdi],dx
   140008b32:	jne    0x140008b99
   140008b34:	push   rdi
   140008b35:	add    BYTE PTR [rdi],bl
   140008b37:	add    BYTE PTR [rcx+0x64],al
   140008b3a:	push   0x75
   140008b3c:	jae    0x140008bb2
   140008b3e:	push   rsp
   140008b3f:	outs   dx,DWORD PTR ds:[rsi]
   140008b40:	imul   esp,DWORD PTR [rbp+0x6e],0x50
   140008b44:	jb     0x140008baf
   140008b46:	jbe    0x140008bb1
   140008b48:	ins    BYTE PTR es:[rdi],dx
   140008b49:	gs addr32 gs jae 0x140008b4e
   140008b4e:	outs   dx,DWORD PTR ds:[rsi]
   140008b4f:	add    DWORD PTR [rdi+0x65],eax
   140008b52:	je     0x140008ba8
   140008b54:	outs   dx,DWORD PTR ds:[rsi]
   140008b55:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   140008b59:	outs   dx,BYTE PTR ds:[rsi]
   140008b5a:	outs   dx,WORD PTR ds:[rsi]
   140008b5c:	jb     0x140008bcb
   140008b5e:	(bad)  
   140008b5f:	je     0x140008bca
   140008b61:	outs   dx,DWORD PTR ds:[rsi]
   140008b62:	outs   dx,BYTE PTR ds:[rsi]
   140008b63:	add    BYTE PTR [rbp+0x6f6f4c01],ah
   140008b69:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140008b6d:	movsxd esp,DWORD PTR [rbx+0x6f]
   140008b70:	jne    0x140008be0
   140008b72:	je     0x140008bc2
   140008b74:	(bad)  
   140008b75:	ins    DWORD PTR es:[rdi],dx
   140008b76:	gs push rdi
   140008b78:	add    BYTE PTR [rax],al
   140008b7a:	jnp    0x140008b7c
   140008b7c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008b7e:	outs   dx,BYTE PTR ds:[rsi]
   140008b7f:	jbe    0x140008be6
   140008b81:	jb     0x140008bf7
   140008b83:	push   rbx
   140008b84:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   140008b8c:	outs   dx,BYTE PTR ds:[rsi]
   140008b8d:	addr32 push rbx
   140008b8f:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x43009200
   140008b97:	jb     0x140008bfe
   140008b99:	(bad)  
   140008b9a:	je     0x140008c01
   140008b9c:	push   rdi
   140008b9d:	gs ins BYTE PTR es:[rdi],dx
   140008b9f:	ins    BYTE PTR es:[rdi],dx
   140008ba0:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   140008ba2:	outs   dx,DWORD PTR ds:[rsi]
   140008ba3:	ja     0x140008c13
   140008ba5:	push   rbx
   140008ba6:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6843005f
   140008bae:	movsxd ebp,DWORD PTR gs:[rbx+0x54]
   140008bb2:	outs   dx,DWORD PTR ds:[rsi]
   140008bb3:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   140008bb7:	gs ins DWORD PTR es:[rdi],dx
   140008bb9:	(bad)  
   140008bba:	gs jb  0x140008c30
   140008bbd:	push   0x7069
   140008bc2:	rex.B
   140008bc3:	rex.R push rsi
   140008bc5:	push   r8
   140008bc7:	xor    rsi,QWORD PTR [r10]
   140008bca:	cs fs ins BYTE PTR es:[rdi],dx
   140008bcd:	ins    BYTE PTR es:[rdi],dx
   140008bce:	add    BYTE PTR [rax],al
   140008bd0:	adc    BYTE PTR [rdx],al
   140008bd2:	rex.RXB
   140008bd3:	gs je  0x140008c19
   140008bd6:	jne    0x140008c4a
   140008bd8:	jb     0x140008c3f
   140008bda:	outs   dx,BYTE PTR ds:[rsi]
   140008bdb:	je     0x140008c2d
   140008bdd:	jb     0x140008c4e
   140008bdf:	movsxd esp,DWORD PTR [rbp+0x73]
   140008be2:	jae    0x140008be4
   140008be4:	test   BYTE PTR [rbx],0x4f
   140008be7:	jo     0x140008c4e
   140008be9:	outs   dx,BYTE PTR ds:[rsi]
   140008bea:	push   rax
   140008beb:	jb     0x140008c5c
   140008bed:	movsxd esp,DWORD PTR [rbp+0x73]
   140008bf0:	jae    0x140008bf2
   140008bf2:	enter  0x5705,0x61
   140008bf6:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140008bfe:	ins    BYTE PTR es:[edi],dx
   140008c00:	gs rex.WRXB (bad) 
   140008c03:	push   0x65
   140008c05:	movsxd esi,DWORD PTR [rax+rax*1-0x3a]
   140008c09:	add    eax,0x74696157
   140008c0e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008c10:	jb     0x140008c5f
   140008c12:	jne    0x140008c80
   140008c14:	je     0x140008c7f
   140008c16:	jo     0x140008c84
   140008c18:	gs rex.WRXB (bad) 
   140008c1b:	push   0x65
   140008c1d:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140008c21:	add    BYTE PTR [rdx+rax*1],dh
   140008c24:	rex.RXB
   140008c25:	gs je  0x140008c6d
   140008c28:	js     0x140008c93
   140008c2a:	je     0x140008c6f
   140008c2c:	outs   dx,DWORD PTR ds:[rsi]
   140008c2d:	fs gs push rax
   140008c30:	jb     0x140008ca1
   140008c32:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c35:	jae    0x140008c37
   140008c37:	add    BYTE PTR [rdx+0x74654702],dl
   140008c3d:	push   rax
   140008c3e:	(bad)  
   140008c3f:	movsxd ebp,DWORD PTR [rbx+0x61]
   140008c42:	addr32 gs rex.RX (bad) 
   140008c46:	ins    DWORD PTR es:[rdi],dx
   140008c47:	imul   ebp,DWORD PTR [rcx+rdi*2+0x4e],0x656d61
   140008c4f:	add    dl,bl
   140008c51:	add    BYTE PTR [rbx+0x72],al
   140008c54:	gs (bad) 
   140008c56:	je     0x140008cbd
   140008c58:	push   rax
   140008c59:	jb     0x140008cca
   140008c5b:	movsxd esp,DWORD PTR [rbp+0x73]
   140008c5e:	jae    0x140008cb7
   140008c60:	add    BYTE PTR [rax],al
   140008c62:	push   rdi
   140008c63:	add    al,BYTE PTR [rdi+0x65]
   140008c66:	je     0x140008cb4
   140008c68:	(bad)  
   140008c69:	jae    0x140008cdf
   140008c6b:	rex.RB jb 0x140008ce0
   140008c6e:	outs   dx,DWORD PTR ds:[rsi]
   140008c6f:	jb     0x140008c71
   140008c71:	add    BYTE PTR [rbp+0x0],bh
   140008c74:	rex.XB ins BYTE PTR es:[rdi],dx
   140008c76:	outs   dx,DWORD PTR ds:[rsi]
   140008c77:	jae    0x140008cde
   140008c79:	rex.W (bad) 
   140008c7b:	outs   dx,BYTE PTR ds:[rsi]
   140008c7c:	fs ins BYTE PTR es:[rdi],dx
   140008c7e:	add    BYTE PTR gs:[rax],cl
   140008c81:	add    eax,0x45746553
   140008c86:	jbe    0x140008ced
   140008c88:	outs   dx,BYTE PTR ds:[rsi]
   140008c89:	je     0x140008c8b
   140008c8b:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   140008c92:	je     0x140008cf9
   140008c94:	rex.RB jbe 0x140008cfc
   140008c97:	outs   dx,BYTE PTR ds:[rsi]
   140008c98:	je     0x140008cf1
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	sbb    BYTE PTR [rax+rdx*2],al
   140008c9f:	jb     0x140008d10
   140008ca1:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ca4:	jae    0x140008cef
   140008ca6:	fs push rsp
   140008ca8:	outs   dx,DWORD PTR ds:[rsi]
   140008ca9:	push   rbx
   140008caa:	gs jae 0x140008d20
   140008cad:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   140008cb4:	adc    DWORD PTR [rdx],eax
   140008cb6:	rex.RXB
   140008cb7:	gs je  0x140008cfd
   140008cba:	jne    0x140008d2e
   140008cbc:	jb     0x140008d23
   140008cbe:	outs   dx,BYTE PTR ds:[rsi]
   140008cbf:	je     0x140008d11
   140008cc1:	jb     0x140008d32
   140008cc3:	movsxd esp,DWORD PTR [rbp+0x73]
   140008cc6:	jae    0x140008d11
   140008cc8:	fs add dh,ah
   140008ccb:	add    BYTE PTR [rbx+0x72],al
   140008cce:	gs (bad) 
   140008cd0:	je     0x140008d37
   140008cd2:	push   rsp
   140008cd3:	push   0x64616572
   140008cd8:	add    BYTE PTR [rax],al
   140008cda:	ss add eax,0x50746553
   140008ce0:	jb     0x140008d51
   140008ce2:	movsxd esp,DWORD PTR [rbp+0x73]
   140008ce5:	jae    0x140008d3a
   140008ce7:	push   0x6f647475
   140008cec:	ja     0x140008d5c
   140008cee:	push   rax
   140008cef:	(bad)  
   140008cf0:	jb     0x140008d53
   140008cf2:	ins    DWORD PTR es:[rdi],dx
   140008cf3:	gs je  0x140008d5b
   140008cf6:	jb     0x140008d6b
   140008cf8:	add    BYTE PTR [rax],al
   140008cfa:	(bad)  
   140008cfb:	add    ecx,DWORD PTR [rdi+0x70]
   140008cfe:	outs   dx,BYTE PTR gs:[rsi]
   140008d00:	rex.RB jbe 0x140008d68
   140008d03:	outs   dx,BYTE PTR ds:[rsi]
   140008d04:	je     0x140008d5d
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	ins    DWORD PTR es:[rdi],dx
   140008d09:	add    eax,0x65656c53
   140008d0e:	jo     0x140008d10
   140008d10:	rex.WXB
   140008d11:	rex.RB push r10
   140008d13:	rex.WRX
   140008d14:	rex.RB
   140008d15:	xor    r14,QWORD PTR [rdx]
   140008d18:	cs fs ins BYTE PTR es:[rdi],dx
   140008d1b:	ins    BYTE PTR es:[rdi],dx
   140008d1c:	add    BYTE PTR [rax],al
   140008d1e:	(bad)  
   140008d1f:	add    DWORD PTR [rbp+0x78],eax
   140008d22:	imul   esi,DWORD PTR [rdi+rdx*2+0x69],0x776f646e
   140008d2a:	jae    0x140008d71
   140008d2c:	js     0x140008d2e
   140008d2e:	cmp    eax,DWORD PTR [rcx]
   140008d30:	rex.RXB
   140008d31:	gs je  0x140008d78
   140008d34:	gs jae 0x140008da2
   140008d37:	je     0x140008da8
   140008d39:	jo     0x140008d92
   140008d3b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140008d42:	or     al,BYTE PTR [rcx]
   140008d44:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   140008d4c:	outs   dx,DWORD PTR ds:[rsi]
   140008d4d:	ja     0x140008d94
   140008d4f:	js     0x140008da8
   140008d51:	add    ah,bl
   140008d53:	add    DWORD PTR [rdi+0x65],eax
   140008d56:	je     0x140008daf
   140008d58:	imul   ebp,DWORD PTR [rsi+0x64],0x6854776f
   140008d5f:	jb     0x140008dc6
   140008d61:	(bad)  
   140008d62:	fs push rax
   140008d64:	jb     0x140008dd5
   140008d66:	movsxd esp,DWORD PTR [rbp+0x73]
   140008d69:	jae    0x140008db4
   140008d6b:	add    BYTE PTR fs:[rax],al
   140008d6e:	add    cl,BYTE PTR gs:[rbp+0x6f]
   140008d72:	outs   dx,BYTE PTR ds:[rsi]
   140008d73:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f7246
   140008d7b:	push   rdi
   140008d7c:	imul   ebp,DWORD PTR [rsi+0x64],0x7f00776f
   140008d83:	add    DWORD PTR [rdi+0x65],eax
   140008d86:	je     0x140008dd8
   140008d88:	(bad)  
   140008d89:	jb     0x140008df0
   140008d8b:	outs   dx,BYTE PTR ds:[rsi]
   140008d8c:	je     0x140008d8e
   140008d8e:	and    al,BYTE PTR [rdx]
   140008d90:	rex.WB jae 0x140008dea
   140008d93:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140008d9a:	sub    DWORD PTR [rdx],eax
   140008d9c:	rex.WB jae 0x140008df6
   140008d9f:	imul   ebp,DWORD PTR [rsi+0x64],0x6956776f
   140008da6:	jae    0x140008e11
   140008da8:	(bad)  
   140008da9:	ins    BYTE PTR es:[rdi],dx
   140008daa:	add    BYTE PTR gs:[rbx],dl
   140008dad:	add    cl,BYTE PTR [rcx+0x73]
   140008db0:	movsxd rbp,DWORD PTR [r15+0x6e]
   140008db4:	imul   esp,DWORD PTR [rbx+0x0],0x50028400
   140008dbb:	outs   dx,DWORD PTR ds:[rsi]
   140008dbc:	jae    0x140008e32
   140008dbe:	push   rcx
   140008dbf:	jne    0x140008e2a
   140008dc1:	je     0x140008e10
   140008dc3:	gs jae 0x140008e39
   140008dc6:	(bad)  
   140008dc7:	add    BYTE PTR gs:[edx+0x66654400],ah
   140008dcf:	push   rdi
   140008dd0:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140008dd7:	outs   dx,DWORD PTR ds:[rsi]
   140008dd8:	movsxd edx,DWORD PTR [rdi+0x0]
   140008ddb:	add    BYTE PTR [rdx+rax*1+0x69676552],ch
   140008de2:	jae    0x140008e58
   140008de4:	gs jb  0x140008e2a
   140008de7:	ins    BYTE PTR es:[rdi],dx
   140008de8:	(bad)  
   140008de9:	jae    0x140008e5e
   140008deb:	rex.RB js 0x140008e45
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	jno    0x140008df2
   140008df2:	rex.XB jb 0x140008e5a
   140008df5:	(bad)  
   140008df6:	je     0x140008e5d
   140008df8:	push   rdi
   140008df9:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140008e00:	push   rdi
   140008e01:	add    BYTE PTR [rax],bh
   140008e03:	add    edx,DWORD PTR [rbx+0x65]
   140008e06:	je     0x140008e5f
   140008e08:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140008e0f:	outs   dx,BYTE PTR ds:[rsi]
   140008e10:	addr32 push rax
   140008e12:	je     0x140008e86
   140008e14:	push   rdi
   140008e15:	add    BYTE PTR [rax+0x1],bh
   140008e18:	rex.RXB
   140008e19:	gs je  0x140008e69
   140008e1c:	gs jae 0x140008e92
   140008e1f:	(bad)  
   140008e20:	addr32 gs push rdi
   140008e23:	add    BYTE PTR [rbx+0x3],ch
   140008e26:	push   rsp
   140008e27:	jb     0x140008e8a
   140008e29:	outs   dx,BYTE PTR ds:[rsi]
   140008e2a:	jae    0x140008e98
   140008e2c:	(bad)  
   140008e2d:	je     0x140008e94
   140008e2f:	rex.WRB
   140008e30:	gs jae 0x140008ea6
   140008e33:	(bad)  
   140008e34:	add    BYTE PTR gs:[eax],al
   140008e38:	mov    dh,0x0
   140008e3a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140008e42:	rex.WRB
   140008e43:	gs jae 0x140008eb9
   140008e46:	(bad)  
   140008e47:	addr32 gs push rdi
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	scas   al,BYTE PTR es:[rdi]
   140008e4d:	add    BYTE PTR [rbp+riz*2+0x73],al
   140008e51:	je     0x140008ec5
   140008e53:	outs   dx,DWORD PTR ds:[rsi]
   140008e54:	jns    0x140008ead
   140008e56:	imul   ebp,DWORD PTR [rsi+0x64],0x7500776f
   140008e5d:	add    edx,DWORD PTR [rbp+0x6e]
   140008e60:	jb     0x140008ec7
   140008e62:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140008e6a:	(bad)  
   140008e6b:	jae    0x140008ee0
   140008e6d:	push   rdi
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	push   rbp
   140008e71:	push   rbx
   140008e72:	rex.RB push r10
   140008e74:	xor    esi,DWORD PTR [rdx]
   140008e76:	cs fs ins BYTE PTR es:[rdi],dx
   140008e79:	ins    BYTE PTR es:[rdi],dx
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	sahf   
   140008e7d:	add    bl,BYTE PTR [rdi+0x70]
   140008e80:	jne    0x140008ef4
   140008e82:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140008e86:	ins    BYTE PTR es:[rdi],dx
   140008e87:	add    BYTE PTR [rcx+0x3],ch
   140008e8a:	pop    rdi
   140008e8b:	jbe    0x140008f00
   140008e8d:	outs   dx,BYTE PTR ds:[rsi]
   140008e8e:	ja     0x140008f00
   140008e90:	jb     0x140008efb
   140008e92:	outs   dx,BYTE PTR ds:[rsi]
   140008e93:	je     0x140008efb
   140008e95:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140008e99:	jb     0x140008f00
   140008e9b:	add    BYTE PTR gs:[rax],al
   140008e9e:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140008ea5:	movsxd eax,DWORD PTR [rax]
   140008ea7:	add    BYTE PTR [rbx],cl
   140008ea9:	add    BYTE PTR [rdi],bh
   140008eab:	(bad)  
   140008eac:	xor    BYTE PTR [rbp+0x78],ah
   140008eaf:	movsxd esp,DWORD PTR [rbp+0x70]
   140008eb2:	je     0x140008f1d
   140008eb4:	outs   dx,DWORD PTR ds:[rsi]
   140008eb5:	outs   dx,BYTE PTR ds:[rsi]
   140008eb6:	rex
   140008eb7:	rex push rcx
   140008eb9:	rex.RB
   140008eba:	rex.B
   140008ebb:	rex.B
   140008ebc:	rex
   140008ebd:	rex.B
   140008ebe:	rex.RB
   140008ebf:	rex.X push rcx
   140008ec1:	rex.RB
   140008ec2:	rex.X
   140008ec3:	rex.R
   140008ec4:	rex.W
   140008ec5:	rex pop rdx
   140008ec7:	add    BYTE PTR [rax+rax*1],cl
   140008eca:	(bad)  
   140008ecb:	(bad)  
   140008ecc:	xor    BYTE PTR [rbp+0x78],ah
   140008ecf:	movsxd esp,DWORD PTR [rbp+0x70]
   140008ed2:	je     0x140008f3d
   140008ed4:	outs   dx,DWORD PTR ds:[rsi]
   140008ed5:	outs   dx,BYTE PTR ds:[rsi]
   140008ed6:	rex
   140008ed7:	rex push rcx
   140008ed9:	rex.RB
   140008eda:	rex.B
   140008edb:	rex.B
   140008edc:	rex
   140008edd:	rex.B
   140008ede:	rex.RB
   140008edf:	rex.X push rsi
   140008ee1:	xor    BYTE PTR [rax+0x40],al
   140008ee4:	pop    rdx
   140008ee5:	add    BYTE PTR [rcx],dl
   140008ee7:	add    BYTE PTR [rdi],bh
   140008ee9:	(bad)  
   140008eea:	xor    DWORD PTR [rbp+0x78],esp
   140008eed:	movsxd esp,DWORD PTR [rbp+0x70]
   140008ef0:	je     0x140008f5b
   140008ef2:	outs   dx,DWORD PTR ds:[rsi]
   140008ef3:	outs   dx,BYTE PTR ds:[rsi]
   140008ef4:	rex
   140008ef5:	rex push rbp
   140008ef7:	rex.RB
   140008ef8:	rex.B
   140008ef9:	rex.B
   140008efa:	rex pop rax
   140008efc:	pop    rdx
   140008efd:	add    BYTE PTR [rcx],dh
   140008eff:	add    BYTE PTR [rdi],bh
   140008f01:	ja     0x140008f6b
   140008f03:	(bad)  
   140008f04:	je     0x140008f46
   140008f06:	gs js  0x140008f6c
   140008f09:	gs jo  0x140008f80
   140008f0c:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140008f13:	rex.X
   140008f14:	push   r8
   140008f16:	rex.RB
   140008f17:	rex.X
   140008f18:	rex.R pop rax
   140008f1a:	pop    rdx
   140008f1b:	add    BYTE PTR [rdi+0x61635f00],bh
   140008f21:	ins    BYTE PTR es:[rdi],dx
   140008f22:	ins    BYTE PTR es:[rdi],dx
   140008f23:	outs   dx,BYTE PTR ds:[rsi]
   140008f24:	gs ja  0x140008f8f
   140008f27:	add    BYTE PTR [rbx+0x0],cl
   140008f2a:	pop    rdi
   140008f2b:	rex.XB js 0x140008fa6
   140008f2e:	push   rsp
   140008f2f:	push   0x45776f72
   140008f34:	js     0x140008f99
   140008f36:	gs jo  0x140008fad
   140008f39:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   140008f40:	pop    rdi
   140008f41:	pop    rax
   140008f42:	movsxd esi,DWORD PTR [rax+0x74]
   140008f45:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008f4e:	pop    rdi
   140008f4f:	(bad)  
   140008f50:	ins    DWORD PTR es:[rdi],dx
   140008f51:	jae    0x140008fba
   140008f53:	pop    rdi
   140008f54:	gs js  0x140008fc0
   140008f57:	je     0x140008f59
   140008f59:	add    BYTE PTR [rbp+0x775f5f00],bl
   140008f5f:	addr32 gs je 0x140008fd0
   140008f63:	(bad)  
   140008f64:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008f6b:	add    BYTE PTR [rsi+0x735f5f00],cl
   140008f71:	gs je  0x140008fd3
   140008f74:	(bad)  
   140008f75:	jo     0x140008fe7
   140008f77:	pop    rdi
   140008f78:	je     0x140008ff3
   140008f7a:	jo     0x140008fe1
   140008f7c:	add    BYTE PTR [rax],al
   140008f7e:	xor    al,BYTE PTR [riz*2+0x746978]
   140008f85:	add    BYTE PTR [rsi],cl
   140008f87:	add    DWORD PTR [rdi+0x65],ebx
   140008f8a:	js     0x140008ff5
   140008f8c:	je     0x140008f8e
   140008f8e:	rol    DWORD PTR [rax],0x5f
   140008f91:	movsxd esp,DWORD PTR [rbp+0x78]
   140008f94:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140008f9c:	jae    0x140009003
   140008f9e:	je     0x140009015
   140008fa0:	jae    0x140009007
   140008fa2:	jb     0x140009011
   140008fa4:	(bad)  
   140008fa5:	je     0x14000900f
   140008fa7:	gs jb  0x14000901c
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	jge    0x140008faf
   140008fae:	pop    rdi
   140008faf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008fb6:	ins    DWORD PTR es:[rdi],dx
   140008fb7:	add    BYTE PTR [rdi+0x0],dl
   140008fba:	pop    rdi
   140008fbb:	pop    rdi
   140008fbc:	rex.XB pop r15
   140008fbe:	jae    0x140009030
   140008fc0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008fc4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008fcb:	ins    BYTE PTR es:[rdi],dx
   140008fcc:	gs jb  0x140008fcf
   140008fcf:	add    BYTE PTR [rdx+0x63775f03],al
   140008fd5:	ins    DWORD PTR es:[rdi],dx
   140008fd6:	fs ins BYTE PTR es:[rdi],dx
   140008fd8:	outs   dx,BYTE PTR ds:[rsi]
   140008fd9:	add    BYTE PTR [rdi],ah
   140008fdb:	add    DWORD PTR [rdi+0x66],ebx
   140008fde:	ins    DWORD PTR es:[rdi],dx
   140008fdf:	outs   dx,DWORD PTR ds:[rsi]
   140008fe0:	fs add BYTE PTR gs:[rax],al
   140008fe4:	rol    BYTE PTR [rax],cl
   140008fe6:	pop    rdi
   140008fe7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008fea:	ins    DWORD PTR es:[rdi],dx
   140008feb:	outs   dx,DWORD PTR ds:[rsi]
   140008fec:	fs add BYTE PTR gs:[rax],al
   140008ff0:	(bad)  
   140008ff1:	add    BYTE PTR [rdi],bh
   140008ff3:	je     0x14000905a
   140008ff5:	jb     0x140009064
   140008ff7:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008ffe:	pop    rcx
   140008fff:	pop    r8
   140009001:	pop    rax
   140009002:	pop    rdx
   140009003:	add    BYTE PTR [rbx+0x0],bl
   140009006:	pop    rdi
   140009007:	pop    rdi
   140009008:	rex.XB js 0x140009083
   14000900b:	rex.RX jb 0x14000906f
   14000900e:	ins    DWORD PTR es:[rdi],dx
   14000900f:	gs rex.W (bad) 
   140009012:	outs   dx,BYTE PTR ds:[rsi]
   140009013:	fs ins BYTE PTR es:[rdi],dx
   140009015:	gs jb  0x14000904b
   140009018:	add    BYTE PTR [rax],al
   14000901a:	ins    DWORD PTR es:[rdi],dx
   14000901b:	jae    0x140009093
   14000901d:	movsxd esi,DWORD PTR [rdx+0x74]
   140009020:	cs fs ins BYTE PTR es:[rdi],dx
   140009023:	ins    BYTE PTR es:[rdi],dx
   140009024:	add    BYTE PTR [rax],al
   140009026:	out    0x1,al
   140009028:	pop    rdi
   140009029:	ins    BYTE PTR es:[rdi],dx
   14000902a:	outs   dx,DWORD PTR ds:[rsi]
   14000902b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000902e:	add    ebx,DWORD PTR [r15+0x75]
   140009032:	outs   dx,BYTE PTR ds:[rsi]
   140009033:	ins    BYTE PTR es:[rdi],dx
   140009034:	outs   dx,DWORD PTR ds:[rsi]
   140009035:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009038:	jnp    0x14000903a
   14000903a:	pop    rdi
   14000903b:	pop    rdi
   14000903c:	fs ins BYTE PTR es:[rdi],dx
   14000903e:	ins    BYTE PTR es:[rdi],dx
   14000903f:	outs   dx,DWORD PTR ds:[rsi]
   140009040:	outs   dx,BYTE PTR ds:[rsi]
   140009041:	gs js  0x1400090ad
   140009044:	je     0x140009046
   140009046:	nop
   140009047:	add    bl,BYTE PTR [rdi+0x6f]
   14000904a:	outs   dx,BYTE PTR ds:[rsi]
   14000904b:	gs js  0x1400090b7
   14000904e:	je     0x140009050
   140009050:	adc    al,BYTE PTR [rax]
   140009052:	(bad)  
   140009053:	(bad)  
   140009054:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   140009058:	gs pop rdi
   14000905a:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   140009061:	rex.RB
   140009062:	rex.B
   140009063:	rex.B
   140009064:	rex pop rax
   140009066:	pop    rdx
   140009067:	add    BYTE PTR [rbx],ch
   140009069:	add    BYTE PTR [rbx+0x6f],al
   14000906c:	rex.XB jb 0x1400090d4
   14000906f:	(bad)  
   140009070:	je     0x1400090d7
   140009072:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009074:	jae    0x1400090ea
   140009076:	(bad)  
   140009077:	outs   dx,BYTE PTR ds:[rsi]
   140009078:	movsxd esp,DWORD PTR [rbp+0x0]
   14000907b:	add    BYTE PTR [rbx],ah
   14000907d:	add    BYTE PTR [rbx+0x6f],al
   140009080:	rex.B ins BYTE PTR es:[rdi],dx
   140009082:	ins    BYTE PTR es:[rdi],dx
   140009083:	outs   dx,DWORD PTR ds:[rsi]
   140009084:	ja     0x1400090d9
   140009086:	gs je  0x1400090cf
   140009089:	outs   dx,DWORD PTR ds:[rsi]
   14000908a:	jb     0x1400090f1
   14000908c:	addr32 jb 0x1400090fe
   14000908f:	jne    0x1400090ff
   140009091:	fs push rdi
   140009093:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000909a:	(bad)  
   14000909b:	add    BYTE PTR [rbx+0x6f],al
   14000909e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400090a0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400090a8:	rex.RB js 0x1400090ab
   1400090ab:	add    BYTE PTR [rcx],ch
   1400090ad:	add    BYTE PTR [rbx+0x6f],al
   1400090b0:	rex.XB jb 0x140009118
   1400090b3:	(bad)  
   1400090b4:	je     0x14000911b
   1400090b6:	rex.RX jb 0x14000911e
   1400090b9:	gs push rsp
   1400090bb:	push   0x64616572
   1400090c0:	gs fs rex.WRB (bad) 
   1400090c4:	jb     0x140009139
   1400090c6:	push   0x72656c61
   1400090cb:	add    BYTE PTR [rdi+0x6c],ch
   1400090ce:	xor    esi,DWORD PTR gs:[rdx]
   1400090d1:	cs fs ins BYTE PTR es:[rdi],dx
   1400090d4:	ins    BYTE PTR es:[rdi],dx
   1400090d5:	add    BYTE PTR [rdi+0x4c],cl
   1400090d8:	rex.RB
   1400090d9:	push   r13
   1400090db:	push   rsp
   1400090dc:	xor    esi,DWORD PTR [rdx]
   1400090de:	cs fs ins BYTE PTR es:[rdi],dx
   1400090e1:	ins    BYTE PTR es:[rdi],dx
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	cmp    al,0x0
   1400090e6:	rex.RB je 0x140009160
   1400090e9:	rex.RB jbe 0x140009151
   1400090ec:	outs   dx,BYTE PTR ds:[rsi]
   1400090ed:	je     0x140009146
   1400090ef:	jb     0x14000915a
   1400090f1:	je     0x140009158
   1400090f3:	add    BYTE PTR [rcx],bh
   1400090f5:	add    BYTE PTR [rbp+0x74],al
   1400090f8:	ja     0x14000913f
   1400090fa:	jbe    0x140009161
   1400090fc:	outs   dx,BYTE PTR ds:[rsi]
   1400090fd:	je     0x140009151
   1400090ff:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   140009108:	cmp    eax,DWORD PTR [rax]
   14000910a:	rex.RB je 0x140009184
   14000910d:	rex.RB jbe 0x140009175
   140009110:	outs   dx,BYTE PTR ds:[rsi]
   140009111:	je     0x140009168
   140009113:	outs   dx,BYTE PTR ds:[rsi]
   140009114:	jb     0x14000917b
   140009116:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14000911e:	xor    al,0x6
   140009120:	push   rdi
   140009121:	imul   ebp,DWORD PTR [rsi+0x53],0x65536d71
   140009128:	je     0x14000916e
   14000912a:	push   rdi
   14000912b:	rex.WRXB push r10
   14000912d:	add    BYTE PTR [rax],r8b
   140009130:	cmp    al,BYTE PTR [rsi]
   140009132:	push   rdi
   140009133:	imul   ebp,DWORD PTR [rsi+0x53],0x74536d71
   14000913a:	(bad)  
   14000913b:	jb     0x1400091b1
   14000913d:	push   rbx
   14000913e:	gs jae 0x1400091b4
   140009141:	imul   ebp,DWORD PTR [rdi+0x6e],0x62b0000
   140009148:	push   rdi
   140009149:	imul   ebp,DWORD PTR [rsi+0x53],0x6e456d71
   140009150:	fs push rbx
   140009152:	gs jae 0x1400091c8
   140009155:	imul   ebp,DWORD PTR [rdi+0x6e],0x6390000
   14000915c:	push   rdi
   14000915d:	imul   ebp,DWORD PTR [rsi+0x53],0x65536d71
   140009164:	je     0x1400091b9
   140009166:	je     0x1400091da
   140009168:	imul   ebp,DWORD PTR [rsi+0x67],0x5202c600
   14000916f:	je     0x1400091dd
   140009171:	rex.XB (bad) 
   140009173:	jo     0x1400091e9
   140009175:	jne    0x1400091e9
   140009177:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000917a:	outs   dx,BYTE PTR ds:[rsi]
   14000917b:	je     0x1400091e2
   14000917d:	js     0x1400091f3
   14000917f:	add    BYTE PTR [rdi+0x4],dh
   140009182:	push   rdx
   140009183:	je     0x1400091f1
   140009185:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009187:	outs   dx,DWORD PTR ds:[rsi]
   140009188:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000918c:	jne    0x1400091fc
   14000918e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009192:	outs   dx,BYTE PTR ds:[rsi]
   140009193:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009195:	je     0x140009209
   140009197:	jns    0x140009199
   140009199:	add    BYTE PTR [rbx+0x6c745205],cl
   14000919f:	push   rsi
   1400091a0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400091a7:	outs   dx,BYTE PTR ds:[rsi]
   1400091a8:	ja     0x140009213
   1400091aa:	outs   dx,BYTE PTR ds:[rsi]
   1400091ab:	add    BYTE PTR fs:[rax],al
   1400091ae:	outs   dx,BYTE PTR ds:[rsi]
   1400091af:	je     0x140009215
   1400091b1:	ins    BYTE PTR es:[rdi],dx
   1400091b2:	ins    BYTE PTR es:[rdi],dx
   1400091b3:	cs fs ins BYTE PTR es:[rdi],dx
   1400091b6:	ins    BYTE PTR es:[rdi],dx
   1400091b7:	add    BYTE PTR [rip+0x74654700],bl        # 0x1b465d8bd
   1400091bd:	push   rbp
   1400091be:	jae    0x140009225
   1400091c0:	jb     0x140009210
   1400091c2:	(bad)  
   1400091c3:	ins    DWORD PTR es:[rdi],dx
   1400091c4:	gs rex.RB js 0x14000921f
   1400091c8:	add    BYTE PTR [rax],al
   1400091ca:	push   rbx
   1400091cb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400091cf:	xor    esi,DWORD PTR [rdx]
   1400091d1:	cs fs ins BYTE PTR es:[rdi],dx
   1400091d4:	ins    BYTE PTR es:[rdi],dx
   1400091d5:	add    BYTE PTR [rdx],ch
   1400091d7:	add    BYTE PTR [rdi+0x54],dl
   1400091da:	push   rbx
   1400091db:	push   rdx
   1400091dc:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537265
   1400091e5:	jae    0x14000925a
   1400091e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x69746f4e
   1400091ee:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400091f4:	outs   dx,DWORD PTR ds:[rsi]
   1400091f5:	outs   dx,BYTE PTR ds:[rsi]
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	cmp    al,BYTE PTR [rax]
   1400091fa:	push   rdi
   1400091fb:	push   rsp
   1400091fc:	push   rbx
   1400091fd:	push   rbp
   1400091fe:	outs   dx,BYTE PTR ds:[rsi]
   1400091ff:	push   rdx
   140009200:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537265
   140009209:	jae    0x14000927e
   14000920b:	imul   ebp,DWORD PTR [rdi+0x6e],0x69746f4e
   140009212:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140009218:	outs   dx,DWORD PTR ds:[rsi]
   140009219:	outs   dx,BYTE PTR ds:[rsi]
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	push   rdi
   14000921d:	push   rsp
   14000921e:	push   rbx
   14000921f:	push   r8
   140009221:	xor    rsi,QWORD PTR [r10]
   140009224:	cs fs ins BYTE PTR es:[rdi],dx
   140009227:	ins    BYTE PTR es:[rdi],dx
   140009228:	add    BYTE PTR [rax],al
   14000922a:	add    DWORD PTR [rax],eax
   14000922c:	push   rdx
   14000922d:	outs   dx,DWORD PTR ds:[rsi]
   14000922e:	rex.RXB
   14000922f:	gs je  0x140009273
   140009232:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140009236:	(bad)  
   140009237:	je     0x1400092a2
   140009239:	outs   dx,DWORD PTR ds:[rsi]
   14000923a:	outs   dx,BYTE PTR ds:[rsi]
   14000923b:	rex.RX (bad) 
   14000923d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140009241:	jns    0x140009243
   140009243:	add    BYTE PTR [rcx+0x70],ah
   140009246:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e05bd
   140009250:	outs   dx,DWORD PTR ds:[rsi]
   140009251:	jb     0x1400092b8
   140009253:	sub    eax,0x726e6977
   140009258:	je     0x140009287
   14000925a:	ins    BYTE PTR es:[rdi],dx
   14000925b:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30bf92
   140009261:	fs ins BYTE PTR es:[rdi],dx
   140009263:	ins    BYTE PTR es:[rdi],dx
   140009264:	add    BYTE PTR [rax],al
   140009266:	or     al,BYTE PTR [rax]
   140009268:	push   rdi
   140009269:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   140009270:	jb     0x1400092d7
   140009272:	(bad)  
   140009273:	je     0x1400092da
   140009275:	push   rbx
   140009276:	je     0x1400092ea
   140009278:	imul   ebp,DWORD PTR [rsi+0x67],0x57000c00
   14000927f:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140009286:	gs ins BYTE PTR es:[rdi],dx
   140009288:	gs je  0x1400092f0
   14000928b:	push   rbx
   14000928c:	je     0x140009300
   14000928e:	imul   ebp,DWORD PTR [rsi+0x67],0x69706100
   140009295:	sub    eax,0x772d736d
   14000929a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400092a1:	sub    eax,0x726e6977
   1400092a6:	je     0x1400092d5
   1400092a8:	jae    0x14000931e
   1400092aa:	jb     0x140009315
   1400092ac:	outs   dx,BYTE PTR ds:[rsi]
   1400092ad:	addr32 sub eax,0x312d316c
   1400092b3:	sub    eax,0x6c642e30
   1400092b8:	ins    BYTE PTR es:[rdi],dx
   1400092b9:	add    BYTE PTR [rax],bl
   1400092bb:	add    DWORD PTR [rbp+0x71],eax
   1400092be:	jne    0x140009321
   1400092c0:	ins    BYTE PTR es:[rdi],dx
   1400092c1:	push   rbx
   1400092c2:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6552027b
   1400092ca:	addr32 rex.RXB
   1400092cc:	gs je  0x140009325
   1400092cf:	(bad)  
   1400092d0:	ins    BYTE PTR es:[rdi],dx
   1400092d1:	jne    0x140009338
   1400092d3:	push   rdi
   1400092d4:	add    BYTE PTR [rax],al
   1400092d6:	mov    DWORD PTR [rdx],0x53746547
   1400092dc:	je     0x14000933f
   1400092de:	jb     0x140009354
   1400092e0:	jne    0x140009352
   1400092e2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400092e4:	outs   dx,WORD PTR ds:[rsi]
   1400092e6:	push   rdi
   1400092e7:	add    BYTE PTR [rsi+0x5],bl
   1400092ea:	push   rbx
   1400092eb:	gs je  0x140009343
   1400092ee:	outs   dx,BYTE PTR ds:[rsi]
   1400092ef:	push   0x6c646e61
   1400092f4:	gs fs rex.RB js 0x14000935c
   1400092f9:	gs jo  0x140009370
   1400092fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009303:	gs jb  0x140009306
   140009306:	outs   dx,BYTE PTR ds:[rsi]
   140009307:	add    al,BYTE PTR [rdi+0x65]
   14000930a:	je     0x140009359
   14000930c:	outs   dx,DWORD PTR ds:[rsi]
   14000930d:	fs jne 0x14000937c
   140009310:	gs rex.W (bad) 
   140009313:	outs   dx,BYTE PTR ds:[rsi]
   140009314:	fs ins BYTE PTR es:[rdi],dx
   140009316:	gs push rdi
   140009318:	add    BYTE PTR [rax],al
   14000931a:	ss add al,0x51
   14000931d:	jne    0x140009384
   14000931f:	jb     0x14000939a
   140009321:	push   rax
   140009322:	gs jb  0x14000938b
   140009325:	outs   dx,DWORD PTR ds:[rsi]
   140009326:	jb     0x140009395
   140009328:	(bad)  
   140009329:	outs   dx,BYTE PTR ds:[rsi]
   14000932a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000932d:	outs   dx,DWORD PTR ds:[rsi]
   14000932e:	jne    0x14000939e
   140009330:	je     0x140009397
   140009332:	jb     0x140009334
   140009334:	adc    eax,0x74654702
   140009339:	rex.XB jne 0x1400093ae
   14000933c:	jb     0x1400093a3
   14000933e:	outs   dx,BYTE PTR ds:[rsi]
   14000933f:	je     0x140009395
   140009341:	push   0x64616572
   140009346:	rex.WB
   140009347:	add    BYTE PTR fs:[rax],al
   14000934a:	loopne 0x14000934e
   14000934c:	rex.RXB
   14000934d:	gs je  0x1400093a3
   140009350:	jns    0x1400093c5
   140009352:	je     0x1400093b9
   140009354:	ins    DWORD PTR es:[rdi],dx
   140009355:	push   rsp
   140009356:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000935d:	ins    BYTE PTR es:[rdi],dx
   14000935e:	gs push rsp
   140009360:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140009367:	gs je  0x1400093be
   14000936a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009371:	je     0x140009373
   140009373:	add    BYTE PTR [rsi+0x686e5505],bl
   140009379:	(bad)  
   14000937a:	outs   dx,BYTE PTR ds:[rsi]
   14000937b:	fs ins BYTE PTR es:[rdi],dx
   14000937d:	gs fs rex.RB js 0x1400093e5
   140009382:	gs jo  0x1400093f9
   140009385:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000938c:	gs jb  0x14000938f
   14000938f:	add    BYTE PTR [rbp+rax*1+0x54],bh
   140009393:	gs jb  0x140009403
   140009396:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000939d:	outs   dx,DWORD PTR ds:[rsi]
   14000939e:	movsxd esp,DWORD PTR [rbp+0x73]
   1400093a1:	jae    0x1400093a3
   1400093a3:	add    BYTE PTR [rbx],ah
   1400093a5:	add    eax,0x4c746553
   1400093aa:	(bad)  
   1400093ab:	jae    0x140009421
   1400093ad:	rex.RB jb 0x140009422
   1400093b0:	outs   dx,DWORD PTR ds:[rsi]
   1400093b1:	jb     0x1400093b3
   1400093b3:	add    BYTE PTR [rbp+0x636f4c03],dh
   1400093b9:	(bad)  
   1400093ba:	ins    BYTE PTR es:[rdi],dx
   1400093bb:	rex.B ins BYTE PTR es:[rdi],dx
   1400093bd:	ins    BYTE PTR es:[rdi],dx
   1400093be:	outs   dx,DWORD PTR ds:[rsi]
   1400093bf:	movsxd eax,DWORD PTR [rax]
   1400093c1:	add    BYTE PTR [rcx+0x636f4c03],bh
   1400093c7:	(bad)  
   1400093c8:	ins    BYTE PTR es:[rdi],dx
   1400093c9:	rex.RX jb 0x140009431
   1400093cc:	add    BYTE PTR gs:[rcx+0x61657204],ch
   1400093d3:	ins    BYTE PTR es:[rdi],dx
   1400093d4:	ins    BYTE PTR es:[rdi],dx
   1400093d5:	outs   dx,DWORD PTR ds:[rsi]
   1400093d6:	movsxd eax,DWORD PTR [rax]
   1400093d8:	(bad)  
   1400093d9:	add    BYTE PTR [rbx+0x4c],dl
   1400093dc:	rex.RXB
   1400093dd:	gs je  0x140009437
   1400093e0:	imul   ebp,DWORD PTR [rsi+0x64],0x4973776f
   1400093e7:	outs   dx,BYTE PTR ds:[rsi]
   1400093e8:	outs   dx,WORD PTR ds:[rsi]
   1400093ea:	jb     0x140009459
   1400093ec:	(bad)  
   1400093ed:	je     0x140009458
   1400093ef:	outs   dx,DWORD PTR ds:[rsi]
   1400093f0:	outs   dx,BYTE PTR ds:[rsi]
   1400093f1:	rex.R push rdi
   1400093f3:	rex.WRXB push r10
   1400093f5:	add    BYTE PTR [rax],r8b
   1400093f8:	push   rbx
   1400093f9:	rex.WR
   1400093fa:	rex.XB
   1400093fb:	cs fs ins BYTE PTR es:[rdi],dx
   1400093fe:	ins    BYTE PTR es:[rdi],dx
   1400093ff:	add    BYTE PTR [rsi+0x6d656d04],dl
   140009405:	jae    0x14000946c
   140009407:	je     0x140009409
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	loopne 0x14000a067
   14000a002:	add    BYTE PTR [rax+0x1],al
	...
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rcx],al
   14000a011:	add    BYTE PTR [rax],al
   14000a013:	add    BYTE PTR [rax],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rdx],dh
   14000a019:	movabs ds:0x5dcd00002b992ddf,al
   14000a022:	and    dl,dl
   14000a024:	data16 (bad) 
   14000a026:	(bad)  
   14000a027:	inc    DWORD PTR [rax]
   14000a029:	add    BYTE PTR [rax],al
   14000a02b:	add    BYTE PTR [rax],al
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    BYTE PTR [rax],dh
   14000a031:	data16 add BYTE PTR [rax+0x1],al
	...
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	add    BYTE PTR [rsi],ch
   14000a041:	(bad)  
   14000a042:	push   r14
   14000a044:	gs js  0x14000a0aa
   14000a047:	gs jo  0x14000a0be
   14000a04a:	imul   ebp,DWORD PTR [rdi+0x6e],0x30004040
   14000a051:	data16 add BYTE PTR [rax+0x1],al
	...
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rsi],ch
   14000a061:	(bad)  
   14000a062:	push   r14
   14000a064:	(bad)
   14000a069:	ins    BYTE PTR es:[rdi],dx
   14000a06a:	ins    BYTE PTR es:[rdi],dx
   14000a06b:	outs   dx,DWORD PTR ds:[rsi]
   14000a06c:	movsxd eax,DWORD PTR [rax+0x73]
   14000a06f:	je     0x14000a0d5
   14000a071:	rex
   14000a072:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	add    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	xor    edx,DWORD PTR [rax]
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	and    BYTE PTR [rdx+0x0],bh
   14000b00b:	add    BYTE PTR [rax+0x10],cl
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	jle    0x14000b022
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	lock js 0x14000b017
   14000b017:	add    BYTE PTR [rax-0x62fffff0],dl
   14000b01d:	adc    DWORD PTR [rax],eax
   14000b01f:	add    ah,bh
   14000b021:	js     0x14000b023
   14000b023:	add    BYTE PTR [rax+0x46000011],dh
   14000b029:	adc    al,BYTE PTR [rax]
   14000b02b:	add    BYTE PTR [rcx+rdi*2],dl
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	jo     0x14000b044
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	fist   WORD PTR [rdx]
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	adc    al,0x79
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	clc    
   14000b03d:	adc    al,BYTE PTR [rax]
   14000b03f:	add    ch,dh
   14000b041:	adc    eax,DWORD PTR [rax]
   14000b043:	add    BYTE PTR [rcx+rdi*2],ah
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	add    BYTE PTR [rax+rax*1],dl
   14000b04b:	add    BYTE PTR [rax+0x14],dl
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	mov    eax,0x58000079
   14000b055:	adc    al,0x0
   14000b057:	add    BYTE PTR [rbp+0x14],dh
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	add    BYTE PTR [rdx+0x0],bh
   14000b05f:	add    BYTE PTR [rsp+rdx*1+0x0],bh
   14000b063:	add    BYTE PTR [rbx+0x20000014],dl
   14000b069:	jp     0x14000b06b
   14000b06b:	add    BYTE PTR [rsp+rdx*1+0x14b20000],bl
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	and    BYTE PTR [rdx+0x0],bh
   14000b077:	add    al,al
   14000b079:	adc    al,0x0
   14000b07b:	add    al,dh
   14000b07d:	adc    al,0x0
   14000b07f:	add    BYTE PTR [rax],ch
   14000b081:	jp     0x14000b083
   14000b083:	add    BYTE PTR [rax],dl
   14000b085:	adc    eax,0x15400000
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	rex.W jp 0x14000b08f
   14000b08f:	add    BYTE PTR [rax+0x15],ah
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	(bad)  
   14000b095:	adc    eax,0x7a480000
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	movabs al,ds:0x50000015f7000015
   14000b0a5:	jp     0x14000b0a7
   14000b0a7:	add    BYTE PTR [rax],al
   14000b0a9:	(bad)  
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	push   rdi
   14000b0ad:	(bad)  
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	push   rax
   14000b0b1:	jp     0x14000b0b3
   14000b0b3:	add    BYTE PTR [rax+0x6000016],ah
   14000b0b9:	(bad)  
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	pop    rax
   14000b0bd:	jp     0x14000b0bf
   14000b0bf:	add    BYTE PTR [rax],dl
   14000b0c1:	(bad)  
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	rex.W (bad) 
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	rex.W jp 0x14000b0cb
   14000b0cb:	add    BYTE PTR [rax+0x17],dl
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	or     al,0x18
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	(bad)  
   14000b0d5:	jp     0x14000b0d7
   14000b0d7:	add    BYTE PTR [rax],ah
   14000b0d9:	sbb    BYTE PTR [rax],al
   14000b0db:	add    BYTE PTR [rax+0x18],ah
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	lock js 0x14000b0e3
   14000b0e3:	add    BYTE PTR [rax+0x18],dh
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	in     al,0x18
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	enter  0x7a,0x0
   14000b0f0:	add    BYTE PTR [rcx],bl
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	(bad)  
   14000b0f5:	sbb    eax,0x7ae00000
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	push   0xffffffffa600001d
   14000b101:	(bad)  
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	mov    eax,0xac00007b
   14000b109:	(bad)  
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	jmp    0x14000b12d
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	rex jl 0x14000b113
   14000b113:	add    BYTE PTR [rax],al
   14000b115:	and    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rsi+0x14000020],dl
   14000b11d:	jns    0x14000b11f
   14000b11f:	add    BYTE PTR [rax+0xf000020],ah
   14000b125:	and    DWORD PTR [rax],eax
   14000b127:	add    BYTE PTR [rcx+rdi*2],dl
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	and    BYTE PTR [rcx],ah
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	mov    dh,0x21
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	adc    al,0x79
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	shl    BYTE PTR [rcx],0x0
   14000b13b:	add    BYTE PTR [rdi],ch
   14000b13d:	and    al,BYTE PTR [rax]
   14000b13f:	add    BYTE PTR [rcx+rdi*2],dl
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	cmp    BYTE PTR [rdx],ah
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	adc    eax,0x98000023
   14000b14d:	jl     0x14000b14f
   14000b14f:	add    BYTE PTR [rbx+riz*1],bl
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	(bad)  
   14000b155:	and    al,0x0
   14000b157:	add    BYTE PTR [rax],cl
   14000b159:	jge    0x14000b15b
   14000b15b:	add    BYTE PTR [rax],dl
   14000b15d:	and    al,0x0
   14000b15f:	add    BYTE PTR [rax+0x24],al
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	mov    al,0x7d
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	rex.W and al,0x0
   14000b16b:	add    BYTE PTR [rdi-0x27ffffdc],bh
   14000b171:	jge    0x14000b173
   14000b173:	add    al,cl
   14000b175:	and    al,0x0
   14000b177:	add    dl,bl
   14000b179:	add    BYTE PTR es:[rax],al
   14000b17c:	call   0x17000b1fe
   14000b181:	(bad)  
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	push   0x27
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	rex.W jp 0x14000b18b
   14000b18b:	add    BYTE PTR [rax-0x3fffffd9],dl
   14000b191:	(bad)  
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	rex.W jp 0x14000b197
   14000b197:	add    al,dl
   14000b199:	(bad)  
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	add    BYTE PTR [rax],ch
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	rex.W jp 0x14000b1a3
   14000b1a3:	add    BYTE PTR [rax+0x29],al
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	cvtpi2ps xmm0,QWORD PTR [rax]
   14000b1ab:	add    BYTE PTR [rax+0x4000007e],al
   14000b1b1:	sub    al,BYTE PTR [rax]
   14000b1b3:	add    BYTE PTR [rdx+0x5000002a],cl
   14000b1b9:	jp     0x14000b1bb
   14000b1bb:	add    BYTE PTR [rax],ah
   14000b1bd:	sub    al,0x0
   14000b1bf:	add    BYTE PTR [rsi+0x1400002c],dh
   14000b1c5:	jns    0x14000b1c7
   14000b1c7:	add    al,al
   14000b1c9:	sub    al,0x0
   14000b1cb:	add    BYTE PTR [rdx],dh
   14000b1cd:	sub    eax,0x79140000
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	cmp    BYTE PTR [rip+0x2e150000],ch        # 0x16e15b1da
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	call   0x15c00b25f
   14000b1e1:	add    BYTE PTR cs:[rax],al
   14000b1e4:	xor    eax,0x3800002f
   14000b1e9:	jg     0x14000b1eb
   14000b1eb:	add    BYTE PTR [rax+0x2f],al
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	(bad)  
   14000b1f1:	(bad)  
   14000b1f2:	add    BYTE PTR [rax],al
   14000b1f4:	push   rax
   14000b1f5:	jg     0x14000b1f7
   14000b1f7:	add    al,dl
   14000b1f9:	(bad)  
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	adc    DWORD PTR [rcx],esi
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	fs jg  0x14000b203
   14000b203:	add    BYTE PTR [rax],bl
   14000b205:	xor    DWORD PTR [rax],eax
   14000b207:	add    BYTE PTR [rdx+rsi*1+0x0],dl
   14000b20b:	add    BYTE PTR [rax+0x7f],bh
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	(bad)  
   14000b211:	xor    al,BYTE PTR [rax]
   14000b213:	add    BYTE PTR [rbx+0x33],cl
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	adc    al,0x79
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	xor    BYTE PTR [rbx],0x0
   14000b21f:	add    bh,ch
   14000b221:	xor    eax,DWORD PTR [rax]
   14000b223:	add    BYTE PTR [rcx+rdi*2],dl
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	clc    
   14000b229:	xor    eax,DWORD PTR [rax]
   14000b22b:	add    BYTE PTR [rbp+0x34],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	loopne 0x14000b2b1
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	rex.WR xor al,0x0
   14000b237:	add    BYTE PTR [rdx+0x28000034],dl
   14000b23d:	add    BYTE PTR [rax],0x0
   14000b240:	cwde   
   14000b241:	xor    al,0x0
   14000b243:	add    dh,bl
   14000b245:	xor    al,0x0
   14000b247:	add    BYTE PTR [rax-0x80],bl
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	in     al,0x34
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	xor    BYTE PTR [rip+0xffffffff80800000],0x0        # 0xc080b257
   14000b257:	add    BYTE PTR [rax-0x54ffffcb],cl
   14000b25d:	add    BYTE PTR ss:[rax],al
   14000b260:	enter  0x80,0x0
   14000b264:	shl    BYTE PTR [rsi],0x0
   14000b267:	add    BYTE PTR [rip+0x50000037],dh        # 0x19000b2a4
   14000b26d:	add    DWORD PTR [rax],0x373c00
   14000b273:	add    BYTE PTR [rcx-0x4fffffc9],cl
   14000b279:	add    DWORD PTR [rax],0x379000
   14000b27f:	add    BYTE PTR [rip+0x38],al        # 0x14000b2bd
   14000b285:	(bad)  
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	adc    BYTE PTR [rax],bh
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	(bad)  
   14000b28d:	cmp    BYTE PTR [rax],al
   14000b28f:	add    BYTE PTR [rax],bh
   14000b291:	(bad)  
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	movabs al,ds:0x380000392a000038
   14000b29d:	(bad)  
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	xor    BYTE PTR [rcx],bh
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	mov    eax,0x38000039
   14000b2a9:	(bad)  
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	sar    BYTE PTR [rcx],0x0
   14000b2af:	add    BYTE PTR [rbx],ch
   14000b2b1:	cmp    al,BYTE PTR [rax]
   14000b2b3:	add    BYTE PTR [rax-0x7e],dl
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	cmp    al,BYTE PTR [rax]
   14000b2bb:	add    BYTE PTR [rdx+0x1400003a],cl
   14000b2c1:	jns    0x14000b2c3
   14000b2c3:	add    BYTE PTR [rax-0x27ffffc6],dl
   14000b2c9:	cmp    al,BYTE PTR [rax]
   14000b2cb:	add    BYTE PTR [rcx+rdi*2],dl
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	loopne 0x14000b30c
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	push   rbp
   14000b2d5:	cmp    eax,DWORD PTR [rax]
   14000b2d7:	add    BYTE PTR [rax-0x7e],ch
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	pop    rsp
   14000b2dd:	cmp    eax,DWORD PTR [rax]
   14000b2df:	add    BYTE PTR [rsi],dl
   14000b2e1:	add    BYTE PTR ds:[rax],al
   14000b2e4:	js     0x14000b268
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	sbb    al,0x3e
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	mov    dh,0x3e
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	rol    BYTE PTR [rdx+0x3ebc0000],1
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	(bad)  
   14000b2f9:	add    BYTE PTR [rax],al
   14000b2fc:	loopne 0x14000b280
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	sbb    al,0x40
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	add    BYTE PTR [rdx+0x0],al
   14000b307:	add    al,dh
   14000b309:	(bad)  
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	or     BYTE PTR [rdx+0x0],al
   14000b30f:	add    BYTE PTR [rdx+0x42],ch
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	adc    al,0x83
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	jo     0x14000b35c
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax+rax*1+0x0],al
   14000b320:	and    BYTE PTR [rbx+0x44080000],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	rex.RX
   14000b329:	add    BYTE PTR [r8],r8b
   14000b32c:	rex.R add DWORD PTR [rax],0x0
   14000b330:	rex.WR
   14000b331:	add    BYTE PTR [r8],r8b
   14000b334:	ins    DWORD PTR es:[rdi],dx
   14000b335:	add    BYTE PTR [r8],r8b
   14000b338:	push   rax
   14000b339:	add    DWORD PTR [rax],0x0
   14000b33c:	je     0x14000b383
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	movabs ds:0xc000008350000045,al
   14000b349:	add    BYTE PTR [r8],r8b
   14000b34c:	cmp    DWORD PTR [rsi+0x0],eax
   14000b34f:	add    BYTE PTR [rax+0x7a],dl
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	push   rax
   14000b355:	rex.RX add BYTE PTR [rax],r8b
   14000b358:	mov    al,BYTE PTR [rsi+0x0]
   14000b35b:	add    al,dh
   14000b35d:	js     0x14000b35f
   14000b35f:	add    BYTE PTR [rax-0x4cffffba],dl
   14000b365:	rex.RX add BYTE PTR [rax],r8b
   14000b368:	pop    rax
   14000b369:	add    DWORD PTR [rax],0x0
   14000b36c:	rol    BYTE PTR [rsi+0x0],0x0
   14000b370:	pop    QWORD PTR [rdi+0x0]
   14000b373:	add    BYTE PTR [rax],ah
   14000b375:	jp     0x14000b377
   14000b377:	add    BYTE PTR [rax-0x16ffffb9],ah
   14000b37d:	rex.RXB add BYTE PTR [r8],r8b
   14000b380:	(bad)  
   14000b381:	add    DWORD PTR [rax],0x0
   14000b384:	lock rex.RXB add BYTE PTR [r8],r8b
   14000b388:	(bad)  
   14000b389:	rex.WX add BYTE PTR [rax],al
   14000b38c:	push   0x70000083
   14000b391:	rex.WX add BYTE PTR [rax],al
   14000b394:	(bad)  
   14000b395:	rex.WX add BYTE PTR [rax],al
   14000b398:	and    BYTE PTR [rdx+0x0],bh
   14000b39b:	add    BYTE PTR [rax-0x41ffffb6],ah
   14000b3a1:	rex.WX add BYTE PTR [rax],al
   14000b3a4:	movabs al,ds:0xe300004ac4000083
   14000b3ad:	rex.WX add BYTE PTR [rax],al
   14000b3b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b3b1:	add    DWORD PTR [rax],0x0
   14000b3b4:	cld    
   14000b3b5:	rex.WX add BYTE PTR [rax],al
   14000b3b8:	(bad)  
   14000b3b9:	rex.WXB add BYTE PTR [r8],al
   14000b3bc:	xor    BYTE PTR [rax+rax*1+0x4ba000],al
   14000b3c3:	add    BYTE PTR [rdi+0x2000004b],dh
   14000b3c9:	jp     0x14000b3cb
   14000b3cb:	add    BYTE PTR [rax],ah
   14000b3cd:	rex.WR add BYTE PTR [rax],r8b
   14000b3d0:	push   rax
   14000b3d1:	rex.WR add BYTE PTR [rax],r8b
   14000b3d4:	lock js 0x14000b3d7
   14000b3d7:	add    BYTE PTR [rax+0x4c],ah
   14000b3da:	add    BYTE PTR [rax],al
   14000b3dc:	cdq    
   14000b3dd:	rex.WR add BYTE PTR [rax],r8b
   14000b3e0:	and    BYTE PTR [rdx+0x0],bh
   14000b3e3:	add    BYTE PTR [rax-0x47ffffb4],ah
   14000b3e9:	rex.WR add BYTE PTR [rax],r8b
   14000b3ec:	and    BYTE PTR [rdx+0x0],bh
   14000b3ef:	add    ah,cl
   14000b3f1:	rex.WR add BYTE PTR [rax],r8b
   14000b3f4:	and    BYTE PTR [rbp+0x0],cl
   14000b3f7:	add    BYTE PTR [rsp+rax*4+0x0],dl
   14000b3fb:	add    BYTE PTR [rax],ch
   14000b3fd:	rex.WRB add BYTE PTR [r8],r8b
   14000b400:	ins    DWORD PTR es:[rdi],dx
   14000b401:	rex.WRB add BYTE PTR [r8],r8b
   14000b404:	push   rax
   14000b405:	add    DWORD PTR [rax],0x0
   14000b408:	loopne 0x14000b457
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	sub    eax,0x7400004e
   14000b411:	test   BYTE PTR [rax],al
   14000b413:	add    BYTE PTR [rsi+rcx*2+0x0],dh
   14000b417:	add    BYTE PTR [rdi+rcx*2+0x0],al
   14000b41b:	add    BYTE PTR [rax+0x64000084],bl
   14000b421:	rex.WRXB add BYTE PTR [r8],r8b
   14000b424:	cwde   
   14000b425:	rex.WRXB add BYTE PTR [r8],r8b
   14000b428:	push   rax
   14000b429:	add    DWORD PTR [rax],0x0
   14000b42c:	movabs al,ds:0xa40000511100004f
   14000b435:	test   BYTE PTR [rax],al
   14000b437:	add    BYTE PTR [rax+0x51],bl
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	jne    0x14000b48f
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	and    BYTE PTR [rdx+0x0],bh
   14000b443:	add    BYTE PTR [rcx+rdx*2+0x0],bh
   14000b447:	add    bh,bl
   14000b449:	push   rcx
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	push   rax
   14000b44d:	add    DWORD PTR [rax],0x0
   14000b450:	call   0x1b700b4a6
   14000b455:	push   rdx
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	push   rax
   14000b459:	(bad)  
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	movabs al,ds:0xb0000052a2000052
   14000b465:	test   BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rsi-0x23ffffae],dh
   14000b46d:	push   rdx
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	mov    al,0x79
   14000b472:	add    BYTE PTR [rax],al
   14000b474:	call   0x14400b4cb
   14000b479:	push   rbx
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	mov    al,0x79
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	fs push rsp
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	mov    dl,BYTE PTR [rax+rax*1+0x0]
   14000b488:	mov    al,0x79
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	mov    ah,0x54
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	ficom  DWORD PTR [rax+rax*1+0x0]
   14000b494:	mov    al,0x79
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	out    0x54,al
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	add    dl,BYTE PTR [rbp+0x0]
   14000b49f:	add    BYTE PTR [rax+0x5a000079],dh
   14000b4a5:	push   rsi
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	adc    BYTE PTR [rsi+0x0],0x0
   14000b4ac:	mov    al,0x79
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	(bad)  
   14000b4b1:	push   rdi
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	movabs al,ds:0xa6000079b0000057
   14000b4bd:	push   rdi
   14000b4be:	add    BYTE PTR [rax],al
   14000b4c0:	(bad)  
   14000b4c1:	push   rdi
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	and    BYTE PTR [rax+rax*1+0x57cc00],al
   14000b4cb:	add    bh,ah
   14000b4cd:	push   rdi
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	mov    al,0x79
   14000b4d2:	add    BYTE PTR [rax],al
   14000b4d4:	lock push rdi
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	adc    BYTE PTR [rax+0x0],bl
   14000b4db:	add    BYTE PTR [rax+0x20000079],dh
   14000b4e1:	pop    rax
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	cmp    ebx,DWORD PTR [rax+0x0]
   14000b4e7:	add    BYTE PTR [rax],ah
   14000b4e9:	jp     0x14000b4eb
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    al,BYTE PTR [rax]
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	add    QWORD PTR [rax],r8
   14000c013:	xor    BYTE PTR [rax],0x0
   14000c016:	add    BYTE PTR [rax-0x7ffffed0],al
   14000c01c:	rex.W add BYTE PTR [rax],al
   14000c01f:	adc    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	(bad)  
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	sbb    BYTE PTR [rax],0x0
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	js     0x14000c02e
   14000c02e:	add    BYTE PTR [rax+0x0],al
	...
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    DWORD PTR [rax],eax
   14000c040:	add    DWORD PTR [rax],eax
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	nop
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rax],0x0
	...
   14000c056:	add    DWORD PTR [rax],eax
   14000c058:	add    DWORD PTR [rax],eax
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	test   al,0x0
   14000c05e:	add    BYTE PTR [rax+0x0],al
	...
   14000c06c:	add    BYTE PTR [rax],al
   14000c06e:	add    DWORD PTR [rax],eax
   14000c070:	add    DWORD PTR [rax],eax
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	rol    BYTE PTR [rax],0x0
   14000c077:	add    BYTE PTR [rax],0x0
	...
   14000c086:	add    DWORD PTR [rax],eax
   14000c088:	add    DWORD PTR [rax],eax
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	fadd   DWORD PTR [rax]
   14000c08e:	add    BYTE PTR [rax+0x0],al
	...
   14000c09c:	add    BYTE PTR [rax],al
   14000c09e:	add    DWORD PTR [rax],eax
   14000c0a0:	or     DWORD PTR [rax+rax*1],eax
   14000c0a3:	add    al,dh
	...
   14000c0b5:	add    BYTE PTR [rcx],al
   14000c0b7:	add    BYTE PTR [rcx],cl
   14000c0b9:	add    al,0x0
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    DWORD PTR [rax],eax
	...
   14000c0cb:	add    BYTE PTR [rax],al
   14000c0cd:	add    BYTE PTR [rcx],al
   14000c0cf:	add    BYTE PTR [rcx],cl
   14000c0d1:	add    al,0x0
   14000c0d3:	add    BYTE PTR [rax],dl
   14000c0d5:	add    DWORD PTR [rax],eax
	...
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rcx],al
   14000c0e7:	add    BYTE PTR [rcx],cl
   14000c0e9:	add    al,0x0
   14000c0eb:	add    BYTE PTR [rax],ah
   14000c0ed:	add    DWORD PTR [rax],eax
   14000c0ef:	add    BYTE PTR [rax],ah
   14000c0f1:	fadd   QWORD PTR [rax]
   14000c0f3:	add    al,ch
	...
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    al,bl
   14000c101:	mov    DWORD PTR [rax],0x144200
	...
   14000c10f:	add    BYTE PTR [rax],bl
   14000c111:	(bad)  
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	rol    BYTE PTR [rbx],0x0
	...
   14000c11f:	add    BYTE PTR [rax-0x3f],ah
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	mov    bl,0x2
	...
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	or     eax,0x45005700
   14000c135:	add    BYTE PTR [rsi+0x0],dl
   14000c138:	push   rsp
   14000c139:	add    BYTE PTR [rdi+0x0],bl
   14000c13c:	push   rsp
   14000c13d:	add    BYTE PTR [rbp+0x0],al
   14000c140:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000c144:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14000c148:	push   rsp
   14000c149:	add    BYTE PTR [rbp+0x0],al
   14000c14c:	add    eax,DWORD PTR [rax]
   14000c14e:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c152:	rex.WB add BYTE PTR [r8],al
	...
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rdi+rdi*1],bh
   14000c162:	js     0x14000c1d1
   14000c164:	ins    BYTE PTR es:[rdi],dx
   14000c165:	and    BYTE PTR [rsi+0x65],dh
   14000c168:	jb     0x14000c1dd
   14000c16a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c171:	xor    BYTE PTR [rdx],ah
   14000c173:	and    BYTE PTR [rbp+0x6e],ah
   14000c176:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c179:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c180:	rex.RX sub eax,0x73202238
   14000c186:	je     0x14000c1e9
   14000c188:	outs   dx,BYTE PTR ds:[rsi]
   14000c189:	fs (bad) 
   14000c18b:	ins    BYTE PTR es:[rdi],dx
   14000c18c:	outs   dx,DWORD PTR ds:[rsi]
   14000c18d:	outs   dx,BYTE PTR ds:[rsi]
   14000c18e:	gs cmp eax,0x73657922
   14000c194:	and    bh,BYTE PTR [rdi]
   14000c196:	ds or  eax,0x2d213c0a
   14000c19c:	sub    eax,0x706f4320
   14000c1a1:	jns    0x14000c215
   14000c1a3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c1aa:	sub    DWORD PTR [rax],esp
   14000c1ac:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c1b4:	je     0x14000c1d6
   14000c1b6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c1b8:	jb     0x14000c22a
   14000c1ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c1bb:	jb     0x14000c21e
   14000c1bd:	je     0x14000c228
   14000c1bf:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c0:	outs   dx,BYTE PTR ds:[rsi]
   14000c1c1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dfff4
   14000c1c7:	cmp    al,0x61
   14000c1c9:	jae    0x14000c23e
   14000c1cb:	gs ins DWORD PTR es:[rdi],dx
   14000c1cd:	(bad)  
   14000c1ce:	ins    BYTE PTR es:[rdi],dx
   14000c1cf:	jns    0x14000c1f1
   14000c1d1:	js     0x14000c240
   14000c1d3:	ins    BYTE PTR es:[rdi],dx
   14000c1d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c1d5:	jae    0x14000c214
   14000c1d7:	and    dh,BYTE PTR [rbp+0x72]
   14000c1da:	outs   dx,BYTE PTR ds:[rsi]
   14000c1db:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c1de:	push   0x73616d65
   14000c1e3:	sub    eax,0x7263696d
   14000c1e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c1e9:	jae    0x14000c25a
   14000c1eb:	data16 je 0x14000c21b
   14000c1ee:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c1f1:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c1f4:	ins    DWORD PTR es:[rdi],dx
   14000c1f5:	cs jbe 0x14000c229
   14000c1f8:	and    ah,BYTE PTR [rax]
   14000c1fa:	and    BYTE PTR [rax+0x6d],bh
   14000c1fd:	ins    BYTE PTR es:[rdi],dx
   14000c1fe:	outs   dx,BYTE PTR ds:[rsi]
   14000c1ff:	jae    0x14000c23b
   14000c201:	(bad)  
   14000c202:	jae    0x14000c271
   14000c204:	jbe    0x14000c239
   14000c206:	cmp    eax,0x6e727522
   14000c20b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c20e:	push   0x73616d65
   14000c213:	sub    eax,0x7263696d
   14000c218:	outs   dx,DWORD PTR ds:[rsi]
   14000c219:	jae    0x14000c28a
   14000c21b:	data16 je 0x14000c24b
   14000c21e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c221:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c224:	ins    DWORD PTR es:[rdi],dx
   14000c225:	cs jbe 0x14000c25b
   14000c228:	and    ah,BYTE PTR [rax]
   14000c22a:	ins    DWORD PTR es:[rdi],dx
   14000c22b:	(bad)  
   14000c22c:	outs   dx,BYTE PTR ds:[rsi]
   14000c22d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c234:	jb     0x14000c2a9
   14000c236:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c23d:	xor    BYTE PTR [rdx],ah
   14000c23f:	ds or  eax,0x73613c0a
   14000c245:	jae    0x14000c2ac
   14000c247:	ins    DWORD PTR es:[rdi],dx
   14000c248:	(bad)  
   14000c249:	ins    BYTE PTR es:[rdi],dx
   14000c24a:	jns    0x14000c295
   14000c24c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c24f:	je     0x14000c2ba
   14000c251:	je     0x14000c2cc
   14000c253:	or     eax,0x2020200a
   14000c258:	and    BYTE PTR [rsi+0x61],ch
   14000c25b:	ins    DWORD PTR es:[rdi],dx
   14000c25c:	gs cmp eax,0x63694d22
   14000c262:	jb     0x14000c2d3
   14000c264:	jae    0x14000c2d5
   14000c266:	data16 je 0x14000c297
   14000c269:	push   rdi
   14000c26a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c271:	(bad)  
   14000c273:	jae    0x14000c2da
   14000c275:	cs gs ins DWORD PTR es:[rdi],dx
   14000c278:	(bad)  
   14000c279:	gs fs fs gs fs cs jae 0x14000c2fa
   14000c281:	jae    0x14000c2b1
   14000c283:	rex.RB ins DWORD PTR es:[rdi],dx
   14000c285:	(bad)  
   14000c286:	gs fs fs gs fs rex.B jo 0x14000c2fe
   14000c28e:	rex.WR (bad) 
   14000c290:	jne    0x14000c300
   14000c292:	movsxd ebp,DWORD PTR [rax+0x65]
   14000c295:	jb     0x14000c2b9
   14000c297:	or     eax,0x2020200a
   14000c29c:	and    BYTE PTR [rax+0x72],dh
   14000c29f:	outs   dx,DWORD PTR ds:[rsi]
   14000c2a0:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c2a3:	jae    0x14000c314
   14000c2a5:	jb     0x14000c2e8
   14000c2a7:	jb     0x14000c30c
   14000c2a9:	push   0x63657469
   14000c2ae:	je     0x14000c325
   14000c2b0:	jb     0x14000c317
   14000c2b2:	cmp    eax,0x646d6122
   14000c2b7:	ss xor al,0x22
   14000c2ba:	or     eax,0x2020200a
   14000c2bf:	and    BYTE PTR [rsi+0x65],dh
   14000c2c2:	jb     0x14000c337
   14000c2c4:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c2cb:	xor    DWORD PTR [rsi],ebp
   14000c2cd:	xor    BYTE PTR [rsi],ch
   14000c2cf:	xor    BYTE PTR [rdx],ah
   14000c2d1:	and    BYTE PTR [rax],ah
   14000c2d3:	or     eax,0x2020200a
   14000c2d8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c2dc:	gs cmp eax,0x6e697722
   14000c2e2:	xor    esi,DWORD PTR [rdx]
   14000c2e4:	and    ch,BYTE PTR [rdi]
   14000c2e6:	ds or  eax,0x65643c0a
   14000c2ec:	jae    0x14000c351
   14000c2ee:	jb     0x14000c359
   14000c2f0:	jo     0x14000c366
   14000c2f2:	imul   ebp,DWORD PTR [rdi+0x6e],0x626d453e
   14000c2f9:	gs fs fs gs fs rex.B jo 0x14000c371
   14000c301:	rex.WR (bad) 
   14000c303:	jne    0x14000c373
   14000c305:	movsxd ebp,DWORD PTR [rax+0x65]
   14000c308:	jb     0x14000c346
   14000c30a:	(bad)  
   14000c30b:	fs gs jae 0x14000c372
   14000c30f:	jb     0x14000c37a
   14000c311:	jo     0x14000c387
   14000c313:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000c31a:	je     0x14000c38e
   14000c31c:	jne    0x14000c391
   14000c31e:	je     0x14000c369
   14000c320:	outs   dx,BYTE PTR ds:[rsi]
   14000c321:	outs   dx,WORD PTR ds:[rsi]
   14000c323:	and    BYTE PTR [rax+0x6d],bh
   14000c326:	ins    BYTE PTR es:[rdi],dx
   14000c327:	outs   dx,BYTE PTR ds:[rsi]
   14000c328:	jae    0x14000c367
   14000c32a:	and    dh,BYTE PTR [rbp+0x72]
   14000c32d:	outs   dx,BYTE PTR ds:[rsi]
   14000c32e:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c331:	push   0x73616d65
   14000c336:	sub    eax,0x7263696d
   14000c33b:	outs   dx,DWORD PTR ds:[rsi]
   14000c33c:	jae    0x14000c3ad
   14000c33e:	data16 je 0x14000c36e
   14000c341:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c344:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c347:	ins    DWORD PTR es:[rdi],dx
   14000c348:	cs jbe 0x14000c37e
   14000c34b:	and    bh,BYTE PTR [rsi]
   14000c34d:	or     eax,0x2020200a
   14000c352:	and    BYTE PTR [rbx+rsi*2],bh
   14000c355:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c359:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c361:	and    BYTE PTR [rax],ah
   14000c363:	and    BYTE PTR [rax],ah
   14000c365:	and    BYTE PTR [rax],ah
   14000c367:	cmp    al,0x72
   14000c369:	gs jno 0x14000c3e1
   14000c36c:	gs jae 0x14000c3e3
   14000c36f:	gs fs push rax
   14000c372:	jb     0x14000c3dd
   14000c374:	jbe    0x14000c3df
   14000c376:	ins    BYTE PTR es:[rdi],dx
   14000c377:	gs addr32 gs jae 0x14000c3ba
   14000c37c:	or     eax,0x2020200a
   14000c381:	and    BYTE PTR [rax],ah
   14000c383:	and    BYTE PTR [rax],ah
   14000c385:	and    BYTE PTR [rax],ah
   14000c387:	and    BYTE PTR [rax],ah
   14000c389:	and    BYTE PTR [rdx+rsi*2],bh
   14000c38c:	gs jno 0x14000c404
   14000c38f:	gs jae 0x14000c406
   14000c392:	gs fs rex.RB js 0x14000c3fc
   14000c397:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c39a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c3a1:	ins    BYTE PTR es:[rdi],dx
   14000c3a2:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c3a6:	gs ins BYTE PTR es:[rdi],dx
   14000c3a8:	cmp    eax,0x49736122
   14000c3ad:	outs   dx,BYTE PTR ds:[rsi]
   14000c3ae:	jbe    0x14000c41f
   14000c3b0:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c3b4:	and    BYTE PTR [rbp+0x69],dh
   14000c3b7:	movsxd esp,DWORD PTR [r11+0x65]
   14000c3bb:	jae    0x14000c430
   14000c3bd:	cmp    eax,0x6c616622
   14000c3c2:	jae    0x14000c429
   14000c3c4:	and    ch,BYTE PTR [rdi]
   14000c3c6:	ds or  eax,0x2020200a
   14000c3cc:	and    BYTE PTR [rax],ah
   14000c3ce:	and    BYTE PTR [rax],ah
   14000c3d0:	and    BYTE PTR [rdi+rbp*1],bh
   14000c3d3:	jb     0x14000c43a
   14000c3d5:	jno    0x14000c44c
   14000c3d7:	gs jae 0x14000c44e
   14000c3da:	gs fs push rax
   14000c3dd:	jb     0x14000c448
   14000c3df:	jbe    0x14000c44a
   14000c3e1:	ins    BYTE PTR es:[rdi],dx
   14000c3e2:	gs addr32 gs jae 0x14000c425
   14000c3e7:	or     eax,0x2020200a
   14000c3ec:	and    BYTE PTR [rdi+rbp*1],bh
   14000c3ef:	jae    0x14000c456
   14000c3f1:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c3f4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c3fc:	je     0x14000c470
   14000c3fe:	jne    0x14000c473
   14000c400:	je     0x14000c44b
   14000c402:	outs   dx,BYTE PTR ds:[rsi]
   14000c403:	outs   dx,WORD PTR ds:[rsi]
   14000c405:	ds or  eax,0x612f3c0a
   14000c40b:	jae    0x14000c480
   14000c40d:	gs ins DWORD PTR es:[rdi],dx
   14000c40f:	(bad)  
   14000c410:	ins    BYTE PTR es:[rdi],dx
   14000c411:	jns    0x14000c451
   14000c413:	add    BYTE PTR [rax],al
   14000c415:	add    BYTE PTR [rax],al
   14000c417:	add    al,al
   14000c419:	add    esi,DWORD PTR [rax+rax*1]
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	push   rsi
   14000c41f:	add    BYTE PTR [rbx+0x0],dl
   14000c422:	pop    rdi
   14000c423:	add    BYTE PTR [rsi+0x0],dl
   14000c426:	add    BYTE PTR [r10+0x0],r10b
   14000c42a:	push   rbx
   14000c42b:	add    BYTE PTR [rcx+0x0],cl
   14000c42e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c432:	pop    rdi
   14000c433:	add    BYTE PTR [rcx+0x0],cl
   14000c436:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c43a:	rex.WRXB add BYTE PTR [r8],r8b
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c445:	add    BYTE PTR [rcx],al
   14000c447:	add    BYTE PTR [rax],al
   14000c449:	add    BYTE PTR [rdx],cl
   14000c44b:	add    BYTE PTR [rax],al
   14000c44d:	add    BYTE PTR [rax],bpl
   14000c450:	add    BYTE PTR [rax],al
   14000c452:	or     al,BYTE PTR [rax]
   14000c454:	add    BYTE PTR [rax+0x0],al
   14000c457:	sub    BYTE PTR [rdi],bh
   14000c459:	add    BYTE PTR [rax],al
   14000c45b:	add    BYTE PTR [rax],al
   14000c45d:	add    BYTE PTR [rax],al
   14000c45f:	add    BYTE PTR [rax+rax*1],al
   14000c462:	add    al,0x0
   14000c464:	add    DWORD PTR [rax],eax
	...
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	(bad)  
   14000c475:	add    eax,DWORD PTR [rax]
   14000c477:	add    BYTE PTR [rcx],al
   14000c479:	add    BYTE PTR [rbx+0x0],dl
   14000c47c:	je     0x14000c47e
   14000c47e:	jb     0x14000c480
   14000c480:	imul   eax,DWORD PTR [rax],0x67006e
   14000c486:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c48a:	ins    BYTE PTR es:[rdi],dx
   14000c48b:	add    BYTE PTR [rbp+0x0],ah
   14000c48e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c492:	data16 add BYTE PTR [rdi+0x0],ch
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	cli    
   14000c499:	add    al,BYTE PTR [rax]
   14000c49b:	add    BYTE PTR [rcx],al
   14000c49d:	add    BYTE PTR [rax],dh
   14000c49f:	add    BYTE PTR [rax+rax*1],dh
   14000c4a2:	xor    BYTE PTR [rax],al
   14000c4a4:	cmp    DWORD PTR [rax],eax
   14000c4a6:	xor    BYTE PTR [rax],al
   14000c4a8:	xor    al,0x0
   14000c4aa:	rex.X add BYTE PTR [rax],sil
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c4b3:	add    BYTE PTR [rcx],al
   14000c4b5:	add    BYTE PTR [rbx+0x0],al
   14000c4b8:	outs   dx,DWORD PTR ds:[rsi]
   14000c4b9:	add    BYTE PTR [rbp+0x0],ch
   14000c4bc:	jo     0x14000c4be
   14000c4be:	(bad)  
   14000c4bf:	add    BYTE PTR [rsi+0x0],ch
   14000c4c2:	jns    0x14000c4c4
   14000c4c4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c4c8:	ins    DWORD PTR es:[rdi],dx
   14000c4c9:	add    BYTE PTR [rbp+0x0],ah
   14000c4cc:	add    BYTE PTR [rax],al
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c4d4:	movsxd eax,DWORD PTR [rax]
   14000c4d6:	jb     0x14000c4d8
   14000c4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c4d9:	add    BYTE PTR [rbx+0x0],dh
   14000c4dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c4dd:	add    BYTE PTR [rsi+0x0],ah
   14000c4e0:	je     0x14000c4e2
   14000c4e2:	and    BYTE PTR [rax],al
   14000c4e4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c4e8:	jb     0x14000c4ea
   14000c4ea:	jo     0x14000c4ec
   14000c4ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c4ed:	add    BYTE PTR [rdx+0x0],dh
   14000c4f0:	(bad)  
   14000c4f1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c4f5:	add    BYTE PTR [rdi+0x0],ch
   14000c4f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c4f9:	add    BYTE PTR [rax],al
   14000c4fb:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000c4ff:	add    BYTE PTR [rcx],al
   14000c501:	add    BYTE PTR [rsi+0x0],al
   14000c504:	imul   eax,DWORD PTR [rax],0x65006c
   14000c50a:	add    BYTE PTR [rbp+0x0],r12b
   14000c50e:	jae    0x14000c510
   14000c510:	movsxd eax,DWORD PTR [rax]
   14000c512:	jb     0x14000c514
   14000c514:	imul   eax,DWORD PTR [rax],0x740070
   14000c51a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c520:	add    BYTE PTR [rax],al
   14000c522:	add    BYTE PTR [rax],al
   14000c524:	add    BYTE PTR [r13+0x0],r13b
   14000c528:	(bad)  
   14000c529:	add    BYTE PTR [rbp+0x0],ah
   14000c52c:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   14000c531:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c535:	add    BYTE PTR [rcx+0x0],al
   14000c538:	jo     0x14000c53a
   14000c53a:	jo     0x14000c53c
   14000c53c:	and    BYTE PTR [rax],al
   14000c53e:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c542:	jne    0x14000c544
   14000c544:	outs   dx,BYTE PTR ds:[rsi]
   14000c545:	add    BYTE PTR [rbx+0x0],ah
   14000c548:	push   0x72006500
   14000c54d:	add    BYTE PTR [rax],al
   14000c54f:	add    BYTE PTR [rsi+0x0],ah
   14000c552:	and    eax,DWORD PTR [rax]
   14000c554:	add    DWORD PTR [rax],eax
   14000c556:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c55a:	ins    BYTE PTR es:[rdi],dx
   14000c55b:	add    BYTE PTR [rbp+0x0],ah
   14000c55e:	push   rsi
   14000c55f:	add    BYTE PTR [rbp+0x0],ah
   14000c562:	jb     0x14000c564
   14000c564:	jae    0x14000c566
   14000c566:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c56c:	add    BYTE PTR [rax],al
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	xor    DWORD PTR [rax],eax
   14000c572:	xor    BYTE PTR [rax],al
   14000c574:	add    BYTE PTR cs:[rax],dh
   14000c577:	add    BYTE PTR [rsi],ch
   14000c579:	add    BYTE PTR [rcx],dh
   14000c57b:	add    BYTE PTR [rax],dh
   14000c57d:	add    BYTE PTR [rdx],dh
   14000c57f:	add    BYTE PTR [rax+rax*1],dh
   14000c582:	xor    BYTE PTR [rax],al
   14000c584:	add    BYTE PTR cs:[rcx],dh
   14000c587:	add    BYTE PTR [rsi],dh
   14000c589:	add    BYTE PTR [rbx],dh
   14000c58b:	add    BYTE PTR [rax],bh
   14000c58d:	add    BYTE PTR [rax+rax*1],dh
   14000c590:	and    BYTE PTR [rax],al
   14000c592:	sub    BYTE PTR [rax],al
   14000c594:	je     0x14000c596
   14000c596:	push   0x2e003100
   14000c59b:	add    BYTE PTR [rcx],dh
   14000c59d:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f5a3
   14000c5a3:	add    BYTE PTR [rax],dh
   14000c5a5:	add    BYTE PTR [rcx],bh
   14000c5a7:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f6ad
   14000c5ad:	add    BYTE PTR [rax],dh
   14000c5af:	add    BYTE PTR [rax],dh
   14000c5b1:	add    BYTE PTR [rcx],ch
   14000c5b3:	add    BYTE PTR [rax],al
   14000c5b5:	add    BYTE PTR [rax],al
   14000c5b7:	add    BYTE PTR [rax+0x0],dl
   14000c5ba:	sbb    BYTE PTR [rax],al
   14000c5bc:	add    DWORD PTR [rax],eax
   14000c5be:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c5c2:	je     0x14000c5c4
   14000c5c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c5c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c9:	add    BYTE PTR [rcx+0x0],ah
   14000c5cc:	ins    BYTE PTR es:[rdi],dx
   14000c5cd:	add    BYTE PTR [rsi+0x0],cl
   14000c5d0:	(bad)  
   14000c5d1:	add    BYTE PTR [rbp+0x0],ch
   14000c5d4:	add    BYTE PTR gs:[rax],al
   14000c5d7:	add    BYTE PTR [rbp+0x0],al
   14000c5da:	ins    DWORD PTR es:[rdi],dx
   14000c5db:	add    BYTE PTR [rdx+0x0],ah
   14000c5de:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   14000c5e3:	add    BYTE PTR [rbp+0x0],ah
   14000c5e6:	add    BYTE PTR fs:[rcx+0x0],al
   14000c5ea:	jo     0x14000c5ec
   14000c5ec:	jo     0x14000c5ee
   14000c5ee:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c5f2:	jne    0x14000c5f4
   14000c5f4:	outs   dx,BYTE PTR ds:[rsi]
   14000c5f5:	add    BYTE PTR [rbx+0x0],ah
   14000c5f8:	push   0x72006500
   14000c5fd:	add    BYTE PTR [rsi],ch
   14000c5ff:	add    BYTE PTR [rbp+0x0],ah
   14000c602:	js     0x14000c604
   14000c604:	add    BYTE PTR gs:[rax],al
   14000c607:	add    BYTE PTR [rax+0x1002e00],al
   14000c60d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c611:	add    BYTE PTR [rdi+0x0],ah
   14000c614:	(bad)  
   14000c615:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c619:	add    BYTE PTR [rdi+0x0],ch
   14000c61c:	jo     0x14000c61e
   14000c61e:	jns    0x14000c620
   14000c620:	jb     0x14000c622
   14000c622:	imul   eax,DWORD PTR [rax],0x680067
   14000c628:	je     0x14000c62a
   14000c62a:	add    BYTE PTR [rax],al
   14000c62c:	test   eax,0x4d002000
   14000c631:	add    BYTE PTR [rcx+0x0],ch
   14000c634:	movsxd eax,DWORD PTR [rax]
   14000c636:	jb     0x14000c638
   14000c638:	outs   dx,DWORD PTR ds:[rsi]
   14000c639:	add    BYTE PTR [rbx+0x0],dh
   14000c63c:	outs   dx,DWORD PTR ds:[rsi]
   14000c63d:	add    BYTE PTR [rsi+0x0],ah
   14000c640:	je     0x14000c642
   14000c642:	and    BYTE PTR [rax],al
   14000c644:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c648:	jb     0x14000c64a
   14000c64a:	jo     0x14000c64c
   14000c64c:	outs   dx,DWORD PTR ds:[rsi]
   14000c64d:	add    BYTE PTR [rdx+0x0],dh
   14000c650:	(bad)  
   14000c651:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c655:	add    BYTE PTR [rdi+0x0],ch
   14000c658:	outs   dx,BYTE PTR ds:[rsi]
   14000c659:	add    BYTE PTR [rsi],ch
   14000c65b:	add    BYTE PTR [rax],ah
   14000c65d:	add    BYTE PTR [rcx+0x0],al
   14000c660:	ins    BYTE PTR es:[rdi],dx
   14000c661:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c665:	add    BYTE PTR [rdx+0x0],dh
   14000c668:	imul   eax,DWORD PTR [rax],0x680067
   14000c66e:	je     0x14000c670
   14000c670:	jae    0x14000c672
   14000c672:	and    BYTE PTR [rax],al
   14000c674:	jb     0x14000c676
   14000c676:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c67a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c67e:	jbe    0x14000c680
   14000c680:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rax+0x0],bl
   14000c68a:	sbb    BYTE PTR [rax],al
   14000c68c:	add    DWORD PTR [rax],eax
   14000c68e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c692:	imul   eax,DWORD PTR [rax],0x690067
   14000c698:	outs   dx,BYTE PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rcx+0x0],ah
   14000c69c:	ins    BYTE PTR es:[rdi],dx
   14000c69d:	add    BYTE PTR [rsi+0x0],al
   14000c6a0:	imul   eax,DWORD PTR [rax],0x65006c
   14000c6a6:	outs   dx,BYTE PTR ds:[rsi]
   14000c6a7:	add    BYTE PTR [rcx+0x0],ah
   14000c6aa:	ins    DWORD PTR es:[rdi],dx
   14000c6ab:	add    BYTE PTR [rbp+0x0],ah
   14000c6ae:	add    BYTE PTR [rax],al
   14000c6b0:	add    BYTE PTR [r13+0x0],r13b
   14000c6b4:	(bad)  
   14000c6b5:	add    BYTE PTR [rbp+0x0],ah
   14000c6b8:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   14000c6bd:	add    BYTE PTR [rax+rax*1+0x41],ah
   14000c6c1:	add    BYTE PTR [rax+0x0],dh
   14000c6c4:	jo     0x14000c6c6
   14000c6c6:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c6ca:	jne    0x14000c6cc
   14000c6cc:	outs   dx,BYTE PTR ds:[rsi]
   14000c6cd:	add    BYTE PTR [rbx+0x0],ah
   14000c6d0:	push   0x72006500
   14000c6d5:	add    BYTE PTR [rsi],ch
   14000c6d7:	add    BYTE PTR [rbp+0x0],ah
   14000c6da:	js     0x14000c6dc
   14000c6dc:	add    BYTE PTR gs:[rax],al
   14000c6df:	add    BYTE PTR [rdx+0x0],ch
   14000c6e2:	and    eax,0x50000100
   14000c6e7:	add    BYTE PTR [rdx+0x0],dh
   14000c6ea:	outs   dx,DWORD PTR ds:[rsi]
   14000c6eb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c6ef:	add    BYTE PTR [rbx+0x0],ah
   14000c6f2:	je     0x14000c6f4
   14000c6f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c6f8:	ins    DWORD PTR es:[rdi],dx
   14000c6f9:	add    BYTE PTR [rbp+0x0],ah
   14000c6fc:	add    BYTE PTR [rax],al
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c704:	movsxd eax,DWORD PTR [rax]
   14000c706:	jb     0x14000c708
   14000c708:	outs   dx,DWORD PTR ds:[rsi]
   14000c709:	add    BYTE PTR [rbx+0x0],dh
   14000c70c:	outs   dx,DWORD PTR ds:[rsi]
   14000c70d:	add    BYTE PTR [rsi+0x0],ah
   14000c710:	je     0x14000c712
   14000c712:	scas   al,BYTE PTR es:[rdi]
   14000c713:	add    BYTE PTR [rax],ah
   14000c715:	add    BYTE PTR [rdi+0x0],dl
   14000c718:	imul   eax,DWORD PTR [rax],0x64006e
   14000c71e:	outs   dx,DWORD PTR ds:[rsi]
   14000c71f:	add    BYTE PTR [rdi+0x0],dh
   14000c722:	jae    0x14000c724
   14000c724:	scas   al,BYTE PTR es:[rdi]
   14000c725:	add    BYTE PTR [rax],ah
   14000c727:	add    BYTE PTR [rdi+0x0],cl
   14000c72a:	jo     0x14000c72c
   14000c72c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c730:	(bad)  
   14000c731:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c735:	add    BYTE PTR [rsi+0x0],ch
   14000c738:	add    BYTE PTR [eax],ah
   14000c73b:	add    BYTE PTR [rbx+0x0],dl
   14000c73e:	jns    0x14000c740
   14000c740:	jae    0x14000c742
   14000c742:	je     0x14000c744
   14000c744:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c748:	add    BYTE PTR [rax],al
   14000c74a:	add    BYTE PTR [rax],al
   14000c74c:	rex.RX add BYTE PTR [rcx],r10b
   14000c74f:	add    BYTE PTR [rcx],al
   14000c751:	add    BYTE PTR [rax+0x0],dl
   14000c754:	jb     0x14000c756
   14000c756:	outs   dx,DWORD PTR ds:[rsi]
   14000c757:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c75b:	add    BYTE PTR [rbx+0x0],ah
   14000c75e:	je     0x14000c760
   14000c760:	push   rsi
   14000c761:	add    BYTE PTR [rbp+0x0],ah
   14000c764:	jb     0x14000c766
   14000c766:	jae    0x14000c768
   14000c768:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	xor    DWORD PTR [rax],eax
   14000c772:	xor    BYTE PTR [rax],al
   14000c774:	add    BYTE PTR cs:[rax],dh
   14000c777:	add    BYTE PTR [rsi],ch
   14000c779:	add    BYTE PTR [rcx],dh
   14000c77b:	add    BYTE PTR [rax],dh
   14000c77d:	add    BYTE PTR [rdx],dh
   14000c77f:	add    BYTE PTR [rax+rax*1],dh
   14000c782:	xor    BYTE PTR [rax],al
   14000c784:	add    BYTE PTR cs:[rcx],dh
   14000c787:	add    BYTE PTR [rsi],dh
   14000c789:	add    BYTE PTR [rbx],dh
   14000c78b:	add    BYTE PTR [rax],bh
   14000c78d:	add    BYTE PTR [rax+rax*1],dh
   14000c790:	add    BYTE PTR [rax],al
   14000c792:	add    BYTE PTR [rax],al
   14000c794:	add    BYTE PTR [rax],r8b
   14000c797:	add    BYTE PTR [rcx],al
   14000c799:	add    BYTE PTR [rsi+0x0],dl
   14000c79c:	(bad)  
   14000c79d:	add    BYTE PTR [rdx+0x0],dh
   14000c7a0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c7a4:	ins    BYTE PTR es:[rdi],dx
   14000c7a5:	add    BYTE PTR [rbp+0x0],ah
   14000c7a8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c7ac:	data16 add BYTE PTR [rdi+0x0],ch
   14000c7b0:	add    BYTE PTR [rax],al
   14000c7b2:	add    BYTE PTR [rax],al
   14000c7b4:	and    al,0x0
   14000c7b6:	add    al,0x0
   14000c7b8:	add    BYTE PTR [rax],al
   14000c7ba:	push   rsp
   14000c7bb:	add    BYTE PTR [rdx+0x0],dh
   14000c7be:	(bad)  
   14000c7bf:	add    BYTE PTR [rsi+0x0],ch
   14000c7c2:	jae    0x14000c7c4
   14000c7c4:	ins    BYTE PTR es:[rdi],dx
   14000c7c5:	add    BYTE PTR [rcx+0x0],ah
   14000c7c8:	je     0x14000c7ca
   14000c7ca:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c7d0:	add    BYTE PTR [rax],al
   14000c7d2:	add    BYTE PTR [rax],al
   14000c7d4:	or     DWORD PTR [rax+rsi*4],eax
   14000c7d7:	add    al,0x43
   14000c7d9:	push   rdx
   14000c7da:	rex.WB
   14000c7db:	rex.WRB
   14000c7dc:	adc    al,0x0
   14000c7df:	add    BYTE PTR [rbx],al
   14000c7e1:	add    BYTE PTR [rcx],al
   14000c7e3:	add    BYTE PTR [rcx],al
   14000c7e5:	add    BYTE PTR [rax],al
   14000c7e7:	add    BYTE PTR [rcx-0x69a9d7ad],dl
   14000c7ed:	fwait
   14000c7ee:	xchg   esi,eax
   14000c7ef:	rex.RX sahf 
   14000c7f1:	lods   eax,DWORD PTR ds:[rsi]
   14000c7f2:	sub    eax,0xbd8ff917
   14000c7f7:	mov    dl,0x24
   14000c7f9:	add    BYTE PTR [rax],al
   14000c7fb:	add    BYTE PTR [rdi+0x45],dl
   14000c7fe:	push   rsi
   14000c7ff:	push   rsp
   14000c800:	sbb    al,0x14
   14000c802:	add    BYTE PTR [rax],al
   14000c804:	(bad)  
   14000c805:	(bad)  
   14000c806:	(bad)  
   14000c807:	inc    DWORD PTR [rdi]
   14000c809:	add    BYTE PTR [rax],al
   14000c80b:	add    BYTE PTR [rip+0xffffffff8c000000],al        # 0xcc00c811
   14000c811:	add    BYTE PTR [rax],al
   14000c813:	add    BYTE PTR [rdi],al
   14000c815:	add    BYTE PTR [rax],al
   14000c817:	add    BYTE PTR [rcx+rax*1+0x0],bh
   14000c81b:	add    BYTE PTR [rdx],al
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    BYTE PTR [rax],bh
   14000c821:	or     BYTE PTR [rax],al
   14000c823:	add    BYTE PTR [rax],al
   14000c825:	add    BYTE PTR [rax],al
   14000c827:	add    BYTE PTR [rax+0x8],ch
   14000c82a:	add    BYTE PTR [rax],al
   14000c82c:	add    DWORD PTR [rax],eax
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	int3   
   14000c831:	or     BYTE PTR [rax],al
   14000c833:	add    BYTE PTR [rbx],al
   14000c835:	add    BYTE PTR [rax],al
   14000c837:	add    BYTE PTR [rax],dl
   14000c839:	or     DWORD PTR [rax],eax
   14000c83b:	add    BYTE PTR [rax+rax*1],al
   14000c83e:	add    BYTE PTR [rax],al
   14000c840:	and    BYTE PTR [rcx],cl
	...
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	rex.XB
   14000c865:	rex.W
   14000c866:	rex.B
   14000c867:	rex.WRX
   14000c868:	lock add BYTE PTR [rax],al
   14000c86b:	add    BYTE PTR [rdx],al
   14000c86d:	add    BYTE PTR [rax],al
   14000c86f:	add    BYTE PTR [rax],al
   14000c871:	add    BYTE PTR [rax],al
   14000c873:	add    BYTE PTR [rax+0x10000000],bh
   14000c879:	add    BYTE PTR [rax],al
   14000c87b:	add    bh,bh
   14000c87d:	(bad)  
   14000c87e:	(bad)  
   14000c87f:	inc    DWORD PTR [rax]
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    BYTE PTR [rax],ah
   14000c885:	add    DWORD PTR [rax],eax
   14000c887:	add    BYTE PTR [rcx],dl
   14000c889:	add    BYTE PTR [rax],al
   14000c88b:	add    bh,bh
   14000c88d:	(bad)  
   14000c88e:	(bad)  
   14000c88f:	jmp    FWORD PTR [rax+0x0]
   14000c892:	add    BYTE PTR [rax],al
   14000c894:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c898:	movsxd eax,DWORD PTR [rax]
   14000c89a:	jb     0x14000c89c
   14000c89c:	outs   dx,DWORD PTR ds:[rsi]
   14000c89d:	add    BYTE PTR [rbx+0x0],dh
   14000c8a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c8a1:	add    BYTE PTR [rsi+0x0],ah
   14000c8a4:	je     0x14000c8a6
   14000c8a6:	sub    eax,0x69005700
   14000c8ab:	add    BYTE PTR [rsi+0x0],ch
   14000c8ae:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c8b2:	ja     0x14000c8b4
   14000c8b4:	jae    0x14000c8b6
   14000c8b6:	sub    eax,0x6d004500
   14000c8bb:	add    BYTE PTR [rdx+0x0],ah
   14000c8be:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   14000c8c3:	add    BYTE PTR [rbp+0x0],ah
   14000c8c6:	add    BYTE PTR fs:[rcx+0x0],al
   14000c8ca:	jo     0x14000c8cc
   14000c8cc:	jo     0x14000c8ce
   14000c8ce:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c8d2:	jne    0x14000c8d4
   14000c8d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c8d5:	add    BYTE PTR [rbx+0x0],ah
   14000c8d8:	push   0x72006500
   14000c8dd:	add    BYTE PTR [rdi],ch
   14000c8df:	add    BYTE PTR [rdi+0x0],cl
   14000c8e2:	jo     0x14000c8e4
   14000c8e4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c8e8:	(bad)  
   14000c8e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c8ed:	add    BYTE PTR [rdi+0x0],ch
   14000c8f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f1:	add    BYTE PTR [rcx+0x0],ah
   14000c8f4:	ins    BYTE PTR es:[rdi],dx
   14000c8f5:	add    BYTE PTR [rax],al
   14000c8f7:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000c8fb:	add    BYTE PTR [rbp+0x0],cl
   14000c8fe:	imul   eax,DWORD PTR [rax],0x720063
   14000c904:	outs   dx,DWORD PTR ds:[rsi]
   14000c905:	add    BYTE PTR [rbx+0x0],dh
   14000c908:	outs   dx,DWORD PTR ds:[rsi]
   14000c909:	add    BYTE PTR [rsi+0x0],ah
   14000c90c:	je     0x14000c90e
   14000c90e:	sub    eax,0x69005700
   14000c913:	add    BYTE PTR [rsi+0x0],ch
   14000c916:	add    BYTE PTR fs:[rdi+0x0],ch
   14000c91a:	ja     0x14000c91c
   14000c91c:	jae    0x14000c91e
   14000c91e:	sub    eax,0x6d004500
   14000c923:	add    BYTE PTR [rdx+0x0],ah
   14000c926:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   14000c92b:	add    BYTE PTR [rbp+0x0],ah
   14000c92e:	add    BYTE PTR fs:[rcx+0x0],al
   14000c932:	jo     0x14000c934
   14000c934:	jo     0x14000c936
   14000c936:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c93a:	jne    0x14000c93c
   14000c93c:	outs   dx,BYTE PTR ds:[rsi]
   14000c93d:	add    BYTE PTR [rbx+0x0],ah
   14000c940:	push   0x72006500
   14000c945:	add    BYTE PTR [rdi],ch
   14000c947:	add    BYTE PTR [rcx+0x0],al
   14000c94a:	add    BYTE PTR fs:[rbp+0x0],ch
   14000c94e:	imul   eax,DWORD PTR [rax],0x6e
   14000c954:	push   rsp
   14000c955:	push   rsp
   14000c956:	rex.X
   14000c957:	rex.WR movabs rsp,0x5400000005000006
   14000c961:	rex.RB
   14000c962:	rex.WRB push r8
   14000c964:	enter  0x1,0x0
   14000c968:	add    al,0x0
   14000c96a:	add    BYTE PTR [rax],al
   14000c96c:	add    al,0x0
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	rol    BYTE PTR [rdx],0x0
   14000c973:	add    BYTE PTR [rcx],al
   14000c975:	add    BYTE PTR [rax],al
   14000c977:	add    BYTE PTR [rdi+0x49],bh
   14000c97a:	out    dx,eax
   14000c97b:	outs   dx,BYTE PTR ds:[rsi]
   14000c97c:	rex.WXB mov r12b,0xba
   14000c97f:	stos   BYTE PTR es:[rdi],al
   14000c980:	pushf  
   14000c981:	mov    al,0xf8
   14000c983:	push   0x540238eb
   14000c988:	sgdt   [rcx]
   14000c98b:	add    BYTE PTR [rcx],al
   14000c98d:	(bad)  
   14000c98e:	inc    DWORD PTR [rdx]
   14000c990:	add    DWORD PTR [rax],eax
   14000c992:	add    BYTE PTR [rdx+rax*4+0x9],al
   14000c996:	add    BYTE PTR [rbp+0x0],al
   14000c999:	jbe    0x14000c99b
   14000c99b:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c99f:	je     0x14000c9a1
   14000c9a1:	add    BYTE PTR [rcx+0x0],r12b
   14000c9a5:	je     0x14000c9a7
   14000c9a7:	(bad)  
   14000c9a8:	add    BYTE PTR [rax],al
   14000c9aa:	add    BYTE PTR [rdx],al
   14000c9ac:	rex.B (bad) 
   14000c9ae:	push   QWORD PTR [rbx]
   14000c9b0:	add    BYTE PTR [rax],al
   14000c9b2:	add    BYTE PTR [rdx+0x4400046f],cl
   14000c9b8:	add    BYTE PTR [rcx+0x0],ah
   14000c9bb:	je     0x14000c9bd
   14000c9bd:	(bad)  
   14000c9be:	add    BYTE PTR [rax],al
   14000c9c0:	add    BYTE PTR [rbx],bl
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	add    BYTE PTR [rsi],al
   14000c9c6:	rex.WXB xchg r13,rax
   14000c9c8:	add    al,0x0
   14000c9ca:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c9ce:	ins    DWORD PTR es:[rdi],dx
   14000c9cf:	add    BYTE PTR [rbp+0x0],ah
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	add    eax,0x73000401
   14000c9d9:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c9dd:	add    BYTE PTR [rcx],dh
   14000c9df:	add    BYTE PTR [rdx],al
   14000c9e1:	or     eax,0x4010000
   14000c9e6:	rex.B (bad) 
   14000c9e8:	push   QWORD PTR [rbx]
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	add    BYTE PTR [rdx+0x4400046f],cl
   14000c9f2:	add    BYTE PTR [rcx+0x0],ah
   14000c9f5:	je     0x14000c9f7
   14000c9f7:	(bad)  
   14000c9f8:	add    BYTE PTR [rax],al
   14000c9fa:	add    BYTE PTR [rbx],bl
   14000c9fc:	add    BYTE PTR [rax],al
   14000c9fe:	add    BYTE PTR [rsi],al
   14000ca00:	rex.WXB xchg r13,rax
   14000ca02:	add    al,0x0
   14000ca04:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ca08:	ins    DWORD PTR es:[rdi],dx
   14000ca09:	add    BYTE PTR [rbp+0x0],ah
   14000ca0c:	add    BYTE PTR [rax],al
   14000ca0e:	add    eax,0x73000401
   14000ca13:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ca17:	add    BYTE PTR [rdx],dh
   14000ca19:	add    BYTE PTR [rdx],al
   14000ca1b:	or     eax,0x4010001
   14000ca20:	rex.B (bad) 
   14000ca22:	push   QWORD PTR [rbx]
   14000ca24:	add    BYTE PTR [rax],al
   14000ca26:	add    BYTE PTR [rdx+0x4400046f],cl
   14000ca2c:	add    BYTE PTR [rcx+0x0],ah
   14000ca2f:	je     0x14000ca31
   14000ca31:	(bad)  
   14000ca32:	add    BYTE PTR [rax],al
   14000ca34:	add    BYTE PTR [rbx],bl
   14000ca36:	add    BYTE PTR [rax],al
   14000ca38:	add    BYTE PTR [rsi],al
   14000ca3a:	rex.WXB xchg r13,rax
   14000ca3c:	add    al,0x0
   14000ca3e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ca42:	ins    DWORD PTR es:[rdi],dx
   14000ca43:	add    BYTE PTR [rbp+0x0],ah
   14000ca46:	add    BYTE PTR [rax],al
   14000ca48:	add    eax,0x6e000401
   14000ca4d:	add    BYTE PTR [rbp+0x0],dh
   14000ca50:	ins    DWORD PTR es:[rdi],dx
   14000ca51:	add    BYTE PTR [rcx],dh
   14000ca53:	add    BYTE PTR [rdx],al
   14000ca55:	or     eax,0x4080002
   14000ca5a:	rex.B (bad) 
   14000ca5c:	push   QWORD PTR [rbx]
   14000ca5e:	add    BYTE PTR [rax],al
   14000ca60:	add    BYTE PTR [rdx+0x4400046f],cl
   14000ca66:	add    BYTE PTR [rcx+0x0],ah
   14000ca69:	je     0x14000ca6b
   14000ca6b:	(bad)  
   14000ca6c:	add    BYTE PTR [rax],al
   14000ca6e:	add    BYTE PTR [rbx],bl
   14000ca70:	add    BYTE PTR [rax],al
   14000ca72:	add    BYTE PTR [rsi],al
   14000ca74:	rex.WXB xchg r13,rax
   14000ca76:	add    al,0x0
   14000ca78:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ca7c:	ins    DWORD PTR es:[rdi],dx
   14000ca7d:	add    BYTE PTR [rbp+0x0],ah
   14000ca80:	add    BYTE PTR [rax],al
   14000ca82:	add    eax,0x6e000401
   14000ca87:	add    BYTE PTR [rbp+0x0],dh
   14000ca8a:	ins    DWORD PTR es:[rdi],dx
   14000ca8b:	add    BYTE PTR [rdx],dh
   14000ca8d:	add    BYTE PTR [rdx],al
   14000ca8f:	or     eax,0x4070003
   14000ca94:	add    al,0x0
   14000ca96:	add    BYTE PTR [rax],al
   14000ca98:	add    BYTE PTR [rax],al
   14000ca9a:	add    BYTE PTR [rax],al
   14000ca9c:	add    DWORD PTR [rcx],eax
	...
   14000caa6:	add    BYTE PTR [rax],al
   14000caa8:	adc    BYTE PTR [rbx],al
   14000caaa:	add    BYTE PTR [rax],al
   14000caac:	add    BYTE PTR [rax],al
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	add    DWORD PTR [rcx],eax
	...
   14000caba:	add    BYTE PTR [rax],al
   14000cabc:	and    BYTE PTR [rbx],al
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	add    BYTE PTR [rax],al
   14000cac2:	add    BYTE PTR [rax],al
   14000cac4:	or     BYTE PTR [rax],cl
	...
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	xor    BYTE PTR [rbx],al
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	add    BYTE PTR [rax],al
   14000cad6:	add    BYTE PTR [rax],al
   14000cad8:	(bad)  
   14000cad9:	and    BYTE PTR [rax],al
	...
   14000cae3:	add    BYTE PTR [rax+0x3],al
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	adc    BYTE PTR [rax],al
   14000caea:	add    BYTE PTR [rax],al
   14000caec:	jae    0x14000caee
   14000caee:	je     0x14000caf0
   14000caf0:	jb     0x14000caf2
   14000caf2:	xor    DWORD PTR [rax],eax
   14000caf4:	add    BYTE PTR [rax],al
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	adc    BYTE PTR [rax],al
   14000cafa:	add    BYTE PTR [rax],al
   14000cafc:	jae    0x14000cafe
   14000cafe:	je     0x14000cb00
   14000cb00:	jb     0x14000cb02
   14000cb02:	xor    al,BYTE PTR [rax]
   14000cb04:	add    BYTE PTR [rax],al
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	adc    BYTE PTR [rax],al
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	outs   dx,BYTE PTR ds:[rsi]
   14000cb0d:	add    BYTE PTR [rbp+0x0],dh
   14000cb10:	ins    DWORD PTR es:[rdi],dx
   14000cb11:	add    BYTE PTR [rcx],dh
   14000cb13:	add    BYTE PTR [rax],al
   14000cb15:	add    BYTE PTR [rax],al
   14000cb17:	add    BYTE PTR [rax],dl
   14000cb19:	add    BYTE PTR [rax],al
   14000cb1b:	add    BYTE PTR [rsi+0x0],ch
   14000cb1e:	jne    0x14000cb20
   14000cb20:	ins    DWORD PTR es:[rdi],dx
   14000cb21:	add    BYTE PTR [rdx],dh
   14000cb23:	add    BYTE PTR [rax],al
   14000cb25:	add    BYTE PTR [rax],al
   14000cb27:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000cb2b:	push   rax
   14000cb2c:	enter  0x1,0x0
   14000cb30:	add    al,0x0
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	add    al,0x0
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	mov    BYTE PTR [rax+rax*1],al
   14000cb3b:	add    BYTE PTR [rcx],al
   14000cb3d:	add    BYTE PTR [rax],al
   14000cb3f:	add    BYTE PTR [rdx],dl
   14000cb41:	xor    eax,0x3b436651
   14000cb46:	sbb    eax,0x1f579492
   14000cb4b:	hlt    
   14000cb4c:	add    DWORD PTR [rbp+0x4c],edx
   14000cb4f:	or     al,0xf
   14000cb51:	add    DWORD PTR [rcx],eax
   14000cb53:	add    BYTE PTR [rcx],al
   14000cb55:	(bad)  
   14000cb56:	inc    DWORD PTR [rdx]
   14000cb58:	add    DWORD PTR [rax],eax
   14000cb5a:	add    BYTE PTR [rdx+rax*4+0x9],al
   14000cb5e:	add    BYTE PTR [rbp+0x0],al
   14000cb61:	jbe    0x14000cb63
   14000cb63:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cb67:	je     0x14000cb69
   14000cb69:	add    BYTE PTR [rcx+0x0],r12b
   14000cb6d:	je     0x14000cb6f
   14000cb6f:	(bad)  
   14000cb70:	add    BYTE PTR [rax],al
   14000cb72:	add    BYTE PTR [rdx],al
   14000cb74:	rex.B (bad) 
   14000cb76:	push   QWORD PTR [rbx]
   14000cb78:	add    BYTE PTR [rax],al
   14000cb7a:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cb80:	add    BYTE PTR [rcx+0x0],ah
   14000cb83:	je     0x14000cb85
   14000cb85:	(bad)  
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	add    BYTE PTR [rbx],bl
   14000cb8a:	add    BYTE PTR [rax],al
   14000cb8c:	add    BYTE PTR [rsi],al
   14000cb8e:	rex.WXB xchg r13,rax
   14000cb90:	add    al,0x0
   14000cb92:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cb96:	ins    DWORD PTR es:[rdi],dx
   14000cb97:	add    BYTE PTR [rbp+0x0],ah
   14000cb9a:	add    BYTE PTR [rax],al
   14000cb9c:	add    eax,0x73000401
   14000cba1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cba5:	add    BYTE PTR [rcx],dh
   14000cba7:	add    BYTE PTR [rdx],al
   14000cba9:	or     eax,0x4010000
   14000cbae:	rex.B (bad) 
   14000cbb0:	push   QWORD PTR [rbx]
   14000cbb2:	add    BYTE PTR [rax],al
   14000cbb4:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cbba:	add    BYTE PTR [rcx+0x0],ah
   14000cbbd:	je     0x14000cbbf
   14000cbbf:	(bad)  
   14000cbc0:	add    BYTE PTR [rax],al
   14000cbc2:	add    BYTE PTR [rbx],bl
   14000cbc4:	add    BYTE PTR [rax],al
   14000cbc6:	add    BYTE PTR [rsi],al
   14000cbc8:	rex.WXB xchg r13,rax
   14000cbca:	add    al,0x0
   14000cbcc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cbd0:	ins    DWORD PTR es:[rdi],dx
   14000cbd1:	add    BYTE PTR [rbp+0x0],ah
   14000cbd4:	add    BYTE PTR [rax],al
   14000cbd6:	add    eax,0x73000401
   14000cbdb:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cbdf:	add    BYTE PTR [rdx],dh
   14000cbe1:	add    BYTE PTR [rdx],al
   14000cbe3:	or     eax,0x4010001
   14000cbe8:	rex.B (bad) 
   14000cbea:	push   QWORD PTR [rbx]
   14000cbec:	add    BYTE PTR [rax],al
   14000cbee:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cbf4:	add    BYTE PTR [rcx+0x0],ah
   14000cbf7:	je     0x14000cbf9
   14000cbf9:	(bad)  
   14000cbfa:	add    BYTE PTR [rax],al
   14000cbfc:	add    BYTE PTR [rbx],bl
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	add    BYTE PTR [rsi],al
   14000cc02:	rex.WXB xchg r13,rax
   14000cc04:	add    al,0x0
   14000cc06:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cc0a:	ins    DWORD PTR es:[rdi],dx
   14000cc0b:	add    BYTE PTR [rbp+0x0],ah
   14000cc0e:	add    BYTE PTR [rax],al
   14000cc10:	add    eax,0x6e000401
   14000cc15:	add    BYTE PTR [rbp+0x0],dh
   14000cc18:	ins    DWORD PTR es:[rdi],dx
   14000cc19:	add    BYTE PTR [rcx],dh
   14000cc1b:	add    BYTE PTR [rdx],al
   14000cc1d:	or     eax,0x4080002
   14000cc22:	rex.B (bad) 
   14000cc24:	push   QWORD PTR [rbx]
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cc2e:	add    BYTE PTR [rcx+0x0],ah
   14000cc31:	je     0x14000cc33
   14000cc33:	(bad)  
   14000cc34:	add    BYTE PTR [rax],al
   14000cc36:	add    BYTE PTR [rbx],bl
   14000cc38:	add    BYTE PTR [rax],al
   14000cc3a:	add    BYTE PTR [rsi],al
   14000cc3c:	rex.WXB xchg r13,rax
   14000cc3e:	add    al,0x0
   14000cc40:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cc44:	ins    DWORD PTR es:[rdi],dx
   14000cc45:	add    BYTE PTR [rbp+0x0],ah
   14000cc48:	add    BYTE PTR [rax],al
   14000cc4a:	add    eax,0x6e000401
   14000cc4f:	add    BYTE PTR [rbp+0x0],dh
   14000cc52:	ins    DWORD PTR es:[rdi],dx
   14000cc53:	add    BYTE PTR [rdx],dh
   14000cc55:	add    BYTE PTR [rdx],al
   14000cc57:	or     eax,0x4080003
   14000cc5c:	add    al,0x0
   14000cc5e:	add    BYTE PTR [rax],al
   14000cc60:	add    BYTE PTR [rax],al
   14000cc62:	add    BYTE PTR [rax],al
   14000cc64:	add    DWORD PTR [rcx],eax
	...
   14000cc6e:	add    BYTE PTR [rax],al
   14000cc70:	fadd   DWORD PTR [rax+rax*1]
   14000cc73:	add    BYTE PTR [rax],al
   14000cc75:	add    BYTE PTR [rax],al
   14000cc77:	add    BYTE PTR [rcx],al
   14000cc79:	add    DWORD PTR [rax],eax
	...
   14000cc83:	add    al,ch
   14000cc85:	add    al,0x0
   14000cc87:	add    BYTE PTR [rax],al
   14000cc89:	add    BYTE PTR [rax],al
   14000cc8b:	add    BYTE PTR [rax],cl
   14000cc8d:	or     BYTE PTR [rax],al
	...
   14000cc97:	add    al,bh
   14000cc99:	add    al,0x0
   14000cc9b:	add    BYTE PTR [rax],al
   14000cc9d:	add    BYTE PTR [rax],al
   14000cc9f:	add    BYTE PTR [rax],cl
   14000cca1:	or     BYTE PTR [rax],al
	...
   14000ccab:	add    BYTE PTR [rax],cl
   14000ccad:	add    eax,0x100000
   14000ccb2:	add    BYTE PTR [rax],al
   14000ccb4:	jae    0x14000ccb6
   14000ccb6:	je     0x14000ccb8
   14000ccb8:	jb     0x14000ccba
   14000ccba:	xor    DWORD PTR [rax],eax
   14000ccbc:	add    BYTE PTR [rax],al
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	adc    BYTE PTR [rax],al
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	jae    0x14000ccc6
   14000ccc6:	je     0x14000ccc8
   14000ccc8:	jb     0x14000ccca
   14000ccca:	xor    al,BYTE PTR [rax]
   14000cccc:	add    BYTE PTR [rax],al
   14000ccce:	add    BYTE PTR [rax],al
   14000ccd0:	adc    BYTE PTR [rax],al
   14000ccd2:	add    BYTE PTR [rax],al
   14000ccd4:	outs   dx,BYTE PTR ds:[rsi]
   14000ccd5:	add    BYTE PTR [rbp+0x0],dh
   14000ccd8:	ins    DWORD PTR es:[rdi],dx
   14000ccd9:	add    BYTE PTR [rcx],dh
   14000ccdb:	add    BYTE PTR [rax],al
   14000ccdd:	add    BYTE PTR [rax],al
   14000ccdf:	add    BYTE PTR [rax],dl
   14000cce1:	add    BYTE PTR [rax],al
   14000cce3:	add    BYTE PTR [rsi+0x0],ch
   14000cce6:	jne    0x14000cce8
   14000cce8:	ins    DWORD PTR es:[rdi],dx
   14000cce9:	add    BYTE PTR [rdx],dh
   14000cceb:	add    BYTE PTR [rax],al
   14000cced:	add    BYTE PTR [rax],al
   14000ccef:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000ccf3:	push   rax
   14000ccf4:	enter  0x1,0x0
   14000ccf8:	add    al,0x0
   14000ccfa:	add    BYTE PTR [rax],al
   14000ccfc:	add    al,0x0
   14000ccfe:	add    BYTE PTR [rax],al
   14000cd00:	push   rax
   14000cd01:	(bad)  
   14000cd02:	add    BYTE PTR [rax],al
   14000cd04:	add    DWORD PTR [rax],eax
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	jg     0x14000cd53
   14000cd0a:	out    dx,eax
   14000cd0b:	outs   dx,BYTE PTR ds:[rsi]
   14000cd0c:	rex.WXB mov r12b,0xba
   14000cd0f:	stos   BYTE PTR es:[rdi],al
   14000cd10:	pushf  
   14000cd11:	mov    al,0xf8
   14000cd13:	push   0x540238eb
   14000cd18:	sgdt   [rcx]
   14000cd1b:	add    BYTE PTR [rcx],al
   14000cd1d:	(bad)  
   14000cd1e:	inc    DWORD PTR [rdx]
   14000cd20:	add    DWORD PTR [rax],eax
   14000cd22:	add    BYTE PTR [rdx+rax*4+0x9],al
   14000cd26:	add    BYTE PTR [rbp+0x0],al
   14000cd29:	jbe    0x14000cd2b
   14000cd2b:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cd2f:	je     0x14000cd31
   14000cd31:	add    BYTE PTR [rcx+0x0],r12b
   14000cd35:	je     0x14000cd37
   14000cd37:	(bad)  
   14000cd38:	add    BYTE PTR [rax],al
   14000cd3a:	add    BYTE PTR [rdx],al
   14000cd3c:	rex.B (bad) 
   14000cd3e:	push   QWORD PTR [rbx]
   14000cd40:	add    BYTE PTR [rax],al
   14000cd42:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cd48:	add    BYTE PTR [rcx+0x0],ah
   14000cd4b:	je     0x14000cd4d
   14000cd4d:	(bad)  
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	add    BYTE PTR [rbx],bl
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	add    BYTE PTR [rsi],al
   14000cd56:	rex.WXB xchg r13,rax
   14000cd58:	add    al,0x0
   14000cd5a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cd5e:	ins    DWORD PTR es:[rdi],dx
   14000cd5f:	add    BYTE PTR [rbp+0x0],ah
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	add    eax,0x73000401
   14000cd69:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cd6d:	add    BYTE PTR [rcx],dh
   14000cd6f:	add    BYTE PTR [rdx],al
   14000cd71:	or     eax,0x4010000
   14000cd76:	rex.B (bad) 
   14000cd78:	push   QWORD PTR [rbx]
   14000cd7a:	add    BYTE PTR [rax],al
   14000cd7c:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cd82:	add    BYTE PTR [rcx+0x0],ah
   14000cd85:	je     0x14000cd87
   14000cd87:	(bad)  
   14000cd88:	add    BYTE PTR [rax],al
   14000cd8a:	add    BYTE PTR [rbx],bl
   14000cd8c:	add    BYTE PTR [rax],al
   14000cd8e:	add    BYTE PTR [rsi],al
   14000cd90:	rex.WXB xchg r13,rax
   14000cd92:	add    al,0x0
   14000cd94:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cd98:	ins    DWORD PTR es:[rdi],dx
   14000cd99:	add    BYTE PTR [rbp+0x0],ah
   14000cd9c:	add    BYTE PTR [rax],al
   14000cd9e:	add    eax,0x73000401
   14000cda3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000cda7:	add    BYTE PTR [rdx],dh
   14000cda9:	add    BYTE PTR [rdx],al
   14000cdab:	or     eax,0x4010001
   14000cdb0:	rex.B (bad) 
   14000cdb2:	push   QWORD PTR [rbx]
   14000cdb4:	add    BYTE PTR [rax],al
   14000cdb6:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cdbc:	add    BYTE PTR [rcx+0x0],ah
   14000cdbf:	je     0x14000cdc1
   14000cdc1:	(bad)  
   14000cdc2:	add    BYTE PTR [rax],al
   14000cdc4:	add    BYTE PTR [rbx],bl
   14000cdc6:	add    BYTE PTR [rax],al
   14000cdc8:	add    BYTE PTR [rsi],al
   14000cdca:	rex.WXB xchg r13,rax
   14000cdcc:	add    al,0x0
   14000cdce:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cdd2:	ins    DWORD PTR es:[rdi],dx
   14000cdd3:	add    BYTE PTR [rbp+0x0],ah
   14000cdd6:	add    BYTE PTR [rax],al
   14000cdd8:	add    eax,0x6e000401
   14000cddd:	add    BYTE PTR [rbp+0x0],dh
   14000cde0:	ins    DWORD PTR es:[rdi],dx
   14000cde1:	add    BYTE PTR [rcx],dh
   14000cde3:	add    BYTE PTR [rdx],al
   14000cde5:	or     eax,0x4080002
   14000cdea:	rex.B (bad) 
   14000cdec:	push   QWORD PTR [rbx]
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cdf6:	add    BYTE PTR [rcx+0x0],ah
   14000cdf9:	je     0x14000cdfb
   14000cdfb:	(bad)  
   14000cdfc:	add    BYTE PTR [rax],al
   14000cdfe:	add    BYTE PTR [rbx],bl
   14000ce00:	add    BYTE PTR [rax],al
   14000ce02:	add    BYTE PTR [rsi],al
   14000ce04:	rex.WXB xchg r13,rax
   14000ce06:	add    al,0x0
   14000ce08:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000ce0c:	ins    DWORD PTR es:[rdi],dx
   14000ce0d:	add    BYTE PTR [rbp+0x0],ah
   14000ce10:	add    BYTE PTR [rax],al
   14000ce12:	add    eax,0x6e000401
   14000ce17:	add    BYTE PTR [rbp+0x0],dh
   14000ce1a:	ins    DWORD PTR es:[rdi],dx
   14000ce1b:	add    BYTE PTR [rdx],dh
   14000ce1d:	add    BYTE PTR [rdx],al
   14000ce1f:	or     eax,0x4070003
   14000ce24:	add    al,0x0
   14000ce26:	add    BYTE PTR [rax],al
   14000ce28:	add    BYTE PTR [rax],al
   14000ce2a:	add    BYTE PTR [rax],al
   14000ce2c:	add    DWORD PTR [rcx],eax
	...
   14000ce36:	add    BYTE PTR [rax],al
   14000ce38:	movabs al,ds:0x100000000000006
   14000ce41:	add    DWORD PTR [rax],eax
	...
   14000ce4b:	add    BYTE PTR [rax+0x6],dh
   14000ce51:	add    BYTE PTR [rax],al
   14000ce53:	add    BYTE PTR [rax],cl
   14000ce55:	or     BYTE PTR [rax],al
	...
   14000ce5f:	add    al,al
   14000ce61:	(bad)  
   14000ce62:	add    BYTE PTR [rax],al
   14000ce64:	add    BYTE PTR [rax],al
   14000ce66:	add    BYTE PTR [rax],al
   14000ce68:	(bad)  
   14000ce69:	and    BYTE PTR [rax],al
	...
   14000ce73:	add    al,dl
   14000ce75:	(bad)  
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	adc    BYTE PTR [rax],al
   14000ce7a:	add    BYTE PTR [rax],al
   14000ce7c:	jae    0x14000ce7e
   14000ce7e:	je     0x14000ce80
   14000ce80:	jb     0x14000ce82
   14000ce82:	xor    DWORD PTR [rax],eax
   14000ce84:	add    BYTE PTR [rax],al
   14000ce86:	add    BYTE PTR [rax],al
   14000ce88:	adc    BYTE PTR [rax],al
   14000ce8a:	add    BYTE PTR [rax],al
   14000ce8c:	jae    0x14000ce8e
   14000ce8e:	je     0x14000ce90
   14000ce90:	jb     0x14000ce92
   14000ce92:	xor    al,BYTE PTR [rax]
   14000ce94:	add    BYTE PTR [rax],al
   14000ce96:	add    BYTE PTR [rax],al
   14000ce98:	adc    BYTE PTR [rax],al
   14000ce9a:	add    BYTE PTR [rax],al
   14000ce9c:	outs   dx,BYTE PTR ds:[rsi]
   14000ce9d:	add    BYTE PTR [rbp+0x0],dh
   14000cea0:	ins    DWORD PTR es:[rdi],dx
   14000cea1:	add    BYTE PTR [rcx],dh
   14000cea3:	add    BYTE PTR [rax],al
   14000cea5:	add    BYTE PTR [rax],al
   14000cea7:	add    BYTE PTR [rax],dl
   14000cea9:	add    BYTE PTR [rax],al
   14000ceab:	add    BYTE PTR [rsi+0x0],ch
   14000ceae:	jne    0x14000ceb0
   14000ceb0:	ins    DWORD PTR es:[rdi],dx
   14000ceb1:	add    BYTE PTR [rdx],dh
   14000ceb3:	add    BYTE PTR [rax],al
   14000ceb5:	add    BYTE PTR [rax],al
   14000ceb7:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000cebb:	push   rax
   14000cebc:	lods   al,BYTE PTR ds:[rsi]
   14000cebd:	add    BYTE PTR [rax],al
   14000cebf:	add    BYTE PTR [rcx],al
   14000cec1:	add    BYTE PTR [rax],al
   14000cec3:	add    BYTE PTR [rcx],al
   14000cec5:	add    BYTE PTR [rax],al
   14000cec7:	add    BYTE PTR [rax+0x7],ch
   14000ceca:	add    BYTE PTR [rax],al
   14000cecc:	add    DWORD PTR [rax],eax
   14000cece:	add    BYTE PTR [rax],al
   14000ced0:	ret    0x6981
   14000ced3:	jae    0x14000cf3d
   14000ced5:	(bad)  
   14000ced6:	and    dh,BYTE PTR [rax-0x6e3a28d9]
   14000cedc:	je     0x14000cf2e
   14000cede:	in     eax,0x1b
   14000cee0:	sgdt   [rcx]
   14000cee3:	add    BYTE PTR [rcx],al
   14000cee5:	(bad)  
   14000cee6:	call   QWORD PTR [rax+rax*1+0x0]
   14000ceea:	add    BYTE PTR [rdx+rax*4+0x9],al
   14000ceee:	add    BYTE PTR [rbp+0x0],al
   14000cef1:	jbe    0x14000cef3
   14000cef3:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cef7:	je     0x14000cef9
   14000cef9:	add    BYTE PTR [rcx+0x0],r12b
   14000cefd:	je     0x14000ceff
   14000ceff:	(bad)  
   14000cf00:	add    BYTE PTR [rax],al
   14000cf02:	add    BYTE PTR [rdx],al
   14000cf04:	rex.B (bad) 
   14000cf06:	push   QWORD PTR [rbx]
   14000cf08:	add    BYTE PTR [rax],al
   14000cf0a:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cf10:	add    BYTE PTR [rcx+0x0],ah
   14000cf13:	je     0x14000cf15
   14000cf15:	(bad)  
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	add    BYTE PTR [rbx],bl
   14000cf1a:	add    BYTE PTR [rax],al
   14000cf1c:	add    BYTE PTR [rsi],al
   14000cf1e:	rex.WXB xchg r13,rax
   14000cf20:	add    al,0x0
   14000cf22:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cf26:	ins    DWORD PTR es:[rdi],dx
   14000cf27:	add    BYTE PTR [rbp+0x0],ah
   14000cf2a:	add    BYTE PTR [rax],al
   14000cf2c:	add    eax,0x6e000401
   14000cf31:	add    BYTE PTR [rbp+0x0],dh
   14000cf34:	ins    DWORD PTR es:[rdi],dx
   14000cf35:	add    BYTE PTR [rcx],dh
   14000cf37:	add    BYTE PTR [rdx],al
   14000cf39:	or     eax,0x4070000
   14000cf3e:	add    al,0x0
   14000cf40:	add    BYTE PTR [rax],al
   14000cf42:	add    BYTE PTR [rax],al
   14000cf44:	(bad)  
   14000cf45:	and    BYTE PTR [rax],al
	...
   14000cf4f:	add    BYTE PTR [rdi+rax*1+0x0],bh
   14000cf53:	add    BYTE PTR [rax],dl
   14000cf55:	add    BYTE PTR [rax],al
   14000cf57:	add    BYTE PTR [rsi+0x0],ch
   14000cf5a:	jne    0x14000cf5c
   14000cf5c:	ins    DWORD PTR es:[rdi],dx
   14000cf5d:	add    BYTE PTR [rcx],dh
   14000cf5f:	add    BYTE PTR [rax],al
   14000cf61:	add    BYTE PTR [rax],al
   14000cf63:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000cf67:	push   rax
   14000cf68:	lods   al,BYTE PTR ds:[rsi]
   14000cf69:	add    BYTE PTR [rax],al
   14000cf6b:	add    BYTE PTR [rcx],al
   14000cf6d:	add    BYTE PTR [rax],al
   14000cf6f:	add    BYTE PTR [rcx],al
   14000cf71:	add    BYTE PTR [rax],al
   14000cf73:	add    BYTE PTR [rax+rcx*1],dl
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	add    DWORD PTR [rax],eax
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	ret    0x6981
   14000cf7f:	jae    0x14000cfe9
   14000cf81:	(bad)  
   14000cf82:	and    dh,BYTE PTR [rax-0x6e3a28d9]
   14000cf88:	je     0x14000cfda
   14000cf8a:	in     eax,0x1b
   14000cf8c:	sgdt   [rcx]
   14000cf8f:	add    BYTE PTR [rcx],al
   14000cf91:	(bad)  
   14000cf92:	call   QWORD PTR [rax+rax*1+0x0]
   14000cf96:	add    BYTE PTR [rdx+rax*4+0x9],al
   14000cf9a:	add    BYTE PTR [rbp+0x0],al
   14000cf9d:	jbe    0x14000cf9f
   14000cf9f:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cfa3:	je     0x14000cfa5
   14000cfa5:	add    BYTE PTR [rcx+0x0],r12b
   14000cfa9:	je     0x14000cfab
   14000cfab:	(bad)  
   14000cfac:	add    BYTE PTR [rax],al
   14000cfae:	add    BYTE PTR [rdx],al
   14000cfb0:	rex.B (bad) 
   14000cfb2:	push   QWORD PTR [rbx]
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	add    BYTE PTR [rdx+0x4400046f],cl
   14000cfbc:	add    BYTE PTR [rcx+0x0],ah
   14000cfbf:	je     0x14000cfc1
   14000cfc1:	(bad)  
   14000cfc2:	add    BYTE PTR [rax],al
   14000cfc4:	add    BYTE PTR [rbx],bl
   14000cfc6:	add    BYTE PTR [rax],al
   14000cfc8:	add    BYTE PTR [rsi],al
   14000cfca:	rex.WXB xchg r13,rax
   14000cfcc:	add    al,0x0
   14000cfce:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000cfd2:	ins    DWORD PTR es:[rdi],dx
   14000cfd3:	add    BYTE PTR [rbp+0x0],ah
   14000cfd6:	add    BYTE PTR [rax],al
   14000cfd8:	add    eax,0x6e000401
   14000cfdd:	add    BYTE PTR [rbp+0x0],dh
   14000cfe0:	ins    DWORD PTR es:[rdi],dx
   14000cfe1:	add    BYTE PTR [rcx],dh
   14000cfe3:	add    BYTE PTR [rdx],al
   14000cfe5:	or     eax,0x4070000
   14000cfea:	add    al,0x0
   14000cfec:	add    BYTE PTR [rax],al
   14000cfee:	add    BYTE PTR [rax],al
   14000cff0:	(bad)  
   14000cff1:	and    BYTE PTR [rax],al
	...
   14000cffb:	add    BYTE PTR [rax],ch
   14000cffd:	or     BYTE PTR [rax],al
   14000cfff:	add    BYTE PTR [rax],dl
   14000d001:	add    BYTE PTR [rax],al
   14000d003:	add    BYTE PTR [rsi+0x0],ch
   14000d006:	jne    0x14000d008
   14000d008:	ins    DWORD PTR es:[rdi],dx
   14000d009:	add    BYTE PTR [rcx],dh
   14000d00b:	add    BYTE PTR [rax],al
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rdi+0x50],cl
   14000d012:	rex.XB
   14000d013:	rex.WRXB xor BYTE PTR [r8],r8b
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    DWORD PTR [rax],eax
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    DWORD PTR [rax],eax
   14000d020:	add    DWORD PTR [rax],eax
   14000d022:	add    BYTE PTR [rax],dh
   14000d024:	push   rax
   14000d025:	or     BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rax],bl
   14000d029:	add    BYTE PTR [rax],al
   14000d02b:	add    BYTE PTR [rdi+0x0],dh
   14000d02e:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d034:	push   rbx
   14000d035:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000d039:	add    BYTE PTR [rdx+0x0],dh
   14000d03c:	je     0x14000d03e
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	rex.WR
   14000d041:	rex.RB push r14
   14000d043:	rex.WR
   14000d044:	add    BYTE PTR fs:[rax],al
   14000d047:	add    BYTE PTR [rdx],al
   14000d049:	add    BYTE PTR [rax],al
   14000d04b:	add    BYTE PTR [rdx],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rdx],al
   14000d051:	add    BYTE PTR [rax],al
   14000d053:	push   rax
   14000d054:	mov    WORD PTR [rax],cs
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	add    al,0x0
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	add    al,0x0
   14000d05e:	add    BYTE PTR [rax-0x5c],dl
   14000d061:	or     BYTE PTR [rax],al
   14000d063:	add    BYTE PTR [rax],bl
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rdi+0x0],dh
   14000d06a:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d070:	add    BYTE PTR [r10+0x0],r14b
   14000d074:	jb     0x14000d076
   14000d076:	outs   dx,DWORD PTR ds:[rsi]
   14000d077:	add    BYTE PTR [rdx+0x0],dh
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	sub    BYTE PTR [rax],al
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	ja     0x14000d082
   14000d082:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d088:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d08c:	data16 add BYTE PTR [rdi+0x0],ch
   14000d090:	jb     0x14000d092
   14000d092:	ins    DWORD PTR es:[rdi],dx
   14000d093:	add    BYTE PTR [rcx+0x0],ah
   14000d096:	je     0x14000d098
   14000d098:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d09e:	(bad)  
   14000d09f:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d0a3:	add    BYTE PTR [rcx+rax*2+0x53],dl
   14000d0a7:	rex.WXB
   14000d0a8:	add    BYTE PTR [rax],r8b
   14000d0ab:	add    BYTE PTR [rcx],al
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0af:	add    al,ch
   14000d0b1:	add    eax,DWORD PTR [rax]
   14000d0b3:	add    al,ch
   14000d0b5:	add    eax,DWORD PTR [rax]
   14000d0b7:	jo     0x14000d0a8
   14000d0b9:	cld    
   14000d0ba:	(bad)
   14000d0bd:	(bad)  
   14000d0be:	fld    DWORD PTR [rdi-0x6e]
   14000d0c1:	mov    cl,0x61
   14000d0c3:	or     ebp,ebx
   14000d0c5:	icebp  
   14000d0c6:	mov    edx,0x8f4ee
   14000d0cb:	add    BYTE PTR [rax+rax*1],bl
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	je     0x14000d0d2
   14000d0d2:	jae    0x14000d0d4
   14000d0d4:	imul   eax,DWORD PTR [rax],0x53
   14000d0d7:	add    BYTE PTR [rax+0x0],ch
   14000d0da:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000d0de:	jne    0x14000d0e0
   14000d0e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d0e1:	add    BYTE PTR [rbx+0x0],ah
   14000d0e4:	push   0x4b000000
   14000d0e9:	rex.RB pop r9
   14000d0eb:	push   rdi
	...
   14000d0f8:	rex.RB push r14
   14000d0fa:	rex.WRX push rsp
   14000d0fc:	and    BYTE PTR [rbx],cl
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	cmp    eax,DWORD PTR [rax]
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	adc    DWORD PTR [rdi],esp
   14000d10a:	add    BYTE PTR [rcx],dl
   14000d10c:	add    al,0x1
   14000d10e:	call   0x14000d116
   14000d113:	add    BYTE PTR [rax],al
   14000d115:	add    BYTE PTR [rax],al
   14000d117:	rex adc DWORD PTR [rdi],esp
   14000d11a:	add    BYTE PTR [rax+0x518],dh
   14000d120:	or     BYTE PTR [rax],r8b
   14000d123:	add    BYTE PTR [rax-0x27fffff8],al
   14000d129:	or     BYTE PTR [rax],al
	...
   14000d133:	add    BYTE PTR [rax+0x12000000],ch
   14000d139:	(bad)  
   14000d13a:	add    BYTE PTR [rcx],dl
   14000d13c:	add    al,BYTE PTR [rcx]
   14000d13e:	call   0x14000d146
   14000d143:	add    BYTE PTR [rax],al
   14000d145:	add    BYTE PTR [rax],al
   14000d147:	adc    spl,BYTE PTR [rdi]
   14000d14a:	add    BYTE PTR [rax+0x518],dh
   14000d150:	or     BYTE PTR [rax],r8b
   14000d153:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d157:	add    al,bl
   14000d159:	or     BYTE PTR [rax],al
	...
   14000d163:	add    BYTE PTR [rax+0x13000000],ch
   14000d169:	(bad)  
   14000d16a:	add    BYTE PTR [rcx],dl
   14000d16c:	add    al,BYTE PTR [rcx]
   14000d16e:	call   0x14000d176
   14000d173:	add    BYTE PTR [rax],al
   14000d175:	add    BYTE PTR [rax],al
   14000d177:	rex adc esp,DWORD PTR [rdi]
   14000d17a:	add    BYTE PTR [rax+0x518],dh
   14000d180:	or     BYTE PTR [rax],r8b
   14000d183:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d187:	add    al,bl
   14000d189:	or     BYTE PTR [rax],al
	...
   14000d193:	add    BYTE PTR [rax+0x14000000],ch
   14000d199:	(bad)  
   14000d19a:	add    BYTE PTR [rcx],dl
   14000d19c:	add    al,BYTE PTR [rcx]
   14000d19e:	call   0x14000d1a6
   14000d1a3:	add    BYTE PTR [rax],al
   14000d1a5:	add    BYTE PTR [rax],al
   14000d1a7:	adc    al,0x27
   14000d1aa:	add    BYTE PTR [rax+0x518],dh
   14000d1b0:	or     BYTE PTR [rax],r8b
   14000d1b3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d1b7:	add    al,bl
   14000d1b9:	or     BYTE PTR [rax],al
	...
   14000d1c3:	add    BYTE PTR [rax+0x15000000],ch
   14000d1c9:	(bad)  
   14000d1ca:	add    BYTE PTR [rcx],dl
   14000d1cc:	add    al,BYTE PTR [rcx]
   14000d1ce:	call   0x14000d1d6
   14000d1d3:	add    BYTE PTR [rax],al
   14000d1d5:	add    BYTE PTR [rax],al
   14000d1d7:	rex adc eax,0x18b00027
   14000d1dd:	add    eax,0x8440000
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	je     0x14000d1ee
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	fmul   DWORD PTR [rax]
	...
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	test   al,0x0
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	(bad)  
   14000d1f9:	(bad)  
   14000d1fa:	add    BYTE PTR [rcx],dl
   14000d1fc:	add    al,0x1
   14000d1fe:	call   0x14000d206
   14000d203:	add    BYTE PTR [rax],al
   14000d205:	add    BYTE PTR [rax],al
   14000d207:	rex (bad) 
   14000d209:	(bad)  
   14000d20a:	add    BYTE PTR [rax+0x188],dh
   14000d210:	or     BYTE PTR [rax],r8b
   14000d213:	add    BYTE PTR [rax-0x27fffff8],al
   14000d219:	or     BYTE PTR [rax],al
	...
   14000d223:	add    BYTE PTR [rax+0x17000000],ch
   14000d229:	(bad)  
   14000d22a:	add    BYTE PTR [rcx],dl
   14000d22c:	add    al,0x1
   14000d22e:	call   0x14000d236
   14000d233:	add    BYTE PTR [rax],al
   14000d235:	add    BYTE PTR [rax],al
   14000d237:	rex (bad) 
   14000d239:	(bad)  
   14000d23a:	add    BYTE PTR [rax+0x188],dh
   14000d240:	or     BYTE PTR [rax],r8b
   14000d243:	add    BYTE PTR [rax-0x27fffff8],al
   14000d249:	or     BYTE PTR [rax],al
	...
   14000d253:	add    BYTE PTR [rax+0x18000000],ch
   14000d259:	(bad)  
   14000d25a:	add    BYTE PTR [rcx],dl
   14000d25c:	add    al,BYTE PTR [rcx]
   14000d25e:	call   0x14000d266
   14000d263:	add    BYTE PTR [rax],al
   14000d265:	add    BYTE PTR [rax],al
   14000d267:	sbb    BYTE PTR [rdi],spl
   14000d26a:	add    BYTE PTR [rax+0x518],dh
   14000d270:	or     BYTE PTR [rax],r8b
   14000d273:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d277:	add    al,bl
   14000d279:	or     BYTE PTR [rax],al
	...
   14000d283:	add    BYTE PTR [rax+0x19000000],ch
   14000d289:	(bad)  
   14000d28a:	add    BYTE PTR [rcx],dl
   14000d28c:	add    al,BYTE PTR [rcx]
   14000d28e:	call   0x14000d296
   14000d293:	add    BYTE PTR [rax],al
   14000d295:	add    BYTE PTR [rax],al
   14000d297:	rex sbb DWORD PTR [rdi],esp
   14000d29a:	add    BYTE PTR [rax+0x518],dh
   14000d2a0:	or     BYTE PTR [rax],r8b
   14000d2a3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d2a7:	add    al,bl
   14000d2a9:	or     BYTE PTR [rax],al
	...
   14000d2b3:	add    BYTE PTR [rax+0x1a000000],ch
   14000d2b9:	(bad)  
   14000d2ba:	add    BYTE PTR [rcx],dl
   14000d2bc:	add    al,BYTE PTR [rcx]
   14000d2be:	call   0x14000d2c6
   14000d2c3:	add    BYTE PTR [rax],al
   14000d2c5:	add    BYTE PTR [rax],al
   14000d2c7:	sbb    spl,BYTE PTR [rdi]
   14000d2ca:	add    BYTE PTR [rax+0x518],dh
   14000d2d0:	or     BYTE PTR [rax],r8b
   14000d2d3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d2d7:	add    al,bl
   14000d2d9:	or     BYTE PTR [rax],al
	...
   14000d2e3:	add    BYTE PTR [rax+0x1b000000],ch
   14000d2e9:	(bad)  
   14000d2ea:	add    BYTE PTR [rcx],dl
   14000d2ec:	add    al,BYTE PTR [rcx]
   14000d2ee:	call   0x14000d2f6
   14000d2f3:	add    BYTE PTR [rax],al
   14000d2f5:	add    BYTE PTR [rax],al
   14000d2f7:	rex sbb esp,DWORD PTR [rdi]
   14000d2fa:	add    BYTE PTR [rax+0x518],dh
   14000d300:	or     BYTE PTR [rax],r8b
   14000d303:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d307:	add    al,bl
   14000d309:	or     BYTE PTR [rax],al
	...
   14000d313:	add    BYTE PTR [rax+0x1c000000],ch
   14000d319:	(bad)  
   14000d31a:	add    BYTE PTR [rcx],dl
   14000d31c:	add    al,BYTE PTR [rcx]
   14000d31e:	call   0x14000d326
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	sbb    al,0x27
   14000d32a:	add    BYTE PTR [rax+0x518],dh
   14000d330:	or     BYTE PTR [rax],r8b
   14000d333:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d337:	add    al,bl
   14000d339:	or     BYTE PTR [rax],al
	...
   14000d343:	add    BYTE PTR [rax+0x1d000000],ch
   14000d349:	(bad)  
   14000d34a:	add    BYTE PTR [rcx],dl
   14000d34c:	add    al,BYTE PTR [rcx]
   14000d34e:	call   0x14000d356
   14000d353:	add    BYTE PTR [rax],al
   14000d355:	add    BYTE PTR [rax],al
   14000d357:	rex sbb eax,0x18b00027
   14000d35d:	add    eax,0x8440000
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	je     0x14000d36e
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	fmul   DWORD PTR [rax]
	...
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	test   al,0x0
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	(bad)  
   14000d379:	(bad)  
   14000d37a:	add    BYTE PTR [rcx],dl
   14000d37c:	add    al,BYTE PTR [rcx]
   14000d37e:	call   0x14000d386
   14000d383:	add    BYTE PTR [rax],al
   14000d385:	add    BYTE PTR [rax],al
   14000d387:	rex (bad) 
   14000d389:	(bad)  
   14000d38a:	add    BYTE PTR [rax+0x518],dh
   14000d390:	or     BYTE PTR [rax],r8b
   14000d393:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d397:	add    al,bl
   14000d399:	or     BYTE PTR [rax],al
	...
   14000d3a3:	add    BYTE PTR [rax+0x1f000000],ch
   14000d3a9:	(bad)  
   14000d3aa:	add    BYTE PTR [rcx],dl
   14000d3ac:	add    al,BYTE PTR [rcx]
   14000d3ae:	call   0x14000d3b6
   14000d3b3:	add    BYTE PTR [rax],al
   14000d3b5:	add    BYTE PTR [rax],al
   14000d3b7:	rex (bad) 
   14000d3b9:	(bad)  
   14000d3ba:	add    BYTE PTR [rax+0x518],dh
   14000d3c0:	or     BYTE PTR [rax],r8b
   14000d3c3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d3c7:	add    al,bl
   14000d3c9:	or     BYTE PTR [rax],al
	...
   14000d3d3:	add    BYTE PTR [rax+0x20000000],ch
   14000d3d9:	(bad)  
   14000d3da:	add    BYTE PTR [rcx],dl
   14000d3dc:	add    al,0x1
   14000d3de:	call   0x14000d3e6
   14000d3e3:	add    BYTE PTR [rax],al
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	and    BYTE PTR [rdi],spl
   14000d3ea:	add    BYTE PTR [rax+0x188],dh
   14000d3f0:	or     BYTE PTR [rax],r8b
   14000d3f3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d3f9:	or     BYTE PTR [rax],al
	...
   14000d403:	add    BYTE PTR [rax+0x21000000],ch
   14000d409:	(bad)  
   14000d40a:	add    BYTE PTR [rcx],dl
   14000d40c:	add    al,0x1
   14000d40e:	call   0x14000d416
   14000d413:	add    BYTE PTR [rax],al
   14000d415:	add    BYTE PTR [rax],al
   14000d417:	rex and DWORD PTR [rdi],esp
   14000d41a:	add    BYTE PTR [rax+0x188],dh
   14000d420:	or     BYTE PTR [rax],r8b
   14000d423:	add    BYTE PTR [rax-0x27fffff8],al
   14000d429:	or     BYTE PTR [rax],al
	...
   14000d433:	add    BYTE PTR [rax+0x22000000],ch
   14000d439:	(bad)  
   14000d43a:	add    BYTE PTR [rcx],dl
   14000d43c:	add    al,0x1
   14000d43e:	call   0x14000d446
   14000d443:	add    BYTE PTR [rax],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	and    spl,BYTE PTR [rdi]
   14000d44a:	add    BYTE PTR [rax+0x188],dh
   14000d450:	or     BYTE PTR [rax],r8b
   14000d453:	add    BYTE PTR [rax-0x27fffff8],al
   14000d459:	or     BYTE PTR [rax],al
	...
   14000d463:	add    BYTE PTR [rax+0x23000000],ch
   14000d469:	(bad)  
   14000d46a:	add    BYTE PTR [rcx],dl
   14000d46c:	add    al,0x1
   14000d46e:	call   0x14000d476
   14000d473:	add    BYTE PTR [rax],al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	rex and esp,DWORD PTR [rdi]
   14000d47a:	add    BYTE PTR [rax+0x188],dh
   14000d480:	or     BYTE PTR [rax],r8b
   14000d483:	add    BYTE PTR [rax-0x27fffff8],al
   14000d489:	or     BYTE PTR [rax],al
	...
   14000d493:	add    BYTE PTR [rax+0x24000000],ch
   14000d499:	(bad)  
   14000d49a:	add    BYTE PTR [rcx],dl
   14000d49c:	add    al,0x1
   14000d49e:	call   0x14000d4a6
   14000d4a3:	add    BYTE PTR [rax],al
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	and    al,0x27
   14000d4aa:	add    BYTE PTR [rax+0x188],dh
   14000d4b0:	or     BYTE PTR [rax],r8b
   14000d4b3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d4b9:	or     BYTE PTR [rax],al
	...
   14000d4c3:	add    BYTE PTR [rax+0x25000000],ch
   14000d4c9:	(bad)  
   14000d4ca:	add    BYTE PTR [rcx],dl
   14000d4cc:	add    al,0x1
   14000d4ce:	call   0x14000d4d6
   14000d4d3:	add    BYTE PTR [rax],al
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	rex and eax,0x88b00027
   14000d4dd:	add    DWORD PTR [rax],eax
   14000d4df:	add    BYTE PTR [rax+rcx*1+0x0],al
   14000d4e3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d4e9:	or     BYTE PTR [rax],al
	...
   14000d4f3:	add    BYTE PTR [rax+0x26000000],ch
   14000d4f9:	(bad)  
   14000d4fa:	add    BYTE PTR [rcx],dl
   14000d4fc:	add    al,0x1
   14000d4fe:	call   0x14000d506
   14000d503:	add    BYTE PTR [rax],al
   14000d505:	add    BYTE PTR [rax],al
   14000d507:	rex
   14000d508:	es (bad) 
   14000d50a:	add    BYTE PTR [rax+0x350],dh
   14000d510:	or     BYTE PTR [rax],r8b
   14000d513:	add    BYTE PTR [rax-0x27fffff8],al
   14000d519:	or     BYTE PTR [rax],al
	...
   14000d523:	add    BYTE PTR [rax+0x27000000],ch
   14000d529:	(bad)  
   14000d52a:	add    BYTE PTR [rcx],dl
   14000d52c:	add    al,BYTE PTR [rcx]
   14000d52e:	call   0x14000d536
   14000d533:	add    BYTE PTR [rax],al
   14000d535:	add    BYTE PTR [rax],al
   14000d537:	rex (bad) 
   14000d539:	(bad)  
   14000d53a:	add    BYTE PTR [rax+0x518],dh
   14000d540:	or     BYTE PTR [rax],r8b
   14000d543:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d547:	add    al,bl
   14000d549:	or     BYTE PTR [rax],al
	...
   14000d553:	add    BYTE PTR [rax+0x28000000],ch
   14000d559:	(bad)  
   14000d55a:	add    BYTE PTR [rcx],dl
   14000d55c:	add    al,BYTE PTR [rcx]
   14000d55e:	call   0x14000d566
   14000d563:	add    BYTE PTR [rax],al
   14000d565:	add    BYTE PTR [rax],al
   14000d567:	sub    BYTE PTR [rdi],spl
   14000d56a:	add    BYTE PTR [rax+0x78c],dh
   14000d570:	or     BYTE PTR [rax],r8b
   14000d573:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d577:	add    al,bl
   14000d579:	or     BYTE PTR [rax],al
	...
   14000d583:	add    BYTE PTR [rax+0x29000000],ch
   14000d589:	(bad)  
   14000d58a:	add    BYTE PTR [rcx],dl
   14000d58c:	add    al,BYTE PTR [rcx]
   14000d58e:	call   0x14000d596
   14000d593:	add    BYTE PTR [rax],al
   14000d595:	add    BYTE PTR [rax],al
   14000d597:	rex sub DWORD PTR [rdi],esp
   14000d59a:	add    BYTE PTR [rax+0x78c],dh
   14000d5a0:	or     BYTE PTR [rax],r8b
   14000d5a3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d5a7:	add    al,bl
   14000d5a9:	or     BYTE PTR [rax],al
	...
   14000d5b3:	add    BYTE PTR [rax+0x2a000000],ch
   14000d5b9:	(bad)  
   14000d5ba:	add    BYTE PTR [rcx],dl
   14000d5bc:	add    al,0x1
   14000d5be:	call   0x14000d5c6
   14000d5c3:	add    BYTE PTR [rax],al
   14000d5c5:	add    BYTE PTR [rax],al
   14000d5c7:	sub    spl,BYTE PTR [rdi]
   14000d5ca:	add    BYTE PTR [rax+0x6e0],dh
   14000d5d0:	or     BYTE PTR [rax],r8b
   14000d5d3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d5d9:	or     BYTE PTR [rax],al
	...
   14000d5e3:	add    BYTE PTR [rax+0x2b000000],ch
   14000d5e9:	(bad)  
   14000d5ea:	add    BYTE PTR [rcx],dl
   14000d5ec:	add    al,BYTE PTR [rcx]
   14000d5ee:	call   0x14000d5f6
   14000d5f3:	add    BYTE PTR [rax],al
   14000d5f5:	add    BYTE PTR [rax],al
   14000d5f7:	rex sub esp,DWORD PTR [rdi]
   14000d5fa:	add    BYTE PTR [rax+0x518],dh
   14000d600:	or     BYTE PTR [rax],r8b
   14000d603:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d607:	add    al,bl
   14000d609:	or     BYTE PTR [rax],al
	...
   14000d613:	add    BYTE PTR [rax+0x2c000000],ch
   14000d619:	(bad)  
   14000d61a:	add    BYTE PTR [rcx],dl
   14000d61c:	add    al,BYTE PTR [rcx]
   14000d61e:	call   0x14000d626
   14000d623:	add    BYTE PTR [rax],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	sub    al,0x27
   14000d62a:	add    BYTE PTR [rax+0x518],dh
   14000d630:	or     BYTE PTR [rax],r8b
   14000d633:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d637:	add    al,bl
   14000d639:	or     BYTE PTR [rax],al
	...
   14000d643:	add    BYTE PTR [rax+0x2d000000],ch
   14000d649:	(bad)  
   14000d64a:	add    BYTE PTR [rcx],dl
   14000d64c:	add    al,BYTE PTR [rcx]
   14000d64e:	call   0x14000d656
   14000d653:	add    BYTE PTR [rax],al
   14000d655:	add    BYTE PTR [rax],al
   14000d657:	rex sub eax,0x18b00027
   14000d65d:	add    eax,0x8440000
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	je     0x14000d66e
   14000d666:	add    BYTE PTR [rax],al
   14000d668:	fmul   DWORD PTR [rax]
	...
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	test   al,0x0
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	cs (bad) 
   14000d67a:	add    BYTE PTR [rcx],dl
   14000d67c:	add    al,BYTE PTR [rcx]
   14000d67e:	call   0x14000d686
   14000d683:	add    BYTE PTR [rax],al
   14000d685:	add    BYTE PTR [rax],al
   14000d687:	rex
   14000d688:	cs (bad) 
   14000d68a:	add    BYTE PTR [rax+0x518],dh
   14000d690:	or     BYTE PTR [rax],r8b
   14000d693:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d697:	add    al,bl
   14000d699:	or     BYTE PTR [rax],al
	...
   14000d6a3:	add    BYTE PTR [rax+0x2f000000],ch
   14000d6a9:	(bad)  
   14000d6aa:	add    BYTE PTR [rcx],dl
   14000d6ac:	add    al,0x1
   14000d6ae:	call   0x14000d6b6
   14000d6b3:	add    BYTE PTR [rax],al
   14000d6b5:	add    BYTE PTR [rax],al
   14000d6b7:	rex (bad) 
   14000d6b9:	(bad)  
   14000d6ba:	add    BYTE PTR [rax+0x350],dh
   14000d6c0:	or     BYTE PTR [rax],r8b
   14000d6c3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d6c9:	or     BYTE PTR [rax],al
	...
   14000d6d3:	add    BYTE PTR [rax+0x30000000],ch
   14000d6d9:	(bad)  
   14000d6da:	add    BYTE PTR [rcx],dl
   14000d6dc:	add    al,0x1
   14000d6de:	call   0x14000d6e6
   14000d6e3:	add    BYTE PTR [rax],al
   14000d6e5:	add    BYTE PTR [rax],al
   14000d6e7:	xor    BYTE PTR [rdi],spl
   14000d6ea:	add    BYTE PTR [rax+0x350],dh
   14000d6f0:	or     BYTE PTR [rax],r8b
   14000d6f3:	add    BYTE PTR [rax-0x27fffff8],al
   14000d6f9:	or     BYTE PTR [rax],al
	...
   14000d703:	add    BYTE PTR [rax+0x31000000],ch
   14000d709:	(bad)  
   14000d70a:	add    BYTE PTR [rcx],dl
   14000d70c:	add    al,0x1
   14000d70e:	call   0x14000d716
   14000d713:	add    BYTE PTR [rax],al
   14000d715:	add    BYTE PTR [rax],al
   14000d717:	rex xor DWORD PTR [rdi],esp
   14000d71a:	add    BYTE PTR [rax+0x350],dh
   14000d720:	or     BYTE PTR [rax],r8b
   14000d723:	add    BYTE PTR [rax-0x27fffff8],al
   14000d729:	or     BYTE PTR [rax],al
	...
   14000d733:	add    BYTE PTR [rax+0x32000000],ch
   14000d739:	(bad)  
   14000d73a:	add    BYTE PTR [rcx],dl
   14000d73c:	add    al,BYTE PTR [rcx]
   14000d73e:	call   0x14000d746
   14000d743:	add    BYTE PTR [rax],al
   14000d745:	add    BYTE PTR [rax],al
   14000d747:	xor    spl,BYTE PTR [rdi]
   14000d74a:	add    BYTE PTR [rax+0x350],dh
   14000d750:	or     BYTE PTR [rax],r8b
   14000d753:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d757:	add    al,bl
   14000d759:	or     BYTE PTR [rax],al
	...
   14000d763:	add    BYTE PTR [rax+0x33000000],ch
   14000d769:	(bad)  
   14000d76a:	add    BYTE PTR [rcx],dl
   14000d76c:	add    al,BYTE PTR [rcx]
   14000d76e:	call   0x14000d776
   14000d773:	add    BYTE PTR [rax],al
   14000d775:	add    BYTE PTR [rax],al
   14000d777:	rex xor esp,DWORD PTR [rdi]
   14000d77a:	add    BYTE PTR [rax+0x518],dh
   14000d780:	or     BYTE PTR [rax],r8b
   14000d783:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d787:	add    al,bl
   14000d789:	or     BYTE PTR [rax],al
	...
   14000d793:	add    BYTE PTR [rax+0x34000000],ch
   14000d799:	(bad)  
   14000d79a:	add    BYTE PTR [rcx],dl
   14000d79c:	add    al,BYTE PTR [rcx]
   14000d79e:	call   0x14000d7a6
   14000d7a3:	add    BYTE PTR [rax],al
   14000d7a5:	add    BYTE PTR [rax],al
   14000d7a7:	xor    al,0x27
   14000d7aa:	add    BYTE PTR [rax+0x518],dh
   14000d7b0:	or     BYTE PTR [rax],r8b
   14000d7b3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d7b7:	add    al,bl
   14000d7b9:	or     BYTE PTR [rax],al
	...
   14000d7c3:	add    BYTE PTR [rax+0x35000000],ch
   14000d7c9:	(bad)  
   14000d7ca:	add    BYTE PTR [rcx],dl
   14000d7cc:	add    al,0x1
   14000d7ce:	call   0x14000d7d6
   14000d7d3:	add    BYTE PTR [rax],al
   14000d7d5:	add    BYTE PTR [rax],al
   14000d7d7:	rex xor eax,0x18b00027
   14000d7dd:	add    eax,0x8440000
   14000d7e2:	add    BYTE PTR [rax],al
   14000d7e4:	or     BYTE PTR [rax],0x0
   14000d7e7:	add    al,bl
   14000d7e9:	or     BYTE PTR [rax],al
	...
   14000d7f3:	add    BYTE PTR [rax+0x36000000],ch
   14000d7f9:	(bad)  
   14000d7fa:	add    BYTE PTR [rcx],dl
   14000d7fc:	add    al,0x1
   14000d7fe:	call   0x14000d806
   14000d803:	add    BYTE PTR [rax],al
   14000d805:	add    BYTE PTR [rax],al
   14000d807:	rex
   14000d808:	ss (bad) 
   14000d80a:	add    BYTE PTR [rax+0x518],dh
   14000d810:	or     BYTE PTR [rax],r8b
   14000d813:	add    BYTE PTR [rax-0x27fffff8],al
   14000d819:	or     BYTE PTR [rax],al
	...
   14000d823:	add    BYTE PTR [rax+0x37000000],ch
   14000d829:	(bad)  
   14000d82a:	add    BYTE PTR [rcx],dl
   14000d82c:	add    al,BYTE PTR [rcx]
   14000d82e:	call   0x14000d836
   14000d833:	add    BYTE PTR [rax],al
   14000d835:	add    BYTE PTR [rax],al
   14000d837:	rex (bad) 
   14000d839:	(bad)  
   14000d83a:	add    BYTE PTR [rax+0x518],dh
   14000d840:	or     BYTE PTR [rax],r8b
   14000d843:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d847:	add    al,bl
   14000d849:	or     BYTE PTR [rax],al
	...
   14000d853:	add    BYTE PTR [rax+0x38000000],ch
   14000d859:	(bad)  
   14000d85a:	add    BYTE PTR [rcx],dl
   14000d85c:	add    al,BYTE PTR [rcx]
   14000d85e:	call   0x14000d866
   14000d863:	add    BYTE PTR [rax],al
   14000d865:	add    BYTE PTR [rax],al
   14000d867:	cmp    BYTE PTR [rdi],spl
   14000d86a:	add    BYTE PTR [rax+0x518],dh
   14000d870:	or     BYTE PTR [rax],r8b
   14000d873:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d877:	add    al,bl
   14000d879:	or     BYTE PTR [rax],al
	...
   14000d883:	add    BYTE PTR [rax+0x39000000],ch
   14000d889:	(bad)  
   14000d88a:	add    BYTE PTR [rcx],dl
   14000d88c:	add    al,BYTE PTR [rcx]
   14000d88e:	call   0x14000d896
   14000d893:	add    BYTE PTR [rax],al
   14000d895:	add    BYTE PTR [rax],al
   14000d897:	rex cmp DWORD PTR [rdi],esp
   14000d89a:	add    BYTE PTR [rax+0x518],dh
   14000d8a0:	or     BYTE PTR [rax],r8b
   14000d8a3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d8a7:	add    al,bl
   14000d8a9:	or     BYTE PTR [rax],al
	...
   14000d8b3:	add    BYTE PTR [rax+0x3a000000],ch
   14000d8b9:	(bad)  
   14000d8ba:	add    BYTE PTR [rcx],dl
   14000d8bc:	add    al,BYTE PTR [rcx]
   14000d8be:	call   0x14000d8c6
   14000d8c3:	add    BYTE PTR [rax],al
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	cmp    spl,BYTE PTR [rdi]
   14000d8ca:	add    BYTE PTR [rax+0x518],dh
   14000d8d0:	or     BYTE PTR [rax],r8b
   14000d8d3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d8d7:	add    al,bl
   14000d8d9:	or     BYTE PTR [rax],al
	...
   14000d8e3:	add    BYTE PTR [rax+0x3b000000],ch
   14000d8e9:	(bad)  
   14000d8ea:	add    BYTE PTR [rcx],dl
   14000d8ec:	add    al,0x1
   14000d8ee:	call   0x14000d8f6
   14000d8f3:	add    BYTE PTR [rax],al
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	rex cmp esp,DWORD PTR [rdi]
   14000d8fa:	add    BYTE PTR [rax+0x350],dh
   14000d900:	or     BYTE PTR [rax],r8b
   14000d903:	add    BYTE PTR [rax-0x27fffff8],al
   14000d909:	or     BYTE PTR [rax],al
	...
   14000d913:	add    BYTE PTR [rax+0x3c000000],ch
   14000d919:	(bad)  
   14000d91a:	add    BYTE PTR [rcx],dl
   14000d91c:	add    al,0x1
   14000d91e:	call   0x14000d926
   14000d923:	add    BYTE PTR [rax],al
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	cmp    al,0x27
   14000d92a:	add    BYTE PTR [rax+0x518],dh
   14000d930:	or     BYTE PTR [rax],r8b
   14000d933:	add    BYTE PTR [rax-0x27fffff8],al
   14000d939:	or     BYTE PTR [rax],al
	...
   14000d943:	add    BYTE PTR [rax+0x3d000000],ch
   14000d949:	(bad)  
   14000d94a:	add    BYTE PTR [rcx],dl
   14000d94c:	add    al,BYTE PTR [rcx]
   14000d94e:	call   0x14000d956
   14000d953:	add    BYTE PTR [rax],al
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	rex cmp eax,0x18b00027
   14000d95d:	add    eax,0x8440000
   14000d962:	add    BYTE PTR [rax],al
   14000d964:	je     0x14000d96e
   14000d966:	add    BYTE PTR [rax],al
   14000d968:	fmul   DWORD PTR [rax]
	...
   14000d972:	add    BYTE PTR [rax],al
   14000d974:	test   al,0x0
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	ds (bad) 
   14000d97a:	add    BYTE PTR [rcx],dl
   14000d97c:	add    al,BYTE PTR [rcx]
   14000d97e:	call   0x14000d986
   14000d983:	add    BYTE PTR [rax],al
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	rex
   14000d988:	ds (bad) 
   14000d98a:	add    BYTE PTR [rax+0x518],dh
   14000d990:	or     BYTE PTR [rax],r8b
   14000d993:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d997:	add    al,bl
   14000d999:	or     BYTE PTR [rax],al
	...
   14000d9a3:	add    BYTE PTR [rax+0x3f000000],ch
   14000d9a9:	(bad)  
   14000d9aa:	add    BYTE PTR [rcx],dl
   14000d9ac:	add    al,BYTE PTR [rcx]
   14000d9ae:	call   0x14000d9b6
   14000d9b3:	add    BYTE PTR [rax],al
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	rex (bad) 
   14000d9b9:	(bad)  
   14000d9ba:	add    BYTE PTR [rax+0x78c],dh
   14000d9c0:	or     BYTE PTR [rax],r8b
   14000d9c3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d9c7:	add    al,bl
   14000d9c9:	or     BYTE PTR [rax],al
	...
   14000d9d3:	add    BYTE PTR [rax+0x40000000],ch
   14000d9d9:	(bad)  
   14000d9da:	add    BYTE PTR [rcx],dl
   14000d9dc:	add    al,BYTE PTR [rcx]
   14000d9de:	call   0x14000d9e6
   14000d9e3:	add    BYTE PTR [rax],al
   14000d9e5:	add    BYTE PTR [rax],al
   14000d9e7:	rex
   14000d9e8:	rex (bad) 
   14000d9ea:	add    BYTE PTR [rax+0x518],dh
   14000d9f0:	or     BYTE PTR [rax],r8b
   14000d9f3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000d9f7:	add    al,bl
   14000d9f9:	or     BYTE PTR [rax],al
	...
   14000da03:	add    BYTE PTR [rax+0x41000000],ch
   14000da09:	(bad)  
   14000da0a:	add    BYTE PTR [rcx],dl
   14000da0c:	add    al,0x1
   14000da0e:	call   0x14000da16
   14000da13:	add    BYTE PTR [rax],al
   14000da15:	add    BYTE PTR [rax],al
   14000da17:	rex
   14000da18:	rex.B (bad) 
   14000da1a:	add    BYTE PTR [rax+0x6e0],dh
   14000da20:	or     BYTE PTR [rax],r8b
   14000da23:	add    BYTE PTR [rax-0x27fffff8],al
   14000da29:	or     BYTE PTR [rax],al
	...
   14000da33:	add    BYTE PTR [rax+0x42000000],ch
   14000da39:	(bad)  
   14000da3a:	add    BYTE PTR [rcx],dl
   14000da3c:	add    al,0x1
   14000da3e:	call   0x14000da46
   14000da43:	add    BYTE PTR [rax],al
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	rex
   14000da48:	rex.X (bad) 
   14000da4a:	add    BYTE PTR [rax+0x188],dh
   14000da50:	or     BYTE PTR [rax],r8b
   14000da53:	add    BYTE PTR [rax-0x27fffff8],al
   14000da59:	or     BYTE PTR [rax],al
	...
   14000da63:	add    BYTE PTR [rax+0x43000000],ch
   14000da69:	(bad)  
   14000da6a:	add    BYTE PTR [rcx],dl
   14000da6c:	add    al,0x1
   14000da6e:	call   0x14000da76
   14000da73:	add    BYTE PTR [rax],al
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	rex
   14000da78:	rex.XB (bad) 
   14000da7a:	add    BYTE PTR [rax+0x188],dh
   14000da80:	or     BYTE PTR [rax],r8b
   14000da83:	add    BYTE PTR [rax-0x27fffff8],al
   14000da89:	or     BYTE PTR [rax],al
	...
   14000da93:	add    BYTE PTR [rax+0x44000000],ch
   14000da99:	(bad)  
   14000da9a:	add    BYTE PTR [rcx],dl
   14000da9c:	add    al,0x1
   14000da9e:	call   0x14000daa6
   14000daa3:	add    BYTE PTR [rax],al
   14000daa5:	add    BYTE PTR [rax],al
   14000daa7:	rex
   14000daa8:	rex.R (bad) 
   14000daaa:	add    BYTE PTR [rax+0x188],dh
   14000dab0:	or     BYTE PTR [rax],r8b
   14000dab3:	add    BYTE PTR [rax-0x27fffff8],al
   14000dab9:	or     BYTE PTR [rax],al
	...
   14000dac3:	add    BYTE PTR [rax+0x45000000],ch
   14000dac9:	(bad)  
   14000daca:	add    BYTE PTR [rcx],dl
   14000dacc:	add    al,BYTE PTR [rcx]
   14000dace:	call   0x14000dad6
   14000dad3:	add    BYTE PTR [rax],al
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	rex
   14000dad8:	rex.RB (bad) 
   14000dada:	add    BYTE PTR [rax+0x78c],dh
   14000dae0:	or     BYTE PTR [rax],r8b
   14000dae3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000dae7:	add    al,bl
   14000dae9:	or     BYTE PTR [rax],al
	...
   14000daf3:	add    BYTE PTR [rax+0x46000000],ch
   14000daf9:	(bad)  
   14000dafa:	add    BYTE PTR [rcx],dl
   14000dafc:	add    al,BYTE PTR [rcx]
   14000dafe:	call   0x14000db06
   14000db03:	add    BYTE PTR [rax],al
   14000db05:	add    BYTE PTR [rax],al
   14000db07:	rex
   14000db08:	rex.RX (bad) 
   14000db0a:	add    BYTE PTR [rax+0x78c],dh
   14000db10:	or     BYTE PTR [rax],r8b
   14000db13:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000db17:	add    al,bl
   14000db19:	or     BYTE PTR [rax],al
	...
   14000db23:	add    BYTE PTR [rax+0x47000000],ch
   14000db29:	(bad)  
   14000db2a:	add    BYTE PTR [rcx],dl
   14000db2c:	add    al,BYTE PTR [rcx]
   14000db2e:	call   0x14000db36
   14000db33:	add    BYTE PTR [rax],al
   14000db35:	add    BYTE PTR [rax],al
   14000db37:	rex
   14000db38:	rex.RXB (bad) 
   14000db3a:	add    BYTE PTR [rax+0x78c],dh
   14000db40:	or     BYTE PTR [rax],r8b
   14000db43:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000db47:	add    al,bl
   14000db49:	or     BYTE PTR [rax],al
	...
   14000db53:	add    BYTE PTR [rax+0x48000000],ch
   14000db59:	(bad)  
   14000db5a:	add    BYTE PTR [rcx],dl
   14000db5c:	add    al,0x1
   14000db5e:	call   0x14000db66
   14000db63:	add    BYTE PTR [rax],al
   14000db65:	add    BYTE PTR [rax],al
   14000db67:	rex
   14000db68:	rex.W (bad) 
   14000db6a:	add    BYTE PTR [rax+0x6e0],dh
   14000db70:	or     BYTE PTR [rax],r8b
   14000db73:	add    BYTE PTR [rax-0x27fffff8],al
   14000db79:	or     BYTE PTR [rax],al
	...
   14000db83:	add    BYTE PTR [rax+0x49000000],ch
   14000db89:	(bad)  
   14000db8a:	add    BYTE PTR [rcx],dl
   14000db8c:	add    al,0x1
   14000db8e:	call   0x14000db96
   14000db93:	add    BYTE PTR [rax],al
   14000db95:	add    BYTE PTR [rax],al
   14000db97:	rex
   14000db98:	rex.WB (bad) 
   14000db9a:	add    BYTE PTR [rax+0x6e0],dh
   14000dba0:	or     BYTE PTR [rax],r8b
   14000dba3:	add    BYTE PTR [rax-0x27fffff8],al
   14000dba9:	or     BYTE PTR [rax],al
	...
   14000dbb3:	add    BYTE PTR [rax+0x4a000000],ch
   14000dbb9:	(bad)  
   14000dbba:	add    BYTE PTR [rcx],dl
   14000dbbc:	add    al,BYTE PTR [rcx]
   14000dbbe:	call   0x14000dbc6
   14000dbc3:	add    BYTE PTR [rax],al
   14000dbc5:	add    BYTE PTR [rax],al
   14000dbc7:	rex
   14000dbc8:	rex.WX (bad) 
   14000dbca:	add    BYTE PTR [rax+0x78c],dh
   14000dbd0:	or     BYTE PTR [rax],r8b
   14000dbd3:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000dbd7:	add    al,bl
   14000dbd9:	or     BYTE PTR [rax],al
	...
   14000dbe3:	add    BYTE PTR [rax+0x4b000000],ch
   14000dbe9:	(bad)  
   14000dbea:	add    BYTE PTR [rcx],dl
   14000dbec:	add    al,BYTE PTR [rcx]
   14000dbee:	call   0x14000dbf6
   14000dbf3:	add    BYTE PTR [rax],al
   14000dbf5:	add    BYTE PTR [rax],al
   14000dbf7:	rex
   14000dbf8:	rex.WXB (bad) 
   14000dbfa:	add    BYTE PTR [rax+0x78c],dh
   14000dc00:	or     BYTE PTR [rax],r8b
   14000dc03:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14000dc07:	add    al,bl
   14000dc09:	or     BYTE PTR [rax],al
	...
   14000dc13:	add    BYTE PTR [rax+0x0],ch
   14000dc19:	add    BYTE PTR [rax],al
   14000dc1b:	add    BYTE PTR [rax],al
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	add    ch,cl
   14000dc21:	dec    ch
   14000dc23:	(bad)  
   14000dc24:	call   0x14000dc29
   14000dc29:	add    BYTE PTR [rcx],al
   14000dc2b:	add    BYTE PTR [rax],al
   14000dc2d:	add    BYTE PTR [rax],al
   14000dc2f:	add    BYTE PTR [rcx],dl
   14000dc31:	add    BYTE PTR [rax],al
   14000dc33:	add    BYTE PTR [rax],al
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	add    BYTE PTR [rdx],al
   14000dc39:	add    BYTE PTR [rax],al
   14000dc3b:	add    BYTE PTR [rcx],dl
   14000dc3d:	lods   eax,DWORD PTR ds:[rsi]
   14000dc3e:	jmp    0xfd68352a
   14000dc43:	retf   0x547f
   14000dc46:	fbld   TBYTE PTR [r9]
   14000dc49:	and    BYTE PTR [rax-0x30],bh
   14000dc4c:	leave  
   14000dc4d:	ret    
   14000dc4e:	(bad)  
   14000dc4f:	(bad)  
   14000dc50:	imul   edx,ecx,0xffffff93
   14000dc53:	rcl    eax,0x26
   14000dc56:	lods   al,BYTE PTR cs:[rsi]
   14000dc58:	(bad)
   14000dc5b:	add    BYTE PTR [r8],al
	...
   14000dc72:	add    BYTE PTR [rax],al
   14000dc74:	mov    BYTE PTR [rax],al
   14000dc76:	add    BYTE PTR [rax],al
   14000dc78:	sub    al,BYTE PTR [rax]
   14000dc7a:	add    BYTE PTR [rax],al
   14000dc7c:	mov    eax,0x8000000
   14000dc81:	add    BYTE PTR [rax],al
   14000dc83:	add    al,al
   14000dc85:	add    BYTE PTR [rax],al
   14000dc87:	add    BYTE PTR [rsi],cl
   14000dc89:	add    BYTE PTR [rax],al
   14000dc8b:	add    al,dl
   14000dc8d:	add    BYTE PTR [rax],al
   14000dc8f:	add    BYTE PTR [rax],cl
	...
   14000dc99:	add    BYTE PTR [rax],al
   14000dc9b:	add    al,bl
   14000dc9d:	add    BYTE PTR [rax],al
   14000dc9f:	add    BYTE PTR [rax+rax*1],cl
   14000dca2:	add    BYTE PTR [rax],al
   14000dca4:	add    BYTE PTR [rax],al
   14000dca6:	add    BYTE PTR [rax],al
   14000dca8:	push   rdi
   14000dca9:	add    BYTE PTR [rbp+0x0],al
   14000dcac:	push   rsi
   14000dcad:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000dcb1:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000dcb5:	add    BYTE PTR [rbp+0x0],cl
   14000dcb8:	push   rax
   14000dcb9:	add    BYTE PTR [rax+rax*1+0x41],cl
   14000dcbd:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000dcc1:	add    BYTE PTR [rax],al
   14000dcc3:	add    BYTE PTR [rbp+0x0],cl
   14000dcc6:	push   rbp
   14000dcc7:	add    BYTE PTR [rcx+0x0],cl
	...
   14000dcd6:	add    BYTE PTR [rax],al
   14000dcd8:	adc    BYTE PTR [rax],al
   14000dcda:	add    BYTE PTR [rax],al
   14000dcdc:	sbb    BYTE PTR [rax],al
   14000dcde:	add    BYTE PTR [rax],al
   14000dce0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000dce4:	rex.WB add BYTE PTR [r8],al
	...
   14000dcef:	add    BYTE PTR [rbx],cl
   14000dcf1:	add    BYTE PTR [rax],al
   14000dcf3:	add    BYTE PTR [rax],dl
   14000dcf5:	add    BYTE PTR [rax],al
   14000dcf7:	add    BYTE PTR [rbp+0x0],ah
   14000dcfa:	outs   dx,BYTE PTR ds:[rsi]
   14000dcfb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193013201
   14000dd01:	add    BYTE PTR [rax],al
   14000dd03:	add    BYTE PTR [rax],al
   14000dd05:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x0],ah
   14000e003:	add    BYTE PTR [rcx+rax*1-0x5bd80000],bh
   14000e00a:	xor    BYTE PTR [rax+rax*2+0x60a448a4],ah
   14000e011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e012:	push   0xfffffffff8a5f0a4
   14000e017:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e018:	add    BYTE PTR [rsi-0x59c759d0],ah
   14000e01e:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e020:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e022:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000e024:	push   rax
   14000e025:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e026:	pop    rax
   14000e027:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e028:	(bad)  
   14000e029:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e02a:	push   0x78a770a7
   14000e02f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e030:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000e037:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e038:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14000e041:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e042:	enter  0xd0a7,0xa7
   14000e046:	fsub   DWORD PTR [rdi-0x58175820]
   14000e04c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e04e:	clc    
   14000e04f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e050:	add    BYTE PTR [rax-0x57ef57f8],ch
   14000e056:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14000e05c:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14000e062:	rex.W test al,0x50
   14000e065:	test   al,0x58
   14000e067:	test   al,0x60
   14000e069:	test   al,0x68
   14000e06b:	test   al,0x70
   14000e06d:	test   al,0x78
   14000e06f:	test   al,0x80
   14000e071:	test   al,0x88
   14000e073:	test   al,0x90
   14000e075:	test   al,0x98
   14000e077:	test   al,0xa0
   14000e079:	test   al,0xa8
   14000e07b:	test   al,0xb0
   14000e07d:	test   al,0xb8
   14000e07f:	test   al,0xc0
   14000e081:	test   al,0xc8
   14000e083:	test   al,0xd0
   14000e085:	test   al,0xd8
   14000e087:	test   al,0xe0
   14000e089:	test   al,0xe8
   14000e08b:	test   al,0xf0
   14000e08d:	test   al,0xf8
   14000e08f:	test   al,0x0
   14000e091:	test   eax,0xa910a908
   14000e096:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14000e09c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14000e0a2:	test   rax,0xffffffffa958a950
   14000e0a8:	(bad)  
   14000e0a9:	test   eax,0xa970a968
   14000e0ae:	js     0x14000e059
   14000e0b0:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14000e0b7:	test   eax,0xa9a8a9a0
   14000e0bc:	mov    al,0xa9
   14000e0be:	mov    eax,0xc8a9c0a9
   14000e0c3:	test   eax,0xa9d8a9d0
   14000e0c8:	loopne 0x14000e073
   14000e0ca:	call   0x138aad178
   14000e0cf:	test   eax,0xaa08aa00
   14000e0d4:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14000e0da:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14000e0e0:	stos   BYTE PTR es:[rdi],al
   14000e0e2:	rex.W stos BYTE PTR es:[rdi],al
   14000e0e4:	push   rax
   14000e0e5:	stos   BYTE PTR es:[rdi],al
   14000e0e6:	pop    rax
   14000e0e7:	stos   BYTE PTR es:[rdi],al
   14000e0e8:	(bad)  
   14000e0e9:	stos   BYTE PTR es:[rdi],al
   14000e0ea:	push   0x78aa70aa
   14000e0ef:	stos   BYTE PTR es:[rdi],al
   14000e0f0:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14000e0f7:	stos   BYTE PTR es:[rdi],al
   14000e0f8:	movabs al,ds:0xc0aab8aab0aaa8aa
   14000e101:	stos   BYTE PTR es:[rdi],al
   14000e102:	enter  0xd0aa,0xaa
   14000e106:	fsubr  DWORD PTR [rdx-0x55175520]
   14000e10c:	lock stos BYTE PTR es:[rdi],al
   14000e10e:	clc    
   14000e10f:	stos   BYTE PTR es:[rdi],al
   14000e110:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14000e116:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14000e11c:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14000e122:	stos   QWORD PTR es:[rdi],rax
   14000e124:	push   rax
   14000e125:	stos   DWORD PTR es:[rdi],eax
   14000e126:	pop    rax
   14000e127:	stos   DWORD PTR es:[rdi],eax
   14000e128:	(bad)  
   14000e129:	stos   DWORD PTR es:[rdi],eax
   14000e12a:	push   0x78ab70ab
   14000e12f:	stos   DWORD PTR es:[rdi],eax
   14000e130:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14000e137:	stos   DWORD PTR es:[rdi],eax
   14000e138:	movabs al,ds:0xc0abb8abb0aba8ab
   14000e141:	stos   DWORD PTR es:[rdi],eax
   14000e142:	enter  0xd0ab,0xab
   14000e146:	fsubr  DWORD PTR [rbx-0x54175420]
   14000e14c:	lock stos DWORD PTR es:[rdi],eax
   14000e14e:	clc    
   14000e14f:	stos   DWORD PTR es:[rdi],eax
   14000e150:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14000e157:	lods   al,BYTE PTR ds:[rsi]
   14000e158:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14000e15f:	lods   al,BYTE PTR ds:[rsi]
   14000e160:	lods   al,BYTE PTR ds:[rsi]
   14000e162:	rex.W lods al,BYTE PTR ds:[rsi]
   14000e164:	push   rax
   14000e165:	lods   al,BYTE PTR ds:[rsi]
   14000e166:	pop    rax
   14000e167:	lods   al,BYTE PTR ds:[rsi]
   14000e168:	(bad)  
   14000e169:	lods   al,BYTE PTR ds:[rsi]
   14000e16a:	push   0x78ac70ac
   14000e16f:	lods   al,BYTE PTR ds:[rsi]
   14000e170:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14000e178:	movabs al,ds:0xc0acb8acb0aca8ac
   14000e181:	lods   al,BYTE PTR ds:[rsi]
   14000e182:	enter  0xd0ac,0xac
   14000e186:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14000e18d:	lods   al,BYTE PTR ds:[rsi]
   14000e18e:	clc    
   14000e18f:	lods   al,BYTE PTR ds:[rsi]
   14000e190:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14000e196:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14000e19c:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14000e1a2:	lods   rax,QWORD PTR ds:[rsi]
   14000e1a4:	push   rax
   14000e1a5:	lods   eax,DWORD PTR ds:[rsi]
   14000e1a6:	pop    rax
   14000e1a7:	lods   eax,DWORD PTR ds:[rsi]
   14000e1a8:	(bad)  
   14000e1a9:	lods   eax,DWORD PTR ds:[rsi]
   14000e1aa:	push   0x78ad70ad
   14000e1af:	lods   eax,DWORD PTR ds:[rsi]
   14000e1b0:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14000e1b7:	lods   eax,DWORD PTR ds:[rsi]
   14000e1b8:	movabs al,ds:0x1000007000ada8ad
   14000e1c1:	add    BYTE PTR [rax],al
   14000e1c3:	add    BYTE PTR [rax],bl
   14000e1c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1c6:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14000e1cc:	add    BYTE PTR [rax+0x100000],ah
   14000e1d2:	add    BYTE PTR [rax],al
   14000e1d4:	add    BYTE PTR [rax-0x5faf5fd0],ah
	...
