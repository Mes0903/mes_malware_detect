
d0188bda26aee8652466ba0cc53457fc736d00e2eefd33901a0b0ae978c8b362.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0x7385]        # 0x140008410
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	sub    rsp,0x48
   1400010e0:	mov    r8d,edx
   1400010e3:	lea    rax,[rip+0xaab6]        # 0x14000bba0
   1400010ea:	sub    r8d,eax
   1400010ed:	mov    r10,rcx
   1400010f0:	mov    al,BYTE PTR [rip+0xae9b]        # 0x14000bf91
   1400010f6:	xor    r9d,r9d
   1400010f9:	movzx  eax,BYTE PTR [rdx]
   1400010fc:	shl    eax,0x18
   1400010ff:	or     eax,r8d
   140001102:	lea    r8,[rdx+0x1]
   140001106:	mov    rdx,QWORD PTR [rsp+0x78]
   14000110b:	mov    DWORD PTR [rsp+0x30],eax
   14000110f:	movzx  eax,WORD PTR [r8]
   140001113:	mov    DWORD PTR [rsp+0x34],eax
   140001117:	mov    eax,DWORD PTR [r8+0x2]
   14000111b:	mov    DWORD PTR [rsp+0x38],eax
   14000111f:	mov    eax,DWORD PTR [r8+0x6]
   140001123:	add    r8,0xa
   140001127:	mov    DWORD PTR [rsp+0x3c],eax
   14000112b:	mov    rax,QWORD PTR [rcx+0x8]
   14000112f:	mov    QWORD PTR [rdx],rax
   140001132:	mov    rax,QWORD PTR [rcx+0x8]
   140001136:	mov    QWORD PTR [rsp+0x28],rdx
   14000113b:	movzx  ecx,WORD PTR [rax]
   14000113e:	mov    QWORD PTR [rdx+0x10],r8
   140001142:	mov    DWORD PTR [rdx+0x8],ecx
   140001145:	mov    DWORD PTR [rdx+0xc],0x2
   14000114c:	movzx  eax,WORD PTR [r8]
   140001150:	xor    r8d,r8d
   140001153:	mov    DWORD PTR [rdx+0x18],eax
   140001156:	mov    eax,DWORD PTR [rsp+0x70]
   14000115a:	mov    DWORD PTR [rdx+0x1c],0x1
   140001161:	lea    rdx,[rsp+0x30]
   140001166:	mov    rcx,QWORD PTR [r10+0x20]
   14000116a:	mov    DWORD PTR [rsp+0x20],eax
   14000116e:	call   QWORD PTR [rip+0x7134]        # 0x1400082a8
   140001174:	add    rsp,0x48
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x329]        # 0x1400014b0
   140001187:	mov    QWORD PTR [rip+0xd5ba],rax        # 0x14000e748
   14000118e:	lea    rax,[rip+0x42b]        # 0x1400015c0
   140001195:	mov    QWORD PTR [rip+0xd59c],rax        # 0x14000e738
   14000119c:	lea    rax,[rip+0x46d]        # 0x140001610
   1400011a3:	mov    QWORD PTR [rip+0xd596],rax        # 0x14000e740
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	lea    rcx,[rip+0x5b09]        # 0x140006cc0
   1400011b7:	jmp    0x1400060a8
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	lea    rcx,[rip+0x5ad9]        # 0x140006ca0
   1400011c7:	jmp    0x1400060a8
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lea    rcx,[rip+0x5aa9]        # 0x140006c80
   1400011d7:	jmp    0x1400060a8
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x5af9]        # 0x140006ce0
   1400011e7:	jmp    0x1400060a8
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	int3   
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	rex push rbx
   140001202:	sub    rsp,0x20
   140001206:	lea    rax,[rip+0x8d63]        # 0x140009f70
   14000120d:	mov    rbx,rcx
   140001210:	mov    QWORD PTR [rcx],rax
   140001213:	test   dl,0x1
   140001216:	je     0x14000121e
   140001218:	call   QWORD PTR [rip+0x713a]        # 0x140008358
   14000121e:	mov    rax,rbx
   140001221:	add    rsp,0x20
   140001225:	pop    rbx
   140001226:	ret    
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    DWORD PTR [rdx],r8d
   140001233:	mov    rax,rdx
   140001236:	mov    QWORD PTR [rdx+0x8],rcx
   14000123a:	ret    
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rbx
   140001255:	mov    QWORD PTR [rsp+0x10],rsi
   14000125a:	mov    QWORD PTR [rsp+0x18],rdi
   14000125f:	push   r14
   140001261:	sub    rsp,0x30
   140001265:	mov    rax,QWORD PTR [rcx]
   140001268:	mov    rsi,rcx
   14000126b:	mov    r14,r8
   14000126e:	mov    edi,edx
   140001270:	mov    rbx,QWORD PTR [rax+0x18]
   140001274:	mov    rcx,rbx
   140001277:	call   QWORD PTR [rip+0x7193]        # 0x140008410
   14000127d:	mov    r8d,edi
   140001280:	lea    rdx,[rsp+0x20]
   140001285:	mov    rcx,rsi
   140001288:	call   rbx
   14000128a:	mov    rcx,QWORD PTR [r14+0x8]
   14000128e:	cmp    QWORD PTR [rax+0x8],rcx
   140001292:	jne    0x1400012a2
   140001294:	mov    ecx,DWORD PTR [r14]
   140001297:	cmp    DWORD PTR [rax],ecx
   140001299:	jne    0x1400012a2
   14000129b:	mov    eax,0x1
   1400012a0:	jmp    0x1400012a4
   1400012a2:	xor    eax,eax
   1400012a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012a9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012ae:	mov    rdi,QWORD PTR [rsp+0x50]
   1400012b3:	add    rsp,0x30
   1400012b7:	pop    r14
   1400012b9:	ret    
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400012c4:	jne    0x1400012d1
   1400012c6:	cmp    DWORD PTR [rdx],r8d
   1400012c9:	jne    0x1400012d1
   1400012cb:	mov    eax,0x1
   1400012d0:	ret    
   1400012d1:	xor    eax,eax
   1400012d3:	ret    
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	lea    rax,[rip+0x8659]        # 0x140009940
   1400012e7:	ret    
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400012f5:	push   rdi
   1400012f6:	sub    rsp,0x30
   1400012fa:	xor    ebx,ebx
   1400012fc:	mov    ecx,r8d
   1400012ff:	mov    DWORD PTR [rsp+0x20],ebx
   140001303:	mov    rdi,rdx
   140001306:	call   0x14000597c
   14000130b:	test   rax,rax
   14000130e:	mov    QWORD PTR [rdi+0x18],0xf
   140001316:	mov    QWORD PTR [rdi+0x10],rbx
   14000131a:	lea    rdx,[rip+0x8627]        # 0x140009948
   140001321:	cmovne rdx,rax
   140001325:	mov    BYTE PTR [rdi],bl
   140001327:	cmp    BYTE PTR [rdx],bl
   140001329:	je     0x14000133a
   14000132b:	or     rax,0xffffffffffffffff
   14000132f:	inc    rax
   140001332:	cmp    BYTE PTR [rdx+rax*1],bl
   140001335:	jne    0x14000132f
   140001337:	mov    rbx,rax
   14000133a:	mov    r8,rbx
   14000133d:	mov    rcx,rdi
   140001340:	call   0x140001700
   140001345:	mov    rbx,QWORD PTR [rsp+0x40]
   14000134a:	mov    rax,rdi
   14000134d:	add    rsp,0x30
   140001351:	pop    rdi
   140001352:	ret    
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	lea    rax,[rip+0x85f1]        # 0x140009958
   140001367:	ret    
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	rex push rbx
   140001372:	sub    rsp,0x30
   140001376:	xor    eax,eax
   140001378:	mov    rbx,rdx
   14000137b:	mov    DWORD PTR [rsp+0x20],eax
   14000137f:	cmp    r8d,0x1
   140001383:	jne    0x1400013a8
   140001385:	mov    QWORD PTR [rdx+0x18],0xf
   14000138d:	lea    r8d,[rax+0x15]
   140001391:	mov    QWORD PTR [rdx+0x10],rax
   140001395:	mov    rcx,rbx
   140001398:	mov    BYTE PTR [rdx],al
   14000139a:	lea    rdx,[rip+0x85c7]        # 0x140009968
   1400013a1:	call   0x140001700
   1400013a6:	jmp    0x1400013ad
   1400013a8:	call   0x1400012f0
   1400013ad:	mov    rax,rbx
   1400013b0:	add    rsp,0x30
   1400013b4:	pop    rbx
   1400013b5:	ret    
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	lea    rax,[rip+0x85b9]        # 0x140009980
   1400013c7:	ret    
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013d5:	push   rdi
   1400013d6:	sub    rsp,0x30
   1400013da:	xor    ebx,ebx
   1400013dc:	mov    ecx,r8d
   1400013df:	mov    DWORD PTR [rsp+0x20],ebx
   1400013e3:	mov    rdi,rdx
   1400013e6:	call   0x1400059ac
   1400013eb:	test   rax,rax
   1400013ee:	mov    QWORD PTR [rdi+0x18],0xf
   1400013f6:	mov    QWORD PTR [rdi+0x10],rbx
   1400013fa:	lea    rdx,[rip+0x8547]        # 0x140009948
   140001401:	cmovne rdx,rax
   140001405:	mov    BYTE PTR [rdi],bl
   140001407:	cmp    BYTE PTR [rdx],bl
   140001409:	je     0x14000141a
   14000140b:	or     rax,0xffffffffffffffff
   14000140f:	inc    rax
   140001412:	cmp    BYTE PTR [rdx+rax*1],bl
   140001415:	jne    0x14000140f
   140001417:	mov    rbx,rax
   14000141a:	mov    r8,rbx
   14000141d:	mov    rcx,rdi
   140001420:	call   0x140001700
   140001425:	mov    rbx,QWORD PTR [rsp+0x40]
   14000142a:	mov    rax,rdi
   14000142d:	add    rsp,0x30
   140001431:	pop    rdi
   140001432:	ret    
   140001433:	int3   
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	mov    QWORD PTR [rsp+0x8],rbx
   140001445:	push   rdi
   140001446:	sub    rsp,0x20
   14000144a:	mov    ecx,r8d
   14000144d:	mov    edi,r8d
   140001450:	mov    rbx,rdx
   140001453:	call   0x14000597c
   140001458:	test   rax,rax
   14000145b:	mov    DWORD PTR [rbx],edi
   14000145d:	lea    rax,[rip+0xcc1c]        # 0x14000e080
   140001464:	jne    0x14000146d
   140001466:	lea    rax,[rip+0xcbfb]        # 0x14000e068
   14000146d:	mov    QWORD PTR [rbx+0x8],rax
   140001471:	mov    rax,rbx
   140001474:	mov    rbx,QWORD PTR [rsp+0x30]
   140001479:	add    rsp,0x20
   14000147d:	pop    rdi
   14000147e:	ret    
   14000147f:	int3   
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	mov    DWORD PTR [rip+0xd2ba],ecx        # 0x14000e750
   140001496:	mov    eax,0x1
   14000149b:	ret    
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	int3   
   1400014a5:	int3   
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014b5:	push   rsi
   1400014b6:	sub    rsp,0x150
   1400014bd:	mov    rax,QWORD PTR [rip+0xcb44]        # 0x14000e008
   1400014c4:	xor    rax,rsp
   1400014c7:	mov    QWORD PTR [rsp+0x140],rax
   1400014cf:	mov    al,BYTE PTR [rip+0xd293]        # 0x14000e768
   1400014d5:	lea    rsi,[rip+0xd354]        # 0x14000e830
   1400014dc:	test   al,al
   1400014de:	jne    0x140001594
   1400014e4:	mov    ebx,0x40
   1400014e9:	xor    edx,edx
   1400014eb:	mov    r8d,ebx
   1400014ee:	mov    rcx,rsi
   1400014f1:	call   0x140006a26
   1400014f6:	and    QWORD PTR [rsp+0x20],0x0
   1400014fc:	lea    r8,[rsp+0x20]
   140001501:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140001490
   140001508:	lea    ecx,[rbx-0x3a]
   14000150b:	call   QWORD PTR [rip+0x6be7]        # 0x1400080f8
   140001511:	test   eax,eax
   140001513:	je     0x14000158d
   140001515:	mov    rcx,QWORD PTR [rsp+0x20]
   14000151a:	lea    rdx,[rsp+0x30]
   14000151f:	mov    r8d,0x104
   140001525:	call   QWORD PTR [rip+0x6bad]        # 0x1400080d8
   14000152b:	test   eax,eax
   14000152d:	je     0x14000158d
   14000152f:	lea    rcx,[rsp+0x30]
   140001534:	or     rax,0xffffffffffffffff
   140001538:	inc    rax
   14000153b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000153f:	jne    0x140001538
   140001541:	lea    rdx,[rsp+0x30]
   140001546:	add    rdx,rax
   140001549:	jmp    0x140001554
   14000154b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000154f:	je     0x14000155e
   140001551:	dec    rdx
   140001554:	lea    rax,[rsp+0x30]
   140001559:	cmp    rdx,rax
   14000155c:	ja     0x14000154b
   14000155e:	mov    rcx,rsi
   140001561:	sub    rdx,rsi
   140001564:	lea    rax,[rbx+0x7fffffbe]
   14000156b:	test   rax,rax
   14000156e:	je     0x140001582
   140001570:	mov    al,BYTE PTR [rdx+rcx*1]
   140001573:	test   al,al
   140001575:	je     0x140001582
   140001577:	mov    BYTE PTR [rcx],al
   140001579:	inc    rcx
   14000157c:	sub    rbx,0x1
   140001580:	jne    0x140001564
   140001582:	test   rbx,rbx
   140001585:	jne    0x14000158a
   140001587:	dec    rcx
   14000158a:	mov    BYTE PTR [rcx],0x0
   14000158d:	mov    BYTE PTR [rip+0xd1d4],0x1        # 0x14000e768
   140001594:	mov    rax,rsi
   140001597:	mov    rcx,QWORD PTR [rsp+0x140]
   14000159f:	xor    rcx,rsp
   1400015a2:	call   0x140005fe0
   1400015a7:	mov    rbx,QWORD PTR [rsp+0x160]
   1400015af:	add    rsp,0x150
   1400015b6:	pop    rsi
   1400015b7:	ret    
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	rex push rbx
   1400015c2:	sub    rsp,0x20
   1400015c6:	lea    rcx,[rip+0x83bb]        # 0x140009988
   1400015cd:	call   QWORD PTR [rip+0x6b0d]        # 0x1400080e0
   1400015d3:	test   rax,rax
   1400015d6:	je     0x1400015fb
   1400015d8:	lea    rdx,[rip+0x83c1]        # 0x1400099a0
   1400015df:	mov    rcx,rax
   1400015e2:	call   QWORD PTR [rip+0x6b00]        # 0x1400080e8
   1400015e8:	mov    rbx,rax
   1400015eb:	test   rax,rax
   1400015ee:	je     0x1400015fb
   1400015f0:	mov    rcx,rax
   1400015f3:	call   QWORD PTR [rip+0x6e17]        # 0x140008410
   1400015f9:	call   rbx
   1400015fb:	add    rsp,0x20
   1400015ff:	pop    rbx
   140001600:	ret    
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    QWORD PTR [rsp+0x8],rbx
   140001615:	mov    QWORD PTR [rsp+0x10],rsi
   14000161a:	push   rdi
   14000161b:	sub    rsp,0x20
   14000161f:	mov    rdi,QWORD PTR [rip+0xd13a]        # 0x14000e760
   140001626:	xor    ebx,ebx
   140001628:	mov    esi,ecx
   14000162a:	test   rdi,rdi
   14000162d:	jne    0x140001676
   14000162f:	mov    rax,QWORD PTR [rip+0xd122]        # 0x14000e758
   140001636:	test   rax,rax
   140001639:	jne    0x140001657
   14000163b:	xor    edx,edx
   14000163d:	lea    rcx,[rip+0x8344]        # 0x140009988
   140001644:	mov    r8d,0x800
   14000164a:	call   QWORD PTR [rip+0x6ab0]        # 0x140008100
   140001650:	mov    QWORD PTR [rip+0xd101],rax        # 0x14000e758
   140001657:	lea    rdx,[rip+0x8362]        # 0x1400099c0
   14000165e:	mov    rcx,rax
   140001661:	call   QWORD PTR [rip+0x6a81]        # 0x1400080e8
   140001667:	mov    QWORD PTR [rip+0xd0f2],rax        # 0x14000e760
   14000166e:	mov    rdi,rax
   140001671:	test   rax,rax
   140001674:	je     0x140001685
   140001676:	mov    rcx,rdi
   140001679:	call   QWORD PTR [rip+0x6d91]        # 0x140008410
   14000167f:	mov    ecx,esi
   140001681:	call   rdi
   140001683:	mov    ebx,eax
   140001685:	mov    rsi,QWORD PTR [rsp+0x38]
   14000168a:	mov    eax,ebx
   14000168c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001691:	add    rsp,0x20
   140001695:	pop    rdi
   140001696:	ret    
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400016aa:	push   rdi
   1400016ab:	sub    rsp,0x20
   1400016af:	mov    rdi,r8
   1400016b2:	mov    rbx,rcx
   1400016b5:	test   dl,dl
   1400016b7:	je     0x1400016d9
   1400016b9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400016be:	jb     0x1400016d9
   1400016c0:	mov    rsi,QWORD PTR [rcx]
   1400016c3:	test   r8,r8
   1400016c6:	je     0x1400016d0
   1400016c8:	mov    rdx,rsi
   1400016cb:	call   0x14000611a
   1400016d0:	mov    rcx,rsi
   1400016d3:	call   QWORD PTR [rip+0x6c7f]        # 0x140008358
   1400016d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400016de:	mov    QWORD PTR [rbx+0x18],0xf
   1400016e6:	mov    QWORD PTR [rbx+0x10],rdi
   1400016ea:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400016ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016f3:	add    rsp,0x20
   1400016f7:	pop    rdi
   1400016f8:	ret    
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    QWORD PTR [rsp+0x8],rbx
   140001705:	mov    QWORD PTR [rsp+0x10],rsi
   14000170a:	push   rdi
   14000170b:	sub    rsp,0x20
   14000170f:	mov    rdi,r8
   140001712:	mov    rsi,rdx
   140001715:	mov    rbx,rcx
   140001718:	test   rdx,rdx
   14000171b:	je     0x140001769
   14000171d:	cmp    QWORD PTR [rcx+0x18],0x10
   140001722:	jb     0x140001729
   140001724:	mov    rax,QWORD PTR [rcx]
   140001727:	jmp    0x14000172c
   140001729:	mov    rax,rcx
   14000172c:	cmp    rdx,rax
   14000172f:	jb     0x140001769
   140001731:	cmp    QWORD PTR [rcx+0x18],0x10
   140001736:	jb     0x14000173b
   140001738:	mov    rcx,QWORD PTR [rcx]
   14000173b:	add    rcx,QWORD PTR [rbx+0x10]
   14000173f:	cmp    rcx,rdx
   140001742:	jbe    0x140001769
   140001744:	cmp    QWORD PTR [rbx+0x18],0x10
   140001749:	jb     0x140001750
   14000174b:	mov    rax,QWORD PTR [rbx]
   14000174e:	jmp    0x140001753
   140001750:	mov    rax,rbx
   140001753:	sub    rsi,rax
   140001756:	mov    r9,r8
   140001759:	mov    r8,rsi
   14000175c:	mov    rdx,rbx
   14000175f:	mov    rcx,rbx
   140001762:	call   0x14000181c
   140001767:	jmp    0x1400017e3
   140001769:	cmp    r8,0xfffffffffffffffe
   14000176d:	ja     0x1400017f3
   140001773:	cmp    QWORD PTR [rbx+0x18],r8
   140001777:	jae    0x14000178a
   140001779:	mov    r8,QWORD PTR [rbx+0x10]
   14000177d:	mov    rdx,rdi
   140001780:	mov    rcx,rbx
   140001783:	call   0x1400019e4
   140001788:	jmp    0x1400017a5
   14000178a:	test   r8,r8
   14000178d:	jne    0x1400017a5
   14000178f:	and    QWORD PTR [rbx+0x10],r8
   140001793:	cmp    QWORD PTR [rbx+0x18],0x10
   140001798:	jb     0x14000179f
   14000179a:	mov    rax,QWORD PTR [rbx]
   14000179d:	jmp    0x1400017a2
   14000179f:	mov    rax,rbx
   1400017a2:	mov    BYTE PTR [rax],0x0
   1400017a5:	test   rdi,rdi
   1400017a8:	je     0x1400017e0
   1400017aa:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017af:	jb     0x1400017b6
   1400017b1:	mov    rcx,QWORD PTR [rbx]
   1400017b4:	jmp    0x1400017b9
   1400017b6:	mov    rcx,rbx
   1400017b9:	test   rdi,rdi
   1400017bc:	je     0x1400017c9
   1400017be:	mov    r8,rdi
   1400017c1:	mov    rdx,rsi
   1400017c4:	call   0x14000611a
   1400017c9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017ce:	mov    QWORD PTR [rbx+0x10],rdi
   1400017d2:	jb     0x1400017d9
   1400017d4:	mov    rax,QWORD PTR [rbx]
   1400017d7:	jmp    0x1400017dc
   1400017d9:	mov    rax,rbx
   1400017dc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400017e0:	mov    rax,rbx
   1400017e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017e8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400017ed:	add    rsp,0x20
   1400017f1:	pop    rdi
   1400017f2:	ret    
   1400017f3:	mov    rcx,rbx
   1400017f6:	call   0x140001930
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	int3   
   140001801:	int3   
   140001802:	int3   
   140001803:	int3   
   140001804:	sub    rsp,0x28
   140001808:	lea    rcx,[rip+0x81d1]        # 0x1400099e0
   14000180f:	call   0x140005b9c
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	mov    QWORD PTR [rsp+0x8],rbx
   140001821:	mov    QWORD PTR [rsp+0x10],rbp
   140001826:	mov    QWORD PTR [rsp+0x18],rsi
   14000182b:	push   rdi
   14000182c:	sub    rsp,0x20
   140001830:	mov    rdi,QWORD PTR [rdx+0x10]
   140001834:	mov    rbp,r8
   140001837:	mov    rsi,rdx
   14000183a:	mov    rbx,rcx
   14000183d:	cmp    rdi,r8
   140001840:	jb     0x140001918
   140001846:	sub    rdi,r8
   140001849:	cmp    r9,rdi
   14000184c:	cmovb  rdi,r9
   140001850:	cmp    rcx,rdx
   140001853:	jne    0x140001881
   140001855:	lea    rax,[rdi+r8*1]
   140001859:	cmp    QWORD PTR [rcx+0x10],rax
   14000185d:	jb     0x14000191e
   140001863:	cmp    QWORD PTR [rcx+0x18],0x10
   140001868:	mov    QWORD PTR [rcx+0x10],rax
   14000186c:	jb     0x140001871
   14000186e:	mov    rcx,QWORD PTR [rcx]
   140001871:	mov    BYTE PTR [rcx+rax*1],0x0
   140001875:	xor    edx,edx
   140001877:	mov    rcx,rbx
   14000187a:	call   0x140001948
   14000187f:	jmp    0x140001900
   140001881:	cmp    rdi,0xfffffffffffffffe
   140001885:	ja     0x140001924
   14000188b:	cmp    QWORD PTR [rcx+0x18],rdi
   14000188f:	jae    0x14000189f
   140001891:	mov    r8,QWORD PTR [rcx+0x10]
   140001895:	mov    rdx,rdi
   140001898:	call   0x1400019e4
   14000189d:	jmp    0x1400018ba
   14000189f:	test   rdi,rdi
   1400018a2:	jne    0x1400018bf
   1400018a4:	and    QWORD PTR [rcx+0x10],rdi
   1400018a8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400018ad:	jb     0x1400018b4
   1400018af:	mov    rax,QWORD PTR [rcx]
   1400018b2:	jmp    0x1400018b7
   1400018b4:	mov    rax,rcx
   1400018b7:	mov    BYTE PTR [rax],0x0
   1400018ba:	test   rdi,rdi
   1400018bd:	je     0x140001900
   1400018bf:	cmp    QWORD PTR [rsi+0x18],0x10
   1400018c4:	jb     0x1400018c9
   1400018c6:	mov    rsi,QWORD PTR [rsi]
   1400018c9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400018ce:	jb     0x1400018d5
   1400018d0:	mov    rcx,QWORD PTR [rbx]
   1400018d3:	jmp    0x1400018d8
   1400018d5:	mov    rcx,rbx
   1400018d8:	test   rdi,rdi
   1400018db:	je     0x1400018e9
   1400018dd:	lea    rdx,[rsi+rbp*1]
   1400018e1:	mov    r8,rdi
   1400018e4:	call   0x14000611a
   1400018e9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400018ee:	mov    QWORD PTR [rbx+0x10],rdi
   1400018f2:	jb     0x1400018f9
   1400018f4:	mov    rax,QWORD PTR [rbx]
   1400018f7:	jmp    0x1400018fc
   1400018f9:	mov    rax,rbx
   1400018fc:	mov    BYTE PTR [rax+rdi*1],0x0
   140001900:	mov    rbp,QWORD PTR [rsp+0x38]
   140001905:	mov    rax,rbx
   140001908:	mov    rbx,QWORD PTR [rsp+0x30]
   14000190d:	mov    rsi,QWORD PTR [rsp+0x40]
   140001912:	add    rsp,0x20
   140001916:	pop    rdi
   140001917:	ret    
   140001918:	call   0x140001804
   14000191d:	int3   
   14000191e:	call   0x140001804
   140001923:	int3   
   140001924:	call   0x140001930
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	sub    rsp,0x28
   140001934:	lea    rcx,[rip+0x80bd]        # 0x1400099f8
   14000193b:	call   0x140005b70
   140001940:	int3   
   140001941:	int3   
   140001942:	int3   
   140001943:	int3   
   140001944:	int3   
   140001945:	int3   
   140001946:	int3   
   140001947:	int3   
   140001948:	mov    QWORD PTR [rsp+0x8],rbx
   14000194d:	push   rdi
   14000194e:	sub    rsp,0x20
   140001952:	mov    rdi,QWORD PTR [rcx+0x10]
   140001956:	mov    rbx,rcx
   140001959:	cmp    rdi,rdx
   14000195c:	jb     0x1400019d7
   14000195e:	mov    rax,rdi
   140001961:	sub    rax,rdx
   140001964:	cmp    rax,r8
   140001967:	ja     0x140001982
   140001969:	cmp    QWORD PTR [rcx+0x18],0x10
   14000196e:	mov    QWORD PTR [rcx+0x10],rdx
   140001972:	jb     0x140001979
   140001974:	mov    rax,QWORD PTR [rcx]
   140001977:	jmp    0x14000197c
   140001979:	mov    rax,rcx
   14000197c:	mov    BYTE PTR [rax+rdx*1],0x0
   140001980:	jmp    0x1400019c9
   140001982:	test   r8,r8
   140001985:	je     0x1400019c9
   140001987:	cmp    QWORD PTR [rcx+0x18],0x10
   14000198c:	jb     0x140001993
   14000198e:	mov    rax,QWORD PTR [rcx]
   140001991:	jmp    0x140001996
   140001993:	mov    rax,rcx
   140001996:	sub    rdi,r8
   140001999:	lea    rcx,[rax+rdx*1]
   14000199d:	mov    rax,rdi
   1400019a0:	sub    rax,rdx
   1400019a3:	je     0x1400019b2
   1400019a5:	lea    rdx,[rcx+r8*1]
   1400019a9:	mov    r8,rax
   1400019ac:	call   QWORD PTR [rip+0x6a3e]        # 0x1400083f0
   1400019b2:	cmp    QWORD PTR [rbx+0x18],0x10
   1400019b7:	mov    QWORD PTR [rbx+0x10],rdi
   1400019bb:	jb     0x1400019c2
   1400019bd:	mov    rax,QWORD PTR [rbx]
   1400019c0:	jmp    0x1400019c5
   1400019c2:	mov    rax,rbx
   1400019c5:	mov    BYTE PTR [rax+rdi*1],0x0
   1400019c9:	mov    rax,rbx
   1400019cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019d1:	add    rsp,0x20
   1400019d5:	pop    rdi
   1400019d6:	ret    
   1400019d7:	call   0x140001804
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	int3   
   1400019e1:	int3   
   1400019e2:	int3   
   1400019e3:	int3   
   1400019e4:	mov    rax,rsp
   1400019e7:	mov    QWORD PTR [rax+0x18],r8
   1400019eb:	mov    QWORD PTR [rax+0x10],rdx
   1400019ef:	mov    QWORD PTR [rax+0x8],rcx
   1400019f3:	push   rbx
   1400019f4:	push   rsi
   1400019f5:	push   rdi
   1400019f6:	push   r14
   1400019f8:	sub    rsp,0x38
   1400019fc:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140001a04:	mov    rsi,r8
   140001a07:	mov    rbx,rcx
   140001a0a:	mov    rdi,rdx
   140001a0d:	or     rdi,0xf
   140001a11:	mov    r9,0xfffffffffffffffe
   140001a18:	cmp    rdi,r9
   140001a1b:	jbe    0x140001a22
   140001a1d:	mov    rdi,rdx
   140001a20:	jmp    0x140001a53
   140001a22:	mov    r8,QWORD PTR [rcx+0x18]
   140001a26:	mov    rcx,r8
   140001a29:	shr    rcx,1
   140001a2c:	movabs rax,0xaaaaaaaaaaaaaaab
   140001a36:	mul    rdi
   140001a39:	shr    rdx,1
   140001a3c:	cmp    rcx,rdx
   140001a3f:	jbe    0x140001a53
   140001a41:	mov    rax,r9
   140001a44:	sub    rax,rcx
   140001a47:	cmp    r8,rax
   140001a4a:	lea    rdi,[rcx+r8*1]
   140001a4e:	jbe    0x140001a53
   140001a50:	mov    rdi,r9
   140001a53:	lea    rcx,[rdi+0x1]
   140001a57:	xor    r14d,r14d
   140001a5a:	test   rcx,rcx
   140001a5d:	je     0x140001a78
   140001a5f:	cmp    rcx,0xffffffffffffffff
   140001a63:	ja     0x140001a72
   140001a65:	call   0x140005bc8
   140001a6a:	mov    r14,rax
   140001a6d:	test   rax,rax
   140001a70:	jne    0x140001a78
   140001a72:	call   0x140005b48
   140001a77:	nop
   140001a78:	jmp    0x140001a8e
   140001a7a:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a7f:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a84:	mov    rdi,QWORD PTR [rsp+0x68]
   140001a89:	mov    r14,QWORD PTR [rsp+0x78]
   140001a8e:	test   rsi,rsi
   140001a91:	je     0x140001ab2
   140001a93:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a98:	jb     0x140001a9f
   140001a9a:	mov    rdx,QWORD PTR [rbx]
   140001a9d:	jmp    0x140001aa2
   140001a9f:	mov    rdx,rbx
   140001aa2:	test   rsi,rsi
   140001aa5:	je     0x140001ab2
   140001aa7:	mov    r8,rsi
   140001aaa:	mov    rcx,r14
   140001aad:	call   0x14000611a
   140001ab2:	cmp    QWORD PTR [rbx+0x18],0x10
   140001ab7:	jb     0x140001ac2
   140001ab9:	mov    rcx,QWORD PTR [rbx]
   140001abc:	call   QWORD PTR [rip+0x6896]        # 0x140008358
   140001ac2:	mov    BYTE PTR [rbx],0x0
   140001ac5:	mov    QWORD PTR [rbx],r14
   140001ac8:	mov    QWORD PTR [rbx+0x18],rdi
   140001acc:	mov    QWORD PTR [rbx+0x10],rsi
   140001ad0:	cmp    rdi,0x10
   140001ad4:	jb     0x140001ad9
   140001ad6:	mov    rbx,r14
   140001ad9:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001add:	add    rsp,0x38
   140001ae1:	pop    r14
   140001ae3:	pop    rdi
   140001ae4:	pop    rsi
   140001ae5:	pop    rbx
   140001ae6:	ret    
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	mov    rax,rsp
   140001af3:	mov    QWORD PTR [rax+0x8],rbx
   140001af7:	mov    QWORD PTR [rax+0x10],rsi
   140001afb:	mov    QWORD PTR [rax+0x18],rdi
   140001aff:	push   rbp
   140001b00:	push   r12
   140001b02:	push   r14
   140001b04:	lea    rbp,[rax-0x5f]
   140001b08:	sub    rsp,0xd0
   140001b0f:	mov    rax,QWORD PTR [rip+0xc4f2]        # 0x14000e008
   140001b16:	xor    rax,rsp
   140001b19:	mov    QWORD PTR [rbp+0x37],rax
   140001b1d:	movups xmm0,XMMWORD PTR [rip+0x855c]        # 0x14000a080
   140001b24:	xor    r14d,r14d
   140001b27:	lea    rdx,[rbp-0x39]
   140001b2b:	mov    DWORD PTR [rbp-0x49],r14d
   140001b2f:	mov    esi,r14d
   140001b32:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140001b37:	mov    DWORD PTR [rbp-0x45],r14d
   140001b3b:	mov    DWORD PTR [rbp-0x29],r14d
   140001b3f:	mov    QWORD PTR [rbp-0x21],r14
   140001b43:	call   0x140004dd0
   140001b48:	mov    DWORD PTR [rbp-0x49],eax
   140001b4b:	test   eax,eax
   140001b4d:	jns    0x140001cae
   140001b53:	call   0x1400025f4
   140001b58:	lea    ebx,[r14+0x4]
   140001b5c:	lea    rdi,[rip+0x868d]        # 0x14000a1f0
   140001b63:	lea    r12,[rip+0x8696]        # 0x14000a200
   140001b6a:	cmp    DWORD PTR [rax],ebx
   140001b6c:	jbe    0x140001ba2
   140001b6e:	mov    QWORD PTR [rbp+0x7],rdi
   140001b72:	mov    QWORD PTR [rbp+0xf],0x9
   140001b7a:	mov    QWORD PTR [rbp+0x17],r12
   140001b7e:	mov    QWORD PTR [rbp+0x1f],0x15
   140001b86:	lea    rcx,[rbp-0x19]
   140001b8a:	mov    QWORD PTR [rsp+0x28],rcx
   140001b8f:	lea    rdx,[rip+0xa082]        # 0x14000bc18
   140001b96:	mov    rcx,rax
   140001b99:	mov    DWORD PTR [rsp+0x20],ebx
   140001b9d:	call   0x1400010dc
   140001ba2:	call   0x1400025f4
   140001ba7:	cmp    DWORD PTR [rax],0x2
   140001baa:	jbe    0x140001bf7
   140001bac:	lea    rcx,[rbp-0x39]
   140001bb0:	mov    QWORD PTR [rbp+0x7],rdi
   140001bb4:	mov    QWORD PTR [rbp+0x17],rcx
   140001bb8:	lea    rcx,[rbp-0x49]
   140001bbc:	mov    QWORD PTR [rbp+0x27],rcx
   140001bc0:	mov    QWORD PTR [rbp+0xf],0x9
   140001bc8:	mov    DWORD PTR [rbp-0x39],0x2b
   140001bcf:	mov    QWORD PTR [rbp+0x1f],rbx
   140001bd3:	mov    QWORD PTR [rbp+0x2f],rbx
   140001bd7:	lea    rcx,[rbp-0x19]
   140001bdb:	mov    QWORD PTR [rsp+0x28],rcx
   140001be0:	lea    rdx,[rip+0x9ffa]        # 0x14000bbe1
   140001be7:	mov    rcx,rax
   140001bea:	mov    DWORD PTR [rsp+0x20],0x5
   140001bf2:	call   0x1400010dc
   140001bf7:	call   0x140004ff4
   140001bfc:	movups xmm0,XMMWORD PTR [rip+0x847d]        # 0x14000a080
   140001c03:	lea    rdx,[rbp-0x39]
   140001c07:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140001c0c:	call   0x140004dd0
   140001c11:	mov    DWORD PTR [rbp-0x49],eax
   140001c14:	test   eax,eax
   140001c16:	jns    0x140001cae
   140001c1c:	call   0x1400025f4
   140001c21:	cmp    DWORD PTR [rax],ebx
   140001c23:	jbe    0x140001c59
   140001c25:	mov    QWORD PTR [rbp+0x7],rdi
   140001c29:	mov    QWORD PTR [rbp+0xf],0x9
   140001c31:	mov    QWORD PTR [rbp+0x17],r12
   140001c35:	mov    QWORD PTR [rbp+0x1f],0x15
   140001c3d:	lea    rcx,[rbp-0x19]
   140001c41:	mov    QWORD PTR [rsp+0x28],rcx
   140001c46:	lea    rdx,[rip+0x9fcb]        # 0x14000bc18
   140001c4d:	mov    rcx,rax
   140001c50:	mov    DWORD PTR [rsp+0x20],ebx
   140001c54:	call   0x1400010dc
   140001c59:	call   0x1400025f4
   140001c5e:	cmp    DWORD PTR [rax],0x2
   140001c61:	jbe    0x140001cae
   140001c63:	lea    rcx,[rbp-0x39]
   140001c67:	mov    QWORD PTR [rbp+0x7],rdi
   140001c6b:	mov    QWORD PTR [rbp+0x17],rcx
   140001c6f:	lea    rcx,[rbp-0x49]
   140001c73:	mov    QWORD PTR [rbp+0x27],rcx
   140001c77:	mov    QWORD PTR [rbp+0xf],0x9
   140001c7f:	mov    DWORD PTR [rbp-0x39],0x3b
   140001c86:	mov    QWORD PTR [rbp+0x1f],rbx
   140001c8a:	mov    QWORD PTR [rbp+0x2f],rbx
   140001c8e:	lea    rcx,[rbp-0x19]
   140001c92:	mov    QWORD PTR [rsp+0x28],rcx
   140001c97:	lea    rdx,[rip+0x9f43]        # 0x14000bbe1
   140001c9e:	mov    rcx,rax
   140001ca1:	mov    DWORD PTR [rsp+0x20],0x5
   140001ca9:	call   0x1400010dc
   140001cae:	call   QWORD PTR [rip+0x649c]        # 0x140008150
   140001cb4:	mov    rcx,rax
   140001cb7:	lea    rdx,[rbp-0x45]
   140001cbb:	call   QWORD PTR [rip+0x660f]        # 0x1400082d0
   140001cc1:	mov    rbx,rax
   140001cc4:	test   rax,rax
   140001cc7:	jne    0x140001cd4
   140001cc9:	call   QWORD PTR [rip+0x6399]        # 0x140008068
   140001ccf:	jmp    0x140001da4
   140001cd4:	mov    eax,DWORD PTR [rbp-0x45]
   140001cd7:	test   eax,eax
   140001cd9:	jle    0x140001da7
   140001cdf:	cmp    eax,0x3
   140001ce2:	ja     0x140001da7
   140001ce8:	mov    rdi,QWORD PTR [rbx+0x8]
   140001cec:	mov    QWORD PTR [rbp-0x39],rdi
   140001cf0:	test   rdi,rdi
   140001cf3:	je     0x140001da7
   140001cf9:	cmp    r14w,WORD PTR [rdi]
   140001cfd:	je     0x140001da7
   140001d03:	lea    rcx,[rbp-0x39]
   140001d07:	call   0x140001dec
   140001d0c:	call   0x140005144
   140001d11:	test   eax,eax
   140001d13:	jne    0x140001d21
   140001d15:	mov    DWORD PTR [rbp-0x49],0x1
   140001d1c:	jmp    0x140001da7
   140001d21:	lea    rdx,[rbp-0x29]
   140001d25:	mov    rcx,rdi
   140001d28:	call   0x140002c78
   140001d2d:	mov    DWORD PTR [rbp-0x49],eax
   140001d30:	test   eax,eax
   140001d32:	js     0x140001da7
   140001d34:	cmp    DWORD PTR [rbp-0x45],0x3
   140001d38:	jne    0x140001d7f
   140001d3a:	cmp    QWORD PTR [rbx+0x10],r14
   140001d3e:	je     0x140001d7f
   140001d40:	call   QWORD PTR [rip+0x669a]        # 0x1400083e0
   140001d46:	mov    r8d,0xa
   140001d4c:	lea    rdx,[rbp-0x21]
   140001d50:	mov    DWORD PTR [rax],r14d
   140001d53:	mov    rcx,QWORD PTR [rbx+0x10]
   140001d57:	call   QWORD PTR [rip+0x667b]        # 0x1400083d8
   140001d5d:	mov    edi,eax
   140001d5f:	call   QWORD PTR [rip+0x667b]        # 0x1400083e0
   140001d65:	cmp    DWORD PTR [rax],0x22
   140001d68:	je     0x140001d7f
   140001d6a:	lea    ecx,[rdi+0x7fffffff]
   140001d70:	cmp    ecx,0xfffffffd
   140001d73:	ja     0x140001d7f
   140001d75:	mov    DWORD PTR [rbp-0x49],r14d
   140001d79:	test   edi,edi
   140001d7b:	js     0x140001d7f
   140001d7d:	mov    esi,edi
   140001d7f:	mov    edx,DWORD PTR [rbp-0x29]
   140001d82:	mov    ecx,r14d
   140001d85:	mov    DWORD PTR [rbp-0x39],ecx
   140001d88:	test   edx,edx
   140001d8a:	jne    0x140001d91
   140001d8c:	mov    eax,r14d
   140001d8f:	jmp    0x140001d9f
   140001d91:	lea    r8,[rbp-0x39]
   140001d95:	mov    ecx,esi
   140001d97:	call   0x140002f5c
   140001d9c:	mov    ecx,DWORD PTR [rbp-0x39]
   140001d9f:	test   eax,eax
   140001da1:	cmovns eax,ecx
   140001da4:	mov    DWORD PTR [rbp-0x49],eax
   140001da7:	call   0x140004ff4
   140001dac:	test   rbx,rbx
   140001daf:	je     0x140001dba
   140001db1:	mov    rcx,rbx
   140001db4:	call   QWORD PTR [rip+0x62f6]        # 0x1400080b0
   140001dba:	mov    eax,DWORD PTR [rbp-0x49]
   140001dbd:	mov    rcx,QWORD PTR [rbp+0x37]
   140001dc1:	xor    rcx,rsp
   140001dc4:	call   0x140005fe0
   140001dc9:	lea    r11,[rsp+0xd0]
   140001dd1:	mov    rbx,QWORD PTR [r11+0x20]
   140001dd5:	mov    rsi,QWORD PTR [r11+0x28]
   140001dd9:	mov    rdi,QWORD PTR [r11+0x30]
   140001ddd:	mov    rsp,r11
   140001de0:	pop    r14
   140001de2:	pop    r12
   140001de4:	pop    rbp
   140001de5:	ret    
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	rex push rbx
   140001dee:	sub    rsp,0x70
   140001df2:	mov    rax,QWORD PTR [rip+0xc20f]        # 0x14000e008
   140001df9:	xor    rax,rsp
   140001dfc:	mov    QWORD PTR [rsp+0x60],rax
   140001e01:	mov    rbx,rcx
   140001e04:	call   0x140001f04
   140001e09:	mov    rcx,rax
   140001e0c:	cmp    DWORD PTR [rax],0x5
   140001e0f:	jbe    0x140001e87
   140001e11:	movabs rax,0x200000000000
   140001e1b:	test   QWORD PTR [rcx+0x10],rax
   140001e1f:	je     0x140001e87
   140001e21:	mov    rdx,QWORD PTR [rcx+0x18]
   140001e25:	and    rdx,rax
   140001e28:	cmp    rdx,QWORD PTR [rcx+0x18]
   140001e2c:	jne    0x140001e87
   140001e2e:	mov    rdx,QWORD PTR [rbx]
   140001e31:	lea    r8,[rip+0x83e0]        # 0x14000a218
   140001e38:	xor    r9d,r9d
   140001e3b:	mov    eax,r9d
   140001e3e:	test   rdx,rdx
   140001e41:	je     0x140001e54
   140001e43:	mov    r8,rdx
   140001e46:	or     rax,0xffffffffffffffff
   140001e4a:	inc    rax
   140001e4d:	cmp    WORD PTR [rdx+rax*2],r9w
   140001e52:	jne    0x140001e4a
   140001e54:	lea    eax,[rax*2+0x2]
   140001e5b:	mov    QWORD PTR [rsp+0x50],r8
   140001e60:	mov    DWORD PTR [rsp+0x58],eax
   140001e64:	mov    DWORD PTR [rsp+0x5c],r9d
   140001e69:	lea    rax,[rsp+0x30]
   140001e6e:	mov    QWORD PTR [rsp+0x28],rax
   140001e73:	lea    rdx,[rip+0x9d37]        # 0x14000bbb1
   140001e7a:	mov    DWORD PTR [rsp+0x20],0x3
   140001e82:	call   0x1400010dc
   140001e87:	mov    rcx,QWORD PTR [rsp+0x60]
   140001e8c:	xor    rcx,rsp
   140001e8f:	call   0x140005fe0
   140001e94:	add    rsp,0x70
   140001e98:	pop    rbx
   140001e99:	ret    
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140001eaa:	push   rdi
   140001eab:	sub    rsp,0x20
   140001eaf:	cmp    BYTE PTR [rcx+0x10],0x0
   140001eb3:	lea    rax,[rip+0x8216]        # 0x14000a0d0
   140001eba:	mov    QWORD PTR [rcx],rax
   140001ebd:	mov    esi,edx
   140001ebf:	mov    rdi,rcx
   140001ec2:	je     0x140001eda
   140001ec4:	mov    rbx,QWORD PTR [rcx+0x8]
   140001ec8:	mov    rcx,QWORD PTR [rbx+0x20]
   140001ecc:	call   QWORD PTR [rip+0x63de]        # 0x1400082b0
   140001ed2:	and    QWORD PTR [rbx+0x20],0x0
   140001ed7:	and    DWORD PTR [rbx],0x0
   140001eda:	test   sil,0x1
   140001ede:	je     0x140001ee9
   140001ee0:	mov    rcx,rdi
   140001ee3:	call   QWORD PTR [rip+0x646f]        # 0x140008358
   140001ee9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001eee:	mov    rax,rdi
   140001ef1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ef6:	add    rsp,0x20
   140001efa:	pop    rdi
   140001efb:	ret    
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	int3   
   140001f01:	int3   
   140001f02:	int3   
   140001f03:	int3   
   140001f04:	mov    QWORD PTR [rsp+0x18],rbx
   140001f09:	push   rdi
   140001f0a:	sub    rsp,0x20
   140001f0e:	mov    eax,DWORD PTR [rip+0xc864]        # 0x14000e778
   140001f14:	test   al,0x1
   140001f16:	jne    0x140001f2d
   140001f18:	or     eax,0x1
   140001f1b:	lea    rcx,[rip+0x4dee]        # 0x140006d10
   140001f22:	mov    DWORD PTR [rip+0xc850],eax        # 0x14000e778
   140001f28:	call   0x1400060a8
   140001f2d:	lea    r9,[rsp+0x38]
   140001f32:	xor    edx,edx
   140001f34:	lea    r8,[rsp+0x30]
   140001f39:	lea    rcx,[rip+0xc840]        # 0x14000e780
   140001f40:	call   QWORD PTR [rip+0x62ca]        # 0x140008210
   140001f46:	cmp    DWORD PTR [rsp+0x30],0x0
   140001f4b:	je     0x140001faf
   140001f4d:	lea    rax,[rip+0x817c]        # 0x14000a0d0
   140001f54:	lea    rdi,[rip+0xc82d]        # 0x14000e788
   140001f5b:	mov    QWORD PTR [rip+0xc826],rax        # 0x14000e788
   140001f62:	mov    QWORD PTR [rsp+0x38],rdi
   140001f67:	call   0x1400025f4
   140001f6c:	mov    QWORD PTR [rip+0xc81d],rax        # 0x14000e790
   140001f73:	mov    rax,QWORD PTR [rip+0xc80e]        # 0x14000e788
   140001f7a:	mov    BYTE PTR [rip+0xc817],0x0        # 0x14000e798
   140001f81:	mov    DWORD PTR [rip+0xc811],0x1        # 0x14000e79c
   140001f8b:	mov    rbx,QWORD PTR [rax+0x8]
   140001f8f:	mov    rcx,rbx
   140001f92:	call   QWORD PTR [rip+0x6478]        # 0x140008410
   140001f98:	mov    rcx,rdi
   140001f9b:	call   rbx
   140001f9d:	mov    r8,rdi
   140001fa0:	lea    rcx,[rip+0xc7d9]        # 0x14000e780
   140001fa7:	xor    edx,edx
   140001fa9:	call   QWORD PTR [rip+0x6241]        # 0x1400081f0
   140001faf:	mov    rax,QWORD PTR [rsp+0x38]
   140001fb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140001fb9:	mov    rax,QWORD PTR [rax+0x8]
   140001fbd:	add    rsp,0x20
   140001fc1:	pop    rdi
   140001fc2:	ret    
   140001fc3:	int3   
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140001fda:	push   rdi
   140001fdb:	sub    rsp,0x20
   140001fdf:	mov    eax,DWORD PTR [rip+0xc07b]        # 0x14000e060
   140001fe5:	mov    rdi,rdx
   140001fe8:	mov    r8d,DWORD PTR [rdx+0x8]
   140001fec:	mov    rsi,rcx
   140001fef:	cmp    eax,r8d
   140001ff2:	mov    DWORD PTR [rip+0xc067],r8d        # 0x14000e060
   140001ff9:	sete   al
   140001ffc:	test   al,al
   140001ffe:	jne    0x14000201a
   140002000:	mov    rax,QWORD PTR [rcx]
   140002003:	mov    rbx,QWORD PTR [rax+0x10]
   140002007:	mov    rcx,rbx
   14000200a:	call   QWORD PTR [rip+0x6400]        # 0x140008410
   140002010:	mov    r8,rdi
   140002013:	xor    edx,edx
   140002015:	mov    rcx,rsi
   140002018:	call   rbx
   14000201a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000201f:	mov    al,0x1
   140002021:	mov    rsi,QWORD PTR [rsp+0x38]
   140002026:	add    rsp,0x20
   14000202a:	pop    rdi
   14000202b:	ret    
   14000202c:	int3   
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	int3   
   140002031:	int3   
   140002032:	int3   
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	ret    0x0
   140002043:	int3   
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	mov    rax,rsp
   14000204f:	mov    QWORD PTR [rax+0x10],rbx
   140002053:	mov    QWORD PTR [rax+0x18],rsi
   140002057:	mov    QWORD PTR [rax+0x20],rdi
   14000205b:	push   rbp
   14000205c:	lea    rbp,[rax-0x68]
   140002060:	sub    rsp,0x160
   140002067:	mov    rax,QWORD PTR [rip+0xbf9a]        # 0x14000e008
   14000206e:	xor    rax,rsp
   140002071:	mov    QWORD PTR [rbp+0x50],rax
   140002075:	mov    r9,QWORD PTR [rcx+0x8]
   140002079:	cmp    DWORD PTR [r9],0x5
   14000207d:	jbe    0x1400022b9
   140002083:	movabs rcx,0x200000000000
   14000208d:	test   QWORD PTR [r9+0x10],rcx
   140002091:	je     0x1400022b9
   140002097:	mov    rax,QWORD PTR [r9+0x18]
   14000209b:	and    rax,rcx
   14000209e:	cmp    rax,QWORD PTR [r9+0x18]
   1400020a2:	jne    0x1400022b9
   1400020a8:	mov    eax,DWORD PTR [rdx+0x4]
   1400020ab:	lea    r10,[rip+0x8168]        # 0x14000a21a
   1400020b2:	mov    rcx,QWORD PTR [rdx+0x30]
   1400020b6:	xor    ebx,ebx
   1400020b8:	mov    DWORD PTR [rsp+0x40],eax
   1400020bc:	or     rdi,0xffffffffffffffff
   1400020c0:	mov    QWORD PTR [rsp+0x78],0x4
   1400020c9:	lea    rax,[rsp+0x40]
   1400020ce:	mov    QWORD PTR [rsp+0x70],rax
   1400020d3:	mov    eax,ebx
   1400020d5:	mov    r8,r10
   1400020d8:	test   rcx,rcx
   1400020db:	je     0x1400020eb
   1400020dd:	mov    r8,rcx
   1400020e0:	mov    rax,rdi
   1400020e3:	inc    rax
   1400020e6:	cmp    BYTE PTR [rcx+rax*1],bl
   1400020e9:	jne    0x1400020e3
   1400020eb:	mov    rcx,QWORD PTR [rdx+0x78]
   1400020ef:	inc    eax
   1400020f1:	mov    DWORD PTR [rbp-0x78],eax
   1400020f4:	lea    rax,[rdx+0x38]
   1400020f8:	mov    QWORD PTR [rbp-0x70],rax
   1400020fc:	mov    rax,rbx
   1400020ff:	mov    QWORD PTR [rbp-0x80],r8
   140002103:	mov    r8,r10
   140002106:	mov    DWORD PTR [rbp-0x74],ebx
   140002109:	mov    QWORD PTR [rbp-0x68],0x4
   140002111:	test   rcx,rcx
   140002114:	je     0x140002124
   140002116:	mov    r8,rcx
   140002119:	mov    rax,rdi
   14000211c:	inc    rax
   14000211f:	cmp    BYTE PTR [rcx+rax*1],bl
   140002122:	jne    0x14000211c
   140002124:	mov    rcx,QWORD PTR [rdx+0x10]
   140002128:	lea    r11,[rip+0x80e9]        # 0x14000a218
   14000212f:	inc    eax
   140002131:	mov    QWORD PTR [rbp-0x60],r8
   140002135:	mov    DWORD PTR [rbp-0x58],eax
   140002138:	mov    r8,r11
   14000213b:	mov    eax,DWORD PTR [rdx]
   14000213d:	mov    DWORD PTR [rsp+0x38],eax
   140002141:	lea    rax,[rsp+0x38]
   140002146:	mov    QWORD PTR [rbp-0x50],rax
   14000214a:	mov    rax,rbx
   14000214d:	mov    DWORD PTR [rbp-0x54],ebx
   140002150:	mov    QWORD PTR [rbp-0x48],0x4
   140002158:	test   rcx,rcx
   14000215b:	je     0x14000216c
   14000215d:	mov    r8,rcx
   140002160:	mov    rax,rdi
   140002163:	inc    rax
   140002166:	cmp    WORD PTR [rcx+rax*2],bx
   14000216a:	jne    0x140002163
   14000216c:	mov    rcx,QWORD PTR [rdx+0x40]
   140002170:	lea    eax,[rax*2+0x2]
   140002177:	mov    DWORD PTR [rbp-0x38],eax
   14000217a:	mov    eax,DWORD PTR [rdx+0x18]
   14000217d:	mov    DWORD PTR [rsp+0x30],eax
   140002181:	lea    rax,[rsp+0x30]
   140002186:	mov    QWORD PTR [rbp-0x30],rax
   14000218a:	mov    rax,rbx
   14000218d:	mov    QWORD PTR [rbp-0x40],r8
   140002191:	mov    r8,r10
   140002194:	mov    DWORD PTR [rbp-0x34],ebx
   140002197:	mov    QWORD PTR [rbp-0x28],0x4
   14000219f:	test   rcx,rcx
   1400021a2:	je     0x1400021b2
   1400021a4:	mov    r8,rcx
   1400021a7:	mov    rax,rdi
   1400021aa:	inc    rax
   1400021ad:	cmp    BYTE PTR [rcx+rax*1],bl
   1400021b0:	jne    0x1400021aa
   1400021b2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400021b6:	inc    eax
   1400021b8:	mov    DWORD PTR [rbp-0x18],eax
   1400021bb:	mov    eax,DWORD PTR [rdx+0x48]
   1400021be:	mov    DWORD PTR [rsp+0x34],eax
   1400021c2:	lea    rax,[rsp+0x34]
   1400021c7:	mov    QWORD PTR [rbp-0x10],rax
   1400021cb:	mov    rax,rbx
   1400021ce:	mov    QWORD PTR [rbp-0x20],r8
   1400021d2:	mov    r8,r10
   1400021d5:	mov    DWORD PTR [rbp-0x14],ebx
   1400021d8:	mov    QWORD PTR [rbp-0x8],0x4
   1400021e0:	test   rcx,rcx
   1400021e3:	je     0x1400021f3
   1400021e5:	mov    r8,rcx
   1400021e8:	mov    rax,rdi
   1400021eb:	inc    rax
   1400021ee:	cmp    BYTE PTR [rcx+rax*1],bl
   1400021f1:	jne    0x1400021eb
   1400021f3:	mov    rcx,QWORD PTR [rdx+0x58]
   1400021f7:	inc    eax
   1400021f9:	mov    DWORD PTR [rbp+0x8],eax
   1400021fc:	mov    rax,rbx
   1400021ff:	mov    QWORD PTR [rbp+0x0],r8
   140002203:	mov    r8,r11
   140002206:	mov    DWORD PTR [rbp+0xc],ebx
   140002209:	test   rcx,rcx
   14000220c:	je     0x14000221d
   14000220e:	mov    r8,rcx
   140002211:	mov    rax,rdi
   140002214:	inc    rax
   140002217:	cmp    WORD PTR [rcx+rax*2],bx
   14000221b:	jne    0x140002214
   14000221d:	mov    rcx,QWORD PTR [rdx+0x68]
   140002221:	lea    eax,[rax*2+0x2]
   140002228:	mov    DWORD PTR [rbp+0x18],eax
   14000222b:	mov    eax,DWORD PTR [rdx+0x60]
   14000222e:	mov    DWORD PTR [rsp+0x3c],eax
   140002232:	lea    rax,[rsp+0x3c]
   140002237:	mov    QWORD PTR [rbp+0x20],rax
   14000223b:	mov    rax,rbx
   14000223e:	mov    QWORD PTR [rbp+0x10],r8
   140002242:	mov    DWORD PTR [rbp+0x1c],ebx
   140002245:	mov    QWORD PTR [rbp+0x28],0x4
   14000224d:	test   rcx,rcx
   140002250:	je     0x140002260
   140002252:	mov    r10,rcx
   140002255:	mov    rax,rdi
   140002258:	inc    rax
   14000225b:	cmp    BYTE PTR [rcx+rax*1],bl
   14000225e:	jne    0x140002258
   140002260:	mov    rcx,QWORD PTR [rdx+0x70]
   140002264:	inc    eax
   140002266:	mov    DWORD PTR [rbp+0x38],eax
   140002269:	mov    rax,rbx
   14000226c:	mov    QWORD PTR [rbp+0x30],r10
   140002270:	mov    DWORD PTR [rbp+0x3c],ebx
   140002273:	test   rcx,rcx
   140002276:	je     0x140002287
   140002278:	mov    r11,rcx
   14000227b:	mov    rax,rdi
   14000227e:	inc    rax
   140002281:	cmp    WORD PTR [rcx+rax*2],bx
   140002285:	jne    0x14000227e
   140002287:	lea    eax,[rax*2+0x2]
   14000228e:	mov    QWORD PTR [rbp+0x40],r11
   140002292:	mov    DWORD PTR [rbp+0x48],eax
   140002295:	mov    DWORD PTR [rbp+0x4c],ebx
   140002298:	lea    rax,[rsp+0x50]
   14000229d:	mov    rcx,r9
   1400022a0:	mov    QWORD PTR [rsp+0x28],rax
   1400022a5:	lea    rdx,[rip+0x999f]        # 0x14000bc4b
   1400022ac:	mov    DWORD PTR [rsp+0x20],0x10
   1400022b4:	call   0x1400010dc
   1400022b9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400022bd:	xor    rcx,rsp
   1400022c0:	call   0x140005fe0
   1400022c5:	lea    r11,[rsp+0x160]
   1400022cd:	mov    rbx,QWORD PTR [r11+0x18]
   1400022d1:	mov    rsi,QWORD PTR [r11+0x20]
   1400022d5:	mov    rdi,QWORD PTR [r11+0x28]
   1400022d9:	mov    rsp,r11
   1400022dc:	pop    rbp
   1400022dd:	ret    
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	int3   
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	mov    rax,rsp
   1400022e7:	mov    QWORD PTR [rax+0x10],rbx
   1400022eb:	mov    QWORD PTR [rax+0x18],rsi
   1400022ef:	mov    QWORD PTR [rax+0x20],rdi
   1400022f3:	push   rbp
   1400022f4:	lea    rbp,[rax-0x98]
   1400022fb:	sub    rsp,0x190
   140002302:	mov    rax,QWORD PTR [rip+0xbcff]        # 0x14000e008
   140002309:	xor    rax,rsp
   14000230c:	mov    QWORD PTR [rbp+0x80],rax
   140002313:	mov    r11,QWORD PTR [rcx+0x8]
   140002317:	cmp    DWORD PTR [r11],0x5
   14000231b:	jbe    0x14000258b
   140002321:	mov    eax,DWORD PTR [rdx+0x4]
   140002324:	lea    r9,[rip+0x7eef]        # 0x14000a21a
   14000232b:	mov    rcx,QWORD PTR [rdx+0x30]
   14000232f:	xor    ebx,ebx
   140002331:	mov    DWORD PTR [rsp+0x40],eax
   140002335:	or     rdi,0xffffffffffffffff
   140002339:	mov    QWORD PTR [rsp+0x78],0x4
   140002342:	lea    rax,[rsp+0x40]
   140002347:	mov    QWORD PTR [rsp+0x70],rax
   14000234c:	mov    eax,ebx
   14000234e:	mov    r8,r9
   140002351:	test   rcx,rcx
   140002354:	je     0x140002364
   140002356:	mov    r8,rcx
   140002359:	mov    rax,rdi
   14000235c:	inc    rax
   14000235f:	cmp    BYTE PTR [rcx+rax*1],bl
   140002362:	jne    0x14000235c
   140002364:	mov    rcx,QWORD PTR [rdx+0x78]
   140002368:	inc    eax
   14000236a:	mov    DWORD PTR [rbp-0x78],eax
   14000236d:	lea    rax,[rdx+0x38]
   140002371:	mov    QWORD PTR [rbp-0x70],rax
   140002375:	mov    rax,rbx
   140002378:	mov    QWORD PTR [rbp-0x80],r8
   14000237c:	mov    r8,r9
   14000237f:	mov    DWORD PTR [rbp-0x74],ebx
   140002382:	mov    QWORD PTR [rbp-0x68],0x4
   14000238a:	test   rcx,rcx
   14000238d:	je     0x14000239d
   14000238f:	mov    r8,rcx
   140002392:	mov    rax,rdi
   140002395:	inc    rax
   140002398:	cmp    BYTE PTR [rcx+rax*1],bl
   14000239b:	jne    0x140002395
   14000239d:	mov    rcx,QWORD PTR [rdx+0x10]
   1400023a1:	lea    r10,[rip+0x7e70]        # 0x14000a218
   1400023a8:	inc    eax
   1400023aa:	mov    QWORD PTR [rbp-0x60],r8
   1400023ae:	mov    DWORD PTR [rbp-0x58],eax
   1400023b1:	mov    r8,r10
   1400023b4:	mov    eax,DWORD PTR [rdx]
   1400023b6:	mov    DWORD PTR [rsp+0x38],eax
   1400023ba:	lea    rax,[rsp+0x38]
   1400023bf:	mov    QWORD PTR [rbp-0x50],rax
   1400023c3:	mov    rax,rbx
   1400023c6:	mov    DWORD PTR [rbp-0x54],ebx
   1400023c9:	mov    QWORD PTR [rbp-0x48],0x4
   1400023d1:	test   rcx,rcx
   1400023d4:	je     0x1400023e5
   1400023d6:	mov    r8,rcx
   1400023d9:	mov    rax,rdi
   1400023dc:	inc    rax
   1400023df:	cmp    WORD PTR [rcx+rax*2],bx
   1400023e3:	jne    0x1400023dc
   1400023e5:	mov    rcx,QWORD PTR [rdx+0x40]
   1400023e9:	lea    eax,[rax*2+0x2]
   1400023f0:	mov    DWORD PTR [rbp-0x38],eax
   1400023f3:	mov    eax,DWORD PTR [rdx+0x18]
   1400023f6:	mov    DWORD PTR [rsp+0x48],eax
   1400023fa:	lea    rax,[rsp+0x48]
   1400023ff:	mov    QWORD PTR [rbp-0x30],rax
   140002403:	mov    rax,rbx
   140002406:	mov    QWORD PTR [rbp-0x40],r8
   14000240a:	mov    r8,r9
   14000240d:	mov    DWORD PTR [rbp-0x34],ebx
   140002410:	mov    QWORD PTR [rbp-0x28],0x4
   140002418:	test   rcx,rcx
   14000241b:	je     0x14000242b
   14000241d:	mov    r8,rcx
   140002420:	mov    rax,rdi
   140002423:	inc    rax
   140002426:	cmp    BYTE PTR [rcx+rax*1],bl
   140002429:	jne    0x140002423
   14000242b:	mov    rcx,QWORD PTR [rdx+0x50]
   14000242f:	inc    eax
   140002431:	mov    DWORD PTR [rbp-0x18],eax
   140002434:	mov    eax,DWORD PTR [rdx+0x48]
   140002437:	mov    DWORD PTR [rsp+0x30],eax
   14000243b:	lea    rax,[rsp+0x30]
   140002440:	mov    QWORD PTR [rbp-0x10],rax
   140002444:	mov    rax,rbx
   140002447:	mov    QWORD PTR [rbp-0x20],r8
   14000244b:	mov    r8,r9
   14000244e:	mov    DWORD PTR [rbp-0x14],ebx
   140002451:	mov    QWORD PTR [rbp-0x8],0x4
   140002459:	test   rcx,rcx
   14000245c:	je     0x14000246c
   14000245e:	mov    r8,rcx
   140002461:	mov    rax,rdi
   140002464:	inc    rax
   140002467:	cmp    BYTE PTR [rcx+rax*1],bl
   14000246a:	jne    0x140002464
   14000246c:	mov    rcx,QWORD PTR [rdx+0x58]
   140002470:	inc    eax
   140002472:	mov    DWORD PTR [rbp+0x8],eax
   140002475:	mov    rax,rbx
   140002478:	mov    QWORD PTR [rbp+0x0],r8
   14000247c:	mov    r8,r10
   14000247f:	mov    DWORD PTR [rbp+0xc],ebx
   140002482:	test   rcx,rcx
   140002485:	je     0x140002496
   140002487:	mov    r8,rcx
   14000248a:	mov    rax,rdi
   14000248d:	inc    rax
   140002490:	cmp    WORD PTR [rcx+rax*2],bx
   140002494:	jne    0x14000248d
   140002496:	mov    rcx,QWORD PTR [rdx+0x68]
   14000249a:	lea    eax,[rax*2+0x2]
   1400024a1:	mov    DWORD PTR [rbp+0x18],eax
   1400024a4:	mov    eax,DWORD PTR [rdx+0x60]
   1400024a7:	mov    DWORD PTR [rsp+0x34],eax
   1400024ab:	lea    rax,[rsp+0x34]
   1400024b0:	mov    QWORD PTR [rbp+0x20],rax
   1400024b4:	mov    rax,rbx
   1400024b7:	mov    QWORD PTR [rbp+0x10],r8
   1400024bb:	mov    r8,r9
   1400024be:	mov    DWORD PTR [rbp+0x1c],ebx
   1400024c1:	mov    QWORD PTR [rbp+0x28],0x4
   1400024c9:	test   rcx,rcx
   1400024cc:	je     0x1400024dc
   1400024ce:	mov    r8,rcx
   1400024d1:	mov    rax,rdi
   1400024d4:	inc    rax
   1400024d7:	cmp    BYTE PTR [rcx+rax*1],bl
   1400024da:	jne    0x1400024d4
   1400024dc:	mov    rcx,QWORD PTR [rdx+0x70]
   1400024e0:	inc    eax
   1400024e2:	mov    DWORD PTR [rbp+0x38],eax
   1400024e5:	mov    rax,rbx
   1400024e8:	mov    QWORD PTR [rbp+0x30],r8
   1400024ec:	mov    DWORD PTR [rbp+0x3c],ebx
   1400024ef:	test   rcx,rcx
   1400024f2:	je     0x140002503
   1400024f4:	mov    r10,rcx
   1400024f7:	mov    rax,rdi
   1400024fa:	inc    rax
   1400024fd:	cmp    WORD PTR [rcx+rax*2],bx
   140002501:	jne    0x1400024fa
   140002503:	mov    rcx,QWORD PTR [rdx+0x28]
   140002507:	lea    eax,[rax*2+0x2]
   14000250e:	mov    DWORD PTR [rbp+0x48],eax
   140002511:	mov    eax,DWORD PTR [rdx+0x8]
   140002514:	mov    DWORD PTR [rsp+0x3c],eax
   140002518:	lea    rax,[rsp+0x3c]
   14000251d:	mov    QWORD PTR [rbp+0x50],rax
   140002521:	mov    eax,DWORD PTR [rdx+0x3c]
   140002524:	mov    DWORD PTR [rsp+0x44],eax
   140002528:	lea    rax,[rsp+0x44]
   14000252d:	mov    QWORD PTR [rbp+0x60],rax
   140002531:	mov    rax,rbx
   140002534:	mov    QWORD PTR [rbp+0x40],r10
   140002538:	mov    DWORD PTR [rbp+0x4c],ebx
   14000253b:	mov    QWORD PTR [rbp+0x58],0x4
   140002543:	mov    QWORD PTR [rbp+0x68],0x4
   14000254b:	test   rcx,rcx
   14000254e:	je     0x14000255e
   140002550:	mov    r9,rcx
   140002553:	mov    rax,rdi
   140002556:	inc    rax
   140002559:	cmp    BYTE PTR [rcx+rax*1],bl
   14000255c:	jne    0x140002556
   14000255e:	inc    eax
   140002560:	mov    QWORD PTR [rbp+0x70],r9
   140002564:	mov    DWORD PTR [rbp+0x78],eax
   140002567:	mov    DWORD PTR [rbp+0x7c],ebx
   14000256a:	lea    rax,[rsp+0x50]
   14000256f:	mov    rcx,r11
   140002572:	mov    QWORD PTR [rsp+0x28],rax
   140002577:	lea    rdx,[rip+0x97d0]        # 0x14000bd4e
   14000257e:	mov    DWORD PTR [rsp+0x20],0x13
   140002586:	call   0x1400010dc
   14000258b:	mov    rcx,QWORD PTR [rbp+0x80]
   140002592:	xor    rcx,rsp
   140002595:	call   0x140005fe0
   14000259a:	lea    r11,[rsp+0x190]
   1400025a2:	mov    rbx,QWORD PTR [r11+0x18]
   1400025a6:	mov    rsi,QWORD PTR [r11+0x20]
   1400025aa:	mov    rdi,QWORD PTR [r11+0x28]
   1400025ae:	mov    rsp,r11
   1400025b1:	pop    rbp
   1400025b2:	ret    
   1400025b3:	int3   
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	sub    rsp,0x28
   1400025c4:	test   dl,dl
   1400025c6:	jne    0x1400025e8
   1400025c8:	cmp    DWORD PTR [rcx+0x14],0x1
   1400025cc:	jne    0x1400025da
   1400025ce:	mov    rdx,r8
   1400025d1:	add    rsp,0x28
   1400025d5:	jmp    0x14000204c
   1400025da:	cmp    DWORD PTR [rcx+0x14],0x2
   1400025de:	jne    0x1400025e8
   1400025e0:	mov    rdx,r8
   1400025e3:	call   0x1400022e4
   1400025e8:	add    rsp,0x28
   1400025ec:	ret    
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	int3   
   1400025f1:	int3   
   1400025f2:	int3   
   1400025f3:	int3   
   1400025f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400025f9:	push   rdi
   1400025fa:	sub    rsp,0x50
   1400025fe:	mov    rax,QWORD PTR [rip+0xba03]        # 0x14000e008
   140002605:	xor    rax,rsp
   140002608:	mov    QWORD PTR [rsp+0x40],rax
   14000260d:	mov    eax,DWORD PTR [rip+0xc18d]        # 0x14000e7a0
   140002613:	test   al,0x1
   140002615:	jne    0x14000262c
   140002617:	or     eax,0x1
   14000261a:	lea    rcx,[rip+0x475f]        # 0x140006d80
   140002621:	mov    DWORD PTR [rip+0xc179],eax        # 0x14000e7a0
   140002627:	call   0x1400060a8
   14000262c:	lea    r9,[rsp+0x28]
   140002631:	xor    edx,edx
   140002633:	lea    r8,[rsp+0x20]
   140002638:	lea    rcx,[rip+0xc169]        # 0x14000e7a8
   14000263f:	call   QWORD PTR [rip+0x5bcb]        # 0x140008210
   140002645:	xor    ebx,ebx
   140002647:	cmp    DWORD PTR [rsp+0x20],ebx
   14000264b:	je     0x140002713
   140002651:	lea    rdi,[rip+0xc158]        # 0x14000e7b0
   140002658:	lea    rax,[rip+0x7a71]        # 0x14000a0d0
   14000265f:	mov    QWORD PTR [rsp+0x28],rdi
   140002664:	mov    QWORD PTR [rip+0xc145],rax        # 0x14000e7b0
   14000266b:	mov    rax,QWORD PTR [rip+0xb9b6]        # 0x14000e028
   140002672:	lea    r8,[rip+0xb9a7]        # 0x14000e020
   140002679:	mov    QWORD PTR [rip+0xc148],r8        # 0x14000e7c8
   140002680:	lea    r9,[rip+0xb9b9]        # 0x14000e040
   140002687:	mov    QWORD PTR [rip+0xc12a],r8        # 0x14000e7b8
   14000268e:	lea    rdx,[rip+0xffffffffffffe97b]        # 0x140001010
   140002695:	mov    BYTE PTR [rip+0xc124],0x1        # 0x14000e7c0
   14000269c:	lea    rcx,[rsp+0x30]
   1400026a1:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400026a5:	mov    QWORD PTR [rip+0xb99c],rbx        # 0x14000e048
   1400026ac:	mov    QWORD PTR [rip+0xb99d],rbx        # 0x14000e050
   1400026b3:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400026b9:	call   QWORD PTR [rip+0x5c01]        # 0x1400082c0
   1400026bf:	test   eax,eax
   1400026c1:	jne    0x1400026de
   1400026c3:	mov    r8,QWORD PTR [rip+0xb95e]        # 0x14000e028
   1400026ca:	lea    edx,[rbx+0x2]
   1400026cd:	mov    rcx,QWORD PTR [rip+0xb96c]        # 0x14000e040
   1400026d4:	movzx  r9d,WORD PTR [r8]
   1400026d8:	call   QWORD PTR [rip+0x5bda]        # 0x1400082b8
   1400026de:	mov    rax,QWORD PTR [rip+0xc0cb]        # 0x14000e7b0
   1400026e5:	mov    DWORD PTR [rip+0xc0d5],0x1        # 0x14000e7c4
   1400026ef:	mov    rbx,QWORD PTR [rax+0x8]
   1400026f3:	mov    rcx,rbx
   1400026f6:	call   QWORD PTR [rip+0x5d14]        # 0x140008410
   1400026fc:	mov    rcx,rdi
   1400026ff:	call   rbx
   140002701:	mov    r8,rdi
   140002704:	lea    rcx,[rip+0xc09d]        # 0x14000e7a8
   14000270b:	xor    edx,edx
   14000270d:	call   QWORD PTR [rip+0x5add]        # 0x1400081f0
   140002713:	mov    rax,QWORD PTR [rsp+0x28]
   140002718:	mov    rax,QWORD PTR [rax+0x8]
   14000271c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002721:	xor    rcx,rsp
   140002724:	call   0x140005fe0
   140002729:	mov    rbx,QWORD PTR [rsp+0x60]
   14000272e:	add    rsp,0x50
   140002732:	pop    rdi
   140002733:	ret    
   140002734:	int3   
   140002735:	int3   
   140002736:	int3   
   140002737:	int3   
   140002738:	int3   
   140002739:	int3   
   14000273a:	int3   
   14000273b:	int3   
   14000273c:	mov    rax,rsp
   14000273f:	mov    DWORD PTR [rax+0x8],ecx
   140002742:	push   rbp
   140002743:	push   r12
   140002745:	push   r13
   140002747:	push   r14
   140002749:	push   r15
   14000274b:	lea    rbp,[rax-0x5f]
   14000274f:	sub    rsp,0xe0
   140002756:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   14000275e:	mov    QWORD PTR [rax+0x10],rbx
   140002762:	mov    QWORD PTR [rax+0x18],rsi
   140002766:	mov    QWORD PTR [rax+0x20],rdi
   14000276a:	mov    r15d,r9d
   14000276d:	mov    r12,r8
   140002770:	mov    r13d,edx
   140002773:	and    DWORD PTR [rbp-0x29],0x0
   140002777:	and    QWORD PTR [rbp-0x21],0x0
   14000277c:	and    DWORD PTR [rbp-0x1],0x0
   140002780:	xor    eax,eax
   140002782:	mov    QWORD PTR [rbp+0x3],rax
   140002786:	and    DWORD PTR [rbp-0x9],eax
   140002789:	and    QWORD PTR [rbp-0x11],rax
   14000278d:	and    QWORD PTR [rbp-0x19],rax
   140002791:	xor    edx,edx
   140002793:	lea    rcx,[rip+0x8216]        # 0x14000a9b0
   14000279a:	call   0x14000523c
   14000279f:	xor    ecx,ecx
   1400027a1:	lea    ebx,[rcx+0x1]
   1400027a4:	cmp    eax,ebx
   1400027a6:	sete   cl
   1400027a9:	xor    eax,eax
   1400027ab:	test   ecx,ecx
   1400027ad:	setne  al
   1400027b0:	mov    DWORD PTR [rbp-0x5],eax
   1400027b3:	xor    edx,edx
   1400027b5:	xor    ecx,ecx
   1400027b7:	call   QWORD PTR [rip+0x584b]        # 0x140008008
   1400027bd:	mov    r14d,eax
   1400027c0:	xor    edi,edi
   1400027c2:	test   eax,eax
   1400027c4:	cmovns edi,ebx
   1400027c7:	mov    DWORD PTR [rbp+0xf],edi
   1400027ca:	mov    DWORD PTR [rbp-0x29],eax
   1400027cd:	js     0x140002921
   1400027d3:	lea    rax,[rbp-0x11]
   1400027d7:	mov    QWORD PTR [rsp+0x20],rax
   1400027dc:	lea    r9,[rip+0x7bb5]        # 0x14000a398
   1400027e3:	xor    edx,edx
   1400027e5:	lea    r8d,[rbx+0x3]
   1400027e9:	lea    rcx,[rip+0x7bb8]        # 0x14000a3a8
   1400027f0:	call   QWORD PTR [rip+0x5822]        # 0x140008018
   1400027f6:	mov    r14d,eax
   1400027f9:	mov    DWORD PTR [rbp-0x29],eax
   1400027fc:	test   eax,eax
   1400027fe:	js     0x140002921
   140002804:	mov    rbx,QWORD PTR [rbp-0x11]
   140002808:	mov    rax,QWORD PTR [rbx]
   14000280b:	mov    rsi,QWORD PTR [rax+0x18]
   14000280f:	mov    rcx,rsi
   140002812:	call   QWORD PTR [rip+0x5bf8]        # 0x140008410
   140002818:	lea    rdx,[rbp-0x19]
   14000281c:	mov    rcx,rbx
   14000281f:	call   rsi
   140002821:	mov    r14d,eax
   140002824:	mov    DWORD PTR [rbp-0x29],eax
   140002827:	test   eax,eax
   140002829:	js     0x140002921
   14000282f:	and    DWORD PTR [rbp-0x1],0x0
   140002833:	lea    rax,[rbp-0x21]
   140002837:	mov    QWORD PTR [rsp+0x20],rax
   14000283c:	mov    r9d,r15d
   14000283f:	mov    r8,r12
   140002842:	mov    edx,r13d
   140002845:	mov    ecx,DWORD PTR [rbp+0x67]
   140002848:	call   0x1400029e4
   14000284d:	mov    r14d,eax
   140002850:	mov    DWORD PTR [rbp-0x29],eax
   140002853:	test   eax,eax
   140002855:	js     0x140002921
   14000285b:	movsd  xmm0,QWORD PTR [rbp-0x1]
   140002860:	movsd  QWORD PTR [rbp+0x17],xmm0
   140002865:	mov    eax,DWORD PTR [rbp+0x7]
   140002868:	mov    DWORD PTR [rbp+0x1f],eax
   14000286b:	mov    rbx,QWORD PTR [rbp-0x19]
   14000286f:	mov    rax,QWORD PTR [rbx]
   140002872:	lea    rdx,[rip+0x7b77]        # 0x14000a3f0
   140002879:	lea    r15,[rip+0x7c50]        # 0x14000a4d0
   140002880:	mov    ecx,DWORD PTR [rbp-0x5]
   140002883:	test   ecx,ecx
   140002885:	cmovne r15,rdx
   140002889:	lea    rdx,[rip+0x7bd0]        # 0x14000a460
   140002890:	lea    r14,[rip+0x7ce9]        # 0x14000a580
   140002897:	cmovne r14,rdx
   14000289b:	mov    rsi,QWORD PTR [rax+0x40]
   14000289f:	mov    rcx,rsi
   1400028a2:	call   QWORD PTR [rip+0x5b68]        # 0x140008410
   1400028a8:	lea    rax,[rbp-0x9]
   1400028ac:	mov    QWORD PTR [rsp+0x78],rax
   1400028b1:	xor    ecx,ecx
   1400028b3:	mov    DWORD PTR [rsp+0x70],ecx
   1400028b7:	mov    QWORD PTR [rsp+0x68],rcx
   1400028bc:	mov    QWORD PTR [rsp+0x60],rcx
   1400028c1:	mov    QWORD PTR [rsp+0x58],rcx
   1400028c6:	mov    DWORD PTR [rsp+0x50],ecx
   1400028ca:	mov    DWORD PTR [rsp+0x48],ecx
   1400028ce:	lea    rax,[rbp+0x17]
   1400028d2:	mov    QWORD PTR [rsp+0x40],rax
   1400028d7:	lea    rax,[rip+0x7ada]        # 0x14000a3b8
   1400028de:	mov    QWORD PTR [rsp+0x38],rax
   1400028e3:	lea    rax,[rip+0x7ae6]        # 0x14000a3d0
   1400028ea:	mov    QWORD PTR [rsp+0x30],rax
   1400028ef:	mov    rax,QWORD PTR [rbp-0x21]
   1400028f3:	mov    QWORD PTR [rsp+0x28],rax
   1400028f8:	mov    DWORD PTR [rsp+0x20],ecx
   1400028fc:	xor    r9d,r9d
   1400028ff:	mov    r8,r15
   140002902:	mov    rdx,r14
   140002905:	mov    rcx,rbx
   140002908:	call   rsi
   14000290a:	mov    r14d,eax
   14000290d:	mov    DWORD PTR [rbp-0x29],eax
   140002910:	test   eax,eax
   140002912:	jns    0x140002921
   140002914:	lea    rcx,[rbp-0x29]
   140002918:	call   0x140002bc8
   14000291d:	mov    r14d,DWORD PTR [rbp-0x29]
   140002921:	mov    rcx,QWORD PTR [rbp-0x21]
   140002925:	test   rcx,rcx
   140002928:	je     0x140002939
   14000292a:	call   QWORD PTR [rip+0x56e0]        # 0x140008010
   140002930:	and    QWORD PTR [rbp-0x21],0x0
   140002935:	mov    r14d,DWORD PTR [rbp-0x29]
   140002939:	mov    rbx,QWORD PTR [rbp-0x19]
   14000293d:	test   rbx,rbx
   140002940:	je     0x140002958
   140002942:	mov    rax,QWORD PTR [rbx]
   140002945:	mov    rsi,QWORD PTR [rax+0x10]
   140002949:	mov    rcx,rsi
   14000294c:	call   QWORD PTR [rip+0x5abe]        # 0x140008410
   140002952:	mov    rcx,rbx
   140002955:	call   rsi
   140002957:	nop
   140002958:	mov    rbx,QWORD PTR [rbp-0x11]
   14000295c:	test   rbx,rbx
   14000295f:	je     0x140002977
   140002961:	mov    rax,QWORD PTR [rbx]
   140002964:	mov    rsi,QWORD PTR [rax+0x10]
   140002968:	mov    rcx,rsi
   14000296b:	call   QWORD PTR [rip+0x5a9f]        # 0x140008410
   140002971:	mov    rcx,rbx
   140002974:	call   rsi
   140002976:	nop
   140002977:	test   edi,edi
   140002979:	je     0x140002981
   14000297b:	call   QWORD PTR [rip+0x567f]        # 0x140008000
   140002981:	mov    eax,r14d
   140002984:	lea    r11,[rsp+0xe0]
   14000298c:	mov    rbx,QWORD PTR [r11+0x38]
   140002990:	mov    rsi,QWORD PTR [r11+0x40]
   140002994:	mov    rdi,QWORD PTR [r11+0x48]
   140002998:	mov    rsp,r11
   14000299b:	pop    r15
   14000299d:	pop    r14
   14000299f:	pop    r13
   1400029a1:	pop    r12
   1400029a3:	pop    rbp
   1400029a4:	ret    
   1400029a5:	int3   
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400029b1:	push   rdi
   1400029b2:	sub    rsp,0x20
   1400029b6:	mov    rdi,QWORD PTR [rcx]
   1400029b9:	test   rdi,rdi
   1400029bc:	je     0x1400029d3
   1400029be:	mov    rax,QWORD PTR [rdi]
   1400029c1:	mov    rbx,QWORD PTR [rax+0x10]
   1400029c5:	mov    rcx,rbx
   1400029c8:	call   QWORD PTR [rip+0x5a42]        # 0x140008410
   1400029ce:	mov    rcx,rdi
   1400029d1:	call   rbx
   1400029d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029d8:	add    rsp,0x20
   1400029dc:	pop    rdi
   1400029dd:	ret    
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	int3   
   1400029e1:	int3   
   1400029e2:	int3   
   1400029e3:	int3   
   1400029e4:	rex push rbp
   1400029e6:	push   rbx
   1400029e7:	push   rsi
   1400029e8:	push   rdi
   1400029e9:	push   r12
   1400029eb:	push   r14
   1400029ed:	push   r15
   1400029ef:	lea    rbp,[rsp-0xc0]
   1400029f7:	sub    rsp,0x1c0
   1400029fe:	mov    rax,QWORD PTR [rip+0xb603]        # 0x14000e008
   140002a05:	xor    rax,rsp
   140002a08:	mov    QWORD PTR [rbp+0xb0],rax
   140002a0f:	mov    eax,DWORD PTR [rip+0x786b]        # 0x14000a280
   140002a15:	mov    rbx,r8
   140002a18:	movaps xmm0,XMMWORD PTR [rip+0x7821]        # 0x14000a240
   140002a1f:	mov    edi,edx
   140002a21:	movaps xmm1,XMMWORD PTR [rip+0x7828]        # 0x14000a250
   140002a28:	lea    rdx,[rip+0x7861]        # 0x14000a290
   140002a2f:	and    QWORD PTR [rsp+0x40],0x0
   140002a35:	mov    r15d,ecx
   140002a38:	and    QWORD PTR [rsp+0x30],0x0
   140002a3e:	lea    rcx,[rbp-0x60]
   140002a42:	and    QWORD PTR [rsp+0x38],0x0
   140002a48:	mov    r14d,r9d
   140002a4b:	mov    r12,QWORD PTR [rbp+0x120]
   140002a52:	xor    esi,esi
   140002a54:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140002a59:	movaps xmm0,XMMWORD PTR [rip+0x7800]        # 0x14000a260
   140002a60:	movaps XMMWORD PTR [rsp+0x60],xmm1
   140002a65:	movaps xmm1,XMMWORD PTR [rip+0x7804]        # 0x14000a270
   140002a6c:	mov    DWORD PTR [rbp-0x70],eax
   140002a6f:	lea    eax,[rsi+0x2]
   140002a72:	lea    r8d,[rax+0x7e]
   140002a76:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140002a7b:	movaps XMMWORD PTR [rbp-0x80],xmm1
   140002a7f:	movups xmm0,XMMWORD PTR [rdx]
   140002a82:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002a86:	movups XMMWORD PTR [rcx],xmm0
   140002a89:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002a8d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140002a91:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002a95:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002a99:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140002a9d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140002aa1:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140002aa5:	movups XMMWORD PTR [rcx+0x40],xmm0
   140002aa9:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140002aad:	movups XMMWORD PTR [rcx+0x50],xmm1
   140002ab1:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140002ab5:	add    rdx,r8
   140002ab8:	movups XMMWORD PTR [rcx+0x60],xmm0
   140002abc:	add    rcx,r8
   140002abf:	movups XMMWORD PTR [rcx-0x10],xmm1
   140002ac3:	sub    rax,0x1
   140002ac7:	jne    0x140002a7f
   140002ac9:	mov    eax,DWORD PTR [rdx]
   140002acb:	mov    DWORD PTR [rcx],eax
   140002acd:	movzx  eax,WORD PTR [rdx+0x4]
   140002ad1:	mov    WORD PTR [rcx+0x4],ax
   140002ad5:	cmp    edi,0x12d
   140002adb:	je     0x140002b01
   140002add:	xor    ecx,ecx
   140002adf:	call   QWORD PTR [rip+0x55fb]        # 0x1400080e0
   140002ae5:	xor    r9d,r9d
   140002ae8:	lea    r8,[rsp+0x40]
   140002aed:	mov    rcx,rax
   140002af0:	mov    edx,edi
   140002af2:	call   QWORD PTR [rip+0x55f8]        # 0x1400080f0
   140002af8:	test   eax,eax
   140002afa:	je     0x140002b21
   140002afc:	mov    esi,0x1
   140002b01:	xor    ecx,ecx
   140002b03:	call   QWORD PTR [rip+0x55d7]        # 0x1400080e0
   140002b09:	xor    r9d,r9d
   140002b0c:	lea    r8,[rsp+0x30]
   140002b11:	mov    rcx,rax
   140002b14:	mov    edx,r15d
   140002b17:	call   QWORD PTR [rip+0x55d3]        # 0x1400080f0
   140002b1d:	test   eax,eax
   140002b1f:	jne    0x140002b37
   140002b21:	call   QWORD PTR [rip+0x5541]        # 0x140008068
   140002b27:	movzx  ebx,ax
   140002b2a:	or     ebx,0x80070000
   140002b30:	test   eax,eax
   140002b32:	cmovle ebx,eax
   140002b35:	jmp    0x140002b8e
   140002b37:	test   rbx,rbx
   140002b3a:	je     0x140002b59
   140002b3c:	test   r14d,r14d
   140002b3f:	je     0x140002b59
   140002b41:	mov    rdx,QWORD PTR [rsp+0x30]
   140002b46:	lea    rcx,[rsp+0x38]
   140002b4b:	mov    r8,rbx
   140002b4e:	call   0x140004abc
   140002b53:	mov    ebx,eax
   140002b55:	test   eax,eax
   140002b57:	js     0x140002b8e
   140002b59:	mov    r9,QWORD PTR [rsp+0x38]
   140002b5e:	lea    rax,[rip+0x76b3]        # 0x14000a218
   140002b65:	test   esi,esi
   140002b67:	lea    r8,[rsp+0x50]
   140002b6c:	lea    rdx,[rbp-0x60]
   140002b70:	mov    rcx,r12
   140002b73:	cmovne rax,QWORD PTR [rsp+0x40]
   140002b79:	test   r9,r9
   140002b7c:	mov    QWORD PTR [rsp+0x20],rax
   140002b81:	cmove  r9,QWORD PTR [rsp+0x30]
   140002b87:	call   0x140004abc
   140002b8c:	mov    ebx,eax
   140002b8e:	mov    rcx,QWORD PTR [rsp+0x38]
   140002b93:	test   rcx,rcx
   140002b96:	je     0x140002b9e
   140002b98:	call   QWORD PTR [rip+0x5512]        # 0x1400080b0
   140002b9e:	mov    eax,ebx
   140002ba0:	mov    rcx,QWORD PTR [rbp+0xb0]
   140002ba7:	xor    rcx,rsp
   140002baa:	call   0x140005fe0
   140002baf:	add    rsp,0x1c0
   140002bb6:	pop    r15
   140002bb8:	pop    r14
   140002bba:	pop    r12
   140002bbc:	pop    rdi
   140002bbd:	pop    rsi
   140002bbe:	pop    rbx
   140002bbf:	pop    rbp
   140002bc0:	ret    
   140002bc1:	int3   
   140002bc2:	int3   
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	rex push rbx
   140002bca:	sub    rsp,0x70
   140002bce:	mov    rax,QWORD PTR [rip+0xb433]        # 0x14000e008
   140002bd5:	xor    rax,rsp
   140002bd8:	mov    QWORD PTR [rsp+0x60],rax
   140002bdd:	mov    rbx,rcx
   140002be0:	call   0x140001f04
   140002be5:	cmp    DWORD PTR [rax],0x5
   140002be8:	jbe    0x140002c3a
   140002bea:	movabs rcx,0x200000000000
   140002bf4:	test   QWORD PTR [rax+0x10],rcx
   140002bf8:	je     0x140002c3a
   140002bfa:	mov    rdx,QWORD PTR [rax+0x18]
   140002bfe:	and    rdx,rcx
   140002c01:	cmp    rdx,QWORD PTR [rax+0x18]
   140002c05:	jne    0x140002c3a
   140002c07:	and    DWORD PTR [rsp+0x5c],0x0
   140002c0c:	mov    QWORD PTR [rsp+0x50],rbx
   140002c11:	mov    DWORD PTR [rsp+0x58],0x4
   140002c19:	lea    rcx,[rsp+0x30]
   140002c1e:	mov    QWORD PTR [rsp+0x28],rcx
   140002c23:	lea    rdx,[rip+0x924a]        # 0x14000be74
   140002c2a:	mov    rcx,rax
   140002c2d:	mov    DWORD PTR [rsp+0x20],0x3
   140002c35:	call   0x1400010dc
   140002c3a:	mov    rcx,QWORD PTR [rsp+0x60]
   140002c3f:	xor    rcx,rsp
   140002c42:	call   0x140005fe0
   140002c47:	add    rsp,0x70
   140002c4b:	pop    rbx
   140002c4c:	ret    
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	int3   
   140002c51:	int3   
   140002c52:	int3   
   140002c53:	int3   
   140002c54:	rex push rbx
   140002c56:	sub    rsp,0x20
   140002c5a:	cmp    DWORD PTR [rcx],0x0
   140002c5d:	mov    rbx,rcx
   140002c60:	je     0x140002c6b
   140002c62:	call   QWORD PTR [rip+0x5398]        # 0x140008000
   140002c68:	and    DWORD PTR [rbx],0x0
   140002c6b:	add    rsp,0x20
   140002c6f:	pop    rbx
   140002c70:	ret    
   140002c71:	int3   
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	int3   
   140002c75:	int3   
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	mov    QWORD PTR [rsp+0x8],rbx
   140002c7d:	mov    QWORD PTR [rsp+0x10],rsi
   140002c82:	push   rdi
   140002c83:	sub    rsp,0x20
   140002c87:	mov    rsi,rdx
   140002c8a:	mov    rdi,rcx
   140002c8d:	lea    rdx,[rip+0x6e7c]        # 0x140009b10
   140002c94:	call   QWORD PTR [rip+0x5736]        # 0x1400083d0
   140002c9a:	test   eax,eax
   140002c9c:	jne    0x140002ca6
   140002c9e:	lea    ebx,[rax+0x4]
   140002ca1:	jmp    0x140002e1d
   140002ca6:	lea    rdx,[rip+0x7003]        # 0x140009cb0
   140002cad:	mov    rcx,rdi
   140002cb0:	call   QWORD PTR [rip+0x571a]        # 0x1400083d0
   140002cb6:	test   eax,eax
   140002cb8:	jne    0x140002cc2
   140002cba:	lea    ebx,[rax+0x5]
   140002cbd:	jmp    0x140002e1d
   140002cc2:	lea    rdx,[rip+0x706f]        # 0x140009d38
   140002cc9:	mov    rcx,rdi
   140002ccc:	call   QWORD PTR [rip+0x56fe]        # 0x1400083d0
   140002cd2:	test   eax,eax
   140002cd4:	jne    0x140002cde
   140002cd6:	lea    ebx,[rax+0x6]
   140002cd9:	jmp    0x140002e1d
   140002cde:	lea    rdx,[rip+0x708b]        # 0x140009d70
   140002ce5:	mov    rcx,rdi
   140002ce8:	call   QWORD PTR [rip+0x56e2]        # 0x1400083d0
   140002cee:	test   eax,eax
   140002cf0:	jne    0x140002cfa
   140002cf2:	lea    ebx,[rax+0x7]
   140002cf5:	jmp    0x140002e1d
   140002cfa:	lea    rdx,[rip+0x6fff]        # 0x140009d00
   140002d01:	mov    rcx,rdi
   140002d04:	call   QWORD PTR [rip+0x56c6]        # 0x1400083d0
   140002d0a:	test   eax,eax
   140002d0c:	jne    0x140002d16
   140002d0e:	lea    ebx,[rax+0x8]
   140002d11:	jmp    0x140002e1d
   140002d16:	lea    rdx,[rip+0x6ceb]        # 0x140009a08
   140002d1d:	mov    rcx,rdi
   140002d20:	call   QWORD PTR [rip+0x56aa]        # 0x1400083d0
   140002d26:	test   eax,eax
   140002d28:	jne    0x140002d32
   140002d2a:	lea    ebx,[rax+0x9]
   140002d2d:	jmp    0x140002e1d
   140002d32:	lea    rdx,[rip+0x72e7]        # 0x14000a020
   140002d39:	mov    rcx,rdi
   140002d3c:	call   QWORD PTR [rip+0x568e]        # 0x1400083d0
   140002d42:	test   eax,eax
   140002d44:	jne    0x140002d4e
   140002d46:	lea    ebx,[rax+0xa]
   140002d49:	jmp    0x140002e1d
   140002d4e:	lea    rdx,[rip+0x72fb]        # 0x14000a050
   140002d55:	mov    rcx,rdi
   140002d58:	call   QWORD PTR [rip+0x5672]        # 0x1400083d0
   140002d5e:	test   eax,eax
   140002d60:	jne    0x140002d6a
   140002d62:	lea    ebx,[rax+0xb]
   140002d65:	jmp    0x140002e1d
   140002d6a:	lea    rdx,[rip+0x71cf]        # 0x140009f40
   140002d71:	mov    rcx,rdi
   140002d74:	call   QWORD PTR [rip+0x5656]        # 0x1400083d0
   140002d7a:	test   eax,eax
   140002d7c:	jne    0x140002d86
   140002d7e:	lea    ebx,[rax+0xc]
   140002d81:	jmp    0x140002e1d
   140002d86:	lea    rdx,[rip+0x6ed3]        # 0x140009c60
   140002d8d:	mov    rcx,rdi
   140002d90:	call   QWORD PTR [rip+0x563a]        # 0x1400083d0
   140002d96:	test   eax,eax
   140002d98:	jne    0x140002d9f
   140002d9a:	lea    ebx,[rax+0xd]
   140002d9d:	jmp    0x140002e1d
   140002d9f:	lea    rdx,[rip+0x722a]        # 0x140009fd0
   140002da6:	mov    rcx,rdi
   140002da9:	call   QWORD PTR [rip+0x5621]        # 0x1400083d0
   140002daf:	test   eax,eax
   140002db1:	jne    0x140002db8
   140002db3:	lea    ebx,[rax+0xe]
   140002db6:	jmp    0x140002e1d
   140002db8:	lea    rdx,[rip+0x6d79]        # 0x140009b38
   140002dbf:	mov    rcx,rdi
   140002dc2:	call   QWORD PTR [rip+0x5608]        # 0x1400083d0
   140002dc8:	test   eax,eax
   140002dca:	jne    0x140002dd1
   140002dcc:	lea    ebx,[rax+0xf]
   140002dcf:	jmp    0x140002e1d
   140002dd1:	lea    rdx,[rip+0x7108]        # 0x140009ee0
   140002dd8:	mov    rcx,rdi
   140002ddb:	call   QWORD PTR [rip+0x55ef]        # 0x1400083d0
   140002de1:	test   eax,eax
   140002de3:	jne    0x140002dea
   140002de5:	lea    ebx,[rax+0x10]
   140002de8:	jmp    0x140002e1d
   140002dea:	lea    rdx,[rip+0x6c77]        # 0x140009a68
   140002df1:	mov    rcx,rdi
   140002df4:	call   QWORD PTR [rip+0x55d6]        # 0x1400083d0
   140002dfa:	test   eax,eax
   140002dfc:	jne    0x140002e03
   140002dfe:	lea    ebx,[rax+0x11]
   140002e01:	jmp    0x140002e1d
   140002e03:	lea    rdx,[rip+0x71ee]        # 0x140009ff8
   140002e0a:	mov    rcx,rdi
   140002e0d:	call   QWORD PTR [rip+0x55bd]        # 0x1400083d0
   140002e13:	xor    ebx,ebx
   140002e15:	test   eax,eax
   140002e17:	lea    ecx,[rbx+0x12]
   140002e1a:	cmove  ebx,ecx
   140002e1d:	lea    rdx,[rip+0x6e04]        # 0x140009c28
   140002e24:	mov    rcx,rdi
   140002e27:	call   QWORD PTR [rip+0x55a3]        # 0x1400083d0
   140002e2d:	test   eax,eax
   140002e2f:	jne    0x140002e39
   140002e31:	lea    ebx,[rax+0x13]
   140002e34:	jmp    0x140002f40
   140002e39:	lea    rdx,[rip+0x6c60]        # 0x140009aa0
   140002e40:	mov    rcx,rdi
   140002e43:	call   QWORD PTR [rip+0x5587]        # 0x1400083d0
   140002e49:	test   eax,eax
   140002e4b:	jne    0x140002e55
   140002e4d:	lea    ebx,[rax+0x14]
   140002e50:	jmp    0x140002f40
   140002e55:	lea    rdx,[rip+0x701c]        # 0x140009e78
   140002e5c:	mov    rcx,rdi
   140002e5f:	call   QWORD PTR [rip+0x556b]        # 0x1400083d0
   140002e65:	test   eax,eax
   140002e67:	jne    0x140002e71
   140002e69:	lea    ebx,[rax+0x15]
   140002e6c:	jmp    0x140002f40
   140002e71:	lea    rdx,[rip+0x6bb8]        # 0x140009a30
   140002e78:	mov    rcx,rdi
   140002e7b:	call   QWORD PTR [rip+0x554f]        # 0x1400083d0
   140002e81:	test   eax,eax
   140002e83:	jne    0x140002e8d
   140002e85:	lea    ebx,[rax+0x16]
   140002e88:	jmp    0x140002f40
   140002e8d:	lea    rdx,[rip+0x6cd4]        # 0x140009b68
   140002e94:	mov    rcx,rdi
   140002e97:	call   QWORD PTR [rip+0x5533]        # 0x1400083d0
   140002e9d:	test   eax,eax
   140002e9f:	jne    0x140002ea9
   140002ea1:	lea    ebx,[rax+0x17]
   140002ea4:	jmp    0x140002f40
   140002ea9:	lea    rdx,[rip+0x71e0]        # 0x14000a090
   140002eb0:	mov    rcx,rdi
   140002eb3:	call   QWORD PTR [rip+0x5517]        # 0x1400083d0
   140002eb9:	test   eax,eax
   140002ebb:	jne    0x140002ec2
   140002ebd:	lea    ebx,[rax+0x18]
   140002ec0:	jmp    0x140002f40
   140002ec2:	lea    rdx,[rip+0x6c0f]        # 0x140009ad8
   140002ec9:	mov    rcx,rdi
   140002ecc:	call   QWORD PTR [rip+0x54fe]        # 0x1400083d0
   140002ed2:	test   eax,eax
   140002ed4:	jne    0x140002edb
   140002ed6:	lea    ebx,[rax+0x1a]
   140002ed9:	jmp    0x140002f40
   140002edb:	lea    rdx,[rip+0x6f1e]        # 0x140009e00
   140002ee2:	mov    rcx,rdi
   140002ee5:	call   QWORD PTR [rip+0x54e5]        # 0x1400083d0
   140002eeb:	test   eax,eax
   140002eed:	jne    0x140002ef4
   140002eef:	lea    ebx,[rax+0x1b]
   140002ef2:	jmp    0x140002f40
   140002ef4:	lea    rdx,[rip+0x6cfd]        # 0x140009bf8
   140002efb:	mov    rcx,rdi
   140002efe:	call   QWORD PTR [rip+0x54cc]        # 0x1400083d0
   140002f04:	test   eax,eax
   140002f06:	jne    0x140002f0d
   140002f08:	lea    ebx,[rax+0x1c]
   140002f0b:	jmp    0x140002f40
   140002f0d:	lea    rdx,[rip+0x6eb4]        # 0x140009dc8
   140002f14:	mov    rcx,rdi
   140002f17:	call   QWORD PTR [rip+0x54b3]        # 0x1400083d0
   140002f1d:	test   eax,eax
   140002f1f:	jne    0x140002f26
   140002f21:	lea    ebx,[rax+0x1d]
   140002f24:	jmp    0x140002f40
   140002f26:	lea    rdx,[rip+0x6f03]        # 0x140009e30
   140002f2d:	mov    rcx,rdi
   140002f30:	call   QWORD PTR [rip+0x549a]        # 0x1400083d0
   140002f36:	test   eax,eax
   140002f38:	mov    ecx,0x19
   140002f3d:	cmove  ebx,ecx
   140002f40:	mov    DWORD PTR [rsi],ebx
   140002f42:	xor    eax,eax
   140002f44:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f49:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f4e:	add    rsp,0x20
   140002f52:	pop    rdi
   140002f53:	ret    
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	rex push rbp
   140002f5e:	lea    rbp,[rsp-0x57]
   140002f63:	sub    rsp,0x90
   140002f6a:	mov    rax,QWORD PTR [rip+0xb097]        # 0x14000e008
   140002f71:	xor    rax,rsp
   140002f74:	mov    QWORD PTR [rbp+0x47],rax
   140002f78:	and    DWORD PTR [rbp-0x9],0x0
   140002f7c:	lea    r9,[rip+0x782d]        # 0x14000a7b0
   140002f83:	mov    r10d,ecx
   140002f86:	xor    eax,eax
   140002f88:	mov    rcx,r9
   140002f8b:	cmp    edx,DWORD PTR [rcx]
   140002f8d:	je     0x140002f9c
   140002f8f:	inc    eax
   140002f91:	add    rcx,0x10
   140002f95:	cmp    eax,0x1a
   140002f98:	jb     0x140002f8b
   140002f9a:	jmp    0x140002fa5
   140002f9c:	shl    rax,0x4
   140002fa0:	add    rax,r9
   140002fa3:	jne    0x140003004
   140002fa5:	call   0x1400025f4
   140002faa:	cmp    DWORD PTR [rax],0x4
   140002fad:	jbe    0x140002ffb
   140002faf:	and    DWORD PTR [rbp+0x33],0x0
   140002fb3:	lea    rcx,[rip+0x761e]        # 0x14000a5d8
   140002fba:	and    DWORD PTR [rbp+0x43],0x0
   140002fbe:	mov    QWORD PTR [rbp+0x27],rcx
   140002fc2:	lea    rcx,[rip+0x7637]        # 0x14000a600
   140002fc9:	mov    QWORD PTR [rbp+0x37],rcx
   140002fcd:	mov    DWORD PTR [rbp+0x2f],0x24
   140002fd4:	mov    DWORD PTR [rbp+0x3f],0x48
   140002fdb:	lea    rcx,[rbp+0x7]
   140002fdf:	mov    QWORD PTR [rsp+0x28],rcx
   140002fe4:	lea    rdx,[rip+0x8c2d]        # 0x14000bc18
   140002feb:	mov    rcx,rax
   140002fee:	mov    DWORD PTR [rsp+0x20],0x4
   140002ff6:	call   0x1400010dc
   140002ffb:	mov    DWORD PTR [rbp-0x9],0x1
   140003002:	jmp    0x140003065
   140003004:	cmp    DWORD PTR [rax+0xc],0x0
   140003008:	je     0x14000303f
   14000300a:	cmp    edx,0x10
   14000300d:	jne    0x140003020
   14000300f:	mov    r8d,DWORD PTR [rax+0x8]
   140003013:	mov    ecx,r10d
   140003016:	mov    edx,DWORD PTR [rax+0x4]
   140003019:	call   0x140003084
   14000301e:	jmp    0x140003031
   140003020:	mov    edx,DWORD PTR [rax+0x8]
   140003023:	xor    r9d,r9d
   140003026:	mov    ecx,DWORD PTR [rax+0x4]
   140003029:	xor    r8d,r8d
   14000302c:	call   0x14000273c
   140003031:	mov    DWORD PTR [rbp-0x9],eax
   140003034:	test   eax,eax
   140003036:	js     0x140003055
   140003038:	call   0x140003fb4
   14000303d:	jmp    0x140003065
   14000303f:	mov    r9,r8
   140003042:	mov    ecx,r10d
   140003045:	mov    r8d,DWORD PTR [rax+0x8]
   140003049:	call   0x1400031c0
   14000304e:	mov    DWORD PTR [rbp-0x9],eax
   140003051:	test   eax,eax
   140003053:	jns    0x140003060
   140003055:	lea    rcx,[rbp-0x9]
   140003059:	call   0x140003f28
   14000305e:	jmp    0x140003065
   140003060:	call   0x140004040
   140003065:	mov    eax,DWORD PTR [rbp-0x9]
   140003068:	mov    rcx,QWORD PTR [rbp+0x47]
   14000306c:	xor    rcx,rsp
   14000306f:	call   0x140005fe0
   140003074:	add    rsp,0x90
   14000307b:	pop    rbp
   14000307c:	ret    
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	int3   
   140003081:	int3   
   140003082:	int3   
   140003083:	int3   
   140003084:	mov    rax,rsp
   140003087:	push   rbp
   140003088:	push   rsi
   140003089:	push   rdi
   14000308a:	push   r14
   14000308c:	push   r15
   14000308e:	lea    rbp,[rax-0x1a8]
   140003095:	sub    rsp,0x280
   14000309c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400030a5:	mov    QWORD PTR [rax+0x20],rbx
   1400030a9:	mov    rax,QWORD PTR [rip+0xaf58]        # 0x14000e008
   1400030b0:	xor    rax,rsp
   1400030b3:	mov    QWORD PTR [rbp+0x170],rax
   1400030ba:	mov    r14d,r8d
   1400030bd:	mov    esi,edx
   1400030bf:	mov    edi,ecx
   1400030c1:	xor    r15d,r15d
   1400030c4:	mov    ebx,r15d
   1400030c7:	mov    WORD PTR [rsp+0x48],r15w
   1400030cd:	xor    eax,eax
   1400030cf:	mov    QWORD PTR [rsp+0x4a],rax
   1400030d4:	mov    DWORD PTR [rsp+0x52],eax
   1400030d8:	mov    WORD PTR [rsp+0x56],ax
   1400030dd:	mov    QWORD PTR [rsp+0x28],r15
   1400030e2:	mov    QWORD PTR [rsp+0x20],r15
   1400030e7:	mov    DWORD PTR [rsp+0x30],0x11
   1400030ef:	mov    WORD PTR [rsp+0x60],r15w
   1400030f5:	xor    edx,edx
   1400030f7:	mov    r8d,0x206
   1400030fd:	lea    rcx,[rsp+0x62]
   140003102:	call   0x140006a26
   140003107:	mov    DWORD PTR [rsp+0x34],r15d
   14000310c:	mov    QWORD PTR [rsp+0x40],r15
   140003111:	test   edi,edi
   140003113:	je     0x140003192
   140003115:	lea    rdx,[rsp+0x48]
   14000311a:	mov    ecx,edi
   14000311c:	call   0x14000389c
   140003121:	mov    ebx,eax
   140003123:	test   eax,eax
   140003125:	js     0x140003192
   140003127:	lea    rdx,[rsp+0x28]
   14000312c:	lea    rcx,[rsp+0x48]
   140003131:	call   QWORD PTR [rip+0x5109]        # 0x140008240
   140003137:	lea    rdx,[rsp+0x20]
   14000313c:	lea    rcx,[rsp+0x28]
   140003141:	call   QWORD PTR [rip+0x4f31]        # 0x140008078
   140003147:	mov    ebx,0x104
   14000314c:	mov    r9d,ebx
   14000314f:	lea    r8,[rsp+0x60]
   140003154:	lea    rdx,[rsp+0x30]
   140003159:	lea    rcx,[rsp+0x20]
   14000315e:	call   QWORD PTR [rip+0xceac]        # 0x140010010
   140003164:	test   eax,eax
   140003166:	jne    0x14000317e
   140003168:	call   QWORD PTR [rip+0x4efa]        # 0x140008068
   14000316e:	movzx  ebx,ax
   140003171:	or     ebx,0x80070000
   140003177:	test   eax,eax
   140003179:	cmovle ebx,eax
   14000317c:	jmp    0x140003192
   14000317e:	mov    r9d,ebx
   140003181:	lea    r8,[rsp+0x60]
   140003186:	mov    edx,r14d
   140003189:	mov    ecx,esi
   14000318b:	call   0x14000273c
   140003190:	mov    ebx,eax
   140003192:	mov    eax,ebx
   140003194:	mov    rcx,QWORD PTR [rbp+0x170]
   14000319b:	xor    rcx,rsp
   14000319e:	call   0x140005fe0
   1400031a3:	mov    rbx,QWORD PTR [rsp+0x2c8]
   1400031ab:	add    rsp,0x280
   1400031b2:	pop    r15
   1400031b4:	pop    r14
   1400031b6:	pop    rdi
   1400031b7:	pop    rsi
   1400031b8:	pop    rbp
   1400031b9:	ret    
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	rex push rbp
   1400031c2:	push   rbx
   1400031c3:	push   rdi
   1400031c4:	mov    rbp,rsp
   1400031c7:	sub    rsp,0x80
   1400031ce:	mov    rax,QWORD PTR [rip+0xae33]        # 0x14000e008
   1400031d5:	xor    rax,rsp
   1400031d8:	mov    QWORD PTR [rbp-0x10],rax
   1400031dc:	mov    rdi,r9
   1400031df:	mov    r9d,r8d
   1400031e2:	mov    eax,edx
   1400031e4:	cmp    edx,0x1b
   1400031e7:	jne    0x1400031f3
   1400031e9:	mov    rdx,rdi
   1400031ec:	call   0x140003450
   1400031f1:	jmp    0x14000321e
   1400031f3:	cmp    eax,0x1c
   1400031f6:	jne    0x140003202
   1400031f8:	mov    rdx,rdi
   1400031fb:	call   0x140003594
   140003200:	jmp    0x14000321e
   140003202:	cmp    eax,0x1d
   140003205:	jne    0x140003211
   140003207:	mov    rdx,rdi
   14000320a:	call   0x140003718
   14000320f:	jmp    0x14000321e
   140003211:	mov    r8,rdi
   140003214:	mov    edx,r9d
   140003217:	mov    ecx,eax
   140003219:	call   0x1400032e8
   14000321e:	mov    ebx,eax
   140003220:	test   eax,eax
   140003222:	js     0x1400032c9
   140003228:	cmp    DWORD PTR [rdi],0x131
   14000322e:	je     0x14000323c
   140003230:	cmp    DWORD PTR [rdi],0x12e
   140003236:	jne    0x1400032c9
   14000323c:	call   0x1400039c0
   140003241:	mov    ebx,eax
   140003243:	test   eax,eax
   140003245:	jns    0x140003273
   140003247:	call   0x1400025f4
   14000324c:	cmp    DWORD PTR [rax],0x4
   14000324f:	jbe    0x1400032c9
   140003251:	lea    rcx,[rip+0x7400]        # 0x14000a658
   140003258:	mov    DWORD PTR [rbp-0x18],0x28
   14000325f:	mov    QWORD PTR [rbp-0x30],rcx
   140003263:	lea    rdx,[rip+0x89ae]        # 0x14000bc18
   14000326a:	lea    rcx,[rip+0x7407]        # 0x14000a678
   140003271:	jmp    0x14000329d
   140003273:	call   0x1400025f4
   140003278:	cmp    DWORD PTR [rax],0x4
   14000327b:	jbe    0x1400032c9
   14000327d:	lea    rcx,[rip+0x73d4]        # 0x14000a658
   140003284:	mov    DWORD PTR [rbp-0x18],0x2b
   14000328b:	mov    QWORD PTR [rbp-0x30],rcx
   14000328f:	lea    rdx,[rip+0x8982]        # 0x14000bc18
   140003296:	lea    rcx,[rip+0x7403]        # 0x14000a6a0
   14000329d:	and    DWORD PTR [rbp-0x24],0x0
   1400032a1:	and    DWORD PTR [rbp-0x14],0x0
   1400032a5:	mov    QWORD PTR [rbp-0x20],rcx
   1400032a9:	mov    DWORD PTR [rbp-0x28],0x20
   1400032b0:	lea    rcx,[rbp-0x50]
   1400032b4:	mov    QWORD PTR [rsp+0x28],rcx
   1400032b9:	mov    rcx,rax
   1400032bc:	mov    DWORD PTR [rsp+0x20],0x4
   1400032c4:	call   0x1400010dc
   1400032c9:	mov    eax,ebx
   1400032cb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400032cf:	xor    rcx,rsp
   1400032d2:	call   0x140005fe0
   1400032d7:	add    rsp,0x80
   1400032de:	pop    rdi
   1400032df:	pop    rbx
   1400032e0:	pop    rbp
   1400032e1:	ret    
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	int3   
   1400032e7:	int3   
   1400032e8:	mov    rax,rsp
   1400032eb:	push   rsi
   1400032ec:	push   rdi
   1400032ed:	push   r12
   1400032ef:	push   r14
   1400032f1:	push   r15
   1400032f3:	sub    rsp,0x40
   1400032f7:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400032ff:	mov    QWORD PTR [rax+0x8],rbx
   140003303:	mov    QWORD PTR [rax+0x10],rbp
   140003307:	mov    r12,r8
   14000330a:	mov    r15d,edx
   14000330d:	mov    ebx,ecx
   14000330f:	and    DWORD PTR [rax+0x18],0x0
   140003313:	and    QWORD PTR [rax-0x38],0x0
   140003318:	and    DWORD PTR [r8],0x0
   14000331c:	xor    edx,edx
   14000331e:	xor    ecx,ecx
   140003320:	call   QWORD PTR [rip+0x4ce2]        # 0x140008008
   140003326:	mov    r14d,eax
   140003329:	xor    edi,edi
   14000332b:	lea    ebp,[rdi+0x1]
   14000332e:	test   eax,eax
   140003330:	cmovns edi,ebp
   140003333:	mov    DWORD PTR [rsp+0x88],edi
   14000333a:	js     0x140003406
   140003340:	lea    rax,[rsp+0x30]
   140003345:	mov    QWORD PTR [rsp+0x20],rax
   14000334a:	lea    r9,[rip+0x743f]        # 0x14000a790
   140003351:	mov    r8d,ebp
   140003354:	xor    edx,edx
   140003356:	lea    rcx,[rip+0x7443]        # 0x14000a7a0
   14000335d:	call   QWORD PTR [rip+0x4cb5]        # 0x140008018
   140003363:	mov    r14d,eax
   140003366:	test   eax,eax
   140003368:	js     0x140003406
   14000336e:	sub    ebx,0x13
   140003371:	je     0x1400033c6
   140003373:	sub    ebx,ebp
   140003375:	je     0x1400033c1
   140003377:	sub    ebx,ebp
   140003379:	je     0x1400033ba
   14000337b:	sub    ebx,ebp
   14000337d:	je     0x1400033b3
   14000337f:	sub    ebx,ebp
   140003381:	je     0x1400033ac
   140003383:	sub    ebx,ebp
   140003385:	je     0x1400033a5
   140003387:	sub    ebx,ebp
   140003389:	je     0x14000339e
   14000338b:	cmp    ebx,ebp
   14000338d:	je     0x140003397
   14000338f:	mov    r14d,0x80070057
   140003395:	jmp    0x140003406
   140003397:	mov    ebp,0x4
   14000339c:	jmp    0x1400033c6
   14000339e:	mov    ebp,0x8
   1400033a3:	jmp    0x1400033c6
   1400033a5:	mov    ebp,0x7
   1400033aa:	jmp    0x1400033c6
   1400033ac:	mov    ebp,0x6
   1400033b1:	jmp    0x1400033c6
   1400033b3:	mov    ebp,0x5
   1400033b8:	jmp    0x1400033c6
   1400033ba:	mov    ebp,0x3
   1400033bf:	jmp    0x1400033c6
   1400033c1:	mov    ebp,0x2
   1400033c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033cb:	mov    rax,QWORD PTR [rbx]
   1400033ce:	mov    rsi,QWORD PTR [rax+0x18]
   1400033d2:	mov    rcx,rsi
   1400033d5:	call   QWORD PTR [rip+0x5035]        # 0x140008410
   1400033db:	lea    r9,[rsp+0x80]
   1400033e3:	mov    r8d,r15d
   1400033e6:	mov    edx,ebp
   1400033e8:	mov    rcx,rbx
   1400033eb:	call   rsi
   1400033ed:	mov    r14d,eax
   1400033f0:	test   eax,eax
   1400033f2:	js     0x140003406
   1400033f4:	xor    eax,eax
   1400033f6:	cmp    r15d,DWORD PTR [rsp+0x80]
   1400033fe:	cmove  eax,r15d
   140003402:	mov    DWORD PTR [r12],eax
   140003406:	mov    rbx,QWORD PTR [rsp+0x30]
   14000340b:	test   rbx,rbx
   14000340e:	je     0x140003426
   140003410:	mov    rax,QWORD PTR [rbx]
   140003413:	mov    rsi,QWORD PTR [rax+0x10]
   140003417:	mov    rcx,rsi
   14000341a:	call   QWORD PTR [rip+0x4ff0]        # 0x140008410
   140003420:	mov    rcx,rbx
   140003423:	call   rsi
   140003425:	nop
   140003426:	test   edi,edi
   140003428:	je     0x140003430
   14000342a:	call   QWORD PTR [rip+0x4bd0]        # 0x140008000
   140003430:	mov    eax,r14d
   140003433:	mov    rbx,QWORD PTR [rsp+0x70]
   140003438:	mov    rbp,QWORD PTR [rsp+0x78]
   14000343d:	add    rsp,0x40
   140003441:	pop    r15
   140003443:	pop    r14
   140003445:	pop    r12
   140003447:	pop    rdi
   140003448:	pop    rsi
   140003449:	ret    
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	mov    rax,rsp
   140003453:	push   rbp
   140003454:	push   rsi
   140003455:	push   rdi
   140003456:	push   r12
   140003458:	push   r13
   14000345a:	push   r14
   14000345c:	push   r15
   14000345e:	mov    rbp,rsp
   140003461:	sub    rsp,0x50
   140003465:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000346d:	mov    QWORD PTR [rax+0x20],rbx
   140003471:	mov    r15,rdx
   140003474:	xor    r12d,r12d
   140003477:	mov    r14d,r12d
   14000347a:	mov    WORD PTR [rbp-0x10],r12w
   14000347f:	xor    eax,eax
   140003481:	mov    QWORD PTR [rbp-0xe],rax
   140003485:	mov    DWORD PTR [rbp-0x6],eax
   140003488:	mov    WORD PTR [rbp-0x2],ax
   14000348c:	mov    DWORD PTR [rbp+0x40],r12d
   140003490:	mov    edi,r12d
   140003493:	mov    DWORD PTR [rbp+0x48],r12d
   140003497:	mov    ebx,r12d
   14000349a:	mov    QWORD PTR [rbp+0x50],rbx
   14000349e:	mov    DWORD PTR [rdx],r12d
   1400034a1:	test   ecx,ecx
   1400034a3:	je     0x14000354c
   1400034a9:	lea    rdx,[rbp-0x10]
   1400034ad:	call   0x14000389c
   1400034b2:	mov    r14d,eax
   1400034b5:	test   eax,eax
   1400034b7:	js     0x140003548
   1400034bd:	xor    edx,edx
   1400034bf:	xor    ecx,ecx
   1400034c1:	call   QWORD PTR [rip+0x4b41]        # 0x140008008
   1400034c7:	mov    r14d,eax
   1400034ca:	lea    r8d,[r12+0x1]
   1400034cf:	test   eax,eax
   1400034d1:	cmovns edi,r8d
   1400034d5:	mov    DWORD PTR [rbp+0x48],edi
   1400034d8:	js     0x140003548
   1400034da:	lea    rax,[rbp+0x50]
   1400034de:	mov    QWORD PTR [rsp+0x20],rax
   1400034e3:	lea    r9,[rip+0x72a6]        # 0x14000a790
   1400034ea:	xor    edx,edx
   1400034ec:	lea    rcx,[rip+0x72ad]        # 0x14000a7a0
   1400034f3:	call   QWORD PTR [rip+0x4b1f]        # 0x140008018
   1400034f9:	mov    r14d,eax
   1400034fc:	test   eax,eax
   1400034fe:	js     0x140003548
   140003500:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140003504:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140003509:	mov    rbx,QWORD PTR [rbp+0x50]
   14000350d:	mov    rax,QWORD PTR [rbx]
   140003510:	mov    rsi,QWORD PTR [rax+0x20]
   140003514:	mov    rcx,rsi
   140003517:	call   QWORD PTR [rip+0x4ef3]        # 0x140008410
   14000351d:	lea    r9,[rbp+0x40]
   140003521:	mov    r13d,0x12e
   140003527:	mov    r8d,r13d
   14000352a:	lea    rdx,[rbp-0x10]
   14000352e:	mov    rcx,rbx
   140003531:	call   rsi
   140003533:	mov    r14d,eax
   140003536:	test   eax,eax
   140003538:	js     0x140003548
   14000353a:	mov    eax,r12d
   14000353d:	cmp    DWORD PTR [rbp+0x40],r13d
   140003541:	cmove  eax,r13d
   140003545:	mov    DWORD PTR [r15],eax
   140003548:	mov    rbx,QWORD PTR [rbp+0x50]
   14000354c:	test   rbx,rbx
   14000354f:	je     0x140003567
   140003551:	mov    rax,QWORD PTR [rbx]
   140003554:	mov    rsi,QWORD PTR [rax+0x10]
   140003558:	mov    rcx,rsi
   14000355b:	call   QWORD PTR [rip+0x4eaf]        # 0x140008410
   140003561:	mov    rcx,rbx
   140003564:	call   rsi
   140003566:	nop
   140003567:	test   edi,edi
   140003569:	je     0x140003571
   14000356b:	call   QWORD PTR [rip+0x4a8f]        # 0x140008000
   140003571:	mov    eax,r14d
   140003574:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000357c:	add    rsp,0x50
   140003580:	pop    r15
   140003582:	pop    r14
   140003584:	pop    r13
   140003586:	pop    r12
   140003588:	pop    rdi
   140003589:	pop    rsi
   14000358a:	pop    rbp
   14000358b:	ret    
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	int3   
   140003591:	int3   
   140003592:	int3   
   140003593:	int3   
   140003594:	mov    rax,rsp
   140003597:	push   rbp
   140003598:	push   rsi
   140003599:	push   rdi
   14000359a:	push   r12
   14000359c:	push   r13
   14000359e:	push   r14
   1400035a0:	push   r15
   1400035a2:	lea    rbp,[rax-0x5f]
   1400035a6:	sub    rsp,0x90
   1400035ad:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   1400035b5:	mov    QWORD PTR [rax+0x20],rbx
   1400035b9:	mov    r15,rdx
   1400035bc:	xor    r12d,r12d
   1400035bf:	mov    r14d,r12d
   1400035c2:	mov    WORD PTR [rbp-0x29],r12w
   1400035c7:	xor    eax,eax
   1400035c9:	mov    QWORD PTR [rbp-0x27],rax
   1400035cd:	mov    DWORD PTR [rbp-0x1f],eax
   1400035d0:	mov    WORD PTR [rbp-0x1b],ax
   1400035d4:	mov    DWORD PTR [rbp+0x67],r12d
   1400035d8:	mov    DWORD PTR [rbp-0x19],0x1a0
   1400035df:	mov    DWORD PTR [rbp-0x15],0x1a1
   1400035e6:	mov    DWORD PTR [rbp-0x11],0x19e
   1400035ed:	mov    DWORD PTR [rbp-0xd],0x19f
   1400035f4:	mov    r13d,0x12f
   1400035fa:	mov    DWORD PTR [rbp-0x9],r13d
   1400035fe:	mov    DWORD PTR [rbp-0x5],0x130
   140003605:	mov    edi,r12d
   140003608:	mov    DWORD PTR [rbp+0x6f],r12d
   14000360c:	mov    ebx,r12d
   14000360f:	mov    QWORD PTR [rbp+0x77],rbx
   140003613:	mov    DWORD PTR [rdx],r12d
   140003616:	test   ecx,ecx
   140003618:	je     0x1400036ce
   14000361e:	lea    rdx,[rbp-0x29]
   140003622:	call   0x14000389c
   140003627:	mov    r14d,eax
   14000362a:	test   eax,eax
   14000362c:	js     0x1400036ca
   140003632:	xor    edx,edx
   140003634:	xor    ecx,ecx
   140003636:	call   QWORD PTR [rip+0x49cc]        # 0x140008008
   14000363c:	mov    r14d,eax
   14000363f:	lea    r8d,[r12+0x1]
   140003644:	test   eax,eax
   140003646:	cmovns edi,r8d
   14000364a:	mov    DWORD PTR [rbp+0x6f],edi
   14000364d:	js     0x1400036ca
   14000364f:	lea    rax,[rbp+0x77]
   140003653:	mov    QWORD PTR [rsp+0x20],rax
   140003658:	lea    r9,[rip+0x7131]        # 0x14000a790
   14000365f:	xor    edx,edx
   140003661:	lea    rcx,[rip+0x7138]        # 0x14000a7a0
   140003668:	call   QWORD PTR [rip+0x49aa]        # 0x140008018
   14000366e:	mov    r14d,eax
   140003671:	test   eax,eax
   140003673:	js     0x1400036ca
   140003675:	movups xmm0,XMMWORD PTR [rbp-0x19]
   140003679:	movaps XMMWORD PTR [rbp+0x7],xmm0
   14000367d:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140003682:	movsd  QWORD PTR [rbp+0x17],xmm1
   140003687:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   14000368b:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140003690:	mov    rbx,QWORD PTR [rbp+0x77]
   140003694:	mov    rax,QWORD PTR [rbx]
   140003697:	mov    rsi,QWORD PTR [rax+0x28]
   14000369b:	mov    rcx,rsi
   14000369e:	call   QWORD PTR [rip+0x4d6c]        # 0x140008410
   1400036a4:	lea    r9,[rbp+0x67]
   1400036a8:	lea    r8,[rbp+0x7]
   1400036ac:	lea    rdx,[rbp-0x29]
   1400036b0:	mov    rcx,rbx
   1400036b3:	call   rsi
   1400036b5:	mov    r14d,eax
   1400036b8:	test   eax,eax
   1400036ba:	js     0x1400036ca
   1400036bc:	mov    eax,r12d
   1400036bf:	cmp    DWORD PTR [rbp+0x67],r13d
   1400036c3:	cmove  eax,r13d
   1400036c7:	mov    DWORD PTR [r15],eax
   1400036ca:	mov    rbx,QWORD PTR [rbp+0x77]
   1400036ce:	test   rbx,rbx
   1400036d1:	je     0x1400036e9
   1400036d3:	mov    rax,QWORD PTR [rbx]
   1400036d6:	mov    rsi,QWORD PTR [rax+0x10]
   1400036da:	mov    rcx,rsi
   1400036dd:	call   QWORD PTR [rip+0x4d2d]        # 0x140008410
   1400036e3:	mov    rcx,rbx
   1400036e6:	call   rsi
   1400036e8:	nop
   1400036e9:	test   edi,edi
   1400036eb:	je     0x1400036f3
   1400036ed:	call   QWORD PTR [rip+0x490d]        # 0x140008000
   1400036f3:	mov    eax,r14d
   1400036f6:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400036fe:	add    rsp,0x90
   140003705:	pop    r15
   140003707:	pop    r14
   140003709:	pop    r13
   14000370b:	pop    r12
   14000370d:	pop    rdi
   14000370e:	pop    rsi
   14000370f:	pop    rbp
   140003710:	ret    
   140003711:	int3   
   140003712:	int3   
   140003713:	int3   
   140003714:	int3   
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	mov    rax,rsp
   14000371b:	push   rbp
   14000371c:	push   rsi
   14000371d:	push   rdi
   14000371e:	push   r12
   140003720:	push   r13
   140003722:	push   r14
   140003724:	push   r15
   140003726:	lea    rbp,[rax-0x5f]
   14000372a:	sub    rsp,0x90
   140003731:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140003739:	mov    QWORD PTR [rax+0x20],rbx
   14000373d:	mov    r15,rdx
   140003740:	xor    r12d,r12d
   140003743:	mov    r14d,r12d
   140003746:	mov    DWORD PTR [rbp+0x67],r12d
   14000374a:	mov    WORD PTR [rbp-0x29],r12w
   14000374f:	xor    eax,eax
   140003751:	mov    QWORD PTR [rbp-0x27],rax
   140003755:	mov    DWORD PTR [rbp-0x1f],eax
   140003758:	mov    WORD PTR [rbp-0x1b],ax
   14000375c:	mov    DWORD PTR [rbp-0x19],0x1a5
   140003763:	mov    DWORD PTR [rbp-0x15],0x1a6
   14000376a:	mov    DWORD PTR [rbp-0x11],0x1a8
   140003771:	mov    DWORD PTR [rbp-0xd],0x1a7
   140003778:	mov    r13d,0x133
   14000377e:	mov    DWORD PTR [rbp-0x9],r13d
   140003782:	mov    DWORD PTR [rbp-0x5],0x134
   140003789:	mov    edi,r12d
   14000378c:	mov    DWORD PTR [rbp+0x6f],r12d
   140003790:	mov    ebx,r12d
   140003793:	mov    QWORD PTR [rbp+0x77],rbx
   140003797:	mov    DWORD PTR [rdx],r12d
   14000379a:	test   ecx,ecx
   14000379c:	je     0x140003852
   1400037a2:	lea    rdx,[rbp-0x29]
   1400037a6:	call   0x14000389c
   1400037ab:	mov    r14d,eax
   1400037ae:	test   eax,eax
   1400037b0:	js     0x14000384e
   1400037b6:	xor    edx,edx
   1400037b8:	xor    ecx,ecx
   1400037ba:	call   QWORD PTR [rip+0x4848]        # 0x140008008
   1400037c0:	mov    r14d,eax
   1400037c3:	lea    r8d,[r12+0x1]
   1400037c8:	test   eax,eax
   1400037ca:	cmovns edi,r8d
   1400037ce:	mov    DWORD PTR [rbp+0x6f],edi
   1400037d1:	js     0x14000384e
   1400037d3:	lea    rax,[rbp+0x77]
   1400037d7:	mov    QWORD PTR [rsp+0x20],rax
   1400037dc:	lea    r9,[rip+0x6fad]        # 0x14000a790
   1400037e3:	xor    edx,edx
   1400037e5:	lea    rcx,[rip+0x6fb4]        # 0x14000a7a0
   1400037ec:	call   QWORD PTR [rip+0x4826]        # 0x140008018
   1400037f2:	mov    r14d,eax
   1400037f5:	test   eax,eax
   1400037f7:	js     0x14000384e
   1400037f9:	movups xmm0,XMMWORD PTR [rbp-0x19]
   1400037fd:	movaps XMMWORD PTR [rbp+0x7],xmm0
   140003801:	movsd  xmm1,QWORD PTR [rbp-0x9]
   140003806:	movsd  QWORD PTR [rbp+0x17],xmm1
   14000380b:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   14000380f:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140003814:	mov    rbx,QWORD PTR [rbp+0x77]
   140003818:	mov    rax,QWORD PTR [rbx]
   14000381b:	mov    rsi,QWORD PTR [rax+0x28]
   14000381f:	mov    rcx,rsi
   140003822:	call   QWORD PTR [rip+0x4be8]        # 0x140008410
   140003828:	lea    r9,[rbp+0x67]
   14000382c:	lea    r8,[rbp+0x7]
   140003830:	lea    rdx,[rbp-0x29]
   140003834:	mov    rcx,rbx
   140003837:	call   rsi
   140003839:	mov    r14d,eax
   14000383c:	test   eax,eax
   14000383e:	js     0x14000384e
   140003840:	mov    eax,r12d
   140003843:	cmp    DWORD PTR [rbp+0x67],r13d
   140003847:	cmove  eax,r13d
   14000384b:	mov    DWORD PTR [r15],eax
   14000384e:	mov    rbx,QWORD PTR [rbp+0x77]
   140003852:	test   rbx,rbx
   140003855:	je     0x14000386d
   140003857:	mov    rax,QWORD PTR [rbx]
   14000385a:	mov    rsi,QWORD PTR [rax+0x10]
   14000385e:	mov    rcx,rsi
   140003861:	call   QWORD PTR [rip+0x4ba9]        # 0x140008410
   140003867:	mov    rcx,rbx
   14000386a:	call   rsi
   14000386c:	nop
   14000386d:	test   edi,edi
   14000386f:	je     0x140003877
   140003871:	call   QWORD PTR [rip+0x4789]        # 0x140008000
   140003877:	mov    eax,r14d
   14000387a:	mov    rbx,QWORD PTR [rsp+0xe8]
   140003882:	add    rsp,0x90
   140003889:	pop    r15
   14000388b:	pop    r14
   14000388d:	pop    r13
   14000388f:	pop    r12
   140003891:	pop    rdi
   140003892:	pop    rsi
   140003893:	pop    rbp
   140003894:	ret    
   140003895:	int3   
   140003896:	int3   
   140003897:	int3   
   140003898:	int3   
   140003899:	int3   
   14000389a:	int3   
   14000389b:	int3   
   14000389c:	mov    QWORD PTR [rsp+0x8],rbx
   1400038a1:	mov    QWORD PTR [rsp+0x18],rsi
   1400038a6:	mov    QWORD PTR [rsp+0x20],rdi
   1400038ab:	push   rbp
   1400038ac:	mov    rbp,rsp
   1400038af:	sub    rsp,0x80
   1400038b6:	mov    rax,QWORD PTR [rip+0xa74b]        # 0x14000e008
   1400038bd:	xor    rax,rsp
   1400038c0:	mov    QWORD PTR [rbp-0x10],rax
   1400038c4:	xor    eax,eax
   1400038c6:	mov    ebx,ecx
   1400038c8:	xor    esi,esi
   1400038ca:	mov    QWORD PTR [rbp-0x2e],rax
   1400038ce:	lea    rcx,[rbp-0x30]
   1400038d2:	mov    WORD PTR [rbp-0x30],si
   1400038d6:	mov    DWORD PTR [rbp-0x26],eax
   1400038d9:	mov    rdi,rdx
   1400038dc:	mov    WORD PTR [rbp-0x22],ax
   1400038e0:	mov    WORD PTR [rbp-0x50],si
   1400038e4:	mov    QWORD PTR [rbp-0x4e],rax
   1400038e8:	mov    DWORD PTR [rbp-0x46],eax
   1400038eb:	mov    WORD PTR [rbp-0x42],ax
   1400038ef:	call   QWORD PTR [rip+0x492b]        # 0x140008220
   1400038f5:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400038f9:	xor    eax,eax
   1400038fb:	mov    QWORD PTR [rbp-0x1e],rax
   1400038ff:	mov    DWORD PTR [rbp-0x16],eax
   140003902:	mov    WORD PTR [rbp-0x12],ax
   140003906:	lea    rax,[rbp-0x50]
   14000390a:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14000390f:	mov    WORD PTR [rbp-0x20],si
   140003913:	mov    QWORD PTR [rbp-0x58],rsi
   140003917:	mov    QWORD PTR [rbp-0x60],rsi
   14000391b:	test   rax,rax
   14000391e:	jne    0x140003927
   140003920:	mov    ebx,0x80004003
   140003925:	jmp    0x140003993
   140003927:	lea    rdx,[rbp-0x58]
   14000392b:	lea    rcx,[rbp-0x40]
   14000392f:	call   QWORD PTR [rip+0x490b]        # 0x140008240
   140003935:	lea    rax,[rbp-0x60]
   140003939:	test   rax,rax
   14000393c:	jne    0x140003949
   14000393e:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140003942:	mov    ebx,0x80004003
   140003947:	jmp    0x14000398b
   140003949:	mov    eax,DWORD PTR [rbp-0x58]
   14000394c:	mov    DWORD PTR [rbp-0x60],eax
   14000394f:	mov    rax,QWORD PTR [rbp-0x58]
   140003953:	shr    rax,0x20
   140003957:	mov    DWORD PTR [rbp-0x5c],eax
   14000395a:	imul   rax,rbx,0x23c34600
   140003961:	add    rax,QWORD PTR [rbp-0x60]
   140003965:	mov    DWORD PTR [rbp-0x60],eax
   140003968:	shr    rax,0x20
   14000396c:	mov    DWORD PTR [rbp-0x5c],eax
   14000396f:	mov    rax,QWORD PTR [rbp-0x60]
   140003973:	mov    QWORD PTR [rbp-0x60],rax
   140003977:	lea    rdx,[rbp-0x20]
   14000397b:	mov    ebx,esi
   14000397d:	lea    rcx,[rbp-0x60]
   140003981:	call   QWORD PTR [rip+0x48c1]        # 0x140008248
   140003987:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14000398b:	test   ebx,ebx
   14000398d:	js     0x140003993
   14000398f:	movdqu XMMWORD PTR [rdi],xmm0
   140003993:	mov    eax,ebx
   140003995:	mov    rcx,QWORD PTR [rbp-0x10]
   140003999:	xor    rcx,rsp
   14000399c:	call   0x140005fe0
   1400039a1:	lea    r11,[rsp+0x80]
   1400039a9:	mov    rbx,QWORD PTR [r11+0x10]
   1400039ad:	mov    rsi,QWORD PTR [r11+0x20]
   1400039b1:	mov    rdi,QWORD PTR [r11+0x28]
   1400039b5:	mov    rsp,r11
   1400039b8:	pop    rbp
   1400039b9:	ret    
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	mov    rax,rsp
   1400039c3:	push   rbp
   1400039c4:	push   r12
   1400039c6:	push   r13
   1400039c8:	push   r14
   1400039ca:	push   r15
   1400039cc:	lea    rbp,[rax-0x5f]
   1400039d0:	sub    rsp,0x100
   1400039d7:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   1400039df:	mov    QWORD PTR [rax+0x8],rbx
   1400039e3:	mov    QWORD PTR [rax+0x10],rsi
   1400039e7:	mov    QWORD PTR [rax+0x18],rdi
   1400039eb:	mov    rax,QWORD PTR [rip+0xa616]        # 0x14000e008
   1400039f2:	xor    rax,rsp
   1400039f5:	mov    QWORD PTR [rbp+0x2f],rax
   1400039f9:	xor    r15d,r15d
   1400039fc:	mov    DWORD PTR [rsp+0x30],r15d
   140003a01:	movups xmm0,XMMWORD PTR [rip+0x6cc8]        # 0x14000a6d0
   140003a08:	movups XMMWORD PTR [rbp-0x9],xmm0
   140003a0c:	movups xmm1,XMMWORD PTR [rip+0x6ccd]        # 0x14000a6e0
   140003a13:	movups XMMWORD PTR [rbp+0x7],xmm1
   140003a17:	movups xmm0,XMMWORD PTR [rip+0x6cd2]        # 0x14000a6f0
   140003a1e:	movups XMMWORD PTR [rbp+0x17],xmm0
   140003a22:	mov    eax,DWORD PTR [rip+0x6cd8]        # 0x14000a700
   140003a28:	mov    DWORD PTR [rbp+0x27],eax
   140003a2b:	mov    QWORD PTR [rsp+0x48],r15
   140003a30:	mov    QWORD PTR [rsp+0x40],r15
   140003a35:	mov    QWORD PTR [rsp+0x38],r15
   140003a3a:	mov    QWORD PTR [rbp-0x79],r15
   140003a3e:	mov    QWORD PTR [rbp-0x71],r15
   140003a42:	xor    edx,edx
   140003a44:	xor    ecx,ecx
   140003a46:	call   QWORD PTR [rip+0x45bc]        # 0x140008008
   140003a4c:	mov    edi,r15d
   140003a4f:	lea    ebx,[r15+0x1]
   140003a53:	test   eax,eax
   140003a55:	cmovns edi,ebx
   140003a58:	mov    DWORD PTR [rbp-0x69],edi
   140003a5b:	mov    DWORD PTR [rsp+0x30],eax
   140003a5f:	lea    r13,[rip+0x6ca2]        # 0x14000a708
   140003a66:	lea    r12d,[r15+0x4]
   140003a6a:	jns    0x140003a8e
   140003a6c:	call   0x1400025f4
   140003a71:	cmp    DWORD PTR [rax],0x2
   140003a74:	jbe    0x140003dab
   140003a7a:	mov    DWORD PTR [rsp+0x34],0x37b
   140003a82:	lea    rdx,[rip+0x8158]        # 0x14000bbe1
   140003a89:	jmp    0x140003d6c
   140003a8e:	lea    r9,[rbp-0x59]
   140003a92:	lea    r8,[rbp-0x51]
   140003a96:	mov    edx,0x16
   140003a9b:	lea    rcx,[rip+0x64fe]        # 0x140009fa0
   140003aa2:	call   QWORD PTR [rip+0x47c0]        # 0x140008268
   140003aa8:	test   eax,eax
   140003aaa:	jns    0x140003abf
   140003aac:	xor    r9d,r9d
   140003aaf:	xor    r8d,r8d
   140003ab2:	mov    edx,ebx
   140003ab4:	mov    ecx,0xc000000d
   140003ab9:	call   QWORD PTR [rip+0x4599]        # 0x140008058
   140003abf:	mov    r14,QWORD PTR [rbp-0x59]
   140003ac3:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ac8:	test   rsi,rsi
   140003acb:	je     0x140003ae7
   140003acd:	mov    QWORD PTR [rsp+0x40],r15
   140003ad2:	mov    rax,QWORD PTR [rsi]
   140003ad5:	mov    rbx,QWORD PTR [rax+0x10]
   140003ad9:	mov    rcx,rbx
   140003adc:	call   QWORD PTR [rip+0x492e]        # 0x140008410
   140003ae2:	mov    rcx,rsi
   140003ae5:	call   rbx
   140003ae7:	lea    r8,[rsp+0x40]
   140003aec:	lea    rdx,[rip+0x6375]        # 0x140009e68
   140003af3:	mov    rcx,r14
   140003af6:	call   QWORD PTR [rip+0x475c]        # 0x140008258
   140003afc:	mov    DWORD PTR [rsp+0x30],eax
   140003b00:	test   eax,eax
   140003b02:	jns    0x140003b26
   140003b04:	call   0x1400025f4
   140003b09:	cmp    DWORD PTR [rax],0x2
   140003b0c:	jbe    0x140003dab
   140003b12:	mov    DWORD PTR [rsp+0x34],0x384
   140003b1a:	lea    rdx,[rip+0x80c0]        # 0x14000bbe1
   140003b21:	jmp    0x140003d6c
   140003b26:	mov    r14,QWORD PTR [rsp+0x40]
   140003b2b:	mov    rsi,QWORD PTR [rsp+0x48]
   140003b30:	test   rsi,rsi
   140003b33:	je     0x140003b4f
   140003b35:	mov    QWORD PTR [rsp+0x48],r15
   140003b3a:	mov    rax,QWORD PTR [rsi]
   140003b3d:	mov    rbx,QWORD PTR [rax+0x10]
   140003b41:	mov    rcx,rbx
   140003b44:	call   QWORD PTR [rip+0x48c6]        # 0x140008410
   140003b4a:	mov    rcx,rsi
   140003b4d:	call   rbx
   140003b4f:	lea    r9,[rbp-0x59]
   140003b53:	lea    r8,[rbp-0x51]
   140003b57:	mov    edx,0x19
   140003b5c:	lea    rcx,[rbp-0x9]
   140003b60:	call   QWORD PTR [rip+0x4702]        # 0x140008268
   140003b66:	test   eax,eax
   140003b68:	jns    0x140003b7f
   140003b6a:	xor    r9d,r9d
   140003b6d:	xor    r8d,r8d
   140003b70:	lea    edx,[r9+0x1]
   140003b74:	mov    ecx,0xc000000d
   140003b79:	call   QWORD PTR [rip+0x44d9]        # 0x140008058
   140003b7f:	mov    rax,QWORD PTR [r14]
   140003b82:	mov    rbx,QWORD PTR [rax+0x30]
   140003b86:	mov    rcx,rbx
   140003b89:	call   QWORD PTR [rip+0x4881]        # 0x140008410
   140003b8f:	lea    r8,[rsp+0x48]
   140003b94:	mov    rdx,QWORD PTR [rbp-0x59]
   140003b98:	mov    rcx,r14
   140003b9b:	call   rbx
   140003b9d:	mov    DWORD PTR [rsp+0x30],eax
   140003ba1:	test   eax,eax
   140003ba3:	jns    0x140003bc7
   140003ba5:	call   0x1400025f4
   140003baa:	cmp    DWORD PTR [rax],0x2
   140003bad:	jbe    0x140003dab
   140003bb3:	mov    DWORD PTR [rsp+0x34],0x38d
   140003bbb:	lea    rdx,[rip+0x801f]        # 0x14000bbe1
   140003bc2:	jmp    0x140003d6c
   140003bc7:	lea    r9,[rbp-0x59]
   140003bcb:	lea    r8,[rbp-0x51]
   140003bcf:	mov    edx,0x17
   140003bd4:	lea    rcx,[rip+0x5fed]        # 0x140009bc8
   140003bdb:	call   QWORD PTR [rip+0x4687]        # 0x140008268
   140003be1:	test   eax,eax
   140003be3:	jns    0x140003bfa
   140003be5:	xor    r9d,r9d
   140003be8:	xor    r8d,r8d
   140003beb:	lea    edx,[r9+0x1]
   140003bef:	mov    ecx,0xc000000d
   140003bf4:	call   QWORD PTR [rip+0x445e]        # 0x140008058
   140003bfa:	mov    r14,QWORD PTR [rbp-0x59]
   140003bfe:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c03:	test   rsi,rsi
   140003c06:	je     0x140003c22
   140003c08:	mov    QWORD PTR [rsp+0x38],r15
   140003c0d:	mov    rax,QWORD PTR [rsi]
   140003c10:	mov    rbx,QWORD PTR [rax+0x10]
   140003c14:	mov    rcx,rbx
   140003c17:	call   QWORD PTR [rip+0x47f3]        # 0x140008410
   140003c1d:	mov    rcx,rsi
   140003c20:	call   rbx
   140003c22:	lea    r8,[rsp+0x38]
   140003c27:	lea    rdx,[rip+0x6b52]        # 0x14000a780
   140003c2e:	mov    rcx,r14
   140003c31:	call   QWORD PTR [rip+0x4621]        # 0x140008258
   140003c37:	mov    DWORD PTR [rsp+0x30],eax
   140003c3b:	test   eax,eax
   140003c3d:	jns    0x140003c61
   140003c3f:	call   0x1400025f4
   140003c44:	cmp    DWORD PTR [rax],0x2
   140003c47:	jbe    0x140003dab
   140003c4d:	mov    DWORD PTR [rsp+0x34],0x396
   140003c55:	lea    rdx,[rip+0x7f85]        # 0x14000bbe1
   140003c5c:	jmp    0x140003d6c
   140003c61:	mov    rsi,QWORD PTR [rbp-0x79]
   140003c65:	test   rsi,rsi
   140003c68:	je     0x140003c83
   140003c6a:	mov    QWORD PTR [rbp-0x79],r15
   140003c6e:	mov    rax,QWORD PTR [rsi]
   140003c71:	mov    rbx,QWORD PTR [rax+0x10]
   140003c75:	mov    rcx,rbx
   140003c78:	call   QWORD PTR [rip+0x4792]        # 0x140008410
   140003c7e:	mov    rcx,rsi
   140003c81:	call   rbx
   140003c83:	mov    rbx,QWORD PTR [rsp+0x38]
   140003c88:	mov    rax,QWORD PTR [rbx]
   140003c8b:	mov    rsi,QWORD PTR [rax]
   140003c8e:	mov    rcx,rsi
   140003c91:	call   QWORD PTR [rip+0x4779]        # 0x140008410
   140003c97:	lea    r8,[rbp-0x79]
   140003c9b:	lea    rdx,[rip+0x604e]        # 0x140009cf0
   140003ca2:	mov    rcx,rbx
   140003ca5:	call   rsi
   140003ca7:	mov    DWORD PTR [rsp+0x30],eax
   140003cab:	test   eax,eax
   140003cad:	jns    0x140003cd1
   140003caf:	call   0x1400025f4
   140003cb4:	cmp    DWORD PTR [rax],0x2
   140003cb7:	jbe    0x140003dab
   140003cbd:	mov    DWORD PTR [rsp+0x34],0x39d
   140003cc5:	lea    rdx,[rip+0x7f15]        # 0x14000bbe1
   140003ccc:	jmp    0x140003d6c
   140003cd1:	mov    r14,QWORD PTR [rbp-0x79]
   140003cd5:	mov    rsi,QWORD PTR [rbp-0x71]
   140003cd9:	test   rsi,rsi
   140003cdc:	je     0x140003cf7
   140003cde:	mov    QWORD PTR [rbp-0x71],r15
   140003ce2:	mov    rax,QWORD PTR [rsi]
   140003ce5:	mov    rbx,QWORD PTR [rax+0x10]
   140003ce9:	mov    rcx,rbx
   140003cec:	call   QWORD PTR [rip+0x471e]        # 0x140008410
   140003cf2:	mov    rcx,rsi
   140003cf5:	call   rbx
   140003cf7:	mov    rax,QWORD PTR [r14]
   140003cfa:	mov    rbx,QWORD PTR [rax+0x40]
   140003cfe:	mov    rcx,rbx
   140003d01:	call   QWORD PTR [rip+0x4709]        # 0x140008410
   140003d07:	lea    r8,[rbp-0x71]
   140003d0b:	mov    rdx,QWORD PTR [rsp+0x48]
   140003d10:	mov    rcx,r14
   140003d13:	call   rbx
   140003d15:	mov    DWORD PTR [rsp+0x30],eax
   140003d19:	test   eax,eax
   140003d1b:	jns    0x140003d3c
   140003d1d:	call   0x1400025f4
   140003d22:	cmp    DWORD PTR [rax],0x2
   140003d25:	jbe    0x140003dab
   140003d2b:	mov    DWORD PTR [rsp+0x34],0x3a6
   140003d33:	lea    rdx,[rip+0x7ea7]        # 0x14000bbe1
   140003d3a:	jmp    0x140003d6c
   140003d3c:	mov    rcx,QWORD PTR [rbp-0x71]
   140003d40:	call   0x1400040cc
   140003d45:	mov    esi,eax
   140003d47:	mov    DWORD PTR [rsp+0x30],eax
   140003d4b:	test   eax,eax
   140003d4d:	jns    0x140003df7
   140003d53:	call   0x1400025f4
   140003d58:	cmp    DWORD PTR [rax],0x2
   140003d5b:	jbe    0x140003dab
   140003d5d:	mov    DWORD PTR [rsp+0x34],0x3ad
   140003d65:	lea    rdx,[rip+0x7e75]        # 0x14000bbe1
   140003d6c:	lea    rcx,[rsp+0x34]
   140003d71:	mov    QWORD PTR [rbp-0x29],rcx
   140003d75:	lea    rcx,[rsp+0x30]
   140003d7a:	mov    QWORD PTR [rbp-0x39],r13
   140003d7e:	mov    QWORD PTR [rbp-0x31],0x25
   140003d86:	mov    QWORD PTR [rbp-0x21],r12
   140003d8a:	mov    QWORD PTR [rbp-0x19],rcx
   140003d8e:	mov    QWORD PTR [rbp-0x11],r12
   140003d92:	lea    rcx,[rbp-0x59]
   140003d96:	mov    QWORD PTR [rsp+0x28],rcx
   140003d9b:	mov    DWORD PTR [rsp+0x20],0x5
   140003da3:	mov    rcx,rax
   140003da6:	call   0x1400010dc
   140003dab:	mov    esi,DWORD PTR [rsp+0x30]
   140003daf:	test   esi,esi
   140003db1:	jns    0x140003df7
   140003db3:	call   0x1400025f4
   140003db8:	cmp    DWORD PTR [rax],0x2
   140003dbb:	jbe    0x140003df3
   140003dbd:	mov    QWORD PTR [rbp-0x39],r13
   140003dc1:	mov    QWORD PTR [rbp-0x31],0x25
   140003dc9:	lea    rcx,[rsp+0x30]
   140003dce:	mov    QWORD PTR [rbp-0x29],rcx
   140003dd2:	mov    QWORD PTR [rbp-0x21],r12
   140003dd6:	lea    rcx,[rbp-0x59]
   140003dda:	mov    QWORD PTR [rsp+0x28],rcx
   140003ddf:	mov    DWORD PTR [rsp+0x20],r12d
   140003de4:	lea    rdx,[rip+0x8128]        # 0x14000bf13
   140003deb:	mov    rcx,rax
   140003dee:	call   0x1400010dc
   140003df3:	mov    esi,DWORD PTR [rsp+0x30]
   140003df7:	mov    r14,QWORD PTR [rbp-0x71]
   140003dfb:	test   r14,r14
   140003dfe:	je     0x140003e1a
   140003e00:	mov    QWORD PTR [rbp-0x71],r15
   140003e04:	mov    rax,QWORD PTR [r14]
   140003e07:	mov    rbx,QWORD PTR [rax+0x10]
   140003e0b:	mov    rcx,rbx
   140003e0e:	call   QWORD PTR [rip+0x45fc]        # 0x140008410
   140003e14:	mov    rcx,r14
   140003e17:	call   rbx
   140003e19:	nop
   140003e1a:	mov    r14,QWORD PTR [rbp-0x79]
   140003e1e:	test   r14,r14
   140003e21:	je     0x140003e3d
   140003e23:	mov    QWORD PTR [rbp-0x79],r15
   140003e27:	mov    rax,QWORD PTR [r14]
   140003e2a:	mov    rbx,QWORD PTR [rax+0x10]
   140003e2e:	mov    rcx,rbx
   140003e31:	call   QWORD PTR [rip+0x45d9]        # 0x140008410
   140003e37:	mov    rcx,r14
   140003e3a:	call   rbx
   140003e3c:	nop
   140003e3d:	mov    r14,QWORD PTR [rsp+0x38]
   140003e42:	test   r14,r14
   140003e45:	je     0x140003e62
   140003e47:	mov    QWORD PTR [rsp+0x38],r15
   140003e4c:	mov    rax,QWORD PTR [r14]
   140003e4f:	mov    rbx,QWORD PTR [rax+0x10]
   140003e53:	mov    rcx,rbx
   140003e56:	call   QWORD PTR [rip+0x45b4]        # 0x140008410
   140003e5c:	mov    rcx,r14
   140003e5f:	call   rbx
   140003e61:	nop
   140003e62:	mov    r14,QWORD PTR [rsp+0x40]
   140003e67:	test   r14,r14
   140003e6a:	je     0x140003e87
   140003e6c:	mov    QWORD PTR [rsp+0x40],r15
   140003e71:	mov    rax,QWORD PTR [r14]
   140003e74:	mov    rbx,QWORD PTR [rax+0x10]
   140003e78:	mov    rcx,rbx
   140003e7b:	call   QWORD PTR [rip+0x458f]        # 0x140008410
   140003e81:	mov    rcx,r14
   140003e84:	call   rbx
   140003e86:	nop
   140003e87:	mov    r14,QWORD PTR [rsp+0x48]
   140003e8c:	test   r14,r14
   140003e8f:	je     0x140003eac
   140003e91:	mov    QWORD PTR [rsp+0x48],r15
   140003e96:	mov    rax,QWORD PTR [r14]
   140003e99:	mov    rbx,QWORD PTR [rax+0x10]
   140003e9d:	mov    rcx,rbx
   140003ea0:	call   QWORD PTR [rip+0x456a]        # 0x140008410
   140003ea6:	mov    rcx,r14
   140003ea9:	call   rbx
   140003eab:	nop
   140003eac:	test   edi,edi
   140003eae:	je     0x140003eb6
   140003eb0:	call   QWORD PTR [rip+0x414a]        # 0x140008000
   140003eb6:	mov    eax,esi
   140003eb8:	mov    rcx,QWORD PTR [rbp+0x2f]
   140003ebc:	xor    rcx,rsp
   140003ebf:	call   0x140005fe0
   140003ec4:	lea    r11,[rsp+0x100]
   140003ecc:	mov    rbx,QWORD PTR [r11+0x30]
   140003ed0:	mov    rsi,QWORD PTR [r11+0x38]
   140003ed4:	mov    rdi,QWORD PTR [r11+0x40]
   140003ed8:	mov    rsp,r11
   140003edb:	pop    r15
   140003edd:	pop    r14
   140003edf:	pop    r13
   140003ee1:	pop    r12
   140003ee3:	pop    rbp
   140003ee4:	ret    
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	mov    QWORD PTR [rsp+0x8],rbx
   140003ef1:	push   rdi
   140003ef2:	sub    rsp,0x20
   140003ef6:	mov    rdi,QWORD PTR [rcx]
   140003ef9:	test   rdi,rdi
   140003efc:	je     0x140003f17
   140003efe:	and    QWORD PTR [rcx],0x0
   140003f02:	mov    rax,QWORD PTR [rdi]
   140003f05:	mov    rbx,QWORD PTR [rax+0x10]
   140003f09:	mov    rcx,rbx
   140003f0c:	call   QWORD PTR [rip+0x44fe]        # 0x140008410
   140003f12:	mov    rcx,rdi
   140003f15:	call   rbx
   140003f17:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f1c:	add    rsp,0x20
   140003f20:	pop    rdi
   140003f21:	ret    
   140003f22:	int3   
   140003f23:	int3   
   140003f24:	int3   
   140003f25:	int3   
   140003f26:	int3   
   140003f27:	int3   
   140003f28:	rex push rbx
   140003f2a:	sub    rsp,0x70
   140003f2e:	mov    rax,QWORD PTR [rip+0xa0d3]        # 0x14000e008
   140003f35:	xor    rax,rsp
   140003f38:	mov    QWORD PTR [rsp+0x60],rax
   140003f3d:	mov    rbx,rcx
   140003f40:	call   0x140001f04
   140003f45:	cmp    DWORD PTR [rax],0x5
   140003f48:	jbe    0x140003f9a
   140003f4a:	movabs rcx,0x200000000000
   140003f54:	test   QWORD PTR [rax+0x10],rcx
   140003f58:	je     0x140003f9a
   140003f5a:	mov    rdx,QWORD PTR [rax+0x18]
   140003f5e:	and    rdx,rcx
   140003f61:	cmp    rdx,QWORD PTR [rax+0x18]
   140003f65:	jne    0x140003f9a
   140003f67:	and    DWORD PTR [rsp+0x5c],0x0
   140003f6c:	mov    QWORD PTR [rsp+0x50],rbx
   140003f71:	mov    DWORD PTR [rsp+0x58],0x4
   140003f79:	lea    rcx,[rsp+0x30]
   140003f7e:	mov    QWORD PTR [rsp+0x28],rcx
   140003f83:	lea    rdx,[rip+0x7f56]        # 0x14000bee0
   140003f8a:	mov    rcx,rax
   140003f8d:	mov    DWORD PTR [rsp+0x20],0x3
   140003f95:	call   0x1400010dc
   140003f9a:	mov    rcx,QWORD PTR [rsp+0x60]
   140003f9f:	xor    rcx,rsp
   140003fa2:	call   0x140005fe0
   140003fa7:	add    rsp,0x70
   140003fab:	pop    rbx
   140003fac:	ret    
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	int3   
   140003fb1:	int3   
   140003fb2:	int3   
   140003fb3:	int3   
   140003fb4:	sub    rsp,0x78
   140003fb8:	mov    rax,QWORD PTR [rip+0xa049]        # 0x14000e008
   140003fbf:	xor    rax,rsp
   140003fc2:	mov    QWORD PTR [rsp+0x60],rax
   140003fc7:	call   0x140001f04
   140003fcc:	cmp    DWORD PTR [rax],0x5
   140003fcf:	jbe    0x140004028
   140003fd1:	movabs rdx,0x200000000000
   140003fdb:	test   QWORD PTR [rax+0x10],rdx
   140003fdf:	je     0x140004028
   140003fe1:	mov    rcx,QWORD PTR [rax+0x18]
   140003fe5:	and    rcx,rdx
   140003fe8:	cmp    rcx,QWORD PTR [rax+0x18]
   140003fec:	jne    0x140004028
   140003fee:	and    DWORD PTR [rsp+0x5c],0x0
   140003ff3:	lea    rcx,[rip+0x664e]        # 0x14000a648
   140003ffa:	mov    QWORD PTR [rsp+0x50],rcx
   140003fff:	mov    DWORD PTR [rsp+0x58],0x6
   140004007:	lea    rcx,[rsp+0x30]
   14000400c:	mov    QWORD PTR [rsp+0x28],rcx
   140004011:	lea    rdx,[rip+0x7e90]        # 0x14000bea8
   140004018:	mov    rcx,rax
   14000401b:	mov    DWORD PTR [rsp+0x20],0x3
   140004023:	call   0x1400010dc
   140004028:	mov    rcx,QWORD PTR [rsp+0x60]
   14000402d:	xor    rcx,rsp
   140004030:	call   0x140005fe0
   140004035:	add    rsp,0x78
   140004039:	ret    
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	sub    rsp,0x78
   140004044:	mov    rax,QWORD PTR [rip+0x9fbd]        # 0x14000e008
   14000404b:	xor    rax,rsp
   14000404e:	mov    QWORD PTR [rsp+0x60],rax
   140004053:	call   0x140001f04
   140004058:	cmp    DWORD PTR [rax],0x5
   14000405b:	jbe    0x1400040b4
   14000405d:	movabs rdx,0x200000000000
   140004067:	test   QWORD PTR [rax+0x10],rdx
   14000406b:	je     0x1400040b4
   14000406d:	mov    rcx,QWORD PTR [rax+0x18]
   140004071:	and    rcx,rdx
   140004074:	cmp    rcx,QWORD PTR [rax+0x18]
   140004078:	jne    0x1400040b4
   14000407a:	and    DWORD PTR [rsp+0x5c],0x0
   14000407f:	lea    rcx,[rip+0x65ca]        # 0x14000a650
   140004086:	mov    QWORD PTR [rsp+0x50],rcx
   14000408b:	mov    DWORD PTR [rsp+0x58],0x7
   140004093:	lea    rcx,[rsp+0x30]
   140004098:	mov    QWORD PTR [rsp+0x28],rcx
   14000409d:	lea    rdx,[rip+0x7e04]        # 0x14000bea8
   1400040a4:	mov    rcx,rax
   1400040a7:	mov    DWORD PTR [rsp+0x20],0x3
   1400040af:	call   0x1400010dc
   1400040b4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400040b9:	xor    rcx,rsp
   1400040bc:	call   0x140005fe0
   1400040c1:	add    rsp,0x78
   1400040c5:	ret    
   1400040c6:	int3   
   1400040c7:	int3   
   1400040c8:	int3   
   1400040c9:	int3   
   1400040ca:	int3   
   1400040cb:	int3   
   1400040cc:	mov    QWORD PTR [rsp+0x18],r8
   1400040d1:	mov    DWORD PTR [rsp+0x10],edx
   1400040d5:	push   rbp
   1400040d6:	push   rbx
   1400040d7:	push   rsi
   1400040d8:	push   rdi
   1400040d9:	push   r14
   1400040db:	push   r15
   1400040dd:	mov    rbp,rsp
   1400040e0:	sub    rsp,0x58
   1400040e4:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400040ec:	mov    r14,rcx
   1400040ef:	mov    QWORD PTR [rbp-0x20],rcx
   1400040f3:	test   rcx,rcx
   1400040f6:	je     0x14000410e
   1400040f8:	mov    rax,QWORD PTR [rcx]
   1400040fb:	mov    rbx,QWORD PTR [rax+0x8]
   1400040ff:	mov    rcx,rbx
   140004102:	call   QWORD PTR [rip+0x4308]        # 0x140008410
   140004108:	mov    rcx,r14
   14000410b:	call   rbx
   14000410d:	nop
   14000410e:	xor    edi,edi
   140004110:	mov    QWORD PTR [rbp+0x50],rdi
   140004114:	lea    rdx,[rip+0xa04f]        # 0x14000e16a
   14000411b:	lea    ecx,[rdi+0x38]
   14000411e:	call   0x1400060dc
   140004123:	test   rax,rax
   140004126:	jne    0x140004134
   140004128:	mov    DWORD PTR [rbp+0x40],0x8007000e
   14000412f:	jmp    0x1400042ff
   140004134:	mov    rcx,rax
   140004137:	call   0x14000434c
   14000413c:	mov    r15,rax
   14000413f:	mov    r9d,0x1f0003
   140004145:	xor    r8d,r8d
   140004148:	xor    edx,edx
   14000414a:	xor    ecx,ecx
   14000414c:	call   QWORD PTR [rip+0x40a6]        # 0x1400081f8
   140004152:	mov    QWORD PTR [r15+0x30],rax
   140004156:	test   rax,rax
   140004159:	jne    0x140004171
   14000415b:	call   QWORD PTR [rip+0x3f07]        # 0x140008068
   140004161:	movzx  esi,ax
   140004164:	or     esi,0x80070000
   14000416a:	test   eax,eax
   14000416c:	cmovle esi,eax
   14000416f:	jmp    0x140004173
   140004171:	xor    esi,esi
   140004173:	mov    rax,QWORD PTR [r15]
   140004176:	test   esi,esi
   140004178:	jns    0x14000418e
   14000417a:	mov    rbx,QWORD PTR [rax+0x10]
   14000417e:	mov    rcx,rbx
   140004181:	call   QWORD PTR [rip+0x4289]        # 0x140008410
   140004187:	mov    rcx,r15
   14000418a:	call   rbx
   14000418c:	jmp    0x1400041be
   14000418e:	mov    rbx,QWORD PTR [rax+0x8]
   140004192:	mov    rcx,rbx
   140004195:	call   QWORD PTR [rip+0x4275]        # 0x140008410
   14000419b:	mov    rcx,r15
   14000419e:	call   rbx
   1400041a0:	mov    rdi,r15
   1400041a3:	mov    QWORD PTR [rbp+0x50],r15
   1400041a7:	mov    rax,QWORD PTR [r15]
   1400041aa:	mov    rbx,QWORD PTR [rax+0x10]
   1400041ae:	mov    rcx,rbx
   1400041b1:	call   QWORD PTR [rip+0x4259]        # 0x140008410
   1400041b7:	mov    rcx,r15
   1400041ba:	call   rbx
   1400041bc:	xor    esi,esi
   1400041be:	mov    DWORD PTR [rbp+0x40],esi
   1400041c1:	test   esi,esi
   1400041c3:	js     0x1400042ff
   1400041c9:	mov    rax,QWORD PTR [r14]
   1400041cc:	mov    rbx,QWORD PTR [rax+0x30]
   1400041d0:	mov    rcx,rbx
   1400041d3:	call   QWORD PTR [rip+0x4237]        # 0x140008410
   1400041d9:	mov    rdx,rdi
   1400041dc:	mov    rcx,r14
   1400041df:	call   rbx
   1400041e1:	mov    DWORD PTR [rbp+0x40],eax
   1400041e4:	test   eax,eax
   1400041e6:	js     0x1400042ff
   1400041ec:	mov    rax,QWORD PTR [rdi+0x30]
   1400041f0:	mov    QWORD PTR [rbp-0x18],rax
   1400041f4:	and    QWORD PTR [rbp-0x10],0x0
   1400041f9:	xor    bl,bl
   1400041fb:	lea    rax,[rbp+0x48]
   1400041ff:	mov    QWORD PTR [rsp+0x20],rax
   140004204:	lea    r9,[rbp-0x18]
   140004208:	mov    r8d,0x1
   14000420e:	or     edx,0xffffffff
   140004211:	lea    ecx,[r8+0x7]
   140004215:	call   QWORD PTR [rip+0x3e05]        # 0x140008020
   14000421b:	mov    DWORD PTR [rbp+0x40],eax
   14000421e:	test   eax,eax
   140004220:	js     0x140004231
   140004222:	cmp    DWORD PTR [rbp+0x48],0x0
   140004226:	je     0x140004231
   140004228:	mov    DWORD PTR [rbp+0x40],0x800704c7
   14000422f:	mov    bl,0x1
   140004231:	xor    esi,esi
   140004233:	mov    QWORD PTR [rbp+0x38],rsi
   140004237:	test   bl,bl
   140004239:	je     0x140004283
   14000423b:	mov    rbx,QWORD PTR [r14]
   14000423e:	lea    rcx,[rbp+0x38]
   140004242:	call   0x140004a70
   140004247:	mov    rsi,rax
   14000424a:	mov    rcx,QWORD PTR [rbx]
   14000424d:	call   QWORD PTR [rip+0x41bd]        # 0x140008410
   140004253:	mov    r8,rsi
   140004256:	lea    rdx,[rip+0x6513]        # 0x14000a770
   14000425d:	mov    rcx,r14
   140004260:	call   QWORD PTR [rbx]
   140004262:	test   eax,eax
   140004264:	js     0x14000427f
   140004266:	mov    rbx,QWORD PTR [rbp+0x38]
   14000426a:	mov    rax,QWORD PTR [rbx]
   14000426d:	mov    rsi,QWORD PTR [rax+0x48]
   140004271:	mov    rcx,rsi
   140004274:	call   QWORD PTR [rip+0x4196]        # 0x140008410
   14000427a:	mov    rcx,rbx
   14000427d:	call   rsi
   14000427f:	mov    rsi,QWORD PTR [rbp+0x38]
   140004283:	cmp    DWORD PTR [rbp+0x40],0x0
   140004287:	jl     0x1400042e0
   140004289:	cmp    DWORD PTR [rdi+0x28],0x1
   14000428d:	je     0x1400042e0
   14000428f:	test   rsi,rsi
   140004292:	jne    0x1400042c3
   140004294:	mov    rbx,QWORD PTR [r14]
   140004297:	lea    rcx,[rbp+0x38]
   14000429b:	call   0x140004a70
   1400042a0:	mov    rsi,rax
   1400042a3:	mov    rcx,QWORD PTR [rbx]
   1400042a6:	call   QWORD PTR [rip+0x4164]        # 0x140008410
   1400042ac:	mov    r8,rsi
   1400042af:	lea    rdx,[rip+0x64ba]        # 0x14000a770
   1400042b6:	mov    rcx,r14
   1400042b9:	call   QWORD PTR [rbx]
   1400042bb:	mov    rsi,QWORD PTR [rbp+0x38]
   1400042bf:	test   eax,eax
   1400042c1:	js     0x1400042e0
   1400042c3:	mov    rax,QWORD PTR [rsi]
   1400042c6:	mov    rbx,QWORD PTR [rax+0x40]
   1400042ca:	mov    rcx,rbx
   1400042cd:	call   QWORD PTR [rip+0x413d]        # 0x140008410
   1400042d3:	lea    rdx,[rbp+0x40]
   1400042d7:	mov    rcx,rsi
   1400042da:	call   rbx
   1400042dc:	mov    rsi,QWORD PTR [rbp+0x38]
   1400042e0:	test   rsi,rsi
   1400042e3:	je     0x1400042ff
   1400042e5:	and    QWORD PTR [rbp+0x38],0x0
   1400042ea:	mov    rax,QWORD PTR [rsi]
   1400042ed:	mov    rbx,QWORD PTR [rax+0x10]
   1400042f1:	mov    rcx,rbx
   1400042f4:	call   QWORD PTR [rip+0x4116]        # 0x140008410
   1400042fa:	mov    rcx,rsi
   1400042fd:	call   rbx
   1400042ff:	mov    esi,DWORD PTR [rbp+0x40]
   140004302:	test   rdi,rdi
   140004305:	je     0x14000431d
   140004307:	mov    rax,QWORD PTR [rdi]
   14000430a:	mov    rbx,QWORD PTR [rax+0x10]
   14000430e:	mov    rcx,rbx
   140004311:	call   QWORD PTR [rip+0x40f9]        # 0x140008410
   140004317:	mov    rcx,rdi
   14000431a:	call   rbx
   14000431c:	nop
   14000431d:	test   r14,r14
   140004320:	je     0x140004337
   140004322:	mov    rcx,QWORD PTR [r14]
   140004325:	mov    rbx,QWORD PTR [rcx+0x10]
   140004329:	mov    rcx,rbx
   14000432c:	call   QWORD PTR [rip+0x40de]        # 0x140008410
   140004332:	mov    rcx,r14
   140004335:	call   rbx
   140004337:	mov    eax,esi
   140004339:	add    rsp,0x58
   14000433d:	pop    r15
   14000433f:	pop    r14
   140004341:	pop    rdi
   140004342:	pop    rsi
   140004343:	pop    rbx
   140004344:	pop    rbp
   140004345:	ret    
   140004346:	int3   
   140004347:	int3   
   140004348:	int3   
   140004349:	int3   
   14000434a:	int3   
   14000434b:	int3   
   14000434c:	mov    r11,rsp
   14000434f:	mov    QWORD PTR [r11+0x10],rbx
   140004353:	mov    QWORD PTR [r11+0x18],rsi
   140004357:	mov    QWORD PTR [r11+0x20],rdi
   14000435b:	push   r14
   14000435d:	sub    rsp,0x20
   140004361:	and    QWORD PTR [r11+0x8],0x0
   140004366:	lea    r14,[rcx+0x18]
   14000436a:	lea    rax,[rip+0x5d7f]        # 0x14000a0f0
   140004371:	mov    rsi,rcx
   140004374:	mov    QWORD PTR [rcx],rax
   140004377:	lea    rdx,[r11+0x8]
   14000437b:	lea    rax,[rip+0x5d8e]        # 0x14000a110
   140004382:	mov    QWORD PTR [rcx+0x8],rax
   140004386:	xor    ecx,ecx
   140004388:	and    QWORD PTR [r14],0x0
   14000438c:	call   QWORD PTR [rip+0x3c96]        # 0x140008028
   140004392:	test   eax,eax
   140004394:	js     0x1400043da
   140004396:	mov    rdi,QWORD PTR [r14]
   140004399:	test   rdi,rdi
   14000439c:	je     0x1400043b7
   14000439e:	and    QWORD PTR [r14],0x0
   1400043a2:	mov    rax,QWORD PTR [rdi]
   1400043a5:	mov    rbx,QWORD PTR [rax+0x10]
   1400043a9:	mov    rcx,rbx
   1400043ac:	call   QWORD PTR [rip+0x405e]        # 0x140008410
   1400043b2:	mov    rcx,rdi
   1400043b5:	call   rbx
   1400043b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043bc:	mov    rax,QWORD PTR [rbx]
   1400043bf:	mov    rdi,QWORD PTR [rax]
   1400043c2:	mov    rcx,rdi
   1400043c5:	call   QWORD PTR [rip+0x4045]        # 0x140008410
   1400043cb:	mov    r8,r14
   1400043ce:	lea    rdx,[rip+0x638b]        # 0x14000a760
   1400043d5:	mov    rcx,rbx
   1400043d8:	call   rdi
   1400043da:	mov    rdi,QWORD PTR [rsp+0x30]
   1400043df:	test   rdi,rdi
   1400043e2:	je     0x1400043ff
   1400043e4:	and    QWORD PTR [rsp+0x30],0x0
   1400043ea:	mov    rax,QWORD PTR [rdi]
   1400043ed:	mov    rbx,QWORD PTR [rax+0x10]
   1400043f1:	mov    rcx,rbx
   1400043f4:	call   QWORD PTR [rip+0x4016]        # 0x140008410
   1400043fa:	mov    rcx,rdi
   1400043fd:	call   rbx
   1400043ff:	mov    rdi,QWORD PTR [rip+0xa36a]        # 0x14000e770
   140004406:	lea    rax,[rip+0x5d4b]        # 0x14000a158
   14000440d:	mov    QWORD PTR [rsi],rax
   140004410:	lea    rax,[rip+0x5d69]        # 0x14000a180
   140004417:	mov    QWORD PTR [rsi+0x8],rax
   14000441b:	mov    DWORD PTR [rsi+0x24],0x1
   140004422:	test   rdi,rdi
   140004425:	je     0x14000443c
   140004427:	mov    rax,QWORD PTR [rdi]
   14000442a:	mov    rbx,QWORD PTR [rax+0x8]
   14000442e:	mov    rcx,rbx
   140004431:	call   QWORD PTR [rip+0x3fd9]        # 0x140008410
   140004437:	mov    rcx,rdi
   14000443a:	call   rbx
   14000443c:	and    DWORD PTR [rsi+0x28],0x0
   140004440:	lea    rax,[rip+0x5d81]        # 0x14000a1c8
   140004447:	and    QWORD PTR [rsi+0x30],0x0
   14000444c:	mov    rbx,QWORD PTR [rsp+0x38]
   140004451:	mov    rdi,QWORD PTR [rsp+0x48]
   140004456:	mov    QWORD PTR [rsi],rax
   140004459:	lea    rax,[rip+0x5d20]        # 0x14000a180
   140004460:	mov    QWORD PTR [rsi+0x8],rax
   140004464:	mov    rax,rsi
   140004467:	mov    rsi,QWORD PTR [rsp+0x40]
   14000446c:	add    rsp,0x20
   140004470:	pop    r14
   140004472:	ret    
   140004473:	int3   
   140004474:	int3   
   140004475:	int3   
   140004476:	int3   
   140004477:	int3   
   140004478:	int3   
   140004479:	int3   
   14000447a:	int3   
   14000447b:	int3   
   14000447c:	int3   
   14000447d:	int3   
   14000447e:	int3   
   14000447f:	int3   
   140004480:	sub    rsp,0x28
   140004484:	mov    DWORD PTR [rcx+0x28],r8d
   140004488:	mov    rcx,QWORD PTR [rcx+0x30]
   14000448c:	call   QWORD PTR [rip+0x3d6e]        # 0x140008200
   140004492:	xor    eax,eax
   140004494:	add    rsp,0x28
   140004498:	ret    
   140004499:	int3   
   14000449a:	int3   
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400044aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400044af:	push   rdi
   1400044b0:	sub    rsp,0x20
   1400044b4:	lea    rax,[rip+0x5d0d]        # 0x14000a1c8
   1400044bb:	mov    rdi,rcx
   1400044be:	mov    QWORD PTR [rcx],rax
   1400044c1:	mov    ebp,edx
   1400044c3:	lea    rax,[rip+0x5cb6]        # 0x14000a180
   1400044ca:	mov    QWORD PTR [rcx+0x8],rax
   1400044ce:	mov    rcx,QWORD PTR [rcx+0x30]
   1400044d2:	call   QWORD PTR [rip+0x3bc8]        # 0x1400080a0
   1400044d8:	mov    DWORD PTR [rdi+0x24],0xc0000001
   1400044df:	mov    rsi,QWORD PTR [rdi+0x18]
   1400044e3:	test   rsi,rsi
   1400044e6:	je     0x140004502
   1400044e8:	and    QWORD PTR [rdi+0x18],0x0
   1400044ed:	mov    rax,QWORD PTR [rsi]
   1400044f0:	mov    rbx,QWORD PTR [rax+0x10]
   1400044f4:	mov    rcx,rbx
   1400044f7:	call   QWORD PTR [rip+0x3f13]        # 0x140008410
   1400044fd:	mov    rcx,rsi
   140004500:	call   rbx
   140004502:	test   bpl,0x1
   140004506:	je     0x140004511
   140004508:	mov    rcx,rdi
   14000450b:	call   QWORD PTR [rip+0x3e47]        # 0x140008358
   140004511:	mov    rbx,QWORD PTR [rsp+0x30]
   140004516:	mov    rax,rdi
   140004519:	mov    rbp,QWORD PTR [rsp+0x38]
   14000451e:	mov    rsi,QWORD PTR [rsp+0x40]
   140004523:	add    rsp,0x20
   140004527:	pop    rdi
   140004528:	ret    
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	mov    QWORD PTR [rsp+0x8],rbx
   140004535:	mov    QWORD PTR [rsp+0x10],rsi
   14000453a:	push   rdi
   14000453b:	sub    rsp,0x20
   14000453f:	xor    edi,edi
   140004541:	mov    rsi,rcx
   140004544:	mov    QWORD PTR [r8],rdi
   140004547:	cmp    DWORD PTR [rdx],edi
   140004549:	jne    0x140004589
   14000454b:	mov    eax,DWORD PTR [rip+0x6203]        # 0x14000a754
   140004551:	cmp    DWORD PTR [rdx+0x4],eax
   140004554:	jne    0x140004589
   140004556:	mov    eax,DWORD PTR [rip+0x61fc]        # 0x14000a758
   14000455c:	cmp    DWORD PTR [rdx+0x8],eax
   14000455f:	jne    0x140004589
   140004561:	mov    eax,DWORD PTR [rip+0x61f5]        # 0x14000a75c
   140004567:	cmp    DWORD PTR [rdx+0xc],eax
   14000456a:	jne    0x140004589
   14000456c:	mov    QWORD PTR [r8],rcx
   14000456f:	mov    rax,QWORD PTR [rcx]
   140004572:	mov    rbx,QWORD PTR [rax+0x8]
   140004576:	mov    rcx,rbx
   140004579:	call   QWORD PTR [rip+0x3e91]        # 0x140008410
   14000457f:	mov    rcx,rsi
   140004582:	call   rbx
   140004584:	jmp    0x14000463b
   140004589:	cmp    DWORD PTR [rdx],0xc1d3d1a2
   14000458f:	jne    0x1400045b9
   140004591:	mov    eax,DWORD PTR [rip+0x61ad]        # 0x14000a744
   140004597:	cmp    DWORD PTR [rdx+0x4],eax
   14000459a:	jne    0x1400045b9
   14000459c:	mov    eax,DWORD PTR [rip+0x61a6]        # 0x14000a748
   1400045a2:	cmp    DWORD PTR [rdx+0x8],eax
   1400045a5:	jne    0x1400045b9
   1400045a7:	mov    eax,DWORD PTR [rip+0x619f]        # 0x14000a74c
   1400045ad:	cmp    DWORD PTR [rdx+0xc],eax
   1400045b0:	jne    0x1400045b9
   1400045b2:	mov    QWORD PTR [r8],rcx
   1400045b5:	mov    esi,edi
   1400045b7:	jmp    0x140004621
   1400045b9:	add    rsi,0x8
   1400045bd:	cmp    DWORD PTR [rdx],0x94ea2b94
   1400045c3:	jne    0x1400045eb
   1400045c5:	mov    eax,DWORD PTR [rip+0x6169]        # 0x14000a734
   1400045cb:	cmp    DWORD PTR [rdx+0x4],eax
   1400045ce:	jne    0x1400045eb
   1400045d0:	mov    eax,DWORD PTR [rip+0x6162]        # 0x14000a738
   1400045d6:	cmp    DWORD PTR [rdx+0x8],eax
   1400045d9:	jne    0x1400045eb
   1400045db:	mov    eax,DWORD PTR [rip+0x615b]        # 0x14000a73c
   1400045e1:	cmp    DWORD PTR [rdx+0xc],eax
   1400045e4:	jne    0x1400045eb
   1400045e6:	mov    QWORD PTR [r8],rsi
   1400045e9:	jmp    0x1400045b5
   1400045eb:	cmp    DWORD PTR [rdx],0x3
   1400045ee:	jne    0x140004618
   1400045f0:	mov    eax,DWORD PTR [rip+0x616e]        # 0x14000a764
   1400045f6:	cmp    DWORD PTR [rdx+0x4],eax
   1400045f9:	jne    0x140004618
   1400045fb:	mov    eax,DWORD PTR [rip+0x6167]        # 0x14000a768
   140004601:	cmp    DWORD PTR [rdx+0x8],eax
   140004604:	jne    0x140004618
   140004606:	mov    eax,DWORD PTR [rip+0x6160]        # 0x14000a76c
   14000460c:	cmp    DWORD PTR [rdx+0xc],eax
   14000460f:	jne    0x140004618
   140004611:	mov    QWORD PTR [r8],rsi
   140004614:	mov    esi,edi
   140004616:	jmp    0x14000461d
   140004618:	mov    esi,0x80004002
   14000461d:	test   esi,esi
   14000461f:	js     0x140004639
   140004621:	mov    rdi,QWORD PTR [r8]
   140004624:	mov    rax,QWORD PTR [rdi]
   140004627:	mov    rbx,QWORD PTR [rax+0x8]
   14000462b:	mov    rcx,rbx
   14000462e:	call   QWORD PTR [rip+0x3ddc]        # 0x140008410
   140004634:	mov    rcx,rdi
   140004637:	call   rbx
   140004639:	mov    edi,esi
   14000463b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004640:	mov    eax,edi
   140004642:	mov    rsi,QWORD PTR [rsp+0x38]
   140004647:	add    rsp,0x20
   14000464b:	pop    rdi
   14000464c:	ret    
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	int3   
   140004651:	int3   
   140004652:	int3   
   140004653:	int3   
   140004654:	int3   
   140004655:	int3   
   140004656:	int3   
   140004657:	int3   
   140004658:	int3   
   140004659:	int3   
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	mov    eax,0x1
   140004665:	lock xadd DWORD PTR [rcx+0x24],eax
   14000466a:	inc    eax
   14000466c:	ret    
   14000466d:	int3   
   14000466e:	int3   
   14000466f:	int3   
   140004670:	int3   
   140004671:	int3   
   140004672:	int3   
   140004673:	int3   
   140004674:	int3   
   140004675:	int3   
   140004676:	int3   
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    QWORD PTR [rsp+0x8],rbx
   140004685:	mov    QWORD PTR [rsp+0x10],rsi
   14000468a:	push   rdi
   14000468b:	sub    rsp,0x20
   14000468f:	mov    rsi,rcx
   140004692:	or     edi,0xffffffff
   140004695:	lock xadd DWORD PTR [rcx+0x24],edi
   14000469a:	sub    edi,0x1
   14000469d:	jne    0x1400046dd
   14000469f:	test   rcx,rcx
   1400046a2:	je     0x1400046bc
   1400046a4:	mov    rax,QWORD PTR [rcx]
   1400046a7:	mov    rbx,QWORD PTR [rax+0x20]
   1400046ab:	mov    rcx,rbx
   1400046ae:	call   QWORD PTR [rip+0x3d5c]        # 0x140008410
   1400046b4:	lea    edx,[rdi+0x1]
   1400046b7:	mov    rcx,rsi
   1400046ba:	call   rbx
   1400046bc:	mov    rsi,QWORD PTR [rip+0xa0ad]        # 0x14000e770
   1400046c3:	test   rsi,rsi
   1400046c6:	je     0x1400046dd
   1400046c8:	mov    rdx,QWORD PTR [rsi]
   1400046cb:	mov    rbx,QWORD PTR [rdx+0x10]
   1400046cf:	mov    rcx,rbx
   1400046d2:	call   QWORD PTR [rip+0x3d38]        # 0x140008410
   1400046d8:	mov    rcx,rsi
   1400046db:	call   rbx
   1400046dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046e2:	mov    eax,edi
   1400046e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400046e9:	add    rsp,0x20
   1400046ed:	pop    rdi
   1400046ee:	ret    
   1400046ef:	int3   
   1400046f0:	int3   
   1400046f1:	int3   
   1400046f2:	int3   
   1400046f3:	int3   
   1400046f4:	int3   
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	mov    QWORD PTR [rsp+0x8],rbx
   140004705:	mov    QWORD PTR [rsp+0x10],rbp
   14000470a:	mov    QWORD PTR [rsp+0x18],rsi
   14000470f:	push   rdi
   140004710:	sub    rsp,0x20
   140004714:	mov    DWORD PTR [rcx+0x24],0xc0000001
   14000471b:	mov    ebp,edx
   14000471d:	mov    rsi,QWORD PTR [rcx+0x18]
   140004721:	mov    rdi,rcx
   140004724:	test   rsi,rsi
   140004727:	je     0x140004743
   140004729:	and    QWORD PTR [rcx+0x18],0x0
   14000472e:	mov    rax,QWORD PTR [rsi]
   140004731:	mov    rbx,QWORD PTR [rax+0x10]
   140004735:	mov    rcx,rbx
   140004738:	call   QWORD PTR [rip+0x3cd2]        # 0x140008410
   14000473e:	mov    rcx,rsi
   140004741:	call   rbx
   140004743:	test   bpl,0x1
   140004747:	je     0x140004752
   140004749:	mov    rcx,rdi
   14000474c:	call   QWORD PTR [rip+0x3c06]        # 0x140008358
   140004752:	mov    rbx,QWORD PTR [rsp+0x30]
   140004757:	mov    rax,rdi
   14000475a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000475f:	mov    rsi,QWORD PTR [rsp+0x40]
   140004764:	add    rsp,0x20
   140004768:	pop    rdi
   140004769:	ret    
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	sub    rcx,0x8
   140004774:	jmp    0x140004530
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	sub    rcx,0x8
   140004784:	jmp    0x140004680
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	sub    rcx,0x8
   140004794:	jmp    0x140004660
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    rax,rsp
   1400047a3:	mov    QWORD PTR [rax+0x8],rbx
   1400047a7:	mov    QWORD PTR [rax+0x10],rbp
   1400047ab:	mov    QWORD PTR [rax+0x18],rsi
   1400047af:	mov    QWORD PTR [rax+0x20],rdi
   1400047b3:	push   r14
   1400047b5:	sub    rsp,0x40
   1400047b9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400047bd:	mov    esi,r9d
   1400047c0:	mov    rbp,r8
   1400047c3:	mov    r14,rdx
   1400047c6:	test   rdi,rdi
   1400047c9:	je     0x14000480a
   1400047cb:	mov    rax,QWORD PTR [rdi]
   1400047ce:	mov    rbx,QWORD PTR [rax+0x18]
   1400047d2:	mov    rcx,rbx
   1400047d5:	call   QWORD PTR [rip+0x3c35]        # 0x140008410
   1400047db:	mov    rax,QWORD PTR [rsp+0x80]
   1400047e3:	mov    r9d,esi
   1400047e6:	mov    QWORD PTR [rsp+0x30],rax
   1400047eb:	mov    r8,rbp
   1400047ee:	mov    eax,DWORD PTR [rsp+0x78]
   1400047f2:	mov    rdx,r14
   1400047f5:	mov    DWORD PTR [rsp+0x28],eax
   1400047f9:	mov    rcx,rdi
   1400047fc:	mov    rax,QWORD PTR [rsp+0x70]
   140004801:	mov    QWORD PTR [rsp+0x20],rax
   140004806:	call   rbx
   140004808:	jmp    0x14000480f
   14000480a:	mov    eax,0x8007000e
   14000480f:	mov    rbx,QWORD PTR [rsp+0x50]
   140004814:	mov    rbp,QWORD PTR [rsp+0x58]
   140004819:	mov    rsi,QWORD PTR [rsp+0x60]
   14000481e:	mov    rdi,QWORD PTR [rsp+0x68]
   140004823:	add    rsp,0x40
   140004827:	pop    r14
   140004829:	ret    
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    rax,rsp
   140004833:	mov    QWORD PTR [rax+0x8],rbx
   140004837:	mov    QWORD PTR [rax+0x10],rbp
   14000483b:	mov    QWORD PTR [rax+0x18],rsi
   14000483f:	mov    QWORD PTR [rax+0x20],rdi
   140004843:	push   r14
   140004845:	sub    rsp,0x40
   140004849:	mov    rdi,QWORD PTR [rcx+0x10]
   14000484d:	mov    esi,r9d
   140004850:	mov    rbp,r8
   140004853:	mov    r14,rdx
   140004856:	test   rdi,rdi
   140004859:	je     0x14000489a
   14000485b:	mov    rax,QWORD PTR [rdi]
   14000485e:	mov    rbx,QWORD PTR [rax+0x20]
   140004862:	mov    rcx,rbx
   140004865:	call   QWORD PTR [rip+0x3ba5]        # 0x140008410
   14000486b:	mov    rax,QWORD PTR [rsp+0x80]
   140004873:	mov    r9d,esi
   140004876:	mov    QWORD PTR [rsp+0x30],rax
   14000487b:	mov    r8,rbp
   14000487e:	mov    eax,DWORD PTR [rsp+0x78]
   140004882:	mov    rdx,r14
   140004885:	mov    DWORD PTR [rsp+0x28],eax
   140004889:	mov    rcx,rdi
   14000488c:	mov    rax,QWORD PTR [rsp+0x70]
   140004891:	mov    QWORD PTR [rsp+0x20],rax
   140004896:	call   rbx
   140004898:	jmp    0x14000489f
   14000489a:	mov    eax,0x8007000e
   14000489f:	mov    rbx,QWORD PTR [rsp+0x50]
   1400048a4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400048a9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400048ae:	mov    rdi,QWORD PTR [rsp+0x68]
   1400048b3:	add    rsp,0x40
   1400048b7:	pop    r14
   1400048b9:	ret    
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    rax,rsp
   1400048c3:	mov    QWORD PTR [rax+0x8],rbx
   1400048c7:	mov    QWORD PTR [rax+0x10],rbp
   1400048cb:	mov    QWORD PTR [rax+0x18],rsi
   1400048cf:	mov    QWORD PTR [rax+0x20],rdi
   1400048d3:	push   r14
   1400048d5:	sub    rsp,0x40
   1400048d9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400048dd:	mov    rsi,r9
   1400048e0:	mov    rbp,r8
   1400048e3:	mov    r14,rdx
   1400048e6:	test   rdi,rdi
   1400048e9:	je     0x140004928
   1400048eb:	mov    rax,QWORD PTR [rdi]
   1400048ee:	mov    rbx,QWORD PTR [rax+0x28]
   1400048f2:	mov    rcx,rbx
   1400048f5:	call   QWORD PTR [rip+0x3b15]        # 0x140008410
   1400048fb:	mov    eax,DWORD PTR [rsp+0x80]
   140004902:	mov    r9,rsi
   140004905:	mov    DWORD PTR [rsp+0x30],eax
   140004909:	mov    r8,rbp
   14000490c:	mov    rax,QWORD PTR [rsp+0x78]
   140004911:	mov    rdx,r14
   140004914:	mov    QWORD PTR [rsp+0x28],rax
   140004919:	mov    rcx,rdi
   14000491c:	mov    eax,DWORD PTR [rsp+0x70]
   140004920:	mov    DWORD PTR [rsp+0x20],eax
   140004924:	call   rbx
   140004926:	jmp    0x14000492d
   140004928:	mov    eax,0x8007000e
   14000492d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004932:	mov    rbp,QWORD PTR [rsp+0x58]
   140004937:	mov    rsi,QWORD PTR [rsp+0x60]
   14000493c:	mov    rdi,QWORD PTR [rsp+0x68]
   140004941:	add    rsp,0x40
   140004945:	pop    r14
   140004947:	ret    
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    rax,rsp
   140004953:	mov    QWORD PTR [rax+0x8],rbx
   140004957:	mov    QWORD PTR [rax+0x10],rbp
   14000495b:	mov    QWORD PTR [rax+0x18],rsi
   14000495f:	mov    QWORD PTR [rax+0x20],rdi
   140004963:	push   r14
   140004965:	sub    rsp,0x20
   140004969:	mov    rdi,QWORD PTR [rcx+0x10]
   14000496d:	mov    rsi,r9
   140004970:	mov    rbp,r8
   140004973:	mov    r14,rdx
   140004976:	test   rdi,rdi
   140004979:	je     0x14000499b
   14000497b:	mov    rax,QWORD PTR [rdi]
   14000497e:	mov    rbx,QWORD PTR [rax+0x30]
   140004982:	mov    rcx,rbx
   140004985:	call   QWORD PTR [rip+0x3a85]        # 0x140008410
   14000498b:	mov    r9,rsi
   14000498e:	mov    r8,rbp
   140004991:	mov    rdx,r14
   140004994:	mov    rcx,rdi
   140004997:	call   rbx
   140004999:	jmp    0x1400049a0
   14000499b:	mov    eax,0x8007000e
   1400049a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049a5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400049aa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400049af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400049b4:	add    rsp,0x20
   1400049b8:	pop    r14
   1400049ba:	ret    
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	int3   
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049da:	push   rdi
   1400049db:	sub    rsp,0x20
   1400049df:	mov    rdi,QWORD PTR [rcx+0x10]
   1400049e3:	mov    rsi,rdx
   1400049e6:	test   rdi,rdi
   1400049e9:	je     0x140004a05
   1400049eb:	mov    rax,QWORD PTR [rdi]
   1400049ee:	mov    rbx,QWORD PTR [rax+0x38]
   1400049f2:	mov    rcx,rbx
   1400049f5:	call   QWORD PTR [rip+0x3a15]        # 0x140008410
   1400049fb:	mov    rdx,rsi
   1400049fe:	mov    rcx,rdi
   140004a01:	call   rbx
   140004a03:	jmp    0x140004a0a
   140004a05:	mov    eax,0x8007000e
   140004a0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a14:	add    rsp,0x20
   140004a18:	pop    rdi
   140004a19:	ret    
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    QWORD PTR [rsp+0x8],rbx
   140004a25:	mov    QWORD PTR [rsp+0x10],rsi
   140004a2a:	push   rdi
   140004a2b:	sub    rsp,0x20
   140004a2f:	mov    rdi,QWORD PTR [rcx+0x10]
   140004a33:	mov    esi,edx
   140004a35:	test   rdi,rdi
   140004a38:	je     0x140004a53
   140004a3a:	mov    rax,QWORD PTR [rdi]
   140004a3d:	mov    rbx,QWORD PTR [rax+0x40]
   140004a41:	mov    rcx,rbx
   140004a44:	call   QWORD PTR [rip+0x39c6]        # 0x140008410
   140004a4a:	mov    edx,esi
   140004a4c:	mov    rcx,rdi
   140004a4f:	call   rbx
   140004a51:	jmp    0x140004a58
   140004a53:	mov    eax,0x8007000e
   140004a58:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a5d:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a62:	add    rsp,0x20
   140004a66:	pop    rdi
   140004a67:	ret    
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	mov    QWORD PTR [rsp+0x8],rbx
   140004a75:	mov    QWORD PTR [rsp+0x10],rsi
   140004a7a:	push   rdi
   140004a7b:	sub    rsp,0x20
   140004a7f:	mov    rsi,QWORD PTR [rcx]
   140004a82:	mov    rdi,rcx
   140004a85:	test   rsi,rsi
   140004a88:	je     0x140004aa3
   140004a8a:	and    QWORD PTR [rcx],0x0
   140004a8e:	mov    rdx,QWORD PTR [rsi]
   140004a91:	mov    rbx,QWORD PTR [rdx+0x10]
   140004a95:	mov    rcx,rbx
   140004a98:	call   QWORD PTR [rip+0x3972]        # 0x140008410
   140004a9e:	mov    rcx,rsi
   140004aa1:	call   rbx
   140004aa3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004aa8:	mov    rax,rdi
   140004aab:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ab0:	add    rsp,0x20
   140004ab4:	pop    rdi
   140004ab5:	ret    
   140004ab6:	int3   
   140004ab7:	int3   
   140004ab8:	int3   
   140004ab9:	int3   
   140004aba:	int3   
   140004abb:	int3   
   140004abc:	mov    QWORD PTR [rsp+0x10],rdx
   140004ac1:	mov    QWORD PTR [rsp+0x18],r8
   140004ac6:	mov    QWORD PTR [rsp+0x20],r9
   140004acb:	push   rbx
   140004acc:	sub    rsp,0x50
   140004ad0:	xor    ebx,ebx
   140004ad2:	test   rdx,rdx
   140004ad5:	jne    0x140004ade
   140004ad7:	mov    ebx,0x80070057
   140004adc:	jmp    0x140004b26
   140004ade:	test   rcx,rcx
   140004ae1:	jne    0x140004aea
   140004ae3:	mov    ebx,0x80004003
   140004ae8:	jmp    0x140004b26
   140004aea:	lea    rax,[rsp+0x70]
   140004aef:	xor    r9d,r9d
   140004af2:	mov    QWORD PTR [rsp+0x30],rax
   140004af7:	xor    r8d,r8d
   140004afa:	mov    DWORD PTR [rsp+0x28],ebx
   140004afe:	mov    QWORD PTR [rsp+0x20],rcx
   140004b03:	mov    ecx,0x2500
   140004b08:	call   QWORD PTR [rip+0x3602]        # 0x140008110
   140004b0e:	test   eax,eax
   140004b10:	jne    0x140004b26
   140004b12:	call   QWORD PTR [rip+0x3550]        # 0x140008068
   140004b18:	movzx  ebx,ax
   140004b1b:	or     ebx,0x80070000
   140004b21:	test   eax,eax
   140004b23:	cmovle ebx,eax
   140004b26:	mov    eax,ebx
   140004b28:	add    rsp,0x50
   140004b2c:	pop    rbx
   140004b2d:	ret    
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	int3   
   140004b31:	int3   
   140004b32:	int3   
   140004b33:	int3   
   140004b34:	mov    QWORD PTR [rsp+0x8],rbx
   140004b39:	mov    QWORD PTR [rsp+0x10],rsi
   140004b3e:	push   rbp
   140004b3f:	push   rdi
   140004b40:	push   r12
   140004b42:	push   r14
   140004b44:	push   r15
   140004b46:	lea    rbp,[rsp-0x780]
   140004b4e:	sub    rsp,0x880
   140004b55:	mov    rax,QWORD PTR [rip+0x94ac]        # 0x14000e008
   140004b5c:	xor    rax,rsp
   140004b5f:	mov    QWORD PTR [rbp+0x770],rax
   140004b66:	mov    r14,r8
   140004b69:	lea    rcx,[rsp+0x32]
   140004b6e:	mov    edi,0x206
   140004b73:	xor    r12d,r12d
   140004b76:	mov    r8d,edi
   140004b79:	mov    WORD PTR [rsp+0x30],r12w
   140004b7f:	xor    edx,edx
   140004b81:	mov    r15,r9
   140004b84:	call   0x140006a26
   140004b89:	mov    r8d,edi
   140004b8c:	mov    WORD PTR [rbp+0x350],r12w
   140004b94:	xor    edx,edx
   140004b96:	lea    rcx,[rbp+0x352]
   140004b9d:	call   0x140006a26
   140004ba2:	lea    rax,[rbp+0x140]
   140004ba9:	test   rax,rax
   140004bac:	je     0x140004bb6
   140004bae:	mov    WORD PTR [rbp+0x140],r12w
   140004bb6:	lea    rdx,[rbp+0x350]
   140004bbd:	call   0x14000548c
   140004bc2:	mov    ebx,eax
   140004bc4:	test   eax,eax
   140004bc6:	js     0x140004c98
   140004bcc:	mov    r8,rdi
   140004bcf:	mov    WORD PTR [rbp+0x560],r12w
   140004bd7:	xor    edx,edx
   140004bd9:	lea    rcx,[rbp+0x562]
   140004be0:	call   0x140006a26
   140004be5:	lea    rax,[rsp+0x30]
   140004bea:	test   rax,rax
   140004bed:	jne    0x140004bf9
   140004bef:	mov    ebx,0x80004003
   140004bf4:	jmp    0x140004c98
   140004bf9:	lea    r9,[rbp+0x560]
   140004c00:	xor    r8d,r8d
   140004c03:	lea    rdx,[rbp+0x350]
   140004c0a:	lea    rcx,[rsp+0x30]
   140004c0f:	call   0x1400055c4
   140004c14:	mov    ebx,eax
   140004c16:	test   eax,eax
   140004c18:	js     0x140004c98
   140004c1a:	lea    rcx,[rsp+0x30]
   140004c1f:	call   QWORD PTR [rip+0x35bb]        # 0x1400081e0
   140004c25:	test   eax,eax
   140004c27:	jne    0x140004c39
   140004c29:	lea    rcx,[rsp+0x30]
   140004c2e:	call   0x140005744
   140004c33:	mov    ebx,eax
   140004c35:	test   eax,eax
   140004c37:	js     0x140004c98
   140004c39:	lea    rax,[rbp+0x140]
   140004c40:	test   rax,rax
   140004c43:	je     0x140004c98
   140004c45:	lea    r8,[rsp+0x30]
   140004c4a:	mov    edx,0x104
   140004c4f:	lea    rax,[rbp+0x140]
   140004c56:	mov    ebx,r12d
   140004c59:	sub    r8,rax
   140004c5c:	lea    rcx,[rbp+0x140]
   140004c63:	lea    rax,[rdx+0x7ffffefa]
   140004c6a:	test   rax,rax
   140004c6d:	je     0x140004c86
   140004c6f:	movzx  eax,WORD PTR [r8+rcx*1]
   140004c74:	test   ax,ax
   140004c77:	je     0x140004c86
   140004c79:	mov    WORD PTR [rcx],ax
   140004c7c:	add    rcx,0x2
   140004c80:	sub    rdx,0x1
   140004c84:	jne    0x140004c63
   140004c86:	test   rdx,rdx
   140004c89:	jne    0x140004c94
   140004c8b:	sub    rcx,0x2
   140004c8f:	mov    ebx,0x8007007a
   140004c94:	mov    WORD PTR [rcx],r12w
   140004c98:	test   ebx,ebx
   140004c9a:	js     0x140004d95
   140004ca0:	mov    edx,0xcb20
   140004ca5:	mov    ecx,0x40
   140004caa:	call   QWORD PTR [rip+0x3408]        # 0x1400080b8
   140004cb0:	mov    rdi,rax
   140004cb3:	test   rax,rax
   140004cb6:	jne    0x140004cc2
   140004cb8:	mov    ebx,0x8007000e
   140004cbd:	jmp    0x140004d95
   140004cc2:	mov    eax,r12d
   140004cc5:	imul   rcx,rax,0x208
   140004ccc:	lea    esi,[rax+0x1]
   140004ccf:	mov    edx,0x104
   140004cd4:	lea    rax,[rip+0x5545]        # 0x14000a220
   140004cdb:	mov    DWORD PTR [rsp+0x28],esi
   140004cdf:	add    rcx,rdi
   140004ce2:	mov    QWORD PTR [rsp+0x20],rax
   140004ce7:	lea    r9,[rbp+0x140]
   140004cee:	lea    r8,[rip+0x5c5b]        # 0x14000a950
   140004cf5:	call   0x1400050c4
   140004cfa:	mov    ebx,eax
   140004cfc:	test   eax,eax
   140004cfe:	js     0x140004d8c
   140004d04:	mov    eax,esi
   140004d06:	cmp    esi,0x64
   140004d09:	jb     0x140004cc5
   140004d0b:	lea    rbx,[rdi+0xc918]
   140004d12:	mov    rcx,rbx
   140004d15:	call   QWORD PTR [rip+0x3365]        # 0x140008080
   140004d1b:	mov    esi,0x63
   140004d20:	lea    rcx,[rbx-0x208]
   140004d27:	mov    rdx,rbx
   140004d2a:	call   QWORD PTR [rip+0x3398]        # 0x1400080c8
   140004d30:	sub    rbx,0x208
   140004d37:	add    esi,0xffffffff
   140004d3a:	jne    0x140004d20
   140004d3c:	mov    rcx,rdi
   140004d3f:	call   QWORD PTR [rip+0x333b]        # 0x140008080
   140004d45:	mov    rdx,QWORD PTR [r15]
   140004d48:	mov    r8,rdi
   140004d4b:	mov    rcx,r14
   140004d4e:	call   0x140005048
   140004d53:	mov    ebx,eax
   140004d55:	test   eax,eax
   140004d57:	js     0x140004d8c
   140004d59:	test   r14,r14
   140004d5c:	je     0x140004d80
   140004d5e:	mov    ecx,0x7fffffff
   140004d63:	mov    ebx,r12d
   140004d66:	mov    eax,ecx
   140004d68:	cmp    WORD PTR [r14],r12w
   140004d6c:	je     0x140004d78
   140004d6e:	add    r14,0x2
   140004d72:	sub    rax,0x1
   140004d76:	jne    0x140004d68
   140004d78:	test   rax,rax
   140004d7b:	jne    0x140004dc2
   140004d7d:	mov    QWORD PTR [r15],r12
   140004d80:	mov    ebx,0x80070057
   140004d85:	test   ebx,ebx
   140004d87:	jns    0x140004d8c
   140004d89:	mov    QWORD PTR [r15],r12
   140004d8c:	mov    rcx,rdi
   140004d8f:	call   QWORD PTR [rip+0x331b]        # 0x1400080b0
   140004d95:	mov    eax,ebx
   140004d97:	mov    rcx,QWORD PTR [rbp+0x770]
   140004d9e:	xor    rcx,rsp
   140004da1:	call   0x140005fe0
   140004da6:	lea    r11,[rsp+0x880]
   140004dae:	mov    rbx,QWORD PTR [r11+0x30]
   140004db2:	mov    rsi,QWORD PTR [r11+0x38]
   140004db6:	mov    rsp,r11
   140004db9:	pop    r15
   140004dbb:	pop    r14
   140004dbd:	pop    r12
   140004dbf:	pop    rdi
   140004dc0:	pop    rbp
   140004dc1:	ret    
   140004dc2:	sub    rcx,rax
   140004dc5:	mov    QWORD PTR [r15],rcx
   140004dc8:	jmp    0x140004d85
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    rax,rsp
   140004dd3:	mov    QWORD PTR [rax+0x8],rbx
   140004dd7:	mov    QWORD PTR [rax+0x10],rsi
   140004ddb:	mov    QWORD PTR [rax+0x18],rdi
   140004ddf:	mov    QWORD PTR [rax+0x20],r14
   140004de3:	push   rbp
   140004de4:	lea    rbp,[rax-0x178]
   140004deb:	sub    rsp,0x270
   140004df2:	mov    rax,QWORD PTR [rip+0x920f]        # 0x14000e008
   140004df9:	xor    rax,rsp
   140004dfc:	mov    QWORD PTR [rbp+0x160],rax
   140004e03:	mov    rbx,rdx
   140004e06:	lea    rcx,[rsp+0x52]
   140004e0b:	xor    r14d,r14d
   140004e0e:	xor    edx,edx
   140004e10:	mov    r8d,0x206
   140004e16:	mov    WORD PTR [rsp+0x50],r14w
   140004e1c:	call   0x140006a26
   140004e21:	movaps xmm0,XMMWORD PTR [rbx]
   140004e24:	lea    r9,[rsp+0x48]
   140004e29:	lea    r8,[rsp+0x50]
   140004e2e:	mov    QWORD PTR [rsp+0x48],0x104
   140004e37:	movdqu XMMWORD PTR [rip+0x99b9],xmm0        # 0x14000e7f8
   140004e3f:	mov    QWORD PTR [rsp+0x40],r14
   140004e44:	mov    edi,r14d
   140004e47:	call   0x140004b34
   140004e4c:	mov    ebx,eax
   140004e4e:	test   eax,eax
   140004e50:	js     0x140004e77
   140004e52:	mov    rbx,QWORD PTR [rsp+0x48]
   140004e57:	lea    ecx,[r14+0x40]
   140004e5b:	lea    esi,[rbx*2+0x9a]
   140004e62:	mov    edx,esi
   140004e64:	call   QWORD PTR [rip+0x324e]        # 0x1400080b8
   140004e6a:	mov    rdi,rax
   140004e6d:	test   rax,rax
   140004e70:	jne    0x140004ed1
   140004e72:	mov    ebx,0x8007000e
   140004e77:	mov    r10,QWORD PTR [rsp+0x40]
   140004e7c:	test   r10,r10
   140004e7f:	je     0x140004e95
   140004e81:	mov    r9d,0x1
   140004e87:	mov    r8,rdi
   140004e8a:	xor    edx,edx
   140004e8c:	mov    rcx,r10
   140004e8f:	call   QWORD PTR [rip+0x33eb]        # 0x140008280
   140004e95:	test   rdi,rdi
   140004e98:	je     0x140004ea3
   140004e9a:	mov    rcx,rdi
   140004e9d:	call   QWORD PTR [rip+0x320d]        # 0x1400080b0
   140004ea3:	mov    eax,ebx
   140004ea5:	mov    rcx,QWORD PTR [rbp+0x160]
   140004eac:	xor    rcx,rsp
   140004eaf:	call   0x140005fe0
   140004eb4:	lea    r11,[rsp+0x270]
   140004ebc:	mov    rbx,QWORD PTR [r11+0x10]
   140004ec0:	mov    rsi,QWORD PTR [r11+0x18]
   140004ec4:	mov    rdi,QWORD PTR [r11+0x20]
   140004ec8:	mov    r14,QWORD PTR [r11+0x28]
   140004ecc:	mov    rsp,r11
   140004ecf:	pop    rbp
   140004ed0:	ret    
   140004ed1:	lea    rdx,[rbx+0x1]
   140004ed5:	mov    DWORD PTR [rax],esi
   140004ed7:	lea    rcx,[rax+0x98]
   140004ede:	mov    DWORD PTR [rax+0x28],0x2
   140004ee5:	lea    r8,[rsp+0x50]
   140004eea:	mov    DWORD PTR [rax+0x2c],0x20000
   140004ef1:	mov    DWORD PTR [rax+0x40],0x10022802
   140004ef8:	mov    DWORD PTR [rax+0x3c],0x4b
   140004eff:	mov    DWORD PTR [rax+0x74],0x78
   140004f06:	mov    DWORD PTR [rax+0x70],0x98
   140004f0d:	call   0x140005048
   140004f12:	mov    ebx,eax
   140004f14:	test   eax,eax
   140004f16:	js     0x140004e77
   140004f1c:	mov    r8,rdi
   140004f1f:	lea    rdx,[rip+0x52fa]        # 0x14000a220
   140004f26:	lea    rcx,[rsp+0x40]
   140004f2b:	call   QWORD PTR [rip+0x3347]        # 0x140008278
   140004f31:	cmp    eax,0xb7
   140004f36:	jne    0x140004f60
   140004f38:	mov    r8,rdi
   140004f3b:	lea    rdx,[rip+0x52de]        # 0x14000a220
   140004f42:	xor    ecx,ecx
   140004f44:	call   QWORD PTR [rip+0x334e]        # 0x140008298
   140004f4a:	test   eax,eax
   140004f4c:	jne    0x140004f59
   140004f4e:	mov    r10,QWORD PTR [rdi+0x8]
   140004f52:	mov    QWORD PTR [rsp+0x40],r10
   140004f57:	jmp    0x140004f65
   140004f59:	mov    r10,QWORD PTR [rsp+0x40]
   140004f5e:	jmp    0x140004f69
   140004f60:	mov    r10,QWORD PTR [rsp+0x40]
   140004f65:	test   eax,eax
   140004f67:	je     0x140004f7c
   140004f69:	movzx  ebx,ax
   140004f6c:	or     ebx,0x80070000
   140004f72:	test   eax,eax
   140004f74:	cmovle ebx,eax
   140004f77:	jmp    0x140004e7c
   140004f7c:	mov    rcx,QWORD PTR [rip+0x9865]        # 0x14000e7e8
   140004f83:	lea    rdx,[rip+0x986e]        # 0x14000e7f8
   140004f8a:	mov    QWORD PTR [rsp+0x38],r14
   140004f8f:	test   r10,r10
   140004f92:	mov    DWORD PTR [rsp+0x30],r14d
   140004f97:	mov    r9b,0x5
   140004f9a:	cmovne rcx,r10
   140004f9e:	mov    QWORD PTR [rsp+0x28],r14
   140004fa3:	mov    r8d,0x1
   140004fa9:	mov    QWORD PTR [rsp+0x20],r14
   140004fae:	call   QWORD PTR [rip+0x32d4]        # 0x140008288
   140004fb4:	movzx  ebx,ax
   140004fb7:	or     ebx,0x80070000
   140004fbd:	test   eax,eax
   140004fbf:	cmovle ebx,eax
   140004fc2:	test   ebx,ebx
   140004fc4:	js     0x140004e77
   140004fca:	mov    rax,QWORD PTR [rsp+0x40]
   140004fcf:	mov    r10,r14
   140004fd2:	mov    QWORD PTR [rip+0x9817],rdi        # 0x14000e7f0
   140004fd9:	mov    rdi,r14
   140004fdc:	mov    QWORD PTR [rip+0x9805],rax        # 0x14000e7e8
   140004fe3:	mov    QWORD PTR [rsp+0x40],r14
   140004fe8:	jmp    0x140004e7c
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	int3   
   140004ff1:	int3   
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	sub    rsp,0x28
   140004ff8:	mov    rcx,QWORD PTR [rip+0x97e9]        # 0x14000e7e8
   140004fff:	test   rcx,rcx
   140005002:	je     0x14000503b
   140005004:	mov    r8,QWORD PTR [rip+0x97e5]        # 0x14000e7f0
   14000500b:	mov    r9d,0x1
   140005011:	xor    edx,edx
   140005013:	call   QWORD PTR [rip+0x3267]        # 0x140008280
   140005019:	mov    rcx,QWORD PTR [rip+0x97d0]        # 0x14000e7f0
   140005020:	and    QWORD PTR [rip+0x97c0],0x0        # 0x14000e7e8
   140005028:	test   rcx,rcx
   14000502b:	je     0x14000503b
   14000502d:	call   QWORD PTR [rip+0x307d]        # 0x1400080b0
   140005033:	and    QWORD PTR [rip+0x97b5],0x0        # 0x14000e7f0
   14000503b:	xor    eax,eax
   14000503d:	add    rsp,0x28
   140005041:	ret    
   140005042:	int3   
   140005043:	int3   
   140005044:	int3   
   140005045:	int3   
   140005046:	int3   
   140005047:	int3   
   140005048:	mov    QWORD PTR [rsp+0x8],rbx
   14000504d:	xor    ebx,ebx
   14000504f:	lea    rax,[rdx-0x1]
   140005053:	mov    r10d,0x7ffffffe
   140005059:	mov    r9d,ebx
   14000505c:	cmp    rax,r10
   14000505f:	mov    r11d,0x80070057
   140005065:	cmova  r9d,r11d
   140005069:	test   r9d,r9d
   14000506c:	js     0x1400050ad
   14000506e:	mov    r9d,ebx
   140005071:	test   rdx,rdx
   140005074:	je     0x1400050a1
   140005076:	sub    r10,rdx
   140005079:	sub    r8,rcx
   14000507c:	lea    rax,[r10+rdx*1]
   140005080:	test   rax,rax
   140005083:	je     0x14000509c
   140005085:	movzx  eax,WORD PTR [r8+rcx*1]
   14000508a:	test   ax,ax
   14000508d:	je     0x14000509c
   14000508f:	mov    WORD PTR [rcx],ax
   140005092:	add    rcx,0x2
   140005096:	sub    rdx,0x1
   14000509a:	jne    0x14000507c
   14000509c:	test   rdx,rdx
   14000509f:	jne    0x1400050b2
   1400050a1:	sub    rcx,0x2
   1400050a5:	mov    r9d,0x8007007a
   1400050ab:	jmp    0x1400050b2
   1400050ad:	test   rdx,rdx
   1400050b0:	je     0x1400050b5
   1400050b2:	mov    WORD PTR [rcx],bx
   1400050b5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400050ba:	mov    eax,r9d
   1400050bd:	ret    
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	int3   
   1400050c1:	int3   
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	mov    QWORD PTR [rsp+0x18],r8
   1400050c9:	mov    QWORD PTR [rsp+0x20],r9
   1400050ce:	push   rbx
   1400050cf:	push   rbp
   1400050d0:	push   rsi
   1400050d1:	push   rdi
   1400050d2:	sub    rsp,0x28
   1400050d6:	xor    ebp,ebp
   1400050d8:	lea    rax,[rdx-0x1]
   1400050dc:	cmp    rax,0x7ffffffe
   1400050e2:	mov    rsi,rcx
   1400050e5:	mov    edi,ebp
   1400050e7:	mov    ecx,0x80070057
   1400050ec:	cmova  edi,ecx
   1400050ef:	test   edi,edi
   1400050f1:	js     0x140005128
   1400050f3:	lea    rbx,[rdx-0x1]
   1400050f7:	mov    rcx,rsi
   1400050fa:	mov    rdx,rbx
   1400050fd:	lea    r9,[rsp+0x68]
   140005102:	mov    edi,ebp
   140005104:	call   QWORD PTR [rip+0x31d6]        # 0x1400082e0
   14000510a:	test   eax,eax
   14000510c:	js     0x14000511d
   14000510e:	cdqe   
   140005110:	cmp    rax,rbx
   140005113:	ja     0x14000511d
   140005115:	jne    0x140005130
   140005117:	mov    WORD PTR [rsi+rbx*2],bp
   14000511b:	jmp    0x140005130
   14000511d:	mov    WORD PTR [rsi+rbx*2],bp
   140005121:	mov    edi,0x8007007a
   140005126:	jmp    0x140005130
   140005128:	test   rdx,rdx
   14000512b:	je     0x140005130
   14000512d:	mov    WORD PTR [rsi],bp
   140005130:	mov    eax,edi
   140005132:	add    rsp,0x28
   140005136:	pop    rdi
   140005137:	pop    rsi
   140005138:	pop    rbp
   140005139:	pop    rbx
   14000513a:	ret    
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	mov    QWORD PTR [rsp+0x8],rbx
   140005149:	push   rbp
   14000514a:	lea    rbp,[rsp-0x190]
   140005152:	sub    rsp,0x290
   140005159:	mov    rax,QWORD PTR [rip+0x8ea8]        # 0x14000e008
   140005160:	xor    rax,rsp
   140005163:	mov    QWORD PTR [rbp+0x180],rax
   14000516a:	xor    ebx,ebx
   14000516c:	lea    rcx,[rsp+0x72]
   140005171:	xor    edx,edx
   140005173:	mov    WORD PTR [rsp+0x70],bx
   140005178:	mov    r8d,0x206
   14000517e:	call   0x140006a26
   140005183:	movups xmm0,XMMWORD PTR [rip+0x57e6]        # 0x14000a970
   14000518a:	mov    eax,DWORD PTR [rip+0x5818]        # 0x14000a9a8
   140005190:	movups xmm1,XMMWORD PTR [rip+0x57e9]        # 0x14000a980
   140005197:	mov    DWORD PTR [rsp+0x20],ebx
   14000519b:	movups XMMWORD PTR [rsp+0x28],xmm0
   1400051a0:	mov    DWORD PTR [rsp+0x60],eax
   1400051a4:	movups xmm0,XMMWORD PTR [rip+0x57e5]        # 0x14000a990
   1400051ab:	movups XMMWORD PTR [rsp+0x38],xmm1
   1400051b0:	movsd  xmm1,QWORD PTR [rip+0x57e8]        # 0x14000a9a0
   1400051b8:	movups XMMWORD PTR [rsp+0x48],xmm0
   1400051bd:	movsd  QWORD PTR [rsp+0x58],xmm1
   1400051c3:	test   BYTE PTR ds:0x7ffe02d2,0x1
   1400051cb:	je     0x14000520e
   1400051cd:	lea    rdx,[rsp+0x70]
   1400051d2:	lea    ecx,[rbx+0x12]
   1400051d5:	call   0x14000537c
   1400051da:	test   eax,eax
   1400051dc:	js     0x140005213
   1400051de:	lea    rax,[rsp+0x20]
   1400051e3:	test   rax,rax
   1400051e6:	je     0x140005213
   1400051e8:	lea    r9,[rsp+0x20]
   1400051ed:	mov    rcx,0xffffffff80000002
   1400051f4:	lea    r8,[rsp+0x28]
   1400051f9:	lea    rdx,[rsp+0x70]
   1400051fe:	call   0x1400053d0
   140005203:	test   eax,eax
   140005205:	js     0x140005213
   140005207:	cmp    DWORD PTR [rsp+0x20],0x1
   14000520c:	jne    0x140005213
   14000520e:	mov    ebx,0x1
   140005213:	mov    eax,ebx
   140005215:	mov    rcx,QWORD PTR [rbp+0x180]
   14000521c:	xor    rcx,rsp
   14000521f:	call   0x140005fe0
   140005224:	mov    rbx,QWORD PTR [rsp+0x2a0]
   14000522c:	add    rsp,0x290
   140005233:	pop    rbp
   140005234:	ret    
   140005235:	int3   
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	mov    QWORD PTR [rsp+0x10],rbx
   140005241:	mov    QWORD PTR [rsp+0x18],rsi
   140005246:	push   rbp
   140005247:	push   rdi
   140005248:	push   r14
   14000524a:	lea    rbp,[rsp-0x160]
   140005252:	sub    rsp,0x260
   140005259:	mov    rax,QWORD PTR [rip+0x8da8]        # 0x14000e008
   140005260:	xor    rax,rsp
   140005263:	mov    QWORD PTR [rbp+0x150],rax
   14000526a:	xor    r14d,r14d
   14000526d:	mov    edi,edx
   14000526f:	mov    rsi,rcx
   140005272:	mov    DWORD PTR [rsp+0x30],r14d
   140005277:	xor    edx,edx
   140005279:	mov    QWORD PTR [rsp+0x38],r14
   14000527e:	lea    rcx,[rsp+0x42]
   140005283:	mov    WORD PTR [rsp+0x40],r14w
   140005289:	mov    r8d,0x206
   14000528f:	call   0x140006a26
   140005294:	lea    rax,[rsp+0x38]
   140005299:	test   rax,rax
   14000529c:	jne    0x1400052a8
   14000529e:	mov    ebx,0x80004003
   1400052a3:	jmp    0x140005345
   1400052a8:	lea    rdx,[rsp+0x40]
   1400052ad:	mov    ecx,0x6
   1400052b2:	call   0x14000537c
   1400052b7:	mov    ebx,eax
   1400052b9:	test   eax,eax
   1400052bb:	js     0x1400052f4
   1400052bd:	lea    rax,[rsp+0x38]
   1400052c2:	mov    r9d,0x1
   1400052c8:	xor    r8d,r8d
   1400052cb:	mov    QWORD PTR [rsp+0x20],rax
   1400052d0:	lea    rdx,[rsp+0x40]
   1400052d5:	mov    rcx,0xffffffff80000002
   1400052dc:	call   QWORD PTR [rip+0x2ebe]        # 0x1400081a0
   1400052e2:	test   eax,eax
   1400052e4:	je     0x1400052f4
   1400052e6:	movzx  ebx,ax
   1400052e9:	or     ebx,0x80070000
   1400052ef:	test   eax,eax
   1400052f1:	cmovle ebx,eax
   1400052f4:	test   ebx,ebx
   1400052f6:	js     0x140005335
   1400052f8:	lea    rax,[rsp+0x30]
   1400052fd:	test   rax,rax
   140005300:	jne    0x140005309
   140005302:	mov    ebx,0x80070057
   140005307:	jmp    0x140005335
   140005309:	mov    rcx,QWORD PTR [rsp+0x38]
   14000530e:	lea    r9,[rsp+0x30]
   140005313:	mov    r8,rsi
   140005316:	xor    edx,edx
   140005318:	call   0x1400053d0
   14000531d:	mov    ebx,eax
   14000531f:	test   eax,eax
   140005321:	js     0x140005335
   140005323:	cmp    DWORD PTR [rsp+0x30],edi
   140005327:	jb     0x140005330
   140005329:	cmp    DWORD PTR [rsp+0x30],0x1
   14000532e:	jbe    0x140005335
   140005330:	mov    DWORD PTR [rsp+0x30],r14d
   140005335:	mov    rcx,QWORD PTR [rsp+0x38]
   14000533a:	test   rcx,rcx
   14000533d:	je     0x140005345
   14000533f:	call   QWORD PTR [rip+0x2e63]        # 0x1400081a8
   140005345:	mov    eax,DWORD PTR [rsp+0x30]
   140005349:	test   ebx,ebx
   14000534b:	cmovs  eax,r14d
   14000534f:	mov    rcx,QWORD PTR [rbp+0x150]
   140005356:	xor    rcx,rsp
   140005359:	call   0x140005fe0
   14000535e:	lea    r11,[rsp+0x260]
   140005366:	mov    rbx,QWORD PTR [r11+0x28]
   14000536a:	mov    rsi,QWORD PTR [r11+0x30]
   14000536e:	mov    rsp,r11
   140005371:	pop    r14
   140005373:	pop    rdi
   140005374:	pop    rbp
   140005375:	ret    
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	mov    QWORD PTR [rsp+0x8],rbx
   140005381:	push   rdi
   140005382:	sub    rsp,0x20
   140005386:	xor    edi,edi
   140005388:	mov    rbx,rdx
   14000538b:	test   rdx,rdx
   14000538e:	jne    0x140005397
   140005390:	mov    eax,0x80004003
   140005395:	jmp    0x1400053b9
   140005397:	movsxd r8,ecx
   14000539a:	lea    rax,[rip+0x63bf]        # 0x14000b760
   1400053a1:	mov    WORD PTR [rdx],di
   1400053a4:	mov    rcx,rbx
   1400053a7:	mov    edx,0x104
   1400053ac:	mov    r8,QWORD PTR [rax+r8*8]
   1400053b0:	call   0x140005048
   1400053b5:	test   eax,eax
   1400053b7:	jns    0x1400053bc
   1400053b9:	mov    WORD PTR [rbx],di
   1400053bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053c1:	add    rsp,0x20
   1400053c5:	pop    rdi
   1400053c6:	ret    
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    r11,rsp
   1400053d3:	sub    rsp,0x48
   1400053d7:	xor    r10d,r10d
   1400053da:	mov    DWORD PTR [rsp+0x30],0x4
   1400053e2:	mov    DWORD PTR [r11+0x8],r10d
   1400053e6:	test   rcx,rcx
   1400053e9:	je     0x140005407
   1400053eb:	lea    rax,[r11-0x18]
   1400053ef:	mov    QWORD PTR [r11-0x20],rax
   1400053f3:	mov    QWORD PTR [r11-0x28],r9
   1400053f7:	lea    r9,[r11+0x8]
   1400053fb:	call   0x140005428
   140005400:	mov    r10d,DWORD PTR [rsp+0x50]
   140005405:	jmp    0x14000540c
   140005407:	mov    eax,0x80070057
   14000540c:	test   eax,eax
   14000540e:	js     0x14000541c
   140005410:	cmp    r10d,0x4
   140005414:	mov    ecx,0x80070002
   140005419:	cmovne eax,ecx
   14000541c:	add    rsp,0x48
   140005420:	ret    
   140005421:	int3   
   140005422:	int3   
   140005423:	int3   
   140005424:	int3   
   140005425:	int3   
   140005426:	int3   
   140005427:	int3   
   140005428:	rex push rbx
   14000542a:	sub    rsp,0x40
   14000542e:	xor    ebx,ebx
   140005430:	test   r8,r8
   140005433:	je     0x140005478
   140005435:	mov    rax,QWORD PTR [rsp+0x70]
   14000543a:	test   rax,rax
   14000543d:	je     0x140005478
   14000543f:	mov    r10,QWORD PTR [rsp+0x78]
   140005444:	test   r10,r10
   140005447:	je     0x140005478
   140005449:	mov    QWORD PTR [rsp+0x30],r10
   14000544e:	mov    QWORD PTR [rsp+0x28],rax
   140005453:	mov    QWORD PTR [rsp+0x20],r9
   140005458:	mov    r9d,0xffff
   14000545e:	call   QWORD PTR [rip+0x2d4c]        # 0x1400081b0
   140005464:	test   eax,eax
   140005466:	je     0x14000547d
   140005468:	movzx  ebx,ax
   14000546b:	or     ebx,0x80070000
   140005471:	test   eax,eax
   140005473:	cmovle ebx,eax
   140005476:	jmp    0x14000547d
   140005478:	mov    ebx,0x80070057
   14000547d:	mov    eax,ebx
   14000547f:	add    rsp,0x40
   140005483:	pop    rbx
   140005484:	ret    
   140005485:	int3   
   140005486:	int3   
   140005487:	int3   
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	mov    QWORD PTR [rsp+0x8],rbx
   140005491:	mov    QWORD PTR [rsp+0x18],rsi
   140005496:	push   rbp
   140005497:	push   rdi
   140005498:	push   r14
   14000549a:	lea    rbp,[rsp-0x160]
   1400054a2:	sub    rsp,0x260
   1400054a9:	mov    rax,QWORD PTR [rip+0x8b58]        # 0x14000e008
   1400054b0:	xor    rax,rsp
   1400054b3:	mov    QWORD PTR [rbp+0x150],rax
   1400054ba:	xor    r14d,r14d
   1400054bd:	mov    DWORD PTR [rsp+0x28],0x2856b913
   1400054c5:	mov    QWORD PTR [rsp+0x20],r14
   1400054ca:	mov    rdi,rdx
   1400054cd:	mov    DWORD PTR [rsp+0x2c],0x4c9d7185
   1400054d5:	mov    DWORD PTR [rsp+0x30],0x1298cc9a
   1400054dd:	mov    DWORD PTR [rsp+0x34],0x143ca869
   1400054e5:	test   rdx,rdx
   1400054e8:	jne    0x1400054f4
   1400054ea:	mov    ebx,0x80004003
   1400054ef:	jmp    0x140005593
   1400054f4:	mov    WORD PTR [rdx],r14w
   1400054f8:	lea    r9,[rsp+0x20]
   1400054fd:	xor    edx,edx
   1400054ff:	lea    rcx,[rip+0x6422]        # 0x14000b928
   140005506:	xor    r8d,r8d
   140005509:	call   QWORD PTR [rip+0xaaf1]        # 0x140010000
   14000550f:	mov    ebx,eax
   140005511:	test   eax,eax
   140005513:	js     0x140005583
   140005515:	xor    edx,edx
   140005517:	mov    WORD PTR [rsp+0x40],r14w
   14000551d:	mov    r8d,0x206
   140005523:	lea    rcx,[rsp+0x42]
   140005528:	call   0x140006a26
   14000552d:	mov    rdx,QWORD PTR [rsp+0x20]
   140005532:	lea    r9,[rsp+0x40]
   140005537:	lea    r8,[rip+0x6372]        # 0x14000b8b0
   14000553e:	mov    rcx,rdi
   140005541:	call   0x1400055c4
   140005546:	mov    ebx,eax
   140005548:	test   eax,eax
   14000554a:	js     0x140005583
   14000554c:	mov    rsi,QWORD PTR [rip+0x63bd]        # 0x14000b910
   140005553:	cmp    r14w,WORD PTR [rsi]
   140005557:	je     0x140005583
   140005559:	xor    edx,edx
   14000555b:	mov    WORD PTR [rsp+0x40],r14w
   140005561:	mov    r8d,0x206
   140005567:	lea    rcx,[rsp+0x42]
   14000556c:	call   0x140006a26
   140005571:	lea    r8,[rsp+0x40]
   140005576:	mov    rdx,rsi
   140005579:	mov    rcx,rdi
   14000557c:	call   0x140005890
   140005581:	mov    ebx,eax
   140005583:	mov    rcx,QWORD PTR [rsp+0x20]
   140005588:	test   rcx,rcx
   14000558b:	je     0x140005593
   14000558d:	call   QWORD PTR [rip+0x2a7d]        # 0x140008010
   140005593:	mov    eax,ebx
   140005595:	mov    rcx,QWORD PTR [rbp+0x150]
   14000559c:	xor    rcx,rsp
   14000559f:	call   0x140005fe0
   1400055a4:	lea    r11,[rsp+0x260]
   1400055ac:	mov    rbx,QWORD PTR [r11+0x20]
   1400055b0:	mov    rsi,QWORD PTR [r11+0x30]
   1400055b4:	mov    rsp,r11
   1400055b7:	pop    r14
   1400055b9:	pop    rdi
   1400055ba:	pop    rbp
   1400055bb:	ret    
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	int3   
   1400055c1:	int3   
   1400055c2:	int3   
   1400055c3:	int3   
   1400055c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400055c9:	push   rbp
   1400055ca:	push   rsi
   1400055cb:	push   rdi
   1400055cc:	push   r14
   1400055ce:	push   r15
   1400055d0:	sub    rsp,0x240
   1400055d7:	mov    rax,QWORD PTR [rip+0x8a2a]        # 0x14000e008
   1400055de:	xor    rax,rsp
   1400055e1:	mov    QWORD PTR [rsp+0x230],rax
   1400055e9:	xor    ebp,ebp
   1400055eb:	mov    rdi,r9
   1400055ee:	mov    WORD PTR [rcx],bp
   1400055f1:	mov    rsi,r8
   1400055f4:	mov    r9,rdx
   1400055f7:	mov    r14,rcx
   1400055fa:	mov    ebx,ebp
   1400055fc:	mov    r15d,0x104
   140005602:	test   rdx,rdx
   140005605:	je     0x140005653
   140005607:	cmp    bp,WORD PTR [rdx]
   14000560a:	je     0x140005653
   14000560c:	mov    r8d,r15d
   14000560f:	mov    rdx,rdi
   140005612:	mov    ecx,ebp
   140005614:	sub    r9,rdi
   140005617:	lea    rax,[r8+0x7ffffefa]
   14000561e:	test   rax,rax
   140005621:	je     0x14000563a
   140005623:	movzx  eax,WORD PTR [r9+rdx*1]
   140005628:	test   ax,ax
   14000562b:	je     0x14000563a
   14000562d:	mov    WORD PTR [rdx],ax
   140005630:	add    rdx,0x2
   140005634:	sub    r8,0x1
   140005638:	jne    0x140005617
   14000563a:	test   r8,r8
   14000563d:	jne    0x140005648
   14000563f:	sub    rdx,0x2
   140005643:	mov    ecx,0x8007007a
   140005648:	mov    WORD PTR [rdx],bp
   14000564b:	test   ecx,ecx
   14000564d:	js     0x14000570c
   140005653:	test   rsi,rsi
   140005656:	je     0x140005699
   140005658:	cmp    bp,WORD PTR [rsi]
   14000565b:	je     0x140005699
   14000565d:	xor    edx,edx
   14000565f:	mov    WORD PTR [rsp+0x20],bp
   140005664:	mov    r8d,0x206
   14000566a:	lea    rcx,[rsp+0x22]
   14000566f:	call   0x140006a26
   140005674:	test   rdi,rdi
   140005677:	jne    0x140005683
   140005679:	mov    ecx,0x80004003
   14000567e:	jmp    0x14000570c
   140005683:	lea    r8,[rsp+0x20]
   140005688:	mov    rdx,rsi
   14000568b:	mov    rcx,rdi
   14000568e:	call   0x140005890
   140005693:	mov    ecx,eax
   140005695:	test   eax,eax
   140005697:	js     0x14000570c
   140005699:	test   rdi,rdi
   14000569c:	je     0x1400056c2
   14000569e:	mov    rax,r15
   1400056a1:	mov    rdx,rdi
   1400056a4:	mov    ecx,ebp
   1400056a6:	cmp    WORD PTR [rdx],bp
   1400056a9:	je     0x1400056b5
   1400056ab:	add    rdx,0x2
   1400056af:	sub    rax,0x1
   1400056b3:	jne    0x1400056a6
   1400056b5:	test   rax,rax
   1400056b8:	je     0x1400056c2
   1400056ba:	mov    rbx,r15
   1400056bd:	sub    rbx,rax
   1400056c0:	jmp    0x1400056c7
   1400056c2:	mov    ecx,0x80070057
   1400056c7:	test   ecx,ecx
   1400056c9:	cmovs  rbx,rbp
   1400056cd:	js     0x14000570c
   1400056cf:	test   rbx,rbx
   1400056d2:	je     0x1400056fc
   1400056d4:	lea    rax,[rbx+rbx*1]
   1400056d8:	mov    ecx,0x5c
   1400056dd:	cmp    cx,WORD PTR [rax+rdi*1-0x2]
   1400056e2:	jne    0x1400056fc
   1400056e4:	dec    rbx
   1400056e7:	lea    rax,[rbx+rbx*1]
   1400056eb:	cmp    rax,0x208
   1400056f1:	jae    0x140005735
   1400056f3:	mov    WORD PTR [rdi+rax*1],bp
   1400056f7:	test   rbx,rbx
   1400056fa:	jne    0x1400056d8
   1400056fc:	mov    r8,rdi
   1400056ff:	mov    rdx,r15
   140005702:	mov    rcx,r14
   140005705:	call   0x140005048
   14000570a:	mov    ecx,eax
   14000570c:	mov    eax,ecx
   14000570e:	mov    rcx,QWORD PTR [rsp+0x230]
   140005716:	xor    rcx,rsp
   140005719:	call   0x140005fe0
   14000571e:	mov    rbx,QWORD PTR [rsp+0x278]
   140005726:	add    rsp,0x240
   14000572d:	pop    r15
   14000572f:	pop    r14
   140005731:	pop    rdi
   140005732:	pop    rsi
   140005733:	pop    rbp
   140005734:	ret    
   140005735:	call   0x140006678
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	int3   
   140005741:	int3   
   140005742:	int3   
   140005743:	int3   
   140005744:	mov    QWORD PTR [rsp+0x8],rbx
   140005749:	mov    QWORD PTR [rsp+0x20],rsi
   14000574e:	push   rbp
   14000574f:	push   rdi
   140005750:	push   r15
   140005752:	mov    rbp,rsp
   140005755:	sub    rsp,0x20
   140005759:	xor    esi,esi
   14000575b:	lea    r8,[rbp+0x30]
   14000575f:	mov    QWORD PTR [rbp+0x28],rsi
   140005763:	mov    QWORD PTR [rbp+0x30],rsi
   140005767:	lea    edx,[rsi+0x1]
   14000576a:	call   QWORD PTR [rip+0x29c0]        # 0x140008130
   140005770:	mov    ebx,eax
   140005772:	test   eax,eax
   140005774:	js     0x14000582a
   14000577a:	mov    rcx,QWORD PTR [rbp+0x30]
   14000577e:	or     rdx,0xffffffffffffffff
   140005782:	inc    rdx
   140005785:	cmp    WORD PTR [rcx+rdx*2],si
   140005789:	jne    0x140005782
   14000578b:	inc    rdx
   14000578e:	call   QWORD PTR [rip+0x29ac]        # 0x140008140
   140005794:	mov    ebx,eax
   140005796:	test   eax,eax
   140005798:	js     0x14000582a
   14000579e:	mov    rcx,QWORD PTR [rbp+0x30]
   1400057a2:	lea    rdx,[rbp+0x28]
   1400057a6:	call   QWORD PTR [rip+0x298c]        # 0x140008138
   1400057ac:	mov    ebx,eax
   1400057ae:	test   eax,eax
   1400057b0:	js     0x14000582a
   1400057b2:	mov    rax,QWORD PTR [rbp+0x28]
   1400057b6:	mov    edi,esi
   1400057b8:	cmp    si,WORD PTR [rax]
   1400057bb:	sete   dil
   1400057bf:	test   edi,edi
   1400057c1:	jne    0x14000582a
   1400057c3:	lea    r15d,[rdi+0x5c]
   1400057c7:	cmp    si,WORD PTR [rax]
   1400057ca:	jne    0x1400057d3
   1400057cc:	mov    edi,0x1
   1400057d1:	jmp    0x1400057e0
   1400057d3:	cmp    r15w,WORD PTR [rax]
   1400057d7:	jne    0x1400057e0
   1400057d9:	mov    WORD PTR [rax],si
   1400057dc:	mov    rax,QWORD PTR [rbp+0x28]
   1400057e0:	cmp    si,WORD PTR [rax]
   1400057e3:	jne    0x140005877
   1400057e9:	mov    rcx,QWORD PTR [rbp+0x30]
   1400057ed:	xor    edx,edx
   1400057ef:	call   QWORD PTR [rip+0x2893]        # 0x140008088
   1400057f5:	test   eax,eax
   1400057f7:	jne    0x140005867
   1400057f9:	call   QWORD PTR [rip+0x2869]        # 0x140008068
   1400057ff:	movzx  ebx,ax
   140005802:	or     ebx,0x80070000
   140005808:	test   eax,eax
   14000580a:	cmovle ebx,eax
   14000580d:	cmp    ebx,0x800700b7
   140005813:	je     0x14000584e
   140005815:	cmp    ebx,0x80070005
   14000581b:	je     0x14000584e
   14000581d:	cmp    ebx,0x80070003
   140005823:	jne    0x140005863
   140005825:	mov    ebx,0x800700b7
   14000582a:	mov    rcx,QWORD PTR [rbp+0x30]
   14000582e:	test   rcx,rcx
   140005831:	je     0x140005839
   140005833:	call   QWORD PTR [rip+0x2877]        # 0x1400080b0
   140005839:	mov    rsi,QWORD PTR [rsp+0x58]
   14000583e:	mov    eax,ebx
   140005840:	mov    rbx,QWORD PTR [rsp+0x40]
   140005845:	add    rsp,0x20
   140005849:	pop    r15
   14000584b:	pop    rdi
   14000584c:	pop    rbp
   14000584d:	ret    
   14000584e:	mov    rcx,QWORD PTR [rbp+0x30]
   140005852:	call   QWORD PTR [rip+0x2838]        # 0x140008090
   140005858:	cmp    eax,0xffffffff
   14000585b:	je     0x140005861
   14000585d:	test   al,0x10
   14000585f:	je     0x140005863
   140005861:	mov    ebx,esi
   140005863:	test   ebx,ebx
   140005865:	js     0x14000582a
   140005867:	mov    rax,QWORD PTR [rbp+0x28]
   14000586b:	test   edi,edi
   14000586d:	jne    0x140005877
   14000586f:	mov    WORD PTR [rax],r15w
   140005873:	mov    rax,QWORD PTR [rbp+0x28]
   140005877:	add    rax,0x2
   14000587b:	mov    QWORD PTR [rbp+0x28],rax
   14000587f:	test   edi,edi
   140005881:	jne    0x14000582a
   140005883:	jmp    0x1400057c7
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    QWORD PTR [rsp+0x20],rbx
   140005895:	push   rbp
   140005896:	push   rsi
   140005897:	push   rdi
   140005898:	sub    rsp,0x20
   14000589c:	xor    esi,esi
   14000589e:	mov    rbx,r8
   1400058a1:	mov    rdi,rcx
   1400058a4:	mov    r8,rdx
   1400058a7:	mov    ecx,esi
   1400058a9:	test   rdx,rdx
   1400058ac:	jne    0x1400058b5
   1400058ae:	mov    ecx,0x80070057
   1400058b3:	jmp    0x140005927
   1400058b5:	cmp    si,WORD PTR [rdx]
   1400058b8:	je     0x140005927
   1400058ba:	mov    ebp,0x104
   1400058bf:	mov    r10,rdi
   1400058c2:	mov    edx,ebp
   1400058c4:	sub    r10,rbx
   1400058c7:	mov    r9,rbx
   1400058ca:	lea    rax,[rdx+0x7ffffefa]
   1400058d1:	test   rax,rax
   1400058d4:	je     0x1400058ee
   1400058d6:	movzx  eax,WORD PTR [r10+r9*1]
   1400058db:	test   ax,ax
   1400058de:	je     0x1400058ee
   1400058e0:	mov    WORD PTR [r9],ax
   1400058e4:	add    r9,0x2
   1400058e8:	sub    rdx,0x1
   1400058ec:	jne    0x1400058ca
   1400058ee:	test   rdx,rdx
   1400058f1:	jne    0x1400058fc
   1400058f3:	sub    r9,0x2
   1400058f7:	mov    ecx,0x8007007a
   1400058fc:	mov    WORD PTR [r9],si
   140005900:	test   ecx,ecx
   140005902:	js     0x140005927
   140005904:	mov    rdx,rbp
   140005907:	mov    rcx,rbx
   14000590a:	call   QWORD PTR [rip+0x2818]        # 0x140008128
   140005910:	mov    ecx,eax
   140005912:	test   eax,eax
   140005914:	js     0x140005927
   140005916:	mov    r8,rbx
   140005919:	mov    rdx,rbp
   14000591c:	mov    rcx,rdi
   14000591f:	call   QWORD PTR [rip+0x27fb]        # 0x140008120
   140005925:	mov    ecx,eax
   140005927:	mov    eax,ecx
   140005929:	mov    rbx,QWORD PTR [rsp+0x58]
   14000592e:	add    rsp,0x20
   140005932:	pop    rdi
   140005933:	pop    rsi
   140005934:	pop    rbp
   140005935:	ret    
   140005936:	int3   
   140005937:	int3   
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	sub    rsp,0x38
   140005944:	mov    eax,DWORD PTR [rip+0x5fd6]        # 0x14000b920
   14000594a:	mov    r9,QWORD PTR [rip+0x26ef]        # 0x140008040
   140005951:	mov    r8,QWORD PTR [rip+0x5fc0]        # 0x14000b918
   140005958:	mov    DWORD PTR [rsp+0x28],eax
   14000595c:	mov    QWORD PTR [rsp+0x20],rdx
   140005961:	mov    rdx,rcx
   140005964:	lea    rcx,[rip+0xffffffffffffa695]        # 0x140000000
   14000596b:	call   QWORD PTR [rip+0x26c7]        # 0x140008038
   140005971:	add    rsp,0x38
   140005975:	ret    
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	cmp    QWORD PTR [rip+0x34f4],0x0        # 0x140008e78
   140005984:	lea    rax,[rip+0x34e5]        # 0x140008e70
   14000598b:	je     0x14000599c
   14000598d:	cmp    DWORD PTR [rax],ecx
   14000598f:	je     0x14000599f
   140005991:	add    rax,0x10
   140005995:	cmp    QWORD PTR [rax+0x8],0x0
   14000599a:	jne    0x14000598d
   14000599c:	xor    eax,eax
   14000599e:	ret    
   14000599f:	mov    rax,QWORD PTR [rax+0x8]
   1400059a3:	ret    
   1400059a4:	int3   
   1400059a5:	int3   
   1400059a6:	int3   
   1400059a7:	int3   
   1400059a8:	int3   
   1400059a9:	int3   
   1400059aa:	int3   
   1400059ab:	int3   
   1400059ac:	cmp    QWORD PTR [rip+0x2bd4],0x0        # 0x140008588
   1400059b4:	lea    rax,[rip+0x2bc5]        # 0x140008580
   1400059bb:	je     0x1400059cc
   1400059bd:	cmp    DWORD PTR [rax],ecx
   1400059bf:	je     0x1400059cf
   1400059c1:	add    rax,0x10
   1400059c5:	cmp    QWORD PTR [rax+0x8],0x0
   1400059ca:	jne    0x1400059bd
   1400059cc:	xor    eax,eax
   1400059ce:	ret    
   1400059cf:	mov    rax,QWORD PTR [rax+0x8]
   1400059d3:	ret    
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	rex push rbx
   1400059de:	sub    rsp,0x20
   1400059e2:	mov    rbx,rcx
   1400059e5:	call   0x14000613e
   1400059ea:	lea    rax,[rip+0x3e7f]        # 0x140009870
   1400059f1:	mov    QWORD PTR [rbx],rax
   1400059f4:	mov    rax,rbx
   1400059f7:	add    rsp,0x20
   1400059fb:	pop    rbx
   1400059fc:	ret    
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	int3   
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	rex push rbx
   140005a06:	sub    rsp,0x20
   140005a0a:	lea    rax,[rip+0x3e6f]        # 0x140009880
   140005a11:	mov    r8d,0x1
   140005a17:	lea    rdx,[rsp+0x30]
   140005a1c:	mov    QWORD PTR [rsp+0x30],rax
   140005a21:	mov    rbx,rcx
   140005a24:	call   0x140006132
   140005a29:	lea    rax,[rip+0x3e40]        # 0x140009870
   140005a30:	mov    QWORD PTR [rbx],rax
   140005a33:	mov    rax,rbx
   140005a36:	add    rsp,0x20
   140005a3a:	pop    rbx
   140005a3b:	ret    
   140005a3c:	int3   
   140005a3d:	int3   
   140005a3e:	int3   
   140005a3f:	int3   
   140005a40:	int3   
   140005a41:	int3   
   140005a42:	int3   
   140005a43:	int3   
   140005a44:	mov    QWORD PTR [rsp+0x8],rcx
   140005a49:	push   rbx
   140005a4a:	sub    rsp,0x20
   140005a4e:	mov    QWORD PTR [rsp+0x30],rdx
   140005a53:	mov    rbx,rcx
   140005a56:	lea    rdx,[rsp+0x30]
   140005a5b:	call   0x140006126
   140005a60:	lea    rax,[rip+0x3e29]        # 0x140009890
   140005a67:	mov    QWORD PTR [rbx],rax
   140005a6a:	mov    rax,rbx
   140005a6d:	add    rsp,0x20
   140005a71:	pop    rbx
   140005a72:	ret    
   140005a73:	int3   
   140005a74:	int3   
   140005a75:	int3   
   140005a76:	int3   
   140005a77:	int3   
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	rex push rbx
   140005a7e:	sub    rsp,0x20
   140005a82:	mov    rbx,rcx
   140005a85:	call   0x14000613e
   140005a8a:	lea    rax,[rip+0x3dff]        # 0x140009890
   140005a91:	mov    QWORD PTR [rbx],rax
   140005a94:	mov    rax,rbx
   140005a97:	add    rsp,0x20
   140005a9b:	pop    rbx
   140005a9c:	ret    
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	int3   
   140005aa1:	int3   
   140005aa2:	int3   
   140005aa3:	int3   
   140005aa4:	lea    rax,[rip+0x3dc5]        # 0x140009870
   140005aab:	mov    QWORD PTR [rcx],rax
   140005aae:	jmp    0x14000614a
   140005ab3:	int3   
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	int3   
   140005ab9:	int3   
   140005aba:	int3   
   140005abb:	int3   
   140005abc:	jmp    0x14000614a
   140005ac1:	int3   
   140005ac2:	int3   
   140005ac3:	int3   
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ad5:	push   rdi
   140005ad6:	sub    rsp,0x20
   140005ada:	lea    rax,[rip+0x3d8f]        # 0x140009870
   140005ae1:	mov    ebx,edx
   140005ae3:	mov    QWORD PTR [rcx],rax
   140005ae6:	mov    rdi,rcx
   140005ae9:	call   0x14000614a
   140005aee:	test   bl,0x1
   140005af1:	je     0x140005afb
   140005af3:	mov    rcx,rdi
   140005af6:	call   0x140005fc8
   140005afb:	mov    rax,rdi
   140005afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b03:	add    rsp,0x20
   140005b07:	pop    rdi
   140005b08:	ret    
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	mov    QWORD PTR [rsp+0x8],rbx
   140005b15:	push   rdi
   140005b16:	sub    rsp,0x20
   140005b1a:	mov    ebx,edx
   140005b1c:	mov    rdi,rcx
   140005b1f:	call   0x14000614a
   140005b24:	test   bl,0x1
   140005b27:	je     0x140005b31
   140005b29:	mov    rcx,rdi
   140005b2c:	call   0x140005fc8
   140005b31:	mov    rax,rdi
   140005b34:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b39:	add    rsp,0x20
   140005b3d:	pop    rdi
   140005b3e:	ret    
   140005b3f:	int3   
   140005b40:	int3   
   140005b41:	int3   
   140005b42:	int3   
   140005b43:	int3   
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	sub    rsp,0x48
   140005b4c:	lea    rcx,[rsp+0x20]
   140005b51:	call   0x140005a04
   140005b56:	lea    rdx,[rip+0x7073]        # 0x14000cbd0
   140005b5d:	lea    rcx,[rsp+0x20]
   140005b62:	call   0x140006102
   140005b67:	int3   
   140005b68:	int3   
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	sub    rsp,0x48
   140005b74:	mov    rdx,rcx
   140005b77:	lea    rcx,[rsp+0x20]
   140005b7c:	call   0x140005a44
   140005b81:	lea    rdx,[rip+0x70f8]        # 0x14000cc80
   140005b88:	lea    rcx,[rsp+0x20]
   140005b8d:	call   0x140006102
   140005b92:	int3   
   140005b93:	int3   
   140005b94:	int3   
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	sub    rsp,0x48
   140005ba0:	mov    rdx,rcx
   140005ba3:	lea    rcx,[rsp+0x20]
   140005ba8:	call   0x140005a44
   140005bad:	lea    rdx,[rip+0x7134]        # 0x14000cce8
   140005bb4:	lea    rcx,[rsp+0x20]
   140005bb9:	call   0x140006102
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	int3   
   140005bc3:	int3   
   140005bc4:	int3   
   140005bc5:	int3   
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	rex push rbx
   140005bca:	sub    rsp,0x20
   140005bce:	mov    rbx,rcx
   140005bd1:	jmp    0x140005be2
   140005bd3:	mov    rcx,rbx
   140005bd6:	call   0x1400061a6
   140005bdb:	test   eax,eax
   140005bdd:	je     0x140005bf3
   140005bdf:	mov    rcx,rbx
   140005be2:	call   QWORD PTR [rip+0x27a0]        # 0x140008388
   140005be8:	test   rax,rax
   140005beb:	je     0x140005bd3
   140005bed:	add    rsp,0x20
   140005bf1:	pop    rbx
   140005bf2:	ret    
   140005bf3:	call   0x140005b48
   140005bf8:	int3   
   140005bf9:	int3   
   140005bfa:	int3   
   140005bfb:	int3   
   140005bfc:	int3   
   140005bfd:	int3   
   140005bfe:	int3   
   140005bff:	int3   
   140005c00:	sub    rsp,0x28
   140005c04:	mov    eax,0x5a4d
   140005c09:	cmp    WORD PTR [rip+0xffffffffffffa3f0],ax        # 0x140000000
   140005c10:	je     0x140005c16
   140005c12:	xor    eax,eax
   140005c14:	jmp    0x140005c65
   140005c16:	movsxd rcx,DWORD PTR [rip+0xffffffffffffa41f]        # 0x14000003c
   140005c1d:	lea    rax,[rip+0xffffffffffffa3dc]        # 0x140000000
   140005c24:	add    rcx,rax
   140005c27:	cmp    DWORD PTR [rcx],0x4550
   140005c2d:	jne    0x140005c12
   140005c2f:	movzx  eax,WORD PTR [rcx+0x18]
   140005c33:	cmp    eax,0x10b
   140005c38:	je     0x140005c54
   140005c3a:	cmp    eax,0x20b
   140005c3f:	jne    0x140005c12
   140005c41:	xor    eax,eax
   140005c43:	cmp    DWORD PTR [rcx+0x84],0xe
   140005c4a:	jbe    0x140005c65
   140005c4c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005c52:	jmp    0x140005c62
   140005c54:	xor    eax,eax
   140005c56:	cmp    DWORD PTR [rcx+0x74],0xe
   140005c5a:	jbe    0x140005c65
   140005c5c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005c62:	setne  al
   140005c65:	mov    ecx,0x2
   140005c6a:	mov    DWORD PTR [rip+0x8520],eax        # 0x14000e190
   140005c70:	call   0x140006288
   140005c75:	mov    ecx,eax
   140005c77:	call   QWORD PTR [rip+0x26e3]        # 0x140008360
   140005c7d:	mov    rcx,QWORD PTR [rip+0x269c]        # 0x140008320
   140005c84:	or     rax,0xffffffffffffffff
   140005c88:	mov    QWORD PTR [rip+0x8bf9],rax        # 0x14000e888
   140005c8f:	mov    QWORD PTR [rip+0x8bfa],rax        # 0x14000e890
   140005c96:	mov    eax,DWORD PTR [rip+0x8508]        # 0x14000e1a4
   140005c9c:	mov    DWORD PTR [rcx],eax
   140005c9e:	mov    rcx,QWORD PTR [rip+0x2673]        # 0x140008318
   140005ca5:	mov    eax,DWORD PTR [rip+0x84ed]        # 0x14000e198
   140005cab:	mov    DWORD PTR [rcx],eax
   140005cad:	call   0x1400062e0
   140005cb2:	cmp    DWORD PTR [rip+0x8347],0x0        # 0x14000e000
   140005cb9:	jne    0x140005cc8
   140005cbb:	lea    rcx,[rip+0x61e]        # 0x1400062e0
   140005cc2:	call   QWORD PTR [rip+0x2678]        # 0x140008340
   140005cc8:	xor    eax,eax
   140005cca:	add    rsp,0x28
   140005cce:	ret    
   140005ccf:	int3   
   140005cd0:	int3   
   140005cd1:	int3   
   140005cd2:	int3   
   140005cd3:	int3   
   140005cd4:	int3   
   140005cd5:	int3   
   140005cd6:	int3   
   140005cd7:	int3   
   140005cd8:	int3   
   140005cd9:	int3   
   140005cda:	int3   
   140005cdb:	int3   
   140005cdc:	int3   
   140005cdd:	int3   
   140005cde:	int3   
   140005cdf:	int3   
   140005ce0:	sub    rsp,0x38
   140005ce4:	mov    eax,DWORD PTR [rip+0x84b6]        # 0x14000e1a0
   140005cea:	lea    r8,[rip+0x8497]        # 0x14000e188
   140005cf1:	mov    r9d,DWORD PTR [rip+0x84a4]        # 0x14000e19c
   140005cf8:	lea    rdx,[rip+0x8481]        # 0x14000e180
   140005cff:	mov    DWORD PTR [rip+0x848f],eax        # 0x14000e194
   140005d05:	lea    rcx,[rip+0x846c]        # 0x14000e178
   140005d0c:	lea    rax,[rip+0x8481]        # 0x14000e194
   140005d13:	mov    QWORD PTR [rsp+0x20],rax
   140005d18:	call   QWORD PTR [rip+0x264a]        # 0x140008368
   140005d1e:	mov    DWORD PTR [rip+0x8458],eax        # 0x14000e17c
   140005d24:	add    rsp,0x38
   140005d28:	ret    
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	mov    QWORD PTR [rsp+0x8],rbx
   140005d35:	mov    QWORD PTR [rsp+0x10],rsi
   140005d3a:	mov    QWORD PTR [rsp+0x18],rdi
   140005d3f:	push   r12
   140005d41:	push   r14
   140005d43:	push   r15
   140005d45:	sub    rsp,0xb0
   140005d4c:	xor    r15d,r15d
   140005d4f:	mov    DWORD PTR [rsp+0x20],r15d
   140005d54:	lea    rcx,[rsp+0x40]
   140005d59:	call   QWORD PTR [rip+0x2401]        # 0x140008160
   140005d5f:	nop
   140005d60:	mov    rax,QWORD PTR gs:0x30
   140005d69:	mov    rbx,QWORD PTR [rax+0x8]
   140005d6d:	mov    r14d,r15d
   140005d70:	xor    eax,eax
   140005d72:	lock cmpxchg QWORD PTR [rip+0x8afd],rbx        # 0x14000e878
   140005d7b:	je     0x140005d99
   140005d7d:	cmp    rax,rbx
   140005d80:	jne    0x140005d8c
   140005d82:	mov    edi,0x1
   140005d87:	mov    r14d,edi
   140005d8a:	jmp    0x140005d9e
   140005d8c:	mov    ecx,0x3e8
   140005d91:	call   QWORD PTR [rip+0x2471]        # 0x140008208
   140005d97:	jmp    0x140005d70
   140005d99:	mov    edi,0x1
   140005d9e:	mov    eax,DWORD PTR [rip+0x8adc]        # 0x14000e880
   140005da4:	cmp    eax,edi
   140005da6:	jne    0x140005db6
   140005da8:	mov    esi,0x1f
   140005dad:	mov    ecx,esi
   140005daf:	call   0x1400062d4
   140005db4:	jmp    0x140005e27
   140005db6:	mov    eax,DWORD PTR [rip+0x8ac4]        # 0x14000e880
   140005dbc:	test   eax,eax
   140005dbe:	jne    0x140005e1c
   140005dc0:	mov    DWORD PTR [rip+0x8aba],edi        # 0x14000e880
   140005dc6:	lea    r12,[rip+0x26ab]        # 0x140008478
   140005dcd:	lea    rbx,[rip+0x268c]        # 0x140008460
   140005dd4:	mov    QWORD PTR [rsp+0x30],rbx
   140005dd9:	mov    eax,r15d
   140005ddc:	mov    DWORD PTR [rsp+0x24],eax
   140005de0:	cmp    rbx,r12
   140005de3:	jae    0x140005e0e
   140005de5:	test   eax,eax
   140005de7:	jne    0x140005e12
   140005de9:	mov    rsi,QWORD PTR [rbx]
   140005dec:	test   rsi,rsi
   140005def:	je     0x140005e03
   140005df1:	mov    rcx,rsi
   140005df4:	mov    rax,QWORD PTR [rip+0x2615]        # 0x140008410
   140005dfb:	call   rax
   140005dfd:	call   rsi
   140005dff:	mov    DWORD PTR [rsp+0x24],eax
   140005e03:	add    rbx,0x8
   140005e07:	mov    QWORD PTR [rsp+0x30],rbx
   140005e0c:	jmp    0x140005de0
   140005e0e:	test   eax,eax
   140005e10:	je     0x140005e22
   140005e12:	mov    eax,0xff
   140005e17:	jmp    0x140005f83
   140005e1c:	mov    DWORD PTR [rip+0x834e],edi        # 0x14000e170
   140005e22:	mov    esi,0x1f
   140005e27:	mov    eax,DWORD PTR [rip+0x8a53]        # 0x14000e880
   140005e2d:	cmp    eax,edi
   140005e2f:	jne    0x140005e4e
   140005e31:	lea    rdx,[rip+0x2620]        # 0x140008458
   140005e38:	lea    rcx,[rip+0x25e1]        # 0x140008420
   140005e3f:	call   0x1400064aa
   140005e44:	mov    DWORD PTR [rip+0x8a32],0x2        # 0x14000e880
   140005e4e:	test   r14d,r14d
   140005e51:	jne    0x140005e5d
   140005e53:	mov    rax,r15
   140005e56:	xchg   QWORD PTR [rip+0x8a1b],rax        # 0x14000e878
   140005e5d:	cmp    QWORD PTR [rip+0x8a34],r15        # 0x14000e898
   140005e64:	je     0x140005e94
   140005e66:	lea    rcx,[rip+0x8a2b]        # 0x14000e898
   140005e6d:	call   0x140006340
   140005e72:	test   eax,eax
   140005e74:	je     0x140005e94
   140005e76:	mov    rbx,QWORD PTR [rip+0x8a1b]        # 0x14000e898
   140005e7d:	mov    rcx,rbx
   140005e80:	mov    rax,QWORD PTR [rip+0x2589]        # 0x140008410
   140005e87:	call   rax
   140005e89:	xor    r8d,r8d
   140005e8c:	lea    edx,[r8+0x2]
   140005e90:	xor    ecx,ecx
   140005e92:	call   rbx
   140005e94:	mov    rax,QWORD PTR [rip+0x248d]        # 0x140008328
   140005e9b:	mov    rdx,QWORD PTR [rax]
   140005e9e:	test   rdx,rdx
   140005ea1:	jne    0x140005ead
   140005ea3:	mov    eax,0xff
   140005ea8:	jmp    0x140005f83
   140005ead:	mov    QWORD PTR [rsp+0x28],rdx
   140005eb2:	mov    ecx,DWORD PTR [rsp+0x20]
   140005eb6:	cmp    WORD PTR [rdx],0x20
   140005eba:	ja     0x140005f34
   140005ebc:	cmp    WORD PTR [rdx],r15w
   140005ec0:	je     0x140005ec6
   140005ec2:	test   ecx,ecx
   140005ec4:	jne    0x140005f34
   140005ec6:	movzx  eax,WORD PTR [rdx]
   140005ec9:	sub    ax,di
   140005ecc:	cmp    ax,si
   140005ecf:	ja     0x140005edc
   140005ed1:	add    rdx,0x2
   140005ed5:	mov    QWORD PTR [rsp+0x28],rdx
   140005eda:	jmp    0x140005ec6
   140005edc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140005ee0:	movzx  eax,WORD PTR [rsp+0x80]
   140005ee8:	mov    r9d,0xa
   140005eee:	and    cl,dil
   140005ef1:	cmovne r9d,eax
   140005ef5:	mov    r8,rdx
   140005ef8:	xor    edx,edx
   140005efa:	lea    rcx,[rip+0xffffffffffffa0ff]        # 0x140000000
   140005f01:	call   0x140001af0
   140005f06:	mov    DWORD PTR [rip+0x8260],eax        # 0x14000e16c
   140005f0c:	cmp    DWORD PTR [rip+0x827d],r15d        # 0x14000e190
   140005f13:	jne    0x140005f1d
   140005f15:	mov    ecx,eax
   140005f17:	call   QWORD PTR [rip+0x24db]        # 0x1400083f8
   140005f1d:	cmp    DWORD PTR [rip+0x824c],r15d        # 0x14000e170
   140005f24:	jne    0x140005f32
   140005f26:	call   QWORD PTR [rip+0x241c]        # 0x140008348
   140005f2c:	mov    eax,DWORD PTR [rip+0x823a]        # 0x14000e16c
   140005f32:	jmp    0x140005f83
   140005f34:	cmp    WORD PTR [rdx],0x22
   140005f38:	jne    0x140005f48
   140005f3a:	mov    eax,r15d
   140005f3d:	test   ecx,ecx
   140005f3f:	sete   al
   140005f42:	mov    ecx,eax
   140005f44:	mov    DWORD PTR [rsp+0x20],eax
   140005f48:	add    rdx,0x2
   140005f4c:	mov    QWORD PTR [rsp+0x28],rdx
   140005f51:	jmp    0x140005eb6
   140005f56:	mov    DWORD PTR [rip+0x8210],eax        # 0x14000e16c
   140005f5c:	cmp    DWORD PTR [rip+0x822d],0x0        # 0x14000e190
   140005f63:	jne    0x140005f6e
   140005f65:	mov    ecx,eax
   140005f67:	call   QWORD PTR [rip+0x23e3]        # 0x140008350
   140005f6d:	int3   
   140005f6e:	cmp    DWORD PTR [rip+0x81fb],0x0        # 0x14000e170
   140005f75:	jne    0x140005f83
   140005f77:	call   QWORD PTR [rip+0x23cb]        # 0x140008348
   140005f7d:	mov    eax,DWORD PTR [rip+0x81e9]        # 0x14000e16c
   140005f83:	lea    r11,[rsp+0xb0]
   140005f8b:	mov    rbx,QWORD PTR [r11+0x20]
   140005f8f:	mov    rsi,QWORD PTR [r11+0x28]
   140005f93:	mov    rdi,QWORD PTR [r11+0x30]
   140005f97:	mov    rsp,r11
   140005f9a:	pop    r15
   140005f9c:	pop    r14
   140005f9e:	pop    r12
   140005fa0:	ret    
   140005fa1:	int3   
   140005fa2:	int3   
   140005fa3:	int3   
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	sub    rsp,0x28
   140005fb4:	call   0x1400063d4
   140005fb9:	add    rsp,0x28
   140005fbd:	jmp    0x140005d30
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	jmp    QWORD PTR [rip+0x238a]        # 0x140008358
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005fe0:	cmp    rcx,QWORD PTR [rip+0x8021]        # 0x14000e008
   140005fe7:	jne    0x140005ff9
   140005fe9:	rol    rcx,0x10
   140005fed:	test   cx,0xffff
   140005ff2:	jne    0x140005ff5
   140005ff4:	ret    
   140005ff5:	ror    rcx,0x10
   140005ff9:	jmp    0x140006500
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	int3   
   140006001:	int3   
   140006002:	int3   
   140006003:	int3   
   140006004:	mov    QWORD PTR [rsp+0x8],rbx
   140006009:	push   rdi
   14000600a:	sub    rsp,0x20
   14000600e:	mov    rdi,rcx
   140006011:	mov    rax,QWORD PTR [rip+0x8878]        # 0x14000e890
   140006018:	mov    QWORD PTR [rsp+0x38],rax
   14000601d:	cmp    rax,0xffffffffffffffff
   140006021:	jne    0x14000603a
   140006023:	mov    rbx,QWORD PTR [rip+0x22c6]        # 0x1400082f0
   14000602a:	mov    rcx,rbx
   14000602d:	call   QWORD PTR [rip+0x23dd]        # 0x140008410
   140006033:	mov    rcx,rdi
   140006036:	call   rbx
   140006038:	jmp    0x140006097
   14000603a:	mov    ecx,0x8
   14000603f:	call   0x140006776
   140006044:	nop
   140006045:	mov    rax,QWORD PTR [rip+0x8844]        # 0x14000e890
   14000604c:	mov    QWORD PTR [rsp+0x38],rax
   140006051:	mov    rax,QWORD PTR [rip+0x8830]        # 0x14000e888
   140006058:	mov    QWORD PTR [rsp+0x40],rax
   14000605d:	lea    r8,[rsp+0x40]
   140006062:	lea    rdx,[rsp+0x38]
   140006067:	mov    rcx,rdi
   14000606a:	call   0x14000678e
   14000606f:	mov    rbx,rax
   140006072:	mov    rdx,QWORD PTR [rsp+0x38]
   140006077:	mov    QWORD PTR [rip+0x8812],rdx        # 0x14000e890
   14000607e:	mov    rdx,QWORD PTR [rsp+0x40]
   140006083:	mov    QWORD PTR [rip+0x87fe],rdx        # 0x14000e888
   14000608a:	mov    ecx,0x8
   14000608f:	call   0x140006782
   140006094:	mov    rax,rbx
   140006097:	mov    rbx,QWORD PTR [rsp+0x30]
   14000609c:	add    rsp,0x20
   1400060a0:	pop    rdi
   1400060a1:	ret    
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	sub    rsp,0x28
   1400060ac:	call   0x140006004
   1400060b1:	neg    rax
   1400060b4:	sbb    eax,eax
   1400060b6:	neg    eax
   1400060b8:	dec    eax
   1400060ba:	add    rsp,0x28
   1400060be:	ret    
   1400060bf:	int3   
   1400060c0:	int3   
   1400060c1:	int3   
   1400060c2:	int3   
   1400060c3:	int3   
   1400060c4:	int3   
   1400060c5:	int3   
   1400060c6:	int3   
   1400060c7:	int3   
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	int3   
   1400060cb:	int3   
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	int3   
   1400060cf:	int3   
   1400060d0:	jmp    QWORD PTR [rip+0x2312]        # 0x1400083e8
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	int3   
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	sub    rsp,0x38
   1400060e0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400060e9:	call   0x140005bc8
   1400060ee:	nop
   1400060ef:	jmp    0x1400060f6
   1400060f1:	mov    rax,QWORD PTR [rsp+0x50]
   1400060f6:	add    rsp,0x38
   1400060fa:	ret    
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	int3   
   140006101:	int3   
   140006102:	jmp    QWORD PTR [rip+0x22c0]        # 0x1400083c8
   140006108:	int3   
   140006109:	int3   
   14000610a:	int3   
   14000610b:	int3   
   14000610c:	int3   
   14000610d:	int3   
   14000610e:	jmp    QWORD PTR [rip+0x22ac]        # 0x1400083c0
   140006114:	int3   
   140006115:	int3   
   140006116:	int3   
   140006117:	int3   
   140006118:	int3   
   140006119:	int3   
   14000611a:	jmp    QWORD PTR [rip+0x2298]        # 0x1400083b8
   140006120:	int3   
   140006121:	int3   
   140006122:	int3   
   140006123:	int3   
   140006124:	int3   
   140006125:	int3   
   140006126:	jmp    QWORD PTR [rip+0x2284]        # 0x1400083b0
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	int3   
   140006131:	int3   
   140006132:	jmp    QWORD PTR [rip+0x2270]        # 0x1400083a8
   140006138:	int3   
   140006139:	int3   
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	jmp    QWORD PTR [rip+0x225c]        # 0x1400083a0
   140006144:	int3   
   140006145:	int3   
   140006146:	int3   
   140006147:	int3   
   140006148:	int3   
   140006149:	int3   
   14000614a:	jmp    QWORD PTR [rip+0x2248]        # 0x140008398
   140006150:	int3   
   140006151:	int3   
   140006152:	int3   
   140006153:	int3   
   140006154:	int3   
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	int3   
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	jmp    QWORD PTR [rip+0x222a]        # 0x140008390
   140006166:	int3   
   140006167:	int3   
   140006168:	int3   
   140006169:	int3   
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	mov    QWORD PTR [rsp+0x8],rbx
   140006175:	push   rdi
   140006176:	sub    rsp,0x20
   14000617a:	mov    ebx,edx
   14000617c:	mov    rdi,rcx
   14000617f:	call   QWORD PTR [rip+0x2163]        # 0x1400082e8
   140006185:	test   bl,0x1
   140006188:	je     0x140006192
   14000618a:	mov    rcx,rdi
   14000618d:	call   0x140005fc8
   140006192:	mov    rax,rdi
   140006195:	mov    rbx,QWORD PTR [rsp+0x30]
   14000619a:	add    rsp,0x20
   14000619e:	pop    rdi
   14000619f:	ret    
   1400061a0:	int3   
   1400061a1:	int3   
   1400061a2:	int3   
   1400061a3:	int3   
   1400061a4:	int3   
   1400061a5:	int3   
   1400061a6:	jmp    QWORD PTR [rip+0x21d4]        # 0x140008380
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	int3   
   1400061b1:	int3   
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	int3   
   1400061b5:	int3   
   1400061b6:	int3   
   1400061b7:	int3   
   1400061b8:	int3   
   1400061b9:	int3   
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	sub    rsp,0x28
   1400061c4:	mov    rax,QWORD PTR [rcx]
   1400061c7:	cmp    DWORD PTR [rax],0xe06d7363
   1400061cd:	jne    0x1400061f2
   1400061cf:	cmp    DWORD PTR [rax+0x18],0x4
   1400061d3:	jne    0x1400061f2
   1400061d5:	mov    ecx,DWORD PTR [rax+0x20]
   1400061d8:	lea    eax,[rcx-0x19930520]
   1400061de:	cmp    eax,0x2
   1400061e1:	jbe    0x1400061eb
   1400061e3:	cmp    ecx,0x1994000
   1400061e9:	jne    0x1400061f2
   1400061eb:	call   QWORD PTR [rip+0x211f]        # 0x140008310
   1400061f1:	int3   
   1400061f2:	xor    eax,eax
   1400061f4:	add    rsp,0x28
   1400061f8:	ret    
   1400061f9:	int3   
   1400061fa:	int3   
   1400061fb:	int3   
   1400061fc:	int3   
   1400061fd:	int3   
   1400061fe:	int3   
   1400061ff:	int3   
   140006200:	sub    rsp,0x28
   140006204:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400061c0
   14000620b:	call   QWORD PTR [rip+0x1e3f]        # 0x140008050
   140006211:	xor    eax,eax
   140006213:	add    rsp,0x28
   140006217:	ret    
   140006218:	int3   
   140006219:	int3   
   14000621a:	int3   
   14000621b:	int3   
   14000621c:	int3   
   14000621d:	int3   
   14000621e:	jmp    QWORD PTR [rip+0x2154]        # 0x140008378
   140006224:	int3   
   140006225:	int3   
   140006226:	int3   
   140006227:	int3   
   140006228:	int3   
   140006229:	int3   
   14000622a:	int3   
   14000622b:	int3   
   14000622c:	sub    rsp,0x18
   140006230:	xor    edx,edx
   140006232:	lea    rax,[rcx-0x1]
   140006236:	cmp    rax,0xfffffffffffffffd
   14000623a:	ja     0x140006278
   14000623c:	mov    eax,0x5a4d
   140006241:	cmp    WORD PTR [rcx],ax
   140006244:	jne    0x140006270
   140006246:	cmp    DWORD PTR [rcx+0x3c],edx
   140006249:	jl     0x140006270
   14000624b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006252:	jae    0x140006270
   140006254:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006258:	add    rax,rcx
   14000625b:	mov    QWORD PTR [rsp],rax
   14000625f:	cmp    DWORD PTR [rax],0x4550
   140006265:	cmovne rax,rdx
   140006269:	mov    rdx,rax
   14000626c:	mov    QWORD PTR [rsp],rax
   140006270:	jmp    0x140006278
   140006272:	xor    edx,edx
   140006274:	mov    QWORD PTR [rsp],rdx
   140006278:	mov    rax,rdx
   14000627b:	add    rsp,0x18
   14000627f:	ret    
   140006280:	int3   
   140006281:	int3   
   140006282:	int3   
   140006283:	int3   
   140006284:	int3   
   140006285:	int3   
   140006286:	int3   
   140006287:	int3   
   140006288:	rex push rbx
   14000628a:	sub    rsp,0x20
   14000628e:	mov    ebx,ecx
   140006290:	xor    ecx,ecx
   140006292:	call   QWORD PTR [rip+0x1e48]        # 0x1400080e0
   140006298:	test   rax,rax
   14000629b:	je     0x1400062c5
   14000629d:	mov    rcx,rax
   1400062a0:	call   0x14000622c
   1400062a5:	test   rax,rax
   1400062a8:	je     0x1400062c5
   1400062aa:	mov    ecx,0x2
   1400062af:	cmp    WORD PTR [rax+0x5c],cx
   1400062b3:	jne    0x1400062b9
   1400062b5:	mov    eax,ecx
   1400062b7:	jmp    0x1400062c7
   1400062b9:	cmp    WORD PTR [rax+0x5c],0x3
   1400062be:	mov    eax,0x1
   1400062c3:	je     0x1400062c7
   1400062c5:	mov    eax,ebx
   1400062c7:	add    rsp,0x20
   1400062cb:	pop    rbx
   1400062cc:	ret    
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	int3   
   1400062d1:	int3   
   1400062d2:	int3   
   1400062d3:	int3   
   1400062d4:	jmp    QWORD PTR [rip+0x2096]        # 0x140008370
   1400062da:	int3   
   1400062db:	int3   
   1400062dc:	int3   
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	xor    eax,eax
   1400062e2:	ret    
   1400062e3:	int3   
   1400062e4:	int3   
   1400062e5:	int3   
   1400062e6:	int3   
   1400062e7:	int3   
   1400062e8:	int3   
   1400062e9:	int3   
   1400062ea:	int3   
   1400062eb:	int3   
   1400062ec:	int3   
   1400062ed:	int3   
   1400062ee:	int3   
   1400062ef:	int3   
   1400062f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400062f4:	xor    r9d,r9d
   1400062f7:	add    r8,rcx
   1400062fa:	mov    r10,rdx
   1400062fd:	movzx  eax,WORD PTR [r8+0x14]
   140006302:	movzx  r11d,WORD PTR [r8+0x6]
   140006307:	add    rax,0x18
   14000630b:	add    rax,r8
   14000630e:	test   r11d,r11d
   140006311:	je     0x140006331
   140006313:	mov    edx,DWORD PTR [rax+0xc]
   140006316:	cmp    r10,rdx
   140006319:	jb     0x140006325
   14000631b:	mov    ecx,DWORD PTR [rax+0x8]
   14000631e:	add    ecx,edx
   140006320:	cmp    r10,rcx
   140006323:	jb     0x140006333
   140006325:	inc    r9d
   140006328:	add    rax,0x28
   14000632c:	cmp    r9d,r11d
   14000632f:	jb     0x140006313
   140006331:	xor    eax,eax
   140006333:	ret    
   140006334:	int3   
   140006335:	int3   
   140006336:	int3   
   140006337:	int3   
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	mov    QWORD PTR [rsp+0x8],rbx
   140006345:	push   rdi
   140006346:	sub    rsp,0x20
   14000634a:	mov    rbx,rcx
   14000634d:	lea    rdi,[rip+0xffffffffffff9cac]        # 0x140000000
   140006354:	mov    rcx,rdi
   140006357:	call   0x1400063a0
   14000635c:	test   eax,eax
   14000635e:	je     0x140006382
   140006360:	sub    rbx,rdi
   140006363:	mov    rdx,rbx
   140006366:	mov    rcx,rdi
   140006369:	call   0x1400062f0
   14000636e:	test   rax,rax
   140006371:	je     0x140006382
   140006373:	mov    eax,DWORD PTR [rax+0x24]
   140006376:	shr    eax,0x1f
   140006379:	not    eax
   14000637b:	and    eax,0x1
   14000637e:	jmp    0x140006382
   140006380:	xor    eax,eax
   140006382:	mov    rbx,QWORD PTR [rsp+0x30]
   140006387:	add    rsp,0x20
   14000638b:	pop    rdi
   14000638c:	ret    
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	int3   
   140006391:	int3   
   140006392:	int3   
   140006393:	int3   
   140006394:	int3   
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	int3   
   14000639d:	int3   
   14000639e:	int3   
   14000639f:	int3   
   1400063a0:	mov    rax,rcx
   1400063a3:	mov    ecx,0x5a4d
   1400063a8:	cmp    WORD PTR [rax],cx
   1400063ab:	je     0x1400063b0
   1400063ad:	xor    eax,eax
   1400063af:	ret    
   1400063b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400063b4:	add    rcx,rax
   1400063b7:	xor    eax,eax
   1400063b9:	cmp    DWORD PTR [rcx],0x4550
   1400063bf:	jne    0x1400063cd
   1400063c1:	mov    edx,0x20b
   1400063c6:	cmp    WORD PTR [rcx+0x18],dx
   1400063ca:	sete   al
   1400063cd:	ret    
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	int3   
   1400063d1:	int3   
   1400063d2:	int3   
   1400063d3:	int3   
   1400063d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400063d9:	push   rbp
   1400063da:	mov    rbp,rsp
   1400063dd:	sub    rsp,0x20
   1400063e1:	and    QWORD PTR [rbp+0x18],0x0
   1400063e6:	movabs rbx,0x2b992ddfa232
   1400063f0:	mov    rax,QWORD PTR [rip+0x7c11]        # 0x14000e008
   1400063f7:	cmp    rax,rbx
   1400063fa:	jne    0x14000648f
   140006400:	lea    rcx,[rbp+0x18]
   140006404:	call   QWORD PTR [rip+0x1e26]        # 0x140008230
   14000640a:	mov    rax,QWORD PTR [rbp+0x18]
   14000640e:	mov    QWORD PTR [rbp+0x10],rax
   140006412:	call   QWORD PTR [rip+0x1d50]        # 0x140008168
   140006418:	mov    eax,eax
   14000641a:	xor    QWORD PTR [rbp+0x10],rax
   14000641e:	call   QWORD PTR [rip+0x1d4c]        # 0x140008170
   140006424:	mov    eax,eax
   140006426:	xor    QWORD PTR [rbp+0x10],rax
   14000642a:	call   QWORD PTR [rip+0x1df8]        # 0x140008228
   140006430:	mov    eax,eax
   140006432:	shl    rax,0x18
   140006436:	xor    QWORD PTR [rbp+0x10],rax
   14000643a:	call   QWORD PTR [rip+0x1de8]        # 0x140008228
   140006440:	mov    eax,eax
   140006442:	lea    rcx,[rbp+0x10]
   140006446:	xor    rax,QWORD PTR [rbp+0x10]
   14000644a:	xor    rax,rcx
   14000644d:	lea    rcx,[rbp+0x20]
   140006451:	mov    QWORD PTR [rbp+0x10],rax
   140006455:	call   QWORD PTR [rip+0x1d35]        # 0x140008190
   14000645b:	mov    eax,DWORD PTR [rbp+0x20]
   14000645e:	movabs rcx,0xffffffffffff
   140006468:	shl    rax,0x20
   14000646c:	xor    rax,QWORD PTR [rbp+0x20]
   140006470:	xor    rax,QWORD PTR [rbp+0x10]
   140006474:	and    rax,rcx
   140006477:	movabs rcx,0x2b992ddfa233
   140006481:	cmp    rax,rbx
   140006484:	cmove  rax,rcx
   140006488:	mov    QWORD PTR [rip+0x7b79],rax        # 0x14000e008
   14000648f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006494:	not    rax
   140006497:	mov    QWORD PTR [rip+0x7b72],rax        # 0x14000e010
   14000649e:	add    rsp,0x20
   1400064a2:	pop    rbp
   1400064a3:	ret    
   1400064a4:	int3   
   1400064a5:	int3   
   1400064a6:	int3   
   1400064a7:	int3   
   1400064a8:	int3   
   1400064a9:	int3   
   1400064aa:	jmp    QWORD PTR [rip+0x1e88]        # 0x140008338
   1400064b0:	int3   
   1400064b1:	int3   
   1400064b2:	int3   
   1400064b3:	int3   
   1400064b4:	int3   
   1400064b5:	int3   
   1400064b6:	jmp    QWORD PTR [rip+0x1e74]        # 0x140008330
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	int3   
   1400064c1:	int3   
   1400064c2:	int3   
   1400064c3:	int3   
   1400064c4:	rex push rbx
   1400064c6:	sub    rsp,0x20
   1400064ca:	mov    rbx,rcx
   1400064cd:	xor    ecx,ecx
   1400064cf:	call   QWORD PTR [rip+0x1b7b]        # 0x140008050
   1400064d5:	mov    rcx,rbx
   1400064d8:	call   QWORD PTR [rip+0x1b82]        # 0x140008060
   1400064de:	call   QWORD PTR [rip+0x1c94]        # 0x140008178
   1400064e4:	mov    rcx,rax
   1400064e7:	mov    edx,0xc0000409
   1400064ec:	add    rsp,0x20
   1400064f0:	pop    rbx
   1400064f1:	rex.W jmp QWORD PTR [rip+0x1c88]        # 0x140008180
   1400064f8:	int3   
   1400064f9:	int3   
   1400064fa:	int3   
   1400064fb:	int3   
   1400064fc:	int3   
   1400064fd:	int3   
   1400064fe:	int3   
   1400064ff:	int3   
   140006500:	mov    QWORD PTR [rsp+0x8],rcx
   140006505:	sub    rsp,0x88
   14000650c:	lea    rcx,[rip+0x7d3d]        # 0x14000e250
   140006513:	call   QWORD PTR [rip+0x1ca7]        # 0x1400081c0
   140006519:	mov    rax,QWORD PTR [rip+0x7e28]        # 0x14000e348
   140006520:	mov    QWORD PTR [rsp+0x48],rax
   140006525:	xor    r8d,r8d
   140006528:	lea    rdx,[rsp+0x50]
   14000652d:	mov    rcx,QWORD PTR [rsp+0x48]
   140006532:	call   QWORD PTR [rip+0x1c98]        # 0x1400081d0
   140006538:	mov    QWORD PTR [rsp+0x40],rax
   14000653d:	cmp    QWORD PTR [rsp+0x40],0x0
   140006543:	je     0x140006587
   140006545:	mov    QWORD PTR [rsp+0x38],0x0
   14000654e:	lea    rax,[rsp+0x58]
   140006553:	mov    QWORD PTR [rsp+0x30],rax
   140006558:	lea    rax,[rsp+0x60]
   14000655d:	mov    QWORD PTR [rsp+0x28],rax
   140006562:	lea    rax,[rip+0x7ce7]        # 0x14000e250
   140006569:	mov    QWORD PTR [rsp+0x20],rax
   14000656e:	mov    r9,QWORD PTR [rsp+0x40]
   140006573:	mov    r8,QWORD PTR [rsp+0x48]
   140006578:	mov    rdx,QWORD PTR [rsp+0x50]
   14000657d:	xor    ecx,ecx
   14000657f:	call   QWORD PTR [rip+0x1c43]        # 0x1400081c8
   140006585:	jmp    0x1400065aa
   140006587:	mov    rax,QWORD PTR [rip+0x7d5a]        # 0x14000e2e8
   14000658e:	mov    rax,QWORD PTR [rax]
   140006591:	mov    QWORD PTR [rip+0x7db0],rax        # 0x14000e348
   140006598:	mov    rax,QWORD PTR [rip+0x7d49]        # 0x14000e2e8
   14000659f:	add    rax,0x8
   1400065a3:	mov    QWORD PTR [rip+0x7d3e],rax        # 0x14000e2e8
   1400065aa:	mov    rax,QWORD PTR [rip+0x7d97]        # 0x14000e348
   1400065b1:	mov    QWORD PTR [rip+0x7c08],rax        # 0x14000e1c0
   1400065b8:	mov    rax,QWORD PTR [rsp+0x90]
   1400065c0:	mov    QWORD PTR [rip+0x7d09],rax        # 0x14000e2d0
   1400065c7:	mov    DWORD PTR [rip+0x7bdf],0xc0000409        # 0x14000e1b0
   1400065d1:	mov    DWORD PTR [rip+0x7bd9],0x1        # 0x14000e1b4
   1400065db:	mov    DWORD PTR [rip+0x7be3],0x3        # 0x14000e1c8
   1400065e5:	mov    eax,0x8
   1400065ea:	imul   rax,rax,0x0
   1400065ee:	lea    rcx,[rip+0x7bdb]        # 0x14000e1d0
   1400065f5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400065fd:	mov    eax,0x8
   140006602:	imul   rax,rax,0x1
   140006606:	lea    rcx,[rip+0x7bc3]        # 0x14000e1d0
   14000660d:	mov    rdx,QWORD PTR [rip+0x79f4]        # 0x14000e008
   140006614:	mov    QWORD PTR [rcx+rax*1],rdx
   140006618:	mov    eax,0x8
   14000661d:	imul   rax,rax,0x2
   140006621:	lea    rcx,[rip+0x7ba8]        # 0x14000e1d0
   140006628:	mov    rdx,QWORD PTR [rip+0x79e1]        # 0x14000e010
   14000662f:	mov    QWORD PTR [rcx+rax*1],rdx
   140006633:	mov    eax,0x8
   140006638:	imul   rax,rax,0x0
   14000663c:	mov    rcx,QWORD PTR [rip+0x79c5]        # 0x14000e008
   140006643:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140006648:	mov    eax,0x8
   14000664d:	imul   rax,rax,0x1
   140006651:	mov    rcx,QWORD PTR [rip+0x79b8]        # 0x14000e010
   140006658:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000665d:	lea    rcx,[rip+0x326c]        # 0x1400098d0
   140006664:	call   0x1400064c4
   140006669:	add    rsp,0x88
   140006670:	ret    
   140006671:	int3   
   140006672:	int3   
   140006673:	int3   
   140006674:	int3   
   140006675:	int3   
   140006676:	int3   
   140006677:	int3   
   140006678:	sub    rsp,0x78
   14000667c:	lea    rcx,[rip+0x7bcd]        # 0x14000e250
   140006683:	call   QWORD PTR [rip+0x1b37]        # 0x1400081c0
   140006689:	mov    rax,QWORD PTR [rip+0x7cb8]        # 0x14000e348
   140006690:	mov    QWORD PTR [rsp+0x48],rax
   140006695:	xor    r8d,r8d
   140006698:	lea    rdx,[rsp+0x50]
   14000669d:	mov    rcx,QWORD PTR [rsp+0x48]
   1400066a2:	call   QWORD PTR [rip+0x1b28]        # 0x1400081d0
   1400066a8:	mov    QWORD PTR [rsp+0x40],rax
   1400066ad:	cmp    QWORD PTR [rsp+0x40],0x0
   1400066b3:	je     0x1400066f7
   1400066b5:	mov    QWORD PTR [rsp+0x38],0x0
   1400066be:	lea    rax,[rsp+0x58]
   1400066c3:	mov    QWORD PTR [rsp+0x30],rax
   1400066c8:	lea    rax,[rsp+0x60]
   1400066cd:	mov    QWORD PTR [rsp+0x28],rax
   1400066d2:	lea    rax,[rip+0x7b77]        # 0x14000e250
   1400066d9:	mov    QWORD PTR [rsp+0x20],rax
   1400066de:	mov    r9,QWORD PTR [rsp+0x40]
   1400066e3:	mov    r8,QWORD PTR [rsp+0x48]
   1400066e8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400066ed:	xor    ecx,ecx
   1400066ef:	call   QWORD PTR [rip+0x1ad3]        # 0x1400081c8
   1400066f5:	jmp    0x14000671a
   1400066f7:	mov    rax,QWORD PTR [rip+0x7bea]        # 0x14000e2e8
   1400066fe:	mov    rax,QWORD PTR [rax]
   140006701:	mov    QWORD PTR [rip+0x7c40],rax        # 0x14000e348
   140006708:	mov    rax,QWORD PTR [rip+0x7bd9]        # 0x14000e2e8
   14000670f:	add    rax,0x8
   140006713:	mov    QWORD PTR [rip+0x7bce],rax        # 0x14000e2e8
   14000671a:	mov    rax,QWORD PTR [rip+0x7c27]        # 0x14000e348
   140006721:	mov    QWORD PTR [rip+0x7a98],rax        # 0x14000e1c0
   140006728:	mov    DWORD PTR [rip+0x7a7e],0xc0000409        # 0x14000e1b0
   140006732:	mov    DWORD PTR [rip+0x7a78],0x1        # 0x14000e1b4
   14000673c:	mov    DWORD PTR [rip+0x7a82],0x1        # 0x14000e1c8
   140006746:	mov    eax,0x8
   14000674b:	imul   rax,rax,0x0
   14000674f:	lea    rcx,[rip+0x7a7a]        # 0x14000e1d0
   140006756:	mov    QWORD PTR [rcx+rax*1],0x8
   14000675e:	lea    rcx,[rip+0x316b]        # 0x1400098d0
   140006765:	call   0x1400064c4
   14000676a:	add    rsp,0x78
   14000676e:	ret    
   14000676f:	int3   
   140006770:	int3   
   140006771:	int3   
   140006772:	int3   
   140006773:	int3   
   140006774:	int3   
   140006775:	int3   
   140006776:	jmp    QWORD PTR [rip+0x1b8c]        # 0x140008308
   14000677c:	int3   
   14000677d:	int3   
   14000677e:	int3   
   14000677f:	int3   
   140006780:	int3   
   140006781:	int3   
   140006782:	jmp    QWORD PTR [rip+0x1b78]        # 0x140008300
   140006788:	int3   
   140006789:	int3   
   14000678a:	int3   
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	jmp    QWORD PTR [rip+0x1b64]        # 0x1400082f8
   140006794:	int3   
   140006795:	int3   
   140006796:	int3   
   140006797:	int3   
   140006798:	int3   
   140006799:	int3   
   14000679a:	int3   
   14000679b:	int3   
   14000679c:	int3   
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	int3   
   1400067a1:	int3   
   1400067a2:	int3   
   1400067a3:	int3   
   1400067a4:	int3   
   1400067a5:	int3   
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	int3   
   1400067ad:	int3   
   1400067ae:	int3   
   1400067af:	int3   
   1400067b0:	lea    rax,[rip+0x9859]        # 0x140010010
   1400067b7:	jmp    0x1400067d0
   1400067bc:	int3   
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	int3   
   1400067c1:	int3   
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	int3   
   1400067c5:	int3   
   1400067c6:	int3   
   1400067c7:	int3   
   1400067c8:	int3   
   1400067c9:	int3   
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400067d5:	mov    QWORD PTR [rsp+0x10],rdx
   1400067da:	mov    QWORD PTR [rsp+0x18],r8
   1400067df:	mov    QWORD PTR [rsp+0x20],r9
   1400067e4:	sub    rsp,0x68
   1400067e8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400067ee:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400067f4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400067fa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140006800:	mov    rdx,rax
   140006803:	lea    rcx,[rip+0x6546]        # 0x14000cd50
   14000680a:	call   0x140005940
   14000680f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140006815:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000681b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140006821:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140006827:	mov    rcx,QWORD PTR [rsp+0x70]
   14000682c:	mov    rdx,QWORD PTR [rsp+0x78]
   140006831:	mov    r8,QWORD PTR [rsp+0x80]
   140006839:	mov    r9,QWORD PTR [rsp+0x88]
   140006841:	add    rsp,0x68
   140006845:	jmp    0x140006847
   140006847:	jmp    rax
   140006849:	int3   
   14000684a:	int3   
   14000684b:	int3   
   14000684c:	int3   
   14000684d:	int3   
   14000684e:	int3   
   14000684f:	int3   
   140006850:	jmp    QWORD PTR [rip+0x17ea]        # 0x140008040
   140006856:	int3   
   140006857:	int3   
   140006858:	int3   
   140006859:	int3   
   14000685a:	int3   
   14000685b:	int3   
   14000685c:	int3   
   14000685d:	int3   
   14000685e:	int3   
   14000685f:	int3   
   140006860:	lea    rax,[rip+0x9799]        # 0x140010000
   140006867:	jmp    0x140006880
   14000686c:	int3   
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	int3   
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	int3   
   140006875:	int3   
   140006876:	int3   
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	mov    QWORD PTR [rsp+0x8],rcx
   140006885:	mov    QWORD PTR [rsp+0x10],rdx
   14000688a:	mov    QWORD PTR [rsp+0x18],r8
   14000688f:	mov    QWORD PTR [rsp+0x20],r9
   140006894:	sub    rsp,0x68
   140006898:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000689e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400068a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400068aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400068b0:	mov    rdx,rax
   1400068b3:	lea    rcx,[rip+0x64b6]        # 0x14000cd70
   1400068ba:	call   0x140005940
   1400068bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400068c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400068cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400068d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400068d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400068dc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400068e1:	mov    r8,QWORD PTR [rsp+0x80]
   1400068e9:	mov    r9,QWORD PTR [rsp+0x88]
   1400068f1:	add    rsp,0x68
   1400068f5:	jmp    0x1400068f7
   1400068f7:	jmp    rax
   1400068f9:	int3   
   1400068fa:	int3   
   1400068fb:	int3   
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	sub    rsp,0x28
   140006904:	mov    r8,QWORD PTR [r9+0x38]
   140006908:	mov    rcx,rdx
   14000690b:	mov    rdx,r9
   14000690e:	call   0x140006924
   140006913:	mov    eax,0x1
   140006918:	add    rsp,0x28
   14000691c:	ret    
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	int3   
   140006921:	int3   
   140006922:	int3   
   140006923:	int3   
   140006924:	rex push rbx
   140006926:	sub    rsp,0x20
   14000692a:	mov    r11d,DWORD PTR [r8]
   14000692d:	mov    rbx,rdx
   140006930:	and    r11d,0xfffffff8
   140006934:	mov    r9,rcx
   140006937:	test   BYTE PTR [r8],0x4
   14000693b:	mov    r10,rcx
   14000693e:	je     0x140006953
   140006940:	mov    eax,DWORD PTR [r8+0x8]
   140006944:	movsxd r10,DWORD PTR [r8+0x4]
   140006948:	neg    eax
   14000694a:	add    r10,rcx
   14000694d:	movsxd rcx,eax
   140006950:	and    r10,rcx
   140006953:	movsxd rax,r11d
   140006956:	mov    rdx,QWORD PTR [rax+r10*1]
   14000695a:	mov    rax,QWORD PTR [rbx+0x10]
   14000695e:	mov    ecx,DWORD PTR [rax+0x8]
   140006961:	add    rcx,QWORD PTR [rbx+0x8]
   140006965:	test   BYTE PTR [rcx+0x3],0xf
   140006969:	je     0x140006977
   14000696b:	movzx  eax,BYTE PTR [rcx+0x3]
   14000696f:	and    eax,0xfffffff0
   140006972:	cdqe   
   140006974:	add    r9,rax
   140006977:	xor    r9,rdx
   14000697a:	mov    rcx,r9
   14000697d:	add    rsp,0x20
   140006981:	pop    rbx
   140006982:	jmp    0x140005fe0
   140006987:	int3   
   140006988:	int3   
   140006989:	int3   
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	mov    rax,rsp
   140006993:	mov    QWORD PTR [rax+0x8],rbx
   140006997:	mov    QWORD PTR [rax+0x10],rbp
   14000699b:	mov    QWORD PTR [rax+0x18],rsi
   14000699f:	mov    QWORD PTR [rax+0x20],rdi
   1400069a3:	push   r14
   1400069a5:	sub    rsp,0x20
   1400069a9:	mov    rbx,QWORD PTR [r9+0x38]
   1400069ad:	mov    rsi,rdx
   1400069b0:	mov    r14,r8
   1400069b3:	mov    rbp,rcx
   1400069b6:	mov    rdx,r9
   1400069b9:	mov    rcx,rsi
   1400069bc:	mov    rdi,r9
   1400069bf:	lea    r8,[rbx+0x4]
   1400069c3:	call   0x140006924
   1400069c8:	mov    r11d,DWORD PTR [rbx+0x4]
   1400069cc:	mov    r8d,0x1
   1400069d2:	mov    r10d,DWORD PTR [rbp+0x4]
   1400069d6:	mov    eax,r11d
   1400069d9:	and    eax,r8d
   1400069dc:	and    r11d,0x2
   1400069e0:	and    r10b,0x66
   1400069e4:	cmove  r11d,eax
   1400069e8:	test   r11d,r11d
   1400069eb:	je     0x140006a01
   1400069ed:	mov    r9,rdi
   1400069f0:	mov    r8,r14
   1400069f3:	mov    rdx,rsi
   1400069f6:	mov    rcx,rbp
   1400069f9:	call   0x14000610e
   1400069fe:	mov    r8d,eax
   140006a01:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a06:	mov    eax,r8d
   140006a09:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a13:	mov    rdi,QWORD PTR [rsp+0x48]
   140006a18:	add    rsp,0x20
   140006a1c:	pop    r14
   140006a1e:	ret    
   140006a1f:	int3   
   140006a20:	int3   
   140006a21:	int3   
   140006a22:	int3   
   140006a23:	int3   
   140006a24:	int3   
   140006a25:	int3   
   140006a26:	jmp    QWORD PTR [rip+0x19d4]        # 0x140008400
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	int3   
   140006a31:	int3   
   140006a32:	int3   
   140006a33:	int3   
   140006a34:	int3   
   140006a35:	int3   
   140006a36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006a40:	jmp    rax
   140006a42:	int3   
   140006a43:	int3   
   140006a44:	int3   
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	int3   
   140006a49:	int3   
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	int3   
   140006a51:	int3   
   140006a52:	int3   
   140006a53:	int3   
   140006a54:	int3   
   140006a55:	int3   
   140006a56:	mov    QWORD PTR [rsp+0x10],rdx
   140006a5b:	push   rbp
   140006a5c:	sub    rsp,0x20
   140006a60:	mov    rbp,rdx
   140006a63:	mov    rcx,QWORD PTR [rbp+0x68]
   140006a67:	mov    QWORD PTR [rbp+0x68],rcx
   140006a6b:	xor    eax,eax
   140006a6d:	add    rcx,0x1
   140006a71:	je     0x140006a88
   140006a73:	cmp    rcx,0xffffffffffffffff
   140006a77:	ja     0x140006a83
   140006a79:	call   0x140005bc8
   140006a7e:	test   rax,rax
   140006a81:	jne    0x140006a88
   140006a83:	call   0x140005b48
   140006a88:	mov    QWORD PTR [rbp+0x78],rax
   140006a8c:	lea    rax,[rip+0xffffffffffffafe7]        # 0x140001a7a
   140006a93:	add    rsp,0x20
   140006a97:	pop    rbp
   140006a98:	ret    
   140006a99:	int3   
   140006a9a:	mov    QWORD PTR [rsp+0x10],rdx
   140006a9f:	push   rbp
   140006aa0:	sub    rsp,0x20
   140006aa4:	mov    rbp,rdx
   140006aa7:	xor    r8d,r8d
   140006aaa:	mov    dl,0x1
   140006aac:	mov    rcx,QWORD PTR [rbp+0x60]
   140006ab0:	call   0x1400016a0
   140006ab5:	xor    edx,edx
   140006ab7:	xor    ecx,ecx
   140006ab9:	call   0x140006102
   140006abe:	nop
   140006abf:	int3   
   140006ac0:	int3   
   140006ac1:	int3   
   140006ac2:	int3   
   140006ac3:	int3   
   140006ac4:	int3   
   140006ac5:	lea    rcx,[rdx+0xb8]
   140006acc:	jmp    0x140002c54
   140006ad1:	lea    rcx,[rdx+0x98]
   140006ad8:	jmp    0x1400029ac
   140006add:	lea    rcx,[rdx+0x90]
   140006ae4:	jmp    0x1400029ac
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	int3   
   140006aed:	int3   
   140006aee:	int3   
   140006aef:	lea    rcx,[rdx+0x34]
   140006af6:	jmp    0x140002c54
   140006afb:	lea    rcx,[rdx+0x40]
   140006b02:	jmp    0x1400029ac
   140006b07:	int3   
   140006b08:	int3   
   140006b09:	int3   
   140006b0a:	int3   
   140006b0b:	int3   
   140006b0c:	int3   
   140006b0d:	lea    rcx,[rdx+0x88]
   140006b14:	jmp    0x140002c54
   140006b19:	lea    rcx,[rdx+0x30]
   140006b20:	jmp    0x1400029ac
   140006b25:	int3   
   140006b26:	int3   
   140006b27:	int3   
   140006b28:	int3   
   140006b29:	int3   
   140006b2a:	int3   
   140006b2b:	lea    rcx,[rdx+0x98]
   140006b32:	jmp    0x140002c54
   140006b37:	lea    rcx,[rdx+0xa0]
   140006b3e:	jmp    0x1400029ac
   140006b43:	int3   
   140006b44:	int3   
   140006b45:	int3   
   140006b46:	int3   
   140006b47:	int3   
   140006b48:	int3   
   140006b49:	lea    rcx,[rdx+0xd8]
   140006b50:	jmp    0x140002c54
   140006b55:	lea    rcx,[rdx+0xe0]
   140006b5c:	jmp    0x1400029ac
   140006b61:	int3   
   140006b62:	int3   
   140006b63:	int3   
   140006b64:	int3   
   140006b65:	int3   
   140006b66:	int3   
   140006b67:	lea    rcx,[rdx+0x60]
   140006b6e:	jmp    0x140002c54
   140006b73:	lea    rcx,[rdx+0x48]
   140006b7a:	jmp    0x140003eec
   140006b7f:	lea    rcx,[rdx+0x40]
   140006b86:	jmp    0x140003eec
   140006b8b:	lea    rcx,[rdx+0x38]
   140006b92:	jmp    0x140003eec
   140006b97:	lea    rcx,[rdx+0x50]
   140006b9e:	jmp    0x140003eec
   140006ba3:	lea    rcx,[rdx+0x58]
   140006baa:	jmp    0x140003eec
   140006baf:	int3   
   140006bb0:	int3   
   140006bb1:	int3   
   140006bb2:	int3   
   140006bb3:	int3   
   140006bb4:	int3   
   140006bb5:	lea    rcx,[rdx+0x38]
   140006bbc:	jmp    0x140003eec
   140006bc1:	lea    rcx,[rdx+0xa8]
   140006bc8:	jmp    0x140003eec
   140006bcd:	lea    rcx,[rdx+0x90]
   140006bd4:	jmp    0x140003eec
   140006bd9:	int3   
   140006bda:	int3   
   140006bdb:	int3   
   140006bdc:	int3   
   140006bdd:	int3   
   140006bde:	int3   
   140006bdf:	rex push rbp
   140006be1:	sub    rsp,0x20
   140006be5:	mov    rbp,rdx
   140006be8:	mov    rax,QWORD PTR [rcx]
   140006beb:	mov    rdx,rcx
   140006bee:	mov    ecx,DWORD PTR [rax]
   140006bf0:	call   0x14000621e
   140006bf5:	nop
   140006bf6:	add    rsp,0x20
   140006bfa:	pop    rbp
   140006bfb:	ret    
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	int3   
   140006c01:	int3   
   140006c02:	int3   
   140006c03:	rex push rbp
   140006c05:	sub    rsp,0x20
   140006c09:	mov    rbp,rdx
   140006c0c:	mov    ecx,0x8
   140006c11:	call   0x140006782
   140006c16:	nop
   140006c17:	add    rsp,0x20
   140006c1b:	pop    rbp
   140006c1c:	ret    
   140006c1d:	int3   
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	int3   
   140006c21:	int3   
   140006c22:	int3   
   140006c23:	int3   
   140006c24:	mov    QWORD PTR [rsp+0x10],rdx
   140006c29:	push   rbp
   140006c2a:	sub    rsp,0x20
   140006c2e:	mov    rbp,rdx
   140006c31:	and    QWORD PTR [rbp+0x50],0x0
   140006c36:	lea    rax,[rip+0xfffffffffffff4b4]        # 0x1400060f1
   140006c3d:	add    rsp,0x20
   140006c41:	pop    rbp
   140006c42:	ret    
   140006c43:	int3   
   140006c44:	int3   
   140006c45:	int3   
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	rex push rbp
   140006c52:	sub    rsp,0x20
   140006c56:	mov    rbp,rdx
   140006c59:	mov    rax,QWORD PTR [rcx]
   140006c5c:	xor    ecx,ecx
   140006c5e:	cmp    DWORD PTR [rax],0xc0000005
   140006c64:	sete   cl
   140006c67:	mov    eax,ecx
   140006c69:	add    rsp,0x20
   140006c6d:	pop    rbp
   140006c6e:	ret    
   140006c6f:	int3   
   140006c70:	int3   
   140006c71:	int3   
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	int3   
   140006c75:	int3   
   140006c76:	int3   
   140006c77:	int3   
   140006c78:	int3   
   140006c79:	int3   
   140006c7a:	int3   
   140006c7b:	int3   
   140006c7c:	int3   
   140006c7d:	int3   
   140006c7e:	int3   
   140006c7f:	int3   
   140006c80:	lea    rax,[rip+0x32e9]        # 0x140009f70
   140006c87:	mov    QWORD PTR [rip+0x73da],rax        # 0x14000e068
   140006c8e:	ret    
   140006c8f:	int3   
   140006c90:	int3   
   140006c91:	int3   
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	int3   
   140006c95:	int3   
   140006c96:	int3   
   140006c97:	int3   
   140006c98:	int3   
   140006c99:	int3   
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	lea    rax,[rip+0x32c9]        # 0x140009f70
   140006ca7:	mov    QWORD PTR [rip+0x73c2],rax        # 0x14000e070
   140006cae:	ret    
   140006caf:	int3   
   140006cb0:	int3   
   140006cb1:	int3   
   140006cb2:	int3   
   140006cb3:	int3   
   140006cb4:	int3   
   140006cb5:	int3   
   140006cb6:	int3   
   140006cb7:	int3   
   140006cb8:	int3   
   140006cb9:	int3   
   140006cba:	int3   
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	lea    rax,[rip+0x32a9]        # 0x140009f70
   140006cc7:	mov    QWORD PTR [rip+0x73b2],rax        # 0x14000e080
   140006cce:	ret    
   140006ccf:	int3   
   140006cd0:	int3   
   140006cd1:	int3   
   140006cd2:	int3   
   140006cd3:	int3   
   140006cd4:	int3   
   140006cd5:	int3   
   140006cd6:	int3   
   140006cd7:	int3   
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	sub    rsp,0x28
   140006ce4:	call   0x140004ff4
   140006ce9:	mov    rcx,QWORD PTR [rip+0x7b00]        # 0x14000e7f0
   140006cf0:	test   rcx,rcx
   140006cf3:	je     0x140006d03
   140006cf5:	call   QWORD PTR [rip+0x13b5]        # 0x1400080b0
   140006cfb:	and    QWORD PTR [rip+0x7aed],0x0        # 0x14000e7f0
   140006d03:	add    rsp,0x28
   140006d07:	ret    
   140006d08:	int3   
   140006d09:	int3   
   140006d0a:	int3   
   140006d0b:	int3   
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	rex push rbx
   140006d12:	sub    rsp,0x20
   140006d16:	lea    r9,[rsp+0x38]
   140006d1b:	xor    edx,edx
   140006d1d:	lea    r8,[rsp+0x30]
   140006d22:	lea    rcx,[rip+0x7a57]        # 0x14000e780
   140006d29:	call   QWORD PTR [rip+0x14e1]        # 0x140008210
   140006d2f:	test   eax,eax
   140006d31:	je     0x140006d65
   140006d33:	cmp    DWORD PTR [rsp+0x30],0x0
   140006d38:	jne    0x140006d65
   140006d3a:	mov    rbx,QWORD PTR [rsp+0x38]
   140006d3f:	lea    rax,[rip+0x338a]        # 0x14000a0d0
   140006d46:	cmp    BYTE PTR [rbx+0x10],0x0
   140006d4a:	mov    QWORD PTR [rbx],rax
   140006d4d:	je     0x140006d65
   140006d4f:	mov    rbx,QWORD PTR [rbx+0x8]
   140006d53:	mov    rcx,QWORD PTR [rbx+0x20]
   140006d57:	call   QWORD PTR [rip+0x1553]        # 0x1400082b0
   140006d5d:	and    QWORD PTR [rbx+0x20],0x0
   140006d62:	and    DWORD PTR [rbx],0x0
   140006d65:	add    rsp,0x20
   140006d69:	pop    rbx
   140006d6a:	ret    
   140006d6b:	int3   
   140006d6c:	int3   
   140006d6d:	int3   
   140006d6e:	int3   
   140006d6f:	int3   
   140006d70:	int3   
   140006d71:	int3   
   140006d72:	int3   
   140006d73:	int3   
   140006d74:	int3   
   140006d75:	int3   
   140006d76:	int3   
   140006d77:	int3   
   140006d78:	int3   
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	int3   
   140006d7d:	int3   
   140006d7e:	int3   
   140006d7f:	int3   
   140006d80:	mov    QWORD PTR [rsp+0x18],rbx
   140006d85:	push   rdi
   140006d86:	sub    rsp,0x20
   140006d8a:	lea    r9,[rsp+0x38]
   140006d8f:	xor    edx,edx
   140006d91:	lea    r8,[rsp+0x30]
   140006d96:	lea    rcx,[rip+0x7a0b]        # 0x14000e7a8
   140006d9d:	call   QWORD PTR [rip+0x146d]        # 0x140008210
   140006da3:	test   eax,eax
   140006da5:	je     0x140006dca
   140006da7:	cmp    DWORD PTR [rsp+0x30],0x0
   140006dac:	jne    0x140006dca
   140006dae:	mov    rdi,QWORD PTR [rsp+0x38]
   140006db3:	mov    rax,QWORD PTR [rdi]
   140006db6:	mov    rbx,QWORD PTR [rax+0x18]
   140006dba:	mov    rcx,rbx
   140006dbd:	call   QWORD PTR [rip+0x164d]        # 0x140008410
   140006dc3:	xor    edx,edx
   140006dc5:	mov    rcx,rdi
   140006dc8:	call   rbx
   140006dca:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dcf:	add    rsp,0x20
   140006dd3:	pop    rdi
   140006dd4:	ret    

Disassembly of section .imrsiv:

0000000140007000 <.imrsiv>:
   140007000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	cwde   
   140008001:	xlat   BYTE PTR ds:[rbx]
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	stos   BYTE PTR es:[rdi],al
   140008009:	xlat   BYTE PTR ds:[rbx]
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	mov    esp,0xd7
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    dl,bl
   140008019:	xlat   BYTE PTR ds:[rbx]
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	mov    eax,ds
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	(bad)  
   140008029:	fadd   DWORD PTR [rax]
	...
   140008037:	add    BYTE PTR [rsi+rbx*8],bh
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	push   rsp
   140008041:	fiadd  WORD PTR [rax]
	...
   14000804f:	add    BYTE PTR [rsi],cl
   140008051:	fld    DWORD PTR [rax]
   140008053:	add    BYTE PTR [rax],al
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax-0x28],dl
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	(bad)  
   140008061:	fld    DWORD PTR [rax]
   140008063:	add    BYTE PTR [rax],al
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rdi+rdx*8+0x0],bh
	...
   140008077:	add    BYTE PTR [rsi],al
   140008079:	fadd   DWORD PTR [rax]
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rbx*8+0x0],bh
   140008086:	add    BYTE PTR [rax],al
   140008088:	in     al,dx
   140008089:	fld    QWORD PTR [rax]
   14000808b:	add    BYTE PTR [rax],al
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    BYTE PTR [rax],al
   140008091:	fiadd  WORD PTR [rax]
	...
   14000809f:	add    dh,al
   1400080a1:	fadd   DWORD PTR [rax]
	...
   1400080af:	add    BYTE PTR [rdi+rdx*8+0x0],cl
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	cmp    al,0xda
	...
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	add    bh,bl
	...
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	fcom   st(6)
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	mov    dl,0xd6
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	(bad)  
   1400080e9:	(bad)  
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	int3   
   1400080f1:	xlat   BYTE PTR ds:[rbx]
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	pushf  
   1400080f9:	(bad)  
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	mov    dl,dh
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	sub    bl,dl
	...
   14000811e:	add    BYTE PTR [rax],al
   140008120:	fiadd  WORD PTR es:[rax]
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rsi],dl
   140008129:	fiadd  WORD PTR [rax]
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rax+0xdd],ch
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    dl,bl
   140008139:	fld    QWORD PTR [rax]
   14000813b:	add    BYTE PTR [rax],al
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    al,al
   140008141:	fld    QWORD PTR [rax]
	...
   14000814f:	add    BYTE PTR [rdx-0x29],ch
	...
   14000815e:	add    BYTE PTR [rax],al
   140008160:	cld    
   140008161:	fadd   DWORD PTR [rax]
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rsi-0x27],al
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	pop    rsp
   140008171:	fld    DWORD PTR [rax]
   140008173:	add    BYTE PTR [rax],al
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    dl,ch
   140008179:	fld    DWORD PTR [rax]
   14000817b:	add    BYTE PTR [rax],al
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    dh,bh
   140008181:	fld    DWORD PTR [rax]
	...
   14000818f:	add    BYTE PTR [rcx+rbx*8],ch
	...
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	mov    ch,bl
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	add    BYTE PTR [rax],al
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	jp     0x140008187
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	cwde   
   1400081b1:	fld    QWORD PTR [rax]
	...
   1400081bf:	add    BYTE PTR [rcx+rbx*8+0x0],cl
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	mov    edx,0xd9
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rax+0xd9],ah
	...
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rdx],bl
   1400081e1:	fild   WORD PTR [rax]
	...
   1400081ef:	add    BYTE PTR [rax],dh
   1400081f1:	xlat   BYTE PTR ds:[rbx]
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    BYTE PTR [rax],al
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	test   al,0xd8
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	add    BYTE PTR [rax],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	mov    edx,0xd8
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    ah,dh
   140008209:	fadd   DWORD PTR [rax]
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rsi],dl
   140008211:	xlat   BYTE PTR ds:[rbx]
	...
   14000821e:	add    BYTE PTR [rax],al
   140008220:	and    al,bl
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	jl     0x140008202
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	add    BYTE PTR [rax],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	jb     0x14000820b
	...
   14000823e:	add    BYTE PTR [rax],al
   140008240:	out    dx,al
   140008241:	xlat   BYTE PTR ds:[rbx]
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	adc    bl,dl
	...
   140008256:	add    BYTE PTR [rax],al
   140008258:	(bad)  
   140008259:	fadd   DWORD PTR [rax]
	...
   140008267:	add    BYTE PTR [rax],dh
   140008269:	fadd   DWORD PTR [rax]
	...
   140008277:	add    BYTE PTR [rdx-0x23],cl
   14000827a:	add    BYTE PTR [rax],al
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    BYTE PTR [rax],al
   140008280:	pop    rax
   140008281:	fld    QWORD PTR [rax]
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rax-0x23],ch
	...
   140008296:	add    BYTE PTR [rax],al
   140008298:	or     al,0xdf
	...
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	add    bh,dl
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	out    dx,al
   1400082b1:	(bad)  
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	rex.R xlat BYTE PTR ds:[rbx]
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	pop    rdx
   1400082c1:	xlat   BYTE PTR ds:[rbx]
	...
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	(bad)  
   1400082d1:	fadd   QWORD PTR [rax]
	...
   1400082df:	add    BYTE PTR [rsi],ch
   1400082e1:	fld    QWORD PTR [rax]
   1400082e3:	add    BYTE PTR [rax],al
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rdx-0x2a],dh
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	push   0xd6
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    BYTE PTR [rdx-0x2a],bl
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	push   rax
   140008301:	(bad)  
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	rex.W (bad) 
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	xor    al,0xd6
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	sbb    al,0xd6
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	adc    dl,dh
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	or     dh,dl
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	lock (bad) 
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	in     al,0xd5
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	add    BYTE PTR [rax],al
   14000833e:	add    BYTE PTR [rax],al
   140008340:	rcl    ch,1
   140008342:	add    BYTE PTR [rax],al
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	(bad)  
   140008349:	(bad)  
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	mov    esi,0xd5
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rax-0x2c],dl
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008361:	(bad)  
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	xchg   edx,eax
   140008369:	(bad)  
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	test   ch,dl
   140008372:	add    BYTE PTR [rax],al
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	jbe    0x14000834f
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	push   0xffffffffffffffd5
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	(bad)  
   140008389:	(bad)  
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	rex.X (bad) 
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	sub    dl,ch
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	or     al,0xd5
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	add    BYTE PTR [rax],al
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	in     al,dx
   1400083a9:	(bad)  
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    BYTE PTR [rax],al
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	int3   
   1400083b1:	(bad)  
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	add    BYTE PTR [rax],al
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	ret    0xd4
   1400083bb:	add    BYTE PTR [rax],al
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    BYTE PTR [rsp+rdx*8+0x0],ch
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	xchg   esi,eax
   1400083c9:	(bad)  
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	mov    dl,ah
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	adc    ah,0x0
   1400083db:	add    BYTE PTR [rax],al
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rsi-0x2c],dh
   1400083e2:	add    BYTE PTR [rax],al
   1400083e4:	add    BYTE PTR [rax],al
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	push   0xffffffffffffffd4
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	(bad)  
   1400083f1:	(bad)  
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	add    BYTE PTR [rax],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	mov    dh,0xd5
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	jl     0x1400083e1
	...
   14000840e:	add    BYTE PTR [rax],al
   140008410:	and    BYTE PTR [rax],al
   140008413:	rex add DWORD PTR [rax],eax
   140008416:	add    BYTE PTR [rax],al
   140008418:	rex push 0x0
   14000841b:	rex add DWORD PTR [rax],eax
	...
   140008426:	add    BYTE PTR [rax],al
   140008428:	loopne 0x140008486
   14000842a:	add    BYTE PTR [rax+0x1],al
   14000842d:	add    BYTE PTR [rax],al
   14000842f:	add    BYTE PTR [rax+0x1400011],al
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rax+0x1400011],dh
   14000843d:	add    BYTE PTR [rax],al
   14000843f:	add    al,al
   140008441:	adc    DWORD PTR [rax],eax
   140008443:	rex add DWORD PTR [rax],eax
   140008446:	add    BYTE PTR [rax],al
   140008448:	rcl    BYTE PTR [rcx],1
   14000844a:	add    BYTE PTR [rax+0x1],al
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    al,ah
   140008451:	adc    DWORD PTR [rax],eax
   140008453:	rex add DWORD PTR [rax],eax
	...
   140008466:	add    BYTE PTR [rax],al
   140008468:	add    BYTE PTR [rax+rax*1+0x40],bl
   14000846c:	add    DWORD PTR [rax],eax
   14000846e:	add    BYTE PTR [rax],al
   140008470:	add    BYTE PTR [rdx+0x0],ah
   140008473:	rex add DWORD PTR [rax],eax
	...
   14000847e:	add    BYTE PTR [rax],al
   140008480:	adc    BYTE PTR [rax],dl
   140008482:	add    BYTE PTR [rax],al
   140008484:	adc    BYTE PTR [rcx],0x0
   140008487:	add    BYTE PTR [rax-0x3fffffef],dh
   14000848d:	adc    DWORD PTR [rax],eax
   14000848f:	add    al,dl
   140008491:	adc    DWORD PTR [rax],eax
   140008493:	add    al,ah
   140008495:	adc    DWORD PTR [rax],eax
   140008497:	add    BYTE PTR [rax],al
   140008499:	adc    al,BYTE PTR [rax]
   14000849b:	add    BYTE PTR [rax],dh
   14000849d:	adc    al,BYTE PTR [rax]
   14000849f:	add    BYTE PTR [rax+0x12],dl
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	rcl    BYTE PTR [rdx],0x0
   1400084a7:	add    al,ah
   1400084a9:	adc    al,BYTE PTR [rax]
   1400084ab:	add    al,dh
   1400084ad:	adc    al,BYTE PTR [rax]
   1400084af:	add    BYTE PTR [rax+0x13],ah
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	jo     0x1400084c9
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	rcl    BYTE PTR [rbx],0x0
   1400084bb:	add    al,dl
   1400084bd:	adc    eax,DWORD PTR [rax]
   1400084bf:	add    BYTE PTR [rax+0x14],al
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	nop
   1400084c5:	adc    al,0x0
   1400084c7:	add    BYTE PTR [rax-0x3fffffec],dh
   1400084cd:	adc    eax,0x16100000
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	movabs al,ds:0x4000001fd000001e
   1400084dd:	and    BYTE PTR [rax],al
   1400084df:	add    al,al
   1400084e1:	and    eax,0x44800000
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	movabs al,ds:0x6000004530000044
   1400084f1:	rex.RX add BYTE PTR [rax],r8b
   1400084f4:	add    BYTE PTR [rsi+0x0],0x0
   1400084f8:	add    BYTE PTR [rdi+0x0],al
   1400084fb:	add    BYTE PTR [rax+0x47],dh
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	add    BYTE PTR [rdi+0x0],0x0
   140008504:	nop
   140008505:	rex.RXB add BYTE PTR [r8],r8b
   140008508:	movabs al,ds:0xc000004830000047
   140008511:	rex.W add BYTE PTR [rax],al
   140008514:	push   rax
   140008515:	rex.WB add BYTE PTR [r8],al
   140008518:	ror    BYTE PTR [rcx+0x0],1
   14000851b:	add    BYTE PTR [rax],ah
   14000851d:	rex.WX add BYTE PTR [rax],al
   140008520:	rex pop rcx
   140008522:	add    BYTE PTR [rax],al
   140008524:	rcr    BYTE PTR [rdx+0x0],1
   140008527:	add    BYTE PTR [rax],dl
   140008529:	pop    rbx
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    BYTE PTR [rax+rax*1+0x0],bl
   140008530:	loopne 0x14000858e
   140008532:	add    BYTE PTR [rax],al
   140008534:	mov    al,0x5f
   140008536:	add    BYTE PTR [rax],al
   140008538:	shl    BYTE PTR [rax+0x0],1
   14000853b:	add    BYTE PTR [rax+0x61],ah
   14000853e:	add    BYTE PTR [rax],al
   140008540:	jo     0x1400085a3
   140008542:	add    BYTE PTR [rax],al
   140008544:	shl    BYTE PTR [rcx+0x0],0x0
   140008548:	add    BYTE PTR [rdx+0x0],ah
   14000854b:	add    al,ah
   14000854d:	(bad)  
   14000854e:	add    BYTE PTR [rax],al
   140008550:	add    BYTE PTR [rbp+0x0],ah
   140008553:	add    BYTE PTR [rax-0x2fffff99],dh
   140008559:	add    BYTE PTR [eax],al
   14000855c:	push   rax
   14000855d:	push   0x68600000
   140008562:	add    BYTE PTR [rax],al
   140008564:	sub    BYTE PTR [rax+0x0],0x0
   140008568:	sub    BYTE PTR [rax+rax*1+0x0],0xa0
   14000856d:	ins    BYTE PTR es:[rdi],dx
   14000856e:	add    BYTE PTR [rax],al
   140008570:	shr    BYTE PTR [rax+rax*1+0x0],0xe0
   140008575:	ins    BYTE PTR es:[rdi],dx
   140008576:	add    BYTE PTR [rax],al
   140008578:	adc    BYTE PTR [rbp+0x0],ch
   14000857b:	add    BYTE PTR [rax+0x500006d],al
   140008581:	add    BYTE PTR [rax],al
   140008583:	add    BYTE PTR [rax],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rax],dh
   140008589:	mov    al,BYTE PTR [rax]
   14000858b:	rex add DWORD PTR [rax],eax
   14000858e:	add    BYTE PTR [rax],al
   140008590:	mov    bh,0x0
   140008592:	add    BYTE PTR [rax],al
   140008594:	add    BYTE PTR [rax],al
   140008596:	add    BYTE PTR [rax],al
   140008598:	rex.W mov al,BYTE PTR [rax]
   14000859b:	rex add DWORD PTR [rax],eax
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	adc    al,0x0
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	add    BYTE PTR [rax],al
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	pop    rax
   1400085a9:	mov    al,BYTE PTR [rax]
   1400085ab:	rex add DWORD PTR [rax],eax
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	outs   dx,DWORD PTR ds:[rsi]
   1400085b1:	add    BYTE PTR [rax],al
   1400085b3:	add    BYTE PTR [rax],al
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rax-0x76],ch
   1400085ba:	add    BYTE PTR [rax+0x1],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rdx+0x0],ch
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rax+0x140008a],al
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rsi+0x0],cl
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x140008a],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rdx+0x0],dl
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	add    BYTE PTR [rax],al
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	xor    BYTE PTR [rdx+0x14000],cl
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	repz add eax,DWORD PTR [rax]
   1400085f3:	add    BYTE PTR [rax],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rax+0x140008a],bl
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    ah,dh
   140008601:	add    eax,DWORD PTR [rax]
   140008603:	add    BYTE PTR [rax],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rax+0x140008a],bl
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    ch,dh
   140008611:	add    eax,DWORD PTR [rax]
   140008613:	add    BYTE PTR [rax],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    BYTE PTR [rax+0x140008a],bl
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rax],dl
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rax],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rax],dh
   140008629:	mov    al,BYTE PTR [rax]
   14000862b:	rex add DWORD PTR [rax],eax
   14000862e:	add    BYTE PTR [rax],al
   140008630:	(bad)  
   140008631:	add    BYTE PTR [rax],al
   140008633:	add    BYTE PTR [rax],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax-0x76],bl
   14000863a:	add    BYTE PTR [rax+0x1],al
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140008643:	add    BYTE PTR [rax],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax+0x140008a],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    BYTE PTR [rcx+0x0],dl
   140008655:	add    BYTE PTR [rax],al
   140008657:	add    BYTE PTR [rax+0x140008a],ch
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rbx],cl
   140008661:	add    DWORD PTR [rax],eax
   140008663:	add    BYTE PTR [rax],al
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    al,al
   140008669:	mov    al,BYTE PTR [rax]
   14000866b:	rex add DWORD PTR [rax],eax
   14000866e:	add    BYTE PTR [rax],al
   140008670:	jo     0x140008672
   140008672:	add    BYTE PTR [rax],al
   140008674:	add    BYTE PTR [rax],al
   140008676:	add    BYTE PTR [rax],al
   140008678:	fmul   DWORD PTR [rdx+0x14000]
   14000867e:	add    BYTE PTR [rax],al
   140008680:	push   rax
   140008681:	add    BYTE PTR [rax],al
   140008683:	add    BYTE PTR [rax],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rax-0x76],cl
   14000868a:	add    BYTE PTR [rax+0x1],al
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rdx],al
   140008691:	add    BYTE PTR [rax],al
   140008693:	add    BYTE PTR [rax],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    al,dh
   140008699:	mov    al,BYTE PTR [rax]
   14000869b:	rex add DWORD PTR [rax],eax
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	(bad)  
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rax],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    al,bl
   1400086a9:	mov    al,BYTE PTR [rax]
   1400086ab:	rex add DWORD PTR [rax],eax
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	or     al,0x0
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	xor    BYTE PTR [rdx+0x14000],cl
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	sldt   WORD PTR [rax]
   1400086c3:	add    BYTE PTR [rax],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rax-0x76],bl
   1400086ca:	add    BYTE PTR [rax+0x1],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rcx],al
   1400086d1:	add    BYTE PTR [rax],al
   1400086d3:	add    BYTE PTR [rax],al
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    BYTE PTR [rax],dl
   1400086d9:	mov    eax,DWORD PTR [rax]
   1400086db:	rex add DWORD PTR [rax],eax
   1400086de:	add    BYTE PTR [rax],al
   1400086e0:	(bad)  
   1400086e1:	add    BYTE PTR [rax],al
   1400086e3:	add    BYTE PTR [rax],al
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    al,al
   1400086e9:	mov    al,BYTE PTR [rax]
   1400086eb:	rex add DWORD PTR [rax],eax
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	jnp    0x1400086f2
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	ror    BYTE PTR [rdx+0x14000],0x0
   1400086ff:	add    BYTE PTR [rcx],ah
   140008701:	add    BYTE PTR [rax],al
   140008703:	add    BYTE PTR [rax],al
   140008705:	add    BYTE PTR [rax],al
   140008707:	add    BYTE PTR [rax],ch
   140008709:	mov    eax,DWORD PTR [rax]
   14000870b:	rex add DWORD PTR [rax],eax
   14000870e:	add    BYTE PTR [rax],al
   140008710:	(bad)  
   140008711:	add    BYTE PTR [rax],al
   140008713:	add    BYTE PTR [rax],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    BYTE PTR [rax],ch
   140008719:	mov    eax,DWORD PTR [rax]
   14000871b:	rex add DWORD PTR [rax],eax
   14000871e:	add    BYTE PTR [rax],al
   140008720:	add    DWORD PTR [rax],0x0
   140008723:	add    BYTE PTR [rax],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,al
   140008729:	mov    al,BYTE PTR [rax]
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	out    0x3,al
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    BYTE PTR [rax],al
   140008736:	add    BYTE PTR [rax],al
   140008738:	xor    BYTE PTR [rdx+0x14000],cl
   14000873e:	add    BYTE PTR [rax],al
   140008740:	or     BYTE PTR [rax],al
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    BYTE PTR [rax],al
   140008748:	rex mov eax,DWORD PTR [rax]
   14000874b:	rex add DWORD PTR [rax],eax
   14000874e:	add    BYTE PTR [rax],al
   140008750:	adc    eax,0x0
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rax-0x75],bl
   14000875a:	add    BYTE PTR [rax+0x1],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rcx],dl
   140008761:	add    BYTE PTR [rax],al
   140008763:	add    BYTE PTR [rax],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rax-0x75],bh
   14000876a:	add    BYTE PTR [rax+0x1],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rsi+0x0],ch
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax],al
   140008778:	cwde   
   140008779:	mov    al,BYTE PTR [rax]
   14000877b:	rex add DWORD PTR [rax],eax
   14000877e:	add    BYTE PTR [rax],al
   140008780:	(bad)  
   140008781:	or     DWORD PTR [rax],eax
   140008783:	add    BYTE PTR [rax],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rax+0x140008a],al
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    bl,ah
   140008791:	add    eax,DWORD PTR [rax]
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax+0x140008b],dl
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rsi],cl
   1400087a1:	add    BYTE PTR [rax],al
   1400087a3:	add    BYTE PTR [rax],al
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax-0x75],al
   1400087aa:	add    BYTE PTR [rax+0x1],al
   1400087ad:	add    BYTE PTR [rax],al
   1400087af:	add    BYTE PTR [rbx],al
   1400087b1:	add    BYTE PTR [rax],al
   1400087b3:	add    BYTE PTR [rax],al
   1400087b5:	add    BYTE PTR [rax],al
   1400087b7:	add    al,dh
   1400087b9:	mov    al,BYTE PTR [rax]
   1400087bb:	rex add DWORD PTR [rax],eax
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	(bad)  
   1400087c1:	add    BYTE PTR [rax],al
   1400087c3:	add    BYTE PTR [rax],al
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax+0x140008a],bl
   1400087cd:	add    BYTE PTR [rax],al
   1400087cf:	add    ch,dl
   1400087d1:	add    al,0x0
   1400087d3:	add    BYTE PTR [rax],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rax-0x75],bl
   1400087da:	add    BYTE PTR [rax+0x1],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rcx],bl
   1400087e1:	add    BYTE PTR [rax],al
   1400087e3:	add    BYTE PTR [rax],al
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rax+0x140008a],bl
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rax],ah
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rax],al
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax],dh
   1400087f9:	mov    al,BYTE PTR [rax]
   1400087fb:	rex add DWORD PTR [rax],eax
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	add    al,0x0
   140008802:	add    BYTE PTR [rax],al
   140008804:	add    BYTE PTR [rax],al
   140008806:	add    BYTE PTR [rax],al
   140008808:	test   al,0x8b
   14000880a:	add    BYTE PTR [rax+0x1],al
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rip+0x0],bl        # 0x140008815
   140008815:	add    BYTE PTR [rax],al
   140008817:	add    BYTE PTR [rax+0x140008a],bl
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    BYTE PTR [rbx],dl
   140008821:	add    BYTE PTR [rax],al
   140008823:	add    BYTE PTR [rax],al
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rax],dh
   140008829:	mov    al,BYTE PTR [rax]
   14000882b:	rex add DWORD PTR [rax],eax
   14000882e:	add    BYTE PTR [rax],al
   140008830:	sbb    eax,0x27
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    al,al
   140008839:	mov    eax,DWORD PTR [rax]
   14000883b:	rex add DWORD PTR [rax],eax
   14000883e:	add    BYTE PTR [rax],al
   140008840:	rex (bad) 
   140008842:	add    BYTE PTR [rax],al
   140008844:	add    BYTE PTR [rax],al
   140008846:	add    BYTE PTR [rax],al
   140008848:	fmul   DWORD PTR [rbx+0x14000]
   14000884e:	add    BYTE PTR [rax],al
   140008850:	rex.B (bad) 
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    BYTE PTR [rax],al
   140008856:	add    BYTE PTR [rax],al
   140008858:	call   0x1414088e8
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rdi],bh
   140008861:	(bad)  
   140008862:	add    BYTE PTR [rax],al
   140008864:	add    BYTE PTR [rax],al
   140008866:	add    BYTE PTR [rax],al
   140008868:	add    BYTE PTR [rax+rax*1+0x140],cl
   14000886f:	add    BYTE PTR [rip+0x27],dh        # 0x14000889c
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rax],ah
   140008879:	mov    WORD PTR [rax],es
   14000887b:	rex add DWORD PTR [rax],eax
   14000887e:	add    BYTE PTR [rax],al
   140008880:	sbb    DWORD PTR [rdi],esp
   140008882:	add    BYTE PTR [rax],al
   140008884:	add    BYTE PTR [rax],al
   140008886:	add    BYTE PTR [rax],al
   140008888:	rex mov WORD PTR [rax],es
   14000888b:	rex add DWORD PTR [rax],eax
   14000888e:	add    BYTE PTR [rax],al
   140008890:	rex.RB (bad) 
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    BYTE PTR [rax],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	pop    rax
   140008899:	mov    WORD PTR [rax],es
   14000889b:	rex add DWORD PTR [rax],eax
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	rex.WRB (bad) 
   1400088a2:	add    BYTE PTR [rax],al
   1400088a4:	add    BYTE PTR [rax],al
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	jo     0x140008836
   1400088aa:	add    BYTE PTR [rax+0x1],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    BYTE PTR [rsi+0x27],al
   1400088b2:	add    BYTE PTR [rax],al
   1400088b4:	add    BYTE PTR [rax],al
   1400088b6:	add    BYTE PTR [rax],al
   1400088b8:	mov    BYTE PTR [rax+rax*1+0x140],cl
   1400088bf:	add    BYTE PTR [rdi],dh
   1400088c1:	(bad)  
   1400088c2:	add    BYTE PTR [rax],al
   1400088c4:	add    BYTE PTR [rax],al
   1400088c6:	add    BYTE PTR [rax],al
   1400088c8:	movabs al,ds:0x1e0000000140008c
   1400088d1:	(bad)  
   1400088d2:	add    BYTE PTR [rax],al
   1400088d4:	add    BYTE PTR [rax],al
   1400088d6:	add    BYTE PTR [rax],al
   1400088d8:	ror    BYTE PTR [rax+rax*1+0x140],0x0
   1400088e0:	push   rcx
   1400088e1:	(bad)  
   1400088e2:	add    BYTE PTR [rax],al
   1400088e4:	add    BYTE PTR [rax],al
   1400088e6:	add    BYTE PTR [rax],al
   1400088e8:	ror    BYTE PTR [rax+rax*1+0x140],1
   1400088ef:	add    BYTE PTR [rdi+riz*1],dh
   1400088f2:	add    BYTE PTR [rax],al
   1400088f4:	add    BYTE PTR [rax],al
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	call   0x141408989
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rdi+riz*1],dl
   140008902:	add    BYTE PTR [rax],al
   140008904:	add    BYTE PTR [rax],al
   140008906:	add    BYTE PTR [rax],al
   140008908:	add    BYTE PTR [rbp+0x14000],cl
   14000890e:	add    BYTE PTR [rax],al
   140008910:	es (bad) 
   140008912:	add    BYTE PTR [rax],al
   140008914:	add    BYTE PTR [rax],al
   140008916:	add    BYTE PTR [rax],al
   140008918:	adc    BYTE PTR [rbp+0x14000],cl
   14000891e:	add    BYTE PTR [rax],al
   140008920:	rex.W (bad) 
   140008922:	add    BYTE PTR [rax],al
   140008924:	add    BYTE PTR [rax],al
   140008926:	add    BYTE PTR [rax],al
   140008928:	sub    BYTE PTR [rbp+0x14000],cl
   14000892e:	add    BYTE PTR [rax],al
   140008930:	sub    BYTE PTR [rdi],ah
   140008932:	add    BYTE PTR [rax],al
   140008934:	add    BYTE PTR [rax],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	rex lea eax,[rax]
   14000893b:	rex add DWORD PTR [rax],eax
   14000893e:	add    BYTE PTR [rax],al
   140008940:	cmp    BYTE PTR [rdi],ah
   140008942:	add    BYTE PTR [rax],al
   140008944:	add    BYTE PTR [rax],al
   140008946:	add    BYTE PTR [rax],al
   140008948:	pop    rax
   140008949:	lea    eax,[rax]
   14000894b:	rex add DWORD PTR [rax],eax
   14000894e:	add    BYTE PTR [rax],al
   140008950:	rex.WRXB (bad) 
   140008952:	add    BYTE PTR [rax],al
   140008954:	add    BYTE PTR [rax],al
   140008956:	add    BYTE PTR [rax],al
   140008958:	push   0x140008d
   14000895d:	add    BYTE PTR [rax],al
   14000895f:	add    BYTE PTR [rdx+0x27],al
   140008962:	add    BYTE PTR [rax],al
   140008964:	add    BYTE PTR [rax],al
   140008966:	add    BYTE PTR [rax],al
   140008968:	or     BYTE PTR [rbp+0x14000],0x0
   14000896f:	add    BYTE PTR [rdi+riz*1+0x0],al
   140008973:	add    BYTE PTR [rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rax+0x140008d],dl
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rbx+0x27],al
   140008982:	add    BYTE PTR [rax],al
   140008984:	add    BYTE PTR [rax],al
   140008986:	add    BYTE PTR [rax],al
   140008988:	movabs al,ds:0x470000000140008d
   140008991:	(bad)  
   140008992:	add    BYTE PTR [rax],al
   140008994:	add    BYTE PTR [rax],al
   140008996:	add    BYTE PTR [rax],al
   140008998:	mov    eax,0x140008d
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    BYTE PTR [rdx],bh
   1400089a1:	(bad)  
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	add    BYTE PTR [rax],al
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	enter  0x8d,0x40
   1400089ac:	add    DWORD PTR [rax],eax
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	rex.WB (bad) 
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	add    BYTE PTR [rax],al
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	loopne 0x140008947
   1400089ba:	add    BYTE PTR [rax+0x1],al
   1400089bd:	add    BYTE PTR [rax],al
   1400089bf:	add    BYTE PTR [rsi],dh
   1400089c1:	(bad)  
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	add    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	lock lea eax,[rax]
   1400089cb:	rex add DWORD PTR [rax],eax
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	cmp    eax,0x27
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax],al
   1400089d9:	mov    es,WORD PTR [rax]
   1400089db:	rex add DWORD PTR [rax],eax
   1400089de:	add    BYTE PTR [rax],al
   1400089e0:	cmp    esp,DWORD PTR [rdi]
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	add    BYTE PTR [rax],al
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	sbb    BYTE PTR [rsi+0x14000],cl
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	cmp    DWORD PTR [rdi],esp
   1400089f2:	add    BYTE PTR [rax],al
   1400089f4:	add    BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	xor    BYTE PTR [rsi+0x14000],cl
   1400089fe:	add    BYTE PTR [rax],al
   140008a00:	rex.WR (bad) 
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	add    BYTE PTR [rax],al
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	rex.W mov es,WORD PTR [rax]
   140008a0b:	rex add DWORD PTR [rax],eax
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	xor    esp,DWORD PTR [rdi]
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	pop    rax
   140008a19:	mov    es,WORD PTR [rax]
   140008a1b:	rex add DWORD PTR [rax],eax
	...
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	jo     0x140008a97
   140008a32:	jb     0x140008aa1
   140008a34:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140008a3b:	fs outs dx,BYTE PTR gs:[rsi]
   140008a3e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rsi+0x69],ah
   140008a4a:	ins    BYTE PTR es:[rdi],dx
   140008a4b:	and    BYTE PTR gs:[rbp+0x78],ah
   140008a4f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	outs   dx,BYTE PTR ds:[rsi]
   140008a59:	outs   dx,DWORD PTR ds:[rsi]
   140008a5a:	and    BYTE PTR [rbx+0x75],dh
   140008a5d:	movsxd ebp,DWORD PTR [rax+0x20]
   140008a60:	fs gs jbe 0x140008acd
   140008a64:	movsxd esp,DWORD PTR [rbp+0x0]
   140008a67:	add    BYTE PTR [rsi+0x69],ah
   140008a6a:	ins    BYTE PTR es:[rdi],dx
   140008a6b:	outs   dx,BYTE PTR gs:[rsi]
   140008a6d:	(bad)  
   140008a6e:	ins    DWORD PTR es:[rdi],dx
   140008a6f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140008a74:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008a78:	add    BYTE PTR [eax],al
   140008a7b:	add    BYTE PTR [rax],al
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140008a83:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140008a8a:	jb     0x140008af1
   140008a8c:	jae    0x140008afd
   140008a8e:	jne    0x140008b02
   140008a90:	movsxd esp,DWORD PTR [rbp+0x20]
   140008a93:	(bad)  
   140008a94:	jne    0x140008b09
   140008a96:	jns    0x140008a98
   140008a98:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140008a9f:	jb     0x140008aa1
   140008aa1:	add    BYTE PTR [rax],al
   140008aa3:	add    BYTE PTR [rax],al
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140008aab:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008ab0:	jns    0x140008ad2
   140008ab2:	outs   dx,BYTE PTR ds:[rsi]
   140008ab3:	outs   dx,DWORD PTR ds:[rsi]
   140008ab4:	je     0x140008ad6
   140008ab6:	gs ins DWORD PTR es:[rdi],dx
   140008ab8:	jo     0x140008b2e
   140008aba:	jns    0x140008abc
   140008abc:	add    BYTE PTR [rax],al
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140008ac7:	and    BYTE PTR [rcx+0x72],ah
   140008aca:	addr32 jne 0x140008b3a
   140008acd:	outs   dx,BYTE PTR gs:[rsi]
   140008acf:	je     0x140008ad1
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	add    BYTE PTR [rax],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    BYTE PTR [rsi+0x6f],ch
   140008ada:	and    BYTE PTR [rbx+0x70],dh
   140008add:	(bad)  
   140008ade:	movsxd esp,DWORD PTR [rbp+0x20]
   140008ae1:	outs   dx,DWORD PTR ds:[rsi]
   140008ae2:	outs   dx,BYTE PTR ds:[rsi]
   140008ae3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008ae7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	outs   dx,BYTE PTR ds:[rsi]
   140008af1:	outs   dx,DWORD PTR ds:[rsi]
   140008af2:	and    BYTE PTR [rbx+0x75],dh
   140008af5:	movsxd ebp,DWORD PTR [rax+0x20]
   140008af8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140008aff:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140008b03:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008b08:	jns    0x140008b0a
   140008b0a:	add    BYTE PTR [rax],al
   140008b0c:	add    BYTE PTR [rax],al
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	data16 jne 0x140008b81
   140008b13:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008b17:	outs   dx,BYTE PTR ds:[rsi]
   140008b18:	and    BYTE PTR [rsi+0x6f],ch
   140008b1b:	je     0x140008b3d
   140008b1d:	jae    0x140008b94
   140008b1f:	jo     0x140008b91
   140008b21:	outs   dx,DWORD PTR ds:[rsi]
   140008b22:	jb     0x140008b98
   140008b24:	gs add BYTE PTR fs:[rax],al
   140008b28:	outs   dx,BYTE PTR ds:[rsi]
   140008b29:	outs   dx,DWORD PTR ds:[rsi]
   140008b2a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140008b2e:	imul   esp,DWORD PTR [rax],0x61
   140008b31:	jbe    0x140008b94
   140008b33:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008b3b:	add    BYTE PTR [rax],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rsi+0x6f],ch
   140008b42:	je     0x140008b64
   140008b44:	outs   dx,BYTE PTR gs:[rsi]
   140008b46:	outs   dx,DWORD PTR ds:[rsi]
   140008b47:	jne    0x140008bb0
   140008b49:	push   0x6d656d20
   140008b4e:	outs   dx,DWORD PTR ds:[rsi]
   140008b4f:	jb     0x140008bca
   140008b51:	add    BYTE PTR [rax],al
   140008b53:	add    BYTE PTR [rax],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rdx+0x65],dh
   140008b5a:	jae    0x140008bcb
   140008b5c:	jne    0x140008bd0
   140008b5e:	movsxd esp,DWORD PTR [rbp+0x20]
   140008b61:	jne    0x140008bd1
   140008b63:	(bad)  
   140008b64:	jbe    0x140008bc7
   140008b66:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140008b6e:	jb     0x140008be9
   140008b70:	and    BYTE PTR [rcx+0x67],ah
   140008b73:	(bad)  
   140008b74:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140008b7b:	jae    0x140008bf0
   140008b7d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008b81:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140008b88:	imul   eax,DWORD PTR [rax],0x0
   140008b8b:	add    BYTE PTR [rax],al
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rdi+0x70],ch
   140008b92:	gs jb  0x140008bf6
   140008b95:	je     0x140008c00
   140008b97:	outs   dx,DWORD PTR ds:[rsi]
   140008b98:	outs   dx,BYTE PTR ds:[rsi]
   140008b99:	and    BYTE PTR [rbx+0x61],ah
   140008b9c:	outs   dx,BYTE PTR ds:[rsi]
   140008b9d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008ba0:	gs add BYTE PTR fs:[rax],al
   140008ba4:	add    BYTE PTR [rax],al
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	je     0x140008c19
   140008baa:	outs   dx,DWORD PTR ds:[rsi]
   140008bab:	and    BYTE PTR [rbp+0x61],ch
   140008bae:	outs   dx,BYTE PTR ds:[rsi]
   140008baf:	jns    0x140008bd1
   140008bb1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140008bb8:	jo     0x140008c1f
   140008bba:	outs   dx,BYTE PTR ds:[rsi]
   140008bbb:	add    BYTE PTR [rax],al
   140008bbd:	add    BYTE PTR [rax],al
   140008bbf:	add    BYTE PTR [rax+0x65],dh
   140008bc2:	jb     0x140008c31
   140008bc4:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140008bcb:	fs outs dx,BYTE PTR gs:[rsi]
   140008bce:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008bd5:	add    BYTE PTR [rax],al
   140008bd7:	add    BYTE PTR [rcx+0x64],ah
   140008bda:	fs jb  0x140008c42
   140008bdd:	jae    0x140008c52
   140008bdf:	pop    rdi
   140008be0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140008be7:	add    BYTE PTR [rcx+0x64],ah
   140008bea:	fs jb  0x140008c52
   140008bed:	jae    0x140008c62
   140008bef:	pop    rdi
   140008bf0:	outs   dx,BYTE PTR ds:[rsi]
   140008bf1:	outs   dx,DWORD PTR ds:[rsi]
   140008bf2:	je     0x140008c53
   140008bf4:	(bad)  
   140008bf5:	jbe    0x140008c58
   140008bf7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008bff:	add    BYTE PTR [rcx+0x64],ah
   140008c02:	fs jb  0x140008c6a
   140008c05:	jae    0x140008c7a
   140008c07:	pop    rdi
   140008c08:	data16 (bad) 
   140008c0a:	ins    DWORD PTR es:[rdi],dx
   140008c0b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140008c13:	jae    0x140008c8a
   140008c15:	jo     0x140008c87
   140008c17:	outs   dx,DWORD PTR ds:[rsi]
   140008c18:	jb     0x140008c8e
   140008c1a:	gs add BYTE PTR fs:[rax],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008c23:	outs   dx,BYTE PTR ds:[rsi]
   140008c24:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c29:	outs   dx,BYTE PTR ds:[rsi]
   140008c2a:	pop    rdi
   140008c2b:	(bad)  
   140008c2c:	ins    BYTE PTR es:[rdi],dx
   140008c2d:	jb     0x140008c94
   140008c2f:	(bad)  
   140008c30:	fs jns 0x140008c92
   140008c33:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008c3a:	jb     0x140008ca1
   140008c3c:	jae    0x140008cb1
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	(bad)
   140008c45:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140008c4d:	jb     0x140008cb8
   140008c4f:	jo     0x140008cc5
   140008c51:	outs   dx,DWORD PTR ds:[rsi]
   140008c52:	jb     0x140008c54
   140008c54:	add    BYTE PTR [rax],al
   140008c56:	add    BYTE PTR [rax],al
   140008c58:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008c5b:	outs   dx,BYTE PTR ds:[rsi]
   140008c5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c61:	outs   dx,BYTE PTR ds:[rsi]
   140008c62:	pop    rdi
   140008c63:	(bad)  
   140008c64:	(bad)  
   140008c65:	outs   dx,DWORD PTR ds:[rsi]
   140008c66:	jb     0x140008cdc
   140008c68:	gs add BYTE PTR fs:[rax],al
   140008c6c:	add    BYTE PTR [rax],al
   140008c6e:	add    BYTE PTR [rax],al
   140008c70:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008c73:	outs   dx,BYTE PTR ds:[rsi]
   140008c74:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c79:	outs   dx,BYTE PTR ds:[rsi]
   140008c7a:	pop    rdi
   140008c7b:	jb     0x140008ce2
   140008c7d:	data16 jne 0x140008cf3
   140008c80:	gs add BYTE PTR fs:[rax],al
   140008c84:	add    BYTE PTR [rax],al
   140008c86:	add    BYTE PTR [rax],al
   140008c88:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008c8b:	outs   dx,BYTE PTR ds:[rsi]
   140008c8c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008c91:	outs   dx,BYTE PTR ds:[rsi]
   140008c92:	pop    rdi
   140008c93:	jb     0x140008cfa
   140008c95:	jae    0x140008cfc
   140008c97:	je     0x140008c99
   140008c99:	add    BYTE PTR [rax],al
   140008c9b:	add    BYTE PTR [rax],al
   140008c9d:	add    BYTE PTR [rax],al
   140008c9f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140008ca3:	je     0x140008d0e
   140008ca5:	outs   dx,BYTE PTR ds:[rsi]
   140008ca6:	(bad)  
   140008ca7:	je     0x140008d12
   140008ca9:	outs   dx,DWORD PTR ds:[rsi]
   140008caa:	outs   dx,BYTE PTR ds:[rsi]
   140008cab:	pop    rdi
   140008cac:	(bad)  
   140008cad:	fs fs jb 0x140008d16
   140008cb1:	jae    0x140008d26
   140008cb3:	pop    rdi
   140008cb4:	jb     0x140008d1b
   140008cb6:	jno    0x140008d2d
   140008cb8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140008cbf:	add    BYTE PTR [rdx+0x61],ah
   140008cc2:	fs pop rdi
   140008cc4:	(bad)  
   140008cc5:	fs fs jb 0x140008d2e
   140008cc9:	jae    0x140008d3e
   140008ccb:	add    BYTE PTR [rax],al
   140008ccd:	add    BYTE PTR [rax],al
   140008ccf:	add    BYTE PTR [rax+0x6f],ch
   140008cd2:	jae    0x140008d48
   140008cd4:	pop    rdi
   140008cd5:	jne    0x140008d45
   140008cd7:	jb     0x140008d3e
   140008cd9:	(bad)  
   140008cda:	movsxd ebp,DWORD PTR [rax+0x61]
   140008cdd:	(bad)  
   140008cde:	ins    BYTE PTR es:[rdi],dx
   140008cdf:	add    BYTE PTR gs:[rax],al
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	add    BYTE PTR [rax],al
   140008ce6:	add    BYTE PTR [rax],al
   140008ce8:	outs   dx,DWORD PTR ds:[rsi]
   140008ce9:	jo     0x140008d50
   140008ceb:	jb     0x140008d4e
   140008ced:	je     0x140008d58
   140008cef:	outs   dx,DWORD PTR ds:[rsi]
   140008cf0:	outs   dx,BYTE PTR ds:[rsi]
   140008cf1:	pop    rdi
   140008cf2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008cf9:	jb     0x140008d60
   140008cfb:	jae    0x140008d70
   140008cfd:	add    BYTE PTR [rax],al
   140008cff:	add    BYTE PTR [rcx+0x6e],ch
   140008d02:	je     0x140008d69
   140008d04:	jb     0x140008d78
   140008d06:	jne    0x140008d78
   140008d08:	je     0x140008d6f
   140008d0a:	add    BYTE PTR fs:[rax],al
   140008d0d:	add    BYTE PTR [rax],al
   140008d0f:	add    BYTE PTR [rcx+0x6e],ch
   140008d12:	jbe    0x140008d75
   140008d14:	ins    BYTE PTR es:[rdi],dx
   140008d15:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140008d1d:	outs   dx,BYTE PTR gs:[rsi]
   140008d1f:	je     0x140008d21
   140008d21:	add    BYTE PTR [rax],al
   140008d23:	add    BYTE PTR [rax],al
   140008d25:	add    BYTE PTR [rax],al
   140008d27:	add    BYTE PTR [rcx+0x6c],ah
   140008d2a:	jb     0x140008d91
   140008d2c:	(bad)  
   140008d2d:	fs jns 0x140008d8f
   140008d30:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008d33:	outs   dx,BYTE PTR ds:[rsi]
   140008d34:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008d39:	add    BYTE PTR [rax],al
   140008d3b:	add    BYTE PTR [rax],al
   140008d3d:	add    BYTE PTR [rax],al
   140008d3f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140008d43:	pop    rdi
   140008d44:	ins    DWORD PTR es:[rdi],dx
   140008d45:	(bad)  
   140008d46:	outs   dx,BYTE PTR ds:[rsi]
   140008d47:	jns    0x140008da8
   140008d49:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140008d50:	jo     0x140008db7
   140008d52:	outs   dx,BYTE PTR ds:[rsi]
   140008d53:	add    BYTE PTR [rax],al
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rbp+0x65],ch
   140008d5a:	jae    0x140008dcf
   140008d5c:	(bad)  
   140008d5d:	addr32 gs pop rdi
   140008d60:	jae    0x140008dcb
   140008d62:	jp     0x140008dc9
   140008d64:	add    BYTE PTR [rax],al
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140008d6f:	gs pop rdi
   140008d71:	je     0x140008de2
   140008d73:	outs   dx,DWORD PTR ds:[rsi]
   140008d74:	pop    rdi
   140008d75:	ins    BYTE PTR es:[rdi],dx
   140008d76:	outs   dx,DWORD PTR ds:[rsi]
   140008d77:	outs   dx,BYTE PTR ds:[rsi]
   140008d78:	add    BYTE PTR [eax],al
   140008d7b:	add    BYTE PTR [rax],al
   140008d7d:	add    BYTE PTR [rax],al
   140008d7f:	add    BYTE PTR [rsi+0x65],ch
   140008d82:	je     0x140008dfb
   140008d84:	outs   dx,DWORD PTR ds:[rsi]
   140008d85:	jb     0x140008df2
   140008d87:	pop    rdi
   140008d88:	outs   dx,DWORD PTR fs:[rsi]
   140008d8a:	ja     0x140008dfa
   140008d8c:	add    BYTE PTR [rax],al
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	outs   dx,BYTE PTR ds:[rsi]
   140008d91:	gs je  0x140008e0b
   140008d94:	outs   dx,DWORD PTR ds:[rsi]
   140008d95:	jb     0x140008e02
   140008d97:	pop    rdi
   140008d98:	jb     0x140008dff
   140008d9a:	jae    0x140008e01
   140008d9c:	je     0x140008d9e
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	outs   dx,BYTE PTR ds:[rsi]
   140008da1:	gs je  0x140008e1b
   140008da4:	outs   dx,DWORD PTR ds:[rsi]
   140008da5:	jb     0x140008e12
   140008da7:	pop    rdi
   140008da8:	jne    0x140008e18
   140008daa:	jb     0x140008e11
   140008dac:	(bad)  
   140008dad:	movsxd ebp,DWORD PTR [rax+0x61]
   140008db0:	(bad)  
   140008db1:	ins    BYTE PTR es:[rdi],dx
   140008db2:	add    BYTE PTR gs:[rax],al
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rsi+0x6f],ch
   140008dba:	pop    rdi
   140008dbb:	(bad)  
   140008dbc:	jne    0x140008e24
   140008dbe:	data16 gs jb 0x140008e21
   140008dc2:	jae    0x140008e34
   140008dc4:	(bad)  
   140008dc5:	movsxd esp,DWORD PTR [rbp+0x0]
   140008dc8:	outs   dx,BYTE PTR ds:[rsi]
   140008dc9:	outs   dx,DWORD PTR ds:[rsi]
   140008dca:	pop    rdi
   140008dcb:	jo     0x140008e3f
   140008dcd:	outs   dx,DWORD PTR ds:[rsi]
   140008dce:	je     0x140008e3f
   140008dd0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008dd3:	pop    rdi
   140008dd4:	outs   dx,DWORD PTR ds:[rsi]
   140008dd5:	jo     0x140008e4b
   140008dd7:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	outs   dx,BYTE PTR ds:[rsi]
   140008de1:	outs   dx,DWORD PTR ds:[rsi]
   140008de2:	je     0x140008e43
   140008de4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008de7:	outs   dx,BYTE PTR ds:[rsi]
   140008de8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008ded:	add    BYTE PTR [rax],al
   140008def:	add    BYTE PTR [rsi+0x6f],ch
   140008df2:	je     0x140008e53
   140008df4:	(bad)  
   140008df5:	pop    rdi
   140008df6:	jae    0x140008e67
   140008df8:	movsxd ebp,DWORD PTR [rbx+0x65]
   140008dfb:	je     0x140008dfd
   140008dfd:	add    BYTE PTR [rax],al
   140008dff:	add    BYTE PTR [rdi+0x70],ch
   140008e02:	gs jb  0x140008e66
   140008e05:	je     0x140008e70
   140008e07:	outs   dx,DWORD PTR ds:[rsi]
   140008e08:	outs   dx,BYTE PTR ds:[rsi]
   140008e09:	pop    rdi
   140008e0a:	outs   dx,BYTE PTR ds:[rsi]
   140008e0b:	outs   dx,DWORD PTR ds:[rsi]
   140008e0c:	je     0x140008e6d
   140008e0e:	jae    0x140008e85
   140008e10:	jo     0x140008e82
   140008e12:	outs   dx,DWORD PTR ds:[rsi]
   140008e13:	jb     0x140008e89
   140008e15:	gs add BYTE PTR fs:[rax+0x72],dh
   140008e1a:	outs   dx,DWORD PTR ds:[rsi]
   140008e1b:	je     0x140008e8c
   140008e1d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008e20:	pop    rdi
   140008e21:	outs   dx,BYTE PTR ds:[rsi]
   140008e22:	outs   dx,DWORD PTR ds:[rsi]
   140008e23:	je     0x140008e84
   140008e25:	jae    0x140008e9c
   140008e27:	jo     0x140008e99
   140008e29:	outs   dx,DWORD PTR ds:[rsi]
   140008e2a:	jb     0x140008ea0
   140008e2c:	gs add BYTE PTR fs:[rax],al
   140008e30:	ja     0x140008ea4
   140008e32:	outs   dx,DWORD PTR ds:[rsi]
   140008e33:	outs   dx,BYTE PTR ds:[rsi]
   140008e34:	addr32 pop rdi
   140008e36:	jo     0x140008eaa
   140008e38:	outs   dx,DWORD PTR ds:[rsi]
   140008e39:	je     0x140008eaa
   140008e3b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008e3e:	pop    rdi
   140008e3f:	je     0x140008eba
   140008e41:	jo     0x140008ea8
   140008e43:	add    BYTE PTR [rax],al
   140008e45:	add    BYTE PTR [rax],al
   140008e47:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140008e4b:	gs fs pop rdi
   140008e4e:	outs   dx,DWORD PTR ds:[rsi]
   140008e4f:	jne    0x140008ec5
   140008e51:	add    BYTE PTR [rax],al
   140008e53:	add    BYTE PTR [rax],al
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rdi+0x70],ch
   140008e5a:	gs jb  0x140008ebe
   140008e5d:	je     0x140008ec8
   140008e5f:	outs   dx,DWORD PTR ds:[rsi]
   140008e60:	outs   dx,BYTE PTR ds:[rsi]
   140008e61:	pop    rdi
   140008e62:	ja     0x140008ed3
   140008e64:	jne    0x140008ed2
   140008e66:	fs pop rdi
   140008e68:	(bad)  
   140008e69:	ins    BYTE PTR es:[rdi],dx
   140008e6a:	outs   dx,DWORD PTR ds:[rsi]
   140008e6b:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	data16 add BYTE PTR [rax],al
   140008e73:	add    BYTE PTR [rax],al
   140008e75:	add    BYTE PTR [rax],al
   140008e77:	add    BYTE PTR [rax-0x6d],ah
   140008e7a:	add    BYTE PTR [rax+0x1],al
   140008e7d:	add    BYTE PTR [rax],al
   140008e7f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140008e83:	add    BYTE PTR [rax],al
   140008e85:	add    BYTE PTR [rax],al
   140008e87:	add    BYTE PTR [rax+0x1400093],al
   140008e8d:	add    BYTE PTR [rax],al
   140008e8f:	add    BYTE PTR [rbp+0x0],ah
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	add    BYTE PTR [rax],al
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	nop
   140008e99:	xchg   ebx,eax
   140008e9a:	add    BYTE PTR [rax+0x1],al
   140008e9d:	add    BYTE PTR [rax],al
   140008e9f:	add    BYTE PTR [rcx+0x0],dh
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    BYTE PTR [rax],al
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	test   al,0x93
   140008eaa:	add    BYTE PTR [rax+0x1],al
   140008ead:	add    BYTE PTR [rax],al
   140008eaf:	add    BYTE PTR [rdi],al
   140008eb1:	add    BYTE PTR [rax],al
   140008eb3:	add    BYTE PTR [rax],al
   140008eb5:	add    BYTE PTR [rax],al
   140008eb7:	add    al,al
   140008eb9:	xchg   ebx,eax
   140008eba:	add    BYTE PTR [rax+0x1],al
   140008ebd:	add    BYTE PTR [rax],al
   140008ebf:	add    BYTE PTR [rcx],ah
   140008ec1:	add    BYTE PTR [rax],al
   140008ec3:	add    BYTE PTR [rax],al
   140008ec5:	add    BYTE PTR [rax],al
   140008ec7:	add    al,bl
   140008ec9:	xchg   ebx,eax
   140008eca:	add    BYTE PTR [rax+0x1],al
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	add    BYTE PTR [rsi],cl
   140008ed1:	add    BYTE PTR [rax],al
   140008ed3:	add    BYTE PTR [rax],al
   140008ed5:	add    BYTE PTR [rax],al
   140008ed7:	add    al,dh
   140008ed9:	xchg   ebx,eax
   140008eda:	add    BYTE PTR [rax+0x1],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rcx],cl
	...
   140008ee9:	xchg   esp,eax
   140008eea:	add    BYTE PTR [rax+0x1],al
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	add    BYTE PTR [rax+0x0],ch
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	add    BYTE PTR [rax],al
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	sbb    BYTE PTR [rax+rax*1+0x140],dl
   140008eff:	add    BYTE PTR [rax],ah
   140008f01:	add    BYTE PTR [rax],al
   140008f03:	add    BYTE PTR [rax],al
   140008f05:	add    BYTE PTR [rax],al
   140008f07:	add    BYTE PTR [rax],ch
   140008f09:	xchg   esp,eax
   140008f0a:	add    BYTE PTR [rax+0x1],al
   140008f0d:	add    BYTE PTR [rax],al
   140008f0f:	add    BYTE PTR [rdx+0x0],ch
   140008f12:	add    BYTE PTR [rax],al
   140008f14:	add    BYTE PTR [rax],al
   140008f16:	add    BYTE PTR [rax],al
   140008f18:	cmp    BYTE PTR [rax+rax*1+0x140],dl
   140008f1f:	add    BYTE PTR [rdi+0x0],ah
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	add    BYTE PTR [rax],al
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	push   rax
   140008f29:	xchg   esp,eax
   140008f2a:	add    BYTE PTR [rax+0x1],al
   140008f2d:	add    BYTE PTR [rax],al
   140008f2f:	add    BYTE PTR [rbx+0x0],ch
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	add    BYTE PTR [rax],al
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	jo     0x140008ece
   140008f3a:	add    BYTE PTR [rax+0x1],al
   140008f3d:	add    BYTE PTR [rax],al
   140008f3f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008f43:	add    BYTE PTR [rax],al
   140008f45:	add    BYTE PTR [rax],al
   140008f47:	add    BYTE PTR [rax+0x1400094],cl
   140008f4d:	add    BYTE PTR [rax],al
   140008f4f:	add    BYTE PTR [rdx],dl
   140008f51:	add    BYTE PTR [rax],al
   140008f53:	add    BYTE PTR [rax],al
   140008f55:	add    BYTE PTR [rax],al
   140008f57:	add    BYTE PTR [rax-0x75],bh
   140008f5a:	add    BYTE PTR [rax+0x1],al
   140008f5d:	add    BYTE PTR [rax],al
   140008f5f:	add    BYTE PTR [rbp+0x0],ch
   140008f62:	add    BYTE PTR [rax],al
   140008f64:	add    BYTE PTR [rax],al
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	movabs al,ds:0x1000000001400094
   140008f71:	add    BYTE PTR [rax],al
   140008f73:	add    BYTE PTR [rax],al
   140008f75:	add    BYTE PTR [rax],al
   140008f77:	add    BYTE PTR [rax+0x140008a],al
   140008f7d:	add    BYTE PTR [rax],al
   140008f7f:	add    BYTE PTR [rcx],ch
   140008f81:	add    BYTE PTR [rax],al
   140008f83:	add    BYTE PTR [rax],al
   140008f85:	add    BYTE PTR [rax],al
   140008f87:	add    BYTE PTR [rax+0x140008a],ch
   140008f8d:	add    BYTE PTR [rax],al
   140008f8f:	add    BYTE PTR [rax],cl
   140008f91:	add    BYTE PTR [rax],al
   140008f93:	add    BYTE PTR [rax],al
   140008f95:	add    BYTE PTR [rax],al
   140008f97:	add    al,al
   140008f99:	xchg   esp,eax
   140008f9a:	add    BYTE PTR [rax+0x1],al
   140008f9d:	add    BYTE PTR [rax],al
   140008f9f:	add    BYTE PTR [rcx],dl
   140008fa1:	add    BYTE PTR [rax],al
   140008fa3:	add    BYTE PTR [rax],al
   140008fa5:	add    BYTE PTR [rax],al
   140008fa7:	add    BYTE PTR [rax-0x76],cl
   140008faa:	add    BYTE PTR [rax+0x1],al
   140008fad:	add    BYTE PTR [rax],al
   140008faf:	add    BYTE PTR [rbx],bl
   140008fb1:	add    BYTE PTR [rax],al
   140008fb3:	add    BYTE PTR [rax],al
   140008fb5:	add    BYTE PTR [rax],al
   140008fb7:	add    al,bl
   140008fb9:	xchg   esp,eax
   140008fba:	add    BYTE PTR [rax+0x1],al
   140008fbd:	add    BYTE PTR [rax],al
   140008fbf:	add    BYTE PTR [rsi],ah
   140008fc1:	add    BYTE PTR [rax],al
   140008fc3:	add    BYTE PTR [rax],al
   140008fc5:	add    BYTE PTR [rax],al
   140008fc7:	add    BYTE PTR [rax-0x76],ch
   140008fca:	add    BYTE PTR [rax+0x1],al
   140008fcd:	add    BYTE PTR [rax],al
   140008fcf:	add    BYTE PTR [rax],ch
   140008fd1:	add    BYTE PTR [rax],al
   140008fd3:	add    BYTE PTR [rax],al
   140008fd5:	add    BYTE PTR [rax],al
   140008fd7:	add    BYTE PTR [rax],dl
   140008fd9:	mov    eax,DWORD PTR [rax]
   140008fdb:	rex add DWORD PTR [rax],eax
   140008fde:	add    BYTE PTR [rax],al
   140008fe0:	outs   dx,BYTE PTR ds:[rsi]
   140008fe1:	add    BYTE PTR [rax],al
   140008fe3:	add    BYTE PTR [rax],al
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    al,ch
   140008fe9:	xchg   esp,eax
   140008fea:	add    BYTE PTR [rax+0x1],al
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rdi+0x0],ch
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	add    BYTE PTR [rbp+0x14000],dl
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	sub    al,BYTE PTR [rax]
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	sbb    BYTE PTR [rbp+0x14000],dl
   14000900e:	add    BYTE PTR [rax],al
   140009010:	sbb    DWORD PTR [rax],eax
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	xor    BYTE PTR [rbp+0x14000],dl
   14000901e:	add    BYTE PTR [rax],al
   140009020:	add    al,0x0
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	add    BYTE PTR [rbp+0x14000],cl
   14000902e:	add    BYTE PTR [rax],al
   140009030:	(bad)  
   140009031:	add    BYTE PTR [rax],al
   140009033:	add    BYTE PTR [rax],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    al,al
   140009039:	mov    al,BYTE PTR [rax]
   14000903b:	rex add DWORD PTR [rax],eax
   14000903e:	add    BYTE PTR [rax],al
   140009040:	sbb    eax,0x0
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rax-0x6b],bl
   14000904a:	add    BYTE PTR [rax+0x1],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rip+0x0],al        # 0x140009055
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax+0x140008a],bl
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rip+0x0],dl        # 0x140009065
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax-0x6b],ch
   14000906a:	add    BYTE PTR [rax+0x1],al
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rbx+0x0],dh
   140009072:	add    BYTE PTR [rax],al
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	js     0x14000900f
   14000907a:	add    BYTE PTR [rax+0x1],al
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009083:	add    BYTE PTR [rax],al
   140009085:	add    BYTE PTR [rax],al
   140009087:	add    BYTE PTR [rax+0x1400095],cl
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rbp+0x0],dh
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	cwde   
   140009099:	xchg   ebp,eax
   14000909a:	add    BYTE PTR [rax+0x1],al
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    BYTE PTR [rsi+0x0],dh
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	test   al,0x95
   1400090aa:	add    BYTE PTR [rax+0x1],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    BYTE PTR [rdi+0x0],dh
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	rcl    BYTE PTR [rbp+0x14000],0x0
   1400090bf:	add    BYTE PTR [rdx],cl
   1400090c1:	add    BYTE PTR [rax],al
   1400090c3:	add    BYTE PTR [rax],al
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    al,dl
   1400090c9:	xchg   ebp,eax
   1400090ca:	add    BYTE PTR [rax+0x1],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rcx+0x0],bh
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	call   0x141409172
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    BYTE PTR [rdi],ah
   1400090e1:	add    BYTE PTR [rax],al
   1400090e3:	add    BYTE PTR [rax],al
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rax],ch
   1400090e9:	mov    eax,DWORD PTR [rax]
   1400090eb:	rex add DWORD PTR [rax],eax
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	js     0x1400090f2
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	lock xchg ebp,eax
   1400090fa:	add    BYTE PTR [rax+0x1],al
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rdx+0x0],bh
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	or     BYTE PTR [rsi+0x14000],dl
   14000910e:	add    BYTE PTR [rax],al
   140009110:	jnp    0x140009112
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	sbb    BYTE PTR [rsi+0x14000],dl
   14000911e:	add    BYTE PTR [rax],al
   140009120:	sbb    al,0x0
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	fmul   DWORD PTR [rdx+0x14000]
   14000912e:	add    BYTE PTR [rax],al
   140009130:	jl     0x140009132
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	xor    BYTE PTR [rsi+0x14000],dl
   14000913e:	add    BYTE PTR [rax],al
   140009140:	(bad)  
   140009141:	add    BYTE PTR [rax],al
   140009143:	add    BYTE PTR [rax],al
   140009145:	add    BYTE PTR [rax],al
   140009147:	add    BYTE PTR [rax-0x6a],cl
   14000914a:	add    BYTE PTR [rax+0x1],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rbx],dl
   140009151:	add    BYTE PTR [rax],al
   140009153:	add    BYTE PTR [rax],al
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rax-0x76],bl
   14000915a:	add    BYTE PTR [rax+0x1],al
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rdx],al
   140009161:	add    BYTE PTR [rax],al
   140009163:	add    BYTE PTR [rax],al
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    al,dh
   140009169:	mov    al,BYTE PTR [rax]
   14000916b:	rex add DWORD PTR [rax],eax
   14000916e:	add    BYTE PTR [rax],al
   140009170:	add    eax,DWORD PTR [rax]
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    BYTE PTR [rax],al
   140009176:	add    BYTE PTR [rax],al
   140009178:	push   0x1400096
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax+rax*1],dl
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	js     0x140009120
   14000918a:	add    BYTE PTR [rax+0x1],al
   14000918d:	add    BYTE PTR [rax],al
   14000918f:	add    BYTE PTR [rax+0x0],al
   140009195:	add    BYTE PTR [rax],al
   140009197:	add    BYTE PTR [rax+0x1400096],cl
   14000919d:	add    BYTE PTR [rax],al
   14000919f:	add    BYTE PTR [rbp+0x0],bh
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	add    BYTE PTR [rax],al
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	cwde   
   1400091a9:	xchg   esi,eax
   1400091aa:	add    BYTE PTR [rax+0x1],al
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    BYTE PTR [rsi+0x0],bh
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	test   al,0x96
   1400091ba:	add    BYTE PTR [rax+0x1],al
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    BYTE PTR [rax+rax*1],cl
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	rex mov eax,DWORD PTR [rax]
   1400091cb:	rex add DWORD PTR [rax],eax
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	add    DWORD PTR [rax],0x0
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	mov    eax,0x1400096
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rcx+0x0],ch
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	nop
   1400091e9:	mov    eax,DWORD PTR [rax]
   1400091eb:	rex add DWORD PTR [rax],eax
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	jo     0x1400091f2
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	add    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	enter  0x96,0x40
   1400091fc:	add    DWORD PTR [rax],eax
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	add    DWORD PTR [rax],eax
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	loopne 0x1400091a0
   14000920a:	add    BYTE PTR [rax+0x1],al
   14000920d:	add    BYTE PTR [rax],al
   14000920f:	add    BYTE PTR [rdx+0x0],al
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    al,bh
   140009219:	xchg   esi,eax
   14000921a:	add    BYTE PTR [rax+0x1],al
   14000921d:	add    BYTE PTR [rax],al
   14000921f:	add    BYTE PTR [rax+rax*1+0x0],cl
   140009226:	add    BYTE PTR [rax],al
   140009228:	adc    BYTE PTR [rdi+0x14000],dl
   14000922e:	add    BYTE PTR [rax],al
   140009230:	test   DWORD PTR [rax],eax
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	sub    BYTE PTR [rdi+0x14000],dl
   14000923e:	add    BYTE PTR [rax],al
   140009240:	or     eax,0x0
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax],dh
   140009249:	mov    al,BYTE PTR [rax]
   14000924b:	rex add DWORD PTR [rax],eax
   14000924e:	add    BYTE PTR [rax],al
   140009250:	xchg   BYTE PTR [rax],al
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	cmp    BYTE PTR [rdi+0x14000],dl
   14000925e:	add    BYTE PTR [rax],al
   140009260:	xchg   DWORD PTR [rax],eax
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	xchg   rdi,rax
   14000926a:	add    BYTE PTR [rax+0x1],al
   14000926d:	add    BYTE PTR [rax],al
   14000926f:	add    BYTE PTR [rsi],bl
   140009271:	add    BYTE PTR [rax],al
   140009273:	add    BYTE PTR [rax],al
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rax-0x69],ah
   14000927a:	add    BYTE PTR [rax+0x1],al
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rax+rax*1],ah
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	js     0x140009221
   14000928a:	add    BYTE PTR [rax+0x1],al
   14000928d:	add    BYTE PTR [rax],al
   14000928f:	add    BYTE PTR [rbx],cl
   140009291:	add    BYTE PTR [rax],al
   140009293:	add    BYTE PTR [rax],al
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rax-0x75],bl
   14000929a:	add    BYTE PTR [rax+0x1],al
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    BYTE PTR [rdx],ah
   1400092a1:	add    BYTE PTR [rax],al
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rax+0x1400097],bl
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rdi+0x0],bh
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	mov    al,0x97
   1400092ba:	add    BYTE PTR [rax+0x1],al
   1400092bd:	add    BYTE PTR [rax],al
   1400092bf:	add    BYTE PTR [rcx+0x0],cl
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    al,cl
   1400092c9:	xchg   edi,eax
   1400092ca:	add    BYTE PTR [rax+0x1],al
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rbx+0x0],cl
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    al,bl
   1400092d9:	xchg   edi,eax
   1400092da:	add    BYTE PTR [rax+0x1],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rdx+0x0],cl
   1400092e5:	add    BYTE PTR [rax],al
   1400092e7:	add    al,ch
   1400092e9:	xchg   edi,eax
   1400092ea:	add    BYTE PTR [rax+0x1],al
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rdi],dl
   1400092f1:	add    BYTE PTR [rax],al
   1400092f3:	add    BYTE PTR [rax],al
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    al,bh
   1400092f9:	xchg   edi,eax
   1400092fa:	add    BYTE PTR [rax+0x1],al
   1400092fd:	add    BYTE PTR [rax],al
   1400092ff:	add    BYTE PTR [rax],bl
   140009301:	add    BYTE PTR [rax],al
   140009303:	add    BYTE PTR [rax],al
   140009305:	add    BYTE PTR [rax],al
   140009307:	add    BYTE PTR [rax+0x140008b],ch
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    BYTE PTR [rdi],bl
   140009311:	add    BYTE PTR [rax],al
   140009313:	add    BYTE PTR [rax],al
   140009315:	add    BYTE PTR [rax],al
   140009317:	add    BYTE PTR [rax],bl
   140009319:	cwde   
   14000931a:	add    BYTE PTR [rax+0x1],al
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rdx+0x0],dh
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	sub    BYTE PTR [rax+0x14000],bl
   14000932e:	add    BYTE PTR [rax],al
   140009330:	test   BYTE PTR [rax],al
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    BYTE PTR [rax],al
   140009336:	add    BYTE PTR [rax],al
   140009338:	cdqe   
   14000933a:	add    BYTE PTR [rax+0x1],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rax+0x0],cl
   140009345:	add    BYTE PTR [rax],al
   140009347:	add    BYTE PTR [rax-0x68],bl
   14000934a:	add    BYTE PTR [rax+0x1],al
	...
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rcx+0x64],ah
   140009362:	fs jb  0x1400093ca
   140009365:	jae    0x1400093da
   140009367:	and    BYTE PTR [rsi+0x61],ah
   14000936a:	ins    DWORD PTR es:[rdi],dx
   14000936b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140009373:	jae    0x1400093ea
   140009375:	jo     0x1400093e7
   140009377:	outs   dx,DWORD PTR ds:[rsi]
   140009378:	jb     0x1400093ee
   14000937a:	gs add BYTE PTR fs:[rax],al
   14000937e:	add    BYTE PTR [rax],al
   140009380:	(bad)  
   140009381:	fs fs jb 0x1400093ea
   140009385:	jae    0x1400093fa
   140009387:	and    BYTE PTR [rcx+0x6e],ch
   14000938a:	and    BYTE PTR [rbp+0x73],dh
   14000938d:	add    BYTE PTR gs:[rax],al
   140009390:	(bad)  
   140009391:	fs fs jb 0x1400093fa
   140009395:	jae    0x14000940a
   140009397:	and    BYTE PTR [rsi+0x6f],ch
   14000939a:	je     0x1400093bc
   14000939c:	(bad)  
   14000939d:	jbe    0x140009400
   14000939f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400093a7:	add    BYTE PTR [rcx+0x6c],ah
   1400093aa:	jb     0x140009411
   1400093ac:	(bad)  
   1400093ad:	fs jns 0x1400093d0
   1400093b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400093b3:	outs   dx,BYTE PTR ds:[rsi]
   1400093b4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400093b9:	add    BYTE PTR [rax],al
   1400093bb:	add    BYTE PTR [rax],al
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rcx+0x72],ah
   1400093c2:	addr32 jne 0x140009432
   1400093c5:	outs   dx,BYTE PTR gs:[rsi]
   1400093c7:	je     0x1400093e9
   1400093c9:	ins    BYTE PTR es:[rdi],dx
   1400093ca:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   1400093d1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400093d5:	add    BYTE PTR [eax],al
   1400093d8:	(bad)  
   1400093d9:	jb     0x140009442
   1400093db:	jne    0x14000944a
   1400093dd:	outs   dx,BYTE PTR gs:[rsi]
   1400093df:	je     0x140009401
   1400093e1:	outs   dx,DWORD PTR ds:[rsi]
   1400093e2:	jne    0x140009458
   1400093e4:	and    BYTE PTR [rdi+0x66],ch
   1400093e7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   1400093eb:	(bad)  
   1400093ec:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   1400093f3:	and    BYTE PTR [rcx+0x64],ah
   1400093f6:	fs jb  0x14000945e
   1400093f9:	jae    0x14000946e
   1400093fb:	add    BYTE PTR [rax],al
   1400093fd:	add    BYTE PTR [rax],al
   1400093ff:	add    BYTE PTR [rdx+0x61],ah
   140009402:	and    BYTE PTR fs:[rsi+0x69],ah
   140009406:	ins    BYTE PTR es:[rdi],dx
   140009407:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000940c:	movsxd esi,DWORD PTR [rdx+0x69]
   14000940f:	jo     0x140009485
   140009411:	outs   dx,DWORD PTR ds:[rsi]
   140009412:	jb     0x140009414
   140009414:	add    BYTE PTR [rax],al
   140009416:	add    BYTE PTR [rax],al
   140009418:	(bad)
   14000941d:	gs jae 0x140009493
   140009420:	(bad)  
   140009421:	add    BYTE PTR gs:[eax],al
   140009425:	add    BYTE PTR [rax],al
   140009427:	add    BYTE PTR [rdx+0x72],ah
   14000942a:	outs   dx,DWORD PTR ds:[rsi]
   14000942b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000942f:	jo     0x14000949a
   140009431:	jo     0x140009498
   140009433:	add    BYTE PTR [rax],al
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    BYTE PTR [rbx+0x6f],ah
   14000943a:	outs   dx,BYTE PTR ds:[rsi]
   14000943b:	outs   dx,BYTE PTR ds:[rsi]
   14000943c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009441:	outs   dx,BYTE PTR ds:[rsi]
   140009442:	and    BYTE PTR [rcx+0x62],ah
   140009445:	outs   dx,DWORD PTR ds:[rsi]
   140009446:	jb     0x1400094bc
   140009448:	gs add BYTE PTR fs:[rax],al
   14000944c:	add    BYTE PTR [rax],al
   14000944e:	add    BYTE PTR [rax],al
   140009450:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009453:	outs   dx,BYTE PTR ds:[rsi]
   140009454:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009459:	outs   dx,BYTE PTR ds:[rsi]
   14000945a:	and    BYTE PTR [rcx+0x6c],ah
   14000945d:	jb     0x1400094c4
   14000945f:	(bad)  
   140009460:	fs jns 0x140009483
   140009463:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14000946a:	jb     0x1400094d1
   14000946c:	jae    0x1400094e1
   14000946e:	add    BYTE PTR [rax],al
   140009470:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009473:	outs   dx,BYTE PTR ds:[rsi]
   140009474:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009479:	outs   dx,BYTE PTR ds:[rsi]
   14000947a:	and    BYTE PTR [rdx+0x65],dh
   14000947d:	data16 jne 0x1400094f3
   140009480:	gs add BYTE PTR fs:[rax],al
   140009484:	add    BYTE PTR [rax],al
   140009486:	add    BYTE PTR [rax],al
   140009488:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000948b:	outs   dx,BYTE PTR ds:[rsi]
   14000948c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009491:	outs   dx,BYTE PTR ds:[rsi]
   140009492:	and    BYTE PTR [rdx+0x65],dh
   140009495:	jae    0x1400094fc
   140009497:	je     0x140009499
   140009499:	add    BYTE PTR [rax],al
   14000949b:	add    BYTE PTR [rax],al
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   1400094a3:	je     0x14000950e
   1400094a5:	outs   dx,BYTE PTR ds:[rsi]
   1400094a6:	(bad)  
   1400094a7:	je     0x140009512
   1400094a9:	outs   dx,DWORD PTR ds:[rsi]
   1400094aa:	outs   dx,BYTE PTR ds:[rsi]
   1400094ab:	and    BYTE PTR [rcx+0x64],ah
   1400094ae:	fs jb  0x140009516
   1400094b1:	jae    0x140009526
   1400094b3:	and    BYTE PTR [rdx+0x65],dh
   1400094b6:	jno    0x14000952d
   1400094b8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   1400094bf:	add    BYTE PTR [rbp+0x78],ah
   1400094c2:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   1400094c6:	(bad)  
   1400094c7:	(bad)  
   1400094c8:	ins    BYTE PTR es:[rdi],dx
   1400094c9:	and    BYTE PTR gs:[rsi+0x6f],ah
   1400094cd:	jb     0x14000953c
   1400094cf:	(bad)  
   1400094d0:	je     0x1400094f2
   1400094d2:	gs jb  0x140009547
   1400094d5:	outs   dx,DWORD PTR ds:[rsi]
   1400094d6:	jb     0x1400094d8
   1400094d8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   1400094df:	outs   dx,DWORD PTR ds:[rsi]
   1400094e0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400094e4:	add    BYTE PTR gs:[eax],al
   1400094e8:	push   0x2074736f
   1400094ed:	jne    0x14000955d
   1400094ef:	jb     0x140009556
   1400094f1:	(bad)  
   1400094f2:	movsxd ebp,DWORD PTR [rax+0x61]
   1400094f5:	(bad)  
   1400094f6:	ins    BYTE PTR es:[rdi],dx
   1400094f7:	add    BYTE PTR gs:[rax],al
   1400094fa:	add    BYTE PTR [rax],al
   1400094fc:	add    BYTE PTR [rax],al
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140009508:	gs jb  0x14000952b
   14000950b:	jb     0x140009572
   14000950d:	ins    DWORD PTR es:[rdi],dx
   14000950e:	outs   dx,DWORD PTR ds:[rsi]
   14000950f:	jbe    0x140009576
   140009511:	add    BYTE PTR fs:[rax],al
   140009514:	add    BYTE PTR [rax],al
   140009516:	add    BYTE PTR [rax],al
   140009518:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140009520:	(bad)  
   140009521:	jns    0x140009597
   140009523:	and    BYTE PTR gs:[rbx+0x65],dh
   140009527:	jno    0x14000959e
   140009529:	outs   dx,BYTE PTR gs:[rsi]
   14000952b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000952e:	add    BYTE PTR [rax],al
   140009530:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140009537:	jo     0x1400095ab
   140009539:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140009540:	and    BYTE PTR [rbx+0x6f],ah
   140009543:	outs   dx,BYTE PTR ds:[rsi]
   140009544:	je     0x1400095b8
   140009546:	outs   dx,DWORD PTR ds:[rsi]
   140009547:	ins    BYTE PTR es:[rdi],dx
   140009548:	and    BYTE PTR [rdi+0x70],ch
   14000954b:	gs jb  0x1400095af
   14000954e:	je     0x1400095b9
   140009550:	outs   dx,DWORD PTR ds:[rsi]
   140009551:	outs   dx,BYTE PTR ds:[rsi]
   140009552:	add    BYTE PTR [rax],al
   140009554:	add    BYTE PTR [rax],al
   140009556:	add    BYTE PTR [rax],al
   140009558:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000955f:	and    BYTE PTR [rbx+0x65],dh
   140009562:	imul   eax,DWORD PTR gs:[rax],0x0
   140009566:	add    BYTE PTR [rax],al
   140009568:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14000956f:	jb     0x1400095d6
   140009571:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140009575:	jns    0x140009577
   140009577:	add    BYTE PTR [rbp+0x65],ch
   14000957a:	jae    0x1400095ef
   14000957c:	(bad)  
   14000957d:	and    BYTE PTR gs:[ebx+0x69],dh
   140009582:	jp     0x1400095e9
   140009584:	add    BYTE PTR [rax],al
   140009586:	add    BYTE PTR [rax],al
   140009588:	outs   dx,BYTE PTR ds:[rsi]
   140009589:	gs je  0x140009603
   14000958c:	outs   dx,DWORD PTR ds:[rsi]
   14000958d:	jb     0x1400095fa
   14000958f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140009593:	outs   dx,BYTE PTR ds:[rsi]
   140009594:	add    BYTE PTR [rax],al
   140009596:	add    BYTE PTR [rax],al
   140009598:	outs   dx,BYTE PTR ds:[rsi]
   140009599:	gs je  0x140009613
   14000959c:	outs   dx,DWORD PTR ds:[rsi]
   14000959d:	jb     0x14000960a
   14000959f:	and    BYTE PTR [rdx+0x65],dh
   1400095a2:	jae    0x140009609
   1400095a4:	je     0x1400095a6
   1400095a6:	add    BYTE PTR [rax],al
   1400095a8:	outs   dx,BYTE PTR ds:[rsi]
   1400095a9:	gs je  0x140009623
   1400095ac:	outs   dx,DWORD PTR ds:[rsi]
   1400095ad:	jb     0x14000961a
   1400095af:	and    BYTE PTR [rbp+0x6e],dh
   1400095b2:	jb     0x140009619
   1400095b4:	(bad)  
   1400095b5:	movsxd ebp,DWORD PTR [rax+0x61]
   1400095b8:	(bad)  
   1400095b9:	ins    BYTE PTR es:[rdi],dx
   1400095ba:	add    BYTE PTR gs:[rax],al
   1400095bd:	add    BYTE PTR [rax],al
   1400095bf:	add    BYTE PTR [rsi+0x6f],ch
   1400095c2:	and    BYTE PTR [rdx+0x75],ah
   1400095c5:	data16 data16 gs jb 0x1400095ea
   1400095ca:	jae    0x14000963c
   1400095cc:	(bad)  
   1400095cd:	movsxd esp,DWORD PTR [rbp+0x0]
   1400095d0:	outs   dx,BYTE PTR ds:[rsi]
   1400095d1:	outs   dx,DWORD PTR ds:[rsi]
   1400095d2:	and    BYTE PTR [rbx+0x68],ah
   1400095d5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   1400095dd:	gs jae 0x140009653
	...
   1400095e8:	outs   dx,BYTE PTR ds:[rsi]
   1400095e9:	outs   dx,DWORD PTR ds:[rsi]
   1400095ea:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   1400095ee:	imul   eax,DWORD PTR [rax],0x6e
   1400095f1:	outs   dx,DWORD PTR ds:[rsi]
   1400095f2:	and    BYTE PTR [rbp+0x65],ch
   1400095f5:	jae    0x14000966a
   1400095f7:	(bad)  
   1400095f8:	and    BYTE PTR gs:[ecx+0x76],ah
   1400095fd:	(bad)  
   1400095fe:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140009606:	add    BYTE PTR [rax],al
   140009608:	outs   dx,BYTE PTR ds:[rsi]
   140009609:	outs   dx,DWORD PTR ds:[rsi]
   14000960a:	and    BYTE PTR [rbp+0x65],ch
   14000960d:	jae    0x140009682
   14000960f:	(bad)  
   140009610:	add    BYTE PTR gs:[eax],al
   140009614:	add    BYTE PTR [rax],al
   140009616:	add    BYTE PTR [rax],al
   140009618:	outs   dx,BYTE PTR ds:[rsi]
   140009619:	outs   dx,DWORD PTR ds:[rsi]
   14000961a:	and    BYTE PTR [rax+0x72],dh
   14000961d:	outs   dx,DWORD PTR ds:[rsi]
   14000961e:	je     0x14000968f
   140009620:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009623:	and    BYTE PTR [rdi+0x70],ch
   140009626:	je     0x140009691
   140009628:	outs   dx,DWORD PTR ds:[rsi]
   140009629:	outs   dx,BYTE PTR ds:[rsi]
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	add    BYTE PTR [rax],al
   14000962e:	add    BYTE PTR [rax],al
   140009630:	outs   dx,BYTE PTR ds:[rsi]
   140009631:	outs   dx,DWORD PTR ds:[rsi]
   140009632:	and    BYTE PTR [rbx+0x74],dh
   140009635:	jb     0x14000969c
   140009637:	(bad)  
   140009638:	ins    DWORD PTR es:[rdi],dx
   140009639:	and    BYTE PTR [rdx+0x65],dh
   14000963c:	jae    0x1400096ad
   14000963e:	jne    0x1400096b2
   140009640:	movsxd esp,DWORD PTR [rbp+0x73]
   140009643:	add    BYTE PTR [rax],al
   140009645:	add    BYTE PTR [rax],al
   140009647:	add    BYTE PTR [rsi+0x6f],ch
   14000964a:	and    BYTE PTR [rbx+0x75],dh
   14000964d:	movsxd ebp,DWORD PTR [rax+0x20]
   140009650:	fs gs jbe 0x1400096bd
   140009654:	movsxd esp,DWORD PTR [rbp+0x20]
   140009657:	outs   dx,DWORD PTR ds:[rsi]
   140009658:	jb     0x14000967a
   14000965a:	(bad)  
   14000965b:	fs fs jb 0x1400096c4
   14000965f:	jae    0x1400096d4
   140009661:	add    BYTE PTR [rax],al
   140009663:	add    BYTE PTR [rax],al
   140009665:	add    BYTE PTR [rax],al
   140009667:	add    BYTE PTR [rsi+0x6f],ch
   14000966a:	and    BYTE PTR [rbx+0x75],dh
   14000966d:	movsxd ebp,DWORD PTR [rax+0x20]
   140009670:	jo     0x1400096e4
   140009672:	outs   dx,DWORD PTR ds:[rsi]
   140009673:	movsxd esp,DWORD PTR [rbp+0x73]
   140009676:	jae    0x140009678
   140009678:	outs   dx,BYTE PTR ds:[rsi]
   140009679:	outs   dx,DWORD PTR ds:[rsi]
   14000967a:	je     0x14000969c
   14000967c:	(bad)  
   14000967d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140009681:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140009686:	jns    0x140009688
   140009688:	outs   dx,BYTE PTR ds:[rsi]
   140009689:	outs   dx,DWORD PTR ds:[rsi]
   14000968a:	je     0x1400096ac
   14000968c:	(bad)  
   14000968d:	and    BYTE PTR [rbx+0x6f],dh
   140009690:	movsxd ebp,DWORD PTR [rbx+0x65]
   140009693:	je     0x140009695
   140009695:	add    BYTE PTR [rax],al
   140009697:	add    BYTE PTR [rsi+0x6f],ch
   14000969a:	je     0x1400096bc
   14000969c:	(bad)  
   14000969d:	and    BYTE PTR [rbx+0x74],dh
   1400096a0:	jb     0x140009707
   1400096a2:	(bad)  
   1400096a3:	ins    DWORD PTR es:[rdi],dx
   1400096a4:	add    BYTE PTR [rax],al
   1400096a6:	add    BYTE PTR [rax],al
   1400096a8:	outs   dx,BYTE PTR ds:[rsi]
   1400096a9:	outs   dx,DWORD PTR ds:[rsi]
   1400096aa:	je     0x1400096cc
   1400096ac:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400096af:	outs   dx,BYTE PTR ds:[rsi]
   1400096b0:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400096b5:	add    BYTE PTR [rax],al
   1400096b7:	add    BYTE PTR [rsi+0x6f],ch
   1400096ba:	je     0x1400096dc
   1400096bc:	jae    0x140009733
   1400096be:	jo     0x140009730
   1400096c0:	outs   dx,DWORD PTR ds:[rsi]
   1400096c1:	jb     0x140009737
   1400096c3:	gs add BYTE PTR fs:[rax],al
   1400096c7:	add    BYTE PTR [rdi+0x70],ch
   1400096ca:	gs jb  0x14000972e
   1400096cd:	je     0x140009738
   1400096cf:	outs   dx,DWORD PTR ds:[rsi]
   1400096d0:	outs   dx,BYTE PTR ds:[rsi]
   1400096d1:	and    BYTE PTR [rcx+0x6e],ch
   1400096d4:	and    BYTE PTR [rax+0x72],dh
   1400096d7:	outs   dx,DWORD PTR ds:[rsi]
   1400096d8:	addr32 jb 0x140009740
   1400096db:	jae    0x140009750
   1400096dd:	add    BYTE PTR [rax],al
   1400096df:	add    BYTE PTR [rdi+0x70],ch
   1400096e2:	gs jb  0x140009746
   1400096e5:	je     0x140009750
   1400096e7:	outs   dx,DWORD PTR ds:[rsi]
   1400096e8:	outs   dx,BYTE PTR ds:[rsi]
   1400096e9:	and    BYTE PTR [rsi+0x6f],ch
   1400096ec:	je     0x14000970e
   1400096ee:	jo     0x140009755
   1400096f0:	jb     0x14000975f
   1400096f2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   1400096fa:	gs jb  0x14000975e
   1400096fd:	je     0x140009768
   1400096ff:	outs   dx,DWORD PTR ds:[rsi]
   140009700:	outs   dx,BYTE PTR ds:[rsi]
   140009701:	and    BYTE PTR [rsi+0x6f],ch
   140009704:	je     0x140009726
   140009706:	jae    0x14000977d
   140009708:	jo     0x14000977a
   14000970a:	outs   dx,DWORD PTR ds:[rsi]
   14000970b:	jb     0x140009781
   14000970d:	gs add BYTE PTR fs:[rdi+0x70],ch
   140009712:	gs jb  0x140009776
   140009715:	je     0x140009780
   140009717:	outs   dx,DWORD PTR ds:[rsi]
   140009718:	outs   dx,BYTE PTR ds:[rsi]
   140009719:	and    BYTE PTR [rdi+0x6f],dh
   14000971c:	jne    0x14000978a
   14000971e:	and    BYTE PTR fs:[rdx+0x6c],ah
   140009722:	outs   dx,DWORD PTR ds:[rsi]
   140009723:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009726:	add    BYTE PTR [rax],al
   140009728:	outs   dx,DWORD PTR ds:[rsi]
   140009729:	ja     0x140009799
   14000972b:	gs jb  0x14000974e
   14000972e:	fs gs (bad) 
   140009731:	add    BYTE PTR fs:[rax],al
   140009734:	add    BYTE PTR [rax],al
   140009736:	add    BYTE PTR [rax],al
   140009738:	jo     0x1400097ac
   14000973a:	outs   dx,DWORD PTR ds:[rsi]
   14000973b:	je     0x1400097ac
   14000973d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009740:	and    BYTE PTR [rbp+0x72],ah
   140009743:	jb     0x1400097b4
   140009745:	jb     0x140009747
   140009747:	add    BYTE PTR [rax+0x72],dh
   14000974a:	outs   dx,DWORD PTR ds:[rsi]
   14000974b:	je     0x1400097bc
   14000974d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009750:	and    BYTE PTR [rsi+0x6f],ch
   140009753:	je     0x140009775
   140009755:	jae    0x1400097cc
   140009757:	jo     0x1400097c9
   140009759:	outs   dx,DWORD PTR ds:[rsi]
   14000975a:	jb     0x1400097d0
   14000975c:	gs add BYTE PTR fs:[rax],al
   140009760:	jb     0x1400097c7
   140009762:	(bad)  
   140009763:	and    BYTE PTR fs:[rdi+0x6e],ch
   140009767:	ins    BYTE PTR es:[rdi],dx
   140009768:	jns    0x14000978a
   14000976a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140009771:	jae    0x1400097e7
   140009773:	gs ins DWORD PTR es:[rdi],dx
   140009775:	add    BYTE PTR [rax],al
   140009777:	add    BYTE PTR [rdx+0x65],dh
   14000977a:	jae    0x1400097eb
   14000977c:	jne    0x1400097f0
   14000977e:	movsxd esp,DWORD PTR [rbp+0x20]
   140009781:	fs gs (bad) 
   140009784:	fs ins BYTE PTR es:[rdi],dx
   140009786:	outs   dx,DWORD PTR ds:[rsi]
   140009787:	movsxd ebp,DWORD PTR [rbx+0x20]
   14000978a:	ja     0x1400097fb
   14000978c:	jne    0x1400097fa
   14000978e:	and    BYTE PTR fs:[rdi+0x63],ch
   140009792:	movsxd esi,DWORD PTR [rbp+0x72]
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    BYTE PTR [rdx+0x65],dh
   14000979a:	jae    0x140009811
   14000979c:	ins    BYTE PTR es:[rdi],dx
   14000979d:	je     0x1400097bf
   14000979f:	outs   dx,DWORD PTR ds:[rsi]
   1400097a0:	jne    0x140009816
   1400097a2:	and    BYTE PTR [rdi+0x66],ch
   1400097a5:	and    BYTE PTR [rdx+0x61],dh
   1400097a8:	outs   dx,BYTE PTR ds:[rsi]
   1400097a9:	add    BYTE PTR gs:[eax],al
   1400097ad:	add    BYTE PTR [rax],al
   1400097af:	add    BYTE PTR [rbx+0x74],dh
   1400097b2:	(bad)  
   1400097b3:	je     0x14000981a
   1400097b5:	and    BYTE PTR [rsi+0x6f],ch
   1400097b8:	je     0x1400097da
   1400097ba:	jb     0x140009821
   1400097bc:	movsxd ebp,DWORD PTR [rdi+0x76]
   1400097bf:	gs jb  0x140009823
   1400097c2:	(bad)  
   1400097c3:	ins    BYTE PTR es:[rdi],dx
   1400097c4:	add    BYTE PTR gs:[rax],al
   1400097c7:	add    BYTE PTR [rbx+0x74],dh
   1400097ca:	jb     0x140009831
   1400097cc:	(bad)  
   1400097cd:	ins    DWORD PTR es:[rdi],dx
   1400097ce:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   1400097d2:	outs   dx,DWORD PTR gs:[rsi]
   1400097d4:	jne    0x14000984a
   1400097d6:	add    BYTE PTR [rax],al
   1400097d8:	je     0x14000983f
   1400097da:	js     0x140009850
   1400097dc:	and    BYTE PTR [rsi+0x69],ah
   1400097df:	ins    BYTE PTR es:[rdi],dx
   1400097e0:	and    BYTE PTR gs:[rdx+0x75],ah
   1400097e4:	jae    0x14000985f
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	je     0x140009853
   1400097ea:	ins    DWORD PTR es:[rdi],dx
   1400097eb:	gs and BYTE PTR fs:[rdi+0x75],ch
   1400097f0:	je     0x1400097f2
   1400097f2:	add    BYTE PTR [rax],al
   1400097f4:	add    BYTE PTR [rax],al
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	je     0x140009869
   1400097fa:	outs   dx,DWORD PTR ds:[rsi]
   1400097fb:	and    BYTE PTR [rbp+0x61],ch
   1400097fe:	outs   dx,BYTE PTR ds:[rsi]
   1400097ff:	jns    0x140009821
   140009801:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140009808:	jo     0x14000986f
   14000980a:	outs   dx,BYTE PTR ds:[rsi]
   14000980b:	and    BYTE PTR [rcx+0x6e],ch
   14000980e:	and    BYTE PTR [rbx+0x79],dh
   140009811:	jae    0x140009887
   140009813:	gs ins DWORD PTR es:[rdi],dx
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000981b:	and    BYTE PTR [rbp+0x61],ch
   14000981e:	outs   dx,BYTE PTR ds:[rsi]
   14000981f:	jns    0x140009841
   140009821:	ins    BYTE PTR es:[rdi],dx
   140009822:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140009829:	outs   dx,DWORD PTR ds:[rsi]
   14000982a:	outs   dx,DWORD PTR ds:[rsi]
   14000982b:	and    BYTE PTR [rbp+0x61],ch
   14000982e:	outs   dx,BYTE PTR ds:[rsi]
   14000982f:	jns    0x140009851
   140009831:	jae    0x1400098ac
   140009833:	ins    DWORD PTR es:[rdi],dx
   140009834:	(bad)  
   140009835:	outs   dx,DWORD PTR ds:[rsi]
   140009836:	ins    BYTE PTR es:[rdi],dx
   140009837:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000983e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140009842:	gs ins BYTE PTR es:[rdi],dx
   140009844:	jae    0x140009846
   140009846:	add    BYTE PTR [rax],al
   140009848:	jbe    0x1400098ab
   14000984a:	ins    BYTE PTR es:[rdi],dx
   14000984b:	jne    0x1400098b2
   14000984d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140009851:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009855:	add    BYTE PTR gs:[edi+0x72],dh
   14000985a:	outs   dx,DWORD PTR ds:[rsi]
   14000985b:	outs   dx,BYTE PTR ds:[rsi]
   14000985c:	and    BYTE PTR [eax+0x72],dh
   140009860:	outs   dx,DWORD PTR ds:[rsi]
   140009861:	je     0x1400098d2
   140009863:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009866:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000986a:	add    BYTE PTR gs:[rax],al
   14000986d:	add    BYTE PTR [rax],al
   14000986f:	add    al,dl
   140009871:	pop    rdx
   140009872:	add    BYTE PTR [rax+0x1],al
   140009875:	add    BYTE PTR [rax],al
   140009877:	add    BYTE PTR [rax+0x61],ah
   14000987a:	add    BYTE PTR [rax+0x1],al
   14000987d:	add    BYTE PTR [rax],al
   14000987f:	add    BYTE PTR [rdx+0x61],ah
   140009882:	and    BYTE PTR fs:[rcx+0x6c],ah
   140009886:	ins    BYTE PTR es:[rdi],dx
   140009887:	outs   dx,DWORD PTR ds:[rsi]
   140009888:	movsxd esp,DWORD PTR [rcx+0x74]
   14000988b:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b100000
   140009892:	add    BYTE PTR [rax+0x1],al
   140009895:	add    BYTE PTR [rax],al
   140009897:	add    BYTE PTR [rax+0x61],ah
   14000989a:	add    BYTE PTR [rax+0x1],al
   14000989d:	add    BYTE PTR [rax],al
   14000989f:	add    BYTE PTR [rdx],ah
   1400098a1:	add    eax,0x21993
   1400098a6:	add    BYTE PTR [rax],al
   1400098a8:	loopne 0x140009874
   1400098aa:	add    BYTE PTR [rax],al
   1400098ac:	add    DWORD PTR [rax],eax
   1400098ae:	add    BYTE PTR [rax],al
   1400098b0:	lock retf 0x0
   1400098b4:	(bad)  
   1400098b5:	add    BYTE PTR [rax],al
   1400098b7:	add    BYTE PTR [rax],bl
   1400098b9:	retf   
   1400098ba:	add    BYTE PTR [rax],al
   1400098bc:	and    BYTE PTR [rax],al
   1400098be:	add    BYTE PTR [rax],al
   1400098c0:	add    BYTE PTR [rax],al
   1400098c2:	add    BYTE PTR [rax],al
   1400098c4:	add    DWORD PTR [rax],eax
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	jo     0x14000992b
   1400098ca:	add    BYTE PTR [rax+0x1],al
   1400098cd:	add    BYTE PTR [rax],al
   1400098cf:	add    BYTE PTR [rax+0x14000e1],dh
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rax-0x1e],dl
   1400098da:	add    BYTE PTR [rax+0x1],al
   1400098dd:	add    BYTE PTR [rax],al
   1400098df:	add    BYTE PTR [rcx+0x70],ah
   1400098e2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e0c59
   1400098ec:	push   0x7061776c
   1400098f1:	imul   ebp,DWORD PTR [rip+0x726e6977],0x74732d74        # 0x1b26f0272
   1400098fb:	outs   dx,DWORD PTR ds:[rsi]
   1400098fc:	jb     0x14000995f
   1400098fe:	addr32 gs sub eax,0x312d316c
   140009905:	sub    eax,0x6c642e30
   14000990a:	ins    BYTE PTR es:[rdi],dx
   14000990b:	add    BYTE PTR [rax],al
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rcx+0x70],ah
   140009912:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e0c89
   14000991c:	push   0x2d6c6c65
   140009921:	jae    0x14000998b
   140009923:	gs ins BYTE PTR es:[rdi],dx
   140009925:	ins    BYTE PTR es:[rdi],dx
   140009926:	outs   dx,WORD PTR ds:[rsi]
   140009928:	ins    BYTE PTR es:[rdi],dx
   140009929:	fs gs jb 0x1400099a0
   14000992d:	sub    eax,0x312d316c
   140009932:	sub    eax,0x6c642e30
   140009937:	ins    BYTE PTR es:[rdi],dx
	...
   140009940:	outs   dx,BYTE PTR gs:[esi]
   140009943:	gs jb  0x1400099af
   140009946:	movsxd eax,DWORD PTR [rax]
   140009948:	jne    0x1400099b8
   14000994a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000994e:	outs   dx,BYTE PTR ds:[rsi]
   14000994f:	and    BYTE PTR [rbp+0x72],ah
   140009952:	jb     0x1400099c3
   140009954:	jb     0x140009956
   140009956:	add    BYTE PTR [rax],al
   140009958:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000995f:	ins    DWORD PTR es:[rdi],dx
	...
   140009968:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000996f:	ins    DWORD PTR es:[rdi],dx
   140009970:	and    BYTE PTR [rbx+0x74],dh
   140009973:	jb     0x1400099da
   140009975:	(bad)  
   140009976:	ins    DWORD PTR es:[rdi],dx
   140009977:	and    BYTE PTR [rbp+0x72],ah
   14000997a:	jb     0x1400099eb
   14000997c:	jb     0x14000997e
   14000997e:	add    BYTE PTR [rax],al
   140009980:	jae    0x1400099fb
   140009982:	jae    0x1400099f8
   140009984:	gs ins DWORD PTR es:[rdi],dx
   140009986:	add    BYTE PTR [rax],al
   140009988:	outs   dx,BYTE PTR ds:[rsi]
   140009989:	add    BYTE PTR [rax+rax*1+0x64],dh
   14000998d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009991:	add    BYTE PTR [rsi],ch
   140009993:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140009997:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000999b:	add    BYTE PTR [rax],al
   14000999d:	add    BYTE PTR [rax],al
   14000999f:	add    BYTE PTR [rsp+riz*2+0x72],cl
   1400099a3:	rex.RX (bad) 
   1400099a5:	jae    0x140009a1b
   1400099a7:	rex.RX (bad) 
   1400099a9:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   1400099b1:	gs jb  0x1400099f7
   1400099b4:	(bad)  
   1400099b5:	ins    BYTE PTR es:[rdi],dx
   1400099b6:	ins    BYTE PTR es:[rdi],dx
   1400099b7:	outs   dx,DWORD PTR ds:[rsi]
   1400099b8:	jne    0x140009a2e
   1400099ba:	add    BYTE PTR [rax],al
   1400099bc:	add    BYTE PTR [rax],al
   1400099be:	add    BYTE PTR [rax],al
   1400099c0:	push   rdx
   1400099c1:	je     0x140009a2f
   1400099c3:	rex.WRX je 0x140009a19
   1400099c6:	je     0x140009a29
   1400099c8:	je     0x140009a3f
   1400099ca:	jae    0x140009a20
   1400099cc:	outs   dx,DWORD PTR ds:[rsi]
   1400099cd:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400099cf:	jae    0x140009a16
   1400099d1:	jb     0x140009a45
   1400099d3:	outs   dx,DWORD PTR ds:[rsi]
   1400099d4:	jb     0x140009a24
   1400099d6:	outs   dx,DWORD PTR ds:[rsi]
   1400099d7:	push   rsp
   1400099d8:	gs (bad) 
   1400099da:	add    BYTE PTR [rax],al
   1400099dc:	add    BYTE PTR [rax],al
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400099e7:	and    BYTE PTR [rbx+0x74],dh
   1400099ea:	jb     0x140009a55
   1400099ec:	outs   dx,BYTE PTR ds:[rsi]
   1400099ed:	and    BYTE PTR [eax+0x6f],dh
   1400099f1:	jae    0x140009a5c
   1400099f3:	je     0x140009a5e
   1400099f5:	outs   dx,DWORD PTR ds:[rsi]
   1400099f6:	outs   dx,BYTE PTR ds:[rsi]
   1400099f7:	add    BYTE PTR [rbx+0x74],dh
   1400099fa:	jb     0x140009a65
   1400099fc:	outs   dx,BYTE PTR ds:[rsi]
   1400099fd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140009a02:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140009a06:	add    BYTE PTR [eax+eax*1+0x6f],dl
   140009a0b:	add    BYTE PTR [rcx+0x0],ah
   140009a0e:	jae    0x140009a10
   140009a10:	je     0x140009a12
   140009a12:	pop    rdi
   140009a13:	add    BYTE PTR [rbx+0x0],al
   140009a16:	outs   dx,DWORD PTR ds:[rsi]
   140009a17:	add    BYTE PTR [rbp+0x0],ch
   140009a1a:	jo     0x140009a1c
   140009a1c:	(bad)  
   140009a1d:	add    BYTE PTR [rax+rax*1+0x49],dh
   140009a21:	add    BYTE PTR [rbx+0x0],dh
   140009a24:	jae    0x140009a26
   140009a26:	jne    0x140009a28
   140009a28:	add    BYTE PTR gs:[rax],al
   140009a2b:	add    BYTE PTR [rax],al
   140009a2d:	add    BYTE PTR [rax],al
   140009a2f:	add    BYTE PTR [rax+rax*1+0x69],al
   140009a33:	add    BYTE PTR [rcx+0x0],ah
   140009a36:	ins    BYTE PTR es:[rdi],dx
   140009a37:	add    BYTE PTR [rdi+0x0],ch
   140009a3a:	add    BYTE PTR [edi+0x0],bl
   140009a3e:	rex.XB add BYTE PTR [r9+0x0],spl
   140009a42:	outs   dx,BYTE PTR ds:[rsi]
   140009a43:	add    BYTE PTR [rax+rax*1+0x49],dh
   140009a47:	add    BYTE PTR [rsi+0x0],ch
   140009a4a:	jae    0x140009a4c
   140009a4c:	je     0x140009a4e
   140009a4e:	(bad)  
   140009a4f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009a53:	add    BYTE PTR [rbp+0x0],dl
   140009a56:	jo     0x140009a58
   140009a58:	add    BYTE PTR fs:[rcx+0x0],ah
   140009a5c:	je     0x140009a5e
   140009a5e:	add    BYTE PTR gs:[rax],al
   140009a61:	add    BYTE PTR [rax],al
   140009a63:	add    BYTE PTR [rax],al
   140009a65:	add    BYTE PTR [rax],al
   140009a67:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009a6b:	add    BYTE PTR [rcx+0x0],ah
   140009a6e:	jae    0x140009a70
   140009a70:	je     0x140009a72
   140009a72:	pop    rdi
   140009a73:	add    BYTE PTR [rcx+0x0],cl
   140009a76:	outs   dx,BYTE PTR ds:[rsi]
   140009a77:	add    BYTE PTR [rbx+0x0],dh
   140009a7a:	je     0x140009a7c
   140009a7c:	(bad)  
   140009a7d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009a81:	add    BYTE PTR [rsi+0x0],cl
   140009a84:	add    BYTE PTR gs:[rbp+0x0],ah
   140009a88:	add    BYTE PTR fs:[rbp+0x0],cl
   140009a8c:	outs   dx,DWORD PTR ds:[rsi]
   140009a8d:	add    BYTE PTR [rdx+0x0],dh
   140009a90:	add    BYTE PTR gs:[rbx+0x0],dl
   140009a94:	jo     0x140009a96
   140009a96:	(bad)  
   140009a97:	add    BYTE PTR [rbx+0x0],ah
   140009a9a:	add    BYTE PTR gs:[rax],al
   140009a9d:	add    BYTE PTR [rax],al
   140009a9f:	add    BYTE PTR [rax+rax*1+0x69],al
   140009aa3:	add    BYTE PTR [rcx+0x0],ah
   140009aa6:	ins    BYTE PTR es:[rdi],dx
   140009aa7:	add    BYTE PTR [rdi+0x0],ch
   140009aaa:	add    BYTE PTR [edi+0x0],bl
   140009aae:	add    BYTE PTR [rdi+0x0],r13b
   140009ab2:	ja     0x140009ab4
   140009ab4:	outs   dx,BYTE PTR ds:[rsi]
   140009ab5:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009ab9:	add    BYTE PTR [rcx+0x0],ah
   140009abc:	add    BYTE PTR fs:[rcx+0x0],al
   140009ac0:	jbe    0x140009ac2
   140009ac2:	(bad)  
   140009ac3:	add    BYTE PTR [rcx+0x0],ch
   140009ac6:	ins    BYTE PTR es:[rdi],dx
   140009ac7:	add    BYTE PTR [rcx+0x0],ah
   140009aca:	(bad)  
   140009acb:	add    BYTE PTR [rax+rax*1+0x65],ch
	...
   140009ad7:	add    BYTE PTR [rax+rax*1+0x69],al
   140009adb:	add    BYTE PTR [rcx+0x0],ah
   140009ade:	ins    BYTE PTR es:[rdi],dx
   140009adf:	add    BYTE PTR [rdi+0x0],ch
   140009ae2:	add    BYTE PTR [edi+0x0],bl
   140009ae6:	push   rbx
   140009ae7:	add    BYTE PTR [rbx+0x0],ah
   140009aea:	push   0x64006500
   140009aef:	add    BYTE PTR [rbp+0x0],dh
   140009af2:	ins    BYTE PTR es:[rdi],dx
   140009af3:	add    BYTE PTR [rbp+0x0],ah
   140009af6:	push   rbp
   140009af7:	add    BYTE PTR [rax+0x0],dh
   140009afa:	add    BYTE PTR fs:[rcx+0x0],ah
   140009afe:	je     0x140009b00
   140009b00:	add    BYTE PTR gs:[rsi+0x0],al
   140009b04:	(bad)  
   140009b05:	add    BYTE PTR [rcx+0x0],ch
   140009b08:	ins    BYTE PTR es:[rdi],dx
   140009b09:	add    BYTE PTR [rbp+0x0],ah
   140009b0c:	add    BYTE PTR fs:[rax],al
   140009b0f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009b13:	add    BYTE PTR [rcx+0x0],ah
   140009b16:	jae    0x140009b18
   140009b18:	je     0x140009b1a
   140009b1a:	pop    rdi
   140009b1b:	add    BYTE PTR [rdx+0x0],dl
   140009b1e:	add    BYTE PTR gs:[rcx+0x0],ah
   140009b22:	add    BYTE PTR fs:[rcx+0x0],bh
   140009b26:	push   rsp
   140009b27:	add    BYTE PTR [rdi+0x0],ch
   140009b2a:	push   rdx
   140009b2b:	add    BYTE PTR [rbp+0x0],ah
   140009b2e:	(bad)  
   140009b2f:	add    BYTE PTR [rdi+0x0],ch
   140009b32:	outs   dx,DWORD PTR ds:[rsi]
   140009b33:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009b37:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009b3b:	add    BYTE PTR [rcx+0x0],ah
   140009b3e:	jae    0x140009b40
   140009b40:	je     0x140009b42
   140009b42:	pop    rdi
   140009b43:	add    BYTE PTR [rcx+0x0],cl
   140009b46:	outs   dx,BYTE PTR ds:[rsi]
   140009b47:	add    BYTE PTR [rbx+0x0],dh
   140009b4a:	je     0x140009b4c
   140009b4c:	(bad)  
   140009b4d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009b51:	add    BYTE PTR [rsi+0x0],cl
   140009b54:	add    BYTE PTR gs:[rbp+0x0],ah
   140009b58:	add    BYTE PTR fs:[rbp+0x0],al
   140009b5c:	jne    0x140009b5e
   140009b5e:	ins    BYTE PTR es:[rdi],dx
   140009b5f:	add    BYTE PTR [rcx+0x0],ah
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	add    BYTE PTR [rax],al
   140009b66:	add    BYTE PTR [rax],al
   140009b68:	add    BYTE PTR [rcx+0x0],r13b
   140009b6c:	(bad)  
   140009b6d:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009b71:	add    BYTE PTR [rdi+0x0],ah
   140009b74:	pop    rdi
   140009b75:	add    BYTE PTR [rcx+0x0],cl
   140009b78:	outs   dx,BYTE PTR ds:[rsi]
   140009b79:	add    BYTE PTR [rbx+0x0],dh
   140009b7c:	je     0x140009b7e
   140009b7e:	(bad)  
   140009b7f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009b83:	add    BYTE PTR [rsi+0x0],cl
   140009b86:	add    BYTE PTR gs:[rbp+0x0],ah
   140009b8a:	add    BYTE PTR fs:[rbp+0x0],al
   140009b8e:	jne    0x140009b90
   140009b90:	ins    BYTE PTR es:[rdi],dx
   140009b91:	add    BYTE PTR [rcx+0x0],ah
   140009b94:	add    BYTE PTR [rax],al
   140009b96:	add    BYTE PTR [rax],al
   140009b98:	add    BYTE PTR [rdx],dl
   140009b9a:	add    BYTE PTR [rax+0x1],al
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    al,ah
   140009ba1:	adc    al,BYTE PTR [rax]
   140009ba3:	rex add DWORD PTR [rax],eax
   140009ba6:	add    BYTE PTR [rax],al
   140009ba8:	lock adc al,BYTE PTR [rax]
   140009bab:	rex add DWORD PTR [rax],eax
   140009bae:	add    BYTE PTR [rax],al
   140009bb0:	xor    BYTE PTR [rdx],dl
   140009bb2:	add    BYTE PTR [rax+0x1],al
   140009bb5:	add    BYTE PTR [rax],al
   140009bb7:	add    al,al
   140009bb9:	adc    al,BYTE PTR [rax]
   140009bbb:	rex add DWORD PTR [rax],eax
   140009bbe:	add    BYTE PTR [rax],al
   140009bc0:	push   rax
   140009bc1:	adc    al,BYTE PTR [rax]
   140009bc3:	rex add DWORD PTR [rax],eax
   140009bc6:	add    BYTE PTR [rax],al
   140009bc8:	push   rdi
   140009bc9:	add    BYTE PTR [rcx+0x0],ch
   140009bcc:	outs   dx,BYTE PTR ds:[rsi]
   140009bcd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140009bd1:	add    BYTE PTR [rdi+0x0],dh
   140009bd4:	jae    0x140009bd6
   140009bd6:	add    BYTE PTR cs:[rbx+0x0],dl
   140009bda:	jns    0x140009bdc
   140009bdc:	jae    0x140009bde
   140009bde:	je     0x140009be0
   140009be0:	add    BYTE PTR gs:[rbp+0x0],ch
   140009be4:	add    BYTE PTR cs:[rax+rax*1+0x61],cl
   140009be9:	add    BYTE PTR [rbp+0x0],dh
   140009bec:	outs   dx,BYTE PTR ds:[rsi]
   140009bed:	add    BYTE PTR [rbx+0x0],ah
   140009bf0:	push   0x72006500
   140009bf5:	add    BYTE PTR [rax],al
   140009bf7:	add    BYTE PTR [rax+rax*1+0x69],al
   140009bfb:	add    BYTE PTR [rcx+0x0],ah
   140009bfe:	ins    BYTE PTR es:[rdi],dx
   140009bff:	add    BYTE PTR [rdi+0x0],ch
   140009c02:	add    BYTE PTR [edi+0x0],bl
   140009c06:	push   rdx
   140009c07:	add    BYTE PTR [rbp+0x0],ah
   140009c0a:	(bad)  
   140009c0b:	add    BYTE PTR [rdi+0x0],ch
   140009c0e:	outs   dx,DWORD PTR ds:[rsi]
   140009c0f:	add    BYTE PTR [rax+rax*1+0x57],dh
   140009c13:	add    BYTE PTR [rcx+0x0],ah
   140009c16:	jb     0x140009c18
   140009c18:	outs   dx,BYTE PTR ds:[rsi]
   140009c19:	add    BYTE PTR [rcx+0x0],ch
   140009c1c:	outs   dx,BYTE PTR ds:[rsi]
   140009c1d:	add    BYTE PTR [rdi+0x0],ah
	...
   140009c28:	add    BYTE PTR [rcx+0x0],r13b
   140009c2c:	(bad)  
   140009c2d:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009c31:	add    BYTE PTR [rdi+0x0],ah
   140009c34:	pop    rdi
   140009c35:	add    BYTE PTR [rbx+0x0],dl
   140009c38:	movsxd eax,DWORD PTR [rax]
   140009c3a:	push   0x64006500
   140009c3f:	add    BYTE PTR [rbp+0x0],dh
   140009c42:	ins    BYTE PTR es:[rdi],dx
   140009c43:	add    BYTE PTR [rbp+0x0],ah
   140009c46:	push   rbp
   140009c47:	add    BYTE PTR [rax+0x0],dh
   140009c4a:	add    BYTE PTR fs:[rcx+0x0],ah
   140009c4e:	je     0x140009c50
   140009c50:	add    BYTE PTR gs:[rax],al
	...
   140009c5f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009c63:	add    BYTE PTR [rcx+0x0],ah
   140009c66:	jae    0x140009c68
   140009c68:	je     0x140009c6a
   140009c6a:	pop    rdi
   140009c6b:	add    BYTE PTR [rbp+0x0],dl
   140009c6e:	jo     0x140009c70
   140009c70:	add    BYTE PTR fs:[rcx+0x0],ah
   140009c74:	je     0x140009c76
   140009c76:	add    BYTE PTR gs:[rbx+0x0],dl
   140009c7a:	jne    0x140009c7c
   140009c7c:	movsxd eax,DWORD PTR [rax]
   140009c7e:	movsxd eax,DWORD PTR [rax]
   140009c80:	add    BYTE PTR gs:[rbx+0x0],dh
   140009c84:	jae    0x140009c86
   140009c86:	data16 add BYTE PTR [rbp+0x0],dh
   140009c8a:	ins    BYTE PTR es:[rdi],dx
   140009c8b:	add    BYTE PTR [rdi+0x0],dl
   140009c8e:	imul   eax,DWORD PTR [rax],0x680074
   140009c94:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140009c98:	je     0x140009c9a
   140009c9a:	imul   eax,DWORD PTR [rax],0x610067
   140009ca0:	je     0x140009ca2
   140009ca2:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140009cb0:	push   rsp
   140009cb1:	add    BYTE PTR [rdi+0x0],ch
   140009cb4:	(bad)  
   140009cb5:	add    BYTE PTR [rbx+0x0],dh
   140009cb8:	je     0x140009cba
   140009cba:	pop    rdi
   140009cbb:	add    BYTE PTR [rax+rax*1+0x6f],al
   140009cbf:	add    BYTE PTR [rdi+0x0],dh
   140009cc2:	outs   dx,BYTE PTR ds:[rsi]
   140009cc3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009cc7:	add    BYTE PTR [rcx+0x0],ah
   140009cca:	add    BYTE PTR fs:[rsi+0x0],cl
   140009cce:	add    BYTE PTR gs:[rbp+0x0],ah
   140009cd2:	add    BYTE PTR fs:[rbp+0x0],dl
   140009cd6:	jae    0x140009cd8
   140009cd8:	add    BYTE PTR gs:[rdx+0x0],dh
   140009cdc:	add    BYTE PTR [r15+0x0],spl
   140009ce0:	jb     0x140009ce2
   140009ce2:	add    BYTE PTR gs:[rbp+0x0],ah
   140009ce6:	ins    DWORD PTR es:[rdi],dx
   140009ce7:	add    BYTE PTR [rbp+0x0],ah
   140009cea:	outs   dx,BYTE PTR ds:[rsi]
   140009ceb:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009cef:	add    bl,al
   140009cf1:	push   rcx
   140009cf2:	jno    0x140009d1b
   140009cf4:	ds sahf 
   140009cf6:	test   BYTE PTR [rdx-0x6f],0xa4
   140009cfa:	pop    rbp
   140009cfb:	std    
   140009cfc:	jmp    0x140009d21
   140009cfe:	and    al,0x51
   140009d00:	push   rsp
   140009d01:	add    BYTE PTR [rdi+0x0],ch
   140009d04:	(bad)  
   140009d05:	add    BYTE PTR [rbx+0x0],dh
   140009d08:	je     0x140009d0a
   140009d0a:	pop    rdi
   140009d0b:	add    BYTE PTR [rax+rax*1+0x6f],al
   140009d0f:	add    BYTE PTR [rdi+0x0],dh
   140009d12:	outs   dx,BYTE PTR ds:[rsi]
   140009d13:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009d17:	add    BYTE PTR [rcx+0x0],ah
   140009d1a:	add    BYTE PTR fs:[rsi+0x0],cl
   140009d1e:	add    BYTE PTR gs:[rbp+0x0],ah
   140009d22:	add    BYTE PTR fs:[rbp+0x0],cl
   140009d26:	outs   dx,DWORD PTR ds:[rsi]
   140009d27:	add    BYTE PTR [rdx+0x0],dh
   140009d2a:	add    BYTE PTR gs:[rbx+0x0],dl
   140009d2e:	jo     0x140009d30
   140009d30:	(bad)  
   140009d31:	add    BYTE PTR [rbx+0x0],ah
   140009d34:	add    BYTE PTR gs:[rax],al
   140009d37:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009d3b:	add    BYTE PTR [rcx+0x0],ah
   140009d3e:	jae    0x140009d40
   140009d40:	je     0x140009d42
   140009d42:	pop    rdi
   140009d43:	add    BYTE PTR [rax+rax*1+0x6f],al
   140009d47:	add    BYTE PTR [rdi+0x0],dh
   140009d4a:	outs   dx,BYTE PTR ds:[rsi]
   140009d4b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009d4f:	add    BYTE PTR [rcx+0x0],ah
   140009d52:	add    BYTE PTR fs:[rsi+0x0],cl
   140009d56:	add    BYTE PTR gs:[rbp+0x0],ah
   140009d5a:	add    BYTE PTR fs:[rdi+0x0],dl
   140009d5e:	imul   eax,DWORD PTR [rax],0x690066
	...
   140009d70:	push   rsp
   140009d71:	add    BYTE PTR [rdi+0x0],ch
   140009d74:	(bad)  
   140009d75:	add    BYTE PTR [rbx+0x0],dh
   140009d78:	je     0x140009d7a
   140009d7a:	pop    rdi
   140009d7b:	add    BYTE PTR [rax+rax*1+0x6f],al
   140009d7f:	add    BYTE PTR [rdi+0x0],dh
   140009d82:	outs   dx,BYTE PTR ds:[rsi]
   140009d83:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009d87:	add    BYTE PTR [rcx+0x0],ah
   140009d8a:	add    BYTE PTR fs:[rsi+0x0],dl
   140009d8e:	imul   eax,DWORD PTR [rax],0x430061
   140009d94:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140009d99:	add    BYTE PTR [rbp+0x0],dh
   140009d9c:	ins    BYTE PTR es:[rdi],dx
   140009d9d:	add    BYTE PTR [rcx+0x0],ah
   140009da0:	jb     0x140009da2
   140009da2:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140009da6:	add    BYTE PTR gs:[rax+rax*1+0x55],ah
   140009dab:	add    BYTE PTR [rbx+0x0],dh
   140009dae:	add    BYTE PTR gs:[rdx+0x0],dh
   140009db2:	add    BYTE PTR [r15+0x0],spl
   140009db6:	jb     0x140009db8
   140009db8:	add    BYTE PTR gs:[rbp+0x0],ah
   140009dbc:	ins    DWORD PTR es:[rdi],dx
   140009dbd:	add    BYTE PTR [rbp+0x0],ah
   140009dc0:	outs   dx,BYTE PTR ds:[rsi]
   140009dc1:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    BYTE PTR [rax+rax*1+0x69],al
   140009dcb:	add    BYTE PTR [rcx+0x0],ah
   140009dce:	ins    BYTE PTR es:[rdi],dx
   140009dcf:	add    BYTE PTR [rdi+0x0],ch
   140009dd2:	add    BYTE PTR [edi+0x0],bl
   140009dd6:	push   rdx
   140009dd7:	add    BYTE PTR [rbp+0x0],ah
   140009dda:	(bad)  
   140009ddb:	add    BYTE PTR [rdi+0x0],ch
   140009dde:	outs   dx,DWORD PTR ds:[rsi]
   140009ddf:	add    BYTE PTR [rax+rax*1+0x50],dh
   140009de3:	add    BYTE PTR [rdi+0x0],ch
   140009de6:	jae    0x140009de8
   140009de8:	je     0x140009dea
   140009dea:	jo     0x140009dec
   140009dec:	outs   dx,DWORD PTR ds:[rsi]
   140009ded:	add    BYTE PTR [rsi+0x0],ch
   140009df0:	add    BYTE PTR gs:[rbp+0x0],cl
   140009df4:	add    BYTE PTR [ebp+0x0],ch
   140009df8:	je     0x140009dfa
   140009dfa:	add    BYTE PTR [rax],al
   140009dfc:	add    BYTE PTR [rax],al
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	add    BYTE PTR [rcx+0x0],r13b
   140009e04:	(bad)  
   140009e05:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009e09:	add    BYTE PTR [rdi+0x0],ah
   140009e0c:	pop    rdi
   140009e0d:	add    BYTE PTR [rdx+0x0],dl
   140009e10:	add    BYTE PTR gs:[rdx+0x0],ah
   140009e14:	outs   dx,DWORD PTR ds:[rsi]
   140009e15:	add    BYTE PTR [rdi+0x0],ch
   140009e18:	je     0x140009e1a
   140009e1a:	rex.WB add BYTE PTR [r13+0x0],bpl
   140009e1e:	ins    DWORD PTR es:[rdi],dx
   140009e1f:	add    BYTE PTR [rcx+0x0],ch
   140009e22:	outs   dx,BYTE PTR ds:[rsi]
   140009e23:	add    BYTE PTR [rbp+0x0],ah
   140009e26:	outs   dx,BYTE PTR ds:[rsi]
   140009e27:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009e2b:	add    BYTE PTR [rax],al
   140009e2d:	add    BYTE PTR [rax],al
   140009e2f:	add    BYTE PTR [rax+rax*1+0x69],al
   140009e33:	add    BYTE PTR [rcx+0x0],ah
   140009e36:	ins    BYTE PTR es:[rdi],dx
   140009e37:	add    BYTE PTR [rdi+0x0],ch
   140009e3a:	add    BYTE PTR [edi+0x0],bl
   140009e3e:	add    BYTE PTR [rcx+0x0],r12b
   140009e42:	je     0x140009e44
   140009e44:	(bad)  
   140009e45:	add    BYTE PTR [rbp+0x0],cl
   140009e48:	imul   eax,DWORD PTR [rax],0x720067
   140009e4e:	(bad)  
   140009e4f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009e53:	add    BYTE PTR [rdi+0x0],ch
   140009e56:	outs   dx,BYTE PTR ds:[rsi]
   140009e57:	add    BYTE PTR [rsi+0x0],al
   140009e5a:	(bad)  
   140009e5b:	add    BYTE PTR [rcx+0x0],ch
   140009e5e:	ins    BYTE PTR es:[rdi],dx
   140009e5f:	add    BYTE PTR [rbp+0x0],ah
   140009e62:	add    BYTE PTR fs:[rax],al
   140009e65:	add    BYTE PTR [rax],al
   140009e67:	add    BYTE PTR [rdi+0x79],ch
   140009e6a:	test   eax,0xdf723e44
   140009e6f:	rex.WRXB movabs ds:0x4484c0b0753e0318,al
   140009e79:	add    BYTE PTR [rcx+0x0],ch
   140009e7c:	(bad)  
   140009e7d:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009e81:	add    BYTE PTR [rdi+0x0],ah
   140009e84:	pop    rdi
   140009e85:	add    BYTE PTR [rbx+0x0],al
   140009e88:	(bad)  
   140009e89:	add    BYTE PTR [rsi+0x0],ch
   140009e8c:	je     0x140009e8e
   140009e8e:	add    BYTE PTR [rdi+0x0],r13b
   140009e92:	ja     0x140009e94
   140009e94:	outs   dx,BYTE PTR ds:[rsi]
   140009e95:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140009e99:	add    BYTE PTR [rcx+0x0],ah
   140009e9c:	add    BYTE PTR fs:[rbp+0x0],dl
   140009ea0:	jo     0x140009ea2
   140009ea2:	add    BYTE PTR fs:[rcx+0x0],ah
   140009ea6:	je     0x140009ea8
   140009ea8:	add    BYTE PTR gs:[rax],al
   140009eab:	add    BYTE PTR [rax],al
   140009ead:	add    BYTE PTR [rax],al
   140009eaf:	add    BYTE PTR [rax],al
   140009eb1:	adc    al,BYTE PTR [rax]
   140009eb3:	rex add DWORD PTR [rax],eax
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	rcl    BYTE PTR [rbx],0x0
   140009ebb:	rex add DWORD PTR [rax],eax
   140009ebe:	add    BYTE PTR [rax],al
   140009ec0:	rcl    BYTE PTR [rbx],1
   140009ec2:	add    BYTE PTR [rax+0x1],al
   140009ec5:	add    BYTE PTR [rax],al
   140009ec7:	add    BYTE PTR [rax+0x14],al
   140009eca:	add    BYTE PTR [rax+0x1],al
   140009ecd:	add    BYTE PTR [rax],al
   140009ecf:	add    al,al
   140009ed1:	adc    al,BYTE PTR [rax]
   140009ed3:	rex add DWORD PTR [rax],eax
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	push   rax
   140009ed9:	adc    al,BYTE PTR [rax]
   140009edb:	rex add DWORD PTR [rax],eax
   140009ede:	add    BYTE PTR [rax],al
   140009ee0:	push   rsp
   140009ee1:	add    BYTE PTR [rdi+0x0],ch
   140009ee4:	(bad)  
   140009ee5:	add    BYTE PTR [rbx+0x0],dh
   140009ee8:	je     0x140009eea
   140009eea:	pop    rdi
   140009eeb:	add    BYTE PTR [rdx+0x0],dl
   140009eee:	add    BYTE PTR gs:[rdx+0x0],ah
   140009ef2:	outs   dx,DWORD PTR ds:[rsi]
   140009ef3:	add    BYTE PTR [rdi+0x0],ch
   140009ef6:	je     0x140009ef8
   140009ef8:	push   rdx
   140009ef9:	add    BYTE PTR [rbp+0x0],ah
   140009efc:	ins    DWORD PTR es:[rdi],dx
   140009efd:	add    BYTE PTR [rcx+0x0],ch
   140009f00:	outs   dx,BYTE PTR ds:[rsi]
   140009f01:	add    BYTE PTR [rax+rax*1+0x65],ah
   140009f05:	add    BYTE PTR [rdx+0x0],dh
	...
   140009f10:	add    BYTE PTR [rdx],dl
   140009f12:	add    BYTE PTR [rax+0x1],al
   140009f15:	add    BYTE PTR [rax],al
   140009f17:	add    BYTE PTR [rax+0x13],ah
   140009f1a:	add    BYTE PTR [rax+0x1],al
   140009f1d:	add    BYTE PTR [rax],al
   140009f1f:	add    BYTE PTR [rax+0x13],dh
   140009f22:	add    BYTE PTR [rax+0x1],al
   140009f25:	add    BYTE PTR [rax],al
   140009f27:	add    BYTE PTR [rax],dh
   140009f29:	adc    al,BYTE PTR [rax]
   140009f2b:	rex add DWORD PTR [rax],eax
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	rcl    BYTE PTR [rdx],0x0
   140009f33:	rex add DWORD PTR [rax],eax
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	push   rax
   140009f39:	adc    al,BYTE PTR [rax]
   140009f3b:	rex add DWORD PTR [rax],eax
   140009f3e:	add    BYTE PTR [rax],al
   140009f40:	push   rsp
   140009f41:	add    BYTE PTR [rdi+0x0],ch
   140009f44:	(bad)  
   140009f45:	add    BYTE PTR [rbx+0x0],dh
   140009f48:	je     0x140009f4a
   140009f4a:	pop    rdi
   140009f4b:	add    BYTE PTR [rbp+0x0],dl
   140009f4e:	jo     0x140009f50
   140009f50:	add    BYTE PTR fs:[rcx+0x0],ah
   140009f54:	je     0x140009f56
   140009f56:	add    BYTE PTR gs:[rbx+0x0],dl
   140009f5a:	jne    0x140009f5c
   140009f5c:	movsxd eax,DWORD PTR [rax]
   140009f5e:	movsxd eax,DWORD PTR [rax]
   140009f60:	add    BYTE PTR gs:[rbx+0x0],dh
   140009f64:	jae    0x140009f66
   140009f66:	data16 add BYTE PTR [rbp+0x0],dh
   140009f6a:	ins    BYTE PTR es:[rdi],dx
   140009f6b:	add    BYTE PTR [rax],al
   140009f6d:	add    BYTE PTR [rax],al
   140009f6f:	add    BYTE PTR [rax],al
   140009f71:	adc    al,BYTE PTR [rax]
   140009f73:	rex add DWORD PTR [rax],eax
   140009f76:	add    BYTE PTR [rax],al
   140009f78:	shl    BYTE PTR [rax+0x0],1
   140009f7b:	rex add DWORD PTR [rax],eax
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	shl    BYTE PTR [rax+0x0],1
   140009f83:	rex add DWORD PTR [rax],eax
   140009f86:	add    BYTE PTR [rax],al
   140009f88:	xor    BYTE PTR [rdx],dl
   140009f8a:	add    BYTE PTR [rax+0x1],al
   140009f8d:	add    BYTE PTR [rax],al
   140009f8f:	add    al,al
   140009f91:	adc    al,BYTE PTR [rax]
   140009f93:	rex add DWORD PTR [rax],eax
   140009f96:	add    BYTE PTR [rax],al
   140009f98:	push   rax
   140009f99:	adc    al,BYTE PTR [rax]
   140009f9b:	rex add DWORD PTR [rax],eax
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	push   rdi
   140009fa1:	add    BYTE PTR [rcx+0x0],ch
   140009fa4:	outs   dx,BYTE PTR ds:[rsi]
   140009fa5:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140009fa9:	add    BYTE PTR [rdi+0x0],dh
   140009fac:	jae    0x140009fae
   140009fae:	add    BYTE PTR cs:[rsi+0x0],al
   140009fb2:	outs   dx,DWORD PTR ds:[rsi]
   140009fb3:	add    BYTE PTR [rbp+0x0],dh
   140009fb6:	outs   dx,BYTE PTR ds:[rsi]
   140009fb7:	add    BYTE PTR [rax+rax*1+0x61],ah
   140009fbb:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009fbf:	add    BYTE PTR [rdi+0x0],ch
   140009fc2:	outs   dx,BYTE PTR ds:[rsi]
   140009fc3:	add    BYTE PTR [rsi],ch
   140009fc5:	add    BYTE PTR [rbp+0x0],dl
   140009fc8:	jb     0x140009fca
   140009fca:	imul   eax,DWORD PTR [rax],0x0
   140009fd0:	push   rsp
   140009fd1:	add    BYTE PTR [rdi+0x0],ch
   140009fd4:	(bad)  
   140009fd5:	add    BYTE PTR [rbx+0x0],dh
   140009fd8:	je     0x140009fda
   140009fda:	pop    rdi
   140009fdb:	add    BYTE PTR [rbp+0x0],dl
   140009fde:	jo     0x140009fe0
   140009fe0:	add    BYTE PTR fs:[rcx+0x0],ah
   140009fe4:	je     0x140009fe6
   140009fe6:	add    BYTE PTR gs:[rsi+0x0],al
   140009fea:	(bad)  
   140009feb:	add    BYTE PTR [rcx+0x0],ch
   140009fee:	ins    BYTE PTR es:[rdi],dx
   140009fef:	add    BYTE PTR [rbp+0x0],ah
   140009ff2:	add    BYTE PTR fs:[rax],al
   140009ff5:	add    BYTE PTR [rax],al
   140009ff7:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140009ffb:	add    BYTE PTR [rcx+0x0],ah
   140009ffe:	jae    0x14000a000
   14000a000:	je     0x14000a002
   14000a002:	pop    rdi
   14000a003:	add    BYTE PTR [rdi+0x0],cl
   14000a006:	outs   dx,BYTE PTR ds:[rsi]
   14000a007:	add    BYTE PTR [rbp+0x0],ah
   14000a00a:	push   rbx
   14000a00b:	add    BYTE PTR [rax+0x0],ch
   14000a00e:	outs   dx,DWORD PTR ds:[rsi]
   14000a00f:	add    BYTE PTR [rax+rax*1+0x55],dh
   14000a013:	add    BYTE PTR [rax+0x0],dh
   14000a016:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a01a:	je     0x14000a01c
   14000a01c:	add    BYTE PTR gs:[rax],al
   14000a01f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14000a023:	add    BYTE PTR [rcx+0x0],ah
   14000a026:	jae    0x14000a028
   14000a028:	je     0x14000a02a
   14000a02a:	pop    rdi
   14000a02b:	add    BYTE PTR [rcx+0x0],cl
   14000a02e:	outs   dx,BYTE PTR ds:[rsi]
   14000a02f:	add    BYTE PTR [rbx+0x0],dh
   14000a032:	je     0x14000a034
   14000a034:	(bad)  
   14000a035:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a039:	add    BYTE PTR [rdx+0x0],al
   14000a03c:	ins    BYTE PTR es:[rdi],dx
   14000a03d:	add    BYTE PTR [rdi+0x0],ch
   14000a040:	movsxd eax,DWORD PTR [rax]
   14000a042:	imul   eax,DWORD PTR [rax],0x65
   14000a045:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000a049:	add    BYTE PTR [rax],al
   14000a04b:	add    BYTE PTR [rax],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14000a053:	add    BYTE PTR [rcx+0x0],ah
   14000a056:	jae    0x14000a058
   14000a058:	je     0x14000a05a
   14000a05a:	pop    rdi
   14000a05b:	add    BYTE PTR [rbp+0x0],cl
   14000a05e:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000a063:	add    BYTE PTR [rdx+0x0],dh
   14000a066:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   14000a06b:	add    BYTE PTR [rdi+0x0],ch
   14000a06e:	outs   dx,BYTE PTR ds:[rsi]
   14000a06f:	add    BYTE PTR [rsi+0x0],ch
   14000a072:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a076:	je     0x14000a078
   14000a078:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	or     al,0x56
   14000a082:	jp     0x14000a06b
   14000a084:	xchg   esi,eax
   14000a085:	ror    BYTE PTR ss:[rdx-0x6f],0x1c
   14000a08a:	push   rsp
   14000a08b:	pop    rsp
   14000a08c:	in     al,dx
   14000a08d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a08e:	mov    esi,0x6900443c
   14000a093:	add    BYTE PTR [rcx+0x0],ah
   14000a096:	ins    BYTE PTR es:[rdi],dx
   14000a097:	add    BYTE PTR [rdi+0x0],ch
   14000a09a:	add    BYTE PTR [edi+0x0],bl
   14000a09e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a0a2:	jae    0x14000a0a4
   14000a0a4:	je     0x14000a0a6
   14000a0a6:	(bad)  
   14000a0a7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a0ab:	add    BYTE PTR [rsi+0x0],cl
   14000a0ae:	add    BYTE PTR gs:[rbp+0x0],ah
   14000a0b2:	add    BYTE PTR fs:[rbp+0x0],dl
   14000a0b6:	jae    0x14000a0b8
   14000a0b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a0bc:	add    BYTE PTR [r15+0x0],spl
   14000a0c0:	jb     0x14000a0c2
   14000a0c2:	add    BYTE PTR gs:[rbp+0x0],ah
   14000a0c6:	ins    DWORD PTR es:[rdi],dx
   14000a0c7:	add    BYTE PTR [rbp+0x0],ah
   14000a0ca:	outs   dx,BYTE PTR ds:[rsi]
   14000a0cb:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000a0cf:	add    al,dl
   14000a0d1:	(bad)  
   14000a0d2:	add    BYTE PTR [rax+0x1],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rax+0x20],al
   14000a0da:	add    BYTE PTR [rax+0x1],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    al,al
   14000a0e1:	and    eax,0x14000
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	movabs al,ds:0xd00000000140001e
   14000a0f1:	(bad)  
   14000a0f2:	add    BYTE PTR [rax+0x1],al
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    al,dl
   14000a0f9:	(bad)  
   14000a0fa:	add    BYTE PTR [rax+0x1],al
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    al,dl
   14000a101:	(bad)  
   14000a102:	add    BYTE PTR [rax+0x1],al
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    al,dl
   14000a109:	(bad)  
   14000a10a:	add    BYTE PTR [rax+0x1],al
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    al,dl
   14000a111:	(bad)  
   14000a112:	add    BYTE PTR [rax+0x1],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    al,dl
   14000a119:	(bad)  
   14000a11a:	add    BYTE PTR [rax+0x1],al
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	add    al,dl
   14000a121:	(bad)  
   14000a122:	add    BYTE PTR [rax+0x1],al
   14000a125:	add    BYTE PTR [rax],al
   14000a127:	add    BYTE PTR [rax+0x1400047],ah
   14000a12d:	add    BYTE PTR [rax],al
   14000a12f:	add    BYTE PTR [rax],dh
   14000a131:	rex.W add BYTE PTR [rax+0x1],al
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    al,al
   14000a139:	rex.W add BYTE PTR [rax+0x1],al
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rax+0x49],dl
   14000a142:	add    BYTE PTR [rax+0x1],al
   14000a145:	add    BYTE PTR [rax],al
   14000a147:	add    al,dl
   14000a149:	rex.WB add BYTE PTR [r8+0x1],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rax],ah
   14000a151:	rex.WX add BYTE PTR [rax+0x1],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rax],dh
   14000a159:	add    BYTE PTR [r8+0x1],r8b
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rax+0x46],ah
   14000a162:	add    BYTE PTR [rax+0x1],al
   14000a165:	add    BYTE PTR [rax],al
   14000a167:	add    BYTE PTR [rax+0x1400046],al
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    al,dl
   14000a171:	(bad)  
   14000a172:	add    BYTE PTR [rax+0x1],al
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rax],al
   14000a179:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rax+0x47],dh
   14000a182:	add    BYTE PTR [rax+0x1],al
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rax+0x1400047],dl
   14000a18d:	add    BYTE PTR [rax],al
   14000a18f:	add    BYTE PTR [rax+0x1400047],al
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rax+0x1400047],ah
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax],dh
   14000a1a1:	rex.W add BYTE PTR [rax+0x1],al
   14000a1a5:	add    BYTE PTR [rax],al
   14000a1a7:	add    al,al
   14000a1a9:	rex.W add BYTE PTR [rax+0x1],al
   14000a1ad:	add    BYTE PTR [rax],al
   14000a1af:	add    BYTE PTR [rax+0x49],dl
   14000a1b2:	add    BYTE PTR [rax+0x1],al
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    al,dl
   14000a1b9:	rex.WB add BYTE PTR [r8+0x1],al
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rax],ah
   14000a1c1:	rex.WX add BYTE PTR [rax+0x1],al
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rax],dh
   14000a1c9:	add    BYTE PTR [r8+0x1],r8b
   14000a1cd:	add    BYTE PTR [rax],al
   14000a1cf:	add    BYTE PTR [rax+0x46],ah
   14000a1d2:	add    BYTE PTR [rax+0x1],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    BYTE PTR [rax+0x1400046],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rax+0x1400044],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    BYTE PTR [rax+0x1400044],ah
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    BYTE PTR [rdi+0x57],dh
   14000a1f2:	imul   ebp,DWORD PTR [rsi+0x4d],0x6e6961
   14000a1f9:	add    BYTE PTR [rax],al
   14000a1fb:	add    BYTE PTR [rax],al
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rbx+0x74],dl
   14000a202:	(bad)  
   14000a203:	jb     0x14000a279
   14000a205:	and    BYTE PTR [rdx+rsi*2+0x61],dl
   14000a209:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000a20c:	and    BYTE PTR [esi+0x61],al
   14000a210:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
	...
   14000a220:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000a224:	je     0x14000a226
   14000a226:	imul   eax,DWORD PTR [rax],0x690066
   14000a22c:	movsxd eax,DWORD PTR [rax]
   14000a22e:	(bad)  
   14000a22f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a233:	add    BYTE PTR [rdi+0x0],ch
   14000a236:	outs   dx,BYTE PTR ds:[rsi]
   14000a237:	add    BYTE PTR [rbp+0x0],dl
   14000a23a:	js     0x14000a23c
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	jo     0x14000a242
   14000a242:	(bad)  
   14000a243:	add    BYTE PTR [rdi+0x0],ah
   14000a246:	add    BYTE PTR gs:[rip+0x65005300],bh        # 0x1a500f54d
   14000a24d:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000a251:	add    BYTE PTR [rcx+0x0],ch
   14000a254:	outs   dx,BYTE PTR ds:[rsi]
   14000a255:	add    BYTE PTR [rdi+0x0],ah
   14000a258:	jae    0x14000a25a
   14000a25a:	push   rax
   14000a25b:	add    BYTE PTR [rcx+0x0],ah
   14000a25e:	add    BYTE PTR [ebp+0x0],ah
   14000a262:	push   rdx
   14000a263:	add    BYTE PTR [rbp+0x0],ah
   14000a266:	jae    0x14000a268
   14000a268:	je     0x14000a26a
   14000a26a:	outs   dx,DWORD PTR ds:[rsi]
   14000a26b:	add    BYTE PTR [rdx+0x0],dh
   14000a26e:	add    BYTE PTR gs:[rbp+0x0],cl
   14000a272:	jne    0x14000a274
   14000a274:	jae    0x14000a276
   14000a276:	push   rbp
   14000a277:	add    BYTE PTR [rax+0x0],dh
   14000a27a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a27e:	je     0x14000a280
   14000a280:	add    BYTE PTR gs:[rax],al
	...
   14000a28f:	add    BYTE PTR [rax+rax*1],bh
   14000a292:	je     0x14000a294
   14000a294:	outs   dx,DWORD PTR ds:[rsi]
   14000a295:	add    BYTE PTR [rcx+0x0],ah
   14000a298:	jae    0x14000a29a
   14000a29a:	je     0x14000a29c
   14000a29c:	and    BYTE PTR [rax],al
   14000a29e:	ins    BYTE PTR es:[rdi],dx
   14000a29f:	add    BYTE PTR [rcx+0x0],ah
   14000a2a2:	jne    0x14000a2a4
   14000a2a4:	outs   dx,BYTE PTR ds:[rsi]
   14000a2a5:	add    BYTE PTR [rbx+0x0],ah
   14000a2a8:	push   0x22003d00
   14000a2ad:	add    BYTE PTR [rip+0x22003100],ah        # 0x16200d3b3
   14000a2b3:	add    BYTE PTR [rsi],bh
   14000a2b5:	add    BYTE PTR [rax+rax*1],bh
   14000a2b8:	jbe    0x14000a2ba
   14000a2ba:	imul   eax,DWORD PTR [rax],0x750073
   14000a2c0:	(bad)  
   14000a2c1:	add    BYTE PTR [rax+rax*1+0x3e],ch
   14000a2c5:	add    BYTE PTR [rax+rax*1],bh
   14000a2c8:	(bad)  
   14000a2c9:	add    BYTE PTR [rcx+0x0],ch
   14000a2cc:	outs   dx,BYTE PTR ds:[rsi]
   14000a2cd:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000a2d1:	add    BYTE PTR [rsi+0x0],ch
   14000a2d4:	add    BYTE PTR [eax],ah
   14000a2d7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a2db:	add    BYTE PTR [rbp+0x0],ch
   14000a2de:	jo     0x14000a2e0
   14000a2e0:	ins    BYTE PTR es:[rdi],dx
   14000a2e1:	add    BYTE PTR [rcx+0x0],ah
   14000a2e4:	je     0x14000a2e6
   14000a2e6:	add    BYTE PTR gs:[rip+0x54002200],bh        # 0x19400c4ed
   14000a2ed:	add    BYTE PTR [rdi+0x0],ch
   14000a2f0:	(bad)  
   14000a2f1:	add    BYTE PTR [rbx+0x0],dh
   14000a2f4:	je     0x14000a2f6
   14000a2f6:	push   rsp
   14000a2f7:	add    BYTE PTR [rbp+0x0],ah
   14000a2fa:	js     0x14000a2fc
   14000a2fc:	je     0x14000a2fe
   14000a2fe:	xor    BYTE PTR [rax],al
   14000a300:	xor    al,BYTE PTR [rax]
   14000a302:	and    al,BYTE PTR [rax]
   14000a304:	add    BYTE PTR ds:[rax+rax*1],bh
   14000a308:	je     0x14000a30a
   14000a30a:	add    BYTE PTR gs:[rax+0x0],bh
   14000a30e:	je     0x14000a310
   14000a310:	and    BYTE PTR [rax],al
   14000a312:	imul   eax,DWORD PTR [rax],0x3d0064
   14000a318:	and    al,BYTE PTR [rax]
   14000a31a:	xor    DWORD PTR [rax],eax
   14000a31c:	and    al,BYTE PTR [rax]
   14000a31e:	add    BYTE PTR ds:[rip+0x3c003200],ah        # 0x17c00d525
   14000a325:	add    BYTE PTR [rdi],ch
   14000a327:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a32b:	add    BYTE PTR [rax+0x0],bh
   14000a32e:	je     0x14000a330
   14000a330:	add    BYTE PTR ds:[rax+rax*1],bh
   14000a334:	je     0x14000a336
   14000a336:	add    BYTE PTR gs:[rax+0x0],bh
   14000a33a:	je     0x14000a33c
   14000a33c:	and    BYTE PTR [rax],al
   14000a33e:	imul   eax,DWORD PTR [rax],0x3d0064
   14000a344:	and    al,BYTE PTR [rax]
   14000a346:	xor    al,BYTE PTR [rax]
   14000a348:	and    al,BYTE PTR [rax]
   14000a34a:	add    BYTE PTR ds:[rip+0x3c003300],ah        # 0x17c00d651
   14000a351:	add    BYTE PTR [rdi],ch
   14000a353:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a357:	add    BYTE PTR [rax+0x0],bh
   14000a35a:	je     0x14000a35c
   14000a35c:	add    BYTE PTR ds:[rax+rax*1],bh
   14000a360:	(bad)  
   14000a361:	add    BYTE PTR [rdx+0x0],ah
   14000a364:	imul   eax,DWORD PTR [rax],0x64006e
   14000a36a:	imul   eax,DWORD PTR [rax],0x67006e
   14000a370:	add    BYTE PTR ds:[rax+rax*1],bh
   14000a374:	(bad)  
   14000a375:	add    BYTE PTR [rsi+0x0],dh
   14000a378:	imul   eax,DWORD PTR [rax],0x750073
   14000a37e:	(bad)  
   14000a37f:	add    BYTE PTR [rax+rax*1+0x3e],ch
   14000a383:	add    BYTE PTR [rax+rax*1],bh
   14000a386:	(bad)  
   14000a387:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000a38b:	add    BYTE PTR [rcx+0x0],ah
   14000a38e:	jae    0x14000a390
   14000a390:	je     0x14000a392
   14000a392:	add    BYTE PTR ds:[rax],al
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    bl,cl
   14000a399:	rex.RB movabs al,ds:0xe22f8447bab9b39f
   14000a3a3:	stos   DWORD PTR es:[rdi],eax
   14000a3a4:	rex.RB (bad) 
   14000a3a6:	sub    ecx,DWORD PTR [rcx+rdi*8]
   14000a3a9:	adc    DWORD PTR [rdx+0x66da10c],0xde298740
   14000a3b3:	outs   dx,BYTE PTR ds:[rsi]
   14000a3b4:	imul   esp,DWORD PTR [rcx+0x58],0x1c
   14000a3b8:	push   rbp
   14000a3b9:	add    BYTE PTR [rax+0x0],dh
   14000a3bc:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a3c0:	je     0x14000a3c2
   14000a3c2:	add    BYTE PTR gs:[rdi+0x0],al
   14000a3c6:	jb     0x14000a3c8
   14000a3c8:	outs   dx,DWORD PTR ds:[rsi]
   14000a3c9:	add    BYTE PTR [rbp+0x0],dh
   14000a3cc:	jo     0x14000a3ce
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	push   rbp
   14000a3d1:	add    BYTE PTR [rax+0x0],dh
   14000a3d4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a3d8:	je     0x14000a3da
   14000a3da:	add    BYTE PTR gs:[rax+rax*1+0x61],dl
   14000a3df:	add    BYTE PTR [rdi+0x0],ah
	...
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	xor    al,BYTE PTR [rax]
   14000a3f2:	(bad)  
   14000a3f3:	add    BYTE PTR [rax+rax*1],dh
   14000a3f6:	add    BYTE PTR gs:[rsi],dh
   14000a3f9:	add    BYTE PTR [rdx],dh
   14000a3fb:	add    BYTE PTR [rax+rax*1+0x38],ah
   14000a3ff:	add    BYTE PTR [rip+0x38003800],ch        # 0x17800dc05
   14000a405:	add    BYTE PTR [rax],dh
   14000a407:	add    BYTE PTR [rcx],bh
   14000a409:	add    BYTE PTR [rip+0x37003400],ch        # 0x17700d80f
   14000a40f:	add    BYTE PTR [rax],bh
   14000a411:	add    BYTE PTR [rdi],dh
   14000a413:	add    BYTE PTR [rip+0x39003800],ch        # 0x17900dc19
   14000a419:	add    BYTE PTR [rsi+0x0],ah
   14000a41c:	cmp    BYTE PTR [rax],al
   14000a41e:	sub    eax,0x39003600
   14000a423:	add    BYTE PTR [rax+rax*1+0x30],ah
   14000a427:	add    BYTE PTR [rsi+0x0],ah
   14000a42a:	xor    BYTE PTR [rax],al
   14000a42c:	xor    DWORD PTR [rax],eax
   14000a42e:	add    BYTE PTR ss:[rip+0x66003400],dh        # 0x1a600d835
   14000a435:	add    BYTE PTR [rdx+0x0],ah
   14000a438:	pop    rdi
   14000a439:	add    BYTE PTR [rax],bh
   14000a43b:	add    BYTE PTR [rdi+0x0],dh
   14000a43e:	add    BYTE PTR gs:[rbx+0x0],ch
   14000a442:	jns    0x14000a444
   14000a444:	(bad)  
   14000a445:	add    BYTE PTR [rbx],dh
   14000a447:	add    BYTE PTR [rax+rax*1+0x38],ah
   14000a44b:	add    BYTE PTR [rdx+0x0],ah
   14000a44e:	(bad)  
   14000a44f:	add    BYTE PTR [rdi+0x0],dh
   14000a452:	add    BYTE PTR gs:[rcx],ah
   14000a455:	add    BYTE PTR [rcx+0x0],al
   14000a458:	jo     0x14000a45a
   14000a45a:	jo     0x14000a45c
   14000a45c:	add    BYTE PTR [rax],al
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	xor    al,BYTE PTR [rax]
   14000a462:	(bad)  
   14000a463:	add    BYTE PTR [rax+rax*1],dh
   14000a466:	add    BYTE PTR gs:[rsi],dh
   14000a469:	add    BYTE PTR [rdx],dh
   14000a46b:	add    BYTE PTR [rax+rax*1+0x38],ah
   14000a46f:	add    BYTE PTR [rip+0x38003800],ch        # 0x17800dc75
   14000a475:	add    BYTE PTR [rax],dh
   14000a477:	add    BYTE PTR [rcx],bh
   14000a479:	add    BYTE PTR [rip+0x37003400],ch        # 0x17700d87f
   14000a47f:	add    BYTE PTR [rax],bh
   14000a481:	add    BYTE PTR [rdi],dh
   14000a483:	add    BYTE PTR [rip+0x39003800],ch        # 0x17900dc89
   14000a489:	add    BYTE PTR [rsi+0x0],ah
   14000a48c:	cmp    BYTE PTR [rax],al
   14000a48e:	sub    eax,0x39003600
   14000a493:	add    BYTE PTR [rax+rax*1+0x30],ah
   14000a497:	add    BYTE PTR [rsi+0x0],ah
   14000a49a:	xor    BYTE PTR [rax],al
   14000a49c:	xor    DWORD PTR [rax],eax
   14000a49e:	add    BYTE PTR ss:[rip+0x66003400],dh        # 0x1a600d8a5
   14000a4a5:	add    BYTE PTR [rdx+0x0],ah
   14000a4a8:	pop    rdi
   14000a4a9:	add    BYTE PTR [rax],bh
   14000a4ab:	add    BYTE PTR [rdi+0x0],dh
   14000a4ae:	add    BYTE PTR gs:[rbx+0x0],ch
   14000a4b2:	jns    0x14000a4b4
   14000a4b4:	(bad)  
   14000a4b5:	add    BYTE PTR [rbx],dh
   14000a4b7:	add    BYTE PTR [rax+rax*1+0x38],ah
   14000a4bb:	add    BYTE PTR [rdx+0x0],ah
   14000a4be:	(bad)  
   14000a4bf:	add    BYTE PTR [rdi+0x0],dh
   14000a4c2:	add    BYTE PTR gs:[rax],al
	...
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    BYTE PTR [rdi+0x0],dh
   14000a4d2:	imul   eax,DWORD PTR [rax],0x64006e
   14000a4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000a4d9:	add    BYTE PTR [rdi+0x0],dh
   14000a4dc:	jae    0x14000a4de
   14000a4de:	add    BYTE PTR cs:[rcx+0x0],ch
   14000a4e2:	ins    DWORD PTR es:[rdi],dx
   14000a4e3:	add    BYTE PTR [rbp+0x0],ch
   14000a4e6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a4ea:	jae    0x14000a4ec
   14000a4ec:	imul   eax,DWORD PTR [rax],0x650076
   14000a4f2:	movsxd eax,DWORD PTR [rax]
   14000a4f4:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f5:	add    BYTE PTR [rsi+0x0],ch
   14000a4f8:	je     0x14000a4fa
   14000a4fa:	jb     0x14000a4fc
   14000a4fc:	outs   dx,DWORD PTR ds:[rsi]
   14000a4fd:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000a501:	add    BYTE PTR [rcx+0x0],ah
   14000a504:	outs   dx,BYTE PTR ds:[rsi]
   14000a505:	add    BYTE PTR [rbp+0x0],ah
   14000a508:	ins    BYTE PTR es:[rdi],dx
   14000a509:	add    BYTE PTR [rdi+0x0],bl
   14000a50c:	movsxd eax,DWORD PTR [rax]
   14000a50e:	ja     0x14000a510
   14000a510:	xor    eax,0x31006e00
   14000a515:	add    BYTE PTR [rax+0x0],ch
   14000a518:	xor    al,BYTE PTR [rax]
   14000a51a:	je     0x14000a51c
   14000a51c:	js     0x14000a51e
   14000a51e:	jns    0x14000a520
   14000a520:	add    BYTE PTR gs:[rdi+0x0],dh
   14000a524:	jns    0x14000a526
   14000a526:	and    DWORD PTR [rax],eax
   14000a528:	ins    DWORD PTR es:[rdi],dx
   14000a529:	add    BYTE PTR [rcx+0x0],ch
   14000a52c:	movsxd eax,DWORD PTR [rax]
   14000a52e:	jb     0x14000a530
   14000a530:	outs   dx,DWORD PTR ds:[rsi]
   14000a531:	add    BYTE PTR [rbx+0x0],dh
   14000a534:	outs   dx,DWORD PTR ds:[rsi]
   14000a535:	add    BYTE PTR [rsi+0x0],ah
   14000a538:	je     0x14000a53a
   14000a53a:	add    BYTE PTR cs:[rdi+0x0],dh
   14000a53e:	imul   eax,DWORD PTR [rax],0x64006e
   14000a544:	outs   dx,DWORD PTR ds:[rsi]
   14000a545:	add    BYTE PTR [rdi+0x0],dh
   14000a548:	jae    0x14000a54a
   14000a54a:	add    BYTE PTR cs:[rcx+0x0],ch
   14000a54e:	ins    DWORD PTR es:[rdi],dx
   14000a54f:	add    BYTE PTR [rbp+0x0],ch
   14000a552:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a556:	jae    0x14000a558
   14000a558:	imul   eax,DWORD PTR [rax],0x650076
   14000a55e:	movsxd eax,DWORD PTR [rax]
   14000a560:	outs   dx,DWORD PTR ds:[rsi]
   14000a561:	add    BYTE PTR [rsi+0x0],ch
   14000a564:	je     0x14000a566
   14000a566:	jb     0x14000a568
   14000a568:	outs   dx,DWORD PTR ds:[rsi]
   14000a569:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000a56d:	add    BYTE PTR [rcx+0x0],ah
   14000a570:	outs   dx,BYTE PTR ds:[rsi]
   14000a571:	add    BYTE PTR [rbp+0x0],ah
   14000a574:	ins    BYTE PTR es:[rdi],dx
	...
   14000a57d:	add    BYTE PTR [rax],al
   14000a57f:	add    BYTE PTR [rdi+0x0],dh
   14000a582:	imul   eax,DWORD PTR [rax],0x64006e
   14000a588:	outs   dx,DWORD PTR ds:[rsi]
   14000a589:	add    BYTE PTR [rdi+0x0],dh
   14000a58c:	jae    0x14000a58e
   14000a58e:	add    BYTE PTR cs:[rcx+0x0],ch
   14000a592:	ins    DWORD PTR es:[rdi],dx
   14000a593:	add    BYTE PTR [rbp+0x0],ch
   14000a596:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a59a:	jae    0x14000a59c
   14000a59c:	imul   eax,DWORD PTR [rax],0x650076
   14000a5a2:	movsxd eax,DWORD PTR [rax]
   14000a5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000a5a5:	add    BYTE PTR [rsi+0x0],ch
   14000a5a8:	je     0x14000a5aa
   14000a5aa:	jb     0x14000a5ac
   14000a5ac:	outs   dx,DWORD PTR ds:[rsi]
   14000a5ad:	add    BYTE PTR [rax+rax*1+0x70],ch
   14000a5b1:	add    BYTE PTR [rcx+0x0],ah
   14000a5b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5b5:	add    BYTE PTR [rbp+0x0],ah
   14000a5b8:	ins    BYTE PTR es:[rdi],dx
   14000a5b9:	add    BYTE PTR [rdi+0x0],bl
   14000a5bc:	movsxd eax,DWORD PTR [rax]
   14000a5be:	ja     0x14000a5c0
   14000a5c0:	xor    eax,0x31006e00
   14000a5c5:	add    BYTE PTR [rax+0x0],ch
   14000a5c8:	xor    al,BYTE PTR [rax]
   14000a5ca:	je     0x14000a5cc
   14000a5cc:	js     0x14000a5ce
   14000a5ce:	jns    0x14000a5d0
   14000a5d0:	add    BYTE PTR gs:[rdi+0x0],dh
   14000a5d4:	jns    0x14000a5d6
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	rex.WRB jne 0x14000a64e
   14000a5db:	push   rbp
   14000a5dc:	js     0x14000a631
   14000a5de:	je     0x14000a641
   14000a5e0:	je     0x14000a647
   14000a5e2:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000a5e7:	outs   dx,BYTE PTR ds:[rsi]
   14000a5e8:	cmp    bh,BYTE PTR [rdx]
   14000a5ea:	imul   r14d,DWORD PTR [rbx+0x70],0x4d79616c
   14000a5f2:	jne    0x14000a667
   14000a5f4:	push   rbp
   14000a5f5:	js     0x14000a64a
   14000a5f7:	je     0x14000a65a
   14000a5f9:	je     0x14000a660
   14000a5fb:	add    BYTE PTR [rax],al
   14000a5fd:	add    BYTE PTR [rax],al
   14000a5ff:	add    BYTE PTR [rsi+0x6f],cl
   14000a602:	je     0x14000a66d
   14000a604:	imul   sp,WORD PTR [rbx+0x61],0x6f69
   14000a60a:	outs   dx,BYTE PTR ds:[rsi]
   14000a60b:	and    BYTE PTR [rbp+0x78],dl
   14000a60e:	push   rbx
   14000a60f:	je     0x14000a672
   14000a611:	je     0x14000a678
   14000a613:	and    BYTE PTR [rcx+0x73],ch
   14000a616:	and    BYTE PTR [rsi+0x6f],ch
   14000a619:	je     0x14000a63b
   14000a61b:	(bad)  
   14000a61c:	and    BYTE PTR [rsi+0x61],dh
   14000a61f:	ins    BYTE PTR es:[rdi],dx
   14000a620:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x7972746e
   14000a628:	and    BYTE PTR cs:[rbx+0x68],al
   14000a62c:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14000a630:	je     0x14000a69a
   14000a632:	and    BYTE PTR gs:[rcx+0x72],ah
   14000a636:	addr32 jne 0x14000a6a6
   14000a639:	outs   dx,BYTE PTR gs:[rsi]
   14000a63b:	je     0x14000a65d
   14000a63d:	jo     0x14000a6a0
   14000a63f:	jae    0x14000a6b4
   14000a641:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000a646:	add    BYTE PTR cs:[rdi+rbp*2+0x61],dl
   14000a64b:	jae    0x14000a6c1
   14000a64d:	add    BYTE PTR [rax],al
   14000a64f:	add    BYTE PTR [rcx+rbp*2+0x61],al
   14000a653:	ins    BYTE PTR es:[rdi],dx
   14000a654:	outs   dx,DWORD PTR ds:[rsi]
   14000a655:	add    BYTE PTR [eax],al
   14000a658:	rex.WRB jne 0x14000a6ce
   14000a65b:	push   rbp
   14000a65c:	js     0x14000a6b1
   14000a65e:	je     0x14000a6c1
   14000a660:	je     0x14000a6c7
   14000a662:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000a667:	outs   dx,BYTE PTR ds:[rsi]
   14000a668:	cmp    bh,BYTE PTR [rdx]
   14000a66a:	imul   r14d,DWORD PTR [rbx+0x70],0x4479616c
   14000a672:	imul   esp,DWORD PTR [rcx+0x6c],0x4500676f
   14000a679:	jb     0x14000a6ed
   14000a67b:	outs   dx,DWORD PTR ds:[rsi]
   14000a67c:	jb     0x14000a69e
   14000a67e:	imul   ebp,DWORD PTR [rsi+0x20],0x6e75616c
   14000a685:	movsxd ebp,DWORD PTR [rax+0x69]
   14000a688:	outs   dx,BYTE PTR ds:[rsi]
   14000a689:	and    BYTE PTR [ebx+0x65],dh
   14000a68d:	je     0x14000a703
   14000a68f:	imul   ebp,DWORD PTR [rsi+0x67],0x70752073
   14000a696:	fs (bad) 
   14000a698:	je     0x14000a6ff
   14000a69a:	and    BYTE PTR [rax+0x61],dh
   14000a69d:	add    BYTE PTR gs:[ebx+0x65],dl
   14000a6a2:	je     0x14000a718
   14000a6a4:	imul   ebp,DWORD PTR [rsi+0x67],0x70752073
   14000a6ab:	fs (bad) 
   14000a6ad:	je     0x14000a714
   14000a6af:	and    BYTE PTR [rax+0x61],dh
   14000a6b2:	and    BYTE PTR gs:[ecx+eiz*2+0x75],ch
   14000a6b8:	outs   dx,BYTE PTR ds:[rsi]
   14000a6b9:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a6bc:	and    BYTE PTR fs:[rbx+0x75],dh
   14000a6c0:	movsxd esp,DWORD PTR [rbx+0x65]
   14000a6c3:	jae    0x14000a738
   14000a6c5:	data16 jne 0x14000a734
   14000a6c8:	ins    BYTE PTR es:[rdi],dx
   14000a6c9:	jns    0x14000a6cb
   14000a6cb:	add    BYTE PTR [rax],al
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    BYTE PTR [rbp+0x0],ch
   14000a6d2:	jae    0x14000a6d4
   14000a6d4:	sub    eax,0x65007300
   14000a6d9:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000a6dd:	add    BYTE PTR [rcx+0x0],ch
   14000a6e0:	outs   dx,BYTE PTR ds:[rsi]
   14000a6e1:	add    BYTE PTR [rdi+0x0],ah
   14000a6e4:	jae    0x14000a6e6
   14000a6e6:	cmp    al,BYTE PTR [rax]
   14000a6e8:	ja     0x14000a6ea
   14000a6ea:	imul   eax,DWORD PTR [rax],0x64006e
   14000a6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000a6f1:	add    BYTE PTR [rdi+0x0],dh
   14000a6f4:	jae    0x14000a6f6
   14000a6f6:	jne    0x14000a6f8
   14000a6f8:	jo     0x14000a6fa
   14000a6fa:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a6fe:	je     0x14000a700
   14000a700:	add    BYTE PTR gs:[rax],al
   14000a703:	add    BYTE PTR [rax],al
   14000a705:	add    BYTE PTR [rax],al
   14000a707:	add    BYTE PTR [rbp+0x75],cl
   14000a70a:	jae    0x14000a761
   14000a70c:	js     0x14000a761
   14000a70e:	je     0x14000a771
   14000a710:	je     0x14000a777
   14000a712:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14000a717:	outs   dx,BYTE PTR ds:[rsi]
   14000a718:	cmp    bh,BYTE PTR [rdx]
   14000a71a:	rex.WR (bad) 
   14000a71c:	jne    0x14000a78c
   14000a71e:	movsxd ebp,DWORD PTR [rax+0x53]
   14000a721:	gs je  0x14000a798
   14000a724:	imul   ebp,DWORD PTR [rsi+0x67],0x67615073
   14000a72b:	add    BYTE PTR gs:[rax],al
   14000a72e:	add    BYTE PTR [rax],al
   14000a730:	xchg   esp,eax
   14000a731:	sub    ebp,edx
   14000a733:	xchg   esp,eax
   14000a734:	int3   
   14000a735:	jmp    0x13fc0f11a
   14000a73a:	out    dx,al
   14000a73b:	fs retf 0x5b8f
   14000a73f:	nop
   14000a740:	movabs ds:0xb55a5fae17c1d3d1,al
   14000a749:	movabs ds:0x9a884488ccbd,al
   14000a752:	add    BYTE PTR [rax],al
   14000a754:	add    BYTE PTR [rax],al
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	rol    BYTE PTR [rax],0x0
   14000a75b:	add    BYTE PTR [rax],al
   14000a75d:	add    BYTE PTR [rax],al
   14000a75f:	rex.RX add r8d,DWORD PTR [rax]
   14000a762:	add    BYTE PTR [rax],al
   14000a764:	add    BYTE PTR [rax],al
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	rol    BYTE PTR [rax],0x0
   14000a76b:	add    BYTE PTR [rax],al
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	rex.RX
   14000a770:	add    BYTE PTR ss:[rax],al
   14000a773:	add    BYTE PTR [rax],al
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    al,al
   14000a779:	add    BYTE PTR [rax],al
   14000a77b:	add    BYTE PTR [rax],al
   14000a77d:	add    BYTE PTR [rax],al
   14000a77f:	rex.RX xor eax,0x0
   14000a785:	add    BYTE PTR [rax],al
   14000a787:	add    al,al
   14000a789:	add    BYTE PTR [rax],al
   14000a78b:	add    BYTE PTR [rax],al
   14000a78d:	add    BYTE PTR [rax],al
   14000a78f:	rex.RX sbb eax,0x3a196d37
   14000a795:	fucomp st(4)
   14000a797:	rex.RX (bad) 
   14000a799:	cmc    
   14000a79a:	(bad)  
   14000a79b:	setne  al
   14000a79e:	xor    eax,0x3139b347
   14000a7a3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a7a4:	cmc    
   14000a7a5:	mov    ebp,0xcf9d4497
   14000a7aa:	ins    BYTE PTR es:[rdi],dx
   14000a7ab:	jp     0x14000a75a
   14000a7ad:	shl    DWORD PTR [rbp+0x4d0],0x0
   14000a7b4:	add    BYTE PTR gs:[rax],al
   14000a7b7:	add    BYTE PTR [rcx+0x0],dh
   14000a7ba:	add    BYTE PTR [rax],al
   14000a7bc:	add    DWORD PTR [rax],eax
   14000a7be:	add    BYTE PTR [rax],al
   14000a7c0:	add    eax,0x6b000000
   14000a7c5:	add    BYTE PTR [rax],al
   14000a7c7:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000a7cb:	add    BYTE PTR [rcx],al
   14000a7cd:	add    BYTE PTR [rax],al
   14000a7cf:	add    BYTE PTR [rsi],al
   14000a7d1:	add    BYTE PTR [rax],al
   14000a7d3:	add    BYTE PTR [rdx+0x0],ch
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	jo     0x14000a7da
   14000a7da:	add    BYTE PTR [rax],al
   14000a7dc:	add    DWORD PTR [rax],eax
   14000a7de:	add    BYTE PTR [rax],al
   14000a7e0:	(bad)  
   14000a7e1:	add    BYTE PTR [rax],al
   14000a7e3:	add    BYTE PTR [rdx+0x0],ch
   14000a7e6:	add    BYTE PTR [rax],al
   14000a7e8:	jo     0x14000a7ea
   14000a7ea:	add    BYTE PTR [rax],al
   14000a7ec:	add    DWORD PTR [rax],eax
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	or     BYTE PTR [rax],al
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	imul   eax,DWORD PTR [rax],0x0
   14000a7f7:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000a7fb:	add    BYTE PTR [rcx],al
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	add    BYTE PTR [rcx],cl
   14000a801:	add    BYTE PTR [rax],al
   14000a803:	add    BYTE PTR [rbp+0x0],dh
   14000a806:	add    BYTE PTR [rax],al
   14000a808:	jae    0x14000a80a
   14000a80a:	add    BYTE PTR [rax],al
   14000a80c:	add    DWORD PTR [rax],eax
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	or     al,BYTE PTR [rax]
   14000a812:	add    BYTE PTR [rax],al
   14000a814:	push   0x73000000
   14000a819:	add    BYTE PTR [rax],al
   14000a81b:	add    BYTE PTR [rcx],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rcx],dl
   14000a821:	add    BYTE PTR [rax],al
   14000a823:	add    BYTE PTR [rbp+0x0],dh
   14000a826:	add    BYTE PTR [rax],al
   14000a828:	je     0x14000a82a
   14000a82a:	add    BYTE PTR [rax],al
   14000a82c:	add    DWORD PTR [rax],eax
   14000a82e:	add    BYTE PTR [rax],al
   14000a830:	or     eax,DWORD PTR [rax]
   14000a832:	add    BYTE PTR [rax],al
   14000a834:	data16 add BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rax+0x0],dh
   14000a83a:	add    BYTE PTR [rax],al
   14000a83c:	add    DWORD PTR [rax],eax
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	or     al,0x0
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	ins    BYTE PTR es:[rdi],dx
   14000a845:	add    BYTE PTR [rax],al
   14000a847:	add    BYTE PTR [rip+0x1000001],ch        # 0x14100a84e
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    BYTE PTR [rip+0x6e000000],cl        # 0x1ae00a855
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rax+0x0],dh
   14000a85a:	add    BYTE PTR [rax],al
   14000a85c:	add    DWORD PTR [rax],eax
   14000a85e:	add    BYTE PTR [rax],al
   14000a860:	(bad)  
   14000a861:	add    BYTE PTR [rax],al
   14000a863:	add    BYTE PTR [rbp+0x0],ch
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	jo     0x14000a86a
   14000a86a:	add    BYTE PTR [rax],al
   14000a86c:	add    DWORD PTR [rax],eax
   14000a86e:	add    BYTE PTR [rax],al
   14000a870:	sldt   WORD PTR [rax]
   14000a873:	add    BYTE PTR [rdx+0x0],bh
   14000a876:	add    BYTE PTR [rax],al
   14000a878:	jae    0x14000a87a
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	add    DWORD PTR [rax],eax
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	adc    BYTE PTR [rax],al
   14000a882:	add    BYTE PTR [rax],al
   14000a884:	add    BYTE PTR [eax],al
   14000a887:	add    BYTE PTR [rdx+0x0],dh
   14000a88a:	add    BYTE PTR [rax],al
   14000a88c:	add    DWORD PTR [rax],eax
   14000a88e:	add    BYTE PTR [rax],al
   14000a890:	adc    al,BYTE PTR [rax]
   14000a892:	add    BYTE PTR [rax],al
   14000a894:	jnp    0x14000a896
   14000a896:	add    BYTE PTR [rax],al
   14000a898:	sub    eax,0x1000001
   14000a89d:	add    BYTE PTR [rax],al
   14000a89f:	add    BYTE PTR [rbx],dl
   14000a8a1:	add    BYTE PTR [rax],al
   14000a8a3:	add    BYTE PTR [rax],al
   14000a8a5:	add    BYTE PTR [rax],al
   14000a8a7:	add    BYTE PTR [rcx],dh
   14000a8a9:	add    DWORD PTR [rax],eax
   14000a8ab:	add    BYTE PTR [rax],al
   14000a8ad:	add    BYTE PTR [rax],al
   14000a8af:	add    BYTE PTR [rax+rax*1],dl
   14000a8b2:	add    BYTE PTR [rax],al
   14000a8b4:	add    BYTE PTR [rax],al
   14000a8b6:	add    BYTE PTR [rax],al
   14000a8b8:	xor    DWORD PTR [rcx],eax
   14000a8ba:	add    BYTE PTR [rax],al
   14000a8bc:	add    BYTE PTR [rax],al
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	adc    eax,0x0
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rcx],dh
   14000a8c9:	add    DWORD PTR [rax],eax
   14000a8cb:	add    BYTE PTR [rax],al
   14000a8cd:	add    BYTE PTR [rax],al
   14000a8cf:	add    BYTE PTR [rsi],dl
   14000a8d1:	add    BYTE PTR [rax],al
   14000a8d3:	add    BYTE PTR [rax],al
   14000a8d5:	add    BYTE PTR [rax],al
   14000a8d7:	add    BYTE PTR [rcx],dh
   14000a8d9:	add    DWORD PTR [rax],eax
   14000a8db:	add    BYTE PTR [rax],al
   14000a8dd:	add    BYTE PTR [rax],al
   14000a8df:	add    BYTE PTR [rdi],dl
   14000a8e1:	add    BYTE PTR [rax],al
   14000a8e3:	add    BYTE PTR [rax],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rcx],dh
   14000a8e9:	add    DWORD PTR [rax],eax
   14000a8eb:	add    BYTE PTR [rax],al
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rax],bl
   14000a8f1:	add    BYTE PTR [rax],al
   14000a8f3:	add    BYTE PTR [rax],al
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rcx],dh
   14000a8f9:	add    DWORD PTR [rax],eax
   14000a8fb:	add    BYTE PTR [rax],al
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rdx],bl
   14000a901:	add    BYTE PTR [rax],al
   14000a903:	add    BYTE PTR [rax],al
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rcx],dh
   14000a909:	add    DWORD PTR [rax],eax
   14000a90b:	add    BYTE PTR [rax],al
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rcx],bl
   14000a911:	add    BYTE PTR [rax],al
   14000a913:	add    BYTE PTR [rax],al
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    BYTE PTR [rip+0x1],dh        # 0x14000a91e
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rbx],bl
	...
   14000a92d:	add    BYTE PTR [rax],al
   14000a92f:	add    BYTE PTR [rax+rax*1],bl
	...
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	sbb    eax,0x0
	...
   14000a94d:	add    BYTE PTR [rax],al
   14000a94f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c011c55
   14000a955:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e011c5b
   14000a95b:	add    BYTE PTR [rip+0x33003000],ah        # 0x17300d961
   14000a961:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14000a965:	add    BYTE PTR [rbp+0x0],ah
   14000a968:	je     0x14000a96a
   14000a96a:	ins    BYTE PTR es:[rdi],dx
   14000a96b:	add    BYTE PTR [rax],al
   14000a96d:	add    BYTE PTR [rax],al
   14000a96f:	add    BYTE PTR [rcx+0x0],cl
   14000a972:	jae    0x14000a974
   14000a974:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a978:	outs   dx,BYTE PTR ds:[rsi]
   14000a979:	add    BYTE PTR [rsi+0x0],dh
   14000a97c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a980:	add    BYTE PTR [ebp+0x0],ah
   14000a984:	add    BYTE PTR fs:[rbp+0x0],dl
   14000a988:	jo     0x14000a98a
   14000a98a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a98e:	je     0x14000a990
   14000a990:	add    BYTE PTR gs:[rbx+0x0],dl
   14000a994:	je     0x14000a996
   14000a996:	(bad)  
   14000a997:	add    BYTE PTR [rbx+0x0],ah
   14000a99a:	imul   eax,DWORD PTR [rax],0x45
   14000a99d:	add    BYTE PTR [rsi+0x0],ch
   14000a9a0:	(bad)  
   14000a9a1:	add    BYTE PTR [rdx+0x0],ah
   14000a9a4:	ins    BYTE PTR es:[rdi],dx
   14000a9a5:	add    BYTE PTR [rbp+0x0],ah
   14000a9a8:	add    BYTE PTR fs:[rax],al
   14000a9ab:	add    BYTE PTR [rax],al
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    BYTE PTR [rbp+0x0],dl
   14000a9b2:	jae    0x14000a9b4
   14000a9b4:	outs   dx,DWORD PTR ds:[rsi]
   14000a9b5:	add    BYTE PTR [rbx+0x0],dl
   14000a9b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a9bc:	jbe    0x14000a9be
   14000a9be:	imul   eax,DWORD PTR [rax],0x690063
   14000a9c4:	outs   dx,BYTE PTR ds:[rsi]
   14000a9c5:	add    BYTE PTR [rdi+0x0],ah
   14000a9c8:	push   rbx
   14000a9c9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a9cd:	add    BYTE PTR [rbx+0x0],ah
   14000a9d0:	imul   eax,DWORD PTR [rax],0x0
	...
   14000a9df:	add    BYTE PTR [rbx+0x0],dl
   14000a9e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a9e3:	add    BYTE PTR [rsi+0x0],ah
   14000a9e6:	je     0x14000a9e8
   14000a9e8:	ja     0x14000a9ea
   14000a9ea:	(bad)  
   14000a9eb:	add    BYTE PTR [rdx+0x0],dh
   14000a9ee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000a9f3:	add    BYTE PTR [rcx+0x0],ch
   14000a9f6:	movsxd eax,DWORD PTR [rax]
   14000a9f8:	jb     0x14000a9fa
   14000a9fa:	outs   dx,DWORD PTR ds:[rsi]
   14000a9fb:	add    BYTE PTR [rbx+0x0],dh
   14000a9fe:	outs   dx,DWORD PTR ds:[rsi]
   14000a9ff:	add    BYTE PTR [rsi+0x0],ah
   14000aa02:	je     0x14000aa04
   14000aa04:	pop    rsp
   14000aa05:	add    BYTE PTR [rdi+0x0],dl
   14000aa08:	imul   eax,DWORD PTR [rax],0x64006e
   14000aa0e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa0f:	add    BYTE PTR [rdi+0x0],dh
   14000aa12:	jae    0x14000aa14
   14000aa14:	pop    rsp
   14000aa15:	add    BYTE PTR [rbx+0x0],al
   14000aa18:	jne    0x14000aa1a
   14000aa1a:	jb     0x14000aa1c
   14000aa1c:	jb     0x14000aa1e
   14000aa1e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aa22:	je     0x14000aa24
   14000aa24:	push   rsi
   14000aa25:	add    BYTE PTR [rbp+0x0],ah
   14000aa28:	jb     0x14000aa2a
   14000aa2a:	jae    0x14000aa2c
   14000aa2c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aa32:	pop    rsp
   14000aa33:	add    BYTE PTR [rdi+0x0],dl
   14000aa36:	imul   eax,DWORD PTR [rax],0x64006e
   14000aa3c:	outs   dx,DWORD PTR ds:[rsi]
   14000aa3d:	add    BYTE PTR [rdi+0x0],dh
   14000aa40:	jae    0x14000aa42
   14000aa42:	push   rbp
   14000aa43:	add    BYTE PTR [rax+0x0],dh
   14000aa46:	add    BYTE PTR fs:[rcx+0x0],ah
   14000aa4a:	je     0x14000aa4c
   14000aa4c:	add    BYTE PTR gs:[rax],al
   14000aa4f:	add    BYTE PTR [rbx+0x0],dl
   14000aa52:	outs   dx,DWORD PTR ds:[rsi]
   14000aa53:	add    BYTE PTR [rsi+0x0],ah
   14000aa56:	je     0x14000aa58
   14000aa58:	ja     0x14000aa5a
   14000aa5a:	(bad)  
   14000aa5b:	add    BYTE PTR [rdx+0x0],dh
   14000aa5e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000aa63:	add    BYTE PTR [rcx+0x0],ch
   14000aa66:	movsxd eax,DWORD PTR [rax]
   14000aa68:	jb     0x14000aa6a
   14000aa6a:	outs   dx,DWORD PTR ds:[rsi]
   14000aa6b:	add    BYTE PTR [rbx+0x0],dh
   14000aa6e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa6f:	add    BYTE PTR [rsi+0x0],ah
   14000aa72:	je     0x14000aa74
   14000aa74:	pop    rsp
   14000aa75:	add    BYTE PTR [rdi+0x0],dl
   14000aa78:	imul   eax,DWORD PTR [rax],0x64006e
   14000aa7e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa7f:	add    BYTE PTR [rdi+0x0],dh
   14000aa82:	jae    0x14000aa84
   14000aa84:	push   rbp
   14000aa85:	add    BYTE PTR [rax+0x0],dh
   14000aa88:	add    BYTE PTR fs:[rcx+0x0],ah
   14000aa8c:	je     0x14000aa8e
   14000aa8e:	add    BYTE PTR gs:[rax],al
	...
   14000aa9d:	add    BYTE PTR [rax],al
   14000aa9f:	add    BYTE PTR [rbx+0x0],dl
   14000aaa2:	outs   dx,DWORD PTR ds:[rsi]
   14000aaa3:	add    BYTE PTR [rsi+0x0],ah
   14000aaa6:	je     0x14000aaa8
   14000aaa8:	ja     0x14000aaaa
   14000aaaa:	(bad)  
   14000aaab:	add    BYTE PTR [rdx+0x0],dh
   14000aaae:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000aab3:	add    BYTE PTR [rcx+0x0],ch
   14000aab6:	movsxd eax,DWORD PTR [rax]
   14000aab8:	jb     0x14000aaba
   14000aaba:	outs   dx,DWORD PTR ds:[rsi]
   14000aabb:	add    BYTE PTR [rbx+0x0],dh
   14000aabe:	outs   dx,DWORD PTR ds:[rsi]
   14000aabf:	add    BYTE PTR [rsi+0x0],ah
   14000aac2:	je     0x14000aac4
   14000aac4:	pop    rsp
   14000aac5:	add    BYTE PTR [rdi+0x0],dl
   14000aac8:	imul   eax,DWORD PTR [rax],0x64006e
   14000aace:	outs   dx,DWORD PTR ds:[rsi]
   14000aacf:	add    BYTE PTR [rdi+0x0],dh
   14000aad2:	jae    0x14000aad4
   14000aad4:	pop    rsp
   14000aad5:	add    BYTE PTR [rbx+0x0],al
   14000aad8:	jne    0x14000aada
   14000aada:	jb     0x14000aadc
   14000aadc:	jb     0x14000aade
   14000aade:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aae2:	je     0x14000aae4
   14000aae4:	push   rsi
   14000aae5:	add    BYTE PTR [rbp+0x0],ah
   14000aae8:	jb     0x14000aaea
   14000aaea:	jae    0x14000aaec
   14000aaec:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aaf2:	pop    rsp
   14000aaf3:	add    BYTE PTR [rdi+0x0],dl
   14000aaf6:	imul   eax,DWORD PTR [rax],0x64006e
   14000aafc:	outs   dx,DWORD PTR ds:[rsi]
   14000aafd:	add    BYTE PTR [rdi+0x0],dh
   14000ab00:	jae    0x14000ab02
   14000ab02:	push   rbp
   14000ab03:	add    BYTE PTR [rax+0x0],dh
   14000ab06:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ab0a:	je     0x14000ab0c
   14000ab0c:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000ab11:	add    BYTE PTR [rdx+0x0],dh
   14000ab14:	movsxd eax,DWORD PTR [rax]
   14000ab16:	push   0x73006500
   14000ab1b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ab1f:	add    BYTE PTR [rcx+0x0],ah
   14000ab22:	je     0x14000ab24
   14000ab24:	outs   dx,DWORD PTR ds:[rsi]
   14000ab25:	add    BYTE PTR [rdx+0x0],dh
	...
   14000ab30:	push   rbx
   14000ab31:	add    BYTE PTR [rdi+0x0],ch
   14000ab34:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000ab39:	add    BYTE PTR [rcx+0x0],ah
   14000ab3c:	jb     0x14000ab3e
   14000ab3e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000ab43:	add    BYTE PTR [rcx+0x0],ch
   14000ab46:	movsxd eax,DWORD PTR [rax]
   14000ab48:	jb     0x14000ab4a
   14000ab4a:	outs   dx,DWORD PTR ds:[rsi]
   14000ab4b:	add    BYTE PTR [rbx+0x0],dh
   14000ab4e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab4f:	add    BYTE PTR [rsi+0x0],ah
   14000ab52:	je     0x14000ab54
   14000ab54:	pop    rsp
   14000ab55:	add    BYTE PTR [rdi+0x0],dl
   14000ab58:	imul   eax,DWORD PTR [rax],0x64006e
   14000ab5e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab5f:	add    BYTE PTR [rdi+0x0],dh
   14000ab62:	jae    0x14000ab64
   14000ab64:	pop    rsp
   14000ab65:	add    BYTE PTR [rbx+0x0],al
   14000ab68:	jne    0x14000ab6a
   14000ab6a:	jb     0x14000ab6c
   14000ab6c:	jb     0x14000ab6e
   14000ab6e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ab72:	je     0x14000ab74
   14000ab74:	push   rsi
   14000ab75:	add    BYTE PTR [rbp+0x0],ah
   14000ab78:	jb     0x14000ab7a
   14000ab7a:	jae    0x14000ab7c
   14000ab7c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ab82:	pop    rsp
   14000ab83:	add    BYTE PTR [rdi+0x0],dl
   14000ab86:	imul   eax,DWORD PTR [rax],0x64006e
   14000ab8c:	outs   dx,DWORD PTR ds:[rsi]
   14000ab8d:	add    BYTE PTR [rdi+0x0],dh
   14000ab90:	jae    0x14000ab92
   14000ab92:	push   rbp
   14000ab93:	add    BYTE PTR [rax+0x0],dh
   14000ab96:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ab9a:	je     0x14000ab9c
   14000ab9c:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000aba1:	add    BYTE PTR [rdx+0x0],dh
   14000aba4:	movsxd eax,DWORD PTR [rax]
   14000aba6:	push   0x73006500
   14000abab:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000abaf:	add    BYTE PTR [rcx+0x0],ah
   14000abb2:	je     0x14000abb4
   14000abb4:	outs   dx,DWORD PTR ds:[rsi]
   14000abb5:	add    BYTE PTR [rdx+0x0],dh
   14000abb8:	pop    rsp
   14000abb9:	add    BYTE PTR [rbp+0x0],dl
   14000abbc:	jo     0x14000abbe
   14000abbe:	add    BYTE PTR fs:[rcx+0x0],ah
   14000abc2:	je     0x14000abc4
   14000abc4:	add    BYTE PTR gs:[rax+0x0],cl
   14000abc8:	(bad)  
   14000abc9:	add    BYTE PTR [rsi+0x0],ch
   14000abcc:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000abd1:	add    BYTE PTR [rdx+0x0],dh
   14000abd4:	jae    0x14000abd6
	...
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	push   rbx
   14000abe1:	add    BYTE PTR [rdi+0x0],ch
   14000abe4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000abe9:	add    BYTE PTR [rcx+0x0],ah
   14000abec:	jb     0x14000abee
   14000abee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000abf3:	add    BYTE PTR [rcx+0x0],ch
   14000abf6:	movsxd eax,DWORD PTR [rax]
   14000abf8:	jb     0x14000abfa
   14000abfa:	outs   dx,DWORD PTR ds:[rsi]
   14000abfb:	add    BYTE PTR [rbx+0x0],dh
   14000abfe:	outs   dx,DWORD PTR ds:[rsi]
   14000abff:	add    BYTE PTR [rsi+0x0],ah
   14000ac02:	je     0x14000ac04
   14000ac04:	pop    rsp
   14000ac05:	add    BYTE PTR [rdi+0x0],dl
   14000ac08:	imul   eax,DWORD PTR [rax],0x64006e
   14000ac0e:	outs   dx,DWORD PTR ds:[rsi]
   14000ac0f:	add    BYTE PTR [rdi+0x0],dh
   14000ac12:	jae    0x14000ac14
   14000ac14:	pop    rsp
   14000ac15:	add    BYTE PTR [rbx+0x0],al
   14000ac18:	jne    0x14000ac1a
   14000ac1a:	jb     0x14000ac1c
   14000ac1c:	jb     0x14000ac1e
   14000ac1e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ac22:	je     0x14000ac24
   14000ac24:	push   rsi
   14000ac25:	add    BYTE PTR [rbp+0x0],ah
   14000ac28:	jb     0x14000ac2a
   14000ac2a:	jae    0x14000ac2c
   14000ac2c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ac32:	pop    rsp
   14000ac33:	add    BYTE PTR [rdi+0x0],dl
   14000ac36:	imul   eax,DWORD PTR [rax],0x64006e
   14000ac3c:	outs   dx,DWORD PTR ds:[rsi]
   14000ac3d:	add    BYTE PTR [rdi+0x0],dh
   14000ac40:	jae    0x14000ac42
   14000ac42:	push   rbp
   14000ac43:	add    BYTE PTR [rax+0x0],dh
   14000ac46:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ac4a:	je     0x14000ac4c
   14000ac4c:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000ac51:	add    BYTE PTR [rdx+0x0],dh
   14000ac54:	movsxd eax,DWORD PTR [rax]
   14000ac56:	push   0x73006500
   14000ac5b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ac5f:	add    BYTE PTR [rcx+0x0],ah
   14000ac62:	je     0x14000ac64
   14000ac64:	outs   dx,DWORD PTR ds:[rsi]
   14000ac65:	add    BYTE PTR [rdx+0x0],dh
   14000ac68:	pop    rsp
   14000ac69:	add    BYTE PTR [rcx+0x0],al
   14000ac6c:	movsxd eax,DWORD PTR [rax]
   14000ac6e:	je     0x14000ac70
   14000ac70:	imul   eax,DWORD PTR [rax],0x650076
   14000ac76:	push   rbp
   14000ac77:	add    BYTE PTR [rax+0x0],dh
   14000ac7a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ac7e:	je     0x14000ac80
   14000ac80:	add    BYTE PTR gs:[rbx+0x0],dl
   14000ac84:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ac88:	jae    0x14000ac8a
   14000ac8a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ac90:	jae    0x14000ac92
	...
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	push   rbx
   14000aca1:	add    BYTE PTR [rdi+0x0],ch
   14000aca4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000aca9:	add    BYTE PTR [rcx+0x0],ah
   14000acac:	jb     0x14000acae
   14000acae:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000acb3:	add    BYTE PTR [rcx+0x0],ch
   14000acb6:	movsxd eax,DWORD PTR [rax]
   14000acb8:	jb     0x14000acba
   14000acba:	outs   dx,DWORD PTR ds:[rsi]
   14000acbb:	add    BYTE PTR [rbx+0x0],dh
   14000acbe:	outs   dx,DWORD PTR ds:[rsi]
   14000acbf:	add    BYTE PTR [rsi+0x0],ah
   14000acc2:	je     0x14000acc4
   14000acc4:	pop    rsp
   14000acc5:	add    BYTE PTR [rdi+0x0],dl
   14000acc8:	imul   eax,DWORD PTR [rax],0x64006e
   14000acce:	outs   dx,DWORD PTR ds:[rsi]
   14000accf:	add    BYTE PTR [rdi+0x0],dh
   14000acd2:	jae    0x14000acd4
   14000acd4:	pop    rsp
   14000acd5:	add    BYTE PTR [rbx+0x0],al
   14000acd8:	jne    0x14000acda
   14000acda:	jb     0x14000acdc
   14000acdc:	jb     0x14000acde
   14000acde:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ace2:	je     0x14000ace4
   14000ace4:	push   rsi
   14000ace5:	add    BYTE PTR [rbp+0x0],ah
   14000ace8:	jb     0x14000acea
   14000acea:	jae    0x14000acec
   14000acec:	imul   eax,DWORD PTR [rax],0x6e006f
   14000acf2:	pop    rsp
   14000acf3:	add    BYTE PTR [rdi+0x0],dl
   14000acf6:	imul   eax,DWORD PTR [rax],0x64006e
   14000acfc:	outs   dx,DWORD PTR ds:[rsi]
   14000acfd:	add    BYTE PTR [rdi+0x0],dh
   14000ad00:	jae    0x14000ad02
   14000ad02:	push   rbp
   14000ad03:	add    BYTE PTR [rax+0x0],dh
   14000ad06:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ad0a:	je     0x14000ad0c
   14000ad0c:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000ad11:	add    BYTE PTR [rdx+0x0],dh
   14000ad14:	movsxd eax,DWORD PTR [rax]
   14000ad16:	push   0x73006500
   14000ad1b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ad1f:	add    BYTE PTR [rcx+0x0],ah
   14000ad22:	je     0x14000ad24
   14000ad24:	outs   dx,DWORD PTR ds:[rsi]
   14000ad25:	add    BYTE PTR [rdx+0x0],dh
   14000ad28:	pop    rsp
   14000ad29:	add    BYTE PTR [rbx+0x0],dl
   14000ad2c:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000ad31:	add    BYTE PTR [rcx+0x0],ch
   14000ad34:	outs   dx,BYTE PTR ds:[rsi]
   14000ad35:	add    BYTE PTR [rdi+0x0],ah
   14000ad38:	jae    0x14000ad3a
   14000ad3a:	add    BYTE PTR [rax],al
   14000ad3c:	add    BYTE PTR [rax],al
   14000ad3e:	add    BYTE PTR [rax],al
   14000ad40:	push   rbx
   14000ad41:	add    BYTE PTR [rdi+0x0],ch
   14000ad44:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000ad49:	add    BYTE PTR [rcx+0x0],ah
   14000ad4c:	jb     0x14000ad4e
   14000ad4e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000ad53:	add    BYTE PTR [rcx+0x0],ch
   14000ad56:	movsxd eax,DWORD PTR [rax]
   14000ad58:	jb     0x14000ad5a
   14000ad5a:	outs   dx,DWORD PTR ds:[rsi]
   14000ad5b:	add    BYTE PTR [rbx+0x0],dh
   14000ad5e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad5f:	add    BYTE PTR [rsi+0x0],ah
   14000ad62:	je     0x14000ad64
   14000ad64:	pop    rsp
   14000ad65:	add    BYTE PTR [rdi+0x0],dl
   14000ad68:	imul   eax,DWORD PTR [rax],0x64006e
   14000ad6e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad6f:	add    BYTE PTR [rdi+0x0],dh
   14000ad72:	jae    0x14000ad74
   14000ad74:	push   rbp
   14000ad75:	add    BYTE PTR [rax+0x0],dh
   14000ad78:	add    BYTE PTR fs:[rcx+0x0],ah
   14000ad7c:	je     0x14000ad7e
   14000ad7e:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000ad83:	add    BYTE PTR [rdx+0x0],dh
   14000ad86:	movsxd eax,DWORD PTR [rax]
   14000ad88:	push   0x73006500
   14000ad8d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ad91:	add    BYTE PTR [rcx+0x0],ah
   14000ad94:	je     0x14000ad96
   14000ad96:	outs   dx,DWORD PTR ds:[rsi]
   14000ad97:	add    BYTE PTR [rdx+0x0],dh
   14000ad9a:	pop    rsp
   14000ad9b:	add    BYTE PTR [rbx+0x0],al
   14000ad9e:	outs   dx,DWORD PTR ds:[rsi]
   14000ad9f:	add    BYTE PTR [rsi+0x0],ch
   14000ada2:	data16 add BYTE PTR [rcx+0x0],ch
   14000ada6:	add    BYTE PTR [ebp+0x0],dh
   14000adaa:	jb     0x14000adac
   14000adac:	(bad)  
   14000adad:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000adb1:	add    BYTE PTR [rdi+0x0],ch
   14000adb4:	outs   dx,BYTE PTR ds:[rsi]
   14000adb5:	add    BYTE PTR [rbx+0x0],dh
	...
   14000adc0:	push   rbx
   14000adc1:	add    BYTE PTR [rdi+0x0],ch
   14000adc4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000adc9:	add    BYTE PTR [rcx+0x0],ah
   14000adcc:	jb     0x14000adce
   14000adce:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000add3:	add    BYTE PTR [rcx+0x0],ch
   14000add6:	movsxd eax,DWORD PTR [rax]
   14000add8:	jb     0x14000adda
   14000adda:	outs   dx,DWORD PTR ds:[rsi]
   14000addb:	add    BYTE PTR [rbx+0x0],dh
   14000adde:	outs   dx,DWORD PTR ds:[rsi]
   14000addf:	add    BYTE PTR [rsi+0x0],ah
   14000ade2:	je     0x14000ade4
   14000ade4:	pop    rsp
   14000ade5:	add    BYTE PTR [rdi+0x0],dl
   14000ade8:	imul   eax,DWORD PTR [rax],0x64006e
   14000adee:	outs   dx,DWORD PTR ds:[rsi]
   14000adef:	add    BYTE PTR [rdi+0x0],dh
   14000adf2:	jae    0x14000adf4
   14000adf4:	push   rbp
   14000adf5:	add    BYTE PTR [rax+0x0],dh
   14000adf8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000adfc:	je     0x14000adfe
   14000adfe:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000ae03:	add    BYTE PTR [rdx+0x0],dh
   14000ae06:	movsxd eax,DWORD PTR [rax]
   14000ae08:	push   0x73006500
   14000ae0d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000ae11:	add    BYTE PTR [rcx+0x0],ah
   14000ae14:	je     0x14000ae16
   14000ae16:	outs   dx,DWORD PTR ds:[rsi]
   14000ae17:	add    BYTE PTR [rdx+0x0],dh
   14000ae1a:	pop    rsp
   14000ae1b:	add    BYTE PTR [rbx+0x0],al
   14000ae1e:	jb     0x14000ae20
   14000ae20:	outs   dx,DWORD PTR ds:[rsi]
   14000ae21:	add    BYTE PTR [rbx+0x0],dh
   14000ae24:	jae    0x14000ae26
   14000ae26:	push   rbx
   14000ae27:	add    BYTE PTR [rbp+0x0],ah
   14000ae2a:	jae    0x14000ae2c
   14000ae2c:	jae    0x14000ae2e
   14000ae2e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ae34:	add    BYTE PTR [rcx+0x0],r12b
   14000ae38:	je     0x14000ae3a
   14000ae3a:	(bad)  
   14000ae3b:	add    BYTE PTR [rax],al
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    BYTE PTR [rbx+0x0],dl
   14000ae42:	outs   dx,DWORD PTR ds:[rsi]
   14000ae43:	add    BYTE PTR [rsi+0x0],ah
   14000ae46:	je     0x14000ae48
   14000ae48:	ja     0x14000ae4a
   14000ae4a:	(bad)  
   14000ae4b:	add    BYTE PTR [rdx+0x0],dh
   14000ae4e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000ae53:	add    BYTE PTR [rcx+0x0],ch
   14000ae56:	movsxd eax,DWORD PTR [rax]
   14000ae58:	jb     0x14000ae5a
   14000ae5a:	outs   dx,DWORD PTR ds:[rsi]
   14000ae5b:	add    BYTE PTR [rbx+0x0],dh
   14000ae5e:	outs   dx,DWORD PTR ds:[rsi]
   14000ae5f:	add    BYTE PTR [rsi+0x0],ah
   14000ae62:	je     0x14000ae64
   14000ae64:	pop    rsp
   14000ae65:	add    BYTE PTR [rdi+0x0],dl
   14000ae68:	imul   eax,DWORD PTR [rax],0x64006e
   14000ae6e:	outs   dx,DWORD PTR ds:[rsi]
   14000ae6f:	add    BYTE PTR [rdi+0x0],dh
   14000ae72:	jae    0x14000ae74
   14000ae74:	pop    rsp
   14000ae75:	add    BYTE PTR [rbx+0x0],al
   14000ae78:	jne    0x14000ae7a
   14000ae7a:	jb     0x14000ae7c
   14000ae7c:	jb     0x14000ae7e
   14000ae7e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ae82:	je     0x14000ae84
   14000ae84:	push   rsi
   14000ae85:	add    BYTE PTR [rbp+0x0],ah
   14000ae88:	jb     0x14000ae8a
   14000ae8a:	jae    0x14000ae8c
   14000ae8c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ae92:	pop    rsp
   14000ae93:	add    BYTE PTR [rax+rax*1+0x65],al
   14000ae97:	add    BYTE PTR [rsi+0x0],dh
   14000ae9a:	imul   eax,DWORD PTR [rax],0x650063
   14000aea0:	push   rbp
   14000aea1:	add    BYTE PTR [rax+0x0],dh
   14000aea4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000aea8:	je     0x14000aeaa
   14000aeaa:	add    BYTE PTR gs:[rax+rax*1+0x41],bl
   14000aeaf:	add    BYTE PTR [rdi+0x0],ah
   14000aeb2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000aeb6:	je     0x14000aeb8
   14000aeb8:	pop    rsp
   14000aeb9:	add    BYTE PTR [rbp+0x0],al
   14000aebc:	outs   dx,BYTE PTR ds:[rsi]
   14000aebd:	add    BYTE PTR [rdi+0x0],ah
   14000aec0:	imul   eax,DWORD PTR [rax],0x65006e
	...
   14000aece:	add    BYTE PTR [rax],al
   14000aed0:	push   rbx
   14000aed1:	add    BYTE PTR [rdi+0x0],ch
   14000aed4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000aed9:	add    BYTE PTR [rcx+0x0],ah
   14000aedc:	jb     0x14000aede
   14000aede:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000aee3:	add    BYTE PTR [rcx+0x0],ch
   14000aee6:	movsxd eax,DWORD PTR [rax]
   14000aee8:	jb     0x14000aeea
   14000aeea:	outs   dx,DWORD PTR ds:[rsi]
   14000aeeb:	add    BYTE PTR [rbx+0x0],dh
   14000aeee:	outs   dx,DWORD PTR ds:[rsi]
   14000aeef:	add    BYTE PTR [rsi+0x0],ah
   14000aef2:	je     0x14000aef4
   14000aef4:	pop    rsp
   14000aef5:	add    BYTE PTR [rdi+0x0],dl
   14000aef8:	imul   eax,DWORD PTR [rax],0x64006e
   14000aefe:	outs   dx,DWORD PTR ds:[rsi]
   14000aeff:	add    BYTE PTR [rdi+0x0],dh
   14000af02:	jae    0x14000af04
   14000af04:	pop    rsp
   14000af05:	add    BYTE PTR [rbx+0x0],al
   14000af08:	jne    0x14000af0a
   14000af0a:	jb     0x14000af0c
   14000af0c:	jb     0x14000af0e
   14000af0e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000af12:	je     0x14000af14
   14000af14:	push   rsi
   14000af15:	add    BYTE PTR [rbp+0x0],ah
   14000af18:	jb     0x14000af1a
   14000af1a:	jae    0x14000af1c
   14000af1c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000af22:	pop    rsp
   14000af23:	add    BYTE PTR [rax+rax*1+0x65],al
   14000af27:	add    BYTE PTR [rsi+0x0],dh
   14000af2a:	imul   eax,DWORD PTR [rax],0x650063
   14000af30:	push   rbp
   14000af31:	add    BYTE PTR [rax+0x0],dh
   14000af34:	add    BYTE PTR fs:[rcx+0x0],ah
   14000af38:	je     0x14000af3a
   14000af3a:	add    BYTE PTR gs:[rax+rax*1+0x41],bl
   14000af3f:	add    BYTE PTR [rdi+0x0],ah
   14000af42:	add    BYTE PTR gs:[rsi+0x0],ch
   14000af46:	je     0x14000af48
   14000af48:	pop    rsp
   14000af49:	add    BYTE PTR [rax+rax*1+0x65],al
   14000af4d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000af51:	add    BYTE PTR [rbx+0x0],ah
   14000af54:	je     0x14000af56
   14000af56:	imul   eax,DWORD PTR [rax],0x6e006f
   14000af5c:	pop    rsp
   14000af5d:	add    BYTE PTR [rbp+0x0],dl
   14000af60:	jae    0x14000af62
   14000af62:	add    BYTE PTR gs:[rdx+0x0],dh
   14000af66:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000af6a:	jae    0x14000af6c
   14000af6c:	je     0x14000af6e
   14000af6e:	(bad)  
   14000af6f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000af73:	add    BYTE PTR [rcx+0x0],ah
   14000af76:	(bad)  
   14000af77:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000af7b:	add    BYTE PTR [rax],al
   14000af7d:	add    BYTE PTR [rax],al
   14000af7f:	add    BYTE PTR [rbx+0x0],dl
   14000af82:	outs   dx,DWORD PTR ds:[rsi]
   14000af83:	add    BYTE PTR [rsi+0x0],ah
   14000af86:	je     0x14000af88
   14000af88:	ja     0x14000af8a
   14000af8a:	(bad)  
   14000af8b:	add    BYTE PTR [rdx+0x0],dh
   14000af8e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000af93:	add    BYTE PTR [rcx+0x0],ch
   14000af96:	movsxd eax,DWORD PTR [rax]
   14000af98:	jb     0x14000af9a
   14000af9a:	outs   dx,DWORD PTR ds:[rsi]
   14000af9b:	add    BYTE PTR [rbx+0x0],dh
   14000af9e:	outs   dx,DWORD PTR ds:[rsi]
   14000af9f:	add    BYTE PTR [rsi+0x0],ah
   14000afa2:	je     0x14000afa4
   14000afa4:	pop    rsp
   14000afa5:	add    BYTE PTR [rdi+0x0],dl
   14000afa8:	imul   eax,DWORD PTR [rax],0x64006e
   14000afae:	outs   dx,DWORD PTR ds:[rsi]
   14000afaf:	add    BYTE PTR [rdi+0x0],dh
   14000afb2:	jae    0x14000afb4
   14000afb4:	push   rbp
   14000afb5:	add    BYTE PTR [rax+0x0],dh
   14000afb8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000afbc:	je     0x14000afbe
   14000afbe:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000afc3:	add    BYTE PTR [rdx+0x0],dh
   14000afc6:	movsxd eax,DWORD PTR [rax]
   14000afc8:	push   0x73006500
   14000afcd:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000afd1:	add    BYTE PTR [rcx+0x0],ah
   14000afd4:	je     0x14000afd6
   14000afd6:	outs   dx,DWORD PTR ds:[rsi]
   14000afd7:	add    BYTE PTR [rdx+0x0],dh
   14000afda:	pop    rsp
   14000afdb:	add    BYTE PTR [rcx+0x0],cl
   14000afde:	outs   dx,BYTE PTR ds:[rsi]
   14000afdf:	add    BYTE PTR [rbx+0x0],dh
   14000afe2:	je     0x14000afe4
   14000afe4:	(bad)  
   14000afe5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000afe9:	add    BYTE PTR [rcx+0x0],ah
   14000afec:	je     0x14000afee
   14000afee:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aff4:	pop    rsp
   14000aff5:	add    BYTE PTR [rbx+0x0],dl
   14000aff8:	outs   dx,DWORD PTR ds:[rsi]
   14000aff9:	add    BYTE PTR [rbp+0x0],dh
   14000affc:	jb     0x14000affe
   14000affe:	movsxd eax,DWORD PTR [rax]
   14000b000:	add    BYTE PTR gs:[rax],al
	...
   14000b00f:	add    BYTE PTR [rbx+0x0],dl
   14000b012:	outs   dx,DWORD PTR ds:[rsi]
   14000b013:	add    BYTE PTR [rsi+0x0],ah
   14000b016:	je     0x14000b018
   14000b018:	ja     0x14000b01a
   14000b01a:	(bad)  
   14000b01b:	add    BYTE PTR [rdx+0x0],dh
   14000b01e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b023:	add    BYTE PTR [rcx+0x0],ch
   14000b026:	movsxd eax,DWORD PTR [rax]
   14000b028:	jb     0x14000b02a
   14000b02a:	outs   dx,DWORD PTR ds:[rsi]
   14000b02b:	add    BYTE PTR [rbx+0x0],dh
   14000b02e:	outs   dx,DWORD PTR ds:[rsi]
   14000b02f:	add    BYTE PTR [rsi+0x0],ah
   14000b032:	je     0x14000b034
   14000b034:	pop    rsp
   14000b035:	add    BYTE PTR [rdi+0x0],dl
   14000b038:	imul   eax,DWORD PTR [rax],0x64006e
   14000b03e:	outs   dx,DWORD PTR ds:[rsi]
   14000b03f:	add    BYTE PTR [rdi+0x0],dh
   14000b042:	jae    0x14000b044
   14000b044:	push   rbp
   14000b045:	add    BYTE PTR [rax+0x0],dh
   14000b048:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b04c:	je     0x14000b04e
   14000b04e:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b053:	add    BYTE PTR [rdx+0x0],dh
   14000b056:	movsxd eax,DWORD PTR [rax]
   14000b058:	push   0x73006500
   14000b05d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b061:	add    BYTE PTR [rcx+0x0],ah
   14000b064:	je     0x14000b066
   14000b066:	outs   dx,DWORD PTR ds:[rsi]
   14000b067:	add    BYTE PTR [rdx+0x0],dh
   14000b06a:	pop    rsp
   14000b06b:	add    BYTE PTR [rcx+0x0],cl
   14000b06e:	outs   dx,BYTE PTR ds:[rsi]
   14000b06f:	add    BYTE PTR [rbx+0x0],dh
   14000b072:	je     0x14000b074
   14000b074:	(bad)  
   14000b075:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b079:	add    BYTE PTR [rcx+0x0],ah
   14000b07c:	je     0x14000b07e
   14000b07e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b084:	pop    rsp
   14000b085:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000b089:	add    BYTE PTR [rdx+0x0],dh
   14000b08c:	add    BYTE PTR [ebp+0x0],ah
   14000b090:	je     0x14000b092
	...
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	push   rbx
   14000b0a1:	add    BYTE PTR [rdi+0x0],ch
   14000b0a4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b0a9:	add    BYTE PTR [rcx+0x0],ah
   14000b0ac:	jb     0x14000b0ae
   14000b0ae:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b0b3:	add    BYTE PTR [rcx+0x0],ch
   14000b0b6:	movsxd eax,DWORD PTR [rax]
   14000b0b8:	jb     0x14000b0ba
   14000b0ba:	outs   dx,DWORD PTR ds:[rsi]
   14000b0bb:	add    BYTE PTR [rbx+0x0],dh
   14000b0be:	outs   dx,DWORD PTR ds:[rsi]
   14000b0bf:	add    BYTE PTR [rsi+0x0],ah
   14000b0c2:	je     0x14000b0c4
   14000b0c4:	pop    rsp
   14000b0c5:	add    BYTE PTR [rdi+0x0],dl
   14000b0c8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b0ce:	outs   dx,DWORD PTR ds:[rsi]
   14000b0cf:	add    BYTE PTR [rdi+0x0],dh
   14000b0d2:	jae    0x14000b0d4
   14000b0d4:	push   rbp
   14000b0d5:	add    BYTE PTR [rax+0x0],dh
   14000b0d8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b0dc:	je     0x14000b0de
   14000b0de:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b0e3:	add    BYTE PTR [rdx+0x0],dh
   14000b0e6:	movsxd eax,DWORD PTR [rax]
   14000b0e8:	push   0x73006500
   14000b0ed:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b0f1:	add    BYTE PTR [rcx+0x0],ah
   14000b0f4:	je     0x14000b0f6
   14000b0f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f7:	add    BYTE PTR [rdx+0x0],dh
   14000b0fa:	pop    rsp
   14000b0fb:	add    BYTE PTR [rbx+0x0],al
   14000b0fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b0ff:	add    BYTE PTR [rdx+0x0],dh
   14000b102:	add    BYTE PTR gs:[rbp+0x0],cl
   14000b106:	imul   eax,DWORD PTR [rax],0x720067
   14000b10c:	(bad)  
   14000b10d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b111:	add    BYTE PTR [rdi+0x0],ch
   14000b114:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000b11d:	add    BYTE PTR [rax],al
   14000b11f:	add    BYTE PTR [rbx+0x0],dl
   14000b122:	outs   dx,DWORD PTR ds:[rsi]
   14000b123:	add    BYTE PTR [rsi+0x0],ah
   14000b126:	je     0x14000b128
   14000b128:	ja     0x14000b12a
   14000b12a:	(bad)  
   14000b12b:	add    BYTE PTR [rdx+0x0],dh
   14000b12e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b133:	add    BYTE PTR [rcx+0x0],ch
   14000b136:	movsxd eax,DWORD PTR [rax]
   14000b138:	jb     0x14000b13a
   14000b13a:	outs   dx,DWORD PTR ds:[rsi]
   14000b13b:	add    BYTE PTR [rbx+0x0],dh
   14000b13e:	outs   dx,DWORD PTR ds:[rsi]
   14000b13f:	add    BYTE PTR [rsi+0x0],ah
   14000b142:	je     0x14000b144
   14000b144:	pop    rsp
   14000b145:	add    BYTE PTR [rdi+0x0],dl
   14000b148:	imul   eax,DWORD PTR [rax],0x64006e
   14000b14e:	outs   dx,DWORD PTR ds:[rsi]
   14000b14f:	add    BYTE PTR [rdi+0x0],dh
   14000b152:	jae    0x14000b154
   14000b154:	push   rbp
   14000b155:	add    BYTE PTR [rax+0x0],dh
   14000b158:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b15c:	je     0x14000b15e
   14000b15e:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b163:	add    BYTE PTR [rdx+0x0],dh
   14000b166:	movsxd eax,DWORD PTR [rax]
   14000b168:	push   0x73006500
   14000b16d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b171:	add    BYTE PTR [rcx+0x0],ah
   14000b174:	je     0x14000b176
   14000b176:	outs   dx,DWORD PTR ds:[rsi]
   14000b177:	add    BYTE PTR [rdx+0x0],dh
   14000b17a:	pop    rsp
   14000b17b:	add    BYTE PTR [rbp+0x0],dl
   14000b17e:	push   rbx
   14000b17f:	add    BYTE PTR [rdi+0x0],cl
   14000b182:	push   rbx
   14000b183:	add    BYTE PTR [rax+0x0],ch
   14000b186:	(bad)  
   14000b187:	add    BYTE PTR [rdx+0x0],dh
   14000b18a:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b18f:	add    BYTE PTR [rbx+0x0],dl
   14000b192:	je     0x14000b194
   14000b194:	(bad)  
   14000b195:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b199:	add    BYTE PTR [rbx+0x0],ah
   14000b19c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b1a0:	ins    BYTE PTR es:[rdi],dx
   14000b1a1:	add    BYTE PTR [rbp+0x0],ah
   14000b1a4:	push   rax
   14000b1a5:	add    BYTE PTR [rcx+0x0],ah
   14000b1a8:	je     0x14000b1aa
   14000b1aa:	push   0x54007300
   14000b1af:	add    BYTE PTR [rdi+0x0],ch
   14000b1b2:	add    BYTE PTR [rbp+0x0],r14b
   14000b1b6:	ins    DWORD PTR es:[rdi],dx
   14000b1b7:	add    BYTE PTR [rax+0x0],dh
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	add    BYTE PTR [rax],al
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	push   rbx
   14000b1c1:	add    BYTE PTR [rdi+0x0],ch
   14000b1c4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b1c9:	add    BYTE PTR [rcx+0x0],ah
   14000b1cc:	jb     0x14000b1ce
   14000b1ce:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b1d3:	add    BYTE PTR [rcx+0x0],ch
   14000b1d6:	movsxd eax,DWORD PTR [rax]
   14000b1d8:	jb     0x14000b1da
   14000b1da:	outs   dx,DWORD PTR ds:[rsi]
   14000b1db:	add    BYTE PTR [rbx+0x0],dh
   14000b1de:	outs   dx,DWORD PTR ds:[rsi]
   14000b1df:	add    BYTE PTR [rsi+0x0],ah
   14000b1e2:	je     0x14000b1e4
   14000b1e4:	pop    rsp
   14000b1e5:	add    BYTE PTR [rdi+0x0],dl
   14000b1e8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b1ee:	outs   dx,DWORD PTR ds:[rsi]
   14000b1ef:	add    BYTE PTR [rdi+0x0],dh
   14000b1f2:	jae    0x14000b1f4
   14000b1f4:	push   rbp
   14000b1f5:	add    BYTE PTR [rax+0x0],dh
   14000b1f8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b1fc:	je     0x14000b1fe
   14000b1fe:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b203:	add    BYTE PTR [rdx+0x0],dh
   14000b206:	movsxd eax,DWORD PTR [rax]
   14000b208:	push   0x73006500
   14000b20d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b211:	add    BYTE PTR [rcx+0x0],ah
   14000b214:	je     0x14000b216
   14000b216:	outs   dx,DWORD PTR ds:[rsi]
   14000b217:	add    BYTE PTR [rdx+0x0],dh
   14000b21a:	pop    rsp
   14000b21b:	add    BYTE PTR [rbp+0x0],dl
   14000b21e:	push   rbx
   14000b21f:	add    BYTE PTR [rdi+0x0],cl
   14000b222:	push   rbx
   14000b223:	add    BYTE PTR [rax+0x0],ch
   14000b226:	(bad)  
   14000b227:	add    BYTE PTR [rdx+0x0],dh
   14000b22a:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b22f:	add    BYTE PTR [rbp+0x0],al
   14000b232:	je     0x14000b234
   14000b234:	ja     0x14000b236
   14000b236:	push   rbx
   14000b237:	add    BYTE PTR [rbp+0x0],ah
   14000b23a:	jae    0x14000b23c
   14000b23c:	jae    0x14000b23e
   14000b23e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b244:	jae    0x14000b246
   14000b246:	push   rsp
   14000b247:	add    BYTE PTR [rdi+0x0],ch
   14000b24a:	add    BYTE PTR [rbp+0x0],r14b
   14000b24e:	ins    DWORD PTR es:[rdi],dx
   14000b24f:	add    BYTE PTR [rax+0x0],dh
	...
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	push   rbx
   14000b261:	add    BYTE PTR [rdi+0x0],ch
   14000b264:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b269:	add    BYTE PTR [rcx+0x0],ah
   14000b26c:	jb     0x14000b26e
   14000b26e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b273:	add    BYTE PTR [rcx+0x0],ch
   14000b276:	movsxd eax,DWORD PTR [rax]
   14000b278:	jb     0x14000b27a
   14000b27a:	outs   dx,DWORD PTR ds:[rsi]
   14000b27b:	add    BYTE PTR [rbx+0x0],dh
   14000b27e:	outs   dx,DWORD PTR ds:[rsi]
   14000b27f:	add    BYTE PTR [rsi+0x0],ah
   14000b282:	je     0x14000b284
   14000b284:	pop    rsp
   14000b285:	add    BYTE PTR [rdi+0x0],dl
   14000b288:	imul   eax,DWORD PTR [rax],0x64006e
   14000b28e:	outs   dx,DWORD PTR ds:[rsi]
   14000b28f:	add    BYTE PTR [rdi+0x0],dh
   14000b292:	jae    0x14000b294
   14000b294:	push   rbp
   14000b295:	add    BYTE PTR [rax+0x0],dh
   14000b298:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b29c:	je     0x14000b29e
   14000b29e:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b2a3:	add    BYTE PTR [rdx+0x0],dh
   14000b2a6:	movsxd eax,DWORD PTR [rax]
   14000b2a8:	push   0x73006500
   14000b2ad:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b2b1:	add    BYTE PTR [rcx+0x0],ah
   14000b2b4:	je     0x14000b2b6
   14000b2b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b2b7:	add    BYTE PTR [rdx+0x0],dh
   14000b2ba:	pop    rsp
   14000b2bb:	add    BYTE PTR [rbp+0x0],dl
   14000b2be:	push   rbx
   14000b2bf:	add    BYTE PTR [rdi+0x0],cl
   14000b2c2:	push   rbx
   14000b2c3:	add    BYTE PTR [rax+0x0],ch
   14000b2c6:	(bad)  
   14000b2c7:	add    BYTE PTR [rdx+0x0],dh
   14000b2ca:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b2cf:	add    BYTE PTR [rdx+0x0],dl
   14000b2d2:	add    BYTE PTR gs:[rdi+0x0],ah
   14000b2d6:	push   rax
   14000b2d7:	add    BYTE PTR [rcx+0x0],ah
   14000b2da:	je     0x14000b2dc
   14000b2dc:	push   0x49007300
   14000b2e1:	add    BYTE PTR [rsi+0x0],ch
   14000b2e4:	rex.W add BYTE PTR [rbx+0x0],cl
   14000b2e8:	rex.XB add BYTE PTR [r13+0x0],dl
   14000b2ec:	push   rsp
   14000b2ed:	add    BYTE PTR [rdi+0x0],ch
   14000b2f0:	add    BYTE PTR [rbp+0x0],r14b
   14000b2f4:	ins    DWORD PTR es:[rdi],dx
   14000b2f5:	add    BYTE PTR [rax+0x0],dh
	...
   14000b300:	push   rbx
   14000b301:	add    BYTE PTR [rdi+0x0],ch
   14000b304:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b309:	add    BYTE PTR [rcx+0x0],ah
   14000b30c:	jb     0x14000b30e
   14000b30e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b313:	add    BYTE PTR [rcx+0x0],ch
   14000b316:	movsxd eax,DWORD PTR [rax]
   14000b318:	jb     0x14000b31a
   14000b31a:	outs   dx,DWORD PTR ds:[rsi]
   14000b31b:	add    BYTE PTR [rbx+0x0],dh
   14000b31e:	outs   dx,DWORD PTR ds:[rsi]
   14000b31f:	add    BYTE PTR [rsi+0x0],ah
   14000b322:	je     0x14000b324
   14000b324:	pop    rsp
   14000b325:	add    BYTE PTR [rdi+0x0],dl
   14000b328:	imul   eax,DWORD PTR [rax],0x64006e
   14000b32e:	outs   dx,DWORD PTR ds:[rsi]
   14000b32f:	add    BYTE PTR [rdi+0x0],dh
   14000b332:	jae    0x14000b334
   14000b334:	push   rbp
   14000b335:	add    BYTE PTR [rax+0x0],dh
   14000b338:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b33c:	je     0x14000b33e
   14000b33e:	add    BYTE PTR gs:[rax+rax*1+0x4f],bl
   14000b343:	add    BYTE PTR [rdx+0x0],dh
   14000b346:	movsxd eax,DWORD PTR [rax]
   14000b348:	push   0x73006500
   14000b34d:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b351:	add    BYTE PTR [rcx+0x0],ah
   14000b354:	je     0x14000b356
   14000b356:	outs   dx,DWORD PTR ds:[rsi]
   14000b357:	add    BYTE PTR [rdx+0x0],dh
   14000b35a:	pop    rsp
   14000b35b:	add    BYTE PTR [rbp+0x0],dl
   14000b35e:	push   rbx
   14000b35f:	add    BYTE PTR [rdi+0x0],cl
   14000b362:	push   rbx
   14000b363:	add    BYTE PTR [rax+0x0],ch
   14000b366:	(bad)  
   14000b367:	add    BYTE PTR [rdx+0x0],dh
   14000b36a:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b36f:	add    BYTE PTR [rdx+0x0],dl
   14000b372:	add    BYTE PTR gs:[rdi+0x0],ah
   14000b376:	push   rax
   14000b377:	add    BYTE PTR [rcx+0x0],ah
   14000b37a:	je     0x14000b37c
   14000b37c:	push   0x49007300
   14000b381:	add    BYTE PTR [rsi+0x0],ch
   14000b384:	rex.W add BYTE PTR [rbx+0x0],cl
   14000b388:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14000b38c:	push   rsp
   14000b38d:	add    BYTE PTR [rdi+0x0],ch
   14000b390:	add    BYTE PTR [rbp+0x0],r14b
   14000b394:	ins    DWORD PTR es:[rdi],dx
   14000b395:	add    BYTE PTR [rax+0x0],dh
	...
   14000b3a0:	push   rbx
   14000b3a1:	add    BYTE PTR [rdi+0x0],ch
   14000b3a4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b3a9:	add    BYTE PTR [rcx+0x0],ah
   14000b3ac:	jb     0x14000b3ae
   14000b3ae:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b3b3:	add    BYTE PTR [rcx+0x0],ch
   14000b3b6:	movsxd eax,DWORD PTR [rax]
   14000b3b8:	jb     0x14000b3ba
   14000b3ba:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bb:	add    BYTE PTR [rbx+0x0],dh
   14000b3be:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bf:	add    BYTE PTR [rsi+0x0],ah
   14000b3c2:	je     0x14000b3c4
   14000b3c4:	pop    rsp
   14000b3c5:	add    BYTE PTR [rdi+0x0],dl
   14000b3c8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b3ce:	outs   dx,DWORD PTR ds:[rsi]
   14000b3cf:	add    BYTE PTR [rdi+0x0],dh
   14000b3d2:	jae    0x14000b3d4
   14000b3d4:	pop    rsp
   14000b3d5:	add    BYTE PTR [rbx+0x0],al
   14000b3d8:	jne    0x14000b3da
   14000b3da:	jb     0x14000b3dc
   14000b3dc:	jb     0x14000b3de
   14000b3de:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b3e2:	je     0x14000b3e4
   14000b3e4:	push   rsi
   14000b3e5:	add    BYTE PTR [rbp+0x0],ah
   14000b3e8:	jb     0x14000b3ea
   14000b3ea:	jae    0x14000b3ec
   14000b3ec:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b3f2:	pop    rsp
   14000b3f3:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b3f7:	add    BYTE PTR [rsi+0x0],dh
   14000b3fa:	imul   eax,DWORD PTR [rax],0x650063
   14000b400:	push   rbp
   14000b401:	add    BYTE PTR [rax+0x0],dh
   14000b404:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b408:	je     0x14000b40a
   14000b40a:	add    BYTE PTR gs:[rax+rax*1+0x41],bl
   14000b40f:	add    BYTE PTR [rdi+0x0],ah
   14000b412:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b416:	je     0x14000b418
   14000b418:	pop    rsp
   14000b419:	add    BYTE PTR [rdx+0x0],dl
   14000b41c:	add    BYTE PTR gs:[rax+0x0],dh
   14000b420:	outs   dx,DWORD PTR ds:[rsi]
   14000b421:	add    BYTE PTR [rdx+0x0],dh
   14000b424:	je     0x14000b426
   14000b426:	imul   eax,DWORD PTR [rax],0x67006e
   14000b42c:	add    BYTE PTR [rax],al
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	push   rbx
   14000b431:	add    BYTE PTR [rdi+0x0],ch
   14000b434:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b439:	add    BYTE PTR [rcx+0x0],ah
   14000b43c:	jb     0x14000b43e
   14000b43e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b443:	add    BYTE PTR [rcx+0x0],ch
   14000b446:	movsxd eax,DWORD PTR [rax]
   14000b448:	jb     0x14000b44a
   14000b44a:	outs   dx,DWORD PTR ds:[rsi]
   14000b44b:	add    BYTE PTR [rbx+0x0],dh
   14000b44e:	outs   dx,DWORD PTR ds:[rsi]
   14000b44f:	add    BYTE PTR [rsi+0x0],ah
   14000b452:	je     0x14000b454
   14000b454:	pop    rsp
   14000b455:	add    BYTE PTR [rdi+0x0],dl
   14000b458:	imul   eax,DWORD PTR [rax],0x64006e
   14000b45e:	outs   dx,DWORD PTR ds:[rsi]
   14000b45f:	add    BYTE PTR [rdi+0x0],dh
   14000b462:	jae    0x14000b464
   14000b464:	push   rbp
   14000b465:	add    BYTE PTR [rax+0x0],dh
   14000b468:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b46c:	je     0x14000b46e
   14000b46e:	add    BYTE PTR gs:[rax+rax*1+0x55],bl
   14000b473:	add    BYTE PTR [rax+0x0],bl
	...
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	push   rbx
   14000b481:	add    BYTE PTR [rdi+0x0],ch
   14000b484:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b489:	add    BYTE PTR [rcx+0x0],ah
   14000b48c:	jb     0x14000b48e
   14000b48e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b493:	add    BYTE PTR [rcx+0x0],ch
   14000b496:	movsxd eax,DWORD PTR [rax]
   14000b498:	jb     0x14000b49a
   14000b49a:	outs   dx,DWORD PTR ds:[rsi]
   14000b49b:	add    BYTE PTR [rbx+0x0],dh
   14000b49e:	outs   dx,DWORD PTR ds:[rsi]
   14000b49f:	add    BYTE PTR [rsi+0x0],ah
   14000b4a2:	je     0x14000b4a4
   14000b4a4:	pop    rsp
   14000b4a5:	add    BYTE PTR [rdi+0x0],dl
   14000b4a8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b4ae:	outs   dx,DWORD PTR ds:[rsi]
   14000b4af:	add    BYTE PTR [rdi+0x0],dh
   14000b4b2:	jae    0x14000b4b4
   14000b4b4:	push   rbp
   14000b4b5:	add    BYTE PTR [rax+0x0],dh
   14000b4b8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b4bc:	je     0x14000b4be
   14000b4be:	add    BYTE PTR gs:[rax+rax*1+0x55],bl
   14000b4c3:	add    BYTE PTR [rax+0x0],bl
   14000b4c6:	pop    rsp
   14000b4c7:	add    BYTE PTR [rbx+0x0],dl
   14000b4ca:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000b4cf:	add    BYTE PTR [rcx+0x0],ch
   14000b4d2:	outs   dx,BYTE PTR ds:[rsi]
   14000b4d3:	add    BYTE PTR [rdi+0x0],ah
   14000b4d6:	jae    0x14000b4d8
	...
   14000b4e0:	push   rbx
   14000b4e1:	add    BYTE PTR [rdi+0x0],ch
   14000b4e4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b4e9:	add    BYTE PTR [rcx+0x0],ah
   14000b4ec:	jb     0x14000b4ee
   14000b4ee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b4f3:	add    BYTE PTR [rcx+0x0],ch
   14000b4f6:	movsxd eax,DWORD PTR [rax]
   14000b4f8:	jb     0x14000b4fa
   14000b4fa:	outs   dx,DWORD PTR ds:[rsi]
   14000b4fb:	add    BYTE PTR [rbx+0x0],dh
   14000b4fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ff:	add    BYTE PTR [rsi+0x0],ah
   14000b502:	je     0x14000b504
   14000b504:	pop    rsp
   14000b505:	add    BYTE PTR [rdi+0x0],dl
   14000b508:	imul   eax,DWORD PTR [rax],0x64006e
   14000b50e:	outs   dx,DWORD PTR ds:[rsi]
   14000b50f:	add    BYTE PTR [rdi+0x0],dh
   14000b512:	jae    0x14000b514
   14000b514:	pop    rsp
   14000b515:	add    BYTE PTR [rbx+0x0],al
   14000b518:	jne    0x14000b51a
   14000b51a:	jb     0x14000b51c
   14000b51c:	jb     0x14000b51e
   14000b51e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b522:	je     0x14000b524
   14000b524:	push   rsi
   14000b525:	add    BYTE PTR [rbp+0x0],ah
   14000b528:	jb     0x14000b52a
   14000b52a:	jae    0x14000b52c
   14000b52c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b532:	pop    rsp
   14000b533:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b537:	add    BYTE PTR [rsi+0x0],dh
   14000b53a:	imul   eax,DWORD PTR [rax],0x650063
   14000b540:	push   rbp
   14000b541:	add    BYTE PTR [rax+0x0],dh
   14000b544:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b548:	je     0x14000b54a
   14000b54a:	add    BYTE PTR gs:[rax+rax*1+0x44],bl
   14000b54f:	add    BYTE PTR [rbp+0x0],dl
   14000b552:	push   rbx
   14000b553:	add    BYTE PTR [rax+0x0],ch
   14000b556:	(bad)  
   14000b557:	add    BYTE PTR [rdx+0x0],dh
   14000b55a:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b55f:	add    BYTE PTR [rbx+0x0],al
   14000b562:	push   rbx
   14000b563:	add    BYTE PTR [rax+0x0],dl
   14000b566:	pop    rsp
   14000b567:	add    BYTE PTR [rbp+0x0],cl
   14000b56a:	outs   dx,DWORD PTR ds:[rsi]
   14000b56b:	add    BYTE PTR [rdx+0x0],dl
   14000b56e:	add    BYTE PTR gs:[rax+0x0],dh
   14000b572:	outs   dx,DWORD PTR ds:[rsi]
   14000b573:	add    BYTE PTR [rdx+0x0],dh
   14000b576:	je     0x14000b578
	...
   14000b580:	push   rbx
   14000b581:	add    BYTE PTR [rdi+0x0],ch
   14000b584:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b589:	add    BYTE PTR [rcx+0x0],ah
   14000b58c:	jb     0x14000b58e
   14000b58e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b593:	add    BYTE PTR [rcx+0x0],ch
   14000b596:	movsxd eax,DWORD PTR [rax]
   14000b598:	jb     0x14000b59a
   14000b59a:	outs   dx,DWORD PTR ds:[rsi]
   14000b59b:	add    BYTE PTR [rbx+0x0],dh
   14000b59e:	outs   dx,DWORD PTR ds:[rsi]
   14000b59f:	add    BYTE PTR [rsi+0x0],ah
   14000b5a2:	je     0x14000b5a4
   14000b5a4:	pop    rsp
   14000b5a5:	add    BYTE PTR [rdi+0x0],dl
   14000b5a8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b5ae:	outs   dx,DWORD PTR ds:[rsi]
   14000b5af:	add    BYTE PTR [rdi+0x0],dh
   14000b5b2:	jae    0x14000b5b4
   14000b5b4:	pop    rsp
   14000b5b5:	add    BYTE PTR [rbx+0x0],al
   14000b5b8:	jne    0x14000b5ba
   14000b5ba:	jb     0x14000b5bc
   14000b5bc:	jb     0x14000b5be
   14000b5be:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b5c2:	je     0x14000b5c4
   14000b5c4:	push   rsi
   14000b5c5:	add    BYTE PTR [rbp+0x0],ah
   14000b5c8:	jb     0x14000b5ca
   14000b5ca:	jae    0x14000b5cc
   14000b5cc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b5d2:	pop    rsp
   14000b5d3:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b5d7:	add    BYTE PTR [rsi+0x0],dh
   14000b5da:	imul   eax,DWORD PTR [rax],0x650063
   14000b5e0:	push   rbp
   14000b5e1:	add    BYTE PTR [rax+0x0],dh
   14000b5e4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b5e8:	je     0x14000b5ea
   14000b5ea:	add    BYTE PTR gs:[rax+rax*1+0x44],bl
   14000b5ef:	add    BYTE PTR [rbp+0x0],dl
   14000b5f2:	push   rbx
   14000b5f3:	add    BYTE PTR [rax+0x0],ch
   14000b5f6:	(bad)  
   14000b5f7:	add    BYTE PTR [rdx+0x0],dh
   14000b5fa:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b5ff:	add    BYTE PTR [rbx+0x0],al
   14000b602:	push   rbx
   14000b603:	add    BYTE PTR [rax+0x0],dl
   14000b606:	pop    rsp
   14000b607:	add    BYTE PTR [rbp+0x0],cl
   14000b60a:	outs   dx,DWORD PTR ds:[rsi]
   14000b60b:	add    BYTE PTR [rdx+0x0],dl
   14000b60e:	add    BYTE PTR gs:[rax+0x0],dh
   14000b612:	outs   dx,DWORD PTR ds:[rsi]
   14000b613:	add    BYTE PTR [rdx+0x0],dh
   14000b616:	je     0x14000b618
   14000b618:	pop    rsp
   14000b619:	add    BYTE PTR [rax+0x0],dl
   14000b61c:	jb     0x14000b61e
   14000b61e:	add    BYTE PTR gs:[rbp+0x0],dl
   14000b622:	jo     0x14000b624
   14000b624:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b628:	je     0x14000b62a
   14000b62a:	add    BYTE PTR gs:[rsi+0x0],dl
   14000b62e:	(bad)  
   14000b62f:	add    BYTE PTR [rax+rax*1+0x75],ch
   14000b633:	add    BYTE PTR [rbp+0x0],ah
	...
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	push   rbx
   14000b641:	add    BYTE PTR [rdi+0x0],ch
   14000b644:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b649:	add    BYTE PTR [rcx+0x0],ah
   14000b64c:	jb     0x14000b64e
   14000b64e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b653:	add    BYTE PTR [rcx+0x0],ch
   14000b656:	movsxd eax,DWORD PTR [rax]
   14000b658:	jb     0x14000b65a
   14000b65a:	outs   dx,DWORD PTR ds:[rsi]
   14000b65b:	add    BYTE PTR [rbx+0x0],dh
   14000b65e:	outs   dx,DWORD PTR ds:[rsi]
   14000b65f:	add    BYTE PTR [rsi+0x0],ah
   14000b662:	je     0x14000b664
   14000b664:	pop    rsp
   14000b665:	add    BYTE PTR [rdi+0x0],dl
   14000b668:	imul   eax,DWORD PTR [rax],0x64006e
   14000b66e:	outs   dx,DWORD PTR ds:[rsi]
   14000b66f:	add    BYTE PTR [rdi+0x0],dh
   14000b672:	jae    0x14000b674
   14000b674:	pop    rsp
   14000b675:	add    BYTE PTR [rbx+0x0],al
   14000b678:	jne    0x14000b67a
   14000b67a:	jb     0x14000b67c
   14000b67c:	jb     0x14000b67e
   14000b67e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b682:	je     0x14000b684
   14000b684:	push   rsi
   14000b685:	add    BYTE PTR [rbp+0x0],ah
   14000b688:	jb     0x14000b68a
   14000b68a:	jae    0x14000b68c
   14000b68c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b692:	pop    rsp
   14000b693:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b697:	add    BYTE PTR [rsi+0x0],dh
   14000b69a:	imul   eax,DWORD PTR [rax],0x650063
   14000b6a0:	push   rbp
   14000b6a1:	add    BYTE PTR [rax+0x0],dh
   14000b6a4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b6a8:	je     0x14000b6aa
   14000b6aa:	add    BYTE PTR gs:[rax+rax*1+0x44],bl
   14000b6af:	add    BYTE PTR [rbp+0x0],dl
   14000b6b2:	push   rbx
   14000b6b3:	add    BYTE PTR [rax+0x0],ch
   14000b6b6:	(bad)  
   14000b6b7:	add    BYTE PTR [rdx+0x0],dh
   14000b6ba:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14000b6bf:	add    BYTE PTR [rbx+0x0],al
   14000b6c2:	push   rbx
   14000b6c3:	add    BYTE PTR [rax+0x0],dl
   14000b6c6:	pop    rsp
   14000b6c7:	add    BYTE PTR [rcx+0x0],cl
   14000b6ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b6cb:	add    BYTE PTR [rsi+0x0],ah
   14000b6ce:	outs   dx,DWORD PTR ds:[rsi]
   14000b6cf:	add    BYTE PTR [rdx+0x0],dh
   14000b6d2:	ins    DWORD PTR es:[rdi],dx
   14000b6d3:	add    BYTE PTR [rcx+0x0],ah
   14000b6d6:	je     0x14000b6d8
   14000b6d8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	push   rbx
   14000b6e1:	add    BYTE PTR [rdi+0x0],ch
   14000b6e4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b6e9:	add    BYTE PTR [rcx+0x0],ah
   14000b6ec:	jb     0x14000b6ee
   14000b6ee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b6f3:	add    BYTE PTR [rcx+0x0],ch
   14000b6f6:	movsxd eax,DWORD PTR [rax]
   14000b6f8:	jb     0x14000b6fa
   14000b6fa:	outs   dx,DWORD PTR ds:[rsi]
   14000b6fb:	add    BYTE PTR [rbx+0x0],dh
   14000b6fe:	outs   dx,DWORD PTR ds:[rsi]
   14000b6ff:	add    BYTE PTR [rsi+0x0],ah
   14000b702:	je     0x14000b704
   14000b704:	pop    rsp
   14000b705:	add    BYTE PTR [rdi+0x0],dl
   14000b708:	imul   eax,DWORD PTR [rax],0x64006e
   14000b70e:	outs   dx,DWORD PTR ds:[rsi]
   14000b70f:	add    BYTE PTR [rdi+0x0],dh
   14000b712:	jae    0x14000b714
   14000b714:	push   rbp
   14000b715:	add    BYTE PTR [rax+0x0],dh
   14000b718:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b71c:	je     0x14000b71e
   14000b71e:	add    BYTE PTR gs:[rax+rax*1+0x55],bl
   14000b723:	add    BYTE PTR [rax+0x0],bl
   14000b726:	pop    rsp
   14000b727:	add    BYTE PTR [rbx+0x0],dl
   14000b72a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000b72f:	add    BYTE PTR [rcx+0x0],ch
   14000b732:	outs   dx,BYTE PTR ds:[rsi]
   14000b733:	add    BYTE PTR [rdi+0x0],ah
   14000b736:	jae    0x14000b738
   14000b738:	pop    rsp
   14000b739:	add    BYTE PTR [rsi+0x0],al
   14000b73c:	outs   dx,DWORD PTR ds:[rsi]
   14000b73d:	add    BYTE PTR [rdx+0x0],dh
   14000b740:	movsxd eax,DWORD PTR [rax]
   14000b742:	add    BYTE PTR gs:[rcx+0x0],al
   14000b746:	jne    0x14000b748
   14000b748:	je     0x14000b74a
   14000b74a:	outs   dx,DWORD PTR ds:[rsi]
   14000b74b:	add    BYTE PTR [rbp+0x0],ch
   14000b74e:	(bad)  
   14000b74f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b753:	add    BYTE PTR [rbx+0x0],ah
	...
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	loopne 0x14000b70b
   14000b762:	add    BYTE PTR [rax+0x1],al
   14000b765:	add    BYTE PTR [rax],al
   14000b767:	add    BYTE PTR [rax-0x56],dl
   14000b76a:	add    BYTE PTR [rax+0x1],al
   14000b76d:	add    BYTE PTR [rax],al
   14000b76f:	add    BYTE PTR [rax+0x14000aa],ah
   14000b775:	add    BYTE PTR [rax],al
   14000b777:	add    BYTE PTR [rax],dh
   14000b779:	stos   DWORD PTR es:[rdi],eax
   14000b77a:	add    BYTE PTR [rax+0x1],al
   14000b77d:	add    BYTE PTR [rax],al
   14000b77f:	add    al,ah
   14000b781:	stos   DWORD PTR es:[rdi],eax
   14000b782:	add    BYTE PTR [rax+0x1],al
   14000b785:	add    BYTE PTR [rax],al
   14000b787:	add    BYTE PTR [rax+0x14000ac],ah
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	add    BYTE PTR [rax-0x53],al
   14000b792:	add    BYTE PTR [rax+0x1],al
   14000b795:	add    BYTE PTR [rax],al
   14000b797:	add    al,al
   14000b799:	lods   eax,DWORD PTR ds:[rsi]
   14000b79a:	add    BYTE PTR [rax+0x1],al
   14000b79d:	add    BYTE PTR [rax],al
   14000b79f:	add    BYTE PTR [rax-0x52],al
   14000b7a2:	add    BYTE PTR [rax+0x1],al
   14000b7a5:	add    BYTE PTR [rax],al
   14000b7a7:	add    al,dl
   14000b7a9:	scas   al,BYTE PTR es:[rdi]
   14000b7aa:	add    BYTE PTR [rax+0x1],al
   14000b7ad:	add    BYTE PTR [rax],al
   14000b7af:	add    BYTE PTR [rax+0x14000af],al
   14000b7b5:	add    BYTE PTR [rax],al
   14000b7b7:	add    BYTE PTR [rax],dl
   14000b7b9:	mov    al,0x0
   14000b7bb:	rex add DWORD PTR [rax],eax
   14000b7be:	add    BYTE PTR [rax],al
   14000b7c0:	movabs al,ds:0x20000000014000b0
   14000b7c9:	mov    cl,0x0
   14000b7cb:	rex add DWORD PTR [rax],eax
   14000b7ce:	add    BYTE PTR [rax],al
   14000b7d0:	shl    BYTE PTR [rcx+0x14000],0x0
   14000b7d7:	add    BYTE PTR [rax-0x4e],ah
   14000b7da:	add    BYTE PTR [rax+0x1],al
   14000b7dd:	add    BYTE PTR [rax],al
   14000b7df:	add    BYTE PTR [rax],al
   14000b7e1:	mov    bl,0x0
   14000b7e3:	rex add DWORD PTR [rax],eax
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	movabs al,ds:0x30000000014000b3
   14000b7f1:	mov    ah,0x0
   14000b7f3:	rex add DWORD PTR [rax],eax
   14000b7f6:	add    BYTE PTR [rax],al
   14000b7f8:	xor    BYTE PTR [rax+rax*1+0x140],0x0
   14000b800:	loopne 0x14000b7b6
   14000b802:	add    BYTE PTR [rax+0x1],al
   14000b805:	add    BYTE PTR [rax],al
   14000b807:	add    BYTE PTR [rax+0x14000b5],al
   14000b80d:	add    BYTE PTR [rax],al
   14000b80f:	add    BYTE PTR [rax-0x4a],al
   14000b812:	add    BYTE PTR [rax+0x1],al
   14000b815:	add    BYTE PTR [rax],al
   14000b817:	add    al,ah
   14000b819:	mov    dh,0x0
   14000b81b:	rex add DWORD PTR [rax],eax
   14000b81e:	add    BYTE PTR [rax],al
   14000b820:	push   rsp
   14000b821:	add    BYTE PTR [rbp+0x0],ah
   14000b824:	ins    DWORD PTR es:[rdi],dx
   14000b825:	add    BYTE PTR [rax+0x0],dh
   14000b828:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000b82c:	add    BYTE PTR [ebx+0x0],dh
	...
   14000b838:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b83c:	ins    BYTE PTR es:[rdi],dx
   14000b83d:	add    BYTE PTR [rbp+0x0],ah
   14000b840:	jae    0x14000b842
   14000b842:	push   rsp
   14000b843:	add    BYTE PTR [rdi+0x0],ch
   14000b846:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b84a:	ins    BYTE PTR es:[rdi],dx
   14000b84b:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b84f:	add    BYTE PTR [rbx+0x0],ah
   14000b852:	je     0x14000b854
   14000b854:	add    BYTE PTR [rax],al
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	push   rsp
   14000b859:	add    BYTE PTR [rdx+0x0],dh
   14000b85c:	outs   dx,DWORD PTR ds:[rsi]
   14000b85d:	add    BYTE PTR [rbp+0x0],dh
   14000b860:	(bad)  
   14000b861:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b865:	add    BYTE PTR [rbx+0x0],dh
   14000b868:	push   0x6f006f00
   14000b86d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b871:	add    BYTE PTR [rsi+0x0],ch
   14000b874:	add    BYTE PTR [eax],al
   14000b877:	add    BYTE PTR [rbp+0x0],dl
   14000b87a:	jo     0x14000b87c
   14000b87c:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b880:	je     0x14000b882
   14000b882:	add    BYTE PTR gs:[rbx+0x0],dl
   14000b886:	je     0x14000b888
   14000b888:	outs   dx,DWORD PTR ds:[rsi]
   14000b889:	add    BYTE PTR [rdx+0x0],dh
   14000b88c:	add    BYTE PTR gs:[rax],al
   14000b88f:	add    BYTE PTR [rax+rax*1+0x61],al
   14000b893:	add    BYTE PTR [rax+rax*1+0x61],dh
	...
   14000b89f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000b8a3:	add    BYTE PTR [rdi+0x0],ah
   14000b8a6:	jae    0x14000b8a8
	...
   14000b8b0:	push   rbp
   14000b8b1:	add    BYTE PTR [rbx+0x0],dl
   14000b8b4:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   14000b8b8:	push   0x72006100
   14000b8bd:	add    BYTE PTR [rbp+0x0],ah
   14000b8c0:	add    BYTE PTR fs:[rax],al
	...
   14000b8cf:	add    BYTE PTR [rax],bl
   14000b8d1:	movabs ds:0xa218000000014000,al
   14000b8da:	add    BYTE PTR [rax+0x1],al
   14000b8dd:	add    BYTE PTR [rax],al
   14000b8df:	add    BYTE PTR [rax],ah
   14000b8e1:	mov    eax,0x14000
   14000b8e6:	add    BYTE PTR [rax],al
   14000b8e8:	cmp    BYTE PTR [rax+0x14000],bh
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	pop    rax
   14000b8f1:	mov    eax,0x14000
   14000b8f6:	add    BYTE PTR [rax],al
   14000b8f8:	js     0x14000b8b2
   14000b8fa:	add    BYTE PTR [rax+0x1],al
   14000b8fd:	add    BYTE PTR [rax],al
   14000b8ff:	add    BYTE PTR [rax],bl
   14000b901:	movabs ds:0xb890000000014000,al
   14000b90a:	add    BYTE PTR [rax+0x1],al
   14000b90d:	add    BYTE PTR [rax],al
   14000b90f:	add    BYTE PTR [rax+0x14000b8],ah
	...
   14000b925:	add    BYTE PTR [rax],al
   14000b927:	add    BYTE PTR [rdx-0x3e9d54a3],al
   14000b92d:	std    
   14000b92e:	ret    
   14000b92f:	rex.WRB test rax,0x1d0d07dd
   14000b935:	rex.WB pop r13
   14000b937:	xchg   edi,eax
   14000b938:	and    al,BYTE PTR [rip+0x41993]        # 0x14004d2d1
   14000b93e:	add    BYTE PTR [rax],al
   14000b940:	test   al,0xc3
   14000b942:	add    BYTE PTR [rax],al
   14000b944:	add    al,BYTE PTR [rax]
   14000b946:	add    BYTE PTR [rax],al
   14000b948:	enter  0xc3,0x0
   14000b94c:	or     BYTE PTR [rax],al
   14000b94e:	add    BYTE PTR [rax],al
   14000b950:	and    ah,al
   14000b952:	add    BYTE PTR [rax],al
   14000b954:	and    BYTE PTR [rax],al
   14000b956:	add    BYTE PTR [rax],al
   14000b958:	add    BYTE PTR [rax],al
   14000b95a:	add    BYTE PTR [rax],al
   14000b95c:	add    DWORD PTR [rax],eax
   14000b95e:	add    BYTE PTR [rax],al
   14000b960:	and    al,BYTE PTR [rip+0x31993]        # 0x14003d2f9
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	push   rax
   14000b969:	(bad)
	...
   14000b974:	(bad)  
   14000b975:	add    BYTE PTR [rax],al
   14000b977:	add    BYTE PTR [rax-0x3b],ch
   14000b97a:	add    BYTE PTR [rax],al
   14000b97c:	rol    BYTE PTR [rax],1
   14000b97e:	add    BYTE PTR [rax],al
   14000b980:	add    BYTE PTR [rax],al
   14000b982:	add    BYTE PTR [rax],al
   14000b984:	add    DWORD PTR [rax],eax
   14000b986:	add    BYTE PTR [rax],al
   14000b988:	and    al,BYTE PTR [rip+0x31993]        # 0x14003d321
   14000b98e:	add    BYTE PTR [rax],al
   14000b990:	mov    ah,0xc8
	...
   14000b99a:	add    BYTE PTR [rax],al
   14000b99c:	(bad)  
   14000b99d:	add    BYTE PTR [rax],al
   14000b99f:	add    al,dl
   14000b9a1:	enter  0x0,0x30
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rax],al
   14000b9a9:	add    BYTE PTR [rax],al
   14000b9ab:	add    BYTE PTR [rcx],al
   14000b9ad:	add    BYTE PTR [rax],al
   14000b9af:	add    BYTE PTR [rdx],ah
   14000b9b1:	add    eax,0x61993
   14000b9b6:	add    BYTE PTR [rax],al
   14000b9b8:	call   0x14000ba84
   14000b9bd:	add    BYTE PTR [rax],al
   14000b9bf:	add    BYTE PTR [rax],al
   14000b9c1:	add    BYTE PTR [rax],al
   14000b9c3:	add    BYTE PTR [rip+0x20000000],cl        # 0x16000b9c9
   14000b9c9:	enter  0x0,0x68
   14000b9cd:	add    BYTE PTR [rax],al
   14000b9cf:	add    BYTE PTR [rax],al
   14000b9d1:	add    BYTE PTR [rax],al
   14000b9d3:	add    BYTE PTR [rcx],al
   14000b9d5:	add    BYTE PTR [rax],al
   14000b9d7:	add    BYTE PTR [rdx],ah
   14000b9d9:	add    eax,0x21993
   14000b9de:	add    BYTE PTR [rax],al
   14000b9e0:	adc    al,0xc7
	...
   14000b9ea:	add    BYTE PTR [rax],al
   14000b9ec:	add    eax,0x78000000
   14000b9f1:	mov    DWORD PTR [rax],0x3000
   14000b9f7:	add    BYTE PTR [rax],al
   14000b9f9:	add    BYTE PTR [rax],al
   14000b9fb:	add    BYTE PTR [rcx],al
   14000b9fd:	add    BYTE PTR [rax],al
   14000b9ff:	add    BYTE PTR [rdx],ah
   14000ba01:	add    eax,0x21993
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	adc    al,0xc7
	...
   14000ba12:	add    BYTE PTR [rax],al
   14000ba14:	add    eax,0x28000000
   14000ba19:	mov    DWORD PTR [rax],0x3000
   14000ba1f:	add    BYTE PTR [rax],al
   14000ba21:	add    BYTE PTR [rax],al
   14000ba23:	add    BYTE PTR [rcx],al
   14000ba25:	add    BYTE PTR [rax],al
   14000ba27:	add    BYTE PTR [rdx],ah
   14000ba29:	add    eax,0x21993
   14000ba2e:	add    BYTE PTR [rax],al
   14000ba30:	mov    eax,0xc6
   14000ba35:	add    BYTE PTR [rax],al
   14000ba37:	add    BYTE PTR [rax],al
   14000ba39:	add    BYTE PTR [rax],al
   14000ba3b:	add    BYTE PTR [rip+0xffffffffc8000000],al        # 0x10800ba41
   14000ba41:	mov    BYTE PTR [rax],0x0
   14000ba44:	xor    BYTE PTR [rax],al
   14000ba46:	add    BYTE PTR [rax],al
   14000ba48:	add    BYTE PTR [rax],al
   14000ba4a:	add    BYTE PTR [rax],al
   14000ba4c:	add    DWORD PTR [rax],eax
   14000ba4e:	add    BYTE PTR [rax],al
   14000ba50:	and    al,BYTE PTR [rip+0x21993]        # 0x14002d3e9
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	pop    rsp
   14000ba59:	mov    BYTE PTR [rax],0x0
	...
   14000ba64:	add    eax,0x70000000
   14000ba69:	mov    BYTE PTR [rax],0x0
   14000ba6c:	cmp    BYTE PTR [rax],al
   14000ba6e:	add    BYTE PTR [rax],al
   14000ba70:	add    BYTE PTR [rax],al
   14000ba72:	add    BYTE PTR [rax],al
   14000ba74:	add    DWORD PTR [rax],eax
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	and    al,BYTE PTR [rip+0x21993]        # 0x14002d411
   14000ba7e:	add    BYTE PTR [rax],al
   14000ba80:	clc    
   14000ba81:	(bad)
	...
   14000ba8c:	add    al,0x0
   14000ba8e:	add    BYTE PTR [rax],al
   14000ba90:	or     dh,al
   14000ba92:	add    BYTE PTR [rax],al
   14000ba94:	cmp    BYTE PTR [rax],al
   14000ba96:	add    BYTE PTR [rax],al
   14000ba98:	add    BYTE PTR [rax],al
   14000ba9a:	add    BYTE PTR [rax],al
   14000ba9c:	add    DWORD PTR [rax],eax
   14000ba9e:	add    BYTE PTR [rax],al
   14000baa0:	add    BYTE PTR [rax],al
   14000baa2:	add    BYTE PTR [rax],al
   14000baa4:	jge    0x14000bab3
   14000baa6:	addps  xmm0,XMMWORD PTR [rax]
   14000baa9:	add    BYTE PTR [rax],al
   14000baab:	add    BYTE PTR [rdx],al
   14000baad:	add    BYTE PTR [rax],al
   14000baaf:	add    BYTE PTR [rsi],ch
   14000bab1:	add    BYTE PTR [rax],al
   14000bab3:	add    BYTE PTR [rdi+rdi*4-0x5e6c0000],dl
   14000baba:	add    BYTE PTR [rax],al
   14000babc:	add    BYTE PTR [rax],al
   14000babe:	add    BYTE PTR [rax],al
   14000bac0:	jge    0x14000bacf
   14000bac2:	addps  xmm0,XMMWORD PTR [rax]
   14000bac5:	add    BYTE PTR [rax],al
   14000bac7:	add    BYTE PTR [rip+0x38000000],cl        # 0x17800bacd
   14000bacd:	add    eax,DWORD PTR [rax]
   14000bacf:	add    al,bl
   14000bad1:	mov    edi,0xa1d80000
	...
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	movabs al,ds:0x0
	...
   14000bb55:	add    BYTE PTR [rax],al
   14000bb57:	add    BYTE PTR [rax],cl
   14000bb59:	loopne 0x14000bb5b
   14000bb5b:	rex add DWORD PTR [rax],eax
	...
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	adc    BYTE PTR [rax+rax*1+0x140],al
   14000bb77:	add    BYTE PTR [rax],bl
   14000bb79:	test   BYTE PTR [rax],al
   14000bb7b:	rex add DWORD PTR [rax],eax
   14000bb7e:	add    BYTE PTR [rax],al
   14000bb80:	add    BYTE PTR [rax+rax*1+0x140],0x0
   14000bb88:	add    BYTE PTR [rax],al
   14000bb8b:	add    BYTE PTR [rax],al
   14000bb8d:	add    BYTE PTR [rax],al
   14000bb8f:	add    BYTE PTR [rax],al
   14000bb91:	xor    eax,0x0
	...
   14000bb9e:	add    BYTE PTR [rax],al
   14000bba0:	rex.RB push r12
   14000bba2:	push   rdi
   14000bba3:	xor    BYTE PTR [rax],dl
   14000bba5:	add    BYTE PTR [rax],al
   14000bba7:	add    DWORD PTR [rsi+0x2b88040e],eax
   14000bbad:	add    eax,0xb03bb8a
   14000bbb2:	add    eax,0x0
   14000bbb7:	add    BYTE PTR [rax],al
   14000bbb9:	and    BYTE PTR [rax],al
   14000bbbb:	add    BYTE PTR [rax+rax*1],ah
   14000bbbe:	add    BYTE PTR [rsi+0x6f],cl
   14000bbc1:	je     0x14000bc2c
   14000bbc3:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000bbc9:	outs   dx,DWORD PTR ds:[rsi]
   14000bbca:	outs   dx,BYTE PTR ds:[rsi]
   14000bbcb:	push   rbp
   14000bbcc:	js     0x14000bc1a
   14000bbce:	(bad)  
   14000bbcf:	jne    0x14000bc3f
   14000bbd1:	movsxd ebp,DWORD PTR [rax+0x65]
   14000bbd4:	add    BYTE PTR fs:[rcx+0x72],al
   14000bbd8:	addr32 jne 0x14000bc48
   14000bbdb:	outs   dx,BYTE PTR gs:[rsi]
   14000bbdd:	je     0x14000bbdf
   14000bbdf:	add    DWORD PTR [rbx],eax
   14000bbe1:	or     eax,DWORD PTR [rdx]
	...
   14000bbeb:	add    BYTE PTR [rbx],ch
   14000bbed:	add    BYTE PTR [rax],al
   14000bbef:	rex.RB jb 0x14000bc64
   14000bbf2:	outs   dx,DWORD PTR ds:[rsi]
   14000bbf3:	jb     0x14000bc15
   14000bbf5:	rex.WRXB jb 0x14000bc61
   14000bbf8:	imul   ebp,DWORD PTR [esi+0x61],0x66006574
   14000bc00:	jne    0x14000bc70
   14000bc02:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000bc06:	outs   dx,BYTE PTR ds:[rsi]
   14000bc07:	rex.WRX (bad) 
   14000bc09:	ins    DWORD PTR es:[rdi],dx
   14000bc0a:	add    BYTE PTR gs:[rdx],al
   14000bc0d:	ins    BYTE PTR es:[rdi],dx
   14000bc0e:	imul   ebp,DWORD PTR [rsi+0x65],0x72680700
   14000bc15:	add    BYTE PTR [rdi],al
   14000bc17:	add    ecx,DWORD PTR [rbx]
   14000bc19:	add    al,0x0
	...
   14000bc23:	(bad)  
   14000bc24:	add    BYTE PTR [rax],al
   14000bc26:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bc28:	outs   dx,WORD PTR ds:[rsi]
   14000bc2a:	and    BYTE PTR [rbp+0x65],cl
   14000bc2d:	jae    0x14000bca2
   14000bc2f:	(bad)  
   14000bc30:	add    BYTE PTR gs:[esi+0x75],ah
   14000bc35:	outs   dx,BYTE PTR ds:[rsi]
   14000bc36:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000bc3a:	outs   dx,BYTE PTR ds:[rsi]
   14000bc3b:	rex.WRX (bad) 
   14000bc3d:	ins    DWORD PTR es:[rdi],dx
   14000bc3e:	add    BYTE PTR gs:[rdx],al
   14000bc41:	ins    DWORD PTR es:[rdi],dx
   14000bc42:	gs jae 0x14000bcb8
   14000bc45:	(bad)  
   14000bc46:	add    BYTE PTR gs:[edx],al
   14000bc4a:	add    ecx,DWORD PTR [rbx]
   14000bc4c:	add    eax,0x0
   14000bc51:	add    BYTE PTR [rax],al
   14000bc53:	and    BYTE PTR [rax],al
   14000bc55:	add    bh,dh
   14000bc57:	add    BYTE PTR [rax],al
   14000bc59:	rex.RX (bad) 
   14000bc5b:	ins    BYTE PTR es:[rdi],dx
   14000bc5c:	ins    BYTE PTR es:[rdi],dx
   14000bc5d:	(bad)  
   14000bc5f:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000bc62:	jb     0x14000bcd6
   14000bc64:	outs   dx,DWORD PTR ds:[rsi]
   14000bc65:	jb     0x14000bc67
   14000bc67:	ja     0x14000bcd2
   14000bc69:	ins    BYTE PTR es:[rdi],dx
   14000bc6a:	push   rdx
   14000bc6b:	gs jae 0x14000bce3
   14000bc6e:	ins    BYTE PTR es:[rdi],dx
   14000bc6f:	je     0x14000bc71
   14000bc71:	cwde   
   14000bc72:	(bad)  
   14000bc73:	push   0x75736572
   14000bc78:	ins    BYTE PTR es:[rdi],dx
   14000bc79:	je     0x14000bc7b
   14000bc7b:	or     BYTE PTR [rsi+0x69],ah
   14000bc7e:	ins    BYTE PTR es:[rdi],dx
   14000bc7f:	gs rex.WRX (bad) 
   14000bc82:	ins    DWORD PTR es:[rdi],dx
   14000bc83:	add    BYTE PTR gs:[rdx],al
   14000bc86:	ins    BYTE PTR es:[rdi],dx
   14000bc87:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000bc8e:	gs jb  0x14000bc91
   14000bc91:	or     BYTE PTR [rbp+0x6f],ch
   14000bc94:	fs jne 0x14000bd03
   14000bc97:	add    BYTE PTR gs:[rdx],al
   14000bc9a:	data16 (bad) 
   14000bc9c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000bca4:	add    BYTE PTR gs:[rax],cl
   14000bca7:	ins    DWORD PTR es:[rdi],dx
   14000bca8:	gs jae 0x14000bd1e
   14000bcab:	(bad)  
   14000bcac:	add    BYTE PTR gs:[ecx],al
   14000bcb0:	je     0x14000bd1a
   14000bcb2:	jb     0x14000bd19
   14000bcb4:	(bad)  
   14000bcb5:	fs rex.WB
   14000bcb7:	add    BYTE PTR fs:[rax],cl
   14000bcba:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bcbd:	ins    BYTE PTR es:[rdi],dx
   14000bcbe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bcc0:	outs   dx,BYTE PTR ds:[rsi]
   14000bcc1:	je     0x14000bd28
   14000bcc3:	js     0x14000bd39
   14000bcc5:	add    BYTE PTR [rdx],al
   14000bcc7:	outs   dx,DWORD PTR ds:[rsi]
   14000bcc8:	jb     0x14000bd33
   14000bcca:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000bcd2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bcd4:	outs   dx,BYTE PTR ds:[rsi]
   14000bcd5:	je     0x14000bd3c
   14000bcd7:	js     0x14000bd4d
   14000bcd9:	rex.WB
   14000bcda:	add    BYTE PTR fs:[rax],cl
   14000bcdd:	outs   dx,DWORD PTR ds:[rsi]
   14000bcde:	jb     0x14000bd49
   14000bce0:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000bce8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bcea:	outs   dx,BYTE PTR ds:[rsi]
   14000bceb:	je     0x14000bd52
   14000bced:	js     0x14000bd63
   14000bcef:	rex.WRX (bad) 
   14000bcf1:	ins    DWORD PTR es:[rdi],dx
   14000bcf2:	add    BYTE PTR gs:[rdx],al
   14000bcf5:	outs   dx,DWORD PTR ds:[rsi]
   14000bcf6:	jb     0x14000bd61
   14000bcf8:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000bd00:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bd02:	outs   dx,BYTE PTR ds:[rsi]
   14000bd03:	je     0x14000bd6a
   14000bd05:	js     0x14000bd7b
   14000bd07:	rex.WRB
   14000bd08:	gs jae 0x14000bd7e
   14000bd0b:	(bad)  
   14000bd0c:	add    BYTE PTR gs:[ecx],al
   14000bd10:	movsxd esi,DWORD PTR [rbp+0x72]
   14000bd13:	jb     0x14000bd7a
   14000bd15:	outs   dx,BYTE PTR ds:[rsi]
   14000bd16:	je     0x14000bd5b
   14000bd18:	outs   dx,DWORD PTR ds:[rsi]
   14000bd19:	outs   dx,BYTE PTR ds:[rsi]
   14000bd1a:	je     0x14000bd81
   14000bd1c:	js     0x14000bd92
   14000bd1e:	rex.WB
   14000bd1f:	add    BYTE PTR fs:[rax],cl
   14000bd22:	movsxd esi,DWORD PTR [rbp+0x72]
   14000bd25:	jb     0x14000bd8c
   14000bd27:	outs   dx,BYTE PTR ds:[rsi]
   14000bd28:	je     0x14000bd6d
   14000bd2a:	outs   dx,DWORD PTR ds:[rsi]
   14000bd2b:	outs   dx,BYTE PTR ds:[rsi]
   14000bd2c:	je     0x14000bd93
   14000bd2e:	js     0x14000bda4
   14000bd30:	rex.WRX (bad) 
   14000bd32:	ins    DWORD PTR es:[rdi],dx
   14000bd33:	add    BYTE PTR gs:[rdx],al
   14000bd36:	movsxd esi,DWORD PTR [rbp+0x72]
   14000bd39:	jb     0x14000bda0
   14000bd3b:	outs   dx,BYTE PTR ds:[rsi]
   14000bd3c:	je     0x14000bd81
   14000bd3e:	outs   dx,DWORD PTR ds:[rsi]
   14000bd3f:	outs   dx,BYTE PTR ds:[rsi]
   14000bd40:	je     0x14000bda7
   14000bd42:	js     0x14000bdb8
   14000bd44:	rex.WRB
   14000bd45:	gs jae 0x14000bdbb
   14000bd48:	(bad)  
   14000bd49:	add    BYTE PTR gs:[ecx],al
   14000bd4d:	add    ecx,DWORD PTR [rbx]
   14000bd4f:	add    eax,0x0
   14000bd54:	add    BYTE PTR [rax],al
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	add    BYTE PTR [rdx],bl
   14000bd5a:	add    DWORD PTR [rax],eax
   14000bd5c:	rex.RX (bad) 
   14000bd5e:	ins    BYTE PTR es:[rdi],dx
   14000bd5f:	ins    BYTE PTR es:[rdi],dx
   14000bd60:	(bad)  
   14000bd62:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000bd65:	jb     0x14000bdd9
   14000bd67:	outs   dx,DWORD PTR ds:[rsi]
   14000bd68:	jb     0x14000bd6a
   14000bd6a:	ja     0x14000bdd5
   14000bd6c:	ins    BYTE PTR es:[rdi],dx
   14000bd6d:	push   rdx
   14000bd6e:	gs jae 0x14000bde6
   14000bd71:	ins    BYTE PTR es:[rdi],dx
   14000bd72:	je     0x14000bd74
   14000bd74:	cwde   
   14000bd75:	adc    DWORD PTR [rax+0x72],ebp
   14000bd78:	gs jae 0x14000bdf0
   14000bd7b:	ins    BYTE PTR es:[rdi],dx
   14000bd7c:	je     0x14000bd7e
   14000bd7e:	or     BYTE PTR [rsi+0x69],ah
   14000bd81:	ins    BYTE PTR es:[rdi],dx
   14000bd82:	gs rex.WRX (bad) 
   14000bd85:	ins    DWORD PTR es:[rdi],dx
   14000bd86:	add    BYTE PTR gs:[rdx],al
   14000bd89:	ins    BYTE PTR es:[rdi],dx
   14000bd8a:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   14000bd91:	gs jb  0x14000bd94
   14000bd94:	or     BYTE PTR [rbp+0x6f],ch
   14000bd97:	fs jne 0x14000be06
   14000bd9a:	add    BYTE PTR gs:[rdx],al
   14000bd9d:	data16 (bad) 
   14000bd9f:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14000bda7:	add    BYTE PTR gs:[rax],cl
   14000bdaa:	ins    DWORD PTR es:[rdi],dx
   14000bdab:	gs jae 0x14000be21
   14000bdae:	(bad)  
   14000bdaf:	add    BYTE PTR gs:[ecx],al
   14000bdb3:	je     0x14000be1d
   14000bdb5:	jb     0x14000be1c
   14000bdb7:	(bad)  
   14000bdb8:	fs rex.WB
   14000bdba:	add    BYTE PTR fs:[rax],cl
   14000bdbd:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000bdc0:	ins    BYTE PTR es:[rdi],dx
   14000bdc1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bdc3:	outs   dx,BYTE PTR ds:[rsi]
   14000bdc4:	je     0x14000be2b
   14000bdc6:	js     0x14000be3c
   14000bdc8:	add    BYTE PTR [rdx],al
   14000bdca:	outs   dx,DWORD PTR ds:[rsi]
   14000bdcb:	jb     0x14000be36
   14000bdcd:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000bdd5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bdd7:	outs   dx,BYTE PTR ds:[rsi]
   14000bdd8:	je     0x14000be3f
   14000bdda:	js     0x14000be50
   14000bddc:	rex.WB
   14000bddd:	add    BYTE PTR fs:[rax],cl
   14000bde0:	outs   dx,DWORD PTR ds:[rsi]
   14000bde1:	jb     0x14000be4c
   14000bde3:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000bdeb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bded:	outs   dx,BYTE PTR ds:[rsi]
   14000bdee:	je     0x14000be55
   14000bdf0:	js     0x14000be66
   14000bdf2:	rex.WRX (bad) 
   14000bdf4:	ins    DWORD PTR es:[rdi],dx
   14000bdf5:	add    BYTE PTR gs:[rdx],al
   14000bdf8:	outs   dx,DWORD PTR ds:[rsi]
   14000bdf9:	jb     0x14000be64
   14000bdfb:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14000be03:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000be05:	outs   dx,BYTE PTR ds:[rsi]
   14000be06:	je     0x14000be6d
   14000be08:	js     0x14000be7e
   14000be0a:	rex.WRB
   14000be0b:	gs jae 0x14000be81
   14000be0e:	(bad)  
   14000be0f:	add    BYTE PTR gs:[ecx],al
   14000be13:	movsxd esi,DWORD PTR [rbp+0x72]
   14000be16:	jb     0x14000be7d
   14000be18:	outs   dx,BYTE PTR ds:[rsi]
   14000be19:	je     0x14000be5e
   14000be1b:	outs   dx,DWORD PTR ds:[rsi]
   14000be1c:	outs   dx,BYTE PTR ds:[rsi]
   14000be1d:	je     0x14000be84
   14000be1f:	js     0x14000be95
   14000be21:	rex.WB
   14000be22:	add    BYTE PTR fs:[rax],cl
   14000be25:	movsxd esi,DWORD PTR [rbp+0x72]
   14000be28:	jb     0x14000be8f
   14000be2a:	outs   dx,BYTE PTR ds:[rsi]
   14000be2b:	je     0x14000be70
   14000be2d:	outs   dx,DWORD PTR ds:[rsi]
   14000be2e:	outs   dx,BYTE PTR ds:[rsi]
   14000be2f:	je     0x14000be96
   14000be31:	js     0x14000bea7
   14000be33:	rex.WRX (bad) 
   14000be35:	ins    DWORD PTR es:[rdi],dx
   14000be36:	add    BYTE PTR gs:[rdx],al
   14000be39:	movsxd esi,DWORD PTR [rbp+0x72]
   14000be3c:	jb     0x14000bea3
   14000be3e:	outs   dx,BYTE PTR ds:[rsi]
   14000be3f:	je     0x14000be84
   14000be41:	outs   dx,DWORD PTR ds:[rsi]
   14000be42:	outs   dx,BYTE PTR ds:[rsi]
   14000be43:	je     0x14000beaa
   14000be45:	js     0x14000bebb
   14000be47:	rex.WRB
   14000be48:	gs jae 0x14000bebe
   14000be4b:	(bad)  
   14000be4c:	add    BYTE PTR gs:[ecx],al
   14000be50:	data16 (bad) 
   14000be52:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   14000be5a:	or     BYTE PTR [rsi+0x61],ah
   14000be5d:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   14000be65:	outs   dx,BYTE PTR ds:[rsi]
   14000be66:	je     0x14000be68
   14000be68:	or     BYTE PTR [rsi+0x75],ah
   14000be6b:	outs   dx,BYTE PTR ds:[rsi]
   14000be6c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000be70:	outs   dx,BYTE PTR ds:[rsi]
   14000be71:	add    BYTE PTR [rdx],al
   14000be73:	add    ecx,DWORD PTR [rbx]
   14000be75:	add    eax,0x0
   14000be7a:	add    BYTE PTR [rax],al
   14000be7c:	and    BYTE PTR [rax],al
   14000be7e:	add    BYTE PTR [rax],ch
   14000be80:	add    BYTE PTR [rax],al
   14000be82:	push   rsp
   14000be83:	outs   dx,DWORD PTR ds:[rsi]
   14000be84:	(bad)  
   14000be85:	jae    0x14000befb
   14000be87:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000be89:	je     0x14000bef4
   14000be8b:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000be91:	outs   dx,DWORD PTR ds:[rsi]
   14000be92:	outs   dx,BYTE PTR ds:[rsi]
   14000be93:	rex.XB (bad) 
   14000be95:	ins    BYTE PTR es:[rdi],dx
   14000be96:	ins    BYTE PTR es:[rdi],dx
   14000be97:	rex.RX (bad) 
   14000be99:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65526800
   14000bea1:	jae    0x14000bf18
   14000bea3:	ins    BYTE PTR es:[rdi],dx
   14000bea4:	je     0x14000bea6
   14000bea6:	(bad)  
   14000bea7:	add    ecx,DWORD PTR [rbx]
   14000bea9:	add    eax,0x0
   14000beae:	add    BYTE PTR [rax],al
   14000beb0:	and    BYTE PTR [rax],al
   14000beb2:	add    BYTE PTR [rax+rax*1],ch
   14000beb5:	add    BYTE PTR [rcx+riz*2+0x75],cl
   14000beb9:	outs   dx,BYTE PTR ds:[rsi]
   14000beba:	movsxd ebp,DWORD PTR [rax+0x4e]
   14000bebd:	outs   dx,DWORD PTR ds:[rsi]
   14000bebe:	je     0x14000bf29
   14000bec0:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000bec6:	outs   dx,DWORD PTR ds:[rsi]
   14000bec7:	outs   dx,BYTE PTR ds:[rsi]
   14000bec8:	push   rbp
   14000bec9:	js     0x14000bf1e
   14000becb:	jne    0x14000bf30
   14000becd:	movsxd esp,DWORD PTR [rbp+0x73]
   14000bed0:	jae    0x14000bf38
   14000bed2:	jne    0x14000bf40
   14000bed4:	add    BYTE PTR [rcx+0x72],al
   14000bed7:	addr32 jne 0x14000bf47
   14000beda:	outs   dx,BYTE PTR gs:[rsi]
   14000bedc:	je     0x14000bede
   14000bede:	add    al,BYTE PTR [rbx]
   14000bee0:	or     eax,DWORD PTR [rip+0x0]        # 0x14000bee6
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	and    BYTE PTR [rax],al
   14000beea:	add    BYTE PTR [rdi],ah
   14000beec:	add    BYTE PTR [rax],al
   14000beee:	rex.WR (bad) 
   14000bef0:	jne    0x14000bf60
   14000bef2:	movsxd ebp,DWORD PTR [rax+0x4e]
   14000bef5:	outs   dx,DWORD PTR ds:[rsi]
   14000bef6:	je     0x14000bf61
   14000bef8:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000befe:	outs   dx,DWORD PTR ds:[rsi]
   14000beff:	outs   dx,BYTE PTR ds:[rsi]
   14000bf00:	push   rbp
   14000bf01:	js     0x14000bf49
   14000bf03:	(bad)  
   14000bf04:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65526800
   14000bf0c:	jae    0x14000bf83
   14000bf0e:	ins    BYTE PTR es:[rdi],dx
   14000bf0f:	je     0x14000bf11
   14000bf11:	(bad)  
   14000bf12:	add    ecx,DWORD PTR [rbx]
   14000bf14:	add    al,BYTE PTR [rax]
	...
   14000bf1e:	and    eax,0x72450000
   14000bf23:	jb     0x14000bf94
   14000bf25:	jb     0x14000bf47
   14000bf27:	push   rax
   14000bf28:	jb     0x14000bf99
   14000bf2a:	jo     0x14000bf8d
   14000bf2c:	addr32 (bad) 
   14000bf2e:	je     0x14000bf95
   14000bf30:	add    BYTE PTR [rsi+0x75],ah
   14000bf33:	outs   dx,BYTE PTR ds:[rsi]
   14000bf34:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000bf38:	outs   dx,BYTE PTR ds:[rsi]
   14000bf39:	rex.WRX (bad) 
   14000bf3b:	ins    DWORD PTR es:[rdi],dx
   14000bf3c:	add    BYTE PTR gs:[rdx],al
   14000bf3f:	push   0x4070072
   14000bf44:	or     al,0x56
   14000bf46:	jp     0x14000bf2f
   14000bf48:	xchg   esi,eax
   14000bf49:	ror    BYTE PTR ss:[rdx-0x6f],0x1c
   14000bf4e:	push   rsp
   14000bf4f:	pop    rsp
   14000bf50:	in     al,dx
   14000bf51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bf52:	mov    esi,0x4d003d3c
   14000bf57:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000bf5e:	je     0x14000bf8e
   14000bf60:	push   rdi
   14000bf61:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000bf68:	push   rbp
   14000bf69:	jo     0x14000bfcf
   14000bf6b:	(bad)  
   14000bf6c:	je     0x14000bfd3
   14000bf6e:	rex.WRX outs dx,DWORD PTR cs:[rsi]
   14000bf71:	je     0x14000bfdc
   14000bf73:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000bf79:	outs   dx,DWORD PTR ds:[rsi]
   14000bf7a:	outs   dx,BYTE PTR ds:[rsi]
   14000bf7b:	push   rbp
   14000bf7c:	js     0x14000bf7e
   14000bf7e:	adc    eax,DWORD PTR [rax]
   14000bf80:	add    DWORD PTR [rdx],ebx
   14000bf82:	jae    0x14000bfd4
   14000bf84:	rex.WRXB iretq 
   14000bf86:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000bf8c:	call   0xfa76c45a
   14000bf91:	add    DWORD PTR [rax],eax
   14000bf93:	add    BYTE PTR [rdx+0x53],dl
   14000bf96:	rex.R push rbx
   14000bf98:	stos   DWORD PTR es:[rdi],eax
   14000bf99:	stos   DWORD PTR es:[rdi],eax
   14000bf9a:	rex.RX cmp ebp,r13d
   14000bf9d:	pop    rax
   14000bf9e:	rol    BYTE PTR [rdx-0x7a],0xfb
   14000bfa2:	(bad)  
   14000bfa3:	rex.B clc 
   14000bfa5:	int3   
   14000bfa6:	(bad)  
   14000bfa7:	add    DWORD PTR ds:[rax],eax
   14000bfaa:	add    BYTE PTR [rax],al
   14000bfac:	rex.WRB jne 0x14000c022
   14000bfaf:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000bfb1:	je     0x14000c01c
   14000bfb3:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000bfb9:	outs   dx,DWORD PTR ds:[rsi]
   14000bfba:	outs   dx,BYTE PTR ds:[rsi]
   14000bfbb:	push   rbp
   14000bfbc:	js     0x14000bfec
   14000bfbe:	jo     0x14000c024
   14000bfc0:	(bad)  
	...
   14000bfd5:	add    BYTE PTR [rax],al
   14000bfd7:	add    BYTE PTR [rdi+0x43],al
   14000bfda:	push   rsp
   14000bfdb:	rex.WR add BYTE PTR [rax],r10b
   14000bfde:	add    BYTE PTR [rax],al
   14000bfe0:	jns    0x14000bfe3
   14000bfe2:	add    BYTE PTR [rax],al
   14000bfe4:	cs je  0x14000c04c
   14000bfe7:	js     0x14000c05d
   14000bfe9:	add    BYTE PTR [rax],al
   14000bfeb:	add    BYTE PTR [rcx+rdx*1+0x0],bh
   14000bfef:	add    BYTE PTR [rax+0x0],dh
   14000bff2:	add    BYTE PTR [rax],al
   14000bff4:	cs je  0x14000c05c
   14000bff7:	js     0x14000c06d
   14000bff9:	and    al,0x64
   14000bffb:	imul   eax,DWORD PTR [rax],0xf0000000
   14000c001:	adc    DWORD PTR [rax],eax
   14000c003:	add    BYTE PTR [rax+rbx*2],bh
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	cs je  0x14000c070
   14000c00b:	js     0x14000c081
   14000c00d:	and    al,0x6d
   14000c00f:	outs   dx,BYTE PTR ds:[rsi]
   14000c010:	add    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	xor    BYTE PTR [rdx+0x0],ch
   14000c017:	add    BYTE PTR [rdx],dl
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rsi],ch
   14000c01d:	je     0x14000c084
   14000c01f:	js     0x14000c095
   14000c021:	and    al,0x6d
   14000c023:	outs   dx,BYTE PTR ds:[rsi]
   14000c024:	and    al,0x30
   14000c026:	xor    BYTE PTR [rax],al
   14000c028:	push   rax
   14000c029:	push   0x0
   14000c02b:	add    BYTE PTR [rax],ah
   14000c02d:	add    al,BYTE PTR [rax]
   14000c02f:	add    BYTE PTR [rsi],ch
   14000c031:	je     0x14000c098
   14000c033:	js     0x14000c0a9
   14000c035:	and    al,0x78
   14000c037:	add    BYTE PTR [rax+0x6c],dh
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    DWORD PTR gs:[rax],eax
   14000c03f:	add    BYTE PTR [rsi],ch
   14000c041:	je     0x14000c0a8
   14000c043:	js     0x14000c0b9
   14000c045:	and    al,0x79
   14000c047:	add    BYTE PTR fs:[rax],al
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	add    BYTE PTR [rax+0x0],dh
   14000c04f:	add    BYTE PTR [rax+rax*1],al
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   14000c05c:	add    BYTE PTR [rax+0x4100000],al
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rax],dl
   14000c071:	test   BYTE PTR [rax],al
   14000c073:	add    BYTE PTR [rax],dl
   14000c075:	add    BYTE PTR [rax],al
   14000c077:	add    BYTE PTR [rsi],ch
   14000c079:	xor    BYTE PTR [rax],dh
   14000c07b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	and    BYTE PTR [rax+rax*1+0x800],al
   14000c087:	add    BYTE PTR [rsi],ch
   14000c089:	rex.XB push r10
   14000c08b:	push   rsp
   14000c08c:	and    al,0x58
   14000c08e:	rex.XB
   14000c08f:	add    BYTE PTR [r8],al
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	sub    BYTE PTR [rax+rax*1+0x800],al
   14000c09b:	add    BYTE PTR [rsi],ch
   14000c09d:	rex.XB push r10
   14000c09f:	push   rsp
   14000c0a0:	and    al,0x58
   14000c0a2:	rex.XB
   14000c0a3:	rex.B
   14000c0a4:	add    BYTE PTR [r8],al
   14000c0a7:	add    BYTE PTR [rax],dh
   14000c0a9:	test   BYTE PTR [rax],al
   14000c0ab:	add    BYTE PTR [rax],ch
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rsi],ch
   14000c0b1:	rex.XB push r10
   14000c0b3:	push   rsp
   14000c0b4:	and    al,0x58
   14000c0b6:	rex.XB push r13
   14000c0b8:	add    BYTE PTR [rax],al
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	pop    rax
   14000c0bd:	test   BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rax],cl
   14000c0c1:	add    BYTE PTR [rax],al
   14000c0c3:	add    BYTE PTR [rsi],ch
   14000c0c5:	rex.XB push r10
   14000c0c7:	push   rsp
   14000c0c8:	and    al,0x58
   14000c0ca:	rex.XB pop r10
   14000c0cc:	add    BYTE PTR [rax],al
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	(bad)  
   14000c0d1:	test   BYTE PTR [rax],al
   14000c0d3:	add    BYTE PTR [rax],cl
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rsi],ch
   14000c0d9:	rex.XB push r10
   14000c0db:	push   rsp
   14000c0dc:	and    al,0x58
   14000c0de:	rex.WB
   14000c0df:	add    BYTE PTR [r8],al
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	push   0x8000084
   14000c0e9:	add    BYTE PTR [rax],al
   14000c0eb:	add    BYTE PTR [rsi],ch
   14000c0ed:	rex.XB push r10
   14000c0ef:	push   rsp
   14000c0f0:	and    al,0x58
   14000c0f2:	rex.WB
   14000c0f3:	rex.B
   14000c0f4:	add    BYTE PTR [r8],al
   14000c0f7:	add    BYTE PTR [rax-0x7c],dh
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	or     BYTE PTR [rax],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	cs rex.XB push r10
   14000c103:	push   rsp
   14000c104:	and    al,0x58
   14000c106:	rex.WB pop r9
   14000c108:	add    BYTE PTR [rax],al
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	js     0x14000c092
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	or     BYTE PTR [rax],al
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	cs rex.XB push r10
   14000c117:	push   rsp
   14000c118:	and    al,0x58
   14000c11a:	rex.WB pop r10
   14000c11c:	add    BYTE PTR [rax],al
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	add    BYTE PTR [rax+rax*1+0x10000],0x0
   14000c128:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000c131:	add    BYTE PTR [rax],al
   14000c133:	add    BYTE PTR [rax+0x20000085],al
   14000c139:	add    BYTE PTR ss:[rax],al
   14000c13c:	cs jb  0x14000c1a3
   14000c13f:	(bad)  
   14000c140:	je     0x14000c1a3
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	movabs al,ds:0x2e000000100000bb
   14000c14d:	jb     0x14000c1b3
   14000c14f:	(bad)  
   14000c150:	je     0x14000c1b3
   14000c152:	and    al,0x7a
   14000c154:	rex.RB push r12
   14000c156:	push   rdi
   14000c157:	xor    BYTE PTR [rax],al
   14000c159:	add    BYTE PTR [rax],al
   14000c15b:	add    BYTE PTR [rax-0x6cffff45],dh
   14000c161:	add    eax,DWORD PTR [rax]
   14000c163:	add    BYTE PTR [rsi],ch
   14000c165:	jb     0x14000c1cb
   14000c167:	(bad)  
   14000c168:	je     0x14000c1cb
   14000c16a:	and    al,0x7a
   14000c16c:	rex.RB push r12
   14000c16e:	push   rdi
   14000c16f:	xor    DWORD PTR [rax],eax
   14000c171:	add    BYTE PTR [rax],al
   14000c173:	add    BYTE PTR [rbx-0x41],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	rex.WRX add BYTE PTR [rax],r8b
   14000c17b:	add    BYTE PTR [rsi],ch
   14000c17d:	jb     0x14000c1e3
   14000c17f:	(bad)  
   14000c180:	je     0x14000c1e3
   14000c182:	and    al,0x7a
   14000c184:	rex.RB push r12
   14000c186:	push   rdi
   14000c187:	xor    al,BYTE PTR [rax]
   14000c189:	add    BYTE PTR [rax],al
   14000c18b:	add    BYTE PTR [rcx+0x10000bf],dl
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rsi],ch
   14000c195:	jb     0x14000c1fb
   14000c197:	(bad)  
   14000c198:	je     0x14000c1fb
   14000c19a:	and    al,0x7a
   14000c19c:	rex.RB push r12
   14000c19e:	push   rdi
   14000c19f:	cmp    DWORD PTR [rax],eax
   14000c1a1:	add    BYTE PTR [rax],al
   14000c1a3:	add    BYTE PTR [rdi+rdi*4+0x37c0000],dl
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	cs jb  0x14000c213
   14000c1af:	(bad)  
   14000c1b0:	je     0x14000c213
   14000c1b2:	and    al,0x7a
   14000c1b4:	jp     0x14000c230
   14000c1b6:	fs (bad) 
   14000c1b8:	add    BYTE PTR [eax],al
   14000c1bb:	add    BYTE PTR [rax],dl
   14000c1bd:	ret    
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	mov    esp,0x2e000008
   14000c1c5:	js     0x14000c22b
   14000c1c7:	(bad)  
   14000c1c8:	je     0x14000c22b
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	ror    bl,1
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	jl     0x14000c1d3
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	cs js  0x14000c23b
   14000c1d7:	(bad)  
   14000c1d8:	je     0x14000c23b
   14000c1da:	and    al,0x78
   14000c1dc:	add    BYTE PTR [rax],al
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	push   rax
   14000c1e1:	int    0x0
   14000c1e3:	add    BYTE PTR [rax+0x0],al
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	nop
   14000c1f5:	int    0x0
   14000c1f7:	add    BYTE PTR [rax],ah
   14000c1f9:	add    BYTE PTR [rax],al
   14000c1fb:	add    BYTE PTR [rsi],ch
   14000c1fd:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	mov    al,0xcd
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	and    BYTE PTR [rax],al
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	ror    ch,1
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	sub    al,0x0
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	add    dh,cl
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	and    BYTE PTR [rax],al
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	and    dh,cl
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	or     BYTE PTR [rdx],al
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000c255:	add    BYTE PTR [rax],al
   14000c257:	add    BYTE PTR [rax],ch
   14000c259:	rol    BYTE PTR [rax],1
   14000c25b:	add    BYTE PTR [rax+rax*1],dl
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000c269:	add    BYTE PTR [rax],al
   14000c26b:	add    BYTE PTR [rax-0x30],al
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	adc    BYTE PTR [rax+rax*1],al
   14000c273:	add    BYTE PTR [rsi],ch
   14000c275:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rax-0x2c],dl
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	or     eax,DWORD PTR ss:[rax]
   14000c287:	add    BYTE PTR [rsi],ch
   14000c289:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000c291:	add    BYTE PTR [rax],al
   14000c293:	add    BYTE PTR [rax],al
   14000c295:	loopne 0x14000c297
   14000c297:	add    BYTE PTR [rax+0x2e000000],cl
   14000c29d:	fs (bad) 
   14000c29f:	je     0x14000c302
   14000c2a1:	add    BYTE PTR [rax],al
   14000c2a3:	add    BYTE PTR [rax-0x43ffff20],cl
   14000c2a9:	add    BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rsi],ch
   14000c2ad:	fs (bad) 
   14000c2af:	je     0x14000c312
   14000c2b1:	and    al,0x72
   14000c2b3:	add    BYTE PTR [rax-0x1f],dl
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	push   rax
   14000c2b9:	(bad)  
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	cs (bad) 
   14000c2bf:	jae    0x14000c2c1
   14000c2c1:	add    BYTE PTR [rax],al
   14000c2c3:	add    BYTE PTR [rax],al
   14000c2c5:	lock add BYTE PTR [rax],al
   14000c2c8:	xchg   esp,eax
   14000c2c9:	add    eax,0x702e0000
   14000c2ce:	fs (bad) 
   14000c2d0:	je     0x14000c333
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	add    BYTE PTR [rax],al
   14000c2d6:	add    DWORD PTR [rax],eax
   14000c2d8:	and    BYTE PTR [rax],al
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	add    BYTE PTR [rax],dl
   14000c2ea:	add    DWORD PTR [rax],eax
   14000c2ec:	add    BYTE PTR [rcx],al
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	cs jb  0x14000c366
   14000c2f3:	jb     0x14000c358
   14000c2f5:	and    al,0x30
   14000c2f7:	xor    DWORD PTR [rax],eax
   14000c2f9:	add    BYTE PTR [rax],al
   14000c2fb:	add    BYTE PTR [rax],al
   14000c2fd:	adc    DWORD PTR [rcx],eax
   14000c2ff:	add    al,bl
   14000c301:	add    eax,0x722e0000
   14000c306:	jae    0x14000c37a
   14000c308:	movsxd esp,DWORD PTR [rax+rsi*1]
   14000c30b:	xor    al,BYTE PTR [rax]
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rcx],al
   14000c311:	(bad)  
   14000c312:	add    al,BYTE PTR [rax]
   14000c314:	(bad)  
   14000c315:	xor    al,BYTE PTR [rdx]
   14000c317:	xor    BYTE PTR [rcx],al
   14000c319:	adc    eax,0x74150008
   14000c31e:	or     al,BYTE PTR [rax]
   14000c320:	adc    eax,0x15000964
   14000c325:	xor    al,0x8
   14000c327:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0d47f
   14000c32d:	or     al,BYTE PTR [rax+rax*1]
   14000c330:	or     dh,BYTE PTR [rax+rcx*1]
   14000c333:	add    BYTE PTR [rdx],cl
   14000c335:	push   rdx
   14000c336:	(bad)  
   14000c337:	jo     0x14000c33a
   14000c339:	(bad)  
   14000c33a:	add    al,BYTE PTR [rax]
   14000c33c:	(bad)  
   14000c33d:	push   rdx
   14000c33e:	add    dh,BYTE PTR [rax]
   14000c340:	add    DWORD PTR [rdx],ecx
   14000c342:	add    al,0x0
   14000c344:	or     dh,BYTE PTR [rsi+rax*1]
   14000c347:	add    BYTE PTR [rdx],cl
   14000c349:	xor    al,BYTE PTR [rsi]
   14000c34b:	jo     0x14000c366
   14000c34d:	(bad)  
   14000c34e:	add    eax,0x2c340d00
   14000c353:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600ed5a
   14000c359:	(bad)  
   14000c35a:	add    BYTE PTR [rax],al
   14000c35c:	add    BYTE PTR [rcx+0x0],ch
   14000c35f:	add    BYTE PTR [rax+0x1],al
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	add    DWORD PTR [rdi],ecx
   14000c366:	(bad)  
   14000c367:	add    BYTE PTR [rdi],cl
   14000c369:	fs (bad) 
   14000c36b:	add    BYTE PTR [rdi],cl
   14000c36d:	xor    al,0x6
   14000c36f:	add    BYTE PTR [rdi],cl
   14000c371:	xor    cl,BYTE PTR [rbx]
   14000c373:	jo     0x14000c376
   14000c375:	add    al,0x1
   14000c377:	add    BYTE PTR [rdx+rax*2],al
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	add    DWORD PTR [rax+rcx*1],edx
   14000c37f:	add    BYTE PTR [rsp+riz*2],dl
   14000c382:	or     BYTE PTR [rax],al
   14000c384:	adc    al,0x54
   14000c386:	(bad)  
   14000c387:	add    BYTE PTR [rsp+rsi*1],dl
   14000c38a:	(bad)  
   14000c38b:	add    BYTE PTR [rdx+rsi*1],dl
   14000c38e:	adc    BYTE PTR [rax+0x19],dh
   14000c391:	and    BYTE PTR [rip+0x14621800],al        # 0x15462db97
   14000c397:	loopne 0x14000c3ab
   14000c399:	jo     0x14000c3ac
   14000c39b:	(bad)  
   14000c39c:	adc    BYTE PTR [rax],dh
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	(bad)  
   14000c3a1:	(bad)  
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	cmp    BYTE PTR [rcx-0x10000],bh
   14000c3aa:	(bad)  
   14000c3ab:	inc    DWORD PTR [rax]
   14000c3ad:	add    BYTE PTR [rax],al
   14000c3af:	add    bh,bh
   14000c3b1:	(bad)  
   14000c3b2:	(bad)  
   14000c3b3:	inc    DWORD PTR [rax]
   14000c3b5:	add    BYTE PTR [rax],al
   14000c3b7:	add    BYTE PTR [rcx],al
   14000c3b9:	add    BYTE PTR [rax],al
   14000c3bb:	add    BYTE PTR [rax],al
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rcx],al
	...
   14000c3cd:	add    BYTE PTR [rax],al
   14000c3cf:	add    BYTE PTR [rbx],al
   14000c3d1:	add    BYTE PTR [rax],al
   14000c3d3:	add    BYTE PTR [rcx],al
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    al,dh
   14000c3d9:	ret    
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	add    al,BYTE PTR [rax]
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	add    al,BYTE PTR [rax]
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	add    eax,DWORD PTR [rax]
   14000c3e6:	add    BYTE PTR [rax],al
   14000c3e8:	add    DWORD PTR [rax],eax
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	add    al,0xc4
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	add    BYTE PTR [rax],al
	...
   14000c3fb:	add    BYTE PTR [rsi+0x6a],dl
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	cmp    BYTE PTR [rax],al
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	add    BYTE PTR [rax],al
	...
   14000c40f:	add    BYTE PTR [rdx+0x3800006a],bl
	...
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    ah,ah
   14000c421:	sbb    DWORD PTR [rax],eax
   14000c423:	add    bh,bh
   14000c425:	(bad)  
   14000c426:	(bad)  
   14000c427:	call   QWORD PTR [rbx+0x1a]
   14000c42a:	add    BYTE PTR [rax],al
   14000c42c:	add    BYTE PTR [rax],al
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	js     0x14000c44c
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	(bad)  
   14000c435:	(bad)  
   14000c436:	(bad)  
   14000c437:	call   QWORD PTR [rsi+0x6a]
   14000c43a:	add    BYTE PTR [rax],al
   14000c43c:	add    BYTE PTR [rax],al
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	movsxd ebp,DWORD PTR [rdx+0x0]
   14000c443:	add    BYTE PTR [rcx],al
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rbx+0x6a],ch
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	add    al,BYTE PTR [rax]
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	mov    WORD PTR [rdx+0x0],gs
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rdi+0x300006a],ah
   14000c45d:	add    BYTE PTR [rax],al
   14000c45f:	add    BYTE PTR [rcx],bl
   14000c461:	or     al,BYTE PTR [rdx]
   14000c463:	add    BYTE PTR [rdx],cl
   14000c465:	xor    al,BYTE PTR [rsi]
   14000c467:	push   rax
   14000c468:	(bad)  
   14000c469:	(bad)  
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	cmp    BYTE PTR [rcx+0x2d190000],bh
   14000c472:	or     eax,DWORD PTR [rax]
   14000c474:	(bad)  
   14000c475:	je     0x14000c497
   14000c477:	add    BYTE PTR [rdi],bl
   14000c479:	fs (bad) 
   14000c47b:	add    BYTE PTR [rdi],bl
   14000c47d:	xor    al,0x1e
   14000c47f:	add    BYTE PTR [rdi],bl
   14000c481:	add    DWORD PTR [rdx],ebx
   14000c483:	add    BYTE PTR [rax+riz*8],dl
   14000c486:	adc    al,al
   14000c488:	adc    BYTE PTR [rax+0x0],dl
   14000c48b:	add    BYTE PTR [rax],al
   14000c48d:	imul   eax,DWORD PTR [rax],0xc000
   14000c493:	add    BYTE PTR [rcx],bl
   14000c495:	adc    eax,0xd2060002
   14000c49a:	add    dh,BYTE PTR [rax]
   14000c49c:	add    BYTE PTR [rcx+0x0],ch
   14000c49f:	add    BYTE PTR [rax+0x0],ah
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	add    DWORD PTR [rdx],ecx
   14000c4a6:	add    al,0x0
   14000c4a8:	or     dh,BYTE PTR [rax+rcx*1]
   14000c4ab:	add    BYTE PTR [rdx],cl
   14000c4ad:	xor    al,BYTE PTR [rsi]
   14000c4af:	jo     0x14000c4b2
   14000c4b1:	sbb    eax,0x741d000c
   14000c4b6:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00d321
   14000c4bd:	push   rsp
   14000c4be:	or     eax,0xc341d00
   14000c4c3:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0de3b
   14000c4c9:	loopne 0x14000c4e0
   14000c4cb:	rcr    BYTE PTR [rcx],0x29
   14000c4ce:	or     DWORD PTR [rax],eax
   14000c4d0:	sbb    esi,DWORD PTR [rcx+rsi*1+0x0]
   14000c4d4:	sbb    esp,DWORD PTR [rax+rsi*1+0x0]
   14000c4d8:	sbb    esi,DWORD PTR [rdi+rbp*1]
   14000c4db:	add    BYTE PTR [rbx],bl
   14000c4dd:	add    DWORD PTR [rax+rax*1],ebp
   14000c4e0:	adc    BYTE PTR [rax+0x0],dl
   14000c4e3:	add    BYTE PTR [rax],al
   14000c4e5:	imul   eax,DWORD PTR [rax],0x15000
   14000c4eb:	add    BYTE PTR [rcx],al
   14000c4ed:	add    al,0x1
   14000c4ef:	add    BYTE PTR [rdx+rax*4],al
   14000c4f2:	add    BYTE PTR [rax],al
   14000c4f4:	sbb    DWORD PTR [rdi],ebp
   14000c4f6:	or     DWORD PTR [rax],eax
   14000c4f8:	(bad)  
   14000c4f9:	je     0x14000c532
   14000c4fb:	add    BYTE PTR [rsi],bl
   14000c4fd:	fs add BYTE PTR ss:[rsi],bl
   14000c501:	xor    al,0x35
   14000c503:	add    BYTE PTR [rsi],bl
   14000c505:	add    DWORD PTR [rdx],esi
   14000c507:	add    BYTE PTR [rax],dl
   14000c509:	push   rax
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	add    BYTE PTR [rcx+0x0],ch
   14000c50f:	add    BYTE PTR [rax+0x19000001],al
   14000c515:	sbb    DWORD PTR [rax+rax*1],eax
   14000c518:	or     dh,BYTE PTR [rsp+rcx*1]
   14000c51b:	add    BYTE PTR [rdx],cl
   14000c51d:	xchg   edx,eax
   14000c51e:	(bad)  
   14000c51f:	jo     0x14000c521
   14000c521:	imul   eax,DWORD PTR [rax],0x4000
   14000c527:	add    BYTE PTR [rcx],dl
   14000c529:	cs or  eax,0x25742e00
   14000c52f:	add    BYTE PTR [rdx],ch
   14000c531:	fs and al,0x0
   14000c534:	es xor al,0x23
   14000c537:	add    BYTE PTR [rdx],bl
   14000c539:	add    DWORD PTR [rax+rax*1],ebx
   14000c53c:	(bad)  
   14000c53e:	or     eax,0x9d00be0
   14000c543:	rol    BYTE PTR [rdi],0x50
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	(bad)  
   14000c549:	(bad)  
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	(bad)  
   14000c54d:	mov    ecx,0xffff0000
   14000c552:	(bad)  
   14000c553:	inc    ebp
   14000c555:	push   0x0
   14000c557:	add    BYTE PTR [rax],al
   14000c559:	add    BYTE PTR [rax],al
   14000c55b:	add    cl,dl
   14000c55d:	push   0x0
   14000c55f:	add    BYTE PTR [rcx],al
   14000c561:	add    BYTE PTR [rax],al
   14000c563:	add    ch,bl
   14000c565:	push   0x0
   14000c567:	add    BYTE PTR [rdi+riz*1],bh
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	(bad)  
   14000c56d:	(bad)  
   14000c56e:	(bad)  
   14000c56f:	dec    DWORD PTR [rcx+0x27]
   14000c575:	add    BYTE PTR [rax],al
   14000c577:	add    BYTE PTR [rbp+0x1000027],cl
   14000c57d:	add    BYTE PTR [rax],al
   14000c57f:	add    BYTE PTR [rcx+0x2000027],dl
   14000c585:	add    BYTE PTR [rax],al
   14000c587:	add    BYTE PTR [rcx],bh
   14000c589:	sub    DWORD PTR [rax],eax
   14000c58b:	add    BYTE PTR [rcx],al
   14000c58d:	add    BYTE PTR [rax],al
   14000c58f:	add    BYTE PTR [rax+0x29],bl
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	add    BYTE PTR [rax],al
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	ja     0x14000c5c3
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	(bad)  
   14000c59d:	(bad)  
   14000c59e:	(bad)  
   14000c59f:	call   FWORD PTR [rcx]
   14000c5a1:	sub    ecx,DWORD PTR [rcx]
   14000c5a3:	add    BYTE PTR [rdx],bl
   14000c5a5:	add    DWORD PTR [rax],edi
   14000c5a7:	add    BYTE PTR [rbx],cl
   14000c5a9:	lock or eax,esp
   14000c5ac:	(bad)  
   14000c5ad:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ca24
   14000c5b4:	add    dl,BYTE PTR [rax+0x0]
   14000c5b7:	add    BYTE PTR [rax],al
   14000c5b9:	imul   eax,DWORD PTR [rax],0x1b000
   14000c5bf:	add    BYTE PTR [rcx],bl
   14000c5c1:	sbb    al,0x3
   14000c5c3:	add    BYTE PTR [rsi],cl
   14000c5c5:	add    DWORD PTR [rdx],edx
   14000c5c7:	add    BYTE PTR [rdx],al
   14000c5c9:	push   rax
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	add    BYTE PTR [rcx+0x0],ch
   14000c5cf:	add    BYTE PTR [rax+0x19000000],al
   14000c5d5:	or     DWORD PTR ss:[rax],eax
   14000c5d8:	and    eax,0x18005934
   14000c5dd:	add    DWORD PTR [rax+0x0],edx
   14000c5e0:	or     dh,al
   14000c5e2:	or     al,ah
   14000c5e4:	(bad)  
   14000c5e5:	jo     0x14000c5ec
   14000c5e7:	(bad)  
   14000c5e8:	add    al,0x50
   14000c5ea:	add    BYTE PTR [rax],al
   14000c5ec:	nop
   14000c5ed:	imul   eax,DWORD PTR [rax],0xba7800
   14000c5f3:	add    BYTE PTR [rdx+0x2],dh
   14000c5f6:	add    BYTE PTR [rax],al
   14000c5f8:	(bad)  
   14000c5f9:	(bad)  
   14000c5fa:	(bad)  
   14000c5fb:	(bad)  
   14000c5fc:	out    dx,eax
   14000c5fd:	push   0x0
   14000c5ff:	add    BYTE PTR [rax],al
   14000c601:	add    BYTE PTR [rax],al
   14000c603:	add    bl,bh
   14000c605:	push   0x0
   14000c607:	add    BYTE PTR [rax+rsi*1-0x10000],al
   14000c60e:	(bad)  
   14000c60f:	dec    DWORD PTR [rcx+rsi*1]
   14000c612:	add    BYTE PTR [rax],al
   14000c614:	add    BYTE PTR [rax],al
   14000c616:	add    BYTE PTR [rax],al
   14000c618:	adc    DWORD PTR [rcx],esi
   14000c61a:	add    BYTE PTR [rax],al
   14000c61c:	add    DWORD PTR [rax],eax
   14000c61e:	add    BYTE PTR [rax],al
   14000c620:	xchg   edx,eax
   14000c621:	xor    DWORD PTR [rax],eax
   14000c623:	add    bh,bh
   14000c625:	(bad)  
   14000c626:	(bad)  
   14000c627:	call   FWORD PTR [rcx]
   14000c629:	sbb    al,0x4
   14000c62b:	add    BYTE PTR [rsi],cl
   14000c62d:	repnz add al,0x70
   14000c630:	add    esi,DWORD PTR [rax]
   14000c632:	add    dl,BYTE PTR [rax+0x0]
   14000c635:	imul   eax,DWORD PTR [rax],0x7000
   14000c63b:	add    BYTE PTR [rcx],dl
   14000c63d:	(bad)  
   14000c63e:	or     al,BYTE PTR [rax]
   14000c640:	(bad)  
   14000c641:	push   rsp
   14000c642:	ltr    WORD PTR [rbx]
   14000c645:	xor    al,0xe
   14000c647:	add    BYTE PTR [rdi],cl
   14000c649:	jb     0x14000c656
   14000c64b:	lock or eax,esp
   14000c64e:	(bad)  
   14000c64f:	rol    BYTE PTR [rip+0xe600470],0x61        # 0x14e60cac6
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	push   rax
   14000c659:	mov    edx,0xffff0000
   14000c65e:	(bad)  
   14000c65f:	dec    DWORD PTR [rip+0x6b]        # 0x14000c6d0
   14000c665:	add    BYTE PTR [rax],al
   14000c667:	add    BYTE PTR [rcx],bl
   14000c669:	imul   eax,DWORD PTR [rax],0x0
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	call   0x13f00c6a7
   14000c675:	(bad)  
   14000c676:	(bad)  
   14000c677:	call   QWORD PTR [rbx]
   14000c679:	xor    eax,DWORD PTR [rax]
   14000c67b:	add    BYTE PTR [rax],al
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rax],bl
   14000c681:	xor    eax,DWORD PTR [rax]
   14000c683:	add    BYTE PTR [rcx],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rsi],al
   14000c689:	xor    al,0x0
   14000c68b:	add    BYTE PTR [rax],al
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    BYTE PTR [rsi],ah
   14000c691:	xor    al,0x0
   14000c693:	add    bh,bh
   14000c695:	(bad)  
   14000c696:	(bad)  
   14000c697:	call   QWORD PTR [rcx]
   14000c699:	and    DWORD PTR [rdx],ecx
   14000c69b:	add    BYTE PTR [rcx],ah
   14000c69d:	xor    al,0x15
   14000c69f:	add    BYTE PTR [rip+0xcf00e92],dl        # 0x14cf0d537
   14000c6a5:	loopne 0x14000c6b1
   14000c6a7:	ror    BYTE PTR [rax],1
   14000c6a9:	rol    BYTE PTR [rsi],0x70
   14000c6ac:	add    eax,0xe500460
   14000c6b1:	(bad)  
   14000c6b2:	add    BYTE PTR [rax],al
   14000c6b4:	sub    BYTE PTR [rdx-0x10000],bh
   14000c6ba:	(bad)  
   14000c6bb:	jmp    FWORD PTR [rbx]
   14000c6bd:	imul   eax,DWORD PTR [rax],0x0
   14000c6c0:	add    BYTE PTR [rax],al
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	(bad)  
   14000c6c5:	imul   eax,DWORD PTR [rax],0x0
   14000c6c8:	push   rax
   14000c6c9:	xor    al,0x0
   14000c6cb:	add    bh,bh
   14000c6cd:	(bad)  
   14000c6ce:	(bad)  
   14000c6cf:	call   QWORD PTR [rdi+0x34]
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rsi+0x1000034],bl
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rbp+rsi*1+0x0],cl
   14000c6e3:	add    BYTE PTR [rax],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rdi+0x35],ah
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	(bad)  
   14000c6ed:	(bad)  
   14000c6ee:	(bad)  
   14000c6ef:	call   QWORD PTR [rcx]
   14000c6f1:	and    eax,0x3425000b
   14000c6f6:	sbb    eax,0x12011900
   14000c6fb:	add    BYTE PTR [rsi],cl
   14000c6fd:	lock or al,0xe0
   14000c700:	or     dl,al
   14000c702:	or     al,al
   14000c704:	(bad)  
   14000c705:	jo     0x14000c70c
   14000c707:	(bad)  
   14000c708:	add    al,0x50
   14000c70a:	add    BYTE PTR [rax],al
   14000c70c:	(bad)  
   14000c70d:	(bad)  
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	add    BYTE PTR [rdx-0x10000],bh
   14000c716:	(bad)  
   14000c717:	dec    DWORD PTR [rcx+0x6b]
   14000c71a:	add    BYTE PTR [rax],al
   14000c71c:	add    BYTE PTR [rax],al
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	push   rbp
   14000c721:	imul   eax,DWORD PTR [rax],0x0
   14000c724:	add    BYTE PTR [rax],al
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	xchg   esp,eax
   14000c729:	xor    eax,0xffff0000
   14000c72e:	(bad)  
   14000c72f:	dec    DWORD PTR [rsi+rsi*1]
   14000c732:	add    BYTE PTR [rax],al
   14000c734:	add    BYTE PTR [rax],al
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	adc    esi,DWORD PTR [rsi]
   14000c73a:	add    BYTE PTR [rax],al
   14000c73c:	add    DWORD PTR [rax],eax
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	(bad)  
   14000c741:	add    BYTE PTR ss:[rax],al
   14000c744:	add    BYTE PTR [rax],al
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	jmp    0x13f00c783
   14000c74d:	(bad)  
   14000c74e:	(bad)  
   14000c74f:	call   QWORD PTR [rcx]
   14000c751:	and    eax,0x3425000b
   14000c756:	sbb    eax,0x12011900
   14000c75b:	add    BYTE PTR [rsi],cl
   14000c75d:	lock or al,0xe0
   14000c760:	or     dl,al
   14000c762:	or     al,al
   14000c764:	(bad)  
   14000c765:	jo     0x14000c76c
   14000c767:	(bad)  
   14000c768:	add    al,0x50
   14000c76a:	add    BYTE PTR [rax],al
   14000c76c:	(bad)  
   14000c76d:	(bad)  
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	fdivr  DWORD PTR [rcx+0x0]
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	sbb    BYTE PTR [rdi],dh
   14000c77a:	add    BYTE PTR [rax],al
   14000c77c:	(bad)  
   14000c77d:	(bad)  
   14000c77e:	(bad)  
   14000c77f:	call   QWORD PTR [rax+0x37]
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rdi+0x1000037],dl
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rdx+0x38],dl
   14000c792:	add    BYTE PTR [rax],al
   14000c794:	add    BYTE PTR [rax],al
   14000c796:	add    BYTE PTR [rax],al
   14000c798:	ins    DWORD PTR es:[rdi],dx
   14000c799:	cmp    BYTE PTR [rax],al
   14000c79b:	add    bh,bh
   14000c79d:	(bad)  
   14000c79e:	(bad)  
   14000c79f:	call   FWORD PTR [rcx]
   14000c7a1:	sub    BYTE PTR [rax],cl
   14000c7a3:	add    BYTE PTR [rdx],bl
   14000c7a5:	je     0x14000c7bc
   14000c7a7:	add    BYTE PTR [rdx],bl
   14000c7a9:	fs adc al,0x0
   14000c7ac:	sbb    dh,BYTE PTR [rdx+rdx*1]
   14000c7af:	add    BYTE PTR [rdx],bl
   14000c7b1:	repnz adc BYTE PTR [rax+0x0],dl
   14000c7b5:	imul   eax,DWORD PTR [rax],0x7000
   14000c7bb:	add    BYTE PTR [rcx],bl
   14000c7bd:	cmp    DWORD PTR [rip+0x28742b00],ecx        # 0x16874f2c3
   14000c7c3:	add    BYTE PTR [rdi],ah
   14000c7c5:	fs (bad) 
   14000c7c7:	add    BYTE PTR [rbx],ah
   14000c7c9:	xor    al,0x26
   14000c7cb:	add    BYTE PTR [rdi],dl
   14000c7cd:	add    DWORD PTR [rax],esp
   14000c7cf:	add    BYTE PTR [rax+rsi*8],cl
   14000c7d2:	or     ah,al
   14000c7d4:	or     al,dl
   14000c7d6:	(bad)  
   14000c7d7:	rol    BYTE PTR [rax+rdx*2],0x0
   14000c7db:	add    BYTE PTR [rax-0x4fffff97],dl
   14000c7e1:	mov    ecx,0xfa0000
   14000c7e6:	add    BYTE PTR [rax],al
   14000c7e8:	(bad)  
   14000c7e9:	(bad)  
   14000c7ea:	(bad)  
   14000c7eb:	jmp    QWORD PTR [rdi+0x6b]
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	add    BYTE PTR [rax],al
   14000c7f2:	add    BYTE PTR [rax],al
   14000c7f4:	jae    0x14000c861
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	add    DWORD PTR [rax],eax
   14000c7fa:	add    BYTE PTR [rax],al
   14000c7fc:	jg     0x14000c869
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	add    al,BYTE PTR [rax]
   14000c802:	add    BYTE PTR [rax],al
   14000c804:	mov    ebp,DWORD PTR [rbx+0x0]
   14000c807:	add    BYTE PTR [rbx],al
   14000c809:	add    BYTE PTR [rax],al
   14000c80b:	add    BYTE PTR [rdi+0x400006b],dl
   14000c811:	add    BYTE PTR [rax],al
   14000c813:	add    BYTE PTR [rbx+0x6b],ah
   14000c819:	add    BYTE PTR [rax],al
   14000c81b:	add    BYTE PTR [rax],al
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    al,al
   14000c821:	cmp    DWORD PTR [rax],eax
   14000c823:	add    bh,bh
   14000c825:	(bad)  
   14000c826:	(bad)  
   14000c827:	jmp    FWORD PTR [rbx]
   14000c829:	cmp    al,BYTE PTR [rax]
   14000c82b:	add    BYTE PTR [rax],al
   14000c82d:	add    BYTE PTR [rax],al
   14000c82f:	add    BYTE PTR [rax],dh
   14000c831:	cmp    al,BYTE PTR [rax]
   14000c833:	add    BYTE PTR [rcx],al
   14000c835:	add    BYTE PTR [rax],al
   14000c837:	add    BYTE PTR [rip+0x200003a],dh        # 0x14200c877
   14000c83d:	add    BYTE PTR [rax],al
   14000c83f:	add    BYTE PTR [rdx],bh
   14000c841:	cmp    al,BYTE PTR [rax]
   14000c843:	add    BYTE PTR [rbx],al
   14000c845:	add    BYTE PTR [rax],al
   14000c847:	add    BYTE PTR [rsi],bh
   14000c849:	cmp    al,BYTE PTR [rax]
   14000c84b:	add    BYTE PTR [rax+rax*1],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	rex.X cmp al,BYTE PTR [rax]
   14000c853:	add    BYTE PTR [rip+0xfffffffff7000000],al        # 0x13700c859
   14000c859:	cmp    eax,0x40000
   14000c85e:	add    BYTE PTR [rax],al
   14000c860:	sbb    bh,BYTE PTR [rsi]
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	add    eax,DWORD PTR [rax]
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	cmp    eax,0x200003e
   14000c86d:	add    BYTE PTR [rax],al
   14000c86f:	add    BYTE PTR [rdx+0x3e],ah
   14000c872:	add    BYTE PTR [rax],al
   14000c874:	add    DWORD PTR [rax],eax
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	xchg   DWORD PTR [rsi],edi
   14000c87a:	add    BYTE PTR [rax],al
   14000c87c:	add    BYTE PTR [rax],al
   14000c87e:	add    BYTE PTR [rax],al
   14000c880:	lods   al,BYTE PTR ds:[rsi]
   14000c881:	add    BYTE PTR ds:[rax],al
   14000c884:	(bad)  
   14000c885:	(bad)  
   14000c886:	(bad)  
   14000c887:	call   FWORD PTR [rcx]
   14000c889:	adc    eax,DWORD PTR [rcx]
   14000c88b:	add    BYTE PTR [rdx+riz*8],al
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	add    BYTE PTR [rcx+0x0],ch
   14000c893:	add    BYTE PTR [rax+0x0],ah
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	adc    DWORD PTR [rax],esp
   14000c89a:	(bad)  
   14000c89b:	add    BYTE PTR [rax],bl
   14000c89d:	movabs ds:0x600c700de00ff011,al
   14000c8a6:	or     esi,DWORD PTR [rax]
   14000c8a8:	or     dl,BYTE PTR [rax+0x0]
   14000c8ab:	add    BYTE PTR [rsi],cl
   14000c8ad:	(bad)  
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	mov    BYTE PTR [rcx-0x10000],bh
   14000c8b6:	(bad)  
   14000c8b7:	push   QWORD PTR [rbp+0x6b]
   14000c8bd:	add    BYTE PTR [rax],al
   14000c8bf:	add    cl,al
   14000c8c1:	imul   eax,DWORD PTR [rax],0x0
   14000c8c4:	add    DWORD PTR [rax],eax
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	int    0x6b
   14000c8ca:	add    BYTE PTR [rax],al
   14000c8cc:	add    BYTE PTR [rax],al
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	int3   
   14000c8d1:	add    BYTE PTR [rax],al
   14000c8d4:	(bad)  
   14000c8d5:	(bad)  
   14000c8d6:	(bad)  
   14000c8d7:	dec    DWORD PTR [rsi]
   14000c8d9:	add    BYTE PTR [r8],al
   14000c8dc:	add    DWORD PTR [rax],eax
   14000c8de:	add    BYTE PTR [rax],al
   14000c8e0:	(bad)  
   14000c8e1:	rex.X add BYTE PTR [rax],al
   14000c8e4:	add    al,BYTE PTR [rax]
   14000c8e6:	add    BYTE PTR [rax],al
   14000c8e8:	loopne 0x14000c92c
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	add    DWORD PTR [rax],eax
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	add    al,BYTE PTR [rbx+0x0]
   14000c8f3:	add    BYTE PTR [rax],al
   14000c8f5:	add    BYTE PTR [rax],al
   14000c8f7:	add    BYTE PTR [rip+0xffffffffff000043],bl        # 0x13f00c940
   14000c8fd:	(bad)  
   14000c8fe:	(bad)  
   14000c8ff:	inc    DWORD PTR [rcx]
   14000c901:	adc    eax,0x74150008
   14000c906:	or     DWORD PTR [rax],eax
   14000c908:	adc    eax,0x15000864
   14000c90d:	xor    al,0x7
   14000c90f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0da47
   14000c915:	sbb    DWORD PTR [rdx],ecx
   14000c917:	add    BYTE PTR [rcx],bl
   14000c919:	je     0x14000c928
   14000c91b:	add    BYTE PTR [rcx],bl
   14000c91d:	fs or  al,0x0
   14000c920:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14000c924:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000c927:	add    BYTE PTR [rcx],bl
   14000c929:	jb     0x14000c940
   14000c92b:	loopne 0x14000c92e
   14000c92d:	sbb    DWORD PTR [rdx],ecx
   14000c92f:	add    BYTE PTR [rcx],bl
   14000c931:	je     0x14000c93c
   14000c933:	add    BYTE PTR [rcx],bl
   14000c935:	or     BYTE PTR fs:[rax],al
   14000c938:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000c93c:	sbb    DWORD PTR [rsi+rax*1],esi
   14000c93f:	add    BYTE PTR [rcx],bl
   14000c941:	xor    dl,BYTE PTR [rip+0x21401e0]        # 0x14214cb27
   14000c947:	add    BYTE PTR [rdx+rdx*4],dl
   14000c94a:	adc    BYTE PTR [rax],dh
   14000c94c:	sbb    DWORD PTR [rdx],esi
   14000c94e:	or     eax,DWORD PTR [rax]
   14000c950:	and    DWORD PTR [rdi+rdx*1+0x1],esp
   14000c954:	and    DWORD PTR [rsi+rdx*1],esi
   14000c957:	add    DWORD PTR [rcx],esp
   14000c959:	add    DWORD PTR [rax],edx
   14000c95b:	add    DWORD PTR [rdx],edx
   14000c95d:	lock adc al,ah
   14000c960:	(bad)  
   14000c961:	ror    BYTE PTR [rax+rsi*2],0xb
   14000c965:	push   rax
   14000c966:	add    BYTE PTR [rax],al
   14000c968:	add    BYTE PTR [rcx+0x0],ch
   14000c96b:	add    BYTE PTR [rax+0x8],dh
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	sbb    DWORD PTR [rbx],esi
   14000c972:	or     eax,DWORD PTR [rax]
   14000c974:	and    ah,ah
   14000c976:	push   rbx
   14000c977:	add    BYTE PTR [rdx],ah
   14000c979:	je     0x14000c9cd
   14000c97b:	add    BYTE PTR [rdx],ah
   14000c97d:	fs push rcx
   14000c97f:	add    BYTE PTR [rdx],ah
   14000c981:	xor    al,0x50
   14000c983:	add    BYTE PTR [rdx],ah
   14000c985:	add    DWORD PTR [rsi+0x0],ecx
   14000c988:	adc    al,0x50
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	add    BYTE PTR [rcx+0x0],ch
   14000c98f:	add    BYTE PTR [rax+0x2],ah
   14000c992:	add    BYTE PTR [rax],al
   14000c994:	add    DWORD PTR [rip+0x34050002],eax        # 0x17405c99c
   14000c99a:	add    DWORD PTR [rax],eax
   14000c99c:	add    DWORD PTR [rdx],edx
   14000c99e:	add    eax,0xe421200
   14000c9a3:	jo     0x14000c9b2
   14000c9a5:	(bad)  
   14000c9a6:	or     al,0x50
   14000c9a8:	or     esi,DWORD PTR [rax]
   14000c9aa:	add    BYTE PTR [rax],al
   14000c9ac:	sbb    DWORD PTR [rsi],esp
   14000c9ae:	add    eax,0x54341500
   14000c9b3:	add    BYTE PTR [rip+0x6005201],dl        # 0x146011bba
   14000c9b9:	push   rax
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	add    BYTE PTR [rcx+0x0],ch
   14000c9bf:	add    BYTE PTR [rax+0x19000002],al
   14000c9c5:	or     DWORD PTR cs:[rax],eax
   14000c9c8:	sbb    eax,0x1d005264
   14000c9cd:	xor    al,0x51
   14000c9cf:	add    BYTE PTR [rip+0xe004c01],bl        # 0x14e0115d6
   14000c9d5:	loopne 0x14000c9e3
   14000c9d7:	jo     0x14000c9e4
   14000c9d9:	push   rax
   14000c9da:	add    BYTE PTR [rax],al
   14000c9dc:	add    BYTE PTR [rcx+0x0],ch
   14000c9df:	add    BYTE PTR [rax+0x2],dl
   14000c9e2:	add    BYTE PTR [rax],al
   14000c9e4:	add    DWORD PTR [rdi],eax
   14000c9e6:	add    DWORD PTR [rax],eax
   14000c9e8:	(bad)  
   14000c9e9:	(bad)  
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	add    DWORD PTR [rsi],eax
   14000c9ee:	add    al,BYTE PTR [rax]
   14000c9f0:	(bad)  
   14000c9f1:	jb     0x14000c9f5
   14000c9f3:	xor    BYTE PTR [rcx],bl
   14000c9f5:	or     DWORD PTR cs:[rax],eax
   14000c9f8:	sbb    eax,0x1d005264
   14000c9fd:	xor    al,0x50
   14000c9ff:	add    BYTE PTR [rip+0xe004c01],bl        # 0x14e011606
   14000ca05:	loopne 0x14000ca13
   14000ca07:	jo     0x14000ca14
   14000ca09:	push   rax
   14000ca0a:	add    BYTE PTR [rax],al
   14000ca0c:	add    BYTE PTR [rcx+0x0],ch
   14000ca0f:	add    BYTE PTR [rax+0x2],dl
   14000ca12:	add    BYTE PTR [rax],al
   14000ca14:	sbb    DWORD PTR [rip+0x34130009],esp        # 0x17413ca23
   14000ca1a:	rex.WRXB add BYTE PTR [r11],r10b
   14000ca1d:	add    DWORD PTR [rax+0x0],ecx
   14000ca20:	or     al,0xf0
   14000ca22:	or     ah,al
   14000ca24:	or     BYTE PTR [rax+0x7],dh
   14000ca27:	(bad)  
   14000ca28:	(bad)  
   14000ca29:	push   rax
   14000ca2a:	add    BYTE PTR [rax],al
   14000ca2c:	add    BYTE PTR [rcx+0x0],ch
   14000ca2f:	add    BYTE PTR [rax],dh
   14000ca31:	add    al,BYTE PTR [rax]
   14000ca33:	add    BYTE PTR [rcx],al
   14000ca35:	adc    eax,0x64150008
   14000ca3a:	or     eax,DWORD PTR [rax]
   14000ca3c:	adc    eax,0x15000834
   14000ca41:	xor    cl,BYTE PTR [rsi]
   14000ca43:	lock or al,0x70
   14000ca46:	or     edx,DWORD PTR [rax+0x1]
   14000ca49:	or     al,0x6
   14000ca4b:	add    BYTE PTR [rsp+rsi*1],cl
   14000ca4e:	or     eax,DWORD PTR [rax]
   14000ca50:	or     al,0x32
   14000ca52:	or     BYTE PTR [rax+0x7],dh
   14000ca55:	(bad)  
   14000ca56:	(bad)  
   14000ca57:	push   rax
   14000ca58:	add    DWORD PTR [rcx+rax*1],eax
   14000ca5b:	add    BYTE PTR [rdx+riz*2],al
   14000ca5e:	add    BYTE PTR [rax],al
   14000ca60:	add    DWORD PTR [rdx],ecx
   14000ca62:	add    al,BYTE PTR [rax]
   14000ca64:	or     dh,BYTE PTR [rdx]
   14000ca66:	(bad)  
   14000ca67:	xor    BYTE PTR [rcx],cl
   14000ca69:	sbb    al,0xb
   14000ca6b:	add    BYTE PTR [rsp+rsi*2],bl
   14000ca6e:	sbb    al,0x0
   14000ca70:	sbb    al,0x64
   14000ca72:	sbb    eax,DWORD PTR [rax]
   14000ca74:	sbb    al,0x34
   14000ca76:	sbb    al,BYTE PTR [rax]
   14000ca78:	sbb    al,0x1
   14000ca7a:	(bad)  
   14000ca7b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0de71
   14000ca81:	rol    BYTE PTR [rax],0x0
   14000ca84:	mov    dh,0x64
   14000ca86:	add    BYTE PTR [rax],al
   14000ca88:	add    DWORD PTR [rax],eax
   14000ca8a:	add    BYTE PTR [rax],al
   14000ca8c:	(bad)  
   14000ca8d:	pop    rbp
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	push   rsi
   14000ca91:	pop    rdi
   14000ca92:	add    BYTE PTR [rax],al
   14000ca94:	fild   QWORD PTR [rbx+0x0]
   14000ca97:	add    BYTE PTR [rsi+0x5f],dl
   14000ca9a:	add    BYTE PTR [rax],al
   14000ca9c:	add    DWORD PTR [rsi],eax
   14000ca9e:	add    al,BYTE PTR [rax]
   14000caa0:	(bad)  
   14000caa1:	xor    al,BYTE PTR [rdx]
   14000caa3:	push   rax
   14000caa4:	add    BYTE PTR [rax],al
   14000caa6:	add    BYTE PTR [rax],al
   14000caa8:	add    DWORD PTR [rax],eax
   14000caaa:	add    BYTE PTR [rax],al
   14000caac:	adc    DWORD PTR [rdx],ecx
   14000caae:	add    al,0x0
   14000cab0:	or     dh,BYTE PTR [rsi+rax*1]
   14000cab3:	add    BYTE PTR [rdx],cl
   14000cab5:	xor    al,BYTE PTR [rsi]
   14000cab7:	jo     0x14000ca6f
   14000cab9:	add    BYTE PTR fs:[rax],al
   14000cabc:	add    DWORD PTR [rax],eax
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	rex.RB (bad) 
   14000cac2:	add    BYTE PTR [rax],al
   14000cac4:	mov    ah,BYTE PTR [rax+0x0]
   14000cac7:	add    BYTE PTR [rbx],al
   14000cac9:	ins    BYTE PTR es:[rdi],dx
   14000caca:	add    BYTE PTR [rax],al
   14000cacc:	add    BYTE PTR [rax],al
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204cad7
   14000cad6:	add    BYTE PTR [rax],al
   14000cad8:	(bad)  
   14000cad9:	(bad)  
   14000cada:	add    BYTE PTR [rax],al
   14000cadc:	movabs al,ds:0xffffffff000098
   14000cae5:	add    BYTE PTR [rax],al
   14000cae7:	add    bh,bh
   14000cae9:	(bad)  
   14000caea:	(bad)  
   14000caeb:	inc    DWORD PTR [rax]
	...
   14000caf5:	add    BYTE PTR [rax],al
   14000caf7:	add    BYTE PTR [rcx],al
   14000caf9:	add    BYTE PTR [rax],al
   14000cafb:	add    BYTE PTR [rcx],al
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    BYTE PTR [rbx+rcx*8],al
   14000cb02:	add    BYTE PTR [rax],al
   14000cb04:	add    BYTE PTR [rax],al
	...
   14000cb0f:	add    BYTE PTR [rsp+rbp*2],ah
   14000cb12:	add    BYTE PTR [rax],al
   14000cb14:	cmp    BYTE PTR [rax],al
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	fsub   QWORD PTR [rax+0x0]
   14000cb1b:	add    bh,bh
   14000cb1d:	(bad)  
   14000cb1e:	(bad)  
   14000cb1f:	(bad)  
   14000cb20:	jmp    0x14000cb85
   14000cb25:	add    BYTE PTR [rax],al
   14000cb27:	add    bh,ch
   14000cb29:	(bad)  
   14000cb2a:	add    BYTE PTR [rax],al
   14000cb2c:	(bad)  
   14000cb2d:	(bad)  
   14000cb2e:	(bad)  
   14000cb2f:	jmp    QWORD PTR [rsp+rbp*2]
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	add    BYTE PTR [rax],al
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	xor    DWORD PTR [rax+rax*1+0x0],ebp
   14000cb3c:	add    DWORD PTR [rax],eax
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	ss ins BYTE PTR es:[rdi],dx
   14000cb42:	add    BYTE PTR [rax],al
   14000cb44:	add    BYTE PTR [rax],al
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	sbb    DWORD PTR [rdx],ecx
   14000cb4a:	add    al,BYTE PTR [rax]
   14000cb4c:	or     dh,BYTE PTR [rdx]
   14000cb4e:	(bad)  
   14000cb4f:	push   rax
   14000cb50:	(bad)  
   14000cb51:	(bad)  
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	movabs al,ds:0x400010409000098
   14000cb5d:	and    al,BYTE PTR [rax]
   14000cb5f:	add    BYTE PTR [rsi+0x1000064],dh
   14000cb65:	add    BYTE PTR [rax],al
   14000cb67:	add    BYTE PTR [rdx+riz*2],bh
   14000cb6a:	add    BYTE PTR [rax],al
   14000cb6c:	jb     0x14000cbd0
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	add    DWORD PTR [rax],eax
   14000cb72:	add    BYTE PTR [rax],al
   14000cb74:	jb     0x14000cbd8
   14000cb76:	add    BYTE PTR [rax],al
   14000cb78:	or     DWORD PTR [rdx],ecx
   14000cb7a:	add    al,0x0
   14000cb7c:	or     dh,BYTE PTR [rsi+rax*1]
   14000cb7f:	add    BYTE PTR [rdx],cl
   14000cb81:	xor    al,BYTE PTR [rsi]
   14000cb83:	jo     0x14000cb3b
   14000cb85:	add    BYTE PTR fs:[rax],al
   14000cb88:	add    DWORD PTR [rax],eax
   14000cb8a:	add    BYTE PTR [rax],al
   14000cb8c:	movsxd r8,DWORD PTR [r8]
   14000cb8f:	add    BYTE PTR [rax+0x50000063],al
   14000cb95:	ins    BYTE PTR es:[rdi],dx
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	and    BYTE PTR [rbx+0x0],0x0
   14000cb9c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dcba6
   14000cba2:	or     DWORD PTR [rax],eax
   14000cba4:	or     eax,0x1500632
   14000cba9:	add    al,0x1
   14000cbab:	add    BYTE PTR [rdx+riz*8],al
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	add    DWORD PTR [rdx+rax*1],ecx
   14000cbb3:	add    BYTE PTR [rcx+rax*1],cl
   14000cbb6:	adc    DWORD PTR [rax],eax
   14000cbb8:	add    DWORD PTR [rax],eax
   14000cbba:	add    BYTE PTR [rax],al
   14000cbbc:	add    DWORD PTR [rax],ebx
   14000cbbe:	add    DWORD PTR [rax],eax
   14000cbc0:	sbb    dl,al
   14000cbc2:	add    BYTE PTR [rax],al
   14000cbc4:	add    DWORD PTR [rax],ebx
   14000cbc6:	add    DWORD PTR [rax],eax
   14000cbc8:	sbb    dl,al
	...
   14000cbd2:	add    BYTE PTR [rax],al
   14000cbd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cbd5:	pop    rdx
   14000cbd6:	add    BYTE PTR [rax],al
   14000cbd8:	add    BYTE PTR [rax],al
   14000cbda:	add    BYTE PTR [rax],al
   14000cbdc:	lock retf 
	...
   14000cbee:	add    BYTE PTR [rax],al
   14000cbf0:	add    al,BYTE PTR [rax]
   14000cbf2:	add    BYTE PTR [rax],al
   14000cbf4:	or     ah,cl
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	xor    ah,cl
	...
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	adc    BYTE PTR [rax],al
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	and    cl,ah
   14000cc0e:	add    BYTE PTR [rax],al
   14000cc10:	add    BYTE PTR [rax],al
   14000cc12:	add    BYTE PTR [rax],al
   14000cc14:	(bad)  
   14000cc15:	(bad)  
   14000cc16:	(bad)  
   14000cc17:	inc    DWORD PTR [rax]
   14000cc19:	add    BYTE PTR [rax],al
   14000cc1b:	add    BYTE PTR [rax],bl
   14000cc1d:	add    BYTE PTR [rax],al
   14000cc1f:	add    ah,bl
   14000cc21:	pop    rcx
	...
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	mov    al,ah
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	add    BYTE PTR [rax],al
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	(bad)  
   14000cc3d:	(bad)  
   14000cc3e:	(bad)  
   14000cc3f:	inc    DWORD PTR [rax]
   14000cc41:	add    BYTE PTR [rax],al
   14000cc43:	add    BYTE PTR [rax],bl
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	add    BYTE PTR [rsi],bh
   14000cc49:	(bad)  
	...
   14000cc5a:	add    BYTE PTR [rax],al
   14000cc5c:	test   al,0xe0
   14000cc5e:	add    BYTE PTR [rax],al
   14000cc60:	add    BYTE PTR [rax],al
   14000cc62:	add    BYTE PTR [rax],al
   14000cc64:	(bad)  
   14000cc65:	(bad)  
   14000cc66:	(bad)  
   14000cc67:	inc    DWORD PTR [rax]
   14000cc69:	add    BYTE PTR [rax],al
   14000cc6b:	add    BYTE PTR [rax],bl
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    BYTE PTR [rdx+rbx*2+0x0],bh
	...
   14000cc83:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	movabs al,ds:0xcc
	...
   14000cc9d:	add    BYTE PTR [rax],al
   14000cc9f:	add    BYTE PTR [rbx],al
   14000cca1:	add    BYTE PTR [rax],al
   14000cca3:	add    al,al
   14000cca5:	int3   
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	pop    rax
   14000cca9:	int3   
   14000ccaa:	add    BYTE PTR [rax],al
   14000ccac:	xor    ah,cl
	...
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	shl    al,1
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	add    BYTE PTR [rax],al
   14000ccca:	add    BYTE PTR [rax],al
   14000cccc:	(bad)  
   14000cccd:	(bad)  
   14000ccce:	(bad)  
   14000cccf:	inc    DWORD PTR [rax]
   14000ccd1:	add    BYTE PTR [rax],al
   14000ccd3:	add    BYTE PTR [rax],bl
   14000ccd5:	add    BYTE PTR [rax],al
   14000ccd7:	add    BYTE PTR [rdx+rbx*2+0x0],bh
	...
   14000cceb:	add    BYTE PTR [rdx+rbx*2+0x0],bh
   14000ccf2:	add    BYTE PTR [rax],al
   14000ccf4:	or     ch,cl
	...
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	add    eax,DWORD PTR [rax]
   14000cd0a:	add    BYTE PTR [rax],al
   14000cd0c:	sub    ch,cl
   14000cd0e:	add    BYTE PTR [rax],al
   14000cd10:	pop    rax
   14000cd11:	int3   
   14000cd12:	add    BYTE PTR [rax],al
   14000cd14:	xor    ah,cl
	...
   14000cd2a:	add    BYTE PTR [rax],al
   14000cd2c:	clc    
   14000cd2d:	loopne 0x14000cd2f
   14000cd2f:	add    BYTE PTR [rax],al
   14000cd31:	add    BYTE PTR [rax],al
   14000cd33:	add    bh,bh
   14000cd35:	(bad)  
   14000cd36:	(bad)  
   14000cd37:	inc    DWORD PTR [rax]
   14000cd39:	add    BYTE PTR [rax],al
   14000cd3b:	add    BYTE PTR [rax],bl
   14000cd3d:	add    BYTE PTR [rax],al
   14000cd3f:	add    BYTE PTR [rdx+rbx*2+0x0],bh
	...
   14000cd4f:	add    BYTE PTR [rcx],al
   14000cd51:	add    BYTE PTR [rax],al
   14000cd53:	add    al,ah
   14000cd55:	cwde   
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	and    bh,ah
   14000cd5a:	add    BYTE PTR [rax],al
   14000cd5c:	adc    BYTE PTR [rax],al
   14000cd5e:	add    DWORD PTR [rax],eax
   14000cd60:	ror    ch,0x0
   14000cd63:	add    BYTE PTR [rax],al
   14000cd65:	(bad)  
	...
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	add    DWORD PTR [rax],eax
   14000cd72:	add    BYTE PTR [rax],al
   14000cd74:	adc    BYTE PTR [rcx-0x18d80000],bl
   14000cd7a:	add    BYTE PTR [rax],al
   14000cd7c:	add    BYTE PTR [rax],al
   14000cd7e:	add    DWORD PTR [rax],eax
   14000cd80:	mov    al,0xcd
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	adc    dh,cl
	...
   14000cdae:	add    BYTE PTR [rax],al
   14000cdb0:	in     al,0xcd
	...
   14000cdbe:	add    BYTE PTR [rax],al
   14000cdc0:	ror    ch,1
	...
   14000cdd2:	push   rbx
   14000cdd3:	rex.W
   14000cdd4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000cdd6:	jb     0x14000ce45
   14000cdd8:	(bad)  
   14000cdd9:	je     0x14000ce1f
   14000cddb:	(bad)  
   14000cddc:	je     0x14000ce43
   14000cdde:	push   rsp
   14000cddf:	imul   ebp,DWORD PTR [rbp+0x65],0x57
   14000cde6:	push   rbx
   14000cde7:	rex.W
   14000cde8:	rex.RXB
   14000cde9:	gs je  0x14000ce37
   14000cdec:	outs   dx,BYTE PTR ds:[rsi]
   14000cded:	outs   dx,DWORD PTR ds:[rsi]
   14000cdee:	ja     0x14000ce5e
   14000cdf0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000cdf2:	ins    BYTE PTR es:[rdi],dx
   14000cdf3:	fs gs jb 0x14000ce47
   14000cdf7:	(bad)  
   14000cdf8:	je     0x14000ce62
	...
   14000ce1e:	add    BYTE PTR [rax],al
   14000ce20:	and    bl,dl
	...
   14000ce2a:	add    BYTE PTR [rax],al
   14000ce2c:	sub    dh,dl
   14000ce2e:	add    BYTE PTR [rax],al
   14000ce30:	loopne 0x14000cdb4
   14000ce32:	add    BYTE PTR [rax],al
   14000ce34:	sbb    cl,dl
	...
   14000ce3e:	add    BYTE PTR [rax],al
   14000ce40:	rex.WX fiadd DWORD PTR [rax]
   14000ce43:	add    al,bl
   14000ce45:	add    BYTE PTR [rax],0x0
   14000ce48:	call   0x14000cf1f
   14000ce4d:	add    BYTE PTR [rax],al
   14000ce4f:	add    BYTE PTR [rax],al
   14000ce51:	add    BYTE PTR [rax],al
   14000ce53:	add    BYTE PTR [rdx+rbx*8+0x0],dh
   14000ce57:	add    BYTE PTR [rax+0x30000082],ch
   14000ce5d:	rol    BYTE PTR [rax],cl
	...
   14000ce67:	add    BYTE PTR [rdx+rbx*8-0x7e100000],bl
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	nop
   14000ce71:	rol    DWORD PTR [rax],1
	...
   14000ce7b:	add    BYTE PTR [rsi+0x500000da],bh
   14000ce81:	add    DWORD PTR [rax],0xd09000
	...
   14000ce8f:	add    ah,ch
   14000ce91:	fiadd  DWORD PTR [rax]
   14000ce93:	add    BYTE PTR [rax-0x80],dl
   14000ce96:	add    BYTE PTR [rax],al
   14000ce98:	lock rol BYTE PTR [rax],1
	...
   14000cea3:	add    BYTE PTR [rsi],dl
   14000cea5:	fild   DWORD PTR [rax]
   14000cea7:	add    BYTE PTR [rax+0x40000080],dh
   14000cead:	rol    BYTE PTR [rax],1
	...
   14000ceb7:	add    BYTE PTR [rsi],dh
   14000ceb9:	fild   DWORD PTR [rax]
   14000cebb:	add    BYTE PTR [rax],al
   14000cebd:	add    BYTE PTR [rax],0x0
   14000cec0:	adc    dl,0x0
	...
   14000cecb:	add    BYTE PTR [rsi-0x25],dl
   14000cece:	add    BYTE PTR [rax],al
   14000ced0:	rex (bad) 
   14000ced2:	add    BYTE PTR [rax],al
   14000ced4:	mov    eax,0xd0
   14000ced9:	add    BYTE PTR [rax],al
   14000cedb:	add    BYTE PTR [rax],al
   14000cedd:	add    BYTE PTR [rax],al
   14000cedf:	add    BYTE PTR [rdx-0x25],bh
   14000cee2:	add    BYTE PTR [rax],al
   14000cee4:	js     0x14000ce66
   14000cee6:	add    BYTE PTR [rax],al
   14000cee8:	(bad)  
   14000cee9:	rol    BYTE PTR [rax],cl
	...
   14000cef3:	add    BYTE PTR [rdx+0x200000db],bl
   14000cef9:	(bad)  
   14000cefa:	add    BYTE PTR [rax],al
   14000cefc:	test   al,0xd2
	...
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	mov    esi,0x680000db
   14000cf0d:	(bad)  
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	cwde   
   14000cf11:	rol    BYTE PTR [rax],cl
	...
   14000cf1b:	add    dh,ah
   14000cf1d:	fild   DWORD PTR [rax]
   14000cf1f:	add    BYTE PTR [rax-0x7e],bl
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	loopne 0x14000cef6
	...
   14000cf2e:	add    BYTE PTR [rax],al
   14000cf30:	or     ah,bl
   14000cf32:	add    BYTE PTR [rax],al
   14000cf34:	movabs al,ds:0xd1a0000080
   14000cf3d:	add    BYTE PTR [rax],al
   14000cf3f:	add    BYTE PTR [rax],al
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	add    BYTE PTR [rdx],ch
   14000cf45:	fadd   QWORD PTR [rax]
   14000cf47:	add    BYTE PTR [rax-0x7f],ah
   14000cf4a:	add    BYTE PTR [rax],al
   14000cf4c:	rcl    cl,1
	...
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	push   rsp
   14000cf59:	fadd   QWORD PTR [rax]
   14000cf5b:	add    BYTE PTR [rax+0x81],dl
   14000cf61:	rol    BYTE PTR [rax],cl
	...
   14000cf6b:	add    BYTE PTR [rax-0x24],bh
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	rol    BYTE PTR [rcx-0x2eb00000],0x0
	...
   14000cf7f:	add    BYTE PTR [rsi+0x100000dc],bl
   14000cf85:	add    DWORD PTR [rax],0xd31000
	...
   14000cf93:	add    ah,bl
   14000cf95:	fadd   QWORD PTR [rax]
   14000cf97:	add    al,dl
   14000cf99:	(bad)  
   14000cf9a:	add    BYTE PTR [rax],al
   14000cf9c:	or     cl,dl
	...
   14000cfa6:	add    BYTE PTR [rax],al
   14000cfa8:	add    bl,ch
   14000cfaa:	add    BYTE PTR [rax],al
   14000cfac:	enter  0x80,0x0
   14000cfb0:	mov    eax,0xd2
   14000cfb5:	add    BYTE PTR [rax],al
   14000cfb7:	add    BYTE PTR [rax],al
   14000cfb9:	add    BYTE PTR [rax],al
   14000cfbb:	add    BYTE PTR [rsi+rbx*8+0x0],ch
   14000cfbf:	add    BYTE PTR [rax-0x7e],bh
   14000cfc2:	add    BYTE PTR [rax],al
   14000cfc4:	loopne 0x14000cf97
	...
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	xchg   esi,eax
   14000cfd1:	fiadd  WORD PTR [rax]
   14000cfd3:	add    BYTE PTR [rax+0x60000081],ah
   14000cfd9:	rol    DWORD PTR [rax],1
	...
   14000cfe3:	add    BYTE PTR [rdx+0x200000de],bh
   14000cfe9:	add    DWORD PTR [rax],0xd07800
	...
   14000cff7:	add    dl,bl
   14000cff9:	fiadd  WORD PTR [rax]
   14000cffb:	add    BYTE PTR [rax],bh
   14000cffd:	add    BYTE PTR [rax],0x0
   14000d000:	fcom   st(2)
	...
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	sub    al,0xdf
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	cwde   
   14000d011:	(bad)  
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	and    dl,dl
	...
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	push   rdx
   14000d021:	fild   WORD PTR [rax]
   14000d023:	add    al,ah
   14000d025:	add    DWORD PTR [rax],0x0
	...
   14000d03f:	add    BYTE PTR [rax+0xd7],bl
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rdx+0xd7],ch
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rdi+rdx*8+0x0],bh
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	fcmovbe st,st(7)
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	add    BYTE PTR [rax],al
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	mov    eax,ds
   14000d062:	add    BYTE PTR [rax],al
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	(bad)  
   14000d069:	fadd   DWORD PTR [rax]
	...
   14000d077:	add    BYTE PTR [rsi+rbx*8],bh
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	add    BYTE PTR [rax],al
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	push   rsp
   14000d081:	fiadd  WORD PTR [rax]
	...
   14000d08f:	add    BYTE PTR [rsi],cl
   14000d091:	fld    DWORD PTR [rax]
   14000d093:	add    BYTE PTR [rax],al
   14000d095:	add    BYTE PTR [rax],al
   14000d097:	add    BYTE PTR [rax-0x28],dl
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	add    BYTE PTR [rax],al
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	(bad)  
   14000d0a1:	fld    DWORD PTR [rax]
   14000d0a3:	add    BYTE PTR [rax],al
   14000d0a5:	add    BYTE PTR [rax],al
   14000d0a7:	add    BYTE PTR [rdi+rdx*8+0x0],bh
	...
   14000d0b7:	add    BYTE PTR [rsi],al
   14000d0b9:	fadd   DWORD PTR [rax]
   14000d0bb:	add    BYTE PTR [rax],al
   14000d0bd:	add    BYTE PTR [rax],al
   14000d0bf:	add    BYTE PTR [rbx*8+0x0],bh
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	in     al,dx
   14000d0c9:	fld    QWORD PTR [rax]
   14000d0cb:	add    BYTE PTR [rax],al
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    BYTE PTR [rax],al
   14000d0d1:	fiadd  WORD PTR [rax]
	...
   14000d0df:	add    dh,al
   14000d0e1:	fadd   DWORD PTR [rax]
	...
   14000d0ef:	add    BYTE PTR [rdi+rdx*8+0x0],cl
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	cmp    al,0xda
	...
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	add    bh,bl
	...
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	fcom   st(6)
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	add    BYTE PTR [rax],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	mov    dl,0xd6
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	add    BYTE PTR [rax],al
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	(bad)  
   14000d129:	(bad)  
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	add    BYTE PTR [rax],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	int3   
   14000d131:	xlat   BYTE PTR ds:[rbx]
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	pushf  
   14000d139:	(bad)  
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	add    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	mov    dl,dh
	...
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	sub    bl,dl
	...
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	fiadd  WORD PTR es:[rax]
   14000d163:	add    BYTE PTR [rax],al
   14000d165:	add    BYTE PTR [rax],al
   14000d167:	add    BYTE PTR [rsi],dl
   14000d169:	fiadd  WORD PTR [rax]
   14000d16b:	add    BYTE PTR [rax],al
   14000d16d:	add    BYTE PTR [rax],al
   14000d16f:	add    BYTE PTR [rax+0xdd],ch
   14000d175:	add    BYTE PTR [rax],al
   14000d177:	add    dl,bl
   14000d179:	fld    QWORD PTR [rax]
   14000d17b:	add    BYTE PTR [rax],al
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    al,al
   14000d181:	fld    QWORD PTR [rax]
	...
   14000d18f:	add    BYTE PTR [rdx-0x29],ch
	...
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	cld    
   14000d1a1:	fadd   DWORD PTR [rax]
   14000d1a3:	add    BYTE PTR [rax],al
   14000d1a5:	add    BYTE PTR [rax],al
   14000d1a7:	add    BYTE PTR [rsi-0x27],al
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	add    BYTE PTR [rax],al
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	pop    rsp
   14000d1b1:	fld    DWORD PTR [rax]
   14000d1b3:	add    BYTE PTR [rax],al
   14000d1b5:	add    BYTE PTR [rax],al
   14000d1b7:	add    dl,ch
   14000d1b9:	fld    DWORD PTR [rax]
   14000d1bb:	add    BYTE PTR [rax],al
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	add    dh,bh
   14000d1c1:	fld    DWORD PTR [rax]
	...
   14000d1cf:	add    BYTE PTR [rcx+rbx*8],ch
	...
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	mov    ch,bl
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	add    BYTE PTR [rax],al
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	jp     0x14000d1c7
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	cwde   
   14000d1f1:	fld    QWORD PTR [rax]
	...
   14000d1ff:	add    BYTE PTR [rcx+rbx*8+0x0],cl
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	mov    edx,0xd9
   14000d20d:	add    BYTE PTR [rax],al
   14000d20f:	add    BYTE PTR [rax+0xd9],ah
	...
   14000d21d:	add    BYTE PTR [rax],al
   14000d21f:	add    BYTE PTR [rdx],bl
   14000d221:	fild   WORD PTR [rax]
	...
   14000d22f:	add    BYTE PTR [rax],dh
   14000d231:	xlat   BYTE PTR ds:[rbx]
   14000d232:	add    BYTE PTR [rax],al
   14000d234:	add    BYTE PTR [rax],al
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	test   al,0xd8
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	add    BYTE PTR [rax],al
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	mov    edx,0xd8
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    ah,dh
   14000d249:	fadd   DWORD PTR [rax]
   14000d24b:	add    BYTE PTR [rax],al
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rsi],dl
   14000d251:	xlat   BYTE PTR ds:[rbx]
	...
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	and    al,bl
   14000d262:	add    BYTE PTR [rax],al
   14000d264:	add    BYTE PTR [rax],al
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	jl     0x14000d242
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	add    BYTE PTR [rax],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	jb     0x14000d24b
	...
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	out    dx,al
   14000d281:	xlat   BYTE PTR ds:[rbx]
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	add    BYTE PTR [rax],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	adc    bl,dl
	...
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	(bad)  
   14000d299:	fadd   DWORD PTR [rax]
	...
   14000d2a7:	add    BYTE PTR [rax],dh
   14000d2a9:	fadd   DWORD PTR [rax]
	...
   14000d2b7:	add    BYTE PTR [rdx-0x23],cl
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	add    BYTE PTR [rax],al
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	pop    rax
   14000d2c1:	fld    QWORD PTR [rax]
   14000d2c3:	add    BYTE PTR [rax],al
   14000d2c5:	add    BYTE PTR [rax],al
   14000d2c7:	add    BYTE PTR [rax-0x23],ch
	...
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	or     al,0xdf
	...
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	add    bh,dl
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	add    BYTE PTR [rax],al
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	out    dx,al
   14000d2f1:	(bad)  
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	add    BYTE PTR [rax],al
   14000d2f6:	add    BYTE PTR [rax],al
   14000d2f8:	rex.R xlat BYTE PTR ds:[rbx]
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	add    BYTE PTR [rax],al
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	pop    rdx
   14000d301:	xlat   BYTE PTR ds:[rbx]
	...
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	(bad)  
   14000d311:	fadd   QWORD PTR [rax]
	...
   14000d31f:	add    BYTE PTR [rsi],ch
   14000d321:	fld    QWORD PTR [rax]
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rdx-0x2a],dh
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	add    BYTE PTR [rax],al
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	push   0xd6
   14000d335:	add    BYTE PTR [rax],al
   14000d337:	add    BYTE PTR [rdx-0x2a],bl
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	add    BYTE PTR [rax],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	push   rax
   14000d341:	(bad)  
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	add    BYTE PTR [rax],al
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	rex.W (bad) 
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	add    BYTE PTR [rax],al
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	xor    al,0xd6
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	add    BYTE PTR [rax],al
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	sbb    al,0xd6
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	add    BYTE PTR [rax],al
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	adc    dl,dh
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	add    BYTE PTR [rax],al
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	or     dh,dl
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	add    BYTE PTR [rax],al
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	lock (bad) 
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	in     al,0xd5
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	rcl    ch,1
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	add    BYTE PTR [rax],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	(bad)  
   14000d389:	(bad)  
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	mov    esi,0xd5
   14000d395:	add    BYTE PTR [rax],al
   14000d397:	add    BYTE PTR [rax-0x2c],dl
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d3a1:	(bad)  
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	xchg   edx,eax
   14000d3a9:	(bad)  
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	test   ch,dl
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	jbe    0x14000d38f
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	add    BYTE PTR [rax],al
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	push   0xffffffffffffffd5
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	add    BYTE PTR [rax],al
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	(bad)  
   14000d3c9:	(bad)  
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	add    BYTE PTR [rax],al
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	rex.X (bad) 
   14000d3d2:	add    BYTE PTR [rax],al
   14000d3d4:	add    BYTE PTR [rax],al
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	sub    dl,ch
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	or     al,0xd5
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	in     al,dx
   14000d3e9:	(bad)  
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	int3   
   14000d3f1:	(bad)  
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	add    BYTE PTR [rax],al
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	ret    0xd4
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rsp+rdx*8+0x0],ch
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	xchg   esi,eax
   14000d409:	(bad)  
   14000d40a:	add    BYTE PTR [rax],al
   14000d40c:	add    BYTE PTR [rax],al
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	mov    dl,ah
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	add    BYTE PTR [rax],al
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	adc    ah,0x0
   14000d41b:	add    BYTE PTR [rax],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    BYTE PTR [rsi-0x2c],dh
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	add    BYTE PTR [rax],al
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	push   0xffffffffffffffd4
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	(bad)  
   14000d431:	(bad)  
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	add    BYTE PTR [rax],al
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	mov    dh,0xd5
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	add    BYTE PTR [rax],al
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	jl     0x14000d421
	...
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	adc    al,0x0
   14000d452:	(bad)  
   14000d453:	(bad)  
   14000d454:	xor    eax,DWORD PTR [rax+0x59]
   14000d457:	pop    r8
   14000d459:	push   rax
   14000d45a:	rex.RB
   14000d45b:	pop    r8
   14000d45d:	rex pop rdx
   14000d45f:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000d466:	outs   dx,DWORD PTR ds:[rsi]
   14000d467:	jbe    0x14000d4ce
   14000d469:	add    BYTE PTR [rsi+0x75705f02],bl
   14000d46f:	jb     0x14000d4d6
   14000d471:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d474:	ins    BYTE PTR es:[rdi],dx
   14000d475:	add    BYTE PTR [rip+0x72655f01],al        # 0x1b266337c
   14000d47b:	jb     0x14000d4eb
   14000d47d:	outs   dx,DWORD PTR ds:[rsi]
   14000d47e:	add    BYTE PTR [rax],al
   14000d480:	sbb    BYTE PTR [rip+0x74736377],al        # 0x1b47437fd
   14000d486:	outs   dx,DWORD PTR ds:[rsi]
   14000d487:	ins    BYTE PTR es:[rdi],dx
   14000d488:	add    BYTE PTR [rax],al
   14000d48a:	mov    al,BYTE PTR [rbx]
   14000d48c:	pop    rdi
   14000d48d:	ja     0x14000d4f2
   14000d48f:	jae    0x14000d4fa
   14000d491:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000d494:	add    BYTE PTR [rax],al
   14000d496:	rex.WXB add BYTE PTR [r15+0x43],bl
   14000d49a:	js     0x14000d514
   14000d49c:	push   rsp
   14000d49d:	push   0x45776f72
   14000d4a2:	js     0x14000d507
   14000d4a4:	gs jo  0x14000d51b
   14000d4a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000d4ae:	pop    rdi
   14000d4af:	pop    rdi
   14000d4b0:	rex.XB js 0x14000d52b
   14000d4b3:	rex.RX jb 0x14000d517
   14000d4b6:	ins    DWORD PTR es:[rdi],dx
   14000d4b7:	gs rex.W (bad) 
   14000d4ba:	outs   dx,BYTE PTR ds:[rsi]
   14000d4bb:	fs ins BYTE PTR es:[rdi],dx
   14000d4bd:	gs jb  0x14000d4f3
   14000d4c0:	add    BYTE PTR [rax],al
   14000d4c2:	xchg   edx,eax
   14000d4c3:	add    al,0x6d
   14000d4c5:	gs ins DWORD PTR es:[rdi],dx
   14000d4c7:	movsxd esi,DWORD PTR [rax+0x79]
   14000d4ca:	add    BYTE PTR [rax],al
   14000d4cc:	or     al,BYTE PTR [rax]
   14000d4ce:	(bad)  
   14000d4cf:	(bad)  
   14000d4d0:	xor    BYTE PTR [rbp+0x78],ah
   14000d4d3:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d4d6:	je     0x14000d541
   14000d4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000d4d9:	outs   dx,BYTE PTR ds:[rsi]
   14000d4da:	rex
   14000d4db:	rex push rcx
   14000d4dd:	rex.RB
   14000d4de:	rex.B
   14000d4df:	rex.B
   14000d4e0:	rex
   14000d4e1:	rex.B
   14000d4e2:	rex.RB
   14000d4e3:	rex.X push rcx
   14000d4e5:	rex.RB
   14000d4e6:	rex.X
   14000d4e7:	rex.R
   14000d4e8:	rex pop rdx
   14000d4ea:	add    BYTE PTR [rax],al
   14000d4ec:	or     eax,DWORD PTR [rax]
   14000d4ee:	(bad)  
   14000d4ef:	(bad)  
   14000d4f0:	xor    BYTE PTR [rbp+0x78],ah
   14000d4f3:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d4f6:	je     0x14000d561
   14000d4f8:	outs   dx,DWORD PTR ds:[rsi]
   14000d4f9:	outs   dx,BYTE PTR ds:[rsi]
   14000d4fa:	rex
   14000d4fb:	rex push rcx
   14000d4fd:	rex.RB
   14000d4fe:	rex.B
   14000d4ff:	rex.B
   14000d500:	rex
   14000d501:	rex.B
   14000d502:	rex.RB
   14000d503:	rex.X push rcx
   14000d505:	rex.RB
   14000d506:	rex.X
   14000d507:	rex.R
   14000d508:	rex.W
   14000d509:	rex pop rdx
   14000d50b:	add    BYTE PTR [rax+rax*1],cl
   14000d50e:	(bad)  
   14000d50f:	(bad)  
   14000d510:	xor    BYTE PTR [rbp+0x78],ah
   14000d513:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d516:	je     0x14000d581
   14000d518:	outs   dx,DWORD PTR ds:[rsi]
   14000d519:	outs   dx,BYTE PTR ds:[rsi]
   14000d51a:	rex
   14000d51b:	rex push rcx
   14000d51d:	rex.RB
   14000d51e:	rex.B
   14000d51f:	rex.B
   14000d520:	rex
   14000d521:	rex.B
   14000d522:	rex.RB
   14000d523:	rex.X push rsi
   14000d525:	xor    BYTE PTR [rax+0x40],al
   14000d528:	pop    rdx
   14000d529:	add    BYTE PTR [rcx],dl
   14000d52b:	add    BYTE PTR [rdi],bh
   14000d52d:	(bad)  
   14000d52e:	xor    DWORD PTR [rbp+0x78],esp
   14000d531:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d534:	je     0x14000d59f
   14000d536:	outs   dx,DWORD PTR ds:[rsi]
   14000d537:	outs   dx,BYTE PTR ds:[rsi]
   14000d538:	rex
   14000d539:	rex push rbp
   14000d53b:	rex.RB
   14000d53c:	rex.B
   14000d53d:	rex.B
   14000d53e:	rex pop rax
   14000d540:	pop    rdx
   14000d541:	add    BYTE PTR [rcx],dh
   14000d543:	add    BYTE PTR [rdi],bh
   14000d545:	ja     0x14000d5af
   14000d547:	(bad)  
   14000d548:	je     0x14000d58a
   14000d54a:	gs js  0x14000d5b0
   14000d54d:	gs jo  0x14000d5c4
   14000d550:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000d557:	rex.X
   14000d558:	push   r8
   14000d55a:	rex.RB
   14000d55b:	rex.X
   14000d55c:	rex.R pop rax
   14000d55e:	pop    rdx
   14000d55f:	add    BYTE PTR [rsi+0x6c616d04],al
   14000d565:	ins    BYTE PTR es:[rdi],dx
   14000d566:	outs   dx,DWORD PTR ds:[rsi]
   14000d567:	movsxd eax,DWORD PTR [rax]
   14000d569:	add    BYTE PTR [rdi+0x61635f00],bh
   14000d56f:	ins    BYTE PTR es:[rdi],dx
   14000d570:	ins    BYTE PTR es:[rdi],dx
   14000d571:	outs   dx,BYTE PTR ds:[rsi]
   14000d572:	gs ja  0x14000d5dd
   14000d575:	add    BYTE PTR [rbp+0x0],dl
   14000d578:	pop    rdi
   14000d579:	pop    rax
   14000d57a:	movsxd esi,DWORD PTR [rax+0x74]
   14000d57d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000d586:	pop    rdi
   14000d587:	(bad)  
   14000d588:	ins    DWORD PTR es:[rdi],dx
   14000d589:	jae    0x14000d5f2
   14000d58b:	pop    rdi
   14000d58c:	gs js  0x14000d5f8
   14000d58f:	je     0x14000d591
   14000d591:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000d597:	addr32 gs je 0x14000d608
   14000d59b:	(bad)  
   14000d59c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d5a3:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000d5a9:	gs je  0x14000d60b
   14000d5ac:	(bad)  
   14000d5ad:	jo     0x14000d61f
   14000d5af:	pop    rdi
   14000d5b0:	je     0x14000d62b
   14000d5b2:	jo     0x14000d619
   14000d5b4:	add    BYTE PTR [rax],al
   14000d5b6:	xor    al,BYTE PTR [riz*2+0x746978]
   14000d5bd:	add    BYTE PTR [rsi],cl
   14000d5bf:	add    DWORD PTR [rdi+0x65],ebx
   14000d5c2:	js     0x14000d62d
   14000d5c4:	je     0x14000d5c6
   14000d5c6:	rol    DWORD PTR [rax],0x5f
   14000d5c9:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d5cc:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000d5d4:	jae    0x14000d63b
   14000d5d6:	je     0x14000d64d
   14000d5d8:	jae    0x14000d63f
   14000d5da:	jb     0x14000d649
   14000d5dc:	(bad)  
   14000d5dd:	je     0x14000d647
   14000d5df:	gs jb  0x14000d654
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	jge    0x14000d5e7
   14000d5e6:	pop    rdi
   14000d5e7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d5ee:	ins    DWORD PTR es:[rdi],dx
   14000d5ef:	add    BYTE PTR [rdi+0x0],dl
   14000d5f2:	pop    rdi
   14000d5f3:	pop    rdi
   14000d5f4:	rex.XB pop r15
   14000d5f6:	jae    0x14000d668
   14000d5f8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d5fc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d603:	ins    BYTE PTR es:[rdi],dx
   14000d604:	gs jb  0x14000d607
   14000d607:	add    BYTE PTR [rdx+0x63775f03],al
   14000d60d:	ins    DWORD PTR es:[rdi],dx
   14000d60e:	fs ins BYTE PTR es:[rdi],dx
   14000d610:	outs   dx,BYTE PTR ds:[rsi]
   14000d611:	add    BYTE PTR [rdi],ah
   14000d613:	add    DWORD PTR [rdi+0x66],ebx
   14000d616:	ins    DWORD PTR es:[rdi],dx
   14000d617:	outs   dx,DWORD PTR ds:[rsi]
   14000d618:	fs add BYTE PTR gs:[rax],al
   14000d61c:	rol    BYTE PTR [rax],cl
   14000d61e:	pop    rdi
   14000d61f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d622:	ins    DWORD PTR es:[rdi],dx
   14000d623:	outs   dx,DWORD PTR ds:[rsi]
   14000d624:	fs add BYTE PTR gs:[rax],al
   14000d628:	ins    DWORD PTR es:[rdi],dx
   14000d629:	jae    0x14000d6a1
   14000d62b:	movsxd esi,DWORD PTR [rdx+0x74]
   14000d62e:	cs fs ins BYTE PTR es:[rdi],dx
   14000d631:	ins    BYTE PTR es:[rdi],dx
   14000d632:	add    BYTE PTR [rax],al
   14000d634:	(bad)  
   14000d635:	add    BYTE PTR [rdi],bh
   14000d637:	je     0x14000d69e
   14000d639:	jb     0x14000d6a8
   14000d63b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d642:	pop    rcx
   14000d643:	pop    r8
   14000d645:	pop    rax
   14000d646:	pop    rdx
   14000d647:	add    dh,ah
   14000d649:	add    DWORD PTR [rdi+0x6c],ebx
   14000d64c:	outs   dx,DWORD PTR ds:[rsi]
   14000d64d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d650:	add    ebx,DWORD PTR [r15+0x75]
   14000d654:	outs   dx,BYTE PTR ds:[rsi]
   14000d655:	ins    BYTE PTR es:[rdi],dx
   14000d656:	outs   dx,DWORD PTR ds:[rsi]
   14000d657:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d65a:	jnp    0x14000d65c
   14000d65c:	pop    rdi
   14000d65d:	pop    rdi
   14000d65e:	fs ins BYTE PTR es:[rdi],dx
   14000d660:	ins    BYTE PTR es:[rdi],dx
   14000d661:	outs   dx,DWORD PTR ds:[rsi]
   14000d662:	outs   dx,BYTE PTR ds:[rsi]
   14000d663:	gs js  0x14000d6cf
   14000d666:	je     0x14000d668
   14000d668:	nop
   14000d669:	add    bl,BYTE PTR [rdi+0x6f]
   14000d66c:	outs   dx,BYTE PTR ds:[rsi]
   14000d66d:	gs js  0x14000d6d9
   14000d670:	je     0x14000d672
   14000d672:	adc    al,BYTE PTR [rax]
   14000d674:	(bad)  
   14000d675:	(bad)  
   14000d676:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000d67a:	gs pop rdi
   14000d67c:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000d683:	rex.RB
   14000d684:	rex.B
   14000d685:	rex.B
   14000d686:	rex pop rax
   14000d688:	pop    rdx
   14000d689:	add    BYTE PTR [rdi],dl
   14000d68b:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000d68f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000d698:	js     0x14000d6f1
   14000d69a:	add    BYTE PTR [rax],al
   14000d69c:	adc    al,BYTE PTR [rax]
   14000d69e:	rex.RXB
   14000d69f:	gs je  0x14000d6ef
   14000d6a2:	outs   dx,DWORD PTR ds:[rsi]
   14000d6a3:	fs jne 0x14000d712
   14000d6a6:	gs rex.W (bad) 
   14000d6a9:	outs   dx,BYTE PTR ds:[rsi]
   14000d6aa:	fs ins BYTE PTR es:[rdi],dx
   14000d6ac:	gs rex.RB js 0x14000d707
   14000d6b0:	add    BYTE PTR [rax],al
   14000d6b2:	adc    eax,DWORD PTR [rax]
   14000d6b4:	rex.RXB
   14000d6b5:	gs je  0x14000d705
   14000d6b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d6b9:	fs jne 0x14000d728
   14000d6bc:	gs rex.W (bad) 
   14000d6bf:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c0:	fs ins BYTE PTR es:[rdi],dx
   14000d6c2:	gs push rdi
   14000d6c4:	add    BYTE PTR [rax],al
   14000d6c6:	adc    al,0x0
   14000d6c8:	rex.RXB
   14000d6c9:	gs je  0x14000d71c
   14000d6cc:	jb     0x14000d73d
   14000d6ce:	movsxd eax,DWORD PTR [rcx+0x64]
   14000d6d1:	fs jb  0x14000d739
   14000d6d4:	jae    0x14000d749
   14000d6d6:	add    BYTE PTR [rax],al
   14000d6d8:	(bad)  
   14000d6d9:	add    BYTE PTR [rdi+0x65],al
   14000d6dc:	je     0x14000d72b
   14000d6de:	outs   dx,DWORD PTR ds:[rsi]
   14000d6df:	fs jne 0x14000d74e
   14000d6e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000d6ec:	add    BYTE PTR [rax],al
   14000d6ee:	add    eax,0x65764500
   14000d6f3:	outs   dx,BYTE PTR ds:[rsi]
   14000d6f4:	je     0x14000d74b
   14000d6f6:	outs   dx,BYTE PTR ds:[rsi]
   14000d6f7:	jb     0x14000d75e
   14000d6f9:	imul   esi,DWORD PTR [ebx+0x74],0x9007265
   14000d701:	add    BYTE PTR [rbp+0x76],al
   14000d704:	outs   dx,BYTE PTR gs:[rsi]
   14000d706:	je     0x14000d75f
   14000d708:	jb     0x14000d773
   14000d70a:	je     0x14000d771
   14000d70c:	push   rsp
   14000d70d:	jb     0x14000d770
   14000d70f:	outs   dx,BYTE PTR ds:[rsi]
   14000d710:	jae    0x14000d778
   14000d712:	gs jb  0x14000d715
   14000d715:	add    BYTE PTR [rbx],dl
   14000d717:	add    BYTE PTR [rcx+0x6e],cl
   14000d71a:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x65426563
   14000d722:	imul   ebp,DWORD PTR [esi+0x49],0x6974696e
   14000d72a:	(bad)  
   14000d72b:	ins    BYTE PTR es:[rdi],dx
   14000d72c:	imul   edi,DWORD PTR [rdx+0x65],0x49001400
   14000d733:	outs   dx,BYTE PTR ds:[rsi]
   14000d734:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x6f436563
   14000d73c:	ins    DWORD PTR es:[rdi],dx
   14000d73d:	jo     0x14000d7ab
   14000d73f:	gs je  0x14000d7a7
   14000d742:	add    BYTE PTR [rax],al
   14000d744:	add    al,0x0
   14000d746:	rex.RB jbe 0x14000d7ae
   14000d749:	outs   dx,BYTE PTR ds:[rsi]
   14000d74a:	je     0x14000d79f
   14000d74c:	gs je  0x14000d798
   14000d74f:	outs   dx,BYTE PTR ds:[rsi]
   14000d750:	outs   dx,WORD PTR ds:[rsi]
   14000d752:	jb     0x14000d7c1
   14000d754:	(bad)  
   14000d755:	je     0x14000d7c0
   14000d757:	outs   dx,DWORD PTR ds:[rsi]
   14000d758:	outs   dx,BYTE PTR ds:[rsi]
   14000d759:	add    BYTE PTR [rbx],al
   14000d75b:	add    BYTE PTR [rbp+0x76],al
   14000d75e:	outs   dx,BYTE PTR gs:[rsi]
   14000d760:	je     0x14000d7b4
   14000d762:	imul   esi,DWORD PTR gs:[ebx+0x74],0x5007265
   14000d76b:	add    BYTE PTR [rdi+0x65],al
   14000d76e:	je     0x14000d7b3
   14000d770:	outs   dx,DWORD PTR ds:[rsi]
   14000d771:	ins    DWORD PTR es:[rdi],dx
   14000d772:	ins    DWORD PTR es:[rdi],dx
   14000d773:	(bad)  
   14000d774:	outs   dx,BYTE PTR ds:[rsi]
   14000d775:	imul   r13,QWORD PTR fs:[rsi+0x65],0x50057
   14000d77e:	rex.RXB
   14000d77f:	gs je  0x14000d7ce
   14000d782:	(bad)  
   14000d783:	jae    0x14000d7f9
   14000d785:	rex.RB jb 0x14000d7fa
   14000d788:	outs   dx,DWORD PTR ds:[rsi]
   14000d789:	jb     0x14000d78b
   14000d78b:	add    BYTE PTR [rbx],al
   14000d78d:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000d791:	(bad)  
   14000d792:	ins    BYTE PTR es:[rdi],dx
   14000d793:	rex.RX jb 0x14000d7fb
   14000d796:	add    BYTE PTR gs:[rdx+0x0],al
   14000d79a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d79c:	push   rbp
   14000d79d:	outs   dx,BYTE PTR ds:[rsi]
   14000d79e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000d7a5:	imul   edi,DWORD PTR [rdx+0x65],0x260000
   14000d7ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d7ae:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d7b0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d7b8:	rex.RB js 0x14000d7bb
   14000d7bb:	add    BYTE PTR [rdi],bh
   14000d7bd:	add    BYTE PTR [rbx+0x6f],al
   14000d7c0:	push   rsp
   14000d7c1:	(bad)  
   14000d7c2:	jae    0x14000d82f
   14000d7c4:	rex.WRB
   14000d7c5:	gs ins DWORD PTR es:[rdi],dx
   14000d7c7:	rex.RX jb 0x14000d82f
   14000d7ca:	add    BYTE PTR gs:[rbx],bl
   14000d7cd:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000d7d1:	fs push rbx
   14000d7d3:	je     0x14000d847
   14000d7d5:	imul   ebp,DWORD PTR [rsi+0x67],0x80057
   14000d7dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d7de:	rex.XB jb 0x14000d846
   14000d7e1:	(bad)  
   14000d7e2:	je     0x14000d849
   14000d7e4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d7e6:	jae    0x14000d85c
   14000d7e8:	(bad)  
   14000d7e9:	outs   dx,BYTE PTR ds:[rsi]
   14000d7ea:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d7ed:	add    BYTE PTR [rax],cl
   14000d7ef:	add    BYTE PTR [rbx+0x79],dl
   14000d7f2:	jae    0x14000d868
   14000d7f4:	gs ins DWORD PTR es:[rdi],dx
   14000d7f6:	push   rsp
   14000d7f7:	imul   ebp,DWORD PTR [rbp+0x65],0x69466f54
   14000d7fe:	ins    BYTE PTR es:[rdi],dx
   14000d7ff:	gs push rsp
   14000d801:	imul   ebp,DWORD PTR [rbp+0x65],0x430000
   14000d808:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d80a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d80d:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   14000d816:	outs   dx,DWORD PTR ds:[rsi]
   14000d817:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   14000d820:	add    eax,0x74654700
   14000d825:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d827:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d82a:	push   rsp
   14000d82b:	imul   ebp,DWORD PTR [rbp+0x65],0xb0000
   14000d832:	push   rdi
   14000d833:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   14000d83a:	jb     0x14000d8a1
   14000d83c:	(bad)  
   14000d83d:	je     0x14000d8a4
   14000d83f:	push   rbx
   14000d840:	je     0x14000d8b4
   14000d842:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   14000d849:	jb     0x14000d8b0
   14000d84b:	outs   dx,BYTE PTR ds:[rsi]
   14000d84c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d84f:	add    BYTE PTR [rdi],al
   14000d851:	add    BYTE PTR [rdx+0x61],dl
   14000d854:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000d85b:	jo     0x14000d8d1
   14000d85d:	imul   ebp,DWORD PTR [rdi+0x6e],0x10000
   14000d864:	push   rdx
   14000d865:	outs   dx,DWORD PTR ds:[rsi]
   14000d866:	rex.RXB
   14000d867:	gs je  0x14000d8ab
   14000d86a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000d86e:	(bad)  
   14000d86f:	je     0x14000d8da
   14000d871:	outs   dx,DWORD PTR ds:[rsi]
   14000d872:	outs   dx,BYTE PTR ds:[rsi]
   14000d873:	rex.RX (bad) 
   14000d875:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000d879:	jns    0x14000d87b
   14000d87b:	add    BYTE PTR [rax],bl
   14000d87d:	add    BYTE PTR [rdi+0x65],al
   14000d880:	je     0x14000d8d6
   14000d882:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000d889:	je     0x14000d88b
   14000d88b:	add    BYTE PTR [rbp+0x0],al
   14000d88e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d890:	push   rdi
   14000d891:	(bad)  
   14000d892:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   14000d89a:	je     0x14000d905
   14000d89c:	jo     0x14000d90a
   14000d89e:	gs rex.W (bad) 
   14000d8a1:	outs   dx,BYTE PTR ds:[rsi]
   14000d8a2:	fs ins BYTE PTR es:[rdi],dx
   14000d8a4:	gs jae 0x14000d8a7
   14000d8a7:	add    BYTE PTR [rip+0x65724300],al        # 0x1a5731bad
   14000d8ad:	(bad)  
   14000d8ae:	je     0x14000d915
   14000d8b0:	rex.RB jbe 0x14000d918
   14000d8b3:	outs   dx,BYTE PTR ds:[rsi]
   14000d8b4:	je     0x14000d8fb
   14000d8b6:	js     0x14000d90f
   14000d8b8:	add    BYTE PTR [rax],al
   14000d8ba:	sub    DWORD PTR [rax],eax
   14000d8bc:	push   rbx
   14000d8bd:	gs je  0x14000d905
   14000d8c0:	jbe    0x14000d927
   14000d8c2:	outs   dx,BYTE PTR ds:[rsi]
   14000d8c3:	je     0x14000d8c5
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    BYTE PTR [rbx+0x6c],al
   14000d8ca:	outs   dx,DWORD PTR ds:[rsi]
   14000d8cb:	jae    0x14000d932
   14000d8cd:	rex.W (bad) 
   14000d8cf:	outs   dx,BYTE PTR ds:[rsi]
   14000d8d0:	fs ins BYTE PTR es:[rdi],dx
   14000d8d2:	add    BYTE PTR gs:[rsi],al
   14000d8d5:	add    BYTE PTR [rbx+0x6f],al
   14000d8d8:	rex.XB jb 0x14000d940
   14000d8db:	(bad)  
   14000d8dc:	je     0x14000d943
   14000d8de:	rex.RX jb 0x14000d946
   14000d8e1:	gs push rsp
   14000d8e3:	push   0x64616572
   14000d8e8:	gs fs rex.WRB (bad) 
   14000d8ec:	jb     0x14000d961
   14000d8ee:	push   0x72656c61
   14000d8f3:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d2bf9
   14000d8f9:	gs jo  0x14000d8fc
   14000d8fc:	and    BYTE PTR [rax],al
   14000d8fe:	rex.RXB
   14000d8ff:	gs je  0x14000d955
   14000d902:	je     0x14000d965
   14000d904:	jb     0x14000d97a
   14000d906:	jne    0x14000d978
   14000d908:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d90a:	outs   dx,WORD PTR ds:[rsi]
   14000d90c:	push   rdi
   14000d90d:	add    BYTE PTR [rdi],cl
   14000d90f:	add    BYTE PTR [rbx+0x65],dl
   14000d912:	je     0x14000d969
   14000d914:	outs   dx,BYTE PTR ds:[rsi]
   14000d915:	push   0x6c646e61
   14000d91a:	gs fs rex.RB js 0x14000d982
   14000d91f:	gs jo  0x14000d996
   14000d922:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d929:	gs jb  0x14000d92c
   14000d92c:	add    BYTE PTR [rax],al
   14000d92e:	push   rcx
   14000d92f:	jne    0x14000d996
   14000d931:	jb     0x14000d9ac
   14000d933:	push   rax
   14000d934:	gs jb  0x14000d99d
   14000d937:	outs   dx,DWORD PTR ds:[rsi]
   14000d938:	jb     0x14000d9a7
   14000d93a:	(bad)  
   14000d93b:	outs   dx,BYTE PTR ds:[rsi]
   14000d93c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d93f:	outs   dx,DWORD PTR ds:[rsi]
   14000d940:	jne    0x14000d9b0
   14000d942:	je     0x14000d9a9
   14000d944:	jb     0x14000d946
   14000d946:	or     eax,0x74654700
   14000d94b:	rex.XB jne 0x14000d9c0
   14000d94e:	jb     0x14000d9b5
   14000d950:	outs   dx,BYTE PTR ds:[rsi]
   14000d951:	je     0x14000d9a3
   14000d953:	jb     0x14000d9c4
   14000d955:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d958:	jae    0x14000d9a3
   14000d95a:	add    BYTE PTR fs:[rcx],dl
   14000d95d:	add    BYTE PTR [rdi+0x65],al
   14000d960:	je     0x14000d9a5
   14000d962:	jne    0x14000d9d6
   14000d964:	jb     0x14000d9cb
   14000d966:	outs   dx,BYTE PTR ds:[rsi]
   14000d967:	je     0x14000d9bd
   14000d969:	push   0x64616572
   14000d96e:	rex.WB
   14000d96f:	add    BYTE PTR fs:[rax],al
   14000d972:	adc    al,0x0
   14000d974:	rex.RXB
   14000d975:	gs je  0x14000d9cb
   14000d978:	jns    0x14000d9ed
   14000d97a:	je     0x14000d9e1
   14000d97c:	ins    DWORD PTR es:[rdi],dx
   14000d97d:	push   rsp
   14000d97e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d985:	ins    BYTE PTR es:[rdi],dx
   14000d986:	gs push rsp
   14000d988:	imul   ebp,DWORD PTR [rbp+0x65],0x52000200
   14000d98f:	je     0x14000d9fd
   14000d991:	rex.XB (bad) 
   14000d993:	jo     0x14000da09
   14000d995:	jne    0x14000da09
   14000d997:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000d99a:	outs   dx,BYTE PTR ds:[rsi]
   14000d99b:	je     0x14000da02
   14000d99d:	js     0x14000da13
   14000d99f:	add    BYTE PTR [rcx],cl
   14000d9a1:	add    BYTE PTR [rdx+0x74],dl
   14000d9a4:	ins    BYTE PTR es:[rdi],dx
   14000d9a5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d9a7:	outs   dx,DWORD PTR ds:[rsi]
   14000d9a8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000d9ac:	jne    0x14000da1c
   14000d9ae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d9b2:	outs   dx,BYTE PTR ds:[rsi]
   14000d9b3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d9b5:	je     0x14000da29
   14000d9b7:	jns    0x14000d9b9
   14000d9b9:	add    BYTE PTR [rdi],cl
   14000d9bb:	add    BYTE PTR [rdx+0x74],dl
   14000d9be:	ins    BYTE PTR es:[rdi],dx
   14000d9bf:	push   rsi
   14000d9c0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000d9c7:	outs   dx,BYTE PTR ds:[rsi]
   14000d9c8:	ja     0x14000da33
   14000d9ca:	outs   dx,BYTE PTR ds:[rsi]
   14000d9cb:	add    BYTE PTR fs:[rax],al
   14000d9ce:	adc    DWORD PTR [rax],eax
   14000d9d0:	push   rbp
   14000d9d1:	outs   dx,BYTE PTR ds:[rsi]
   14000d9d2:	push   0x6c646e61
   14000d9d7:	gs fs rex.RB js 0x14000da3f
   14000d9dc:	gs jo  0x14000da53
   14000d9df:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d9e6:	gs jb  0x14000d9e9
   14000d9e9:	add    BYTE PTR [rax+rax*1],cl
   14000d9ec:	rex.RXB
   14000d9ed:	gs je  0x14000da33
   14000d9f0:	jne    0x14000da64
   14000d9f2:	jb     0x14000da59
   14000d9f4:	outs   dx,BYTE PTR ds:[rsi]
   14000d9f5:	je     0x14000da47
   14000d9f7:	jb     0x14000da68
   14000d9f9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d9fc:	jae    0x14000d9fe
   14000d9fe:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000da03:	ins    DWORD PTR es:[rdi],dx
   14000da04:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000da0b:	outs   dx,DWORD PTR ds:[rsi]
   14000da0c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000da0f:	jae    0x14000da11
   14000da11:	add    BYTE PTR [rcx],al
   14000da13:	add    BYTE PTR [rsi+0x69],al
   14000da16:	ins    BYTE PTR es:[rdi],dx
   14000da17:	gs push rsp
   14000da19:	imul   ebp,DWORD PTR [rbp+0x65],0x79536f54
   14000da20:	jae    0x14000da96
   14000da22:	gs ins DWORD PTR es:[rdi],dx
   14000da24:	push   rsp
   14000da25:	imul   ebp,DWORD PTR [rbp+0x65],0x80000
   14000da2c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000da2e:	jb     0x14000da9d
   14000da30:	(bad)  
   14000da31:	je     0x14000da80
   14000da33:	gs jae 0x14000daa9
   14000da36:	(bad)  
   14000da37:	addr32 gs push rdi
   14000da3a:	add    BYTE PTR [rax],al
   14000da3c:	add    al,BYTE PTR [rax]
   14000da3e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000da40:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000da43:	rex.B ins BYTE PTR es:[rdi],dx
   14000da45:	ins    BYTE PTR es:[rdi],dx
   14000da46:	outs   dx,DWORD PTR ds:[rsi]
   14000da47:	movsxd eax,DWORD PTR [rax]
   14000da49:	add    BYTE PTR [rcx+0x70],ah
   14000da4c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4dc3
   14000da56:	outs   dx,DWORD PTR ds:[rsi]
   14000da57:	jb     0x14000dabe
   14000da59:	sub    eax,0x7262696c
   14000da5e:	(bad)  
   14000da5f:	jb     0x14000dada
   14000da61:	ins    BYTE PTR es:[rdi],dx
   14000da62:	outs   dx,DWORD PTR ds:[rsi]
   14000da63:	(bad)  
   14000da64:	fs gs jb 0x14000da95
   14000da68:	ins    BYTE PTR es:[rdi],dx
   14000da69:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3107a1
   14000da6f:	fs ins BYTE PTR es:[rdi],dx
   14000da71:	ins    BYTE PTR es:[rdi],dx
   14000da72:	add    BYTE PTR [rax],al
   14000da74:	(bad)  
   14000da75:	jo     0x14000dae0
   14000da77:	sub    eax,0x772d736d
   14000da7c:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000da83:	je     0x14000daee
   14000da85:	outs   dx,BYTE PTR ds:[rsi]
   14000da86:	addr32 sub eax,0x766f7270
   14000da8c:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000da94:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac6508ca
   14000da9a:	ins    BYTE PTR es:[rdi],dx
   14000da9b:	add    BYTE PTR [rcx+0x70],ah
   14000da9e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4e15
   14000daa8:	outs   dx,DWORD PTR ds:[rsi]
   14000daa9:	jb     0x14000db10
   14000daab:	sub    eax,0x636e7973
   14000dab0:	push   0x2d316c2d
   14000dab5:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac6508eb
   14000dabb:	ins    BYTE PTR es:[rdi],dx
   14000dabc:	add    BYTE PTR [rax],al
   14000dabe:	(bad)  
   14000dabf:	jo     0x14000db2a
   14000dac1:	sub    eax,0x772d736d
   14000dac6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dacd:	sub    eax,0x636f7270
   14000dad2:	gs jae 0x14000db48
   14000dad5:	outs   dx,BYTE PTR gs:[rsi]
   14000dad7:	jbe    0x14000db42
   14000dad9:	jb     0x14000db4a
   14000dadb:	outs   dx,BYTE PTR ds:[rsi]
   14000dadc:	ins    DWORD PTR es:[rdi],dx
   14000dadd:	outs   dx,BYTE PTR gs:[rsi]
   14000dadf:	je     0x14000db0e
   14000dae1:	ins    BYTE PTR es:[rdi],dx
   14000dae2:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e31081a
   14000dae8:	fs ins BYTE PTR es:[rdi],dx
   14000daea:	ins    BYTE PTR es:[rdi],dx
   14000daeb:	add    BYTE PTR [rcx+0x70],ah
   14000daee:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4e65
   14000daf8:	outs   dx,DWORD PTR ds:[rsi]
   14000daf9:	jb     0x14000db60
   14000dafb:	sub    eax,0x6f727265
   14000db00:	jb     0x14000db6a
   14000db02:	(bad)  
   14000db03:	outs   dx,BYTE PTR ds:[rsi]
   14000db04:	fs ins BYTE PTR es:[rdi],dx
   14000db06:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000db0d:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac650944
   14000db13:	ins    BYTE PTR es:[rdi],dx
   14000db14:	add    BYTE PTR [rax],al
   14000db16:	(bad)  
   14000db17:	jo     0x14000db82
   14000db19:	sub    eax,0x772d736d
   14000db1e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000db25:	sub    eax,0x70616568
   14000db2a:	sub    eax,0x312d326c
   14000db2f:	sub    eax,0x6c642e30
   14000db34:	ins    BYTE PTR es:[rdi],dx
   14000db35:	add    BYTE PTR [rcx+0x70],ah
   14000db38:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4eaf
   14000db42:	outs   dx,DWORD PTR ds:[rsi]
   14000db43:	jb     0x14000dbaa
   14000db45:	sub    eax,0x2d6d6f63
   14000db4a:	ins    BYTE PTR es:[rdi],dx
   14000db4b:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e320882
   14000db51:	fs ins BYTE PTR es:[rdi],dx
   14000db53:	ins    BYTE PTR es:[rdi],dx
   14000db54:	add    BYTE PTR [rax],al
   14000db56:	(bad)  
   14000db57:	jo     0x14000dbc2
   14000db59:	sub    eax,0x772d736d
   14000db5e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000db65:	sub    eax,0x656d6974
   14000db6a:	jp     0x14000dbdb
   14000db6c:	outs   dx,BYTE PTR ds:[rsi]
   14000db6d:	gs sub eax,0x312d316c
   14000db73:	sub    eax,0x6c642e30
   14000db78:	ins    BYTE PTR es:[rdi],dx
   14000db79:	add    BYTE PTR [rcx+0x70],ah
   14000db7c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4ef3
   14000db86:	outs   dx,DWORD PTR ds:[rsi]
   14000db87:	jb     0x14000dbee
   14000db89:	sub    eax,0x656c6966
   14000db8e:	sub    eax,0x322d316c
   14000db93:	sub    eax,0x6c642e31
   14000db98:	ins    BYTE PTR es:[rdi],dx
   14000db99:	add    BYTE PTR [rcx+0x70],ah
   14000db9c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4f13
   14000dba6:	outs   dx,DWORD PTR ds:[rsi]
   14000dba7:	jb     0x14000dc0e
   14000dba9:	sub    eax,0x69737973
   14000dbae:	outs   dx,BYTE PTR ds:[rsi]
   14000dbaf:	outs   dx,WORD PTR ds:[rsi]
   14000dbb1:	sub    eax,0x322d316c
   14000dbb6:	sub    eax,0x6c642e31
   14000dbbb:	ins    BYTE PTR es:[rdi],dx
   14000dbbc:	add    BYTE PTR [rax],al
   14000dbbe:	(bad)  
   14000dbbf:	jo     0x14000dc2a
   14000dbc1:	sub    eax,0x772d736d
   14000dbc6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dbcd:	sub    eax,0x726e6977
   14000dbd2:	je     0x14000dc01
   14000dbd4:	jae    0x14000dc4a
   14000dbd6:	jb     0x14000dc41
   14000dbd8:	outs   dx,BYTE PTR ds:[rsi]
   14000dbd9:	addr32 sub eax,0x312d316c
   14000dbdf:	sub    eax,0x6c642e30
   14000dbe4:	ins    BYTE PTR es:[rdi],dx
   14000dbe5:	add    BYTE PTR [rcx+0x70],ah
   14000dbe8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4f5f
   14000dbf2:	outs   dx,DWORD PTR ds:[rsi]
   14000dbf3:	jb     0x14000dc5a
   14000dbf5:	sub    eax,0x726e6977
   14000dbfa:	je     0x14000dc29
   14000dbfc:	ins    BYTE PTR es:[rdi],dx
   14000dbfd:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e310934
   14000dc03:	fs ins BYTE PTR es:[rdi],dx
   14000dc05:	ins    BYTE PTR es:[rdi],dx
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	(bad)  
   14000dc09:	jo     0x14000dc74
   14000dc0b:	sub    eax,0x772d736d
   14000dc10:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dc17:	sub    eax,0x646e6168
   14000dc1c:	ins    BYTE PTR es:[rdi],dx
   14000dc1d:	gs sub eax,0x312d316c
   14000dc23:	sub    eax,0x6c642e30
   14000dc28:	ins    BYTE PTR es:[rdi],dx
   14000dc29:	add    BYTE PTR [rcx+0x70],ah
   14000dc2c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4fa3
   14000dc36:	outs   dx,DWORD PTR ds:[rsi]
   14000dc37:	jb     0x14000dc9e
   14000dc39:	sub    eax,0x636f7270
   14000dc3e:	gs jae 0x14000dcb4
   14000dc41:	je     0x14000dcab
   14000dc43:	jb     0x14000dcaa
   14000dc45:	(bad)  
   14000dc46:	fs jae 0x14000dc76
   14000dc49:	ins    BYTE PTR es:[rdi],dx
   14000dc4a:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e330981
   14000dc50:	fs ins BYTE PTR es:[rdi],dx
   14000dc52:	ins    BYTE PTR es:[rdi],dx
   14000dc53:	add    BYTE PTR [rcx+0x70],ah
   14000dc56:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4fcd
   14000dc60:	outs   dx,DWORD PTR ds:[rsi]
   14000dc61:	jb     0x14000dcc8
   14000dc63:	sub    eax,0x666f7270
   14000dc68:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000dc70:	sub    eax,0x6c642e30
   14000dc75:	ins    BYTE PTR es:[rdi],dx
   14000dc76:	add    BYTE PTR [rax],al
   14000dc78:	(bad)  
   14000dc79:	jo     0x14000dce4
   14000dc7b:	sub    eax,0x772d736d
   14000dc80:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dc87:	sub    eax,0x736c7472
   14000dc8c:	jne    0x14000dcfe
   14000dc8e:	jo     0x14000dcff
   14000dc90:	jb     0x14000dd06
   14000dc92:	sub    eax,0x322d316c
   14000dc97:	sub    eax,0x6c642e30
   14000dc9c:	ins    BYTE PTR es:[rdi],dx
   14000dc9d:	add    BYTE PTR [rcx+0x70],ah
   14000dca0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5017
   14000dcaa:	outs   dx,DWORD PTR ds:[rsi]
   14000dcab:	jb     0x14000dd12
   14000dcad:	sub    eax,0x61636f6c
   14000dcb2:	ins    BYTE PTR es:[rdi],dx
   14000dcb3:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000dcba:	sub    eax,0x322d316c
   14000dcbf:	sub    eax,0x6c642e31
   14000dcc4:	ins    BYTE PTR es:[rdi],dx
   14000dcc5:	add    BYTE PTR [rax],al
   14000dcc7:	add    BYTE PTR [rbx+0x6f],al
   14000dcca:	ins    DWORD PTR es:[rdi],dx
   14000dccb:	ins    DWORD PTR es:[rdi],dx
   14000dccc:	(bad)  
   14000dccd:	outs   dx,BYTE PTR ds:[rsi]
   14000dcce:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000dcd7:	addr32 jbe 0x14000dd31
   14000dcda:	add    BYTE PTR [rax],al
   14000dcdc:	(bad)  
   14000dcdd:	jo     0x14000dd48
   14000dcdf:	sub    eax,0x772d736d
   14000dce4:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f636873
   14000dceb:	jb     0x14000dd52
   14000dced:	sub    eax,0x6f73626f
   14000dcf2:	ins    BYTE PTR es:[rdi],dx
   14000dcf3:	gs je  0x14000dd5b
   14000dcf6:	sub    eax,0x312d316c
   14000dcfb:	sub    eax,0x6c642e30
   14000dd00:	ins    BYTE PTR es:[rdi],dx
   14000dd01:	add    BYTE PTR [rcx+0x70],ah
   14000dd04:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e507b
   14000dd0e:	outs   dx,DWORD PTR ds:[rsi]
   14000dd0f:	jb     0x14000dd76
   14000dd11:	sub    eax,0x6e72656b
   14000dd16:	gs ins BYTE PTR es:[rdi],dx
   14000dd18:	xor    esi,DWORD PTR [rdx]
   14000dd1a:	sub    eax,0x6167656c
   14000dd1f:	movsxd edi,DWORD PTR [rcx+0x2d]
   14000dd22:	ins    BYTE PTR es:[rdi],dx
   14000dd23:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e320a5a
   14000dd29:	fs ins BYTE PTR es:[rdi],dx
   14000dd2b:	ins    BYTE PTR es:[rdi],dx
   14000dd2c:	add    BYTE PTR [rax],al
   14000dd2e:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000dd34:	ja     0x14000dda6
   14000dd36:	jb     0x14000dda1
   14000dd38:	outs   dx,BYTE PTR ds:[rsi]
   14000dd39:	je     0x14000dda1
   14000dd3b:	add    BYTE PTR [rcx],cl
   14000dd3d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000dd41:	gs je  0x14000dda9
   14000dd44:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x53000700
   14000dd4d:	je     0x14000ddb0
   14000dd4f:	jb     0x14000ddc5
   14000dd51:	push   rsp
   14000dd52:	jb     0x14000ddb5
   14000dd54:	movsxd esp,DWORD PTR [rbp+0x57]
   14000dd57:	add    BYTE PTR [rax],al
   14000dd59:	add    BYTE PTR [rbx+0x6f],al
   14000dd5c:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5d:	je     0x14000ddd1
   14000dd5f:	outs   dx,DWORD PTR ds:[rsi]
   14000dd60:	ins    BYTE PTR es:[rdi],dx
   14000dd61:	push   rsp
   14000dd62:	jb     0x14000ddc5
   14000dd64:	movsxd esp,DWORD PTR [rbp+0x57]
   14000dd67:	add    BYTE PTR [rcx],al
   14000dd69:	add    BYTE PTR [rbp+0x6e],al
   14000dd6c:	(bad)  
   14000dd6d:	(bad)  
   14000dd6e:	ins    BYTE PTR es:[rdi],dx
   14000dd6f:	gs push rsp
   14000dd71:	jb     0x14000ddd4
   14000dd73:	movsxd esp,DWORD PTR [rbp+0x45]
   14000dd76:	js     0x14000ddaa
   14000dd78:	add    BYTE PTR [rax],al
   14000dd7a:	add    BYTE PTR [rax],al
   14000dd7c:	push   rdx
   14000dd7d:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000dd81:	outs   dx,DWORD PTR ds:[rsi]
   14000dd82:	jae    0x14000dde9
   14000dd84:	rex.WXB
   14000dd85:	gs jns 0x14000dd88
   14000dd88:	(bad)  
   14000dd89:	add    BYTE PTR [rdx+0x65],dl
   14000dd8c:	addr32 rex.WRXB jo 0x14000ddf5
   14000dd90:	outs   dx,BYTE PTR ds:[rsi]
   14000dd91:	rex.WXB
   14000dd92:	gs jns 0x14000ddda
   14000dd95:	js     0x14000ddee
   14000dd97:	add    BYTE PTR [rax+rax*1],dl
   14000dd9a:	push   rdx
   14000dd9b:	gs addr32 rex.RXB
   14000dd9e:	gs je  0x14000ddf7
   14000dda1:	(bad)  
   14000dda2:	ins    BYTE PTR es:[rdi],dx
   14000dda3:	jne    0x14000de0a
   14000dda5:	push   rdi
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	add    BYTE PTR [rax],al
   14000ddaa:	push   rax
   14000ddab:	(bad)  
   14000ddac:	je     0x14000de16
   14000ddae:	rex.B ins BYTE PTR es:[rdi],dx
   14000ddb0:	ins    BYTE PTR es:[rdi],dx
   14000ddb1:	outs   dx,DWORD PTR ds:[rsi]
   14000ddb2:	movsxd eax,DWORD PTR [rbx+0x61]
   14000ddb5:	outs   dx,BYTE PTR ds:[rsi]
   14000ddb6:	outs   dx,DWORD PTR ds:[rsi]
   14000ddb7:	outs   dx,BYTE PTR ds:[rsi]
   14000ddb8:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
   14000ddbf:	add    BYTE PTR [rip+0x74615000],cl        # 0x1b4622dc5
   14000ddc5:	push   0x52686343
   14000ddca:	gs ins DWORD PTR es:[rdi],dx
   14000ddcc:	outs   dx,DWORD PTR ds:[rsi]
   14000ddcd:	jbe    0x14000de34
   14000ddcf:	rex.X (bad) 
   14000ddd1:	movsxd ebp,DWORD PTR [rbx+0x73]
   14000ddd4:	ins    BYTE PTR es:[rdi],dx
   14000ddd5:	(bad)  
   14000ddd6:	jae    0x14000de40
   14000ddd8:	add    BYTE PTR [rax],al
   14000ddda:	adc    al,BYTE PTR [rax]
   14000dddc:	push   rax
   14000dddd:	(bad)  
   14000ddde:	je     0x14000de48
   14000dde0:	rex.XB movsxd ebp,DWORD PTR [r8+0x53]
   14000dde4:	imul   ebp,DWORD PTR [rcx+0x70],0x52
   14000dde8:	outs   dx,DWORD PTR ds:[rsi]
   14000dde9:	outs   dx,DWORD PTR ds:[rsi]
   14000ddea:	je     0x14000ddec
   14000ddec:	add    eax,DWORD PTR [rax]
   14000ddee:	rex.XB jb 0x14000de56
   14000ddf1:	(bad)  
   14000ddf2:	je     0x14000de59
   14000ddf4:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000ddfc:	jns    0x14000de55
   14000ddfe:	add    BYTE PTR [rax],al
   14000de00:	sub    al,BYTE PTR [rax]
   14000de02:	rex.RXB
   14000de03:	gs je  0x14000de4c
   14000de06:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000de0e:	(bad)  
   14000de0f:	jne    0x14000de85
   14000de11:	gs jae 0x14000de6b
   14000de14:	add    BYTE PTR [rax],al
   14000de16:	add    eax,0x74615000
   14000de1b:	push   0x41686343
   14000de20:	jo     0x14000de92
   14000de22:	outs   dx,BYTE PTR gs:[rsi]
   14000de24:	add    BYTE PTR fs:[rdi],al
   14000de27:	add    BYTE PTR [rax+0x61],dl
   14000de2a:	je     0x14000de94
   14000de2c:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000de30:	(bad)  
   14000de31:	outs   dx,BYTE PTR ds:[rsi]
   14000de32:	outs   dx,DWORD PTR ds:[rsi]
   14000de33:	outs   dx,BYTE PTR ds:[rsi]
   14000de34:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
   14000de3b:	add    BYTE PTR [rcx],al
   14000de3d:	add    BYTE PTR [rdx+0x65],dl
   14000de40:	jae    0x14000deb1
   14000de42:	ins    BYTE PTR es:[rdi],dx
   14000de43:	jbe    0x14000deaa
   14000de45:	rex.R
   14000de46:	gs ins BYTE PTR es:[rdi],dx
   14000de48:	(bad)  
   14000de49:	jns    0x14000de97
   14000de4b:	outs   dx,DWORD PTR ds:[rsi]
   14000de4c:	(bad)  
   14000de4d:	fs gs fs push r8
   14000de52:	rex.WB add BYTE PTR [r8],al
   14000de55:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000de59:	(bad)  
   14000de5a:	jns    0x14000dea8
   14000de5c:	outs   dx,DWORD PTR ds:[rsi]
   14000de5d:	(bad)  
   14000de5e:	fs rex.RX (bad) 
   14000de61:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000de69:	imul   eax,DWORD PTR [rax],0x0
   14000de6c:	(bad)  
   14000de6d:	jo     0x14000ded8
   14000de6f:	sub    eax,0x772d736d
   14000de74:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000de7b:	je     0x14000dee6
   14000de7d:	outs   dx,BYTE PTR ds:[rsi]
   14000de7e:	addr32 sub eax,0x746e6f63
   14000de84:	jb     0x14000def5
   14000de86:	ins    BYTE PTR es:[rdi],dx
   14000de87:	ins    BYTE PTR es:[rdi],dx
   14000de88:	gs jb  0x14000deb8
   14000de8b:	ins    BYTE PTR es:[rdi],dx
   14000de8c:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e310bc3
   14000de92:	fs ins BYTE PTR es:[rdi],dx
   14000de94:	ins    BYTE PTR es:[rdi],dx
   14000de95:	add    BYTE PTR [rcx+0x70],ah
   14000de98:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e520f
   14000dea2:	outs   dx,DWORD PTR ds:[rsi]
   14000dea3:	jb     0x14000df0a
   14000dea5:	sub    eax,0x69676572
   14000deaa:	jae    0x14000df20
   14000deac:	jb     0x14000df27
   14000deae:	sub    eax,0x312d316c
   14000deb3:	sub    eax,0x6c642e30
   14000deb8:	ins    BYTE PTR es:[rdi],dx
   14000deb9:	add    BYTE PTR [rcx+0x70],ah
   14000debc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5233
   14000dec6:	outs   dx,DWORD PTR ds:[rsi]
   14000dec7:	jb     0x14000df2e
   14000dec9:	sub    eax,0x68746170
   14000dece:	sub    eax,0x312d316c
   14000ded3:	sub    eax,0x6c642e30
   14000ded8:	ins    BYTE PTR es:[rdi],dx
   14000ded9:	add    BYTE PTR [rcx+0x70],ah
   14000dedc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5253
   14000dee6:	outs   dx,DWORD PTR ds:[rsi]
   14000dee7:	jb     0x14000df4e
   14000dee9:	sub    eax,0x616c6564
   14000deee:	jns    0x14000df5c
   14000def0:	outs   dx,DWORD PTR ds:[rsi]
   14000def1:	(bad)  
   14000def2:	fs sub eax,0x312d316c
   14000def8:	sub    eax,0x6c642e31
   14000defd:	ins    BYTE PTR es:[rdi],dx
   14000defe:	add    BYTE PTR [rax],al
   14000df00:	add    BYTE PTR ss:[rbp+0x6f],cl
   14000df04:	jbe    0x14000df6b
   14000df06:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x51000900
   14000df0f:	jne    0x14000df76
   14000df11:	jb     0x14000df8c
   14000df13:	push   rsp
   14000df14:	jb     0x14000df77
   14000df16:	movsxd esp,DWORD PTR [rbp+0x57]
   14000df19:	add    BYTE PTR [rax+rax*1],dl
   14000df1c:	push   rax
   14000df1d:	(bad)  
   14000df1e:	je     0x14000df88
   14000df20:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   14000df29:	jae    0x14000df82
   14000df2b:	add    BYTE PTR [rcx+0x70],ah
   14000df2e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e52a5
   14000df38:	jbe    0x14000df9f
   14000df3a:	outs   dx,BYTE PTR ds:[rsi]
   14000df3b:	je     0x14000dfa6
   14000df3d:	outs   dx,BYTE PTR ds:[rsi]
   14000df3e:	addr32 sub eax,0x6167656c
   14000df44:	movsxd edi,DWORD PTR [rcx+0x2d]
   14000df47:	ins    BYTE PTR es:[rdi],dx
   14000df48:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e310c7f
   14000df4e:	fs ins BYTE PTR es:[rdi],dx
   14000df50:	ins    BYTE PTR es:[rdi],dx
   14000df51:	add    BYTE PTR [rcx+0x70],ah
   14000df54:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e52cb
   14000df5e:	outs   dx,DWORD PTR ds:[rsi]
   14000df5f:	jb     0x14000dfc6
   14000df61:	sub    eax,0x776c6873
   14000df66:	(bad)  
   14000df67:	jo     0x14000dfd2
   14000df69:	sub    eax,0x6167656c
   14000df6e:	movsxd edi,DWORD PTR [rcx+0x2d]
   14000df71:	ins    BYTE PTR es:[rdi],dx
   14000df72:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e310ca9
   14000df78:	fs ins BYTE PTR es:[rdi],dx
   14000df7a:	ins    BYTE PTR es:[rdi],dx
   14000df7b:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000df81:	jae    0x14000dfe8
   14000df83:	je     0x14000df85
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
	...
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rdi+rdi*4+0x0],dl
   14000e02b:	rex add DWORD PTR [rax],eax
	...
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	(bad)  
   14000e061:	(bad)  
   14000e062:	(bad)  
   14000e063:	inc    DWORD PTR [rax]
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    BYTE PTR [rax+0x140009e],dh
   14000e06d:	add    BYTE PTR [rax],al
   14000e06f:	add    BYTE PTR [rax],dl
   14000e071:	lahf   
   14000e072:	add    BYTE PTR [rax+0x1],al
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    BYTE PTR [rcx],al
   14000e079:	add    BYTE PTR [rax],al
   14000e07b:	add    BYTE PTR [rax],al
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rax+0x140009b],bl
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    al,cl
   14000e089:	cwde   
   14000e08a:	add    BYTE PTR [rax+0x1],al
	...
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    BYTE PTR [rsi],ch
   14000e099:	(bad)  
   14000e09a:	push   r14
   14000e09c:	gs js  0x14000e102
   14000e09f:	gs jo  0x14000e116
   14000e0a2:	imul   ebp,DWORD PTR [rdi+0x6e],0xc8004040
   14000e0a9:	cwde   
   14000e0aa:	add    BYTE PTR [rax+0x1],al
	...
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rsi],ch
   14000e0b9:	(bad)  
   14000e0ba:	push   r14
   14000e0bc:	ins    BYTE PTR es:[rdi],dx
   14000e0bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e0be:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000e0c6:	jb     0x14000e108
   14000e0c8:	jae    0x14000e13e
   14000e0ca:	fs rex
   14000e0cc:	add    BYTE PTR [rax],al
   14000e0cf:	add    al,cl
   14000e0d1:	cwde   
   14000e0d2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0dd:	add    BYTE PTR [rax],al
   14000e0df:	add    BYTE PTR [rsi],ch
   14000e0e1:	(bad)  
   14000e0e2:	push   r14
   14000e0e4:	ins    BYTE PTR es:[rdi],dx
   14000e0e5:	outs   dx,BYTE PTR gs:[rsi]
   14000e0e7:	addr32 je 0x14000e152
   14000e0ea:	pop    rdi
   14000e0eb:	gs jb  0x14000e160
   14000e0ee:	outs   dx,DWORD PTR ds:[rsi]
   14000e0ef:	jb     0x14000e131
   14000e0f1:	jae    0x14000e167
   14000e0f3:	fs rex
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f8:	enter  0x98,0x40
   14000e0fc:	add    DWORD PTR [rax],eax
	...
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	cs (bad) 
   14000e10a:	push   r14
   14000e10c:	outs   dx,DWORD PTR ds:[rsi]
   14000e10d:	jne    0x14000e183
   14000e10f:	pop    rdi
   14000e110:	outs   dx,DWORD PTR ds:[rsi]
   14000e111:	pop    di
   14000e113:	jb     0x14000e176
   14000e115:	outs   dx,BYTE PTR ds:[rsi]
   14000e116:	addr32 gs rex jae 0x14000e18f
   14000e11b:	fs rex
   14000e11d:	add    BYTE PTR [rax],al
   14000e120:	enter  0x98,0x40
   14000e124:	add    DWORD PTR [rax],eax
	...
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	cs (bad) 
   14000e132:	push   r14
   14000e134:	(bad)
   14000e139:	ins    BYTE PTR es:[rdi],dx
   14000e13a:	ins    BYTE PTR es:[rdi],dx
   14000e13b:	outs   dx,DWORD PTR ds:[rsi]
   14000e13c:	movsxd eax,DWORD PTR [rax+0x73]
   14000e13f:	je     0x14000e1a5
   14000e141:	rex
   14000e142:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	adc    BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	rcl    DWORD PTR [rax],cl
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	mov    al,0xc4
   14000f00a:	add    BYTE PTR [rax],al
   14000f00c:	fcom   QWORD PTR [rax]
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	jns    0x14000f023
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	in     al,dx
   14000f015:	(bad)  
   14000f016:	add    BYTE PTR [rax],al
   14000f018:	add    BYTE PTR [rdx],dl
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	(bad)  
   14000f01d:	adc    al,BYTE PTR [rax]
   14000f01f:	add    BYTE PTR [rax],dl
   14000f021:	ret    
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	push   rax
   14000f025:	adc    al,BYTE PTR [rax]
   14000f027:	add    BYTE PTR [rdx+0x18000012],bh
   14000f02d:	ret    
   14000f02e:	add    BYTE PTR [rax],al
   14000f030:	lock adc al,BYTE PTR [rax]
   14000f033:	add    BYTE PTR [rbx+0x13],dl
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	sub    al,0xc3
   14000f03a:	add    BYTE PTR [rax],al
   14000f03c:	jo     0x14000f051
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	mov    dh,0x13
   14000f042:	add    BYTE PTR [rax],al
   14000f044:	cmp    bl,al
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	rcl    BYTE PTR [rbx],1
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	xor    edx,DWORD PTR [rax+rax*1]
   14000f04f:	add    BYTE PTR [rbx+rax*8],ch
   14000f052:	add    BYTE PTR [rax],al
   14000f054:	adc    al,0x0
   14000f057:	add    BYTE PTR [rdi+0x14],bh
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	rex ret 
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	mov    al,0x14
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	mov    eax,0x4c000015
   14000f069:	ret    
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	rcl    BYTE PTR [rip+0x16010000],0x0        # 0x15601f073
   14000f073:	add    BYTE PTR [rax],dl
   14000f075:	ret    
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	adc    BYTE PTR [rsi],dl
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	xchg   edi,eax
   14000f07d:	(bad)  
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	fs ret 
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	movabs al,ds:0x64000016f9000016
   14000f08d:	ret    
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	add    BYTE PTR [rdi],dl
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	cld    
   14000f095:	(bad)  
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	fs ret 
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	add    al,0x18
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	adc    eax,0x74000018
   14000f0a5:	ret    
   14000f0a6:	add    BYTE PTR [rax],al
   14000f0a8:	sbb    al,0x18
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	sub    bl,BYTE PTR [rcx]
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	jl     0x14000f075
   14000f0b2:	add    BYTE PTR [rax],al
   14000f0b4:	xor    BYTE PTR [rcx],bl
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	sbb    DWORD PTR [r8],eax
   14000f0bb:	add    BYTE PTR [rbx+rax*8+0x0],dh
   14000f0bf:	add    BYTE PTR [rax+0x19],cl
   14000f0c2:	add    BYTE PTR [rax],al
   14000f0c4:	fstp   QWORD PTR [rcx]
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	rex ret 
   14000f0ca:	add    BYTE PTR [rax],al
   14000f0cc:	in     al,0x19
   14000f0ce:	add    BYTE PTR [rax],al
   14000f0d0:	out    0x1a,eax
   14000f0d2:	add    BYTE PTR [rax],al
   14000f0d4:	nop
   14000f0d5:	ret    
   14000f0d6:	add    BYTE PTR [rax],al
   14000f0d8:	lock sbb al,BYTE PTR [rax]
   14000f0db:	add    dh,ah
   14000f0dd:	sbb    eax,0xc4700000
   14000f0e2:	add    BYTE PTR [rax],al
   14000f0e4:	in     al,dx
   14000f0e5:	sbb    eax,0x1e9a0000
   14000f0ea:	add    BYTE PTR [rax],al
   14000f0ec:	xchg   esp,eax
   14000f0ed:	(bad)  
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	movabs al,ds:0x6400001efc00001e
   14000f0f9:	ret    
   14000f0fa:	add    BYTE PTR [rax],al
   14000f0fc:	add    al,0x1f
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	ret    
   14000f101:	(bad)  
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f105:	(bad)  
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	rcr    BYTE PTR [rdi],1
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	sub    al,0x20
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	fs ret 
   14000f112:	add    BYTE PTR [rax],al
   14000f114:	rex.WR and BYTE PTR [rax],r8b
   14000f117:	add    dh,bl
   14000f119:	and    al,BYTE PTR [rax]
   14000f11b:	add    ah,cl
   14000f11d:	(bad)  
   14000f11e:	add    BYTE PTR [rax],al
   14000f120:	in     al,0x22
   14000f122:	add    BYTE PTR [rax],al
   14000f124:	mov    bl,0x25
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	hlt    
   14000f129:	(bad)  
   14000f12a:	add    BYTE PTR [rax],al
   14000f12c:	shl    BYTE PTR [rip+0x25ed0000],0x0        # 0x165edf133
   14000f133:	add    BYTE PTR [rbx+rax*8+0x0],dh
   14000f137:	add    ah,dh
   14000f139:	and    eax,0x27340000
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	adc    al,0xc5
   14000f142:	add    BYTE PTR [rax],al
   14000f144:	cmp    al,0x27
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f149:	sub    DWORD PTR [rax],eax
   14000f14b:	add    BYTE PTR [rax],ch
   14000f14d:	(bad)
   14000f150:	lods   al,BYTE PTR ds:[rsi]
   14000f151:	sub    DWORD PTR [rax],eax
   14000f153:	add    dh,bl
   14000f155:	sub    DWORD PTR [rax],eax
   14000f157:	add    BYTE PTR [rax-0x3d],al
   14000f15a:	add    BYTE PTR [rax],al
   14000f15c:	in     al,0x29
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	shr    DWORD PTR [rbx],0x0
   14000f163:	add    BYTE PTR [rax-0x37ffff3b],ah
   14000f169:	sub    eax,DWORD PTR [rax]
   14000f16b:	add    BYTE PTR [rbp+0x2c],cl
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	xchg   esp,eax
   14000f171:	(bad)  
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	push   rsp
   14000f175:	sub    al,0x0
   14000f177:	add    BYTE PTR [rcx+0x2c],dh
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	adc    bl,al
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	js     0x14000f1ae
   14000f182:	add    BYTE PTR [rax],al
   14000f184:	push   rsp
   14000f185:	(bad)  
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	fs ret 
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	pop    rsp
   14000f18d:	(bad)  
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	jge    0x14000f1c2
   14000f192:	add    BYTE PTR [rax],al
   14000f194:	rol    ch,0x0
   14000f197:	add    BYTE PTR [rax+rsi*1+0x31ba0000],al
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	(bad)  
   14000f1a1:	(bad)
   14000f1a4:	shl    BYTE PTR [rcx],0x0
   14000f1a7:	add    dl,ah
   14000f1a9:	xor    al,BYTE PTR [rax]
   14000f1ab:	add    BYTE PTR [rax],ch
   14000f1ad:	mov    BYTE PTR [rax],0x0
   14000f1b0:	call   0x18a00f1e7
   14000f1b5:	xor    al,0x0
   14000f1b7:	add    BYTE PTR [rsi+rax*8],bh
   14000f1ba:	add    BYTE PTR [rax],al
   14000f1bc:	push   rax
   14000f1bd:	xor    al,0x0
   14000f1bf:	add    BYTE PTR [rbp+rsi*1-0x39680000],cl
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	xchg   esp,eax
   14000f1c9:	xor    eax,0x37110000
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	lock mov BYTE PTR [rax],0x0
   14000f1d4:	sbb    BYTE PTR [rdi],dh
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	xchg   ebp,eax
   14000f1d9:	cmp    BYTE PTR [rax],al
   14000f1db:	add    BYTE PTR [rax-0x39],dl
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	pushf  
   14000f1e1:	cmp    BYTE PTR [rax],al
   14000f1e3:	add    BYTE PTR [rdx-0x5fffffc7],bh
   14000f1e9:	mov    DWORD PTR [rax],0x39c000
   14000f1ef:	add    ch,ah
   14000f1f1:	add    BYTE PTR ds:[rax],al
   14000f1f4:	mov    esp,0xec0000c7
   14000f1f9:	add    BYTE PTR ds:[rax],al
   14000f1fc:	and    bh,BYTE PTR [rdi]
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	rex ret 
   14000f202:	add    BYTE PTR [rax],al
   14000f204:	sub    BYTE PTR [rdi],bh
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	lods   eax,DWORD PTR ds:[rsi]
   14000f209:	(bad)  
   14000f20a:	add    BYTE PTR [rax],al
   14000f20c:	xchg   esp,eax
   14000f20d:	(bad)  
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	mov    ah,0x3f
   14000f212:	add    BYTE PTR [rax],al
   14000f214:	cmp    al,BYTE PTR [rax+0x0]
   14000f217:	add    BYTE PTR [rax+0x400000c8],cl
   14000f21d:	add    BYTE PTR [rax],al
   14000f220:	mov    BYTE PTR [rax+0x0],0x0
   14000f224:	mov    al,cl
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	int3   
   14000f229:	add    BYTE PTR [rax],al
   14000f22c:	rex.RX
   14000f22d:	rex.XB add BYTE PTR [r8],al
   14000f230:	cwde   
   14000f231:	enter  0x0,0x4c
   14000f235:	rex.XB add BYTE PTR [r8],al
   14000f238:	jae    0x14000f27e
   14000f23a:	add    BYTE PTR [rax],al
   14000f23c:	add    cl,cl
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	add    BYTE PTR [rax+rax*1+0x0],0x99
   14000f245:	add    BYTE PTR [rax],r8b
   14000f248:	je     0x14000f20d
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	movabs al,ds:0x7c00004529000044
   14000f255:	ret    
   14000f256:	add    BYTE PTR [rax],al
   14000f258:	xor    BYTE PTR [rbp+0x0],al
   14000f25b:	add    BYTE PTR [rbp+0x46],cl
   14000f25e:	add    BYTE PTR [rax],al
   14000f260:	fs ret 
   14000f262:	add    BYTE PTR [rax],al
   14000f264:	add    BYTE PTR [rsi+0x0],0x0
   14000f268:	out    dx,eax
   14000f269:	rex.RX add BYTE PTR [rax],r8b
   14000f26c:	fs ret 
   14000f26e:	add    BYTE PTR [rax],al
   14000f270:	add    BYTE PTR [rdi+0x0],al
   14000f273:	add    BYTE PTR [rdx+0x47],ch
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	jl     0x14000f23d
   14000f27a:	add    BYTE PTR [rax],al
   14000f27c:	movabs al,ds:0x140000482a000047
   14000f285:	leave  
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	xor    BYTE PTR [rax+0x0],cl
   14000f28b:	add    BYTE PTR [rdx+0x14000048],bh
   14000f291:	leave  
   14000f292:	add    BYTE PTR [rax],al
   14000f294:	ror    BYTE PTR [rax+0x0],0x0
   14000f298:	rex.W
   14000f299:	rex.WB add BYTE PTR [r8],al
   14000f29c:	adc    al,0xc9
   14000f29e:	add    BYTE PTR [rax],al
   14000f2a0:	push   rax
   14000f2a1:	rex.WB add BYTE PTR [r8],al
   14000f2a4:	mov    ebx,0x2c000049
   14000f2a9:	leave  
   14000f2aa:	add    BYTE PTR [rax],al
   14000f2ac:	ror    BYTE PTR [rcx+0x0],1
   14000f2af:	add    BYTE PTR [rdx],bl
   14000f2b1:	rex.WX add BYTE PTR [rax],al
   14000f2b4:	fs ret 
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	and    BYTE PTR [rdx+0x0],cl
   14000f2bb:	add    BYTE PTR [rax+0x4a],ch
   14000f2be:	add    BYTE PTR [rax],al
   14000f2c0:	fs ret 
   14000f2c2:	add    BYTE PTR [rax],al
   14000f2c4:	jo     0x14000f310
   14000f2c6:	add    BYTE PTR [rax],al
   14000f2c8:	mov    dh,0x4a
   14000f2ca:	add    BYTE PTR [rax],al
   14000f2cc:	fs ret 
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	mov    esp,0x2e00004a
   14000f2d5:	rex.WXB add BYTE PTR [r8],al
   14000f2d8:	rex.R leave 
   14000f2da:	add    BYTE PTR [rax],al
   14000f2dc:	xor    al,0x4b
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	retf   0x4d
   14000f2e3:	add    BYTE PTR [rcx+rcx*8+0x0],cl
   14000f2e7:	add    al,dl
   14000f2e9:	rex.WRB add BYTE PTR [r8],r8b
   14000f2ec:	in     eax,dx
   14000f2ed:	rex.WRXB add BYTE PTR [r8],r8b
   14000f2f0:	jo     0x14000f2bb
   14000f2f2:	add    BYTE PTR [rax],al
   14000f2f4:	hlt    
   14000f2f5:	rex.WRXB add BYTE PTR [r8],r8b
   14000f2f8:	rex.X push rax
   14000f2fa:	add    BYTE PTR [rax],al
   14000f2fc:	je     0x14000f2c1
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	rex.W push rax
   14000f302:	add    BYTE PTR [rax],al
   14000f304:	mov    esi,0x94000050
   14000f309:	leave  
   14000f30a:	add    BYTE PTR [rax],al
   14000f30c:	(bad)  
   14000f30d:	push   rax
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	cmp    edx,DWORD PTR [rcx+0x0]
   14000f313:	add    BYTE PTR [rcx+rcx*8+0x51440000],bl
   14000f31a:	add    BYTE PTR [rax],al
   14000f31c:	xor    eax,0xac000052
   14000f321:	leave  
   14000f322:	add    BYTE PTR [rax],al
   14000f324:	cmp    al,0x52
   14000f326:	add    BYTE PTR [rax],al
   14000f328:	jbe    0x14000f37d
   14000f32a:	add    BYTE PTR [rax],al
   14000f32c:	(bad)  
   14000f32d:	leave  
   14000f32e:	add    BYTE PTR [rax],al
   14000f330:	jl     0x14000f385
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	(bad)  
   14000f335:	push   rbx
   14000f336:	add    BYTE PTR [rax],al
   14000f338:	rex ret 
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	rcl    BYTE PTR [rbx+0x0],1
   14000f33f:	add    BYTE PTR [rcx],ah
   14000f341:	push   rsp
   14000f342:	add    BYTE PTR [rax],al
   14000f344:	in     al,0xc9
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	sub    BYTE PTR [rax+rax*1+0x0],dl
   14000f34c:	test   DWORD PTR [rax+rax*1+0x0],edx
   14000f350:	in     al,dx
   14000f351:	leave  
   14000f352:	add    BYTE PTR [rax],al
   14000f354:	mov    WORD PTR [rax+rax*1+0x0],ss
   14000f358:	mov    esp,0xf4000055
   14000f35d:	leave  
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	(bad)  
   14000f361:	push   rbp
   14000f362:	add    BYTE PTR [rax],al
   14000f364:	cmp    edx,DWORD PTR [rdi+0x0]
   14000f367:	add    BYTE PTR [rdx+rcx*8],dl
   14000f36a:	add    BYTE PTR [rax],al
   14000f36c:	rex.R push rdi
   14000f36e:	add    BYTE PTR [rax],al
   14000f370:	mov    BYTE PTR [rax+0x0],bl
   14000f373:	add    BYTE PTR [rdx+rcx*8],dh
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	nop
   14000f379:	pop    rax
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	ss pop rcx
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	rex.W retf 0x0
   14000f384:	rex pop rcx
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	jbe    0x14000f3e3
   14000f38a:	add    BYTE PTR [rax],al
   14000f38c:	pop    rax
   14000f38d:	retf   0x0
   14000f390:	fcomp  QWORD PTR [rcx+0x0]
   14000f393:	add    ch,bh
   14000f395:	pop    rcx
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	adc    bl,al
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	add    al,0x5a
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	cmp    al,0x5a
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	adc    bl,al
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	rex.R pop rdx
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	jae    0x14000f408
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	(bad)  
   14000f3b1:	retf   0x0
   14000f3b4:	jl     0x14000f410
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	popf   
   14000f3b9:	pop    rdx
   14000f3ba:	add    BYTE PTR [rax],al
   14000f3bc:	adc    bl,al
   14000f3be:	add    BYTE PTR [rax],al
   14000f3c0:	rcr    BYTE PTR [rdx+0x0],1
   14000f3c3:	add    BYTE PTR [rcx],cl
   14000f3c5:	pop    rbx
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	rex ret 
   14000f3ca:	add    BYTE PTR [rax],al
   14000f3cc:	adc    BYTE PTR [rbx+0x0],bl
   14000f3cf:	add    BYTE PTR [rdi],bh
   14000f3d1:	pop    rbx
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	rex ret 
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	rex.W pop rbx
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	push   0xffffffffec00005b
   14000f3e1:	(bad)  
   14000f3e2:	add    BYTE PTR [rax],al
   14000f3e4:	jo     0x14000f441
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	xchg   ebx,eax
   14000f3e9:	pop    rbx
   14000f3ea:	add    BYTE PTR [rax],al
   14000f3ec:	in     al,dx
   14000f3ed:	(bad)  
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	pushf  
   14000f3f1:	pop    rbx
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	mov    edi,0xec00005b
   14000f3f9:	(bad)  
   14000f3fa:	add    BYTE PTR [rax],al
   14000f3fc:	enter  0x5b,0x0
   14000f400:	stc    
   14000f401:	pop    rbx
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	adc    bl,al
   14000f406:	add    BYTE PTR [rax],al
   14000f408:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000f40c:	iret   
   14000f40d:	pop    rsp
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	je     0x14000f3d5
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	loopne 0x14000f472
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	sub    DWORD PTR [rbp+0x0],ebx
   14000f41b:	add    BYTE PTR [rax-0x36],bl
   14000f41e:	add    BYTE PTR [rax],al
   14000f420:	xor    BYTE PTR [rbp+0x0],bl
   14000f423:	add    BYTE PTR [rcx+0x6800005f],ah
   14000f429:	retf   0x0
   14000f42c:	mov    al,0x5f
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	ret    0x5f
   14000f433:	add    BYTE PTR [rbx+rax*8+0x0],dh
   14000f437:	add    al,ah
   14000f439:	pop    rdi
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	(bad)  
   14000f43d:	pop    rdi
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	test   al,0xca
   14000f442:	add    BYTE PTR [rax],al
   14000f444:	add    al,0x60
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	movabs ds:0xa80000caac000060,al
   14000f451:	(bad)  
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	mov    edi,0x74000060
   14000f459:	ret    
   14000f45a:	add    BYTE PTR [rax],al
   14000f45c:	fsub   QWORD PTR [rax+0x0]
   14000f45f:	add    bl,bh
   14000f461:	(bad)  
   14000f462:	add    BYTE PTR [rax],al
   14000f464:	ror    dl,1
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	jo     0x14000f4cb
   14000f46a:	add    BYTE PTR [rax],al
   14000f46c:	movabs al,ds:0xc00000c340000061
   14000f475:	(bad)  
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	stc    
   14000f479:	(bad)  
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	je     0x14000f441
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	add    BYTE PTR [rdx+0x0],ah
   14000f483:	add    BYTE PTR [rax],bl
   14000f485:	(bad)  
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	je     0x14000f44d
   14000f48a:	add    BYTE PTR [rax],al
   14000f48c:	sub    al,0x62
   14000f48e:	add    BYTE PTR [rax],al
   14000f490:	and    BYTE PTR [rdx+0x0],0x0
   14000f494:	pop    rax
   14000f495:	retf   
   14000f496:	add    BYTE PTR [rax],al
   14000f498:	mov    BYTE PTR [rdx+0x0],ah
   14000f49b:	add    ch,cl
   14000f49d:	(bad)  
   14000f49e:	add    BYTE PTR [rax],al
   14000f4a0:	adc    bl,al
   14000f4a2:	add    BYTE PTR [rax],al
   14000f4a4:	rex movsxd eax,DWORD PTR [rax]
   14000f4a7:	add    BYTE PTR [rbp+0x78000063],cl
   14000f4ad:	retf   
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	(bad)  
   14000f4b1:	movsxd eax,DWORD PTR [rax]
   14000f4b3:	add    BYTE PTR [rsp+riz*2-0x34640000],ah
   14000f4ba:	add    BYTE PTR [rax],al
   14000f4bc:	(bad)  
   14000f4bd:	add    BYTE PTR fs:[rax],al
   14000f4c0:	clc    
   14000f4c1:	add    BYTE PTR fs:[rax],al
   14000f4c4:	adc    bl,al
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	add    BYTE PTR [rbp+0x0],ah
   14000f4cb:	add    BYTE PTR [rcx+0x66],dh
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	mov    al,0xcb
   14000f4d2:	add    BYTE PTR [rax],al
   14000f4d4:	js     0x14000f53c
   14000f4d6:	add    BYTE PTR [rax],al
   14000f4d8:	outs   dx,DWORD PTR ds:[rsi]
   14000f4d9:	add    BYTE PTR [eax],al
   14000f4dc:	test   al,0xcb
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	shl    BYTE PTR [rdi+0x0],1
   14000f4e3:	add    BYTE PTR [rdi+0x68],al
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	mov    esp,0x800000cb
   14000f4ed:	push   0x68f70000
   14000f4f2:	add    BYTE PTR [rax],al
   14000f4f4:	(bad)  
   14000f4f5:	retf   
   14000f4f6:	add    BYTE PTR [rax],al
   14000f4f8:	add    BYTE PTR [rcx+0x0],ch
   14000f4fb:	add    BYTE PTR [rip+0x74000069],bl        # 0x1b400f56a
   14000f501:	ret    
   14000f502:	add    BYTE PTR [rax],al
   14000f504:	and    al,0x69
   14000f506:	add    BYTE PTR [rax],al
   14000f508:	xchg   DWORD PTR [rcx+0x0],ebp
   14000f50b:	add    BYTE PTR [rax],dl
   14000f50d:	ret    
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	nop
   14000f511:	imul   eax,DWORD PTR [rax],0x6a1f00
   14000f517:	add    BYTE PTR [rcx+rcx*8],ch
   14000f51a:	add    BYTE PTR [rax],al
   14000f51c:	rex push 0x0
   14000f51f:	add    BYTE PTR [rdx+0x6a],al
   14000f522:	add    BYTE PTR [rax],al
   14000f524:	mov    eax,0x560000cb
   14000f529:	push   0x0
   14000f52b:	add    BYTE PTR [rdx+0x6000006a],bl
   14000f531:	(bad)  
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	(bad)  
   14000f535:	push   0x0
   14000f537:	add    BYTE PTR [rdi+0x6000006a],bh
   14000f53d:	(bad)  
   14000f53e:	add    BYTE PTR [rax],al
   14000f540:	fild   QWORD PTR [rbx+0x0]
   14000f543:	add    ch,bh
   14000f545:	imul   eax,DWORD PTR [rax],0x0
   14000f548:	pushf  
   14000f549:	retf   0x0
   14000f54c:	add    ebp,DWORD PTR [rax+rax*1+0x0]
   14000f550:	(bad)  
   14000f551:	ins    BYTE PTR es:[rdi],dx
   14000f552:	add    BYTE PTR [rax],al
   14000f554:	pushf  
   14000f555:	retf   0x0
   14000f558:	and    al,0x6c
   14000f55a:	add    BYTE PTR [rax],al
   14000f55c:	rex.R ins BYTE PTR es:[rdi],dx
   14000f55e:	add    BYTE PTR [rax],al
   14000f560:	rex.W retf 
   14000f562:	add    BYTE PTR [rax],al
   14000f564:	push   rax
   14000f565:	ins    BYTE PTR es:[rdi],dx
   14000f566:	add    BYTE PTR [rax],al
   14000f568:	jo     0x14000f5d6
   14000f56a:	add    BYTE PTR [rax],al
   14000f56c:	pushf  
   14000f56d:	retf   0x0
   14000f570:	loopne 0x14000f5de
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	or     BYTE PTR [rbp+0x0],ch
   14000f577:	add    BYTE PTR [rbx+rax*8+0x0],dh
   14000f57b:	add    BYTE PTR [rax],dl
   14000f57d:	ins    DWORD PTR es:[rdi],dx
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	imul   ebp,DWORD PTR [rbp+0x0],0x0
   14000f584:	adc    bl,al
   14000f586:	add    BYTE PTR [rax],al
   14000f588:	sub    BYTE PTR [rbp+0x0],0x0
   14000f58c:	(bad)  
   14000f58d:	ins    DWORD PTR es:[rdi],dx
   14000f58e:	add    BYTE PTR [rax],al
   14000f590:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f591:	.byte 0xc4
	...

Disassembly of section .didat:

0000000140010000 <.didat>:
   140010000:	(bad)  
   140010001:	push   0x14000
	...
   14001000e:	add    BYTE PTR [rax],al
   140010010:	mov    al,0x67
   140010012:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    al,BYTE PTR [rax]
   14001100e:	add    DWORD PTR [rax],eax
   140011010:	test   BYTE PTR [rax],0x0
   140011013:	sub    BYTE PTR [rax],0x0
   140011016:	add    BYTE PTR [rax-0x7fffff18],al
   14001101c:	add    BYTE PTR [rax],al
   14001101f:	adc    BYTE PTR [rax],0x0
   140011022:	add    BYTE PTR [rax],al
   140011024:	pop    rax
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    BYTE PTR [rax],0x0
	...
   140011036:	add    DWORD PTR [rax],eax
   140011038:	add    DWORD PTR [rax],eax
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	jo     0x14001103e
   14001103e:	add    BYTE PTR [rax+0x0],al
	...
   14001104c:	add    BYTE PTR [rax],al
   14001104e:	add    DWORD PTR [rax],eax
   140011050:	leave  
   140011051:	add    BYTE PTR [rax],al
   140011053:	add    BYTE PTR [rax+0x800000],cl
	...
   140011065:	add    BYTE PTR [rcx],al
   140011067:	add    BYTE PTR [rcx],al
   140011069:	add    BYTE PTR [rax],al
   14001106b:	add    BYTE PTR [rax+0x800000],ah
	...
   14001107d:	add    BYTE PTR [rcx],al
   14001107f:	add    BYTE PTR [rcx],cl
   140011081:	add    al,0x0
   140011083:	add    BYTE PTR [rax+0x0],bh
	...
   140011095:	add    BYTE PTR [rcx],al
   140011097:	add    BYTE PTR [rcx],cl
   140011099:	add    al,0x0
   14001109b:	add    al,cl
	...
   1400110ad:	add    BYTE PTR [rcx],al
   1400110af:	add    BYTE PTR [rcx],cl
   1400110b1:	add    al,0x0
   1400110b3:	add    al,bl
   1400110b5:	add    BYTE PTR [rax],al
   1400110b7:	add    BYTE PTR [rax],al
   1400110b9:	(bad)  
   1400110ba:	add    DWORD PTR [rax],eax
   1400110bc:	fadd   DWORD PTR [rax]
	...
   1400110c6:	add    BYTE PTR [rax],al
   1400110c8:	rcl    BYTE PTR [rcx+rax*1],0x0
   1400110cc:	add    DWORD PTR ds:[rax],eax
	...
   1400110d7:	add    BYTE PTR [rax],al
   1400110d9:	adc    DWORD PTR [rcx],eax
   1400110db:	add    al,al
   1400110dd:	add    eax,DWORD PTR [rax]
	...
   1400110e7:	add    BYTE PTR [rsi],al
   1400110e9:	add    BYTE PTR [rbp+0x0],dl
   1400110ec:	rex.WB add BYTE PTR [r14+0x0],al
   1400110f0:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400110f5:	add    BYTE PTR [rbx],al
   1400110f7:	add    BYTE PTR [rbp+0x0],cl
   1400110fa:	push   rbp
   1400110fb:	add    BYTE PTR [rcx+0x0],cl
   1400110fe:	add    BYTE PTR [rax],al
   140011100:	rol    BYTE PTR [rbx],0x34
   140011103:	add    BYTE PTR [rax],al
   140011105:	add    BYTE PTR [rsi+0x0],dl
   140011108:	push   rbx
   140011109:	add    BYTE PTR [rdi+0x0],bl
   14001110c:	push   rsi
   14001110d:	add    BYTE PTR [rbp+0x0],al
   140011110:	push   rdx
   140011111:	add    BYTE PTR [rbx+0x0],dl
   140011114:	rex.WB add BYTE PTR [r15+0x0],cl
   140011118:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001111c:	rex.WB add BYTE PTR [r14+0x0],cl
   140011120:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140011124:	add    BYTE PTR [rax],al
   140011126:	add    BYTE PTR [rax],al
   140011128:	mov    ebp,0xfeef04
   14001112d:	add    BYTE PTR [rcx],al
   14001112f:	add    BYTE PTR [rax],al
   140011131:	add    BYTE PTR [rdx],cl
   140011133:	add    BYTE PTR [rax],ah
   140011135:	rex.XB add BYTE PTR [r8],bpl
   140011138:	add    BYTE PTR [rax],al
   14001113a:	or     al,BYTE PTR [rax]
   14001113c:	and    BYTE PTR [rbx+0x0],al
   14001113f:	sub    BYTE PTR [rdi],bh
   140011141:	add    BYTE PTR [rax],al
   140011143:	add    BYTE PTR [rax],al
   140011145:	add    BYTE PTR [rax],al
   140011147:	add    BYTE PTR [rax+rax*1],al
   14001114a:	add    al,0x0
   14001114c:	add    DWORD PTR [rax],eax
	...
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	(bad)  
   14001115d:	add    eax,DWORD PTR [rax]
   14001115f:	add    BYTE PTR [rcx],al
   140011161:	add    BYTE PTR [rbx+0x0],dl
   140011164:	je     0x140011166
   140011166:	jb     0x140011168
   140011168:	imul   eax,DWORD PTR [rax],0x67006e
   14001116e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011172:	ins    BYTE PTR es:[rdi],dx
   140011173:	add    BYTE PTR [rbp+0x0],ah
   140011176:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001117a:	data16 add BYTE PTR [rdi+0x0],ch
   14001117e:	add    BYTE PTR [rax],al
   140011180:	cli    
   140011181:	add    al,BYTE PTR [rax]
   140011183:	add    BYTE PTR [rcx],al
   140011185:	add    BYTE PTR [rax],dh
   140011187:	add    BYTE PTR [rax+rax*1],dh
   14001118a:	xor    BYTE PTR [rax],al
   14001118c:	cmp    DWORD PTR [rax],eax
   14001118e:	xor    BYTE PTR [rax],al
   140011190:	xor    al,0x0
   140011192:	rex.X add BYTE PTR [rax],sil
   140011195:	add    BYTE PTR [rax],al
   140011197:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001119b:	add    BYTE PTR [rcx],al
   14001119d:	add    BYTE PTR [rbx+0x0],al
   1400111a0:	outs   dx,DWORD PTR ds:[rsi]
   1400111a1:	add    BYTE PTR [rbp+0x0],ch
   1400111a4:	jo     0x1400111a6
   1400111a6:	(bad)  
   1400111a7:	add    BYTE PTR [rsi+0x0],ch
   1400111aa:	jns    0x1400111ac
   1400111ac:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400111b0:	ins    DWORD PTR es:[rdi],dx
   1400111b1:	add    BYTE PTR [rbp+0x0],ah
   1400111b4:	add    BYTE PTR [rax],al
   1400111b6:	add    BYTE PTR [rax],al
   1400111b8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400111bc:	movsxd eax,DWORD PTR [rax]
   1400111be:	jb     0x1400111c0
   1400111c0:	outs   dx,DWORD PTR ds:[rsi]
   1400111c1:	add    BYTE PTR [rbx+0x0],dh
   1400111c4:	outs   dx,DWORD PTR ds:[rsi]
   1400111c5:	add    BYTE PTR [rsi+0x0],ah
   1400111c8:	je     0x1400111ca
   1400111ca:	and    BYTE PTR [rax],al
   1400111cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400111d0:	jb     0x1400111d2
   1400111d2:	jo     0x1400111d4
   1400111d4:	outs   dx,DWORD PTR ds:[rsi]
   1400111d5:	add    BYTE PTR [rdx+0x0],dh
   1400111d8:	(bad)  
   1400111d9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400111dd:	add    BYTE PTR [rdi+0x0],ch
   1400111e0:	outs   dx,BYTE PTR ds:[rsi]
   1400111e1:	add    BYTE PTR [rax],al
   1400111e3:	add    BYTE PTR [rax+rax*1+0x16],dl
   1400111e7:	add    BYTE PTR [rcx],al
   1400111e9:	add    BYTE PTR [rsi+0x0],al
   1400111ec:	imul   eax,DWORD PTR [rax],0x65006c
   1400111f2:	add    BYTE PTR [rbp+0x0],r12b
   1400111f6:	jae    0x1400111f8
   1400111f8:	movsxd eax,DWORD PTR [rax]
   1400111fa:	jb     0x1400111fc
   1400111fc:	imul   eax,DWORD PTR [rax],0x740070
   140011202:	imul   eax,DWORD PTR [rax],0x6e006f
   140011208:	add    BYTE PTR [rax],al
   14001120a:	add    BYTE PTR [rax],al
   14001120c:	rex.WRB add BYTE PTR [r13+0x0],r14b
   140011210:	jae    0x140011212
   140011212:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140011216:	je     0x140011218
   140011218:	imul   eax,DWORD PTR [rax],0x690066
   14001121e:	movsxd eax,DWORD PTR [rax]
   140011220:	(bad)  
   140011221:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011225:	add    BYTE PTR [rdi+0x0],ch
   140011228:	outs   dx,BYTE PTR ds:[rsi]
   140011229:	add    BYTE PTR [rbp+0x0],dl
   14001122c:	js     0x14001122e
   14001122e:	add    BYTE PTR cs:[rbp+0x0],ah
   140011232:	js     0x140011234
   140011234:	add    BYTE PTR gs:[rax],al
   140011237:	add    BYTE PTR [rsi+0x0],ch
   14001123a:	(bad)  
   14001123b:	add    BYTE PTR [rcx],al
   14001123d:	add    BYTE PTR [rsi+0x0],al
   140011240:	imul   eax,DWORD PTR [rax],0x65006c
   140011246:	push   rsi
   140011247:	add    BYTE PTR [rbp+0x0],ah
   14001124a:	jb     0x14001124c
   14001124c:	jae    0x14001124e
   14001124e:	imul   eax,DWORD PTR [rax],0x6e006f
   140011254:	add    BYTE PTR [rax],al
   140011256:	add    BYTE PTR [rax],al
   140011258:	xor    DWORD PTR [rax],eax
   14001125a:	xor    BYTE PTR [rax],al
   14001125c:	add    BYTE PTR cs:[rax],dh
   14001125f:	add    BYTE PTR [rsi],ch
   140011261:	add    BYTE PTR [rcx],dh
   140011263:	add    BYTE PTR [rax],dh
   140011265:	add    BYTE PTR [rdx],dh
   140011267:	add    BYTE PTR [rax+rax*1],dh
   14001126a:	xor    BYTE PTR [rax],al
   14001126c:	add    BYTE PTR cs:[rcx],dh
   14001126f:	add    BYTE PTR [rdi],dh
   140011271:	add    BYTE PTR [rcx],dh
   140011273:	add    BYTE PTR [rax],bh
   140011275:	add    BYTE PTR [rax+rax*1],dh
   140011278:	and    BYTE PTR [rax],al
   14001127a:	sub    BYTE PTR [rax],al
   14001127c:	je     0x14001127e
   14001127e:	push   0x5f003100
   140011283:	add    BYTE PTR [rbx+0x0],dh
   140011286:	je     0x140011288
   140011288:	xor    DWORD PTR [rax],eax
   14001128a:	add    BYTE PTR cs:[rcx],dh
   14001128d:	add    BYTE PTR [rsi],dh
   14001128f:	add    BYTE PTR [rcx],dh
   140011291:	add    BYTE PTR [rax],dh
   140011293:	add    BYTE PTR [rdx],dh
   140011295:	add    BYTE PTR [rax+rax*1],dh
   140011298:	sub    eax,0x38003100
   14001129d:	add    BYTE PTR [rdx],dh
   14001129f:	add    BYTE PTR [rax],dh
   1400112a1:	add    BYTE PTR [rcx],ch
   1400112a3:	add    BYTE PTR [rax],al
   1400112a5:	add    BYTE PTR [rax],al
   1400112a7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400112ab:	add    BYTE PTR [rcx],al
   1400112ad:	add    BYTE PTR [rcx+0x0],cl
   1400112b0:	outs   dx,BYTE PTR ds:[rsi]
   1400112b1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400112b5:	add    BYTE PTR [rdx+0x0],dh
   1400112b8:	outs   dx,BYTE PTR ds:[rsi]
   1400112b9:	add    BYTE PTR [rcx+0x0],ah
   1400112bc:	ins    BYTE PTR es:[rdi],dx
   1400112bd:	add    BYTE PTR [rsi+0x0],cl
   1400112c0:	(bad)  
   1400112c1:	add    BYTE PTR [rbp+0x0],ch
   1400112c4:	add    BYTE PTR gs:[rax],al
   1400112c7:	add    BYTE PTR [rbp+0x0],cl
   1400112ca:	jne    0x1400112cc
   1400112cc:	jae    0x1400112ce
   1400112ce:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400112d2:	je     0x1400112d4
   1400112d4:	imul   eax,DWORD PTR [rax],0x690066
   1400112da:	movsxd eax,DWORD PTR [rax]
   1400112dc:	(bad)  
   1400112dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400112e1:	add    BYTE PTR [rdi+0x0],ch
   1400112e4:	outs   dx,BYTE PTR ds:[rsi]
   1400112e5:	add    BYTE PTR [rbp+0x0],dl
   1400112e8:	js     0x1400112ea
   1400112ea:	add    BYTE PTR cs:[rbp+0x0],ah
   1400112ee:	js     0x1400112f0
   1400112f0:	add    BYTE PTR gs:[rax],al
   1400112f3:	add    BYTE PTR [rax+0x1002e00],al
   1400112f9:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400112fd:	add    BYTE PTR [rdi+0x0],ah
   140011300:	(bad)  
   140011301:	add    BYTE PTR [rax+rax*1+0x43],ch
   140011305:	add    BYTE PTR [rdi+0x0],ch
   140011308:	jo     0x14001130a
   14001130a:	jns    0x14001130c
   14001130c:	jb     0x14001130e
   14001130e:	imul   eax,DWORD PTR [rax],0x680067
   140011314:	je     0x140011316
   140011316:	add    BYTE PTR [rax],al
   140011318:	test   eax,0x4d002000
   14001131d:	add    BYTE PTR [rcx+0x0],ch
   140011320:	movsxd eax,DWORD PTR [rax]
   140011322:	jb     0x140011324
   140011324:	outs   dx,DWORD PTR ds:[rsi]
   140011325:	add    BYTE PTR [rbx+0x0],dh
   140011328:	outs   dx,DWORD PTR ds:[rsi]
   140011329:	add    BYTE PTR [rsi+0x0],ah
   14001132c:	je     0x14001132e
   14001132e:	and    BYTE PTR [rax],al
   140011330:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011334:	jb     0x140011336
   140011336:	jo     0x140011338
   140011338:	outs   dx,DWORD PTR ds:[rsi]
   140011339:	add    BYTE PTR [rdx+0x0],dh
   14001133c:	(bad)  
   14001133d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011341:	add    BYTE PTR [rdi+0x0],ch
   140011344:	outs   dx,BYTE PTR ds:[rsi]
   140011345:	add    BYTE PTR [rsi],ch
   140011347:	add    BYTE PTR [rax],ah
   140011349:	add    BYTE PTR [rcx+0x0],al
   14001134c:	ins    BYTE PTR es:[rdi],dx
   14001134d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140011351:	add    BYTE PTR [rdx+0x0],dh
   140011354:	imul   eax,DWORD PTR [rax],0x680067
   14001135a:	je     0x14001135c
   14001135c:	jae    0x14001135e
   14001135e:	and    BYTE PTR [rax],al
   140011360:	jb     0x140011362
   140011362:	add    BYTE PTR gs:[rbx+0x0],dh
   140011366:	add    BYTE PTR gs:[rdx+0x0],dh
   14001136a:	jbe    0x14001136c
   14001136c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140011371:	add    BYTE PTR [rax],al
   140011373:	add    BYTE PTR [rax+rax*1+0x16],dl
   140011377:	add    BYTE PTR [rcx],al
   140011379:	add    BYTE PTR [rdi+0x0],cl
   14001137c:	jb     0x14001137e
   14001137e:	imul   eax,DWORD PTR [rax],0x690067
   140011384:	outs   dx,BYTE PTR ds:[rsi]
   140011385:	add    BYTE PTR [rcx+0x0],ah
   140011388:	ins    BYTE PTR es:[rdi],dx
   140011389:	add    BYTE PTR [rsi+0x0],al
   14001138c:	imul   eax,DWORD PTR [rax],0x65006c
   140011392:	outs   dx,BYTE PTR ds:[rsi]
   140011393:	add    BYTE PTR [rcx+0x0],ah
   140011396:	ins    DWORD PTR es:[rdi],dx
   140011397:	add    BYTE PTR [rbp+0x0],ah
   14001139a:	add    BYTE PTR [rax],al
   14001139c:	rex.WRB add BYTE PTR [r13+0x0],r14b
   1400113a0:	jae    0x1400113a2
   1400113a2:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400113a6:	je     0x1400113a8
   1400113a8:	imul   eax,DWORD PTR [rax],0x690066
   1400113ae:	movsxd eax,DWORD PTR [rax]
   1400113b0:	(bad)  
   1400113b1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400113b5:	add    BYTE PTR [rdi+0x0],ch
   1400113b8:	outs   dx,BYTE PTR ds:[rsi]
   1400113b9:	add    BYTE PTR [rbp+0x0],dl
   1400113bc:	js     0x1400113be
   1400113be:	add    BYTE PTR cs:[rbp+0x0],ah
   1400113c2:	js     0x1400113c4
   1400113c4:	add    BYTE PTR gs:[rax],al
   1400113c7:	add    BYTE PTR [rdx+0x0],ch
   1400113ca:	and    eax,0x50000100
   1400113cf:	add    BYTE PTR [rdx+0x0],dh
   1400113d2:	outs   dx,DWORD PTR ds:[rsi]
   1400113d3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400113d7:	add    BYTE PTR [rbx+0x0],ah
   1400113da:	je     0x1400113dc
   1400113dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400113e0:	ins    DWORD PTR es:[rdi],dx
   1400113e1:	add    BYTE PTR [rbp+0x0],ah
   1400113e4:	add    BYTE PTR [rax],al
   1400113e6:	add    BYTE PTR [rax],al
   1400113e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400113ec:	movsxd eax,DWORD PTR [rax]
   1400113ee:	jb     0x1400113f0
   1400113f0:	outs   dx,DWORD PTR ds:[rsi]
   1400113f1:	add    BYTE PTR [rbx+0x0],dh
   1400113f4:	outs   dx,DWORD PTR ds:[rsi]
   1400113f5:	add    BYTE PTR [rsi+0x0],ah
   1400113f8:	je     0x1400113fa
   1400113fa:	scas   al,BYTE PTR es:[rdi]
   1400113fb:	add    BYTE PTR [rax],ah
   1400113fd:	add    BYTE PTR [rdi+0x0],dl
   140011400:	imul   eax,DWORD PTR [rax],0x64006e
   140011406:	outs   dx,DWORD PTR ds:[rsi]
   140011407:	add    BYTE PTR [rdi+0x0],dh
   14001140a:	jae    0x14001140c
   14001140c:	scas   al,BYTE PTR es:[rdi]
   14001140d:	add    BYTE PTR [rax],ah
   14001140f:	add    BYTE PTR [rdi+0x0],cl
   140011412:	jo     0x140011414
   140011414:	add    BYTE PTR gs:[rdx+0x0],dh
   140011418:	(bad)  
   140011419:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001141d:	add    BYTE PTR [rsi+0x0],ch
   140011420:	add    BYTE PTR [eax],ah
   140011423:	add    BYTE PTR [rbx+0x0],dl
   140011426:	jns    0x140011428
   140011428:	jae    0x14001142a
   14001142a:	je     0x14001142c
   14001142c:	add    BYTE PTR gs:[rbp+0x0],ch
   140011430:	add    BYTE PTR [rax],al
   140011432:	add    BYTE PTR [rax],al
   140011434:	rex.RX add BYTE PTR [rcx],r10b
   140011437:	add    BYTE PTR [rcx],al
   140011439:	add    BYTE PTR [rax+0x0],dl
   14001143c:	jb     0x14001143e
   14001143e:	outs   dx,DWORD PTR ds:[rsi]
   14001143f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011443:	add    BYTE PTR [rbx+0x0],ah
   140011446:	je     0x140011448
   140011448:	push   rsi
   140011449:	add    BYTE PTR [rbp+0x0],ah
   14001144c:	jb     0x14001144e
   14001144e:	jae    0x140011450
   140011450:	imul   eax,DWORD PTR [rax],0x6e006f
   140011456:	add    BYTE PTR [rax],al
   140011458:	xor    DWORD PTR [rax],eax
   14001145a:	xor    BYTE PTR [rax],al
   14001145c:	add    BYTE PTR cs:[rax],dh
   14001145f:	add    BYTE PTR [rsi],ch
   140011461:	add    BYTE PTR [rcx],dh
   140011463:	add    BYTE PTR [rax],dh
   140011465:	add    BYTE PTR [rdx],dh
   140011467:	add    BYTE PTR [rax+rax*1],dh
   14001146a:	xor    BYTE PTR [rax],al
   14001146c:	add    BYTE PTR cs:[rcx],dh
   14001146f:	add    BYTE PTR [rdi],dh
   140011471:	add    BYTE PTR [rcx],dh
   140011473:	add    BYTE PTR [rax],bh
   140011475:	add    BYTE PTR [rax+rax*1],dh
   140011478:	add    BYTE PTR [rax],al
   14001147a:	add    BYTE PTR [rax],al
   14001147c:	add    BYTE PTR [rax],r8b
   14001147f:	add    BYTE PTR [rcx],al
   140011481:	add    BYTE PTR [rsi+0x0],dl
   140011484:	(bad)  
   140011485:	add    BYTE PTR [rdx+0x0],dh
   140011488:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001148c:	ins    BYTE PTR es:[rdi],dx
   14001148d:	add    BYTE PTR [rbp+0x0],ah
   140011490:	rex.WB add BYTE PTR [r14+0x0],bpl
   140011494:	data16 add BYTE PTR [rdi+0x0],ch
   140011498:	add    BYTE PTR [rax],al
   14001149a:	add    BYTE PTR [rax],al
   14001149c:	and    al,0x0
   14001149e:	add    al,0x0
   1400114a0:	add    BYTE PTR [rax],al
   1400114a2:	push   rsp
   1400114a3:	add    BYTE PTR [rdx+0x0],dh
   1400114a6:	(bad)  
   1400114a7:	add    BYTE PTR [rsi+0x0],ch
   1400114aa:	jae    0x1400114ac
   1400114ac:	ins    BYTE PTR es:[rdi],dx
   1400114ad:	add    BYTE PTR [rcx+0x0],ah
   1400114b0:	je     0x1400114b2
   1400114b2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400114b8:	add    BYTE PTR [rax],al
   1400114ba:	add    BYTE PTR [rax],al
   1400114bc:	or     DWORD PTR [rax+rsi*4],eax
   1400114bf:	add    al,0x3c
   1400114c1:	fs jne 0x14001152d
   1400114c4:	js     0x140011533
   1400114c6:	ins    BYTE PTR es:[rdi],dx
   1400114c7:	ds or  eax,0x7270230a
   1400114cd:	(bad)  
   1400114ce:	ins    DWORD PTR es:[edi],dx
   1400114d0:	(bad)  
   1400114d1:	and    BYTE PTR [rdi+0x6e],ch
   1400114d4:	movsxd esp,DWORD PTR [rbp+0xd]
   1400114d7:	or     bh,BYTE PTR [riz*2+0x656d656c]
   1400114de:	outs   dx,BYTE PTR ds:[rsi]
   1400114df:	je     0x140011501
   1400114e1:	jb     0x140011548
   1400114e3:	jae    0x14001154e
   1400114e5:	fs cmp eax,0x64707522
   1400114eb:	(bad)  
   1400114ec:	je     0x140011553
   1400114ee:	push   rbx
   1400114ef:	movsxd ebp,DWORD PTR [rsi+0x44]
   1400114f2:	imul   esp,DWORD PTR [rcx+0x6c],0x6f54676f
   1400114f9:	jo     0x14001151d
   1400114fb:	and    BYTE PTR [rcx+riz*2+0x79],ch
   1400114ff:	outs   dx,DWORD PTR ds:[rsi]
   140011500:	jne    0x140011576
   140011502:	cmp    eax,0x726f6222
   140011507:	fs gs jb 0x140011577
   14001150b:	(bad)  
   14001150c:	jns    0x14001157d
   14001150e:	jne    0x140011584
   140011510:	sub    BYTE PTR [rcx],ch
   140011512:	and    ah,BYTE PTR [rax]
   140011514:	(bad)  
   140011515:	movsxd esp,DWORD PTR [rbx+0x65]
   140011518:	jae    0x14001158d
   14001151a:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   140011521:	jb     0x140011598
   140011523:	and    ah,BYTE PTR gs:[rax]
   140011526:	(bad)  
   140011527:	movsxd esp,DWORD PTR [rbx+0x72]
   14001152a:	outs   dx,DWORD PTR ds:[rsi]
   14001152b:	ins    BYTE PTR es:[rdi],dx
   14001152c:	gs cmp eax,0x6e617022
   140011532:	and    bh,BYTE PTR gs:[rsi]
   140011535:	or     eax,0x69523c0a
   14001153a:	movsxd ebp,DWORD PTR [rax+0x54]
   14001153d:	gs js  0x1400115b4
   140011540:	and    BYTE PTR [rcx+0x64],ch
   140011543:	cmp    eax,0x6f746122
   140011548:	ins    DWORD PTR es:[rdi],dx
   140011549:	sub    BYTE PTR [rbp+0x70],dh
   14001154c:	fs (bad) 
   14001154e:	je     0x1400115b5
   140011550:	push   rbx
   140011551:	movsxd ebp,DWORD PTR [rsi+0x44]
   140011554:	imul   esp,DWORD PTR [rcx+0x6c],0x6f43676f
   14001155b:	outs   dx,BYTE PTR ds:[rsi]
   14001155c:	je     0x1400115c3
   14001155e:	outs   dx,BYTE PTR ds:[rsi]
   14001155f:	je     0x1400115aa
   140011561:	sub    DWORD PTR fs:[rdx],esp
   140011564:	and    BYTE PTR [rcx+riz*2+0x79],ch
   140011568:	outs   dx,DWORD PTR ds:[rsi]
   140011569:	jne    0x1400115df
   14001156b:	jo     0x1400115dc
   14001156d:	jae    0x1400115ac
   14001156f:	and    dh,BYTE PTR [rdi+rbp*2+0x70]
   140011573:	and    ah,BYTE PTR [rax]
   140011575:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140011578:	je     0x1400115df
   14001157a:	outs   dx,BYTE PTR ds:[rsi]
   14001157b:	je     0x1400115de
   14001157d:	ins    BYTE PTR es:[rdi],dx
   14001157e:	imul   esp,DWORD PTR [rdi+0x6e],0x7277223d
   140011585:	(bad)  
   140011586:	jo     0x1400115f4
   140011588:	gs data16 je 0x1400115ac
   14001158c:	jl     0x1400115ae
   14001158e:	outs   dx,BYTE PTR ds:[rsi]
   14001158f:	outs   dx,DWORD PTR ds:[rsi]
   140011590:	jo     0x140011604
   140011592:	imul   di,WORD PTR gs:[rax+0x22],0x6120
   140011599:	movsxd esp,DWORD PTR [rbx+0x65]
   14001159c:	jae    0x140011611
   14001159e:	imul   esp,DWORD PTR [rdx+0x6c],0x74223d65
   1400115a5:	jb     0x14001161c
   1400115a7:	and    ah,BYTE PTR gs:[rax]
   1400115aa:	(bad)  
   1400115ab:	movsxd esp,DWORD PTR [rbx+0x72]
   1400115ae:	outs   dx,DWORD PTR ds:[rsi]
   1400115af:	ins    BYTE PTR es:[rdi],dx
   1400115b0:	gs cmp eax,0x61747322
   1400115b6:	je     0x140011621
   1400115b8:	movsxd esi,DWORD PTR [rbp+riz*2+0x78]
   1400115bc:	je     0x1400115e0
   1400115be:	and    BYTE PTR [rbx+0x6f],ah
   1400115c1:	outs   dx,BYTE PTR ds:[rsi]
   1400115c2:	je     0x140011629
   1400115c4:	outs   dx,BYTE PTR ds:[rsi]
   1400115c5:	je     0x140011604
   1400115c7:	and    ah,BYTE PTR [rdx]
   1400115c9:	and    BYTE PTR [rsi+0x6f],ah
   1400115cc:	outs   dx,BYTE PTR ds:[rsi]
   1400115cd:	je     0x14001160c
   1400115cf:	and    ah,BYTE PTR [rdi+0x74]
   1400115d2:	data16 sub BYTE PTR [rbp+rax*2+0x58],dl
   1400115d7:	push   rsp
   1400115d8:	push   rbx
   1400115d9:	push   rsp
   1400115da:	pop    rcx
   1400115db:	rex.WR
   1400115dc:	rex.RB sub al,0x31
   1400115df:	sub    al,0x30
   1400115e1:	sub    DWORD PTR [rdx],esp
   1400115e3:	(bad)  
   1400115e4:	ds or  eax,0x652f3c0a
   1400115ea:	ins    BYTE PTR es:[rdi],dx
   1400115eb:	gs ins DWORD PTR es:[rdi],dx
   1400115ed:	outs   dx,BYTE PTR gs:[rsi]
   1400115ef:	je     0x14001162f
   1400115f1:	or     eax,0x642f3c0a
   1400115f6:	jne    0x140011661
   1400115f8:	js     0x140011667
   1400115fa:	ins    BYTE PTR es:[rdi],dx
   1400115fb:	ds or  eax,0xcd00000a
   140011601:	dec    ch
   140011603:	(bad)  
   140011604:	fadd   DWORD PTR [rax]
   140011606:	add    BYTE PTR [rax],al
   140011608:	add    BYTE PTR [rax],al
   14001160a:	add    DWORD PTR [rax],eax
   14001160c:	add    BYTE PTR [rax],al
   14001160e:	add    BYTE PTR [rax],al
   140011610:	adc    DWORD PTR [rax],eax
   140011612:	add    BYTE PTR [rax],al
   140011614:	add    BYTE PTR [rax],al
   140011616:	add    BYTE PTR [rax],al
   140011618:	add    al,BYTE PTR [rax]
   14001161a:	add    BYTE PTR [rax],al
   14001161c:	outs   dx,DWORD PTR ds:[rsi]
   14001161d:	out    dx,al
   14001161e:	pop    rbp
   14001161f:	fwait
   140011620:	(bad)  
   140011621:	xchg   edi,eax
   140011622:	fimul  WORD PTR [rbx]
   140011624:	cmc    
   140011625:	mov    gs,WORD PTR es:[rbp-0x4b]
   140011629:	adc    eax,0x990ae453
   14001162e:	shl    DWORD PTR [rcx],0x4a
   140011631:	neg    BYTE PTR [rax]
   140011633:	pop    rdi
   140011634:	cli    
   140011635:	sbb    BYTE PTR [rbx],al
   140011637:	(bad)  
   140011638:	movabs al,ds:0xf55d73
	...
   140011651:	add    BYTE PTR [rax],al
   140011653:	add    BYTE PTR [rax+0x1c000000],cl
   140011659:	add    BYTE PTR [rax],al
   14001165b:	add    BYTE PTR [rax+0x4000000],ch
   140011661:	add    BYTE PTR [rax],al
   140011663:	add    BYTE PTR [rax+0xe000000],dh
   140011669:	add    BYTE PTR [rax],al
   14001166b:	add    al,al
   14001166d:	add    BYTE PTR [rax],al
   14001166f:	add    BYTE PTR [rax],cl
	...
   140011679:	add    BYTE PTR [rax],al
   14001167b:	add    al,cl
   14001167d:	add    BYTE PTR [rax],al
   14001167f:	add    BYTE PTR [rax+rax*1],cl
   140011682:	add    BYTE PTR [rax],al
   140011684:	add    BYTE PTR [rax],al
   140011686:	add    BYTE PTR [rax],al
   140011688:	push   rbp
   140011689:	add    BYTE PTR [rcx+0x0],cl
   14001168c:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140011690:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140011694:	add    BYTE PTR [rax],al
   140011696:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001169a:	rex.WB add BYTE PTR [r8],al
	...
   1400116a5:	add    BYTE PTR [rax],al
   1400116a7:	add    BYTE PTR [rax],dl
   1400116a9:	add    BYTE PTR [rax],al
   1400116ab:	add    BYTE PTR [rax],al
   1400116ad:	add    BYTE PTR [rax],al
   1400116af:	add    BYTE PTR [rbp+0x0],cl
   1400116b2:	push   rbp
   1400116b3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400116be:	add    BYTE PTR [rax],al
   1400116c0:	(bad)  
   1400116c1:	add    BYTE PTR [rax],al
   1400116c3:	add    BYTE PTR [rax],dl
   1400116c5:	add    BYTE PTR [rax],al
   1400116c7:	add    BYTE PTR [rbp+0x0],ah
   1400116ca:	outs   dx,BYTE PTR ds:[rsi]
   1400116cb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193016bd1
   1400116d1:	add    BYTE PTR [rax],al
   1400116d3:	add    BYTE PTR [rax],al
   1400116d5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax+0xe40000],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	adc    BYTE PTR [rax+rbx*1+0x30a428a4],ah
   14001200f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012010:	cmp    BYTE PTR [rax+rax*2+0x50a448a4],ah
   140012017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012018:	push   0xffffffff88a470a4
   14001201d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001201e:	cwde   
   14001201f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012020:	test   al,0xa5
   140012022:	mov    eax,0xd8a5c8a5
   140012027:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012028:	call   0x148a718d2
   14001202d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001202e:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   140012034:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012036:	pop    rax
   140012037:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012038:	push   0xffffffff88a678a6
   14001203d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001203e:	cwde   
   14001203f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012040:	test   al,0xa6
   140012042:	mov    eax,0xd8a6c8a6
   140012047:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012048:	call   0x148a818f3
   14001204d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001204e:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   140012054:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140012056:	pop    rax
   140012057:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012058:	push   0xffffffff88a778a7
   14001205d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001205e:	cwde   
   14001205f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012060:	test   al,0xa7
   140012062:	mov    eax,0xd8a7c8a7
   140012067:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012068:	call   0x148a91914
   14001206d:	test   al,0x18
   14001206f:	test   al,0x28
   140012071:	test   al,0x38
   140012073:	test   al,0x48
   140012075:	test   al,0x58
   140012077:	test   al,0x68
   140012079:	test   al,0x78
   14001207b:	test   al,0x88
   14001207d:	test   al,0x98
   14001207f:	test   al,0xa8
   140012081:	test   al,0xb8
   140012083:	test   al,0xc8
   140012085:	test   al,0xd8
   140012087:	test   al,0xe8
   140012089:	test   al,0xf8
   14001208b:	test   al,0x8
   14001208d:	test   eax,0xa928a918
   140012092:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140012098:	push   0xffffffff88a978a9
   14001209d:	test   eax,0xa9a8a998
   1400120a2:	mov    eax,0xd8a9c8a9
   1400120a7:	test   eax,0xa9f8a9e8
   1400120ac:	or     BYTE PTR [rdx-0x518755e8],ch
   1400120b2:	mov    BYTE PTR [rsi-0x51575168],ch
   1400120b8:	mov    eax,0xd8aec8ae
   1400120bd:	scas   al,BYTE PTR es:[rdi]
   1400120be:	call   0x148b01971
   1400120c3:	scas   eax,DWORD PTR es:[rdi]
   1400120c4:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400120ca:	scas   rax,QWORD PTR es:[rdi]
   1400120cc:	pop    rax
   1400120cd:	scas   eax,DWORD PTR es:[rdi]
   1400120ce:	push   0xffffffff88af78af
   1400120d3:	scas   eax,DWORD PTR es:[rdi]
   1400120d4:	cwde   
   1400120d5:	scas   eax,DWORD PTR es:[rdi]
   1400120d6:	test   al,0xaf
   1400120d8:	mov    eax,0xd8afc8af
   1400120dd:	scas   eax,DWORD PTR es:[rdi]
   1400120de:	call   0x140b11992
   1400120e3:	add    BYTE PTR [rax],al
   1400120e5:	nop
   1400120e6:	add    BYTE PTR [rax],al
   1400120e8:	mov    al,0x0
   1400120ea:	add    BYTE PTR [rax],al
   1400120ec:	or     BYTE PTR [rax-0x5fd75fe8],ah
   1400120f2:	cmp    BYTE PTR [rax-0x5fa75fb8],ah
   1400120f8:	push   0xffffffff88a078a0
   1400120fd:	movabs al,ds:0xa0c8a0b8a0a8a098
   140012106:	fsub   DWORD PTR [rax-0x5f075f18]
   14001210c:	or     BYTE PTR [rcx-0x5ed75ee8],ah
   140012112:	cmp    BYTE PTR [rcx-0x5ea75eb8],ah
   140012118:	push   0xffffffff88a178a1
   14001211d:	movabs eax,ds:0xa1c8a1b8a1a8a198
   140012126:	fsub   DWORD PTR [rcx-0x5e075e18]
   14001212c:	or     BYTE PTR [rdx-0x5dd75de8],ah
   140012132:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   140012138:	push   0xffffffff88a278a2
   14001213d:	movabs ds:0xa2c8a2b8a2a8a298,al
   140012146:	fsub   DWORD PTR [rdx-0x5d075d18]
   14001214c:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   140012152:	cmp    BYTE PTR [rbx-0x578f5cb8],ah
   140012158:	js     0x140012102
   14001215a:	nop
   14001215b:	test   al,0x98
   14001215d:	test   al,0xc8
   14001215f:	test   al,0xd0
   140012161:	test   al,0xd8
   140012163:	test   al,0x98
   140012165:	stos   DWORD PTR es:[rdi],eax
   140012166:	movabs al,ds:0xc0abb8abb0aba8ab
   14001216f:	stos   DWORD PTR es:[rdi],eax
   140012170:	mov    al,0xae
   140012172:	mov    eax,0xc8aec0ae
   140012177:	scas   al,BYTE PTR es:[rdi]
   140012178:	shr    BYTE PTR [rsi-0x50ef5128],1
   14001217e:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140012184:	xor    BYTE PTR [rdi-0x508f50c8],ch
   14001218a:	js     0x14001213b
   14001218c:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140012193:	scas   eax,DWORD PTR es:[rdi]
   140012194:	add    BYTE PTR [rax+0x500000],ah
   14001219a:	add    BYTE PTR [rax],al
   14001219c:	shl    BYTE PTR [rax-0x5f1f5f28],1
   1400121a2:	call   0x138a21247
   1400121a7:	movabs al,ds:0xa118a110a108a100
   1400121b0:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400121b6:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400121bc:	push   rax
   1400121bd:	movabs eax,ds:0xa170a168a160a158
   1400121c6:	js     0x140012169
   1400121c8:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400121cf:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400121d8:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   1400121df:	movabs eax,ds:0xb000a1e8a1e0
   1400121e8:	push   rsp
   1400121e9:	add    BYTE PTR [rax],al
   1400121eb:	add    BYTE PTR [rax-0x59],ah
   1400121ee:	push   0x78a770a7
   1400121f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400121f4:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400121fb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400121fc:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140012205:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012206:	enter  0xd0a7,0xa7
   14001220a:	fsub   DWORD PTR [rdi-0x58175820]
   140012210:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012212:	clc    
   140012213:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012214:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001221a:	sbb    BYTE PTR [rax-0x57275730],ch
   140012220:	loopne 0x1400121ca
   140012222:	call   0x138aa12cf
   140012227:	test   al,0x0
   140012229:	test   eax,0xa910a908
   14001222e:	pop    rax
   14001222f:	stos   DWORD PTR es:[rdi],eax
   140012230:	jo     0x1400121dd
   140012232:	js     0x1400121df
   140012234:	sub    BYTE PTR [rbx-0x20000000],0x0
   14001223b:	add    BYTE PTR [rax+rax*1],bl
   14001223e:	add    BYTE PTR [rax],al
   140012240:	sub    BYTE PTR [rax-0x5f8f5f98],ah
   140012246:	and    BYTE PTR [rax-0x5f575f78],0xd0
   14001224d:	movabs al,ds:0xa120a0f8
   140012256:	add    DWORD PTR [rax],eax
   140012258:	or     al,0x0
   14001225a:	add    BYTE PTR [rax],al
   14001225c:	.byte 0x0
   14001225d:	.byte 0xa0
   14001225e:	.byte 0x10
   14001225f:	.byte 0xa0
