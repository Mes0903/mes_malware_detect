
9c4078d401f7ebc70caa2050740e2562e1c7a2c98d3ff17e9fe590685ac647a6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	mov    QWORD PTR [rsp+0x10],rbp
   14000100a:	mov    QWORD PTR [rsp+0x18],rsi
   14000100f:	push   rdi
   140001010:	sub    rsp,0x40
   140001014:	cmp    QWORD PTR [rcx],0x0
   140001018:	mov    edi,r9d
   14000101b:	mov    rsi,r8
   14000101e:	mov    rbp,rdx
   140001021:	mov    rbx,rcx
   140001024:	je     0x140001077
   140001026:	lea    rcx,[rip+0x9b0b]        # 0x14000ab38
   14000102d:	call   QWORD PTR [rip+0x8ff5]        # 0x14000a028
   140001033:	test   rax,rax
   140001036:	je     0x14000109d
   140001038:	lea    rdx,[rip+0x9ae1]        # 0x14000ab20
   14000103f:	mov    rcx,rax
   140001042:	call   QWORD PTR [rip+0x8fd8]        # 0x14000a020
   140001048:	test   rax,rax
   14000104b:	je     0x14000109d
   14000104d:	mov    rcx,QWORD PTR [rbx]
   140001050:	and    QWORD PTR [rsp+0x30],0x0
   140001056:	mov    r9d,DWORD PTR [rsp+0x70]
   14000105b:	mov    QWORD PTR [rsp+0x28],rcx
   140001060:	mov    rcx,QWORD PTR [rsp+0x78]
   140001065:	mov    r8d,edi
   140001068:	mov    QWORD PTR [rsp+0x20],rcx
   14000106d:	mov    rcx,rbp
   140001070:	mov    rdx,rsi
   140001073:	call   rax
   140001075:	jmp    0x1400010a2
   140001077:	cmp    DWORD PTR [rcx+0x8],0x0
   14000107b:	je     0x14000109d
   14000107d:	mov    rax,QWORD PTR [rsp+0x78]
   140001082:	mov    r9d,DWORD PTR [rsp+0x70]
   140001087:	mov    r8d,edi
   14000108a:	mov    rdx,rsi
   14000108d:	mov    rcx,rbp
   140001090:	mov    QWORD PTR [rsp+0x20],rax
   140001095:	call   QWORD PTR [rip+0xe135]        # 0x14000f1d0
   14000109b:	jmp    0x1400010a2
   14000109d:	mov    eax,0x1
   1400010a2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400010a7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400010ac:	mov    rsi,QWORD PTR [rsp+0x60]
   1400010b1:	add    rsp,0x40
   1400010b5:	pop    rdi
   1400010b6:	ret    
   1400010b7:	int3   
   1400010b8:	mov    r11,rsp
   1400010bb:	mov    QWORD PTR [r11+0x10],rbx
   1400010bf:	push   rdi
   1400010c0:	sub    rsp,0x30
   1400010c4:	and    QWORD PTR [r11+0x8],0x0
   1400010c9:	mov    rbx,rcx
   1400010cc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400010d0:	mov    edi,r9d
   1400010d3:	mov    rax,r8
   1400010d6:	mov    r10,rdx
   1400010d9:	test   rcx,rcx
   1400010dc:	je     0x1400010f7
   1400010de:	lea    rdx,[r11+0x8]
   1400010e2:	mov    QWORD PTR [r11-0x10],rdx
   1400010e6:	mov    DWORD PTR [r11-0x18],r9d
   1400010ea:	xor    r9d,r9d
   1400010ed:	mov    rdx,r10
   1400010f0:	call   0x140001000
   1400010f5:	jmp    0x140001110
   1400010f7:	lea    rcx,[rsp+0x40]
   1400010fc:	xor    r8d,r8d
   1400010ff:	mov    rdx,rax
   140001102:	mov    QWORD PTR [rsp+0x20],rcx
   140001107:	mov    rcx,r10
   14000110a:	call   QWORD PTR [rip+0xe0c0]        # 0x14000f1d0
   140001110:	mov    r11d,eax
   140001113:	test   eax,eax
   140001115:	jne    0x14000113d
   140001117:	mov    rcx,QWORD PTR [rbx]
   14000111a:	test   rcx,rcx
   14000111d:	je     0x14000112c
   14000111f:	call   QWORD PTR [rip+0xe0b3]        # 0x14000f1d8
   140001125:	and    QWORD PTR [rbx],0x0
   140001129:	mov    r11d,eax
   14000112c:	mov    rax,QWORD PTR [rsp+0x40]
   140001131:	and    edi,0x300
   140001137:	mov    QWORD PTR [rbx],rax
   14000113a:	mov    DWORD PTR [rbx+0x8],edi
   14000113d:	mov    eax,r11d
   140001140:	mov    rbx,QWORD PTR [rsp+0x48]
   140001145:	add    rsp,0x30
   140001149:	pop    rdi
   14000114a:	ret    
   14000114b:	int3   
   14000114c:	mov    QWORD PTR [rsp+0x8],rbx
   140001151:	mov    QWORD PTR [rsp+0x10],rsi
   140001156:	push   rdi
   140001157:	sub    rsp,0x20
   14000115b:	mov    rdi,rcx
   14000115e:	test   rcx,rcx
   140001161:	jne    0x140001178
   140001163:	lea    edx,[rcx+0x1]
   140001166:	xor    r9d,r9d
   140001169:	xor    r8d,r8d
   14000116c:	mov    ecx,0xc0000005
   140001171:	call   QWORD PTR [rip+0x8e89]        # 0x14000a000
   140001177:	int3   
   140001178:	mov    rsi,QWORD PTR [rcx+0x8]
   14000117c:	test   rsi,rsi
   14000117f:	je     0x14000119b
   140001181:	mov    rcx,QWORD PTR [rsi+0x8]
   140001185:	call   QWORD PTR [rsi]
   140001187:	mov    rbx,QWORD PTR [rsi+0x10]
   14000118b:	mov    rcx,rsi
   14000118e:	call   0x140007e4c
   140001193:	mov    rsi,rbx
   140001196:	test   rbx,rbx
   140001199:	jne    0x140001181
   14000119b:	and    QWORD PTR [rdi+0x8],0x0
   1400011a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400011aa:	add    rsp,0x20
   1400011ae:	pop    rdi
   1400011af:	ret    
   1400011b0:	lea    eax,[rcx+rdx*1]
   1400011b3:	cmp    eax,edx
   1400011b5:	jae    0x1400011bd
   1400011b7:	mov    eax,0x80070216
   1400011bc:	ret    
   1400011bd:	mov    DWORD PTR [r8],eax
   1400011c0:	xor    eax,eax
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    eax,edx
   1400011d2:	mov    r9d,ecx
   1400011d5:	imul   r9,rax
   1400011d9:	mov    eax,0xffffffff
   1400011de:	cmp    r9,rax
   1400011e1:	ja     0x1400011e9
   1400011e3:	mov    DWORD PTR [r8],r9d
   1400011e6:	xor    eax,eax
   1400011e8:	ret    
   1400011e9:	mov    eax,0x80070216
   1400011ee:	ret    
   1400011ef:	int3   
   1400011f0:	int3   
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	sub    rsp,0x28
   140001204:	lea    rdx,[rip+0x9445]        # 0x14000a650
   14000120b:	mov    rcx,0xffffffff80000002
   140001212:	call   QWORD PTR [rip+0xdfd0]        # 0x14000f1e8
   140001218:	xor    ecx,ecx
   14000121a:	test   eax,eax
   14000121c:	sete   cl
   14000121f:	mov    eax,ecx
   140001221:	add    rsp,0x28
   140001225:	ret    
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    rax,rsp
   140001233:	mov    QWORD PTR [rax+0x10],rbx
   140001237:	mov    QWORD PTR [rax+0x18],rsi
   14000123b:	mov    QWORD PTR [rax+0x20],rdi
   14000123f:	push   rbp
   140001240:	push   r12
   140001242:	push   r13
   140001244:	push   r14
   140001246:	push   r15
   140001248:	lea    rbp,[rax-0xfd8]
   14000124f:	mov    eax,0x10b0
   140001254:	call   0x140008050
   140001259:	sub    rsp,rax
   14000125c:	mov    rax,QWORD PTR [rip+0xdf35]        # 0x14000f198
   140001263:	xor    rax,rsp
   140001266:	mov    QWORD PTR [rbp+0xfa0],rax
   14000126d:	xor    esi,esi
   14000126f:	mov    r15d,ecx
   140001272:	mov    r12d,0x20019
   140001278:	lea    rcx,[rbp-0x80]
   14000127c:	lea    r8,[rip+0x9345]        # 0x14000a5c8
   140001283:	mov    rdx,0xffffffff80000002
   14000128a:	mov    r9d,r12d
   14000128d:	mov    QWORD PTR [rbp-0x80],rsi
   140001291:	mov    DWORD PTR [rbp-0x78],esi
   140001294:	mov    QWORD PTR [rbp-0x70],rsi
   140001298:	mov    QWORD PTR [rsp+0x38],rsi
   14000129d:	mov    DWORD PTR [rsp+0x40],esi
   1400012a1:	mov    QWORD PTR [rsp+0x48],rsi
   1400012a6:	mov    QWORD PTR [rsp+0x50],rsi
   1400012ab:	mov    DWORD PTR [rsp+0x58],esi
   1400012af:	mov    QWORD PTR [rsp+0x60],rsi
   1400012b4:	mov    QWORD PTR [rsp+0x68],rsi
   1400012b9:	mov    DWORD PTR [rsp+0x70],esi
   1400012bd:	mov    QWORD PTR [rsp+0x78],rsi
   1400012c2:	mov    r14d,esi
   1400012c5:	call   0x1400010b8
   1400012ca:	mov    edi,eax
   1400012cc:	test   eax,eax
   1400012ce:	je     0x1400012e6
   1400012d0:	mov    rcx,QWORD PTR [rbp-0x80]
   1400012d4:	test   rcx,rcx
   1400012d7:	je     0x1400012df
   1400012d9:	call   QWORD PTR [rip+0xdef9]        # 0x14000f1d8
   1400012df:	mov    eax,edi
   1400012e1:	jmp    0x14000146e
   1400012e6:	mov    rbx,QWORD PTR [rbp-0x80]
   1400012ea:	lea    r8,[rip+0x92ef]        # 0x14000a5e0
   1400012f1:	lea    rcx,[rsp+0x38]
   1400012f6:	mov    rdx,rbx
   1400012f9:	mov    r9d,r12d
   1400012fc:	call   0x1400010b8
   140001301:	mov    edi,eax
   140001303:	test   eax,eax
   140001305:	je     0x140001321
   140001307:	mov    rcx,QWORD PTR [rsp+0x38]
   14000130c:	test   rcx,rcx
   14000130f:	je     0x140001317
   140001311:	call   QWORD PTR [rip+0xdec1]        # 0x14000f1d8
   140001317:	test   rbx,rbx
   14000131a:	je     0x1400012df
   14000131c:	mov    rcx,rbx
   14000131f:	jmp    0x1400012d9
   140001321:	mov    r9d,r12d
   140001324:	mov    r12,QWORD PTR [rsp+0x38]
   140001329:	lea    r8,[rip+0x92c8]        # 0x14000a5f8
   140001330:	lea    rcx,[rsp+0x50]
   140001335:	mov    rdx,r12
   140001338:	call   0x1400010b8
   14000133d:	mov    edi,eax
   14000133f:	test   eax,eax
   140001341:	je     0x14000135d
   140001343:	mov    rcx,QWORD PTR [rsp+0x50]
   140001348:	test   rcx,rcx
   14000134b:	je     0x140001353
   14000134d:	call   QWORD PTR [rip+0xde85]        # 0x14000f1d8
   140001353:	test   r12,r12
   140001356:	je     0x140001317
   140001358:	mov    rcx,r12
   14000135b:	jmp    0x140001311
   14000135d:	mov    edi,0x800
   140001362:	lea    rcx,[rbp-0x60]
   140001366:	xor    edx,edx
   140001368:	mov    r8d,edi
   14000136b:	call   0x140007ebe
   140001370:	mov    r13,QWORD PTR [rsp+0x50]
   140001375:	xor    edx,edx
   140001377:	jmp    0x1400013a7
   140001379:	lea    rsi,[rbp-0x60]
   14000137d:	lea    rdi,[rip+0x9294]        # 0x14000a618
   140001384:	mov    ecx,0x8
   140001389:	inc    r14d
   14000138c:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000138f:	je     0x1400013c2
   140001391:	mov    edi,0x800
   140001396:	lea    rcx,[rbp-0x60]
   14000139a:	xor    edx,edx
   14000139c:	mov    r8d,edi
   14000139f:	call   0x140007ebe
   1400013a4:	mov    edx,r14d
   1400013a7:	lea    r8,[rbp-0x60]
   1400013ab:	mov    r9d,edi
   1400013ae:	mov    rcx,r13
   1400013b1:	call   QWORD PTR [rip+0xde39]        # 0x14000f1f0
   1400013b7:	mov    esi,eax
   1400013b9:	test   eax,eax
   1400013bb:	je     0x140001379
   1400013bd:	jmp    0x140001442
   1400013c2:	lea    r8,[rbp-0x60]
   1400013c6:	lea    rcx,[rsp+0x68]
   1400013cb:	mov    r9d,0x2001f
   1400013d1:	mov    rdx,r13
   1400013d4:	call   0x1400010b8
   1400013d9:	mov    edi,eax
   1400013db:	test   eax,eax
   1400013dd:	je     0x140001400
   1400013df:	mov    rcx,QWORD PTR [rsp+0x68]
   1400013e4:	test   rcx,rcx
   1400013e7:	je     0x1400013ef
   1400013e9:	call   QWORD PTR [rip+0xdde9]        # 0x14000f1d8
   1400013ef:	test   r13,r13
   1400013f2:	je     0x140001353
   1400013f8:	mov    rcx,r13
   1400013fb:	jmp    0x14000134d
   140001400:	mov    rdi,QWORD PTR [rsp+0x68]
   140001405:	lea    rax,[rsp+0x30]
   14000140a:	mov    r9d,0x4
   140001410:	mov    DWORD PTR [rsp+0x28],r9d
   140001415:	lea    rdx,[rip+0x920c]        # 0x14000a628
   14000141c:	xor    r8d,r8d
   14000141f:	mov    rcx,rdi
   140001422:	mov    DWORD PTR [rsp+0x30],r15d
   140001427:	mov    QWORD PTR [rsp+0x20],rax
   14000142c:	call   QWORD PTR [rip+0xddae]        # 0x14000f1e0
   140001432:	mov    esi,eax
   140001434:	test   rdi,rdi
   140001437:	je     0x140001442
   140001439:	mov    rcx,rdi
   14000143c:	call   QWORD PTR [rip+0xdd96]        # 0x14000f1d8
   140001442:	test   r13,r13
   140001445:	je     0x140001450
   140001447:	mov    rcx,r13
   14000144a:	call   QWORD PTR [rip+0xdd88]        # 0x14000f1d8
   140001450:	test   r12,r12
   140001453:	je     0x14000145e
   140001455:	mov    rcx,r12
   140001458:	call   QWORD PTR [rip+0xdd7a]        # 0x14000f1d8
   14000145e:	test   rbx,rbx
   140001461:	je     0x14000146c
   140001463:	mov    rcx,rbx
   140001466:	call   QWORD PTR [rip+0xdd6c]        # 0x14000f1d8
   14000146c:	mov    eax,esi
   14000146e:	mov    rcx,QWORD PTR [rbp+0xfa0]
   140001475:	xor    rcx,rsp
   140001478:	call   0x140008020
   14000147d:	lea    r11,[rsp+0x10b0]
   140001485:	mov    rbx,QWORD PTR [r11+0x38]
   140001489:	mov    rsi,QWORD PTR [r11+0x40]
   14000148d:	mov    rdi,QWORD PTR [r11+0x48]
   140001491:	mov    rsp,r11
   140001494:	pop    r15
   140001496:	pop    r14
   140001498:	pop    r13
   14000149a:	pop    r12
   14000149c:	pop    rbp
   14000149d:	ret    
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	int3   
   1400014a5:	int3   
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	rex push rbx
   1400014b2:	push   rsi
   1400014b3:	push   rdi
   1400014b4:	sub    rsp,0x40
   1400014b8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400014c1:	xor    esi,esi
   1400014c3:	mov    DWORD PTR [rsp+0x68],esi
   1400014c7:	mov    rdx,rcx
   1400014ca:	lea    rcx,[rsp+0x78]
   1400014cf:	call   0x1400026bc
   1400014d4:	nop
   1400014d5:	lea    rdx,[rip+0x9224]        # 0x14000a700
   1400014dc:	lea    rcx,[rsp+0x20]
   1400014e1:	call   0x1400026bc
   1400014e6:	nop
   1400014e7:	lea    rdx,[rsp+0x20]
   1400014ec:	lea    rcx,[rsp+0x78]
   1400014f1:	call   0x1400051a8
   1400014f6:	nop
   1400014f7:	mov    rax,QWORD PTR [rsp+0x20]
   1400014fc:	test   rax,rax
   1400014ff:	je     0x140001537
   140001501:	or     ecx,0xffffffff
   140001504:	lock xadd DWORD PTR [rax+0x10],ecx
   140001509:	dec    ecx
   14000150b:	jne    0x140001537
   14000150d:	mov    rbx,QWORD PTR [rsp+0x20]
   140001512:	mov    rcx,QWORD PTR [rbx]
   140001515:	test   rcx,rcx
   140001518:	je     0x140001520
   14000151a:	call   QWORD PTR [rip+0x8e40]        # 0x14000a360
   140001520:	mov    rcx,QWORD PTR [rbx+0x8]
   140001524:	test   rcx,rcx
   140001527:	je     0x14000152e
   140001529:	call   0x140007eca
   14000152e:	mov    rcx,rbx
   140001531:	call   0x140007e4c
   140001536:	nop
   140001537:	mov    rbx,QWORD PTR [rsp+0x78]
   14000153c:	test   rbx,rbx
   14000153f:	je     0x140001546
   140001541:	mov    rcx,QWORD PTR [rbx]
   140001544:	jmp    0x140001548
   140001546:	xor    ecx,ecx
   140001548:	call   QWORD PTR [rip+0x8b3a]        # 0x14000a088
   14000154e:	mov    rdi,rax
   140001551:	mov    QWORD PTR [rsp+0x28],rax
   140001556:	test   rax,rax
   140001559:	je     0x1400015df
   14000155f:	lea    rdx,[rip+0x91b2]        # 0x14000a718
   140001566:	mov    rcx,rax
   140001569:	call   QWORD PTR [rip+0x8ab1]        # 0x14000a020
   14000156f:	test   rax,rax
   140001572:	jne    0x1400015bb
   140001574:	test   rbx,rbx
   140001577:	je     0x1400015b4
   140001579:	or     eax,0xffffffff
   14000157c:	lock xadd DWORD PTR [rbx+0x10],eax
   140001581:	dec    eax
   140001583:	jne    0x1400015ae
   140001585:	mov    rbx,QWORD PTR [rsp+0x78]
   14000158a:	mov    rcx,QWORD PTR [rbx]
   14000158d:	test   rcx,rcx
   140001590:	je     0x140001598
   140001592:	call   QWORD PTR [rip+0x8dc8]        # 0x14000a360
   140001598:	mov    rcx,QWORD PTR [rbx+0x8]
   14000159c:	test   rcx,rcx
   14000159f:	je     0x1400015a6
   1400015a1:	call   0x140007eca
   1400015a6:	mov    rcx,rbx
   1400015a9:	call   0x140007e4c
   1400015ae:	and    QWORD PTR [rsp+0x78],0x0
   1400015b4:	mov    eax,0x1
   1400015b9:	jmp    0x14000163a
   1400015bb:	lea    r9,[rip+0x916e]        # 0x14000a730
   1400015c2:	lea    r8,[rip+0x8f0b]        # 0x14000a4d4
   1400015c9:	lea    rdx,[rip+0x9168]        # 0x14000a738
   1400015d0:	lea    rcx,[rip+0x9169]        # 0x14000a740
   1400015d7:	call   rax
   1400015d9:	mov    esi,eax
   1400015db:	mov    DWORD PTR [rsp+0x68],eax
   1400015df:	jmp    0x1400015ef
   1400015e1:	mov    esi,DWORD PTR [rsp+0x68]
   1400015e5:	mov    rbx,QWORD PTR [rsp+0x78]
   1400015ea:	mov    rdi,QWORD PTR [rsp+0x28]
   1400015ef:	test   rdi,rdi
   1400015f2:	je     0x1400015fe
   1400015f4:	mov    rcx,rdi
   1400015f7:	call   QWORD PTR [rip+0x8a53]        # 0x14000a050
   1400015fd:	nop
   1400015fe:	test   rbx,rbx
   140001601:	je     0x140001638
   140001603:	or     eax,0xffffffff
   140001606:	lock xadd DWORD PTR [rbx+0x10],eax
   14000160b:	dec    eax
   14000160d:	jne    0x140001638
   14000160f:	mov    rbx,QWORD PTR [rsp+0x78]
   140001614:	mov    rcx,QWORD PTR [rbx]
   140001617:	test   rcx,rcx
   14000161a:	je     0x140001622
   14000161c:	call   QWORD PTR [rip+0x8d3e]        # 0x14000a360
   140001622:	mov    rcx,QWORD PTR [rbx+0x8]
   140001626:	test   rcx,rcx
   140001629:	je     0x140001630
   14000162b:	call   0x140007eca
   140001630:	mov    rcx,rbx
   140001633:	call   0x140007e4c
   140001638:	mov    eax,esi
   14000163a:	add    rsp,0x40
   14000163e:	pop    rdi
   14000163f:	pop    rsi
   140001640:	pop    rbx
   140001641:	ret    
   140001642:	int3   
   140001643:	int3   
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	push   r13
   140001652:	push   r14
   140001654:	push   r15
   140001656:	mov    eax,0x1120
   14000165b:	call   0x140008050
   140001660:	sub    rsp,rax
   140001663:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   14000166f:	mov    QWORD PTR [rsp+0x1140],rbx
   140001677:	mov    QWORD PTR [rsp+0x1148],rsi
   14000167f:	mov    QWORD PTR [rsp+0x1150],rdi
   140001687:	mov    QWORD PTR [rsp+0x1158],r12
   14000168f:	mov    rax,QWORD PTR [rip+0xdb02]        # 0x14000f198
   140001696:	xor    rax,rsp
   140001699:	mov    QWORD PTR [rsp+0x1110],rax
   1400016a1:	mov    rdi,rdx
   1400016a4:	mov    r14d,ecx
   1400016a7:	call   0x1400053bc
   1400016ac:	xor    ebx,ebx
   1400016ae:	mov    edx,ebx
   1400016b0:	test   eax,eax
   1400016b2:	setne  dl
   1400016b5:	mov    DWORD PTR [rsp+0x5c],edx
   1400016b9:	mov    DWORD PTR [rsp+0x74],ebx
   1400016bd:	mov    DWORD PTR [rsp+0x7c],ebx
   1400016c1:	mov    DWORD PTR [rsp+0x78],ebx
   1400016c5:	mov    DWORD PTR [rsp+0x40],ebx
   1400016c9:	mov    DWORD PTR [rsp+0x80],ebx
   1400016d0:	mov    DWORD PTR [rsp+0x60],ebx
   1400016d4:	mov    DWORD PTR [rsp+0x70],ebx
   1400016d8:	mov    DWORD PTR [rsp+0x68],ebx
   1400016dc:	mov    esi,ebx
   1400016de:	mov    DWORD PTR [rsp+0x58],ebx
   1400016e2:	lea    r15d,[rbx+0x1]
   1400016e6:	mov    r13d,r15d
   1400016e9:	cmp    r14d,r15d
   1400016ec:	jle    0x140001860
   1400016f2:	lea    r12,[rdi+0x8]
   1400016f6:	lea    rdi,[rip+0x904b]        # 0x14000a748
   1400016fd:	mov    rsi,QWORD PTR [r12]
   140001701:	mov    ecx,0x5
   140001706:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001709:	jne    0x140001715
   14000170b:	mov    DWORD PTR [rsp+0x5c],r15d
   140001710:	jmp    0x140001829
   140001715:	lea    rdi,[rip+0x903c]        # 0x14000a758
   14000171c:	mov    rsi,QWORD PTR [r12]
   140001720:	mov    ecx,0x5
   140001725:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001728:	jne    0x14000173f
   14000172a:	call   0x1400053bc
   14000172f:	mov    ecx,ebx
   140001731:	test   eax,eax
   140001733:	setne  cl
   140001736:	mov    DWORD PTR [rsp+0x5c],ecx
   14000173a:	jmp    0x140001829
   14000173f:	lea    rdi,[rip+0x9022]        # 0x14000a768
   140001746:	mov    rsi,QWORD PTR [r12]
   14000174a:	mov    ecx,0x6
   14000174f:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001752:	jne    0x14000175e
   140001754:	mov    DWORD PTR [rsp+0x74],r15d
   140001759:	jmp    0x140001829
   14000175e:	lea    rdi,[rip+0x9013]        # 0x14000a778
   140001765:	mov    rsi,QWORD PTR [r12]
   140001769:	mov    ecx,0xa
   14000176e:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001771:	jne    0x14000177d
   140001773:	mov    DWORD PTR [rsp+0x7c],r15d
   140001778:	jmp    0x140001829
   14000177d:	lea    rdi,[rip+0x900c]        # 0x14000a790
   140001784:	mov    rsi,QWORD PTR [r12]
   140001788:	mov    ecx,0xc
   14000178d:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001790:	jne    0x14000179c
   140001792:	mov    DWORD PTR [rsp+0x78],r15d
   140001797:	jmp    0x140001829
   14000179c:	lea    rdi,[rip+0x9005]        # 0x14000a7a8
   1400017a3:	mov    rsi,QWORD PTR [r12]
   1400017a7:	mov    ecx,0x9
   1400017ac:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400017af:	jne    0x1400017b8
   1400017b1:	mov    DWORD PTR [rsp+0x40],r15d
   1400017b6:	jmp    0x140001829
   1400017b8:	lea    rdi,[rip+0x9001]        # 0x14000a7c0
   1400017bf:	mov    rsi,QWORD PTR [r12]
   1400017c3:	mov    ecx,0xb
   1400017c8:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400017cb:	jne    0x1400017d7
   1400017cd:	mov    DWORD PTR [rsp+0x80],r15d
   1400017d5:	jmp    0x140001829
   1400017d7:	lea    rdi,[rip+0x8ffa]        # 0x14000a7d8
   1400017de:	mov    rsi,QWORD PTR [r12]
   1400017e2:	mov    ecx,0xa
   1400017e7:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400017ea:	jne    0x1400017f3
   1400017ec:	mov    DWORD PTR [rsp+0x60],r15d
   1400017f1:	jmp    0x140001829
   1400017f3:	lea    rdi,[rip+0x8ff6]        # 0x14000a7f0
   1400017fa:	mov    rsi,QWORD PTR [r12]
   1400017fe:	mov    ecx,0x10
   140001803:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001806:	jne    0x14000180f
   140001808:	mov    DWORD PTR [rsp+0x70],r15d
   14000180d:	jmp    0x140001829
   14000180f:	lea    rdi,[rip+0x8ffa]        # 0x14000a810
   140001816:	mov    rsi,QWORD PTR [r12]
   14000181a:	mov    ecx,0xe
   14000181f:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001822:	jne    0x14000182f
   140001824:	mov    DWORD PTR [rsp+0x68],r15d
   140001829:	mov    esi,DWORD PTR [rsp+0x58]
   14000182d:	jmp    0x140001850
   14000182f:	lea    rdi,[rip+0x8ffa]        # 0x14000a830
   140001836:	mov    rsi,QWORD PTR [r12]
   14000183a:	mov    ecx,0x8
   14000183f:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001842:	jne    0x1400025be
   140001848:	mov    esi,r15d
   14000184b:	mov    DWORD PTR [rsp+0x58],r15d
   140001850:	add    r13d,r15d
   140001853:	add    r12,0x8
   140001857:	cmp    r13d,r14d
   14000185a:	jl     0x1400016f6
   140001860:	mov    WORD PTR [rsp+0x110],bx
   140001868:	xor    edx,edx
   14000186a:	mov    r8d,0xffe
   140001870:	lea    rcx,[rsp+0x112]
   140001878:	call   0x140007ebe
   14000187d:	mov    r9d,0x800
   140001883:	lea    r8,[rsp+0x110]
   14000188b:	mov    r14d,r15d
   14000188e:	mov    edx,r15d
   140001891:	xor    ecx,ecx
   140001893:	call   0x14000634c
   140001898:	test   eax,eax
   14000189a:	jne    0x1400018a4
   14000189c:	mov    eax,r14d
   14000189f:	jmp    0x1400025c1
   1400018a4:	lea    rdx,[rsp+0x110]
   1400018ac:	lea    rcx,[rsp+0x48]
   1400018b1:	call   0x1400026bc
   1400018b6:	nop
   1400018b7:	lea    rdx,[rip+0x8f82]        # 0x14000a840
   1400018be:	lea    rcx,[rsp+0x90]
   1400018c6:	call   0x1400026bc
   1400018cb:	nop
   1400018cc:	lea    rdx,[rsp+0x90]
   1400018d4:	lea    rcx,[rsp+0x48]
   1400018d9:	call   0x1400051a8
   1400018de:	nop
   1400018df:	mov    rax,QWORD PTR [rsp+0x90]
   1400018e7:	or     r12d,0xffffffff
   1400018eb:	test   rax,rax
   1400018ee:	je     0x140001929
   1400018f0:	mov    ecx,r12d
   1400018f3:	lock xadd DWORD PTR [rax+0x10],ecx
   1400018f8:	add    ecx,r12d
   1400018fb:	jne    0x140001929
   1400018fd:	mov    rdi,QWORD PTR [rsp+0x90]
   140001905:	cmp    QWORD PTR [rdi],rbx
   140001908:	je     0x140001913
   14000190a:	mov    rcx,QWORD PTR [rdi]
   14000190d:	call   QWORD PTR [rip+0x8a4d]        # 0x14000a360
   140001913:	mov    rcx,QWORD PTR [rdi+0x8]
   140001917:	test   rcx,rcx
   14000191a:	je     0x140001921
   14000191c:	call   0x140007eca
   140001921:	mov    rcx,rdi
   140001924:	call   0x140007e4c
   140001929:	mov    rdi,QWORD PTR [rsp+0x48]
   14000192e:	test   rdi,rdi
   140001931:	je     0x140001938
   140001933:	mov    rcx,QWORD PTR [rdi]
   140001936:	jmp    0x14000193b
   140001938:	mov    rcx,rbx
   14000193b:	call   QWORD PTR [rip+0x8747]        # 0x14000a088
   140001941:	mov    r13,rax
   140001944:	test   rax,rax
   140001947:	jne    0x140001991
   140001949:	test   rdi,rdi
   14000194c:	je     0x14000189c
   140001952:	mov    eax,r12d
   140001955:	lock xadd DWORD PTR [rdi+0x10],eax
   14000195a:	add    eax,r12d
   14000195d:	jne    0x14000189c
   140001963:	mov    rdi,QWORD PTR [rsp+0x48]
   140001968:	cmp    QWORD PTR [rdi],rbx
   14000196b:	je     0x140001976
   14000196d:	mov    rcx,QWORD PTR [rdi]
   140001970:	call   QWORD PTR [rip+0x89ea]        # 0x14000a360
   140001976:	mov    rcx,QWORD PTR [rdi+0x8]
   14000197a:	test   rcx,rcx
   14000197d:	je     0x140001984
   14000197f:	call   0x140007eca
   140001984:	mov    rcx,rdi
   140001987:	call   0x140007e4c
   14000198c:	jmp    0x14000189c
   140001991:	cmp    DWORD PTR [rsp+0x70],ebx
   140001995:	je     0x140001a5d
   14000199b:	lea    rdx,[rip+0x8eb6]        # 0x14000a858
   1400019a2:	mov    rcx,rax
   1400019a5:	call   QWORD PTR [rip+0x8675]        # 0x14000a020
   1400019ab:	test   rax,rax
   1400019ae:	jne    0x1400019b2
   1400019b0:	jmp    0x140001949
   1400019b2:	mov    DWORD PTR [rsp+0xd8],0x2c
   1400019bd:	mov    DWORD PTR [rsp+0xdc],0x4
   1400019c8:	mov    QWORD PTR [rsp+0xf0],rbx
   1400019d0:	mov    QWORD PTR [rsp+0xf8],rbx
   1400019d8:	mov    DWORD PTR [rsp+0x100],ebx
   1400019df:	mov    QWORD PTR [rsp+0xe4],0x2
   1400019eb:	mov    DWORD PTR [rsp+0xec],r14d
   1400019f3:	xor    edx,edx
   1400019f5:	test   esi,esi
   1400019f7:	je     0x1400019fd
   1400019f9:	xor    ecx,ecx
   1400019fb:	jmp    0x140001a05
   1400019fd:	lea    rcx,[rsp+0xd8]
   140001a05:	call   rax
   140001a07:	mov    esi,eax
   140001a09:	mov    rcx,r13
   140001a0c:	call   QWORD PTR [rip+0x863e]        # 0x14000a050
   140001a12:	test   esi,esi
   140001a14:	je     0x140001a58
   140001a16:	test   rdi,rdi
   140001a19:	je     0x140001a51
   140001a1b:	mov    eax,r12d
   140001a1e:	lock xadd DWORD PTR [rdi+0x10],eax
   140001a23:	add    eax,r12d
   140001a26:	jne    0x140001a51
   140001a28:	mov    rdi,QWORD PTR [rsp+0x48]
   140001a2d:	cmp    QWORD PTR [rdi],rbx
   140001a30:	je     0x140001a3b
   140001a32:	mov    rcx,QWORD PTR [rdi]
   140001a35:	call   QWORD PTR [rip+0x8925]        # 0x14000a360
   140001a3b:	mov    rcx,QWORD PTR [rdi+0x8]
   140001a3f:	test   rcx,rcx
   140001a42:	je     0x140001a49
   140001a44:	call   0x140007eca
   140001a49:	mov    rcx,rdi
   140001a4c:	call   0x140007e4c
   140001a51:	xor    eax,eax
   140001a53:	jmp    0x1400025c1
   140001a58:	jmp    0x140001949
   140001a5d:	mov    r14d,DWORD PTR [rsp+0x60]
   140001a62:	cmp    DWORD PTR [rsp+0x80],ebx
   140001a69:	jne    0x140001a74
   140001a6b:	test   r14d,r14d
   140001a6e:	je     0x140001b36
   140001a74:	lea    rdx,[rip+0x8df5]        # 0x14000a870
   140001a7b:	mov    rcx,rax
   140001a7e:	call   QWORD PTR [rip+0x859c]        # 0x14000a020
   140001a84:	test   rax,rax
   140001a87:	jne    0x140001ace
   140001a89:	test   rdi,rdi
   140001a8c:	je     0x140001ac4
   140001a8e:	mov    eax,r12d
   140001a91:	lock xadd DWORD PTR [rdi+0x10],eax
   140001a96:	add    eax,r12d
   140001a99:	jne    0x140001ac4
   140001a9b:	mov    rdi,QWORD PTR [rsp+0x48]
   140001aa0:	cmp    QWORD PTR [rdi],rbx
   140001aa3:	je     0x140001aae
   140001aa5:	mov    rcx,QWORD PTR [rdi]
   140001aa8:	call   QWORD PTR [rip+0x88b2]        # 0x14000a360
   140001aae:	mov    rcx,QWORD PTR [rdi+0x8]
   140001ab2:	test   rcx,rcx
   140001ab5:	je     0x140001abc
   140001ab7:	call   0x140007eca
   140001abc:	mov    rcx,rdi
   140001abf:	call   0x140007e4c
   140001ac4:	mov    eax,0x1
   140001ac9:	jmp    0x1400025c1
   140001ace:	xor    edx,edx
   140001ad0:	cmp    DWORD PTR [rsp+0x68],ebx
   140001ad4:	je     0x140001b1f
   140001ad6:	mov    DWORD PTR [rsp+0xa8],0x2c
   140001ae1:	mov    DWORD PTR [rsp+0xac],0x4
   140001aec:	mov    QWORD PTR [rsp+0xc0],rbx
   140001af4:	mov    QWORD PTR [rsp+0xc8],rbx
   140001afc:	mov    DWORD PTR [rsp+0xd0],ebx
   140001b03:	lea    ecx,[rdx+0x1]
   140001b06:	mov    QWORD PTR [rsp+0xb4],rcx
   140001b0e:	mov    DWORD PTR [rsp+0xbc],ecx
   140001b15:	lea    rcx,[rsp+0xa8]
   140001b1d:	jmp    0x140001b21
   140001b1f:	xor    ecx,ecx
   140001b21:	call   rax
   140001b23:	mov    rcx,r13
   140001b26:	call   QWORD PTR [rip+0x8524]        # 0x14000a050
   140001b2c:	test   r14d,r14d
   140001b2f:	jne    0x140001b36
   140001b31:	jmp    0x140001a16
   140001b36:	mov    r9d,0x400
   140001b3c:	lea    r8,[rsp+0x110]
   140001b44:	mov    edx,0x1
   140001b49:	xor    ecx,ecx
   140001b4b:	call   0x14000634c
   140001b50:	cmp    eax,0x1
   140001b53:	jne    0x140002583
   140001b59:	lea    rdx,[rsp+0x110]
   140001b61:	lea    rcx,[rsp+0x50]
   140001b66:	call   0x1400026bc
   140001b6b:	nop
   140001b6c:	cmp    DWORD PTR [rsp+0x5c],ebx
   140001b70:	je     0x140001bc2
   140001b72:	lea    rdx,[rip+0x8d47]        # 0x14000a8c0
   140001b79:	lea    rcx,[rsp+0x88]
   140001b81:	call   0x1400026bc
   140001b86:	nop
   140001b87:	lea    rdx,[rsp+0x88]
   140001b8f:	lea    rcx,[rsp+0x50]
   140001b94:	call   0x1400051a8
   140001b99:	nop
   140001b9a:	mov    rax,QWORD PTR [rsp+0x88]
   140001ba2:	test   rax,rax
   140001ba5:	je     0x140001c35
   140001bab:	mov    ecx,r12d
   140001bae:	lock xadd DWORD PTR [rax+0x10],ecx
   140001bb3:	add    ecx,r12d
   140001bb6:	jne    0x140001c30
   140001bb8:	mov    rdi,QWORD PTR [rsp+0x88]
   140001bc0:	jmp    0x140001c0c
   140001bc2:	lea    rdx,[rip+0x8d0f]        # 0x14000a8d8
   140001bc9:	lea    rcx,[rsp+0x98]
   140001bd1:	call   0x1400026bc
   140001bd6:	nop
   140001bd7:	lea    rdx,[rsp+0x98]
   140001bdf:	lea    rcx,[rsp+0x50]
   140001be4:	call   0x1400051a8
   140001be9:	nop
   140001bea:	mov    rax,QWORD PTR [rsp+0x98]
   140001bf2:	test   rax,rax
   140001bf5:	je     0x140001c35
   140001bf7:	mov    ecx,r12d
   140001bfa:	lock xadd DWORD PTR [rax+0x10],ecx
   140001bff:	add    ecx,r12d
   140001c02:	jne    0x140001c30
   140001c04:	mov    rdi,QWORD PTR [rsp+0x98]
   140001c0c:	cmp    QWORD PTR [rdi],rbx
   140001c0f:	je     0x140001c1a
   140001c11:	mov    rcx,QWORD PTR [rdi]
   140001c14:	call   QWORD PTR [rip+0x8746]        # 0x14000a360
   140001c1a:	mov    rcx,QWORD PTR [rdi+0x8]
   140001c1e:	test   rcx,rcx
   140001c21:	je     0x140001c28
   140001c23:	call   0x140007eca
   140001c28:	mov    rcx,rdi
   140001c2b:	call   0x140007e4c
   140001c30:	mov    rdi,QWORD PTR [rsp+0x48]
   140001c35:	mov    rsi,QWORD PTR [rsp+0x50]
   140001c3a:	test   rsi,rsi
   140001c3d:	je     0x140001c44
   140001c3f:	mov    rcx,QWORD PTR [rsi]
   140001c42:	jmp    0x140001c47
   140001c44:	mov    rcx,rbx
   140001c47:	call   QWORD PTR [rip+0x843b]        # 0x14000a088
   140001c4d:	mov    r13,rax
   140001c50:	mov    QWORD PTR [rsp+0x68],rax
   140001c55:	test   rax,rax
   140001c58:	je     0x140002518
   140001c5e:	mov    r15d,ebx
   140001c61:	cmp    DWORD PTR [rsp+0x74],ebx
   140001c65:	je     0x14000222c
   140001c6b:	cmp    DWORD PTR [rsp+0x78],ebx
   140001c6f:	jne    0x140001c7a
   140001c71:	test   r14d,r14d
   140001c74:	je     0x140001db9
   140001c7a:	lea    rdx,[rip+0x8c6f]        # 0x14000a8f0
   140001c81:	mov    rcx,rax
   140001c84:	call   QWORD PTR [rip+0x8396]        # 0x14000a020
   140001c8a:	test   rax,rax
   140001c8d:	jne    0x140001d22
   140001c93:	test   rsi,rsi
   140001c96:	je     0x140001cd8
   140001c98:	mov    eax,r12d
   140001c9b:	lock xadd DWORD PTR [rsi+0x10],eax
   140001ca0:	add    eax,r12d
   140001ca3:	jne    0x140001cce
   140001ca5:	mov    rdi,QWORD PTR [rsp+0x50]
   140001caa:	cmp    QWORD PTR [rdi],rbx
   140001cad:	je     0x140001cb8
   140001caf:	mov    rcx,QWORD PTR [rdi]
   140001cb2:	call   QWORD PTR [rip+0x86a8]        # 0x14000a360
   140001cb8:	mov    rcx,QWORD PTR [rdi+0x8]
   140001cbc:	test   rcx,rcx
   140001cbf:	je     0x140001cc6
   140001cc1:	call   0x140007eca
   140001cc6:	mov    rcx,rdi
   140001cc9:	call   0x140007e4c
   140001cce:	mov    QWORD PTR [rsp+0x50],rbx
   140001cd3:	mov    rdi,QWORD PTR [rsp+0x48]
   140001cd8:	test   rdi,rdi
   140001cdb:	je     0x140001d18
   140001cdd:	mov    eax,r12d
   140001ce0:	lock xadd DWORD PTR [rdi+0x10],eax
   140001ce5:	add    eax,r12d
   140001ce8:	jne    0x140001d13
   140001cea:	mov    rdi,QWORD PTR [rsp+0x48]
   140001cef:	cmp    QWORD PTR [rdi],rbx
   140001cf2:	je     0x140001cfd
   140001cf4:	mov    rcx,QWORD PTR [rdi]
   140001cf7:	call   QWORD PTR [rip+0x8663]        # 0x14000a360
   140001cfd:	mov    rcx,QWORD PTR [rdi+0x8]
   140001d01:	test   rcx,rcx
   140001d04:	je     0x140001d0b
   140001d06:	call   0x140007eca
   140001d0b:	mov    rcx,rdi
   140001d0e:	call   0x140007e4c
   140001d13:	mov    QWORD PTR [rsp+0x48],rbx
   140001d18:	mov    eax,0x1
   140001d1d:	jmp    0x1400025c1
   140001d22:	call   rax
   140001d24:	test   r14d,r14d
   140001d27:	jne    0x140001db9
   140001d2d:	test   rsi,rsi
   140001d30:	je     0x140001d72
   140001d32:	mov    eax,r12d
   140001d35:	lock xadd DWORD PTR [rsi+0x10],eax
   140001d3a:	add    eax,r12d
   140001d3d:	jne    0x140001d68
   140001d3f:	mov    rdi,QWORD PTR [rsp+0x50]
   140001d44:	cmp    QWORD PTR [rdi],rbx
   140001d47:	je     0x140001d52
   140001d49:	mov    rcx,QWORD PTR [rdi]
   140001d4c:	call   QWORD PTR [rip+0x860e]        # 0x14000a360
   140001d52:	mov    rcx,QWORD PTR [rdi+0x8]
   140001d56:	test   rcx,rcx
   140001d59:	je     0x140001d60
   140001d5b:	call   0x140007eca
   140001d60:	mov    rcx,rdi
   140001d63:	call   0x140007e4c
   140001d68:	mov    QWORD PTR [rsp+0x50],rbx
   140001d6d:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d72:	test   rdi,rdi
   140001d75:	je     0x140001db2
   140001d77:	mov    eax,r12d
   140001d7a:	lock xadd DWORD PTR [rdi+0x10],eax
   140001d7f:	add    eax,r12d
   140001d82:	jne    0x140001dad
   140001d84:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d89:	cmp    QWORD PTR [rdi],rbx
   140001d8c:	je     0x140001d97
   140001d8e:	mov    rcx,QWORD PTR [rdi]
   140001d91:	call   QWORD PTR [rip+0x85c9]        # 0x14000a360
   140001d97:	mov    rcx,QWORD PTR [rdi+0x8]
   140001d9b:	test   rcx,rcx
   140001d9e:	je     0x140001da5
   140001da0:	call   0x140007eca
   140001da5:	mov    rcx,rdi
   140001da8:	call   0x140007e4c
   140001dad:	mov    QWORD PTR [rsp+0x48],rbx
   140001db2:	xor    eax,eax
   140001db4:	jmp    0x1400025c1
   140001db9:	lea    rdx,[rip+0x8b48]        # 0x14000a908
   140001dc0:	mov    rcx,r13
   140001dc3:	call   QWORD PTR [rip+0x8257]        # 0x14000a020
   140001dc9:	test   rax,rax
   140001dcc:	je     0x140001ddc
   140001dce:	xor    ecx,ecx
   140001dd0:	call   rax
   140001dd2:	test   eax,eax
   140001dd4:	mov    r14d,0x1
   140001dda:	jne    0x140001ddf
   140001ddc:	mov    r14d,ebx
   140001ddf:	call   0x1400056ec
   140001de4:	test   eax,eax
   140001de6:	jne    0x140001df1
   140001de8:	test   r14d,r14d
   140001deb:	je     0x140001ea0
   140001df1:	lea    rdx,[rip+0x8b30]        # 0x14000a928
   140001df8:	mov    rcx,r13
   140001dfb:	call   QWORD PTR [rip+0x821f]        # 0x14000a020
   140001e01:	test   rax,rax
   140001e04:	jne    0x140001e99
   140001e0a:	test   rsi,rsi
   140001e0d:	je     0x140001e4f
   140001e0f:	mov    eax,r12d
   140001e12:	lock xadd DWORD PTR [rsi+0x10],eax
   140001e17:	add    eax,r12d
   140001e1a:	jne    0x140001e45
   140001e1c:	mov    rdi,QWORD PTR [rsp+0x50]
   140001e21:	cmp    QWORD PTR [rdi],rbx
   140001e24:	je     0x140001e2f
   140001e26:	mov    rcx,QWORD PTR [rdi]
   140001e29:	call   QWORD PTR [rip+0x8531]        # 0x14000a360
   140001e2f:	mov    rcx,QWORD PTR [rdi+0x8]
   140001e33:	test   rcx,rcx
   140001e36:	je     0x140001e3d
   140001e38:	call   0x140007eca
   140001e3d:	mov    rcx,rdi
   140001e40:	call   0x140007e4c
   140001e45:	mov    QWORD PTR [rsp+0x50],rbx
   140001e4a:	mov    rdi,QWORD PTR [rsp+0x48]
   140001e4f:	test   rdi,rdi
   140001e52:	je     0x140001e8f
   140001e54:	mov    eax,r12d
   140001e57:	lock xadd DWORD PTR [rdi+0x10],eax
   140001e5c:	add    eax,r12d
   140001e5f:	jne    0x140001e8a
   140001e61:	mov    rdi,QWORD PTR [rsp+0x48]
   140001e66:	cmp    QWORD PTR [rdi],rbx
   140001e69:	je     0x140001e74
   140001e6b:	mov    rcx,QWORD PTR [rdi]
   140001e6e:	call   QWORD PTR [rip+0x84ec]        # 0x14000a360
   140001e74:	mov    rcx,QWORD PTR [rdi+0x8]
   140001e78:	test   rcx,rcx
   140001e7b:	je     0x140001e82
   140001e7d:	call   0x140007eca
   140001e82:	mov    rcx,rdi
   140001e85:	call   0x140007e4c
   140001e8a:	mov    QWORD PTR [rsp+0x48],rbx
   140001e8f:	mov    eax,0x1
   140001e94:	jmp    0x1400025c1
   140001e99:	xor    edx,edx
   140001e9b:	lea    ecx,[rdx+0x1]
   140001e9e:	call   rax
   140001ea0:	mov    r14d,DWORD PTR [rsp+0x5c]
   140001ea5:	test   r14d,r14d
   140001ea8:	jne    0x140001f60
   140001eae:	lea    rdx,[rip+0x8a9b]        # 0x14000a950
   140001eb5:	mov    rcx,r13
   140001eb8:	call   QWORD PTR [rip+0x8162]        # 0x14000a020
   140001ebe:	test   rax,rax
   140001ec1:	jne    0x140001f56
   140001ec7:	test   rsi,rsi
   140001eca:	je     0x140001f0c
   140001ecc:	mov    eax,r12d
   140001ecf:	lock xadd DWORD PTR [rsi+0x10],eax
   140001ed4:	add    eax,r12d
   140001ed7:	jne    0x140001f02
   140001ed9:	mov    rdi,QWORD PTR [rsp+0x50]
   140001ede:	cmp    QWORD PTR [rdi],rbx
   140001ee1:	je     0x140001eec
   140001ee3:	mov    rcx,QWORD PTR [rdi]
   140001ee6:	call   QWORD PTR [rip+0x8474]        # 0x14000a360
   140001eec:	mov    rcx,QWORD PTR [rdi+0x8]
   140001ef0:	test   rcx,rcx
   140001ef3:	je     0x140001efa
   140001ef5:	call   0x140007eca
   140001efa:	mov    rcx,rdi
   140001efd:	call   0x140007e4c
   140001f02:	mov    QWORD PTR [rsp+0x50],rbx
   140001f07:	mov    rdi,QWORD PTR [rsp+0x48]
   140001f0c:	test   rdi,rdi
   140001f0f:	je     0x140001f4c
   140001f11:	mov    eax,r12d
   140001f14:	lock xadd DWORD PTR [rdi+0x10],eax
   140001f19:	add    eax,r12d
   140001f1c:	jne    0x140001f47
   140001f1e:	mov    rdi,QWORD PTR [rsp+0x48]
   140001f23:	cmp    QWORD PTR [rdi],rbx
   140001f26:	je     0x140001f31
   140001f28:	mov    rcx,QWORD PTR [rdi]
   140001f2b:	call   QWORD PTR [rip+0x842f]        # 0x14000a360
   140001f31:	mov    rcx,QWORD PTR [rdi+0x8]
   140001f35:	test   rcx,rcx
   140001f38:	je     0x140001f3f
   140001f3a:	call   0x140007eca
   140001f3f:	mov    rcx,rdi
   140001f42:	call   0x140007e4c
   140001f47:	mov    QWORD PTR [rsp+0x48],rbx
   140001f4c:	mov    eax,0x1
   140001f51:	jmp    0x1400025c1
   140001f56:	call   rax
   140001f58:	test   eax,eax
   140001f5a:	je     0x14000200a
   140001f60:	lea    rdx,[rip+0x8a01]        # 0x14000a968
   140001f67:	mov    rcx,r13
   140001f6a:	call   QWORD PTR [rip+0x80b0]        # 0x14000a020
   140001f70:	test   rax,rax
   140001f73:	jne    0x140002008
   140001f79:	test   rsi,rsi
   140001f7c:	je     0x140001fbe
   140001f7e:	mov    eax,r12d
   140001f81:	lock xadd DWORD PTR [rsi+0x10],eax
   140001f86:	add    eax,r12d
   140001f89:	jne    0x140001fb4
   140001f8b:	mov    rdi,QWORD PTR [rsp+0x50]
   140001f90:	cmp    QWORD PTR [rdi],rbx
   140001f93:	je     0x140001f9e
   140001f95:	mov    rcx,QWORD PTR [rdi]
   140001f98:	call   QWORD PTR [rip+0x83c2]        # 0x14000a360
   140001f9e:	mov    rcx,QWORD PTR [rdi+0x8]
   140001fa2:	test   rcx,rcx
   140001fa5:	je     0x140001fac
   140001fa7:	call   0x140007eca
   140001fac:	mov    rcx,rdi
   140001faf:	call   0x140007e4c
   140001fb4:	mov    QWORD PTR [rsp+0x50],rbx
   140001fb9:	mov    rdi,QWORD PTR [rsp+0x48]
   140001fbe:	test   rdi,rdi
   140001fc1:	je     0x140001ffe
   140001fc3:	mov    eax,r12d
   140001fc6:	lock xadd DWORD PTR [rdi+0x10],eax
   140001fcb:	add    eax,r12d
   140001fce:	jne    0x140001ff9
   140001fd0:	mov    rdi,QWORD PTR [rsp+0x48]
   140001fd5:	cmp    QWORD PTR [rdi],rbx
   140001fd8:	je     0x140001fe3
   140001fda:	mov    rcx,QWORD PTR [rdi]
   140001fdd:	call   QWORD PTR [rip+0x837d]        # 0x14000a360
   140001fe3:	mov    rcx,QWORD PTR [rdi+0x8]
   140001fe7:	test   rcx,rcx
   140001fea:	je     0x140001ff1
   140001fec:	call   0x140007eca
   140001ff1:	mov    rcx,rdi
   140001ff4:	call   0x140007e4c
   140001ff9:	mov    QWORD PTR [rsp+0x48],rbx
   140001ffe:	mov    eax,0x1
   140002003:	jmp    0x1400025c1
   140002008:	call   rax
   14000200a:	cmp    DWORD PTR [rsp+0x7c],ebx
   14000200e:	je     0x14000220b
   140002014:	mov    ecx,ebx
   140002016:	cmp    r14d,0x1
   14000201a:	sete   cl
   14000201d:	call   0x140001230
   140002022:	test   eax,eax
   140002024:	je     0x1400020b9
   14000202a:	test   rsi,rsi
   14000202d:	je     0x14000206f
   14000202f:	mov    eax,r12d
   140002032:	lock xadd DWORD PTR [rsi+0x10],eax
   140002037:	add    eax,r12d
   14000203a:	jne    0x140002065
   14000203c:	mov    rdi,QWORD PTR [rsp+0x50]
   140002041:	cmp    QWORD PTR [rdi],rbx
   140002044:	je     0x14000204f
   140002046:	mov    rcx,QWORD PTR [rdi]
   140002049:	call   QWORD PTR [rip+0x8311]        # 0x14000a360
   14000204f:	mov    rcx,QWORD PTR [rdi+0x8]
   140002053:	test   rcx,rcx
   140002056:	je     0x14000205d
   140002058:	call   0x140007eca
   14000205d:	mov    rcx,rdi
   140002060:	call   0x140007e4c
   140002065:	mov    QWORD PTR [rsp+0x50],rbx
   14000206a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000206f:	test   rdi,rdi
   140002072:	je     0x1400020af
   140002074:	mov    eax,r12d
   140002077:	lock xadd DWORD PTR [rdi+0x10],eax
   14000207c:	add    eax,r12d
   14000207f:	jne    0x1400020aa
   140002081:	mov    rdi,QWORD PTR [rsp+0x48]
   140002086:	cmp    QWORD PTR [rdi],rbx
   140002089:	je     0x140002094
   14000208b:	mov    rcx,QWORD PTR [rdi]
   14000208e:	call   QWORD PTR [rip+0x82cc]        # 0x14000a360
   140002094:	mov    rcx,QWORD PTR [rdi+0x8]
   140002098:	test   rcx,rcx
   14000209b:	je     0x1400020a2
   14000209d:	call   0x140007eca
   1400020a2:	mov    rcx,rdi
   1400020a5:	call   0x140007e4c
   1400020aa:	mov    QWORD PTR [rsp+0x48],rbx
   1400020af:	mov    eax,0x1
   1400020b4:	jmp    0x1400025c1
   1400020b9:	mov    rcx,r13
   1400020bc:	cmp    DWORD PTR [rsp+0x40],ebx
   1400020c0:	lea    rdx,[rip+0x88c1]        # 0x14000a988
   1400020c7:	je     0x1400020d0
   1400020c9:	lea    rdx,[rip+0x88e0]        # 0x14000a9b0
   1400020d0:	call   QWORD PTR [rip+0x7f4a]        # 0x14000a020
   1400020d6:	test   rax,rax
   1400020d9:	jne    0x14000216e
   1400020df:	test   rsi,rsi
   1400020e2:	je     0x140002124
   1400020e4:	mov    eax,r12d
   1400020e7:	lock xadd DWORD PTR [rsi+0x10],eax
   1400020ec:	add    eax,r12d
   1400020ef:	jne    0x14000211a
   1400020f1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400020f6:	cmp    QWORD PTR [rdi],rbx
   1400020f9:	je     0x140002104
   1400020fb:	mov    rcx,QWORD PTR [rdi]
   1400020fe:	call   QWORD PTR [rip+0x825c]        # 0x14000a360
   140002104:	mov    rcx,QWORD PTR [rdi+0x8]
   140002108:	test   rcx,rcx
   14000210b:	je     0x140002112
   14000210d:	call   0x140007eca
   140002112:	mov    rcx,rdi
   140002115:	call   0x140007e4c
   14000211a:	mov    QWORD PTR [rsp+0x50],rbx
   14000211f:	mov    rdi,QWORD PTR [rsp+0x48]
   140002124:	test   rdi,rdi
   140002127:	je     0x140002164
   140002129:	mov    eax,r12d
   14000212c:	lock xadd DWORD PTR [rdi+0x10],eax
   140002131:	add    eax,r12d
   140002134:	jne    0x14000215f
   140002136:	mov    rdi,QWORD PTR [rsp+0x48]
   14000213b:	cmp    QWORD PTR [rdi],rbx
   14000213e:	je     0x140002149
   140002140:	mov    rcx,QWORD PTR [rdi]
   140002143:	call   QWORD PTR [rip+0x8217]        # 0x14000a360
   140002149:	mov    rcx,QWORD PTR [rdi+0x8]
   14000214d:	test   rcx,rcx
   140002150:	je     0x140002157
   140002152:	call   0x140007eca
   140002157:	mov    rcx,rdi
   14000215a:	call   0x140007e4c
   14000215f:	mov    QWORD PTR [rsp+0x48],rbx
   140002164:	mov    eax,0x1
   140002169:	jmp    0x1400025c1
   14000216e:	xor    edx,edx
   140002170:	xor    ecx,ecx
   140002172:	call   rax
   140002174:	test   eax,eax
   140002176:	jne    0x14000220b
   14000217c:	test   rsi,rsi
   14000217f:	je     0x1400021c1
   140002181:	mov    eax,r12d
   140002184:	lock xadd DWORD PTR [rsi+0x10],eax
   140002189:	add    eax,r12d
   14000218c:	jne    0x1400021b7
   14000218e:	mov    rdi,QWORD PTR [rsp+0x50]
   140002193:	cmp    QWORD PTR [rdi],rbx
   140002196:	je     0x1400021a1
   140002198:	mov    rcx,QWORD PTR [rdi]
   14000219b:	call   QWORD PTR [rip+0x81bf]        # 0x14000a360
   1400021a1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400021a5:	test   rcx,rcx
   1400021a8:	je     0x1400021af
   1400021aa:	call   0x140007eca
   1400021af:	mov    rcx,rdi
   1400021b2:	call   0x140007e4c
   1400021b7:	mov    QWORD PTR [rsp+0x50],rbx
   1400021bc:	mov    rdi,QWORD PTR [rsp+0x48]
   1400021c1:	test   rdi,rdi
   1400021c4:	je     0x140002201
   1400021c6:	mov    eax,r12d
   1400021c9:	lock xadd DWORD PTR [rdi+0x10],eax
   1400021ce:	add    eax,r12d
   1400021d1:	jne    0x1400021fc
   1400021d3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400021d8:	cmp    QWORD PTR [rdi],rbx
   1400021db:	je     0x1400021e6
   1400021dd:	mov    rcx,QWORD PTR [rdi]
   1400021e0:	call   QWORD PTR [rip+0x817a]        # 0x14000a360
   1400021e6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400021ea:	test   rcx,rcx
   1400021ed:	je     0x1400021f4
   1400021ef:	call   0x140007eca
   1400021f4:	mov    rcx,rdi
   1400021f7:	call   0x140007e4c
   1400021fc:	mov    QWORD PTR [rsp+0x48],rbx
   140002201:	mov    eax,0x1
   140002206:	jmp    0x1400025c1
   14000220b:	test   r14d,r14d
   14000220e:	je     0x14000221a
   140002210:	call   0x140001200
   140002215:	jmp    0x140002518
   14000221a:	lea    rcx,[rsp+0x110]
   140002222:	call   0x1400014b0
   140002227:	jmp    0x140002518
   14000222c:	lea    rdx,[rip+0x879d]        # 0x14000a9d0
   140002233:	mov    rcx,rax
   140002236:	call   QWORD PTR [rip+0x7de4]        # 0x14000a020
   14000223c:	test   rax,rax
   14000223f:	jne    0x1400022d4
   140002245:	test   rsi,rsi
   140002248:	je     0x14000228a
   14000224a:	mov    eax,r12d
   14000224d:	lock xadd DWORD PTR [rsi+0x10],eax
   140002252:	add    eax,r12d
   140002255:	jne    0x140002280
   140002257:	mov    rdi,QWORD PTR [rsp+0x50]
   14000225c:	cmp    QWORD PTR [rdi],rbx
   14000225f:	je     0x14000226a
   140002261:	mov    rcx,QWORD PTR [rdi]
   140002264:	call   QWORD PTR [rip+0x80f6]        # 0x14000a360
   14000226a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000226e:	test   rcx,rcx
   140002271:	je     0x140002278
   140002273:	call   0x140007eca
   140002278:	mov    rcx,rdi
   14000227b:	call   0x140007e4c
   140002280:	mov    QWORD PTR [rsp+0x50],rbx
   140002285:	mov    rdi,QWORD PTR [rsp+0x48]
   14000228a:	test   rdi,rdi
   14000228d:	je     0x1400022ca
   14000228f:	mov    eax,r12d
   140002292:	lock xadd DWORD PTR [rdi+0x10],eax
   140002297:	add    eax,r12d
   14000229a:	jne    0x1400022c5
   14000229c:	mov    rdi,QWORD PTR [rsp+0x48]
   1400022a1:	cmp    QWORD PTR [rdi],rbx
   1400022a4:	je     0x1400022af
   1400022a6:	mov    rcx,QWORD PTR [rdi]
   1400022a9:	call   QWORD PTR [rip+0x80b1]        # 0x14000a360
   1400022af:	mov    rcx,QWORD PTR [rdi+0x8]
   1400022b3:	test   rcx,rcx
   1400022b6:	je     0x1400022bd
   1400022b8:	call   0x140007eca
   1400022bd:	mov    rcx,rdi
   1400022c0:	call   0x140007e4c
   1400022c5:	mov    QWORD PTR [rsp+0x48],rbx
   1400022ca:	mov    eax,0x1
   1400022cf:	jmp    0x1400025c1
   1400022d4:	xor    ecx,ecx
   1400022d6:	call   rax
   1400022d8:	mov    r14d,eax
   1400022db:	lea    rdx,[rip+0x870e]        # 0x14000a9f0
   1400022e2:	mov    rcx,r13
   1400022e5:	call   QWORD PTR [rip+0x7d35]        # 0x14000a020
   1400022eb:	test   rax,rax
   1400022ee:	jne    0x140002383
   1400022f4:	test   rsi,rsi
   1400022f7:	je     0x140002339
   1400022f9:	mov    eax,r12d
   1400022fc:	lock xadd DWORD PTR [rsi+0x10],eax
   140002301:	add    eax,r12d
   140002304:	jne    0x14000232f
   140002306:	mov    rdi,QWORD PTR [rsp+0x50]
   14000230b:	cmp    QWORD PTR [rdi],rbx
   14000230e:	je     0x140002319
   140002310:	mov    rcx,QWORD PTR [rdi]
   140002313:	call   QWORD PTR [rip+0x8047]        # 0x14000a360
   140002319:	mov    rcx,QWORD PTR [rdi+0x8]
   14000231d:	test   rcx,rcx
   140002320:	je     0x140002327
   140002322:	call   0x140007eca
   140002327:	mov    rcx,rdi
   14000232a:	call   0x140007e4c
   14000232f:	mov    QWORD PTR [rsp+0x50],rbx
   140002334:	mov    rdi,QWORD PTR [rsp+0x48]
   140002339:	test   rdi,rdi
   14000233c:	je     0x140002379
   14000233e:	mov    eax,r12d
   140002341:	lock xadd DWORD PTR [rdi+0x10],eax
   140002346:	add    eax,r12d
   140002349:	jne    0x140002374
   14000234b:	mov    rdi,QWORD PTR [rsp+0x48]
   140002350:	cmp    QWORD PTR [rdi],rbx
   140002353:	je     0x14000235e
   140002355:	mov    rcx,QWORD PTR [rdi]
   140002358:	call   QWORD PTR [rip+0x8002]        # 0x14000a360
   14000235e:	mov    rcx,QWORD PTR [rdi+0x8]
   140002362:	test   rcx,rcx
   140002365:	je     0x14000236c
   140002367:	call   0x140007eca
   14000236c:	mov    rcx,rdi
   14000236f:	call   0x140007e4c
   140002374:	mov    QWORD PTR [rsp+0x48],rbx
   140002379:	mov    eax,0x1
   14000237e:	jmp    0x1400025c1
   140002383:	test   r14d,r14d
   140002386:	jne    0x140002449
   14000238c:	call   rax
   14000238e:	test   eax,eax
   140002390:	jne    0x140002449
   140002396:	lea    rdx,[rip+0x8683]        # 0x14000aa20
   14000239d:	mov    rcx,r13
   1400023a0:	call   QWORD PTR [rip+0x7c7a]        # 0x14000a020
   1400023a6:	test   rax,rax
   1400023a9:	jne    0x14000243e
   1400023af:	test   rsi,rsi
   1400023b2:	je     0x1400023f4
   1400023b4:	mov    eax,r12d
   1400023b7:	lock xadd DWORD PTR [rsi+0x10],eax
   1400023bc:	add    eax,r12d
   1400023bf:	jne    0x1400023ea
   1400023c1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400023c6:	cmp    QWORD PTR [rdi],rbx
   1400023c9:	je     0x1400023d4
   1400023cb:	mov    rcx,QWORD PTR [rdi]
   1400023ce:	call   QWORD PTR [rip+0x7f8c]        # 0x14000a360
   1400023d4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400023d8:	test   rcx,rcx
   1400023db:	je     0x1400023e2
   1400023dd:	call   0x140007eca
   1400023e2:	mov    rcx,rdi
   1400023e5:	call   0x140007e4c
   1400023ea:	mov    QWORD PTR [rsp+0x50],rbx
   1400023ef:	mov    rdi,QWORD PTR [rsp+0x48]
   1400023f4:	test   rdi,rdi
   1400023f7:	je     0x140002434
   1400023f9:	mov    eax,r12d
   1400023fc:	lock xadd DWORD PTR [rdi+0x10],eax
   140002401:	add    eax,r12d
   140002404:	jne    0x14000242f
   140002406:	mov    rdi,QWORD PTR [rsp+0x48]
   14000240b:	cmp    QWORD PTR [rdi],rbx
   14000240e:	je     0x140002419
   140002410:	mov    rcx,QWORD PTR [rdi]
   140002413:	call   QWORD PTR [rip+0x7f47]        # 0x14000a360
   140002419:	mov    rcx,QWORD PTR [rdi+0x8]
   14000241d:	test   rcx,rcx
   140002420:	je     0x140002427
   140002422:	call   0x140007eca
   140002427:	mov    rcx,rdi
   14000242a:	call   0x140007e4c
   14000242f:	mov    QWORD PTR [rsp+0x48],rbx
   140002434:	mov    eax,0x1
   140002439:	jmp    0x1400025c1
   14000243e:	xor    edx,edx
   140002440:	xor    ecx,ecx
   140002442:	call   rax
   140002444:	jmp    0x14000250f
   140002449:	lea    rdx,[rip+0x85b8]        # 0x14000aa08
   140002450:	mov    rcx,r13
   140002453:	call   QWORD PTR [rip+0x7bc7]        # 0x14000a020
   140002459:	test   rax,rax
   14000245c:	jne    0x1400024f1
   140002462:	test   rsi,rsi
   140002465:	je     0x1400024a7
   140002467:	mov    eax,r12d
   14000246a:	lock xadd DWORD PTR [rsi+0x10],eax
   14000246f:	add    eax,r12d
   140002472:	jne    0x14000249d
   140002474:	mov    rdi,QWORD PTR [rsp+0x50]
   140002479:	cmp    QWORD PTR [rdi],rbx
   14000247c:	je     0x140002487
   14000247e:	mov    rcx,QWORD PTR [rdi]
   140002481:	call   QWORD PTR [rip+0x7ed9]        # 0x14000a360
   140002487:	mov    rcx,QWORD PTR [rdi+0x8]
   14000248b:	test   rcx,rcx
   14000248e:	je     0x140002495
   140002490:	call   0x140007eca
   140002495:	mov    rcx,rdi
   140002498:	call   0x140007e4c
   14000249d:	mov    QWORD PTR [rsp+0x50],rbx
   1400024a2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400024a7:	test   rdi,rdi
   1400024aa:	je     0x1400024e7
   1400024ac:	mov    eax,r12d
   1400024af:	lock xadd DWORD PTR [rdi+0x10],eax
   1400024b4:	add    eax,r12d
   1400024b7:	jne    0x1400024e2
   1400024b9:	mov    rdi,QWORD PTR [rsp+0x48]
   1400024be:	cmp    QWORD PTR [rdi],rbx
   1400024c1:	je     0x1400024cc
   1400024c3:	mov    rcx,QWORD PTR [rdi]
   1400024c6:	call   QWORD PTR [rip+0x7e94]        # 0x14000a360
   1400024cc:	mov    rcx,QWORD PTR [rdi+0x8]
   1400024d0:	test   rcx,rcx
   1400024d3:	je     0x1400024da
   1400024d5:	call   0x140007eca
   1400024da:	mov    rcx,rdi
   1400024dd:	call   0x140007e4c
   1400024e2:	mov    QWORD PTR [rsp+0x48],rbx
   1400024e7:	mov    eax,0x1
   1400024ec:	jmp    0x1400025c1
   1400024f1:	mov    QWORD PTR [rsp+0x30],rbx
   1400024f6:	mov    DWORD PTR [rsp+0x28],ebx
   1400024fa:	mov    DWORD PTR [rsp+0x20],ebx
   1400024fe:	mov    r9d,r14d
   140002501:	mov    r8d,0x1
   140002507:	mov    edx,DWORD PTR [rsp+0x5c]
   14000250b:	xor    ecx,ecx
   14000250d:	call   rax
   14000250f:	mov    r15d,ebx
   140002512:	test   eax,eax
   140002514:	sete   r15b
   140002518:	jmp    0x140002534
   14000251a:	xor    ebx,ebx
   14000251c:	or     r12d,0xffffffff
   140002520:	mov    r15d,DWORD PTR [rsp+0x40]
   140002525:	mov    r13,QWORD PTR [rsp+0x68]
   14000252a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000252f:	mov    rsi,QWORD PTR [rsp+0x50]
   140002534:	test   r13,r13
   140002537:	je     0x140002543
   140002539:	mov    rcx,r13
   14000253c:	call   QWORD PTR [rip+0x7b0e]        # 0x14000a050
   140002542:	nop
   140002543:	test   rsi,rsi
   140002546:	je     0x140002583
   140002548:	mov    eax,r12d
   14000254b:	lock xadd DWORD PTR [rsi+0x10],eax
   140002550:	add    eax,r12d
   140002553:	jne    0x14000257e
   140002555:	mov    rdi,QWORD PTR [rsp+0x50]
   14000255a:	cmp    QWORD PTR [rdi],rbx
   14000255d:	je     0x140002568
   14000255f:	mov    rcx,QWORD PTR [rdi]
   140002562:	call   QWORD PTR [rip+0x7df8]        # 0x14000a360
   140002568:	mov    rcx,QWORD PTR [rdi+0x8]
   14000256c:	test   rcx,rcx
   14000256f:	je     0x140002576
   140002571:	call   0x140007eca
   140002576:	mov    rcx,rdi
   140002579:	call   0x140007e4c
   14000257e:	mov    rdi,QWORD PTR [rsp+0x48]
   140002583:	test   rdi,rdi
   140002586:	je     0x1400025be
   140002588:	mov    eax,r12d
   14000258b:	lock xadd DWORD PTR [rdi+0x10],eax
   140002590:	add    eax,r12d
   140002593:	jne    0x1400025be
   140002595:	mov    rdi,QWORD PTR [rsp+0x48]
   14000259a:	cmp    QWORD PTR [rdi],rbx
   14000259d:	je     0x1400025a8
   14000259f:	mov    rcx,QWORD PTR [rdi]
   1400025a2:	call   QWORD PTR [rip+0x7db8]        # 0x14000a360
   1400025a8:	mov    rcx,QWORD PTR [rdi+0x8]
   1400025ac:	test   rcx,rcx
   1400025af:	je     0x1400025b6
   1400025b1:	call   0x140007eca
   1400025b6:	mov    rcx,rdi
   1400025b9:	call   0x140007e4c
   1400025be:	mov    eax,r15d
   1400025c1:	mov    rcx,QWORD PTR [rsp+0x1110]
   1400025c9:	xor    rcx,rsp
   1400025cc:	call   0x140008020
   1400025d1:	lea    r11,[rsp+0x1120]
   1400025d9:	mov    rbx,QWORD PTR [r11+0x20]
   1400025dd:	mov    rsi,QWORD PTR [r11+0x28]
   1400025e1:	mov    rdi,QWORD PTR [r11+0x30]
   1400025e5:	mov    r12,QWORD PTR [r11+0x38]
   1400025e9:	mov    rsp,r11
   1400025ec:	pop    r15
   1400025ee:	pop    r14
   1400025f0:	pop    r13
   1400025f2:	ret    
   1400025f3:	int3   
   1400025f4:	int3   
   1400025f5:	int3   
   1400025f6:	int3   
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    rdx,QWORD PTR [rip+0x7c11]        # 0x14000a218
   140002607:	mov    rax,QWORD PTR [rip+0x7c02]        # 0x14000a210
   14000260e:	mov    rdx,QWORD PTR [rdx]
   140002611:	mov    ecx,DWORD PTR [rax]
   140002613:	jmp    0x140001650
   140002618:	mov    QWORD PTR [rsp+0x8],rbx
   14000261d:	push   rdi
   14000261e:	sub    rsp,0x20
   140002622:	xor    edx,edx
   140002624:	mov    rdi,rcx
   140002627:	add    rcx,0x18
   14000262b:	lea    r8d,[rdx+0x28]
   14000262f:	call   0x140007ebe
   140002634:	and    DWORD PTR [rdi+0x8],0x0
   140002638:	and    QWORD PTR [rdi+0x10],0x0
   14000263d:	and    DWORD PTR [rdi+0xc],0x0
   140002641:	mov    QWORD PTR [rip+0xcc30],rdi        # 0x14000f278
   140002648:	and    QWORD PTR [rdi+0x40],0x0
   14000264d:	lea    rcx,[rdi+0x18]
   140002651:	xor    edx,edx
   140002653:	call   QWORD PTR [rip+0x79b7]        # 0x14000a010
   140002659:	test   eax,eax
   14000265b:	jne    0x14000267e
   14000265d:	call   QWORD PTR [rip+0x79a5]        # 0x14000a008
   140002663:	movzx  ecx,ax
   140002666:	or     ecx,0x80070000
   14000266c:	test   eax,eax
   14000266e:	cmovle ecx,eax
   140002671:	test   ecx,ecx
   140002673:	jns    0x14000267e
   140002675:	mov    BYTE PTR [rip+0xcbf4],0x1        # 0x14000f270
   14000267c:	jmp    0x140002685
   14000267e:	mov    DWORD PTR [rdi+0x8],0x38
   140002685:	mov    rax,rdi
   140002688:	mov    rbx,QWORD PTR [rsp+0x30]
   14000268d:	add    rsp,0x20
   140002691:	pop    rdi
   140002692:	ret    
   140002693:	int3   
   140002694:	rex push rbx
   140002696:	sub    rsp,0x20
   14000269a:	mov    rbx,rcx
   14000269d:	mov    rcx,QWORD PTR [rcx]
   1400026a0:	test   rcx,rcx
   1400026a3:	je     0x1400026af
   1400026a5:	call   QWORD PTR [rip+0xcb2d]        # 0x14000f1d8
   1400026ab:	and    QWORD PTR [rbx],0x0
   1400026af:	and    DWORD PTR [rbx+0x8],0x0
   1400026b3:	add    rsp,0x20
   1400026b7:	pop    rbx
   1400026b8:	ret    
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	rex push rdi
   1400026be:	sub    rsp,0x30
   1400026c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400026cb:	mov    QWORD PTR [rsp+0x40],rbx
   1400026d0:	mov    QWORD PTR [rsp+0x48],rsi
   1400026d5:	mov    rsi,rdx
   1400026d8:	mov    rdi,rcx
   1400026db:	mov    ecx,0x18
   1400026e0:	call   0x140007ec4
   1400026e5:	mov    rbx,rax
   1400026e8:	mov    QWORD PTR [rsp+0x50],rax
   1400026ed:	test   rax,rax
   1400026f0:	je     0x14000271f
   1400026f2:	and    QWORD PTR [rax+0x8],0x0
   1400026f7:	mov    DWORD PTR [rax+0x10],0x1
   1400026fe:	mov    rcx,rsi
   140002701:	call   QWORD PTR [rip+0x7c51]        # 0x14000a358
   140002707:	mov    QWORD PTR [rbx],rax
   14000270a:	test   rax,rax
   14000270d:	jne    0x140002721
   14000270f:	test   rsi,rsi
   140002712:	je     0x140002721
   140002714:	mov    ecx,0x8007000e
   140002719:	call   0x140008a90
   14000271e:	int3   
   14000271f:	xor    ebx,ebx
   140002721:	mov    QWORD PTR [rdi],rbx
   140002724:	test   rbx,rbx
   140002727:	jne    0x140002734
   140002729:	mov    ecx,0x8007000e
   14000272e:	call   0x140008a90
   140002733:	int3   
   140002734:	mov    rax,rdi
   140002737:	mov    rbx,QWORD PTR [rsp+0x40]
   14000273c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002741:	add    rsp,0x30
   140002745:	pop    rdi
   140002746:	ret    
   140002747:	int3   
   140002748:	mov    QWORD PTR [rsp+0x8],rbx
   14000274d:	mov    QWORD PTR [rsp+0x10],rbp
   140002752:	mov    QWORD PTR [rsp+0x18],rsi
   140002757:	push   rdi
   140002758:	push   r12
   14000275a:	push   r13
   14000275c:	sub    rsp,0x20
   140002760:	and    QWORD PTR [rcx+0x8],0x0
   140002765:	mov    rsi,rcx
   140002768:	mov    DWORD PTR [rcx+0x10],0x1
   14000276f:	mov    rcx,QWORD PTR [rdx]
   140002772:	mov    r13,r8
   140002775:	mov    r12,rdx
   140002778:	test   rcx,rcx
   14000277b:	je     0x14000278f
   14000277d:	mov    rcx,QWORD PTR [rcx]
   140002780:	test   rcx,rcx
   140002783:	je     0x14000278f
   140002785:	call   QWORD PTR [rip+0x7bc5]        # 0x14000a350
   14000278b:	mov    ebp,eax
   14000278d:	jmp    0x140002791
   14000278f:	xor    ebp,ebp
   140002791:	mov    rax,QWORD PTR [r13+0x0]
   140002795:	test   rax,rax
   140002798:	je     0x1400027ac
   14000279a:	mov    rcx,QWORD PTR [rax]
   14000279d:	test   rcx,rcx
   1400027a0:	je     0x1400027ac
   1400027a2:	call   QWORD PTR [rip+0x7ba8]        # 0x14000a350
   1400027a8:	mov    edi,eax
   1400027aa:	jmp    0x1400027ae
   1400027ac:	xor    edi,edi
   1400027ae:	lea    ebx,[rdi+rbp*1]
   1400027b1:	cmp    ebx,edi
   1400027b3:	jb     0x14000285a
   1400027b9:	mov    eax,ebx
   1400027bb:	mov    ecx,0xffffffff
   1400027c0:	add    rax,rax
   1400027c3:	cmp    rax,rcx
   1400027c6:	ja     0x14000285a
   1400027cc:	lea    edx,[rbx+rbx*1]
   1400027cf:	xor    ecx,ecx
   1400027d1:	call   QWORD PTR [rip+0x7b71]        # 0x14000a348
   1400027d7:	mov    rcx,rax
   1400027da:	mov    QWORD PTR [rsi],rax
   1400027dd:	test   rax,rax
   1400027e0:	jne    0x1400027f1
   1400027e2:	test   ebx,ebx
   1400027e4:	je     0x14000283e
   1400027e6:	mov    ecx,0x8007000e
   1400027eb:	call   0x140008a90
   1400027f0:	int3   
   1400027f1:	mov    r8,QWORD PTR [r12]
   1400027f5:	test   r8,r8
   1400027f8:	je     0x1400027fd
   1400027fa:	mov    r8,QWORD PTR [r8]
   1400027fd:	test   r8,r8
   140002800:	je     0x140002815
   140002802:	lea    r9d,[rbp+0x1]
   140002806:	lea    edx,[rbx+0x1]
   140002809:	add    r9,r9
   14000280c:	add    rdx,rdx
   14000280f:	call   QWORD PTR [rip+0x79bb]        # 0x14000a1d0
   140002815:	mov    r8,QWORD PTR [r13+0x0]
   140002819:	test   r8,r8
   14000281c:	je     0x140002821
   14000281e:	mov    r8,QWORD PTR [r8]
   140002821:	test   r8,r8
   140002824:	je     0x14000283e
   140002826:	mov    rax,QWORD PTR [rsi]
   140002829:	lea    edx,[rdi+0x1]
   14000282c:	mov    ecx,ebp
   14000282e:	add    rdx,rdx
   140002831:	lea    rcx,[rax+rcx*2]
   140002835:	mov    r9,rdx
   140002838:	call   QWORD PTR [rip+0x7992]        # 0x14000a1d0
   14000283e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002843:	mov    rbp,QWORD PTR [rsp+0x48]
   140002848:	mov    rax,rsi
   14000284b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002850:	add    rsp,0x20
   140002854:	pop    r13
   140002856:	pop    r12
   140002858:	pop    rdi
   140002859:	ret    
   14000285a:	mov    ecx,0x8007000e
   14000285f:	call   0x140008a90
   140002864:	int3   
   140002865:	int3   
   140002866:	int3   
   140002867:	int3   
   140002868:	sub    rsp,0x28
   14000286c:	mov    DWORD PTR [rsp+0x30],ecx
   140002870:	lea    rdx,[rip+0xaba1]        # 0x14000d418
   140002877:	lea    rcx,[rsp+0x30]
   14000287c:	call   0x1400080a4
   140002881:	int3   
   140002882:	int3   
   140002883:	int3   
   140002884:	sub    rsp,0x28
   140002888:	call   QWORD PTR [rip+0x777a]        # 0x14000a008
   14000288e:	mov    r11d,eax
   140002891:	movzx  eax,ax
   140002894:	or     eax,0x80070000
   140002899:	test   r11d,r11d
   14000289c:	cmovle eax,r11d
   1400028a0:	add    rsp,0x28
   1400028a4:	ret    
   1400028a5:	int3   
   1400028a6:	int3   
   1400028a7:	int3   
   1400028a8:	movzx  eax,cx
   1400028ab:	or     eax,0x80070000
   1400028b0:	test   ecx,ecx
   1400028b2:	cmovle eax,ecx
   1400028b5:	ret    
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400028bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400028c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400028c7:	push   rdi
   1400028c8:	sub    rsp,0x60
   1400028cc:	cmp    QWORD PTR [rcx],0x0
   1400028d0:	mov    edi,r9d
   1400028d3:	mov    rsi,r8
   1400028d6:	mov    rbp,rdx
   1400028d9:	mov    rbx,rcx
   1400028dc:	je     0x140002975
   1400028e2:	lea    rcx,[rip+0x824f]        # 0x14000ab38
   1400028e9:	call   QWORD PTR [rip+0x7739]        # 0x14000a028
   1400028ef:	test   rax,rax
   1400028f2:	je     0x1400029d1
   1400028f8:	lea    rdx,[rip+0x82e9]        # 0x14000abe8
   1400028ff:	mov    rcx,rax
   140002902:	call   QWORD PTR [rip+0x7718]        # 0x14000a020
   140002908:	mov    r11,rax
   14000290b:	test   rax,rax
   14000290e:	je     0x1400029d1
   140002914:	and    QWORD PTR [rsp+0x50],0x0
   14000291a:	mov    rcx,QWORD PTR [rbx]
   14000291d:	mov    eax,DWORD PTR [rsp+0x98]
   140002924:	mov    r9,QWORD PTR [rsp+0x90]
   14000292c:	mov    QWORD PTR [rsp+0x48],rcx
   140002931:	mov    rcx,QWORD PTR [rsp+0xb8]
   140002939:	mov    QWORD PTR [rsp+0x40],rcx
   14000293e:	mov    rcx,QWORD PTR [rsp+0xb0]
   140002946:	mov    r8d,edi
   140002949:	mov    QWORD PTR [rsp+0x38],rcx
   14000294e:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002956:	mov    rdx,rsi
   140002959:	mov    QWORD PTR [rsp+0x30],rcx
   14000295e:	mov    ecx,DWORD PTR [rsp+0xa0]
   140002965:	mov    DWORD PTR [rsp+0x28],ecx
   140002969:	mov    rcx,rbp
   14000296c:	mov    DWORD PTR [rsp+0x20],eax
   140002970:	call   r11
   140002973:	jmp    0x1400029d6
   140002975:	cmp    DWORD PTR [rcx+0x8],0x0
   140002979:	je     0x1400029d1
   14000297b:	mov    rax,QWORD PTR [rsp+0xb8]
   140002983:	mov    r9,QWORD PTR [rsp+0x90]
   14000298b:	mov    r8d,edi
   14000298e:	mov    QWORD PTR [rsp+0x40],rax
   140002993:	mov    rax,QWORD PTR [rsp+0xb0]
   14000299b:	mov    rdx,rsi
   14000299e:	mov    QWORD PTR [rsp+0x38],rax
   1400029a3:	mov    rax,QWORD PTR [rsp+0xa8]
   1400029ab:	mov    rcx,rbp
   1400029ae:	mov    QWORD PTR [rsp+0x30],rax
   1400029b3:	mov    eax,DWORD PTR [rsp+0xa0]
   1400029ba:	mov    DWORD PTR [rsp+0x28],eax
   1400029be:	mov    eax,DWORD PTR [rsp+0x98]
   1400029c5:	mov    DWORD PTR [rsp+0x20],eax
   1400029c9:	call   QWORD PTR [rip+0xc829]        # 0x14000f1f8
   1400029cf:	jmp    0x1400029d6
   1400029d1:	mov    eax,0x1
   1400029d6:	lea    r11,[rsp+0x60]
   1400029db:	mov    rbx,QWORD PTR [r11+0x10]
   1400029df:	mov    rbp,QWORD PTR [r11+0x18]
   1400029e3:	mov    rsi,QWORD PTR [r11+0x20]
   1400029e7:	mov    rsp,r11
   1400029ea:	pop    rdi
   1400029eb:	ret    
   1400029ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400029f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400029f6:	push   rdi
   1400029f7:	sub    rsp,0x30
   1400029fb:	cmp    QWORD PTR [rcx],0x0
   1400029ff:	mov    rdi,r8
   140002a02:	mov    rsi,rdx
   140002a05:	mov    rbx,rcx
   140002a08:	je     0x140002a4f
   140002a0a:	lea    rcx,[rip+0x8127]        # 0x14000ab38
   140002a11:	call   QWORD PTR [rip+0x7611]        # 0x14000a028
   140002a17:	test   rax,rax
   140002a1a:	je     0x140002a63
   140002a1c:	lea    rdx,[rip+0x81dd]        # 0x14000ac00
   140002a23:	mov    rcx,rax
   140002a26:	call   QWORD PTR [rip+0x75f4]        # 0x14000a020
   140002a2c:	test   rax,rax
   140002a2f:	je     0x140002a63
   140002a31:	mov    rcx,QWORD PTR [rbx]
   140002a34:	and    QWORD PTR [rsp+0x28],0x0
   140002a3a:	xor    r9d,r9d
   140002a3d:	mov    QWORD PTR [rsp+0x20],rcx
   140002a42:	xor    r8d,r8d
   140002a45:	mov    rdx,rdi
   140002a48:	mov    rcx,rsi
   140002a4b:	call   rax
   140002a4d:	jmp    0x140002a68
   140002a4f:	cmp    DWORD PTR [rcx+0x8],0x0
   140002a53:	je     0x140002a63
   140002a55:	mov    rdx,r8
   140002a58:	mov    rcx,rsi
   140002a5b:	call   QWORD PTR [rip+0xc787]        # 0x14000f1e8
   140002a61:	jmp    0x140002a68
   140002a63:	mov    eax,0x1
   140002a68:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a6d:	mov    rsi,QWORD PTR [rsp+0x48]
   140002a72:	add    rsp,0x30
   140002a76:	pop    rdi
   140002a77:	ret    
   140002a78:	mov    eax,0x1
   140002a7d:	lock xadd DWORD PTR [rcx+0xc],eax
   140002a82:	inc    eax
   140002a84:	ret    
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	or     eax,0xffffffff
   140002a8b:	lock xadd DWORD PTR [rcx+0xc],eax
   140002a90:	dec    eax
   140002a92:	ret    
   140002a93:	int3   
   140002a94:	mov    eax,DWORD PTR [rcx+0xc]
   140002a97:	ret    
   140002a98:	mov    QWORD PTR [rsp+0x8],rbx
   140002a9d:	mov    QWORD PTR [rsp+0x10],rsi
   140002aa2:	push   rdi
   140002aa3:	sub    rsp,0x30
   140002aa7:	mov    rsi,rdx
   140002aaa:	test   rdx,rdx
   140002aad:	jne    0x140002ab6
   140002aaf:	mov    eax,0x80004003
   140002ab4:	jmp    0x140002af7
   140002ab6:	lea    rbx,[rcx+0x40]
   140002aba:	xor    edi,edi
   140002abc:	cmp    QWORD PTR [rbx],rdi
   140002abf:	jne    0x140002ae6
   140002ac1:	lea    r9,[rip+0x8150]        # 0x14000ac18
   140002ac8:	lea    r8d,[rdi+0x1]
   140002acc:	lea    rcx,[rip+0x950d]        # 0x14000bfe0
   140002ad3:	xor    edx,edx
   140002ad5:	mov    QWORD PTR [rsp+0x20],rbx
   140002ada:	call   QWORD PTR [rip+0x78b0]        # 0x14000a390
   140002ae0:	mov    edi,eax
   140002ae2:	test   eax,eax
   140002ae4:	js     0x140002af5
   140002ae6:	mov    rcx,QWORD PTR [rbx]
   140002ae9:	mov    QWORD PTR [rsi],rcx
   140002aec:	mov    rcx,QWORD PTR [rbx]
   140002aef:	mov    rdx,QWORD PTR [rcx]
   140002af2:	call   QWORD PTR [rdx+0x8]
   140002af5:	mov    eax,edi
   140002af7:	mov    rbx,QWORD PTR [rsp+0x40]
   140002afc:	mov    rsi,QWORD PTR [rsp+0x48]
   140002b01:	add    rsp,0x30
   140002b05:	pop    rdi
   140002b06:	ret    
   140002b07:	int3   
   140002b08:	mov    eax,0x80004005
   140002b0d:	ret    
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	mov    QWORD PTR [rsp+0x8],rbx
   140002b15:	push   rdi
   140002b16:	sub    rsp,0x20
   140002b1a:	mov    rbx,rcx
   140002b1d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b21:	mov    rdi,rdx
   140002b24:	test   rcx,rcx
   140002b27:	je     0x140002b36
   140002b29:	mov    r8,rdx
   140002b2c:	mov    rdx,QWORD PTR [rbx]
   140002b2f:	call   0x1400029ec
   140002b34:	jmp    0x140002b9d
   140002b36:	cmp    BYTE PTR [rip+0xc753],0x0        # 0x14000f290
   140002b3d:	jne    0x140002b7a
   140002b3f:	lea    rcx,[rip+0x7ff2]        # 0x14000ab38
   140002b46:	call   QWORD PTR [rip+0x74dc]        # 0x14000a028
   140002b4c:	test   rax,rax
   140002b4f:	je     0x140002b6a
   140002b51:	lea    rdx,[rip+0x80d0]        # 0x14000ac28
   140002b58:	mov    rcx,rax
   140002b5b:	call   QWORD PTR [rip+0x74bf]        # 0x14000a020
   140002b61:	mov    QWORD PTR [rip+0xc720],rax        # 0x14000f288
   140002b68:	jmp    0x140002b71
   140002b6a:	mov    rax,QWORD PTR [rip+0xc717]        # 0x14000f288
   140002b71:	mov    BYTE PTR [rip+0xc718],0x1        # 0x14000f290
   140002b78:	jmp    0x140002b81
   140002b7a:	mov    rax,QWORD PTR [rip+0xc707]        # 0x14000f288
   140002b81:	mov    rcx,QWORD PTR [rbx]
   140002b84:	mov    rdx,rdi
   140002b87:	test   rax,rax
   140002b8a:	je     0x140002b97
   140002b8c:	mov    r8d,DWORD PTR [rbx+0x8]
   140002b90:	xor    r9d,r9d
   140002b93:	call   rax
   140002b95:	jmp    0x140002b9d
   140002b97:	call   QWORD PTR [rip+0xc64b]        # 0x14000f1e8
   140002b9d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ba2:	add    rsp,0x20
   140002ba6:	pop    rdi
   140002ba7:	ret    
   140002ba8:	mov    QWORD PTR [rsp+0x10],rbx
   140002bad:	push   rdi
   140002bae:	sub    rsp,0x60
   140002bb2:	and    QWORD PTR [rsp+0x50],0x0
   140002bb8:	mov    edi,DWORD PTR [rsp+0x98]
   140002bbf:	mov    rbx,rcx
   140002bc2:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bc6:	mov    r10,r8
   140002bc9:	mov    r11,rdx
   140002bcc:	lea    rax,[rsp+0x70]
   140002bd1:	test   rcx,rcx
   140002bd4:	je     0x140002c10
   140002bd6:	mov    QWORD PTR [rsp+0x48],rax
   140002bdb:	lea    rax,[rsp+0x50]
   140002be0:	mov    QWORD PTR [rsp+0x40],rax
   140002be5:	mov    rax,QWORD PTR [rsp+0xa0]
   140002bed:	mov    QWORD PTR [rsp+0x38],rax
   140002bf2:	mov    eax,DWORD PTR [rsp+0x90]
   140002bf9:	mov    DWORD PTR [rsp+0x30],edi
   140002bfd:	mov    DWORD PTR [rsp+0x28],eax
   140002c01:	mov    QWORD PTR [rsp+0x20],r9
   140002c06:	xor    r9d,r9d
   140002c09:	call   0x1400028b8
   140002c0e:	jmp    0x140002c4a
   140002c10:	mov    QWORD PTR [rsp+0x40],rax
   140002c15:	lea    rax,[rsp+0x50]
   140002c1a:	xor    r8d,r8d
   140002c1d:	mov    QWORD PTR [rsp+0x38],rax
   140002c22:	mov    rax,QWORD PTR [rsp+0xa0]
   140002c2a:	mov    rdx,r10
   140002c2d:	mov    QWORD PTR [rsp+0x30],rax
   140002c32:	mov    eax,DWORD PTR [rsp+0x90]
   140002c39:	mov    rcx,r11
   140002c3c:	mov    DWORD PTR [rsp+0x28],edi
   140002c40:	mov    DWORD PTR [rsp+0x20],eax
   140002c44:	call   QWORD PTR [rip+0xc5ae]        # 0x14000f1f8
   140002c4a:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002c52:	mov    r11d,eax
   140002c55:	test   rcx,rcx
   140002c58:	je     0x140002c60
   140002c5a:	mov    eax,DWORD PTR [rsp+0x70]
   140002c5e:	mov    DWORD PTR [rcx],eax
   140002c60:	test   r11d,r11d
   140002c63:	jne    0x140002c8b
   140002c65:	mov    rcx,QWORD PTR [rbx]
   140002c68:	test   rcx,rcx
   140002c6b:	je     0x140002c7a
   140002c6d:	call   QWORD PTR [rip+0xc565]        # 0x14000f1d8
   140002c73:	and    QWORD PTR [rbx],0x0
   140002c77:	mov    r11d,eax
   140002c7a:	mov    rax,QWORD PTR [rsp+0x50]
   140002c7f:	and    edi,0x300
   140002c85:	mov    QWORD PTR [rbx],rax
   140002c88:	mov    DWORD PTR [rbx+0x8],edi
   140002c8b:	mov    eax,r11d
   140002c8e:	mov    rbx,QWORD PTR [rsp+0x78]
   140002c93:	add    rsp,0x60
   140002c97:	pop    rdi
   140002c98:	ret    
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	mov    rax,rsp
   140002c9f:	mov    QWORD PTR [rax+0x8],rbx
   140002ca3:	mov    QWORD PTR [rax+0x10],rbp
   140002ca7:	mov    QWORD PTR [rax+0x18],rsi
   140002cab:	mov    QWORD PTR [rax+0x20],rdi
   140002caf:	push   r12
   140002cb1:	sub    rsp,0x30
   140002cb5:	xor    edi,edi
   140002cb7:	mov    rbx,r8
   140002cba:	mov    rbp,rdx
   140002cbd:	mov    r12,rcx
   140002cc0:	test   r8,r8
   140002cc3:	jne    0x140002cca
   140002cc5:	lea    eax,[rdi+0xd]
   140002cc8:	jmp    0x140002d01
   140002cca:	mov    rsi,rbx
   140002ccd:	mov    rcx,rsi
   140002cd0:	call   QWORD PTR [rip+0x735a]        # 0x14000a030
   140002cd6:	inc    eax
   140002cd8:	lea    rsi,[rsi+rax*2]
   140002cdc:	lea    edi,[rdi+rax*2]
   140002cdf:	cmp    eax,0x1
   140002ce2:	jne    0x140002ccd
   140002ce4:	mov    rcx,QWORD PTR [r12]
   140002ce8:	lea    r9d,[rax+0x6]
   140002cec:	xor    r8d,r8d
   140002cef:	mov    rdx,rbp
   140002cf2:	mov    DWORD PTR [rsp+0x28],edi
   140002cf6:	mov    QWORD PTR [rsp+0x20],rbx
   140002cfb:	call   QWORD PTR [rip+0xc4df]        # 0x14000f1e0
   140002d01:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d06:	mov    rbp,QWORD PTR [rsp+0x48]
   140002d0b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002d10:	mov    rdi,QWORD PTR [rsp+0x58]
   140002d15:	add    rsp,0x30
   140002d19:	pop    r12
   140002d1b:	ret    
   140002d1c:	mov    rcx,QWORD PTR [rcx+0x8]
   140002d20:	rex.W jmp QWORD PTR [rip+0x7671]        # 0x14000a398
   140002d27:	int3   
   140002d28:	mov    QWORD PTR [rsp+0x8],rbx
   140002d2d:	mov    QWORD PTR [rsp+0x10],rbp
   140002d32:	mov    QWORD PTR [rsp+0x18],rsi
   140002d37:	push   rdi
   140002d38:	sub    rsp,0x20
   140002d3c:	mov    eax,DWORD PTR [rcx]
   140002d3e:	mov    rbx,rcx
   140002d41:	mov    edi,r8d
   140002d44:	lea    ecx,[rax+r8*1+0x1]
   140002d49:	mov    rsi,rdx
   140002d4c:	cmp    ecx,eax
   140002d4e:	jle    0x140002e27
   140002d54:	cmp    ecx,r8d
   140002d57:	jle    0x140002e27
   140002d5d:	xor    ebp,ebp
   140002d5f:	cmp    ecx,DWORD PTR [rbx+0x4]
   140002d62:	jl     0x140002da7
   140002d64:	mov    eax,DWORD PTR [rbx+0x4]
   140002d67:	cmp    eax,0x3fffffff
   140002d6c:	jg     0x140002e27
   140002d72:	add    eax,eax
   140002d74:	mov    DWORD PTR [rbx+0x4],eax
   140002d77:	cmp    ecx,eax
   140002d79:	jge    0x140002d64
   140002d7b:	mov    edx,eax
   140002d7d:	mov    eax,0xffffffff
   140002d82:	add    rdx,rdx
   140002d85:	cmp    rdx,rax
   140002d88:	ja     0x140002e27
   140002d8e:	mov    rcx,QWORD PTR [rbx+0x8]
   140002d92:	mov    edx,edx
   140002d94:	call   QWORD PTR [rip+0x75ee]        # 0x14000a388
   140002d9a:	test   rax,rax
   140002d9d:	je     0x140002e27
   140002da3:	mov    QWORD PTR [rbx+0x8],rax
   140002da7:	cmp    DWORD PTR [rbx],ebp
   140002da9:	jl     0x140002e27
   140002dab:	mov    eax,DWORD PTR [rbx+0x4]
   140002dae:	cmp    DWORD PTR [rbx],eax
   140002db0:	jge    0x140002e27
   140002db2:	mov    ecx,eax
   140002db4:	sub    ecx,DWORD PTR [rbx]
   140002db6:	cmp    ecx,eax
   140002db8:	jg     0x140002e27
   140002dba:	mov    rax,QWORD PTR [rbx+0x8]
   140002dbe:	movsxd rdx,ecx
   140002dc1:	movsxd rcx,DWORD PTR [rbx]
   140002dc4:	lea    rcx,[rax+rcx*2]
   140002dc8:	lea    eax,[rdi+rdi*1]
   140002dcb:	add    rdx,rdx
   140002dce:	movsxd r9,eax
   140002dd1:	mov    r8,rsi
   140002dd4:	call   QWORD PTR [rip+0x73f6]        # 0x14000a1d0
   140002dda:	test   eax,eax
   140002ddc:	je     0x140002e13
   140002dde:	cmp    eax,0xc
   140002de1:	je     0x140002e08
   140002de3:	cmp    eax,0x16
   140002de6:	je     0x140002dfd
   140002de8:	cmp    eax,0x22
   140002deb:	je     0x140002dfd
   140002ded:	cmp    eax,0x50
   140002df0:	je     0x140002e13
   140002df2:	mov    ecx,0x80004005
   140002df7:	call   0x140002868
   140002dfc:	int3   
   140002dfd:	mov    ecx,0x80070057
   140002e02:	call   0x140002868
   140002e07:	int3   
   140002e08:	mov    ecx,0x8007000e
   140002e0d:	call   0x140002868
   140002e12:	int3   
   140002e13:	add    DWORD PTR [rbx],edi
   140002e15:	mov    rax,QWORD PTR [rbx+0x8]
   140002e19:	movsxd rcx,DWORD PTR [rbx]
   140002e1c:	mov    WORD PTR [rax+rcx*2],bp
   140002e20:	mov    eax,0x1
   140002e25:	jmp    0x140002e29
   140002e27:	xor    eax,eax
   140002e29:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e2e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002e33:	mov    rsi,QWORD PTR [rsp+0x40]
   140002e38:	add    rsp,0x20
   140002e3c:	pop    rdi
   140002e3d:	ret    
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    rax,rsp
   140002e43:	mov    QWORD PTR [rax+0x8],rbx
   140002e47:	mov    QWORD PTR [rax+0x10],rbp
   140002e4b:	mov    QWORD PTR [rax+0x18],rsi
   140002e4f:	mov    QWORD PTR [rax+0x20],rdi
   140002e53:	push   r13
   140002e55:	sub    rsp,0x20
   140002e59:	mov    eax,DWORD PTR [rip+0xc481]        # 0x14000f2e0
   140002e5f:	mov    rsi,rdx
   140002e62:	mov    rbp,rcx
   140002e65:	test   al,0x1
   140002e67:	jne    0x140002eda
   140002e69:	or     eax,0x1
   140002e6c:	mov    DWORD PTR [rip+0xc46e],eax        # 0x14000f2e0
   140002e72:	lea    rax,[rip+0x75b7]        # 0x14000a430
   140002e79:	mov    QWORD PTR [rip+0xc420],rax        # 0x14000f2a0
   140002e80:	mov    eax,0x8
   140002e85:	mov    WORD PTR [rip+0xc41c],ax        # 0x14000f2a8
   140002e8c:	lea    rax,[rip+0x75a1]        # 0x14000a434
   140002e93:	mov    QWORD PTR [rip+0xc416],rax        # 0x14000f2b0
   140002e9a:	mov    eax,0x4008
   140002e9f:	mov    WORD PTR [rip+0xc412],ax        # 0x14000f2b8
   140002ea6:	lea    rax,[rip+0x759b]        # 0x14000a448
   140002ead:	mov    QWORD PTR [rip+0xc40c],rax        # 0x14000f2c0
   140002eb4:	mov    eax,0x13
   140002eb9:	mov    WORD PTR [rip+0xc408],ax        # 0x14000f2c8
   140002ec0:	lea    rax,[rip+0x7585]        # 0x14000a44c
   140002ec7:	mov    QWORD PTR [rip+0xc402],rax        # 0x14000f2d0
   140002ece:	mov    eax,0x11
   140002ed3:	mov    WORD PTR [rip+0xc3fe],ax        # 0x14000f2d8
   140002eda:	lea    r13,[rip+0xc3bf]        # 0x14000f2a0
   140002ee1:	xor    ebx,ebx
   140002ee3:	mov    rdi,r13
   140002ee6:	mov    rdx,QWORD PTR [rdi]
   140002ee9:	mov    rcx,rbp
   140002eec:	call   QWORD PTR [rip+0x7156]        # 0x14000a048
   140002ef2:	test   eax,eax
   140002ef4:	je     0x140002f05
   140002ef6:	inc    ebx
   140002ef8:	add    rdi,0x10
   140002efc:	cmp    ebx,0x4
   140002eff:	jb     0x140002ee6
   140002f01:	xor    eax,eax
   140002f03:	jmp    0x140002f19
   140002f05:	movsxd rcx,ebx
   140002f08:	mov    eax,0x1
   140002f0d:	add    rcx,rcx
   140002f10:	movzx  ecx,WORD PTR [r13+rcx*8+0x8]
   140002f16:	mov    WORD PTR [rsi],cx
   140002f19:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f1e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f23:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f28:	mov    rdi,QWORD PTR [rsp+0x48]
   140002f2d:	add    rsp,0x20
   140002f31:	pop    r13
   140002f33:	ret    
   140002f34:	mov    QWORD PTR [rsp+0x8],rbx
   140002f39:	mov    QWORD PTR [rsp+0x10],rbp
   140002f3e:	mov    QWORD PTR [rsp+0x18],rsi
   140002f43:	push   rdi
   140002f44:	sub    rsp,0x20
   140002f48:	lea    rbp,[rip+0x7cf1]        # 0x14000ac40
   140002f4f:	mov    rsi,rcx
   140002f52:	xor    ebx,ebx
   140002f54:	mov    rdi,rbp
   140002f57:	mov    rdx,QWORD PTR [rdi]
   140002f5a:	mov    rcx,rsi
   140002f5d:	call   QWORD PTR [rip+0x70e5]        # 0x14000a048
   140002f63:	test   eax,eax
   140002f65:	je     0x140002f76
   140002f67:	inc    ebx
   140002f69:	add    rdi,0x10
   140002f6d:	cmp    ebx,0xe
   140002f70:	jb     0x140002f57
   140002f72:	xor    eax,eax
   140002f74:	jmp    0x140002f81
   140002f76:	movsxd rax,ebx
   140002f79:	add    rax,rax
   140002f7c:	mov    rax,QWORD PTR [rbp+rax*8+0x8]
   140002f81:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f86:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f8b:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f90:	add    rsp,0x20
   140002f94:	pop    rdi
   140002f95:	ret    
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	mov    QWORD PTR [rsp+0x8],rbx
   140002f9d:	mov    QWORD PTR [rsp+0x10],rbp
   140002fa2:	mov    QWORD PTR [rsp+0x18],rsi
   140002fa7:	push   rdi
   140002fa8:	push   r12
   140002faa:	push   r13
   140002fac:	sub    rsp,0x20
   140002fb0:	mov    rdi,rdx
   140002fb3:	mov    rbx,rcx
   140002fb6:	mov    rcx,QWORD PTR [rbx]
   140002fb9:	movzx  eax,WORD PTR [rcx]
   140002fbc:	cmp    eax,0x9
   140002fbf:	jl     0x140002fdb
   140002fc1:	cmp    eax,0xa
   140002fc4:	jle    0x140002fd0
   140002fc6:	cmp    eax,0xd
   140002fc9:	je     0x140002fd0
   140002fcb:	cmp    eax,0x20
   140002fce:	jne    0x140002fdb
   140002fd0:	call   QWORD PTR [rip+0x739a]        # 0x14000a370
   140002fd6:	mov    QWORD PTR [rbx],rax
   140002fd9:	jmp    0x140002fb6
   140002fdb:	xor    r12d,r12d
   140002fde:	cmp    r12w,WORD PTR [rcx]
   140002fe2:	je     0x1400030fa
   140002fe8:	lea    r13d,[r12+0x27]
   140002fed:	mov    rbp,rdi
   140002ff0:	cmp    r13w,WORD PTR [rcx]
   140002ff4:	jne    0x140003093
   140002ffa:	call   QWORD PTR [rip+0x7370]        # 0x14000a370
   140003000:	mov    QWORD PTR [rbx],rax
   140003003:	cmp    r12w,WORD PTR [rax]
   140003007:	je     0x140003078
   140003009:	mov    rcx,QWORD PTR [rbx]
   14000300c:	cmp    r13w,WORD PTR [rcx]
   140003010:	jne    0x14000301e
   140003012:	call   QWORD PTR [rip+0x7358]        # 0x14000a370
   140003018:	cmp    r13w,WORD PTR [rax]
   14000301c:	jne    0x140003078
   14000301e:	mov    rcx,QWORD PTR [rbx]
   140003021:	cmp    r13w,WORD PTR [rcx]
   140003025:	jne    0x140003030
   140003027:	call   QWORD PTR [rip+0x7343]        # 0x14000a370
   14000302d:	mov    QWORD PTR [rbx],rax
   140003030:	mov    rsi,QWORD PTR [rbx]
   140003033:	mov    rcx,rsi
   140003036:	call   QWORD PTR [rip+0x7334]        # 0x14000a370
   14000303c:	lea    rcx,[rbp+0x2000]
   140003043:	mov    QWORD PTR [rbx],rax
   140003046:	sub    rax,rsi
   140003049:	sar    rax,1
   14000304c:	lea    rdx,[rdi+rax*2+0x2]
   140003051:	cmp    rdx,rcx
   140003054:	jae    0x1400030fa
   14000305a:	test   eax,eax
   14000305c:	jle    0x140003073
   14000305e:	sub    rsi,rdi
   140003061:	mov    ecx,eax
   140003063:	movzx  eax,WORD PTR [rsi+rdi*1]
   140003067:	mov    WORD PTR [rdi],ax
   14000306a:	add    rdi,0x2
   14000306e:	dec    rcx
   140003071:	jne    0x140003063
   140003073:	mov    rax,QWORD PTR [rbx]
   140003076:	jmp    0x140003003
   140003078:	mov    rax,QWORD PTR [rbx]
   14000307b:	cmp    r12w,WORD PTR [rax]
   14000307f:	je     0x1400030fa
   140003081:	mov    WORD PTR [rdi],r12w
   140003085:	mov    rcx,QWORD PTR [rbx]
   140003088:	call   QWORD PTR [rip+0x72e2]        # 0x14000a370
   14000308e:	mov    QWORD PTR [rbx],rax
   140003091:	jmp    0x1400030f6
   140003093:	mov    rsi,QWORD PTR [rbx]
   140003096:	movzx  eax,WORD PTR [rsi]
   140003099:	cmp    eax,0x9
   14000309c:	jl     0x1400030ad
   14000309e:	cmp    eax,0xa
   1400030a1:	jle    0x1400030f2
   1400030a3:	cmp    eax,0xd
   1400030a6:	je     0x1400030f2
   1400030a8:	cmp    eax,0x20
   1400030ab:	je     0x1400030f2
   1400030ad:	mov    rcx,rsi
   1400030b0:	call   QWORD PTR [rip+0x72ba]        # 0x14000a370
   1400030b6:	lea    rcx,[rbp+0x2000]
   1400030bd:	mov    QWORD PTR [rbx],rax
   1400030c0:	sub    rax,rsi
   1400030c3:	sar    rax,1
   1400030c6:	lea    rdx,[rdi+rax*2+0x2]
   1400030cb:	cmp    rdx,rcx
   1400030ce:	jae    0x1400030fa
   1400030d0:	test   eax,eax
   1400030d2:	jle    0x1400030e9
   1400030d4:	sub    rsi,rdi
   1400030d7:	mov    ecx,eax
   1400030d9:	movzx  eax,WORD PTR [rsi+rdi*1]
   1400030dd:	mov    WORD PTR [rdi],ax
   1400030e0:	add    rdi,0x2
   1400030e4:	dec    rcx
   1400030e7:	jne    0x1400030d9
   1400030e9:	mov    rax,QWORD PTR [rbx]
   1400030ec:	cmp    r12w,WORD PTR [rax]
   1400030f0:	jne    0x140003093
   1400030f2:	mov    WORD PTR [rdi],r12w
   1400030f6:	xor    eax,eax
   1400030f8:	jmp    0x1400030ff
   1400030fa:	mov    eax,0x80020009
   1400030ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140003104:	mov    rbp,QWORD PTR [rsp+0x48]
   140003109:	mov    rsi,QWORD PTR [rsp+0x50]
   14000310e:	add    rsp,0x20
   140003112:	pop    r13
   140003114:	pop    r12
   140003116:	pop    rdi
   140003117:	ret    
   140003118:	mov    QWORD PTR [rsp+0x18],rbx
   14000311d:	push   rdi
   14000311e:	mov    eax,0x2030
   140003123:	call   0x140008050
   140003128:	sub    rsp,rax
   14000312b:	mov    rax,QWORD PTR [rip+0xc066]        # 0x14000f198
   140003132:	xor    rax,rsp
   140003135:	mov    QWORD PTR [rsp+0x2020],rax
   14000313d:	cmp    WORD PTR [rdx],0x3d
   140003141:	mov    rdi,rdx
   140003144:	mov    rbx,rcx
   140003147:	jne    0x140003197
   140003149:	call   0x140002f98
   14000314e:	test   eax,eax
   140003150:	js     0x140003199
   140003152:	mov    rcx,QWORD PTR [rbx]
   140003155:	movzx  eax,WORD PTR [rcx]
   140003158:	cmp    eax,0x9
   14000315b:	jl     0x140003177
   14000315d:	cmp    eax,0xa
   140003160:	jle    0x14000316c
   140003162:	cmp    eax,0xd
   140003165:	je     0x14000316c
   140003167:	cmp    eax,0x20
   14000316a:	jne    0x140003177
   14000316c:	call   QWORD PTR [rip+0x71fe]        # 0x14000a370
   140003172:	mov    QWORD PTR [rbx],rax
   140003175:	jmp    0x140003152
   140003177:	lea    rdx,[rsp+0x20]
   14000317c:	mov    rcx,rbx
   14000317f:	call   0x140002f98
   140003184:	test   eax,eax
   140003186:	js     0x140003199
   140003188:	mov    rdx,rdi
   14000318b:	mov    rcx,rbx
   14000318e:	call   0x140002f98
   140003193:	test   eax,eax
   140003195:	js     0x140003199
   140003197:	xor    eax,eax
   140003199:	mov    rcx,QWORD PTR [rsp+0x2020]
   1400031a1:	xor    rcx,rsp
   1400031a4:	call   0x140008020
   1400031a9:	mov    rbx,QWORD PTR [rsp+0x2050]
   1400031b1:	add    rsp,0x2030
   1400031b8:	pop    rdi
   1400031b9:	ret    
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	rex push rbx
   1400031be:	sub    rsp,0x20
   1400031c2:	cmp    QWORD PTR [rcx],0x0
   1400031c6:	mov    rbx,rcx
   1400031c9:	je     0x1400031e0
   1400031cb:	mov    rcx,QWORD PTR [rbx]
   1400031ce:	mov    rax,QWORD PTR [rcx]
   1400031d1:	mov    QWORD PTR [rbx],rax
   1400031d4:	call   QWORD PTR [rip+0x700e]        # 0x14000a1e8
   1400031da:	cmp    QWORD PTR [rbx],0x0
   1400031de:	jne    0x1400031cb
   1400031e0:	add    rsp,0x20
   1400031e4:	pop    rbx
   1400031e5:	ret    
   1400031e6:	int3   
   1400031e7:	int3   
   1400031e8:	mov    rcx,QWORD PTR [rcx]
   1400031eb:	rex.W jmp QWORD PTR [rip+0x6ff6]        # 0x14000a1e8
   1400031f2:	int3   
   1400031f3:	int3   
   1400031f4:	rex push rbx
   1400031f6:	sub    rsp,0x20
   1400031fa:	mov    rbx,rcx
   1400031fd:	mov    rcx,rdx
   140003200:	call   QWORD PTR [rip+0x6fda]        # 0x14000a1e0
   140003206:	test   rax,rax
   140003209:	jne    0x140003216
   14000320b:	mov    ecx,0x8007000e
   140003210:	call   0x140002868
   140003215:	int3   
   140003216:	mov    QWORD PTR [rbx],rax
   140003219:	add    rsp,0x20
   14000321d:	pop    rbx
   14000321e:	ret    
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x18],rbx
   140003225:	push   rbp
   140003226:	push   rsi
   140003227:	push   rdi
   140003228:	lea    rbp,[rsp-0x180]
   140003230:	sub    rsp,0x280
   140003237:	mov    rax,QWORD PTR [rip+0xbf5a]        # 0x14000f198
   14000323e:	xor    rax,rsp
   140003241:	mov    QWORD PTR [rbp+0x170],rax
   140003248:	mov    r9d,DWORD PTR [rcx+0x8]
   14000324c:	xor    eax,eax
   14000324e:	mov    rsi,rdx
   140003251:	mov    r8,rdx
   140003254:	mov    rdx,QWORD PTR [rcx]
   140003257:	mov    rdi,rcx
   14000325a:	lea    rcx,[rsp+0x48]
   14000325f:	or     r9d,0x2001f
   140003266:	mov    QWORD PTR [rsp+0x48],rax
   14000326b:	mov    DWORD PTR [rsp+0x50],eax
   14000326f:	mov    QWORD PTR [rsp+0x58],rax
   140003274:	call   0x1400010b8
   140003279:	jmp    0x14000328a
   14000327b:	lea    rdx,[rsp+0x70]
   140003280:	lea    rcx,[rsp+0x48]
   140003285:	call   0x140003220
   14000328a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000328f:	mov    ebx,eax
   140003291:	test   eax,eax
   140003293:	jne    0x1400032f9
   140003295:	xor    ebx,ebx
   140003297:	lea    rax,[rsp+0x60]
   14000329c:	lea    r9,[rsp+0x40]
   1400032a1:	mov    QWORD PTR [rsp+0x38],rax
   1400032a6:	mov    QWORD PTR [rsp+0x30],rbx
   1400032ab:	lea    r8,[rsp+0x70]
   1400032b0:	xor    edx,edx
   1400032b2:	mov    QWORD PTR [rsp+0x28],rbx
   1400032b7:	mov    DWORD PTR [rsp+0x40],0x100
   1400032bf:	mov    QWORD PTR [rsp+0x20],rbx
   1400032c4:	call   QWORD PTR [rip+0xbf46]        # 0x14000f210
   1400032ca:	test   eax,eax
   1400032cc:	je     0x14000327b
   1400032ce:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032d3:	test   rcx,rcx
   1400032d6:	je     0x1400032e3
   1400032d8:	call   QWORD PTR [rip+0xbefa]        # 0x14000f1d8
   1400032de:	mov    QWORD PTR [rsp+0x48],rbx
   1400032e3:	mov    rdx,rsi
   1400032e6:	mov    rcx,rdi
   1400032e9:	mov    DWORD PTR [rsp+0x50],ebx
   1400032ed:	call   0x140002b10
   1400032f2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032f7:	mov    ebx,eax
   1400032f9:	test   rcx,rcx
   1400032fc:	je     0x140003304
   1400032fe:	call   QWORD PTR [rip+0xbed4]        # 0x14000f1d8
   140003304:	mov    eax,ebx
   140003306:	mov    rcx,QWORD PTR [rbp+0x170]
   14000330d:	xor    rcx,rsp
   140003310:	call   0x140008020
   140003315:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000331d:	add    rsp,0x280
   140003324:	pop    rdi
   140003325:	pop    rsi
   140003326:	pop    rbp
   140003327:	ret    
   140003328:	mov    QWORD PTR [rsp+0x8],rbx
   14000332d:	mov    QWORD PTR [rsp+0x10],rsi
   140003332:	push   rdi
   140003333:	sub    rsp,0x20
   140003337:	xor    esi,esi
   140003339:	xor    edi,edi
   14000333b:	mov    rbx,rcx
   14000333e:	cmp    DWORD PTR [rcx+0x10],esi
   140003341:	jle    0x140003375
   140003343:	test   rsi,rsi
   140003346:	js     0x1400033c7
   140003348:	cmp    edi,DWORD PTR [rbx+0x10]
   14000334b:	jge    0x1400033c7
   14000334d:	mov    rcx,QWORD PTR [rbx]
   140003350:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140003354:	call   0x140007eca
   140003359:	cmp    edi,DWORD PTR [rbx+0x10]
   14000335c:	jge    0x1400033b1
   14000335e:	mov    rcx,QWORD PTR [rbx+0x8]
   140003362:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140003366:	call   0x140007eca
   14000336b:	inc    edi
   14000336d:	inc    rsi
   140003370:	cmp    edi,DWORD PTR [rbx+0x10]
   140003373:	jl     0x140003343
   140003375:	mov    rcx,QWORD PTR [rbx]
   140003378:	test   rcx,rcx
   14000337b:	je     0x140003387
   14000337d:	call   QWORD PTR [rip+0x6e65]        # 0x14000a1e8
   140003383:	and    QWORD PTR [rbx],0x0
   140003387:	mov    rcx,QWORD PTR [rbx+0x8]
   14000338b:	test   rcx,rcx
   14000338e:	je     0x14000339b
   140003390:	call   QWORD PTR [rip+0x6e52]        # 0x14000a1e8
   140003396:	and    QWORD PTR [rbx+0x8],0x0
   14000339b:	and    DWORD PTR [rbx+0x10],0x0
   14000339f:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033a9:	xor    eax,eax
   1400033ab:	add    rsp,0x20
   1400033af:	pop    rdi
   1400033b0:	ret    
   1400033b1:	xor    r9d,r9d
   1400033b4:	xor    r8d,r8d
   1400033b7:	mov    ecx,0xc000008c
   1400033bc:	lea    edx,[r9+0x1]
   1400033c0:	call   QWORD PTR [rip+0x6c3a]        # 0x14000a000
   1400033c6:	int3   
   1400033c7:	xor    r9d,r9d
   1400033ca:	xor    r8d,r8d
   1400033cd:	mov    ecx,0xc000008c
   1400033d2:	lea    edx,[r9+0x1]
   1400033d6:	call   QWORD PTR [rip+0x6c24]        # 0x14000a000
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033e5:	push   rdi
   1400033e6:	sub    rsp,0x20
   1400033ea:	lea    rdi,[rcx+0x20]
   1400033ee:	mov    rbx,rcx
   1400033f1:	mov    rcx,rdi
   1400033f4:	call   QWORD PTR [rip+0x6c3e]        # 0x14000a038
   1400033fa:	lea    rcx,[rbx+0x8]
   1400033fe:	call   0x140003328
   140003403:	mov    rcx,rdi
   140003406:	mov    ebx,eax
   140003408:	call   QWORD PTR [rip+0x6c32]        # 0x14000a040
   14000340e:	mov    eax,ebx
   140003410:	mov    rbx,QWORD PTR [rsp+0x30]
   140003415:	add    rsp,0x20
   140003419:	pop    rdi
   14000341a:	ret    
   14000341b:	int3   
   14000341c:	mov    rax,QWORD PTR [rdx]
   14000341f:	mov    rcx,rdx
   140003422:	lea    r8,[rip+0x7a67]        # 0x14000ae90
   140003429:	lea    rdx,[rip+0x7a68]        # 0x14000ae98
   140003430:	rex.W jmp QWORD PTR [rax+0x18]
   140003434:	mov    QWORD PTR [rsp+0x8],rbx
   140003439:	mov    QWORD PTR [rsp+0x10],rbp
   14000343e:	mov    QWORD PTR [rsp+0x18],rsi
   140003443:	push   rdi
   140003444:	sub    rsp,0x20
   140003448:	xor    ebx,ebx
   14000344a:	mov    rbp,rdx
   14000344d:	mov    rdi,rcx
   140003450:	cmp    DWORD PTR [rcx+0x10],ebx
   140003453:	jle    0x140003477
   140003455:	xor    esi,esi
   140003457:	mov    rax,QWORD PTR [rdi]
   14000345a:	mov    rdx,QWORD PTR [rbp+0x0]
   14000345e:	mov    rcx,QWORD PTR [rsi+rax*1]
   140003462:	call   QWORD PTR [rip+0x6be0]        # 0x14000a048
   140003468:	test   eax,eax
   14000346a:	je     0x14000347a
   14000346c:	inc    ebx
   14000346e:	add    rsi,0x8
   140003472:	cmp    ebx,DWORD PTR [rdi+0x10]
   140003475:	jl     0x140003457
   140003477:	or     ebx,0xffffffff
   14000347a:	cmp    ebx,0xffffffff
   14000347d:	jne    0x140003496
   14000347f:	xor    eax,eax
   140003481:	mov    rbx,QWORD PTR [rsp+0x30]
   140003486:	mov    rbp,QWORD PTR [rsp+0x38]
   14000348b:	mov    rsi,QWORD PTR [rsp+0x40]
   140003490:	add    rsp,0x20
   140003494:	pop    rdi
   140003495:	ret    
   140003496:	test   ebx,ebx
   140003498:	js     0x1400034ac
   14000349a:	cmp    ebx,DWORD PTR [rdi+0x10]
   14000349d:	jge    0x1400034ac
   14000349f:	mov    rax,QWORD PTR [rdi+0x8]
   1400034a3:	movsxd rcx,ebx
   1400034a6:	mov    rax,QWORD PTR [rax+rcx*8]
   1400034aa:	jmp    0x140003481
   1400034ac:	xor    r9d,r9d
   1400034af:	xor    r8d,r8d
   1400034b2:	mov    ecx,0xc000008c
   1400034b7:	lea    edx,[r9+0x1]
   1400034bb:	call   QWORD PTR [rip+0x6b3f]        # 0x14000a000
   1400034c1:	int3   
   1400034c2:	int3   
   1400034c3:	int3   
   1400034c4:	rex push rbx
   1400034c6:	sub    rsp,0x20
   1400034ca:	mov    rbx,rcx
   1400034cd:	mov    rcx,QWORD PTR [rcx]
   1400034d0:	call   0x140007eca
   1400034d5:	and    QWORD PTR [rbx],0x0
   1400034d9:	add    rsp,0x20
   1400034dd:	pop    rbx
   1400034de:	ret    
   1400034df:	int3   
   1400034e0:	sub    rsp,0x28
   1400034e4:	lea    rax,[rcx+0x8]
   1400034e8:	cmp    QWORD PTR [rcx],rax
   1400034eb:	je     0x1400034f2
   1400034ed:	call   0x1400031e8
   1400034f2:	add    rsp,0x28
   1400034f6:	ret    
   1400034f7:	int3   
   1400034f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400034fd:	mov    QWORD PTR [rsp+0x10],rsi
   140003502:	push   rdi
   140003503:	sub    rsp,0x20
   140003507:	cmp    DWORD PTR [rcx+0x8],0x0
   14000350b:	lea    rax,[rip+0x7686]        # 0x14000ab98
   140003512:	mov    esi,edx
   140003514:	mov    QWORD PTR [rcx],rax
   140003517:	mov    rbx,rcx
   14000351a:	je     0x14000354e
   14000351c:	cmp    QWORD PTR [rcx+0x10],0x0
   140003521:	je     0x140003531
   140003523:	add    rcx,0x8
   140003527:	call   0x14000114c
   14000352c:	and    QWORD PTR [rbx+0x10],0x0
   140003531:	mov    rcx,QWORD PTR [rbx+0x40]
   140003535:	test   rcx,rcx
   140003538:	je     0x140003540
   14000353a:	mov    rax,QWORD PTR [rcx]
   14000353d:	call   QWORD PTR [rax+0x10]
   140003540:	lea    rcx,[rbx+0x18]
   140003544:	call   QWORD PTR [rip+0x6ace]        # 0x14000a018
   14000354a:	and    DWORD PTR [rbx+0x8],0x0
   14000354e:	test   sil,0x1
   140003552:	je     0x14000355c
   140003554:	mov    rcx,rbx
   140003557:	call   0x140007e4c
   14000355c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003561:	mov    rax,rbx
   140003564:	mov    rbx,QWORD PTR [rsp+0x30]
   140003569:	add    rsp,0x20
   14000356d:	pop    rdi
   14000356e:	ret    
   14000356f:	int3   
   140003570:	mov    QWORD PTR [rsp+0x8],rbx
   140003575:	push   rdi
   140003576:	sub    rsp,0x20
   14000357a:	lea    rax,[rip+0x792f]        # 0x14000aeb0
   140003581:	mov    rbx,rcx
   140003584:	mov    QWORD PTR [rcx],rax
   140003587:	add    rcx,0x20
   14000358b:	call   QWORD PTR [rip+0x6aa7]        # 0x14000a038
   140003591:	lea    rcx,[rbx+0x8]
   140003595:	call   0x140003328
   14000359a:	lea    rcx,[rbx+0x20]
   14000359e:	call   QWORD PTR [rip+0x6a9c]        # 0x14000a040
   1400035a4:	cmp    BYTE PTR [rbx+0x48],0x0
   1400035a8:	je     0x1400035b8
   1400035aa:	lea    rcx,[rbx+0x20]
   1400035ae:	mov    BYTE PTR [rbx+0x48],0x0
   1400035b2:	call   QWORD PTR [rip+0x6a60]        # 0x14000a018
   1400035b8:	lea    rcx,[rbx+0x8]
   1400035bc:	call   0x140003328
   1400035c1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400035c5:	test   rcx,rcx
   1400035c8:	je     0x1400035d5
   1400035ca:	call   QWORD PTR [rip+0x6c18]        # 0x14000a1e8
   1400035d0:	and    QWORD PTR [rbx+0x8],0x0
   1400035d5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400035d9:	test   rcx,rcx
   1400035dc:	je     0x1400035e9
   1400035de:	call   QWORD PTR [rip+0x6c04]        # 0x14000a1e8
   1400035e4:	and    QWORD PTR [rbx+0x10],0x0
   1400035e9:	and    DWORD PTR [rbx+0x18],0x0
   1400035ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035f2:	add    rsp,0x20
   1400035f6:	pop    rdi
   1400035f7:	ret    
   1400035f8:	mov    eax,0x80004001
   1400035fd:	ret    
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	mov    eax,0x1
   140003605:	ret    
   140003606:	int3   
   140003607:	int3   
   140003608:	mov    QWORD PTR [rsp+0x8],rbx
   14000360d:	push   rdi
   14000360e:	sub    rsp,0x20
   140003612:	mov    ebx,edx
   140003614:	mov    rdi,rcx
   140003617:	call   0x140003570
   14000361c:	test   bl,0x1
   14000361f:	je     0x140003629
   140003621:	mov    rcx,rdi
   140003624:	call   0x140007e4c
   140003629:	mov    rax,rdi
   14000362c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003631:	add    rsp,0x20
   140003635:	pop    rdi
   140003636:	ret    
   140003637:	int3   
   140003638:	mov    rax,rsp
   14000363b:	push   rbp
   14000363c:	push   rsi
   14000363d:	push   rdi
   14000363e:	push   r12
   140003640:	push   r13
   140003642:	push   r14
   140003644:	push   r15
   140003646:	lea    rbp,[rax-0x5f]
   14000364a:	sub    rsp,0xa0
   140003651:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   140003659:	mov    QWORD PTR [rax+0x20],rbx
   14000365d:	mov    rax,QWORD PTR [rip+0xbb34]        # 0x14000f198
   140003664:	xor    rax,rsp
   140003667:	mov    QWORD PTR [rbp+0x17],rax
   14000366b:	mov    rax,r8
   14000366e:	mov    QWORD PTR [rbp-0x39],rax
   140003672:	mov    rbx,rdx
   140003675:	mov    r12,rcx
   140003678:	xor    esi,esi
   14000367a:	test   rdx,rdx
   14000367d:	je     0x1400039ff
   140003683:	test   rax,rax
   140003686:	je     0x1400039ff
   14000368c:	mov    QWORD PTR [r8],rsi
   14000368f:	mov    rcx,rdx
   140003692:	call   QWORD PTR [rip+0x6998]        # 0x14000a030
   140003698:	add    eax,eax
   14000369a:	mov    ecx,0x3e8
   14000369f:	cmp    eax,0x64
   1400036a2:	cmovl  eax,ecx
   1400036a5:	mov    DWORD PTR [rbp-0x51],esi
   1400036a8:	mov    DWORD PTR [rbp-0x4d],eax
   1400036ab:	mov    ecx,eax
   1400036ad:	add    rcx,rcx
   1400036b0:	mov    eax,0xffffffff
   1400036b5:	cmp    rcx,rax
   1400036b8:	jbe    0x1400036be
   1400036ba:	mov    eax,esi
   1400036bc:	jmp    0x1400036c6
   1400036be:	mov    ecx,ecx
   1400036c0:	call   QWORD PTR [rip+0x6ce2]        # 0x14000a3a8
   1400036c6:	mov    QWORD PTR [rbp-0x49],rax
   1400036ca:	test   rax,rax
   1400036cd:	je     0x1400036d2
   1400036cf:	mov    WORD PTR [rax],si
   1400036d2:	test   rax,rax
   1400036d5:	jne    0x1400036e9
   1400036d7:	xor    ecx,ecx
   1400036d9:	call   QWORD PTR [rip+0x6cb9]        # 0x14000a398
   1400036df:	mov    eax,0x8007000e
   1400036e4:	jmp    0x140003a04
   1400036e9:	mov    QWORD PTR [r12],rbx
   1400036ed:	mov    cl,BYTE PTR [rip+0xbb7e]        # 0x14000f271
   1400036f3:	mov    BYTE PTR [rbp-0x58],cl
   1400036f6:	mov    r14d,esi
   1400036f9:	mov    dil,sil
   1400036fc:	mov    BYTE PTR [rbp-0x59],sil
   140003700:	mov    r15b,sil
   140003703:	cmp    WORD PTR [rbx],si
   140003706:	je     0x1400039e6
   14000370c:	mov    ebx,0x27
   140003711:	cmp    cl,0x1
   140003714:	jne    0x14000384d
   14000371a:	test   r14d,r14d
   14000371d:	jne    0x1400037a8
   140003723:	lea    rdx,[rip+0x75f6]        # 0x14000ad20
   14000372a:	mov    rcx,QWORD PTR [r12]
   14000372e:	call   QWORD PTR [rip+0x6aa4]        # 0x14000a1d8
   140003734:	test   rax,rax
   140003737:	je     0x1400037a8
   140003739:	cmp    rax,QWORD PTR [r12]
   14000373d:	jne    0x1400037a8
   14000373f:	mov    rcx,QWORD PTR [r12]
   140003743:	call   QWORD PTR [rip+0x6c27]        # 0x14000a370
   140003749:	mov    QWORD PTR [r12],rax
   14000374d:	mov    rcx,rax
   140003750:	call   QWORD PTR [rip+0x6c1a]        # 0x14000a370
   140003756:	mov    QWORD PTR [r12],rax
   14000375a:	mov    rcx,rax
   14000375d:	call   QWORD PTR [rip+0x6c0d]        # 0x14000a370
   140003763:	mov    QWORD PTR [r12],rax
   140003767:	mov    rcx,rax
   14000376a:	call   QWORD PTR [rip+0x6c00]        # 0x14000a370
   140003770:	mov    QWORD PTR [r12],rax
   140003774:	mov    QWORD PTR [rbp-0x41],rsi
   140003778:	lea    rcx,[rip+0x77a1]        # 0x14000af20
   14000377f:	call   QWORD PTR [rip+0x68ab]        # 0x14000a030
   140003785:	mov    r8d,eax
   140003788:	lea    rdx,[rip+0x7791]        # 0x14000af20
   14000378f:	lea    rcx,[rbp-0x51]
   140003793:	call   0x140002d28
   140003798:	nop
   140003799:	test   eax,eax
   14000379b:	je     0x1400039df
   1400037a1:	mov    dil,0x1
   1400037a4:	mov    BYTE PTR [rbp-0x59],dil
   1400037a8:	mov    rcx,QWORD PTR [r12]
   1400037ac:	cmp    bx,WORD PTR [rcx]
   1400037af:	jne    0x1400037f6
   1400037b1:	test   r15b,r15b
   1400037b4:	jne    0x1400037be
   1400037b6:	mov    r15b,0x1
   1400037b9:	jmp    0x14000384d
   1400037be:	call   QWORD PTR [rip+0x6bac]        # 0x14000a370
   1400037c4:	cmp    bx,WORD PTR [rax]
   1400037c7:	je     0x1400037ce
   1400037c9:	mov    r15b,sil
   1400037cc:	jmp    0x1400037fb
   1400037ce:	mov    rcx,QWORD PTR [r12]
   1400037d2:	call   QWORD PTR [rip+0x6b98]        # 0x14000a370
   1400037d8:	mov    QWORD PTR [r12],rax
   1400037dc:	mov    r8d,0x1
   1400037e2:	mov    rdx,rax
   1400037e5:	lea    rcx,[rbp-0x51]
   1400037e9:	call   0x140002d28
   1400037ee:	test   eax,eax
   1400037f0:	je     0x1400039df
   1400037f6:	test   r15b,r15b
   1400037f9:	jne    0x14000384d
   1400037fb:	mov    rax,QWORD PTR [r12]
   1400037ff:	cmp    WORD PTR [rax],0x7b
   140003803:	jne    0x140003808
   140003805:	inc    r14d
   140003808:	cmp    WORD PTR [rax],0x7d
   14000380c:	jne    0x14000384d
   14000380e:	dec    r14d
   140003811:	jne    0x14000384d
   140003813:	cmp    dil,0x1
   140003817:	jne    0x14000384d
   140003819:	mov    QWORD PTR [rbp-0x41],rsi
   14000381d:	lea    rcx,[rip+0x76e4]        # 0x14000af08
   140003824:	call   QWORD PTR [rip+0x6806]        # 0x14000a030
   14000382a:	mov    r8d,eax
   14000382d:	lea    rdx,[rip+0x76d4]        # 0x14000af08
   140003834:	lea    rcx,[rbp-0x51]
   140003838:	call   0x140002d28
   14000383d:	nop
   14000383e:	test   eax,eax
   140003840:	je     0x1400039df
   140003846:	mov    dil,sil
   140003849:	mov    BYTE PTR [rbp-0x59],sil
   14000384d:	mov    rdx,QWORD PTR [r12]
   140003851:	cmp    WORD PTR [rdx],0x25
   140003855:	jne    0x140003870
   140003857:	mov    rcx,rdx
   14000385a:	call   QWORD PTR [rip+0x6b10]        # 0x14000a370
   140003860:	mov    r13,rax
   140003863:	mov    QWORD PTR [r12],rax
   140003867:	cmp    WORD PTR [rax],0x25
   14000386b:	jne    0x14000388c
   14000386d:	mov    rdx,rax
   140003870:	mov    r8d,0x1
   140003876:	lea    rcx,[rbp-0x51]
   14000387a:	call   0x140002d28
   14000387f:	test   eax,eax
   140003881:	je     0x1400039df
   140003887:	jmp    0x14000398f
   14000388c:	test   rax,rax
   14000388f:	je     0x1400039d2
   140003895:	movzx  eax,WORD PTR [rax]
   140003898:	test   ax,ax
   14000389b:	je     0x1400039d2
   1400038a1:	cmp    ax,0x25
   1400038a5:	je     0x1400038b5
   1400038a7:	mov    rcx,r13
   1400038aa:	call   QWORD PTR [rip+0x6ac0]        # 0x14000a370
   1400038b0:	mov    r13,rax
   1400038b3:	jmp    0x140003895
   1400038b5:	test   r13,r13
   1400038b8:	je     0x1400039d2
   1400038be:	mov    rax,r13
   1400038c1:	sub    rax,QWORD PTR [r12]
   1400038c5:	sar    rax,1
   1400038c8:	cmp    rax,0x1f
   1400038cc:	jg     0x1400039cb
   1400038d2:	movsxd r9,eax
   1400038d5:	mov    r8,QWORD PTR [r12]
   1400038d9:	mov    edx,0x20
   1400038de:	lea    rcx,[rbp-0x29]
   1400038e2:	call   QWORD PTR [rip+0x6910]        # 0x14000a1f8
   1400038e8:	test   eax,eax
   1400038ea:	je     0x140003910
   1400038ec:	cmp    eax,0xc
   1400038ef:	je     0x1400039c0
   1400038f5:	cmp    eax,0x16
   1400038f8:	je     0x1400039b5
   1400038fe:	cmp    eax,0x22
   140003901:	je     0x1400039b5
   140003907:	cmp    eax,0x50
   14000390a:	jne    0x1400039aa
   140003910:	lea    rax,[rbp-0x29]
   140003914:	mov    QWORD PTR [rbp-0x41],rax
   140003918:	mov    rbx,QWORD PTR [r12+0x8]
   14000391d:	lea    rdi,[rbx+0x20]
   140003921:	mov    rcx,rdi
   140003924:	call   QWORD PTR [rip+0x670e]        # 0x14000a038
   14000392a:	lea    rcx,[rbx+0x8]
   14000392e:	lea    rdx,[rbp-0x41]
   140003932:	call   0x140003434
   140003937:	mov    rbx,rax
   14000393a:	mov    rcx,rdi
   14000393d:	call   QWORD PTR [rip+0x66fd]        # 0x14000a040
   140003943:	test   rbx,rbx
   140003946:	je     0x1400039d2
   14000394c:	mov    QWORD PTR [rbp-0x41],rsi
   140003950:	mov    rcx,rbx
   140003953:	call   QWORD PTR [rip+0x66d7]        # 0x14000a030
   140003959:	mov    r8d,eax
   14000395c:	mov    rdx,rbx
   14000395f:	lea    rcx,[rbp-0x51]
   140003963:	call   0x140002d28
   140003968:	nop
   140003969:	test   eax,eax
   14000396b:	je     0x1400039df
   14000396d:	cmp    QWORD PTR [r12],r13
   140003971:	je     0x140003986
   140003973:	mov    rcx,QWORD PTR [r12]
   140003977:	call   QWORD PTR [rip+0x69f3]        # 0x14000a370
   14000397d:	mov    QWORD PTR [r12],rax
   140003981:	cmp    rax,r13
   140003984:	jne    0x140003973
   140003986:	mov    ebx,0x27
   14000398b:	mov    dil,BYTE PTR [rbp-0x59]
   14000398f:	mov    rcx,QWORD PTR [r12]
   140003993:	call   QWORD PTR [rip+0x69d7]        # 0x14000a370
   140003999:	mov    QWORD PTR [r12],rax
   14000399d:	cmp    WORD PTR [rax],si
   1400039a0:	je     0x1400039d9
   1400039a2:	mov    cl,BYTE PTR [rbp-0x58]
   1400039a5:	jmp    0x140003711
   1400039aa:	mov    ecx,0x80004005
   1400039af:	call   0x140002868
   1400039b4:	int3   
   1400039b5:	mov    ecx,0x80070057
   1400039ba:	call   0x140002868
   1400039bf:	int3   
   1400039c0:	mov    ecx,0x8007000e
   1400039c5:	call   0x140002868
   1400039ca:	int3   
   1400039cb:	mov    esi,0x80004005
   1400039d0:	jmp    0x1400039f1
   1400039d2:	mov    esi,0x80020009
   1400039d7:	jmp    0x1400039f1
   1400039d9:	mov    rax,QWORD PTR [rbp-0x49]
   1400039dd:	jmp    0x1400039e6
   1400039df:	mov    esi,0x8007000e
   1400039e4:	jmp    0x1400039f1
   1400039e6:	mov    QWORD PTR [rbp-0x49],rsi
   1400039ea:	mov    rcx,QWORD PTR [rbp-0x39]
   1400039ee:	mov    QWORD PTR [rcx],rax
   1400039f1:	mov    rcx,QWORD PTR [rbp-0x49]
   1400039f5:	call   QWORD PTR [rip+0x699d]        # 0x14000a398
   1400039fb:	mov    eax,esi
   1400039fd:	jmp    0x140003a04
   1400039ff:	mov    eax,0x80004003
   140003a04:	mov    rcx,QWORD PTR [rbp+0x17]
   140003a08:	xor    rcx,rsp
   140003a0b:	call   0x140008020
   140003a10:	mov    rbx,QWORD PTR [rsp+0xf8]
   140003a18:	add    rsp,0xa0
   140003a1f:	pop    r15
   140003a21:	pop    r14
   140003a23:	pop    r13
   140003a25:	pop    r12
   140003a27:	pop    rdi
   140003a28:	pop    rsi
   140003a29:	pop    rbp
   140003a2a:	ret    
   140003a2b:	int3   
   140003a2c:	mov    QWORD PTR [rsp+0x8],rbx
   140003a31:	mov    QWORD PTR [rsp+0x10],rsi
   140003a36:	push   rdi
   140003a37:	sub    rsp,0x20
   140003a3b:	mov    eax,DWORD PTR [rcx+0x10]
   140003a3e:	mov    rbx,rcx
   140003a41:	mov    rcx,QWORD PTR [rcx]
   140003a44:	inc    eax
   140003a46:	mov    rdi,r8
   140003a49:	mov    rsi,rdx
   140003a4c:	movsxd rdx,eax
   140003a4f:	mov    r8d,0x8
   140003a55:	call   QWORD PTR [rip+0x67a5]        # 0x14000a200
   140003a5b:	test   rax,rax
   140003a5e:	jne    0x140003a64
   140003a60:	xor    eax,eax
   140003a62:	jmp    0x140003ab9
   140003a64:	mov    rcx,QWORD PTR [rbx+0x8]
   140003a68:	mov    QWORD PTR [rbx],rax
   140003a6b:	mov    eax,DWORD PTR [rbx+0x10]
   140003a6e:	inc    eax
   140003a70:	mov    r8d,0x8
   140003a76:	movsxd rdx,eax
   140003a79:	call   QWORD PTR [rip+0x6781]        # 0x14000a200
   140003a7f:	test   rax,rax
   140003a82:	je     0x140003a60
   140003a84:	movsxd r8,DWORD PTR [rbx+0x10]
   140003a88:	mov    QWORD PTR [rbx+0x8],rax
   140003a8c:	mov    rax,QWORD PTR [rbx]
   140003a8f:	lea    rdx,[rax+r8*8]
   140003a93:	test   rdx,rdx
   140003a96:	je     0x140003a9e
   140003a98:	mov    rcx,QWORD PTR [rsi]
   140003a9b:	mov    QWORD PTR [rdx],rcx
   140003a9e:	mov    rcx,QWORD PTR [rbx+0x8]
   140003aa2:	lea    rdx,[rcx+r8*8]
   140003aa6:	test   rdx,rdx
   140003aa9:	je     0x140003ab1
   140003aab:	mov    rcx,QWORD PTR [rdi]
   140003aae:	mov    QWORD PTR [rdx],rcx
   140003ab1:	inc    DWORD PTR [rbx+0x10]
   140003ab4:	mov    eax,0x1
   140003ab9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003abe:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ac3:	add    rsp,0x20
   140003ac7:	pop    rdi
   140003ac8:	ret    
   140003ac9:	int3   
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	mov    QWORD PTR [rsp+0x18],r8
   140003ad1:	mov    QWORD PTR [rsp+0x10],rdx
   140003ad6:	mov    QWORD PTR [rsp+0x8],rcx
   140003adb:	push   rbx
   140003adc:	push   rsi
   140003add:	push   rdi
   140003ade:	push   r12
   140003ae0:	push   r13
   140003ae2:	push   r14
   140003ae4:	push   r15
   140003ae6:	sub    rsp,0x60
   140003aea:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140003af3:	mov    r15,r8
   140003af6:	mov    r13,rdx
   140003af9:	xor    esi,esi
   140003afb:	test   rdx,rdx
   140003afe:	je     0x140003cdb
   140003b04:	test   r8,r8
   140003b07:	je     0x140003cdb
   140003b0d:	mov    r12d,esi
   140003b10:	mov    rcx,rdx
   140003b13:	call   QWORD PTR [rip+0x6517]        # 0x14000a030
   140003b19:	inc    eax
   140003b1b:	movsxd r14,eax
   140003b1e:	add    r14,r14
   140003b21:	mov    QWORD PTR [rsp+0x38],r14
   140003b26:	mov    QWORD PTR [rsp+0x20],rsi
   140003b2b:	lea    eax,[rsi+0x2]
   140003b2e:	mul    r14
   140003b31:	lea    rbx,[rsi-0x1]
   140003b35:	cmovo  rax,rbx
   140003b39:	mov    rcx,rax
   140003b3c:	call   0x14000813c
   140003b41:	mov    QWORD PTR [rsp+0x30],rax
   140003b46:	mov    QWORD PTR [rsp+0x20],rax
   140003b4b:	jmp    0x140003b75
   140003b4d:	xor    esi,esi
   140003b4f:	or     rbx,0xffffffffffffffff
   140003b53:	mov    r15,QWORD PTR [rsp+0xb0]
   140003b5b:	mov    r13,QWORD PTR [rsp+0xa8]
   140003b63:	mov    r12d,esi
   140003b66:	mov    r14,QWORD PTR [rsp+0x38]
   140003b6b:	mov    rax,QWORD PTR [rsp+0x20]
   140003b70:	mov    QWORD PTR [rsp+0x30],rax
   140003b75:	mov    rdi,rax
   140003b78:	mov    QWORD PTR [rsp+0x48],rax
   140003b7d:	mov    rcx,r15
   140003b80:	call   QWORD PTR [rip+0x64aa]        # 0x14000a030
   140003b86:	inc    eax
   140003b88:	movsxd rcx,eax
   140003b8b:	add    rcx,rcx
   140003b8e:	mov    QWORD PTR [rsp+0x40],rcx
   140003b93:	mov    QWORD PTR [rsp+0x28],rsi
   140003b98:	mov    eax,0x2
   140003b9d:	mul    rcx
   140003ba0:	cmovo  rax,rbx
   140003ba4:	mov    rcx,rax
   140003ba7:	call   0x14000813c
   140003bac:	mov    rbx,rax
   140003baf:	mov    QWORD PTR [rsp+0x28],rax
   140003bb4:	mov    rcx,QWORD PTR [rsp+0x30]
   140003bb9:	jmp    0x140003be4
   140003bbb:	xor    esi,esi
   140003bbd:	mov    r15,QWORD PTR [rsp+0xb0]
   140003bc5:	mov    r13,QWORD PTR [rsp+0xa8]
   140003bcd:	mov    r12d,esi
   140003bd0:	mov    r14,QWORD PTR [rsp+0x38]
   140003bd5:	mov    rcx,QWORD PTR [rsp+0x20]
   140003bda:	mov    rdi,QWORD PTR [rsp+0x48]
   140003bdf:	mov    rbx,QWORD PTR [rsp+0x28]
   140003be4:	mov    QWORD PTR [rsp+0xa8],rbx
   140003bec:	test   rcx,rcx
   140003bef:	je     0x140003cb9
   140003bf5:	test   rbx,rbx
   140003bf8:	je     0x140003cb9
   140003bfe:	mov    r9,r14
   140003c01:	mov    r8,r13
   140003c04:	mov    rdx,r14
   140003c07:	call   QWORD PTR [rip+0x65c3]        # 0x14000a1d0
   140003c0d:	test   eax,eax
   140003c0f:	je     0x140003c46
   140003c11:	cmp    eax,0xc
   140003c14:	je     0x140003c3b
   140003c16:	cmp    eax,0x16
   140003c19:	je     0x140003c30
   140003c1b:	cmp    eax,0x22
   140003c1e:	je     0x140003c30
   140003c20:	cmp    eax,0x50
   140003c23:	je     0x140003c46
   140003c25:	mov    ecx,0x80004005
   140003c2a:	call   0x140002868
   140003c2f:	int3   
   140003c30:	mov    ecx,0x80070057
   140003c35:	call   0x140002868
   140003c3a:	int3   
   140003c3b:	mov    ecx,0x8007000e
   140003c40:	call   0x140002868
   140003c45:	int3   
   140003c46:	mov    rax,QWORD PTR [rsp+0x40]
   140003c4b:	mov    r9,rax
   140003c4e:	mov    r8,r15
   140003c51:	mov    rdx,rax
   140003c54:	mov    rcx,rbx
   140003c57:	call   QWORD PTR [rip+0x6573]        # 0x14000a1d0
   140003c5d:	test   eax,eax
   140003c5f:	je     0x140003c96
   140003c61:	cmp    eax,0xc
   140003c64:	je     0x140003c8b
   140003c66:	cmp    eax,0x16
   140003c69:	je     0x140003c80
   140003c6b:	cmp    eax,0x22
   140003c6e:	je     0x140003c80
   140003c70:	cmp    eax,0x50
   140003c73:	je     0x140003c96
   140003c75:	mov    ecx,0x80004005
   140003c7a:	call   0x140002868
   140003c7f:	int3   
   140003c80:	mov    ecx,0x80070057
   140003c85:	call   0x140002868
   140003c8a:	int3   
   140003c8b:	mov    ecx,0x8007000e
   140003c90:	call   0x140002868
   140003c95:	int3   
   140003c96:	lea    r8,[rsp+0x28]
   140003c9b:	lea    rdx,[rsp+0x20]
   140003ca0:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003ca8:	call   0x140003a2c
   140003cad:	test   eax,eax
   140003caf:	je     0x140003cb9
   140003cb1:	mov    rdi,rsi
   140003cb4:	mov    rbx,rsi
   140003cb7:	jmp    0x140003cbf
   140003cb9:	mov    r12d,0x8007000e
   140003cbf:	test   r12d,r12d
   140003cc2:	setns  sil
   140003cc6:	mov    rcx,rbx
   140003cc9:	call   0x140007eca
   140003cce:	nop
   140003ccf:	mov    rcx,rdi
   140003cd2:	call   0x140007eca
   140003cd7:	mov    eax,esi
   140003cd9:	jmp    0x140003cdd
   140003cdb:	xor    eax,eax
   140003cdd:	add    rsp,0x60
   140003ce1:	pop    r15
   140003ce3:	pop    r14
   140003ce5:	pop    r13
   140003ce7:	pop    r12
   140003ce9:	pop    rdi
   140003cea:	pop    rsi
   140003ceb:	pop    rbx
   140003cec:	ret    
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	rex push rdi
   140003cf2:	sub    rsp,0x30
   140003cf6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003cff:	mov    QWORD PTR [rsp+0x40],rbx
   140003d04:	mov    QWORD PTR [rsp+0x50],rbp
   140003d09:	mov    QWORD PTR [rsp+0x58],rsi
   140003d0e:	mov    rbx,r8
   140003d11:	mov    rsi,rdx
   140003d14:	mov    rbp,rcx
   140003d17:	test   rdx,rdx
   140003d1a:	je     0x140003d59
   140003d1c:	test   rbx,rbx
   140003d1f:	je     0x140003d59
   140003d21:	add    rcx,0x20
   140003d25:	call   QWORD PTR [rip+0x630d]        # 0x14000a038
   140003d2b:	and    QWORD PTR [rsp+0x48],0x0
   140003d31:	lea    rcx,[rbp+0x8]
   140003d35:	mov    r8,rbx
   140003d38:	mov    rdx,rsi
   140003d3b:	call   0x140003acc
   140003d40:	mov    ebx,eax
   140003d42:	lea    rcx,[rbp+0x20]
   140003d46:	call   QWORD PTR [rip+0x62f4]        # 0x14000a040
   140003d4c:	neg    ebx
   140003d4e:	sbb    eax,eax
   140003d50:	not    eax
   140003d52:	and    eax,0x8007000e
   140003d57:	jmp    0x140003d5e
   140003d59:	mov    eax,0x80070057
   140003d5e:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d63:	mov    rbp,QWORD PTR [rsp+0x50]
   140003d68:	mov    rsi,QWORD PTR [rsp+0x58]
   140003d6d:	add    rsp,0x30
   140003d71:	pop    rdi
   140003d72:	ret    
   140003d73:	int3   
   140003d74:	rex push rbx
   140003d76:	push   rsi
   140003d77:	push   rdi
   140003d78:	push   r12
   140003d7a:	push   r13
   140003d7c:	push   r14
   140003d7e:	push   r15
   140003d80:	mov    eax,0x2190
   140003d85:	call   0x140008050
   140003d8a:	sub    rsp,rax
   140003d8d:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140003d96:	mov    rax,QWORD PTR [rip+0xb3fb]        # 0x14000f198
   140003d9d:	xor    rax,rsp
   140003da0:	mov    QWORD PTR [rsp+0x2180],rax
   140003da8:	mov    r15,r8
   140003dab:	mov    r14,rdx
   140003dae:	mov    r13,rcx
   140003db1:	mov    QWORD PTR [rsp+0x50],rcx
   140003db6:	mov    QWORD PTR [rsp+0x48],rdx
   140003dbb:	mov    QWORD PTR [rsp+0x40],r8
   140003dc0:	mov    QWORD PTR [rsp+0x58],r9
   140003dc5:	xor    ebx,ebx
   140003dc7:	mov    WORD PTR [rsp+0x30],bx
   140003dcc:	lea    rdx,[rsp+0x180]
   140003dd4:	call   0x140002f98
   140003dd9:	test   eax,eax
   140003ddb:	js     0x140004191
   140003de1:	lea    rdx,[rsp+0x30]
   140003de6:	lea    rcx,[rsp+0x180]
   140003dee:	call   0x140002e40
   140003df3:	test   eax,eax
   140003df5:	jne    0x140003e01
   140003df7:	mov    eax,0x80020009
   140003dfc:	jmp    0x140004191
   140003e01:	mov    rcx,QWORD PTR [r13+0x0]
   140003e05:	movzx  eax,WORD PTR [rcx]
   140003e08:	cmp    eax,0x9
   140003e0b:	jl     0x140003e28
   140003e0d:	cmp    eax,0xa
   140003e10:	jle    0x140003e1c
   140003e12:	cmp    eax,0xd
   140003e15:	je     0x140003e1c
   140003e17:	cmp    eax,0x20
   140003e1a:	jne    0x140003e28
   140003e1c:	call   QWORD PTR [rip+0x654e]        # 0x14000a370
   140003e22:	mov    QWORD PTR [r13+0x0],rax
   140003e26:	jmp    0x140003e01
   140003e28:	lea    rdx,[rsp+0x180]
   140003e30:	mov    rcx,r13
   140003e33:	call   0x140002f98
   140003e38:	test   eax,eax
   140003e3a:	js     0x140004191
   140003e40:	movzx  eax,WORD PTR [rsp+0x30]
   140003e45:	cmp    eax,0x8
   140003e48:	je     0x140004136
   140003e4e:	cmp    eax,0x11
   140003e51:	je     0x140003fb6
   140003e57:	cmp    eax,0x13
   140003e5a:	je     0x140003f7c
   140003e60:	cmp    eax,0x4008
   140003e65:	jne    0x14000417d
   140003e6b:	lea    rcx,[rsp+0x180]
   140003e73:	call   QWORD PTR [rip+0x61b7]        # 0x14000a030
   140003e79:	add    eax,0x2
   140003e7c:	mov    QWORD PTR [rsp+0x70],rbx
   140003e81:	movsxd rcx,eax
   140003e84:	test   eax,eax
   140003e86:	je     0x140003ebf
   140003e88:	xor    edx,edx
   140003e8a:	or     rax,0xffffffffffffffff
   140003e8e:	div    rcx
   140003e91:	cmp    rax,0x2
   140003e95:	jb     0x140003eb5
   140003e97:	lea    rdx,[rcx+rcx*1]
   140003e9b:	cmp    rdx,0x100
   140003ea2:	jbe    0x140003ebf
   140003ea4:	lea    rcx,[rsp+0x70]
   140003ea9:	call   0x1400031f4
   140003eae:	mov    rdi,QWORD PTR [rsp+0x70]
   140003eb3:	jmp    0x140003ec9
   140003eb5:	mov    ecx,0x80070216
   140003eba:	call   0x140002868
   140003ebf:	lea    rdi,[rsp+0x78]
   140003ec4:	mov    QWORD PTR [rsp+0x70],rdi
   140003ec9:	jmp    0x140003ee1
   140003ecb:	xor    ebx,ebx
   140003ecd:	mov    rdi,QWORD PTR [rsp+0x70]
   140003ed2:	mov    r13,QWORD PTR [rsp+0x50]
   140003ed7:	mov    r14,QWORD PTR [rsp+0x48]
   140003edc:	mov    r15,QWORD PTR [rsp+0x40]
   140003ee1:	test   rdi,rdi
   140003ee4:	je     0x140003f5a
   140003ee6:	lea    rsi,[rsp+0x180]
   140003eee:	cmp    WORD PTR [rsp+0x180],bx
   140003ef6:	je     0x140003f3b
   140003ef8:	mov    r12d,0x30
   140003efe:	mov    rcx,rsi
   140003f01:	call   QWORD PTR [rip+0x6469]        # 0x14000a370
   140003f07:	movzx  ecx,WORD PTR [rsi]
   140003f0a:	cmp    cx,0x5c
   140003f0e:	jne    0x140003f2b
   140003f10:	cmp    WORD PTR [rax],r12w
   140003f14:	jne    0x140003f2b
   140003f16:	mov    WORD PTR [rdi],bx
   140003f19:	add    rdi,0x2
   140003f1d:	mov    rcx,rax
   140003f20:	call   QWORD PTR [rip+0x644a]        # 0x14000a370
   140003f26:	mov    rsi,rax
   140003f29:	jmp    0x140003f36
   140003f2b:	mov    WORD PTR [rdi],cx
   140003f2e:	add    rdi,0x2
   140003f32:	add    rsi,0x2
   140003f36:	cmp    WORD PTR [rsi],bx
   140003f39:	jne    0x140003efe
   140003f3b:	mov    DWORD PTR [rdi],0x0
   140003f41:	mov    r8,QWORD PTR [rsp+0x70]
   140003f46:	mov    rdx,r15
   140003f49:	mov    rcx,r14
   140003f4c:	call   0x140002c9c
   140003f51:	mov    esi,eax
   140003f53:	mov    rdi,QWORD PTR [rsp+0x70]
   140003f58:	jmp    0x140003f5f
   140003f5a:	mov    esi,0xe
   140003f5f:	lea    rax,[rsp+0x78]
   140003f64:	cmp    rdi,rax
   140003f67:	je     0x140004170
   140003f6d:	lea    rcx,[rsp+0x70]
   140003f72:	call   0x1400031e8
   140003f77:	jmp    0x140004170
   140003f7c:	lea    r9,[rsp+0x30]
   140003f81:	xor    r8d,r8d
   140003f84:	xor    edx,edx
   140003f86:	lea    rcx,[rsp+0x180]
   140003f8e:	call   QWORD PTR [rip+0x63ac]        # 0x14000a340
   140003f94:	mov    r11d,DWORD PTR [rsp+0x30]
   140003f99:	mov    DWORD PTR [rsp+0x38],r11d
   140003f9e:	mov    DWORD PTR [rsp+0x28],0x4
   140003fa6:	lea    rax,[rsp+0x38]
   140003fab:	mov    r9d,0x4
   140003fb1:	jmp    0x14000415a
   140003fb6:	lea    rcx,[rsp+0x180]
   140003fbe:	call   QWORD PTR [rip+0x606c]        # 0x14000a030
   140003fc4:	mov    edi,eax
   140003fc6:	mov    DWORD PTR [rsp+0x38],eax
   140003fca:	test   al,0x1
   140003fcc:	je     0x140003fd8
   140003fce:	mov    eax,0x80004005
   140003fd3:	jmp    0x140004191
   140003fd8:	cdq    
   140003fd9:	sub    eax,edx
   140003fdb:	sar    eax,1
   140003fdd:	movsxd rsi,eax
   140003fe0:	mov    DWORD PTR [rsp+0x30],esi
   140003fe4:	mov    QWORD PTR [rsp+0x70],rbx
   140003fe9:	mov    rcx,rsi
   140003fec:	test   eax,eax
   140003fee:	je     0x140004026
   140003ff0:	xor    edx,edx
   140003ff2:	or     rax,0xffffffffffffffff
   140003ff6:	div    rcx
   140003ff9:	cmp    rax,0x1
   140003ffd:	jb     0x14000401c
   140003fff:	cmp    rcx,0x100
   140004006:	jbe    0x140004026
   140004008:	mov    rdx,rcx
   14000400b:	lea    rcx,[rsp+0x70]
   140004010:	call   0x1400031f4
   140004015:	mov    rcx,QWORD PTR [rsp+0x70]
   14000401a:	jmp    0x140004030
   14000401c:	mov    ecx,0x80070216
   140004021:	call   0x140002868
   140004026:	lea    rcx,[rsp+0x78]
   14000402b:	mov    QWORD PTR [rsp+0x70],rcx
   140004030:	jmp    0x140004050
   140004032:	xor    ebx,ebx
   140004034:	mov    edi,DWORD PTR [rsp+0x38]
   140004038:	mov    esi,DWORD PTR [rsp+0x30]
   14000403c:	mov    rcx,QWORD PTR [rsp+0x70]
   140004041:	mov    r13,QWORD PTR [rsp+0x50]
   140004046:	mov    r14,QWORD PTR [rsp+0x48]
   14000404b:	mov    r15,QWORD PTR [rsp+0x40]
   140004050:	test   rcx,rcx
   140004053:	jne    0x140004072
   140004055:	lea    rax,[rsp+0x78]
   14000405a:	test   rax,rax
   14000405d:	je     0x140003fce
   140004063:	lea    rcx,[rsp+0x70]
   140004068:	call   0x1400031e8
   14000406d:	jmp    0x140003fce
   140004072:	movsxd r8,esi
   140004075:	xor    edx,edx
   140004077:	call   0x140007ebe
   14000407c:	mov    r11d,ebx
   14000407f:	mov    r8,rbx
   140004082:	movsxd r10,edi
   140004085:	test   edi,edi
   140004087:	jle    0x1400040f9
   140004089:	mov    r12d,0x30
   14000408f:	mov    eax,r11d
   140004092:	cdq    
   140004093:	sub    eax,edx
   140004095:	sar    eax,1
   140004097:	movsxd r9,eax
   14000409a:	add    r9,QWORD PTR [rsp+0x70]
   14000409f:	movzx  edx,WORD PTR [rsp+r8*2+0x180]
   1400040a8:	mov    eax,edx
   1400040aa:	cmp    edx,r12d
   1400040ad:	jl     0x1400040d5
   1400040af:	cmp    eax,0x39
   1400040b2:	jle    0x1400040d0
   1400040b4:	cmp    eax,0x40
   1400040b7:	jle    0x1400040d5
   1400040b9:	cmp    eax,0x46
   1400040bc:	jle    0x1400040cb
   1400040be:	add    eax,0xffffff9f
   1400040c1:	cmp    eax,0x5
   1400040c4:	ja     0x1400040d5
   1400040c6:	sub    dl,0x57
   1400040c9:	jmp    0x1400040d7
   1400040cb:	sub    dl,0x37
   1400040ce:	jmp    0x1400040d7
   1400040d0:	sub    dl,r12b
   1400040d3:	jmp    0x1400040d7
   1400040d5:	mov    dl,bl
   1400040d7:	mov    ecx,r11d
   1400040da:	and    ecx,0x1
   1400040dd:	shl    ecx,0x2
   1400040e0:	mov    eax,0x4
   1400040e5:	sub    eax,ecx
   1400040e7:	mov    cl,al
   1400040e9:	shl    dl,cl
   1400040eb:	or     BYTE PTR [r9],dl
   1400040ee:	inc    r11d
   1400040f1:	inc    r8
   1400040f4:	cmp    r8,r10
   1400040f7:	jl     0x14000408f
   1400040f9:	mov    DWORD PTR [rsp+0x28],esi
   1400040fd:	mov    rax,QWORD PTR [rsp+0x70]
   140004102:	mov    QWORD PTR [rsp+0x20],rax
   140004107:	mov    r9d,0x3
   14000410d:	xor    r8d,r8d
   140004110:	mov    rdx,r15
   140004113:	mov    rcx,QWORD PTR [r14]
   140004116:	call   QWORD PTR [rip+0xb0c4]        # 0x14000f1e0
   14000411c:	mov    esi,eax
   14000411e:	lea    rax,[rsp+0x78]
   140004123:	cmp    QWORD PTR [rsp+0x70],rax
   140004128:	je     0x140004170
   14000412a:	lea    rcx,[rsp+0x70]
   14000412f:	call   0x1400031e8
   140004134:	jmp    0x140004170
   140004136:	lea    rcx,[rsp+0x180]
   14000413e:	call   QWORD PTR [rip+0x5eec]        # 0x14000a030
   140004144:	lea    eax,[rax+rax*1+0x2]
   140004148:	mov    DWORD PTR [rsp+0x28],eax
   14000414c:	lea    rax,[rsp+0x180]
   140004154:	mov    r9d,0x1
   14000415a:	mov    QWORD PTR [rsp+0x20],rax
   14000415f:	xor    r8d,r8d
   140004162:	mov    rdx,r15
   140004165:	mov    rcx,QWORD PTR [r14]
   140004168:	call   QWORD PTR [rip+0xb072]        # 0x14000f1e0
   14000416e:	mov    esi,eax
   140004170:	test   esi,esi
   140004172:	je     0x14000417d
   140004174:	mov    ecx,esi
   140004176:	call   0x1400028a8
   14000417b:	jmp    0x140004191
   14000417d:	mov    rdx,QWORD PTR [rsp+0x58]
   140004182:	mov    rcx,r13
   140004185:	call   0x140002f98
   14000418a:	test   eax,eax
   14000418c:	cmovs  ebx,eax
   14000418f:	mov    eax,ebx
   140004191:	mov    rcx,QWORD PTR [rsp+0x2180]
   140004199:	xor    rcx,rsp
   14000419c:	call   0x140008020
   1400041a1:	add    rsp,0x2190
   1400041a8:	pop    r15
   1400041aa:	pop    r14
   1400041ac:	pop    r13
   1400041ae:	pop    r12
   1400041b0:	pop    rdi
   1400041b1:	pop    rsi
   1400041b2:	pop    rbx
   1400041b3:	ret    
   1400041b4:	rex push rbp
   1400041b6:	push   rbx
   1400041b7:	push   rsi
   1400041b8:	push   rdi
   1400041b9:	lea    rbp,[rsp-0x21e8]
   1400041c1:	mov    eax,0x22e8
   1400041c6:	call   0x140008050
   1400041cb:	sub    rsp,rax
   1400041ce:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   1400041d6:	mov    rax,QWORD PTR [rip+0xafbb]        # 0x14000f198
   1400041dd:	xor    rax,rsp
   1400041e0:	mov    QWORD PTR [rbp+0x21d0],rax
   1400041e7:	mov    DWORD PTR [rsp+0x74],r9d
   1400041ec:	mov    QWORD PTR [rbp-0x70],r8
   1400041f0:	mov    rsi,rdx
   1400041f3:	mov    rax,rcx
   1400041f6:	mov    QWORD PTR [rsp+0x68],rcx
   1400041fb:	xor    ecx,ecx
   1400041fd:	mov    edi,ecx
   1400041ff:	mov    QWORD PTR [rbp-0x68],rcx
   140004203:	mov    DWORD PTR [rbp-0x60],ecx
   140004206:	mov    QWORD PTR [rbp-0x58],rcx
   14000420a:	mov    ecx,DWORD PTR [rbp+0x2230]
   140004210:	mov    DWORD PTR [rbp-0x50],ecx
   140004213:	mov    rcx,rax
   140004216:	call   0x140002f98
   14000421b:	mov    ebx,eax
   14000421d:	test   eax,eax
   14000421f:	jns    0x140004226
   140004221:	jmp    0x140004914
   140004226:	cmp    WORD PTR [rsi],0x7d
   14000422a:	je     0x140004904
   140004230:	mov    eax,0x1
   140004235:	mov    DWORD PTR [rsp+0x70],eax
   140004239:	lea    rdx,[rip+0x6270]        # 0x14000a4b0
   140004240:	mov    rcx,rsi
   140004243:	call   QWORD PTR [rip+0x5dff]        # 0x14000a048
   140004249:	xor    ecx,ecx
   14000424b:	mov    ebx,ecx
   14000424d:	test   eax,eax
   14000424f:	sete   bl
   140004252:	mov    DWORD PTR [rsp+0x60],ebx
   140004256:	lea    rdx,[rip+0x6213]        # 0x14000a470
   14000425d:	mov    rcx,rsi
   140004260:	call   QWORD PTR [rip+0x5de2]        # 0x14000a048
   140004266:	test   eax,eax
   140004268:	je     0x140004272
   14000426a:	test   ebx,ebx
   14000426c:	je     0x14000434e
   140004272:	mov    rdx,rsi
   140004275:	mov    rcx,QWORD PTR [rsp+0x68]
   14000427a:	call   0x140002f98
   14000427f:	mov    ebx,eax
   140004281:	xor    edx,edx
   140004283:	test   eax,eax
   140004285:	js     0x140004904
   14000428b:	cmp    DWORD PTR [rsp+0x74],edx
   14000428f:	je     0x14000434e
   140004295:	mov    QWORD PTR [rsp+0x78],rdx
   14000429a:	mov    DWORD PTR [rbp-0x80],edx
   14000429d:	mov    QWORD PTR [rbp-0x78],rdx
   1400042a1:	mov    rcx,rsi
   1400042a4:	movzx  eax,WORD PTR [rsi]
   1400042a7:	jmp    0x1400042bb
   1400042a9:	cmp    ax,0x5c
   1400042ad:	je     0x1400042c2
   1400042af:	call   QWORD PTR [rip+0x60bb]        # 0x14000a370
   1400042b5:	mov    rcx,rax
   1400042b8:	movzx  eax,WORD PTR [rax]
   1400042bb:	test   ax,ax
   1400042be:	jne    0x1400042a9
   1400042c0:	jmp    0x1400042cb
   1400042c2:	test   rcx,rcx
   1400042c5:	jne    0x14000487a
   1400042cb:	lea    rbx,[rip+0x67ce]        # 0x14000aaa0
   1400042d2:	mov    rdx,QWORD PTR [rbx]
   1400042d5:	mov    rcx,rsi
   1400042d8:	call   QWORD PTR [rip+0x5d6a]        # 0x14000a048
   1400042de:	test   eax,eax
   1400042e0:	je     0x140004313
   1400042e2:	add    rbx,0x8
   1400042e6:	lea    rax,[rip+0x6813]        # 0x14000ab00
   1400042ed:	cmp    rbx,rax
   1400042f0:	jl     0x1400042d2
   1400042f2:	mov    rax,QWORD PTR [rbp-0x70]
   1400042f6:	mov    QWORD PTR [rsp+0x78],rax
   1400042fb:	xor    ebx,ebx
   1400042fd:	mov    DWORD PTR [rbp-0x80],ebx
   140004300:	mov    QWORD PTR [rbp-0x78],rbx
   140004304:	mov    rdx,rsi
   140004307:	lea    rcx,[rsp+0x78]
   14000430c:	call   0x140003220
   140004311:	jmp    0x140004315
   140004313:	xor    ebx,ebx
   140004315:	cmp    DWORD PTR [rsp+0x60],ebx
   140004319:	je     0x140004350
   14000431b:	mov    rdx,rsi
   14000431e:	mov    rcx,QWORD PTR [rsp+0x68]
   140004323:	call   0x140002f98
   140004328:	mov    ebx,eax
   14000432a:	test   eax,eax
   14000432c:	js     0x140004904
   140004332:	mov    rdx,rsi
   140004335:	mov    rcx,QWORD PTR [rsp+0x68]
   14000433a:	call   0x140003118
   14000433f:	mov    ebx,eax
   140004341:	test   eax,eax
   140004343:	js     0x140004904
   140004349:	jmp    0x140004576
   14000434e:	xor    ebx,ebx
   140004350:	lea    rdx,[rip+0x6139]        # 0x14000a490
   140004357:	mov    rcx,rsi
   14000435a:	call   QWORD PTR [rip+0x5ce8]        # 0x14000a048
   140004360:	test   eax,eax
   140004362:	jne    0x140004381
   140004364:	mov    DWORD PTR [rsp+0x70],ebx
   140004368:	mov    rdx,rsi
   14000436b:	mov    rcx,QWORD PTR [rsp+0x68]
   140004370:	call   0x140002f98
   140004375:	mov    ebx,eax
   140004377:	test   eax,eax
   140004379:	js     0x140004904
   14000437f:	xor    ebx,ebx
   140004381:	lea    rdx,[rip+0x60d8]        # 0x14000a460
   140004388:	mov    rcx,rsi
   14000438b:	call   QWORD PTR [rip+0x5cb7]        # 0x14000a048
   140004391:	test   eax,eax
   140004393:	jne    0x14000449a
   140004399:	lea    rdx,[rbp+0x1d0]
   1400043a0:	mov    rcx,QWORD PTR [rsp+0x68]
   1400043a5:	call   0x140002f98
   1400043aa:	mov    ebx,eax
   1400043ac:	test   eax,eax
   1400043ae:	js     0x140004904
   1400043b4:	mov    rdx,rsi
   1400043b7:	mov    rcx,QWORD PTR [rsp+0x68]
   1400043bc:	call   0x140002f98
   1400043c1:	mov    ebx,eax
   1400043c3:	xor    edx,edx
   1400043c5:	test   eax,eax
   1400043c7:	js     0x140004904
   1400043cd:	cmp    WORD PTR [rsi],0x3d
   1400043d1:	jne    0x1400048af
   1400043d7:	cmp    DWORD PTR [rsp+0x74],edx
   1400043db:	je     0x140004415
   1400043dd:	mov    rax,QWORD PTR [rbp-0x70]
   1400043e1:	mov    QWORD PTR [rsp+0x78],rax
   1400043e6:	mov    DWORD PTR [rbp-0x80],edx
   1400043e9:	mov    QWORD PTR [rbp-0x78],rdx
   1400043ed:	mov    r9,rsi
   1400043f0:	lea    r8,[rbp+0x1d0]
   1400043f7:	lea    rdx,[rsp+0x78]
   1400043fc:	mov    rcx,QWORD PTR [rsp+0x68]
   140004401:	call   0x140003d74
   140004406:	mov    ebx,eax
   140004408:	test   eax,eax
   14000440a:	js     0x140004892
   140004410:	jmp    0x140004576
   140004415:	cmp    DWORD PTR [rbp+0x2230],edx
   14000441b:	jne    0x14000447e
   14000441d:	cmp    DWORD PTR [rsp+0x70],edx
   140004421:	je     0x14000447e
   140004423:	mov    QWORD PTR [rsp+0x78],rdx
   140004428:	mov    DWORD PTR [rbp-0x80],edx
   14000442b:	mov    QWORD PTR [rbp-0x78],rdx
   14000442f:	mov    r9d,0x20006
   140004435:	xor    r8d,r8d
   140004438:	mov    rdx,QWORD PTR [rbp-0x70]
   14000443c:	lea    rcx,[rsp+0x78]
   140004441:	call   0x1400010b8
   140004446:	test   eax,eax
   140004448:	jne    0x140004894
   14000444e:	lea    rdx,[rbp+0x1d0]
   140004455:	mov    rbx,QWORD PTR [rsp+0x78]
   14000445a:	mov    rcx,rbx
   14000445d:	call   QWORD PTR [rip+0xad9d]        # 0x14000f200
   140004463:	test   eax,eax
   140004465:	je     0x140004470
   140004467:	cmp    eax,0x2
   14000446a:	jne    0x140004894
   140004470:	test   rbx,rbx
   140004473:	je     0x14000447e
   140004475:	mov    rcx,rbx
   140004478:	call   QWORD PTR [rip+0xad5a]        # 0x14000f1d8
   14000447e:	mov    rdx,rsi
   140004481:	mov    rcx,QWORD PTR [rsp+0x68]
   140004486:	call   0x140003118
   14000448b:	mov    ebx,eax
   14000448d:	test   eax,eax
   14000448f:	js     0x140004904
   140004495:	jmp    0x140004226
   14000449a:	mov    rcx,rsi
   14000449d:	movzx  eax,WORD PTR [rsi]
   1400044a0:	jmp    0x1400044b4
   1400044a2:	cmp    ax,0x5c
   1400044a6:	je     0x1400044bb
   1400044a8:	call   QWORD PTR [rip+0x5ec2]        # 0x14000a370
   1400044ae:	mov    rcx,rax
   1400044b1:	movzx  eax,WORD PTR [rax]
   1400044b4:	test   ax,ax
   1400044b7:	jne    0x1400044a2
   1400044b9:	jmp    0x1400044c4
   1400044bb:	test   rcx,rcx
   1400044be:	jne    0x1400048b1
   1400044c4:	cmp    DWORD PTR [rsp+0x74],ebx
   1400044c8:	je     0x1400045cd
   1400044ce:	mov    r9d,0x2001f
   1400044d4:	mov    r8,rsi
   1400044d7:	mov    rbx,QWORD PTR [rbp-0x70]
   1400044db:	mov    rdx,rbx
   1400044de:	lea    rcx,[rbp-0x68]
   1400044e2:	call   0x1400010b8
   1400044e7:	xor    edi,edi
   1400044e9:	test   eax,eax
   1400044eb:	je     0x140004536
   1400044ed:	mov    r9d,0x20019
   1400044f3:	mov    r8,rsi
   1400044f6:	mov    rdx,rbx
   1400044f9:	lea    rcx,[rbp-0x68]
   1400044fd:	call   0x1400010b8
   140004502:	test   eax,eax
   140004504:	je     0x140004536
   140004506:	mov    QWORD PTR [rsp+0x38],rdi
   14000450b:	mov    QWORD PTR [rsp+0x30],rdi
   140004510:	mov    DWORD PTR [rsp+0x28],0x2001f
   140004518:	mov    DWORD PTR [rsp+0x20],edi
   14000451c:	xor    r9d,r9d
   14000451f:	mov    r8,rsi
   140004522:	mov    rdx,rbx
   140004525:	lea    rcx,[rbp-0x68]
   140004529:	call   0x140002ba8
   14000452e:	test   eax,eax
   140004530:	jne    0x1400048b3
   140004536:	mov    rdx,rsi
   140004539:	mov    rdi,QWORD PTR [rsp+0x68]
   14000453e:	mov    rcx,rdi
   140004541:	call   0x140002f98
   140004546:	mov    ebx,eax
   140004548:	test   eax,eax
   14000454a:	js     0x1400048c7
   140004550:	cmp    WORD PTR [rsi],0x3d
   140004554:	jne    0x140004572
   140004556:	mov    r9,rsi
   140004559:	xor    r8d,r8d
   14000455c:	lea    rdx,[rbp-0x68]
   140004560:	mov    rcx,rdi
   140004563:	call   0x140003d74
   140004568:	mov    ebx,eax
   14000456a:	test   eax,eax
   14000456c:	js     0x1400048c7
   140004572:	mov    rdi,QWORD PTR [rbp-0x68]
   140004576:	cmp    WORD PTR [rsi],0x7b
   14000457a:	jne    0x140004226
   140004580:	mov    rcx,rsi
   140004583:	call   QWORD PTR [rip+0x5aa7]        # 0x14000a030
   140004589:	mov    ecx,0x1
   14000458e:	cmp    eax,ecx
   140004590:	jne    0x140004226
   140004596:	xor    eax,eax
   140004598:	mov    DWORD PTR [rsp+0x20],eax
   14000459c:	mov    r9d,DWORD PTR [rsp+0x74]
   1400045a1:	mov    r8,rdi
   1400045a4:	mov    rdx,rsi
   1400045a7:	mov    rcx,QWORD PTR [rsp+0x68]
   1400045ac:	call   0x1400041b4
   1400045b1:	mov    ebx,eax
   1400045b3:	test   eax,eax
   1400045b5:	js     0x140004904
   1400045bb:	mov    rdx,rsi
   1400045be:	mov    rcx,QWORD PTR [rsp+0x68]
   1400045c3:	call   0x140002f98
   1400045c8:	jmp    0x14000448b
   1400045cd:	mov    ebx,DWORD PTR [rbp+0x2230]
   1400045d3:	test   ebx,ebx
   1400045d5:	jne    0x1400045f3
   1400045d7:	mov    r9d,0x20019
   1400045dd:	mov    r8,rsi
   1400045e0:	mov    rdx,QWORD PTR [rbp-0x70]
   1400045e4:	lea    rcx,[rbp-0x68]
   1400045e8:	call   0x1400010b8
   1400045ed:	mov    rdi,QWORD PTR [rbp-0x68]
   1400045f1:	jmp    0x1400045f8
   1400045f3:	mov    eax,0x2
   1400045f8:	mov    DWORD PTR [rsp+0x60],eax
   1400045fc:	test   eax,eax
   1400045fe:	mov    eax,0x1
   140004603:	cmovne ebx,eax
   140004606:	mov    DWORD PTR [rbp+0x2230],ebx
   14000460c:	or     r9,0xffffffffffffffff
   140004610:	mov    r8,rsi
   140004613:	mov    edx,0x104
   140004618:	lea    rcx,[rbp-0x40]
   14000461c:	call   QWORD PTR [rip+0x5bd6]        # 0x14000a1f8
   140004622:	test   eax,eax
   140004624:	je     0x14000464a
   140004626:	cmp    eax,0xc
   140004629:	je     0x1400048e3
   14000462f:	cmp    eax,0x16
   140004632:	je     0x1400048d8
   140004638:	cmp    eax,0x22
   14000463b:	je     0x1400048d8
   140004641:	cmp    eax,0x50
   140004644:	jne    0x1400048cd
   14000464a:	mov    rdx,rsi
   14000464d:	mov    rcx,QWORD PTR [rsp+0x68]
   140004652:	call   0x140002f98
   140004657:	mov    ebx,eax
   140004659:	test   eax,eax
   14000465b:	js     0x140004904
   140004661:	mov    rdx,rsi
   140004664:	mov    rcx,QWORD PTR [rsp+0x68]
   140004669:	call   0x140003118
   14000466e:	mov    ebx,eax
   140004670:	xor    edx,edx
   140004672:	test   eax,eax
   140004674:	js     0x140004904
   14000467a:	cmp    WORD PTR [rsi],0x7b
   14000467e:	jne    0x1400046e0
   140004680:	mov    rcx,rsi
   140004683:	call   QWORD PTR [rip+0x59a7]        # 0x14000a030
   140004689:	mov    ecx,0x1
   14000468e:	cmp    eax,ecx
   140004690:	jne    0x1400046de
   140004692:	mov    eax,DWORD PTR [rbp+0x2230]
   140004698:	mov    DWORD PTR [rsp+0x20],eax
   14000469c:	xor    r9d,r9d
   14000469f:	mov    r8,rdi
   1400046a2:	mov    rdx,rsi
   1400046a5:	mov    rcx,QWORD PTR [rsp+0x68]
   1400046aa:	call   0x1400041b4
   1400046af:	mov    ebx,eax
   1400046b1:	xor    edx,edx
   1400046b3:	test   eax,eax
   1400046b5:	jns    0x1400046c3
   1400046b7:	cmp    DWORD PTR [rbp+0x2230],edx
   1400046bd:	je     0x140004904
   1400046c3:	mov    rdx,rsi
   1400046c6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400046cb:	call   0x140002f98
   1400046d0:	mov    ebx,eax
   1400046d2:	xor    edx,edx
   1400046d4:	test   eax,eax
   1400046d6:	js     0x140004904
   1400046dc:	jmp    0x1400046e0
   1400046de:	xor    edx,edx
   1400046e0:	mov    ecx,DWORD PTR [rbp-0x50]
   1400046e3:	mov    DWORD PTR [rbp+0x2230],ecx
   1400046e9:	mov    eax,DWORD PTR [rsp+0x60]
   1400046ed:	cmp    eax,0x2
   1400046f0:	je     0x140004226
   1400046f6:	test   eax,eax
   1400046f8:	je     0x140004707
   1400046fa:	test   ecx,ecx
   1400046fc:	je     0x1400048ee
   140004702:	jmp    0x140004226
   140004707:	test   ecx,ecx
   140004709:	je     0x1400047c1
   14000470f:	mov    DWORD PTR [rsp+0x60],edx
   140004713:	mov    QWORD PTR [rsp+0x58],rdx
   140004718:	mov    QWORD PTR [rsp+0x50],rdx
   14000471d:	mov    QWORD PTR [rsp+0x48],rdx
   140004722:	mov    QWORD PTR [rsp+0x40],rdx
   140004727:	mov    QWORD PTR [rsp+0x38],rdx
   14000472c:	mov    QWORD PTR [rsp+0x30],rdx
   140004731:	mov    QWORD PTR [rsp+0x28],rdx
   140004736:	lea    rax,[rsp+0x60]
   14000473b:	mov    QWORD PTR [rsp+0x20],rax
   140004740:	xor    r9d,r9d
   140004743:	xor    r8d,r8d
   140004746:	xor    edx,edx
   140004748:	mov    rcx,rdi
   14000474b:	call   QWORD PTR [rip+0xaab7]        # 0x14000f208
   140004751:	xor    edx,edx
   140004753:	test   eax,eax
   140004755:	jne    0x1400047c1
   140004757:	mov    eax,edx
   140004759:	cmp    DWORD PTR [rsp+0x60],edx
   14000475d:	seta   al
   140004760:	test   eax,eax
   140004762:	je     0x1400047c1
   140004764:	lea    rax,[rip+0x6335]        # 0x14000aaa0
   14000476b:	mov    QWORD PTR [rsp+0x60],rax
   140004770:	mov    rdx,QWORD PTR [rax]
   140004773:	lea    rcx,[rbp-0x40]
   140004777:	call   QWORD PTR [rip+0x58cb]        # 0x14000a048
   14000477d:	xor    edx,edx
   14000477f:	test   eax,eax
   140004781:	je     0x140004226
   140004787:	mov    rax,QWORD PTR [rsp+0x60]
   14000478c:	add    rax,0x8
   140004790:	mov    QWORD PTR [rsp+0x60],rax
   140004795:	lea    rcx,[rip+0x6364]        # 0x14000ab00
   14000479c:	cmp    rax,rcx
   14000479f:	jl     0x140004770
   1400047a1:	cmp    DWORD PTR [rsp+0x70],edx
   1400047a5:	je     0x140004226
   1400047ab:	lea    rdx,[rbp-0x40]
   1400047af:	lea    rcx,[rbp-0x68]
   1400047b3:	call   0x140003220
   1400047b8:	mov    rdi,QWORD PTR [rbp-0x68]
   1400047bc:	jmp    0x140004226
   1400047c1:	mov    DWORD PTR [rsp+0x60],edx
   1400047c5:	mov    QWORD PTR [rsp+0x58],rdx
   1400047ca:	mov    QWORD PTR [rsp+0x50],rdx
   1400047cf:	mov    QWORD PTR [rsp+0x48],rdx
   1400047d4:	mov    QWORD PTR [rsp+0x40],rdx
   1400047d9:	mov    QWORD PTR [rsp+0x38],rdx
   1400047de:	mov    QWORD PTR [rsp+0x30],rdx
   1400047e3:	mov    QWORD PTR [rsp+0x28],rdx
   1400047e8:	lea    rax,[rsp+0x60]
   1400047ed:	mov    QWORD PTR [rsp+0x20],rax
   1400047f2:	xor    r9d,r9d
   1400047f5:	xor    r8d,r8d
   1400047f8:	xor    edx,edx
   1400047fa:	mov    rcx,rdi
   1400047fd:	call   QWORD PTR [rip+0xaa05]        # 0x14000f208
   140004803:	xor    edx,edx
   140004805:	test   eax,eax
   140004807:	je     0x14000480f
   140004809:	mov    DWORD PTR [rsp+0x60],edx
   14000480d:	jmp    0x14000481c
   14000480f:	mov    ecx,edx
   140004811:	cmp    DWORD PTR [rsp+0x60],edx
   140004815:	seta   cl
   140004818:	mov    DWORD PTR [rsp+0x60],ecx
   14000481c:	mov    eax,edx
   14000481e:	test   rdi,rdi
   140004821:	je     0x140004834
   140004823:	mov    rcx,rdi
   140004826:	call   QWORD PTR [rip+0xa9ac]        # 0x14000f1d8
   14000482c:	xor    edx,edx
   14000482e:	mov    edi,edx
   140004830:	mov    QWORD PTR [rbp-0x68],rdx
   140004834:	mov    DWORD PTR [rbp-0x60],edx
   140004837:	test   eax,eax
   140004839:	jne    0x1400048f9
   14000483f:	cmp    DWORD PTR [rsp+0x70],edx
   140004843:	je     0x140004226
   140004849:	cmp    DWORD PTR [rsp+0x60],edx
   14000484d:	jne    0x140004226
   140004853:	mov    rax,QWORD PTR [rbp-0x70]
   140004857:	mov    QWORD PTR [rsp+0x78],rax
   14000485c:	mov    DWORD PTR [rbp-0x80],edx
   14000485f:	mov    QWORD PTR [rbp-0x78],rdx
   140004863:	lea    rdx,[rbp-0x40]
   140004867:	lea    rcx,[rsp+0x78]
   14000486c:	call   0x140002b10
   140004871:	test   eax,eax
   140004873:	jne    0x1400048ee
   140004875:	jmp    0x140004226
   14000487a:	test   rdi,rdi
   14000487d:	je     0x140004888
   14000487f:	mov    rcx,rdi
   140004882:	call   QWORD PTR [rip+0xa950]        # 0x14000f1d8
   140004888:	mov    eax,0x80020009
   14000488d:	jmp    0x140004914
   140004892:	jmp    0x140004904
   140004894:	mov    ecx,eax
   140004896:	call   0x1400028a8
   14000489b:	mov    ebx,eax
   14000489d:	mov    rcx,QWORD PTR [rsp+0x78]
   1400048a2:	test   rcx,rcx
   1400048a5:	je     0x140004904
   1400048a7:	call   QWORD PTR [rip+0xa92b]        # 0x14000f1d8
   1400048ad:	jmp    0x140004904
   1400048af:	jmp    0x14000487a
   1400048b1:	jmp    0x14000487a
   1400048b3:	mov    ecx,eax
   1400048b5:	call   0x1400028a8
   1400048ba:	mov    ebx,eax
   1400048bc:	mov    rcx,QWORD PTR [rbp-0x68]
   1400048c0:	test   rcx,rcx
   1400048c3:	je     0x140004912
   1400048c5:	jmp    0x14000490c
   1400048c7:	mov    rdi,QWORD PTR [rbp-0x68]
   1400048cb:	jmp    0x140004904
   1400048cd:	mov    ecx,0x80004005
   1400048d2:	call   0x140002868
   1400048d7:	int3   
   1400048d8:	mov    ecx,0x80070057
   1400048dd:	call   0x140002868
   1400048e2:	int3   
   1400048e3:	mov    ecx,0x8007000e
   1400048e8:	call   0x140002868
   1400048ed:	int3   
   1400048ee:	mov    ecx,eax
   1400048f0:	call   0x1400028a8
   1400048f5:	mov    ebx,eax
   1400048f7:	jmp    0x140004904
   1400048f9:	mov    ecx,eax
   1400048fb:	call   0x1400028a8
   140004900:	mov    ebx,eax
   140004902:	jmp    0x140004904
   140004904:	test   rdi,rdi
   140004907:	je     0x140004912
   140004909:	mov    rcx,rdi
   14000490c:	call   QWORD PTR [rip+0xa8c6]        # 0x14000f1d8
   140004912:	mov    eax,ebx
   140004914:	mov    rcx,QWORD PTR [rbp+0x21d0]
   14000491b:	xor    rcx,rsp
   14000491e:	call   0x140008020
   140004923:	add    rsp,0x22e8
   14000492a:	pop    rdi
   14000492b:	pop    rsi
   14000492c:	pop    rbx
   14000492d:	pop    rbp
   14000492e:	ret    
   14000492f:	int3   
   140004930:	rex push rbx
   140004932:	push   rbp
   140004933:	push   rsi
   140004934:	push   rdi
   140004935:	push   r12
   140004937:	push   r13
   140004939:	push   r14
   14000493b:	mov    eax,0x2050
   140004940:	call   0x140008050
   140004945:	sub    rsp,rax
   140004948:	mov    rax,QWORD PTR [rip+0xa849]        # 0x14000f198
   14000494f:	xor    rax,rsp
   140004952:	mov    QWORD PTR [rsp+0x2040],rax
   14000495a:	mov    r13d,r8d
   14000495d:	lea    r8,[rsp+0x30]
   140004962:	xor    r14d,r14d
   140004965:	mov    rdi,rcx
   140004968:	mov    QWORD PTR [rsp+0x30],r14
   14000496d:	call   0x140003638
   140004972:	mov    ebx,eax
   140004974:	test   eax,eax
   140004976:	js     0x140004a6e
   14000497c:	mov    rbp,QWORD PTR [rsp+0x30]
   140004981:	mov    QWORD PTR [rdi],rbp
   140004984:	cmp    r14w,WORD PTR [rbp+0x0]
   140004989:	je     0x140004a63
   14000498f:	lea    rdx,[rsp+0x40]
   140004994:	mov    rcx,rdi
   140004997:	call   0x140002f98
   14000499c:	mov    ebx,eax
   14000499e:	test   eax,eax
   1400049a0:	js     0x140004a63
   1400049a6:	lea    rcx,[rsp+0x40]
   1400049ab:	call   0x140002f34
   1400049b0:	mov    rsi,rax
   1400049b3:	test   rax,rax
   1400049b6:	je     0x140004a5e
   1400049bc:	lea    rdx,[rsp+0x40]
   1400049c1:	mov    rcx,rdi
   1400049c4:	call   0x140002f98
   1400049c9:	mov    ebx,eax
   1400049cb:	test   eax,eax
   1400049cd:	js     0x140004a63
   1400049d3:	mov    eax,0x7b
   1400049d8:	cmp    ax,WORD PTR [rsp+0x40]
   1400049dd:	jne    0x140004a5e
   1400049df:	mov    DWORD PTR [rsp+0x20],r14d
   1400049e4:	mov    r8,rsi
   1400049e7:	lea    rdx,[rsp+0x40]
   1400049ec:	mov    rcx,rdi
   1400049ef:	test   r13d,r13d
   1400049f2:	je     0x140004a22
   1400049f4:	mov    r12,QWORD PTR [rdi]
   1400049f7:	mov    r9d,r13d
   1400049fa:	call   0x1400041b4
   1400049ff:	mov    ebx,eax
   140004a01:	test   eax,eax
   140004a03:	jns    0x140004a30
   140004a05:	lea    rdx,[rsp+0x40]
   140004a0a:	xor    r9d,r9d
   140004a0d:	mov    r8,rsi
   140004a10:	mov    rcx,rdi
   140004a13:	mov    QWORD PTR [rdi],r12
   140004a16:	mov    DWORD PTR [rsp+0x20],r14d
   140004a1b:	call   0x1400041b4
   140004a20:	jmp    0x140004a63
   140004a22:	xor    r9d,r9d
   140004a25:	call   0x1400041b4
   140004a2a:	mov    ebx,eax
   140004a2c:	test   eax,eax
   140004a2e:	js     0x140004a63
   140004a30:	mov    rcx,QWORD PTR [rdi]
   140004a33:	movzx  eax,WORD PTR [rcx]
   140004a36:	cmp    eax,0x9
   140004a39:	jl     0x140004a55
   140004a3b:	cmp    eax,0xa
   140004a3e:	jle    0x140004a4a
   140004a40:	cmp    eax,0xd
   140004a43:	je     0x140004a4a
   140004a45:	cmp    eax,0x20
   140004a48:	jne    0x140004a55
   140004a4a:	call   QWORD PTR [rip+0x5920]        # 0x14000a370
   140004a50:	mov    QWORD PTR [rdi],rax
   140004a53:	jmp    0x140004a30
   140004a55:	cmp    r14w,WORD PTR [rcx]
   140004a59:	jmp    0x140004989
   140004a5e:	mov    ebx,0x80020009
   140004a63:	mov    rcx,rbp
   140004a66:	call   QWORD PTR [rip+0x592c]        # 0x14000a398
   140004a6c:	mov    eax,ebx
   140004a6e:	mov    rcx,QWORD PTR [rsp+0x2040]
   140004a76:	xor    rcx,rsp
   140004a79:	call   0x140008020
   140004a7e:	add    rsp,0x2050
   140004a85:	pop    r14
   140004a87:	pop    r13
   140004a89:	pop    r12
   140004a8b:	pop    rdi
   140004a8c:	pop    rsi
   140004a8d:	pop    rbp
   140004a8e:	pop    rbx
   140004a8f:	ret    
   140004a90:	mov    rax,rsp
   140004a93:	push   rsi
   140004a94:	push   rdi
   140004a95:	push   r12
   140004a97:	sub    rsp,0x490
   140004a9e:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004aa7:	mov    QWORD PTR [rax+0x8],rbx
   140004aab:	mov    rax,QWORD PTR [rip+0xa6e6]        # 0x14000f198
   140004ab2:	xor    rax,rsp
   140004ab5:	mov    QWORD PTR [rsp+0x480],rax
   140004abd:	mov    r12,r9
   140004ac0:	mov    rdi,r8
   140004ac3:	mov    rax,rdx
   140004ac6:	xor    ebx,ebx
   140004ac8:	mov    QWORD PTR [rsp+0x60],rbx
   140004acd:	mov    QWORD PTR [rsp+0x50],rcx
   140004ad2:	mov    QWORD PTR [rsp+0x48],rbx
   140004ad7:	mov    QWORD PTR [rsp+0x70],rbx
   140004adc:	xor    edx,edx
   140004ade:	lea    r8d,[rbx+0x2]
   140004ae2:	mov    rcx,rax
   140004ae5:	call   QWORD PTR [rip+0x558d]        # 0x14000a078
   140004aeb:	mov    rsi,rax
   140004aee:	mov    QWORD PTR [rsp+0x38],rax
   140004af3:	test   rax,rax
   140004af6:	jne    0x140004b04
   140004af8:	call   0x140002884
   140004afd:	mov    ebx,eax
   140004aff:	jmp    0x140004c13
   140004b04:	mov    r8,r12
   140004b07:	mov    rdx,rdi
   140004b0a:	mov    rcx,rax
   140004b0d:	call   QWORD PTR [rip+0x555d]        # 0x14000a070
   140004b13:	mov    rdi,rax
   140004b16:	test   rax,rax
   140004b19:	jne    0x140004b25
   140004b1b:	call   0x140002884
   140004b20:	jmp    0x140004c07
   140004b25:	mov    rdx,rax
   140004b28:	mov    rcx,rsi
   140004b2b:	call   QWORD PTR [rip+0x5537]        # 0x14000a068
   140004b31:	mov    r12,rax
   140004b34:	mov    QWORD PTR [rsp+0x40],rax
   140004b39:	test   rax,rax
   140004b3c:	je     0x140004b1b
   140004b3e:	mov    rdx,rdi
   140004b41:	mov    rcx,rsi
   140004b44:	call   QWORD PTR [rip+0x5516]        # 0x14000a060
   140004b4a:	mov    edi,eax
   140004b4c:	mov    DWORD PTR [rsp+0x30],eax
   140004b50:	inc    eax
   140004b52:	cmp    eax,edi
   140004b54:	jae    0x140004b60
   140004b56:	mov    ebx,0x8007000e
   140004b5b:	jmp    0x140004c09
   140004b60:	mov    ecx,eax
   140004b62:	test   eax,eax
   140004b64:	je     0x140004b9d
   140004b66:	xor    edx,edx
   140004b68:	or     rax,0xffffffffffffffff
   140004b6c:	div    rcx
   140004b6f:	cmp    rax,0x2
   140004b73:	jb     0x140004b93
   140004b75:	lea    rdx,[rcx+rcx*1]
   140004b79:	cmp    rdx,0x400
   140004b80:	jbe    0x140004b9d
   140004b82:	lea    rcx,[rsp+0x70]
   140004b87:	call   0x1400031f4
   140004b8c:	mov    rax,QWORD PTR [rsp+0x70]
   140004b91:	jmp    0x140004ba7
   140004b93:	mov    ecx,0x80070216
   140004b98:	call   0x140002868
   140004b9d:	lea    rax,[rsp+0x78]
   140004ba2:	mov    QWORD PTR [rsp+0x70],rax
   140004ba7:	jmp    0x140004bbe
   140004ba9:	xor    ebx,ebx
   140004bab:	mov    rax,QWORD PTR [rsp+0x70]
   140004bb0:	mov    rsi,QWORD PTR [rsp+0x38]
   140004bb5:	mov    r12,QWORD PTR [rsp+0x40]
   140004bba:	mov    edi,DWORD PTR [rsp+0x30]
   140004bbe:	test   rax,rax
   140004bc1:	je     0x140004b56
   140004bc3:	mov    DWORD PTR [rsp+0x28],edi
   140004bc7:	mov    QWORD PTR [rsp+0x20],rax
   140004bcc:	mov    r9d,edi
   140004bcf:	mov    r8,r12
   140004bd2:	xor    edx,edx
   140004bd4:	lea    ecx,[rdx+0x3]
   140004bd7:	call   QWORD PTR [rip+0x547b]        # 0x14000a058
   140004bdd:	test   eax,eax
   140004bdf:	je     0x140004b1b
   140004be5:	mov    ecx,eax
   140004be7:	mov    rax,QWORD PTR [rsp+0x70]
   140004bec:	mov    WORD PTR [rax+rcx*2],bx
   140004bf0:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140004bf8:	mov    rdx,QWORD PTR [rsp+0x70]
   140004bfd:	lea    rcx,[rsp+0x48]
   140004c02:	call   0x140004930
   140004c07:	mov    ebx,eax
   140004c09:	mov    rcx,rsi
   140004c0c:	call   QWORD PTR [rip+0x543e]        # 0x14000a050
   140004c12:	nop
   140004c13:	lea    rax,[rsp+0x78]
   140004c18:	cmp    QWORD PTR [rsp+0x70],rax
   140004c1d:	je     0x140004c2a
   140004c1f:	lea    rcx,[rsp+0x70]
   140004c24:	call   0x1400031e8
   140004c29:	nop
   140004c2a:	mov    eax,ebx
   140004c2c:	mov    rcx,QWORD PTR [rsp+0x480]
   140004c34:	xor    rcx,rsp
   140004c37:	call   0x140008020
   140004c3c:	mov    rbx,QWORD PTR [rsp+0x4b0]
   140004c44:	add    rsp,0x490
   140004c4b:	pop    r12
   140004c4d:	pop    rdi
   140004c4e:	pop    rsi
   140004c4f:	ret    
   140004c50:	rex push rbp
   140004c52:	push   rbx
   140004c53:	push   rsi
   140004c54:	push   rdi
   140004c55:	push   r12
   140004c57:	push   r13
   140004c59:	push   r14
   140004c5b:	lea    rbp,[rsp-0x9d0]
   140004c63:	sub    rsp,0xad0
   140004c6a:	mov    rax,QWORD PTR [rip+0xa527]        # 0x14000f198
   140004c71:	xor    rax,rsp
   140004c74:	mov    QWORD PTR [rbp+0x9c0],rax
   140004c7b:	xor    r14d,r14d
   140004c7e:	mov    r13d,r8d
   140004c81:	mov    r12,rcx
   140004c84:	lea    rax,[rip+0x6225]        # 0x14000aeb0
   140004c8b:	mov    rsi,rdx
   140004c8e:	lea    rcx,[rsp+0x50]
   140004c93:	lea    r8d,[r14+0x28]
   140004c97:	xor    edx,edx
   140004c99:	mov    rdi,r9
   140004c9c:	mov    QWORD PTR [rsp+0x30],rax
   140004ca1:	mov    QWORD PTR [rsp+0x38],r14
   140004ca6:	mov    QWORD PTR [rsp+0x40],r14
   140004cab:	mov    DWORD PTR [rsp+0x48],r14d
   140004cb0:	call   0x140007ebe
   140004cb5:	lea    rcx,[rsp+0x50]
   140004cba:	xor    edx,edx
   140004cbc:	mov    BYTE PTR [rsp+0x78],r14b
   140004cc1:	call   QWORD PTR [rip+0x5349]        # 0x14000a010
   140004cc7:	test   eax,eax
   140004cc9:	jne    0x140004ce7
   140004ccb:	call   QWORD PTR [rip+0x5337]        # 0x14000a008
   140004cd1:	movzx  ebx,ax
   140004cd4:	or     ebx,0x80070000
   140004cda:	test   eax,eax
   140004cdc:	cmovle ebx,eax
   140004cdf:	test   ebx,ebx
   140004ce1:	js     0x140004ea8
   140004ce7:	mov    BYTE PTR [rsp+0x78],0x1
   140004cec:	test   rdi,rdi
   140004cef:	je     0x140004d10
   140004cf1:	jmp    0x140004d08
   140004cf3:	mov    r8,QWORD PTR [rdi+0x8]
   140004cf7:	lea    rcx,[rsp+0x30]
   140004cfc:	mov    rdx,rax
   140004cff:	call   0x140003cf0
   140004d04:	add    rdi,0x10
   140004d08:	mov    rax,QWORD PTR [rdi]
   140004d0b:	test   rax,rax
   140004d0e:	jne    0x140004cf3
   140004d10:	mov    rax,QWORD PTR [r12]
   140004d14:	lea    rdx,[rsp+0x30]
   140004d19:	mov    rcx,r12
   140004d1c:	call   QWORD PTR [rax+0x28]
   140004d1f:	test   eax,eax
   140004d21:	js     0x140004ea6
   140004d27:	mov    rbx,QWORD PTR [rip+0xabfa]        # 0x14000f928
   140004d2e:	mov    edi,0x104
   140004d33:	lea    rdx,[rbp-0x80]
   140004d37:	mov    rcx,rbx
   140004d3a:	mov    r8d,edi
   140004d3d:	call   QWORD PTR [rip+0x533d]        # 0x14000a080
   140004d43:	test   eax,eax
   140004d45:	jne    0x140004d51
   140004d47:	call   0x140002884
   140004d4c:	jmp    0x140004ea6
   140004d51:	cmp    eax,edi
   140004d53:	jne    0x140004d5f
   140004d55:	mov    ebx,0x8007007a
   140004d5a:	jmp    0x140004ea8
   140004d5f:	lea    r8,[rbp-0x80]
   140004d63:	lea    rax,[rbp+0x5b0]
   140004d6a:	mov    ecx,r14d
   140004d6d:	mov    r10d,0x27
   140004d73:	mov    r9d,0x207
   140004d79:	movzx  edx,WORD PTR [r8]
   140004d7d:	test   dx,dx
   140004d80:	je     0x140004da9
   140004d82:	mov    WORD PTR [rax],dx
   140004d85:	add    rax,0x2
   140004d89:	cmp    dx,r10w
   140004d8d:	jne    0x140004d9e
   140004d8f:	inc    ecx
   140004d91:	cmp    ecx,r9d
   140004d94:	jae    0x140004d9e
   140004d96:	mov    WORD PTR [rax],r10w
   140004d9a:	add    rax,0x2
   140004d9e:	inc    ecx
   140004da0:	add    r8,0x2
   140004da4:	cmp    ecx,r9d
   140004da7:	jb     0x140004d79
   140004da9:	mov    WORD PTR [rax],r14w
   140004dad:	test   rbx,rbx
   140004db0:	je     0x140004dc8
   140004db2:	xor    ecx,ecx
   140004db4:	call   QWORD PTR [rip+0x526e]        # 0x14000a028
   140004dba:	cmp    rbx,rax
   140004dbd:	je     0x140004dc8
   140004dbf:	lea    r8,[rbp+0x5b0]
   140004dc6:	jmp    0x140004e38
   140004dc8:	lea    rcx,[rbp+0x5b0]
   140004dcf:	mov    ebx,0x22
   140004dd4:	mov    WORD PTR [rbp+0x190],bx
   140004ddb:	call   QWORD PTR [rip+0x524f]        # 0x14000a030
   140004de1:	lea    r8,[rbp+0x5b0]
   140004de8:	inc    eax
   140004dea:	lea    rcx,[rbp+0x192]
   140004df1:	mov    edx,0x416
   140004df6:	movsxd r9,eax
   140004df9:	add    r9,r9
   140004dfc:	call   QWORD PTR [rip+0x53ce]        # 0x14000a1d0
   140004e02:	test   eax,eax
   140004e04:	je     0x140004e10
   140004e06:	mov    ebx,0x80004005
   140004e0b:	jmp    0x140004ea8
   140004e10:	lea    rcx,[rbp+0x190]
   140004e17:	call   QWORD PTR [rip+0x5213]        # 0x14000a030
   140004e1d:	lea    r8,[rbp+0x190]
   140004e24:	movsxd rcx,eax
   140004e27:	mov    WORD PTR [rbp+rcx*2+0x190],bx
   140004e2f:	mov    WORD PTR [rbp+rcx*2+0x192],r14w
   140004e38:	lea    rdx,[rip+0x6239]        # 0x14000b078
   140004e3f:	lea    rcx,[rsp+0x30]
   140004e44:	call   0x140003cf0
   140004e49:	test   eax,eax
   140004e4b:	js     0x140004ea6
   140004e4d:	lea    r8,[rbp+0x5b0]
   140004e54:	lea    rdx,[rip+0x6205]        # 0x14000b060
   140004e5b:	lea    rcx,[rsp+0x30]
   140004e60:	call   0x140003cf0
   140004e65:	test   eax,eax
   140004e67:	js     0x140004ea6
   140004e69:	test   r13d,r13d
   140004e6c:	je     0x140004e7d
   140004e6e:	test   rsi,rsi
   140004e71:	je     0x140004ea1
   140004e73:	mov    DWORD PTR [rsp+0x20],0x1
   140004e7b:	jmp    0x140004e87
   140004e7d:	test   rsi,rsi
   140004e80:	je     0x140004ea1
   140004e82:	mov    DWORD PTR [rsp+0x20],r14d
   140004e87:	lea    r9,[rip+0x61ba]        # 0x14000b048
   140004e8e:	lea    rdx,[rbp-0x80]
   140004e92:	lea    rcx,[rsp+0x30]
   140004e97:	mov    r8,rsi
   140004e9a:	call   0x140004a90
   140004e9f:	jmp    0x140004ea6
   140004ea1:	mov    eax,0x80070057
   140004ea6:	mov    ebx,eax
   140004ea8:	lea    rcx,[rsp+0x30]
   140004ead:	call   0x140003570
   140004eb2:	mov    eax,ebx
   140004eb4:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140004ebb:	xor    rcx,rsp
   140004ebe:	call   0x140008020
   140004ec3:	add    rsp,0xad0
   140004eca:	pop    r14
   140004ecc:	pop    r13
   140004ece:	pop    r12
   140004ed0:	pop    rdi
   140004ed1:	pop    rsi
   140004ed2:	pop    rbx
   140004ed3:	pop    rbp
   140004ed4:	ret    
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	rex push rbp
   140004eda:	push   rbx
   140004edb:	push   rsi
   140004edc:	push   rdi
   140004edd:	push   r12
   140004edf:	push   r13
   140004ee1:	push   r14
   140004ee3:	lea    rbp,[rsp-0x9d0]
   140004eeb:	sub    rsp,0xad0
   140004ef2:	mov    rax,QWORD PTR [rip+0xa29f]        # 0x14000f198
   140004ef9:	xor    rax,rsp
   140004efc:	mov    QWORD PTR [rbp+0x9c0],rax
   140004f03:	xor    r14d,r14d
   140004f06:	mov    r13d,r8d
   140004f09:	mov    rsi,rcx
   140004f0c:	lea    rax,[rip+0x5f9d]        # 0x14000aeb0
   140004f13:	mov    r12d,edx
   140004f16:	lea    rcx,[rsp+0x50]
   140004f1b:	lea    r8d,[r14+0x28]
   140004f1f:	xor    edx,edx
   140004f21:	mov    rdi,r9
   140004f24:	mov    QWORD PTR [rsp+0x30],rax
   140004f29:	mov    QWORD PTR [rsp+0x38],r14
   140004f2e:	mov    QWORD PTR [rsp+0x40],r14
   140004f33:	mov    DWORD PTR [rsp+0x48],r14d
   140004f38:	call   0x140007ebe
   140004f3d:	lea    rcx,[rsp+0x50]
   140004f42:	xor    edx,edx
   140004f44:	mov    BYTE PTR [rsp+0x78],r14b
   140004f49:	call   QWORD PTR [rip+0x50c1]        # 0x14000a010
   140004f4f:	test   eax,eax
   140004f51:	jne    0x140004f6f
   140004f53:	call   QWORD PTR [rip+0x50af]        # 0x14000a008
   140004f59:	movzx  ebx,ax
   140004f5c:	or     ebx,0x80070000
   140004f62:	test   eax,eax
   140004f64:	cmovle ebx,eax
   140004f67:	test   ebx,ebx
   140004f69:	js     0x14000511f
   140004f6f:	mov    BYTE PTR [rsp+0x78],0x1
   140004f74:	test   rdi,rdi
   140004f77:	je     0x140004f98
   140004f79:	jmp    0x140004f90
   140004f7b:	mov    r8,QWORD PTR [rdi+0x8]
   140004f7f:	lea    rcx,[rsp+0x30]
   140004f84:	mov    rdx,rax
   140004f87:	call   0x140003cf0
   140004f8c:	add    rdi,0x10
   140004f90:	mov    rax,QWORD PTR [rdi]
   140004f93:	test   rax,rax
   140004f96:	jne    0x140004f7b
   140004f98:	mov    rax,QWORD PTR [rsi]
   140004f9b:	lea    rdx,[rsp+0x30]
   140004fa0:	mov    rcx,rsi
   140004fa3:	call   QWORD PTR [rax+0x28]
   140004fa6:	test   eax,eax
   140004fa8:	js     0x14000511d
   140004fae:	mov    rbx,QWORD PTR [rip+0xa973]        # 0x14000f928
   140004fb5:	mov    edi,0x104
   140004fba:	lea    rdx,[rbp-0x80]
   140004fbe:	mov    rcx,rbx
   140004fc1:	mov    r8d,edi
   140004fc4:	call   QWORD PTR [rip+0x50b6]        # 0x14000a080
   140004fca:	test   eax,eax
   140004fcc:	jne    0x140004fd8
   140004fce:	call   0x140002884
   140004fd3:	jmp    0x14000511d
   140004fd8:	cmp    eax,edi
   140004fda:	jne    0x140004fe6
   140004fdc:	mov    ebx,0x8007007a
   140004fe1:	jmp    0x14000511f
   140004fe6:	lea    r8,[rbp-0x80]
   140004fea:	lea    rax,[rbp+0x5b0]
   140004ff1:	mov    ecx,r14d
   140004ff4:	mov    r10d,0x27
   140004ffa:	mov    r9d,0x207
   140005000:	movzx  edx,WORD PTR [r8]
   140005004:	test   dx,dx
   140005007:	je     0x140005030
   140005009:	mov    WORD PTR [rax],dx
   14000500c:	add    rax,0x2
   140005010:	cmp    dx,r10w
   140005014:	jne    0x140005025
   140005016:	inc    ecx
   140005018:	cmp    ecx,r9d
   14000501b:	jae    0x140005025
   14000501d:	mov    WORD PTR [rax],r10w
   140005021:	add    rax,0x2
   140005025:	inc    ecx
   140005027:	add    r8,0x2
   14000502b:	cmp    ecx,r9d
   14000502e:	jb     0x140005000
   140005030:	mov    WORD PTR [rax],r14w
   140005034:	test   rbx,rbx
   140005037:	je     0x14000504f
   140005039:	xor    ecx,ecx
   14000503b:	call   QWORD PTR [rip+0x4fe7]        # 0x14000a028
   140005041:	cmp    rbx,rax
   140005044:	je     0x14000504f
   140005046:	lea    r8,[rbp+0x5b0]
   14000504d:	jmp    0x1400050bf
   14000504f:	lea    rcx,[rbp+0x5b0]
   140005056:	mov    ebx,0x22
   14000505b:	mov    WORD PTR [rbp+0x190],bx
   140005062:	call   QWORD PTR [rip+0x4fc8]        # 0x14000a030
   140005068:	lea    r8,[rbp+0x5b0]
   14000506f:	inc    eax
   140005071:	lea    rcx,[rbp+0x192]
   140005078:	mov    edx,0x416
   14000507d:	movsxd r9,eax
   140005080:	add    r9,r9
   140005083:	call   QWORD PTR [rip+0x5147]        # 0x14000a1d0
   140005089:	test   eax,eax
   14000508b:	je     0x140005097
   14000508d:	mov    ebx,0x80004005
   140005092:	jmp    0x14000511f
   140005097:	lea    rcx,[rbp+0x190]
   14000509e:	call   QWORD PTR [rip+0x4f8c]        # 0x14000a030
   1400050a4:	lea    r8,[rbp+0x190]
   1400050ab:	movsxd rcx,eax
   1400050ae:	mov    WORD PTR [rbp+rcx*2+0x190],bx
   1400050b6:	mov    WORD PTR [rbp+rcx*2+0x192],r14w
   1400050bf:	lea    rdx,[rip+0x5fb2]        # 0x14000b078
   1400050c6:	lea    rcx,[rsp+0x30]
   1400050cb:	call   0x140003cf0
   1400050d0:	test   eax,eax
   1400050d2:	js     0x14000511d
   1400050d4:	lea    r8,[rbp+0x5b0]
   1400050db:	lea    rdx,[rip+0x5f7e]        # 0x14000b060
   1400050e2:	lea    rcx,[rsp+0x30]
   1400050e7:	call   0x140003cf0
   1400050ec:	test   eax,eax
   1400050ee:	js     0x14000511d
   1400050f0:	movzx  r8d,r12w
   1400050f4:	lea    r9,[rip+0x5f4d]        # 0x14000b048
   1400050fb:	lea    rdx,[rbp-0x80]
   1400050ff:	lea    rcx,[rsp+0x30]
   140005104:	test   r13d,r13d
   140005107:	je     0x140005113
   140005109:	mov    DWORD PTR [rsp+0x20],0x1
   140005111:	jmp    0x140005118
   140005113:	mov    DWORD PTR [rsp+0x20],r14d
   140005118:	call   0x140004a90
   14000511d:	mov    ebx,eax
   14000511f:	lea    rcx,[rsp+0x30]
   140005124:	call   0x140003570
   140005129:	mov    eax,ebx
   14000512b:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140005132:	xor    rcx,rsp
   140005135:	call   0x140008020
   14000513a:	add    rsp,0xad0
   140005141:	pop    r14
   140005143:	pop    r13
   140005145:	pop    r12
   140005147:	pop    rdi
   140005148:	pop    rsi
   140005149:	pop    rbx
   14000514a:	pop    rbp
   14000514b:	ret    
   14000514c:	mov    QWORD PTR [rsp+0x10],rbx
   140005151:	push   rdi
   140005152:	sub    rsp,0x20
   140005156:	mov    rbx,QWORD PTR [rcx]
   140005159:	mov    rdi,rcx
   14000515c:	test   rbx,rbx
   14000515f:	je     0x14000519a
   140005161:	or     eax,0xffffffff
   140005164:	lock xadd DWORD PTR [rbx+0x10],eax
   140005169:	dec    eax
   14000516b:	jne    0x140005196
   14000516d:	test   rbx,rbx
   140005170:	je     0x140005196
   140005172:	mov    rcx,QWORD PTR [rbx]
   140005175:	test   rcx,rcx
   140005178:	je     0x140005180
   14000517a:	call   QWORD PTR [rip+0x51e0]        # 0x14000a360
   140005180:	mov    rcx,QWORD PTR [rbx+0x8]
   140005184:	test   rcx,rcx
   140005187:	je     0x14000518e
   140005189:	call   0x140007eca
   14000518e:	mov    rcx,rbx
   140005191:	call   0x140007e4c
   140005196:	and    QWORD PTR [rdi],0x0
   14000519a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000519f:	add    rsp,0x20
   1400051a3:	pop    rdi
   1400051a4:	ret    
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	rex push rdi
   1400051aa:	sub    rsp,0x30
   1400051ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400051b7:	mov    QWORD PTR [rsp+0x40],rbx
   1400051bc:	mov    QWORD PTR [rsp+0x48],rsi
   1400051c1:	mov    rbx,rdx
   1400051c4:	mov    rdi,rcx
   1400051c7:	mov    ecx,0x18
   1400051cc:	call   0x140007ec4
   1400051d1:	mov    QWORD PTR [rsp+0x50],rax
   1400051d6:	test   rax,rax
   1400051d9:	je     0x1400051ee
   1400051db:	mov    r8,rbx
   1400051de:	mov    rdx,rdi
   1400051e1:	mov    rcx,rax
   1400051e4:	call   0x140002748
   1400051e9:	mov    rsi,rax
   1400051ec:	jmp    0x1400051f0
   1400051ee:	xor    esi,esi
   1400051f0:	test   rsi,rsi
   1400051f3:	jne    0x140005200
   1400051f5:	mov    ecx,0x8007000e
   1400051fa:	call   0x140008a90
   1400051ff:	int3   
   140005200:	mov    rbx,QWORD PTR [rdi]
   140005203:	test   rbx,rbx
   140005206:	je     0x140005241
   140005208:	or     eax,0xffffffff
   14000520b:	lock xadd DWORD PTR [rbx+0x10],eax
   140005210:	dec    eax
   140005212:	jne    0x14000523d
   140005214:	test   rbx,rbx
   140005217:	je     0x14000523d
   140005219:	mov    rcx,QWORD PTR [rbx]
   14000521c:	test   rcx,rcx
   14000521f:	je     0x140005227
   140005221:	call   QWORD PTR [rip+0x5139]        # 0x14000a360
   140005227:	mov    rcx,QWORD PTR [rbx+0x8]
   14000522b:	test   rcx,rcx
   14000522e:	je     0x140005235
   140005230:	call   0x140007eca
   140005235:	mov    rcx,rbx
   140005238:	call   0x140007e4c
   14000523d:	and    QWORD PTR [rdi],0x0
   140005241:	mov    QWORD PTR [rdi],rsi
   140005244:	mov    rax,rdi
   140005247:	mov    rbx,QWORD PTR [rsp+0x40]
   14000524c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005251:	add    rsp,0x30
   140005255:	pop    rdi
   140005256:	ret    
   140005257:	int3   
   140005258:	jmp    0x140004c50
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	jmp    0x140004ed8
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	mov    r11,rsp
   14000526b:	mov    QWORD PTR [r11+0x8],rbx
   14000526f:	mov    QWORD PTR [r11+0x10],rsi
   140005273:	push   rdi
   140005274:	sub    rsp,0x40
   140005278:	mov    eax,DWORD PTR [r9]
   14000527b:	mov    rbx,r8
   14000527e:	mov    rdi,r9
   140005281:	add    eax,eax
   140005283:	xor    esi,esi
   140005285:	xor    r8d,r8d
   140005288:	mov    DWORD PTR [r9],esi
   14000528b:	mov    rcx,QWORD PTR [rcx]
   14000528e:	mov    DWORD PTR [rsp+0x30],eax
   140005292:	lea    rax,[r11-0x18]
   140005296:	lea    r9,[r11+0x20]
   14000529a:	mov    QWORD PTR [r11-0x20],rax
   14000529e:	mov    QWORD PTR [r11-0x28],rbx
   1400052a2:	call   QWORD PTR [rip+0x9f70]        # 0x14000f218
   1400052a8:	test   eax,eax
   1400052aa:	jne    0x1400052ea
   1400052ac:	cmp    DWORD PTR [rsp+0x68],0x1
   1400052b1:	je     0x1400052c1
   1400052b3:	cmp    DWORD PTR [rsp+0x68],0x2
   1400052b8:	je     0x1400052c1
   1400052ba:	mov    eax,0xd
   1400052bf:	jmp    0x1400052ea
   1400052c1:	mov    ecx,DWORD PTR [rsp+0x30]
   1400052c5:	test   rbx,rbx
   1400052c8:	je     0x1400052e4
   1400052ca:	test   ecx,ecx
   1400052cc:	je     0x1400052e1
   1400052ce:	test   cl,0x1
   1400052d1:	jne    0x1400052ba
   1400052d3:	mov    eax,ecx
   1400052d5:	shr    rax,1
   1400052d8:	cmp    WORD PTR [rbx+rax*2-0x2],si
   1400052dd:	je     0x1400052e4
   1400052df:	jmp    0x1400052ba
   1400052e1:	mov    WORD PTR [rbx],si
   1400052e4:	shr    ecx,1
   1400052e6:	xor    eax,eax
   1400052e8:	mov    DWORD PTR [rdi],ecx
   1400052ea:	mov    rbx,QWORD PTR [rsp+0x50]
   1400052ef:	mov    rsi,QWORD PTR [rsp+0x58]
   1400052f4:	add    rsp,0x40
   1400052f8:	pop    rdi
   1400052f9:	ret    
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	lea    eax,[rcx+rdx*1]
   1400052ff:	cmp    eax,edx
   140005301:	jae    0x140005309
   140005303:	mov    eax,0x80070216
   140005308:	ret    
   140005309:	mov    DWORD PTR [r8],eax
   14000530c:	xor    eax,eax
   14000530e:	ret    
   14000530f:	int3   
   140005310:	int3   
   140005311:	int3   
   140005312:	int3   
   140005313:	int3   
   140005314:	int3   
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	int3   
   140005319:	int3   
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	mov    eax,edx
   14000531e:	mov    r9d,ecx
   140005321:	imul   r9,rax
   140005325:	mov    eax,0xffffffff
   14000532a:	cmp    r9,rax
   14000532d:	ja     0x140005335
   14000532f:	mov    DWORD PTR [r8],r9d
   140005332:	xor    eax,eax
   140005334:	ret    
   140005335:	mov    eax,0x80070216
   14000533a:	ret    
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	int3   
   140005341:	int3   
   140005342:	int3   
   140005343:	int3   
   140005344:	int3   
   140005345:	int3   
   140005346:	int3   
   140005347:	int3   
   140005348:	int3   
   140005349:	int3   
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	rex push rbx
   14000534e:	sub    rsp,0x20
   140005352:	cmp    DWORD PTR [rdx+0x20],0x0
   140005356:	mov    r8,QWORD PTR [rdx+0x28]
   14000535a:	lea    rax,[rip+0x5eff]        # 0x14000b260
   140005361:	mov    rbx,rdx
   140005364:	mov    rdx,QWORD PTR [rdx+0x18]
   140005368:	lea    rcx,[rip+0x5f41]        # 0x14000b2b0
   14000536f:	cmovne rcx,rax
   140005373:	call   0x140007c74
   140005378:	mov    ecx,DWORD PTR [rbx+0x40]
   14000537b:	xor    edx,edx
   14000537d:	or     ecx,0x806d0001
   140005383:	call   0x140008ae0
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	int3   
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	lea    rax,[rip+0xffffffffffffffa9]        # 0x14000534c
   1400053a3:	mov    QWORD PTR [rip+0x9fb6],rax        # 0x14000f360
   1400053aa:	mov    eax,0x1
   1400053af:	ret    
   1400053b0:	int3   
   1400053b1:	int3   
   1400053b2:	int3   
   1400053b3:	int3   
   1400053b4:	int3   
   1400053b5:	int3   
   1400053b6:	int3   
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	mov    r11,rsp
   1400053bf:	mov    QWORD PTR [r11+0x8],rsi
   1400053c3:	mov    QWORD PTR [r11+0x10],rdi
   1400053c7:	lea    rsi,[rip+0x5f42]        # 0x14000b310
   1400053ce:	lea    rdi,[rip+0x5f2b]        # 0x14000b300
   1400053d5:	mov    ecx,0x8
   1400053da:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400053dd:	mov    rsi,QWORD PTR [r11+0x8]
   1400053e1:	mov    rdi,QWORD PTR [r11+0x10]
   1400053e5:	mov    eax,0x0
   1400053ea:	setae  al
   1400053ed:	ret    
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	int3   
   1400053f1:	int3   
   1400053f2:	int3   
   1400053f3:	int3   
   1400053f4:	int3   
   1400053f5:	int3   
   1400053f6:	int3   
   1400053f7:	int3   
   1400053f8:	int3   
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	rex push rbx
   1400053fe:	sub    rsp,0x20
   140005402:	xor    edx,edx
   140005404:	mov    rbx,rcx
   140005407:	lea    r8d,[rdx+0x40]
   14000540b:	call   0x140007ebe
   140005410:	mov    rcx,rbx
   140005413:	mov    DWORD PTR [rbx],0x40
   140005419:	call   QWORD PTR [rip+0x4c71]        # 0x14000a090
   14000541f:	mov    rax,rbx
   140005422:	add    rsp,0x20
   140005426:	pop    rbx
   140005427:	ret    
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	int3   
   140005431:	int3   
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	mov    rax,QWORD PTR [rcx+0x8]
   140005440:	ret    
   140005441:	int3   
   140005442:	int3   
   140005443:	int3   
   140005444:	int3   
   140005445:	int3   
   140005446:	int3   
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	mov    rax,QWORD PTR [rcx+0x10]
   140005450:	ret    
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	int3   
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	mov    rax,QWORD PTR [rcx+0x30]
   140005460:	ret    
   140005461:	int3   
   140005462:	int3   
   140005463:	int3   
   140005464:	int3   
   140005465:	int3   
   140005466:	int3   
   140005467:	int3   
   140005468:	int3   
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	sub    rsp,0x158
   140005473:	mov    rax,QWORD PTR [rip+0x9d1e]        # 0x14000f198
   14000547a:	xor    rax,rsp
   14000547d:	mov    QWORD PTR [rsp+0x140],rax
   140005485:	lea    rcx,[rsp+0x20]
   14000548a:	xor    edx,edx
   14000548c:	mov    r8d,0x114
   140005492:	call   0x140007ebe
   140005497:	lea    rcx,[rsp+0x20]
   14000549c:	mov    DWORD PTR [rsp+0x20],0x114
   1400054a4:	call   QWORD PTR [rip+0x4bee]        # 0x14000a098
   1400054aa:	xor    eax,eax
   1400054ac:	cmp    DWORD PTR [rsp+0x30],0x1
   1400054b1:	je     0x1400054bb
   1400054b3:	cmp    DWORD PTR [rsp+0x30],0x2
   1400054b8:	sete   al
   1400054bb:	mov    rcx,QWORD PTR [rsp+0x140]
   1400054c3:	xor    rcx,rsp
   1400054c6:	call   0x140008020
   1400054cb:	add    rsp,0x158
   1400054d2:	ret    
   1400054d3:	int3   
   1400054d4:	int3   
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	sub    rsp,0x158
   1400054e3:	mov    rax,QWORD PTR [rip+0x9cae]        # 0x14000f198
   1400054ea:	xor    rax,rsp
   1400054ed:	mov    QWORD PTR [rsp+0x140],rax
   1400054f5:	cmp    DWORD PTR [rip+0x9e48],0x0        # 0x14000f344
   1400054fc:	je     0x140005506
   1400054fe:	mov    eax,DWORD PTR [rip+0x9e3c]        # 0x14000f340
   140005504:	jmp    0x14000556c
   140005506:	lea    rcx,[rsp+0x20]
   14000550b:	xor    edx,edx
   14000550d:	mov    r8d,0x114
   140005513:	call   0x140007ebe
   140005518:	lea    rcx,[rsp+0x20]
   14000551d:	mov    DWORD PTR [rsp+0x20],0x114
   140005525:	call   QWORD PTR [rip+0x4b6d]        # 0x14000a098
   14000552b:	cmp    DWORD PTR [rsp+0x30],0x2
   140005530:	mov    r11d,0x1
   140005536:	ja     0x140005541
   140005538:	jne    0x14000555f
   14000553a:	cmp    DWORD PTR [rsp+0x24],0x5
   14000553f:	jbe    0x14000554c
   140005541:	mov    eax,r11d
   140005544:	mov    DWORD PTR [rip+0x9df6],eax        # 0x14000f340
   14000554a:	jmp    0x140005565
   14000554c:	jne    0x14000555f
   14000554e:	mov    eax,DWORD PTR [rip+0x9dec]        # 0x14000f340
   140005554:	cmp    DWORD PTR [rsp+0x28],r11d
   140005559:	cmovae eax,r11d
   14000555d:	jmp    0x140005544
   14000555f:	mov    eax,DWORD PTR [rip+0x9ddb]        # 0x14000f340
   140005565:	mov    DWORD PTR [rip+0x9dd8],r11d        # 0x14000f344
   14000556c:	mov    rcx,QWORD PTR [rsp+0x140]
   140005574:	xor    rcx,rsp
   140005577:	call   0x140008020
   14000557c:	add    rsp,0x158
   140005583:	ret    
   140005584:	int3   
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	int3   
   140005589:	int3   
   14000558a:	int3   
   14000558b:	int3   
   14000558c:	rex push rbx
   14000558e:	sub    rsp,0x150
   140005595:	mov    rax,QWORD PTR [rip+0x9bfc]        # 0x14000f198
   14000559c:	xor    rax,rsp
   14000559f:	mov    QWORD PTR [rsp+0x140],rax
   1400055a7:	xor    ebx,ebx
   1400055a9:	cmp    DWORD PTR [rip+0x9d9d],ebx        # 0x14000f34c
   1400055af:	je     0x1400055b9
   1400055b1:	mov    eax,DWORD PTR [rip+0x9d91]        # 0x14000f348
   1400055b7:	jmp    0x14000562a
   1400055b9:	lea    rcx,[rsp+0x20]
   1400055be:	xor    edx,edx
   1400055c0:	mov    r8d,0x11c
   1400055c6:	call   0x140007ebe
   1400055cb:	mov    edx,0x2
   1400055d0:	mov    r8b,0x3
   1400055d3:	xor    ecx,ecx
   1400055d5:	mov    DWORD PTR [rsp+0x20],0x11c
   1400055dd:	mov    DWORD PTR [rsp+0x24],0x6
   1400055e5:	mov    DWORD PTR [rsp+0x28],edx
   1400055e9:	call   QWORD PTR [rip+0x4ab9]        # 0x14000a0a8
   1400055ef:	mov    r8b,0x3
   1400055f2:	mov    rcx,rax
   1400055f5:	mov    edx,0x1
   1400055fa:	call   QWORD PTR [rip+0x4aa8]        # 0x14000a0a8
   140005600:	lea    rcx,[rsp+0x20]
   140005605:	mov    edx,0x3
   14000560a:	mov    r8,rax
   14000560d:	call   QWORD PTR [rip+0x4a8d]        # 0x14000a0a0
   140005613:	mov    DWORD PTR [rip+0x9d2f],0x1        # 0x14000f34c
   14000561d:	test   eax,eax
   14000561f:	setne  bl
   140005622:	mov    DWORD PTR [rip+0x9d20],ebx        # 0x14000f348
   140005628:	mov    eax,ebx
   14000562a:	mov    rcx,QWORD PTR [rsp+0x140]
   140005632:	xor    rcx,rsp
   140005635:	call   0x140008020
   14000563a:	add    rsp,0x150
   140005641:	pop    rbx
   140005642:	ret    
   140005643:	int3   
   140005644:	int3   
   140005645:	int3   
   140005646:	int3   
   140005647:	int3   
   140005648:	int3   
   140005649:	int3   
   14000564a:	int3   
   14000564b:	int3   
   14000564c:	rex push rbx
   14000564e:	sub    rsp,0x150
   140005655:	mov    rax,QWORD PTR [rip+0x9b3c]        # 0x14000f198
   14000565c:	xor    rax,rsp
   14000565f:	mov    QWORD PTR [rsp+0x140],rax
   140005667:	xor    ebx,ebx
   140005669:	cmp    DWORD PTR [rip+0x9ce5],ebx        # 0x14000f354
   14000566f:	je     0x140005679
   140005671:	mov    eax,DWORD PTR [rip+0x9cd9]        # 0x14000f350
   140005677:	jmp    0x1400056c4
   140005679:	lea    rcx,[rsp+0x20]
   14000567e:	xor    edx,edx
   140005680:	mov    r8d,0x114
   140005686:	call   0x140007ebe
   14000568b:	lea    rcx,[rsp+0x20]
   140005690:	mov    DWORD PTR [rsp+0x20],0x114
   140005698:	call   QWORD PTR [rip+0x49fa]        # 0x14000a098
   14000569e:	cmp    DWORD PTR [rsp+0x30],0x2
   1400056a3:	mov    r11d,0x1
   1400056a9:	jne    0x1400056b5
   1400056ab:	cmp    DWORD PTR [rsp+0x24],0x6
   1400056b0:	jb     0x1400056b5
   1400056b2:	mov    ebx,r11d
   1400056b5:	mov    DWORD PTR [rip+0x9c95],ebx        # 0x14000f350
   1400056bb:	mov    DWORD PTR [rip+0x9c92],r11d        # 0x14000f354
   1400056c2:	mov    eax,ebx
   1400056c4:	mov    rcx,QWORD PTR [rsp+0x140]
   1400056cc:	xor    rcx,rsp
   1400056cf:	call   0x140008020
   1400056d4:	add    rsp,0x150
   1400056db:	pop    rbx
   1400056dc:	ret    
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	int3   
   1400056e1:	int3   
   1400056e2:	int3   
   1400056e3:	int3   
   1400056e4:	int3   
   1400056e5:	int3   
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	rex push rbx
   1400056ee:	sub    rsp,0x150
   1400056f5:	mov    rax,QWORD PTR [rip+0x9a9c]        # 0x14000f198
   1400056fc:	xor    rax,rsp
   1400056ff:	mov    QWORD PTR [rsp+0x140],rax
   140005707:	xor    ebx,ebx
   140005709:	cmp    DWORD PTR [rip+0x9c4d],ebx        # 0x14000f35c
   14000570f:	je     0x140005719
   140005711:	mov    eax,DWORD PTR [rip+0x9c41]        # 0x14000f358
   140005717:	jmp    0x14000577e
   140005719:	lea    rcx,[rsp+0x20]
   14000571e:	xor    edx,edx
   140005720:	mov    r8d,0x11c
   140005726:	call   0x140007ebe
   14000572b:	lea    rcx,[rsp+0x20]
   140005730:	mov    DWORD PTR [rsp+0x20],0x11c
   140005738:	call   QWORD PTR [rip+0x495a]        # 0x14000a098
   14000573e:	cmp    DWORD PTR [rsp+0x30],0x2
   140005743:	mov    r11d,0x1
   140005749:	jne    0x14000576f
   14000574b:	cmp    DWORD PTR [rsp+0x24],0x6
   140005750:	jne    0x14000576f
   140005752:	cmp    DWORD PTR [rsp+0x28],ebx
   140005756:	jne    0x14000576f
   140005758:	cmp    BYTE PTR [rsp+0x13a],r11b
   140005760:	jne    0x14000576f
   140005762:	cmp    WORD PTR [rsp+0x134],bx
   14000576a:	jne    0x14000576f
   14000576c:	mov    ebx,r11d
   14000576f:	mov    DWORD PTR [rip+0x9be3],ebx        # 0x14000f358
   140005775:	mov    DWORD PTR [rip+0x9be0],r11d        # 0x14000f35c
   14000577c:	mov    eax,ebx
   14000577e:	mov    rcx,QWORD PTR [rsp+0x140]
   140005786:	xor    rcx,rsp
   140005789:	call   0x140008020
   14000578e:	add    rsp,0x150
   140005795:	pop    rbx
   140005796:	ret    
   140005797:	int3   
   140005798:	int3   
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	int3   
   14000579d:	int3   
   14000579e:	int3   
   14000579f:	int3   
   1400057a0:	int3   
   1400057a1:	int3   
   1400057a2:	int3   
   1400057a3:	int3   
   1400057a4:	int3   
   1400057a5:	int3   
   1400057a6:	int3   
   1400057a7:	int3   
   1400057a8:	int3   
   1400057a9:	int3   
   1400057aa:	int3   
   1400057ab:	int3   
   1400057ac:	rex push rbx
   1400057ae:	sub    rsp,0x20
   1400057b2:	and    DWORD PTR [rsp+0x30],0x0
   1400057b7:	lea    rcx,[rip+0x5b72]        # 0x14000b330
   1400057be:	call   QWORD PTR [rip+0x4864]        # 0x14000a028
   1400057c4:	lea    rdx,[rip+0x5b55]        # 0x14000b320
   1400057cb:	mov    rcx,rax
   1400057ce:	call   QWORD PTR [rip+0x484c]        # 0x14000a020
   1400057d4:	mov    rbx,rax
   1400057d7:	test   rax,rax
   1400057da:	je     0x1400057ec
   1400057dc:	call   QWORD PTR [rip+0x48ce]        # 0x14000a0b0
   1400057e2:	lea    rdx,[rsp+0x30]
   1400057e7:	mov    rcx,rax
   1400057ea:	call   rbx
   1400057ec:	mov    eax,DWORD PTR [rsp+0x30]
   1400057f0:	add    rsp,0x20
   1400057f4:	pop    rbx
   1400057f5:	ret    
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	sub    rsp,0x58
   140005800:	xor    edx,edx
   140005802:	lea    rcx,[rsp+0x20]
   140005807:	lea    r8d,[rdx+0x30]
   14000580b:	call   0x140007ebe
   140005810:	lea    rcx,[rsp+0x20]
   140005815:	call   QWORD PTR [rip+0x489d]        # 0x14000a0b8
   14000581b:	xor    eax,eax
   14000581d:	cmp    WORD PTR [rsp+0x20],0x9
   140005823:	sete   al
   140005826:	add    rsp,0x58
   14000582a:	ret    
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	int3   
   140005831:	int3   
   140005832:	int3   
   140005833:	int3   
   140005834:	int3   
   140005835:	int3   
   140005836:	int3   
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	rex push rbx
   14000583e:	sub    rsp,0x40
   140005842:	xor    ebx,ebx
   140005844:	xor    r9d,r9d
   140005847:	xor    r8d,r8d
   14000584a:	mov    QWORD PTR [rsp+0x30],rbx
   14000584f:	mov    edx,0x40000000
   140005854:	mov    DWORD PTR [rsp+0x28],0x80
   14000585c:	mov    DWORD PTR [rsp+0x20],0x3
   140005864:	call   QWORD PTR [rip+0x485e]        # 0x14000a0c8
   14000586a:	cmp    rax,0xffffffffffffffff
   14000586e:	jne    0x140005880
   140005870:	call   QWORD PTR [rip+0x4792]        # 0x14000a008
   140005876:	cmp    eax,0x20
   140005879:	jne    0x140005889
   14000587b:	lea    ebx,[rax-0x1f]
   14000587e:	jmp    0x140005889
   140005880:	mov    rcx,rax
   140005883:	call   QWORD PTR [rip+0x4837]        # 0x14000a0c0
   140005889:	mov    eax,ebx
   14000588b:	add    rsp,0x40
   14000588f:	pop    rbx
   140005890:	ret    
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	int3   
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	mov    QWORD PTR [rsp+0x10],rbx
   1400058a1:	push   rsi
   1400058a2:	sub    rsp,0x450
   1400058a9:	mov    rax,QWORD PTR [rip+0x98e8]        # 0x14000f198
   1400058b0:	xor    rax,rsp
   1400058b3:	mov    QWORD PTR [rsp+0x440],rax
   1400058bb:	mov    rbx,rcx
   1400058be:	lea    rcx,[rsp+0x22]
   1400058c3:	xor    esi,esi
   1400058c5:	xor    edx,edx
   1400058c7:	mov    r8d,0x206
   1400058cd:	mov    WORD PTR [rsp+0x20],si
   1400058d2:	call   0x140007ebe
   1400058d7:	lea    rcx,[rsp+0x20]
   1400058dc:	mov    edx,0x104
   1400058e1:	call   QWORD PTR [rip+0x47e9]        # 0x14000a0d0
   1400058e7:	test   eax,eax
   1400058e9:	je     0x14000593c
   1400058eb:	cmp    eax,0x104
   1400058f0:	ja     0x14000593c
   1400058f2:	lea    rcx,[rsp+0x232]
   1400058fa:	xor    edx,edx
   1400058fc:	mov    r8d,0x206
   140005902:	mov    WORD PTR [rsp+0x230],si
   14000590a:	call   0x140007ebe
   14000590f:	lea    r8,[rsp+0x20]
   140005914:	lea    rdx,[rip+0x5f8d]        # 0x14000b8a8
   14000591b:	lea    rcx,[rsp+0x230]
   140005923:	mov    r9,rbx
   140005926:	call   QWORD PTR [rip+0x4a4c]        # 0x14000a378
   14000592c:	lea    rcx,[rsp+0x230]
   140005934:	call   QWORD PTR [rip+0x474e]        # 0x14000a088
   14000593a:	jmp    0x14000593e
   14000593c:	xor    eax,eax
   14000593e:	mov    rcx,QWORD PTR [rsp+0x440]
   140005946:	xor    rcx,rsp
   140005949:	call   0x140008020
   14000594e:	mov    rbx,QWORD PTR [rsp+0x468]
   140005956:	add    rsp,0x450
   14000595d:	pop    rsi
   14000595e:	ret    
   14000595f:	int3   
   140005960:	int3   
   140005961:	int3   
   140005962:	int3   
   140005963:	int3   
   140005964:	int3   
   140005965:	int3   
   140005966:	int3   
   140005967:	int3   
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	sub    rsp,0x58
   140005970:	test   rcx,rcx
   140005973:	jne    0x140005979
   140005975:	xor    eax,eax
   140005977:	jmp    0x1400059c9
   140005979:	mov    rax,QWORD PTR [rsp+0xa8]
   140005981:	mov    QWORD PTR [rsp+0x48],rax
   140005986:	mov    rax,QWORD PTR [rsp+0xa0]
   14000598e:	mov    QWORD PTR [rsp+0x40],rax
   140005993:	mov    rax,QWORD PTR [rsp+0x98]
   14000599b:	mov    QWORD PTR [rsp+0x38],rax
   1400059a0:	mov    rax,QWORD PTR [rsp+0x90]
   1400059a8:	mov    QWORD PTR [rsp+0x30],rax
   1400059ad:	mov    eax,DWORD PTR [rsp+0x88]
   1400059b4:	mov    DWORD PTR [rsp+0x28],eax
   1400059b8:	mov    eax,DWORD PTR [rsp+0x80]
   1400059bf:	mov    DWORD PTR [rsp+0x20],eax
   1400059c3:	call   QWORD PTR [rip+0x470f]        # 0x14000a0d8
   1400059c9:	add    rsp,0x58
   1400059cd:	ret    
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	int3   
   1400059d1:	int3   
   1400059d2:	int3   
   1400059d3:	int3   
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	sub    rsp,0x68
   1400059e0:	test   rdx,rdx
   1400059e3:	jne    0x1400059e9
   1400059e5:	xor    eax,eax
   1400059e7:	jmp    0x140005a46
   1400059e9:	mov    rax,QWORD PTR [rsp+0xc0]
   1400059f1:	mov    QWORD PTR [rsp+0x50],rax
   1400059f6:	mov    rax,QWORD PTR [rsp+0xb8]
   1400059fe:	mov    QWORD PTR [rsp+0x48],rax
   140005a03:	mov    rax,QWORD PTR [rsp+0xb0]
   140005a0b:	mov    QWORD PTR [rsp+0x40],rax
   140005a10:	mov    rax,QWORD PTR [rsp+0xa8]
   140005a18:	mov    QWORD PTR [rsp+0x38],rax
   140005a1d:	mov    eax,DWORD PTR [rsp+0xa0]
   140005a24:	mov    DWORD PTR [rsp+0x30],eax
   140005a28:	mov    eax,DWORD PTR [rsp+0x98]
   140005a2f:	mov    DWORD PTR [rsp+0x28],eax
   140005a33:	mov    rax,QWORD PTR [rsp+0x90]
   140005a3b:	mov    QWORD PTR [rsp+0x20],rax
   140005a40:	call   QWORD PTR [rip+0x97da]        # 0x14000f220
   140005a46:	add    rsp,0x68
   140005a4a:	ret    
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	int3   
   140005a51:	int3   
   140005a52:	int3   
   140005a53:	int3   
   140005a54:	int3   
   140005a55:	int3   
   140005a56:	int3   
   140005a57:	int3   
   140005a58:	int3   
   140005a59:	int3   
   140005a5a:	int3   
   140005a5b:	int3   
   140005a5c:	mov    QWORD PTR [rsp+0x8],rbx
   140005a61:	mov    QWORD PTR [rsp+0x10],rsi
   140005a66:	push   rbp
   140005a67:	push   rdi
   140005a68:	push   r12
   140005a6a:	lea    rbp,[rsp-0x47]
   140005a6f:	sub    rsp,0xf0
   140005a76:	mov    rsi,rcx
   140005a79:	mov    ebx,r8d
   140005a7c:	mov    rdi,rdx
   140005a7f:	mov    r12d,0x68
   140005a85:	lea    rcx,[rbp-0x29]
   140005a89:	xor    edx,edx
   140005a8b:	mov    r8d,r12d
   140005a8e:	call   0x140007ebe
   140005a93:	xor    r11d,r11d
   140005a96:	mov    DWORD PTR [rbp-0x29],r12d
   140005a9a:	xor    r12d,r12d
   140005a9d:	mov    QWORD PTR [rbp-0x49],r11
   140005aa1:	mov    QWORD PTR [rbp-0x41],r11
   140005aa5:	mov    QWORD PTR [rbp-0x39],r11
   140005aa9:	mov    DWORD PTR [rbp+0x13],0x1
   140005ab0:	mov    WORD PTR [rbp+0x17],r12w
   140005ab5:	call   QWORD PTR [rip+0x45f5]        # 0x14000a0b0
   140005abb:	lea    r8,[rbp+0x7f]
   140005abf:	mov    edx,0x2000000
   140005ac4:	mov    rcx,rax
   140005ac7:	call   QWORD PTR [rip+0x975b]        # 0x14000f228
   140005acd:	test   eax,eax
   140005acf:	je     0x140005b3c
   140005ad1:	mov    rcx,QWORD PTR [rbp+0x7f]
   140005ad5:	lea    rax,[rbp-0x49]
   140005ad9:	xor    r9d,r9d
   140005adc:	mov    QWORD PTR [rsp+0x50],rax
   140005ae1:	lea    rax,[rbp-0x29]
   140005ae5:	mov    r8,rdi
   140005ae8:	mov    QWORD PTR [rsp+0x48],rax
   140005aed:	mov    QWORD PTR [rsp+0x40],r12
   140005af2:	mov    QWORD PTR [rsp+0x38],r12
   140005af7:	mov    DWORD PTR [rsp+0x30],0x8000008
   140005aff:	mov    rdx,rsi
   140005b02:	mov    DWORD PTR [rsp+0x28],r12d
   140005b07:	mov    QWORD PTR [rsp+0x20],r12
   140005b0c:	call   0x1400059dc
   140005b11:	test   eax,eax
   140005b13:	je     0x140005b3c
   140005b15:	mov    rcx,QWORD PTR [rbp-0x49]
   140005b19:	mov    edx,ebx
   140005b1b:	call   QWORD PTR [rip+0x45bf]        # 0x14000a0e0
   140005b21:	mov    rcx,QWORD PTR [rbp-0x49]
   140005b25:	call   QWORD PTR [rip+0x4595]        # 0x14000a0c0
   140005b2b:	mov    rcx,QWORD PTR [rbp-0x41]
   140005b2f:	call   QWORD PTR [rip+0x458b]        # 0x14000a0c0
   140005b35:	lea    eax,[r12+0x1]
   140005b3a:	jmp    0x140005b3e
   140005b3c:	xor    eax,eax
   140005b3e:	lea    r11,[rsp+0xf0]
   140005b46:	mov    rbx,QWORD PTR [r11+0x20]
   140005b4a:	mov    rsi,QWORD PTR [r11+0x28]
   140005b4e:	mov    rsp,r11
   140005b51:	pop    r12
   140005b53:	pop    rdi
   140005b54:	pop    rbp
   140005b55:	ret    
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	int3   
   140005b59:	int3   
   140005b5a:	int3   
   140005b5b:	int3   
   140005b5c:	mov    rax,rsp
   140005b5f:	mov    QWORD PTR [rax+0x10],rbx
   140005b63:	mov    QWORD PTR [rax+0x18],rsi
   140005b67:	mov    QWORD PTR [rax+0x20],rdi
   140005b6b:	push   rbp
   140005b6c:	lea    rbp,[rax-0x2758]
   140005b73:	mov    eax,0x2850
   140005b78:	call   0x140008050
   140005b7d:	sub    rsp,rax
   140005b80:	mov    rax,QWORD PTR [rip+0x9611]        # 0x14000f198
   140005b87:	xor    rax,rsp
   140005b8a:	mov    QWORD PTR [rbp+0x2740],rax
   140005b91:	mov    rbx,rcx
   140005b94:	lea    rcx,[rbp+0x1742]
   140005b9b:	xor    edi,edi
   140005b9d:	xor    edx,edx
   140005b9f:	mov    r8d,0xffe
   140005ba5:	mov    WORD PTR [rbp+0x1740],di
   140005bac:	call   0x140007ebe
   140005bb1:	mov    esi,0x800
   140005bb6:	lea    r9,[rip+0x5d03]        # 0x14000b8c0
   140005bbd:	lea    r8,[rip+0x5d54]        # 0x14000b918
   140005bc4:	lea    rcx,[rbp+0x1740]
   140005bcb:	mov    edx,esi
   140005bcd:	mov    QWORD PTR [rsp+0x20],rbx
   140005bd2:	call   QWORD PTR [rip+0x4648]        # 0x14000a220
   140005bd8:	lea    r11,[rsp+0x38]
   140005bdd:	lea    rdx,[rbp+0x1740]
   140005be4:	mov    r9d,0x20019
   140005bea:	xor    r8d,r8d
   140005bed:	mov    rcx,0xffffffff80000002
   140005bf4:	mov    QWORD PTR [rsp+0x20],r11
   140005bf9:	call   QWORD PTR [rip+0x95d1]        # 0x14000f1d0
   140005bff:	test   eax,eax
   140005c01:	jne    0x140005d16
   140005c07:	mov    rcx,QWORD PTR [rsp+0x38]
   140005c0c:	lea    rax,[rsp+0x30]
   140005c11:	lea    rdx,[rip+0x5d10]        # 0x14000b928
   140005c18:	mov    QWORD PTR [rsp+0x28],rax
   140005c1d:	lea    rax,[rsp+0x40]
   140005c22:	xor    r9d,r9d
   140005c25:	xor    r8d,r8d
   140005c28:	mov    DWORD PTR [rsp+0x30],esi
   140005c2c:	mov    QWORD PTR [rsp+0x20],rax
   140005c31:	call   QWORD PTR [rip+0x95e1]        # 0x14000f218
   140005c37:	mov    rcx,QWORD PTR [rsp+0x38]
   140005c3c:	mov    ebx,eax
   140005c3e:	call   QWORD PTR [rip+0x9594]        # 0x14000f1d8
   140005c44:	test   ebx,ebx
   140005c46:	jne    0x140005d16
   140005c4c:	lea    rcx,[rbp+0x742]
   140005c53:	xor    edx,edx
   140005c55:	mov    r8d,0xffe
   140005c5b:	mov    WORD PTR [rbp+0x740],di
   140005c62:	call   0x140007ebe
   140005c67:	lea    r11,[rip+0x5cd2]        # 0x14000b940
   140005c6e:	lea    r9,[rsp+0x40]
   140005c73:	lea    r8,[rip+0x5ce6]        # 0x14000b960
   140005c7a:	lea    rcx,[rbp+0x740]
   140005c81:	mov    edx,esi
   140005c83:	mov    QWORD PTR [rsp+0x20],r11
   140005c88:	call   QWORD PTR [rip+0x4592]        # 0x14000a220
   140005c8e:	lea    rcx,[rbp+0x740]
   140005c95:	call   QWORD PTR [rip+0x95c5]        # 0x14000f260
   140005c9b:	test   eax,eax
   140005c9d:	je     0x140005d16
   140005c9f:	lea    rax,[rip+0x5cca]        # 0x14000b970
   140005ca6:	lea    r9,[rsp+0x40]
   140005cab:	lea    r8,[rip+0x5ce6]        # 0x14000b998
   140005cb2:	lea    rcx,[rbp+0x740]
   140005cb9:	mov    edx,esi
   140005cbb:	mov    QWORD PTR [rsp+0x20],rax
   140005cc0:	call   QWORD PTR [rip+0x455a]        # 0x14000a220
   140005cc6:	lea    rcx,[rbp+0x740]
   140005ccd:	call   QWORD PTR [rip+0x958d]        # 0x14000f260
   140005cd3:	lea    r9,[rsp+0x40]
   140005cd8:	lea    r8,[rip+0x5cf1]        # 0x14000b9d0
   140005cdf:	mov    ebx,eax
   140005ce1:	lea    rax,[rip+0x5cc0]        # 0x14000b9a8
   140005ce8:	lea    rcx,[rbp+0x740]
   140005cef:	mov    edx,esi
   140005cf1:	mov    QWORD PTR [rsp+0x20],rax
   140005cf6:	call   QWORD PTR [rip+0x4524]        # 0x14000a220
   140005cfc:	lea    rcx,[rbp+0x740]
   140005d03:	call   QWORD PTR [rip+0x9557]        # 0x14000f260
   140005d09:	test   ebx,ebx
   140005d0b:	jne    0x140005d11
   140005d0d:	test   eax,eax
   140005d0f:	je     0x140005d16
   140005d11:	mov    edi,0x1
   140005d16:	mov    eax,edi
   140005d18:	mov    rcx,QWORD PTR [rbp+0x2740]
   140005d1f:	xor    rcx,rsp
   140005d22:	call   0x140008020
   140005d27:	lea    r11,[rsp+0x2850]
   140005d2f:	mov    rbx,QWORD PTR [r11+0x18]
   140005d33:	mov    rsi,QWORD PTR [r11+0x20]
   140005d37:	mov    rdi,QWORD PTR [r11+0x28]
   140005d3b:	mov    rsp,r11
   140005d3e:	pop    rbp
   140005d3f:	ret    
   140005d40:	int3   
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	sub    rsp,0x58
   140005d50:	lea    rax,[rip+0x5c89]        # 0x14000b9e0
   140005d57:	mov    QWORD PTR [rsp+0x40],rax
   140005d5c:	mov    DWORD PTR [rsp+0x38],r9d
   140005d61:	mov    DWORD PTR [rsp+0x30],r8d
   140005d66:	mov    DWORD PTR [rsp+0x28],edx
   140005d6a:	mov    rdx,QWORD PTR [rsp+0x88]
   140005d72:	mov    DWORD PTR [rsp+0x20],ecx
   140005d76:	mov    rcx,QWORD PTR [rsp+0x80]
   140005d7e:	lea    r9,[rip+0x5c7b]        # 0x14000ba00
   140005d85:	lea    r8,[rip+0x5c8c]        # 0x14000ba18
   140005d8c:	call   QWORD PTR [rip+0x448e]        # 0x14000a220
   140005d92:	add    rsp,0x58
   140005d96:	ret    
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	int3   
   140005da9:	int3   
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	sub    rsp,0x58
   140005db0:	lea    rax,[rip+0x5c91]        # 0x14000ba48
   140005db7:	mov    QWORD PTR [rsp+0x40],rax
   140005dbc:	mov    DWORD PTR [rsp+0x38],r9d
   140005dc1:	mov    DWORD PTR [rsp+0x30],r8d
   140005dc6:	mov    DWORD PTR [rsp+0x28],edx
   140005dca:	mov    rdx,QWORD PTR [rsp+0x88]
   140005dd2:	mov    DWORD PTR [rsp+0x20],ecx
   140005dd6:	mov    rcx,QWORD PTR [rsp+0x80]
   140005dde:	lea    r9,[rip+0x5c83]        # 0x14000ba68
   140005de5:	lea    r8,[rip+0x5c94]        # 0x14000ba80
   140005dec:	call   QWORD PTR [rip+0x442e]        # 0x14000a220
   140005df2:	add    rsp,0x58
   140005df6:	ret    
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	int3   
   140005e01:	int3   
   140005e02:	int3   
   140005e03:	int3   
   140005e04:	int3   
   140005e05:	int3   
   140005e06:	int3   
   140005e07:	int3   
   140005e08:	int3   
   140005e09:	int3   
   140005e0a:	int3   
   140005e0b:	int3   
   140005e0c:	sub    rsp,0x58
   140005e10:	lea    rax,[rip+0x5c99]        # 0x14000bab0
   140005e17:	mov    QWORD PTR [rsp+0x40],rax
   140005e1c:	mov    DWORD PTR [rsp+0x38],r9d
   140005e21:	mov    DWORD PTR [rsp+0x30],r8d
   140005e26:	mov    DWORD PTR [rsp+0x28],edx
   140005e2a:	mov    rdx,QWORD PTR [rsp+0x88]
   140005e32:	mov    DWORD PTR [rsp+0x20],ecx
   140005e36:	mov    rcx,QWORD PTR [rsp+0x80]
   140005e3e:	lea    r9,[rip+0x5c8b]        # 0x14000bad0
   140005e45:	lea    r8,[rip+0x5c9c]        # 0x14000bae8
   140005e4c:	call   QWORD PTR [rip+0x43ce]        # 0x14000a220
   140005e52:	add    rsp,0x58
   140005e56:	ret    
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	int3   
   140005e61:	int3   
   140005e62:	int3   
   140005e63:	int3   
   140005e64:	int3   
   140005e65:	int3   
   140005e66:	int3   
   140005e67:	int3   
   140005e68:	int3   
   140005e69:	int3   
   140005e6a:	int3   
   140005e6b:	int3   
   140005e6c:	mov    QWORD PTR [rsp+0x10],rbx
   140005e71:	mov    QWORD PTR [rsp+0x20],rsi
   140005e76:	push   rbp
   140005e77:	push   rdi
   140005e78:	push   r12
   140005e7a:	lea    rbp,[rsp-0xf50]
   140005e82:	mov    eax,0x1050
   140005e87:	call   0x140008050
   140005e8c:	sub    rsp,rax
   140005e8f:	mov    rax,QWORD PTR [rip+0x9302]        # 0x14000f198
   140005e96:	xor    rax,rsp
   140005e99:	mov    QWORD PTR [rbp+0xf40],rax
   140005ea0:	mov    rbx,rcx
   140005ea3:	mov    edi,r8d
   140005ea6:	mov    r12,rdx
   140005ea9:	lea    rcx,[rsp+0x42]
   140005eae:	xor    esi,esi
   140005eb0:	xor    edx,edx
   140005eb2:	mov    r8d,0x7fe
   140005eb8:	mov    WORD PTR [rsp+0x40],si
   140005ebd:	call   0x140007ebe
   140005ec2:	lea    r8,[rip+0x5ca7]        # 0x14000bb70
   140005ec9:	lea    rcx,[rsp+0x40]
   140005ece:	mov    r9,rbx
   140005ed1:	mov    edx,0x400
   140005ed6:	call   QWORD PTR [rip+0x4344]        # 0x14000a220
   140005edc:	lea    rax,[rsp+0x30]
   140005ee1:	neg    edi
   140005ee3:	sbb    rcx,rcx
   140005ee6:	lea    rdx,[rsp+0x40]
   140005eeb:	mov    r9d,0x20019
   140005ef1:	add    rcx,0xffffffff80000002
   140005ef8:	xor    r8d,r8d
   140005efb:	mov    QWORD PTR [rsp+0x20],rax
   140005f00:	call   QWORD PTR [rip+0x92ca]        # 0x14000f1d0
   140005f06:	test   eax,eax
   140005f08:	je     0x140005f13
   140005f0a:	cmp    eax,0x2
   140005f0d:	sete   sil
   140005f11:	jmp    0x140005f78
   140005f13:	mov    rcx,QWORD PTR [rsp+0x30]
   140005f18:	lea    r9,[rsp+0x38]
   140005f1d:	lea    r8,[rbp+0x740]
   140005f24:	lea    rdx,[rip+0x5239]        # 0x14000b164
   140005f2b:	mov    DWORD PTR [rsp+0x38],0x800
   140005f33:	call   QWORD PTR [rip+0x92f7]        # 0x14000f230
   140005f39:	mov    rcx,QWORD PTR [rsp+0x30]
   140005f3e:	test   eax,eax
   140005f40:	je     0x140005f4c
   140005f42:	call   QWORD PTR [rip+0x9290]        # 0x14000f1d8
   140005f48:	xor    eax,eax
   140005f4a:	jmp    0x140005f7a
   140005f4c:	call   QWORD PTR [rip+0x9286]        # 0x14000f1d8
   140005f52:	lea    rdx,[rbp+0x740]
   140005f59:	sub    rdx,r12
   140005f5c:	movzx  eax,WORD PTR [r12]
   140005f61:	movzx  ecx,WORD PTR [r12+rdx*1]
   140005f66:	sub    eax,ecx
   140005f68:	jne    0x140005f72
   140005f6a:	add    r12,0x2
   140005f6e:	test   ecx,ecx
   140005f70:	jne    0x140005f5c
   140005f72:	test   eax,eax
   140005f74:	setne  sil
   140005f78:	mov    eax,esi
   140005f7a:	mov    rcx,QWORD PTR [rbp+0xf40]
   140005f81:	xor    rcx,rsp
   140005f84:	call   0x140008020
   140005f89:	lea    r11,[rsp+0x1050]
   140005f91:	mov    rbx,QWORD PTR [r11+0x28]
   140005f95:	mov    rsi,QWORD PTR [r11+0x38]
   140005f99:	mov    rsp,r11
   140005f9c:	pop    r12
   140005f9e:	pop    rdi
   140005f9f:	pop    rbp
   140005fa0:	ret    
   140005fa1:	int3   
   140005fa2:	int3   
   140005fa3:	int3   
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	rex push rbp
   140005fae:	push   rbx
   140005faf:	push   rsi
   140005fb0:	push   rdi
   140005fb1:	push   r12
   140005fb3:	push   r13
   140005fb5:	push   r14
   140005fb7:	push   r15
   140005fb9:	lea    rbp,[rsp-0x17]
   140005fbe:	sub    rsp,0xb8
   140005fc5:	mov    rax,QWORD PTR [rip+0x91cc]        # 0x14000f198
   140005fcc:	xor    rax,rsp
   140005fcf:	mov    QWORD PTR [rbp+0x7],rax
   140005fd3:	mov    r14,QWORD PTR [rbp+0x7f]
   140005fd7:	xor    eax,eax
   140005fd9:	xor    esi,esi
   140005fdb:	mov    QWORD PTR [rsp+0x20],r9
   140005fe0:	mov    r13,r8
   140005fe3:	mov    rbx,rdx
   140005fe6:	mov    WORD PTR [rbp-0x79],si
   140005fea:	mov    QWORD PTR [rbp-0x77],rax
   140005fee:	mov    QWORD PTR [rbp-0x6f],rax
   140005ff2:	mov    QWORD PTR [rbp-0x67],rax
   140005ff6:	mov    DWORD PTR [rbp-0x5f],eax
   140005ff9:	mov    WORD PTR [rbp-0x5b],ax
   140005ffd:	mov    WORD PTR [rbp-0x59],si
   140006001:	mov    QWORD PTR [rbp-0x57],rax
   140006005:	mov    QWORD PTR [rbp-0x4f],rax
   140006009:	mov    QWORD PTR [rbp-0x47],rax
   14000600d:	mov    DWORD PTR [rbp-0x3f],eax
   140006010:	mov    WORD PTR [rbp-0x3b],ax
   140006014:	mov    WORD PTR [rbp-0x39],si
   140006018:	mov    QWORD PTR [rbp-0x37],rax
   14000601c:	mov    QWORD PTR [rbp-0x2f],rax
   140006020:	mov    QWORD PTR [rbp-0x27],rax
   140006024:	mov    DWORD PTR [rbp-0x1f],eax
   140006027:	mov    WORD PTR [rbp-0x1b],ax
   14000602b:	mov    WORD PTR [rbp-0x19],si
   14000602f:	mov    QWORD PTR [rbp-0x17],rax
   140006033:	mov    QWORD PTR [rbp-0xf],rax
   140006037:	mov    QWORD PTR [rbp-0x7],rax
   14000603b:	mov    DWORD PTR [rbp+0x1],eax
   14000603e:	mov    WORD PTR [rbp+0x5],ax
   140006042:	mov    rdi,rcx
   140006045:	test   rcx,rcx
   140006048:	je     0x140006208
   14000604e:	call   QWORD PTR [rip+0x3fdc]        # 0x14000a030
   140006054:	lea    r12d,[rsi+0x10]
   140006058:	lea    r8,[rip+0x5115]        # 0x14000b174
   14000605f:	lea    rcx,[rbp-0x79]
   140006063:	mov    edx,r12d
   140006066:	movsxd r15,eax
   140006069:	call   QWORD PTR [rip+0x41c1]        # 0x14000a230
   14000606f:	lea    r8,[rip+0x512e]        # 0x14000b1a4
   140006076:	lea    rcx,[rbp-0x59]
   14000607a:	mov    edx,r12d
   14000607d:	call   QWORD PTR [rip+0x41ad]        # 0x14000a230
   140006083:	lea    r8,[rip+0x5132]        # 0x14000b1bc
   14000608a:	lea    rcx,[rbp-0x39]
   14000608e:	mov    edx,r12d
   140006091:	call   QWORD PTR [rip+0x4199]        # 0x14000a230
   140006097:	lea    r8,[rip+0x5136]        # 0x14000b1d4
   14000609e:	lea    rcx,[rbp-0x19]
   1400060a2:	mov    edx,r12d
   1400060a5:	call   QWORD PTR [rip+0x4185]        # 0x14000a230
   1400060ab:	lea    rcx,[rbp-0x79]
   1400060af:	mov    r8,rdi
   1400060b2:	mov    edx,r12d
   1400060b5:	call   QWORD PTR [rip+0x4175]        # 0x14000a230
   1400060bb:	mov    r11d,esi
   1400060be:	mov    eax,esi
   1400060c0:	test   r15d,r15d
   1400060c3:	jle    0x1400060e1
   1400060c5:	cmp    WORD PTR [rdi+rax*2],0x2e
   1400060ca:	je     0x1400060d9
   1400060cc:	inc    rax
   1400060cf:	inc    r11d
   1400060d2:	cmp    rax,r15
   1400060d5:	jl     0x1400060c5
   1400060d7:	jmp    0x1400060e1
   1400060d9:	movsxd rax,r11d
   1400060dc:	mov    WORD PTR [rbp+rax*2-0x79],si
   1400060e1:	lea    rcx,[rbp-0x79]
   1400060e5:	call   QWORD PTR [rip+0x413d]        # 0x14000a228
   1400060eb:	lea    rcx,[rbp-0x79]
   1400060ef:	mov    DWORD PTR [rbx],eax
   1400060f1:	call   QWORD PTR [rip+0x3f39]        # 0x14000a030
   1400060f7:	lea    rcx,[rbp-0x59]
   1400060fb:	lea    ebx,[rax+0x1]
   1400060fe:	mov    rdx,r12
   140006101:	movsxd rsi,ebx
   140006104:	lea    r8,[rdi+rsi*2]
   140006108:	call   QWORD PTR [rip+0x4122]        # 0x14000a230
   14000610e:	mov    rax,rsi
   140006111:	cmp    rsi,r15
   140006114:	jge    0x140006136
   140006116:	cmp    WORD PTR [rdi+rax*2],0x2e
   14000611b:	je     0x140006129
   14000611d:	inc    rax
   140006120:	inc    ebx
   140006122:	cmp    rax,r15
   140006125:	jl     0x140006116
   140006127:	jmp    0x140006136
   140006129:	movsxd rax,ebx
   14000612c:	sub    rax,rsi
   14000612f:	xor    ecx,ecx
   140006131:	mov    WORD PTR [rbp+rax*2-0x59],cx
   140006136:	lea    rcx,[rbp-0x59]
   14000613a:	call   QWORD PTR [rip+0x40e8]        # 0x14000a228
   140006140:	lea    rcx,[rbp-0x59]
   140006144:	mov    DWORD PTR [r13+0x0],eax
   140006148:	call   QWORD PTR [rip+0x3ee2]        # 0x14000a030
   14000614e:	lea    rcx,[rbp-0x79]
   140006152:	mov    ebx,eax
   140006154:	call   QWORD PTR [rip+0x3ed6]        # 0x14000a030
   14000615a:	lea    ebx,[rbx+rax*1+0x2]
   14000615e:	cmp    ebx,r15d
   140006161:	jge    0x140006203
   140006167:	movsxd rsi,ebx
   14000616a:	lea    rcx,[rbp-0x39]
   14000616e:	mov    rdx,r12
   140006171:	lea    r8,[rdi+rsi*2]
   140006175:	mov    r13,r12
   140006178:	call   QWORD PTR [rip+0x40b2]        # 0x14000a230
   14000617e:	mov    rax,rsi
   140006181:	cmp    rsi,r15
   140006184:	jge    0x1400061a6
   140006186:	cmp    WORD PTR [rdi+rax*2],0x5f
   14000618b:	je     0x140006199
   14000618d:	inc    rax
   140006190:	inc    ebx
   140006192:	cmp    rax,r15
   140006195:	jl     0x140006186
   140006197:	jmp    0x1400061a6
   140006199:	movsxd rax,ebx
   14000619c:	sub    rax,rsi
   14000619f:	xor    ecx,ecx
   1400061a1:	mov    WORD PTR [rbp+rax*2-0x39],cx
   1400061a6:	lea    rcx,[rbp-0x39]
   1400061aa:	call   QWORD PTR [rip+0x4078]        # 0x14000a228
   1400061b0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400061b5:	mov    DWORD PTR [rcx],eax
   1400061b7:	lea    rcx,[rbp-0x39]
   1400061bb:	call   QWORD PTR [rip+0x3e6f]        # 0x14000a030
   1400061c1:	lea    rcx,[rbp-0x59]
   1400061c5:	mov    ebx,eax
   1400061c7:	call   QWORD PTR [rip+0x3e63]        # 0x14000a030
   1400061cd:	lea    rcx,[rbp-0x79]
   1400061d1:	add    ebx,eax
   1400061d3:	call   QWORD PTR [rip+0x3e57]        # 0x14000a030
   1400061d9:	lea    ecx,[rax+rbx*1+0x3]
   1400061dd:	cmp    ecx,r15d
   1400061e0:	jge    0x1400061f6
   1400061e2:	movsxd rax,ecx
   1400061e5:	lea    rcx,[rbp-0x19]
   1400061e9:	mov    rdx,r13
   1400061ec:	lea    r8,[rdi+rax*2]
   1400061f0:	call   QWORD PTR [rip+0x403a]        # 0x14000a230
   1400061f6:	lea    rcx,[rbp-0x19]
   1400061fa:	call   QWORD PTR [rip+0x4028]        # 0x14000a228
   140006200:	mov    DWORD PTR [r14],eax
   140006203:	mov    eax,0x1
   140006208:	mov    rcx,QWORD PTR [rbp+0x7]
   14000620c:	xor    rcx,rsp
   14000620f:	call   0x140008020
   140006214:	add    rsp,0xb8
   14000621b:	pop    r15
   14000621d:	pop    r14
   14000621f:	pop    r13
   140006221:	pop    r12
   140006223:	pop    rdi
   140006224:	pop    rsi
   140006225:	pop    rbx
   140006226:	pop    rbp
   140006227:	ret    
   140006228:	int3   
   140006229:	int3   
   14000622a:	int3   
   14000622b:	int3   
   14000622c:	int3   
   14000622d:	int3   
   14000622e:	int3   
   14000622f:	int3   
   140006230:	int3   
   140006231:	int3   
   140006232:	int3   
   140006233:	int3   
   140006234:	int3   
   140006235:	int3   
   140006236:	int3   
   140006237:	int3   
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	mov    rax,rsp
   14000623f:	mov    QWORD PTR [rax+0x8],rcx
   140006243:	push   rdi
   140006244:	sub    rsp,0x50
   140006248:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006251:	mov    QWORD PTR [rax+0x18],rbx
   140006255:	mov    QWORD PTR [rax+0x20],rsi
   140006259:	mov    rsi,rcx
   14000625c:	xor    edi,edi
   14000625e:	mov    WORD PTR [rcx],di
   140006261:	mov    DWORD PTR [rax-0x38],0x104
   140006268:	mov    r9,rcx
   14000626b:	xor    r8d,r8d
   14000626e:	xor    edx,edx
   140006270:	lea    rcx,[rip+0x4889]        # 0x14000ab00
   140006277:	call   QWORD PTR [rip+0x8fcb]        # 0x14000f248
   14000627d:	mov    ebx,eax
   14000627f:	test   eax,eax
   140006281:	jns    0x14000629b
   140006283:	mov    edx,eax
   140006285:	lea    rcx,[rip+0x5194]        # 0x14000b420
   14000628c:	call   0x140007c74
   140006291:	xor    edx,edx
   140006293:	mov    ecx,ebx
   140006295:	call   0x140008ae0
   14000629a:	nop
   14000629b:	jmp    0x1400062a6
   14000629d:	mov    rsi,QWORD PTR [rsp+0x60]
   1400062a2:	mov    ebx,DWORD PTR [rsp+0x68]
   1400062a6:	test   ebx,ebx
   1400062a8:	jns    0x140006327
   1400062aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400062af:	xor    r9d,r9d
   1400062b2:	xor    r8d,r8d
   1400062b5:	lea    edx,[r9+0x1a]
   1400062b9:	xor    ecx,ecx
   1400062bb:	call   QWORD PTR [rip+0x8f7f]        # 0x14000f240
   1400062c1:	mov    ebx,eax
   1400062c3:	test   eax,eax
   1400062c5:	jns    0x1400062df
   1400062c7:	mov    edx,eax
   1400062c9:	lea    rcx,[rip+0x5220]        # 0x14000b4f0
   1400062d0:	call   0x140007c74
   1400062d5:	xor    edx,edx
   1400062d7:	mov    ecx,ebx
   1400062d9:	call   0x140008ae0
   1400062de:	nop
   1400062df:	jmp    0x1400062ea
   1400062e1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400062e6:	mov    ebx,DWORD PTR [rsp+0x68]
   1400062ea:	test   ebx,ebx
   1400062ec:	jns    0x140006327
   1400062ee:	mov    r9d,0x1
   1400062f4:	lea    r8d,[r9+0x19]
   1400062f8:	mov    rdx,rsi
   1400062fb:	xor    ecx,ecx
   1400062fd:	call   QWORD PTR [rip+0x8f4d]        # 0x14000f250
   140006303:	mov    ebx,eax
   140006305:	test   eax,eax
   140006307:	jns    0x140006321
   140006309:	mov    edx,eax
   14000630b:	lea    rcx,[rip+0x528e]        # 0x14000b5a0
   140006312:	call   0x140007c74
   140006317:	xor    edx,edx
   140006319:	mov    ecx,ebx
   14000631b:	call   0x140008ae0
   140006320:	nop
   140006321:	jmp    0x140006327
   140006323:	mov    ebx,DWORD PTR [rsp+0x68]
   140006327:	mov    eax,ebx
   140006329:	mov    rbx,QWORD PTR [rsp+0x70]
   14000632e:	mov    rsi,QWORD PTR [rsp+0x78]
   140006333:	add    rsp,0x50
   140006337:	pop    rdi
   140006338:	ret    
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	int3   
   140006341:	int3   
   140006342:	int3   
   140006343:	int3   
   140006344:	int3   
   140006345:	int3   
   140006346:	int3   
   140006347:	int3   
   140006348:	int3   
   140006349:	int3   
   14000634a:	int3   
   14000634b:	int3   
   14000634c:	mov    QWORD PTR [rsp+0x10],rbx
   140006351:	push   rbp
   140006352:	push   rsi
   140006353:	push   rdi
   140006354:	push   r12
   140006356:	push   r13
   140006358:	push   r14
   14000635a:	push   r15
   14000635c:	lea    rbp,[rsp-0x1f60]
   140006364:	mov    eax,0x2060
   140006369:	call   0x140008050
   14000636e:	sub    rsp,rax
   140006371:	mov    rax,QWORD PTR [rip+0x8e20]        # 0x14000f198
   140006378:	xor    rax,rsp
   14000637b:	mov    QWORD PTR [rbp+0x1f50],rax
   140006382:	mov    r13,rcx
   140006385:	mov    rbx,r8
   140006388:	mov    r12d,edx
   14000638b:	xor    r15d,r15d
   14000638e:	mov    r14d,0x7fe
   140006394:	lea    rcx,[rbp+0x752]
   14000639b:	xor    edx,edx
   14000639d:	mov    r8d,r14d
   1400063a0:	mov    esi,r9d
   1400063a3:	mov    edi,r15d
   1400063a6:	mov    WORD PTR [rbp+0x750],r15w
   1400063ae:	call   0x140007ebe
   1400063b3:	lea    rcx,[rsp+0x52]
   1400063b8:	mov    r8d,r14d
   1400063bb:	xor    edx,edx
   1400063bd:	mov    WORD PTR [rsp+0x50],r15w
   1400063c3:	call   0x140007ebe
   1400063c8:	lea    rcx,[rbp+0x1752]
   1400063cf:	mov    r8d,r14d
   1400063d2:	xor    edx,edx
   1400063d4:	mov    WORD PTR [rbp+0x1750],r15w
   1400063dc:	call   0x140007ebe
   1400063e1:	lea    rcx,[rbp+0xf52]
   1400063e8:	mov    r8d,r14d
   1400063eb:	xor    edx,edx
   1400063ed:	mov    WORD PTR [rbp+0xf50],r15w
   1400063f5:	call   0x140007ebe
   1400063fa:	test   r13,r13
   1400063fd:	je     0x140006417
   1400063ff:	mov    rcx,r13
   140006402:	call   QWORD PTR [rip+0x3c20]        # 0x14000a028
   140006408:	mov    rdi,rax
   14000640b:	test   rax,rax
   14000640e:	jne    0x140006417
   140006410:	xor    eax,eax
   140006412:	jmp    0x1400064e3
   140006417:	mov    r8d,esi
   14000641a:	mov    rdx,rbx
   14000641d:	mov    rcx,rdi
   140006420:	call   QWORD PTR [rip+0x3c5a]        # 0x14000a080
   140006426:	test   eax,eax
   140006428:	je     0x140006410
   14000642a:	mov    r8d,esi
   14000642d:	mov    rdx,rbx
   140006430:	mov    rcx,rbx
   140006433:	test   r12d,r12d
   140006436:	je     0x14000650d
   14000643c:	call   QWORD PTR [rip+0x3cbe]        # 0x14000a100
   140006442:	test   eax,eax
   140006444:	je     0x140006410
   140006446:	mov    r8d,0x400
   14000644c:	lea    rax,[rbp+0xf50]
   140006453:	lea    r9,[rsp+0x50]
   140006458:	mov    QWORD PTR [rsp+0x40],r8
   14000645d:	mov    QWORD PTR [rsp+0x38],rax
   140006462:	mov    QWORD PTR [rsp+0x30],r8
   140006467:	lea    rax,[rbp+0x1750]
   14000646e:	lea    rdx,[rbp+0x750]
   140006475:	mov    rcx,rbx
   140006478:	mov    QWORD PTR [rsp+0x28],rax
   14000647d:	mov    QWORD PTR [rsp+0x20],r8
   140006482:	call   QWORD PTR [rip+0x3db0]        # 0x14000a238
   140006488:	or     rcx,0xffffffffffffffff
   14000648c:	xor    eax,eax
   14000648e:	lea    rdi,[rsp+0x50]
   140006493:	repnz scas ax,WORD PTR es:[rdi]
   140006496:	not    rcx
   140006499:	dec    rcx
   14000649c:	cmp    ecx,0x1
   14000649f:	jle    0x1400064ba
   1400064a1:	movsxd rcx,ecx
   1400064a4:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x5c
   1400064aa:	je     0x1400064b4
   1400064ac:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x2f
   1400064b2:	jne    0x1400064ba
   1400064b4:	mov    WORD PTR [rsp+rcx*2+0x4e],r15w
   1400064ba:	lea    r8,[rbp+0x750]
   1400064c1:	mov    rdx,rsi
   1400064c4:	mov    rcx,rbx
   1400064c7:	call   QWORD PTR [rip+0x3d63]        # 0x14000a230
   1400064cd:	lea    r8,[rsp+0x50]
   1400064d2:	mov    rdx,rsi
   1400064d5:	mov    rcx,rbx
   1400064d8:	call   QWORD PTR [rip+0x3d62]        # 0x14000a240
   1400064de:	mov    eax,0x1
   1400064e3:	mov    rcx,QWORD PTR [rbp+0x1f50]
   1400064ea:	xor    rcx,rsp
   1400064ed:	call   0x140008020
   1400064f2:	mov    rbx,QWORD PTR [rsp+0x20a8]
   1400064fa:	add    rsp,0x2060
   140006501:	pop    r15
   140006503:	pop    r14
   140006505:	pop    r13
   140006507:	pop    r12
   140006509:	pop    rdi
   14000650a:	pop    rsi
   14000650b:	pop    rbp
   14000650c:	ret    
   14000650d:	call   QWORD PTR [rip+0x3be5]        # 0x14000a0f8
   140006513:	jmp    0x140006442
   140006518:	int3   
   140006519:	int3   
   14000651a:	int3   
   14000651b:	int3   
   14000651c:	int3   
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	int3   
   140006521:	int3   
   140006522:	int3   
   140006523:	int3   
   140006524:	int3   
   140006525:	int3   
   140006526:	int3   
   140006527:	int3   
   140006528:	int3   
   140006529:	int3   
   14000652a:	int3   
   14000652b:	int3   
   14000652c:	mov    rax,rsp
   14000652f:	mov    QWORD PTR [rax+0x8],rbx
   140006533:	mov    QWORD PTR [rax+0x10],rsi
   140006537:	mov    QWORD PTR [rax+0x18],rdi
   14000653b:	mov    QWORD PTR [rax+0x20],r13
   14000653f:	push   rbp
   140006540:	push   r14
   140006542:	push   r15
   140006544:	lea    rbp,[rax-0x7c8]
   14000654b:	sub    rsp,0x8b0
   140006552:	mov    rax,QWORD PTR [rip+0x8c3f]        # 0x14000f198
   140006559:	xor    rax,rsp
   14000655c:	mov    QWORD PTR [rbp+0x7a0],rax
   140006563:	xor    r15d,r15d
   140006566:	mov    r14,rcx
   140006569:	mov    edi,0x20019
   14000656e:	lea    rcx,[rsp+0x70]
   140006573:	lea    r8,[rip+0x522e]        # 0x14000b7a8
   14000657a:	mov    rdx,0xffffffff80000002
   140006581:	mov    r9d,edi
   140006584:	mov    QWORD PTR [rsp+0x70],r15
   140006589:	mov    DWORD PTR [rsp+0x78],r15d
   14000658e:	mov    QWORD PTR [rbp-0x80],r15
   140006592:	mov    QWORD PTR [rsp+0x58],r15
   140006597:	mov    DWORD PTR [rsp+0x60],r15d
   14000659c:	mov    QWORD PTR [rsp+0x68],r15
   1400065a1:	mov    QWORD PTR [rsp+0x40],r15
   1400065a6:	mov    DWORD PTR [rsp+0x48],r15d
   1400065ab:	mov    QWORD PTR [rsp+0x50],r15
   1400065b0:	mov    QWORD PTR [rbp-0x78],r15
   1400065b4:	mov    DWORD PTR [rbp-0x70],r15d
   1400065b8:	mov    QWORD PTR [rbp-0x68],r15
   1400065bc:	mov    esi,r15d
   1400065bf:	mov    r13d,r15d
   1400065c2:	call   0x1400010b8
   1400065c7:	test   eax,eax
   1400065c9:	je     0x1400065e2
   1400065cb:	mov    rcx,QWORD PTR [rsp+0x70]
   1400065d0:	test   rcx,rcx
   1400065d3:	je     0x1400065db
   1400065d5:	call   QWORD PTR [rip+0x8bfd]        # 0x14000f1d8
   1400065db:	xor    eax,eax
   1400065dd:	jmp    0x140006773
   1400065e2:	mov    rbx,QWORD PTR [rsp+0x70]
   1400065e7:	lea    r8,[rip+0x51d2]        # 0x14000b7c0
   1400065ee:	lea    rcx,[rsp+0x58]
   1400065f3:	mov    rdx,rbx
   1400065f6:	mov    r9d,edi
   1400065f9:	call   0x1400010b8
   1400065fe:	test   eax,eax
   140006600:	je     0x14000661c
   140006602:	mov    rcx,QWORD PTR [rsp+0x58]
   140006607:	test   rcx,rcx
   14000660a:	je     0x140006612
   14000660c:	call   QWORD PTR [rip+0x8bc6]        # 0x14000f1d8
   140006612:	test   rbx,rbx
   140006615:	je     0x1400065db
   140006617:	mov    rcx,rbx
   14000661a:	jmp    0x1400065d5
   14000661c:	mov    r9d,edi
   14000661f:	mov    rdi,QWORD PTR [rsp+0x58]
   140006624:	lea    r8,[rip+0x51ad]        # 0x14000b7d8
   14000662b:	lea    rcx,[rsp+0x40]
   140006630:	mov    rdx,rdi
   140006633:	call   0x1400010b8
   140006638:	test   eax,eax
   14000663a:	je     0x140006656
   14000663c:	mov    rcx,QWORD PTR [rsp+0x40]
   140006641:	test   rcx,rcx
   140006644:	je     0x14000664c
   140006646:	call   QWORD PTR [rip+0x8b8c]        # 0x14000f1d8
   14000664c:	test   rdi,rdi
   14000664f:	je     0x140006612
   140006651:	mov    rcx,rdi
   140006654:	jmp    0x14000660c
   140006656:	lea    rcx,[rbp-0x60]
   14000665a:	xor    edx,edx
   14000665c:	mov    r8d,0x400
   140006662:	call   0x140007ebe
   140006667:	xor    edx,edx
   140006669:	jmp    0x1400066a2
   14000666b:	lea    rax,[rbp-0x60]
   14000666f:	mov    r8,r14
   140006672:	inc    esi
   140006674:	sub    r8,rax
   140006677:	movzx  ecx,WORD PTR [rax]
   14000667a:	movzx  edx,WORD PTR [rax+r8*1]
   14000667f:	sub    ecx,edx
   140006681:	jne    0x14000668b
   140006683:	add    rax,0x2
   140006687:	test   edx,edx
   140006689:	jne    0x140006677
   14000668b:	test   ecx,ecx
   14000668d:	je     0x1400066c0
   14000668f:	lea    rcx,[rbp-0x60]
   140006693:	xor    edx,edx
   140006695:	mov    r8d,0x400
   14000669b:	call   0x140007ebe
   1400066a0:	mov    edx,esi
   1400066a2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400066a7:	lea    r8,[rbp-0x60]
   1400066ab:	mov    r9d,0x400
   1400066b1:	call   QWORD PTR [rip+0x8b39]        # 0x14000f1f0
   1400066b7:	test   eax,eax
   1400066b9:	je     0x14000666b
   1400066bb:	jmp    0x140006742
   1400066c0:	mov    rdx,QWORD PTR [rsp+0x40]
   1400066c5:	lea    r8,[rbp-0x60]
   1400066c9:	lea    rcx,[rbp-0x78]
   1400066cd:	mov    r9d,0x20019
   1400066d3:	call   0x1400010b8
   1400066d8:	mov    rsi,QWORD PTR [rbp-0x78]
   1400066dc:	test   eax,eax
   1400066de:	jne    0x140006734
   1400066e0:	lea    rax,[rsp+0x34]
   1400066e5:	lea    r9,[rsp+0x38]
   1400066ea:	lea    rdx,[rip+0x5107]        # 0x14000b7f8
   1400066f1:	mov    QWORD PTR [rsp+0x28],rax
   1400066f6:	lea    rax,[rsp+0x30]
   1400066fb:	xor    r8d,r8d
   1400066fe:	mov    rcx,rsi
   140006701:	mov    DWORD PTR [rsp+0x30],r15d
   140006706:	mov    DWORD PTR [rsp+0x34],0x4
   14000670e:	mov    QWORD PTR [rsp+0x20],rax
   140006713:	call   QWORD PTR [rip+0x8aff]        # 0x14000f218
   140006719:	test   eax,eax
   14000671b:	jne    0x140006734
   14000671d:	cmp    DWORD PTR [rsp+0x38],0x4
   140006722:	jne    0x140006734
   140006724:	mov    eax,r15d
   140006727:	test   eax,eax
   140006729:	jne    0x140006734
   14000672b:	cmp    DWORD PTR [rsp+0x30],0x1
   140006730:	sete   r13b
   140006734:	test   rsi,rsi
   140006737:	je     0x140006742
   140006739:	mov    rcx,rsi
   14000673c:	call   QWORD PTR [rip+0x8a96]        # 0x14000f1d8
   140006742:	cmp    QWORD PTR [rsp+0x40],r15
   140006747:	je     0x140006754
   140006749:	mov    rcx,QWORD PTR [rsp+0x40]
   14000674e:	call   QWORD PTR [rip+0x8a84]        # 0x14000f1d8
   140006754:	test   rdi,rdi
   140006757:	je     0x140006762
   140006759:	mov    rcx,rdi
   14000675c:	call   QWORD PTR [rip+0x8a76]        # 0x14000f1d8
   140006762:	test   rbx,rbx
   140006765:	je     0x140006770
   140006767:	mov    rcx,rbx
   14000676a:	call   QWORD PTR [rip+0x8a68]        # 0x14000f1d8
   140006770:	mov    eax,r13d
   140006773:	mov    rcx,QWORD PTR [rbp+0x7a0]
   14000677a:	xor    rcx,rsp
   14000677d:	call   0x140008020
   140006782:	lea    r11,[rsp+0x8b0]
   14000678a:	mov    rbx,QWORD PTR [r11+0x20]
   14000678e:	mov    rsi,QWORD PTR [r11+0x28]
   140006792:	mov    rdi,QWORD PTR [r11+0x30]
   140006796:	mov    r13,QWORD PTR [r11+0x38]
   14000679a:	mov    rsp,r11
   14000679d:	pop    r15
   14000679f:	pop    r14
   1400067a1:	pop    rbp
   1400067a2:	ret    
   1400067a3:	int3   
   1400067a4:	int3   
   1400067a5:	int3   
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400067b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400067b6:	mov    QWORD PTR [rsp+0x18],rdi
   1400067bb:	push   rbp
   1400067bc:	push   r12
   1400067be:	push   r13
   1400067c0:	push   r14
   1400067c2:	push   r15
   1400067c4:	mov    rbp,rsp
   1400067c7:	sub    rsp,0x80
   1400067ce:	xor    r15d,r15d
   1400067d1:	mov    r12,r8
   1400067d4:	mov    rsi,rcx
   1400067d7:	mov    r13d,r9d
   1400067da:	mov    r14d,edx
   1400067dd:	mov    DWORD PTR [rbp+0x48],r9d
   1400067e1:	mov    edi,0x20019
   1400067e6:	lea    r8,[rip+0x5033]        # 0x14000b820
   1400067ed:	lea    rcx,[rbp-0x48]
   1400067f1:	mov    rdx,0xffffffff80000002
   1400067f8:	mov    r9d,edi
   1400067fb:	mov    QWORD PTR [rbp-0x48],r15
   1400067ff:	mov    DWORD PTR [rbp-0x40],r15d
   140006803:	mov    QWORD PTR [rbp-0x38],r15
   140006807:	mov    QWORD PTR [rbp-0x30],r15
   14000680b:	mov    DWORD PTR [rbp-0x28],r15d
   14000680f:	mov    QWORD PTR [rbp-0x20],r15
   140006813:	mov    QWORD PTR [rbp-0x18],r15
   140006817:	mov    DWORD PTR [rbp-0x10],r15d
   14000681b:	mov    QWORD PTR [rbp-0x8],r15
   14000681f:	mov    QWORD PTR [rbp-0x60],r15
   140006823:	mov    DWORD PTR [rbp-0x58],r15d
   140006827:	mov    QWORD PTR [rbp-0x50],r15
   14000682b:	call   0x1400010b8
   140006830:	test   eax,eax
   140006832:	je     0x14000684a
   140006834:	mov    rcx,QWORD PTR [rbp-0x48]
   140006838:	test   rcx,rcx
   14000683b:	je     0x140006843
   14000683d:	call   QWORD PTR [rip+0x8995]        # 0x14000f1d8
   140006843:	xor    eax,eax
   140006845:	jmp    0x14000695f
   14000684a:	mov    rbx,QWORD PTR [rbp-0x48]
   14000684e:	lea    r8,[rip+0x4fe3]        # 0x14000b838
   140006855:	lea    rcx,[rbp-0x30]
   140006859:	mov    rdx,rbx
   14000685c:	mov    r9d,edi
   14000685f:	call   0x1400010b8
   140006864:	test   eax,eax
   140006866:	je     0x140006881
   140006868:	mov    rcx,QWORD PTR [rbp-0x30]
   14000686c:	test   rcx,rcx
   14000686f:	je     0x140006877
   140006871:	call   QWORD PTR [rip+0x8961]        # 0x14000f1d8
   140006877:	test   rbx,rbx
   14000687a:	je     0x140006843
   14000687c:	mov    rcx,rbx
   14000687f:	jmp    0x14000683d
   140006881:	mov    r9d,edi
   140006884:	mov    rdi,QWORD PTR [rbp-0x30]
   140006888:	lea    r8,[rip+0x4fc1]        # 0x14000b850
   14000688f:	lea    rcx,[rbp-0x18]
   140006893:	mov    rdx,rdi
   140006896:	call   0x1400010b8
   14000689b:	test   eax,eax
   14000689d:	je     0x1400068b8
   14000689f:	mov    rcx,QWORD PTR [rbp-0x18]
   1400068a3:	test   rcx,rcx
   1400068a6:	je     0x1400068ae
   1400068a8:	call   QWORD PTR [rip+0x892a]        # 0x14000f1d8
   1400068ae:	test   rdi,rdi
   1400068b1:	je     0x140006877
   1400068b3:	mov    rcx,rdi
   1400068b6:	jmp    0x140006871
   1400068b8:	mov    r8,rsi
   1400068bb:	mov    rsi,QWORD PTR [rbp-0x18]
   1400068bf:	lea    rcx,[rbp-0x60]
   1400068c3:	mov    rdx,rsi
   1400068c6:	mov    r9d,0x20019
   1400068cc:	call   0x1400010b8
   1400068d1:	test   eax,eax
   1400068d3:	je     0x1400068ee
   1400068d5:	mov    rcx,QWORD PTR [rbp-0x60]
   1400068d9:	test   rcx,rcx
   1400068dc:	je     0x1400068e4
   1400068de:	call   QWORD PTR [rip+0x88f4]        # 0x14000f1d8
   1400068e4:	test   rsi,rsi
   1400068e7:	je     0x1400068ae
   1400068e9:	mov    rcx,rsi
   1400068ec:	jmp    0x1400068a8
   1400068ee:	lea    r9,[rbp+0x48]
   1400068f2:	lea    rdx,[rip+0x4f77]        # 0x14000b870
   1400068f9:	lea    rcx,[rbp-0x60]
   1400068fd:	mov    r8,r12
   140006900:	call   0x140005268
   140006905:	test   eax,eax
   140006907:	jne    0x1400068d5
   140006909:	mov    r8d,r13d
   14000690c:	mov    rdx,r12
   14000690f:	mov    rcx,r12
   140006912:	test   r14d,r14d
   140006915:	je     0x140006980
   140006917:	call   QWORD PTR [rip+0x37e3]        # 0x14000a100
   14000691d:	test   eax,eax
   14000691f:	je     0x1400068d5
   140006921:	mov    rcx,QWORD PTR [rbp-0x60]
   140006925:	test   rcx,rcx
   140006928:	je     0x140006930
   14000692a:	call   QWORD PTR [rip+0x88a8]        # 0x14000f1d8
   140006930:	test   rsi,rsi
   140006933:	je     0x14000693e
   140006935:	mov    rcx,rsi
   140006938:	call   QWORD PTR [rip+0x889a]        # 0x14000f1d8
   14000693e:	test   rdi,rdi
   140006941:	je     0x14000694c
   140006943:	mov    rcx,rdi
   140006946:	call   QWORD PTR [rip+0x888c]        # 0x14000f1d8
   14000694c:	test   rbx,rbx
   14000694f:	je     0x14000695a
   140006951:	mov    rcx,rbx
   140006954:	call   QWORD PTR [rip+0x887e]        # 0x14000f1d8
   14000695a:	mov    eax,0x1
   14000695f:	lea    r11,[rsp+0x80]
   140006967:	mov    rbx,QWORD PTR [r11+0x30]
   14000696b:	mov    rsi,QWORD PTR [r11+0x38]
   14000696f:	mov    rdi,QWORD PTR [r11+0x40]
   140006973:	mov    rsp,r11
   140006976:	pop    r15
   140006978:	pop    r14
   14000697a:	pop    r13
   14000697c:	pop    r12
   14000697e:	pop    rbp
   14000697f:	ret    
   140006980:	call   QWORD PTR [rip+0x3772]        # 0x14000a0f8
   140006986:	jmp    0x14000691d
   140006988:	int3   
   140006989:	int3   
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	int3   
   140006991:	int3   
   140006992:	int3   
   140006993:	int3   
   140006994:	int3   
   140006995:	int3   
   140006996:	int3   
   140006997:	int3   
   140006998:	int3   
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	mov    r8d,0xbb8
   1400069a2:	jmp    0x140005a5c
   1400069a7:	int3   
   1400069a8:	int3   
   1400069a9:	int3   
   1400069aa:	int3   
   1400069ab:	int3   
   1400069ac:	int3   
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	int3   
   1400069b1:	int3   
   1400069b2:	int3   
   1400069b3:	int3   
   1400069b4:	int3   
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	int3   
   1400069b9:	int3   
   1400069ba:	int3   
   1400069bb:	int3   
   1400069bc:	rex push rbx
   1400069be:	push   rbp
   1400069bf:	push   rsi
   1400069c0:	push   rdi
   1400069c1:	push   r14
   1400069c3:	push   r15
   1400069c5:	sub    rsp,0x848
   1400069cc:	mov    rax,QWORD PTR [rip+0x87c5]        # 0x14000f198
   1400069d3:	xor    rax,rsp
   1400069d6:	mov    QWORD PTR [rsp+0x830],rax
   1400069de:	mov    ebx,r9d
   1400069e1:	mov    ebp,r8d
   1400069e4:	mov    edi,edx
   1400069e6:	mov    esi,ecx
   1400069e8:	cmp    r9d,DWORD PTR [rsp+0x8a0]
   1400069f0:	jg     0x140006b09
   1400069f6:	mov    r14d,0x1
   1400069fc:	mov    r15d,0x400
   140006a02:	cmp    esi,r14d
   140006a05:	jg     0x140006a3a
   140006a07:	cmp    edi,0x3
   140006a0a:	jne    0x140006a15
   140006a0c:	test   ebp,ebp
   140006a0e:	jne    0x140006a15
   140006a10:	cmp    ebx,0x2
   140006a13:	je     0x140006a3a
   140006a15:	lea    rax,[rsp+0x30]
   140006a1a:	mov    r9d,ebx
   140006a1d:	mov    r8d,ebp
   140006a20:	mov    edx,edi
   140006a22:	mov    ecx,esi
   140006a24:	mov    QWORD PTR [rsp+0x28],r15
   140006a29:	mov    QWORD PTR [rsp+0x20],rax
   140006a2e:	call   0x140005d4c
   140006a33:	lea    rcx,[rsp+0x30]
   140006a38:	jmp    0x140006a41
   140006a3a:	lea    rcx,[rip+0x50df]        # 0x14000bb20
   140006a41:	mov    r8d,DWORD PTR [rsp+0x8b0]
   140006a49:	mov    rdx,QWORD PTR [rsp+0x8a8]
   140006a51:	call   0x140005e6c
   140006a56:	test   eax,eax
   140006a58:	jne    0x140006b2b
   140006a5e:	cmp    esi,r14d
   140006a61:	jg     0x140006a77
   140006a63:	cmp    edi,0x4
   140006a66:	jge    0x140006a77
   140006a68:	cmp    edi,0x3
   140006a6b:	jne    0x140006ab3
   140006a6d:	cmp    ebp,r14d
   140006a70:	jne    0x140006ab3
   140006a72:	cmp    ebx,r14d
   140006a75:	jl     0x140006ab3
   140006a77:	lea    rax,[rsp+0x30]
   140006a7c:	mov    r9d,ebx
   140006a7f:	mov    r8d,ebp
   140006a82:	mov    edx,edi
   140006a84:	mov    ecx,esi
   140006a86:	mov    QWORD PTR [rsp+0x28],r15
   140006a8b:	mov    QWORD PTR [rsp+0x20],rax
   140006a90:	call   0x140005dac
   140006a95:	mov    r8d,DWORD PTR [rsp+0x8b0]
   140006a9d:	mov    rdx,QWORD PTR [rsp+0x8a8]
   140006aa5:	lea    rcx,[rsp+0x30]
   140006aaa:	call   0x140005e6c
   140006aaf:	test   eax,eax
   140006ab1:	jne    0x140006b2b
   140006ab3:	cmp    esi,r14d
   140006ab6:	jg     0x140006abd
   140006ab8:	cmp    edi,0x5
   140006abb:	jl     0x140006af9
   140006abd:	lea    rax,[rsp+0x30]
   140006ac2:	mov    r9d,ebx
   140006ac5:	mov    r8d,ebp
   140006ac8:	mov    edx,edi
   140006aca:	mov    ecx,esi
   140006acc:	mov    QWORD PTR [rsp+0x28],r15
   140006ad1:	mov    QWORD PTR [rsp+0x20],rax
   140006ad6:	call   0x140005e0c
   140006adb:	mov    r8d,DWORD PTR [rsp+0x8b0]
   140006ae3:	mov    rdx,QWORD PTR [rsp+0x8a8]
   140006aeb:	lea    rcx,[rsp+0x30]
   140006af0:	call   0x140005e6c
   140006af5:	test   eax,eax
   140006af7:	jne    0x140006b2b
   140006af9:	add    ebx,r14d
   140006afc:	cmp    ebx,DWORD PTR [rsp+0x8a0]
   140006b03:	jle    0x140006a02
   140006b09:	xor    eax,eax
   140006b0b:	mov    rcx,QWORD PTR [rsp+0x830]
   140006b13:	xor    rcx,rsp
   140006b16:	call   0x140008020
   140006b1b:	add    rsp,0x848
   140006b22:	pop    r15
   140006b24:	pop    r14
   140006b26:	pop    rdi
   140006b27:	pop    rsi
   140006b28:	pop    rbp
   140006b29:	pop    rbx
   140006b2a:	ret    
   140006b2b:	mov    eax,r14d
   140006b2e:	jmp    0x140006b0b
   140006b30:	int3   
   140006b31:	int3   
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	int3   
   140006b35:	int3   
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	mov    QWORD PTR [rsp+0x8],rbx
   140006b41:	push   rbp
   140006b42:	push   rsi
   140006b43:	push   rdi
   140006b44:	push   r12
   140006b46:	push   r13
   140006b48:	push   r14
   140006b4a:	push   r15
   140006b4c:	lea    rbp,[rsp-0xfb0]
   140006b54:	mov    eax,0x10b0
   140006b59:	call   0x140008050
   140006b5e:	sub    rsp,rax
   140006b61:	mov    rax,QWORD PTR [rip+0x8630]        # 0x14000f198
   140006b68:	xor    rax,rsp
   140006b6b:	mov    QWORD PTR [rbp+0xfa0],rax
   140006b72:	xor    r15d,r15d
   140006b75:	mov    r14,r8
   140006b78:	mov    ebx,ecx
   140006b7a:	mov    r13,rdx
   140006b7d:	mov    r12d,0x20019
   140006b83:	lea    r8,[rip+0x503e]        # 0x14000bbc8
   140006b8a:	lea    rcx,[rsp+0x70]
   140006b8f:	mov    r9d,r12d
   140006b92:	mov    rdx,0xffffffff80000002
   140006b99:	mov    QWORD PTR [rsp+0x70],r15
   140006b9e:	mov    DWORD PTR [rsp+0x78],r15d
   140006ba3:	mov    QWORD PTR [rbp-0x80],r15
   140006ba7:	mov    QWORD PTR [rsp+0x40],r15
   140006bac:	mov    DWORD PTR [rsp+0x48],r15d
   140006bb1:	mov    QWORD PTR [rsp+0x50],r15
   140006bb6:	mov    QWORD PTR [rsp+0x28],r15
   140006bbb:	mov    DWORD PTR [rsp+0x30],r15d
   140006bc0:	mov    QWORD PTR [rsp+0x38],r15
   140006bc5:	mov    QWORD PTR [rbp-0x78],r15
   140006bc9:	mov    DWORD PTR [rbp-0x70],r15d
   140006bcd:	mov    QWORD PTR [rbp-0x68],r15
   140006bd1:	mov    QWORD PTR [rsp+0x58],r15
   140006bd6:	mov    DWORD PTR [rsp+0x60],r15d
   140006bdb:	mov    QWORD PTR [rsp+0x68],r15
   140006be0:	call   0x1400010b8
   140006be5:	test   eax,eax
   140006be7:	je     0x140006c00
   140006be9:	mov    rcx,QWORD PTR [rsp+0x70]
   140006bee:	test   rcx,rcx
   140006bf1:	je     0x140006bf9
   140006bf3:	call   QWORD PTR [rip+0x85df]        # 0x14000f1d8
   140006bf9:	xor    eax,eax
   140006bfb:	jmp    0x140006dc7
   140006c00:	test   ebx,ebx
   140006c02:	mov    rbx,QWORD PTR [rsp+0x70]
   140006c07:	mov    r9d,r12d
   140006c0a:	mov    rdx,rbx
   140006c0d:	lea    rcx,[rsp+0x40]
   140006c12:	je     0x140006c78
   140006c14:	lea    r8,[rip+0x4fc5]        # 0x14000bbe0
   140006c1b:	call   0x1400010b8
   140006c20:	test   eax,eax
   140006c22:	je     0x140006c3e
   140006c24:	mov    rcx,QWORD PTR [rsp+0x40]
   140006c29:	test   rcx,rcx
   140006c2c:	je     0x140006c34
   140006c2e:	call   QWORD PTR [rip+0x85a4]        # 0x14000f1d8
   140006c34:	test   rbx,rbx
   140006c37:	je     0x140006bf9
   140006c39:	mov    rcx,rbx
   140006c3c:	jmp    0x140006bf3
   140006c3e:	lea    r8,[rip+0x4fab]        # 0x14000bbf0
   140006c45:	mov    rdi,QWORD PTR [rsp+0x40]
   140006c4a:	lea    rcx,[rsp+0x28]
   140006c4f:	mov    r9d,r12d
   140006c52:	mov    rdx,rdi
   140006c55:	call   0x1400010b8
   140006c5a:	test   eax,eax
   140006c5c:	je     0x140006c91
   140006c5e:	mov    rcx,QWORD PTR [rsp+0x28]
   140006c63:	test   rcx,rcx
   140006c66:	je     0x140006c6e
   140006c68:	call   QWORD PTR [rip+0x856a]        # 0x14000f1d8
   140006c6e:	test   rdi,rdi
   140006c71:	je     0x140006c34
   140006c73:	mov    rcx,rdi
   140006c76:	jmp    0x140006c2e
   140006c78:	lea    r8,[rip+0x4f91]        # 0x14000bc10
   140006c7f:	call   0x1400010b8
   140006c84:	test   eax,eax
   140006c86:	jne    0x140006c24
   140006c88:	lea    r8,[rip+0x4f99]        # 0x14000bc28
   140006c8f:	jmp    0x140006c45
   140006c91:	lea    rcx,[rbp-0x5e]
   140006c95:	xor    edx,edx
   140006c97:	mov    r8d,0xffe
   140006c9d:	mov    WORD PTR [rbp-0x60],r15w
   140006ca2:	call   0x140007ebe
   140006ca7:	lea    r9,[rsp+0x20]
   140006cac:	lea    r8,[rbp-0x60]
   140006cb0:	lea    rdx,[rip+0x4f81]        # 0x14000bc38
   140006cb7:	lea    rcx,[rsp+0x28]
   140006cbc:	mov    DWORD PTR [rsp+0x20],0x800
   140006cc4:	call   0x140005268
   140006cc9:	test   eax,eax
   140006ccb:	jne    0x140006c5e
   140006ccd:	mov    rsi,QWORD PTR [rsp+0x28]
   140006cd2:	lea    r8,[rbp-0x60]
   140006cd6:	lea    rcx,[rbp-0x78]
   140006cda:	mov    rdx,rsi
   140006cdd:	mov    r9d,r12d
   140006ce0:	call   0x1400010b8
   140006ce5:	test   eax,eax
   140006ce7:	je     0x140006d09
   140006ce9:	mov    rcx,QWORD PTR [rbp-0x78]
   140006ced:	test   rcx,rcx
   140006cf0:	je     0x140006cf8
   140006cf2:	call   QWORD PTR [rip+0x84e0]        # 0x14000f1d8
   140006cf8:	test   rsi,rsi
   140006cfb:	je     0x140006c6e
   140006d01:	mov    rcx,rsi
   140006d04:	jmp    0x140006c68
   140006d09:	mov    r9d,r12d
   140006d0c:	mov    r12,QWORD PTR [rbp-0x78]
   140006d10:	lea    r8,[rip+0x4f41]        # 0x14000bc58
   140006d17:	lea    rcx,[rsp+0x58]
   140006d1c:	mov    rdx,r12
   140006d1f:	mov    DWORD PTR [rsp+0x20],0x800
   140006d27:	call   0x1400010b8
   140006d2c:	test   eax,eax
   140006d2e:	je     0x140006d4a
   140006d30:	mov    rcx,QWORD PTR [rsp+0x58]
   140006d35:	test   rcx,rcx
   140006d38:	je     0x140006d40
   140006d3a:	call   QWORD PTR [rip+0x8498]        # 0x14000f1d8
   140006d40:	test   r12,r12
   140006d43:	je     0x140006cf8
   140006d45:	mov    rcx,r12
   140006d48:	jmp    0x140006cf2
   140006d4a:	lea    r9,[rsp+0x20]
   140006d4f:	lea    rdx,[rip+0x4f12]        # 0x14000bc68
   140006d56:	lea    rcx,[rsp+0x58]
   140006d5b:	mov    r8,r13
   140006d5e:	call   0x140005268
   140006d63:	test   eax,eax
   140006d65:	jne    0x140006d30
   140006d67:	lea    r8,[rip+0x4f22]        # 0x14000bc90
   140006d6e:	mov    rdx,r14
   140006d71:	mov    rcx,r13
   140006d74:	call   QWORD PTR [rip+0x34c6]        # 0x14000a240
   140006d7a:	mov    rcx,QWORD PTR [rsp+0x58]
   140006d7f:	test   rcx,rcx
   140006d82:	je     0x140006d8a
   140006d84:	call   QWORD PTR [rip+0x844e]        # 0x14000f1d8
   140006d8a:	test   r12,r12
   140006d8d:	je     0x140006d98
   140006d8f:	mov    rcx,r12
   140006d92:	call   QWORD PTR [rip+0x8440]        # 0x14000f1d8
   140006d98:	test   rsi,rsi
   140006d9b:	je     0x140006da6
   140006d9d:	mov    rcx,rsi
   140006da0:	call   QWORD PTR [rip+0x8432]        # 0x14000f1d8
   140006da6:	test   rdi,rdi
   140006da9:	je     0x140006db4
   140006dab:	mov    rcx,rdi
   140006dae:	call   QWORD PTR [rip+0x8424]        # 0x14000f1d8
   140006db4:	test   rbx,rbx
   140006db7:	je     0x140006dc2
   140006db9:	mov    rcx,rbx
   140006dbc:	call   QWORD PTR [rip+0x8416]        # 0x14000f1d8
   140006dc2:	mov    eax,0x1
   140006dc7:	mov    rcx,QWORD PTR [rbp+0xfa0]
   140006dce:	xor    rcx,rsp
   140006dd1:	call   0x140008020
   140006dd6:	mov    rbx,QWORD PTR [rsp+0x10f0]
   140006dde:	add    rsp,0x10b0
   140006de5:	pop    r15
   140006de7:	pop    r14
   140006de9:	pop    r13
   140006deb:	pop    r12
   140006ded:	pop    rdi
   140006dee:	pop    rsi
   140006def:	pop    rbp
   140006df0:	ret    
   140006df1:	int3   
   140006df2:	int3   
   140006df3:	int3   
   140006df4:	int3   
   140006df5:	int3   
   140006df6:	int3   
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	mov    rax,rsp
   140006dff:	mov    QWORD PTR [rax+0x8],rbx
   140006e03:	mov    QWORD PTR [rax+0x10],rsi
   140006e07:	mov    QWORD PTR [rax+0x18],rdi
   140006e0b:	push   rbp
   140006e0c:	push   r12
   140006e0e:	push   r13
   140006e10:	lea    rbp,[rax-0xfa8]
   140006e17:	mov    eax,0x1090
   140006e1c:	call   0x140008050
   140006e21:	sub    rsp,rax
   140006e24:	mov    rax,QWORD PTR [rip+0x836d]        # 0x14000f198
   140006e2b:	xor    rax,rsp
   140006e2e:	mov    QWORD PTR [rbp+0xf80],rax
   140006e35:	lea    rcx,[rbp-0x7e]
   140006e39:	xor    r13d,r13d
   140006e3c:	xor    edx,edx
   140006e3e:	mov    r8d,0xffe
   140006e44:	mov    WORD PTR [rbp-0x80],r13w
   140006e49:	call   0x140007ebe
   140006e4e:	lea    rcx,[rbp-0x80]
   140006e52:	mov    edx,0x800
   140006e57:	mov    QWORD PTR [rsp+0x48],r13
   140006e5c:	call   QWORD PTR [rip+0x32a6]        # 0x14000a108
   140006e62:	dec    eax
   140006e64:	cmp    eax,0x7fe
   140006e69:	ja     0x1400070b7
   140006e6f:	call   0x1400057ac
   140006e74:	lea    rdx,[rbp-0x80]
   140006e78:	test   eax,eax
   140006e7a:	je     0x140006fd0
   140006e80:	lea    rcx,[rsp+0x28]
   140006e85:	call   0x1400026bc
   140006e8a:	lea    rdx,[rip+0x44b7]        # 0x14000b348
   140006e91:	lea    rcx,[rsp+0x38]
   140006e96:	call   0x1400026bc
   140006e9b:	lea    rdx,[rsp+0x38]
   140006ea0:	lea    rcx,[rsp+0x28]
   140006ea5:	call   0x1400051a8
   140006eaa:	mov    rax,QWORD PTR [rsp+0x38]
   140006eaf:	or     edi,0xffffffff
   140006eb2:	test   rax,rax
   140006eb5:	je     0x140006eeb
   140006eb7:	mov    ecx,edi
   140006eb9:	lock xadd DWORD PTR [rax+0x10],ecx
   140006ebe:	add    ecx,edi
   140006ec0:	jne    0x140006eeb
   140006ec2:	mov    rbx,QWORD PTR [rsp+0x38]
   140006ec7:	mov    rcx,QWORD PTR [rbx]
   140006eca:	test   rcx,rcx
   140006ecd:	je     0x140006ed5
   140006ecf:	call   QWORD PTR [rip+0x348b]        # 0x14000a360
   140006ed5:	mov    rcx,QWORD PTR [rbx+0x8]
   140006ed9:	test   rcx,rcx
   140006edc:	je     0x140006ee3
   140006ede:	call   0x140007eca
   140006ee3:	mov    rcx,rbx
   140006ee6:	call   0x140007e4c
   140006eeb:	lea    rcx,[rip+0x44a6]        # 0x14000b398
   140006ef2:	call   QWORD PTR [rip+0x3130]        # 0x14000a028
   140006ef8:	lea    rdx,[rip+0x4479]        # 0x14000b378
   140006eff:	mov    rcx,rax
   140006f02:	call   QWORD PTR [rip+0x3118]        # 0x14000a020
   140006f08:	lea    rcx,[rip+0x44c1]        # 0x14000b3d0
   140006f0f:	mov    r12,rax
   140006f12:	call   QWORD PTR [rip+0x3110]        # 0x14000a028
   140006f18:	lea    rdx,[rip+0x4491]        # 0x14000b3b0
   140006f1f:	mov    rcx,rax
   140006f22:	call   QWORD PTR [rip+0x30f8]        # 0x14000a020
   140006f28:	mov    rbx,QWORD PTR [rsp+0x28]
   140006f2d:	mov    rsi,rax
   140006f30:	test   r12,r12
   140006f33:	je     0x140006fae
   140006f35:	test   rax,rax
   140006f38:	je     0x140006fae
   140006f3a:	lea    rcx,[rsp+0x48]
   140006f3f:	call   r12
   140006f42:	test   eax,eax
   140006f44:	je     0x140006fae
   140006f46:	test   rbx,rbx
   140006f49:	je     0x140006f50
   140006f4b:	mov    rcx,QWORD PTR [rbx]
   140006f4e:	jmp    0x140006f53
   140006f50:	mov    rcx,r13
   140006f53:	lea    rdx,[rsp+0x50]
   140006f58:	call   QWORD PTR [rip+0x32ea]        # 0x14000a248
   140006f5e:	mov    rcx,QWORD PTR [rsp+0x48]
   140006f63:	test   eax,eax
   140006f65:	jne    0x140006fac
   140006f67:	call   rsi
   140006f69:	test   rbx,rbx
   140006f6c:	je     0x140006fa2
   140006f6e:	mov    eax,edi
   140006f70:	lock xadd DWORD PTR [rbx+0x10],eax
   140006f75:	add    eax,edi
   140006f77:	jne    0x140006fa2
   140006f79:	mov    rbx,QWORD PTR [rsp+0x28]
   140006f7e:	mov    rcx,QWORD PTR [rbx]
   140006f81:	test   rcx,rcx
   140006f84:	je     0x140006f8c
   140006f86:	call   QWORD PTR [rip+0x33d4]        # 0x14000a360
   140006f8c:	mov    rcx,QWORD PTR [rbx+0x8]
   140006f90:	test   rcx,rcx
   140006f93:	je     0x140006f9a
   140006f95:	call   0x140007eca
   140006f9a:	mov    rcx,rbx
   140006f9d:	call   0x140007e4c
   140006fa2:	mov    eax,0x1
   140006fa7:	jmp    0x1400070b9
   140006fac:	call   rsi
   140006fae:	test   rbx,rbx
   140006fb1:	je     0x1400070b7
   140006fb7:	mov    eax,edi
   140006fb9:	lock xadd DWORD PTR [rbx+0x10],eax
   140006fbe:	add    eax,edi
   140006fc0:	jne    0x1400070b7
   140006fc6:	mov    rbx,QWORD PTR [rsp+0x28]
   140006fcb:	jmp    0x140007093
   140006fd0:	lea    rcx,[rsp+0x30]
   140006fd5:	call   0x1400026bc
   140006fda:	lea    rdx,[rip+0x4407]        # 0x14000b3e8
   140006fe1:	lea    rcx,[rsp+0x40]
   140006fe6:	call   0x1400026bc
   140006feb:	lea    rdx,[rsp+0x40]
   140006ff0:	lea    rcx,[rsp+0x30]
   140006ff5:	call   0x1400051a8
   140006ffa:	mov    rax,QWORD PTR [rsp+0x40]
   140006fff:	or     edi,0xffffffff
   140007002:	test   rax,rax
   140007005:	je     0x14000703b
   140007007:	mov    ecx,edi
   140007009:	lock xadd DWORD PTR [rax+0x10],ecx
   14000700e:	add    ecx,edi
   140007010:	jne    0x14000703b
   140007012:	mov    rbx,QWORD PTR [rsp+0x40]
   140007017:	mov    rcx,QWORD PTR [rbx]
   14000701a:	test   rcx,rcx
   14000701d:	je     0x140007025
   14000701f:	call   QWORD PTR [rip+0x333b]        # 0x14000a360
   140007025:	mov    rcx,QWORD PTR [rbx+0x8]
   140007029:	test   rcx,rcx
   14000702c:	je     0x140007033
   14000702e:	call   0x140007eca
   140007033:	mov    rcx,rbx
   140007036:	call   0x140007e4c
   14000703b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007040:	test   rbx,rbx
   140007043:	je     0x14000704a
   140007045:	mov    rcx,QWORD PTR [rbx]
   140007048:	jmp    0x14000704d
   14000704a:	mov    rcx,r13
   14000704d:	lea    rdx,[rsp+0x50]
   140007052:	call   QWORD PTR [rip+0x31f0]        # 0x14000a248
   140007058:	test   eax,eax
   14000705a:	jne    0x14000707e
   14000705c:	test   rbx,rbx
   14000705f:	je     0x140006fa2
   140007065:	mov    eax,edi
   140007067:	lock xadd DWORD PTR [rbx+0x10],eax
   14000706c:	add    eax,edi
   14000706e:	jne    0x140006fa2
   140007074:	mov    rbx,QWORD PTR [rsp+0x30]
   140007079:	jmp    0x140006f7e
   14000707e:	test   rbx,rbx
   140007081:	je     0x1400070b7
   140007083:	mov    eax,edi
   140007085:	lock xadd DWORD PTR [rbx+0x10],eax
   14000708a:	add    eax,edi
   14000708c:	jne    0x1400070b7
   14000708e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007093:	mov    rcx,QWORD PTR [rbx]
   140007096:	test   rcx,rcx
   140007099:	je     0x1400070a1
   14000709b:	call   QWORD PTR [rip+0x32bf]        # 0x14000a360
   1400070a1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400070a5:	test   rcx,rcx
   1400070a8:	je     0x1400070af
   1400070aa:	call   0x140007eca
   1400070af:	mov    rcx,rbx
   1400070b2:	call   0x140007e4c
   1400070b7:	xor    eax,eax
   1400070b9:	mov    rcx,QWORD PTR [rbp+0xf80]
   1400070c0:	xor    rcx,rsp
   1400070c3:	call   0x140008020
   1400070c8:	lea    r11,[rsp+0x1090]
   1400070d0:	mov    rbx,QWORD PTR [r11+0x20]
   1400070d4:	mov    rsi,QWORD PTR [r11+0x28]
   1400070d8:	mov    rdi,QWORD PTR [r11+0x30]
   1400070dc:	mov    rsp,r11
   1400070df:	pop    r13
   1400070e1:	pop    r12
   1400070e3:	pop    rbp
   1400070e4:	ret    
   1400070e5:	int3   
   1400070e6:	int3   
   1400070e7:	int3   
   1400070e8:	int3   
   1400070e9:	int3   
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	mov    rax,rsp
   1400070ef:	push   rsi
   1400070f0:	push   rdi
   1400070f1:	push   r12
   1400070f3:	sub    rsp,0x260
   1400070fa:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140007103:	mov    QWORD PTR [rax+0x18],rbx
   140007107:	mov    rax,QWORD PTR [rip+0x808a]        # 0x14000f198
   14000710e:	xor    rax,rsp
   140007111:	mov    QWORD PTR [rsp+0x250],rax
   140007119:	movsxd r12,edx
   14000711c:	mov    rdi,rcx
   14000711f:	xor    ebx,ebx
   140007121:	mov    WORD PTR [rcx],bx
   140007124:	lea    rcx,[rsp+0x40]
   140007129:	call   0x14000623c
   14000712e:	mov    esi,eax
   140007130:	test   eax,eax
   140007132:	jns    0x14000714b
   140007134:	mov    edx,eax
   140007136:	lea    rcx,[rip+0x4523]        # 0x14000b660
   14000713d:	call   0x140007c74
   140007142:	xor    edx,edx
   140007144:	mov    ecx,esi
   140007146:	call   0x140008ae0
   14000714b:	lea    rdx,[rsp+0x40]
   140007150:	lea    rcx,[rsp+0x28]
   140007155:	call   0x1400026bc
   14000715a:	mov    rax,QWORD PTR [rax]
   14000715d:	test   rax,rax
   140007160:	je     0x140007167
   140007162:	mov    r8,QWORD PTR [rax]
   140007165:	jmp    0x14000716a
   140007167:	mov    r8,rbx
   14000716a:	mov    rdx,r12
   14000716d:	mov    r9d,0x104
   140007173:	mov    rcx,rdi
   140007176:	call   QWORD PTR [rip+0x307c]        # 0x14000a1f8
   14000717c:	mov    rdi,QWORD PTR [rsp+0x28]
   140007181:	test   rdi,rdi
   140007184:	je     0x1400071bc
   140007186:	or     eax,0xffffffff
   140007189:	lock xadd DWORD PTR [rdi+0x10],eax
   14000718e:	dec    eax
   140007190:	jne    0x1400071bc
   140007192:	test   rdi,rdi
   140007195:	je     0x1400071bc
   140007197:	cmp    QWORD PTR [rdi],rbx
   14000719a:	je     0x1400071a5
   14000719c:	mov    rcx,QWORD PTR [rdi]
   14000719f:	call   QWORD PTR [rip+0x31bb]        # 0x14000a360
   1400071a5:	mov    rcx,QWORD PTR [rdi+0x8]
   1400071a9:	test   rcx,rcx
   1400071ac:	je     0x1400071b3
   1400071ae:	call   0x140007eca
   1400071b3:	mov    rcx,rdi
   1400071b6:	call   0x140007e4c
   1400071bb:	nop
   1400071bc:	jmp    0x1400071c4
   1400071be:	xor    ebx,ebx
   1400071c0:	mov    esi,DWORD PTR [rsp+0x20]
   1400071c4:	test   esi,esi
   1400071c6:	setns  bl
   1400071c9:	mov    eax,ebx
   1400071cb:	mov    rcx,QWORD PTR [rsp+0x250]
   1400071d3:	xor    rcx,rsp
   1400071d6:	call   0x140008020
   1400071db:	mov    rbx,QWORD PTR [rsp+0x290]
   1400071e3:	add    rsp,0x260
   1400071ea:	pop    r12
   1400071ec:	pop    rdi
   1400071ed:	pop    rsi
   1400071ee:	ret    
   1400071ef:	int3   
   1400071f0:	int3   
   1400071f1:	int3   
   1400071f2:	int3   
   1400071f3:	int3   
   1400071f4:	int3   
   1400071f5:	int3   
   1400071f6:	int3   
   1400071f7:	int3   
   1400071f8:	int3   
   1400071f9:	int3   
   1400071fa:	int3   
   1400071fb:	int3   
   1400071fc:	mov    rax,rsp
   1400071ff:	push   rsi
   140007200:	push   rdi
   140007201:	push   r12
   140007203:	sub    rsp,0x270
   14000720a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140007213:	mov    QWORD PTR [rax+0x18],rbx
   140007217:	mov    rax,QWORD PTR [rip+0x7f7a]        # 0x14000f198
   14000721e:	xor    rax,rsp
   140007221:	mov    QWORD PTR [rsp+0x260],rax
   140007229:	movsxd r12,edx
   14000722c:	mov    rdi,rcx
   14000722f:	xor    ebx,ebx
   140007231:	mov    WORD PTR [rcx],bx
   140007234:	mov    DWORD PTR [rsp+0x20],0x104
   14000723c:	lea    r9,[rsp+0x50]
   140007241:	xor    r8d,r8d
   140007244:	xor    edx,edx
   140007246:	lea    rcx,[rip+0x38b3]        # 0x14000ab00
   14000724d:	call   QWORD PTR [rip+0x7ff5]        # 0x14000f248
   140007253:	mov    esi,eax
   140007255:	test   eax,eax
   140007257:	jns    0x140007270
   140007259:	mov    edx,eax
   14000725b:	lea    rcx,[rip+0x446e]        # 0x14000b6d0
   140007262:	call   0x140007c74
   140007267:	xor    edx,edx
   140007269:	mov    ecx,esi
   14000726b:	call   0x140008ae0
   140007270:	lea    rdx,[rsp+0x50]
   140007275:	lea    rcx,[rsp+0x38]
   14000727a:	call   0x1400026bc
   14000727f:	mov    rax,QWORD PTR [rax]
   140007282:	test   rax,rax
   140007285:	je     0x14000728c
   140007287:	mov    r8,QWORD PTR [rax]
   14000728a:	jmp    0x14000728f
   14000728c:	mov    r8,rbx
   14000728f:	mov    rdx,r12
   140007292:	mov    r9d,0x104
   140007298:	mov    rcx,rdi
   14000729b:	call   QWORD PTR [rip+0x2f57]        # 0x14000a1f8
   1400072a1:	mov    rdi,QWORD PTR [rsp+0x38]
   1400072a6:	test   rdi,rdi
   1400072a9:	je     0x1400072e1
   1400072ab:	or     eax,0xffffffff
   1400072ae:	lock xadd DWORD PTR [rdi+0x10],eax
   1400072b3:	dec    eax
   1400072b5:	jne    0x1400072e1
   1400072b7:	test   rdi,rdi
   1400072ba:	je     0x1400072e1
   1400072bc:	cmp    QWORD PTR [rdi],rbx
   1400072bf:	je     0x1400072ca
   1400072c1:	mov    rcx,QWORD PTR [rdi]
   1400072c4:	call   QWORD PTR [rip+0x3096]        # 0x14000a360
   1400072ca:	mov    rcx,QWORD PTR [rdi+0x8]
   1400072ce:	test   rcx,rcx
   1400072d1:	je     0x1400072d8
   1400072d3:	call   0x140007eca
   1400072d8:	mov    rcx,rdi
   1400072db:	call   0x140007e4c
   1400072e0:	nop
   1400072e1:	jmp    0x1400072e9
   1400072e3:	xor    ebx,ebx
   1400072e5:	mov    esi,DWORD PTR [rsp+0x30]
   1400072e9:	test   esi,esi
   1400072eb:	setns  bl
   1400072ee:	mov    eax,ebx
   1400072f0:	mov    rcx,QWORD PTR [rsp+0x260]
   1400072f8:	xor    rcx,rsp
   1400072fb:	call   0x140008020
   140007300:	mov    rbx,QWORD PTR [rsp+0x2a0]
   140007308:	add    rsp,0x270
   14000730f:	pop    r12
   140007311:	pop    rdi
   140007312:	pop    rsi
   140007313:	ret    
   140007314:	int3   
   140007315:	int3   
   140007316:	int3   
   140007317:	int3   
   140007318:	int3   
   140007319:	int3   
   14000731a:	int3   
   14000731b:	int3   
   14000731c:	mov    DWORD PTR [rsp+0x10],edx
   140007320:	push   rbp
   140007321:	push   rbx
   140007322:	push   rsi
   140007323:	push   rdi
   140007324:	push   r12
   140007326:	mov    rbp,rsp
   140007329:	sub    rsp,0x70
   14000732d:	and    QWORD PTR [rbp-0x48],0x0
   140007332:	and    DWORD PTR [rbp-0x40],0x0
   140007336:	and    QWORD PTR [rbp-0x38],0x0
   14000733b:	and    QWORD PTR [rbp-0x30],0x0
   140007340:	and    DWORD PTR [rbp-0x28],0x0
   140007344:	and    QWORD PTR [rbp-0x20],0x0
   140007349:	and    QWORD PTR [rbp-0x18],0x0
   14000734e:	and    DWORD PTR [rbp-0x10],0x0
   140007352:	and    QWORD PTR [rbp-0x8],0x0
   140007357:	mov    r12,rcx
   14000735a:	mov    esi,0x20019
   14000735f:	lea    r8,[rip+0x4522]        # 0x14000b888
   140007366:	lea    rcx,[rbp-0x48]
   14000736a:	mov    r9d,esi
   14000736d:	mov    rdx,0xffffffff80000000
   140007374:	call   0x1400010b8
   140007379:	test   eax,eax
   14000737b:	je     0x140007393
   14000737d:	mov    rcx,QWORD PTR [rbp-0x48]
   140007381:	test   rcx,rcx
   140007384:	je     0x14000738c
   140007386:	call   QWORD PTR [rip+0x7e4c]        # 0x14000f1d8
   14000738c:	xor    eax,eax
   14000738e:	jmp    0x14000754f
   140007393:	and    QWORD PTR [rbp-0x50],0x0
   140007398:	lea    rdx,[rbp-0x50]
   14000739c:	lea    rcx,[rip+0x376d]        # 0x14000ab10
   1400073a3:	call   QWORD PTR [rip+0x2ff7]        # 0x14000a3a0
   1400073a9:	test   eax,eax
   1400073ab:	js     0x14000737d
   1400073ad:	mov    rdx,QWORD PTR [rbp-0x50]
   1400073b1:	lea    rcx,[rbp+0x48]
   1400073b5:	call   0x1400026bc
   1400073ba:	mov    rcx,QWORD PTR [rbp-0x50]
   1400073be:	call   QWORD PTR [rip+0x2fd4]        # 0x14000a398
   1400073c4:	mov    rbx,QWORD PTR [rbp+0x48]
   1400073c8:	test   rbx,rbx
   1400073cb:	je     0x1400073d2
   1400073cd:	mov    r8,QWORD PTR [rbx]
   1400073d0:	jmp    0x1400073d5
   1400073d2:	xor    r8d,r8d
   1400073d5:	mov    rdi,QWORD PTR [rbp-0x48]
   1400073d9:	lea    rcx,[rbp-0x30]
   1400073dd:	mov    r9d,esi
   1400073e0:	mov    rdx,rdi
   1400073e3:	call   0x1400010b8
   1400073e8:	test   eax,eax
   1400073ea:	je     0x140007449
   1400073ec:	test   rbx,rbx
   1400073ef:	je     0x140007429
   1400073f1:	or     eax,0xffffffff
   1400073f4:	lock xadd DWORD PTR [rbx+0x10],eax
   1400073f9:	dec    eax
   1400073fb:	jne    0x140007425
   1400073fd:	mov    rbx,QWORD PTR [rbp+0x48]
   140007401:	mov    rcx,QWORD PTR [rbx]
   140007404:	test   rcx,rcx
   140007407:	je     0x14000740f
   140007409:	call   QWORD PTR [rip+0x2f51]        # 0x14000a360
   14000740f:	mov    rcx,QWORD PTR [rbx+0x8]
   140007413:	test   rcx,rcx
   140007416:	je     0x14000741d
   140007418:	call   0x140007eca
   14000741d:	mov    rcx,rbx
   140007420:	call   0x140007e4c
   140007425:	mov    rdi,QWORD PTR [rbp-0x48]
   140007429:	mov    rcx,QWORD PTR [rbp-0x30]
   14000742d:	test   rcx,rcx
   140007430:	je     0x140007438
   140007432:	call   QWORD PTR [rip+0x7da0]        # 0x14000f1d8
   140007438:	test   rdi,rdi
   14000743b:	je     0x14000738c
   140007441:	mov    rcx,rdi
   140007444:	jmp    0x140007386
   140007449:	mov    r9d,esi
   14000744c:	mov    rsi,QWORD PTR [rbp-0x30]
   140007450:	lea    r8,[rip+0x4441]        # 0x14000b898
   140007457:	lea    rcx,[rbp-0x18]
   14000745b:	mov    rdx,rsi
   14000745e:	call   0x1400010b8
   140007463:	test   eax,eax
   140007465:	je     0x1400074c8
   140007467:	test   rbx,rbx
   14000746a:	je     0x1400074a8
   14000746c:	or     eax,0xffffffff
   14000746f:	lock xadd DWORD PTR [rbx+0x10],eax
   140007474:	dec    eax
   140007476:	jne    0x1400074a0
   140007478:	mov    rbx,QWORD PTR [rbp+0x48]
   14000747c:	mov    rcx,QWORD PTR [rbx]
   14000747f:	test   rcx,rcx
   140007482:	je     0x14000748a
   140007484:	call   QWORD PTR [rip+0x2ed6]        # 0x14000a360
   14000748a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000748e:	test   rcx,rcx
   140007491:	je     0x140007498
   140007493:	call   0x140007eca
   140007498:	mov    rcx,rbx
   14000749b:	call   0x140007e4c
   1400074a0:	mov    rsi,QWORD PTR [rbp-0x30]
   1400074a4:	mov    rdi,QWORD PTR [rbp-0x48]
   1400074a8:	mov    rcx,QWORD PTR [rbp-0x18]
   1400074ac:	test   rcx,rcx
   1400074af:	je     0x1400074b7
   1400074b1:	call   QWORD PTR [rip+0x7d21]        # 0x14000f1d8
   1400074b7:	test   rsi,rsi
   1400074ba:	je     0x140007438
   1400074c0:	mov    rcx,rsi
   1400074c3:	jmp    0x140007432
   1400074c8:	lea    r9,[rbp+0x38]
   1400074cc:	lea    rcx,[rbp-0x18]
   1400074d0:	mov    r8,r12
   1400074d3:	xor    edx,edx
   1400074d5:	call   0x140005268
   1400074da:	test   eax,eax
   1400074dc:	jne    0x140007467
   1400074de:	test   rbx,rbx
   1400074e1:	je     0x14000751f
   1400074e3:	or     eax,0xffffffff
   1400074e6:	lock xadd DWORD PTR [rbx+0x10],eax
   1400074eb:	dec    eax
   1400074ed:	jne    0x140007517
   1400074ef:	mov    rbx,QWORD PTR [rbp+0x48]
   1400074f3:	mov    rcx,QWORD PTR [rbx]
   1400074f6:	test   rcx,rcx
   1400074f9:	je     0x140007501
   1400074fb:	call   QWORD PTR [rip+0x2e5f]        # 0x14000a360
   140007501:	mov    rcx,QWORD PTR [rbx+0x8]
   140007505:	test   rcx,rcx
   140007508:	je     0x14000750f
   14000750a:	call   0x140007eca
   14000750f:	mov    rcx,rbx
   140007512:	call   0x140007e4c
   140007517:	mov    rsi,QWORD PTR [rbp-0x30]
   14000751b:	mov    rdi,QWORD PTR [rbp-0x48]
   14000751f:	mov    rcx,QWORD PTR [rbp-0x18]
   140007523:	test   rcx,rcx
   140007526:	je     0x14000752e
   140007528:	call   QWORD PTR [rip+0x7caa]        # 0x14000f1d8
   14000752e:	test   rsi,rsi
   140007531:	je     0x14000753c
   140007533:	mov    rcx,rsi
   140007536:	call   QWORD PTR [rip+0x7c9c]        # 0x14000f1d8
   14000753c:	test   rdi,rdi
   14000753f:	je     0x14000754a
   140007541:	mov    rcx,rdi
   140007544:	call   QWORD PTR [rip+0x7c8e]        # 0x14000f1d8
   14000754a:	mov    eax,0x1
   14000754f:	add    rsp,0x70
   140007553:	pop    r12
   140007555:	pop    rdi
   140007556:	pop    rsi
   140007557:	pop    rbx
   140007558:	pop    rbp
   140007559:	ret    
   14000755a:	int3   
   14000755b:	int3   
   14000755c:	int3   
   14000755d:	int3   
   14000755e:	int3   
   14000755f:	int3   
   140007560:	int3   
   140007561:	int3   
   140007562:	int3   
   140007563:	int3   
   140007564:	int3   
   140007565:	int3   
   140007566:	int3   
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	mov    QWORD PTR [rsp+0x8],rbx
   140007571:	push   rbp
   140007572:	push   rsi
   140007573:	push   rdi
   140007574:	push   r12
   140007576:	push   r13
   140007578:	mov    rbp,rsp
   14000757b:	sub    rsp,0x60
   14000757f:	xor    r12d,r12d
   140007582:	mov    rsi,rcx
   140007585:	lea    rdx,[rip+0x471c]        # 0x14000bca8
   14000758c:	lea    rcx,[rbp+0x40]
   140007590:	mov    QWORD PTR [rbp-0x18],r12
   140007594:	mov    DWORD PTR [rbp-0x10],r12d
   140007598:	mov    QWORD PTR [rbp-0x8],r12
   14000759c:	lea    edi,[r12+0x1]
   1400075a1:	call   0x1400026bc
   1400075a6:	mov    r11,QWORD PTR [rbp+0x40]
   1400075aa:	mov    QWORD PTR [rbp+0x48],r11
   1400075ae:	test   r11,r11
   1400075b1:	je     0x1400075b8
   1400075b3:	lock add DWORD PTR [r11+0x10],edi
   1400075b8:	lea    rdx,[rip+0x3c2d]        # 0x14000b1ec
   1400075bf:	lea    rcx,[rbp-0x30]
   1400075c3:	call   0x1400026bc
   1400075c8:	lea    rdx,[rbp-0x30]
   1400075cc:	lea    rcx,[rbp+0x48]
   1400075d0:	call   0x1400051a8
   1400075d5:	mov    rax,QWORD PTR [rbp-0x30]
   1400075d9:	or     r13d,0xffffffff
   1400075dd:	test   rax,rax
   1400075e0:	je     0x140007617
   1400075e2:	mov    ecx,r13d
   1400075e5:	lock xadd DWORD PTR [rax+0x10],ecx
   1400075ea:	add    ecx,r13d
   1400075ed:	jne    0x140007617
   1400075ef:	mov    rbx,QWORD PTR [rbp-0x30]
   1400075f3:	mov    rcx,QWORD PTR [rbx]
   1400075f6:	test   rcx,rcx
   1400075f9:	je     0x140007601
   1400075fb:	call   QWORD PTR [rip+0x2d5f]        # 0x14000a360
   140007601:	mov    rcx,QWORD PTR [rbx+0x8]
   140007605:	test   rcx,rcx
   140007608:	je     0x14000760f
   14000760a:	call   0x140007eca
   14000760f:	mov    rcx,rbx
   140007612:	call   0x140007e4c
   140007617:	lea    rcx,[rbp-0x28]
   14000761b:	mov    rdx,rsi
   14000761e:	call   0x1400026bc
   140007623:	lea    rdx,[rbp-0x28]
   140007627:	lea    rcx,[rbp+0x48]
   14000762b:	call   0x1400051a8
   140007630:	mov    r11,QWORD PTR [rbp-0x28]
   140007634:	test   r11,r11
   140007637:	je     0x14000766f
   140007639:	mov    eax,r13d
   14000763c:	lock xadd DWORD PTR [r11+0x10],eax
   140007642:	add    eax,r13d
   140007645:	jne    0x14000766f
   140007647:	mov    rbx,QWORD PTR [rbp-0x28]
   14000764b:	mov    rcx,QWORD PTR [rbx]
   14000764e:	test   rcx,rcx
   140007651:	je     0x140007659
   140007653:	call   QWORD PTR [rip+0x2d07]        # 0x14000a360
   140007659:	mov    rcx,QWORD PTR [rbx+0x8]
   14000765d:	test   rcx,rcx
   140007660:	je     0x140007667
   140007662:	call   0x140007eca
   140007667:	mov    rcx,rbx
   14000766a:	call   0x140007e4c
   14000766f:	mov    rbx,QWORD PTR [rbp+0x48]
   140007673:	test   rbx,rbx
   140007676:	je     0x14000767d
   140007678:	mov    rdx,QWORD PTR [rbx]
   14000767b:	jmp    0x140007680
   14000767d:	mov    rdx,r12
   140007680:	lea    rax,[rbp-0x20]
   140007684:	mov    r9d,0x20019
   14000768a:	xor    r8d,r8d
   14000768d:	mov    rcx,0xffffffff80000001
   140007694:	mov    QWORD PTR [rsp+0x20],rax
   140007699:	call   QWORD PTR [rip+0x7b31]        # 0x14000f1d0
   14000769f:	test   eax,eax
   1400076a1:	je     0x1400077b6
   1400076a7:	cmp    eax,0x2
   1400076aa:	jne    0x140007736
   1400076b0:	test   rbx,rbx
   1400076b3:	je     0x1400076ea
   1400076b5:	mov    eax,r13d
   1400076b8:	lock xadd DWORD PTR [rbx+0x10],eax
   1400076bd:	add    eax,r13d
   1400076c0:	jne    0x1400076ea
   1400076c2:	mov    rbx,QWORD PTR [rbp+0x48]
   1400076c6:	mov    rcx,QWORD PTR [rbx]
   1400076c9:	test   rcx,rcx
   1400076cc:	je     0x1400076d4
   1400076ce:	call   QWORD PTR [rip+0x2c8c]        # 0x14000a360
   1400076d4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400076d8:	test   rcx,rcx
   1400076db:	je     0x1400076e2
   1400076dd:	call   0x140007eca
   1400076e2:	mov    rcx,rbx
   1400076e5:	call   0x140007e4c
   1400076ea:	mov    r11,QWORD PTR [rbp+0x40]
   1400076ee:	test   r11,r11
   1400076f1:	je     0x14000789d
   1400076f7:	mov    eax,r13d
   1400076fa:	lock xadd DWORD PTR [r11+0x10],eax
   140007700:	add    eax,r13d
   140007703:	jne    0x14000789d
   140007709:	mov    rbx,QWORD PTR [rbp+0x40]
   14000770d:	mov    rcx,QWORD PTR [rbx]
   140007710:	test   rcx,rcx
   140007713:	je     0x14000771b
   140007715:	call   QWORD PTR [rip+0x2c45]        # 0x14000a360
   14000771b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000771f:	test   rcx,rcx
   140007722:	je     0x140007729
   140007724:	call   0x140007eca
   140007729:	mov    rcx,rbx
   14000772c:	call   0x140007e4c
   140007731:	jmp    0x14000789d
   140007736:	test   rbx,rbx
   140007739:	je     0x140007770
   14000773b:	mov    eax,r13d
   14000773e:	lock xadd DWORD PTR [rbx+0x10],eax
   140007743:	add    eax,r13d
   140007746:	jne    0x140007770
   140007748:	mov    rbx,QWORD PTR [rbp+0x48]
   14000774c:	mov    rcx,QWORD PTR [rbx]
   14000774f:	test   rcx,rcx
   140007752:	je     0x14000775a
   140007754:	call   QWORD PTR [rip+0x2c06]        # 0x14000a360
   14000775a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000775e:	test   rcx,rcx
   140007761:	je     0x140007768
   140007763:	call   0x140007eca
   140007768:	mov    rcx,rbx
   14000776b:	call   0x140007e4c
   140007770:	mov    r11,QWORD PTR [rbp+0x40]
   140007774:	test   r11,r11
   140007777:	je     0x1400077af
   140007779:	mov    eax,r13d
   14000777c:	lock xadd DWORD PTR [r11+0x10],eax
   140007782:	add    eax,r13d
   140007785:	jne    0x1400077af
   140007787:	mov    rbx,QWORD PTR [rbp+0x40]
   14000778b:	mov    rcx,QWORD PTR [rbx]
   14000778e:	test   rcx,rcx
   140007791:	je     0x140007799
   140007793:	call   QWORD PTR [rip+0x2bc7]        # 0x14000a360
   140007799:	mov    rcx,QWORD PTR [rbx+0x8]
   14000779d:	test   rcx,rcx
   1400077a0:	je     0x1400077a7
   1400077a2:	call   0x140007eca
   1400077a7:	mov    rcx,rbx
   1400077aa:	call   0x140007e4c
   1400077af:	xor    eax,eax
   1400077b1:	jmp    0x14000789f
   1400077b6:	mov    rcx,QWORD PTR [rbp-0x20]
   1400077ba:	call   QWORD PTR [rip+0x7a18]        # 0x14000f1d8
   1400077c0:	mov    r11,QWORD PTR [rbp+0x40]
   1400077c4:	test   r11,r11
   1400077c7:	je     0x1400077ce
   1400077c9:	mov    r8,QWORD PTR [r11]
   1400077cc:	jmp    0x1400077d1
   1400077ce:	mov    r8,r12
   1400077d1:	lea    rcx,[rbp-0x18]
   1400077d5:	mov    rdx,0xffffffff80000001
   1400077dc:	mov    r9d,0x2001f
   1400077e2:	call   0x1400010b8
   1400077e7:	test   eax,eax
   1400077e9:	jne    0x140007815
   1400077eb:	lea    rcx,[rbp-0x18]
   1400077ef:	mov    rdx,rsi
   1400077f2:	call   0x140003220
   1400077f7:	test   eax,eax
   1400077f9:	je     0x140007802
   1400077fb:	cmp    eax,0x2
   1400077fe:	cmovne edi,r12d
   140007802:	mov    rcx,QWORD PTR [rbp-0x18]
   140007806:	test   rcx,rcx
   140007809:	je     0x140007815
   14000780b:	call   QWORD PTR [rip+0x79c7]        # 0x14000f1d8
   140007811:	mov    QWORD PTR [rbp-0x18],r12
   140007815:	test   rbx,rbx
   140007818:	je     0x14000784f
   14000781a:	mov    eax,r13d
   14000781d:	lock xadd DWORD PTR [rbx+0x10],eax
   140007822:	add    eax,r13d
   140007825:	jne    0x14000784f
   140007827:	mov    rbx,QWORD PTR [rbp+0x48]
   14000782b:	mov    rcx,QWORD PTR [rbx]
   14000782e:	test   rcx,rcx
   140007831:	je     0x140007839
   140007833:	call   QWORD PTR [rip+0x2b27]        # 0x14000a360
   140007839:	mov    rcx,QWORD PTR [rbx+0x8]
   14000783d:	test   rcx,rcx
   140007840:	je     0x140007847
   140007842:	call   0x140007eca
   140007847:	mov    rcx,rbx
   14000784a:	call   0x140007e4c
   14000784f:	mov    r11,QWORD PTR [rbp+0x40]
   140007853:	test   r11,r11
   140007856:	je     0x14000788e
   140007858:	mov    eax,r13d
   14000785b:	lock xadd DWORD PTR [r11+0x10],eax
   140007861:	add    eax,r13d
   140007864:	jne    0x14000788e
   140007866:	mov    rbx,QWORD PTR [rbp+0x40]
   14000786a:	mov    rcx,QWORD PTR [rbx]
   14000786d:	test   rcx,rcx
   140007870:	je     0x140007878
   140007872:	call   QWORD PTR [rip+0x2ae8]        # 0x14000a360
   140007878:	mov    rcx,QWORD PTR [rbx+0x8]
   14000787c:	test   rcx,rcx
   14000787f:	je     0x140007886
   140007881:	call   0x140007eca
   140007886:	mov    rcx,rbx
   140007889:	call   0x140007e4c
   14000788e:	mov    rcx,QWORD PTR [rbp-0x18]
   140007892:	test   rcx,rcx
   140007895:	je     0x14000789d
   140007897:	call   QWORD PTR [rip+0x793b]        # 0x14000f1d8
   14000789d:	mov    eax,edi
   14000789f:	mov    rbx,QWORD PTR [rsp+0x90]
   1400078a7:	add    rsp,0x60
   1400078ab:	pop    r13
   1400078ad:	pop    r12
   1400078af:	pop    rdi
   1400078b0:	pop    rsi
   1400078b1:	pop    rbp
   1400078b2:	ret    
   1400078b3:	int3   
   1400078b4:	mov    rax,rsp
   1400078b7:	mov    QWORD PTR [rax+0x8],rbx
   1400078bb:	mov    QWORD PTR [rax+0x10],rsi
   1400078bf:	push   rdi
   1400078c0:	sub    rsp,0x40
   1400078c4:	lea    rbx,[rcx+0x18]
   1400078c8:	xor    esi,esi
   1400078ca:	mov    rdi,rcx
   1400078cd:	cmp    QWORD PTR [rbx],rsi
   1400078d0:	jne    0x140007991
   1400078d6:	mov    r8d,DWORD PTR [rcx+0x8]
   1400078da:	mov    QWORD PTR [rax-0x18],rsi
   1400078de:	mov    DWORD PTR [rax-0x20],esi
   1400078e1:	mov    r9d,0x400
   1400078e7:	xor    edx,edx
   1400078e9:	mov    ecx,0x1300
   1400078ee:	mov    QWORD PTR [rax-0x28],rbx
   1400078f2:	call   QWORD PTR [rip+0x27f8]        # 0x14000a0f0
   1400078f8:	mov    rcx,QWORD PTR [rbx]
   1400078fb:	test   rcx,rcx
   1400078fe:	je     0x140007933
   140007900:	call   QWORD PTR [rip+0x272a]        # 0x14000a030
   140007906:	cmp    eax,0x1
   140007909:	jle    0x140007991
   14000790f:	mov    rcx,QWORD PTR [rbx]
   140007912:	cdqe   
   140007914:	cmp    WORD PTR [rcx+rax*2-0x2],0xa
   14000791a:	jne    0x140007991
   14000791c:	mov    WORD PTR [rcx+rax*2-0x2],si
   140007921:	mov    rcx,QWORD PTR [rbx]
   140007924:	cmp    WORD PTR [rcx+rax*2-0x4],0xd
   14000792a:	jne    0x140007991
   14000792c:	mov    WORD PTR [rcx+rax*2-0x4],si
   140007931:	jmp    0x140007991
   140007933:	mov    edx,0x40
   140007938:	xor    ecx,ecx
   14000793a:	call   QWORD PTR [rip+0x27a8]        # 0x14000a0e8
   140007940:	mov    rcx,rax
   140007943:	mov    QWORD PTR [rbx],rax
   140007946:	test   rax,rax
   140007949:	je     0x140007991
   14000794b:	mov    r9d,DWORD PTR [rdi+0x8]
   14000794f:	lea    eax,[r9+0x7ffbfe00]
   140007956:	cmp    eax,0xfdff
   14000795b:	ja     0x14000796b
   14000795d:	mov    edx,0x200
   140007962:	movzx  eax,r9w
   140007966:	sub    ax,dx
   140007969:	jmp    0x14000796d
   14000796b:	mov    eax,esi
   14000796d:	mov    edx,0x20
   140007972:	test   ax,ax
   140007975:	je     0x140007984
   140007977:	movzx  r9d,ax
   14000797b:	lea    r8,[rip+0x43fe]        # 0x14000bd80
   140007982:	jmp    0x14000798b
   140007984:	lea    r8,[rip+0x43c5]        # 0x14000bd50
   14000798b:	call   QWORD PTR [rip+0x288f]        # 0x14000a220
   140007991:	mov    rax,QWORD PTR [rbx]
   140007994:	mov    rsi,QWORD PTR [rsp+0x58]
   140007999:	mov    rbx,QWORD PTR [rsp+0x50]
   14000799e:	add    rsp,0x40
   1400079a2:	pop    rdi
   1400079a3:	ret    
   1400079a4:	rex.W jmp QWORD PTR [rip+0x28a5]        # 0x14000a250
   1400079ab:	int3   
   1400079ac:	int3   
   1400079ad:	int3   
   1400079ae:	int3   
   1400079af:	int3   
   1400079b0:	int3   
   1400079b1:	int3   
   1400079b2:	int3   
   1400079b3:	int3   
   1400079b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400079b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400079be:	push   rdi
   1400079bf:	sub    rsp,0x50
   1400079c3:	mov    rax,QWORD PTR [rip+0x77ce]        # 0x14000f198
   1400079ca:	xor    rax,rsp
   1400079cd:	mov    QWORD PTR [rsp+0x40],rax
   1400079d2:	mov    rdi,rcx
   1400079d5:	lea    rcx,[rsp+0x30]
   1400079da:	mov    rbx,rdx
   1400079dd:	call   QWORD PTR [rip+0x2885]        # 0x14000a268
   1400079e3:	lea    rcx,[rsp+0x30]
   1400079e8:	call   QWORD PTR [rip+0x2862]        # 0x14000a250
   1400079ee:	lea    r8,[rip+0x454b]        # 0x14000bf40
   1400079f5:	mov    rdx,rbx
   1400079f8:	mov    r9,rax
   1400079fb:	mov    rcx,rdi
   1400079fe:	call   QWORD PTR [rip+0x285c]        # 0x14000a260
   140007a04:	xor    esi,esi
   140007a06:	test   rax,rax
   140007a09:	je     0x140007a44
   140007a0b:	lea    rcx,[rax+0x4]
   140007a0f:	cmp    rcx,rbx
   140007a12:	jae    0x140007a44
   140007a14:	movzx  r8d,WORD PTR [rsp+0x38]
   140007a1a:	sub    rbx,rax
   140007a1d:	lea    rcx,[rdi+rax*2]
   140007a21:	mov    DWORD PTR [rsp+0x20],r8d
   140007a26:	lea    rdx,[rbx-0x1]
   140007a2a:	lea    r9,[rip+0x452f]        # 0x14000bf60
   140007a31:	or     r8,0xffffffffffffffff
   140007a35:	call   QWORD PTR [rip+0x281d]        # 0x14000a258
   140007a3b:	test   eax,eax
   140007a3d:	jns    0x140007a44
   140007a3f:	mov    WORD PTR [rdi+rbx*2-0x2],si
   140007a44:	mov    rax,rdi
   140007a47:	mov    rcx,QWORD PTR [rsp+0x40]
   140007a4c:	xor    rcx,rsp
   140007a4f:	call   0x140008020
   140007a54:	mov    rbx,QWORD PTR [rsp+0x70]
   140007a59:	mov    rsi,QWORD PTR [rsp+0x78]
   140007a5e:	add    rsp,0x50
   140007a62:	pop    rdi
   140007a63:	ret    
   140007a64:	int3   
   140007a65:	int3   
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	int3   
   140007a6b:	int3   
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	int3   
   140007a71:	int3   
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	mov    QWORD PTR [rsp+0x18],rbx
   140007a79:	mov    QWORD PTR [rsp+0x20],rsi
   140007a7e:	push   rbp
   140007a7f:	push   rdi
   140007a80:	push   r12
   140007a82:	push   r13
   140007a84:	push   r14
   140007a86:	lea    rbp,[rsp-0xf90]
   140007a8e:	mov    eax,0x1090
   140007a93:	call   0x140008050
   140007a98:	sub    rsp,rax
   140007a9b:	mov    rax,QWORD PTR [rip+0x76f6]        # 0x14000f198
   140007aa2:	xor    rax,rsp
   140007aa5:	mov    QWORD PTR [rbp+0xf80],rax
   140007aac:	mov    rsi,rcx
   140007aaf:	mov    rdi,rdx
   140007ab2:	mov    ebx,0x7fe
   140007ab7:	lea    rcx,[rbp+0x782]
   140007abe:	xor    r13d,r13d
   140007ac1:	xor    edx,edx
   140007ac3:	mov    r8d,ebx
   140007ac6:	mov    WORD PTR [rbp+0x780],r13w
   140007ace:	call   0x140007ebe
   140007ad3:	or     r14,0xffffffffffffffff
   140007ad7:	lea    rcx,[rbp+0x780]
   140007ade:	mov    r8,r14
   140007ae1:	mov    r9,rsi
   140007ae4:	mov    edx,0x400
   140007ae9:	mov    QWORD PTR [rsp+0x20],rdi
   140007aee:	call   QWORD PTR [rip+0x277c]        # 0x14000a270
   140007af4:	test   eax,eax
   140007af6:	jns    0x140007b00
   140007af8:	mov    WORD PTR [rbp+0xf7e],r13w
   140007b00:	xor    edx,edx
   140007b02:	lea    rcx,[rsp+0x42]
   140007b07:	mov    WORD PTR [rsp+0x40],r13w
   140007b0d:	lea    r8d,[rdx+0x3e]
   140007b11:	call   0x140007ebe
   140007b16:	mov    edi,0x20
   140007b1b:	lea    rcx,[rsp+0x40]
   140007b20:	mov    edx,edi
   140007b22:	call   0x1400079b4
   140007b27:	lea    r8,[rip+0x431e]        # 0x14000be4c
   140007b2e:	lea    rcx,[rsp+0x40]
   140007b33:	mov    edx,edi
   140007b35:	call   QWORD PTR [rip+0x2705]        # 0x14000a240
   140007b3b:	lea    rcx,[rbp-0x7e]
   140007b3f:	mov    r8,rbx
   140007b42:	xor    edx,edx
   140007b44:	mov    WORD PTR [rbp-0x80],r13w
   140007b49:	call   0x140007ebe
   140007b4e:	xor    eax,eax
   140007b50:	mov    rcx,r14
   140007b53:	mov    rdi,rsi
   140007b56:	repnz scas ax,WORD PTR es:[rdi]
   140007b59:	not    rcx
   140007b5c:	dec    rcx
   140007b5f:	cmp    rcx,0x6
   140007b63:	jbe    0x140007b7c
   140007b65:	lea    rsi,[rsi+rcx*2-0xc]
   140007b6a:	lea    rdi,[rip+0x43ff]        # 0x14000bf70
   140007b71:	lea    ecx,[rax+0x7]
   140007b74:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140007b77:	lea    edx,[rax+0x1]
   140007b7a:	je     0x140007b7f
   140007b7c:	mov    edx,r13d
   140007b7f:	lea    rdi,[rsp+0x40]
   140007b84:	mov    rcx,r14
   140007b87:	lea    rbx,[rip+0x42ce]        # 0x14000be5c
   140007b8e:	repnz scas ax,WORD PTR es:[rdi]
   140007b91:	lea    rax,[rip+0x43e8]        # 0x14000bf80
   140007b98:	test   edx,edx
   140007b9a:	not    rcx
   140007b9d:	cmovne rbx,rax
   140007ba1:	lea    rsi,[rcx-0x1]
   140007ba5:	lea    r12,[rcx+rcx*1-0x2]
   140007baa:	call   QWORD PTR [rip+0x2570]        # 0x14000a120
   140007bb0:	mov    edi,eax
   140007bb2:	call   QWORD PTR [rip+0x2560]        # 0x14000a118
   140007bb8:	mov    edx,0x3ff
   140007bbd:	sub    rdx,rsi
   140007bc0:	lea    rsi,[rbp+0x780]
   140007bc7:	lea    rcx,[rbp+r12*1-0x80]
   140007bcc:	mov    QWORD PTR [rsp+0x38],rsi
   140007bd1:	mov    QWORD PTR [rsp+0x30],rbx
   140007bd6:	lea    r9,[rip+0x43b3]        # 0x14000bf90
   140007bdd:	mov    r8,r14
   140007be0:	mov    DWORD PTR [rsp+0x28],edi
   140007be4:	mov    DWORD PTR [rsp+0x20],eax
   140007be8:	call   QWORD PTR [rip+0x266a]        # 0x14000a258
   140007bee:	test   eax,eax
   140007bf0:	jns    0x140007c11
   140007bf2:	mov    rdx,r13
   140007bf5:	lea    rax,[rip+0x43bc]        # 0x14000bfb8
   140007bfc:	movzx  eax,WORD PTR [rdx+rax*1]
   140007c00:	add    rdx,0x2
   140007c04:	mov    WORD PTR [rbp+rdx*1+0x774],ax
   140007c0c:	test   ax,ax
   140007c0f:	jne    0x140007bf5
   140007c11:	lea    rdx,[rsp+0x40]
   140007c16:	lea    rcx,[rbp-0x80]
   140007c1a:	mov    r8,r12
   140007c1d:	call   0x14000820c
   140007c22:	xor    eax,eax
   140007c24:	lea    rdi,[rbp-0x80]
   140007c28:	mov    rcx,r14
   140007c2b:	repnz scas ax,WORD PTR es:[rdi]
   140007c2e:	mov    eax,DWORD PTR [rip+0x4258]        # 0x14000be8c
   140007c34:	lea    rcx,[rbp-0x80]
   140007c38:	mov    DWORD PTR [rdi-0x2],eax
   140007c3b:	call   QWORD PTR [rip+0x24cf]        # 0x14000a110
   140007c41:	mov    rcx,QWORD PTR [rbp+0xf80]
   140007c48:	xor    rcx,rsp
   140007c4b:	call   0x140008020
   140007c50:	lea    r11,[rsp+0x1090]
   140007c58:	mov    rbx,QWORD PTR [r11+0x40]
   140007c5c:	mov    rsi,QWORD PTR [r11+0x48]
   140007c60:	mov    rsp,r11
   140007c63:	pop    r14
   140007c65:	pop    r13
   140007c67:	pop    r12
   140007c69:	pop    rdi
   140007c6a:	pop    rbp
   140007c6b:	ret    
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	int3   
   140007c71:	int3   
   140007c72:	int3   
   140007c73:	int3   
   140007c74:	mov    rax,rsp
   140007c77:	mov    QWORD PTR [rax+0x8],rcx
   140007c7b:	mov    QWORD PTR [rax+0x10],rdx
   140007c7f:	mov    QWORD PTR [rax+0x18],r8
   140007c83:	mov    QWORD PTR [rax+0x20],r9
   140007c87:	sub    rsp,0x28
   140007c8b:	lea    rdx,[rax+0x10]
   140007c8f:	call   0x140007a74
   140007c94:	add    rsp,0x28
   140007c98:	ret    
   140007c99:	lea    rax,[rip+0x7530]        # 0x14000f1d0
   140007ca0:	jmp    0x140007ca5
   140007ca5:	mov    QWORD PTR [rsp+0x8],rcx
   140007caa:	mov    QWORD PTR [rsp+0x10],rdx
   140007caf:	mov    QWORD PTR [rsp+0x18],r8
   140007cb4:	mov    QWORD PTR [rsp+0x20],r9
   140007cb9:	sub    rsp,0x68
   140007cbd:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007cc3:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007cc9:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140007ccf:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007cd5:	mov    rdx,rax
   140007cd8:	lea    rcx,[rip+0x57e9]        # 0x14000d4c8
   140007cdf:	call   0x140008bb4
   140007ce4:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007cea:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140007cf0:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007cf6:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007cfc:	mov    rcx,QWORD PTR [rsp+0x70]
   140007d01:	mov    rdx,QWORD PTR [rsp+0x78]
   140007d06:	mov    r8,QWORD PTR [rsp+0x80]
   140007d0e:	mov    r9,QWORD PTR [rsp+0x88]
   140007d16:	add    rsp,0x68
   140007d1a:	jmp    0x140007d1c
   140007d1c:	jmp    rax
   140007d1e:	lea    rax,[rip+0x74b3]        # 0x14000f1d8
   140007d25:	jmp    0x140007ca5
   140007d2a:	lea    rax,[rip+0x74af]        # 0x14000f1e0
   140007d31:	jmp    0x140007ca5
   140007d36:	lea    rax,[rip+0x74ab]        # 0x14000f1e8
   140007d3d:	jmp    0x140007ca5
   140007d42:	lea    rax,[rip+0x74a7]        # 0x14000f1f0
   140007d49:	jmp    0x140007ca5
   140007d4e:	lea    rax,[rip+0x74a3]        # 0x14000f1f8
   140007d55:	jmp    0x140007ca5
   140007d5a:	lea    rax,[rip+0x749f]        # 0x14000f200
   140007d61:	jmp    0x140007ca5
   140007d66:	lea    rax,[rip+0x749b]        # 0x14000f208
   140007d6d:	jmp    0x140007ca5
   140007d72:	lea    rax,[rip+0x7497]        # 0x14000f210
   140007d79:	jmp    0x140007ca5
   140007d7e:	lea    rax,[rip+0x7493]        # 0x14000f218
   140007d85:	jmp    0x140007ca5
   140007d8a:	lea    rax,[rip+0x748f]        # 0x14000f220
   140007d91:	jmp    0x140007ca5
   140007d96:	lea    rax,[rip+0x748b]        # 0x14000f228
   140007d9d:	jmp    0x140007ca5
   140007da2:	lea    rax,[rip+0x7487]        # 0x14000f230
   140007da9:	jmp    0x140007ca5
   140007dae:	lea    rax,[rip+0x749b]        # 0x14000f250
   140007db5:	jmp    0x140007dba
   140007dba:	mov    QWORD PTR [rsp+0x8],rcx
   140007dbf:	mov    QWORD PTR [rsp+0x10],rdx
   140007dc4:	mov    QWORD PTR [rsp+0x18],r8
   140007dc9:	mov    QWORD PTR [rsp+0x20],r9
   140007dce:	sub    rsp,0x68
   140007dd2:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007dd8:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140007dde:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140007de4:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140007dea:	mov    rdx,rax
   140007ded:	lea    rcx,[rip+0x56f4]        # 0x14000d4e8
   140007df4:	call   0x140008bb4
   140007df9:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140007dff:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140007e05:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140007e0b:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140007e11:	mov    rcx,QWORD PTR [rsp+0x70]
   140007e16:	mov    rdx,QWORD PTR [rsp+0x78]
   140007e1b:	mov    r8,QWORD PTR [rsp+0x80]
   140007e23:	mov    r9,QWORD PTR [rsp+0x88]
   140007e2b:	add    rsp,0x68
   140007e2f:	jmp    0x140007e31
   140007e31:	jmp    rax
   140007e33:	lea    rax,[rip+0x7406]        # 0x14000f240
   140007e3a:	jmp    0x140007dba
   140007e3f:	lea    rax,[rip+0x7402]        # 0x14000f248
   140007e46:	jmp    0x140007dba
   140007e4b:	int3   
   140007e4c:	jmp    QWORD PTR [rip+0x24de]        # 0x14000a330
   140007e52:	int3   
   140007e53:	int3   
   140007e54:	mov    QWORD PTR [rsp+0x8],rbx
   140007e59:	mov    QWORD PTR [rsp+0x10],rsi
   140007e5e:	push   rdi
   140007e5f:	sub    rsp,0x20
   140007e63:	mov    esi,edx
   140007e65:	mov    rbx,rcx
   140007e68:	test   dl,0x2
   140007e6b:	je     0x140007e97
   140007e6d:	mov    r8d,DWORD PTR [rcx-0x8]
   140007e71:	lea    r9,[rip+0xab0]        # 0x140008928
   140007e78:	mov    edx,0x18
   140007e7d:	call   0x140007f1c
   140007e82:	test   sil,0x1
   140007e86:	je     0x140007e91
   140007e88:	lea    rcx,[rbx-0x8]
   140007e8c:	call   0x140007e4c
   140007e91:	lea    rax,[rbx-0x8]
   140007e95:	jmp    0x140007ead
   140007e97:	call   0x140008928
   140007e9c:	test   sil,0x1
   140007ea0:	je     0x140007eaa
   140007ea2:	mov    rcx,rbx
   140007ea5:	call   0x140007e4c
   140007eaa:	mov    rax,rbx
   140007ead:	mov    rbx,QWORD PTR [rsp+0x30]
   140007eb2:	mov    rsi,QWORD PTR [rsp+0x38]
   140007eb7:	add    rsp,0x20
   140007ebb:	pop    rdi
   140007ebc:	ret    
   140007ebd:	int3   
   140007ebe:	jmp    QWORD PTR [rip+0x22ec]        # 0x14000a1b0
   140007ec4:	jmp    QWORD PTR [rip+0x22ee]        # 0x14000a1b8
   140007eca:	jmp    QWORD PTR [rip+0x22f0]        # 0x14000a1c0
   140007ed0:	mov    QWORD PTR [rsp+0x10],rbx
   140007ed5:	mov    DWORD PTR [rsp+0x18],r8d
   140007eda:	mov    QWORD PTR [rsp+0x8],rcx
   140007edf:	push   rsi
   140007ee0:	push   rdi
   140007ee1:	push   r12
   140007ee3:	sub    rsp,0x40
   140007ee7:	mov    rsi,r9
   140007eea:	mov    edi,r8d
   140007eed:	mov    r12,rdx
   140007ef0:	mov    rbx,rcx
   140007ef3:	dec    edi
   140007ef5:	mov    DWORD PTR [rsp+0x70],edi
   140007ef9:	js     0x140007f0a
   140007efb:	sub    rbx,r12
   140007efe:	mov    QWORD PTR [rsp+0x60],rbx
   140007f03:	mov    rcx,rbx
   140007f06:	call   rsi
   140007f08:	jmp    0x140007ef3
   140007f0a:	jmp    0x140007f0c
   140007f0c:	mov    rbx,QWORD PTR [rsp+0x68]
   140007f11:	add    rsp,0x40
   140007f15:	pop    r12
   140007f17:	pop    rdi
   140007f18:	pop    rsi
   140007f19:	ret    
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	mov    rax,rsp
   140007f1f:	mov    QWORD PTR [rax+0x20],r9
   140007f23:	mov    DWORD PTR [rax+0x18],r8d
   140007f27:	mov    QWORD PTR [rax+0x10],rdx
   140007f2b:	push   rbx
   140007f2c:	push   rsi
   140007f2d:	push   rdi
   140007f2e:	push   r12
   140007f30:	sub    rsp,0x38
   140007f34:	mov    r12,r9
   140007f37:	movsxd rdi,r8d
   140007f3a:	mov    rsi,rdx
   140007f3d:	and    DWORD PTR [rax-0x38],0x0
   140007f41:	mov    rbx,rdi
   140007f44:	imul   rbx,rdx
   140007f48:	add    rbx,rcx
   140007f4b:	mov    QWORD PTR [rax+0x8],rbx
   140007f4f:	dec    edi
   140007f51:	mov    DWORD PTR [rsp+0x70],edi
   140007f55:	js     0x140007f67
   140007f57:	sub    rbx,rsi
   140007f5a:	mov    QWORD PTR [rsp+0x60],rbx
   140007f5f:	mov    rcx,rbx
   140007f62:	call   r12
   140007f65:	jmp    0x140007f4f
   140007f67:	mov    DWORD PTR [rsp+0x20],0x1
   140007f6f:	add    rsp,0x38
   140007f73:	pop    r12
   140007f75:	pop    rdi
   140007f76:	pop    rsi
   140007f77:	pop    rbx
   140007f78:	ret    
   140007f79:	int3   
   140007f7a:	jmp    QWORD PTR [rip+0x2248]        # 0x14000a1c8
   140007f80:	rex push rbx
   140007f82:	sub    rsp,0x20
   140007f86:	mov    r11d,DWORD PTR [r8]
   140007f89:	mov    rbx,rdx
   140007f8c:	mov    r9,rcx
   140007f8f:	and    r11d,0xfffffff8
   140007f93:	test   BYTE PTR [r8],0x4
   140007f97:	mov    r10,rcx
   140007f9a:	je     0x140007faf
   140007f9c:	mov    eax,DWORD PTR [r8+0x8]
   140007fa0:	movsxd r10,DWORD PTR [r8+0x4]
   140007fa4:	neg    eax
   140007fa6:	add    r10,rcx
   140007fa9:	movsxd rcx,eax
   140007fac:	and    r10,rcx
   140007faf:	movsxd rax,r11d
   140007fb2:	mov    rdx,QWORD PTR [rax+r10*1]
   140007fb6:	mov    rax,QWORD PTR [rbx+0x10]
   140007fba:	mov    ecx,DWORD PTR [rax+0x8]
   140007fbd:	add    rcx,QWORD PTR [rbx+0x8]
   140007fc1:	test   BYTE PTR [rcx+0x3],0xf
   140007fc5:	je     0x140007fd3
   140007fc7:	movzx  eax,BYTE PTR [rcx+0x3]
   140007fcb:	and    eax,0xfffffff0
   140007fce:	cdqe   
   140007fd0:	add    r9,rax
   140007fd3:	xor    r9,rdx
   140007fd6:	mov    rcx,r9
   140007fd9:	add    rsp,0x20
   140007fdd:	pop    rbx
   140007fde:	jmp    0x140008020
   140007fe3:	int3   
   140007fe4:	sub    rsp,0x28
   140007fe8:	mov    r8,QWORD PTR [r9+0x38]
   140007fec:	mov    rcx,rdx
   140007fef:	mov    rdx,r9
   140007ff2:	call   0x140007f80
   140007ff7:	mov    eax,0x1
   140007ffc:	add    rsp,0x28
   140008000:	ret    
   140008001:	int3   
   140008002:	int3   
   140008003:	int3   
   140008004:	int3   
   140008005:	int3   
   140008006:	int3   
   140008007:	int3   
   140008008:	int3   
   140008009:	int3   
   14000800a:	int3   
   14000800b:	int3   
   14000800c:	int3   
   14000800d:	int3   
   14000800e:	int3   
   14000800f:	int3   
   140008010:	int3   
   140008011:	int3   
   140008012:	int3   
   140008013:	int3   
   140008014:	int3   
   140008015:	int3   
   140008016:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008020:	cmp    rcx,QWORD PTR [rip+0x7171]        # 0x14000f198
   140008027:	jne    0x14000803a
   140008029:	rol    rcx,0x10
   14000802d:	test   cx,0xffff
   140008032:	jne    0x140008036
   140008034:	repz ret 
   140008036:	ror    rcx,0x10
   14000803a:	jmp    0x140008564
   14000803f:	int3   
   140008040:	int3   
   140008041:	int3   
   140008042:	int3   
   140008043:	int3   
   140008044:	int3   
   140008045:	int3   
   140008046:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008050:	sub    rsp,0x10
   140008054:	mov    QWORD PTR [rsp],r10
   140008058:	mov    QWORD PTR [rsp+0x8],r11
   14000805d:	xor    r11,r11
   140008060:	lea    r10,[rsp+0x18]
   140008065:	sub    r10,rax
   140008068:	cmovb  r10,r11
   14000806c:	mov    r11,QWORD PTR gs:0x10
   140008075:	cmp    r10,r11
   140008078:	jae    0x140008090
   14000807a:	and    r10w,0xf000
   140008080:	lea    r11,[r11-0x1000]
   140008087:	mov    BYTE PTR [r11],0x0
   14000808b:	cmp    r10,r11
   14000808e:	jne    0x140008080
   140008090:	mov    r10,QWORD PTR [rsp]
   140008094:	mov    r11,QWORD PTR [rsp+0x8]
   140008099:	add    rsp,0x10
   14000809d:	ret    
   14000809e:	jmp    QWORD PTR [rip+0x2144]        # 0x14000a1e8
   1400080a4:	jmp    QWORD PTR [rip+0x2146]        # 0x14000a1f0
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	mov    rax,rsp
   1400080af:	mov    QWORD PTR [rax+0x8],rbx
   1400080b3:	mov    QWORD PTR [rax+0x10],rbp
   1400080b7:	mov    QWORD PTR [rax+0x18],rsi
   1400080bb:	mov    QWORD PTR [rax+0x20],rdi
   1400080bf:	push   r12
   1400080c1:	sub    rsp,0x20
   1400080c5:	mov    rbx,QWORD PTR [r9+0x38]
   1400080c9:	mov    rsi,rdx
   1400080cc:	mov    r12,r8
   1400080cf:	mov    rbp,rcx
   1400080d2:	lea    r8,[rbx+0x4]
   1400080d6:	mov    rdx,r9
   1400080d9:	mov    rcx,rsi
   1400080dc:	mov    rdi,r9
   1400080df:	call   0x140007f80
   1400080e4:	mov    r11d,DWORD PTR [rbx+0x4]
   1400080e8:	mov    r10d,DWORD PTR [rbp+0x4]
   1400080ec:	mov    eax,r11d
   1400080ef:	and    r11d,0x2
   1400080f3:	mov    r8d,0x1
   1400080f9:	and    eax,r8d
   1400080fc:	and    r10b,0x66
   140008100:	cmove  r11d,eax
   140008104:	test   r11d,r11d
   140008107:	je     0x14000811d
   140008109:	mov    r9,rdi
   14000810c:	mov    r8,r12
   14000810f:	mov    rdx,rsi
   140008112:	mov    rcx,rbp
   140008115:	call   0x140007f7a
   14000811a:	mov    r8d,eax
   14000811d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008122:	mov    rbp,QWORD PTR [rsp+0x38]
   140008127:	mov    rsi,QWORD PTR [rsp+0x40]
   14000812c:	mov    rdi,QWORD PTR [rsp+0x48]
   140008131:	mov    eax,r8d
   140008134:	add    rsp,0x20
   140008138:	pop    r12
   14000813a:	ret    
   14000813b:	int3   
   14000813c:	jmp    QWORD PTR [rip+0x20c6]        # 0x14000a208
   140008142:	int3   
   140008143:	int3   
   140008144:	rex push rbx
   140008146:	sub    rsp,0x20
   14000814a:	mov    rbx,rcx
   14000814d:	mov    rcx,QWORD PTR [rip+0x7864]        # 0x14000f9b8
   140008154:	call   QWORD PTR [rip+0x203e]        # 0x14000a198
   14000815a:	mov    QWORD PTR [rsp+0x38],rax
   14000815f:	cmp    rax,0xffffffffffffffff
   140008163:	jne    0x140008170
   140008165:	mov    rcx,rbx
   140008168:	call   QWORD PTR [rip+0x213a]        # 0x14000a2a8
   14000816e:	jmp    0x1400081ee
   140008170:	mov    ecx,0x8
   140008175:	call   0x1400086ba
   14000817a:	nop
   14000817b:	mov    rcx,QWORD PTR [rip+0x7836]        # 0x14000f9b8
   140008182:	call   QWORD PTR [rip+0x2010]        # 0x14000a198
   140008188:	mov    QWORD PTR [rsp+0x38],rax
   14000818d:	mov    rcx,QWORD PTR [rip+0x781c]        # 0x14000f9b0
   140008194:	call   QWORD PTR [rip+0x1ffe]        # 0x14000a198
   14000819a:	mov    QWORD PTR [rsp+0x40],rax
   14000819f:	mov    rcx,rbx
   1400081a2:	call   QWORD PTR [rip+0x1ff8]        # 0x14000a1a0
   1400081a8:	mov    rcx,rax
   1400081ab:	lea    r8,[rsp+0x40]
   1400081b0:	lea    rdx,[rsp+0x38]
   1400081b5:	call   0x1400086b4
   1400081ba:	mov    rbx,rax
   1400081bd:	mov    rcx,QWORD PTR [rsp+0x38]
   1400081c2:	call   QWORD PTR [rip+0x1fd8]        # 0x14000a1a0
   1400081c8:	mov    QWORD PTR [rip+0x77e9],rax        # 0x14000f9b8
   1400081cf:	mov    rcx,QWORD PTR [rsp+0x40]
   1400081d4:	call   QWORD PTR [rip+0x1fc6]        # 0x14000a1a0
   1400081da:	mov    QWORD PTR [rip+0x77cf],rax        # 0x14000f9b0
   1400081e1:	mov    ecx,0x8
   1400081e6:	call   0x1400086ae
   1400081eb:	mov    rax,rbx
   1400081ee:	add    rsp,0x20
   1400081f2:	pop    rbx
   1400081f3:	ret    
   1400081f4:	sub    rsp,0x28
   1400081f8:	call   0x140008144
   1400081fd:	neg    rax
   140008200:	sbb    eax,eax
   140008202:	neg    eax
   140008204:	dec    eax
   140008206:	add    rsp,0x28
   14000820a:	ret    
   14000820b:	int3   
   14000820c:	jmp    QWORD PTR [rip+0x2066]        # 0x14000a278
   140008212:	int3   
   140008213:	int3   
   140008214:	sub    rsp,0x38
   140008218:	lea    rcx,[rip+0x53d]        # 0x14000875c
   14000821f:	call   0x1400081f4
   140008224:	mov    r11d,DWORD PTR [rip+0x76e9]        # 0x14000f914
   14000822b:	mov    r9d,DWORD PTR [rip+0x76de]        # 0x14000f910
   140008232:	lea    rax,[rip+0x715b]        # 0x14000f394
   140008239:	lea    r8,[rip+0x7140]        # 0x14000f380
   140008240:	lea    rdx,[rip+0x7141]        # 0x14000f388
   140008247:	lea    rcx,[rip+0x712a]        # 0x14000f378
   14000824e:	mov    DWORD PTR [rip+0x713f],r11d        # 0x14000f394
   140008255:	mov    QWORD PTR [rsp+0x20],rax
   14000825a:	call   QWORD PTR [rip+0x2058]        # 0x14000a2b8
   140008260:	mov    DWORD PTR [rip+0x712a],eax        # 0x14000f390
   140008266:	test   eax,eax
   140008268:	jns    0x140008274
   14000826a:	mov    ecx,0x8
   14000826f:	call   0x14000871c
   140008274:	add    rsp,0x38
   140008278:	ret    
   140008279:	int3   
   14000827a:	int3   
   14000827b:	int3   
   14000827c:	mov    QWORD PTR [rsp+0x8],rbx
   140008281:	mov    QWORD PTR [rsp+0x10],rsi
   140008286:	push   rdi
   140008287:	sub    rsp,0xa0
   14000828e:	xor    esi,esi
   140008290:	mov    DWORD PTR [rsp+0x20],esi
   140008294:	lea    rcx,[rsp+0x30]
   140008299:	call   QWORD PTR [rip+0x1ee9]        # 0x14000a188
   14000829f:	nop
   1400082a0:	mov    rax,QWORD PTR gs:0x30
   1400082a9:	mov    rbx,QWORD PTR [rax+0x8]
   1400082ad:	mov    edi,esi
   1400082af:	xor    eax,eax
   1400082b1:	lock cmpxchg QWORD PTR [rip+0x76e6],rbx        # 0x14000f9a0
   1400082ba:	je     0x1400082d7
   1400082bc:	cmp    rax,rbx
   1400082bf:	jne    0x1400082ca
   1400082c1:	mov    ebx,0x1
   1400082c6:	mov    edi,ebx
   1400082c8:	jmp    0x1400082dc
   1400082ca:	mov    ecx,0x3e8
   1400082cf:	call   QWORD PTR [rip+0x1ebb]        # 0x14000a190
   1400082d5:	jmp    0x1400082af
   1400082d7:	mov    ebx,0x1
   1400082dc:	mov    eax,DWORD PTR [rip+0x76b6]        # 0x14000f998
   1400082e2:	cmp    eax,ebx
   1400082e4:	jne    0x1400082f2
   1400082e6:	mov    ecx,0x1f
   1400082eb:	call   0x14000871c
   1400082f0:	jmp    0x140008329
   1400082f2:	mov    eax,DWORD PTR [rip+0x76a0]        # 0x14000f998
   1400082f8:	test   eax,eax
   1400082fa:	jne    0x140008323
   1400082fc:	mov    DWORD PTR [rip+0x7696],ebx        # 0x14000f998
   140008302:	lea    rdx,[rip+0x20f7]        # 0x14000a400
   140008309:	lea    rcx,[rip+0x20d8]        # 0x14000a3e8
   140008310:	call   0x140008868
   140008315:	test   eax,eax
   140008317:	je     0x140008329
   140008319:	mov    eax,0xff
   14000831e:	jmp    0x14000845c
   140008323:	mov    DWORD PTR [rip+0x7073],ebx        # 0x14000f39c
   140008329:	mov    eax,DWORD PTR [rip+0x7669]        # 0x14000f998
   14000832f:	cmp    eax,ebx
   140008331:	jne    0x140008350
   140008333:	lea    rdx,[rip+0x20a6]        # 0x14000a3e0
   14000833a:	lea    rcx,[rip+0x2077]        # 0x14000a3b8
   140008341:	call   0x140008862
   140008346:	mov    DWORD PTR [rip+0x7648],0x2        # 0x14000f998
   140008350:	test   edi,edi
   140008352:	jne    0x14000835e
   140008354:	mov    rax,rsi
   140008357:	xchg   QWORD PTR [rip+0x7642],rax        # 0x14000f9a0
   14000835e:	cmp    QWORD PTR [rip+0x7643],rsi        # 0x14000f9a8
   140008365:	je     0x140008386
   140008367:	lea    rcx,[rip+0x763a]        # 0x14000f9a8
   14000836e:	call   0x140008820
   140008373:	test   eax,eax
   140008375:	je     0x140008386
   140008377:	xor    r8d,r8d
   14000837a:	lea    edx,[r8+0x2]
   14000837e:	xor    ecx,ecx
   140008380:	call   QWORD PTR [rip+0x7622]        # 0x14000f9a8
   140008386:	mov    rax,QWORD PTR [rip+0x1f53]        # 0x14000a2e0
   14000838d:	mov    rcx,QWORD PTR [rax]
   140008390:	mov    QWORD PTR [rsp+0x28],rcx
   140008395:	mov    edx,DWORD PTR [rsp+0x20]
   140008399:	cmp    WORD PTR [rcx],0x20
   14000839d:	ja     0x14000840e
   14000839f:	cmp    WORD PTR [rcx],si
   1400083a2:	je     0x1400083be
   1400083a4:	test   edx,edx
   1400083a6:	jne    0x14000840e
   1400083a8:	cmp    WORD PTR [rcx],si
   1400083ab:	je     0x1400083be
   1400083ad:	cmp    WORD PTR [rcx],0x20
   1400083b1:	ja     0x1400083be
   1400083b3:	add    rcx,0x2
   1400083b7:	mov    QWORD PTR [rsp+0x28],rcx
   1400083bc:	jmp    0x1400083a8
   1400083be:	test   BYTE PTR [rsp+0x6c],bl
   1400083c2:	movzx  eax,WORD PTR [rsp+0x70]
   1400083c7:	mov    r9d,0xa
   1400083cd:	cmovne r9d,eax
   1400083d1:	mov    r8,rcx
   1400083d4:	xor    edx,edx
   1400083d6:	lea    rcx,[rip+0xffffffffffff7c23]        # 0x140000000
   1400083dd:	call   0x140002600
   1400083e2:	mov    DWORD PTR [rip+0x6fb0],eax        # 0x14000f398
   1400083e8:	cmp    DWORD PTR [rip+0x6f8e],esi        # 0x14000f37c
   1400083ee:	jne    0x1400083f8
   1400083f0:	mov    ecx,eax
   1400083f2:	call   QWORD PTR [rip+0x1ee0]        # 0x14000a2d8
   1400083f8:	cmp    DWORD PTR [rip+0x6f9e],esi        # 0x14000f39c
   1400083fe:	jne    0x14000840c
   140008400:	call   QWORD PTR [rip+0x1eca]        # 0x14000a2d0
   140008406:	mov    eax,DWORD PTR [rip+0x6f8c]        # 0x14000f398
   14000840c:	jmp    0x14000845c
   14000840e:	cmp    WORD PTR [rcx],0x22
   140008412:	jne    0x140008421
   140008414:	mov    eax,esi
   140008416:	test   edx,edx
   140008418:	sete   al
   14000841b:	mov    edx,eax
   14000841d:	mov    DWORD PTR [rsp+0x20],eax
   140008421:	add    rcx,0x2
   140008425:	mov    QWORD PTR [rsp+0x28],rcx
   14000842a:	jmp    0x140008399
   14000842f:	mov    DWORD PTR [rip+0x6f63],eax        # 0x14000f398
   140008435:	cmp    DWORD PTR [rip+0x6f40],0x0        # 0x14000f37c
   14000843c:	jne    0x140008447
   14000843e:	mov    ecx,eax
   140008440:	call   QWORD PTR [rip+0x1e82]        # 0x14000a2c8
   140008446:	int3   
   140008447:	cmp    DWORD PTR [rip+0x6f4e],0x0        # 0x14000f39c
   14000844e:	jne    0x14000845c
   140008450:	call   QWORD PTR [rip+0x1e7a]        # 0x14000a2d0
   140008456:	mov    eax,DWORD PTR [rip+0x6f3c]        # 0x14000f398
   14000845c:	lea    r11,[rsp+0xa0]
   140008464:	mov    rbx,QWORD PTR [r11+0x10]
   140008468:	mov    rsi,QWORD PTR [r11+0x18]
   14000846c:	mov    rsp,r11
   14000846f:	pop    rdi
   140008470:	ret    
   140008471:	int3   
   140008472:	int3   
   140008473:	int3   
   140008474:	sub    rsp,0x28
   140008478:	mov    eax,0x5a4d
   14000847d:	cmp    WORD PTR [rip+0xffffffffffff7b7c],ax        # 0x140000000
   140008484:	je     0x14000848a
   140008486:	xor    ecx,ecx
   140008488:	jmp    0x1400084c2
   14000848a:	movsxd rax,DWORD PTR [rip+0xffffffffffff7bab]        # 0x14000003c
   140008491:	lea    rcx,[rip+0xffffffffffff7b68]        # 0x140000000
   140008498:	add    rax,rcx
   14000849b:	cmp    DWORD PTR [rax],0x4550
   1400084a1:	jne    0x140008486
   1400084a3:	mov    ecx,0x20b
   1400084a8:	cmp    WORD PTR [rax+0x18],cx
   1400084ac:	jne    0x140008486
   1400084ae:	xor    ecx,ecx
   1400084b0:	cmp    DWORD PTR [rax+0x84],0xe
   1400084b7:	jbe    0x1400084c2
   1400084b9:	cmp    DWORD PTR [rax+0xf8],ecx
   1400084bf:	setne  cl
   1400084c2:	mov    DWORD PTR [rip+0x6eb4],ecx        # 0x14000f37c
   1400084c8:	mov    ecx,0x2
   1400084cd:	call   QWORD PTR [rip+0x1e45]        # 0x14000a318
   1400084d3:	or     rcx,0xffffffffffffffff
   1400084d7:	call   QWORD PTR [rip+0x1cc3]        # 0x14000a1a0
   1400084dd:	mov    rcx,QWORD PTR [rip+0x1e2c]        # 0x14000a310
   1400084e4:	mov    QWORD PTR [rip+0x74c5],rax        # 0x14000f9b0
   1400084eb:	mov    QWORD PTR [rip+0x74c6],rax        # 0x14000f9b8
   1400084f2:	mov    eax,DWORD PTR [rip+0x7424]        # 0x14000f91c
   1400084f8:	mov    DWORD PTR [rcx],eax
   1400084fa:	mov    rdx,QWORD PTR [rip+0x1e07]        # 0x14000a308
   140008501:	mov    eax,DWORD PTR [rip+0x7411]        # 0x14000f918
   140008507:	mov    DWORD PTR [rdx],eax
   140008509:	call   0x140008724
   14000850e:	call   0x140008870
   140008513:	cmp    DWORD PTR [rip+0x6ca2],0x0        # 0x14000f1bc
   14000851a:	jne    0x140008529
   14000851c:	lea    rcx,[rip+0x34d]        # 0x140008870
   140008523:	call   QWORD PTR [rip+0x1dd7]        # 0x14000a300
   140008529:	cmp    DWORD PTR [rip+0x6c88],0xffffffff        # 0x14000f1b8
   140008530:	jne    0x14000853b
   140008532:	or     ecx,0xffffffff
   140008535:	call   QWORD PTR [rip+0x1dbd]        # 0x14000a2f8
   14000853b:	xor    eax,eax
   14000853d:	add    rsp,0x28
   140008541:	ret    
   140008542:	int3   
   140008543:	int3   
   140008544:	sub    rsp,0x28
   140008548:	call   0x140008874
   14000854d:	add    rsp,0x28
   140008551:	jmp    0x14000827c
   140008556:	jmp    QWORD PTR [rip+0x1d24]        # 0x14000a280
   14000855c:	jmp    QWORD PTR [rip+0x1d26]        # 0x14000a288
   140008562:	int3   
   140008563:	int3   
   140008564:	mov    QWORD PTR [rsp+0x8],rcx
   140008569:	sub    rsp,0x88
   140008570:	lea    rcx,[rip+0x6ec9]        # 0x14000f440
   140008577:	call   QWORD PTR [rip+0x1bd3]        # 0x14000a150
   14000857d:	mov    rax,QWORD PTR [rip+0x6fb4]        # 0x14000f538
   140008584:	mov    QWORD PTR [rsp+0x58],rax
   140008589:	xor    r8d,r8d
   14000858c:	lea    rdx,[rsp+0x60]
   140008591:	mov    rcx,QWORD PTR [rsp+0x58]
   140008596:	call   0x140008e7c
   14000859b:	mov    QWORD PTR [rsp+0x50],rax
   1400085a0:	cmp    QWORD PTR [rsp+0x50],0x0
   1400085a6:	je     0x1400085e9
   1400085a8:	mov    QWORD PTR [rsp+0x38],0x0
   1400085b1:	lea    rax,[rsp+0x48]
   1400085b6:	mov    QWORD PTR [rsp+0x30],rax
   1400085bb:	lea    rax,[rsp+0x40]
   1400085c0:	mov    QWORD PTR [rsp+0x28],rax
   1400085c5:	lea    rax,[rip+0x6e74]        # 0x14000f440
   1400085cc:	mov    QWORD PTR [rsp+0x20],rax
   1400085d1:	mov    r9,QWORD PTR [rsp+0x50]
   1400085d6:	mov    r8,QWORD PTR [rsp+0x58]
   1400085db:	mov    rdx,QWORD PTR [rsp+0x60]
   1400085e0:	xor    ecx,ecx
   1400085e2:	call   0x140008e76
   1400085e7:	jmp    0x14000860b
   1400085e9:	mov    rax,QWORD PTR [rsp+0x88]
   1400085f1:	mov    QWORD PTR [rip+0x6f40],rax        # 0x14000f538
   1400085f8:	lea    rax,[rsp+0x88]
   140008600:	add    rax,0x8
   140008604:	mov    QWORD PTR [rip+0x6ecd],rax        # 0x14000f4d8
   14000860b:	mov    rax,QWORD PTR [rip+0x6f26]        # 0x14000f538
   140008612:	mov    QWORD PTR [rip+0x6d97],rax        # 0x14000f3b0
   140008619:	mov    rax,QWORD PTR [rsp+0x90]
   140008621:	mov    QWORD PTR [rip+0x6e98],rax        # 0x14000f4c0
   140008628:	mov    DWORD PTR [rip+0x6d6e],0xc0000409        # 0x14000f3a0
   140008632:	mov    DWORD PTR [rip+0x6d68],0x1        # 0x14000f3a4
   14000863c:	mov    rax,QWORD PTR [rip+0x6b55]        # 0x14000f198
   140008643:	mov    QWORD PTR [rsp+0x68],rax
   140008648:	mov    rax,QWORD PTR [rip+0x6b51]        # 0x14000f1a0
   14000864f:	mov    QWORD PTR [rsp+0x70],rax
   140008654:	call   QWORD PTR [rip+0x1b0e]        # 0x14000a168
   14000865a:	mov    DWORD PTR [rip+0x6dd8],eax        # 0x14000f438
   140008660:	mov    ecx,0x1
   140008665:	call   0x14000892e
   14000866a:	xor    ecx,ecx
   14000866c:	call   QWORD PTR [rip+0x1afe]        # 0x14000a170
   140008672:	lea    rcx,[rip+0x3987]        # 0x14000c000
   140008679:	call   QWORD PTR [rip+0x1af9]        # 0x14000a178
   14000867f:	cmp    DWORD PTR [rip+0x6db2],0x0        # 0x14000f438
   140008686:	jne    0x140008692
   140008688:	mov    ecx,0x1
   14000868d:	call   0x14000892e
   140008692:	call   QWORD PTR [rip+0x1a18]        # 0x14000a0b0
   140008698:	mov    edx,0xc0000409
   14000869d:	mov    rcx,rax
   1400086a0:	call   QWORD PTR [rip+0x1ada]        # 0x14000a180
   1400086a6:	add    rsp,0x88
   1400086ad:	ret    
   1400086ae:	jmp    QWORD PTR [rip+0x1bdc]        # 0x14000a290
   1400086b4:	jmp    QWORD PTR [rip+0x1bde]        # 0x14000a298
   1400086ba:	jmp    QWORD PTR [rip+0x1be0]        # 0x14000a2a0
   1400086c0:	sub    rsp,0x28
   1400086c4:	mov    rax,QWORD PTR [rcx]
   1400086c7:	cmp    DWORD PTR [rax],0xe06d7363
   1400086cd:	jne    0x1400086fa
   1400086cf:	cmp    DWORD PTR [rax+0x18],0x4
   1400086d3:	jne    0x1400086fa
   1400086d5:	mov    eax,DWORD PTR [rax+0x20]
   1400086d8:	cmp    eax,0x19930520
   1400086dd:	je     0x1400086f4
   1400086df:	cmp    eax,0x19930521
   1400086e4:	je     0x1400086f4
   1400086e6:	cmp    eax,0x19930522
   1400086eb:	je     0x1400086f4
   1400086ed:	cmp    eax,0x1994000
   1400086f2:	jne    0x1400086fa
   1400086f4:	call   0x140008556
   1400086f9:	int3   
   1400086fa:	xor    eax,eax
   1400086fc:	add    rsp,0x28
   140008700:	ret    
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	sub    rsp,0x28
   140008708:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400086c0
   14000870f:	call   QWORD PTR [rip+0x1a5b]        # 0x14000a170
   140008715:	xor    eax,eax
   140008717:	add    rsp,0x28
   14000871b:	ret    
   14000871c:	jmp    QWORD PTR [rip+0x1b8e]        # 0x14000a2b0
   140008722:	int3   
   140008723:	int3   
   140008724:	mov    QWORD PTR [rsp+0x8],rbx
   140008729:	push   rdi
   14000872a:	sub    rsp,0x20
   14000872e:	lea    rbx,[rip+0x3cf3]        # 0x14000c428
   140008735:	lea    rdi,[rip+0x3cec]        # 0x14000c428
   14000873c:	jmp    0x14000874c
   14000873e:	mov    rax,QWORD PTR [rbx]
   140008741:	test   rax,rax
   140008744:	je     0x140008748
   140008746:	call   rax
   140008748:	add    rbx,0x8
   14000874c:	cmp    rbx,rdi
   14000874f:	jb     0x14000873e
   140008751:	mov    rbx,QWORD PTR [rsp+0x30]
   140008756:	add    rsp,0x20
   14000875a:	pop    rdi
   14000875b:	ret    
   14000875c:	mov    QWORD PTR [rsp+0x8],rbx
   140008761:	push   rdi
   140008762:	sub    rsp,0x20
   140008766:	lea    rbx,[rip+0x3ccb]        # 0x14000c438
   14000876d:	lea    rdi,[rip+0x3cc4]        # 0x14000c438
   140008774:	jmp    0x140008784
   140008776:	mov    rax,QWORD PTR [rbx]
   140008779:	test   rax,rax
   14000877c:	je     0x140008780
   14000877e:	call   rax
   140008780:	add    rbx,0x8
   140008784:	cmp    rbx,rdi
   140008787:	jb     0x140008776
   140008789:	mov    rbx,QWORD PTR [rsp+0x30]
   14000878e:	add    rsp,0x20
   140008792:	pop    rdi
   140008793:	ret    
   140008794:	jmp    QWORD PTR [rip+0x1b26]        # 0x14000a2c0
   14000879a:	int3   
   14000879b:	int3   
   14000879c:	int3   
   14000879d:	int3   
   14000879e:	int3   
   14000879f:	int3   
   1400087a0:	mov    rax,rcx
   1400087a3:	mov    ecx,0x5a4d
   1400087a8:	cmp    WORD PTR [rax],cx
   1400087ab:	je     0x1400087b0
   1400087ad:	xor    eax,eax
   1400087af:	ret    
   1400087b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400087b4:	add    rcx,rax
   1400087b7:	xor    eax,eax
   1400087b9:	cmp    DWORD PTR [rcx],0x4550
   1400087bf:	jne    0x1400087cd
   1400087c1:	mov    edx,0x20b
   1400087c6:	cmp    WORD PTR [rcx+0x18],dx
   1400087ca:	sete   al
   1400087cd:	repz ret 
   1400087cf:	int3   
   1400087d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400087d4:	xor    r9d,r9d
   1400087d7:	mov    r10,rdx
   1400087da:	add    r8,rcx
   1400087dd:	movzx  eax,WORD PTR [r8+0x14]
   1400087e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400087e7:	lea    rcx,[rax+r8*1+0x18]
   1400087ec:	test   r11d,r11d
   1400087ef:	je     0x14000880f
   1400087f1:	mov    edx,DWORD PTR [rcx+0xc]
   1400087f4:	cmp    r10,rdx
   1400087f7:	jb     0x140008803
   1400087f9:	mov    eax,DWORD PTR [rcx+0x8]
   1400087fc:	add    eax,edx
   1400087fe:	cmp    r10,rax
   140008801:	jb     0x140008812
   140008803:	inc    r9d
   140008806:	add    rcx,0x28
   14000880a:	cmp    r9d,r11d
   14000880d:	jb     0x1400087f1
   14000880f:	xor    eax,eax
   140008811:	ret    
   140008812:	mov    rax,rcx
   140008815:	ret    
   140008816:	int3   
   140008817:	int3   
   140008818:	int3   
   140008819:	int3   
   14000881a:	int3   
   14000881b:	int3   
   14000881c:	int3   
   14000881d:	int3   
   14000881e:	int3   
   14000881f:	int3   
   140008820:	sub    rsp,0x28
   140008824:	mov    r8,rcx
   140008827:	lea    r9,[rip+0xffffffffffff77d2]        # 0x140000000
   14000882e:	mov    rcx,r9
   140008831:	call   0x1400087a0
   140008836:	test   eax,eax
   140008838:	je     0x14000885c
   14000883a:	sub    r8,r9
   14000883d:	mov    rdx,r8
   140008840:	mov    rcx,r9
   140008843:	call   0x1400087d0
   140008848:	test   rax,rax
   14000884b:	je     0x14000885c
   14000884d:	mov    eax,DWORD PTR [rax+0x24]
   140008850:	shr    eax,0x1f
   140008853:	not    eax
   140008855:	and    eax,0x1
   140008858:	jmp    0x14000885c
   14000885a:	xor    eax,eax
   14000885c:	add    rsp,0x28
   140008860:	ret    
   140008861:	int3   
   140008862:	jmp    QWORD PTR [rip+0x1a80]        # 0x14000a2e8
   140008868:	jmp    QWORD PTR [rip+0x1a82]        # 0x14000a2f0
   14000886e:	int3   
   14000886f:	int3   
   140008870:	xor    eax,eax
   140008872:	ret    
   140008873:	int3   
   140008874:	mov    QWORD PTR [rsp+0x18],rbx
   140008879:	push   rdi
   14000887a:	sub    rsp,0x20
   14000887e:	mov    rax,QWORD PTR [rip+0x6913]        # 0x14000f198
   140008885:	and    QWORD PTR [rsp+0x30],0x0
   14000888b:	movabs rdi,0x2b992ddfa232
   140008895:	cmp    rax,rdi
   140008898:	je     0x1400088a6
   14000889a:	not    rax
   14000889d:	mov    QWORD PTR [rip+0x68fc],rax        # 0x14000f1a0
   1400088a4:	jmp    0x14000891c
   1400088a6:	lea    rcx,[rsp+0x30]
   1400088ab:	call   QWORD PTR [rip+0x1887]        # 0x14000a138
   1400088b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088b6:	call   QWORD PTR [rip+0x185c]        # 0x14000a118
   1400088bc:	mov    r11d,eax
   1400088bf:	xor    rbx,r11
   1400088c2:	call   QWORD PTR [rip+0x1858]        # 0x14000a120
   1400088c8:	mov    r11d,eax
   1400088cb:	xor    rbx,r11
   1400088ce:	call   QWORD PTR [rip+0x186c]        # 0x14000a140
   1400088d4:	lea    rcx,[rsp+0x38]
   1400088d9:	mov    r11d,eax
   1400088dc:	xor    rbx,r11
   1400088df:	call   QWORD PTR [rip+0x1863]        # 0x14000a148
   1400088e5:	mov    r11,QWORD PTR [rsp+0x38]
   1400088ea:	xor    r11,rbx
   1400088ed:	movabs rax,0xffffffffffff
   1400088f7:	and    r11,rax
   1400088fa:	movabs rax,0x2b992ddfa233
   140008904:	cmp    r11,rdi
   140008907:	cmove  r11,rax
   14000890b:	mov    QWORD PTR [rip+0x6886],r11        # 0x14000f198
   140008912:	not    r11
   140008915:	mov    QWORD PTR [rip+0x6884],r11        # 0x14000f1a0
   14000891c:	mov    rbx,QWORD PTR [rsp+0x40]
   140008921:	add    rsp,0x20
   140008925:	pop    rdi
   140008926:	ret    
   140008927:	int3   
   140008928:	jmp    QWORD PTR [rip+0x19f2]        # 0x14000a320
   14000892e:	jmp    QWORD PTR [rip+0x19f4]        # 0x14000a328
   140008934:	rex push rbx
   140008936:	sub    rsp,0x20
   14000893a:	mov    rbx,rcx
   14000893d:	add    rcx,0x28
   140008941:	call   QWORD PTR [rip+0x16d1]        # 0x14000a018
   140008947:	mov    rcx,QWORD PTR [rbx+0x50]
   14000894b:	test   rcx,rcx
   14000894e:	je     0x14000895a
   140008950:	call   0x14000809e
   140008955:	and    QWORD PTR [rbx+0x50],0x0
   14000895a:	and    DWORD PTR [rbx+0x58],0x0
   14000895e:	and    DWORD PTR [rbx+0x5c],0x0
   140008962:	add    rsp,0x20
   140008966:	pop    rbx
   140008967:	ret    
   140008968:	mov    QWORD PTR [rsp+0x8],rbx
   14000896d:	push   rdi
   14000896e:	sub    rsp,0x20
   140008972:	xor    edx,edx
   140008974:	mov    rdi,rcx
   140008977:	lea    r8d,[rdx+0x28]
   14000897b:	add    rcx,r8
   14000897e:	call   0x140007ebe
   140008983:	and    QWORD PTR [rdi+0x50],0x0
   140008988:	and    DWORD PTR [rdi+0x58],0x0
   14000898c:	and    DWORD PTR [rdi+0x5c],0x0
   140008990:	lea    rax,[rip+0xffffffffffff7669]        # 0x140000000
   140008997:	lea    rcx,[rdi+0x28]
   14000899b:	mov    QWORD PTR [rdi+0x10],rax
   14000899f:	mov    QWORD PTR [rdi+0x8],rax
   1400089a3:	lea    rax,[rip+0x3686]        # 0x14000c030
   1400089aa:	xor    edx,edx
   1400089ac:	mov    DWORD PTR [rdi],0x60
   1400089b2:	mov    DWORD PTR [rdi+0x18],0xa00
   1400089b9:	mov    QWORD PTR [rdi+0x20],rax
   1400089bd:	call   QWORD PTR [rip+0x164d]        # 0x14000a010
   1400089c3:	test   eax,eax
   1400089c5:	jne    0x1400089f2
   1400089c7:	call   QWORD PTR [rip+0x163b]        # 0x14000a008
   1400089cd:	mov    edx,0x1
   1400089d2:	movzx  ecx,ax
   1400089d5:	or     ecx,0x80070000
   1400089db:	test   eax,eax
   1400089dd:	cmovle ecx,eax
   1400089e0:	movzx  eax,BYTE PTR [rip+0x6889]        # 0x14000f270
   1400089e7:	test   ecx,ecx
   1400089e9:	cmovs  eax,edx
   1400089ec:	mov    BYTE PTR [rip+0x687e],al        # 0x14000f270
   1400089f2:	mov    rax,rdi
   1400089f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089fa:	add    rsp,0x20
   1400089fe:	pop    rdi
   1400089ff:	ret    
   140008a00:	lea    rax,[rip+0x6859]        # 0x14000f260
   140008a07:	jmp    0x140008a0c
   140008a0c:	mov    QWORD PTR [rsp+0x8],rcx
   140008a11:	mov    QWORD PTR [rsp+0x10],rdx
   140008a16:	mov    QWORD PTR [rsp+0x18],r8
   140008a1b:	mov    QWORD PTR [rsp+0x20],r9
   140008a20:	sub    rsp,0x68
   140008a24:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140008a2a:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140008a30:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140008a36:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140008a3c:	mov    rdx,rax
   140008a3f:	lea    rcx,[rip+0x4ac2]        # 0x14000d508
   140008a46:	call   0x140008bb4
   140008a4b:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140008a51:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140008a57:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140008a5d:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140008a63:	mov    rcx,QWORD PTR [rsp+0x70]
   140008a68:	mov    rdx,QWORD PTR [rsp+0x78]
   140008a6d:	mov    r8,QWORD PTR [rsp+0x80]
   140008a75:	mov    r9,QWORD PTR [rsp+0x88]
   140008a7d:	add    rsp,0x68
   140008a81:	jmp    0x140008a83
   140008a83:	jmp    rax
   140008a85:	int3   
   140008a86:	int3   
   140008a87:	int3   
   140008a88:	int3   
   140008a89:	int3   
   140008a8a:	int3   
   140008a8b:	int3   
   140008a8c:	int3   
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	xor    edx,edx
   140008a92:	rex.W jmp QWORD PTR [rip+0x6727]        # 0x14000f1c0
   140008a99:	int3   
   140008a9a:	int3   
   140008a9b:	int3   
   140008a9c:	int3   
   140008a9d:	int3   
   140008a9e:	int3   
   140008a9f:	int3   
   140008aa0:	rex push rbx
   140008aa2:	sub    rsp,0x20
   140008aa6:	lea    rax,[rip+0x35a3]        # 0x14000c050
   140008aad:	mov    rbx,rcx
   140008ab0:	mov    QWORD PTR [rcx],rax
   140008ab3:	mov    rcx,QWORD PTR [rcx+0x10]
   140008ab7:	test   rcx,rcx
   140008aba:	je     0x140008ac2
   140008abc:	mov    rax,QWORD PTR [rcx]
   140008abf:	call   QWORD PTR [rax+0x10]
   140008ac2:	mov    rcx,QWORD PTR [rbx+0x18]
   140008ac6:	test   rcx,rcx
   140008ac9:	je     0x140008ad1
   140008acb:	call   QWORD PTR [rip+0x165f]        # 0x14000a130
   140008ad1:	add    rsp,0x20
   140008ad5:	pop    rbx
   140008ad6:	ret    
   140008ad7:	int3   
   140008ad8:	int3   
   140008ad9:	int3   
   140008ada:	int3   
   140008adb:	int3   
   140008adc:	int3   
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	sub    rsp,0x48
   140008ae4:	lea    rax,[rip+0x3565]        # 0x14000c050
   140008aeb:	mov    DWORD PTR [rsp+0x28],ecx
   140008aef:	mov    QWORD PTR [rsp+0x30],rdx
   140008af4:	lea    rdx,[rip+0x4975]        # 0x14000d470
   140008afb:	lea    rcx,[rsp+0x20]
   140008b00:	mov    QWORD PTR [rsp+0x38],0x0
   140008b09:	mov    QWORD PTR [rsp+0x20],rax
   140008b0e:	call   0x1400080a4
   140008b13:	int3   
   140008b14:	int3   
   140008b15:	int3   
   140008b16:	int3   
   140008b17:	int3   
   140008b18:	int3   
   140008b19:	int3   
   140008b1a:	int3   
   140008b1b:	int3   
   140008b1c:	int3   
   140008b1d:	int3   
   140008b1e:	int3   
   140008b1f:	int3   
   140008b20:	rex push rbx
   140008b22:	sub    rsp,0x20
   140008b26:	lea    rax,[rip+0x3523]        # 0x14000c050
   140008b2d:	mov    rbx,rcx
   140008b30:	mov    QWORD PTR [rcx],rax
   140008b33:	mov    eax,DWORD PTR [rdx+0x8]
   140008b36:	mov    DWORD PTR [rcx+0x8],eax
   140008b39:	mov    rax,QWORD PTR [rdx+0x10]
   140008b3d:	mov    QWORD PTR [rcx+0x18],0x0
   140008b45:	mov    QWORD PTR [rcx+0x10],rax
   140008b49:	mov    rcx,rax
   140008b4c:	test   rax,rax
   140008b4f:	je     0x140008b57
   140008b51:	mov    rax,QWORD PTR [rax]
   140008b54:	call   QWORD PTR [rax+0x8]
   140008b57:	mov    rax,rbx
   140008b5a:	add    rsp,0x20
   140008b5e:	pop    rbx
   140008b5f:	ret    
   140008b60:	mov    QWORD PTR [rsp+0x8],rbx
   140008b65:	push   rdi
   140008b66:	sub    rsp,0x20
   140008b6a:	lea    rax,[rip+0x34df]        # 0x14000c050
   140008b71:	mov    rbx,rcx
   140008b74:	mov    edi,edx
   140008b76:	mov    QWORD PTR [rcx],rax
   140008b79:	mov    rcx,QWORD PTR [rcx+0x10]
   140008b7d:	test   rcx,rcx
   140008b80:	je     0x140008b88
   140008b82:	mov    rax,QWORD PTR [rcx]
   140008b85:	call   QWORD PTR [rax+0x10]
   140008b88:	mov    rcx,QWORD PTR [rbx+0x18]
   140008b8c:	test   rcx,rcx
   140008b8f:	je     0x140008b97
   140008b91:	call   QWORD PTR [rip+0x1599]        # 0x14000a130
   140008b97:	test   dil,0x1
   140008b9b:	je     0x140008ba5
   140008b9d:	mov    rcx,rbx
   140008ba0:	call   0x140007e4c
   140008ba5:	mov    rax,rbx
   140008ba8:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bad:	add    rsp,0x20
   140008bb1:	pop    rdi
   140008bb2:	ret    
   140008bb3:	int3   
   140008bb4:	rex push rbp
   140008bb6:	push   rbx
   140008bb7:	push   rsi
   140008bb8:	push   rdi
   140008bb9:	push   r12
   140008bbb:	push   r13
   140008bbd:	push   r14
   140008bbf:	push   r15
   140008bc1:	mov    rbp,rsp
   140008bc4:	sub    rsp,0x78
   140008bc8:	mov    eax,DWORD PTR [rcx+0x4]
   140008bcb:	mov    r9d,DWORD PTR [rcx]
   140008bce:	mov    r13d,DWORD PTR [rcx+0x8]
   140008bd2:	mov    r10d,DWORD PTR [rcx+0xc]
   140008bd6:	and    DWORD PTR [rbp-0x38],0x0
   140008bda:	mov    rsi,rcx
   140008bdd:	mov    r15d,DWORD PTR [rsi+0x14]
   140008be1:	mov    ecx,DWORD PTR [rcx+0x10]
   140008be4:	mov    r14,rdx
   140008be7:	lea    rdx,[rip+0xffffffffffff7412]        # 0x140000000
   140008bee:	and    r9d,0x1
   140008bf2:	mov    DWORD PTR [rbp-0x58],0x48
   140008bf9:	add    rax,rdx
   140008bfc:	add    r15,rdx
   140008bff:	add    r13,rdx
   140008c02:	add    r10,rdx
   140008c05:	add    rcx,rdx
   140008c08:	mov    edx,DWORD PTR [rsi+0x1c]
   140008c0b:	mov    QWORD PTR [rbp-0x40],rax
   140008c0f:	xor    eax,eax
   140008c11:	mov    QWORD PTR [rbp-0x50],rsi
   140008c15:	and    QWORD PTR [rbp-0x28],rax
   140008c19:	and    QWORD PTR [rbp-0x20],rax
   140008c1d:	and    DWORD PTR [rbp-0x18],eax
   140008c20:	mov    DWORD PTR [rbp+0x48],edx
   140008c23:	mov    QWORD PTR [rbp-0x48],r14
   140008c27:	mov    QWORD PTR [rbp-0x30],rax
   140008c2b:	test   r9b,r9b
   140008c2e:	jne    0x140008c54
   140008c30:	xor    edx,edx
   140008c32:	lea    rax,[rbp-0x58]
   140008c36:	lea    r9,[rbp+0x50]
   140008c3a:	lea    r8d,[rdx+0x1]
   140008c3e:	mov    ecx,0xc06d0057
   140008c43:	mov    QWORD PTR [rbp+0x50],rax
   140008c47:	call   QWORD PTR [rip+0x13b3]        # 0x14000a000
   140008c4d:	xor    eax,eax
   140008c4f:	jmp    0x140008e65
   140008c54:	mov    rdi,QWORD PTR [r13+0x0]
   140008c58:	movabs rax,0x8000000000000000
   140008c62:	mov    r12,r14
   140008c65:	sub    r12,r10
   140008c68:	sar    r12,0x3
   140008c6c:	mov    r12d,r12d
   140008c6f:	test   QWORD PTR [rcx+r12*8],rax
   140008c73:	mov    eax,0x0
   140008c78:	sete   al
   140008c7b:	mov    DWORD PTR [rbp-0x38],eax
   140008c7e:	test   eax,eax
   140008c80:	je     0x140008c96
   140008c82:	mov    eax,DWORD PTR [rcx+r12*8]
   140008c86:	lea    rcx,[rip+0xffffffffffff7375]        # 0x140000002
   140008c8d:	add    rax,rcx
   140008c90:	mov    QWORD PTR [rbp-0x30],rax
   140008c94:	jmp    0x140008c9e
   140008c96:	movzx  eax,WORD PTR [rcx+r12*8]
   140008c9b:	mov    DWORD PTR [rbp-0x30],eax
   140008c9e:	mov    rax,QWORD PTR [rip+0x6ceb]        # 0x14000f990
   140008ca5:	xor    ebx,ebx
   140008ca7:	test   rax,rax
   140008caa:	je     0x140008cc7
   140008cac:	lea    rdx,[rbp-0x58]
   140008cb0:	xor    ecx,ecx
   140008cb2:	call   rax
   140008cb4:	mov    rbx,rax
   140008cb7:	test   rax,rax
   140008cba:	jne    0x140008e3f
   140008cc0:	mov    rax,QWORD PTR [rip+0x6cc9]        # 0x14000f990
   140008cc7:	test   rdi,rdi
   140008cca:	jne    0x140008d90
   140008cd0:	test   rax,rax
   140008cd3:	je     0x140008ce6
   140008cd5:	lea    rdx,[rbp-0x58]
   140008cd9:	lea    ecx,[rdi+0x1]
   140008cdc:	call   rax
   140008cde:	mov    rdi,rax
   140008ce1:	test   rax,rax
   140008ce4:	jne    0x140008d44
   140008ce6:	mov    rcx,QWORD PTR [rbp-0x40]
   140008cea:	call   QWORD PTR [rip+0x1438]        # 0x14000a128
   140008cf0:	mov    rdi,rax
   140008cf3:	test   rax,rax
   140008cf6:	jne    0x140008d44
   140008cf8:	call   QWORD PTR [rip+0x130a]        # 0x14000a008
   140008cfe:	mov    DWORD PTR [rbp-0x18],eax
   140008d01:	mov    rax,QWORD PTR [rip+0x6658]        # 0x14000f360
   140008d08:	test   rax,rax
   140008d0b:	je     0x140008d1e
   140008d0d:	lea    rdx,[rbp-0x58]
   140008d11:	lea    ecx,[rdi+0x3]
   140008d14:	call   rax
   140008d16:	mov    rdi,rax
   140008d19:	test   rax,rax
   140008d1c:	jne    0x140008d44
   140008d1e:	xor    edx,edx
   140008d20:	lea    rax,[rbp-0x58]
   140008d24:	lea    r9,[rbp+0x58]
   140008d28:	lea    r8d,[rdx+0x1]
   140008d2c:	mov    ecx,0xc06d007e
   140008d31:	mov    QWORD PTR [rbp+0x58],rax
   140008d35:	call   QWORD PTR [rip+0x12c5]        # 0x14000a000
   140008d3b:	mov    rax,QWORD PTR [rbp-0x20]
   140008d3f:	jmp    0x140008e65
   140008d44:	mov    rax,rdi
   140008d47:	xchg   QWORD PTR [r13+0x0],rax
   140008d4b:	cmp    rax,rdi
   140008d4e:	je     0x140008d80
   140008d50:	cmp    DWORD PTR [rsi+0x18],0x0
   140008d54:	je     0x140008d89
   140008d56:	mov    edx,0x10
   140008d5b:	lea    ecx,[rdx+0x30]
   140008d5e:	call   QWORD PTR [rip+0x1384]        # 0x14000a0e8
   140008d64:	test   rax,rax
   140008d67:	je     0x140008d89
   140008d69:	mov    QWORD PTR [rax+0x8],rsi
   140008d6d:	mov    rcx,QWORD PTR [rip+0x6c14]        # 0x14000f988
   140008d74:	mov    QWORD PTR [rax],rcx
   140008d77:	mov    QWORD PTR [rip+0x6c0a],rax        # 0x14000f988
   140008d7e:	jmp    0x140008d89
   140008d80:	mov    rcx,rdi
   140008d83:	call   QWORD PTR [rip+0x12c7]        # 0x14000a050
   140008d89:	mov    rax,QWORD PTR [rip+0x6c00]        # 0x14000f990
   140008d90:	mov    QWORD PTR [rbp-0x28],rdi
   140008d94:	test   rax,rax
   140008d97:	je     0x140008da7
   140008d99:	lea    rdx,[rbp-0x58]
   140008d9d:	mov    ecx,0x2
   140008da2:	call   rax
   140008da4:	mov    rbx,rax
   140008da7:	test   rbx,rbx
   140008daa:	jne    0x140008e3c
   140008db0:	cmp    DWORD PTR [rsi+0x14],ebx
   140008db3:	je     0x140008de0
   140008db5:	cmp    DWORD PTR [rsi+0x1c],ebx
   140008db8:	je     0x140008de0
   140008dba:	movsxd rax,DWORD PTR [rdi+0x3c]
   140008dbe:	cmp    DWORD PTR [rax+rdi*1],0x4550
   140008dc5:	jne    0x140008de0
   140008dc7:	mov    ecx,DWORD PTR [rbp+0x48]
   140008dca:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   140008dce:	jne    0x140008de0
   140008dd0:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   140008dd5:	jne    0x140008de0
   140008dd7:	mov    rbx,QWORD PTR [r15+r12*8]
   140008ddb:	test   rbx,rbx
   140008dde:	jne    0x140008e3c
   140008de0:	mov    rdx,QWORD PTR [rbp-0x30]
   140008de4:	mov    rcx,rdi
   140008de7:	call   QWORD PTR [rip+0x1233]        # 0x14000a020
   140008ded:	mov    rbx,rax
   140008df0:	test   rax,rax
   140008df3:	jne    0x140008e3c
   140008df5:	call   QWORD PTR [rip+0x120d]        # 0x14000a008
   140008dfb:	mov    DWORD PTR [rbp-0x18],eax
   140008dfe:	mov    rax,QWORD PTR [rip+0x655b]        # 0x14000f360
   140008e05:	test   rax,rax
   140008e08:	je     0x140008e1b
   140008e0a:	lea    rdx,[rbp-0x58]
   140008e0e:	lea    ecx,[rbx+0x4]
   140008e11:	call   rax
   140008e13:	mov    rbx,rax
   140008e16:	test   rax,rax
   140008e19:	jne    0x140008e3c
   140008e1b:	xor    edx,edx
   140008e1d:	lea    rax,[rbp-0x58]
   140008e21:	lea    r9,[rbp+0x60]
   140008e25:	lea    r8d,[rdx+0x1]
   140008e29:	mov    ecx,0xc06d007f
   140008e2e:	mov    QWORD PTR [rbp+0x60],rax
   140008e32:	call   QWORD PTR [rip+0x11c8]        # 0x14000a000
   140008e38:	mov    rbx,QWORD PTR [rbp-0x20]
   140008e3c:	mov    QWORD PTR [r14],rbx
   140008e3f:	mov    rax,QWORD PTR [rip+0x6b4a]        # 0x14000f990
   140008e46:	test   rax,rax
   140008e49:	je     0x140008e62
   140008e4b:	and    DWORD PTR [rbp-0x18],0x0
   140008e4f:	lea    rdx,[rbp-0x58]
   140008e53:	mov    ecx,0x5
   140008e58:	mov    QWORD PTR [rbp-0x28],rdi
   140008e5c:	mov    QWORD PTR [rbp-0x20],rbx
   140008e60:	call   rax
   140008e62:	mov    rax,rbx
   140008e65:	add    rsp,0x78
   140008e69:	pop    r15
   140008e6b:	pop    r14
   140008e6d:	pop    r13
   140008e6f:	pop    r12
   140008e71:	pop    rdi
   140008e72:	pop    rsi
   140008e73:	pop    rbx
   140008e74:	pop    rbp
   140008e75:	ret    
   140008e76:	jmp    QWORD PTR [rip+0x12e4]        # 0x14000a160
   140008e7c:	jmp    QWORD PTR [rip+0x12d6]        # 0x14000a158
   140008e82:	int3   
   140008e83:	int3   
   140008e84:	int3   
   140008e85:	int3   
   140008e86:	int3   
   140008e87:	int3   
   140008e88:	int3   
   140008e89:	int3   
   140008e8a:	int3   
   140008e8b:	int3   
   140008e8c:	int3   
   140008e8d:	int3   
   140008e8e:	int3   
   140008e8f:	int3   
   140008e90:	lea    rcx,[rdx+0x28]
   140008e97:	jmp    0x140002d1c
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	lea    rcx,[rdx+0x38]
   140008ea7:	jmp    0x1400031bc
   140008eac:	int3   
   140008ead:	int3   
   140008eae:	int3   
   140008eaf:	int3   
   140008eb0:	lea    rcx,[rdx+0x38]
   140008eb7:	jmp    0x1400031bc
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	lea    rcx,[rdx+0x38]
   140008ec7:	jmp    0x1400031bc
   140008ecc:	mov    QWORD PTR [rsp+0x10],rdx
   140008ed1:	push   rbp
   140008ed2:	sub    rsp,0x20
   140008ed6:	mov    rbp,rdx
   140008ed9:	lea    rax,[rip+0xffffffffffffac6d]        # 0x140003b4d
   140008ee0:	add    rsp,0x20
   140008ee4:	pop    rbp
   140008ee5:	ret    
   140008ee6:	int3   
   140008ee7:	int3   
   140008ee8:	int3   
   140008ee9:	int3   
   140008eea:	int3   
   140008eeb:	int3   
   140008eec:	lea    rcx,[rdx+0x48]
   140008ef3:	jmp    0x1400034c4
   140008ef8:	int3   
   140008ef9:	int3   
   140008efa:	int3   
   140008efb:	int3   
   140008efc:	mov    QWORD PTR [rsp+0x10],rdx
   140008f01:	push   rbp
   140008f02:	sub    rsp,0x20
   140008f06:	mov    rbp,rdx
   140008f09:	lea    rax,[rip+0xffffffffffffacab]        # 0x140003bbb
   140008f10:	add    rsp,0x20
   140008f14:	pop    rbp
   140008f15:	ret    
   140008f16:	int3   
   140008f17:	int3   
   140008f18:	int3   
   140008f19:	int3   
   140008f1a:	int3   
   140008f1b:	int3   
   140008f1c:	lea    rcx,[rdx+0xa8]
   140008f23:	jmp    0x1400034c4
   140008f28:	lea    rcx,[rdx+0x48]
   140008f2f:	jmp    0x1400031bc
   140008f34:	lea    rcx,[rdx+0x70]
   140008f3b:	jmp    0x1400034e0
   140008f40:	int3   
   140008f41:	int3   
   140008f42:	int3   
   140008f43:	int3   
   140008f44:	mov    QWORD PTR [rsp+0x10],rdx
   140008f49:	push   rbp
   140008f4a:	sub    rsp,0x30
   140008f4e:	mov    rbp,rdx
   140008f51:	lea    rax,[rip+0xffffffffffffaf73]        # 0x140003ecb
   140008f58:	add    rsp,0x30
   140008f5c:	pop    rbp
   140008f5d:	ret    
   140008f5e:	int3   
   140008f5f:	int3   
   140008f60:	int3   
   140008f61:	int3   
   140008f62:	int3   
   140008f63:	int3   
   140008f64:	lea    rcx,[rdx+0x70]
   140008f6b:	jmp    0x1400034e0
   140008f70:	int3   
   140008f71:	int3   
   140008f72:	int3   
   140008f73:	int3   
   140008f74:	mov    QWORD PTR [rsp+0x10],rdx
   140008f79:	push   rbp
   140008f7a:	sub    rsp,0x30
   140008f7e:	mov    rbp,rdx
   140008f81:	lea    rax,[rip+0xffffffffffffb0aa]        # 0x140004032
   140008f88:	add    rsp,0x30
   140008f8c:	pop    rbp
   140008f8d:	ret    
   140008f8e:	int3   
   140008f8f:	lea    rcx,[rdx+0x98]
   140008f96:	jmp    0x140002694
   140008f9b:	int3   
   140008f9c:	int3   
   140008f9d:	int3   
   140008f9e:	int3   
   140008f9f:	lea    rcx,[rdx+0x78]
   140008fa6:	jmp    0x140002694
   140008fab:	lea    rcx,[rdx+0x60]
   140008fb2:	jmp    0x1400031bc
   140008fb7:	int3   
   140008fb8:	int3   
   140008fb9:	int3   
   140008fba:	int3   
   140008fbb:	lea    rcx,[rdx+0x70]
   140008fc2:	jmp    0x1400034e0
   140008fc7:	int3   
   140008fc8:	int3   
   140008fc9:	int3   
   140008fca:	int3   
   140008fcb:	mov    QWORD PTR [rsp+0x10],rdx
   140008fd0:	push   rbp
   140008fd1:	sub    rsp,0x30
   140008fd5:	mov    rbp,rdx
   140008fd8:	lea    rax,[rip+0xffffffffffffbbca]        # 0x140004ba9
   140008fdf:	add    rsp,0x30
   140008fe3:	pop    rbp
   140008fe4:	ret    
   140008fe5:	int3   
   140008fe6:	mov    rcx,QWORD PTR [rdx+0x50]
   140008fed:	jmp    0x140007e4c
   140008ff2:	lea    rcx,[rdx+0x78]
   140008ff9:	jmp    0x14000514c
   140008ffe:	int3   
   140008fff:	int3   
   140009000:	int3   
   140009001:	int3   
   140009002:	lea    rcx,[rdx+0x20]
   140009009:	jmp    0x14000514c
   14000900e:	int3   
   14000900f:	int3   
   140009010:	int3   
   140009011:	int3   
   140009012:	mov    QWORD PTR [rsp+0x10],rdx
   140009017:	push   rbp
   140009018:	sub    rsp,0x20
   14000901c:	mov    rbp,rdx
   14000901f:	lea    rax,[rip+0xffffffffffff85bb]        # 0x1400015e1
   140009026:	add    rsp,0x20
   14000902a:	pop    rbp
   14000902b:	ret    
   14000902c:	int3   
   14000902d:	int3   
   14000902e:	int3   
   14000902f:	int3   
   140009030:	int3   
   140009031:	int3   
   140009032:	int3   
   140009033:	int3   
   140009034:	int3   
   140009035:	int3   
   140009036:	int3   
   140009037:	int3   
   140009038:	int3   
   140009039:	int3   
   14000903a:	int3   
   14000903b:	int3   
   14000903c:	int3   
   14000903d:	int3   
   14000903e:	int3   
   14000903f:	int3   
   140009040:	int3   
   140009041:	int3   
   140009042:	lea    rcx,[rdx+0x48]
   140009049:	jmp    0x14000514c
   14000904e:	int3   
   14000904f:	int3   
   140009050:	int3   
   140009051:	int3   
   140009052:	lea    rcx,[rdx+0x90]
   140009059:	jmp    0x14000514c
   14000905e:	int3   
   14000905f:	int3   
   140009060:	int3   
   140009061:	int3   
   140009062:	lea    rcx,[rdx+0x50]
   140009069:	jmp    0x14000514c
   14000906e:	int3   
   14000906f:	int3   
   140009070:	int3   
   140009071:	int3   
   140009072:	lea    rcx,[rdx+0x88]
   140009079:	jmp    0x14000514c
   14000907e:	int3   
   14000907f:	int3   
   140009080:	int3   
   140009081:	int3   
   140009082:	lea    rcx,[rdx+0x98]
   140009089:	jmp    0x14000514c
   14000908e:	int3   
   14000908f:	int3   
   140009090:	int3   
   140009091:	int3   
   140009092:	mov    QWORD PTR [rsp+0x10],rdx
   140009097:	push   rbp
   140009098:	sub    rsp,0x40
   14000909c:	mov    rbp,rdx
   14000909f:	mov    DWORD PTR [rbp+0x40],0x1
   1400090a6:	lea    rax,[rip+0xffffffffffff946d]        # 0x14000251a
   1400090ad:	add    rsp,0x40
   1400090b1:	pop    rbp
   1400090b2:	ret    
   1400090b3:	int3   
   1400090b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400090b9:	push   rbx
   1400090ba:	push   rbp
   1400090bb:	sub    rsp,0x38
   1400090bf:	mov    rbp,rdx
   1400090c2:	mov    rcx,QWORD PTR [rbp+0x38]
   1400090c6:	mov    ebx,DWORD PTR [rcx+0x8]
   1400090c9:	mov    DWORD PTR [rbp+0x68],ebx
   1400090cc:	call   0x1400078b4
   1400090d1:	mov    r8,rax
   1400090d4:	mov    edx,ebx
   1400090d6:	lea    rcx,[rip+0x23eb]        # 0x14000b4c8
   1400090dd:	call   0x140007c74
   1400090e2:	nop
   1400090e3:	lea    rax,[rip+0xffffffffffffd1b3]        # 0x14000629d
   1400090ea:	add    rsp,0x38
   1400090ee:	pop    rbp
   1400090ef:	pop    rbx
   1400090f0:	ret    
   1400090f1:	int3   
   1400090f2:	int3   
   1400090f3:	int3   
   1400090f4:	mov    QWORD PTR [rsp+0x10],rdx
   1400090f9:	push   rbx
   1400090fa:	push   rbp
   1400090fb:	sub    rsp,0x38
   1400090ff:	mov    rbp,rdx
   140009102:	mov    rcx,QWORD PTR [rbp+0x40]
   140009106:	mov    ebx,DWORD PTR [rcx+0x8]
   140009109:	mov    DWORD PTR [rbp+0x68],ebx
   14000910c:	call   0x1400078b4
   140009111:	mov    r8,rax
   140009114:	mov    edx,ebx
   140009116:	lea    rcx,[rip+0x245b]        # 0x14000b578
   14000911d:	call   0x140007c74
   140009122:	nop
   140009123:	lea    rax,[rip+0xffffffffffffd1b7]        # 0x1400062e1
   14000912a:	add    rsp,0x38
   14000912e:	pop    rbp
   14000912f:	pop    rbx
   140009130:	ret    
   140009131:	int3   
   140009132:	int3   
   140009133:	int3   
   140009134:	mov    QWORD PTR [rsp+0x10],rdx
   140009139:	push   rbx
   14000913a:	push   rbp
   14000913b:	sub    rsp,0x38
   14000913f:	mov    rbp,rdx
   140009142:	mov    rcx,QWORD PTR [rbp+0x48]
   140009146:	mov    ebx,DWORD PTR [rcx+0x8]
   140009149:	mov    DWORD PTR [rbp+0x68],ebx
   14000914c:	call   0x1400078b4
   140009151:	mov    r8,rax
   140009154:	mov    edx,ebx
   140009156:	lea    rcx,[rip+0x24d3]        # 0x14000b630
   14000915d:	call   0x140007c74
   140009162:	nop
   140009163:	lea    rax,[rip+0xffffffffffffd1b9]        # 0x140006323
   14000916a:	add    rsp,0x38
   14000916e:	pop    rbp
   14000916f:	pop    rbx
   140009170:	ret    
   140009171:	int3   
   140009172:	int3   
   140009173:	int3   
   140009174:	int3   
   140009175:	int3   
   140009176:	int3   
   140009177:	int3   
   140009178:	int3   
   140009179:	int3   
   14000917a:	int3   
   14000917b:	int3   
   14000917c:	int3   
   14000917d:	int3   
   14000917e:	int3   
   14000917f:	int3   
   140009180:	int3   
   140009181:	int3   
   140009182:	int3   
   140009183:	int3   
   140009184:	mov    QWORD PTR [rsp+0x10],rdx
   140009189:	push   rbx
   14000918a:	push   rbp
   14000918b:	sub    rsp,0x28
   14000918f:	mov    rbp,rdx
   140009192:	mov    rcx,QWORD PTR [rbp+0x38]
   140009196:	mov    ebx,DWORD PTR [rcx+0x8]
   140009199:	mov    DWORD PTR [rbp+0x20],ebx
   14000919c:	call   0x1400078b4
   1400091a1:	mov    r8,rax
   1400091a4:	mov    edx,ebx
   1400091a6:	lea    rcx,[rip+0x24fb]        # 0x14000b6a8
   1400091ad:	call   0x140007c74
   1400091b2:	nop
   1400091b3:	lea    rax,[rip+0xffffffffffffe004]        # 0x1400071be
   1400091ba:	add    rsp,0x28
   1400091be:	pop    rbp
   1400091bf:	pop    rbx
   1400091c0:	ret    
   1400091c1:	int3   
   1400091c2:	int3   
   1400091c3:	int3   
   1400091c4:	int3   
   1400091c5:	int3   
   1400091c6:	int3   
   1400091c7:	int3   
   1400091c8:	int3   
   1400091c9:	int3   
   1400091ca:	int3   
   1400091cb:	int3   
   1400091cc:	int3   
   1400091cd:	int3   
   1400091ce:	int3   
   1400091cf:	int3   
   1400091d0:	int3   
   1400091d1:	int3   
   1400091d2:	int3   
   1400091d3:	int3   
   1400091d4:	mov    QWORD PTR [rsp+0x10],rdx
   1400091d9:	push   rbx
   1400091da:	push   rbp
   1400091db:	sub    rsp,0x38
   1400091df:	mov    rbp,rdx
   1400091e2:	mov    rcx,QWORD PTR [rbp+0x48]
   1400091e6:	mov    ebx,DWORD PTR [rcx+0x8]
   1400091e9:	mov    DWORD PTR [rbp+0x30],ebx
   1400091ec:	call   0x1400078b4
   1400091f1:	mov    r8,rax
   1400091f4:	mov    edx,ebx
   1400091f6:	lea    rcx,[rip+0x2583]        # 0x14000b780
   1400091fd:	call   0x140007c74
   140009202:	nop
   140009203:	lea    rax,[rip+0xffffffffffffe0d9]        # 0x1400072e3
   14000920a:	add    rsp,0x38
   14000920e:	pop    rbp
   14000920f:	pop    rbx
   140009210:	ret    
   140009211:	int3   
   140009212:	rex push rbp
   140009214:	sub    rsp,0x20
   140009218:	mov    rbp,rdx
   14000921b:	mov    QWORD PTR [rbp+0x38],rcx
   14000921f:	mov    QWORD PTR [rbp+0x28],rcx
   140009223:	mov    rax,QWORD PTR [rbp+0x28]
   140009227:	mov    rcx,QWORD PTR [rax]
   14000922a:	mov    QWORD PTR [rbp+0x30],rcx
   14000922e:	mov    rax,QWORD PTR [rbp+0x30]
   140009232:	cmp    DWORD PTR [rax],0xe06d7363
   140009238:	je     0x140009246
   14000923a:	mov    DWORD PTR [rbp+0x20],0x0
   140009241:	mov    eax,DWORD PTR [rbp+0x20]
   140009244:	jmp    0x14000924c
   140009246:	call   0x140008556
   14000924b:	nop
   14000924c:	add    rsp,0x20
   140009250:	pop    rbp
   140009251:	ret    
   140009252:	int3   
   140009253:	rex push rbp
   140009255:	sub    rsp,0x20
   140009259:	mov    rbp,rdx
   14000925c:	cmp    DWORD PTR [rbp+0x20],0x0
   140009260:	jne    0x140009278
   140009262:	mov    r9,QWORD PTR [rbp+0x78]
   140009266:	mov    r8d,DWORD PTR [rbp+0x70]
   14000926a:	mov    rdx,QWORD PTR [rbp+0x68]
   14000926e:	mov    rcx,QWORD PTR [rbp+0x60]
   140009272:	call   0x140007ed0
   140009277:	nop
   140009278:	add    rsp,0x20
   14000927c:	pop    rbp
   14000927d:	ret    
   14000927e:	int3   
   14000927f:	rex push rbp
   140009281:	sub    rsp,0x20
   140009285:	mov    rbp,rdx
   140009288:	mov    ecx,0x8
   14000928d:	call   0x1400086ae
   140009292:	nop
   140009293:	add    rsp,0x20
   140009297:	pop    rbp
   140009298:	ret    
   140009299:	int3   
   14000929a:	rex push rbp
   14000929c:	sub    rsp,0x20
   1400092a0:	mov    rbp,rdx
   1400092a3:	mov    rax,QWORD PTR [rcx]
   1400092a6:	mov    rdx,rcx
   1400092a9:	mov    ecx,DWORD PTR [rax]
   1400092ab:	call   0x140008794
   1400092b0:	nop
   1400092b1:	add    rsp,0x20
   1400092b5:	pop    rbp
   1400092b6:	ret    
   1400092b7:	int3   
   1400092b8:	int3   
   1400092b9:	int3   
   1400092ba:	int3   
   1400092bb:	int3   
   1400092bc:	int3   
   1400092bd:	int3   
   1400092be:	int3   
   1400092bf:	int3   
   1400092c0:	rex push rbp
   1400092c2:	sub    rsp,0x20
   1400092c6:	mov    rbp,rdx
   1400092c9:	mov    rax,QWORD PTR [rcx]
   1400092cc:	xor    ecx,ecx
   1400092ce:	cmp    DWORD PTR [rax],0xc0000005
   1400092d4:	sete   cl
   1400092d7:	mov    eax,ecx
   1400092d9:	mov    eax,ecx
   1400092db:	add    rsp,0x20
   1400092df:	pop    rbp
   1400092e0:	ret    
   1400092e1:	int3   
   1400092e2:	int3   
   1400092e3:	int3   
   1400092e4:	rex push rbx
   1400092e6:	sub    rsp,0x20
   1400092ea:	lea    rbx,[rip+0x5fff]        # 0x14000f2f0
   1400092f1:	mov    rcx,rbx
   1400092f4:	call   0x140002618
   1400092f9:	lea    r11,[rip+0x1898]        # 0x14000ab98
   140009300:	lea    rcx,[rip+0x49]        # 0x140009350
   140009307:	mov    QWORD PTR [rip+0x5fe2],r11        # 0x14000f2f0
   14000930e:	mov    QWORD PTR [rip+0x5f6b],rbx        # 0x14000f280
   140009315:	add    rsp,0x20
   140009319:	pop    rbx
   14000931a:	jmp    0x1400081f4
   14000931f:	int3   
   140009320:	lea    rax,[rip+0xffffffffffffc025]        # 0x14000534c
   140009327:	mov    QWORD PTR [rip+0x6032],rax        # 0x14000f360
   14000932e:	ret    
   14000932f:	int3   
   140009330:	sub    rsp,0x28
   140009334:	lea    rcx,[rip+0x65e5]        # 0x14000f920
   14000933b:	call   0x140008968
   140009340:	lea    rcx,[rip+0x6d]        # 0x1400093b4
   140009347:	add    rsp,0x28
   14000934b:	jmp    0x1400081f4
   140009350:	sub    rsp,0x28
   140009354:	cmp    DWORD PTR [rip+0x5f9d],0x0        # 0x14000f2f8
   14000935b:	lea    rax,[rip+0x1836]        # 0x14000ab98
   140009362:	mov    QWORD PTR [rip+0x5f87],rax        # 0x14000f2f0
   140009369:	je     0x1400093af
   14000936b:	cmp    QWORD PTR [rip+0x5f8d],0x0        # 0x14000f300
   140009373:	je     0x140009389
   140009375:	lea    rcx,[rip+0x5f7c]        # 0x14000f2f8
   14000937c:	call   0x14000114c
   140009381:	and    QWORD PTR [rip+0x5f77],0x0        # 0x14000f300
   140009389:	mov    rcx,QWORD PTR [rip+0x5fa0]        # 0x14000f330
   140009390:	test   rcx,rcx
   140009393:	je     0x14000939b
   140009395:	mov    rax,QWORD PTR [rcx]
   140009398:	call   QWORD PTR [rax+0x10]
   14000939b:	lea    rcx,[rip+0x5f66]        # 0x14000f308
   1400093a2:	call   QWORD PTR [rip+0xc70]        # 0x14000a018
   1400093a8:	and    DWORD PTR [rip+0x5f49],0x0        # 0x14000f2f8
   1400093af:	add    rsp,0x28
   1400093b3:	ret    
   1400093b4:	lea    rcx,[rip+0x6565]        # 0x14000f920
   1400093bb:	jmp    0x140008934

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	clc    
   14000a001:	fild   DWORD PTR [rax]
   14000a003:	add    BYTE PTR [rax],al
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rdx],cl
   14000a009:	fadd   QWORD PTR [rax]
   14000a00b:	add    BYTE PTR [rax],al
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rdx],bl
   14000a011:	fadd   QWORD PTR [rax]
   14000a013:	add    BYTE PTR [rax],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rdx-0x24],al
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	pop    rdx
   14000a021:	fadd   QWORD PTR [rax]
   14000a023:	add    BYTE PTR [rax],al
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    BYTE PTR [rsp+rbx*8+0x0],ch
   14000a02b:	add    BYTE PTR [rax],al
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    BYTE PTR [rax+0xdc],al
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rsp+rbx*8+0x0],cl
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a041:	fadd   QWORD PTR [rax]
   14000a043:	add    BYTE PTR [rax],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rsp+rbx*8+0x0],bh
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	enter  0xdc,0x0
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	(bad)  
   14000a059:	fadd   QWORD PTR [rax]
   14000a05b:	add    BYTE PTR [rax],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    ah,ch
   14000a061:	fadd   QWORD PTR [rax]
   14000a063:	add    BYTE PTR [rax],al
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    dh,bh
   14000a069:	fadd   QWORD PTR [rax]
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rsi],cl
   14000a071:	fld    QWORD PTR [rax]
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rsi],bl
   14000a079:	fld    QWORD PTR [rax]
   14000a07b:	add    BYTE PTR [rax],al
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rax],dh
   14000a081:	fld    QWORD PTR [rax]
   14000a083:	add    BYTE PTR [rax],al
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rsi-0x23],al
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	push   rsi
   14000a091:	fld    QWORD PTR [rax]
   14000a093:	add    BYTE PTR [rax],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    BYTE PTR [rsi-0x23],ch
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	jle    0x14000a07f
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	xchg   esp,eax
   14000a0a9:	fld    QWORD PTR [rax]
   14000a0ab:	add    BYTE PTR [rax],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rdx+0xdd],ch
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rsi+0xdd],bh
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    ah,dl
   14000a0c1:	fld    QWORD PTR [rax]
   14000a0c3:	add    BYTE PTR [rax],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    dl,ah
   14000a0c9:	fld    QWORD PTR [rax]
   14000a0cb:	add    BYTE PTR [rax],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    al,dh
   14000a0d1:	fld    QWORD PTR [rax]
   14000a0d3:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rsi],al
   14000a0d9:	fiadd  WORD PTR [rax]
   14000a0db:	add    BYTE PTR [rax],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rax],bl
   14000a0e1:	fiadd  WORD PTR [rax]
   14000a0e3:	add    BYTE PTR [rax],al
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rsi],ch
   14000a0e9:	fiadd  WORD PTR [rax]
   14000a0eb:	add    BYTE PTR [rax],al
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rsi+rbx*8],bh
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	rex.WRX fiadd WORD PTR [rax]
   14000a0fb:	add    BYTE PTR [rax],al
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rdx-0x22],ah
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	jbe    0x14000a0e8
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	mov    ds,esi
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a119:	fiadd  WORD PTR [rax]
   14000a11b:	add    BYTE PTR [rax],al
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	add    BYTE PTR [rdx+0xde],bh
   14000a125:	add    BYTE PTR [rax],al
   14000a127:	add    BYTE PTR [rdx+0xe3],al
   14000a12d:	add    BYTE PTR [rax],al
   14000a12f:	add    BYTE PTR [rsi-0x1d],dh
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	pop    rsp
   14000a139:	jrcxz  0x14000a13b
   14000a13b:	add    BYTE PTR [rax],al
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rbx+riz*8+0x0],cl
   14000a143:	add    BYTE PTR [rax],al
   14000a145:	add    BYTE PTR [rax],al
   14000a147:	add    BYTE PTR [rdx],dh
   14000a149:	jrcxz  0x14000a14b
   14000a14b:	add    BYTE PTR [rax],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rsi],bl
   14000a151:	jrcxz  0x14000a153
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rbx+riz*8],al
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	lock loop 0x14000a163
   14000a163:	add    BYTE PTR [rax],al
   14000a165:	add    BYTE PTR [rax],al
   14000a167:	add    ah,bl
   14000a169:	loop   0x14000a16b
   14000a16b:	add    BYTE PTR [rax],al
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    BYTE PTR [rsi+0xe2],bh
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rdx+0xe2],ah
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rsi+0xe2],cl
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rdx+riz*8+0x0],bh
   14000a18b:	add    BYTE PTR [rax],al
   14000a18d:	add    BYTE PTR [rax],al
   14000a18f:	add    BYTE PTR [rdx+riz*8+0x0],dh
   14000a193:	add    BYTE PTR [rax],al
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rdx+riz*8+0x0],ah
   14000a19b:	add    BYTE PTR [rax],al
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rdx+riz*8+0x0],dl
	...
   14000a1af:	add    BYTE PTR [rsi+0xdf],al
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rax+0xdf],dl
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rdx+0xdf],ah
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rdi+rbx*8+0x0],dh
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	retf   0xdf
   14000a1d3:	add    BYTE PTR [rax],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    dh,dl
   14000a1d9:	fild   WORD PTR [rax]
   14000a1db:	add    BYTE PTR [rax],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    al,ah
   14000a1e1:	fild   WORD PTR [rax]
   14000a1e3:	add    BYTE PTR [rax],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    dl,ch
   14000a1e9:	fild   WORD PTR [rax]
   14000a1eb:	add    BYTE PTR [rax],al
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    dl,dh
   14000a1f1:	fild   WORD PTR [rax]
   14000a1f3:	add    BYTE PTR [rax],al
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rax],cl
   14000a1f9:	loopne 0x14000a1fb
   14000a1fb:	add    BYTE PTR [rax],al
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rax+riz*8],dl
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    BYTE PTR [rax],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	and    al,ah
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	add    BYTE PTR [rax],al
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	xor    ah,al
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	add    BYTE PTR [rax],al
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	cmp    al,0xe0
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	add    BYTE PTR [rax],al
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	rex.RX loopne 0x14000a223
   14000a223:	add    BYTE PTR [rax],al
   14000a225:	add    BYTE PTR [rax],al
   14000a227:	add    BYTE PTR [rax+riz*8+0x0],dl
   14000a22b:	add    BYTE PTR [rax],al
   14000a22d:	add    BYTE PTR [rax],al
   14000a22f:	add    BYTE PTR [rax+riz*8+0x0],bl
   14000a233:	add    BYTE PTR [rax],al
   14000a235:	add    BYTE PTR [rax],al
   14000a237:	add    BYTE PTR [rax-0x20],ch
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	js     0x14000a222
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	test   al,ah
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	xchg   edx,eax
   14000a251:	loopne 0x14000a253
   14000a253:	add    BYTE PTR [rax],al
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rdx+0xe0],ah
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rdx+0xe0],dh
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rsi+0xe0],bh
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    ah,cl
   14000a271:	loopne 0x14000a273
   14000a273:	add    BYTE PTR [rax],al
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    ah,bl
   14000a279:	loopne 0x14000a27b
   14000a27b:	add    BYTE PTR [rax],al
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    ah,dh
   14000a281:	loopne 0x14000a283
   14000a283:	add    BYTE PTR [rax],al
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    BYTE PTR [rax],cl
   14000a289:	loope  0x14000a28b
   14000a28b:	add    BYTE PTR [rax],al
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    BYTE PTR [rax],ah
   14000a291:	loope  0x14000a293
   14000a293:	add    BYTE PTR [rax],al
   14000a295:	add    BYTE PTR [rax],al
   14000a297:	add    BYTE PTR [rdx],ch
   14000a299:	loope  0x14000a29b
   14000a29b:	add    BYTE PTR [rax],al
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    BYTE PTR [rax],bh
   14000a2a1:	loope  0x14000a2a3
   14000a2a3:	add    BYTE PTR [rax],al
   14000a2a5:	add    BYTE PTR [rax],al
   14000a2a7:	add    BYTE PTR [rax-0x1f],al
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	rex.WX loope 0x14000a2b3
   14000a2b3:	add    BYTE PTR [rax],al
   14000a2b5:	add    BYTE PTR [rax],al
   14000a2b7:	add    BYTE PTR [rax-0x1f],bl
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	push   0xffffffffffffffe1
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	js     0x14000a2ab
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	add    BYTE PTR [rax],al
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	and    cl,0x0
   14000a2d3:	add    BYTE PTR [rax],al
   14000a2d5:	add    BYTE PTR [rax],al
   14000a2d7:	add    BYTE PTR [rdx+0xe1],cl
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rdx+0xe1],dl
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    BYTE PTR [rcx+riz*8+0x0],bl
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	test   al,0xe1
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	mov    dh,0xe1
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	int3   
   14000a301:	loope  0x14000a303
   14000a303:	add    BYTE PTR [rax],al
   14000a305:	add    BYTE PTR [rax],al
   14000a307:	add    al,ah
   14000a309:	loope  0x14000a30b
   14000a30b:	add    BYTE PTR [rax],al
   14000a30d:	add    BYTE PTR [rax],al
   14000a30f:	add    ah,ch
   14000a311:	loope  0x14000a313
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    dh,dh
   14000a319:	loope  0x14000a31b
   14000a31b:	add    BYTE PTR [rax],al
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    BYTE PTR [rax],cl
   14000a321:	loop   0x14000a323
   14000a323:	add    BYTE PTR [rax],al
   14000a325:	add    BYTE PTR [rax],al
   14000a327:	add    BYTE PTR [rsi],bh
   14000a329:	loop   0x14000a32b
   14000a32b:	add    BYTE PTR [rax],al
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rsi-0x21],dh
	...
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	adc    eax,0x1
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	adc    BYTE PTR [rsi+0x0],0x0
   14000a34e:	add    BYTE PTR [rax+0x7],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax+0x2],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax+0x6],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax+0x0],al
   14000a36c:	add    BYTE PTR [rax],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	(bad)  
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	(bad)  
   14000a379:	fiadd  WORD PTR [rax]
	...
   14000a387:	add    BYTE PTR [rdi+rbx*8],dl
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	sub    bh,bl
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	add    BYTE PTR [rax],al
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	cmp    al,0xdf
   14000a39a:	add    BYTE PTR [rax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	rex.WR fild WORD PTR [rax]
   14000a3a3:	add    BYTE PTR [rax],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    BYTE PTR [rdx],al
   14000a3a9:	fild   WORD PTR [rax]
	...
   14000a3bf:	add    BYTE PTR [rdx+rax*4],dl
   14000a3c2:	add    BYTE PTR [rax+0x1],al
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    BYTE PTR [rax],dh
   14000a3c9:	xchg   ebx,eax
   14000a3ca:	add    BYTE PTR [rax+0x1],al
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	add    ah,ah
   14000a3d1:	xchg   edx,eax
   14000a3d2:	add    BYTE PTR [rax+0x1],al
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    BYTE PTR [rax],ah
   14000a3d9:	xchg   ebx,eax
   14000a3da:	add    BYTE PTR [rax+0x1],al
	...
   14000a3ed:	add    BYTE PTR [rax],al
   14000a3ef:	add    BYTE PTR [rsp+rax*4+0x0],dh
   14000a3f3:	rex add DWORD PTR [rax],eax
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	add    al,0x87
   14000a3fa:	add    BYTE PTR [rax+0x1],al
	...
   14000a411:	add    BYTE PTR [rax],al
   14000a413:	add    BYTE PTR [rbx-0x67],al
   14000a416:	push   0x53
   14000a418:	add    BYTE PTR [rax],al
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	add    al,BYTE PTR [rax]
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	pop    rdi
   14000a421:	add    BYTE PTR [rax],al
   14000a423:	add    BYTE PTR [rax-0x40],bl
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	pop    rax
   14000a429:	test   al,0x0
   14000a42b:	add    BYTE PTR [rax],al
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rbx+0x0],dl
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	rex.WRB add BYTE PTR [r8],r8b
   14000a437:	add    BYTE PTR [rax],dh
   14000a439:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a43a:	add    BYTE PTR [rax+0x1],al
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rsp+riz*4],dh
   14000a442:	add    BYTE PTR [rax+0x1],al
   14000a445:	add    BYTE PTR [rax],al
   14000a447:	add    BYTE PTR [rax+rax*1+0x0],al
   14000a44b:	add    BYTE PTR [rdx+0x0],al
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a452:	add    BYTE PTR [rax+0x1],al
   14000a455:	add    BYTE PTR [rax],al
   14000a457:	add    BYTE PTR [rsp+riz*4+0x0],cl
   14000a45b:	rex add DWORD PTR [rax],eax
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	push   rsi
   14000a461:	add    BYTE PTR [rcx+0x0],ah
   14000a464:	ins    BYTE PTR es:[rdi],dx
   14000a465:	add    BYTE PTR [rax],al
   14000a467:	add    BYTE PTR [rax-0x5c],ah
   14000a46a:	add    BYTE PTR [rax+0x1],al
   14000a46d:	add    BYTE PTR [rax],al
   14000a46f:	add    BYTE PTR [rsi+0x0],al
   14000a472:	outs   dx,DWORD PTR ds:[rsi]
   14000a473:	add    BYTE PTR [rdx+0x0],dh
   14000a476:	movsxd eax,DWORD PTR [rax]
   14000a478:	add    BYTE PTR gs:[rdx+0x0],dl
   14000a47c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a480:	outs   dx,DWORD PTR ds:[rsi]
   14000a481:	add    BYTE PTR [rsi+0x0],dh
   14000a484:	add    BYTE PTR gs:[rax],al
   14000a487:	add    BYTE PTR [rax-0x5c],dh
   14000a48a:	add    BYTE PTR [rax+0x1],al
   14000a48d:	add    BYTE PTR [rax],al
   14000a48f:	add    BYTE PTR [rsi+0x0],cl
   14000a492:	outs   dx,DWORD PTR ds:[rsi]
   14000a493:	add    BYTE PTR [rdx+0x0],dl
   14000a496:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a49a:	outs   dx,DWORD PTR ds:[rsi]
   14000a49b:	add    BYTE PTR [rsi+0x0],dh
   14000a49e:	add    BYTE PTR gs:[rax],al
   14000a4a1:	add    BYTE PTR [rax],al
   14000a4a3:	add    BYTE PTR [rax],al
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    BYTE PTR [rax+0x14000a4],dl
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a4b3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a4b7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a4bb:	add    BYTE PTR [rax],al
   14000a4bd:	add    BYTE PTR [rax],al
   14000a4bf:	add    BYTE PTR [rax+0x14000a4],dh
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    BYTE PTR [rcx+0x0],al
   14000a4ca:	jo     0x14000a4cc
   14000a4cc:	jo     0x14000a4ce
   14000a4ce:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000a4d3:	add    BYTE PTR [rdx],dh
   14000a4d5:	add    BYTE PTR [rax],al
   14000a4d7:	add    BYTE PTR [rbx+0x0],al
   14000a4da:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000a4de:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000a4e3:	add    BYTE PTR [rax],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    BYTE PTR [rbx+0x0],al
   14000a4ea:	outs   dx,DWORD PTR ds:[rsi]
   14000a4eb:	add    BYTE PTR [rbp+0x0],ch
   14000a4ee:	jo     0x14000a4f0
   14000a4f0:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f1:	add    BYTE PTR [rsi+0x0],ch
   14000a4f4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a4f8:	je     0x14000a4fa
   14000a4fa:	and    BYTE PTR [rax],al
   14000a4fc:	rex.XB add BYTE PTR [r9+0x0],spl
   14000a500:	je     0x14000a502
   14000a502:	add    BYTE PTR gs:[rdi+0x0],ah
   14000a506:	outs   dx,DWORD PTR ds:[rsi]
   14000a507:	add    BYTE PTR [rdx+0x0],dh
   14000a50a:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000a518:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000a51c:	ins    BYTE PTR es:[rdi],dx
   14000a51d:	add    BYTE PTR [rbp+0x0],ah
   14000a520:	push   rsp
   14000a521:	add    BYTE PTR [rcx+0x0],bh
   14000a524:	jo     0x14000a526
   14000a526:	add    BYTE PTR gs:[rax],al
   14000a529:	add    BYTE PTR [rax],al
   14000a52b:	add    BYTE PTR [rax],al
   14000a52d:	add    BYTE PTR [rax],al
   14000a52f:	add    BYTE PTR [rcx+0x0],cl
   14000a532:	outs   dx,BYTE PTR ds:[rsi]
   14000a533:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a537:	add    BYTE PTR [rdx+0x0],dh
   14000a53a:	data16 add BYTE PTR [rcx+0x0],ah
   14000a53e:	movsxd eax,DWORD PTR [rax]
   14000a540:	add    BYTE PTR gs:[rax],al
   14000a543:	add    BYTE PTR [rax],al
   14000a545:	add    BYTE PTR [rax],al
   14000a547:	add    BYTE PTR [rax+0x0],cl
   14000a54a:	(bad)  
   14000a54b:	add    BYTE PTR [rdx+0x0],dh
   14000a54e:	add    BYTE PTR fs:[rdi+0x0],dh
   14000a552:	(bad)  
   14000a553:	add    BYTE PTR [rdx+0x0],dh
   14000a556:	add    BYTE PTR gs:[rax],al
   14000a559:	add    BYTE PTR [rax],al
   14000a55b:	add    BYTE PTR [rax],al
   14000a55d:	add    BYTE PTR [rax],al
   14000a55f:	add    BYTE PTR [rbp+0x0],cl
   14000a562:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000a570:	push   rbx
   14000a571:	add    BYTE PTR [rcx+0x0],al
   14000a574:	rex.WRB add BYTE PTR [r8],r8b
   14000a577:	add    BYTE PTR [rbx+0x0],dl
   14000a57a:	add    BYTE PTR [r11+0x0],r8b
   14000a57e:	push   rbp
   14000a57f:	add    BYTE PTR [rdx+0x0],dl
   14000a582:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000a58f:	add    BYTE PTR [rbx+0x0],dl
   14000a592:	pop    rcx
   14000a593:	add    BYTE PTR [rbx+0x0],dl
   14000a596:	push   rsp
   14000a597:	add    BYTE PTR [rbp+0x0],al
   14000a59a:	rex.WRB add BYTE PTR [r8],r8b
   14000a59d:	add    BYTE PTR [rax],al
   14000a59f:	add    BYTE PTR [rbx+0x0],dl
   14000a5a2:	outs   dx,DWORD PTR ds:[rsi]
   14000a5a3:	add    BYTE PTR [rsi+0x0],ah
   14000a5a6:	je     0x14000a5a8
   14000a5a8:	ja     0x14000a5aa
   14000a5aa:	(bad)  
   14000a5ab:	add    BYTE PTR [rdx+0x0],dh
   14000a5ae:	add    BYTE PTR gs:[rax],al
   14000a5b1:	add    BYTE PTR [rax],al
   14000a5b3:	add    BYTE PTR [rax],al
   14000a5b5:	add    BYTE PTR [rax],al
   14000a5b7:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000a5bb:	add    BYTE PTR [rax+0x0],dh
   14000a5be:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000a5c3:	add    BYTE PTR [rdx+0x0],ah
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	push   rbx
   14000a5c9:	add    BYTE PTR [rdi+0x0],cl
   14000a5cc:	add    BYTE PTR [rax+r8*1+0x57],r10b
   14000a5d1:	add    BYTE PTR [rcx+0x0],al
   14000a5d4:	push   rdx
   14000a5d5:	add    BYTE PTR [rbp+0x0],al
	...
   14000a5e0:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000a5e4:	jbe    0x14000a5e6
   14000a5e6:	(bad)  
   14000a5e7:	add    BYTE PTR [rbx+0x0],dl
   14000a5ea:	outs   dx,DWORD PTR ds:[rsi]
   14000a5eb:	add    BYTE PTR [rsi+0x0],ah
   14000a5ee:	je     0x14000a5f0
	...
   14000a5f8:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000a5fc:	jbe    0x14000a5fe
   14000a5fe:	(bad)  
   14000a5ff:	add    BYTE PTR [rax],ah
   14000a601:	add    BYTE PTR [rax+0x0],dl
   14000a604:	ins    BYTE PTR es:[rdi],dx
   14000a605:	add    BYTE PTR [rbp+0x0],dh
   14000a608:	add    BYTE PTR [eip+0x6e006900],ch        # 0x1ae010f0f
	...
   14000a617:	add    BYTE PTR [rcx],dh
   14000a619:	add    BYTE PTR [rax],dh
   14000a61b:	add    BYTE PTR [rsi],ch
   14000a61d:	add    BYTE PTR [rsi],dh
   14000a61f:	add    BYTE PTR [rax],dh
   14000a621:	add    BYTE PTR [rsi],ch
   14000a623:	add    BYTE PTR [rdx],dh
   14000a625:	add    BYTE PTR [rax],al
   14000a627:	add    BYTE PTR [rbp+0x0],dl
   14000a62a:	jae    0x14000a62c
   14000a62c:	add    BYTE PTR gs:[rsi+0x0],cl
   14000a630:	add    BYTE PTR gs:[rdi+0x0],dh
   14000a634:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000a638:	jbe    0x14000a63a
   14000a63a:	(bad)  
   14000a63b:	add    BYTE PTR [rax+0x0],dl
   14000a63e:	ins    BYTE PTR es:[rdi],dx
   14000a63f:	add    BYTE PTR [rbp+0x0],dh
   14000a642:	add    BYTE PTR [ecx+0x0],ch
   14000a646:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000a64f:	add    BYTE PTR [rbx+0x0],dl
   14000a652:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000a656:	push   rsp
   14000a657:	add    BYTE PTR [rdi+0x0],dl
   14000a65a:	add    BYTE PTR [r10+0x0],dl
   14000a65e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000a663:	add    BYTE PTR [rcx+0x0],ch
   14000a666:	movsxd eax,DWORD PTR [rax]
   14000a668:	jb     0x14000a66a
   14000a66a:	outs   dx,DWORD PTR ds:[rsi]
   14000a66b:	add    BYTE PTR [rbx+0x0],dh
   14000a66e:	outs   dx,DWORD PTR ds:[rsi]
   14000a66f:	add    BYTE PTR [rsi+0x0],ah
   14000a672:	je     0x14000a674
   14000a674:	pop    rsp
   14000a675:	add    BYTE PTR [rcx+0x0],cl
   14000a678:	outs   dx,BYTE PTR ds:[rsi]
   14000a679:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a67d:	add    BYTE PTR [rdx+0x0],dh
   14000a680:	outs   dx,BYTE PTR ds:[rsi]
   14000a681:	add    BYTE PTR [rbp+0x0],ah
   14000a684:	je     0x14000a686
   14000a686:	and    BYTE PTR [rax],al
   14000a688:	add    BYTE PTR [r8+0x0],r15b
   14000a68c:	jo     0x14000a68e
   14000a68e:	ins    BYTE PTR es:[rdi],dx
   14000a68f:	add    BYTE PTR [rdi+0x0],ch
   14000a692:	jb     0x14000a694
   14000a694:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a698:	pop    rsp
   14000a699:	add    BYTE PTR [rbp+0x0],al
   14000a69c:	js     0x14000a69e
   14000a69e:	je     0x14000a6a0
   14000a6a0:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a6a4:	jae    0x14000a6a6
   14000a6a6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a6ac:	jae    0x14000a6ae
   14000a6ae:	pop    rsp
   14000a6af:	add    BYTE PTR [rbx+0x0],bh
   14000a6b2:	xor    BYTE PTR [rax],al
   14000a6b4:	cmp    BYTE PTR [rax],al
   14000a6b6:	rex.X add BYTE PTR [rax],sil
   14000a6b9:	add    BYTE PTR [rbp+0x0],al
   14000a6bc:	xor    eax,0x30004300
   14000a6c1:	add    BYTE PTR [rip+0x46003400],ch        # 0x18600dac7
   14000a6c7:	add    BYTE PTR [rbx+0x0],al
   14000a6ca:	rex.X add BYTE PTR [rip+0x31003100],bpl        # 0x17100d7d1
   14000a6d1:	add    BYTE PTR [rbx+0x0],al
   14000a6d4:	rex.RX add BYTE PTR [rip+0x41004100],r13b        # 0x18100e7db
   14000a6db:	add    BYTE PTR [rcx+0x0],al
   14000a6de:	xor    eax,0x30002d00
   14000a6e3:	add    BYTE PTR [rax],dh
   14000a6e5:	add    BYTE PTR [rax+rax*1],dh
   14000a6e8:	xor    BYTE PTR [rax],al
   14000a6ea:	xor    DWORD PTR [rax],eax
   14000a6ec:	rex.XB add BYTE PTR [r14],sil
   14000a6ef:	add    BYTE PTR [rax],dh
   14000a6f1:	add    BYTE PTR [rax],bh
   14000a6f3:	add    BYTE PTR [rip+0x31003000],dh        # 0x17100d6f9
   14000a6f9:	add    BYTE PTR [rbp+0x0],bh
   14000a6fc:	add    BYTE PTR [rax],al
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	pop    rsp
   14000a701:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a705:	add    BYTE PTR [rax+0x0],dh
   14000a708:	ins    BYTE PTR es:[rdi],dx
   14000a709:	add    BYTE PTR [rdi+0x0],ch
   14000a70c:	jns    0x14000a70e
   14000a70e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a713:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a717:	add    BYTE PTR [rdx+0x65],dl
   14000a71a:	addr32 rex.WX (bad) 
   14000a71d:	jbe    0x14000a780
   14000a71f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a721:	outs   dx,BYTE PTR ds:[rsi]
   14000a722:	jae    0x14000a793
   14000a724:	ins    BYTE PTR es:[rdi],dx
   14000a725:	gs rex.WB
   14000a727:	rex.RB js 0x14000a79a
   14000a72a:	ins    BYTE PTR es:[rdi],dx
   14000a72b:	outs   dx,DWORD PTR ds:[rsi]
   14000a72c:	jb     0x14000a793
   14000a72e:	jb     0x14000a730
   14000a730:	add    BYTE PTR ss:[rax],dh
   14000a733:	add    BYTE PTR [rax],al
   14000a735:	add    BYTE PTR [rax],al
   14000a737:	add    BYTE PTR [rsi],dh
   14000a739:	add    BYTE PTR [rax],dh
   14000a73b:	add    BYTE PTR [rax],al
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rcx],dh
   14000a741:	add    BYTE PTR [rax],dh
   14000a743:	add    BYTE PTR [rax],al
   14000a745:	add    BYTE PTR [rax],al
   14000a747:	add    BYTE PTR [rip+0x65006e00],ch        # 0x1a501154d
   14000a74d:	add    BYTE PTR [rdi+0x0],dh
	...
   14000a758:	sub    eax,0x6c006f00
   14000a75d:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000a761:	add    BYTE PTR [rax],al
   14000a763:	add    BYTE PTR [rax],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rip+0x69006800],ch        # 0x1a9010f6d
   14000a76d:	add    BYTE PTR [rdi+0x0],ah
   14000a770:	push   0x0
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    BYTE PTR [rip+0x70006a00],ch        # 0x1b001117d
   14000a77d:	add    BYTE PTR [rcx+0x0],ch
   14000a780:	jae    0x14000a782
   14000a782:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   14000a787:	add    BYTE PTR [rax+0x0],dh
   14000a78a:	add    BYTE PTR [rax],al
   14000a78c:	add    BYTE PTR [rax],al
   14000a78e:	add    BYTE PTR [rax],al
   14000a790:	sub    eax,0x65007300
   14000a795:	add    BYTE PTR [rax+rax*1+0x74],dh
   14000a799:	add    BYTE PTR [rdx+0x0],dh
   14000a79c:	add    BYTE PTR gs:[rcx+0x0],ah
   14000a7a0:	je     0x14000a7a2
   14000a7a2:	(bad)  
   14000a7a3:	add    BYTE PTR [rbx+0x0],dh
   14000a7a6:	add    BYTE PTR [rax],al
   14000a7a8:	sub    eax,0x75006600
   14000a7ad:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a7b1:	add    BYTE PTR [rdx+0x0],dh
   14000a7b4:	add    BYTE PTR gs:[rdi+0x0],ah
	...
   14000a7c0:	sub    eax,0x65007200
   14000a7c5:	add    BYTE PTR [rdi+0x0],ah
   14000a7c8:	add    BYTE PTR fs:[rbp+0x0],ah
   14000a7cc:	jo     0x14000a7ce
   14000a7ce:	ins    BYTE PTR es:[rdi],dx
   14000a7cf:	add    BYTE PTR [rdi+0x0],ch
   14000a7d2:	jns    0x14000a7d4
   14000a7d4:	add    BYTE PTR [rax],al
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	sub    eax,0x65007200
   14000a7dd:	add    BYTE PTR [rdi+0x0],ah
   14000a7e0:	imul   eax,DWORD PTR [rax],0x740073
   14000a7e6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a7ea:	add    BYTE PTR [rax],al
   14000a7ec:	add    BYTE PTR [rax],al
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	sub    eax,0x69006400
   14000a7f5:	add    BYTE PTR [rbx+0x0],dh
   14000a7f8:	(bad)  
   14000a7f9:	add    BYTE PTR [rdx+0x0],ah
   14000a7fc:	ins    BYTE PTR es:[rdi],dx
   14000a7fd:	add    BYTE PTR [rbp+0x0],ah
   14000a800:	ja     0x14000a802
   14000a802:	add    BYTE PTR gs:[rdx+0x0],ah
   14000a806:	push   0x0
   14000a808:	(bad)  
   14000a809:	add    BYTE PTR [rsi+0x0],dh
   14000a80c:	(bad)  
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rip+0x6f006600],ch        # 0x1af010e15
   14000a815:	add    BYTE PTR [rdx+0x0],dh
   14000a818:	movsxd eax,DWORD PTR [rax]
   14000a81a:	add    BYTE PTR gs:[rcx+0x0],ch
   14000a81e:	outs   dx,BYTE PTR ds:[rsi]
   14000a81f:	add    BYTE PTR [rbx+0x0],dh
   14000a822:	je     0x14000a824
   14000a824:	(bad)  
   14000a825:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a829:	add    BYTE PTR [rax],al
   14000a82b:	add    BYTE PTR [rax],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af011635
   14000a835:	add    BYTE PTR [rax+0x0],ch
   14000a838:	imul   eax,DWORD PTR [rax],0x74006e
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	pop    rsp
   14000a841:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a845:	add    BYTE PTR [rax+0x0],dh
   14000a848:	ins    BYTE PTR es:[rdi],dx
   14000a849:	add    BYTE PTR [rdi+0x0],ch
   14000a84c:	jns    0x14000a84e
   14000a84e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a853:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a857:	add    BYTE PTR [rbp+0x6e],dl
   14000a85a:	jb     0x14000a8c1
   14000a85c:	imul   esi,DWORD PTR [ebx+0x74],0x65447265
   14000a864:	jo     0x14000a8d2
   14000a866:	outs   dx,DWORD PTR ds:[rsi]
   14000a867:	jns    0x14000a8ae
   14000a869:	js     0x14000a86b
   14000a86b:	add    BYTE PTR [rax],al
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rdx+0x65],dl
   14000a872:	imul   esi,DWORD PTR [ebx+0x74],0x65447265
   14000a87a:	jo     0x14000a8e8
   14000a87c:	outs   dx,DWORD PTR ds:[rsi]
   14000a87d:	jns    0x14000a8c4
   14000a87f:	js     0x14000a881
   14000a881:	add    BYTE PTR [rax],al
   14000a883:	add    BYTE PTR [rax],al
   14000a885:	add    BYTE PTR [rax],al
   14000a887:	add    BYTE PTR [rdi+0x65],al
   14000a88a:	je     0x14000a8ce
   14000a88c:	gs jae 0x14000a903
   14000a88f:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a891:	ins    DWORD PTR es:[rdi],dx
   14000a892:	rex.X imul ebp,DWORD PTR gs:[rsi+0x0],0x74657300
   14000a89b:	rex.RX pop rax
   14000a89d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a89f:	(bad)  
   14000a8a0:	(bad)  
   14000a8a1:	ins    BYTE PTR es:[rdi],dx
   14000a8a2:	gs rex.WXB
   14000a8a4:	gs jns 0x14000a8a7
   14000a8a7:	add    BYTE PTR [rdx+0x65],dl
   14000a8aa:	imul   esi,DWORD PTR [ebx+0x74],0x69477265
   14000a8b2:	jbe    0x14000a919
   14000a8b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a8b5:	rex.R
   14000a8b6:	gs jo  0x14000a925
   14000a8b9:	outs   dx,DWORD PTR ds:[rsi]
   14000a8ba:	jns    0x14000a8fe
   14000a8bc:	imul   ebp,DWORD PTR [rsi+0x0],0x6a005c00
   14000a8c3:	add    BYTE PTR [rax+0x0],dh
   14000a8c6:	xor    al,BYTE PTR [rax]
   14000a8c8:	jae    0x14000a8ca
   14000a8ca:	jae    0x14000a8cc
   14000a8cc:	jbe    0x14000a8ce
   14000a8ce:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a8d3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a8d7:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000a8db:	add    BYTE PTR [rbx+0x0],dh
   14000a8de:	jbe    0x14000a8e0
   14000a8e0:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000a8e5:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a8e9:	add    BYTE PTR [rax],al
   14000a8eb:	add    BYTE PTR [rax],al
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rbp+0x70],dl
   14000a8f2:	fs (bad) 
   14000a8f4:	je     0x14000a95b
   14000a8f6:	push   rsp
   14000a8f7:	jb     0x14000a95e
   14000a8f9:	(bad)  
   14000a8fa:	je     0x14000a93d
   14000a8fc:	jae    0x14000a949
   14000a8fe:	gs jns 0x14000a901
   14000a901:	add    BYTE PTR [rax],al
   14000a903:	add    BYTE PTR [rax],al
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rdx+0x65],dl
   14000a90a:	addr32 rex.WXB
   14000a90c:	gs jns 0x14000a951
   14000a90f:	jb     0x14000a972
   14000a911:	outs   dx,BYTE PTR ds:[rsi]
   14000a912:	movsxd ebp,DWORD PTR [rax+0x4e]
   14000a915:	gs gs fs jae 0x14000a96f
   14000a91a:	jo     0x14000a980
   14000a91c:	(bad)  
   14000a91d:	je     0x14000a988
   14000a91f:	outs   dx,BYTE PTR ds:[rsi]
   14000a920:	add    BYTE PTR [eax],al
   14000a923:	add    BYTE PTR [rax],al
   14000a925:	add    BYTE PTR [rax],al
   14000a927:	add    BYTE PTR [rdx+0x65],dl
   14000a92a:	imul   esi,DWORD PTR fs:[rdx+0x65],0x65537463
   14000a932:	ins    BYTE PTR es:[rdi],dx
   14000a933:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000a938:	push   rbx
   14000a939:	je     0x14000a99c
   14000a93b:	je     0x14000a9a6
   14000a93d:	movsxd edx,DWORD PTR [rsi+0x65]
   14000a940:	jb     0x14000a9b5
   14000a942:	imul   ebp,DWORD PTR [rdi+0x6e],0x7379654b
   14000a949:	add    BYTE PTR [rax],al
   14000a94b:	add    BYTE PTR [rax],al
   14000a94d:	add    BYTE PTR [rax],al
   14000a94f:	add    BYTE PTR [rcx+0x73],cl
   14000a952:	push   rbx
   14000a953:	push   rbx
   14000a954:	push   rsi
   14000a955:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000a957:	(bad)  
   14000a958:	(bad)  
   14000a959:	ins    BYTE PTR es:[rdi],dx
   14000a95a:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
   14000a95e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000a960:	jp     0x14000a9cb
   14000a962:	ins    BYTE PTR es:[rdi],dx
   14000a963:	ins    BYTE PTR es:[rdi],dx
   14000a964:	(bad)  
   14000a965:	add    BYTE PTR [rax],al
   14000a967:	add    BYTE PTR [rdx+0x65],dl
   14000a96a:	ins    DWORD PTR es:[rdi],dx
   14000a96b:	outs   dx,DWORD PTR ds:[rsi]
   14000a96c:	jbe    0x14000a9d3
   14000a96e:	rex.B ins BYTE PTR es:[rdi],dx
   14000a970:	ins    BYTE PTR es:[rdi],dx
   14000a971:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000a973:	jp     0x14000a9de
   14000a975:	ins    BYTE PTR es:[rdi],dx
   14000a976:	ins    BYTE PTR es:[rdi],dx
   14000a977:	(bad)  
   14000a978:	rex.WX (bad) 
   14000a97a:	jbe    0x14000a9dd
   14000a97c:	push   rax
   14000a97d:	ins    BYTE PTR es:[rdi],dx
   14000a97e:	jne    0x14000a9e7
   14000a980:	imul   ebp,DWORD PTR [rsi+0x73],0x0
   14000a987:	add    BYTE PTR [rdx+0x65],dl
   14000a98a:	imul   esi,DWORD PTR fs:[rdx+0x65],0x65537463
   14000a992:	ins    BYTE PTR es:[rdi],dx
   14000a993:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000a998:	push   rbx
   14000a999:	je     0x14000a9fc
   14000a99b:	je     0x14000aa06
   14000a99d:	movsxd edx,DWORD PTR [rsi+0x65]
   14000a9a0:	jb     0x14000aa15
   14000a9a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x7379654b
   14000a9a9:	add    BYTE PTR [rax],al
   14000a9ab:	add    BYTE PTR [rax],al
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    BYTE PTR [rdx+0x65],dl
   14000a9b2:	imul   esi,DWORD PTR fs:[rdx+0x65],0x6c417463
   14000a9ba:	ins    BYTE PTR es:[rdi],dx
   14000a9bb:	push   rbx
   14000a9bc:	je     0x14000aa1f
   14000a9be:	je     0x14000aa29
   14000a9c0:	movsxd edx,DWORD PTR [rsi+0x65]
   14000a9c3:	jb     0x14000aa38
   14000a9c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x7379654b
   14000a9cc:	add    BYTE PTR [rax],al
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	push   rdx
   14000a9d1:	gs addr32 rex.WXB
   14000a9d4:	gs jns 0x14000aa19
   14000a9d7:	jb     0x14000aa3a
   14000a9d9:	outs   dx,BYTE PTR ds:[rsi]
   14000a9da:	movsxd ebp,DWORD PTR [rax+0x4e]
   14000a9dd:	gs gs fs jae 0x14000aa37
   14000a9e2:	jo     0x14000aa48
   14000a9e4:	(bad)  
   14000a9e5:	je     0x14000aa50
   14000a9e7:	outs   dx,BYTE PTR ds:[rsi]
   14000a9e8:	add    BYTE PTR [eax],al
   14000a9eb:	add    BYTE PTR [rax],al
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    BYTE PTR [rbx+0x68],al
   14000a9f2:	movsxd ebp,DWORD PTR gs:[rbx+0x4d]
   14000a9f6:	outs   dx,DWORD PTR ds:[rsi]
   14000a9f7:	jp     0x14000aa43
   14000a9f9:	(bad)  
   14000a9fa:	jbe    0x14000aa5d
   14000a9fc:	push   rax
   14000a9fd:	ins    BYTE PTR es:[rdi],dx
   14000a9fe:	jne    0x14000aa67
   14000aa00:	imul   ebp,DWORD PTR [rsi+0x73],0x0
   14000aa07:	add    BYTE PTR [rdx+0x75],dl
   14000aa0a:	outs   dx,BYTE PTR ds:[rsi]
   14000aa0b:	rex.X jb 0x14000aa7d
   14000aa0e:	imul   esp,DWORD PTR [rbp+0x72],0x50
   14000aa12:	jb     0x14000aa83
   14000aa14:	movsxd esp,DWORD PTR [rbp+0x73]
   14000aa17:	jae    0x14000aa19
   14000aa19:	add    BYTE PTR [rax],al
   14000aa1b:	add    BYTE PTR [rax],al
   14000aa1d:	add    BYTE PTR [rax],al
   14000aa1f:	add    BYTE PTR [rdx+0x65],dl
   14000aa22:	imul   esi,DWORD PTR fs:[rdx+0x65],0x65537463
   14000aa2a:	ins    BYTE PTR es:[rdi],dx
   14000aa2b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000aa30:	push   rbx
   14000aa31:	je     0x14000aa94
   14000aa33:	je     0x14000aa9e
   14000aa35:	movsxd edx,DWORD PTR [rsi+0x65]
   14000aa38:	jb     0x14000aaad
   14000aa3a:	imul   ebp,DWORD PTR [rdi+0x6e],0x7379654b
   14000aa41:	add    BYTE PTR [rax],al
   14000aa43:	add    BYTE PTR [rax],al
   14000aa45:	add    BYTE PTR [rax],al
   14000aa47:	add    BYTE PTR [rdx],ah
   14000aa49:	add    eax,0x41993
   14000aa4e:	add    BYTE PTR [rax],al
   14000aa50:	nop
   14000aa51:	(bad)  
   14000aa52:	add    BYTE PTR [rax],al
   14000aa54:	add    DWORD PTR [rax],eax
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	(bad)  
   14000aa59:	(bad)  
   14000aa5a:	add    BYTE PTR [rax],al
   14000aa5c:	or     al,BYTE PTR [rax]
   14000aa5e:	add    BYTE PTR [rax],al
   14000aa60:	cld    
   14000aa61:	(bad)  
   14000aa62:	add    BYTE PTR [rax],al
   14000aa64:	xor    BYTE PTR [rax],al
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	add    BYTE PTR [rax],al
   14000aa6a:	add    BYTE PTR [rax],al
   14000aa6c:	add    DWORD PTR [rax],eax
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	and    al,BYTE PTR [rip+0x71993]        # 0x14007c409
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	(bad)
   14000aa7c:	add    DWORD PTR [rax],eax
   14000aa7e:	add    BYTE PTR [rax],al
   14000aa80:	cwde   
   14000aa81:	(bad)
   14000aa84:	add    BYTE PTR ds:[rax],al
   14000aa87:	add    al,ch
   14000aa89:	(bad)
   14000aa8c:	movabs al,ds:0x100000000000000
	...
   14000aa9d:	add    BYTE PTR [rax],al
   14000aa9f:	add    al,cl
   14000aaa1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aaa2:	add    BYTE PTR [rax+0x1],al
   14000aaa5:	add    BYTE PTR [rax],al
   14000aaa7:	add    al,bl
   14000aaa9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aaaa:	add    BYTE PTR [rax+0x1],al
   14000aaad:	add    BYTE PTR [rax],al
   14000aaaf:	add    al,ch
   14000aab1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000aab2:	add    BYTE PTR [rax+0x1],al
   14000aab5:	add    BYTE PTR [rax],al
   14000aab7:	add    BYTE PTR [rax],bl
   14000aab9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aaba:	add    BYTE PTR [rax+0x1],al
   14000aabd:	add    BYTE PTR [rax],al
   14000aabf:	add    BYTE PTR [rax],dh
   14000aac1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aac2:	add    BYTE PTR [rax+0x1],al
   14000aac5:	add    BYTE PTR [rax],al
   14000aac7:	add    BYTE PTR [rax-0x5b],cl
   14000aaca:	add    BYTE PTR [rax+0x1],al
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    BYTE PTR [rax-0x5b],ah
   14000aad2:	add    BYTE PTR [rax+0x1],al
   14000aad5:	add    BYTE PTR [rax],al
   14000aad7:	add    BYTE PTR [rax-0x5b],dh
   14000aada:	add    BYTE PTR [rax+0x1],al
   14000aadd:	add    BYTE PTR [rax],al
   14000aadf:	add    BYTE PTR [rax-0x5b],bh
   14000aae2:	add    BYTE PTR [rax+0x1],al
   14000aae5:	add    BYTE PTR [rax],al
   14000aae7:	add    BYTE PTR [rax+0x14000a5],dl
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rax+0x14000a5],ah
   14000aaf5:	add    BYTE PTR [rax],al
   14000aaf7:	add    BYTE PTR [rax+0x14000a5],bh
   14000aafd:	add    BYTE PTR [rax],al
   14000aaff:	add    BYTE PTR [rcx+riz*4+0x1780a520],ah
   14000ab06:	test   BYTE PTR [rdi-0x43],0x18
   14000ab0a:	(bad)  
   14000ab0b:	jae    0x14000ab50
   14000ab0d:	(bad)
   14000ab10:	shl    ch,0xb0
   14000ab13:	or     bl,cl
   14000ab15:	rex.WRXB iretq 
   14000ab17:	adc    DWORD PTR [rdx+0x1c4000a5],ebp
   14000ab1d:	(bad)  
   14000ab1e:	test   DWORD PTR [rcx],eax
   14000ab20:	push   rdx
   14000ab21:	gs addr32 rex.WRXB jo 0x14000ab8b
   14000ab26:	outs   dx,BYTE PTR ds:[rsi]
   14000ab27:	rex.WXB
   14000ab28:	gs jns 0x14000ab7f
   14000ab2b:	jb     0x14000ab8e
   14000ab2d:	outs   dx,BYTE PTR ds:[rsi]
   14000ab2e:	jae    0x14000ab91
   14000ab30:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000ab34:	push   rdi
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    BYTE PTR [rcx+0x0],al
   14000ab3a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000ab3e:	(bad)  
   14000ab3f:	add    BYTE PTR [rax+0x0],dh
   14000ab42:	imul   eax,DWORD PTR [rax],0x320033
   14000ab48:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000ab4d:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000ab5d:	add    BYTE PTR [rax],al
   14000ab5f:	add    BYTE PTR [rdx],ah
   14000ab61:	add    eax,0x11993
   14000ab66:	add    BYTE PTR [rax],al
   14000ab68:	lock mov DWORD PTR [rax],0x0
   14000ab6f:	add    BYTE PTR [rax],al
   14000ab71:	add    BYTE PTR [rax],al
   14000ab73:	add    BYTE PTR [rbx],al
   14000ab75:	add    BYTE PTR [rax],al
   14000ab77:	add    al,bh
   14000ab79:	mov    DWORD PTR [rax],0x2000
   14000ab7f:	add    BYTE PTR [rax],al
   14000ab81:	add    BYTE PTR [rax],al
   14000ab83:	add    BYTE PTR [rcx],al
	...
   14000ab8d:	add    BYTE PTR [rax],al
   14000ab8f:	add    BYTE PTR [rax+0x14000c0],bh
   14000ab95:	add    BYTE PTR [rax],al
   14000ab97:	add    al,bh
   14000ab99:	xor    al,0x0
   14000ab9b:	rex add DWORD PTR [rax],eax
   14000ab9e:	add    BYTE PTR [rax],al
   14000aba0:	js     0x14000abcc
   14000aba2:	add    BYTE PTR [rax+0x1],al
   14000aba5:	add    BYTE PTR [rax],al
   14000aba7:	add    BYTE PTR [rax+0x140002a],cl
   14000abad:	add    BYTE PTR [rax],al
   14000abaf:	add    BYTE PTR [rdx+rbp*1+0x14000],dl
   14000abb6:	add    BYTE PTR [rax],al
   14000abb8:	cwde   
   14000abb9:	sub    al,BYTE PTR [rax]
   14000abbb:	rex add DWORD PTR [rax],eax
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	sbb    al,0x34
   14000abc2:	add    BYTE PTR [rax+0x1],al
   14000abc5:	add    BYTE PTR [rax],al
   14000abc7:	add    BYTE PTR [rax],cl
   14000abc9:	sub    eax,DWORD PTR [rax]
   14000abcb:	rex add DWORD PTR [rax],eax
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	or     BYTE PTR [rbx],ch
   14000abd2:	add    BYTE PTR [rax+0x1],al
   14000abd5:	add    BYTE PTR [rax],al
   14000abd7:	add    BYTE PTR [rax+0x52],ah
   14000abda:	add    BYTE PTR [rax+0x1],al
   14000abdd:	add    BYTE PTR [rax],al
   14000abdf:	add    BYTE PTR [rax+0x52],bl
   14000abe2:	add    BYTE PTR [rax+0x1],al
   14000abe5:	add    BYTE PTR [rax],al
   14000abe7:	add    BYTE PTR [rdx+0x65],dl
   14000abea:	addr32 rex.XB jb 0x14000ac53
   14000abee:	(bad)  
   14000abef:	je     0x14000ac56
   14000abf1:	rex.WXB
   14000abf2:	gs jns 0x14000ac49
   14000abf5:	jb     0x14000ac58
   14000abf7:	outs   dx,BYTE PTR ds:[rsi]
   14000abf8:	jae    0x14000ac5b
   14000abfa:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000abfe:	push   rdi
   14000abff:	add    BYTE PTR [rdx+0x65],dl
   14000ac02:	addr32 rex.R
   14000ac04:	gs ins BYTE PTR es:[rdi],dx
   14000ac06:	gs je  0x14000ac6e
   14000ac09:	rex.WXB
   14000ac0a:	gs jns 0x14000ac61
   14000ac0d:	jb     0x14000ac70
   14000ac0f:	outs   dx,BYTE PTR ds:[rsi]
   14000ac10:	jae    0x14000ac73
   14000ac12:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000ac16:	push   rdi
   14000ac17:	add    BYTE PTR [rsi+0x1],al
   14000ac1a:	add    BYTE PTR [rax],al
   14000ac1c:	add    BYTE PTR [rax],al
   14000ac1e:	add    BYTE PTR [rax],al
   14000ac20:	rol    BYTE PTR [rax],0x0
   14000ac23:	add    BYTE PTR [rax],al
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	rex.RX push rdx
   14000ac29:	gs addr32 rex.R
   14000ac2c:	gs ins BYTE PTR es:[rdi],dx
   14000ac2e:	gs je  0x14000ac96
   14000ac31:	rex.WXB
   14000ac32:	gs jns 0x14000ac7a
   14000ac35:	js     0x14000ac8e
	...
   14000ac3f:	add    BYTE PTR [rax],ah
   14000ac41:	lods   eax,DWORD PTR ds:[rsi]
   14000ac42:	add    BYTE PTR [rax+0x1],al
   14000ac45:	add    BYTE PTR [rax],al
   14000ac47:	add    BYTE PTR [rax],al
   14000ac49:	add    BYTE PTR [rax],al
   14000ac4b:	cmp    bh,0xff
   14000ac4e:	(bad)  
   14000ac4f:	push   QWORD PTR [rax]
   14000ac51:	lods   eax,DWORD PTR ds:[rsi]
   14000ac52:	add    BYTE PTR [rax+0x1],al
   14000ac55:	add    BYTE PTR [rax],al
   14000ac57:	add    BYTE PTR [rcx],al
   14000ac59:	add    BYTE PTR [rax],al
   14000ac5b:	cmp    bh,0xff
   14000ac5e:	(bad)  
   14000ac5f:	inc    DWORD PTR [rax-0x53]
   14000ac62:	add    BYTE PTR [rax+0x1],al
   14000ac65:	add    BYTE PTR [rax],al
   14000ac67:	add    BYTE PTR [rdx],al
   14000ac69:	add    BYTE PTR [rax],al
   14000ac6b:	cmp    bh,0xff
   14000ac6e:	(bad)  
   14000ac6f:	call   QWORD PTR [rax-0x53]
   14000ac72:	add    BYTE PTR [rax+0x1],al
   14000ac75:	add    BYTE PTR [rax],al
   14000ac77:	add    BYTE PTR [rbx],al
   14000ac79:	add    BYTE PTR [rax],al
   14000ac7b:	cmp    bh,0xff
   14000ac7e:	(bad)  
   14000ac7f:	call   FWORD PTR [rax-0x53]
   14000ac82:	add    BYTE PTR [rax+0x1],al
   14000ac85:	add    BYTE PTR [rax],al
   14000ac87:	add    BYTE PTR [rax+rax*1],al
   14000ac8a:	add    BYTE PTR [rax-0x1],al
   14000ac90:	push   0x14000ad
   14000ac95:	add    BYTE PTR [rax],al
   14000ac97:	add    BYTE PTR [rsi],al
   14000ac99:	add    BYTE PTR [rax],al
   14000ac9b:	cmp    bh,0xff
   14000ac9e:	(bad)  
   14000ac9f:	(bad)  
   14000aca0:	js     0x14000ac4f
   14000aca2:	add    BYTE PTR [rax+0x1],al
   14000aca5:	add    BYTE PTR [rax],al
   14000aca7:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80acad
   14000acad:	(bad)  
   14000acae:	(bad)  
   14000acaf:	dec    DWORD PTR [rax+0x14000ad]
   14000acb5:	add    BYTE PTR [rax],al
   14000acb7:	add    BYTE PTR [rax],al
   14000acb9:	add    BYTE PTR [rax],al
   14000acbb:	cmp    bh,0xff
   14000acbe:	(bad)  
   14000acbf:	push   QWORD PTR [rax+0x14000ad]
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rcx],al
   14000acc9:	add    BYTE PTR [rax],al
   14000accb:	cmp    bh,0xff
   14000acce:	(bad)  
   14000accf:	(bad)  
   14000acd0:	fsubr  DWORD PTR [rbp+0x14000]
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	add    al,BYTE PTR [rax]
   14000acda:	add    BYTE PTR [rax-0x1],al
   14000ace0:	add    BYTE PTR [rsi+0x14000],ch
   14000ace6:	add    BYTE PTR [rax],al
   14000ace8:	add    eax,DWORD PTR [rax]
   14000acea:	add    BYTE PTR [rax-0x1],al
   14000acf0:	sbb    BYTE PTR [rsi+0x14000],ch
   14000acf6:	add    BYTE PTR [rax],al
   14000acf8:	add    al,0x0
   14000acfa:	add    BYTE PTR [rax-0x1],al
   14000ad00:	rex.W scas al,BYTE PTR es:[rdi]
   14000ad02:	add    BYTE PTR [rax+0x1],al
   14000ad05:	add    BYTE PTR [rax],al
   14000ad07:	add    BYTE PTR [rsi],al
   14000ad09:	add    BYTE PTR [rax],al
   14000ad0b:	cmp    bh,0xff
   14000ad0e:	(bad)  
   14000ad0f:	jmp    FWORD PTR [rax-0x52]
   14000ad12:	add    BYTE PTR [rax+0x1],al
   14000ad15:	add    BYTE PTR [rax],al
   14000ad17:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80ad1d
   14000ad1d:	(bad)  
   14000ad1e:	(bad)  
   14000ad1f:	dec    DWORD PTR [rax+0x0]
   14000ad22:	rex.WXB add BYTE PTR [r11+0x0],al
   14000ad26:	push   rdx
	...
   14000ad2f:	add    BYTE PTR [rax+0x0],cl
   14000ad32:	rex.WXB add BYTE PTR [r11+0x0],al
   14000ad36:	push   rbp
	...
   14000ad3f:	add    BYTE PTR [rax+0x0],cl
   14000ad42:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
	...
   14000ad4f:	add    BYTE PTR [rax+0x0],cl
   14000ad52:	rex.WXB add BYTE PTR [r13+0x0],dl
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ad5c:	push   rax
   14000ad5d:	add    BYTE PTR [rax+rax*1+0x0],al
   14000ad61:	add    BYTE PTR [rax],al
   14000ad63:	add    BYTE PTR [rax],al
   14000ad65:	add    BYTE PTR [rax],al
   14000ad67:	add    BYTE PTR [rax+0x0],cl
   14000ad6a:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   14000ad77:	add    BYTE PTR [rax+0x0],cl
   14000ad7a:	rex.WXB add BYTE PTR [r11+0x0],al
   14000ad7e:	rex.XB add BYTE PTR [r8],al
   14000ad81:	add    BYTE PTR [rax],al
   14000ad83:	add    BYTE PTR [rax],al
   14000ad85:	add    BYTE PTR [rax],al
   14000ad87:	add    BYTE PTR [rax+0x0],cl
   14000ad8a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000ad8e:	pop    rcx
   14000ad8f:	add    BYTE PTR [rdi+0x0],bl
   14000ad92:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000ad97:	add    BYTE PTR [rbx+0x0],dl
   14000ad9a:	push   rbx
   14000ad9b:	add    BYTE PTR [rbp+0x0],al
   14000ad9e:	push   rbx
   14000ad9f:	add    BYTE PTR [rdi+0x0],bl
   14000ada2:	push   rdx
   14000ada3:	add    BYTE PTR [rdi+0x0],cl
   14000ada6:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   14000adab:	add    BYTE PTR [rax],al
   14000adad:	add    BYTE PTR [rax],al
   14000adaf:	add    BYTE PTR [rax+0x0],cl
   14000adb2:	rex.WXB add BYTE PTR [r13+0x0],al
   14000adb6:	pop    rcx
   14000adb7:	add    BYTE PTR [rdi+0x0],bl
   14000adba:	rex.XB add BYTE PTR [r13+0x0],dl
   14000adbe:	push   rdx
   14000adbf:	add    BYTE PTR [rdx+0x0],dl
   14000adc2:	add    BYTE PTR [r14+0x0],r9b
   14000adc6:	push   rsp
   14000adc7:	add    BYTE PTR [rdi+0x0],bl
   14000adca:	push   rbp
   14000adcb:	add    BYTE PTR [rbx+0x0],dl
   14000adce:	add    BYTE PTR [r10+0x0],r10b
   14000add2:	add    BYTE PTR [rax],al
   14000add4:	add    BYTE PTR [rax],al
   14000add6:	add    BYTE PTR [rax],al
   14000add8:	rex.W add BYTE PTR [rbx+0x0],cl
   14000addc:	add    BYTE PTR [r9+0x0],r11b
   14000ade0:	pop    rdi
   14000ade1:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000ade5:	add    BYTE PTR [rbx+0x0],al
   14000ade8:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000aded:	add    BYTE PTR [rbp+0x0],cl
   14000adf0:	add    BYTE PTR [r11+0x0],al
   14000adf4:	rex.W add BYTE PTR [rcx+0x0],cl
   14000adf8:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000adfc:	add    BYTE PTR [rax],al
   14000adfe:	add    BYTE PTR [rax],al
   14000ae00:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ae04:	add    BYTE PTR [r9+0x0],r11b
   14000ae08:	pop    rdi
   14000ae09:	add    BYTE PTR [rbp+0x0],dl
   14000ae0c:	push   rbx
   14000ae0d:	add    BYTE PTR [rbp+0x0],al
   14000ae10:	push   rdx
   14000ae11:	add    BYTE PTR [rbx+0x0],dl
   14000ae14:	add    BYTE PTR [rax],al
   14000ae16:	add    BYTE PTR [rax],al
   14000ae18:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ae1c:	add    BYTE PTR [r9+0x0],r11b
   14000ae20:	pop    rdi
   14000ae21:	add    BYTE PTR [rax+0x0],dl
   14000ae24:	add    BYTE PTR [r10+0x0],r10b
   14000ae28:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000ae2c:	push   rdx
   14000ae2d:	add    BYTE PTR [rbp+0x0],cl
   14000ae30:	add    BYTE PTR [r14+0x0],cl
   14000ae34:	rex.XB add BYTE PTR [r13+0x0],al
   14000ae38:	pop    rdi
   14000ae39:	add    BYTE PTR [rax+rax*1+0x41],al
   14000ae3d:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000ae41:	add    BYTE PTR [rax],al
   14000ae43:	add    BYTE PTR [rax],al
   14000ae45:	add    BYTE PTR [rax],al
   14000ae47:	add    BYTE PTR [rax+0x0],cl
   14000ae4a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000ae4e:	pop    rcx
   14000ae4f:	add    BYTE PTR [rdi+0x0],bl
   14000ae52:	add    BYTE PTR [rcx+0x0],r11b
   14000ae56:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000ae5a:	add    BYTE PTR [rcx+0x0],r8b
   14000ae5e:	push   rsp
   14000ae5f:	add    BYTE PTR [rcx+0x0],al
   14000ae62:	add    BYTE PTR [rax],al
   14000ae64:	add    BYTE PTR [rax],al
   14000ae66:	add    BYTE PTR [rax],al
   14000ae68:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ae6c:	add    BYTE PTR [r9+0x0],r11b
   14000ae70:	pop    rdi
   14000ae71:	add    BYTE PTR [rbx+0x0],al
   14000ae74:	push   rbp
   14000ae75:	add    BYTE PTR [rdx+0x0],dl
   14000ae78:	push   rdx
   14000ae79:	add    BYTE PTR [rbp+0x0],al
   14000ae7c:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   14000ae81:	add    BYTE PTR [rbx+0x0],al
   14000ae84:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000ae88:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000ae8c:	rex.RXB add BYTE PTR [r8],r8b
	...
   14000ae97:	add    BYTE PTR [rcx+0x0],al
   14000ae9a:	push   rax
   14000ae9b:	add    BYTE PTR [rax+0x0],dl
   14000ae9e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    BYTE PTR [rax-0x3e],bh
   14000aeaa:	add    BYTE PTR [rax+0x1],al
   14000aead:	add    BYTE PTR [rax],al
   14000aeaf:	add    al,bh
   14000aeb1:	xor    eax,0x14000
   14000aeb6:	add    BYTE PTR [rax],al
   14000aeb8:	add    BYTE PTR [rsi],dh
   14000aeba:	add    BYTE PTR [rax+0x1],al
   14000aebd:	add    BYTE PTR [rax],al
   14000aebf:	add    BYTE PTR [rax-0x78],dh
   14000aec2:	add    BYTE PTR [rax+0x1],al
   14000aec5:	add    BYTE PTR [rax],al
   14000aec7:	add    al,dh
   14000aec9:	cmp    al,0x0
   14000aecb:	rex add DWORD PTR [rax],eax
   14000aece:	add    BYTE PTR [rax],al
   14000aed0:	loopne 0x14000af05
   14000aed2:	add    BYTE PTR [rax+0x1],al
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rax],cl
   14000aed9:	add    BYTE PTR ss:[rax+0x1],al
   14000aedd:	add    BYTE PTR [rax],al
   14000aedf:	add    BYTE PTR [rdx],ah
   14000aee1:	add    eax,0x41993
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	sbb    cl,cl
	...
   14000aef2:	add    BYTE PTR [rax],al
   14000aef4:	or     eax,DWORD PTR [rax]
   14000aef6:	add    BYTE PTR [rax],al
   14000aef8:	cmp    cl,cl
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	rex.W add BYTE PTR [rax],al
   14000aeff:	add    BYTE PTR [rax],al
   14000af01:	add    BYTE PTR [rax],al
   14000af03:	add    BYTE PTR [rcx],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rip+0x9000a00],cl        # 0x14900b90d
   14000af0d:	add    BYTE PTR [rbp+0x0],bh
   14000af10:	or     eax,0x7d000a00
   14000af15:	add    BYTE PTR [rip+0xa00],cl        # 0x14000b91b
   14000af1b:	add    BYTE PTR [rax],al
   14000af1d:	add    BYTE PTR [rax],al
   14000af1f:	add    BYTE PTR [rax+0x0],cl
   14000af22:	rex.WXB add BYTE PTR [r11+0x0],al
   14000af26:	push   rbp
   14000af27:	add    BYTE PTR [rip+0x7b000a00],cl        # 0x1bb00b92d
   14000af2d:	add    BYTE PTR [rcx],cl
   14000af2f:	add    BYTE PTR [rbx+0x0],dl
   14000af32:	outs   dx,DWORD PTR ds:[rsi]
   14000af33:	add    BYTE PTR [rsi+0x0],ah
   14000af36:	je     0x14000af38
   14000af38:	ja     0x14000af3a
   14000af3a:	(bad)  
   14000af3b:	add    BYTE PTR [rdx+0x0],dh
   14000af3e:	add    BYTE PTR gs:[rip+0x9000a00],cl        # 0x14900b945
   14000af45:	add    BYTE PTR [rbx+0x0],bh
   14000af48:	or     eax,0x9000a00
   14000af4d:	add    BYTE PTR [rcx],cl
   14000af4f:	add    BYTE PTR [rbx+0x0],al
   14000af52:	ins    BYTE PTR es:[rdi],dx
   14000af53:	add    BYTE PTR [rcx+0x0],ah
   14000af56:	jae    0x14000af58
   14000af58:	jae    0x14000af5a
   14000af5a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000af5e:	add    BYTE PTR [rax],al
   14000af60:	and    al,BYTE PTR [rip+0x61993]        # 0x14006c8f9
   14000af66:	add    BYTE PTR [rax],al
   14000af68:	or     al,0xca
   14000af6a:	add    BYTE PTR [rax],al
   14000af6c:	add    al,BYTE PTR [rax]
   14000af6e:	add    BYTE PTR [rax],al
   14000af70:	mov    esp,0xa0000c9
   14000af75:	add    BYTE PTR [rax],al
   14000af77:	add    BYTE PTR [rdx+rcx*8],bh
   14000af7a:	add    BYTE PTR [rax],al
   14000af7c:	push   rax
   14000af7d:	add    BYTE PTR [rax],al
   14000af7f:	add    BYTE PTR [rax],al
   14000af81:	add    BYTE PTR [rax],al
   14000af83:	add    BYTE PTR [rcx],al
	...
   14000af8d:	add    BYTE PTR [rax],al
   14000af8f:	add    BYTE PTR [rdx],ah
   14000af91:	add    eax,0x11993
   14000af96:	add    BYTE PTR [rax],al
   14000af98:	test   al,0xca
	...
   14000afa2:	add    BYTE PTR [rax],al
   14000afa4:	add    eax,DWORD PTR [rax]
   14000afa6:	add    BYTE PTR [rax],al
   14000afa8:	mov    al,0xca
   14000afaa:	add    BYTE PTR [rax],al
   14000afac:	and    BYTE PTR [rax],al
   14000afae:	add    BYTE PTR [rax],al
   14000afb0:	add    BYTE PTR [rax],al
   14000afb2:	add    BYTE PTR [rax],al
   14000afb4:	add    DWORD PTR [rax],eax
	...
   14000afbe:	add    BYTE PTR [rax],al
   14000afc0:	and    al,BYTE PTR [rip+0x61993]        # 0x14006c959
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	rex.WR retf 
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	add    al,BYTE PTR [rax]
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	cld    
   14000afd1:	retf   0x0
   14000afd4:	or     al,BYTE PTR [rax]
   14000afd6:	add    BYTE PTR [rax],al
   14000afd8:	jl     0x14000afa5
   14000afda:	add    BYTE PTR [rax],al
   14000afdc:	(bad)  
   14000afdd:	add    BYTE PTR [rax],al
   14000afdf:	add    BYTE PTR [rax],al
   14000afe1:	add    BYTE PTR [rax],al
   14000afe3:	add    BYTE PTR [rcx],al
	...
   14000afed:	add    BYTE PTR [rax],al
   14000afef:	add    BYTE PTR [rdx],ah
   14000aff1:	add    eax,0x21993
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	call   0x14000b0c8
   14000affd:	add    BYTE PTR [rax],al
   14000afff:	add    BYTE PTR [rax],al
   14000b001:	add    BYTE PTR [rax],al
   14000b003:	add    BYTE PTR [rip+0xfffffffff8000000],cl        # 0x13800b009
   14000b009:	retf   
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	mov    eax,0x0
   14000b011:	add    BYTE PTR [rax],al
   14000b013:	add    BYTE PTR [rcx],al
	...
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rdx],ah
   14000b021:	add    eax,0x41993
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	fmul   st,st(4)
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	add    DWORD PTR [rax],eax
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	mov    al,0xcc
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	or     BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	clc    
   14000b039:	int3   
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	pop    rax
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax],al
   14000b041:	add    BYTE PTR [rax],al
   14000b043:	add    BYTE PTR [rcx],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rdx+0x0],dl
   14000b04a:	add    BYTE PTR [r15+0x0],r8b
   14000b04e:	rex.WB add BYTE PTR [r11+0x0],dl
   14000b052:	push   rsp
   14000b053:	add    BYTE PTR [rdx+0x0],dl
   14000b056:	pop    rcx
	...
   14000b05f:	add    BYTE PTR [rbp+0x0],cl
   14000b062:	outs   dx,DWORD PTR ds:[rsi]
   14000b063:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b067:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b06b:	add    BYTE PTR [rdi+0x0],bl
   14000b06e:	push   rdx
   14000b06f:	add    BYTE PTR [rcx+0x0],ah
   14000b072:	ja     0x14000b074
   14000b074:	add    BYTE PTR [rax],al
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000b07c:	add    BYTE PTR fs:[rbp+0x0],dh
   14000b080:	ins    BYTE PTR es:[rdi],dx
   14000b081:	add    BYTE PTR [rbp+0x0],ah
	...
   14000b090:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ca29
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	lock mov DWORD PTR [rax],0x0
   14000b09f:	add    BYTE PTR [rax],al
   14000b0a1:	add    BYTE PTR [rax],al
   14000b0a3:	add    BYTE PTR [rbx],al
   14000b0a5:	add    BYTE PTR [rax],al
   14000b0a7:	add    BYTE PTR [rbp+rcx*8+0x0],bh
   14000b0ab:	add    BYTE PTR [rax],ah
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rax],al
   14000b0b1:	add    BYTE PTR [rax],al
   14000b0b3:	add    BYTE PTR [rcx],al
	...
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rbx+0x0],dl
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	rex.WRB add BYTE PTR [r8],r8b
   14000b0c7:	add    al,al
   14000b0c9:	mov    al,0x0
   14000b0cb:	rex add DWORD PTR [rax],eax
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	(bad)  
   14000b0d1:	mov    al,0x0
   14000b0d3:	rex add DWORD PTR [rax],eax
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	add    BYTE PTR [rax],r8b
   14000b0db:	add    BYTE PTR [rdx+0x0],al
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	fdiv   DWORD PTR [rax+0x14000]
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	fdiv   QWORD PTR [rax+0x14000]
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	push   rsi
   14000b0f1:	add    BYTE PTR [rcx+0x0],ah
   14000b0f4:	ins    BYTE PTR es:[rdi],dx
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	add    al,dh
   14000b0f9:	mov    al,0x0
   14000b0fb:	rex add DWORD PTR [rax],eax
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000b104:	jb     0x14000b106
   14000b106:	movsxd eax,DWORD PTR [rax]
   14000b108:	add    BYTE PTR gs:[rdx+0x0],dl
   14000b10c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b110:	outs   dx,DWORD PTR ds:[rsi]
   14000b111:	add    BYTE PTR [rsi+0x0],dh
   14000b114:	add    BYTE PTR gs:[rax],al
   14000b117:	add    BYTE PTR [rax],al
   14000b119:	mov    cl,0x0
   14000b11b:	rex add DWORD PTR [rax],eax
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000b124:	push   rdx
   14000b125:	add    BYTE PTR [rbp+0x0],ah
   14000b128:	ins    DWORD PTR es:[rdi],dx
   14000b129:	add    BYTE PTR [rdi+0x0],ch
   14000b12c:	jbe    0x14000b12e
   14000b12e:	add    BYTE PTR gs:[rax],al
   14000b131:	add    BYTE PTR [rax],al
   14000b133:	add    BYTE PTR [rax],al
   14000b135:	add    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rax],ah
   14000b139:	mov    cl,0x0
   14000b13b:	rex add DWORD PTR [rax],eax
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	add    BYTE PTR [rbp+0x0],r12b
   14000b144:	ins    BYTE PTR es:[rdi],dx
   14000b145:	add    BYTE PTR [rbp+0x0],ah
   14000b148:	je     0x14000b14a
   14000b14a:	add    BYTE PTR gs:[rax],al
   14000b14d:	add    BYTE PTR [rax],al
   14000b14f:	add    BYTE PTR [rax-0x4f],al
   14000b152:	add    BYTE PTR [rax+0x1],al
   14000b155:	add    BYTE PTR [rax],al
   14000b157:	add    BYTE PTR [rcx+0x0],al
   14000b15a:	jo     0x14000b15c
   14000b15c:	jo     0x14000b15e
   14000b15e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b163:	add    BYTE PTR [rax],al
   14000b165:	add    BYTE PTR [rax],al
   14000b167:	add    BYTE PTR [rbx+0x0],al
   14000b16a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000b16e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b173:	add    BYTE PTR [rax],dh
   14000b175:	add    BYTE PTR [rax],al
   14000b177:	add    BYTE PTR [rbx+0x0],al
   14000b17a:	outs   dx,DWORD PTR ds:[rsi]
   14000b17b:	add    BYTE PTR [rbp+0x0],ch
   14000b17e:	jo     0x14000b180
   14000b180:	outs   dx,DWORD PTR ds:[rsi]
   14000b181:	add    BYTE PTR [rsi+0x0],ch
   14000b184:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b188:	je     0x14000b18a
   14000b18a:	and    BYTE PTR [rax],al
   14000b18c:	rex.XB add BYTE PTR [r9+0x0],spl
   14000b190:	je     0x14000b192
   14000b192:	add    BYTE PTR gs:[rdi+0x0],ah
   14000b196:	outs   dx,DWORD PTR ds:[rsi]
   14000b197:	add    BYTE PTR [rdx+0x0],dh
   14000b19a:	imul   eax,DWORD PTR [rax],0x730065
   14000b1a0:	add    BYTE PTR [rax],al
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	xor    BYTE PTR [rax],al
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b1ac:	ins    BYTE PTR es:[rdi],dx
   14000b1ad:	add    BYTE PTR [rbp+0x0],ah
   14000b1b0:	push   rsp
   14000b1b1:	add    BYTE PTR [rcx+0x0],bh
   14000b1b4:	jo     0x14000b1b6
   14000b1b6:	add    BYTE PTR gs:[rax],al
   14000b1b9:	add    BYTE PTR [rax],al
   14000b1bb:	add    BYTE PTR [rax],dh
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    BYTE PTR [rcx+0x0],cl
   14000b1c2:	outs   dx,BYTE PTR ds:[rsi]
   14000b1c3:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b1c7:	add    BYTE PTR [rdx+0x0],dh
   14000b1ca:	data16 add BYTE PTR [rcx+0x0],ah
   14000b1ce:	movsxd eax,DWORD PTR [rax]
   14000b1d0:	add    BYTE PTR gs:[rax],al
   14000b1d3:	add    BYTE PTR [rax],dh
   14000b1d5:	add    BYTE PTR [rax],al
   14000b1d7:	add    BYTE PTR [rax+0x0],cl
   14000b1da:	(bad)  
   14000b1db:	add    BYTE PTR [rdx+0x0],dh
   14000b1de:	add    BYTE PTR fs:[rdi+0x0],dh
   14000b1e2:	(bad)  
   14000b1e3:	add    BYTE PTR [rdx+0x0],dh
   14000b1e6:	add    BYTE PTR gs:[rax],al
   14000b1e9:	add    BYTE PTR [rax],al
   14000b1eb:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000b1ef:	add    BYTE PTR [rbp+0x0],cl
   14000b1f2:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000b200:	push   rbx
   14000b201:	add    BYTE PTR [rcx+0x0],al
   14000b204:	rex.WRB add BYTE PTR [r8],r8b
   14000b207:	add    BYTE PTR [rbx+0x0],dl
   14000b20a:	add    BYTE PTR [r11+0x0],r8b
   14000b20e:	push   rbp
   14000b20f:	add    BYTE PTR [rdx+0x0],dl
   14000b212:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000b21f:	add    BYTE PTR [rbx+0x0],dl
   14000b222:	pop    rcx
   14000b223:	add    BYTE PTR [rbx+0x0],dl
   14000b226:	push   rsp
   14000b227:	add    BYTE PTR [rbp+0x0],al
   14000b22a:	rex.WRB add BYTE PTR [r8],r8b
   14000b22d:	add    BYTE PTR [rax],al
   14000b22f:	add    BYTE PTR [rbx+0x0],dl
   14000b232:	outs   dx,DWORD PTR ds:[rsi]
   14000b233:	add    BYTE PTR [rsi+0x0],ah
   14000b236:	je     0x14000b238
   14000b238:	ja     0x14000b23a
   14000b23a:	(bad)  
   14000b23b:	add    BYTE PTR [rdx+0x0],dh
   14000b23e:	add    BYTE PTR gs:[rax],al
   14000b241:	add    BYTE PTR [rax],al
   14000b243:	add    BYTE PTR [rax],al
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000b24b:	add    BYTE PTR [rax+0x0],dh
   14000b24e:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000b253:	add    BYTE PTR [rdx+0x0],ah
	...
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000b264:	(bad)  
   14000b265:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b269:	add    BYTE PTR [rsi+0x0],ah
   14000b26c:	(bad)  
   14000b26d:	add    BYTE PTR [rcx+0x0],ch
   14000b270:	ins    BYTE PTR es:[rdi],dx
   14000b271:	add    BYTE PTR [rbp+0x0],ah
   14000b274:	add    BYTE PTR fs:[rax],ah
   14000b277:	add    BYTE PTR [rcx+0x0],ch
   14000b27a:	outs   dx,BYTE PTR ds:[rsi]
   14000b27b:	add    BYTE PTR [rax],ah
   14000b27d:	add    BYTE PTR [rip+0x20007300],ah        # 0x160012583
   14000b283:	add    BYTE PTR [rcx+0x0],ah
   14000b286:	je     0x14000b288
   14000b288:	and    BYTE PTR [rax],al
   14000b28a:	data16 add BYTE PTR [rbp+0x0],dh
   14000b28e:	outs   dx,BYTE PTR ds:[rsi]
   14000b28f:	add    BYTE PTR [rbx+0x0],ah
   14000b292:	je     0x14000b294
   14000b294:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b29a:	and    BYTE PTR [rax],al
   14000b29c:	and    eax,0x7300
	...
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000b2b3:	add    BYTE PTR [rcx+0x0],ah
   14000b2b6:	add    BYTE PTR fs:[rax],ah
   14000b2b9:	add    BYTE PTR [rsi+0x0],ah
   14000b2bc:	(bad)  
   14000b2bd:	add    BYTE PTR [rcx+0x0],ch
   14000b2c0:	ins    BYTE PTR es:[rdi],dx
   14000b2c1:	add    BYTE PTR [rbp+0x0],ah
   14000b2c4:	add    BYTE PTR fs:[rax],ah
   14000b2c7:	add    BYTE PTR [rcx+0x0],ch
   14000b2ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b2cb:	add    BYTE PTR [rax],ah
   14000b2cd:	add    BYTE PTR [rip+0x20007300],ah        # 0x1600125d3
   14000b2d3:	add    BYTE PTR [rcx+0x0],ah
   14000b2d6:	je     0x14000b2d8
   14000b2d8:	and    BYTE PTR [rax],al
   14000b2da:	data16 add BYTE PTR [rbp+0x0],dh
   14000b2de:	outs   dx,BYTE PTR ds:[rsi]
   14000b2df:	add    BYTE PTR [rbx+0x0],ah
   14000b2e2:	je     0x14000b2e4
   14000b2e4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b2ea:	and    BYTE PTR [rax],al
   14000b2ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b2ed:	add    BYTE PTR [rdx+0x0],dh
   14000b2f0:	add    BYTE PTR fs:[rbp+0x0],ah
   14000b2f4:	jb     0x14000b2f6
   14000b2f6:	cmp    al,BYTE PTR [rax]
   14000b2f8:	and    eax,0x6400
   14000b2fd:	add    BYTE PTR [rax],al
   14000b2ff:	add    BYTE PTR [rcx],dh
   14000b301:	add    BYTE PTR [rcx],dh
   14000b303:	add    BYTE PTR [rsi],ch
   14000b305:	add    BYTE PTR [rax],dh
   14000b307:	add    BYTE PTR [rsi],ch
   14000b309:	add    BYTE PTR [rax],dh
   14000b30b:	add    BYTE PTR [rax],al
   14000b30d:	add    BYTE PTR [rax],al
   14000b30f:	add    BYTE PTR [rcx],dh
   14000b311:	add    BYTE PTR [rax],dh
   14000b313:	add    BYTE PTR [rsi],ch
   14000b315:	add    BYTE PTR [rsi],dh
   14000b317:	add    BYTE PTR [rax],dh
   14000b319:	add    BYTE PTR [rsi],ch
   14000b31b:	add    BYTE PTR [rdx],dh
   14000b31d:	add    BYTE PTR [rax],al
   14000b31f:	add    BYTE PTR [rcx+0x73],cl
   14000b322:	push   rdi
   14000b323:	outs   dx,DWORD PTR ds:[rsi]
   14000b324:	ja     0x14000b35c
   14000b326:	xor    al,0x50
   14000b328:	jb     0x14000b399
   14000b32a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b32d:	jae    0x14000b32f
   14000b32f:	add    BYTE PTR [rbx+0x0],ch
   14000b332:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b336:	outs   dx,BYTE PTR ds:[rsi]
   14000b337:	add    BYTE PTR [rbp+0x0],ah
   14000b33a:	ins    BYTE PTR es:[rdi],dx
   14000b33b:	add    BYTE PTR [rbx],dh
   14000b33d:	add    BYTE PTR [rdx],dh
	...
   14000b347:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000b34b:	add    BYTE PTR [rcx+0x0],bh
   14000b34e:	jae    0x14000b350
   14000b350:	je     0x14000b352
   14000b352:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b356:	xor    eax,DWORD PTR [rax]
   14000b358:	xor    al,BYTE PTR [rax]
   14000b35a:	pop    rsp
   14000b35b:	add    BYTE PTR [rdx+0x0],ch
   14000b35e:	(bad)  
   14000b35f:	add    BYTE PTR [rsi+0x0],dh
   14000b362:	(bad)  
   14000b363:	add    BYTE PTR [rdi+0x0],dh
   14000b366:	jae    0x14000b368
   14000b368:	add    BYTE PTR cs:[rbp+0x0],ah
   14000b36c:	js     0x14000b36e
   14000b36e:	add    BYTE PTR gs:[rax],al
   14000b371:	add    BYTE PTR [rax],al
   14000b373:	add    BYTE PTR [rax],al
   14000b375:	add    BYTE PTR [rax],al
   14000b377:	add    BYTE PTR [rdi+0x6f],dl
   14000b37a:	ja     0x14000b3b2
   14000b37c:	xor    al,0x44
   14000b37e:	imul   esi,DWORD PTR [rbx+0x61],0x57656c62
   14000b385:	outs   dx,DWORD PTR ds:[rsi]
   14000b386:	ja     0x14000b3be
   14000b388:	xor    al,0x46
   14000b38a:	jae    0x14000b3de
   14000b38c:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f697463
   14000b395:	outs   dx,BYTE PTR ds:[rsi]
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	imul   eax,DWORD PTR [rax],0x65
   14000b39b:	add    BYTE PTR [rdx+0x0],dh
   14000b39e:	outs   dx,BYTE PTR ds:[rsi]
   14000b39f:	add    BYTE PTR [rbp+0x0],ah
   14000b3a2:	ins    BYTE PTR es:[rdi],dx
   14000b3a3:	add    BYTE PTR [rbx],dh
   14000b3a5:	add    BYTE PTR [rdx],dh
	...
   14000b3af:	add    BYTE PTR [rdi+0x6f],dl
   14000b3b2:	ja     0x14000b3ea
   14000b3b4:	xor    al,0x52
   14000b3b6:	gs jbe 0x14000b41e
   14000b3b9:	jb     0x14000b42f
   14000b3bb:	push   rdi
   14000b3bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b3bd:	ja     0x14000b3f5
   14000b3bf:	xor    al,0x46
   14000b3c1:	jae    0x14000b415
   14000b3c3:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f697463
   14000b3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000b3cd:	add    BYTE PTR [rax],al
   14000b3cf:	add    BYTE PTR [rbx+0x0],ch
   14000b3d2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b3d6:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d7:	add    BYTE PTR [rbp+0x0],ah
   14000b3da:	ins    BYTE PTR es:[rdi],dx
   14000b3db:	add    BYTE PTR [rbx],dh
   14000b3dd:	add    BYTE PTR [rdx],dh
	...
   14000b3e7:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000b3eb:	add    BYTE PTR [rcx+0x0],bh
   14000b3ee:	jae    0x14000b3f0
   14000b3f0:	push   rdi
   14000b3f1:	add    BYTE PTR [rdi+0x0],ch
   14000b3f4:	ja     0x14000b3f6
   14000b3f6:	add    BYTE PTR ss:[rax+rax*1],dh
   14000b3fa:	pop    rsp
   14000b3fb:	add    BYTE PTR [rdx+0x0],ch
   14000b3fe:	(bad)  
   14000b3ff:	add    BYTE PTR [rsi+0x0],dh
   14000b402:	(bad)  
   14000b403:	add    BYTE PTR [rdi+0x0],dh
   14000b406:	jae    0x14000b408
   14000b408:	add    BYTE PTR cs:[rbp+0x0],ah
   14000b40c:	js     0x14000b40e
   14000b40e:	add    BYTE PTR gs:[rax],al
	...
   14000b41d:	add    BYTE PTR [rax],al
   14000b41f:	add    BYTE PTR [rbp+0x0],al
   14000b422:	jb     0x14000b424
   14000b424:	jb     0x14000b426
   14000b426:	outs   dx,DWORD PTR ds:[rsi]
   14000b427:	add    BYTE PTR [rdx+0x0],dh
   14000b42a:	cmp    al,BYTE PTR [rax]
   14000b42c:	and    eax,0x38003000
   14000b431:	add    BYTE PTR [rax+0x0],bh
   14000b434:	and    BYTE PTR [rax],al
   14000b436:	imul   eax,DWORD PTR [rax],0x20006e
   14000b43c:	push   rbx
   14000b43d:	add    BYTE PTR [rax+0x0],cl
   14000b440:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000b444:	je     0x14000b446
   14000b446:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000b44a:	ins    BYTE PTR es:[rdi],dx
   14000b44b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b44f:	add    BYTE PTR [rdx+0x0],dh
   14000b452:	push   rax
   14000b453:	add    BYTE PTR [rcx+0x0],ah
   14000b456:	je     0x14000b458
   14000b458:	push   0x78004500
   14000b45d:	add    BYTE PTR [rax],ch
   14000b45f:	add    BYTE PTR [rsi+0x0],al
   14000b462:	rex.WRXB add BYTE PTR [r8+r8*1+0x44],r9b
   14000b467:	add    BYTE PTR [rbp+0x0],al
   14000b46a:	push   rdx
   14000b46b:	add    BYTE PTR [rcx+0x0],cl
   14000b46e:	add    BYTE PTR [rdi+0x0],r11b
   14000b472:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000b476:	movsxd eax,DWORD PTR [rax]
   14000b478:	(bad)  
   14000b479:	add    BYTE PTR [rax+rax*1+0x41],ch
   14000b47d:	add    BYTE PTR [rax+0x0],dh
   14000b480:	jo     0x14000b482
   14000b482:	add    BYTE PTR [rcx+0x0],r12b
   14000b486:	je     0x14000b488
   14000b488:	(bad)  
   14000b489:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000b48d:	add    BYTE PTR [rdi+0x0],dh
   14000b490:	sub    al,0x0
   14000b492:	and    BYTE PTR [rax],al
   14000b494:	xor    BYTE PTR [rax],al
   14000b496:	sub    al,0x0
   14000b498:	and    BYTE PTR [rax],al
   14000b49a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000b49e:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   14000b4a3:	add    BYTE PTR [rax],ah
   14000b4a5:	add    BYTE PTR [rax+0x0],dh
   14000b4a8:	push   rax
   14000b4a9:	add    BYTE PTR [rcx+0x0],ah
   14000b4ac:	je     0x14000b4ae
   14000b4ae:	push   0x20002c00
   14000b4b3:	add    BYTE PTR [rbp+0x0],cl
   14000b4b6:	add    BYTE PTR [r8+0x0],bl
   14000b4ba:	pop    rdi
   14000b4bb:	add    BYTE PTR [rax+0x0],dl
   14000b4be:	add    BYTE PTR [r8+rax*1+0x48],dl
   14000b4c3:	add    BYTE PTR [rcx],ch
   14000b4c5:	add    BYTE PTR [rax],al
   14000b4c7:	add    BYTE PTR [rbx+0x0],al
   14000b4ca:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000b4ce:	and    BYTE PTR [rax],al
   14000b4d0:	add    BYTE PTR [r10+0x0],r14b
   14000b4d4:	jb     0x14000b4d6
   14000b4d6:	outs   dx,DWORD PTR ds:[rsi]
   14000b4d7:	add    BYTE PTR [rdx+0x0],dh
   14000b4da:	cmp    al,BYTE PTR [rax]
   14000b4dc:	and    eax,0x38003000
   14000b4e1:	add    BYTE PTR [rax+0x0],bh
   14000b4e4:	and    BYTE PTR [rax],al
   14000b4e6:	and    eax,0x7300
   14000b4eb:	add    BYTE PTR [rax],al
   14000b4ed:	add    BYTE PTR [rax],al
   14000b4ef:	add    BYTE PTR [rbp+0x0],al
   14000b4f2:	jb     0x14000b4f4
   14000b4f4:	jb     0x14000b4f6
   14000b4f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b4f7:	add    BYTE PTR [rdx+0x0],dh
   14000b4fa:	cmp    al,BYTE PTR [rax]
   14000b4fc:	and    eax,0x38003000
   14000b501:	add    BYTE PTR [rax+0x0],bh
   14000b504:	and    BYTE PTR [rax],al
   14000b506:	imul   eax,DWORD PTR [rax],0x20006e
   14000b50c:	push   rbx
   14000b50d:	add    BYTE PTR [rax+0x0],cl
   14000b510:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000b514:	je     0x14000b516
   14000b516:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000b51a:	ins    BYTE PTR es:[rdi],dx
   14000b51b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b51f:	add    BYTE PTR [rdx+0x0],dh
   14000b522:	push   rax
   14000b523:	add    BYTE PTR [rcx+0x0],ah
   14000b526:	je     0x14000b528
   14000b528:	push   0x28005700
   14000b52d:	add    BYTE PTR [rsi+0x0],cl
   14000b530:	push   rbp
   14000b531:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000b535:	add    BYTE PTR [rax+rax*1],ch
   14000b538:	and    BYTE PTR [rax],al
   14000b53a:	rex.XB add BYTE PTR [r11+0x0],dl
   14000b53e:	rex.WB add BYTE PTR [r8+rax*1+0x4c],al
   14000b543:	add    BYTE PTR [rdi+0x0],bl
   14000b546:	add    BYTE PTR [r8+0x0],dl
   14000b54a:	push   rax
   14000b54b:	add    BYTE PTR [rax+rax*1+0x41],al
   14000b54f:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000b553:	add    BYTE PTR [rax+rax*1],ch
   14000b556:	and    BYTE PTR [rax],al
   14000b558:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000b55c:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   14000b561:	add    BYTE PTR [rax],ah
   14000b563:	add    BYTE PTR [rax],dh
   14000b565:	add    BYTE PTR [rax+rax*1],ch
   14000b568:	and    BYTE PTR [rax],al
   14000b56a:	jo     0x14000b56c
   14000b56c:	push   rax
   14000b56d:	add    BYTE PTR [rcx+0x0],ah
   14000b570:	je     0x14000b572
   14000b572:	push   0x2900
   14000b577:	add    BYTE PTR [rbx+0x0],al
   14000b57a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000b57e:	and    BYTE PTR [rax],al
   14000b580:	add    BYTE PTR [r10+0x0],r14b
   14000b584:	jb     0x14000b586
   14000b586:	outs   dx,DWORD PTR ds:[rsi]
   14000b587:	add    BYTE PTR [rdx+0x0],dh
   14000b58a:	cmp    al,BYTE PTR [rax]
   14000b58c:	and    eax,0x38003000
   14000b591:	add    BYTE PTR [rax+0x0],bh
   14000b594:	and    BYTE PTR [rax],al
   14000b596:	and    eax,0x7300
   14000b59b:	add    BYTE PTR [rax],al
   14000b59d:	add    BYTE PTR [rax],al
   14000b59f:	add    BYTE PTR [rbp+0x0],al
   14000b5a2:	jb     0x14000b5a4
   14000b5a4:	jb     0x14000b5a6
   14000b5a6:	outs   dx,DWORD PTR ds:[rsi]
   14000b5a7:	add    BYTE PTR [rdx+0x0],dh
   14000b5aa:	cmp    al,BYTE PTR [rax]
   14000b5ac:	and    eax,0x38003000
   14000b5b1:	add    BYTE PTR [rax+0x0],bh
   14000b5b4:	and    BYTE PTR [rax],al
   14000b5b6:	imul   eax,DWORD PTR [rax],0x20006e
   14000b5bc:	push   rbx
   14000b5bd:	add    BYTE PTR [rax+0x0],cl
   14000b5c0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000b5c4:	je     0x14000b5c6
   14000b5c6:	push   rbx
   14000b5c7:	add    BYTE PTR [rax+0x0],dh
   14000b5ca:	add    BYTE PTR gs:[rbx+0x0],ah
   14000b5ce:	imul   eax,DWORD PTR [rax],0x6c0061
   14000b5d4:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000b5d8:	ins    BYTE PTR es:[rdi],dx
   14000b5d9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b5dd:	add    BYTE PTR [rdx+0x0],dh
   14000b5e0:	push   rax
   14000b5e1:	add    BYTE PTR [rcx+0x0],ah
   14000b5e4:	je     0x14000b5e6
   14000b5e6:	push   0x28005700
   14000b5eb:	add    BYTE PTR [rsi+0x0],cl
   14000b5ee:	push   rbp
   14000b5ef:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000b5f3:	add    BYTE PTR [rax+rax*1],ch
   14000b5f6:	and    BYTE PTR [rax],al
   14000b5f8:	jo     0x14000b5fa
   14000b5fa:	push   rax
   14000b5fb:	add    BYTE PTR [rcx+0x0],ah
   14000b5fe:	je     0x14000b600
   14000b600:	push   0x20002c00
   14000b605:	add    BYTE PTR [rbx+0x0],al
   14000b608:	push   rbx
   14000b609:	add    BYTE PTR [rcx+0x0],cl
   14000b60c:	add    BYTE PTR [rax+rax*1+0x5f],r9b
   14000b611:	add    BYTE PTR [rcx+0x0],al
   14000b614:	push   rax
   14000b615:	add    BYTE PTR [rax+0x0],dl
   14000b618:	add    BYTE PTR [rcx+0x0],r8b
   14000b61c:	push   rsp
   14000b61d:	add    BYTE PTR [rcx+0x0],al
   14000b620:	sub    al,0x0
   14000b622:	and    BYTE PTR [rax],al
   14000b624:	push   rsp
   14000b625:	add    BYTE PTR [rdx+0x0],dl
   14000b628:	push   rbp
   14000b629:	add    BYTE PTR [rbp+0x0],al
   14000b62c:	sub    DWORD PTR [rax],eax
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	rex.XB add BYTE PTR [r15+0x0],cl
   14000b634:	rex.WRB add BYTE PTR [r8],r12b
   14000b637:	add    BYTE PTR [rbp+0x0],al
   14000b63a:	jb     0x14000b63c
   14000b63c:	jb     0x14000b63e
   14000b63e:	outs   dx,DWORD PTR ds:[rsi]
   14000b63f:	add    BYTE PTR [rdx+0x0],dh
   14000b642:	cmp    al,BYTE PTR [rax]
   14000b644:	and    eax,0x38003000
   14000b649:	add    BYTE PTR [rax+0x0],bh
   14000b64c:	and    BYTE PTR [rax],al
   14000b64e:	and    eax,0x7300
	...
   14000b65f:	add    BYTE PTR [rbp+0x0],al
   14000b662:	jb     0x14000b664
   14000b664:	jb     0x14000b666
   14000b666:	outs   dx,DWORD PTR ds:[rsi]
   14000b667:	add    BYTE PTR [rdx+0x0],dh
   14000b66a:	cmp    al,BYTE PTR [rax]
   14000b66c:	and    eax,0x38003000
   14000b671:	add    BYTE PTR [rax+0x0],bh
   14000b674:	and    BYTE PTR [rax],al
   14000b676:	imul   eax,DWORD PTR [rax],0x20006e
   14000b67c:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000b680:	je     0x14000b682
   14000b682:	push   rbp
   14000b683:	add    BYTE PTR [rbx+0x0],dh
   14000b686:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b68a:	push   rax
   14000b68b:	add    BYTE PTR [rcx+0x0],ah
   14000b68e:	je     0x14000b690
   14000b690:	push   0x28005700
   14000b695:	add    BYTE PTR [rbx+0x0],dh
   14000b698:	jp     0x14000b69a
   14000b69a:	push   rax
   14000b69b:	add    BYTE PTR [rcx+0x0],ah
   14000b69e:	je     0x14000b6a0
   14000b6a0:	push   0x2900
   14000b6a5:	add    BYTE PTR [rax],al
   14000b6a7:	add    BYTE PTR [rbx+0x0],al
   14000b6aa:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000b6ae:	and    BYTE PTR [rax],al
   14000b6b0:	add    BYTE PTR [r10+0x0],r14b
   14000b6b4:	jb     0x14000b6b6
   14000b6b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b6b7:	add    BYTE PTR [rdx+0x0],dh
   14000b6ba:	cmp    al,BYTE PTR [rax]
   14000b6bc:	and    eax,0x38003000
   14000b6c1:	add    BYTE PTR [rax+0x0],bh
   14000b6c4:	and    BYTE PTR [rax],al
   14000b6c6:	and    eax,0x7300
   14000b6cb:	add    BYTE PTR [rax],al
   14000b6cd:	add    BYTE PTR [rax],al
   14000b6cf:	add    BYTE PTR [rbp+0x0],al
   14000b6d2:	jb     0x14000b6d4
   14000b6d4:	jb     0x14000b6d6
   14000b6d6:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d7:	add    BYTE PTR [rdx+0x0],dh
   14000b6da:	cmp    al,BYTE PTR [rax]
   14000b6dc:	and    eax,0x38003000
   14000b6e1:	add    BYTE PTR [rax+0x0],bh
   14000b6e4:	and    BYTE PTR [rax],al
   14000b6e6:	imul   eax,DWORD PTR [rax],0x20006e
   14000b6ec:	push   rbx
   14000b6ed:	add    BYTE PTR [rax+0x0],cl
   14000b6f0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14000b6f4:	je     0x14000b6f6
   14000b6f6:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000b6fa:	ins    BYTE PTR es:[rdi],dx
   14000b6fb:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b6ff:	add    BYTE PTR [rdx+0x0],dh
   14000b702:	push   rax
   14000b703:	add    BYTE PTR [rcx+0x0],ah
   14000b706:	je     0x14000b708
   14000b708:	push   0x78004500
   14000b70d:	add    BYTE PTR [rax],ch
   14000b70f:	add    BYTE PTR [rsi+0x0],al
   14000b712:	rex.WRXB add BYTE PTR [r8+r8*1+0x44],r9b
   14000b717:	add    BYTE PTR [rbp+0x0],al
   14000b71a:	push   rdx
   14000b71b:	add    BYTE PTR [rcx+0x0],cl
   14000b71e:	add    BYTE PTR [rdi+0x0],r11b
   14000b722:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000b726:	movsxd eax,DWORD PTR [rax]
   14000b728:	(bad)  
   14000b729:	add    BYTE PTR [rax+rax*1+0x41],ch
   14000b72d:	add    BYTE PTR [rax+0x0],dh
   14000b730:	jo     0x14000b732
   14000b732:	add    BYTE PTR [rcx+0x0],r12b
   14000b736:	je     0x14000b738
   14000b738:	(bad)  
   14000b739:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000b73d:	add    BYTE PTR [rdi+0x0],dh
   14000b740:	sub    al,0x0
   14000b742:	and    BYTE PTR [rax],al
   14000b744:	xor    BYTE PTR [rax],al
   14000b746:	sub    al,0x0
   14000b748:	and    BYTE PTR [rax],al
   14000b74a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000b74e:	rex.WR add BYTE PTR [rax+rax*1+0x2c],r9b
   14000b753:	add    BYTE PTR [rax],ah
   14000b755:	add    BYTE PTR [rbx+0x0],dh
   14000b758:	jp     0x14000b75a
   14000b75a:	push   rax
   14000b75b:	add    BYTE PTR [rcx+0x0],ah
   14000b75e:	je     0x14000b760
   14000b760:	push   0x20002c00
   14000b765:	add    BYTE PTR [rbp+0x0],cl
   14000b768:	add    BYTE PTR [r8+0x0],bl
   14000b76c:	pop    rdi
   14000b76d:	add    BYTE PTR [rax+0x0],dl
   14000b770:	add    BYTE PTR [r8+rax*1+0x48],dl
   14000b775:	add    BYTE PTR [rcx],ch
	...
   14000b77f:	add    BYTE PTR [rbx+0x0],al
   14000b782:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14000b786:	and    BYTE PTR [rax],al
   14000b788:	add    BYTE PTR [r10+0x0],r14b
   14000b78c:	jb     0x14000b78e
   14000b78e:	outs   dx,DWORD PTR ds:[rsi]
   14000b78f:	add    BYTE PTR [rdx+0x0],dh
   14000b792:	cmp    al,BYTE PTR [rax]
   14000b794:	and    eax,0x38003000
   14000b799:	add    BYTE PTR [rax+0x0],bh
   14000b79c:	and    BYTE PTR [rax],al
   14000b79e:	and    eax,0x7300
   14000b7a3:	add    BYTE PTR [rax],al
   14000b7a5:	add    BYTE PTR [rax],al
   14000b7a7:	add    BYTE PTR [rbx+0x0],dl
   14000b7aa:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000b7ae:	push   rsp
   14000b7af:	add    BYTE PTR [rdi+0x0],dl
   14000b7b2:	add    BYTE PTR [r10+0x0],dl
   14000b7b6:	add    BYTE PTR [r8],r8b
   14000b7b9:	add    BYTE PTR [rax],al
   14000b7bb:	add    BYTE PTR [rax],al
   14000b7bd:	add    BYTE PTR [rax],al
   14000b7bf:	add    BYTE PTR [rdx+0x0],cl
   14000b7c2:	(bad)  
   14000b7c3:	add    BYTE PTR [rsi+0x0],dh
   14000b7c6:	(bad)  
   14000b7c7:	add    BYTE PTR [rbx+0x0],dl
   14000b7ca:	outs   dx,DWORD PTR ds:[rsi]
   14000b7cb:	add    BYTE PTR [rsi+0x0],ah
   14000b7ce:	je     0x14000b7d0
	...
   14000b7d8:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000b7dc:	jbe    0x14000b7de
   14000b7de:	(bad)  
   14000b7df:	add    BYTE PTR [rax],ah
   14000b7e1:	add    BYTE PTR [rax+0x0],dl
   14000b7e4:	ins    BYTE PTR es:[rdi],dx
   14000b7e5:	add    BYTE PTR [rbp+0x0],dh
   14000b7e8:	add    BYTE PTR [eip+0x6e006900],ch        # 0x1ae0120ef
	...
   14000b7f7:	add    BYTE PTR [rbp+0x0],dl
   14000b7fa:	jae    0x14000b7fc
   14000b7fc:	add    BYTE PTR gs:[rsi+0x0],cl
   14000b800:	add    BYTE PTR gs:[rdi+0x0],dh
   14000b804:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000b808:	jbe    0x14000b80a
   14000b80a:	(bad)  
   14000b80b:	add    BYTE PTR [rax+0x0],dl
   14000b80e:	ins    BYTE PTR es:[rdi],dx
   14000b80f:	add    BYTE PTR [rbp+0x0],dh
   14000b812:	add    BYTE PTR [ecx+0x0],ch
   14000b816:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000b81f:	add    BYTE PTR [rbx+0x0],dl
   14000b822:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000b826:	push   rsp
   14000b827:	add    BYTE PTR [rdi+0x0],dl
   14000b82a:	add    BYTE PTR [r10+0x0],dl
   14000b82e:	add    BYTE PTR [r8],r8b
   14000b831:	add    BYTE PTR [rax],al
   14000b833:	add    BYTE PTR [rax],al
   14000b835:	add    BYTE PTR [rax],al
   14000b837:	add    BYTE PTR [rdx+0x0],cl
   14000b83a:	(bad)  
   14000b83b:	add    BYTE PTR [rsi+0x0],dh
   14000b83e:	(bad)  
   14000b83f:	add    BYTE PTR [rbx+0x0],dl
   14000b842:	outs   dx,DWORD PTR ds:[rsi]
   14000b843:	add    BYTE PTR [rsi+0x0],ah
   14000b846:	je     0x14000b848
	...
   14000b850:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000b854:	jbe    0x14000b856
   14000b856:	(bad)  
   14000b857:	add    BYTE PTR [rax],ah
   14000b859:	add    BYTE PTR [rax+0x0],dl
   14000b85c:	ins    BYTE PTR es:[rdi],dx
   14000b85d:	add    BYTE PTR [rbp+0x0],dh
   14000b860:	add    BYTE PTR [eip+0x6e006900],ch        # 0x1ae012167
	...
   14000b86f:	add    BYTE PTR [rdx+0x0],cl
   14000b872:	(bad)  
   14000b873:	add    BYTE PTR [rsi+0x0],dh
   14000b876:	(bad)  
   14000b877:	add    BYTE PTR [rax+0x0],cl
   14000b87a:	outs   dx,DWORD PTR ds:[rsi]
   14000b87b:	add    BYTE PTR [rbp+0x0],ch
   14000b87e:	add    BYTE PTR gs:[rax],al
   14000b881:	add    BYTE PTR [rax],al
   14000b883:	add    BYTE PTR [rax],al
   14000b885:	add    BYTE PTR [rax],al
   14000b887:	add    BYTE PTR [rbx+0x0],al
   14000b88a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000b88e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b893:	add    BYTE PTR [rax],al
   14000b895:	add    BYTE PTR [rax],al
   14000b897:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000b89b:	add    BYTE PTR [rbp+0x0],ah
   14000b89e:	(bad)  
   14000b89f:	add    BYTE PTR [rax+rax*1+0x41],dh
   14000b8a3:	add    BYTE PTR [rbx+0x0],dh
   14000b8a6:	add    BYTE PTR [rax],al
   14000b8a8:	and    eax,0x5c007300
   14000b8ad:	add    BYTE PTR [rip+0x7300],ah        # 0x140012bb3
	...
   14000b8bf:	add    BYTE PTR [rbx+0x0],dl
   14000b8c2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000b8c6:	push   rsp
   14000b8c7:	add    BYTE PTR [rdi+0x0],dl
   14000b8ca:	add    BYTE PTR [r10+0x0],dl
   14000b8ce:	add    BYTE PTR [r8+rax*1+0x4a],r11b
   14000b8d3:	add    BYTE PTR [rcx+0x0],ah
   14000b8d6:	jbe    0x14000b8d8
   14000b8d8:	(bad)  
   14000b8d9:	add    BYTE PTR [rbx+0x0],dl
   14000b8dc:	outs   dx,DWORD PTR ds:[rsi]
   14000b8dd:	add    BYTE PTR [rsi+0x0],ah
   14000b8e0:	je     0x14000b8e2
   14000b8e2:	pop    rsp
   14000b8e3:	add    BYTE PTR [rdx+0x0],cl
   14000b8e6:	(bad)  
   14000b8e7:	add    BYTE PTR [rsi+0x0],dh
   14000b8ea:	(bad)  
   14000b8eb:	add    BYTE PTR [rax],ah
   14000b8ed:	add    BYTE PTR [rdx+0x0],dl
   14000b8f0:	jne    0x14000b8f2
   14000b8f2:	outs   dx,BYTE PTR ds:[rsi]
   14000b8f3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b8f7:	add    BYTE PTR [rbp+0x0],ch
   14000b8fa:	add    BYTE PTR gs:[rax],ah
   14000b8fd:	add    BYTE PTR [rbp+0x0],al
   14000b900:	outs   dx,BYTE PTR ds:[rsi]
   14000b901:	add    BYTE PTR [rsi+0x0],dh
   14000b904:	imul   eax,DWORD PTR [rax],0x6f0072
   14000b90a:	outs   dx,BYTE PTR ds:[rsi]
   14000b90b:	add    BYTE PTR [rbp+0x0],ch
   14000b90e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b912:	je     0x14000b914
   14000b914:	add    BYTE PTR [rax],al
   14000b916:	add    BYTE PTR [rax],al
   14000b918:	and    eax,0x5c007300
   14000b91d:	add    BYTE PTR [rip+0x7300],ah        # 0x140012c23
   14000b923:	add    BYTE PTR [rax],al
   14000b925:	add    BYTE PTR [rax],al
   14000b927:	add    BYTE PTR [rdx+0x0],cl
   14000b92a:	(bad)  
   14000b92b:	add    BYTE PTR [rsi+0x0],dh
   14000b92e:	(bad)  
   14000b92f:	add    BYTE PTR [rax+0x0],cl
   14000b932:	outs   dx,DWORD PTR ds:[rsi]
   14000b933:	add    BYTE PTR [rbp+0x0],ch
   14000b936:	add    BYTE PTR gs:[rax],al
   14000b939:	add    BYTE PTR [rax],al
   14000b93b:	add    BYTE PTR [rax],al
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rdx+0x0],ah
   14000b942:	imul   eax,DWORD PTR [rax],0x5c006e
   14000b948:	push   0x0
   14000b94a:	(bad)  
   14000b94b:	add    BYTE PTR [rsi+0x0],dh
   14000b94e:	(bad)  
   14000b94f:	add    BYTE PTR [rsi],ch
   14000b951:	add    BYTE PTR [rbp+0x0],ah
   14000b954:	js     0x14000b956
   14000b956:	add    BYTE PTR gs:[rax],al
   14000b959:	add    BYTE PTR [rax],al
   14000b95b:	add    BYTE PTR [rax],al
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c012c65
   14000b965:	add    BYTE PTR [rip+0x7300],ah        # 0x140012c6b
   14000b96b:	add    BYTE PTR [rax],al
   14000b96d:	add    BYTE PTR [rax],al
   14000b96f:	add    BYTE PTR [rdx+0x0],ah
   14000b972:	imul   eax,DWORD PTR [rax],0x5c006e
   14000b978:	movsxd eax,DWORD PTR [rax]
   14000b97a:	ins    BYTE PTR es:[rdi],dx
   14000b97b:	add    BYTE PTR [rcx+0x0],ch
   14000b97e:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b982:	je     0x14000b984
   14000b984:	pop    rsp
   14000b985:	add    BYTE PTR [rdx+0x0],ch
   14000b988:	jbe    0x14000b98a
   14000b98a:	ins    DWORD PTR es:[rdi],dx
   14000b98b:	add    BYTE PTR [rsi],ch
   14000b98d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b991:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b995:	add    BYTE PTR [rax],al
   14000b997:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c012c9d
   14000b99d:	add    BYTE PTR [rip+0x7300],ah        # 0x140012ca3
   14000b9a3:	add    BYTE PTR [rax],al
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rdx+0x0],ah
   14000b9aa:	imul   eax,DWORD PTR [rax],0x5c006e
   14000b9b0:	jae    0x14000b9b2
   14000b9b2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b9b6:	jbe    0x14000b9b8
   14000b9b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b9bc:	pop    rsp
   14000b9bd:	add    BYTE PTR [rdx+0x0],ch
   14000b9c0:	jbe    0x14000b9c2
   14000b9c2:	ins    DWORD PTR es:[rdi],dx
   14000b9c3:	add    BYTE PTR [rsi],ch
   14000b9c5:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b9c9:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b9cd:	add    BYTE PTR [rax],al
   14000b9cf:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c012cd5
   14000b9d5:	add    BYTE PTR [rip+0x7300],ah        # 0x140012cdb
   14000b9db:	add    BYTE PTR [rax],al
   14000b9dd:	add    BYTE PTR [rax],al
   14000b9df:	add    BYTE PTR [rip+0x42004100],ch        # 0x18200fae5
   14000b9e5:	add    BYTE PTR [rbx+0x0],al
   14000b9e8:	add    BYTE PTR [rbp+0x0],r8b
   14000b9ec:	rex.RX add BYTE PTR [rsi+0x0],r8b
   14000b9f0:	add    BYTE PTR [r8+rax*1+0x43],r8b
   14000b9f5:	add    BYTE PTR [rdx+0x0],al
   14000b9f8:	add    BYTE PTR [r13+0x0],dil
   14000b9fc:	add    BYTE PTR [rax],al
   14000b9fe:	add    BYTE PTR [rax],al
   14000ba00:	jnp    0x14000ba02
   14000ba02:	rex.XB add BYTE PTR [r9+0x0],al
   14000ba06:	rex.RX add BYTE PTR [rbp+0x0],r8b
   14000ba0a:	add    BYTE PTR [r14+0x0],r8b
   14000ba0e:	add    BYTE PTR [r11+0x0],al
   14000ba12:	sub    eax,0x0
   14000ba17:	add    BYTE PTR [rip+0x25007300],ah        # 0x165012d1d
   14000ba1d:	add    BYTE PTR [rax],dh
   14000ba1f:	add    BYTE PTR [rbx],dh
   14000ba21:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000ba25:	add    BYTE PTR [rcx],dh
   14000ba27:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000ba2b:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400ea31
   14000ba31:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000ba35:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400ea3b
   14000ba3b:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000ba3f:	add    BYTE PTR [rbx+0x0],dh
   14000ba42:	add    BYTE PTR [rax],al
   14000ba44:	add    BYTE PTR [rax],al
   14000ba46:	add    BYTE PTR [rax],al
   14000ba48:	sub    eax,0x42004100
   14000ba4d:	add    BYTE PTR [rbx+0x0],al
   14000ba50:	add    BYTE PTR [rbp+0x0],r8b
   14000ba54:	rex.RX add BYTE PTR [rsi+0x0],r8b
   14000ba58:	add    BYTE PTR [r8+rax*1+0x43],r8b
   14000ba5d:	add    BYTE PTR [rdx+0x0],al
   14000ba60:	rex.X add BYTE PTR [rbp+0x0],dil
   14000ba64:	add    BYTE PTR [rax],al
   14000ba66:	add    BYTE PTR [rax],al
   14000ba68:	jnp    0x14000ba6a
   14000ba6a:	rex.XB add BYTE PTR [r9+0x0],al
   14000ba6e:	rex.RX add BYTE PTR [rbp+0x0],r8b
   14000ba72:	add    BYTE PTR [r14+0x0],r8b
   14000ba76:	add    BYTE PTR [r11+0x0],al
   14000ba7a:	sub    eax,0x0
   14000ba7f:	add    BYTE PTR [rip+0x25007300],ah        # 0x165012d85
   14000ba85:	add    BYTE PTR [rax],dh
   14000ba87:	add    BYTE PTR [rbx],dh
   14000ba89:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000ba8d:	add    BYTE PTR [rcx],dh
   14000ba8f:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000ba93:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400ea99
   14000ba99:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000ba9d:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400eaa3
   14000baa3:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000baa7:	add    BYTE PTR [rbx+0x0],dh
   14000baaa:	add    BYTE PTR [rax],al
   14000baac:	add    BYTE PTR [rax],al
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	sub    eax,0x42004100
   14000bab5:	add    BYTE PTR [rbx+0x0],al
   14000bab8:	add    BYTE PTR [rbp+0x0],r8b
   14000babc:	rex.RX add BYTE PTR [rsi+0x0],r8b
   14000bac0:	add    BYTE PTR [r8+rax*1+0x43],r8b
   14000bac5:	add    BYTE PTR [rdx+0x0],al
   14000bac8:	rex.XB add BYTE PTR [r13+0x0],dil
   14000bacc:	add    BYTE PTR [rax],al
   14000bace:	add    BYTE PTR [rax],al
   14000bad0:	jnp    0x14000bad2
   14000bad2:	rex.XB add BYTE PTR [r9+0x0],al
   14000bad6:	rex.RX add BYTE PTR [rbp+0x0],r8b
   14000bada:	add    BYTE PTR [r14+0x0],r8b
   14000bade:	add    BYTE PTR [r11+0x0],al
   14000bae2:	sub    eax,0x0
   14000bae7:	add    BYTE PTR [rip+0x25007300],ah        # 0x165012ded
   14000baed:	add    BYTE PTR [rax],dh
   14000baef:	add    BYTE PTR [rbx],dh
   14000baf1:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000baf5:	add    BYTE PTR [rcx],dh
   14000baf7:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000bafb:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400eb01
   14000bb01:	add    BYTE PTR [rax+rax*1+0x2d],ah
   14000bb05:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400eb0b
   14000bb0b:	add    BYTE PTR [rax+rax*1+0x25],ah
   14000bb0f:	add    BYTE PTR [rbx+0x0],dh
	...
   14000bb1e:	add    BYTE PTR [rax],al
   14000bb20:	jnp    0x14000bb22
   14000bb22:	add    BYTE PTR [r9],r14b
   14000bb25:	add    BYTE PTR [rcx],bh
   14000bb27:	add    BYTE PTR [rsi+0x0],al
   14000bb2a:	cmp    DWORD PTR [rax],eax
   14000bb2c:	xor    eax,DWORD PTR [rax]
   14000bb2e:	xor    eax,DWORD PTR [rax]
   14000bb30:	xor    DWORD PTR [rax],eax
   14000bb32:	sub    eax,0x31003300
   14000bb37:	add    BYTE PTR [rcx],dh
   14000bb39:	add    BYTE PTR [rax],dh
   14000bb3b:	add    BYTE PTR [rip+0x31003100],ch        # 0x17100ec41
   14000bb41:	add    BYTE PTR [rax+rax*1+0x34],al
   14000bb45:	add    BYTE PTR [rip+0x39003900],ch        # 0x17900f44b
   14000bb4b:	add    BYTE PTR [rcx],dh
   14000bb4d:	add    BYTE PTR [rbx+0x0],al
   14000bb50:	sub    eax,0x30003000
   14000bb55:	add    BYTE PTR [rip+0x30003000],dh        # 0x17000eb5b
   14000bb5b:	add    BYTE PTR [rax+rax*1],dh
   14000bb5e:	add    BYTE PTR [rbx],r14b
   14000bb61:	add    BYTE PTR [rdx+0x0],al
   14000bb64:	xor    eax,DWORD PTR [rax]
   14000bb66:	add    BYTE PTR [rdx+0x0],r8b
   14000bb6a:	jge    0x14000bb6c
   14000bb6c:	add    BYTE PTR [rax],al
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	push   rbx
   14000bb71:	add    BYTE PTR [rdi+0x0],cl
   14000bb74:	add    BYTE PTR [rax+r8*1+0x57],r10b
   14000bb79:	add    BYTE PTR [rcx+0x0],al
   14000bb7c:	push   rdx
   14000bb7d:	add    BYTE PTR [rbp+0x0],al
   14000bb80:	pop    rsp
   14000bb81:	add    BYTE PTR [rbx+0x0],al
   14000bb84:	ins    BYTE PTR es:[rdi],dx
   14000bb85:	add    BYTE PTR [rcx+0x0],ah
   14000bb88:	jae    0x14000bb8a
   14000bb8a:	jae    0x14000bb8c
   14000bb8c:	add    BYTE PTR gs:[rbx+0x0],dh
   14000bb90:	pop    rsp
   14000bb91:	add    BYTE PTR [rbx+0x0],al
   14000bb94:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000bb98:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   14000bb9d:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c012ea3
   14000bba3:	add    BYTE PTR [rcx+0x0],cl
   14000bba6:	outs   dx,BYTE PTR ds:[rsi]
   14000bba7:	add    BYTE PTR [rax+0x0],dh
   14000bbaa:	jb     0x14000bbac
   14000bbac:	outs   dx,DWORD PTR ds:[rsi]
   14000bbad:	add    BYTE PTR [rbx+0x0],ah
   14000bbb0:	push   rbx
   14000bbb1:	add    BYTE PTR [rbp+0x0],ah
   14000bbb4:	jb     0x14000bbb6
   14000bbb6:	jbe    0x14000bbb8
   14000bbb8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bbbc:	xor    eax,DWORD PTR [rax]
   14000bbbe:	xor    al,BYTE PTR [rax]
	...
   14000bbc8:	push   rbx
   14000bbc9:	add    BYTE PTR [rdi+0x0],cl
   14000bbcc:	add    BYTE PTR [rax+r8*1+0x57],r10b
   14000bbd1:	add    BYTE PTR [rcx+0x0],al
   14000bbd4:	push   rdx
   14000bbd5:	add    BYTE PTR [rbp+0x0],al
	...
   14000bbe0:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000bbe4:	jp     0x14000bbe6
   14000bbe6:	imul   eax,DWORD PTR [rax],0x6c006c
   14000bbec:	(bad)  
   14000bbed:	add    BYTE PTR [rax],al
   14000bbef:	add    BYTE PTR [rbp+0x0],cl
   14000bbf2:	outs   dx,DWORD PTR ds:[rsi]
   14000bbf3:	add    BYTE PTR [rdx+0x0],bh
   14000bbf6:	imul   eax,DWORD PTR [rax],0x6c006c
   14000bbfc:	(bad)  
   14000bbfd:	add    BYTE PTR [rax],ah
   14000bbff:	add    BYTE PTR [rsi+0x0],al
   14000bc02:	imul   eax,DWORD PTR [rax],0x650072
   14000bc08:	data16 add BYTE PTR [rdi+0x0],ch
   14000bc0c:	js     0x14000bc0e
   14000bc0e:	add    BYTE PTR [rax],al
   14000bc10:	ins    DWORD PTR es:[rdi],dx
   14000bc11:	add    BYTE PTR [rdi+0x0],ch
   14000bc14:	jp     0x14000bc16
   14000bc16:	imul   eax,DWORD PTR [rax],0x6c006c
   14000bc1c:	(bad)  
   14000bc1d:	add    BYTE PTR [rsi],ch
   14000bc1f:	add    BYTE PTR [rdi+0x0],ch
   14000bc22:	jb     0x14000bc24
   14000bc24:	add    BYTE PTR [eax],al
   14000bc27:	add    BYTE PTR [rbp+0x0],cl
   14000bc2a:	outs   dx,DWORD PTR ds:[rsi]
   14000bc2b:	add    BYTE PTR [rdx+0x0],bh
   14000bc2e:	imul   eax,DWORD PTR [rax],0x6c006c
   14000bc34:	(bad)  
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    BYTE PTR [rbx+0x0],al
   14000bc3a:	jne    0x14000bc3c
   14000bc3c:	jb     0x14000bc3e
   14000bc3e:	jb     0x14000bc40
   14000bc40:	add    BYTE PTR gs:[rsi+0x0],ch
   14000bc44:	je     0x14000bc46
   14000bc46:	push   rsi
   14000bc47:	add    BYTE PTR [rbp+0x0],ah
   14000bc4a:	jb     0x14000bc4c
   14000bc4c:	jae    0x14000bc4e
   14000bc4e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bc54:	add    BYTE PTR [rax],al
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000bc5c:	imul   eax,DWORD PTR [rax],0x6e
   14000bc62:	add    BYTE PTR [rax],al
   14000bc64:	add    BYTE PTR [rax],al
   14000bc66:	add    BYTE PTR [rax],al
   14000bc68:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000bc6c:	jae    0x14000bc6e
   14000bc6e:	je     0x14000bc70
   14000bc70:	(bad)  
   14000bc71:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000bc75:	add    BYTE PTR [rax],ah
   14000bc77:	add    BYTE PTR [rax+rax*1+0x69],al
   14000bc7b:	add    BYTE PTR [rdx+0x0],dh
   14000bc7e:	add    BYTE PTR gs:[rbx+0x0],ah
   14000bc82:	je     0x14000bc84
   14000bc84:	outs   dx,DWORD PTR ds:[rsi]
   14000bc85:	add    BYTE PTR [rdx+0x0],dh
   14000bc88:	jns    0x14000bc8a
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	add    BYTE PTR [rax],al
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	pop    rsp
   14000bc91:	add    BYTE PTR [rax+0x0],dh
   14000bc94:	ins    BYTE PTR es:[rdi],dx
   14000bc95:	add    BYTE PTR [rbp+0x0],dh
   14000bc98:	add    BYTE PTR [ecx+0x0],ch
   14000bc9c:	outs   dx,BYTE PTR ds:[rsi]
   14000bc9d:	add    BYTE PTR [rbx+0x0],dh
	...
   14000bca8:	push   rbx
   14000bca9:	add    BYTE PTR [rdi+0x0],ch
   14000bcac:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000bcb1:	add    BYTE PTR [rcx+0x0],ah
   14000bcb4:	jb     0x14000bcb6
   14000bcb6:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   14000bcbb:	add    BYTE PTR [rax+rax*1+0x61],ch
   14000bcbf:	add    BYTE PTR [rbx+0x0],dh
   14000bcc2:	jae    0x14000bcc4
   14000bcc4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000bcc8:	pop    rsp
   14000bcc9:	add    BYTE PTR [rbx+0x0],al
   14000bccc:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000bcd0:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000bcd5:	add    BYTE PTR [rax],al
   14000bcd7:	add    BYTE PTR [rdx],ah
   14000bcd9:	add    eax,0x61993
   14000bcde:	add    BYTE PTR [rax],al
   14000bce0:	in     al,dx
   14000bce1:	(bad)  
   14000bce2:	add    BYTE PTR [rax],al
   14000bce4:	add    eax,DWORD PTR [rax]
   14000bce6:	add    BYTE PTR [rax],al
   14000bce8:	pop    rax
   14000bce9:	iret   
   14000bcea:	add    BYTE PTR [rax],al
   14000bcec:	(bad)  
   14000bced:	add    BYTE PTR [rax],al
   14000bcef:	add    al,ch
   14000bcf1:	iret   
   14000bcf2:	add    BYTE PTR [rax],al
   14000bcf4:	xor    BYTE PTR [rax],al
   14000bcf6:	add    BYTE PTR [rax],al
   14000bcf8:	add    BYTE PTR [rax],al
   14000bcfa:	add    BYTE PTR [rax],al
   14000bcfc:	add    DWORD PTR [rax],eax
   14000bcfe:	add    BYTE PTR [rax],al
   14000bd00:	and    al,BYTE PTR [rip+0x21993]        # 0x14002d699
   14000bd06:	add    BYTE PTR [rax],al
   14000bd08:	and    al,0xd1
   14000bd0a:	add    BYTE PTR [rax],al
   14000bd0c:	add    DWORD PTR [rax],eax
   14000bd0e:	add    BYTE PTR [rax],al
   14000bd10:	rol    QWORD PTR [rax],1
   14000bd13:	add    BYTE PTR [rsi],al
   14000bd15:	add    BYTE PTR [rax],al
   14000bd17:	add    BYTE PTR [rax+0x300000d1],dl
   14000bd1d:	add    BYTE PTR [rax],al
   14000bd1f:	add    BYTE PTR [rax],al
   14000bd21:	add    BYTE PTR [rax],al
   14000bd23:	add    BYTE PTR [rcx],al
   14000bd25:	add    BYTE PTR [rax],al
   14000bd27:	add    BYTE PTR [rdx],ah
   14000bd29:	add    eax,0x21993
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	rcl    cl,0x0
   14000bd33:	add    BYTE PTR [rcx],al
   14000bd35:	add    BYTE PTR [rax],al
   14000bd37:	add    ah,ah
   14000bd39:	rol    DWORD PTR [rax],1
   14000bd3b:	add    BYTE PTR [rsi],al
   14000bd3d:	add    BYTE PTR [rax],al
   14000bd3f:	add    BYTE PTR [rdx+rdx*8],ch
   14000bd42:	add    BYTE PTR [rax],al
   14000bd44:	add    BYTE PTR [rax],al
   14000bd47:	add    BYTE PTR [rax],al
   14000bd49:	add    BYTE PTR [rax],al
   14000bd4b:	add    BYTE PTR [rcx],al
   14000bd4d:	add    BYTE PTR [rax],al
   14000bd4f:	add    BYTE PTR [rbp+0x0],dl
   14000bd52:	outs   dx,BYTE PTR ds:[rsi]
   14000bd53:	add    BYTE PTR [rbx+0x0],ch
   14000bd56:	outs   dx,BYTE PTR ds:[rsi]
   14000bd57:	add    BYTE PTR [rdi+0x0],ch
   14000bd5a:	ja     0x14000bd5c
   14000bd5c:	outs   dx,BYTE PTR ds:[rsi]
   14000bd5d:	add    BYTE PTR [rax],ah
   14000bd5f:	add    BYTE PTR [rbp+0x0],ah
   14000bd62:	jb     0x14000bd64
   14000bd64:	jb     0x14000bd66
   14000bd66:	outs   dx,DWORD PTR ds:[rsi]
   14000bd67:	add    BYTE PTR [rdx+0x0],dh
   14000bd6a:	and    BYTE PTR [rax],al
   14000bd6c:	xor    BYTE PTR [rax],al
   14000bd6e:	js     0x14000bd70
   14000bd70:	and    eax,0x6c003000
   14000bd75:	add    BYTE PTR [rax+0x0],bl
	...
   14000bd80:	rex.WB add BYTE PTR [r8+rax*1+0x69],al
   14000bd85:	add    BYTE PTR [rbx+0x0],dh
   14000bd88:	jo     0x14000bd8a
   14000bd8a:	(bad)  
   14000bd8b:	add    BYTE PTR [rax+rax*1+0x63],dh
   14000bd8f:	add    BYTE PTR [rax+0x0],ch
   14000bd92:	and    BYTE PTR [rax],al
   14000bd94:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bd98:	jb     0x14000bd9a
   14000bd9a:	outs   dx,DWORD PTR ds:[rsi]
   14000bd9b:	add    BYTE PTR [rdx+0x0],dh
   14000bd9e:	and    BYTE PTR [rax],al
   14000bda0:	and    eax,DWORD PTR [rax]
   14000bda2:	and    eax,0x6400
   14000bda7:	add    BYTE PTR [rbx+0x0],dl
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	rex.WRB add BYTE PTR [r8],r8b
   14000bdaf:	add    BYTE PTR [rax+0x14000bd],ch
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rbp+rdi*4+0x14000],ch
   14000bdbe:	add    BYTE PTR [rax],al
   14000bdc0:	add    BYTE PTR [rax],r8b
   14000bdc3:	add    BYTE PTR [rdx+0x0],al
   14000bdc6:	add    BYTE PTR [rax],al
   14000bdc8:	sar    BYTE PTR [rbp+0x14000],0x0
   14000bdcf:	add    ah,al
   14000bdd1:	mov    ebp,0x14000
   14000bdd6:	add    BYTE PTR [rax],al
   14000bdd8:	push   rsi
   14000bdd9:	add    BYTE PTR [rcx+0x0],ah
   14000bddc:	ins    BYTE PTR es:[rdi],dx
   14000bddd:	add    BYTE PTR [rax],al
   14000bddf:	add    al,bl
   14000bde1:	mov    ebp,0x14000
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000bdec:	jb     0x14000bdee
   14000bdee:	movsxd eax,DWORD PTR [rax]
   14000bdf0:	add    BYTE PTR gs:[rdx+0x0],dl
   14000bdf4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bdf8:	outs   dx,DWORD PTR ds:[rsi]
   14000bdf9:	add    BYTE PTR [rsi+0x0],dh
   14000bdfc:	add    BYTE PTR gs:[rax],al
   14000bdff:	add    al,ch
   14000be01:	mov    ebp,0x14000
   14000be06:	add    BYTE PTR [rax],al
   14000be08:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000be0c:	push   rdx
   14000be0d:	add    BYTE PTR [rbp+0x0],ah
   14000be10:	ins    DWORD PTR es:[rdi],dx
   14000be11:	add    BYTE PTR [rdi+0x0],ch
   14000be14:	jbe    0x14000be16
   14000be16:	add    BYTE PTR gs:[rax],al
   14000be19:	add    BYTE PTR [rax],al
   14000be1b:	add    BYTE PTR [rax],al
   14000be1d:	add    BYTE PTR [rax],al
   14000be1f:	add    BYTE PTR [rax],cl
   14000be21:	mov    esi,0x14000
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	add    BYTE PTR [rbp+0x0],r12b
   14000be2c:	ins    BYTE PTR es:[rdi],dx
   14000be2d:	add    BYTE PTR [rbp+0x0],ah
   14000be30:	je     0x14000be32
   14000be32:	add    BYTE PTR gs:[rax],al
   14000be35:	add    BYTE PTR [rax],al
   14000be37:	add    BYTE PTR [rax],ch
   14000be39:	mov    esi,0x14000
   14000be3e:	add    BYTE PTR [rax],al
   14000be40:	add    BYTE PTR [r8+0x0],sil
   14000be44:	jo     0x14000be46
   14000be46:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000be4b:	add    BYTE PTR [rax],ah
   14000be4d:	add    BYTE PTR [rax],al
   14000be4f:	add    BYTE PTR [rbx+0x0],al
   14000be52:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000be56:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000be5b:	add    BYTE PTR [rax],al
   14000be5d:	add    BYTE PTR [rax],al
   14000be5f:	add    BYTE PTR [rbx+0x0],al
   14000be62:	outs   dx,DWORD PTR ds:[rsi]
   14000be63:	add    BYTE PTR [rbp+0x0],ch
   14000be66:	jo     0x14000be68
   14000be68:	outs   dx,DWORD PTR ds:[rsi]
   14000be69:	add    BYTE PTR [rsi+0x0],ch
   14000be6c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000be70:	je     0x14000be72
   14000be72:	and    BYTE PTR [rax],al
   14000be74:	rex.XB add BYTE PTR [r9+0x0],spl
   14000be78:	je     0x14000be7a
   14000be7a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000be7e:	outs   dx,DWORD PTR ds:[rsi]
   14000be7f:	add    BYTE PTR [rdx+0x0],dh
   14000be82:	imul   eax,DWORD PTR [rax],0x730065
   14000be88:	add    BYTE PTR [rax],al
   14000be8a:	add    BYTE PTR [rax],al
   14000be8c:	or     al,BYTE PTR [rax]
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000be94:	ins    BYTE PTR es:[rdi],dx
   14000be95:	add    BYTE PTR [rbp+0x0],ah
   14000be98:	push   rsp
   14000be99:	add    BYTE PTR [rcx+0x0],bh
   14000be9c:	jo     0x14000be9e
   14000be9e:	add    BYTE PTR gs:[rax],al
   14000bea1:	add    BYTE PTR [rax],al
   14000bea3:	add    BYTE PTR [rax],al
   14000bea5:	add    BYTE PTR [rax],al
   14000bea7:	add    BYTE PTR [rcx+0x0],cl
   14000beaa:	outs   dx,BYTE PTR ds:[rsi]
   14000beab:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000beaf:	add    BYTE PTR [rdx+0x0],dh
   14000beb2:	data16 add BYTE PTR [rcx+0x0],ah
   14000beb6:	movsxd eax,DWORD PTR [rax]
   14000beb8:	add    BYTE PTR gs:[rax],al
   14000bebb:	add    BYTE PTR [rax],al
   14000bebd:	add    BYTE PTR [rax],al
   14000bebf:	add    BYTE PTR [rax+0x0],cl
   14000bec2:	(bad)  
   14000bec3:	add    BYTE PTR [rdx+0x0],dh
   14000bec6:	add    BYTE PTR fs:[rdi+0x0],dh
   14000beca:	(bad)  
   14000becb:	add    BYTE PTR [rdx+0x0],dh
   14000bece:	add    BYTE PTR gs:[rax],al
   14000bed1:	add    BYTE PTR [rax],al
   14000bed3:	add    BYTE PTR [rax],al
   14000bed5:	add    BYTE PTR [rax],al
   14000bed7:	add    BYTE PTR [rbp+0x0],cl
   14000beda:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000bee8:	push   rbx
   14000bee9:	add    BYTE PTR [rcx+0x0],al
   14000beec:	rex.WRB add BYTE PTR [r8],r8b
   14000beef:	add    BYTE PTR [rbx+0x0],dl
   14000bef2:	add    BYTE PTR [r11+0x0],r8b
   14000bef6:	push   rbp
   14000bef7:	add    BYTE PTR [rdx+0x0],dl
   14000befa:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000bf07:	add    BYTE PTR [rbx+0x0],dl
   14000bf0a:	pop    rcx
   14000bf0b:	add    BYTE PTR [rbx+0x0],dl
   14000bf0e:	push   rsp
   14000bf0f:	add    BYTE PTR [rbp+0x0],al
   14000bf12:	rex.WRB add BYTE PTR [r8],r8b
   14000bf15:	add    BYTE PTR [rax],al
   14000bf17:	add    BYTE PTR [rbx+0x0],dl
   14000bf1a:	outs   dx,DWORD PTR ds:[rsi]
   14000bf1b:	add    BYTE PTR [rsi+0x0],ah
   14000bf1e:	je     0x14000bf20
   14000bf20:	ja     0x14000bf22
   14000bf22:	(bad)  
   14000bf23:	add    BYTE PTR [rdx+0x0],dh
   14000bf26:	add    BYTE PTR gs:[rax],al
   14000bf29:	add    BYTE PTR [rax],al
   14000bf2b:	add    BYTE PTR [rax],al
   14000bf2d:	add    BYTE PTR [rax],al
   14000bf2f:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000bf33:	add    BYTE PTR [rax+0x0],dh
   14000bf36:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000bf3b:	add    BYTE PTR [rdx+0x0],ah
   14000bf3e:	add    BYTE PTR [rax],al
   14000bf40:	and    eax,0x20006200
   14000bf45:	add    BYTE PTR [rip+0x20006400],ah        # 0x16001234b
   14000bf4b:	add    BYTE PTR [rip+0x3a004800],ah        # 0x17a010751
   14000bf51:	add    BYTE PTR [rip+0x3a004d00],ah        # 0x17a010c57
   14000bf57:	add    BYTE PTR [rip+0x5300],ah        # 0x14001125d
   14000bf5d:	add    BYTE PTR [rax],al
   14000bf5f:	add    BYTE PTR [rsi],ch
   14000bf61:	add    BYTE PTR [rip+0x33003000],ah        # 0x17300ef67
   14000bf67:	add    BYTE PTR [rax+rax*1+0x0],ah
   14000bf6b:	add    BYTE PTR [rax],al
   14000bf6d:	add    BYTE PTR [rax],al
   14000bf6f:	add    BYTE PTR [rbx+0x0],bl
   14000bf72:	and    eax,0x38003000
   14000bf77:	add    BYTE PTR [rax+0x0],bh
   14000bf7a:	pop    rbp
   14000bf7b:	add    BYTE PTR [rax],al
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rbp+0x0],al
   14000bf82:	jb     0x14000bf84
   14000bf84:	jb     0x14000bf86
   14000bf86:	outs   dx,DWORD PTR ds:[rsi]
   14000bf87:	add    BYTE PTR [rdx+0x0],dh
   14000bf8a:	cmp    al,BYTE PTR [rax]
   14000bf8c:	add    BYTE PTR [rax],al
   14000bf8e:	add    BYTE PTR [rax],al
   14000bf90:	push   rax
   14000bf91:	add    BYTE PTR [rdx],bh
   14000bf93:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400ef99
   14000bf99:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000bf9d:	add    BYTE PTR [rax+rax*1+0x3a],dl
   14000bfa1:	add    BYTE PTR [rip+0x34003000],ah        # 0x17400efa7
   14000bfa7:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000bfab:	add    BYTE PTR [rip+0x25007300],ah        # 0x1650132b1
   14000bfb1:	add    BYTE PTR [rbx+0x0],dh
   14000bfb4:	add    BYTE PTR [rax],al
   14000bfb6:	add    BYTE PTR [rax],al
   14000bfb8:	add    BYTE PTR cs:[rsi],ch
   14000bfbb:	add    BYTE PTR [rsi],ch
   14000bfbd:	add    BYTE PTR [rax],al
   14000bfbf:	add    BYTE PTR [rcx+0x44],al
   14000bfc2:	push   rsi
   14000bfc3:	push   r8
   14000bfc5:	xor    rsi,QWORD PTR [r10]
   14000bfc8:	cs fs ins BYTE PTR es:[rdi],dx
   14000bfcb:	ins    BYTE PTR es:[rdi],dx
   14000bfcc:	add    BYTE PTR [rax],al
   14000bfce:	add    BYTE PTR [rax],al
   14000bfd0:	push   rbx
   14000bfd1:	rex.W
   14000bfd2:	rex.RB
   14000bfd3:	rex.WR
   14000bfd4:	xor    r14,QWORD PTR [rdx]
   14000bfd7:	cs fs ins BYTE PTR es:[rdi],dx
   14000bfda:	ins    BYTE PTR es:[rdi],dx
   14000bfdb:	add    BYTE PTR [rax],al
   14000bfdd:	add    BYTE PTR [rax],al
   14000bfdf:	add    BYTE PTR [rbx],ah
   14000bfe1:	add    eax,DWORD PTR [rax]
   14000bfe3:	add    BYTE PTR [rax],al
   14000bfe5:	add    BYTE PTR [rax],al
   14000bfe7:	add    al,al
   14000bfe9:	add    BYTE PTR [rax],al
   14000bfeb:	add    BYTE PTR [rax],al
   14000bfed:	add    BYTE PTR [rax],al
   14000bfef:	rex.RX test al,0xc3
   14000bff2:	add    BYTE PTR [rax+0x1],al
   14000bff5:	add    BYTE PTR [rax],al
   14000bff7:	add    BYTE PTR [rsi+rdi*2+0x0],dl
   14000bffb:	rex add DWORD PTR [rax],eax
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	movabs al,ds:0x40000000014000f3
   14000c009:	hlt    
   14000c00a:	add    BYTE PTR [rax+0x1],al
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rax],dl
   14000c011:	pop    rcx
   14000c012:	(bad)  
   14000c013:	mov    dh,0x28
   14000c015:	rcl    DWORD PTR gs:[rcx],1
   14000c018:	xchg   esi,eax
   14000c019:	adc    DWORD PTR [rax],eax
   14000c01b:	add    al,bh
   14000c01d:	(bad)  
   14000c01e:	or     eax,0x4c3de00d
   14000c023:	cmp    DWORD PTR [rdi+0x3c],ebp
   14000c026:	rcl    BYTE PTR [rcx],cl
   14000c028:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14000c02f:	mov    bh,0xca
   14000c031:	test   eax,0x92a25dc0
   14000c036:	add    al,0x42
   14000c038:	nop
   14000c039:	add    esp,esp
   14000c03b:	(bad)  
   14000c03c:	pop    rdi
   14000c03d:	adc    ecx,esp
   14000c03f:	test   al,0x53
   14000c041:	rex.W
   14000c042:	rex.WR push rdi
   14000c044:	push   r8
   14000c046:	rex.WB
   14000c047:	cs fs ins BYTE PTR es:[rdi],dx
   14000c04a:	ins    BYTE PTR es:[rdi],dx
   14000c04b:	add    BYTE PTR [rax],al
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rax-0x75],ah
   14000c052:	add    BYTE PTR [rax+0x1],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rdx+0x53],dl
   14000c05a:	rex.R push rbx
   14000c05c:	shl    edi,1
   14000c05e:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c060:	rex.WRXB sbb al,0xde
   14000c063:	rex.WR movabs rsi,0x12cc68f5ad3e2f6
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rbx+0x3a],al
   14000c072:	pop    rsp
   14000c073:	jb     0x14000c0da
   14000c075:	pop    rsp
   14000c076:	push   0x64
   14000c078:	imul   esi,DWORD PTR [rdi],0x75
   14000c07b:	xor    BYTE PTR ss:[rcx+rsi*1+0x30],bl
   14000c080:	cmp    BYTE PTR [rcx],dh
   14000c082:	pop    rsp
   14000c083:	(bad)  
   14000c084:	jne    0x14000c0ef
   14000c086:	ins    BYTE PTR es:[rdi],dx
   14000c087:	fs pop rsp
   14000c089:	ja     0x14000c0f4
   14000c08b:	outs   dx,BYTE PTR ds:[rsi]
   14000c08c:	outs   dx,DWORD PTR fs:[rsi]
   14000c08e:	ja     0x14000c103
   14000c090:	sub    eax,0x36646d61
   14000c095:	xor    al,0x5c
   14000c097:	je     0x14000c106
   14000c099:	jo     0x14000c0f7
   14000c09b:	jae    0x14000c110
   14000c09d:	jbe    0x14000c100
   14000c09f:	outs   dx,BYTE PTR gs:[esi]
   14000c0a2:	je     0x14000c100
   14000c0a4:	outs   dx,DWORD PTR ds:[rsi]
   14000c0a5:	(bad)  
   14000c0a6:	push   0x36
   14000c0a8:	xor    al,0x5c
   14000c0aa:	jae    0x14000c11f
   14000c0ac:	jbe    0x14000c10f
   14000c0ae:	outs   dx,BYTE PTR gs:[esi]
   14000c0b1:	je     0x14000c0e1
   14000c0b3:	jo     0x14000c119
   14000c0b5:	(bad)  
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	add    DWORD PTR [rax],eax
	...
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	add    al,dh
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	loopne 0x14000c08a
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	mov    eax,0xc0
	...
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rax+rax*1],al
   14000c0ea:	add    BYTE PTR [rax],al
   14000c0ec:	clc    
   14000c0ed:	rol    BYTE PTR [rax],0x0
	...
   14000c0f8:	and    cl,al
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	rol    QWORD PTR [rax],0x0
   14000c100:	test   al,0xc1
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	add    dl,al
	...
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	add    al,dh
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	add    eax,DWORD PTR [rax]
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	add    BYTE PTR [rax],al
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	(bad)  
   14000c12d:	(bad)  
   14000c12e:	(bad)  
   14000c12f:	inc    DWORD PTR [rax]
   14000c131:	add    BYTE PTR [rax],al
   14000c133:	add    BYTE PTR [rax+0x0],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	loopne 0x14000c0fa
	...
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	sub    al,dh
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	add    al,BYTE PTR [rax]
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	add    BYTE PTR [rax],al
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	(bad)  
   14000c155:	(bad)  
   14000c156:	(bad)  
   14000c157:	inc    DWORD PTR [rax]
   14000c159:	add    BYTE PTR [rax],al
   14000c15b:	add    BYTE PTR [rax+0x0],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	jo     0x14000c123
	...
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	add    eax,DWORD PTR [rax]
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	mov    cl,al
	...
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	rol    QWORD PTR [rax],0x0
   14000c18c:	test   al,0xc1
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	add    dl,al
	...
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	push   0x10000f0
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    BYTE PTR [rax],al
   14000c1b1:	add    BYTE PTR [rax],al
   14000c1b3:	add    bh,bh
   14000c1b5:	(bad)  
   14000c1b6:	(bad)  
   14000c1b7:	inc    DWORD PTR [rax]
   14000c1b9:	add    BYTE PTR [rax],al
   14000c1bb:	add    BYTE PTR [rax+0x0],al
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	rol    cl,1
	...
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	add    al,BYTE PTR [rax]
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	call   0x14000c2a2
   14000c1e1:	add    BYTE PTR [rax],al
   14000c1e3:	add    BYTE PTR [rax],al
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    BYTE PTR [rax+0xc1],ch
   14000c1ed:	ret    0x0
	...
   14000c200:	nop
   14000c201:	lock add BYTE PTR [rax],al
   14000c204:	add    BYTE PTR [rax],al
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	or     BYTE PTR [rax],al
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	(bad)  
   14000c20d:	(bad)  
   14000c20e:	(bad)  
   14000c20f:	inc    DWORD PTR [rax]
   14000c211:	add    BYTE PTR [rax],al
   14000c213:	add    BYTE PTR [rax+0x0],al
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	sub    dl,al
	...
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	add    DWORD PTR [rax],eax
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	rex ret 0x0
	...
   14000c240:	push   rax
   14000c241:	ret    0x0
	...
   14000c250:	nop
   14000c251:	lock add BYTE PTR [rax],al
	...
   14000c25c:	(bad)  
   14000c25d:	(bad)  
   14000c25e:	(bad)  
   14000c25f:	inc    DWORD PTR [rax]
   14000c261:	add    BYTE PTR [rax],al
   14000c263:	add    BYTE PTR [rax+0x0],al
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	sub    dl,al
	...
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	add    DWORD PTR [rax],eax
	...
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	loopne 0x14000c276
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	movabs al,ds:0xc2780000c2
	...
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rbx],al
   14000c2a9:	add    BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rax+0xc2],bh
   14000c2b1:	add    BYTE PTR [rax],al
   14000c2b3:	add    BYTE PTR [rax],al
   14000c2b5:	add    BYTE PTR [rax],al
   14000c2b7:	add    al,bl
   14000c2b9:	ret    0x0
   14000c2bc:	add    bl,al
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	pop    rax
   14000c2c1:	ret    
	...
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	loopne 0x14000c2ca
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	add    al,BYTE PTR [rax]
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	add    BYTE PTR [rax],al
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	(bad)  
   14000c2e5:	(bad)  
   14000c2e6:	(bad)  
   14000c2e7:	inc    DWORD PTR [rax]
   14000c2e9:	add    BYTE PTR [rax],al
   14000c2eb:	add    BYTE PTR [rax+0x0],al
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	movabs al,ds:0xc2
   14000c2f9:	add    BYTE PTR [rax],al
   14000c2fb:	add    BYTE PTR [rax],al
   14000c2fd:	add    BYTE PTR [rax],al
   14000c2ff:	add    BYTE PTR [rax],cl
   14000c301:	icebp  
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	add    DWORD PTR [rax],eax
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	add    BYTE PTR [rax],al
   14000c30a:	add    BYTE PTR [rax],al
   14000c30c:	(bad)  
   14000c30d:	(bad)  
   14000c30e:	(bad)  
   14000c30f:	inc    DWORD PTR [rax]
   14000c311:	add    BYTE PTR [rax],al
   14000c313:	add    BYTE PTR [rax+0x0],al
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	sub    bl,al
	...
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	add    al,BYTE PTR [rax]
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	rex ret 
	...
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	add    bl,al
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	pop    rax
   14000c345:	ret    
	...
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	xor    cl,dh
	...
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	(bad)  
   14000c365:	(bad)  
   14000c366:	(bad)  
   14000c367:	inc    DWORD PTR [rax]
   14000c369:	add    BYTE PTR [rax],al
   14000c36b:	add    BYTE PTR [rax+0x0],al
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	add    bl,0x0
	...
   14000c387:	add    BYTE PTR [rcx],al
   14000c389:	add    BYTE PTR [rax],al
   14000c38b:	add    BYTE PTR [rax+0xc3],bl
   14000c391:	add    BYTE PTR [rax],al
   14000c393:	add    BYTE PTR [rax],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    BYTE PTR [rax-0x3d],bl
	...
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	add    DWORD PTR [rax],eax
	...
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	js     0x14000c3a7
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	rol    bl,1
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	test   al,0xc3
	...
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	add    DWORD PTR [rax],eax
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	call   0x14000c4a4
   14000c3e1:	add    BYTE PTR [rax],al
   14000c3e3:	add    BYTE PTR [rax],al
   14000c3e5:	add    BYTE PTR [rax],al
   14000c3e7:	add    al,bh
   14000c3e9:	ret    
	...
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	js     0x14000c3eb
	...
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	(bad)  
   14000c405:	(bad)  
   14000c406:	(bad)  
   14000c407:	inc    DWORD PTR [rax]
   14000c409:	add    BYTE PTR [rax],al
   14000c40b:	add    BYTE PTR [rax+0x0],al
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	rol    bl,1
	...
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	add    DWORD PTR [rax+rcx*1],edx
   14000c443:	add    BYTE PTR [rsp+riz*2],dl
   14000c446:	or     al,0x0
   14000c448:	adc    al,0x54
   14000c44a:	or     eax,DWORD PTR [rax]
   14000c44c:	adc    al,0x34
   14000c44e:	or     al,BYTE PTR [rax]
   14000c450:	adc    al,0x72
   14000c452:	adc    BYTE PTR [rax+0x1],dh
   14000c455:	or     al,0x4
   14000c457:	add    BYTE PTR [rsp+rsi*1],cl
   14000c45a:	or     DWORD PTR [rax],eax
   14000c45c:	or     al,0x52
   14000c45e:	or     BYTE PTR [rax+0x1],dh
   14000c461:	add    al,0x1
   14000c463:	add    BYTE PTR [rdx+rax*2],al
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	sbb    DWORD PTR [rip+0x742c000d],edi        # 0x1b42cc47b
   14000c46e:	(bad)  
   14000c46f:	add    ch,BYTE PTR [rsp+riz*2]
   14000c472:	(bad)  
   14000c473:	add    ch,BYTE PTR [rsp+rsi*1]
   14000c476:	sbb    eax,0x16012c02
   14000c47b:	add    bl,BYTE PTR [rax]
   14000c47d:	lock (bad) 
   14000c47f:	loopne 0x14000c495
   14000c481:	rcl    BYTE PTR [rdx],1
   14000c483:	rcl    BYTE PTR [rax],0x50
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	in     al,0x7f
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	movabs al,ds:0xf2ffffffff000010
   14000c495:	pop    QWORD PTR [rax]
   14000c497:	add    BYTE PTR [rax],al
   14000c499:	add    BYTE PTR [rax],al
   14000c49b:	add    BYTE PTR [rdx],al
   14000c49d:	nop
	...
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	add    BYTE PTR [rax],al
	...
   14000c4bb:	add    BYTE PTR [rdx],dl
   14000c4bd:	nop
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	cmp    BYTE PTR [rax],al
   14000c4c2:	add    BYTE PTR [rax],al
   14000c4c4:	add    al,BYTE PTR [rax]
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	add    al,BYTE PTR [rax]
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	add    eax,DWORD PTR [rax]
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	add    DWORD PTR [rax],eax
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	mov    al,0xc4
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	sbb    DWORD PTR [rcx],edx
   14000c4da:	add    al,0x0
   14000c4dc:	or     BYTE PTR [rdx+0x4],dh
   14000c4df:	jo     0x14000c4e4
   14000c4e1:	(bad)  
   14000c4e2:	add    dh,BYTE PTR [rax]
   14000c4e4:	jp     0x14000c565
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	rex.W stos BYTE PTR es:[rdi],al
   14000c4ea:	add    BYTE PTR [rax],al
   14000c4ec:	sbb    DWORD PTR [rdx],ecx
   14000c4ee:	add    al,BYTE PTR [rax]
   14000c4f0:	or     dh,BYTE PTR [rdx]
   14000c4f2:	(bad)  
   14000c4f3:	push   rax
   14000c4f4:	jp     0x14000c575
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	rex.W stos BYTE PTR es:[rdi],al
   14000c4fa:	add    BYTE PTR [rax],al
   14000c4fc:	mov    al,0x14
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	(bad)  
   14000c501:	(bad)  
   14000c502:	(bad)  
   14000c503:	call   rbp
   14000c505:	adc    al,0x0
   14000c507:	add    BYTE PTR [rax],al
   14000c509:	add    BYTE PTR [rax],al
   14000c50b:	add    bh,ah
   14000c50d:	adc    al,0x0
   14000c50f:	add    BYTE PTR [rcx],al
   14000c511:	add    BYTE PTR [rax],al
   14000c513:	add    bh,dh
   14000c515:	adc    al,0x0
   14000c517:	add    BYTE PTR [rax],al
   14000c519:	add    BYTE PTR [rax],al
   14000c51b:	add    BYTE PTR [rdi],dh
   14000c51d:	adc    eax,0x20000
   14000c522:	add    BYTE PTR [rax],al
   14000c524:	je     0x14000c53b
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	(bad)  
   14000c529:	(bad)  
   14000c52a:	(bad)  
   14000c52b:	(bad)  
   14000c52c:	mov    ebx,0x2000015
   14000c531:	add    BYTE PTR [rax],al
   14000c533:	add    bh,bl
   14000c535:	adc    eax,0x0
   14000c53a:	add    BYTE PTR [rax],al
   14000c53c:	(bad)  
   14000c53d:	adc    eax,0xffff0000
   14000c542:	(bad)  
   14000c543:	call   QWORD PTR [rdx]
   14000c545:	nop
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	add    BYTE PTR [rax],al
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	(bad)  
   14000c54d:	(bad)  
   14000c54e:	(bad)  
   14000c54f:	inc    DWORD PTR [rdx-0x70]
   14000c552:	add    BYTE PTR [rax],al
   14000c554:	add    BYTE PTR [rax],al
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	push   rdx
   14000c559:	nop
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	add    BYTE PTR [rax],al
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	(bad)  
   14000c561:	nop
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	add    al,BYTE PTR [rax]
   14000c566:	add    BYTE PTR [rax],al
   14000c568:	jb     0x14000c4fa
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	add    al,BYTE PTR [rax]
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	(bad)  
   14000c571:	nop
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	add    al,BYTE PTR [rax]
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	add    BYTE PTR [rax],al
   14000c57a:	add    BYTE PTR [rax],al
   14000c57c:	add    al,BYTE PTR [rax]
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	add    BYTE PTR [rax],al
   14000c582:	add    BYTE PTR [rax],al
   14000c584:	add    BYTE PTR [rax],al
	...
   14000c58f:	add    BYTE PTR [rdx+0x58000090],dl
   14000c595:	add    BYTE PTR [rax],al
   14000c597:	add    BYTE PTR [rip+0x5000000],al        # 0x14500c59d
   14000c59d:	add    BYTE PTR [rax],al
   14000c59f:	add    BYTE PTR [rsi],al
   14000c5a1:	add    BYTE PTR [rax],al
   14000c5a3:	add    BYTE PTR [rcx],al
   14000c5a5:	add    BYTE PTR [rax],al
   14000c5a7:	add    BYTE PTR [rbp+rax*8+0x51190000],al
   14000c5ae:	or     eax,0x2bc43f00
   14000c5b3:	add    dh,BYTE PTR [rdi]
   14000c5b5:	je     0x14000c5e1
   14000c5b7:	add    ch,BYTE PTR [rdi]
   14000c5b9:	sub    DWORD PTR fs:[rdx],eax
   14000c5bc:	(bad)  
   14000c5bd:	xor    al,0x28
   14000c5bf:	add    dl,BYTE PTR [rbx]
   14000c5c1:	add    DWORD PTR [rdx+rax*1],esp
   14000c5c4:	(bad)  
   14000c5c5:	lock add al,0xe0
   14000c5c8:	add    dl,al
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	lods   al,BYTE PTR ds:[rsi]
   14000c5cd:	add    BYTE PTR [rax],0x0
   14000c5d0:	jo     0x14000c57c
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	adc    edx,DWORD PTR [rcx]
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	sbb    DWORD PTR [rdx],ecx
   14000c5da:	add    al,BYTE PTR [rax]
   14000c5dc:	or     dh,BYTE PTR [rdx+0x6]
   14000c5df:	push   rax
   14000c5e0:	jp     0x14000c661
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	jo     0x14000c590
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	push   rax
   14000c5e9:	(bad)  
   14000c5ea:	add    BYTE PTR [rax],al
   14000c5ec:	(bad)  
   14000c5ed:	(bad)  
   14000c5ee:	(bad)  
   14000c5ef:	push   QWORD PTR [rdi+0x18]
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    ah,cl
   14000c5f9:	sbb    BYTE PTR [rax],al
   14000c5fb:	add    BYTE PTR [rcx],al
   14000c5fd:	add    BYTE PTR [rax],al
   14000c5ff:	add    bh,bl
   14000c601:	sbb    BYTE PTR [rax],al
   14000c603:	add    BYTE PTR [rax],al
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	add    BYTE PTR [rcx+0x19],cl
   14000c60a:	add    BYTE PTR [rax],al
   14000c60c:	(bad)  
   14000c60d:	(bad)  
   14000c60e:	(bad)  
   14000c60f:	call   QWORD PTR [rcx+0x19]
   14000c615:	add    BYTE PTR [rax],al
   14000c617:	add    BYTE PTR [rax-0xffffe7],dh
   14000c61d:	(bad)  
   14000c61e:	(bad)  
   14000c61f:	push   QWORD PTR [rdx+0x19]
   14000c625:	add    BYTE PTR [rax],al
   14000c627:	add    BYTE PTR [rsi],dl
   14000c629:	sbb    al,BYTE PTR [rax]
   14000c62b:	add    bh,bh
   14000c62d:	(bad)  
   14000c62e:	(bad)  
   14000c62f:	call   FWORD PTR [rbp+0x1a]
   14000c632:	add    BYTE PTR [rax],al
   14000c634:	add    BYTE PTR [rax],al
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	mov    DWORD PTR [rdx],ebx
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	(bad)  
   14000c63d:	(bad)  
   14000c63e:	(bad)  
   14000c63f:	dec    esi
   14000c641:	sbb    al,BYTE PTR [rax]
   14000c643:	add    BYTE PTR [rax],al
   14000c645:	add    BYTE PTR [rax],al
   14000c647:	add    BYTE PTR [rcx],dh
   14000c649:	sbb    eax,DWORD PTR [rax]
   14000c64b:	add    bh,bh
   14000c64d:	(bad)  
   14000c64e:	(bad)  
   14000c64f:	push   QWORD PTR [rsi]
   14000c651:	sbb    eax,DWORD PTR [rax]
   14000c653:	add    BYTE PTR [rax],al
   14000c655:	add    BYTE PTR [rax],al
   14000c657:	add    BYTE PTR [rbx+rbx*1+0x0],ch
   14000c65b:	add    BYTE PTR [rdx],al
   14000c65d:	add    BYTE PTR [rax],al
   14000c65f:	add    BYTE PTR [rdi+0x300001b],al
   14000c665:	add    BYTE PTR [rax],al
   14000c667:	add    BYTE PTR [rdx+0x200001b],bl
   14000c66d:	add    BYTE PTR [rax],al
   14000c66f:	add    bh,dl
   14000c671:	sbb    eax,DWORD PTR [rax]
   14000c673:	add    BYTE PTR [rax+rax*1],al
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	(bad)  
   14000c679:	sbb    eax,DWORD PTR [rax]
   14000c67b:	add    BYTE PTR [rdx],al
   14000c67d:	add    BYTE PTR [rax],al
   14000c67f:	add    BYTE PTR [rip+0x500001c],dh        # 0x14500c6a1
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rbx+0x1c],dl
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    al,bl
   14000c691:	sbb    al,0x0
   14000c693:	add    bh,bh
   14000c695:	(bad)  
   14000c696:	(bad)  
   14000c697:	jmp    QWORD PTR [rdx]
   14000c699:	sbb    eax,0x50000
   14000c69e:	add    BYTE PTR [rax],al
   14000c6a0:	sub    eax,0x1d
   14000c6a5:	add    BYTE PTR [rax],al
   14000c6a7:	add    BYTE PTR [rdx+0x1d],dh
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	(bad)  
   14000c6ad:	(bad)  
   14000c6ae:	(bad)  
   14000c6af:	(bad)  
   14000c6b0:	mov    ecx,0x500001d
   14000c6b5:	add    BYTE PTR [rax],al
   14000c6b7:	add    BYTE PTR [rdx],cl
   14000c6b9:	(bad)  
   14000c6ba:	add    BYTE PTR [rax],al
   14000c6bc:	add    BYTE PTR [rax],al
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	rex.WRXB (bad) 
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	(bad)  
   14000c6c5:	(bad)  
   14000c6c6:	(bad)  
   14000c6c7:	call   FWORD PTR [rcx+0x500001e]
   14000c6cd:	add    BYTE PTR [rax],al
   14000c6cf:	add    bh,al
   14000c6d1:	(bad)  
   14000c6d2:	add    BYTE PTR [rax],al
   14000c6d4:	add    BYTE PTR [rax],al
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	or     al,0x1f
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	(bad)  
   14000c6dd:	(bad)  
   14000c6de:	(bad)  
   14000c6df:	call   QWORD PTR [rsi+0x1f]
   14000c6e2:	add    BYTE PTR [rax],al
   14000c6e4:	add    eax,0x79000000
   14000c6e9:	(bad)  
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	add    BYTE PTR [rax],al
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	mov    esi,0xff00001f
   14000c6f5:	(bad)  
   14000c6f6:	(bad)  
   14000c6f7:	dec    DWORD PTR [rax]
   14000c6f9:	and    BYTE PTR [rax],al
   14000c6fb:	add    BYTE PTR [rip+0x2a000000],al        # 0x16a00c701
   14000c701:	and    BYTE PTR [rax],al
   14000c703:	add    BYTE PTR [rax],al
   14000c705:	add    BYTE PTR [rax],al
   14000c707:	add    BYTE PTR [rdi+0x20],ch
   14000c70a:	add    BYTE PTR [rax],al
   14000c70c:	(bad)  
   14000c70d:	(bad)  
   14000c70e:	(bad)  
   14000c70f:	(bad)  
   14000c710:	mov    ecx,0x5000020
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    bh,bl
   14000c719:	and    BYTE PTR [rax],al
   14000c71b:	add    BYTE PTR [rax],al
   14000c71d:	add    BYTE PTR [rax],al
   14000c71f:	add    BYTE PTR [rcx+riz*1],ah
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	(bad)  
   14000c725:	(bad)  
   14000c726:	(bad)  
   14000c727:	jmp    FWORD PTR [rsi+0x21]
   14000c72a:	add    BYTE PTR [rax],al
   14000c72c:	add    eax,0x7c000000
   14000c731:	and    DWORD PTR [rax],eax
   14000c733:	add    BYTE PTR [rax],al
   14000c735:	add    BYTE PTR [rax],al
   14000c737:	add    cl,al
   14000c739:	and    DWORD PTR [rax],eax
   14000c73b:	add    bh,bh
   14000c73d:	(bad)  
   14000c73e:	(bad)  
   14000c73f:	dec    DWORD PTR [rbx]
   14000c741:	and    al,BYTE PTR [rax]
   14000c743:	add    BYTE PTR [rip+0x45000000],al        # 0x18500c749
   14000c749:	and    al,BYTE PTR [rax]
   14000c74b:	add    BYTE PTR [rax],al
   14000c74d:	add    BYTE PTR [rax],al
   14000c74f:	add    BYTE PTR [rdx-0xffffde],cl
   14000c755:	(bad)  
   14000c756:	(bad)  
   14000c757:	call   rsp
   14000c759:	and    al,BYTE PTR [rax]
   14000c75b:	add    BYTE PTR [rip+0xfffffffff4000000],al        # 0x13400c761
   14000c761:	and    al,BYTE PTR [rax]
   14000c763:	add    BYTE PTR [rax],al
   14000c765:	add    BYTE PTR [rax],al
   14000c767:	add    BYTE PTR [rcx],bh
   14000c769:	and    eax,DWORD PTR [rax]
   14000c76b:	add    bh,bh
   14000c76d:	(bad)  
   14000c76e:	(bad)  
   14000c76f:	inc    DWORD PTR [rbx+0x5000023]
   14000c775:	add    BYTE PTR [rax],al
   14000c777:	add    BYTE PTR [rdi+0x23],ch
   14000c77d:	add    BYTE PTR [rax],al
   14000c77f:	add    ah,dh
   14000c781:	and    eax,DWORD PTR [rax]
   14000c783:	add    bh,bh
   14000c785:	(bad)  
   14000c786:	(bad)  
   14000c787:	(bad)  
   14000c788:	ds and al,0x0
   14000c78b:	add    BYTE PTR [rip+0x62000000],al        # 0x1a200c791
   14000c791:	and    al,0x0
   14000c793:	add    BYTE PTR [rax],al
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    BYTE PTR [rdi-0xffffdc],ah
   14000c79d:	(bad)  
   14000c79e:	(bad)  
   14000c79f:	push   rcx
   14000c7a1:	and    al,0x0
   14000c7a3:	add    BYTE PTR [rip+0x18000000],al        # 0x15800c7a9
   14000c7a9:	and    eax,0x20000
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	rex.XB and eax,0x0
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	and    DWORD PTR [rip+0xffffffffffff0000],0xffffffff        # 0x13fffc7bf
   14000c7bf:	call   QWORD PTR [rdx+0x90]
   14000c7c5:	add    BYTE PTR [rax],al
   14000c7c7:	add    BYTE PTR [rdi+0x6000090],bl
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rsi+0x90],ah
   14000c7d5:	add    BYTE PTR [rax],al
   14000c7d7:	add    BYTE PTR [rcx],dl
   14000c7d9:	sbb    DWORD PTR [rsi],eax
   14000c7db:	add    BYTE PTR [rcx],bl
   14000c7dd:	or     DWORD PTR fs:[rax],eax
   14000c7e0:	adc    al,0x34
   14000c7e2:	or     BYTE PTR [rax],al
   14000c7e4:	(bad)  
   14000c7e5:	push   rdx
   14000c7e6:	add    dh,BYTE PTR [rax+0x7a]
   14000c7e9:	jg     0x14000c7eb
   14000c7eb:	add    BYTE PTR [rax-0x55],ah
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	(bad)  
   14000c7f1:	(bad)  
   14000c7f2:	(bad)  
   14000c7f3:	jmp    rsi
   14000c7f5:	pop    QWORD PTR [rax]
   14000c7f7:	add    BYTE PTR [rsi+riz*1-0x10000],bh
   14000c7fe:	(bad)  
   14000c7ff:	(bad)  
   14000c800:	in     eax,dx
   14000c801:	add    BYTE PTR es:[rax],al
   14000c804:	add    BYTE PTR [rax],al
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	and    DWORD PTR [rdi],esp
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	(bad)  
   14000c80d:	(bad)  
   14000c80e:	(bad)  
   14000c80f:	inc    DWORD PTR [rcx]
   14000c811:	add    al,0x1
   14000c813:	add    BYTE PTR [rdx+rax*2],al
   14000c816:	add    BYTE PTR [rax],al
   14000c818:	add    DWORD PTR [rax+rcx*1],edx
   14000c81b:	add    BYTE PTR [rsp+riz*2],dl
   14000c81e:	adc    BYTE PTR [rax],al
   14000c820:	adc    al,0x54
   14000c822:	lldt   WORD PTR [rsp+rsi*1]
   14000c826:	(bad)  
   14000c827:	add    BYTE PTR [rdx+rsi*4],dl
   14000c82a:	adc    BYTE PTR [rax+0x1],dh
   14000c82d:	clts   
   14000c82f:	add    BYTE PTR [rdi],cl
   14000c831:	or     DWORD PTR fs:[rax],eax
   14000c834:	sysenter 
   14000c836:	or     BYTE PTR [rax],al
   14000c838:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000c83b:	jo     0x14000c83e
   14000c83d:	or     al,BYTE PTR [rax+rax*1]
   14000c840:	or     dh,BYTE PTR [rdi+rcx*1]
   14000c843:	add    BYTE PTR [rdx],cl
   14000c845:	mov    dl,0x6
   14000c847:	jo     0x14000c84a
   14000c849:	sbb    DWORD PTR [rdx],ecx
   14000c84b:	add    BYTE PTR [rcx],bl
   14000c84d:	je     0x14000c85a
   14000c84f:	add    BYTE PTR [rcx],bl
   14000c851:	or     al,BYTE PTR fs:[rax]
   14000c854:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000c858:	sbb    DWORD PTR [rax+rcx*1],esi
   14000c85b:	add    BYTE PTR [rcx],bl
   14000c85d:	push   rdx
   14000c85e:	adc    eax,0xa1901c0
   14000c863:	add    BYTE PTR [rcx],bl
   14000c865:	je     0x14000c870
   14000c867:	add    BYTE PTR [rcx],bl
   14000c869:	or     BYTE PTR fs:[rax],al
   14000c86c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000c870:	sbb    DWORD PTR [rsi+rax*1],esi
   14000c873:	add    BYTE PTR [rcx],bl
   14000c875:	xor    dl,BYTE PTR [rip+0xa1801d0]        # 0x14a18ca4b
   14000c87b:	add    BYTE PTR [rax],bl
   14000c87d:	or     al,BYTE PTR fs:[rax]
   14000c880:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000c884:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c887:	add    BYTE PTR [rax],bl
   14000c889:	xor    dl,BYTE PTR [rax+rdx*8]
   14000c88c:	adc    al,al
   14000c88e:	adc    BYTE PTR [rax+0x19],dh
   14000c891:	and    eax,0x34130005
   14000c896:	or     al,BYTE PTR [rbx+rdx*1]
   14000c899:	add    DWORD PTR [rsi],eax
   14000c89b:	add    al,0x6
   14000c89d:	jo     0x14000c89f
   14000c89f:	add    ah,ah
   14000c8a1:	jg     0x14000c8a3
   14000c8a3:	add    BYTE PTR [rax],ah
   14000c8a5:	and    BYTE PTR [rax],al
   14000c8a7:	add    BYTE PTR [rcx],bl
   14000c8a9:	sub    BYTE PTR [rdi],al
   14000c8ab:	add    BYTE PTR [rdi],dl
   14000c8ad:	xor    al,0x56
   14000c8af:	add    BYTE PTR [rdi],dl
   14000c8b1:	add    DWORD PTR [rax+0x0],edx
   14000c8b4:	or     BYTE PTR [rax+0x7],dh
   14000c8b7:	(bad)  
   14000c8b8:	(bad)  
   14000c8b9:	push   rax
   14000c8ba:	add    BYTE PTR [rax],al
   14000c8bc:	in     al,0x7f
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	jo     0x14000c8c4
   14000c8c2:	add    BYTE PTR [rax],al
   14000c8c4:	add    DWORD PTR [rax+rcx*1],edx
   14000c8c7:	add    BYTE PTR [rsp+riz*2],dl
   14000c8ca:	or     BYTE PTR [rax],al
   14000c8cc:	adc    al,0x54
   14000c8ce:	(bad)  
   14000c8cf:	add    BYTE PTR [rsp+rsi*1],dl
   14000c8d2:	(bad)  
   14000c8d3:	add    BYTE PTR [rdx+rsi*1],dl
   14000c8d6:	adc    BYTE PTR [rax+0x1],dh
   14000c8d9:	(bad)  
   14000c8da:	add    al,BYTE PTR [rax]
   14000c8dc:	(bad)  
   14000c8dd:	xor    al,BYTE PTR [rdx]
   14000c8df:	xor    BYTE PTR [rcx],al
   14000c8e1:	clts   
   14000c8e3:	add    BYTE PTR [rdi],cl
   14000c8e5:	fs (bad) 
   14000c8e7:	add    BYTE PTR [rdi],cl
   14000c8e9:	xor    al,0x6
   14000c8eb:	add    BYTE PTR [rdi],cl
   14000c8ed:	xor    cl,BYTE PTR [rbx]
   14000c8ef:	jo     0x14000c90a
   14000c8f1:	xor    ecx,DWORD PTR [rbx]
   14000c8f3:	add    BYTE PTR [rip+0x19001f34],ah        # 0x15900e82d
   14000c8f9:	add    DWORD PTR [rax+rax*1],edx
   14000c8fc:	(bad)  
   14000c8fd:	lock or al,0xe0
   14000c900:	or     dl,al
   14000c902:	or     al,al
   14000c904:	(bad)  
   14000c905:	jo     0x14000c90c
   14000c907:	(bad)  
   14000c908:	add    al,0x50
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	lods   al,BYTE PTR ds:[rsi]
   14000c90d:	add    BYTE PTR [rax],0x0
   14000c910:	loopne 0x14000c8c0
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	xchg   edx,eax
   14000c915:	add    BYTE PTR [rax],al
   14000c917:	add    bh,bh
   14000c919:	(bad)  
   14000c91a:	(bad)  
   14000c91b:	call   QWORD PTR [rax+0x8e]
   14000c921:	add    BYTE PTR [rax],al
   14000c923:	add    BYTE PTR [rax+0x8e],ah
   14000c929:	add    BYTE PTR [rax],al
   14000c92b:	add    BYTE PTR [rax+0x8e],dh
   14000c931:	add    BYTE PTR [rax],al
   14000c933:	add    al,al
   14000c935:	mov    es,WORD PTR [rax]
   14000c937:	add    BYTE PTR [rax],bh
   14000c939:	add    BYTE PTR ss:[rax],al
   14000c93c:	(bad)  
   14000c93d:	(bad)  
   14000c93e:	(bad)  
   14000c93f:	call   rdx
   14000c941:	add    BYTE PTR ss:[rax],al
   14000c944:	add    BYTE PTR [rax],al
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	xlat   BYTE PTR ds:[rbx]
   14000c949:	add    BYTE PTR ss:[rax],al
   14000c94c:	(bad)  
   14000c94d:	(bad)  
   14000c94e:	(bad)  
   14000c94f:	(bad)  
   14000c950:	jmp    0x14000c98b
   14000c955:	add    BYTE PTR [rax],al
   14000c957:	add    BYTE PTR [rax+0x37],bh
   14000c95a:	add    BYTE PTR [rax],al
   14000c95c:	add    DWORD PTR [rax],eax
   14000c95e:	add    BYTE PTR [rax],al
   14000c960:	cdq    
   14000c961:	(bad)  
   14000c962:	add    BYTE PTR [rax],al
   14000c964:	add    BYTE PTR [rax],al
   14000c966:	add    BYTE PTR [rax],al
   14000c968:	sbb    eax,0x2000038
   14000c96d:	add    BYTE PTR [rax],al
   14000c96f:	add    BYTE PTR [rsi],bh
   14000c971:	cmp    BYTE PTR [rax],al
   14000c973:	add    BYTE PTR [rax],al
   14000c975:	add    BYTE PTR [rax],al
   14000c977:	add    BYTE PTR [rax+0x39],dl
   14000c97a:	add    BYTE PTR [rax],al
   14000c97c:	add    eax,DWORD PTR [rax]
   14000c97e:	add    BYTE PTR [rax],al
   14000c980:	imul   edi,DWORD PTR [rcx],0x0
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	icebp  
   14000c989:	cmp    DWORD PTR [rax],eax
   14000c98b:	add    bh,bh
   14000c98d:	(bad)  
   14000c98e:	(bad)  
   14000c98f:	call   FWORD PTR [rcx]
   14000c991:	or     al,BYTE PTR [rdx]
   14000c993:	add    BYTE PTR [rdx],cl
   14000c995:	xor    al,BYTE PTR [rsi]
   14000c997:	push   rax
   14000c998:	jp     0x14000ca19
   14000c99a:	add    BYTE PTR [rax],al
   14000c99c:	(bad)  
   14000c99d:	scas   eax,DWORD PTR es:[rdi]
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	sbb    DWORD PTR [rdi],esp
   14000c9a2:	or     BYTE PTR [rax],al
   14000c9a4:	(bad)  
   14000c9a5:	mov    dl,0x1a
   14000c9a7:	lock sbb al,ah
   14000c9aa:	(bad)  
   14000c9ab:	rcl    BYTE PTR [rax+rax*8],1
   14000c9ae:	adc    dh,BYTE PTR [rax+0x11]
   14000c9b1:	(bad)  
   14000c9b2:	adc    BYTE PTR [rax],dh
   14000c9b4:	jp     0x14000ca35
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	(bad)  
   14000c9b9:	scas   eax,DWORD PTR es:[rdi]
	...
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	add    DWORD PTR [rax],eax
   14000c9c6:	add    BYTE PTR [rax],al
   14000c9c8:	add    DWORD PTR [rax],eax
   14000c9ca:	add    BYTE PTR [rax],al
   14000c9cc:	clc    
   14000c9cd:	leave  
   14000c9ce:	add    BYTE PTR [rax],al
   14000c9d0:	add    eax,DWORD PTR [rax]
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	add    eax,DWORD PTR [rax]
   14000c9d6:	add    BYTE PTR [rax],al
   14000c9d8:	add    al,0x0
   14000c9da:	add    BYTE PTR [rax],al
   14000c9dc:	add    DWORD PTR [rax],eax
   14000c9de:	add    BYTE PTR [rax],al
   14000c9e0:	in     al,0xc9
   14000c9e2:	add    BYTE PTR [rax],al
   14000c9e4:	add    BYTE PTR [rax],al
	...
   14000c9ef:	add    ah,bh
   14000c9f1:	mov    es,WORD PTR [rax]
   14000c9f3:	add    BYTE PTR [rax],bh
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    BYTE PTR [rax+0x0],al
	...
   14000ca02:	add    BYTE PTR [rax],al
   14000ca04:	int3   
   14000ca05:	mov    es,WORD PTR [rax]
   14000ca07:	add    BYTE PTR [rax],bh
   14000ca09:	add    BYTE PTR [rax],al
   14000ca0b:	add    bh,bh
   14000ca0d:	(bad)  
   14000ca0e:	(bad)  
   14000ca0f:	inc    DWORD PTR [rax]
   14000ca11:	add    BYTE PTR [rax],al
   14000ca13:	add    bh,bh
   14000ca15:	(bad)  
   14000ca16:	(bad)  
   14000ca17:	inc    DWORD PTR [rax]
   14000ca19:	add    BYTE PTR [rax],al
   14000ca1b:	add    bh,bh
   14000ca1d:	(bad)  
   14000ca1e:	(bad)  
   14000ca1f:	(bad)  
   14000ca20:	in     al,dx
   14000ca21:	mov    es,WORD PTR [rax]
   14000ca23:	add    BYTE PTR [rdx],al
   14000ca25:	add    BYTE PTR [rax],al
   14000ca27:	add    BYTE PTR [rax],al
   14000ca29:	add    BYTE PTR [rax],al
   14000ca2b:	add    BYTE PTR [rdx],al
   14000ca2d:	add    BYTE PTR [rax],al
   14000ca2f:	add    BYTE PTR [rax],al
   14000ca31:	add    BYTE PTR [rax],al
   14000ca33:	add    BYTE PTR [rdx],al
   14000ca35:	add    BYTE PTR [rax],al
   14000ca37:	add    BYTE PTR [rdi+rcx*4],bl
   14000ca3a:	add    BYTE PTR [rax],al
   14000ca3c:	int3   
   14000ca3d:	cmp    al,BYTE PTR [rax]
   14000ca3f:	add    bh,bh
   14000ca41:	(bad)  
   14000ca42:	(bad)  
   14000ca43:	jmp    FWORD PTR [rbx]
   14000ca45:	cmp    eax,DWORD PTR [rax]
   14000ca47:	add    BYTE PTR [rax],al
   14000ca49:	add    BYTE PTR [rax],al
   14000ca4b:	add    BYTE PTR [rbx+0x3b],cl
   14000ca4e:	add    BYTE PTR [rax],al
   14000ca50:	(bad)  
   14000ca51:	(bad)  
   14000ca52:	(bad)  
   14000ca53:	push   QWORD PTR [rbp+0x3b]
   14000ca56:	add    BYTE PTR [rax],al
   14000ca58:	add    al,BYTE PTR [rax]
   14000ca5a:	add    BYTE PTR [rax],al
   14000ca5c:	cwde   
   14000ca5d:	cmp    eax,DWORD PTR [rax]
   14000ca5f:	add    BYTE PTR [rbx],al
   14000ca61:	add    BYTE PTR [rax],al
   14000ca63:	add    BYTE PTR [rbx+rdi*1+0x20000],dh
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	in     al,0x3b
   14000ca6e:	add    BYTE PTR [rax],al
   14000ca70:	add    eax,0xc6000000
   14000ca75:	cmp    al,0x0
   14000ca77:	add    BYTE PTR [rdx],al
   14000ca79:	add    BYTE PTR [rax],al
   14000ca7b:	add    bh,cl
   14000ca7d:	cmp    al,0x0
   14000ca7f:	add    bh,bh
   14000ca81:	(bad)  
   14000ca82:	(bad)  
   14000ca83:	dec    esp
   14000ca85:	mov    es,WORD PTR [rax]
   14000ca87:	add    BYTE PTR [rax],al
   14000ca89:	add    BYTE PTR [rax],al
   14000ca8b:	add    BYTE PTR [rcx],dl
   14000ca8d:	(bad)  
   14000ca8e:	or     BYTE PTR [rax],al
   14000ca90:	(bad)  
   14000ca91:	or     eax,DWORD PTR fs:[rax]
   14000ca94:	sbb    DWORD PTR [rdx+rcx*1+0x0],edx
   14000ca98:	adc    al,0x34
   14000ca9a:	or     BYTE PTR [rax],al
   14000ca9c:	(bad)  
   14000ca9d:	push   rdx
   14000ca9e:	add    dh,BYTE PTR [rax+0x7a]
   14000caa1:	jg     0x14000caa3
   14000caa3:	add    BYTE PTR [rax-0xffff51],dl
   14000caa9:	(bad)  
   14000caaa:	(bad)  
   14000caab:	jmp    FWORD PTR [rax]
   14000caad:	pop    QWORD PTR [rax]
   14000caaf:	add    al,dh
   14000cab1:	cmp    al,0x0
   14000cab3:	add    bh,bh
   14000cab5:	(bad)  
   14000cab6:	(bad)  
   14000cab7:	push   QWORD PTR [rcx]
   14000cab9:	cmp    eax,0x0
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	push   rdi
   14000cac1:	cmp    eax,0xffff0000
   14000cac6:	(bad)  
   14000cac7:	call   FWORD PTR [rcx]
   14000cac9:	or     al,BYTE PTR [rdx]
   14000cacb:	add    BYTE PTR [rdx],cl
   14000cacd:	push   rdx
   14000cace:	(bad)  
   14000cacf:	push   rax
   14000cad0:	jp     0x14000cb51
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	shr    BYTE PTR [rdi+0x34190000],0x9
   14000cadb:	add    BYTE PTR [rcx],bl
   14000cadd:	add    DWORD PTR [rdx],esi
   14000cadf:	add    al,0xc
   14000cae1:	lock or ah,al
   14000cae4:	or     al,dl
   14000cae6:	(bad)  
   14000cae7:	rol    BYTE PTR [rax+rsi*2],0x3
   14000caeb:	(bad)  
   14000caec:	add    dh,BYTE PTR [rax]
   14000caee:	add    BYTE PTR [rax],al
   14000caf0:	lods   al,BYTE PTR ds:[rsi]
   14000caf1:	add    BYTE PTR [rax],0x0
   14000caf4:	shr    BYTE PTR [rdi+0x21830000],0x0
   14000cafb:	add    BYTE PTR [rcx],al
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    BYTE PTR [rcx],al
   14000cb01:	add    BYTE PTR [rax],al
   14000cb03:	add    BYTE PTR [rdx],al
   14000cb05:	add    BYTE PTR [rax],al
   14000cb07:	add    BYTE PTR [rcx],al
   14000cb09:	add    BYTE PTR [rax],al
   14000cb0b:	add    BYTE PTR [rax],bh
   14000cb0d:	retf   
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	add    al,0x0
   14000cb12:	add    BYTE PTR [rax],al
   14000cb14:	add    al,0x0
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	add    eax,0x1000000
   14000cb1d:	add    BYTE PTR [rax],al
   14000cb1f:	add    BYTE PTR [rbx+rcx*8],ah
   14000cb22:	add    BYTE PTR [rax],al
   14000cb24:	add    BYTE PTR [rax],al
	...
   14000cb2f:	add    BYTE PTR [rdi+rcx*4+0x0],dh
   14000cb33:	add    BYTE PTR [rax+0x0],cl
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	add    BYTE PTR [rax],al
	...
   14000cb43:	add    BYTE PTR [rdi+rcx*4+0x0],al
   14000cb47:	add    BYTE PTR [rax+0x0],cl
   14000cb4a:	add    BYTE PTR [rax],al
   14000cb4c:	(bad)  
   14000cb4d:	(bad)  
   14000cb4e:	(bad)  
   14000cb4f:	push   QWORD PTR [rdi+rcx*4]
	...
   14000cb62:	add    BYTE PTR [rax],al
   14000cb64:	(bad)  
   14000cb65:	(bad)  
   14000cb66:	(bad)  
   14000cb67:	jmp    QWORD PTR [rdi+rcx*4+0x0]
   14000cb6b:	add    BYTE PTR [rbx],al
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    BYTE PTR [rax],al
   14000cb71:	add    BYTE PTR [rax],al
   14000cb73:	add    BYTE PTR [rbx],al
   14000cb75:	add    BYTE PTR [rax],al
   14000cb77:	add    BYTE PTR [rax],al
   14000cb79:	add    BYTE PTR [rax],al
   14000cb7b:	add    BYTE PTR [rbp+rdi*1+0x0],dh
   14000cb7f:	add    bh,bh
   14000cb81:	(bad)  
   14000cb82:	(bad)  
   14000cb83:	inc    DWORD PTR [rcx+0x100003e]
   14000cb89:	add    BYTE PTR [rax],al
   14000cb8b:	add    cl,cl
   14000cb8d:	add    BYTE PTR ds:[rax],al
   14000cb90:	add    BYTE PTR [rax],al
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	pop    rdi
   14000cb95:	(bad)  
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	(bad)  
   14000cb99:	(bad)  
   14000cb9a:	(bad)  
   14000cb9b:	(bad)  
   14000cb9c:	jmp    0x14400cbe0
   14000cba1:	add    BYTE PTR [rax],al
   14000cba3:	add    BYTE PTR [rax],dh
   14000cba5:	add    BYTE PTR [rax],al
   14000cba8:	add    eax,DWORD PTR [rax]
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	push   rbp
   14000cbad:	add    BYTE PTR [rax],al
   14000cbb0:	(bad)  
   14000cbb1:	(bad)  
   14000cbb2:	(bad)  
   14000cbb3:	push   QWORD PTR [rdx+0x40]
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	add    eax,DWORD PTR [rax]
   14000cbba:	add    BYTE PTR [rax],al
   14000cbbc:	(bad)  
   14000cbbd:	add    BYTE PTR [r8],al
   14000cbc0:	(bad)  
   14000cbc1:	(bad)  
   14000cbc2:	(bad)  
   14000cbc3:	inc    DWORD PTR [rdi+rcx*4+0x0]
   14000cbc7:	add    BYTE PTR [rax],al
   14000cbc9:	add    BYTE PTR [rax],al
   14000cbcb:	add    BYTE PTR [rcx],bl
   14000cbcd:	xor    eax,DWORD PTR [rsi]
   14000cbcf:	add    BYTE PTR [rdx],bl
   14000cbd1:	add    DWORD PTR [rbp+0x4],ebx
   14000cbd4:	add    eax,0x3600470
   14000cbd9:	xor    BYTE PTR [rdx],al
   14000cbdb:	push   rax
   14000cbdc:	lods   al,BYTE PTR ds:[rsi]
   14000cbdd:	add    BYTE PTR [rax],0x0
   14000cbe0:	lock scas eax,DWORD PTR es:[rdi]
   14000cbe2:	add    BYTE PTR [rax],al
   14000cbe4:	shl    BYTE PTR [rdx],cl
   14000cbe6:	add    BYTE PTR [rax],al
   14000cbe8:	(bad)  
   14000cbe9:	(bad)  
   14000cbea:	(bad)  
   14000cbeb:	dec    DWORD PTR [rdi+0x8f]
   14000cbf1:	add    BYTE PTR [rax],al
   14000cbf3:	add    BYTE PTR [rdi-0x4bffff71],bl
   14000cbf9:	add    BYTE PTR [r8],al
   14000cbfc:	(bad)  
   14000cbfd:	(bad)  
   14000cbfe:	(bad)  
   14000cbff:	dec    DWORD PTR [rdx]
   14000cc01:	rex.X add BYTE PTR [rax],al
   14000cc04:	add    BYTE PTR [rax],al
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	and    DWORD PTR [rdx+0x0],eax
   14000cc0b:	add    bh,bh
   14000cc0d:	(bad)  
   14000cc0e:	(bad)  
   14000cc0f:	jmp    QWORD PTR [rsi]
   14000cc11:	rex.X add BYTE PTR [rax],al
   14000cc14:	add    BYTE PTR [rax],al
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	fld    QWORD PTR [rbx+0x0]
   14000cc1b:	add    BYTE PTR [rcx],al
   14000cc1d:	add    BYTE PTR [rax],al
   14000cc1f:	add    BYTE PTR [rax],dl
   14000cc21:	add    BYTE PTR [rax],r8b
   14000cc24:	add    BYTE PTR [rax],al
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	jp     0x14000cc72
   14000cc2a:	add    BYTE PTR [rax],al
   14000cc2c:	(bad)  
   14000cc2d:	(bad)  
   14000cc2e:	(bad)  
   14000cc2f:	call   QWORD PTR [rax+rcx*2+0x0]
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	scas   eax,DWORD PTR es:[rdi]
   14000cc39:	rex.W add BYTE PTR [rax],al
   14000cc3c:	(bad)  
   14000cc3d:	(bad)  
   14000cc3e:	(bad)  
   14000cc3f:	push   QWORD PTR [rbx+0x48]
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	add    BYTE PTR [rax+rcx*2-0x10000],bh
   14000cc4e:	(bad)  
   14000cc4f:	inc    edi
   14000cc51:	rex.W add BYTE PTR [rax],al
   14000cc54:	add    BYTE PTR [rax],al
   14000cc56:	add    BYTE PTR [rax],al
   14000cc58:	add    cl,BYTE PTR [rcx+0x0]
   14000cc5b:	add    bh,bh
   14000cc5d:	(bad)  
   14000cc5e:	(bad)  
   14000cc5f:	call   FWORD PTR [rcx]
   14000cc61:	sub    cl,BYTE PTR [rcx]
   14000cc63:	add    BYTE PTR [rax],bl
   14000cc65:	add    DWORD PTR [rdx],ecx
   14000cc67:	add    al,0xb
   14000cc69:	loopne 0x14000cc74
   14000cc6b:	rol    BYTE PTR [rdi],1
   14000cc6d:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360d0e4
   14000cc74:	add    dh,BYTE PTR [rax]
   14000cc76:	add    BYTE PTR [rax],al
   14000cc78:	in     al,0x7f
   14000cc7a:	add    BYTE PTR [rax],al
   14000cc7c:	and    BYTE PTR [rax],al
   14000cc7f:	add    BYTE PTR [rcx],bl
   14000cc81:	or     al,BYTE PTR [rdx]
   14000cc83:	add    BYTE PTR [rdx],cl
   14000cc85:	push   rdx
   14000cc86:	(bad)  
   14000cc87:	push   rax
   14000cc88:	jp     0x14000cd09
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	and    BYTE PTR [rax+0x2d190000],dh
   14000cc92:	(bad)  
   14000cc93:	add    BYTE PTR [rbx],bl
   14000cc95:	xor    al,0x96
   14000cc97:	add    BYTE PTR [rsi],cl
   14000cc99:	add    DWORD PTR [rdx+0x5c00700],edx
   14000cc9f:	jo     0x14000cca5
   14000cca1:	(bad)  
   14000cca2:	add    BYTE PTR [rax],al
   14000cca4:	lods   al,BYTE PTR ds:[rsi]
   14000cca5:	add    BYTE PTR [rax],0x0
   14000cca8:	and    BYTE PTR [rax+0x4830000],dh
   14000ccae:	add    BYTE PTR [rax],al
   14000ccb0:	add    al,BYTE PTR [rax]
   14000ccb2:	add    BYTE PTR [rax],al
   14000ccb4:	add    al,BYTE PTR [rax]
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	add    eax,DWORD PTR [rax]
   14000ccba:	add    BYTE PTR [rax],al
   14000ccbc:	add    DWORD PTR [rax],eax
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	(bad)  
   14000ccc1:	int3   
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	add    BYTE PTR [rax],al
	...
   14000cccf:	add    bl,cl
   14000ccd1:	pop    QWORD PTR [rax]
   14000ccd3:	add    BYTE PTR [rax+0x0],cl
   14000ccd6:	add    BYTE PTR [rax],al
   14000ccd8:	(bad)  
   14000ccd9:	(bad)  
   14000ccda:	(bad)  
   14000ccdb:	jmp    FWORD PTR [rbx+0x8f]
   14000cce1:	add    BYTE PTR [rax],al
   14000cce3:	add    BYTE PTR [rbx+0x100008f],bh
   14000cce9:	add    BYTE PTR [rax],al
   14000cceb:	add    BYTE PTR [rax],al
   14000cced:	add    BYTE PTR [rax],al
   14000ccef:	add    BYTE PTR [rcx],al
   14000ccf1:	add    BYTE PTR [rax],al
   14000ccf3:	add    BYTE PTR [rax],al
   14000ccf5:	add    BYTE PTR [rax],al
   14000ccf7:	add    BYTE PTR [rax-0xffffb6],dl
   14000ccfd:	(bad)  
   14000ccfe:	(bad)  
   14000ccff:	dec    ebp
   14000cd01:	rex.WX add BYTE PTR [rax],al
   14000cd04:	add    BYTE PTR [rax],al
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	fmul   QWORD PTR [rdx+0x0]
   14000cd0b:	add    BYTE PTR [rcx],al
   14000cd0d:	add    BYTE PTR [rax],al
   14000cd0f:	add    BYTE PTR [rax+0x4b],ah
   14000cd12:	add    BYTE PTR [rax],al
   14000cd14:	add    al,BYTE PTR [rax]
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cd19:	rex.WXB add BYTE PTR [r8],al
   14000cd1c:	add    DWORD PTR [rax],eax
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	adc    ecx,DWORD PTR [rax+rax*1+0x0]
   14000cd24:	add    BYTE PTR [rax],al
   14000cd26:	add    BYTE PTR [rax],al
   14000cd28:	sub    cl,BYTE PTR [rax+rax*1+0x0]
   14000cd2c:	(bad)  
   14000cd2d:	(bad)  
   14000cd2e:	(bad)  
   14000cd2f:	dec    ebx
   14000cd31:	pop    QWORD PTR [rax]
   14000cd33:	add    BYTE PTR [rax],al
   14000cd35:	add    BYTE PTR [rax],al
   14000cd37:	add    BYTE PTR [rcx],bl
   14000cd39:	sub    ecx,DWORD PTR [rcx]
   14000cd3b:	add    BYTE PTR [rdx],bl
   14000cd3d:	add    DWORD PTR [rdx+0x1],ebx
   14000cd40:	or     esp,eax
   14000cd42:	or     eax,edx
   14000cd44:	(bad)  
   14000cd45:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d1bc
   14000cd4c:	add    dl,BYTE PTR [rax+0x0]
   14000cd4f:	add    ah,ah
   14000cd51:	jg     0x14000cd53
   14000cd53:	add    al,al
   14000cd55:	or     al,BYTE PTR [rax]
   14000cd57:	add    BYTE PTR [rcx],al
   14000cd59:	or     al,BYTE PTR [rax+rax*1]
   14000cd5c:	or     dh,BYTE PTR [rdi+rax*1]
   14000cd5f:	add    BYTE PTR [rdx],cl
   14000cd61:	xor    al,BYTE PTR [rsi]
   14000cd63:	jo     0x14000cd76
   14000cd65:	sbb    DWORD PTR [rsi],eax
   14000cd67:	add    BYTE PTR [rcx],bl
   14000cd69:	or     DWORD PTR fs:[rax],eax
   14000cd6c:	adc    al,0x34
   14000cd6e:	or     BYTE PTR [rax],al
   14000cd70:	(bad)  
   14000cd71:	push   rdx
   14000cd72:	add    dh,BYTE PTR [rax+0x7a]
   14000cd75:	jg     0x14000cd77
   14000cd77:	add    BYTE PTR [rax-0x57ffff50],dl
   14000cd7d:	push   rcx
   14000cd7e:	add    BYTE PTR [rax],al
   14000cd80:	(bad)  
   14000cd81:	(bad)  
   14000cd82:	(bad)  
   14000cd83:	call   rsi
   14000cd85:	push   rcx
   14000cd86:	add    BYTE PTR [rax],al
   14000cd88:	add    BYTE PTR [rax],al
   14000cd8a:	add    BYTE PTR [rax],al
   14000cd8c:	lock push rcx
   14000cd8e:	add    BYTE PTR [rax],al
   14000cd90:	(bad)  
   14000cd91:	(bad)  
   14000cd92:	(bad)  
   14000cd93:	inc    DWORD PTR [rcx]
   14000cd95:	adc    BYTE PTR [rsi],al
   14000cd97:	add    BYTE PTR [rax],dl
   14000cd99:	or     eax,DWORD PTR fs:[rax]
   14000cd9c:	adc    BYTE PTR [rdx+rcx*1],dh
   14000cd9f:	add    BYTE PTR [rax],dl
   14000cda1:	jb     0x14000cdaf
   14000cda3:	jo     0x14000cda6
   14000cda5:	(bad)  
   14000cda6:	add    al,BYTE PTR [rax]
   14000cda8:	(bad)  
   14000cda9:	xor    al,BYTE PTR [rdx]
   14000cdab:	xor    BYTE PTR [rcx],al
   14000cdad:	or     eax,DWORD PTR [rax+rax*1]
   14000cdb0:	or     esi,DWORD PTR [rdx+rax*1+0x0]
   14000cdb4:	(bad)  
   14000cdb5:	add    DWORD PTR fs:[rax],eax
   14000cdb8:	add    DWORD PTR [rsi],eax
   14000cdba:	add    al,BYTE PTR [rax]
   14000cdbc:	(bad)  
   14000cdbd:	xor    al,BYTE PTR [rdx]
   14000cdbf:	xor    BYTE PTR [rcx],bl
   14000cdc1:	sbb    DWORD PTR [rdx],eax
   14000cdc3:	add    BYTE PTR [rdi],al
   14000cdc5:	add    DWORD PTR [rbx],ebp
   14000cdc7:	add    ah,ah
   14000cdc9:	jg     0x14000cdcb
   14000cdcb:	add    BYTE PTR [rax+0x1],al
   14000cdce:	add    BYTE PTR [rax],al
   14000cdd0:	sbb    DWORD PTR [rcx],ebx
   14000cdd2:	add    al,BYTE PTR [rax]
   14000cdd4:	(bad)  
   14000cdd5:	add    DWORD PTR [rbx],ebp
   14000cdd7:	add    ah,ah
   14000cdd9:	jg     0x14000cddb
   14000cddb:	add    BYTE PTR [rax+0x1],al
   14000cdde:	add    BYTE PTR [rax],al
   14000cde0:	sbb    DWORD PTR [rbx],ebx
   14000cde2:	add    eax,DWORD PTR [rax]
   14000cde4:	or     DWORD PTR [rcx],eax
   14000cde6:	sub    al,BYTE PTR [rax]
   14000cde8:	add    dh,BYTE PTR [rax]
   14000cdea:	add    BYTE PTR [rax],al
   14000cdec:	in     al,0x7f
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	rex add DWORD PTR [rax],eax
   14000cdf3:	add    BYTE PTR [rcx],bl
   14000cdf5:	sbb    eax,DWORD PTR [rbx]
   14000cdf7:	add    BYTE PTR [rcx],cl
   14000cdf9:	add    DWORD PTR [rdx],ebp
   14000cdfb:	add    BYTE PTR [rdx],al
   14000cdfd:	xor    BYTE PTR [rax],al
   14000cdff:	add    ah,ah
   14000ce01:	jg     0x14000ce03
   14000ce03:	add    BYTE PTR [rax+0x1],al
   14000ce06:	add    BYTE PTR [rax],al
   14000ce08:	sbb    DWORD PTR [rbx],ebx
   14000ce0a:	add    eax,DWORD PTR [rax]
   14000ce0c:	or     DWORD PTR [rcx],eax
   14000ce0e:	sub    al,BYTE PTR [rax]
   14000ce10:	add    dh,BYTE PTR [rax]
   14000ce12:	add    BYTE PTR [rax],al
   14000ce14:	in     al,0x7f
   14000ce16:	add    BYTE PTR [rax],al
   14000ce18:	rex add DWORD PTR [rax],eax
   14000ce1b:	add    BYTE PTR [rcx],al
   14000ce1d:	(bad)  
   14000ce1e:	add    al,BYTE PTR [rax]
   14000ce20:	(bad)  
   14000ce21:	xor    al,BYTE PTR [rdx]
   14000ce23:	xor    BYTE PTR [rcx],al
   14000ce25:	add    al,0x1
   14000ce27:	add    BYTE PTR [rdx+riz*4],al
   14000ce2a:	add    BYTE PTR [rax],al
   14000ce2c:	add    DWORD PTR [rsi],eax
   14000ce2e:	add    al,BYTE PTR [rax]
   14000ce30:	(bad)  
   14000ce31:	jb     0x14000ce35
   14000ce33:	xor    BYTE PTR [rcx],bl
   14000ce35:	(bad)  
   14000ce36:	add    eax,0x8d340d00
   14000ce3b:	add    BYTE PTR [rip+0x6008a01],cl        # 0x146015842
   14000ce41:	(bad)  
   14000ce42:	add    BYTE PTR [rax],al
   14000ce44:	in     al,0x7f
   14000ce46:	add    BYTE PTR [rax],al
   14000ce48:	add    al,0x0
   14000ce4b:	add    BYTE PTR [rcx],al
   14000ce4d:	add    al,0x1
   14000ce4f:	add    BYTE PTR [rdx+riz*4],al
   14000ce52:	add    BYTE PTR [rax],al
   14000ce54:	add    DWORD PTR [rcx+rax*1],eax
   14000ce57:	add    BYTE PTR [rdx+rax*8],al
   14000ce5a:	add    BYTE PTR [rax],al
   14000ce5c:	add    DWORD PTR [rdx],ebx
   14000ce5e:	or     DWORD PTR [rax],eax
   14000ce60:	sbb    ah,BYTE PTR [rbx+riz*1+0x0]
   14000ce64:	sbb    dh,BYTE PTR [rdx+riz*1]
   14000ce67:	add    BYTE PTR [rdx],bl
   14000ce69:	add    DWORD PTR [rsi],ebx
   14000ce6b:	add    BYTE PTR [rsi],cl
   14000ce6d:	ror    BYTE PTR [rax+rsi*2],0xb
   14000ce71:	push   rax
   14000ce72:	add    BYTE PTR [rax],al
   14000ce74:	sbb    DWORD PTR [rip+0x74240009],esi        # 0x1b424ce83
   14000ce7a:	syscall 
   14000ce7c:	and    al,0x64
   14000ce7e:	(bad)  
   14000ce7f:	add    eax,0x50d3424
   14000ce84:	and    al,0x1
   14000ce86:	or     al,BYTE PTR [rip+0x5010]        # 0x140011e9c
   14000ce8c:	in     al,0x7f
   14000ce8e:	add    BYTE PTR [rax],al
   14000ce90:	sub    BYTE PTR [rax],al
   14000ce93:	add    BYTE PTR [rcx],al
   14000ce95:	add    al,0x1
   14000ce97:	add    BYTE PTR [rdx+riz*4],al
   14000ce9a:	add    BYTE PTR [rax],al
   14000ce9c:	add    DWORD PTR [rcx+rax*1],eax
   14000ce9f:	add    BYTE PTR [rdx+riz*4],al
   14000cea2:	add    BYTE PTR [rax],al
   14000cea4:	add    DWORD PTR [rcx+rax*1],eax
   14000cea7:	add    BYTE PTR [rdx+riz*4],al
   14000ceaa:	add    BYTE PTR [rax],al
   14000ceac:	sbb    DWORD PTR [rcx+rcx*1],esi
   14000ceaf:	add    BYTE PTR [rbx],ah
   14000ceb1:	adc    DWORD PTR fs:[rdx],eax
   14000ceb4:	and    esi,DWORD PTR [rdi+rcx*1]
   14000ceb7:	add    ah,BYTE PTR [rbx]
   14000ceb9:	add    DWORD PTR [rdx],ecx
   14000cebb:	add    cl,BYTE PTR [rsi]
   14000cebd:	ror    BYTE PTR [rax+rsi*2],0xb
   14000cec1:	push   rax
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	in     al,0x7f
   14000cec6:	add    BYTE PTR [rax],al
   14000cec8:	adc    BYTE PTR [rax],al
   14000cecb:	add    BYTE PTR [rcx],bl
   14000cecd:	(bad)  
   14000cece:	or     al,BYTE PTR [rax]
   14000ced0:	sbb    DWORD PTR [rcx],eax
   14000ced2:	(bad)  
   14000ced3:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0dac9
   14000ced9:	rol    BYTE PTR [rdi],1
   14000cedb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d352
   14000cee2:	add    dl,BYTE PTR [rax-0x1c]
   14000cee5:	jg     0x14000cee7
   14000cee7:	add    BYTE PTR [rax-0x1000000],ch
   14000ceed:	(bad)  
   14000ceee:	(bad)  
   14000ceef:	inc    DWORD PTR [rax]
   14000cef1:	add    BYTE PTR [rax],al
   14000cef3:	add    bh,bh
   14000cef5:	(bad)  
   14000cef6:	(bad)  
   14000cef7:	inc    DWORD PTR [rax]
   14000cef9:	add    BYTE PTR [rax],al
   14000cefb:	add    bh,bh
   14000cefd:	(bad)  
   14000cefe:	(bad)  
   14000ceff:	inc    DWORD PTR [rax]
   14000cf01:	add    BYTE PTR [rax],al
   14000cf03:	add    bh,bh
   14000cf05:	(bad)  
   14000cf06:	(bad)  
   14000cf07:	inc    DWORD PTR [rax]
   14000cf09:	add    BYTE PTR [rax],al
   14000cf0b:	add    bh,bh
   14000cf0d:	(bad)  
   14000cf0e:	(bad)  
   14000cf0f:	inc    DWORD PTR [rax]
   14000cf11:	add    BYTE PTR [rax],al
   14000cf13:	add    bh,bh
   14000cf15:	(bad)  
   14000cf16:	(bad)  
   14000cf17:	inc    DWORD PTR [rax]
   14000cf19:	add    BYTE PTR [rax],al
   14000cf1b:	add    BYTE PTR [rax],cl
   14000cf1d:	add    BYTE PTR [rax],al
   14000cf1f:	add    BYTE PTR [rax-0xf],dl
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	cmp    BYTE PTR [rax],al
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	mov    ah,0x90
   14000cf2a:	add    BYTE PTR [rax],al
   14000cf2c:	pop    rax
   14000cf2d:	add    BYTE PTR [rax],al
   14000cf2f:	add    BYTE PTR [rax],cl
   14000cf31:	add    BYTE PTR [rax],al
   14000cf33:	add    BYTE PTR [rax-0xf],dl
   14000cf36:	add    BYTE PTR [rax],al
   14000cf38:	add    BYTE PTR [rax],al
   14000cf3b:	add    ah,dh
   14000cf3d:	nop
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	pop    rax
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	add    BYTE PTR [rax],cl
   14000cf45:	add    BYTE PTR [rax],al
   14000cf47:	add    BYTE PTR [rax-0xf],dl
   14000cf4a:	add    BYTE PTR [rax],al
   14000cf4c:	rex.W add BYTE PTR [rax],al
   14000cf4f:	add    BYTE PTR [rcx+rdx*4],dh
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	pop    rax
	...
   14000cf5d:	add    BYTE PTR [rax],al
   14000cf5f:	add    BYTE PTR [rcx],al
   14000cf61:	add    BYTE PTR [rax],al
   14000cf63:	add    BYTE PTR [rcx],al
   14000cf65:	add    BYTE PTR [rax],al
   14000cf67:	add    BYTE PTR [rdi+rcx*8],bl
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	add    al,BYTE PTR [rax]
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	add    al,BYTE PTR [rax]
   14000cf72:	add    BYTE PTR [rax],al
   14000cf74:	add    eax,DWORD PTR [rax]
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	add    DWORD PTR [rax],eax
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	xor    bh,cl
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	add    al,0x0
   14000cf82:	add    BYTE PTR [rax],al
   14000cf84:	add    al,0x0
   14000cf86:	add    BYTE PTR [rax],al
   14000cf88:	add    eax,0x1000000
   14000cf8d:	add    BYTE PTR [rax],al
   14000cf8f:	add    BYTE PTR [rdi+rcx*8+0x0],al
   14000cf93:	add    BYTE PTR [rcx],bl
   14000cf95:	sbb    eax,0x641d0006
   14000cf9a:	ltr    WORD PTR [rcx]
   14000cf9d:	xor    al,0xe
   14000cf9f:	add    BYTE PTR [rdx+rdx*4],cl
   14000cfa2:	or     BYTE PTR [rax+0x7a],dh
   14000cfa5:	jg     0x14000cfa7
   14000cfa7:	add    al,bl
   14000cfa9:	mov    esp,0xb190000
   14000cfae:	add    eax,DWORD PTR [rax]
   14000cfb0:	or     esp,DWORD PTR [rdx+0x7]
   14000cfb3:	push   rax
   14000cfb4:	(bad)  
   14000cfb5:	xor    BYTE PTR [rax],al
   14000cfb7:	add    BYTE PTR [rdx+0x7f],bh
   14000cfba:	add    BYTE PTR [rax],al
   14000cfbc:	fdivr  DWORD PTR [rax+rax*1+0x30b1900]
   14000cfc3:	add    BYTE PTR [rbx],cl
   14000cfc5:	(bad)  
   14000cfc6:	(bad)  
   14000cfc7:	push   rax
   14000cfc8:	(bad)  
   14000cfc9:	xor    BYTE PTR [rax],al
   14000cfcb:	add    BYTE PTR [rdx+0x7f],bh
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	fdivr  DWORD PTR [rax+rax*1+0x30b1900]
   14000cfd7:	add    BYTE PTR [rbx],cl
   14000cfd9:	(bad)  
   14000cfda:	(bad)  
   14000cfdb:	push   rax
   14000cfdc:	(bad)  
   14000cfdd:	xor    BYTE PTR [rax],al
   14000cfdf:	add    BYTE PTR [rdx+0x7f],bh
   14000cfe2:	add    BYTE PTR [rax],al
   14000cfe4:	fdivr  DWORD PTR [rax+rax*1+0x623c00]
   14000cfeb:	add    bh,bh
   14000cfed:	(bad)  
   14000cfee:	(bad)  
   14000cfef:	jmp    QWORD PTR [rcx+0x62]
   14000cff2:	add    BYTE PTR [rax],al
   14000cff4:	add    BYTE PTR [rax],al
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	fwait
   14000cff9:	(bad)  
   14000cffa:	add    BYTE PTR [rax],al
   14000cffc:	(bad)  
   14000cffd:	(bad)  
   14000cffe:	(bad)  
   14000cfff:	jmp    FWORD PTR [rdx+0x2000062]
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    bh,bl
   14000d009:	(bad)  
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	(bad)  
   14000d00d:	(bad)  
   14000d00e:	(bad)  
   14000d00f:	(bad)  
   14000d010:	out    dx,al
   14000d011:	(bad)  
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	add    al,0x0
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	and    DWORD PTR [rbx+0x0],esp
   14000d01b:	add    bh,bh
   14000d01d:	(bad)  
   14000d01e:	(bad)  
   14000d01f:	push   QWORD PTR [rax+rdx*4+0x0]
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	ret    0x90
   14000d02b:	add    BYTE PTR [rcx],al
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    bl,ah
   14000d031:	nop
   14000d032:	add    BYTE PTR [rax],al
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	add    dl,BYTE PTR [rcx+0x30000]
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	and    edx,DWORD PTR [rcx+0x0]
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	rex.X xchg ecx,eax
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	add    eax,0x63000000
   14000d051:	xchg   ecx,eax
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	add    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	sbb    DWORD PTR [rsi],esi
   14000d05a:	or     eax,DWORD PTR [rax]
   14000d05c:	and    eax,0x25041534
   14000d061:	add    DWORD PTR [rsp+rax*1],ecx
   14000d064:	adc    al,dh
   14000d066:	(bad)  
   14000d067:	loopne 0x14000d075
   14000d069:	ror    BYTE PTR [rdx],1
   14000d06b:	ror    BYTE PTR [rax],0x70
   14000d06e:	(bad)  
   14000d06f:	(bad)  
   14000d070:	(bad)  
   14000d071:	push   rax
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	in     al,0x7f
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	push   rax
   14000d079:	and    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rcx],bl
   14000d07d:	(bad)  
   14000d07e:	or     eax,0x1dd42600
   14000d083:	add    DWORD PTR [rsi],esp
   14000d085:	je     0x14000d0a3
   14000d087:	add    DWORD PTR [rsi],esp
   14000d089:	sbb    eax,DWORD PTR fs:[rcx]
   14000d08c:	es xor al,0x1a
   14000d08f:	add    DWORD PTR [rsi],esp
   14000d091:	add    DWORD PTR [rsi],edx
   14000d093:	add    DWORD PTR [rax],ebx
   14000d095:	lock (bad) 
   14000d097:	loopne 0x14000d0ad
   14000d099:	push   rax
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	in     al,0x7f
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	movabs al,ds:0x22000c2201000008
   14000d0a9:	je     0x14000d0c3
   14000d0ab:	add    BYTE PTR [rdx],ah
   14000d0ad:	fs (bad) 
   14000d0af:	add    BYTE PTR [rdx],ah
   14000d0b1:	xor    al,0x16
   14000d0b3:	add    BYTE PTR [rdx],ah
   14000d0b5:	repnz sbb al,dh
   14000d0b8:	(bad)  
   14000d0b9:	loopne 0x14000d0cf
   14000d0bb:	rcl    BYTE PTR [rdx],1
   14000d0bd:	rcl    BYTE PTR [rax],0x50
   14000d0c0:	sbb    DWORD PTR [rdx],esp
   14000d0c2:	or     BYTE PTR [rax],al
   14000d0c4:	adc    BYTE PTR [rcx],al
   14000d0c6:	or     DWORD PTR [rcx],eax
   14000d0c8:	or     eax,esi
   14000d0ca:	(bad)  
   14000d0cb:	loopne 0x14000d0d2
   14000d0cd:	jo     0x14000d0d3
   14000d0cf:	(bad)  
   14000d0d0:	add    edx,DWORD PTR [rax+0x2]
   14000d0d3:	xor    ah,ah
   14000d0d5:	jg     0x14000d0d7
   14000d0d7:	add    BYTE PTR [rax],dh
   14000d0d9:	or     BYTE PTR [rax],al
   14000d0db:	add    BYTE PTR [rcx],bl
   14000d0dd:	or     eax,DWORD PTR ss:[rax]
   14000d0e0:	and    eax,0x25021e34
   14000d0e5:	add    DWORD PTR [rsi],edx
   14000d0e7:	add    dl,BYTE PTR [rax]
   14000d0e9:	lock (bad) 
   14000d0eb:	loopne 0x14000d0f9
   14000d0ed:	ror    BYTE PTR [rdx],1
   14000d0ef:	ror    BYTE PTR [rax],0x70
   14000d0f2:	(bad)  
   14000d0f3:	(bad)  
   14000d0f4:	(bad)  
   14000d0f5:	push   rax
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	in     al,0x7f
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	movabs al,ds:0x28000b3919000010
   14000d105:	je     0x14000d11f
   14000d107:	add    ch,BYTE PTR [rax]
   14000d109:	fs (bad) 
   14000d10b:	add    ch,BYTE PTR [rax]
   14000d10d:	xor    al,0x16
   14000d10f:	add    ch,BYTE PTR [rax]
   14000d111:	add    DWORD PTR [rdx],edx
   14000d113:	add    dl,BYTE PTR [rax+rdx*8]
   14000d116:	adc    al,al
   14000d118:	adc    BYTE PTR [rax+0x0],dl
   14000d11b:	add    ah,ah
   14000d11d:	jg     0x14000d11f
   14000d11f:	add    BYTE PTR [rax-0xfffff0],al
   14000d125:	(bad)  
   14000d126:	(bad)  
   14000d127:	inc    DWORD PTR [rax]
   14000d129:	add    BYTE PTR [rax],al
   14000d12b:	add    bh,bh
   14000d12d:	(bad)  
   14000d12e:	(bad)  
   14000d12f:	inc    DWORD PTR [rax]
   14000d131:	add    BYTE PTR [rax],al
   14000d133:	add    BYTE PTR [rax],cl
   14000d135:	add    BYTE PTR [rax],al
   14000d137:	add    BYTE PTR [rax-0xf],dl
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	cmp    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	test   BYTE PTR [rcx+0x480000],dl
	...
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	add    DWORD PTR [rax],eax
   14000d152:	add    BYTE PTR [rax],al
   14000d154:	add    DWORD PTR [rax],eax
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	xor    al,0xd1
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	sbb    DWORD PTR [rip+0x341b0007],ebp        # 0x1741bd169
   14000d162:	push   rdx
   14000d163:	add    BYTE PTR [rsi],cl
   14000d165:	add    DWORD PTR [rax+rax*1+0x7],ecx
   14000d169:	rol    BYTE PTR [rip+0x600470],0x0        # 0x14060d5e0
   14000d170:	lods   al,BYTE PTR ds:[rsi]
   14000d171:	add    BYTE PTR [rax],0x0
   14000d174:	add    BYTE PTR [rbp+0x2530000],bh
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	sbb    DWORD PTR [rbx],ecx
   14000d17e:	add    eax,DWORD PTR [rax]
   14000d180:	or     eax,DWORD PTR [rdx+0x7]
   14000d183:	push   rax
   14000d184:	(bad)  
   14000d185:	xor    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rdx+0x7f],bh
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	add    BYTE PTR [rbp+0x70ec0000],bh
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	(bad)  
   14000d195:	(bad)  
   14000d196:	(bad)  
   14000d197:	jmp    QWORD PTR [rcx+rsi*2]
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	add    BYTE PTR [rax],al
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	mov    esp,0xff000071
   14000d1a5:	(bad)  
   14000d1a6:	(bad)  
   14000d1a7:	inc    DWORD PTR [rcx+rdx*4+0x0]
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	xchg   edx,eax
   14000d1b1:	xchg   ecx,eax
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	add    DWORD PTR [rax],eax
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	mov    bl,0x91
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	add    BYTE PTR [rax],al
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	(bad)  
   14000d1c1:	(bad)  
   14000d1c2:	(bad)  
   14000d1c3:	inc    DWORD PTR [rax]
   14000d1c5:	add    BYTE PTR [rax],al
   14000d1c7:	add    bh,bh
   14000d1c9:	(bad)  
   14000d1ca:	(bad)  
   14000d1cb:	inc    DWORD PTR [rax]
   14000d1cd:	add    BYTE PTR [rax],al
   14000d1cf:	add    BYTE PTR [rax],cl
   14000d1d1:	add    BYTE PTR [rax],al
   14000d1d3:	add    BYTE PTR [rax-0xf],dl
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	rex.W add BYTE PTR [rax],al
   14000d1db:	add    ah,dl
   14000d1dd:	xchg   ecx,eax
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	pop    rax
	...
   14000d1e9:	add    BYTE PTR [rax],al
   14000d1eb:	add    BYTE PTR [rcx],al
   14000d1ed:	add    BYTE PTR [rax],al
   14000d1ef:	add    BYTE PTR [rcx],al
   14000d1f1:	add    BYTE PTR [rax],al
   14000d1f3:	add    al,dl
   14000d1f5:	rol    DWORD PTR [rax],1
   14000d1f7:	add    BYTE PTR [rcx],bl
   14000d1f9:	sub    eax,0x341b0007
   14000d1fe:	push   rsp
   14000d1ff:	add    BYTE PTR [rsi],cl
   14000d201:	add    DWORD PTR [rsi+0x0],ecx
   14000d204:	(bad)  
   14000d205:	rol    BYTE PTR [rip+0x600470],0x0        # 0x14060d67c
   14000d20c:	lods   al,BYTE PTR ds:[rsi]
   14000d20d:	add    BYTE PTR [rax],0x0
   14000d210:	sub    BYTE PTR [rbp+0x2630000],bh
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	sbb    DWORD PTR [rbx],ecx
   14000d21a:	add    eax,DWORD PTR [rax]
   14000d21c:	or     esp,DWORD PTR [rdx+0x7]
   14000d21f:	push   rax
   14000d220:	(bad)  
   14000d221:	xor    BYTE PTR [rax],al
   14000d223:	add    BYTE PTR [rdx+0x7f],bh
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	sub    BYTE PTR [rbp+0x71fc0000],bh
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	(bad)  
   14000d231:	(bad)  
   14000d232:	(bad)  
   14000d233:	push   QWORD PTR [rdx+rsi*2]
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	add    BYTE PTR [rax],al
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	loope  0x14000d2b0
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	(bad)  
   14000d241:	(bad)  
   14000d242:	(bad)  
   14000d243:	call   rsp
   14000d245:	xchg   ecx,eax
   14000d246:	add    BYTE PTR [rax],al
   14000d248:	add    BYTE PTR [rax],al
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	loop   0x14000d1df
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	add    DWORD PTR [rax],eax
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	add    edx,DWORD PTR [rdx+0x0]
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	add    DWORD PTR [rcx],edx
   14000d25e:	(bad)  
   14000d25f:	add    BYTE PTR [rcx],dl
   14000d261:	ror    BYTE PTR [rdx],cl
   14000d263:	ror    BYTE PTR [rax],0x70
   14000d266:	(bad)  
   14000d267:	(bad)  
   14000d268:	(bad)  
   14000d269:	xor    BYTE PTR [rip+0x8130150],al        # 0x14813d3bf
   14000d26f:	add    BYTE PTR [rbx],dl
   14000d271:	xor    al,0x12
   14000d273:	add    BYTE PTR [rbx],dl
   14000d275:	mov    dl,0xc
   14000d277:	ror    BYTE PTR [rdx],1
   14000d279:	ror    BYTE PTR [rax],0x70
   14000d27c:	(bad)  
   14000d27d:	(bad)  
   14000d27e:	(bad)  
   14000d27f:	push   rax
   14000d280:	sbb    DWORD PTR [rsi],ebx
   14000d282:	(bad)  
   14000d283:	add    BYTE PTR [rdi],cl
   14000d285:	str    WORD PTR fs:[rdi]
   14000d289:	xor    al,0xe
   14000d28b:	add    BYTE PTR [rdi],cl
   14000d28d:	xchg   edx,eax
   14000d28e:	or     esi,DWORD PTR [rax-0x1c]
   14000d291:	jg     0x14000d293
   14000d293:	add    BYTE PTR [rax+0x0],al
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	sbb    DWORD PTR [rax],edi
   14000d29a:	or     eax,DWORD PTR [rax]
   14000d29c:	(bad)  
   14000d29d:	sbb    eax,DWORD PTR fs:[rdx]
   14000d2a0:	(bad)  
   14000d2a1:	xor    al,0x1a
   14000d2a3:	add    ah,BYTE PTR [rdi]
   14000d2a5:	add    DWORD PTR [rdx],edx
   14000d2a7:	add    dl,BYTE PTR [rdx]
   14000d2a9:	loopne 0x14000d2bb
   14000d2ab:	ror    BYTE PTR [rsi],1
   14000d2ad:	ror    BYTE PTR [rax+rsi*2],0xb
   14000d2b1:	push   rax
   14000d2b2:	add    BYTE PTR [rax],al
   14000d2b4:	in     al,0x7f
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	adc    BYTE PTR [rax],0x0
   14000d2bb:	add    BYTE PTR [rcx],al
   14000d2bd:	(bad)  
   14000d2be:	add    DWORD PTR [rax],eax
   14000d2c0:	(bad)  
   14000d2c1:	rex.X add BYTE PTR [rax],al
   14000d2c4:	add    DWORD PTR [rax],ebx
   14000d2c6:	add    DWORD PTR [rax],eax
   14000d2c8:	sbb    dl,al
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	add    DWORD PTR [rax],ebx
   14000d2ce:	add    DWORD PTR [rax],eax
   14000d2d0:	sbb    dl,al
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	add    DWORD PTR [rsi],eax
   14000d2d6:	add    al,BYTE PTR [rax]
   14000d2d8:	(bad)  
   14000d2d9:	xor    al,BYTE PTR [rdx]
   14000d2db:	push   rax
   14000d2dc:	or     DWORD PTR [rdi],edx
   14000d2de:	(bad)  
   14000d2df:	add    BYTE PTR [rdi],dl
   14000d2e1:	xor    al,0xd
   14000d2e3:	add    BYTE PTR [rdi],dl
   14000d2e5:	jb     0x14000d2fa
   14000d2e7:	rcl    BYTE PTR [rcx],0x70
   14000d2ea:	adc    BYTE PTR [rax+0x5c],ah
   14000d2ed:	test   DWORD PTR [rax],eax
   14000d2ef:	add    BYTE PTR [rcx],al
   14000d2f1:	add    BYTE PTR [rax],al
   14000d2f3:	add    bl,dh
   14000d2f5:	jle    0x14000d2f7
   14000d2f7:	add    BYTE PTR [rdi+rdi*2],cl
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	adc    dl,BYTE PTR [rdx+0x7f0c0000]
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	adc    DWORD PTR [rax],ebx
   14000d306:	add    eax,0x14621800
   14000d30b:	rcl    BYTE PTR [rdx],0x70
   14000d30e:	adc    DWORD PTR [rax+0x10],esp
   14000d311:	xor    BYTE PTR [rax],al
   14000d313:	add    BYTE PTR [rbp+rax*4+0x0],bl
   14000d317:	add    BYTE PTR [rcx],al
   14000d319:	add    BYTE PTR [rax],al
   14000d31b:	add    BYTE PTR [rdi+0x7f],cl
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	outs   dx,DWORD PTR ds:[rsi]
   14000d321:	jg     0x14000d323
   14000d323:	add    BYTE PTR [rbx-0x6e],dl
	...
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	add    DWORD PTR [rax],eax
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	add    BYTE PTR [rax],al
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	add    DWORD PTR [rcx+rax*1],eax
   14000d33b:	add    BYTE PTR [rdx+rdx*1],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	add    DWORD PTR [rcx],ebx
   14000d342:	or     al,BYTE PTR [rax]
   14000d344:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000d348:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000d34c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000d350:	sbb    DWORD PTR [rsi+rax*1],esi
   14000d353:	add    BYTE PTR [rcx],bl
   14000d355:	xor    dl,BYTE PTR [rip+0x20611c0]        # 0x14206e51b
   14000d35b:	add    BYTE PTR [rsi],al
   14000d35d:	xor    al,BYTE PTR [rdx]
   14000d35f:	xor    BYTE PTR [rbp+rax*4+0x0],bl
   14000d363:	add    BYTE PTR [rcx],al
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rbx-0x7f],bh
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	loope  0x14000d2ef
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	jg     0x14000d304
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	add    DWORD PTR [rcx+rax*1],eax
   14000d37b:	add    BYTE PTR [rdx+riz*2],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	or     DWORD PTR [rdx],edx
   14000d382:	(bad)  
   14000d383:	add    BYTE PTR [rdx],dl
   14000d385:	fs (bad) 
   14000d387:	add    BYTE PTR [rdx],dl
   14000d389:	xor    al,0x16
   14000d38b:	add    BYTE PTR [rdx],dl
   14000d38d:	add    DWORD PTR [rax+rax*1],edx
   14000d390:	or     esi,DWORD PTR [rax+0x0]
   14000d393:	add    BYTE PTR [rbp+rax*4+0x0],bl
   14000d397:	add    BYTE PTR [rcx],al
   14000d399:	add    BYTE PTR [rax],al
   14000d39b:	add    BYTE PTR [rax+0x2f000082],ah
   14000d3a1:	test   BYTE PTR [rax],al
   14000d3a3:	add    BYTE PTR [rdx+0x2f000092],bl
   14000d3a9:	test   BYTE PTR [rax],al
   14000d3ab:	add    BYTE PTR [rcx],al
   14000d3ad:	or     al,0x2
   14000d3af:	add    BYTE PTR [rcx+rax*1],cl
   14000d3b2:	adc    DWORD PTR [rax],eax
   14000d3b4:	add    DWORD PTR [rdx],ecx
   14000d3b6:	add    al,0x0
   14000d3b8:	or     dh,BYTE PTR [rsi+rax*1]
   14000d3bb:	add    BYTE PTR [rdx],cl
   14000d3bd:	xor    al,BYTE PTR [rsi]
   14000d3bf:	jo     0x14000d3ca
   14000d3c1:	add    al,0x1
   14000d3c3:	add    BYTE PTR [rdx+rax*2],al
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	pop    rsp
   14000d3c9:	test   DWORD PTR [rax],eax
   14000d3cb:	add    BYTE PTR [rcx],al
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    BYTE PTR [rdi],ah
   14000d3d1:	mov    BYTE PTR [rax],al
   14000d3d3:	add    BYTE PTR [rdx-0x78],bl
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	rcl    BYTE PTR [rdx-0x77a60000],0x0
   14000d3df:	add    BYTE PTR [rcx],al
   14000d3e1:	or     al,BYTE PTR [rax+rax*1]
   14000d3e4:	or     dh,BYTE PTR [rax+rcx*1]
   14000d3e7:	add    BYTE PTR [rdx],cl
   14000d3e9:	xor    al,BYTE PTR [rsi]
   14000d3eb:	jo     0x14000d3ee
   14000d3ed:	sbb    BYTE PTR [rcx],al
   14000d3ef:	add    BYTE PTR [rax],bl
   14000d3f1:	ret    0x0
   14000d3f4:	add    DWORD PTR [rcx+rax*1],eax
   14000d3f7:	add    BYTE PTR [rdx+rax*4],al
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	add    DWORD PTR [rcx+rcx*1],edx
   14000d3ff:	add    BYTE PTR [rdx+riz*8],dl
   14000d402:	or     eax,0x9e00bf0
   14000d407:	rol    BYTE PTR [rdi],1
   14000d409:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d880
   14000d410:	add    dl,BYTE PTR [rax+0x0]
	...
   14000d423:	add    BYTE PTR [rax],bh
   14000d425:	(bad)  
	...
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	add    DWORD PTR [rax],eax
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	rex.W (bad) 
	...
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	mov    eax,0xf0
   14000d451:	add    BYTE PTR [rax],al
   14000d453:	add    bh,bh
   14000d455:	(bad)  
   14000d456:	(bad)  
   14000d457:	inc    DWORD PTR [rax]
   14000d459:	add    BYTE PTR [rax],al
   14000d45b:	add    BYTE PTR [rax+rax*1],al
	...
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	movabs al,ds:0x900000000000008a
   14000d47d:	(bad)  
	...
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	add    DWORD PTR [rax],eax
   14000d492:	add    BYTE PTR [rax],al
   14000d494:	movabs al,ds:0xd4
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rax],al
   14000d4a1:	add    BYTE PTR [rax],al
   14000d4a3:	add    BYTE PTR [rax-0xf],dl
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	add    BYTE PTR [rax],al
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	(bad)  
   14000d4ad:	(bad)  
   14000d4ae:	(bad)  
   14000d4af:	inc    DWORD PTR [rax]
   14000d4b1:	add    BYTE PTR [rax],al
   14000d4b3:	add    BYTE PTR [rax],ah
   14000d4b5:	add    BYTE PTR [rax],al
   14000d4b7:	add    BYTE PTR [rax],ah
   14000d4b9:	mov    eax,DWORD PTR [rax]
	...
   14000d4c7:	add    BYTE PTR [rcx],al
   14000d4c9:	add    BYTE PTR [rax],al
   14000d4cb:	add    al,al
   14000d4cd:	mov    edi,0xf3680000
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	shl    cl,1
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	rex.W (bad) 
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	sub    bh,dl
	...
   14000d4e6:	add    BYTE PTR [rax],al
   14000d4e8:	add    DWORD PTR [rax],eax
   14000d4ea:	add    BYTE PTR [rax],al
   14000d4ec:	sar    BYTE PTR [rdi-0xc900000],1
   14000d4f2:	add    BYTE PTR [rax],al
   14000d4f4:	rex
   14000d4f5:	repnz add BYTE PTR [rax],al
   14000d4f8:	mov    eax,0x980000d5
   14000d4fd:	xlat   BYTE PTR ds:[rbx]
	...
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	add    DWORD PTR [rax],eax
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	rex rol BYTE PTR [rax],0x0
   14000d510:	cmp    cl,0x0
   14000d513:	add    BYTE PTR [rax-0xe],ah
   14000d516:	add    BYTE PTR [rax],al
   14000d518:	fcom   st(5)
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	mov    eax,0xd7
	...
   14000d545:	add    BYTE PTR [rax],al
   14000d547:	add    al,ch
   14000d549:	(bad)  
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	add    BYTE PTR [rax],al
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	clc    
   14000d551:	(bad)  
   14000d552:	add    BYTE PTR [rax],al
   14000d554:	add    BYTE PTR [rax],al
   14000d556:	add    BYTE PTR [rax],al
   14000d558:	(bad)  
   14000d559:	(bad)  
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	add    BYTE PTR [rax],al
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	sbb    dh,dl
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	add    BYTE PTR [rax],al
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	sub    dh,dl
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	add    BYTE PTR [rax],al
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	ss (bad) 
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	add    BYTE PTR [rax],al
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	rex.W (bad) 
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	add    BYTE PTR [rax],al
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	pop    rdx
   14000d581:	(bad)  
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	add    BYTE PTR [rax],al
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	outs   dx,BYTE PTR ds:[rsi]
   14000d589:	(bad)  
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	add    BYTE PTR [rax],al
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	jle    0x14000d568
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	add    BYTE PTR [rax],al
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	xchg   edx,eax
   14000d599:	(bad)  
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	add    BYTE PTR [rax],al
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	stos   BYTE PTR es:[rdi],al
   14000d5a1:	(bad)  
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	add    BYTE PTR [rax],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	mov    esi,0xd6
	...
   14000d5b5:	add    BYTE PTR [rax],al
   14000d5b7:	add    dl,ch
   14000d5b9:	(bad)  
   14000d5ba:	add    BYTE PTR [rax],al
   14000d5bc:	add    BYTE PTR [rax],al
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	(bad)  
   14000d5c1:	(bad)  
   14000d5c2:	add    BYTE PTR [rax],al
   14000d5c4:	add    BYTE PTR [rax],al
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	rcl    dh,1
	...
   14000d5d6:	add    BYTE PTR [rax],al
   14000d5d8:	adc    dl,bh
	...
   14000d5ea:	push   rdx
   14000d5eb:	gs addr32 rex.WRXB jo 0x14000d655
   14000d5f0:	outs   dx,BYTE PTR ds:[rsi]
   14000d5f1:	rex.WXB
   14000d5f2:	gs jns 0x14000d63a
   14000d5f5:	js     0x14000d64e
   14000d5f7:	add    BYTE PTR [rax],al
   14000d5f9:	add    BYTE PTR [rdx+0x65],dl
   14000d5fc:	rex.XB ins BYTE PTR es:[edi],dx
   14000d5ff:	outs   dx,DWORD PTR ds:[rsi]
   14000d600:	jae    0x14000d667
   14000d602:	rex.WXB
   14000d603:	gs jns 0x14000d606
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	push   rdx
   14000d609:	gs addr32 push rbx
   14000d60c:	gs je  0x14000d665
   14000d60f:	(bad)  
   14000d610:	ins    BYTE PTR es:[rdi],dx
   14000d611:	jne    0x14000d678
   14000d613:	rex.RB js 0x14000d66d
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	add    BYTE PTR [rax],al
   14000d61a:	push   rdx
   14000d61b:	gs addr32 rex.R
   14000d61e:	gs ins BYTE PTR es:[rdi],dx
   14000d620:	gs je  0x14000d688
   14000d623:	rex.WXB
   14000d624:	gs jns 0x14000d67e
   14000d627:	add    BYTE PTR [rax],al
   14000d629:	add    BYTE PTR [rdx+0x65],dl
   14000d62c:	rex.RB outs dx,BYTE PTR ds:[esi]
   14000d62f:	jne    0x14000d69e
   14000d631:	rex.WXB
   14000d632:	gs jns 0x14000d68c
   14000d635:	add    BYTE PTR [rax],al
   14000d637:	add    BYTE PTR [rdx+0x65],dl
   14000d63a:	addr32 rex.XB jb 0x14000d6a3
   14000d63e:	(bad)  
   14000d63f:	je     0x14000d6a6
   14000d641:	rex.WXB
   14000d642:	gs jns 0x14000d68a
   14000d645:	js     0x14000d69e
   14000d647:	add    BYTE PTR [rax],al
   14000d649:	add    BYTE PTR [rdx+0x65],dl
   14000d64c:	addr32 rex.R
   14000d64e:	gs ins BYTE PTR es:[rdi],dx
   14000d650:	gs je  0x14000d6b8
   14000d653:	push   rsi
   14000d654:	(bad)  
   14000d655:	ins    BYTE PTR es:[rdi],dx
   14000d656:	jne    0x14000d6bd
   14000d658:	push   rdi
   14000d659:	add    BYTE PTR [rax],al
   14000d65b:	add    BYTE PTR [rdx+0x65],dl
   14000d65e:	addr32 push rcx
   14000d660:	jne    0x14000d6c7
   14000d662:	jb     0x14000d6dd
   14000d664:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d666:	outs   dx,WORD PTR ds:[rsi]
   14000d668:	rex.WXB
   14000d669:	gs jns 0x14000d6c3
   14000d66c:	add    BYTE PTR [rax],al
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	push   rdx
   14000d671:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000d675:	jne    0x14000d6e4
   14000d677:	rex.WXB
   14000d678:	gs jns 0x14000d6c0
   14000d67b:	js     0x14000d6d4
   14000d67d:	add    BYTE PTR [rax],al
   14000d67f:	add    BYTE PTR [rdx+0x65],dl
   14000d682:	addr32 push rcx
   14000d684:	jne    0x14000d6eb
   14000d686:	jb     0x14000d701
   14000d688:	push   rsi
   14000d689:	(bad)  
   14000d68a:	ins    BYTE PTR es:[rdi],dx
   14000d68b:	jne    0x14000d6f2
   14000d68d:	rex.RB js 0x14000d6e7
   14000d690:	add    BYTE PTR [rax],al
   14000d692:	add    BYTE PTR [rax],al
   14000d694:	rex.XB jb 0x14000d6fc
   14000d697:	(bad)  
   14000d698:	je     0x14000d6ff
   14000d69a:	push   rax
   14000d69b:	jb     0x14000d70c
   14000d69d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d6a0:	jae    0x14000d6e3
   14000d6a2:	jae    0x14000d6f9
   14000d6a4:	jae    0x14000d70b
   14000d6a6:	jb     0x14000d6ff
   14000d6a8:	add    BYTE PTR [rcx+0x0],al
   14000d6ab:	add    BYTE PTR [rdi+0x70],cl
   14000d6ae:	outs   dx,BYTE PTR gs:[rsi]
   14000d6b0:	push   rax
   14000d6b1:	jb     0x14000d722
   14000d6b3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d6b6:	jae    0x14000d70c
   14000d6b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d6b9:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000d6bd:	add    BYTE PTR [rax],al
   14000d6bf:	add    BYTE PTR [rdx+0x65],dl
   14000d6c2:	addr32 push rcx
   14000d6c4:	jne    0x14000d72b
   14000d6c6:	jb     0x14000d741
   14000d6c8:	push   rsi
   14000d6c9:	(bad)  
   14000d6ca:	ins    BYTE PTR es:[rdi],dx
   14000d6cb:	jne    0x14000d732
   14000d6cd:	push   rdi
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	add    BYTE PTR [rax],al
   14000d6d2:	push   rbx
   14000d6d3:	rex.W
   14000d6d4:	rex.RXB
   14000d6d5:	gs je  0x14000d72b
   14000d6d8:	jo     0x14000d73f
   14000d6da:	movsxd ebp,DWORD PTR [rcx+0x61]
   14000d6dd:	ins    BYTE PTR es:[rdi],dx
   14000d6de:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000d6e0:	ins    BYTE PTR es:[rdi],dx
   14000d6e1:	fs gs jb 0x14000d735
   14000d6e5:	(bad)  
   14000d6e6:	je     0x14000d750
   14000d6e8:	push   rdi
   14000d6e9:	add    BYTE PTR [rax],al
   14000d6eb:	add    BYTE PTR [rbx+0x48],dl
   14000d6ee:	rex.RXB
   14000d6ef:	gs je  0x14000d738
   14000d6f2:	outs   dx,DWORD PTR ds:[rsi]
   14000d6f3:	ins    BYTE PTR es:[rdi],dx
   14000d6f4:	fs gs jb 0x14000d748
   14000d6f8:	(bad)  
   14000d6f9:	je     0x14000d763
   14000d6fb:	push   rdi
   14000d6fc:	add    BYTE PTR [rax],al
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	push   rbx
   14000d701:	rex.W
   14000d702:	rex.RXB
   14000d703:	gs je  0x14000d74c
   14000d706:	outs   dx,DWORD PTR ds:[rsi]
   14000d707:	ins    BYTE PTR es:[rdi],dx
   14000d708:	fs gs jb 0x14000d75c
   14000d70c:	(bad)  
   14000d70d:	je     0x14000d777
   14000d70f:	rex.RB js 0x14000d712
   14000d712:	add    BYTE PTR [rax],al
   14000d714:	push   rax
   14000d715:	(bad)  
   14000d716:	je     0x14000d780
   14000d718:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   14000d721:	jae    0x14000d77a
	...
   14000d7c7:	add    BYTE PTR [rax-0x28],al
	...
   14000d7d2:	add    BYTE PTR [rax],al
   14000d7d4:	rcr    dh,1
   14000d7d6:	add    BYTE PTR [rax],al
   14000d7d8:	add    BYTE PTR [rax-0x24500000],ah
	...
   14000d7e6:	add    BYTE PTR [rax],al
   14000d7e8:	neg    dh
   14000d7ea:	add    BYTE PTR [rax],al
   14000d7ec:	jo     0x14000d791
   14000d7ee:	add    BYTE PTR [rax],al
   14000d7f0:	enter  0xdb,0x0
	...
   14000d7fc:	pop    rsi
   14000d7fd:	fild   WORD PTR [rax]
   14000d7ff:	add    BYTE PTR [rax-0x7fffff5d],cl
   14000d805:	fild   DWORD PTR [rax]
	...
   14000d80f:	add    BYTE PTR [rax-0x21],ch
   14000d812:	add    BYTE PTR [rax],al
   14000d814:	rex movabs ds:0xd9f00000,eax
   14000d81e:	add    BYTE PTR [rax],al
   14000d820:	add    BYTE PTR [rax],al
   14000d822:	add    BYTE PTR [rax],al
   14000d824:	out    0xe0,al
   14000d826:	add    BYTE PTR [rax],al
   14000d828:	mov    al,0xa1
	...
   14000d83e:	add    BYTE PTR [rax],al
   14000d840:	clc    
   14000d841:	fild   DWORD PTR [rax]
   14000d843:	add    BYTE PTR [rax],al
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    BYTE PTR [rdx],cl
   14000d849:	fadd   QWORD PTR [rax]
   14000d84b:	add    BYTE PTR [rax],al
   14000d84d:	add    BYTE PTR [rax],al
   14000d84f:	add    BYTE PTR [rdx],bl
   14000d851:	fadd   QWORD PTR [rax]
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    BYTE PTR [rdx-0x24],al
   14000d85a:	add    BYTE PTR [rax],al
   14000d85c:	add    BYTE PTR [rax],al
   14000d85e:	add    BYTE PTR [rax],al
   14000d860:	pop    rdx
   14000d861:	fadd   QWORD PTR [rax]
   14000d863:	add    BYTE PTR [rax],al
   14000d865:	add    BYTE PTR [rax],al
   14000d867:	add    BYTE PTR [rsp+rbx*8+0x0],ch
   14000d86b:	add    BYTE PTR [rax],al
   14000d86d:	add    BYTE PTR [rax],al
   14000d86f:	add    BYTE PTR [rax+0xdc],al
   14000d875:	add    BYTE PTR [rax],al
   14000d877:	add    BYTE PTR [rsp+rbx*8+0x0],cl
   14000d87e:	add    BYTE PTR [rax],al
   14000d880:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d881:	fadd   QWORD PTR [rax]
   14000d883:	add    BYTE PTR [rax],al
   14000d885:	add    BYTE PTR [rax],al
   14000d887:	add    BYTE PTR [rsp+rbx*8+0x0],bh
   14000d88e:	add    BYTE PTR [rax],al
   14000d890:	enter  0xdc,0x0
   14000d894:	add    BYTE PTR [rax],al
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	(bad)  
   14000d899:	fadd   QWORD PTR [rax]
   14000d89b:	add    BYTE PTR [rax],al
   14000d89d:	add    BYTE PTR [rax],al
   14000d89f:	add    ah,ch
   14000d8a1:	fadd   QWORD PTR [rax]
   14000d8a3:	add    BYTE PTR [rax],al
   14000d8a5:	add    BYTE PTR [rax],al
   14000d8a7:	add    dh,bh
   14000d8a9:	fadd   QWORD PTR [rax]
   14000d8ab:	add    BYTE PTR [rax],al
   14000d8ad:	add    BYTE PTR [rax],al
   14000d8af:	add    BYTE PTR [rsi],cl
   14000d8b1:	fld    QWORD PTR [rax]
   14000d8b3:	add    BYTE PTR [rax],al
   14000d8b5:	add    BYTE PTR [rax],al
   14000d8b7:	add    BYTE PTR [rsi],bl
   14000d8b9:	fld    QWORD PTR [rax]
   14000d8bb:	add    BYTE PTR [rax],al
   14000d8bd:	add    BYTE PTR [rax],al
   14000d8bf:	add    BYTE PTR [rax],dh
   14000d8c1:	fld    QWORD PTR [rax]
   14000d8c3:	add    BYTE PTR [rax],al
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    BYTE PTR [rsi-0x23],al
   14000d8ca:	add    BYTE PTR [rax],al
   14000d8cc:	add    BYTE PTR [rax],al
   14000d8ce:	add    BYTE PTR [rax],al
   14000d8d0:	push   rsi
   14000d8d1:	fld    QWORD PTR [rax]
   14000d8d3:	add    BYTE PTR [rax],al
   14000d8d5:	add    BYTE PTR [rax],al
   14000d8d7:	add    BYTE PTR [rsi-0x23],ch
   14000d8da:	add    BYTE PTR [rax],al
   14000d8dc:	add    BYTE PTR [rax],al
   14000d8de:	add    BYTE PTR [rax],al
   14000d8e0:	jle    0x14000d8bf
   14000d8e2:	add    BYTE PTR [rax],al
   14000d8e4:	add    BYTE PTR [rax],al
   14000d8e6:	add    BYTE PTR [rax],al
   14000d8e8:	xchg   esp,eax
   14000d8e9:	fld    QWORD PTR [rax]
   14000d8eb:	add    BYTE PTR [rax],al
   14000d8ed:	add    BYTE PTR [rax],al
   14000d8ef:	add    BYTE PTR [rdx+0xdd],ch
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	add    BYTE PTR [rsi+0xdd],bh
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    ah,dl
   14000d901:	fld    QWORD PTR [rax]
   14000d903:	add    BYTE PTR [rax],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    dl,ah
   14000d909:	fld    QWORD PTR [rax]
   14000d90b:	add    BYTE PTR [rax],al
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    al,dh
   14000d911:	fld    QWORD PTR [rax]
   14000d913:	add    BYTE PTR [rax],al
   14000d915:	add    BYTE PTR [rax],al
   14000d917:	add    BYTE PTR [rsi],al
   14000d919:	fiadd  WORD PTR [rax]
   14000d91b:	add    BYTE PTR [rax],al
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	add    BYTE PTR [rax],bl
   14000d921:	fiadd  WORD PTR [rax]
   14000d923:	add    BYTE PTR [rax],al
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rsi],ch
   14000d929:	fiadd  WORD PTR [rax]
   14000d92b:	add    BYTE PTR [rax],al
   14000d92d:	add    BYTE PTR [rax],al
   14000d92f:	add    BYTE PTR [rsi+rbx*8],bh
   14000d932:	add    BYTE PTR [rax],al
   14000d934:	add    BYTE PTR [rax],al
   14000d936:	add    BYTE PTR [rax],al
   14000d938:	rex.WRX fiadd WORD PTR [rax]
   14000d93b:	add    BYTE PTR [rax],al
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    BYTE PTR [rdx-0x22],ah
   14000d942:	add    BYTE PTR [rax],al
   14000d944:	add    BYTE PTR [rax],al
   14000d946:	add    BYTE PTR [rax],al
   14000d948:	jbe    0x14000d928
   14000d94a:	add    BYTE PTR [rax],al
   14000d94c:	add    BYTE PTR [rax],al
   14000d94e:	add    BYTE PTR [rax],al
   14000d950:	mov    ds,esi
   14000d952:	add    BYTE PTR [rax],al
   14000d954:	add    BYTE PTR [rax],al
   14000d956:	add    BYTE PTR [rax],al
   14000d958:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d959:	fiadd  WORD PTR [rax]
   14000d95b:	add    BYTE PTR [rax],al
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    BYTE PTR [rdx+0xde],bh
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    BYTE PTR [rdx+0xe3],al
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rsi-0x1d],dh
   14000d972:	add    BYTE PTR [rax],al
   14000d974:	add    BYTE PTR [rax],al
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	pop    rsp
   14000d979:	jrcxz  0x14000d97b
   14000d97b:	add    BYTE PTR [rax],al
   14000d97d:	add    BYTE PTR [rax],al
   14000d97f:	add    BYTE PTR [rbx+riz*8+0x0],cl
   14000d983:	add    BYTE PTR [rax],al
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    BYTE PTR [rdx],dh
   14000d989:	jrcxz  0x14000d98b
   14000d98b:	add    BYTE PTR [rax],al
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    BYTE PTR [rsi],bl
   14000d991:	jrcxz  0x14000d993
   14000d993:	add    BYTE PTR [rax],al
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rbx+riz*8],al
   14000d99a:	add    BYTE PTR [rax],al
   14000d99c:	add    BYTE PTR [rax],al
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	lock loop 0x14000d9a3
   14000d9a3:	add    BYTE PTR [rax],al
   14000d9a5:	add    BYTE PTR [rax],al
   14000d9a7:	add    ah,bl
   14000d9a9:	loop   0x14000d9ab
   14000d9ab:	add    BYTE PTR [rax],al
   14000d9ad:	add    BYTE PTR [rax],al
   14000d9af:	add    BYTE PTR [rsi+0xe2],bh
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rdx+0xe2],ah
   14000d9bd:	add    BYTE PTR [rax],al
   14000d9bf:	add    BYTE PTR [rsi+0xe2],cl
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	add    BYTE PTR [rdx+riz*8+0x0],bh
   14000d9cb:	add    BYTE PTR [rax],al
   14000d9cd:	add    BYTE PTR [rax],al
   14000d9cf:	add    BYTE PTR [rdx+riz*8+0x0],dh
   14000d9d3:	add    BYTE PTR [rax],al
   14000d9d5:	add    BYTE PTR [rax],al
   14000d9d7:	add    BYTE PTR [rdx+riz*8+0x0],ah
   14000d9db:	add    BYTE PTR [rax],al
   14000d9dd:	add    BYTE PTR [rax],al
   14000d9df:	add    BYTE PTR [rdx+riz*8+0x0],dl
	...
   14000d9ef:	add    BYTE PTR [rsi+0xdf],al
   14000d9f5:	add    BYTE PTR [rax],al
   14000d9f7:	add    BYTE PTR [rax+0xdf],dl
   14000d9fd:	add    BYTE PTR [rax],al
   14000d9ff:	add    BYTE PTR [rdx+0xdf],ah
   14000da05:	add    BYTE PTR [rax],al
   14000da07:	add    BYTE PTR [rdi+rbx*8+0x0],dh
   14000da0e:	add    BYTE PTR [rax],al
   14000da10:	retf   0xdf
   14000da13:	add    BYTE PTR [rax],al
   14000da15:	add    BYTE PTR [rax],al
   14000da17:	add    dh,dl
   14000da19:	fild   WORD PTR [rax]
   14000da1b:	add    BYTE PTR [rax],al
   14000da1d:	add    BYTE PTR [rax],al
   14000da1f:	add    al,ah
   14000da21:	fild   WORD PTR [rax]
   14000da23:	add    BYTE PTR [rax],al
   14000da25:	add    BYTE PTR [rax],al
   14000da27:	add    dl,ch
   14000da29:	fild   WORD PTR [rax]
   14000da2b:	add    BYTE PTR [rax],al
   14000da2d:	add    BYTE PTR [rax],al
   14000da2f:	add    dl,dh
   14000da31:	fild   WORD PTR [rax]
   14000da33:	add    BYTE PTR [rax],al
   14000da35:	add    BYTE PTR [rax],al
   14000da37:	add    BYTE PTR [rax],cl
   14000da39:	loopne 0x14000da3b
   14000da3b:	add    BYTE PTR [rax],al
   14000da3d:	add    BYTE PTR [rax],al
   14000da3f:	add    BYTE PTR [rax+riz*8],dl
   14000da42:	add    BYTE PTR [rax],al
   14000da44:	add    BYTE PTR [rax],al
   14000da46:	add    BYTE PTR [rax],al
   14000da48:	and    al,ah
   14000da4a:	add    BYTE PTR [rax],al
   14000da4c:	add    BYTE PTR [rax],al
   14000da4e:	add    BYTE PTR [rax],al
   14000da50:	xor    ah,al
   14000da52:	add    BYTE PTR [rax],al
   14000da54:	add    BYTE PTR [rax],al
   14000da56:	add    BYTE PTR [rax],al
   14000da58:	cmp    al,0xe0
   14000da5a:	add    BYTE PTR [rax],al
   14000da5c:	add    BYTE PTR [rax],al
   14000da5e:	add    BYTE PTR [rax],al
   14000da60:	rex.RX loopne 0x14000da63
   14000da63:	add    BYTE PTR [rax],al
   14000da65:	add    BYTE PTR [rax],al
   14000da67:	add    BYTE PTR [rax+riz*8+0x0],dl
   14000da6b:	add    BYTE PTR [rax],al
   14000da6d:	add    BYTE PTR [rax],al
   14000da6f:	add    BYTE PTR [rax+riz*8+0x0],bl
   14000da73:	add    BYTE PTR [rax],al
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	add    BYTE PTR [rax-0x20],ch
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	add    BYTE PTR [rax],al
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	js     0x14000da62
   14000da82:	add    BYTE PTR [rax],al
   14000da84:	add    BYTE PTR [rax],al
   14000da86:	add    BYTE PTR [rax],al
   14000da88:	test   al,ah
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	add    BYTE PTR [rax],al
   14000da8e:	add    BYTE PTR [rax],al
   14000da90:	xchg   edx,eax
   14000da91:	loopne 0x14000da93
   14000da93:	add    BYTE PTR [rax],al
   14000da95:	add    BYTE PTR [rax],al
   14000da97:	add    BYTE PTR [rdx+0xe0],ah
   14000da9d:	add    BYTE PTR [rax],al
   14000da9f:	add    BYTE PTR [rdx+0xe0],dh
   14000daa5:	add    BYTE PTR [rax],al
   14000daa7:	add    BYTE PTR [rsi+0xe0],bh
   14000daad:	add    BYTE PTR [rax],al
   14000daaf:	add    ah,cl
   14000dab1:	loopne 0x14000dab3
   14000dab3:	add    BYTE PTR [rax],al
   14000dab5:	add    BYTE PTR [rax],al
   14000dab7:	add    ah,bl
   14000dab9:	loopne 0x14000dabb
   14000dabb:	add    BYTE PTR [rax],al
   14000dabd:	add    BYTE PTR [rax],al
   14000dabf:	add    ah,dh
   14000dac1:	loopne 0x14000dac3
   14000dac3:	add    BYTE PTR [rax],al
   14000dac5:	add    BYTE PTR [rax],al
   14000dac7:	add    BYTE PTR [rax],cl
   14000dac9:	loope  0x14000dacb
   14000dacb:	add    BYTE PTR [rax],al
   14000dacd:	add    BYTE PTR [rax],al
   14000dacf:	add    BYTE PTR [rax],ah
   14000dad1:	loope  0x14000dad3
   14000dad3:	add    BYTE PTR [rax],al
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	add    BYTE PTR [rdx],ch
   14000dad9:	loope  0x14000dadb
   14000dadb:	add    BYTE PTR [rax],al
   14000dadd:	add    BYTE PTR [rax],al
   14000dadf:	add    BYTE PTR [rax],bh
   14000dae1:	loope  0x14000dae3
   14000dae3:	add    BYTE PTR [rax],al
   14000dae5:	add    BYTE PTR [rax],al
   14000dae7:	add    BYTE PTR [rax-0x1f],al
   14000daea:	add    BYTE PTR [rax],al
   14000daec:	add    BYTE PTR [rax],al
   14000daee:	add    BYTE PTR [rax],al
   14000daf0:	rex.WX loope 0x14000daf3
   14000daf3:	add    BYTE PTR [rax],al
   14000daf5:	add    BYTE PTR [rax],al
   14000daf7:	add    BYTE PTR [rax-0x1f],bl
   14000dafa:	add    BYTE PTR [rax],al
   14000dafc:	add    BYTE PTR [rax],al
   14000dafe:	add    BYTE PTR [rax],al
   14000db00:	push   0xffffffffffffffe1
   14000db02:	add    BYTE PTR [rax],al
   14000db04:	add    BYTE PTR [rax],al
   14000db06:	add    BYTE PTR [rax],al
   14000db08:	js     0x14000daeb
   14000db0a:	add    BYTE PTR [rax],al
   14000db0c:	add    BYTE PTR [rax],al
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	and    cl,0x0
   14000db13:	add    BYTE PTR [rax],al
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    BYTE PTR [rdx+0xe1],cl
   14000db1d:	add    BYTE PTR [rax],al
   14000db1f:	add    BYTE PTR [rdx+0xe1],dl
   14000db25:	add    BYTE PTR [rax],al
   14000db27:	add    BYTE PTR [rcx+riz*8+0x0],bl
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	test   al,0xe1
   14000db32:	add    BYTE PTR [rax],al
   14000db34:	add    BYTE PTR [rax],al
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	mov    dh,0xe1
   14000db3a:	add    BYTE PTR [rax],al
   14000db3c:	add    BYTE PTR [rax],al
   14000db3e:	add    BYTE PTR [rax],al
   14000db40:	int3   
   14000db41:	loope  0x14000db43
   14000db43:	add    BYTE PTR [rax],al
   14000db45:	add    BYTE PTR [rax],al
   14000db47:	add    al,ah
   14000db49:	loope  0x14000db4b
   14000db4b:	add    BYTE PTR [rax],al
   14000db4d:	add    BYTE PTR [rax],al
   14000db4f:	add    ah,ch
   14000db51:	loope  0x14000db53
   14000db53:	add    BYTE PTR [rax],al
   14000db55:	add    BYTE PTR [rax],al
   14000db57:	add    dh,dh
   14000db59:	loope  0x14000db5b
   14000db5b:	add    BYTE PTR [rax],al
   14000db5d:	add    BYTE PTR [rax],al
   14000db5f:	add    BYTE PTR [rax],cl
   14000db61:	loop   0x14000db63
   14000db63:	add    BYTE PTR [rax],al
   14000db65:	add    BYTE PTR [rax],al
   14000db67:	add    BYTE PTR [rsi],bh
   14000db69:	loop   0x14000db6b
   14000db6b:	add    BYTE PTR [rax],al
   14000db6d:	add    BYTE PTR [rax],al
   14000db6f:	add    BYTE PTR [rsi-0x21],dh
	...
   14000db7e:	add    BYTE PTR [rax],al
   14000db80:	adc    eax,0x1
   14000db85:	add    BYTE PTR [rax],al
   14000db87:	adc    BYTE PTR [rsi+0x0],0x0
   14000db8e:	add    BYTE PTR [rax+0x7],al
   14000db94:	add    BYTE PTR [rax],al
   14000db96:	add    BYTE PTR [rax+0x2],al
   14000db9c:	add    BYTE PTR [rax],al
   14000db9e:	add    BYTE PTR [rax+0x6],al
   14000dba4:	add    BYTE PTR [rax],al
   14000dba6:	add    BYTE PTR [rax+0x0],al
   14000dbac:	add    BYTE PTR [rax],al
   14000dbae:	add    BYTE PTR [rax],al
   14000dbb0:	(bad)  
   14000dbb2:	add    BYTE PTR [rax],al
   14000dbb4:	add    BYTE PTR [rax],al
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	(bad)  
   14000dbb9:	fiadd  WORD PTR [rax]
	...
   14000dbc7:	add    BYTE PTR [rdi+rbx*8],dl
   14000dbca:	add    BYTE PTR [rax],al
   14000dbcc:	add    BYTE PTR [rax],al
   14000dbce:	add    BYTE PTR [rax],al
   14000dbd0:	sub    bh,bl
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	add    BYTE PTR [rax],al
   14000dbd6:	add    BYTE PTR [rax],al
   14000dbd8:	cmp    al,0xdf
   14000dbda:	add    BYTE PTR [rax],al
   14000dbdc:	add    BYTE PTR [rax],al
   14000dbde:	add    BYTE PTR [rax],al
   14000dbe0:	rex.WR fild WORD PTR [rax]
   14000dbe3:	add    BYTE PTR [rax],al
   14000dbe5:	add    BYTE PTR [rax],al
   14000dbe7:	add    BYTE PTR [rdx],al
   14000dbe9:	fild   WORD PTR [rax]
	...
   14000dbf7:	add    BYTE PTR [rbx+rax*1+0x73696152],dh
   14000dbfe:	gs rex.RB js 0x14000dc65
   14000dc02:	gs jo  0x14000dc79
   14000dc05:	imul   ebp,DWORD PTR [rdi+0x6e],0x2080000
   14000dc0c:	rex.RXB
   14000dc0d:	gs je  0x14000dc5c
   14000dc10:	(bad)  
   14000dc11:	jae    0x14000dc87
   14000dc13:	rex.RB jb 0x14000dc88
   14000dc16:	outs   dx,DWORD PTR ds:[rsi]
   14000dc17:	jb     0x14000dc19
   14000dc19:	add    bl,ch
   14000dc1b:	add    cl,BYTE PTR [rcx+0x6e]
   14000dc1e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000dc26:	rex.XB jb 0x14000dc92
   14000dc29:	je     0x14000dc94
   14000dc2b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dc2e:	push   rbx
   14000dc2f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000dc34:	outs   dx,BYTE PTR ds:[rsi]
   14000dc35:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000dc37:	fs push rbx
   14000dc39:	jo     0x14000dca4
   14000dc3b:	outs   dx,BYTE PTR ds:[rsi]
   14000dc3c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dc3e:	jne    0x14000dcae
   14000dc40:	je     0x14000dc42
   14000dc42:	rol    BYTE PTR [rax],cl
   14000dc44:	rex.R
   14000dc45:	gs ins BYTE PTR es:[rdi],dx
   14000dc47:	gs je  0x14000dcaf
   14000dc4a:	rex.XB jb 0x14000dcb6
   14000dc4d:	je     0x14000dcb8
   14000dc4f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dc52:	push   rbx
   14000dc53:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000dc58:	outs   dx,BYTE PTR ds:[rsi]
   14000dc59:	add    BYTE PTR [rdx+rax*1+0x47],cl
   14000dc5d:	gs je  0x14000dcb0
   14000dc60:	jb     0x14000dcd1
   14000dc62:	movsxd eax,DWORD PTR [rcx+0x64]
   14000dc65:	fs jb  0x14000dccd
   14000dc68:	jae    0x14000dcdd
   14000dc6a:	add    BYTE PTR [rax],al
   14000dc6c:	(bad)  
   14000dc6d:	add    al,BYTE PTR [rdi+0x65]
   14000dc70:	je     0x14000dcbf
   14000dc72:	outs   dx,DWORD PTR ds:[rsi]
   14000dc73:	fs jne 0x14000dce2
   14000dc76:	gs rex.W (bad) 
   14000dc79:	outs   dx,BYTE PTR ds:[rsi]
   14000dc7a:	fs ins BYTE PTR es:[rdi],dx
   14000dc7c:	gs push rdi
   14000dc7e:	add    BYTE PTR [rax],al
   14000dc80:	(bad)  
   14000dc81:	add    eax,0x7274736c
   14000dc86:	ins    BYTE PTR es:[rdi],dx
   14000dc87:	outs   dx,BYTE PTR gs:[rsi]
   14000dc89:	push   rdi
   14000dc8a:	add    BYTE PTR [rax],al
   14000dc8c:	repnz add BYTE PTR [rbp+0x6e],al
   14000dc90:	je     0x14000dcf7
   14000dc92:	jb     0x14000dcd7
   14000dc94:	jb     0x14000dcff
   14000dc96:	je     0x14000dd01
   14000dc98:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dc9b:	push   rbx
   14000dc9c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000dca1:	outs   dx,BYTE PTR ds:[rsi]
   14000dca2:	add    BYTE PTR [rax],al
   14000dca4:	cmp    eax,DWORD PTR [rbx]
   14000dca6:	rex.WR
   14000dca7:	gs (bad) 
   14000dca9:	jbe    0x14000dd10
   14000dcab:	rex.XB jb 0x14000dd17
   14000dcae:	je     0x14000dd19
   14000dcb0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dcb3:	push   rbx
   14000dcb4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000dcb9:	outs   dx,BYTE PTR ds:[rsi]
   14000dcba:	add    BYTE PTR [rax],al
   14000dcbc:	pop    rax
   14000dcbd:	add    eax,0x7274736c
   14000dcc2:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000dcc5:	imul   edx,DWORD PTR [rdi+0x0],0x72460168
   14000dccc:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000dcd6:	imul   eax,DWORD PTR [rbx],0x746c754d
   14000dcdc:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   14000dce3:	push   rdi
   14000dce4:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000dcec:	mov    edi,0x7a695304
   14000dcf1:	outs   dx,DWORD PTR gs:[rsi]
   14000dcf3:	push   dx
   14000dcf5:	gs jae 0x14000dd67
   14000dcf8:	jne    0x14000dd6c
   14000dcfa:	movsxd esp,DWORD PTR [rbp+0x0]
   14000dcfd:	add    BYTE PTR [rbx+0x3],al
   14000dd00:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000dd02:	(bad)  
   14000dd03:	fs push rdx
   14000dd05:	gs jae 0x14000dd77
   14000dd08:	jne    0x14000dd7c
   14000dd0a:	movsxd esp,DWORD PTR [rbp+0x0]
   14000dd0d:	add    BYTE PTR [rcx+rax*1+0x46],dl
   14000dd11:	imul   ebp,DWORD PTR [rsi+0x64],0x6f736552
   14000dd18:	jne    0x14000dd8c
   14000dd1a:	movsxd esp,DWORD PTR [rbp+0x57]
   14000dd1d:	add    BYTE PTR [rax+0x3],al
   14000dd20:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000dd22:	(bad)  
   14000dd23:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000dd2c:	js     0x14000dd85
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	sbb    al,BYTE PTR [rdx]
   14000dd32:	rex.RXB
   14000dd33:	gs je  0x14000dd83
   14000dd36:	outs   dx,DWORD PTR ds:[rsi]
   14000dd37:	fs jne 0x14000dda6
   14000dd3a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000dd44:	add    BYTE PTR [rax],al
   14000dd46:	add    ecx,DWORD PTR [r15+rbp*2+0x61]
   14000dd4b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000dd54:	add    BYTE PTR [rax],al
   14000dd56:	enter  0x4702,0x6c
   14000dd5a:	outs   dx,DWORD PTR ds:[rsi]
   14000dd5b:	(bad)
   14000dd60:	ins    DWORD PTR es:[rdi],dx
   14000dd61:	outs   dx,DWORD PTR ds:[rsi]
   14000dd62:	jb     0x14000dddd
   14000dd64:	push   rbx
   14000dd65:	je     0x14000ddc8
   14000dd67:	je     0x14000ddde
   14000dd69:	jae    0x14000ddb0
   14000dd6b:	js     0x14000dd6d
   14000dd6d:	add    BYTE PTR [rdx+rax*1+0x56746547],ch
   14000dd74:	gs jb  0x14000ddea
   14000dd77:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   14000dd7e:	test   DWORD PTR [rsi+rdx*2],0x66697265
   14000dd85:	jns    0x14000dddd
   14000dd87:	gs jb  0x14000ddfd
   14000dd8a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14000dd91:	push   rdi
   14000dd92:	add    BYTE PTR [rax],al
   14000dd94:	repz add al,0x56
   14000dd97:	gs jb  0x14000dded
   14000dd9a:	gs je  0x14000dde0
   14000dd9d:	outs   dx,DWORD PTR ds:[rsi]
   14000dd9e:	outs   dx,BYTE PTR ds:[rsi]
   14000dd9f:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   14000dda8:	imul   eax,DWORD PTR [rax],0xffffffc6
   14000ddab:	add    DWORD PTR [rdi+0x65],eax
   14000ddae:	je     0x14000ddf3
   14000ddb0:	jne    0x14000de24
   14000ddb2:	jb     0x14000de19
   14000ddb4:	outs   dx,BYTE PTR ds:[rsi]
   14000ddb5:	je     0x14000de07
   14000ddb7:	jb     0x14000de28
   14000ddb9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ddbc:	jae    0x14000ddbe
   14000ddbe:	sub    eax,DWORD PTR [rdx]
   14000ddc0:	rex.RXB
   14000ddc1:	gs je  0x14000de12
   14000ddc4:	(bad)  
   14000ddc5:	je     0x14000de30
   14000ddc7:	jbe    0x14000de2e
   14000ddc9:	push   rbx
   14000ddca:	jns    0x14000de3f
   14000ddcc:	je     0x14000de33
   14000ddce:	ins    DWORD PTR es:[rdi],dx
   14000ddcf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ddd1:	outs   dx,WORD PTR ds:[rsi]
   14000ddd3:	add    BYTE PTR [rdx+0x0],dl
   14000ddd6:	rex.XB ins BYTE PTR es:[rdi],dx
   14000ddd8:	outs   dx,DWORD PTR ds:[rsi]
   14000ddd9:	jae    0x14000de40
   14000dddb:	rex.W (bad) 
   14000dddd:	outs   dx,BYTE PTR ds:[rsi]
   14000ddde:	fs ins BYTE PTR es:[rdi],dx
   14000dde0:	add    BYTE PTR gs:[rdi+0x65724300],cl
   14000dde7:	(bad)  
   14000dde8:	je     0x14000de4f
   14000ddea:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47027700
   14000ddf3:	gs je  0x14000de49
   14000ddf6:	jns    0x14000de6b
   14000ddf8:	je     0x14000de5f
   14000ddfa:	ins    DWORD PTR es:[rdi],dx
   14000ddfb:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000de03:	jns    0x14000de5c
   14000de05:	add    BYTE PTR [rax+0x65724300],ch
   14000de0b:	(bad)  
   14000de0c:	je     0x14000de73
   14000de0e:	push   rax
   14000de0f:	jb     0x14000de80
   14000de11:	movsxd esp,DWORD PTR [rbp+0x73]
   14000de14:	jae    0x14000de6d
   14000de16:	add    BYTE PTR [rax],al
   14000de18:	or     BYTE PTR [rip+0x74696157],al        # 0x1b46a3f75
   14000de1e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000de20:	jb     0x14000de75
   14000de22:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000de29:	push   0x65
   14000de2b:	movsxd esi,DWORD PTR [rax+rax*1+0x46]
   14000de2f:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000de33:	(bad)  
   14000de34:	ins    BYTE PTR es:[rdi],dx
   14000de35:	rex.B ins BYTE PTR es:[rdi],dx
   14000de37:	ins    BYTE PTR es:[rdi],dx
   14000de38:	outs   dx,DWORD PTR ds:[rsi]
   14000de39:	movsxd eax,DWORD PTR [rax]
   14000de3b:	add    BYTE PTR [rcx+rax*1+0x46],ah
   14000de3f:	outs   dx,DWORD PTR ds:[rsi]
   14000de40:	jb     0x14000deaf
   14000de42:	(bad)  
   14000de43:	je     0x14000de92
   14000de45:	gs jae 0x14000debb
   14000de48:	(bad)  
   14000de49:	addr32 gs push rdi
   14000de4c:	add    BYTE PTR [rax],al
   14000de4e:	adc    eax,0x74654702
   14000de53:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000de55:	outs   dx,BYTE PTR ds:[rsi]
   14000de56:	addr32 push rax
   14000de58:	(bad)  
   14000de59:	je     0x14000dec3
   14000de5b:	rex.WRX (bad) 
   14000de5d:	ins    DWORD PTR es:[rdi],dx
   14000de5e:	gs push rdi
   14000de60:	add    BYTE PTR [rax],al
   14000de62:	push   0x74654702
   14000de67:	push   rbx
   14000de68:	push   0x5074726f
   14000de6d:	(bad)  
   14000de6e:	je     0x14000ded8
   14000de70:	rex.WRX (bad) 
   14000de72:	ins    DWORD PTR es:[rdi],dx
   14000de73:	gs push rdi
   14000de75:	add    BYTE PTR [rdi+0x74654702],dh
   14000de7b:	push   rdi
   14000de7c:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000de83:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000de8a:	jns    0x14000dee3
   14000de8c:	add    BYTE PTR [rax],al
   14000de8e:	mov    WORD PTR [rbx],es
   14000de90:	rex.WRXB jne 0x14000df07
   14000de93:	jo     0x14000df0a
   14000de95:	je     0x14000dedb
   14000de97:	gs (bad) 
   14000de99:	jne    0x14000df02
   14000de9b:	push   rbx
   14000de9c:	je     0x14000df10
   14000de9e:	imul   ebp,DWORD PTR [rsi+0x67],0xc7000057
   14000dea5:	add    DWORD PTR [rdi+0x65],eax
   14000dea8:	je     0x14000deed
   14000deaa:	jne    0x14000df1e
   14000deac:	jb     0x14000df13
   14000deae:	outs   dx,BYTE PTR ds:[rsi]
   14000deaf:	je     0x14000df01
   14000deb1:	jb     0x14000df22
   14000deb3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000deb6:	jae    0x14000df01
   14000deb8:	fs add bl,cl
   14000debb:	add    DWORD PTR [rdi+0x65],eax
   14000debe:	je     0x14000df03
   14000dec0:	jne    0x14000df34
   14000dec2:	jb     0x14000df29
   14000dec4:	outs   dx,BYTE PTR ds:[rsi]
   14000dec5:	je     0x14000df1b
   14000dec7:	push   0x64616572
   14000decc:	rex.WB
   14000decd:	add    BYTE PTR fs:[rax],al
   14000ded0:	rex.WXB
   14000ded1:	rex.RB push r10
   14000ded3:	rex.WRX
   14000ded4:	rex.RB
   14000ded5:	xor    r14,QWORD PTR [rdx]
   14000ded8:	cs fs ins BYTE PTR es:[rdi],dx
   14000dedb:	ins    BYTE PTR es:[rdi],dx
   14000dedc:	add    BYTE PTR [rax],al
   14000dede:	xor    DWORD PTR [rax],eax
   14000dee0:	rex.XB push 0x654e7261
   14000dee6:	js     0x14000df5c
   14000dee8:	push   rdi
   14000dee9:	add    BYTE PTR [rbx],bh
   14000deeb:	add    esi,DWORD PTR [rdi+0x73]
   14000deee:	jo     0x14000df62
   14000def0:	imul   ebp,DWORD PTR [rsi+0x74],0x55005766
   14000def7:	push   rbx
   14000def8:	rex.RB push r10
   14000defa:	xor    esi,DWORD PTR [rdx]
   14000defc:	cs fs ins BYTE PTR es:[rdi],dx
   14000deff:	ins    BYTE PTR es:[rdi],dx
   14000df00:	add    BYTE PTR [rax],al
   14000df02:	imul   eax,DWORD PTR [rax],0x43
   14000df05:	outs   dx,DWORD PTR ds:[rsi]
   14000df06:	push   rsp
   14000df07:	(bad)  
   14000df08:	jae    0x14000df75
   14000df0a:	rex.WRB
   14000df0b:	gs ins DWORD PTR es:[rdi],dx
   14000df0d:	rex.B ins BYTE PTR es:[rdi],dx
   14000df0f:	ins    BYTE PTR es:[rdi],dx
   14000df10:	outs   dx,DWORD PTR ds:[rsi]
   14000df11:	movsxd eax,DWORD PTR [rax]
   14000df13:	add    BYTE PTR [rbp+0x0],ch
   14000df16:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000df18:	push   rsp
   14000df19:	(bad)  
   14000df1a:	jae    0x14000df87
   14000df1c:	rex.WRB
   14000df1d:	gs ins DWORD PTR es:[rdi],dx
   14000df1f:	push   rdx
   14000df20:	gs (bad) 
   14000df22:	ins    BYTE PTR es:[rdi],dx
   14000df23:	ins    BYTE PTR es:[rdi],dx
   14000df24:	outs   dx,DWORD PTR ds:[rsi]
   14000df25:	movsxd eax,DWORD PTR [rax]
   14000df27:	add    BYTE PTR [rax+rax*1],dl
   14000df2a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000df2c:	rex.XB jb 0x14000df94
   14000df2f:	(bad)  
   14000df30:	je     0x14000df97
   14000df32:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000df34:	jae    0x14000dfaa
   14000df36:	(bad)  
   14000df37:	outs   dx,BYTE PTR ds:[rsi]
   14000df38:	movsxd esp,DWORD PTR [rbp+0x0]
   14000df3b:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000df3f:	outs   dx,DWORD PTR ds:[rsi]
   14000df40:	push   rsp
   14000df41:	(bad)  
   14000df42:	jae    0x14000dfaf
   14000df44:	rex.WRB
   14000df45:	gs ins DWORD PTR es:[rdi],dx
   14000df47:	rex.RX jb 0x14000dfaf
   14000df4a:	add    BYTE PTR gs:[rcx+rax*1+0x69727453],dh
   14000df52:	outs   dx,BYTE PTR ds:[rsi]
   14000df53:	addr32 rex.RX jb 0x14000dfc6
   14000df57:	ins    DWORD PTR es:[rdi],dx
   14000df58:	rex.XB
   14000df59:	rex.WR push rbx
   14000df5b:	rex.WB
   14000df5c:	add    BYTE PTR [rdi+0x6c],r13b
   14000df60:	xor    esi,DWORD PTR gs:[rdx]
   14000df63:	cs fs ins BYTE PTR es:[rdi],dx
   14000df66:	ins    BYTE PTR es:[rdi],dx
   14000df67:	add    BYTE PTR [rdi+0x4c],cl
   14000df6a:	rex.RB
   14000df6b:	push   r13
   14000df6d:	push   rsp
   14000df6e:	xor    esi,DWORD PTR [rdx]
   14000df70:	cs fs ins BYTE PTR es:[rdi],dx
   14000df73:	ins    BYTE PTR es:[rdi],dx
   14000df74:	add    BYTE PTR [rax],al
   14000df76:	add    BYTE PTR gs:[rdi],bh
   14000df79:	(bad)  
   14000df7a:	xor    eax,DWORD PTR [rax+0x59]
   14000df7d:	pop    r8
   14000df7f:	push   rax
   14000df80:	rex.RB
   14000df81:	pop    r8
   14000df83:	rex pop rdx
   14000df85:	add    BYTE PTR [rbp+0x6d656d05],ch
   14000df8b:	jae    0x14000dff2
   14000df8d:	je     0x14000df8f
   14000df8f:	add    BYTE PTR [rbx+0x0],ah
   14000df92:	(bad)  
   14000df93:	(bad)  
   14000df94:	xor    al,BYTE PTR [rax+0x59]
   14000df97:	push   r8
   14000df99:	rex.RB
   14000df9a:	pop    r8
   14000df9c:	pop    rdi
   14000df9d:	rex.WXB
   14000df9e:	rex pop rdx
   14000dfa0:	add    BYTE PTR [rax],al
   14000dfa2:	jp     0x14000dfa4
   14000dfa4:	(bad)  
   14000dfa5:	(bad)  
   14000dfa6:	pop    rdi
   14000dfa7:	push   rsi
   14000dfa8:	rex pop rcx
   14000dfaa:	pop    r8
   14000dfac:	push   rax
   14000dfad:	rex.RB
   14000dfae:	pop    r8
   14000dfb0:	rex pop rdx
   14000dfb2:	add    BYTE PTR [rax],al
   14000dfb4:	sub    BYTE PTR [rcx],al
   14000dfb6:	pop    rdi
   14000dfb7:	pop    rdi
   14000dfb8:	rex.XB js 0x14000e033
   14000dfbb:	rex.RX jb 0x14000e01f
   14000dfbe:	ins    DWORD PTR es:[rdi],dx
   14000dfbf:	gs rex.W (bad) 
   14000dfc2:	outs   dx,BYTE PTR ds:[rsi]
   14000dfc3:	fs ins BYTE PTR es:[rdi],dx
   14000dfc5:	gs jb  0x14000dffb
   14000dfc8:	add    BYTE PTR [rax],al
   14000dfca:	stos   BYTE PTR es:[rdi],al
   14000dfcb:	add    eax,0x636d656d
   14000dfd0:	jo     0x14000e04b
   14000dfd2:	pop    rdi
   14000dfd3:	jae    0x14000dfd5
   14000dfd5:	add    BYTE PTR [rip+0x73637706],ah        # 0x1b36456e1
   14000dfdb:	jae    0x14000e051
   14000dfdd:	jb     0x14000dfdf
   14000dfdf:	add    BYTE PTR [rsi+0x6c616d05],bl
   14000dfe5:	ins    BYTE PTR es:[rdi],dx
   14000dfe6:	outs   dx,DWORD PTR ds:[rsi]
   14000dfe7:	movsxd eax,DWORD PTR [rax]
   14000dfe9:	add    BYTE PTR [rbx+0x5],ah
   14000dfec:	data16 jb 0x14000e054
   14000dfef:	add    BYTE PTR gs:[rax],al
   14000dff2:	(bad)  
   14000dff3:	add    DWORD PTR [rdi+0x43],ebx
   14000dff6:	js     0x14000e070
   14000dff8:	push   rsp
   14000dff9:	push   0x45776f72
   14000dffe:	js     0x14000e063
   14000e000:	gs jo  0x14000e077
   14000e003:	imul   ebp,DWORD PTR [rdi+0x6e],0x61e0000
   14000e00a:	ja     0x14000e06f
   14000e00c:	jae    0x14000e07c
   14000e00e:	movsxd esi,DWORD PTR [rax+0x79]
   14000e011:	pop    rdi
   14000e012:	jae    0x14000e014
   14000e014:	mov    ch,0x3
   14000e016:	pop    rdi
   14000e017:	jb     0x14000e07e
   14000e019:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e01c:	ins    BYTE PTR es:[rdi],dx
   14000e01d:	outs   dx,DWORD PTR ds:[rsi]
   14000e01e:	movsxd eax,DWORD PTR [rax]
   14000e020:	js     0x14000e022
   14000e022:	(bad)  
   14000e023:	(bad)  
   14000e024:	pop    rdi
   14000e025:	push   rbp
   14000e026:	rex pop rcx
   14000e028:	push   r8
   14000e02a:	rex.RB
   14000e02b:	pop    r8
   14000e02d:	pop    rdi
   14000e02e:	rex.WXB
   14000e02f:	rex pop rdx
   14000e031:	add    BYTE PTR [rip+0x615f5f01],bh        # 0x1a1603f38
   14000e037:	jb     0x14000e0a0
   14000e039:	movsxd eax,DWORD PTR [rax]
   14000e03b:	add    BYTE PTR [rcx+rax*1+0x61775f5f],cl
   14000e042:	jb     0x14000e0ab
   14000e044:	jbe    0x14000e046
   14000e046:	icebp  
   14000e047:	add    eax,0x72707773
   14000e04c:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14000e053:	add    BYTE PTR [rsi],bl
   14000e055:	add    eax,0x6f74775f
   14000e05a:	imul   eax,DWORD PTR [rax],0x63770616
   14000e060:	jae    0x14000e0c5
   14000e062:	jo     0x14000e0dd
   14000e064:	pop    rdi
   14000e065:	jae    0x14000e067
   14000e067:	add    BYTE PTR [rdi],cl
   14000e069:	add    eax,0x7073775f
   14000e06e:	ins    BYTE PTR es:[rdi],dx
   14000e06f:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   14000e077:	add    BYTE PTR [rcx],dl
   14000e079:	(bad)  
   14000e07a:	ja     0x14000e0df
   14000e07c:	jae    0x14000e0e1
   14000e07e:	(bad)  
   14000e07f:	je     0x14000e0e0
   14000e081:	jae    0x14000e083
   14000e083:	add    BYTE PTR [rbx],dl
   14000e085:	add    eax,0x7473775f
   14000e08a:	(bad)  
   14000e08b:	je     0x14000e0c3
   14000e08d:	xor    al,0x69
   14000e08f:	xor    esi,DWORD PTR [rdx]
   14000e091:	add    ah,dh
   14000e093:	add    bl,BYTE PTR [rdi+0x6c]
   14000e096:	outs   dx,DWORD PTR ds:[rsi]
   14000e097:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e09a:	je     0x14000e105
   14000e09c:	ins    DWORD PTR es:[rdi],dx
   14000e09d:	gs ss xor al,0x0
   14000e0a1:	add    bl,ch
   14000e0a3:	add    ebx,DWORD PTR [rdi+0x73]
   14000e0a6:	outs   dx,BYTE PTR ds:[rsi]
   14000e0a7:	ja     0x14000e119
   14000e0a9:	jb     0x14000e114
   14000e0ab:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ac:	je     0x14000e114
   14000e0ae:	pop    rdi
   14000e0af:	jae    0x14000e0b1
   14000e0b1:	add    BYTE PTR [rax],bl
   14000e0b3:	(bad)  
   14000e0b4:	ja     0x14000e119
   14000e0b6:	jae    0x14000e11e
   14000e0b8:	je     0x14000e123
   14000e0ba:	ins    DWORD PTR es:[rdi],dx
   14000e0bb:	add    BYTE PTR gs:[rax],al
   14000e0be:	add    bl,BYTE PTR ds:[rdi+0x66]
   14000e0c2:	je     0x14000e12d
   14000e0c4:	ins    DWORD PTR es:[rdi],dx
   14000e0c5:	gs ss xor al,0x5f
   14000e0c9:	jae    0x14000e0cb
   14000e0cb:	add    BYTE PTR [rdi+0x73765f04],al
   14000e0d1:	outs   dx,BYTE PTR ds:[rsi]
   14000e0d2:	ja     0x14000e144
   14000e0d4:	jb     0x14000e13f
   14000e0d6:	outs   dx,BYTE PTR ds:[rsi]
   14000e0d7:	je     0x14000e13f
   14000e0d9:	pop    rdi
   14000e0da:	jae    0x14000e0dc
   14000e0dc:	test   eax,0x6d656d05
   14000e0e1:	movsxd esi,DWORD PTR [rax+0x79]
   14000e0e4:	add    BYTE PTR [rax],al
   14000e0e6:	rex.WRB push r11
   14000e0e8:	push   rsi
   14000e0e9:	rex.XB push r10
   14000e0eb:	xor    DWORD PTR [rax],esi
   14000e0ed:	xor    BYTE PTR [rsi],ch
   14000e0ef:	fs ins BYTE PTR es:[rdi],dx
   14000e0f1:	ins    BYTE PTR es:[rdi],dx
   14000e0f2:	add    BYTE PTR [rax],al
   14000e0f4:	add    BYTE PTR [rcx],al
   14000e0f6:	(bad)  
   14000e0f7:	je     0x14000e15e
   14000e0f9:	jb     0x14000e168
   14000e0fb:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e102:	pop    rcx
   14000e103:	pop    r8
   14000e105:	pop    rax
   14000e106:	pop    rdx
   14000e107:	add    BYTE PTR [rsi],bl
   14000e109:	add    DWORD PTR [rdi+0x5f],ebx
   14000e10c:	rex.XB pop r15
   14000e10e:	jae    0x14000e180
   14000e110:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e114:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e11b:	ins    BYTE PTR es:[rdi],dx
   14000e11c:	gs jb  0x14000e11f
   14000e11f:	add    BYTE PTR [rbx+0x4],bl
   14000e122:	pop    rdi
   14000e123:	jne    0x14000e193
   14000e125:	ins    BYTE PTR es:[rdi],dx
   14000e126:	outs   dx,DWORD PTR ds:[rsi]
   14000e127:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e12a:	add    QWORD PTR [rdi+0x5f],rbx
   14000e12e:	fs ins BYTE PTR es:[rdi],dx
   14000e130:	ins    BYTE PTR es:[rdi],dx
   14000e131:	outs   dx,DWORD PTR ds:[rsi]
   14000e132:	outs   dx,BYTE PTR ds:[rsi]
   14000e133:	gs js  0x14000e19f
   14000e136:	je     0x14000e138
   14000e138:	test   BYTE PTR [rdx],0x5f
   14000e13b:	ins    BYTE PTR es:[rdi],dx
   14000e13c:	outs   dx,DWORD PTR ds:[rsi]
   14000e13d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e140:	popf   
   14000e141:	add    ebx,DWORD PTR [rdi+0x6f]
   14000e144:	outs   dx,BYTE PTR ds:[rsi]
   14000e145:	gs js  0x14000e1b1
   14000e148:	je     0x14000e14a
   14000e14a:	sahf   
   14000e14b:	add    DWORD PTR [rdi+0x61],ebx
   14000e14e:	ins    DWORD PTR es:[rdi],dx
   14000e14f:	jae    0x14000e1b8
   14000e151:	pop    rdi
   14000e152:	gs js  0x14000e1be
   14000e155:	je     0x14000e157
   14000e157:	add    BYTE PTR [rax+0x775f5f01],dl
   14000e15d:	addr32 gs je 0x14000e1ce
   14000e161:	(bad)  
   14000e162:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000e169:	add    BYTE PTR [rdx],bl
   14000e16b:	add    DWORD PTR [rdi+0x58],ebx
   14000e16e:	movsxd esi,DWORD PTR [rax+0x74]
   14000e171:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x2000072
   14000e17a:	pop    rdi
   14000e17b:	gs js  0x14000e1e7
   14000e17e:	je     0x14000e180
   14000e180:	mov    ch,0x1
   14000e182:	pop    rdi
   14000e183:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e186:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x78650548
   14000e18e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x775f049f
   14000e196:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000e199:	ins    BYTE PTR es:[rdi],dx
   14000e19a:	outs   dx,BYTE PTR ds:[rsi]
   14000e19b:	add    BYTE PTR [rsi+0x6e695f02],al
   14000e1a1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x87006d72
   14000e1a9:	add    bl,BYTE PTR [rdi+0x69]
   14000e1ac:	outs   dx,BYTE PTR ds:[rsi]
   14000e1ad:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   14000e1b5:	add    ch,al
   14000e1b7:	add    DWORD PTR [rdi+0x63],ebx
   14000e1ba:	outs   dx,DWORD PTR ds:[rsi]
   14000e1bb:	outs   dx,BYTE PTR ds:[rsi]
   14000e1bc:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000e1c2:	gs (bad) 
   14000e1c4:	fs ins BYTE PTR es:[rdi],dx
   14000e1c6:	outs   dx,DWORD PTR ds:[rsi]
   14000e1c7:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e1ca:	add    BYTE PTR gs:[rcx+rax*1+0x5f],bh
   14000e1cf:	pop    rdi
   14000e1d0:	jae    0x14000e237
   14000e1d2:	je     0x14000e249
   14000e1d4:	jae    0x14000e23b
   14000e1d6:	jb     0x14000e245
   14000e1d8:	(bad)  
   14000e1d9:	je     0x14000e243
   14000e1db:	gs jb  0x14000e250
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	(bad)
   14000e1e4:	outs   dx,DWORD PTR ds:[rsi]
   14000e1e5:	ins    DWORD PTR es:[rdi],dx
   14000e1e6:	ins    DWORD PTR es:[rdi],dx
   14000e1e7:	outs   dx,DWORD PTR ds:[rsi]
   14000e1e8:	fs add BYTE PTR gs:[rax],al
   14000e1ec:	sbb    al,0x2
   14000e1ee:	pop    rdi
   14000e1ef:	ins    WORD PTR es:[rdi],dx
   14000e1f1:	outs   dx,DWORD PTR ds:[rsi]
   14000e1f2:	fs add BYTE PTR gs:[rax],al
   14000e1f6:	jns    0x14000e1f9
   14000e1f8:	pop    rdi
   14000e1f9:	pop    rdi
   14000e1fa:	jae    0x14000e261
   14000e1fc:	je     0x14000e25d
   14000e1fe:	(bad)  
   14000e1ff:	jo     0x14000e271
   14000e201:	pop    rdi
   14000e202:	je     0x14000e27d
   14000e204:	jo     0x14000e26b
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	out    dx,al
   14000e209:	add    BYTE PTR [rdi],bh
   14000e20b:	pop    rdi
   14000e20c:	je     0x14000e287
   14000e20e:	jo     0x14000e275
   14000e210:	pop    rdi
   14000e211:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000e218:	outs   dx,DWORD PTR ds:[rsi]
   14000e219:	jb     0x14000e27a
   14000e21b:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000e222:	ins    BYTE PTR es:[rdi],dx
   14000e223:	pop    rdi
   14000e224:	ins    DWORD PTR es:[rdi],dx
   14000e225:	gs je  0x14000e290
   14000e228:	outs   dx,DWORD PTR ds:[rsi]
   14000e229:	fs rex je 0x14000e2a6
   14000e22d:	jo     0x14000e294
   14000e22f:	pop    rdi
   14000e230:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000e237:	rex.RB
   14000e238:	rex.B
   14000e239:	pop    r8
   14000e23b:	pop    rax
   14000e23c:	pop    rdx
   14000e23d:	add    BYTE PTR [rsi+0x1],al
   14000e240:	pop    rdi
   14000e241:	pop    rdi
   14000e242:	movsxd esi,DWORD PTR [rdx+0x74]
   14000e245:	pop    rdi
   14000e246:	fs gs (bad) 
   14000e249:	jne    0x14000e2b2
   14000e24b:	addr32 gs jb 0x14000e2ae
   14000e24f:	push   0x6b6f6f
   14000e254:	out    dx,al
   14000e255:	add    BYTE PTR [rbp+0x6e],al
   14000e258:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e25b:	gs push rax
   14000e25d:	outs   dx,DWORD PTR ds:[rsi]
   14000e25e:	imul   ebp,DWORD PTR [rsi+0x74],0xcb007265
   14000e265:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000e269:	outs   dx,DWORD PTR ds:[rsi]
   14000e26a:	fs gs push rax
   14000e26d:	outs   dx,DWORD PTR ds:[rsi]
   14000e26e:	imul   ebp,DWORD PTR [rsi+0x74],0xc0007265
   14000e275:	add    al,0x53
   14000e277:	ins    BYTE PTR es:[rdi],dx
   14000e278:	gs gs jo 0x14000e27c
   14000e27c:	push   0x2
   14000e27e:	rex.RXB
   14000e27f:	gs je  0x14000e2d5
   14000e282:	je     0x14000e2e5
   14000e284:	jb     0x14000e2fa
   14000e286:	jne    0x14000e2f8
   14000e288:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e28a:	outs   dx,WORD PTR ds:[rsi]
   14000e28c:	push   rdi
   14000e28d:	add    dh,cl
   14000e28f:	add    al,0x54
   14000e291:	gs jb  0x14000e301
   14000e294:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000e29b:	outs   dx,DWORD PTR ds:[rsi]
   14000e29c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e29f:	jae    0x14000e2a1
   14000e2a1:	add    dl,ah
   14000e2a3:	add    al,0x55
   14000e2a5:	outs   dx,BYTE PTR ds:[rsi]
   14000e2a6:	push   0x6c646e61
   14000e2ab:	gs fs rex.RB js 0x14000e313
   14000e2b0:	gs jo  0x14000e327
   14000e2b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e2ba:	gs jb  0x14000e2bd
   14000e2bd:	add    BYTE PTR [rbx+0x74655304],dh
   14000e2c3:	push   rbp
   14000e2c4:	outs   dx,BYTE PTR ds:[rsi]
   14000e2c5:	push   0x6c646e61
   14000e2ca:	gs fs rex.RB js 0x14000e332
   14000e2cf:	gs jo  0x14000e346
   14000e2d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e2d9:	gs jb  0x14000e2dc
   14000e2dc:	add    al,BYTE PTR [rbx]
   14000e2de:	rex.WB jae 0x14000e325
   14000e2e1:	gs (bad) 
   14000e2e3:	jne    0x14000e34c
   14000e2e5:	addr32 gs jb 0x14000e339
   14000e2e9:	jb     0x14000e350
   14000e2eb:	jae    0x14000e352
   14000e2ed:	outs   dx,BYTE PTR ds:[rsi]
   14000e2ee:	je     0x14000e2f0
   14000e2f0:	es add al,0x52
   14000e2f3:	je     0x14000e361
   14000e2f5:	push   rsi
   14000e2f6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000e2fd:	outs   dx,BYTE PTR ds:[rsi]
   14000e2fe:	ja     0x14000e369
   14000e300:	outs   dx,BYTE PTR ds:[rsi]
   14000e301:	add    BYTE PTR fs:[rax],al
   14000e304:	(bad)  
   14000e305:	add    al,0x52
   14000e307:	je     0x14000e375
   14000e309:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000e30b:	outs   dx,DWORD PTR ds:[rsi]
   14000e30c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000e310:	jne    0x14000e380
   14000e312:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000e316:	outs   dx,BYTE PTR ds:[rsi]
   14000e317:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000e319:	je     0x14000e38d
   14000e31b:	jns    0x14000e31d
   14000e31d:	add    BYTE PTR [rax],bl
   14000e31f:	add    al,0x52
   14000e321:	je     0x14000e38f
   14000e323:	rex.XB (bad) 
   14000e325:	jo     0x14000e39b
   14000e327:	jne    0x14000e39b
   14000e329:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000e32c:	outs   dx,BYTE PTR ds:[rsi]
   14000e32d:	je     0x14000e394
   14000e32f:	js     0x14000e3a5
   14000e331:	add    BYTE PTR [rcx+0x65755103],ch
   14000e337:	jb     0x14000e3b2
   14000e339:	push   rax
   14000e33a:	gs jb  0x14000e3a3
   14000e33d:	outs   dx,DWORD PTR ds:[rsi]
   14000e33e:	jb     0x14000e3ad
   14000e340:	(bad)  
   14000e341:	outs   dx,BYTE PTR ds:[rsi]
   14000e342:	movsxd esp,DWORD PTR [rbp+0x43]
   14000e345:	outs   dx,DWORD PTR ds:[rsi]
   14000e346:	jne    0x14000e3b6
   14000e348:	je     0x14000e3af
   14000e34a:	jb     0x14000e34c
   14000e34c:	(bad)  
   14000e34d:	add    al,BYTE PTR [rdi+0x65]
   14000e350:	je     0x14000e3a6
   14000e352:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000e359:	je     0x14000e35b
   14000e35b:	add    BYTE PTR [rax+0x74654702],al
   14000e361:	push   rbx
   14000e362:	jns    0x14000e3d7
   14000e364:	je     0x14000e3cb
   14000e366:	ins    DWORD PTR es:[rdi],dx
   14000e367:	push   rsp
   14000e368:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000e36f:	ins    BYTE PTR es:[rdi],dx
   14000e370:	gs push rsp
   14000e372:	imul   ebp,DWORD PTR [rbp+0x65],0x4c034a00
   14000e379:	outs   dx,DWORD PTR ds:[rsi]
   14000e37a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e37d:	rex.RX jb 0x14000e3e5
   14000e380:	add    BYTE PTR gs:[rsi],bh
   14000e383:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000e387:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
	...

Disassembly of section .data:

000000014000f000 <.data>:
   14000f000:	clc    
   14000f001:	mov    edi,0x14000
	...
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	cs (bad) 
   14000f012:	push   r14
   14000f014:	rex.XB
   14000f015:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f017:	ins    DWORD PTR es:[rdi],dx
   14000f018:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f01a:	fs jne 0x14000f089
   14000f01d:	gs rex
   14000f01f:	push   r12
   14000f021:	rex.WR
   14000f022:	rex
   14000f023:	add    BYTE PTR [rax],al
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	clc    
   14000f029:	mov    edi,0x14000
	...
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	cs (bad) 
   14000f03a:	push   r14
   14000f03c:	(bad)  
   14000f03d:	and    al,0x43
   14000f03f:	rex.B je 0x14000f0ae
   14000f042:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f044:	fs jne 0x14000f0b3
   14000f047:	gs push rsp
   14000f049:	rex push rsi
   14000f04b:	rex.XB
   14000f04c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f04e:	ins    DWORD PTR es:[rdi],dx
   14000f04f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f051:	fs jne 0x14000f0c0
   14000f054:	gs rex
   14000f056:	push   r12
   14000f058:	rex.WR
   14000f059:	rex
   14000f05a:	rex
   14000f05b:	rex
   14000f05c:	push   r12
   14000f05e:	rex.WR
   14000f05f:	rex
   14000f060:	add    BYTE PTR [rax],al
   14000f063:	add    BYTE PTR [rax],al
   14000f065:	add    BYTE PTR [rax],al
   14000f067:	add    al,bh
   14000f069:	mov    edi,0x14000
	...
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	cs (bad) 
   14000f07a:	push   r14
   14000f07c:	rex.XB
   14000f07d:	rex.B je 0x14000f0ec
   14000f080:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000f082:	fs jne 0x14000f0f1
   14000f085:	gs rex
   14000f087:	push   r12
   14000f089:	rex.WR
   14000f08a:	rex
   14000f08b:	add    BYTE PTR [rax],al
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	clc    
   14000f091:	mov    edi,0x14000
	...
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	cs (bad) 
   14000f0a2:	push   r13
   14000f0a4:	pop    rdi
   14000f0a5:	push   r12
   14000f0a7:	rex.WR pop rdi
   14000f0a9:	rex.WRB
   14000f0aa:	rex.WRXB
   14000f0ab:	rex.R push rbp
   14000f0ad:	rex.WR
   14000f0ae:	rex.RB (bad) 
   14000f0b0:	xor    BYTE PTR [rax+0x41],al
   14000f0b3:	push   rsp
   14000f0b4:	rex.WR
   14000f0b5:	rex
   14000f0b6:	add    al,dil
   14000f0b9:	mov    edi,0x14000
	...
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	cs (bad) 
   14000f0ca:	push   r14
   14000f0cc:	rex.XB
   14000f0cd:	rex.B je 0x14000f13c
   14000f0d0:	rex.RB js 0x14000f136
   14000f0d3:	gs jo  0x14000f14a
   14000f0d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000f0dd:	rex
   14000f0de:	add    al,dil
   14000f0e1:	mov    edi,0x14000
	...
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	cs (bad) 
   14000f0f2:	push   r14
   14000f0f4:	rex.XB push r10
   14000f0f6:	gs addr32 rex.WRXB (bad) 
   14000f0fa:	push   0x65
   14000f0fc:	movsxd esi,DWORD PTR [rax+rax*2+0x41]
   14000f100:	push   rsp
   14000f101:	rex.WR
   14000f102:	rex
   14000f103:	add    BYTE PTR [rax],al
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	clc    
   14000f109:	mov    edi,0x14000
	...
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	cs (bad) 
   14000f11a:	push   r13
   14000f11c:	rex.WB push r10
   14000f11e:	imul   esi,DWORD PTR gs:[ebx+0x74],0x42726172
   14000f127:	(bad)  
   14000f128:	jae    0x14000f18f
   14000f12a:	rex
   14000f12b:	add    BYTE PTR [rax],al
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	clc    
   14000f131:	mov    edi,0x14000
	...
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	cs (bad) 
   14000f142:	push   r13
   14000f144:	rex.WB push r13
   14000f146:	outs   dx,BYTE PTR ds:[rsi]
   14000f147:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000f14b:	outs   dx,BYTE PTR ds:[rsi]
   14000f14c:	rex
   14000f14d:	add    BYTE PTR [rax],al
   14000f150:	clc    
   14000f151:	mov    edi,0x14000
	...
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	cs (bad) 
   14000f162:	push   r14
   14000f164:	pop    rdi
   14000f165:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f168:	pop    rdi
   14000f169:	gs jb  0x14000f1de
   14000f16c:	outs   dx,DWORD PTR ds:[rsi]
   14000f16d:	jb     0x14000f1af
   14000f16f:	add    BYTE PTR [rax],al
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	add    DWORD PTR [rax],eax
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	clc    
   14000f179:	mov    edi,0x14000
	...
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	cs (bad) 
   14000f18a:	push   r14
   14000f18c:	je     0x14000f207
   14000f18e:	jo     0x14000f1f5
   14000f190:	pop    rdi
   14000f191:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14000f198:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	int    0x5d
   14000f1a2:	and    dl,dl
   14000f1a4:	data16 (bad) 
   14000f1a6:	(bad)  
   14000f1a7:	inc    DWORD PTR [rax]
   14000f1a9:	add    BYTE PTR [rax],al
   14000f1ab:	add    BYTE PTR [rax],al
   14000f1ad:	add    BYTE PTR [rax],al
   14000f1af:	add    bh,bh
   14000f1b1:	(bad)  
   14000f1b2:	(bad)  
   14000f1b3:	(bad)  
   14000f1b4:	(bad)  
   14000f1b5:	(bad)  
   14000f1b6:	(bad)  
   14000f1b7:	(bad)  
   14000f1b8:	(bad)  
   14000f1b9:	(bad)  
   14000f1ba:	(bad)  
   14000f1bb:	inc    DWORD PTR [rcx]
   14000f1bd:	add    BYTE PTR [rax],al
   14000f1bf:	add    al,ah
   14000f1c1:	mov    al,BYTE PTR [rax]
   14000f1c3:	rex add DWORD PTR [rax],eax
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	jne    0x14000f162
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	add    BYTE PTR [rax],al
   14000f1ce:	add    BYTE PTR [rax],al
   14000f1d0:	cdq    
   14000f1d1:	jl     0x14000f1d3
   14000f1d3:	rex add DWORD PTR [rax],eax
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	(bad)  
   14000f1d9:	jge    0x14000f1db
   14000f1db:	rex add DWORD PTR [rax],eax
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	sub    bh,BYTE PTR [rbp+0x0]
   14000f1e3:	rex add DWORD PTR [rax],eax
   14000f1e6:	add    BYTE PTR [rax],al
   14000f1e8:	ss jge 0x14000f1eb
   14000f1eb:	rex add DWORD PTR [rax],eax
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	rex.X jge 0x14000f1f3
   14000f1f3:	rex add DWORD PTR [rax],eax
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	rex.WRX jge 0x14000f1fb
   14000f1fb:	rex add DWORD PTR [rax],eax
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	pop    rdx
   14000f201:	jge    0x14000f203
   14000f203:	rex add DWORD PTR [rax],eax
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	data16 jge 0x14000f20b
   14000f20b:	rex add DWORD PTR [rax],eax
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	jb     0x14000f28f
   14000f212:	add    BYTE PTR [rax+0x1],al
   14000f215:	add    BYTE PTR [rax],al
   14000f217:	add    BYTE PTR [rsi+0x7d],bh
   14000f21a:	add    BYTE PTR [rax+0x1],al
   14000f21d:	add    BYTE PTR [rax],al
   14000f21f:	add    BYTE PTR [rdx+0x140007d],cl
   14000f225:	add    BYTE PTR [rax],al
   14000f227:	add    BYTE PTR [rsi+0x140007d],dl
   14000f22d:	add    BYTE PTR [rax],al
   14000f22f:	add    BYTE PTR [rdx+0x140007d],ah
	...
   14000f23d:	add    BYTE PTR [rax],al
   14000f23f:	add    BYTE PTR [rbx],dh
   14000f241:	jle    0x14000f243
   14000f243:	rex add DWORD PTR [rax],eax
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	(bad)  
   14000f249:	jle    0x14000f24b
   14000f24b:	rex add DWORD PTR [rax],eax
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	scas   al,BYTE PTR es:[rdi]
   14000f251:	jge    0x14000f253
   14000f253:	rex add DWORD PTR [rax],eax
	...
   14000f25e:	add    BYTE PTR [rax],al
   14000f260:	add    BYTE PTR [rdx+0x14000],cl
	...

Disassembly of section .pdata:

0000000140010000 <.pdata>:
   140010000:	add    BYTE PTR [rax],dl
   140010002:	add    BYTE PTR [rax],al
   140010004:	mov    bh,0x10
   140010006:	add    BYTE PTR [rax],al
   140010008:	rex (bad) 
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	mov    eax,0x4b000010
   140010011:	adc    DWORD PTR [rax],eax
   140010013:	add    BYTE PTR [rsp+rax*8+0x0],dl
   140010017:	add    BYTE PTR [rcx+rdx*1+0x0],cl
   14001001b:	add    BYTE PTR [rax-0x1fffffef],dh
   140010021:	enter  0x0,0x0
   140010025:	adc    al,BYTE PTR [rax]
   140010027:	add    BYTE PTR [rsi],ah
   140010029:	adc    al,BYTE PTR [rax]
   14001002b:	add    BYTE PTR [rax-0x3c],ah
   14001002e:	add    BYTE PTR [rax],al
   140010030:	xor    BYTE PTR [rdx],dl
   140010032:	add    BYTE PTR [rax],al
   140010034:	sahf   
   140010035:	adc    al,0x0
   140010037:	add    BYTE PTR [rax-0x3c],ch
   14001003a:	add    BYTE PTR [rax],al
   14001003c:	mov    al,0x14
   14001003e:	add    BYTE PTR [rax],al
   140010040:	rex.X (bad) 
   140010042:	add    BYTE PTR [rax],al
   140010044:	fadd   st,st(4)
   140010046:	add    BYTE PTR [rax],al
   140010048:	push   rax
   140010049:	(bad)  
   14001004a:	add    BYTE PTR [rax],al
   14001004c:	repz and eax,0xc5ac0000
   140010052:	add    BYTE PTR [rax],al
   140010054:	sbb    BYTE PTR [rsi],ah
   140010056:	add    BYTE PTR [rax],al
   140010058:	xchg   ebx,eax
   140010059:	add    BYTE PTR es:[rax],al
   14001005c:	mov    ah,0xd3
   14001005e:	add    BYTE PTR [rax],al
   140010060:	xchg   esp,eax
   140010061:	add    BYTE PTR es:[rax],al
   140010064:	mov    ecx,0xd8000026
   140010069:	enter  0x0,0xbc
   14001006d:	add    BYTE PTR es:[rax],al
   140010070:	rex.RXB (bad) 
   140010072:	add    BYTE PTR [rax],al
   140010074:	fadd   st,st(7)
   140010076:	add    BYTE PTR [rax],al
   140010078:	rex.W (bad) 
   14001007a:	add    BYTE PTR [rax],al
   14001007c:	sub    BYTE PTR gs:[rax],al
   14001007f:	add    BYTE PTR [rax-0x38],bh
   140010082:	add    BYTE PTR [rax],al
   140010084:	push   0xffffffff82000028
   140010089:	sub    BYTE PTR [rax],al
   14001008b:	add    BYTE PTR [rax],dl
   14001008d:	enter  0x0,0x84
   140010091:	sub    BYTE PTR [rax],al
   140010093:	add    BYTE PTR [rbp+0x10000028],ah
   140010099:	enter  0x0,0xb8
   14001009d:	sub    BYTE PTR [rax],al
   14001009f:	add    ah,ch
   1400100a1:	sub    DWORD PTR [rax],eax
   1400100a3:	add    BYTE PTR [rax],bl
   1400100a5:	enter  0x0,0xec
   1400100a9:	sub    DWORD PTR [rax],eax
   1400100ab:	add    BYTE PTR [rax+0x2a],bh
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	sub    al,0xc8
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	cwde   
   1400100b5:	sub    al,BYTE PTR [rax]
   1400100b7:	add    BYTE PTR [rdi],al
   1400100b9:	sub    eax,DWORD PTR [rax]
   1400100bb:	add    BYTE PTR [rax+rcx*8],ch
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	adc    BYTE PTR [rbx],ch
   1400100c2:	add    BYTE PTR [rax],al
   1400100c4:	test   al,0x2b
   1400100c6:	add    BYTE PTR [rax],al
   1400100c8:	mov    ah,0xd3
   1400100ca:	add    BYTE PTR [rax],al
   1400100cc:	test   al,0x2b
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	cdq    
   1400100d1:	sub    al,0x0
   1400100d3:	add    BYTE PTR [rax+rcx*8],bh
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	pushf  
   1400100d9:	sub    al,0x0
   1400100db:	add    BYTE PTR [rbp*1-0x37b80000],bl
   1400100e2:	add    BYTE PTR [rax],al
   1400100e4:	sub    BYTE PTR [rip+0x2e3e0000],ch        # 0x16e3f00ea
   1400100ea:	add    BYTE PTR [rax],al
   1400100ec:	(bad)  
   1400100ed:	enter  0x0,0x40
   1400100f1:	add    BYTE PTR cs:[rax],al
   1400100f4:	xor    al,0x2f
   1400100f6:	add    BYTE PTR [rax],al
   1400100f8:	(bad)  
   1400100f9:	enter  0x0,0x34
   1400100fd:	(bad)  
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	xchg   esi,eax
   140010101:	(bad)  
   140010102:	add    BYTE PTR [rax],al
   140010104:	(bad)  
   140010105:	enter  0x0,0x98
   140010109:	(bad)  
   14001010a:	add    BYTE PTR [rax],al
   14001010c:	sbb    BYTE PTR [rcx],dh
   14001010e:	add    BYTE PTR [rax],al
   140010110:	js     0x1400100da
   140010112:	add    BYTE PTR [rax],al
   140010114:	sbb    BYTE PTR [rcx],dh
   140010116:	add    BYTE PTR [rax],al
   140010118:	mov    edx,0x90000031
   14001011d:	enter  0x0,0xbc
   140010121:	xor    DWORD PTR [rax],eax
   140010123:	add    dh,ah
   140010125:	xor    DWORD PTR [rax],eax
   140010127:	add    al,bl
   140010129:	enter  0x0,0xf4
   14001012d:	xor    DWORD PTR [rax],eax
   14001012f:	add    BYTE PTR [rdi],bl
   140010131:	xor    al,BYTE PTR [rax]
   140010133:	add    al,bl
   140010135:	enter  0x0,0x20
   140010139:	xor    al,BYTE PTR [rax]
   14001013b:	add    BYTE PTR [rax],ch
   14001013d:	xor    eax,DWORD PTR [rax]
   14001013f:	add    BYTE PTR [rax+0x280000c8],ch
   140010145:	xor    eax,DWORD PTR [rax]
   140010147:	add    ch,bl
   140010149:	xor    eax,DWORD PTR [rax]
   14001014b:	add    al,ah
   14001014d:	enter  0x0,0xe0
   140010151:	xor    eax,DWORD PTR [rax]
   140010153:	add    BYTE PTR [rbx],bl
   140010155:	xor    al,0x0
   140010157:	add    BYTE PTR [rbx+rdx*8+0x34340000],dh
   14001015e:	add    BYTE PTR [rax],al
   140010160:	ret    0x34
   140010163:	add    ah,al
   140010165:	enter  0x0,0xc4
   140010169:	xor    al,0x0
   14001016b:	add    bh,bl
   14001016d:	xor    al,0x0
   14001016f:	add    al,bl
   140010171:	enter  0x0,0xe0
   140010175:	xor    al,0x0
   140010177:	add    bh,dh
   140010179:	xor    al,0x0
   14001017b:	add    BYTE PTR [rax],dl
   14001017d:	enter  0x0,0xf8
   140010181:	xor    al,0x0
   140010183:	add    BYTE PTR [rdi+0x35],ch
   140010186:	add    BYTE PTR [rax],al
   140010188:	loopne 0x140010152
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	jo     0x1400101c3
   14001018e:	add    BYTE PTR [rax],al
   140010190:	clc    
   140010191:	xor    eax,0xd3b40000
   140010196:	add    BYTE PTR [rax],al
   140010198:	or     BYTE PTR [rsi],dh
   14001019a:	add    BYTE PTR [rax],al
   14001019c:	(bad)  
   14001019d:	add    BYTE PTR ss:[rax],al
   1400101a0:	mov    ah,0xd3
   1400101a2:	add    BYTE PTR [rax],al
   1400101a4:	cmp    BYTE PTR [rsi],dh
   1400101a6:	add    BYTE PTR [rax],al
   1400101a8:	sub    edi,DWORD PTR [rdx]
   1400101aa:	add    BYTE PTR [rax],al
   1400101ac:	lock enter 0x0,0x2c
   1400101b1:	cmp    al,BYTE PTR [rax]
   1400101b3:	add    cl,cl
   1400101b5:	cmp    al,BYTE PTR [rax]
   1400101b7:	add    al,ah
   1400101b9:	enter  0x0,0xcc
   1400101bd:	cmp    al,BYTE PTR [rax]
   1400101bf:	add    ch,ch
   1400101c1:	cmp    al,0x0
   1400101c3:	add    BYTE PTR [rax-0xfffff37],ah
   1400101c9:	cmp    al,0x0
   1400101cb:	add    BYTE PTR [rbx+0x3d],dh
   1400101ce:	add    BYTE PTR [rax],al
   1400101d0:	mov    edx,cs
   1400101d2:	add    BYTE PTR [rax],al
   1400101d4:	je     0x140010213
   1400101d6:	add    BYTE PTR [rax],al
   1400101d8:	mov    ah,0x41
   1400101da:	add    BYTE PTR [rax],al
   1400101dc:	fmul   st,st(2)
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	mov    ah,0x41
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	(bad)  
   1400101e5:	rex.WB add BYTE PTR [r8],al
   1400101e8:	int3   
   1400101e9:	retf   
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	xor    BYTE PTR [rcx+0x0],cl
   1400101ef:	add    BYTE PTR [rax+0x6000004a],dl
   1400101f5:	int3   
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	nop
   1400101f9:	rex.WX add BYTE PTR [rax],al
   1400101fc:	push   rax
   1400101fd:	rex.WR add BYTE PTR [rax],r8b
   140010200:	nop
   140010201:	int3   
   140010202:	add    BYTE PTR [rax],al
   140010204:	push   rax
   140010205:	rex.WR add BYTE PTR [rax],r8b
   140010208:	(bad)  
   140010209:	rex.WRX add BYTE PTR [rax],r8b
   14001020c:	cmp    ch,cl
   14001020e:	add    BYTE PTR [rax],al
   140010210:	fmul   DWORD PTR [rsi+0x0]
   140010213:	add    BYTE PTR [rcx+rdx*2+0x0],cl
   140010217:	add    BYTE PTR [rax],bh
   140010219:	int    0x0
   14001021b:	add    BYTE PTR [rcx+rdx*2+0x0],cl
   14001021f:	add    BYTE PTR [rbp+0x58000051],ah
   140010225:	int    0x0
   140010227:	add    BYTE PTR [rax+0x57000051],ch
   14001022d:	push   rdx
   14001022e:	add    BYTE PTR [rax],al
   140010230:	fs int 0x0
   140010233:	add    BYTE PTR [rax+0x52],ch
   140010236:	add    BYTE PTR [rax],al
   140010238:	cli    
   140010239:	push   rdx
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	xchg   esp,eax
   14001023d:	int    0x0
   14001023f:	add    BYTE PTR [rbx+rdx*2+0x0],cl
   140010243:	add    BYTE PTR [rcx-0x5bffffad],cl
   140010249:	int    0x0
   14001024b:	add    BYTE PTR [rbx+rdx*2+0x53ee0000],bh
   140010252:	add    BYTE PTR [rax],al
   140010254:	lods   al,BYTE PTR ds:[rsi]
   140010255:	int    0x0
   140010257:	add    ah,bh
   140010259:	push   rbx
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	sub    BYTE PTR [rax+rax*1+0x0],dl
   140010260:	mov    eax,0x6c0000cd
   140010265:	push   rsp
   140010266:	add    BYTE PTR [rax],al
   140010268:	rcl    DWORD PTR [rax+rax*1+0x0],cl
   14001026c:	ror    ch,0x0
   14001026f:	add    ah,bl
   140010271:	push   rsp
   140010272:	add    BYTE PTR [rax],al
   140010274:	test   BYTE PTR [rbp+0x0],dl
   140010277:	add    al,dl
   140010279:	int    0x0
   14001027b:	add    BYTE PTR [rbp+rdx*2+0x56430000],cl
   140010282:	add    BYTE PTR [rax],al
   140010284:	loopne 0x140010253
   140010286:	add    BYTE PTR [rax],al
   140010288:	rex.WR push rsi
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	fst    QWORD PTR [rsi+0x0]
   14001028f:	add    ah,dh
   140010291:	int    0x0
   140010293:	add    ah,ch
   140010295:	push   rsi
   140010296:	add    BYTE PTR [rax],al
   140010298:	xchg   edi,eax
   140010299:	push   rdi
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	or     dh,cl
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	lods   al,BYTE PTR ds:[rsi]
   1400102a1:	push   rdi
   1400102a2:	add    BYTE PTR [rax],al
   1400102a4:	not    BYTE PTR [rdi+0x0]
   1400102a7:	add    BYTE PTR [rsi+rcx*8],bl
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	cld    
   1400102ad:	push   rdi
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	sub    ebx,DWORD PTR [rax+0x0]
   1400102b3:	add    BYTE PTR [rsi+rcx*8],ah
   1400102b6:	add    BYTE PTR [rax],al
   1400102b8:	cmp    al,0x58
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	xchg   ecx,eax
   1400102bd:	pop    rax
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	sub    al,0xce
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	pushf  
   1400102c5:	pop    rax
   1400102c6:	add    BYTE PTR [rax],al
   1400102c8:	pop    rdi
   1400102c9:	pop    rcx
   1400102ca:	add    BYTE PTR [rax],al
   1400102cc:	xor    al,0xce
   1400102ce:	add    BYTE PTR [rax],al
   1400102d0:	ins    BYTE PTR es:[rdi],dx
   1400102d1:	pop    rcx
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	(bad)  
   1400102d5:	pop    rcx
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	rex.WR (bad) 
   1400102da:	add    BYTE PTR [rax],al
   1400102dc:	fcomp  QWORD PTR [rcx+0x0]
   1400102df:	add    BYTE PTR [rbx+0x5a],cl
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	push   rsp
   1400102e5:	(bad)  
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	pop    rsp
   1400102e9:	pop    rdx
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	push   rsi
   1400102ed:	pop    rbx
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	pop    rsp
   1400102f1:	(bad)  
   1400102f2:	add    BYTE PTR [rax],al
   1400102f4:	pop    rsp
   1400102f5:	pop    rbx
   1400102f6:	add    BYTE PTR [rax],al
   1400102f8:	rex pop rbp
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	je     0x1400102cc
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	rex.WR pop rbp
   140010302:	add    BYTE PTR [rax],al
   140010304:	xchg   edi,eax
   140010305:	pop    rbp
   140010306:	add    BYTE PTR [rax],al
   140010308:	xchg   esp,eax
   140010309:	(bad)  
   14001030a:	add    BYTE PTR [rax],al
   14001030c:	lods   al,BYTE PTR ds:[rsi]
   14001030d:	pop    rbp
   14001030e:	add    BYTE PTR [rax],al
   140010310:	neg    DWORD PTR [rbp+0x0]
   140010313:	add    BYTE PTR [rsi+rcx*8+0x5e0c0000],bl
   14001031a:	add    BYTE PTR [rax],al
   14001031c:	push   rdi
   14001031d:	pop    rsi
   14001031e:	add    BYTE PTR [rax],al
   140010320:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010321:	(bad)  
   140010322:	add    BYTE PTR [rax],al
   140010324:	ins    BYTE PTR es:[rdi],dx
   140010325:	pop    rsi
   140010326:	add    BYTE PTR [rax],al
   140010328:	movabs eax,ds:0xac0000ceac00005f
   140010331:	pop    rdi
   140010332:	add    BYTE PTR [rax],al
   140010334:	sub    BYTE PTR [rdx+0x0],ah
   140010337:	add    ah,cl
   140010339:	(bad)  
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	cmp    al,0x62
   14001033e:	add    BYTE PTR [rax],al
   140010340:	cmp    DWORD PTR [rbx+0x0],esp
   140010343:	add    BYTE PTR [rdi+rcx*8+0x634c0000],dl
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	sbb    BYTE PTR [rbp+0x0],ah
   14001034f:	add    BYTE PTR [rax-0x30],bl
   140010352:	add    BYTE PTR [rax],al
   140010354:	sub    al,0x65
   140010356:	add    BYTE PTR [rax],al
   140010358:	movabs ds:0xac0000d07c000067,eax
   140010361:	add    BYTE PTR [eax],al
   140010364:	mov    BYTE PTR [rcx+0x0],ch
   140010367:	add    BYTE PTR [rax+rdx*8+0x69bc0000],ah
   14001036e:	add    BYTE PTR [rax],al
   140010370:	xor    BYTE PTR [rbx+0x0],ch
   140010373:	add    al,al
   140010375:	rol    BYTE PTR [rax],1
   140010377:	add    BYTE PTR [rbx+rbp*2],bh
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	icebp  
   14001037d:	ins    DWORD PTR es:[rdi],dx
   14001037e:	add    BYTE PTR [rax],al
   140010380:	(bad)  
   140010382:	add    BYTE PTR [rax],al
   140010384:	cld    
   140010385:	ins    DWORD PTR es:[rdi],dx
   140010386:	add    BYTE PTR [rax],al
   140010388:	in     eax,0x70
   14001038a:	add    BYTE PTR [rax],al
   14001038c:	add    cl,dl
   14001038e:	add    BYTE PTR [rax],al
   140010390:	in     al,dx
   140010391:	jo     0x140010393
   140010393:	add    bh,ch
   140010395:	jno    0x140010397
   140010397:	add    BYTE PTR [rcx+rdx*8+0x0],bl
   14001039b:	add    ah,bh
   14001039d:	jno    0x14001039f
   14001039f:	add    BYTE PTR [rbx+rsi*2],dl
   1400103a2:	add    BYTE PTR [rax],al
   1400103a4:	clc    
   1400103a5:	rol    DWORD PTR [rax],1
   1400103a7:	add    BYTE PTR [rbx+rsi*2],bl
   1400103aa:	add    BYTE PTR [rax],al
   1400103ac:	pop    rdx
   1400103ad:	jne    0x1400103af
   1400103af:	add    BYTE PTR [rdx+rdx*8+0x0],bl
   1400103b3:	add    BYTE PTR [rbp+rsi*2+0x0],ch
   1400103b7:	add    BYTE PTR [rbx+0x6c000078],dh
   1400103bd:	rol    BYTE PTR [rax],cl
   1400103bf:	add    BYTE PTR [rax+rdi*2+0x79a40000],dh
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	xchg   esp,eax
   1400103c9:	int    0x0
   1400103cb:	add    BYTE PTR [rcx+rdi*2+0x7a640000],dh
   1400103d2:	add    BYTE PTR [rax],al
   1400103d4:	adc    dl,0x0
   1400103d7:	add    BYTE PTR [rdx+rdi*2+0x0],dh
   1400103db:	add    BYTE PTR [rsp+rdi*2+0x0],ch
   1400103df:	add    BYTE PTR [rax+0x740000d2],bl
   1400103e5:	jl     0x1400103e7
   1400103e7:	add    BYTE PTR [rcx-0x43ffff84],bl
   1400103ed:	rol    BYTE PTR [rax],cl
   1400103ef:	add    BYTE PTR [rbp+0x1c00007c],ah
   1400103f5:	jge    0x1400103f7
   1400103f7:	add    ah,al
   1400103f9:	rol    BYTE PTR [rax],cl
   1400103fb:	add    BYTE PTR [rdx+0x3100007d],bh
   140010401:	jle    0x140010403
   140010403:	add    ah,cl
   140010405:	rol    BYTE PTR [rax],cl
   140010407:	add    BYTE PTR [rsi+rdi*2+0x0],dl
   14001040b:	add    BYTE PTR [rbp-0x1fffff82],bh
   140010411:	enter  0x0,0xd0
   140010415:	jle    0x140010417
   140010417:	add    BYTE PTR [rdx],bl
   140010419:	jg     0x14001041b
   14001041b:	add    ah,bl
   14001041d:	rol    BYTE PTR [rax],cl
   14001041f:	add    BYTE PTR [rdi+rdi*2],bl
   140010422:	add    BYTE PTR [rax],al
   140010424:	jns    0x1400104a5
   140010426:	add    BYTE PTR [rax],al
   140010428:	add    al,0xd3
   14001042a:	add    BYTE PTR [rax],al
   14001042c:	cmp    BYTE PTR [rdi+0x0],0x0
   140010430:	jrcxz  0x1400104b1
   140010432:	add    BYTE PTR [rax],al
   140010434:	fmul   st,st(0)
   140010436:	add    BYTE PTR [rax],al
   140010438:	in     al,0x7f
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	add    DWORD PTR [rax-0x37f00000],eax
   140010442:	add    BYTE PTR [rax],al
   140010444:	and    BYTE PTR [rax-0x7fc10000],al
   14001044a:	add    BYTE PTR [rax],al
   14001044c:	xor    bl,dl
   14001044e:	add    BYTE PTR [rax],al
   140010450:	push   rax
   140010451:	add    BYTE PTR [rax],0x0
   140010454:	sahf   
   140010455:	add    BYTE PTR [rax],0x0
   140010458:	cmp    bl,dl
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	lods   al,BYTE PTR ds:[rsi]
   14001045d:	add    BYTE PTR [rax],0x0
   140010460:	cmp    eax,DWORD PTR [rcx-0x2cc00000]
   140010466:	add    BYTE PTR [rax],al
   140010468:	rex.R add DWORD PTR [rax],0x81f400
   14001046f:	add    BYTE PTR [rax-0x2d],bl
   140010472:	add    BYTE PTR [rax],al
   140010474:	hlt    
   140010475:	add    DWORD PTR [rax],0x820b00
   14001047b:	add    BYTE PTR [rax],dl
   14001047d:	enter  0x0,0x14
   140010481:	(bad)  
   140010482:	add    BYTE PTR [rax],al
   140010484:	jns    0x140010408
   140010486:	add    BYTE PTR [rax],al
   140010488:	js     0x14001045d
   14001048a:	add    BYTE PTR [rax],al
   14001048c:	jl     0x140010410
   14001048e:	add    BYTE PTR [rax],al
   140010490:	jno    0x140010416
   140010492:	add    BYTE PTR [rax],al
   140010494:	adc    bl,0x0
   140010497:	add    BYTE PTR [rsp+rax*4+0x0],dh
   14001049b:	add    BYTE PTR [rdx-0x7b],al
   14001049e:	add    BYTE PTR [rax],al
   1400104a0:	adc    al,cl
   1400104a2:	add    BYTE PTR [rax],al
   1400104a4:	test   DWORD PTR [rax],r8d
   1400104a7:	add    BYTE PTR [rsi-0x7b],dl
   1400104aa:	add    BYTE PTR [rax],al
   1400104ac:	adc    al,cl
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	test   DWORD PTR fs:[rax],eax
   1400104b3:	add    BYTE PTR [rsi-0x53ffff7a],ch
   1400104b9:	rol    DWORD PTR [rax],cl
   1400104bb:	add    al,al
   1400104bd:	xchg   BYTE PTR [rax],al
   1400104bf:	add    BYTE PTR [rcx],al
   1400104c1:	xchg   DWORD PTR [rax],eax
   1400104c3:	add    BYTE PTR [rax],dl
   1400104c5:	enter  0x0,0x4
   1400104c9:	xchg   DWORD PTR [rax],eax
   1400104cb:	add    BYTE PTR [rdi+rax*4],bl
   1400104ce:	add    BYTE PTR [rax],al
   1400104d0:	adc    al,cl
   1400104d2:	add    BYTE PTR [rax],al
   1400104d4:	and    al,0x87
   1400104d6:	add    BYTE PTR [rax],al
   1400104d8:	pop    rsp
   1400104d9:	xchg   DWORD PTR [rax],eax
   1400104db:	add    BYTE PTR [rbx+rdx*8-0x78a40000],dh
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	xchg   esp,eax
   1400104e5:	xchg   DWORD PTR [rax],eax
   1400104e7:	add    BYTE PTR [rbx+rdx*8-0x77e00000],dh
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	(bad)  
   1400104f1:	mov    BYTE PTR [rax],al
   1400104f3:	add    al,al
   1400104f5:	rol    DWORD PTR [rax],cl
   1400104f7:	add    BYTE PTR [rax+rcx*4+0x0],dh
   1400104fb:	add    BYTE PTR [rdi],ah
   1400104fd:	mov    DWORD PTR [rax],eax
   1400104ff:	add    al,ah
   140010501:	rol    DWORD PTR [rax],cl
   140010503:	add    BYTE PTR [rcx+rcx*4],dh
   140010506:	add    BYTE PTR [rax],al
   140010508:	push   0xffffffffd8000089
   14001050d:	enter  0x0,0x68
   140010511:	mov    DWORD PTR [rax],eax
   140010513:	add    BYTE PTR [rax],al
   140010515:	mov    al,BYTE PTR [rax]
   140010517:	add    BYTE PTR [rbx+rdx*8-0x75f40000],dh
   14001051e:	add    BYTE PTR [rax],al
   140010520:	or     DWORD PTR [rdx-0x2c140000],0x0
   140010527:	add    BYTE PTR [rax-0x28ffff76],ah
   14001052d:	mov    al,BYTE PTR [rax]
   14001052f:	add    al,bl
   140010531:	enter  0x0,0xe0
   140010535:	mov    al,BYTE PTR [rax]
   140010537:	add    BYTE PTR [rbx+rcx*4],dl
   14001053a:	add    BYTE PTR [rax],al
   14001053c:	hlt    
   14001053d:	rol    DWORD PTR [rax],cl
   14001053f:	add    BYTE PTR [rax],ah
   140010541:	mov    eax,DWORD PTR [rax]
   140010543:	add    BYTE PTR [rax-0x75],ah
   140010546:	add    BYTE PTR [rax],al
   140010548:	fmul   st,st(0)
   14001054a:	add    BYTE PTR [rax],al
   14001054c:	(bad)  
   14001054d:	mov    eax,DWORD PTR [rax]
   14001054f:	add    BYTE PTR [rbx-0x4bffff75],dh
   140010555:	rol    DWORD PTR [rax],cl
   140010557:	add    BYTE PTR [rbx+rcx*4-0x718a0000],dh
   14001055e:	add    BYTE PTR [rax],al
   140010560:	cld    
   140010561:	rol    DWORD PTR [rax],cl
   140010563:	add    ah,cl
   140010565:	mov    es,WORD PTR [rax]
   140010567:	add    bh,ah
   140010569:	mov    es,WORD PTR [rax]
   14001056b:	add    BYTE PTR [rax-0x3ffff37],dl
   140010571:	mov    es,WORD PTR [rax]
   140010573:	add    BYTE PTR [rdi],dl
   140010575:	pop    QWORD PTR [rax]
   140010577:	add    BYTE PTR [rax+0x440000c9],dl
   14001057d:	pop    QWORD PTR [rax]
   14001057f:	add    BYTE PTR [rdi-0x71],bl
   140010582:	add    BYTE PTR [rax],al
   140010584:	enter  0xca,0x0
   140010588:	je     0x140010519
   14001058a:	add    BYTE PTR [rax],al
   14001058c:	(bad)  
   14001058d:	pop    QWORD PTR [rax]
   14001058f:	add    al,cl
   140010591:	retf   0x0
   140010594:	retf   
   140010595:	pop    QWORD PTR [rax]
   140010597:	add    dh,ah
   140010599:	pop    QWORD PTR [rax]
   14001059b:	add    BYTE PTR [rax+0x120000cc],al
   1400105a1:	nop
   1400105a2:	add    BYTE PTR [rax],al
   1400105a4:	sub    eax,0xec000090
   1400105a9:	(bad)  
   1400105aa:	add    BYTE PTR [rax],al
   1400105ac:	xchg   edx,eax
   1400105ad:	nop
   1400105ae:	add    BYTE PTR [rax],al
   1400105b0:	mov    ah,0x90
   1400105b2:	add    BYTE PTR [rax],al
   1400105b4:	fadd   st,st(5)
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	mov    ah,0x90
   1400105ba:	add    BYTE PTR [rax],al
   1400105bc:	repnz nop
   1400105be:	add    BYTE PTR [rax],al
   1400105c0:	lods   al,BYTE PTR ds:[rsi]
   1400105c1:	iret   
   1400105c2:	add    BYTE PTR [rax],al
   1400105c4:	hlt    
   1400105c5:	nop
   1400105c6:	add    BYTE PTR [rax],al
   1400105c8:	xor    dl,BYTE PTR [rcx-0x30400000]
   1400105ce:	add    BYTE PTR [rax],al
   1400105d0:	xor    al,0x91
   1400105d2:	add    BYTE PTR [rax],al
   1400105d4:	jb     0x140010567
   1400105d6:	add    BYTE PTR [rax],al
   1400105d8:	(bad)  
   1400105d9:	iret   
   1400105da:	add    BYTE PTR [rax],al
   1400105dc:	test   BYTE PTR [rcx-0x6e3e0000],dl
   1400105e2:	add    BYTE PTR [rax],al
   1400105e4:	jl     0x1400105b7
   1400105e6:	add    BYTE PTR [rax],al
   1400105e8:	(bad)  
   1400105e9:	xchg   ecx,eax
   1400105ea:	add    BYTE PTR [rax],al
   1400105ec:	adc    dl,BYTE PTR [rdx-0x2de80000]
   1400105f2:	add    BYTE PTR [rax],al
   1400105f4:	adc    dl,BYTE PTR [rdx-0x6dad0000]
   1400105fa:	add    BYTE PTR [rax],al
   1400105fc:	(bad)  
   1400105fd:	rol    BYTE PTR [rax],cl
   1400105ff:	add    BYTE PTR [rbx-0x6e],dl
   140010602:	add    BYTE PTR [rax],al
   140010604:	jg     0x140010598
   140010606:	add    BYTE PTR [rax],al
   140010608:	(bad)  
   140010609:	rol    BYTE PTR [rax],cl
   14001060b:	add    BYTE PTR [rdi-0x6e],bh
   14001060e:	add    BYTE PTR [rax],al
   140010610:	(bad)  
   140010611:	xchg   edx,eax
   140010612:	add    BYTE PTR [rax],al
   140010614:	(bad)  
   140010615:	rol    BYTE PTR [rax],cl
   140010617:	add    BYTE PTR [rdx-0x47ffff6e],bl
   14001061d:	xchg   edx,eax
   14001061e:	add    BYTE PTR [rax],al
   140010620:	(bad)  
   140010621:	rol    BYTE PTR [rax],cl
   140010623:	add    al,al
   140010625:	xchg   edx,eax
   140010626:	add    BYTE PTR [rax],al
   140010628:	loop   0x1400105bc
   14001062a:	add    BYTE PTR [rax],al
   14001062c:	(bad)  
   14001062d:	rol    BYTE PTR [rax],cl
   14001062f:	add    ah,ah
   140010631:	xchg   edx,eax
   140010632:	add    BYTE PTR [rax],al
   140010634:	(bad)  
   140010635:	xchg   ebx,eax
   140010636:	add    BYTE PTR [rax],al
   140010638:	fmul   st,st(0)
   14001063a:	add    BYTE PTR [rax],al
   14001063c:	xor    BYTE PTR [rbx-0x6cb00000],dl
   140010642:	add    BYTE PTR [rax],al
   140010644:	adc    al,cl
   140010646:	add    BYTE PTR [rax],al
   140010648:	push   rax
   140010649:	xchg   ebx,eax
   14001064a:	add    BYTE PTR [rax],al
   14001064c:	mov    ah,0x93
   14001064e:	add    BYTE PTR [rax],al
   140010650:	adc    al,cl
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    BYTE PTR [rax],al
   14001100e:	add    al,BYTE PTR [rax]
   140011010:	adc    BYTE PTR [rax],al
   140011012:	add    BYTE PTR [rax],al
   140011014:	and    BYTE PTR [rax],al
   140011016:	add    BYTE PTR [rax+0x18],al
   14001101c:	cmp    BYTE PTR [rax],al
   14001101e:	add    BYTE PTR [rax+0x0],al
	...
   14001102c:	add    BYTE PTR [rax],al
   14001102e:	add    DWORD PTR [rax],eax
   140011030:	add    DWORD PTR [rax],eax
   140011032:	add    BYTE PTR [rax],al
   140011034:	push   rax
   140011035:	add    BYTE PTR [rax],al
   140011037:	add    BYTE PTR [rax],0x0
	...
   140011046:	add    DWORD PTR [rax],eax
   140011048:	add    DWORD PTR [rax],eax
   14001104a:	add    BYTE PTR [rax],al
   14001104c:	push   0x800000
	...
   14001105d:	add    BYTE PTR [rcx],al
   14001105f:	add    BYTE PTR [rax],al
   140011061:	add    BYTE PTR [rax],al
   140011063:	add    BYTE PTR [rax+0x0],al
	...
   140011075:	add    BYTE PTR [rcx],al
   140011077:	add    BYTE PTR [rcx],cl
   140011079:	add    al,0x0
   14001107b:	add    BYTE PTR [rax-0x70000000],dl
   140011081:	adc    al,0x1
   140011083:	add    BYTE PTR [rbx+rax*1+0x0],ah
	...
   14001108f:	add    BYTE PTR [rax-0xffffef0],ah
   140011095:	add    eax,DWORD PTR [rax]
	...
   14001109f:	add    BYTE PTR [rdi+rdi*1],bh
   1400110a2:	js     0x140011111
   1400110a4:	ins    BYTE PTR es:[rdi],dx
   1400110a5:	and    BYTE PTR [rsi+0x65],dh
   1400110a8:	jb     0x14001111d
   1400110aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400110b1:	xor    BYTE PTR [rdx],ah
   1400110b3:	and    BYTE PTR [rbp+0x6e],ah
   1400110b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400110b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400110c0:	rex.RX sub eax,0x73202238
   1400110c6:	je     0x140011129
   1400110c8:	outs   dx,BYTE PTR ds:[rsi]
   1400110c9:	fs (bad) 
   1400110cb:	ins    BYTE PTR es:[rdi],dx
   1400110cc:	outs   dx,DWORD PTR ds:[rsi]
   1400110cd:	outs   dx,BYTE PTR ds:[rsi]
   1400110ce:	gs cmp eax,0x73657922
   1400110d4:	and    bh,BYTE PTR [rdi]
   1400110d6:	ds or  eax,0x73613c0a
   1400110dc:	jae    0x140011143
   1400110de:	ins    DWORD PTR es:[rdi],dx
   1400110df:	(bad)  
   1400110e0:	ins    BYTE PTR es:[rdi],dx
   1400110e1:	jns    0x140011103
   1400110e3:	js     0x140011152
   1400110e5:	ins    BYTE PTR es:[rdi],dx
   1400110e6:	outs   dx,BYTE PTR ds:[rsi]
   1400110e7:	jae    0x140011126
   1400110e9:	and    dh,BYTE PTR [rbp+0x72]
   1400110ec:	outs   dx,BYTE PTR ds:[rsi]
   1400110ed:	cmp    dh,BYTE PTR [rbx+0x63]
   1400110f0:	push   0x73616d65
   1400110f5:	sub    eax,0x7263696d
   1400110fa:	outs   dx,DWORD PTR ds:[rsi]
   1400110fb:	jae    0x14001116c
   1400110fd:	data16 je 0x14001112d
   140011100:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011103:	cmp    ah,BYTE PTR [rcx+0x73]
   140011106:	ins    DWORD PTR es:[rdi],dx
   140011107:	cs jbe 0x14001113b
   14001110a:	and    ah,BYTE PTR [rax]
   14001110c:	ins    DWORD PTR es:[rdi],dx
   14001110d:	(bad)  
   14001110e:	outs   dx,BYTE PTR ds:[rsi]
   14001110f:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140011116:	jb     0x14001118b
   140011118:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001111f:	xor    BYTE PTR [rdx],ah
   140011121:	and    BYTE PTR ds:[rip+0x3c20200a],cl        # 0x17c213132
   140011128:	(bad)  
   140011129:	jae    0x14001119e
   14001112b:	gs ins DWORD PTR es:[rdi],dx
   14001112d:	(bad)  
   14001112e:	ins    BYTE PTR es:[rdi],dx
   14001112f:	jns    0x14001117a
   140011131:	fs outs dx,BYTE PTR gs:[rsi]
   140011134:	je     0x14001119f
   140011136:	je     0x1400111b1
   140011138:	and    BYTE PTR [rsi+0x65],dh
   14001113b:	jb     0x1400111b0
   14001113d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   140011144:	xor    BYTE PTR [rsi],ch
   140011146:	xor    BYTE PTR ss:[rax],dh
   140011149:	xor    DWORD PTR cs:[rcx],edi
   14001114c:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021315c
   140011152:	and    BYTE PTR [rax],ah
   140011154:	jo     0x1400111c8
   140011156:	outs   dx,DWORD PTR ds:[rsi]
   140011157:	movsxd esp,DWORD PTR [rbp+0x73]
   14001115a:	jae    0x1400111cb
   14001115c:	jb     0x14001119f
   14001115e:	jb     0x1400111c3
   140011160:	push   0x63657469
   140011165:	je     0x1400111dc
   140011167:	jb     0x1400111ce
   140011169:	cmp    eax,0x36385822
   14001116e:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021317e
   140011174:	and    BYTE PTR [rax],ah
   140011176:	outs   dx,BYTE PTR ds:[rsi]
   140011177:	(bad)  
   140011178:	ins    DWORD PTR es:[rdi],dx
   140011179:	gs cmp eax,0x76737322
   14001117f:	(bad)  
   140011180:	outs   dx,BYTE PTR gs:[esi]
   140011183:	je     0x1400111b3
   140011185:	gs js  0x1400111ed
   140011188:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160213198
   14001118e:	and    BYTE PTR [rax],ah
   140011190:	je     0x14001120b
   140011192:	jo     0x1400111f9
   140011194:	cmp    eax,0x6e697722
   140011199:	xor    esi,DWORD PTR [rdx]
   14001119b:	and    ch,BYTE PTR [rdi]
   14001119d:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x1600b1eae
   1400111a4:	and    BYTE PTR [rsp+riz*2],bh
   1400111a7:	gs jae 0x14001120d
   1400111aa:	jb     0x140011215
   1400111ac:	jo     0x140011222
   1400111ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x76614a3e
   1400111b5:	(bad)  
   1400111b6:	and    BYTE PTR [rbx+0x45],dl
   1400111b9:	and    BYTE PTR [rdx+0x75],dl
   1400111bc:	outs   dx,BYTE PTR ds:[rsi]
   1400111bd:	je     0x140011228
   1400111bf:	ins    DWORD PTR es:[rdi],dx
   1400111c0:	and    BYTE PTR gs:[rbp+0x6e],al
   1400111c4:	jbe    0x14001122f
   1400111c6:	jb     0x140011237
   1400111c8:	outs   dx,BYTE PTR ds:[rsi]
   1400111c9:	ins    DWORD PTR es:[rdi],dx
   1400111ca:	outs   dx,BYTE PTR gs:[rsi]
   1400111cc:	je     0x1400111ee
   1400111ce:	push   rbx
   1400111cf:	push   rbx
   1400111d0:	push   rsi
   1400111d1:	and    BYTE PTR [rcx+0x67],al
   1400111d4:	outs   dx,BYTE PTR gs:[rsi]
   1400111d6:	je     0x1400111f8
   1400111d8:	push   rax
   1400111d9:	jb     0x14001124a
   1400111db:	movsxd esp,DWORD PTR [rbp+0x73]
   1400111de:	jae    0x14001120e
   1400111e0:	cmp    al,0x2f
   1400111e2:	fs gs jae 0x140011249
   1400111e6:	jb     0x140011251
   1400111e8:	jo     0x14001125e
   1400111ea:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
   1400111f1:	and    BYTE PTR [rax],ah
   1400111f3:	cmp    al,0x21
   1400111f5:	sub    eax,0x6449202d
   1400111fa:	outs   dx,BYTE PTR gs:[rsi]
   1400111fc:	je     0x140011267
   1400111fe:	data16 jns 0x140011221
   140011201:	je     0x14001126b
   140011203:	and    BYTE PTR gs:[rcx+0x70],ah
   140011207:	jo     0x140011275
   140011209:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140011210:	and    BYTE PTR [rbx+0x65],dh
   140011213:	movsxd esi,DWORD PTR [rbp+0x72]
   140011216:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14001121e:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   140011225:	jae    0x140011255
   140011227:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e505a
   14001122d:	and    BYTE PTR [rax],ah
   14001122f:	cmp    al,0x74
   140011231:	jb     0x1400112a8
   140011233:	jae    0x1400112a9
   140011235:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011237:	outs   dx,WORD PTR ds:[rsi]
   140011239:	and    BYTE PTR [rax+0x6d],bh
   14001123c:	ins    BYTE PTR es:[rdi],dx
   14001123d:	outs   dx,BYTE PTR ds:[rsi]
   14001123e:	jae    0x14001127d
   140011240:	and    dh,BYTE PTR [rbp+0x72]
   140011243:	outs   dx,BYTE PTR ds:[rsi]
   140011244:	cmp    dh,BYTE PTR [rbx+0x63]
   140011247:	push   0x73616d65
   14001124c:	sub    eax,0x7263696d
   140011251:	outs   dx,DWORD PTR ds:[rsi]
   140011252:	jae    0x1400112c3
   140011254:	data16 je 0x140011284
   140011257:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001125a:	cmp    ah,BYTE PTR [rcx+0x73]
   14001125d:	ins    DWORD PTR es:[rdi],dx
   14001125e:	cs jbe 0x140011294
   140011261:	and    bh,BYTE PTR [rsi]
   140011263:	or     eax,0x2020200a
   140011268:	and    BYTE PTR [rbx+rsi*2],bh
   14001126b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001126f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140011277:	and    BYTE PTR [rax],ah
   140011279:	and    BYTE PTR [rax],ah
   14001127b:	cmp    al,0x72
   14001127d:	gs jno 0x1400112f5
   140011280:	gs jae 0x1400112f7
   140011283:	gs fs push rax
   140011286:	jb     0x1400112f1
   140011288:	jbe    0x1400112f3
   14001128a:	ins    BYTE PTR es:[rdi],dx
   14001128b:	gs addr32 gs jae 0x1400112ce
   140011290:	or     eax,0x2020200a
   140011295:	and    BYTE PTR [rax],ah
   140011297:	and    BYTE PTR [rax],ah
   140011299:	and    BYTE PTR [rdx+rsi*2],bh
   14001129c:	gs jno 0x140011314
   14001129f:	gs jae 0x140011316
   1400112a2:	gs fs rex.RB js 0x14001130c
   1400112a7:	movsxd esi,DWORD PTR [rbp+0x74]
   1400112aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400112b1:	ins    BYTE PTR es:[rdi],dx
   1400112b2:	or     eax,0x2020200a
   1400112b7:	and    BYTE PTR [rax],ah
   1400112b9:	and    BYTE PTR [rax],ah
   1400112bb:	and    BYTE PTR [rax],ah
   1400112bd:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400112c1:	gs ins BYTE PTR es:[rdi],dx
   1400112c3:	cmp    eax,0x49736122
   1400112c8:	outs   dx,BYTE PTR ds:[rsi]
   1400112c9:	jbe    0x14001133a
   1400112cb:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400112cf:	or     eax,0x2020200a
   1400112d4:	and    BYTE PTR [rax],ah
   1400112d6:	and    BYTE PTR [rax],ah
   1400112d8:	and    BYTE PTR [rax],ah
   1400112da:	and    BYTE PTR [rbp+0x69],dh
   1400112dd:	movsxd esp,DWORD PTR [r11+0x65]
   1400112e1:	jae    0x140011356
   1400112e3:	cmp    eax,0x6c616622
   1400112e8:	jae    0x14001134f
   1400112ea:	and    ch,BYTE PTR [rdi]
   1400112ec:	ds or  eax,0x2020200a
   1400112f2:	and    BYTE PTR [rax],ah
   1400112f4:	and    BYTE PTR [rax],ah
   1400112f6:	and    BYTE PTR [rdi+rbp*1],bh
   1400112f9:	jb     0x140011360
   1400112fb:	jno    0x140011372
   1400112fd:	gs jae 0x140011374
   140011300:	gs fs push rax
   140011303:	jb     0x14001136e
   140011305:	jbe    0x140011370
   140011307:	ins    BYTE PTR es:[rdi],dx
   140011308:	gs addr32 gs jae 0x14001134b
   14001130d:	or     eax,0x2020200a
   140011312:	and    BYTE PTR [rax],ah
   140011314:	and    BYTE PTR [rax],ah
   140011316:	cmp    al,0x2f
   140011318:	jae    0x14001137f
   14001131a:	movsxd esi,DWORD PTR [rbp+0x72]
   14001131d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140011325:	cmp    al,0x2f
   140011327:	je     0x14001139b
   140011329:	jne    0x14001139e
   14001132b:	je     0x140011376
   14001132d:	outs   dx,BYTE PTR ds:[rsi]
   14001132e:	outs   dx,WORD PTR ds:[rsi]
   140011330:	ds or  eax,0x200a0d0a
   140011336:	and    BYTE PTR [rcx+riz*1],bh
   140011339:	sub    eax,0x6e49202d
   14001133e:	imul   esp,DWORD PTR fs:[rbx+0x61],0x74206574
   140011346:	push   0x4a207369
   14001134b:	rex.R
   14001134c:	rex.WXB and BYTE PTR [r14+0x65],sil
   140011350:	jb     0x1400113c5
   140011352:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
   140011359:	push   rdi
   14001135a:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140011361:	(bad)  
   140011362:	and    BYTE PTR [rbx+0x6f],ah
   140011365:	ins    DWORD PTR es:[rdi],dx
   140011366:	jo     0x1400113c9
   140011368:	je     0x1400113d3
   14001136a:	(bad)  
   14001136b:	ins    BYTE PTR es:[rdi],dx
   14001136c:	and    BYTE PTR gs:[rip+0xa0d3e2d],ch        # 0x14a0e51a0
   140011373:	and    BYTE PTR [rax],ah
   140011375:	and    BYTE PTR [rbx+riz*2],bh
   140011378:	outs   dx,DWORD PTR ds:[rsi]
   140011379:	ins    DWORD PTR es:[rdi],dx
   14001137a:	jo     0x1400113dd
   14001137c:	je     0x1400113e7
   14001137e:	(bad)  
   14001137f:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   140011387:	ins    BYTE PTR es:[rdi],dx
   140011388:	outs   dx,BYTE PTR ds:[rsi]
   140011389:	jae    0x1400113c8
   14001138b:	and    dh,BYTE PTR [rbp+0x72]
   14001138e:	outs   dx,BYTE PTR ds:[rsi]
   14001138f:	cmp    dh,BYTE PTR [rbx+0x63]
   140011392:	push   0x73616d65
   140011397:	sub    eax,0x7263696d
   14001139c:	outs   dx,DWORD PTR ds:[rsi]
   14001139d:	jae    0x14001140e
   14001139f:	data16 je 0x1400113cf
   1400113a2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400113a5:	cmp    ah,BYTE PTR [rbx+0x6f]
   1400113a8:	ins    DWORD PTR es:[rdi],dx
   1400113a9:	jo     0x14001140c
   1400113ab:	je     0x140011416
   1400113ad:	(bad)  
   1400113ae:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   1400113b6:	and    bh,BYTE PTR [rsi]
   1400113b8:	or     eax,0x2020200a
   1400113bd:	and    BYTE PTR [rax],ah
   1400113bf:	and    BYTE PTR [rcx+riz*2],bh
   1400113c2:	jo     0x140011434
   1400113c4:	ins    BYTE PTR es:[rdi],dx
   1400113c5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400113cc:	ds or  eax,0x2020200a
   1400113d2:	and    BYTE PTR [rax],ah
   1400113d4:	and    BYTE PTR [rax],ah
   1400113d6:	and    BYTE PTR [rbx+rsi*2],bh
   1400113d9:	jne    0x14001144b
   1400113db:	jo     0x14001144c
   1400113dd:	jb     0x140011453
   1400113df:	gs fs rex.WRXB push r11
   1400113e3:	and    BYTE PTR [rcx+0x64],cl
   1400113e6:	cmp    eax,0x35337b22
   1400113eb:	xor    DWORD PTR [rbx],esi
   1400113ed:	cmp    BYTE PTR [rdx+0x39],ah
   1400113f0:	(bad)  
   1400113f1:	sub    eax,0x36396435
   1400113f6:	sub    eax,0x64626634
   1400113fb:	sub    eax,0x64326538
   140011400:	sub    eax,0x34343261
   140011405:	xor    BYTE PTR [rdx],dh
   140011407:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1344d73
   14001140d:	jge    0x140011431
   14001140f:	(bad)  
   140011410:	ds or  eax,0x2020200a
   140011416:	and    BYTE PTR [rax],ah
   140011418:	and    BYTE PTR [rax],ah
   14001141a:	and    BYTE PTR [rbx+rsi*2],bh
   14001141d:	jne    0x14001148f
   14001141f:	jo     0x140011490
   140011421:	jb     0x140011497
   140011423:	gs fs rex.WRXB push r11
   140011427:	and    BYTE PTR [rcx+0x64],cl
   14001142a:	cmp    eax,0x32657b22
   14001142f:	xor    BYTE PTR [rcx],dh
   140011431:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   140011438:	xor    al,0x36
   14001143a:	sub    eax,0x35633334
   14001143f:	sub    eax,0x65663561
   140011444:	sub    eax,0x64383030
   140011449:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   140011450:	xor    BYTE PTR [rbp+0x22],bh
   140011453:	(bad)  
   140011454:	ds or  eax,0x2020200a
   14001145a:	and    BYTE PTR [rax],ah
   14001145c:	and    BYTE PTR [rdi+rbp*1],bh
   14001145f:	(bad)  
   140011460:	jo     0x1400114d2
   140011462:	ins    BYTE PTR es:[rdi],dx
   140011463:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001146a:	ds or  eax,0x2020200a
   140011470:	and    BYTE PTR [rdi+rbp*1],bh
   140011473:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011476:	jo     0x1400114d9
   140011478:	je     0x1400114e3
   14001147a:	(bad)  
   14001147b:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   140011483:	cmp    al,0x2f
   140011485:	(bad)  
   140011486:	jae    0x1400114fb
   140011488:	gs ins DWORD PTR es:[rdi],dx
   14001148a:	(bad)  
   14001148b:	ins    BYTE PTR es:[rdi],dx
   14001148c:	jns    0x1400114cc
   14001148e:	or     eax,0x3403640a
   140011493:	add    BYTE PTR [rax],al
   140011495:	add    BYTE PTR [rsi+0x0],dl
   140011498:	push   rbx
   140011499:	add    BYTE PTR [rdi+0x0],bl
   14001149c:	push   rsi
   14001149d:	add    BYTE PTR [rbp+0x0],al
   1400114a0:	push   rdx
   1400114a1:	add    BYTE PTR [rbx+0x0],dl
   1400114a4:	rex.WB add BYTE PTR [r15+0x0],cl
   1400114a8:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400114ac:	rex.WB add BYTE PTR [r14+0x0],cl
   1400114b0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400114b4:	add    BYTE PTR [rax],al
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	mov    ebp,0xfeef04
   1400114bd:	add    BYTE PTR [rcx],al
   1400114bf:	add    BYTE PTR [rax+rax*1],bh
   1400114c2:	or     al,BYTE PTR [rax]
   1400114c4:	adc    eax,DWORD PTR [rax]
   1400114c6:	add    al,BYTE PTR [rax]
   1400114c8:	add    BYTE PTR [rax],al
   1400114ca:	(bad)  
   1400114cb:	add    BYTE PTR [rbx],dl
   1400114cd:	add    BYTE PTR [rax+0x2],bl
   1400114d0:	(bad)  
   1400114d1:	add    BYTE PTR [rax],al
   1400114d3:	add    BYTE PTR [rax],al
   1400114d5:	add    BYTE PTR [rax],al
   1400114d7:	add    BYTE PTR [rax+rax*1],al
   1400114da:	add    BYTE PTR [rax],al
   1400114dc:	add    DWORD PTR [rax],eax
	...
   1400114ea:	add    BYTE PTR [rax],al
   1400114ec:	ret    0x2
   1400114ef:	add    BYTE PTR [rcx],al
   1400114f1:	add    BYTE PTR [rbx+0x0],dl
   1400114f4:	je     0x1400114f6
   1400114f6:	jb     0x1400114f8
   1400114f8:	imul   eax,DWORD PTR [rax],0x67006e
   1400114fe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011502:	ins    BYTE PTR es:[rdi],dx
   140011503:	add    BYTE PTR [rbp+0x0],ah
   140011506:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001150a:	data16 add BYTE PTR [rdi+0x0],ch
   14001150e:	add    BYTE PTR [rax],al
   140011510:	sahf   
   140011511:	add    al,BYTE PTR [rax]
   140011513:	add    BYTE PTR [rcx],al
   140011515:	add    BYTE PTR [rax],dh
   140011517:	add    BYTE PTR [rax],dh
   140011519:	add    BYTE PTR [rax],dh
   14001151b:	add    BYTE PTR [rax],dh
   14001151d:	add    BYTE PTR [rax],dh
   14001151f:	add    BYTE PTR [rax+rax*1],dh
   140011522:	(bad)  
   140011523:	add    BYTE PTR [rax],dh
   140011525:	add    BYTE PTR [rax],al
   140011527:	add    BYTE PTR [rsi+0x0],al
   14001152a:	adc    eax,DWORD PTR [rax]
   14001152c:	add    DWORD PTR [rax],eax
   14001152e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011532:	ins    DWORD PTR es:[rdi],dx
   140011533:	add    BYTE PTR [rax+0x0],dh
   140011536:	(bad)  
   140011537:	add    BYTE PTR [rsi+0x0],ch
   14001153a:	jns    0x14001153c
   14001153c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011540:	ins    DWORD PTR es:[rdi],dx
   140011541:	add    BYTE PTR [rbp+0x0],ah
   140011544:	add    BYTE PTR [rax],al
   140011546:	add    BYTE PTR [rax],al
   140011548:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14001154c:	(bad)  
   14001154d:	add    BYTE PTR [rbx+0x0],ah
   140011550:	ins    BYTE PTR es:[rdi],dx
   140011551:	add    BYTE PTR [rbp+0x0],ah
   140011554:	and    BYTE PTR [rax],al
   140011556:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001155a:	jb     0x14001155c
   14001155c:	jo     0x14001155e
   14001155e:	outs   dx,DWORD PTR ds:[rsi]
   14001155f:	add    BYTE PTR [rdx+0x0],dh
   140011562:	(bad)  
   140011563:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011567:	add    BYTE PTR [rdi+0x0],ch
   14001156a:	outs   dx,BYTE PTR ds:[rsi]
   14001156b:	add    BYTE PTR [rax],al
   14001156d:	add    BYTE PTR [rax],al
   14001156f:	add    BYTE PTR [rax+0x0],ah
   140011572:	sbb    al,0x0
   140011574:	add    DWORD PTR [rax],eax
   140011576:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001157a:	ins    BYTE PTR es:[rdi],dx
   14001157b:	add    BYTE PTR [rbp+0x0],ah
   14001157e:	add    BYTE PTR [rbp+0x0],r12b
   140011582:	jae    0x140011584
   140011584:	movsxd eax,DWORD PTR [rax]
   140011586:	jb     0x140011588
   140011588:	imul   eax,DWORD PTR [rax],0x740070
   14001158e:	imul   eax,DWORD PTR [rax],0x6e006f
   140011594:	add    BYTE PTR [rax],al
   140011596:	add    BYTE PTR [rax],al
   140011598:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001159c:	jbe    0x14001159e
   14001159e:	(bad)  
   14001159f:	add    BYTE PTR [rax],ch
   1400115a1:	add    BYTE PTR [rax+rax*1+0x4d],dl
   1400115a5:	add    BYTE PTR [rcx],ch
   1400115a7:	add    BYTE PTR [rax],ah
   1400115a9:	add    BYTE PTR [rax+0x0],dl
   1400115ac:	ins    BYTE PTR es:[rdi],dx
   1400115ad:	add    BYTE PTR [rcx+0x0],ah
   1400115b0:	je     0x1400115b2
   1400115b2:	data16 add BYTE PTR [rdi+0x0],ch
   1400115b6:	jb     0x1400115b8
   1400115b8:	ins    DWORD PTR es:[rdi],dx
   1400115b9:	add    BYTE PTR [rax],ah
   1400115bb:	add    BYTE PTR [rbx+0x0],dl
   1400115be:	add    BYTE PTR [r8],r12b
   1400115c1:	add    BYTE PTR [rdx+0x0],ah
   1400115c4:	imul   eax,DWORD PTR [rax],0x61006e
   1400115ca:	jb     0x1400115cc
   1400115cc:	jns    0x1400115ce
   1400115ce:	add    BYTE PTR [rax],al
   1400115d0:	add    BYTE PTR ss:[rbx],cl
   1400115d3:	add    BYTE PTR [rcx],al
   1400115d5:	add    BYTE PTR [rsi+0x0],al
   1400115d8:	imul   eax,DWORD PTR [rax],0x65006c
   1400115de:	push   rsi
   1400115df:	add    BYTE PTR [rbp+0x0],ah
   1400115e2:	jb     0x1400115e4
   1400115e4:	jae    0x1400115e6
   1400115e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400115ec:	add    BYTE PTR [rax],al
   1400115ee:	add    BYTE PTR [rax],al
   1400115f0:	xor    DWORD PTR [rax],eax
   1400115f2:	xor    BYTE PTR [rax],al
   1400115f4:	add    BYTE PTR cs:[rsi],dh
   1400115f7:	add    BYTE PTR [rax],dh
   1400115f9:	add    BYTE PTR [rsi],ch
   1400115fb:	add    BYTE PTR [rdx],dh
   1400115fd:	add    BYTE PTR [rsi],ch
   1400115ff:	add    BYTE PTR [rcx],dh
   140011601:	add    BYTE PTR [rcx],bh
   140011603:	add    BYTE PTR [rax],al
   140011605:	add    BYTE PTR [rax],al
   140011607:	add    BYTE PTR [rsi],dh
   140011609:	add    BYTE PTR [rbx],cl
   14001160b:	add    BYTE PTR [rcx],al
   14001160d:	add    BYTE PTR [rsi+0x0],al
   140011610:	jne    0x140011612
   140011612:	ins    BYTE PTR es:[rdi],dx
   140011613:	add    BYTE PTR [rax+rax*1+0x20],ch
   140011617:	add    BYTE PTR [rsi+0x0],dl
   14001161a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001161e:	jae    0x140011620
   140011620:	imul   eax,DWORD PTR [rax],0x6e006f
   140011626:	add    BYTE PTR [rax],al
   140011628:	xor    DWORD PTR [rax],eax
   14001162a:	xor    BYTE PTR [rax],al
   14001162c:	add    BYTE PTR cs:[rsi],dh
   14001162f:	add    BYTE PTR [rax],dh
   140011631:	add    BYTE PTR [rsi],ch
   140011633:	add    BYTE PTR [rdx],dh
   140011635:	add    BYTE PTR [rsi],ch
   140011637:	add    BYTE PTR [rcx],dh
   140011639:	add    BYTE PTR [rcx],bh
   14001163b:	add    BYTE PTR [rax],al
   14001163d:	add    BYTE PTR [rax],al
   14001163f:	add    BYTE PTR [rsi+0x0],cl
   140011642:	(bad)  
   140011643:	add    BYTE PTR [rcx],al
   140011645:	add    BYTE PTR [rcx+0x0],cl
   140011648:	outs   dx,BYTE PTR ds:[rsi]
   140011649:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001164d:	add    BYTE PTR [rdx+0x0],dh
   140011650:	outs   dx,BYTE PTR ds:[rsi]
   140011651:	add    BYTE PTR [rcx+0x0],ah
   140011654:	ins    BYTE PTR es:[rdi],dx
   140011655:	add    BYTE PTR [rsi+0x0],cl
   140011658:	(bad)  
   140011659:	add    BYTE PTR [rbp+0x0],ch
   14001165c:	add    BYTE PTR gs:[rax],al
   14001165f:	add    BYTE PTR [rdx+0x0],cl
   140011662:	(bad)  
   140011663:	add    BYTE PTR [rsi+0x0],dh
   140011666:	(bad)  
   140011667:	add    BYTE PTR [rax],ah
   140011669:	add    BYTE PTR [rbx+0x0],dl
   14001166c:	push   rbx
   14001166d:	add    BYTE PTR [rsi+0x0],dl
   140011670:	and    BYTE PTR [rax],al
   140011672:	add    BYTE PTR [r15+0x0],spl
   140011676:	add    BYTE PTR gs:[rsi+0x0],ch
   14001167a:	je     0x14001167c
   14001167c:	and    BYTE PTR [rax],al
   14001167e:	push   rax
   14001167f:	add    BYTE PTR [rdx+0x0],dh
   140011682:	outs   dx,DWORD PTR ds:[rsi]
   140011683:	add    BYTE PTR [rbx+0x0],ah
   140011686:	add    BYTE PTR gs:[rbx+0x0],dh
   14001168a:	jae    0x14001168c
   14001168c:	add    BYTE PTR [rax],al
   14001168e:	add    BYTE PTR [rax],al
   140011690:	rex.RX add BYTE PTR [rcx],r10b
   140011693:	add    BYTE PTR [rcx],al
   140011695:	add    BYTE PTR [rax+rax*1+0x65],cl
   140011699:	add    BYTE PTR [rdi+0x0],ah
   14001169c:	(bad)  
   14001169d:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400116a1:	add    BYTE PTR [rdi+0x0],ch
   1400116a4:	jo     0x1400116a6
   1400116a6:	jns    0x1400116a8
   1400116a8:	jb     0x1400116aa
   1400116aa:	imul   eax,DWORD PTR [rax],0x680067
   1400116b0:	je     0x1400116b2
   1400116b2:	add    BYTE PTR [rax],al
   1400116b4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400116b8:	jo     0x1400116ba
   1400116ba:	jns    0x1400116bc
   1400116bc:	jb     0x1400116be
   1400116be:	imul   eax,DWORD PTR [rax],0x680067
   1400116c4:	je     0x1400116c6
   1400116c6:	and    BYTE PTR [rax],al
   1400116c8:	test   eax,0x32002000
   1400116cd:	add    BYTE PTR [rax],dh
   1400116cf:	add    BYTE PTR [rcx],dh
   1400116d1:	add    BYTE PTR [rax+rax*1],dh
   1400116d4:	add    BYTE PTR [rax],al
   1400116d6:	add    BYTE PTR [rax],al
   1400116d8:	rex.X add BYTE PTR [rip+0x4f000100],cl        # 0x18f0117df
   1400116df:	add    BYTE PTR [rdx+0x0],dh
   1400116e2:	imul   eax,DWORD PTR [rax],0x690067
   1400116e8:	outs   dx,BYTE PTR ds:[rsi]
   1400116e9:	add    BYTE PTR [rcx+0x0],ah
   1400116ec:	ins    BYTE PTR es:[rdi],dx
   1400116ed:	add    BYTE PTR [rsi+0x0],al
   1400116f0:	imul   eax,DWORD PTR [rax],0x65006c
   1400116f6:	outs   dx,BYTE PTR ds:[rsi]
   1400116f7:	add    BYTE PTR [rcx+0x0],ah
   1400116fa:	ins    DWORD PTR es:[rdi],dx
   1400116fb:	add    BYTE PTR [rbp+0x0],ah
   1400116fe:	add    BYTE PTR [rax],al
   140011700:	jae    0x140011702
   140011702:	jae    0x140011704
   140011704:	jbe    0x140011706
   140011706:	(bad)  
   140011707:	add    BYTE PTR [rdi+0x0],ah
   14001170a:	add    BYTE PTR gs:[rsi+0x0],ch
   14001170e:	je     0x140011710
   140011710:	add    BYTE PTR cs:[rbp+0x0],ah
   140011714:	js     0x140011716
   140011716:	add    BYTE PTR gs:[rax],al
   140011719:	add    BYTE PTR [rax],al
   14001171b:	add    BYTE PTR [rsi+0x0],dl
   14001171e:	sbb    eax,DWORD PTR [rax]
   140011720:	add    DWORD PTR [rax],eax
   140011722:	push   rax
   140011723:	add    BYTE PTR [rdx+0x0],dh
   140011726:	outs   dx,DWORD PTR ds:[rsi]
   140011727:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001172b:	add    BYTE PTR [rbx+0x0],ah
   14001172e:	je     0x140011730
   140011730:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011734:	ins    DWORD PTR es:[rdi],dx
   140011735:	add    BYTE PTR [rbp+0x0],ah
   140011738:	add    BYTE PTR [rax],al
   14001173a:	add    BYTE PTR [rax],al
   14001173c:	rex.WX add BYTE PTR [rcx+0x0],spl
   140011740:	jbe    0x140011742
   140011742:	(bad)  
   140011743:	add    BYTE PTR [rax],ch
   140011745:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140011749:	add    BYTE PTR [rcx],ch
   14001174b:	add    BYTE PTR [rax],ah
   14001174d:	add    BYTE PTR [rax+0x0],dl
   140011750:	ins    BYTE PTR es:[rdi],dx
   140011751:	add    BYTE PTR [rcx+0x0],ah
   140011754:	je     0x140011756
   140011756:	data16 add BYTE PTR [rdi+0x0],ch
   14001175a:	jb     0x14001175c
   14001175c:	ins    DWORD PTR es:[rdi],dx
   14001175d:	add    BYTE PTR [rax],ah
   14001175f:	add    BYTE PTR [rbx+0x0],dl
   140011762:	add    BYTE PTR [r8],r12b
   140011765:	add    BYTE PTR [rdi],dh
   140011767:	add    BYTE PTR [rax],ah
   140011769:	add    BYTE PTR [rbp+0x0],dl
   14001176c:	add    BYTE PTR ss:[rax],dh
   14001176f:	add    BYTE PTR [rax],al
   140011771:	add    BYTE PTR [rax],al
   140011773:	add    BYTE PTR [rdx],bh
   140011775:	add    BYTE PTR [rbx],cl
   140011777:	add    BYTE PTR [rcx],al
   140011779:	add    BYTE PTR [rax+0x0],dl
   14001177c:	jb     0x14001177e
   14001177e:	outs   dx,DWORD PTR ds:[rsi]
   14001177f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011783:	add    BYTE PTR [rbx+0x0],ah
   140011786:	je     0x140011788
   140011788:	push   rsi
   140011789:	add    BYTE PTR [rbp+0x0],ah
   14001178c:	jb     0x14001178e
   14001178e:	jae    0x140011790
   140011790:	imul   eax,DWORD PTR [rax],0x6e006f
   140011796:	add    BYTE PTR [rax],al
   140011798:	(bad)  
   140011799:	add    BYTE PTR [rsi],ch
   14001179b:	add    BYTE PTR [rax],dh
   14001179d:	add    BYTE PTR [rsi],ch
   14001179f:	add    BYTE PTR [rsi],dh
   1400117a1:	add    BYTE PTR [rax],dh
   1400117a3:	add    BYTE PTR [rax],dh
   1400117a5:	add    BYTE PTR [rsi],ch
   1400117a7:	add    BYTE PTR [rcx],dh
   1400117a9:	add    BYTE PTR [rcx],bh
   1400117ab:	add    BYTE PTR [rax],al
   1400117ad:	add    BYTE PTR [rax],al
   1400117af:	add    BYTE PTR [rax+rax*1+0x0],al
   1400117b3:	add    BYTE PTR [rcx],al
   1400117b5:	add    BYTE PTR [rsi+0x0],dl
   1400117b8:	(bad)  
   1400117b9:	add    BYTE PTR [rdx+0x0],dh
   1400117bc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400117c0:	ins    BYTE PTR es:[rdi],dx
   1400117c1:	add    BYTE PTR [rbp+0x0],ah
   1400117c4:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400117c8:	data16 add BYTE PTR [rdi+0x0],ch
   1400117cc:	add    BYTE PTR [rax],al
   1400117ce:	add    BYTE PTR [rax],al
   1400117d0:	and    al,0x0
   1400117d2:	add    al,0x0
   1400117d4:	add    BYTE PTR [rax],al
   1400117d6:	push   rsp
   1400117d7:	add    BYTE PTR [rdx+0x0],dh
   1400117da:	(bad)  
   1400117db:	add    BYTE PTR [rsi+0x0],ch
   1400117de:	jae    0x1400117e0
   1400117e0:	ins    BYTE PTR es:[rdi],dx
   1400117e1:	add    BYTE PTR [rcx+0x0],ah
   1400117e4:	je     0x1400117e6
   1400117e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400117ec:	add    BYTE PTR [rax],al
   1400117ee:	add    BYTE PTR [rax],al
   1400117f0:	add    BYTE PTR [rax],al
   1400117f2:	mov    al,0x4
   1400117f4:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax+0x7c0000],ah
   140012006:	add    BYTE PTR [rax],al
   140012008:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   14001200f:	movabs ds:0xa440a438a3f8a3f0,eax
   140012018:	push   rax
   140012019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001201a:	pop    rax
   14001201b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001201c:	push   0xffffffffa8a488a4
   140012021:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012022:	shl    BYTE PTR [rax+riz*4-0x4f555756],0xaa
   14001202a:	mov    eax,0xc8aac0aa
   14001202f:	stos   BYTE PTR es:[rdi],al
   140012030:	shr    BYTE PTR [rdx-0x551f5528],1
   140012036:	call   0x138ac10e5
   14001203b:	stos   BYTE PTR es:[rdi],al
   14001203c:	nop
   14001203d:	stos   DWORD PTR es:[rdi],eax
   14001203e:	cwde   
   14001203f:	stos   DWORD PTR es:[rdi],eax
   140012040:	movabs al,ds:0xc0abb8abb0aba8ab
   140012049:	stos   DWORD PTR es:[rdi],eax
   14001204a:	enter  0xd0ab,0xab
   14001204e:	fsubr  DWORD PTR [rbx-0x53bf5420]
   140012054:	push   rax
   140012055:	lods   al,BYTE PTR ds:[rsi]
   140012056:	(bad)  
   140012057:	lods   al,BYTE PTR ds:[rsi]
   140012058:	jo     0x140012006
   14001205a:	sub    BYTE PTR [rax+rdx*4-0x4f535f54],0xac
   140012062:	shr    BYTE PTR [rax+rdx*8-0xf531f54],0xac
   14001206a:	add    BYTE PTR [rbp-0x515752f0],ch
   140012070:	mov    al,0xae
   140012072:	mov    eax,0xc8aec0ae
   140012077:	scas   al,BYTE PTR es:[rdi]
   140012078:	shr    BYTE PTR [rsi-0x4fff5128],1
   14001207e:	add    BYTE PTR [rax],al
   140012080:	sub    al,0x0
   140012082:	add    BYTE PTR [rax],al
   140012084:	enter  0xd0a0,0xa0
   140012088:	loopne 0x14001202a
   14001208a:	call   0x158a2192f
   14001208f:	movabs eax,ds:0xadb8adb0a150a138
   140012098:	enter  0xd0ad,0xad
   14001209c:	loopne 0x14001204b
   14001209e:	add    BYTE PTR [rsi-0x51c751e0],ch
   1400120a4:	lock scas eax,DWORD PTR es:[rdi]
   1400120a6:	clc    
   1400120a7:	scas   eax,DWORD PTR es:[rdi]
   1400120a8:	add    al,al
   1400120aa:	add    BYTE PTR [rax],al
   1400120ac:	adc    BYTE PTR [rax],al
   1400120ae:	add    BYTE PTR [rax],al
   1400120b0:	add    BYTE PTR [rax-0x5faf5ff8],ah
   1400120b6:	add    BYTE PTR [rax],al
   1400120b8:	add    al,dh
   1400120ba:	add    BYTE PTR [rax],al
   1400120bc:	add    BYTE PTR [rax],al
   1400120bf:	add    BYTE PTR [rax],al
   1400120c1:	movabs al,ds:0xa0b8a090a068a028
   1400120ca:	loopne 0x14001206c
   1400120cc:	or     BYTE PTR [rcx-0x5eaf5ed0],ah
   1400120d2:	js     0x140012075
   1400120d4:	shl    BYTE PTR [rcx-0x5e275e30],0xe0
   1400120db:	movabs eax,ds:0xa200a1f8a1f0a1e8
   1400120e4:	or     BYTE PTR [rdx-0x5de75df0],ah
   1400120ea:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   1400120f0:	movabs ds:0xa260a250a248,al
	...
