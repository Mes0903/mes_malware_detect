
6443dd554836f5112eda96b3cb18358aed61b5d8aa56be17456acc42d4458bc6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x4639]        # 0x140005640
   140001007:	jmp    0x1400049e8
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x4639]        # 0x140005650
   140001017:	jmp    0x1400049e8
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x4639]        # 0x140005660
   140001027:	jmp    0x1400049e8
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	call   QWORD PTR [rip+0x52e6]        # 0x140006320
   14000103a:	mov    QWORD PTR [rip+0x9417],rax        # 0x14000a458
   140001041:	add    rsp,0x28
   140001045:	ret    
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	call   QWORD PTR [rip+0x52ce]        # 0x140006328
   14000105a:	mov    QWORD PTR [rip+0x93ff],rax        # 0x14000a460
   140001061:	add    rsp,0x28
   140001065:	ret    
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	sub    rsp,0x28
   140001074:	call   QWORD PTR [rip+0x52a6]        # 0x140006320
   14000107a:	mov    QWORD PTR [rip+0x93e7],rax        # 0x14000a468
   140001081:	add    rsp,0x28
   140001085:	ret    
   140001086:	int3   
   140001087:	int3   
   140001088:	lea    rcx,[rip+0x45e1]        # 0x140005670
   14000108f:	jmp    0x1400049e8
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400010a5:	push   rbx
   1400010a6:	push   rsi
   1400010a7:	push   rdi
   1400010a8:	push   r12
   1400010aa:	push   r13
   1400010ac:	push   r14
   1400010ae:	push   r15
   1400010b0:	sub    rsp,0x40
   1400010b4:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400010bd:	mov    r14,rdx
   1400010c0:	mov    rdi,rcx
   1400010c3:	xor    ebx,ebx
   1400010c5:	mov    DWORD PTR [rsp+0x98],ebx
   1400010cc:	xor    r15b,r15b
   1400010cf:	mov    BYTE PTR [rsp+0x90],r15b
   1400010d7:	mov    r12,rcx
   1400010da:	mov    QWORD PTR [rsp+0x30],rcx
   1400010df:	mov    rax,QWORD PTR [rcx]
   1400010e2:	movsxd r8,DWORD PTR [rax+0x4]
   1400010e6:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400010eb:	test   rcx,rcx
   1400010ee:	je     0x1400010f7
   1400010f0:	mov    rax,QWORD PTR [rcx]
   1400010f3:	call   QWORD PTR [rax+0x8]
   1400010f6:	nop
   1400010f7:	xor    edx,edx
   1400010f9:	mov    rcx,rdi
   1400010fc:	call   QWORD PTR [rip+0x507e]        # 0x140006180
   140001102:	mov    BYTE PTR [rsp+0x38],al
   140001106:	test   al,al
   140001108:	je     0x14000120e
   14000110e:	mov    rax,QWORD PTR [rdi]
   140001111:	movsxd rcx,DWORD PTR [rax+0x4]
   140001115:	add    rcx,rdi
   140001118:	lea    rdx,[rsp+0x20]
   14000111d:	call   QWORD PTR [rip+0x4ff5]        # 0x140006118
   140001123:	nop
   140001124:	mov    rcx,rax
   140001127:	call   0x1400018b0
   14000112c:	mov    r13,rax
   14000112f:	mov    rcx,QWORD PTR [rsp+0x20]
   140001134:	test   rcx,rcx
   140001137:	je     0x140001152
   140001139:	mov    rdx,QWORD PTR [rcx]
   14000113c:	call   QWORD PTR [rdx+0x10]
   14000113f:	test   rax,rax
   140001142:	je     0x140001152
   140001144:	mov    r8,QWORD PTR [rax]
   140001147:	mov    edx,0x1
   14000114c:	mov    rcx,rax
   14000114f:	call   QWORD PTR [r8]
   140001152:	mov    QWORD PTR [r14+0x10],0x0
   14000115a:	cmp    QWORD PTR [r14+0x18],0x10
   14000115f:	jb     0x140001166
   140001161:	mov    rax,QWORD PTR [r14]
   140001164:	jmp    0x140001169
   140001166:	mov    rax,r14
   140001169:	mov    BYTE PTR [rax],0x0
   14000116c:	mov    rax,QWORD PTR [rdi]
   14000116f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001173:	mov    rsi,QWORD PTR [rcx+rdi*1+0x28]
   140001178:	test   rsi,rsi
   14000117b:	jle    0x140001183
   14000117d:	cmp    rsi,0xfffffffffffffffe
   140001181:	jb     0x14000118a
   140001183:	mov    rsi,0xfffffffffffffffe
   14000118a:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   14000118f:	call   QWORD PTR [rip+0x4fa3]        # 0x140006138
   140001195:	mov    edx,eax
   140001197:	test   rsi,rsi
   14000119a:	je     0x1400011ef
   14000119c:	cmp    edx,0xffffffff
   14000119f:	jne    0x1400011ad
   1400011a1:	or     ebx,0x1
   1400011a4:	mov    DWORD PTR [rsp+0x98],ebx
   1400011ab:	jmp    0x1400011ef
   1400011ad:	movzx  ecx,dl
   1400011b0:	mov    rax,QWORD PTR [r13+0x18]
   1400011b4:	test   BYTE PTR [rax+rcx*2],0x48
   1400011b8:	jne    0x1400011ef
   1400011ba:	movzx  r8d,dl
   1400011be:	mov    edx,0x1
   1400011c3:	mov    rcx,r14
   1400011c6:	call   0x1400028c0
   1400011cb:	mov    r15b,0x1
   1400011ce:	mov    BYTE PTR [rsp+0x90],r15b
   1400011d6:	dec    rsi
   1400011d9:	mov    rax,QWORD PTR [rdi]
   1400011dc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011e0:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400011e5:	call   QWORD PTR [rip+0x4f55]        # 0x140006140
   1400011eb:	mov    edx,eax
   1400011ed:	jmp    0x140001197
   1400011ef:	jmp    0x14000120e
   1400011f1:	mov    rdi,QWORD PTR [rsp+0x80]
   1400011f9:	mov    ebx,DWORD PTR [rsp+0x98]
   140001200:	movzx  r15d,BYTE PTR [rsp+0x90]
   140001209:	mov    r12,QWORD PTR [rsp+0x30]
   14000120e:	mov    rax,QWORD PTR [rdi]
   140001211:	movsxd rcx,DWORD PTR [rax+0x4]
   140001215:	mov    QWORD PTR [rcx+rdi*1+0x28],0x0
   14000121e:	test   r15b,r15b
   140001221:	jne    0x140001226
   140001223:	or     ebx,0x2
   140001226:	mov    rax,QWORD PTR [rdi]
   140001229:	movsxd rcx,DWORD PTR [rax+0x4]
   14000122d:	add    rcx,rdi
   140001230:	xor    r8d,r8d
   140001233:	mov    edx,ebx
   140001235:	call   QWORD PTR [rip+0x4f2d]        # 0x140006168
   14000123b:	nop
   14000123c:	mov    rax,QWORD PTR [r12]
   140001240:	movsxd rcx,DWORD PTR [rax+0x4]
   140001244:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001249:	test   rcx,rcx
   14000124c:	je     0x140001254
   14000124e:	mov    rax,QWORD PTR [rcx]
   140001251:	call   QWORD PTR [rax+0x10]
   140001254:	mov    rax,rdi
   140001257:	add    rsp,0x40
   14000125b:	pop    r15
   14000125d:	pop    r14
   14000125f:	pop    r13
   140001261:	pop    r12
   140001263:	pop    rdi
   140001264:	pop    rsi
   140001265:	pop    rbx
   140001266:	ret    
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	jmp    0x1400010a0
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    QWORD PTR [rsp+0x8],rcx
   140001285:	push   rsi
   140001286:	push   rdi
   140001287:	push   r12
   140001289:	push   r14
   14000128b:	push   r15
   14000128d:	sub    rsp,0x40
   140001291:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000129a:	mov    QWORD PTR [rsp+0x80],rbx
   1400012a2:	mov    r15,rdx
   1400012a5:	mov    rsi,rcx
   1400012a8:	xor    ebx,ebx
   1400012aa:	mov    DWORD PTR [rsp+0x78],ebx
   1400012ae:	mov    r12,QWORD PTR [rdx+0x10]
   1400012b2:	mov    rax,QWORD PTR [rcx]
   1400012b5:	movsxd r8,DWORD PTR [rax+0x4]
   1400012b9:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   1400012be:	test   rdi,rdi
   1400012c1:	jle    0x1400012cd
   1400012c3:	cmp    rdi,r12
   1400012c6:	jbe    0x1400012cd
   1400012c8:	sub    rdi,r12
   1400012cb:	jmp    0x1400012cf
   1400012cd:	xor    edi,edi
   1400012cf:	mov    r14,rcx
   1400012d2:	mov    QWORD PTR [rsp+0x28],rcx
   1400012d7:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400012dc:	test   rcx,rcx
   1400012df:	je     0x1400012e8
   1400012e1:	mov    rax,QWORD PTR [rcx]
   1400012e4:	call   QWORD PTR [rax+0x8]
   1400012e7:	nop
   1400012e8:	mov    rax,QWORD PTR [rsi]
   1400012eb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400012ef:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400012f4:	jne    0x14000130b
   1400012f6:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400012fb:	test   rcx,rcx
   1400012fe:	je     0x14000130b
   140001300:	cmp    rcx,rsi
   140001303:	je     0x14000130b
   140001305:	call   QWORD PTR [rip+0x4e6d]        # 0x140006178
   14000130b:	mov    rax,QWORD PTR [rsi]
   14000130e:	movsxd rcx,DWORD PTR [rax+0x4]
   140001312:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140001317:	sete   al
   14000131a:	mov    BYTE PTR [rsp+0x30],al
   14000131e:	test   al,al
   140001320:	jne    0x14000132c
   140001322:	mov    ebx,0x4
   140001327:	jmp    0x1400013f0
   14000132c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001330:	and    eax,0x1c0
   140001335:	cmp    eax,0x40
   140001338:	je     0x140001373
   14000133a:	nop    WORD PTR [rax+rax*1+0x0]
   140001340:	test   rdi,rdi
   140001343:	je     0x14000136f
   140001345:	mov    rax,QWORD PTR [rsi]
   140001348:	movsxd rcx,DWORD PTR [rax+0x4]
   14000134c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001351:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001356:	call   QWORD PTR [rip+0x4dec]        # 0x140006148
   14000135c:	cmp    eax,0xffffffff
   14000135f:	jne    0x14000136a
   140001361:	or     ebx,0x4
   140001364:	mov    DWORD PTR [rsp+0x78],ebx
   140001368:	jmp    0x14000136f
   14000136a:	dec    rdi
   14000136d:	jmp    0x140001340
   14000136f:	test   ebx,ebx
   140001371:	jne    0x1400013a1
   140001373:	cmp    QWORD PTR [r15+0x18],0x10
   140001378:	jb     0x14000137d
   14000137a:	mov    r15,QWORD PTR [r15]
   14000137d:	mov    rax,QWORD PTR [rsi]
   140001380:	movsxd rcx,DWORD PTR [rax+0x4]
   140001384:	mov    r8,r12
   140001387:	mov    rdx,r15
   14000138a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000138f:	call   QWORD PTR [rip+0x4dbb]        # 0x140006150
   140001395:	cmp    rax,r12
   140001398:	je     0x1400013a1
   14000139a:	mov    ebx,0x4
   14000139f:	jmp    0x1400013cc
   1400013a1:	test   rdi,rdi
   1400013a4:	je     0x1400013d0
   1400013a6:	mov    rax,QWORD PTR [rsi]
   1400013a9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013ad:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400013b2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400013b7:	call   QWORD PTR [rip+0x4d8b]        # 0x140006148
   1400013bd:	cmp    eax,0xffffffff
   1400013c0:	jne    0x1400013c7
   1400013c2:	or     ebx,0x4
   1400013c5:	jmp    0x1400013cc
   1400013c7:	dec    rdi
   1400013ca:	jmp    0x1400013a1
   1400013cc:	mov    DWORD PTR [rsp+0x78],ebx
   1400013d0:	mov    rax,QWORD PTR [rsi]
   1400013d3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013d7:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400013e0:	jmp    0x1400013f0
   1400013e2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400013e7:	mov    ebx,DWORD PTR [rsp+0x78]
   1400013eb:	mov    r14,QWORD PTR [rsp+0x28]
   1400013f0:	mov    rax,QWORD PTR [rsi]
   1400013f3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013f7:	add    rcx,rsi
   1400013fa:	xor    r8d,r8d
   1400013fd:	mov    edx,ebx
   1400013ff:	call   QWORD PTR [rip+0x4d63]        # 0x140006168
   140001405:	nop
   140001406:	call   QWORD PTR [rip+0x4cc4]        # 0x1400060d0
   14000140c:	test   al,al
   14000140e:	jne    0x140001419
   140001410:	mov    rcx,r14
   140001413:	call   QWORD PTR [rip+0x4d57]        # 0x140006170
   140001419:	mov    rax,QWORD PTR [r14]
   14000141c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001420:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   140001425:	test   rcx,rcx
   140001428:	je     0x140001430
   14000142a:	mov    rax,QWORD PTR [rcx]
   14000142d:	call   QWORD PTR [rax+0x10]
   140001430:	mov    rax,rsi
   140001433:	mov    rbx,QWORD PTR [rsp+0x80]
   14000143b:	add    rsp,0x40
   14000143f:	pop    r15
   140001441:	pop    r14
   140001443:	pop    r12
   140001445:	pop    rdi
   140001446:	pop    rsi
   140001447:	ret    
   140001448:	int3   
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	mov    QWORD PTR [rsp+0x8],rcx
   140001455:	push   rsi
   140001456:	push   rdi
   140001457:	push   r12
   140001459:	push   r14
   14000145b:	push   r15
   14000145d:	sub    rsp,0x40
   140001461:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000146a:	mov    QWORD PTR [rsp+0x78],rbx
   14000146f:	movzx  r12d,dl
   140001473:	mov    rsi,rcx
   140001476:	xor    ebx,ebx
   140001478:	mov    DWORD PTR [rsp+0x80],ebx
   14000147f:	mov    r15,rcx
   140001482:	mov    QWORD PTR [rsp+0x28],rcx
   140001487:	mov    rax,QWORD PTR [rcx]
   14000148a:	movsxd r8,DWORD PTR [rax+0x4]
   14000148e:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140001493:	test   rcx,rcx
   140001496:	je     0x14000149f
   140001498:	mov    rax,QWORD PTR [rcx]
   14000149b:	call   QWORD PTR [rax+0x8]
   14000149e:	nop
   14000149f:	mov    rax,QWORD PTR [rsi]
   1400014a2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014a6:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400014ab:	jne    0x1400014c2
   1400014ad:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400014b2:	test   rcx,rcx
   1400014b5:	je     0x1400014c2
   1400014b7:	cmp    rcx,rsi
   1400014ba:	je     0x1400014c2
   1400014bc:	call   QWORD PTR [rip+0x4cb6]        # 0x140006178
   1400014c2:	mov    rax,QWORD PTR [rsi]
   1400014c5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014c9:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400014ce:	sete   al
   1400014d1:	mov    BYTE PTR [rsp+0x30],al
   1400014d5:	test   al,al
   1400014d7:	je     0x14000159d
   1400014dd:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400014e2:	cmp    rdi,0x1
   1400014e6:	jg     0x1400014ec
   1400014e8:	xor    edi,edi
   1400014ea:	jmp    0x1400014ef
   1400014ec:	dec    rdi
   1400014ef:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400014f3:	and    eax,0x1c0
   1400014f8:	mov    r14d,0x4
   1400014fe:	cmp    eax,0x40
   140001501:	je     0x14000153a
   140001503:	test   ebx,ebx
   140001505:	jne    0x14000158a
   14000150b:	test   rdi,rdi
   14000150e:	jle    0x14000153a
   140001510:	mov    rax,QWORD PTR [rsi]
   140001513:	movsxd rcx,DWORD PTR [rax+0x4]
   140001517:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   14000151c:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001521:	call   QWORD PTR [rip+0x4c21]        # 0x140006148
   140001527:	cmp    eax,0xffffffff
   14000152a:	cmove  ebx,r14d
   14000152e:	mov    DWORD PTR [rsp+0x80],ebx
   140001535:	dec    rdi
   140001538:	jmp    0x140001503
   14000153a:	mov    rax,QWORD PTR [rsi]
   14000153d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001541:	movzx  edx,r12b
   140001545:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000154a:	call   QWORD PTR [rip+0x4bf8]        # 0x140006148
   140001550:	cmp    eax,0xffffffff
   140001553:	cmove  ebx,r14d
   140001557:	mov    DWORD PTR [rsp+0x80],ebx
   14000155e:	test   ebx,ebx
   140001560:	jne    0x14000158a
   140001562:	test   rdi,rdi
   140001565:	jle    0x14000158a
   140001567:	mov    rax,QWORD PTR [rsi]
   14000156a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000156e:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001573:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001578:	call   QWORD PTR [rip+0x4bca]        # 0x140006148
   14000157e:	cmp    eax,0xffffffff
   140001581:	cmove  ebx,r14d
   140001585:	dec    rdi
   140001588:	jmp    0x140001557
   14000158a:	jmp    0x14000159d
   14000158c:	mov    rsi,QWORD PTR [rsp+0x70]
   140001591:	mov    ebx,DWORD PTR [rsp+0x80]
   140001598:	mov    r15,QWORD PTR [rsp+0x28]
   14000159d:	mov    rax,QWORD PTR [rsi]
   1400015a0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015a4:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400015ad:	mov    rax,QWORD PTR [rsi]
   1400015b0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015b4:	add    rcx,rsi
   1400015b7:	xor    r8d,r8d
   1400015ba:	mov    edx,ebx
   1400015bc:	call   QWORD PTR [rip+0x4ba6]        # 0x140006168
   1400015c2:	nop
   1400015c3:	call   QWORD PTR [rip+0x4b07]        # 0x1400060d0
   1400015c9:	test   al,al
   1400015cb:	jne    0x1400015d6
   1400015cd:	mov    rcx,r15
   1400015d0:	call   QWORD PTR [rip+0x4b9a]        # 0x140006170
   1400015d6:	mov    rax,QWORD PTR [r15]
   1400015d9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015dd:	mov    rcx,QWORD PTR [rcx+r15*1+0x48]
   1400015e2:	test   rcx,rcx
   1400015e5:	je     0x1400015ed
   1400015e7:	mov    rax,QWORD PTR [rcx]
   1400015ea:	call   QWORD PTR [rax+0x10]
   1400015ed:	mov    rax,rsi
   1400015f0:	mov    rbx,QWORD PTR [rsp+0x78]
   1400015f5:	add    rsp,0x40
   1400015f9:	pop    r15
   1400015fb:	pop    r14
   1400015fd:	pop    r12
   1400015ff:	pop    rdi
   140001600:	pop    rsi
   140001601:	ret    
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    QWORD PTR [rsp+0x8],rcx
   140001615:	push   rsi
   140001616:	push   rdi
   140001617:	push   r12
   140001619:	push   r14
   14000161b:	push   r15
   14000161d:	sub    rsp,0x40
   140001621:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000162a:	mov    QWORD PTR [rsp+0x80],rbx
   140001632:	mov    r15,rdx
   140001635:	mov    rsi,rcx
   140001638:	xor    ebx,ebx
   14000163a:	mov    DWORD PTR [rsp+0x78],ebx
   14000163e:	cmp    BYTE PTR [rdx],bl
   140001640:	jne    0x140001647
   140001642:	xor    r14d,r14d
   140001645:	jmp    0x140001659
   140001647:	or     r14,0xffffffffffffffff
   14000164b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001650:	inc    r14
   140001653:	cmp    BYTE PTR [rdx+r14*1],bl
   140001657:	jne    0x140001650
   140001659:	mov    rax,QWORD PTR [rcx]
   14000165c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001660:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001665:	test   rdi,rdi
   140001668:	jle    0x140001674
   14000166a:	cmp    rdi,r14
   14000166d:	jle    0x140001674
   14000166f:	sub    rdi,r14
   140001672:	jmp    0x140001676
   140001674:	xor    edi,edi
   140001676:	mov    r12,rsi
   140001679:	mov    QWORD PTR [rsp+0x28],rsi
   14000167e:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001683:	test   rcx,rcx
   140001686:	je     0x14000168f
   140001688:	mov    rax,QWORD PTR [rcx]
   14000168b:	call   QWORD PTR [rax+0x8]
   14000168e:	nop
   14000168f:	mov    rax,QWORD PTR [rsi]
   140001692:	movsxd rcx,DWORD PTR [rax+0x4]
   140001696:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000169b:	jne    0x1400016b2
   14000169d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   1400016a2:	test   rcx,rcx
   1400016a5:	je     0x1400016b2
   1400016a7:	cmp    rcx,rsi
   1400016aa:	je     0x1400016b2
   1400016ac:	call   QWORD PTR [rip+0x4ac6]        # 0x140006178
   1400016b2:	mov    rax,QWORD PTR [rsi]
   1400016b5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016b9:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400016be:	sete   al
   1400016c1:	mov    BYTE PTR [rsp+0x30],al
   1400016c5:	test   al,al
   1400016c7:	jne    0x1400016d3
   1400016c9:	mov    ebx,0x4
   1400016ce:	jmp    0x140001787
   1400016d3:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400016d7:	and    eax,0x1c0
   1400016dc:	cmp    eax,0x40
   1400016df:	je     0x140001714
   1400016e1:	test   rdi,rdi
   1400016e4:	jle    0x140001710
   1400016e6:	mov    rax,QWORD PTR [rsi]
   1400016e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016ed:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400016f2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400016f7:	call   QWORD PTR [rip+0x4a4b]        # 0x140006148
   1400016fd:	cmp    eax,0xffffffff
   140001700:	jne    0x14000170b
   140001702:	or     ebx,0x4
   140001705:	mov    DWORD PTR [rsp+0x78],ebx
   140001709:	jmp    0x140001710
   14000170b:	dec    rdi
   14000170e:	jmp    0x1400016e1
   140001710:	test   ebx,ebx
   140001712:	jne    0x140001767
   140001714:	mov    rax,QWORD PTR [rsi]
   140001717:	movsxd rcx,DWORD PTR [rax+0x4]
   14000171b:	mov    r8,r14
   14000171e:	mov    rdx,r15
   140001721:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001726:	call   QWORD PTR [rip+0x4a24]        # 0x140006150
   14000172c:	cmp    rax,r14
   14000172f:	je     0x140001738
   140001731:	mov    ebx,0x4
   140001736:	jmp    0x140001763
   140001738:	test   rdi,rdi
   14000173b:	jle    0x140001767
   14000173d:	mov    rax,QWORD PTR [rsi]
   140001740:	movsxd rcx,DWORD PTR [rax+0x4]
   140001744:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001749:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000174e:	call   QWORD PTR [rip+0x49f4]        # 0x140006148
   140001754:	cmp    eax,0xffffffff
   140001757:	jne    0x14000175e
   140001759:	or     ebx,0x4
   14000175c:	jmp    0x140001763
   14000175e:	dec    rdi
   140001761:	jmp    0x140001738
   140001763:	mov    DWORD PTR [rsp+0x78],ebx
   140001767:	mov    rax,QWORD PTR [rsi]
   14000176a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000176e:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001777:	jmp    0x140001787
   140001779:	mov    rsi,QWORD PTR [rsp+0x70]
   14000177e:	mov    ebx,DWORD PTR [rsp+0x78]
   140001782:	mov    r12,QWORD PTR [rsp+0x28]
   140001787:	mov    rax,QWORD PTR [rsi]
   14000178a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000178e:	add    rcx,rsi
   140001791:	xor    r8d,r8d
   140001794:	mov    edx,ebx
   140001796:	call   QWORD PTR [rip+0x49cc]        # 0x140006168
   14000179c:	nop
   14000179d:	call   QWORD PTR [rip+0x492d]        # 0x1400060d0
   1400017a3:	test   al,al
   1400017a5:	jne    0x1400017b0
   1400017a7:	mov    rcx,r12
   1400017aa:	call   QWORD PTR [rip+0x49c0]        # 0x140006170
   1400017b0:	mov    rax,QWORD PTR [r12]
   1400017b4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017b8:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   1400017bd:	test   rcx,rcx
   1400017c0:	je     0x1400017c8
   1400017c2:	mov    rax,QWORD PTR [rcx]
   1400017c5:	call   QWORD PTR [rax+0x10]
   1400017c8:	mov    rax,rsi
   1400017cb:	mov    rbx,QWORD PTR [rsp+0x80]
   1400017d3:	add    rsp,0x40
   1400017d7:	pop    r15
   1400017d9:	pop    r14
   1400017db:	pop    r12
   1400017dd:	pop    rdi
   1400017de:	pop    rsi
   1400017df:	ret    
   1400017e0:	sub    rsp,0x28
   1400017e4:	xor    eax,eax
   1400017e6:	test   rcx,rcx
   1400017e9:	je     0x140001802
   1400017eb:	cmp    rcx,0xffffffffffffffff
   1400017ef:	ja     0x1400017fb
   1400017f1:	call   0x1400048da
   1400017f6:	test   rax,rax
   1400017f9:	jne    0x140001802
   1400017fb:	call   QWORD PTR [rip+0x48d7]        # 0x1400060d8
   140001801:	int3   
   140001802:	add    rsp,0x28
   140001806:	ret    
   140001807:	int3   
   140001808:	int3   
   140001809:	int3   
   14000180a:	int3   
   14000180b:	int3   
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	mov    rax,rcx
   140001813:	ret    
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	test   rdx,rdx
   140001823:	je     0x14000182b
   140001825:	mov    rax,QWORD PTR [r8]
   140001828:	mov    QWORD PTR [rdx],rax
   14000182b:	ret    
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	test   rdx,rdx
   140001833:	je     0x14000183b
   140001835:	mov    rax,QWORD PTR [r8]
   140001838:	mov    QWORD PTR [rdx],rax
   14000183b:	ret    
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	test   rdx,rdx
   140001843:	je     0x14000184b
   140001845:	mov    rax,QWORD PTR [r8]
   140001848:	mov    QWORD PTR [rdx],rax
   14000184b:	ret    
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	ret    0x0
   140001853:	int3   
   140001854:	int3   
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	ret    0x0
   140001863:	int3   
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	ret    0x0
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    rax,rcx
   140001883:	ret    
   140001884:	int3   
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    rax,rcx
   140001893:	ret    
   140001894:	int3   
   140001895:	int3   
   140001896:	int3   
   140001897:	int3   
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    rax,rcx
   1400018a3:	ret    
   1400018a4:	int3   
   1400018a5:	int3   
   1400018a6:	int3   
   1400018a7:	int3   
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	rex push rdi
   1400018b2:	sub    rsp,0x40
   1400018b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400018bf:	mov    QWORD PTR [rsp+0x60],rbx
   1400018c4:	mov    QWORD PTR [rsp+0x68],rsi
   1400018c9:	mov    rsi,rcx
   1400018cc:	xor    edx,edx
   1400018ce:	lea    rcx,[rsp+0x50]
   1400018d3:	call   QWORD PTR [rip+0x47e7]        # 0x1400060c0
   1400018d9:	nop
   1400018da:	mov    rax,QWORD PTR [rip+0x8b9f]        # 0x14000a480
   1400018e1:	mov    QWORD PTR [rsp+0x58],rax
   1400018e6:	mov    rcx,QWORD PTR [rip+0x47c3]        # 0x1400060b0
   1400018ed:	call   QWORD PTR [rip+0x47fd]        # 0x1400060f0
   1400018f3:	mov    rdi,rax
   1400018f6:	mov    rax,QWORD PTR [rsi]
   1400018f9:	cmp    rdi,QWORD PTR [rax+0x18]
   1400018fd:	jae    0x140001912
   1400018ff:	mov    rcx,QWORD PTR [rax+0x10]
   140001903:	mov    rbx,QWORD PTR [rcx+rdi*8]
   140001907:	test   rbx,rbx
   14000190a:	jne    0x140001993
   140001910:	jmp    0x140001914
   140001912:	xor    ebx,ebx
   140001914:	cmp    BYTE PTR [rax+0x24],0x0
   140001918:	je     0x14000192e
   14000191a:	call   QWORD PTR [rip+0x47d8]        # 0x1400060f8
   140001920:	cmp    rdi,QWORD PTR [rax+0x18]
   140001924:	jae    0x140001933
   140001926:	mov    rax,QWORD PTR [rax+0x10]
   14000192a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000192e:	test   rbx,rbx
   140001931:	jne    0x140001993
   140001933:	mov    rbx,QWORD PTR [rsp+0x58]
   140001938:	test   rbx,rbx
   14000193b:	jne    0x140001993
   14000193d:	mov    rdx,rsi
   140001940:	lea    rcx,[rsp+0x58]
   140001945:	call   QWORD PTR [rip+0x47b5]        # 0x140006100
   14000194b:	cmp    rax,0xffffffffffffffff
   14000194f:	jne    0x140001975
   140001951:	lea    rdx,[rip+0x4de8]        # 0x140006740
   140001958:	lea    rcx,[rsp+0x28]
   14000195d:	call   QWORD PTR [rip+0x48cd]        # 0x140006230
   140001963:	lea    rdx,[rip+0x641e]        # 0x140007d88
   14000196a:	lea    rcx,[rsp+0x28]
   14000196f:	call   0x140004a2a
   140001974:	int3   
   140001975:	mov    rbx,QWORD PTR [rsp+0x58]
   14000197a:	mov    QWORD PTR [rip+0x8aff],rbx        # 0x14000a480
   140001981:	mov    rax,QWORD PTR [rbx]
   140001984:	mov    rcx,rbx
   140001987:	call   QWORD PTR [rax+0x8]
   14000198a:	mov    rcx,rbx
   14000198d:	call   0x1400047ec
   140001992:	nop
   140001993:	lea    rcx,[rsp+0x50]
   140001998:	call   QWORD PTR [rip+0x472a]        # 0x1400060c8
   14000199e:	mov    rax,rbx
   1400019a1:	mov    rbx,QWORD PTR [rsp+0x60]
   1400019a6:	mov    rsi,QWORD PTR [rsp+0x68]
   1400019ab:	add    rsp,0x40
   1400019af:	pop    rdi
   1400019b0:	ret    
   1400019b1:	int3   
   1400019b2:	int3   
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	xor    eax,eax
   1400019c2:	mov    QWORD PTR [rcx+0x10],rax
   1400019c6:	mov    QWORD PTR [rcx+0x18],rax
   1400019ca:	mov    rax,rcx
   1400019cd:	ret    
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	xor    eax,eax
   1400019d2:	mov    QWORD PTR [rcx+0x10],rax
   1400019d6:	mov    QWORD PTR [rcx+0x18],rax
   1400019da:	mov    rax,rcx
   1400019dd:	ret    
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	mov    rax,rcx
   1400019e3:	ret    
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    rax,rcx
   1400019f3:	ret    
   1400019f4:	int3   
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	mov    rax,rcx
   140001a03:	ret    
   140001a04:	int3   
   140001a05:	int3   
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	mov    rax,rcx
   140001a13:	ret    
   140001a14:	int3   
   140001a15:	int3   
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    QWORD PTR [rsp+0x8],rbx
   140001a25:	push   rdi
   140001a26:	sub    rsp,0x20
   140001a2a:	mov    QWORD PTR [rcx+0x18],0xf
   140001a32:	mov    QWORD PTR [rcx+0x10],0x0
   140001a3a:	mov    BYTE PTR [rcx],0x0
   140001a3d:	cmp    QWORD PTR [rdx+0x18],0x10
   140001a42:	mov    rbx,rdx
   140001a45:	mov    rdi,rcx
   140001a48:	jae    0x140001a5b
   140001a4a:	mov    r8,QWORD PTR [rdx+0x10]
   140001a4e:	inc    r8
   140001a51:	je     0x140001a68
   140001a53:	call   QWORD PTR [rip+0x47cf]        # 0x140006228
   140001a59:	jmp    0x140001a68
   140001a5b:	mov    rax,QWORD PTR [rdx]
   140001a5e:	mov    QWORD PTR [rcx],rax
   140001a61:	mov    QWORD PTR [rdx],0x0
   140001a68:	mov    rax,QWORD PTR [rbx+0x10]
   140001a6c:	mov    QWORD PTR [rdi+0x10],rax
   140001a70:	mov    rax,QWORD PTR [rbx+0x18]
   140001a74:	mov    QWORD PTR [rdi+0x18],rax
   140001a78:	mov    QWORD PTR [rbx+0x18],0xf
   140001a80:	mov    QWORD PTR [rbx+0x10],0x0
   140001a88:	mov    BYTE PTR [rbx],0x0
   140001a8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a90:	mov    rax,rdi
   140001a93:	add    rsp,0x20
   140001a97:	pop    rdi
   140001a98:	ret    
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	rex push rbx
   140001aa2:	sub    rsp,0x20
   140001aa6:	mov    QWORD PTR [rcx+0x18],0xf
   140001aae:	mov    QWORD PTR [rcx+0x10],0x0
   140001ab6:	or     r9,0xffffffffffffffff
   140001aba:	xor    r8d,r8d
   140001abd:	mov    rbx,rcx
   140001ac0:	mov    BYTE PTR [rcx],0x0
   140001ac3:	call   0x1400029d0
   140001ac8:	mov    rax,rbx
   140001acb:	add    rsp,0x20
   140001acf:	pop    rbx
   140001ad0:	ret    
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	int3   
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	int3   
   140001ad9:	int3   
   140001ada:	int3   
   140001adb:	int3   
   140001adc:	int3   
   140001add:	int3   
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	rex push rbx
   140001ae2:	sub    rsp,0x20
   140001ae6:	xor    r8d,r8d
   140001ae9:	mov    QWORD PTR [rcx+0x18],0xf
   140001af1:	mov    rbx,rcx
   140001af4:	mov    QWORD PTR [rcx+0x10],r8
   140001af8:	mov    BYTE PTR [rcx],r8b
   140001afb:	cmp    BYTE PTR [rdx],r8b
   140001afe:	je     0x140001b0e
   140001b00:	or     r8,0xffffffffffffffff
   140001b04:	inc    r8
   140001b07:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001b0c:	jne    0x140001b04
   140001b0e:	call   0x140002b20
   140001b13:	mov    rax,rbx
   140001b16:	add    rsp,0x20
   140001b1a:	pop    rbx
   140001b1b:	ret    
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	rex push rbx
   140001b22:	sub    rsp,0x20
   140001b26:	mov    QWORD PTR [rcx+0x18],0xf
   140001b2e:	mov    QWORD PTR [rcx+0x10],0x0
   140001b36:	mov    rbx,rcx
   140001b39:	mov    BYTE PTR [rcx],0x0
   140001b3c:	call   0x140002b20
   140001b41:	mov    rax,rbx
   140001b44:	add    rsp,0x20
   140001b48:	pop    rbx
   140001b49:	ret    
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	mov    QWORD PTR [rcx+0x18],0xf
   140001b58:	mov    QWORD PTR [rcx+0x10],0x0
   140001b60:	mov    rax,rcx
   140001b63:	mov    BYTE PTR [rcx],0x0
   140001b66:	ret    
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	rex push rdi
   140001b72:	sub    rsp,0x30
   140001b76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001b7f:	mov    QWORD PTR [rsp+0x48],rbx
   140001b84:	mov    edi,edx
   140001b86:	mov    rbx,rcx
   140001b89:	call   QWORD PTR [rip+0x4599]        # 0x140006128
   140001b8f:	nop
   140001b90:	lea    rax,[rip+0x4bc1]        # 0x140006758
   140001b97:	mov    QWORD PTR [rbx],rax
   140001b9a:	test   dil,0x1
   140001b9e:	mov    eax,0x0
   140001ba3:	mov    ecx,0x4
   140001ba8:	cmove  eax,ecx
   140001bab:	test   dil,0x2
   140001baf:	jne    0x140001bb4
   140001bb1:	or     eax,0x2
   140001bb4:	test   dil,0x8
   140001bb8:	je     0x140001bbd
   140001bba:	or     eax,0x8
   140001bbd:	test   cl,dil
   140001bc0:	je     0x140001bc5
   140001bc2:	or     eax,0x10
   140001bc5:	mov    QWORD PTR [rbx+0x68],0x0
   140001bcd:	mov    DWORD PTR [rbx+0x70],eax
   140001bd0:	mov    rax,rbx
   140001bd3:	mov    rbx,QWORD PTR [rsp+0x48]
   140001bd8:	add    rsp,0x30
   140001bdc:	pop    rdi
   140001bdd:	ret    
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	mov    QWORD PTR [rsp+0x8],rcx
   140001be5:	push   rdi
   140001be6:	sub    rsp,0x30
   140001bea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001bf3:	mov    QWORD PTR [rsp+0x48],rbx
   140001bf8:	mov    QWORD PTR [rsp+0x58],rsi
   140001bfd:	mov    esi,edx
   140001bff:	mov    rdi,rcx
   140001c02:	mov    DWORD PTR [rsp+0x50],0x0
   140001c0a:	test   r8d,r8d
   140001c0d:	je     0x140001c48
   140001c0f:	lea    rax,[rip+0x4bca]        # 0x1400067e0
   140001c16:	mov    QWORD PTR [rcx],rax
   140001c19:	lea    rax,[rip+0x4bc8]        # 0x1400067e8
   140001c20:	mov    QWORD PTR [rcx+0x10],rax
   140001c24:	mov    rax,QWORD PTR [rip+0x448d]        # 0x1400060b8
   140001c2b:	mov    QWORD PTR [rcx+0x98],rax
   140001c32:	mov    rax,QWORD PTR [rip+0x446f]        # 0x1400060a8
   140001c39:	mov    QWORD PTR [rcx+0x98],rax
   140001c40:	mov    DWORD PTR [rsp+0x50],0x1
   140001c48:	xor    r8d,r8d
   140001c4b:	lea    rdx,[rcx+0x18]
   140001c4f:	call   QWORD PTR [rip+0x4533]        # 0x140006188
   140001c55:	nop
   140001c56:	mov    rax,QWORD PTR [rdi]
   140001c59:	movsxd rdx,DWORD PTR [rax+0x4]
   140001c5d:	lea    rax,[rip+0x4b74]        # 0x1400067d8
   140001c64:	mov    QWORD PTR [rdx+rdi*1],rax
   140001c68:	mov    rax,QWORD PTR [rdi]
   140001c6b:	movsxd rdx,DWORD PTR [rax+0x4]
   140001c6f:	lea    r8d,[rdx-0x98]
   140001c76:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   140001c7b:	mov    edx,esi
   140001c7d:	lea    rcx,[rdi+0x18]
   140001c81:	call   0x140001b70
   140001c86:	nop
   140001c87:	mov    rax,rdi
   140001c8a:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c8f:	mov    rsi,QWORD PTR [rsp+0x58]
   140001c94:	add    rsp,0x30
   140001c98:	pop    rdi
   140001c99:	ret    
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	xor    eax,eax
   140001ca2:	mov    QWORD PTR [rcx],rdx
   140001ca5:	mov    QWORD PTR [rcx+0x8],rax
   140001ca9:	mov    DWORD PTR [rcx+0x10],eax
   140001cac:	mov    rax,rcx
   140001caf:	ret    
   140001cb0:	lea    rax,[rip+0x49a1]        # 0x140006658
   140001cb7:	mov    QWORD PTR [rcx],rax
   140001cba:	mov    rax,rcx
   140001cbd:	ret    
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    rax,rcx
   140001cc3:	ret    
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	lea    rax,[rip+0x49d1]        # 0x1400066a8
   140001cd7:	mov    QWORD PTR [rcx],rax
   140001cda:	mov    rax,rcx
   140001cdd:	ret    
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	rex push rbx
   140001ce2:	sub    rsp,0x20
   140001ce6:	mov    QWORD PTR [rcx],rdx
   140001ce9:	mov    rax,QWORD PTR [rdx]
   140001cec:	mov    rbx,rcx
   140001cef:	movsxd r8,DWORD PTR [rax+0x4]
   140001cf3:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140001cf8:	test   rcx,rcx
   140001cfb:	je     0x140001d03
   140001cfd:	mov    rax,QWORD PTR [rcx]
   140001d00:	call   QWORD PTR [rax+0x8]
   140001d03:	mov    rax,rbx
   140001d06:	add    rsp,0x20
   140001d0a:	pop    rbx
   140001d0b:	ret    
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	rex push rbx
   140001d12:	sub    rsp,0x20
   140001d16:	mov    QWORD PTR [rcx],rdx
   140001d19:	mov    rax,QWORD PTR [rdx]
   140001d1c:	mov    rbx,rcx
   140001d1f:	movsxd r8,DWORD PTR [rax+0x4]
   140001d23:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140001d28:	test   rcx,rcx
   140001d2b:	je     0x140001d33
   140001d2d:	mov    rax,QWORD PTR [rcx]
   140001d30:	call   QWORD PTR [rax+0x8]
   140001d33:	mov    rax,rbx
   140001d36:	add    rsp,0x20
   140001d3a:	pop    rbx
   140001d3b:	ret    
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	lea    rax,[rip+0x49c1]        # 0x140006708
   140001d47:	mov    QWORD PTR [rcx],rax
   140001d4a:	mov    rax,rcx
   140001d4d:	ret    
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	lea    rax,[rip+0x48c9]        # 0x140006620
   140001d57:	mov    QWORD PTR [rcx],rax
   140001d5a:	mov    rax,rcx
   140001d5d:	ret    
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    DWORD PTR [rcx],edx
   140001d62:	mov    QWORD PTR [rcx+0x8],r8
   140001d66:	mov    rax,rcx
   140001d69:	ret    
   140001d6a:	int3   
   140001d6b:	int3   
   140001d6c:	int3   
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	mov    QWORD PTR [rsp+0x8],rcx
   140001d75:	push   rdi
   140001d76:	sub    rsp,0x30
   140001d7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001d83:	mov    QWORD PTR [rsp+0x48],rbx
   140001d88:	movzx  edi,r8b
   140001d8c:	mov    rbx,rcx
   140001d8f:	mov    QWORD PTR [rcx],rdx
   140001d92:	mov    rax,QWORD PTR [rdx]
   140001d95:	movsxd r9,DWORD PTR [rax+0x4]
   140001d99:	mov    rcx,QWORD PTR [r9+rdx*1+0x48]
   140001d9e:	test   rcx,rcx
   140001da1:	je     0x140001daa
   140001da3:	mov    rax,QWORD PTR [rcx]
   140001da6:	call   QWORD PTR [rax+0x8]
   140001da9:	nop
   140001daa:	movzx  edx,dil
   140001dae:	mov    rcx,QWORD PTR [rbx]
   140001db1:	call   QWORD PTR [rip+0x43c9]        # 0x140006180
   140001db7:	mov    BYTE PTR [rbx+0x8],al
   140001dba:	mov    rax,rbx
   140001dbd:	mov    rbx,QWORD PTR [rsp+0x48]
   140001dc2:	add    rsp,0x30
   140001dc6:	pop    rdi
   140001dc7:	ret    
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x8],rcx
   140001dd5:	push   rdi
   140001dd6:	sub    rsp,0x30
   140001dda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001de3:	mov    QWORD PTR [rsp+0x48],rbx
   140001de8:	mov    rbx,rdx
   140001deb:	mov    rdi,rcx
   140001dee:	mov    QWORD PTR [rcx],rdx
   140001df1:	mov    rax,QWORD PTR [rdx]
   140001df4:	movsxd r8,DWORD PTR [rax+0x4]
   140001df8:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140001dfd:	test   rcx,rcx
   140001e00:	je     0x140001e09
   140001e02:	mov    rax,QWORD PTR [rcx]
   140001e05:	call   QWORD PTR [rax+0x8]
   140001e08:	nop
   140001e09:	mov    rax,QWORD PTR [rbx]
   140001e0c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001e10:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140001e15:	jne    0x140001e2c
   140001e17:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140001e1c:	test   rcx,rcx
   140001e1f:	je     0x140001e2c
   140001e21:	cmp    rcx,rbx
   140001e24:	je     0x140001e2c
   140001e26:	call   QWORD PTR [rip+0x434c]        # 0x140006178
   140001e2c:	mov    rax,QWORD PTR [rbx]
   140001e2f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001e33:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140001e38:	sete   al
   140001e3b:	mov    BYTE PTR [rdi+0x8],al
   140001e3e:	mov    rax,rdi
   140001e41:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e46:	add    rsp,0x30
   140001e4a:	pop    rdi
   140001e4b:	ret    
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	rex push rbx
   140001e52:	sub    rsp,0x20
   140001e56:	cmp    QWORD PTR [rcx+0x18],0x10
   140001e5b:	mov    rbx,rcx
   140001e5e:	jb     0x140001e68
   140001e60:	mov    rcx,QWORD PTR [rcx]
   140001e63:	call   0x1400048e0
   140001e68:	mov    QWORD PTR [rbx+0x18],0xf
   140001e70:	mov    QWORD PTR [rbx+0x10],0x0
   140001e78:	mov    BYTE PTR [rbx],0x0
   140001e7b:	add    rsp,0x20
   140001e7f:	pop    rbx
   140001e80:	ret    
   140001e81:	int3   
   140001e82:	int3   
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	int3   
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	int3   
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	rex push rbx
   140001e92:	sub    rsp,0x20
   140001e96:	test   BYTE PTR [rcx+0x70],0x1
   140001e9a:	lea    rax,[rip+0x48b7]        # 0x140006758
   140001ea1:	mov    rbx,rcx
   140001ea4:	mov    QWORD PTR [rcx],rax
   140001ea7:	je     0x140001eb5
   140001ea9:	mov    rcx,QWORD PTR [rcx+0x18]
   140001ead:	mov    rcx,QWORD PTR [rcx]
   140001eb0:	call   0x1400048e0
   140001eb5:	mov    rax,QWORD PTR [rbx+0x18]
   140001eb9:	xor    ecx,ecx
   140001ebb:	mov    QWORD PTR [rax],rcx
   140001ebe:	mov    rax,QWORD PTR [rbx+0x38]
   140001ec2:	mov    QWORD PTR [rax],rcx
   140001ec5:	mov    rax,QWORD PTR [rbx+0x50]
   140001ec9:	mov    DWORD PTR [rax],ecx
   140001ecb:	mov    rax,QWORD PTR [rbx+0x20]
   140001ecf:	mov    QWORD PTR [rax],rcx
   140001ed2:	mov    rax,QWORD PTR [rbx+0x40]
   140001ed6:	mov    QWORD PTR [rax],rcx
   140001ed9:	mov    rax,QWORD PTR [rbx+0x58]
   140001edd:	mov    DWORD PTR [rax],ecx
   140001edf:	and    DWORD PTR [rbx+0x70],0xfffffffe
   140001ee3:	mov    QWORD PTR [rbx+0x68],rcx
   140001ee7:	mov    rcx,rbx
   140001eea:	add    rsp,0x20
   140001eee:	pop    rbx
   140001eef:	rex.W jmp QWORD PTR [rip+0x423a]        # 0x140006130
   140001ef6:	int3   
   140001ef7:	int3   
   140001ef8:	int3   
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	rex push rbx
   140001f02:	sub    rsp,0x20
   140001f06:	mov    rax,QWORD PTR [rcx-0x98]
   140001f0d:	mov    rbx,rcx
   140001f10:	add    rcx,0xffffffffffffff80
   140001f14:	movsxd rdx,DWORD PTR [rax+0x4]
   140001f18:	lea    rax,[rip+0x48b9]        # 0x1400067d8
   140001f1f:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140001f24:	mov    rax,QWORD PTR [rcx-0x18]
   140001f28:	movsxd rdx,DWORD PTR [rax+0x4]
   140001f2c:	lea    r8d,[rdx-0x98]
   140001f33:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   140001f38:	call   0x140001e90
   140001f3d:	lea    rcx,[rbx-0x78]
   140001f41:	add    rsp,0x20
   140001f45:	pop    rbx
   140001f46:	rex.W jmp QWORD PTR [rip+0x4243]        # 0x140006190
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	lea    rax,[rip+0x46c9]        # 0x140006620
   140001f57:	mov    QWORD PTR [rcx],rax
   140001f5a:	ret    
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	lea    rax,[rip+0x46b9]        # 0x140006620
   140001f67:	mov    QWORD PTR [rcx],rax
   140001f6a:	ret    
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    rdx,QWORD PTR [rcx]
   140001f73:	mov    rax,QWORD PTR [rdx]
   140001f76:	movsxd rcx,DWORD PTR [rax+0x4]
   140001f7a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140001f7f:	test   rcx,rcx
   140001f82:	je     0x140001f8b
   140001f84:	mov    rax,QWORD PTR [rcx]
   140001f87:	rex.W jmp QWORD PTR [rax+0x10]
   140001f8b:	ret    
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    rdx,QWORD PTR [rcx]
   140001f93:	mov    rax,QWORD PTR [rdx]
   140001f96:	movsxd rcx,DWORD PTR [rax+0x4]
   140001f9a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140001f9f:	test   rcx,rcx
   140001fa2:	je     0x140001fab
   140001fa4:	mov    rax,QWORD PTR [rcx]
   140001fa7:	rex.W jmp QWORD PTR [rax+0x10]
   140001fab:	ret    
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	lea    rax,[rip+0x4669]        # 0x140006620
   140001fb7:	mov    QWORD PTR [rcx],rax
   140001fba:	ret    
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	lea    rax,[rip+0x4659]        # 0x140006620
   140001fc7:	mov    QWORD PTR [rcx],rax
   140001fca:	ret    
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	sub    rsp,0x28
   140001fd4:	mov    rcx,QWORD PTR [rcx]
   140001fd7:	test   rcx,rcx
   140001fda:	je     0x140001ff9
   140001fdc:	mov    rax,QWORD PTR [rcx]
   140001fdf:	call   QWORD PTR [rax+0x10]
   140001fe2:	test   rax,rax
   140001fe5:	je     0x140001ff9
   140001fe7:	mov    r8,QWORD PTR [rax]
   140001fea:	mov    edx,0x1
   140001fef:	mov    rcx,rax
   140001ff2:	add    rsp,0x28
   140001ff6:	rex.WB jmp QWORD PTR [r8]
   140001ff9:	add    rsp,0x28
   140001ffd:	ret    
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    rdx,QWORD PTR [rcx]
   140002003:	mov    rax,QWORD PTR [rdx]
   140002006:	movsxd rcx,DWORD PTR [rax+0x4]
   14000200a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000200f:	test   rcx,rcx
   140002012:	je     0x14000201b
   140002014:	mov    rax,QWORD PTR [rcx]
   140002017:	rex.W jmp QWORD PTR [rax+0x10]
   14000201b:	ret    
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	rex push rbx
   140002022:	sub    rsp,0x20
   140002026:	mov    rbx,rcx
   140002029:	call   QWORD PTR [rip+0x40a1]        # 0x1400060d0
   14000202f:	test   al,al
   140002031:	jne    0x14000203c
   140002033:	mov    rcx,QWORD PTR [rbx]
   140002036:	call   QWORD PTR [rip+0x4134]        # 0x140006170
   14000203c:	mov    rdx,QWORD PTR [rbx]
   14000203f:	mov    rax,QWORD PTR [rdx]
   140002042:	movsxd rcx,DWORD PTR [rax+0x4]
   140002046:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000204b:	test   rcx,rcx
   14000204e:	je     0x14000205c
   140002050:	mov    rax,QWORD PTR [rcx]
   140002053:	add    rsp,0x20
   140002057:	pop    rbx
   140002058:	rex.W jmp QWORD PTR [rax+0x10]
   14000205c:	add    rsp,0x20
   140002060:	pop    rbx
   140002061:	ret    
   140002062:	int3   
   140002063:	int3   
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	mov    rax,rdx
   140002073:	ret    
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	ret    0x0
   140002083:	int3   
   140002084:	int3   
   140002085:	int3   
   140002086:	int3   
   140002087:	int3   
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	cmp    BYTE PTR [rdx],0x0
   140002093:	jne    0x14000209d
   140002095:	xor    r8d,r8d
   140002098:	jmp    0x140002b20
   14000209d:	or     r8,0xffffffffffffffff
   1400020a1:	inc    r8
   1400020a4:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400020a9:	jne    0x1400020a1
   1400020ab:	jmp    0x140002b20
   1400020b0:	cmp    rcx,rdx
   1400020b3:	sete   al
   1400020b6:	ret    
   1400020b7:	int3   
   1400020b8:	int3   
   1400020b9:	int3   
   1400020ba:	int3   
   1400020bb:	int3   
   1400020bc:	int3   
   1400020bd:	int3   
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	mov    rax,QWORD PTR [rdx+0x8]
   1400020c4:	cmp    QWORD PTR [rcx+0x8],rax
   1400020c8:	jne    0x1400020d3
   1400020ca:	mov    eax,DWORD PTR [rdx]
   1400020cc:	cmp    DWORD PTR [rcx],eax
   1400020ce:	jne    0x1400020d3
   1400020d0:	mov    al,0x1
   1400020d2:	ret    
   1400020d3:	xor    al,al
   1400020d5:	ret    
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	mov    rax,QWORD PTR [rcx+0x8]
   1400020e4:	add    rax,QWORD PTR [rcx]
   1400020e7:	ret    
   1400020e8:	int3   
   1400020e9:	int3   
   1400020ea:	int3   
   1400020eb:	int3   
   1400020ec:	int3   
   1400020ed:	int3   
   1400020ee:	int3   
   1400020ef:	int3   
   1400020f0:	movzx  eax,BYTE PTR [rcx+0x8]
   1400020f4:	ret    
   1400020f5:	int3   
   1400020f6:	int3   
   1400020f7:	int3   
   1400020f8:	int3   
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	movzx  eax,BYTE PTR [rcx+0x8]
   140002104:	ret    
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	rex push rbx
   140002112:	sub    rsp,0x20
   140002116:	mov    rax,QWORD PTR [rcx]
   140002119:	lea    rbx,[rcx+0x98]
   140002120:	movsxd rcx,DWORD PTR [rax+0x4]
   140002124:	lea    rax,[rip+0x46ad]        # 0x1400067d8
   14000212b:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   140002133:	mov    rax,QWORD PTR [rbx-0x98]
   14000213a:	lea    rcx,[rbx-0x80]
   14000213e:	movsxd rdx,DWORD PTR [rax+0x4]
   140002142:	lea    r8d,[rdx-0x98]
   140002149:	mov    DWORD PTR [rdx+rbx*1-0x9c],r8d
   140002151:	call   0x140001e90
   140002156:	lea    rcx,[rbx-0x78]
   14000215a:	call   QWORD PTR [rip+0x4030]        # 0x140006190
   140002160:	mov    rax,QWORD PTR [rip+0x3f41]        # 0x1400060a8
   140002167:	mov    rcx,rbx
   14000216a:	mov    QWORD PTR [rbx],rax
   14000216d:	mov    rax,QWORD PTR [rip+0x3f44]        # 0x1400060b8
   140002174:	mov    QWORD PTR [rbx],rax
   140002177:	add    rsp,0x20
   14000217b:	pop    rbx
   14000217c:	rex.W jmp QWORD PTR [rip+0x3f9d]        # 0x140006120
   140002183:	int3   
   140002184:	movsxd rax,DWORD PTR [rcx-0x4]
   140002188:	sub    rcx,rax
   14000218b:	jmp    0x1400021c0
   140002190:	mov    QWORD PTR [rsp+0x8],rbx
   140002195:	push   rdi
   140002196:	sub    rsp,0x20
   14000219a:	mov    ebx,edx
   14000219c:	mov    rdi,rcx
   14000219f:	call   0x140001e90
   1400021a4:	test   bl,0x1
   1400021a7:	je     0x1400021b1
   1400021a9:	mov    rcx,rdi
   1400021ac:	call   0x1400048e0
   1400021b1:	mov    rax,rdi
   1400021b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021b9:	add    rsp,0x20
   1400021bd:	pop    rdi
   1400021be:	ret    
   1400021bf:	int3   
   1400021c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021c5:	push   rdi
   1400021c6:	sub    rsp,0x20
   1400021ca:	lea    rdi,[rcx-0x98]
   1400021d1:	mov    ebx,edx
   1400021d3:	mov    rcx,rdi
   1400021d6:	call   0x140002110
   1400021db:	test   bl,0x1
   1400021de:	je     0x1400021e8
   1400021e0:	mov    rcx,rdi
   1400021e3:	call   0x1400048e0
   1400021e8:	mov    rax,rdi
   1400021eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021f0:	add    rsp,0x20
   1400021f4:	pop    rdi
   1400021f5:	ret    
   1400021f6:	int3   
   1400021f7:	int3   
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	rex push rbx
   140002202:	sub    rsp,0x20
   140002206:	lea    rax,[rip+0x4413]        # 0x140006620
   14000220d:	mov    rbx,rcx
   140002210:	mov    QWORD PTR [rcx],rax
   140002213:	test   dl,0x1
   140002216:	je     0x14000221d
   140002218:	call   0x1400048e0
   14000221d:	mov    rax,rbx
   140002220:	add    rsp,0x20
   140002224:	pop    rbx
   140002225:	ret    
   140002226:	int3   
   140002227:	int3   
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	rex push rbx
   140002232:	sub    rsp,0x20
   140002236:	lea    rax,[rip+0x43e3]        # 0x140006620
   14000223d:	mov    rbx,rcx
   140002240:	mov    QWORD PTR [rcx],rax
   140002243:	test   dl,0x1
   140002246:	je     0x14000224d
   140002248:	call   0x1400048e0
   14000224d:	mov    rax,rbx
   140002250:	add    rsp,0x20
   140002254:	pop    rbx
   140002255:	ret    
   140002256:	int3   
   140002257:	int3   
   140002258:	int3   
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	rex push rbx
   140002262:	sub    rsp,0x20
   140002266:	lea    rax,[rip+0x43b3]        # 0x140006620
   14000226d:	mov    rbx,rcx
   140002270:	mov    QWORD PTR [rcx],rax
   140002273:	test   dl,0x1
   140002276:	je     0x14000227d
   140002278:	call   0x1400048e0
   14000227d:	mov    rax,rbx
   140002280:	add    rsp,0x20
   140002284:	pop    rbx
   140002285:	ret    
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	rex push rbx
   140002292:	sub    rsp,0x20
   140002296:	lea    rax,[rip+0x4383]        # 0x140006620
   14000229d:	mov    rbx,rcx
   1400022a0:	mov    QWORD PTR [rcx],rax
   1400022a3:	test   dl,0x1
   1400022a6:	je     0x1400022ad
   1400022a8:	call   0x1400048e0
   1400022ad:	mov    rax,rbx
   1400022b0:	add    rsp,0x20
   1400022b4:	pop    rbx
   1400022b5:	ret    
   1400022b6:	int3   
   1400022b7:	int3   
   1400022b8:	int3   
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022c5:	push   rdi
   1400022c6:	sub    rsp,0x20
   1400022ca:	cmp    QWORD PTR [rdx+0x18],0x10
   1400022cf:	mov    rbx,rdx
   1400022d2:	mov    rdi,rcx
   1400022d5:	jae    0x1400022e8
   1400022d7:	mov    r8,QWORD PTR [rdx+0x10]
   1400022db:	inc    r8
   1400022de:	je     0x1400022fa
   1400022e0:	call   QWORD PTR [rip+0x3f42]        # 0x140006228
   1400022e6:	jmp    0x1400022fa
   1400022e8:	test   rcx,rcx
   1400022eb:	je     0x1400022f3
   1400022ed:	mov    rax,QWORD PTR [rdx]
   1400022f0:	mov    QWORD PTR [rcx],rax
   1400022f3:	mov    QWORD PTR [rdx],0x0
   1400022fa:	mov    rax,QWORD PTR [rbx+0x10]
   1400022fe:	mov    QWORD PTR [rdi+0x10],rax
   140002302:	mov    rax,QWORD PTR [rbx+0x18]
   140002306:	mov    QWORD PTR [rdi+0x18],rax
   14000230a:	mov    QWORD PTR [rbx+0x18],0xf
   140002312:	mov    QWORD PTR [rbx+0x10],0x0
   14000231a:	mov    BYTE PTR [rbx],0x0
   14000231d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002322:	add    rsp,0x20
   140002326:	pop    rdi
   140002327:	ret    
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    rax,rdx
   140002333:	cmp    r8,0x1
   140002337:	jne    0x140002348
   140002339:	cmp    QWORD PTR [rcx+0x18],0x10
   14000233e:	jb     0x140002343
   140002340:	mov    rcx,QWORD PTR [rcx]
   140002343:	mov    BYTE PTR [rcx+rdx*1],r9b
   140002347:	ret    
   140002348:	cmp    QWORD PTR [rcx+0x18],0x10
   14000234d:	jb     0x140002352
   14000234f:	mov    rcx,QWORD PTR [rcx]
   140002352:	movsx  edx,r9b
   140002356:	add    rcx,rax
   140002359:	jmp    0x140004aa4
   14000235e:	int3   
   14000235f:	int3   
   140002360:	mov    QWORD PTR [rsp+0x18],r8
   140002365:	mov    QWORD PTR [rsp+0x10],rdx
   14000236a:	mov    QWORD PTR [rsp+0x8],rcx
   14000236f:	push   rbx
   140002370:	push   rsi
   140002371:	push   rdi
   140002372:	push   r14
   140002374:	sub    rsp,0x38
   140002378:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002381:	mov    rsi,r8
   140002384:	mov    rbx,rcx
   140002387:	mov    rdi,rdx
   14000238a:	or     rdi,0xf
   14000238e:	cmp    rdi,0xfffffffffffffffe
   140002392:	jbe    0x140002399
   140002394:	mov    rdi,rdx
   140002397:	jmp    0x1400023ce
   140002399:	mov    r8,QWORD PTR [rcx+0x18]
   14000239d:	mov    rcx,r8
   1400023a0:	shr    rcx,1
   1400023a3:	movabs rax,0xaaaaaaaaaaaaaaab
   1400023ad:	mul    rdi
   1400023b0:	shr    rdx,1
   1400023b3:	cmp    rcx,rdx
   1400023b6:	jbe    0x1400023ce
   1400023b8:	mov    rdi,0xfffffffffffffffe
   1400023bf:	mov    rax,rdi
   1400023c2:	sub    rax,rcx
   1400023c5:	cmp    r8,rax
   1400023c8:	ja     0x1400023ce
   1400023ca:	lea    rdi,[rcx+r8*1]
   1400023ce:	lea    rcx,[rdi+0x1]
   1400023d2:	xor    r14d,r14d
   1400023d5:	test   rcx,rcx
   1400023d8:	je     0x1400023f4
   1400023da:	cmp    rcx,0xffffffffffffffff
   1400023de:	ja     0x1400023ed
   1400023e0:	call   0x1400048da
   1400023e5:	mov    r14,rax
   1400023e8:	test   rax,rax
   1400023eb:	jne    0x1400023f4
   1400023ed:	call   QWORD PTR [rip+0x3ce5]        # 0x1400060d8
   1400023f3:	nop
   1400023f4:	jmp    0x14000240a
   1400023f6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400023fb:	mov    rsi,QWORD PTR [rsp+0x70]
   140002400:	mov    rdi,QWORD PTR [rsp+0x68]
   140002405:	mov    r14,QWORD PTR [rsp+0x78]
   14000240a:	test   rsi,rsi
   14000240d:	je     0x14000242e
   14000240f:	cmp    QWORD PTR [rbx+0x18],0x10
   140002414:	jb     0x14000241b
   140002416:	mov    rdx,QWORD PTR [rbx]
   140002419:	jmp    0x14000241e
   14000241b:	mov    rdx,rbx
   14000241e:	test   rsi,rsi
   140002421:	je     0x14000242e
   140002423:	mov    r8,rsi
   140002426:	mov    rcx,r14
   140002429:	call   0x140004a9e
   14000242e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002433:	jb     0x14000243d
   140002435:	mov    rcx,QWORD PTR [rbx]
   140002438:	call   0x1400048e0
   14000243d:	mov    BYTE PTR [rbx],0x0
   140002440:	mov    QWORD PTR [rbx],r14
   140002443:	mov    QWORD PTR [rbx+0x18],rdi
   140002447:	mov    QWORD PTR [rbx+0x10],rsi
   14000244b:	cmp    rdi,0x10
   14000244f:	jb     0x140002454
   140002451:	mov    rbx,r14
   140002454:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002458:	add    rsp,0x38
   14000245c:	pop    r14
   14000245e:	pop    rdi
   14000245f:	pop    rsi
   140002460:	pop    rbx
   140002461:	ret    
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	cmp    QWORD PTR [rcx+0x18],0x10
   140002475:	mov    QWORD PTR [rcx+0x10],rdx
   140002479:	jb     0x140002483
   14000247b:	mov    rax,QWORD PTR [rcx]
   14000247e:	mov    BYTE PTR [rax+rdx*1],0x0
   140002482:	ret    
   140002483:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002487:	ret    
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    rax,rdx
   140002493:	ret    
   140002494:	int3   
   140002495:	int3   
   140002496:	int3   
   140002497:	int3   
   140002498:	int3   
   140002499:	int3   
   14000249a:	int3   
   14000249b:	int3   
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024a5:	push   rdi
   1400024a6:	sub    rsp,0x20
   1400024aa:	mov    rbx,rdx
   1400024ad:	mov    rdx,QWORD PTR [rcx]
   1400024b0:	xor    edi,edi
   1400024b2:	cmp    rbx,QWORD PTR [rdx+0x18]
   1400024b6:	jae    0x1400024c7
   1400024b8:	mov    rax,QWORD PTR [rdx+0x10]
   1400024bc:	mov    rax,QWORD PTR [rax+rbx*8]
   1400024c0:	test   rax,rax
   1400024c3:	jne    0x1400024e7
   1400024c5:	jmp    0x1400024ca
   1400024c7:	mov    rax,rdi
   1400024ca:	cmp    BYTE PTR [rdx+0x24],dil
   1400024ce:	je     0x1400024e7
   1400024d0:	call   QWORD PTR [rip+0x3c22]        # 0x1400060f8
   1400024d6:	cmp    rbx,QWORD PTR [rax+0x18]
   1400024da:	jae    0x1400024e4
   1400024dc:	mov    rax,QWORD PTR [rax+0x10]
   1400024e0:	mov    rdi,QWORD PTR [rax+rbx*8]
   1400024e4:	mov    rax,rdi
   1400024e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024ec:	add    rsp,0x20
   1400024f0:	pop    rdi
   1400024f1:	ret    
   1400024f2:	int3   
   1400024f3:	int3   
   1400024f4:	int3   
   1400024f5:	int3   
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	int3   
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	xor    eax,eax
   140002502:	test   dl,0x1
   140002505:	mov    ecx,0x4
   14000250a:	cmove  eax,ecx
   14000250d:	test   dl,0x2
   140002510:	jne    0x140002515
   140002512:	or     eax,0x2
   140002515:	test   dl,0x8
   140002518:	je     0x14000251d
   14000251a:	or     eax,0x8
   14000251d:	test   cl,dl
   14000251f:	je     0x140002524
   140002521:	or     eax,0x10
   140002524:	ret    
   140002525:	int3   
   140002526:	int3   
   140002527:	int3   
   140002528:	int3   
   140002529:	int3   
   14000252a:	int3   
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	mov    QWORD PTR [rsp+0x20],rbx
   140002535:	push   rdi
   140002536:	sub    rsp,0x20
   14000253a:	mov    rdi,rdx
   14000253d:	mov    rbx,rcx
   140002540:	cmp    rdx,0xfffffffffffffffe
   140002544:	jbe    0x140002554
   140002546:	lea    rcx,[rip+0x42a3]        # 0x1400067f0
   14000254d:	call   QWORD PTR [rip+0x3b8d]        # 0x1400060e0
   140002553:	int3   
   140002554:	mov    rax,QWORD PTR [rcx+0x18]
   140002558:	mov    QWORD PTR [rsp+0x30],rbp
   14000255d:	xor    ebp,ebp
   14000255f:	cmp    rax,rdx
   140002562:	jae    0x14000256f
   140002564:	mov    r8,QWORD PTR [rcx+0x10]
   140002568:	call   0x140002360
   14000256d:	jmp    0x1400025e1
   14000256f:	test   r8b,r8b
   140002572:	je     0x1400025cc
   140002574:	cmp    rdx,0x10
   140002578:	jae    0x1400025cc
   14000257a:	mov    QWORD PTR [rsp+0x38],rsi
   14000257f:	mov    rsi,QWORD PTR [rcx+0x10]
   140002583:	cmp    rdx,rsi
   140002586:	cmovb  rsi,rdx
   14000258a:	cmp    rax,0x10
   14000258e:	jb     0x1400025b5
   140002590:	mov    QWORD PTR [rsp+0x40],r14
   140002595:	mov    r14,QWORD PTR [rcx]
   140002598:	test   rsi,rsi
   14000259b:	je     0x1400025a8
   14000259d:	mov    r8,rsi
   1400025a0:	mov    rdx,r14
   1400025a3:	call   0x140004a9e
   1400025a8:	mov    rcx,r14
   1400025ab:	call   0x1400048e0
   1400025b0:	mov    r14,QWORD PTR [rsp+0x40]
   1400025b5:	mov    QWORD PTR [rbx+0x10],rsi
   1400025b9:	mov    QWORD PTR [rbx+0x18],0xf
   1400025c1:	mov    BYTE PTR [rsi+rbx*1],bpl
   1400025c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400025ca:	jmp    0x1400025e1
   1400025cc:	test   rdx,rdx
   1400025cf:	jne    0x1400025e1
   1400025d1:	mov    QWORD PTR [rcx+0x10],rbp
   1400025d5:	cmp    rax,0x10
   1400025d9:	jb     0x1400025de
   1400025db:	mov    rbx,QWORD PTR [rcx]
   1400025de:	mov    BYTE PTR [rbx],bpl
   1400025e1:	mov    rbp,QWORD PTR [rsp+0x30]
   1400025e6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400025eb:	test   rdi,rdi
   1400025ee:	setne  al
   1400025f1:	add    rsp,0x20
   1400025f5:	pop    rdi
   1400025f6:	ret    
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    QWORD PTR [rsp+0x10],rbx
   140002605:	mov    QWORD PTR [rsp+0x18],rbp
   14000260a:	push   rsi
   14000260b:	sub    rsp,0x20
   14000260f:	mov    rsi,r8
   140002612:	mov    rbp,rdx
   140002615:	mov    rbx,rcx
   140002618:	mov    QWORD PTR [rcx+0x68],0x0
   140002620:	mov    DWORD PTR [rcx+0x70],r9d
   140002624:	test   r8,r8
   140002627:	je     0x1400026e3
   14000262d:	and    r9d,0x6
   140002631:	cmp    r9b,0x6
   140002635:	je     0x1400026e3
   14000263b:	mov    QWORD PTR [rsp+0x30],rdi
   140002640:	cmp    r8,0xffffffffffffffff
   140002644:	ja     0x1400026f3
   14000264a:	mov    rcx,r8
   14000264d:	call   0x1400048da
   140002652:	mov    rdi,rax
   140002655:	test   rax,rax
   140002658:	je     0x1400026f3
   14000265e:	mov    r8,rsi
   140002661:	mov    rdx,rbp
   140002664:	mov    rcx,rax
   140002667:	call   0x140004a9e
   14000266c:	test   BYTE PTR [rbx+0x70],0x4
   140002670:	lea    r8,[rdi+rsi*1]
   140002674:	mov    QWORD PTR [rbx+0x68],r8
   140002678:	jne    0x14000268e
   14000267a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000267e:	mov    QWORD PTR [rcx],rdi
   140002681:	mov    rax,QWORD PTR [rbx+0x38]
   140002685:	mov    QWORD PTR [rax],rdi
   140002688:	mov    rax,QWORD PTR [rbx+0x50]
   14000268c:	mov    DWORD PTR [rax],esi
   14000268e:	mov    eax,DWORD PTR [rbx+0x70]
   140002691:	test   al,0x2
   140002693:	jne    0x1400026da
   140002695:	test   al,0x18
   140002697:	mov    rax,QWORD PTR [rbx+0x20]
   14000269b:	mov    rdx,rdi
   14000269e:	mov    QWORD PTR [rax],rdi
   1400026a1:	mov    rax,QWORD PTR [rbx+0x40]
   1400026a5:	cmovne rdx,r8
   1400026a9:	mov    QWORD PTR [rax],rdx
   1400026ac:	mov    rax,QWORD PTR [rbx+0x58]
   1400026b0:	mov    ecx,edi
   1400026b2:	sub    ecx,edx
   1400026b4:	add    ecx,esi
   1400026b6:	mov    DWORD PTR [rax],ecx
   1400026b8:	mov    rax,QWORD PTR [rbx+0x38]
   1400026bc:	cmp    QWORD PTR [rax],0x0
   1400026c0:	jne    0x1400026da
   1400026c2:	mov    rax,QWORD PTR [rbx+0x18]
   1400026c6:	mov    QWORD PTR [rax],rdi
   1400026c9:	mov    rax,QWORD PTR [rbx+0x38]
   1400026cd:	mov    QWORD PTR [rax],0x0
   1400026d4:	mov    rax,QWORD PTR [rbx+0x50]
   1400026d8:	mov    DWORD PTR [rax],edi
   1400026da:	or     DWORD PTR [rbx+0x70],0x1
   1400026de:	mov    rdi,QWORD PTR [rsp+0x30]
   1400026e3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400026e8:	mov    rbp,QWORD PTR [rsp+0x40]
   1400026ed:	add    rsp,0x20
   1400026f1:	pop    rsi
   1400026f2:	ret    
   1400026f3:	call   QWORD PTR [rip+0x39df]        # 0x1400060d8
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	test   rdx,rdx
   140002703:	je     0x14000273a
   140002705:	mov    rax,QWORD PTR [rcx+0x18]
   140002709:	cmp    rax,0x10
   14000270d:	jb     0x140002714
   14000270f:	mov    r8,QWORD PTR [rcx]
   140002712:	jmp    0x140002717
   140002714:	mov    r8,rcx
   140002717:	cmp    rdx,r8
   14000271a:	jb     0x14000273a
   14000271c:	cmp    rax,0x10
   140002720:	jb     0x140002727
   140002722:	mov    r8,QWORD PTR [rcx]
   140002725:	jmp    0x14000272a
   140002727:	mov    r8,rcx
   14000272a:	mov    rax,QWORD PTR [rcx+0x10]
   14000272e:	lea    rcx,[r8+rax*1]
   140002732:	cmp    rcx,rdx
   140002735:	jbe    0x14000273a
   140002737:	mov    al,0x1
   140002739:	ret    
   14000273a:	xor    al,al
   14000273c:	ret    
   14000273d:	int3   
   14000273e:	int3   
   14000273f:	int3   
   140002740:	cmp    QWORD PTR [rcx+0x18],0x10
   140002745:	jb     0x14000274b
   140002747:	mov    rax,QWORD PTR [rcx]
   14000274a:	ret    
   14000274b:	mov    rax,rcx
   14000274e:	ret    
   14000274f:	int3   
   140002750:	cmp    QWORD PTR [rcx+0x18],0x10
   140002755:	jb     0x14000275b
   140002757:	mov    rax,QWORD PTR [rcx]
   14000275a:	ret    
   14000275b:	mov    rax,rcx
   14000275e:	ret    
   14000275f:	int3   
   140002760:	mov    QWORD PTR [rsp+0x10],rbx
   140002765:	push   rdi
   140002766:	sub    rsp,0x20
   14000276a:	mov    rdi,r8
   14000276d:	mov    rbx,rcx
   140002770:	test   dl,dl
   140002772:	je     0x14000279d
   140002774:	cmp    QWORD PTR [rcx+0x18],0x10
   140002779:	jb     0x14000279d
   14000277b:	mov    QWORD PTR [rsp+0x30],rsi
   140002780:	mov    rsi,QWORD PTR [rcx]
   140002783:	test   r8,r8
   140002786:	je     0x140002790
   140002788:	mov    rdx,rsi
   14000278b:	call   0x140004a9e
   140002790:	mov    rcx,rsi
   140002793:	call   0x1400048e0
   140002798:	mov    rsi,QWORD PTR [rsp+0x30]
   14000279d:	mov    QWORD PTR [rbx+0x18],0xf
   1400027a5:	mov    QWORD PTR [rbx+0x10],rdi
   1400027a9:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400027ad:	mov    rbx,QWORD PTR [rsp+0x38]
   1400027b2:	add    rsp,0x20
   1400027b6:	pop    rdi
   1400027b7:	ret    
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	rex push rbx
   1400027c2:	sub    rsp,0x20
   1400027c6:	test   BYTE PTR [rcx+0x70],0x1
   1400027ca:	mov    rbx,rcx
   1400027cd:	je     0x1400027db
   1400027cf:	mov    rcx,QWORD PTR [rcx+0x18]
   1400027d3:	mov    rcx,QWORD PTR [rcx]
   1400027d6:	call   0x1400048e0
   1400027db:	mov    rax,QWORD PTR [rbx+0x18]
   1400027df:	xor    ecx,ecx
   1400027e1:	mov    QWORD PTR [rax],rcx
   1400027e4:	mov    rax,QWORD PTR [rbx+0x38]
   1400027e8:	mov    QWORD PTR [rax],rcx
   1400027eb:	mov    rax,QWORD PTR [rbx+0x50]
   1400027ef:	mov    DWORD PTR [rax],ecx
   1400027f1:	mov    rax,QWORD PTR [rbx+0x20]
   1400027f5:	mov    QWORD PTR [rax],rcx
   1400027f8:	mov    rax,QWORD PTR [rbx+0x40]
   1400027fc:	mov    QWORD PTR [rax],rcx
   1400027ff:	mov    rax,QWORD PTR [rbx+0x58]
   140002803:	mov    DWORD PTR [rax],ecx
   140002805:	and    DWORD PTR [rbx+0x70],0xfffffffe
   140002809:	mov    QWORD PTR [rbx+0x68],rcx
   14000280d:	add    rsp,0x20
   140002811:	pop    rbx
   140002812:	ret    
   140002813:	int3   
   140002814:	int3   
   140002815:	int3   
   140002816:	int3   
   140002817:	int3   
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	sub    rsp,0x28
   140002824:	lea    rcx,[rip+0x3fc5]        # 0x1400067f0
   14000282b:	call   QWORD PTR [rip+0x38af]        # 0x1400060e0
   140002831:	int3   
   140002832:	int3   
   140002833:	int3   
   140002834:	int3   
   140002835:	int3   
   140002836:	int3   
   140002837:	int3   
   140002838:	int3   
   140002839:	int3   
   14000283a:	int3   
   14000283b:	int3   
   14000283c:	int3   
   14000283d:	int3   
   14000283e:	int3   
   14000283f:	int3   
   140002840:	sub    rsp,0x28
   140002844:	lea    rcx,[rip+0x3fb5]        # 0x140006800
   14000284b:	call   QWORD PTR [rip+0x3897]        # 0x1400060e8
   140002851:	int3   
   140002852:	int3   
   140002853:	int3   
   140002854:	int3   
   140002855:	int3   
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	sub    rsp,0x28
   140002864:	xor    eax,eax
   140002866:	test   rdx,rdx
   140002869:	je     0x140002885
   14000286b:	cmp    rdx,0xffffffffffffffff
   14000286f:	ja     0x14000287e
   140002871:	mov    rcx,rdx
   140002874:	call   0x1400048da
   140002879:	test   rax,rax
   14000287c:	jne    0x140002885
   14000287e:	call   QWORD PTR [rip+0x3854]        # 0x1400060d8
   140002884:	int3   
   140002885:	add    rsp,0x28
   140002889:	ret    
   14000288a:	int3   
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	sub    rsp,0x28
   140002894:	xor    eax,eax
   140002896:	test   rdx,rdx
   140002899:	je     0x1400028b5
   14000289b:	cmp    rdx,0xffffffffffffffff
   14000289f:	ja     0x1400028ae
   1400028a1:	mov    rcx,rdx
   1400028a4:	call   0x1400048da
   1400028a9:	test   rax,rax
   1400028ac:	jne    0x1400028b5
   1400028ae:	call   QWORD PTR [rip+0x3824]        # 0x1400060d8
   1400028b4:	int3   
   1400028b5:	add    rsp,0x28
   1400028b9:	ret    
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400028c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400028ca:	push   rsi
   1400028cb:	sub    rsp,0x20
   1400028cf:	or     rax,0xffffffffffffffff
   1400028d3:	movzx  ebp,r8b
   1400028d7:	mov    r8,QWORD PTR [rcx+0x10]
   1400028db:	sub    rax,r8
   1400028de:	mov    rsi,rdx
   1400028e1:	mov    rbx,rcx
   1400028e4:	cmp    rax,rdx
   1400028e7:	ja     0x1400028f7
   1400028e9:	lea    rcx,[rip+0x3f00]        # 0x1400067f0
   1400028f0:	call   QWORD PTR [rip+0x37ea]        # 0x1400060e0
   1400028f6:	int3   
   1400028f7:	mov    QWORD PTR [rsp+0x30],rdi
   1400028fc:	test   rdx,rdx
   1400028ff:	je     0x1400029aa
   140002905:	lea    rdi,[r8+rdx*1]
   140002909:	cmp    rdi,0xfffffffffffffffe
   14000290d:	jbe    0x14000291d
   14000290f:	lea    rcx,[rip+0x3eda]        # 0x1400067f0
   140002916:	call   QWORD PTR [rip+0x37c4]        # 0x1400060e0
   14000291c:	int3   
   14000291d:	mov    rax,QWORD PTR [rcx+0x18]
   140002921:	cmp    rax,rdi
   140002924:	jae    0x14000294d
   140002926:	mov    rdx,rdi
   140002929:	call   0x140002360
   14000292e:	test   rdi,rdi
   140002931:	je     0x1400029aa
   140002933:	mov    rcx,QWORD PTR [rbx+0x10]
   140002937:	cmp    rsi,0x1
   14000293b:	jne    0x140002975
   14000293d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002942:	jb     0x14000296c
   140002944:	mov    rax,QWORD PTR [rbx]
   140002947:	mov    BYTE PTR [rax+rcx*1],bpl
   14000294b:	jmp    0x140002993
   14000294d:	test   rdi,rdi
   140002950:	jne    0x140002933
   140002952:	mov    QWORD PTR [rcx+0x10],rdi
   140002956:	cmp    rax,0x10
   14000295a:	jb     0x140002964
   14000295c:	mov    rax,QWORD PTR [rcx]
   14000295f:	mov    BYTE PTR [rax],dil
   140002962:	jmp    0x1400029aa
   140002964:	mov    rax,rcx
   140002967:	mov    BYTE PTR [rcx],0x0
   14000296a:	jmp    0x1400029aa
   14000296c:	mov    rax,rbx
   14000296f:	mov    BYTE PTR [rbx+rcx*1],bpl
   140002973:	jmp    0x140002993
   140002975:	cmp    QWORD PTR [rbx+0x18],0x10
   14000297a:	jb     0x140002981
   14000297c:	mov    rax,QWORD PTR [rbx]
   14000297f:	jmp    0x140002984
   140002981:	mov    rax,rbx
   140002984:	movsx  edx,bpl
   140002988:	add    rcx,rax
   14000298b:	mov    r8,rsi
   14000298e:	call   0x140004aa4
   140002993:	cmp    QWORD PTR [rbx+0x18],0x10
   140002998:	mov    QWORD PTR [rbx+0x10],rdi
   14000299c:	jb     0x1400029a3
   14000299e:	mov    rax,QWORD PTR [rbx]
   1400029a1:	jmp    0x1400029a6
   1400029a3:	mov    rax,rbx
   1400029a6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400029aa:	mov    rdi,QWORD PTR [rsp+0x30]
   1400029af:	mov    rbp,QWORD PTR [rsp+0x40]
   1400029b4:	mov    rax,rbx
   1400029b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400029bc:	add    rsp,0x20
   1400029c0:	pop    rsi
   1400029c1:	ret    
   1400029c2:	int3   
   1400029c3:	int3   
   1400029c4:	int3   
   1400029c5:	int3   
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400029da:	mov    QWORD PTR [rsp+0x18],rsi
   1400029df:	push   rdi
   1400029e0:	sub    rsp,0x20
   1400029e4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400029e8:	mov    rbp,r8
   1400029eb:	mov    rsi,rdx
   1400029ee:	mov    rbx,rcx
   1400029f1:	cmp    rdi,r8
   1400029f4:	jae    0x140002a04
   1400029f6:	lea    rcx,[rip+0x3e03]        # 0x140006800
   1400029fd:	call   QWORD PTR [rip+0x36e5]        # 0x1400060e8
   140002a03:	int3   
   140002a04:	sub    rdi,r8
   140002a07:	cmp    r9,rdi
   140002a0a:	cmovb  rdi,r9
   140002a0e:	cmp    rcx,rdx
   140002a11:	jne    0x140002a4c
   140002a13:	lea    rax,[rdi+r8*1]
   140002a17:	cmp    QWORD PTR [rcx+0x10],rax
   140002a1b:	jae    0x140002a2b
   140002a1d:	lea    rcx,[rip+0x3ddc]        # 0x140006800
   140002a24:	call   QWORD PTR [rip+0x36be]        # 0x1400060e8
   140002a2a:	int3   
   140002a2b:	cmp    QWORD PTR [rcx+0x18],0x10
   140002a30:	mov    QWORD PTR [rcx+0x10],rax
   140002a34:	jb     0x140002a39
   140002a36:	mov    rcx,QWORD PTR [rcx]
   140002a39:	mov    BYTE PTR [rcx+rax*1],0x0
   140002a3d:	xor    edx,edx
   140002a3f:	mov    rcx,rbx
   140002a42:	call   0x140002de0
   140002a47:	jmp    0x140002ada
   140002a4c:	cmp    rdi,0xfffffffffffffffe
   140002a50:	jbe    0x140002a60
   140002a52:	lea    rcx,[rip+0x3d97]        # 0x1400067f0
   140002a59:	call   QWORD PTR [rip+0x3681]        # 0x1400060e0
   140002a5f:	int3   
   140002a60:	mov    rax,QWORD PTR [rcx+0x18]
   140002a64:	cmp    rax,rdi
   140002a67:	jae    0x140002a90
   140002a69:	mov    r8,QWORD PTR [rcx+0x10]
   140002a6d:	mov    rdx,rdi
   140002a70:	call   0x140002360
   140002a75:	test   rdi,rdi
   140002a78:	je     0x140002ada
   140002a7a:	cmp    QWORD PTR [rsi+0x18],0x10
   140002a7f:	jb     0x140002a84
   140002a81:	mov    rsi,QWORD PTR [rsi]
   140002a84:	cmp    QWORD PTR [rbx+0x18],0x10
   140002a89:	jb     0x140002aaf
   140002a8b:	mov    rcx,QWORD PTR [rbx]
   140002a8e:	jmp    0x140002ab2
   140002a90:	test   rdi,rdi
   140002a93:	jne    0x140002a7a
   140002a95:	mov    QWORD PTR [rcx+0x10],rdi
   140002a99:	cmp    rax,0x10
   140002a9d:	jb     0x140002aa7
   140002a9f:	mov    rax,QWORD PTR [rcx]
   140002aa2:	mov    BYTE PTR [rax],dil
   140002aa5:	jmp    0x140002ada
   140002aa7:	mov    rax,rcx
   140002aaa:	mov    BYTE PTR [rcx],0x0
   140002aad:	jmp    0x140002ada
   140002aaf:	mov    rcx,rbx
   140002ab2:	test   rdi,rdi
   140002ab5:	je     0x140002ac3
   140002ab7:	lea    rdx,[rsi+rbp*1]
   140002abb:	mov    r8,rdi
   140002abe:	call   0x140004a9e
   140002ac3:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ac8:	mov    QWORD PTR [rbx+0x10],rdi
   140002acc:	jb     0x140002ad3
   140002ace:	mov    rax,QWORD PTR [rbx]
   140002ad1:	jmp    0x140002ad6
   140002ad3:	mov    rax,rbx
   140002ad6:	mov    BYTE PTR [rax+rdi*1],0x0
   140002ada:	mov    rbp,QWORD PTR [rsp+0x38]
   140002adf:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ae4:	mov    rax,rbx
   140002ae7:	mov    rbx,QWORD PTR [rsp+0x30]
   140002aec:	add    rsp,0x20
   140002af0:	pop    rdi
   140002af1:	ret    
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	cmp    BYTE PTR [rdx],0x0
   140002b03:	jne    0x140002b0d
   140002b05:	xor    r8d,r8d
   140002b08:	jmp    0x140002b20
   140002b0d:	or     r8,0xffffffffffffffff
   140002b11:	inc    r8
   140002b14:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002b19:	jne    0x140002b11
   140002b1b:	jmp    0x140002b20
   140002b20:	mov    QWORD PTR [rsp+0x8],rbx
   140002b25:	mov    QWORD PTR [rsp+0x10],rsi
   140002b2a:	push   rdi
   140002b2b:	sub    rsp,0x20
   140002b2f:	mov    rdi,r8
   140002b32:	mov    rsi,rdx
   140002b35:	mov    rbx,rcx
   140002b38:	test   rdx,rdx
   140002b3b:	je     0x140002b97
   140002b3d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002b41:	cmp    rdx,0x10
   140002b45:	jb     0x140002b4c
   140002b47:	mov    rax,QWORD PTR [rcx]
   140002b4a:	jmp    0x140002b4f
   140002b4c:	mov    rax,rcx
   140002b4f:	cmp    rsi,rax
   140002b52:	jb     0x140002b97
   140002b54:	cmp    rdx,0x10
   140002b58:	jb     0x140002b5d
   140002b5a:	mov    rcx,QWORD PTR [rcx]
   140002b5d:	add    rcx,QWORD PTR [rbx+0x10]
   140002b61:	cmp    rcx,rsi
   140002b64:	jbe    0x140002b97
   140002b66:	cmp    rdx,0x10
   140002b6a:	jb     0x140002b71
   140002b6c:	mov    rax,QWORD PTR [rbx]
   140002b6f:	jmp    0x140002b74
   140002b71:	mov    rax,rbx
   140002b74:	sub    rsi,rax
   140002b77:	mov    r9,r8
   140002b7a:	mov    rdx,rbx
   140002b7d:	mov    r8,rsi
   140002b80:	mov    rcx,rbx
   140002b83:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b88:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b8d:	add    rsp,0x20
   140002b91:	pop    rdi
   140002b92:	jmp    0x1400029d0
   140002b97:	cmp    r8,0xfffffffffffffffe
   140002b9b:	jbe    0x140002bab
   140002b9d:	lea    rcx,[rip+0x3c4c]        # 0x1400067f0
   140002ba4:	call   QWORD PTR [rip+0x3536]        # 0x1400060e0
   140002baa:	int3   
   140002bab:	mov    rax,QWORD PTR [rbx+0x18]
   140002baf:	cmp    rax,r8
   140002bb2:	jae    0x140002bd4
   140002bb4:	mov    r8,QWORD PTR [rbx+0x10]
   140002bb8:	mov    rdx,rdi
   140002bbb:	mov    rcx,rbx
   140002bbe:	call   0x140002360
   140002bc3:	test   rdi,rdi
   140002bc6:	je     0x140002c3c
   140002bc8:	cmp    QWORD PTR [rbx+0x18],0x10
   140002bcd:	jb     0x140002c12
   140002bcf:	mov    rcx,QWORD PTR [rbx]
   140002bd2:	jmp    0x140002c15
   140002bd4:	test   r8,r8
   140002bd7:	jne    0x140002bc3
   140002bd9:	mov    QWORD PTR [rbx+0x10],r8
   140002bdd:	cmp    rax,0x10
   140002be1:	jb     0x140002bfc
   140002be3:	mov    rax,QWORD PTR [rbx]
   140002be6:	mov    BYTE PTR [rax],r8b
   140002be9:	mov    rax,rbx
   140002bec:	mov    rbx,QWORD PTR [rsp+0x30]
   140002bf1:	mov    rsi,QWORD PTR [rsp+0x38]
   140002bf6:	add    rsp,0x20
   140002bfa:	pop    rdi
   140002bfb:	ret    
   140002bfc:	mov    rax,rbx
   140002bff:	mov    BYTE PTR [rbx],0x0
   140002c02:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c07:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c0c:	add    rsp,0x20
   140002c10:	pop    rdi
   140002c11:	ret    
   140002c12:	mov    rcx,rbx
   140002c15:	test   rdi,rdi
   140002c18:	je     0x140002c25
   140002c1a:	mov    r8,rdi
   140002c1d:	mov    rdx,rsi
   140002c20:	call   0x140004a9e
   140002c25:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c2a:	mov    QWORD PTR [rbx+0x10],rdi
   140002c2e:	jb     0x140002c35
   140002c30:	mov    rax,QWORD PTR [rbx]
   140002c33:	jmp    0x140002c38
   140002c35:	mov    rax,rbx
   140002c38:	mov    BYTE PTR [rax+rdi*1],0x0
   140002c3c:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c41:	mov    rax,rbx
   140002c44:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c49:	add    rsp,0x20
   140002c4d:	pop    rdi
   140002c4e:	ret    
   140002c4f:	int3   
   140002c50:	rex push rbx
   140002c52:	sub    rsp,0x20
   140002c56:	mov    rax,rdx
   140002c59:	movsx  edx,r8b
   140002c5d:	mov    rbx,rcx
   140002c60:	mov    r8,rax
   140002c63:	call   0x140004aa4
   140002c68:	mov    rax,rbx
   140002c6b:	add    rsp,0x20
   140002c6f:	pop    rbx
   140002c70:	ret    
   140002c71:	int3   
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	int3   
   140002c75:	int3   
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	movzx  eax,BYTE PTR [rdx]
   140002c83:	mov    BYTE PTR [rcx],al
   140002c85:	ret    
   140002c86:	int3   
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	cmp    QWORD PTR [rcx+0x18],0x10
   140002c95:	jb     0x140002c9b
   140002c97:	mov    rax,QWORD PTR [rcx]
   140002c9a:	ret    
   140002c9b:	mov    rax,rcx
   140002c9e:	ret    
   140002c9f:	int3   
   140002ca0:	mov    rax,QWORD PTR [rcx+0x8]
   140002ca4:	ret    
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cb4:	ret    
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	rex push rbx
   140002cc2:	sub    rsp,0x20
   140002cc6:	mov    rbx,rcx
   140002cc9:	test   r8,r8
   140002ccc:	je     0x140002cd3
   140002cce:	call   0x140004a9e
   140002cd3:	mov    rax,rbx
   140002cd6:	add    rsp,0x20
   140002cda:	pop    rbx
   140002cdb:	ret    
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	mov    rcx,rdx
   140002ce3:	jmp    0x1400048e0
   140002ce8:	int3   
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	int3   
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	mov    rcx,rdx
   140002cf3:	jmp    0x1400048e0
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	mov    QWORD PTR [rsp+0x8],rbx
   140002d05:	push   rdi
   140002d06:	sub    rsp,0x20
   140002d0a:	mov    ecx,r8d
   140002d0d:	mov    edi,r8d
   140002d10:	mov    rbx,rdx
   140002d13:	call   QWORD PTR [rip+0x33ef]        # 0x140006108
   140002d19:	mov    DWORD PTR [rbx],edi
   140002d1b:	test   rax,rax
   140002d1e:	lea    rax,[rip+0x72e3]        # 0x14000a008
   140002d25:	jne    0x140002d2e
   140002d27:	lea    rax,[rip+0x72ea]        # 0x14000a018
   140002d2e:	mov    QWORD PTR [rbx+0x8],rax
   140002d32:	mov    rax,rbx
   140002d35:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d3a:	add    rsp,0x20
   140002d3e:	pop    rdi
   140002d3f:	ret    
   140002d40:	mov    DWORD PTR [rdx],r8d
   140002d43:	mov    QWORD PTR [rdx+0x8],rcx
   140002d47:	mov    rax,rdx
   140002d4a:	ret    
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	or     eax,0xffffffff
   140002d53:	ret    
   140002d54:	int3   
   140002d55:	int3   
   140002d56:	int3   
   140002d57:	int3   
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	movzx  edx,BYTE PTR [rdx]
   140002d63:	cmp    BYTE PTR [rcx],dl
   140002d65:	sete   al
   140002d68:	ret    
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	mov    edx,DWORD PTR [rdx]
   140002d72:	cmp    DWORD PTR [rcx],edx
   140002d74:	sete   al
   140002d77:	ret    
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	cmp    rcx,QWORD PTR [rdx+0x8]
   140002d84:	jne    0x140002d8e
   140002d86:	cmp    DWORD PTR [rdx],r8d
   140002d89:	jne    0x140002d8e
   140002d8b:	mov    al,0x1
   140002d8d:	ret    
   140002d8e:	xor    al,al
   140002d90:	ret    
   140002d91:	int3   
   140002d92:	int3   
   140002d93:	int3   
   140002d94:	int3   
   140002d95:	int3   
   140002d96:	int3   
   140002d97:	int3   
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	rex push rbx
   140002da2:	sub    rsp,0x30
   140002da6:	mov    rax,QWORD PTR [rcx]
   140002da9:	mov    rbx,r8
   140002dac:	mov    r8d,edx
   140002daf:	lea    rdx,[rsp+0x20]
   140002db4:	call   QWORD PTR [rax+0x18]
   140002db7:	mov    rcx,QWORD PTR [rbx+0x8]
   140002dbb:	cmp    QWORD PTR [rax+0x8],rcx
   140002dbf:	jne    0x140002dcf
   140002dc1:	mov    ecx,DWORD PTR [rbx]
   140002dc3:	cmp    DWORD PTR [rax],ecx
   140002dc5:	jne    0x140002dcf
   140002dc7:	mov    al,0x1
   140002dc9:	add    rsp,0x30
   140002dcd:	pop    rbx
   140002dce:	ret    
   140002dcf:	xor    al,al
   140002dd1:	add    rsp,0x30
   140002dd5:	pop    rbx
   140002dd6:	ret    
   140002dd7:	int3   
   140002dd8:	int3   
   140002dd9:	int3   
   140002dda:	int3   
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	mov    QWORD PTR [rsp+0x8],rbx
   140002de5:	push   rdi
   140002de6:	sub    rsp,0x20
   140002dea:	mov    rdi,QWORD PTR [rcx+0x10]
   140002dee:	mov    rbx,rcx
   140002df1:	cmp    rdi,rdx
   140002df4:	jae    0x140002e04
   140002df6:	lea    rcx,[rip+0x3a03]        # 0x140006800
   140002dfd:	call   QWORD PTR [rip+0x32e5]        # 0x1400060e8
   140002e03:	int3   
   140002e04:	mov    rax,rdi
   140002e07:	sub    rax,rdx
   140002e0a:	cmp    rax,r8
   140002e0d:	ja     0x140002e44
   140002e0f:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e14:	mov    QWORD PTR [rcx+0x10],rdx
   140002e18:	jb     0x140002e2f
   140002e1a:	mov    rax,QWORD PTR [rcx]
   140002e1d:	mov    BYTE PTR [rax+rdx*1],0x0
   140002e21:	mov    rax,rbx
   140002e24:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e29:	add    rsp,0x20
   140002e2d:	pop    rdi
   140002e2e:	ret    
   140002e2f:	mov    rax,rcx
   140002e32:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002e36:	mov    rax,rbx
   140002e39:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e3e:	add    rsp,0x20
   140002e42:	pop    rdi
   140002e43:	ret    
   140002e44:	test   r8,r8
   140002e47:	je     0x140002e9b
   140002e49:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e4e:	jb     0x140002e55
   140002e50:	mov    rax,QWORD PTR [rcx]
   140002e53:	jmp    0x140002e58
   140002e55:	mov    rax,rcx
   140002e58:	sub    rdi,r8
   140002e5b:	lea    rcx,[rax+rdx*1]
   140002e5f:	mov    rax,rdi
   140002e62:	sub    rax,rdx
   140002e65:	je     0x140002e74
   140002e67:	lea    rdx,[rcx+r8*1]
   140002e6b:	mov    r8,rax
   140002e6e:	call   QWORD PTR [rip+0x33b4]        # 0x140006228
   140002e74:	cmp    QWORD PTR [rbx+0x18],0x10
   140002e79:	mov    QWORD PTR [rbx+0x10],rdi
   140002e7d:	jb     0x140002e94
   140002e7f:	mov    rax,QWORD PTR [rbx]
   140002e82:	mov    BYTE PTR [rax+rdi*1],0x0
   140002e86:	mov    rax,rbx
   140002e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e8e:	add    rsp,0x20
   140002e92:	pop    rdi
   140002e93:	ret    
   140002e94:	mov    rax,rbx
   140002e97:	mov    BYTE PTR [rbx+rdi*1],0x0
   140002e9b:	mov    rax,rbx
   140002e9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ea3:	add    rsp,0x20
   140002ea7:	pop    rdi
   140002ea8:	ret    
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	sub    rsp,0x28
   140002eb4:	cmp    QWORD PTR [rcx+0x10],rdx
   140002eb8:	jae    0x140002ec8
   140002eba:	lea    rcx,[rip+0x393f]        # 0x140006800
   140002ec1:	call   QWORD PTR [rip+0x3221]        # 0x1400060e8
   140002ec7:	int3   
   140002ec8:	cmp    QWORD PTR [rcx+0x18],0x10
   140002ecd:	mov    QWORD PTR [rcx+0x10],rdx
   140002ed1:	jb     0x140002ee2
   140002ed3:	mov    rax,QWORD PTR [rcx]
   140002ed6:	mov    BYTE PTR [rax+rdx*1],0x0
   140002eda:	mov    rax,rcx
   140002edd:	add    rsp,0x28
   140002ee1:	ret    
   140002ee2:	mov    rax,rcx
   140002ee5:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002ee9:	add    rsp,0x28
   140002eed:	ret    
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	lea    rax,[rip+0x7111]        # 0x14000a008
   140002ef7:	ret    
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    rax,QWORD PTR [rcx+0x10]
   140002f04:	ret    
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	cmp    BYTE PTR [rcx],0x0
   140002f13:	jne    0x140002f18
   140002f15:	xor    eax,eax
   140002f17:	ret    
   140002f18:	or     rax,0xffffffffffffffff
   140002f1c:	nop    DWORD PTR [rax+0x0]
   140002f20:	inc    rax
   140002f23:	cmp    BYTE PTR [rcx+rax*1],0x0
   140002f27:	jne    0x140002f20
   140002f29:	ret    
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	or     rax,0xffffffffffffffff
   140002f34:	ret    
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	or     rax,0xffffffffffffffff
   140002f44:	ret    
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	or     rax,0xffffffffffffffff
   140002f54:	ret    
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    rax,0xfffffffffffffffe
   140002f67:	ret    
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	mov    QWORD PTR [rsp+0x8],rbx
   140002f75:	push   rdi
   140002f76:	sub    rsp,0x30
   140002f7a:	xor    ebx,ebx
   140002f7c:	mov    ecx,r8d
   140002f7f:	mov    rdi,rdx
   140002f82:	mov    DWORD PTR [rsp+0x20],ebx
   140002f86:	call   QWORD PTR [rip+0x317c]        # 0x140006108
   140002f8c:	mov    QWORD PTR [rdi+0x18],0xf
   140002f94:	test   rax,rax
   140002f97:	mov    QWORD PTR [rdi+0x10],rbx
   140002f9b:	lea    rdx,[rip+0x36ee]        # 0x140006690
   140002fa2:	cmovne rdx,rax
   140002fa6:	mov    BYTE PTR [rdi],bl
   140002fa8:	cmp    BYTE PTR [rdx],bl
   140002faa:	je     0x140002fb9
   140002fac:	or     rbx,0xffffffffffffffff
   140002fb0:	inc    rbx
   140002fb3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140002fb7:	jne    0x140002fb0
   140002fb9:	mov    r8,rbx
   140002fbc:	mov    rcx,rdi
   140002fbf:	call   0x140002b20
   140002fc4:	mov    rbx,QWORD PTR [rsp+0x40]
   140002fc9:	mov    rax,rdi
   140002fcc:	add    rsp,0x30
   140002fd0:	pop    rdi
   140002fd1:	ret    
   140002fd2:	int3   
   140002fd3:	int3   
   140002fd4:	int3   
   140002fd5:	int3   
   140002fd6:	int3   
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	rex push rbx
   140002fe2:	sub    rsp,0x30
   140002fe6:	xor    eax,eax
   140002fe8:	mov    rbx,rdx
   140002feb:	mov    DWORD PTR [rsp+0x20],eax
   140002fef:	cmp    r8d,0x1
   140002ff3:	jne    0x14000301f
   140002ff5:	mov    QWORD PTR [rdx+0x18],0xf
   140002ffd:	mov    QWORD PTR [rdx+0x10],rax
   140003001:	mov    BYTE PTR [rdx],al
   140003003:	lea    rdx,[rip+0x36de]        # 0x1400066e8
   14000300a:	lea    r8d,[rax+0x15]
   14000300e:	mov    rcx,rbx
   140003011:	call   0x140002b20
   140003016:	mov    rax,rbx
   140003019:	add    rsp,0x30
   14000301d:	pop    rbx
   14000301e:	ret    
   14000301f:	call   0x140002f70
   140003024:	mov    rax,rbx
   140003027:	add    rsp,0x30
   14000302b:	pop    rbx
   14000302c:	ret    
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    QWORD PTR [rsp+0x8],rbx
   140003035:	push   rdi
   140003036:	sub    rsp,0x30
   14000303a:	xor    ebx,ebx
   14000303c:	mov    ecx,r8d
   14000303f:	mov    rdi,rdx
   140003042:	mov    DWORD PTR [rsp+0x20],ebx
   140003046:	call   QWORD PTR [rip+0x30c4]        # 0x140006110
   14000304c:	mov    QWORD PTR [rdi+0x18],0xf
   140003054:	test   rax,rax
   140003057:	mov    QWORD PTR [rdi+0x10],rbx
   14000305b:	lea    rdx,[rip+0x362e]        # 0x140006690
   140003062:	cmovne rdx,rax
   140003066:	mov    BYTE PTR [rdi],bl
   140003068:	cmp    BYTE PTR [rdx],bl
   14000306a:	je     0x140003079
   14000306c:	or     rbx,0xffffffffffffffff
   140003070:	inc    rbx
   140003073:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140003077:	jne    0x140003070
   140003079:	mov    r8,rbx
   14000307c:	mov    rcx,rdi
   14000307f:	call   0x140002b20
   140003084:	mov    rbx,QWORD PTR [rsp+0x40]
   140003089:	mov    rax,rdi
   14000308c:	add    rsp,0x30
   140003090:	pop    rdi
   140003091:	ret    
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	test   r8,r8
   1400030a3:	jne    0x1400030a9
   1400030a5:	mov    rax,rcx
   1400030a8:	ret    
   1400030a9:	rex.W jmp QWORD PTR [rip+0x3178]        # 0x140006228
   1400030b0:	lea    rax,[rip+0x35d1]        # 0x140006688
   1400030b7:	ret    
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	lea    rax,[rip+0x3611]        # 0x1400066d8
   1400030c7:	ret    
   1400030c8:	int3   
   1400030c9:	int3   
   1400030ca:	int3   
   1400030cb:	int3   
   1400030cc:	int3   
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	lea    rax,[rip+0x3661]        # 0x140006738
   1400030d7:	ret    
   1400030d8:	int3   
   1400030d9:	int3   
   1400030da:	int3   
   1400030db:	int3   
   1400030dc:	int3   
   1400030dd:	int3   
   1400030de:	int3   
   1400030df:	int3   
   1400030e0:	xor    eax,eax
   1400030e2:	cmp    DWORD PTR [rcx],0xffffffff
   1400030e5:	cmovne eax,DWORD PTR [rcx]
   1400030e8:	ret    
   1400030e9:	int3   
   1400030ea:	int3   
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	mov    rax,rsp
   1400030f3:	mov    QWORD PTR [rax+0x8],rcx
   1400030f7:	push   rdi
   1400030f8:	sub    rsp,0x60
   1400030fc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003104:	mov    QWORD PTR [rax+0x10],rbx
   140003108:	mov    QWORD PTR [rax+0x20],rsi
   14000310c:	mov    rbx,rcx
   14000310f:	mov    DWORD PTR [rax-0x20],0x18
   140003116:	mov    DWORD PTR [rax-0x10],0x1
   14000311d:	xor    esi,esi
   14000311f:	mov    QWORD PTR [rax-0x18],rsi
   140003123:	cmp    QWORD PTR [rcx+0x18],0x10
   140003128:	jb     0x14000312d
   14000312a:	mov    rcx,QWORD PTR [rcx]
   14000312d:	lea    r9,[rsp+0x48]
   140003132:	test   r8b,r8b
   140003135:	cmove  r9,rsi
   140003139:	mov    QWORD PTR [rsp+0x30],rsi
   14000313e:	mov    DWORD PTR [rsp+0x28],esi
   140003142:	mov    DWORD PTR [rsp+0x20],0x3
   14000314a:	xor    r8d,r8d
   14000314d:	call   QWORD PTR [rip+0x2f0d]        # 0x140006060
   140003153:	mov    rdi,rax
   140003156:	cmp    rax,0xffffffffffffffff
   14000315a:	jne    0x140003186
   14000315c:	mov    DWORD PTR [rip+0x6e9a],0xd        # 0x14000a000
   140003166:	mov    DWORD PTR [rsp+0x80],0x1
   140003171:	lea    rdx,[rip+0x4bb8]        # 0x140007d30
   140003178:	lea    rcx,[rsp+0x80]
   140003180:	call   0x140004a2a
   140003185:	nop
   140003186:	cmp    QWORD PTR [rbx+0x18],0x10
   14000318b:	jb     0x140003195
   14000318d:	mov    rcx,QWORD PTR [rbx]
   140003190:	call   0x1400048e0
   140003195:	mov    QWORD PTR [rbx+0x18],0xf
   14000319d:	mov    QWORD PTR [rbx+0x10],rsi
   1400031a1:	mov    BYTE PTR [rbx],0x0
   1400031a4:	mov    rax,rdi
   1400031a7:	mov    rbx,QWORD PTR [rsp+0x78]
   1400031ac:	mov    rsi,QWORD PTR [rsp+0x88]
   1400031b4:	add    rsp,0x60
   1400031b8:	pop    rdi
   1400031b9:	ret    
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	rex push rbx
   1400031c2:	push   r14
   1400031c4:	sub    rsp,0x28
   1400031c8:	mov    eax,DWORD PTR [rcx+0x70]
   1400031cb:	mov    r14d,edx
   1400031ce:	mov    rbx,rcx
   1400031d1:	test   al,0x2
   1400031d3:	je     0x1400031e0
   1400031d5:	or     eax,0xffffffff
   1400031d8:	add    rsp,0x28
   1400031dc:	pop    r14
   1400031de:	pop    rbx
   1400031df:	ret    
   1400031e0:	cmp    edx,0xffffffff
   1400031e3:	jne    0x1400031ef
   1400031e5:	xor    eax,eax
   1400031e7:	add    rsp,0x28
   1400031eb:	pop    r14
   1400031ed:	pop    rbx
   1400031ee:	ret    
   1400031ef:	test   al,0x8
   1400031f1:	je     0x14000321e
   1400031f3:	mov    r9,QWORD PTR [rcx+0x40]
   1400031f7:	mov    rdx,QWORD PTR [r9]
   1400031fa:	test   rdx,rdx
   1400031fd:	je     0x14000321e
   1400031ff:	mov    r8,QWORD PTR [rcx+0x68]
   140003203:	cmp    rdx,r8
   140003206:	jae    0x14000321e
   140003208:	mov    rax,QWORD PTR [rcx+0x58]
   14000320c:	movsxd rcx,DWORD PTR [rax]
   14000320f:	mov    QWORD PTR [r9],r8
   140003212:	mov    rax,QWORD PTR [rbx+0x58]
   140003216:	add    rcx,rdx
   140003219:	sub    ecx,r8d
   14000321c:	mov    DWORD PTR [rax],ecx
   14000321e:	mov    rax,QWORD PTR [rbx+0x40]
   140003222:	mov    rdx,QWORD PTR [rax]
   140003225:	test   rdx,rdx
   140003228:	je     0x140003250
   14000322a:	mov    rax,QWORD PTR [rbx+0x58]
   14000322e:	movsxd rcx,DWORD PTR [rax]
   140003231:	add    rcx,rdx
   140003234:	cmp    rdx,rcx
   140003237:	jae    0x140003250
   140003239:	mov    rcx,rbx
   14000323c:	call   QWORD PTR [rip+0x2f16]        # 0x140006158
   140003242:	mov    BYTE PTR [rax],r14b
   140003245:	mov    eax,r14d
   140003248:	add    rsp,0x28
   14000324c:	pop    r14
   14000324e:	pop    rbx
   14000324f:	ret    
   140003250:	mov    QWORD PTR [rsp+0x50],rdi
   140003255:	test   rdx,rdx
   140003258:	jne    0x14000325e
   14000325a:	xor    edi,edi
   14000325c:	jmp    0x14000326f
   14000325e:	mov    rax,QWORD PTR [rbx+0x58]
   140003262:	movsxd rdi,DWORD PTR [rax]
   140003265:	mov    rax,QWORD PTR [rbx+0x18]
   140003269:	sub    rdi,QWORD PTR [rax]
   14000326c:	add    rdi,rdx
   14000326f:	mov    rcx,rdi
   140003272:	shr    rcx,1
   140003275:	cmp    rcx,0x20
   140003279:	jae    0x140003282
   14000327b:	mov    ecx,0x20
   140003280:	jmp    0x140003290
   140003282:	test   rcx,rcx
   140003285:	je     0x1400032a7
   140003287:	nop    WORD PTR [rax+rax*1+0x0]
   140003290:	mov    eax,0x7fffffff
   140003295:	sub    rax,rcx
   140003298:	cmp    rax,rdi
   14000329b:	jae    0x1400032a2
   14000329d:	shr    rcx,1
   1400032a0:	jne    0x140003290
   1400032a2:	test   rcx,rcx
   1400032a5:	jne    0x1400032b7
   1400032a7:	or     eax,0xffffffff
   1400032aa:	mov    rdi,QWORD PTR [rsp+0x50]
   1400032af:	add    rsp,0x28
   1400032b3:	pop    r14
   1400032b5:	pop    rbx
   1400032b6:	ret    
   1400032b7:	mov    QWORD PTR [rsp+0x40],rbp
   1400032bc:	lea    rbp,[rcx+rdi*1]
   1400032c0:	mov    QWORD PTR [rsp+0x48],rsi
   1400032c5:	xor    esi,esi
   1400032c7:	test   rbp,rbp
   1400032ca:	je     0x1400032e9
   1400032cc:	cmp    rbp,0xffffffffffffffff
   1400032d0:	ja     0x1400032e2
   1400032d2:	mov    rcx,rbp
   1400032d5:	call   0x1400048da
   1400032da:	mov    rsi,rax
   1400032dd:	test   rax,rax
   1400032e0:	jne    0x1400032e9
   1400032e2:	call   QWORD PTR [rip+0x2df0]        # 0x1400060d8
   1400032e8:	int3   
   1400032e9:	mov    rax,QWORD PTR [rbx+0x18]
   1400032ed:	mov    QWORD PTR [rsp+0x20],r15
   1400032f2:	mov    r15,QWORD PTR [rax]
   1400032f5:	test   rdi,rdi
   1400032f8:	je     0x14000330d
   1400032fa:	mov    r8,rdi
   1400032fd:	mov    rdx,r15
   140003300:	mov    rcx,rsi
   140003303:	call   0x140004a9e
   140003308:	test   rdi,rdi
   14000330b:	jne    0x14000335a
   14000330d:	mov    rax,QWORD PTR [rbx+0x20]
   140003311:	mov    QWORD PTR [rbx+0x68],rsi
   140003315:	mov    QWORD PTR [rax],rsi
   140003318:	mov    rax,QWORD PTR [rbx+0x40]
   14000331c:	mov    QWORD PTR [rax],rsi
   14000331f:	mov    rax,QWORD PTR [rbx+0x58]
   140003323:	mov    DWORD PTR [rax],ebp
   140003325:	mov    rax,QWORD PTR [rbx+0x18]
   140003329:	test   BYTE PTR [rbx+0x70],0x4
   14000332d:	mov    QWORD PTR [rax],rsi
   140003330:	mov    rax,QWORD PTR [rbx+0x38]
   140003334:	je     0x140003348
   140003336:	mov    QWORD PTR [rax],0x0
   14000333d:	mov    rax,QWORD PTR [rbx+0x50]
   140003341:	mov    DWORD PTR [rax],esi
   140003343:	jmp    0x1400033e0
   140003348:	mov    QWORD PTR [rax],rsi
   14000334b:	mov    rax,QWORD PTR [rbx+0x50]
   14000334f:	mov    DWORD PTR [rax],0x1
   140003355:	jmp    0x1400033e0
   14000335a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000335e:	mov    rax,rsi
   140003361:	sub    rax,r15
   140003364:	add    QWORD PTR [rbx+0x68],rax
   140003368:	mov    rax,QWORD PTR [rbx+0x40]
   14000336c:	mov    rdx,QWORD PTR [rax]
   14000336f:	mov    rax,rsi
   140003372:	sub    rax,r15
   140003375:	sub    rdx,r15
   140003378:	add    QWORD PTR [rcx],rax
   14000337b:	mov    rax,QWORD PTR [rbx+0x40]
   14000337f:	add    rdx,rsi
   140003382:	mov    QWORD PTR [rax],rdx
   140003385:	mov    rax,QWORD PTR [rbx+0x58]
   140003389:	mov    ecx,esi
   14000338b:	sub    ecx,edx
   14000338d:	add    ecx,ebp
   14000338f:	mov    DWORD PTR [rax],ecx
   140003391:	test   BYTE PTR [rbx+0x70],0x4
   140003395:	je     0x1400033b1
   140003397:	mov    rax,QWORD PTR [rbx+0x18]
   14000339b:	mov    QWORD PTR [rax],rsi
   14000339e:	mov    rax,QWORD PTR [rbx+0x38]
   1400033a2:	mov    QWORD PTR [rax],0x0
   1400033a9:	mov    rax,QWORD PTR [rbx+0x50]
   1400033ad:	mov    DWORD PTR [rax],esi
   1400033af:	jmp    0x1400033e0
   1400033b1:	mov    rax,QWORD PTR [rbx+0x40]
   1400033b5:	mov    r8,QWORD PTR [rax]
   1400033b8:	mov    rax,QWORD PTR [rbx+0x38]
   1400033bc:	mov    rdx,QWORD PTR [rax]
   1400033bf:	mov    rax,QWORD PTR [rbx+0x18]
   1400033c3:	mov    QWORD PTR [rax],rsi
   1400033c6:	mov    rax,QWORD PTR [rbx+0x38]
   1400033ca:	sub    rdx,r15
   1400033cd:	add    rdx,rsi
   1400033d0:	mov    QWORD PTR [rax],rdx
   1400033d3:	mov    rax,QWORD PTR [rbx+0x50]
   1400033d7:	sub    r8d,edx
   1400033da:	inc    r8d
   1400033dd:	mov    DWORD PTR [rax],r8d
   1400033e0:	test   BYTE PTR [rbx+0x70],0x1
   1400033e4:	je     0x1400033ee
   1400033e6:	mov    rcx,r15
   1400033e9:	call   0x1400048e0
   1400033ee:	or     DWORD PTR [rbx+0x70],0x1
   1400033f2:	mov    rcx,rbx
   1400033f5:	call   QWORD PTR [rip+0x2d5d]        # 0x140006158
   1400033fb:	mov    r15,QWORD PTR [rsp+0x20]
   140003400:	mov    rsi,QWORD PTR [rsp+0x48]
   140003405:	mov    rbp,QWORD PTR [rsp+0x40]
   14000340a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000340f:	mov    BYTE PTR [rax],r14b
   140003412:	mov    eax,r14d
   140003415:	add    rsp,0x28
   140003419:	pop    r14
   14000341b:	pop    rbx
   14000341c:	ret    
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	mov    rax,QWORD PTR [rcx+0x38]
   140003424:	mov    r8,QWORD PTR [rax]
   140003427:	test   r8,r8
   14000342a:	je     0x140003469
   14000342c:	mov    rax,QWORD PTR [rcx+0x18]
   140003430:	cmp    r8,QWORD PTR [rax]
   140003433:	jbe    0x140003469
   140003435:	cmp    edx,0xffffffff
   140003438:	je     0x140003446
   14000343a:	cmp    dl,BYTE PTR [r8-0x1]
   14000343e:	je     0x140003446
   140003440:	test   BYTE PTR [rcx+0x70],0x2
   140003444:	jne    0x140003469
   140003446:	mov    rax,QWORD PTR [rcx+0x50]
   14000344a:	inc    DWORD PTR [rax]
   14000344c:	mov    rax,QWORD PTR [rcx+0x38]
   140003450:	dec    QWORD PTR [rax]
   140003453:	cmp    edx,0xffffffff
   140003456:	je     0x140003464
   140003458:	mov    rax,QWORD PTR [rcx+0x38]
   14000345c:	mov    rcx,QWORD PTR [rax]
   14000345f:	mov    eax,edx
   140003461:	mov    BYTE PTR [rcx],dl
   140003463:	ret    
   140003464:	xor    edx,edx
   140003466:	mov    eax,edx
   140003468:	ret    
   140003469:	or     eax,0xffffffff
   14000346c:	ret    
   14000346d:	int3   
   14000346e:	int3   
   14000346f:	int3   
   140003470:	mov    QWORD PTR [rsp+0x10],rbx
   140003475:	push   rdi
   140003476:	mov    rdi,QWORD PTR [rcx+0x40]
   14000347a:	mov    r11,rdx
   14000347d:	mov    r10,rcx
   140003480:	mov    rax,QWORD PTR [rdi]
   140003483:	test   rax,rax
   140003486:	je     0x140003492
   140003488:	cmp    QWORD PTR [rcx+0x68],rax
   14000348c:	jae    0x140003492
   14000348e:	mov    QWORD PTR [rcx+0x68],rax
   140003492:	mov    ebx,DWORD PTR [rsp+0x30]
   140003496:	mov    QWORD PTR [rsp+0x10],rsi
   14000349b:	test   bl,0x1
   14000349e:	je     0x14000355e
   1400034a4:	mov    rsi,QWORD PTR [rcx+0x38]
   1400034a8:	mov    rcx,QWORD PTR [rsi]
   1400034ab:	test   rcx,rcx
   1400034ae:	je     0x14000355e
   1400034b4:	mov    rdx,QWORD PTR [rip+0x2d25]        # 0x1400061e0
   1400034bb:	cmp    r9d,0x2
   1400034bf:	jne    0x1400034d1
   1400034c1:	mov    rax,QWORD PTR [r10+0x18]
   1400034c5:	mov    rcx,QWORD PTR [r10+0x68]
   1400034c9:	sub    rcx,QWORD PTR [rax]
   1400034cc:	add    r8,rcx
   1400034cf:	jmp    0x1400034f0
   1400034d1:	cmp    r9d,0x1
   1400034d5:	jne    0x1400034e8
   1400034d7:	test   bl,0x2
   1400034da:	jne    0x1400034ed
   1400034dc:	mov    rax,QWORD PTR [r10+0x18]
   1400034e0:	sub    rcx,QWORD PTR [rax]
   1400034e3:	add    r8,rcx
   1400034e6:	jmp    0x1400034f0
   1400034e8:	test   r9d,r9d
   1400034eb:	je     0x1400034f0
   1400034ed:	mov    r8,QWORD PTR [rdx]
   1400034f0:	test   r8,r8
   1400034f3:	js     0x1400035d0
   1400034f9:	mov    rcx,QWORD PTR [r10+0x18]
   1400034fd:	mov    rax,QWORD PTR [r10+0x68]
   140003501:	sub    rax,QWORD PTR [rcx]
   140003504:	cmp    r8,rax
   140003507:	jg     0x1400035d0
   14000350d:	mov    edx,DWORD PTR [rcx]
   14000350f:	mov    rax,QWORD PTR [r10+0x50]
   140003513:	sub    edx,DWORD PTR [rsi]
   140003515:	add    edx,r8d
   140003518:	sub    DWORD PTR [rax],edx
   14000351a:	mov    rcx,QWORD PTR [r10+0x38]
   14000351e:	movsxd rax,edx
   140003521:	add    QWORD PTR [rcx],rax
   140003524:	test   bl,0x2
   140003527:	je     0x1400035e4
   14000352d:	mov    r9,QWORD PTR [r10+0x40]
   140003531:	mov    rcx,QWORD PTR [r9]
   140003534:	test   rcx,rcx
   140003537:	je     0x1400035e4
   14000353d:	mov    rax,QWORD PTR [r10+0x58]
   140003541:	movsxd rdx,DWORD PTR [rax]
   140003544:	mov    rax,QWORD PTR [r10+0x38]
   140003548:	add    rdx,rcx
   14000354b:	mov    rcx,QWORD PTR [rax]
   14000354e:	mov    QWORD PTR [r9],rcx
   140003551:	mov    rax,QWORD PTR [r10+0x58]
   140003555:	sub    edx,ecx
   140003557:	mov    DWORD PTR [rax],edx
   140003559:	jmp    0x1400035e4
   14000355e:	test   bl,0x2
   140003561:	je     0x1400035d5
   140003563:	mov    rcx,QWORD PTR [rdi]
   140003566:	test   rcx,rcx
   140003569:	je     0x1400035d5
   14000356b:	mov    rdx,QWORD PTR [rip+0x2c6e]        # 0x1400061e0
   140003572:	cmp    r9d,0x2
   140003576:	jne    0x140003588
   140003578:	mov    rax,QWORD PTR [r10+0x18]
   14000357c:	mov    rcx,QWORD PTR [r10+0x68]
   140003580:	sub    rcx,QWORD PTR [rax]
   140003583:	add    r8,rcx
   140003586:	jmp    0x1400035a2
   140003588:	cmp    r9d,0x1
   14000358c:	jne    0x14000359a
   14000358e:	mov    rax,QWORD PTR [r10+0x18]
   140003592:	sub    rcx,QWORD PTR [rax]
   140003595:	add    r8,rcx
   140003598:	jmp    0x1400035a2
   14000359a:	test   r9d,r9d
   14000359d:	je     0x1400035a2
   14000359f:	mov    r8,QWORD PTR [rdx]
   1400035a2:	test   r8,r8
   1400035a5:	js     0x1400035d0
   1400035a7:	mov    rcx,QWORD PTR [r10+0x18]
   1400035ab:	mov    rax,QWORD PTR [r10+0x68]
   1400035af:	sub    rax,QWORD PTR [rcx]
   1400035b2:	cmp    r8,rax
   1400035b5:	jg     0x1400035d0
   1400035b7:	mov    edx,DWORD PTR [rcx]
   1400035b9:	mov    rax,QWORD PTR [r10+0x58]
   1400035bd:	sub    edx,DWORD PTR [rdi]
   1400035bf:	add    edx,r8d
   1400035c2:	sub    DWORD PTR [rax],edx
   1400035c4:	mov    rcx,QWORD PTR [r10+0x40]
   1400035c8:	movsxd rax,edx
   1400035cb:	add    QWORD PTR [rcx],rax
   1400035ce:	jmp    0x1400035e4
   1400035d0:	mov    r8,QWORD PTR [rdx]
   1400035d3:	jmp    0x1400035e4
   1400035d5:	test   r8,r8
   1400035d8:	je     0x1400035e4
   1400035da:	mov    rax,QWORD PTR [rip+0x2bff]        # 0x1400061e0
   1400035e1:	mov    r8,QWORD PTR [rax]
   1400035e4:	mov    rsi,QWORD PTR [rsp+0x10]
   1400035e9:	mov    rbx,QWORD PTR [rsp+0x18]
   1400035ee:	xor    eax,eax
   1400035f0:	mov    QWORD PTR [r11+0x8],rax
   1400035f4:	mov    DWORD PTR [r11+0x10],eax
   1400035f8:	mov    QWORD PTR [r11],r8
   1400035fb:	mov    rax,r11
   1400035fe:	pop    rdi
   1400035ff:	ret    
   140003600:	rex push rbx
   140003602:	mov    r10,QWORD PTR [r8+0x8]
   140003606:	mov    rbx,rdx
   140003609:	mov    r11,rcx
   14000360c:	add    r10,QWORD PTR [r8]
   14000360f:	mov    r8,QWORD PTR [rcx+0x40]
   140003613:	mov    rax,QWORD PTR [r8]
   140003616:	test   rax,rax
   140003619:	je     0x140003625
   14000361b:	cmp    QWORD PTR [rcx+0x68],rax
   14000361f:	jae    0x140003625
   140003621:	mov    QWORD PTR [rcx+0x68],rax
   140003625:	mov    rax,QWORD PTR [rip+0x2bb4]        # 0x1400061e0
   14000362c:	mov    rcx,QWORD PTR [rax]
   14000362f:	cmp    r10,rcx
   140003632:	je     0x1400036f4
   140003638:	mov    QWORD PTR [rsp+0x10],rdi
   14000363d:	test   r9b,0x1
   140003641:	je     0x1400036b1
   140003643:	mov    rdi,QWORD PTR [r11+0x38]
   140003647:	cmp    QWORD PTR [rdi],0x0
   14000364b:	je     0x1400036b1
   14000364d:	test   r10,r10
   140003650:	js     0x1400036ec
   140003656:	mov    rdx,QWORD PTR [r11+0x18]
   14000365a:	mov    rax,QWORD PTR [r11+0x68]
   14000365e:	sub    rax,QWORD PTR [rdx]
   140003661:	cmp    r10,rax
   140003664:	jg     0x1400036ec
   14000366a:	mov    edx,DWORD PTR [rdx]
   14000366c:	mov    rax,QWORD PTR [r11+0x50]
   140003670:	sub    edx,DWORD PTR [rdi]
   140003672:	add    edx,r10d
   140003675:	sub    DWORD PTR [rax],edx
   140003677:	mov    rcx,QWORD PTR [r11+0x38]
   14000367b:	movsxd rax,edx
   14000367e:	add    QWORD PTR [rcx],rax
   140003681:	test   r9b,0x2
   140003685:	je     0x1400036ef
   140003687:	mov    r8,QWORD PTR [r11+0x40]
   14000368b:	mov    rcx,QWORD PTR [r8]
   14000368e:	test   rcx,rcx
   140003691:	je     0x1400036ef
   140003693:	mov    rax,QWORD PTR [r11+0x58]
   140003697:	movsxd rdx,DWORD PTR [rax]
   14000369a:	mov    rax,QWORD PTR [r11+0x38]
   14000369e:	add    rdx,rcx
   1400036a1:	mov    rcx,QWORD PTR [rax]
   1400036a4:	mov    QWORD PTR [r8],rcx
   1400036a7:	mov    rax,QWORD PTR [r11+0x58]
   1400036ab:	sub    edx,ecx
   1400036ad:	mov    DWORD PTR [rax],edx
   1400036af:	jmp    0x1400036ef
   1400036b1:	test   r9b,0x2
   1400036b5:	je     0x1400036ec
   1400036b7:	cmp    QWORD PTR [r8],0x0
   1400036bb:	je     0x1400036ec
   1400036bd:	test   r10,r10
   1400036c0:	js     0x1400036ec
   1400036c2:	mov    rdx,QWORD PTR [r11+0x18]
   1400036c6:	mov    rax,QWORD PTR [r11+0x68]
   1400036ca:	sub    rax,QWORD PTR [rdx]
   1400036cd:	cmp    r10,rax
   1400036d0:	jg     0x1400036ec
   1400036d2:	mov    edx,DWORD PTR [rdx]
   1400036d4:	mov    rax,QWORD PTR [r11+0x58]
   1400036d8:	sub    edx,DWORD PTR [r8]
   1400036db:	add    edx,r10d
   1400036de:	sub    DWORD PTR [rax],edx
   1400036e0:	mov    rcx,QWORD PTR [r11+0x40]
   1400036e4:	movsxd rax,edx
   1400036e7:	add    QWORD PTR [rcx],rax
   1400036ea:	jmp    0x1400036ef
   1400036ec:	mov    r10,rcx
   1400036ef:	mov    rdi,QWORD PTR [rsp+0x10]
   1400036f4:	xor    eax,eax
   1400036f6:	mov    QWORD PTR [rbx],r10
   1400036f9:	mov    QWORD PTR [rbx+0x8],rax
   1400036fd:	mov    DWORD PTR [rbx+0x10],eax
   140003700:	mov    rax,rbx
   140003703:	pop    rbx
   140003704:	ret    
   140003705:	int3   
   140003706:	int3   
   140003707:	int3   
   140003708:	int3   
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	mov    rax,rdx
   140003713:	ret    
   140003714:	int3   
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    rax,rdx
   140003723:	ret    
   140003724:	int3   
   140003725:	int3   
   140003726:	int3   
   140003727:	int3   
   140003728:	int3   
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	mov    rax,rcx
   140003733:	ret    
   140003734:	int3   
   140003735:	int3   
   140003736:	int3   
   140003737:	int3   
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	mov    rax,QWORD PTR [rcx+0x10]
   140003744:	ret    
   140003745:	int3   
   140003746:	int3   
   140003747:	int3   
   140003748:	int3   
   140003749:	int3   
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	int3   
   14000374d:	int3   
   14000374e:	int3   
   14000374f:	int3   
   140003750:	mov    QWORD PTR [rsp+0x8],rbx
   140003755:	mov    QWORD PTR [rsp+0x10],rdi
   14000375a:	push   rbp
   14000375b:	mov    rbp,rsp
   14000375e:	sub    rsp,0x50
   140003762:	xor    edi,edi
   140003764:	mov    rbx,rdx
   140003767:	mov    edx,DWORD PTR [rcx+0x70]
   14000376a:	mov    DWORD PTR [rbp-0x30],edi
   14000376d:	test   dl,0x2
   140003770:	jne    0x1400037ae
   140003772:	mov    rax,QWORD PTR [rcx+0x40]
   140003776:	mov    r9,QWORD PTR [rax]
   140003779:	test   r9,r9
   14000377c:	je     0x1400037ae
   14000377e:	mov    r8,QWORD PTR [rcx+0x68]
   140003782:	mov    rax,QWORD PTR [rcx+0x20]
   140003786:	cmp    r8,r9
   140003789:	cmovb  r8,r9
   14000378d:	mov    rdx,QWORD PTR [rax]
   140003790:	lea    rcx,[rbp-0x28]
   140003794:	mov    QWORD PTR [rbp-0x10],0xf
   14000379c:	sub    r8,rdx
   14000379f:	mov    QWORD PTR [rbp-0x18],rdi
   1400037a3:	mov    BYTE PTR [rbp-0x28],dil
   1400037a7:	call   0x140002b20
   1400037ac:	jmp    0x1400037df
   1400037ae:	test   dl,0x4
   1400037b1:	jne    0x1400037cf
   1400037b3:	mov    rax,QWORD PTR [rcx+0x38]
   1400037b7:	mov    rdx,QWORD PTR [rax]
   1400037ba:	test   rdx,rdx
   1400037bd:	je     0x1400037cf
   1400037bf:	mov    rax,QWORD PTR [rcx+0x50]
   1400037c3:	movsxd r8,DWORD PTR [rax]
   1400037c6:	mov    rax,QWORD PTR [rcx+0x18]
   1400037ca:	add    r8,rdx
   1400037cd:	jmp    0x14000378d
   1400037cf:	mov    QWORD PTR [rbp-0x10],0xf
   1400037d7:	mov    QWORD PTR [rbp-0x18],rdi
   1400037db:	mov    BYTE PTR [rbp-0x28],dil
   1400037df:	mov    QWORD PTR [rbx+0x18],0xf
   1400037e7:	mov    QWORD PTR [rbx+0x10],rdi
   1400037eb:	mov    BYTE PTR [rbx],dil
   1400037ee:	mov    rcx,QWORD PTR [rbp-0x10]
   1400037f2:	cmp    rcx,0x10
   1400037f6:	jae    0x140003814
   1400037f8:	mov    r8,QWORD PTR [rbp-0x18]
   1400037fc:	inc    r8
   1400037ff:	je     0x14000381b
   140003801:	lea    rdx,[rbp-0x28]
   140003805:	mov    rcx,rbx
   140003808:	call   QWORD PTR [rip+0x2a1a]        # 0x140006228
   14000380e:	mov    rcx,QWORD PTR [rbp-0x10]
   140003812:	jmp    0x14000381b
   140003814:	mov    rax,QWORD PTR [rbp-0x28]
   140003818:	mov    QWORD PTR [rbx],rax
   14000381b:	mov    rax,QWORD PTR [rbp-0x18]
   14000381f:	mov    rdi,QWORD PTR [rsp+0x68]
   140003824:	mov    QWORD PTR [rbx+0x18],rcx
   140003828:	mov    QWORD PTR [rbx+0x10],rax
   14000382c:	mov    rax,rbx
   14000382f:	mov    rbx,QWORD PTR [rsp+0x60]
   140003834:	add    rsp,0x50
   140003838:	pop    rbp
   140003839:	ret    
   14000383a:	int3   
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	rex push rbx
   140003842:	sub    rsp,0x30
   140003846:	add    rcx,0x18
   14000384a:	mov    rbx,rdx
   14000384d:	mov    DWORD PTR [rsp+0x20],0x0
   140003855:	call   0x140003750
   14000385a:	mov    rax,rbx
   14000385d:	add    rsp,0x30
   140003861:	pop    rbx
   140003862:	ret    
   140003863:	int3   
   140003864:	int3   
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	lea    rax,[rip+0x67a1]        # 0x14000a018
   140003877:	ret    
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	movzx  eax,BYTE PTR [rcx]
   140003883:	ret    
   140003884:	int3   
   140003885:	int3   
   140003886:	int3   
   140003887:	int3   
   140003888:	int3   
   140003889:	int3   
   14000388a:	int3   
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	movzx  eax,BYTE PTR [rcx]
   140003893:	ret    
   140003894:	int3   
   140003895:	int3   
   140003896:	int3   
   140003897:	int3   
   140003898:	int3   
   140003899:	int3   
   14000389a:	int3   
   14000389b:	int3   
   14000389c:	int3   
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	mov    r9,QWORD PTR [rcx+0x38]
   1400038a4:	mov    rdx,QWORD PTR [r9]
   1400038a7:	test   rdx,rdx
   1400038aa:	je     0x1400038fb
   1400038ac:	mov    r10,QWORD PTR [rcx+0x50]
   1400038b0:	movsxd rax,DWORD PTR [r10]
   1400038b3:	add    rax,rdx
   1400038b6:	cmp    rdx,rax
   1400038b9:	jae    0x1400038bf
   1400038bb:	movzx  eax,BYTE PTR [rdx]
   1400038be:	ret    
   1400038bf:	test   BYTE PTR [rcx+0x70],0x4
   1400038c3:	jne    0x1400038fb
   1400038c5:	mov    rax,QWORD PTR [rcx+0x40]
   1400038c9:	mov    r8,QWORD PTR [rax]
   1400038cc:	test   r8,r8
   1400038cf:	je     0x1400038fb
   1400038d1:	cmp    r8,rdx
   1400038d4:	ja     0x1400038dc
   1400038d6:	cmp    QWORD PTR [rcx+0x68],rdx
   1400038da:	jbe    0x1400038fb
   1400038dc:	cmp    QWORD PTR [rcx+0x68],r8
   1400038e0:	jae    0x1400038e6
   1400038e2:	mov    QWORD PTR [rcx+0x68],r8
   1400038e6:	mov    rax,QWORD PTR [rcx+0x68]
   1400038ea:	sub    eax,DWORD PTR [r9]
   1400038ed:	mov    DWORD PTR [r10],eax
   1400038f0:	mov    rax,QWORD PTR [rcx+0x38]
   1400038f4:	mov    rcx,QWORD PTR [rax]
   1400038f7:	movzx  eax,BYTE PTR [rcx]
   1400038fa:	ret    
   1400038fb:	or     eax,0xffffffff
   1400038fe:	ret    
   1400038ff:	int3   
   140003900:	mov    eax,DWORD PTR [rcx]
   140003902:	ret    
   140003903:	int3   
   140003904:	int3   
   140003905:	int3   
   140003906:	int3   
   140003907:	int3   
   140003908:	int3   
   140003909:	int3   
   14000390a:	int3   
   14000390b:	int3   
   14000390c:	int3   
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    eax,DWORD PTR [rcx]
   140003912:	ret    
   140003913:	int3   
   140003914:	int3   
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	int3   
   140003919:	int3   
   14000391a:	int3   
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	rex.W jmp QWORD PTR [rip+0x2911]        # 0x140006238
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	rex push rbx
   140003932:	push   rsi
   140003933:	push   rdi
   140003934:	push   r12
   140003936:	push   r13
   140003938:	push   r14
   14000393a:	push   r15
   14000393c:	mov    eax,0x8550
   140003941:	call   0x140004a50
   140003946:	sub    rsp,rax
   140003949:	mov    QWORD PTR [rsp+0x230],0xfffffffffffffffe
   140003955:	mov    rdi,rdx
   140003958:	mov    esi,ecx
   14000395a:	xor    ebx,ebx
   14000395c:	mov    DWORD PTR [rsp+0x8590],ebx
   140003963:	mov    BYTE PTR [rsp+0x540],bl
   14000396a:	xor    edx,edx
   14000396c:	mov    r8d,0x7fff
   140003972:	lea    rcx,[rsp+0x541]
   14000397a:	call   0x140004aa4
   14000397f:	mov    QWORD PTR [rsp+0x108],rbx
   140003987:	mov    QWORD PTR [rsp+0x100],rbx
   14000398f:	mov    r13d,ebx
   140003992:	mov    QWORD PTR [rsp+0x118],rbx
   14000399a:	mov    QWORD PTR [rsp+0xb8],rbx
   1400039a2:	mov    QWORD PTR [rsp+0xf8],0xffffffffffffffff
   1400039ae:	mov    QWORD PTR [rsp+0xc8],rbx
   1400039b6:	mov    QWORD PTR [rsp+0xd8],rbx
   1400039be:	mov    QWORD PTR [rsp+0x120],rbx
   1400039c6:	mov    QWORD PTR [rsp+0x110],rbx
   1400039ce:	lea    rax,[rip+0x2e0b]        # 0x1400067e0
   1400039d5:	mov    QWORD PTR [rsp+0x240],rax
   1400039dd:	lea    rax,[rip+0x2e04]        # 0x1400067e8
   1400039e4:	mov    QWORD PTR [rsp+0x250],rax
   1400039ec:	mov    rax,QWORD PTR [rip+0x26b5]        # 0x1400060a8
   1400039f3:	mov    QWORD PTR [rsp+0x2d8],rax
   1400039fb:	mov    DWORD PTR [rsp+0x8590],0x1
   140003a06:	xor    r8d,r8d
   140003a09:	lea    rdx,[rsp+0x258]
   140003a11:	lea    rcx,[rsp+0x240]
   140003a19:	call   QWORD PTR [rip+0x2769]        # 0x140006188
   140003a1f:	nop
   140003a20:	mov    rax,QWORD PTR [rsp+0x240]
   140003a28:	movsxd rcx,DWORD PTR [rax+0x4]
   140003a2c:	lea    rax,[rip+0x2da5]        # 0x1400067d8
   140003a33:	mov    QWORD PTR [rsp+rcx*1+0x240],rax
   140003a3b:	mov    rax,QWORD PTR [rsp+0x240]
   140003a43:	movsxd rcx,DWORD PTR [rax+0x4]
   140003a47:	lea    edx,[rcx-0x98]
   140003a4d:	mov    DWORD PTR [rsp+rcx*1+0x23c],edx
   140003a54:	lea    rcx,[rsp+0x258]
   140003a5c:	call   QWORD PTR [rip+0x26c6]        # 0x140006128
   140003a62:	nop
   140003a63:	lea    rax,[rip+0x2cee]        # 0x140006758
   140003a6a:	mov    QWORD PTR [rsp+0x258],rax
   140003a72:	mov    QWORD PTR [rsp+0x2c0],rbx
   140003a7a:	mov    DWORD PTR [rsp+0x2c8],ebx
   140003a81:	lea    eax,[rsi-0x6]
   140003a84:	test   eax,0xfffffffd
   140003a89:	je     0x140003ab4
   140003a8b:	mov    DWORD PTR [rip+0x656b],0x1        # 0x14000a000
   140003a95:	mov    DWORD PTR [rsp+0xe4],0x1
   140003aa0:	lea    rdx,[rip+0x4289]        # 0x140007d30
   140003aa7:	lea    rcx,[rsp+0xe4]
   140003aaf:	call   0x140004a2a
   140003ab4:	mov    rcx,QWORD PTR [rdi+0x8]
   140003ab8:	call   QWORD PTR [rip+0x2762]        # 0x140006220
   140003abe:	mov    r15d,eax
   140003ac1:	mov    rcx,QWORD PTR [rdi+0x10]
   140003ac5:	call   QWORD PTR [rip+0x2755]        # 0x140006220
   140003acb:	test   eax,eax
   140003acd:	setne  BYTE PTR [rsp+0x8590]
   140003ad5:	mov    rdx,QWORD PTR [rdi+0x18]
   140003ad9:	mov    QWORD PTR [rsp+0x140],0xf
   140003ae5:	mov    QWORD PTR [rsp+0x138],rbx
   140003aed:	mov    BYTE PTR [rsp+0x128],0x0
   140003af5:	cmp    BYTE PTR [rdx],0x0
   140003af8:	jne    0x140003aff
   140003afa:	mov    r8,rbx
   140003afd:	jmp    0x140003b0d
   140003aff:	or     r8,0xffffffffffffffff
   140003b03:	inc    r8
   140003b06:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003b0b:	jne    0x140003b03
   140003b0d:	lea    rcx,[rsp+0x128]
   140003b15:	call   0x140002b20
   140003b1a:	nop
   140003b1b:	lea    r8,[rsp+0x128]
   140003b23:	cmp    QWORD PTR [rsp+0x140],0x10
   140003b2c:	cmovae r8,QWORD PTR [rsp+0x128]
   140003b35:	xor    edx,edx
   140003b37:	mov    ecx,0x100000
   140003b3c:	call   QWORD PTR [rip+0x250e]        # 0x140006050
   140003b42:	mov    QWORD PTR [rsp+0x1c8],rax
   140003b4a:	mov    QWORD PTR [rsp+0x108],rax
   140003b52:	test   rax,rax
   140003b55:	jne    0x140003b80
   140003b57:	mov    DWORD PTR [rip+0x649f],0x2        # 0x14000a000
   140003b61:	mov    DWORD PTR [rsp+0xf0],0x1
   140003b6c:	lea    rdx,[rip+0x41bd]        # 0x140007d30
   140003b73:	lea    rcx,[rsp+0xf0]
   140003b7b:	call   0x140004a2a
   140003b80:	mov    rdx,QWORD PTR [rdi+0x20]
   140003b84:	mov    QWORD PTR [rsp+0x180],0xf
   140003b90:	mov    QWORD PTR [rsp+0x178],rbx
   140003b98:	mov    BYTE PTR [rsp+0x168],0x0
   140003ba0:	cmp    BYTE PTR [rdx],0x0
   140003ba3:	jne    0x140003baa
   140003ba5:	mov    r8,rbx
   140003ba8:	jmp    0x140003bba
   140003baa:	or     r8,0xffffffffffffffff
   140003bae:	xchg   ax,ax
   140003bb0:	inc    r8
   140003bb3:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003bb8:	jne    0x140003bb0
   140003bba:	lea    rcx,[rsp+0x168]
   140003bc2:	call   0x140002b20
   140003bc7:	nop
   140003bc8:	mov    rcx,QWORD PTR [rdi+0x28]
   140003bcc:	call   QWORD PTR [rip+0x264e]        # 0x140006220
   140003bd2:	mov    DWORD PTR [rsp+0x85a8],eax
   140003bd9:	mov    QWORD PTR [rsp+0x1a0],0xf
   140003be5:	mov    QWORD PTR [rsp+0x198],rbx
   140003bed:	mov    BYTE PTR [rsp+0x188],0x0
   140003bf5:	mov    QWORD PTR [rsp+0x160],0xf
   140003c01:	mov    QWORD PTR [rsp+0x158],rbx
   140003c09:	mov    BYTE PTR [rsp+0x148],0x0
   140003c11:	cmp    esi,0x8
   140003c14:	jne    0x140003d74
   140003c1a:	mov    rdx,QWORD PTR [rdi+0x30]
   140003c1e:	cmp    BYTE PTR [rdx],0x0
   140003c21:	jne    0x140003c28
   140003c23:	mov    r8,rbx
   140003c26:	jmp    0x140003c3a
   140003c28:	or     r8,0xffffffffffffffff
   140003c2c:	nop    DWORD PTR [rax+0x0]
   140003c30:	inc    r8
   140003c33:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003c38:	jne    0x140003c30
   140003c3a:	lea    rcx,[rsp+0x188]
   140003c42:	call   0x140002b20
   140003c47:	mov    QWORD PTR [rsp+0x58],0xf
   140003c50:	mov    QWORD PTR [rsp+0x50],rbx
   140003c55:	mov    BYTE PTR [rsp+0x40],0x0
   140003c5a:	or     r9,0xffffffffffffffff
   140003c5e:	xor    r8d,r8d
   140003c61:	lea    rdx,[rsp+0x188]
   140003c69:	lea    rcx,[rsp+0x40]
   140003c6e:	call   0x1400029d0
   140003c73:	mov    r8b,0x1
   140003c76:	mov    edx,0x80000000
   140003c7b:	lea    rcx,[rsp+0x40]
   140003c80:	call   0x1400030f0
   140003c85:	mov    QWORD PTR [rsp+0x118],rax
   140003c8d:	cmp    rax,0xffffffffffffffff
   140003c91:	jne    0x140003cbc
   140003c93:	mov    DWORD PTR [rip+0x6363],0x3        # 0x14000a000
   140003c9d:	mov    DWORD PTR [rsp+0xb0],0x1
   140003ca8:	lea    rdx,[rip+0x4081]        # 0x140007d30
   140003caf:	lea    rcx,[rsp+0xb0]
   140003cb7:	call   0x140004a2a
   140003cbc:	lea    rax,[rsp+0x118]
   140003cc4:	mov    QWORD PTR [rsp+0x100],rax
   140003ccc:	mov    rdx,QWORD PTR [rdi+0x38]
   140003cd0:	cmp    BYTE PTR [rdx],0x0
   140003cd3:	jne    0x140003cda
   140003cd5:	mov    r8,rbx
   140003cd8:	jmp    0x140003cea
   140003cda:	or     r8,0xffffffffffffffff
   140003cde:	xchg   ax,ax
   140003ce0:	inc    r8
   140003ce3:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003ce8:	jne    0x140003ce0
   140003cea:	lea    rcx,[rsp+0x148]
   140003cf2:	call   0x140002b20
   140003cf7:	mov    QWORD PTR [rsp+0x58],0xf
   140003d00:	mov    QWORD PTR [rsp+0x50],rbx
   140003d05:	mov    BYTE PTR [rsp+0x40],0x0
   140003d0a:	or     r9,0xffffffffffffffff
   140003d0e:	xor    r8d,r8d
   140003d11:	lea    rdx,[rsp+0x148]
   140003d19:	lea    rcx,[rsp+0x40]
   140003d1e:	call   0x1400029d0
   140003d23:	mov    r8b,0x1
   140003d26:	mov    edx,0x40000000
   140003d2b:	lea    rcx,[rsp+0x40]
   140003d30:	call   0x1400030f0
   140003d35:	mov    QWORD PTR [rsp+0xb8],rax
   140003d3d:	cmp    rax,0xffffffffffffffff
   140003d41:	jne    0x140003d6c
   140003d43:	mov    DWORD PTR [rip+0x62b3],0x4        # 0x14000a000
   140003d4d:	mov    DWORD PTR [rsp+0xec],0x1
   140003d58:	lea    rdx,[rip+0x3fd1]        # 0x140007d30
   140003d5f:	lea    rcx,[rsp+0xec]
   140003d67:	call   0x140004a2a
   140003d6c:	lea    r13,[rsp+0xb8]
   140003d74:	mov    QWORD PTR [rsp+0x228],0xf
   140003d80:	mov    QWORD PTR [rsp+0x220],rbx
   140003d88:	mov    BYTE PTR [rsp+0x210],0x0
   140003d90:	or     r9,0xffffffffffffffff
   140003d94:	xor    r8d,r8d
   140003d97:	lea    rdx,[rsp+0x168]
   140003d9f:	lea    rcx,[rsp+0x210]
   140003da7:	call   0x1400029d0
   140003dac:	xor    r8d,r8d
   140003daf:	mov    edx,0xc0000000
   140003db4:	lea    rcx,[rsp+0x210]
   140003dbc:	call   0x1400030f0
   140003dc1:	mov    r14,rax
   140003dc4:	mov    QWORD PTR [rsp+0xf8],rax
   140003dcc:	cmp    rax,0xffffffffffffffff
   140003dd0:	jne    0x140003dfb
   140003dd2:	mov    DWORD PTR [rip+0x6224],0x5        # 0x14000a000
   140003ddc:	mov    DWORD PTR [rsp+0xf4],0x1
   140003de7:	lea    rdx,[rip+0x3f42]        # 0x140007d30
   140003dee:	lea    rcx,[rsp+0xf4]
   140003df6:	call   0x140004a2a
   140003dfb:	mov    QWORD PTR [rsp+0x80],0xf
   140003e07:	mov    QWORD PTR [rsp+0x78],rbx
   140003e0c:	mov    BYTE PTR [rsp+0x68],0x0
   140003e11:	xor    r8d,r8d
   140003e14:	lea    rdx,[rip+0x27f5]        # 0x140006610
   140003e1b:	lea    rcx,[rsp+0x68]
   140003e20:	call   0x140002b20
   140003e25:	nop
   140003e26:	mov    rdx,r15
   140003e29:	mov    ecx,0x40
   140003e2e:	call   QWORD PTR [rip+0x2504]        # 0x140006338
   140003e34:	mov    r12,rax
   140003e37:	mov    QWORD PTR [rsp+0x110],rax
   140003e3f:	nop
   140003e40:	mov    QWORD PTR [rsp+0x20],rbx
   140003e45:	lea    r9,[rsp+0x60]
   140003e4a:	mov    r8d,r15d
   140003e4d:	mov    rdx,r12
   140003e50:	mov    rcx,r14
   140003e53:	call   QWORD PTR [rip+0x2217]        # 0x140006070
   140003e59:	mov    edi,eax
   140003e5b:	xor    edx,edx
   140003e5d:	mov    r8d,0x8000
   140003e63:	lea    rcx,[rsp+0x540]
   140003e6b:	call   0x140004aa4
   140003e70:	test   edi,edi
   140003e72:	je     0x1400044e7
   140003e78:	lea    rdx,[rsp+0x68]
   140003e7d:	cmp    QWORD PTR [rsp+0x80],0x10
   140003e86:	cmovae rdx,QWORD PTR [rsp+0x68]
   140003e8c:	mov    QWORD PTR [rsp+0x20],rbx
   140003e91:	lea    r9,[rsp+0x85a0]
   140003e99:	mov    r8d,DWORD PTR [rsp+0x78]
   140003e9e:	mov    rcx,r14
   140003ea1:	call   QWORD PTR [rip+0x21d1]        # 0x140006078
   140003ea7:	test   eax,eax
   140003ea9:	jne    0x140003ed4
   140003eab:	mov    DWORD PTR [rip+0x614b],0x7        # 0x14000a000
   140003eb5:	mov    DWORD PTR [rsp+0xe8],0x1
   140003ec0:	lea    rdx,[rip+0x3e69]        # 0x140007d30
   140003ec7:	lea    rcx,[rsp+0xe8]
   140003ecf:	call   0x140004a2a
   140003ed4:	mov    edx,0x3
   140003ed9:	lea    r8d,[rdx-0x2]
   140003edd:	lea    rcx,[rsp+0x340]
   140003ee5:	call   0x140001be0
   140003eea:	nop
   140003eeb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ef0:	mov    QWORD PTR [rsp+0x20],rbx
   140003ef5:	lea    r9,[rsp+0x60]
   140003efa:	mov    r8d,0x8000
   140003f00:	lea    rdx,[rsp+0x540]
   140003f08:	mov    rcx,r14
   140003f0b:	call   QWORD PTR [rip+0x215f]        # 0x140006070
   140003f11:	mov    edi,eax
   140003f13:	lea    rdx,[rsp+0x540]
   140003f1b:	lea    rcx,[rsp+0x350]
   140003f23:	call   0x140001610
   140003f28:	xor    edx,edx
   140003f2a:	mov    r8d,0x8000
   140003f30:	lea    rcx,[rsp+0x540]
   140003f38:	call   0x140004aa4
   140003f3d:	test   edi,edi
   140003f3f:	je     0x1400044ac
   140003f45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003f50:	mov    rax,QWORD PTR [rsp+0x340]
   140003f58:	movsxd rcx,DWORD PTR [rax+0x4]
   140003f5c:	test   BYTE PTR [rsp+rcx*1+0x350],0x1
   140003f64:	jne    0x1400040d0
   140003f6a:	mov    QWORD PTR [rsp+0x58],0xf
   140003f73:	mov    QWORD PTR [rsp+0x50],rbx
   140003f78:	mov    BYTE PTR [rsp+0x40],0x0
   140003f7d:	mov    QWORD PTR [rsp+0xa0],0xf
   140003f89:	mov    QWORD PTR [rsp+0x98],rbx
   140003f91:	mov    BYTE PTR [rsp+0x88],0x0
   140003f99:	lea    rdx,[rsp+0x40]
   140003f9e:	lea    rcx,[rsp+0x340]
   140003fa6:	call   0x1400010a0
   140003fab:	lea    rdx,[rsp+0x88]
   140003fb3:	lea    rcx,[rsp+0x340]
   140003fbb:	call   0x1400010a0
   140003fc0:	cmp    QWORD PTR [rsp+0x50],0x2
   140003fc6:	je     0x140004017
   140003fc8:	cmp    QWORD PTR [rsp+0xa0],0x10
   140003fd1:	jb     0x140003fe0
   140003fd3:	mov    rcx,QWORD PTR [rsp+0x88]
   140003fdb:	call   0x1400048e0
   140003fe0:	mov    QWORD PTR [rsp+0xa0],0xf
   140003fec:	mov    QWORD PTR [rsp+0x98],rbx
   140003ff4:	mov    BYTE PTR [rsp+0x88],0x0
   140003ffc:	cmp    QWORD PTR [rsp+0x58],0x10
   140004002:	jb     0x140003f50
   140004008:	mov    rcx,QWORD PTR [rsp+0x40]
   14000400d:	call   0x1400048e0
   140004012:	jmp    0x140003f50
   140004017:	xor    eax,eax
   140004019:	mov    QWORD PTR [rsp+0x1d0],rax
   140004021:	mov    QWORD PTR [rsp+0x1d8],rax
   140004029:	mov    QWORD PTR [rsp+0x1e0],rax
   140004031:	mov    QWORD PTR [rsp+0x1e8],rax
   140004039:	mov    QWORD PTR [rsp+0x1f0],rax
   140004041:	mov    QWORD PTR [rsp+0x1f8],rax
   140004049:	mov    DWORD PTR [rsp+0x1d4],0x1
   140004054:	lea    rax,[rsp+0x40]
   140004059:	cmp    QWORD PTR [rsp+0x58],0x10
   14000405f:	cmovae rax,QWORD PTR [rsp+0x40]
   140004065:	mov    QWORD PTR [rsp+0x1e0],rax
   14000406d:	lea    rax,[rsp+0x88]
   140004075:	cmp    QWORD PTR [rsp+0xa0],0x10
   14000407e:	cmovae rax,QWORD PTR [rsp+0x88]
   140004087:	mov    QWORD PTR [rsp+0x1e8],rax
   14000408f:	mov    r9d,0x4
   140004095:	xor    r8d,r8d
   140004098:	xor    edx,edx
   14000409a:	lea    rcx,[rsp+0x1d0]
   1400040a2:	call   0x1400046a4
   1400040a7:	test   eax,eax
   1400040a9:	jne    0x140003fc8
   1400040af:	lea    rdx,[rsp+0x40]
   1400040b4:	lea    rcx,[rsp+0x250]
   1400040bc:	call   0x140001280
   1400040c1:	mov    dl,0x20
   1400040c3:	mov    rcx,rax
   1400040c6:	call   0x140001450
   1400040cb:	jmp    0x140003fc8
   1400040d0:	lea    rdx,[rsp+0x68]
   1400040d5:	cmp    QWORD PTR [rsp+0x80],0x10
   1400040de:	cmovae rdx,QWORD PTR [rsp+0x68]
   1400040e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400040e9:	lea    r9,[rsp+0x85a0]
   1400040f1:	mov    r8d,DWORD PTR [rsp+0x78]
   1400040f6:	mov    rcx,r14
   1400040f9:	call   QWORD PTR [rip+0x1f79]        # 0x140006078
   1400040ff:	test   eax,eax
   140004101:	jne    0x14000412c
   140004103:	mov    DWORD PTR [rip+0x5ef3],0x7        # 0x14000a000
   14000410d:	mov    DWORD PTR [rsp+0xb4],0x1
   140004118:	lea    rdx,[rip+0x3c11]        # 0x140007d30
   14000411f:	lea    rcx,[rsp+0xb4]
   140004127:	call   0x140004a2a
   14000412c:	mov    edx,0x3
   140004131:	lea    r8d,[rdx-0x2]
   140004135:	lea    rcx,[rsp+0x440]
   14000413d:	call   0x140001be0
   140004142:	nop
   140004143:	nop    DWORD PTR [rax+0x0]
   140004147:	nop    WORD PTR [rax+rax*1+0x0]
   140004150:	mov    QWORD PTR [rsp+0x20],rbx
   140004155:	lea    r9,[rsp+0x60]
   14000415a:	mov    r8d,0x8000
   140004160:	lea    rdx,[rsp+0x540]
   140004168:	mov    rcx,r14
   14000416b:	call   QWORD PTR [rip+0x1eff]        # 0x140006070
   140004171:	mov    edi,eax
   140004173:	lea    rdx,[rsp+0x540]
   14000417b:	lea    rcx,[rsp+0x450]
   140004183:	call   0x140001610
   140004188:	test   edi,edi
   14000418a:	je     0x14000445c
   140004190:	lea    rdx,[rsp+0x1a8]
   140004198:	lea    rcx,[rsp+0x440]
   1400041a0:	call   0x140003840
   1400041a5:	nop
   1400041a6:	movzx  ecx,BYTE PTR [rsp+0x8590]
   1400041ae:	call   QWORD PTR [rip+0x219c]        # 0x140006350
   1400041b4:	mov    rsi,rax
   1400041b7:	mov    QWORD PTR [rsp+0x120],rax
   1400041bf:	lea    rcx,[rsp+0x1a8]
   1400041c7:	cmp    QWORD PTR [rsp+0x1c0],0x10
   1400041d0:	cmovae rcx,QWORD PTR [rsp+0x1a8]
   1400041d9:	mov    QWORD PTR [rsp+0x30],r12
   1400041de:	mov    QWORD PTR [rsp+0x28],rax
   1400041e3:	lea    rax,[rsp+0xd8]
   1400041eb:	mov    QWORD PTR [rsp+0x20],rax
   1400041f0:	mov    r9,QWORD PTR [rsp+0x100]
   1400041f8:	mov    r8,r13
   1400041fb:	movzx  edx,WORD PTR [rsp+0x85a8]
   140004203:	call   QWORD PTR [rip+0x2157]        # 0x140006360
   140004209:	mov    rdi,rax
   14000420c:	mov    QWORD PTR [rsp+0xc8],rax
   140004214:	test   rax,rax
   140004217:	jne    0x140004242
   140004219:	mov    DWORD PTR [rip+0x5ddd],0x9        # 0x14000a000
   140004223:	mov    DWORD PTR [rsp+0xe0],0x1
   14000422e:	lea    rdx,[rip+0x3afb]        # 0x140007d30
   140004235:	lea    rcx,[rsp+0xe0]
   14000423d:	call   0x140004a2a
   140004242:	lea    rdx,[rsp+0x68]
   140004247:	cmp    QWORD PTR [rsp+0x80],0x10
   140004250:	cmovae rdx,QWORD PTR [rsp+0x68]
   140004256:	mov    QWORD PTR [rsp+0x20],rbx
   14000425b:	lea    r9,[rsp+0x85a0]
   140004263:	mov    r8d,DWORD PTR [rsp+0x78]
   140004268:	mov    rcx,r14
   14000426b:	call   QWORD PTR [rip+0x1e07]        # 0x140006078
   140004271:	test   eax,eax
   140004273:	jne    0x14000429e
   140004275:	mov    DWORD PTR [rip+0x5d81],0xa        # 0x14000a000
   14000427f:	mov    DWORD PTR [rsp+0xc0],0x1
   14000428a:	lea    rdx,[rip+0x3a9f]        # 0x140007d30
   140004291:	lea    rcx,[rsp+0xc0]
   140004299:	call   0x140004a2a
   14000429e:	mov    r15,QWORD PTR [rsp+0x1c8]
   1400042a6:	mov    QWORD PTR [rsp+0x200],r15
   1400042ae:	mov    QWORD PTR [rsp+0x208],rdi
   1400042b6:	or     r9d,0xffffffff
   1400042ba:	xor    r8d,r8d
   1400042bd:	lea    rdx,[rsp+0x200]
   1400042c5:	lea    ecx,[r8+0x2]
   1400042c9:	call   QWORD PTR [rip+0x1d69]        # 0x140006038
   1400042cf:	cmp    eax,0x1
   1400042d2:	jne    0x1400042f8
   1400042d4:	lea    rdx,[rip+0x5d25]        # 0x14000a000
   1400042db:	mov    rcx,rdi
   1400042de:	call   QWORD PTR [rip+0x1d5c]        # 0x140006040
   1400042e4:	mov    rcx,rdi
   1400042e7:	call   QWORD PTR [rip+0x1d93]        # 0x140006080
   1400042ed:	mov    rdi,rbx
   1400042f0:	mov    QWORD PTR [rsp+0xc8],rbx
   1400042f8:	test   r13,r13
   1400042fb:	je     0x14000430c
   1400042fd:	mov    rcx,QWORD PTR [rsp+0xb8]
   140004305:	call   QWORD PTR [rip+0x1d5d]        # 0x140006068
   14000430b:	nop
   14000430c:	cmp    QWORD PTR [rsp+0x1c0],0x10
   140004315:	jb     0x140004324
   140004317:	mov    rcx,QWORD PTR [rsp+0x1a8]
   14000431f:	call   0x1400048e0
   140004324:	mov    QWORD PTR [rsp+0x1c0],0xf
   140004330:	mov    QWORD PTR [rsp+0x1b8],rbx
   140004338:	mov    BYTE PTR [rsp+0x1a8],0x0
   140004340:	lea    rcx,[rsp+0x440]
   140004348:	call   0x140002110
   14000434d:	nop
   14000434e:	lea    rcx,[rsp+0x340]
   140004356:	call   0x140002110
   14000435b:	nop
   14000435c:	cmp    QWORD PTR [rsp+0x80],0x10
   140004365:	jb     0x140004371
   140004367:	mov    rcx,QWORD PTR [rsp+0x68]
   14000436c:	call   0x1400048e0
   140004371:	mov    QWORD PTR [rsp+0x80],0xf
   14000437d:	mov    QWORD PTR [rsp+0x78],rbx
   140004382:	mov    BYTE PTR [rsp+0x68],0x0
   140004387:	cmp    QWORD PTR [rsp+0x160],0x10
   140004390:	jb     0x14000439f
   140004392:	mov    rcx,QWORD PTR [rsp+0x148]
   14000439a:	call   0x1400048e0
   14000439f:	mov    QWORD PTR [rsp+0x160],0xf
   1400043ab:	mov    QWORD PTR [rsp+0x158],rbx
   1400043b3:	mov    BYTE PTR [rsp+0x148],0x0
   1400043bb:	cmp    QWORD PTR [rsp+0x1a0],0x10
   1400043c4:	jb     0x1400043d3
   1400043c6:	mov    rcx,QWORD PTR [rsp+0x188]
   1400043ce:	call   0x1400048e0
   1400043d3:	mov    QWORD PTR [rsp+0x1a0],0xf
   1400043df:	mov    QWORD PTR [rsp+0x198],rbx
   1400043e7:	mov    BYTE PTR [rsp+0x188],0x0
   1400043ef:	cmp    QWORD PTR [rsp+0x180],0x10
   1400043f8:	jb     0x140004407
   1400043fa:	mov    rcx,QWORD PTR [rsp+0x168]
   140004402:	call   0x1400048e0
   140004407:	mov    QWORD PTR [rsp+0x180],0xf
   140004413:	mov    QWORD PTR [rsp+0x178],rbx
   14000441b:	mov    BYTE PTR [rsp+0x168],0x0
   140004423:	cmp    QWORD PTR [rsp+0x140],0x10
   14000442c:	jb     0x14000443b
   14000442e:	mov    rcx,QWORD PTR [rsp+0x128]
   140004436:	call   0x1400048e0
   14000443b:	mov    QWORD PTR [rsp+0x140],0xf
   140004447:	mov    QWORD PTR [rsp+0x138],rbx
   14000444f:	mov    BYTE PTR [rsp+0x128],0x0
   140004457:	jmp    0x14000454c
   14000445c:	call   QWORD PTR [rip+0x1bf6]        # 0x140006058
   140004462:	cmp    eax,0xea
   140004467:	je     0x140004492
   140004469:	mov    DWORD PTR [rip+0x5b8d],0x8        # 0x14000a000
   140004473:	mov    DWORD PTR [rsp+0xa8],0x1
   14000447e:	lea    rdx,[rip+0x38ab]        # 0x140007d30
   140004485:	lea    rcx,[rsp+0xa8]
   14000448d:	call   0x140004a2a
   140004492:	xor    edx,edx
   140004494:	mov    r8d,0x8000
   14000449a:	lea    rcx,[rsp+0x540]
   1400044a2:	call   0x140004aa4
   1400044a7:	jmp    0x140004150
   1400044ac:	call   QWORD PTR [rip+0x1ba6]        # 0x140006058
   1400044b2:	cmp    eax,0xea
   1400044b7:	je     0x140003ef0
   1400044bd:	mov    DWORD PTR [rip+0x5b39],0x6        # 0x14000a000
   1400044c7:	mov    DWORD PTR [rsp+0xd0],0x1
   1400044d2:	lea    rdx,[rip+0x3857]        # 0x140007d30
   1400044d9:	lea    rcx,[rsp+0xd0]
   1400044e1:	call   0x140004a2a
   1400044e6:	nop
   1400044e7:	call   QWORD PTR [rip+0x1b6b]        # 0x140006058
   1400044ed:	cmp    eax,0xea
   1400044f2:	je     0x140003e40
   1400044f8:	mov    DWORD PTR [rip+0x5afe],0x6        # 0x14000a000
   140004502:	mov    DWORD PTR [rsp+0xac],0x1
   14000450d:	lea    rdx,[rip+0x381c]        # 0x140007d30
   140004514:	lea    rcx,[rsp+0xac]
   14000451c:	call   0x140004a2a
   140004521:	nop
   140004522:	xor    ebx,ebx
   140004524:	mov    r15,QWORD PTR [rsp+0x108]
   14000452c:	mov    r14,QWORD PTR [rsp+0xf8]
   140004534:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000453c:	mov    rsi,QWORD PTR [rsp+0x120]
   140004544:	mov    r12,QWORD PTR [rsp+0x110]
   14000454c:	mov    rax,QWORD PTR [rsp+0x240]
   140004554:	movsxd rcx,DWORD PTR [rax+0x4]
   140004558:	test   BYTE PTR [rsp+rcx*1+0x250],0x1
   140004560:	jne    0x1400045cb
   140004562:	mov    QWORD PTR [rsp+0x58],0xf
   14000456b:	mov    QWORD PTR [rsp+0x50],rbx
   140004570:	mov    BYTE PTR [rsp+0x40],0x0
   140004575:	lea    rdx,[rsp+0x40]
   14000457a:	lea    rcx,[rsp+0x240]
   140004582:	call   0x1400010a0
   140004587:	lea    rcx,[rsp+0x40]
   14000458c:	cmp    QWORD PTR [rsp+0x58],0x10
   140004592:	cmovae rcx,QWORD PTR [rsp+0x40]
   140004598:	mov    edx,0x1
   14000459d:	call   0x1400046aa
   1400045a2:	nop
   1400045a3:	cmp    QWORD PTR [rsp+0x58],0x10
   1400045a9:	jb     0x1400045b5
   1400045ab:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045b0:	call   0x1400048e0
   1400045b5:	mov    rax,QWORD PTR [rsp+0x240]
   1400045bd:	movsxd rdx,DWORD PTR [rax+0x4]
   1400045c1:	test   BYTE PTR [rsp+rdx*1+0x250],0x1
   1400045c9:	je     0x140004562
   1400045cb:	test   r15,r15
   1400045ce:	je     0x1400045d9
   1400045d0:	mov    rcx,r15
   1400045d3:	call   QWORD PTR [rip+0x1aa7]        # 0x140006080
   1400045d9:	test   rdi,rdi
   1400045dc:	je     0x140004637
   1400045de:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400045e6:	test   rcx,rcx
   1400045e9:	je     0x140004604
   1400045eb:	or     edx,0xffffffff
   1400045ee:	call   QWORD PTR [rip+0x1a3c]        # 0x140006030
   1400045f4:	mov    rcx,QWORD PTR [rsp+0xd8]
   1400045fc:	call   QWORD PTR [rip+0x1a7e]        # 0x140006080
   140004602:	jmp    0x14000462e
   140004604:	lea    rdx,[rsp+0x8590]
   14000460c:	mov    rcx,rdi
   14000460f:	call   QWORD PTR [rip+0x1a2b]        # 0x140006040
   140004615:	cmp    DWORD PTR [rsp+0x8590],0x103
   140004620:	jne    0x14000462e
   140004622:	or     edx,0xffffffff
   140004625:	mov    rcx,rdi
   140004628:	call   QWORD PTR [rip+0x1a1a]        # 0x140006048
   14000462e:	mov    rcx,rdi
   140004631:	call   QWORD PTR [rip+0x1a49]        # 0x140006080
   140004637:	mov    rcx,rsi
   14000463a:	call   QWORD PTR [rip+0x1d18]        # 0x140006358
   140004640:	cmp    r14,0xffffffffffffffff
   140004644:	je     0x14000464f
   140004646:	mov    rcx,r14
   140004649:	call   QWORD PTR [rip+0x1a31]        # 0x140006080
   14000464f:	test   r12,r12
   140004652:	je     0x14000465d
   140004654:	mov    rcx,r12
   140004657:	call   QWORD PTR [rip+0x1ce3]        # 0x140006340
   14000465d:	mov    ebx,DWORD PTR [rip+0x599d]        # 0x14000a000
   140004663:	lea    rcx,[rsp+0x240]
   14000466b:	call   0x140002110
   140004670:	mov    eax,ebx
   140004672:	add    rsp,0x8550
   140004679:	pop    r15
   14000467b:	pop    r14
   14000467d:	pop    r13
   14000467f:	pop    r12
   140004681:	pop    rdi
   140004682:	pop    rsi
   140004683:	pop    rbx
   140004684:	ret    
   140004685:	int3   
   140004686:	jmp    QWORD PTR [rip+0x1cb4]        # 0x140006340
   14000468c:	jmp    QWORD PTR [rip+0x1ca6]        # 0x140006338
   140004692:	jmp    QWORD PTR [rip+0x1cb8]        # 0x140006350
   140004698:	jmp    QWORD PTR [rip+0x1cba]        # 0x140006358
   14000469e:	jmp    QWORD PTR [rip+0x1cbc]        # 0x140006360
   1400046a4:	jmp    QWORD PTR [rip+0x19ee]        # 0x140006098
   1400046aa:	jmp    QWORD PTR [rip+0x19e0]        # 0x140006090
   1400046b0:	jmp    QWORD PTR [rip+0x1c72]        # 0x140006328
   1400046b6:	jmp    QWORD PTR [rip+0x1c64]        # 0x140006320
   1400046bc:	jmp    QWORD PTR [rip+0x199e]        # 0x140006060
   1400046c2:	jmp    QWORD PTR [rip+0x19a0]        # 0x140006068
   1400046c8:	jmp    QWORD PTR [rip+0x19a2]        # 0x140006070
   1400046ce:	jmp    QWORD PTR [rip+0x19a4]        # 0x140006078
   1400046d4:	jmp    QWORD PTR [rip+0x19a6]        # 0x140006080
   1400046da:	jmp    QWORD PTR [rip+0x1978]        # 0x140006058
   1400046e0:	jmp    QWORD PTR [rip+0x196a]        # 0x140006050
   1400046e6:	jmp    QWORD PTR [rip+0x195c]        # 0x140006048
   1400046ec:	jmp    QWORD PTR [rip+0x194e]        # 0x140006040
   1400046f2:	jmp    QWORD PTR [rip+0x1940]        # 0x140006038
   1400046f8:	jmp    QWORD PTR [rip+0x1932]        # 0x140006030
   1400046fe:	jmp    QWORD PTR [rip+0x19bc]        # 0x1400060c0
   140004704:	jmp    QWORD PTR [rip+0x19be]        # 0x1400060c8
   14000470a:	jmp    QWORD PTR [rip+0x19c0]        # 0x1400060d0
   140004710:	jmp    QWORD PTR [rip+0x19c2]        # 0x1400060d8
   140004716:	jmp    QWORD PTR [rip+0x19c4]        # 0x1400060e0
   14000471c:	jmp    QWORD PTR [rip+0x19c6]        # 0x1400060e8
   140004722:	int3   
   140004723:	int3   
   140004724:	mov    QWORD PTR [rcx],rdx
   140004727:	mov    QWORD PTR [rcx+0x8],r8
   14000472b:	mov    rax,rcx
   14000472e:	ret    
   14000472f:	int3   
   140004730:	sub    rsp,0x28
   140004734:	mov    rcx,QWORD PTR [rcx+0x8]
   140004738:	mov    rax,QWORD PTR [rcx]
   14000473b:	call   QWORD PTR [rax+0x10]
   14000473e:	test   rax,rax
   140004741:	je     0x140004751
   140004743:	mov    r8,QWORD PTR [rax]
   140004746:	mov    edx,0x1
   14000474b:	mov    rcx,rax
   14000474e:	call   QWORD PTR [r8]
   140004751:	add    rsp,0x28
   140004755:	ret    
   140004756:	int3   
   140004757:	int3   
   140004758:	rex push rbx
   14000475a:	sub    rsp,0x20
   14000475e:	jmp    0x14000478f
   140004760:	mov    rax,QWORD PTR [rbx]
   140004763:	mov    rcx,QWORD PTR [rbx+0x8]
   140004767:	mov    QWORD PTR [rip+0x5d1a],rax        # 0x14000a488
   14000476e:	mov    rax,QWORD PTR [rcx]
   140004771:	call   QWORD PTR [rax+0x10]
   140004774:	test   rax,rax
   140004777:	je     0x140004787
   140004779:	mov    r8,QWORD PTR [rax]
   14000477c:	mov    edx,0x1
   140004781:	mov    rcx,rax
   140004784:	call   QWORD PTR [r8]
   140004787:	mov    rcx,rbx
   14000478a:	call   0x1400048e0
   14000478f:	mov    rbx,QWORD PTR [rip+0x5cf2]        # 0x14000a488
   140004796:	test   rbx,rbx
   140004799:	jne    0x140004760
   14000479b:	add    rsp,0x20
   14000479f:	pop    rbx
   1400047a0:	ret    
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400047a9:	push   rdi
   1400047aa:	sub    rsp,0x20
   1400047ae:	mov    rbx,rcx
   1400047b1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400047b5:	mov    edi,edx
   1400047b7:	mov    rax,QWORD PTR [rcx]
   1400047ba:	call   QWORD PTR [rax+0x10]
   1400047bd:	test   rax,rax
   1400047c0:	je     0x1400047d0
   1400047c2:	mov    r8,QWORD PTR [rax]
   1400047c5:	mov    edx,0x1
   1400047ca:	mov    rcx,rax
   1400047cd:	call   QWORD PTR [r8]
   1400047d0:	test   dil,0x1
   1400047d4:	je     0x1400047de
   1400047d6:	mov    rcx,rbx
   1400047d9:	call   0x1400048e0
   1400047de:	mov    rax,rbx
   1400047e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047e6:	add    rsp,0x20
   1400047ea:	pop    rdi
   1400047eb:	ret    
   1400047ec:	rex push rbx
   1400047ee:	sub    rsp,0x20
   1400047f2:	mov    rbx,rcx
   1400047f5:	mov    ecx,0x10
   1400047fa:	call   0x1400048da
   1400047ff:	test   rax,rax
   140004802:	je     0x140004812
   140004804:	mov    rdx,QWORD PTR [rip+0x5c7d]        # 0x14000a488
   14000480b:	mov    QWORD PTR [rax+0x8],rbx
   14000480f:	mov    QWORD PTR [rax],rdx
   140004812:	mov    QWORD PTR [rip+0x5c6f],rax        # 0x14000a488
   140004819:	add    rsp,0x20
   14000481d:	pop    rbx
   14000481e:	ret    
   14000481f:	int3   
   140004820:	jmp    QWORD PTR [rip+0x18ca]        # 0x1400060f0
   140004826:	jmp    QWORD PTR [rip+0x18cc]        # 0x1400060f8
   14000482c:	jmp    QWORD PTR [rip+0x18ce]        # 0x140006100
   140004832:	jmp    QWORD PTR [rip+0x18d0]        # 0x140006108
   140004838:	jmp    QWORD PTR [rip+0x18d2]        # 0x140006110
   14000483e:	jmp    QWORD PTR [rip+0x18d4]        # 0x140006118
   140004844:	jmp    QWORD PTR [rip+0x18d6]        # 0x140006120
   14000484a:	jmp    QWORD PTR [rip+0x18d8]        # 0x140006128
   140004850:	jmp    QWORD PTR [rip+0x18da]        # 0x140006130
   140004856:	jmp    QWORD PTR [rip+0x18dc]        # 0x140006138
   14000485c:	jmp    QWORD PTR [rip+0x18de]        # 0x140006140
   140004862:	jmp    QWORD PTR [rip+0x18e0]        # 0x140006148
   140004868:	jmp    QWORD PTR [rip+0x18e2]        # 0x140006150
   14000486e:	jmp    QWORD PTR [rip+0x18e4]        # 0x140006158
   140004874:	jmp    QWORD PTR [rip+0x18e6]        # 0x140006160
   14000487a:	jmp    QWORD PTR [rip+0x18e8]        # 0x140006168
   140004880:	jmp    QWORD PTR [rip+0x18ea]        # 0x140006170
   140004886:	jmp    QWORD PTR [rip+0x18ec]        # 0x140006178
   14000488c:	jmp    QWORD PTR [rip+0x18ee]        # 0x140006180
   140004892:	jmp    QWORD PTR [rip+0x18f0]        # 0x140006188
   140004898:	jmp    QWORD PTR [rip+0x18f2]        # 0x140006190
   14000489e:	jmp    QWORD PTR [rip+0x18f4]        # 0x140006198
   1400048a4:	jmp    QWORD PTR [rip+0x18f6]        # 0x1400061a0
   1400048aa:	jmp    QWORD PTR [rip+0x18f8]        # 0x1400061a8
   1400048b0:	jmp    QWORD PTR [rip+0x18fa]        # 0x1400061b0
   1400048b6:	jmp    QWORD PTR [rip+0x18fc]        # 0x1400061b8
   1400048bc:	jmp    QWORD PTR [rip+0x18fe]        # 0x1400061c0
   1400048c2:	jmp    QWORD PTR [rip+0x1900]        # 0x1400061c8
   1400048c8:	jmp    QWORD PTR [rip+0x1902]        # 0x1400061d0
   1400048ce:	jmp    QWORD PTR [rip+0x1904]        # 0x1400061d8
   1400048d4:	jmp    QWORD PTR [rip+0x192e]        # 0x140006208
   1400048da:	jmp    QWORD PTR [rip+0x1930]        # 0x140006210
   1400048e0:	jmp    QWORD PTR [rip+0x1932]        # 0x140006218
   1400048e6:	int3   
   1400048e7:	int3   
   1400048e8:	rex push rbx
   1400048ea:	sub    rsp,0x20
   1400048ee:	cmp    QWORD PTR [rip+0x5bfa],0x0        # 0x14000a4f0
   1400048f6:	jne    0x14000492e
   1400048f8:	mov    edx,0x8
   1400048fd:	lea    ecx,[rdx+0x18]
   140004900:	call   QWORD PTR [rip+0x1982]        # 0x140006288
   140004906:	mov    rcx,rax
   140004909:	mov    rbx,rax
   14000490c:	call   QWORD PTR [rip+0x1716]        # 0x140006028
   140004912:	mov    QWORD PTR [rip+0x5bd7],rax        # 0x14000a4f0
   140004919:	mov    QWORD PTR [rip+0x5bc8],rax        # 0x14000a4e8
   140004920:	test   rbx,rbx
   140004923:	jne    0x14000492a
   140004925:	lea    eax,[rbx+0x18]
   140004928:	jmp    0x140004930
   14000492a:	and    QWORD PTR [rbx],0x0
   14000492e:	xor    eax,eax
   140004930:	add    rsp,0x20
   140004934:	pop    rbx
   140004935:	ret    
   140004936:	int3   
   140004937:	int3   
   140004938:	rex push rbx
   14000493a:	sub    rsp,0x20
   14000493e:	mov    rbx,rcx
   140004941:	mov    rcx,QWORD PTR [rip+0x5ba8]        # 0x14000a4f0
   140004948:	call   QWORD PTR [rip+0x16d2]        # 0x140006020
   14000494e:	mov    QWORD PTR [rsp+0x38],rax
   140004953:	cmp    rax,0xffffffffffffffff
   140004957:	jne    0x140004964
   140004959:	mov    rcx,rbx
   14000495c:	call   QWORD PTR [rip+0x193e]        # 0x1400062a0
   140004962:	jmp    0x1400049e2
   140004964:	mov    ecx,0x8
   140004969:	call   0x140004e3a
   14000496e:	nop
   14000496f:	mov    rcx,QWORD PTR [rip+0x5b7a]        # 0x14000a4f0
   140004976:	call   QWORD PTR [rip+0x16a4]        # 0x140006020
   14000497c:	mov    QWORD PTR [rsp+0x38],rax
   140004981:	mov    rcx,QWORD PTR [rip+0x5b60]        # 0x14000a4e8
   140004988:	call   QWORD PTR [rip+0x1692]        # 0x140006020
   14000498e:	mov    QWORD PTR [rsp+0x40],rax
   140004993:	mov    rcx,rbx
   140004996:	call   QWORD PTR [rip+0x168c]        # 0x140006028
   14000499c:	mov    rcx,rax
   14000499f:	lea    r8,[rsp+0x40]
   1400049a4:	lea    rdx,[rsp+0x38]
   1400049a9:	call   0x140004e4c
   1400049ae:	mov    rbx,rax
   1400049b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400049b6:	call   QWORD PTR [rip+0x166c]        # 0x140006028
   1400049bc:	mov    QWORD PTR [rip+0x5b2d],rax        # 0x14000a4f0
   1400049c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400049c8:	call   QWORD PTR [rip+0x165a]        # 0x140006028
   1400049ce:	mov    QWORD PTR [rip+0x5b13],rax        # 0x14000a4e8
   1400049d5:	mov    ecx,0x8
   1400049da:	call   0x140004e40
   1400049df:	mov    rax,rbx
   1400049e2:	add    rsp,0x20
   1400049e6:	pop    rbx
   1400049e7:	ret    
   1400049e8:	sub    rsp,0x28
   1400049ec:	call   0x140004938
   1400049f1:	neg    rax
   1400049f4:	sbb    eax,eax
   1400049f6:	neg    eax
   1400049f8:	dec    eax
   1400049fa:	add    rsp,0x28
   1400049fe:	ret    
   1400049ff:	int3   
   140004a00:	jmp    QWORD PTR [rip+0x181a]        # 0x140006220
   140004a06:	jmp    QWORD PTR [rip+0x181c]        # 0x140006228
   140004a0c:	jmp    QWORD PTR [rip+0x181e]        # 0x140006230
   140004a12:	jmp    QWORD PTR [rip+0x1820]        # 0x140006238
   140004a18:	jmp    QWORD PTR [rip+0x1822]        # 0x140006240
   140004a1e:	jmp    QWORD PTR [rip+0x1824]        # 0x140006248
   140004a24:	jmp    QWORD PTR [rip+0x1826]        # 0x140006250
   140004a2a:	jmp    QWORD PTR [rip+0x1828]        # 0x140006258
   140004a30:	jmp    QWORD PTR [rip+0x182a]        # 0x140006260
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	int3   
   140004a41:	int3   
   140004a42:	int3   
   140004a43:	int3   
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004a50:	sub    rsp,0x10
   140004a54:	mov    QWORD PTR [rsp],r10
   140004a58:	mov    QWORD PTR [rsp+0x8],r11
   140004a5d:	xor    r11,r11
   140004a60:	lea    r10,[rsp+0x18]
   140004a65:	sub    r10,rax
   140004a68:	cmovb  r10,r11
   140004a6c:	mov    r11,QWORD PTR gs:0x10
   140004a75:	cmp    r10,r11
   140004a78:	jae    0x140004a90
   140004a7a:	and    r10w,0xf000
   140004a80:	lea    r11,[r11-0x1000]
   140004a87:	mov    BYTE PTR [r11],0x0
   140004a8b:	cmp    r10,r11
   140004a8e:	jne    0x140004a80
   140004a90:	mov    r10,QWORD PTR [rsp]
   140004a94:	mov    r11,QWORD PTR [rsp+0x8]
   140004a99:	add    rsp,0x10
   140004a9d:	ret    
   140004a9e:	jmp    QWORD PTR [rip+0x17c4]        # 0x140006268
   140004aa4:	jmp    QWORD PTR [rip+0x17c6]        # 0x140006270
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	lea    rax,[rip+0x1dbd]        # 0x140006870
   140004ab3:	mov    QWORD PTR [rcx],rax
   140004ab6:	mov    rax,rcx
   140004ab9:	ret    
   140004aba:	int3   
   140004abb:	int3   
   140004abc:	mov    rax,rcx
   140004abf:	ret    
   140004ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140004aca:	push   rdi
   140004acb:	sub    rsp,0x20
   140004acf:	mov    esi,edx
   140004ad1:	mov    rbx,rcx
   140004ad4:	test   dl,0x2
   140004ad7:	je     0x140004b04
   140004ad9:	lea    rdi,[rcx-0x8]
   140004add:	lea    r9,[rip+0x6ca]        # 0x1400051ae
   140004ae4:	mov    edx,0x18
   140004ae9:	mov    r8d,DWORD PTR [rdi]
   140004aec:	call   0x140004e58
   140004af1:	test   sil,0x1
   140004af5:	je     0x140004aff
   140004af7:	mov    rcx,rdi
   140004afa:	call   0x1400048e0
   140004aff:	mov    rax,rdi
   140004b02:	jmp    0x140004b1a
   140004b04:	call   0x1400051ae
   140004b09:	test   sil,0x1
   140004b0d:	je     0x140004b17
   140004b0f:	mov    rcx,rbx
   140004b12:	call   0x1400048e0
   140004b17:	mov    rax,rbx
   140004b1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b1f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b24:	add    rsp,0x20
   140004b28:	pop    rdi
   140004b29:	ret    
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	sub    rsp,0x28
   140004b30:	mov    eax,0x5a4d
   140004b35:	cmp    WORD PTR [rip+0xffffffffffffb4c4],ax        # 0x140000000
   140004b3c:	je     0x140004b42
   140004b3e:	xor    ecx,ecx
   140004b40:	jmp    0x140004b7a
   140004b42:	movsxd rax,DWORD PTR [rip+0xffffffffffffb4f3]        # 0x14000003c
   140004b49:	lea    rcx,[rip+0xffffffffffffb4b0]        # 0x140000000
   140004b50:	add    rax,rcx
   140004b53:	cmp    DWORD PTR [rax],0x4550
   140004b59:	jne    0x140004b3e
   140004b5b:	mov    ecx,0x20b
   140004b60:	cmp    WORD PTR [rax+0x18],cx
   140004b64:	jne    0x140004b3e
   140004b66:	xor    ecx,ecx
   140004b68:	cmp    DWORD PTR [rax+0x84],0xe
   140004b6f:	jbe    0x140004b7a
   140004b71:	cmp    DWORD PTR [rax+0xf8],ecx
   140004b77:	setne  cl
   140004b7a:	mov    DWORD PTR [rip+0x5920],ecx        # 0x14000a4a0
   140004b80:	mov    ecx,0x1
   140004b85:	call   QWORD PTR [rip+0x1735]        # 0x1400062c0
   140004b8b:	or     rcx,0xffffffffffffffff
   140004b8f:	call   QWORD PTR [rip+0x1493]        # 0x140006028
   140004b95:	mov    rcx,QWORD PTR [rip+0x176c]        # 0x140006308
   140004b9c:	mov    QWORD PTR [rip+0x5945],rax        # 0x14000a4e8
   140004ba3:	mov    QWORD PTR [rip+0x5946],rax        # 0x14000a4f0
   140004baa:	mov    eax,DWORD PTR [rip+0x591c]        # 0x14000a4cc
   140004bb0:	mov    DWORD PTR [rcx],eax
   140004bb2:	mov    rdx,QWORD PTR [rip+0x16ef]        # 0x1400062a8
   140004bb9:	mov    eax,DWORD PTR [rip+0x5901]        # 0x14000a4c0
   140004bbf:	mov    DWORD PTR [rdx],eax
   140004bc1:	call   0x140005120
   140004bc6:	call   0x140004f7c
   140004bcb:	cmp    DWORD PTR [rip+0x5472],0x0        # 0x14000a044
   140004bd2:	jne    0x140004be1
   140004bd4:	lea    rcx,[rip+0x541]        # 0x14000511c
   140004bdb:	call   QWORD PTR [rip+0x1707]        # 0x1400062e8
   140004be1:	cmp    DWORD PTR [rip+0x5460],0xffffffff        # 0x14000a048
   140004be8:	jne    0x140004bf3
   140004bea:	or     ecx,0xffffffff
   140004bed:	call   QWORD PTR [rip+0x16ed]        # 0x1400062e0
   140004bf3:	xor    eax,eax
   140004bf5:	add    rsp,0x28
   140004bf9:	ret    
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	sub    rsp,0x38
   140004c00:	lea    rcx,[rip+0x551]        # 0x140005158
   140004c07:	call   0x1400049e8
   140004c0c:	mov    eax,DWORD PTR [rip+0x58b6]        # 0x14000a4c8
   140004c12:	mov    r9d,DWORD PTR [rip+0x58ab]        # 0x14000a4c4
   140004c19:	mov    DWORD PTR [rip+0x589d],eax        # 0x14000a4bc
   140004c1f:	lea    rax,[rip+0x5896]        # 0x14000a4bc
   140004c26:	lea    r8,[rip+0x5883]        # 0x14000a4b0
   140004c2d:	lea    rdx,[rip+0x5874]        # 0x14000a4a8
   140004c34:	lea    rcx,[rip+0x5869]        # 0x14000a4a4
   140004c3b:	mov    QWORD PTR [rsp+0x20],rax
   140004c40:	call   QWORD PTR [rip+0x1672]        # 0x1400062b8
   140004c46:	mov    DWORD PTR [rip+0x586c],eax        # 0x14000a4b8
   140004c4c:	test   eax,eax
   140004c4e:	jns    0x140004c5a
   140004c50:	mov    ecx,0x8
   140004c55:	call   0x140004f76
   140004c5a:	add    rsp,0x38
   140004c5e:	ret    
   140004c5f:	int3   
   140004c60:	mov    rax,QWORD PTR gs:0x30
   140004c69:	ret    
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	rex push rdi
   140004c6e:	sub    rsp,0x20
   140004c72:	mov    rax,QWORD PTR gs:0x30
   140004c7b:	mov    rcx,QWORD PTR [rax+0x8]
   140004c7f:	xor    edi,edi
   140004c81:	xor    eax,eax
   140004c83:	lock cmpxchg QWORD PTR [rip+0x5844],rcx        # 0x14000a4d0
   140004c8c:	je     0x140004c9c
   140004c8e:	cmp    rax,rcx
   140004c91:	jne    0x140004c9a
   140004c93:	mov    edi,0x1
   140004c98:	jmp    0x140004c9c
   140004c9a:	jmp    0x140004c81
   140004c9c:	mov    eax,DWORD PTR [rip+0x5836]        # 0x14000a4d8
   140004ca2:	cmp    eax,0x1
   140004ca5:	jne    0x140004cb1
   140004ca7:	lea    ecx,[rax+0x1e]
   140004caa:	call   0x140004f76
   140004caf:	jmp    0x140004cf0
   140004cb1:	mov    eax,DWORD PTR [rip+0x5821]        # 0x14000a4d8
   140004cb7:	test   eax,eax
   140004cb9:	jne    0x140004ce6
   140004cbb:	mov    DWORD PTR [rip+0x5813],0x1        # 0x14000a4d8
   140004cc5:	lea    rdx,[rip+0x1714]        # 0x1400063e0
   140004ccc:	lea    rcx,[rip+0x16ed]        # 0x1400063c0
   140004cd3:	call   0x14000519c
   140004cd8:	test   eax,eax
   140004cda:	je     0x140004cf0
   140004cdc:	mov    eax,0xff
   140004ce1:	jmp    0x140004dd6
   140004ce6:	mov    DWORD PTR [rip+0x57a8],0x1        # 0x14000a498
   140004cf0:	mov    eax,DWORD PTR [rip+0x57e2]        # 0x14000a4d8
   140004cf6:	cmp    eax,0x1
   140004cf9:	jne    0x140004d18
   140004cfb:	lea    rdx,[rip+0x16b6]        # 0x1400063b8
   140004d02:	lea    rcx,[rip+0x1667]        # 0x140006370
   140004d09:	call   0x1400051a2
   140004d0e:	mov    DWORD PTR [rip+0x57c0],0x2        # 0x14000a4d8
   140004d18:	test   edi,edi
   140004d1a:	jne    0x140004d25
   140004d1c:	xor    eax,eax
   140004d1e:	xchg   QWORD PTR [rip+0x57ab],rax        # 0x14000a4d0
   140004d25:	cmp    QWORD PTR [rip+0x57b3],0x0        # 0x14000a4e0
   140004d2d:	je     0x140004d51
   140004d2f:	lea    rcx,[rip+0x57aa]        # 0x14000a4e0
   140004d36:	call   0x140004fe0
   140004d3b:	test   eax,eax
   140004d3d:	je     0x140004d51
   140004d3f:	xor    r8d,r8d
   140004d42:	lea    edx,[r8+0x2]
   140004d46:	xor    ecx,ecx
   140004d48:	mov    rax,QWORD PTR [rip+0x5791]        # 0x14000a4e0
   140004d4f:	call   rax
   140004d51:	mov    rcx,QWORD PTR [rip+0x5758]        # 0x14000a4b0
   140004d58:	mov    rax,QWORD PTR [rip+0x15a1]        # 0x140006300
   140004d5f:	mov    QWORD PTR [rax],rcx
   140004d62:	mov    r8,QWORD PTR [rip+0x5747]        # 0x14000a4b0
   140004d69:	mov    rdx,QWORD PTR [rip+0x5738]        # 0x14000a4a8
   140004d70:	mov    ecx,DWORD PTR [rip+0x572e]        # 0x14000a4a4
   140004d76:	call   0x140003930
   140004d7b:	mov    DWORD PTR [rip+0x571b],eax        # 0x14000a49c
   140004d81:	cmp    DWORD PTR [rip+0x5718],0x0        # 0x14000a4a0
   140004d88:	jne    0x140004d92
   140004d8a:	mov    ecx,eax
   140004d8c:	call   QWORD PTR [rip+0x1536]        # 0x1400062c8
   140004d92:	cmp    DWORD PTR [rip+0x56ff],0x0        # 0x14000a498
   140004d99:	jne    0x140004da7
   140004d9b:	call   QWORD PTR [rip+0x1537]        # 0x1400062d8
   140004da1:	mov    eax,DWORD PTR [rip+0x56f5]        # 0x14000a49c
   140004da7:	jmp    0x140004dd6
   140004da9:	mov    DWORD PTR [rip+0x56ed],eax        # 0x14000a49c
   140004daf:	cmp    DWORD PTR [rip+0x56ea],0x0        # 0x14000a4a0
   140004db6:	jne    0x140004dc1
   140004db8:	mov    ecx,eax
   140004dba:	call   QWORD PTR [rip+0x1510]        # 0x1400062d0
   140004dc0:	int3   
   140004dc1:	cmp    DWORD PTR [rip+0x56d0],0x0        # 0x14000a498
   140004dc8:	jne    0x140004dd6
   140004dca:	call   QWORD PTR [rip+0x1508]        # 0x1400062d8
   140004dd0:	mov    eax,DWORD PTR [rip+0x56c6]        # 0x14000a49c
   140004dd6:	add    rsp,0x20
   140004dda:	pop    rdi
   140004ddb:	ret    
   140004ddc:	mov    eax,0x5a4d
   140004de1:	cmp    WORD PTR [rip+0xffffffffffffb218],ax        # 0x140000000
   140004de8:	je     0x140004ded
   140004dea:	xor    eax,eax
   140004dec:	ret    
   140004ded:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb248]        # 0x14000003c
   140004df4:	lea    rax,[rip+0xffffffffffffb205]        # 0x140000000
   140004dfb:	add    rcx,rax
   140004dfe:	cmp    DWORD PTR [rcx],0x4550
   140004e04:	jne    0x140004dea
   140004e06:	mov    eax,0x20b
   140004e0b:	cmp    WORD PTR [rcx+0x18],ax
   140004e0f:	jne    0x140004dea
   140004e11:	xor    eax,eax
   140004e13:	cmp    DWORD PTR [rcx+0x84],0xe
   140004e1a:	jbe    0x140004e25
   140004e1c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004e22:	setne  al
   140004e25:	ret    
   140004e26:	int3   
   140004e27:	int3   
   140004e28:	sub    rsp,0x28
   140004e2c:	call   0x140005070
   140004e31:	add    rsp,0x28
   140004e35:	jmp    0x140004c6c
   140004e3a:	jmp    QWORD PTR [rip+0x1438]        # 0x140006278
   140004e40:	jmp    QWORD PTR [rip+0x143a]        # 0x140006280
   140004e46:	jmp    QWORD PTR [rip+0x143c]        # 0x140006288
   140004e4c:	jmp    QWORD PTR [rip+0x143e]        # 0x140006290
   140004e52:	jmp    QWORD PTR [rip+0x1440]        # 0x140006298
   140004e58:	mov    rax,rsp
   140004e5b:	mov    QWORD PTR [rax+0x20],r9
   140004e5f:	mov    DWORD PTR [rax+0x18],r8d
   140004e63:	mov    QWORD PTR [rax+0x10],rdx
   140004e67:	push   rbx
   140004e68:	push   rsi
   140004e69:	push   rdi
   140004e6a:	push   r14
   140004e6c:	sub    rsp,0x38
   140004e70:	mov    r14,r9
   140004e73:	movsxd rdi,r8d
   140004e76:	mov    rsi,rdx
   140004e79:	and    DWORD PTR [rax-0x38],0x0
   140004e7d:	mov    rbx,rdi
   140004e80:	imul   rbx,rdx
   140004e84:	add    rbx,rcx
   140004e87:	mov    QWORD PTR [rax+0x8],rbx
   140004e8b:	dec    edi
   140004e8d:	mov    DWORD PTR [rsp+0x70],edi
   140004e91:	js     0x140004ea3
   140004e93:	sub    rbx,rsi
   140004e96:	mov    QWORD PTR [rsp+0x60],rbx
   140004e9b:	mov    rcx,rbx
   140004e9e:	call   r14
   140004ea1:	jmp    0x140004e8b
   140004ea3:	mov    DWORD PTR [rsp+0x20],0x1
   140004eab:	add    rsp,0x38
   140004eaf:	pop    r14
   140004eb1:	pop    rdi
   140004eb2:	pop    rsi
   140004eb3:	pop    rbx
   140004eb4:	ret    
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	sub    rsp,0x28
   140004ebc:	mov    rax,QWORD PTR [rcx]
   140004ebf:	cmp    DWORD PTR [rax],0xe06d7363
   140004ec5:	je     0x140004ece
   140004ec7:	xor    eax,eax
   140004ec9:	add    rsp,0x28
   140004ecd:	ret    
   140004ece:	call   0x1400051a8
   140004ed3:	int3   
   140004ed4:	mov    QWORD PTR [rsp+0x10],rbx
   140004ed9:	mov    DWORD PTR [rsp+0x18],r8d
   140004ede:	mov    QWORD PTR [rsp+0x8],rcx
   140004ee3:	push   rsi
   140004ee4:	push   rdi
   140004ee5:	push   r14
   140004ee7:	sub    rsp,0x40
   140004eeb:	mov    rsi,r9
   140004eee:	mov    edi,r8d
   140004ef1:	mov    r14,rdx
   140004ef4:	mov    rbx,rcx
   140004ef7:	dec    edi
   140004ef9:	mov    DWORD PTR [rsp+0x70],edi
   140004efd:	js     0x140004f0e
   140004eff:	sub    rbx,r14
   140004f02:	mov    QWORD PTR [rsp+0x60],rbx
   140004f07:	mov    rcx,rbx
   140004f0a:	call   rsi
   140004f0c:	jmp    0x140004ef7
   140004f0e:	jmp    0x140004f10
   140004f10:	mov    rbx,QWORD PTR [rsp+0x68]
   140004f15:	add    rsp,0x40
   140004f19:	pop    r14
   140004f1b:	pop    rdi
   140004f1c:	pop    rsi
   140004f1d:	ret    
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	sub    rsp,0x28
   140004f24:	mov    rax,QWORD PTR [rcx]
   140004f27:	cmp    DWORD PTR [rax],0xe06d7363
   140004f2d:	jne    0x140004f4b
   140004f2f:	cmp    DWORD PTR [rax+0x18],0x4
   140004f33:	jne    0x140004f4b
   140004f35:	mov    ecx,DWORD PTR [rax+0x20]
   140004f38:	lea    eax,[rcx-0x19930520]
   140004f3e:	cmp    eax,0x2
   140004f41:	jbe    0x140004f52
   140004f43:	cmp    ecx,0x1994000
   140004f49:	je     0x140004f52
   140004f4b:	xor    eax,eax
   140004f4d:	add    rsp,0x28
   140004f51:	ret    
   140004f52:	call   0x1400051a8
   140004f57:	int3   
   140004f58:	sub    rsp,0x28
   140004f5c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140004f20
   140004f63:	call   0x1400051b4
   140004f68:	xor    eax,eax
   140004f6a:	add    rsp,0x28
   140004f6e:	ret    
   140004f6f:	int3   
   140004f70:	jmp    QWORD PTR [rip+0x127a]        # 0x1400061f0
   140004f76:	jmp    QWORD PTR [rip+0x1334]        # 0x1400062b0
   140004f7c:	xor    eax,eax
   140004f7e:	ret    
   140004f7f:	int3   
   140004f80:	jmp    QWORD PTR [rip+0x1332]        # 0x1400062b8
   140004f86:	jmp    QWORD PTR [rip+0x1334]        # 0x1400062c0
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004f94:	xor    r9d,r9d
   140004f97:	mov    r10,rdx
   140004f9a:	add    r8,rcx
   140004f9d:	movzx  eax,WORD PTR [r8+0x14]
   140004fa2:	movzx  r11d,WORD PTR [r8+0x6]
   140004fa7:	add    rax,0x18
   140004fab:	add    rax,r8
   140004fae:	test   r11d,r11d
   140004fb1:	je     0x140004fd1
   140004fb3:	mov    edx,DWORD PTR [rax+0xc]
   140004fb6:	cmp    r10,rdx
   140004fb9:	jb     0x140004fc5
   140004fbb:	mov    ecx,DWORD PTR [rax+0x8]
   140004fbe:	add    ecx,edx
   140004fc0:	cmp    r10,rcx
   140004fc3:	jb     0x140004fd3
   140004fc5:	inc    r9d
   140004fc8:	add    rax,0x28
   140004fcc:	cmp    r9d,r11d
   140004fcf:	jb     0x140004fb3
   140004fd1:	xor    eax,eax
   140004fd3:	ret    
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	int3   
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140004fe5:	push   rdi
   140004fe6:	sub    rsp,0x20
   140004fea:	mov    rbx,rcx
   140004fed:	lea    rdi,[rip+0xffffffffffffb00c]        # 0x140000000
   140004ff4:	mov    rcx,rdi
   140004ff7:	call   0x140005030
   140004ffc:	test   eax,eax
   140004ffe:	je     0x140005022
   140005000:	sub    rbx,rdi
   140005003:	mov    rdx,rbx
   140005006:	mov    rcx,rdi
   140005009:	call   0x140004f90
   14000500e:	test   rax,rax
   140005011:	je     0x140005022
   140005013:	mov    eax,DWORD PTR [rax+0x24]
   140005016:	shr    eax,0x1f
   140005019:	not    eax
   14000501b:	and    eax,0x1
   14000501e:	jmp    0x140005022
   140005020:	xor    eax,eax
   140005022:	mov    rbx,QWORD PTR [rsp+0x30]
   140005027:	add    rsp,0x20
   14000502b:	pop    rdi
   14000502c:	ret    
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	mov    rax,rcx
   140005033:	mov    ecx,0x5a4d
   140005038:	cmp    WORD PTR [rax],cx
   14000503b:	je     0x140005040
   14000503d:	xor    eax,eax
   14000503f:	ret    
   140005040:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005044:	add    rcx,rax
   140005047:	xor    eax,eax
   140005049:	cmp    DWORD PTR [rcx],0x4550
   14000504f:	jne    0x14000505d
   140005051:	mov    edx,0x20b
   140005056:	cmp    WORD PTR [rcx+0x18],dx
   14000505a:	sete   al
   14000505d:	ret    
   14000505e:	jmp    QWORD PTR [rip+0x1264]        # 0x1400062c8
   140005064:	jmp    QWORD PTR [rip+0x1266]        # 0x1400062d0
   14000506a:	jmp    QWORD PTR [rip+0x1268]        # 0x1400062d8
   140005070:	mov    QWORD PTR [rsp+0x20],rbx
   140005075:	push   rbp
   140005076:	mov    rbp,rsp
   140005079:	sub    rsp,0x20
   14000507d:	mov    rax,QWORD PTR [rip+0x4fcc]        # 0x14000a050
   140005084:	and    QWORD PTR [rbp+0x18],0x0
   140005089:	movabs rbx,0x2b992ddfa232
   140005093:	cmp    rax,rbx
   140005096:	jne    0x140005107
   140005098:	lea    rcx,[rbp+0x18]
   14000509c:	call   QWORD PTR [rip+0xf5e]        # 0x140006000
   1400050a2:	mov    rax,QWORD PTR [rbp+0x18]
   1400050a6:	mov    QWORD PTR [rbp+0x10],rax
   1400050aa:	call   QWORD PTR [rip+0xf58]        # 0x140006008
   1400050b0:	mov    eax,eax
   1400050b2:	xor    QWORD PTR [rbp+0x10],rax
   1400050b6:	call   QWORD PTR [rip+0xf54]        # 0x140006010
   1400050bc:	lea    rcx,[rbp+0x20]
   1400050c0:	mov    eax,eax
   1400050c2:	xor    QWORD PTR [rbp+0x10],rax
   1400050c6:	call   QWORD PTR [rip+0xf4c]        # 0x140006018
   1400050cc:	mov    eax,DWORD PTR [rbp+0x20]
   1400050cf:	shl    rax,0x20
   1400050d3:	lea    rcx,[rbp+0x10]
   1400050d7:	xor    rax,QWORD PTR [rbp+0x20]
   1400050db:	xor    rax,QWORD PTR [rbp+0x10]
   1400050df:	xor    rax,rcx
   1400050e2:	movabs rcx,0xffffffffffff
   1400050ec:	and    rax,rcx
   1400050ef:	movabs rcx,0x2b992ddfa233
   1400050f9:	cmp    rax,rbx
   1400050fc:	cmove  rax,rcx
   140005100:	mov    QWORD PTR [rip+0x4f49],rax        # 0x14000a050
   140005107:	mov    rbx,QWORD PTR [rsp+0x48]
   14000510c:	not    rax
   14000510f:	mov    QWORD PTR [rip+0x4f42],rax        # 0x14000a058
   140005116:	add    rsp,0x20
   14000511a:	pop    rbp
   14000511b:	ret    
   14000511c:	xor    eax,eax
   14000511e:	ret    
   14000511f:	int3   
   140005120:	mov    QWORD PTR [rsp+0x8],rbx
   140005125:	push   rdi
   140005126:	sub    rsp,0x20
   14000512a:	lea    rbx,[rip+0x1f87]        # 0x1400070b8
   140005131:	lea    rdi,[rip+0x1f80]        # 0x1400070b8
   140005138:	jmp    0x140005148
   14000513a:	mov    rax,QWORD PTR [rbx]
   14000513d:	test   rax,rax
   140005140:	je     0x140005144
   140005142:	call   rax
   140005144:	add    rbx,0x8
   140005148:	cmp    rbx,rdi
   14000514b:	jb     0x14000513a
   14000514d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005152:	add    rsp,0x20
   140005156:	pop    rdi
   140005157:	ret    
   140005158:	mov    QWORD PTR [rsp+0x8],rbx
   14000515d:	push   rdi
   14000515e:	sub    rsp,0x20
   140005162:	lea    rbx,[rip+0x1f5f]        # 0x1400070c8
   140005169:	lea    rdi,[rip+0x1f58]        # 0x1400070c8
   140005170:	jmp    0x140005180
   140005172:	mov    rax,QWORD PTR [rbx]
   140005175:	test   rax,rax
   140005178:	je     0x14000517c
   14000517a:	call   rax
   14000517c:	add    rbx,0x8
   140005180:	cmp    rbx,rdi
   140005183:	jb     0x140005172
   140005185:	mov    rbx,QWORD PTR [rsp+0x30]
   14000518a:	add    rsp,0x20
   14000518e:	pop    rdi
   14000518f:	ret    
   140005190:	jmp    QWORD PTR [rip+0x114a]        # 0x1400062e0
   140005196:	jmp    QWORD PTR [rip+0x114c]        # 0x1400062e8
   14000519c:	jmp    QWORD PTR [rip+0x114e]        # 0x1400062f0
   1400051a2:	jmp    QWORD PTR [rip+0x1150]        # 0x1400062f8
   1400051a8:	jmp    QWORD PTR [rip+0x104a]        # 0x1400061f8
   1400051ae:	jmp    QWORD PTR [rip+0x115c]        # 0x140006310
   1400051b4:	jmp    QWORD PTR [rip+0x1046]        # 0x140006200
   1400051ba:	jmp    QWORD PTR [rip+0xe68]        # 0x140006028
   1400051c0:	jmp    QWORD PTR [rip+0xe5a]        # 0x140006020
   1400051c6:	jmp    QWORD PTR [rip+0xe4c]        # 0x140006018
   1400051cc:	jmp    QWORD PTR [rip+0xe3e]        # 0x140006010
   1400051d2:	jmp    QWORD PTR [rip+0xe30]        # 0x140006008
   1400051d8:	jmp    QWORD PTR [rip+0xe22]        # 0x140006000
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	lea    rcx,[rdx+0x30]
   1400051e7:	jmp    0x140001f70
   1400051ec:	lea    rcx,[rdx+0x30]
   1400051f3:	jmp    0x140002000
   1400051f8:	lea    rcx,[rdx+0x20]
   1400051ff:	jmp    0x140001fd0
   140005204:	mov    QWORD PTR [rsp+0x10],rdx
   140005209:	push   rbp
   14000520a:	sub    rsp,0x20
   14000520e:	mov    rbp,rdx
   140005211:	mov    rdx,QWORD PTR [rbp+0x80]
   140005218:	mov    rax,QWORD PTR [rdx]
   14000521b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000521f:	add    rcx,rdx
   140005222:	mov    r8b,0x1
   140005225:	mov    edx,0x4
   14000522a:	call   QWORD PTR [rip+0xf38]        # 0x140006168
   140005230:	nop
   140005231:	lea    rax,[rip+0xffffffffffffbfb9]        # 0x1400011f1
   140005238:	add    rsp,0x20
   14000523c:	pop    rbp
   14000523d:	ret    
   14000523e:	int3   
   14000523f:	int3   
   140005240:	lea    rcx,[rdx+0x28]
   140005247:	jmp    0x140001f90
   14000524c:	lea    rcx,[rdx+0x28]
   140005253:	jmp    0x140002020
   140005258:	mov    QWORD PTR [rsp+0x10],rdx
   14000525d:	push   rbp
   14000525e:	sub    rsp,0x20
   140005262:	mov    rbp,rdx
   140005265:	mov    rdx,QWORD PTR [rbp+0x70]
   140005269:	mov    rax,QWORD PTR [rdx]
   14000526c:	movsxd rcx,DWORD PTR [rax+0x4]
   140005270:	add    rcx,rdx
   140005273:	mov    r8b,0x1
   140005276:	mov    edx,0x4
   14000527b:	call   QWORD PTR [rip+0xee7]        # 0x140006168
   140005281:	nop
   140005282:	lea    rax,[rip+0xffffffffffffc159]        # 0x1400013e2
   140005289:	add    rsp,0x20
   14000528d:	pop    rbp
   14000528e:	ret    
   14000528f:	int3   
   140005290:	lea    rcx,[rdx+0x28]
   140005297:	jmp    0x140001f90
   14000529c:	lea    rcx,[rdx+0x28]
   1400052a3:	jmp    0x140002020
   1400052a8:	mov    QWORD PTR [rsp+0x10],rdx
   1400052ad:	push   rbp
   1400052ae:	sub    rsp,0x20
   1400052b2:	mov    rbp,rdx
   1400052b5:	mov    rdx,QWORD PTR [rbp+0x70]
   1400052b9:	mov    rax,QWORD PTR [rdx]
   1400052bc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400052c0:	add    rcx,rdx
   1400052c3:	mov    r8b,0x1
   1400052c6:	mov    edx,0x4
   1400052cb:	call   QWORD PTR [rip+0xe97]        # 0x140006168
   1400052d1:	nop
   1400052d2:	lea    rax,[rip+0xffffffffffffc2b3]        # 0x14000158c
   1400052d9:	add    rsp,0x20
   1400052dd:	pop    rbp
   1400052de:	ret    
   1400052df:	int3   
   1400052e0:	lea    rcx,[rdx+0x28]
   1400052e7:	jmp    0x140001f90
   1400052ec:	lea    rcx,[rdx+0x28]
   1400052f3:	jmp    0x140002020
   1400052f8:	mov    QWORD PTR [rsp+0x10],rdx
   1400052fd:	push   rbp
   1400052fe:	sub    rsp,0x20
   140005302:	mov    rbp,rdx
   140005305:	mov    rdx,QWORD PTR [rbp+0x70]
   140005309:	mov    rax,QWORD PTR [rdx]
   14000530c:	movsxd rcx,DWORD PTR [rax+0x4]
   140005310:	add    rcx,rdx
   140005313:	mov    r8b,0x1
   140005316:	mov    edx,0x4
   14000531b:	call   QWORD PTR [rip+0xe47]        # 0x140006168
   140005321:	nop
   140005322:	lea    rax,[rip+0xffffffffffffc450]        # 0x140001779
   140005329:	add    rsp,0x20
   14000532d:	pop    rbp
   14000532e:	ret    
   14000532f:	int3   
   140005330:	lea    rcx,[rdx+0x50]
   140005337:	rex.W jmp QWORD PTR [rip+0xd8a]        # 0x1400060c8
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    rcx,QWORD PTR [rdx+0x40]
   140005347:	rex.W jmp QWORD PTR [rip+0xde2]        # 0x140006130
   14000534e:	int3   
   14000534f:	int3   
   140005350:	rex push rbp
   140005352:	sub    rsp,0x20
   140005356:	mov    rbp,rdx
   140005359:	mov    eax,DWORD PTR [rbp+0x50]
   14000535c:	and    eax,0x1
   14000535f:	test   eax,eax
   140005361:	je     0x140005378
   140005363:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140005367:	mov    rcx,QWORD PTR [rbp+0x40]
   14000536b:	add    rcx,0x98
   140005372:	call   QWORD PTR [rip+0xde8]        # 0x140006160
   140005378:	add    rsp,0x20
   14000537c:	pop    rbp
   14000537d:	ret    
   14000537e:	mov    rcx,QWORD PTR [rdx+0x40]
   140005385:	add    rcx,0x20
   140005389:	rex.W jmp QWORD PTR [rip+0xe00]        # 0x140006190
   140005390:	mov    rcx,QWORD PTR [rdx+0x40]
   140005397:	jmp    0x140001f70
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400053a7:	jmp    0x140001f90
   1400053ac:	int3   
   1400053ad:	int3   
   1400053ae:	int3   
   1400053af:	int3   
   1400053b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400053b5:	push   rbp
   1400053b6:	sub    rsp,0x20
   1400053ba:	mov    rbp,rdx
   1400053bd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400053c1:	mov    QWORD PTR [rbp+0x68],rcx
   1400053c5:	xor    eax,eax
   1400053c7:	inc    rcx
   1400053ca:	je     0x1400053e2
   1400053cc:	cmp    rcx,0xffffffffffffffff
   1400053d0:	ja     0x1400053dc
   1400053d2:	call   0x1400048da
   1400053d7:	test   rax,rax
   1400053da:	jne    0x1400053e2
   1400053dc:	call   QWORD PTR [rip+0xcf6]        # 0x1400060d8
   1400053e2:	mov    QWORD PTR [rbp+0x78],rax
   1400053e6:	lea    rax,[rip+0xffffffffffffd009]        # 0x1400023f6
   1400053ed:	add    rsp,0x20
   1400053f1:	pop    rbp
   1400053f2:	ret    
   1400053f3:	int3   
   1400053f4:	mov    QWORD PTR [rsp+0x10],rdx
   1400053f9:	push   rbx
   1400053fa:	push   rbp
   1400053fb:	sub    rsp,0x28
   1400053ff:	mov    rbp,rdx
   140005402:	mov    rbx,QWORD PTR [rbp+0x60]
   140005406:	cmp    QWORD PTR [rbx+0x18],0x10
   14000540b:	jb     0x140005415
   14000540d:	mov    rcx,QWORD PTR [rbx]
   140005410:	call   0x1400048e0
   140005415:	mov    QWORD PTR [rbx+0x18],0xf
   14000541d:	mov    QWORD PTR [rbx+0x10],0x0
   140005425:	mov    BYTE PTR [rbx],0x0
   140005428:	xor    edx,edx
   14000542a:	xor    ecx,ecx
   14000542c:	call   0x140004a2a
   140005431:	nop
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	int3   
   14000543d:	int3   
   14000543e:	int3   
   14000543f:	int3   
   140005440:	mov    rcx,QWORD PTR [rdx+0x70]
   140005447:	jmp    0x140001e50
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	rex push rbp
   140005452:	sub    rsp,0x20
   140005456:	mov    rbp,rdx
   140005459:	mov    eax,DWORD PTR [rbp+0x8590]
   14000545f:	and    eax,0x1
   140005462:	test   eax,eax
   140005464:	je     0x140005481
   140005466:	and    DWORD PTR [rbp+0x8590],0xfffffffe
   14000546d:	lea    rcx,[rbp+0x240]
   140005474:	add    rcx,0x98
   14000547b:	call   QWORD PTR [rip+0xcdf]        # 0x140006160
   140005481:	add    rsp,0x20
   140005485:	pop    rbp
   140005486:	ret    
   140005487:	lea    rcx,[rdx+0x240]
   14000548e:	add    rcx,0x20
   140005492:	rex.W jmp QWORD PTR [rip+0xcf7]        # 0x140006190
   140005499:	mov    rcx,QWORD PTR [rdx+0x8540]
   1400054a0:	rex.W jmp QWORD PTR [rip+0xc89]        # 0x140006130
   1400054a7:	lea    rcx,[rdx+0x240]
   1400054ae:	jmp    0x140002110
   1400054b3:	lea    rcx,[rdx+0x128]
   1400054ba:	jmp    0x140001e50
   1400054bf:	lea    rcx,[rdx+0x168]
   1400054c6:	jmp    0x140001e50
   1400054cb:	lea    rcx,[rdx+0x188]
   1400054d2:	jmp    0x140001e50
   1400054d7:	lea    rcx,[rdx+0x148]
   1400054de:	jmp    0x140001e50
   1400054e3:	lea    rcx,[rdx+0x68]
   1400054ea:	jmp    0x140001e50
   1400054ef:	lea    rcx,[rdx+0x340]
   1400054f6:	jmp    0x140002110
   1400054fb:	lea    rcx,[rdx+0x40]
   140005502:	jmp    0x140001e50
   140005507:	lea    rcx,[rdx+0x88]
   14000550e:	jmp    0x140001e50
   140005513:	lea    rcx,[rdx+0x440]
   14000551a:	jmp    0x140002110
   14000551f:	lea    rcx,[rdx+0x1a8]
   140005526:	jmp    0x140001e50
   14000552b:	mov    QWORD PTR [rsp+0x10],rdx
   140005530:	push   rbp
   140005531:	sub    rsp,0x40
   140005535:	mov    rbp,rdx
   140005538:	mov    eax,DWORD PTR [rip+0x4ac2]        # 0x14000a000
   14000553e:	cmp    eax,0xffffffff
   140005541:	jne    0x14000554b
   140005543:	call   QWORD PTR [rip+0xb0f]        # 0x140006058
   140005549:	jmp    0x14000554f
   14000554b:	bts    eax,0x1d
   14000554f:	mov    DWORD PTR [rip+0x4aab],eax        # 0x14000a000
   140005555:	lea    rax,[rip+0xffffffffffffefc6]        # 0x140004522
   14000555c:	add    rsp,0x40
   140005560:	pop    rbp
   140005561:	ret    
   140005562:	int3   
   140005563:	lea    rcx,[rdx+0x40]
   14000556a:	jmp    0x140001e50
   14000556f:	rex push rbp
   140005571:	sub    rsp,0x20
   140005575:	mov    rbp,rdx
   140005578:	mov    ecx,0x8
   14000557d:	call   0x140004e40
   140005582:	nop
   140005583:	add    rsp,0x20
   140005587:	pop    rbp
   140005588:	ret    
   140005589:	int3   
   14000558a:	rex push rbp
   14000558c:	sub    rsp,0x20
   140005590:	mov    rbp,rdx
   140005593:	mov    rax,QWORD PTR [rcx]
   140005596:	mov    rdx,rcx
   140005599:	mov    ecx,DWORD PTR [rax]
   14000559b:	call   0x140004f70
   1400055a0:	nop
   1400055a1:	add    rsp,0x20
   1400055a5:	pop    rbp
   1400055a6:	ret    
   1400055a7:	int3   
   1400055a8:	rex push rbp
   1400055aa:	sub    rsp,0x20
   1400055ae:	mov    rbp,rdx
   1400055b1:	cmp    DWORD PTR [rbp+0x20],0x0
   1400055b5:	jne    0x1400055cd
   1400055b7:	mov    r9,QWORD PTR [rbp+0x78]
   1400055bb:	mov    r8d,DWORD PTR [rbp+0x70]
   1400055bf:	mov    rdx,QWORD PTR [rbp+0x68]
   1400055c3:	mov    rcx,QWORD PTR [rbp+0x60]
   1400055c7:	call   0x140004ed4
   1400055cc:	nop
   1400055cd:	add    rsp,0x20
   1400055d1:	pop    rbp
   1400055d2:	ret    
   1400055d3:	int3   
   1400055d4:	rex push rbp
   1400055d6:	sub    rsp,0x20
   1400055da:	mov    rbp,rdx
   1400055dd:	mov    QWORD PTR [rbp+0x38],rcx
   1400055e1:	mov    QWORD PTR [rbp+0x28],rcx
   1400055e5:	mov    rax,QWORD PTR [rbp+0x28]
   1400055e9:	mov    rcx,QWORD PTR [rax]
   1400055ec:	mov    QWORD PTR [rbp+0x30],rcx
   1400055f0:	mov    rax,QWORD PTR [rbp+0x30]
   1400055f4:	cmp    DWORD PTR [rax],0xe06d7363
   1400055fa:	je     0x140005608
   1400055fc:	mov    DWORD PTR [rbp+0x20],0x0
   140005603:	mov    eax,DWORD PTR [rbp+0x20]
   140005606:	jmp    0x14000560e
   140005608:	call   0x1400051a8
   14000560d:	nop
   14000560e:	add    rsp,0x20
   140005612:	pop    rbp
   140005613:	ret    
   140005614:	int3   
   140005615:	int3   
   140005616:	int3   
   140005617:	int3   
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	rex push rbp
   140005622:	sub    rsp,0x20
   140005626:	mov    rbp,rdx
   140005629:	mov    rax,QWORD PTR [rcx]
   14000562c:	xor    ecx,ecx
   14000562e:	cmp    DWORD PTR [rax],0xc0000005
   140005634:	sete   cl
   140005637:	mov    eax,ecx
   140005639:	add    rsp,0x20
   14000563d:	pop    rbp
   14000563e:	ret    
   14000563f:	int3   
   140005640:	lea    rax,[rip+0xfd9]        # 0x140006620
   140005647:	mov    QWORD PTR [rip+0x49ba],rax        # 0x14000a008
   14000564e:	ret    
   14000564f:	int3   
   140005650:	lea    rax,[rip+0xfc9]        # 0x140006620
   140005657:	mov    QWORD PTR [rip+0x49b2],rax        # 0x14000a010
   14000565e:	ret    
   14000565f:	int3   
   140005660:	lea    rax,[rip+0xfb9]        # 0x140006620
   140005667:	mov    QWORD PTR [rip+0x49aa],rax        # 0x14000a018
   14000566e:	ret    
   14000566f:	int3   
   140005670:	rex push rbx
   140005672:	sub    rsp,0x20
   140005676:	jmp    0x1400056a7
   140005678:	mov    rax,QWORD PTR [rbx]
   14000567b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000567f:	mov    QWORD PTR [rip+0x4e02],rax        # 0x14000a488
   140005686:	mov    rax,QWORD PTR [rcx]
   140005689:	call   QWORD PTR [rax+0x10]
   14000568c:	test   rax,rax
   14000568f:	je     0x14000569f
   140005691:	mov    r8,QWORD PTR [rax]
   140005694:	mov    edx,0x1
   140005699:	mov    rcx,rax
   14000569c:	call   QWORD PTR [r8]
   14000569f:	mov    rcx,rbx
   1400056a2:	call   0x1400048e0
   1400056a7:	mov    rbx,QWORD PTR [rip+0x4dda]        # 0x14000a488
   1400056ae:	test   rbx,rbx
   1400056b1:	jne    0x140005678
   1400056b3:	add    rsp,0x20
   1400056b7:	pop    rbx
   1400056b8:	ret    

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	adc    BYTE PTR [rax+0x0],0x0
   140006007:	add    BYTE PTR [rdx-0x70],ch
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	push   rsp
   140006011:	nop
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	cmp    dl,BYTE PTR [rax+0x0]
   14000601e:	add    BYTE PTR [rax],al
   140006020:	sub    dl,BYTE PTR [rax+0x0]
   140006026:	add    BYTE PTR [rax],al
   140006028:	sbb    dl,BYTE PTR [rax+0x0]
   14000602e:	add    BYTE PTR [rax],al
   140006030:	(bad)  
   140006031:	test   BYTE PTR [rax],al
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rsp+rax*4+0x0],dh
   14000603e:	add    BYTE PTR [rax],al
   140006040:	sahf   
   140006041:	test   BYTE PTR [rax],al
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdx+0x84],cl
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rsp+rax*4+0x0],bh
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rsp+rax*4+0x0],ch
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rsp+rax*4],ah
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	xor    al,BYTE PTR [rax+rax*1+0x0]
   14000606f:	add    BYTE PTR [rsi-0x7c],al
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	push   rdx
   140006079:	test   BYTE PTR [rax],al
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rsi-0x7c],bl
	...
   14000608e:	add    BYTE PTR [rax],al
   140006090:	push   0xffffffffffffff83
   140006092:	add    BYTE PTR [rax],al
   140006094:	add    BYTE PTR [rax],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	push   rsp
   140006099:	add    DWORD PTR [rax],0x0
	...
   1400060a8:	rex.X lea eax,[rax]
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rsi],al
   1400060b1:	lea    eax,[rax]
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdx],ch
   1400060b9:	lea    eax,[rax]
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    dl,dh
   1400060c1:	test   BYTE PTR [rax],al
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rsi],cl
   1400060c9:	test   DWORD PTR [rax],eax
   1400060cb:	add    BYTE PTR [rax],al
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rax],ch
   1400060d1:	test   DWORD PTR [rax],eax
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rdx-0x7b],cl
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	test   DWORD PTR fs:[rax],eax
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rsi+0x85],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rax+0x85],ch
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    dh,al
   1400060f9:	test   DWORD PTR [rax],eax
   1400060fb:	add    BYTE PTR [rax],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    dl,bh
   140006101:	test   DWORD PTR [rax],eax
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rax],bh
   140006109:	xchg   BYTE PTR [rax],al
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rax-0x7a],bl
   140006112:	add    BYTE PTR [rax],al
   140006114:	add    BYTE PTR [rax],al
   140006116:	add    BYTE PTR [rax],al
   140006118:	js     0x1400060a0
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006121:	xchg   BYTE PTR [rax],al
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    dl,dl
   140006129:	xchg   BYTE PTR [rax],al
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rsi],cl
   140006131:	xchg   DWORD PTR [rax],eax
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rdx-0x79],cl
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	mov    al,BYTE PTR [rdi+0x0]
   140006146:	add    BYTE PTR [rax],al
   140006148:	int3   
   140006149:	xchg   DWORD PTR [rax],eax
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rsi],cl
   140006151:	mov    BYTE PTR [rax],al
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    BYTE PTR [rsi-0x78],dl
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	(bad)  
   140006161:	mov    BYTE PTR [rax],al
   140006163:	add    BYTE PTR [rax],al
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    al,dl
   140006169:	mov    BYTE PTR [rax],al
   14000616b:	add    BYTE PTR [rax],al
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rax],dl
   140006171:	mov    DWORD PTR [rax],eax
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rsi-0x77],cl
   14000617a:	add    BYTE PTR [rax],al
   14000617c:	add    BYTE PTR [rax],al
   14000617e:	add    BYTE PTR [rax],al
   140006180:	xchg   edx,eax
   140006181:	mov    DWORD PTR [rax],eax
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    ah,dl
   140006189:	mov    DWORD PTR [rax],eax
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rax-0x76],al
   140006192:	add    BYTE PTR [rax],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax],al
   140006198:	jl     0x140006124
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	mov    esp,0x8a
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    dh,bh
   1400061a9:	mov    al,BYTE PTR [rax]
   1400061ab:	add    BYTE PTR [rax],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rbx+rcx*4+0x0],cl
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    BYTE PTR [rdx+0x8b],bl
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    al,ah
   1400061c1:	mov    eax,DWORD PTR [rax]
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rax],ah
   1400061c9:	mov    WORD PTR [rax],es
   1400061cb:	add    BYTE PTR [rax],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    BYTE PTR [rax-0x74],ah
   1400061d2:	add    BYTE PTR [rax],al
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	test   al,0x8c
   1400061da:	add    BYTE PTR [rax],al
   1400061dc:	add    BYTE PTR [rax],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	lock mov WORD PTR [rax],es
	...
   1400061ef:	add    dh,ch
   1400061f1:	mov    es,WORD PTR [rax]
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	test   BYTE PTR [rdi+0x0],0x0
   140006207:	add    BYTE PTR [rbp+rcx*4+0x0],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	nop
   140006211:	lea    eax,[rax]
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rdx+0x8d],ah
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rdx+0x8d],dh
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    BYTE PTR [rdx+0x8d],bh
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    ah,al
   140006231:	lea    eax,[rax]
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    ah,ah
   140006239:	lea    eax,[rax]
   14000623b:	add    BYTE PTR [rax],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    dh,ch
   140006241:	lea    eax,[rax]
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rax],dl
   140006249:	mov    es,WORD PTR [rax]
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rsi+rcx*4],dh
   140006252:	add    BYTE PTR [rax],al
   140006254:	add    BYTE PTR [rax],al
   140006256:	add    BYTE PTR [rax],al
   140006258:	push   rax
   140006259:	mov    es,WORD PTR [rax]
   14000625b:	add    BYTE PTR [rax],al
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rsi-0x72],ah
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	jl     0x1400061f8
   14000626a:	add    BYTE PTR [rax],al
   14000626c:	add    BYTE PTR [rax],al
   14000626e:	add    BYTE PTR [rax],al
   140006270:	xchg   BYTE PTR [rsi+0x0],cl
   140006276:	add    BYTE PTR [rax],al
   140006278:	sahf   
   140006279:	mov    es,WORD PTR [rax]
   14000627b:	add    BYTE PTR [rax],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rsi+0x8e],ah
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rax+0x8e],dh
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rsi+0x8e],bh
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    ah,cl
   140006299:	mov    es,WORD PTR [rax]
   14000629b:	add    BYTE PTR [rax],al
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    ah,ah
   1400062a1:	mov    es,WORD PTR [rax]
   1400062a3:	add    BYTE PTR [rax],al
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    BYTE PTR [rax+0x8f],ah
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    ah,bh
   1400062b1:	mov    es,WORD PTR [rax]
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rdx],cl
   1400062b9:	pop    QWORD PTR [rax]
   1400062bb:	add    BYTE PTR [rax],al
   1400062bd:	add    BYTE PTR [rax],al
   1400062bf:	add    BYTE PTR [rdx],bl
   1400062c1:	pop    QWORD PTR [rax]
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rdi+rcx*4],ch
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	xor    al,0x8f
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	cmp    al,0x8f
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	add    BYTE PTR [rax],al
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	rex.RX pop QWORD PTR [rax]
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rdi+rcx*4+0x0],bl
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rax-0x71],dh
   1400062f2:	add    BYTE PTR [rax],al
   1400062f4:	add    BYTE PTR [rax],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	jle    0x140006289
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	add    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	mov    cl,BYTE PTR [rdi+0x0]
   140006306:	add    BYTE PTR [rax],al
   140006308:	xchg   esi,eax
   140006309:	pop    QWORD PTR [rax]
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    al,al
   140006311:	pop    QWORD PTR [rax]
	...
   14000631f:	add    dh,al
   140006321:	add    DWORD PTR [rax],0x0
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	mov    al,BYTE PTR [rbx+0x0]
	...
   140006336:	add    BYTE PTR [rax],al
   140006338:	ret    0x82
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rax+0x82],bh
	...
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    al,bl
   140006351:	(bad)  
   140006352:	add    BYTE PTR [rax],al
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	test   BYTE PTR [rdx+0x0],0x0
   14000635f:	add    BYTE PTR [rdx],dl
   140006361:	add    DWORD PTR [rax],0x0
	...
   140006378:	cld    
   140006379:	rex.WXB add BYTE PTR [r8+0x1],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    BYTE PTR [rax+0x1400010],cl
   140006385:	add    BYTE PTR [rax],al
   140006387:	add    BYTE PTR [rax+0x10],dh
   14000638a:	add    BYTE PTR [rax+0x1],al
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    BYTE PTR [rax],dh
   140006391:	adc    BYTE PTR [rax],al
   140006393:	rex add DWORD PTR [rax],eax
   140006396:	add    BYTE PTR [rax],al
   140006398:	push   rax
   140006399:	adc    BYTE PTR [rax],al
   14000639b:	rex add DWORD PTR [rax],eax
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	add    BYTE PTR [rax],dl
   1400063a2:	add    BYTE PTR [rax+0x1],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rax],dl
   1400063a9:	adc    BYTE PTR [rax],al
   1400063ab:	rex add DWORD PTR [rax],eax
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	and    BYTE PTR [rax],dl
   1400063b2:	add    BYTE PTR [rax+0x1],al
	...
   1400063c5:	add    BYTE PTR [rax],al
   1400063c7:	add    BYTE PTR [rbx+rcx*2],ch
   1400063ca:	add    BYTE PTR [rax+0x1],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    al,ch
   1400063d1:	rex.W add BYTE PTR [rax+0x1],al
   1400063d5:	add    BYTE PTR [rax],al
   1400063d7:	add    BYTE PTR [rax+0x4f],bl
   1400063da:	add    BYTE PTR [rax+0x1],al
	...
   1400063f1:	add    BYTE PTR [rax],al
   1400063f3:	add    cl,ah
   1400063f5:	sbb    BYTE PTR [rcx+0x58],al
   1400063fb:	add    BYTE PTR [rdx],al
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rdi+0x0],cl
   140006402:	add    BYTE PTR [rax],al
   140006404:	add    BYTE PTR [rcx+0x0],ch
   140006407:	add    BYTE PTR [rax],al
   140006409:	push   rbp
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	loope  0x14000642a
   140006412:	sbb    DWORD PTR [rax+0x0],0xc000000
   140006419:	add    BYTE PTR [rax],al
   14000641b:	add    BYTE PTR [rax+rax*1],dl
   14000641e:	add    BYTE PTR [rax],al
   140006420:	push   rax
   140006421:	imul   eax,DWORD PTR [rax],0x555000
   140006427:	add    bh,bh
   140006429:	(bad)  
   14000642a:	(bad)  
   14000642b:	inc    DWORD PTR [rax]
   14000642d:	add    BYTE PTR [rax],al
   14000642f:	add    BYTE PTR [rdx],ah
   140006431:	add    eax,0x41993
   140006436:	add    BYTE PTR [rax],al
   140006438:	mov    WORD PTR [rcx+0x0],?
   14000643b:	add    BYTE PTR [rdx],al
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rcx+rsi*2+0x80000],ch
   140006446:	add    BYTE PTR [rax],al
   140006448:	add    BYTE PTR [rdx+0x0],dh
   14000644b:	add    BYTE PTR [rax],ah
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    BYTE PTR [rax],al
   140006451:	add    BYTE PTR [rax],al
   140006453:	add    BYTE PTR [rcx],al
   140006455:	add    BYTE PTR [rax],al
   140006457:	add    BYTE PTR [rdx],ah
   140006459:	add    eax,0x11993
   14000645e:	add    BYTE PTR [rax],al
   140006460:	sub    BYTE PTR [rbx+0x0],dh
	...
   14000646b:	add    BYTE PTR [rbx],al
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rax],dh
   140006471:	jae    0x140006473
   140006473:	add    BYTE PTR [rax],ah
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    BYTE PTR [rax],al
   140006479:	add    BYTE PTR [rax],al
   14000647b:	add    BYTE PTR [rcx],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rdx],ah
   140006481:	add    eax,0x11993
   140006486:	add    BYTE PTR [rax],al
   140006488:	mov    eax,0x73
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax],al
   140006491:	add    BYTE PTR [rax],al
   140006493:	add    BYTE PTR [rbx],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    al,al
   140006499:	jae    0x14000649b
   14000649b:	add    BYTE PTR [rax],ah
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    BYTE PTR [rax],al
   1400064a1:	add    BYTE PTR [rax],al
   1400064a3:	add    BYTE PTR [rcx],al
   1400064a5:	add    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rdx],ah
   1400064a9:	add    eax,0x11993
   1400064ae:	add    BYTE PTR [rax],al
   1400064b0:	or     BYTE PTR [rax+rax*1+0x0],dh
	...
   1400064bc:	add    eax,DWORD PTR [rax]
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	adc    BYTE PTR [rax+rax*1+0x0],dh
   1400064c4:	add    BYTE PTR [rax],al
   1400064c7:	add    BYTE PTR [rax],al
   1400064c9:	add    BYTE PTR [rax],al
   1400064cb:	add    BYTE PTR [rcx],al
   1400064cd:	add    BYTE PTR [rax],al
   1400064cf:	add    BYTE PTR [rdx],ah
   1400064d1:	add    eax,0x111993
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	rex.W je 0x1400064db
   1400064db:	add    BYTE PTR [rcx],al
   1400064dd:	add    BYTE PTR [rax],al
   1400064df:	add    al,dl
   1400064e1:	je     0x1400064e3
   1400064e3:	add    BYTE PTR [rsi],ah
   1400064e5:	add    BYTE PTR [rax],al
   1400064e7:	add    BYTE PTR [rax],al
   1400064e9:	jne    0x1400064eb
   1400064eb:	add    BYTE PTR [rax],dh
   1400064ed:	add    al,BYTE PTR [rax]
   1400064ef:	add    BYTE PTR [rax],al
   1400064f1:	add    BYTE PTR [rax],al
   1400064f3:	add    BYTE PTR [rcx],al
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    BYTE PTR [rdx],ah
   1400064f9:	add    eax,0x21993
   1400064fe:	add    BYTE PTR [rax],al
   140006500:	(bad)  
   140006501:	jbe    0x140006503
	...
   14000650b:	add    BYTE PTR [rax+rax*1],al
   14000650e:	add    BYTE PTR [rax],al
   140006510:	jo     0x140006588
   140006512:	add    BYTE PTR [rax],al
   140006514:	and    BYTE PTR [rax],al
   140006516:	add    BYTE PTR [rax],al
   140006518:	add    BYTE PTR [rax],al
   14000651a:	add    BYTE PTR [rax],al
   14000651c:	add    DWORD PTR [rax],eax
   14000651e:	add    BYTE PTR [rax],al
   140006520:	and    al,BYTE PTR [rip+0x11993]        # 0x140017eb9
   140006526:	add    BYTE PTR [rax],al
   140006528:	mov    esp,0x76
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    BYTE PTR [rax],al
   140006531:	add    BYTE PTR [rax],al
   140006533:	add    BYTE PTR [rbx],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    al,cl
   140006539:	jbe    0x14000653b
   14000653b:	add    BYTE PTR [rax],ah
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    BYTE PTR [rax],al
   140006541:	add    BYTE PTR [rax],al
   140006543:	add    BYTE PTR [rcx],al
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    BYTE PTR [rdx],ah
   140006549:	add    eax,0x41993
   14000654e:	add    BYTE PTR [rax],al
   140006550:	add    BYTE PTR [rax+0x0],bh
   140006553:	add    BYTE PTR [rcx],al
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    BYTE PTR [rax],ah
   140006559:	js     0x14000655b
   14000655b:	add    BYTE PTR [rcx],cl
   14000655d:	add    BYTE PTR [rax],al
   14000655f:	add    BYTE PTR [rax+0x78],dl
   140006562:	add    BYTE PTR [rax],al
   140006564:	and    BYTE PTR [rax],al
   140006566:	add    BYTE PTR [rax],al
   140006568:	add    BYTE PTR [rax],al
   14000656a:	add    BYTE PTR [rax],al
   14000656c:	add    DWORD PTR [rax],eax
   14000656e:	add    BYTE PTR [rax],al
   140006570:	and    al,BYTE PTR [rip+0x41993]        # 0x140047f09
   140006576:	add    BYTE PTR [rax],al
   140006578:	(bad)  
   140006579:	js     0x14000657b
   14000657b:	add    BYTE PTR [rcx],al
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    ah,ah
   140006581:	js     0x140006583
   140006583:	add    BYTE PTR [rcx],cl
   140006585:	add    BYTE PTR [rax],al
   140006587:	add    BYTE PTR [rax],dl
   140006589:	jns    0x14000658b
   14000658b:	add    BYTE PTR [rax],ah
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    BYTE PTR [rax],al
   140006591:	add    BYTE PTR [rax],al
   140006593:	add    BYTE PTR [rcx],al
   140006595:	add    BYTE PTR [rax],al
   140006597:	add    BYTE PTR [rdx],ah
   140006599:	add    eax,0x51993
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	test   BYTE PTR [rcx+0x0],bh
   1400065a3:	add    BYTE PTR [rcx],al
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rcx+rdi*2+0xb0000],ch
   1400065ae:	add    BYTE PTR [rax],al
   1400065b0:	loopne 0x14000662b
   1400065b2:	add    BYTE PTR [rax],al
   1400065b4:	sub    BYTE PTR [rax],al
   1400065b6:	add    BYTE PTR [rax],al
   1400065b8:	add    BYTE PTR [rax],al
   1400065ba:	add    BYTE PTR [rax],al
   1400065bc:	add    DWORD PTR [rax],eax
   1400065be:	add    BYTE PTR [rax],al
   1400065c0:	and    al,BYTE PTR [rip+0x41993]        # 0x140047f59
   1400065c6:	add    BYTE PTR [rax],al
   1400065c8:	fs jp  0x1400065cb
   1400065cb:	add    BYTE PTR [rcx],al
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    BYTE PTR [rdx+rdi*2+0x90000],al
   1400065d6:	add    BYTE PTR [rax],al
   1400065d8:	mov    al,0x7a
   1400065da:	add    BYTE PTR [rax],al
   1400065dc:	and    BYTE PTR [rax],al
   1400065de:	add    BYTE PTR [rax],al
   1400065e0:	add    BYTE PTR [rax],al
   1400065e2:	add    BYTE PTR [rax],al
   1400065e4:	add    DWORD PTR [rax],eax
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	and    al,BYTE PTR [rip+0x11993]        # 0x140017f81
   1400065ee:	add    BYTE PTR [rax],al
   1400065f0:	and    al,0x7b
	...
   1400065fa:	add    BYTE PTR [rax],al
   1400065fc:	add    eax,DWORD PTR [rax]
   1400065fe:	add    BYTE PTR [rax],al
   140006600:	xor    BYTE PTR [rbx+0x0],bh
   140006603:	add    BYTE PTR [rax],ah
   140006605:	add    BYTE PTR [rax],al
   140006607:	add    BYTE PTR [rax],al
   140006609:	add    BYTE PTR [rax],al
   14000660b:	add    BYTE PTR [rcx],al
	...
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rax],dh
   140006619:	outs   dx,BYTE PTR ds:[rsi]
   14000661a:	add    BYTE PTR [rax+0x1],al
   14000661d:	add    BYTE PTR [rax],al
   14000661f:	add    BYTE PTR [rax+0x1400022],dl
   140006625:	add    BYTE PTR [rax],al
   140006627:	add    ah,dl
   140006629:	rex.W add BYTE PTR [rax+0x1],al
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    ah,dl
   140006631:	rex.W add BYTE PTR [rax+0x1],al
   140006635:	add    BYTE PTR [rax],al
   140006637:	add    BYTE PTR [rax+0x2d],al
   14000663a:	add    BYTE PTR [rax+0x1],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax+0x140002d],al
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rax+0x140002d],ah
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rax+0x140006e],ch
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rax],al
   140006659:	and    al,BYTE PTR [rax]
   14000665b:	rex add DWORD PTR [rax],eax
   14000665e:	add    BYTE PTR [rax],al
   140006660:	mov    al,0x30
   140006662:	add    BYTE PTR [rax+0x1],al
   140006665:	add    BYTE PTR [rax],al
   140006667:	add    BYTE PTR [rax+0x2f],dh
   14000666a:	add    BYTE PTR [rax+0x1],al
   14000666d:	add    BYTE PTR [rax],al
   14000666f:	add    BYTE PTR [rax+0x2d],al
   140006672:	add    BYTE PTR [rax+0x1],al
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rax+0x140002d],al
   14000667d:	add    BYTE PTR [rax],al
   14000667f:	add    BYTE PTR [rax+0x140002d],ah
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rdi+0x65],ah
   14000668a:	outs   dx,BYTE PTR ds:[rsi]
   14000668b:	gs jb  0x1400066f7
   14000668e:	movsxd eax,DWORD PTR [rax]
   140006690:	jne    0x140006700
   140006692:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140006696:	outs   dx,BYTE PTR ds:[rsi]
   140006697:	and    BYTE PTR [rbp+0x72],ah
   14000669a:	jb     0x14000670b
   14000669c:	jb     0x14000669e
   14000669e:	add    BYTE PTR [rax],al
   1400066a0:	sub    BYTE PTR [rdi+0x0],ch
   1400066a3:	rex add DWORD PTR [rax],eax
   1400066a6:	add    BYTE PTR [rax],al
   1400066a8:	xor    BYTE PTR [rdx],ah
   1400066aa:	add    BYTE PTR [rax+0x1],al
   1400066ad:	add    BYTE PTR [rax],al
   1400066af:	add    al,al
   1400066b1:	xor    BYTE PTR [rax],al
   1400066b3:	rex add DWORD PTR [rax],eax
   1400066b6:	add    BYTE PTR [rax],al
   1400066b8:	loopne 0x1400066e9
   1400066ba:	add    BYTE PTR [rax+0x1],al
   1400066bd:	add    BYTE PTR [rax],al
   1400066bf:	add    BYTE PTR [rax+0x2d],al
   1400066c2:	add    BYTE PTR [rax+0x1],al
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	add    BYTE PTR [rax+0x140002d],al
   1400066cd:	add    BYTE PTR [rax],al
   1400066cf:	add    BYTE PTR [rax+0x140002d],ah
   1400066d5:	add    BYTE PTR [rax],al
   1400066d7:	add    BYTE PTR [rcx+0x6f],ch
   1400066da:	jae    0x140006750
   1400066dc:	jb     0x140006743
   1400066de:	(bad)  
   1400066df:	ins    DWORD PTR es:[rdi],dx
	...
   1400066e8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400066ef:	ins    DWORD PTR es:[rdi],dx
   1400066f0:	and    BYTE PTR [rbx+0x74],dh
   1400066f3:	jb     0x14000675a
   1400066f5:	(bad)  
   1400066f6:	ins    DWORD PTR es:[rdi],dx
   1400066f7:	and    BYTE PTR [rbp+0x72],ah
   1400066fa:	jb     0x14000676b
   1400066fc:	jb     0x1400066fe
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	mov    al,0x6f
   140006702:	add    BYTE PTR [rax+0x1],al
   140006705:	add    BYTE PTR [rax],al
   140006707:	add    BYTE PTR [rax+0x22],ah
   14000670a:	add    BYTE PTR [rax+0x1],al
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	add    al,dl
   140006711:	xor    BYTE PTR [rax],al
   140006713:	rex add DWORD PTR [rax],eax
   140006716:	add    BYTE PTR [rax],al
   140006718:	xor    BYTE PTR [rax],dh
   14000671a:	add    BYTE PTR [rax+0x1],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rax],al
   140006721:	sub    eax,0x14000
   140006726:	add    BYTE PTR [rax],al
   140006728:	sub    BYTE PTR [rip+0x14000],0x0        # 0x14001a72f
   14000672f:	add    BYTE PTR [rax+0x140002d],ah
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rbx+0x79],dh
   14000673a:	jae    0x1400067b0
   14000673c:	gs ins DWORD PTR es:[rdi],dx
   14000673e:	add    BYTE PTR [rax],al
   140006740:	(bad)
   140006745:	(bad)  
   140006746:	jae    0x1400067bc
	...
   140006750:	jo     0x1400067bb
   140006752:	add    BYTE PTR [rax+0x1],al
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    BYTE PTR [rax+0x1400021],dl
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rsi+0x1400048],bl
   140006765:	add    BYTE PTR [rax],al
   140006767:	add    BYTE PTR [rax+rcx*2+0x14000],ah
   14000676e:	add    BYTE PTR [rax],al
   140006770:	shl    BYTE PTR [rcx],0x0
   140006773:	rex add DWORD PTR [rax],eax
   140006776:	add    BYTE PTR [rax],al
   140006778:	and    BYTE PTR [rax+rax*1],dh
   14000677b:	rex add DWORD PTR [rax],eax
   14000677e:	add    BYTE PTR [rax],al
   140006780:	mov    dh,0x48
   140006782:	add    BYTE PTR [rax+0x1],al
   140006785:	add    BYTE PTR [rax],al
   140006787:	add    BYTE PTR [rax+0x1400038],ah
   14000678d:	add    BYTE PTR [rax],al
   14000678f:	add    dl,al
   140006791:	rex.W add BYTE PTR [rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    al,cl
   140006799:	rex.W add BYTE PTR [rax+0x1],al
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    dh,cl
   1400067a1:	rex.W add BYTE PTR [rax+0x1],al
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	add    BYTE PTR [rax+0x34],dh
   1400067aa:	add    BYTE PTR [rax+0x1],al
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rax],al
   1400067b1:	add    BYTE PTR ss:[rax+0x1],al
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    BYTE PTR [rax+0x1400048],dh
   1400067bd:	add    BYTE PTR [rax],al
   1400067bf:	add    BYTE PTR [rax+rcx*2+0x14000],bh
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	stos   BYTE PTR es:[rdi],al
   1400067c9:	rex.W add BYTE PTR [rax+0x1],al
   1400067cd:	add    BYTE PTR [rax],al
   1400067cf:	add    BYTE PTR [rax+0x6c],dl
   1400067d2:	add    BYTE PTR [rax+0x1],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    BYTE PTR [rcx+riz*1+0x14000],al
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	add    BYTE PTR [rax],al
   1400067e2:	add    BYTE PTR [rax],al
   1400067e4:	cwde   
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rax],al
   1400067e9:	add    BYTE PTR [rax],al
   1400067eb:	add    BYTE PTR [rax+0x73000000],cl
   1400067f1:	je     0x140006865
   1400067f3:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6f7420
   1400067fa:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400067fe:	add    BYTE PTR [ecx+0x6e],ch
   140006802:	jbe    0x140006865
   140006804:	ins    BYTE PTR es:[rdi],dx
   140006805:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000680d:	and    BYTE PTR [eax+0x6f],dh
   140006811:	jae    0x14000687c
   140006813:	je     0x14000687e
   140006815:	outs   dx,DWORD PTR ds:[rsi]
   140006816:	outs   dx,BYTE PTR ds:[rsi]
   140006817:	add    BYTE PTR [rcx],bh
   140006819:	xor    ch,BYTE PTR cs:[rsi]
   14000681c:	xor    BYTE PTR [rsi],ch
   14000681e:	xor    eax,0x34363831
   140006823:	xor    DWORD PTR [rax],eax
   140006825:	add    BYTE PTR [rax],al
   140006827:	add    BYTE PTR [rdx+0x61],cl
   14000682a:	outs   dx,BYTE PTR ds:[rsi]
   14000682b:	and    BYTE PTR [rcx],dh
   14000682d:	cmp    DWORD PTR [rax],esp
   14000682f:	xor    dh,BYTE PTR [rax]
   140006831:	xor    DWORD PTR [rdi],esi
   140006833:	add    BYTE PTR [rax],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    BYTE PTR [rdx+0x69],ah
   14000683a:	outs   dx,BYTE PTR ds:[rsi]
   14000683b:	pop    rsp
   14000683c:	ja     0x1400068a7
   14000683e:	outs   dx,BYTE PTR ds:[rsi]
   14000683f:	ss xor al,0x5c
   140006842:	rex.WRB (bad) 
   140006844:	je     0x1400068ae
   140006846:	push   rdi
   140006847:	outs   dx,DWORD PTR ds:[rsi]
   140006848:	jb     0x1400068b5
   14000684a:	jae    0x1400068ab
   14000684c:	push   rax
   14000684d:	jb     0x1400068b8
   14000684f:	jbe    0x1400068ba
   140006851:	ins    BYTE PTR es:[rdi],dx
   140006852:	gs addr32 gs fs pop rdi
   140006857:	rex.WRXB jo 0x1400068bf
   14000685a:	jb     0x1400068bd
   14000685c:	je     0x1400068c7
   14000685e:	outs   dx,DWORD PTR ds:[rsi]
   14000685f:	outs   dx,BYTE PTR ds:[rsi]
   140006860:	cs gs js 0x1400068c9
   140006864:	add    BYTE PTR [rax],al
   140006866:	add    DWORD PTR [rax],eax
   140006868:	cmp    BYTE PTR [rax+0x0],dh
   14000686b:	rex add DWORD PTR [rax],eax
   14000686e:	add    BYTE PTR [rax],al
   140006870:	ror    BYTE PTR [rdx+0x0],0x40
   140006874:	add    DWORD PTR [rax],eax
   140006876:	add    BYTE PTR [rax],al
   140006878:	add    BYTE PTR [rax],al
   14000687a:	add    BYTE PTR [rax],al
   14000687c:	add    DWORD PTR [rax],eax
   14000687e:	add    BYTE PTR [rax],al
   140006880:	add    al,BYTE PTR [rax]
   140006882:	add    BYTE PTR [rax],al
   140006884:	add    eax,DWORD PTR [rax]
   140006886:	add    BYTE PTR [rax],al
   140006888:	add    al,0x0
   14000688a:	add    BYTE PTR [rax],al
   14000688c:	add    BYTE PTR [rax],al
   14000688e:	add    BYTE PTR [rax],al
   140006890:	jo     0x140006892
	...
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	push   rax
   1400068e9:	movabs al,ds:0x14000
	...
   1400068fe:	add    BYTE PTR [rax],al
   140006900:	push   rdx
   140006901:	push   rbx
   140006902:	rex.R push rbx
   140006904:	mov    bl,BYTE PTR [edi]
   140006907:	movabs eax,ds:0x25fb54b040d6173d
   140006910:	adc    eax,DWORD PTR ds:[rcx]
   140006913:	or     eax,0x1
   140006918:	cmp    bl,BYTE PTR [rbp+r13*2+0x61]
   14000691d:	je     0x14000698b
   14000691f:	(bad)  
   140006920:	(bad)  
   140006921:	pop    rsp
   140006922:	(bad)  
   140006923:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   14000692a:	xor    al,0x5c
   14000692c:	rex.WRB (bad) 
   14000692e:	je     0x140006998
   140006930:	push   rdi
   140006931:	outs   dx,DWORD PTR ds:[rsi]
   140006932:	jb     0x14000699f
   140006934:	jae    0x140006995
   140006936:	push   rax
   140006937:	jb     0x1400069a2
   140006939:	jbe    0x1400069a4
   14000693b:	ins    BYTE PTR es:[rdi],dx
   14000693c:	gs addr32 gs fs pop rdi
   140006941:	rex.WRXB jo 0x1400069a9
   140006944:	jb     0x1400069a7
   140006946:	je     0x1400069b1
   140006948:	outs   dx,DWORD PTR ds:[rsi]
   140006949:	outs   dx,BYTE PTR ds:[rsi]
   14000694a:	cs jo  0x1400069b1
   14000694d:	(bad)  
   14000694e:	add    BYTE PTR [rax],al
   140006950:	add    BYTE PTR [rax],al
   140006952:	add    BYTE PTR [rax],al
   140006954:	(bad)  
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rip+0x0],dl        # 0x14000695d
	...
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    BYTE PTR [rcx],al
	...
   140006979:	add    BYTE PTR [rax],al
   14000697b:	add    al,dl
   14000697d:	movabs al,ds:0x6970000069980000
	...
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	add    al,BYTE PTR [rax]
   1400069a2:	add    BYTE PTR [rax],al
   1400069a4:	mov    al,0x69
	...
   1400069ae:	add    BYTE PTR [rax],al
   1400069b0:	enter  0x69,0x0
   1400069b4:	lock imul eax,DWORD PTR [rax],0x0
	...
   1400069c7:	add    al,dl
   1400069c9:	movabs al,ds:0x10000
   1400069d2:	add    BYTE PTR [rax],al
   1400069d4:	(bad)  
   1400069d5:	(bad)  
   1400069d6:	(bad)  
   1400069d7:	inc    DWORD PTR [rax]
   1400069d9:	add    BYTE PTR [rax],al
   1400069db:	add    BYTE PTR [rax+0x0],al
   1400069de:	add    BYTE PTR [rax],al
   1400069e0:	cwde   
   1400069e1:	imul   eax,DWORD PTR [rax],0x0
	...
   1400069ef:	add    BYTE PTR [rax],dh
   1400069f1:	movabs eax,ds:0x0
   1400069fa:	add    BYTE PTR [rax],al
   1400069fc:	(bad)  
   1400069fd:	(bad)  
   1400069fe:	(bad)  
   1400069ff:	inc    DWORD PTR [rax]
   140006a01:	add    BYTE PTR [rax],al
   140006a03:	add    BYTE PTR [rax+0x0],al
   140006a06:	add    BYTE PTR [rax],al
   140006a08:	sbb    BYTE PTR [rdx+0x0],ch
	...
   140006a1f:	add    BYTE PTR [rcx],al
   140006a21:	add    BYTE PTR [rax],al
   140006a23:	add    BYTE PTR [rax],dh
   140006a25:	push   0x0
	...
   140006a2f:	add    al,dh
   140006a31:	imul   eax,DWORD PTR [rax],0x0
	...
   140006a3f:	add    BYTE PTR [rax+0x30000a1],al
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rax],al
   140006a49:	add    BYTE PTR [rax],al
   140006a4b:	add    bh,bh
   140006a4d:	(bad)  
   140006a4e:	(bad)  
   140006a4f:	inc    DWORD PTR [rax]
   140006a51:	add    BYTE PTR [rax],al
   140006a53:	add    BYTE PTR [rax+0x0],al
   140006a56:	add    BYTE PTR [rax],al
   140006a58:	push   0x6a
	...
   140006a6d:	add    BYTE PTR [rax],al
   140006a6f:	add    BYTE PTR [rax+rax*1],al
   140006a72:	add    BYTE PTR [rax],al
   140006a74:	sub    BYTE PTR [rdx+0x0],0x0
	...
   140006a80:	rex push 0x0
   140006a83:	add    BYTE PTR [rax+0x6a],ch
   140006a89:	ins    BYTE PTR es:[rdi],dx
   140006a8a:	add    BYTE PTR [rax],al
   140006a8c:	sub    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006aa8:	enter  0xa1,0x0
   140006aac:	add    al,BYTE PTR [rax]
	...
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	add    al,0x0
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	push   rax
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	add    al,dl
   140006ac1:	push   0x0
	...
   140006ad7:	add    BYTE PTR [rbx],al
   140006ad9:	add    BYTE PTR [rax],al
   140006adb:	add    al,ch
   140006add:	push   0x0
	...
   140006ae7:	add    BYTE PTR [rax],cl
   140006ae9:	imul   eax,DWORD PTR [rax],0x0
   140006aec:	xor    BYTE PTR [rbx+0x0],ch
   140006aef:	add    BYTE PTR [rax+0x6b],cl
	...
   140006b05:	add    BYTE PTR [rax],al
   140006b07:	add    al,cl
   140006b09:	movabs eax,ds:0x20000
   140006b12:	add    BYTE PTR [rax],al
   140006b14:	(bad)  
   140006b15:	(bad)  
   140006b16:	(bad)  
   140006b17:	inc    DWORD PTR [rax]
   140006b19:	add    BYTE PTR [rax],al
   140006b1b:	add    BYTE PTR [rax+0x0],al
   140006b1e:	add    BYTE PTR [rax],al
   140006b20:	shr    BYTE PTR [rdx+0x0],1
	...
   140006b2f:	add    BYTE PTR [rax],cl
   140006b31:	movabs ds:0x10000,al
   140006b3a:	add    BYTE PTR [rax],al
   140006b3c:	(bad)  
   140006b3d:	(bad)  
   140006b3e:	(bad)  
   140006b3f:	inc    DWORD PTR [rax]
   140006b41:	add    BYTE PTR [rax],al
   140006b43:	add    BYTE PTR [rax+0x0],al
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	pop    rax
   140006b49:	imul   eax,DWORD PTR [rax],0x0
	...
   140006b60:	add    al,BYTE PTR [rax]
   140006b62:	add    BYTE PTR [rax],al
   140006b64:	jo     0x140006bd1
	...
   140006b6e:	add    BYTE PTR [rax],al
   140006b70:	xor    BYTE PTR [rbx+0x0],ch
   140006b73:	add    BYTE PTR [rax+0x6b],cl
	...
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rax],dh
   140006b89:	movabs ds:0x8000000000000,al
   140006b92:	add    BYTE PTR [rax],al
   140006b94:	(bad)  
   140006b95:	(bad)  
   140006b96:	(bad)  
   140006b97:	inc    DWORD PTR [rax]
   140006b99:	add    BYTE PTR [rax],al
   140006b9b:	add    BYTE PTR [rax+0x0],al
   140006b9e:	add    BYTE PTR [rax],al
   140006ba0:	mov    al,0x6b
	...
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	add    DWORD PTR [rax],eax
   140006bba:	add    BYTE PTR [rax],al
   140006bbc:	enter  0x6b,0x0
	...
   140006bc8:	fsubr  DWORD PTR [rbx+0x0]
	...
   140006bd7:	add    BYTE PTR [rax],dh
   140006bd9:	movabs ds:0x0,al
   140006be2:	add    BYTE PTR [rax],al
   140006be4:	(bad)  
   140006be5:	(bad)  
   140006be6:	(bad)  
   140006be7:	inc    DWORD PTR [rax]
   140006be9:	add    BYTE PTR [rax],al
   140006beb:	add    BYTE PTR [rax+0x0],al
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	mov    al,0x6b
	...
   140006bfe:	add    BYTE PTR [rax],al
   140006c00:	or     BYTE PTR [rdx+0x10000],ah
	...
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	add    al,0x0
   140006c12:	add    BYTE PTR [rax],al
   140006c14:	add    BYTE PTR [rax],al
   140006c17:	add    BYTE PTR [rax+0x6b],bl
	...
   140006c26:	add    BYTE PTR [rax],al
   140006c28:	xor    BYTE PTR [rdx+0x0],ah
   140006c2e:	add    BYTE PTR [rax],al
   140006c30:	or     BYTE PTR [rax],al
   140006c32:	add    BYTE PTR [rax],al
   140006c34:	add    BYTE PTR [rax],al
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	add    al,0x0
   140006c3a:	add    BYTE PTR [rax],al
   140006c3c:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rax+0x6b],dh
	...
   140006c4d:	add    BYTE PTR [rax],al
   140006c4f:	add    BYTE PTR [rcx],al
   140006c51:	add    BYTE PTR [rax],al
   140006c53:	add    BYTE PTR [rax+0x4000000],bl
   140006c59:	add    BYTE PTR [rax],al
   140006c5b:	add    BYTE PTR [rax-0x5e],ah
   140006c5e:	add    BYTE PTR [rax],al
   140006c60:	js     0x140006cce
   140006c62:	add    BYTE PTR [rax],al
   140006c64:	push   rax
   140006c65:	ins    BYTE PTR es:[rdi],dx
	...
   140006c7a:	add    BYTE PTR [rax],al
   140006c7c:	add    eax,DWORD PTR [rax]
   140006c7e:	add    BYTE PTR [rax],al
   140006c80:	or     al,BYTE PTR [rax]
   140006c82:	add    BYTE PTR [rax],al
   140006c84:	nop
   140006c85:	ins    BYTE PTR es:[rdi],dx
	...
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	call   0x150006d01
   140006c95:	ins    DWORD PTR es:[rdi],dx
   140006c96:	add    BYTE PTR [rax],al
   140006c98:	movabs al,ds:0x6aa800006d
   140006ca1:	ins    BYTE PTR es:[rdi],dx
   140006ca2:	add    BYTE PTR [rax],al
   140006ca4:	sub    BYTE PTR [rax+rax*1+0x0],ch
   140006ca8:	or     BYTE PTR [rsi+0x0],ch
   140006cab:	add    BYTE PTR [rax+0x6a],ch
   140006cb1:	ins    BYTE PTR es:[rdi],dx
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	sub    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006ce8:	(bad)  
   140006ce9:	movabs ds:0x90000,al
   140006cf2:	add    BYTE PTR [rax],al
   140006cf4:	(bad)  
   140006cf5:	(bad)  
   140006cf6:	(bad)  
   140006cf7:	inc    DWORD PTR [rax]
   140006cf9:	add    BYTE PTR [rax],al
   140006cfb:	add    BYTE PTR [rax+0x0],al
   140006cfe:	add    BYTE PTR [rax],al
   140006d00:	js     0x140006d6e
	...
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	shl    BYTE PTR [rdx+0x80000],0x0
   140006d17:	add    BYTE PTR [rax],al
   140006d19:	add    BYTE PTR [rax],al
   140006d1b:	add    bh,bh
   140006d1d:	(bad)  
   140006d1e:	(bad)  
   140006d1f:	inc    DWORD PTR [rax]
   140006d21:	add    BYTE PTR [rax],al
   140006d23:	add    BYTE PTR [rax+0x0],al
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	cmp    BYTE PTR [rbp+0x0],ch
	...
   140006d3b:	add    BYTE PTR [rbx],al
   140006d3d:	add    BYTE PTR [rax],al
   140006d3f:	add    BYTE PTR [rcx],cl
   140006d41:	add    BYTE PTR [rax],al
   140006d43:	add    BYTE PTR [rax+0x6d],dl
	...
   140006d4e:	add    BYTE PTR [rax],al
   140006d50:	adc    BYTE PTR [rbp+0x0],ch
   140006d53:	add    BYTE PTR [rax-0x57ffff93],ah
   140006d59:	push   0x0
   140006d5b:	add    BYTE PTR [rax],al
   140006d5d:	ins    BYTE PTR es:[rdi],dx
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	sub    BYTE PTR [rax+rax*1+0x0],ch
   140006d64:	or     BYTE PTR [rsi+0x0],ch
   140006d67:	add    BYTE PTR [rax+0x6a],ch
   140006d6d:	ins    BYTE PTR es:[rdi],dx
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	sub    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006da0:	adc    BYTE PTR [rbx+0x30000],ah
   140006da6:	add    BYTE PTR [rax],al
   140006da8:	add    BYTE PTR [rax],al
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	(bad)  
   140006dad:	(bad)  
   140006dae:	(bad)  
   140006daf:	inc    DWORD PTR [rax]
   140006db1:	add    BYTE PTR [rax],al
   140006db3:	add    BYTE PTR [rax+0x0],al
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	enter  0x6d,0x0
	...
   140006dd0:	add    al,0x0
   140006dd2:	add    BYTE PTR [rax],al
   140006dd4:	loopne 0x140006e43
	...
   140006dde:	add    BYTE PTR [rax],al
   140006de0:	movabs al,ds:0x6aa800006d
   140006de9:	ins    BYTE PTR es:[rdi],dx
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	sub    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006e08:	and    BYTE PTR [rcx+0x30000],0x0
   140006e0f:	add    BYTE PTR [rax],dl
   140006e11:	add    BYTE PTR [rax],al
   140006e13:	add    bh,bh
   140006e15:	(bad)  
   140006e16:	(bad)  
   140006e17:	inc    DWORD PTR [rax]
   140006e19:	add    BYTE PTR [rax],al
   140006e1b:	add    BYTE PTR [rax+0x0],al
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	push   0x6a
	...
   140006e2d:	add    BYTE PTR [rax],al
   140006e2f:	add    BYTE PTR [rcx],al
	...
   140006e39:	add    BYTE PTR [rax],al
   140006e3b:	add    BYTE PTR [rax-0x5d],bl
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	pop    rax
   140006e41:	outs   dx,BYTE PTR ds:[rsi]
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	xor    BYTE PTR [rsi+0x0],ch
	...
   140006e5f:	add    BYTE PTR [rcx],al
   140006e61:	add    BYTE PTR [rax],al
   140006e63:	add    BYTE PTR [rax+0x6e],dh
	...
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	sub    BYTE PTR [rsi+0x0],0x0
	...
   140006e80:	pop    rax
   140006e81:	movabs ds:0x0,eax
   140006e8a:	add    BYTE PTR [rax],al
   140006e8c:	(bad)  
   140006e8d:	(bad)  
   140006e8e:	(bad)  
   140006e8f:	inc    DWORD PTR [rax]
   140006e91:	add    BYTE PTR [rax],al
   140006e93:	add    BYTE PTR [rax+0x0],al
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	pop    rax
   140006e99:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006ea6:	add    BYTE PTR [rax],al
   140006ea8:	add    DWORD PTR [rax],eax
	...
   140006eb2:	add    BYTE PTR [rax],al
   140006eb4:	mov    BYTE PTR [rbx+0x6ed00000],ah
   140006eba:	add    BYTE PTR [rax],al
   140006ebc:	test   al,0x6e
	...
   140006ed6:	add    BYTE PTR [rax],al
   140006ed8:	add    al,BYTE PTR [rax]
   140006eda:	add    BYTE PTR [rax],al
   140006edc:	call   0x140006f4f
	...
   140006ee9:	outs   dx,DWORD PTR ds:[rsi]
   140006eea:	add    BYTE PTR [rax],al
   140006eec:	sub    BYTE PTR [rsi+0x0],0x0
	...
   140006f00:	mov    BYTE PTR [rbx+0x10000],ah
   140006f06:	add    BYTE PTR [rax],al
   140006f08:	add    BYTE PTR [rax],al
   140006f0a:	add    BYTE PTR [rax],al
   140006f0c:	(bad)  
   140006f0d:	(bad)  
   140006f0e:	(bad)  
   140006f0f:	inc    DWORD PTR [rax]
   140006f11:	add    BYTE PTR [rax],al
   140006f13:	add    BYTE PTR [rax+0x0],al
   140006f16:	add    BYTE PTR [rax],al
   140006f18:	shr    BYTE PTR [rsi+0x0],1
	...
   140006f27:	add    BYTE PTR [rcx],al
	...
   140006f31:	add    BYTE PTR [rax],al
   140006f33:	add    al,al
   140006f35:	movabs ds:0x6f2800006f500000,eax
	...
   140006f56:	add    BYTE PTR [rax],al
   140006f58:	add    eax,DWORD PTR [rax]
   140006f5a:	add    BYTE PTR [rax],al
   140006f5c:	push   0x6f
   140006f61:	add    BYTE PTR [rax],al
   140006f63:	add    BYTE PTR [rax],al
   140006f65:	add    BYTE PTR [rax],al
   140006f67:	add    BYTE PTR [rax+0x6f],cl
   140006f6d:	outs   dx,DWORD PTR ds:[rsi]
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	sub    BYTE PTR [rsi+0x0],0x0
	...
   140006f88:	shl    BYTE PTR [rbx+0x20000],0x0
   140006f8f:	add    BYTE PTR [rax],al
   140006f91:	add    BYTE PTR [rax],al
   140006f93:	add    bh,bh
   140006f95:	(bad)  
   140006f96:	(bad)  
   140006f97:	inc    DWORD PTR [rax]
   140006f99:	add    BYTE PTR [rax],al
   140006f9b:	add    BYTE PTR [rax+0x0],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	push   rax
   140006fa1:	outs   dx,DWORD PTR ds:[rsi]
	...
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	add    DWORD PTR [rax],eax
	...
   140006fba:	add    BYTE PTR [rax],al
   140006fbc:	clc    
   140006fbd:	movabs ds:0x6fb000006fd80000,eax
	...
   140006fde:	add    BYTE PTR [rax],al
   140006fe0:	add    eax,DWORD PTR [rax]
   140006fe2:	add    BYTE PTR [rax],al
   140006fe4:	lock outs dx,DWORD PTR ds:[rsi]
	...
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	adc    BYTE PTR [rax+0x0],dh
   140006ff3:	add    BYTE PTR [rax],al
   140006ff5:	outs   dx,DWORD PTR ds:[rsi]
   140006ff6:	add    BYTE PTR [rax],al
   140006ff8:	sub    BYTE PTR [rsi+0x0],0x0
	...
   140007010:	clc    
   140007011:	movabs ds:0x20000,eax
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	(bad)  
   14000701d:	(bad)  
   14000701e:	(bad)  
   14000701f:	inc    DWORD PTR [rax]
   140007021:	add    BYTE PTR [rax],al
   140007023:	add    BYTE PTR [rax+0x0],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	fsubr  DWORD PTR [rdi+0x0]
	...
   140007037:	add    BYTE PTR [rcx],al
	...
   140007041:	add    BYTE PTR [rax],al
   140007043:	add    BYTE PTR [rax],dh
   140007045:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007046:	add    BYTE PTR [rax],al
   140007048:	(bad)  
   140007049:	jo     0x14000704b
   14000704b:	add    BYTE PTR [rax],bh
   14000704d:	jo     0x14000704f
	...
   140007067:	add    BYTE PTR [rcx],al
   140007069:	add    BYTE PTR [rax],al
   14000706b:	add    BYTE PTR [rax+0x70],bh
	...
   140007076:	add    BYTE PTR [rax],al
   140007078:	mov    BYTE PTR [rax+0x0],dh
	...
   140007087:	add    BYTE PTR [rax],dh
   140007089:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140007092:	add    BYTE PTR [rax],al
   140007094:	(bad)  
   140007095:	(bad)  
   140007096:	(bad)  
   140007097:	inc    DWORD PTR [rax]
   140007099:	add    BYTE PTR [rax],al
   14000709b:	add    BYTE PTR [rax+0x0],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	(bad)  
   1400070a1:	jo     0x1400070a3
	...
   1400070cf:	add    BYTE PTR [rcx],al
   1400070d1:	(bad)  
   1400070d2:	add    al,BYTE PTR [rax]
   1400070d4:	(bad)  
   1400070d5:	xor    al,BYTE PTR [rdx]
   1400070d7:	xor    BYTE PTR [rcx],al
   1400070d9:	(bad)  
   1400070da:	add    al,BYTE PTR [rax]
   1400070dc:	(bad)  
   1400070dd:	xor    al,BYTE PTR [rdx]
   1400070df:	xor    BYTE PTR [rcx],al
   1400070e1:	add    al,0x1
   1400070e3:	add    BYTE PTR [rdx+rax*2],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	add    DWORD PTR [rcx+rax*1],eax
   1400070eb:	add    BYTE PTR [rdx+rax*2],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	add    DWORD PTR [rsi],eax
   1400070f2:	add    al,BYTE PTR [rax]
   1400070f4:	(bad)  
   1400070f5:	xor    al,BYTE PTR [rdx]
   1400070f7:	xor    BYTE PTR [rcx],al
   1400070f9:	(bad)  
   1400070fa:	add    al,BYTE PTR [rax]
   1400070fc:	(bad)  
   1400070fd:	xor    al,BYTE PTR [rdx]
   1400070ff:	xor    BYTE PTR [rcx],al
   140007101:	(bad)  
   140007102:	add    al,BYTE PTR [rax]
   140007104:	(bad)  
   140007105:	xor    al,BYTE PTR [rdx]
   140007107:	xor    BYTE PTR [rcx],al
   140007109:	or     al,BYTE PTR [rax+rax*1]
   14000710c:	or     dh,BYTE PTR [rsi+rax*1]
   14000710f:	add    BYTE PTR [rdx],cl
   140007111:	xor    al,BYTE PTR [rsi]
   140007113:	jo     0x140007116
   140007115:	or     al,BYTE PTR [rax+rax*1]
   140007118:	or     dh,BYTE PTR [rsi+rax*1]
   14000711b:	add    BYTE PTR [rdx],cl
   14000711d:	xor    al,BYTE PTR [rsi]
   14000711f:	jo     0x140007122
   140007121:	(bad)  
   140007122:	add    al,BYTE PTR [rax]
   140007124:	(bad)  
   140007125:	xor    al,BYTE PTR [rdx]
   140007127:	xor    BYTE PTR [rcx],al
   140007129:	cmp    al,0x8
   14000712b:	add    BYTE PTR [rsp+rsi*2],bh
   14000712e:	(bad)  
   14000712f:	add    BYTE PTR [rdi],cl
   140007131:	push   rsp
   140007132:	or     BYTE PTR [rax],al
   140007134:	sysenter 
   140007136:	(bad)  
   140007137:	add    BYTE PTR [rdi],cl
   140007139:	xor    cl,BYTE PTR [rbx]
   14000713b:	(bad)  
   14000713c:	add    DWORD PTR [rax+rcx*1],edx
   14000713f:	add    BYTE PTR [rsp+riz*2],dl
   140007142:	or     BYTE PTR [rax],al
   140007144:	adc    al,0x54
   140007146:	(bad)  
   140007147:	add    BYTE PTR [rsp+rsi*1],dl
   14000714a:	(bad)  
   14000714b:	add    BYTE PTR [rdx+rsi*1],dl
   14000714e:	adc    BYTE PTR [rax+0x1],dh
   140007151:	clts   
   140007153:	add    BYTE PTR [rdi],cl
   140007155:	fs (bad) 
   140007157:	add    BYTE PTR [rdi],cl
   140007159:	xor    al,0x6
   14000715b:	add    BYTE PTR [rdi],cl
   14000715d:	xor    cl,BYTE PTR [rbx]
   14000715f:	jo     0x140007162
   140007161:	add    al,0x1
   140007163:	add    BYTE PTR [rdx+rax*2],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	add    DWORD PTR [rdx],ecx
   14000716a:	add    al,0x0
   14000716c:	or     dh,BYTE PTR [rsi+rax*1]
   14000716f:	add    BYTE PTR [rdx],cl
   140007171:	xor    al,BYTE PTR [rsi]
   140007173:	jo     0x14000718e
   140007175:	and    DWORD PTR [rip+0x14621800],eax        # 0x15462897b
   14000717b:	loopne 0x14000718f
   14000717d:	jo     0x140007190
   14000717f:	(bad)  
   140007180:	adc    BYTE PTR [rax],dh
   140007182:	add    BYTE PTR [rax],al
   140007184:	xor    BYTE PTR [rdx+0x0],cl
   140007187:	add    BYTE PTR [rax],dh
   140007189:	add    BYTE PTR fs:[rax],al
   14000718c:	(bad)  
   14000718d:	(bad)  
   14000718e:	(bad)  
   14000718f:	inc    DWORD PTR [rax]
   140007191:	add    BYTE PTR [rax],al
   140007193:	add    bh,bh
   140007195:	(bad)  
   140007196:	(bad)  
   140007197:	inc    DWORD PTR [rax]
   140007199:	add    BYTE PTR [rax],al
   14000719b:	add    BYTE PTR [rcx],al
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rax],al
   1400071a1:	add    BYTE PTR [rax],al
   1400071a3:	add    BYTE PTR [rcx],al
	...
   1400071b1:	add    BYTE PTR [rax],al
   1400071b3:	add    BYTE PTR [rbx],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rcx],al
   1400071b9:	add    BYTE PTR [rax],al
   1400071bb:	add    ah,dl
   1400071bd:	jno    0x1400071bf
   1400071bf:	add    BYTE PTR [rdx],al
   1400071c1:	add    BYTE PTR [rax],al
   1400071c3:	add    BYTE PTR [rdx],al
   1400071c5:	add    BYTE PTR [rax],al
   1400071c7:	add    BYTE PTR [rbx],al
   1400071c9:	add    BYTE PTR [rax],al
   1400071cb:	add    BYTE PTR [rcx],al
   1400071cd:	add    BYTE PTR [rax],al
   1400071cf:	add    al,ch
   1400071d1:	jno    0x1400071d3
   1400071d3:	add    BYTE PTR [rax+0x0],al
	...
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	mov    al,0x53
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	cmp    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	add    BYTE PTR [rax],al
	...
   1400071f3:	add    ah,dh
   1400071f5:	push   rbx
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	rex.W add BYTE PTR [rax],al
   1400071fb:	add    BYTE PTR [rax],al
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rax+0x23],ah
   140007202:	add    BYTE PTR [rax],al
   140007204:	(bad)  
   140007205:	(bad)  
   140007206:	(bad)  
   140007207:	dec    esi
   140007209:	and    eax,DWORD PTR [rax]
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    ah,dh
   140007211:	and    eax,DWORD PTR [rax]
   140007213:	add    bh,bh
   140007215:	(bad)  
   140007216:	(bad)  
   140007217:	push   QWORD PTR [rax+0x53]
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rbp+0x1000053],bh
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    ch,al
   140007229:	push   rbx
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	add    al,BYTE PTR [rax]
   14000722e:	add    BYTE PTR [rax],al
   140007230:	out    0x53,al
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	add    dl,BYTE PTR [rax+rax*1+0x0]
   14000723c:	add    eax,DWORD PTR [rax]
   14000723e:	add    BYTE PTR [rax],al
   140007240:	sbb    DWORD PTR [rdx],ecx
   140007242:	add    al,BYTE PTR [rax]
   140007244:	or     dh,BYTE PTR [rdx]
   140007246:	(bad)  
   140007247:	push   rax
   140007248:	xor    BYTE PTR [rdx+0x0],cl
   14000724b:	add    BYTE PTR [rax],dh
   14000724d:	add    BYTE PTR fs:[rax],al
   140007250:	sbb    DWORD PTR [rbx],ecx
   140007252:	add    eax,DWORD PTR [rax]
   140007254:	or     eax,DWORD PTR [rdx+0x7]
   140007257:	push   rax
   140007258:	(bad)  
   140007259:	xor    BYTE PTR [rax],al
   14000725b:	add    BYTE PTR [rax],dh
   14000725d:	rex.WX add BYTE PTR [rax],al
   140007260:	xor    BYTE PTR [rax+rax*1+0x0],ah
   140007264:	add    DWORD PTR [rip+0x542d0006],ebp        # 0x1942d7270
   14000726a:	(bad)  
   14000726b:	add    BYTE PTR [rdx],cl
   14000726d:	xor    al,0x9
   14000726f:	add    BYTE PTR [rdx],cl
   140007271:	xor    al,BYTE PTR [rsi]
   140007273:	jo     0x140007296
   140007275:	add    eax,0x64050002
   14000727a:	(bad)  
   14000727b:	add    BYTE PTR [rax],dh
   14000727d:	and    eax,0x257a0000
   140007282:	add    BYTE PTR [rax],al
   140007284:	fs jb  0x140007287
   140007287:	add    BYTE PTR [rcx],ah
   140007289:	add    eax,0xe4050002
   14000728e:	or     BYTE PTR [rax],al
   140007290:	jp     0x1400072b7
   140007292:	add    BYTE PTR [rax],al
   140007294:	nop
   140007295:	and    eax,0x72740000
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	and    DWORD PTR [rax],eax
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	jp     0x1400072c7
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	nop
   1400072a5:	and    eax,0x72740000
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	and    DWORD PTR [rax],eax
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	xor    BYTE PTR [rip+0x257a0000],ah        # 0x1657a72b6
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	fs jb  0x1400072bb
   1400072bb:	add    BYTE PTR [rcx],al
   1400072bd:	or     al,BYTE PTR [rax+rax*1]
   1400072c0:	or     dh,BYTE PTR [rdi+rax*1]
   1400072c3:	add    BYTE PTR [rdx],cl
   1400072c5:	xor    al,BYTE PTR [rsi]
   1400072c7:	jo     0x1400072ea
   1400072c9:	add    eax,0x64050002
   1400072ce:	(bad)  
   1400072cf:	add    BYTE PTR [rax+0x27],ah
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	jnp    0x1400072fd
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	mov    esp,0x21000072
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rax+0x27],ah
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	jnp    0x14000730d
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	mov    esp,0x1000072
   1400072ed:	add    al,0x1
   1400072ef:	add    BYTE PTR [rdx+rax*2],al
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    DWORD PTR [rcx+rax*1],eax
   1400072f7:	add    BYTE PTR [rdx+rax*2],al
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    DWORD PTR [rcx+rax*1],eax
   1400072ff:	add    BYTE PTR [rdx+rax*2],al
   140007302:	add    BYTE PTR [rax],al
   140007304:	add    DWORD PTR [rdx],ecx
   140007306:	add    al,0x0
   140007308:	or     dh,BYTE PTR [rsi+rax*1]
   14000730b:	add    BYTE PTR [rdx],cl
   14000730d:	xor    al,BYTE PTR [rsi]
   14000730f:	jo     0x140007322
   140007311:	sbb    DWORD PTR [rsi],eax
   140007313:	add    BYTE PTR [rcx],bl
   140007315:	fs or  eax,0xc341400
   14000731b:	add    BYTE PTR [rsi],al
   14000731d:	jb     0x140007321
   14000731f:	jo     0x140007351
   140007321:	rex.WX add BYTE PTR [rax],al
   140007324:	pop    rax
   140007325:	add    BYTE PTR fs:[rax],al
   140007328:	(bad)  
   140007329:	(bad)  
   14000732a:	(bad)  
   14000732b:	push   QWORD PTR [rax]
   14000732d:	push   rbx
   14000732e:	add    BYTE PTR [rax],al
   140007330:	mov    al,0x18
   140007332:	add    BYTE PTR [rax],al
   140007334:	(bad)  
   140007335:	(bad)  
   140007336:	(bad)  
   140007337:	(bad)  
   140007338:	ficomp DWORD PTR [rax]
   14000733a:	add    BYTE PTR [rax],al
   14000733c:	add    BYTE PTR [rax],al
   14000733e:	add    BYTE PTR [rax],al
   140007340:	xchg   ebx,eax
   140007341:	sbb    DWORD PTR [rax],eax
   140007343:	add    bh,bh
   140007345:	(bad)  
   140007346:	(bad)  
   140007347:	inc    DWORD PTR [rcx]
   140007349:	(bad)  
   14000734a:	add    al,BYTE PTR [rax]
   14000734c:	(bad)  
   14000734d:	push   rdx
   14000734e:	add    dh,BYTE PTR [rax]
   140007350:	add    DWORD PTR [rsi],eax
   140007352:	add    al,BYTE PTR [rax]
   140007354:	(bad)  
   140007355:	xor    al,BYTE PTR [rdx]
   140007357:	xor    BYTE PTR [rcx],al
   140007359:	or     al,BYTE PTR [rax+rax*1]
   14000735c:	or     dh,BYTE PTR [rax+rcx*1]
   14000735f:	add    BYTE PTR [rdx],cl
   140007361:	push   rdx
   140007362:	(bad)  
   140007363:	jo     0x140007366
   140007365:	(bad)  
   140007366:	add    al,BYTE PTR [rax]
   140007368:	(bad)  
   140007369:	xor    al,BYTE PTR [rdx]
   14000736b:	xor    BYTE PTR [rcx],al
   14000736d:	(bad)  
   14000736e:	add    al,BYTE PTR [rax]
   140007370:	(bad)  
   140007371:	push   rdx
   140007372:	add    dh,BYTE PTR [rax]
   140007374:	add    DWORD PTR [rsi],eax
   140007376:	add    al,BYTE PTR [rax]
   140007378:	(bad)  
   140007379:	xor    al,BYTE PTR [rdx]
   14000737b:	xor    BYTE PTR [rcx],al
   14000737d:	or     al,BYTE PTR [rax+rax*1]
   140007380:	or     dh,BYTE PTR [rax+rcx*1]
   140007383:	add    BYTE PTR [rdx],cl
   140007385:	push   rdx
   140007386:	(bad)  
   140007387:	jo     0x14000738a
   140007389:	or     al,BYTE PTR [rax+rax*1]
   14000738c:	or     dh,BYTE PTR [rsi+rax*1]
   14000738f:	add    BYTE PTR [rdx],cl
   140007391:	xor    al,BYTE PTR [rsi]
   140007393:	jo     0x140007396
   140007395:	(bad)  
   140007396:	add    al,BYTE PTR [rax]
   140007398:	(bad)  
   140007399:	xor    al,BYTE PTR [rdx]
   14000739b:	xor    BYTE PTR [rcx],al
   14000739d:	(bad)  
   14000739e:	add    al,BYTE PTR [rax]
   1400073a0:	(bad)  
   1400073a1:	xor    al,BYTE PTR [rdx]
   1400073a3:	xor    BYTE PTR [rcx],dl
   1400073a5:	sbb    BYTE PTR [rax+rax*1],al
   1400073a8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400073ab:	add    BYTE PTR [rdx],cl
   1400073ad:	push   rdx
   1400073ae:	(bad)  
   1400073af:	jo     0x1400073e1
   1400073b1:	rex.WX add BYTE PTR [rax],al
   1400073b4:	and    BYTE PTR [rax+rax*1+0x0],0xff
   1400073b9:	(bad)  
   1400073ba:	(bad)  
   1400073bb:	call   QWORD PTR [rax+0x70000053]
   1400073c1:	sbb    eax,0xffff0000
   1400073c6:	(bad)  
   1400073c7:	jmp    FWORD PTR [rdx+0x1d]
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rdx-0xffffe3],bh
   1400073d5:	(bad)  
   1400073d6:	(bad)  
   1400073d7:	inc    DWORD PTR [rcx]
   1400073d9:	add    al,0x1
   1400073db:	add    BYTE PTR [rdx+rax*2],al
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	add    DWORD PTR [rcx+rax*1],eax
   1400073e3:	add    BYTE PTR [rdx+rax*2],al
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	add    DWORD PTR [rcx+rax*1],eax
   1400073eb:	add    BYTE PTR [rdx+rax*2],al
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	adc    DWORD PTR [rsi+rax*1],ebx
   1400073f3:	add    BYTE PTR [rsp+riz*2],bl
   1400073f6:	adc    DWORD PTR [rax],eax
   1400073f8:	sbb    BYTE PTR [rdi+rcx*1],dh
   1400073fb:	add    BYTE PTR [rdx+rsi*4],cl
   1400073fe:	or     BYTE PTR [rax+0x30],dh
   140007401:	rex.WX add BYTE PTR [rax],al
   140007404:	test   al,0x64
   140007406:	add    BYTE PTR [rax],al
   140007408:	(bad)  
   140007409:	(bad)  
   14000740a:	(bad)  
   14000740b:	inc    DWORD PTR [rax+0x54]
   14000740e:	add    BYTE PTR [rax],al
   140007410:	lock xor BYTE PTR [rax],al
   140007413:	add    bh,bh
   140007415:	(bad)  
   140007416:	(bad)  
   140007417:	dec    DWORD PTR [rdi]
   140007419:	xor    DWORD PTR [rax],eax
   14000741b:	add    BYTE PTR [rax],al
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rsi-0xffffcf],al
   140007425:	(bad)  
   140007426:	(bad)  
   140007427:	call   FWORD PTR [rcx]
   140007429:	and    eax,0x1190009
   14000742e:	stos   BYTE PTR es:[rdi],al
   14000742f:	adc    BYTE PTR [rax+rsi*8],cl
   140007432:	or     ah,al
   140007434:	or     al,dl
   140007436:	(bad)  
   140007437:	rol    BYTE PTR [rax+rsi*2],0x3
   14000743b:	(bad)  
   14000743c:	add    dh,BYTE PTR [rax]
   14000743e:	add    BYTE PTR [rax],al
   140007440:	xor    BYTE PTR [rdx+0x0],cl
   140007443:	add    al,dl
   140007445:	add    BYTE PTR fs:[rax],al
   140007448:	(bad)  
   140007449:	(bad)  
   14000744a:	(bad)  
   14000744b:	call   QWORD PTR [rax+0x54]
   14000744e:	add    BYTE PTR [rax],al
   140007450:	add    BYTE PTR [rax],al
   140007452:	add    BYTE PTR [rax],al
   140007454:	xchg   DWORD PTR [rax+rax*1+0x0],edx
   140007458:	add    DWORD PTR [rax],eax
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	cdq    
   14000745d:	push   rsp
   14000745e:	add    BYTE PTR [rax],al
   140007460:	(bad)  
   140007461:	(bad)  
   140007462:	(bad)  
   140007463:	jmp    QWORD PTR [rdi+0x3000054]
   140007469:	add    BYTE PTR [rax],al
   14000746b:	add    BYTE PTR [rax],al
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rax+rax*1],al
   140007472:	add    BYTE PTR [rax],al
   140007474:	mov    bl,0x54
   140007476:	add    BYTE PTR [rax],al
   140007478:	add    eax,0xbf000000
   14000747d:	push   rsp
   14000747e:	add    BYTE PTR [rax],al
   140007480:	(bad)  
   140007481:	add    BYTE PTR [rax],al
   140007483:	add    bl,cl
   140007485:	push   rsp
   140007486:	add    BYTE PTR [rax],al
   140007488:	(bad)  
   140007489:	add    BYTE PTR [rax],al
   14000748b:	add    bh,dl
   14000748d:	push   rsp
   14000748e:	add    BYTE PTR [rax],al
   140007490:	or     BYTE PTR [rax],al
   140007492:	add    BYTE PTR [rax],al
   140007494:	jrcxz  0x1400074ea
   140007496:	add    BYTE PTR [rax],al
   140007498:	or     DWORD PTR [rax],eax
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	out    dx,eax
   14000749d:	push   rsp
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	or     al,BYTE PTR [rax]
   1400074a2:	add    BYTE PTR [rax],al
   1400074a4:	sti    
   1400074a5:	push   rsp
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	or     eax,DWORD PTR [rax]
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	(bad)  
   1400074ad:	push   rbp
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	or     al,BYTE PTR [rax]
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	adc    edx,DWORD PTR [rbp+0x0]
   1400074b7:	add    BYTE PTR [rip+0x1f000000],cl        # 0x15f0074bd
   1400074bd:	push   rbp
   1400074be:	add    BYTE PTR [rax],al
   1400074c0:	add    eax,DWORD PTR [rax]
   1400074c2:	add    BYTE PTR [rax],al
   1400074c4:	add    BYTE PTR [rax],al
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	add    eax,DWORD PTR [rax]
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	movsxd edx,DWORD PTR [rbp+0x0]
   1400074cf:	add    BYTE PTR [rax+rax*1],al
   1400074d2:	add    BYTE PTR [rax],al
   1400074d4:	(bad)  
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rdi],cl
   1400074d9:	add    BYTE PTR [rax],al
   1400074db:	add    BYTE PTR [rcx],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    ah,ah
   1400074e1:	je     0x1400074e3
   1400074e3:	add    BYTE PTR [rax+0x0],al
	...
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	sub    edx,DWORD PTR [rbp+0x0]
   1400074f3:	add    BYTE PTR [rax+0x0],bl
	...
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	xor    BYTE PTR [rcx],bh
   140007502:	add    BYTE PTR [rax],al
   140007504:	(bad)  
   140007505:	(bad)  
   140007506:	(bad)  
   140007507:	(bad)  
   140007508:	sti    
   140007509:	cmp    DWORD PTR [rax],eax
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax],ah
   140007511:	cmp    al,BYTE PTR [rax]
   140007513:	add    BYTE PTR [rcx],al
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rbx+0x3a],ah
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	add    al,BYTE PTR [rax]
   14000751e:	add    BYTE PTR [rax],al
   140007520:	cmp    DWORD PTR [rdx],0x40000
   140007526:	add    BYTE PTR [rax],al
   140007528:	sbb    edi,DWORD PTR [rbx]
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	add    eax,0xc8000000
   140007531:	cmp    eax,DWORD PTR [rax]
   140007533:	add    BYTE PTR [rsi],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    ch,dh
   140007539:	cmp    eax,DWORD PTR [rax]
   14000753b:	add    BYTE PTR [rdi],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    BYTE PTR [rcx],dl
   140007541:	cmp    al,0x0
   140007543:	add    BYTE PTR [rax],cl
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    BYTE PTR [rsi],ah
   140007549:	add    BYTE PTR ds:[rax],al
   14000754c:	or     DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	lock add BYTE PTR ds:[rax],al
   140007554:	or     al,BYTE PTR [rax]
   140007556:	add    BYTE PTR [rax],al
   140007558:	jge    0x140007599
   14000755a:	add    BYTE PTR [rax],al
   14000755c:	or     eax,DWORD PTR [rax]
   14000755e:	add    BYTE PTR [rax],al
   140007560:	cdq    
   140007561:	(bad)  
   140007562:	add    BYTE PTR [rax],al
   140007564:	or     al,0x0
   140007566:	add    BYTE PTR [rax],al
   140007568:	enter  0x3f,0x0
   14000756c:	or     eax,DWORD PTR [rax]
   14000756e:	add    BYTE PTR [rax],al
   140007570:	cld    
   140007571:	(bad)  
   140007572:	add    BYTE PTR [rax],al
   140007574:	or     al,BYTE PTR [rax]
   140007576:	add    BYTE PTR [rax],al
   140007578:	(bad)  
   140007579:	add    BYTE PTR [rax],al
   14000757c:	or     al,0x0
   14000757e:	add    BYTE PTR [rax],al
   140007580:	rol    BYTE PTR [rax+0x0],1
   140007583:	add    BYTE PTR [rdx],cl
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rax+0x41],dl
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	or     eax,0xa6000000
   140007591:	add    BYTE PTR [r8],al
   140007594:	(bad)  
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rbx+rax*2],cl
   14000759a:	add    BYTE PTR [rax],al
   14000759c:	or     eax,0x40000000
   1400075a1:	rex.XB add BYTE PTR [r8],al
   1400075a4:	or     al,BYTE PTR [rax]
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	rex.WRX
   1400075a9:	rex.XB add BYTE PTR [r8],al
   1400075ac:	or     DWORD PTR [rax],eax
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	pop    rsp
   1400075b1:	rex.XB add BYTE PTR [r8],al
   1400075b4:	or     BYTE PTR [rax],al
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	xchg   DWORD PTR [rbx+0x0],eax
   1400075bb:	add    BYTE PTR [rdi],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rbx+0x6000043],bh
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    bh,ch
   1400075c9:	rex.XB add BYTE PTR [r8],al
   1400075cc:	add    eax,0x23000000
   1400075d1:	add    BYTE PTR [rax],r8b
   1400075d4:	add    al,0x0
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	push   rdi
   1400075d9:	add    BYTE PTR [rax],r8b
   1400075dc:	add    eax,DWORD PTR [rax]
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	pop    rsp
   1400075e1:	add    BYTE PTR [rax],r8b
   1400075e4:	or     eax,0xac000000
   1400075e9:	add    BYTE PTR [rax],r8b
   1400075ec:	or     al,BYTE PTR [rax]
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	out    0x44,eax
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	or     DWORD PTR [rax],eax
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	and    al,BYTE PTR [rbp+0x0]
   1400075fb:	add    BYTE PTR [rbx],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rbp+0x45],dh
   140007602:	add    BYTE PTR [rax],al
   140007604:	adc    BYTE PTR [rax],al
   140007606:	add    BYTE PTR [rax],al
   140007608:	movabs ds:0x6300000003000045,eax
   140007611:	rex.RX add BYTE PTR [rax],r8b
   140007614:	(bad)  
   140007615:	(bad)  
   140007616:	(bad)  
   140007617:	jmp    FWORD PTR [rbx]
   140007619:	push   rbp
   14000761a:	add    BYTE PTR [rax],al
   14000761c:	add    BYTE PTR [rax],al
   14000761e:	add    BYTE PTR [rax],al
   140007620:	cmp    BYTE PTR [rbp+0x0],dl
   140007623:	add    BYTE PTR [rdi],cl
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rbp+0x55],dl
   14000762a:	add    BYTE PTR [rax],al
   14000762c:	add    BYTE PTR [rax],al
   14000762e:	add    BYTE PTR [rax],al
   140007630:	add    DWORD PTR [rsi],eax
   140007632:	add    al,BYTE PTR [rax]
   140007634:	(bad)  
   140007635:	xor    al,BYTE PTR [rdx]
   140007637:	push   rax
   140007638:	sbb    DWORD PTR [rdx],ecx
   14000763a:	add    al,BYTE PTR [rax]
   14000763c:	or     dh,BYTE PTR [rdx+0x6]
   14000763f:	push   rax
   140007640:	xor    BYTE PTR [rdx+0x0],cl
   140007643:	add    al,dl
   140007645:	add    BYTE PTR fs:[rax],al
   140007648:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41d7654
   14000764e:	or     eax,DWORD PTR [rax]
   140007650:	sbb    BYTE PTR [rcx+rcx*1],dh
   140007653:	add    BYTE PTR [rdx],cl
   140007655:	push   rdx
   140007656:	(bad)  
   140007657:	jo     0x140007689
   140007659:	rex.WX add BYTE PTR [rax],al
   14000765c:	clc    
   14000765d:	add    BYTE PTR fs:[rax],al
   140007660:	(bad)  
   140007661:	(bad)  
   140007662:	(bad)  
   140007663:	call   QWORD PTR [rax+0x53]
   140007666:	add    BYTE PTR [rax],al
   140007668:	add    BYTE PTR [rax],al
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	jle    0x1400076c1
   14000766e:	add    BYTE PTR [rax],al
   140007670:	loopne 0x14000768d
   140007672:	add    BYTE PTR [rax],al
   140007674:	(bad)  
   140007675:	(bad)  
   140007676:	(bad)  
   140007677:	inc    DWORD PTR [rax+0x1c]
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	add    BYTE PTR [rax],al
   14000767e:	add    BYTE PTR [rax],al
   140007680:	push   rsi
   140007681:	sbb    al,0x0
   140007683:	add    BYTE PTR [rcx],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rdi-0xffffe4],al
   14000768d:	(bad)  
   14000768e:	(bad)  
   14000768f:	inc    DWORD PTR [rcx]
   140007691:	(bad)  
   140007692:	add    al,BYTE PTR [rax]
   140007694:	(bad)  
   140007695:	xor    al,BYTE PTR [rdx]
   140007697:	push   rax
   140007698:	add    DWORD PTR [rsi],eax
   14000769a:	add    al,BYTE PTR [rax]
   14000769c:	(bad)  
   14000769d:	xor    al,BYTE PTR [rdx]
   14000769f:	xor    BYTE PTR [rcx],al
   1400076a1:	(bad)  
   1400076a2:	add    al,BYTE PTR [rax]
   1400076a4:	(bad)  
   1400076a5:	push   rdx
   1400076a6:	add    dh,BYTE PTR [rax]
   1400076a8:	adc    DWORD PTR [rsp+rax*1],edx
   1400076ab:	add    BYTE PTR [rsp+rsi*1],dl
   1400076ae:	or     DWORD PTR [rax],eax
   1400076b0:	(bad)  
   1400076b1:	push   rdx
   1400076b2:	add    dh,BYTE PTR [rax+0x30]
   1400076b5:	rex.WX add BYTE PTR [rax],al
   1400076b8:	and    BYTE PTR [rbp+0x0],ah
   1400076bb:	add    bh,bh
   1400076bd:	(bad)  
   1400076be:	(bad)  
   1400076bf:	inc    DWORD PTR [rax+0x53]
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	add    BYTE PTR [rax],al
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	jo     0x1400076e5
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	(bad)  
   1400076cd:	(bad)  
   1400076ce:	(bad)  
   1400076cf:	call   QWORD PTR [rax+0x1b]
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    al,dl
   1400076d9:	sbb    eax,DWORD PTR [rax]
   1400076db:	add    bh,bh
   1400076dd:	(bad)  
   1400076de:	(bad)  
   1400076df:	inc    DWORD PTR [rcx]
   1400076e1:	(bad)  
   1400076e2:	add    al,BYTE PTR [rax]
   1400076e4:	(bad)  
   1400076e5:	xor    al,BYTE PTR [rdx]
   1400076e7:	xor    BYTE PTR [rcx],al
   1400076e9:	adc    al,BYTE PTR [rsi]
   1400076eb:	add    BYTE PTR [rdx],dl
   1400076ed:	je     0x1400076fc
   1400076ef:	add    BYTE PTR [rdx],dl
   1400076f1:	xor    al,0xc
   1400076f3:	add    BYTE PTR [rdx],dl
   1400076f5:	xchg   edx,eax
   1400076f6:	or     edx,DWORD PTR [rax+0x1]
   1400076f9:	or     BYTE PTR [rbx],al
   1400076fb:	add    BYTE PTR [rax],cl
   1400076fd:	rex.X add al,0xe0
   140007700:	add    dh,BYTE PTR [rax]
   140007702:	add    BYTE PTR [rax],al
   140007704:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405770c
   14000770a:	or     al,BYTE PTR [rax]
   14000770c:	shl    BYTE PTR [rcx],0x0
   14000770f:	add    BYTE PTR [rax+0x32],dl
   140007712:	add    BYTE PTR [rax],al
   140007714:	clc    
   140007715:	jbe    0x140007717
   140007717:	add    BYTE PTR [rcx],ah
   140007719:	cmp    ecx,DWORD PTR [rax]
   14000771b:	add    BYTE PTR [rbx],bh
   14000771d:	hlt    
   14000771e:	add    al,0x0
   140007720:	(bad)  
   140007721:	or     DWORD PTR fs:[rax],eax
   140007724:	add    eax,0x854
   140007729:	je     0x140007735
   14000772b:	add    al,al
   14000772d:	xor    DWORD PTR [rax],eax
   14000772f:	add    BYTE PTR [rax+0x32],dl
   140007732:	add    BYTE PTR [rax],al
   140007734:	clc    
   140007735:	jbe    0x140007737
   140007737:	add    BYTE PTR [rcx],al
   140007739:	sub    eax,DWORD PTR [rip+0x2642b00]        # 0x14264a23f
   14000773f:	add    BYTE PTR [rsi],al
   140007741:	xor    al,0x3
   140007743:	add    BYTE PTR [rsi],al
   140007745:	jo     0x140007747
   140007747:	add    BYTE PTR [rcx],al
   140007749:	add    al,BYTE PTR [rcx]
   14000774b:	add    BYTE PTR [rdx],al
   14000774d:	xor    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rcx],ah
   140007751:	add    eax,0x74050002
   140007756:	add    al,BYTE PTR [rax]
   140007758:	add    BYTE PTR [rsi],dh
   14000775a:	add    BYTE PTR [rax],al
   14000775c:	cmp    BYTE PTR [rsi],dh
   14000775e:	add    BYTE PTR [rax],al
   140007760:	rex.W ja 0x140007763
   140007763:	add    BYTE PTR [rcx],ah
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rax],al
   140007769:	add    BYTE PTR ss:[rax],al
   14000776c:	cmp    BYTE PTR [rsi],dh
   14000776e:	add    BYTE PTR [rax],al
   140007770:	rex.W ja 0x140007773
   140007773:	add    BYTE PTR [rcx],al
   140007775:	clts   
   140007777:	add    BYTE PTR [rdi],cl
   140007779:	push   rsp
   14000777a:	or     BYTE PTR [rax],al
   14000777c:	sysenter 
   14000777e:	(bad)  
   14000777f:	add    BYTE PTR [rdi],cl
   140007781:	xor    cl,BYTE PTR [rbx]
   140007783:	(bad)  
   140007784:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405778c
   14000778a:	(bad)  
   14000778b:	add    BYTE PTR [rax],al
   14000778d:	add    BYTE PTR es:[rax],al
   140007790:	cmp    esp,DWORD PTR [rsi]
   140007792:	add    BYTE PTR [rax],al
   140007794:	je     0x14000780d
   140007796:	add    BYTE PTR [rax],al
   140007798:	and    DWORD PTR [rax],eax
   14000779a:	add    BYTE PTR [rax],al
   14000779c:	add    BYTE PTR [rsi],ah
   14000779e:	add    BYTE PTR [rax],al
   1400077a0:	cmp    esp,DWORD PTR [rsi]
   1400077a2:	add    BYTE PTR [rax],al
   1400077a4:	je     0x14000781d
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	and    DWORD PTR [rax],eax
   1400077aa:	add    al,BYTE PTR [rax]
   1400077ac:	add    BYTE PTR [rsi+rax*1+0x0],dh
   1400077b0:	add    BYTE PTR [rsi],ah
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	cmp    esp,DWORD PTR [rsi]
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	je     0x140007831
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	add    DWORD PTR [rsi],eax
   1400077be:	add    al,BYTE PTR [rax]
   1400077c0:	(bad)  
   1400077c1:	xor    al,BYTE PTR [rdx]
   1400077c3:	xor    BYTE PTR [rcx],al
   1400077c5:	or     al,BYTE PTR [rax+rax*1]
   1400077c8:	or     dh,BYTE PTR [rsi+rax*1]
   1400077cb:	add    BYTE PTR [rdx],cl
   1400077cd:	xor    al,BYTE PTR [rsi]
   1400077cf:	jo     0x1400077d2
   1400077d1:	or     al,BYTE PTR [rax+rax*1]
   1400077d4:	or     dh,BYTE PTR [rsi+rax*1]
   1400077d7:	add    BYTE PTR [rdx],cl
   1400077d9:	xor    al,BYTE PTR [rsi]
   1400077db:	jo     0x1400077de
   1400077dd:	(bad)  
   1400077de:	add    al,BYTE PTR [rax]
   1400077e0:	(bad)  
   1400077e1:	xor    al,BYTE PTR [rdx]
   1400077e3:	xor    BYTE PTR [rcx],bl
   1400077e5:	(bad)  
   1400077e6:	or     BYTE PTR [rax],al
   1400077e8:	(bad)  
   1400077e9:	xor    al,0xf
   1400077eb:	add    BYTE PTR [rcx],dl
   1400077ed:	jb     0x1400077fc
   1400077ef:	lock or esp,eax
   1400077f2:	or     eax,eax
   1400077f4:	(bad)  
   1400077f5:	jo     0x1400077fd
   1400077f7:	(bad)  
   1400077f8:	xor    BYTE PTR [rdx+0x0],cl
   1400077fb:	add    BYTE PTR [rax+0x65],cl
   1400077fe:	add    BYTE PTR [rax],al
   140007800:	(bad)  
   140007801:	(bad)  
   140007802:	(bad)  
   140007803:	call   QWORD PTR [rax-0xffffae]
   140007809:	(bad)  
   14000780a:	(bad)  
   14000780b:	call   FWORD PTR [rdx+rdx*2+0x10000]
   140007812:	add    BYTE PTR [rax],al
   140007814:	add    BYTE PTR [rax],al
   140007816:	add    BYTE PTR [rax],al
   140007818:	add    DWORD PTR [rax],eax
   14000781a:	add    BYTE PTR [rax],al
   14000781c:	add    BYTE PTR [rax],al
   14000781e:	add    BYTE PTR [rax],al
   140007820:	add    al,BYTE PTR [rax]
   140007822:	add    BYTE PTR [rax],al
   140007824:	add    al,BYTE PTR [rax]
   140007826:	add    BYTE PTR [rax],al
   140007828:	add    eax,DWORD PTR [rax]
   14000782a:	add    BYTE PTR [rax],al
   14000782c:	add    DWORD PTR [rax],eax
   14000782e:	add    BYTE PTR [rax],al
   140007830:	xor    al,0x78
   140007832:	add    BYTE PTR [rax],al
   140007834:	add    BYTE PTR [rax],al
	...
   14000783f:	add    BYTE PTR [rax+0x38000052],ch
	...
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rax+0x14],dl
   140007852:	add    BYTE PTR [rax],al
   140007854:	(bad)  
   140007855:	(bad)  
   140007856:	(bad)  
   140007857:	call   FWORD PTR [rdi+0x14]
   14000785d:	add    BYTE PTR [rax],al
   14000785f:	add    ch,dl
   140007861:	adc    al,0x0
   140007863:	add    BYTE PTR [rcx],al
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    bh,ch
   140007869:	adc    al,0x0
   14000786b:	add    BYTE PTR [rdx],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rdx+0x1000015],cl
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    bl,al
   140007879:	adc    eax,0xffff0000
   14000787e:	(bad)  
   14000787f:	jmp    FWORD PTR [rax+0x52]
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rbp+0x3000052],dh
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    dl,dl
   140007891:	push   rdx
   140007892:	add    BYTE PTR [rax],al
   140007894:	add    BYTE PTR [rax],al
   140007896:	add    BYTE PTR [rax],al
   140007898:	sbb    DWORD PTR [rdx],ecx
   14000789a:	add    al,BYTE PTR [rax]
   14000789c:	or     dh,BYTE PTR [rdx]
   14000789e:	(bad)  
   14000789f:	push   rax
   1400078a0:	xor    BYTE PTR [rdx+0x0],cl
   1400078a3:	add    BYTE PTR [rax+0x65],cl
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	sbb    DWORD PTR [rdx],esp
   1400078aa:	or     BYTE PTR [rax],al
   1400078ac:	and    dh,BYTE PTR [rax+rdx*1]
   1400078af:	add    BYTE PTR [rcx],dl
   1400078b1:	jb     0x1400078c0
   1400078b3:	lock or esp,eax
   1400078b6:	or     eax,eax
   1400078b8:	(bad)  
   1400078b9:	jo     0x1400078c1
   1400078bb:	(bad)  
   1400078bc:	xor    BYTE PTR [rdx+0x0],cl
   1400078bf:	add    BYTE PTR [rax+0x65],dh
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	(bad)  
   1400078c5:	(bad)  
   1400078c6:	(bad)  
   1400078c7:	jmp    rax
   1400078c9:	push   rdx
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	(bad)  
   1400078cd:	(bad)  
   1400078ce:	(bad)  
   1400078cf:	(bad)  
   1400078d0:	in     al,dx
   1400078d1:	push   rdx
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	add    DWORD PTR [rax],eax
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	add    BYTE PTR [rax],al
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	add    DWORD PTR [rax],eax
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	add    BYTE PTR [rax],al
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	add    al,BYTE PTR [rax]
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	add    al,BYTE PTR [rax]
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	add    eax,DWORD PTR [rax]
   1400078ee:	add    BYTE PTR [rax],al
   1400078f0:	add    DWORD PTR [rax],eax
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	clc    
   1400078f5:	js     0x1400078f7
   1400078f7:	add    BYTE PTR [rax+0x0],al
	...
   140007902:	add    BYTE PTR [rax],al
   140007904:	clc    
   140007905:	push   rdx
   140007906:	add    BYTE PTR [rax],al
   140007908:	cmp    BYTE PTR [rax],al
   14000790a:	add    BYTE PTR [rax],al
   14000790c:	add    BYTE PTR [rax],al
   14000790e:	add    BYTE PTR [rax],al
   140007910:	adc    BYTE PTR [rsi],dl
   140007912:	add    BYTE PTR [rax],al
   140007914:	(bad)  
   140007915:	(bad)  
   140007916:	(bad)  
   140007917:	dec    DWORD PTR [rdi+0x16]
   14000791d:	add    BYTE PTR [rax],al
   14000791f:	add    ch,al
   140007921:	(bad)  
   140007922:	add    BYTE PTR [rax],al
   140007924:	add    DWORD PTR [rax],eax
   140007926:	add    BYTE PTR [rax],al
   140007928:	rcl    DWORD PTR [rsi],cl
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	add    al,BYTE PTR [rax]
   14000792e:	add    BYTE PTR [rax],al
   140007930:	ja     0x140007949
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    DWORD PTR [rax],eax
   140007936:	add    BYTE PTR [rax],al
   140007938:	popf   
   140007939:	(bad)  
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	(bad)  
   14000793d:	(bad)  
   14000793e:	(bad)  
   14000793f:	(bad)  
   140007940:	clc    
   140007941:	push   rdx
   140007942:	add    BYTE PTR [rax],al
   140007944:	add    BYTE PTR [rax],al
   140007946:	add    BYTE PTR [rax],al
   140007948:	add    eax,0x3000053
   14000794d:	add    BYTE PTR [rax],al
   14000794f:	add    BYTE PTR [rdx],ah
   140007951:	push   rbx
   140007952:	add    BYTE PTR [rax],al
   140007954:	add    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	sbb    DWORD PTR [rdx],ecx
   14000795a:	add    al,BYTE PTR [rax]
   14000795c:	or     dh,BYTE PTR [rdx]
   14000795e:	(bad)  
   14000795f:	push   rax
   140007960:	xor    BYTE PTR [rdx+0x0],cl
   140007963:	add    BYTE PTR [rax+0x65],dh
   140007966:	add    BYTE PTR [rax],al
   140007968:	sbb    DWORD PTR [rip+0x72140008],ebx        # 0x1b2147976
   14000796e:	adc    al,dh
   140007970:	(bad)  
   140007971:	loopne 0x14000797f
   140007973:	ror    BYTE PTR [rdx],1
   140007975:	ror    BYTE PTR [rax],0x70
   140007978:	(bad)  
   140007979:	(bad)  
   14000797a:	(bad)  
   14000797b:	xor    BYTE PTR [rax],dh
   14000797d:	rex.WX add BYTE PTR [rax],al
   140007980:	cwde   
   140007981:	add    BYTE PTR gs:[rax],al
   140007984:	(bad)  
   140007985:	(bad)  
   140007986:	(bad)  
   140007987:	jmp    rax
   140007989:	push   rcx
   14000798a:	add    BYTE PTR [rax],al
   14000798c:	(bad)  
   14000798d:	(bad)  
   14000798e:	(bad)  
   14000798f:	(bad)  
   140007990:	in     al,dx
   140007991:	push   rcx
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    DWORD PTR [rax],eax
   140007996:	add    BYTE PTR [rax],al
   140007998:	clc    
   140007999:	push   rcx
   14000799a:	add    BYTE PTR [rax],al
   14000799c:	add    DWORD PTR [rax],eax
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	add    BYTE PTR [rax],al
   1400079a2:	add    BYTE PTR [rax],al
   1400079a4:	add    DWORD PTR [rax],eax
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	add    BYTE PTR [rax],al
   1400079aa:	add    BYTE PTR [rax],al
   1400079ac:	add    eax,DWORD PTR [rax]
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	add    eax,DWORD PTR [rax]
   1400079b2:	add    BYTE PTR [rax],al
   1400079b4:	add    al,0x0
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	add    DWORD PTR [rax],eax
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	sar    BYTE PTR [rcx+0x0],0x0
   1400079c0:	add    BYTE PTR [rax],al
	...
   1400079cb:	add    BYTE PTR [rdx+rdx*2],al
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	cmp    BYTE PTR [rax],al
	...
   1400079de:	add    BYTE PTR [rax],al
   1400079e0:	movabs al,ds:0xf7ffffffff000010
   1400079e9:	adc    BYTE PTR [rax],al
   1400079eb:	add    BYTE PTR [rax],al
   1400079ed:	add    BYTE PTR [rax],al
   1400079ef:	add    BYTE PTR [rsi],al
   1400079f1:	adc    DWORD PTR [rax],eax
   1400079f3:	add    BYTE PTR [rcx],al
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rcx+rdx*1],ah
   1400079fa:	add    BYTE PTR [rax],al
   1400079fc:	add    al,BYTE PTR [rax]
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	(bad)  
   140007a01:	adc    DWORD PTR [rax],eax
   140007a03:	add    BYTE PTR [rcx],al
   140007a05:	add    BYTE PTR [rax],al
   140007a07:	add    BYTE PTR [rcx+rdx*1+0x0],ch
   140007a0b:	add    BYTE PTR [rbx],al
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    bh,ch
   140007a11:	adc    DWORD PTR [rax],eax
   140007a13:	add    BYTE PTR [rcx],al
   140007a15:	add    BYTE PTR [rax],al
   140007a17:	add    BYTE PTR [rdx+rdx*1],bh
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	(bad)  
   140007a1d:	(bad)  
   140007a1e:	(bad)  
   140007a1f:	inc    DWORD PTR [rdx+rdx*2]
   140007a22:	add    BYTE PTR [rax],al
   140007a24:	add    BYTE PTR [rax],al
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	adc    DWORD PTR [rdx+0x0],edx
   140007a2b:	add    BYTE PTR [rax+rax*1],al
   140007a2e:	add    BYTE PTR [rax],al
   140007a30:	xor    DWORD PTR [rdx+0x0],edx
   140007a33:	add    BYTE PTR [rax],al
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	add    BYTE PTR [rcx],bl
   140007a39:	or     al,BYTE PTR [rdx]
   140007a3b:	add    BYTE PTR [rdx],cl
   140007a3d:	xor    al,BYTE PTR [rsi]
   140007a3f:	push   rax
   140007a40:	xor    BYTE PTR [rdx+0x0],cl
   140007a43:	add    BYTE PTR [rax+0x19000065],bl
   140007a49:	and    cl,BYTE PTR [rax]
   140007a4b:	add    BYTE PTR [rdx],ah
   140007a4d:	xor    al,0x10
   140007a4f:	add    BYTE PTR [rcx],dl
   140007a51:	jb     0x140007a60
   140007a53:	lock or esp,eax
   140007a56:	or     eax,eax
   140007a58:	(bad)  
   140007a59:	jo     0x140007a61
   140007a5b:	(bad)  
   140007a5c:	xor    BYTE PTR [rdx+0x0],cl
   140007a5f:	add    al,al
   140007a61:	add    BYTE PTR gs:[rax],al
   140007a64:	(bad)  
   140007a65:	(bad)  
   140007a66:	(bad)  
   140007a67:	inc    DWORD PTR [rax+0x52]
   140007a6a:	add    BYTE PTR [rax],al
   140007a6c:	(bad)  
   140007a6d:	(bad)  
   140007a6e:	(bad)  
   140007a6f:	dec    DWORD PTR [rdx+rdx*2+0x0]
   140007a73:	add    BYTE PTR [rcx],al
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rax],al
   140007a79:	add    BYTE PTR [rax],al
   140007a7b:	add    BYTE PTR [rcx],al
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    BYTE PTR [rax],al
   140007a81:	add    BYTE PTR [rax],al
   140007a83:	add    BYTE PTR [rdx],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rdx],al
   140007a89:	add    BYTE PTR [rax],al
   140007a8b:	add    BYTE PTR [rbx],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rcx],al
   140007a91:	add    BYTE PTR [rax],al
   140007a93:	add    BYTE PTR [rax+0x4000007a],bl
	...
   140007aa1:	add    BYTE PTR [rax],al
   140007aa3:	add    BYTE PTR [rax+0x52],bl
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	cmp    BYTE PTR [rax],al
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    BYTE PTR [rax],al
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	adc    BYTE PTR [rdx],0x0
   140007ab3:	add    bh,bh
   140007ab5:	(bad)  
   140007ab6:	(bad)  
   140007ab7:	(bad)  
   140007ab8:	call   0x140007acf
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rsi],bl
   140007ac1:	adc    eax,DWORD PTR [rax]
   140007ac3:	add    BYTE PTR [rcx],al
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rbx+rdx*1],ch
   140007aca:	add    BYTE PTR [rax],al
   140007acc:	add    al,BYTE PTR [rax]
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	loopne 0x140007ae5
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	add    DWORD PTR [rax],eax
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	(bad)  
   140007ad9:	adc    al,0x0
   140007adb:	add    bh,bh
   140007add:	(bad)  
   140007ade:	(bad)  
   140007adf:	call   FWORD PTR [rax+0x52]
   140007ae2:	add    BYTE PTR [rax],al
   140007ae4:	add    BYTE PTR [rax],al
   140007ae6:	add    BYTE PTR [rax],al
   140007ae8:	gs push rdx
   140007aea:	add    BYTE PTR [rax],al
   140007aec:	add    eax,DWORD PTR [rax]
   140007aee:	add    BYTE PTR [rax],al
   140007af0:	(bad)  
   140007af1:	push   rdx
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	add    BYTE PTR [rax],al
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	sbb    DWORD PTR [rdx],ecx
   140007afa:	add    al,BYTE PTR [rax]
   140007afc:	or     dh,BYTE PTR [rdx]
   140007afe:	(bad)  
   140007aff:	push   rax
   140007b00:	xor    BYTE PTR [rdx+0x0],cl
   140007b03:	add    al,al
   140007b05:	add    BYTE PTR gs:[rax],al
   140007b08:	add    DWORD PTR [rsi],eax
   140007b0a:	add    al,BYTE PTR [rax]
   140007b0c:	(bad)  
   140007b0d:	xor    al,BYTE PTR [rdx]
   140007b0f:	xor    BYTE PTR [rcx],dl
   140007b11:	sbb    BYTE PTR [rax+rax*1],al
   140007b14:	sbb    BYTE PTR [rcx+rcx*1],dh
   140007b17:	add    BYTE PTR [rdx],cl
   140007b19:	push   rdx
   140007b1a:	(bad)  
   140007b1b:	jo     0x140007b4d
   140007b1d:	rex.WX add BYTE PTR [rax],al
   140007b20:	call   0x13f007b8a
   140007b25:	(bad)  
   140007b26:	(bad)  
   140007b27:	jmp    QWORD PTR [rax+0x53]
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    al,dl
   140007b31:	sbb    eax,0xffff0000
   140007b36:	(bad)  
   140007b37:	dec    DWORD PTR [rcx]
   140007b39:	(bad)  
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	add    BYTE PTR [rax],al
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	ds (bad) 
   140007b42:	add    BYTE PTR [rax],al
   140007b44:	(bad)  
   140007b45:	(bad)  
   140007b46:	(bad)  
   140007b47:	inc    DWORD PTR [rcx]
   140007b49:	(bad)  
   140007b4a:	add    al,BYTE PTR [rax]
   140007b4c:	(bad)  
   140007b4d:	xor    al,BYTE PTR [rdx]
   140007b4f:	xor    BYTE PTR [rcx],al
   140007b51:	add    al,0x1
   140007b53:	add    BYTE PTR [rdx+rax*2],al
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	add    DWORD PTR [rsi],eax
   140007b5a:	add    al,BYTE PTR [rax]
   140007b5c:	(bad)  
   140007b5d:	xor    al,BYTE PTR [rdx]
   140007b5f:	xor    BYTE PTR [rcx],al
   140007b61:	add    al,0x1
   140007b63:	add    BYTE PTR [rdx+rax*2],al
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	add    DWORD PTR [rdx],ecx
   140007b6a:	add    al,0x0
   140007b6c:	or     dh,BYTE PTR [rsi+rax*1]
   140007b6f:	add    BYTE PTR [rdx],cl
   140007b71:	xor    al,BYTE PTR [rsi]
   140007b73:	jo     0x140007b76
   140007b75:	(bad)  
   140007b76:	add    al,BYTE PTR [rax]
   140007b78:	(bad)  
   140007b79:	xor    al,BYTE PTR [rdx]
   140007b7b:	xor    BYTE PTR [rcx],al
   140007b7d:	(bad)  
   140007b7e:	add    al,BYTE PTR [rax]
   140007b80:	(bad)  
   140007b81:	xor    al,BYTE PTR [rdx]
   140007b83:	xor    BYTE PTR [rcx],al
   140007b85:	add    al,0x1
   140007b87:	add    BYTE PTR [rdx+rax*2],al
   140007b8a:	add    BYTE PTR [rax],al
   140007b8c:	adc    DWORD PTR [rsi],eax
   140007b8e:	add    al,BYTE PTR [rax]
   140007b90:	(bad)  
   140007b91:	xor    al,BYTE PTR [rdx]
   140007b93:	xor    BYTE PTR [rdx+0x4e],dl
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	add    DWORD PTR [rax],eax
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	outs   dx,DWORD PTR ds:[rsi]
   140007b9d:	rex.WB add BYTE PTR [r8],al
   140007ba0:	(bad)  
   140007ba1:	rex.WB add BYTE PTR [r8],al
   140007ba4:	outs   dx,DWORD PTR ds:[rsi]
   140007ba5:	push   rbp
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	add    BYTE PTR [rax],al
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	add    DWORD PTR [rsi],eax
   140007bae:	add    al,BYTE PTR [rax]
   140007bb0:	(bad)  
   140007bb1:	xor    al,BYTE PTR [rdx]
   140007bb3:	push   rax
   140007bb4:	add    DWORD PTR [rsi],eax
   140007bb6:	add    al,BYTE PTR [rax]
   140007bb8:	(bad)  
   140007bb9:	xor    al,BYTE PTR [rdx]
   140007bbb:	xor    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    BYTE PTR [rcx],al
   140007bc1:	add    al,0x1
   140007bc3:	add    BYTE PTR [rdx+rdx*1],al
   140007bc6:	add    BYTE PTR [rax],al
   140007bc8:	add    DWORD PTR [rdi],ecx
   140007bca:	(bad)  
   140007bcb:	add    BYTE PTR [rdi],cl
   140007bcd:	fs (bad) 
   140007bcf:	add    BYTE PTR [rdi],cl
   140007bd1:	xor    al,0x6
   140007bd3:	add    BYTE PTR [rdi],cl
   140007bd5:	xor    cl,BYTE PTR [rbx]
   140007bd7:	jo     0x140007bda
   140007bd9:	add    al,0x1
   140007bdb:	add    BYTE PTR [rdx+rax*2],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	add    DWORD PTR [rcx+rax*1],eax
   140007be3:	add    BYTE PTR [rdx+riz*2],al
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	or     DWORD PTR [rsi],eax
   140007bea:	add    al,BYTE PTR [rax]
   140007bec:	(bad)  
   140007bed:	xor    al,BYTE PTR [rdx]
   140007bef:	jo     0x140007c43
   140007bf1:	rex.WRX add BYTE PTR [rax],r8b
   140007bf4:	add    DWORD PTR [rax],eax
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	jb     0x140007c46
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	test   eax,0x8a00004d
   140007c01:	push   rbp
   140007c02:	add    BYTE PTR [rax],al
   140007c04:	test   eax,0x100004d
   140007c09:	(bad)  
   140007c0a:	add    al,BYTE PTR [rax]
   140007c0c:	(bad)  
   140007c0d:	xor    al,BYTE PTR [rdx]
   140007c0f:	push   rax
   140007c10:	add    DWORD PTR [rcx+rax*1],eax
   140007c13:	add    BYTE PTR [rdx+rax*2],al
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	adc    DWORD PTR [rax],ebx
   140007c1a:	add    eax,0x14621800
   140007c1f:	loopne 0x140007c33
   140007c21:	jo     0x140007c34
   140007c23:	(bad)  
   140007c24:	adc    BYTE PTR [rax],dh
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	push   rdx
   140007c29:	rex.WRX add BYTE PTR [rax],r8b
   140007c2c:	add    DWORD PTR [rax],eax
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	mov    ecx,DWORD PTR [rsi+0x0]
   140007c33:	add    BYTE PTR [rbx-0x57ffffb2],ch
   140007c39:	push   rbp
   140007c3a:	add    BYTE PTR [rax],al
   140007c3c:	add    BYTE PTR [rax],al
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	add    DWORD PTR [rsi],eax
   140007c42:	add    al,BYTE PTR [rax]
   140007c44:	(bad)  
   140007c45:	xor    al,BYTE PTR [rdx]
   140007c47:	push   rax
   140007c48:	or     DWORD PTR [rdi],edx
   140007c4a:	(bad)  
   140007c4b:	add    BYTE PTR [rdi],dl
   140007c4d:	xor    al,0xd
   140007c4f:	add    BYTE PTR [rdi],dl
   140007c51:	jb     0x140007c66
   140007c53:	loopne 0x140007c66
   140007c55:	jo     0x140007c67
   140007c57:	(bad)  
   140007c58:	push   rdx
   140007c59:	rex.WRX add BYTE PTR [rax],r8b
   140007c5c:	add    DWORD PTR [rax],eax
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	test   DWORD PTR [rsi+0x0],0x4f1000
   140007c67:	add    ah,dl
   140007c69:	push   rbp
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	adc    BYTE PTR [rdi+0x0],cl
   140007c6f:	add    BYTE PTR [rcx],al
   140007c71:	(bad)  
   140007c72:	add    al,BYTE PTR [rax]
   140007c74:	(bad)  
   140007c75:	xor    al,BYTE PTR [rdx]
   140007c77:	push   rax
   140007c78:	add    DWORD PTR [rcx+rax*1],eax
   140007c7b:	add    BYTE PTR [rdx+rax*2],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	add    DWORD PTR [rcx+rax*1],eax
   140007c83:	add    BYTE PTR [rdx+rax*2],al
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	add    DWORD PTR [rcx+rax*1],eax
   140007c8b:	add    BYTE PTR [rdx+rax*2],al
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	or     DWORD PTR [rdx],ecx
   140007c92:	add    al,0x0
   140007c94:	or     dh,BYTE PTR [rsi+rax*1]
   140007c97:	add    BYTE PTR [rdx],cl
   140007c99:	xor    al,BYTE PTR [rsi]
   140007c9b:	jo     0x140007cef
   140007c9d:	rex.WRX add BYTE PTR [rax],r8b
   140007ca0:	add    DWORD PTR [rax],eax
   140007ca2:	add    BYTE PTR [rax],al
   140007ca4:	in     eax,dx
   140007ca5:	rex.WRXB add BYTE PTR [r8],r8b
   140007ca8:	and    BYTE PTR [rax+0x0],dl
   140007cab:	add    BYTE PTR [rax],ah
   140007cad:	push   rsi
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	and    BYTE PTR [rax+0x0],dl
   140007cb3:	add    BYTE PTR [rcx],al
   140007cb5:	(bad)  
   140007cb6:	add    al,BYTE PTR [rax]
   140007cb8:	(bad)  
   140007cb9:	xor    al,BYTE PTR [rdx]
   140007cbb:	push   rax
   140007cbc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7cc6
   140007cc2:	or     DWORD PTR [rax],eax
   140007cc4:	or     eax,0x1500632
   140007cc9:	or     al,BYTE PTR [rax+rax*1]
   140007ccc:	or     dh,BYTE PTR [rsi+rax*1]
   140007ccf:	add    BYTE PTR [rdx],cl
   140007cd1:	xor    al,BYTE PTR [rsi]
   140007cd3:	jo     0x140007cd6
   140007cd5:	or     al,BYTE PTR [rax+rax*1]
   140007cd8:	or     dh,BYTE PTR [rsi+rax*1]
   140007cdb:	add    BYTE PTR [rdx],cl
   140007cdd:	xor    al,BYTE PTR [rsi]
   140007cdf:	jo     0x140007ce1
   140007ce1:	add    BYTE PTR [rax],al
   140007ce3:	add    BYTE PTR [rax-0x60],ah
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	add    BYTE PTR [rax],al
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	(bad)  
   140007ced:	(bad)  
   140007cee:	(bad)  
   140007cef:	inc    DWORD PTR [rax]
   140007cf1:	add    BYTE PTR [rax],al
   140007cf3:	add    BYTE PTR [rax],bl
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rsi],bl
   140007cf9:	rex.WX add BYTE PTR [rax],al
	...
   140007d0c:	mov    BYTE PTR [rax+0x0],ah
   140007d12:	add    BYTE PTR [rax],al
   140007d14:	(bad)  
   140007d15:	(bad)  
   140007d16:	(bad)  
   140007d17:	inc    DWORD PTR [rax]
   140007d19:	add    BYTE PTR [rax],al
   140007d1b:	add    BYTE PTR [rax],bl
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rax],bl
   140007d21:	rex.WX add BYTE PTR [rax],al
	...
   140007d3c:	push   rax
   140007d3d:	jge    0x140007d3f
	...
   140007d4f:	add    BYTE PTR [rcx],al
   140007d51:	add    BYTE PTR [rax],al
   140007d53:	add    BYTE PTR [rax+0x7d],ah
	...
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	add    DWORD PTR [rax],eax
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	mov    al,0xa0
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	add    BYTE PTR [rax],al
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	(bad)  
   140007d6d:	(bad)  
   140007d6e:	(bad)  
   140007d6f:	inc    DWORD PTR [rax]
   140007d71:	add    BYTE PTR [rax],al
   140007d73:	add    BYTE PTR [rax+rax*1],al
	...
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	and    al,0x4a
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	add    BYTE PTR [rax],al
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	test   al,0x7d
	...
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	add    al,BYTE PTR [rax]
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	or     BYTE PTR [rbp+0x0],bh
   140007daf:	add    al,ah
   140007db1:	jl     0x140007db3
	...
   140007dc3:	add    cl,ah
   140007dc5:	sbb    BYTE PTR [rcx+0x58],al
   140007dcb:	add    BYTE PTR [rsi],al
   140007dcd:	jle    0x140007dcf
   140007dcf:	add    BYTE PTR [rcx],al
   140007dd1:	add    BYTE PTR [rax],al
   140007dd3:	add    BYTE PTR [rbx],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rbx],al
   140007dd9:	add    BYTE PTR [rax],al
   140007ddb:	add    al,ch
   140007ddd:	jge    0x140007ddf
   140007ddf:	add    ah,dh
   140007de1:	jge    0x140007de3
   140007de3:	add    BYTE PTR [rax],al
   140007de5:	jle    0x140007de7
   140007de7:	add    BYTE PTR [rax],ch
   140007de9:	movabs al,ds:0xa0200000a0300000
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	sub    DWORD PTR [rsi+0x0],edi
   140007df7:	add    BYTE PTR [rbx+0x7e],dl
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	cmp    BYTE PTR [rsi+0x0],0x0
   140007e00:	add    BYTE PTR [rax],al
   140007e02:	add    DWORD PTR [rax],eax
   140007e04:	add    al,BYTE PTR [rax]
   140007e06:	rex.WRB (bad) 
   140007e08:	je     0x140007e72
   140007e0a:	push   rdi
   140007e0b:	outs   dx,DWORD PTR ds:[rsi]
   140007e0c:	jb     0x140007e79
   140007e0e:	jae    0x140007e6f
   140007e10:	push   rax
   140007e11:	jb     0x140007e7c
   140007e13:	jbe    0x140007e7e
   140007e15:	ins    BYTE PTR es:[rdi],dx
   140007e16:	gs addr32 gs fs pop rdi
   140007e1b:	rex.WRXB jo 0x140007e83
   140007e1e:	jb     0x140007e81
   140007e20:	je     0x140007e8b
   140007e22:	outs   dx,DWORD PTR ds:[rsi]
   140007e23:	outs   dx,BYTE PTR ds:[rsi]
   140007e24:	cs gs js 0x140007e8d
   140007e28:	add    BYTE PTR [rbp+0x61],cl
   140007e2b:	je     0x140007e95
   140007e2d:	push   rdi
   140007e2e:	outs   dx,DWORD PTR ds:[rsi]
   140007e2f:	jb     0x140007e9c
   140007e31:	jae    0x140007e92
   140007e33:	push   rax
   140007e34:	jb     0x140007e9f
   140007e36:	jbe    0x140007ea1
   140007e38:	ins    BYTE PTR es:[rdi],dx
   140007e39:	gs addr32 gs fs pop rdi
   140007e3e:	rex.WRXB jo 0x140007ea6
   140007e41:	jb     0x140007ea4
   140007e43:	je     0x140007eae
   140007e45:	outs   dx,DWORD PTR ds:[rsi]
   140007e46:	outs   dx,BYTE PTR ds:[rsi]
   140007e47:	pop    rdi
   140007e48:	(bad)  
   140007e49:	jne    0x140007eb4
   140007e4b:	ins    BYTE PTR es:[rdi],dx
   140007e4c:	fs pop rdi
   140007e4e:	fs (bad) 
   140007e50:	je     0x140007eb7
   140007e52:	add    BYTE PTR [rbp+0x61],cl
   140007e55:	je     0x140007ebf
   140007e57:	push   rdi
   140007e58:	outs   dx,DWORD PTR ds:[rsi]
   140007e59:	jb     0x140007ec6
   140007e5b:	jae    0x140007ebc
   140007e5d:	push   rax
   140007e5e:	jb     0x140007ec9
   140007e60:	jbe    0x140007ecb
   140007e62:	ins    BYTE PTR es:[rdi],dx
   140007e63:	gs addr32 gs fs pop rdi
   140007e68:	rex.WRXB jo 0x140007ed0
   140007e6b:	jb     0x140007ece
   140007e6d:	je     0x140007ed8
   140007e6f:	outs   dx,DWORD PTR ds:[rsi]
   140007e70:	outs   dx,BYTE PTR ds:[rsi]
   140007e71:	pop    rdi
   140007e72:	jb     0x140007ed9
   140007e74:	ins    BYTE PTR es:[rdi],dx
   140007e75:	(bad)  
   140007e76:	je     0x140007ee1
   140007e78:	jbe    0x140007edf
   140007e7a:	pop    rdi
   140007e7b:	jo     0x140007ede
   140007e7d:	je     0x140007ee7
   140007e7f:	add    BYTE PTR [rbp+0x61],cl
   140007e82:	je     0x140007eec
   140007e84:	push   rdi
   140007e85:	outs   dx,DWORD PTR ds:[rsi]
   140007e86:	jb     0x140007ef3
   140007e88:	jae    0x140007ee9
   140007e8a:	push   rax
   140007e8b:	jb     0x140007ef6
   140007e8d:	jbe    0x140007ef8
   140007e8f:	ins    BYTE PTR es:[rdi],dx
   140007e90:	gs addr32 gs fs pop rdi
   140007e95:	rex.WRXB jo 0x140007efd
   140007e98:	jb     0x140007efb
   140007e9a:	je     0x140007f05
   140007e9c:	outs   dx,DWORD PTR ds:[rsi]
   140007e9d:	outs   dx,BYTE PTR ds:[rsi]
   140007e9e:	pop    rdi
   140007e9f:	jbe    0x140007f06
   140007ea1:	jb     0x140007f16
   140007ea3:	imul   ebp,DWORD PTR [rdi+0x6e],0x82800000
	...
   140007eb2:	add    BYTE PTR [rax],al
   140007eb4:	(bad)  
   140007eb5:	(bad)  
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	cmp    BYTE PTR [rbx+0x0],ah
   140007ebb:	add    BYTE PTR [rax+0x82],bl
   140007ec1:	add    BYTE PTR [rax],al
   140007ec3:	add    BYTE PTR [rax],al
   140007ec5:	add    BYTE PTR [rax],al
   140007ec7:	add    BYTE PTR [rbx+rax*4+0x0],cl
   140007ecb:	add    BYTE PTR [rax+0x63],dl
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	fdivr  DWORD PTR [rdi+0x0]
	...
   140007edb:	add    BYTE PTR [rdx-0x6fffff7d],al
   140007ee1:	(bad)  
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	push   0x82
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    BYTE PTR [rax],al
   140007eed:	add    BYTE PTR [rax],al
   140007eef:	add    BYTE PTR [rsp+rax*4],al
   140007ef2:	add    BYTE PTR [rax],al
   140007ef4:	and    BYTE PTR [rbx+0x0],ah
   140007ef7:	add    BYTE PTR [rax+0x7f],cl
	...
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	in     al,0x84
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	add    BYTE PTR [rax+0x0],ah
   140007f0b:	add    al,dh
   140007f0d:	jg     0x140007f0f
	...
   140007f17:	add    BYTE PTR [rsi-0x73],dh
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	test   al,0x60
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	cmp    BYTE PTR [rcx+0x0],al
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	add    BYTE PTR [rax],al
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	nop
   140007f2d:	mov    es,WORD PTR [rax]
   140007f2f:	add    al,dh
   140007f31:	(bad)  
	...
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	adc    BYTE PTR [rax+0x0],0x0
   140007f4f:	add    BYTE PTR [rdx-0x70],ch
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	add    BYTE PTR [rax],al
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	push   rsp
   140007f59:	nop
   140007f5a:	add    BYTE PTR [rax],al
   140007f5c:	add    BYTE PTR [rax],al
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	cmp    dl,BYTE PTR [rax+0x0]
   140007f66:	add    BYTE PTR [rax],al
   140007f68:	sub    dl,BYTE PTR [rax+0x0]
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	sbb    dl,BYTE PTR [rax+0x0]
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	(bad)  
   140007f79:	test   BYTE PTR [rax],al
   140007f7b:	add    BYTE PTR [rax],al
   140007f7d:	add    BYTE PTR [rax],al
   140007f7f:	add    BYTE PTR [rsp+rax*4+0x0],dh
   140007f86:	add    BYTE PTR [rax],al
   140007f88:	sahf   
   140007f89:	test   BYTE PTR [rax],al
   140007f8b:	add    BYTE PTR [rax],al
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	add    BYTE PTR [rdx+0x84],cl
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rsp+rax*4+0x0],bh
   140007f9b:	add    BYTE PTR [rax],al
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rsp+rax*4+0x0],ch
   140007fa3:	add    BYTE PTR [rax],al
   140007fa5:	add    BYTE PTR [rax],al
   140007fa7:	add    BYTE PTR [rsp+rax*4],ah
   140007faa:	add    BYTE PTR [rax],al
   140007fac:	add    BYTE PTR [rax],al
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	xor    al,BYTE PTR [rax+rax*1+0x0]
   140007fb7:	add    BYTE PTR [rsi-0x7c],al
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	push   rdx
   140007fc1:	test   BYTE PTR [rax],al
   140007fc3:	add    BYTE PTR [rax],al
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rsi-0x7c],bl
	...
   140007fd6:	add    BYTE PTR [rax],al
   140007fd8:	push   0xffffffffffffff83
   140007fda:	add    BYTE PTR [rax],al
   140007fdc:	add    BYTE PTR [rax],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	push   rsp
   140007fe1:	add    DWORD PTR [rax],0x0
	...
   140007ff0:	rex.X lea eax,[rax]
   140007ff3:	add    BYTE PTR [rax],al
   140007ff5:	add    BYTE PTR [rax],al
   140007ff7:	add    BYTE PTR [rsi],al
   140007ff9:	lea    eax,[rax]
   140007ffb:	add    BYTE PTR [rax],al
   140007ffd:	add    BYTE PTR [rax],al
   140007fff:	add    BYTE PTR [rdx],ch
   140008001:	lea    eax,[rax]
   140008003:	add    BYTE PTR [rax],al
   140008005:	add    BYTE PTR [rax],al
   140008007:	add    dl,dh
   140008009:	test   BYTE PTR [rax],al
   14000800b:	add    BYTE PTR [rax],al
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rsi],cl
   140008011:	test   DWORD PTR [rax],eax
   140008013:	add    BYTE PTR [rax],al
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    BYTE PTR [rax],ch
   140008019:	test   DWORD PTR [rax],eax
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rdx-0x7b],cl
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	test   DWORD PTR fs:[rax],eax
   14000802b:	add    BYTE PTR [rax],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rsi+0x85],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax+0x85],ch
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    dh,al
   140008041:	test   DWORD PTR [rax],eax
   140008043:	add    BYTE PTR [rax],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    dl,bh
   140008049:	test   DWORD PTR [rax],eax
   14000804b:	add    BYTE PTR [rax],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rax],bh
   140008051:	xchg   BYTE PTR [rax],al
   140008053:	add    BYTE PTR [rax],al
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax-0x7a],bl
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	js     0x140007fe8
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008069:	xchg   BYTE PTR [rax],al
   14000806b:	add    BYTE PTR [rax],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    dl,dl
   140008071:	xchg   BYTE PTR [rax],al
   140008073:	add    BYTE PTR [rax],al
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    BYTE PTR [rsi],cl
   140008079:	xchg   DWORD PTR [rax],eax
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rdx-0x79],cl
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	mov    al,BYTE PTR [rdi+0x0]
   14000808e:	add    BYTE PTR [rax],al
   140008090:	int3   
   140008091:	xchg   DWORD PTR [rax],eax
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rsi],cl
   140008099:	mov    BYTE PTR [rax],al
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rsi-0x78],dl
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	(bad)  
   1400080a9:	mov    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    al,dl
   1400080b1:	mov    BYTE PTR [rax],al
   1400080b3:	add    BYTE PTR [rax],al
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    BYTE PTR [rax],dl
   1400080b9:	mov    DWORD PTR [rax],eax
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rsi-0x77],cl
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	xchg   edx,eax
   1400080c9:	mov    DWORD PTR [rax],eax
   1400080cb:	add    BYTE PTR [rax],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    ah,dl
   1400080d1:	mov    DWORD PTR [rax],eax
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rax-0x76],al
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	jl     0x14000806c
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	add    BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	mov    esp,0x8a
   1400080ed:	add    BYTE PTR [rax],al
   1400080ef:	add    dh,bh
   1400080f1:	mov    al,BYTE PTR [rax]
   1400080f3:	add    BYTE PTR [rax],al
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    BYTE PTR [rbx+rcx*4+0x0],cl
   1400080fb:	add    BYTE PTR [rax],al
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rdx+0x8b],bl
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    al,ah
   140008109:	mov    eax,DWORD PTR [rax]
   14000810b:	add    BYTE PTR [rax],al
   14000810d:	add    BYTE PTR [rax],al
   14000810f:	add    BYTE PTR [rax],ah
   140008111:	mov    WORD PTR [rax],es
   140008113:	add    BYTE PTR [rax],al
   140008115:	add    BYTE PTR [rax],al
   140008117:	add    BYTE PTR [rax-0x74],ah
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	test   al,0x8c
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	lock mov WORD PTR [rax],es
	...
   140008137:	add    dh,ch
   140008139:	mov    es,WORD PTR [rax]
   14000813b:	add    BYTE PTR [rax],al
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   140008146:	add    BYTE PTR [rax],al
   140008148:	test   BYTE PTR [rdi+0x0],0x0
   14000814f:	add    BYTE PTR [rbp+rcx*4+0x0],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	nop
   140008159:	lea    eax,[rax]
   14000815b:	add    BYTE PTR [rax],al
   14000815d:	add    BYTE PTR [rax],al
   14000815f:	add    BYTE PTR [rdx+0x8d],ah
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rdx+0x8d],dh
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rdx+0x8d],bh
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    ah,al
   140008179:	lea    eax,[rax]
   14000817b:	add    BYTE PTR [rax],al
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    ah,ah
   140008181:	lea    eax,[rax]
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    dh,ch
   140008189:	lea    eax,[rax]
   14000818b:	add    BYTE PTR [rax],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rax],dl
   140008191:	mov    es,WORD PTR [rax]
   140008193:	add    BYTE PTR [rax],al
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rsi+rcx*4],dh
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	push   rax
   1400081a1:	mov    es,WORD PTR [rax]
   1400081a3:	add    BYTE PTR [rax],al
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rsi-0x72],ah
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	jl     0x140008140
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	xchg   BYTE PTR [rsi+0x0],cl
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	sahf   
   1400081c1:	mov    es,WORD PTR [rax]
   1400081c3:	add    BYTE PTR [rax],al
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rsi+0x8e],ah
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rax+0x8e],dh
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rsi+0x8e],bh
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    ah,cl
   1400081e1:	mov    es,WORD PTR [rax]
   1400081e3:	add    BYTE PTR [rax],al
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    ah,ah
   1400081e9:	mov    es,WORD PTR [rax]
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rax+0x8f],ah
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    ah,bh
   1400081f9:	mov    es,WORD PTR [rax]
   1400081fb:	add    BYTE PTR [rax],al
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    BYTE PTR [rdx],cl
   140008201:	pop    QWORD PTR [rax]
   140008203:	add    BYTE PTR [rax],al
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rdx],bl
   140008209:	pop    QWORD PTR [rax]
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rdi+rcx*4],ch
   140008212:	add    BYTE PTR [rax],al
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	xor    al,0x8f
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    BYTE PTR [rax],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	cmp    al,0x8f
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	rex.RX pop QWORD PTR [rax]
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdi+rcx*4+0x0],bl
   140008233:	add    BYTE PTR [rax],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rax-0x71],dh
   14000823a:	add    BYTE PTR [rax],al
   14000823c:	add    BYTE PTR [rax],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	jle    0x1400081d1
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	mov    cl,BYTE PTR [rdi+0x0]
   14000824e:	add    BYTE PTR [rax],al
   140008250:	xchg   esi,eax
   140008251:	pop    QWORD PTR [rax]
   140008253:	add    BYTE PTR [rax],al
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    al,al
   140008259:	pop    QWORD PTR [rax]
	...
   140008267:	add    dh,al
   140008269:	add    DWORD PTR [rax],0x0
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	mov    al,BYTE PTR [rbx+0x0]
	...
   14000827e:	add    BYTE PTR [rax],al
   140008280:	ret    0x82
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rax+0x82],bh
	...
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    al,bl
   140008299:	(bad)  
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	test   BYTE PTR [rdx+0x0],0x0
   1400082a7:	add    BYTE PTR [rdx],dl
   1400082a9:	add    DWORD PTR [rax],0x0
	...
   1400082b8:	jmp    0x18674f7c0
   1400082bd:	jb     0x140008324
   1400082bf:	add    BYTE PTR gs:[rax],al
   1400082c2:	rol    DWORD PTR [rbx],0x75
   1400082c5:	je     0x14000830a
   1400082c7:	(bad)  
   1400082c8:	ins    BYTE PTR es:[rdi],dx
   1400082c9:	ins    BYTE PTR es:[rdi],dx
   1400082ca:	outs   dx,DWORD PTR ds:[rsi]
   1400082cb:	movsxd eax,DWORD PTR [rax]
   1400082cd:	add    BYTE PTR [rcx+rbp*2+0x62],ch
   1400082d1:	jne    0x140008347
   1400082d3:	cs fs ins BYTE PTR es:[rdi],dx
   1400082d6:	ins    BYTE PTR es:[rdi],dx
   1400082d7:	add    al,dl
   1400082d9:	add    BYTE PTR [rdi],bh
   1400082db:	jne    0x140008346
   1400082dd:	ja     0x140008322
   1400082df:	push   0x506b6365
   1400082e4:	jne    0x140008359
   1400082e6:	push   0x59404064
   1400082eb:	push   r8
   1400082ed:	rex.RB
   1400082ee:	rex.B
   1400082ef:	rex.R pop rdi
   1400082f1:	rex.WRX
   1400082f2:	rex pop rdx
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	iret   
   1400082f7:	add    BYTE PTR [rdi],bh
   1400082f9:	jne    0x140008364
   1400082fb:	ja     0x140008340
   1400082fd:	push   0x506b6365
   140008302:	outs   dx,DWORD PTR ds:[rsi]
   140008303:	jo     0x140008369
   140008305:	rex
   140008306:	rex pop rcx
   140008308:	pop    r8
   14000830a:	push   rax
   14000830b:	rex.RB
   14000830c:	rex.B
   14000830d:	rex.R
   14000830e:	rex pop rdx
   140008310:	add    BYTE PTR [rax],al
   140008312:	loop   0x140008314
   140008314:	(bad)  
   140008315:	jne    0x140008380
   140008317:	ja     0x14000836c
   140008319:	je     0x14000837c
   14000831b:	jb     0x140008391
   14000831d:	push   rbp
   14000831e:	jae    0x140008385
   140008320:	jb     0x140008372
   140008322:	jb     0x140008393
   140008324:	movsxd esp,DWORD PTR [rbp+0x73]
   140008327:	jae    0x140008369
   140008329:	rex pop rcx
   14000832b:	push   r8
   14000832d:	rex.RB
   14000832e:	pop    r8
   140008330:	push   rax
   140008331:	rex.RB
   140008332:	rex.X
   140008333:	rex.R
   140008334:	rex.RXB push r9
   140008336:	rex.RB
   140008337:	push   r8
   140008339:	rex.RB
   14000833a:	pop    r8
   14000833c:	xor    DWORD PTR [rcx+0x45],eax
   14000833f:	push   r8
   140008341:	rex.RB
   140008342:	pop    r8
   140008344:	push   rax
   140008345:	rex.RB
   140008346:	rex.B
   140008347:	xor    r8d,DWORD PTR [rax+0x5a]
   14000834b:	add    BYTE PTR [rbp+0x69],dh
   14000834e:	ja     0x14000837e
   140008350:	fs ins BYTE PTR es:[rdi],dx
   140008352:	ins    BYTE PTR es:[rdi],dx
   140008353:	add    BYTE PTR [rax+rax*1],cl
   140008356:	push   rdi
   140008357:	rex.WRX
   140008358:	gs je  0x14000839c
   14000835b:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   14000835f:	outs   dx,BYTE PTR ds:[rsi]
   140008360:	outs   dx,BYTE PTR ds:[rsi]
   140008361:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008366:	outs   dx,BYTE PTR ds:[rsi]
   140008367:	xor    al,BYTE PTR [rcx+0x0]
   14000836a:	adc    al,0x0
   14000836c:	push   rdi
   14000836d:	rex.WRX
   14000836e:	gs je  0x1400083b4
   140008371:	(bad)  
   140008372:	outs   dx,BYTE PTR ds:[rsi]
   140008373:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008376:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008378:	outs   dx,BYTE PTR ds:[rsi]
   140008379:	outs   dx,BYTE PTR ds:[rsi]
   14000837a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000837f:	outs   dx,BYTE PTR ds:[rsi]
   140008380:	add    BYTE PTR [r13+0x50],cl
   140008384:	push   rdx
   140008385:	cs fs ins BYTE PTR es:[rdi],dx
   140008388:	ins    BYTE PTR es:[rdi],dx
   140008389:	add    BYTE PTR [rcx],al
   14000838b:	add    BYTE PTR [rdi],bh
   14000838d:	jae    0x140008408
   14000838f:	jae    0x140008405
   140008391:	gs ins DWORD PTR es:[rdi],dx
   140008393:	pop    rdi
   140008394:	movsxd esp,DWORD PTR [rcx+0x74]
   140008397:	outs   dx,DWORD PTR gs:[esi]
   14000839a:	jb     0x140008415
   14000839c:	rex jae 0x140008418
   14000839f:	jae    0x140008415
   1400083a1:	gs ins DWORD PTR es:[rdi],dx
   1400083a3:	rex (bad) 
   1400083a5:	outs   dx,DWORD PTR ds:[rsi]
   1400083a6:	outs   dx,DWORD PTR ds:[rsi]
   1400083a7:	jae    0x14000841d
   1400083a9:	rex
   1400083aa:	rex pop rcx
   1400083ac:	rex.B
   1400083ad:	rex.B
   1400083ae:	rex.RB
   1400083af:	rex.X push rsi
   1400083b1:	gs jb  0x140008426
   1400083b4:	outs   dx,DWORD PTR ds:[rsi]
   1400083b5:	jb     0x140008416
   1400083b7:	movsxd esp,DWORD PTR [rcx+0x74]
   1400083ba:	outs   dx,DWORD PTR gs:[esi]
   1400083bd:	jb     0x140008438
   1400083bf:	rex xor DWORD PTR [rdx],esi
   1400083c2:	rex pop rax
   1400083c4:	pop    rdx
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rdi],bh
   1400083c9:	outs   dx,BYTE PTR gs:[esi]
   1400083cc:	gs jb  0x140008438
   1400083cf:	movsxd ebx,DWORD PTR [rdi+0x63]
   1400083d2:	(bad)  
   1400083d3:	je     0x14000843a
   1400083d5:	outs   dx,DWORD PTR ds:[esi]
   1400083d7:	jb     0x140008452
   1400083d9:	rex jae 0x140008455
   1400083dc:	jae    0x140008452
   1400083de:	gs ins DWORD PTR es:[rdi],dx
   1400083e0:	rex (bad) 
   1400083e2:	outs   dx,DWORD PTR ds:[rsi]
   1400083e3:	outs   dx,DWORD PTR ds:[rsi]
   1400083e4:	jae    0x14000845a
   1400083e6:	rex
   1400083e7:	rex pop rcx
   1400083e9:	rex.B
   1400083ea:	rex.B
   1400083eb:	rex.RB
   1400083ec:	rex.X push rsi
   1400083ee:	gs jb  0x140008463
   1400083f1:	outs   dx,DWORD PTR ds:[rsi]
   1400083f2:	jb     0x140008453
   1400083f4:	movsxd esp,DWORD PTR [rcx+0x74]
   1400083f7:	outs   dx,DWORD PTR gs:[esi]
   1400083fa:	jb     0x140008475
   1400083fc:	rex xor DWORD PTR [rdx],esi
   1400083ff:	rex pop rax
   140008401:	pop    rdx
   140008402:	add    BYTE PTR [rax],al
   140008404:	(bad)  
   140008405:	outs   dx,DWORD PTR ds:[rsi]
   140008406:	outs   dx,DWORD PTR ds:[rsi]
   140008407:	jae    0x14000847d
   140008409:	pop    rdi
   14000840a:	jae    0x140008485
   14000840c:	jae    0x140008482
   14000840e:	gs ins DWORD PTR es:[rdi],dx
   140008410:	sub    eax,0x32316376
   140008415:	xor    BYTE PTR [rip+0x312d746d],ch        # 0x1712df888
   14000841b:	pop    rdi
   14000841c:	xor    eax,0x6c642e36
   140008421:	ins    BYTE PTR es:[rdi],dx
   140008422:	add    BYTE PTR [rax],al
   140008424:	mov    edx,0x65724300
   140008429:	(bad)  
   14000842a:	je     0x140008491
   14000842c:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x46019800
   140008435:	ins    BYTE PTR es:[rdi],dx
   140008436:	jne    0x1400084ab
   140008438:	push   0x656c6946
   14000843d:	rex.X jne 0x1400084a6
   140008440:	data16 gs jb 0x1400084b7
   140008444:	add    BYTE PTR [rax],al
   140008446:	push   rsp
   140008447:	add    al,0x52
   140008449:	gs (bad) 
   14000844b:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x5705f100
   140008455:	jb     0x1400084c0
   140008457:	je     0x1400084be
   140008459:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6c43007f
   140008462:	outs   dx,DWORD PTR ds:[rsi]
   140008463:	jae    0x1400084ca
   140008465:	rex.W (bad) 
   140008467:	outs   dx,BYTE PTR ds:[rsi]
   140008468:	fs ins BYTE PTR es:[rdi],dx
   14000846a:	add    BYTE PTR gs:[rsi+0x2],dl
   14000846e:	rex.RXB
   14000846f:	gs je  0x1400084be
   140008472:	(bad)  
   140008473:	jae    0x1400084e9
   140008475:	rex.RB jb 0x1400084ea
   140008478:	outs   dx,DWORD PTR ds:[rsi]
   140008479:	jb     0x14000847b
   14000847b:	add    ah,ah
   14000847d:	add    ecx,DWORD PTR [rdi+0x70]
   140008480:	outs   dx,BYTE PTR gs:[rsi]
   140008482:	rex.RB jbe 0x1400084ea
   140008485:	outs   dx,BYTE PTR ds:[rsi]
   140008486:	je     0x1400084c9
   140008488:	add    BYTE PTR [rax],al
   14000848a:	jo     0x140008491
   14000848c:	push   rsp
   14000848d:	gs jb  0x1400084fd
   140008490:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008497:	outs   dx,DWORD PTR ds:[rsi]
   140008498:	movsxd esp,DWORD PTR [rbp+0x73]
   14000849b:	jae    0x14000849d
   14000849d:	add    BYTE PTR [rbx],dh
   14000849f:	add    al,BYTE PTR [rdi+0x65]
   1400084a2:	je     0x1400084e9
   1400084a4:	js     0x14000850f
   1400084a6:	je     0x1400084eb
   1400084a8:	outs   dx,DWORD PTR ds:[rsi]
   1400084a9:	fs gs push rax
   1400084ac:	jb     0x14000851d
   1400084ae:	movsxd esp,DWORD PTR [rbp+0x73]
   1400084b1:	jae    0x1400084b3
   1400084b3:	add    BYTE PTR [rcx+0x69615705],bh
   1400084b9:	je     0x140008501
   1400084bb:	outs   dx,DWORD PTR ds:[rsi]
   1400084bc:	jb     0x14000850b
   1400084be:	jne    0x14000852c
   1400084c0:	je     0x14000852b
   1400084c2:	jo     0x140008530
   1400084c4:	gs rex.WRXB (bad) 
   1400084c7:	push   0x65
   1400084c9:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   1400084cd:	add    BYTE PTR [rdi+0x5],ch
   1400084d0:	push   rsp
   1400084d1:	gs jb  0x140008541
   1400084d4:	imul   ebp,DWORD PTR [rsi+0x61],0x6f4a6574
   1400084db:	(bad)  
   1400084dc:	rex.WRXB (bad) 
   1400084de:	push   0x65
   1400084e0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   1400084e4:	rex.WXB
   1400084e5:	rex.RB push r10
   1400084e7:	rex.WRX
   1400084e8:	rex.RB
   1400084e9:	xor    r14,QWORD PTR [rdx]
   1400084ec:	cs fs ins BYTE PTR es:[rdi],dx
   1400084ef:	ins    BYTE PTR es:[rdi],dx
   1400084f0:	add    BYTE PTR [rax],al
   1400084f2:	data16 add BYTE PTR [rdi],bh
   1400084f5:	(bad)  
   1400084f6:	xor    BYTE PTR [rdi+0x4c],bl
   1400084f9:	outs   dx,DWORD PTR ds:[rsi]
   1400084fa:	movsxd ebp,DWORD PTR [rbx+0x69]
   1400084fd:	je     0x14000853f
   1400084ff:	jae    0x140008575
   140008501:	fs rex
   140008503:	rex push rcx
   140008505:	rex.RB
   140008506:	rex.B
   140008507:	rex.B
   140008508:	rex
   140008509:	rex.W
   14000850a:	rex pop rdx
   14000850c:	add    BYTE PTR [rax],al
   14000850e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000850f:	add    BYTE PTR [rdi],bh
   140008511:	(bad)  
   140008512:	xor    DWORD PTR [rdi+0x4c],ebx
   140008515:	outs   dx,DWORD PTR ds:[rsi]
   140008516:	movsxd ebp,DWORD PTR [rbx+0x69]
   140008519:	je     0x14000855b
   14000851b:	jae    0x140008591
   14000851d:	fs rex
   14000851f:	rex push rcx
   140008521:	rex.RB
   140008522:	rex.B
   140008523:	rex.B
   140008524:	rex pop rax
   140008526:	pop    rdx
   140008527:	add    BYTE PTR [rbx+0x5],al
   14000852a:	(bad)  
   14000852b:	jne    0x14000859b
   14000852d:	movsxd esp,DWORD PTR [rcx+0x75]
   140008530:	addr32 push 0x78655f74
   140008536:	movsxd esp,DWORD PTR [rbp+0x70]
   140008539:	je     0x1400085a4
   14000853b:	outs   dx,DWORD PTR ds:[rsi]
   14000853c:	outs   dx,BYTE PTR ds:[rsi]
   14000853d:	rex jae 0x1400085b4
   140008540:	fs rex
   140008542:	rex pop rcx
   140008544:	pop    r15
   140008546:	rex.WRX pop rax
   140008548:	pop    rdx
   140008549:	add    cl,cl
   14000854b:	add    bh,BYTE PTR [rdi]
   14000854d:	pop    rdi
   14000854e:	pop    rax
   14000854f:	(bad)
   140008554:	ins    BYTE PTR es:[rdi],dx
   140008555:	ins    BYTE PTR es:[rdi],dx
   140008556:	outs   dx,DWORD PTR ds:[rsi]
   140008557:	movsxd eax,DWORD PTR [rax+0x73]
   14000855a:	je     0x1400085c0
   14000855c:	rex
   14000855d:	rex pop rcx
   14000855f:	pop    r8
   140008561:	pop    rax
   140008562:	pop    rdx
   140008563:	add    ah,cl
   140008565:	add    bh,BYTE PTR [rdi]
   140008567:	pop    rdi
   140008568:	pop    rax
   140008569:	ins    BYTE PTR es:[rdi],dx
   14000856a:	outs   dx,BYTE PTR gs:[rsi]
   14000856c:	addr32 je 0x1400085d7
   14000856f:	pop    rdi
   140008570:	gs jb  0x1400085e5
   140008573:	outs   dx,DWORD PTR ds:[rsi]
   140008574:	jb     0x1400085b6
   140008576:	jae    0x1400085ec
   140008578:	fs rex
   14000857a:	rex pop rcx
   14000857c:	pop    r8
   14000857e:	push   rax
   14000857f:	rex.RB
   140008580:	rex.X
   140008581:	rex.R
   140008582:	rex pop rdx
   140008584:	add    BYTE PTR [rax],al
   140008586:	int    0x2
   140008588:	(bad)  
   140008589:	pop    rdi
   14000858a:	pop    rax
   14000858b:	outs   dx,DWORD PTR ds:[rsi]
   14000858c:	jne    0x140008602
   14000858e:	pop    rdi
   14000858f:	outs   dx,DWORD PTR ds:[rsi]
   140008590:	pop    di
   140008592:	jb     0x1400085f5
   140008594:	outs   dx,BYTE PTR ds:[rsi]
   140008595:	addr32 gs rex jae 0x14000860e
   14000859a:	fs rex
   14000859c:	rex pop rcx
   14000859e:	pop    r8
   1400085a0:	push   rax
   1400085a1:	rex.RB
   1400085a2:	rex.X
   1400085a3:	rex.R
   1400085a4:	rex pop rdx
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	xor    BYTE PTR [rcx],al
   1400085aa:	(bad)  
   1400085ab:	(bad)  
   1400085ac:	imul   esp,DWORD PTR [rax+r8*2+0x6c],0x6c61636f
   1400085b5:	gs rex jae 0x14000862d
   1400085b9:	fs rex
   1400085bb:	rex push rcx
   1400085bd:	rex.RB
   1400085be:	rex.B
   1400085bf:	pop    r15
   1400085c1:	rex.WXB pop r8
   1400085c3:	pop    rdx
   1400085c4:	add    BYTE PTR [rax],al
   1400085c6:	in     eax,dx
   1400085c7:	add    DWORD PTR [rdi],edi
   1400085c9:	pop    rdi
   1400085ca:	rex.RXB
   1400085cb:	gs je  0x140008635
   1400085ce:	ins    BYTE PTR es:[rdi],dx
   1400085cf:	outs   dx,DWORD PTR ds:[rsi]
   1400085d0:	(bad)
   1400085d5:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400085d8:	gs rex ins BYTE PTR es:[rdi],dx
   1400085db:	outs   dx,DWORD PTR ds:[rsi]
   1400085dc:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400085df:	gs rex jae 0x140008657
   1400085e3:	fs rex
   1400085e5:	rex
   1400085e6:	rex.XB
   1400085e7:	push   r8
   1400085e9:	rex.RB
   1400085ea:	push   r14
   1400085ec:	pop    rdi
   1400085ed:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400085ef:	movsxd ebp,DWORD PTR [rcx+0x6d]
   1400085f2:	jo     0x140008634
   1400085f4:	xor    DWORD PTR [rdx],esi
   1400085f6:	rex pop rax
   1400085f8:	pop    rdx
   1400085f9:	add    dh,cl
   1400085fb:	add    DWORD PTR [rdi],edi
   1400085fd:	pop    rdi
   1400085fe:	rex.RXB
   1400085ff:	gs je  0x140008665
   140008602:	(bad)  
   140008603:	je     0x140008645
   140008605:	(bad)  
   140008606:	and    al,0x63
   140008608:	je     0x140008683
   14000860a:	jo     0x140008671
   14000860c:	rex
   14000860d:	rex.R
   14000860e:	rex jae 0x140008685
   140008611:	fs rex
   140008613:	rex push rbx
   140008615:	pop    r15
   140008617:	rex.WXB push r8
   140008619:	rex.RB
   14000861a:	push   r8
   14000861c:	rex.RB
   14000861d:	rex.X push rsi
   14000861f:	data16 (bad) 
   140008621:	movsxd esp,DWORD PTR [rbp+0x74]
   140008624:	rex ins BYTE PTR es:[rdi],dx
   140008626:	outs   dx,DWORD PTR ds:[rsi]
   140008627:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000862a:	xor    al,BYTE PTR gs:[rax+0x50]
   14000862f:	rex.RB
   140008630:	rex.X push rsi
   140008632:	xor    al,0x32
   140008634:	rex
   140008635:	rex pop rdx
   140008637:	add    BYTE PTR [rax+0x535f3f02],dh
   14000863d:	jns    0x1400086b2
   14000863f:	gs jb  0x1400086b4
   140008642:	outs   dx,DWORD PTR ds:[rsi]
   140008643:	jb     0x1400086a4
   140008645:	ins    DWORD PTR es:[rdi],dx
   140008646:	(bad)  
   140008647:	jo     0x140008689
   140008649:	jae    0x1400086bf
   14000864b:	fs rex
   14000864d:	rex pop rcx
   14000864f:	push   r8
   140008651:	rex.RB
   140008652:	rex.X
   140008653:	rex.R
   140008654:	rex.W
   140008655:	rex pop rdx
   140008657:	add    ch,al
   140008659:	add    bh,BYTE PTR [rdi]
   14000865b:	pop    rdi
   14000865c:	push   rdi
   14000865d:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   140008664:	pop    rdi
   140008665:	ins    DWORD PTR es:[rdi],dx
   140008666:	(bad)  
   140008667:	jo     0x1400086a9
   140008669:	jae    0x1400086df
   14000866b:	fs rex
   14000866d:	rex pop rcx
   14000866f:	push   r8
   140008671:	rex.RB
   140008672:	rex.X
   140008673:	rex.R
   140008674:	rex.W
   140008675:	rex pop rdx
   140008677:	add    cl,ch
   140008679:	add    edi,DWORD PTR [rdi]
   14000867b:	addr32 gs je 0x1400086eb
   14000867f:	outs   dx,DWORD PTR ds:[rsi]
   140008680:	movsxd eax,DWORD PTR [rax+0x69]
   140008683:	outs   dx,DWORD PTR ds:[rsi]
   140008684:	jae    0x1400086e5
   140008686:	(bad)  
   140008688:	jae    0x1400086ef
   14000868a:	rex jae 0x140008701
   14000868d:	fs rex
   14000868f:	rex push rcx
   140008691:	rex.RB
   140008692:	rex.X
   140008693:	rex.B (bad) 
   140008695:	push   r14
   140008697:	ins    BYTE PTR es:[rdi],dx
   140008698:	outs   dx,DWORD PTR ds:[rsi]
   140008699:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000869c:	xor    al,BYTE PTR gs:[rax+0x58]
   1400086a1:	pop    rdx
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	rex.XB add dil,BYTE PTR [r15]
   1400086a7:	pop    rdi
   1400086a8:	rex.WB outs dx,DWORD PTR ds:[rsi]
   1400086aa:	jae    0x14000870b
   1400086ac:	(bad)  
   1400086ae:	jae    0x140008715
   1400086b0:	pop    rdi
   1400086b1:	fs je  0x140008723
   1400086b4:	jb     0x1400086f6
   1400086b6:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   1400086bd:	gs rex jae 0x140008735
   1400086c1:	fs rex
   1400086c3:	rex
   1400086c4:	rex.XB
   1400086c5:	pop    r8
   1400086c7:	push   rax
   1400086c8:	rex.RB
   1400086c9:	push   r14
   1400086cb:	xor    DWORD PTR [rdx],esi
   1400086cd:	rex
   1400086ce:	rex pop rdx
   1400086d0:	add    BYTE PTR [rax],al
   1400086d2:	sub    al,BYTE PTR [rax]
   1400086d4:	(bad)  
   1400086d5:	(bad)  
   1400086d6:	xor    BYTE PTR [rdi],bh
   1400086d8:	and    al,0x62
   1400086da:	(bad)  
   1400086db:	jae    0x140008746
   1400086dd:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400086e0:	je     0x140008754
   1400086e2:	gs (bad) 
   1400086e4:	ins    DWORD PTR es:[rdi],dx
   1400086e5:	(bad)  
   1400086e6:	jne    0x14000874e
   1400086e8:	rex
   1400086e9:	rex.R push rbp
   1400086eb:	(bad)  
   1400086ec:	and    al,0x63
   1400086ee:	push   0x745f7261
   1400086f3:	jb     0x140008756
   1400086f5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400086fd:	fs rex
   1400086ff:	rex
   140008700:	rex jae 0x140008777
   140008703:	fs rex
   140008705:	rex
   140008706:	rex.WB
   140008707:	rex.RB
   140008708:	rex.B
   140008709:	rex.B
   14000870a:	rex pop rax
   14000870c:	pop    rdx
   14000870d:	add    BYTE PTR [rdi+0x313f3f00],al
   140008713:	(bad)  
   140008714:	and    al,0x62
   140008716:	(bad)  
   140008717:	jae    0x140008782
   140008719:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000871c:	je     0x140008790
   14000871e:	gs (bad) 
   140008720:	ins    DWORD PTR es:[rdi],dx
   140008721:	(bad)  
   140008722:	jne    0x14000878a
   140008724:	rex
   140008725:	rex.R push rbp
   140008727:	(bad)  
   140008728:	and    al,0x63
   14000872a:	push   0x745f7261
   14000872f:	jb     0x140008792
   140008731:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008739:	fs rex
   14000873b:	rex
   14000873c:	rex jae 0x1400087b3
   14000873f:	fs rex
   140008741:	rex push rbp
   140008743:	rex.RB
   140008744:	rex.B
   140008745:	rex.B
   140008746:	rex pop rax
   140008748:	pop    rdx
   140008749:	add    al,dh
   14000874b:	add    al,0x3f
   14000874d:	jae    0x1400087b6
   14000874f:	gs je  0x1400087b5
   140008752:	rex (bad) 
   140008754:	and    al,0x62
   140008756:	(bad)  
   140008757:	jae    0x1400087c2
   140008759:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000875c:	je     0x1400087d0
   14000875e:	gs (bad) 
   140008760:	ins    DWORD PTR es:[rdi],dx
   140008761:	(bad)  
   140008762:	jne    0x1400087ca
   140008764:	rex
   140008765:	rex.R push rbp
   140008767:	(bad)  
   140008768:	and    al,0x63
   14000876a:	push   0x745f7261
   14000876f:	jb     0x1400087d2
   140008771:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008779:	fs rex
   14000877b:	rex
   14000877c:	rex jae 0x1400087f3
   14000877f:	fs rex
   140008781:	rex push rcx
   140008783:	rex.RB
   140008784:	rex.B
   140008785:	rex.B
   140008786:	rex.W pop rax
   140008788:	pop    rdx
   140008789:	add    cl,bh
   14000878b:	add    al,0x3f
   14000878d:	jae    0x1400087fd
   14000878f:	gs js  0x140008806
   140008792:	movsxd eax,DWORD PTR [rax+0x3f]
   140008795:	and    al,0x62
   140008797:	(bad)  
   140008798:	jae    0x140008803
   14000879a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000879d:	je     0x140008811
   14000879f:	gs (bad) 
   1400087a1:	ins    DWORD PTR es:[rdi],dx
   1400087a2:	(bad)  
   1400087a3:	jne    0x14000880b
   1400087a5:	rex
   1400087a6:	rex.R push rbp
   1400087a8:	(bad)  
   1400087a9:	and    al,0x63
   1400087ab:	push   0x745f7261
   1400087b0:	jb     0x140008813
   1400087b2:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400087ba:	fs rex
   1400087bc:	rex
   1400087bd:	rex jae 0x140008834
   1400087c0:	fs rex
   1400087c2:	rex push rcx
   1400087c4:	rex.RB
   1400087c5:	rex.B
   1400087c6:	rex.B
   1400087c7:	rex.W pop rax
   1400087c9:	pop    rdx
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	inc    DWORD PTR [rdi+rdi*1]
   1400087cf:	jae    0x140008841
   1400087d1:	jne    0x140008847
   1400087d3:	movsxd eax,DWORD PTR [rax+0x3f]
   1400087d6:	and    al,0x62
   1400087d8:	(bad)  
   1400087d9:	jae    0x140008844
   1400087db:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400087de:	je     0x140008852
   1400087e0:	gs (bad) 
   1400087e2:	ins    DWORD PTR es:[rdi],dx
   1400087e3:	(bad)  
   1400087e4:	jne    0x14000884c
   1400087e6:	rex
   1400087e7:	rex.R push rbp
   1400087e9:	(bad)  
   1400087ea:	and    al,0x63
   1400087ec:	push   0x745f7261
   1400087f1:	jb     0x140008854
   1400087f3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400087fb:	fs rex
   1400087fd:	rex
   1400087fe:	rex jae 0x140008875
   140008801:	fs rex
   140008803:	rex push rcx
   140008805:	rex.RB
   140008806:	rex.B
   140008807:	rex.B
   140008808:	rex.W
   140008809:	rex.R
   14000880a:	rex pop rdx
   14000880c:	add    BYTE PTR [rax],al
   14000880e:	add    al,BYTE PTR [rip+0x7570733f]        # 0x1b570fb53
   140008814:	je     0x140008884
   140008816:	rex (bad) 
   140008818:	and    al,0x62
   14000881a:	(bad)  
   14000881b:	jae    0x140008886
   14000881d:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008820:	je     0x140008894
   140008822:	gs (bad) 
   140008824:	ins    DWORD PTR es:[rdi],dx
   140008825:	(bad)  
   140008826:	jne    0x14000888e
   140008828:	rex
   140008829:	rex.R push rbp
   14000882b:	(bad)  
   14000882c:	and    al,0x63
   14000882e:	push   0x745f7261
   140008833:	jb     0x140008896
   140008835:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000883d:	fs rex
   14000883f:	rex
   140008840:	rex jae 0x1400088b7
   140008843:	fs rex
   140008845:	rex push rcx
   140008847:	rex.RB
   140008848:	rex.B
   140008849:	pop    r15
   14000884b:	rex.WX push rax
   14000884d:	rex.RB
   14000884e:	rex.X
   14000884f:	rex.R pop rdi
   140008851:	rex.WX
   140008852:	rex pop rdx
   140008854:	add    BYTE PTR [rax],al
   140008856:	jl     0x14000885a
   140008858:	(bad)  
   140008859:	pop    rdi
   14000885a:	push   rax
   14000885b:	outs   dx,BYTE PTR ds:[rsi]
   14000885c:	imul   ebp,DWORD PTR [rsi+0x63],0x62243f40
   140008863:	(bad)  
   140008864:	jae    0x1400088cf
   140008866:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008869:	je     0x1400088dd
   14000886b:	gs (bad) 
   14000886d:	ins    DWORD PTR es:[rdi],dx
   14000886e:	(bad)  
   14000886f:	jne    0x1400088d7
   140008871:	rex
   140008872:	rex.R push rbp
   140008874:	(bad)  
   140008875:	and    al,0x63
   140008877:	push   0x745f7261
   14000887c:	jb     0x1400088df
   14000887e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008886:	fs rex
   140008888:	rex
   140008889:	rex jae 0x140008900
   14000888c:	fs rex
   14000888e:	rex
   14000888f:	rex.WB
   140008890:	rex.RB
   140008891:	rex.B
   140008892:	push   r8
   140008894:	rex.RB
   140008895:	rex.B
   140008896:	rex.R pop rax
   140008898:	pop    rdx
   140008899:	add    BYTE PTR [rbx+0x0],bh
   14000889c:	(bad)  
   14000889d:	(bad)  
   14000889e:	xor    DWORD PTR [rdi],edi
   1400088a0:	and    al,0x62
   1400088a2:	(bad)  
   1400088a3:	jae    0x14000890e
   1400088a5:	movsxd ebx,DWORD PTR [rdi+0x69]
   1400088a8:	outs   dx,DWORD PTR ds:[rsi]
   1400088a9:	jae    0x1400088eb
   1400088ab:	rex.R push rbp
   1400088ad:	(bad)  
   1400088ae:	and    al,0x63
   1400088b0:	push   0x745f7261
   1400088b5:	jb     0x140008918
   1400088b7:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400088bf:	fs rex
   1400088c1:	rex
   1400088c2:	rex jae 0x140008939
   1400088c5:	fs rex
   1400088c7:	rex push rbp
   1400088c9:	rex.RB
   1400088ca:	rex.B
   1400088cb:	rex.B
   1400088cc:	rex pop rax
   1400088ce:	pop    rdx
   1400088cf:	add    dh,ah
   1400088d1:	add    al,0x3f
   1400088d3:	jae    0x14000893a
   1400088d5:	je     0x14000894a
   1400088d7:	je     0x14000893a
   1400088d9:	je     0x140008940
   1400088db:	rex (bad) 
   1400088dd:	and    al,0x62
   1400088df:	(bad)  
   1400088e0:	jae    0x14000894b
   1400088e2:	movsxd ebx,DWORD PTR [rdi+0x69]
   1400088e5:	outs   dx,DWORD PTR ds:[rsi]
   1400088e6:	jae    0x140008928
   1400088e8:	rex.R push rbp
   1400088ea:	(bad)  
   1400088eb:	and    al,0x63
   1400088ed:	push   0x745f7261
   1400088f2:	jb     0x140008955
   1400088f4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400088fc:	fs rex
   1400088fe:	rex
   1400088ff:	rex jae 0x140008976
   140008902:	fs rex
   140008904:	rex push rcx
   140008906:	rex.RB
   140008907:	rex.B
   140008908:	pop    r8
   14000890a:	rex.W pop rdi
   14000890c:	rex.WRX
   14000890d:	rex pop rdx
   14000890f:	add    BYTE PTR [rsi+0x2],dh
   140008912:	(bad)  
   140008913:	pop    rdi
   140008914:	rex.WRXB jae 0x14000897d
   140008917:	js     0x140008959
   140008919:	(bad)  
   14000891a:	and    al,0x62
   14000891c:	(bad)  
   14000891d:	jae    0x140008988
   14000891f:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140008922:	jae    0x140008998
   140008924:	jb     0x14000898b
   140008926:	(bad)  
   140008927:	ins    DWORD PTR es:[rdi],dx
   140008928:	rex
   140008929:	rex.R push rbp
   14000892b:	(bad)  
   14000892c:	and    al,0x63
   14000892e:	push   0x745f7261
   140008933:	jb     0x140008996
   140008935:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000893d:	fs rex
   14000893f:	rex
   140008940:	rex jae 0x1400089b7
   140008943:	fs rex
   140008945:	rex push rcx
   140008947:	rex.RB
   140008948:	rex.B
   140008949:	pop    r8
   14000894b:	pop    rax
   14000894c:	pop    rdx
   14000894d:	add    BYTE PTR [rsi+0x6c663f03],cl
   140008953:	jne    0x1400089c8
   140008955:	push   0x62243f40
   14000895a:	(bad)  
   14000895b:	jae    0x1400089c6
   14000895d:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140008960:	jae    0x1400089d6
   140008962:	jb     0x1400089c9
   140008964:	(bad)  
   140008965:	ins    DWORD PTR es:[rdi],dx
   140008966:	rex
   140008967:	rex.R push rbp
   140008969:	(bad)  
   14000896a:	and    al,0x63
   14000896c:	push   0x745f7261
   140008971:	jb     0x1400089d4
   140008973:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000897b:	fs rex
   14000897d:	rex
   14000897e:	rex jae 0x1400089f5
   140008981:	fs rex
   140008983:	rex push rcx
   140008985:	rex.RB
   140008986:	rex.B
   140008987:	rex.B
   140008988:	rex.B
   140008989:	rex.RB
   14000898a:	push   r14
   14000898c:	xor    DWORD PTR [rdx],esi
   14000898e:	rex pop rax
   140008990:	pop    rdx
   140008991:	add    BYTE PTR [rdx+rax*1+0x3f],al
   140008995:	pop    rdi
   140008996:	rex.WB jo 0x1400089ff
   140008999:	js     0x1400089db
   14000899b:	(bad)  
   14000899c:	and    al,0x62
   14000899e:	(bad)  
   14000899f:	jae    0x140008a0a
   1400089a1:	movsxd ebx,DWORD PTR [rdi+0x69]
   1400089a4:	jae    0x140008a1a
   1400089a6:	jb     0x140008a0d
   1400089a8:	(bad)  
   1400089a9:	ins    DWORD PTR es:[rdi],dx
   1400089aa:	rex
   1400089ab:	rex.R push rbp
   1400089ad:	(bad)  
   1400089ae:	and    al,0x63
   1400089b0:	push   0x745f7261
   1400089b5:	jb     0x140008a18
   1400089b7:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400089bf:	fs rex
   1400089c1:	rex
   1400089c2:	rex jae 0x140008a39
   1400089c5:	fs rex
   1400089c7:	rex push rcx
   1400089c9:	rex.RB
   1400089ca:	rex.B
   1400089cb:	pop    r15
   1400089cd:	rex.WRX pop rdi
   1400089cf:	rex.WRX
   1400089d0:	rex pop rdx
   1400089d2:	add    BYTE PTR [rax],al
   1400089d4:	(bad)  
   1400089d5:	add    BYTE PTR [rdi],bh
   1400089d7:	(bad)  
   1400089d8:	xor    BYTE PTR [rdi],bh
   1400089da:	and    al,0x62
   1400089dc:	(bad)  
   1400089dd:	jae    0x140008a48
   1400089df:	movsxd ebx,DWORD PTR [rdi+0x69]
   1400089e2:	outs   dx,DWORD PTR ds:[rsi]
   1400089e3:	jae    0x140008a59
   1400089e5:	jb     0x140008a4c
   1400089e7:	(bad)  
   1400089e8:	ins    DWORD PTR es:[rdi],dx
   1400089e9:	rex
   1400089ea:	rex.R push rbp
   1400089ec:	(bad)  
   1400089ed:	and    al,0x63
   1400089ef:	push   0x745f7261
   1400089f4:	jb     0x140008a57
   1400089f6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400089fe:	fs rex
   140008a00:	rex
   140008a01:	rex jae 0x140008a78
   140008a04:	fs rex
   140008a06:	rex push rcx
   140008a08:	rex.RB
   140008a09:	rex.B
   140008a0a:	rex.B
   140008a0b:	rex push rax
   140008a0d:	rex.RB
   140008a0e:	push   r14
   140008a10:	(bad)  
   140008a11:	and    al,0x62
   140008a13:	(bad)  
   140008a14:	jae    0x140008a7f
   140008a16:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008a19:	je     0x140008a8d
   140008a1b:	gs (bad) 
   140008a1d:	ins    DWORD PTR es:[rdi],dx
   140008a1e:	(bad)  
   140008a1f:	jne    0x140008a87
   140008a21:	rex
   140008a22:	rex.R push rbp
   140008a24:	(bad)  
   140008a25:	and    al,0x63
   140008a27:	push   0x745f7261
   140008a2c:	jb     0x140008a8f
   140008a2e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008a36:	fs rex
   140008a38:	rex
   140008a39:	rex xor DWORD PTR [rax+0x40],eax
   140008a3d:	pop    rdx
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	jle    0x140008a42
   140008a42:	(bad)  
   140008a43:	(bad)  
   140008a44:	xor    DWORD PTR [rdi],edi
   140008a46:	and    al,0x62
   140008a48:	(bad)  
   140008a49:	jae    0x140008ab4
   140008a4b:	movsxd ebx,DWORD PTR [rdi+0x69]
   140008a4e:	outs   dx,DWORD PTR ds:[rsi]
   140008a4f:	jae    0x140008ac5
   140008a51:	jb     0x140008ab8
   140008a53:	(bad)  
   140008a54:	ins    DWORD PTR es:[rdi],dx
   140008a55:	rex
   140008a56:	rex.R push rbp
   140008a58:	(bad)  
   140008a59:	and    al,0x63
   140008a5b:	push   0x745f7261
   140008a60:	jb     0x140008ac3
   140008a62:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008a6a:	fs rex
   140008a6c:	rex
   140008a6d:	rex jae 0x140008ae4
   140008a70:	fs rex
   140008a72:	rex push rbp
   140008a74:	rex.RB
   140008a75:	rex.B
   140008a76:	rex.B
   140008a77:	rex pop rax
   140008a79:	pop    rdx
   140008a7a:	add    BYTE PTR [rax],al
   140008a7c:	pop    rax
   140008a7d:	add    bh,BYTE PTR [rdi]
   140008a7f:	pop    rdi
   140008a80:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008a82:	movsxd ebp,DWORD PTR [rbx+0x40]
   140008a85:	(bad)  
   140008a86:	and    al,0x62
   140008a88:	(bad)  
   140008a89:	jae    0x140008af4
   140008a8b:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008a8e:	je     0x140008b02
   140008a90:	gs (bad) 
   140008a92:	ins    DWORD PTR es:[rdi],dx
   140008a93:	(bad)  
   140008a94:	jne    0x140008afc
   140008a96:	rex
   140008a97:	rex.R push rbp
   140008a99:	(bad)  
   140008a9a:	and    al,0x63
   140008a9c:	push   0x745f7261
   140008aa1:	jb     0x140008b04
   140008aa3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008aab:	fs rex
   140008aad:	rex
   140008aae:	rex jae 0x140008b25
   140008ab1:	fs rex
   140008ab3:	rex push rbp
   140008ab5:	rex.RB
   140008ab6:	rex.B
   140008ab7:	pop    r8
   140008ab9:	pop    rax
   140008aba:	pop    rdx
   140008abb:	add    BYTE PTR [rdi+0x555f3f02],bh
   140008ac1:	outs   dx,BYTE PTR ds:[rsi]
   140008ac2:	ins    BYTE PTR es:[rdi],dx
   140008ac3:	outs   dx,DWORD PTR ds:[rsi]
   140008ac4:	movsxd ebp,DWORD PTR [rbx+0x40]
   140008ac7:	(bad)  
   140008ac8:	and    al,0x62
   140008aca:	(bad)  
   140008acb:	jae    0x140008b36
   140008acd:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008ad0:	je     0x140008b44
   140008ad2:	gs (bad) 
   140008ad4:	ins    DWORD PTR es:[rdi],dx
   140008ad5:	(bad)  
   140008ad6:	jne    0x140008b3e
   140008ad8:	rex
   140008ad9:	rex.R push rbp
   140008adb:	(bad)  
   140008adc:	and    al,0x63
   140008ade:	push   0x745f7261
   140008ae3:	jb     0x140008b46
   140008ae5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008aed:	fs rex
   140008aef:	rex
   140008af0:	rex jae 0x140008b67
   140008af3:	fs rex
   140008af5:	rex push rbp
   140008af7:	rex.RB
   140008af8:	rex.B
   140008af9:	pop    r8
   140008afb:	pop    rax
   140008afc:	pop    rdx
   140008afd:	add    BYTE PTR [rsp+rax*1],bl
   140008b00:	(bad)  
   140008b01:	imul   ebp,DWORD PTR [rbp+0x62],0x3f406575
   140008b08:	and    al,0x62
   140008b0a:	(bad)  
   140008b0b:	jae    0x140008b76
   140008b0d:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008b10:	je     0x140008b84
   140008b12:	gs (bad) 
   140008b14:	ins    DWORD PTR es:[rdi],dx
   140008b15:	(bad)  
   140008b16:	jne    0x140008b7e
   140008b18:	rex
   140008b19:	rex.R push rbp
   140008b1b:	(bad)  
   140008b1c:	and    al,0x63
   140008b1e:	push   0x745f7261
   140008b23:	jb     0x140008b86
   140008b25:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008b2d:	fs rex
   140008b2f:	rex
   140008b30:	rex jae 0x140008ba7
   140008b33:	fs rex
   140008b35:	rex
   140008b36:	rex.WRB
   140008b37:	rex.RB
   140008b38:	rex.B
   140008b39:	pop    r8
   140008b3b:	rex.B
   140008b3c:	rex.RB
   140008b3d:	rex.X push rsi
   140008b3f:	ins    BYTE PTR es:[rdi],dx
   140008b40:	outs   dx,DWORD PTR ds:[rsi]
   140008b41:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008b44:	xor    al,BYTE PTR gs:[rax+0x40]
   140008b49:	pop    rdx
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	(bad)  
   140008b4d:	add    al,0x3f
   140008b4f:	jae    0x140008bb6
   140008b51:	je     0x140008bb5
   140008b53:	jne    0x140008bbb
   140008b55:	rex (bad) 
   140008b57:	and    al,0x62
   140008b59:	(bad)  
   140008b5a:	jae    0x140008bc5
   140008b5c:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008b5f:	je     0x140008bd3
   140008b61:	gs (bad) 
   140008b63:	ins    DWORD PTR es:[rdi],dx
   140008b64:	(bad)  
   140008b65:	jne    0x140008bcd
   140008b67:	rex
   140008b68:	rex.R push rbp
   140008b6a:	(bad)  
   140008b6b:	and    al,0x63
   140008b6d:	push   0x745f7261
   140008b72:	jb     0x140008bd5
   140008b74:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008b7c:	fs rex
   140008b7e:	rex
   140008b7f:	rex jae 0x140008bf6
   140008b82:	fs rex
   140008b84:	rex
   140008b85:	rex.WRB
   140008b86:	rex.RB
   140008b87:	rex.B
   140008b88:	push   r8
   140008b8a:	rex.RB
   140008b8b:	push   r14
   140008b8d:	xor    DWORD PTR [rdx],esi
   140008b8f:	rex push rax
   140008b91:	rex.RB
   140008b92:	rex.B
   140008b93:	rex.R pop rdi
   140008b95:	rex.WX
   140008b96:	rex pop rdx
   140008b98:	add    BYTE PTR [rax],al
   140008b9a:	test   BYTE PTR [rdi+rdi*1],0x73
   140008b9e:	push   0x616d776f
   140008ba3:	outs   dx,BYTE PTR ds:[rsi]
   140008ba4:	jns    0x140008c09
   140008ba6:	rex (bad) 
   140008ba8:	and    al,0x62
   140008baa:	(bad)  
   140008bab:	jae    0x140008c16
   140008bad:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008bb0:	je     0x140008c24
   140008bb2:	gs (bad) 
   140008bb4:	ins    DWORD PTR es:[rdi],dx
   140008bb5:	(bad)  
   140008bb6:	jne    0x140008c1e
   140008bb8:	rex
   140008bb9:	rex.R push rbp
   140008bbb:	(bad)  
   140008bbc:	and    al,0x63
   140008bbe:	push   0x745f7261
   140008bc3:	jb     0x140008c26
   140008bc5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008bcd:	fs rex
   140008bcf:	rex
   140008bd0:	rex jae 0x140008c47
   140008bd3:	fs rex
   140008bd5:	rex
   140008bd6:	rex.WRB
   140008bd7:	rex.RB
   140008bd8:	rex.B
   140008bd9:	pop    r15
   140008bdb:	rex.WX pop rax
   140008bdd:	pop    rdx
   140008bde:	add    BYTE PTR [rax],al
   140008be0:	and    DWORD PTR [rip+0x6e79733f],eax        # 0x1ae79ff25
   140008be6:	movsxd eax,DWORD PTR [rax+0x3f]
   140008be9:	and    al,0x62
   140008beb:	(bad)  
   140008bec:	jae    0x140008c57
   140008bee:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008bf1:	je     0x140008c65
   140008bf3:	gs (bad) 
   140008bf5:	ins    DWORD PTR es:[rdi],dx
   140008bf6:	(bad)  
   140008bf7:	jne    0x140008c5f
   140008bf9:	rex
   140008bfa:	rex.R push rbp
   140008bfc:	(bad)  
   140008bfd:	and    al,0x63
   140008bff:	push   0x745f7261
   140008c04:	jb     0x140008c67
   140008c06:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008c0e:	fs rex
   140008c10:	rex
   140008c11:	rex jae 0x140008c88
   140008c14:	fs rex
   140008c16:	rex
   140008c17:	rex.WRB
   140008c18:	rex.RB
   140008c19:	rex.B
   140008c1a:	rex.B
   140008c1b:	rex.W pop rax
   140008c1d:	pop    rdx
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	rex add eax,0x6c66753f
   140008c26:	outs   dx,DWORD PTR ds:[rsi]
   140008c27:	ja     0x140008c69
   140008c29:	(bad)  
   140008c2a:	and    al,0x62
   140008c2c:	(bad)  
   140008c2d:	jae    0x140008c98
   140008c2f:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008c32:	je     0x140008ca6
   140008c34:	gs (bad) 
   140008c36:	ins    DWORD PTR es:[rdi],dx
   140008c37:	(bad)  
   140008c38:	jne    0x140008ca0
   140008c3a:	rex
   140008c3b:	rex.R push rbp
   140008c3d:	(bad)  
   140008c3e:	and    al,0x63
   140008c40:	push   0x745f7261
   140008c45:	jb     0x140008ca8
   140008c47:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008c4f:	fs rex
   140008c51:	rex
   140008c52:	rex jae 0x140008cc9
   140008c55:	fs rex
   140008c57:	rex
   140008c58:	rex.WRB
   140008c59:	rex.RB
   140008c5a:	rex.B
   140008c5b:	rex.B
   140008c5c:	rex.W pop rax
   140008c5e:	pop    rdx
   140008c5f:	add    BYTE PTR [rbx+0x5],ch
   140008c62:	(bad)  
   140008c63:	js     0x140008cd8
   140008c65:	addr32 gs je 0x140008cd7
   140008c69:	rex (bad) 
   140008c6b:	and    al,0x62
   140008c6d:	(bad)  
   140008c6e:	jae    0x140008cd9
   140008c70:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008c73:	je     0x140008ce7
   140008c75:	gs (bad) 
   140008c77:	ins    DWORD PTR es:[rdi],dx
   140008c78:	(bad)  
   140008c79:	jne    0x140008ce1
   140008c7b:	rex
   140008c7c:	rex.R push rbp
   140008c7e:	(bad)  
   140008c7f:	and    al,0x63
   140008c81:	push   0x745f7261
   140008c86:	jb     0x140008ce9
   140008c88:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008c90:	fs rex
   140008c92:	rex
   140008c93:	rex jae 0x140008d0a
   140008c96:	fs rex
   140008c98:	rex
   140008c99:	rex.WRB
   140008c9a:	rex.RB
   140008c9b:	rex.B
   140008c9c:	pop    r15
   140008c9e:	rex.WX push rax
   140008ca0:	rex.RB
   140008ca1:	rex.B
   140008ca2:	rex.R pop rdi
   140008ca4:	rex.WX
   140008ca5:	rex pop rdx
   140008ca7:	add    BYTE PTR [rsi+0x5],ch
   140008caa:	(bad)  
   140008cab:	js     0x140008d20
   140008cad:	jo     0x140008d24
   140008caf:	je     0x140008d1f
   140008cb1:	rex (bad) 
   140008cb3:	and    al,0x62
   140008cb5:	(bad)  
   140008cb6:	jae    0x140008d21
   140008cb8:	movsxd ebx,DWORD PTR [rdi+0x73]
   140008cbb:	je     0x140008d2f
   140008cbd:	gs (bad) 
   140008cbf:	ins    DWORD PTR es:[rdi],dx
   140008cc0:	(bad)  
   140008cc1:	jne    0x140008d29
   140008cc3:	rex
   140008cc4:	rex.R push rbp
   140008cc6:	(bad)  
   140008cc7:	and    al,0x63
   140008cc9:	push   0x745f7261
   140008cce:	jb     0x140008d31
   140008cd0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008cd8:	fs rex
   140008cda:	rex
   140008cdb:	rex jae 0x140008d52
   140008cde:	fs rex
   140008ce0:	rex
   140008ce1:	rex.WRB
   140008ce2:	rex.RB
   140008ce3:	rex.B
   140008ce4:	pop    r15
   140008ce6:	rex.WX push rax
   140008ce8:	rex.RB
   140008ce9:	rex.X
   140008cea:	rex.R pop rdi
   140008cec:	rex.WX
   140008ced:	rex pop rdx
   140008cef:	add    BYTE PTR [rdi+0x425f3f01],ah
   140008cf5:	rex.B
   140008cf6:	rex.R
   140008cf7:	rex.WRXB
   140008cf8:	rex.RX
   140008cf9:	rex.RX
   140008cfa:	rex jae 0x140008d71
   140008cfd:	fs rex
   140008cff:	rex xor ebx,DWORD PTR [rdi+0x4a]
   140008d03:	rex.X add BYTE PTR [rax],al
   140008d06:	cmc    
   140008d07:	add    edi,DWORD PTR [rdi]
   140008d09:	imul   esp,DWORD PTR [rax+rax*2+0x3f],0x79746324
   140008d11:	jo     0x140008d78
   140008d13:	rex
   140008d14:	rex.R
   140008d15:	rex jae 0x140008d8c
   140008d18:	fs rex
   140008d1a:	xor    dl,BYTE PTR [rsi+0x30]
   140008d1e:	ins    BYTE PTR es:[rdi],dx
   140008d1f:	outs   dx,DWORD PTR ds:[rsi]
   140008d20:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008d23:	xor    al,BYTE PTR gs:[rax+0x41]
   140008d28:	add    BYTE PTR [rax],al
   140008d2a:	pop    rcx
   140008d2b:	add    DWORD PTR [rdi],edi
   140008d2d:	(bad)  
   140008d2e:	pop    rdi
   140008d2f:	(bad)  
   140008d30:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   140008d37:	gs rex jae 0x140008daf
   140008d3b:	fs rex
   140008d3d:	rex
   140008d3e:	ss rex.X
   140008d40:	add    BYTE PTR [rdx],sil
   140008d43:	add    DWORD PTR [rdi],edi
   140008d45:	(bad)  
   140008d46:	pop    rdi
   140008d47:	(bad)  
   140008d48:	(bad)  
   140008d49:	and    al,0x62
   140008d4b:	(bad)  
   140008d4c:	jae    0x140008db7
   140008d4e:	movsxd ebx,DWORD PTR [rdi+0x69]
   140008d51:	outs   dx,DWORD PTR ds:[rsi]
   140008d52:	jae    0x140008d94
   140008d54:	rex.R push rbp
   140008d56:	(bad)  
   140008d57:	and    al,0x63
   140008d59:	push   0x745f7261
   140008d5e:	jb     0x140008dc1
   140008d60:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140008d68:	fs rex
   140008d6a:	rex
   140008d6b:	rex jae 0x140008de2
   140008d6e:	fs rex
   140008d70:	rex
   140008d71:	ss rex.X
   140008d73:	add    BYTE PTR [rax],al
   140008d76:	rex.WRB push r11
   140008d78:	push   rsi
   140008d79:	rex.XB push r8
   140008d7b:	xor    DWORD PTR [rdx],esi
   140008d7d:	xor    BYTE PTR [rsi],ch
   140008d7f:	fs ins BYTE PTR es:[rdi],dx
   140008d81:	ins    BYTE PTR es:[rdi],dx
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	(bad)  
   140008d85:	add    al,0x5f
   140008d87:	jo     0x140008dfe
   140008d89:	jb     0x140008df0
   140008d8b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008d8e:	ins    BYTE PTR es:[rdi],dx
   140008d8f:	add    BYTE PTR [rax+0x0],dh
   140008d92:	(bad)  
   140008d93:	(bad)  
   140008d94:	xor    al,BYTE PTR [rax+0x59]
   140008d97:	push   r8
   140008d99:	rex.RB
   140008d9a:	pop    r8
   140008d9c:	pop    rdi
   140008d9d:	rex.WXB
   140008d9e:	rex pop rdx
   140008da0:	add    BYTE PTR [rax],al
   140008da2:	jb     0x140008da4
   140008da4:	(bad)  
   140008da5:	(bad)  
   140008da6:	xor    eax,DWORD PTR [rax+0x59]
   140008da9:	pop    r8
   140008dab:	push   rax
   140008dac:	rex.RB
   140008dad:	pop    r8
   140008daf:	rex pop rdx
   140008db1:	add    BYTE PTR [rsi+0x6f746105],dh
   140008db7:	imul   eax,DWORD PTR [rax],0x6d06b700
   140008dbd:	gs ins DWORD PTR es:[rdi],dx
   140008dbf:	ins    DWORD PTR es:[rdi],dx
   140008dc0:	outs   dx,DWORD PTR ds:[rsi]
   140008dc1:	jbe    0x140008e28
   140008dc3:	add    BYTE PTR [rip+0x303f3f00],bl        # 0x1703fccc9
   140008dc9:	(bad)
   140008dce:	(bad)  
   140008dcf:	jae    0x140008e45
   140008dd1:	rex jae 0x140008e48
   140008dd4:	fs rex
   140008dd6:	rex push rcx
   140008dd8:	rex.RB
   140008dd9:	rex.B
   140008dda:	rex.B
   140008ddb:	rex push rax
   140008ddd:	rex.RB
   140008dde:	rex.X
   140008ddf:	rex.R
   140008de0:	rex pop rdx
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	fiadd  DWORD PTR [rdx]
   140008de6:	pop    rdi
   140008de7:	push   0x746f7079
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	sbb    al,0x0
   140008df0:	(bad)  
   140008df1:	(bad)  
   140008df2:	xor    BYTE PTR [rdx+0x61],ah
   140008df5:	fs pop rdi
   140008df7:	movsxd esp,DWORD PTR [rcx+0x73]
   140008dfa:	je     0x140008e3c
   140008dfc:	jae    0x140008e72
   140008dfe:	fs rex
   140008e00:	rex push rcx
   140008e02:	rex.RB
   140008e03:	rex.B
   140008e04:	rex.B
   140008e05:	rex
   140008e06:	rex.B
   140008e07:	rex.RB
   140008e08:	rex.X push rsi
   140008e0a:	xor    BYTE PTR [rcx],dh
   140008e0c:	rex
   140008e0d:	rex pop rdx
   140008e0f:	add    BYTE PTR [rax+rax*1],ch
   140008e12:	(bad)  
   140008e13:	(bad)  
   140008e14:	xor    BYTE PTR [rbp+0x78],ah
   140008e17:	movsxd esp,DWORD PTR [rbp+0x70]
   140008e1a:	je     0x140008e85
   140008e1c:	outs   dx,DWORD PTR ds:[rsi]
   140008e1d:	outs   dx,BYTE PTR ds:[rsi]
   140008e1e:	rex jae 0x140008e95
   140008e21:	fs rex
   140008e23:	rex push rcx
   140008e25:	rex.RB
   140008e26:	rex.B
   140008e27:	rex.B
   140008e28:	rex
   140008e29:	rex.B
   140008e2a:	rex.RB
   140008e2b:	rex.X push rsi
   140008e2d:	xor    BYTE PTR [rcx],dh
   140008e2f:	rex
   140008e30:	rex pop rdx
   140008e32:	add    BYTE PTR [rax],al
   140008e34:	data16 add BYTE PTR [rdi],bh
   140008e37:	(bad)  
   140008e38:	xor    DWORD PTR [rdx+0x61],esp
   140008e3b:	fs pop rdi
   140008e3d:	movsxd esp,DWORD PTR [rcx+0x73]
   140008e40:	je     0x140008e82
   140008e42:	jae    0x140008eb8
   140008e44:	fs rex
   140008e46:	rex push rbp
   140008e48:	rex.RB
   140008e49:	rex.B
   140008e4a:	rex.B
   140008e4b:	rex pop rax
   140008e4d:	pop    rdx
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	add    DWORD PTR [r15+0x43],r11d
   140008e54:	js     0x140008ece
   140008e56:	push   rsp
   140008e57:	push   0x45776f72
   140008e5c:	js     0x140008ec1
   140008e5e:	gs jo  0x140008ed5
   140008e61:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   140008e68:	pop    rdi
   140008e69:	pop    rdi
   140008e6a:	rex.XB js 0x140008ee5
   140008e6d:	rex.RX jb 0x140008ed1
   140008e70:	ins    DWORD PTR es:[rdi],dx
   140008e71:	gs rex.W (bad) 
   140008e74:	outs   dx,BYTE PTR ds:[rsi]
   140008e75:	fs ins BYTE PTR es:[rdi],dx
   140008e77:	gs jb  0x140008ead
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	mov    ch,0x6
   140008e7e:	ins    DWORD PTR es:[rdi],dx
   140008e7f:	gs ins DWORD PTR es:[rdi],dx
   140008e81:	movsxd esi,DWORD PTR [rax+0x79]
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	mov    ecx,0x6d656d06
   140008e8b:	jae    0x140008ef2
   140008e8d:	je     0x140008e8f
   140008e8f:	add    BYTE PTR [rbp+0x53],cl
   140008e92:	push   rsi
   140008e93:	rex.XB push r10
   140008e95:	xor    DWORD PTR [rdx],esi
   140008e97:	xor    BYTE PTR [rsi],ch
   140008e99:	fs ins BYTE PTR es:[rdi],dx
   140008e9b:	ins    BYTE PTR es:[rdi],dx
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	pop    rbx
   140008e9f:	add    ebx,DWORD PTR [rdi+0x6c]
   140008ea2:	outs   dx,DWORD PTR ds:[rsi]
   140008ea3:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008ea6:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   140008ead:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008eb0:	or     DWORD PTR [rdx],eax
   140008eb2:	pop    rdi
   140008eb3:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008eb6:	ins    BYTE PTR es:[rdi],dx
   140008eb7:	outs   dx,DWORD PTR ds:[rsi]
   140008eb8:	movsxd ebx,DWORD PTR [rdi+0x63]
   140008ebb:	jb     0x140008f31
   140008ebd:	add    BYTE PTR [rdi+0x645f5f01],bl
   140008ec3:	ins    BYTE PTR es:[rdi],dx
   140008ec4:	ins    BYTE PTR es:[rdi],dx
   140008ec5:	outs   dx,DWORD PTR ds:[rsi]
   140008ec6:	outs   dx,BYTE PTR ds:[rsi]
   140008ec7:	gs js  0x140008f33
   140008eca:	je     0x140008ecc
   140008ecc:	pop    rsp
   140008ecd:	add    DWORD PTR [rdi+0x5f],ebx
   140008ed0:	rex.XB pop r15
   140008ed2:	jae    0x140008f44
   140008ed4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008ed8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008edf:	ins    BYTE PTR es:[rdi],dx
   140008ee0:	gs jb  0x140008ee3
   140008ee3:	add    BYTE PTR [rdx],al
   140008ee5:	add    al,0x5f
   140008ee7:	outs   dx,DWORD PTR ds:[rsi]
   140008ee8:	outs   dx,BYTE PTR ds:[rsi]
   140008ee9:	gs js  0x140008f55
   140008eec:	je     0x140008eee
   140008eee:	pop    rax
   140008eef:	add    DWORD PTR [rdi+0x58],ebx
   140008ef2:	movsxd esi,DWORD PTR [rax+0x74]
   140008ef5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   140008efe:	pop    rdi
   140008eff:	(bad)  
   140008f00:	ins    DWORD PTR es:[rdi],dx
   140008f01:	jae    0x140008f6a
   140008f03:	pop    rdi
   140008f04:	gs js  0x140008f70
   140008f07:	je     0x140008f09
   140008f09:	add    BYTE PTR [rdi+0x675f5f01],ah
   140008f0f:	gs je  0x140008f7f
   140008f12:	(bad)  
   140008f13:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008f1a:	(bad)  
   140008f1b:	add    DWORD PTR [rdi+0x5f],ebx
   140008f1e:	jae    0x140008f85
   140008f20:	je     0x140008f81
   140008f22:	(bad)  
   140008f23:	jo     0x140008f95
   140008f25:	pop    rdi
   140008f26:	je     0x140008fa1
   140008f28:	jo     0x140008f8f
   140008f2a:	add    BYTE PTR [rax],al
   140008f2c:	sbb    BYTE PTR [rsi],al
   140008f2e:	gs js  0x140008f9a
   140008f31:	je     0x140008f33
   140008f33:	add    BYTE PTR [rax+0x2],bl
   140008f36:	pop    rdi
   140008f37:	gs js  0x140008fa3
   140008f3a:	je     0x140008f3c
   140008f3c:	or     al,BYTE PTR [rdx]
   140008f3e:	pop    rdi
   140008f3f:	movsxd esp,DWORD PTR [rbp+0x78]
   140008f42:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   140008f4a:	outs   dx,DWORD PTR ds:[rsi]
   140008f4b:	outs   dx,BYTE PTR ds:[rsi]
   140008f4c:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140008f52:	gs (bad) 
   140008f54:	fs ins BYTE PTR es:[rdi],dx
   140008f56:	outs   dx,DWORD PTR ds:[rsi]
   140008f57:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008f5a:	gs add al,dl
   140008f5d:	add    DWORD PTR [rdi+0x5f],ebx
   140008f60:	jae    0x140008fc7
   140008f62:	je     0x140008fd9
   140008f64:	jae    0x140008fcb
   140008f66:	jb     0x140008fd5
   140008f68:	(bad)  
   140008f69:	je     0x140008fd3
   140008f6b:	gs jb  0x140008fe0
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	loop   0x140008f74
   140008f72:	pop    rdi
   140008f73:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008f7a:	ins    DWORD PTR es:[rdi],dx
   140008f7b:	pop    rdi
   140008f7c:	gs add cl,ah
   140008f7f:	add    bl,BYTE PTR [rdi+0x69]
   140008f82:	outs   dx,BYTE PTR ds:[rsi]
   140008f83:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xa8006d72
   140008f8b:	add    DWORD PTR [rdi+0x5f],ebx
   140008f8e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
   140008f95:	add    BYTE PTR [rax+0x2],bh
   140008f98:	pop    rdi
   140008f99:	ins    WORD PTR es:[rdi],dx
   140008f9b:	outs   dx,DWORD PTR ds:[rsi]
   140008f9c:	fs add BYTE PTR gs:[rax],al
   140008fa0:	sbb    DWORD PTR [rdx],eax
   140008fa2:	pop    rdi
   140008fa3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008fa6:	ins    DWORD PTR es:[rdi],dx
   140008fa7:	outs   dx,DWORD PTR ds:[rsi]
   140008fa8:	fs add BYTE PTR gs:[rax],al
   140008fac:	xor    eax,DWORD PTR [rcx]
   140008fae:	(bad)  
   140008faf:	je     0x140009016
   140008fb1:	jb     0x140009020
   140008fb3:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008fba:	pop    rcx
   140008fbb:	pop    r8
   140008fbd:	pop    rax
   140008fbe:	pop    rdx
   140008fbf:	add    BYTE PTR [rbx],bl
   140008fc1:	add    DWORD PTR [rdi],edi
   140008fc3:	pop    rdi
   140008fc4:	je     0x14000903f
   140008fc6:	jo     0x14000902d
   140008fc8:	pop    rdi
   140008fc9:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140008fd0:	outs   dx,DWORD PTR ds:[rsi]
   140008fd1:	jb     0x140009032
   140008fd3:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140008fda:	ins    BYTE PTR es:[rdi],dx
   140008fdb:	pop    rdi
   140008fdc:	ins    DWORD PTR es:[rdi],dx
   140008fdd:	gs je  0x140009048
   140008fe0:	outs   dx,DWORD PTR ds:[rsi]
   140008fe1:	fs rex je 0x14000905e
   140008fe5:	jo     0x14000904c
   140008fe7:	pop    rdi
   140008fe8:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140008fef:	rex.RB
   140008ff0:	rex.B
   140008ff1:	pop    r8
   140008ff3:	pop    rax
   140008ff4:	pop    rdx
   140008ff5:	add    BYTE PTR [rcx+0x635f5f01],bl
   140008ffb:	jb     0x140009071
   140008ffd:	push   rbx
   140008ffe:	gs je  0x140009056
   140009001:	outs   dx,BYTE PTR ds:[rsi]
   140009002:	push   0x6c646e61
   140009007:	gs fs rex.RB js 0x14000906f
   14000900c:	gs jo  0x140009083
   14000900f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009016:	gs jb  0x140009019
   140009019:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36ed520
   14000901f:	outs   dx,DWORD PTR ds:[rsi]
   140009020:	fs gs push rax
   140009023:	outs   dx,DWORD PTR ds:[rsi]
   140009024:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000902b:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000902f:	outs   dx,DWORD PTR ds:[rsi]
   140009030:	fs gs push rax
   140009033:	outs   dx,DWORD PTR ds:[rsi]
   140009034:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000903b:	add    al,0x51
   14000903d:	jne    0x1400090a4
   14000903f:	jb     0x1400090ba
   140009041:	push   rax
   140009042:	gs jb  0x1400090ab
   140009045:	outs   dx,DWORD PTR ds:[rsi]
   140009046:	jb     0x1400090b5
   140009048:	(bad)  
   140009049:	outs   dx,BYTE PTR ds:[rsi]
   14000904a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000904d:	outs   dx,DWORD PTR ds:[rsi]
   14000904e:	jne    0x1400090be
   140009050:	je     0x1400090b7
   140009052:	jb     0x140009054
   140009054:	adc    BYTE PTR [rdx],al
   140009056:	rex.RXB
   140009057:	gs je  0x14000909d
   14000905a:	jne    0x1400090ce
   14000905c:	jb     0x1400090c3
   14000905e:	outs   dx,BYTE PTR ds:[rsi]
   14000905f:	je     0x1400090b1
   140009061:	jb     0x1400090d2
   140009063:	movsxd esp,DWORD PTR [rbp+0x73]
   140009066:	jae    0x1400090b1
   140009068:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000906c:	rex.RXB
   14000906d:	gs je  0x1400090b3
   140009070:	jne    0x1400090e4
   140009072:	jb     0x1400090d9
   140009074:	outs   dx,BYTE PTR ds:[rsi]
   140009075:	je     0x1400090cb
   140009077:	push   0x64616572
   14000907c:	rex.WB
   14000907d:	add    BYTE PTR fs:[rax],al
   140009080:	fld    QWORD PTR [rdx]
   140009082:	rex.RXB
   140009083:	gs je  0x1400090d9
   140009086:	jns    0x1400090fb
   140009088:	je     0x1400090ef
   14000908a:	ins    DWORD PTR es:[rdi],dx
   14000908b:	push   rsp
   14000908c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009093:	ins    BYTE PTR es:[rdi],dx
   140009094:	gs push rsp
   140009096:	.byte 0x69
   140009097:	ins    DWORD PTR es:[rdi],dx
   140009098:	gs
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	(bad)  
   14000a001:	(bad)  
   14000a002:	(bad)  
   14000a003:	inc    DWORD PTR [rax]
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rax+0x66],bl
   14000a00a:	add    BYTE PTR [rax+0x1],al
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rax+0x1400066],ch
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rax],cl
   14000a019:	add    BYTE PTR [eax+0x1],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rax],bl
   14000a021:	push   0x14000
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	sub    BYTE PTR [rax+0x0],ch
   14000a02b:	rex add DWORD PTR [rax],eax
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	cmp    BYTE PTR [rax+0x0],ch
   14000a033:	rex add DWORD PTR [rax],eax
	...
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	jne    0x140009fda
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    DWORD PTR [rax],eax
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	(bad)  
   14000a049:	(bad)  
   14000a04a:	(bad)  
   14000a04b:	(bad)  
   14000a04c:	(bad)  
   14000a04d:	(bad)  
   14000a04e:	(bad)  
   14000a04f:	push   QWORD PTR [rdx]
   14000a051:	movabs ds:0x5dcd00002b992ddf,al
   14000a05a:	and    dl,dl
   14000a05c:	data16 (bad) 
   14000a05e:	(bad)  
   14000a05f:	push   QWORD PTR [rax+0x68]
   14000a062:	add    BYTE PTR [rax+0x1],al
	...
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rsi],ch
   14000a071:	(bad)  
   14000a072:	push   r14
   14000a074:	gs js  0x14000a0da
   14000a077:	gs jo  0x14000a0ee
   14000a07a:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000a081:	rex
   14000a082:	add    BYTE PTR [rax],al
   14000a085:	add    BYTE PTR [rax],al
   14000a087:	add    BYTE PTR [rax+0x68],dh
   14000a08a:	add    BYTE PTR [rax+0x1],al
	...
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    BYTE PTR [rsi],ch
   14000a099:	(bad)  
   14000a09a:	push   r14
   14000a09c:	(bad)
   14000a0a1:	(bad)  
   14000a0a2:	jae    0x14000a118
   14000a0a4:	rex jae 0x14000a11b
   14000a0a7:	fs rex
   14000a0a9:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	jo     0x14000a11a
   14000a0b2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    BYTE PTR [rsi],ch
   14000a0c1:	rex.W add BYTE PTR [rax],al
	...
   14000a0d0:	jo     0x14000a13a
   14000a0d2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rsi],ch
   14000a0e1:	(bad)  
   14000a0e2:	push   r14
   14000a0e4:	(bad)  
   14000a0e5:	and    al,0x62
   14000a0e7:	(bad)  
   14000a0e8:	jae    0x14000a153
   14000a0ea:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a0ed:	je     0x14000a161
   14000a0ef:	imul   ebp,DWORD PTR [rsi+0x67],0x40667562
   14000a0f6:	rex.R push rbp
   14000a0f8:	(bad)  
   14000a0f9:	and    al,0x63
   14000a0fb:	push   0x745f7261
   14000a100:	jb     0x14000a163
   14000a102:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a10a:	fs rex
   14000a10c:	rex push rsi
   14000a10e:	(bad)  
   14000a10f:	and    al,0x61
   14000a111:	ins    BYTE PTR es:[rdi],dx
   14000a112:	ins    BYTE PTR es:[rdi],dx
   14000a113:	outs   dx,DWORD PTR ds:[rsi]
   14000a114:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a117:	outs   dx,DWORD PTR ds:[rsi]
   14000a118:	jb     0x14000a15a
   14000a11a:	rex.R
   14000a11b:	xor    al,BYTE PTR [rax+0x40]
   14000a11f:	jae    0x14000a195
   14000a121:	fs rex
   14000a123:	add    BYTE PTR [rax],al
	...
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	jo     0x14000a19a
   14000a132:	add    BYTE PTR [rax+0x1],al
	...
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rsi],ch
   14000a141:	(bad)  
   14000a142:	push   r14
   14000a144:	(bad)  
   14000a145:	and    al,0x62
   14000a147:	(bad)  
   14000a148:	jae    0x14000a1b3
   14000a14a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a14d:	je     0x14000a1c1
   14000a14f:	gs (bad) 
   14000a151:	ins    DWORD PTR es:[rdi],dx
   14000a152:	(bad)  
   14000a153:	jne    0x14000a1bb
   14000a155:	rex
   14000a156:	rex.R push rbp
   14000a158:	(bad)  
   14000a159:	and    al,0x63
   14000a15b:	push   0x745f7261
   14000a160:	jb     0x14000a1c3
   14000a162:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a16a:	fs rex
   14000a16c:	rex
   14000a16d:	rex jae 0x14000a1e4
   14000a170:	fs rex
   14000a172:	add    BYTE PTR [rax],al
	...
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rax+0x68],dh
   14000a182:	add    BYTE PTR [rax+0x1],al
	...
   14000a18d:	add    BYTE PTR [rax],al
   14000a18f:	add    BYTE PTR [rsi],ch
   14000a191:	(bad)  
   14000a192:	push   r14
   14000a194:	(bad)  
   14000a195:	and    al,0x62
   14000a197:	(bad)  
   14000a198:	jae    0x14000a203
   14000a19a:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000a19d:	jae    0x14000a213
   14000a19f:	jb     0x14000a206
   14000a1a1:	(bad)  
   14000a1a2:	ins    DWORD PTR es:[rdi],dx
   14000a1a3:	rex
   14000a1a4:	rex.R push rbp
   14000a1a6:	(bad)  
   14000a1a7:	and    al,0x63
   14000a1a9:	push   0x745f7261
   14000a1ae:	jb     0x14000a211
   14000a1b0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a1b8:	fs rex
   14000a1ba:	rex
   14000a1bb:	rex jae 0x14000a232
   14000a1be:	fs rex
   14000a1c0:	add    BYTE PTR [rax],al
   14000a1c3:	add    BYTE PTR [rax],al
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rax+0x68],dh
   14000a1ca:	add    BYTE PTR [rax+0x1],al
	...
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    BYTE PTR [rsi],ch
   14000a1d9:	(bad)  
   14000a1da:	push   r14
   14000a1dc:	(bad)  
   14000a1dd:	and    al,0x62
   14000a1df:	(bad)  
   14000a1e0:	jae    0x14000a24b
   14000a1e2:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000a1e5:	outs   dx,DWORD PTR ds:[rsi]
   14000a1e6:	jae    0x14000a228
   14000a1e8:	rex.R push rbp
   14000a1ea:	(bad)  
   14000a1eb:	and    al,0x63
   14000a1ed:	push   0x745f7261
   14000a1f2:	jb     0x14000a255
   14000a1f4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a1fc:	fs rex
   14000a1fe:	rex
   14000a1ff:	rex jae 0x14000a276
   14000a202:	fs rex
   14000a204:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rax+0x68],dh
   14000a20a:	add    BYTE PTR [rax+0x1],al
	...
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    BYTE PTR [rsi],ch
   14000a219:	(bad)  
   14000a21a:	push   r14
   14000a21c:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000a223:	gs rex jae 0x14000a29b
   14000a227:	fs rex
   14000a229:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	jo     0x14000a29a
   14000a232:	add    BYTE PTR [rax+0x1],al
	...
   14000a23d:	add    BYTE PTR [rax],al
   14000a23f:	add    BYTE PTR [rsi],ch
   14000a241:	(bad)  
   14000a242:	push   r14
   14000a244:	(bad)  
   14000a245:	and    al,0x5f
   14000a247:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000a249:	jae    0x14000a2ad
   14000a24b:	rex
   14000a24c:	rex.W
   14000a24d:	rex jae 0x14000a2c4
   14000a250:	fs rex
   14000a252:	add    BYTE PTR [rax],al
	...
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rax+0x68],dh
   14000a262:	add    BYTE PTR [rax+0x1],al
	...
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    BYTE PTR [rsi],ch
   14000a271:	(bad)  
   14000a272:	push   r14
   14000a274:	(bad)  
   14000a275:	and    al,0x62
   14000a277:	(bad)  
   14000a278:	jae    0x14000a2e3
   14000a27a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a27d:	je     0x14000a2f1
   14000a27f:	imul   ebp,DWORD PTR [rsi+0x67],0x65727473
   14000a286:	(bad)  
   14000a287:	ins    DWORD PTR es:[rdi],dx
   14000a288:	rex
   14000a289:	rex.R push rbp
   14000a28b:	(bad)  
   14000a28c:	and    al,0x63
   14000a28e:	push   0x745f7261
   14000a293:	jb     0x14000a2f6
   14000a295:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a29d:	fs rex
   14000a29f:	rex push rsi
   14000a2a1:	(bad)  
   14000a2a2:	and    al,0x61
   14000a2a4:	ins    BYTE PTR es:[rdi],dx
   14000a2a5:	ins    BYTE PTR es:[rdi],dx
   14000a2a6:	outs   dx,DWORD PTR ds:[rsi]
   14000a2a7:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a2aa:	outs   dx,DWORD PTR ds:[rsi]
   14000a2ab:	jb     0x14000a2ed
   14000a2ad:	rex.R
   14000a2ae:	xor    al,BYTE PTR [rax+0x40]
   14000a2b2:	jae    0x14000a328
   14000a2b4:	fs rex
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b9:	add    BYTE PTR [rax],al
   14000a2bb:	add    BYTE PTR [rax],al
   14000a2bd:	add    BYTE PTR [rax],al
   14000a2bf:	add    BYTE PTR [rax+0x68],dh
   14000a2c2:	add    BYTE PTR [rax+0x1],al
	...
   14000a2cd:	add    BYTE PTR [rax],al
   14000a2cf:	add    BYTE PTR [rsi],ch
   14000a2d1:	(bad)  
   14000a2d2:	push   r14
   14000a2d4:	(bad)  
   14000a2d5:	and    al,0x62
   14000a2d7:	(bad)  
   14000a2d8:	jae    0x14000a343
   14000a2da:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000a2dd:	outs   dx,DWORD PTR ds:[rsi]
   14000a2de:	jae    0x14000a354
   14000a2e0:	jb     0x14000a347
   14000a2e2:	(bad)  
   14000a2e3:	ins    DWORD PTR es:[rdi],dx
   14000a2e4:	rex
   14000a2e5:	rex.R push rbp
   14000a2e7:	(bad)  
   14000a2e8:	and    al,0x63
   14000a2ea:	push   0x745f7261
   14000a2ef:	jb     0x14000a352
   14000a2f1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a2f9:	fs rex
   14000a2fb:	rex
   14000a2fc:	rex jae 0x14000a373
   14000a2ff:	fs rex
   14000a301:	add    BYTE PTR [rax],al
	...
   14000a310:	jo     0x14000a37a
   14000a312:	add    BYTE PTR [rax+0x1],al
	...
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    BYTE PTR [rsi],ch
   14000a321:	(bad)  
   14000a322:	push   r14
   14000a324:	(bad)  
   14000a325:	and    al,0x62
   14000a327:	(bad)  
   14000a328:	jae    0x14000a393
   14000a32a:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000a32d:	jae    0x14000a3a3
   14000a32f:	jb     0x14000a396
   14000a331:	(bad)  
   14000a332:	ins    DWORD PTR es:[rdi],dx
   14000a333:	rex
   14000a334:	rex.R push rbp
   14000a336:	(bad)  
   14000a337:	and    al,0x63
   14000a339:	push   0x745f7261
   14000a33e:	jb     0x14000a3a1
   14000a340:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a348:	fs rex
   14000a34a:	rex
   14000a34b:	rex jae 0x14000a3c2
   14000a34e:	fs rex
   14000a350:	add    BYTE PTR [rax],al
   14000a353:	add    BYTE PTR [rax],al
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    BYTE PTR [rax+0x68],dh
   14000a35a:	add    BYTE PTR [rax+0x1],al
	...
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    BYTE PTR [rsi],ch
   14000a369:	(bad)  
   14000a36a:	push   r14
   14000a36c:	gs jb  0x14000a3e1
   14000a36f:	outs   dx,DWORD PTR ds:[rsi]
   14000a370:	jb     0x14000a3d1
   14000a372:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a375:	outs   dx,DWORD PTR gs:[esi]
   14000a378:	jb     0x14000a3f3
   14000a37a:	rex jae 0x14000a3f1
   14000a37d:	fs rex
   14000a37f:	add    BYTE PTR [rax],al
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	jo     0x14000a3f2
   14000a38a:	add    BYTE PTR [rax+0x1],al
	...
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rsi],ch
   14000a399:	(bad)  
   14000a39a:	push   r14
   14000a39c:	pop    rdi
   14000a39d:	rex.RXB
   14000a39e:	outs   dx,BYTE PTR gs:[rsi]
   14000a3a0:	gs jb  0x14000a40c
   14000a3a3:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000a3a6:	jb     0x14000a41a
   14000a3a8:	outs   dx,DWORD PTR ds:[rsi]
   14000a3a9:	jb     0x14000a40a
   14000a3ab:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3ae:	outs   dx,DWORD PTR gs:[esi]
   14000a3b1:	jb     0x14000a42c
   14000a3b3:	rex jae 0x14000a42a
   14000a3b6:	fs rex
   14000a3b8:	add    BYTE PTR [rax],al
   14000a3bb:	add    BYTE PTR [rax],al
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    BYTE PTR [rax+0x68],dh
   14000a3c2:	add    BYTE PTR [rax+0x1],al
	...
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	add    BYTE PTR [rsi],ch
   14000a3d1:	(bad)  
   14000a3d2:	push   r14
   14000a3d4:	pop    rdi
   14000a3d5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000a3d7:	jae    0x14000a44d
   14000a3d9:	jb     0x14000a440
   14000a3db:	(bad)  
   14000a3dc:	ins    DWORD PTR es:[rdi],dx
   14000a3dd:	pop    rdi
   14000a3de:	gs jb  0x14000a453
   14000a3e1:	outs   dx,DWORD PTR ds:[rsi]
   14000a3e2:	jb     0x14000a443
   14000a3e4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3e7:	outs   dx,DWORD PTR gs:[esi]
   14000a3ea:	jb     0x14000a465
   14000a3ec:	rex jae 0x14000a463
   14000a3ef:	fs rex
   14000a3f1:	add    BYTE PTR [rax],al
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	jo     0x14000a462
   14000a3fa:	add    BYTE PTR [rax+0x1],al
	...
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    BYTE PTR [rsi],ch
   14000a409:	(bad)  
   14000a40a:	push   r14
   14000a40c:	pop    rdi
   14000a40d:	push   rbx
   14000a40e:	jns    0x14000a483
   14000a410:	je     0x14000a477
   14000a412:	ins    DWORD PTR es:[rdi],dx
   14000a413:	pop    rdi
   14000a414:	gs jb  0x14000a489
   14000a417:	outs   dx,DWORD PTR ds:[rsi]
   14000a418:	jb     0x14000a479
   14000a41a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a41d:	outs   dx,DWORD PTR gs:[esi]
   14000a420:	jb     0x14000a49b
   14000a422:	rex jae 0x14000a499
   14000a425:	fs rex
   14000a427:	add    BYTE PTR [rax],al
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	add    BYTE PTR [rax],al
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	jo     0x14000a49a
   14000a432:	add    BYTE PTR [rax+0x1],al
	...
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rsi],ch
   14000a441:	(bad)  
   14000a442:	push   r14
   14000a444:	je     0x14000a4bf
   14000a446:	jo     0x14000a4ad
   14000a448:	pop    rdi
   14000a449:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	xor    BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	rex.RX adc BYTE PTR [rax],r8b
   14000b007:	add    al,ah
   14000b009:	jae    0x14000b00b
   14000b00b:	add    BYTE PTR [rax+0x10],dl
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	data16 adc BYTE PTR [rax],al
   14000b013:	add    al,ch
   14000b015:	jae    0x14000b017
   14000b017:	add    BYTE PTR [rax+0x10],dh
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	xchg   BYTE PTR [rax],dl
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	fdiv   DWORD PTR [rbx+0x0]
   14000b023:	add    BYTE PTR [rax+0x67000010],ah
   14000b029:	adc    al,BYTE PTR [rax]
   14000b02b:	add    BYTE PTR [rax+0x79],ch
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	adc    BYTE PTR [rdx],0x0
   14000b033:	add    BYTE PTR [rax+0x14],cl
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	rex.W jp 0x14000b03b
   14000b03b:	add    BYTE PTR [rax+0x14],dl
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	add    dl,BYTE PTR [rsi]
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	in     al,0x77
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	adc    BYTE PTR [rsi],dl
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	loopne 0x14000b065
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	test   al,0x78
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	loopne 0x14000b06d
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	(bad)  
   14000b059:	sbb    BYTE PTR [rax],al
   14000b05b:	add    BYTE PTR [rax+0x7b],dl
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	mov    al,0x18
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	mov    cl,0x19
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	adc    BYTE PTR [rbx+0x0],dh
   14000b06b:	add    BYTE PTR [rax],ah
   14000b06d:	sbb    al,BYTE PTR [rax]
   14000b06f:	add    BYTE PTR [rcx+0x800001a],bl
   14000b075:	jno    0x14000b077
   14000b077:	add    BYTE PTR [rax-0x2effffe6],ah
   14000b07d:	sbb    al,BYTE PTR [rax]
   14000b07f:	add    al,dh
   14000b081:	jo     0x14000b083
   14000b083:	add    al,ah
   14000b085:	sbb    al,BYTE PTR [rax]
   14000b087:	add    BYTE PTR [rbx+rbx*1],bl
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	add    BYTE PTR [rcx+0x0],dh
   14000b08f:	add    BYTE PTR [rax],ah
   14000b091:	sbb    eax,DWORD PTR [rax]
   14000b093:	add    BYTE PTR [rdx+0x1b],cl
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	clc    
   14000b099:	jo     0x14000b09b
   14000b09b:	add    BYTE PTR [rax+0x1b],dh
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	ficomp WORD PTR [rbx]
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	test   al,0x76
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	loopne 0x14000b0c5
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	(bad)  
   14000b0ad:	sbb    al,0x0
   14000b0af:	add    BYTE PTR [rax+0x76],cl
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	loopne 0x14000b0d2
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	or     al,0x1d
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	pushf  
   14000b0bd:	jae    0x14000b0bf
   14000b0bf:	add    BYTE PTR [rax],dl
   14000b0c1:	sbb    eax,0x1d3c0000
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	or     BYTE PTR [rbx+0x0],bh
   14000b0cb:	add    BYTE PTR [rax+0x1d],dh
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	enter  0x1d,0x0
   14000b0d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b0d5:	jae    0x14000b0d7
   14000b0d7:	add    al,dl
   14000b0d9:	sbb    eax,0x1e4c0000
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	adc    BYTE PTR [rbx+0x0],bh
   14000b0e3:	add    BYTE PTR [rax+0x1e],dl
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	sbb    DWORD PTR [rsi],0x71200000
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	nop
   14000b0f1:	(bad)  
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	neg    BYTE PTR [rsi]
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	loopne 0x14000b170
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rdi],bl
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	rex.WRB (bad) 
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	cwde   
   14000b105:	jbe    0x14000b107
   14000b107:	add    al,dl
   14000b109:	(bad)  
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	(bad)  
   14000b10d:	(bad)  
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	cld    
   14000b111:	jb     0x14000b113
   14000b113:	add    BYTE PTR [rax],ah
   14000b115:	and    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rdx+0x20],ah
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	rex.W jnp 0x14000b11f
   14000b11f:	add    BYTE PTR [rax],dl
   14000b121:	and    DWORD PTR [rax],eax
   14000b123:	add    BYTE PTR [rbx-0x23ffffdf],al
   14000b129:	ja     0x14000b12b
   14000b12b:	add    BYTE PTR [rax-0x40ffffdf],dl
   14000b131:	and    DWORD PTR [rax],eax
   14000b133:	add    ah,al
   14000b135:	ja     0x14000b137
   14000b137:	add    al,al
   14000b139:	and    DWORD PTR [rax],eax
   14000b13b:	add    dh,dh
   14000b13d:	and    DWORD PTR [rax],eax
   14000b13f:	add    al,dl
   14000b141:	ja     0x14000b143
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	and    al,BYTE PTR [rax]
   14000b147:	add    BYTE PTR [rsi],ah
   14000b149:	and    al,BYTE PTR [rax]
   14000b14b:	add    BYTE PTR [rbx+rsi*2+0x0],ah
   14000b14f:	add    BYTE PTR [rax],dh
   14000b151:	and    al,BYTE PTR [rax]
   14000b153:	add    BYTE PTR [rsi+0x22],dl
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	je     0x14000b1cd
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	(bad)  
   14000b15d:	and    al,BYTE PTR [rax]
   14000b15f:	add    BYTE PTR [rsi-0x6bffffde],al
   14000b165:	jae    0x14000b167
   14000b167:	add    BYTE PTR [rax-0x49ffffde],dl
   14000b16d:	and    al,BYTE PTR [rax]
   14000b16f:	add    BYTE PTR [rax+0x73],dl
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	shl    BYTE PTR [rdx],0x0
   14000b177:	add    BYTE PTR [rax],ch
   14000b179:	and    eax,DWORD PTR [rax]
   14000b17b:	add    BYTE PTR [rcx+rsi*2],dl
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	(bad)  
   14000b181:	and    eax,DWORD PTR [rax]
   14000b183:	add    BYTE PTR [rdx+0x24],ah
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	je     0x14000b1fb
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	movabs al,ds:0x4000024f2000024
   14000b195:	jae    0x14000b197
   14000b197:	add    BYTE PTR [rax],dh
   14000b199:	and    eax,0x257a0000
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	fs jb  0x14000b1a3
   14000b1a3:	add    BYTE PTR [rdx+0x25],bh
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	nop
   14000b1a9:	and    eax,0x72740000
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	nop
   14000b1b1:	and    eax,0x25b50000
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	mov    BYTE PTR [rdx+0x0],dh
   14000b1bb:	add    BYTE PTR [rbp-0x33ffffdb],dh
   14000b1c1:	and    eax,0x729c0000
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	int3   
   14000b1c9:	and    eax,0x25f70000
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	lods   al,BYTE PTR ds:[rsi]
   14000b1d1:	jb     0x14000b1d3
   14000b1d3:	add    BYTE PTR [rax],al
   14000b1d5:	add    BYTE PTR es:[rax],al
   14000b1d8:	cmp    esp,DWORD PTR [rsi]
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	je     0x14000b255
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	cmp    esp,DWORD PTR [rsi]
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	jrcxz  0x14000b20c
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	test   BYTE PTR [rdi+0x0],dh
   14000b1eb:	add    bl,ah
   14000b1ed:	add    BYTE PTR es:[rax],al
   14000b1f0:	repz add BYTE PTR es:[rax],al
   14000b1f4:	cwde   
   14000b1f5:	ja     0x14000b1f7
   14000b1f7:	add    bl,dh
   14000b1f9:	add    BYTE PTR es:[rax],al
   14000b1fc:	cli    
   14000b1fd:	add    BYTE PTR es:[rax],al
   14000b200:	test   al,0x77
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	(bad)  
   14000b205:	(bad)  
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	jnp    0x14000b231
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	mov    esp,0x7b000072
   14000b211:	(bad)  
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	popf   
   14000b215:	(bad)  
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	enter  0x72,0x0
   14000b21c:	popf   
   14000b21d:	(bad)  
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	mov    eax,0xdc000027
   14000b225:	jb     0x14000b227
   14000b227:	add    al,al
   14000b229:	(bad)  
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	adc    ebp,DWORD PTR [rax]
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	mov    esp,0x20000077
   14000b235:	sub    BYTE PTR [rax],al
   14000b237:	add    BYTE PTR [rdx],dh
   14000b239:	sub    BYTE PTR [rax],al
   14000b23b:	add    ah,ch
   14000b23d:	jb     0x14000b23f
   14000b23f:	add    BYTE PTR [rax+0x28],al
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	push   rdx
   14000b245:	sub    BYTE PTR [rax],al
   14000b247:	add    ah,dh
   14000b249:	jb     0x14000b24b
   14000b24b:	add    BYTE PTR [rax+0x28],ah
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	mov    ch,BYTE PTR [rax]
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	call   0xd000b2c9
   14000b259:	sub    BYTE PTR [rax],al
   14000b25b:	add    BYTE PTR [rdx-0x1fffffd8],bh
   14000b261:	jo     0x14000b263
   14000b263:	add    al,al
   14000b265:	sub    BYTE PTR [rax],al
   14000b267:	add    dl,al
   14000b269:	sub    DWORD PTR [rax],eax
   14000b26b:	add    BYTE PTR [rax],ch
   14000b26d:	jno    0x14000b26f
   14000b26f:	add    al,dl
   14000b271:	sub    DWORD PTR [rax],eax
   14000b273:	add    dl,dh
   14000b275:	sub    al,BYTE PTR [rax]
   14000b277:	add    BYTE PTR [rcx+rsi*2],bh
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	and    BYTE PTR [rbx],ch
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	rex.WRXB sub al,0x0
   14000b283:	add    BYTE PTR [rax+0x71],dl
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	push   rax
   14000b289:	sub    al,0x0
   14000b28b:	add    BYTE PTR [rcx+0x2c],dh
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	fdiv   DWORD PTR [rax+0x0]
   14000b293:	add    al,al
   14000b295:	sub    al,0x0
   14000b297:	add    ah,bl
   14000b299:	sub    al,0x0
   14000b29b:	add    al,dl
   14000b29d:	jo     0x14000b29f
   14000b29f:	add    BYTE PTR [rax],al
   14000b2a1:	sub    eax,0x2d400000
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	mov    BYTE PTR [rbx+0x0],dh
   14000b2ab:	add    BYTE PTR [rax-0x28ffffd3],ah
   14000b2b1:	sub    eax,0x73480000
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	loopne 0x14000b2e7
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	test   eax,0x6800002e
   14000b2c1:	jno    0x14000b2c3
   14000b2c3:	add    BYTE PTR [rax-0x11ffffd2],dh
   14000b2c9:	add    BYTE PTR cs:[rax],al
   14000b2cc:	(bad)  
   14000b2cd:	jno    0x14000b2cf
   14000b2cf:	add    BYTE PTR [rax+0x2f],dh
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	shr    BYTE PTR [rdi],cl
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	pop    rax
   14000b2d9:	jae    0x14000b2db
   14000b2db:	add    al,ah
   14000b2dd:	(bad)  
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	sub    eax,0x6c000030
   14000b2e5:	jae    0x14000b2e7
   14000b2e7:	add    BYTE PTR [rax],dh
   14000b2e9:	xor    BYTE PTR [rax],al
   14000b2eb:	add    BYTE PTR [rdx+0x7c000030],dl
   14000b2f1:	jae    0x14000b2f3
   14000b2f3:	add    al,dh
   14000b2f5:	xor    BYTE PTR [rax],al
   14000b2f7:	add    BYTE PTR [rdx-0xfffffcf],bh
   14000b2fd:	jae    0x14000b2ff
   14000b2ff:	add    al,al
   14000b301:	xor    DWORD PTR [rax],eax
   14000b303:	add    BYTE PTR [rax+0x32],dl
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	clc    
   14000b309:	jbe    0x14000b30b
   14000b30b:	add    BYTE PTR [rax+0x32],dl
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	mov    bh,0x32
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	add    al,0x77
   14000b316:	add    BYTE PTR [rax],al
   14000b318:	mov    bh,0x32
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	sbb    eax,0x18000034
   14000b321:	ja     0x14000b323
   14000b323:	add    BYTE PTR [rax+0x34],dh
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	add    BYTE PTR [rsi],dh
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	cmp    BYTE PTR [rdi+0x0],dh
   14000b32f:	add    BYTE PTR [rax],al
   14000b331:	add    BYTE PTR ss:[rax],al
   14000b334:	cmp    BYTE PTR [rsi],dh
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	rex.W ja 0x14000b33b
   14000b33b:	add    BYTE PTR [rax],bh
   14000b33d:	add    BYTE PTR ss:[rax],al
   14000b340:	hlt    
   14000b341:	add    BYTE PTR ss:[rax],al
   14000b344:	push   rax
   14000b345:	ja     0x14000b347
   14000b347:	add    ah,dh
   14000b349:	add    BYTE PTR ss:[rax],al
   14000b34c:	add    eax,0x64000037
   14000b351:	ja     0x14000b353
   14000b353:	add    BYTE PTR [rax+0x37],dl
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	cmp    bh,BYTE PTR [rax]
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	call   0x18000b3d7
   14000b361:	cmp    BYTE PTR [rax],al
   14000b363:	add    BYTE PTR [rbx+0x38],ah
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	movabs al,ds:0x8500003930000076
   14000b371:	rex.RX add BYTE PTR [rax],r8b
   14000b374:	sub    BYTE PTR [rax+rax*1+0x0],dh
   14000b378:	xor    BYTE PTR [rdi+0x0],al
   14000b37b:	add    BYTE PTR [rsi+0x47],dl
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	(bad)  
   14000b381:	jnp    0x14000b383
   14000b383:	add    BYTE PTR [rax+0x47],bl
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	movabs eax,ds:0xa400007b74000047
   14000b391:	rex.RXB add BYTE PTR [r8],r8b
   14000b394:	in     al,dx
   14000b395:	rex.RXB add BYTE PTR [r8],r8b
   14000b398:	push   0xffffffffec00007b
   14000b39d:	rex.RXB add BYTE PTR [r8],r8b
   14000b3a0:	(bad)  
   14000b3a1:	rex.W add BYTE PTR [rax],al
   14000b3a4:	pop    rax
   14000b3a5:	jnp    0x14000b3a7
   14000b3a7:	add    al,ch
   14000b3a9:	rex.W add BYTE PTR [rax],al
   14000b3ac:	rex.WB add BYTE PTR ss:[r8],al
   14000b3b0:	mov    ah,0x7b
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	cmp    BYTE PTR [rcx+0x0],cl
   14000b3b7:	add    al,ch
   14000b3b9:	rex.WB add BYTE PTR [r8],al
   14000b3bc:	mov    WORD PTR [rbx+0x0],?
   14000b3bf:	add    al,ch
   14000b3c1:	rex.WB add BYTE PTR [r8],al
   14000b3c4:	dec    DWORD PTR [rcx+0x0]
   14000b3c7:	add    BYTE PTR [rbx+rdi*2+0x4a500000],al
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	sahf   
   14000b3d1:	rex.WX add BYTE PTR [rax],al
   14000b3d4:	sar    BYTE PTR [rbx+0x0],0x0
   14000b3d8:	ror    BYTE PTR [rdx+0x0],0x0
   14000b3dc:	sub    cl,BYTE PTR [rbx+0x0]
   14000b3df:	add    al,cl
   14000b3e1:	jnp    0x14000b3e3
   14000b3e3:	add    BYTE PTR [rbx+rcx*2],ch
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	cli    
   14000b3e9:	rex.WXB add BYTE PTR [r8],al
   14000b3ec:	fdivr  DWORD PTR [rbx+0x0]
   14000b3ef:	add    ah,bh
   14000b3f1:	rex.WXB add BYTE PTR [r8],al
   14000b3f4:	pop    rdi
   14000b3f5:	rex.WR add BYTE PTR [rax],r8b
   14000b3f8:	loopne 0x14000b475
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	ins    BYTE PTR es:[rdi],dx
   14000b3fd:	rex.WR add BYTE PTR [rax],r8b
   14000b400:	fmul   QWORD PTR [rbp+0x0]
   14000b403:	add    al,ch
   14000b405:	jnp    0x14000b407
   14000b407:	add    BYTE PTR [rax],ch
   14000b409:	rex.WRX add BYTE PTR [rax],r8b
   14000b40c:	cmp    cl,BYTE PTR [rsi+0x0]
   14000b40f:	add    BYTE PTR [rax],dl
   14000b411:	jl     0x14000b413
   14000b413:	add    BYTE PTR [rax+0x4e],bl
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	mov    ch,0x4e
   14000b41a:	add    BYTE PTR [rax],al
   14000b41c:	sbb    BYTE PTR [rax+rax*1+0x0],bh
   14000b420:	mov    eax,0xd400004e
   14000b425:	rex.WRX add BYTE PTR [rax],r8b
   14000b428:	js     0x14000b4a6
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	(bad)  
   14000b42d:	rex.WRX add BYTE PTR [rax],r8b
   14000b430:	(bad)  
   14000b431:	rex.WRXB add BYTE PTR [r8],r8b
   14000b434:	rex.W jl 0x14000b437
   14000b437:	add    BYTE PTR [rax],ah
   14000b439:	rex.WRXB add BYTE PTR [r8],r8b
   14000b43c:	pop    rax
   14000b43d:	rex.WRXB add BYTE PTR [r8],r8b
   14000b440:	cmp    BYTE PTR [rax+rax*1+0x0],0x58
   14000b445:	rex.WRXB add BYTE PTR [r8],r8b
   14000b448:	outs   dx,DWORD PTR ds:[rsi]
   14000b449:	rex.WRXB add BYTE PTR [r8],r8b
   14000b44c:	mov    BYTE PTR [rax+rax*1+0x0],bh
   14000b450:	loopne 0x14000b4a1
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	sub    eax,0x90000050
   14000b459:	jl     0x14000b45b
   14000b45b:	add    BYTE PTR [rax+0x50],dh
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	sbb    al,0x51
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	mov    esp,0x2000007c
   14000b469:	push   rcx
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	pop    rax
   14000b46d:	push   rcx
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	enter  0x7c,0x0
   14000b474:	pop    rax
   14000b475:	push   rcx
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	nop
   14000b479:	push   rcx
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	(bad)  
   14000b47d:	jl     0x14000b47f
   14000b47f:	add    BYTE PTR [rdx+rdx*2],al
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	(bad)  
   14000b485:	push   rdx
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	cmp    BYTE PTR [rdx+0x0],bh
   14000b48b:	add    BYTE PTR [rax+0x52],bl
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	nop
   14000b491:	push   rdx
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	clc    
   14000b495:	jp     0x14000b497
   14000b497:	add    BYTE PTR [rax-0x1fffffae],ch
   14000b49d:	push   rdx
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	cwde   
   14000b4a1:	js     0x14000b4a3
   14000b4a3:	add    al,bh
   14000b4a5:	push   rdx
   14000b4a6:	add    BYTE PTR [rax],al
   14000b4a8:	xor    BYTE PTR [rbx+0x0],dl
   14000b4ab:	add    BYTE PTR [rax+0x79],bl
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	push   rax
   14000b4b1:	push   rbx
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	jle    0x14000b509
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	nop
   14000b4b9:	jbe    0x14000b4bb
   14000b4bb:	add    BYTE PTR [rax-0xbffffad],dh
   14000b4c1:	push   rbx
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	rex jb 0x14000b4c7
   14000b4c7:	add    ah,dh
   14000b4c9:	push   rbx
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	xor    dl,BYTE PTR [rax+rax*1+0x0]
   14000b4d0:	push   rax
   14000b4d1:	jb     0x14000b4d3
   14000b4d3:	add    BYTE PTR [rax+0x54],dl
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	xchg   DWORD PTR [rax+rax*1+0x0],edx
   14000b4dc:	xor    BYTE PTR [rsi+0x0],dh
   14000b4df:	add    BYTE PTR [rbx],ch
   14000b4e1:	push   rbp
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	movsxd edx,DWORD PTR [rbp+0x0]
   14000b4e7:	add    BYTE PTR [rax],bh
   14000b4e9:	jbe    0x14000b4eb
   14000b4eb:	add    BYTE PTR [rdi+0x55],ch
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	mov    dl,BYTE PTR [rbp+0x0]
   14000b4f3:	add    BYTE PTR [rbx+rdi*2+0x558a0000],ch
   14000b4fa:	add    BYTE PTR [rax],al
   14000b4fc:	test   al,0x55
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	or     BYTE PTR [rax+rax*1+0x0],bh
   14000b504:	test   al,0x55
   14000b506:	add    BYTE PTR [rax],al
   14000b508:	(bad)  
   14000b509:	push   rbp
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	rex jl 0x14000b50f
   14000b50f:	add    ah,dl
   14000b511:	push   rbp
   14000b512:	add    BYTE PTR [rax],al
   14000b514:	adc    eax,0x70000056
   14000b519:	jl     0x14000b51b
   14000b51b:	add    BYTE PTR [rax],ah
   14000b51d:	push   rsi
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	rex push rsi
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	mov    ah,0x7c
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	jo     0x14000b580
   14000b52a:	add    BYTE PTR [rax],al
   14000b52c:	mov    ecx,0x7c000056
   14000b531:	jnp    0x14000b533
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c008:	add    al,0x0
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	sbb    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	sbb    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x0],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	add    al,0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    DWORD PTR [rax],eax
   14000c028:	add    DWORD PTR [rax],eax
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	xor    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax+0x0],al
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	add    al,0x0
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    DWORD PTR [rax],eax
   14000c040:	or     DWORD PTR [rax+rax*1],eax
   14000c043:	add    BYTE PTR [rax+0x0],cl
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	pop    rax
   14000c049:	rol    BYTE PTR [rax],0x0
   14000c04c:	pop    rdx
   14000c04d:	add    DWORD PTR [rax],eax
   14000c04f:	add    ah,ah
   14000c051:	add    al,0x0
   14000c053:	add    BYTE PTR [rax],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rcx+riz*2],bh
   14000c05a:	jae    0x14000c0cf
   14000c05c:	gs ins DWORD PTR es:[rdi],dx
   14000c05e:	(bad)  
   14000c05f:	ins    BYTE PTR es:[rdi],dx
   14000c060:	jns    0x14000c082
   14000c062:	js     0x14000c0d1
   14000c064:	ins    BYTE PTR es:[rdi],dx
   14000c065:	outs   dx,BYTE PTR ds:[rsi]
   14000c066:	jae    0x14000c0a5
   14000c068:	and    dh,BYTE PTR [rbp+0x72]
   14000c06b:	outs   dx,BYTE PTR ds:[rsi]
   14000c06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c06f:	push   0x73616d65
   14000c074:	sub    eax,0x7263696d
   14000c079:	outs   dx,DWORD PTR ds:[rsi]
   14000c07a:	jae    0x14000c0eb
   14000c07c:	data16 je 0x14000c0ac
   14000c07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c082:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c085:	ins    DWORD PTR es:[rdi],dx
   14000c086:	cs jbe 0x14000c0ba
   14000c089:	and    ah,BYTE PTR [rax]
   14000c08b:	ins    DWORD PTR es:[rdi],dx
   14000c08c:	(bad)  
   14000c08d:	outs   dx,BYTE PTR ds:[rsi]
   14000c08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c095:	jb     0x14000c10a
   14000c097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c09e:	xor    BYTE PTR [rdx],ah
   14000c0a0:	ds or  eax,0x3c20200a
   14000c0a6:	je     0x14000c11a
   14000c0a8:	jne    0x14000c11d
   14000c0aa:	je     0x14000c0f5
   14000c0ac:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ad:	outs   dx,WORD PTR ds:[rsi]
   14000c0af:	and    BYTE PTR [rax+0x6d],bh
   14000c0b2:	ins    BYTE PTR es:[rdi],dx
   14000c0b3:	outs   dx,BYTE PTR ds:[rsi]
   14000c0b4:	jae    0x14000c0f3
   14000c0b6:	and    dh,BYTE PTR [rbp+0x72]
   14000c0b9:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c0bd:	push   0x73616d65
   14000c0c2:	sub    eax,0x7263696d
   14000c0c7:	outs   dx,DWORD PTR ds:[rsi]
   14000c0c8:	jae    0x14000c139
   14000c0ca:	data16 je 0x14000c0fa
   14000c0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c0d3:	ins    DWORD PTR es:[rdi],dx
   14000c0d4:	cs jbe 0x14000c10a
   14000c0d7:	and    bh,BYTE PTR [rsi]
   14000c0d9:	or     eax,0x2020200a
   14000c0de:	and    BYTE PTR [rbx+rsi*2],bh
   14000c0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c0ed:	and    BYTE PTR [rax],ah
   14000c0ef:	and    BYTE PTR [rax],ah
   14000c0f1:	cmp    al,0x72
   14000c0f3:	gs jno 0x14000c16b
   14000c0f6:	gs jae 0x14000c16d
   14000c0f9:	gs fs push rax
   14000c0fc:	jb     0x14000c167
   14000c0fe:	jbe    0x14000c169
   14000c100:	ins    BYTE PTR es:[rdi],dx
   14000c101:	gs addr32 gs jae 0x14000c144
   14000c106:	or     eax,0x2020200a
   14000c10b:	and    BYTE PTR [rax],ah
   14000c10d:	and    BYTE PTR [rax],ah
   14000c10f:	and    BYTE PTR [rdx+rsi*2],bh
   14000c112:	gs jno 0x14000c18a
   14000c115:	gs jae 0x14000c18c
   14000c118:	gs fs rex.RB js 0x14000c182
   14000c11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c127:	ins    BYTE PTR es:[rdi],dx
   14000c128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c12c:	gs ins BYTE PTR es:[rdi],dx
   14000c12e:	cmp    eax,0x49736122
   14000c133:	outs   dx,BYTE PTR ds:[rsi]
   14000c134:	jbe    0x14000c1a5
   14000c136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c13a:	and    BYTE PTR [rbp+0x69],dh
   14000c13d:	movsxd esp,DWORD PTR [r11+0x65]
   14000c141:	jae    0x14000c1b6
   14000c143:	cmp    eax,0x6c616622
   14000c148:	jae    0x14000c1af
   14000c14a:	and    bh,BYTE PTR [rsi]
   14000c14c:	cmp    al,0x2f
   14000c14e:	jb     0x14000c1b5
   14000c150:	jno    0x14000c1c7
   14000c152:	gs jae 0x14000c1c9
   14000c155:	gs fs rex.RB js 0x14000c1bf
   14000c15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c164:	ins    BYTE PTR es:[rdi],dx
   14000c165:	ds or  eax,0x2020200a
   14000c16b:	and    BYTE PTR [rax],ah
   14000c16d:	and    BYTE PTR [rdi+rbp*1],bh
   14000c170:	jb     0x14000c1d7
   14000c172:	jno    0x14000c1e9
   14000c174:	gs jae 0x14000c1eb
   14000c177:	gs fs push rax
   14000c17a:	jb     0x14000c1e5
   14000c17c:	jbe    0x14000c1e7
   14000c17e:	ins    BYTE PTR es:[rdi],dx
   14000c17f:	gs addr32 gs jae 0x14000c1c2
   14000c184:	or     eax,0x2020200a
   14000c189:	and    BYTE PTR [rdi+rbp*1],bh
   14000c18c:	jae    0x14000c1f3
   14000c18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c199:	cmp    al,0x2f
   14000c19b:	je     0x14000c20f
   14000c19d:	jne    0x14000c212
   14000c19f:	je     0x14000c1ea
   14000c1a1:	outs   dx,BYTE PTR ds:[rsi]
   14000c1a2:	outs   dx,WORD PTR ds:[rsi]
   14000c1a4:	ds or  eax,0x612f3c0a
   14000c1aa:	jae    0x14000c21f
   14000c1ac:	gs ins DWORD PTR es:[rdi],dx
   14000c1ae:	(bad)  
   14000c1af:	ins    BYTE PTR es:[rdi],dx
   14000c1b0:	jns    0x14000c1f0
   14000c1b2:	push   rax
   14000c1b3:	rex.B
